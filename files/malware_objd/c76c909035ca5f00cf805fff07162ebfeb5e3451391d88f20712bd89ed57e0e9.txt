
c76c909035ca5f00cf805fff07162ebfeb5e3451391d88f20712bd89ed57e0e9.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xc
  401006:	mov    eax,DWORD PTR [ebp+0x8]
  401009:	mov    DWORD PTR [ebp-0x8],eax
  40100c:	mov    ecx,DWORD PTR [ebp+0xc]
  40100f:	mov    DWORD PTR [ebp-0xc],ecx
  401012:	mov    DWORD PTR [ebp-0x4],0x22b
  401019:	mov    edx,DWORD PTR [ebp-0x8]
  40101c:	cmp    edx,DWORD PTR [ebp-0xc]
  40101f:	jae    0x40102f
  401021:	mov    DWORD PTR [ebp-0x4],0x22b
  401028:	mov    eax,DWORD PTR [ebp-0x8]
  40102b:	jmp    0x401039
  40102d:	jmp    0x401039
  40102f:	mov    DWORD PTR [ebp-0x4],0x22b
  401036:	mov    eax,DWORD PTR [ebp-0xc]
  401039:	mov    esp,ebp
  40103b:	pop    ebp
  40103c:	ret    
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	sub    esp,0xc
  401046:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  40104d:	mov    DWORD PTR [ebp-0xc],0x3000
  401054:	mov    DWORD PTR [ebp-0x4],0x40
  40105b:	mov    eax,DWORD PTR [ebp-0x4]
  40105e:	push   eax
  40105f:	mov    ecx,DWORD PTR [ebp-0xc]
  401062:	push   ecx
  401063:	mov    edx,DWORD PTR [ebp+0x8]
  401066:	push   edx
  401067:	push   0x0
  401069:	push   0xffffffff
  40106b:	call   DWORD PTR ds:0x4020ec
  401071:	mov    esp,ebp
  401073:	pop    ebp
  401074:	ret    
  401075:	int3   
  401076:	int3   
  401077:	int3   
  401078:	int3   
  401079:	int3   
  40107a:	int3   
  40107b:	int3   
  40107c:	int3   
  40107d:	int3   
  40107e:	int3   
  40107f:	int3   
  401080:	push   ebp
  401081:	mov    ebp,esp
  401083:	pop    ebp
  401084:	ret    
  401085:	int3   
  401086:	int3   
  401087:	int3   
  401088:	int3   
  401089:	int3   
  40108a:	int3   
  40108b:	int3   
  40108c:	int3   
  40108d:	int3   
  40108e:	int3   
  40108f:	int3   
  401090:	push   ebp
  401091:	mov    ebp,esp
  401093:	mov    DWORD PTR ds:0x4021a0,0x403004
  40109d:	pop    ebp
  40109e:	ret    
  40109f:	int3   
  4010a0:	push   ebp
  4010a1:	mov    ebp,esp
  4010a3:	mov    DWORD PTR ds:0x4021a0,0x41b820
  4010ad:	pop    ebp
  4010ae:	ret    
  4010af:	int3   
  4010b0:	push   ebp
  4010b1:	mov    ebp,esp
  4010b3:	mov    eax,DWORD PTR [ebp+0x8]
  4010b6:	mov    eax,DWORD PTR [eax-0x4]
  4010b9:	pop    ebp
  4010ba:	ret    
  4010bb:	int3   
  4010bc:	int3   
  4010bd:	int3   
  4010be:	int3   
  4010bf:	int3   
  4010c0:	push   ebp
  4010c1:	mov    ebp,esp
  4010c3:	mov    eax,DWORD PTR [ebp+0xc]
  4010c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c9:	movzx  eax,WORD PTR [ecx+eax*2]
  4010cd:	pop    ebp
  4010ce:	ret    
  4010cf:	int3   
  4010d0:	push   ebp
  4010d1:	mov    ebp,esp
  4010d3:	sub    esp,0xc
  4010d6:	mov    DWORD PTR [ebp-0x4],0x0
  4010dd:	jmp    0x4010e8
  4010df:	mov    eax,DWORD PTR [ebp-0x4]
  4010e2:	add    eax,0x1
  4010e5:	mov    DWORD PTR [ebp-0x4],eax
  4010e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4010eb:	cmp    ecx,DWORD PTR [ebp+0x8]
  4010ee:	jae    0x401153
  4010f0:	mov    edx,DWORD PTR [ebp-0x4]
  4010f3:	push   edx
  4010f4:	mov    eax,DWORD PTR [ebp+0xc]
  4010f7:	push   eax
  4010f8:	call   0x4010c0
  4010fd:	add    esp,0x8
  401100:	sar    eax,0xc
  401103:	cmp    eax,0x3
  401106:	jne    0x401151
  401108:	mov    DWORD PTR [ebp-0xc],0xfff
  40110f:	mov    ecx,DWORD PTR [ebp-0x4]
  401112:	push   ecx
  401113:	mov    edx,DWORD PTR [ebp+0xc]
  401116:	push   edx
  401117:	call   0x4010c0
  40111c:	add    esp,0x8
  40111f:	and    eax,DWORD PTR [ebp-0xc]
  401122:	add    eax,0x2d23
  401127:	mov    DWORD PTR [ebp-0x8],eax
  40112a:	mov    eax,DWORD PTR [ebp+0x18]
  40112d:	mov    ecx,DWORD PTR [ebp+0x10]
  401130:	add    ecx,DWORD PTR [eax]
  401132:	mov    edx,DWORD PTR [ebp-0x8]
  401135:	mov    eax,DWORD PTR [ecx+edx*1-0x2d23]
  40113c:	add    eax,DWORD PTR [ebp+0x14]
  40113f:	mov    ecx,DWORD PTR [ebp+0x18]
  401142:	mov    edx,DWORD PTR [ebp+0x10]
  401145:	add    edx,DWORD PTR [ecx]
  401147:	mov    ecx,DWORD PTR [ebp-0x8]
  40114a:	mov    DWORD PTR [edx+ecx*1-0x2d23],eax
  401151:	jmp    0x4010df
  401153:	mov    esp,ebp
  401155:	pop    ebp
  401156:	ret    
  401157:	int3   
  401158:	int3   
  401159:	int3   
  40115a:	int3   
  40115b:	int3   
  40115c:	int3   
  40115d:	int3   
  40115e:	int3   
  40115f:	int3   
  401160:	push   ebp
  401161:	mov    ebp,esp
  401163:	sub    esp,0x30
  401166:	mov    DWORD PTR [ebp-0x8],0x11cb
  40116d:	mov    DWORD PTR [ebp-0x10],0x0
  401174:	jmp    0x40117f
  401176:	mov    eax,DWORD PTR [ebp-0x10]
  401179:	add    eax,0x4
  40117c:	mov    DWORD PTR [ebp-0x10],eax
  40117f:	mov    ecx,DWORD PTR [ebp-0x10]
  401182:	cmp    ecx,DWORD PTR [ebp+0xc]
  401185:	jae    0x401246
  40118b:	mov    DWORD PTR [ebp-0x8],0x4189
  401192:	cmp    DWORD PTR [ebp-0x10],0x0
  401196:	jne    0x4011e8
  401198:	push   0x104
  40119d:	push   0x4021a4
  4011a2:	call   DWORD PTR ds:0x4020f0
  4011a8:	push   0x402000
  4011ad:	push   0x4021a4
  4011b2:	call   DWORD PTR ds:0x4020f4
  4011b8:	push   0x0
  4011ba:	push   0x80
  4011bf:	push   0x3
  4011c1:	push   0x0
  4011c3:	push   0x3
  4011c5:	push   0x1
  4011c7:	push   0x4021a4
  4011cc:	call   DWORD PTR ds:0x4020f8
  4011d2:	mov    DWORD PTR [ebp-0x4],eax
  4011d5:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  4011d9:	je     0x4011e1
  4011db:	cmp    DWORD PTR [ebp-0x4],0x0
  4011df:	jne    0x4011e8
  4011e1:	mov    eax,0x42
  4011e6:	jmp    0x401246
  4011e8:	mov    edx,DWORD PTR [ebp-0x10]
  4011eb:	add    edx,0x563
  4011f1:	mov    DWORD PTR [ebp-0x28],edx
  4011f4:	mov    eax,DWORD PTR [ebp-0x28]
  4011f7:	mov    DWORD PTR [ebp-0x24],eax
  4011fa:	mov    ecx,DWORD PTR [ebp-0x24]
  4011fd:	mov    DWORD PTR [ebp-0x20],ecx
  401200:	mov    edx,DWORD PTR [ebp-0x20]
  401203:	mov    DWORD PTR [ebp-0x1c],edx
  401206:	mov    eax,DWORD PTR [ebp-0x1c]
  401209:	mov    DWORD PTR [ebp-0x30],eax
  40120c:	mov    ecx,DWORD PTR [ebp-0x30]
  40120f:	mov    DWORD PTR [ebp-0x14],ecx
  401212:	mov    edx,DWORD PTR [ebp-0x10]
  401215:	mov    DWORD PTR [ebp-0x18],edx
  401218:	mov    eax,DWORD PTR [ebp+0x8]
  40121b:	add    eax,DWORD PTR [ebp-0x10]
  40121e:	mov    DWORD PTR [ebp-0x2c],eax
  401221:	mov    ecx,DWORD PTR [ebp-0x2c]
  401224:	mov    edx,DWORD PTR [ecx]
  401226:	add    edx,DWORD PTR [ebp-0x18]
  401229:	mov    eax,DWORD PTR [ebp-0x2c]
  40122c:	mov    DWORD PTR [eax],edx
  40122e:	mov    ecx,DWORD PTR [ebp+0x8]
  401231:	add    ecx,DWORD PTR [ebp-0x10]
  401234:	mov    edx,DWORD PTR [ecx]
  401236:	xor    edx,DWORD PTR [ebp-0x14]
  401239:	mov    eax,DWORD PTR [ebp+0x8]
  40123c:	add    eax,DWORD PTR [ebp-0x10]
  40123f:	mov    DWORD PTR [eax],edx
  401241:	jmp    0x401176
  401246:	mov    esp,ebp
  401248:	pop    ebp
  401249:	ret    
  40124a:	int3   
  40124b:	int3   
  40124c:	int3   
  40124d:	int3   
  40124e:	int3   
  40124f:	int3   
  401250:	push   ebp
  401251:	mov    ebp,esp
  401253:	sub    esp,0x14
  401256:	mov    eax,DWORD PTR [ebp+0x8]
  401259:	cmp    DWORD PTR [eax+0x4],0x0
  40125d:	je     0x4012a7
  40125f:	mov    DWORD PTR [ebp-0x14],0x2a1
  401266:	mov    ecx,DWORD PTR [ebp+0x8]
  401269:	mov    edx,DWORD PTR [ecx+0x4]
  40126c:	sub    edx,0x8
  40126f:	shr    edx,1
  401271:	mov    DWORD PTR [ebp-0xc],edx
  401274:	mov    eax,DWORD PTR [ebp+0x8]
  401277:	add    eax,0x8
  40127a:	mov    DWORD PTR [ebp-0x10],eax
  40127d:	mov    ecx,DWORD PTR [ebp+0x8]
  401280:	push   ecx
  401281:	mov    edx,DWORD PTR [ebp+0x10]
  401284:	push   edx
  401285:	mov    eax,DWORD PTR [ebp+0xc]
  401288:	push   eax
  401289:	mov    ecx,DWORD PTR [ebp-0x10]
  40128c:	push   ecx
  40128d:	mov    edx,DWORD PTR [ebp-0xc]
  401290:	push   edx
  401291:	call   0x4010d0
  401296:	add    esp,0x14
  401299:	mov    eax,DWORD PTR [ebp+0x8]
  40129c:	mov    ecx,DWORD PTR [ebp+0x8]
  40129f:	add    ecx,DWORD PTR [eax+0x4]
  4012a2:	mov    DWORD PTR [ebp+0x8],ecx
  4012a5:	jmp    0x401256
  4012a7:	mov    esp,ebp
  4012a9:	pop    ebp
  4012aa:	ret    
  4012ab:	int3   
  4012ac:	int3   
  4012ad:	int3   
  4012ae:	int3   
  4012af:	int3   
  4012b0:	push   ebp
  4012b1:	mov    ebp,esp
  4012b3:	sub    esp,0x10
  4012b6:	mov    DWORD PTR [ebp-0x10],0x60
  4012bd:	mov    DWORD PTR [ebp-0x4],0x402018
  4012c4:	push   0x0
  4012c6:	call   DWORD PTR ds:0x402108
  4012cc:	test   eax,eax
  4012ce:	jne    0x4012d7
  4012d0:	xor    eax,eax
  4012d2:	jmp    0x401365
  4012d7:	mov    DWORD PTR [ebp-0x10],0x3116
  4012de:	push   0x402024
  4012e3:	push   0x402030
  4012e8:	call   DWORD PTR ds:0x4020fc
  4012ee:	push   eax
  4012ef:	call   DWORD PTR ds:0x402100
  4012f5:	mov    ds:0x4022a8,eax
  4012fa:	mov    DWORD PTR [ebp-0x10],0x60
  401301:	mov    eax,DWORD PTR [ebp-0x4]
  401304:	mov    BYTE PTR [eax+0x1],0x4f
  401308:	lea    ecx,[ebp-0xc]
  40130b:	push   ecx
  40130c:	mov    edx,DWORD PTR [ebp-0x4]
  40130f:	push   edx
  401310:	push   0x80000002
  401315:	call   DWORD PTR ds:0x4022a8
  40131b:	test   eax,eax
  40131d:	je     0x401323
  40131f:	xor    eax,eax
  401321:	jmp    0x401365
  401323:	mov    DWORD PTR [ebp-0x10],0x60
  40132a:	lea    eax,[ebp-0xc]
  40132d:	push   eax
  40132e:	push   0x402040
  401333:	mov    ecx,DWORD PTR [ebp-0xc]
  401336:	push   ecx
  401337:	call   DWORD PTR ds:0x4022a8
  40133d:	test   eax,eax
  40133f:	je     0x401345
  401341:	xor    eax,eax
  401343:	jmp    0x401365
  401345:	lea    edx,[ebp-0xc]
  401348:	push   edx
  401349:	push   0x402088
  40134e:	mov    eax,DWORD PTR [ebp-0xc]
  401351:	push   eax
  401352:	call   DWORD PTR ds:0x4022a8
  401358:	test   eax,eax
  40135a:	jne    0x401360
  40135c:	xor    eax,eax
  40135e:	jmp    0x401365
  401360:	call   0x401090
  401365:	mov    esp,ebp
  401367:	pop    ebp
  401368:	ret    0x10
  40136b:	int3   
  40136c:	int3   
  40136d:	int3   
  40136e:	int3   
  40136f:	int3   
  401370:	push   ebp
  401371:	mov    ebp,esp
  401373:	sub    esp,0x12c
  401379:	mov    DWORD PTR [ebp-0x120],0x7c
  401383:	mov    DWORD PTR [ebp-0x114],0x0
  40138d:	mov    eax,ds:0x4020f0
  401392:	mov    DWORD PTR [ebp-0x4],eax
  401395:	push   0x104
  40139a:	lea    ecx,[ebp-0x110]
  4013a0:	push   ecx
  4013a1:	call   DWORD PTR [ebp-0x4]
  4013a4:	mov    edx,DWORD PTR ds:0x4020f4
  4013aa:	mov    DWORD PTR [ebp-0x124],edx
  4013b0:	mov    eax,ds:0x4020f8
  4013b5:	mov    DWORD PTR [ebp-0x118],eax
  4013bb:	mov    DWORD PTR [ebp-0x128],0x0
  4013c5:	jmp    0x4013d6
  4013c7:	mov    ecx,DWORD PTR [ebp-0x128]
  4013cd:	add    ecx,0x1
  4013d0:	mov    DWORD PTR [ebp-0x128],ecx
  4013d6:	mov    edx,DWORD PTR [ebp-0x128]
  4013dc:	cmp    edx,DWORD PTR [ebp+0x10]
  4013df:	jge    0x40141a
  4013e1:	mov    eax,DWORD PTR [ebp+0xc]
  4013e4:	add    eax,DWORD PTR [ebp-0x128]
  4013ea:	movzx  ecx,BYTE PTR [eax]
  4013ed:	mov    DWORD PTR [ebp-0x12c],ecx
  4013f3:	mov    DWORD PTR [ebp-0x120],0x7c
  4013fd:	mov    edx,DWORD PTR [ebp+0x8]
  401400:	add    edx,DWORD PTR [ebp-0x128]
  401406:	mov    al,BYTE PTR [ebp-0x12c]
  40140c:	mov    BYTE PTR [edx],al
  40140e:	mov    DWORD PTR [ebp-0x120],0x33
  401418:	jmp    0x4013c7
  40141a:	mov    esp,ebp
  40141c:	pop    ebp
  40141d:	ret    
  40141e:	int3   
  40141f:	int3   
  401420:	push   ebp
  401421:	mov    ebp,esp
  401423:	sub    esp,0x70
  401426:	mov    DWORD PTR ds:0x4022ac,ebp
  40142c:	pusha  
  40142d:	mov    DWORD PTR [ebp-0x3c],0x0
  401434:	mov    DWORD PTR [ebp-0x50],0x80000002
  40143b:	mov    DWORD PTR [ebp-0x14],0x0
  401442:	mov    DWORD PTR [ebp-0x34],0x64
  401449:	mov    DWORD PTR [ebp-0x1c],0xf
  401450:	mov    DWORD PTR [ebp-0x3c],0x0
  401457:	mov    DWORD PTR [ebp-0x24],0x0
  40145e:	mov    DWORD PTR [ebp-0x30],0x1
  401465:	mov    DWORD PTR [ebp-0x18],0x3
  40146c:	push   0x104
  401471:	push   0x4021a4
  401476:	call   DWORD PTR ds:0x4020f0
  40147c:	push   0x2
  40147e:	push   0x2
  401480:	push   0x2
  401482:	push   0x2
  401484:	call   0x4012b0
  401489:	mov    eax,ds:0x4021a0
  40148e:	push   eax
  40148f:	call   0x4010b0
  401494:	add    esp,0x4
  401497:	mov    DWORD PTR [ebp-0x40],eax
  40149a:	mov    ecx,DWORD PTR [ebp-0x40]
  40149d:	push   ecx
  40149e:	call   0x401040
  4014a3:	add    esp,0x4
  4014a6:	mov    DWORD PTR [ebp-0x38],eax
  4014a9:	mov    edx,DWORD PTR [ebp-0x40]
  4014ac:	push   edx
  4014ad:	push   0x0
  4014af:	mov    eax,DWORD PTR [ebp-0x38]
  4014b2:	push   eax
  4014b3:	call   0x401080
  4014b8:	add    esp,0xc
  4014bb:	mov    ecx,DWORD PTR [ebp-0x40]
  4014be:	mov    DWORD PTR [ebp-0x48],ecx
  4014c1:	mov    edx,DWORD PTR [ebp-0x3c]
  4014c4:	cmp    edx,DWORD PTR [ebp-0x40]
  4014c7:	jae    0x401518
  4014c9:	mov    eax,DWORD PTR [ebp-0x48]
  4014cc:	push   eax
  4014cd:	mov    ecx,DWORD PTR [ebp-0x34]
  4014d0:	push   ecx
  4014d1:	call   0x401000
  4014d6:	add    esp,0x8
  4014d9:	mov    DWORD PTR [ebp-0x4c],eax
  4014dc:	mov    edx,DWORD PTR [ebp-0x4c]
  4014df:	push   edx
  4014e0:	mov    eax,ds:0x4021a0
  4014e5:	add    eax,DWORD PTR [ebp-0x24]
  4014e8:	push   eax
  4014e9:	mov    ecx,DWORD PTR [ebp-0x38]
  4014ec:	add    ecx,DWORD PTR [ebp-0x3c]
  4014ef:	push   ecx
  4014f0:	call   0x401370
  4014f5:	add    esp,0xc
  4014f8:	mov    edx,DWORD PTR [ebp-0x1c]
  4014fb:	add    edx,DWORD PTR [ebp-0x34]
  4014fe:	add    edx,DWORD PTR [ebp-0x24]
  401501:	mov    DWORD PTR [ebp-0x24],edx
  401504:	mov    eax,DWORD PTR [ebp-0x3c]
  401507:	add    eax,DWORD PTR [ebp-0x34]
  40150a:	mov    DWORD PTR [ebp-0x3c],eax
  40150d:	mov    ecx,DWORD PTR [ebp-0x48]
  401510:	sub    ecx,DWORD PTR [ebp-0x4c]
  401513:	mov    DWORD PTR [ebp-0x48],ecx
  401516:	jmp    0x4014c1
  401518:	mov    edx,DWORD PTR [ebp-0x40]
  40151b:	push   edx
  40151c:	mov    eax,DWORD PTR [ebp-0x38]
  40151f:	push   eax
  401520:	call   0x401160
  401525:	add    esp,0x8
  401528:	mov    DWORD PTR [ebp-0x24],0x0
  40152f:	mov    DWORD PTR [ebp-0x60],0x0
  401536:	call   0x4010a0
  40153b:	mov    ecx,DWORD PTR ds:0x4021a0
  401541:	push   ecx
  401542:	call   0x4010b0
  401547:	add    esp,0x4
  40154a:	mov    DWORD PTR [ebp-0x64],eax
  40154d:	mov    edx,DWORD PTR [ebp-0x64]
  401550:	push   edx
  401551:	call   0x401040
  401556:	add    esp,0x4
  401559:	mov    DWORD PTR [ebp-0x20],eax
  40155c:	mov    eax,DWORD PTR [ebp-0x64]
  40155f:	push   eax
  401560:	push   0x0
  401562:	mov    ecx,DWORD PTR [ebp-0x20]
  401565:	push   ecx
  401566:	call   0x401080
  40156b:	add    esp,0xc
  40156e:	mov    edx,DWORD PTR [ebp-0x64]
  401571:	mov    DWORD PTR [ebp-0x6c],edx
  401574:	mov    eax,DWORD PTR [ebp-0x60]
  401577:	cmp    eax,DWORD PTR [ebp-0x64]
  40157a:	jae    0x4015cc
  40157c:	mov    ecx,DWORD PTR [ebp-0x6c]
  40157f:	push   ecx
  401580:	mov    edx,DWORD PTR [ebp-0x34]
  401583:	push   edx
  401584:	call   0x401000
  401589:	add    esp,0x8
  40158c:	mov    DWORD PTR [ebp-0x70],eax
  40158f:	mov    eax,DWORD PTR [ebp-0x70]
  401592:	push   eax
  401593:	mov    ecx,DWORD PTR ds:0x4021a0
  401599:	add    ecx,DWORD PTR [ebp-0x24]
  40159c:	push   ecx
  40159d:	mov    edx,DWORD PTR [ebp-0x20]
  4015a0:	add    edx,DWORD PTR [ebp-0x60]
  4015a3:	push   edx
  4015a4:	call   0x401370
  4015a9:	add    esp,0xc
  4015ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4015af:	add    eax,DWORD PTR [ebp-0x34]
  4015b2:	add    eax,DWORD PTR [ebp-0x24]
  4015b5:	mov    DWORD PTR [ebp-0x24],eax
  4015b8:	mov    ecx,DWORD PTR [ebp-0x60]
  4015bb:	add    ecx,DWORD PTR [ebp-0x34]
  4015be:	mov    DWORD PTR [ebp-0x60],ecx
  4015c1:	mov    edx,DWORD PTR [ebp-0x6c]
  4015c4:	sub    edx,DWORD PTR [ebp-0x70]
  4015c7:	mov    DWORD PTR [ebp-0x6c],edx
  4015ca:	jmp    0x401574
  4015cc:	mov    eax,DWORD PTR [ebp-0x64]
  4015cf:	push   eax
  4015d0:	mov    ecx,DWORD PTR [ebp-0x20]
  4015d3:	push   ecx
  4015d4:	call   0x401160
  4015d9:	add    esp,0x8
  4015dc:	mov    edx,DWORD PTR [ebp-0x38]
  4015df:	mov    eax,DWORD PTR [ebp-0x20]
  4015e2:	mov    DWORD PTR [edx],eax
  4015e4:	push   0x17000
  4015e9:	call   0x401040
  4015ee:	add    esp,0x4
  4015f1:	mov    DWORD PTR [ebp-0xc],eax
  4015f4:	push   0x15500
  4015f9:	mov    ecx,DWORD PTR [ebp-0x38]
  4015fc:	push   ecx
  4015fd:	mov    edx,DWORD PTR [ebp-0xc]
  401600:	add    edx,0x200
  401606:	push   edx
  401607:	call   0x401370
  40160c:	add    esp,0xc
  40160f:	mov    eax,DWORD PTR [ebp-0xc]
  401612:	sub    eax,0x400000
  401617:	push   eax
  401618:	mov    ecx,DWORD PTR [ebp-0xc]
  40161b:	push   ecx
  40161c:	mov    edx,DWORD PTR [ebp-0x20]
  40161f:	push   edx
  401620:	call   0x401250
  401625:	add    esp,0xc
  401628:	mov    ecx,DWORD PTR ds:0x4022ac
  40162e:	jmp    0x401631
  401630:	ret    
  401631:	mov    esp,ecx
  401633:	pop    eax
  401634:	mov    ecx,DWORD PTR [ebp-0xc]
  401637:	add    ecx,0x15350
  40163d:	mov    DWORD PTR ds:0x4022b0,ecx
  401643:	jmp    0x401646
  401645:	ret    
  401646:	jmp    0x401650
  40164b:	mov    esp,ebp
  40164d:	pop    ebp
  40164e:	ret    
  40164f:	int3   
  401650:	push   ebp
  401651:	mov    ebp,esp
  401653:	mov    eax,ds:0x4022b0
  401658:	pop    ecx
  401659:	jmp    0x40165b
  40165b:	call   0x401660
  401660:	pop    ecx
  401661:	jmp    eax
  401663:	pop    ebp
  401664:	ret    
  401665:	jmp    DWORD PTR ds:0x4020ec
  40166b:	jmp    DWORD PTR ds:0x4020f0
  401671:	jmp    DWORD PTR ds:0x4020f4
  401677:	jmp    DWORD PTR ds:0x4020f8
  40167d:	jmp    DWORD PTR ds:0x4020fc
  401683:	jmp    DWORD PTR ds:0x402100
  401689:	jmp    DWORD PTR ds:0x402108

Disassembly of section .data2:

00403000 <.data2>:
  403000:	add    BYTE PTR [ebp+0x1],dl
  403003:	add    BYTE PTR [ebx+0x52],ah
  403006:	inc    ecx
  403007:	add    BYTE PTR [eax+eiz*2],bl
  40300a:	je     0x40305c
  40300c:	adc    DWORD PTR [edx+0x63],ebp
  40300f:	inc    ecx
  403010:	jmp    DWORD PTR [eax+0x72]
  403013:	gs lock jne 0x403017
  403017:	add    BYTE PTR [edi],ah
  403019:	push   0x61
  40301b:	fs pop ds
  40301d:	ins    BYTE PTR es:[edi],dx
  40301e:	bound  esi,QWORD PTR [edx+0x2]
  403021:	ja     0x40309c
  403023:	inc    ebp
  403024:	fild   DWORD PTR [eax+eax*1+0x0]
  403028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403029:	push   0x61
  40302b:	fs lahf 
  40302d:	ins    BYTE PTR es:[edi],dx
  40302e:	bound  esi,QWORD PTR [edx-0x3e]
  403031:	ja     0x4030ac
  403033:	inc    ebp
  403034:	mov    ebx,0x9c000052
  403039:	pusha  
  40303a:	je     0x403089
  40303c:	mov    esp,0xbe6c7561
  403041:	dec    ebp
  403042:	popa   
  403043:	outs   dx,BYTE PTR ds:[esi]
  403044:	xchg   DWORD PTR [ecx+0x65],ebp
  403047:	inc    ecx
  403048:	arpl   WORD PTR ds:0x77a00000,ax
  40304e:	gs popa 
  403050:	(bad)  
  403051:	pusha  
  403052:	inc    esi
  403053:	imul   ecx,DWORD PTR [edi-0x78ffbea0],0x80727476
  40305d:	fs je  0x4030a1
  403060:	arpl   WORD PTR ds:0x60240000,ax
  403066:	je     0x4030bf
	...
  403074:	add    BYTE PTR [eax],al
  403076:	add    BYTE PTR [edx+0x6b],cl
  403079:	outs   dx,DWORD PTR fs:[esi]
  40307b:	push   esp
  40307c:	jbe    0x4030c2
  40307e:	imul   edx,DWORD PTR [ecx+0x60],0x774c7463
  403085:	jns    0x4030c8
  403087:	arpl   WORD PTR ds:0x60240000,ax
  40308d:	je     0x4030dc
  40308f:	xor    al,0x61
  403091:	jne    0x4030ff
  403093:	push   es
  403094:	dec    ebp
  403095:	popa   
  403096:	outs   dx,BYTE PTR ds:[esi]
  403097:	jmp    FWORD PTR [eax+0x65]
  40309a:	push   edi
  40309b:	arpl   WORD PTR ds:0x75f0000,ax
  4030a1:	inc    eax
  4030a2:	add    BYTE PTR [edi+0x7],dl
  4030a5:	inc    eax
  4030a6:	add    BYTE PTR [edi],bh
  4030a8:	pop    es
  4030a9:	inc    eax
  4030aa:	add    BYTE PTR [edi],dh
  4030ac:	pop    es
  4030ad:	inc    eax
  4030ae:	add    BYTE PTR [ebx],bl
  4030b0:	pop    es
  4030b1:	inc    eax
  4030b2:	add    BYTE PTR [edi-0x3cffbffd],dh
  4030b8:	add    eax,DWORD PTR [eax+0x0]
  4030bb:	retf   
  4030bc:	add    eax,DWORD PTR [eax+0x0]
  4030bf:	pushf  
  4030c0:	bound  esi,QWORD PTR [eax+edx*2-0x4f]
  4030c4:	push   0x61bf4163
  4030c9:	jb     0x403130
  4030cb:	mov    al,0x74
  4030cd:	add    BYTE PTR [eax],al
  4030cf:	xchg   edi,eax
  4030d0:	push   0x6eaf6461
  4030d5:	bound  esi,QWORD PTR [edx-0x7e]
  4030d8:	jae    0x403153
  4030da:	inc    ebp
	...
  4030e7:	add    BYTE PTR [eax],al
  4030e9:	add    BYTE PTR [ebx+0x78000046],cl
  4030ef:	bound  esi,QWORD PTR [edx+0x6e]
  4030f2:	xchg   BYTE PTR [ecx+0x33],ch
  4030f5:	xor    al,BYTE PTR [ebp+0x61]
  4030f8:	ins    BYTE PTR es:[edi],dx
  4030f9:	ins    BYTE PTR es:[edi],dx
  4030fa:	arpl   WORD PTR ds:0x74760000,ax
  403100:	jbe    0x403165
  403102:	push   ecx
  403103:	jno    0x403133
  403105:	fs inc edi
  403107:	imul   eax,DWORD PTR [eax],0x6d623e00
  40310d:	jae    0x40314d
  40310f:	jno    0x403111
  403111:	add    BYTE PTR [esi+0x74],cl
  403114:	jbe    0x403179
  403116:	xor    DWORD PTR [ecx+0x2e],esi
  403119:	fs aas 
  40311b:	imul   eax,DWORD PTR [eax],0x6d623600
  403121:	arpl   WORD PTR [ebx],dx
  403123:	jle    0x403125
  403125:	add    BYTE PTR ds:0x1674726e,ch
  40312b:	data16 ins BYTE PTR es:[edi],dx
  40312d:	inc    ecx
  40312e:	imul   DWORD PTR [eax+0x6f]
  403131:	arpl   WORD PTR [ebx+0x5],sp
  403134:	add    BYTE PTR [eax],al
  403136:	or     eax,0xf674726e
  40313b:	gs ins BYTE PTR es:[edi],dx
  40313d:	inc    ecx
  40313e:	imul   DWORD PTR [eax+0x6f]
  403141:	arpl   WORD PTR [ebx+0x5],sp
  403144:	add    BYTE PTR [eax],al
  403146:	scas   al,BYTE PTR es:[edi]
  403147:	ins    DWORD PTR es:[di],dx
  403149:	popa   
  40314a:	ror    DWORD PTR [edi+0x69],cl
  40314d:	add    BYTE PTR gs:[eax],al
	...
  40315c:	add    ah,cl
  40315e:	dec    eax
  40315f:	inc    si
  403161:	retf   0x6569
  403164:	add    BYTE PTR [ebp-0x498b8d92],cl
  40316a:	data16 ins BYTE PTR es:[edi],dx
  40316c:	push   eax
  40316d:	mov    cl,0x68
  40316f:	je     0x4031d6
  403171:	xor    BYTE PTR [ecx+0x0],0x0
  403175:	stos   DWORD PTR es:[edi],eax
  403176:	bound  esp,QWORD PTR [ecx+0x70]
  403179:	mov    ds:0x806f6c69,al
  40317e:	add    eax,0x62880000
  403183:	jb     0x4031f3
  403185:	jle    0x4031f0
  403187:	xor    esi,DWORD PTR [edx]
  403189:	cmp    eax,0x636c6c61
  40318e:	add    eax,0x62240000
  403193:	je     0x4031e5
  403195:	push   ecx
  403196:	push   0x74506563
  40319b:	dec    eax
  40319c:	gs inc edx
  40319e:	jne    0x4031a0
  4031a0:	add    BYTE PTR [ebx+0x5],ah
  4031a3:	inc    esp
  4031a4:	add    DWORD PTR [ebx-0x5f],esp
  4031a7:	pop    ecx
  4031a8:	nop
  4031a9:	arpl   bx,bp
  4031ab:	add    eax,DWORD PTR [eax]
  4031ad:	arpl   dx,bp
  4031af:	add    eax,DWORD PTR [eax]
  4031b1:	arpl   di,si
  4031b3:	sti    
  4031b4:	add    BYTE PTR [ebx+0x36],ah
  4031b7:	add    eax,DWORD PTR [eax]
  4031b9:	arpl   si,bp
  4031bb:	add    eax,DWORD PTR [eax]
  4031bd:	arpl   WORD PTR [esi],bp
  4031bf:	add    al,0x0
	...
  4031cd:	add    BYTE PTR [eax],al
  4031cf:	add    BYTE PTR [ebx-0x12],ah
  4031d2:	add    eax,DWORD PTR [eax]
  4031d4:	arpl   si,bp
  4031d6:	add    eax,DWORD PTR [eax]
  4031d8:	arpl   si,bp
  4031da:	add    eax,DWORD PTR [eax]
  4031dc:	arpl   si,bp
  4031de:	add    eax,DWORD PTR [eax]
  4031e0:	arpl   sp,bp
  4031e2:	add    eax,DWORD PTR [eax]
  4031e4:	arpl   sp,bp
  4031e6:	add    eax,DWORD PTR [eax]
  4031e8:	arpl   sp,bp
  4031ea:	add    eax,DWORD PTR [eax]
  4031ec:	arpl   sp,bp
  4031ee:	add    eax,DWORD PTR [eax]
  4031f0:	arpl   WORD PTR [esp+eax*1+0x0],bp
  4031f4:	arpl   si,bx
  4031f6:	sbb    bh,BYTE PTR [edx+0x9afec5d]
  4031fc:	push   ss
  4031fd:	into   
  4031fe:	mov    ebx,0x25a9af01
  403203:	push   esp
  403204:	mov    eax,DWORD PTR ds:0xfa932077
  40320a:	push   0x67
  40320c:	xchg   ecx,eax
  40320d:	int    0x68
  40320f:	and    BYTE PTR [eax-0x7b919633],al
  403215:	fsub   DWORD PTR [ebx]
  403217:	bound  eax,QWORD PTR [esi+0x7575760c]
  40321d:	or     al,0x6d
  40321f:	outs   dx,BYTE PTR ds:[esi]
  403220:	and    DWORD PTR [eax-0x3e7cacb6],0x6a
  403227:	fs inc esi
  403229:	test   BYTE PTR [eax],0xd
  40322c:	pop    ecx
  40322d:	add    eax,0x56303cd
  403232:	jmp    0x40323a
	...
  403243:	arpl   WORD PTR ds:0x56340b9,ax
  403249:	popf   
  40324a:	add    al,0x60
  40324c:	add    eax,0x46f5b5ea
  403251:	jmp    0xe9459559
  403256:	add    esp,DWORD PTR [ebx+0x5]
  403259:	or     DWORD PTR [esp+edx*2],eax
  40325c:	add    al,0xf2
  40325e:	add    al,0x61
  403260:	xor    ebp,ecx
  403262:	stc    
  403263:	arpl   WORD PTR ds:0x5634de9,ax
  403269:	jmp    0x55459571
  40326e:	in     eax,dx
  40326f:	arpl   WORD PTR ds:0x56313e9,ax
  403275:	jmp    0xe945948d
  40327a:	add    esp,DWORD PTR [ebx+0x6313e905]
  403280:	add    eax,0x56305e9
  403285:	in     eax,dx
  403286:	add    esp,DWORD PTR [ebx+0x5]
  403289:	jmp    0xed459591
  40328e:	add    esp,DWORD PTR [ebx+0x5]
  403291:	jmp    0xe9459599
  403296:	jae    0x4032fa
  403298:	add    eax,0x56305e9
  40329d:	push   es
  40329e:	es popa 
  4032a0:	add    eax,0x56303eb
  4032a5:	jmp    0x4032ad
	...
  4032b6:	push   ebx
  4032b7:	add    eax,0x56313e9
  4032bc:	jmp    0xe945a5c4
  4032c1:	adc    esp,DWORD PTR [ebx+0x5]
  4032c4:	add    cl,ch
  4032c6:	pusha  
  4032c7:	add    eax,0x560d900
  4032cc:	add    cl,ch
  4032ce:	pusha  
  4032cf:	add    eax,0x560e900
  4032d4:	add    cl,dh
  4032d6:	adc    DWORD PTR [eax+eax*1],eax
  4032d9:	and    DWORD PTR [eax+0x5],esp
  4032dc:	add    cl,ch
  4032de:	pusha  
  4032df:	add    eax,0x560e900
  4032e4:	add    cl,ch
  4032e6:	pusha  
  4032e7:	add    eax,0x560e900
  4032ec:	add    cl,ch
  4032ee:	pusha  
  4032ef:	add    eax,0x560e900
  4032f4:	add    cl,ch
  4032f6:	pusha  
  4032f7:	add    eax,0x560e900
  4032fc:	add    cl,ch
  4032fe:	pusha  
  4032ff:	add    eax,0x560e900
  403304:	add    cl,ch
  403306:	pusha  
  403307:	add    eax,0x560e900
  40330c:	add    cl,ch
  40330e:	pusha  
  40330f:	add    eax,0x560e900
  403314:	add    cl,ch
  403316:	pusha  
  403317:	add    eax,0xe900
	...
  403328:	add    BYTE PTR [eax+0x5],ah
  40332b:	add    cl,ch
  40332d:	pusha  
  40332e:	add    eax,0x560e900
  403333:	add    cl,ch
  403335:	pusha  
  403336:	add    eax,0x560e900
  40333b:	add    ch,dl
  40333d:	cdq    
  40333e:	push   es
  40333f:	add    BYTE PTR [ebp+0x60],ch
  403342:	add    eax,0x560e900
  403347:	add    cl,ch
  403349:	pusha  
  40334a:	add    eax,0x8ca0000
  40334f:	add    BYTE PTR [eax],al
  403351:	retf   0x8
  403354:	add    BYTE PTR [edx-0x45fffff8],bh
  40335a:	or     BYTE PTR [eax],al
  40335c:	add    BYTE PTR [esp+eiz*2+0x8ce7865],dl
  403363:	add    BYTE PTR [eax],al
  403365:	inc    ecx
  403366:	cld    
  403367:	add    BYTE PTR [eax],al
  403369:	mov    edx,0x8a000018
  40336e:	out    dx,al
  40336f:	add    BYTE PTR [eax],al
  403371:	mov    cl,BYTE PTR [edx]
  403373:	add    BYTE PTR [eax],al
  403375:	jp     0x40337f
  403377:	add    BYTE PTR [eax],al
  403379:	jp     0x403383
  40337b:	add    BYTE PTR [eax],al
  40337d:	mov    cl,BYTE PTR [eax]
  40337f:	add    BYTE PTR [eax],al
  403381:	push   0x9
  403383:	add    BYTE PTR [eax+0x64],ah
  403386:	jnp    0x4033ec
  403388:	popa   
  403389:	push   cs
  40338a:	push   0x0
	...
  40339b:	add    BYTE PTR [edx+0x7],cl
  40339e:	add    BYTE PTR [eax],al
  4033a0:	dec    edx
  4033a1:	sbb    BYTE PTR [ecx],al
  4033a3:	add    BYTE PTR [edx],bh
  4033a5:	or     al,BYTE PTR [eax]
  4033a7:	add    BYTE PTR [edx],bh
  4033a9:	or     BYTE PTR [ecx],al
  4033ab:	add    BYTE PTR [edx+0x8],cl
  4033ae:	add    BYTE PTR [eax],al
  4033b0:	dec    edx
  4033b1:	or     BYTE PTR [eax],al
  4033b3:	add    BYTE PTR [edx],bh
  4033b5:	or     BYTE PTR [eax],al
  4033b7:	add    BYTE PTR [edx+0x9],bh
  4033ba:	add    BYTE PTR [eax+0x34],al
  4033bd:	push   esp
  4033be:	popa   
  4033bf:	je     0x40342c
  4033c1:	or     DWORD PTR [eax],eax
  4033c3:	add    BYTE PTR [edx+0x46],dl
  4033c6:	add    BYTE PTR [eax],al
  4033c8:	cli    
  4033c9:	daa    
  4033ca:	add    DWORD PTR [eax],eax
  4033cc:	or     cl,BYTE PTR [edx+0x0]
  4033cf:	add    BYTE PTR [edx],cl
  4033d1:	or     al,BYTE PTR [ecx]
  4033d3:	add    BYTE PTR [ebx-0x22],ah
  4033d6:	add    eax,DWORD PTR [eax]
  4033d8:	arpl   si,bx
  4033da:	add    eax,DWORD PTR [eax]
  4033dc:	arpl   si,bx
  4033de:	add    eax,DWORD PTR [eax]
  4033e0:	arpl   WORD PTR [esi-0x225cfffd],bx
  4033e6:	add    eax,DWORD PTR [eax]
  4033e8:	arpl   si,bx
  4033ea:	add    eax,DWORD PTR [eax]
  4033ec:	arpl   si,bx
  4033ee:	add    eax,DWORD PTR [eax]
  4033f0:	arpl   si,bx
  4033f2:	add    eax,DWORD PTR [eax]
  4033f4:	arpl   WORD PTR [ecx-0x2ec41374],si
  4033fa:	adc    eax,DWORD PTR [eax+0x63]
  4033fd:	push   es
  4033fe:	jne    0x403401
	...
  40340c:	add    BYTE PTR [eax],al
  40340e:	add    BYTE PTR [eax+0x5b75f7f2],ah
  403414:	mov    BYTE PTR [edx],al
  403416:	push   0x63
  403418:	push   es
  403419:	mov    esp,0xccde63da
  40341e:	ret    0xde5f
  403421:	push   eax
  403422:	mov    edi,DWORD PTR [edi+0x45]
  403425:	sub    dl,BYTE PTR [eax]
  403427:	and    ebx,esi
  403429:	sti    
  40342a:	jb     0x40348e
  40342c:	lahf   
  40342d:	test   DWORD PTR [ebx+0x7403f4d6],0x8516758
  403437:	fmul   st,st(6)
  403439:	div    BYTE PTR [ebp+0x6b]
  40343c:	stos   DWORD PTR es:[edi],eax
  40343d:	push   edx
  40343e:	or     BYTE PTR [edx],ch
  403440:	lahf   
  403441:	add    BYTE PTR [eax],al
  403443:	xchg   esi,eax
  403444:	addr16 call 0x6cd553cd
  40344a:	dec    edi
  40344b:	jae    0x403469
  40344d:	add    al,0xf8
  40344f:	xchg   ecx,eax
  403450:	ffree  st(2)
  403452:	dec    DWORD PTR [edx+esi*8]
  403455:	pop    es
  403456:	(bad)  
  403457:	sahf   
  403458:	je     0x403419
  40345a:	inc    ebp
  40345b:	inc    DWORD PTR ds:0x56303e9
  403461:	jb     0x4034b4
  403463:	pop    ebx
  403464:	jle    0x403461
  403466:	imul   esp,DWORD PTR [ebx-0xe],0x78dc13d4
  40346d:	inc    ebp
  40346e:	test   DWORD PTR [esi-0x13],0x713e
	...
  403481:	add    BYTE PTR [ebx-0xe],bl
  403484:	fwait
  403485:	setp   bh
  403488:	fld    QWORD PTR [ebx]
  40348a:	push   ss
  40348b:	jle    0x4034a2
  40348d:	sbb    DWORD PTR [edi+0x537d91ed],0x45
  403494:	jmp    0x2a446694
  403499:	mul    DWORD PTR [eax+ecx*2+0x5630401]
  4034a0:	jmp    0xea315b63
  4034a5:	add    esp,DWORD PTR [ebx+0x5]
  4034a8:	bound  edx,QWORD PTR [ecx+0x6b]
  4034ab:	jle    0x4034a8
  4034ad:	mov    BYTE PTR [esi],bl
  4034af:	in     eax,dx
  4034b0:	cmp    DWORD PTR [edx+0x61],ebp
  4034b3:	repnz pop esp
  4034b5:	clc    
  4034b6:	fs js  0x40348a
  4034b9:	not    dh
  4034bb:	std    
  4034bc:	lds    edx,FWORD PTR [ecx+0x6f]
  4034bf:	jle    0x4034e5
  4034c1:	cld    
  4034c2:	sbb    al,bh
  4034c4:	in     eax,dx
  4034c5:	add    ebp,DWORD PTR [esi+0x2782bd7e]
  4034cb:	in     eax,dx
  4034cc:	adc    edx,eax
  4034ce:	push   ebx
  4034cf:	inc    ebp
  4034d0:	jmp    0xaa44e6d0
  4034d5:	neg    BYTE PTR [eax+ecx*2]
  4034d8:	xchg   ecx,eax
  4034d9:	add    esp,DWORD PTR [ebx+0x5]
  4034dc:	jmp    0xea31d39f
  4034e1:	add    esp,DWORD PTR [ebx+0x5]
  4034e4:	add    BYTE PTR [edx+0x0],ah
	...
  4034f3:	add    BYTE PTR [eax],al
  4034f5:	mov    bl,0xfd
  4034f7:	mov    bl,bl
  4034f9:	jmp    0x403542
  4034fb:	clc    
  4034fc:	mov    ecx,0xd4ff048a
  403501:	hlt    
  403502:	icebp  
  403503:	jne    0x403556
  403505:	in     eax,dx
  403506:	ja     0x403510
  403508:	dec    esi
  403509:	xor    bl,BYTE PTR [ecx]
  40350b:	(bad)  
  40350c:	mov    esp,0x3e87dd68
  403511:	aad    0xf1
  403513:	push   eax
  403514:	bound  esi,QWORD PTR [ebx]
  403516:	std    
  403517:	mov    bl,bl
  403519:	dec    edx
  40351a:	add    eax,0x77ade96a
  40351f:	cld    
  403520:	push   ds
  403521:	xor    ebp,ebp
  403523:	call   FWORD PTR [eax+ebx*2+0x38f552f2]
  40352a:	jle    0x403581
  40352c:	add    DWORD PTR [ecx+0x58],esp
  40352f:	or     al,0xc2
  403531:	mov    al,0x7a
  403533:	push   es
  403534:	ret    0xbba0
  403537:	ret    0x60e1
  40353a:	lods   eax,DWORD PTR ds:[esi]
  40353b:	add    ecx,ebp
  40353d:	pusha  
  40353e:	add    eax,0x55fabc9
  403543:	push   ebp
  403544:	bound  edi,QWORD PTR [ebx-0x7b]
  403547:	(bad)  
  403548:	int    0xcf
  40354a:	and    BYTE PTR [ecx],dl
  40354c:	sub    DWORD PTR [edi-0x13],ebx
  40354f:	jb     0x403539
  403551:	and    esi,ecx
  403553:	(bad)  
  403554:	cmp    al,0x6f
  403556:	lock jne 0x40353a
	...
  403565:	add    BYTE PTR [eax],al
  403567:	add    BYTE PTR [eax+0x6e],cl
  40356a:	jmp    DWORD PTR [esi+0x14bffd2e]
  403570:	arpl   WORD PTR [esi+0x7c60e5c2],di
  403576:	push   ebp
  403577:	loope  0x403564
  403579:	adc    ecx,DWORD PTR [ebp+0x50ed4700]
  40357f:	call   DWORD PTR [edi]
  403581:	adc    eax,0xf9fe75ff
  403586:	jne    0x403590
  403588:	lea    edx,[ebx+0xc]
  40358b:	test   DWORD PTR [edx+0x71],ecx
  40358e:	adc    ecx,DWORD PTR [ebx+0x453bf8c7]
  403594:	jmp    0x4:0xcbb8075f
  40359b:	add    BYTE PTR [ecx],dh
  40359d:	out    dx,eax
  40359e:	sub    al,al
  4035a0:	xor    DWORD PTR [ebx],eax
  4035a2:	sub    eax,eax
  4035a4:	add    ebx,0xc
  4035a7:	add    bh,dl
  4035a9:	jge    0x403597
  4035ab:	add    DWORD PTR [esi+0x476856ed],0x14
  4035b2:	inc    eax
  4035b3:	add    BYTE PTR [edx+0x73],dl
  4035b6:	add    ebx,eax
  4035b8:	ins    DWORD PTR es:[edi],dx
  4035b9:	xchg   BYTE PTR [ebp+0xc],bh
  4035bc:	mov    ah,BYTE PTR [eax+0x6]
  4035bf:	or     DWORD PTR [edi],0xfffffffc
  4035c2:	push   DWORD PTR [ebp+esi*2+0x1d]
  4035c6:	rcr    BYTE PTR [esi+0x43],0xc3
  4035ca:	or     al,0x0
	...
  4035d8:	add    BYTE PTR [eax],al
  4035da:	add    BYTE PTR [ecx],cl
  4035dc:	ja     0x4035ee
  4035de:	add    BYTE PTR [edi],dl
  4035e0:	sti    
  4035e1:	mov    bh,0x1
  4035e3:	jp     0x4035e9
  4035e5:	add    BYTE PTR [esi+0x3],bl
  4035e8:	(bad)  
  4035e9:	or     al,0x0
  4035eb:	rcr    DWORD PTR [edi+0xc],1
  4035ee:	mov    DWORD PTR [edi+0x3a0000ed],0x42558b04
  4035f8:	jge    0x40360c
  4035fa:	lea    eax,[edi+0x57ff50ed]
  403600:	sbb    DWORD PTR [esi-0x1],edx
  403603:	arpl   WORD PTR [ecx],dx
  403605:	or     al,0xff
  403607:	mov    cl,0xee
  403609:	jle    0x4035cb
  40360b:	call   0xc1b5:0xadc028df
  403612:	or     al,0x63
  403614:	pop    ebx
  403615:	jbe    0x403613
  403617:	arpl   cx,di
  403619:	cld    
  40361a:	sub    ah,BYTE PTR [ebx]
  40361c:	enter  0xc2ca,0x5f
  403620:	fimul  WORD PTR [eax-0xc2518bb]
  403626:	sub    DWORD PTR [esi],esp
  403628:	out    dx,al
  403629:	outs   dx,BYTE PTR ds:[esi]
  40362a:	les    ebx,FWORD PTR [ebx]
  40362c:	fld    QWORD PTR [ebx]
  40362e:	add    BYTE PTR [ebx-0x70],ah
  403631:	retf   0x57c2
  403634:	fimul  WORD PTR [esi-0x75]
  403637:	iret   
  403638:	pop    esp
  403639:	mov    edi,0xf426c4f8
  40363e:	push   0x0
	...
  40364b:	add    BYTE PTR [eax],al
  40364d:	add    BYTE PTR [edi-0x14],ah
  403650:	inc    ebx
  403651:	add    BYTE PTR [ebx-0x633cfd75],ch
  403657:	add    DWORD PTR [ebx],0x6a
  40365a:	arpl   WORD PTR [eax+eax*1+0x94636a],dx
  403661:	push   0x8003de63
  403666:	jl     0x4036e0
  403668:	or     ebp,eax
  40366a:	loop   0x40361a
  40366c:	add    al,0x0
  40366e:	fisubr DWORD PTR [eax]
  403670:	lock inc eax
  403672:	out    dx,al
  403673:	loope  0x403631
  403675:	ret    0xdc6b
  403678:	pop    ebp
  403679:	add    dh,ah
  40367b:	and    esp,ebp
  40367d:	push   eax
  40367e:	mov    ebx,0x630013dc
  403683:	imul   ecx,DWORD PTR [ecx-0xc5fb308],0x1c063450
  40368d:	lock cmp esp,DWORD PTR [ebx-0x4a]
  403691:	add    al,0x63
  403693:	cli    
  403694:	test   al,0x79
  403696:	ins    DWORD PTR es:[edi],dx
  403697:	out    dx,al
  403698:	adc    al,0xf0
  40369a:	or     edx,DWORD PTR [ecx-0x62]
  40369d:	add    al,0x63
  40369f:	sbb    ch,BYTE PTR [ecx-0x1701de43]
  4036a5:	bnd jbe 0x403695
  4036a8:	pop    esp
  4036a9:	mov    ebx,edi
  4036ab:	fisub  WORD PTR [esi-0xd]
  4036ae:	xchg   ebx,eax
  4036af:	out    dx,al
  4036b0:	aam    0xff
	...
  4036be:	add    BYTE PTR [eax],al
  4036c0:	add    ah,bh
  4036c2:	adc    al,0x56
  4036c4:	repz fadd QWORD PTR [edx+0x7863ebcc]
  4036cb:	test   ebx,esi
  4036cd:	push   esi
  4036ce:	icebp  
  4036cf:	push   ecx
  4036d0:	cmp    ebp,DWORD PTR [ebp+eax*1+0x562abe9]
  4036d7:	jmp    0xf203e0df
  4036dc:	add    edx,DWORD PTR [esi]
  4036de:	jp     0x4036ed
  4036e0:	pop    esp
  4036e1:	fcom   QWORD PTR [ebx]
  4036e3:	test   eax,0xe8739b03
  4036e8:	(bad)  
  4036e9:	xchg   esp,eax
  4036ea:	pop    ebx
  4036eb:	jmp    0x40374a
  4036ed:	arpl   si,bp
  4036ef:	je     0x4036ec
  4036f1:	jl     0x403694
  4036f3:	hlt    
  4036f4:	bnd jl 0x4036b3
  4036f7:	sub    ecx,DWORD PTR [eax]
  4036f9:	arpl   WORD PTR [eax+0x72],bx
  4036fc:	(bad)  
  4036fe:	test   al,0xfb
  403700:	inc    ebx
  403701:	arpl   bp,bp
  403703:	pop    ebx
  403704:	add    eax,0x443ee20
  403709:	leave  
  40370a:	add    eax,0xdd5b78c6
  40370f:	outs   dx,BYTE PTR ds:[esi]
  403710:	lock inc esp
  403712:	out    dx,al
  403713:	add    BYTE PTR [eax+0x14000926],ah
  403719:	mov    ah,0xe1
  40371b:	sub    DWORD PTR [ebp-0x43ba2c8],0xffffffa0
  403722:	add    eax,0x1bf8
	...
  403733:	add    BYTE PTR [esi-0x3e],ah
  403736:	dec    DWORD PTR [esi+0x2c8f019b]
  40373c:	inc    ebp
  40373e:	inc    ebp
  40373f:	jge    0x4037a1
  403741:	add    eax,0x59ee900
  403746:	push   esp
  403748:	hlt    
  403749:	out    dx,al
  40374a:	jne    0x40373d
  40374c:	or     BYTE PTR [ebp+edi*8+0x5e],ah
  403750:	icebp  
  403751:	jns    0x4037a8
  403753:	loope  0x4037b2
  403755:	adc    edi,edi
  403757:	aam    0xc4
  403759:	in     eax,dx
  40375a:	jne    0x40379d
  40375c:	shl    DWORD PTR [edi+0x8],1
  40375f:	ds cs or eax,0xedb82bc9
  403766:	push   esp
  403767:	bound  edx,QWORD PTR [esp+ebx*2+0x520fa00]
  40376e:	clc    
  40376f:	fwait
  403770:	pop    edi
  403771:	ret    0x83ff
  403774:	pusha  
  403775:	out    dx,al
  403776:	jne    0x403759
  403778:	mov    eax,0x9106ff9a
  40377d:	mov    ebx,0x5860e5c2
  403782:	mov    eax,DWORD PTR ds:0x6a1457fd
  403788:	inc    esi
  403789:	add    eax,0xc2a9ed75
  40378e:	adc    cl,ch
  403790:	jae    0x403809
  403792:	adc    dh,dl
  403794:	aam    0xf9
  403796:	(bad)  
  403797:	push   esp
	...
  4037a4:	add    BYTE PTR [eax],al
  4037a6:	add    BYTE PTR [edi-0x1b],dl
  4037a9:	hlt    
  4037aa:	add    BYTE PTR [edi],ah
  4037ac:	idiv   edi
  4037ae:	mov    ebp,DWORD PTR [edi+0xd]
  4037b1:	and    DWORD PTR [edx],eax
  4037b3:	add    eax,esp
  4037b5:	adc    BYTE PTR [eax],al
  4037b7:	dec    edi
  4037b8:	push   0xffffffec
  4037ba:	cmp    esi,0xfffffff5
  4037bd:	push   DWORD PTR [ebp+0x36]
  4037c0:	dec    ebx
  4037c1:	add    al,0x8d
  4037c3:	dec    edi
  4037c4:	cmc    
  4037c5:	push   eax
  4037c6:	jmp    FWORD PTR [edi-0x17]
  4037c9:	out    0xc3,eax
  4037cb:	in     eax,0xf6
  4037cd:	dec    DWORD PTR [ebx+0x3883053f]
  4037d3:	or     dh,BYTE PTR [ebp+0x7]
  4037d6:	mov    edi,DWORD PTR [edi]
  4037d8:	cmc    
  4037d9:	bswap  eax
  4037db:	xchg   ecx,eax
  4037dc:	add    ebp,DWORD PTR [ebx]
  4037de:	shl    BYTE PTR [ebx],0xc3
  4037e1:	or     BYTE PTR [eax],al
  4037e3:	pop    ds
  4037e4:	push   0xffffffec
  4037e6:	cmp    DWORD PTR [esi-0xb],0xffffffff
  4037ea:	jne    0x4037c2
  4037ec:	dec    edx
  4037ed:	add    cl,BYTE PTR [ebp-0xaf0901]
  4037f3:	push   eax
  4037f5:	out    0x97,eax
  4037f7:	test   esi,esi
  4037f9:	dec    DWORD PTR [ebx+0x3882ecff]
  4037ff:	mov    edx,0x3d0f0874
  403804:	inc    esp
  403805:	inc    BYTE PTR [esi+0x2b02ca3e]
	...
  403817:	add    BYTE PTR [eax],al
  403819:	add    BYTE PTR [edx],bh
  40381b:	mov    al,0xc2
  40381d:	or     BYTE PTR [edx+0x53],bh
  403820:	mov    ebp,esp
  403822:	or     DWORD PTR [ebp-0x14100004],edi
  403828:	imul   eax,DWORD PTR [ecx],0x50ff42f7
  40382e:	test   DWORD PTR [ebx+0x8],esi
  403831:	call   0x318099
  403836:	push   esp
  403837:	addr16 inc esi
  403839:	or     al,0xe0
  40383b:	add    eax,0xdb5d7404
  403840:	mov    ecx,0x5c73c45
  403845:	sub    esp,DWORD PTR [ebx]
  403847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403848:	lds    ecx,FWORD PTR [eax]
  40384a:	arpl   WORD PTR [ecx],bp
  40384c:	jge    0x40383a
  40384e:	fdiv   DWORD PTR [eax]
  403850:	adc    al,0x83
  403852:	pop    ecx
  403853:	fidiv  WORD PTR [esi+0x4]
  403856:	sub    ah,BYTE PTR [eax-0x16f20001]
  40385c:	(bad)  
  40385d:	dec    BYTE PTR [esi-0x1f240a]
  403863:	jb     0x403855
  403865:	or     esp,DWORD PTR [ebx]
  403867:	icebp  
  403868:	cld    
  403869:	mov    dl,BYTE PTR [esi+0x6302c8ee]
  40386f:	fiadd  WORD PTR [ebx]
  403871:	add    al,cl
  403873:	loopne 0x4038d2
  403875:	add    esp,edx
  403877:	sar    bh,1
  403879:	(bad)  
  40387a:	push   esi
  40387b:	neg    bl
  40387d:	push   ecx
	...
  40388a:	add    BYTE PTR [eax],al
  40388c:	add    bh,al
  40388e:	sub    dh,al
  403890:	leave  
  403891:	mov    eax,ds:0xe85503e1
  403896:	sub    DWORD PTR [esp+eax*8+0x757cabaf],eax
  40389d:	push   edi
  40389e:	cwde   
  40389f:	add    ecx,DWORD PTR [ebp-0xacedda]
  4038a5:	push   cs
  4038a6:	out    dx,al
  4038a7:	pop    ecx
  4038a8:	call   DWORD PTR [esi]
  4038aa:	neg    bl
  4038ac:	mov    al,ds:0xb03ddae
  4038b1:	mov    ds:0xf6830969,eax
  4038b6:	fld    DWORD PTR [edx]
  4038b8:	jne    0x40391e
  4038ba:	add    eax,0xbe05c412
  4038bf:	stos   DWORD PTR es:[edi],eax
  4038c0:	add    BYTE PTR [ebx+0x7e],ah
  4038c3:	sub    al,0xf0
  4038c5:	pusha  
  4038c6:	cmc    
  4038c7:	add    BYTE PTR [ecx+0x73],cl
  4038ca:	jo     0x403866
  4038cc:	lods   al,BYTE PTR ds:[esi]
  4038cd:	bound  eax,QWORD PTR ds:0xbc9d03e9
  4038d3:	stos   DWORD PTR es:[edi],eax
  4038d4:	add    BYTE PTR [ebx+0x50],ah
  4038d7:	(bad)  
  4038d8:	loopne 0x4038bc
  4038da:	shl    DWORD PTR [ecx],0xef
  4038dd:	and    al,0xeb
  4038df:	cmp    bl,BYTE PTR [ebx]
  4038e1:	cmp    BYTE PTR [eax-0x17],ah
  4038e4:	pop    ecx
  4038e5:	arpl   WORD PTR [edi-0x15],bx
  4038e8:	pop    ecx
  4038e9:	arpl   WORD PTR [edi-0x16],bx
  4038ec:	pop    ebx
  4038ed:	arpl   WORD PTR ds:0xc3e9,ax
	...
  4038ff:	add    ah,bh
  403901:	jo     0x4038e8
  403903:	fistp  DWORD PTR [ebp-0x25fc1630]
  403909:	inc    eax
  40390a:	gs inc esp
  40390c:	outs   dx,DWORD PTR ds:[esi]
  40390d:	push   esi
  40390e:	pop    esi
  40390f:	jns    0x40397c
  403911:	fstp   QWORD PTR [edx]
  403913:	out    dx,al
  403914:	aam    0xea
  403916:	es dec ecx
  403918:	retf   
  403919:	add    eax,0x7e6303e9
  40391e:	xchg   esp,eax
  40391f:	sti    
  403920:	jmp    0xbb899d3c
  403925:	push   ebp
  403926:	rol    DWORD PTR [ebx-0x7f16fa9d],0xde
  40392d:	ins    DWORD PTR es:[edi],dx
  40392e:	push   ds
  40392f:	out    dx,eax
  403930:	pushf  
  403931:	push   ebp
  403932:	push   ss
  403933:	jns    0x4039a0
  403935:	jmp    0x401:0x68e1ffbb
  40393c:	push   cs
  40393d:	push   es
  40393e:	stos   BYTE PTR es:[edi],al
  40393f:	ficomp DWORD PTR [ebx-0x16]
  403942:	add    BYTE PTR [eax+ecx*4+0x78],bh
  403946:	test   DWORD PTR [ecx+0x7d],esi
  403949:	jmp    0xd1fc:0x707439ff
  403950:	mov    bh,0xea
  403952:	call   esi
  403954:	pop    ecx
  403955:	stos   BYTE PTR es:[edi],al
  403956:	je     0x403943
  403958:	sub    DWORD PTR [eax-0x22acc301],ebp
  40395e:	stc    
  40395f:	xchg   ebp,eax
  403960:	pusha  
  403961:	add    eax,0xaa8b
	...
  403972:	add    BYTE PTR [ecx+0x60e1c2bc],ch
  403978:	push   eax
  403979:	mov    edx,DWORD PTR [ebp-0x61073f1f]
  40397f:	fwait
  403980:	stc    
  403981:	out    0x5b,eax
  403983:	or     edx,ebp
  403985:	jmp    DWORD PTR [eax-0x65]
  403988:	in     eax,dx
  403989:	(bad)  
  40398a:	sub    al,0x13
  40398c:	add    eax,0xea60e900
  403991:	jne    0x403978
  403993:	sbb    ah,al
  403995:	std    
  403996:	outs   dx,BYTE PTR ds:[esi]
  403997:	std    
  403998:	jge    0x4039ef
  40399a:	cmc    
  40399b:	imul   edx,DWORD PTR [edi],0x53ae96a
  4039a1:	(bad)  
  4039a2:	fadd   st(4),st
  4039a4:	jmp    0x6ffd8b1e
  4039a9:	or     BYTE PTR [esi+0x4b],al
  4039ac:	stc    
  4039ad:	(bad)  
  4039ae:	fwait
  4039af:	ins    BYTE PTR es:[edi],dx
  4039b0:	mov    esp,0x5060e1c2
  4039b5:	mov    edi,DWORD PTR ds:0x2ef8c0e1
  4039bb:	sbb    ebp,ebp
  4039bd:	add    cl,ch
  4039bf:	pusha  
  4039c0:	add    eax,0x484acc7
  4039c5:	add    cl,ch
  4039c7:	pusha  
  4039c8:	jle    0x403a1f
  4039ca:	add    BYTE PTR [edx-0x3872ed92],dl
  4039d0:	fst    QWORD PTR [eax+0x6a]
  4039d3:	mov    ebx,edx
  4039d5:	jne    0x4039d3
	...
  4039e3:	add    BYTE PTR [eax],al
  4039e5:	add    BYTE PTR [ebp+0x71],bh
  4039e8:	clc    
  4039e9:	inc    DWORD PTR [edi]
  4039eb:	jmp    0x6e968cee
  4039f0:	inc    ebp
  4039f1:	clc    
  4039f2:	add    eax,esp
  4039f4:	add    al,0x0
  4039f6:	xchg   edi,eax
  4039f7:	outs   dx,BYTE PTR ds:[esi]
  4039f8:	in     al,dx
  4039f9:	push   0x3b
  4039fb:	push   0xda5a0c45
  403a00:	jne    0x403a0a
  403a02:	and    bl,BYTE PTR [ebx]
  403a04:	cld    
  403a05:	(bad)  
  403a06:	std    
  403a07:	lods   al,BYTE PTR ds:[esi]
  403a08:	ret    0x3a08
  403a0b:	push   eax
  403a0c:	mov    ebp,esp
  403a0e:	jo     0x403a0d
  403a10:	mov    WORD PTR [ebp-0x2],es
  403a13:	push   esp
  403a14:	push   DWORD PTR [ebp+0x2]
  403a17:	int    0x2a
  403a19:	cld    
  403a1a:	fstp   st(2)
  403a1c:	leave  
  403a1d:	ret    0x4f2
  403a20:	push   ebp
  403a21:	mov    ebx,esi
  403a23:	xchg   BYTE PTR [ebp+0xc],bh
  403a26:	cli    
  403a27:	jo     0x403a3d
  403a29:	cmp    edi,0x14
  403a2c:	add    BYTE PTR [esp+ecx*8-0x27],dh
  403a30:	jne    0x403a42
  403a32:	sub    eax,0xb7ff0c70
  403a37:	in     al,dx
  403a38:	out    0x9,eax
  403a3a:	push   ds
  403a3b:	(bad)  
  403a3d:	leave  
  403a3e:	mov    BYTE PTR ds:0xe5415500,al
  403a44:	push   DWORD PTR [ebp-0x76]
  403a47:	fnstenv [ebp+0x8]
	...
  403a56:	add    BYTE PTR [eax],al
  403a58:	add    BYTE PTR [edx-0x4b],dl
  403a5b:	(bad)  
  403a5c:	(bad)  
  403a5d:	jge    0x4039e5
  403a5f:	jge    0x403a71
  403a61:	arpl   si,bx
  403a63:	ja     0x403a79
  403a65:	loopne 0x403ae0
  403a67:	(bad)  
  403a68:	call   DWORD PTR [eax]
  403a6a:	lock in al,dx
  403a6c:	jne    0x403ac1
  403a6e:	out    0x76,eax
  403a70:	or     al,0x74
  403a72:	imul   edi,ebx,0xecd7b4e7
  403a78:	call   FWORD PTR [edx-0x48000064]
  403a7e:	jae    0x403a5f
  403a80:	adc    esi,0xffffffe2
  403a83:	add    esi,DWORD PTR [ecx+ebx*2-0x49]
  403a87:	jbe    0x403a95
  403a89:	cmp    esi,esi
  403a8b:	xlat   BYTE PTR ds:[ebx]
  403a8c:	add    BYTE PTR [ebx-0x2d],ah
  403a8f:	add    DWORD PTR [ebx],ebp
  403a91:	and    ecx,DWORD PTR [esi]
  403a93:	in     eax,dx
  403a94:	jne    0x403af5
  403a96:	xchg   edi,eax
  403a97:	jbe    0x403aa1
  403a99:	cmp    ecx,DWORD PTR [ebx-0x14]
  403a9c:	call   FWORD PTR [esi*4+0x296308c1]
  403aa3:	jns    0x403a91
  403aa5:	loopne 0x403a9f
  403aa7:	adc    edi,edi
  403aa9:	mov    ?,ecx
  403aab:	in     al,dx
  403aac:	jne    0x403b1d
  403aae:	addr16 jbe 0x403ab9
  403ab1:	or     edx,DWORD PTR [edi-0x7d130014]
  403ab7:	std    
  403ab8:	(bad)  
  403ab9:	outs   dx,BYTE PTR ds:[esi]
  403aba:	out    dx,al
  403abb:	in     al,dx
  403abc:	jne    0x403abe
	...
  403aca:	add    BYTE PTR [eax],al
  403acc:	outs   dx,DWORD PTR ds:[esi]
  403acd:	inc    edi
  403ace:	jbe    0x403ad8
  403ad0:	retf   
  403ad1:	(bad)  
  403ad2:	in     al,dx
  403ad3:	dec    esp
  403ad5:	and    al,0xc1
  403ad7:	or     al,0x63
  403ad9:	mov    DWORD PTR [eax-0x14],edi
  403adc:	mov    esp,0xb4e7fbb0
  403ae1:	das    
  403ae2:	in     al,dx
  403ae3:	call   DWORD PTR [ebx]
  403ae5:	(bad)  
  403ae6:	sti    
  403ae7:	addr16 pop es
  403ae9:	add    eax,0xe86342d1
  403aee:	xchg   esp,eax
  403aef:	sti    
  403af0:	jl     0x403b2d
  403af2:	push   ss
  403af3:	in     al,dx
  403af4:	mov    WORD PTR [edx-0x17],ds
  403af7:	in     al,dx
  403af8:	push   cs
  403af9:	std    
  403afa:	adc    BYTE PTR [edi],bl
  403afc:	jl     0x403ae5
  403afe:	(bad)  
  403aff:	pop    eax
  403b00:	popa   
  403b01:	jp     0x403aaf
  403b03:	call   FWORD PTR [eax+ebp*8]
  403b06:	je     0x403b03
  403b08:	jl     0x403b3d
  403b0a:	out    0xeb,al
  403b0c:	pop    esp
  403b0d:	pop    esp
  403b0e:	jmp    0x403b88
  403b10:	sahf   
  403b11:	adc    eax,0xfdd6eb39
  403b16:	shl    BYTE PTR [ecx],0x44
  403b19:	out    0xc6,eax
  403b1b:	dec    esp
  403b1c:	sub    al,ah
  403b1e:	in     eax,dx
  403b1f:	add    ecx,DWORD PTR [esi+0x2787c57a]
  403b25:	jmp    0xede3:0xdd5b71ae
  403b2c:	sbb    al,0xe7
  403b2e:	rol    BYTE PTR [eax+0x0],cl
	...
  403b3d:	add    BYTE PTR [eax],al
  403b3f:	addr16 jl 0x403b6e
  403b42:	call   0xfc1d7c27
  403b47:	jp     0x403b4e
  403b49:	xchg   BYTE PTR [ecx+0x6f],dh
  403b4c:	out    0xf4,al
  403b4e:	sti    
  403b4f:	cld    
  403b50:	fnstenv [eax-0x15]
  403b53:	in     al,dx
  403b54:	out    0xf4,al
  403b56:	out    0xe4,eax
  403b58:	jo     0x403b4b
  403b5a:	fstp   TBYTE PTR [eax-0x2b14a119]
  403b60:	jo     0x403b43
  403b62:	(bad)  [edi-0x17]
  403b65:	dec    esi
  403b66:	jmp    0x403b40
  403b68:	inc    eax
  403b69:	inc    ebp
  403b6a:	mov    ebp,0x50e8fda1
  403b6f:	call   0xa3aa3c4d
  403b74:	icebp  
  403b75:	(bad)  
  403b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b77:	mov    ah,0x5
  403b79:	add    cl,ch
  403b7b:	pusha  
  403b7c:	js     0x403bc3
  403b7e:	sbb    eax,0xe175e62f
  403b83:	test   al,0x51
  403b85:	aam    0xe9
  403b87:	pusha  
  403b88:	add    al,0x81
  403b8b:	pop    ebx
  403b8c:	out    0x75,al
  403b8e:	icebp  
  403b8f:	cwde   
  403b90:	loope  0x403b8b
  403b92:	idiv   BYTE PTR [ecx+0x7c]
  403b95:	inc    ebp
  403b96:	icebp  
  403b97:	jns    0x403c09
  403b99:	cld    
  403b9a:	shr    DWORD PTR [ebx-0x2e],1
  403b9d:	add    cl,ch
  403b9f:	push   ebp
  403ba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ba1:	je     0x403ba2
	...
  403baf:	add    BYTE PTR [eax],al
  403bb1:	add    BYTE PTR [ecx],bh
  403bb3:	jo     0x403bad
  403bb5:	cmp    DWORD PTR [ebp+0x6238e805],esp
  403bbb:	add    eax,0xf1a37000
  403bc0:	(bad)  
  403bc1:	cmp    al,0x3b
  403bc3:	fisttp QWORD PTR [ecx]
  403bc5:	call   0xde1f:0x1cff0560
  403bcc:	mov    ebx,0x8be609a2
  403bd1:	sub    al,0x13
  403bd3:	test   bh,0x96
  403bd6:	xor    BYTE PTR [ebp-0x1],dl
  403bd9:	cld    
  403bda:	clc    
  403bdb:	(bad)  [edx+0x7f]
  403bde:	or     esi,esp
  403be0:	leave  
  403be1:	stos   DWORD PTR es:[edi],eax
  403be2:	in     al,dx
  403be3:	in     eax,0x54
  403be5:	bound  ecx,QWORD PTR [edx+eax*4]
  403be8:	les    ebx,FWORD PTR [ecx-0x5f]
  403beb:	aas    
  403bec:	hlt    
  403bed:	jmp    0x64404152
  403bf2:	and    ebp,ecx
  403bf4:	push   eax
  403bf5:	dec    esi
  403bf6:	push   ebx
  403bf7:	std    
  403bf8:	out    0x0,eax
  403bfa:	adc    al,0xcf
  403bfc:	add    BYTE PTR [eax],al
  403bfe:	aas    
  403bff:	ret    0x4d78
  403c02:	jne    0x403c79
  403c04:	or     al,ch
  403c06:	hlt    
  403c07:	fdivr  st,st(7)
  403c09:	call   DWORD PTR [ebx]
  403c0b:	inc    ebp
  403c0c:	clc    
  403c0d:	xor    edi,0xffffffd9
  403c10:	add    al,0x72
  403c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c13:	jle    0x403c82
  403c15:	clc    
	...
  403c22:	add    BYTE PTR [eax],al
  403c24:	add    BYTE PTR [esi-0x26],bh
  403c27:	jne    0x403c25
  403c29:	push   edx
  403c2a:	(bad)  
  403c2b:	rol    BYTE PTR [eax],cl
  403c2d:	mov    ah,dh
  403c2f:	mov    edi,0x75daa874
  403c34:	clc    
  403c35:	retf   0x47
  403c38:	call   0x402088
  403c3d:	inc    ebp
  403c3e:	mov    eax,ds:0x24c3d0f7
  403c43:	hlt    
  403c44:	jmp    FWORD PTR [edi-0x276a1713]
  403c4a:	or     DWORD PTR [eax],eax
  403c4c:	jmp    0x403c5a
  403c4e:	out    dx,al
  403c4f:	jne    0x403c59
  403c51:	and    ah,BYTE PTR ds:0x2f5fffb
  403c57:	ror    cl,0xc8
  403c5a:	add    eax,0x1fceb00
  403c5f:	ror    cl,0xb8
  403c62:	add    eax,0x42f86a00
  403c67:	cld    
  403c68:	(bad)  
  403c69:	jmp    eax
  403c6b:	out    0xf0,eax
  403c6d:	loop   0x403c5d
  403c6f:	inc    edi
  403c71:	aas    
  403c72:	fld    DWORD PTR [ecx]
  403c74:	add    dl,bh
  403c76:	or     BYTE PTR [ebp-0xc6c5bb],cl
  403c7c:	jne    0x403c50
  403c7e:	rcl    dl,0xfb
  403c81:	arpl   WORD PTR [ebx],di
  403c83:	jmp    0x47e830b
  403c88:	je     0x403c8a
	...
  403c96:	add    BYTE PTR [eax],al
  403c98:	push   ecx
  403c99:	fstp   TBYTE PTR [ebx+0x6f1a1e3b]
  403c9f:	pop    es
  403ca0:	jmp    0x403c8f
  403ca2:	add    eax,DWORD PTR [eax]
  403ca4:	arpl   WORD PTR [edi+0x2],ax
  403ca7:	sub    esp,DWORD PTR [ebx-0x5cd4fa09]
  403cad:	adc    eax,0xa16304c6
  403cb2:	jl     0x403ca0
  403cb4:	loopne 0x403ce0
  403cb6:	in     al,dx
  403cb7:	lea    esp,[esi]
  403cb9:	or     dl,BYTE PTR [edi+edi*8-0x12]
  403cbd:	aad    0xdb
  403cbf:	dec    eax
  403cc0:	nop
  403cc1:	out    dx,al
  403cc2:	add    eax,DWORD PTR [ebp-0xe3a95d]
  403cc8:	(bad)  
  403cc9:	(bad)  
  403cca:	fcmovnu st,st(0)
  403ccc:	pop    ebx
  403ccd:	ret    
  403cce:	call   0xe8f6e35c
  403cd3:	jne    0x403d1c
  403cd5:	(bad)  
  403cd6:	adc    dl,dl
  403cd8:	arpl   si,bp
  403cda:	cld    
  403cdb:	mov    edi,0x75e8baaf
  403ce0:	pop    edi
  403ce1:	fwait
  403ce2:	outs   dx,BYTE PTR ds:[esi]
  403ce3:	clc    
  403ce4:	xchg   ebx,eax
  403ce5:	(bad)  
  403ce6:	pop    ss
  403ce7:	or     esp,DWORD PTR [ebx-0x12]
  403cea:	call   0xe8b65464
  403cef:	shl    DWORD PTR [ebx-0x12],1
  403cf2:	call   0xb2c6986c
  403cf7:	cli    
  403cf8:	cld    
  403cf9:	mov    bh,BYTE PTR [edx+0xc2]
	...
  403d0b:	imul   ebp,esi,0x4e
  403d0e:	mov    edi,edi
  403d10:	outs   dx,BYTE PTR ds:[esi]
  403d11:	mov    edi,0xccc790e8
  403d16:	lea    esp,[esi]
  403d18:	add    eax,0x59d45365
  403d1d:	icebp  
  403d1e:	fcmovne st,st(3)
  403d20:	mov    dh,0xe9
  403d22:	add    ebx,esi
  403d24:	(bad)  
  403d25:	fidivr WORD PTR [ebx-0xc]
  403d28:	add    al,0xe9
  403d2a:	add    esi,DWORD PTR [ecx+ebx*2-0x2318240f]
  403d31:	ss call 0xe8758711
  403d37:	push   ss
  403d38:	loope  0x403d4b
  403d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d3b:	mov    dl,0x4
  403d3d:	jmp    0x6d540a3e
  403d42:	xchg   DWORD PTR [ebx+0x5],esp
  403d45:	jmp    0x71563c4
  403d4a:	outs   dx,BYTE PTR ds:[esi]
  403d4b:	outs   dx,DWORD PTR ds:[esi]
  403d4c:	in     al,dx
  403d4d:	sub    ebx,edx
  403d4f:	arpl   WORD PTR ds:0xa5fbf6a,ax
  403d55:	jmp    0x3945f05d
  403d5a:	fmul   QWORD PTR [edx]
  403d5c:	push   es
  403d5d:	jmp    0xc5891765
  403d62:	out    0xce,eax
  403d64:	fld    st(1)
  403d66:	xchg   edi,eax
  403d67:	dec    edx
  403d68:	push   es
  403d69:	jmp    0xe44a5cf0
  403d6e:	add    eax,DWORD PTR [eax]
	...
  403d7c:	add    BYTE PTR [eax],al
  403d7e:	arpl   bp,si
  403d80:	call   0xe9b678d8
  403d85:	add    esp,DWORD PTR [ebx-0x74]
  403d88:	sub    al,0xdc
  403d8a:	mov    DWORD PTR ds:0xe2ff719e,eax
  403d90:	sbb    al,0xf0
  403d92:	add    al,0x59
  403d94:	and    edi,0x8d91d576
  403d9a:	or     al,BYTE PTR [esi]
  403d9c:	jmp    0x3a6523
  403da1:	pop    edi
  403da2:	mov    ds:0xc4f4ffdd,al
  403da7:	in     eax,dx
  403da8:	cmp    BYTE PTR gs:[edi+0x5],bl
  403dac:	call   esp
  403dae:	enter  0x90ea,0x53
  403db2:	mov    esp,0x18e16ae2
  403db7:	and    ebp,DWORD PTR [eax]
  403db9:	test   al,0x60
  403dbb:	loop   0x403e32
  403dbd:	icebp  
  403dbe:	mov    cl,al
  403dc0:	cld    
  403dc1:	ss mov esp,0x122ed80e
  403dc7:	fcos   
  403dc9:	pushf  
  403dca:	cwde   
  403dcb:	jmp    0x3123:0xe2841dba
  403dd2:	jl     0x403e2c
  403dd4:	clc    
  403dd5:	push   cs
  403dd6:	repnz in al,dx
  403dd8:	(bad)  
  403dd9:	jl     0x403e53
  403ddb:	jmp    0x1123:0xe285fde0
	...
  403dee:	add    BYTE PTR [eax],al
  403df0:	add    BYTE PTR [eax+ebx*2-0x14],bh
  403df4:	add    DWORD PTR [ebp+eax*1+0x0],ebp
  403df8:	jmp    0xd228963a
  403dfd:	push   ebp
  403dfe:	loop   0x403dff
  403e00:	jmp    0xc1489642
  403e05:	pop    ss
  403e06:	fdiv   st(7),st
  403e08:	(bad)  
  403e09:	mov    ecx,0x22b05bc6
  403e0e:	or     DWORD PTR [eax],eax
  403e10:	sbb    al,0xa8
  403e12:	icebp  
  403e13:	sub    DWORD PTR [edi+ebx*1],0xffffffe2
  403e17:	jae    0x403e0a
  403e19:	std    
  403e1a:	push   edi
  403e1b:	or     BYTE PTR [ecx-0x16ff4b9d],dl
  403e21:	imul   eax,ebp,0xe1fcabc9
  403e27:	push   esp
  403e28:	add    BYTE PTR [ecx-0x46],dh
  403e2b:	mov    eax,DWORD PTR [ebp-0xe]
  403e2e:	add    al,0x80
  403e30:	add    dl,bh
  403e32:	add    eax,0xc18a6a50
  403e37:	repnz ror dl,1
  403e3a:	add    eax,0x5c6c2c9
  403e3f:	push   ebp
  403e40:	mov    ebx,DWORD PTR [esi]
  403e42:	push   ebx
  403e43:	cld    
  403e44:	mov    ebp,DWORD PTR [edi-0x51b27523]
  403e4a:	out    0xe,al
  403e4c:	push   ecx
  403e4d:	jnp    0x403e10
  403e4f:	add    ch,BYTE PTR [ebx]
  403e51:	jp     0x403e2a
  403e53:	stos   DWORD PTR es:[edi],eax
  403e54:	pop    ecx
	...
  403e61:	add    BYTE PTR [eax],al
  403e63:	add    BYTE PTR [ecx],cl
  403e65:	jmp    0x4b71316d
  403e6a:	leave  
  403e6b:	ret    0x592
  403e6e:	push   ebp
  403e6f:	mov    ebx,DWORD PTR [esi+0x50]
  403e72:	push   edi
  403e73:	mov    ebp,edi
  403e75:	fsincos 
  403e77:	mov    esi,edi
  403e79:	fisttp QWORD PTR [edx+0x2e68a4d]
  403e7f:	repz push ss
  403e81:	dec    ebx
  403e82:	pop    esi
  403e83:	leave  
  403e84:	mov    al,bl
  403e86:	call   DWORD PTR [ecx+edx*8-0x43]
  403e8a:	push   esi
  403e8b:	push   edi
  403e8c:	shl    DWORD PTR [eax+0x8],1
  403e8f:	cld    
  403e90:	rcr    DWORD PTR [eax],0x10
  403e93:	sub    ecx,DWORD PTR [edx]
  403e95:	pop    edi
  403e96:	jge    0x403ea4
  403e98:	sub    DWORD PTR [ebx+esi*8],eax
  403e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e9c:	xor    DWORD PTR [ebp+esi*2+0x5e4a7a01],ebx
  403ea3:	leave  
  403ea4:	enter  0xffdd,0x54
  403ea8:	xchg   ecx,eax
  403ea9:	mov    ebp,0x4feec483
  403eae:	push   edi
  403eaf:	push   ebx
  403eb0:	arpl   WORD PTR [esi],ax
  403eb2:	add    al,BYTE PTR [ecx]
  403eb4:	arpl   si,bp
  403eb6:	in     al,0x75
  403eb8:	imul   esi,DWORD PTR [esi-0x6d],0xffffffff
  403ebc:	in     al,dx
  403ebd:	pop    edi
  403ebe:	jns    0x403f3d
  403ec0:	pop    ebx
  403ec1:	das    
  403ec2:	cmp    eax,0x415b12b
  403ec7:	add    DWORD PTR [eax],eax
	...
  403ed5:	add    BYTE PTR [eax],al
  403ed7:	arpl   si,bp
  403ed9:	jnp    0x403eef
  403edb:	mov    DWORD PTR [eax-0x3e],eax
  403ede:	loop   0x403eaa
  403ee0:	arpl   WORD PTR [edi+0x8],sp
  403ee3:	and    al,0xa7
  403ee5:	js     0x403f5c
  403ee7:	xor    BYTE PTR [bx],bh
  403eea:	(bad)  
  403eeb:	arpl   bx,si
  403eed:	mov    edx,0x64882b
  403ef2:	cmp    ebp,ebx
  403ef4:	test   eax,0x281e00e4
  403ef9:	jp     0x403eff
  403efb:	push   edx
  403efc:	out    dx,al
  403efd:	ds (bad) 
  403eff:	push   esp
  403f00:	inc    eax
  403f01:	dec    edi
  403f02:	(bad)  
  403f03:	jmp    0x5fc868f2
  403f08:	ret    
  403f09:	jns    0x403f50
  403f0b:	ins    BYTE PTR es:[edi],dx
  403f0c:	push   esi
  403f0d:	add    BYTE PTR [edx],bh
  403f0f:	and    dl,BYTE PTR [ebx-0x132eefca]
  403f15:	sbb    cl,cl
  403f17:	push   ebp
  403f18:	stos   DWORD PTR es:[edi],eax
  403f19:	outs   dx,BYTE PTR ds:[esi]
  403f1a:	aad    0xa8
  403f1c:	pop    ds
  403f1d:	inc    esi
  403f1e:	leave  
  403f1f:	and    edx,ebp
  403f21:	add    edx,DWORD PTR [ebp-0x18]
  403f24:	mov    eax,ds:0xfb3bc480
  403f29:	dec    ebp
  403f2a:	push   edi
  403f2b:	sub    al,0x19
  403f2d:	cld    
  403f2e:	pop    edx
  403f2f:	fldl2e 
  403f31:	jnp    0x403f78
  403f33:	push   ds
  403f34:	fs inc eax
  403f36:	add    ebx,ebp
  403f38:	add    al,0x2c
  403f3a:	call   0x403f3f
	...
  403f47:	add    BYTE PTR [eax],al
  403f49:	add    al,bl
  403f4b:	(bad)  [esi]
  403f4d:	cmp    eax,0xbce559d8
  403f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f53:	fucomp st(1)
  403f55:	add    esp,DWORD PTR [ebx+0x5]
  403f58:	jb     0x403f90
  403f5a:	push   ebx
  403f5b:	in     al,0x29
  403f5d:	out    0x9e,al
  403f5f:	loop   0x403f47
  403f61:	lods   eax,DWORD PTR ds:[esi]
  403f62:	es loop 0x403f43
  403f65:	lods   eax,DWORD PTR ds:[esi]
  403f66:	outs   dx,DWORD PTR ds:[esi]
  403f67:	sbb    eax,0x4cc4e71
  403f6c:	mov    ah,0xe7
  403f6e:	push   esp
  403f6f:	xchg   edi,eax
  403f70:	lods   al,BYTE PTR ds:[esi]
  403f71:	out    0xe9,eax
  403f73:	clc    
  403f74:	adc    BYTE PTR [esi+ecx*1-0x21],bh
  403f78:	imul   BYTE PTR [ebp+0xf71e226]
  403f7e:	imul   edx,DWORD PTR [eax],0x7f
  403f81:	ds lahf 
  403f83:	mov    dl,BYTE PTR [esp+eiz*8+0x79e0f8eb]
  403f8a:	ss loopne 0x403f78
  403f8d:	dec    esi
  403f8e:	test   DWORD PTR [edx+0x49e829fd],ecx
  403f94:	adc    DWORD PTR [ebx],esi
  403f96:	dec    edi
  403f97:	adc    eax,0xe26b3e06
  403f9c:	sub    DWORD PTR [ecx+0x1e],edi
  403f9f:	loop   0x404002
  403fa1:	add    cl,ch
  403fa3:	dec    eax
  403fa4:	in     eax,dx
  403fa5:	jp     0x403f47
  403fa7:	add    al,0x46
  403fa9:	inc    edx
  403faa:	test   al,0xcc
  403fac:	stos   DWORD PTR es:[edi],eax
  403fad:	adc    BYTE PTR [eax],al
	...
  403fbb:	add    BYTE PTR [eax],al
  403fbd:	arpl   WORD PTR [eax],di
  403fbf:	(bad)  
  403fc0:	lock loop 0x403f8c
  403fc3:	mov    ebp,0x1adf34e2
  403fc8:	das    
  403fc9:	or     BYTE PTR [ecx-0x216c1fdc],dl
  403fcf:	add    BYTE PTR [edi+ebp*2],bh
  403fd2:	in     eax,dx
  403fd3:	mov    ds:0x85055f99,eax
  403fd8:	test   eax,0xe9968d70
  403fdd:	pusha  
  403fde:	add    eax,0xed6f1cff
  403fe3:	das    
  403fe4:	xchg   edi,eax
  403fe5:	add    bh,bl
  403fe7:	mov    DWORD PTR [ebx+ecx*1],ebp
  403fea:	fbstp  TBYTE PTR [ebp+0x7d]
  403fed:	imul   DWORD PTR [ebp-0x31]
  403ff0:	jmp    0xf6004a55
  403ff5:	inc    ecx
  403ff6:	mov    WORD PTR [ebp+0x59],es
  403ff9:	rcr    BYTE PTR [eax-0xc],0x51
  403ffd:	cmp    edi,ebx
  403fff:	call   DWORD PTR [esi-0x12]
  404002:	dec    eax
  404003:	clc    
  404004:	dec    esi
  404005:	sbb    bl,cl
  404007:	(bad)  
  404008:	mov    esp,0x3975de88
  40400d:	mov    bh,0x91
  40400f:	(bad)  
  404010:	ss sbb dh,0x75
  404014:	sub    eax,0xe9cf4787
  404019:	pusha  
  40401a:	fidiv  WORD PTR [ebp-0x13]
  40401d:	js     0x404032
  40401f:	iret   
  404020:	jmp    0x404025
	...
  40402d:	add    BYTE PTR [eax],al
  40402f:	add    BYTE PTR [eax+0x35],ah
  404032:	call   DWORD PTR [esp+eiz*2-0x7ee87a70]
  404039:	fdivp  st(7),st
  40403b:	cdq    
  40403c:	js     0x403fe6
  40403e:	(bad)  
  40403f:	test   BYTE PTR [ecx-0x22],0x75
  404043:	cmc    
  404044:	inc    ecx
  404045:	pop    eax
  404046:	clc    
  404047:	je     0x404024
  404049:	out    dx,al
  40404a:	(bad)  
  40404b:	fiadd  WORD PTR [ecx+0x35]
  40404e:	call   0x1e832a
  404053:	into   
  404054:	fwait
  404055:	or     eax,0xc17d00e8
  40405a:	(bad)  
  40405b:	call   DWORD PTR [eax+0x62496811]
  404061:	dec    eax
  404062:	add    bh,bh
  404064:	dec    edi
  404065:	adc    eax,ebp
  404067:	xchg   ebx,eax
  404068:	shl    dl,0xff
  40406b:	or     esp,DWORD PTR [edx]
  40406d:	jecxz  0x4040e4
  40406f:	hlt    
  404070:	aad    0x3c
  404072:	clc    
  404073:	dec    DWORD PTR [edi+0x11]
  404076:	call   0x2320fe
  40407b:	and    eax,edx
  40407d:	loop   0x4040f4
  40407f:	clc    
  404080:	loop   0x404020
  404082:	std    
  404083:	inc    DWORD PTR [ebp-0x1d]
  404086:	jne    0x404090
  404088:	xor    al,BYTE PTR [ebp-0x70da0009]
  40408e:	ret    
  40408f:	pop    ebx
  404090:	or     eax,0x8
	...
  4040a3:	out    dx,eax
  4040a4:	mov    gs,esp
  4040a6:	cmp    DWORD PTR [esi-0x4a],0x57
  4040aa:	mov    edi,edi
  4040ac:	aad    0xa
  4040ae:	rcr    dh,0xb
  4040b1:	mov    DWORD PTR [eax],0x18a
  4040b7:	mov    cl,0xe2
  4040b9:	cmp    DWORD PTR [ebp+0x62],0x8
  4040bd:	jne    0x4040c6
  4040bf:	adc    BYTE PTR [edx],al
  4040c1:	add    al,BYTE PTR [eax]
  4040c3:	mov    ch,dh
  4040c5:	jae    0x75421ab2
  4040cb:	jge    0x40414c
  4040cd:	add    BYTE PTR [ecx],al
  4040cf:	dec    edx
  4040d0:	or     ebx,ebp
  4040d2:	add    ah,BYTE PTR [ecx]
  4040d4:	xchg   ebx,eax
  4040d5:	or     edx,0x20163
  4040db:	mov    bh,0x44
  4040dd:	cld    
  4040de:	push   eax
  4040df:	arpl   WORD PTR [eax],sp
  4040e1:	outs   dx,BYTE PTR ds:[esi]
  4040e2:	add    BYTE PTR [edx+esi*1],dh
  4040e5:	adc    bh,bh
  4040e7:	mov    dh,0xd6
  4040e9:	jmp    0x4040bb
  4040eb:	adc    al,0xef
  4040ed:	add    ecx,DWORD PTR [ebx]
  4040ef:	and    ebx,DWORD PTR [edx]
  4040f1:	jno    0x404080
  4040f3:	sahf   
  4040f4:	xchg   esi,eax
  4040f5:	xor    al,0x6a
  4040f7:	arpl   WORD PTR [ecx+0x47],dx
  4040fa:	hlt    
  4040fb:	mov    bl,0xf8
  4040fd:	add    edi,edi
  4040ff:	jbe    0x4040df
  404101:	loopne 0x404178
  404103:	test   DWORD PTR [esi+0xcf9d],0x0
	...
  404115:	add    BYTE PTR [ebx-0x12],ah
  404118:	or     al,0xc0
  40411a:	outs   dx,BYTE PTR ds:[esi]
  40411b:	sub    al,BYTE PTR [ebp+0x57eedb7d]
  404121:	inc    esi
  404122:	loopne 0x40410d
  404124:	xlat   BYTE PTR ds:[ebx]
  404125:	add    DWORD PTR [esi-0x14],edx
  404128:	test   BYTE PTR [ebp-0x35],bh
  40412b:	in     eax,dx
  40412c:	push   edi
  40412d:	cmp    ch,al
  40412f:	test   eax,0x461340db
  404134:	inc    edx
  404135:	std    
  404136:	lods   al,BYTE PTR ds:[esi]
  404137:	inc    ebx
  404138:	(bad)  
  404139:	clc    
  40413a:	(bad)  
  40413b:	mov    eax,ds:0xc83450db
  404140:	add    ebp,DWORD PTR [edx+0x63]
  404143:	sub    edx,DWORD PTR [edi+0x10]
  404146:	mov    WORD PTR [ecx-0x21],?
  404149:	call   0x446d2c
  40414e:	push   0xc0a582e
  404153:	push   es
  404154:	sub    ebp,edi
  404156:	ins    BYTE PTR es:[edi],dx
  404157:	add    ebp,DWORD PTR ds:0x8cea78ff
  40415d:	inc    ebp
  40415e:	ja     0x404147
  404160:	ret    
  404161:	je     0x4041c1
  404163:	jmp    0x4041bb
  404165:	clc    
  404166:	fadd   QWORD PTR [ecx+ebp*8]
  404169:	loopne 0x404139
  40416b:	(bad)  
  40416d:	push   0x2c
  40416f:	add    eax,0x101c8ce9
  404174:	test   eax,0x44884f56
  404179:	cld    
	...
  404186:	add    BYTE PTR [eax],al
  404188:	add    BYTE PTR [edx+0x58],ah
  40418b:	xlat   BYTE PTR ds:[ebx]
  40418c:	mov    WORD PTR [esi+0x143428fd],fs
  404192:	push   edx
  404193:	aad    0xe0
  404195:	xchg   esi,eax
  404196:	cmc    
  404197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404198:	push   esi
  404199:	push   edi
  40419a:	fcom   QWORD PTR [esp+ecx*1]
  40419d:	or     esp,DWORD PTR [esi]
  40419f:	xchg   esi,eax
  4041a0:	loopne 0x404196
  4041a2:	cmp    esp,DWORD PTR [eax+0x1c0557c5]
  4041a8:	(bad)  
  4041a9:	test   DWORD PTR [ebp+0x5620bfc],0xe4e83e9
  4041b3:	outs   dx,BYTE PTR ds:[esi]
  4041b4:	push   ss
  4041b5:	sbb    BYTE PTR [esi],ch
  4041b7:	test   al,0x3
  4041b9:	aam    0x41
  4041bb:	icebp  
  4041bc:	ins    DWORD PTR es:[edi],dx
  4041bd:	arpl   sp,bx
  4041bf:	fdivr  st(7),st
  4041c1:	mov    ch,0x51
  4041c3:	stc    
  4041c4:	loopne 0x4041fc
  4041c6:	or     DWORD PTR [esi+0x56],eax
  4041c9:	pop    ebx
  4041ca:	in     eax,dx
  4041cb:	xor    eax,0x20db9ce1
  4041d0:	lds    esi,FWORD PTR [ebx+0x5]
  4041d3:	add    al,ah
  4041d5:	fdiv   DWORD PTR [eax+edi*1-0x16f2351b]
  4041dc:	add    esp,DWORD PTR [ebx-0x4a]
  4041df:	add    edx,DWORD PTR [edi+eiz*2-0x7a]
  4041e3:	sbb    edx,DWORD PTR [edx]
  4041e5:	shr    DWORD PTR [ebp-0xa8e7dfb],1
  4041eb:	xlat   BYTE PTR ds:[ebx]
  4041ec:	repnz add BYTE PTR [eax],al
	...
  4041fb:	add    BYTE PTR [ebx-0x19],dh
  4041fe:	add    BYTE PTR [edi],al
  404200:	jmp    0xc1d9c6f6
  404205:	inc    esp
  404206:	add    bh,ah
  404208:	pop    ds
  404209:	push   ecx
  40420a:	fisubr DWORD PTR [edx+0x3eec8e7a]
  404210:	call   0xf8164a55
  404215:	mov    ?,WORD PTR [ebp-0xb]
  404218:	(bad)  [eax+0x10]
  40421b:	repnz das 
  40421d:	push   edx
  40421e:	sbb    BYTE PTR [edx-0x31],ah
  404221:	(bad)  
  404222:	jmp    0x5fa6:0x250272e1
  404229:	add    eax,0x806b7200
  40422e:	push   eax
  40422f:	or     BYTE PTR [esi-0x5b54ccfb],bl
  404235:	out    0xe8,eax
  404237:	jle    0x4041e8
  404239:	cmp    cl,cl
  40423b:	stos   DWORD PTR es:[edi],eax
  40423c:	jae    0x404243
  40423e:	push   ebp
  40423f:	(bad)
  404244:	pop    eax
  404245:	add    eax,0x409dee75
  40424a:	or     BYTE PTR [edi+0x6a00448f],bl
  404250:	inc    edx
  404251:	or     DWORD PTR [eax],eax
  404253:	aam    0x65
  404255:	ret    0xf545
  404258:	(bad)  
  404259:	sub    eax,0x50bde941
  40425e:	or     BYTE PTR [ecx+0x0],al
	...
  40426d:	add    BYTE PTR [eax],al
  40426f:	je     0x404239
  404271:	add    cl,ch
  404273:	fnstcw WORD PTR [ebp-0x12ab6301]
  404279:	xor    eax,0x305672c
  40427e:	xor    DWORD PTR [eax],esp
  404280:	ss call 0x1acf54
  404286:	add    cl,dh
  404288:	cwde   
  404289:	push   DWORD PTR [ebp+0x52]
  40428c:	pop    ss
  40428d:	call   0x41c1d1
  404292:	call   edi
  404294:	or     dl,BYTE PTR [ebx-0x18]
  404297:	jle    0x40424d
  404299:	add    BYTE PTR [eax],al
  40429b:	mov    cl,0xc7
  40429d:	pop    ebx
  40429e:	leave  
  40429f:	or     BYTE PTR [esi],cl
  4042a1:	add    BYTE PTR [ebp-0x3f],dl
  4042a4:	jmp    0x7500:0x99f8353
  4042ab:	add    eax,0x8c0845c3
  4042b0:	cs inc ecx
  4042b2:	add    BYTE PTR [ecx+0x65],bh
  4042b5:	or     al,0x0
  4042b7:	addr16 add al,bh
  4042ba:	inc    ebp
  4042bb:	push   cs
  4042bc:	js     0x4042e6
  4042be:	inc    ecx
  4042bf:	or     bh,BYTE PTR [ebx-0x111df78b]
  4042c5:	int3   
  4042c6:	add    dl,bh
  4042c8:	mov    ds,eax
  4042ca:	call   edi
  4042cc:	or     eax,ebp
  4042ce:	loope  0x4042ce
  4042d0:	add    eax,0x300
	...
  4042e1:	add    dl,dh
  4042e3:	inc    esi
  4042e4:	push   ebx
  4042e5:	call   0x40021b
  4042ea:	xor    DWORD PTR [esi+0x16c275ff],ebx
  4042f0:	call   0x4691e0
  4042f5:	jmp    edi
  4042f7:	or     DWORD PTR [ebx-0x18],edx
  4042fa:	xor    cl,dl
  4042fc:	add    BYTE PTR [eax],al
  4042fe:	dec    ebp
  4042ff:	cmp    eax,0xbf12e808
  404304:	(bad)  
  404305:	call   DWORD PTR [ecx]
  404307:	(bad)  
  404308:	pop    ebx
  404309:	leave  
  40430a:	dec    eax
  40430b:	push   cs
  40430c:	add    BYTE PTR [ebp+0x63],dl
  40430f:	addr16 out dx,eax
  404311:	and    DWORD PTR [edi+0x5e683607],0xffffffed
  404318:	add    eax,DWORD PTR [eax]
  40431a:	dec    ebx
  40431b:	adc    dl,bl
  40431d:	call   DWORD PTR [esi+eiz*2+0x48]
  404321:	cld    
  404322:	loopne 0x4042cd
  404324:	jo     0x40434f
  404326:	mov    ds:0x617503ee,al
  40432b:	mov    bl,0xf6
  40432d:	(bad)  
  40432e:	scas   al,BYTE PTR es:[edi]
  40432f:	mov    dl,0x6a
  404331:	add    BYTE PTR [ecx+0x5b75dcee],bh
  404337:	xor    al,0x4
  404339:	push   DWORD PTR [esi+0x49]
  40433c:	sub    eax,DWORD PTR [ecx+0x63]
  40433f:	imul   eax,esp,0x57a79b79
  404345:	cld    
	...
  404352:	add    BYTE PTR [eax],al
  404354:	add    bl,bh
  404356:	cli    
  404357:	fdivr  st,st(7)
  404359:	cld    
  40435a:	lahf   
  40435b:	inc    edi
  40435c:	cld    
  40435d:	arpl   si,bp
  40435f:	add    eax,DWORD PTR [eax]
  404361:	lods   al,BYTE PTR ds:[esi]
  404362:	std    
  404363:	sub    al,BYTE PTR [ecx+0x63]
  404366:	jae    0x404397
  404368:	mov    esi,DWORD PTR [ebx+edx*2+0x47]
  40436c:	or     BYTE PTR [esi+0x4f],bh
  40436f:	pop    ebp
  404370:	dec    esp
  404372:	xchg   ebp,eax
  404373:	inc    ecx
  404374:	add    al,0x4e
  404376:	add    ebp,DWORD PTR [edx+0x0]
  404379:	out    dx,al
  40437a:	lods   al,BYTE PTR ds:[esi]
  40437b:	or     edx,DWORD PTR [eax+0x4b]
  40437e:	jno    0x4043aa
  404380:	inc    ecx
  404381:	arpl   WORD PTR [edi+0x12],ax
  404384:	call   0x1d838f
  404389:	push   0xea05582e
  40438e:	test   eax,0x6b5bebdf
  404393:	lds    eax,FWORD PTR [eax+eiz*8]
  404396:	add    eax,0xc6f603e6
  40439b:	jb     0x4043e4
  40439d:	ja     0x4043d7
  40439f:	and    dl,al
  4043a1:	addr16 add eax,0x347788b4
  4043a7:	jb     0x4043f0
  4043a9:	imul   ecx,DWORD PTR [ecx+ebp*1],0x58
  4043ad:	pop    esi
  4043ae:	test   DWORD PTR [ecx+0x310bd603],esi
  4043b4:	add    al,0x63
  4043b6:	add    eax,0x38e9
	...
  4043c7:	add    BYTE PTR [edx],ch
  4043c9:	ret    
  4043ca:	in     eax,0x3
  4043cc:	leave  
  4043cd:	add    eax,0x4b90443
  4043d2:	inc    ebx
  4043d3:	add    al,0xb9
  4043d5:	add    eax,0x5638451
  4043da:	jmp    0xc14dd2bb
  4043df:	in     al,0x18
  4043e1:	add    eax,0x2c2b88e9
  4043e6:	test   eax,0x3a0c7740
  4043eb:	in     al,dx
  4043ec:	std    
  4043ed:	retf   
  4043ee:	jmp    0xe945eef6
  4043f3:	add    esp,DWORD PTR [ebx+0x3c]
  4043f6:	mov    al,0xc1
  4043f8:	addr16 add eax,0x8bc78914
  4043fe:	sub    al,0xc
  404400:	pop    eax
  404401:	(bad)
  404404:	jecxz  0x404422
  404406:	jmp    0xe9ddae61
  40440b:	add    esp,DWORD PTR [ebx+0x5]
  40440e:	and    cl,al
  404410:	addr16 add eax,0xed5b564e
  404416:	cmp    ecx,eax
  404418:	arpl   WORD PTR ds:0x5094db6a,ax
  40441e:	add    ah,ah
  404420:	mov    ecx,0x60e8fff4
  404425:	or     BYTE PTR [ebp-0x3f7090d7],dl
  40442b:	adc    al,BYTE PTR [eax]
	...
  404439:	add    BYTE PTR [eax],al
  40443b:	pop    ebp
  40443c:	popf   
  40443d:	add    cl,ch
  40443f:	pusha  
  404440:	add    eax,0x55c2bc9
  404445:	push   ebp
  404446:	jb     0x404494
  404448:	add    esp,0xfffffffd
  40444b:	retf   
  40444c:	add    eax,0x512fe96a
  404451:	or     BYTE PTR [ecx],al
  404453:	sbb    ecx,ebx
  404455:	add    cl,ch
  404457:	ins    DWORD PTR es:[edi],dx
  404458:	lds    esi,FWORD PTR [ebx+edx*1+0x6f]
  40445c:	xor    eax,0xd70d8ae8
  404461:	jmp    DWORD PTR [eax-0x5e]
  404464:	fstp   DWORD PTR [eax+0x19]
  404467:	cmp    BYTE PTR [ecx-0x4],dl
  40446a:	mov    esi,0x79e80db2
  40446f:	sbb    al,0x6
  404471:	add    dl,ah
  404473:	and    BYTE PTR [ecx+0xc],dl
  404476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404477:	xchg   edx,eax
  404478:	fld1   
  40447a:	sbb    DWORD PTR ds:0x20c2ffd7,edx
  404480:	jmp    0x404485
  404482:	bound  esp,QWORD PTR [edx+0x63abc9d9]
  404488:	add    eax,0x32cb7255
  40448d:	mov    edx,DWORD PTR [ebx+ebx*2]
  404490:	imul   edx,DWORD PTR [eax],0x1a
  404493:	mov    bh,0x81
  404495:	cli    
  404496:	cbw    
  404498:	imul   eax,DWORD PTR [eax],0xffffffd3
  40449b:	pusha  
  40449c:	imul   eax,DWORD PTR [ebx],0xffffffc3
	...
  4044ab:	add    BYTE PTR [eax],al
  4044ad:	add    BYTE PTR [eax+0x6b],ah
  4044b0:	add    eax,ecx
  4044b2:	pusha  
  4044b3:	add    eax,0xba0a0000
  4044b8:	jne    0x4044c2
  4044ba:	xor    ah,BYTE PTR [esi]
  4044bc:	retf   
  4044bd:	add    BYTE PTR [edx-0x77],bh
  4044c0:	add    eax,DWORD PTR [eax-0x32]
  4044c3:	push   cs
  4044c4:	push   0x0
  4044c6:	mov    edx,0x8acb6cea
  4044cb:	add    cl,BYTE PTR [ecx+0x688643]
  4044d1:	push   0x7a
  4044d3:	push   0x68486a00
  4044d8:	add    bh,bh
  4044da:	sbb    edx,ebp
  4044dc:	pop    esi
  4044dd:	retf   
  4044de:	cmp    al,BYTE PTR [edx]
  4044e0:	or     eax,eax
  4044e2:	into   
  4044e3:	sub    ecx,DWORD PTR [ecx+0x684e43]
  4044e9:	push   0x4a
  4044eb:	push   0x123e6a00
  4044f0:	call   0x424644
  4044f5:	mov    DWORD PTR [ecx+0x9],ecx
  4044f8:	or     eax,eax
  4044fa:	dec    edi
  4044fb:	and    eax,0xe9fe73ff
  404500:	repnz retf 0x1fa
  404504:	push   DWORD PTR [ebx]
  404506:	shl    dh,cl
  404508:	retf   0xa00
  40450b:	ret    
  40450c:	add    edi,edi
  40450e:	aad    0xba
  404510:	(bad)  
  404511:	jmp    0x404513
	...
  40451f:	add    BYTE PTR [eax],al
  404521:	pop    es
  404522:	mov    ebx,0xc806e833
  404527:	add    BYTE PTR [eax],al
  404529:	std    
  40452a:	(bad)  
  40452b:	(bad)  
  40452c:	call   DWORD PTR [ebp-0x45]
  40452f:	sub    eax,eax
  404531:	adc    edi,DWORD PTR [edi]
  404533:	or     BYTE PTR [edi],cl
  404535:	aas    
  404536:	ret    0xc95b
  404539:	mov    BYTE PTR [edx],cl
  40453b:	add    BYTE PTR [ebp+0x63],dl
  40453e:	arpl   di,sp
  404540:	push   ebx
  404541:	fsubr  DWORD PTR [eax+0x3f58830b]
  404547:	dec    edi
  404548:	pop    ss
  404549:	xchg   esp,eax
  40454a:	call   0x3:0x235ae80b
  404551:	test   BYTE PTR [edx+0x11cee7ff],bl
  404557:	add    eax,DWORD PTR [eax]
  404559:	je     0x404515
  40455b:	jmp    0x404503
  40455d:	cdq    
  40455e:	jmp    0x404563
  404560:	pop    ebx
  404561:	call   0xe757:0xb7ffff29
  404568:	sbb    DWORD PTR [edi],0x4cffe9ff
  40456e:	jne    0x4045a2
  404570:	add    DWORD PTR [esi+0x63412b8a],0xffffffde
  404577:	dec    edi
  404578:	adc    eax,0x285ffa34
  40457d:	mov    ds:0x2a8aebde,al
  404582:	(bad)  
  404583:	fld    st(7)
	...
  404591:	add    BYTE PTR [eax],al
  404593:	add    BYTE PTR [esi+0x42],ah
  404596:	sub    al,0x41
  404598:	arpl   si,bx
  40459a:	add    eax,DWORD PTR [eax]
  40459c:	arpl   WORD PTR [edi+0x17],bx
  40459f:	push   0x41d3b
  4045a4:	ja     0x404577
  4045a6:	fdiv   DWORD PTR ds:0x42b68b
  4045ac:	sti    
  4045ad:	or     bl,bl
  4045af:	jmp    esp
  4045b1:	stos   DWORD PTR es:[edi],eax
  4045b2:	jmp    DWORD PTR [edi-0x75]
  4045b5:	sbb    eax,0xde630004
  4045ba:	add    ecx,DWORD PTR [ebp-0x16b11a]
  4045c0:	(bad)  
  4045c1:	out    dx,al
  4045c2:	jmp    0x40456a
  4045c4:	mov    bl,0x5
  4045c6:	data16 (bad) 
  4045c9:	mov    cl,BYTE PTR [ebp-0x17]
  4045cc:	lods   al,BYTE PTR ds:[esi]
  4045cd:	aam    0xb9
  4045cf:	jmp    0x40459a
  4045d1:	aad    0x4e
  4045d3:	fldz   
  4045d5:	dec    edx
  4045d6:	inc    ebp
  4045d7:	xor    al,0xb
  4045d9:	popa   
  4045da:	adc    DWORD PTR [ebx+0x63],eax
  4045dd:	pop    ebp
  4045de:	jmp    0x4045e3
  4045e0:	arpl   WORD PTR [ebp+0x5a87141],ax
  4045e6:	jmp    0x6444e8f7
  4045eb:	cmp    eax,0xc0e90562
  4045f0:	fcompp 
  4045f2:	(bad)  
  4045f3:	fcomp  DWORD PTR [ebp+eax*1-0x17]
  4045f7:	add    eax,DWORD PTR [eax]
	...
  404605:	add    BYTE PTR [eax],al
  404607:	arpl   sp,cx
  404609:	fdivr  QWORD PTR fs:[esp+edx*8]
  40460d:	neg    al
  40460f:	push   esp
  404610:	add    eax,0x5f636de9
  404615:	jmp    0xe99fa987
  40461a:	xchg   dh,ah
  40461c:	int3   
  40461d:	(bad)  
  40461e:	fsub   DWORD PTR [esi*1-0x1be081a4]
  404625:	(bad)  
  404626:	fdiv   DWORD PTR [ebx-0x3308b2c]
  40462c:	shl    DWORD PTR [esi-0x3e2e7128],cl
  404632:	sub    BYTE PTR ss:0x4230ce9,al
  404639:	fs hlt 
  40463b:	arpl   WORD PTR ds:0x1ca76be9,ax
  404641:	sub    BYTE PTR [ebx+ecx*2],al
  404644:	popa   
  404645:	rol    DWORD PTR [edx+0x63],1
  404648:	(bad)  
  40464a:	xlat   BYTE PTR ds:[ebx]
  40464b:	int3   
  40464c:	rol    DWORD PTR [eax],cl
  40464e:	loop   0x4045f0
  404650:	add    eax,DWORD PTR [eax+edi*2+0x72000560]
  404657:	lock add DWORD PTR [ebp-0x2c44a3],0xbcdd6eb9
  404662:	dec    ebp
  404663:	mov    ebx,0x6b290bd3
  404668:	mov    edx,ebx
  40466a:	jmp    0x40466f
	...
  404677:	add    BYTE PTR [eax],al
  404679:	add    BYTE PTR [eax+0x5],ah
  40467c:	mov    DWORD PTR [eax+eax*4-0x1d],ebp
  404680:	jmp    FWORD PTR [esi]
  404682:	in     eax,0x89
  404684:	call   0x5113e19f
  404689:	xchg   ecx,eax
  40468a:	rcr    BYTE PTR [ecx+eax*2],0xe9
  40468e:	mov    ebx,DWORD PTR [ecx-0x2ccb0120]
  404694:	push   0x800560eb
  404699:	adc    ebx,esi
  40469b:	into   
  40469c:	push   esi
  40469e:	pop    eax
  40469f:	lds    ecx,FWORD PTR [edi]
  4046a1:	fld    QWORD PTR gs:0xcde1e900
  4046a8:	add    esi,ebp
  4046aa:	scas   al,BYTE PTR es:[edi]
  4046ab:	jno    0x4046ad
  4046ad:	jmp    0x953f7c12
  4046b2:	pavgw  mm7,mm7
  4046b5:	(bad)  
  4046b6:	dec    edi
  4046b7:	shl    BYTE PTR [ebp-0x2cfb47],cl
  4046bd:	rol    DWORD PTR [esi],0xda
  4046c0:	jmp    FWORD PTR [esi-0x69177716]
  4046c6:	or     al,0xd3
  4046c8:	push   eax
  4046c9:	adc    edi,edx
  4046cb:	sbb    eax,0x990de941
  4046d0:	loopne 0x404750
  4046d2:	mov    ah,0xd2
  4046d4:	push   0x6c800
  4046d9:	xor    dl,0x42
  4046dc:	sti    
  4046dd:	inc    DWORD PTR [eax]
	...
  4046eb:	add    BYTE PTR [eax],al
  4046ed:	dec    ebp
  4046ee:	(bad)  
  4046ef:	mov    edi,0xbd868674
  4046f4:	call   0x2400106
  4046f9:	xchg   esp,eax
  4046fa:	out    dx,eax
  4046fb:	dec    edi
  4046fc:	push   eax
  4046fd:	aas    
  4046fe:	test   ah,bh
  404700:	out    dx,eax
  404701:	sub    eax,0xd2e850ba
  404706:	rol    DWORD PTR [eax],0x0
  404709:	jmp    0xffba:0x1dfc857d
  404710:	push   eax
  404711:	dec    ebp
  404712:	je     0x404700
  404714:	out    dx,eax
  404715:	cmp    eax,0x56cfe8ba
  40471a:	mov    edx,0x744d58ff
  40471f:	call   0x50fab513
  404724:	call   DWORD PTR [edi+0x4dffefdd]
  40472a:	fidivr WORD PTR [esp+esi*8+0x19e8bb4d]
  404731:	xor    bh,BYTE PTR [ebx+0x7c6aebff]
  404737:	test   esp,edi
  404739:	sbb    eax,0x2250ffbb
  40473e:	or     ecx,ecx
  404740:	add    BYTE PTR [edx],cl
  404742:	inc    esi
  404743:	push   eax
  404744:	lea    eax,[edi-0x32001046]
  40474a:	adc    eax,0xeb1eb5ff
  40474f:	(bad)  
  404750:	inc    DWORD PTR [eax]
	...
  40475e:	add    BYTE PTR [eax],al
  404760:	and    dl,BYTE PTR [ebp-0xc]
  404763:	(bad)  
  404764:	mov    ebp,0xcdf7f2dd
  404769:	mov    edx,0x7c63b5ff
  40476e:	out    0xff,al
  404770:	fadd   QWORD PTR [ebx-0x752b0822]
  404776:	(bad)  
  404777:	test   edi,edx
  404779:	adc    dh,0xff
  40477c:	mov    edx,0xbcffd512
  404781:	bound  edx,QWORD PTR [eax-0x4]
  404784:	retf   
  404785:	stc    
  404786:	leave  
  404787:	add    BYTE PTR [ebx-0x4a],ah
  40478a:	add    edi,edi
  40478c:	out    dx,al
  40478d:	sub    esp,esi
  40478f:	call   FWORD PTR [ebx+eax*2+0x4a94f433]
  404796:	imul   eax,DWORD PTR [eax],0xefe7588c
  40479c:	test   BYTE PTR [edx],bl
  40479e:	jmp    0x4047e3
  4047a0:	ja     0x4047c4
  4047a2:	(bad)  
  4047a3:	(bad)  
  4047a4:	fdivp  st(7),st
  4047a6:	in     eax,0xff
  4047a8:	ins    BYTE PTR es:[edi],dx
  4047a9:	mov    edx,esi
  4047ab:	mov    ch,0x73
  4047ad:	or     dl,dh
  4047af:	dec    DWORD PTR [ebx+0xd]
  4047b2:	int3   
  4047b3:	add    BYTE PTR [ebx+0x61],ah
  4047b6:	ret    
  4047b7:	js     0x404751
  4047b9:	iret   
  4047ba:	(bad)  
  4047bb:	lock xor al,0xd8
  4047be:	aad    0xe8
  4047c0:	pushf  
  4047c1:	iret   
  4047c2:	aad    0xff
	...
  4047d0:	add    BYTE PTR [eax],al
  4047d2:	add    dl,ch
  4047d4:	popa   
  4047d5:	in     al,dx
  4047d6:	out    dx,eax
  4047d7:	sub    al,0xb0
  4047d9:	aad    0xb5
  4047db:	cmp    ecx,eax
  4047dd:	aad    0xff
  4047df:	or     esp,DWORD PTR [eax-0x33]
  4047e2:	call   DWORD PTR [esp+edi*2]
  4047e5:	pusha  
  4047e6:	sub    BYTE PTR [edx-0x4a2b22],ah
  4047ec:	(bad)  
  4047ed:	aad    0xff
  4047ef:	or     ebx,DWORD PTR [ebp-0x34]
  4047f2:	add    BYTE PTR [ebx+0x5],ah
  4047f5:	bnd ret 
  4047f7:	ja     0x4047e5
  4047f9:	jno    0x404782
  4047fb:	sti    
  4047fc:	loopne 0x404794
  4047fe:	aad    0xe8
  404800:	aad    0x62
  404802:	pop    ss
  404803:	aas    
  404804:	sbb    eax,0xa9d00428
  404809:	jle    0x40479a
  40480b:	mov    edi,0xcbd576e0
  404810:	pop    esi
  404811:	mov    eax,ds:0x6c826304
  404816:	loopne 0x4047d4
  404818:	rcr    BYTE PTR [esi+0x34],1
  40481b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40481c:	call   0x5341:0xd09ce545
  404823:	stos   BYTE PTR es:[edi],al
  404824:	add    eax,0x4da37ee9
  404829:	mov    dl,0xd4
  40482b:	into   
  40482c:	loope  0x404874
  40482e:	aad    0x7c
  404830:	(bad)  [edi]
  404832:	out    0x74,al
  404834:	shl    BYTE PTR [eax+0x7f],1
	...
  404843:	add    BYTE PTR [eax],al
  404845:	add    BYTE PTR [ebx-0x20],bh
  404848:	push   ds
  404849:	aad    0x64
  40484b:	call   0x1601:0xd05ce501
  404852:	dec    esp
  404853:	rol    BYTE PTR [esi],1
  404855:	mov    eax,ds:0x3a81dbb
  40485a:	inc    esp
  40485b:	call   0x2301:0xd03ce50d
  404862:	sub    eax,DWORD PTR ds:0x592308e9
  404868:	add    cl,BYTE PTR [ecx-0x2b39232a]
  40486e:	sbb    al,0x7c
  404870:	(bad)  [eax+0x43115d56]
  404876:	arpl   sp,dx
  404878:	test   esp,edx
  40487a:	into   
  40487b:	call   0xd0580e80
  404880:	call   0x457166
  404885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404886:	fst    st(4)
  404888:	out    dx,eax
  404889:	sahf   
  40488a:	paddusw mm3,QWORD PTR [edx-0x79]
  40488e:	mov    bh,0xcf
  404890:	call   DWORD PTR [esp+edi*4-0x21]
  404894:	inc    DWORD PTR [esi+0x7eee3fb8]
  40489a:	scas   eax,DWORD PTR es:[edi]
  40489b:	das    
  40489c:	pop    esi
  40489d:	mov    al,ds:0x7d8b39a3
  4048a2:	dec    edx
  4048a3:	std    
  4048a4:	out    0x52,eax
  4048a6:	sahf   
  4048a7:	iret   
  4048a8:	push   DWORD PTR [edx+0x0]
	...
  4048b7:	add    BYTE PTR [eax],al
  4048b9:	lock iret 
  4048bb:	xor    eax,0x46482b
  4048c0:	pop    esi
  4048c1:	(bad)  
  4048c2:	shl    BYTE PTR [ebp-0xf],1
  4048c5:	out    0x42,eax
  4048c7:	add    al,0x70
  4048c9:	jne    0x404890
  4048cb:	sub    BYTE PTR [eax-0x1a3d41a0],ch
  4048d1:	pusha  
  4048d2:	cmp    cl,BYTE PTR [ebx-0x7371ceb]
  4048d8:	mov    dh,0xa7
  4048da:	dec    ecx
  4048db:	clc    
  4048dc:	jmp    0x6a404e41
  4048e1:	lods   eax,DWORD PTR ds:[esi]
  4048e2:	std    
  4048e3:	(bad)  
  4048e4:	jl     0x404938
  4048e6:	shl    BYTE PTR [ebp-0x13],1
  4048e9:	das    
  4048ea:	pop    ecx
  4048eb:	or     BYTE PTR [ebx-0xcf922a0],al
  4048f1:	adc    bh,cl
  4048f3:	mov    DWORD PTR [ebx+edx*1],ebp
  4048f6:	fild   DWORD PTR [edi]
  4048f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048f9:	call   0x8b05:0x60e900d1
  404900:	or     al,0x1d
  404902:	push   ds
  404903:	inc    ecx
  404904:	add    dl,bh
  404906:	scas   eax,DWORD PTR es:[edi]
  404907:	adc    ecx,DWORD PTR [ebx+0x473bb53f]
  40490d:	push   cs
  40490e:	cs or  edi,eax
  404911:	aas    
  404912:	rol    DWORD PTR [ecx],0x0
  404915:	cli    
  404916:	add    ch,bl
  404918:	push   es
  404919:	jno    0x40490d
  40491b:	or     bh,bh
	...
  404929:	add    BYTE PTR [eax],al
  40492b:	add    BYTE PTR [edi-0x50],bh
  40492e:	cmp    DWORD PTR [ebp-0xe],0x9
  404932:	jne    0x40493c
  404934:	in     eax,0x2c
  404936:	cld    
  404937:	call   0x3ffb74
  40493c:	inc    ecx
  40493d:	cmp    al,0xf8
  40493f:	pop    edi
  404940:	add    ecx,eax
  404942:	or     BYTE PTR [eax],al
  404944:	in     eax,dx
  404945:	dec    edi
  404946:	cmp    eax,0x4852c2
  40494b:	jmp    0x4048cf
  40494d:	or     ecx,DWORD PTR [ebx-0x9c5ddc1]
  404953:	jmp    DWORD PTR ds:0x4e75fece
  404959:	mov    edx,0x4862c205
  40495e:	add    BYTE PTR [eax],al
  404960:	mov    al,BYTE PTR [edx]
  404962:	add    BYTE PTR [edi+0x39],bl
  404965:	or     al,0x8b
  404967:	in     al,dx
  404968:	lods   eax,DWORD PTR ds:[esi]
  404969:	or     al,0x6a
  40496b:	add    BYTE PTR [ebp+0x2c],dh
  40496e:	or     al,ch
  404970:	jge    0x404932
  404972:	(bad)  
  404973:	call   ecx
  404975:	sar    edi,0x75
  404978:	push   edx
  404979:	stos   BYTE PTR es:[edi],al
  40497a:	and    al,bh
  40497c:	dec    edx
  40497d:	add    al,BYTE PTR [ebx+0xf2c4bf8]
  404983:	push   edi
  404984:	mov    edx,0x327521f3
  404989:	mov    esi,0xdd63778d
  40498e:	jle    0x404958
	...
  40499c:	add    BYTE PTR [eax],al
  40499e:	add    BYTE PTR [eax],dl
  4049a0:	mov    BYTE PTR [edx],dh
  4049a2:	push   0x44f552
  4049a7:	lods   al,BYTE PTR ds:[esi]
  4049a8:	mov    ah,0x6e
  4049aa:	enter  0xdc63,0xfe
  4049ae:	mov    edi,0x40c9e86f
  4049b3:	fcomp  QWORD PTR [di+0x5c]
  4049b7:	jns    0x404995
  4049b9:	cmp    ch,al
  4049bb:	in     al,dx
  4049bc:	mov    ds:0x9c680003,eax
  4049c1:	push   edi
  4049c2:	add    eax,0xeb03dba5
  4049c7:	pusha  
  4049c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049c9:	or     al,BYTE PTR [eax]
  4049cb:	adc    al,0x84
  4049cd:	mov    dl,0xc6
  4049cf:	arpl   sp,bx
  4049d1:	xchg   al,bh
  4049d3:	pusha  
  4049d4:	scas   eax,DWORD PTR es:[edi]
  4049d5:	push   es
  4049d6:	(bad)  
  4049d7:	pop    esp
  4049d8:	fdivr  QWORD PTR [esi-0x39]
  4049db:	cmp    eax,0x5fc2bc97
  4049e0:	fdivr  QWORD PTR [eax]
  4049e2:	mov    edi,DWORD PTR [edi+0x5a]
  4049e5:	(bad)  
  4049e6:	cld    
  4049e7:	fsubr  DWORD PTR [eax-0x539cfb01]
  4049ed:	add    eax,DWORD PTR [eax]
  4049ef:	adc    eax,DWORD PTR [ecx+eax*8-0xb]
  4049f3:	ins    BYTE PTR es:[edi],dx
  4049f4:	es jl  0x404a3c
  4049f7:	addr16 out dx,al
  4049f9:	push   edi
  4049fa:	or     al,0x5c
  4049fc:	push   0xffffffcf
  4049fe:	dec    esi
  404a00:	out    0xdb,al
  404a02:	hlt    
	...
  404a0f:	add    BYTE PTR [eax],al
  404a11:	add    BYTE PTR [esi+0x4],dl
  404a14:	sar    bh,cl
  404a16:	into   
  404a17:	scas   al,BYTE PTR es:[edi]
  404a18:	shl    BYTE PTR [ebp+0x6f],cl
  404a1b:	rcl    DWORD PTR [edi-0x4],cl
  404a1e:	dec    ebx
  404a1f:	or     BYTE PTR [bx+si],al
  404a22:	arpl   WORD PTR ds:0xde2757e6,ax
  404a28:	jns    0x404a01
  404a2a:	sbb    al,0xcd
  404a2c:	mov    al,ds:0x3a0567c6
  404a31:	pop    esp
  404a32:	pop    ebp
  404a33:	push   ds
  404a34:	sub    BYTE PTR [ebx+edi*8],al
  404a37:	mov    eax,0x6304a7
  404a3c:	test   eax,0x91805158
  404a41:	pop    esp
  404a42:	dec    ecx
  404a43:	push   ds
  404a44:	sub    BYTE PTR [eax+edx*4],al
  404a47:	fnsave [ecx+0x4a0563ca]
  404a4d:	pop    ds
  404a4e:	mov    al,BYTE PTR [esi-0x17]
  404a51:	sub    al,0xa0
  404a53:	xor    dh,BYTE PTR [edx-0x20]
  404a56:	sub    eax,0x36d11638
  404a5b:	std    
  404a5c:	sbb    BYTE PTR [edi+0x73e9059d],0x58
  404a63:	(bad)
  404a66:	add    al,0x30
  404a68:	mov    edi,0xe8fda1ba
  404a6d:	jl     0x404a85
  404a6f:	std    
  404a70:	js     0x404aef
  404a72:	stos   DWORD PTR es:[edi],eax
  404a73:	jne    0x404ae7
  404a75:	push   edi
	...
  404a82:	add    BYTE PTR [eax],al
  404a84:	add    BYTE PTR [edi+0x20],dl
  404a87:	sub    eax,edx
  404a89:	mov    edx,0x74d136cc
  404a8e:	jne    0x404acb
  404a90:	mov    ds:0x3e685d3,al
  404a95:	out    dx,eax
  404a96:	in     eax,dx
  404a97:	mov    ch,0x34
  404a99:	dec    ebx
  404a9a:	sub    BYTE PTR [edi],0x4
  404a9d:	arpl   WORD PTR [eax],ax
  404a9f:	sub    DWORD PTR [edi+0x64],edx
  404aa2:	sub    al,0xa2
  404aa4:	xor    DWORD PTR [edx],ebx
  404aa6:	(bad)  
  404aa7:	icebp  
  404aa8:	add    ebp,edx
  404aaa:	add    al,BYTE PTR [eax]
  404aac:	push   0x29
  404aae:	add    ebx,ebp
  404ab0:	pop    ss
  404ab1:	fild   WORD PTR ds:0x2c60e900
  404ab7:	pop    ebx
  404ab8:	aas    
  404ab9:	fadd   st,st(6)
  404abb:	or     cl,ch
  404abd:	dec    ebp
  404abe:	sub    ah,0x62
  404ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ac2:	std    
  404ac3:	or     ch,BYTE PTR [ecx+0x18002ac]
  404ac9:	addr16 push edx
  404acb:	or     DWORD PTR [ecx+0x60],esi
  404ace:	add    eax,0xc6a9e900
  404ad3:	add    al,0xe9
  404ad5:	inc    edi
  404ad6:	mov    bh,0xeb
  404ad8:	mul    al
  404ada:	or     al,0x5c
  404adc:	sbb    eax,0xbe38855c
  404ae1:	xor    eax,0x60e8ba04
  404ae6:	add    eax,0x9200
	...
  404af7:	add    BYTE PTR [ebp-0x71],ah
  404afa:	add    cl,ch
  404afc:	pusha  
  404afd:	add    eax,0x5586940
  404b02:	jne    0x404b51
  404b04:	daa    
  404b05:	(bad)  
  404b06:	leave  
  404b07:	sub    esp,DWORD PTR [ebp+eax*1+0x55]
  404b0b:	bound  esi,QWORD PTR [ebx+esi*1+0x420fba56]
  404b12:	or     al,0xec
  404b14:	pusha  
  404b15:	add    DWORD PTR [eax],eax
  404b17:	jmp    0x41912fcd
  404b1c:	scas   al,BYTE PTR es:[edi]
  404b1d:	sar    bh,1
  404b1f:	cs out dx,eax
  404b21:	int3   
  404b22:	mov    eax,DWORD PTR [ecx-0x19]
  404b25:	push   ecx
  404b26:	or     BYTE PTR [edx-0x63],dh
  404b29:	stc    
  404b2a:	jmp    0xb420:0xb3cfceb
  404b31:	add    BYTE PTR [eax+0x74c91c00],al
  404b37:	cmc    
  404b38:	xor    DWORD PTR [eax+0xfa60274],edx
  404b3e:	sub    eax,eax
  404b40:	mov    al,ds:0x1475c983
  404b45:	dec    edi
  404b46:	ret    
  404b47:	pop    ebx
  404b48:	pop    esp
  404b49:	sbb    cl,cl
  404b4b:	ret    0x702
  404b4e:	push   ebx
  404b4f:	push   esi
  404b50:	repz std 
  404b52:	(bad)  
  404b53:	(bad)  
  404b54:	cli    
  404b55:	push   esi
  404b56:	xor    edx,edx
  404b58:	call   0x0:0x90daf6
	...
  404b6b:	ficom  WORD PTR [ecx+0xf]
  404b6e:	mov    dh,0xba
  404b70:	push   ecx
  404b71:	cmp    al,0x2b
  404b73:	push   0x2c
  404b75:	push   es
  404b76:	nop
  404b77:	dec    ecx
  404b78:	(bad)  
  404b79:	ds nop
  404b7b:	mov    ebp,esi
  404b7d:	cs nop
  404b7f:	ja     0x404b84
  404b81:	nop
  404b82:	cmp    eax,0xfffffffa
  404b85:	pop    DWORD PTR [ebx-0x2]
  404b88:	test   BYTE PTR [edi+0x38fac07c],0x90
  404b8f:	mov    ebp,0xb90403fd
  404b94:	xchg   esi,eax
  404b95:	inc    ebx
  404b96:	cmp    al,0xcb
  404b98:	push   esi
  404b99:	jl     0x404ba6
  404b9b:	outs   dx,BYTE PTR ds:[esi]
  404b9c:	pop    ds
  404b9d:	nop
  404b9e:	jg     0x404b24
  404ba0:	jmp    0x3c43:0x96799040
  404ba7:	stos   DWORD PTR es:[edi],eax
  404ba8:	push   esi
  404ba9:	jl     0x404bb5
  404bab:	outs   dx,BYTE PTR ds:[esi]
  404bac:	cmp    al,0x90
  404bae:	jg     0x404b37
  404bb0:	jmp    0xc2c1:0x462a0346
  404bb7:	inc    esp
  404bb8:	in     al,0xb1
  404bba:	shl    DWORD PTR [ebx+0x26],0x6
  404bbe:	mov    esp,DWORD PTR [ecx]
  404bc0:	stos   DWORD PTR es:[edi],eax
  404bc1:	mov    ebx,0x3ad43bc1
  404bc6:	nop
  404bc7:	call   0x989ebfe2
  404bcc:	pop    ds
  404bcd:	cmp    DWORD PTR [ebx+0x0],ecx
	...
  404bdb:	add    BYTE PTR [eax],al
  404bdd:	add    BYTE PTR [edi],bh
  404bdf:	outs   dx,DWORD PTR ds:[esi]
  404be0:	ss push esi
  404be2:	daa    
  404be3:	push   edi
  404be4:	pop    eax
  404be5:	or     bl,dh
  404be7:	push   esi
  404be8:	push   eax
  404be9:	adc    bl,dh
  404beb:	inc    ax
  404bed:	or     al,0xf3
  404bef:	out    dx,al
  404bf0:	stos   BYTE PTR es:[edi],al
  404bf1:	jecxz  0x404c34
  404bf3:	sub    al,0x34
  404bf5:	nop
  404bf6:	or     ecx,DWORD PTR [esi]
  404bf8:	iret   
  404bf9:	push   esp
  404bfb:	sub    ecx,DWORD PTR [eax-0x661b9237]
  404c01:	sar    ebx,0xd3
  404c04:	jae    0x404c49
  404c06:	shl    DWORD PTR [ebx+0x5ef35973],0xc5
  404c0d:	add    al,0xf3
  404c0f:	pop    esi
  404c10:	fadd   QWORD PTR [ebx+esi*8]
  404c13:	add    ch,BYTE PTR [esi+0x739ee890]
  404c19:	pop    esi
  404c1a:	adc    al,0xf7
  404c1c:	mov    esp,0x38dc5fc2
  404c21:	mov    esi,DWORD PTR [edi-0x621338a4]
  404c27:	sub    cl,dh
  404c29:	push   ebx
  404c2a:	dec    eax
  404c2b:	pop    ss
  404c2c:	add    BYTE PTR [ebp-0x71],0x8b
  404c30:	pop    ebx
  404c31:	cmp    bl,BYTE PTR ss:[ebp-0x68c900fd]
  404c38:	sbb    al,0x41
  404c3a:	arpl   WORD PTR [esi+eiz*1-0x3a],ax
  404c3e:	arpl   sp,bx
  404c40:	cli    
  404c41:	mov    edi,0x0
	...
  404c4e:	add    BYTE PTR [eax],al
  404c50:	add    dh,ch
  404c52:	add    al,0xcb
  404c54:	into   
  404c55:	(bad)  
  404c56:	cmc    
  404c57:	sbb    eax,0xea5b6758
  404c5c:	pop    ecx
  404c5d:	arpl   ax,cx
  404c5f:	xchg   esp,eax
  404c60:	sti    
  404c61:	inc    ebp
  404c62:	push   ebx
  404c63:	add    eax,0xe9bf57db
  404c68:	add    ebp,DWORD PTR [eax-0x3b]
  404c6b:	jl     0x404c71
  404c6d:	mov    al,ds:0x3bcf74c8
  404c72:	fldcw  WORD PTR [esp+eax*1-0x23e039d]
  404c79:	ffreep st(2)
  404c7b:	jmp    0x64baaf83
  404c80:	rol    DWORD PTR ds:0x8b34c6c9,1
  404c86:	add    eax,ebp
  404c88:	add    esp,DWORD PTR [ebx-0x23]
  404c8b:	xchg   ebx,eax
  404c8c:	enter  0x563,0xe2
  404c90:	ret    
  404c91:	push   esp
  404c92:	adc    DWORD PTR [ebp+0x4],0x7dc0563
  404c99:	bound  eax,QWORD PTR ds:0xa6e5fce9
  404c9f:	jmp    0xe99bafa7
  404ca4:	jle    0x404c8c
  404ca6:	aam    0x7f
  404ca8:	int    0xb4
  404caa:	xor    eax,0x5a78d81
  404caf:	jmp    0x68152b32
  404cb4:	int    0x0
	...
  404cc2:	add    BYTE PTR [eax],al
  404cc4:	pushf  
  404cc5:	xor    eax,0xc8954451
  404cca:	push   esi
  404ccb:	stc    
  404ccc:	int3   
  404ccd:	push   edx
  404cce:	in     eax,dx
  404ccf:	pop    ebx
  404cd0:	(bad)  
  404cd1:	sbb    eax,0x82ee03a8
  404cd6:	cmp    cl,dh
  404cd8:	je     0x404ca2
  404cda:	add    BYTE PTR [ecx+0x2ef6ae88],bl
  404ce0:	xchg   esi,eax
  404ce1:	enter  0xf175,0x90
  404ce5:	frstor [esi+edx*1]
  404ce8:	es enter 0xe6eb,0x1f
  404ced:	push   edx
  404cee:	or     BYTE PTR [esp+ebx*8-0x2d],bl
  404cf2:	inc    BYTE PTR [esi]
  404cf4:	cs xor eax,0xc80d3ee8
  404cfa:	jmp    DWORD PTR [eax-0x1c]
  404cfd:	fdivr  st,st(6)
  404cff:	out    dx,al
  404d00:	pop    ss
  404d01:	pop    ebx
  404d02:	add    BYTE PTR [ebx+0x67],dl
  404d05:	pop    ebx
  404d06:	add    dl,BYTE PTR [ebx+0x5f]
  404d09:	pop    ebx
  404d0a:	add    eax,DWORD PTR [ecx+0x67]
  404d0d:	add    eax,0x9217a900
  404d12:	in     al,dx
  404d13:	(bad)  
  404d14:	das    
  404d15:	enter  0xcde8,0x23
  404d19:	add    eax,0xcda56000
  404d1e:	inc    eax
  404d1f:	xor    eax,0xf975c6f7
  404d24:	scas   eax,DWORD PTR es:[edi]
  404d25:	push   ecx
  404d26:	or     al,0x9e
	...
  404d34:	add    BYTE PTR [eax],al
  404d36:	add    BYTE PTR ds:0xaec7e8cd,ch
  404d3c:	(bad)  
  404d3d:	jmp    DWORD PTR [edx-0x8]
  404d40:	(bad)  
  404d41:	jne    0x404cc4
  404d43:	cwde   
  404d44:	stos   BYTE PTR es:[edi],al
  404d45:	ret    
  404d46:	jmp    0xfd1b49ab
  404d4b:	stos   DWORD PTR es:[edi],eax
  404d4c:	(bad)  
  404d4d:	mov    ch,0x7d
  404d4f:	xchg   esi,eax
  404d50:	(bad)  
  404d51:	call   DWORD PTR [ecx+0x6d]
  404d54:	rol    DWORD PTR [eax],0xe9
  404d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d58:	xchg   ecx,eax
  404d59:	in     al,dx
  404d5a:	push   edi
  404d5b:	lahf   
  404d5c:	(bad)  
  404d5d:	call   0x7ff83
  404d62:	add    cl,dh
  404d64:	les    ebx,FWORD PTR [ebx-0x37]
  404d67:	dec    eax
  404d68:	enter  0x54ff,0x1
  404d6c:	test   al,0x81
  404d6e:	les    esp,FWORD PTR [esi]
  404d70:	mov    edx,0xba19ffff
  404d75:	jne    0x404d83
  404d77:	jne    0x404da8
  404d79:	or     BYTE PTR [eax+0x2c],ch
  404d7c:	in     al,dx
  404d7d:	inc    eax
  404d7e:	add    BYTE PTR [ebp-0x11],dl
  404d81:	dec    edx
  404d82:	sub    DWORD PTR [ebx],ecx
  404d84:	add    ebp,eax
  404d86:	mov    ecx,0xbffbb2f
  404d8b:	jp     0x404d56
  404d8d:	test   dl,bl
  404d8f:	cmp    al,BYTE PTR [ebx]
  404d91:	add    BYTE PTR [ebx],ch
  404d93:	and    DWORD PTR [ebp-0x7b],ecx
  404d96:	out    dx,eax
  404d97:	xor    al,0xbb
  404d99:	call   DWORD PTR [eax+0x0]
	...
  404da8:	add    BYTE PTR [eax],al
  404daa:	mov    ds:0xfa000105,al
  404daf:	stos   BYTE PTR es:[edi],al
  404db0:	in     al,0xc3
  404db2:	or     al,BYTE PTR [ebx]
  404db4:	or     eax,eax
  404db6:	add    eax,0xfa00bd47
  404dbb:	add    bh,BYTE PTR ds:0x2fb04
  404dc1:	cmovge ebp,DWORD PTR [edi+0x0]
  404dc5:	add    dl,cl
  404dc7:	dec    ebp
  404dc8:	inc    ebp
  404dc9:	cld    
  404dca:	mov    ch,BYTE PTR [ecx-0x452a1646]
  404dd0:	lea    eax,[ebp-0x442b]
  404dd6:	pop    edx
  404dd7:	test   eax,0xba35fd4f
  404ddc:	or     eax,eax
  404dde:	scas   eax,DWORD PTR es:[edi]
  404ddf:	fisub  WORD PTR [edi-0x44]
  404de2:	jb     0x404e24
  404de4:	add    BYTE PTR [ebp-0x15601],cl
  404dea:	arpl   WORD PTR [edi],bp
  404dec:	xor    al,0xe8
  404dee:	jnp    0x404e21
  404df0:	retf   
  404df1:	(bad)  
  404df2:	jl     0x404d7d
  404df4:	sti    
  404df5:	dec    edi
  404df6:	mov    ecx,ebx
  404df8:	sar    edi,1
  404dfa:	ins    BYTE PTR es:[edi],dx
  404dfb:	inc    ebx
  404dfc:	sti    
  404dfd:	(bad)  
  404dfe:	out    dx,al
  404dff:	jecxz  0x404e79
  404e01:	test   DWORD PTR [esi+ebx*1-0x35],ecx
  404e05:	push   DWORD PTR [ebx+0x4cf5b9f4]
  404e0b:	out    dx,eax
  404e0c:	xor    edi,edi
	...
  404e1a:	add    BYTE PTR [eax],al
  404e1c:	add    dh,cl
  404e1e:	clc    
  404e1f:	xor    ebp,eax
  404e21:	(bad)
  404e24:	jmp    FWORD PTR [eax+0x1c]
  404e27:	push   eax
  404e28:	push   ebx
  404e29:	sub    al,0x49
  404e2b:	(bad)  
  404e2c:	call   0xb5335
  404e31:	jmp    0x3e4:0x9683cc18
  404e38:	je     0x404ddb
  404e3a:	popa   
  404e3b:	inc    eax
  404e3c:	hlt    
  404e3d:	mov    bl,0xb7
  404e3f:	push   eax
  404e40:	cld    
  404e41:	or     ebp,esi
  404e43:	mov    edi,0xc3616300
  404e48:	js     0x404e7b
  404e4a:	(bad)  
  404e4b:	push   eax
  404e4c:	hlt    
  404e4d:	sti    
  404e4e:	fld    st(6)
  404e50:	add    BYTE PTR [ebx-0x2d],ah
  404e53:	ret    
  404e54:	je     0x404ed3
  404e56:	or     al,0xcb
  404e58:	jne    0x404e25
  404e5a:	add    DWORD PTR ds:0x7e76c4f2,0xffffffd8
  404e61:	sbb    edi,DWORD PTR [edi+0x50]
  404e64:	clc    
  404e65:	adc    ah,ch
  404e67:	fld    TBYTE PTR [ecx+esi*4]
  404e6a:	dec    esi
  404e6b:	retf   0x2eff
  404e6e:	push   eax
  404e6f:	(bad)  
  404e71:	mov    eax,ds:0xe803e904
  404e76:	aas    
  404e77:	in     eax,dx
  404e78:	retf   0xcd16
  404e7b:	add    di,WORD PTR [ebx-0x45]
  404e7f:	pop    eax
  404e80:	retf   0x0
	...
  404e8f:	add    BYTE PTR [ebp+eax*8-0x44],bh
  404e93:	(bad)  
  404e94:	mov    edx,DWORD PTR [esi]
  404e96:	push   eax
  404e97:	retf   0x796c
  404e9a:	sub    ch,BYTE PTR [esi]
  404e9c:	call   0x1590:0xb603e1c2
  404ea3:	xor    ch,al
  404ea5:	inc    edx
  404ea6:	icebp  
  404ea7:	fidiv  WORD PTR [edx+0x5c]
  404eaa:	add    al,BYTE PTR [ecx]
  404eac:	(bad)  [eax+ebp*8+0x7b]
  404eb0:	fs dec esp
  404eb2:	imul   ecx,DWORD PTR [edx],0x29f43a63
  404eb8:	pushf  
  404eb9:	dec    esp
  404eba:	imul   ecx,DWORD PTR [edx],0x83033983
  404ec0:	pop    esp
  404ec1:	adc    bl,BYTE PTR [ebp-0x21]
  404ec4:	jecxz  0x404eca
  404ec6:	repz dec edi
  404ec8:	add    eax,DWORD PTR [esi-0x1f6f04ea]
  404ece:	bound  eax,QWORD PTR [edi+0x6b]
  404ed1:	les    edi,FWORD PTR [esp+edi*8]
  404ed4:	cld    
  404ed5:	mov    ch,BYTE PTR [ebx-0x4e779cfc]
  404edb:	add    al,0x6d
  404edd:	in     al,dx
  404ede:	push   0xc9c49b48
  404ee3:	dec    edi
  404ee4:	outs   dx,BYTE PTR ds:[esi]
  404ee5:	test   DWORD PTR ds:0x1d12cc0c,ebx
  404eeb:	cli    
  404eec:	inc    esp
  404eed:	inc    ecx
  404eee:	ror    eax,1
  404ef0:	imul   edi,DWORD PTR [ecx],0x83ee
	...
  404f02:	add    BYTE PTR [edi],dh
  404f04:	std    
  404f05:	jge    0x404f02
  404f07:	aaa    
  404f08:	or     al,0x0
  404f0a:	scas   eax,DWORD PTR es:[edi]
  404f0b:	and    edi,ebp
  404f0d:	(bad)  
  404f0e:	jmp    0xec2b56d2
  404f13:	mov    bh,0xd1
  404f15:	pop    edi
  404f16:	xor    BYTE PTR [ebp+0x7bc0009],ah
  404f1c:	mov    cl,0x83
  404f1e:	and    eax,0x4835883
  404f23:	cwde   
  404f24:	repz inc eax
  404f26:	jmp    0x6a52888b
  404f2b:	pop    esp
  404f2c:	mov    dl,0x2e
  404f2e:	test   al,0x60
  404f30:	add    eax,0x1dff074
  404f35:	aad    0xcf
  404f37:	mov    eax,ds:0x639c0005
  404f3c:	lock mov edi,0x8c6f9b2
  404f42:	jmp    0xa5082f9e
  404f47:	sbb    al,0x5
  404f49:	add    cl,ch
  404f4b:	pusha  
  404f4c:	xchg   edx,eax
  404f4d:	inc    ebp
  404f4e:	icebp  
  404f4f:	push   eax
  404f50:	les    esi,FWORD PTR [ebp-0xf]
  404f53:	mov    dh,0x5
  404f55:	push   esp
  404f57:	sub    ebx,esi
  404f59:	inc    eax
  404f5a:	jmp    0x32b4d366
  404f5f:	pop    ds
  404f60:	cmp    eax,edx
  404f62:	jmp    0x6d10dfc7
	...
  404f73:	add    BYTE PTR [eax],al
  404f75:	add    BYTE PTR ds:0x3f4350b9,ch
  404f7b:	push   edi
  404f7c:	call   esp
  404f7e:	or     eax,0xd7e940f3
  404f83:	xor    DWORD PTR [eax+edx*8-0x5d],0x49
  404f88:	in     al,0xe8
  404f8a:	pusha  
  404f8b:	add    eax,0xbd2d8e00
  404f90:	pop    DWORD PTR [eax]
  404f92:	xchg   ecx,esp
  404f94:	push   DWORD PTR [ebp+0x2e]
  404f97:	cmp    eax,0x4b39ec45
  404f9c:	or     al,0x0
  404f9e:	xchg   esi,eax
  404f9f:	mov    esi,0xa3a45c6
  404fa4:	add    BYTE PTR [eax],al
  404fa6:	jp     0x404f88
  404fa8:	pop    es
  404fa9:	(bad)  
  404faa:	mov    bh,0xd7
  404fac:	add    BYTE PTR [eax],al
  404fae:	mov    al,BYTE PTR [edi]
  404fb0:	push   0x0
  404fb2:	nop
  404fb3:	pop    es
  404fb4:	push   0x10
  404fb6:	inc    DWORD PTR [edx]
  404fb8:	in     al,0x50
  404fba:	mov    al,ds:0x9675ff07
  404fbf:	int    0x15
  404fc1:	in     eax,dx
  404fc2:	sub    al,0x48
  404fc4:	add    BYTE PTR [ebx],cl
  404fc6:	jp     0x40501a
  404fc8:	add    DWORD PTR [ebx-0x47],eax
  404fcb:	dec    ebx
  404fcc:	hlt    
  404fcd:	add    dh,dl
  404fcf:	mov    esi,0xe03675fe
  404fd4:	call   0xc3:0x8b073ac1
	...
  404fe7:	add    BYTE PTR [eax],al
  404fe9:	sar    DWORD PTR [edi-0x3e],1
  404fec:	or     BYTE PTR [edx],cl
  404fee:	hlt    
  404fef:	mov    ch,ah
  404ff1:	std    
  404ff2:	push   esp
  404ff3:	or     al,ch
  404ff5:	xchg   esi,eax
  404ff6:	enter  0x0,0x3a
  404ffa:	stc    
  404ffb:	out    0xa0,eax
  404ffd:	sbb    cl,bl
  404fff:	call   DWORD PTR [eax+0x1d]
  405002:	push   ebp
  405003:	or     BYTE PTR [eax+0x12],dl
  405006:	imul   eax,ecx,0xc8eefa00
  40500c:	ret    0x6c6
  40500f:	push   ebp
  405010:	mov    ebp,esi
  405012:	xchg   ah,al
  405014:	cld    
  405015:	mov    DWORD PTR [esi-0x539cf783],eax
  40501b:	push   eax
  40501c:	pop    es
  40501d:	mov    BYTE PTR [ebx+ebp*1-0x37],ch
  405021:	mov    eax,ds:0x882b03b0
  405026:	push   ss
  405027:	add    al,0x6a
  405029:	arpl   WORD PTR [esi],ax
  40502b:	add    al,0x6a
  40502d:	arpl   WORD PTR [esi],ax
  40502f:	(bad)  
  405030:	dec    DWORD PTR [esi]
  405032:	mov    ah,0x59
  405034:	add    cl,bh
  405036:	stos   DWORD PTR es:[edi],eax
  405037:	fcmovnb st,st(4)
  405039:	mov    ds:0xa30b03ac,al
  40503e:	fcom   DWORD PTR [edx]
  405040:	mov    DWORD PTR [esi],ebx
  405042:	dec    eax
  405043:	(bad)  
  405044:	jne    0x4050b5
  405046:	push   esp
  405047:	cs lock fs sti 
  40504b:	cli    
  40504c:	mov    edi,0x0
	...
  405059:	add    BYTE PTR [eax],al
  40505b:	add    bh,dl
  40505d:	or     BYTE PTR [ebx-0x28],bh
  405060:	leave  
  405061:	lods   al,BYTE PTR ds:[esi]
  405062:	pop    ecx
  405063:	add    BYTE PTR [ecx+ebx*4-0x39],cl
  405067:	push   ebx
  405068:	mov    ecx,0x6b75c71b
  40506d:	xchg   BYTE PTR [ebx],al
  40506f:	push   0x63
  405071:	adc    al,0x6d
  405073:	shl    DWORD PTR [ebx-0x54],0xfa
  405077:	mov    edi,0xe832a4ae
  40507c:	jp     0x40503a
  40507e:	(bad)  
  40507f:	dec    DWORD PTR [eax-0x39]
  405082:	jp     0x405047
  405084:	test   al,0x75
  405086:	rol    DWORD PTR [ebx+eiz*2],0x1
  40508a:	jnp    0x405078
  40508c:	loopne 0x4050f5
  40508e:	xlat   BYTE PTR ds:[ebx]
  40508f:	push   eax
  405090:	nop
  405091:	sbb    eax,0x37955732
  405096:	inc    eax
  405097:	or     al,0xd6
  405099:	and    eax,DWORD PTR [ebx+0x78ac6300]
  40509f:	adc    al,0x9e
  4050a1:	add    al,0xe9
  4050a3:	add    esp,DWORD PTR [ebx+0x5]
  4050a6:	jb     0x405053
  4050a8:	fmul   st,st(4)
  4050aa:	test   al,0xdb
  4050ac:	mov    WORD PTR gs:[eax+ebx*8],fs
  4050b0:	call   0xaa4341f4
  4050b5:	retf   0x83e6
  4050b8:	loopne 0x40505f
  4050ba:	mov    dh,0x1a
  4050bc:	cwde   
  4050bd:	test   DWORD PTR [edx+0xb],esi
	...
  4050cc:	add    BYTE PTR [eax],al
  4050ce:	add    BYTE PTR [ecx],dl
  4050d0:	adc    ebp,edx
  4050d2:	retf   0x44cb
  4050d5:	jmp    0x2a2eb3dd
  4050da:	add    bh,BYTE PTR [ebx-0x3f]
  4050dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050de:	xlat   BYTE PTR ds:[ebx]
  4050df:	jmp    0x26b4:0xf6790159
  4050e6:	std    
  4050e7:	arpl   si,sp
  4050e9:	stos   DWORD PTR es:[edi],eax
  4050ea:	pop    esi
  4050eb:	and    al,0x48
  4050ed:	in     eax,0x7c
  4050ef:	or     bl,dl
  4050f1:	push   ss
  4050f2:	mov    esi,0xa71f0da5
  4050f7:	or     DWORD PTR [esi+0x376f3d2e],ebx
  4050fd:	mov    ch,0x11
  4050ff:	push   ebx
  405100:	sar    BYTE PTR [edi+edx*8+0x2c],0x3b
  405105:	icebp  
  405106:	js     0x4050a6
  405108:	mov    ch,0x99
  40510a:	(bad)  [esi+0x5]
  40510d:	jmp    0xedbf6815
  405112:	add    esp,DWORD PTR [ebx+0x5]
  405115:	jb     0x40515e
  405117:	jae    0x4050cd
  405119:	mov    WORD PTR [esi],fs
  40511b:	pushf  
  40511c:	pop    ebx
  40511d:	xor    BYTE PTR [ecx],ch
  40511f:	fwait
  405120:	into   
  405121:	stos   DWORD PTR es:[edi],eax
  405122:	clc    
  405123:	in     al,dx
  405124:	pop    ecx
  405125:	jb     0x4050ff
  405127:	loopne 0x4050f2
  405129:	add    BYTE PTR [ebp+0x1a50588d],dh
  40512f:	nop
  405130:	push   ebx
  405131:	mov    ebx,DWORD PTR [eax+eax*1]
	...
  405140:	add    BYTE PTR [eax],al
  405142:	retf   
  405143:	mov    edi,DWORD PTR [ebp-0xf]
  405146:	dec    ebx
  405147:	dec    edx
  405148:	adc    BYTE PTR [eax+0x7c],ah
  40514b:	ror    DWORD PTR [ebx+0x4603be6],0x72
  405152:	jbe    0x405161
  405154:	mov    edx,DWORD PTR [esi]
  405156:	stos   DWORD PTR es:[edi],eax
  405157:	mov    edi,ecx
  405159:	mov    edx,0xbafae4aa
  40515e:	stos   BYTE PTR es:[edi],al
  40515f:	xchg   edx,eax
  405160:	test   dh,ch
  405162:	sbb    BYTE PTR [ecx+0x6a],ch
  405165:	bound  eax,QWORD PTR ss:[edi]
  405168:	shr    DWORD PTR [ecx],0x7e
  40516b:	add    eax,ebx
  40516d:	bound  ebp,QWORD PTR [edx-0x60f5070c]
  405173:	hlt    
  405174:	clc    
  405175:	ins    BYTE PTR es:[edi],dx
  405176:	repz pop ss
  405178:	push   esi
  405179:	jle    0x405199
  40517b:	lods   eax,DWORD PTR ds:[esi]
  40517c:	add    edx,DWORD PTR [edi-0xa3d3aac]
  405182:	arpl   bp,dx
  405184:	mov    esp,DWORD PTR [ecx]
  405186:	jb     0x405144
  405188:	and    edx,DWORD PTR [ebx]
  40518a:	push   edx
  40518b:	mov    esp,0xdb2e5d8d
  405190:	jo     0x40515b
  405192:	dec    esp
  405193:	add    al,0x4e
  405195:	icebp  
  405196:	and    esi,eax
  405198:	adc    edx,ebp
  40519a:	fimul  DWORD PTR [ebx-0x1bd74506]
  4051a0:	clc    
  4051a1:	sbb    bl,BYTE PTR [edi]
  4051a3:	xchg   edx,eax
  4051a4:	pushf  
  4051a5:	inc    BYTE PTR [eax]
	...
  4051b3:	add    BYTE PTR [eax],al
  4051b5:	cs iret 
  4051b7:	mov    ebp,0xc5f63a8
  4051bc:	test   al,0x23
  4051be:	pop    ss
  4051bf:	add    eax,DWORD PTR [eax]
  4051c1:	ret    
  4051c2:	cmp    al,0xf9
  4051c4:	xor    esp,DWORD PTR [eax]
  4051c6:	in     eax,0xfa
  4051c8:	xor    edx,DWORD PTR [eax]
  4051ca:	aaa    
  4051cb:	test   BYTE PTR [edi],al
  4051cd:	push   ebp
  4051ce:	mov    ecx,0x1b9f57b
  4051d3:	adc    cl,al
  4051d5:	cli    
  4051d6:	rol    BYTE PTR [edx],0xc3
  4051d9:	inc    ecx
  4051da:	int    0x33
  4051dc:	stc    
  4051dd:	test   eax,0x37f933cb
  4051e2:	xor    BYTE PTR [edi],dl
  4051e4:	sub    bh,ah
  4051e6:	inc    eax
  4051e7:	inc    edi
  4051e8:	add    edi,DWORD PTR [ebp+esi*4-0x40]
  4051ec:	ret    0x4b6
  4051ef:	ror    BYTE PTR [ebx+0x23fb1502],1
  4051f5:	add    BYTE PTR ds:0xb9068dfb,dl
  4051fb:	adc    al,BYTE PTR [esi+0x5a]
  4051fe:	mov    eax,ds:0xc2824e03
  405203:	rcl    DWORD PTR [ecx],0x79
  405206:	jge    0x405193
  405208:	cli    
  405209:	pop    ecx
  40520a:	retf   
  40520b:	and    edi,ecx
  40520d:	pop    ecx
  40520e:	retf   
  40520f:	lea    ebx,[ebp+eiz*2+0x67469502]
  405216:	add    eax,0x1c5e
	...
  405227:	add    BYTE PTR [ebx+0x730316c5],cl
  40522d:	cmp    eax,0xe56033f9
  405232:	cli    
  405233:	xor    esp,DWORD PTR [eax+0x37]
  405236:	test   BYTE PTR [edi],al
  405238:	jb     0x405264
  40523a:	sub    BYTE PTR [ecx+0x9],0x1
  40523e:	and    cl,al
  405240:	mov    edx,0x91c3030a
  405245:	jle    0x40527a
  405247:	stc    
  405248:	arpl   WORD PTR [ebx],cx
  40524a:	mov    esp,0x9861fa33
  40524f:	pop    ss
  405250:	mov    esp,0x608b487f
  405255:	push   ss
  405256:	call   0x6e8f41b
  40525b:	shr    al,1
  40525d:	je     0x405256
  40525f:	cli    
  405260:	and    BYTE PTR [edx-0x9],0xfa
  405264:	(bad)  
  405265:	xor    BYTE PTR [ebx],dl
  405267:	mov    cl,0x18
  405269:	xchg   edi,eax
  40526a:	ret    
  40526b:	add    esp,DWORD PTR ds:0x52c1c4c4
  405271:	stos   DWORD PTR es:[edi],eax
  405272:	int    0x8b
  405274:	test   eax,0x9a23bb7b
  405279:	jnp    0x405236
  40527b:	(bad)  
  40527c:	test   edi,0x352fd781
  405282:	pop    es
  405283:	pop    esi
  405284:	aaa    
  405285:	in     eax,dx
  405286:	(bad)  
  405287:	push   ss
  405288:	pusha  
  405289:	cmc    
  40528a:	mov    ?,ecx
	...
  405298:	add    BYTE PTR [eax],al
  40529a:	add    BYTE PTR [eax],dh
  40529c:	push   edx
  40529d:	out    0xfa,eax
  40529f:	xor    BYTE PTR [edx-0x6f],al
  4052a2:	test   BYTE PTR [edx+ecx*1+0x15],bl
  4052a6:	nop
  4052a7:	enter  0x49ab,0x30
  4052ab:	and    ch,ah
  4052ad:	or     al,BYTE PTR [ebx]
  4052af:	and    BYTE PTR [ebx],dh
  4052b1:	mov    edi,0xbbcb4a33
  4052b6:	xor    edi,DWORD PTR [edx]
  4052b8:	sub    DWORD PTR [eax-0x64632fe9],ebx
  4052be:	std    
  4052bf:	pusha  
  4052c0:	sahf   
  4052c1:	test   eax,0xd006b021
  4052c7:	call   0x413b497f
  4052cc:	mov    dl,0xf6
  4052ce:	cli    
  4052cf:	fiadd  WORD PTR [esi*2+0x6041d512]
  4052d6:	push   0x60
  4052d8:	dec    edi
  4052d9:	adc    ebp,eax
  4052db:	and    dl,BYTE PTR [edx+ebp*8]
  4052de:	int    0xd8
  4052e0:	mov    edx,0xbc40bbfa
  4052e5:	cli    
  4052e6:	mov    ebx,0xe4d6a0ee
  4052eb:	pop    esp
  4052ec:	jns    0x40530e
  4052ee:	pop    es
  4052ef:	sub    eax,0x6dc6a801
  4052f4:	add    al,al
  4052f6:	mov    ?,WORD PTR [edx-0x45196e0f]
  4052fc:	icebp  
  4052fd:	(bad)  
  4052fe:	nop
	...
  40530b:	add    BYTE PTR [eax],al
  40530d:	add    bh,ah
  40530f:	add    eax,0xb746e90b
  405314:	jmp    0x6008:0xa9c46749
  40531b:	ret    0xbe62
  40531e:	push   eax
  40531f:	mov    ebp,0xba50bd0a
  405324:	ins    BYTE PTR es:[edi],dx
  405325:	xchg   edi,eax
  405326:	push   esp
  405327:	inc    ebp
  405328:	call   0xa21b:0xb701a343
  40532f:	ret    0x6f0
  405332:	xchg   ebx,eax
  405333:	mov    DWORD PTR [ecx-0xa],eax
  405336:	pop    edx
  405337:	jmp    0x8b8d496d
  40533c:	pop    ebp
  40533d:	adc    dh,BYTE PTR [edx+0x61e9c75f]
  405343:	dec    ebx
  405344:	int    0xc4
  405346:	and    cl,BYTE PTR [edx+ebp*8]
  405349:	int    0xe8
  40534b:	mov    edi,0xbd80bcda
  405350:	mov    edx,0xde99d6bd
  405355:	ins    DWORD PTR es:[edi],dx
  405356:	and    al,0x74
  405358:	add    BYTE PTR [eax],al
  40535a:	pop    ebp
  40535b:	sbb    eax,ecx
  40535d:	sub    dh,BYTE PTR [eax+ecx*1-0x27]
  405361:	jb     0x40532b
  405363:	clc    
  405364:	cli    
  405365:	or     bh,BYTE PTR [ebp-0x149b0708]
  40536b:	add    al,0x5d
  40536d:	stc    
  40536e:	repz rol BYTE PTR [ebx],cl
  405371:	das    
	...
  40537e:	add    BYTE PTR [eax],al
  405380:	add    BYTE PTR [ebx-0x3a],cl
  405383:	shl    ah,0x67
  405386:	enter  0xb28b,0xce
  40538a:	mov    ah,0x23
  40538c:	mov    al,0xd6
  40538e:	mov    edi,0x586a7d8d
  405393:	adc    al,0x25
  405395:	or     BYTE PTR gs:[esi-0x3f],dl
  405399:	mov    eax,ds:0x90ea09c7
  40539e:	nop
  40539f:	clc    
  4053a0:	mov    edx,0xbafae8e6
  4053a5:	fmul   DWORD PTR [edx-0x5c1e1974]
  4053ab:	mov    eax,ds:0x3c4b6691
  4053b0:	sub    BYTE PTR [eax-0x11ccfcf5],ah
  4053b6:	mov    edi,0xb47e5033
  4053bb:	xor    edx,DWORD PTR [ebx-0x24]
  4053be:	cdq    
  4053bf:	pop    ds
  4053c0:	xor    DWORD PTR [esi-0x3d151828],esp
  4053c6:	adc    eax,0x87b2ac1
  4053cb:	fldenv [edx+0x8]
  4053ce:	clc    
  4053cf:	cli    
  4053d0:	retf   0xf806
  4053d3:	clc    
  4053d4:	ins    BYTE PTR es:[edi],dx
  4053d5:	jmp    0x4053da
  4053d7:	out    0x24,al
  4053d9:	add    dh,ah
  4053db:	add    ah,BYTE PTR [edi+0xc0c544]
  4053e1:	aaa    
  4053e2:	add    ebx,eax
  4053e4:	mov    eax,DWORD PTR [eax]
	...
  4053f2:	add    BYTE PTR [eax],al
  4053f4:	popa   
  4053f5:	mov    dl,0xf7
  4053f7:	and    edx,DWORD PTR [ebx]
  4053f9:	mov    cl,0xfa
  4053fb:	lea    esi,[esi+0x6507d61e]
  405401:	ret    0x5603
  405404:	inc    edx
  405405:	enter  0x9c2,0x9
  405409:	fmul   DWORD PTR [ebx+0x237b49f8]
  40540f:	sti    
  405410:	jmp    0xcdcce194
  405415:	mov    WORD PTR ds:0x4e0116d5,cs
  40541b:	or     al,0xfb
  40541d:	(bad)  
  40541e:	push   cs
  40541f:	add    edx,DWORD PTR [eax]
  405421:	mov    edx,edi
  405423:	xor    eax,DWORD PTR [ebx]
  405425:	mov    eax,ds:0x8ad033f7
  40542a:	pushf  
  40542b:	pop    ds
  40542c:	das    
  40542d:	adc    al,0x5a
  40542f:	inc    ebp
  405430:	mov    ecx,0xc9c12025
  405435:	adc    eax,DWORD PTR [ebx]
  405437:	fld    DWORD PTR [ecx]
  405439:	jg     0x40546e
  40543b:	sti    
  40543c:	cdq    
  40543d:	jns    0x405472
  40543f:	stc    
  405440:	je     0x6153594d
  405446:	test   eax,0xc0b3c403
  40544b:	rol    BYTE PTR [edi+0x218bc300],0xb1
  405452:	mul    DWORD PTR [ebx]
  405454:	mov    ds:0x8dfab1,eax
	...
  405465:	add    BYTE PTR [eax],al
  405467:	mov    dh,0x1d
  405469:	clc    
  40546a:	mov    ds:0x56037a8d,eax
  40546f:	push   edx
  405470:	enter  0x9c2,0x49
  405474:	xlat   BYTE PTR ds:[ebx]
  405475:	mov    edi,eax
  405477:	arpl   di,bx
  405479:	mov    ebp,0xbbe02823
  40547e:	(bad)  
  40547f:	xlat   BYTE PTR ds:[ebx]
  405480:	mov    bl,0xda
  405482:	add    cl,BYTE PTR [ebx+eax*4-0x1288b1fc]
  405489:	ror    DWORD PTR [esi],0x60
  40548c:	out    0x8b,al
  40548e:	cli    
  40548f:	push   eax
  405490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405491:	jecxz  0x40548a
  405493:	xor    BYTE PTR [esi+0x26549c91],ah
  405499:	push   eax
  40549a:	sub    bl,dh
  40549c:	scas   eax,DWORD PTR es:[edi]
  40549d:	pop    ebp
  40549e:	xor    BYTE PTR [edx],ah
  4054a0:	jo     0x4054ba
  4054a2:	add    edi,DWORD PTR [edx-0x26cc42c9]
  4054a8:	mov    edi,0xa3e78dba
  4054ad:	inc    ecx
  4054ae:	cmp    ecx,ecx
  4054b0:	arpl   WORD PTR [ebx],ax
  4054b2:	inc    esi
  4054b3:	push   edi
  4054b4:	ins    DWORD PTR es:[edi],dx
  4054b5:	les    eax,FWORD PTR [eax+eiz*2]
  4054b8:	outs   dx,DWORD PTR ds:[esi]
  4054b9:	mov    edi,ebx
  4054bb:	jo     0x405452
  4054bd:	repz not esi
  4054c0:	pop    eax
  4054c1:	pop    ss
  4054c2:	adc    DWORD PTR [ebp+0x2d0386bd],0xc2c4cc
	...
  4054d8:	add    BYTE PTR [eax],al
  4054da:	pop    eax
  4054db:	scas   eax,DWORD PTR es:[edi]
  4054dc:	ror    DWORD PTR [ebx+0x33bb1f8b],cl
  4054e2:	jns    0x40550d
  4054e4:	nop
  4054e5:	cmovno ecx,ebp
  4054e8:	mov    al,ds:0xef9a606d
  4054ed:	shl    BYTE PTR [edx-0x1735fd24],0x45
  4054f4:	repz not DWORD PTR [eax+0x6c9c90f5]
  4054fb:	fdivr  st,st(3)
  4054fd:	in     al,0x46
  4054ff:	add    eax,0xc47b5dea
  405504:	sub    dl,BYTE PTR [edi]
  405506:	pusha  
  405507:	fsub   QWORD PTR [edx-0x43]
  40550a:	jo     0x4054cb
  40550c:	fidivr DWORD PTR [edx+0x47ee80d6]
  405512:	or     DWORD PTR [ebx+0x45],edi
  405515:	add    ebx,DWORD PTR [ebp+0x67c42801]
  40551b:	push   es
  40551c:	sub    cl,BYTE PTR [ebx-0xd2009f8]
  405522:	hlt    
  405523:	xchg   DWORD PTR [ebp+0x16],esi
  405526:	retf   0xb7c9
  405529:	dec    edx
  40552a:	pusha  
  40552b:	push   ebx
  40552c:	stc    
  40552d:	les    esp,FWORD PTR [ecx]
  40552f:	push   cs
  405530:	jmp    0x90ba:0xfabce8d3
  405537:	mov    edi,0x255c8f64
  40553c:	and    bh,BYTE PTR [ebx+0x0]
	...
  40554b:	add    BYTE PTR [eax],al
  40554d:	int    0x5
  40554f:	aaa    
  405550:	and    BYTE PTR [edx-0x56fd063d],ah
  405556:	lea    edx,[ebx-0x700a4b0e]
  40555c:	nop
  40555d:	(bad)  
  40555e:	sbb    ecx,edi
  405560:	jg     0x40553e
  405562:	jp     0x40554e
  405564:	pop    ebp
  405565:	dec    ebx
  405566:	les    ebp,FWORD PTR [edx+0x62dc6016]
  40556c:	mov    esp,0xbb1abf50
  405571:	out    dx,al
  405572:	and    dh,0xc5
  405575:	cmc    
  405576:	popf   
  405577:	add    DWORD PTR [ebx],eax
  405579:	and    eax,0x5fc327f1
  40557e:	push   es
  40557f:	sub    cl,BYTE PTR [edx-0xdc00aa8]
  405585:	dec    esp
  405586:	mov    eax,DWORD PTR [eax]
  405588:	pop    ebp
  405589:	jne    0x405546
  40558b:	daa    
  40558c:	mov    dl,bh
  40558e:	add    al,0x16
  405590:	sub    BYTE PTR [edx],ah
  405592:	or     eax,0xbde93903
  405597:	xor    edx,DWORD PTR [edx]
  405599:	xor    DWORD PTR [edi-0x7daaa273],edi
  40559f:	xor    BYTE PTR [esi],dl
  4055a1:	xor    al,0x5
  4055a3:	dec    esi
  4055a4:	in     eax,dx
  4055a5:	pop    ds
  4055a6:	(bad)  
  4055a7:	adc    dl,ch
  4055a9:	sbb    cl,BYTE PTR [ebp-0xb374506]
  4055af:	clc    
  4055b0:	je     0x4055b2
	...
  4055be:	add    BYTE PTR [eax],al
  4055c0:	ret    
  4055c1:	sbb    BYTE PTR ds:0x301e8fc,al
  4055c7:	aaa    
  4055c8:	dec    edi
  4055c9:	mov    bl,0xf6
  4055cc:	arpl   si,bx
  4055ce:	mov    eax,eax
  4055d0:	sar    BYTE PTR [esi-0x7e1b3dcd],cl
  4055d6:	pop    es
  4055d7:	lock mov al,0xd1
  4055da:	fldl2e 
  4055dc:	push   ds
  4055dd:	loope  0x40559f
  4055df:	test   eax,0x72c3046b
  4055e4:	cli    
  4055e5:	hlt    
  4055e6:	clc    
  4055e7:	(bad)  
  4055e9:	mov    dl,BYTE PTR [esi+esi*8-0x70246103]
  4055f0:	bound  ecx,QWORD PTR [edi+0x30]
  4055f3:	test   al,0xa1
  4055f5:	or     al,0x3
  4055f7:	cdq    
  4055f8:	fidivr DWORD PTR [ebp-0x416d8dcd]
  4055fe:	lea    esi,[ebp+0x6e]
  405601:	mov    ebp,0x4568b7c
  405606:	dec    esi
  405607:	adc    eax,0xea10c6a0
  40560c:	call   0x337c:0x5900fa8c
  405613:	stc    
  405614:	(bad)  
  405615:	gs pop ds
  405617:	gs in  al,dx
  405619:	daa    
  40561a:	les    eax,FWORD PTR [ebx]
  40561c:	aam    0xb
  40561e:	rol    ebx,0x3d
  405621:	add    eax,0xbfd9
	...
  405632:	add    BYTE PTR [ebp+0x7a],dl
  405635:	(bad)  
  405636:	dec    DWORD PTR [ecx]
  405638:	jle    0x405645
  40563a:	sti    
  40563b:	or     DWORD PTR [ebx-0x73],edi
  40563e:	test   BYTE PTR ds:0xe292240,cl
  405644:	add    eax,0xff3ac106
  405649:	add    al,bl
  40564b:	xor    eax,0x5ffff7a
  405650:	mov    ch,0xf8
  405652:	or     eax,DWORD PTR [edx]
  405654:	mov    ch,0xfa
  405656:	lea    ebp,[esi+0x11]
  405659:	xchg   edi,eax
  40565a:	jmp    DWORD PTR [eax+0x46]
  40565d:	add    edx,DWORD PTR [esi-0x3a]
  405660:	ret    0xac2
  405663:	leave  
  405664:	sar    DWORD PTR [edi-0x86ea01],cl
  40566a:	xor    edx,DWORD PTR [ecx]
  40566c:	or     eax,0x870233fa
  405671:	mov    WORD PTR [edi],cs
  405673:	sbb    eax,0xb9ab93a5
  405678:	dec    ecx
  405679:	cmp    cl,al
  40567b:	sti    
  40567c:	or     BYTE PTR [ebx],al
  40567e:	retf   0x7925
  405681:	(bad)  
  405682:	call   DWORD PTR ds:0x130bf7b5
  405688:	mov    ch,0xf9
  40568a:	lea    edx,[esi]
  40568c:	sbb    DWORD PTR [ecx],edi
  40568e:	mov    al,ds:0x5e0377f9
  405693:	outs   dx,BYTE PTR ds:[esi]
  405694:	ret    0x15c3
	...
  4056a3:	add    BYTE PTR [eax],al
  4056a5:	add    BYTE PTR [ebx-0x55],ah
  4056a8:	fidivr DWORD PTR [edi-0x43b99c]
  4056ae:	nop
  4056af:	inc    edx
  4056b0:	or     bl,bh
  4056b2:	nop
  4056b3:	inc    ebp
  4056b4:	mov    es,WORD PTR [esp+eiz*2-0x41a4a615]
  4056bb:	stos   DWORD PTR es:[edi],eax
  4056bc:	inc    ebp
  4056bd:	xor    BYTE PTR [edx],ah
  4056bf:	in     eax,dx
  4056c0:	add    al,0x3
  4056c2:	and    BYTE PTR [eax-0x44],bl
  4056c5:	jmp    FWORD PTR [eax+edx*1]
  4056c8:	lock clc 
  4056ca:	pop    eax
  4056cb:	adc    al,0xf0
  4056cd:	cli    
  4056ce:	out    dx,al
  4056cf:	pop    eax
  4056d0:	adc    al,0x92
  4056d2:	daa    
  4056d3:	test   eax,0xa0b5038c
  4056d8:	ret    0x59c2
  4056db:	stos   DWORD PTR es:[edi],eax
  4056dc:	sar    DWORD PTR [edi-0x446004],cl
  4056e2:	xor    BYTE PTR [ebx-0x2bcf05f1],ah
  4056e8:	mov    DWORD PTR [esp+edx*2-0x23104fb7],ecx
  4056ef:	stos   DWORD PTR es:[edi],eax
  4056f0:	dec    ecx
  4056f1:	sub    BYTE PTR [edx-0x66fcf493],ah
  4056f7:	das    
  4056f8:	mov    ebx,0xf767c4ff
  4056fd:	imul   DWORD PTR [eax+0x65]
  405700:	idiv   ecx
  405702:	out    0x38,al
  405704:	sbb    edx,ecx
  405706:	push   cs
  405707:	sub    BYTE PTR [ecx+0x3],al
	...
  405719:	add    eax,0x76c3c4a0
  40571e:	stos   DWORD PTR es:[edi],eax
  40571f:	fdivr  QWORD PTR [edi-0x44c86c]
  405725:	push   eax
  405726:	xor    cl,BYTE PTR [edi]
  405728:	sti    
  405729:	push   eax
  40572a:	xor    eax,0x5648489
  40572f:	mov    dh,0x39
  405731:	retf   
  405732:	es jmp 0x6002:0x29c44341
  40573a:	ret    0xbb8e
  40573d:	pop    esp
  40573e:	mov    dh,0x46
  405740:	neg    DWORD PTR [ebx+0xa]
  405743:	inc    ecx
  405744:	test   DWORD PTR [ecx-0x78],0x9f43135d
  40574b:	std    
  40574c:	mov    ecx,0xc4e54f60
  405751:	and    DWORD PTR [ebx],ecx
  405753:	jmp    0x24bb:0x16b5ecd3
  40575a:	repnz adc DWORD PTR [edi],ecx
  40575d:	sbb    edx,esi
  40575f:	add    BYTE PTR [ecx+0x46d505e7],cl
  405765:	bound  esp,QWORD PTR [edx-0x16]
  405768:	dec    ecx
  405769:	imul   eax,esp,0x28
  40576c:	or     esp,DWORD PTR [eax-0x35]
  40576f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405770:	mov    edx,0xf6deb5f4
  405775:	hlt    
  405776:	or     eax,edx
  405778:	imul   dl
  40577a:	xchg   DWORD PTR [ebp+0x1a],ebp
	...
  405789:	add    BYTE PTR [eax],al
  40578b:	add    BYTE PTR [edx],al
  40578d:	adc    al,0xf1
  40578f:	dec    ecx
  405790:	pusha  
  405791:	push   edi
  405792:	cmc    
  405793:	les    esp,FWORD PTR [eax+0x4dcea0f]
  405799:	mov    dh,0xae
  40579b:	mov    edx,0xea2f1bc
  4057a0:	mov    eax,0xe7889ff1
  4057a5:	std    
  4057a6:	push   0x39
  4057a8:	adc    BYTE PTR [esi-0x3b8cbe16],ch
  4057ae:	test   eax,0x3ec26001
  4057b3:	mov    edx,0x7600b58c
  4057b8:	lea    edi,[ebx+ecx*1-0x72458a8f]
  4057bf:	jge    0x405812
  4057c1:	lock icebp 
  4057c3:	and    ebp,edx
  4057c5:	add    DWORD PTR [esi+0x5],edx
  4057c8:	sahf   
  4057c9:	ret    0xea0a
  4057cc:	xor    BYTE PTR [ebp-0x1],dh
  4057cf:	inc    esi
  4057d0:	sbb    DWORD PTR [ebp-0x50a2bdcd],esi
  4057d6:	xor    esi,DWORD PTR [ecx]
  4057d8:	fild   DWORD PTR [ecx-0x22e98df1]
  4057de:	sub    ch,dl
  4057e0:	stos   BYTE PTR es:[edi],al
  4057e1:	std    
  4057e2:	shr    BYTE PTR [eax],0x59
  4057e5:	or     dl,cl
  4057e7:	push   esi
  4057e8:	jmp    0x154f57a1
  4057ed:	mov    ebp,0xb
	...
  4057fe:	add    BYTE PTR ds:0x695d8daf,cl
  405804:	xchg   esi,eax
  405805:	shr    DWORD PTR [edi-0x4b],cl
  405808:	or     BYTE PTR [esi-0x3b],bl
  40580b:	daa    
  40580c:	leave  
  40580d:	adc    eax,0x7d8119ea
  405812:	icebp  
  405813:	popa   
  405814:	or     al,0x1
  405816:	arpl   WORD PTR ss:[esi],ax
  405819:	dec    edi
  40581a:	loope  0x40587d
  40581c:	pop    esp
  40581d:	or     al,0xc6
  40581f:	sbb    al,0xb1
  405821:	lea    esi,[edi]
  405823:	daa    
  405824:	add    al,0x89
  405826:	out    0x6,al
  405828:	mov    ch,0xff
  40582a:	adc    ebx,DWORD PTR [eax]
  40582c:	push   eax
  40582d:	pop    eax
  40582e:	inc    esi
  40582f:	sbb    DWORD PTR [esi+0x5a60edc2],edi
  405835:	mov    eax,DWORD PTR [ebp+0x36f8c9de]
  40583b:	xor    DWORD PTR [eax-0x39],ebx
  40583e:	add    BYTE PTR [edi+0x6d],al
  405841:	add    BYTE PTR [eax],al
  405843:	jp     0x40584d
  405845:	push   DWORD PTR [ebp+0x7e]
  405848:	jge    0x40588f
  40584a:	clc    
  40584b:	lds    esi,FWORD PTR [edi+ecx*2+0x108cb65]
  405852:	and    eax,edi
  405854:	in     eax,0xc6
  405856:	add    eax,0x4113a6
  40585b:	ret    
  40585c:	and    cl,ch
  40585e:	out    dx,eax
  40585f:	test   DWORD PTR [edi+edx*2+0x65],esi
	...
  405872:	sti    
  405873:	pop    es
  405874:	(bad)  
  405875:	(bad)  
  405877:	xchg   ecx,eax
  405878:	mov    DWORD PTR ds:0x4112ee,0x103243d4
  405882:	test   DWORD PTR [edi+ebx*2-0xff8049b],esi
  405889:	loope  0x4058e3
  40588b:	retf   0x1ceb
  40588e:	xchg   ecx,eax
  40588f:	hlt    
  405890:	pop    es
  405891:	add    eax,edi
  405893:	jnp    0x4058ff
  405895:	inc    eax
  405896:	loop   0x4058ab
  405898:	gs inc ecx
  40589a:	or     bl,BYTE PTR [eax-0x18]
  40589d:	arpl   WORD PTR [ebx],dx
  40589f:	ins    DWORD PTR es:[edi],dx
  4058a0:	inc    DWORD PTR [ebx-0x17bf92b9]
  4058a6:	mov    esi,0x49000007
  4058ab:	jmp    0x4058a4
  4058ad:	inc    eax
  4058ae:	cdq    
  4058af:	iret   
  4058b0:	mov    ebx,DWORD PTR [ebp-0x5e]
  4058b3:	mov    bl,al
  4058b5:	inc    eax
  4058b6:	inc    ecx
  4058b7:	repz pop es
  4058b9:	add    eax,DWORD PTR [edi+0x6668536d]
  4058bf:	adc    al,0x41
  4058c1:	add    BYTE PTR [edx+0x61],ch
  4058c4:	cmp    al,0xe9
  4058c6:	arpl   WORD PTR [ebx-0x7dc1fe48],bx
  4058cc:	rol    DWORD PTR [ebx+0x4300ff],0xe3
  4058d3:	push   ds
  4058d4:	lods   al,BYTE PTR ds:[esi]
  4058d5:	aaa    
	...
  4058e2:	add    BYTE PTR [eax],al
  4058e4:	add    BYTE PTR ds:0x6beb84d7,cl
  4058ea:	mov    edx,0x81c0800d
  4058ef:	push   ds
  4058f0:	inc    ecx
  4058f1:	arpl   WORD PTR [esi+0x456d7844],bx
  4058f7:	mov    WORD PTR [eax],es
  4058f9:	arpl   WORD PTR [esp+edi*2-0x47b3ab38],bx
  405900:	jmp    0x405963
  405902:	js     0x405911
  405904:	add    BYTE PTR [eax],0x59
  405907:	push   ds
  405908:	inc    ecx
  405909:	arpl   WORD PTR [esp+eax*2+0x3e382d78],bx
  405910:	or     al,0xea
  405912:	mov    ah,0x3
  405914:	add    BYTE PTR [ebx-0x31],ah
  405917:	aad    0xf7
  405919:	add    dl,ah
  40591b:	retf   
  40591c:	movaps XMMWORD PTR [eax+0x63],xmm0
  405920:	mov    gs:0xe7158a9c,al
  405926:	add    DWORD PTR [edx+0x0],0x3950b
  40592d:	arpl   WORD PTR [ebp+0x54],di
  405930:	mov    gs:0x8f158a9c,al
  405936:	inc    ecx
  405937:	inc    ebp
  405938:	add    al,ch
  40593a:	rcr    DWORD PTR [ebx+0x65],1
  40593d:	and    bl,BYTE PTR [esi+eax*1+0x7765cc8]
  405944:	leave  
  405945:	add    BYTE PTR ds:0x4121,cl
	...
  405957:	add    BYTE PTR [ebx+0x25],ah
  40595a:	adc    DWORD PTR [esi+edi*1+0x5],edx
  40595e:	sub    BYTE PTR [edx+ebx*8],al
  405961:	add    BYTE PTR [ecx+0x21],al
  405964:	and    al,BYTE PTR ds:0x44065848
  40596a:	jmp    0xc65c7f9
  40596f:	inc    ebp
  405970:	arpl   WORD PTR [edx],ax
  405972:	mov    cl,0x7
  405974:	cdq    
  405975:	adc    ax,0x2221
  405979:	add    eax,0x28031160
  40597e:	test   al,0x3
  405980:	stc    
  405981:	sbb    BYTE PTR [esi+0x31],bl
  405984:	push   ebx
  405985:	sbb    eax,0x5a220b9
  40598a:	inc    ecx
  40598b:	xchg   ecx,eax
  40598c:	dec    ebx
  40598d:	mov    dl,0x46
  40598f:	pop    ebx
  405990:	lods   eax,DWORD PTR ds:[esi]
  405991:	push   edx
  405992:	xor    dl,al
  405994:	push   edi
  405995:	add    eax,0x864f8a9c
  40599a:	and    eax,0x26acfabc
  40599f:	mov    bh,0x2c
  4059a1:	jle    0x405988
  4059a3:	enter  0x27ff,0xa8
  4059a7:	add    ebp,eax
  4059a9:	sbb    BYTE PTR [esp+ebp*2],bl
  4059ac:	jle    0x4059f2
  4059ae:	jmp    0x334274b9
  4059b3:	lea    ebx,[edi-0x40]
  4059b6:	dec    ebp
  4059b7:	and    DWORD PTR [edx+0x106005],esp
	...
  4059c9:	add    BYTE PTR [eax],al
  4059cb:	es pop ebp
  4059cd:	dec    esp
  4059ce:	inc    ebp
  4059cf:	arpl   WORD PTR [esp+edx*2-0x27],ax
  4059d3:	stos   BYTE PTR es:[edi],al
  4059d4:	(bad)  
  4059d5:	(bad)  
  4059d6:	mov    dh,0xdc
  4059d8:	jge    0x4059bf
  4059da:	mov    bl,bh
  4059dc:	sub    ch,BYTE PTR [eax]
  4059de:	add    al,0xd8
  4059e0:	sbb    BYTE PTR [edi+edi*2+0x3d],ch
  4059e4:	inc    esp
  4059e5:	add    cl,ch
  4059e7:	mov    cl,0x5
  4059e9:	lea    edi,ds:0xda004455
  4059ef:	pop    esp
  4059f0:	and    BYTE PTR [edi+eax*1+0x1e],0x5
  4059f5:	xor    ebp,DWORD PTR [ebx-0x1a763b49]
  4059fb:	jmp    0x405a65
  4059fd:	data16 sub BYTE PTR [edi+0x44],ah
  405a01:	jne    0x40599a
  405a03:	(bad)  [edi]
  405a05:	push   eax
  405a06:	or     al,0x26
  405a08:	add    eax,0x2824b48b
  405a0d:	inc    ecx
  405a0e:	jmp    0xc49849ec
  405a13:	pop    ds
  405a14:	add    eax,0x2abb1cff
  405a19:	inc    ecx
  405a1a:	jmp    0x473ca4fc
  405a1f:	push   ebx
  405a20:	push   ecx
  405a21:	gs test al,0x60
  405a24:	add    BYTE PTR [ebp+0x31],0xbf
  405a28:	mov    eax,ds:0x7ced2eff
  405a2d:	(bad)  
  405a2e:	jb     0x405a30
	...
  405a3c:	add    BYTE PTR [eax],al
  405a3e:	in     eax,dx
  405a3f:	mov    eax,0xe4e6cad2
  405a44:	push   esp
  405a45:	adc    eax,0xe503c369
  405a4a:	jmp    0x405ac5
  405a4c:	gs test al,0x60
  405a4f:	add    al,0x45
  405a51:	add    DWORD PTR [ebx-0x72],esp
  405a54:	jns    0x405ac1
  405a56:	call   0xf84a:0xdeed75b0
  405a5d:	jo     0x405a93
  405a5f:	mov    cl,0xc1
  405a61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a62:	dec    ebp
  405a63:	jl     0x405a63
  405a65:	bound  edx,QWORD PTR [edx]
  405a67:	mov    ebx,0x41cd63e4
  405a6d:	add    BYTE PTR [edi+0x5ecb9bd],cl
  405a73:	jnp    0x405a74
  405a75:	mov    ecx,DWORD PTR [edi+edi*2]
  405a78:	xlat   BYTE PTR ds:[ebx]
  405a79:	xor    edi,DWORD PTR [edi+0x6d]
  405a7c:	xor    eax,edx
  405a7e:	mov    ecx,0x5c048cb0
  405a83:	inc    esp
  405a84:	add    BYTE PTR [ebx],al
  405a86:	dec    edi
  405a87:	jno    0x405a8e
  405a89:	mov    eax,ds:0xff6ecce1
  405a8e:	(bad)  
  405a8f:	js     0x405a20
  405a91:	inc    ebp
  405a92:	loop   0x405b10
  405a94:	jge    0x405a92
  405a96:	retf   
  405a97:	outs   dx,DWORD PTR ds:[esi]
  405a98:	push   ds
  405a99:	mov    eax,DWORD PTR [esi+edi*2]
  405a9c:	repz sar DWORD PTR [ecx],0xb0
  405aa0:	add    bl,al
	...
  405aae:	add    BYTE PTR [eax],al
  405ab0:	add    BYTE PTR [ebx-0x59463021],bh
  405ab6:	jp     0x405ab7
  405ab8:	inc    ecx
  405aba:	jb     0x405a47
  405abc:	push   ebp
  405abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405abe:	inc    BYTE PTR [esp+edi*8+0x59]
  405ac2:	ret    0xc623
  405ac5:	inc    ecx
  405ac6:	mov    BYTE PTR [ebx],0x4
  405ac9:	xchg   edi,eax
  405aca:	push   ebp
  405acb:	inc    cx
  405acd:	cmp    al,BYTE PTR ds:0xd83ff845
  405ad3:	mov    esp,0x757a851b
  405ad8:	cld    
  405ad9:	mov    ch,0xf0
  405adb:	test   DWORD PTR [ecx-0x393e8819],0x8bfe7d24
  405ae5:	stc    
  405ae6:	ret    0x5c3
  405ae9:	or     esp,ecx
  405aeb:	inc    ecx
  405aec:	jne    0x405a9f
  405aee:	sub    ch,ah
  405af0:	inc    DWORD PTR ds:0x63c68b79
  405af6:	and    ecx,esp
  405af8:	xor    ebx,DWORD PTR [esi]
  405afa:	ret    0xc1f0
  405afd:	pusha  
  405afe:	mov    ds:0xdd3da486,al
  405b03:	add    eax,DWORD PTR [ebx]
  405b05:	es jbe 0x405b06
  405b08:	aad    0xa2
  405b0a:	cmp    ecx,edx
  405b0c:	push   DWORD PTR [esi]
  405b0e:	push   0xffffff84
  405b10:	inc    ebp
  405b11:	stos   DWORD PTR es:[edi],eax
  405b12:	xor    al,0x36
  405b14:	cld    
	...
  405b21:	add    BYTE PTR [eax],al
  405b23:	add    BYTE PTR [edx-0x6a74eaa1],ah
  405b29:	and    dh,BYTE PTR [eax+0xa0a0c1]
  405b2f:	fsub   DWORD PTR [edx]
  405b31:	mov    ecx,0xe5e01d3
  405b36:	pop    ds
  405b37:	inc    ecx
  405b38:	arpl   WORD PTR [ebp+0x5d0653ee],bx
  405b3e:	add    eax,DWORD PTR [ecx]
  405b40:	es (bad) 
  405b42:	push   ds
  405b43:	inc    ecx
  405b44:	arpl   WORD PTR [ebx],sp
  405b46:	ds cld 
  405b48:	bound  ebp,QWORD PTR [ecx-0x635d9aa9]
  405b4e:	mov    BYTE PTR [ebp+0x4b],al
  405b51:	sahf   
  405b52:	(bad)  
  405b53:	pop    edi
  405b54:	(bad)  
  405b55:	pop    ebp
  405b56:	add    ecx,ecx
  405b58:	and    BYTE PTR [edx-0x6dd31378],bl
  405b5e:	or     ebp,eax
  405b60:	mov    dl,0x25
  405b62:	add    eax,DWORD PTR [eax]
  405b64:	loopne 0x405b7a
  405b66:	mov    ah,0x75
  405b68:	cmp    eax,0xfb082dff
  405b6d:	xchg   edx,eax
  405b6e:	jp     0x405b70
  405b70:	arpl   WORD PTR [ebx-0xb9b8a3d],si
  405b76:	mov    bl,0xff
  405b78:	hlt    
  405b79:	lahf   
  405b7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b7b:	adc    ebx,eax
  405b7d:	add    eax,0xfad30029
  405b82:	test   al,0x39
  405b84:	fs ins DWORD PTR es:[edi],dx
  405b86:	(bad)  
  405b87:	mov    bl,0x0
	...
  405b95:	add    BYTE PTR [eax],al
  405b97:	aam    0xae
  405b99:	ret    0xd808
  405b9c:	add    eax,0xc39a0472
  405ba1:	in     eax,0x3
  405ba3:	push   ss
  405ba4:	jp     0x405b6b
  405ba6:	xchg   DWORD PTR [edi-0x7608e54b],ebx
  405bac:	sbb    ebp,edi
  405bae:	sbb    eax,0x9beb1b62
  405bb3:	pop    ecx
  405bb4:	ins    BYTE PTR es:[edi],dx
  405bb5:	jmp    0x8eee3bbd
  405bba:	cmp    DWORD PTR [ecx-0x66],esp
  405bbd:	or     edi,DWORD PTR [edi-0x55]
  405bc0:	sbb    ebx,ecx
  405bc2:	and    BYTE PTR [esi],0xb5
  405bc5:	sbb    DWORD PTR [ebx+ebp*8+0x5b36ea7],ebx
  405bcc:	(bad)  
  405bcd:	lods   al,BYTE PTR ds:[esi]
  405bce:	mov    bl,0x61
  405bd0:	add    eax,0x87734172
  405bd5:	and    al,0x2a
  405bd7:	jmp    0xe901:0xce875b3f
  405bde:	aaa    
  405bdf:	pop    esi
  405be0:	jp     0x405b86
  405be2:	dec    DWORD PTR [ecx+0xe]
  405be5:	push   0x31
  405be7:	addr16 add eax,0x2fe1fdb4
  405bed:	icebp  
  405bee:	add    ebp,DWORD PTR [esi+0x9e91209]
  405bf4:	(bad)  
  405bf5:	adc    eax,0x7d9d6b39
  405bfa:	mov    dl,0x0
	...
  405c08:	add    BYTE PTR [eax],al
  405c0a:	or     al,0xae
  405c0c:	push   0xffffffac
  405c0e:	add    al,0x38
  405c10:	jmp    0x405bb0
  405c12:	push   edi
  405c13:	jl     0x405c15
  405c15:	lods   al,BYTE PTR ds:[esi]
  405c16:	lods   al,BYTE PTR ds:[esi]
  405c17:	sbb    dl,BYTE PTR [eax]
  405c19:	pop    esp
  405c1a:	call   0xb8a8:0xc73a50b5
  405c21:	jmp    0xd738de86
  405c26:	fwait
  405c27:	std    
  405c28:	push   edx
  405c29:	shl    DWORD PTR [ecx-0x3216ff94],0xca
  405c30:	mov    ebp,DWORD PTR [edx-0x1a3d43d3]
  405c36:	pusha  
  405c37:	pop    eax
  405c38:	mov    edi,DWORD PTR [ebp+0x24835615]
  405c3e:	dec    edi
  405c3f:	add    eax,0x408f275
  405c44:	add    cl,ch
  405c46:	pusha  
  405c47:	dec    esi
  405c48:	pop    ebx
  405c49:	mov    al,ds:0x720000a6
  405c4e:	push   ebx
  405c4f:	add    DWORD PTR [ebx+0x560e9],edi
  405c55:	add    ebx,DWORD PTR [edi-0x52]
  405c58:	jne    0x405c33
  405c5a:	or     DWORD PTR [esi+0x74c8f175],ebp
  405c60:	mov    eax,0xc08260e9
  405c65:	xlat   BYTE PTR ds:[ebx]
  405c66:	ins    BYTE PTR es:[edi],dx
  405c67:	or     al,bh
  405c69:	add    BYTE PTR [edx+0xc48315],bl
	...
  405c7b:	add    BYTE PTR [eax],al
  405c7d:	jo     0x405c84
  405c7f:	jne    0x405c67
  405c81:	int    0x6
  405c83:	add    cl,ch
  405c85:	pusha  
  405c86:	mov    al,ds:0x811e4202
  405c8b:	ret    
  405c8c:	(bad)  
  405c8d:	xchg   ebp,eax
  405c8e:	mov    esi,0x5260edc2
  405c93:	mov    eax,DWORD PTR ds:0xff4c1df
  405c99:	shr    DWORD PTR [edi+edi*8-0x71537900],1
  405ca0:	test   esi,esi
  405ca2:	jne    0x405ca3
  405ca4:	inc    DWORD PTR [ebp+0x7d]
  405ca7:	clc    
  405ca8:	(bad)  
  405ca9:	std    
  405caa:	jbe    0x405cac
  405cac:	add    dl,bh
  405cae:	or     bh,al
  405cb0:	test   DWORD PTR [esi-0x34000089],edi
  405cb6:	or     BYTE PTR [eax],al
  405cb8:	add    BYTE PTR [edi],ch
  405cba:	test   BYTE PTR [eax],al
  405cbc:	call   FWORD PTR [ebp-0x4d8a008a]
  405cc2:	test   DWORD PTR [eax],eax
  405cc4:	lea    eax,[edi+0x6d]
  405cc7:	(bad)  
  405cc8:	(bad)  
  405cc9:	std    
  405cca:	push   ecx
  405ccb:	push   0x0
  405ccd:	push   eax
  405cce:	add    DWORD PTR [ebp-0x88017b],ecx
  405cd4:	call   FWORD PTR [edx+0xb]
  405cd7:	add    al,ch
  405cd9:	outs   dx,BYTE PTR ds:[esi]
  405cda:	sbb    DWORD PTR [eax],eax
  405cdc:	add    cl,bh
  405cde:	pop    eax
  405cdf:	push   DWORD PTR [eax+eax*1+0x0]
	...
  405cef:	add    BYTE PTR [esi-0x798a4057],al
  405cf5:	mov    cl,0xbf
  405cf7:	jmp    0x405c80
  405cf9:	and    BYTE PTR [ecx],al
  405cfb:	add    BYTE PTR [edx+0x8],bh
  405cfe:	leave  
  405cff:	ret    0x852
  405d02:	push   ebp
  405d03:	mov    ebx,DWORD PTR [esi+0x9fcc482]
  405d09:	leave  
  405d0a:	fisubr DWORD PTR [edx+0x0]
  405d0d:	jne    0x405d84
  405d0f:	or     BYTE PTR [edx+0x6dffff2c],dl
  405d15:	stos   BYTE PTR es:[edi],al
  405d16:	mov    edi,0x5a09d674
  405d1b:	inc    edi
  405d1d:	scas   eax,DWORD PTR es:[edi]
  405d1e:	out    0x7f,eax
  405d20:	jge    0x405d98
  405d22:	dec    DWORD PTR [ebx]
  405d24:	arpl   si,bx
  405d26:	ss add bh,al
  405d29:	popa   
  405d2a:	sbb    eax,0x7e9d7900
  405d2f:	inc    ebp
  405d30:	cld    
  405d31:	lea    esi,[eax+0x7066b75]
  405d37:	mov    eax,0xc0869e63
  405d3c:	gs push cs
  405d3e:	jge    0x405d85
  405d40:	ja     0x405d28
  405d42:	inc    esi
  405d43:	dec    DWORD PTR [esi-0x60]
  405d46:	je     0x405d49
  405d48:	fdiv   st,st(0)
  405d4a:	dec    DWORD PTR [edx+0x6a045871]
  405d50:	bound  ebx,QWORD PTR [ecx]
  405d52:	inc    esi
  405d53:	inc    DWORD PTR [eax]
	...
  405d61:	add    BYTE PTR [eax],al
  405d63:	adc    esi,DWORD PTR [ebx+0x36]
  405d66:	or     al,0xac
  405d68:	unpcklps xmm7,xmm7
  405d6b:	cs mov dl,0x9b
  405d6e:	mov    eax,0x3bb08abf
  405d73:	push   ds
  405d74:	scas   al,BYTE PTR es:[edi]
  405d75:	xor    eax,0x86a17802
  405d7a:	fisttp DWORD PTR [edi]
  405d7c:	push   edx
  405d7d:	jl     0x405d42
  405d7f:	sbb    BYTE PTR [ebp-0x3b],dh
  405d82:	adc    al,0x63
  405d84:	or     DWORD PTR [ebp-0x14],edi
  405d87:	loop   0x405dea
  405d89:	add    edi,eax
  405d8b:	and    dl,BYTE PTR fs:[ebx+ebp*1+0x38]
  405d90:	xlat   BYTE PTR ds:[ebx]
  405d91:	dec    ebp
  405d92:	dec    esi
  405d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d95:	fwait
  405d96:	sbb    BYTE PTR [esp+edi*1-0x50],cl
  405d9a:	or     esp,DWORD PTR [ebx]
  405d9c:	imul   ebp,DWORD PTR [eax],0x35eb996a
  405da2:	or     BYTE PTR [ebx-0x59],cl
  405da5:	mov    al,0xff
  405da7:	sub    al,0xa8
  405da9:	ret    
  405daa:	jne    0x405e0d
  405dac:	add    eax,0x28e25812
  405db1:	stc    
  405db2:	add    ebp,DWORD PTR [ebx+0x5]
  405db5:	jmp    0xe9adc1f3
  405dba:	sti    
  405dbb:	add    al,0xab
  405dbd:	adc    al,BYTE PTR [eax+ebp*8]
  405dc0:	inc    eax
  405dc1:	fstp   DWORD PTR ds:0x86645563
	...
  405dd3:	add    BYTE PTR [eax],al
  405dd5:	add    BYTE PTR [ebx-0x53],ah
  405dd8:	out    dx,al
  405dd9:	scas   eax,DWORD PTR es:[edi]
  405dda:	xchg   ebx,eax
  405ddb:	stos   BYTE PTR es:[edi],al
  405ddc:	pop    esp
  405ddd:	cld    
  405dde:	les    ebp,FWORD PTR [esi]
  405de0:	xchg   esi,eax
  405de1:	add    al,0x63
  405de3:	sub    BYTE PTR [ecx-0x2619ed3],0x38
  405dea:	pusha  
  405deb:	inc    esi
  405dec:	shl    bh,cl
  405dee:	sub    al,0x7e
  405df0:	adc    al,0x0
  405df2:	call   0x1344a10e
  405df7:	js     0x405e5d
  405df9:	add    al,0xab
  405dfb:	stos   BYTE PTR es:[edi],al
  405dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dfd:	push   esp
  405dfe:	pushf  
  405dff:	xor    ch,ch
  405e01:	scas   al,BYTE PTR es:[edi]
  405e02:	xor    DWORD PTR ds:0x1527dd31,edx
  405e08:	push   0x31
  405e0a:	jae    0x405e11
  405e0c:	cld    
  405e0d:	add    ah,BYTE PTR [eax]
  405e0f:	sahf   
  405e10:	in     eax,0x88
  405e12:	cwde   
  405e13:	xor    DWORD PTR [eax+0x7b],edx
  405e16:	mov    al,ds:0x57c2a04e
  405e1b:	add    eax,0x864f7abc
  405e20:	and    eax,0x55f6acac
  405e25:	sbb    ah,BYTE PTR [ebx+0x52]
  405e28:	dec    esi
  405e29:	cmp    DWORD PTR [ebx-0x63],ebx
  405e2c:	sbb    cl,bl
  405e2e:	cmp    al,0xaa
  405e30:	es dec ecx
  405e32:	aaa    
  405e33:	add    eax,0x560e900
  405e38:	mov    edx,DWORD PTR [eax+eax*1+0x0]
	...
  405e47:	add    BYTE PTR [eax],al
  405e49:	sub    BYTE PTR [edi+0x12],bh
  405e4c:	je     0x405df8
  405e4e:	lods   eax,DWORD PTR ds:[esi]
  405e4f:	push   eax
  405e50:	xchg   ebx,eax
  405e51:	pop    esp
  405e52:	js     0x405e99
  405e54:	adc    eax,0xe175aab7
  405e59:	mov    ch,0x56
  405e5b:	or     al,0xae
  405e5d:	out    0x27,eax
  405e5f:	cld    
  405e60:	in     al,dx
  405e61:	cli    
  405e62:	clc    
  405e63:	or     DWORD PTR [ebp-0x16],edi
  405e66:	xchg   BYTE PTR [ebp-0xf],bh
  405e69:	pusha  
  405e6a:	xor    cl,cl
  405e6c:	sbb    ah,BYTE PTR [edi-0x628dfa63]
  405e72:	test   eax,eax
  405e74:	jmp    0x5060:0xe5c2bc1d
  405e7b:	mov    edx,ebp
  405e7d:	loope  0x405e3f
  405e7f:	hlt    
  405e80:	sbb    cl,BYTE PTR [ebx*1+0x560f398]
  405e87:	call   0xffea5b6a
  405e8c:	jo     0x405eb9
  405e8e:	test   eax,0x54db248d
  405e93:	call   0xffe9f86d
  405e98:	ficomp DWORD PTR [ecx+0x79131e1e]
  405e9e:	and    DWORD PTR [eax],eax
  405ea0:	and    DWORD PTR [eax+0x5],0xffffffff
  405ea4:	cld    
  405ea5:	mov    ah,0xa9
  405ea7:	jne    0x405e8a
  405ea9:	enter  0xfe80,0x66
	...
  405eb9:	add    BYTE PTR [eax],al
  405ebb:	add    BYTE PTR ds:0xdceec083,cl
  405ec1:	cmc    
  405ec2:	add    cl,ch
  405ec4:	pusha  
  405ec5:	test   al,0x75
  405ec7:	push   ebp
  405ec8:	call   0xa5413a46
  405ecd:	push   edi
  405ece:	cmp    eax,0x4a000
  405ed3:	jbe    0x405f14
  405ed5:	mov    bl,BYTE PTR [ecx+eax*1]
  405ed8:	cmp    al,BYTE PTR ds:0x8c7e75ff
  405ede:	pop    edx
  405edf:	push   DWORD PTR [ebp+0x57]
  405ee2:	test   eax,eax
  405ee4:	out    dx,al
  405ee5:	sar    bh,0x75
  405ee8:	outs   dx,BYTE PTR ds:[esi]
  405ee9:	mov    WORD PTR [ebp-0x74a89a23],cs
  405eef:	push   ebp
  405ef0:	out    dx,al
  405ef1:	adc    ch,BYTE PTR cs:[edx-0x6]
  405ef5:	or     al,0x34
  405ef7:	and    edx,edi
  405ef9:	add    al,0xff
  405efb:	jne    0x405ec3
  405efd:	pop    edx
  405efe:	jne    0x405ef4
  405f00:	mov    ch,0x53
  405f02:	or     al,0xc7
  405f04:	jg     0x405f5f
  405f06:	add    BYTE PTR [eax],al
  405f08:	mov    edx,0x51f26804
  405f0d:	inc    esp
  405f0e:	add    bh,bh
  405f10:	outs   dx,DWORD PTR ds:[esi]
  405f11:	jne    0x405efb
  405f13:	sbb    DWORD PTR [ecx+eax*1],ebp
  405f16:	add    BYTE PTR [ebx-0x3f],dl
  405f19:	les    esi,FWORD PTR [esi+esi*1+0x11]
  405f1d:	pop    ecx
  405f1e:	push   0xf2
	...
  405f2f:	mov    cl,0x43
  405f31:	add    al,ch
  405f33:	push   0x2d
  405f35:	add    BYTE PTR [eax],al
  405f37:	jns    0x405f95
  405f39:	push   edi
  405f3a:	inc    edi
  405f3b:	icebp  
  405f3c:	mov    ecx,0x49b94b9
  405f41:	add    BYTE PTR [eax-0x47518979],dh
  405f47:	push   cs
  405f48:	adc    al,0x0
  405f4a:	add    BYTE PTR [ecx-0x3c],dh
  405f4d:	mov    BYTE PTR [edi-0x4b],0x1
  405f51:	push   edi
  405f52:	push   ebx
  405f53:	arpl   WORD PTR [esi-0x4f],ax
  405f56:	mov    ch,0x63
  405f58:	sahf   
  405f59:	jp     0x405fa0
  405f5b:	cmp    ebx,DWORD PTR [edi-0x3b]
  405f5e:	inc    edi
  405f5f:	xor    al,0x99
  405f61:	dec    esp
  405f62:	pop    ebx
  405f63:	mov    ebx,0x6340df9c
  405f68:	xlat   BYTE PTR ds:[ebx]
  405f69:	ss cld 
  405f6b:	or     ebp,esi
  405f6d:	jbe    0x405f6f
  405f6f:	arpl   WORD PTR [ebx-0x8],bp
  405f72:	mov    edi,0xf8785a97
  405f77:	jnp    0x405f15
  405f79:	fild   WORD PTR [eax+0x63]
  405f7c:	push   ss
  405f7d:	in     eax,0xb3
  405f7f:	arpl   WORD PTR [esi+0x5794f800],bx
  405f85:	js     0x405f66
  405f87:	stos   BYTE PTR es:[edi],al
  405f88:	push   ecx
  405f89:	adc    eax,DWORD PTR [eax]
  405f8b:	arpl   WORD PTR [esi+0x6605f1fe],cx
  405f91:	xchg   edi,eax
  405f92:	adc    DWORD PTR [eax],eax
	...
  405fa0:	add    BYTE PTR [eax],al
  405fa2:	arpl   WORD PTR [esi-0x21623f28],bx
  405fa8:	lods   al,BYTE PTR ds:[esi]
  405fa9:	add    BYTE PTR [ebx+ecx*1],dl
  405fac:	pushf  
  405fad:	addr16 mov cl,0x66
  405fb0:	lods   al,BYTE PTR ds:[esi]
  405fb1:	mov    edx,DWORD PTR [esi]
  405fb3:	into   
  405fb4:	clc    
  405fb5:	shr    DWORD PTR [edi],1
  405fb7:	mov    ds:0x9788027a,al
  405fbc:	push   ebx
  405fbd:	call   0xffecdb54
  405fc2:	sub    al,0x58
  405fc4:	inc    esp
  405fc5:	call   DWORD PTR [esi-0x29]
  405fc8:	dec    eax
  405fc9:	push   esi
  405fcb:	sub    DWORD PTR [ebx-0x53d969db],ebx
  405fd1:	sub    esi,0x35
  405fd4:	add    esi,DWORD PTR [edi+0x5c]
  405fd7:	pop    edi
  405fd8:	inc    esi
  405fd9:	clc    
  405fda:	arpl   WORD PTR ds:0xa66363e9,ax
  405fe0:	aam    0xab
  405fe2:	dec    esp
  405fe3:	xor    DWORD PTR [ebp-0x54],ebx
  405fe6:	into   
  405fe7:	std    
  405fe8:	inc    eax
  405fe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fec:	inc    esi
  405fed:	lods   al,BYTE PTR ds:[esi]
  405fee:	scas   al,BYTE PTR es:[edi]
  405fef:	mov    cl,0x51
  405ff1:	xchg   BYTE PTR [ecx],cl
  405ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ff4:	ss clc 
  405ff6:	in     al,0x30
  405ff8:	jmp    0x405f92
  405ffa:	js     0x405ff6
  405ffc:	sub    BYTE PTR [edi],dh
  405ffe:	ins    BYTE PTR es:[edi],dx
  405fff:	jp     0x405fb5
  406001:	mov    bh,0xd8
  406003:	adc    edx,DWORD PTR [esi]
  406005:	add    BYTE PTR ss:[eax],al
	...
  406014:	add    BYTE PTR [edi-0x5a],dl
  406017:	xchg   esp,eax
  406018:	mov    bh,0xfc
  40601a:	push   ebx
  40601b:	mov    ebp,0xe42e2386
  406020:	push   0x3e90562
  406025:	fcom   DWORD PTR [eax-0xb]
  406028:	ja     0x40609b
  40602a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40602b:	pop    esp
  40602c:	mov    al,0xd4
  40602e:	push   ebx
  40602f:	icebp  
  406030:	stos   BYTE PTR es:[edi],al
  406031:	push   esi
  406032:	test   eax,0xa6c17fc1
  406037:	into   
  406038:	jg     0x405fda
  40603a:	inc    esi
  40603b:	and    bh,BYTE PTR [ebp+0x50e8f9a1]
  406041:	fcomp  DWORD PTR [ecx+0x4ef3c06a]
  406047:	sbb    bl,bh
  406049:	mov    ecx,0x94e3e91d
  40604e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40604f:	xchg   ecx,eax
  406050:	add    BYTE PTR [ecx+0x1e7d96a6],0xa9
  406057:	add    DWORD PTR [ebx+eax*2],eax
  40605a:	add    eax,0xa2fa9be9
  40605f:	jle    0x40600c
  406061:	fiadd  DWORD PTR [eax+0x0]
  406064:	cmp    eax,0xe9200547
  406069:	pusha  
  40606a:	popf   
  40606b:	ins    BYTE PTR es:[edi],dx
  40606c:	dec    ebx
  40606d:	or     BYTE PTR [esi+0x78c4a489],ah
  406073:	jge    0x40609e
  406075:	mov    dh,0xe9
  406077:	(bad)  
  406078:	call   0x40607d
	...
  406085:	add    BYTE PTR [eax],al
  406087:	add    BYTE PTR [eax-0xe],ah
  40608a:	mov    edi,0x45be953a
  40608f:	sub    DWORD PTR [ebx],edi
  406091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406092:	(bad)  
  406093:	jmp    0x2f14a0b9
  406098:	push   0xa22e0005
  40609d:	mov    ch,0xff
  40609f:	(bad)  
  4060a0:	pusha  
  4060a1:	add    eax,0x75bc9cff
  4060a6:	inc    ebp
  4060a7:	cmp    eax,ecx
  4060a9:	das    
  4060aa:	mov    ah,0x76
  4060ac:	mov    ds:0x20a48d99,al
  4060b1:	push   ebp
  4060b2:	push   0x800560e9
  4060b7:	and    DWORD PTR [eax-0x5a],0x75
  4060bb:	icebp  
  4060bc:	clc    
  4060bd:	bound  esi,QWORD PTR [ecx+ebp*8+0x5dbffa60]
  4060c4:	popa   
  4060c5:	cmp    BYTE PTR [ebp-0x47],0x60
  4060c9:	xor    BYTE PTR ds:0x4fad0,al
  4060cf:	jmp    0xb6f0a075
  4060d4:	pop    ecx
  4060d5:	add    eax,0x75235c00
  4060da:	push   eax
  4060db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060dc:	push   ebx
  4060dd:	imul   ebp,DWORD PTR [eax-0x17],0x64800560
  4060e4:	and    eax,ebp
  4060e6:	push   eax
  4060e7:	or     DWORD PTR [ebx+0x71],0x0
	...
  4060fa:	add    BYTE PTR [edx-0x788a405a],cl
  406100:	mov    BYTE PTR [ecx-0x74fe8600],ch
  406106:	inc    ebp
  406107:	xchg   esi,eax
  406108:	mov    BYTE PTR [eax],0x0
  40610b:	iret   
  40610c:	in     eax,dx
  40610d:	mov    edi,0x96eb9
  406112:	add    BYTE PTR [ecx-0x37],ch
  406115:	rep stos BYTE PTR es:[edi],al
  406117:	test   DWORD PTR [ebp-0x40],eax
  40611a:	cmp    al,0x4a
  40611c:	or     DWORD PTR [eax],eax
  40611e:	push   edi
  406120:	xor    al,0x8f
  406122:	inc    ebp
  406123:	sahf   
  406124:	mov    DWORD PTR [ebp-0x2c],0xf4d
  40612b:	inc    ebp
  40612c:	inc    ebp
  40612d:	lock dec DWORD PTR ds:0xb78d0009
  406134:	enter  0x6a50,0xa
  406138:	add    eax,DWORD PTR [eax]
  40613a:	push   DWORD PTR [edi+0x2c]
  40613d:	call   0x489773
  406142:	or     edi,DWORD PTR [edx]
  406144:	hlt    
  406145:	add    eax,0xb84f83
  40614a:	jne    0x406114
  40614c:	and    DWORD PTR [eax-0x1],0x75ff6d37
  406153:	out    0x1,al
  406155:	or     al,0x2c
  406157:	mov    ecx,DWORD PTR [ecx]
  406159:	push   DWORD PTR [ebp-0x22]
  40615c:	or     edx,0xb3
	...
  40616e:	mov    edx,0x8ac48308
  406173:	popf   
  406174:	mov    dh,0x45
  406176:	repnz cmp DWORD PTR [edx+0x0],ebp
  40617a:	mov    ebp,0xdce8fbf4
  40617f:	jae    0x406180
  406181:	jmp    DWORD PTR [ebx-0x59]
  406184:	ret    
  406185:	jne    0x4061e8
  406187:	xchg   edi,ebp
  406189:	mov    BYTE PTR [esi],bl
  40618b:	inc    esi
  40618c:	test   eax,0x2576af75
  406191:	mov    dl,0x63
  406193:	scas   al,BYTE PTR es:[edi]
  406194:	push   ebx
  406195:	call   esi
  406197:	repnz test al,0x75
  40619a:	sbb    esi,DWORD PTR [esi]
  40619c:	dec    edi
  40619d:	sti    
  40619e:	dec    esp
  40619f:	inc    ebx
  4061a0:	std    
  4061a1:	mov    edi,0x109cb0ce
  4061a6:	cmp    al,0xb9
  4061a8:	adc    edi,edi
  4061aa:	scas   al,BYTE PTR es:[edi]
  4061ab:	call   0xfcef:0x35eb75a8
  4061b2:	and    al,0xdb
  4061b4:	jl     0x40618e
  4061b6:	sbb    al,0x59
  4061b8:	imul   ebp,eax,0x66
  4061bb:	inc    edx
  4061bc:	add    al,0x0
  4061be:	or     al,0x79
  4061c0:	outs   dx,DWORD PTR ds:[esi]
  4061c1:	call   0xffe96efc
  4061c6:	cld    
  4061c7:	js     0x406230
  4061c9:	call   0xffe96f0c
  4061ce:	in     al,dx
  4061cf:	sbb    BYTE PTR [edi+0xe8],ah
	...
  4061e1:	inc    esi
  4061e2:	or     eax,0xeee8ffa9
  4061e7:	dec    esp
  4061e8:	pop    edi
  4061e9:	stos   BYTE PTR es:[edi],al
  4061ea:	outs   dx,DWORD PTR ds:[esi]
  4061eb:	idiv   edi
  4061ed:	aaa    
  4061ee:	pop    ss
  4061ef:	xchg   edi,eax
  4061f0:	sbb    DWORD PTR [edi+0x6f457cb9],0xffffffa7
  4061f7:	ret    
  4061f8:	je     0x406257
  4061fa:	jae    0x4061ff
  4061fc:	add    BYTE PTR [ebx-0x52],ah
  4061ff:	add    eax,edi
  406201:	push   ds
  406202:	pop    edx
  406203:	add    eax,DWORD PTR [eax]
  406205:	arpl   WORD PTR [esi+0x4974576],bp
  40620b:	cmp    DWORD PTR [ecx+0x2e9e1116],ebp
  406211:	pop    ebx
  406212:	lods   eax,DWORD PTR ds:[esi]
  406213:	add    BYTE PTR [edx+0x266aa37c],ch
  406219:	ja     0x40621f
  40621b:	std    
  40621c:	adc    cl,bh
  40621e:	add    al,0x7e
  406220:	cs push edi
  406222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406223:	cld    
  406224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406225:	dec    ebx
  406226:	cmp    al,0x6f
  406228:	test   al,0x54
  40622a:	ss cs dec di
  40622e:	scas   al,BYTE PTR es:[edi]
  40622f:	cmp    DWORD PTR [ebx-0x454e5cbc],esp
  406235:	and    DWORD PTR [esi],ecx
  406237:	jmp    0x6af24a8a
  40623c:	mov    edi,0x3e262c2f
  406241:	daa    
  406242:	add    eax,0x21e9
	...
  406253:	add    BYTE PTR [ecx+ecx*2],ah
  406256:	das    
  406257:	or     DWORD PTR [ebx+0x2f],esp
  40625a:	in     eax,dx
  40625b:	jbe    0x406203
  40625d:	mov    eax,ds:0x5e31bb9
  406262:	jmp    0xee2ed6a
  406267:	add    esp,DWORD PTR [ebx-0x5e]
  40626a:	jl     0x406267
  40626c:	add    al,0x75
  40626e:	cmp    al,BYTE PTR [ebx]
  406270:	arpl   sp,cx
  406272:	sub    edi,edi
  406274:	fdivr  QWORD PTR [ecx]
  406276:	bound  edx,QWORD PTR [edi+0x4f95c9e0]
  40627c:	xor    dl,cl
  40627e:	and    al,0x58
  406280:	arpl   WORD PTR ds:0xbe7003e9,ax
  406286:	inc    ecx
  406287:	add    al,0x53
  406289:	add    eax,0xa5ca9be9
  40628e:	mov    esi,0x48daa7
  406293:	test   eax,0xe910057f
  406298:	pusha  
  406299:	lods   eax,DWORD PTR ds:[esi]
  40629a:	mov    WORD PTR [ecx+0x2489a2c4],cs
  4062a0:	imul   DWORD PTR [eax+eax*1]
  4062a3:	stc    
  4062a4:	pusha  
  4062a5:	add    eax,0xa2bf0ee8
  4062aa:	push   DWORD PTR [eax+0x22]
  4062ad:	popa   
  4062ae:	(bad)  
  4062af:	cld    
  4062b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062b1:	pop    esp
  4062b2:	cmp    al,0xe9
  4062b4:	pusha  
  4062b5:	add    eax,0xa933
	...
  4062c6:	add    BYTE PTR [eax],dl
  4062c8:	outs   dx,DWORD PTR ds:[esi]
  4062c9:	(bad)  
  4062ca:	lods   al,BYTE PTR ds:[esi]
  4062cb:	or     al,0xe1
  4062cd:	(bad)  
  4062ce:	call   0x29b60533
  4062d3:	mov    ah,0x48
  4062d5:	aam    0x4e
  4062d7:	jb     0x406336
  4062d9:	(bad)  
  4062da:	lods   al,BYTE PTR ds:[esi]
  4062db:	lock leave 
  4062dd:	inc    ebp
  4062de:	and    esp,edi
  4062e0:	adc    DWORD PTR [eax],eax
  4062e2:	jmp    0x2f34aac4
  4062e7:	or     al,0xa2
  4062e9:	push   DWORD PTR [edx+eiz*4-0x37]
  4062ed:	push   eax
  4062ee:	xchg   ecx,eax
  4062ef:	pusha  
  4062f0:	add    eax,0x5596900
  4062f5:	call   DWORD PTR [eax+edi*8+0x673bb5a9]
  4062fc:	add    eax,0xb33290b
  406301:	xor    DWORD PTR [esp+ebp*4+0x4],0x75
  406306:	in     al,0xf7
  406308:	lahf   
  406309:	add    cl,ch
  40630b:	pusha  
  40630c:	retf   0x9945
  40630f:	std    
  406310:	adc    DWORD PTR [eax],eax
  406312:	jmp    0x39f0ab52
  406317:	cld    
  406318:	pop    ss
  406319:	mov    esp,0x91200
  40631e:	add    BYTE PTR [edx],bh
  406320:	sbb    eax,0x817ac445
  406325:	nop
  406326:	mov    dl,0x8a
  406328:	add    eax,0xc00b
	...
  406339:	add    BYTE PTR [edi+0x4],ch
  40633c:	jmp    0x45de19
  406341:	mov    ecx,DWORD PTR [edi+0x31]
  406344:	mov    BYTE PTR [eax],0x8a
  406347:	sbb    al,0x7d
  406349:	les    esp,FWORD PTR [ebx]
  40634b:	stos   BYTE PTR es:[edi],al
  40634c:	(bad)  
  40634d:	(bad)  
  40634e:	jp     0x4062e6
  406350:	mov    edi,0x455fa0f3
  406355:	les    eax,FWORD PTR [esi]
  406357:	add    eax,0xd5c50000
  40635c:	mov    bh,0x8f
  40635e:	call   DWORD PTR [edi+eax*8+0x45]
  406362:	jb     0x4063cb
  406364:	str    WORD PTR [edx+0x60]
  406368:	inc    ebp
  406369:	hlt    
  40636a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40636b:	xchg   edi,eax
  40636c:	(bad)  
  40636d:	push   DWORD PTR [edi+0x2050c445]
  406373:	add    eax,0xd545006a
  406378:	mov    ebx,0x16bee8
  40637d:	add    BYTE PTR [ecx],dl
  40637f:	lds    esi,FWORD PTR [esi+eax*1-0x77]
  406383:	in     eax,dx
  406384:	rol    DWORD PTR [eax],cl
  406386:	iret   
  406387:	add    eax,0x4fa8ce9
  40638c:	add    bh,bh
  40638e:	outs   dx,DWORD PTR ds:[esi]
  40638f:	hlt    
  406390:	(bad)  
  406391:	jne    0x40631d
  406393:	addr16 jne 0x40634e
  406396:	loop   0x406402
  406398:	sub    al,BYTE PTR [ecx-0x46]
  40639b:	imul   esi,DWORD PTR [ebp-0x44],0x0
	...
  4063aa:	add    BYTE PTR [eax],al
  4063ac:	add    BYTE PTR [edx+0x6300b1d2],dh
  4063b2:	scas   al,BYTE PTR es:[edi]
  4063b3:	add    ah,0x4f
  4063b6:	mov    edi,0xfe8f456c
  4063bb:	sbb    DWORD PTR [eax],eax
  4063bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063be:	fld    st(3)
  4063c0:	call   0xffe5ba5d
  4063c5:	push   0x78022f6e
  4063ca:	dec    eax
  4063cb:	jnp    0x406412
  4063cd:	iret   
  4063ce:	jg     0x4063ff
  4063d0:	mov    ah,0x8b
  4063d2:	dec    ebp
  4063d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063d4:	push   DWORD PTR [edi+ecx*4+0x2f]
  4063d8:	mov    esp,0x73f67b
  4063dd:	arpl   si,di
  4063df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063e0:	jne    0x406401
  4063e2:	pop    ss
  4063e3:	das    
  4063e4:	mov    ah,0x4b
  4063e6:	hlt    
  4063e7:	stos   BYTE PTR es:[edi],al
  4063e8:	dec    DWORD PTR [ebx+edx*4-0x3d]
  4063ec:	jne    0x40644f
  4063ee:	xor    esi,ebx
  4063f0:	cmp    BYTE PTR [esi+0x4f74039e],0x4f
  4063f7:	das    
  4063f8:	adc    BYTE PTR [ecx+eiz*2],ch
  4063fb:	idiv   esi
  4063fd:	scas   al,BYTE PTR es:[edi]
  4063fe:	sbb    bl,BYTE PTR [eax+eax*2+0xba4d71a]
  406405:	and    ebx,DWORD PTR [ecx+0x1]
  406408:	jmp    0x40647e
  40640a:	adc    ecx,esp
  40640c:	or     ebp,DWORD PTR [eax]
  40640e:	jp     0x406422
  406410:	lea    eax,[eax]
	...
  40641e:	add    BYTE PTR [eax],al
  406420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406421:	dec    edx
  406422:	push   esp
  406423:	jmp    FWORD PTR [esi-0x66]
  406426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406427:	jne    0x4063e0
  406429:	cmc    
  40642a:	or     bh,bl
  40642c:	in     al,0x9e
  40642e:	js     0x406408
  406430:	fsub   QWORD PTR [eax]
  406432:	outs   dx,DWORD PTR ds:[esi]
  406433:	call   0x44410a
  406438:	int3   
  406439:	add    al,0x5c
  40643b:	les    edi,FWORD PTR [ebx-0x435b420b]
  406441:	lahf   
  406442:	pop    esp
  406443:	push   0xa4ae0dcb
  406448:	lods   al,BYTE PTR ds:[esi]
  406449:	lahf   
  40644a:	cmp    al,0x6c
  40644c:	mov    ebx,0x9ca49e05
  406451:	xor    DWORD PTR [eax+ebx*2],0x63
  406455:	sbb    ecx,esp
  406457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406458:	push   ss
  406459:	jno    0x4063ec
  40645b:	mov    al,0xa5
  40645d:	lahf   
  40645e:	sahf   
  40645f:	js     0x406401
  406461:	cmp    esi,DWORD PTR [esi]
  406463:	mov    ebx,0x4ee8f4a1
  406468:	fdiv   DWORD PTR [eax+0x336bbf6a]
  40646e:	ror    al,cl
  406470:	loopne 0x406492
  406472:	in     eax,0x3
  406474:	iret   
  406475:	dec    edi
  406476:	push   0x26
  406478:	jae    0x40647f
  40647a:	fnstsw WORD PTR [ebx]
  40647c:	(bad)  
  40647d:	dec    eax
  40647e:	pop    ebp
  40647f:	push   ebx
  406480:	cmp    al,0x19
  406482:	in     eax,0x9b
	...
  406490:	add    BYTE PTR [eax],al
  406492:	add    BYTE PTR [edi],ch
  406494:	push   esi
  406495:	jmp    0xc2064a9d
  40649a:	repz and eax,0xe79bed19
  4064a0:	mov    bh,0x36
  4064a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064a3:	jmp    0x11a1:0x96a43148
  4064aa:	data16 mov ah,0x5
  4064ad:	jmp    0xf05a21aa
  4064b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064b3:	outs   dx,BYTE PTR ds:[esi]
  4064b4:	cmc    
  4064b5:	or     eax,0x635eb2e
  4064ba:	cs pop ebx
  4064bc:	lods   eax,DWORD PTR ds:[esi]
  4064bd:	jmp    0xa862:0x9edca5
  4064c4:	sahf   
  4064c5:	jne    0x4064b4
  4064c7:	jmp    0x612a1433
  4064cc:	sahf   
  4064cd:	jne    0x4064bc
  4064cf:	or     BYTE PTR [esi],bh
  4064d1:	fcom   st(6)
  4064d3:	add    BYTE PTR [ebx-0x3c61cd3d],cl
  4064d9:	or     al,0xe9
  4064db:	imul   ecx,DWORD PTR [edx+0x15ab68ec],0xfffffffe
  4064e2:	mov    dh,0xc0
  4064e4:	nop
  4064e5:	test   DWORD PTR [ebx],edi
  4064e7:	rcr    DWORD PTR [esi+0x43739ff],0x1
  4064ee:	jmp    0x58a41253
  4064f3:	pop    edi
  4064f4:	add    eax,0xaac9
	...
  406505:	add    BYTE PTR [edx],ch
  406507:	mov    ch,ah
  406509:	push   0x42
  40650b:	or     eax,0x8261f500
  406510:	jge    0x4064eb
  406512:	pusha  
  406513:	sbb    DWORD PTR [ecx],ebx
  406515:	outs   dx,BYTE PTR ds:[esi]
  406516:	push   0xfffffff9
  406518:	(bad)  
  406519:	fcomp  QWORD PTR [eax-0x53]
  40651c:	fiadd  DWORD PTR [ebx+0x0]
  40651f:	sahf   
  406520:	(bad)  
  406521:	fdiv   QWORD PTR [eax]
  406523:	lahf   
  406524:	jne    0x406503
  406526:	add    DWORD PTR [eax],ebx
  406528:	or     BYTE PTR [ecx+0x5d],dl
  40652b:	mov    edx,0xc32e3eff
  406530:	adc    cl,ch
  406532:	pop    ebx
  406533:	mov    ch,ah
  406535:	push   0x42
  406537:	or     eax,0x83049d00
  40653c:	jge    0x40652b
  40653e:	pusha  
  40653f:	sbb    DWORD PTR [esi],edx
  406541:	push   ss
  406542:	pop    edx
  406543:	cmc    
  406544:	(bad)  
  406545:	xchg   esp,eax
  406546:	pop    eax
  406547:	lods   eax,DWORD PTR ds:[esi]
  406548:	scas   al,BYTE PTR es:[edi]
  406549:	add    BYTE PTR [eax+0x62],al
  40654c:	(bad)  
  40654d:	call   DWORD PTR [edi+0xe]
  406550:	push   DWORD PTR [ebp-0x3e]
  406553:	imul   eax,DWORD PTR ds:0xc962bddb,0x5501cec2
  40655d:	mov    ebp,DWORD PTR [esi-0x720f3b7a]
  406563:	cld    
  406564:	or     ebp,eax
  406566:	jge    0x4065ce
  406568:	(bad)  
  406569:	inc    DWORD PTR [eax]
	...
  406577:	add    BYTE PTR [eax],al
  406579:	xor    ecx,DWORD PTR [ebp+0xc]
  40657c:	sbb    DWORD PTR [edi-0xb],0xffffffff
  406580:	jae    0x4065f6
  406582:	bound  esi,QWORD PTR [ebp+0xc]
  406585:	mov    ds:0xbdffe2ce,al
  40658a:	push   cs
  40658b:	shl    BYTE PTR [eax+ecx*2+0x74],0x45
  406590:	lock cmp ah,BYTE PTR [edx+0x75]
  406594:	or     al,0xe2
  406596:	xchg   ebx,esp
  406598:	(bad)  
  406599:	fisttp QWORD PTR [esi]
  40659b:	shl    BYTE PTR [eax+ebx*1-0x7e],0x7d
  4065a0:	cld    
  4065a1:	dec    edx
  4065a2:	or     DWORD PTR [eax],edx
  4065a4:	add    BYTE PTR [ecx-0x57],cl
  4065a7:	(bad)  
  4065a8:	jne    0x406568
  4065aa:	addr16 jne 0x4065a5
  4065ad:	xchg   edx,eax
  4065ae:	popf   
  4065af:	out    0xff,al
  4065b1:	lea    ecx,[ebx]
  4065b3:	shl    BYTE PTR [ebp+0x2b],0x68
  4065b7:	jne    0x4065c9
  4065b9:	popf   
  4065ba:	std    
  4065bb:	sti    
  4065bc:	call   edi
  4065be:	cmp    bh,0x75
  4065c1:	add    dh,BYTE PTR [ecx+0x4f]
  4065c4:	(bad)  
  4065c5:	cmp    eax,0x6a458d67
  4065ca:	fsub   st,st(7)
  4065cc:	loopne 0x406637
  4065ce:	addr16 (bad) 
  4065d0:	jmp    DWORD PTR [ebx+0x79]
  4065d3:	psubsb mm7,QWORD PTR [edx+0x1affa1e9]
  4065da:	icebp  
  4065db:	push   cs
	...
  4065ec:	ss pop ss
  4065ee:	scas   eax,DWORD PTR es:[edi]
  4065ef:	sbb    DWORD PTR [edi+0x5f75a19e],0x6
  4065f6:	mov    cl,0xe2
  4065f8:	les    esp,FWORD PTR [ebx+0x2f6f458b]
  4065fe:	pop    ds
  4065ff:	or     al,0x63
  406601:	cmp    cl,BYTE PTR [ecx-0x1]
  406604:	ss mov edx,0xc3c15aab
  40660a:	mov    eax,ds:0xd4d2a30b
  40660f:	mov    WORD PTR [esi],ds
  406611:	pop    esi
  406612:	xor    al,0xff
  406614:	push   ss
  406615:	mov    edx,0x638011ab
  40661a:	mov    eax,ds:0xe4f2a30b
  40661f:	xor    dh,0x71
  406622:	add    al,0x0
  406624:	push   ebx
  406625:	scas   al,BYTE PTR es:[edi]
  406626:	adc    al,0x11
  406628:	fs cdq 
  40662a:	repz (bad) 
  40662c:	(bad)  
  40662d:	sbb    ah,BYTE PTR [ecx+0x17135b75]
  406633:	or     BYTE PTR [ebx],bh
  406635:	sbb    DWORD PTR [edx+0x471144ff],esp
  40663b:	lock xchg ebx,eax
  40663d:	ss and ah,bl
  406640:	xor    al,0x33
  406642:	mov    eax,ds:0x49465f75
  406647:	frstor [ebx+eax*2]
  40664a:	retf   
  40664b:	ret    0xae6f
  40664e:	mov    eax,DWORD PTR ss:[eax]
	...
  40665d:	add    BYTE PTR [eax],al
  40665f:	pop    es
  406660:	das    
  406661:	enter  0xb0f0,0x7
  406665:	mov    ebp,0xf1058eff
  40666a:	stos   DWORD PTR es:[edi],eax
  40666b:	jmp    0xe141:0xeaa11ea6
  406672:	test   BYTE PTR [esi+0xd],ch
  406675:	jmp    0x7cdd0391
  40667a:	or     ecx,ebx
  40667c:	xchg   ecx,eax
  40667d:	or     BYTE PTR [ecx+0x18290fd4],ah
  406683:	xchg   ecx,eax
  406684:	mov    ah,BYTE PTR [ebx+edx*4+0xc5c9c33]
  40668b:	retf   
  40668c:	push   0xfb4a0cb
  406691:	test   eax,0x4c868117
  406696:	mov    al,ds:0x3d90563
  40669b:	adc    ch,dh
  40669d:	mov    ebp,0x3c9b9716
  4066a2:	pushf  
  4066a3:	jnp    0x406680
  4066a5:	(bad)  
  4066a6:	mov    al,ds:0x17a90f84
  4066ab:	bound  ecx,QWORD PTR [eax+0x6c]
  4066ae:	inc    esi
  4066af:	jae    0x4066e5
  4066b1:	cmp    ebp,0xa08e9b81
  4066b7:	out    dx,al
  4066b8:	or     al,0x91
  4066ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066bb:	aas    
  4066bc:	fwait
  4066bd:	jle    0x40664b
  4066bf:	and    BYTE PTR [edi],bh
  4066c1:	mov    al,ds:0xc5
	...
  4066d2:	addr16 add eax,0x85378d14
  4066d8:	sub    eax,0x5e9b3d57
  4066dd:	enter  0x5dde,0x57
  4066e1:	mov    al,ds:0x3e9062c
  4066e6:	arpl   WORD PTR [esi-0x3a97f054],cx
  4066ec:	mov    ch,0x6
  4066ee:	jecxz  0x4066cd
  4066f0:	(bad)  
  4066f1:	call   0xb229676b
  4066f6:	popa   
  4066f7:	add    eax,0x9552600
  4066fc:	call   0xffdb3249
  406701:	loop   0x406723
  406703:	adc    DWORD PTR [edi],ecx
  406705:	xor    DWORD PTR [ebp-0x17],0x1103e940
  40670c:	or     al,0x11
  40670e:	ret    0xffba
  406711:	idiv   al
  406713:	or     BYTE PTR [eax+0x3b],ch
  406716:	mov    ah,0x45
  406718:	add    dh,ah
  40671a:	pop    edx
  40671b:	or     eax,ebp
  40671d:	push   cs
  40671e:	call   FWORD PTR [edx+0x5dda60ff]
  406724:	dec    dh
  406726:	les    ebp,FWORD PTR ds:0x560e83e
  40672c:	lea    esp,[ecx+eiz*4-0x65]
  406730:	push   DWORD PTR [esi-0x725852a9]
	...
  406742:	add    BYTE PTR [eax],al
  406744:	add    ah,ah
  406746:	call   0x9eff:0x9ba16c8d
  40674d:	das    
  40674e:	call   0x81ff:0x9acd51b5
  406755:	shr    BYTE PTR [eax+0x0],0xe9
  406759:	out    dx,eax
  40675a:	jg     0x406718
  40675c:	jg     0x406752
  40675e:	cdq    
  40675f:	inc    eax
  406760:	out    0xe4,al
  406762:	inc    BYTE PTR [eax]
  406764:	jmp    0x2bd5efc9
  406769:	fstp   QWORD PTR [ecx-0xa9ea901]
  40676f:	(bad)  
  406770:	call   0x6ac471d5
  406775:	pop    edi
  406776:	add    eax,0x47970000
  40677b:	sub    al,0x50
  40677d:	xor    ch,BYTE PTR [esi]
  40677f:	sub    al,0x41
  406781:	cli    
  406782:	ins    DWORD PTR es:[edi],dx
  406783:	mov    esp,0xb05faad
  406788:	rcr    bh,0xc
  40678b:	jmp    0x46725c
  406790:	lea    ebp,[edi-0x39]
  406793:	(bad)  
  406794:	call   DWORD PTR [ebp+0x74]
  406797:	inc    edx
  406798:	sub    al,0xfa
  40679a:	in     eax,dx
  40679b:	test   eax,0xe8060b2c
  4067a0:	lahf   
  4067a1:	daa    
  4067a2:	add    DWORD PTR [eax],eax
  4067a4:	or     edi,DWORD PTR [edx-0x4]
  4067a7:	add    al,0xe9
	...
  4067b5:	add    BYTE PTR [eax],al
  4067b7:	add    ch,dl
  4067b9:	add    eax,0xfc950000
  4067be:	or     ebp,eax
  4067c0:	xchg   edi,eax
  4067c1:	pop    edi
  4067c2:	(bad)  
  4067c3:	inc    ecx
  4067c5:	lds    esi,FWORD PTR [ebp+0xf]
  4067c8:	xor    ah,BYTE PTR ds:0x7a8a4128
  4067ce:	jne    0x4067dc
  4067d0:	mov    ds:0xb5ffdf1b,al
  4067d5:	outs   dx,BYTE PTR ds:[esi]
  4067d6:	or     ch,BYTE PTR [edx-0x76]
  4067d9:	jp     0x406850
  4067db:	or     al,0xd2
  4067dd:	xchg   edi,ebx
  4067df:	call   ebp
  4067e1:	je     0x406778
  4067e3:	ret    0x7ad4
  4067e6:	dec    DWORD PTR [ebp+0x50519578]
  4067ec:	repnz push esi
  4067ee:	(bad)  
  4067f0:	aad    0xd4
  4067f2:	(bad)  
  4067f3:	jne    0x406827
  4067f5:	js     0x40686c
  4067f7:	adc    al,0xc5
  4067f9:	std    
  4067fa:	(bad)  
  4067fc:	xchg   ebp,eax
  4067fd:	std    
  4067fe:	pop    es
  4067ff:	call   0xffdda667
  406804:	and    al,0x47
  406806:	(bad)  
  406807:	fistp  DWORD PTR [eax+eax*2]
  40680a:	stos   BYTE PTR es:[edi],al
  40680b:	pusha  
  40680c:	out    0x6c,al
  40680e:	out    dx,eax
  40680f:	mov    dh,ah
  406811:	sbb    bl,BYTE PTR [ebp+0x202c04ff]
  406817:	adc    BYTE PTR [ebx+0x79],ah
  40681a:	add    ebx,ebp
	...
  406828:	add    BYTE PTR [eax],al
  40682a:	add    BYTE PTR [ecx-0x9],dl
  40682d:	pop    ss
  40682e:	adc    ah,ch
  406830:	cmp    DWORD PTR [edi-0x2],edx
  406833:	in     al,0x7
  406835:	stos   DWORD PTR es:[edi],eax
  406836:	inc    edx
  406837:	or     eax,0xa30b03af
  40683c:	adc    ah,al
  40683e:	addr16 (bad) 
  406841:	inc    esp
  406842:	add    ah,al
  406844:	adc    DWORD PTR [edi],ecx
  406846:	call   0xffde27c2
  40684b:	mov    ah,0x71
  40684d:	pop    eax
  40684e:	(bad)  
  40684f:	lods   al,BYTE PTR ds:[esi]
  406850:	scas   eax,DWORD PTR es:[edi]
  406851:	xor    al,0xe8
  406853:	daa    
  406854:	addr16 popf 
  406856:	push   DWORD PTR [ebx]
  406858:	sub    ebx,DWORD PTR [edi]
  40685a:	sbb    BYTE PTR [ebx-0x2e],ah
  40685d:	ud0    edx,DWORD PTR [esi]
  406860:	mov    edx,0xa60eff33
  406865:	pushf  
  406866:	push   ebp
  406867:	pop    ebx
  406868:	jae    0x40687a
  40686a:	(bad)  
  40686b:	out    dx,al
  40686c:	xchg   ecx,eax
  40686d:	xor    edi,edi
  40686f:	mul    BYTE PTR [ebp-0x7899ab55]
  406875:	popf   
  406876:	call   0xffddcc41
  40687b:	out    0x20,al
  40687d:	ret    0x4cfe
  406880:	sysenter 
  406882:	dec    DWORD PTR [esi]
  406884:	jmp    0xb951:0x53cff9d
  40688b:	pop    es
  40688c:	add    eax,0x86e9
	...
  40689d:	add    BYTE PTR [ebx],ah
  40689f:	or     BYTE PTR [ebx+edx*4+0x25],ch
  4068a3:	cwde   
  4068a4:	dec    esi
  4068a5:	popf   
  4068a6:	(bad)  
  4068a7:	pop    eax
  4068a8:	inc    edi
  4068a9:	popf   
  4068aa:	adc    al,0xad
  4068ac:	das    
  4068ad:	jo     0x406912
  4068af:	add    eax,0x96cb5736
  4068b4:	cs popf 
  4068b6:	or     edx,edx
  4068b8:	inc    ecx
  4068b9:	popf   
  4068ba:	hlt    
  4068bb:	int    0x2b
  4068bd:	clc    
  4068be:	in     al,dx
  4068bf:	xor    BYTE PTR [edx-0x50],ah
  4068c2:	jns    0x4068c9
  4068c4:	push   cs
  4068c5:	pop    ss
  4068c6:	ja     0x406860
  4068c8:	jl     0x4068bd
  4068ca:	aad    0x11
  4068cc:	in     eax,dx
  4068cd:	pushf  
  4068ce:	push   esi
  4068cf:	or     eax,0x97c6dd01
  4068d4:	out    dx,al
  4068d5:	retf   0xf4a1
  4068d8:	call   0xdee95113
  4068dd:	push   ss
  4068de:	pop    edi
  4068df:	lods   eax,DWORD PTR ds:[esi]
  4068e0:	xor    bh,BYTE PTR [ebp-0x3c1d685c]
  4068e6:	pop    ss
  4068e7:	test   ebp,0xd1357316
  4068ed:	xchg   ecx,eax
  4068ee:	lods   eax,DWORD PTR ds:[esi]
  4068ef:	xchg   edi,eax
  4068f0:	mov    dh,0x33
  4068f2:	test   BYTE PTR [ecx],dl
  4068f4:	rcr    DWORD PTR [esi+esi*8-0x1162c710],1
  4068fb:	or     al,0x91
  4068fd:	pop    ebp
  4068fe:	ins    BYTE PTR es:[edi],dx
  4068ff:	xchg   edi,eax
  406900:	xchg   esi,eax
  406901:	stos   DWORD PTR es:[edi],eax
	...
  40690e:	add    BYTE PTR [eax],al
  406910:	add    BYTE PTR [ecx-0x46],bh
  406913:	mov    ds,WORD PTR [edx+ebp*1-0x51fc223c]
  40691a:	mov    cl,BYTE PTR [ebp-0xe2964]
  406920:	jne    0x40698f
  406922:	cmc    
  406923:	(bad)  
  406924:	hlt    
  406925:	ins    BYTE PTR es:[edi],dx
  406926:	sub    ebx,DWORD PTR [edx]
  406928:	dec    bp
  40692a:	or     eax,0x96cfa0e8
  40692f:	call   DWORD PTR [esi+0x4d]
  406932:	icebp  
  406933:	(bad)  
  406934:	aam    0x10
  406936:	cwde   
  406937:	jne    0x40692e
  406939:	dec    edx
  40693a:	loop   0x40693a
  40693c:	mov    ah,0x58
  40693e:	lods   eax,DWORD PTR ds:[esi]
  40693f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406940:	ss out 0x96,eax
  406943:	push   DWORD PTR [esp+esi*8-0x28068a69]
  40694a:	adc    BYTE PTR [ebx+edx*4],cl
  40694d:	in     al,dx
  40694e:	xchg   edi,eax
  40694f:	jne    0x406932
  406951:	mov    eax,0xff0eff72
  406956:	int3   
  406957:	ret    0x60d9
  40695a:	xor    BYTE PTR [ebx-0xf3e1cf3],cl
  406960:	call   0x40eb:0x122b2e8e
  406967:	or     al,0xe6
  406969:	pop    DWORD PTR [edi+0x10c8e145]
  40696f:	or     BYTE PTR [esi+0x22],ah
  406972:	cdq    
  406973:	(bad)  
  406974:	and    al,0x0
	...
  406982:	add    BYTE PTR [eax],al
  406984:	repz add eax,0x8260e900
  40698a:	cmp    eax,0x457e0c
  40698f:	jmp    0x2cc3a2e8
  406994:	outs   dx,DWORD PTR ds:[esi]
  406995:	add    eax,0x40ea3f74
  40699a:	lock cmp DWORD PTR ds:0x36e96a04,edi
  4069a1:	add    eax,0x96570c83
  4069a6:	jae    0x4069a8
  4069a8:	inc    edi
  4069a9:	jnp    0x406a20
  4069ab:	adc    cl,dh
  4069ad:	(bad)  
  4069ae:	imul   eax,DWORD PTR [eax],0x458d0160
  4069b4:	mov    dl,0xd1
  4069b6:	(bad)  
  4069b7:	adc    eax,0x40a84f
  4069bc:	xor    edx,eax
  4069be:	je     0x4069ef
  4069c0:	mov    ecx,0x3600f3fc
  4069c5:	test   eax,0x870e458a
  4069ca:	dec    ebp
  4069cb:	lock popa 
  4069cd:	or     DWORD PTR [edi+0x17],esi
  4069d0:	mov    ecx,0x36758b6d
  4069d5:	xchg   BYTE PTR [ebp+0x8],bh
  4069d8:	jno    0x406a26
  4069da:	lock jecxz 0x4069d5
  4069dd:	outs   dx,BYTE PTR ds:[esi]
  4069de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069df:	mov    esi,DWORD PTR [edi+0x7a75fefd]
  4069e5:	mov    al,BYTE PTR [eax]
  4069e7:	inc    DWORD PTR [eax]
	...
  4069f5:	add    BYTE PTR [eax],al
  4069f7:	push   edi
  4069f8:	xchg   al,ch
  4069fa:	aaa    
  4069fb:	xor    DWORD PTR [ecx],eax
  4069fd:	add    BYTE PTR [ebx+0x5b5dda79],cl
  406a03:	cmp    DWORD PTR [edi-0x7988fff4],0xffffffec
  406a0a:	add    DWORD PTR [esi],0x6e
  406a0d:	push   ebx
  406a0e:	push   esi
  406a0f:	gs jmp 0x18b9961
  406a15:	call   0x425bb3
  406a1a:	mov    eax,edx
  406a1c:	ret    0xfc45
  406a1f:	jp     0x406a22
  406a21:	add    BYTE PTR [eax],al
  406a23:	add    ecx,0xb8523e74
  406a29:	cs inc ecx
  406a2b:	jp     0x4069fb
  406a2d:	out    0x45,eax
  406a2f:	arpl   WORD PTR [ebx+0x3],ax
  406a32:	add    BYTE PTR [eax+0x5e],ch
  406a35:	comiss xmm5,xmm0
  406a38:	push   cs
  406a39:	sub    ebx,DWORD PTR [edx+0x7c]
  406a3c:	fld    QWORD PTR [ebx]
  406a3e:	push   ebx
  406a3f:	cmp    edx,DWORD PTR [ebx+0x6e]
  406a42:	add    BYTE PTR [ebx-0x59],ah
  406a45:	ret    
  406a46:	je     0x406a9d
  406a48:	pop    ss
  406a49:	fwait
  406a4a:	lea    esp,[esi+0x66e83332]
  406a50:	xchg   DWORD PTR [ebx],eax
  406a52:	add    BYTE PTR [ebx-0x697c4dbd],dh
  406a58:	dec    edx
  406a59:	add    esi,DWORD PTR [eax+eax*1+0x0]
	...
  406a69:	add    BYTE PTR [ecx-0x7a],bl
  406a6c:	add    al,0x0
  406a6e:	arpl   WORD PTR [esi-0x1a67a1c6],bx
  406a74:	lds    edi,FWORD PTR [eax+0x39e63]
  406a7a:	mov    WORD PTR [esi+edi*1-0x37],ss
  406a7e:	and    BYTE PTR [edx-0x72],dl
  406a81:	in     al,dx
  406a82:	loopne 0x406a6e
  406a84:	xchg   edx,eax
  406a85:	adc    DWORD PTR [esi+0x6340e939],0xffffff9e
  406a8c:	movhlps xmm4,xmm0
  406a8f:	pop    ecx
  406a90:	push   esp
  406a91:	and    bl,BYTE PTR cs:[esi+0x1f6a7403]
  406a98:	xlat   BYTE PTR ds:[ebx]
  406a99:	mov    ah,0x7d
  406a9b:	fld    QWORD PTR [ebx]
  406a9d:	add    BYTE PTR [esi],ch
  406a9f:	mov    ds:0x9e63015b,eax
  406aa4:	add    ecx,ecx
  406aa6:	mov    al,ds:0xa5fa3f19
  406aab:	sahf   
  406aac:	add    eax,esi
  406aae:	and    ebx,DWORD PTR [ebp-0x5fdc39fd]
  406ab4:	add    eax,esi
  406ab6:	and    eax,DWORD PTR ds:0x45a503ea
  406abc:	in     eax,0x3
  406abe:	popf   
  406abf:	inc    ebp
  406ac0:	in     al,dx
  406ac1:	(bad)  
  406ac2:	out    dx,eax
  406ac3:	dec    ecx
  406ac4:	xchg   ebp,eax
  406ac5:	xor    al,0xc9
  406ac7:	add    eax,0x5b90413
  406acc:	adc    eax,DWORD PTR [eax+eax*1]
	...
  406adb:	add    BYTE PTR [eax],al
  406add:	mov    ecx,0xcb040305
  406ae2:	in     eax,0xea
  406ae4:	add    esp,DWORD PTR [ebx+0x1f]
  406ae7:	or     DWORD PTR [esi],ebp
  406ae9:	popa   
  406aea:	and    BYTE PTR [ebp+ebx*4+0x66fc9493],0x4d
  406af2:	inc    esi
  406af3:	jmp    0xeb5a8e04
  406af8:	retf   0xcc20
  406afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406afc:	xchg   ebx,eax
  406afd:	arpl   WORD PTR ds:0x49ee03e9,ax
  406b03:	cmp    DWORD PTR [esp+esi*8],esi
  406b06:	sbb    DWORD PTR ds:0xf494632e,ebx
  406b0c:	push   edx
  406b0d:	xor    eax,0xa30ce946
  406b12:	sbb    esi,esp
  406b14:	rcr    BYTE PTR [esi],0x95
  406b17:	jmp    0xfe45ce1f
  406b1c:	push   cs
  406b1d:	iret   
  406b1e:	xchg   ebx,eax
  406b1f:	fmul   QWORD PTR [esi-0x73]
  406b22:	inc    esi
  406b23:	jmp    0xb0d589b4
  406b28:	les    edx,FWORD PTR [esi]
  406b2a:	or     ch,0x84
  406b2d:	lahf   
  406b2e:	jl     0x406b94
  406b30:	ds jmp 0x406b67
  406b33:	inc    ecx
  406b34:	add    eax,DWORD PTR [esi+eax*2-0x17]
  406b38:	stos   DWORD PTR es:[edi],eax
  406b39:	and    ch,BYTE PTR [ebx+0x3398be]
  406b3f:	add    BYTE PTR [ecx+0x0],ch
	...
  406b4d:	add    BYTE PTR [eax],al
  406b4f:	add    BYTE PTR [ebx+ecx*1-0x7d],ch
  406b53:	sub    al,0xe7
  406b55:	clc    
  406b56:	jbe    0x406b6a
  406b58:	in     al,0x49
  406b5a:	lock cmp DWORD PTR [edi+0x60e9aaf2],esi
  406b61:	mov    al,al
  406b63:	adc    DWORD PTR [ecx-0x15d349fe],ebx
  406b69:	xor    eax,0x9385370f
  406b6e:	push   eax
  406b6f:	out    0x92,al
  406b71:	dec    eax
  406b72:	std    
  406b73:	sbb    DWORD PTR [edx+0x5b],ebp
  406b76:	inc    ebp
  406b77:	gs jo  0x406b7c
  406b7a:	mov    dh,0xa4
  406b7c:	(bad)  
  406b7d:	xor    eax,0x8f5d9f0f
  406b82:	push   eax
  406b83:	fidiv  WORD PTR [edx+0x5b99f948]
  406b89:	pop    ebx
  406b8a:	inc    ebp
  406b8b:	inc    ecx
  406b8c:	push   eax
  406b8d:	add    dh,BYTE PTR [edi+0xf35d2ac]
  406b93:	jbe    0x406bca
  406b95:	cdq    
  406b96:	push   eax
  406b97:	es pop ebp
  406b99:	xchg   ebp,eax
  406b9a:	push   0x45fbe7
  406b9f:	fs popf 
  406ba1:	adc    DWORD PTR [eax+0x1],0xe900600b
  406ba8:	out    0xc9,eax
  406baa:	xor    al,0x6c
  406bac:	test   DWORD PTR [ecx+0x5c3b0150],eax
  406bb2:	add    cl,ch
	...
  406bc0:	add    BYTE PTR [eax],al
  406bc2:	add    BYTE PTR [eax-0x80],dh
  406bc5:	inc    ebp
  406bc6:	jne    0x406c3f
  406bc8:	sbb    eax,0x51e0e01
  406bcd:	call   0xffd32f6a
  406bd2:	rcl    DWORD PTR [ebp*4-0x3f5aff01],0xc3
  406bda:	push   ebp
  406bdb:	adc    DWORD PTR [ebp-0x7f],ebx
  406bde:	les    esp,FWORD PTR [esi+0x7a]
  406be1:	(bad)  
  406be2:	call   FWORD PTR [ecx-0x1e]
  406be5:	imul   eax,DWORD PTR [eax],0x75ff0950
  406beb:	jb     0x406c4b
  406bed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bee:	aad    0xf5
  406bf0:	jns    0x406b7b
  406bf2:	inc    ebp
  406bf3:	out    0xe0,al
  406bf5:	add    BYTE PTR [eax],al
  406bf7:	cmc    
  406bf8:	cmp    bh,bh
  406bfa:	jne    0x406c4e
  406bfc:	pop    esi
  406bfd:	out    0xd4,eax
  406bff:	mov    ch,0x7a
  406c01:	push   0x64a9c
  406c06:	lea    edi,[edi-0x7a000117]
  406c0c:	(bad)  
  406c0e:	jnp    0x406c62
  406c10:	jp     0x406c11
  406c12:	(bad)  
  406c13:	jg     0x406bfe
  406c15:	(bad)  
  406c16:	jmp    DWORD PTR [ebp-0x5fffff3]
  406c1c:	jl     0x406ba3
  406c1e:	pusha  
  406c1f:	xor    eax,0xa250ff7a
  406c24:	pop    eax
  406c25:	test   eax,0x0
	...
  406c36:	cli    
  406c37:	sahf   
  406c38:	enter  0x282b,0x7c
  406c3c:	mov    ebp,0xff7a7574
  406c41:	jmp    0x406c1c
  406c43:	test   DWORD PTR [edi],edi
  406c45:	add    BYTE PTR [edi+0x5],cl
  406c48:	mov    edx,0x5ba01
  406c4d:	or     ebx,DWORD PTR [eax-0xb]
  406c50:	add    al,dh
  406c52:	mov    ebp,0x3b414705
  406c57:	jno    0x406bd9
  406c59:	add    BYTE PTR [edx+0x63e57205],bh
  406c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c60:	ret    
  406c61:	je     0x406cd0
  406c63:	inc    esp
  406c64:	js     0x406c66
  406c66:	arpl   WORD PTR [eax+ecx*4-0x69acfc7b],bx
  406c6d:	call   DWORD PTR [ebx]
  406c6f:	pop    ebx
  406c70:	adc    BYTE PTR [eax],cl
  406c72:	mov    ebx,DWORD PTR [edx]
  406c74:	scas   eax,DWORD PTR es:[edi]
  406c75:	jmp    FWORD PTR [esi+esi*2+0x7]
  406c79:	push   0x63
  406c7b:	test   BYTE PTR [ebx],0xff
  406c7e:	(bad)  
  406c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c80:	stos   DWORD PTR es:[edi],eax
  406c81:	test   eax,0xe896802f
  406c86:	push   ds
  406c87:	mov    dl,BYTE PTR [esi+0x100fb3ff]
  406c8d:	or     BYTE PTR [ebx+0x2],cl
  406c90:	mov    al,0xff
  406c92:	xor    al,0x7
  406c94:	add    al,0x4
  406c96:	arpl   WORD PTR [esi+0xe9ab],bx
	...
  406ca8:	add    BYTE PTR [eax+esi*1],cl
  406cab:	xchg   esi,eax
  406cac:	mov    esi,esp
  406cae:	pop    edx
  406caf:	xchg   esi,eax
  406cb0:	call   DWORD PTR [edi+eax*8]
  406cb3:	xchg   esi,eax
  406cb4:	add    esp,DWORD PTR [ebx-0x62]
  406cb7:	xchg   esi,eax
  406cb8:	mov    ch,0xa7
  406cba:	iret   
  406cbb:	xchg   ebp,eax
  406cbc:	dec    DWORD PTR [ebx-0xb000c64]
  406cc2:	mov    BYTE PTR [ebx],0x4
  406cc5:	arpl   WORD PTR [esi-0x6145ad55],bx
  406ccb:	add    edx,DWORD PTR [eax-0x24]
  406cce:	xor    DWORD PTR [edi],esi
  406cd0:	call   esp
  406cd2:	call   DWORD PTR [ebp+0x20f65b75]
  406cd8:	aam    0xc4
  406cda:	(bad)  
  406cde:	sahf   
  406cdf:	add    edi,edi
  406ce1:	out    dx,al
  406ce2:	adc    BYTE PTR [esi+0x5105acff],0x3
  406ce9:	push   ebx
  406cea:	add    eax,0x9632be9
  406cef:	jmp    0x801ef7f7
  406cf4:	add    al,0x63
  406cf6:	xor    eax,0x90274fc6
  406cfb:	mov    esi,0xe11a7c95
  406d00:	stos   DWORD PTR es:[edi],eax
  406d01:	cmp    bh,BYTE PTR [ecx-0x35846a52]
  406d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d08:	xchg   ebp,eax
  406d09:	fs xor eax,0xf9e
	...
  406d1b:	add    BYTE PTR [ebx-0x63],ch
  406d1e:	pushf  
  406d1f:	mov    cl,0x54
  406d21:	nop
  406d22:	xor    DWORD PTR [ebx],0x8786904d
  406d28:	fisubr WORD PTR [esi+edi*2]
  406d2b:	xchg   ebp,eax
  406d2c:	cmp    al,0x35
  406d2e:	add    DWORD PTR [ebx],eax
  406d30:	test   BYTE PTR [esi-0x17],al
  406d33:	stos   DWORD PTR es:[edi],eax
  406d34:	(bad)  
  406d35:	test   al,0x66
  406d37:	xchg   ebp,eax
  406d38:	fimul  DWORD PTR [ecx-0x6fe36b4b]
  406d3e:	push   0x57
  406d40:	scas   eax,DWORD PTR es:[edi]
  406d41:	nop
  406d42:	dec    esi
  406d43:	xchg   ebp,eax
  406d44:	arpl   WORD PTR [ecx],bx
  406d46:	lods   al,BYTE PTR ds:[esi]
  406d47:	add    dh,0x2c
  406d4a:	ds xchg ebp,eax
  406d4c:	cld    
  406d4d:	clc    
  406d4e:	mov    edx,0x9189e1d7
  406d53:	xchg   esp,eax
  406d54:	in     al,dx
  406d55:	(bad)  
  406d56:	in     eax,dx
  406d57:	xchg   esp,eax
  406d58:	scas   al,BYTE PTR es:[edi]
  406d59:	sub    al,0x1e
  406d5b:	xchg   ebp,eax
  406d5c:	fmul   QWORD PTR [edi+0x52cb0b9c]
  406d62:	cmp    dl,BYTE PTR [ebp+0x3c5483cc]
  406d68:	les    ecx,FWORD PTR [edi-0x6fb50002]
  406d6e:	add    dh,dh
  406d70:	gs std 
  406d72:	out    0x48,eax
  406d74:	repnz (bad) 
  406d76:	jmp    esi
  406d78:	adc    eax,0xf7deff2d
  406d7d:	(bad)  
  406d7e:	mov    ch,0x3d
	...
  406d8c:	add    BYTE PTR [eax],al
  406d8e:	add    dh,ch
  406d90:	(bad)  
  406d91:	dec    esi
  406d93:	pop    ebp
  406d94:	std    
  406d95:	out    0x8b,eax
  406d97:	ror    DWORD PTR [edi+0x1b64d2ff],cl
  406d9d:	add    BYTE PTR [ebx+0x5f],al
  406da0:	nop
  406da1:	jne    0x406d84
  406da3:	mov    eax,0xcfa6d359
  406da8:	(bad)  
  406da9:	mov    ch,0x35
  406dab:	test   BYTE PTR [esi-0x47f47e01],0xff
  406db2:	mov    ?,edi
  406db4:	pop    eax
  406db5:	pop    esp
  406db6:	xchg   bh,ch
  406db8:	mov    gs,eax
  406dba:	mov    DWORD PTR [esi],ecx
  406dbc:	(bad)  
  406dbd:	inc    edx
  406dbf:	sti    
  406dc0:	sbb    eax,0x5a1be4d
  406dc5:	call   0x46269b
  406dca:	jo     0x406d69
  406dcc:	loope  0x406dcc
  406dce:	push   esi
  406dcf:	out    dx,eax
  406dd0:	cmp    BYTE PTR [ebp-0x710803],0xe9
  406dd7:	push   esp
  406dd8:	out    dx,eax
  406dd9:	add    BYTE PTR ds:0x46,al
  406dde:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  406de0:	loope  0x406de0
  406de2:	xlat   BYTE PTR cs:[ebx]
  406de4:	popf   
  406de5:	or     eax,0xb056051
  406dea:	sub    DWORD PTR [ebx+edi*8-0x74],ebp
  406dee:	jl     0x406da0
  406df0:	(bad)  
  406df1:	dec    DWORD PTR [esi]
	...
  406dff:	add    BYTE PTR [eax],al
  406e01:	add    BYTE PTR [edx-0x6ff2f72],dl
  406e07:	std    
  406e08:	fidiv  DWORD PTR [ebp-0x32]
  406e0b:	xchg   DWORD PTR [ebp-0x8d52d0],eax
  406e11:	push   eax
  406e12:	bound  esi,QWORD PTR [edi-0xf45ff59]
  406e18:	and    ecx,DWORD PTR [ebp-0x146f9]
  406e1e:	lods   eax,DWORD PTR ds:[esi]
  406e1f:	fsin   
  406e21:	jne    0x406da5
  406e23:	push   0x45
  406e25:	rcr    DWORD PTR [ebp-0x418a008e],cl
  406e2b:	jb     0x406ea2
  406e2d:	or     BYTE PTR [edx-0x42002c80],ah
  406e33:	rcr    BYTE PTR [edx-0x37],cl
  406e36:	mov    eax,0xd154fffd
  406e3b:	gs add esp,0xffff69e2
  406e42:	scas   eax,DWORD PTR es:[edi]
  406e43:	cmp    al,0xfc
  406e45:	push   eax
  406e46:	fucomp st(3)
  406e48:	or     edi,edi
  406e4a:	test   esi,0x6a4a4128
  406e50:	mov    edx,0xb023aa8
  406e55:	shr    BYTE PTR ds:0xa00e77d,0x2
  406e5c:	mov    DWORD PTR [ebp-0x4e],0xfa000009
  406e63:	mov    edx,0xf445
	...
  406e74:	add    BYTE PTR [ebp+0x10fffffa],bl
  406e7a:	add    ch,BYTE PTR [edx+0x0]
  406e7d:	jg     0x406efb
  406e7f:	in     al,dx
  406e80:	idiv   DWORD PTR ds:0xfa6a5072
  406e86:	test   BYTE PTR [ebp-0xc],al
  406e89:	sbb    al,BYTE PTR [ebp-0x109c0b7b]
  406e8f:	xchg   edx,eax
  406e90:	push   DWORD PTR [ebx]
  406e92:	call   FWORD PTR [eax]
  406e94:	clc    
  406e95:	les    edx,FWORD PTR [eax]
  406e97:	(bad)
  406e9b:	add    al,0x0
  406e9d:	push   0xba0517dc
  406ea2:	dec    eax
  406ea3:	add    al,0x0
  406ea5:	arpl   WORD PTR [ebx],bx
  406ea7:	push   eax
  406ea8:	in     al,dx
  406ea9:	xchg   esp,eax
  406eaa:	scas   al,BYTE PTR es:[edi]
  406eab:	xchg   edx,eax
  406eac:	add    DWORD PTR [edi],ecx
  406eae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eaf:	xchg   BYTE PTR [ebp-0x6d4981],bh
  406eb5:	pop    esp
  406eb6:	ror    BYTE PTR [eax],1
  406eb8:	jmp    DWORD PTR [esi]
  406eba:	les    ebx,FWORD PTR [esi-0x2c53f44a]
  406ec0:	inc    eax
  406ec1:	arpl   WORD PTR [ecx],si
  406ec3:	mov    ah,dh
  406ec5:	ins    BYTE PTR es:[edi],dx
  406ec6:	xchg   dx,ax
  406ec8:	push   eax
  406ec9:	dec    ebx
  406eca:	sbb    ebx,DWORD PTR [ebx+0x0]
  406ecd:	arpl   WORD PTR [edi+0x29d274c3],sp
  406ed3:	mov    al,ch
  406ed5:	dec    esp
  406ed6:	test   BYTE PTR [edx+0x50],dl
	...
  406ee8:	out    dx,al
  406ee9:	and    DWORD PTR [edi+0x331434f7],edx
  406eef:	push   DWORD PTR [esi-0x67ca6d56]
  406ef5:	cmc    
  406ef6:	inc    esp
  406ef7:	add    BYTE PTR [ebx],cl
  406ef9:	aaa    
  406efa:	stos   DWORD PTR es:[edi],eax
  406efb:	call   DWORD PTR [eax+ebp*4]
  406efe:	ret    
  406eff:	je     0x406eb3
  406f01:	and    eax,0x440cf088
  406f06:	xchg   edx,eax
  406f07:	push   0xbea29e62
  406f0c:	hlt    
  406f0d:	dec    ecx
  406f0e:	sti    
  406f0f:	out    0xa1,eax
  406f11:	lock xchg ecx,eax
  406f13:	jmp    eax
  406f15:	add    eax,0x8cd49f64
  406f1a:	push   ds
  406f1b:	add    al,0x4e
  406f1d:	stc    
  406f1e:	add    BYTE PTR [ebx],0xcc
  406f21:	adc    ah,cl
  406f23:	fwait
  406f24:	je     0x406edd
  406f26:	push   es
  406f27:	xchg   edx,eax
  406f28:	enter  0x92ff,0x4
  406f2c:	mov    ah,0x12
  406f2e:	loope  0x406ecb
  406f30:	xor    BYTE PTR [edi+0x52a491ee],0xd1
  406f37:	cdq    
  406f38:	pushf  
  406f39:	mov    esi,ds
  406f3b:	push   edi
  406f3c:	xchg   ebx,eax
  406f3d:	xchg   esp,eax
  406f3e:	(bad)  
  406f3f:	xchg   ecx,eax
  406f40:	mov    WORD PTR [edx],ss
  406f42:	loope  0x406edf
  406f44:	push   ds
  406f45:	mov    bh,0xc6
  406f47:	xchg   ecx,eax
  406f48:	jl     0x406f9c
  406f4a:	mov    ecx,0x99
	...
  406f5b:	je     0x406ee9
  406f5d:	ror    DWORD PTR ds:0x91ae8c96,0x1e
  406f64:	lea    edx,[eax-0x6173a224]
  406f6a:	xchg   ecx,eax
  406f6b:	into   
  406f6c:	mov    DWORD PTR [ecx-0x16fafb39],eax
  406f72:	mov    edx,0x36e8fd21
  406f77:	call   0x4008d814
  406f7c:	xchg   esp,eax
  406f7d:	jbe    0x406f10
  406f7f:	fiadd  WORD PTR [ecx+0x6d]
  406f82:	xor    al,0x24
  406f84:	adc    dh,ch
  406f86:	nop
  406f87:	push   esi
  406f88:	inc    eax
  406f89:	adc    BYTE PTR [ebx+0x63],al
  406f8c:	popf   
  406f8d:	test   DWORD PTR [ecx+0x63],ebp
  406f90:	add    eax,0x8254c3e2
  406f95:	call   0xfb47:0x26056302
  406f9c:	add    al,0x0
  406f9e:	jmp    0xa5077503
  406fa3:	int3   
  406fa4:	mov    eax,DWORD PTR [edi]
  406fa6:	jmp    0x93408f0b
  406fab:	pusha  
  406fac:	pop    ds
  406fad:	add    BYTE PTR [ebx+0x15457a60],al
  406fb3:	(bad)  
  406fb4:	jp     0x406f3b
  406fb6:	std    
  406fb7:	fisttp DWORD PTR [ebx+0x11d399ff]
  406fbd:	clc    
  406fbe:	test   BYTE PTR [eax],0x0
	...
  406fcd:	add    BYTE PTR [ebp-0x77],dl
  406fd0:	call   0x45ab44
  406fd5:	repnz mov al,ds:0x9ad00510
  406fdb:	add    al,0x0
  406fdd:	jmp    0x2868b94a
  406fe2:	pop    edi
  406fe3:	mov    WORD PTR [ebp-0xb],?
  406fe6:	fsub   DWORD PTR [ebp-0x28]
  406fe9:	mov    esi,0x998b34d3
  406fee:	in     eax,dx
  406fef:	xor    esp,0x508bd3b6
  406ff5:	cmp    edi,edi
  406ff7:	je     0x406fd1
  406ff9:	sahf   
  406ffa:	repz jl 0x406f82
  406ffd:	cdq    
  406ffe:	jmp    0x406f8a
  407000:	inc    DWORD PTR [ecx-0x79004e05]
  407006:	pop    esi
  407007:	add    eax,0x46438068
  40700c:	add    BYTE PTR [esi-0x6b],dh
  40700f:	xchg   ebp,eax
  407010:	imul   DWORD PTR [esi-0x2d]
  407013:	mov    dh,BYTE PTR ds:0x4639b2
  407019:	push   ecx
  40701a:	retf   
  40701b:	mov    dl,0xff
  40701d:	push   esi
  40701e:	mov    DWORD PTR [eax-0x750ca91c],eax
  407024:	push   0x0
  407026:	or     ch,bh
  407028:	add    DWORD PTR [eax],esi
  40702a:	retf   
  40702b:	push   es
  40702c:	push   DWORD PTR [ebp-0x92d6]
	...
  40703e:	add    BYTE PTR [eax],al
  407040:	add    BYTE PTR ds:0xb294ab3,dh
  407046:	pop    es
  407047:	call   0xffb5fe15
  40704c:	mov    DWORD PTR [edi],edi
  40704e:	push   0xfffffff7
  407050:	call   DWORD PTR [ebp-0x18]
  407053:	jmp    DWORD PTR [edi-0x4f]
  407056:	mov    dh,0x40
  407058:	add    BYTE PTR [ebp-0x4a080fd0],dh
  40705e:	jp     0x40705f
  407060:	xor    eax,0x40b001
  407065:	mov    dl,0x2e
  407067:	xlat   BYTE PTR ds:[ebx]
  407068:	push   DWORD PTR [ebp-0x52177af8]
  40706e:	jp     0x40706f
  407070:	adc    edi,0x5d
  407073:	idiv   edi
  407075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407076:	add    DWORD PTR [ecx+ecx*2+0x9],esi
  40707a:	xor    al,0xec
  40707c:	div    DWORD PTR [ebp+0x3a74007a]
  407082:	xchg   BYTE PTR [ebp-0x860218],bh
  407088:	add    BYTE PTR [esi-0x4e],ch
  40708b:	add    BYTE PTR [bp+si],bh
  40708e:	imul   edi,DWORD PTR [esi-0x18769001],0xffffffee
  407095:	fidivr DWORD PTR [ecx-0x1]
  407098:	jmp    FWORD PTR [edi+0x65]
  40709b:	idiv   edi
  40709d:	mov    ch,0x7a
  40709f:	jne    0x4070a9
  4070a1:	loop   0x4070e9
  4070a3:	sar    edi,1
	...
  4070b1:	add    BYTE PTR [eax],al
  4070b3:	add    BYTE PTR [ebp-0x52174a86],al
  4070b9:	jp     0x4070ba
  4070bb:	jmp    DWORD PTR [ebx-0x57]
  4070be:	sti    
  4070bf:	out    0x4f,eax
  4070c1:	int    0x8e
  4070c3:	(bad)  
  4070c4:	cld    
  4070c5:	or     BYTE PTR [eax-0x71350b09],ch
  4070cb:	jne    0x407128
  4070cd:	inc    esp
  4070ce:	out    0xd0,al
  4070d0:	in     al,0xda
  4070d2:	mov    ?,WORD PTR [ebp-0x711539]
  4070d8:	retf   
  4070d9:	stos   DWORD PTR es:[edi],eax
  4070da:	mov    bh,0xff
  4070dc:	int3   
  4070dd:	repnz pop eax
  4070df:	in     al,dx
  4070e0:	int3   
  4070e1:	cli    
  4070e2:	mov    gs,eax
  4070e4:	xchg   al,ch
  4070e6:	mov    ?,edi
  4070e8:	mov    ah,0xd0
  4070ea:	fwait
  4070eb:	imul   DWORD PTR [edx+edx*4-0x6570e565]
  4070f2:	mov    ?,edi
  4070f4:	(bad)  
  4070f5:	stos   DWORD PTR es:[edi],eax
  4070f6:	xchg   esi,eax
  4070f7:	call   DWORD PTR [edx+ebp*4+0x787b0818]
  4070fe:	(bad)  
  4070ff:	inc    DWORD PTR [edx+edi*4-0x3d8b0fa8]
  407106:	mov    gs,eax
  407108:	bound  esi,QWORD PTR [eax-0x72]
  40710b:	jmp    FWORD PTR [eax+ebx*8-0x75]
  40710f:	jmp    0xffcecabb
  407114:	pop    esp
  407115:	jmp    0x0:0xe88f
	...
  407124:	add    BYTE PTR [eax],al
  407126:	add    BYTE PTR [eax+0x1a000340],ch
  40712c:	pop    ebp
  40712d:	sti    
  40712e:	jmp    FWORD PTR [edi+0x27839f23]
  407134:	sbb    DWORD PTR [ecx],0x0
  407137:	leave  
  407138:	popf   
  407139:	mov    ?,WORD PTR [ebp+0x5b]
  40713c:	xchg   dl,dh
  40713e:	shl    BYTE PTR [eax+ebx*1],1
  407141:	jl     0x407188
  407143:	pop    ds
  407144:	push   es
  407145:	rcr    DWORD PTR [esp+eax*2],1
  407148:	inc    esi
  407149:	jmp    0x413e07dc
  40714e:	daa    
  40714f:	add    eax,0xeb1b4e89
  407154:	fsub   DWORD PTR [edi-0xeed0bfd]
  40715a:	fwait
  40715b:	xchg   esp,eax
  40715c:	xchg   DWORD PTR [esi],esi
  40715e:	mov    ?,WORD PTR [ebx+0x5d]
  407161:	inc    BYTE PTR [ebx+eiz*2-0x78]
  407165:	pushf  
  407166:	sti    
  407167:	mov    esp,0xcc8e1bc9
  40716c:	sbb    eax,0x523de39
  407171:	push   cs
  407172:	sbb    BYTE PTR [ebx-0x63],ch
  407175:	(bad)  
  407176:	nop
  407177:	mov    ah,0x88
  407179:	(bad)  
  40717a:	pop    ss
  40717b:	scas   eax,DWORD PTR es:[edi]
  40717c:	mov    BYTE PTR [ebx+edi*8-0x44],bh
  407180:	lock pop ss
  407182:	mov    ds,WORD PTR [esi+edi*4+0x326308ab]
  407189:	jb     0x40712b
	...
  407197:	add    BYTE PTR [eax],al
  407199:	add    bl,bh
  40719b:	add    al,0xe9
  40719d:	pushf  
  40719e:	lds    ecx,FWORD PTR [eax+0x127c0054]
  4071a4:	icebp  
  4071a5:	fwait
  4071a6:	pop    es
  4071a7:	xchg   edx,eax
  4071a8:	mov    esi,0xe1c39a8d
  4071ad:	add    ecx,DWORD PTR [esi]
  4071af:	jl     0x40716e
  4071b1:	sbb    esi,0xe0fce8f9
  4071b7:	loop   0x4071a0
  4071b9:	add    esp,DWORD PTR [ebx-0x78]
  4071bc:	sbb    al,0x0
  4071be:	cmp    ebp,DWORD PTR [ebx]
  4071c0:	scas   eax,DWORD PTR es:[edi]
  4071c1:	lea    edi,[esp+edi*8]
  4071c4:	test   al,0x17
  4071c6:	push   ebx
  4071c7:	sbb    eax,0x5a3dc3d
  4071cc:	add    BYTE PTR [esi+0x4c],dh
  4071cf:	stc    
  4071d0:	out    0x22,eax
  4071d2:	(bad)  
  4071d3:	xchg   edi,edi
  4071d5:	jo     0x407173
  4071d7:	stc    
  4071d8:	imul   ebp,ecx,0xa82fd268
  4071de:	pusha  
  4071df:	sbb    eax,0x5a01940
  4071e4:	(bad)  
  4071e5:	cld    
  4071e6:	cmp    ebx,esi
  4071e8:	inc    eax
  4071e9:	jmp    0x3716a0b6
  4071ee:	(bad)  
  4071ef:	sti    
  4071f0:	mov    edi,0x5037ceb5
  4071f5:	es ins BYTE PTR es:[edi],dx
  4071f7:	stc    
  4071f8:	out    0x2e,eax
  4071fa:	adc    eax,0xb9ff88
	...
  40720b:	add    BYTE PTR [eax],al
  40720d:	nop
  40720e:	mov    BYTE PTR [ebp-0x1f],dh
  407211:	fdiv   DWORD PTR [ebp-0x1]
  407214:	push   es
  407215:	out    0x9c,al
  407217:	and    DWORD PTR [edx],ebx
  407219:	fiadd  WORD PTR [edi-0x780c2a18]
  40721f:	inc    DWORD PTR [ebx+0x19351d60]
  407225:	and    BYTE PTR ds:0x44b72968,al
  40722b:	add    BYTE PTR [ecx+0x61],al
  40722e:	add    eax,0xe6d86900
  407233:	aad    0xc6
  407235:	out    0xfb,eax
  407237:	mov    edi,0x50377d35
  40723c:	mov    dh,0x4d
  40723e:	stc    
  40723f:	out    0x56,eax
  407241:	push   ss
  407242:	xchg   edi,edi
  407244:	cmp    DWORD PTR [edi-0x170e8a7a],ecx
  40724a:	sub    al,0xff
  40724c:	xchg   esi,eax
  40724d:	xlat   BYTE PTR ds:[ebx]
  40724e:	popf   
  40724f:	jmp    0xe8c7620f
  407254:	add    dh,ah
  407256:	push   esp
  407257:	(bad)  
  407258:	call   DWORD PTR [eax+0x1]
  40725b:	push   0x43ea35
  407260:	push   0x40b169
  407265:	jge    0x407216
  407267:	dec    edx
  407268:	sub    DWORD PTR [ebx+0x47e5e802],edi
  40726e:	jns    0x40726f
  407270:	or     eax,DWORD PTR [eax]
	...
  40727e:	add    BYTE PTR [eax],al
  407280:	dec    edx
  407281:	out    dx,al
  407282:	sbb    eax,0x7579da50
  407287:	or     al,0x92
  407289:	fcom   st(5)
  40728b:	jmp    FWORD PTR ds:0x17ff4fd2
  407291:	mov    esp,edi
  407293:	and    BYTE PTR [ebp+0x79],bh
  407296:	(bad)  
  407297:	call   0x3fc6c6
  40729c:	bound  ebp,QWORD PTR ds:0xec6dffd2
  4072a2:	jmp    DWORD PTR [edi-0x9]
  4072a5:	mov    dl,0x40
  4072a7:	add    dl,dl
  4072a9:	in     eax,0x2f
  4072ab:	inc    ecx
  4072ac:	mov    edx,0x8a0001ea
  4072b1:	sub    al,0xad
  4072b4:	xlat   BYTE PTR ds:[ebx]
  4072b5:	jp     0x4072b6
  4072b7:	or     edi,DWORD PTR [edx+0x4a501df5]
  4072bd:	jp     0x407334
  4072bf:	or     al,0xa2
  4072c1:	mov    ds:0xd19dffd5,eax
  4072c6:	dec    edi
  4072c7:	push   DWORD PTR [edi]
  4072c9:	mov    edi,esp
  4072cb:	call   0xe93fed7c
  4072d0:	xchg   edx,eax
  4072d1:	dec    edi
  4072d2:	(bad)  
  4072d3:	push   edx
  4072d5:	in     eax,dx
  4072d6:	sar    edi,1
  4072d8:	in     eax,dx
  4072d9:	call   0xdda3a2f2
  4072de:	add    edi,edi
  4072e0:	mov    dh,0xa8
  4072e2:	fwait
  4072e3:	add    eax,0x0
	...
  4072f0:	add    BYTE PTR [eax],al
  4072f2:	add    BYTE PTR ds:0x93508b7f,cl
  4072f8:	pop    es
  4072f9:	adc    DWORD PTR [eax],ecx
  4072fb:	cmp    edx,DWORD PTR [edi-0x76]
  4072fe:	call   FWORD PTR [esp+eax*4]
  407301:	xor    edx,edx
  407303:	adc    al,0x1f
  407305:	mov    esi,DWORD PTR [ebp+0x5f]
  407308:	xor    al,0x3b
  40730a:	rol    BYTE PTR [edi+ebp*1],cl
  40730d:	mov    ebp,0x309c6bc2
  407312:	mov    eax,DWORD PTR [edi]
  407314:	sbb    eax,eax
  407316:	hlt    
  407317:	jns    0x4072b5
  407319:	sbb    eax,0xfb48e402
  40731e:	out    0x52,eax
  407320:	out    0x8a,eax
  407322:	(bad)  
  407323:	jmp    0x39d:0x66688758
  40732a:	add    BYTE PTR [ebx-0x43004aa6],bh
  407330:	and    al,0x41
  407332:	clc    
  407333:	dec    ebx
  407334:	cwde   
  407335:	add    al,0x0
  407337:	arpl   WORD PTR [edi-0x1c4407f0],ax
  40733d:	data16 add BYTE PTR [ebx-0x5d],ah
  407341:	ret    
  407342:	je     0x4073b3
  407344:	loope  0x407345
  407346:	add    BYTE PTR [ebx-0x64],ah
  407349:	adc    cl,BYTE PTR ds:0xff8c2884
  40734f:	mul    BYTE PTR [ebx-0x418a7765]
  407355:	mov    ch,bl
	...
  407363:	add    BYTE PTR [eax],al
  407365:	add    BYTE PTR [ebx+0x47],bl
  407368:	adc    al,bh
  40736a:	jnp    0x4073bb
  40736c:	mov    ah,0xff
  40736e:	pop    esp
  40736f:	leave  
  407370:	(bad)  
  407372:	lahf   
  407373:	add    eax,0xd64c8abf
  407378:	popf   
  407379:	adc    BYTE PTR [ebx+0x6d],bl
  40737c:	pop    es
  40737d:	mov    bh,BYTE PTR [eax*4+0x3a3cee03]
  407384:	lahf   
  407385:	mov    ch,BYTE PTR [ecx+edx*1]
  407388:	test   eax,0xc7ed4f0f
  40738d:	shl    DWORD PTR [ebx+0x2a9c1905],cl
  407393:	pop    ebx
  407394:	data16 mov dh,BYTE PTR [ebx-0x3042b7c]
  40739b:	aam    0x56
  40739d:	mov    bh,ah
  40739f:	out    dx,eax
  4073a0:	or     DWORD PTR [esi+ecx*2+0x588a465b],ebx
  4073a7:	inc    ebp
  4073a8:	mov    ch,0xef
  4073aa:	jl     0x4073d2
  4073ac:	stc    
  4073ad:	inc    esp
  4073ae:	arpl   bp,dx
  4073b0:	inc    eax
  4073b1:	pop    ebp
  4073b2:	scas   al,BYTE PTR es:[edi]
  4073b3:	test   BYTE PTR [esi],ah
  4073b5:	xor    ecx,esp
  4073b7:	cli    
  4073b8:	lock fwait
  4073ba:	xchg   ebx,eax
  4073bb:	adc    DWORD PTR [esi],0xffffff8a
  4073be:	dec    ecx
  4073bf:	and    DWORD PTR [ecx],eax
  4073c1:	xchg   ecx,eax
  4073c2:	mov    es,WORD PTR [esi+eax*1-0x2b061302]
  4073c9:	sbb    eax,DWORD PTR [eax]
	...
  4073d7:	add    BYTE PTR [eax],al
  4073d9:	xor    BYTE PTR ds:0x6d3303a8,0x62
  4073e0:	mov    al,0x94
  4073e2:	test   BYTE PTR [ecx],bh
  4073e4:	mov    DWORD PTR [esi],edx
  4073e6:	or     eax,0x8486f3d1
  4073eb:	(bad)  
  4073ec:	push   ds
  4073ed:	arpl   bp,bp
  4073ef:	add    dl,ah
  4073f1:	and    eax,DWORD PTR ds:0xc6334451
  4073f7:	call   0x10a284
  4073fc:	jmp    DWORD PTR [eax+0x1359e805]
  407402:	test   bh,bh
  407404:	cmp    edx,ebx
  407406:	stc    
  407407:	pop    es
  407408:	xchg   ecx,eax
  407409:	lock cmp edi,0x68055d96
  407410:	aam    0x10
  407412:	vmovsd xmm4,QWORD PTR [edi-0x2416becb]
  40741a:	cmp    DWORD PTR [ebx-0x40],ecx
  40741d:	mov    eax,ds:0xc4f9e805
  407422:	cmp    edi,0xfffffff2
  407425:	and    cl,bh
  407427:	adc    eax,0xff794470
  40742c:	fsub   st(4),st
  40742e:	xor    DWORD PTR [ebp-0x1f],0xffffffd8
  407432:	mov    ch,0xfd
  407434:	inc    esi
  407435:	fiadd  DWORD PTR [ebx+0x42c73575]
  40743b:	shl    DWORD PTR [esi],1
	...
  407449:	add    BYTE PTR [eax],al
  40744b:	add    dl,ch
  40744d:	out    dx,al
  40744e:	inc    eax
  407450:	mov    dh,0x33
  407452:	inc    ecx
  407453:	jmp    0xa8705cc0
  407458:	pusha  
  407459:	test   BYTE PTR ds:0xffc499a2,dh
  40745f:	add    BYTE PTR [edx+0x7706ff57],ch
  407465:	test   BYTE PTR [ebp-0xf],dh
  407468:	enter  0xfda4,0xf6
  40746c:	jmp    0x40745c
  40746e:	inc    DWORD PTR [eax-0x16becc5b]
  407474:	push   0x5f282fe8
  407479:	test   BYTE PTR ds:0xffc49822,dh
  40747f:	ror    BYTE PTR [ebx-0x5aff00a9],0x80
  407486:	mov    edi,0x44fe8c74
  40748b:	hlt    
  40748c:	adc    eax,0x8ffff414
  407491:	and    edi,0xff8e0760
  407497:	jmp    FWORD PTR [edi-0x6b]
  40749a:	call   0xffce6f8c
  40749f:	push   0x4a
  4074a1:	pop    ds
  4074a2:	sub    dh,BYTE PTR [eax]
  4074a4:	jnp    0x4074af
  4074a6:	push   0xffc7ea40
  4074ab:	or     BYTE PTR [bx],al
  4074ae:	add    BYTE PTR [eax+0x0],al
	...
  4074bc:	add    BYTE PTR [eax],al
  4074be:	add    dl,ah
  4074c0:	popf   
  4074c1:	sar    edi,cl
  4074c3:	test   DWORD PTR [esi],esi
  4074c5:	push   DWORD PTR [ebp+0x12]
  4074c8:	lahf   
  4074c9:	push   eax
  4074ca:	std    
  4074cb:	xchg   ebp,eax
  4074cc:	lea    ebp,[edx+0x0]
  4074cf:	and    dl,BYTE PTR [edi+ebp*1+0x41]
  4074d3:	cli    
  4074d4:	push   ds
  4074d5:	inc    eax
  4074d6:	xor    BYTE PTR [ebx-0x35fd97fa],bh
  4074dc:	push   es
  4074dd:	sub    al,0x7a
  4074e0:	mov    ecx,0x46d1ffff
  4074e5:	je     0x4074fd
  4074e7:	push   ebx
  4074e8:	inc    ebx
  4074e9:	hlt    
  4074ea:	(bad)  
  4074eb:	fist   WORD PTR [edx-0x613d8a01]
  4074f1:	adc    ebp,edi
  4074f3:	gs (bad) 
  4074f5:	push   DWORD PTR [ebp-0x52]
  4074f8:	lahf   
  4074f9:	sahf   
  4074fa:	rcl    BYTE PTR [ebp-0x1dff9576],1
  407500:	pusha  
  407501:	das    
  407502:	inc    ecx
  407503:	jp     0x407523
  407505:	arpl   WORD PTR [eax],si
  407507:	cmp    ecx,DWORD PTR [ecx]
  407509:	push   0x36c6302
  40750e:	or     BYTE PTR [ebx+0x6cffb38c],0x1c
  407515:	xchg   DWORD PTR [ebp+0x5b],esi
  407518:	push   esp
  407519:	add    eax,0x1abb5cfd
  40751e:	add    bl,cl
  407520:	jns    0x4074f5
  407522:	inc    eax
	...
  40752f:	add    BYTE PTR [eax],al
  407531:	add    BYTE PTR [ebx+0x14],ah
  407534:	and    esi,DWORD PTR [eax]
  407536:	mov    ds:0x63021b6c,al
  40753b:	ins    BYTE PTR es:[edi],dx
  40753c:	sub    eax,0xffffffe2
  40753f:	mov    esi,0xac58ff87
  407544:	adc    BYTE PTR [esi],dl
  407546:	fisubr DWORD PTR [eax]
  407548:	nop
  407549:	call   DWORD PTR [esi+0x6b758700]
  40754f:	test   dl,al
  407551:	cld    
  407552:	or     al,0xeb
  407554:	xchg   BYTE PTR [ebp+0xf],dh
  407557:	aam    0x36
  407559:	sar    ah,1
  40755b:	fiadd  DWORD PTR [esi+0x10d2f775]
  407561:	or     bl,bh
  407563:	sub    eax,0x34e4ffb9
  407568:	ret    0x6304
  40756b:	mov    eax,ds:0x6c4bec7a
  407570:	add    ebp,edi
  407572:	or     eax,0xc40c112b
  407577:	cwde   
  407578:	sti    
  407579:	out    0x54,eax
  40757b:	push   ds
  40757c:	xchg   edi,edi
  40757e:	stos   BYTE PTR es:[edi],al
  40757f:	sub    eax,0xf717fffc
  407584:	xchg   edi,eax
  407585:	sbb    DWORD PTR [edi-0x630079c9],0x95b88132
  40758f:	jb     0x407517
  407591:	add    BYTE PTR [ebx+0x5],ah
  407594:	jmp    0x40759c
	...
  4075a5:	fadd   st,st(7)
  4075a7:	in     al,dx
  4075a8:	cli    
  4075a9:	mov    esp,0x3b83ebf8
  4075ae:	add    eax,0xdb7a0154
  4075b3:	out    0x3,eax
  4075b5:	arpl   WORD PTR [edx+0x7044f834],ax
  4075bb:	xchg   ebx,eax
  4075bc:	xchg   BYTE PTR [ebp+ecx*1-0x57],dl
  4075c0:	adc    BYTE PTR [ebp+ebp*8+0x53],bl
  4075c4:	xlat   BYTE PTR ds:[ebx]
  4075c5:	mov    ds:0x6f109e05,eax
  4075ca:	ins    DWORD PTR es:[edi],dx
  4075cb:	bound  esi,QWORD PTR [edx-0x77d7ecc]
  4075d1:	les    esi,FWORD PTR [ebx-0x7f9cbb2b]
  4075d7:	hlt    
  4075d8:	test   DWORD PTR [edx+eax*1],0x8f14869a
  4075df:	fs dec ebx
  4075e1:	or     eax,0x451b6681
  4075e6:	push   es
  4075e7:	jmp    0x2bcb63ef
  4075ec:	test   esp,esi
  4075ee:	cmp    BYTE PTR [ecx+0x4650f79b],0x86
  4075f5:	(bad)  
  4075f6:	mov    ch,BYTE PTR [ebx]
  4075f8:	test   esp,ebx
  4075fa:	sbb    BYTE PTR [ecx+0x2fbe0e86],0x86
  407601:	int3   
  407602:	ins    DWORD PTR es:[edi],dx
  407603:	fldenv [ebx+eiz*2+0x5]
  407607:	jo     0x407589
	...
  407615:	add    BYTE PTR [eax],al
  407617:	add    bh,bh
  407619:	jg     0x407631
  40761b:	xchg   BYTE PTR [ebx],ah
  40761d:	adc    BYTE PTR [ebp-0x76],ah
  407620:	arpl   WORD PTR ds:0x43ce78e9,ax
  407626:	inc    DWORD PTR [ebp-0x14ff8764]
  40762c:	nop
  40762d:	cmp    bh,0xe9
  407630:	pop    esp
  407631:	jmp    0x9167:0xd0ab2b8c
  407638:	fwait
  407639:	(bad)  
  40763c:	ins    BYTE PTR es:[edi],dx
  40763d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40763e:	add    cl,ch
  407640:	imul   eax,eax,0x75
  407643:	in     al,dx
  407644:	leave  
  407645:	mov    dh,0x0
  407647:	jmp    0xabd608ac
  40764c:	fnstsw WORD PTR [edi-0x1]
  40764f:	pop    esp
  407650:	mov    eax,ds:0xa9115031
  407655:	xor    DWORD PTR [ecx-0x17],eax
  407658:	fdiv   DWORD PTR [eax+eiz*4-0x17]
  40765c:	pusha  
  40765d:	or     al,0xc0
  40765f:	adc    al,0x2c
  407661:	ins    DWORD PTR es:[edi],dx
  407662:	xchg   esp,eax
  407663:	jmp    0x3da87bc8
  407668:	aas    
  407669:	(bad)  
  40766c:	fs adc eax,ebp
  40766f:	jbe    0x407642
  407671:	jg     0x407672
  407673:	je     0x4076e9
  407675:	inc    ebx
  407676:	(bad)  
  407677:	pop    esi
  407678:	out    0x91,al
  40767a:	push   edx
  40767b:	add    eax,0x0
	...
  407688:	add    BYTE PTR [eax],al
  40768a:	add    BYTE PTR [ecx],dh
  40768c:	aad    0xe7
  40768e:	adc    dh,BYTE PTR [edx-0x20660081]
  407694:	stc    
  407695:	setns  bh
  407698:	stc    
  407699:	pop    es
  40769a:	inc    ecx
  40769b:	sar    DWORD PTR [esi-0x1],1
  40769e:	cs out dx,eax
  4076a0:	ss iret 
  4076a2:	fisubr WORD PTR es:[ebx+0x63]
  4076a6:	ins    BYTE PTR es:[edi],dx
  4076a7:	and    DWORD PTR [ecx],esi
  4076a9:	mov    DWORD PTR [ebx+edx*1+0x7f],ebp
  4076ad:	dec    DWORD PTR [esi]
  4076af:	dec    edi
  4076b0:	mov    al,0x30
  4076b2:	add    bl,bh
  4076b4:	add    edi,edi
  4076b6:	mov    ch,0x56
  4076b8:	xchg   edi,edi
  4076ba:	jmp    DWORD PTR [edx-0x2e]
  4076bd:	mov    al,ds:0xbf7c7a00
  4076c2:	je     0x4076f8
  4076c4:	and    DWORD PTR [eax+ebp*1+0x75ff094b],edi
  4076cb:	jle    0x407668
  4076cd:	test   eax,0xff889dd2
  4076d2:	mov    ch,0xe6
  4076d4:	mov    edi,edi
  4076d6:	(bad)  
  4076d7:	jp     0x40767a
  4076d9:	icebp  
  4076da:	ror    BYTE PTR ds:0xb950508a,cl
  4076e0:	pop    es
  4076e1:	adc    BYTE PTR [eax],al
  4076e3:	data16 jbe 0x40774d
  4076e6:	mov    ds,WORD PTR [edx]
  4076e8:	(bad)  
  4076e9:	dec    DWORD PTR [edi-0x1e]
  4076ec:	add    DWORD PTR [ecx+0x0],esp
	...
  4076fe:	cmp    bl,BYTE PTR [esi+0x33bb805]
  407704:	add    BYTE PTR [eax],al
  407706:	inc    eax
  407707:	jl     0x4076c8
  407709:	je     0x40770e
  40770b:	xor    eax,0x9b0275ff
  407710:	xchg   esi,eax
  407711:	(bad)  
  407712:	jge    0x40769d
  407714:	call   0xffc9c3ea
  407719:	lea    eax,[edi-0x620001bc]
  40771f:	xor    bh,bh
  407721:	mov    ch,0xde
  407723:	mov    bh,bh
  407725:	push   DWORD PTR [edx]
  407727:	inc    ecx
  407728:	mov    al,ds:0xbfffca00
  40772d:	cmova  esi,DWORD PTR [edx-0x2]
  407731:	(bad)  
  407732:	jge    0x4076bd
  407734:	mov    ch,0xbc
  407736:	pop    esp
  407737:	mov    edi,edi
  407739:	call   0xa3c9a1
  40773e:	arpl   WORD PTR [edi],cx
  407740:	dec    esi
  407741:	mov    eax,0xe88407a5
  407746:	ret    0x842e
  407749:	jmp    FWORD PTR [edx+0x37fff72a]
  40774f:	jecxz  0x4076e7
  407751:	sbb    DWORD PTR [edi+0x7f454b68],0x6c
  407758:	add    eax,DWORD PTR [eax]
  40775a:	arpl   WORD PTR [edi-0x7],dx
  40775d:	or     edi,DWORD PTR [ebx-0x49]
  407760:	push   esi
  407761:	inc    DWORD PTR [eax]
	...
  40776f:	add    BYTE PTR [eax],al
  407771:	fs jae 0x4077b7
  407774:	je     0x4077ef
  407776:	cmc    
  407777:	enter  0x54fb,0x41
  40777b:	adc    al,0xff
  40777d:	(bad)  
  40777e:	mov    al,0x6c
  407780:	adc    eax,0x5083a731
  407785:	cmp    al,0x19
  407787:	sub    al,0xc6
  40778a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40778b:	cmp    edi,0xffffffdc
  40778e:	sub    BYTE PTR [eax-0x6789d96],al
  407794:	sti    
  407795:	sbb    al,0x79
  407797:	or     ebp,eax
  407799:	dec    edi
  40779a:	test   BYTE PTR [edx+0x7f790cff],0xe8
  4077a1:	scas   al,BYTE PTR es:[edi]
  4077a2:	ss cmp edi,0x2a
  4077a6:	sub    dl,BYTE PTR [eax]
  4077a8:	add    BYTE PTR [esi+0x27816fe3],cl
  4077ae:	fadd   QWORD PTR [ecx+0x351e4ff]
  4077b4:	push   0x60
  4077b6:	aas    
  4077b7:	stc    
  4077b8:	pop    es
  4077b9:	retf   
  4077ba:	mov    edi,0xe4ccff4e
  4077bf:	enter  0x3bfb,0x5
  4077c3:	in     eax,dx
  4077c4:	add    al,0x63
  4077c6:	add    eax,0x7eac896c
  4077cb:	push   ss
  4077cc:	adc    DWORD PTR [ebx],0x6d
  4077cf:	xor    eax,0xf20563a3
  4077d4:	inc    ebx
	...
  4077e1:	add    BYTE PTR [eax],al
  4077e3:	add    BYTE PTR [ecx+ecx*4+0x4a],ch
  4077e7:	add    al,0x63
  4077e9:	add    eax,0x56207b4
  4077ee:	jmp    0xe9dd5405
  4077f3:	add    esp,DWORD PTR [ebx-0x13]
  4077f6:	xchg   BYTE PTR [ebx],dh
  4077f8:	and    al,BYTE PTR ds:0x7e748864
  4077fe:	into   
  4077ff:	adc    BYTE PTR [ebx],0x6d
  407802:	mov    dl,BYTE PTR [esp+ebx*2+0x7d]
  407806:	jo     0x407790
  407808:	push   ebx
  407809:	jl     0x4077c1
  40780b:	or     BYTE PTR [ebx+esi*4-0x47],0x81
  407810:	inc    esp
  407811:	jge    0x407824
  407813:	or     BYTE PTR [edx+0x5],ah
  407816:	jmp    0x97b556ab
  40781b:	sub    BYTE PTR [esi+edx*8],0x0
  40781f:	ret    0xc67b
  407822:	call   0x28765212
  407827:	add    al,0x8b
  407829:	mov    cl,0xb9
  40782b:	les    ecx,FWORD PTR [eiz*2+0x563a263]
  407832:	repnz inc ebx
  407834:	ja     0x40784c
  407836:	rol    DWORD PTR [ebx],cl
  407838:	out    0x82,al
  40783a:	pop    esi
  40783b:	sub    esp,0x6e82b97c
  407841:	or     eax,0x7cde9d51
  407846:	add    BYTE PTR ds:[eax],0x0
	...
  407856:	add    BYTE PTR [esi],cl
  407858:	jbe    0x40785a
  40785a:	aaa    
  40785b:	loope  0x4078d9
  40785d:	push   0x55fe5
  407862:	je     0x40784f
  407864:	je     0x407864
  407866:	push   ds
  407867:	loope  0x40783e
  407869:	addr16 push edi
  40786b:	js     0x407833
  40786d:	inc    DWORD PTR [eax-0x16beca5f]
  407873:	mov    BYTE PTR [eax+0x6d60a830],bh
  407879:	dec    edi
  40787a:	push   esi
  40787b:	pusha  
  40787c:	add    eax,0x158c290b
  407881:	push   0xffffffe9
  407883:	in     eax,dx
  407884:	xor    bh,0xdf
  407887:	loop   0x407905
  407889:	push   eax
  40788a:	(bad)  
  40788b:	je     0x407891
  40788d:	call   0xffbc5cc0
  407892:	(bad)  
  407893:	adc    al,0x75
  407895:	(bad)  
  407896:	mov    esi,0xa47d6ce2
  40789b:	loop   0x407918
  40789d:	push   0x2
  40789f:	mov    bh,0x42
  4078a1:	shl    DWORD PTR [esi+0x15c00fe2],1
  4078a7:	sub    ebp,0xffffff94
  4078aa:	fldenv [ecx]
  4078ac:	jl     0x4078fd
  4078ae:	add    DWORD PTR ds:0x3786ff55,0xe218ffee
  4078b8:	icebp  
  4078b9:	pop    es
  4078ba:	add    DWORD PTR [eax],0x0
	...
  4078c8:	add    BYTE PTR [eax],al
  4078ca:	push   ebp
  4078cb:	jp     0x4078cc
  4078cd:	outs   dx,BYTE PTR ds:[esi]
  4078ce:	ja     0x4078a3
  4078d0:	int3   
  4078d1:	data16 loop 0x4078c0
  4078d4:	sbb    DWORD PTR [ecx],0x20
  4078d7:	jl     0x407942
  4078d9:	repz jecxz 0x4078cd
  4078dc:	pop    es
  4078dd:	inc    ecx
  4078de:	mov    ch,0x7a
  4078e0:	inc    DWORD PTR [eax]
  4078e2:	and    eax,0xb308369
  4078e7:	or     BYTE PTR [edx+0x23],ch
  4078ea:	xchg   ebp,eax
  4078eb:	je     0x4078f4
  4078ed:	call   0x400023
  4078f2:	rol    BYTE PTR [ebx+0x69ca4130],cl
  4078f8:	sbb    edi,edi
  4078fa:	iret   
  4078fb:	psubsb mm1,QWORD PTR [esp+edx*2+0x1fffff86]
  407903:	cld    
  407904:	(bad)  
  407905:	jne    0x407899
  407907:	out    dx,eax
  407908:	fwait
  407909:	retf   0x8495
  40790c:	leave  
  40790d:	ret    0x77e
  407910:	push   ebp
  407911:	mov    edx,DWORD PTR [esi-0x5a000091]
  407917:	inc    ebp
  407918:	push   DWORD PTR [ebp-0x7a]
  40791b:	test   BYTE PTR [ebp+0x8],dh
  40791e:	mov    ds:0x25ffedf6,al
  407923:	rol    cl,1
  407925:	or     BYTE PTR [edx+0x54],cl
  407928:	mov    ch,ah
  40792a:	mov    ecx,0xc7f7c2
	...
  40793b:	add    BYTE PTR [eax],al
  40793d:	jg     0x4078c4
  40793f:	add    BYTE PTR [eax],al
  407941:	dec    edx
  407942:	pop    es
  407943:	lea    eax,[ebp-0x2a]
  407946:	push   esi
  407947:	addr16 into 
  407949:	or     cl,BYTE PTR [eax-0x1]
  40794c:	dec    BYTE PTR [edi+0x15]
  40794f:	push   DWORD PTR ds:0x412e51
  407955:	repnz std 
  407957:	into   
  407958:	call   DWORD PTR [ebp+0x1474c009]
  40795e:	nop
  40795f:	inc    ebp
  407960:	clc    
  407961:	adc    cl,BYTE PTR [eax]
  407963:	add    bh,ch
  407965:	aam    0x85
  407967:	jne    0x407965
  407969:	arpl   bx,dx
  40796b:	cmc    
  40796c:	mul    esp
  40796e:	push   ecx
  40796f:	or     ebp,eax
  407971:	cmp    edx,edx
  407973:	jg     0x407974
  407975:	aam    0xb1
  407977:	jnp    0x407961
  407979:	push   cs
  40797a:	and    DWORD PTR [eax+0xb2e9aff],eax
  407980:	add    BYTE PTR [esi],dl
  407982:	imul   DWORD PTR [esi-0x7f]
  407985:	lahf   
  407986:	rol    BYTE PTR [eax-0x79d45301],1
  40798c:	mov    eax,0x800ba5
  407991:	arpl   WORD PTR [ebx+eax*1-0x75],bp
  407995:	push   ds
  407996:	push   0x6917c00c
  40799b:	cmp    DWORD PTR [eax],0x63
  40799e:	icebp  
  40799f:	add    eax,0xe9
	...
  4079b0:	ins    DWORD PTR es:[di],dx
  4079b2:	add    eax,DWORD PTR [eax]
  4079b4:	je     0x407987
  4079b6:	adc    edi,edi
  4079b8:	neg    BYTE PTR [edi+0x6b]
  4079bb:	sub    DWORD PTR [ebx-0x4caf80b5],edx
  4079c1:	inc    ebx
  4079c2:	stc    
  4079c3:	pop    es
  4079c4:	dec    ebx
  4079c5:	ret    0xff7e
  4079c8:	dec    esp
  4079c9:	inc    esp
  4079ca:	sti    
  4079cb:	retf   
  4079cc:	inc    esp
  4079cd:	stos   DWORD PTR es:[edi],eax
  4079ce:	in     al,dx
  4079cf:	lods   al,BYTE PTR ds:[esi]
  4079d0:	(bad)  
  4079d1:	sub    eax,0x68aeff04
  4079d6:	imul   ecx,DWORD PTR ds:0x897f9313,0xffffffde
  4079dd:	sar    DWORD PTR [ebp-0x1],cl
  4079e0:	sbb    al,0x14
  4079e2:	add    DWORD PTR ds:[ebx+0x6c],esp
  4079e6:	nop
  4079e7:	test   DWORD PTR [ecx],esp
  4079e9:	bnd jle 0x4079eb
  4079ec:	mov    bl,0x84
  4079ee:	mov    esp,ecx
  4079f0:	cld    
  4079f1:	add    al,0x66
  4079f3:	xchg   ecx,eax
  4079f4:	fiadd  WORD PTR [esi+0x5f]
  4079f7:	jg     0x4079e5
  4079f9:	aam    0x55
  4079fb:	mov    ecx,0x7f4e7aab
  407a00:	retf   
  407a01:	inc    ebx
  407a02:	fs add al,0x63
  407a05:	mov    WORD PTR [eax+eax*8-0x33],fs
  407a09:	jns    0x407a41
  407a0b:	les    edx,FWORD PTR [ebp-0x7f]
  407a0e:	xchg   BYTE PTR [ebx+eiz*2],al
  407a11:	add    eax,0x9974
	...
  407a22:	add    BYTE PTR [ecx-0x4b80e186],ah
  407a28:	push   es
  407a29:	stc    
  407a2a:	add    esp,DWORD PTR [ebx+0x5]
  407a2d:	xchg   ebp,eax
  407a2e:	imul   edi
  407a30:	(bad)  
  407a31:	sub    edi,DWORD PTR [esi-0x6c]
  407a34:	jns    0x407aa2
  407a36:	ret    0xd538
  407a39:	sub    BYTE PTR [ebx+0x6be8c437],0xdb
  407a40:	xchg   edi,eax
  407a41:	jmp    0x5485e249
  407a46:	add    bh,BYTE PTR [eax-0x22]
  407a49:	arpl   WORD PTR [eax+0x7ece7aa1],bx
  407a4f:	out    dx,al
  407a50:	ret    
  407a51:	adc    al,0xd4
  407a53:	mov    esp,0x4cc50dab
  407a58:	popa   
  407a59:	aaa    
  407a5a:	mov    eax,ds:0x43e20563
  407a5f:	mov    dh,0x3
  407a61:	xchg   edx,eax
  407a62:	ret    
  407a63:	out    0x92,eax
  407a65:	stos   DWORD PTR es:[edi],eax
  407a66:	jge    0x407a94
  407a68:	jns    0x407ace
  407a6a:	sar    DWORD PTR [eax-0x72],0x64
  407a6e:	mov    bh,0x1d
  407a70:	jns    0x4079f8
  407a72:	jmp    0x407a4c
  407a74:	sub    eax,0xf30c0428
  407a79:	jmp    esp
  407a7b:	js     0x407a7b
  407a7d:	into   
  407a7e:	outs   dx,BYTE PTR ds:[esi]
  407a7f:	jge    0x407af9
  407a81:	mov    ch,0x9d
  407a83:	jbe    0x407afd
  407a85:	(bad)  
  407a86:	mov    ecx,0x0
	...
  407a93:	add    BYTE PTR [eax],al
  407a95:	add    BYTE PTR [eax+0x46],bh
  407a98:	iret   
  407a99:	push   esi
  407a9a:	gs js  0x407b12
  407a9d:	stc    
  407a9e:	mov    al,0x60
  407aa0:	mov    eax,0x50785536
  407aa5:	cdq    
  407aa6:	dec    ebp
  407aa7:	repnz pop es
  407aa9:	inc    ecx
  407aaa:	push   DWORD PTR [edi-0x1]
  407aad:	cs dec eax
  407aaf:	scas   eax,DWORD PTR es:[edi]
  407ab0:	retf   
  407ab1:	es xor eax,0x2e2b858a
  407ab7:	js     0x407ab8
  407ab9:	mov    ecx,0xfbcb225
  407abe:	sbb    eax,0xc3d5e878
  407ac3:	add    eax,0x8206400
  407ac8:	test   DWORD PTR [ebp-0x110087fb],ecx
  407ace:	mov    ah,0xb9
  407ad0:	(bad)  
  407ad1:	out    0xf6,al
  407ad3:	ins    BYTE PTR es:[edi],dx
  407ad4:	pop    ds
  407ad5:	jl     0x407b3e
  407ad7:	add    eax,0x77a79cff
  407adc:	dec    esi
  407ade:	iret   
  407adf:	jg     0x407aac
  407ae1:	(bad)  
  407ae2:	(bad)  
  407ae3:	dec    esi
  407ae4:	ret    0x60ed
  407ae7:	ror    BYTE PTR [edx-0x3bf1d3b],cl
  407aed:	scas   al,BYTE PTR es:[edi]
  407aee:	xor    al,0xc
  407af0:	call   0xffb9219f
  407af5:	jo     0x407b1b
  407af7:	jl     0x407b04
  407af9:	test   eax,0x0
	...
  407b06:	add    BYTE PTR [eax],al
  407b08:	add    BYTE PTR [esi-0x7f],dl
  407b0b:	mov    ecx,gs
  407b0d:	pusha  
  407b0e:	add    eax,0x36060068
  407b13:	inc    ecx
  407b14:	add    BYTE PTR [ebp-0x6e170490],cl
  407b1a:	(bad)  
  407b1b:	(bad)  
  407b1c:	call   FWORD PTR [edx+0x69]
  407b1f:	push   esp
  407b20:	xor    cl,bl
  407b22:	add    edx,DWORD PTR [eax-0x1]
  407b25:	pop    ss
  407b26:	or     al,0xe8
  407b28:	xchg   esp,eax
  407b29:	mov    edx,?
  407b2b:	(bad)  
  407b2c:	call   0x3f4833
  407b31:	mov    dl,0x1a
  407b33:	xor    al,BYTE PTR [ecx-0x46]
  407b36:	clc    
  407b37:	je     0x407b35
  407b39:	and    bl,bl
  407b3b:	int    0xff
  407b3d:	lea    edx,[ecx+0x67]
  407b40:	push   ebp
  407b41:	cwde   
  407b42:	inc    edx
  407b43:	dec    DWORD PTR [edi+0x4d]
  407b46:	jo     0x407b4f
  407b48:	call   0x3f7516
  407b4d:	bound  esp,QWORD PTR [edx]
  407b4f:	retf   
  407b50:	call   FWORD PTR [ebp+0x69]
  407b53:	xor    DWORD PTR [edx],esi
  407b55:	mov    ebx,0x8e75ff03
  407b5a:	jmp    0x407b14
  407b5c:	into   
  407b5d:	(bad)  
  407b5e:	clc    
  407b5f:	dec    edi
  407b60:	push   0x413337
  407b65:	sub    bh,dl
  407b67:	je     0x407b71
  407b69:	mov    ds:0xfffd55,al
	...
  407b7a:	add    BYTE PTR [eax],al
  407b7c:	sub    eax,0x1dcb05eb
  407b81:	cli    
  407b82:	addr16 dec esp
  407b84:	dec    eax
  407b85:	inc    esp
  407b86:	(bad)  
  407b87:	inc    BYTE PTR [edi-0x2367177b]
  407b8d:	stc    
  407b8e:	(bad)  
  407b8f:	push   eax
  407b90:	push   edx
  407b91:	dec    esi
  407b92:	xor    DWORD PTR [ecx+0x3a],eax
  407b95:	push   ebx
  407b96:	(bad)  
  407b97:	jne    0x407bfc
  407b99:	imul   esi,DWORD PTR fs:[ecx],0x1d
  407b9d:	mov    BYTE PTR [eax+ebp*8-0x2],bh
  407ba1:	mov    dl,0x7c
  407ba3:	dec    DWORD PTR [edx+esi*2]
  407ba6:	jg     0x407b90
  407ba8:	mov    es:0xab2aff7c,eax
  407bae:	or     eax,DWORD PTR [eax]
  407bb0:	mov    ?,ebx
  407bb2:	outs   dx,BYTE PTR ds:[esi]
  407bb3:	and    DWORD PTR [edi],0xffffffd9
  407bb6:	shr    DWORD PTR [ecx+0x63],cl
  407bb9:	inc    edx
  407bba:	pop    es
  407bbb:	call   DWORD PTR [esi+0x64]
  407bbe:	imul   edi,esi,0xffffff9c
  407bc1:	mov    edi,0x3826897b
  407bc6:	mov    BYTE PTR ds:0xffc3043f,bh
  407bcc:	cmp    al,0x67
  407bce:	add    esi,DWORD PTR [eax+edi*2-0x6c]
  407bd2:	inc    ebp
  407bd3:	xor    BYTE PTR [edx],ah
  407bd5:	ins    BYTE PTR es:[edi],dx
  407bd6:	aam    0xe7
  407bd8:	sbb    dh,cl
  407bda:	add    al,BYTE PTR [eax]
  407bdc:	push   0x1df72c
	...
  407bed:	add    BYTE PTR [eax],al
  407bef:	sub    al,0x14
  407bf1:	out    dx,eax
  407bf2:	ror    DWORD PTR [edi+esi*2+0x580fc007],cl
  407bf9:	shl    DWORD PTR [edi+0x16],cl
  407bfc:	mov    edx,0x5f24ffc2
  407c01:	icebp  
  407c02:	pop    es
  407c03:	jnp    0x407bb4
  407c05:	jns    0x407c06
  407c07:	fs inc esp
  407c09:	(bad)
  407c0d:	js     0x407c42
  407c0f:	and    eax,DWORD PTR [ebp-0x48b30085]
  407c15:	jbe    0x407bc5
  407c17:	mov    esp,DWORD PTR [edi-0x10]
  407c1a:	(bad)  
  407c1b:	leave  
  407c1c:	push   edx
  407c1d:	jp     0x407c94
  407c1f:	imul   eax,DWORD PTR ds:0x762d7591,0xffffff9e
  407c26:	out    dx,al
  407c27:	xor    DWORD PTR [esi+0x1c],0x8f5e0b0c
  407c2e:	jnp    0x407c44
  407c30:	jmp    0x407c16
  407c32:	jp     0x407bca
  407c34:	or     eax,0x76055991
  407c39:	jbe    0x407c29
  407c3b:	inc    esi
  407c3c:	jbe    0x407c32
  407c3e:	or     ecx,DWORD PTR [ebx]
  407c40:	push   edx
  407c41:	addr16 jnp 0x407c30
  407c44:	in     al,dx
  407c45:	inc    eax
  407c46:	xor    al,0xa2
  407c48:	add    eax,0x6d64f156
  407c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c4e:	js     0x407c24
  407c50:	jne    0x407c23
  407c52:	add    DWORD PTR [eax],eax
	...
  407c60:	add    BYTE PTR [eax],al
  407c62:	xchg   edx,eax
  407c63:	(bad)  
  407c64:	call   0x414dcae3
  407c69:	cmp    al,0xbe
  407c6b:	jne    0x407c9b
  407c6d:	in     al,dx
  407c6e:	js     0x407ca4
  407c70:	test   al,0x3
  407c72:	lods   al,BYTE PTR ds:[esi]
  407c73:	out    dx,eax
  407c74:	lock imul edi,DWORD PTR [eax+0x78],0x16
  407c79:	jnp    0x407c86
  407c7b:	jmp    0x407c54
  407c7d:	les    edx,FWORD PTR [esi+esi*2+0x167b0b7c]
  407c84:	cld    
  407c85:	jp     0x407c0b
  407c87:	in     al,dx
  407c88:	dec    eax
  407c89:	xor    eax,0xf0ee0522
  407c8e:	pop    esp
  407c8f:	ins    DWORD PTR es:[edi],dx
  407c90:	clc    
  407c91:	js     0x407cff
  407c93:	jne    0x407ce6
  407c95:	dec    edx
  407c96:	xor    al,ah
  407c98:	call   0xc13e5317
  407c9d:	call   DWORD PTR [edi+0x75]
  407ca0:	(bad)  
  407ca1:	jp     0x407c79
  407ca3:	jno    0x407c63
  407ca5:	lock pop esp
  407ca7:	pop    ebp
  407ca8:	add    BYTE PTR [ebx],dh
  407caa:	mov    al,ds:0xa60eff74
  407caf:	inc    edi
  407cb0:	add    al,0xe9
  407cb2:	adc    eax,DWORD PTR [eax+0x12b6aec]
  407cb8:	add    BYTE PTR ds:0xf9757471,bl
  407cbe:	cdq    
  407cbf:	cli    
  407cc0:	or     eax,DWORD PTR [esi-0x4c17f2ed]
	...
  407cd2:	add    BYTE PTR [eax],al
  407cd4:	add    BYTE PTR [ebp+0x74],dh
  407cd7:	push   DWORD PTR [esi-0xd]
  407cda:	add    al,ch
  407cdc:	xchg   ecx,eax
  407cdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cde:	je     0x407cdf
  407ce0:	xor    BYTE PTR [esi-0x2a4bffff],ah
  407ce6:	popa   
  407ce7:	sub    DWORD PTR ds:0x4dffdf54,0xffffffd3
  407cee:	sbb    bh,bh
  407cf0:	mov    esp,0xed757470
  407cf5:	cmp    BYTE PTR [ebx-0x34],bl
  407cf8:	cmp    DWORD PTR ss:[eax],eax
  407cfb:	shl    BYTE PTR [ebp+0x25457d8c],0xb8
  407d02:	dec    edx
  407d03:	xor    ch,BYTE PTR [eax+0x15757460]
  407d09:	or     BYTE PTR [esi-0x22e6f134],bh
  407d0f:	(bad)  
  407d10:	call   0xfe91300e
  407d15:	je     0x407d23
  407d17:	call   0xffb47668
  407d1c:	or     DWORD PTR [edi],0xebe94137
  407d22:	stc    
  407d23:	sti    
  407d24:	sar    DWORD PTR [ecx],1
  407d26:	inc    edx
  407d27:	call   esi
  407d29:	dec    edi
  407d2a:	add    eax,0xd519be00
  407d2f:	inc    BYTE PTR [eax]
  407d31:	pop    DWORD PTR [ecx]
  407d33:	call   0xff2e82c2
  407d38:	push   0x0
	...
  407d45:	add    BYTE PTR [eax],al
  407d47:	add    dh,dl
  407d49:	cmp    al,BYTE PTR [ecx+0x0]
  407d4c:	add    eax,0x29e8fb64
  407d51:	retf   
  407d52:	(bad)  
  407d53:	call   DWORD PTR [edx+0xb]
  407d56:	add    bh,ch
  407d58:	mov    ah,0x59
  407d5a:	(bad)  
  407d5b:	jne    0x407d5f
  407d5d:	loopne 0x407dcd
  407d5f:	jmp    ebp
  407d61:	in     eax,dx
  407d62:	(bad)  
  407d63:	jne    0x407ceb
  407d65:	loope  0x407dc4
  407d67:	leave  
  407d68:	jne    0x407d58
  407d6a:	enter  0x1ac2,0x8
  407d6e:	push   ebp
  407d6f:	mov    edx,DWORD PTR [esi-0x44cd179f]
  407d75:	pop    es
  407d76:	push   DWORD PTR [ebp-0x3a]
  407d79:	fucomip st,st(0)
  407d7b:	int3   
  407d7c:	and    eax,0xaa75feee
  407d81:	push   edi
  407d82:	out    0x34,eax
  407d84:	ja     0x407d74
  407d86:	(bad)  
  407d87:	(bad)  
  407d88:	inc    DWORD PTR [ebx]
  407d8a:	push   eax
  407d8b:	(bad)  
  407d8c:	out    dx,eax
  407d8d:	jmp    edi
  407d8f:	ds test esi,ebp
  407d92:	(bad)  
  407d93:	push   0x413b4f
  407d98:	jne    0x407dfe
  407d9a:	or     ebp,eax
  407d9c:	cmp    eax,0x65fffebd
  407da1:	fs (bad) 
  407da4:	jb     0x407dc1
  407da6:	int    0xff
  407da8:	jne    0x407d96
  407daa:	je     0x407dc0
	...
  407db8:	add    BYTE PTR [eax],al
  407dba:	add    dl,bl
  407dbc:	in     al,dx
  407dbd:	je     0x407dc7
  407dbf:	xchg   edx,eax
  407dc0:	sbb    edi,edi
  407dc2:	inc    DWORD PTR [ebp+0x6310c1be]
  407dc8:	pop    esp
  407dc9:	into   
  407dca:	mov    al,BYTE PTR [edi-0x20]
  407dcd:	ds cld 
  407dcf:	dec    esp
  407dd0:	xor    cl,BYTE PTR [eax]
  407dd2:	call   0xffb91f8a
  407dd7:	push   0xea49ef9c
  407ddc:	sub    DWORD PTR [eax+0x68],edi
  407ddf:	arpl   WORD PTR [eax+ebp*2-0x42],bx
  407de3:	mov    ebx,0x634135aa
  407de8:	fwait
  407de9:	out    dx,al
  407dea:	sti    
  407deb:	adc    al,0x1a
  407ded:	or     al,0xe8
  407def:	fmul   DWORD PTR [ebx+0x5d7bff78]
  407df5:	add    ebp,edi
  407df7:	mov    ebp,0xa2325304
  407dfc:	pop    esp
  407dfd:	js     0x407e74
  407dff:	out    dx,eax
  407e00:	jmp    0x407def
  407e02:	pop    es
  407e03:	sti    
  407e04:	pop    edx
  407e05:	js     0x407e06
  407e07:	fadd   QWORD PTR [ebp+eax*1+0x0]
  407e0b:	les    eax,FWORD PTR [edx-0x626e2415]
  407e11:	add    edi,edi
  407e13:	dec    esi
  407e14:	xor    BYTE PTR [eax+0x75],bh
  407e17:	imul   eax,esp,0xffffffe1
  407e1a:	(bad)  
  407e1b:	mov    ah,0x23
  407e1d:	js     0x407e94
	...
  407e2b:	add    BYTE PTR [eax],al
  407e2d:	add    BYTE PTR [edi-0x5b374bec],ch
  407e33:	adc    ecx,DWORD PTR [edx-0x3e]
  407e36:	imul   ebx,DWORD PTR [esi+ecx*8-0x76],0xffffff87
  407e3b:	fistp  QWORD PTR [esi]
  407e3d:	cld    
  407e3e:	stc    
  407e3f:	pop    ebx
  407e40:	in     eax,dx
  407e41:	add    al,0x84
  407e43:	stc    
  407e44:	or     ch,al
  407e46:	xchg   esi,eax
  407e47:	and    DWORD PTR [eax-0x1],edi
  407e4a:	jmp    0x1b05:0xd46877a9
  407e51:	lds    esp,FWORD PTR [edx+ebp*8+0x3b]
  407e55:	xor    ah,BYTE PTR [edx-0x57ce29fb]
  407e5b:	sbb    al,0x28
  407e5d:	add    al,0x4c
  407e5f:	clc    
  407e60:	lock imul esi,ebp,0x72
  407e64:	mov    esi,0xfb9ccb77
  407e69:	les    esi,FWORD PTR [edx+ebp*8]
  407e6c:	aaa    
  407e6d:	xor    ah,BYTE PTR [edx-0x67ce59fb]
  407e73:	sbb    al,0x28
  407e75:	add    al,0x1c
  407e77:	clc    
  407e78:	loopne 0x407ee5
  407e7a:	in     eax,dx
  407e7b:	jb     0x407e0b
  407e7d:	ja     0x407efa
  407e7f:	mov    ds:0xea04c4bb,eax
  407e84:	sbb    esi,DWORD PTR [edx]
  407e86:	mov    ds:0xa8317605,al
  407e8b:	sbb    al,0x28
  407e8d:	add    al,0xec
  407e8f:	div    eax
  407e91:	imul   eax,DWORD PTR [eax],0x0
	...
  407ea0:	add    BYTE PTR [ebp+0x73],ah
  407ea3:	pop    esi
  407ea4:	ja     0x407ef1
  407ea6:	scas   al,BYTE PTR es:[edi]
  407ea7:	sbb    eax,ebp
  407ea9:	aam    0xe9
  407eab:	stos   DWORD PTR es:[edi],eax
  407eac:	xor    DWORD PTR [edx],esp
  407eae:	add    eax,0x1c183146
  407eb3:	test   al,0x3
  407eb5:	mov    esp,0x3d6be0f7
  407eba:	jae    0x407eea
  407ebc:	ja     0x407ef9
  407ebe:	call   0x3269:0xe9a4c4db
  407ec5:	and    al,BYTE PTR ds:0x1c283116
  407ecb:	test   al,0x3
  407ecd:	mov    edi,?
  407ecf:	lock imul edx,DWORD PTR ds:0xb76fe73,0xffffff9c
  407ed7:	add    BYTE PTR [ebx+0x6a67719f],bh
  407edd:	xor    esp,eax
  407edf:	jmp    ebp
  407ee1:	xor    edi,DWORD PTR [esi+0x70672828]
  407ee7:	jne    0x407eca
  407ee9:	enter  0xfe37,0xce
  407eed:	aad    0xdd
  407eef:	lods   eax,DWORD PTR ds:[esi]
  407ef0:	sti    
  407ef1:	pop    ds
  407ef2:	jno    0x407f5b
  407ef4:	push   0x72
  407ef6:	(bad)  
  407ef7:	push   DWORD PTR [ebp+0x2828bc73]
  407efd:	addr16 jo 0x407f75
  407f00:	icebp  
  407f01:	mov    eax,0x9efe0f
	...
  407f12:	add    BYTE PTR [eax],al
  407f14:	xchg   ebp,eax
  407f15:	fnstsw WORD PTR [edx+0x67711fdb]
  407f1b:	push   0x52
  407f1d:	(bad)  
  407f1e:	inc    DWORD PTR [ebp+0x2828bc53]
  407f24:	addr16 jo 0x407f9c
  407f27:	loope  0x407eb1
  407f29:	pop    es
  407f2a:	(bad)  
  407f2b:	outs   dx,BYTE PTR ds:[esi]
  407f2c:	jne    0x407f0b
  407f2e:	xchg   esi,eax
  407f2f:	sbb    ebx,DWORD PTR [esi]
  407f31:	jno    0x407f9a
  407f33:	mov    esp,0xc0ffc692
  407f38:	bound  eax,QWORD PTR ds:0xfa556900
  407f3e:	pop    es
  407f3f:	push   ecx
  407f40:	cmp    eax,0xc83eff72
  407f45:	popf   
  407f46:	xor    ch,BYTE PTR [eax-0x48f22a0]
  407f4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f4d:	jo     0x407fb6
  407f4f:	jmp    0x407fb1
  407f51:	add    eax,0x8931e80
  407f56:	call   0xffb09a8c
  407f5b:	add    esi,0x7a004133
  407f61:	pop    esp
  407f62:	pop    esp
  407f63:	xor    cl,bl
  407f65:	add    al,0x68
  407f67:	add    cl,BYTE PTR [edx-0x8007ffc]
  407f6d:	sti    
  407f6e:	out    0xc1,eax
  407f70:	jg     0x407f6c
  407f72:	(bad)  
  407f73:	push   0x413301
	...
  407f84:	add    BYTE PTR [eax],al
  407f86:	add    BYTE PTR [edx+0x3a413158],ah
  407f8c:	pop    esp
  407f8d:	add    DWORD PTR [eax],eax
  407f8f:	cmp    al,BYTE PTR [edi+edi*8-0x5623cd8b]
  407f96:	std    
  407f97:	in     eax,dx
  407f98:	stc    
  407f99:	addr16 xchg edi,eax
  407f9b:	sub    BYTE PTR [ebx-0x1],al
  407f9e:	addr16 mov ecx,0x72004133
  407fa4:	add    eax,DWORD PTR [eax]
  407fa6:	add    BYTE PTR [edx-0x1df78b06],cl
  407fac:	xchg   ebp,eax
  407fad:	std    
  407fae:	(bad)  
  407faf:	frstor [eax-0x58]
  407fb2:	xor    cl,BYTE PTR [ebx+0x9]
  407fb5:	push   0xff42b883
  407fba:	addr16 clc 
  407fbc:	add    eax,DWORD PTR [eax]
  407fbe:	cmp    BYTE PTR [ebp+0x60],0x7
  407fc2:	call   0x3f7685
  407fc7:	mov    ds:0xba4132a9,al
  407fcc:	pop    ebx
  407fcd:	xor    BYTE PTR [edx],0xfb
  407fd0:	add    ebp,DWORD PTR [eax+0x2]
  407fd3:	retf   0x8003
  407fd6:	push   edi
  407fd8:	sti    
  407fd9:	out    0x65,eax
  407fdb:	jg     0x407fd7
  407fdd:	(bad)  
  407fde:	push   0x413341
  407fe3:	repnz test BYTE PTR [edx],dh
  407fe6:	inc    ecx
  407fe7:	arpl   WORD PTR [esi-0x15],bx
  407fea:	add    DWORD PTR [eax],eax
	...
  407ff8:	add    BYTE PTR [eax],al
  407ffa:	arpl   WORD PTR [esi-0x7d],bx
  407ffd:	dec    DWORD PTR [esi]
  407fff:	jbe    0x40806c
  408001:	dec    esi
  408002:	jle    0x408072
  408004:	je     0x408070
  408006:	pop    ecx
  408007:	ja     0x407ff7
  408009:	pop    es
  40800a:	jnp    0x408070
  40800c:	jne    0x40800d
  40800e:	shl    DWORD PTR fs:[eax],cl
  408011:	call   esi
  408013:	je     0x408080
  408015:	call   DWORD PTR [esi+0x58]
  408018:	je     0x408084
  40801a:	outs   dx,DWORD PTR ds:[esi]
  40801b:	aas    
  40801c:	out    dx,al
  40801d:	pop    es
  40801e:	cmp    esi,DWORD PTR [edx-0x4fc3008a]
  408024:	out    dx,al
  408025:	sti    
  408026:	xor    al,0x32
  408028:	or     al,0xe8
  40802a:	mov    ah,0xa8
  40802c:	je     0x40802d
  40802e:	sbb    bl,BYTE PTR [ebx-0xc480001]
  408034:	adc    WORD PTR [esi-0x7f8bfc98],0x4
  40803c:	or     BYTE PTR [ebx],dh
  40803e:	mov    ds:0x6f75745c,al
  408043:	xchg   esp,eax
  408044:	cmc    
  408045:	leave  
  408046:	hlt    
  408047:	not    edx
  408049:	arpl   WORD PTR [si+0x64],bx
  40804d:	mov    esi,0x7ede793
  408052:	retf   
  408053:	mov    ds:0xc4d4ff6b,al
  408058:	inc    edi
  408059:	(bad)  
  40805a:	int3   
  40805b:	mov    edi,0x1cea
	...
  40806c:	add    BYTE PTR [eax+0x36ff039d],dl
  408072:	pusha  
  408073:	imul   ebx,DWORD PTR [ebp-0x57],0x37
  408077:	je     0x4080c9
  408079:	cmp    ebx,DWORD PTR [ebp+0x3]
  40807c:	out    dx,eax
  40807d:	in     eax,0x5
  40807f:	mov    ecx,0x10fd1674
  408084:	call   0x47b9:0x6b166e8b
  40808b:	push   cs
  40808c:	je     0x408089
  40808e:	xor    al,0xba
  408090:	ret    0x6f7c
  408093:	je     0x40809c
  408095:	mov    esi,DWORD PTR [ecx]
  408097:	and    esi,DWORD PTR [esp+ebp*2-0x2b]
  40809b:	add    BYTE PTR [ecx],0x63
  40809e:	pop    esi
  40809f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080a0:	aam    0x5d
  4080a2:	clc    
  4080a3:	lock pop ebx
  4080a5:	fistp  DWORD PTR [ebp-0x2a]
  4080a8:	jae    0x4080e5
  4080aa:	jl     0x408053
  4080ac:	jae    0x4080f2
  4080ae:	cmp    al,0xab
  4080b0:	cld    
  4080b1:	cmp    al,0xd9
  4080b3:	jno    0x408115
  4080b5:	xor    al,0xf8
  4080b7:	in     al,0x5b
  4080b9:	sbb    bh,BYTE PTR [ebx]
  4080bb:	scas   al,BYTE PTR es:[edi]
  4080bc:	jae    0x408116
  4080be:	inc    ebp
  4080bf:	sbb    eax,0xda048b0e
  4080c4:	les    edx,FWORD PTR [esi+edi*4]
  4080c7:	adc    dl,0x1a
  4080ca:	outs   dx,BYTE PTR ds:[esi]
  4080cb:	mov    ss,esp
  4080cd:	xchg   esp,eax
  4080ce:	outs   dx,BYTE PTR ds:[esi]
  4080cf:	cld    
  4080d0:	sti    
	...
  4080dd:	add    BYTE PTR [eax],al
  4080df:	add    BYTE PTR [ecx+eiz*8],al
  4080e2:	jge    0x408157
  4080e4:	hlt    
  4080e5:	pop    esp
  4080e6:	adc    eax,0xa06dec4a
  4080eb:	inc    esi
  4080ec:	pop    ebx
  4080ed:	add    eax,0x81cf7ebc
  4080f2:	and    eax,0x56054964
  4080f7:	stc    
  4080f8:	pop    esp
  4080f9:	outs   dx,BYTE PTR ds:[esi]
  4080fa:	aam    0xff
  4080fc:	lds    esi,FWORD PTR [edi]
  4080fe:	mov    dl,0x1c
  408100:	and    al,BYTE PTR ds:0x6dabdb51
  408106:	add    BYTE PTR [esi],dh
  408108:	cs enter 0xc3f3,0x60
  40810d:	outs   dx,BYTE PTR ds:[esi]
  40810e:	jne    0x40810d
  408110:	adc    eax,edi
  408112:	or     ebx,DWORD PTR [esi]
  408114:	pop    edx
  408115:	mov    edx,0x5d60a828
  40811a:	inc    ecx
  40811b:	and    BYTE PTR [eax],dl
  40811d:	outs   dx,BYTE PTR ds:[esi]
  40811e:	mov    DWORD PTR [esp+ecx*1+0x7bfdffdb],ebp
  408125:	adc    eax,0x6e6c7cff
  40812a:	xor    eax,0xffc447a2
  40812f:	sar    BYTE PTR [ebp+0x3e],1
  408132:	(bad)  
  408133:	(bad)  
  408135:	ret    0x64f7
  408138:	sbb    esp,DWORD PTR [ebp+0x50]
  40813b:	into   
  40813c:	dec    ebx
  40813d:	adc    edi,edi
  40813f:	cmp    al,0x63
  408141:	ins    BYTE PTR es:[edi],dx
  408142:	xor    eax,0x32
	...
  408153:	push   esi
  408154:	(bad)  
  408155:	inc    eax
  408157:	push   ebp
  408158:	jmp    FWORD PTR ds:[esi+0x13efc2a7]
  40815f:	ins    BYTE PTR es:[di],dx
  408161:	jne    0x40812c
  408163:	xchg   ecx,eax
  408164:	repnz or edx,DWORD PTR [esi+0x2828c04b]
  40816b:	pop    edi
  40816c:	pop    ebp
  40816d:	std    
  40816e:	mov    cl,0x71
  408170:	ins    BYTE PTR es:[edi],dx
  408171:	mov    DWORD PTR [ebx+eax*4],esp
  408174:	jp     0x4081bb
  408176:	mov    DWORD PTR [eax],edx
  408178:	ins    BYTE PTR es:[edi],dx
  408179:	jne    0x408140
  40817b:	jno    0x40816f
  40817d:	or     esp,DWORD PTR [esi-0x65]
  408180:	shr    BYTE PTR [eax],0xa8
  408183:	pusha  
  408184:	pop    ebp
  408185:	in     eax,0x21
  408187:	push   ecx
  408188:	ins    BYTE PTR es:[edi],dx
  408189:	mov    DWORD PTR [esp+edi*1+0x26007d88],esp
  408190:	or     BYTE PTR [edi],cl
  408192:	test   BYTE PTR [esi],cl
  408194:	or     BYTE PTR [eax],al
  408196:	add    BYTE PTR [ecx],bh
  408198:	jne    0x408191
  40819a:	add    BYTE PTR [ebp-0x75ff757c],al
  4081a0:	or     BYTE PTR [ebx+0xf086e7d],al
  4081a6:	test   dl,bh
  4081a8:	pop    es
  4081a9:	add    BYTE PTR [eax],al
  4081ab:	push   ebp
  4081ac:	ins    DWORD PTR es:[edi],dx
  4081ad:	daa    
  4081ae:	(bad)  
  4081af:	jmp    FWORD PTR [edi-0x19]
  4081b2:	sub    cl,BYTE PTR [eax-0x9]
  4081b5:	(bad)  
  4081b6:	inc    DWORD PTR [eax]
	...
  4081c4:	add    BYTE PTR [eax],al
  4081c6:	out    dx,eax
  4081c7:	(bad)  
  4081c9:	jne    0x40814d
  4081cb:	rol    BYTE PTR [eax-0x109ba3e],1
  4081d1:	jne    0x408215
  4081d3:	div    BYTE PTR [eax+ecx*1+0x22]
  4081d7:	outs   dx,DWORD PTR ds:[esi]
  4081d8:	sar    edi,0x15
  4081db:	div    BYTE PTR [esp+esi*8+0x25]
  4081df:	je     0x4081e8
  4081e1:	call   0x3f4577
  4081e6:	mov    ebx,0x3a13275c
  4081eb:	in     eax,0xbd
  4081ed:	jne    0x408206
  4081ef:	cmc    
  4081f0:	je     0x4081e2
  4081f2:	cmc    
  4081f3:	jae    0x4081fc
  4081f5:	call   0x3f4547
  4081fa:	loope  0x408202
  4081fc:	push   DWORD PTR [ebp-0x2e]
  4081ff:	cmc    
  408200:	je     0x4081f2
  408202:	jne    0x408278
  408204:	pop    es
  408205:	call   0x3f441b
  40820a:	jne    0x408280
  40820c:	jmp    0x40820d
  40820e:	mov    edi,0x883ce76f
  408213:	idiv   dh
  408215:	and    DWORD PTR [ebx+0x51],0x67
  408219:	add    BYTE PTR [edi+0x71],cl
  40821c:	test   BYTE PTR [ebp-0x3d],bh
  40821f:	pop    ecx
  408220:	test   BYTE PTR [esi],0xe8
  408223:	mov    al,ds:0x3373ff67
  408228:	test   DWORD PTR [edi],0x0
	...
  408236:	add    BYTE PTR [eax],al
  408238:	add    BYTE PTR [ebx-0x6300bce4],bh
  40823e:	push   ss
  40823f:	(bad)  
  408240:	imul   esp,DWORD PTR [ebx+0xb],0xc87b07f7
  408247:	inc    edx
  408248:	inc    DWORD PTR [edx+edi*8+0x398bf3f6]
  40824f:	inc    esi
  408250:	push   DWORD PTR [edx+ebp*2-0xa]
  408254:	sti    
  408255:	jnp    0x4082a8
  408257:	inc    esi
  408258:	jmp    DWORD PTR [edx+ebx*2-0xa]
  40825c:	test   DWORD PTR [ebx+0x69],0x4c54ff46
  408263:	imul   bh
  408265:	cmp    esp,DWORD PTR [ecx+0x46]
  408268:	inc    DWORD PTR [esp+edi*1-0xa]
  40826c:	jmp    0x4082b9
  40826e:	pop    ecx
  40826f:	inc    esi
  408270:	push   DWORD PTR [esp+ebp*4]
  408273:	mul    bl
  408275:	cmp    esi,DWORD PTR [ecx-0x59db00b9]
  40827b:	inc    ebp
  40827c:	and    al,0x63
  40827e:	sub    DWORD PTR [ebp-0x14],edi
  408281:	loop   0x408223
  408283:	jae    0x40827c
  408285:	or     al,0x94
  408287:	fist   DWORD PTR [edx]
  408289:	arpl   bx,bp
  40828b:	mov    al,0x68
  40828d:	aam    0xaf
  40828f:	ret    0x7cff
  408292:	fdiv   DWORD PTR [ebx]
  408294:	inc    ecx
  408295:	arpl   WORD PTR [ecx+ecx*4],ax
  408298:	xor    esp,DWORD PTR [edx+0x7cdb5c]
	...
  4082aa:	add    BYTE PTR [eax],al
  4082ac:	nop
  4082ad:	add    eax,0xed4b03a8
  4082b2:	sbb    ebx,eax
  4082b4:	int3   
  4082b5:	loop   0x408321
  4082b7:	xor    al,0x22
  4082b9:	add    eax,0x6a68f64e
  4082be:	mov    esp,0x3edcbcfb
  4082c3:	jo     0x408271
  4082c5:	fstp   st(1)
  4082c7:	add    esi,DWORD PTR [ebx+ebp*4-0x3bafb43f]
  4082ce:	call   0xa87734ae
  4082d3:	add    edi,ebx
  4082d5:	inc    ecx
  4082d6:	fcmovb st,st(2)
  4082d8:	test   dl,ah
  4082da:	cmp    eax,0x91052234
  4082df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082e0:	xor    ah,al
  4082e2:	call   0xa8772cc2
  4082e7:	add    esp,DWORD PTR [eax+esi*8-0x24]
  4082eb:	jo     0x4082c3
  4082ed:	std    
  4082ee:	shr    BYTE PTR [ebx],1
  4082f0:	push   ebp
  4082f1:	push   0xffffffde
  4082f3:	fdiv   QWORD PTR [eax+0x5]
  4082f6:	(bad)  
  4082f7:	scas   al,BYTE PTR es:[edi]
  4082f8:	mov    ebx,0x3cc5152d
  4082fd:	loop   0x40830c
  4082ff:	cmp    BYTE PTR [edx+0x77165105],ah
  408305:	(bad)  
  408306:	call   0x2876b3e6
  40830b:	add    al,0x8b
  40830d:	data16 fcmovb st,st(4)
	...
  40831c:	add    BYTE PTR [eax],al
  40831e:	add    BYTE PTR [edx+eiz*8],dl
  408321:	jecxz  0x40835a
  408323:	mov    ds:0x58f99605,al
  408328:	push   0x14
  40832a:	cld    
  40832b:	add    al,0xf8
  40832d:	xchg   BYTE PTR [edi-0xc],ch
  408330:	ja     0x408356
  408332:	jo     0x4082c7
  408334:	push   0x0
  408336:	cld    
  408337:	in     al,0x6a
  408339:	xor    eax,0xffc47e22
  40833e:	push   eax
  40833f:	adc    BYTE PTR [ebx-0x56361700],dl
  408345:	jne    0x40831a
  408347:	sbb    eax,0x60e9f7c0
  40834c:	add    eax,0x75aa2e00
  408351:	jmp    esi
  408353:	pusha  
  408354:	add    eax,0x698ae96a
  408359:	imul   ebp,ecx,0xac8c69ba
  40835f:	or     al,0xd5
  408361:	mov    WORD PTR [ebx+ecx*1+0x72],fs
  408365:	call   DWORD PTR [esi]
  408367:	scas   eax,DWORD PTR es:[edi]
  408368:	push   0x75
  40836a:	adc    DWORD PTR [eax+esi*8],ecx
  40836d:	sti    
  40836e:	adc    esi,esi
  408370:	xchg   edx,eax
  408371:	add    cl,ch
  408373:	imul   ebp,DWORD PTR [ecx-0x3af6148c],0xc67f2d67
  40837d:	jmp    ebp
  40837f:	pop    ebx
  408380:	std    
  408381:	out    0x8e,eax
	...
  40838f:	add    BYTE PTR [eax],al
  408391:	add    BYTE PTR [ebp-0x4f9d0098],ah
  408397:	jp     0x40831e
  408399:	aad    0xb5
  40839b:	push   0x611119ff
  4083a0:	hlt    
  4083a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083a2:	mov    ebp,0xb06c8968
  4083a7:	jo     0x4083a8
  4083a9:	scas   al,BYTE PTR es:[edi]
  4083aa:	lea    esi,[edx+0x68859ef0]
  4083b0:	call   DWORD PTR [edi+ecx*1]
  4083b3:	popa   
  4083b4:	cmc    
  4083b5:	xchg   edi,eax
  4083b6:	jne    0x408420
  4083b8:	call   DWORD PTR [eax+esi*2+0x70]
  4083bc:	inc    DWORD PTR [eax]
  4083be:	(bad)  
  4083c0:	loope  0x408385
  4083c2:	ins    DWORD PTR es:[edi],dx
  4083c3:	xlat   BYTE PTR ds:[ebx]
  4083c4:	inc    BYTE PTR [ebp+0x72]
  4083c7:	retf   
  4083c8:	xchg   esp,eax
  4083c9:	call   edi
  4083cb:	fsub   st,st(7)
  4083cd:	das    
  4083ce:	push   esp
  4083cf:	add    al,0x0
  4083d1:	leave  
  4083d2:	js     0x408440
  4083d4:	call   DWORD PTR [ecx+eax*2-0x38]
  4083d8:	add    ah,0x2e
  4083db:	dec    esi
  4083dc:	jmp    FWORD PTR [ecx-0x3c]
  4083df:	xlat   BYTE PTR ds:[ebx]
  4083e0:	je     0x4083ea
  4083e2:	adc    ch,bh
  4083e4:	mov    edi,0x44e96dff
  4083e9:	cld    
  4083ea:	mov    ds:0x8a413317,al
  4083ef:	xlat   BYTE PTR ds:[ebx]
  4083f0:	je     0x4083fa
  4083f2:	jb     0x4083a3
  4083f4:	(bad)  
  4083f5:	inc    DWORD PTR [eax]
	...
  408403:	add    BYTE PTR [eax],al
  408405:	ins    DWORD PTR es:[edi],dx
  408406:	dec    esi
  408407:	jmp    DWORD PTR [edi-0x2]
  40840a:	xor    al,BYTE PTR [ecx+0x0]
  40840d:	rcl    BYTE PTR [edi],cl
  40840f:	xor    eax,DWORD PTR [ecx+0x7a]
  408412:	xlat   BYTE PTR ds:[ebx]
  408413:	xor    al,0x4b
  408415:	mov    ds:0x9ae7ff41,eax
  40841a:	ret    0xfffe
  40841d:	push   ecx
  40841e:	les    esi,FWORD PTR [ebx+0xf]
  408421:	mov    dl,BYTE PTR [ecx-0x2]
  408424:	jne    0x408468
  408426:	int3   
  408427:	xchg   esp,eax
  408428:	cld    
  408429:	sub    eax,0x985e7da
  40842e:	(bad)  
  408430:	push   0x3a
  408432:	dec    esp
  408433:	mov    ebp,0x68017b28
  408438:	push   edx
  408439:	sbb    DWORD PTR [ebx-0x1],eax
  40843c:	(bad)  
  40843d:	aaa    
  40843e:	lods   eax,DWORD PTR ds:[esi]
  40843f:	sub    BYTE PTR [ecx-0x6],al
  408442:	retf   
  408443:	test   esi,eax
  408445:	arpl   WORD PTR [edi+0x12230b6d],cx
  40844b:	std    
  40844c:	dec    edi
  40844d:	xchg   ebx,eax
  40844e:	jg     0x408447
  408450:	pop    es
  408451:	sti    
  408452:	adc    dh,BYTE PTR [eax-0x1]
  408455:	in     al,0x85
  408457:	leave  
  408458:	ret    0xd6dc
  40845b:	fcos   
  40845d:	cmp    al,0x52
  40845f:	xor    BYTE PTR [ecx+0x63],al
  408462:	push   esi
  408463:	sub    al,0x33
  408465:	and    bl,BYTE PTR [esi-0x25]
  408468:	add    DWORD PTR [eax],eax
	...
  408476:	add    BYTE PTR [eax],al
  408478:	arpl   WORD PTR [esi-0x7d],bx
  40847b:	call   0xffad9c96
  408480:	pop    eax
  408481:	push   ds
  408482:	clc    
  408483:	push   cs
  408484:	adc    ecx,DWORD PTR [esi-0x39948a94]
  40848a:	sar    ebx,0x94
  40848d:	push   ds
  40848e:	pop    esp
  40848f:	xor    ah,BYTE PTR [eax+0x636a6d06]
  408495:	xchg   BYTE PTR [ebp-0x24a1ddd8],ch
  40849b:	push   ecx
  40849c:	xor    BYTE PTR [ebp+0x5e616803],bl
  4084a2:	add    eax,DWORD PTR [eax-0xba5685]
  4084a8:	pop    esp
  4084a9:	fs inc ebx
  4084ab:	je     0x408511
  4084ad:	sub    al,0xd4
  4084af:	(bad)  
  4084b0:	(bad)  
  4084b1:	je     0x40850e
  4084b3:	sbb    DWORD PTR [edi+0x50],eax
  4084b6:	ins    BYTE PTR es:[edi],dx
  4084b7:	call   0xffad2026
  4084bc:	leave  
  4084bd:	bound  ebp,QWORD PTR [ebp+esi*2+0x5b]
  4084c1:	push   esp
  4084c2:	jmp    0xd9f0a9c2
  4084c7:	and    bl,BYTE PTR [edx+esi*1]
  4084ca:	cld    
  4084cb:	out    0x93,eax
  4084cd:	add    eax,0xdc0c6ca5
  4084d2:	cld    
  4084d3:	ins    BYTE PTR es:[edi],dx
  4084d4:	mov    ?,ebp
  4084d6:	and    ch,0xf8
  4084d9:	data16 mov gs,WORD PTR [eax+eax*1+0x0]
	...
  4084ea:	add    BYTE PTR [esi+0x69],ch
  4084ed:	xchg   dh,dh
  4084ef:	fs pop ebp
  4084f1:	pop    ds
  4084f2:	inc    esp
  4084f3:	in     al,0x66
  4084f5:	mov    al,ds:0x14056741
  4084fa:	jns    0x4084c3
  4084fc:	sub    BYTE PTR ds:0xd2ce356f,0x3
  408503:	cmp    esi,edi
  408505:	push   ebp
  408506:	mul    BYTE PTR [ebp+ebx*2-0x17]
  40850a:	inc    ebx
  40850b:	mov    ah,0x66
  40850d:	jo     0x4084d5
  40850f:	test   al,0x7a
  408511:	hlt    
  408512:	out    0x7c,eax
  408514:	(bad)  
  408515:	call   0x11de392
  40851a:	ret    
  40851b:	xchg   esp,eax
  40851c:	out    0xe5,al
  40851e:	add    edx,DWORD PTR [edi]
  408520:	repnz nop
  408522:	mov    edx,0xd4e8c450
  408527:	test   al,al
  408529:	jae    0x40852e
  40852b:	arpl   dx,di
  40852d:	sub    bh,dh
  40852f:	dec    ebp
  408530:	iret   
  408531:	adc    bl,bl
  408533:	cwde   
  408534:	data16 not dl
  408537:	les    eax,FWORD PTR ds:0xdd155ce9
  40853d:	dec    ebx
  40853e:	xor    BYTE PTR [edx-0x3194c6fb],ah
  408544:	std    
  408545:	ror    dh,0x45
  408548:	data16 into 
  40854a:	pop    esp
  40854b:	fld    QWORD PTR [edx-0x3a]
  40854e:	imul   eax,DWORD PTR [eax],0x0
	...
  40855d:	add    BYTE PTR [ebx+0x24c4f4ce],bh
  408563:	iret   
  408564:	inc    eax
  408566:	jo     0x4084f8
  408568:	add    cl,ch
  40856a:	adc    eax,0x310674a6
  40856f:	pop    esi
  408570:	cmp    ch,BYTE PTR [ebp+0x1506678]
  408576:	addr16 add eax,0xe1174fef
  40857c:	xor    ebp,DWORD PTR [eax]
  40857e:	addr16 aad 0xfe
  408581:	hlt    
  408582:	call   0x48ceb1e4
  408587:	callw  0xa29c
  40858b:	call   WORD PTR [edx+0x66]
  40858f:	mov    edi,0xf05f1f7f
  408594:	stc    
  408595:	scas   eax,DWORD PTR es:[edi]
  408596:	inc    esp
  408597:	xor    al,al
  408599:	nop
  40859a:	dec    eax
  40859b:	inc    WORD PTR [esi+0x35]
  40859f:	xchg   edi,eax
  4085a0:	cmp    dh,ah
  4085a2:	mov    bl,0x78
  4085a4:	(bad)  
  4085a5:	mov    esp,0xe1756604
  4085aa:	cmp    BYTE PTR [ecx-0x3a07d941],dh
  4085b0:	pop    ebp
  4085b1:	xor    BYTE PTR ds:0xfdbc0001,bl
  4085b7:	pop    eax
  4085b8:	push   0xbe5660e9
  4085bd:	xchg   ecx,eax
  4085be:	loope  0x4085f0
  4085c0:	inc    ecx
  4085c1:	jmp    0x4085c6
	...
  4085ce:	add    BYTE PTR [eax],al
  4085d0:	add    cl,bh
  4085d2:	out    dx,eax
  4085d3:	or     esi,esi
  4085d5:	push   ebx
  4085d6:	or     eax,0x64c106e8
  4085db:	call   DWORD PTR [ecx+0x66]
  4085de:	add    eax,0x91289fef
  4085e3:	xor    al,0x28
  4085e5:	addr16 fs jne 0x4085c6
  4085e9:	leave  
  4085ea:	fiadd  DWORD PTR [edi]
  4085ec:	add    BYTE PTR [edx],dl
  4085ee:	mov    ebx,0x21e5ffe5
  4085f3:	ret    0xa08
  4085f6:	ss mov ch,ah
  4085f9:	lds    edx,FWORD PTR [ebp+0xb]
  4085fc:	call   0x3f4d3a
  408601:	adc    ecx,ecx
  408603:	jae    0x40861f
  408605:	bound  ebx,QWORD PTR [edx+0x33]
  408608:	inc    ecx
  408609:	or     bh,BYTE PTR [ecx]
  40860b:	out    0xd8,eax
  40860d:	mov    edi,0x4a50feef
  408612:	lock je 0x40861d
  408615:	loop   0x40859a
  408617:	(bad)  
  408618:	inc    DWORD PTR [ebp-0x40]
  40861b:	aad    0xc1
  40861d:	inc    ebp
  40861e:	out    dx,eax
  40861f:	enter  0xd2c2,0x8
  408623:	push   ebp
  408624:	mov    esp,DWORD PTR [esi]
  408626:	mov    eax,esp
  408628:	cld    
  408629:	mov    al,ds:0x25086a08
  40862e:	push   ebp
  40862f:	pop    es
  408630:	call   0x403457
	...
  408641:	add    BYTE PTR [eax],al
  408643:	add    BYTE PTR [ebx],al
  408645:	inc    ebp
  408646:	sti    
  408647:	push   0xffffff8a
  408649:	inc    eax
  40864a:	arpl   WORD PTR ds:0x916808bb,si
  408650:	scas   al,BYTE PTR es:[edi]
  408651:	dec    ecx
  408652:	(bad)  
  408653:	(bad)  
  408654:	lahf   
  408655:	mov    ds:0xc08a4128,eax
  40865a:	mov    ebp,0xaef65c4
  40865f:	shr    dh,0x13
  408662:	push   eax
  408663:	push   0xbeef084b
  408668:	cli    
  408669:	out    dx,al
  40866a:	je     0x408674
  40866c:	xor    ch,BYTE PTR [edx+eiz*8-0x1]
  408670:	and    eax,0x63c18dc1
  408675:	cmp    ebp,DWORD PTR [ecx+0x6a]
  408678:	arpl   si,ax
  40867a:	fbstp  TBYTE PTR [edx+eiz*4]
  40867d:	outs   dx,BYTE PTR ds:[esi]
  40867e:	(bad)  [ebp-0xfbd291]
  408684:	push   esi
  408685:	daa    
  408686:	sbb    eax,DWORD PTR [ecx+0x63]
  408689:	inc    esi
  40868a:	jns    0x408650
  40868c:	or     al,0xab
  40868e:	std    
  40868f:	mov    edi,0x67d35a8f
  408694:	bound  ebp,QWORD PTR [esi+0x58]
  408697:	mov    esi,0x7ef9393
  40869c:	sti    
  40869d:	sbb    esp,DWORD PTR [ebp-0x1]
  4086a0:	in     al,0x75
  4086a2:	leave  
  4086a3:	rcr    ah,0xda
  4086a6:	(bad)  
	...
  4086b4:	add    BYTE PTR [eax],al
  4086b6:	add    BYTE PTR [edx+ebx*2],bh
  4086b9:	cs inc ecx
  4086bb:	arpl   WORD PTR [esi],si
  4086bd:	jae    0x4086f3
  4086bf:	and    ch,BYTE PTR [esi+0x68]
  4086c2:	xor    eax,0xffc30528
  4086c7:	mov    esp,0xacff3f4d
  4086cc:	push   esi
  4086cd:	inc    ebx
  4086ce:	je     0x408724
  4086d0:	jle    0x4086a5
  4086d2:	(bad)  
  4086d3:	push   ss
  4086d4:	pop    bx
  4086d6:	or     dl,BYTE PTR [edx+esi*1+0x2d56e869]
  4086dd:	imul   edi,edi,0x73db6df9
  4086e3:	lods   eax,DWORD PTR ss:[esi]
  4086e5:	add    ebp,DWORD PTR [eax+0x5b]
  4086e8:	cmp    edx,eax
  4086ea:	jmp    FWORD PTR [ebp-0x60]
  4086ed:	mov    esp,0x5b6e2228
  4086f2:	ss daa 
  4086f4:	pop    esp
  4086f5:	push   0xf7d9230b
  4086fa:	dec    edi
  4086fb:	mov    bl,0x5
  4086fd:	out    0xee,al
  4086ff:	pop    esp
  408700:	ins    DWORD PTR es:[edi],dx
  408701:	leave  
  408702:	imul   edi,DWORD PTR [ebx+eiz*2],0x6323fcc1
  408709:	into   
  40870a:	(bad)  [ebx+ebp*8]
  40870d:	inc    ebx
  40870e:	das    
  40870f:	mov    ds:0x57cf5105,al
  408714:	(bad)  
  408715:	call   0xed582
  40871a:	ret    0x0
	...
  408729:	add    BYTE PTR [ebx+ebp*2],cl
  40872c:	cmc    
  40872d:	aas    
  40872e:	add    al,0x63
  408730:	repnz inc ebx
  408732:	ja     0x408746
  408734:	cmp    esp,edx
  408736:	cmc    
  408737:	fsub   st,st(0)
  408739:	pop    ebx
  40873a:	mov    ch,0x63
  40873c:	xchg   BYTE PTR [eax-0x5],ch
  40873f:	fs test eax,0xd4efdc68
  408745:	push   0x4b810d4e
  40874a:	int    0x62
  40874c:	data16 (bad) [edx+0x62]
  408750:	aam    0xfb
  408752:	les    edx,FWORD PTR [ebx+0x57]
  408755:	push   0x6909efb4
  40875a:	ss or  eax,0x62a53f51
  408760:	ds push 0xee366116
  408766:	pop    esp
  408767:	ins    DWORD PTR es:[edi],dx
  408768:	imul   DWORD PTR [ecx+0x4530628c]
  40876e:	pop    edi
  40876f:	add    eax,0x628f7cb4
  408774:	pushf  
  408775:	idiv   DWORD PTR [ebp+ebx*2+0x25]
  408779:	push   0xef290e6c
  40877e:	push   ss
  40877f:	in     eax,dx
  408780:	outs   dx,BYTE PTR ds:[esi]
  408781:	mov    cs:0xb8990005,al
  408787:	nop
  408788:	(bad)  
  408789:	out    dx,al
  40878a:	les    esi,FWORD PTR [ebp+0x394f]
	...
  40879c:	add    BYTE PTR [edi],ah
  40879e:	(bad)  
  40879f:	dec    esi
  4087a1:	add    eax,0x1e1c88ed
  4087a6:	bound  ecx,QWORD PTR [edi-0x32]
  4087a9:	xor    cl,BYTE PTR [edx]
  4087ab:	call   0xffa349ca
  4087b0:	and    DWORD PTR [edi],edi
  4087b2:	add    eax,0xecbdc600
  4087b7:	xchg   edi,eax
  4087b8:	hlt    
  4087b9:	daa    
  4087ba:	bound  ecx,QWORD PTR [edi-0x5a]
  4087bd:	adc    cl,BYTE PTR [edx]
  4087bf:	call   0xffa30ba2
  4087c4:	xor    DWORD PTR [edi],edx
  4087c6:	add    al,0x0
  4087c8:	jle    0x40878f
  4087ca:	in     al,dx
  4087cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087cc:	mov    esp,0x7e4f621f
  4087d1:	ror    BYTE PTR [ecx],cl
  4087d3:	call   0xffa2cb9a
  4087d8:	sbb    DWORD PTR [ecx+eiz*4+0x478666ff],0x8e93e908
  4087e3:	in     al,dx
  4087e4:	push   0x23
  4087e6:	popa   
  4087e7:	push   0xffffffe9
  4087e9:	mov    cl,BYTE PTR [edi+edi*8]
  4087ec:	mov    esp,0x7c7969a8
  4087f1:	add    al,0x62
  4087f3:	mov    DWORD PTR [esp+edi*8-0x6dd1e612],ebp
  4087fa:	or     eax,ebp
  4087fc:	imul   edi,esp,0x93ff61
	...
  40880e:	add    BYTE PTR [eax],al
  408810:	inc    ecx
  408811:	bound  esi,QWORD PTR [ebp-0x1f]
  408814:	sbb    bl,bl
  408816:	dec    BYTE PTR [esi]
  408818:	add    al,0xef
  40881a:	sbb    eax,DWORD PTR [eax]
  40881c:	pop    ebp
  40881d:	push   esp
  40881e:	pop    es
  40881f:	call   0x3f7012
  408824:	dec    ebp
  408825:	push   esi
  408826:	sti    
  408827:	call   edi
  408829:	pop    esp
  40882a:	out    0x93,eax
  40882c:	jmp    edi
  40882e:	dec    cl
  408830:	or     BYTE PTR [ecx-0x1],ah
  408833:	push   esp
  408834:	sar    DWORD PTR [eax-0x1b5dff97],0x34
  40883b:	inc    ecx
  40883c:	cmp    bh,BYTE PTR ds:0x94b35d0
  408842:	push   DWORD PTR ds:0x410241
  408848:	and    bl,BYTE PTR [eax-0x3e]
  40884b:	(bad)  
  40884c:	mov    ebp,0xf774bf5b
  408851:	xor    al,0xfe
  408853:	jne    0x40884f
  408855:	out    0x74,eax
  408857:	or     al,0x2a
  408859:	call   0x971290d2
  40885e:	in     al,0xff
  408860:	pop    ebp
  408861:	mov    esp,0xe74dbfdd
  408866:	imul   eax,DWORD PTR [eax],0x4134e462
  40886c:	mov    edx,0xb35d03c
  408871:	add    eax,0x268
	...
  408882:	add    dl,cl
  408884:	add    al,0x80
  408886:	call   0x3f4ea5
  40888b:	mov    cl,0xc4
  40888d:	jae    0x4088a4
  40888f:	cli    
  408890:	out    0x74,eax
  408892:	adc    BYTE PTR [ebp+0x55],cl
  408895:	or     edx,DWORD PTR [eax+0x3d]
  408898:	push   ebp
  408899:	pop    es
  40889a:	call   0x3f4898
  40889f:	push   edx
  4088a0:	ja     0x408861
  4088a2:	jmp    DWORD PTR [ebx-0x9]
  4088a5:	gs jne 0x4088fb
  4088a8:	(bad)  
  4088aa:	or     edi,ebx
  4088ac:	xor    BYTE PTR cs:[ecx+0x63],al
  4088b0:	pop    edi
  4088b1:	out    dx,eax
  4088b2:	pop    es
  4088b3:	dec    ebx
  4088b4:	and    BYTE PTR [edi-0x1],bl
  4088b7:	dec    esp
  4088b8:	and    eax,0x21630c41
  4088bd:	jns    0x4088ab
  4088bf:	loopne 0x40886a
  4088c1:	push   0xf9c4636a
  4088c6:	(bad)  
  4088c7:	mov    dh,0x66
  4088c9:	pop    ebx
  4088ca:	mov    esi,0x896546e7
  4088cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088d0:	mov    ds:0x4714ffdc,al
  4088d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088d6:	push   0xffc258d1
  4088db:	add    eax,0x83e7fc01
  4088e0:	jg     0x408947
  4088e2:	dec    DWORD PTR [ebx+0xef036d]
	...
  4088f4:	add    BYTE PTR [eax],al
  4088f6:	lods   eax,DWORD PTR ds:[esi]
  4088f7:	add    eax,0x6ea235a7
  4088fc:	fs jne 0x40896a
  4088ff:	jbe    0x4088b7
  408901:	(bad)  
  408902:	aam    0xd6
  408904:	fs jne 0x4088d6
  408907:	out    dx,al
  408908:	out    dx,al
  408909:	pop    es
  40890a:	mov    ebx,0xbcffa81b
  40890f:	adc    al,0x42
  408911:	add    al,0x63
  408913:	mov    eax,ds:0x29e2ec78
  408918:	dec    esp
  408919:	mul    DWORD PTR [esi+eax*8+0x7d9f4576]
  408920:	fs jne 0x40898a
  408923:	pop    ss
  408924:	das    
  408925:	dec    ebx
  408926:	cmp    ch,BYTE PTR [ebp+0x4eee803]
  40892c:	js     0x408932
  40892e:	arpl   WORD PTR [ecx+ebp*1],cx
  408931:	cmc    
  408932:	fistp  QWORD PTR [eax+ebp*8]
  408935:	add    esp,DWORD PTR [ebx+0x48]
  408938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408939:	imul   esp,DWORD PTR [ebx+0x5],0xffffffe9
  40893d:	add    esp,DWORD PTR [ecx+ecx*8]
  408940:	hlt    
  408941:	fs pop esp
  408943:	add    eax,0xed4cd9e9
  408948:	call   0xe92dce26
  40894d:	jbe    0x4088f5
  40894f:	pop    ecx
  408950:	cmp    DWORD PTR [edi-0x22],esi
  408953:	pop    ecx
  408954:	fisub  WORD PTR [esp+ebp*1-0x4a]
  408958:	int    0xee
	...
  408966:	add    BYTE PTR [eax],al
  408968:	add    BYTE PTR [edi+ebx*2],ch
  40896b:	cmp    al,0x68
  40896d:	or     esp,edi
  40896f:	push   edi
  408970:	add    esp,DWORD PTR [ebx+0xa]
  408973:	test   eax,0x526c67ef
  408978:	add    ah,BYTE PTR [ebx+0x5]
  40897b:	adc    DWORD PTR [eax+0x64e8c44b],ebp
  408981:	outs   dx,BYTE PTR ds:[esi]
  408982:	adc    DWORD PTR [ecx-0x71a0de87],eax
  408988:	rcr    ecx,cl
  40898a:	xor    eax,0x56d77e74
  40898f:	jle    0x4089f5
  408991:	xor    esi,DWORD PTR [ebx+0x5ea2e980]
  408997:	outs   dx,BYTE PTR ds:[esi]
  408998:	jp     0x408978
  40899a:	push   ebp
  40899b:	pop    esi
  40899c:	fs mov esp,0xb4a5396d
  4089a2:	pop    esi
  4089a3:	ret    
  4089a4:	add    edi,DWORD PTR [ebx]
  4089a6:	pop    ds
  4089a7:	pop    ss
  4089a8:	ret    
  4089a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089aa:	pop    edi
  4089ab:	jl     0x408a20
  4089ad:	xchg   esp,eax
  4089ae:	pop    esi
  4089af:	ds fs dec esi
  4089b2:	retf   0xffff
  4089b5:	mov    al,ds:0x2119e75e
  4089ba:	pop    esi
  4089bb:	push   DWORD PTR [eax-0x3]
  4089be:	push   0xeaff1ef7
  4089c3:	inc    DWORD PTR [eax-0x16bee770]
  4089c9:	call   DWORD PTR [edi+0xfef0]
	...
  4089db:	add    al,al
  4089dd:	pop    esi
  4089de:	push   DWORD PTR [ebx+ebx*1-0x5716bed3]
  4089e5:	xchg   ebx,eax
  4089e6:	shr    esi,0xc0
  4089e9:	mov    WORD PTR [ebp-0xa1672b],es
  4089ef:	push   ebx
  4089f0:	pop    edi
  4089f1:	in     eax,dx
  4089f2:	inc    esi
  4089f3:	pop    ds
  4089f4:	es pop esi
  4089f6:	(bad)  
  4089f7:	xchg   esp,eax
  4089f8:	(bad)  
  4089f9:	push   esi
  4089fa:	inc    esi
  4089fc:	sbb    BYTE PTR [eax],0x4b
  4089ff:	adc    BYTE PTR [esi],bl
  408a01:	pop    esi
  408a02:	out    0x5d,eax
  408a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a05:	pop    esi
  408a06:	jmp    DWORD PTR [eax-0x26]
  408a09:	ins    BYTE PTR es:[edi],dx
  408a0a:	mul    DWORD PTR [esi+0x10ffeb80]
  408a10:	mov    dh,0x17
  408a12:	inc    ecx
  408a13:	jmp    0x97312299
  408a18:	sbb    BYTE PTR [esi-0x1],0xbc
  408a1c:	lods   eax,DWORD PTR ds:[esi]
  408a1d:	sub    al,0x41
  408a1f:	jmp    0x7701616c
  408a24:	inc    eax
  408a25:	mov    WORD PTR [ebp-0xa1d777],es
  408a2b:	je     0x408a17
  408a2d:	cmp    al,0xf7
  408a2f:	pop    esi
  408a30:	inc    eax
  408a31:	mov    ch,0x67
  408a33:	retf   0xc44a
  408a36:	dec    DWORD PTR [ebp-0x36]
  408a39:	push   esp
  408a3a:	test   DWORD PTR [eax],0x35fee225
	...
  408a4c:	add    BYTE PTR [eax],al
  408a4e:	add    cl,dl
  408a50:	xor    BYTE PTR [ecx+0x0],al
  408a53:	and    dl,BYTE PTR [esi+0xe35ffc0]
  408a59:	shl    BYTE PTR [ebx+eiz*2-0x7a],0xbd
  408a5e:	fmul   DWORD PTR [ebp-0x1e]
  408a61:	inc    BYTE PTR [edi+ecx*8]
  408a64:	push   ecx
  408a65:	(bad)  
  408a66:	xor    BYTE PTR ds:0x65f7dc8c,al
  408a6c:	call   0xa76b72c0
  408a71:	(bad)  
  408a72:	jmp    DWORD PTR [ecx+0x5d]
  408a75:	or     al,al
  408a77:	into   
  408a78:	push   cs
  408a79:	push   eax
  408a7a:	call   0x4031bd
  408a7f:	std    
  408a80:	(bad)  
  408a81:	fdivr  st(7),st
  408a83:	adc    eax,0x3a0014e8
  408a88:	or     DWORD PTR [ebx-0x13fd143],eax
  408a8e:	dec    DWORD PTR [edx]
  408a90:	xor    eax,0xec978364
  408a95:	idiv   bh
  408a97:	mov    ch,0x8
  408a99:	je     0x408af7
  408a9b:	mov    DWORD PTR [ebp-0x182a0818],esp
  408aa1:	push   DWORD PTR [ebx+0x29]
  408aa4:	imul   edi,edi,0xffa665ff
  408aaa:	jne    0x408a7e
  408aac:	lock push 0xffffffba
  408aaf:	push   ebp
  408ab0:	out    0xfe,eax
  408ab2:	mov    ch,0x0
	...
  408ac0:	add    BYTE PTR [eax],al
  408ac2:	out    0xbf,al
  408ac4:	(bad)  
  408ac5:	push   DWORD PTR ds:0x5e8073d
  408acb:	jnp    0x408acc
  408acd:	call   DWORD PTR ds:0x63f7e87d
  408ad3:	mov    bl,0x61
  408ad5:	jmp    FWORD PTR [esi]
  408ad7:	imul   si,WORD PTR [ecx-0x9e3c27],0xffce
  408adf:	ret    0xff59
  408ae2:	mov    WORD PTR [ebx],ss
  408ae4:	fadd   DWORD PTR [edi]
  408ae6:	jnp    0x408a77
  408ae8:	popf   
  408ae9:	(bad)  
  408aea:	jl     0x408b0f
  408aec:	cwde   
  408aed:	loopne 0x408b5b
  408aef:	sti    
  408af0:	popa   
  408af1:	push   esi
  408af3:	imul   edx,DWORD PTR gs:[ebp-0x9df457],0x16
  408afb:	and    bl,BYTE PTR [edx-0x1]
  408afe:	push   esp
  408aff:	pop    ebx
  408b00:	xlat   BYTE PTR ds:[ebx]
  408b01:	pop    es
  408b02:	cmp    ecx,DWORD PTR [ecx-0x63]
  408b05:	inc    DWORD PTR [ebx+ebp*2-0x69]
  408b09:	in     al,0x34
  408b0b:	arpl   WORD PTR [ecx-0x18],sp
  408b0e:	sar    BYTE PTR [eax+0x61],cl
  408b11:	jmp    FWORD PTR [ecx+edi*2]
  408b14:	jo     0x408b0d
  408b16:	and    al,0x4b
  408b18:	ins    BYTE PTR es:[edi],dx
  408b19:	xchg   dh,bl
  408b1b:	inc    edx
  408b1c:	popa   
  408b1d:	dec    esi
  408b1f:	xor    eax,0x460cff59
  408b24:	fnstsw WORD PTR [eax+eax*1+0x0]
	...
  408b33:	add    BYTE PTR [eax],al
  408b35:	add    al,0xab
  408b37:	popa   
  408b38:	mov    ch,0x3
  408b3a:	jnp    0x408b9d
  408b3c:	dec    DWORD PTR [ebx]
  408b3e:	(bad)  
  408b3f:	sahf   
  408b40:	(bad)  
  408b41:	in     al,dx
  408b42:	jb     0x408adb
  408b44:	lock in al,dx
  408b46:	mov    ah,BYTE PTR [ecx-0x18]
  408b49:	inc    esi
  408b4a:	shl    DWORD PTR [eax-0x1],0xd4
  408b4e:	and    BYTE PTR [ecx+ebp*8-0x6c],bl
  408b52:	aam    0x60
  408b54:	inc    esp
  408b56:	push   eax
  408b57:	pop    edi
  408b58:	call   0x4b69069
  408b5d:	arpl   WORD PTR [esi+0x2b],cx
  408b60:	or     al,0x63
  408b62:	mov    dl,0x61
  408b64:	jo     0x408b46
  408b66:	inc    eax
  408b67:	push   ecx
  408b68:	out    dx,al
  408b69:	pushf  
  408b6a:	in     eax,dx
  408b6b:	icebp  
  408b6c:	pusha  
  408b6d:	push   cs
  408b6e:	or     eax,0x5bcad951
  408b73:	mov    ebx,DWORD PTR ss:[esi]
  408b76:	pop    ecx
  408b77:	pop    esp
  408b78:	(bad)  
  408b79:	je     0x408b2f
  408b7b:	nop
  408b7c:	add    al,0x2d
  408b7e:	(bad)  
  408b7f:	call   0xa852096f
  408b84:	add    esp,DWORD PTR [ecx+edx*1-0x5e]
  408b88:	sub    ah,BYTE PTR [edx+0x231d1105]
  408b8e:	pop    ebx
  408b8f:	dec    BYTE PTR [ebx+eiz*1]
  408b92:	rcr    ch,cl
  408b94:	mov    bl,0xbc
  408b96:	add    al,0xe9
  408b98:	jo     0x408b9a
	...
  408ba6:	add    BYTE PTR [eax],al
  408ba8:	std    
  408ba9:	pop    edx
  408baa:	pop    esp
  408bab:	pop    esp
  408bac:	xchg   ebx,eax
  408bad:	pop    edx
  408bae:	push   esp
  408baf:	or     al,0x3b
  408bb1:	test   al,0xb7
  408bb3:	pusha  
  408bb4:	and    al,0x6e
  408bb6:	loope  0x408b56
  408bb8:	sbb    al,0x5b
  408bba:	je     0x408b82
  408bbc:	or     al,0xb6
  408bbe:	push   eax
  408bbf:	not    BYTE PTR [esi-0x3c]
  408bc2:	call   0x285181b2
  408bc7:	add    al,0xfc
  408bc9:	adc    BYTE PTR [edx],dh
  408bcb:	sub    esp,DWORD PTR [edx+0x23089105]
  408bd1:	pop    ebx
  408bd2:	xchg   esi,eax
  408bd3:	or     al,0x23
  408bd5:	shl    ch,cl
  408bd7:	mov    bl,0x44
  408bd9:	pop    es
  408bda:	jmp    0xf49ba14f
  408bdf:	pop    ebx
  408be0:	xor    ebx,DWORD PTR [edx+0x0]
  408be3:	cld    
  408be4:	pop    eax
  408be5:	ins    DWORD PTR es:[edi],dx
  408be6:	outs   dx,BYTE PTR ds:[esi]
  408be7:	pop    DWORD PTR [ebx+0x5a]
  408bea:	call   0xff9b602c
  408bef:	rol    DWORD PTR [esi+0x43e94113],1
  408bf5:	rol    BYTE PTR [edi],1
  408bf7:	inc    ecx
  408bf8:	mov    ebx,0x346ff59
  408bfd:	sar    bl,1
  408bff:	ds mov ch,0x2
  408c02:	call   0xff9b72fa
  408c07:	and    BYTE PTR [esi],ah
  408c09:	add    DWORD PTR [eax],eax
  408c0b:	mov    esp,0x0
	...
  408c18:	add    BYTE PTR [eax],al
  408c1a:	add    bh,ah
  408c1c:	imul   eax,DWORD PTR [ecx-0xadd3db],0xfbc0d516
  408c26:	mov    ecx,0x60bd0c3
  408c2b:	ins    DWORD PTR es:[edi],dx
  408c2c:	into   
  408c2d:	sub    BYTE PTR [eax+0x67fd6d60],ch
  408c33:	pusha  
  408c34:	add    eax,0x8053290b
  408c39:	shr    eax,0x60
  408c3c:	add    eax,0x58f24c7
  408c41:	add    cl,ch
  408c43:	pusha  
  408c44:	inc    edx
  408c45:	inc    ebp
  408c46:	aad    0xbc
  408c48:	add    al,BYTE PTR [eax]
  408c4a:	jmp    0xe9a9e659
  408c4f:	cli    
  408c50:	pop    ecx
  408c51:	imul   ebp,ecx,0x19f3bff3
  408c57:	sar    BYTE PTR [edi-0xc],cl
  408c5a:	sahf   
  408c5b:	xchg   esp,eax
  408c5c:	pop    edx
  408c5d:	push   eax
  408c5e:	sahf   
  408c5f:	or     dl,BYTE PTR [edx-0x1]
  408c62:	sbb    al,0x83
  408c64:	ins    DWORD PTR es:[edi],dx
  408c65:	iret   
  408c66:	pop    edi
  408c67:	addr16 add eax,0x3d0a000b
  408c6d:	add    al,0xe9
  408c6f:	inc    esi
  408c70:	add    BYTE PTR [eax],al
  408c72:	add    BYTE PTR [edx-0x5b],ah
  408c75:	sub    BYTE PTR [ecx-0x36],al
  408c78:	mov    edx,0xb7120c74
  408c7d:	mov    esi,0xff
	...
  408c8e:	or     eax,0x3fd08a91
  408c93:	mov    esp,?
  408c95:	imul   DWORD PTR ds:0x32524fba
  408c9b:	out    0xbe,eax
  408c9d:	dec    DWORD PTR [ebp-0x78]
  408ca0:	test   eax,esi
  408ca2:	inc    ebp
  408ca3:	mov    edx,0x7972e8fe
  408ca8:	(bad)  
  408ca9:	call   eax
  408cab:	add    eax,0x40947f68
  408cb0:	(bad)  
  408cb1:	inc    BYTE PTR [edi]
  408cb3:	mov    cl,0xf6
  408cb5:	jmp    FWORD PTR [ebp-0x48]
  408cb8:	xor    al,0x4b
  408cba:	xor    eax,DWORD PTR [edx-0x1]
  408cbd:	out    0x22,eax
  408cbf:	js     0x408cc0
  408cc1:	inc    ebx
  408cc3:	mov    fs,esp
  408cc5:	test   DWORD PTR [ebp-0x48],0x69920069
  408ccc:	xor    eax,0xb4b83a41
  408cd1:	lock add eax,0x77fffeb8
  408cd7:	dec    esp
  408cd8:	sub    BYTE PTR [ecx+0xa],al
  408cdb:	in     eax,dx
  408cdc:	sbb    DWORD PTR [edi-0x7a774833],edi
  408ce2:	push   ds
  408ce3:	mov    al,0xfe
  408ce5:	jmp    DWORD PTR [eax+0x14716801]
  408ceb:	inc    edx
  408cec:	(bad)  
  408ced:	(bad)  
  408cee:	xchg   edi,eax
  408cef:	mov    ah,0xf6
  408cf1:	inc    DWORD PTR [eax]
	...
  408cff:	add    BYTE PTR [eax],al
  408d01:	arpl   WORD PTR [edi+0x5e],bp
  408d04:	xor    eax,0xffc44528
  408d09:	mov    esp,0xccff9d82
  408d0e:	aad    0x87
  408d10:	loopne 0x408cde
  408d12:	iret   
  408d13:	pop    ebp
  408d14:	push   0x63
  408d16:	push   es
  408d17:	(bad)  
  408d18:	xor    eax,0xb55e6e22
  408d1d:	mov    bl,0xaf
  408d1f:	pop    ebp
  408d20:	jmp    DWORD PTR [ecx+edi*8+0x6e2228ca]
  408d27:	imul   ebx,esi,0xffffffd5
  408d2a:	mov    edi,0xb6e6895d
  408d2f:	push   ebp
  408d30:	inc    DWORD PTR [esp+eax*2+0x50eb6803]
  408d37:	(bad)  
  408d38:	push   DWORD PTR [ebp-0x47]
  408d3b:	push   edx
  408d3c:	imul   DWORD PTR [edi+esi*8+0x5d]
  408d40:	xor    eax,0xffc44518
  408d45:	inc    esp
  408d46:	cs popf 
  408d48:	call   DWORD PTR [ebp+edx*8-0x79]
  408d4c:	fcom   QWORD PTR [edi+edx*2+0x5d]
  408d50:	add    DWORD PTR [esi],0xa
  408d53:	push   esi
  408d54:	(bad)  
  408d55:	cmp    al,0x6e
  408d57:	xlat   BYTE PTR ds:[ebx]
  408d58:	fs loopne 0x408cfb
  408d5b:	jo     0x408d54
  408d5d:	sub    al,0x37
  408d5f:	add    al,0x74
  408d61:	xchg   ebx,ebp
  408d63:	sahf   
  408d64:	call   0x408d69
	...
  408d71:	add    BYTE PTR [eax],al
  408d73:	add    BYTE PTR [edi+eax*2],dl
  408d76:	pop    ebp
  408d77:	add    BYTE PTR [edi+0xcffebfb],cl
  408d7d:	inc    edi
  408d7e:	sahf   
  408d7f:	dec    DWORD PTR [esi-0x44fc949a]
  408d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d86:	pop    ebp
  408d87:	jmp    FWORD PTR [esi-0x13aa6afc]
  408d8d:	push   edi
  408d8e:	sahf   
  408d8f:	xlat   BYTE PTR ds:[ebx]
  408d90:	pop    esp
  408d91:	ins    DWORD PTR es:[edi],dx
  408d92:	ds pushf 
  408d94:	fcom   QWORD PTR [edi-0x72]
  408d97:	xchg   edi,eax
  408d98:	retf   
  408d99:	dec    edi
  408d9a:	xchg   BYTE PTR [ebp-0x34],bl
  408d9d:	shl    eax,1
  408d9f:	imul   ebx,DWORD PTR [edx],0xffffff9d
  408da2:	jbe    0x408e01
  408da4:	mov    esp,0xb4558591
  408da9:	push   edi
  408daa:	data16 xlat BYTE PTR ds:[ebx]
  408dac:	fs ins DWORD PTR es:[edi],dx
  408dae:	and    bl,BYTE PTR [esp+eiz*4-0x7c68a9a9]
  408db5:	dec    edi
  408db6:	dec    esi
  408db7:	pop    ebp
  408db8:	xchg   esp,eax
  408db9:	shl    eax,1
  408dbb:	imul   edi,DWORD PTR [esi],0xffffff9d
  408dbe:	ds pop ebp
  408dc0:	test   BYTE PTR [ecx+0x577c5515],dl
  408dc6:	xlat   BYTE PTR cs:[ebx]
  408dc8:	pop    esp
  408dc9:	ins    DWORD PTR es:[edi],dx
  408dca:	push   es
  408dcb:	pushf  
  408dcc:	ins    BYTE PTR es:[edi],dx
  408dcd:	push   edi
  408dce:	push   ds
  408dcf:	xchg   edi,eax
  408dd0:	jg     0x408e21
  408dd2:	push   ss
  408dd3:	pop    ebp
  408dd4:	dec    ebx
  408dd5:	sub    eax,0x5d52
	...
  408de6:	add    BYTE PTR [edi+edx*2+0x3c],dl
  408dea:	jo     0x408e40
  408dec:	push   edi
  408ded:	(bad)  
  408dee:	imul   esp,DWORD PTR [ebp-0x66],0xfffffff6
  408df2:	pop    esp
  408df3:	cmp    al,0x91
  408df5:	add    DWORD PTR [ebp+0x34],edx
  408df8:	push   edi
  408df9:	shl    eax,1
  408dfb:	jmp    0xee9d6c56
  408e00:	ficomp WORD PTR gs:[esp+ebx*1+0x6e]
  408e05:	loope  0x408d9f
  408e07:	adc    al,0x57
  408e09:	(bad)  
  408e0a:	xchg   esi,eax
  408e0b:	das    
  408e0c:	dec    edi
  408e0d:	mov    esi,0x58fb5c
  408e12:	jae    0x408db3
  408e14:	push   esi
  408e15:	push   DWORD PTR [eax+edx*4+0x4e]
  408e19:	jmp    DWORD PTR [esi-0x6ef82f71]
  408e1f:	dec    edi
  408e20:	push   edi
  408e21:	call   DWORD PTR [esi-0x690f6fc1]
  408e27:	aaa    
  408e28:	push   esi
  408e29:	call   0xff9778bb
  408e2e:	jle    0x408dcd
  408e30:	dec    esi
  408e31:	jmp    0xff96ab5d
  408e36:	outs   dx,BYTE PTR ds:[esi]
  408e37:	lea    ebx,[edx-0x18]
  408e3a:	pop    ss
  408e3b:	fadd   QWORD PTR ds:0xd223000
  408e41:	add    BYTE PTR [ebx+ebp*8+0x34258369],bh
  408e48:	jmp    0x408e49
  408e4a:	rol    BYTE PTR [eax],cl
	...
  408e58:	add    BYTE PTR [eax],al
  408e5a:	pop    esp
  408e5b:	push   esi
  408e5c:	jne    0x408e4f
  408e5e:	clc    
  408e5f:	dec    esi
  408e60:	mov    bh,0x36
  408e62:	pop    ds
  408e63:	mov    WORD PTR [ebp+0x2d],es
  408e66:	mov    BYTE PTR [edx+0x36],dh
  408e69:	test   al,0x60
  408e6b:	push   esi
  408e6c:	jne    0x408e5f
  408e6e:	clc    
  408e6f:	dec    esi
  408e70:	std    
  408e71:	push   ss
  408e72:	mov    edi,0xb70d7556
  408e77:	rol    BYTE PTR [edi],1
  408e79:	adc    DWORD PTR [ecx-0x65010063],eax
  408e7f:	inc    ebx
  408e80:	add    al,0xe9
  408e82:	cmc    
  408e83:	mov    ch,ah
  408e85:	push   0xe6f7359c
  408e8a:	mov    BYTE PTR [eax+0x56efdd45],cl
  408e90:	jne    0x408e77
  408e92:	mov    ecx,0x1e004b10
  408e97:	push   esi
  408e98:	out    0x0,eax
  408e9a:	push   ds
  408e9b:	lea    eax,[eax]
  408e9d:	add    BYTE PTR [ecx],dl
  408e9f:	ret    0x850e
  408ea2:	lock (bad) 
  408ea4:	(bad)  
  408ea5:	(bad)  
  408ea6:	mov    ebp,0xfa00f743
  408eab:	add    DWORD PTR [eax],eax
  408ead:	(bad)  
  408eae:	aas    
  408eaf:	mov    ch,0xfe
  408eb1:	pop    es
  408eb2:	retf   0x6a01
  408eb5:	add    BYTE PTR [eax+0x1],ah
  408eb8:	push   0x0
  408eba:	jo     0x408ebd
  408ebc:	lea    eax,[ebp+0x0]
	...
  408ecb:	add    BYTE PTR [eax],al
  408ecd:	dec    esi
  408ece:	xchg   ecx,eax
  408ecf:	mov    WORD PTR [ebp-0x14dc2],es
  408ed5:	pop    edx
  408ed6:	mov    edx,0x3445f874
  408edb:	sti    
  408edc:	call   0x411bad
  408ee1:	add    ecx,0xbc230573
  408ee7:	add    BYTE PTR [eax],al
  408ee9:	jp     0x408f54
  408eeb:	mov    ebx,0xff01bb28
  408ef0:	jne    0x408e78
  408ef2:	jmp    0xba864ccf
  408ef7:	mov    dl,al
  408ef9:	test   DWORD PTR [ebx-0x45ba080c],0x4f62524f
  408f03:	mov    ebp,0x858265ff
  408f08:	lock dec ebp
  408f0a:	mov    al,0xfe
  408f0c:	push   0x3a
  408f0e:	popa   
  408f0f:	out    dx,eax
  408f10:	or     ecx,DWORD PTR ss:[ecx]
  408f13:	push   DWORD PTR [ebp-0x147c6]
  408f19:	inc    ebp
  408f1a:	test   BYTE PTR [edx+0x29],0x7b
  408f1e:	or     eax,ebp
  408f20:	and    eax,0xff5a7963
  408f25:	jmp    0xed4c:0xcf75ee9
  408f2c:	(bad)  
  408f2d:	jl     0x408f6c
  408f2f:	adc    DWORD PTR [ecx+0x0],eax
	...
  408f3e:	add    BYTE PTR [eax],al
  408f40:	arpl   WORD PTR [ebx-0x5c130f70],bx
  408f46:	pop    edx
  408f47:	push   DWORD PTR [esi]
  408f49:	pop    ss
  408f4a:	sub    eax,0x2766341
  408f4f:	mov    ebp,0x858c7bdc
  408f54:	(bad)  
  408f55:	jnp    0x408fb1
  408f57:	(bad)  
  408f58:	cmp    DWORD PTR [esi-0x15],ebx
  408f5b:	in     eax,0x8d
  408f5d:	sbb    eax,0xcef6ff04
  408f62:	push   ecx
  408f63:	push   DWORD PTR [ebx+eiz*8-0x6285b4f1]
  408f6a:	add    ebp,eax
  408f6c:	mov    edx,0xeaff5a72
  408f71:	loope  0x408fdd
  408f73:	not    DWORD PTR [ebx+eax*8+0xf04ffec]
  408f7a:	adc    DWORD PTR [ecx+0x63],eax
  408f7d:	adc    edx,DWORD PTR [eax+0x5a1b74f0]
  408f83:	jmp    FWORD PTR [esi]
  408f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f86:	sub    al,0x41
  408f88:	arpl   si,si
  408f8a:	dec    ebp
  408f8b:	mov    esp,0x858bf364
  408f90:	inc    ebx
  408f91:	repz pop ecx
  408f93:	jmp    esi
  408f95:	call   0xb8d86c8
  408f9a:	mov    bl,0x67
  408f9c:	cmp    BYTE PTR [esp+eax*8+0x53113dff],bl
  408fa3:	test   DWORD PTR [eax],0x0
	...
  408fb1:	add    BYTE PTR [eax],al
  408fb3:	xor    al,0x63
  408fb5:	pop    ecx
  408fb6:	xor    eax,0xc3100598
  408fbb:	and    al,0x6c
  408fbd:	xchg   ecx,eax
  408fbe:	cwde   
  408fbf:	sbb    al,0x54
  408fc1:	loop   0x409006
  408fc3:	(bad)  
  408fc4:	out    dx,al
  408fc5:	imul   edx,DWORD PTR [edi+0x59c65c37],0x58d8da5f
  408fcf:	xor    eax,DWORD PTR [esp+ebp*2-0x51ac13c8]
  408fd6:	mov    ah,0x4
  408fd8:	ficomp DWORD PTR [edi+0x59]
  408fdb:	in     al,0x5f
  408fdd:	cmc    
  408fde:	or     al,0xa3
  408fe0:	fsubr  st,st(6)
  408fe2:	mov    bl,0xbc
  408fe4:	fisttp QWORD PTR [edi+0x59]
  408fe7:	int3   
  408fe8:	dec    ebx
  408fe9:	ins    BYTE PTR es:[edi],dx
  408fea:	cmp    ah,cl
  408fec:	push   ebx
  408fed:	jle    0x408fde
  408fef:	mov    esp,0xde86e953
  408ff4:	xor    al,0x76
  408ff6:	pop    ecx
  408ff7:	lods   al,BYTE PTR ds:[esi]
  408ff8:	mov    ah,0xd0
  408ffa:	pop    ebx
  408ffb:	ins    DWORD PTR es:[edi],dx
  408ffc:	(bad)  
  408ffd:	call   0x5e95665a
  409002:	pop    ecx
  409003:	xchg   esp,eax
  409004:	push   ebx
  409005:	adc    al,0xcd
  409007:	cmp    eax,esi
  409009:	call   0x3ed1b979
  40900e:	pop    ecx
  40900f:	jmp    0x6a53:0x74511189
  409016:	xchg   edi,eax
	...
  409023:	add    BYTE PTR [eax],al
  409025:	add    BYTE PTR [edi+0x6359265b],al
  40902b:	add    al,0x65
  40902d:	jge    0x409092
  40902f:	add    eax,0x621684e9
  409034:	push   ss
  409035:	pop    ecx
  409036:	dec    esp
  409037:	push   es
  409038:	idiv   BYTE PTR [edi-0x2b]
  40903b:	add    eax,0x90e003e9
  409040:	add    BYTE PTR [ecx],al
  409042:	xchg   edx,eax
  409043:	push   edx
  409044:	(bad)  
  409045:	jmp    0xe9c219a5
  40904a:	pusha  
  40904b:	add    eax,0x6260f968
  409050:	mov    esi,0xe80b25d6
  409055:	js     0x409034
  409057:	push   edx
  409058:	inc    esi
  40905a:	aad    0x61
  40905c:	idiv   DWORD PTR [esi-0x1e8aad65]
  409062:	mov    BYTE PTR [eax-0x4b],ch
  409065:	scas   al,BYTE PTR es:[edi]
  409066:	mov    edx,DWORD PTR [edx-0x4b]
  409069:	xchg   ecx,eax
  40906a:	xchg   ebx,eax
  40906b:	push   edx
  40906c:	call   FWORD PTR [esi-0x4117f553]
  409072:	in     eax,0x52
  409074:	dec    DWORD PTR [esi-0x79089623]
  40907a:	sub    edx,DWORD PTR [edx+0x75]
  40907d:	icebp  
  40907e:	dec    eax
  40907f:	cmp    al,0xb5
  409081:	jbe    0x40909e
  409083:	push   edx
  409084:	mov    ch,0x8d
  409086:	adc    edx,DWORD PTR [edx-0x1]
  409089:	data16 add BYTE PTR [eax],al
	...
  409098:	add    BYTE PTR [ebp-0x123f17f6],dl
  40909e:	push   edx
  40909f:	call   DWORD PTR [esi-0x1b]
  4090a2:	test   DWORD PTR gs:[esi+0x2b],0xf8f17552
  4090aa:	lahf   
  4090ab:	mov    ch,0x3e
  4090ad:	sbb    eax,DWORD PTR [esi+0x521311bd]
  4090b3:	(bad)  
  4090b4:	jmp    0x64c38055
  4090b9:	xor    BYTE PTR [edx-0x1],bl
  4090bc:	push   ds
  4090bd:	pop    esp
  4090be:	fst    DWORD PTR [ecx]
  4090c0:	(bad)  
  4090c1:	aad    0x2d
  4090c3:	test   DWORD PTR [esi],0x3052ab
  4090c9:	pop    ebp
  4090ca:	inc    ebx
  4090cb:	pop    es
  4090cc:	call   0x4013e4
  4090d1:	popa   
  4090d2:	add    BYTE PTR [edx+0x0],ch
  4090d5:	cmp    eax,0x5fe80740
  4090da:	je     0x4090db
  4090dc:	(bad)  
  4090dd:	cmp    eax,0x2df7e474
  4090e2:	mov    edx,0xb9f289e7
  4090e7:	(bad)  
  4090e8:	inc    DWORD PTR [edi-0x42000923]
  4090ee:	loopne 0x40916d
  4090f0:	mov    eax,0xb5feb9ad
  4090f5:	and    al,dl
  4090f7:	(bad)  
  4090f8:	call   edx
  4090fa:	xor    eax,0xffb7
	...
  40910b:	add    ch,bh
  40910d:	mov    ecx,0xb9f5e0b4
  409112:	(bad)  
  409113:	call   0x40027a
  409118:	fnsave [ebx-0x28]
  40911b:	idiv   DWORD PTR ds:0x725de7ba
  409121:	mov    edx,0xb977fffe
  409126:	idiv   bh
  409128:	cmp    eax,0x3db851e1
  40912d:	mov    edx,0xe03245fe
  409132:	aam    0xfd
  409134:	sbb    eax,0x1e75feba
  409139:	loope  0x4090d6
  40913b:	mov    cl,BYTE PTR [edx-0x7d3d36fb]
  409141:	add    eax,0x862e8b55
  409146:	(bad)  
  409147:	cld    
  409148:	rol    BYTE PTR ds:0x367d0d6a,1
  40914e:	pop    es
  40914f:	call   0xffd113b7
  409154:	dec    esp
  409155:	out    0xc0,al
  409157:	sti    
  409158:	mov    ebx,0x63410e1c
  40915d:	dec    edi
  40915e:	rol    BYTE PTR [edi],1
  409160:	dec    ebx
  409161:	ficom  DWORD PTR [edi-0x1]
  409164:	sub    al,0x60
  409166:	sar    bl,1
  409168:	and    al,0xb2
  40916a:	or     ebp,eax
  40916c:	in     al,dx
  40916d:	jns    0x4091c5
  40916f:	inc    DWORD PTR [eax]
	...
  40917d:	add    BYTE PTR [eax],al
  40917f:	sub    bl,BYTE PTR [ebp-0x1c480001]
  409185:	sbb    WORD PTR [edi],0x4e9b
  40918a:	(bad)  
  40918b:	cld    
  40918c:	loope  0x40914d
  40918e:	sti    
  40918f:	xchg   ebx,eax
  409190:	xchg   edi,eax
  409191:	ror    BYTE PTR [ebx],1
  409193:	in     al,dx
  409194:	pop    ecx
  409195:	retf   0xa228
  409198:	pop    esi
  409199:	imul   edx,DWORD PTR [edx-0x17],0x5e
  40919d:	add    ecx,DWORD PTR [ebx]
  40919f:	mov    ds:0x615f8067,eax
  4091a4:	pop    esi
  4091a5:	add    eax,edi
  4091a7:	push   ds
  4091a8:	xchg   BYTE PTR [ebx],al
  4091aa:	add    BYTE PTR [ebx+0x5e],ah
  4091ad:	ds inc ebp
  4091af:	scas   eax,DWORD PTR es:[edi]
  4091b0:	xlat   BYTE PTR ds:[ebx]
  4091b1:	std    
  4091b2:	jmp    FWORD PTR [esp+eax*1+0x34636a04]
  4091b9:	add    ebp,DWORD PTR [edx+0x63]
  4091bc:	loope  0x40917d
  4091be:	repz xor ebp,ecx
  4091c1:	jg     0x4091b7
  4091c3:	xchg   esp,eax
  4091c4:	mov    edi,0x91845055
  4091c9:	pop    ebx
  4091ca:	push   esi
  4091cc:	adc    DWORD PTR [ebx+0x24],ebp
  4091cf:	jmp    0xa34b9532
  4091d4:	call   0x3eb:0x541e900
  4091db:	arpl   bp,bx
  4091dd:	pop    esp
  4091de:	sub    esp,DWORD PTR [edx+0xd01605]
	...
  4091f0:	add    BYTE PTR [eax],al
  4091f2:	pop    eax
  4091f3:	pop    ebp
  4091f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091f5:	call   0x89ee:0x33725044
  4091fc:	cmc    
  4091fd:	dec    ebp
  4091fe:	xor    al,0x50
  409200:	cdq    
  409201:	mov    cl,0x44
  409203:	xor    DWORD PTR [edx],0x6c7e2456
  409209:	push   esp
  40920a:	adc    al,0x50
  40920c:	fiadd  WORD PTR [edi+0x55de40de]
  409212:	or     al,0xb5
  409214:	inc    eax
  409215:	fimul  DWORD PTR [ebp-0x3a]
  409218:	call   0xb6954871
  40921d:	push   ebp
  40921e:	hlt    
  40921f:	dec    edi
  409220:	cld    
  409221:	enter  0xc63b,0xe8
  409225:	imul   edx,ebp,0xffffff8a
  409228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409229:	push   ebp
  40922a:	jmp    0x34f:0xd44d8589
  409231:	add    al,0x3b
  409233:	jne    0x40920b
  409235:	ret    0x4ec4
  409238:	cmp    al,0x54
  40923a:	mov    ah,0x4f
  40923c:	jle    0x409293
  40923e:	outs   dx,BYTE PTR ds:[esi]
  40923f:	mov    esp,0x67acc2bf
  409244:	stc    
  409245:	cdq    
  409246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409247:	dec    edi
  409248:	jo     0x4092c9
  40924a:	(bad)  
  40924b:	push   edi
  40924c:	pop    esi
  40924d:	push   ebp
  40924e:	or     DWORD PTR ds:0xc6546ec1,eax
  409254:	call   0x4092ad
	...
  409265:	into   
  409266:	push   esp
  409267:	ds push ebp
  409269:	jl     0x4092ba
  40926b:	hlt    
  40926c:	enter  0xc64b,0xff
  409270:	call   0x2efa456d
  409275:	push   cs
  409276:	jle    0x4091fd
  409278:	adc    DWORD PTR [esi+0x6093ff4e],ebp
  40927e:	fstp   QWORD PTR [edi-0x1b0de22]
  409284:	push   esp
  409285:	scas   eax,DWORD PTR es:[edi]
  409286:	push   esi
  409287:	inc    DWORD PTR [esi]
  409289:	xchg   esi,eax
  40928a:	sbb    BYTE PTR [ebx-0x30],cl
  40928d:	and    DWORD PTR [edi-0x19],ecx
  409290:	mov    ebp,0x60ff4eca
  409295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409296:	gs mul esi
  409299:	mov    bh,0x80
  40929b:	test   ecx,eax
  40929d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40929e:	dec    esi
  40929f:	(bad)  
  4092a0:	cmp    edi,edi
  4092a2:	imul   esi,DWORD PTR [edi],0x28
  4092a5:	pop    edi
  4092a6:	dec    esi
  4092a7:	mov    ch,0xb9
  4092a9:	scas   eax,DWORD PTR es:[edi]
  4092aa:	dec    esi
  4092ab:	(bad)  
  4092ac:	mov    esi,0x2828ba65
  4092b1:	addr16 pop ebp
  4092b3:	adc    DWORD PTR [ebx-0x71],esi
  4092b6:	dec    esi
  4092b7:	or     ebp,DWORD PTR [ecx+0x5c82f3ac]
  4092bd:	cwde   
  4092be:	push   esi
  4092bf:	call   DWORD PTR [esi-0x71f62634]
  4092c5:	jo     0x409345
  4092c7:	test   DWORD PTR [ebp+0x0],esp
	...
  4092d5:	add    BYTE PTR [eax],al
  4092d7:	add    BYTE PTR [edi],ch
  4092d9:	dec    esi
  4092da:	call   DWORD PTR [edx-0x6a7ab996]
  4092e0:	pop    ds
  4092e1:	dec    esi
  4092e2:	call   esp
  4092e4:	pusha  
  4092e5:	add    eax,0x3308b900
  4092ea:	mov    dh,0x5e
  4092ec:	das    
  4092ed:	add    BYTE PTR [ebp-0xb1e0c7],0xb9
  4092f4:	js     0x409279
  4092f6:	aaa    
  4092f7:	add    bl,cl
  4092f9:	add    bh,bh
  4092fb:	mov    ch,0x3a
  4092fd:	sar    esi,0xff
  409300:	xor    eax,0xbb294aff
  409305:	add    ch,al
  409307:	int    0xc3
  409309:	mov    ecx,0x3e8a0bfe
  40930e:	adc    al,BYTE PTR [ebx-0x8ed49]
  409314:	push   ebp
  409315:	dec    esi
  409316:	je     0x409322
  409318:	repnz mov es,WORD PTR gs:[ebp-0x13eb2]
  409320:	popa   
  409321:	cld    
  409322:	mov    BYTE PTR [ebp-0x13eb2],0xa
  409329:	add    al,BYTE PTR [eax]
  40932b:	add    BYTE PTR [edx-0x4f],bl
  40932e:	lea    esi,[esi-0x427d4dcb]
  409334:	push   ds
  409335:	stos   BYTE PTR es:[edi],al
  409336:	(bad)  
  409337:	dec    DWORD PTR [edx]
  409339:	ss add DWORD PTR ds:[eax],0x0
	...
  40934a:	add    BYTE PTR [edi+0xd],dh
  40934d:	idiv   edi
  40934f:	mov    ch,0x6
  409351:	jne    0x409389
  409353:	mov    al,ds:0x16858d09
  409358:	stos   BYTE PTR es:[edi],al
  409359:	(bad)  
  40935a:	call   FWORD PTR [edx-0x121b4b4e]
  409360:	mov    cl,0xfe
  409362:	call   0x3fb15f
  409367:	mov    cl,0xc1
  409369:	jae    0x409374
  40936b:	dec    ecx
  40936c:	je     0x40933a
  40936e:	div    DWORD PTR ds:0x8f74ffb2
  409374:	mov    dl,0xb4
  409376:	in     al,0x3d
  409378:	mov    dl,0xfe
  40937a:	call   0x3fff59
  40937f:	arpl   WORD PTR [edi],bx
  409381:	mov    esp,esp
  409383:	mov    WORD PTR [esi+0x5c630052],?
  409389:	add    eax,DWORD PTR [ebx-0xa5384a]
  40938f:	ins    BYTE PTR es:[edi],dx
  409390:	pop    ebx
  409391:	xlat   BYTE PTR ds:[ebx]
  409392:	push   0xffffffe0
  409394:	loopne 0x4093f5
  409396:	neg    DWORD PTR [esp+0x4]
  40939a:	je     0x40935d
  40939c:	fist   WORD PTR [eax+0x52f454e8]
  4093a2:	add    bh,cl
  4093a4:	xchg   ebp,eax
  4093a5:	fild   DWORD PTR [ecx]
  4093a7:	arpl   bx,si
  4093a9:	xchg   ecx,eax
  4093aa:	jmp    FWORD PTR [esi+0xa75b56]
	...
  4093bc:	add    BYTE PTR [eax],al
  4093be:	icebp  
  4093bf:	push   ebx
  4093c0:	push   edx
  4093c1:	(bad)  
  4093c2:	out    dx,al
  4093c3:	dec    edx
  4093c4:	pop    edx
  4093c5:	call   FWORD PTR [esp+eiz*2]
  4093c8:	fadd   DWORD PTR [edi]
  4093ca:	or     ebp,DWORD PTR [eax-0x6b]
  4093cd:	dec    DWORD PTR [esp+esi*1]
  4093d0:	cwde   
  4093d1:	call   0xff92cfe2
  4093d6:	jbe    0x40942e
  4093d8:	pop    ebx
  4093d9:	in     eax,dx
  4093da:	mov    cl,0x8b
  4093dc:	push   edx
  4093dd:	push   DWORD PTR [esi-0x1b00a55e]
  4093e3:	fwait
  4093e4:	cwde   
  4093e5:	in     al,0xd4
  4093e7:	mov    ds:0x564eff52,eax
  4093ec:	pop    ebx
  4093ed:	lods   eax,DWORD PTR ds:[esi]
  4093ee:	adc    DWORD PTR [edx+edx*2-0x1],esi
  4093f2:	push   cs
  4093f3:	fwait
  4093f4:	pop    edx
  4093f5:	(bad)  
  4093f6:	mov    esp,0xcb07d883
  4093fb:	cmc    
  4093fc:	xchg   ebp,eax
  4093fd:	jmp    FWORD PTR [ebx+edx*8-0x24531f69]
  409404:	push   ecx
  409405:	call   DWORD PTR [esi]
  409407:	add    eax,0x97d65bf1
  40940c:	pop    esi
  40940d:	push   edx
  40940e:	mov    WORD PTR [edx+0x4c845a4d],ss
  409414:	inc    ecx
  409415:	dec    edx
  409416:	mov    dh,0x4c
  409418:	inc    esi
  409419:	push   edx
  40941a:	scas   al,BYTE PTR es:[edi]
  40941b:	pop    ecx
  40941c:	ss push edx
  40941e:	ins    BYTE PTR es:[edi],dx
  40941f:	pop    ebp
  409420:	jne    0x4093ba
	...
  40942e:	add    BYTE PTR [eax],al
  409430:	add    BYTE PTR [esp+ecx*2+0x2e],ah
  409434:	cwde   
  409435:	dec    ebx
  409436:	push   esp
  409437:	es push edx
  409439:	dec    ebx
  40943a:	xchg   esi,eax
  40943b:	push   esp
  40943c:	push   edx
  40943d:	dec    esp
  40943e:	dec    esp
  40943f:	pop    esp
  409440:	arpl   WORD PTR [esp+ecx*2+0xe],cx
  409444:	pop    ebx
  409445:	add    eax,0x34520692
  40944a:	xchg   edx,eax
  40944b:	stc    
  40944c:	pop    ecx
  40944d:	sub    al,0x4c
  40944f:	add    DWORD PTR [esi-0x12],ebp
  409452:	dec    ebx
  409453:	out    dx,al
  409454:	push   ecx
  409455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409456:	dec    ebp
  409457:	rcl    BYTE PTR [esi+edx*1-0x69ae21b4],1
  40945e:	dec    ecx
  40945f:	shl    DWORD PTR [edi-0x24],0x4
  409463:	jmp    0xe93db5a2
  409468:	mov    dh,0xe9
  40946a:	pop    eax
  40946b:	push   0x48
  40946d:	neg    esi
  40946f:	call   0x348ceb51
  409474:	cld    
  409475:	les    ebx,FWORD PTR [ecx+0x7dd4515b]
  40947b:	and    al,0x50
  40947d:	cmp    eax,DWORD PTR ds:0xdd0560e9
  409483:	mov    WORD PTR [edx],ds
  409485:	and    al,BYTE PTR ds:0xc66dfb11
  40948b:	call   0x3dcae0
  409490:	or     BYTE PTR [ebp+ebp*1+0x6eff],0x0
	...
  4094a4:	sbb    al,0xc2
  4094a6:	idiv   DWORD PTR [ecx-0x57c94948]
  4094ac:	pusha  
  4094ad:	fst    QWORD PTR [esi]
  4094af:	push   ds
  4094b0:	mov    al,ds:0xbe14fe4b
  4094b5:	sbb    al,0x41
  4094b7:	jmp    0x3ef843d4
  4094bc:	adc    al,BYTE PTR [eax]
  4094be:	sar    BYTE PTR [ebp+0x35457e3a],0x3f
  4094c5:	push   es
  4094c6:	add    BYTE PTR [esi],dl
  4094c8:	icebp  
  4094c9:	dec    edx
  4094ca:	jne    0x4094bd
  4094cc:	test   al,0x92
  4094ce:	mov    cl,0x16
  4094d0:	mov    dl,0x4a
  4094d2:	jne    0x4094e5
  4094d4:	xchg   edx,eax
  4094d5:	shl    bl,1
  4094d7:	push   es
  4094d8:	or     al,0x3
  4094da:	call   0xff8b64fd
  4094df:	test   BYTE PTR ds:0xf5d1e857,0x4a
  4094e6:	call   DWORD PTR [ecx-0x3a]
  4094e9:	adc    eax,DWORD PTR [ecx-0x17]
  4094ec:	mov    bl,0xd0
  4094ee:	pop    es
  4094ef:	shl    DWORD PTR [edx-0x6c3100b7],0xd0
  4094f6:	sti    
  4094f7:	(bad)  
  4094f8:	or     eax,0xd53fe803
  4094fd:	dec    edx
  4094fe:	jmp    DWORD PTR [eax+0x1400019e]
  409504:	pop    esi
  409505:	pop    ecx
  409506:	sub    DWORD PTR [ebp+0x0],0x0
	...
  409515:	add    BYTE PTR [eax],al
  409517:	and    al,0xdf
  409519:	call   DWORD PTR [edx]
  40951b:	bound  ecx,QWORD PTR [edx+0x75]
  40951e:	loope  0x409548
  409520:	daa    
  409521:	mov    dl,0x8e
  409523:	adc    edi,DWORD PTR [ebp+eax*2+0x0]
  409527:	fisubr WORD PTR [esi]
  409529:	(bad)  
  40952a:	(bad)  
  40952b:	fnsave [eax+ebp*2-0x54]
  40952f:	in     eax,0x47
  409531:	jmp    DWORD PTR [edi+0x52]
  409534:	in     eax,dx
  409535:	inc    eax
  409536:	add    ch,bh
  409538:	xor    al,BYTE PTR [edi]
  40953a:	call   0x3fb46f
  40953f:	sub    eax,0x97fffb33
  409544:	dec    esi
  409545:	out    0x43,eax
  409547:	clc    
  409548:	mov    ah,0xfe
  40954a:	leave  
  40954b:	cmp    BYTE PTR [edx],al
  40954d:	add    BYTE PTR [ebp+0x1],dl
  409550:	stos   BYTE PTR es:[edi],al
  409551:	add    ah,0x8e
  409554:	sub    bh,bh
  409556:	imul   ebx,DWORD PTR [edx-0x4b],0xdd720874
  40955d:	mov    al,0xff
  40955f:	ins    DWORD PTR es:[edi],dx
  409560:	iret   
  409561:	inc    esp
  409562:	cld    
  409563:	loop   0x40956a
  409565:	add    bh,ch
  409567:	pushf  
  409568:	shl    DWORD PTR cs:[edi],0xfb
  40956c:	add    eax,0x46e5c768
  409571:	(bad)  
  409572:	(bad)  
  409573:	xchg   edi,eax
  409574:	dec    esi
  409575:	out    0xaf,eax
  409577:	and    edi,DWORD PTR [edx+0x6afe]
	...
  409589:	add    dl,bh
  40958b:	sub    eax,0x13b3803
  409590:	push   0xff4055ea
  409595:	(bad)  
  409596:	test   DWORD PTR [esi-0x5205bed8],0xb9adb795
  4095a0:	or     al,al
  4095a2:	xchg   esi,eax
  4095a3:	sbb    eax,0x40b5e068
  4095a8:	dec    DWORD PTR [edi-0xe]
  4095ab:	data16 mov bh,0xff
  4095ae:	arpl   WORD PTR [ebx-0x4c],si
  4095b1:	arpl   WORD PTR [si+0x5e],bx
  4095b5:	mov    esi,0x41179e4b
  4095ba:	arpl   sp,bp
  4095bc:	dec    esi
  4095bd:	jne    0x40961a
  4095bf:	test   BYTE PTR [edx],bl
  4095c1:	fstp   DWORD PTR [edx+ebx*8-0x1d30a9a5]
  4095c8:	dec    esi
  4095c9:	call   DWORD PTR [esi]
  4095cb:	test   al,0x4e
  4095cd:	jne    0x40962a
  4095cf:	les    edi,FWORD PTR [ecx+esi*4]
  4095d2:	jl     0x40958e
  4095d4:	cmp    al,0xc2
  4095d6:	pop    edi
  4095d7:	pop    esp
  4095d8:	mov    eax,0x47de7f8a
  4095dd:	cld    
  4095de:	or     eax,0xcaffd96b
  4095e3:	sub    eax,0xf66b754e
  4095e8:	fidiv  DWORD PTR [eax+0x457ce84c]
	...
  4095fa:	add    BYTE PTR [eax],al
  4095fc:	add    BYTE PTR [edi-0x1c],al
  4095ff:	sbb    BYTE PTR [ebx+ecx*4-0x63],ah
  409603:	add    ecx,DWORD PTR [ebx+0x411b7676]
  409609:	arpl   si,bx
  40960b:	push   cs
  40960c:	add    BYTE PTR [edi+0x5b0fdba3],ch
  409612:	popf   
  409613:	add    edx,DWORD PTR [edi+0xb]
  409616:	outs   dx,DWORD PTR ds:[esi]
  409617:	test   DWORD PTR [eax],eax
  409619:	arpl   WORD PTR [ebx+0x43],dx
  40961c:	je     0x40965c
  40961e:	or     BYTE PTR [ebx+edx*8-0x42],bl
  409622:	aaa    
  409623:	dec    esi
  409624:	push   0xffc5065a
  409629:	pushf  
  40962a:	ss push ecx
  40962c:	mov    bh,0xe4
  40962e:	(bad)  
  40962f:	mov    bl,0x67
  409631:	arpl   WORD PTR [esi+0x5e],bx
  409634:	mov    esi,0xd8a60533
  409639:	fs pop ebp
  40963b:	ret    
  40963c:	cmp    ah,al
  40963e:	dec    eax
  40963f:	sbb    DWORD PTR [edx-0x10],0x625a8e48
  409646:	mov    edi,0xd2630d68
  40964b:	add    ch,0xa8
  40964e:	adc    al,0xa9
  409650:	mov    WORD PTR [eax+ecx*2-0x686eb192],ds
  409657:	and    DWORD PTR [edi],eax
  409659:	push   ss
  40965a:	xchg   edx,eax
  40965b:	pop    esi
  40965c:	fmul   DWORD PTR [eax+0xfbdc48]
	...
  40966e:	add    BYTE PTR [eax],al
  409670:	test   al,al
  409672:	xchg   edi,eax
  409673:	dec    esi
  409674:	je     0x40961e
  409676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409677:	cmp    al,0xa1
  409679:	add    ecx,ebp
  40967b:	mov    eax,0x476a59d9
  409680:	pop    edi
  409681:	fucomi st,st(0)
  409683:	fnstenv [edx+0x48]
  409686:	pushf  
  409687:	sti    
  409688:	inc    esp
  409689:	pop    esi
  40968a:	pop    ecx
  40968b:	dec    esi
  40968c:	inc    esp
  40968d:	jle    0x40963b
  40968f:	dec    edi
  409690:	retf   
  409691:	add    eax,0xdcf55ee9
  409696:	ror    DWORD PTR [ebx],cl
  409698:	mov    ds:0x6b279105,al
  40969d:	(bad)  
  40969e:	call   0x13e2cf1
  4096a3:	xchg   esp,eax
  4096a4:	cmp    ecx,DWORD PTR [eax-0x1a]
  4096a7:	dec    ebp
  4096a8:	xchg   esi,eax
  4096a9:	dec    ecx
  4096aa:	(bad)  
  4096ac:	pop    esp
  4096ad:	pop    ebp
  4096ae:	jecxz  0x409642
  4096b0:	cld    
  4096b1:	inc    edi
  4096b2:	mov    al,ds:0x1c055f42
  4096b7:	jns    0x4096b8
  4096b9:	test   DWORD PTR [ebp+0x47ec30],esp
  4096bf:	mov    dh,0x5c
  4096c1:	ret    0x19fb
  4096c4:	ror    BYTE PTR es:[ebx],cl
  4096c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096c8:	je     0x409686
  4096ca:	sub    BYTE PTR [eax],ch
  4096cc:	pop    edi
  4096cd:	pop    ebp
  4096ce:	int    0x6c
  4096d0:	addr16 add eax,0xa90b
	...
  4096e2:	add    BYTE PTR [esi+0x60e8a180],dh
  4096e8:	add    eax,0x51724c7
  4096ed:	add    cl,ch
  4096ef:	pusha  
  4096f0:	inc    eax
  4096f1:	inc    ebp
  4096f2:	jne    0x40971a
  4096f4:	add    BYTE PTR [eax],al
  4096f6:	jmp    0xe9a9dea5
  4096fb:	stos   BYTE PTR es:[edi],al
  4096fc:	inc    edi
  4096fd:	imul   ebp,ecx,0xb9f3c1fd
  409703:	cmc    
  409704:	xor    esp,0x50481e3e
  40970a:	mov    WORD PTR ds:[edi-0x1],cs
  40970e:	mov    esp,0x649f5dac
  409713:	pop    edi
  409714:	add    eax,0x22b290b
  409719:	jmp    0x45f8a3
  40971e:	sub    esp,0xa7e9411d
  409724:	ror    BYTE PTR [ebx],1
  409726:	adc    DWORD PTR [ecx-0xf010071],esp
  40972c:	jnp    0x4096fe
  40972e:	fs in  al,0x51
  409731:	imul   esi
  409733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409734:	mov    ch,0x51
  409736:	shl    edx,1
  409738:	(bad)  
  409739:	(bad)  
  40973a:	fimul  WORD PTR [ecx-0x50210f80]
  409740:	inc    esi
  409741:	call   0xff876b27
	...
  409756:	nop
  409757:	add    DWORD PTR [eax+0x4a],ebp
  40975a:	bound  eax,QWORD PTR [edx-0x1]
  40975d:	(bad)  
  40975e:	pop    edi
  40975f:	mov    dl,0xf6
  409761:	inc    DWORD PTR ds:0xb34b34ba
  409767:	inc    ebx
  409768:	jmp    edi
  40976a:	shl    BYTE PTR [eax-0x1],cl
  40976d:	inc    DWORD PTR [ebx+0x7f]
  409770:	in     al,0xf7
  409772:	in     eax,0xb9
  409774:	imul   eax,DWORD PTR [eax],0x4137fb52
  40977a:	mov    edx,0x1df0b4b9
  40977f:	mov    ecx,0x8dcffffe
  409784:	sub    BYTE PTR [ecx+0x7a],al
  409787:	stos   BYTE PTR es:[edi],al
  409788:	jmp    0x88f9bd42
  40978d:	test   DWORD PTR [esi],esp
  40978f:	mov    cl,0xfe
  409791:	jmp    DWORD PTR [eax+0x62416802]
  409797:	inc    edx
  409798:	(bad)  
  409799:	(bad)  
  40979a:	out    dx,eax
  40979b:	mov    cl,0xf6
  40979d:	call   DWORD PTR [ebp+0x634b34b9]
  4097a3:	inc    edx
  4097a4:	jmp    edi
  4097a6:	xchg   esi,eax
  4097a7:	outs   dx,DWORD PTR ds:[esi]
  4097a8:	(bad)  
  4097a9:	call   ebx
  4097ab:	jg     0x409795
  4097ad:	not    DWORD PTR [ebp-0x47]
  4097b0:	mov    WORD PTR [ebp-0x14e7a],es
  4097b6:	retf   0x5229
  4097b9:	cmp    BYTE PTR [eax],al
	...
  4097c7:	add    BYTE PTR [eax],al
  4097c9:	sti    
  4097ca:	add    edi,edi
  4097cc:	mov    ch,0x1a
  4097ce:	mov    dl,0xfe
  4097d0:	inc    DWORD PTR ds:0x3b294af0
  4097d6:	add    eax,ebp
  4097d8:	test   eax,0xbfeb9ef
  4097dd:	arpl   WORD PTR [eax+edx*8+0x2878e018],bx
  4097e4:	imul   esp
  4097e6:	add    BYTE PTR ds:[ebp+0x53],dh
  4097ea:	xchg   DWORD PTR [edi+ecx*4],edx
  4097ed:	out    0x3b,al
  4097ef:	push   ebx
  4097f0:	call   esp
  4097f2:	jmp    0x40984f
  4097f4:	jbe    0x409807
  4097f6:	lahf   
  4097f7:	dec    ebx
  4097f8:	jmp    0x409869
  4097fa:	push   ebx
  4097fb:	inc    ebx
  4097fc:	je     0x409863
  4097fe:	or     al,0x5c
  409800:	push   0xfffffff1
  409802:	jbe    0x40984f
  409804:	(bad)  
  409805:	out    0x7b,al
  409807:	push   ebx
  409808:	jmp    DWORD PTR [eax+esi*1-0x249cfffd]
  40980f:	mov    ah,ah
  409811:	mov    esi,ss
  409813:	dec    edx
  409814:	add    BYTE PTR [edi],dl
  409816:	xchg   DWORD PTR [esi+0x4aae77bd],eax
  40981c:	jmp    DWORD PTR [ebx+0x28]
  40981f:	mov    ecx,0x52c3b682
  409824:	jmp    FWORD PTR [ebx+ebx*2-0x31]
  409828:	inc    esp
  409829:	sti    
  40982a:	pop    ebx
  40982b:	add    ebp,edi
	...
  409839:	add    BYTE PTR [eax],al
  40983b:	add    BYTE PTR ds:0x4b07d0fc,bl
  409841:	out    dx,al
  409842:	cdq    
  409843:	dec    DWORD PTR [esp+ebp*8-0x70]
  409847:	in     al,dx
  409848:	dec    esp
  409849:	and    al,0x4b
  40984b:	push   DWORD PTR [esi+0x4155b26]
  409851:	adc    al,0x4b
  409853:	push   esi
  409855:	push   ss
  409856:	push   ebx
  409857:	jmp    DWORD PTR [esp+eax*2]
  40985a:	rol    BYTE PTR [edi],1
  40985c:	or     esi,DWORD PTR [edx+ebx*4]
  40985f:	call   DWORD PTR [esp+esi*1]
  409862:	nop
  409863:	in     al,0x14
  409865:	push   es
  409866:	out    0x4a,al
  409868:	add    al,0xbb
  40986a:	lock pop ebx
  40986c:	cli    
  40986d:	jae    0x409845
  40986f:	dec    edx
  409870:	hlt    
  409871:	jp     0x40983c
  409873:	push   edx
  409874:	in     al,dx
  409875:	inc    esp
  409876:	(bad)  
  409877:	rcr    BYTE PTR [ebp+ebp*1+0x70],1
  40987b:	cdq    
  40987c:	fadd   QWORD PTR [esi+esi*4-0x70]
  409880:	mov    edi,0xbb4aae3c
  409885:	cmp    bl,BYTE PTR [eax+0x4a]
  409888:	les    eax,FWORD PTR [esp+edx*2+0x57]
  40988c:	mov    ah,0x44
  40988e:	xchg   esi,eax
  40988f:	pop    ebx
  409890:	leave  
  409891:	jbe    0x409821
  409893:	dec    edx
  409894:	lods   al,BYTE PTR ds:[esi]
  409895:	jp     0x409828
  409897:	push   edx
  409898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409899:	inc    esp
  40989a:	xchg   ecx,eax
  40989b:	sub    dl,dl
  40989d:	inc    esp
  40989e:	jbe    0x4098ea
	...
  4098ac:	add    BYTE PTR [eax],al
  4098ae:	add    dh,cl
  4098b0:	xor    eax,0x2d8c4a76
  4098b5:	cmp    eax,0x5e448494
  4098ba:	shl    BYTE PTR [esi+ebp*1-0x39],0x49
  4098bf:	je     0x409905
  4098c1:	dec    esi
  4098c2:	shr    BYTE PTR [eax+0x2d],1
  4098c5:	out    0x7f,eax
  4098c7:	arpl   WORD PTR ds:0x56b4530,ax
  4098cd:	pushf  
  4098ce:	jle    0x409917
  4098d0:	mov    BYTE PTR ds:0x9305b947,ah
  4098d6:	test   BYTE PTR [ebp-0x46],0xf0
  4098da:	pop    ebx
  4098db:	inc    ebp
  4098dc:	jae    0x4098f4
  4098de:	dec    edx
  4098df:	jmp    0xa7fd:0x89db0cc9
  4098e6:	add    esp,DWORD PTR [edx+edi*4]
  4098e9:	lock pop ebx
  4098eb:	jne    0x409930
  4098ed:	add    dh,dh
  4098ef:	stos   BYTE PTR es:[edi],al
  4098f0:	inc    esp
  4098f1:	jne    0x4098e0
  4098f3:	call   0xff73:0x10d107ba
  4098fa:	fidivr WORD PTR [eax]
  4098fc:	inc    edi
  4098fd:	add    al,0xe9
  4098ff:	lds    ecx,FWORD PTR [esi+0x41a36aec]
  409905:	push   0xffffffe9
  409907:	push   es
  409908:	sbb    bh,bh
  40990a:	xor    al,0xdf
  40990c:	sub    esi,DWORD PTR [ebp-0x76bbd579]
  409912:	and    al,0x0
	...
  409920:	add    BYTE PTR [eax],al
  409922:	sbb    ebp,DWORD PTR [ebp-0x7cd41701]
  409928:	push   0xffc66f64
  40992d:	add    BYTE PTR [esi+0x1be940fb],ah
  409933:	mov    edx,0x599c9107
  409938:	(bad)  
  409939:	jle    0x409965
  40993b:	mov    edx,0xba476fb
  409940:	call   0xff8482dc
  409945:	xor    BYTE PTR ds:0xffb40009,bl
  40994b:	xor    BYTE PTR [ecx-0xc3b8d3],al
  409951:	dec    esi
  409952:	hlt    
  409953:	leave  
  409954:	sti    
  409955:	cdq    
  409956:	sbb    edi,DWORD PTR [edx-0x3193c1f5]
  40995c:	sub    BYTE PTR [eax+0x6a992d60],ch
  409962:	addr16 add eax,0x8a4a290b
  409968:	int    0xe8
  40996a:	pusha  
  40996b:	add    eax,0x5a8acc7
  409970:	add    cl,ch
  409972:	pusha  
  409973:	dec    edx
  409974:	inc    ebp
  409975:	add    BYTE PTR [esi],ah
  409977:	into   
  409978:	push   es
  409979:	add    BYTE PTR [edx],cl
  40997b:	popa   
  40997c:	jmp    FWORD PTR [ecx+0xa]
  40997f:	popa   
  409980:	jmp    FWORD PTR [ecx-0x6]
  409983:	mov    ebx,0xf444
	...
  409994:	add    BYTE PTR [edx-0x46],cl
  409997:	test   ah,dh
  409999:	adc    eax,0xd50fece
  40999e:	push   esp
  40999f:	idiv   edi
  4099a1:	xchg   edi,eax
  4099a2:	int    0xe7
  4099a4:	imul   edi,DWORD PTR [ecx+0x6],0x0
  4099a8:	or     ecx,DWORD PTR [edx]
  4099aa:	push   ebx
  4099ab:	add    al,0xe9
  4099ad:	cmp    al,BYTE PTR [edi]
  4099af:	add    BYTE PTR [eax],al
  4099b1:	and    cl,BYTE PTR [ebp-0x3245bed8]
  4099b7:	je     0x4099c5
  4099b9:	sar    BYTE PTR [ebx+esi*4-0x75893201],cl
  4099c0:	ror    BYTE PTR [edi],1
  4099c2:	ret    
  4099c3:	repz neg ebp
  4099c6:	int    0x4f
  4099c8:	push   edx
  4099c9:	repnz dec esp
  4099cb:	mov    bl,0xff
  4099cd:	or     eax,0x15f084bf
  4099d2:	int    0xfe
  4099d4:	call   0x40301f
  4099d9:	(bad)  
  4099db:	xlat   BYTE PTR ds:[ebx]
  4099dc:	test   DWORD PTR ds:0xd9684fcd,0x1d00410e
  4099e6:	xchg   ebx,eax
  4099e7:	lock neg DWORD PTR [ebp+0x135fecd]
  4099ee:	pop    ds
  4099ef:	inc    ecx
  4099f0:	add    BYTE PTR [edx+0x7dffb2fd],ah
  4099f6:	mov    edi,0xe484
	...
  409a07:	add    BYTE PTR [ebp-0x33],dl
  409a0a:	(bad)  
  409a0b:	push   0x63
  409a0d:	sub    al,0xdb
  409a0f:	nop
  409a10:	imul   ebp,DWORD PTR [ebp+0x3],0xffffffff
  409a14:	out    dx,al
  409a15:	cmp    ecx,DWORD PTR [edi-0x1]
  409a18:	sbb    al,0x43
  409a1a:	or     eax,0x36d4a4b
  409a1f:	call   0xff8898f6
  409a24:	fidiv  DWORD PTR [eax+0x62fcf757]
  409a2a:	(bad)  
  409a2c:	jl     0x4099e4
  409a2e:	or     eax,DWORD PTR [ecx+0x63]
  409a31:	push   ebx
  409a32:	xchg   ecx,eax
  409a33:	lock in al,dx
  409a35:	dec    edx
  409a36:	inc    edi
  409a37:	call   DWORD PTR [esi+0x63411cf7]
  409a3d:	inc    esp
  409a3e:	jae    0x4099f3
  409a40:	int3   
  409a41:	jb     0x409ac0
  409a43:	test   DWORD PTR [ebx-0x1100b85e],edi
  409a49:	test   al,0x27
  409a4b:	div    DWORD PTR [edx+ebx*4+0x53ff67b4]
  409a52:	(bad)  
  409a53:	jmp    DWORD PTR [ebp-0x6308ac00]
  409a59:	ret    0x3546
  409a5c:	sub    BYTE PTR [ebp-0x3c],al
  409a5f:	inc    DWORD PTR [ebx+edi*1+0x3684ff92]
  409a66:	inc    ebx
  409a67:	je     0x409ac3
  409a69:	scas   eax,DWORD PTR es:[edi]
  409a6a:	mov    ah,bl
	...
  409a78:	add    BYTE PTR [eax],al
  409a7a:	add    BYTE PTR [edx+ebx*8+0x46],ch
  409a7e:	add    al,0xf6
  409a80:	cmp    eax,DWORD PTR [esi+0x30]
  409a83:	aam    0xb0
  409a85:	arpl   di,si
  409a87:	pop    esp
  409a88:	add    BYTE PTR [edi+eiz*8-0xb9416a],dh
  409a8f:	cmp    BYTE PTR [ebx-0x6],bl
  409a92:	mov    edi,0xb3ef05cf
  409a97:	inc    esp
  409a98:	neg    DWORD PTR [eax+0x47]
  409a9b:	xor    al,0x49
  409a9d:	ins    BYTE PTR es:[edi],dx
  409a9e:	fs xor al,0x41
  409aa1:	push   cs
  409aa2:	icebp  
  409aa3:	and    al,0x41
  409aa5:	jmp    0xf66a792c
  409aaa:	inc    esi
  409aab:	adc    al,0x6
  409aad:	jge    0x409a74
  409aaf:	loope  0x409a33
  409ab1:	std    
  409ab2:	dec    esi
  409ab3:	add    al,0x41
  409ab5:	jmp    0x9cc51289
  409aba:	pop    ebx
  409abb:	in     al,dx
  409abc:	inc    eax
  409abd:	(bad)  
  409abe:	add    esi,DWORD PTR [edi-0x4f]
  409ac1:	inc    edx
  409ac2:	add    al,0xd6
  409ac4:	mov    ah,BYTE PTR [ecx+0x1940dc4e]
  409aca:	inc    edi
  409acb:	push   cs
  409acc:	sub    bh,BYTE PTR [esi+0x1b2dcc46]
  409ad2:	xor    esp,eax
  409ad4:	inc    eax
  409ad5:	repnz inc ebx
  409ad7:	aaa    
  409ad8:	fldcw  WORD PTR [ecx-0x78]
  409adb:	fwait
  409adc:	cmp    BYTE PTR [esi+0x46],dl
	...
  409aee:	arpl   WORD PTR [ecx+0x40a4dc21],di
  409af4:	xchg   esi,eax
  409af5:	test   DWORD PTR [edx+edi*4+0x70fc5bf0],ebx
  409afc:	jbe    0x409b44
  409afe:	mov    WORD PTR [edx+0x7d],?
  409b01:	dec    esi
  409b02:	test   BYTE PTR [eax+0x66],al
  409b05:	shl    BYTE PTR [ebp+ebp*1-0x5e],1
  409b09:	xchg   edi,eax
  409b0a:	je     0x409b4c
  409b0c:	push   esi
  409b0d:	nop
  409b0e:	jnp    0x409b48
  409b10:	dec    esi
  409b11:	inc    esi
  409b12:	fs mov edx,0x710e5bf0
  409b18:	ds inc esi
  409b1a:	push   esp
  409b1b:	jp     0x409b1d
  409b1d:	adc    DWORD PTR [ebp-0xcd100c0],ebx
  409b23:	sub    bh,dh
  409b25:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  409b27:	inc    eax
  409b28:	jne    0x409b1b
  409b2a:	cwde   
  409b2b:	mov    dl,0xab
  409b2d:	push   ss
  409b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b2f:	inc    eax
  409b30:	mov    ch,0x9
  409b32:	xchg   ebp,eax
  409b33:	inc    eax
  409b34:	inc    DWORD PTR [esi]
  409b36:	xor    ecx,DWORD PTR [eax]
  409b38:	call   0xff80880d
  409b3d:	neg    ah
  409b3f:	sub    bh,dh
  409b41:	out    dx,al
  409b42:	sahf   
  409b43:	sub    eax,0x40a69695
  409b48:	call   DWORD PTR [ebx+ebx*4-0x702900c8]
  409b4f:	mov    ebp,DWORD PTR [edi+0xce]
	...
  409b61:	sahf   
  409b62:	inc    eax
  409b63:	mov    ch,0xd1
  409b65:	cs inc eax
  409b67:	call   ecx
  409b69:	sahf   
  409b6a:	outs   dx,BYTE PTR ds:[esi]
  409b6b:	push   DWORD PTR [esi-0x490f85da]
  409b71:	push   ds
  409b72:	inc    eax
  409b73:	call   0xff807195
  409b78:	sahf   
  409b79:	hlt    
  409b7a:	aaa    
  409b7b:	jmp    0xff80c0ab
  409b80:	mov    ss,WORD PTR [ebx+edi*1+0x4e047e8]
  409b87:	add    BYTE PTR [eax+0x1c000d21],dh
  409b8d:	or     dh,BYTE PTR [ecx]
  409b8f:	and    DWORD PTR [ebp-0xa8abfcd],0x18
  409b96:	xlat   BYTE PTR ds:[ebx]
  409b97:	jg     0x409b82
  409b99:	pusha  
  409b9a:	mov    es,WORD PTR [ebp+0x51]
  409b9d:	es mov edx,0x6ebd41f7
  409ba3:	inc    DWORD PTR [eax]
  409ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ba6:	mov    edx,0x4e95fc44
  409bab:	sti    
  409bac:	dec    DWORD PTR [edi]
  409bae:	retf   
  409baf:	(bad)  
  409bb0:	jne    0x409bd8
  409bb2:	fist   DWORD PTR [esi]
  409bb4:	mov    ebx,0xc00ac885
  409bb9:	into   
  409bba:	or     BYTE PTR [ecx-0xa4b1bb],cl
  409bc0:	mov    edi,?
  409bc2:	into   
  409bc3:	dec    edi
  409bc4:	inc    DWORD PTR [eax]
	...
  409bd2:	add    BYTE PTR [eax],al
  409bd4:	lahf   
  409bd5:	(bad)  
  409bd6:	out    0x7b,eax
  409bd8:	outs   dx,BYTE PTR ds:[esi]
  409bd9:	enter  0xbfe,0x3a
  409bdd:	push   ebp
  409bde:	sub    BYTE PTR [eax-0x6],ch
  409be1:	xor    ch,dh
  409be3:	mov    esi,0xe8075005
  409be8:	jecxz  0x409b87
  409bea:	(bad)  
  409beb:	call   DWORD PTR ds:0x8ffff750
  409bf1:	cmp    eax,0xdad275fe
  409bf6:	shr    BYTE PTR [ebx+0x75feca15],0xe
  409bfd:	retf   0xfc74
  409c00:	cmc    
  409c01:	dec    edi
  409c02:	pop    es
  409c03:	call   0x403921
  409c08:	aad    0x4f
  409c0a:	sti    
  409c0b:	call   0x4034f6
  409c10:	add    eax,ebp
  409c12:	pop    es
  409c13:	add    BYTE PTR [edi-0x44],bh
  409c16:	jmp    0x409b9b
  409c18:	mov    esi,0x8fff55da
  409c1d:	ss out 0xad,eax
  409c20:	dec    ecx
  409c21:	leave  
  409c22:	dec    BYTE PTR [ebx]
  409c24:	dec    edx
  409c25:	dec    edi
  409c26:	add    al,0x5e
  409c28:	xor    eax,esp
  409c2a:	pop    es
  409c2b:	add    BYTE PTR [ebx-0x57],ah
  409c2e:	mov    ebp,0xcdcf13ef
  409c33:	or     ecx,DWORD PTR [ebx+0x67]
  409c36:	(bad)  
  409c37:	inc    DWORD PTR [eax]
	...
  409c45:	add    BYTE PTR [eax],al
  409c47:	push   esp
  409c48:	xor    eax,DWORD PTR [ebx+0xf]
  409c4b:	out    0xd1,eax
  409c4d:	add    al,BYTE PTR [eax]
  409c4f:	arpl   di,bp
  409c51:	int    0xfb
  409c53:	dec    ebx
  409c54:	repz xchg esp,eax
  409c56:	push   DWORD PTR [esi*4-0x5ed31443]
  409c5d:	inc    edi
  409c5e:	jmp    FWORD PTR [esi+0x1b754340]
  409c64:	adc    al,0x52
  409c66:	scas   al,BYTE PTR es:[edi]
  409c67:	adc    al,0x3f
  409c69:	ja     0x409ce0
  409c6b:	inc    DWORD PTR [edx]
  409c6d:	mov    edx,0xc273fe67
  409c72:	call   DWORD PTR [esi+0x6380c554]
  409c78:	sub    al,0xe
  409c7a:	shl    BYTE PTR [esi+0x2a],0x2e
  409c7e:	cmp    eax,0xe4ac5bd8
  409c83:	fwait
  409c84:	in     eax,dx
  409c85:	add    ebp,eax
  409c87:	fdivp  st(6),st
  409c89:	add    eax,DWORD PTR [eax]
  409c8b:	pusha  
  409c8c:	jl     0x409c1b
  409c8e:	jne    0x409c4b
  409c90:	ret    
  409c91:	aaa    
  409c92:	cmp    BYTE PTR [edx],ah
  409c94:	sub    al,0xd9
  409c96:	out    0x54,eax
  409c98:	lods   eax,DWORD PTR ds:[esi]
  409c99:	add    eax,DWORD PTR [eax]
  409c9b:	pop    eax
  409c9c:	ins    BYTE PTR es:[edi],dx
  409c9d:	mov    ecx,0x8d32b801
  409ca2:	adc    BYTE PTR [ebp+0x3150032b],ah
  409ca8:	mov    edi,0xe7b8
	...
  409cb9:	add    BYTE PTR [eax+eax*2-0x527517f5],cl
  409cc0:	inc    edx
  409cc1:	call   FWORD PTR [ecx]
  409cc3:	add    eax,0x85538bc1
  409cc8:	pop    ds
  409cc9:	add    al,0xf6
  409ccb:	jb     0x409c8e
  409ccd:	add    al,0x53
  409ccf:	pop    DWORD PTR cs:[ebx-0x2a]
  409cd3:	or     eax,0x3d095051
  409cd8:	ds inc ebx
  409cda:	(bad)  
  409cdb:	cmp    DWORD PTR [esi],esi
  409cdd:	mov    ecx,0xbb43d38
  409ce2:	dec    ebx
  409ce3:	xor    dl,BYTE PTR [ebx+0x43]
  409ce6:	xor    al,0x3d
  409ce8:	xchg   esp,eax
  409ce9:	das    
  409cea:	cmp    ebp,ebx
  409cec:	inc    esi
  409ced:	inc    ebx
  409cee:	and    al,0x8b
  409cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cf1:	xor    esi,DWORD PTR [ebx+0x14779a2d]
  409cf7:	cmp    eax,0x4ead0412
  409cfc:	sub    ecx,DWORD PTR [ebx+eiz*2]
  409cff:	shl    BYTE PTR [ecx+0x30],cl
  409d02:	loopne 0x409d45
  409d04:	in     eax,0xad
  409d06:	hlt    
  409d07:	scas   al,BYTE PTR es:[edi]
  409d08:	repz inc edx
  409d0a:	jbe    0x409d19
  409d0c:	rol    esi,0xb9
  409d0f:	cmp    al,0xce
  409d11:	mov    WORD PTR [esi],fs
  409d13:	cmp    DWORD PTR [ecx+0x75],edx
  409d16:	fwait
  409d17:	(bad)  
  409d18:	call   0xc14df35f
  409d1d:	push   0x0
	...
  409d2b:	add    BYTE PTR [eax],al
  409d2d:	(bad)  
  409d2e:	cmp    al,0xae
  409d30:	lods   eax,DWORD PTR ds:[esi]
  409d31:	mov    esp,0x23fcf1a4
  409d36:	add    eax,0xc66b3b11
  409d3b:	call   0xc0110b82
  409d40:	les    ebx,FWORD PTR [esp+0x3c947385]
  409d47:	repnz inc ebx
  409d49:	pop    ss
  409d4a:	pop    ds
  409d4b:	add    BYTE PTR [ecx],al
  409d4d:	and    eax,0x90e940fd
  409d52:	and    al,0xc8
  409d54:	cwde   
  409d55:	and    DWORD PTR [eax+edx*2],edi
  409d58:	mov    ecx,0x4107b221
  409d5d:	cmp    eax,0x884eff3b
  409d62:	inc    ebx
  409d63:	lods   eax,DWORD PTR ds:[esi]
  409d64:	inc    esi
  409d65:	mov    eax,ds:0x725119af
  409d6a:	ja     0x409d6b
  409d6c:	ss push ebp
  409d6e:	inc    ebp
  409d6f:	je     0x409d75
  409d71:	cmovp  edi,DWORD PTR [eax]
  409d74:	test   al,0x60
  409d76:	aad    0xe7
  409d78:	dec    edx
  409d79:	mov    bh,0x3c
  409d7b:	inc    DWORD PTR [ecx-0x16bf027a]
  409d81:	xor    BYTE PTR [eax+ebx*4],ah
  409d84:	cmp    BYTE PTR [ecx-0x5e66afc4],ah
  409d8a:	mov    dl,0x7
  409d8c:	add    DWORD PTR [ebp+0xeeff3b],ecx
	...
  409d9e:	add    BYTE PTR [eax],al
  409da0:	dec    ecx
  409da1:	xchg   ebx,eax
  409da2:	lods   eax,DWORD PTR ds:[esi]
  409da3:	out    0xa2,al
  409da5:	scas   eax,DWORD PTR es:[edi]
  409da6:	sbb    edx,ecx
  409da8:	xor    DWORD PTR [esi-0x1],0x744556d6
  409daf:	add    al,0xf
  409db1:	dec    edx
  409db2:	cmp    BYTE PTR [eax],ch
  409db4:	pop    edi
  409db5:	aad    0xe7
  409db7:	cmp    dl,BYTE PTR [eax+0x3c]
  409dba:	inc    DWORD PTR [ecx+0x25]
  409dbd:	std    
  409dbe:	inc    eax
  409dbf:	jmp    0x58a8c154
  409dc4:	and    bh,BYTE PTR [eax+edx*2]
  409dc7:	cmp    DWORD PTR [edx],esp
  409dc9:	mov    dl,0x7
  409dcb:	sbb    esi,0x4f8eff3a
  409dd1:	mov    ds:0xc5dd00ac,eax
  409dd6:	imul   esp,DWORD PTR [ebx],0xffb0b6f2
  409ddc:	or     eax,0xa774c00a
  409de1:	outs   dx,DWORD PTR ds:[esi]
  409de2:	int    0x38
  409de4:	retf   
  409de5:	pop    es
  409de6:	push   eax
  409de7:	call   0x3f54a5
  409dec:	mov    ds:0x4a4137d9,al
  409df1:	push   edi
  409df2:	out    0x38,eax
  409df4:	fcmovnb st,st(4)
  409df6:	(bad)  
  409df7:	push   eax
  409df8:	jmp    0xfd50:0xa20874c5
  409dff:	dec    DWORD PTR [ebp+0xad35e9]
	...
  409e11:	add    BYTE PTR [eax],al
  409e13:	jge    0x409dd9
  409e15:	(bad)  
  409e16:	jne    0x409e66
  409e18:	les    esi,FWORD PTR [eax+ecx*1+0x62]
  409e1c:	scas   al,BYTE PTR es:[edi]
  409e1d:	test   eax,0xc1ce6dff
  409e22:	add    al,0xa
  409e24:	push   esp
  409e25:	mov    ch,ah
  409e27:	jnp    0x409df6
  409e29:	fcomi  st,st(7)
  409e2b:	or     eax,0xe458cc6
  409e30:	push   edi
  409e31:	(bad)  
  409e32:	jne    0x409e2e
  409e34:	lds    esi,FWORD PTR [esp+ecx*1+0x12]
  409e38:	jbe    0x409eb8
  409e3a:	add    dl,bh
  409e3c:	or     eax,eax
  409e3e:	cmova  eax,DWORD PTR [ecx+eax*1+0x44cdca00]
  409e46:	clc    
  409e47:	mov    edx,0xf5000006
  409e4c:	inc    ebx
  409e4d:	repz inc ebp
  409e50:	push   es
  409e51:	add    BYTE PTR [edx-0x36],ch
  409e54:	push   0x68ba69ff
  409e59:	dec    DWORD PTR [ebx+eiz*2-0x11afc817]
  409e60:	mov    eax,ds:0x8394f736
  409e65:	sar    esi,cl
  409e67:	push   ss
  409e68:	test   BYTE PTR [eax+0x75],al
  409e6b:	xchg   DWORD PTR [edx+eax*8+0xc2c637e],eax
  409e72:	shr    bh,0x28
  409e75:	sub    al,BYTE PTR [ecx+0x0]
	...
  409e83:	add    BYTE PTR [eax],al
  409e85:	add    BYTE PTR [edx+0x2c],ah
  409e88:	add    ebp,DWORD PTR [eax-0x59]
  409e8b:	add    al,0xc3
  409e8d:	call   FWORD PTR [ebp+0x51]
  409e90:	adc    ebp,eax
  409e92:	mov    edi,0xb3ff3fbc
  409e97:	mov    bh,0x52
  409e99:	(bad)  
  409e9a:	fdivrp st(7),st
  409e9c:	aaa    
  409e9d:	(bad)  
  409e9e:	cmp    al,0x9c
  409ea0:	aad    0xe7
  409ea2:	(bad)  
  409ea3:	fdivr  QWORD PTR [edi]
  409ea5:	(bad)  
  409ea6:	fisub  DWORD PTR [eax+0x1324f732]
  409eac:	sub    ebp,DWORD PTR [edx+0x6a400acf]
  409eb2:	arpl   WORD PTR [esp+ebp*8+0x402ca238],dx
  409eb9:	mov    ch,0x13
  409ebb:	cmp    edi,DWORD PTR [edi]
  409ebd:	(bad)  
  409ebe:	cld    
  409ebf:	mov    al,0xe
  409ec1:	call   0xff80318c
  409ec6:	fisub  DWORD PTR [eax+0x52e4f727]
  409ecc:	stos   BYTE PTR es:[edi],al
  409ecd:	inc    DWORD PTR [eax+edx*1-0x3]
  409ed1:	inc    eax
  409ed2:	arpl   WORD PTR [ebx+0x79],ax
  409ed5:	lock aam 0x7a
  409ed8:	aas    
  409ed9:	dec    DWORD PTR [esi+0x20]
  409edc:	sub    edx,DWORD PTR [edx-0x76c094f4]
  409ee2:	fiadd  WORD PTR [ecx+ecx*4]
  409ee5:	aaa    
  409ee6:	lods   al,BYTE PTR ds:[esi]
  409ee7:	cmp    DWORD PTR [ebx],edx
  409ee9:	add    al,0x0
	...
  409ef7:	add    BYTE PTR [eax],al
  409ef9:	cmp    ebx,DWORD PTR [esi]
  409efb:	rol    ah,1
  409efd:	pushf  
  409efe:	cmp    dl,BYTE PTR [esp+esi*1-0x74]
  409f02:	cmp    DWORD PTR [esi-0x6ef6e9c1],eax
  409f08:	mov    bh,0xb5
  409f0a:	cmp    DWORD PTR [esi-0x73],esi
  409f0d:	out    0x28,al
  409f0f:	jbe    0x409f50
  409f11:	je     0x409ec1
  409f13:	call   0xa83ce1c3
  409f18:	add    esp,DWORD PTR [edi+ebp*2+0x59]
  409f1c:	aaa    
  409f1d:	pop    esp
  409f1e:	cmp    DWORD PTR [esi-0x47],ecx
  409f21:	push   0x4c6ea52d
  409f26:	cmp    DWORD PTR [eax-0x77],esi
  409f29:	cmp    esi,DWORD PTR [ecx]
  409f2b:	ss aas 
  409f2d:	leave  
  409f2e:	add    eax,0xc67bfdc1
  409f33:	call   0x16769576
  409f38:	aas    
  409f39:	and    al,0x39
  409f3b:	pushf  
  409f3c:	ud2    
  409f3e:	(bad)  
  409f3f:	cmp    eax,0x6c8f143f
  409f44:	pusha  
  409f45:	adc    al,0x39
  409f47:	inc    BYTE PTR [edx+0x3efe21c6]
  409f4d:	cld    
  409f4e:	add    eax,0x7ae00c74
  409f53:	leave  
  409f54:	ss in  al,dx
  409f56:	cmp    cl,ch
  409f58:	mov    bh,0x7f
  409f5a:	test   BYTE PTR [edi+ebp*1+0x0],dl
	...
  409f69:	add    BYTE PTR [eax],al
  409f6b:	add    ah,dl
  409f6d:	cmp    dh,cl
  409f6f:	add    ecx,DWORD PTR [edi-0x27]
  409f72:	imul   eax,DWORD PTR [eax+0x3ebe30bb],0x19ffb163
  409f7c:	(bad)  
  409f7e:	(bad)  
  409f7f:	mov    esi,0xf1753836
  409f84:	js     0x409f42
  409f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f87:	sahf   
  409f88:	cmp    BYTE PTR gs:[ebp-0xc7aa7b],dh
  409f8f:	mov    ds,ebx
  409f91:	add    al,ch
  409f93:	mov    dh,0xf8
  409f95:	aaa    
  409f96:	(bad)  
  409f97:	jle    0x409fa4
  409f99:	sub    eax,0x383d76f7
  409f9e:	jne    0x409f81
  409fa0:	dec    eax
  409fa1:	inc    esi
  409fa2:	test   al,0x66
  409fa4:	sub    eax,0x2d45b538
  409fa9:	cmp    bh,bh
  409fab:	push   esi
  409fac:	sbb    eax,DWORD PTR [eax]
  409fae:	call   0xff79684d
  409fb3:	inc    esi
  409fb4:	retf   
  409fb5:	and    eax,0x38853ef7
  409fba:	jne    0x409f9d
  409fbc:	mov    BYTE PTR [edx-0x58],ah
  409fbf:	cs jne 0x409ffa
  409fc2:	mov    ch,0x45
  409fc4:	jne    0x409ffe
  409fc6:	call   FWORD PTR [esi]
  409fc8:	jmp    0x409fc9
  409fca:	out    0x7e,eax
  409fcc:	mov    BYTE PTR [eax],bh
  409fce:	dec    DWORD PTR [esi]
	...
  409fdc:	add    BYTE PTR [eax],al
  409fde:	add    BYTE PTR [ebx+0x4d06f721],bl
  409fe4:	sub    eax,0x384552a1
  409fe9:	(bad)  
  409fea:	cmp    al,0x40
  409fec:	xor    bh,bh
  409fee:	out    dx,al
  409fef:	dec    ecx
  409ff0:	(bad)  
  409ff1:	stos   DWORD PTR es:[edi],eax
  409ff2:	out    0x2e,al
  409ff4:	cmp    BYTE PTR [ebp-0xc7d133],dh
  409ffa:	shr    edx,0x6b
  409ffd:	dec    esi
  409fff:	xchg   esi,eax
  40a000:	jb     0x409fea
  40a002:	add    BYTE PTR ds:0x3ae8fefa,cl
  40a008:	scas   al,BYTE PTR es:[edi]
  40a009:	(bad)  
  40a00a:	push   ebp
  40a00c:	scas   eax,DWORD PTR es:[edi]
  40a00d:	fcomi  st,st(7)
  40a00f:	add    eax,0x1175e7fa
  40a014:	cli    
  40a015:	(bad)  
  40a016:	dec    DWORD PTR [edi]
  40a018:	icebp  
  40a019:	idiv   bh
  40a01b:	cmc    
  40a01c:	stc    
  40a01d:	je     0x40a02b
  40a01f:	in     eax,0x6f
  40a021:	pop    es
  40a022:	call   0x3f99ce
  40a027:	add    eax,0xf5f7efb0
  40a02c:	stc    
  40a02d:	out    0x59,eax
  40a02f:	and    edx,edi
  40a031:	(bad)  
  40a032:	(bad)  
  40a033:	mov    edi,0x451e8fb
  40a038:	cli    
  40a039:	(bad)  
  40a03a:	(bad)  
  40a03b:	aas    
  40a03c:	mul    edi
  40a03e:	mov    ds:0xc9000327,eax
	...
  40a04f:	add    BYTE PTR [eax],al
  40a051:	add    BYTE PTR [eax+0x15],bh
  40a054:	add    BYTE PTR [ebp-0x2f],dl
  40a057:	cmc    
  40a058:	add    ah,0x76
  40a05b:	imul   edi,edi,0x69
  40a05e:	or     al,0xfa
  40a060:	je     0x40a06a
  40a062:	push   edx
  40a063:	ins    BYTE PTR es:[edi],dx
  40a064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a065:	inc    DWORD PTR [ebp-0x76]
  40a068:	inc    ebp
  40a069:	cld    
  40a06a:	loop   0x40a0b6
  40a06c:	cmp    BYTE PTR [ecx+0xa],al
  40a06f:	imul   eax,DWORD PTR [ecx],0x0
  40a072:	cli    
  40a073:	cmp    bh,0x75
  40a076:	adc    ch,bl
  40a078:	idiv   ch
  40a07a:	cmc    
  40a07b:	stc    
  40a07c:	addr16 dec eax
  40a07e:	mov    bl,0x43
  40a080:	(bad)  
  40a081:	dec    BYTE PTR [edi+0x4c]
  40a084:	sub    BYTE PTR [ecx-0x6],al
  40a087:	stc    
  40a088:	je     0x40a092
  40a08a:	arpl   WORD PTR [edi+eiz*1-0x3],ax
  40a08e:	aam    0x47
  40a090:	cmp    al,0x75
  40a092:	iret   
  40a093:	aas    
  40a094:	mov    dh,0x7
  40a096:	mov    ebx,0xbcff6bf6
  40a09b:	gs inc ecx
  40a09d:	add    al,0x63
  40a09f:	adc    DWORD PTR [ecx+0x5f68e2ec],ecx
  40a0a5:	mul    DWORD PTR [edi+edx*4-0x360ba72]
  40a0ac:	cmp    al,0x75
  40a0ae:	jae    0x40a037
  40a0b0:	mov    dh,0xb
  40a0b2:	jnp    0x40a09c
  40a0b4:	mov    esi,0xff
	...
  40a0c5:	test   BYTE PTR [ebx],dh
  40a0c7:	inc    ebx
  40a0c8:	(bad)  
  40a0ca:	out    dx,al
  40a0cb:	add    DWORD PTR [eax],eax
  40a0cd:	arpl   WORD PTR [edi-0x3a],bx
  40a0d0:	mul    DWORD PTR [ebx+0x2c]
  40a0d3:	add    eax,DWORD PTR [eax]
  40a0d5:	pushf  
  40a0d6:	popa   
  40a0d7:	aaa    
  40a0d8:	jmp    DWORD PTR [esp+ebp*1+0x3]
  40a0dc:	push   0x63
  40a0de:	inc    edx
  40a0df:	add    ebp,DWORD PTR [edx+0x63]
  40a0e2:	push   edx
  40a0e3:	add    ecx,DWORD PTR [ebp-0x732d0f62]
  40a0e9:	out    0xf7,al
  40a0eb:	xor    edi,edi
  40a0ed:	xor    al,0x9c
  40a0ef:	cmp    al,0x75
  40a0f1:	sub    ebx,edi
  40a0f3:	mov    ch,0xfb
  40a0f5:	cmp    ebp,DWORD PTR [esi]
  40a0f7:	mov    esi,0x43231cff
  40a0fc:	je     0x40a15c
  40a0fe:	add    eax,0x2c630182
  40a103:	stos   DWORD PTR es:[edi],eax
  40a104:	mov    ebx,0xff036d3b
  40a109:	jbe    0x40a167
  40a10b:	sub    edi,DWORD PTR [ecx]
  40a10d:	lds    esp,FWORD PTR [esi]
  40a10f:	cmp    edx,DWORD PTR [eax-0x28]
  40a112:	add    al,0xb9
  40a114:	mov    esi,ebx
  40a116:	xor    dh,dl
  40a118:	cmp    ebx,esp
  40a11a:	aam    0x3a
  40a11c:	sub    al,0x8a
  40a11e:	addr16 into 
  40a120:	cmp    ebx,edx
  40a122:	jg     0x40a0dd
  40a124:	xor    eax,esp
  40a126:	xor    eax,0xbbd1
	...
  40a137:	add    BYTE PTR [edx],cl
  40a139:	ss mov dh,0xae
  40a13c:	mov    ah,0x9d
  40a13e:	popa   
  40a13f:	std    
  40a140:	and    eax,DWORD PTR ds:0x2db371a6
  40a146:	sahf   
  40a147:	cmp    ebx,DWORD PTR [edi+ebp*4+0x67e12be4]
  40a14e:	mov    ?,WORD PTR [ebx]
  40a150:	fidivr DWORD PTR [edi-0x73]
  40a153:	xor    eax,DWORD PTR [ebp+esi*1-0x71f4fbed]
  40a15a:	mov    al,0xc4
  40a15c:	je     0x40a194
  40a15e:	xor    al,0x34
  40a160:	je     0x40a197
  40a162:	cmp    bp,si
  40a165:	or     BYTE PTR [ecx-0x5d],dl
  40a168:	sysexit 
  40a16a:	push   esi
  40a16b:	(bad)  
  40a16c:	fisub  WORD PTR ds:0xa04c3b56
  40a172:	call   0xa82f7122
  40a177:	add    edi,DWORD PTR [ebx+edi*2]
  40a17a:	cmp    DWORD PTR [ebx],esi
  40a17c:	xor    al,0x35
  40a17e:	cs mov cl,0x58
  40a181:	sbb    eax,0x352468b5
  40a186:	jo     0x40a109
  40a188:	(bad)  
  40a18a:	push   ss
  40a18b:	cmp    ecx,DWORD PTR [ecx+0x4bba8105]
  40a191:	(bad)  
  40a192:	call   0xf6766fd1
  40a197:	cmp    bh,ah
  40a199:	xor    al,0x0
  40a19b:	jl     0x40a19d
	...
  40a1a9:	add    BYTE PTR [eax],al
  40a1ab:	pop    esp
  40a1ac:	sbb    eax,0x34283c31
  40a1b1:	mov    DWORD PTR [eax+edi*1+0x3c],ebp
  40a1b5:	(bad)  
  40a1b6:	fimul  WORD PTR [esi]
  40a1b8:	xor    eax,0xc5d78d67
  40a1bd:	dec    ebp
  40a1bf:	push   ebx
  40a1c0:	xor    eax,0x3489c6f7
  40a1c5:	jne    0x40a1b4
  40a1c7:	mov    BYTE PTR [ebx],bl
  40a1c9:	lods   eax,DWORD PTR ds:[esi]
  40a1ca:	mov    dh,0x79
  40a1cc:	jle    0x40a153
  40a1ce:	lea    esi,[ecx+0x34]
  40a1d1:	jmp    FWORD PTR [edx+0x2b]
  40a1d4:	sub    edi,esi
  40a1d6:	sahf   
  40a1d7:	pop    ecx
  40a1d8:	add    eax,0x72dde075
  40a1dd:	loopne 0x40a175
  40a1df:	dec    ecx
  40a1e0:	xor    al,0x0
  40a1e2:	std    
  40a1e3:	ret    
  40a1e4:	xchg   DWORD PTR [ebp-0xcbce73],edi
  40a1ea:	jmp    0x2cc372b3
  40a1ef:	cmp    BYTE PTR [edi+edi*8],bh
  40a1f2:	pushaw 
  40a1f4:	mov    ecx,0x560d152
  40a1f9:	out    dx,eax
  40a1fa:	xchg   edi,eax
  40a1fb:	cdq    
  40a1fc:	mov    edx,0x6a304107
  40a201:	inc    DWORD PTR [esi-0x77]
  40a204:	jp     0x40a1f2
  40a206:	ss jns 0x40a23d
  40a209:	(bad)  
  40a20a:	mov    esp,0x87a41d68
	...
  40a21b:	add    BYTE PTR [eax],al
  40a21d:	add    BYTE PTR [ecx+0x34],ch
  40a220:	call   FWORD PTR [eax+edi*2+0x3c]
  40a224:	call   FWORD PTR [esi]
  40a226:	pop    ecx
  40a227:	mov    edx,0x6af20107
  40a22c:	dec    DWORD PTR [esi]
  40a22e:	dec    ecx
  40a22f:	jp     0x40a215
  40a231:	add    BYTE PTR ds:0x77fffeee,al
  40a237:	add    al,ch
  40a239:	mov    BYTE PTR [edi+ebp*8-0x17c80002],ah
  40a240:	idiv   bh
  40a242:	std    
  40a243:	in     eax,dx
  40a244:	je     0x40a24e
  40a246:	mov    dl,0x72
  40a248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a249:	jmp    FWORD PTR [ebp-0x4a234b13]
  40a24f:	in     eax,dx
  40a250:	(bad)  
  40a251:	inc    DWORD PTR [edi-0x1b9317ff]
  40a257:	in     eax,dx
  40a258:	(bad)  
  40a259:	push   DWORD PTR [edi]
  40a25b:	in     eax,0xf6
  40a25d:	(bad)  
  40a25e:	std    
  40a25f:	loopne 0x40a2d6
  40a261:	test   eax,0xb5feedfd
  40a266:	jmp    0xa861:0xe2fffef5
  40a26d:	(bad)  
  40a26e:	fucomp st(5)
  40a270:	mov    ah,0xec
  40a272:	add    eax,0x6ae8feee
  40a277:	mov    al,ds:0xa3edfffe
  40a27c:	out    0xf7,eax
  40a27e:	std    
  40a27f:	in     eax,dx
  40a280:	out    0x55,eax
	...
  40a28e:	add    BYTE PTR [eax],al
  40a290:	add    bl,dl
  40a292:	in     eax,dx
  40a293:	(bad)  
  40a294:	push   edi
  40a296:	int    0xf6
  40a298:	jmp    FWORD PTR [ebp-0x6256b61f]
  40a29e:	in     al,dx
  40a29f:	(bad)  
  40a2a0:	mov    ch,0x8a
  40a2a2:	hlt    
  40a2a3:	(bad)  
  40a2a4:	(bad)  
  40a2a5:	jge    0x40a309
  40a2a7:	or     edi,edi
  40a2a9:	idiv   esi
  40a2ab:	out    0x3d,eax
  40a2ad:	jl     0x40a29b
  40a2af:	(bad)  
  40a2b0:	inc    DWORD PTR [edi+0x7dfff6f9]
  40a2b6:	loope  0x40a2e5
  40a2b8:	test   eax,0xff391b63
  40a2bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2be:	adc    al,0x2b
  40a2c0:	push   ecx
  40a2c1:	add    eax,0x76ff390c
  40a2c6:	xor    BYTE PTR [ebx],ch
  40a2c8:	js     0x40a342
  40a2ca:	sbb    al,0x3
  40a2cc:	leave  
  40a2cd:	and    DWORD PTR [ecx+0x3],edx
  40a2d0:	push   ebp
  40a2d1:	fcomp  DWORD PTR [eax-0x7c]
  40a2d4:	(bad)  
  40a2d5:	(bad)  
  40a2d7:	add    ebp,DWORD PTR [edx+0x6c]
  40a2da:	pop    ebx
  40a2db:	scas   al,BYTE PTR es:[edi]
  40a2dc:	pop    es
  40a2dd:	mov    ebx,0xc4ff61dc
  40a2e2:	mov    ch,0xbd
  40a2e4:	sti    
  40a2e5:	dec    ebx
  40a2e6:	lods   eax,DWORD PTR ds:[esi]
  40a2e7:	stc    
  40a2e8:	inc    eax
  40a2e9:	arpl   WORD PTR [ebx-0x12],di
  40a2ec:	dec    edx
  40a2ed:	jp     0x40a2cc
  40a2ef:	add    edi,edi
  40a2f1:	cs xor al,0x2b
  40a2f4:	test   BYTE PTR [eax],0x0
	...
  40a303:	add    BYTE PTR [esi-0x2d97c76d],bl
  40a309:	push   ebp
  40a30a:	ret    0x4ff
  40a30d:	push   ds
  40a30e:	add    eax,DWORD PTR [eax]
  40a310:	jecxz  0x40a29d
  40a312:	scas   al,BYTE PTR es:[edi]
  40a313:	pop    es
  40a314:	mov    ecx,DWORD PTR [eax-0x448b00ca]
  40a31a:	lods   eax,DWORD PTR ds:[esi]
  40a31b:	sti    
  40a31c:	ins    BYTE PTR es:[edi],dx
  40a31d:	cmp    DWORD PTR [ebx],ecx
  40a31f:	call   0xff792534
  40a324:	sub    bl,dh
  40a326:	(bad)  
  40a327:	jmp    FWORD PTR [edi+0x278126a7]
  40a32d:	lock das 
  40a32f:	inc    DWORD PTR [ecx+edi*4-0x43]
  40a333:	sti    
  40a334:	xchg   ebx,eax
  40a335:	rep lods eax,DWORD PTR ds:[esi]
  40a337:	sysenter 
  40a339:	jno    0x40a342
  40a33b:	call   0x441a8a
  40a340:	pop    eax
  40a341:	add    eax,0x81e60829
  40a346:	jmp    0xac8b064e
  40a34b:	cmp    esp,DWORD PTR [ebx+0x5]
  40a34e:	jmp    0xfd08bf56
  40a353:	aaa    
  40a354:	fs add eax,0x9bf4ade9
  40a35a:	call   0xe8dc900c
  40a35f:	xchg   BYTE PTR [esi-0x1976c6c7],bl
  40a365:	cmp    dh,dl
  40a367:	aaa    
	...
  40a374:	add    BYTE PTR [eax],al
  40a376:	add    ah,dl
  40a378:	aam    0xd5
  40a37a:	mov    cl,0xd4
  40a37c:	xor    DWORD PTR [eax+edi*1-0x45],edx
  40a380:	das    
  40a381:	inc    ebx
  40a382:	add    al,0x63
  40a384:	(bad)  
  40a385:	test   al,0xb0
  40a387:	bound  ebx,QWORD PTR [esi]
  40a389:	sbb    al,0x89
  40a38b:	out    0x20,al
  40a38d:	mov    dh,0x37
  40a38f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a390:	aam    0x73
  40a392:	adc    DWORD PTR [edi+0x33379e39],0x8c141c32
  40a39c:	mov    bh,0xdc
  40a39e:	sub    eax,DWORD PTR ds:0xea37865e
  40a3a4:	xchg   DWORD PTR [ecx+0x2f],edi
  40a3a7:	je     0x40a3da
  40a3a9:	loop   0x40a3ee
  40a3ab:	mul    esi
  40a3ad:	imul   edi,DWORD PTR [ecx+0x77],0x63376639
  40a3b4:	mov    ecx,0x3154abff
  40a3b9:	inc    esi
  40a3ba:	jbe    0x40a408
  40a3bc:	jnp    0x40a3fb
  40a3be:	das    
  40a3bf:	inc    esp
  40a3c0:	xor    DWORD PTR [esi+0x71],eax
  40a3c3:	xor    edi,DWORD PTR [ecx]
  40a3c5:	ds aaa 
  40a3c7:	xor    al,0xbb
  40a3c9:	jmp    eax
  40a3cb:	js     0x40a40d
  40a3cd:	leave  
  40a3ce:	cs ins BYTE PTR es:[edi],dx
  40a3d0:	xor    BYTE PTR [ebp-0xcfb3e7],dh
  40a3d6:	adc    esp,edi
  40a3d8:	push   0x16ff
	...
  40a3e9:	add    BYTE PTR [edx+ecx*8-0x9],dl
  40a3ed:	add    bl,bh
  40a3ef:	xor    BYTE PTR [ebp+0x5],dh
  40a3f2:	dec    edi
  40a3f3:	mov    cl,0x79
  40a3f5:	jmp    0xe602e25a
  40a3fa:	pusha  
  40a3fb:	fimul  DWORD PTR [edx-0x3b61e03]
  40a401:	push   ebx
  40a402:	addr16 fwait
  40a404:	pop    ss
  40a405:	ficom  WORD PTR [ebx]
  40a407:	or     eax,ebp
  40a409:	sub    eax,0x60ff3042
  40a40e:	mov    ds:0xbf9f682c,eax
  40a413:	(bad)  
  40a416:	mov    bl,0xbb
  40a418:	sub    BYTE PTR [eax],ch
  40a41a:	xor    BYTE PTR [di-0x1f],dh
  40a41e:	js     0x40a40a
  40a420:	(bad)  
  40a421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a422:	push   ebp
  40a423:	popf   
  40a424:	aad    0xe0
  40a426:	lahf   
  40a427:	xor    BYTE PTR [edi-0x15],ah
  40a42a:	pusha  
  40a42b:	add    eax,0x8d38e80
  40a430:	call   0xff70da0f
  40a435:	adc    DWORD PTR [esi+ebp*8],edi
  40a438:	inc    eax
  40a439:	jmp    0xc08b9e73
  40a43e:	lahf   
  40a43f:	xor    dh,bh
  40a441:	fsubr  QWORD PTR [eax+0x1d]
  40a444:	add    BYTE PTR [esi-0x73],bl
  40a447:	xor    BYTE PTR [eax+0x46],ch
  40a44a:	dec    edi
  40a44b:	(bad)  
	...
  40a45a:	add    BYTE PTR [eax],al
  40a45c:	add    BYTE PTR [edx+0x5],ah
  40a45f:	add    BYTE PTR [eax],al
  40a461:	retf   0x74f7
  40a464:	or     BYTE PTR [edx+0x75fffdea],dl
  40a46a:	div    DWORD PTR [esp+edi*8+0x75]
  40a46e:	jne    0x40a477
  40a470:	call   0x3f49ad
  40a475:	push   ebx
  40a476:	mov    BYTE PTR [ebx],0x0
  40a479:	iret   
  40a47a:	jp     0x40a468
  40a47c:	(bad)  
  40a47d:	out    dx,eax
  40a47e:	pop    es
  40a47f:	call   0xff383678
  40a484:	or     ecx,DWORD PTR [edx+0x60]
  40a487:	cmp    BYTE PTR [eax+0x16],ch
  40a48a:	cs inc eax
  40a48c:	add    dl,cl
  40a48e:	fisttp DWORD PTR [eax+0x4ff9c5ab]
  40a494:	push   eax
  40a495:	xor    cl,BYTE PTR [ecx]
  40a497:	add    bh,ch
  40a499:	hlt    
  40a49a:	pusha  
  40a49b:	adc    DWORD PTR [edx],edi
  40a49d:	jnp    0x40a4a8
  40a49f:	push   eax
  40a4a0:	(bad)  
  40a4a1:	jg     0x40a4a4
  40a4a3:	call   0xff3aaaf8
  40a4a8:	pop    eax
  40a4a9:	and    al,BYTE PTR [eax+eax*1]
  40a4ac:	out    dx,eax
  40a4ad:	xor    al,0x61
  40a4af:	push   ss
  40a4b0:	cmp    cl,BYTE PTR [ebx+0x9]
  40a4b3:	push   eax
  40a4b4:	jmp    FWORD PTR [edi+0x1]
  40a4b7:	call   0xff3a6af8
  40a4bc:	call   0x3f7723
	...
  40a4cd:	add    BYTE PTR [eax],al
  40a4cf:	add    BYTE PTR [ebx+0x4f0007c2],dh
  40a4d5:	jle    0x40a4c3
  40a4d7:	cmp    DWORD PTR [esi+0x600069ec],0xc
  40a4de:	push   DWORD PTR [ebp+0x52]
  40a4e1:	fisttp DWORD PTR [ecx-0x77074a5c]
  40a4e7:	inc    ebp
  40a4e8:	arpl   ax,bx
  40a4ea:	test   eax,0xb5a4419
  40a4ef:	call   0xff756cca
  40a4f4:	leave  
  40a4f5:	sti    
  40a4f6:	xor    al,0x75
  40a4f8:	pop    ebx
  40a4f9:	les    ecx,FWORD PTR [eax-0x561fdb01]
  40a4ff:	sbb    ebx,DWORD PTR [edx+edx*4]
  40a502:	or     ebp,eax
  40a504:	loop   0x40a515
  40a506:	xor    eax,0x37920cff
  40a50b:	dec    DWORD PTR [esi-0x385bd4dc]
  40a511:	pop    es
  40a512:	xor    eax,0x32921c9
  40a517:	push   ebp
  40a518:	fmul   DWORD PTR [eax]
  40a51a:	add    esp,0xbae1fe7
  40a520:	retf   
  40a521:	mov    ebx,0x33d4ff68
  40a526:	inc    ebx
  40a527:	movntq QWORD PTR [ebx+0x3],mm7
  40a52b:	add    BYTE PTR [ebx-0x5b],ah
  40a52e:	mov    ebp,0x13c9e0fb
	...
  40a543:	das    
  40a544:	push   ds
  40a545:	xor    al,0x75
  40a547:	push   ebx
  40a548:	ja     0x40a4f8
  40a54a:	sti    
  40a54b:	mov    ebx,0x9cff6943
  40a550:	mov    ch,0xbd
  40a552:	sti    
  40a553:	or     edx,DWORD PTR [edi-0x7]
  40a556:	inc    eax
  40a557:	arpl   WORD PTR [edi-0x58840452],dx
  40a55d:	push   0xac0c7cff
  40a562:	push   DWORD PTR [edi+edi*2+0x75]
  40a566:	push   eax
  40a567:	ins    BYTE PTR es:[edi],dx
  40a568:	xor    DWORD PTR [ebx],ecx
  40a56a:	call   0xff750a0f
  40a56f:	dec    ebx
  40a570:	add    eax,0x2e545d3d
  40a575:	rcr    DWORD PTR [esi+0x34e8c48a],1
  40a57b:	into   
  40a57c:	xor    DWORD PTR [ecx-0x63],eax
  40a57f:	or     ch,BYTE PTR [esi]
  40a581:	inc    esi
  40a582:	sar    DWORD PTR [esp+eax*1-0x2b12db17],cl
  40a589:	xor    eax,0x8b1d5cae
  40a58e:	dec    ebx
  40a58f:	sbb    al,0x2e
  40a591:	adc    DWORD PTR [eax-0x43],esi
  40a594:	sub    eax,0xeb99ab1e
  40a599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a59a:	add    eax,DWORD PTR [eax+edi*4]
  40a59d:	or     al,0x2b
  40a59f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5a0:	pop    ebx
  40a5a1:	push   es
  40a5a2:	xor    al,0x93
  40a5a4:	popf   
  40a5a5:	call   0x40a5ad
	...
  40a5b6:	cld    
  40a5b7:	outs   dx,BYTE PTR ds:[esi]
  40a5b8:	cdq    
  40a5b9:	xor    al,0x6e
  40a5bb:	std    
  40a5bc:	add    BYTE PTR [edx+0x1ce62dab],al
  40a5c2:	icebp  
  40a5c3:	data16 fidiv WORD PTR [ebx]
  40a5c6:	cmp    esi,DWORD PTR [ecx+0x2ec4c512]
  40a5cc:	push   esp
  40a5cd:	xor    bl,cl
  40a5cf:	call   0xd4f4d966
  40a5d4:	push   eax
  40a5d5:	add    eax,0xd4771e63
  40a5da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5db:	mov    bh,0xe0
  40a5dd:	sbb    eax,DWORD PTR [ebx]
  40a5df:	cmp    eax,0xb38b33a6
  40a5e4:	inc    esi
  40a5e5:	xor    ecx,DWORD PTR [ebp+ebp*1-0x6484cfe4]
  40a5ec:	inc    esi
  40a5ed:	xor    edi,DWORD PTR [ebx+edi*1-0x55]
  40a5f1:	add    BYTE PTR [ebx-0x28],ah
  40a5f4:	jno    0x40a616
  40a5f6:	loopne 0x40a640
  40a5f8:	add    BYTE PTR [ebp-0x3b],dh
  40a5fb:	sub    eax,0xb291d369
  40a600:	pop    es
  40a601:	push   ecx
  40a602:	aam    0x68
  40a604:	call   FWORD PTR [esi-0x32]
  40a607:	ret    0xc3fb
  40a60a:	pusha  
  40a60b:	lahf   
  40a60c:	sbb    DWORD PTR [esi-0x6],ecx
  40a60f:	add    al,0xe8
  40a611:	or     esi,DWORD PTR [eax+0x2c]
  40a614:	call   ebx
  40a616:	pusha  
  40a617:	lahf   
  40a618:	and    dh,BYTE PTR [esi]
	...
  40a626:	add    BYTE PTR [eax],al
  40a628:	add    dl,ch
  40a62a:	add    al,0xe8
  40a62c:	xlat   BYTE PTR ds:[ebx]
  40a62d:	push   ecx
  40a62e:	sub    al,0xff
  40a630:	xchg   ebx,eax
  40a631:	pusha  
  40a632:	lahf   
  40a633:	sbb    ebx,DWORD PTR [esi]
  40a635:	retf   0xe804
  40a638:	jecxz  0x40a68b
  40a63a:	sub    al,0xff
  40a63c:	sub    edi,0xd6e940ef
  40a642:	push   cs
  40a643:	push   DWORD PTR [eax+ebp*8+0x24]
  40a647:	sti    
  40a648:	div    DWORD PTR [ecx]
  40a64a:	sub    al,0x68
  40a64c:	push   eax
  40a64d:	int    0xc5
  40a64f:	call   DWORD PTR [edx-0x44]
  40a652:	sub    esi,DWORD PTR [ebp-0xf]
  40a655:	push   0x91d6fe19
  40a65a:	popf   
  40a65b:	cwde   
  40a65c:	adc    esp,DWORD PTR [esi+0x71e5692c]
  40a662:	mov    dl,0x7
  40a664:	rcl    DWORD PTR [ebx],1
  40a666:	sub    edi,edi
  40a668:	mov    dh,0x71
  40a66a:	mov    dl,0xfb
  40a66c:	scas   al,BYTE PTR es:[edi]
  40a66d:	fild   DWORD PTR [eax+ebp*8]
  40a670:	sbb    edi,esp
  40a672:	sub    edi,edi
  40a674:	mov    al,0x26
  40a676:	add    DWORD PTR [eax],eax
  40a678:	cmp    al,0x4
  40a67a:	sbb    DWORD PTR [ecx-0xcba75b],eax
  40a680:	add    ch,bl
  40a682:	test   DWORD PTR [ebp-0x4],eax
  40a685:	dec    edx
  40a686:	clc    
  40a687:	je     0x40a699
  40a689:	in     eax,dx
  40a68a:	ins    BYTE PTR es:[edi],dx
  40a68b:	or     ebp,eax
	...
  40a699:	add    BYTE PTR [eax],al
  40a69b:	add    BYTE PTR [edx],dl
  40a69d:	pusha  
  40a69e:	(bad)  
  40a69f:	call   DWORD PTR [ecx-0x38]
  40a6a2:	push   cs
  40a6a3:	test   DWORD PTR ds:0x75000001,eax
  40a6a9:	cmp    eax,0x84a00f7
  40a6ae:	add    bh,al
  40a6b0:	pop    es
  40a6b1:	hlt    
  40a6b2:	inc    BYTE PTR [edi]
  40a6b4:	cmp    cl,BYTE PTR [eax]
  40a6b6:	push   0x0
  40a6b8:	and    BYTE PTR [eax],cl
  40a6ba:	push   0x0
  40a6bc:	and    BYTE PTR [eax],cl
  40a6be:	lea    eax,[ebp+0x76]
  40a6c1:	pop    eax
  40a6c2:	mov    WORD PTR [ebp-0x1108a],es
  40a6c8:	retf   0x74f6
  40a6cb:	clc    
  40a6cc:	ins    DWORD PTR es:[edi],dx
  40a6cd:	ins    DWORD PTR es:[edi],dx
  40a6ce:	sti    
  40a6cf:	call   0x4006c4
  40a6d4:	icebp  
  40a6d5:	(bad)  
  40a6d6:	jae    0x40a6dd
  40a6d8:	arpl   WORD PTR [edx],bp
  40a6da:	add    BYTE PTR [eax],al
  40a6dc:	retf   0xbb8f
  40a6df:	sub    BYTE PTR [ebx-0x358a00ff],cl
  40a6e5:	cvtps2pi mm5,QWORD PTR [ecx-0x74b00a53]
  40a6ec:	cli    
  40a6ed:	stos   DWORD PTR es:[edi],eax
  40a6ee:	test   ah,dh
  40a6f0:	cmc    
  40a6f1:	cmc    
  40a6f2:	(bad)  
  40a6f3:	push   eax
  40a6f4:	dec    eax
  40a6f5:	or     DWORD PTR ds:0x88f5eda9,ebx
  40a6fb:	test   edx,ebx
  40a6fd:	in     eax,dx
  40a6fe:	(bad)  
  40a6ff:	inc    DWORD PTR [eax]
	...
  40a70d:	add    BYTE PTR [eax],al
  40a70f:	bnd jno 0x40a6b6
  40a712:	(bad)  
  40a713:	in     eax,dx
  40a714:	mov    bh,bh
  40a716:	arpl   WORD PTR [bp+0x40ee],dx
  40a71b:	arpl   WORD PTR [ebx+0x77],di
  40a71e:	lock ins BYTE PTR es:[edi],dx
  40a720:	xor    BYTE PTR [ecx],0xff
  40a723:	neg    BYTE PTR [ecx]
  40a725:	sbb    esi,DWORD PTR [esi-0x45]
  40a728:	mov    dl,0x30
  40a72a:	mov    esi,esp
  40a72c:	test   al,0x38
  40a72e:	call   DWORD PTR [edi+edx*2+0x3]
  40a732:	push   0xffc2e767
  40a737:	inc    ebp
  40a738:	mov    dh,BYTE PTR [edi+esi*8]
  40a73b:	cmp    al,0xbc
  40a73d:	xor    BYTE PTR [ebp+0x67],dh
  40a740:	aam    0xcc
  40a742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a743:	sub    al,0xec
  40a745:	jp     0x40a6cc
  40a747:	cmp    ebp,esp
  40a749:	xor    bh,bh
  40a74b:	loopne 0x40a6e6
  40a74d:	pop    ds
  40a74e:	not    DWORD PTR [esp+eiz*8]
  40a751:	add    esi,DWORD PTR [ebx+edx*2-0x6c]
  40a755:	add    eax,DWORD PTR [eax]
  40a757:	hlt    
  40a758:	rcr    BYTE PTR [ebx+0x35d39bf],cl
  40a75e:	jmp    FWORD PTR [esi-0x1300c6f0]
  40a764:	sub    esi,DWORD PTR [esi+0x3b07fb07]
  40a76a:	(bad)  
  40a76b:	fadd   QWORD PTR [edx+eax*1-0x649d3c00]
  40a772:	leave  
	...
  40a77f:	add    BYTE PTR [eax],al
  40a781:	add    BYTE PTR [ecx+0xeff03dd],cl
  40a787:	inc    ecx
  40a788:	cmp    bh,bh
  40a78a:	mov    esp,0xcb07b63b
  40a78f:	(bad)  
  40a790:	cmp    bh,bh
  40a792:	lods   al,BYTE PTR ds:[esi]
  40a793:	lahf   
  40a794:	ins    DWORD PTR es:[edi],dx
  40a795:	call   0x711b46
  40a79a:	pop    ss
  40a79b:	sub    al,0x9b
  40a79d:	call   DWORD PTR [ebp+eax*1+0x44fb7196]
  40a7a4:	jecxz  0x40a768
  40a7a6:	test   BYTE PTR [ebx],ch
  40a7a8:	pop    esp
  40a7a9:	sbb    esi,DWORD PTR [edx+ebp*1-0x72]
  40a7ad:	xor    dh,ch
  40a7af:	cld    
  40a7b0:	nop
  40a7b1:	jne    0x40a74d
  40a7b3:	sub    bh,BYTE PTR [esi-0x65]
  40a7b6:	arpl   WORD PTR ds:0x3fcb7186,ax
  40a7bc:	mov    bl,0xc2
  40a7be:	push   esp
  40a7bf:	sub    ebx,DWORD PTR [ebx+ebx*1+0x305e2a54]
  40a7c6:	into   
  40a7c7:	std    
  40a7c8:	inc    eax
  40a7c9:	lea    ebp,[edx]
  40a7cb:	sub    cl,BYTE PTR [esi+0x30]
  40a7ce:	out    dx,al
  40a7cf:	sbb    BYTE PTR [esi],bh
  40a7d1:	xor    BYTE PTR [ebx*1+0x2a246729],ch
  40a7d8:	ss jbe 0x40a7e6
  40a7db:	xor    ch,BYTE PTR [esi]
  40a7dd:	xor    BYTE PTR [ebx],cl
  40a7df:	jo     0x40a82e
  40a7e1:	xor    BYTE PTR [edx+ebp*1],cl
  40a7e4:	push   esp
  40a7e5:	xor    eax,DWORD PTR [eax]
	...
  40a7f3:	add    BYTE PTR [eax],al
  40a7f5:	or     al,0x2a
  40a7f7:	push   ss
  40a7f8:	xor    BYTE PTR [esi-0x7],dh
  40a7fb:	or     eax,0x3d1d5cb6
  40a800:	xor    esp,ebp
  40a802:	sub    esi,edi
  40a804:	jne    0x40a7f9
  40a806:	xor    esi,esi
  40a808:	das    
  40a809:	retf   
  40a80a:	mov    eax,DWORD PTR [ebp+0x30]
  40a80d:	aam    0x29
  40a80f:	sub    al,0x2c
  40a811:	mov    edx,0xc42fdf3c
  40a816:	sub    DWORD PTR [eax+esi*1-0x35],ebx
  40a81a:	and    eax,0x3c630457
  40a81f:	stos   DWORD PTR es:[edi],eax
  40a820:	add    BYTE PTR [ebx-0x30],ah
  40a823:	jno    0x40a845
  40a825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a826:	scas   eax,DWORD PTR es:[edi]
  40a827:	jmp    esp
  40a829:	js     0x40a867
  40a82b:	test   al,0xae
  40a82d:	inc    esp
  40a82e:	(bad)  
  40a82f:	mov    edi,0xd3a17e1d
  40a834:	jecxz  0x40a7d5
  40a836:	sub    DWORD PTR [edi-0x7f],ecx
  40a839:	lods   eax,DWORD PTR ds:[esi]
  40a83a:	popa   
  40a83b:	dec    DWORD PTR [esi-0x16984671]
  40a841:	pusha  
  40a842:	sbb    bh,BYTE PTR [esi+0x40ef1f11]
  40a848:	jmp    0xe1b5d07d
  40a84d:	js     0x40a831
  40a84f:	enter  0x7c66,0xcd
  40a853:	addr16 call 0xc1fec0b9
	...
  40a865:	add    BYTE PTR [eax],al
  40a867:	add    BYTE PTR [edx-0x15],bh
  40a86a:	inc    eax
  40a86b:	jmp    0xf1b5d080
  40a870:	dec    eax
  40a871:	push   ss
  40a872:	leave  
  40a873:	ds je  0x40a893
  40a876:	cmp    eax,0xc9284c8d
  40a87b:	sub    edx,DWORD PTR [edi]
  40a87d:	sub    DWORD PTR [edx+esi*2+0x43],edx
  40a881:	test   ah,al
  40a883:	sbb    eax,0xe969d02d
  40a888:	fimul  DWORD PTR [ebx]
  40a88a:	call   DWORD PTR [eax+edi*8+0x3c485d20]
  40a891:	sub    BYTE PTR [ecx+0x357c34a4],cl
  40a897:	lea    edi,[eax-0x2d9e003b]
  40a89d:	mov    al,ds:0x85672827
  40a8a2:	aas    
  40a8a3:	jmp    0xe9fc2d6d
  40a8a8:	pusha  
  40a8a9:	add    eax,0xc5ca9468
  40a8ae:	(bad)  
  40a8af:	dec    DWORD PTR [ecx+ecx*1-0x50]
  40a8b3:	jbe    0x40a86f
  40a8b5:	add    al,0xb
  40a8b7:	rcr    BYTE PTR [esi+0x67],0x3f
  40a8bb:	adc    BYTE PTR [edx-0x27bf0fc],0x3
  40a8c2:	add    BYTE PTR [eax],al
  40a8c4:	dec    edx
  40a8c5:	mov    DWORD PTR [edx+edi*1-0x1217feb5],esi
	...
  40a8d8:	add    BYTE PTR [eax],al
  40a8da:	add    BYTE PTR [esi+0x1],cl
  40a8dd:	add    BYTE PTR [edx+0x79],bl
  40a8e0:	(bad)  
  40a8e1:	dec    edi
  40a8e2:	call   0x3f4dfa
  40a8e7:	jp     0x40a93a
  40a8e9:	add    BYTE PTR [bp+si+0x7],cl
  40a8ed:	mov    esi,0x401e7a68
  40a8f2:	add    BYTE PTR [edx],cl
  40a8f4:	xlat   BYTE PTR ds:[ebx]
  40a8f5:	je     0x40a8ff
  40a8f7:	mov    ds:0xa5ffc87e,al
  40a8fc:	cmp    al,0x67
  40a8fe:	add    DWORD PTR [edx],edi
  40a900:	pop    es
  40a901:	mov    esi,0x401e7068
  40a906:	add    dl,bh
  40a908:	(bad)  
  40a909:	je     0x40a913
  40a90b:	mov    ds:0x45ffc882,al
  40a910:	or     al,0xb2
  40a912:	mov    ds:0x43ead765,eax
  40a917:	loop   0x40a8bd
  40a919:	cmp    DWORD PTR [ecx+0xa],eax
  40a91c:	dec    edi
  40a91d:	out    0x41,eax
  40a91f:	ins    BYTE PTR es:[edi],dx
  40a920:	add    al,0x0
  40a922:	or     edi,DWORD PTR [edx]
  40a924:	jo     0x40a959
  40a926:	push   esi
  40a927:	bound  esp,QWORD PTR [eax-0x54]
  40a92a:	inc    ebp
  40a92c:	push   edx
  40a92d:	dec    edi
  40a92e:	push   0xbeef03ba
  40a933:	xor    al,cl
  40a935:	cmp    DWORD PTR [ecx+0x63],eax
  40a938:	push   ds
  40a939:	sar    esi,cl
  40a93b:	cs sbb edx,DWORD PTR es:[ebp+0x0]
	...
  40a94c:	add    BYTE PTR [eax],al
  40a94e:	fwait
  40a94f:	ds sub eax,0x31d3b58
  40a955:	out    dx,eax
  40a956:	ffree  st(5)
  40a958:	cmp    DWORD PTR [edx],edi
  40a95a:	and    bl,BYTE PTR [esi]
  40a95c:	sar    esi,cl
  40a95e:	push   ss
  40a95f:	sbb    eax,DWORD PTR ss:[ecx-0x65]
  40a963:	xchg   BYTE PTR ds:0x2cbb0ee8,ch
  40a969:	dec    DWORD PTR [eax+0x2d7fc51c]
  40a96f:	push   ds
  40a970:	mov    dh,0xf9
  40a972:	sbb    eax,0x1abff0aa
  40a977:	mov    al,0x2c
  40a979:	call   DWORD PTR [ebx+ebp*4+0x5d]
  40a97d:	cmp    BYTE PTR [edi+ebp*1-0x7a],ah
  40a981:	inc    ebp
  40a982:	inc    esp
  40a983:	enter  0x6a2c,0x59
  40a987:	iret   
  40a988:	mov    dh,0x7
  40a98a:	dec    ebx
  40a98b:	fsubr  QWORD PTR ds:0xe0532cff
  40a991:	(bad)  
  40a992:	scas   al,BYTE PTR es:[edi]
  40a993:	xor    al,0x1b
  40a995:	mov    ecx,0x6a2cf01d
  40a99a:	ja     0x40a973
  40a99c:	mov    dh,0x7
  40a99e:	sti    
  40a99f:	iret   
  40a9a0:	sub    eax,0x259504ff
  40a9a5:	cmp    ah,BYTE PTR [edx-0x57cad3e4]
  40a9ab:	inc    ebp
  40a9ac:	ret    0xedff
  40a9af:	test   eax,0xe7fa
	...
  40a9c0:	add    BYTE PTR [edx],dh
  40a9c2:	sub    DWORD PTR [edi+edi*8],ebp
  40a9c5:	dec    ebx
  40a9c6:	imul   cl
  40a9c8:	inc    eax
  40a9c9:	arpl   WORD PTR [ecx+eax*1+0x69056300],ax
  40a9d0:	sub    al,0x4e
  40a9d2:	std    
  40a9d3:	ror    BYTE PTR [esi+edi*4],1
  40a9d6:	es (bad) 
  40a9d8:	sub    al,0x2e
  40a9da:	sub    esi,ecx
  40a9dc:	mov    dh,0x64
  40a9de:	sbb    eax,0x26a4636b
  40a9e3:	push   ds
  40a9e4:	into   
  40a9e5:	stos   DWORD PTR es:[edi],eax
  40a9e6:	inc    ebx
  40a9e7:	in     eax,dx
  40a9e8:	add    ebp,DWORD PTR [esi]
  40a9ea:	jp     0x40a9a9
  40a9ec:	and    BYTE PTR [edi-0x7bd361ab],0x78
  40a9f3:	and    al,0x30
  40a9f5:	adc    esp,DWORD PTR [esi]
  40a9f7:	sbb    al,0x14
  40a9f9:	je     0x40a9ab
  40a9fb:	fcomp  QWORD PTR [ebx]
  40a9fd:	and    eax,0x5803e8b0
  40aa02:	inc    ebp
  40aa03:	out    dx,al
  40aa04:	xchg   BYTE PTR [ecx+0x1c03e903],ah
  40aa0a:	shl    BYTE PTR [eax+0x3],0x63
  40aa0e:	add    eax,0x319e44e9
  40aa13:	pop    esi
  40aa14:	add    al,0x63
  40aa16:	add    eax,0x5c903c3
  40aa1b:	ret    
  40aa1c:	add    edi,DWORD PTR [ecx+0x30c67405]
  40aa22:	aad    0x6b
  40aa24:	xchg   BYTE PTR [eax],al
	...
  40aa32:	add    BYTE PTR [eax],al
  40aa34:	pop    ss
  40aa35:	cs ss sub al,0xb3
  40aa39:	es mov ah,0x2b
  40aa3c:	or     al,0xb0
  40aa3e:	and    al,0x1b
  40aa40:	imul   esi,DWORD PTR [eax+0x456803e8],0xffffff9d
  40aa47:	push   es
  40aa48:	or     al,BYTE PTR [eax]
  40aa4a:	jmp    0x40aa4f
  40aa4c:	arpl   WORD PTR [ebp+0x5a3db44],bx
  40aa52:	(bad)  
  40aa53:	mov    ch,0x6c
  40aa55:	sbb    eax,0x263eb200
  40aa5a:	call   FWORD PTR [ecx+0x6c8d554b]
  40aa60:	xchg   ebx,eax
  40aa61:	cs (bad) 
  40aa63:	ficom  WORD PTR [edi+0x4102e7d3]
  40aa69:	jmp    DWORD PTR es:[eax-0x1e]
  40aa6d:	xor    al,0xf7
  40aa6f:	(bad)  
  40aa70:	js     0x40aa8f
  40aa72:	or     DWORD PTR [ebx-0x1695d9b8],0x283af9f8
  40aa7c:	addr16 es mov ch,0x99
  40aa80:	push   eax
  40aa81:	call   FWORD PTR es:[esi+0x6de7f9b2]
  40aa88:	add    ah,BYTE PTR [esi]
  40aa8a:	jmp    DWORD PTR [eax-0x1e]
  40aa8d:	and    bh,dh
  40aa8f:	xchg   BYTE PTR [eax],bh
  40aa91:	fwait
  40aa92:	call   DWORD PTR [eax]
  40aa94:	jb     0x40aa76
  40aa96:	inc    eax
  40aa97:	jmp    0x40aa9c
	...
  40aaa4:	add    BYTE PTR [eax],al
  40aaa6:	add    BYTE PTR [ecx+0x7876f05a],cl
  40aaac:	and    al,0xff
  40aaae:	fmul   QWORD PTR [ebp+ebp*1+0x69]
  40aab2:	test   BYTE PTR [eax+0x5b6c8924],cl
  40aab8:	sbb    al,0xff
  40aaba:	dec    esi
  40aabb:	int    0x24
  40aabd:	addr16 out 0x35,eax
  40aac0:	(bad)  
  40aac1:	(bad)  
  40aac2:	cmp    eax,0x36f71592
  40aac7:	dec    eax
  40aac8:	and    al,0x75
  40aaca:	(bad)  [eax-0x2d]
  40aacd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aace:	cmp    BYTE PTR es:[esi+0x24301185],cl
  40aad5:	inc    DWORD PTR [ebx-0x2dd952a0]
  40aadb:	daa    
  40aadc:	and    eax,0xd92700fe
  40aae1:	idiv   bh
  40aae3:	fucomp st(7)
  40aae5:	je     0x40aaf3
  40aae7:	bound  ebx,QWORD PTR [esp+eiz*4]
  40aaea:	(bad)  
  40aaeb:	mov    ebp,0xa5dc84a1
  40aaf0:	out    dx,eax
  40aaf1:	dec    BYTE PTR [ebp-0x917b9]
  40aaf7:	lea    edi,[eax]
  40aaf9:	addr16 aaa 
  40aafb:	push   ecx
  40aafc:	dec    edx
  40aafd:	(bad)  
  40aafe:	(bad)  
  40aaff:	daa    
  40ab00:	fdiv   st,st(6)
  40ab02:	(bad)  
  40ab03:	fucomp st(7)
  40ab05:	xor    al,0x4b
  40ab07:	arpl   WORD PTR [edx-0x1],cx
  40ab0a:	out    0x0,eax
	...
  40ab18:	add    BYTE PTR [eax],al
  40ab1a:	stos   BYTE PTR es:[edi],al
  40ab1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab1c:	(bad)  
  40ab1d:	call   DWORD PTR [ecx+0x91973c8]
  40ab23:	lods   eax,DWORD PTR ds:[esi]
  40ab24:	fcomip st,st(7)
  40ab26:	int    0xef
  40ab28:	add    esi,DWORD PTR [ebp+0x6a]
  40ab2b:	out    dx,eax
  40ab2c:	das    
  40ab2d:	(bad)  
  40ab2e:	test   edi,0x38ddfff6
  40ab34:	out    0xdd,eax
  40ab36:	stos   DWORD PTR es:[edi],eax
  40ab37:	out    dx,eax
  40ab38:	(bad)  
  40ab39:	jmp    0x40ab71
  40ab3b:	and    edi,DWORD PTR [edi-0x18c7cb8c]
  40ab41:	shr    ebx,1
  40ab43:	out    dx,al
  40ab44:	inc    bh
  40ab46:	(bad)  
  40ab47:	shl    dh,1
  40ab49:	call   FWORD PTR [ebp+0x3afffff5]
  40ab4f:	popf   
  40ab50:	test   al,dl
  40ab52:	push   ebp
  40ab53:	out    dx,eax
  40ab54:	(bad)  
  40ab55:	push   eax
  40ab56:	and    cl,BYTE PTR [edx+0x3a]
  40ab59:	inc    ecx
  40ab5a:	cli    
  40ab5b:	out    dx,al
  40ab5c:	mov    ah,0xf0
  40ab5e:	gs out dx,eax
  40ab60:	(bad)  
  40ab61:	call   edi
  40ab63:	sbb    esp,edi
  40ab65:	lds    esp,FWORD PTR [ebx-0x2e]
  40ab68:	sub    edi,edi
  40ab6a:	fisubr DWORD PTR [eax+0xae4f74e]
  40ab70:	xchg   BYTE PTR [ebp-0xd6e539],bh
  40ab76:	arpl   WORD PTR [ebx],bp
  40ab78:	jg     0x40ab15
  40ab7a:	arpl   WORD PTR [esi],bp
  40ab7c:	add    eax,DWORD PTR [ebx+0x0]
	...
  40ab8a:	add    BYTE PTR [eax],al
  40ab8c:	add    BYTE PTR [esi],al
  40ab8e:	cmp    dh,BYTE PTR [ecx]
  40ab90:	(bad)  
  40ab91:	mov    esp,0xe583f82d
  40ab96:	sub    eax,0x90e00003
  40ab9b:	sbb    al,0xf7
  40ab9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab9e:	dec    edx
  40ab9f:	add    al,0xf
  40aba1:	out    0xac,eax
  40aba3:	add    eax,DWORD PTR [eax]
  40aba5:	arpl   si,ax
  40aba7:	adc    eax,DWORD PTR [eax]
  40aba9:	jl     0x40ab5e
  40abab:	sub    BYTE PTR [ebp+0x5b],dh
  40abae:	jbe    0x40abd8
  40abb0:	popf   
  40abb1:	jl     0x40ab35
  40abb3:	sub    DWORD PTR [ebp-0xd67d79],esi
  40abb9:	ins    BYTE PTR es:[edi],dx
  40abba:	clc    
  40abbb:	sti    
  40abbc:	out    0x13,eax
  40abbe:	lods   al,BYTE PTR ds:[esi]
  40abbf:	sub    bh,bh
  40abc1:	pop    esp
  40abc2:	ficomp DWORD PTR [ebx]
  40abc4:	not    DWORD PTR [esp+ebx*4+0x28]
  40abc8:	jne    0x40ac25
  40abca:	test   dh,al
  40abcc:	popf   
  40abcd:	inc    esp
  40abce:	lods   al,BYTE PTR ds:[esi]
  40abcf:	sub    BYTE PTR [ebp-0xd743b9],dh
  40abd5:	xor    al,0x42
  40abd7:	sti    
  40abd8:	out    0x77,eax
  40abda:	mov    dl,0x28
  40abdc:	jmp    DWORD PTR [edx+eiz*4]
  40abdf:	dec    ebx
  40abe0:	neg    DWORD PTR [esp+eiz*8]
  40abe3:	sub    BYTE PTR [ebp+0x6b],dh
  40abe6:	les    edi,FWORD PTR [edi]
  40abe8:	popf   
  40abe9:	or     al,0xf4
  40abeb:	sub    BYTE PTR [ebp+0x291e0627],dh
	...
  40abfd:	add    BYTE PTR [eax],al
  40abff:	add    ah,bh
  40ac01:	and    dl,BYTE PTR [ebx+edi*8+0x2976fdfc]
  40ac08:	in     al,dx
  40ac09:	xchg   BYTE PTR [eax+edx*2-0x14],cl
  40ac0d:	and    al,BYTE PTR [esi]
  40ac0f:	add    al,0x57
  40ac11:	(bad)  
  40ac12:	imul   esp,DWORD PTR [edi-0x4d],0x6728f61a
  40ac19:	cwde   
  40ac1a:	fidivr DWORD PTR [esi+ebx*8+0x39]
  40ac1e:	fisubr WORD PTR [eax]
  40ac20:	mov    esp,0x2e291922
  40ac25:	or     eax,0x22ce8fc1
  40ac2a:	into   
  40ac2b:	sbb    al,0x59
  40ac2d:	scas   eax,DWORD PTR es:[edi]
  40ac2e:	call   0xd14dc25b
  40ac33:	jnp    0x40ac2b
  40ac35:	and    dh,BYTE PTR [esi-0x49d629d8]
  40ac3b:	sub    BYTE PTR [ebp+ebp*1+0x227c639d],al
  40ac42:	sahf   
  40ac43:	outs   dx,BYTE PTR ds:[esi]
  40ac44:	xchg   DWORD PTR [edx],ebx
  40ac46:	xchg   esi,eax
  40ac47:	sub    BYTE PTR [ebx+0x2c],bh
  40ac4a:	dec    ecx
  40ac4b:	sub    BYTE PTR [edx+eiz*1+0x3c],ah
  40ac4f:	sbb    edx,DWORD PTR [edx+eiz*1+0x7e]
  40ac53:	sbb    esi,DWORD PTR ds:0x4c287665
  40ac59:	pop    eax
  40ac5a:	lea    esi,[eax]
  40ac5c:	inc    esp
  40ac5d:	and    dl,BYTE PTR [ecx+0x54]
  40ac60:	add    esp,DWORD PTR [edx]
  40ac62:	pop    esi
  40ac63:	sub    BYTE PTR [eax],al
	...
  40ac71:	add    BYTE PTR [eax],al
  40ac73:	out    dx,al
  40ac74:	cmp    BYTE PTR [esi+0x28],bl
  40ac77:	sub    al,0x2d
  40ac79:	and    DWORD PTR [ebx+0x24],esp
  40ac7c:	and    al,BYTE PTR [esi+0x6e]
  40ac7f:	adc    ebx,DWORD PTR [edx]
  40ac81:	sub    BYTE PTR ds:[eax+ebx*4],dl
  40ac85:	jmp    esp
  40ac87:	cmp    ebx,DWORD PTR [eax+0x20794107]
  40ac8d:	jmp    DWORD PTR [esi]
  40ac8f:	dec    ebx
  40ac90:	pop    eax
  40ac91:	lock push ss
  40ac93:	dec    ebx
  40ac94:	and    ch,al
  40ac96:	inc    ebp
  40ac97:	and    BYTE PTR [edx],0xff
  40ac9a:	push   cs
  40ac9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac9c:	sbb    ecx,ebp
  40ac9e:	xor    al,0x85
  40aca0:	and    bh,bh
  40aca2:	inc    BYTE PTR [esi]
  40aca4:	push   ds
  40aca5:	call   0xff62c4a9
  40acaa:	and    BYTE PTR [esi],bl
  40acac:	adc    DWORD PTR [eax],eax
  40acae:	cmp    al,0x38
  40acb0:	xor    DWORD PTR [ebx-0x50745b],eax
  40acb6:	inc    edx
  40acb7:	pop    ebx
  40acb8:	and    dh,BYTE PTR [ebp-0x1f]
  40acbb:	dec    eax
  40acbc:	arpl   WORD PTR [ebp+0x458c44c6],bx
  40acc2:	mov    ebp,0x283ad0f7
  40acc7:	and    dh,BYTE PTR [di]
  40acca:	and    ah,BYTE PTR [esi-0x4d5a003c]
  40acd0:	or     eax,ebp
  40acd2:	sbb    ecx,DWORD PTR [edx+0x22]
  40acd5:	inc    DWORD PTR [ecx]
	...
  40ace3:	add    BYTE PTR [eax],al
  40ace5:	add    BYTE PTR [edx-0x3716bf22],ch
  40aceb:	add    eax,DWORD PTR [eax]
  40aced:	jmp    0xf1b5cdd2
  40acf2:	js     0x40ac99
  40acf4:	cld    
  40acf5:	jbe    0x40ac7b
  40acf7:	and    BYTE PTR [ebp+0x6d],dh
  40acfa:	jl     0x40ac96
  40acfc:	pop    es
  40acfd:	push   ecx
  40acfe:	xchg   esi,eax
  40acff:	cmp    bh,0x5e
  40ad02:	jbe    0x40ad47
  40ad04:	add    al,0xe9
  40ad06:	adc    ecx,DWORD PTR [esp+ebp*8-0x1e65c98]
  40ad0d:	add    BYTE PTR [ebp+0x300069e8],ah
  40ad13:	push   cs
  40ad14:	push   DWORD PTR [ebp+0x2]
  40ad17:	std    
  40ad18:	jno    0x40acb7
  40ad1a:	xor    eax,0x464588e8
  40ad1f:	add    DWORD PTR [ebx],0x8d050a01
  40ad25:	test   DWORD PTR [ebp-0x19],ecx
  40ad28:	(bad)  
  40ad29:	jmp    FWORD PTR [edx-0x358e2e04]
  40ad2f:	add    al,0xb
  40ad31:	ror    BYTE PTR [esi+0x38],0x3c
  40ad35:	add    al,0xbb
  40ad37:	add    al,0x0
  40ad39:	ja     0x40acda
  40ad3b:	jl     0x40ada1
  40ad3d:	cmp    ecx,DWORD PTR [ebx-0x727a72f7]
  40ad43:	jmp    0xa3a9:0x16afffe
	...
  40ad56:	add    BYTE PTR [eax],al
  40ad58:	add    BYTE PTR [ebp-0x7597b019],dl
  40ad5e:	add    al,0xef
  40ad60:	mov    esi,0x874e87a
  40ad65:	mov    ds:0xb5ffc0e5,al
  40ad6a:	cld    
  40ad6b:	cmc    
  40ad6c:	lahf   
  40ad6d:	(bad)
  40ad70:	jne    0x40ad48
  40ad72:	out    0x74,eax
  40ad74:	or     dl,ah
  40ad76:	sbb    DWORD PTR [edi+edi*8+0x4c1e1d5],0xec8a354a
  40ad81:	leave  
  40ad82:	loopne 0x40ad7f
  40ad84:	push   0x3a
  40ad86:	jle    0x40ada5
  40ad88:	dec    DWORD PTR [edi+0x1c]
  40ad8b:	out    0xd,eax
  40ad8d:	out    0xe6,eax
  40ad8f:	dec    BYTE PTR [ecx+0x67e7ff]
  40ad95:	arpl   WORD PTR [esi],bp
  40ad97:	push   ss
  40ad98:	mov    esi,0x40ea3bbb
  40ad9d:	arpl   WORD PTR [esi],si
  40ad9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ada0:	cmp    ah,BYTE PTR [edx+0x5b75262e]
  40ada6:	(bad)  
  40ada7:	dec    edi
  40ada8:	les    eax,FWORD PTR [edi+ebp*8]
  40adab:	and    eax,0xafe6ff75
  40adb0:	pop    es
  40adb1:	or     edx,DWORD PTR [eax-0x78]
  40adb4:	(bad)  
  40adb5:	in     al,dx
  40adb6:	in     al,0x40
  40adb8:	add    al,0x63
  40adba:	pop    ecx
  40adbb:	jp     0x40ada9
	...
  40adc9:	add    BYTE PTR [eax],al
  40adcb:	add    dl,ah
  40adcd:	icebp  
  40adce:	dec    esi
  40adcf:	not    esp
  40add1:	push   ds
  40add2:	ja     0x40ae19
  40add4:	iret   
  40add5:	jge    0x40adfd
  40add7:	jne    0x40ae4c
  40add9:	das    
  40adda:	scas   eax,DWORD PTR es:[edi]
  40addb:	or     ecx,ebx
  40addd:	inc    ecx
  40adde:	mov    bl,0xff
  40ade0:	mov    ah,0x12
  40ade2:	inc    ebx
  40ade3:	(bad)  
  40ade5:	inc    ecx
  40ade6:	add    eax,DWORD PTR [eax]
  40ade8:	arpl   WORD PTR [edi-0x41],sp
  40adeb:	mul    DWORD PTR [ebx+0x2e]
  40adee:	add    eax,DWORD PTR [eax]
  40adf0:	pushf  
  40adf1:	call   0x2ea5ad25
  40adf6:	add    ebp,DWORD PTR [edx+0x63]
  40adf9:	les    eax,FWORD PTR [ebx]
  40adfb:	push   0x63
  40adfd:	hlt    
  40adfe:	add    ecx,DWORD PTR [ebp-0x732b85e2]
  40ae04:	out    0x81,al
  40ae06:	sub    eax,0x24dd64ff
  40ae0b:	jne    0x40ae68
  40ae0d:	mov    BYTE PTR [edi-0x4c98b405],ch
  40ae13:	dec    DWORD PTR [esp+0x43]
  40ae17:	je     0x40ae77
  40ae19:	test   DWORD PTR [ebp+0x1],ebp
  40ae1c:	arpl   WORD PTR ds:0xedf89be9,ax
  40ae22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae23:	add    ebp,DWORD PTR [ecx+ebx*4]
  40ae26:	clc    
  40ae27:	sbb    edi,DWORD PTR [edx]
  40ae29:	fs dec esi
  40ae2b:	and    eax,0x77198ab3
	...
  40ae3c:	add    BYTE PTR [eax],al
  40ae3e:	add    dh,bl
  40ae40:	sbb    DWORD PTR [esi],esi
  40ae42:	and    eax,0x1b9ab60c
  40ae47:	sub    ah,BYTE PTR [esi+ebp*1+0x25]
  40ae4b:	jmp    0x111e:0xf42d1988
  40ae52:	aad    0xcd
  40ae54:	push   ds
  40ae55:	push   ss
  40ae56:	ja     0x40ae36
  40ae58:	and    eax,0xb5dc2516
  40ae5d:	nop
  40ae5e:	jp     0x40adf8
  40ae60:	(bad)  
  40ae61:	call   0xfe56c48a
  40ae66:	and    al,0xc4
  40ae68:	push   ds
  40ae69:	je     0x40ae62
  40ae6b:	(bad)  
  40ae6c:	lock mov ah,BYTE PTR [esp+esi*4]
  40ae70:	mov    WORD PTR [edi+ebx*1-0x4c],fs
  40ae74:	push   ds
  40ae75:	(bad)  
  40ae76:	cdq    
  40ae77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae79:	jp     0x40ae63
  40ae7b:	and    eax,DWORD PTR ds:0x16936ec6
  40ae81:	mov    esi,0xe4988c24
  40ae86:	sbb    esi,DWORD PTR [ecx+0x63]
  40ae89:	scas   al,BYTE PTR es:[edi]
  40ae8a:	and    al,0xea
  40ae8c:	mov    BYTE PTR [ebp+0x131e742c],dl
  40ae92:	add    al,0xfb
  40ae94:	jbe    0x40ae68
  40ae96:	ret    0x1f64
  40ae99:	push   esp
  40ae9a:	xor    edx,DWORD PTR [esi+ebx*1-0x7a]
  40ae9e:	and    al,0xce
  40aea0:	adc    DWORD PTR [ecx+0x2c],edx
	...
  40aeb2:	add    bl,BYTE PTR [esi]
  40aeb4:	add    BYTE PTR [esi-0x37],dh
  40aeb7:	mov    al,ch
  40aeb9:	jbe    0x40ae42
  40aebb:	push   ds
  40aebc:	push   0xffffffe9
  40aebe:	fdivr  DWORD PTR [esi+0x3b]
  40aec1:	test   al,0x60
  40aec3:	push   ds
  40aec4:	mov    ch,0x59
  40aec6:	ja     0x40aee6
  40aec8:	dec    DWORD PTR [esi-0x33]
  40aecb:	or     eax,ebp
  40aecd:	and    eax,0x70ff1e81
  40aed2:	lea    eax,[ecx-0x9]
  40aed5:	ss aas 
  40aed7:	stos   DWORD PTR es:[edi],eax
  40aed8:	inc    eax
  40aeda:	xchg   ebp,eax
  40aedb:	fiadd  DWORD PTR [eax-0x17]
  40aede:	aas    
  40aedf:	pop    eax
  40aee0:	lock push ss
  40aee2:	inc    edi
  40aee3:	push   ds
  40aee4:	call   FWORD PTR [esp+ebp*8-0x78b73edb]
  40aeeb:	push   ds
  40aeec:	mov    DWORD PTR [eax+ebp*1+0x16],ebp
  40aef0:	(bad)  
  40aef1:	(bad)  
  40aef2:	jmp    0x40af11
  40aef4:	add    BYTE PTR [bp+di-0x3c],bh
  40aef9:	in     eax,dx
  40aefa:	dec    esi
  40aefb:	adc    eax,0x1e80e6f7
  40af00:	jne    0x40aeef
  40af02:	js     0x40af6b
  40af04:	mov    eax,ds:0x858c80d6
  40af09:	mov    ch,0x78
  40af0b:	push   ds
  40af0c:	jmp    FWORD PTR [edx+0x2]
  40af0f:	sub    edi,esi
  40af11:	mov    esi,0x30740540
	...
  40af22:	add    BYTE PTR [eax],al
  40af24:	add    ah,bl
  40af26:	pop    edi
  40af27:	in     al,dx
  40af28:	mov    dh,0x40
  40af2a:	push   ds
  40af2b:	add    BYTE PTR ds:0x91bd82cf,bl
  40af31:	dec    eax
  40af32:	push   ds
  40af33:	(bad)  
  40af34:	jmp    0xf9a85605
  40af39:	pusha  
  40af3a:	sub    al,0xbe
  40af3c:	add    ch,bl
  40af3e:	jle    0x40af47
  40af40:	call   0x3f4b38
  40af45:	int    0xbe
  40af47:	jmp    0x40af40
  40af49:	int    0xe8
  40af4b:	(bad)  
  40af4c:	jne    0x40af80
  40af4e:	icebp  
  40af4f:	cmp    al,0x9b
  40af51:	(bad)  
  40af52:	call   0xe36555
  40af57:	(bad)  
  40af58:	jmp    FWORD PTR [ebp+0x6de8077e]
  40af5e:	pushf  
  40af5f:	(bad)  
  40af60:	dec    DWORD PTR [ebp-0x42]
  40af63:	fcomip st,st(7)
  40af65:	dec    ebp
  40af66:	call   0xe76569
  40af6b:	(bad)  
  40af6c:	(bad)  
  40af6d:	cmp    eax,0x5de8077e
  40af72:	fwait
  40af73:	(bad)  
  40af74:	dec    DWORD PTR [ebp-0x42]
  40af77:	xlat   BYTE PTR ds:[ebx]
  40af78:	imul   DWORD PTR [ebp-0x18]
  40af7b:	(bad)  
  40af7c:	jne    0x40af50
  40af7e:	lock or al,0x9b
  40af81:	int    0xe7
  40af83:	(bad)  
  40af84:	mov    ch,0x6e
  40af86:	add    bh,bh
  40af88:	inc    DWORD PTR [eax]
	...
  40af96:	add    BYTE PTR [eax],al
  40af98:	int    0x7d
  40af9a:	pop    es
  40af9b:	call   0x3f4a5d
  40afa0:	lea    edi,[ebp-0x1872082d]
  40afa6:	(bad)  
  40afa7:	jne    0x40af2b
  40afa9:	lock lock call 0xffa6:0xb5fee79d
  40afb2:	(bad)  
  40afb3:	jmp    DWORD PTR [edx-0x32006305]
  40afb9:	out    0xb4,eax
  40afbb:	in     al,dx
  40afbc:	aad    0xe7
  40afbe:	(bad)  
  40afbf:	call   0x40358e
  40afc4:	arpl   WORD PTR [ebx+0x58],si
  40afc7:	call   0xe8633b20
  40afcc:	mov    eax,ds:0xd14cff21
  40afd2:	test   DWORD PTR ds:[ebx+edx*4+0x2a],0x21aadeda
  40afdb:	(bad)  
  40afdc:	out    dx,al
  40afdd:	lds    ebx,FWORD PTR [ecx]
  40afdf:	jmp    FWORD PTR [esi+esi*4]
  40afe2:	push   ecx
  40afe3:	popf   
  40afe4:	and    al,0xb3
  40afe6:	and    DWORD PTR [ebp-0xde4cc9],esi
  40afec:	or     ebp,edx
  40afee:	jg     0x40afef
  40aff0:	or     al,0xdb
  40aff2:	push   edi
  40aff3:	lock or al,0xd3
  40aff6:	and    edi,edi
  40aff8:	jbe    0x40b034
  40affa:	and    dh,BYTE PTR [ebp+0x0]
	...
  40b009:	add    BYTE PTR [eax],al
  40b00b:	imul   esi,esi,0x9
  40b00e:	(bad)  
  40b00f:	in     al,dx
  40b010:	cli    
  40b011:	and    DWORD PTR [ebp-0xde050d],esi
  40b017:	retf   
  40b018:	lds    edi,FWORD PTR [edi-0x1]
  40b01b:	aam    0x2
  40b01d:	enter  0xbaf7,0x26
  40b021:	and    edi,edi
  40b023:	les    edx,FWORD PTR [edx]
  40b025:	xchg   edi,eax
  40b026:	sti    
  40b027:	retf   
  40b028:	pop    ds
  40b029:	mov    cl,0xff
  40b02b:	mov    ah,0x54
  40b02d:	inc    esi
  40b02e:	or     al,0x63
  40b030:	ror    DWORD PTR [esp+ebp*8+0x6a2069e0],1
  40b037:	arpl   ax,cx
  40b039:	add    bh,bh
  40b03b:	push   cs
  40b03c:	push   ss
  40b03d:	sub    edi,DWORD PTR [edx-0x76dea517]
  40b043:	push   ds
  40b044:	push   edx
  40b045:	lods   al,BYTE PTR ds:[esi]
  40b046:	mov    cl,0x38
  40b048:	in     eax,dx
  40b049:	add    edi,edi
  40b04b:	cs add eax,0x523eb32
  40b051:	sahf   
  40b052:	xchg   edi,eax
  40b053:	pop    esp
  40b054:	sub    eax,0x1b5c1fa9
  40b059:	add    DWORD PTR [esi-0x68],edx
  40b05c:	(bad)  
  40b05d:	call   0xe946130d
  40b062:	add    DWORD PTR [ecx+edx*4-0x20],0x2b
  40b067:	or     eax,0x34216e19
  40b06c:	xchg   ecx,eax
  40b06d:	and    DWORD PTR fs:[eax],eax
	...
  40b07c:	add    BYTE PTR [eax],al
  40b07e:	mov    dh,0xd
  40b080:	push   ecx
  40b081:	dec    edi
  40b082:	leave  
  40b083:	sbb    dl,BYTE PTR [esi+0x4b]
  40b086:	and    DWORD PTR [edx],eax
  40b088:	jmp    0x6a6a9a43
  40b08d:	dec    eax
  40b08e:	lfs    edx,FWORD PTR [ebp+0x8ad04ad]
  40b095:	and    DWORD PTR [esi+0xd],esi
  40b098:	inc    ecx
  40b099:	mov    cl,0xda
  40b09b:	sbb    ah,BYTE PTR [esi]
  40b09d:	mov    esp,DWORD PTR [esi-0x7f288de7]
  40b0a3:	in     eax,dx
  40b0a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0a5:	add    ebp,eax
  40b0a7:	fadd   DWORD PTR [eax+0x690523eb]
  40b0ad:	loope  0x40b07b
  40b0af:	xchg   esi,eax
  40b0b0:	xchg   DWORD PTR [ebx+0x3a7dec4],ebp
  40b0b6:	adc    eax,0xb4b1352d
  40b0bb:	sbb    bh,BYTE PTR [ecx]
  40b0bd:	lods   al,BYTE PTR ds:[esi]
  40b0be:	mov    al,0xde
  40b0c0:	daa    
  40b0c1:	add    al,0xc
  40b0c3:	sub    eax,0x1a9cb081
  40b0c8:	xor    ecx,DWORD PTR ds:0xcec90a3
  40b0ce:	mov    cl,0x91
  40b0d0:	adc    bh,BYTE PTR [edx-0x70ffbc84]
  40b0d6:	inc    ebx
  40b0d7:	sbb    ch,BYTE PTR [eax-0x23]
  40b0da:	xchg   esp,eax
  40b0db:	(bad)  
  40b0de:	aas    
  40b0df:	and    BYTE PTR [eax+0x9e],ah
	...
  40b0f1:	inc    ebx
  40b0f2:	mov    ch,0x67
  40b0f4:	jmp    0x1fedb59
  40b0f9:	push   0xffffffd9
  40b0fb:	inc    eax
  40b0fc:	jmp    0xf1b5cc11
  40b101:	js     0x40b16b
  40b103:	shl    DWORD PTR [esi-0x7d],0x2d
  40b107:	(bad)  [ebp-0x7d]
  40b10a:	sbb    ch,bl
  40b10c:	call   0xe97e4b2b
  40b111:	int    0x1b
  40b113:	inc    esi
  40b114:	push   ebp
  40b115:	aaa    
  40b116:	pop    edx
  40b117:	mov    ecx,0xff1a434e
  40b11c:	cmp    edx,DWORD PTR [edx-0x1c4bf923]
  40b122:	sbb    DWORD PTR [ebp+0x35],esi
  40b125:	inc    ebx
  40b126:	nop
  40b127:	pop    es
  40b128:	inc    ecx
  40b129:	or     eax,0x2326ff7c
  40b12e:	mov    eax,0x55c2bc8
  40b133:	push   ebp
  40b134:	bound  ecx,QWORD PTR [esi+eax*4-0x6f7cf23c]
  40b13b:	or     eax,DWORD PTR [esi]
  40b13d:	cmc    
  40b13e:	add    eax,ebp
  40b140:	lds    ecx,FWORD PTR [ebx+0x1a]
  40b143:	jmp    DWORD PTR [eax-0x5b]
  40b146:	sbb    eax,0x1a5474ff
  40b14b:	jne    0x40b13e
  40b14d:	js     0x40b1c0
  40b14f:	xchg   esp,eax
  40b150:	fiadd  WORD PTR [esi+ecx*4+0x4d]
  40b154:	in     eax,0x0
	...
  40b162:	add    BYTE PTR [eax],al
  40b164:	imul   eax,DWORD PTR [ebp+0x74],0xffdbe02b
  40b16b:	dec    DWORD PTR [esi+0x24]
  40b16e:	(bad)  
  40b16f:	jne    0x40b137
  40b171:	call   0xf9f64e0a
  40b176:	dec    edi
  40b177:	jmp    FWORD PTR [edi]
  40b179:	cmc    
  40b17a:	(bad)  
  40b17b:	jne    0x40b143
  40b17d:	push   eax
  40b17e:	(bad)  
  40b17f:	jne    0x40b1f3
  40b181:	in     eax,dx
  40b182:	retf   
  40b183:	xchg   esi,eax
  40b184:	cmc    
  40b185:	clc    
  40b186:	pop    ecx
  40b187:	mov    esi,DWORD PTR [edi-0xb]
  40b18a:	cmp    BYTE PTR [ecx],0x3a
  40b18d:	jle    0x40b198
  40b18f:	push   edx
  40b190:	repnz pop eax
  40b192:	fwait
  40b193:	push   DWORD PTR [ebp+0xeebbf2c]
  40b199:	test   BYTE PTR [ebp+0x10],bh
  40b19c:	cmp    dh,BYTE PTR [ecx+0x7]
  40b19f:	mov    edi,edi
  40b1a1:	adc    al,0xfe
  40b1a3:	jne    0x40b15b
  40b1a5:	mov    BYTE PTR [eax],al
  40b1a7:	mov    ecx,DWORD PTR [eax-0x14]
  40b1aa:	add    DWORD PTR [ebx],ebp
  40b1ac:	cmp    cl,dl
  40b1ae:	ror    DWORD PTR [edx+edi*8],0x5d
  40b1b2:	mov    ch,ah
  40b1b4:	xor    eax,0xafff0b7e
  40b1b9:	or     al,0xe8
  40b1bb:	mov    ecx,0xfffef86c
  40b1c0:	iret   
  40b1c1:	or     BYTE PTR [eax-0x1],dl
  40b1c4:	dec    DWORD PTR [eax+ebp*8]
  40b1c7:	xor    DWORD PTR [eax],eax
	...
  40b1d5:	add    BYTE PTR [eax],al
  40b1d7:	dec    ebp
  40b1d8:	clc    
  40b1d9:	dec    cl
  40b1db:	js     0x40b1e6
  40b1dd:	add    BYTE PTR [ebp+0x51],dl
  40b1e0:	aad    0x82
  40b1e2:	les    ecx,FWORD PTR [edx+0x4953564f]
  40b1e8:	popw   es
  40b1ea:	add    BYTE PTR [esi],cl
  40b1ec:	adc    eax,DWORD PTR [edx+0x7404b67d]
  40b1f2:	or     al,0x63
  40b1f4:	stos   DWORD PTR es:[edi],eax
  40b1f5:	lahf   
  40b1f6:	packsswb mm6,QWORD PTR [edx+0x3a0e8305]
  40b1fd:	add    esi,DWORD PTR [ebp+0x5a]
  40b200:	repz inc ebx
  40b202:	pop    ebx
  40b203:	sbb    al,0xf0
  40b205:	dec    esp
  40b206:	ret    0x2e53
  40b209:	mov    al,BYTE PTR [ebp+0x5f]
  40b20c:	stos   DWORD PTR es:[edi],eax
  40b20d:	and    al,BYTE PTR [edi]
  40b20f:	loopne 0x40b20a
  40b211:	lldt   di
  40b214:	sub    cl,BYTE PTR [edx]
  40b216:	ror    bh,0x25
  40b219:	jmp    0x21c8:0xbddfa8bf
  40b220:	add    ecx,DWORD PTR ds:[ebx-0x1f7dc55a]
  40b227:	pop    esp
  40b228:	stos   DWORD PTR es:[edi],eax
  40b229:	lahf   
  40b22a:	adc    esp,DWORD PTR [ebx+0x3a]
  40b22d:	pop    es
  40b22e:	or     esp,DWORD PTR [ebx]
  40b230:	xor    cl,BYTE PTR [ebx+ebp*1]
  40b233:	and    edx,DWORD PTR [ebx-0x42]
  40b236:	pop    ebp
  40b237:	sub    ch,ah
  40b239:	repnz inc DWORD PTR [eax]
	...
  40b248:	add    BYTE PTR [eax],al
  40b24a:	cmp    ebx,esp
  40b24c:	sbb    eax,0xc7a75775
  40b251:	mov    edi,0xb4368e0
  40b256:	hlt    
  40b257:	push   eax
  40b258:	inc    ebx
  40b259:	call   0xff5f357d
  40b25e:	out    0x94,eax
  40b260:	mov    ebx,0xbe4770e8
  40b266:	ins    DWORD PTR es:[edi],dx
  40b267:	dec    edx
  40b268:	(bad)  
  40b269:	dec    DWORD PTR [ebx]
  40b26b:	adc    eax,DWORD PTR [ebx]
  40b26d:	add    BYTE PTR [ebx+0x1b],ah
  40b270:	mov    si,WORD PTR [esi]
  40b273:	mov    cl,BYTE PTR es:[ebp+0x67]
  40b277:	sbb    esp,DWORD PTR [esi-0x73]
  40b27a:	es add eax,0x91a5b4d9
  40b280:	test   al,0x1d
  40b282:	push   ss
  40b283:	inc    ecx
  40b284:	rol    DWORD PTR [esi+edi*4+0x17],0xce
  40b289:	sbb    eax,0x81d14116
  40b28e:	call   0xf65e70aa
  40b293:	or     BYTE PTR [esi-0x39],ah
  40b296:	mov    ah,0x83
  40b298:	and    al,0x44
  40b29a:	dec    eax
  40b29b:	sbb    BYTE PTR [esp+eax*2],bl
  40b29e:	jnp    0x40b22c
  40b2a0:	sbb    BYTE PTR ds:0x482c8d5c,0x57
  40b2a7:	lea    esp,[eax+ecx*2]
  40b2aa:	ficom  WORD PTR [eax+0x8978]
	...
  40b2bc:	add    dh,al
  40b2be:	inc    ecx
  40b2bf:	inc    eax
  40b2c0:	hlt    
  40b2c1:	cmp    al,0x17
  40b2c3:	jmp    0xd798b1d8
  40b2c8:	fbld   TBYTE PTR [ebx+0x6309a005]
  40b2ce:	add    eax,0x8ac710e9
  40b2d3:	fmul   QWORD PTR [ebx]
  40b2d5:	call   0xc7518fa2
  40b2da:	mov    BYTE PTR [ebx+eiz*1+0x43b416b3],ch
  40b2e1:	cld    
  40b2e2:	nop
  40b2e3:	sub    al,0x2c
  40b2e5:	test   BYTE PTR [eax+0x2e],ah
  40b2e8:	sbb    eax,0x2c2c90ec
  40b2ed:	xor    DWORD PTR [edx+0x1e],edi
  40b2f0:	sbb    eax,0x139c88df
  40b2f5:	out    0x98,al
  40b2f7:	and    BYTE PTR [ebx+0x73],bl
  40b2fa:	add    eax,0x61d003e9
  40b2ff:	ins    BYTE PTR es:[edi],dx
  40b300:	xchg   edi,eax
  40b301:	pushf  
  40b302:	pop    esp
  40b303:	add    cl,ah
  40b305:	pusha  
  40b306:	add    eax,0xab44fa00
  40b30b:	add    BYTE PTR [ebp+ebx*4+0x3e],dh
  40b30f:	push   eax
  40b310:	ror    DWORD PTR [edx-0x77],1
  40b313:	add    cl,ch
  40b315:	jmp    0x40b2a7
  40b317:	punpckldq mm5,mm5
  40b31a:	repnz rcl dh,0x63
  40b31e:	or     bh,bh
  40b320:	xor    eax,0x0
	...
  40b32d:	add    BYTE PTR [eax],al
  40b32f:	add    dh,al
  40b331:	sub    ecx,DWORD PTR [edi]
  40b333:	fs popf 
  40b335:	push   ds
  40b336:	push   eax
  40b337:	pop    ss
  40b338:	mov    ch,0x1e
  40b33a:	jnp    0x40b3b2
  40b33c:	pusha  
  40b33d:	add    eax,0xc668a783
  40b342:	or     dl,BYTE PTR [esi+0x570f28ed]
  40b348:	es pop ss
  40b34a:	add    DWORD PTR [ecx-0x2dfe71a8],0x50
  40b351:	jmp    0xe96a:0x2771d974
  40b358:	cli    
  40b359:	adc    eax,0x15fae969
  40b35e:	push   ebp
  40b35f:	pop    esi
  40b360:	cmc    
  40b361:	add    eax,0x15cae96a
  40b366:	out    0xf,eax
  40b368:	rcl    DWORD PTR ds:0x91a0f2ff,cl
  40b36e:	sub    BYTE PTR [ecx+0x53d41db0],bl
  40b374:	push   edi
  40b375:	push   ss
  40b376:	mov    edx,DWORD PTR [ecx]
  40b378:	test   eax,0x6092ffab
  40b37d:	mov    ah,0x52
  40b37f:	mov    bh,0x7f
  40b381:	nop
  40b382:	jae    0x1405ee8
  40b388:	int    0xa9
  40b38a:	(bad)  
  40b38b:	(bad)  
  40b38c:	mov    edx,0xb275c00c
  40b391:	push   esp
  40b392:	out    0x9d,eax
	...
  40b3a0:	add    BYTE PTR [eax],al
  40b3a2:	add    BYTE PTR [eax],dl
  40b3a4:	stc    
  40b3a5:	(bad)  
  40b3a6:	sub    edx,DWORD PTR [ecx-0x73]
  40b3a9:	ret    
  40b3aa:	pop    ebx
  40b3ab:	sbb    eax,0x9ac2c85b
  40b3b0:	add    DWORD PTR [ebp-0x75],edx
  40b3b3:	sahf   
  40b3b4:	jge    0x40b37a
  40b3b6:	lock push ebp
  40b3b8:	dec    esi
  40b3b9:	sub    bl,bl
  40b3bb:	popf   
  40b3bc:	jae    0x40b3c9
  40b3be:	push   DWORD PTR [edi]
  40b3c0:	or     eax,ebp
  40b3c2:	add    DWORD PTR [edi],edx
  40b3c4:	cli    
  40b3c5:	(bad)  
  40b3c6:	push   eax
  40b3c7:	mov    ebp,0x4e80773
  40b3cc:	xchg   ebx,eax
  40b3cd:	(bad)  
  40b3ce:	call   ecx
  40b3d0:	icebp  
  40b3d1:	push   edi
  40b3d2:	add    esi,edx
  40b3d4:	add    al,0xc0
  40b3d6:	je     0x40b35d
  40b3d8:	jle    0x40b41f
  40b3da:	hlt    
  40b3db:	push   0xfffffff0
  40b3dd:	je     0x40b3eb
  40b3df:	mov    ebp,0xa1e80776
  40b3e4:	out    dx,al
  40b3e5:	(bad)  
  40b3e6:	inc    ebx
  40b3e8:	inc    esi
  40b3e9:	sti    
  40b3ea:	(bad)  
  40b3eb:	idiv   eax
  40b3ed:	dec    edi
  40b3ee:	push   DWORD PTR [edi]
  40b3f0:	or     eax,0xe10275ff
  40b3f5:	cwde   
  40b3f6:	std    
  40b3f7:	popf   
  40b3f8:	lock mov BYTE PTR [ebp-0x5e],al
  40b3fc:	lock je 0x40b3ef
  40b3ff:	cmp    eax,0xb7fff776
  40b404:	add    al,0xff
  40b406:	jne    0x40b408
	...
  40b414:	add    BYTE PTR [eax],al
  40b416:	ds loope 0x40b429
  40b419:	(bad)  
  40b41a:	cmp    eax,0x7dd88af0
  40b41f:	jbe    0x40b41c
  40b421:	call   0xffbdfe89
  40b426:	int3   
  40b427:	add    edx,DWORD PTR [ecx+0x7d42bbf7]
  40b42d:	(bad)  
  40b42e:	mov    esp,0xb4570378
  40b433:	xchg   ecx,eax
  40b434:	or     ch,al
  40b436:	sti    
  40b437:	lods   eax,DWORD PTR ds:[esi]
  40b438:	sbb    bh,bh
  40b43a:	fcomp  DWORD PTR [edi-0x42]
  40b43d:	pop    esi
  40b43e:	stos   BYTE PTR es:[edi],al
  40b43f:	pusha  
  40b440:	or     eax,DWORD PTR [eax]
  40b442:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40b444:	or     DWORD PTR es:[esi],0x32
  40b448:	add    DWORD PTR [edx+0x42],esi
  40b44b:	dec    ebx
  40b44c:	nop
  40b44d:	(bad)  
  40b44f:	(bad)  [ebx]
  40b451:	call   0xff5a6738
  40b456:	ins    BYTE PTR es:[edi],dx
  40b457:	fpatan 
  40b459:	(bad)  
  40b45a:	out    dx,al
  40b45b:	adc    eax,0x735eaf2b
  40b460:	sbb    bh,bh
  40b462:	into   
  40b463:	push   cs
  40b464:	sbb    dh,BYTE PTR [ebp+0x5b]
  40b467:	xchg   BYTE PTR [edi-0x3],bl
  40b46a:	inc    esp
  40b46b:	mov    ebx,DWORD PTR [edx]
  40b46d:	jne    0x40b4c2
  40b46f:	xchg   ebx,eax
  40b470:	pop    DWORD PTR [edi]
  40b472:	dec    ebx
  40b473:	call   0xa76db392
  40b478:	scas   eax,DWORD PTR es:[edi]
  40b479:	adc    eax,DWORD PTR [eax]
	...
  40b487:	add    BYTE PTR [eax],al
  40b489:	ficomp DWORD PTR [edi]
  40b48b:	sbb    dh,BYTE PTR [ebp+0x73]
  40b48e:	mov    bl,0x8f
  40b490:	pop    es
  40b491:	or     esp,DWORD PTR [ebp-0x60f300e9]
  40b497:	xchg   edi,eax
  40b498:	or     esp,DWORD PTR [eax+0x54]
  40b49b:	icebp  
  40b49c:	(bad)  
  40b49d:	jbe    0x40b4cd
  40b49f:	sbb    dh,BYTE PTR [ebp+0x6b]
  40b4a2:	(bad)  
  40b4a3:	call   0x5375:0x19e2ecfc
  40b4aa:	add    eax,0x1d649026
  40b4af:	mov    WORD PTR [eax],ds
  40b4b1:	aam    0x13
  40b4b3:	push   ss
  40b4b4:	nop
  40b4b5:	pop    esp
  40b4b6:	lahf   
  40b4b7:	lock sbb cl,BYTE PTR [esi-0x3]
  40b4bb:	adc    BYTE PTR [esi-0x29],ch
  40b4be:	adc    edi,esi
  40b4c0:	sbb    DWORD PTR [esi],ebp
  40b4c2:	cmc    
  40b4c3:	cmc    
  40b4c4:	(bad)  
  40b4c5:	fs sbb eax,0x13a46fcd
  40b4cb:	mov    al,0x46
  40b4cd:	jae    0x40b4d4
  40b4cf:	xor    al,0x8d
  40b4d1:	xchg   DWORD PTR [ebx],edx
  40b4d3:	pop    esp
  40b4d4:	or     cl,bh
  40b4d6:	add    eax,0x1d5c8fce
  40b4db:	jne    0x40b54d
  40b4dd:	jl     0x40b4f2
  40b4df:	mov    esi,0x3c14688f
  40b4e4:	or     al,0x7b
  40b4e6:	sub    ebp,DWORD PTR [edi+0x3c7f6419]
  40b4ec:	hlt    
	...
  40b4f9:	add    BYTE PTR [eax],al
  40b4fb:	add    bl,ch
  40b4fd:	pop    es
  40b4fe:	sahf   
  40b4ff:	(bad)
  40b503:	or     al,0x3b
  40b505:	cmp    ecx,DWORD PTR [edi+0x1c7f4419]
  40b50b:	lock jmp 0x40b515
  40b50e:	jle    0x40b49f
  40b510:	push   0x3b0bfc12
  40b515:	dec    ebx
  40b516:	outs   dx,DWORD PTR ds:[esi]
  40b517:	sbb    DWORD PTR [edi+edi*2],esp
  40b51a:	mov    esp,0x3007ebfb
  40b51f:	inc    esi
  40b520:	outs   dx,DWORD PTR ds:[esi]
  40b521:	add    eax,0x86ff8cbc
  40b526:	and    eax,0x45baad28
  40b52b:	(bad)  
  40b52c:	push   eax
  40b52d:	lahf   
  40b52e:	out    0x18,eax
  40b530:	outs   dx,BYTE PTR ds:[esi]
  40b531:	std    
  40b532:	inc    DWORD PTR [eax+0x26]
  40b535:	ja     0x40b536
  40b537:	cs dec edx
  40b539:	cwde   
  40b53a:	adc    esp,DWORD PTR [esi]
  40b53c:	in     al,dx
  40b53d:	or     ch,al
  40b53f:	push   ebp
  40b540:	dec    esi
  40b541:	adc    bh,bh
  40b543:	bound  esi,QWORD PTR [edi+0x1c]
  40b546:	cmp    ebp,eax
  40b548:	pusha  
  40b549:	add    eax,0x87ccac8b
  40b54e:	cmp    cl,ch
  40b550:	in     eax,0x9
  40b552:	jmp    0x461716
  40b557:	es in  al,0xe
  40b55a:	add    cl,ch
  40b55c:	pusha  
  40b55d:	add    eax,0x248d
	...
  40b56e:	add    BYTE PTR [ebx-0x4b],bh
  40b571:	(bad)  
  40b572:	pop    esp
  40b573:	xchg   ebx,eax
  40b574:	adc    esi,DWORD PTR [ebp-0x7]
  40b577:	imul   ebx,DWORD PTR [eax+0x1356d107],0xffffffff
  40b57e:	mov    esi,0x34830de7
  40b583:	dec    ebx
  40b584:	add    eax,0xe5b70a74
  40b589:	cmp    ebp,DWORD PTR [eax]
  40b58b:	adc    dh,BYTE PTR [di-0x63]
  40b58f:	mov    BYTE PTR [edi+0x6b],bh
  40b592:	jmp    0x1500b3f7
  40b597:	pop    esp
  40b598:	popf   
  40b599:	sub    ch,al
  40b59b:	and    DWORD PTR [edx],edx
  40b59d:	(bad)  
  40b59e:	hlt    
  40b59f:	dec    esp
  40b5a0:	sbb    eax,0x5670279
  40b5a5:	mov    DWORD PTR [ebx+edi*2],esp
  40b5a8:	push   ds
  40b5a9:	pop    es
  40b5aa:	fstp   QWORD PTR cs:0x560e900
  40b5b1:	adc    esp,0x44
  40b5b4:	add    eax,0x4b8f174
  40b5b9:	add    BYTE PTR [eax],al
  40b5bb:	xchg   ebp,eax
  40b5bc:	lods   al,BYTE PTR ds:[esi]
  40b5bd:	(bad)  
  40b5be:	jne    0x40b5c6
  40b5c0:	fiadd  WORD PTR [esi-0x6b]
  40b5c3:	xor    eax,0x3675feed
  40b5c8:	in     eax,dx
  40b5c9:	je     0x40b5d7
  40b5cb:	jb     0x40b559
  40b5cd:	xchg   esp,eax
  40b5ce:	push   DWORD PTR [ebp-0x21]
  40b5d1:	mov    al,BYTE PTR [eax]
	...
  40b5df:	add    BYTE PTR [eax],al
  40b5e1:	add    BYTE PTR [edx-0x31ba74fb],bh
  40b5e7:	mov    BYTE PTR [eax],bh
  40b5e9:	add    BYTE PTR [edi],bh
  40b5eb:	adc    ebp,eax
  40b5ed:	xchg   dl,cl
  40b5ef:	add    eax,0xedffc700
  40b5f4:	(bad)  
  40b5f5:	(bad)  
  40b5f6:	mov    edx,0xbe45c705
  40b5fb:	or     BYTE PTR [eax],al
  40b5fd:	add    BYTE PTR [edx+0x7af044d2],cl
  40b603:	add    eax,0x44270000
  40b608:	out    dx,eax
  40b609:	push   eax
  40b60a:	test   DWORD PTR [ebx-0xd],0xf7440750
  40b611:	push   eax
  40b612:	mov    ch,0x73
  40b614:	adc    edi,edi
  40b616:	das    
  40b617:	add    eax,ebp
  40b619:	loope  0x40b61f
  40b61b:	stc    
  40b61c:	inc    BYTE PTR [ebx+0x73ffdd77]
  40b622:	sub    DWORD PTR [ebp+edi*2+0x2c813af8],eax
  40b629:	and    DWORD PTR [edi-0xb],0xffffffff
  40b62d:	je     0x40b66b
  40b62f:	test   BYTE PTR [ebp-0x10],bh
  40b632:	cmp    al,BYTE PTR [ecx-0x12d000e0]
  40b638:	(bad)  
  40b639:	jne    0x40b651
  40b63b:	fnstsw WORD PTR [edx*4+0x75fef8b5]
  40b642:	arpl   WORD PTR [edx+0x7516],si
	...
  40b654:	add    BYTE PTR [edi-0x3a],dl
  40b657:	rcl    DWORD PTR [esp+edi*8-0xc8ae939],1
  40b65e:	iret   
  40b65f:	nop
  40b660:	or     edi,ebx
  40b662:	push   DWORD PTR [eax-0x1]
  40b665:	in     al,0xdf
  40b667:	nop
  40b668:	test   ebx,0xd4ff7b32
  40b66e:	out    dx,eax
  40b66f:	nop
  40b670:	repz mov ebx,0xc4ff7b4a
  40b676:	call   DWORD PTR [eax+0x7b42cbef]
  40b67c:	push   DWORD PTR [edi+ebx*2-0x5ea300f6]
  40b683:	test   al,0xfe
  40b685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b686:	pop    ds
  40b687:	cmp    BYTE PTR [ebp-0x71],0x1e
  40b68b:	(bad)  
  40b68c:	sbb    eax,0x75161e09
  40b691:	pop    edi
  40b692:	inc    esi
  40b693:	outs   dx,DWORD PTR ds:[esi]
  40b694:	xchg   esp,eax
  40b695:	test   BYTE PTR [edi],bh
  40b697:	test   eax,0x7d17dff
  40b69c:	call   0xff56718a
  40b6a1:	stc    
  40b6a2:	sbb    eax,0x46577516
  40b6a7:	adc    DWORD PTR [esp+ebx*2+0x57751667],0x76
  40b6af:	es xchg edi,eax
  40b6b1:	dec    esp
  40b6b2:	ja     0x40b679
  40b6b4:	or     cl,BYTE PTR [ebp+0x2f]
  40b6b7:	cmp    BYTE PTR [ebp+0x0],0x0
	...
  40b6c6:	add    BYTE PTR [eax],al
  40b6c8:	cmp    eax,0x955f1687
  40b6cd:	push   ebp
  40b6ce:	inc    ecx
  40b6cf:	adc    BYTE PTR [ebx-0xf],ah
  40b6d2:	mov    ch,ah
  40b6d4:	loopne 0x40b73f
  40b6d6:	pop    ds
  40b6d7:	push   esi
  40b6d8:	sbb    al,0x5
  40b6da:	fmul   QWORD PTR [ebx]
  40b6dc:	or     edi,DWORD PTR [eax+0x6e]
  40b6df:	push   ss
  40b6e0:	or     al,0x7e
  40b6e2:	lods   al,BYTE PTR ds:[esi]
  40b6e3:	pavgb  mm2,QWORD PTR [ecx-0x48e0cac]
  40b6ea:	add    BYTE PTR [ebx+eiz*2],0x5
  40b6ee:	jmp    0xe183d2a8
  40b6f3:	add    esp,esp
  40b6f5:	cdq    
  40b6f6:	loopne 0x40b723
  40b6f8:	(bad)  
  40b6f9:	jne    0x40b721
  40b6fb:	push   ss
  40b6fc:	pushf  
  40b6fd:	leave  
  40b6fe:	and    BYTE PTR [ebx+eiz*2],al
  40b701:	add    eax,0xd1e88e9
  40b706:	mov    ecx,0x10fd3616
  40b70b:	(bad)  
  40b70d:	paddd  mm1,QWORD PTR [ebx-0x6795eeda]
  40b714:	lods   al,BYTE PTR ds:[esi]
  40b715:	add    al,0x75
  40b717:	pop    es
  40b718:	loopne 0x40b6ab
  40b71a:	in     al,0x2
  40b71c:	adc    DWORD PTR [edi],eax
  40b71e:	push   0xffffff97
  40b720:	mov    BYTE PTR [esi],al
  40b722:	pop    edi
  40b723:	or     cl,bl
  40b725:	add    eax,0xaf6303e9
  40b72a:	scas   eax,DWORD PTR es:[edi]
  40b72b:	inc    edx
	...
  40b738:	add    BYTE PTR [eax],al
  40b73a:	add    BYTE PTR [ebx+0x5],ch
  40b73d:	ins    BYTE PTR es:[edi],dx
  40b73e:	mov    edi,0x8fb5b474
  40b743:	pop    esp
  40b744:	sbb    eax,0xf5c73ad
  40b749:	push   0xffffff97
  40b74b:	dec    esp
  40b74c:	push   es
  40b74d:	adc    eax,0x1d455800
  40b752:	or     cl,BYTE PTR [ebx]
  40b754:	add    eax,0xaf6303e9
  40b759:	scas   eax,DWORD PTR es:[edi]
  40b75a:	inc    edx
  40b75b:	imul   eax,DWORD PTR ds:0x928976a,0x0
  40b762:	sti    
  40b763:	das    
  40b764:	add    BYTE PTR [ebp+0x71],0xd7
  40b768:	pushf  
  40b769:	pop    ss
  40b76a:	data16 in al,0x6
  40b76d:	call   0xff4f4a33
  40b772:	les    edx,FWORD PTR fs:[esi]
  40b775:	push   eax
  40b776:	dec    esi
  40b777:	in     al,dx
  40b778:	push   es
  40b779:	call   0xff4f27af
  40b77e:	jo     0x40b72c
  40b780:	and    ch,bl
  40b782:	aam    0xdd
  40b784:	enter  0x99f7,0x77
  40b788:	cwde   
  40b789:	pop    es
  40b78a:	adc    DWORD PTR [esi],esp
  40b78c:	je     0x40b78d
  40b78e:	push   ds
  40b78f:	fmul   st,st(0)
  40b791:	jecxz  0x40b7f7
  40b793:	add    al,0x17
  40b795:	push   eax
  40b796:	cmp    DWORD PTR [edi+ecx*1-0x24770e8b],0xffffff91
  40b79e:	inc    BYTE PTR [eax]
	...
  40b7ac:	add    BYTE PTR [eax],al
  40b7ae:	push   edi
  40b7af:	add    BYTE PTR [ebp-0xf],0xf0
  40b7b3:	pcmpeqw mm4,mm1
  40b7b6:	dec    eax
  40b7b7:	xor    bh,dl
  40b7b9:	out    0x6f,al
  40b7bb:	cmp    BYTE PTR [ebp-0x3b],0x61
  40b7bf:	cwde   
  40b7c0:	sbb    eax,0x5016c564
  40b7c5:	into   
  40b7c6:	in     eax,dx
  40b7c7:	or     bh,bh
  40b7c9:	cmp    al,0x6b
  40b7cb:	push   cs
  40b7cc:	jne    0x40b7bf
  40b7ce:	cmp    BYTE PTR [edi-0x3],bl
  40b7d1:	mov    dh,0x4f
  40b7d3:	add    BYTE PTR [ebp-0x4f],0x10
  40b7d7:	pcmpeqw mm6,mm1
  40b7da:	mov    BYTE PTR [esi-0x6],bl
  40b7dd:	sahf   
  40b7de:	ja     0x40b762
  40b7e0:	jge    0x40b773
  40b7e2:	pusha  
  40b7e3:	cwde   
  40b7e4:	or     DWORD PTR [ecx+0x60],edx
  40b7e7:	add    eax,0x584a0000
  40b7ec:	enter  0x32c2,0x2
  40b7f0:	lea    eax,[ebp-0x4e]
  40b7f3:	push   edx
  40b7f4:	(bad)  
  40b7f5:	jne    0x40b785
  40b7f7:	stc    
  40b7f8:	je     0x40b806
  40b7fa:	jge    0x40b87b
  40b7fc:	pop    es
  40b7fd:	call   0x3faf7c
  40b802:	jns    0x40b87b
  40b804:	test   DWORD PTR [eax],0xb7fc17
  40b80a:	or     al,BYTE PTR [edx]
  40b80c:	add    BYTE PTR [esi+0x33],bl
  40b80f:	les    eax,FWORD PTR [edi]
	...
  40b821:	jg     0x40b872
  40b823:	not    DWORD PTR [eax-0x73]
  40b826:	jg     0x40b82f
  40b828:	call   0x3f4aef
  40b82d:	push   ecx
  40b82e:	bnd call 0x42732f
  40b834:	call   edi
  40b836:	stc    
  40b837:	out    0xe7,eax
  40b839:	sbb    cl,bh
  40b83b:	(bad)  
  40b83c:	cmp    eax,DWORD PTR [edi]
  40b83e:	(bad)  
  40b83f:	je     0x40b846
  40b841:	arpl   WORD PTR [ecx],ax
  40b843:	add    BYTE PTR [eax],al
  40b845:	mov    al,BYTE PTR [ebp+edi*2+0x237784fc]
  40b84c:	lea    eax,[edi+0x1]
  40b84f:	push   eax
  40b850:	jmp    DWORD PTR [edi]
  40b852:	adc    edi,esp
  40b854:	or     eax,0x8dfef1fb
  40b859:	inc    edi
  40b85a:	add    DWORD PTR [eax-0x1],edx
  40b85d:	aaa    
  40b85e:	adc    edi,esp
  40b860:	cmp    dh,BYTE PTR [eax-0x7872010f]
  40b866:	stc    
  40b867:	dec    edi
  40b868:	push   DWORD PTR [edi+0x9]
  40b86b:	out    0x2e,eax
  40b86d:	add    cl,bh
  40b86f:	dec    BYTE PTR [ebp+0x500bd963]
  40b875:	cmp    al,0xf2
  40b877:	sti    
  40b878:	out    0x10,eax
  40b87a:	mov    BYTE PTR [ebx],dl
  40b87c:	(bad)  
  40b87d:	(bad)  
  40b87f:	adc    ecx,DWORD PTR [ebp-0x14c6962]
	...
  40b891:	add    BYTE PTR [eax],al
  40b893:	add    BYTE PTR [esi+0x18c41b26],dl
  40b899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b89a:	adc    cl,BYTE PTR [ecx+0x4580baa6]
  40b8a0:	or     ecx,DWORD PTR [edi+0x12]
  40b8a3:	jne    0x40b910
  40b8a5:	(bad)  
  40b8a6:	pop    eax
  40b8a7:	sti    
  40b8a8:	hlt    
  40b8a9:	ret    
  40b8aa:	jl     0x40b8f1
  40b8ac:	sti    
  40b8ad:	lahf   
  40b8ae:	nop
  40b8af:	out    dx,eax
  40b8b0:	arpl   WORD PTR [edx-0x6a],cx
  40b8b3:	sbb    BYTE PTR [esi-0x36],0x3
  40b8b7:	je     0x40b8ff
  40b8b9:	lahf   
  40b8ba:	nop
  40b8bb:	out    0x63,eax
  40b8bd:	jb     0x40b869
  40b8bf:	add    BYTE PTR [esi-0xa],0x3
  40b8c3:	je     0x40b907
  40b8c5:	xchg   ch,dl
  40b8c7:	cmp    esp,DWORD PTR [edx]
  40b8c9:	push   ds
  40b8ca:	adc    dh,BYTE PTR [ebp-0x4d]
  40b8cd:	test   BYTE PTR [esi+0x68],0x63
  40b8d1:	push   ds
  40b8d2:	(bad)  
  40b8d3:	mov    edi,0x209b3c16
  40b8d8:	push   edi
  40b8d9:	fld    QWORD PTR [ebx]
  40b8db:	call   DWORD PTR [esi]
  40b8dd:	sbb    ebp,DWORD PTR cs:[edx+0xb031dfb]
  40b8e4:	mov    ds:0x4a6800b1,eax
  40b8e9:	add    al,ch
  40b8eb:	jmp    FWORD PTR [ebp-0x2f]
  40b8ee:	adc    ebp,eax
  40b8f0:	retf   0x3c6
  40b8f3:	add    BYTE PTR [eax+0x5e],ch
  40b8f6:	xchg   edi,eax
  40b8f7:	sub    eax,0x0
	...
  40b904:	add    BYTE PTR [eax],al
  40b906:	add    bl,cl
  40b908:	add    eax,0x4b3c03e9
  40b90d:	sahf   
  40b90e:	cwde   
  40b90f:	pop    eax
  40b910:	sbb    eax,0xc3c761c
  40b915:	mov    ds,WORD PTR [eax-0x3f3bc]
  40b91b:	inc    esp
  40b91c:	cmp    DWORD PTR [ebx+0x12],ebx
  40b91f:	and    al,0xc
  40b921:	cld    
  40b922:	pop    ds
  40b923:	sbb    al,0x92
  40b925:	fcomp  QWORD PTR [ebx]
  40b927:	and    dh,BYTE PTR [edi+0x66]
  40b92a:	adc    cl,BYTE PTR [edx+edx*4]
  40b92d:	push   eax
  40b92e:	adc    cl,BYTE PTR [esi-0x2ea6bf07]
  40b934:	or     ecx,DWORD PTR [esi+0x12]
  40b937:	outs   dx,BYTE PTR ds:[esi]
  40b938:	adc    eax,0xbd64651
  40b93d:	adc    ch,BYTE PTR ds:[esi+0x19]
  40b941:	inc    ecx
  40b942:	dec    esi
  40b943:	test   BYTE PTR [ebx],0x2e
  40b946:	adc    cl,BYTE PTR [esi+0x1d]
  40b949:	adc    DWORD PTR [esi-0xa],edx
  40b94c:	or     ebx,DWORD PTR [esi]
  40b94e:	shl    ecx,0x89
  40b951:	adc    BYTE PTR [ebx],al
  40b953:	aaa    
  40b954:	std    
  40b955:	loope  0x40b970
  40b957:	fs cmp dh,0x10
  40b95b:	lods   al,BYTE PTR ds:[esi]
  40b95c:	or     esi,DWORD PTR [edx-0x38]
  40b95f:	lods   al,BYTE PTR ds:[esi]
  40b960:	stos   BYTE PTR es:[edi],al
  40b961:	pop    ds
  40b962:	inc    ebp
  40b963:	imul   eax,DWORD PTR ds:0x87877e94,0xffffffad
  40b96a:	adc    BYTE PTR [eax],al
	...
  40b978:	add    BYTE PTR [eax],al
  40b97a:	mov    WORD PTR [ecx+0x4d181bec],ss
  40b980:	(bad)  
  40b981:	adc    DWORD PTR [eax+0x45],ebp
  40b984:	push   esp
  40b985:	shl    edi,1
  40b987:	rol    esp,0xb4
  40b98a:	test   BYTE PTR ds:0xb64116d,dh
  40b990:	add    BYTE PTR [ebx+esi*2],bh
  40b993:	or     dh,BYTE PTR [ebp-0x23]
  40b996:	js     0x40b9ea
  40b998:	mov    fs,WORD PTR [esi+0x15bffe72]
  40b99e:	push   edx
  40b99f:	or     al,0x75
  40b9a1:	loope  0x40b9f6
  40b9a3:	nop
  40b9a4:	sti    
  40b9a5:	sub    edx,0x2e86ff08
  40b9ab:	dec    ebx
  40b9ac:	jne    0x40b987
  40b9ae:	enter  0xf0a,0x86
  40b9b2:	mov    cl,0xa
  40b9b4:	jne    0x40b993
  40b9b6:	jae    0x40b948
  40b9b8:	pop    es
  40b9b9:	push   ecx
  40b9ba:	adc    DWORD PTR [edx-0x1],0xfb90725e
  40b9c1:	inc    ecx
  40b9c2:	scas   eax,DWORD PTR es:[edi]
  40b9c3:	jns    0x40b9c4
  40b9c5:	dec    esi
  40b9c6:	cmp    BYTE PTR [edi+0x8],al
  40b9c9:	jmp    0x692d3983
  40b9ce:	fwait
  40b9cf:	push   ecx
  40b9d0:	(bad)  
  40b9d1:	ss jb  0x40ba16
  40b9d4:	test   DWORD PTR [ecx+0x71],esi
  40b9d7:	or     bh,bh
  40b9d9:	jmp    0x7240bf3e
	...
  40b9ea:	add    BYTE PTR [eax],al
  40b9ec:	add    BYTE PTR [esi+edi*8+0x1db290a],bl
  40b9f3:	adc    cl,0x60
  40b9f6:	nop
  40b9f7:	add    al,0x10
  40b9f9:	lock add eax,0x9053e900
  40b9ff:	or     eax,DWORD PTR [ecx]
  40ba01:	arpl   WORD PTR [ebp-0x1],sp
  40ba04:	out    dx,al
  40ba05:	xchg   edi,eax
  40ba06:	dec    edx
  40ba07:	jne    0x40b9ff
  40ba09:	call   0x5f68e667
  40ba0e:	or     dh,BYTE PTR [ebp-0x1b]
  40ba11:	pop    eax
  40ba12:	pop    esp
  40ba13:	cwde   
  40ba14:	into   
  40ba15:	push   ebx
  40ba16:	push   ds
  40ba17:	or     eax,0x2bb31200
  40ba1c:	inc    ecx
  40ba1d:	jp     0x40ba14
  40ba1f:	je     0x40ba2d
  40ba21:	and    bl,BYTE PTR [eax-0x70fa0069]
  40ba27:	test   BYTE PTR [eax+0x68fef504],bh
  40ba2d:	and    al,0x7
  40ba2f:	add    BYTE PTR [eax],al
  40ba31:	mov    DWORD PTR [ebx-0xb1a013e],0x9308e84f
  40ba3b:	(bad)  
  40ba3c:	push   DWORD PTR [edi-0x6a013d7d]
  40ba42:	cmc    
  40ba43:	dec    edi
  40ba44:	dec    DWORD PTR [edi-0x42]
  40ba47:	std    
  40ba48:	inc    DWORD PTR [ebp-0x599b212]
  40ba4e:	add    eax,0x8589
	...
  40ba5f:	add    dh,dl
  40ba61:	repz (bad) 
  40ba63:	dec    edx
  40ba65:	add    al,0x84
  40ba67:	repz cli 
  40ba69:	add    eax,0xc08f8d00
  40ba6e:	std    
  40ba6f:	call   DWORD PTR [ebp-0x35effe13]
  40ba75:	add    eax,0x8b077400
  40ba7a:	inc    ecx
  40ba7b:	sub    al,0xa
  40ba7d:	outs   dx,BYTE PTR ds:[esi]
  40ba7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba7f:	sub    al,0xb
  40ba81:	push   es
  40ba82:	call   0x4696b2
  40ba87:	or     edi,DWORD PTR [edx+0x73]
  40ba8a:	add    al,0xe9
  40ba8c:	adc    eax,DWORD PTR [esi]
  40ba8e:	add    BYTE PTR [eax],al
  40ba90:	pop    es
  40ba91:	xchg   ebx,eax
  40ba92:	sar    esi,0x85
  40ba95:	stc    
  40ba96:	mov    WORD PTR [edx+0x76],es
  40ba99:	push   ecx
  40ba9a:	stos   BYTE PTR es:[di],al
  40ba9c:	push   esi
  40ba9d:	inc    eax
  40ba9e:	jmp    edi
  40baa0:	arpl   WORD PTR [edx],sp
  40baa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baa3:	push   DWORD PTR [esi+eiz*1+0x43]
  40baa7:	jne    0x40bb0f
  40baa9:	xor    eax,0x1c630080
  40baae:	push   cs
  40baaf:	jne    0x40bb20
  40bab1:	inc    esi
  40bab2:	mov    al,ds:0xfb58549e
  40bab7:	mov    edi,0xbb9b0fd6
  40babc:	jnp    0x40ba9b
  40babe:	add    edi,edi
  40bac0:	mov    dh,0x22
  40bac2:	sbb    ecx,DWORD PTR [ecx]
	...
  40bad0:	add    BYTE PTR [eax],al
  40bad2:	add    bl,bl
  40bad4:	ja     0x40bae5
  40bad6:	jmp    0x40bb31
  40bad8:	hlt    
  40bad9:	add    edi,edi
  40badb:	scas   al,BYTE PTR es:[edi]
  40badc:	sbb    bl,BYTE PTR [ebx]
  40bade:	std    
  40badf:	hlt    
  40bae0:	(bad)  
  40bae1:	push   cs
  40bae2:	(bad)  
  40bae3:	out    dx,al
  40bae4:	pop    esp
  40bae5:	push   cs
  40bae6:	dec    DWORD PTR [edx+edx*4]
  40bae9:	mov    cl,0x2b
  40baeb:	mov    cl,0x4e
  40baed:	sbb    eax,DWORD PTR [ecx-0x25]
  40baf0:	scas   eax,DWORD PTR es:[edi]
  40baf1:	push   cs
  40baf2:	push   eax
  40baf3:	hlt    
  40baf4:	xor    ebx,esi
  40baf6:	dec    edi
  40baf7:	in     al,dx
  40baf8:	dec    ecx
  40baf9:	sti    
  40bafa:	out    0xe9,eax
  40bafc:	enter  0xff0e,0xcb
  40bb00:	adc    dh,BYTE PTR [edi-0x1]
  40bb03:	aam    0xc3
  40bb05:	ret    0x218c
  40bb08:	xor    bh,BYTE PTR [ebp+eax*4+0xf]
  40bb0c:	jmp    0x69fdba1f
  40bb11:	repz (bad) 
  40bb13:	out    dx,al
  40bb14:	mov    dl,0xd
  40bb16:	jmp    FWORD PTR [esi+esi*8+0x1e63664e]
  40bb1d:	cli    
  40bb1e:	mov    edi,0xbb9b4617
  40bb23:	dec    ebx
  40bb24:	pop    ebp
  40bb25:	add    edi,edi
  40bb27:	push   ss
  40bb28:	add    eax,0x70d21bf5
  40bb2d:	fimul  WORD PTR [esi]
  40bb2f:	jl     0x40bb83
  40bb31:	popf   
  40bb32:	or     eax,0x1c390874
	...
  40bb43:	add    BYTE PTR [eax],al
  40bb45:	add    BYTE PTR [edx+0x70],ch
  40bb48:	(bad)  
  40bb49:	push   cs
  40bb4a:	adc    esi,DWORD PTR [ebp+0x1d6498bd]
  40bb50:	dec    ecx
  40bb51:	push   cs
  40bb52:	push   esp
  40bb53:	or     cl,al
  40bb55:	push   ss
  40bb56:	lock pop es
  40bb58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb59:	sbb    dh,0x42
  40bb5c:	lahf   
  40bb5d:	push   cs
  40bb5e:	cmp    al,0xb5
  40bb60:	xchg   ebp,eax
  40bb61:	pop    eax
  40bb62:	test   DWORD PTR [esi],0x9a3b0e8e
  40bb68:	or     eax,DWORD PTR [ebx+eiz*2]
  40bb6b:	sub    BYTE PTR [ecx+0x75ece7fe],0xe
  40bb72:	adc    al,0x8
  40bb74:	xor    al,0x4f
  40bb76:	or     eax,0x831b6608
  40bb7b:	mov    ds:0x51fc03e8,al
  40bb80:	xchg   ecx,eax
  40bb81:	or     eax,0x464107f4
  40bb86:	rol    BYTE PTR [edi],1
  40bb88:	inc    esi
  40bb89:	cmp    al,0x21
  40bb8b:	stc    
  40bb8c:	call   0x6859a549
  40bb91:	inc    edi
  40bb92:	adc    eax,DWORD PTR [edi]
  40bb94:	cs push cs
  40bb96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb97:	and    DWORD PTR [ecx+0xd],0x3e907c4
  40bb9e:	arpl   WORD PTR ds:0xfc68c862,ax
  40bba4:	sub    BYTE PTR [edi+0x3c18567],dl
	...
  40bbb6:	add    BYTE PTR [eax],al
  40bbb8:	add    BYTE PTR [esi],ch
  40bbba:	add    dl,BYTE PTR [eax]
  40bbbc:	cld    
  40bbbd:	arpl   WORD PTR ds:0x58f8e900,ax
  40bbc3:	sub    al,0xa8
  40bbc5:	pusha  
  40bbc6:	or     BYTE PTR [ebp-0xb],dh
  40bbc9:	push   0x6ede96d6
  40bbce:	jle    0x40bb55
  40bbd0:	xchg   ecx,eax
  40bbd1:	gs or  bh,bh
  40bbd4:	inc    ecx
  40bbd5:	popf   
  40bbd6:	add    al,0x0
  40bbd8:	jmp    0xc0033dc2
  40bbdd:	outs   dx,BYTE PTR ds:[esi]
  40bbde:	push   es
  40bbdf:	push   eax
  40bbe0:	sar    DWORD PTR [eax-0x3351008e],0x80
  40bbe7:	ret    0x56a7
  40bbea:	push   es
  40bbeb:	push   eax
  40bbec:	sahf   
  40bbed:	xchg   esp,eax
  40bbee:	dec    ebp
  40bbef:	(bad)  
  40bbf0:	xchg   esi,eax
  40bbf1:	sbb    ax,0x5e5
  40bbf5:	addr16 add eax,0x7936c89
  40bbfb:	(bad)  
  40bbfc:	jle    0x40bc25
  40bbfe:	clc    
  40bbff:	sub    DWORD PTR [edi+0x5c00055f],0xffffff94
  40bc06:	inc    ebx
  40bc07:	(bad)  
  40bc08:	push   si
  40bc0a:	push   cs
  40bc0b:	add    bh,cl
  40bc0d:	pusha  
  40bc0e:	add    eax,0x76dce600
  40bc13:	add    cl,ch
  40bc15:	pusha  
  40bc16:	js     0x40bbad
  40bc18:	sub    edx,DWORD PTR [ebp+0x6]
  40bc1b:	jmp    FWORD PTR [eax+eax*1+0x0]
	...
  40bc2b:	add    BYTE PTR [ecx+0x38c14fda],ah
  40bc31:	fld    DWORD PTR [eax-0x17]
  40bc34:	push   0x60e9644d
  40bc39:	cli    
  40bc3a:	mov    edi,0x751a6294
  40bc3f:	fs sub al,0x43
  40bc42:	dec    BYTE PTR [esi]
  40bc44:	pop    esi
  40bc45:	js     0x40bc89
  40bc47:	add    BYTE PTR [esi-0x515598ae],cl
  40bc4d:	inc    ebx
  40bc4e:	jmp    edi
  40bc50:	sub    al,0x5d
  40bc52:	(bad)  
  40bc53:	inc    DWORD PTR [ecx-0x4efd8b3e]
  40bc59:	pop    ebp
  40bc5a:	mov    WORD PTR [ebp-0x10738],ss
  40bc60:	inc    DWORD PTR [ebx+0x2b]
  40bc63:	mov    DWORD PTR [edi],eax
  40bc65:	scas   al,BYTE PTR es:[edi]
  40bc66:	std    
  40bc67:	call   FWORD PTR [ebp-0x74d74496]
  40bc6d:	add    edi,edi
  40bc6f:	jne    0x40bcaf
  40bc71:	jmp    0xb5fe:0xf8fd9698
  40bc78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc79:	clc    
  40bc7a:	(bad)  
  40bc7b:	(bad)  
  40bc7c:	jp     0x40bc67
  40bc7e:	loopne 0x40bc16
  40bc80:	int    0xf8
  40bc82:	mov    BYTE PTR [ebp-0x10776],al
  40bc88:	dec    edx
  40bc89:	imul   edi,DWORD PTR [eax],0xff014b3c
  40bc8f:	mov    ch,0x0
	...
  40bc9d:	add    BYTE PTR [eax],al
  40bc9f:	pop    edx
  40bca0:	clc    
  40bca1:	(bad)  
  40bca2:	jmp    edx
  40bca4:	je     0x40bd0a
  40bca6:	add    dl,bh
  40bca8:	or     al,0xbf
  40bcaa:	je     0x40bca5
  40bcac:	imul   edi,DWORD PTR [esi],0xff01cb3c
  40bcb2:	mov    ch,0xca
  40bcb4:	idiv   esi
  40bcb6:	call   FWORD PTR [ebp-0x5c17f891]
  40bcbc:	idiv   dh
  40bcbe:	jmp    DWORD PTR [edx]
  40bcc0:	mov    ebp,0x877dff91
  40bcc5:	test   dl,al
  40bcc7:	jl     0x40bcc2
  40bcc9:	(bad)  
  40bcca:	push   eax
  40bccb:	pop    ebp
  40bccc:	scas   eax,DWORD PTR es:[edi]
  40bccd:	mov    ebx,0xbef63fe
  40bcd2:	call   0x443d49
  40bcd7:	(bad)  
  40bcd9:	sti    
  40bcda:	test   BYTE PTR [esi],ah
  40bcdc:	pop    es
  40bcdd:	or     edi,edi
  40bcdf:	xchg   esp,eax
  40bce0:	enter  0xfe4e,0x8c
  40bce4:	push   ss
  40bce5:	sbb    ah,BYTE PTR [edi+edi*8]
  40bce8:	sbb    eax,DWORD PTR [ebx]
  40bcea:	push   DWORD PTR [esi+0x74ff0a63]
  40bcf0:	inc    ebx
  40bcf1:	jg     0x40bc85
  40bcf3:	ins    BYTE PTR es:[edi],dx
  40bcf4:	ss cmp eax,0xb01c5bc2
  40bcfa:	mov    cl,BYTE PTR [edi-0x3c]
  40bcfd:	nop
  40bcfe:	or     ecx,DWORD PTR [ebx-0x58]
  40bd01:	jno    0x40bd02
	...
  40bd0f:	add    BYTE PTR [eax],al
  40bd11:	add    BYTE PTR [eax+ebp*8+0x42],cl
  40bd15:	je     0x40bd6b
  40bd17:	ds mov ah,0xfe
  40bd1a:	mov    dh,0xf6
  40bd1c:	sbb    ch,BYTE PTR [ebx-0x17f563cb]
  40bd22:	mov    edx,0x1aff0b80
  40bd27:	mov    cl,0xfb
  40bd29:	push   DWORD PTR [edi+0x1f831877]
  40bd2f:	jnp    0x40bccf
  40bd31:	(bad)  
  40bd32:	jp     0x40bd01
  40bd34:	or     DWORD PTR [ebp+0x5b],esi
  40bd37:	push   esi
  40bd38:	jg     0x40bcc9
  40bd3a:	cld    
  40bd3b:	arpl   WORD PTR [ebp+0x45],di
  40bd3e:	test   eax,0xe676feec
  40bd44:	sbb    bh,BYTE PTR [edi+0x6a0b4be4]
  40bd4a:	add    BYTE PTR [ebx-0x6f],0x7
  40bd4e:	retf   
  40bd4f:	or     DWORD PTR [ebx],0xe6c8ccff
  40bd55:	dec    BYTE PTR [esi+0x5]
  40bd58:	icebp  
  40bd59:	sbb    ecx,DWORD PTR [eax]
  40bd5b:	add    eax,0x5490b1e
  40bd60:	and    DWORD PTR [eax+ebp*2+0x1b9be946],0x9c03a841
  40bd6b:	cmp    dh,BYTE PTR [edx+0x10523dc]
  40bd71:	xlat   BYTE PTR ds:[ebx]
  40bd72:	test   DWORD PTR [esi+ebp*8],0xfe
	...
  40bd85:	les    edi,FWORD PTR [ecx-0x3]
  40bd88:	mov    bl,0x4
  40bd8a:	inc    esp
  40bd8b:	sbb    eax,0xd65474c5
  40bd90:	nop
  40bd91:	fs in  eax,dx
  40bd93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd94:	pop    es
  40bd95:	fs add al,0xd1
  40bd98:	push   es
  40bd99:	icebp  
  40bd9a:	add    edi,DWORD PTR [esi+0x386c549d]
  40bda0:	enter  0x5a3,0x41
  40bda4:	mov    ebp,0xae94688
  40bda9:	jbe    0x40bdfb
  40bdab:	rol    ah,1
  40bdad:	xor    al,0xec
  40bdaf:	in     al,dx
  40bdb0:	jo     0x40bdde
  40bdb2:	add    al,0xe2
  40bdb4:	inc    ebx
  40bdb5:	scas   eax,DWORD PTR es:[edi]
  40bdb6:	sbb    DWORD PTR [ecx],ebx
  40bdb8:	pushf  
  40bdb9:	pop    ebp
  40bdba:	inc    ecx
  40bdbb:	sub    BYTE PTR [ebx+esi*4],al
  40bdbe:	add    al,0xfc
  40bdc0:	sti    
  40bdc1:	add    al,0x97
  40bdc3:	ins    BYTE PTR es:[edi],dx
  40bdc4:	or     al,BYTE PTR [ebp*8+0x3fc743c]
  40bdcb:	rol    DWORD PTR [ebx],cl
  40bdcd:	mov    DWORD PTR ds:0x462f86c1,eax
  40bdd3:	jmp    0xe944a273
  40bdd8:	or     ebx,0xffffffdd
  40bddb:	push   esp
  40bddc:	or     dl,ah
  40bdde:	verw   WORD PTR [ecx]
  40bde1:	fsub   QWORD PTR [edi]
  40bde3:	push   eax
  40bde4:	cdq    
  40bde5:	push   0x269b84
	...
  40bdf6:	add    BYTE PTR [eax],al
  40bdf8:	imul   edx,DWORD PTR [eax],0x53c495c0
  40bdfe:	push   0x44a4d6
  40be03:	mov    ecx,0x11087a59
  40be08:	(bad)  
  40be09:	(bad)  
  40be0a:	(bad)  
  40be0b:	(bad)  
  40be0c:	jns    0x40bdb1
  40be0e:	nop
  40be0f:	neg    BYTE PTR [edx-0x13]
  40be12:	cwde   
  40be13:	pop    eax
  40be14:	pop    ecx
  40be15:	add    al,0xff
  40be17:	pop    esp
  40be18:	imul   eax,DWORD PTR [esi*2-0x70eea70f],0xffffffd6
  40be20:	pop    edx
  40be21:	into   
  40be22:	shl    ebp,0x60
  40be25:	pop    edx
  40be26:	mov    edx,ebp
  40be28:	loopne 0x40bdf3
  40be2a:	jmp    0x40bde2
  40be2c:	push   0x2
  40be2e:	lea    ebp,[ebx+ebx*2]
  40be31:	push   ebp
  40be32:	push   DWORD PTR [edi+ecx*2]
  40be35:	add    al,0x75
  40be37:	cmc    
  40be38:	pop    eax
  40be39:	xlat   BYTE PTR ds:[ebx]
  40be3a:	(bad)  
  40be3b:	jmp    0xe700cca0
  40be40:	lods   eax,DWORD PTR ds:[esi]
  40be41:	into   
  40be42:	(bad)  
  40be43:	call   0x818588a8
  40be48:	addr16 add eax,0x48a3e900
  40be4e:	hlt    
  40be4f:	jbe    0x40beb3
  40be51:	add    eax,0x6f5f0300
  40be56:	add    bl,dl
  40be58:	pusha  
  40be59:	outs   dx,DWORD PTR ds:[esi]
  40be5a:	add    BYTE PTR [eax+eax*1+0x0],ch
	...
  40be6a:	add    BYTE PTR [esi+esi*8-0x6939bb1],dh
  40be71:	test   BYTE PTR [esi+0x5a],0x55
  40be75:	inc    DWORD PTR [eax]
  40be77:	pop    ds
  40be78:	ud0    esi,DWORD PTR [ebp-0x6a]
  40be7c:	and    DWORD PTR [ebx+eiz*2-0x3ff4f946],esp
  40be83:	push   cs
  40be84:	add    al,0xe8
  40be86:	mov    cs,edx
  40be88:	push   es
  40be89:	add    BYTE PTR [eax+0x16],ch
  40be8c:	loope  0x40becd
  40be8e:	add    BYTE PTR [ebp-0x6e],dl
  40be91:	push   cs
  40be92:	call   0x403414
  40be97:	cli    
  40be98:	adc    eax,0xf714ff8d
  40be9e:	call   DWORD PTR [ebp+0x4de850b6]
  40bea4:	jne    0x40bea5
  40bea6:	push   ebx
  40bea8:	xor    al,0xf7
  40beab:	xchg   ebp,eax
  40beac:	or     eax,0xceb0de8
  40beb1:	jmp    FWORD PTR [edx+0x7a]
  40beb4:	sahf   
  40beb5:	(bad)  
  40beb6:	cmp    al,0x8b
  40beb8:	or     edi,edi
  40beba:	mov    ch,0x1a
  40bebc:	adc    eax,0x9315ffff
  40bec1:	or     ch,al
  40bec3:	sub    dh,BYTE PTR [edx-0x1]
  40bec6:	push   DWORD PTR [ebx-0x2a08137d]
  40becc:	or     al,0x83
  40bece:	mov    ebp,0x0
	...
  40bedb:	add    BYTE PTR [eax],al
  40bedd:	add    dh,ah
  40bedf:	adc    al,0xff
  40bee1:	(bad)  
  40bee2:	cmp    dl,BYTE PTR [edx+0x60b6811]
  40bee8:	out    dx,eax
  40bee9:	mov    esi,0xf7ec5395
  40beee:	xchg   ebp,eax
  40beef:	or     eax,0x1e0275ff
  40bef4:	xchg   edi,eax
  40bef5:	mov    dl,0x85
  40bef7:	or     eax,0x15a6b5ff
  40befc:	(bad)  
  40befd:	jmp    DWORD PTR [ebx+0x44]
  40bf00:	cmp    al,0x90
  40bf02:	in     al,0x52
  40bf04:	or     BYTE PTR [ebp-0xf7bd2d],dh
  40bf0a:	aam    0xb8
  40bf0c:	idiv   dh
  40bf0e:	push   esi
  40bf0f:	in     al,0x1a
  40bf11:	xor    ah,al
  40bf13:	xor    cl,BYTE PTR [eax]
  40bf15:	push   esi
  40bf17:	sbb    edx,DWORD PTR [eax]
  40bf19:	push   DWORD PTR [ebx+edx*1+0x1aac9058]
  40bf20:	or     BYTE PTR [ebp-0x55],al
  40bf23:	add    al,0xbf
  40bf25:	(bad)  
  40bf26:	pushf  
  40bf27:	or     cl,BYTE PTR [eax]
  40bf29:	jne    0x40bec2
  40bf2b:	adc    ecx,DWORD PTR [edx]
  40bf2d:	bound  esp,QWORD PTR [ebx-0x14]
  40bf30:	cmp    edx,eax
  40bf32:	push   edi
  40bf33:	in     al,dx
  40bf34:	lods   eax,DWORD PTR ds:[esi]
  40bf35:	mov    cl,BYTE PTR [edi+0x6ce8406c]
  40bf3b:	loop   0x40bf43
  40bf3d:	lea    esp,[esi]
  40bf3f:	fdiv   DWORD PTR [ebx+0xfe]
	...
  40bf51:	out    dx,al
  40bf52:	sti    
  40bf53:	add    eax,0x22d66f75
  40bf58:	bound  esp,QWORD PTR [ebx-0x12]
  40bf5b:	stc    
  40bf5c:	mov    edi,0xe6715c
  40bf61:	arpl   si,bp
  40bf63:	cmp    eax,0x2ef3b45
  40bf68:	add    BYTE PTR [ebx-0x59],ah
  40bf6b:	shl    bl,0x2c
  40bf6e:	lock add al,BYTE PTR [eax]
  40bf71:	mov    ecx,0x8aff98ee
  40bf76:	out    dx,al
  40bf77:	cwde   
  40bf78:	jmp    edi
  40bf7a:	sub    DWORD PTR [eax],edx
  40bf7c:	push   eax
  40bf7d:	fidiv  WORD PTR [ecx+0x10]
  40bf80:	test   DWORD PTR [eax+esi*2],0x576feb4
  40bf87:	popa   
  40bf88:	pop    es
  40bf89:	outs   dx,BYTE PTR ds:[esi]
  40bf8a:	add    DWORD PTR [ecx+0x51],edx
  40bf8d:	add    DWORD PTR ds:0x79a4fae9,0x5c21ce4
  40bf97:	jmp    0x11020a9f
  40bf9c:	(bad)
  40bf9f:	mov    ebx,0x59ddbcf3
  40bfa4:	pop    es
  40bfa5:	mov    esp,0xe6347255
  40bfaa:	mov    dl,BYTE PTR [edi+ecx*1]
  40bfad:	lods   al,BYTE PTR ds:[esi]
  40bfae:	add    BYTE PTR [ecx+0x79cdbcb1],bh
  40bfb4:	pop    es
	...
  40bfc1:	add    BYTE PTR [eax],al
  40bfc3:	add    BYTE PTR [esi+ecx*4+0x8c146b],bl
  40bfca:	(bad)  
  40bfcb:	sbb    ebp,DWORD PTR [ebp-0x6b]
  40bfce:	cmc    
  40bfcf:	push   es
  40bfd0:	stc    
  40bfd1:	add    al,0x83
  40bfd3:	add    edi,DWORD PTR [edx+edi*4-0x28]
  40bfd7:	push   cs
  40bfd8:	je     0x40bfda
  40bfda:	ficom  WORD PTR [eax+0x730ced58]
  40bfe0:	add    BYTE PTR fs:[eax-0x80],ah
  40bfe4:	dec    edi
  40bfe5:	clc    
  40bfe6:	lds    eax,FWORD PTR [esi]
  40bfe8:	push   esp
  40bfe9:	mov    edx,0x4c0ecc
  40bfee:	sar    DWORD PTR [edi],0xea
  40bff1:	jmp    FWORD PTR [ebp+0xa78fcfa]
  40bff7:	mov    ah,0xeb
  40bff9:	mov    DWORD PTR [eax-0x69ffd3f2],edx
  40bfff:	push   eax
  40c000:	cmp    edi,eax
  40c002:	lea    eax,[esi]
  40c004:	or     eax,DWORD PTR [esi]
  40c006:	pop    esp
  40c007:	push   es
  40c008:	adc    al,0xc
  40c00a:	test   eax,0x6da48f
  40c00f:	jmp    0x40c071
  40c011:	lock mov ebp,0x4140ba01
  40c017:	jmp    0x57287a79
  40c01c:	gs add bh,bh
  40c01f:	fsub   st(0),st
  40c021:	out    0x97,eax
  40c023:	xchg   ebp,eax
  40c024:	add    BYTE PTR gs:[eax-0x15],ch
	...
  40c034:	add    BYTE PTR [eax],al
  40c036:	add    BYTE PTR [eax-0x10],ah
  40c039:	mov    ebp,0x4140fbd1
  40c03e:	jmp    0x37287aa0
  40c043:	gs add bh,bh
  40c046:	pushf  
  40c047:	mov    eax,0x65557fe7
  40c04c:	add    BYTE PTR [eax-0x17],ch
  40c04f:	pusha  
  40c050:	lock mov ebp,0x41410781
  40c056:	jmp    0xf7287ab8
  40c05b:	data16 add bh,bh
  40c05e:	jl     0x40bfe8
  40c060:	out    0x67,eax
  40c062:	xor    eax,0x7de80065
  40c067:	out    dx,al
  40c068:	(bad)  
  40c069:	(bad)  
  40c06a:	ficomp WORD PTR [ecx+esi*8]
  40c06d:	not    dh
  40c06f:	pop    esi
  40c070:	in     eax,dx
  40c071:	mov    BYTE PTR [esi+0x66],bl
  40c074:	(bad)  
  40c075:	(bad)  
  40c076:	jl     0x40c0e7
  40c078:	idiv   dh
  40c07a:	mov    esi,0xb60c7866
  40c07f:	aam    0x6
  40c081:	call   0xff3f2612
  40c086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c088:	cmc    
  40c089:	neg    BYTE PTR [esi+0x666ced66]
  40c08f:	pop    esi
  40c090:	(bad)  
  40c091:	(bad)  
  40c092:	and    al,0x6f
  40c094:	in     al,dx
  40c095:	lock add ah,bl
  40c098:	or     bh,bh
  40c09a:	inc    DWORD PTR [eax]
	...
  40c0a8:	add    BYTE PTR [eax],al
  40c0aa:	pop    ss
  40c0ab:	pop    es
  40c0ac:	call   0x4a1c68
  40c0b1:	leave  
  40c0b2:	enter  0xfefd,0x54
  40c0b6:	jno    0x40c0d5
  40c0b8:	add    esp,0xffffff8e
  40c0bb:	fwait
  40c0bc:	(bad)  
  40c0bd:	imul   ebx,DWORD PTR [eax+0x8],0x88220875
  40c0c4:	mov    bh,bh
  40c0c6:	sbb    eax,0xb2fc457a
  40c0cb:	add    al,BYTE PTR [eax]
  40c0cd:	out    dx,eax
  40c0ce:	dec    esp
  40c0cf:	mov    eax,ds:0x30b3c9f
  40c0d4:	push   0xfec3beb1
  40c0d9:	(bad)  
  40c0da:	xlat   BYTE PTR ds:[ebx]
  40c0db:	cli    
  40c0dc:	out    0x47,al
  40c0de:	push   es
  40c0df:	or     bh,bh
  40c0e1:	push   0x3fcd33
  40c0e6:	pop    ebp
  40c0e7:	into   
  40c0e8:	dec    ecx
  40c0e9:	sub    DWORD PTR [ebx-0x7d8a00fe],edi
  40c0ef:	sbb    dl,BYTE PTR [eax+0x68098dfd]
  40c0f5:	mov    ecx,0x67fec23e
  40c0fa:	js     0x40c0fe
  40c0fc:	add    BYTE PTR [eax-0x17f97073],al
  40c102:	lods   al,BYTE PTR ds:[esi]
  40c103:	push   es
  40c104:	(bad)  
  40c105:	push   DWORD PTR [edx+0x3a413c36]
  40c10b:	call   0x0:0x0
	...
  40c11a:	add    BYTE PTR [eax],al
  40c11c:	add    BYTE PTR [edx],bh
  40c11e:	cmp    dh,0x75
  40c121:	inc    edx
  40c122:	sbb    bl,BYTE PTR [ebx-0x2]
  40c125:	std    
  40c126:	or     BYTE PTR [eax+0xd],ch
  40c129:	(bad)  
  40c12b:	(bad)  
  40c12c:	addr16 arpl dx,bp
  40c12f:	add    al,BYTE PTR [eax]
  40c131:	jecxz  0x40c0c1
  40c133:	lea    eax,[edi]
  40c135:	or     esi,DWORD PTR ds:0x7f0cff06
  40c13b:	mov    ?,ebx
  40c13d:	add    al,0x1
  40c13f:	sti    
  40c140:	out    0x94,eax
  40c142:	pusha  
  40c143:	add    al,0xff
  40c145:	sub    ch,BYTE PTR [edx]
  40c147:	(bad)  
  40c148:	call   DWORD PTR [edi+0x6eff1773]
  40c14e:	call   0x4f30da6d
  40c153:	add    al,0xb
  40c155:	mov    ds:0xe567c9bf,eax
  40c15a:	add    dl,al
  40c15c:	call   DWORD PTR [esp+eax*2]
  40c15f:	push   ebp
  40c160:	xchg   edx,eax
  40c161:	mov    esp,0x4b4fb32e
  40c166:	in     al,dx
  40c167:	add    ch,bh
  40c169:	in     eax,dx
  40c16a:	xchg   ebx,eax
  40c16b:	cdq    
  40c16c:	cmp    al,0x22
  40c16e:	in     al,dx
  40c16f:	mov    dl,0xfe
  40c171:	push   ss
  40c172:	in     al,0x1a
  40c174:	jne    0x40c146
  40c176:	push   es
  40c177:	add    al,0x58
  40c179:	sti    
  40c17a:	in     al,dx
  40c17b:	add    ch,bh
  40c17d:	lds    eax,FWORD PTR [ebx+0x3c8a]
	...
  40c18f:	add    BYTE PTR [edx],ah
  40c191:	in     al,dx
  40c192:	mov    dl,0xfe
  40c194:	out    dx,al
  40c195:	repz jmp 0xd6e8:0x2deb060
  40c19d:	gs add edi,edi
  40c1a0:	sub    dh,BYTE PTR [ecx+0x77ae000b]
  40c1a6:	lock and BYTE PTR [edi],0xbb
  40c1aa:	ins    DWORD PTR es:[edi],dx
  40c1ab:	add    BYTE PTR [ecx+0x6b75030f],bh
  40c1b1:	(bad)  
  40c1b2:	mov    dl,0x8a
  40c1b4:	xor    al,0x6
  40c1b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1b7:	lea    esp,[edi+0x241e12f9]
  40c1bd:	jae    0x40c1a0
  40c1bf:	jmp    0x40c1b8
  40c1c1:	cld    
  40c1c2:	lea    eax,[ebx]
  40c1c4:	mov    DWORD PTR [eax],ebp
  40c1c6:	xchg   BYTE PTR [ecx+0x5b],bh
  40c1c9:	in     eax,dx
  40c1ca:	jno    0x40c1cf
  40c1cc:	add    al,0xfd
  40c1ce:	add    ah,BYTE PTR [eax]
  40c1d0:	cld    
  40c1d1:	jb     0x40c1b4
  40c1d3:	jmp    0x40c1b8
  40c1d5:	cld    
  40c1d6:	gs add ebp,esp
  40c1d9:	jb     0x40c238
  40c1db:	add    ebp,DWORD PTR [esi+0xd]
  40c1de:	inc    ecx
  40c1df:	int    0xe9
  40c1e1:	cld    
  40c1e2:	dec    ebp
  40c1e3:	int    0xa2
  40c1e5:	add    ecx,ebp
  40c1e7:	pop    eax
  40c1e8:	fsubr  st,st(1)
  40c1ea:	cdq    
  40c1eb:	retf   0x455f
  40c1ee:	test   BYTE PTR [ebx+eiz*2+0x5],0xe9
  40c1f3:	add    eax,DWORD PTR [eax]
	...
  40c201:	add    BYTE PTR [eax],al
  40c203:	arpl   WORD PTR [eax],si
  40c205:	inc    edx
  40c206:	add    esi,DWORD PTR [esi]
  40c208:	or     eax,0x5043711
  40c20d:	jmp    0x6a4df9a0
  40c212:	cld    
  40c213:	bound  esi,QWORD PTR [ebx-0x28]
  40c216:	push   es
  40c217:	mov    bl,0x88
  40c219:	adc    al,BYTE PTR [esi]
  40c21b:	std    
  40c21c:	test   DWORD PTR [edx-0x1b8de0a1],esi
  40c222:	imul   ebx,DWORD PTR [edi+eax*1+0x726c0445],0x5c9eebed
  40c22d:	jmp    0xf638d35
  40c232:	inc    ebp
  40c233:	arpl   WORD PTR [ebp+0x5c],bp
  40c236:	inc    eax
  40c237:	mov    ds:0xec99d105,al
  40c23c:	sti    
  40c23d:	push   DWORD PTR [ebp+0x4473c56d]
  40c243:	pusha  
  40c244:	jb     0x40c24e
  40c246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c247:	dec    ebx
  40c248:	and    bh,BYTE PTR [esi]
  40c24a:	sub    BYTE PTR [edi-0x78],bl
  40c24d:	ret    
  40c24e:	in     eax,dx
  40c24f:	ins    DWORD PTR es:[edi],dx
  40c250:	lds    esi,FWORD PTR [esp+esi*1+0x60]
  40c254:	adc    dh,BYTE PTR ds:0xa305a7c7
  40c25a:	sub    DWORD PTR [eax-0x5c95ffba],esp
  40c260:	inc    ebp
  40c261:	aas    
  40c262:	sub    BYTE PTR [edi+0x5],bl
  40c265:	jne    0x40c258
	...
  40c273:	add    BYTE PTR [eax],al
  40c275:	add    BYTE PTR [ecx+0x12],ah
  40c278:	sub    DWORD PTR [edi],ebx
  40c27a:	sahf   
  40c27b:	add    eax,0x54d10eb
  40c280:	push   0xffffffe8
  40c282:	popa   
  40c283:	xor    al,BYTE PTR [eax+0x6]
  40c286:	es add eax,0x3b87d4ff
  40c28c:	inc    ecx
  40c28d:	jmp    0xe24c8a77
  40c292:	mov    al,ds:0x6b262177
  40c297:	inc    ebp
  40c298:	aas    
  40c299:	test   al,0x60
  40c29b:	cld    
  40c29c:	adc    al,0xa8
  40c29e:	and    al,BYTE PTR [esi+0x0]
  40c2a1:	push   0xffffff9c
  40c2a3:	pop    es
  40c2a4:	(bad)  
  40c2a5:	fdivr  QWORD PTR [edi]
  40c2a7:	cmp    eax,DWORD PTR [ecx-0x17]
  40c2aa:	cdq    
  40c2ab:	add    BYTE PTR [eax-0x4a],al
  40c2ae:	daa    
  40c2af:	add    eax,0x560e900
  40c2b4:	jmp    0x40c29e
  40c2b6:	daa    
  40c2b7:	nop
  40c2b8:	ret    0x9842
  40c2bb:	lds    eax,FWORD PTR [edi]
  40c2bd:	jmp    0xe80fca9
  40c2c2:	mov    al,ds:0x8e000005
  40c2c7:	and    al,0xff
  40c2c9:	xor    eax,0x41447a
  40c2ce:	cmc    
  40c2cf:	adc    al,BYTE PTR [ecx+0x3e]
  40c2d2:	mov    eax,DWORD PTR [ecx]
  40c2d4:	add    esp,0x3e
  40c2d7:	push   es
  40c2d8:	adc    eax,0x29
	...
  40c2e9:	add    al,0x48
  40c2eb:	add    bh,al
  40c2ed:	cmova  edi,DWORD PTR [edi]
  40c2f0:	inc    ecx
  40c2f1:	or     al,BYTE PTR [edi]
  40c2f3:	add    BYTE PTR [eax],al
  40c2f5:	cli    
  40c2f6:	rcl    DWORD PTR [ebx-0x75],0xd6
  40c2fa:	add    dl,0xf0
  40c2fd:	pop    ecx
  40c2fe:	mov    BYTE PTR [ebx+0x8],al
  40c301:	add    edi,eax
  40c303:	jb     0x40c310
  40c305:	jns    0x40c381
  40c307:	or     al,0x0
  40c309:	push   cs
  40c30a:	add    al,0x80
  40c30c:	cmp    dl,cl
  40c30e:	jae    0x40c317
  40c310:	sub    ecx,DWORD PTR [edx-0x2d3d36a8]
  40c316:	push   es
  40c317:	cmp    BYTE PTR [eax],0x4
  40c31a:	jae    0x40c32c
  40c31c:	xor    DWORD PTR [edi-0x35bec0ba],0x6
  40c323:	jne    0x40c32c
  40c325:	xchg   ecx,eax
  40c326:	(bad)  
  40c327:	pop    ecx
  40c328:	leave  
  40c329:	js     0x40c334
  40c32b:	add    BYTE PTR [eax+0x3e7484b2],al
  40c331:	add    DWORD PTR [edx+0xc],edx
  40c334:	dec    edx
  40c335:	stc    
  40c336:	loop   0x40c339
  40c338:	or     ebp,DWORD PTR [eax+0x72]
  40c33b:	push   es
  40c33c:	xor    edi,0x9
  40c33f:	add    DWORD PTR [ebp+0x7e],esi
  40c342:	sub    eax,eax
  40c344:	jmp    0x40c3a4
  40c346:	add    al,0x4d
  40c348:	or     al,0xf1
  40c34a:	inc    edx
  40c34b:	or     al,0x5
	...
  40c359:	add    BYTE PTR [eax],al
  40c35b:	add    BYTE PTR [ebx-0x14],ah
  40c35e:	push   es
  40c35f:	add    BYTE PTR [ebx-0x53],ah
  40c362:	loop   0x40c365
  40c364:	mov    bl,0xd4
  40c366:	sbb    al,0x8d
  40c368:	inc    esp
  40c369:	mov    ebx,0xe4968b52
  40c36e:	inc    esp
  40c36f:	push   eax
  40c370:	xor    al,0x31
  40c372:	adc    BYTE PTR [edx+0x3b],dl
  40c375:	mov    ecx,0x4424fe9a
  40c37a:	pop    ebp
  40c37b:	leave  
  40c37c:	and    esp,esp
  40c37e:	add    ch,BYTE PTR [ebx]
  40c380:	cmp    BYTE PTR [ebx-0x6f3f38b],cl
  40c386:	or     ch,BYTE PTR [edx+0x63]
  40c389:	push   ss
  40c38a:	add    al,0xff
  40c38c:	push   esi
  40c38d:	rol    DWORD PTR [eax+0x41],0x63
  40c391:	outs   dx,DWORD PTR ds:[esi]
  40c392:	(bad)  
  40c393:	addps  xmm5,XMMWORD PTR [edi+esi*2]
  40c397:	fisub  DWORD PTR gs:[eax+0x616f69fe]
  40c39e:	inc    esi
  40c39f:	lock xor eax,DWORD PTR [esi+esi*8-0x75]
  40c3a4:	int3   
  40c3a5:	inc    edx
  40c3a6:	ins    DWORD PTR es:[edi],dx
  40c3a7:	add    dh,dl
  40c3a9:	mov    al,ds:0xb8bc4ff2
  40c3ae:	(bad)  
  40c3af:	dec    BYTE PTR [esi-0x17]
  40c3b2:	inc    eax
  40c3b3:	inc    ecx
  40c3b4:	arpl   WORD PTR [edi-0x39],bp
  40c3b7:	or     ebx,DWORD PTR [eax+0x2c]
  40c3ba:	jbe    0x40c3ef
  40c3bc:	out    dx,al
  40c3bd:	test   al,0xf2
  40c3bf:	add    BYTE PTR [eax],0x0
	...
  40c3ce:	add    BYTE PTR [ebx],bl
  40c3d0:	loopne 0x40c3d4
  40c3d2:	je     0x40c43c
  40c3d4:	ja     0x40c419
  40c3d6:	or     BYTE PTR [ebx],ah
  40c3d8:	pushf  
  40c3d9:	jmp    0x9b8a:0xfef2efb4
  40c3e0:	pop    eax
  40c3e1:	inc    esi
  40c3e2:	lock ins BYTE PTR es:[edi],dx
  40c3e4:	add    al,0x59
  40c3e6:	or     al,0x10
  40c3e8:	cli    
  40c3e9:	pop    eax
  40c3ea:	or     BYTE PTR [ebx-0x23],cl
  40c3ed:	call   DWORD PTR fs:[ebp+0x6c]
  40c3f1:	jmp    0x19366b86
  40c3f6:	jmp    FWORD PTR [edi+0x36]
  40c3f9:	inc    DWORD PTR [ebx+eiz*2-0x7c]
  40c3fd:	lods   al,BYTE PTR ds:[esi]
  40c3fe:	or     al,0xc9
  40c400:	push   es
  40c401:	scas   al,BYTE PTR es:[edi]
  40c402:	jns    0x40c433
  40c404:	stc    
  40c405:	sti    
  40c406:	xor    al,0x65
  40c408:	inc    esi
  40c409:	jmp    0x624ee490
  40c40e:	ret    
  40c40f:	mov    ecx,0x630caace
  40c414:	push   edx
  40c415:	jb     0x40c407
  40c417:	add    eax,0x77feed73
  40c41c:	or     eax,0x383b1976
  40c421:	sub    BYTE PTR [eax+eiz*8],al
  40c424:	shl    eax,0x53
  40c427:	in     al,0x72
  40c429:	in     eax,dx
  40c42a:	(bad)  
  40c42b:	push   edi
  40c42c:	or     eax,0x388f1956
  40c431:	test   al,0x3
	...
  40c43f:	add    BYTE PTR [eax],al
  40c441:	add    al,ah
  40c443:	shl    eax,0x8a
  40c446:	das    
  40c447:	adc    eax,0xce1b0270
  40c44c:	sub    dl,BYTE PTR [eax]
  40c44e:	arpl   WORD PTR [edx+0x62],dx
  40c451:	lock loope 0x40c415
  40c454:	adc    bh,bh
  40c456:	das    
  40c457:	or     DWORD PTR [ecx],edx
  40c459:	add    esi,edx
  40c45b:	clc    
  40c45c:	adc    eax,0xe572a30b
  40c461:	int3   
  40c462:	mov    ds:0xffee915,al
  40c467:	or     DWORD PTR [ecx],edx
  40c469:	loopne 0x40c439
  40c46b:	clc    
  40c46c:	push   ebp
  40c46e:	imul   eax,ebp,0xc69fe573
  40c474:	psubsw mm4,QWORD PTR [ebp+0x71]
  40c478:	adc    al,0xde
  40c47a:	fist   DWORD PTR ds:0xf863ace8
  40c480:	(bad)  
  40c481:	loop   0x40c4a3
  40c483:	jno    0x40c489
  40c485:	mov    al,0x22
  40c487:	or     BYTE PTR [eax],al
  40c489:	push   ecx
  40c48a:	mov    edi,DWORD PTR [eax]
  40c48c:	inc    ecx
  40c48d:	jmp    0x287e795a
  40c492:	addr16 in eax,dx
  40c494:	mov    edi,DWORD PTR [edi+0x25]
  40c497:	test   DWORD PTR [edx],0x68089ba9
  40c49d:	int    0x55
  40c49f:	inc    esi
  40c4a0:	add    BYTE PTR [ecx],al
  40c4a2:	call   0x0:0xe94137
	...
  40c4b5:	clc    
  40c4b6:	jl     0x40c44e
  40c4b8:	jle    0x40c4b7
  40c4ba:	or     al,al
  40c4bc:	out    0xdc,al
  40c4be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4bf:	add    cl,ch
  40c4c1:	pusha  
  40c4c2:	mov    al,BYTE PTR [ebp+eiz*2-0x70]
  40c4c6:	clc    
  40c4c7:	je     0x40c4b6
  40c4c9:	fst    QWORD PTR [eax]
  40c4cb:	and    al,0x16
  40c4cd:	push   ds
  40c4ce:	add    eax,0xc582583
  40c4d3:	shl    dh,0xdb
  40c4d6:	mov    es,WORD PTR [eax]
  40c4d8:	jmp    0x6441303d
  40c4dd:	sub    edi,ebp
  40c4df:	dec    edi
  40c4e0:	ret    
  40c4e1:	lods   eax,DWORD PTR ds:[esi]
  40c4e2:	pop    edi
  40c4e3:	mov    ah,0xe6
  40c4e5:	pop    ds
  40c4e6:	add    eax,0xf69c94ff
  40c4eb:	adc    al,0xc5
  40c4ed:	push   ebp
  40c4ee:	inc    esi
  40c4ef:	add    BYTE PTR [edx-0x5c],ch
  40c4f2:	adc    ecx,DWORD PTR [ebx]
  40c4f4:	add    BYTE PTR [edx],bh
  40c4f6:	pop    es
  40c4f7:	test   DWORD PTR [edx-0x75],ebp
  40c4fa:	add    eax,DWORD PTR [eax]
  40c4fc:	push   edi
  40c4fe:	sti    
  40c4ff:	std    
  40c500:	adc    eax,0x4136aa
  40c505:	stc    
  40c506:	int3   
  40c507:	add    al,BYTE PTR [ebx+0x5746e42]
  40c50d:	and    ebx,DWORD PTR [esi+0x1]
  40c510:	add    BYTE PTR [edx],bh
  40c512:	mov    BYTE PTR [ebx-0xc],al
  40c515:	push   0x6b
  40c517:	add    bh,bh
	...
  40c525:	add    BYTE PTR [eax],al
  40c527:	add    BYTE PTR [edi-0x7],dh
  40c52a:	out    0x14,al
  40c52c:	in     eax,dx
  40c52d:	clc    
  40c52e:	std    
  40c52f:	or     edi,edx
  40c531:	or     BYTE PTR [ecx+edi*1-0x7cfffcc5],al
  40c538:	jg     0x40c537
  40c53a:	dec    BYTE PTR [esi]
  40c53c:	xchg   BYTE PTR [eax],ch
  40c53e:	add    DWORD PTR [eax],eax
  40c540:	cli    
  40c541:	xor    BYTE PTR [esi],0x0
  40c544:	or     eax,0xa01247f
  40c549:	add    edx,DWORD PTR [eax-0x75]
  40c54c:	push   edi
  40c54d:	std    
  40c54e:	inc    eax
  40c54f:	push   edx
  40c550:	loop   0x40c5b9
  40c552:	mov    edi,edi
  40c554:	jge    0x40c5b1
  40c556:	mov    DWORD PTR [ebp+0x32],eax
  40c559:	clc    
  40c55a:	jae    0x40c550
  40c55c:	sub    eax,0x2252e86e
  40c561:	mov    cs,WORD PTR [ecx+0x43c01dff]
  40c567:	lock retf 0x2
  40c56b:	add    BYTE PTR [ebp-0x45ff13c2],al
  40c571:	add    al,BYTE PTR [eax]
  40c573:	cmp    DWORD PTR [edi-0x75bec0ca],0x2
  40c57a:	jne    0x40c5ce
  40c57c:	arpl   WORD PTR [ecx+ebp*1-0x1513ddc0],ax
  40c583:	sub    DWORD PTR [edi],esp
  40c585:	in     al,dx
  40c586:	add    dl,BYTE PTR [eax+0xb]
  40c589:	aad    0x42
  40c58b:	inc    ecx
	...
  40c598:	add    BYTE PTR [eax],al
  40c59a:	add    BYTE PTR [ebx-0x11],ah
  40c59d:	jne    0x40c587
  40c59f:	jnp    0x40c5b9
  40c5a1:	pop    edi
  40c5a2:	add    BYTE PTR [ebx-0xd],ah
  40c5a5:	ret    0x7b73
  40c5a8:	push   esp
  40c5a9:	xor    al,0x40
  40c5ab:	mov    ds:0xaf0deaec,al
  40c5b0:	in     al,dx
  40c5b1:	add    dl,BYTE PTR [eax-0x45]
  40c5b4:	cld    
  40c5b5:	inc    edx
  40c5b6:	inc    ecx
  40c5b7:	arpl   WORD PTR [edi+0x7c4be875],si
  40c5bd:	pop    esi
  40c5be:	add    BYTE PTR [ebx-0x1d],ah
  40c5c1:	ret    0x7173
  40c5c4:	adc    al,0x3c
  40c5c6:	inc    eax
  40c5c7:	mov    ds:0xb8f1eaec,al
  40c5cc:	in     al,dx
  40c5cd:	add    dl,BYTE PTR [eax+0x7b]
  40c5d0:	aam    0x42
  40c5d2:	inc    ecx
  40c5d3:	arpl   WORD PTR [edi+0x75],di
  40c5d6:	call   0x9f15e6
  40c5db:	arpl   WORD PTR [ebx+0x2ca2681a],ax
  40c5e1:	inc    ebx
  40c5e2:	add    bl,bh
  40c5e4:	inc    ebx
  40c5e5:	pop    eax
  40c5e6:	add    BYTE PTR [ebx-0x44],ah
  40c5e9:	push   0x41
  40c5eb:	and    ebp,DWORD PTR [ebp+0x4456ff02]
  40c5f1:	jmp    0x40c66c
  40c5f3:	es in  al,dx
  40c5f5:	add    cl,BYTE PTR [ebx]
  40c5f7:	mov    ds:0x1e8d6cb0,eax
  40c5fc:	cmp    BYTE PTR [ebx+0x6a],dl
	...
  40c60b:	add    BYTE PTR [eax],al
  40c60d:	add    BYTE PTR [edx+0x27],ah
  40c610:	jbe    0x40c60a
  40c612:	mov    ebx,0x9dfdb204
  40c617:	cmc    
  40c618:	sbb    eax,0x1548f76
  40c61d:	inc    esi
  40c61e:	mov    ?,ebp
  40c620:	or     eax,0x73f51f8a
  40c625:	inc    esi
  40c626:	ja     0x40c67c
  40c628:	xchg   ebx,eax
  40c629:	add    DWORD PTR [edi+ebp*2-0xf],esi
  40c62d:	jmp    0x6f65:0xfbedf733
  40c634:	fst    QWORD PTR [ebx+ecx*2+0x21]
  40c638:	fdiv   st(3),st
  40c63a:	push   ebp
  40c63b:	jg     0x40c668
  40c63d:	call   0x5023923
  40c642:	iret   
  40c643:	cmp    DWORD PTR [edx+0x79],ebp
  40c646:	dec    edi
  40c647:	push   es
  40c648:	xor    eax,0xe905cb2a
  40c64d:	jmp    0xf43b:0xc33f4ee
  40c654:	outs   dx,BYTE PTR ds:[esi]
  40c655:	sti    
  40c656:	sbb    eax,0x15ec13f5
  40c65b:	jnp    0x40c63e
  40c65d:	jmp    0x40c616
  40c65f:	mov    WORD PTR [ebp+0x797b05fb],cs
  40c665:	sti    
  40c666:	ja     0x40c665
  40c668:	nop
  40c669:	dec    esi
  40c66a:	fdivr  st(4),st
  40c66c:	jne    0x40c669
  40c66e:	ja     0x40c651
  40c670:	ins    DWORD PTR es:[edi],dx
  40c671:	jno    0x40c673
	...
  40c67f:	add    BYTE PTR [eax],al
  40c681:	pop    ebx
  40c682:	frstor ds:0x5df4dd83
  40c688:	jno    0x40c65d
  40c68a:	frstor [ebp+ecx*4+0x714df4cd]
  40c691:	mov    bh,0xdd
  40c693:	lods   al,BYTE PTR ds:[esi]
  40c694:	lea    edi,[ebp-0x348ec20c]
  40c69a:	(bad)  
  40c69c:	hlt    
  40c69d:	fdivrp st(3),st
  40c69f:	inc    BYTE PTR [eax-0x2f]
  40c6a2:	repnz (bad) 
  40c6a4:	es cwde 
  40c6a6:	jns    0x40c6a4
  40c6a8:	push   ds
  40c6a9:	jb     0x40c6c8
  40c6ab:	aas    
  40c6ac:	test   al,0x60
  40c6ae:	mov    bl,al
  40c6b0:	in     eax,0x78
  40c6b2:	fwait
  40c6b3:	sti    
  40c6b4:	push   es
  40c6b5:	js     0x40c674
  40c6b7:	rcr    ecx,0x60
  40c6ba:	pop    edx
  40c6bb:	mov    eax,DWORD PTR ds:0xee005f14
  40c6c1:	repz cld 
  40c6c3:	out    0x9a,eax
  40c6c5:	jmp    0x40c6b9
  40c6c7:	(bad)  
  40c6c8:	jb     0x40c702
  40c6ca:	push   edi
  40c6cb:	call   0x4674c9
  40c6d0:	loop   0x40c6f2
  40c6d2:	js     0x40c6ef
  40c6d4:	jmp    0x3be0:0xdbeb4c25
  40c6db:	or     eax,0x3785623d
  40c6e0:	jecxz  0x40c695
  40c6e2:	or     al,dh
  40c6e4:	jmp    0x40c6e9
	...
  40c6f1:	add    BYTE PTR [eax],al
  40c6f3:	add    BYTE PTR [eax-0x20],ah
  40c6f6:	add    DWORD PTR [edx-0x55c4c29d],edx
  40c6fc:	xchg   ebp,eax
  40c6fd:	fisttp WORD PTR [edx-0x3e415a56]
  40c703:	in     eax,dx
  40c704:	pusha  
  40c705:	pop    edx
  40c706:	mov    ecx,DWORD PTR [ebp+0x1eb3c7dd]
  40c70c:	call   0xb5c1d389
  40c711:	cmp    esi,0x74c56d66
  40c717:	in     al,0x39
  40c719:	mov    esi,0xf460f9c1
  40c71e:	je     0x40c6fd
  40c720:	mov    eax,0x2500ab86
  40c725:	out    dx,eax
  40c726:	or     eax,eax
  40c728:	out    dx,al
  40c729:	add    al,0x5f
  40c72b:	leave  
  40c72c:	js     0x40c746
  40c72e:	add    bh,bh
  40c730:	out    dx,eax
  40c731:	add    edi,edi
  40c733:	jne    0x40c6cf
  40c735:	fild   QWORD PTR [ecx-0x5]
  40c738:	jne    0x40c729
  40c73a:	mov    eax,DWORD PTR [ebp+0x6a]
  40c73d:	pop    eax
  40c73e:	push   DWORD PTR [ebp-0x5a]
  40c741:	fistp  QWORD PTR [edi]
  40c743:	(bad)  
  40c744:	gs out dx,eax
  40c746:	or     eax,eax
  40c748:	test   DWORD PTR [ebx-0x6],esi
  40c74b:	add    bh,BYTE PTR [edx+0x7]
  40c74e:	push   DWORD PTR [ebp+0x76]
  40c751:	in     eax,dx
  40c752:	jae    0x40c74c
  40c754:	xor    cl,ah
  40c756:	xchg   edx,eax
  40c757:	inc    DWORD PTR [eax]
	...
  40c765:	add    BYTE PTR [eax],al
  40c767:	xor    eax,0xbe0fc001
  40c76c:	int3   
  40c76d:	add    BYTE PTR [eax],al
  40c76f:	cmp    al,BYTE PTR [eax-0xe4e13bd]
  40c775:	jle    0x40c7b6
  40c777:	dec    edx
  40c778:	inc    BYTE PTR [ebx+0x738c9]
  40c77e:	push   edi
  40c77f:	and    al,BYTE PTR [ebx-0x1]
  40c782:	inc    ebp
  40c784:	jle    0x40c7c9
  40c786:	shl    ch,1
  40c788:	(bad)  
  40c789:	shr    BYTE PTR [eax-0x5e],1
  40c78c:	sub    al,0x41
  40c78e:	add    dl,ah
  40c790:	adc    bl,BYTE PTR [ebx+0x0]
  40c793:	or     dl,BYTE PTR [edi-0x1]
  40c796:	jne    0x40c772
  40c798:	popa   
  40c799:	lods   al,BYTE PTR ds:[esi]
  40c79a:	aas    
  40c79b:	cmp    ecx,DWORD PTR [ecx]
  40c79d:	call   0x4a18b9
  40c7a2:	push   eax
  40c7a3:	inc    ebp
  40c7a4:	(bad)  
  40c7a5:	shr    BYTE PTR [eax-0x6],1
  40c7a8:	sub    al,0x41
  40c7aa:	add    BYTE PTR [ebx+0x44],ah
  40c7ad:	or     ebx,DWORD PTR [ebx+0x63]
  40c7b0:	fcomp  QWORD PTR [ecx+ebx*2+0x68]
  40c7b4:	sbb    al,0x70
  40c7b6:	or     al,0x68
  40c7b8:	push   cs
  40c7b9:	jo     0x40c7c3
  40c7bb:	pop    eax
  40c7bc:	and    eax,0xde268509
  40c7c1:	add    al,BYTE PTR [eax]
  40c7c3:	push   0x9c096f35
  40c7c8:	test   eax,0xae
	...
  40c7d9:	add    BYTE PTR [ebx-0x24],ah
  40c7dc:	add    ch,bl
  40c7de:	pop    esp
  40c7df:	sub    edi,DWORD PTR [edi]
  40c7e1:	mov    ah,0x63
  40c7e3:	fadd   QWORD PTR [edx]
  40c7e5:	add    BYTE PTR [edi-0x51],dh
  40c7e8:	ret    0x6cb8
  40c7eb:	sti    
  40c7ec:	idiv   esi
  40c7ee:	jno    0x40c822
  40c7f0:	cmp    al,0x7
  40c7f2:	(bad)  
  40c7f3:	fdivr  QWORD PTR [edi+0x2dc4b44]
  40c7f9:	add    BYTE PTR [ebx+0x5c],ah
  40c7fc:	cmp    BYTE PTR [eax],al
  40c7fe:	push   esp
  40c7ff:	push   0xdc63024c
  40c804:	dec    edi
  40c805:	call   0xff387a1e
  40c80a:	fisub  DWORD PTR [eax]
  40c80c:	enter  0xa682,0xc4
  40c810:	add    dh,BYTE PTR [ebp+0x42]
  40c813:	adc    al,0xac
  40c815:	sub    esp,DWORD PTR [edx+0x1f74f7dc]
  40c81b:	test   BYTE PTR [ecx+0xbdc6359],ch
  40c821:	shr    BYTE PTR [ecx+eiz*2+0x6],0x2
  40c826:	arpl   sp,bx
  40c828:	mov    edi,0x2dcfb44
  40c82d:	add    BYTE PTR [ebx-0x7b],ah
  40c830:	add    DWORD PTR [edx],eax
  40c832:	arpl   WORD PTR ds:0xdd5784e9,ax
  40c838:	out    0x6e,eax
  40c83a:	pop    esp
  40c83b:	jl     0x40c810
  40c83d:	fild   WORD PTR [eax]
	...
  40c84b:	add    BYTE PTR [eax],al
  40c84d:	popf   
  40c84e:	inc    edi
  40c84f:	inc    ecx
  40c850:	add    eax,0xeae90563
  40c855:	out    dx,al
  40c856:	add    ebp,ecx
  40c858:	add    esp,eax
  40c85a:	outs   dx,DWORD PTR ds:[esi]
  40c85b:	inc    ecx
  40c85c:	add    eax,0x7660022e
  40c861:	or     ecx,0xffffffab
  40c864:	jmp    0x40c8c7
  40c866:	add    eax,0xa37a03e9
  40c86b:	out    0x3,eax
  40c86d:	arpl   WORD PTR [esi+0x7861eb8b],ax
  40c873:	test   BYTE PTR [edx+0x3e25d0f7],0x7b
  40c87a:	or     cl,ch
  40c87c:	add    esp,DWORD PTR [ebx-0x24]
  40c87f:	pop    esp
  40c880:	add    ah,BYTE PTR [ebx+0x5]
  40c883:	push   0x79
  40c885:	dec    ebx
  40c886:	or     dl,BYTE PTR [edi+eax*1-0x26]
  40c88a:	jb     0x40c83d
  40c88c:	mov    edi,0x3e3dd9f
  40c891:	arpl   WORD PTR ds:0x5626fd0,ax
  40c897:	jmp    0xec1e781e
  40c89c:	push   es
  40c89d:	fisub  WORD PTR [ebp-0x18]
  40c8a0:	add    esp,DWORD PTR [ebx+0x7e]
  40c8a3:	and    edx,eax
  40c8a5:	loope  0x40c919
  40c8a7:	push   ebp
  40c8a8:	add    al,0x97
  40c8aa:	(bad)  
  40c8ab:	lods   eax,DWORD PTR ds:[esi]
  40c8ac:	inc    ecx
  40c8ad:	sti    
  40c8ae:	add    ebp,ecx
  40c8b0:	add    eax,DWORD PTR [eax]
	...
  40c8be:	add    BYTE PTR [eax],al
  40c8c0:	arpl   sp,bx
  40c8c2:	in     eax,dx
  40c8c3:	mov    esi,0x3e6dd9f
  40c8c8:	arpl   WORD PTR ds:0xc5a2ae00,ax
  40c8ce:	(bad)  
  40c8cf:	call   0xad07ce34
  40c8d4:	test   al,0xf0
  40c8d6:	(bad)  
  40c8d7:	jmp    0x2d85913c
  40c8dc:	pop    edi
  40c8dd:	add    eax,0x49fde900
  40c8e2:	mov    esp,0x560e9
  40c8e7:	and    ch,BYTE PTR es:[ebp+0x560e8ff]
  40c8ee:	push   DWORD PTR [esp+edi*4-0x73d8ed18]
  40c8f5:	out    dx,eax
  40c8f6:	mov    BYTE PTR [eax+eiz*4+0x773574ef],ah
  40c8fd:	or     dh,bh
  40c8ff:	push   cs
  40c900:	je     0x40c97f
  40c902:	inc    esp
  40c903:	xor    DWORD PTR [ecx+edi*2-0x2c],ebp
  40c907:	adc    DWORD PTR [edx-0xf],ebp
  40c90a:	(bad)  
  40c90b:	not    bh
  40c90d:	dec    ecx
  40c90e:	les    ebp,FWORD PTR [edx-0x66]
  40c911:	xor    DWORD PTR [edi],edi
  40c913:	sub    BYTE PTR [edi+0x5],bl
  40c916:	jne    0x40c953
  40c918:	mov    edi,0x5f28401e
  40c91d:	fisttp QWORD PTR [eax+esi*1]
  40c920:	addr16 add eax,0x5150
	...
  40c932:	add    BYTE PTR [esi+0x35e94145],al
  40c938:	jns    0x40c8fa
  40c93a:	sar    ebp,0x4d
  40c93d:	add    cl,ch
  40c93f:	imul   eax,ebp,0x35870173
  40c945:	inc    eax
  40c946:	sub    BYTE PTR [edi-0x23],ah
  40c949:	lock xor DWORD PTR [edi+0x5],ebx
  40c94d:	push   eax
  40c94e:	add    DWORD PTR [edi],esi
  40c950:	inc    ebp
  40c951:	inc    ecx
  40c952:	add    BYTE PTR [edx],cl
  40c954:	div    DWORD PTR [ebx-0x40]
  40c957:	rcl    BYTE PTR [edx-0x505ffa8],cl
  40c95d:	mov    edi,0x385c1874
  40c962:	inc    eax
  40c963:	or     eax,DWORD PTR [eax+ebp*8]
  40c966:	aad    0xa2
  40c968:	add    eax,DWORD PTR [eax]
  40c96a:	push   eax
  40c96b:	mov    ds:0xca41402b,al
  40c970:	div    BYTE PTR [ebx-0x40]
  40c973:	adc    bl,BYTE PTR [edi+0x5a]
  40c976:	add    BYTE PTR [edx-0x497e926],bh
  40c97c:	inc    ebx
  40c97d:	inc    ecx
  40c97e:	add    BYTE PTR [edx],ah
  40c980:	stos   DWORD PTR es:[edi],eax
  40c981:	push   esi
  40c982:	add    BYTE PTR [edx-0x45be97ad],cl
  40c988:	dec    eax
  40c989:	add    bh,bh
  40c98b:	out    0xc3,eax
  40c98d:	out    0x5d,al
  40c98f:	mov    al,0x3
  40c991:	add    BYTE PTR [ebx],cl
  40c993:	dec    edx
  40c994:	jne    0x40c9f8
  40c996:	inc    DWORD PTR [eax]
	...
  40c9a4:	add    BYTE PTR [eax],al
  40c9a6:	idiv   DWORD PTR [ebx+0x3d2a1e6]
  40c9ac:	add    BYTE PTR [eax+0x4d],dl
  40c9af:	pop    edi
  40c9b0:	enter  0x6ce8,0xeb
  40c9b4:	std    
  40c9b5:	call   ebx
  40c9b7:	cs mov esp,0xe6c5a7ff
  40c9bd:	lea    esi,[edx+0x9]
  40c9c0:	add    BYTE PTR [eax+0x1d],dl
  40c9c3:	pop    edi
  40c9c4:	(bad)  
  40c9c5:	call   0x3eb70a
  40c9ca:	ret    
  40c9cb:	cs mov eax,0xfec94f83
  40c9d1:	jae    0x40ca09
  40c9d3:	xchg   BYTE PTR [ebx-0x48],bh
  40c9d6:	cli    
  40c9d7:	pop    esi
  40c9d8:	cs push 0xef02dc63
  40c9de:	mov    ebp,0xb086e7f
  40c9e3:	call   0xc06f:0x6fecfe80
  40c9ea:	in     al,0xf1
  40c9ec:	or     ch,al
  40c9ee:	daa    
  40c9ef:	push   0xd1d4fef5
  40c9f4:	mov    dh,0xfe
  40c9f6:	push   esi
  40c9f7:	hlt    
  40c9f8:	jmp    0x36fe:0xf557df38
  40c9ff:	xchg   esp,eax
  40ca00:	hlt    
  40ca01:	je     0x40ca6e
  40ca03:	push   esp
  40ca04:	test   BYTE PTR es:[edi+ebp*1+0x74f5],ch
	...
  40ca18:	add    BYTE PTR [ebx-0x6378c6bc],ah
  40ca1e:	pop    ds
  40ca1f:	cmc    
  40ca20:	je     0x40c9cd
  40ca22:	adc    al,0x31
  40ca24:	xchg   DWORD PTR [edi+ecx*1+0x49f74f5],ecx
  40ca2b:	sub    DWORD PTR [edi+0x74f4ff7c],eax
  40ca31:	mov    bh,0x14
  40ca33:	and    DWORD PTR [edi+0x74f3ef6c],eax
  40ca39:	stos   DWORD PTR es:[edi],eax
  40ca3a:	add    al,0x19
  40ca3c:	xchg   DWORD PTR [edi+ebx*8-0x19],ebx
  40ca40:	or     al,0xe0
  40ca42:	push   0xe7d605ec
  40ca47:	mov    ebx,0x2da3b44
  40ca4c:	add    BYTE PTR [ebx+0x5b],ah
  40ca4f:	jbe    0x40ca39
  40ca51:	arpl   WORD PTR [eax],si
  40ca53:	xor    al,0x68
  40ca55:	sti    
  40ca56:	inc    DWORD PTR [edx+0x0]
  40ca59:	and    al,0x31
  40ca5b:	enter  0xd4e7,0x13
  40ca5f:	add    al,0x0
  40ca61:	push   0x646ea905
  40ca66:	(bad)  
  40ca67:	and    ebp,esp
  40ca69:	arpl   WORD PTR ds:0x288b03e9,ax
  40ca6f:	sub    DWORD PTR [ebx+0x63],eax
  40ca72:	out    dx,al
  40ca73:	sti    
  40ca74:	mov    DWORD PTR [esi+ecx*4],0xfa630420
  40ca7b:	test   al,0x6e
	...
  40ca89:	add    BYTE PTR [eax],al
  40ca8b:	add    BYTE PTR [esi+eax*8+0x23],ah
  40ca8f:	in     al,dx
  40ca90:	bound  eax,QWORD PTR ds:0x77cc03e9
  40ca96:	sub    eax,0x558696eb
  40ca9b:	hlt    
  40ca9c:	mov    eax,0xb5ba2931
  40caa1:	in     eax,dx
  40caa2:	inc    ebp
  40caa3:	hlt    
  40caa4:	mov    dl,0x9e
  40caa6:	add    ch,bh
  40caa8:	push   ebp
  40caa9:	mov    BYTE PTR [esi+esi*8+0x6e2ded9d],al
  40cab0:	mov    bl,0xdc
  40cab2:	pop    esp
  40cab3:	jge    0x40ca42
  40cab5:	in     eax,dx
  40cab6:	sbb    eax,0x44dc776e
  40cabb:	jge    0x40cb3a
  40cabd:	in     eax,dx
  40cabe:	pop    ebx
  40cabf:	ds jae 0x40cb16
  40cac2:	adc    ecx,edx
  40cac4:	fsubr  st,st(5)
  40cac6:	std    
  40cac7:	jmp    0xbebd:0xf3f5ec55
  40cace:	sub    dl,BYTE PTR [ebx]
  40cad0:	arpl   WORD PTR [edx+0x72],dx
  40cad3:	loopne 0x40cab8
  40cad5:	rcl    DWORD PTR [edx+esi*8-0x765212bb],0xf4
  40cadd:	jmp    0x40caac
  40cadf:	repz xor al,0xed
  40cae2:	call   0xd583a2ea
  40cae7:	(bad)  
  40cae8:	in     al,0x71
  40caea:	add    ah,ch
  40caec:	loopne 0x40cb22
  40caee:	add    BYTE PTR [eax+eax*1],dh
	...
  40cafd:	add    BYTE PTR [eax],al
  40caff:	push   0xffffffde
  40cb01:	hlt    
  40cb02:	call   0x153fd067
  40cb07:	imul   ebx,ebp,0x5d
  40cb0a:	js     0x40cafc
  40cb0c:	jmp    0x40cb18
  40cb0e:	test   eax,0x5467fc7a
  40cb13:	inc    ebx
  40cb14:	inc    esi
  40cb15:	add    BYTE PTR [esi+0x6a],bh
  40cb18:	adc    eax,ebp
  40cb1a:	jb     0x40cb7a
  40cb1c:	jmp    0x40cb1c
  40cb1e:	and    BYTE PTR [edx+0x5d],0xb2
  40cb22:	adc    eax,0xd4ff0526
  40cb27:	ins    BYTE PTR es:[edi],dx
  40cb28:	fucomp st(3)
  40cb2a:	pusha  
  40cb2b:	mov    al,0xeb
  40cb2d:	mov    BYTE PTR [edi+eax*1-0x15],ah
  40cb31:	inc    BYTE PTR [esi+0xf]
  40cb34:	sub    eax,DWORD PTR [ecx]
  40cb36:	jmp    0x2bc5459b
  40cb3b:	xchg   ecx,eax
  40cb3c:	jmp    0x40cb3c
  40cb3e:	cdq    
  40cb3f:	mov    eax,0x90268668
  40cb44:	jns    0x40caca
  40cb46:	sub    edx,DWORD PTR [ecx+0x71b9feeb]
  40cb4c:	mov    cl,0xb7
  40cb4e:	pshufw mm5,mm3,0xe7
  40cb52:	dec    ecx
  40cb53:	or     BYTE PTR ds:0xb0da7000,al
  40cb59:	std    
  40cb5a:	not    BYTE PTR [ecx+0x2c]
  40cb5d:	pcmpgtw mm7,mm0
  40cb60:	add    al,0x0
  40cb62:	jmp    0x40cb67
	...
  40cb6f:	add    BYTE PTR [eax],al
  40cb71:	add    bl,ah
  40cb73:	nop
  40cb74:	rcr    edi,0x51
  40cb77:	jmp    0x40cb6f
  40cb79:	jmp    0x40cbcb
  40cb7b:	add    eax,0x8161e900
  40cb80:	add    BYTE PTR [eax],0x3a
  40cb83:	or     BYTE PTR [eax],al
  40cb85:	lea    edi,[eax+0x25]
  40cb88:	push   eax
  40cb89:	push   0x410be2
  40cb8e:	and    bl,BYTE PTR [ecx+0x57]
  40cb91:	add    dl,bh
  40cb93:	jmp    0x147:0xc8ff75be
  40cb9a:	or     cl,BYTE PTR [eax]
  40cb9c:	lea    edx,[ebp-0x20a38]
  40cba2:	ja     0x40cbe6
  40cba4:	sub    al,0x50
  40cba6:	push   edx
  40cba7:	mov    ebp,DWORD PTR [edx]
  40cba9:	inc    ecx
  40cbaa:	retf   0x5acf
  40cbad:	push   edi
  40cbae:	retf   0xb07
  40cbb1:	shr    BYTE PTR [edi-0x44d31704],0x7
  40cbb8:	add    bh,bh
  40cbba:	lahf   
  40cbbb:	adc    ebp,eax
  40cbbd:	mov    edx,0xbfdf73a
  40cbc2:	jp     0x40cc31
  40cbc4:	punpckhbw mm4,QWORD PTR [esi]
  40cbc7:	adc    BYTE PTR [ecx+0x0],al
  40cbca:	push   ebp
  40cbcb:	ins    DWORD PTR es:[edi],dx
  40cbcc:	adc    al,0xe8
  40cbce:	in     eax,dx
  40cbcf:	push   0xea71fffe
  40cbd4:	push   0x0
	...
  40cbe5:	gs ins DWORD PTR es:[edi],dx
  40cbe7:	adc    al,0xe8
  40cbe9:	shr    DWORD PTR [eax-0x2],0xff
  40cbed:	pop    ss
  40cbee:	(bad)  
  40cbef:	sar    dh,0x65
  40cbf2:	test   DWORD PTR [ebx+0x50519652],0xfe69c5e8
  40cbfc:	(bad)  
  40cbfd:	cli    
  40cbfe:	push   esi
  40cbff:	push   DWORD PTR [ebp+0x4a]
  40cc02:	div    BYTE PTR [ebx+0xc]
  40cc05:	and    eax,0x63e80873
  40cc0a:	iret   
  40cc0b:	icebp  
  40cc0c:	(bad)  
  40cc0d:	xor    al,0xc5
  40cc0f:	mov    BYTE PTR [esp+ebp*1+0x63dcdac4],al
  40cc16:	fadd   QWORD PTR [edx]
  40cc18:	lea    esp,[ecx-0x307b8500]
  40cc1e:	call   0x4131:0xf7bfef0
  40cc25:	arpl   WORD PTR [ebx-0x6c024c4a],cx
  40cc2b:	lock out 0x5e,eax
  40cc2e:	xor    al,0x4
  40cc30:	add    BYTE PTR [eax-0x64],bl
  40cc33:	ja     0x40cc63
  40cc35:	jnp    0x40cc5f
  40cc37:	sbb    al,0x41
  40cc39:	arpl   WORD PTR [ebx+0x77],si
  40cc3c:	adc    al,0xcb
  40cc3e:	jae    0x40ccbc
  40cc40:	dec    ah
  40cc42:	arpl   WORD PTR [edi-0xeb43a4d],si
  40cc48:	dec    edi
	...
  40cc55:	add    BYTE PTR [eax],al
  40cc57:	add    bl,cl
  40cc59:	adc    edi,DWORD PTR [ebx-0x2]
  40cc5c:	mov    ah,0xac
  40cc5e:	out    dx,eax
  40cc5f:	je     0x40ccb4
  40cc61:	inc    ebx
  40cc62:	ja     0x40cc70
  40cc64:	adc    ebp,DWORD PTR [ebx]
  40cc66:	ja     0x40cc70
  40cc68:	mov    esi,DWORD PTR [ebx]
  40cc6a:	in     al,dx
  40cc6b:	(bad)  
  40cc6c:	xchg   esp,eax
  40cc6d:	inc    esp
  40cc6e:	cmp    DWORD PTR [ebp-0x4b0edc74],eax
  40cc74:	iret   
  40cc75:	or     dh,cl
  40cc77:	dec    BYTE PTR [ebx+0x630058cc]
  40cc7d:	pop    edi
  40cc7e:	in     al,dx
  40cc7f:	add    ecx,esi
  40cc81:	(bad)  
  40cc82:	jnp    0x40cc18
  40cc84:	scas   eax,DWORD PTR es:[edi]
  40cc85:	jmp    0xe985:0xc60feef
  40cc8c:	popa   
  40cc8d:	add    BYTE PTR [ecx+0x5a057d39],0x77
  40cc94:	popa   
  40cc95:	fisubr WORD PTR [eax]
  40cc97:	pop    esp
  40cc98:	loope  0x40ccc3
  40cc9a:	sub    BYTE PTR [esp+esi*1],al
  40cc9d:	mov    al,0x94
  40cc9f:	icebp  
  40cca0:	sub    eax,0x8d90d0ea
  40cca5:	add    eax,0x7b8b53e9
  40ccaa:	cmc    
  40ccab:	inc    edx
  40ccac:	arpl   dx,bp
  40ccae:	jae    0x40cc67
  40ccb0:	push   cs
  40ccb1:	jmp    0x3e9:0x51d6dba5
  40ccb8:	xchg   ebx,eax
  40ccb9:	pop    ebp
  40ccba:	jb     0x40ccec
	...
  40ccc8:	add    BYTE PTR [eax],al
  40ccca:	add    BYTE PTR [edx-0x4f4971fb],ah
  40ccd0:	jmp    0x416:0x67fcf085
  40ccd7:	arpl   WORD PTR [edi+0x10],cx
  40ccda:	std    
  40ccdb:	adc    al,0x70
  40ccdd:	loope  0x40ccdb
  40ccdf:	mov    dl,0x6f
  40cce1:	in     eax,dx
  40cce2:	cld    
  40cce3:	fwait
  40cce4:	jo     0x40ccf5
  40cce6:	pop    esp
  40cce7:	call   FWORD PTR [eax+ebp*4]
  40ccea:	add    esi,DWORD PTR [edi+ebp*2+0x7d47dbf5]
  40ccf1:	inc    ebp
  40ccf2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccf4:	scas   eax,DWORD PTR es:[edi]
  40ccf5:	je     0x40cce8
  40ccf7:	popf   
  40ccf8:	jmp    0x7d08a895
  40ccfd:	sub    eax,0x9bea1cf0
  40cd02:	adc    eax,DWORD PTR [edi+ebp*2+0x6f7c53ed]
  40cd09:	loope  0x40cce6
  40cd0b:	mov    al,ds:0x84f00dee
  40cd10:	lahf   
  40cd11:	ins    BYTE PTR es:[edi],dx
  40cd12:	lock gs ja 0x40cd79
  40cd16:	lds    ebx,FWORD PTR [esi-0x17]
  40cd19:	push   ebp
  40cd1b:	mov    cl,0xe8
  40cd1d:	mov    ah,0x2d
  40cd1f:	push   edx
  40cd20:	call   0x4f999f23
  40cd25:	add    cl,ch
  40cd27:	jmp    0x40ccd1
  40cd29:	push   cs
  40cd2a:	ins    BYTE PTR es:[edi],dx
  40cd2b:	mov    ebx,0xcefee7
	...
  40cd3c:	add    BYTE PTR [eax],al
  40cd3e:	cmp    al,0xb2
  40cd40:	mov    ebx,0xe7e834c7
  40cd45:	out    dx,eax
  40cd46:	mov    dh,0x5
  40cd48:	add    BYTE PTR [esi-0x51024f26],dh
  40cd4e:	cld    
  40cd4f:	loopne 0x40cdc5
  40cd51:	ins    DWORD PTR es:[edi],dx
  40cd52:	hlt    
  40cd53:	out    0xc8,eax
  40cd55:	stos   DWORD PTR es:[edi],eax
  40cd56:	push   edi
  40cd57:	add    eax,0xe8036255
  40cd5c:	je     0x40cd3b
  40cd5e:	std    
  40cd5f:	jno    0x40cd71
  40cd61:	xchg   BYTE PTR [edx-0x7],ch
  40cd64:	(bad)  
  40cd65:	hlt    
  40cd66:	fsub   st,st(0)
  40cd68:	ret    
  40cd69:	je     0x40cd2f
  40cd6b:	out    0xc8,eax
  40cd6d:	stos   DWORD PTR es:[edi],eax
  40cd6e:	arpl   WORD PTR ds:0x83c37255,ax
  40cd74:	ret    
  40cd75:	pop    ecx
  40cd76:	adc    al,0xe8
  40cd78:	je     0x40cd5f
  40cd7a:	cwde   
  40cd7b:	bound  ecx,QWORD PTR [ecx-0x400443b2]
  40cd81:	mov    esp,0x2bc9485b
  40cd86:	arpl   WORD PTR ds:0xdd70bcff,ax
  40cd8c:	push   esp
  40cd8d:	pusha  
  40cd8e:	jl     0x40cd77
  40cd90:	or     ch,BYTE PTR [ecx]
  40cd92:	or     al,BYTE PTR [edx]
  40cd94:	pop    edi
  40cd95:	xor    BYTE PTR [ecx-0x5ea0004],ah
  40cd9b:	clc    
  40cd9c:	out    0xf0,eax
  40cd9e:	in     eax,dx
  40cd9f:	out    0xfe,al
	...
  40cdb1:	jno    0x40cd77
  40cdb3:	jae    0x40cdc4
  40cdb5:	repnz xchg edi,eax
  40cdb7:	es inc ecx
  40cdb9:	dec    edx
  40cdba:	xlat   BYTE PTR ds:[ebx]
  40cdbb:	jae    0x40cdc9
  40cdbd:	bound  ebp,QWORD PTR [edi-0x34c2007b]
  40cdc3:	or     BYTE PTR [edx+0x4a],ch
  40cdc6:	xlat   BYTE PTR ds:[ebx]
  40cdc7:	jae    0x40cdd5
  40cdc9:	and    cl,BYTE PTR [esi+0x691dff85]
  40cdcf:	inc    esp
  40cdd0:	hlt    
  40cdd1:	xchg   edx,eax
  40cdd2:	cmp    eax,0xd70a413f
  40cdd7:	jae    0x40cdcd
  40cdd9:	and    bh,BYTE PTR [esi-0x7b]
  40cddc:	(bad)  
  40cddd:	mov    ebp,0x72f84468
  40cde2:	retf   
  40cde3:	sti    
  40cde4:	add    BYTE PTR [edx],cl
  40cde6:	int3   
  40cde7:	add    eax,DWORD PTR [ebp+ecx*8-0x21ba782a]
  40cdee:	dec    ebx
  40cdef:	add    BYTE PTR [eax],dl
  40cdf1:	cli    
  40cdf2:	add    ebp,eax
  40cdf4:	clc    
  40cdf5:	dec    ecx
  40cdf6:	xlat   BYTE PTR ds:[ebx]
  40cdf7:	std    
  40cdf8:	mov    DWORD PTR [edi+0x5275fdf1],eax
  40cdfe:	int3   
  40cdff:	test   al,0x88
  40ce01:	cmp    eax,0xcdc009d7
  40ce06:	jg     0x40cdc3
  40ce08:	add    dl,cl
  40ce0a:	add    edi,edi
  40ce0c:	jne    0x40ce20
  40ce0e:	dec    esp
  40ce0f:	call   0xff448911
  40ce14:	jne    0x40ce16
	...
  40ce22:	add    BYTE PTR [eax],al
  40ce24:	pop    esi
  40ce25:	int3   
  40ce26:	adc    BYTE PTR [ebp-0x76],0x3
  40ce2a:	cmp    eax,0x78
  40ce2d:	out    0x84,al
  40ce2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce30:	jp     0x40ce35
  40ce32:	add    BYTE PTR [ebx+0x3f7ed7df],cl
  40ce38:	arpl   si,bx
  40ce3a:	std    
  40ce3b:	or     ebx,0xffffffdd
  40ce3e:	add    al,BYTE PTR [eax]
  40ce40:	sti    
  40ce41:	mov    WORD PTR ds:0xda8f6341,gs
  40ce47:	cmp    DWORD PTR [ebp+0x230b02dc],ebp
  40ce4d:	jno    0x40cec5
  40ce4f:	dec    esi
  40ce51:	in     al,0x5b
  40ce53:	jmp    FWORD PTR [esp+ebx*8+0x2]
  40ce57:	jmp    FWORD PTR [esi+0x7bbe5bcc]
  40ce5d:	sbb    eax,0xffbf6804
  40ce62:	inc    edx
  40ce63:	add    BYTE PTR [esp+edx*8-0x239caace],dh
  40ce6a:	idiv   DWORD PTR [edi+0x74ed1497]
  40ce70:	or     edx,DWORD PTR [ebx]
  40ce72:	add    ebp,DWORD PTR [eax-0x66]
  40ce75:	mov    DWORD PTR [ecx+0x0],0x5536848c
  40ce7c:	arpl   sp,bx
  40ce7e:	jg     0x40ce77
  40ce80:	(bad)  
  40ce81:	jmp    0x6c97cdbb
  40ce86:	in     eax,dx
  40ce87:	je     0x40ce89
	...
  40ce95:	add    BYTE PTR [eax],al
  40ce97:	iret   
  40ce98:	test   cl,ch
  40ce9a:	test   esp,ecx
  40ce9c:	push   edi
  40ce9d:	push   esp
  40ce9e:	mov    esi,DWORD PTR [ebx+0x797ffb53]
  40cea4:	div    DWORD PTR [esi+0x3]
  40cea7:	popf   
  40cea8:	fimul  DWORD PTR [esi+0x42]
  40ceab:	pop    eax
  40ceac:	sub    bh,BYTE PTR [eax+0x5]
  40ceaf:	jecxz  0x40ceb3
  40ceb1:	add    al,0x75
  40ceb3:	lea    esp,[edi]
  40ceb5:	ja     0x40cec7
  40ceb7:	xor    ebp,DWORD PTR [edi]
  40ceb9:	ja     0x40cec3
  40cebb:	jnp    0x40cedc
  40cebd:	out    dx,al
  40cebe:	inc    BYTE PTR [ebp+eax*1-0x191fceef]
  40cec5:	sbb    eax,0x9be666d9
  40ceca:	adc    ebp,DWORD PTR [eax+esi*2+0x19]
  40cece:	in     eax,dx
  40cecf:	out    dx,eax
  40ced0:	cld    
  40ced1:	adc    BYTE PTR [edx-0x100219a2],dh
  40ced7:	xchg   ecx,eax
  40ced8:	lds    ebp,FWORD PTR [edi]
  40ceda:	in     eax,dx
  40cedb:	dec    ebp
  40cedc:	out    0xed,al
  40cede:	icebp  
  40cedf:	imul   BYTE PTR [esi+ebp*8]
  40cee2:	cld    
  40cee3:	out    0x5c,eax
  40cee5:	fsubp  st(4),st
  40cee7:	xor    eax,0x44f85be6
  40ceec:	cld    
  40ceed:	imul   ebp,esp,0xf43be625
  40cef3:	add    al,0x4
  40cef5:	push   0xffffffec
  40cef7:	adc    eax,0xec3be6
	...
  40cf08:	add    BYTE PTR [eax],al
  40cf0a:	add    al,0xec
  40cf0c:	push   0xffffffec
  40cf0e:	add    eax,0x4f01be6
  40cf13:	hlt    
  40cf14:	push   0xffffffec
  40cf16:	cmc    
  40cf17:	in     eax,0x1b
  40cf19:	adc    al,0xec
  40cf1b:	outs   dx,DWORD PTR ds:[esi]
  40cf1c:	fucomp st(4)
  40cf1e:	outs   dx,DWORD PTR ds:[esi]
  40cf1f:	std    
  40cf20:	nop
  40cf21:	jno    0x40cf00
  40cf23:	in     eax,0x7d
  40cf25:	dec    esp
  40cf26:	stos   BYTE PTR es:[edi],al
  40cf27:	ret    0x3e4
  40cf2a:	ss jp  0x40cfa9
  40cf2d:	and    BYTE PTR [eax+0x577665dc],0xe6
  40cf34:	rcl    DWORD PTR [ebx],cl
  40cf36:	retf   
  40cf37:	pop    ebx
  40cf38:	mov    esp,0x28fa6303
  40cf3d:	ja     0x40cf4b
  40cf3f:	pop    ebx
  40cf40:	jmp    0xa866d9a0
  40cf45:	add    edx,DWORD PTR [edi+ebp*2+0x707fd900]
  40cf4c:	or     al,0x41
  40cf4e:	mov    DWORD PTR [eax-0x5a84d902],0x5510a873
  40cf58:	call   0xff27bbf9
  40cf5d:	loop   0x40ceff
  40cf5f:	jno    0x40cf92
  40cf61:	jo     0x40cf08
  40cf63:	in     eax,dx
  40cf64:	imul   esp,ebx,0xf685f238
  40cf6a:	cmp    BYTE PTR [eax],dl
  40cf6c:	shl    BYTE PTR [ebp+0x0],0x0
	...
  40cf7c:	add    BYTE PTR [ebx-0x1c],bl
  40cf7f:	je     0x40cf82
  40cf81:	xchg   edi,eax
  40cf82:	in     eax,dx
  40cf83:	and    DWORD PTR [edi+0x48],0xffffffe4
  40cf87:	dec    edi
  40cf88:	(bad)  
  40cf89:	mov    dl,0xed
  40cf8b:	dec    edi
  40cf8c:	into   
  40cf8d:	mov    dl,0xd
  40cf8f:	call   0xff24d8a6
  40cf94:	ror    DWORD PTR [eax-0x7490179],1
  40cf9a:	pop    ecx
  40cf9b:	call   0xfec86061
  40cfa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfa1:	pop    ds
  40cfa2:	push   edi
  40cfa3:	sbb    BYTE PTR [esi-0x1eff92f8],0x60
  40cfaa:	add    eax,0xe3dd0ee8
  40cfaf:	(bad)  
  40cfb0:	jo     0x40cfd4
  40cfb2:	fisttp QWORD PTR [esp-0x300ab35]
  40cfb9:	jo     0x40cf9f
  40cfbb:	je     0x40cf9a
  40cfbd:	test   al,0x9a
  40cfbf:	push   ebx
  40cfc0:	jmp    0xd500e025
  40cfc5:	xor    ah,cl
  40cfc7:	inc    esp
  40cfc8:	pop    ecx
  40cfc9:	addr16 add eax,0x49a1e900
  40cfcf:	hlt    
  40cfd0:	add    BYTE PTR ds:0xb0000008,ah
  40cfd6:	or     BYTE PTR [edx+0x0],ch
  40cfd9:	mov    al,ds:0x27006a08
  40cfde:	inc    esi
  40cfdf:	hlt    
  40cfe0:	push   eax
	...
  40cfed:	add    BYTE PTR [eax],al
  40cfef:	add    BYTE PTR [ebp+0x56],al
  40cff2:	clc    
  40cff3:	dec    edi
  40cff5:	fdivr  st,st(5)
  40cff7:	jne    0x40d04f
  40cff9:	ror    DWORD PTR [esi+0xb087a54],0xc0
  40d000:	fimul  WORD PTR [edx]
  40d002:	jmp    0x40d03e
  40d004:	repnz stos DWORD PTR es:[edi],eax
  40d006:	es inc ecx
  40d008:	cmp    ch,bh
  40d00a:	jae    0x40d01c
  40d00c:	bound  edx,QWORD PTR [edi-0x10ba007d]
  40d012:	jae    0x40d00c
  40d014:	jp     0x40cfd7
  40d016:	inc    DWORD PTR [ebp+0x4587ef15]
  40d01c:	out    0xee,al
  40d01e:	jae    0x40d038
  40d020:	and    eax,0x4fff1455
  40d025:	mov    ebp,0xef0675fd
  40d02a:	jae    0x40d034
  40d02c:	and    dl,BYTE PTR [ecx]
  40d02e:	(bad)  
  40d02f:	inc    ebp
  40d031:	out    dx,al
  40d032:	jae    0x40d020
  40d034:	sar    BYTE PTR [esi-0x112a0081],cl
  40d03a:	inc    ebx
  40d03b:	lock loope 0x40cfcc
  40d03e:	std    
  40d03f:	jne    0x40d027
  40d041:	mov    edi,0x7ca543a
  40d046:	push   DWORD PTR [ebp+0x52]
  40d049:	rcr    al,0x81
  40d04c:	xor    eax,0xbec2c7ef
  40d051:	pop    es
  40d052:	push   ebp
  40d053:	mov    eax,DWORD PTR [eax]
	...
  40d061:	add    BYTE PTR [eax],al
  40d063:	es mov edx,eax
  40d066:	hlt    
  40d067:	arpl   WORD PTR [edx+ebp*8],di
  40d06a:	(bad)  
  40d06b:	cmp    esi,ebp
  40d06d:	pop    esp
  40d06e:	and    al,0x9c
  40d070:	mov    al,ds:0xa39ae7fa
  40d075:	jmp    0xe6f1ab78
  40d07a:	(bad)  
  40d07b:	pop    esi
  40d07c:	repnz sub DWORD PTR [ecx+0x63],eax
  40d080:	out    dx,al
  40d081:	add    al,BYTE PTR [eax]
  40d083:	arpl   WORD PTR [ecx-0x80],si
  40d086:	imul   BYTE PTR [ebp-0x6]
  40d089:	jmp    0x42acbdd
  40d08e:	add    BYTE PTR [ebx-0xc],ah
  40d091:	jne    0x40d0e6
  40d093:	arpl   sp,bp
  40d095:	pop    edx
  40d096:	add    ah,BYTE PTR [ebx+0x496802ad]
  40d09c:	mov    ah,0x43
  40d09e:	add    bl,cl
  40d0a0:	loopne 0x40d0e4
  40d0a2:	inc    ecx
  40d0a3:	arpl   bx,ax
  40d0a5:	cs dec ebx
  40d0a7:	jp     0x40d0d6
  40d0a9:	add    al,0xff
  40d0ab:	scas   al,BYTE PTR es:[edi]
  40d0ac:	in     al,0xda
  40d0ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0af:	sbb    eax,0x6167e8cc
  40d0b4:	sub    al,0x43
  40d0b6:	add    BYTE PTR [ebx-0x6a],bh
  40d0b9:	sub    BYTE PTR [ecx+0x63],al
  40d0bc:	inc    esp
  40d0bd:	adc    BYTE PTR [eax-0x5e],al
  40d0c0:	in     al,dx
  40d0c1:	pop    edx
  40d0c2:	add    ah,BYTE PTR [ebx-0x14]
  40d0c5:	cmp    dh,0x0
	...
  40d0d4:	add    BYTE PTR [eax],al
  40d0d6:	jbe    0x40d0bc
  40d0d8:	fimul  DWORD PTR [ebx-0x73176c1b]
  40d0de:	out    0x63,al
  40d0e0:	jmp    0x3015:0xdbfcd4fe
  40d0e7:	in     al,dx
  40d0e8:	add    bh,bh
  40d0ea:	dec    esi
  40d0eb:	jo     0x40d0d6
  40d0ed:	je     0x40d15a
  40d0ef:	add    eax,0xe236d351
  40d0f4:	pop    ebp
  40d0f5:	mov    ebx,0x4ee909a2
  40d0fa:	fdiv   st,st(1)
  40d0fc:	rcl    BYTE PTR [bx+si+0x45e3],0xe9
  40d102:	or     al,BYTE PTR ds:0x588c1ed3
  40d108:	loope  0x40d0e5
  40d10a:	adc    ah,BYTE PTR [ebx+0x2e]
  40d10d:	jmp    0x5e6619fd
  40d112:	pop    ecx
  40d113:	in     eax,dx
  40d114:	popf   
  40d115:	jle    0x40d184
  40d117:	loop   0x40d0fa
  40d119:	ret    
  40d11a:	lock sub BYTE PTR [ecx-0x16bb5cfb],al
  40d121:	push   ebx
  40d122:	dec    ebx
  40d123:	stc    
  40d124:	arpl   cx,bp
  40d126:	dec    ebp
  40d127:	xor    eax,0xf2730381
  40d12c:	cs pop esp
  40d12e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d12f:	inc    ebp
  40d130:	sub    BYTE PTR [ebx+edx*4],al
  40d133:	loop   0x40d188
  40d135:	cld    
  40d136:	inc    esp
  40d137:	ror    DWORD PTR [ebx+0xe8],0x0
	...
  40d146:	add    BYTE PTR [eax],al
  40d148:	add    BYTE PTR ds:0x1d82e0ed,ah
  40d14e:	loop   0x40d0fd
  40d150:	(bad)  
  40d151:	pop    eax
  40d152:	and    ch,BYTE PTR [eax]
  40d154:	add    al,0x62
  40d156:	add    eax,0x87d603e9
  40d15b:	mov    ch,0xe9
  40d15d:	std    
  40d15e:	loope  0x40d198
  40d160:	pop    esp
  40d161:	pop    edi
  40d162:	add    al,0xe9
  40d164:	add    edi,ebx
  40d166:	lahf   
  40d167:	cmp    al,BYTE PTR [ebx+eiz*2]
  40d16a:	ins    DWORD PTR es:[edi],dx
  40d16b:	jmp    0x40d1b0
  40d16d:	and    al,BYTE PTR ds:0x4495ee11
  40d173:	jmp    0x8648d3
  40d178:	sub    BYTE PTR [edi-0x1e],bl
  40d17b:	xor    al,0x22
  40d17d:	pop    eax
  40d17e:	inc    esp
  40d17f:	add    BYTE PTR [esi+0x45],ah
  40d182:	or     eax,0xe2c55be8
  40d187:	inc    cl
  40d189:	pop    esi
  40d18a:	inc    ebp
  40d18b:	inc    ecx
  40d18c:	jmp    0xa87fb0c9
  40d191:	pusha  
  40d192:	ins    DWORD PTR es:[edi],dx
  40d193:	adc    al,0xa9
  40d195:	and    DWORD PTR ds:0x560eb68,eax
  40d19b:	sub    BYTE PTR [esi],0xd
  40d19e:	or     eax,0xe27d3fe8
  40d1a3:	(bad)  
  40d1a4:	ins    BYTE PTR es:[edi],dx
  40d1a5:	in     eax,dx
  40d1a6:	(bad)  
  40d1a8:	push   ss
  40d1a9:	jnp    0x40d1fc
  40d1ab:	call   0x40d239
	...
  40d1bc:	mov    dh,0x5
  40d1be:	add    BYTE PTR [esi],al
  40d1c0:	vpaddd xmm6,xmm3,XMMWORD PTR [eax+ecx*2-0x17]
  40d1c6:	sbb    dh,BYTE PTR [edi+0x3b]
  40d1c9:	loopne 0x40d193
  40d1cb:	sub    edi,DWORD PTR [ecx+eiz*8]
  40d1ce:	push   ebx
  40d1cf:	jb     0x40d1ec
  40d1d1:	xchg   bl,al
  40d1d3:	aad    0x45
  40d1d5:	loopne 0x40d1d5
  40d1d7:	inc    ebx
  40d1d8:	pop    edi
  40d1d9:	imul   esp,DWORD PTR [esi],0xffffffce
  40d1dc:	xchg   edx,eax
  40d1dd:	or     eax,0xe08a85e8
  40d1e2:	(bad)  
  40d1e3:	jo     0x40d187
  40d1e5:	loope  0x40d1ad
  40d1e7:	in     al,dx
  40d1e8:	cmp    al,0x20
  40d1ea:	inc    ecx
  40d1eb:	jmp    0xe940d750
  40d1f0:	jnp    0x40d17b
  40d1f2:	neg    BYTE PTR [edi+0x14fe004]
  40d1f8:	arpl   WORD PTR [esi],ax
  40d1fa:	add    cl,ch
  40d1fc:	mov    eax,0xca00521a
  40d201:	add    al,0x68
  40d203:	popa   
  40d204:	jp     0x40d250
  40d206:	add    BYTE PTR [eax+0x65],ch
  40d209:	dec    ecx
  40d20a:	inc    ecx
  40d20b:	add    BYTE PTR [edx-0xb],ah
  40d20e:	aas    
  40d20f:	inc    ecx
  40d210:	retf   0x33e7
  40d213:	dec    ebx
  40d214:	push   ebx
  40d215:	dec    edx
  40d216:	add    bh,bh
  40d218:	xchg   esp,ebx
  40d21a:	out    0x6b,al
  40d21c:	das    
  40d21d:	call   0x413b1f
	...
  40d22e:	add    BYTE PTR [ebx-0x4dffbebc],ch
  40d234:	dec    edi
  40d235:	inc    eax
  40d236:	inc    ecx
  40d237:	jp     0x40d275
  40d239:	adc    al,0x40
  40d23b:	retf   
  40d23c:	add    al,0x68
  40d23e:	add    cl,BYTE PTR [edx-0x28007ffc]
  40d244:	fsubr  st(6),st
  40d246:	dec    edi
  40d247:	dec    edi
  40d248:	call   0xf108604a
  40d24d:	cld    
  40d24e:	call   FWORD PTR [ebp+0x39]
  40d251:	call   0x44be2f
  40d256:	inc    edi
  40d258:	call   0xbc83485a
  40d25d:	xchg   edx,eax
  40d25e:	jge    0x40d29d
  40d260:	out    0xc7,eax
  40d262:	ret    0x446
  40d265:	push   ebp
  40d266:	mov    ebx,DWORD PTR [esi]
  40d268:	mov    edx,eax
  40d26a:	hlt    
  40d26b:	sub    al,0xe7
  40d26d:	std    
  40d26e:	push   0xa
  40d270:	ds daa 
  40d272:	call   DWORD PTR [edi-0x1f]
  40d275:	out    0x35,al
  40d277:	dec    edi
  40d278:	call   0xed885c7a
  40d27d:	lds    eax,FWORD PTR ds:0x4126fe
  40d283:	cli    
  40d284:	add    eax,DWORD PTR [eax]
  40d286:	add    BYTE PTR [ebx+0x69],ah
  40d289:	xor    dh,0xdd
  40d28c:	mov    fs,ebp
  40d28e:	dec    edi
  40d28f:	dec    ebx
  40d290:	repnz add eax,DWORD PTR [eax]
	...
  40d29f:	add    BYTE PTR [eax],al
  40d2a1:	add    BYTE PTR [ebx+0x76],ah
  40d2a4:	xchg   ebp,eax
  40d2a5:	push   eax
  40d2a6:	arpl   si,bp
  40d2a8:	pop    edx
  40d2a9:	jnp    0x40d2ce
  40d2ab:	sub    eax,0xae2e6804
  40d2b0:	inc    ebx
  40d2b1:	add    BYTE PTR [ebx],bh
  40d2b3:	fiadd  DWORD PTR [edx+0x41]
  40d2b6:	arpl   WORD PTR [edi],si
  40d2b8:	xor    BYTE PTR [ebx+0x4a],cl
  40d2bb:	lods   eax,DWORD PTR ds:[esi]
  40d2bc:	add    bh,bh
  40d2be:	push   cs
  40d2bf:	(bad)  
  40d2c0:	(bad)  
  40d2c2:	(bad)  
  40d2c3:	push   ds
  40d2c4:	out    0x67,al
  40d2c6:	or     BYTE PTR [esi-0x66f4ffbd],ch
  40d2cc:	inc    edx
  40d2cd:	inc    ecx
  40d2ce:	arpl   WORD PTR [esi+0xe],si
  40d2d1:	inc    eax
  40d2d2:	and    ch,dh
  40d2d4:	pop    edx
  40d2d5:	add    ah,BYTE PTR [ebx-0x12]
  40d2d8:	cmp    dh,0xd6
  40d2db:	in     al,0xda
  40d2dd:	(bad)  
  40d2de:	push   edi
  40d2df:	or     dh,ah
  40d2e1:	mov    esi,fs
  40d2e3:	xlat   BYTE PTR ds:[ebx]
  40d2e4:	jecxz  0x40d2e4
  40d2e6:	inc    esp
  40d2e7:	jge    0x40d2c3
  40d2e9:	push   ecx
  40d2ea:	xchg   edx,eax
  40d2eb:	in     al,dx
  40d2ec:	add    bh,bh
  40d2ee:	scas   al,BYTE PTR es:[edi]
  40d2ef:	call   0xb49c47d8
  40d2f4:	idiv   BYTE PTR [esp-0x48]
  40d2f8:	mov    edx,0x4dec67c1
  40d2fd:	mov    eax,DWORD PTR [edi]
  40d2ff:	outs   dx,BYTE PTR ds:[esi]
  40d300:	shl    bl,0xd
  40d303:	mov    al,ds:0x69e4
	...
  40d314:	add    BYTE PTR [ebx+0x42],ah
  40d317:	sbb    al,0xff
  40d319:	jbe    0x40d2ff
  40d31b:	fisubr DWORD PTR [ebp-0x1a59fa89]
  40d321:	fisttp DWORD PTR [eax-0x63]
  40d324:	mov    ebp,0x42d6215f
  40d329:	arpl   WORD PTR ds:0x906303e9,ax
  40d32f:	imul   ebp,ebp,0xffffffce
  40d332:	fidivr WORD PTR [ebp+0x54]
  40d335:	cmp    ecx,DWORD PTR [ecx]
  40d337:	call   0xc12e363f
  40d33c:	push   edx
  40d33d:	arpl   WORD PTR ds:0x446c90d1,ax
  40d343:	jmp    0xa886aba3
  40d348:	add    ecx,DWORD PTR [ebx]
  40d34a:	stc    
  40d34b:	test   al,0x42
  40d34d:	arpl   si,bx
  40d34f:	sti    
  40d350:	cmp    BYTE PTR [edx],bh
  40d352:	inc    esp
  40d353:	jmp    0x414de33c
  40d358:	inc    edi
  40d359:	jg     0x40d339
  40d35b:	sub    eax,0xa845d05c
  40d360:	add    edi,ebx
  40d362:	mov    DWORD PTR [eax-0x2929cbe],ebp
  40d368:	inc    ebx
  40d369:	mov    ds:0x63018105,al
  40d36e:	add    eax,0xdd7e569
  40d373:	adc    DWORD PTR [ebx+0x47],eax
  40d376:	fdivrp st(5),st
  40d378:	jbe    0x40d37a
	...
  40d386:	add    BYTE PTR [eax],al
  40d388:	out    0xd5,eax
  40d38a:	out    dx,al
  40d38b:	in     al,0x35
  40d38d:	xor    eax,0x59cb8d1
  40d392:	jmp    0xd622837b
  40d397:	outs   dx,BYTE PTR ds:[esi]
  40d398:	imul   ebp,ebp,0x66
  40d39b:	addr16 adc al,0xde
  40d39e:	scas   eax,DWORD PTR es:[edi]
  40d39f:	shl    DWORD PTR [eax+0x5],0x14
  40d3a3:	jns    0x40d39d
  40d3a5:	cmp    edi,0x6c04ac
  40d3ab:	inc    ebx
  40d3ac:	pop    eax
  40d3ad:	fidiv  WORD PTR [ecx+esi*8+0x8]
  40d3b1:	sub    al,0x7c
  40d3b3:	sahf   
  40d3b4:	dec    DWORD PTR [esp+eax*2+0x68053a95]
  40d3bb:	push   ecx
  40d3bc:	and    BYTE PTR [eax+eax*1+0x11],al
  40d3c0:	in     eax,dx
  40d3c1:	sbb    eax,0x18bfe941
  40d3c6:	dec    ebx
  40d3c7:	shl    BYTE PTR [ecx],0x5
  40d3ca:	call   0xff1fb548
  40d3cf:	repnz mov al,ds:0x8b91951
  40d3d5:	add    eax,0x65c64600
  40d3da:	enter  0x21a9,0x5
  40d3de:	push   eax
  40d3df:	inc    esi
  40d3e0:	std    
  40d3e1:	or     al,0xe8
  40d3e3:	outs   dx,BYTE PTR ds:[esi]
  40d3e4:	ret    
  40d3e5:	fdivp  st(6),st
  40d3e7:	inc    ecx
  40d3e8:	retf   
  40d3e9:	pop    edi
  40d3ea:	jmp    FWORD PTR [esi]
	...
  40d3f8:	add    BYTE PTR [eax],al
  40d3fa:	add    BYTE PTR [edx],bl
  40d3fc:	add    eax,0x44206668
  40d401:	add    BYTE PTR [ecx-0x16bee23a],dl
  40d407:	inc    edi
  40d408:	adc    cl,BYTE PTR [ebx-0x40]
  40d40b:	mov    eax,ds:0xe145e805
  40d410:	(bad)  
  40d412:	repnz and BYTE PTR [ecx+0x19],bl
  40d416:	cdq    
  40d417:	cwde   
  40d418:	add    eax,0x64fffe00
  40d41d:	enter  0xa629,0x5
  40d421:	push   eax
  40d422:	fimul  WORD PTR [edx-0x3bcd17f3]
  40d428:	(bad)  
  40d42a:	shr    eax,0x5a
  40d42d:	inc    DWORD PTR [eax]
  40d42f:	and    eax,0xc5fc73e9
  40d434:	ds or  al,ch
  40d437:	mov    al,0x3c
  40d439:	(bad)  
  40d43a:	inc    ebx
  40d43c:	ret    
  40d43d:	add    al,BYTE PTR [eax]
  40d43f:	das    
  40d440:	mov    edx,gs
  40d442:	cmp    DWORD PTR [esi+0x605754e5],0x1
  40d449:	push   0x2a
  40d44b:	in     eax,0x3e
  40d44d:	or     al,ch
  40d44f:	inc    esi
  40d450:	cmp    al,0xff
  40d452:	call   DWORD PTR [ebx+0x4e]
  40d455:	cld    
  40d456:	push   0xffffffca
  40d458:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d45a:	add    BYTE PTR [ebp-0x18],0x9
  40d45e:	rol    BYTE PTR [eax],0x0
	...
  40d46d:	add    BYTE PTR [esi-0x4597b127],cl
  40d473:	or     bh,ch
  40d475:	mov    esi,0x413e9da2
  40d47a:	mov    bl,BYTE PTR [eax]
  40d47c:	push   DWORD PTR [ebp-0x6e]
  40d47f:	lock bt DWORD PTR [ebp-0x18],eax
  40d484:	out    0x3d,al
  40d486:	mov    ah,0xe7
  40d488:	std    
  40d489:	mov    ebp,DWORD PTR [edi+0x64]
  40d48c:	sub    BYTE PTR [ecx+0x7a],al
  40d48f:	mov    edi,DWORD PTR [ebx]
  40d491:	push   0x80004192
  40d496:	xor    eax,0xe2457408
  40d49b:	loope  0x40d4db
  40d49d:	inc    ecx
  40d49e:	cmp    bl,BYTE PTR [edi]
  40d4a0:	call   0x48bf62
  40d4a5:	or     ecx,DWORD PTR [edx+0x62561f3d]
  40d4ab:	loope  0x40d432
  40d4ad:	inc    DWORD PTR [ebp+0x18]
  40d4b0:	push   0xbcd73a00
  40d4b5:	push   0x41429963
  40d4ba:	arpl   WORD PTR [esi],bx
  40d4bc:	jecxz  0x40d532
  40d4be:	pop    ebx
  40d4bf:	mov    dh,0xb4
  40d4c1:	mov    eax,ds:0xfdea9b04
  40d4c6:	jle    0x40d45b
  40d4c8:	loope  0x40d4b4
  40d4ca:	bound  esp,QWORD PTR [esp+eax*4]
  40d4cd:	cmp    eax,0x45ddf963
	...
  40d4de:	add    BYTE PTR [eax],al
  40d4e0:	add    bh,ah
  40d4e2:	mov    esi,0x72dcb8c2
  40d4e7:	loope  0x40d4e7
  40d4e9:	rcr    DWORD PTR [ebx],1
  40d4eb:	sbb    eax,DWORD PTR [edi]
  40d4ed:	push   esi
  40d4ee:	inc    edi
  40d4ef:	loop   0x40d565
  40d4f1:	(bad)  
  40d4f2:	pop    edx
  40d4f3:	pop    eax
  40d4f4:	or     bl,cl
  40d4f6:	neg    DWORD PTR [esi-0x1]
  40d4f9:	mov    ah,0xa
  40d4fb:	inc    edx
  40d4fc:	leave  
  40d4fd:	mov    eax,ds:0xd85502e9
  40d502:	dec    ecx
  40d503:	xchg   bl,al
  40d505:	lahf   
  40d506:	fwait
  40d507:	cmp    DWORD PTR [edx+0x63],ebp
  40d50a:	enter  0xff2d,0x16
  40d50e:	(bad)  
  40d50f:	jmp    0x2688:0xe21b09f9
  40d516:	adc    cl,BYTE PTR [esi+0x4505ff34]
  40d51c:	add    al,bl
  40d51e:	loopne 0x40d58a
  40d520:	sub    BYTE PTR [edx],ah
  40d522:	out    dx,al
  40d523:	cmp    BYTE PTR [esi],0x63
  40d526:	js     0x40d56f
  40d528:	push   0x43ad4e
  40d52d:	mov    ah,0xf4
  40d52f:	and    DWORD PTR [eax+0x63],edx
  40d532:	in     al,dx
  40d533:	or     eax,0x38b3b7c0
  40d538:	call   0xff2338fe
  40d53d:	xchg   ebx,eax
  40d53e:	add    eax,0xea630451
  40d543:	sahf   
  40d544:	ins    BYTE PTR es:[edi],dx
	...
  40d551:	add    BYTE PTR [eax],al
  40d553:	add    BYTE PTR [esi+eax*2],al
  40d556:	sub    BYTE PTR [ebx+esi*4],al
  40d559:	ficom  DWORD PTR [ebx+0xc]
  40d55c:	sti    
  40d55d:	xor    DWORD PTR [ebx+0x68ee05e1],ecx
  40d563:	pop    edi
  40d564:	cld    
  40d565:	fcmovb st,st(1)
  40d567:	add    ebx,DWORD PTR [ebp+0x7603ee85]
  40d56d:	fild   QWORD PTR [esi]
  40d56f:	loopne 0x40d5a2
  40d571:	lds    ebx,FWORD PTR [edi-0x1f]
  40d574:	fstp   st(2)
  40d576:	xchg   ebp,eax
  40d577:	(bad)  
  40d578:	push   es
  40d579:	push   ds
  40d57a:	out    0x56,al
  40d57c:	or     bl,bl
  40d57e:	sti    
  40d57f:	ffreep st(5)
  40d581:	push   eax
  40d582:	icebp  
  40d583:	jmp    0x40d51d
  40d585:	pop    edi
  40d586:	jbe    0x40d569
  40d588:	adc    eax,0x60c6a03b
  40d58d:	add    eax,0x86b88cbc
  40d592:	and    al,0xe0
  40d594:	or     al,BYTE PTR ds:0x50942fc3
  40d59a:	loope  0x40d587
  40d59c:	push   cs
  40d59d:	pop    edi
  40d59e:	inc    esi
  40d59f:	loope  0x40d57c
  40d5a1:	inc    eax
  40d5a2:	cmp    eax,0xe96f636e
  40d5a7:	imul   ebx,DWORD PTR [esi+0x44],0xffffffa8
  40d5ab:	add    edi,ebx
  40d5ad:	add    al,0xe9
  40d5af:	add    esp,ebx
  40d5b1:	in     eax,dx
  40d5b2:	mov    al,0x83
  40d5b4:	pop    ebp
  40d5b5:	(bad)  
  40d5b7:	ret    
	...
  40d5c4:	add    BYTE PTR [eax],al
  40d5c6:	add    al,dl
  40d5c8:	cli    
  40d5c9:	mov    eax,0x5833deb
  40d5ce:	loope  0x40d564
  40d5d0:	ins    DWORD PTR es:[edi],dx
  40d5d1:	jmp    0xffdc21d9
  40d5d6:	adc    BYTE PTR [edx+ebx*1],0x41
  40d5da:	jmp    0xf1b5b04f
  40d5df:	cmp    ch,ah
  40d5e1:	mov    al,ds:0xce203de
  40d5e6:	push   esp
  40d5e7:	add    bl,bl
  40d5e9:	(bad)  
  40d5ea:	push   esp
  40d5eb:	add    ebx,ebx
  40d5ed:	je     0x40d5e0
  40d5ef:	clc    
  40d5f0:	pop    ecx
  40d5f1:	jp     0x40d5b1
  40d5f3:	add    ecx,ebp
  40d5f5:	shr    ebp,0x60
  40d5f8:	xor    BYTE PTR [ebx-0x43a1843],cl
  40d5fe:	adc    ebx,DWORD PTR [edi+0x6f]
  40d601:	sub    eax,0xe80d359e
  40d606:	int    0x36
  40d608:	(bad)  
  40d60a:	pusha  
  40d60b:	and    eax,0x60e967d9
  40d610:	jmp    0xe941:0x442011bd
  40d617:	dec    eax
  40d618:	dec    eax
  40d619:	inc    ecx
  40d61a:	sub    BYTE PTR [edi-0x26],ah
  40d61d:	je     0x40d610
  40d61f:	mov    eax,0x835ea0ed
  40d624:	fidiv  DWORD PTR [ebp+edx*2-0x7d]
  40d628:	push   eax
  40d629:	or     BYTE PTR [ecx+0x0],al
	...
  40d638:	add    BYTE PTR [eax],al
  40d63a:	and    eax,0x9946ff5f
  40d63f:	ret    
  40d640:	add    ebp,ecx
  40d642:	xor    eax,0x9c6aeb8e
  40d647:	(bad)  [ecx-0x17]
  40d64a:	(bad)  
  40d64b:	sub    bh,bh
  40d64d:	pushf  
  40d64e:	pop    eax
  40d64f:	in     eax,dx
  40d650:	call   0x891919f5
  40d655:	lods   al,BYTE PTR ds:[esi]
  40d656:	xor    al,0x61
  40d658:	add    cl,ch
  40d65a:	push   ebx
  40d65b:	fwait
  40d65c:	add    BYTE PTR [bp+si],al
  40d65f:	inc    esp
  40d660:	inc    ecx
  40d661:	add    dl,dl
  40d663:	addr16 inc ecx
  40d665:	inc    ecx
  40d666:	dec    edx
  40d667:	out    0x73,al
  40d669:	or     BYTE PTR [edx+0x73],ah
  40d66c:	lahf   
  40d66d:	(bad)  
  40d66e:	cmp    eax,0x2d00006a
  40d673:	js     0x40d6db
  40d675:	arpl   WORD PTR [ebx+0x42],cx
  40d678:	add    BYTE PTR [eax+0x4f],ch
  40d67b:	inc    edx
  40d67c:	inc    ecx
  40d67d:	add    BYTE PTR ds:0x80e8083f,bl
  40d683:	mov    ds:0x3eadfffd,al
  40d688:	cld    
  40d689:	push   DWORD PTR [edi]
  40d68b:	or     eax,ebp
  40d68d:	repz inc ebx
  40d68f:	mov    eax,0xe08c9fd
  40d694:	add    BYTE PTR [ebp+0x41],dl
  40d697:	aad    0x81
  40d699:	(bad)  
  40d69a:	fimul  WORD PTR [ebx+edx*2+0x10]
	...
  40d6ad:	push   ecx
  40d6ae:	shr    DWORD PTR [eax+0x0],cl
  40d6b1:	dec    edi
  40d6b2:	dec    esi
  40d6b3:	cld    
  40d6b4:	push   eax
  40d6b5:	sub    eax,0xba6a083e
  40d6ba:	mov    bh,0x73
  40d6bc:	adc    BYTE PTR ds:0x4a851c13,bh
  40d6c2:	ds daa 
  40d6c4:	mov    edx,edi
  40d6c6:	mov    eax,0x6e7a6a8e
  40d6cb:	add    BYTE PTR [eax+0x1d],ch
  40d6ce:	add    al,0x0
  40d6d0:	add    BYTE PTR ds:0x2d6a0c3e,bh
  40d6d6:	mov    eax,0x4a00470
  40d6db:	push   0x0
  40d6dd:	push   edx
  40d6de:	stos   BYTE PTR es:[edi],al
  40d6df:	dec    ebx
  40d6e0:	add    BYTE PTR [edx+0x54],cl
  40d6e3:	(bad)  
  40d6e4:	jne    0x40d749
  40d6e6:	bnd jmp 0x40d748
  40d6e9:	popf   
  40d6ea:	out    dx,al
  40d6eb:	add    cl,cl
  40d6ed:	and    edx,edx
  40d6ef:	add    dl,BYTE PTR [ebp-0x18]
  40d6f2:	or     DWORD PTR [ebx+0x396337c3],eax
  40d6f8:	adc    al,0xd8
  40d6fa:	mov    ebx,0x28d60068
  40d6ff:	loopne 0x40d750
  40d701:	sbb    al,0x31
  40d703:	adc    bh,bh
  40d705:	mov    fs,esi
  40d707:	push   0xf8310c00
  40d70c:	(bad)  
  40d70d:	mov    cl,0xf6
  40d70f:	mov    BYTE PTR [edi+0x0],bh
	...
  40d71d:	add    BYTE PTR [eax],al
  40d71f:	add    BYTE PTR [esi-0x1],dh
  40d722:	mov    dl,BYTE PTR [edi+esi*8+0x3d]
  40d726:	imul   eax,DWORD PTR [eax],0xff6aee79
  40d72c:	pusha  
  40d72d:	out    dx,al
  40d72e:	add    bh,bh
  40d730:	push   esi
  40d731:	fisubr WORD PTR [eax-0x1]
  40d734:	aam    0xfb
  40d736:	pop    es
  40d737:	push   0x63
  40d739:	add    al,0x4
  40d73b:	call   0x44e868
  40d740:	rcl    DWORD PTR [esi+0x58],cl
  40d743:	cld    
  40d744:	retf   
  40d745:	mov    ebx,0xa563004c
  40d74a:	ror    BYTE PTR [edi],0x63
  40d74d:	cdq    
  40d74e:	mov    ebx,ebp
  40d750:	pushf  
  40d751:	mov    al,0xa
  40d753:	dec    DWORD PTR [esi]
  40d755:	(bad)  
  40d756:	jmp    0xefe:0xde470b52
  40d75d:	shr    dl,cl
  40d75f:	xchg   edi,eax
  40d760:	cs out dx,al
  40d762:	add    dl,cl
  40d764:	sub    DWORD PTR [edx-0x3d],0x1
  40d768:	adc    esp,DWORD PTR [edi]
  40d76a:	pop    eax
  40d76b:	or     al,0x64
  40d76d:	add    al,0x9c
  40d76f:	sti    
  40d770:	inc    esp
  40d771:	push   esi
  40d772:	mov    eax,ds:0x9bd755de
  40d777:	test   DWORD PTR [ebp+0x51],0xfdcfdef9
  40d77e:	adc    BYTE PTR [ecx-0x45],ah
  40d781:	(bad)  
  40d782:	std    
  40d783:	retf   
	...
  40d790:	add    BYTE PTR [eax],al
  40d792:	add    BYTE PTR [edx],ah
  40d794:	bnd call 0xee2aafd2
  40d79a:	push   edi
  40d79b:	pop    ebx
  40d79c:	(bad)  
  40d79d:	pop    ebx
  40d79e:	cld    
  40d79f:	add    al,0xfc
  40d7a1:	pusha  
  40d7a2:	fst    QWORD PTR ds:0xfb105bd7
  40d7a8:	mov    BYTE PTR [esp+eax*1],bl
  40d7ab:	arpl   WORD PTR [ebp+0x19],ax
  40d7ae:	fnsave [edi+0x9]
  40d7b1:	mov    esi,0xf1ed5b57
  40d7b6:	pop    ebx
  40d7b7:	in     al,dx
  40d7b8:	(bad)  
  40d7b9:	lods   eax,DWORD PTR ds:[esi]
  40d7ba:	push   edi
  40d7bb:	dec    edi
  40d7bc:	(bad)  
  40d7bd:	sbb    esi,esp
  40d7bf:	fst    QWORD PTR [eax+0x1]
  40d7c2:	in     al,dx
  40d7c3:	xchg   DWORD PTR [ebp-0x6a],ebx
  40d7c6:	fstp   QWORD PTR [ebx+0x2e03f4c3]
  40d7cc:	mov    dl,BYTE PTR [ebx+eax*4-0x22864e60]
  40d7d3:	mov    ch,0xd6
  40d7d5:	sti    
  40d7d6:	sti    
  40d7d7:	fild   WORD PTR [eax-0x295a2018]
  40d7dd:	mov    eax,0x510d17dc
  40d7e2:	mov    esi,0xdd55d696
  40d7e7:	pop    ss
  40d7e8:	std    
  40d7e9:	pop    ebx
  40d7ea:	xchg   DWORD PTR [esi+ecx*8-0x29d322bb],eax
  40d7f1:	mov    bl,0xf
  40d7f3:	je     0x40d845
  40d7f5:	add    cl,ah
	...
  40d803:	add    BYTE PTR [eax],al
  40d805:	add    BYTE PTR [eax-0xe],bh
  40d808:	(bad)  
  40d809:	xchg   BYTE PTR cs:[eax+eax*1-0x6d],ch
  40d80e:	pusha  
  40d80f:	ins    DWORD PTR es:[edi],dx
  40d810:	(bad)  
  40d811:	jmp    0xd167:0x6c8d0560
  40d818:	dec    BYTE PTR [esi]
  40d81a:	(bad)  
  40d81b:	imul   edi,edi,0x6
  40d81e:	xchg   esp,eax
  40d81f:	cmc    
  40d820:	imul   ebp,ecx,0x5be805ca
  40d826:	xchg   ebx,eax
  40d827:	add    eax,0xe5dc2600
  40d82c:	repnz out 0x3f,al
  40d82f:	push   es
  40d830:	add    cl,ch
  40d832:	pusha  
  40d833:	mov    esi,0xd733dd84
  40d838:	(bad)  
  40d839:	jmp    0x40d89b
  40d83b:	add    eax,0xcde5ae00
  40d840:	repnz mov esi,0xe9fed617
  40d846:	pusha  
  40d847:	mov    esi,0xd713ad84
  40d84c:	(bad)  
  40d84d:	jmp    0x7240ddb2
  40d852:	(bad)  
  40d853:	std    
  40d854:	mov    bh,bl
  40d856:	cmp    al,BYTE PTR ds:0xd2b0648d
  40d85c:	inc    BYTE PTR [esi-0x727b7790]
  40d862:	xchg   ebx,eax
  40d863:	(bad)  
  40d864:	(bad)  
  40d865:	sbb    esp,ebx
  40d867:	and    bh,0x7a
	...
  40d876:	add    BYTE PTR [eax],al
  40d878:	add    BYTE PTR [edi+0x35664fd6],al
  40d87e:	cmc    
  40d87f:	(bad)  
  40d880:	aam    0x64
  40d882:	(bad)  
  40d883:	je     0x40d866
  40d885:	cli    
  40d886:	add    al,0xff
  40d888:	aam    0x88
  40d88a:	(bad)  
  40d88b:	push   ecx
  40d88c:	add    dh,cl
  40d88e:	test   BYTE PTR [ebx-0x246c618],bh
  40d894:	add    BYTE PTR [ebp+0x7a011a7d],al
  40d89a:	add    DWORD PTR [ebx-0x24a8943],eax
  40d8a0:	dec    DWORD PTR [edx+0x2]
  40d8a3:	test   BYTE PTR [edi],cl
  40d8a5:	cmp    ecx,DWORD PTR [ecx]
  40d8a7:	add    bh,al
  40d8a9:	mov    edi,0x65fff19c
  40d8ae:	or     BYTE PTR [eax],al
  40d8b0:	out    dx,eax
  40d8b1:	je     0x40d913
  40d8b3:	jl     0x40d8f6
  40d8b5:	sti    
  40d8b6:	or     BYTE PTR [ebp-0x24ac57b],cl
  40d8bc:	call   FWORD PTR [edx-0x1f]
  40d8bf:	adc    cl,BYTE PTR [edx+ecx*1+0x9]
  40d8c3:	test   eax,eax
  40d8c5:	scas   al,BYTE PTR es:[edi]
  40d8c6:	dec    ebx
  40d8c7:	mov    DWORD PTR [ebp-0x24332],0xbeef090b
  40d8d1:	xchg   edx,eax
  40d8d2:	jg     0x40d913
  40d8d4:	inc    ecx
  40d8d5:	cli    
  40d8d6:	jge    0x40d85b
  40d8d8:	add    BYTE PTR [esi+0x50fdb0],dh
	...
  40d8ea:	add    BYTE PTR [eax],al
  40d8ec:	repnz mov dh,0x49
  40d8ef:	add    dl,cl
  40d8f1:	test   DWORD PTR [esi-0x7c38668c],edi
  40d8f7:	aam    0xe9
  40d8f9:	mov    al,0xfd
  40d8fb:	add    cl,dl
  40d8fd:	fistp  QWORD PTR [eax+ebp*2+0x414a1c]
  40d904:	inc    edi
  40d905:	xchg   dh,bh
  40d907:	sti    
  40d908:	xor    eax,0x5ce84eb0
  40d90d:	inc    esp
  40d90e:	add    BYTE PTR [eax],al
  40d910:	dec    eax
  40d912:	or     eax,0x37f6385
  40d917:	add    BYTE PTR [ebx-0x3a],ah
  40d91a:	pushf  
  40d91b:	inc    eax
  40d91c:	and    bl,dh
  40d91e:	xchg   DWORD PTR [ebx+eiz*2+0x13fedb1a],eax
  40d925:	inc    esi
  40d926:	mov    bl,0x4b
  40d928:	arpl   si,bx
  40d92a:	or     eax,0x856dd7c0
  40d92f:	cmp    al,0x5e
  40d931:	mov    al,ds:0xeb630043
  40d936:	jle    0x40d8b8
  40d938:	arpl   si,bx
  40d93a:	add    bh,bh
  40d93c:	div    ch
  40d93e:	(bad)  
  40d93f:	(bad)  
  40d940:	xor    al,0x63
  40d942:	sbb    edi,0xfed9db30
  40d948:	out    dx,al
  40d949:	rcl    ebp,1
  40d94b:	(bad)  
  40d94c:	sbb    al,0x5b
  40d94e:	and    bl,0x0
	...
  40d95d:	add    BYTE PTR [eax],al
  40d95f:	adc    BYTE PTR [ebx-0x6a197327],dh
  40d965:	aad    0xfe
  40d967:	add    al,0xe
  40d969:	outs   dx,BYTE PTR ds:[esi]
  40d96a:	add    DWORD PTR [ecx-0x76ff9322],ecx
  40d970:	fisubr WORD PTR [eax+eax*1-0x22]
  40d974:	pusha  
  40d975:	jecxz  0x40d969
  40d977:	in     al,0xa2
  40d979:	xor    bh,bh
  40d97b:	jbe    0x40d95e
  40d97d:	inc    esp
  40d97e:	inc    ecx
  40d97f:	arpl   di,dx
  40d981:	ret    0x2473
  40d984:	jnp    0x40d9d5
  40d986:	adc    al,0xc4
  40d988:	cmp    BYTE PTR [ebx-0x2675430e],bh
  40d98e:	mov    ah,0x97
  40d990:	dec    esi
  40d991:	(bad)  
  40d993:	lods   al,BYTE PTR ds:[esi]
  40d994:	shl    dl,1
  40d996:	(bad)  
  40d997:	out    dx,al
  40d998:	jns    0x40d96f
  40d99a:	(bad)  
  40d99b:	pushf  
  40d99c:	add    al,0x51
  40d99e:	ficom  WORD PTR [edi-0x2825a22d]
  40d9a4:	mov    al,0x59
  40d9a6:	fiadd  DWORD PTR [ebp+0x634d2edc]
  40d9ac:	add    eax,0x5975f852
  40d9b1:	aad    0xda
  40d9b3:	mov    bh,0xdc
  40d9b5:	cmp    edx,ebx
  40d9b7:	shl    DWORD PTR gs:[ebx-0x19],cl
  40d9bb:	push   ecx
  40d9bc:	shl    DWORD PTR ds:0x1df5cfda,cl
  40d9c2:	nop
	...
  40d9cf:	add    BYTE PTR [eax],al
  40d9d1:	add    BYTE PTR [eax],dh
  40d9d3:	xlat   BYTE PTR ds:[ebx]
  40d9d4:	adc    eax,0xbb53cda
  40d9d9:	fidivr DWORD PTR ds:0x31e73bd3
  40d9df:	sar    ebp,cl
  40d9e1:	jmp    0xc81a:0x3e93f10
  40d9e8:	aam    0x3
  40d9ea:	mov    dh,0x7e
  40d9ec:	aam    0x85
  40d9ee:	and    BYTE PTR [esi-0x64872cb],cl
  40d9f4:	popa   
  40d9f5:	not    bh
  40d9f7:	dec    eax
  40d9f8:	xchg   ecx,eax
  40d9f9:	xor    al,0x89
  40d9fb:	add    eax,0xd2674fc6
  40da00:	xor    ecx,DWORD PTR [ecx+edi*2]
  40da03:	add    eax,0xd24f4fb6
  40da08:	sbb    dh,BYTE PTR [eax]
  40da0a:	out    0xc5,al
  40da0c:	sbb    esi,DWORD PTR [eax]
  40da0e:	pushf  
  40da0f:	dec    eax
  40da10:	pop    ebp
  40da11:	add    al,0x63
  40da13:	add    eax,0x8d2f8ce9
  40da18:	popa   
  40da19:	imul   bh
  40da1b:	dec    eax
  40da1c:	inc    ebp
  40da1d:	xor    al,0xe6
  40da1f:	dec    eax
  40da20:	test   eax,0xfff53934
  40da25:	jne    0x40da3b
  40da27:	(bad)  
  40da28:	(bad)  
  40da29:	sbb    ebp,DWORD PTR [ebx-0x7a]
  40da2c:	jl     0x40d9d3
  40da2e:	pop    edi
  40da2f:	pop    ecx
  40da30:	daa    
  40da31:	ins    BYTE PTR es:[edi],dx
  40da32:	xor    al,0xc5
  40da34:	(bad)  
  40da35:	fadd   QWORD PTR [eax]
	...
  40da43:	add    BYTE PTR [eax],al
  40da45:	je     0x40da1a
  40da47:	je     0x40da42
  40da49:	fwait
  40da4a:	sbb    edi,edi
  40da4c:	mov    esp,0xf174d25c
  40da51:	js     0x40da09
  40da53:	cld    
  40da54:	ss mov dl,bl
  40da57:	ss inc ecx
  40da59:	les    edi,FWORD PTR [esi]
  40da5b:	add    cl,ch
  40da5d:	(bad)  
  40da5f:	add    ebx,DWORD PTR [esi]
  40da61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da62:	xchg   ecx,eax
  40da63:	je     0x40da9c
  40da65:	ss fwait
  40da67:	mov    dh,BYTE PTR [eax+ebx*8-0x5bf9ee82]
  40da6e:	(bad)  
  40da6f:	(bad)  
  40da70:	fwait
  40da71:	pop    eax
  40da72:	xor    cl,cl
  40da74:	sub    ebp,DWORD PTR [edi]
  40da76:	rcl    BYTE PTR [ebx+0x62],cl
  40da79:	or     eax,DWORD PTR [ebp-0x2cc51e3d]
  40da7f:	(bad)  
  40da80:	fidivr WORD PTR ss:[eax]
  40da83:	adc    BYTE PTR [edx+0xe],ah
  40da86:	add    DWORD PTR [ecx+edx*8+0x19fed31a],0x34ff0585
  40da91:	pop    edi
  40da92:	pop    edi
  40da93:	add    BYTE PTR [esi+0x1bfef595],dh
  40da99:	jnp    0x40da23
  40da9b:	mov    edi,0x84ca421c
  40daa0:	popf   
  40daa1:	stos   BYTE PTR es:[edi],al
  40daa2:	sar    dh,cl
  40daa4:	jmp    0x6240e009
	...
  40dab5:	add    BYTE PTR [eax],al
  40dab7:	add    BYTE PTR [ebp-0x26],cl
  40daba:	std    
  40dabb:	add    ch,bl
  40dabd:	lods   al,BYTE PTR ds:[esi]
  40dabe:	mov    DWORD PTR [edx],edx
  40dac0:	aas    
  40dac1:	push   ebx
  40dac2:	sti    
  40dac3:	(bad)  
  40dac4:	sub    eax,0x78d4ead
  40dac9:	push   es
  40daca:	(bad)  
  40dacb:	(bad)  
  40dacc:	std    
  40dacd:	adc    eax,0x832d106a
  40dad2:	idiv   dh
  40dad4:	sub    eax,0x9e52fdad
  40dad9:	mov    BYTE PTR [ebx-0x252e304],bh
  40dadf:	add    BYTE PTR [esi+0x7abd8d27],dh
  40dae5:	lods   al,BYTE PTR ds:[esi]
  40dae6:	std    
  40dae7:	dec    DWORD PTR [ebp-0x800efc1]
  40daed:	or     BYTE PTR [edi-0x1],dl
  40daf0:	idiv   esp
  40daf2:	out    0x13,eax
  40daf4:	ins    DWORD PTR es:[edi],dx
  40daf5:	lods   eax,DWORD PTR ds:[esi]
  40daf6:	std    
  40daf7:	add    DWORD PTR [ebp+0x5e8dfdd4],0xffffffae
  40dafe:	std    
  40daff:	push   DWORD PTR [edi-0x3e55161a]
  40db05:	pop    edi
  40db06:	idiv   esi
  40db08:	or     eax,0xfd1289b9
  40db0d:	jbe    0x40db05
  40db0f:	(bad)  
  40db10:	sub    eax,0x252fdb9
  40db15:	sbb    cl,cl
  40db17:	ret    0x51e
  40db1a:	push   ebp
  40db1b:	mov    eax,DWORD PTR [eax]
	...
  40db29:	add    BYTE PTR [eax],al
  40db2b:	push   cs
  40db2c:	mov    eax,edx
  40db2e:	clc    
  40db2f:	lods   al,BYTE PTR ds:[esi]
  40db30:	mov    eax,0x168157fd
  40db35:	or     al,0x8b
  40db37:	mov    eax,0xfcf8837d
  40db3c:	mov    eax,0x97050fd
  40db41:	push   0x0
  40db43:	arpl   WORD PTR [edi+0x50],si
  40db46:	or     al,0xbc
  40db48:	or     al,0x1c
  40db4a:	test   DWORD PTR [ebx+0x26c735d1],esp
  40db50:	push   edx
  40db51:	add    al,0x0
  40db53:	arpl   si,bx
  40db55:	jb     0x40dae1
  40db57:	not    BYTE PTR [esi-0x2a]
  40db5a:	(bad)  
  40db5b:	xchg   esp,eax
  40db5c:	push   ebx
  40db5d:	repnz mov WORD PTR [esi],fs
  40db60:	xor    dh,BYTE PTR [ecx*4-0x129c522]
  40db67:	jl     0x40daf7
  40db69:	push   0xdc517410
  40db6e:	std    
  40db6f:	ins    BYTE PTR es:[edi],dx
  40db70:	(bad)  
  40db72:	push   ecx
  40db73:	push   edi
  40db74:	cmp    DWORD PTR cs:[edi+ebx*2-0x22],0x72
  40db7a:	jae    0x40daff
  40db7c:	pop    ecx
  40db7d:	cdq    
  40db7e:	sti    
  40db7f:	dec    ebp
  40db80:	out    dx,eax
  40db81:	(bad)  
  40db82:	pop    DWORD PTR [ecx+esi*2+0x6]
  40db86:	push   DWORD PTR [esi+0x6be82de6]
  40db8c:	pop    es
  40db8d:	xlat   BYTE PTR ds:[ebx]
  40db8e:	inc    BYTE PTR [eax]
	...
  40db9c:	add    BYTE PTR [eax],al
  40db9e:	loopne 0x40dbc6
  40dba0:	hlt    
  40dba1:	(bad)  
  40dba2:	and    al,0xa9
  40dba4:	(bad)  
  40dba5:	(bad)  
  40dba6:	xchg   esi,eax
  40dba7:	add    eax,0x52d1ea74
  40dbac:	jo     0x40dba5
  40dbae:	or     eax,0x718ad5af
  40dbb3:	mov    bh,0x8f
  40dbb5:	idiv   ebp
  40dbb7:	mov    esi,0xd691fed5
  40dbbc:	xor    eax,0x2d621c9
  40dbc1:	push   ebp
  40dbc2:	fmul   st,st(1)
  40dbc4:	add    ebx,0x74d6f813
  40dbca:	addr16 add eax,0x51bcc91
  40dbd0:	jmp    0xec9a7edf
  40dbd5:	xor    eax,0x3dcc2aa
  40dbda:	xchg   edx,eax
  40dbdb:	in     al,0x69
  40dbdd:	ret    
  40dbde:	bound  edi,QWORD PTR [eax+ebx*4-0x78]
  40dbe2:	pop    ds
  40dbe3:	loope  0x40dbfd
  40dbe5:	xor    bl,BYTE PTR [ecx+ebx*2+0x7f00ebdd]
  40dbec:	gs (bad) 
  40dbee:	cmp    DWORD PTR [esi-0x2450b791],edi
  40dbf4:	loop   0x40dc03
  40dbf6:	ins    BYTE PTR es:[edi],dx
  40dbf7:	xchg   edi,eax
  40dbf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbf9:	sub    al,0x87
  40dbfb:	add    eax,0x8423afac
  40dc00:	aas    
  40dc01:	out    dx,eax
	...
  40dc0e:	add    BYTE PTR [eax],al
  40dc10:	add    dl,dh
  40dc12:	aad    0x1
  40dc14:	into   
  40dc15:	jmp    0x40dc6f
  40dc17:	sbb    edx,ebp
  40dc19:	jl     0x40dc32
  40dc1b:	test   BYTE PTR [ebp+0x330d1fa0],0xbb
  40dc22:	inc    esp
  40dc23:	stos   DWORD PTR es:[edi],eax
  40dc24:	inc    esp
  40dc25:	arpl   WORD PTR [eax-0x225b445d],ax
  40dc2b:	adc    al,0x4c
  40dc2d:	arpl   WORD PTR ds:0x8058bf6a,ax
  40dc33:	stos   DWORD PTR es:[edi],eax
  40dc34:	mov    ebx,0xb373ceac
  40dc39:	cld    
  40dc3a:	jge    0x40dc9d
  40dc3c:	aad    0xd
  40dc3e:	jge    0x40dc63
  40dc40:	mov    ah,0x9e
  40dc42:	adc    dh,0xf0
  40dc45:	jb     0x40dbf9
  40dc47:	addr16 pop edi
  40dc49:	bswap  edi
  40dc4b:	call   0x340f3f53
  40dc50:	mov    al,0x7c
  40dc52:	inc    esp
  40dc53:	add    BYTE PTR [ebx],ch
  40dc55:	and    BYTE PTR ds:0x3f17248d,al
  40dc5b:	call   0x45f4c5
  40dc60:	push   0xffffffa3
  40dc62:	cli    
  40dc63:	mov    WORD PTR [edi+edi*8],gs
  40dc66:	notrack call DWORD PTR [edi+ebp*8]
  40dc6a:	out    0x57,al
  40dc6c:	add    dl,BYTE PTR [esi-0x10db7731]
  40dc72:	add    DWORD PTR [ebp+eiz*4+0x0],0x0
	...
  40dc82:	add    BYTE PTR [eax],al
  40dc84:	push   edi
  40dc85:	into   
  40dc86:	je     0x40dc21
  40dc88:	pop    es
  40dc89:	inc    edi
  40dc8a:	inc    edx
  40dc8b:	test   al,0x60
  40dc8d:	into   
  40dc8e:	xor    al,0xb2
  40dc90:	cmp    DWORD PTR [eax+eax*1+0x41],eax
  40dc94:	add    cl,BYTE PTR [ebx-0x1]
  40dc97:	dec    esi
  40dc98:	push   0xffffffc5
  40dc9a:	push   cs
  40dc9b:	ins    DWORD PTR es:[edi],dx
  40dc9c:	dec    ch
  40dc9e:	(bad)  
  40dc9f:	jmp    0x6b09267d
  40dca4:	mov    ah,0xc1
  40dca6:	(bad)  
  40dca7:	fst    st(4)
  40dca9:	test   bh,bh
  40dcab:	call   0xedb5ab10
  40dcb0:	cmp    BYTE PTR [edx],al
  40dcb2:	dec    ecx
  40dcb3:	jmp    0x6b209118
  40dcb8:	pop    ds
  40dcb9:	add    al,0x89
  40dcbb:	lods   al,BYTE PTR ds:[esi]
  40dcbc:	ror    dh,1
  40dcbe:	je     0x40dcad
  40dcc0:	fisttp WORD PTR [eax-0x4c]
  40dcc3:	imul   BYTE PTR [ebp+0x20a48ec1]
  40dcc9:	iret   
  40dcca:	je     0x40dc7d
  40dccc:	out    0x48,eax
  40dcce:	les    esp,FWORD PTR [esi-0x17006ebb]
  40dcd4:	pusha  
  40dcd5:	add    eax,0x1c3c0c83
  40dcda:	inc    ecx
  40dcdb:	add    dl,bh
  40dcdd:	add    DWORD PTR [eax+edx*2+0x77],esi
  40dce1:	(bad)  
  40dce3:	push   eax
  40dce4:	and    BYTE PTR [edx],al
  40dce6:	push   0x0
	...
  40dcf4:	add    BYTE PTR [eax],al
  40dcf6:	add    BYTE PTR [eax],ah
  40dcf8:	or     DWORD PTR [ebp+0x6a122a45],ecx
  40dcfe:	add    BYTE PTR [edi],dh
  40dd00:	xadd   BYTE PTR [eax-0x2b],dl
  40dd04:	fisubr WORD PTR [ebx]
  40dd06:	sub    DWORD PTR [ebx-0x513ff4f7],ecx
  40dd0c:	repz cmp BYTE PTR [ebp+0x66],0x2
  40dd11:	je     0x40dd3f
  40dd13:	or     DWORD PTR [edi],esi
  40dd15:	adc    BYTE PTR [eax],al
  40dd17:	mov    ?,ecx
  40dd19:	mov    dl,BYTE PTR [ebp-0x76]
  40dd1c:	das    
  40dd1d:	mov    DWORD PTR [edx],0x75ff0965
  40dd23:	cmp    BYTE PTR [eax+0x3f25b873],0xbc
  40dd2a:	jmp    FWORD PTR [edi+0x7a036805]
  40dd30:	call   0xaeefc5f1
  40dd35:	std    
  40dd36:	inc    DWORD PTR [ebp-0x6f1743c5]
  40dd3c:	or     DWORD PTR [eax],eax
  40dd3e:	add    BYTE PTR [ebp+0x3b],ah
  40dd41:	enter  0xa6e8,0x3a
  40dd45:	(bad)  
  40dd46:	jmp    DWORD PTR [ebp+0x3b]
  40dd49:	shr    al,1
  40dd4b:	sahf   
  40dd4c:	cmp    bh,bh
  40dd4e:	inc    esp
  40dd50:	mov    edi,0x1c0a0cc0
  40dd55:	mov    ebp,esp
  40dd57:	mov    DWORD PTR [esi+eax*8+0x8d],ecx
	...
  40dd6a:	aas    
  40dd6b:	mov    ch,0x4e
  40dd6d:	push   0x414307
  40dd72:	arpl   WORD PTR [eax+0x9],cx
  40dd75:	push   0x63
  40dd77:	inc    esi
  40dd78:	add    DWORD PTR [edx-0x5e],eax
  40dd7b:	(bad)  
  40dd7d:	mov    ebp,0x8502de9b
  40dd82:	mov    ds:0x63bf7ae3,eax
  40dd87:	fiadd  WORD PTR [edx]
  40dd89:	mov    esi,DWORD PTR [esi]
  40dd8b:	mov    ds:0x21d6117e,al
  40dd90:	int3   
  40dd91:	dec    edi
  40dd92:	mov    esp,0x11fecfe9
  40dd97:	fiadd  DWORD PTR [edi+0x72565cbf]
  40dd9d:	jmp    DWORD PTR [esi+ebx*8-0x2164837b]
  40dda4:	add    DWORD PTR [edi+ebp*8-0x5bfffd22],eax
  40ddab:	cdq    
  40ddac:	mov    dh,0xff
  40ddae:	test   dh,bl
  40ddb0:	add    al,bh
  40ddb2:	es push ss
  40ddb4:	add    al,0x0
  40ddb6:	arpl   si,bx
  40ddb8:	leave  
  40ddb9:	inc    esp
  40ddba:	xchg   ebx,eax
  40ddbb:	test   BYTE PTR [ebx],0x0
  40ddbe:	arpl   WORD PTR [ebx],sp
  40ddc0:	dec    ecx
  40ddc1:	int3   
  40ddc2:	arpl   si,bx
  40ddc4:	add    al,BYTE PTR [eax]
  40ddc6:	call   0x71cba83b
  40ddcb:	push   ecx
  40ddcc:	dec    ecx
  40ddcd:	int3   
	...
  40ddda:	add    BYTE PTR [eax],al
  40dddc:	add    BYTE PTR [ebx-0x6c2fb6a7],dh
  40dde2:	mov    BYTE PTR [ebx],al
  40dde4:	jmp    FWORD PTR [esi+0x5f51d2f6]
  40ddea:	xlat   BYTE PTR ds:[ebx]
  40ddeb:	ret    0x8f74
  40ddee:	pop    edi
  40ddef:	push   ecx
  40ddf0:	int3   
  40ddf1:	bound  ecx,QWORD PTR [ecx+0x41]
  40ddf4:	adc    DWORD PTR [esi-0x5a8bfc0e],0x5
  40ddfb:	push   ecx
  40ddfc:	adc    DWORD PTR [ecx+0x77d2e946],esp
  40de02:	mov    cl,0xc0
  40de04:	enter  0x59c,0xe9
  40de08:	(bad)  
  40de09:	lods   al,BYTE PTR ds:[esi]
  40de0a:	push   eax
  40de0b:	repz imul ebx,DWORD PTR [eax*1+0x41ea03e9],0xc45ddea1
  40de17:	and    edi,DWORD PTR [esp+ecx*8-0x3bfc1735]
  40de1e:	push   ecx
  40de1f:	mov    cl,0xd2
  40de21:	aaa    
  40de22:	mov    cl,0x95
  40de24:	pop    eax
  40de25:	imul   ebx,ebp,0xffffff86
  40de28:	shr    BYTE PTR [ebp-0x70a77a35],1
  40de2e:	(bad)  
  40de30:	cmp    esp,DWORD PTR [ebx+0x5]
  40de33:	push   0x50
  40de35:	mov    ebx,0x8dfbf504
  40de3a:	push   ecx
  40de3b:	inc    ecx
  40de3c:	fistp  DWORD PTR [ebp+edi*1-0x17]
  40de40:	add    eax,DWORD PTR [eax]
	...
  40de4e:	add    BYTE PTR [eax],al
  40de50:	mov    BYTE PTR [eax+0x61],bh
  40de53:	cmp    BYTE PTR [ebx+0x7f],bh
  40de56:	cli    
  40de57:	shl    bh,cl
  40de59:	int3   
  40de5a:	inc    ebp
  40de5b:	xor    eax,0xcf93805b
  40de60:	jmp    0x5799145c
  40de65:	retf   
  40de66:	call   0xae03:0xecc81bfb
  40de6d:	jle    0x40de7b
  40de6f:	xchg   BYTE PTR [eax],ah
  40de71:	out    0xbe,al
  40de73:	xchg   BYTE PTR [edi-0x7c],dh
  40de76:	stos   BYTE PTR es:[edi],al
  40de77:	inc    esp
  40de78:	arpl   WORD PTR ds:0x11df17c,ax
  40de7e:	push   0x5a245
  40de83:	call   0x2f40e3e8
  40de88:	fild   DWORD PTR [ecx+eax*2-0x17]
  40de8c:	daa    
  40de8d:	add    al,0x66
  40de8f:	test   al,0x49
  40de91:	pop    es
  40de92:	sub    DWORD PTR [edi+0xf83635d],0x67
  40de99:	push   eax
  40de9a:	repz push 0x54
  40de9d:	mov    BYTE PTR ds:0xf056728,ch
  40dea3:	ins    DWORD PTR es:[edi],dx
  40dea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dea5:	retf   0xe9fe
  40dea8:	out    0x9,eax
  40deaa:	mov    ecx,0x521d7
  40deaf:	out    dx,al
  40deb0:	in     al,0xd8
  40deb2:	(bad)  
  40deb3:	call   0x40deb8
	...
  40dec0:	add    BYTE PTR [eax],al
  40dec2:	add    BYTE PTR [eax-0x7a],ah
  40dec5:	cmp    al,0xbc
  40dec7:	dec    ecx
  40dec8:	inc    esp
  40dec9:	add    cl,ch
  40decb:	arpl   WORD PTR [ecx+0x560e9e0],ax
  40ded1:	(bad)  
  40ded2:	sub    al,0xb3
  40ded4:	retf   0xe9fe
  40ded7:	pusha  
  40ded8:	ret    0x6144
  40dedb:	pop    edi
  40dedc:	add    eax,0x40fde900
  40dee1:	cld    
  40dee2:	mov    ecx,0xb9f840f5
  40dee7:	push   cs
  40dee8:	add    eax,0x441d3668
  40deed:	add    BYTE PTR [esi],bh
  40deef:	push   esp
  40def0:	lea    ebp,ds:0xbffe60a8
  40def6:	fsubrp st(4),st
  40def8:	(bad)  
  40def9:	(bad)  
  40defa:	call   0x21bd655f
  40deff:	addr16 cli 
  40df01:	add    DWORD PTR [ebp+0x5f],0x5
  40df05:	add    BYTE PTR [edx-0x64],ch
  40df08:	leave  
  40df09:	(bad)  
  40df0a:	jmp    FWORD PTR ds:0xa00a082
  40df10:	push   es
  40df11:	mov    esi,DWORD PTR [ebp+0xe]
  40df14:	scas   eax,DWORD PTR es:[edi]
  40df15:	add    BYTE PTR [eax],0xfa
  40df18:	add    eax,0xb4648b56
  40df1d:	je     0x40df37
  40df1f:	lea    eax,[ebx-0x10]
  40df22:	call   DWORD PTR [ebp+edx*8+0x458d]
	...
  40df35:	add    BYTE PTR [esi],dl
  40df37:	test   DWORD PTR cs:[edx+0x3b],eax
  40df3b:	add    eax,ebp
  40df3d:	xlat   BYTE PTR ds:[ebx]
  40df3e:	test   BYTE PTR [ecx],al
  40df40:	add    cl,dl
  40df42:	stos   BYTE PTR es:[edi],al
  40df43:	cmp    BYTE PTR [esi-0x1fbcbcfe],0x68
  40df4a:	aaa    
  40df4b:	inc    eax
  40df4c:	inc    ecx
  40df4d:	add    BYTE PTR [ebp+0x43],cl
  40df50:	in     al,0xc7
  40df52:	xchg   ebp,esp
  40df54:	(bad)  
  40df55:	(bad)  
  40df56:	mov    edx,0xd2458d05
  40df5b:	adc    eax,0x170016a
  40df60:	push   0x0
  40df62:	inc    DWORD PTR [edx-0x20]
  40df65:	push   eax
  40df66:	pusha  
  40df67:	add    DWORD PTR [ebp-0xe9d5bb],ecx
  40df6d:	adc    eax,0x40ee6f
  40df72:	add    ebp,0x3af92d72
  40df78:	in     al,dx
  40df79:	add    BYTE PTR [esi+0x4a01b81c],ah
  40df7f:	add    eax,0x308a0b00
  40df84:	push   ss
  40df85:	call   DWORD PTR [edi]
  40df87:	int    0xfd
  40df89:	jne    0x40dffd
  40df8b:	mov    ch,0x73
  40df8d:	in     al,dx
  40df8e:	pop    ebp
  40df8f:	or     BYTE PTR cs:[eax+0x63],ch
  40df93:	fiadd  DWORD PTR [edx]
  40df95:	out    dx,eax
  40df96:	in     eax,dx
  40df97:	push   es
  40df98:	sti    
  40df99:	clc    
	...
  40dfa6:	add    BYTE PTR [eax],al
  40dfa8:	add    BYTE PTR [eax+eax*1],ah
  40dfab:	shl    BYTE PTR [edi+ecx*1-0x9],1
  40dfaf:	xchg   ebp,eax
  40dfb0:	inc    esp
  40dfb1:	arpl   si,bx
  40dfb3:	xor    bh,bh
  40dfb5:	sahf   
  40dfb6:	(bad)  
  40dfb7:	add    ch,0x5f
  40dfba:	pop    ebx
  40dfbb:	push   ecx
  40dfbc:	clc    
  40dfbd:	arpl   WORD PTR [edx],si
  40dfbf:	std    
  40dfc0:	xor    BYTE PTR ds:0x7c84fdde,0xb7
  40dfc7:	into   
  40dfc8:	(bad)  
  40dfc9:	in     al,0x9
  40dfcb:	sar    dh,1
  40dfcd:	jbe    0x40e018
  40dfcf:	push   ds
  40dfd0:	inc    ecx
  40dfd1:	arpl   ax,si
  40dfd3:	mov    esp,0x37de67c1
  40dfd8:	mov    esi,DWORD PTR [edi+0x49f7c85b]
  40dfde:	ficomp WORD PTR [eax+0x2f]
  40dfe1:	mov    ah,0xe9
  40dfe3:	sti    
  40dfe4:	out    0x2,eax
  40dfe6:	out    dx,al
  40dfe7:	into   
  40dfe8:	(bad)  
  40dfe9:	ficomp DWORD PTR [ecx]
  40dfeb:	sar    BYTE PTR [edi+0x5e],1
  40dfee:	loop   0x40e030
  40dff0:	inc    ecx
  40dff1:	arpl   si,bx
  40dff3:	push   edi
  40dff4:	sub    ebx,edi
  40dff6:	in     al,0x40
  40dff8:	inc    ecx
  40dff9:	arpl   WORD PTR [esi-0x21ddbf40],si
  40dfff:	(bad)  
  40e001:	cmc    
  40e002:	cs iret 
  40e004:	test   BYTE PTR [ebx+0x5e682bb2],ah
  40e00a:	pushf  
  40e00b:	inc    ebx
	...
  40e01c:	retf   
  40e01d:	inc    edx
  40e01e:	inc    ebp
  40e01f:	inc    ecx
  40e020:	arpl   WORD PTR [esi-0x4e],ax
  40e023:	jge    0x40e071
  40e025:	pop    ss
  40e026:	mov    BYTE PTR [edi+ebx*2],0x5
  40e02a:	stos   DWORD PTR es:[edi],eax
  40e02b:	inc    esp
  40e02c:	arpl   WORD PTR [esi],ax
  40e02e:	push   0x11
  40e030:	push   0x43
  40e032:	test   al,0x3
  40e034:	arpl   WORD PTR [ecx-0x2d],dx
  40e037:	(bad)  
  40e038:	lahf   
  40e039:	int    0xe8
  40e03b:	add    esp,DWORD PTR [ebx+0x5]
  40e03e:	rol    bl,cl
  40e040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e041:	xor    eax,0xcdb78099
  40e046:	call   0x6345:0x2afe6fce
  40e04d:	sub    BYTE PTR [eax-0x9239eb4],0x82
  40e054:	outs   dx,DWORD PTR ds:[esi]
  40e055:	int    0xe8
  40e057:	pop    eax
  40e058:	popa   
  40e059:	(bad)  
  40e05b:	into   
  40e05c:	push   edi
  40e05d:	int    0xbd
  40e05f:	pop    eax
  40e060:	imul   ebx,ebp,0x3a
  40e063:	retf   
  40e064:	int    0xc7
  40e066:	popa   
  40e067:	cmp    bl,cl
  40e069:	jnp    0x40e065
  40e06b:	into   
  40e06c:	aaa    
  40e06d:	int    0x9d
  40e06f:	xor    DWORD PTR [ebx-0x38],ebp
  40e072:	sbb    edi,esp
  40e074:	les    edi,FWORD PTR [edx]
  40e076:	mov    esi,cs
  40e078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e079:	(bad)  
  40e07a:	sti    
  40e07b:	sti    
  40e07c:	test   BYTE PTR [ebx],bl
  40e07e:	jg     0x40e04e
	...
  40e08c:	add    BYTE PTR [eax],al
  40e08e:	add    BYTE PTR [ebp-0x72300439],dl
  40e094:	push   ecx
  40e095:	loope  0x40e072
  40e097:	xor    BYTE PTR [esi+0x66],dl
  40e09a:	into   
  40e09b:	stos   DWORD PTR es:[edi],eax
  40e09c:	ret    0x3e4
  40e09f:	push   cs
  40e0a0:	jl     0x40e0e6
  40e0a2:	and    BYTE PTR [eax+0x1036b6d4],0x7c
  40e0a9:	fwait
  40e0aa:	jmp    DWORD PTR ds:0x6303e904
  40e0b0:	add    eax,0xfdab3600
  40e0b5:	out    0x6d,eax
  40e0b7:	pushf  
  40e0b8:	add    eax,0x6286a00
  40e0bd:	ja     0x40e0af
  40e0bf:	pop    ecx
  40e0c0:	lds    ebx,FWORD PTR [edx-0x4a]
  40e0c3:	jle    0x40e081
  40e0c5:	shl    ecx,0x60
  40e0c8:	mov    ah,0xe7
  40e0ca:	jb     0x40e127
  40e0cc:	stc    
  40e0cd:	mov    bl,ch
  40e0cf:	cdq    
  40e0d0:	scas   al,BYTE PTR es:[edi]
  40e0d1:	push   cs
  40e0d2:	imul   edi,DWORD PTR [edx-0x7616013a],0x51
  40e0d9:	or     BYTE PTR [edx-0x54],dh
  40e0dc:	std    
  40e0dd:	jmp    0x1369:0x57a7d43
  40e0e4:	pop    ss
  40e0e5:	jb     0x40e0ca
  40e0e7:	loopne 0x40e0b3
  40e0e9:	cmp    BYTE PTR [esi],bh
  40e0eb:	fs test ebx,ebp
  40e0ee:	stc    
  40e0ef:	mov    ebx,0xb57feb
	...
  40e100:	add    BYTE PTR [eax],al
  40e102:	and    BYTE PTR [ebx+0xd],dl
  40e105:	imul   esi,DWORD PTR [ebx-0x1f0e88c0],0xab6940da
  40e10f:	cld    
  40e110:	jmp    0x752e:0x5ac54be0
  40e117:	mov    esp,0x960f1c1
  40e11c:	xor    bl,bh
  40e11e:	cwde   
  40e11f:	or     bh,BYTE PTR [ecx]
  40e121:	(bad)  
  40e122:	sbb    DWORD PTR fs:[eax],esi
  40e125:	or     BYTE PTR [esi+0x7adb410a],0xa
  40e12c:	inc    esi
  40e12d:	(bad)  
  40e12e:	pop    esi
  40e12f:	sbb    DWORD PTR [ecx-0x13],eax
  40e132:	push   0xffffffdb
  40e134:	or     BYTE PTR [edx],al
  40e136:	lahf   
  40e137:	sub    ebx,DWORD PTR [edi+0x0]
  40e13a:	add    al,0x8b
  40e13c:	ror    BYTE PTR [eax],0x4a
  40e13f:	ret    0x4de
  40e142:	inc    eax
  40e143:	mov    esi,0xbfb94ba8
  40e148:	add    BYTE PTR [ebx],cl
  40e14a:	mov    eax,ds:0xff8ba22e
  40e14f:	(bad)  
  40e152:	lds    edi,FWORD PTR [esi]
  40e154:	clc    
  40e155:	dec    edi
  40e157:	leave  
  40e158:	lea    eax,[ebp+0x66]
  40e15b:	rol    BYTE PTR [ebx-0xc],0xa
  40e15f:	add    al,BYTE PTR [eax]
  40e161:	add    BYTE PTR [ecx-0xa],bh
  40e164:	sub    al,0x29
	...
  40e172:	add    BYTE PTR [eax],al
  40e174:	add    BYTE PTR [ebx+0x3c740001],bh
  40e17a:	inc    esi
  40e17b:	inc    esp
  40e17c:	lock cmp ch,BYTE PTR [ebx]
  40e17f:	add    DWORD PTR [edx-0x6],ebp
  40e182:	sub    eax,DWORD PTR [eax]
  40e184:	push   0xfffffffa
  40e186:	sub    eax,DWORD PTR [eax]
  40e188:	lea    ecx,[edi-0x5000b147]
  40e18e:	out    0x28,al
  40e190:	inc    ecx
  40e191:	mov    edx,0xd074becc
  40e196:	test   BYTE PTR [ebx-0xc],bh
  40e199:	retf   0x342d
  40e19c:	mov    edi,DWORD PTR [edi+0x5]
  40e19f:	mov    ecx,DWORD PTR [ebp-0x36]
  40e1a2:	cld    
  40e1a3:	pop    es
  40e1a4:	ja     0x40e146
  40e1a6:	mov    ch,0x89
  40e1a8:	jne    0x40e1c8
  40e1aa:	dec    ebp
  40e1ab:	jl     0x40e1b5
  40e1ad:	adc    DWORD PTR [edi],eax
  40e1af:	lock jecxz 0x40e22a
  40e1b2:	mov    ah,0xa2
  40e1b4:	mov    edi,DWORD PTR [edi]
  40e1b6:	add    eax,0x491a75ff
  40e1bb:	(bad)  
  40e1bc:	dec    BYTE PTR [edi+0x63e3e6ad]
  40e1c2:	fwait
  40e1c3:	add    al,BYTE PTR [eax]
  40e1c5:	stos   DWORD PTR es:[edi],eax
  40e1c6:	fadd   QWORD PTR [edx]
  40e1c8:	add    BYTE PTR [ebx+0x67],ah
  40e1cb:	sub    ebx,DWORD PTR [esi+0x2a]
  40e1ce:	icebp  
  40e1cf:	cli    
  40e1d0:	(bad)  
  40e1d1:	jns    0x40e1c1
  40e1d3:	daa    
  40e1d4:	pop    edi
  40e1d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1d6:	in     eax,0xc0
  40e1d8:	pop    es
	...
  40e1e5:	add    BYTE PTR [eax],al
  40e1e7:	add    BYTE PTR [ebx-0x7f],ah
  40e1ea:	ja     0x40e1d7
  40e1ec:	loopne 0x40e1d8
  40e1ee:	ret    0x6367
  40e1f1:	into   
  40e1f2:	add    al,BYTE PTR [eax]
  40e1f4:	cmp    edx,DWORD PTR [ecx+edx*2-0x1]
  40e1f8:	sbb    al,0x36
  40e1fa:	inc    esi
  40e1fb:	cld    
  40e1fc:	mov    ebp,DWORD PTR [esi+0x6630022]
  40e202:	xchg   ecx,eax
  40e203:	jno    0x40e209
  40e205:	mov    ah,0x78
  40e207:	inc    esp
  40e208:	sti    
  40e209:	push   esi
  40e20a:	add    al,0x20
  40e20c:	arpl   WORD PTR [esi-0x248e5b26],bp
  40e212:	retf   0x9e88
  40e215:	ficomp DWORD PTR [ebx+0x0]
  40e218:	sub    DWORD PTR [esi+0xfbe802],0xffffffcb
  40e21f:	(bad)  
  40e220:	(bad)  
  40e222:	shl    DWORD PTR [edi+0x63],cl
  40e225:	push   cs
  40e226:	add    al,0x0
  40e228:	retf   
  40e229:	aaa    
  40e22a:	push   esi
  40e22b:	push   DWORD PTR [ebp+esi*1-0x51c413bf]
  40e232:	and    al,BYTE PTR [eax]
  40e234:	arpl   WORD PTR [esi-0x74638db7],ax
  40e23a:	jl     0x40e280
  40e23c:	mov    edx,DWORD PTR [esi]
  40e23e:	add    al,0x20
  40e240:	arpl   WORD PTR [esi+0x331170da],bp
  40e246:	retf   
  40e247:	mov    BYTE PTR [esi],ah
  40e249:	add    eax,0xcb4d
	...
  40e25a:	add    bh,ch
  40e25c:	adc    al,0xd1
  40e25e:	mul    DWORD PTR [ecx]
  40e260:	inc    esi
  40e261:	jmp    0x4101d230
  40e266:	jnp    0x40e208
  40e268:	add    eax,0x112086e9
  40e26d:	ds push ecx
  40e26f:	jae    0x40e29e
  40e271:	(bad)  
  40e272:	inc    esi
  40e273:	mov    ds:0x3b512e05,al
  40e278:	lods   eax,DWORD PTR ds:[esi]
  40e279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e27a:	aas    
  40e27b:	arpl   WORD PTR ds:0xc458c06a,ax
  40e281:	fwait
  40e282:	repz mov esp,0x6344a9f9
  40e288:	les    edi,FWORD PTR [ebx-0x31]
  40e28b:	cld    
  40e28c:	sub    eax,0x886303a5
  40e291:	sub    al,0xf8
  40e293:	add    eax,0x905bd93a
  40e298:	dec    eax
  40e299:	sub    BYTE PTR [esp+esi*8],al
  40e29c:	cmp    ecx,ebx
  40e29e:	fist   DWORD PTR [esi-0x1ffc16b7]
  40e2a4:	enter  0xcadc,0x57
  40e2a8:	adc    eax,0x46206251
  40e2ad:	jmp    0xc0f23a7c
  40e2b2:	inc    esi
  40e2b3:	pop    ds
  40e2b4:	add    eax,0x10a086e9
  40e2b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2ba:	push   eax
  40e2bb:	addr16 sub eax,0x471d
	...
  40e2cd:	add    BYTE PTR [edx],ah
  40e2cf:	add    eax,0xacbb5096
  40e2d4:	fdivr  DWORD PTR [edi]
  40e2d6:	arpl   WORD PTR ds:0xc468bf6a,ax
  40e2dc:	repz repz add al,0x8d
  40e2e0:	jmp    FWORD PTR [ecx]
  40e2e2:	push   ds
  40e2e3:	add    eax,0xab9cf4ff
  40e2e8:	sbb    al,0xad
  40e2ea:	pusha  
  40e2eb:	add    eax,0x2d742583
  40e2f0:	add    BYTE PTR [esi+0x13],dl
  40e2f3:	sar    esi,0xd4
  40e2f6:	push   esp
  40e2f7:	les    esi,FWORD PTR [edx+esi*4]
  40e2fa:	ja     0x40e340
  40e2fc:	add    BYTE PTR [ecx+0x11],dl
  40e2ff:	aaa    
  40e300:	push   DWORD PTR [esi]
  40e302:	(bad)  
  40e303:	dec    ecx
  40e304:	loopne 0x40e2c9
  40e306:	pusha  
  40e307:	ret    0x2174
  40e30a:	sub    DWORD PTR [edx],edi
  40e30c:	or     al,0x1e
  40e30e:	push   ebx
  40e30f:	dec    esi
  40e310:	sub    DWORD PTR [eax-0x6a3f52a0],ebp
  40e316:	sub    esp,eax
  40e318:	mov    BYTE PTR [esp+edi*4-0x6301ffd4],ch
  40e31f:	mov    ecx,0xc40c7cfe
  40e324:	xor    al,0xa2
  40e326:	pop    edi
  40e327:	inc    esp
  40e328:	add    cl,dl
  40e32a:	(bad)  
  40e32b:	ss (bad) 
  40e32d:	fisubr WORD PTR [eax+0x49]
  40e330:	fadd   DWORD PTR [ebx+0x0]
	...
  40e33f:	add    BYTE PTR [eax],al
  40e341:	pop    edi
  40e342:	ret    0xd974
  40e345:	stos   BYTE PTR es:[edi],al
  40e346:	cmp    eax,ebp
  40e348:	(bad)  
  40e349:	fs dec esi
  40e34b:	sub    DWORD PTR [eax],ebp
  40e34d:	lods   eax,DWORD PTR ds:[si]
  40e34f:	xchg   esp,eax
  40e350:	cmp    eax,0x2488c39a
  40e355:	repz sub al,0x0
  40e358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e359:	and    al,0xb1
  40e35b:	(bad)  
  40e35c:	adc    al,0x8f
  40e35e:	ret    
  40e35f:	xor    al,0x22
  40e361:	dec    eax
  40e362:	inc    esp
  40e363:	add    BYTE PTR [ecx+0xff392a],al
  40e369:	fnstsw WORD PTR [esi]
  40e36b:	inc    esp
  40e36c:	sar    bh,1
  40e36e:	add    eax,eax
  40e370:	push   eax
  40e371:	or     eax,0x77ffe452
  40e376:	mov    edx,0x1fb135fd
  40e37b:	inc    ecx
  40e37c:	add    BYTE PTR [edx],dl
  40e37e:	and    al,0x74
  40e380:	dec    DWORD PTR ds:0xc9cc443e
  40e386:	dec    edx
  40e387:	loopne 0x40e389
  40e389:	dec    ebp
  40e38a:	inc    edx
  40e38b:	mov    dh,0x0
  40e38d:	cmp    al,BYTE PTR [esi]
  40e38f:	cmp    DWORD PTR [ebp+0x66],0x9
  40e393:	je     0x40ed58
  40e399:	leave  
  40e39a:	dec    edx
  40e39b:	rol    BYTE PTR [eax],1
  40e39d:	cmp    eax,0x3a00a242
  40e3a2:	push   es
  40e3a3:	lea    eax,[ebp+0x0]
	...
  40e3b2:	add    BYTE PTR [eax],al
  40e3b4:	inc    esi
  40e3b5:	stc    
  40e3b6:	(bad)  
  40e3b7:	jne    0x40e42f
  40e3b9:	loope  0x40e409
  40e3bb:	std    
  40e3bc:	or     eax,0xfdc009cd
  40e3c1:	inc    ecx
  40e3c2:	mov    es,WORD PTR [eax]
  40e3c4:	or     al,BYTE PTR [esi]
  40e3c6:	cmp    DWORD PTR [ebp-0x3a],0x5
  40e3ca:	je     0x40ea57
  40e3d0:	jg     0x40e3d5
  40e3d2:	enter  0xad50,0x52
  40e3d6:	shr    al,1
  40e3d8:	fmul   st,st(2)
  40e3da:	std    
  40e3db:	call   ecx
  40e3dd:	lds    esi,FWORD PTR [edx+0x75]
  40e3e0:	cmp    DWORD PTR [ebx-0x38],ecx
  40e3e3:	add    BYTE PTR [esi+0x5c],dh
  40e3e6:	push   0xbcdcca10
  40e3eb:	call   DWORD PTR [edi-0x3f]
  40e3ee:	out    0x76,al
  40e3f0:	arpl   WORD PTR [ecx],cx
  40e3f2:	leave  
  40e3f3:	(bad)  
  40e3f4:	pushf  
  40e3f5:	sbb    ah,ah
  40e3f7:	dec    BYTE PTR [esi]
  40e3f9:	mov    ah,0xda
  40e3fb:	int3   
  40e3fc:	inc    BYTE PTR [edx-0x38]
  40e3ff:	dec    BYTE PTR [esi]
  40e401:	cwde   
  40e402:	(bad)  
  40e403:	je     0x40e470
  40e405:	test   ah,al
  40e407:	ins    BYTE PTR es:[edi],dx
  40e408:	je     0x40e434
  40e40a:	enter  0x8b74,0x62
  40e40e:	dec    esi
  40e40f:	or     BYTE PTR [ebx-0x5e],bh
  40e412:	push   ebp
  40e413:	call   FWORD PTR [eax+edx*2+0x4e]
  40e417:	les    eax,FWORD PTR [eax]
	...
  40e425:	add    BYTE PTR [eax],al
  40e427:	push   esp
  40e428:	sub    BYTE PTR [esi-0x25492902],0x7c
  40e42f:	mov    dh,0xf7
  40e431:	(bad)  
  40e432:	(bad)  
  40e433:	mov    dh,0xe6
  40e435:	(bad)  
  40e436:	je     0x40e44b
  40e438:	call   0x907bec8a
  40e43d:	push   ebp
  40e43e:	jmp    DWORD PTR [esp+ebp*1]
  40e441:	inc    esi
  40e442:	int3   
  40e443:	arpl   WORD PTR [edx-0x11697d13],bx
  40e449:	(bad)  
  40e44a:	je     0x40e4a8
  40e44c:	xor    edi,DWORD PTR [esi]
  40e44e:	int3   
  40e44f:	add    al,0x7f
  40e451:	(bad)  
  40e452:	je     0x40e4bf
  40e454:	push   es
  40e455:	and    ebp,DWORD PTR [ebp-0xc]
  40e458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e459:	fimul  DWORD PTR [ecx]
  40e45b:	jns    0x40e40b
  40e45d:	lds    esi,FWORD PTR [ebx+ebx*2-0x3a]
  40e461:	out    dx,eax
  40e462:	ins    BYTE PTR es:[edi],dx
  40e463:	fmul   st(7),st
  40e465:	(bad)  
  40e466:	je     0x40e43f
  40e468:	(bad)  
  40e469:	sub    BYTE PTR [edi-0x34],0x7f
  40e46d:	(bad)  
  40e46e:	je     0x40e43b
  40e470:	(bad)  
  40e471:	dec    edx
  40e472:	jo     0x40e430
  40e474:	outs   dx,DWORD PTR ds:[esi]
  40e475:	(bad)  
  40e476:	je     0x40e427
  40e478:	add    eax,0xc0335391
  40e47d:	popf   
  40e47e:	(bad)  
  40e47f:	das    
  40e480:	mov    ch,0x80
  40e482:	pop    ebx
  40e483:	adc    eax,eax
  40e485:	(bad)  
  40e486:	(bad)  
  40e487:	cmpxchg DWORD PTR [eax+0x63],edx
	...
  40e49a:	adc    eax,eax
  40e49c:	jge    0x40e465
  40e49e:	shrd   DWORD PTR [eax+0x6dbff32b],eax,cl
  40e4a5:	(bad)  
  40e4a6:	out    dx,eax
  40e4a7:	test   al,0x50
  40e4a9:	xor    esi,ebx
  40e4ab:	mov    edi,0xa4efc75d
  40e4b0:	inc    eax
  40e4b1:	cmp    edx,ebx
  40e4b3:	ror    BYTE PTR [ebp-0x39],0xcf
  40e4b7:	loope  0x40e509
  40e4b9:	inc    ebx
  40e4ba:	rol    eax,cl
  40e4bc:	cmp    eax,0x40ddcfc7
  40e4c1:	or     esi,DWORD PTR [ebx-0x5038d240]
  40e4c7:	fst    DWORD PTR [eax]
  40e4c9:	adc    esi,DWORD PTR [ebx-0x5038e240]
  40e4cf:	aad    0x0
  40e4d1:	sbb    edx,DWORD PTR [ebx-0x7038f240]
  40e4d7:	rcl    DWORD PTR [eax],1
  40e4d9:	and    edx,DWORD PTR [ebx+0x22bcfdc0]
  40e4df:	adc    ecx,ebp
  40e4e1:	xor    al,ch
  40e4e3:	mov    al,0x67
  40e4e5:	sar    ah,0xb7
  40e4e8:	in     eax,0xc6
  40e4ea:	fisttp WORD PTR [ecx-0x23]
  40e4ed:	xor    esp,esp
  40e4ef:	cmp    ebp,esp
  40e4f1:	(bad)  
  40e4f2:	xchg   edi,eax
  40e4f3:	dec    esp
  40e4f4:	add    BYTE PTR [ebp+0x63],al
  40e4f7:	lods   eax,DWORD PTR ds:[esi]
  40e4f8:	dec    esp
  40e4f9:	inc    edx
  40e4fa:	arpl   WORD PTR ds:0xc3f2,ax
	...
  40e50c:	add    BYTE PTR [ebp-0x76],dl
  40e50f:	(bad)  
  40e510:	fsub   QWORD PTR [edi+0x5]
  40e513:	add    BYTE PTR [esi-0x170042dd],ah
  40e519:	pusha  
  40e51a:	add    eax,0xbe9324c7
  40e51f:	push   es
  40e520:	jmp    0x3411085
  40e525:	pop    edi
  40e526:	sub    eax,DWORD PTR [eax]
  40e528:	adc    esp,DWORD PTR [edi-0x6e]
  40e52b:	inc    esp
  40e52c:	jne    0x40e57e
  40e52e:	xchg   edx,eax
  40e52f:	test   BYTE PTR [ecx-0x53],bh
  40e532:	mov    esi,0x389c19fe
  40e537:	clc    
  40e538:	adc    ax,cx
  40e53b:	out    0x17,eax
  40e53d:	and    DWORD PTR ds:0x3320e200,eax
  40e543:	add    eax,0xfebf0540
  40e548:	jmp    0xa86866f5
  40e54d:	pusha  
  40e54e:	mov    esi,0x5e18e574
  40e553:	jae    0x40e583
  40e555:	sbb    eax,0xab398b4f
  40e55a:	mov    edi,ebp
  40e55c:	push   ss
  40e55d:	sbb    eax,0x38bb4fc0
  40e562:	dec    esi
  40e563:	jae    0x40e573
  40e565:	sbb    eax,0x1d11848e
  40e56a:	sar    dh,0x11
  40e56d:	jge    0x40e59e
  40e56f:	push   esi
	...
  40e57d:	add    BYTE PTR [eax],al
  40e57f:	add    BYTE PTR [ecx+ecx*2-0x10],dh
  40e583:	cdq    
  40e584:	cwde   
  40e585:	add    eax,0xbe672843
  40e58a:	mov    ah,0xd1
  40e58c:	push   ss
  40e58d:	sar    dh,0xd6
  40e590:	ins    BYTE PTR es:[edi],dx
  40e591:	dec    edx
  40e592:	sub    DWORD PTR [eax],ebp
  40e594:	pop    edi
  40e595:	lods   eax,DWORD PTR ds:[esi]
  40e596:	pushf  
  40e597:	add    BYTE PTR [eax+0x3f89fdc8],cl
  40e59d:	(bad)  
  40e59f:	push   ebp
  40e5a1:	test   BYTE PTR [ebx-0x2371214],bh
  40e5a7:	add    BYTE PTR [esi-0x15],cl
  40e5aa:	cmp    BYTE PTR [ebp-0x36],0x5
  40e5ae:	jne    0x40e5f9
  40e5b0:	add    DWORD PTR [esi],edi
  40e5b2:	jmp    0x40e5ab
  40e5b4:	in     eax,0xc8
  40e5b6:	std    
  40e5b7:	xor    BYTE PTR ds:0x5f7eb3e,dl
  40e5bd:	enter  0xbd7f,0xe6
  40e5c1:	sar    ch,1
  40e5c3:	jmp    edx
  40e5c5:	add    al,0x0
  40e5c7:	add    BYTE PTR [esp+edi*4-0x2fe97a3b],cl
  40e5ce:	std    
  40e5cf:	jmp    DWORD PTR [edx-0x5efffffc]
  40e5d5:	stos   DWORD PTR es:[edi],eax
  40e5d6:	std    
  40e5d7:	lea    esi,[esi-0x7a000230]
  40e5dd:	mov    gs,edx
  40e5df:	div    DWORD PTR [ebp-0x38]
  40e5e2:	std    
  40e5e3:	mov    ch,0x0
	...
  40e5f1:	add    BYTE PTR [eax],al
  40e5f3:	mov    ds:0x85fffdd0,al
  40e5f8:	dec    esi
  40e5f9:	or     al,ch
  40e5fb:	add    al,dh
  40e5fd:	std    
  40e5fe:	dec    DWORD PTR [ecx+0x65f7ea86]
  40e604:	enter  0x74fe,0x47
  40e608:	enter  0xecb3,0xd
  40e60c:	leave  
  40e60d:	std    
  40e60e:	call   0x403f29
  40e613:	add    eax,0x5f7ea8f
  40e618:	leave  
  40e619:	out    0x11,al
  40e61b:	xchg   ebp,eax
  40e61c:	enter  0xfffd,0x63
  40e620:	mov    eax,ds:0xced4f6da
  40e625:	ret    
  40e626:	je     0x40e683
  40e628:	aam    0xde
  40e62a:	std    
  40e62b:	les    edi,FWORD PTR [esi-0x3d]
  40e62e:	mov    ah,0xcb
  40e630:	jle    0x40e5f5
  40e632:	dec    bl
  40e634:	jae    0x40e68a
  40e636:	jmp    FWORD PTR [esi+eiz*2+0x62baf83d]
  40e63d:	(bad)  
  40e63e:	(bad)  
  40e63f:	pushf  
  40e640:	xchg   esi,eax
  40e641:	dec    ebp
  40e642:	cld    
  40e643:	mov    ebp,ecx
  40e645:	inc    edx
  40e646:	add    BYTE PTR [ebx+0x75],ah
  40e649:	rol    BYTE PTR [edi],0x63
  40e64c:	sbb    DWORD PTR [ecx-0x15],edi
  40e64f:	loopne 0x40e6c0
  40e651:	(bad)  
  40e652:	imul   esp,DWORD PTR [ebx+0x2],0xff14
	...
  40e665:	add    dh,dh
  40e667:	mov    bl,0xda
  40e669:	or     edi,esi
  40e66b:	pop    esi
  40e66c:	les    ecx,FWORD PTR [eax-0x15a4ad5a]
  40e672:	mov    eax,ds:0xd6ff026d
  40e677:	mov    dh,0xda
  40e679:	mov    ds:0xfec3fc45,al
  40e67e:	mov    dh,0xf2
  40e680:	ret    
  40e681:	je     0x40e6ee
  40e683:	inc    esi
  40e684:	push   cs
  40e685:	ins    BYTE PTR es:[edi],dx
  40e686:	sub    al,0xe4
  40e688:	mov    ecx,0x2dae5fc1
  40e68d:	mov    ecx,DWORD PTR [edi]
  40e68f:	xor    BYTE PTR [edi+0x5873adfb],bh
  40e695:	add    BYTE PTR [ecx+0x7d],bh
  40e698:	ret    
  40e699:	je     0x40e6f6
  40e69b:	push   ss
  40e69c:	lods   al,BYTE PTR ds:[esi]
  40e69d:	push   0xfffffffc
  40e69f:	mov    bl,0x78
  40e6a1:	inc    esp
  40e6a2:	mul    DWORD PTR [edi]
  40e6a4:	push   cs
  40e6a5:	cmp    eax,DWORD PTR fs:0xfad80428
  40e6ac:	push   eax
  40e6ad:	in     al,dx
  40e6ae:	and    eax,DWORD PTR ds:0x31630369
  40e6b4:	and    al,0x2c
  40e6b6:	call   0x2c450f03
  40e6bb:	lods   eax,DWORD PTR ds:[esi]
  40e6bc:	fadd   QWORD PTR [ebx+eiz*2+0x5]
  40e6c0:	loop   0x40e685
  40e6c2:	xor    BYTE PTR [edi+edx*1],bl
  40e6c5:	lods   al,BYTE PTR ds:[esi]
  40e6c6:	ins    DWORD PTR es:[edi],dx
  40e6c7:	cmp    eax,0xc3a6
	...
  40e6d8:	add    BYTE PTR [ebp*1+0x7b8c03e9],dl
  40e6df:	add    BYTE PTR [ecx+0x21],ch
  40e6e2:	inc    esi
  40e6e3:	jmp    0xf173733b
  40e6e8:	stos   DWORD PTR es:[edi],eax
  40e6e9:	push   ebx
  40e6ea:	cwde   
  40e6eb:	jge    0x40e6b0
  40e6ed:	test   BYTE PTR [edx+0x7],bl
  40e6f0:	ret    
  40e6f1:	jne    0x40e6a3
  40e6f3:	out    0x49,eax
  40e6f5:	jecxz  0x40e6f2
  40e6f7:	call   0x5d845034
  40e6fc:	neg    DWORD PTR [esi+edi*2]
  40e6ff:	push   ebp
  40e700:	ret    
  40e701:	push   ebp
  40e702:	mov    esp,0x494725a
  40e707:	mov    esp,0x3d32457e
  40e70c:	ret    
  40e70d:	mov    bh,0xd
  40e70f:	inc    ecx
  40e710:	jge    0x40e6db
  40e712:	mov    esp,0xce8d632d
  40e717:	sub    cl,BYTE PTR [eax]
  40e719:	arpl   WORD PTR [edx+0x72],dx
  40e71c:	mov    al,0xe1
  40e71e:	rcl    BYTE PTR [eax],0x57
  40e721:	sbb    al,0x42
  40e723:	adc    DWORD PTR [ebx+eiz*2],eax
  40e726:	add    eax,0xb99fcae9
  40e72b:	call   0x464a33
  40e730:	bound  ebp,QWORD PTR [edx+0x60b18309]
  40e736:	xor    cl,BYTE PTR [ecx]
  40e738:	adc    bl,BYTE PTR [edi]
  40e73a:	out    dx,eax
  40e73b:	rol    DWORD PTR [edx+0x0],1
	...
  40e74a:	add    BYTE PTR [eax],al
  40e74c:	scas   al,BYTE PTR es:[edi]
  40e74d:	lds    ecx,FWORD PTR [ebx]
  40e74f:	jmp    0xe940eca9
  40e754:	pusha  
  40e755:	mov    al,0x60
  40e757:	push   0x23
  40e759:	adc    eax,0x906a3500
  40e75e:	inc    esp
  40e75f:	(bad)  
  40e761:	adc    edi,edi
  40e763:	xor    al,0x53
  40e765:	mov    esp,0xcaf8f174
  40e76a:	addr16 sahf 
  40e76c:	mov    eax,ds:0x5be0fa86
  40e771:	add    cl,BYTE PTR [ecx]
  40e773:	and    al,0xcf
  40e775:	scas   al,BYTE PTR es:[edi]
  40e776:	inc    ebp
  40e777:	sbb    DWORD PTR [edx+0x3a],edi
  40e77a:	(bad)  
  40e77b:	jle    0x40e71e
  40e77d:	or     al,0x45
  40e77f:	jno    0x40e799
  40e781:	outs   dx,BYTE PTR ds:[esi]
  40e782:	jg     0x40e76d
  40e784:	pusha  
  40e785:	add    eax,0xf6b5eb75
  40e78a:	and    BYTE PTR [edx+0x68],0x30
  40e78e:	adc    eax,0x8abdab62
  40e793:	mov    ah,0xc
  40e795:	or     al,0xa4
  40e797:	sub    ebx,DWORD PTR [eax-0x3c]
  40e79a:	fcomip st,st(1)
  40e79c:	out    dx,eax
  40e79d:	inc    ecx
  40e79e:	clc    
  40e79f:	pusha  
  40e7a0:	fwait
  40e7a1:	mov    ecx,0x41dddaea
  40e7a6:	clc    
  40e7a7:	jb     0x40e734
  40e7a9:	mov    ecx,0x426450e
  40e7ae:	ror    DWORD PTR [ecx],0x0
	...
  40e7bd:	add    BYTE PTR [eax],al
  40e7bf:	imul   ecx,DWORD PTR [esp+eax*2-0x3ae20ef],0xf983b900
  40e7ca:	or     DWORD PTR [eax+ebx*4-0x77],esi
  40e7ce:	inc    ebp
  40e7cf:	inc    BYTE PTR [ebx+0xc770036]
  40e7d5:	sub    eax,eax
  40e7d7:	push   ecx
  40e7d8:	shr    ecx,cl
  40e7da:	push   es
  40e7db:	push   ecx
  40e7dc:	inc    edx
  40e7dd:	clc    
  40e7de:	mov    edx,DWORD PTR [edi-0x736a63b]
  40e7e4:	adc    eax,0x75515500
  40e7e9:	add    esp,0x66a326f6
  40e7ef:	mov    eax,DWORD PTR [ecx]
  40e7f1:	cmp    DWORD PTR [ebp-0x72],eax
  40e7f4:	cld    
  40e7f5:	add    eax,0xc0cefa2b
  40e7fa:	adc    BYTE PTR [edx+0x64a433c5],cl
  40e800:	inc    esi
  40e801:	add    al,ch
  40e803:	pop    ebp
  40e804:	jmp    0x8df8:0x4213fffe
  40e80b:	inc    edi
  40e80c:	lds    ecx,FWORD PTR [esi-0x18]
  40e80f:	push   ds
  40e810:	in     eax,dx
  40e811:	(bad)  
  40e812:	(bad)  
  40e813:	std    
  40e814:	icebp  
  40e815:	adc    edi,edi
  40e817:	xchg   DWORD PTR [edx],ecx
  40e819:	push   DWORD PTR [ebp-0x3e]
  40e81c:	les    esi,FWORD PTR [ebx+0x8]
  40e81f:	mov    ds:0xff662e,al
	...
  40e830:	add    BYTE PTR [eax],al
  40e832:	popf   
  40e833:	or     al,al
  40e835:	movzx  ebp,BYTE PTR [edi]
  40e838:	(bad)  
  40e839:	dec    DWORD PTR [edx-0x3b]
  40e83c:	jae    0x40e84a
  40e83e:	ins    DWORD PTR es:[edi],dx
  40e83f:	repnz idiv edi
  40e842:	idiv   DWORD PTR [ecx-0x1a]
  40e845:	stc    
  40e846:	xlat   BYTE PTR ds:[ebx]
  40e847:	(bad)  
  40e848:	std    
  40e849:	mov    eax,edi
  40e84b:	or     DWORD PTR [ebx],edi
  40e84d:	inc    ebp
  40e84e:	arpl   WORD PTR [edi+ecx*1+0x2abc783],di
  40e855:	add    BYTE PTR [ecx+edi*1],al
  40e858:	pop    ss
  40e859:	push   DWORD PTR [esi-0x4c]
  40e85c:	stos   BYTE PTR es:[edi],al
  40e85d:	mov    eax,ds:0x88bfb37c
  40e862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e863:	mov    al,0xab
  40e865:	jae    0x40e84b
  40e867:	lock mov bh,0x2a
  40e86a:	mov    cl,0x36
  40e86c:	inc    esi
  40e86d:	hlt    
  40e86e:	int3   
  40e86f:	or     BYTE PTR [eax+0x65],ch
  40e872:	and    ch,BYTE PTR [ebx+ecx*1-0x5451b02e]
  40e879:	addr16 dec ecx
  40e87b:	lods   al,BYTE PTR ds:[esi]
  40e87c:	push   edx
  40e87d:	jmp    FWORD PTR [esi]
  40e87f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e880:	stos   BYTE PTR es:[edi],al
  40e881:	mov    BYTE PTR [edi+0x6b],al
  40e884:	mov    edi,0xbfb82efe
  40e889:	je     0x40e8f6
  40e88b:	xchg   esp,eax
  40e88c:	xor    esp,DWORD PTR [edi-0x6c]
  40e88f:	xchg   edx,eax
  40e890:	mov    edx,DWORD PTR [edi+esi*2+0x2f]
  40e894:	std    
  40e895:	inc    DWORD PTR [eax]
	...
  40e8a3:	add    BYTE PTR [eax],al
  40e8a5:	xrstor [ebx-0x481f15b9]
  40e8ac:	mov    ah,BYTE PTR [esi+0x48]
  40e8af:	sub    DWORD PTR [ecx+0x63],eax
  40e8b2:	das    
  40e8b3:	stos   BYTE PTR es:[edi],al
  40e8b4:	add    edx,DWORD PTR [edx]
  40e8b6:	and    esi,DWORD PTR [esi]
  40e8b8:	adc    al,0xb2
  40e8ba:	push   edi
  40e8bb:	ss clc 
  40e8bd:	push   esp
  40e8be:	fimul  DWORD PTR [edx]
  40e8c0:	call   0xff00a849
  40e8c5:	stos   BYTE PTR es:[edi],al
  40e8c6:	mov    bl,0xc2
  40e8c8:	je     0x40e92b
  40e8ca:	push   ebx
  40e8cb:	out    0x50,al
  40e8cd:	xor    al,0x7a
  40e8cf:	mov    edx,0xaaeab6fe
  40e8d4:	jns    0x40e894
  40e8d6:	add    eax,0x331dc026
  40e8db:	sbb    eax,0x162190ab
  40e8e0:	ror    BYTE PTR [edi+0x5],0xe9
  40e8e4:	inc    ebx
  40e8e5:	pop    ebp
  40e8e6:	das    
  40e8e7:	jmp    0x40e895
  40e8e9:	test   BYTE PTR fs:[ebx-0x49],bh
  40e8ed:	hlt    
  40e8ee:	xor    DWORD PTR [edi-0x54],ebp
  40e8f1:	push   esp
  40e8f2:	mov    eax,0x3fcbf73
  40e8f7:	dec    ebp
  40e8f8:	mov    edi,0xc023c0dd
  40e8fd:	aam    0xb8
  40e8ff:	call   0xf583c107
  40e904:	mov    ah,0xb8
  40e907:	call   0x40e90f
	...
  40e918:	arpl   WORD PTR [eax+0x3abcbc33],di
  40e91e:	inc    ebp
  40e91f:	mov    edi,0xc0238cad
  40e924:	fwait
  40e925:	ret    
  40e926:	clc    
  40e927:	add    esi,DWORD PTR [esi]
  40e929:	mov    WORD PTR [edi+edx*2-0x7d1abd18],cs
  40e930:	int3   
  40e931:	or     eax,0x2907ac39
  40e936:	xchg   BYTE PTR [edi+0x397dbde9],bh
  40e93c:	addr16 mov ch,ch
  40e93f:	mov    esi,0x475e14f7
  40e944:	pop    edi
  40e945:	test   bl,ah
  40e947:	packsswb mm6,QWORD PTR [ecx]
  40e94a:	out    dx,al
  40e94b:	mov    esi,0x476409cf
  40e950:	pop    ebx
  40e951:	push   ebp
  40e952:	dec    esi
  40e953:	cmp    DWORD PTR [ebx-0x53],ebx
  40e956:	pop    edx
  40e957:	xor    BYTE PTR [eax+edi*4],bh
  40e95a:	jno    0x40e9a5
  40e95c:	dec    edi
  40e95d:	mov    ?,edi
  40e95f:	lock test al,0x5
  40e962:	add    cl,ch
  40e964:	pusha  
  40e965:	pop    eax
  40e966:	leave  
  40e967:	sub    esi,DWORD PTR [edi+0x5]
  40e96a:	push   ebp
  40e96b:	jb     0x40e940
  40e96d:	add    bl,0x1d
  40e970:	fcom   DWORD PTR [eax+0x14]
  40e973:	es popa 
  40e975:	add    eax,0xec60e900
  40e97a:	shl    esi,1
	...
  40e988:	add    BYTE PTR [eax],al
  40e98a:	add    BYTE PTR [ebx+0x60e90109],ch
  40e990:	add    eax,0x8321550f
  40e995:	jl     0x40e98c
  40e997:	pusha  
  40e998:	xor    dl,BYTE PTR [ebx]
  40e99a:	ficomp WORD PTR [ebx+0x7aea6a11]
  40e9a0:	add    eax,0x87f8e96a
  40e9a5:	inc    dh
  40e9a7:	std    
  40e9a8:	lods   al,BYTE PTR ds:[esi]
  40e9a9:	sub    bl,ch
  40e9ab:	pusha  
  40e9ac:	add    eax,0x6533483
  40e9b1:	jne    0x40e9bd
  40e9b3:	in     al,0x30
  40e9b5:	adc    BYTE PTR [esi-0x5317f2a5],ah
  40e9bb:	ds mov eax,0xb91b60fe
  40e9c1:	(bad)  
  40e9c2:	adc    al,0x6b
  40e9c4:	sub    eax,DWORD PTR [eax]
  40e9c6:	adc    ebp,DWORD PTR [ebx-0x76]
  40e9c9:	inc    esp
  40e9ca:	jge    0x40e9dc
  40e9cc:	lods   eax,DWORD PTR ds:[esi]
  40e9cd:	data16 jbe 0x40e97d
  40e9d0:	mov    dh,0xe8
  40e9d2:	jmp    0x6a40ef39
  40e9d7:	mov    ds:0x41d40209,eax
  40e9dc:	mov    eax,0x320df974
  40e9e1:	or     BYTE PTR [ecx-0x73],al
  40e9e4:	pop    ds
  40e9e5:	inc    DWORD PTR [eax]
  40e9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9e8:	mov    DWORD PTR [ebx-0x4],eax
  40e9eb:	jne    0x40e9ea
  40e9ed:	adc    ebp,DWORD PTR [edx+0x0]
	...
  40e9fc:	add    BYTE PTR [eax],al
  40e9fe:	cmp    ch,ch
  40ea00:	add    ecx,DWORD PTR [ebp-0x17b18901]
  40ea06:	add    al,0x78
  40ea08:	std    
  40ea09:	push   DWORD PTR [ebx-0x31]
  40ea0c:	(bad)  
  40ea0d:	(bad)  
  40ea0e:	cli    
  40ea0f:	cmp    DWORD PTR [ebx+0xc],0xfffffff9
  40ea13:	std    
  40ea14:	pop    ds
  40ea15:	(bad)  
  40ea16:	jg     0x40ea2a
  40ea18:	push   0x3
  40ea1a:	cmc    
  40ea1b:	out    dx,al
  40ea1c:	pop    es
  40ea1d:	call   0x3fcac0
  40ea22:	cmc    
  40ea23:	out    dx,al
  40ea24:	adc    ebp,DWORD PTR [edx-0x37]
  40ea27:	in     al,dx
  40ea28:	jmp    FWORD PTR [ecx-0x36]
  40ea2b:	push   0x16
  40ea2d:	push   DWORD PTR [ebp-0x444e1888]
  40ea33:	add    al,BYTE PTR [eax]
  40ea35:	and    DWORD PTR [edi],0x15
  40ea38:	add    al,0x75
  40ea3a:	imul   edi,DWORD PTR [eax+0x73],0x7eef510
  40ea41:	call   0x3fc93c
  40ea46:	adc    edi,DWORD PTR [esi]
  40ea48:	cld    
  40ea49:	jmp    FWORD PTR [edi+0x1d]
  40ea4c:	push   0x0
  40ea4e:	pusha  
  40ea4f:	or     eax,0x51d6458d
  40ea54:	call   0xfdb9cf48
  40ea59:	jmp    0x40ec50
  40ea5e:	stc    
  40ea5f:	cmc    
  40ea60:	or     eax,DWORD PTR ds:0x0
	...
  40ea6e:	add    BYTE PTR [eax],al
  40ea70:	add    BYTE PTR [edi+0x11],ch
  40ea73:	push   DWORD PTR [ebp+0x5a]
  40ea76:	in     al,dx
  40ea77:	add    eax,0xe80a2fff
  40ea7c:	push   ebp
  40ea7d:	arpl   si,ax
  40ea7f:	mov    ebx,0x2ad0bfe
  40ea84:	add    BYTE PTR [ebx+0x55],ah
  40ea87:	sub    DWORD PTR [ecx],eax
  40ea89:	arpl   WORD PTR [edi+edi*2+0x35a65f7c],bp
  40ea90:	and    BYTE PTR [ecx+esi*2],ah
  40ea93:	adc    ch,BYTE PTR [edx+0x6b]
  40ea96:	fbstp  TBYTE PTR [esi]
  40ea98:	or     BYTE PTR [ebx],cl
  40ea9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea9b:	and    al,0xff
  40ea9d:	or     al,0xf
  40ea9f:	aaa    
  40eaa0:	adc    al,0x79
  40eaa2:	stos   DWORD PTR es:[edi],eax
  40eaa3:	sub    BYTE PTR [eax],al
  40eaa5:	mov    DWORD PTR [edx+ebp*4-0x44490a55],ebp
  40eaac:	call   0x439857
  40eab1:	loopne 0x40eadb
  40eab3:	sysret 
  40eab5:	push   esi
  40eab6:	or     al,0xbd
  40eab8:	je     0x40eb2d
  40eaba:	push   edx
  40eabb:	or     al,0xff
  40eabd:	push   esi
  40eabe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eabf:	stos   BYTE PTR es:[edi],al
  40eac0:	adc    DWORD PTR ds:0x36febbc7,edi
  40eac6:	fsubr  DWORD PTR [eax]
  40eac8:	add    ecx,DWORD PTR [ecx-0x54]
  40eacb:	sub    BYTE PTR [eax],al
  40eacd:	mov    ebx,0xa4febd25
  40ead2:	les    ebx,FWORD PTR [ebx]
  40ead4:	add    DWORD PTR [eax],eax
	...
  40eae2:	add    BYTE PTR [eax],al
  40eae4:	arpl   WORD PTR [edi+edi*2+0x35b4677c],bp
  40eaeb:	sbb    al,0xa4
  40eaed:	call   0xabc5eab1
  40eaf2:	add    bh,bh
  40eaf4:	not    bh
  40eaf6:	sub    BYTE PTR [eax],al
  40eaf8:	or     DWORD PTR [eax+0x1b6f448d],esp
  40eafe:	lods   al,BYTE PTR ds:[esi]
  40eaff:	arpl   WORD PTR [ebp+0x26],sp
  40eb02:	mov    esp,0xe9065ee8
  40eb07:	add    esp,DWORD PTR [ebx-0x78]
  40eb0a:	fisttp DWORD PTR [edi]
  40eb0c:	pop    edx
  40eb0d:	cmp    dh,ch
  40eb0f:	les    ebx,FWORD PTR [edi+0x6303e7b1]
  40eb15:	add    eax,0x1f4f3646
  40eb1a:	jmp    0xabc35248
  40eb1f:	mov    edi,0xbdaa9d94
  40eb24:	sbb    eax,0x14d80fb5
  40eb29:	mov    ch,0xe8
  40eb2b:	or     BYTE PTR [edi+0x5936e301],0x6d
  40eb32:	call   0x10464e3a
  40eb37:	enter  0xb4f4,0xe8
  40eb3b:	sub    BYTE PTR [edi+0x1],0xe2
  40eb3f:	ss pop ecx
  40eb41:	ins    DWORD PTR es:[edi],dx
  40eb42:	call   0xd0464e4a
  40eb47:	jg     0x40eb49
	...
  40eb55:	add    BYTE PTR [eax],al
  40eb57:	aam    0xb4
  40eb59:	call   0xe5423ae4
  40eb5e:	xor    eax,0x30bb002e
  40eb63:	adc    al,BYTE PTR [esi+0x5630843]
  40eb69:	sub    DWORD PTR [edx],eax
  40eb6b:	xor    BYTE PTR ds:0x845731b6,bh
  40eb71:	and    esi,DWORD PTR [eax+0x89d22e1]
  40eb77:	mov    dl,0x22
  40eb79:	xchg   ebp,eax
  40eb7a:	mov    ebx,0x8680b917
  40eb7f:	cli    
  40eb80:	mov    bl,0x8d
  40eb82:	lea    esp,[edi]
  40eb84:	lods   eax,DWORD PTR ds:[esi]
  40eb85:	test   DWORD PTR [ecx],esi
  40eb87:	push   ebx
  40eb88:	mov    ah,0xf3
  40eb8a:	scas   eax,DWORD PTR es:[edi]
  40eb8b:	ins    DWORD PTR es:[edi],dx
  40eb8c:	cmp    al,BYTE PTR [eax]
  40eb8e:	jno    0x40eb38
  40eb90:	cmp    DWORD PTR [eax],ecx
  40eb92:	adc    edx,0x1866ff28
  40eb98:	cmp    DWORD PTR [ebx+edx*8],edx
  40eb9b:	data16 mov ah,0x74
  40eb9e:	pop    ebp
  40eb9f:	or     BYTE PTR [ecx],bh
  40eba1:	clc    
  40eba2:	inc    ecx
  40eba3:	push   ss
  40eba4:	mov    cl,0xfe
  40eba6:	inc    esi
  40eba7:	clc    
  40eba8:	cmp    al,bh
  40ebaa:	push   ecx
  40ebab:	sub    BYTE PTR [esi],bl
  40ebad:	push   DWORD PTR [esi]
  40ebaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebb0:	add    eax,0xa060e900
  40ebb5:	pop    edi
  40ebb6:	push   0x5a
  40ebb8:	add    DWORD PTR ds:0x9b,ecx
	...
  40ebca:	mov    bl,0x0
  40ebcc:	rcr    BYTE PTR [edi+ebp*4+0x60dd7c86],cl
  40ebd3:	add    eax,0x3d2def40
  40ebd8:	push   DWORD PTR [esp+eiz*2-0x7c]
  40ebdc:	inc    esp
  40ebdd:	std    
  40ebde:	frstor [eax]
  40ebe0:	hlt    
  40ebe1:	fdiv   QWORD PTR [edi-0x6c190be0]
  40ebe7:	mov    ecx,0xb47d06e7
  40ebec:	(bad)  
  40ebed:	pusha  
  40ebee:	and    ebp,DWORD PTR [ebp-0x4ba8ab02]
  40ebf4:	je     0x40ebb3
  40ebf6:	stc    
  40ebf7:	cmp    al,bh
  40ebf9:	mov    esi,0x13e7fd73
  40ebfe:	xor    DWORD PTR [esi+edi*8+0x6a1953ae],0xffffffe8
  40ec06:	fnstcw WORD PTR [eax]
  40ec08:	hlt    
  40ec09:	sahf   
  40ec0a:	push   ebx
  40ec0b:	lods   eax,DWORD PTR ds:[esi]
  40ec0c:	out    0x1f,eax
  40ec0e:	retf   0xfeb2
  40ec11:	mov    ?,WORD PTR [ebx]
  40ec13:	lods   eax,DWORD PTR ds:[esi]
  40ec14:	out    0x0,eax
  40ec16:	out    0xe0,al
  40ec18:	(bad)  
  40ec19:	jmp    DWORD PTR [edx]
  40ec1b:	or     DWORD PTR [eax],eax
  40ec1d:	add    BYTE PTR [edx+0x62],bh
  40ec20:	add    edi,DWORD PTR [eax+0x74a]
  40ec26:	xchg   ebx,eax
  40ec27:	enter  0xe,0x17
  40ec2b:	test   dl,ch
  40ec2d:	push   esi
	...
  40ec3a:	add    BYTE PTR [eax],al
  40ec3c:	add    BYTE PTR [ecx+0x170007ed],bh
  40ec42:	push   es
  40ec43:	pop    esi
  40ec44:	leave  
  40ec45:	mov    BYTE PTR [edx-0x1087502],dh
  40ec4b:	jmp    0x23b9:0xe6b46d0a
  40ec52:	jo     0x40ec51
  40ec54:	add    DWORD PTR [edx+esi*4-0x7f],0x3e
  40ec59:	cli    
  40ec5a:	cmc    
  40ec5b:	lock jmp edi
  40ec5e:	(bad)  
  40ec5f:	out    0xa9,eax
  40ec61:	jecxz  0x40ecd2
  40ec63:	std    
  40ec64:	pop    esi
  40ec65:	xor    ecx,eax
  40ec67:	add    al,BYTE PTR [eax]
  40ec69:	xlat   BYTE PTR ds:[ebx]
  40ec6a:	sub    edx,0xffffff8b
  40ec6d:	mov    bh,0xfe
  40ec6f:	mov    dl,BYTE PTR [ebp-0x42]
  40ec72:	add    DWORD PTR [edx],0xffffff90
  40ec75:	dec    ecx
  40ec76:	cli    
  40ec77:	(bad)  
  40ec79:	ss add al,0x8b
  40ec7c:	push   ebp
  40ec7d:	retf   0x2e6d
  40ec80:	(bad)
  40ec84:	adc    al,0xca
  40ec86:	loop   0x40ec8f
  40ec88:	mov    edx,DWORD PTR [edi+0x15]
  40ec8b:	push   DWORD PTR [eax-0x4a]
  40ec8e:	jge    0x40ec90
  40ec90:	or     DWORD PTR [edi+0x11],0x0
  40ec94:	je     0x40ec29
  40ec96:	adc    DWORD PTR [ebx+0x18],0x83007c4a
  40ec9d:	arpl   WORD PTR [esi+0xc90a],bx
	...
  40ecaf:	add    BYTE PTR [ecx-0x17aafd48],ah
  40ecb5:	cwde   
  40ecb6:	test   bl,al
  40ecb8:	(bad)  
  40ecb9:	sbb    edx,DWORD PTR [edx-0x75]
  40ecbc:	push   ds
  40ecbd:	int3   
  40ecbe:	mov    edi,0x29c5cff
  40ecc3:	add    al,ch
  40ecc5:	pusha  
  40ecc6:	push   es
  40ecc7:	(bad)  
  40ecc8:	arpl   WORD PTR [edx+eax*1+0x371f6300],bx
  40eccf:	or     BYTE PTR [ebx-0x27],ah
  40ecd2:	or     ch,BYTE PTR [ebx]
  40ecd4:	and    ebp,DWORD PTR [edx+0x57]
  40ecd7:	leave  
  40ecd8:	and    DWORD PTR [eax-0x5b5100fe],esp
  40ecde:	stos   BYTE PTR es:[edi],al
  40ecdf:	inc    DWORD PTR [ebx+0x230ab8e3]
  40ece5:	xchg   ecx,eax
  40ece6:	or     ch,BYTE PTR [ebx]
  40ece8:	and    esi,DWORD PTR [edx+0x57]
  40eceb:	leave  
  40ecec:	and    DWORD PTR [eax+0x14a68902],ebp
  40ecf2:	mov    ecx,0xe146b74
  40ecf7:	arpl   sp,bp
  40ecf9:	mov    dl,0xbf
  40ecfb:	inc    esp
  40ecfc:	out    dx,eax
  40ecfd:	pushf  
  40ecfe:	add    al,BYTE PTR [eax]
  40ed00:	arpl   WORD PTR [ecx+0x3f],dx
  40ed03:	in     al,dx
  40ed04:	xor    edi,DWORD PTR [ecx]
  40ed06:	ds hlt 
  40ed08:	xor    edx,ebx
  40ed0a:	sub    eax,0xbc72bb08
  40ed0f:	(bad)  
  40ed10:	mov    esp,0xec3f14
	...
  40ed21:	add    BYTE PTR [eax],al
  40ed23:	sub    al,0xb6
  40ed25:	cmp    DWORD PTR [edi+esi*4-0x65],0x2e
  40ed2a:	add    al,0x58
  40ed2c:	mov    gs,WORD PTR [esi]
  40ed2e:	or     BYTE PTR [eax+0x5c],cl
  40ed31:	pop    eax
  40ed32:	pop    edi
  40ed33:	stos   BYTE PTR es:[edi],al
  40ed34:	add    al,0xab
  40ed36:	pop    es
  40ed37:	arpl   si,bx
  40ed39:	and    ebp,DWORD PTR [eax-0x7d7eb825]
  40ed3f:	call   FWORD PTR [eax+ebp*8-0xfb3cfd]
  40ed46:	or     edi,DWORD PTR [eax]
  40ed48:	lds    ebx,FWORD PTR [esi]
  40ed4a:	pop    ecx
  40ed4b:	call   0x814a:0xe803e4c6
  40ed52:	ret    0x434
  40ed55:	mov    ecx,0x5e1e3bab
  40ed5a:	mov    eax,0x8c554adb
  40ed5f:	xor    al,0xc9
  40ed61:	mov    ds:0xe8b1349f,eax
  40ed66:	add    edi,DWORD PTR [eax]
  40ed68:	cmc    
  40ed69:	imul   edi,DWORD PTR [esi],0x33
  40ed6c:	push   esi
  40ed6d:	fs ds pop ss
  40ed70:	push   esi
  40ed71:	cs imul ebx,DWORD PTR cs:[ebp-0x4ef2425b],0x71
  40ed7a:	inc    esi
  40ed7b:	adc    ebp,ebp
  40ed7d:	mov    ds:0xe20975ab,eax
  40ed82:	aad    0x70
  40ed84:	adc    eax,0x2e06
	...
  40ed95:	add    bh,ch
  40ed97:	popf   
  40ed98:	dec    eax
  40ed99:	sub    esp,esp
  40ed9b:	mov    al,0xc1
  40ed9d:	ret    
  40ed9e:	ds push eax
  40eda0:	and    ch,al
  40eda2:	push   0xbb491005
  40eda7:	mov    al,0x23
  40eda9:	mov    al,ds:0xac5384f9
  40edae:	mov    esp,0x3782e73a
  40edb3:	mov    ecx,0x84a230e8
  40edb8:	cmp    ebp,DWORD PTR [esp+eiz*4-0x1e10ffc7]
  40edbf:	xor    esp,esi
  40edc1:	jmp    0x1d400319
  40edc6:	retf   
  40edc7:	test   al,0x70
  40edc9:	adc    esp,ecx
  40edcb:	scas   eax,DWORD PTR es:[edi]
  40edcc:	sub    ch,BYTE PTR [ecx-0x5436afeb]
  40edd2:	imul   eax,DWORD PTR ds:0xb0c30483,0x73
  40edd9:	in     al,0xb7
  40eddb:	jnp    0x40eddc
  40eddd:	call   0xd9856a42
  40ede2:	or     eax,0x6776e439
  40ede7:	jl     0x40ee2d
  40ede9:	inc    ebp
  40edea:	push   ds
  40edeb:	rol    BYTE PTR [ecx],1
  40eded:	mov    ecx,0x4e682508
  40edf2:	in     al,dx
  40edf3:	jl     0x40ee39
  40edf5:	and    eax,0x72dc30d8
	...
  40ee06:	add    BYTE PTR [eax],al
  40ee08:	add    BYTE PTR [edx-0x4f],dh
  40ee0b:	jmp    0xa226:0xcf7b8b91
  40ee12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee13:	(bad)  
  40ee14:	call   0xa4cdf379
  40ee19:	sar    BYTE PTR [edi],0x8d
  40ee1c:	lods   al,BYTE PTR ds:[esi]
  40ee1d:	int3   
  40ee1e:	aas    
  40ee1f:	push   edx
  40ee20:	push   cs
  40ee21:	xor    bh,ch
  40ee23:	out    0x16,eax
  40ee25:	test   al,0xae
  40ee27:	(bad)  
  40ee28:	repnz and BYTE PTR [esp+ecx*1],dh
  40ee2c:	push   0xffffff9a
  40ee2e:	mov    ecx,0x82d674ff
  40ee33:	jl     0x40edfe
  40ee35:	pusha  
  40ee36:	cmp    ah,BYTE PTR [esi]
  40ee38:	push   0xffffff8b
  40ee3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee3b:	call   FWORD PTR [edi+ebp*2-0x50]
  40ee3f:	je     0x40ee0a
  40ee41:	or     BYTE PTR [edx],cl
  40ee43:	push   0xfd76a500
  40ee48:	jne    0x40ee10
  40ee4a:	pop    ebx
  40ee4b:	sub    dh,bh
  40ee4d:	aad    0x76
  40ee4f:	std    
  40ee50:	jne    0x40ee18
  40ee52:	pop    ebx
  40ee53:	hlt    
  40ee54:	lds    esi,FWORD PTR [bp+0x29]
  40ee58:	rol    BYTE PTR [eax+ebx*2-0x37],0xc2
  40ee5d:	xchg   BYTE PTR [ebx],al
  40ee5f:	mov    eax,DWORD PTR [ebp-0x16]
  40ee62:	sbb    bh,dh
  40ee64:	dec    ebp
  40ee65:	fiadd  WORD PTR [edx-0x20851b85]
  40ee6b:	add    eax,0x83
	...
  40ee7c:	push   edi
  40ee7d:	pop    edi
  40ee7e:	(bad)  
  40ee7f:	je     0x40ee27
  40ee81:	jnp    0x40eec6
  40ee83:	or     al,0xc5
  40ee85:	cmc    
  40ee86:	fisttp DWORD PTR [edi-0x38c87c6]
  40ee8c:	mov    ds:0xa5ff65bb,al
  40ee91:	sub    al,BYTE PTR [eax]
  40ee93:	add    BYTE PTR [edx],bh
  40ee95:	add    ebx,DWORD PTR [esi+0x5f]
  40ee98:	jae    0x40ee5e
  40ee9a:	or     al,BYTE PTR [eax]
  40ee9c:	(bad)  
  40ee9d:	jnp    0x40ee89
  40ee9f:	cmp    DWORD PTR [esi],0xffffffba
  40eea2:	push   ebp
  40eea3:	add    edi,0x12
  40eea6:	add    BYTE PTR [ebp+0x10],dh
  40eea9:	sub    eax,DWORD PTR [eax]
  40eeab:	add    BYTE PTR [edx],cl
  40eead:	add    ebx,DWORD PTR [edi-0x37]
  40eeb0:	dec    eax
  40eeb1:	(bad)  
  40eeb2:	(bad)  
  40eeb3:	(bad)  
  40eeb4:	mov    bh,0x12
  40eeb6:	sub    edx,edx
  40eeb8:	jno    0x40eeff
  40eeba:	adc    bh,dh
  40eebc:	scas   eax,DWORD PTR es:[edi]
  40eebd:	dec    esi
  40eebe:	gs inc ecx
  40eec0:	retf   0x4381
  40eec3:	lock xor BYTE PTR [ecx],cl
  40eec6:	push   DWORD PTR [ebp-0x56]
  40eec9:	js     0x40ef3e
  40eecb:	or     BYTE PTR [ebx-0x3c],ah
  40eece:	sbb    DWORD PTR [edi-0x4c],ebx
  40eed1:	mov    edi,0x9c537c80
  40eed6:	sub    eax,0x289d390c
  40eedb:	fs pushf 
  40eedd:	icebp  
  40eede:	or     ebp,eax
	...
  40eeec:	add    BYTE PTR [eax],al
  40eeee:	add    BYTE PTR [ebx-0x1],ch
  40eef1:	mov    ah,0xfe
  40eef3:	mov    WORD PTR [ecx],ss
  40eef5:	adc    bh,bh
  40eef7:	push   cs
  40eef8:	mov    ah,0xaa
  40eefa:	dec    edx
  40eefb:	add    DWORD PTR [edi-0x7fe1774c],edx
  40ef01:	mov    ah,0x74
  40ef03:	push   edi
  40ef04:	xchg   DWORD PTR [esi],ebp
  40ef06:	or     BYTE PTR [ebx-0x34],bh
  40ef09:	and    bh,bh
  40ef0b:	pop    esp
  40ef0c:	aaa    
  40ef0d:	das    
  40ef0e:	adc    al,0x54
  40ef10:	mov    ecx,0xba66e80a
  40ef15:	mov    bl,0xfe
  40ef17:	fisubr DWORD PTR [eax-0x46]
  40ef1a:	(bad)  
  40ef1b:	mov    dh,0xb0
  40ef1d:	mov    bl,0x74
  40ef1f:	imul   eax,DWORD PTR [ebp+ebp*4+0x60],0x2c
  40ef24:	inc    edi
  40ef25:	mov    ch,0x74
  40ef27:	dec    edi
  40ef28:	out    dx,eax
  40ef29:	or     BYTE PTR cs:[ebx],cl
  40ef2c:	aad    0x20
  40ef2e:	call   DWORD PTR [ebx+eiz*1]
  40ef31:	aas    
  40ef32:	adc    al,0xe0
  40ef34:	mov    ds:0x1b577402,eax
  40ef39:	aaa    
  40ef3a:	cld    
  40ef3b:	outs   dx,BYTE PTR ds:[esi]
  40ef3c:	nop
  40ef3d:	add    eax,0xff007683
  40ef42:	jae    0x40efa8
  40ef44:	rol    edx,cl
  40ef46:	pop    esi
  40ef47:	sbb    bl,dl
  40ef49:	sldt   WORD PTR [edx]
  40ef4c:	inc    eax
  40ef4d:	push   ds
  40ef4e:	inc    ecx
  40ef4f:	arpl   WORD PTR ds:0x38ac,cx
	...
  40ef61:	add    BYTE PTR [esi],ah
  40ef63:	add    eax,0xda5c2de1
  40ef68:	test   al,0x54
  40ef6a:	stos   BYTE PTR es:[edi],al
  40ef6b:	ret    0x3fc
  40ef6e:	loopne 0x40ef9f
  40ef70:	int    0xfe
  40ef72:	aaa    
  40ef73:	inc    ebp
  40ef75:	cs dec edi
  40ef77:	scas   al,BYTE PTR es:[edi]
  40ef78:	xor    ecx,DWORD PTR [ebx+ecx*4]
  40ef7b:	add    DWORD PTR [edi-0x4b],0xffffff95
  40ef7f:	jnp    0x40efa4
  40ef81:	int3   
  40ef82:	add    al,0x5
  40ef84:	jmp    0xe5de528b
  40ef89:	sbb    al,0x7c
  40ef8b:	lods   eax,DWORD PTR ds:[esi]
  40ef8c:	pop    edi
  40ef8d:	outs   dx,DWORD PTR ds:[esi]
  40ef8f:	(bad)  [ebp-0x451ad58]
  40ef95:	pcmpgtb mm6,QWORD PTR [edi]
  40ef98:	icebp  
  40ef99:	stos   DWORD PTR es:[edi],eax
  40ef9a:	out    dx,al
  40ef9b:	es jbe 0x40ef52
  40ef9e:	jmp    0x60cb64f5
  40efa3:	outs   dx,DWORD PTR ds:[esi]
  40efa4:	lods   eax,DWORD PTR ds:[esi]
  40efa5:	clc    
  40efa6:	(bad)  
  40efa7:	lods   eax,DWORD PTR ds:[esi]
  40efa8:	fisubr DWORD PTR [edx-0x7f02bd17]
  40efae:	ins    BYTE PTR es:[edi],dx
  40efaf:	add    eax,0x332c04d4
  40efb4:	cmp    eax,0x3e2422ab
  40efb9:	mov    ah,0x49
  40efbb:	lds    edx,FWORD PTR [ebp-0x16eddd36]
  40efc1:	or     BYTE PTR [edi+0x4eba9],0x0
	...
  40efd4:	add    dh,bl
  40efd6:	fs call 0x162152df
  40efdc:	test   al,0x86
  40efde:	xor    BYTE PTR [ebx+0x4301d9af],0x0
  40efe5:	sahf   
  40efe6:	mov    ch,0x92
  40efe8:	add    esi,DWORD PTR [ebx]
  40efea:	lods   al,BYTE PTR ds:[esi]
  40efeb:	(bad)  
  40efec:	jnp    0x40f056
  40efee:	popf   
  40efef:	daa    
  40eff0:	(bad)  
  40eff1:	pop    ss
  40eff2:	lods   al,BYTE PTR ds:[esi]
  40eff3:	(bad)  
  40eff4:	pop    esp
  40eff5:	imul   ebp,DWORD PTR [esp+esi*2+0x6116d8f1],0xffffffd6
  40effd:	lock jge 0x40f044
  40f000:	popf   
  40f001:	dec    ebp
  40f002:	add    eax,0xac4b3cff
  40f007:	je     0x40effa
  40f009:	clc    
  40f00a:	cmp    eax,0x7fd0b6f8
  40f00f:	dec    esp
  40f010:	aad    0xe5
  40f012:	in     eax,dx
  40f013:	call   FWORD PTR [ebx]
  40f015:	pusha  
  40f016:	lods   al,BYTE PTR ds:[esi]
  40f017:	je     0x40efae
  40f019:	fistp  WORD PTR [edx]
  40f01b:	xchg   si,ax
  40f01d:	mov    al,0xdf
  40f01f:	mov    edi,0x13c6ae2e
  40f024:	jmp    0x7e5921da
  40f029:	call   0x74ab:0x14fcff11
  40f030:	fst    QWORD PTR [ecx]
  40f032:	xor    DWORD PTR [eax],ecx
  40f034:	push   ecx
  40f035:	in     al,dx
  40f036:	test   eax,0x5efe
	...
  40f047:	add    BYTE PTR [esp+ebp*2],bh
  40f04a:	je     0x40f032
  40f04c:	icebp  
  40f04d:	xor    ah,dh
  40f04f:	inc    ecx
  40f050:	cwde   
  40f051:	and    edi,edi
  40f053:	inc    esi
  40f054:	add    al,0x6c
  40f056:	pop    esi
  40f057:	xor    BYTE PTR ds:0x5ae0018,ah
  40f05d:	sub    eax,edi
  40f05f:	mov    ebx,0x174aae3
  40f064:	shl    BYTE PTR [eax],1
  40f066:	adc    al,0x1e
  40f068:	cmp    bh,BYTE PTR [ebp-0x550b6302]
  40f06e:	je     0x40f051
  40f070:	enter  0xfe21,0x0
  40f074:	pop    ebp
  40f075:	js     0x40f080
  40f077:	ror    ch,0x7c
  40f07a:	push   eax
  40f07b:	add    edx,ecx
  40f07d:	pop    es
  40f07e:	push   DWORD PTR [ebp-0x2a]
  40f081:	(bad)  
  40f082:	adc    al,0x66
  40f084:	mov    ebp,0x7dc02976
  40f089:	push   0xffffffc0
  40f08b:	adc    al,0xca
  40f08d:	mov    BYTE PTR [ecx+eax*1],bh
  40f090:	mov    edx,0x9e7d8307
  40f095:	add    al,0xf
  40f097:	test   DWORD PTR [esi+0x61000000],edx
  40f09d:	js     0x40f086
  40f09f:	and    al,0x7b
  40f0a1:	pop    es
  40f0a2:	add    BYTE PTR [ebx+0x4896d47],cl
  40f0a8:	add    BYTE PTR [ebx],al
  40f0aa:	inc    ebp
  40f0ab:	lock add BYTE PTR [eax],al
	...
  40f0ba:	add    BYTE PTR [eax+0x1],ah
  40f0bd:	push   eax
  40f0be:	call   DWORD PTR [edi-0x57]
  40f0c1:	out    0x74,al
  40f0c3:	aas    
  40f0c4:	js     0x40f0c3
  40f0c6:	push   0x4a
  40f0c8:	js     0x40f13d
  40f0ca:	adc    al,0xcd
  40f0cc:	in     eax,dx
  40f0cd:	pop    es
  40f0ce:	call   0x3e606c
  40f0d3:	rol    DWORD PTR [ebp+0x14],1
  40f0d6:	add    DWORD PTR [ebx-0x72f08aff],0xffffffed
  40f0dd:	repz call 0x3fce65
  40f0e3:	push   ecx
  40f0e4:	rcr    DWORD PTR [ebp-0x37],0x48
  40f0e8:	adc    al,BYTE PTR [eax]
  40f0ea:	or     edi,DWORD PTR [eax-0xe]
  40f0ed:	add    al,0xe9
  40f0ef:	dec    esi
  40f0f0:	push   es
  40f0f1:	add    BYTE PTR [eax],al
  40f0f3:	xchg   ebx,eax
  40f0f4:	cmp    eax,0x780a6aec
  40f0f9:	jae    0x40f10f
  40f0fb:	arpl   WORD PTR [ebx],dx
  40f0fd:	cmp    BYTE PTR [eax],cl
  40f0ff:	sti    
  40f100:	(bad)  
  40f101:	mov    ecx,0x4037e4fe
  40f106:	adc    al,0xe0
  40f108:	lds    eax,FWORD PTR [edx]
  40f10a:	jne    0x40f170
  40f10c:	mov    bl,0x36
  40f10e:	hlt    
  40f10f:	mov    ebx,0xc4ff2854
  40f114:	pop    ss
  40f115:	les    ebx,FWORD PTR [esi-0x56]
  40f118:	pop    esi
  40f119:	pop    ss
  40f11a:	add    BYTE PTR [ecx+ecx*1+0x6568],dh
	...
  40f12d:	add    BYTE PTR [edx],ah
  40f12f:	pushf  
  40f130:	jg     0x40f176
  40f132:	mov    ebx,0xe0e84737
  40f137:	aam    0xff
  40f139:	rol    BYTE PTR [ebx-0x352e2467],0x5b
  40f140:	add    eax,DWORD PTR [eax]
  40f142:	arpl   WORD PTR [ebx-0x4c747d4e],cx
  40f148:	jns    0x40f18e
  40f14a:	sbb    DWORD PTR [edi],0x1f
  40f14d:	call   0xec881892
  40f152:	sub    cl,bl
  40f154:	fwait
  40f155:	jbe    0x40f1b8
  40f157:	xchg   edi,eax
  40f158:	fisubr DWORD PTR [edx]
  40f15a:	xor    DWORD PTR [edi],esp
  40f15c:	inc    edi
  40f15d:	in     al,dx
  40f15e:	js     0x40f141
  40f160:	mov    ds:0x8554968a,eax
  40f165:	rol    BYTE PTR [eax+0x2c039b1f],0x4d
  40f16c:	add    eax,0x57254355
  40f171:	in     al,0xd8
  40f173:	pop    eax
  40f174:	call   0xe805:0x3540a63a
  40f17b:	pop    eax
  40f17c:	mov    ds:0x472760ea,al
  40f181:	in     al,0x4
  40f183:	add    eax,0x2ffc179c
  40f188:	or     eax,0xe12ff454
  40f18d:	fwait
  40f18e:	ret    
  40f18f:	mov    cl,0xd
  40f191:	mov    cl,0x0
	...
  40f19f:	add    BYTE PTR [eax],al
  40f1a1:	pop    ecx
  40f1a2:	lds    edi,FWORD PTR [ebx+0x0]
  40f1a5:	fsubr  QWORD PTR [edi]
  40f1a7:	cmc    
  40f1a8:	fwait
  40f1a9:	jbe    0x40f1cb
  40f1ab:	div    BYTE PTR [eax-0x45723a87]
  40f1b1:	mov    ds:0x277ae910,al
  40f1b6:	leave  
  40f1b7:	jno    0x40f18c
  40f1b9:	out    0x3f,eax
  40f1bb:	mov    ebp,0xb13fde53
  40f1c0:	push   ebx
  40f1c1:	adc    DWORD PTR [ebp-0x5662539e],ebx
  40f1c7:	outs   dx,DWORD PTR ds:[esi]
  40f1c8:	inc    esi
  40f1c9:	mov    bl,0xa9
  40f1cb:	cmp    edx,eax
  40f1cd:	test   BYTE PTR [edx],ah
  40f1cf:	or     eax,0x238585b1
  40f1d4:	aam    0x7c
  40f1d6:	xor    eax,0xccf784fc
  40f1db:	call   0x13eb4617
  40f1e0:	fsub   DWORD PTR [ebp+0x2f]
  40f1e3:	mov    eax,ds:0x7df9d7b0
  40f1e8:	imul   ebp,DWORD PTR ss:[eax+0x334c0c1b],0xffffff91
  40f1f0:	fwait
  40f1f1:	bound  ebp,QWORD PTR [ebp+eiz*2-0x24135a50]
  40f1f8:	stos   DWORD PTR es:[edi],eax
  40f1f9:	cmp    DWORD PTR gs:[ecx],0xffffffb1
  40f1fd:	sub    eax,0x2f364da9
  40f202:	sahf   
  40f203:	sub    al,0x27
	...
  40f211:	add    BYTE PTR [eax],al
  40f213:	add    BYTE PTR [ecx+ebp*4],bl
  40f216:	add    BYTE PTR [edx],0x63
  40f219:	add    eax,0xbeb3e900
  40f21e:	rcl    ebp,0x60
  40f221:	push   edx
  40f222:	mov    edx,DWORD PTR ds:0xf174a89b
  40f228:	fdiv   DWORD PTR [ecx+esi*2-0x22df4cea]
  40f22f:	stos   BYTE PTR es:[edi],al
  40f230:	mov    eax,ds:0xd87cff05
  40f235:	mov    al,ds:0x560b63c
  40f23a:	or     ebp,DWORD PTR [ecx]
  40f23c:	xchg   ebp,eax
  40f23d:	add    bl,BYTE PTR [edi+0x20]
  40f240:	sahf   
  40f241:	add    BYTE PTR [eax],al
  40f243:	scas   eax,DWORD PTR es:[edi]
  40f244:	addr16 add eax,0xa0b754ff
  40f24a:	rcr    BYTE PTR [ebx-0x4],cl
  40f24d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f24e:	mov    esi,0x4620ae
  40f253:	(bad)  
  40f254:	pop    edx
  40f255:	std    
  40f256:	push   esi
  40f257:	rcr    DWORD PTR [esi-0x11],1
  40f25a:	(bad)  
  40f25b:	call   0xe4b55ae9
  40f260:	adc    eax,0x60f1c1be
  40f265:	test   eax,0xa706a932
  40f26a:	(bad)  
  40f26b:	xchg   esi,eax
  40f26c:	mov    esp,0x5dd1adb6
  40f271:	xor    ah,al
  40f273:	xchg   BYTE PTR [edx+0x5e7fd],bl
	...
  40f285:	add    BYTE PTR [eax],al
  40f287:	pop    edx
  40f288:	test   al,0xfe
  40f28a:	loop   0x40f2ac
  40f28c:	xor    DWORD PTR ds:0x7c6060e,eax
  40f292:	jmp    0xa884eaef
  40f297:	pusha  
  40f298:	test   al,0x74
  40f29a:	loope  0x40f264
  40f29c:	mov    ebx,0xfc60e934
  40f2a1:	mov    edi,0xfda8df00
  40f2a6:	jne    0x40f2ae
  40f2a8:	daa    
  40f2a9:	add    al,0xac
  40f2ab:	sbb    al,0x41
  40f2ad:	add    BYTE PTR [eax+0x30],ch
  40f2b0:	inc    eax
  40f2b1:	inc    ecx
  40f2b2:	add    BYTE PTR [ebp-0x12],al
  40f2b5:	pop    es
  40f2b6:	call   0x3fa153
  40f2bb:	add    esp,eax
  40f2bd:	jae    0x40f2c8
  40f2bf:	push   ebp
  40f2c0:	out    dx,al
  40f2c1:	or     ecx,DWORD PTR [edi+0x416533cf]
  40f2c7:	retf   0x290b
  40f2ca:	inc    esp
  40f2cb:	sti    
  40f2cc:	add    edi,edi
  40f2ce:	jne    0x40f292
  40f2d0:	mov    edx,DWORD PTR [esi+0xb03ca35]
  40f2d6:	ror    BYTE PTR [edi],0xaa
  40f2d9:	std    
  40f2da:	jne    0x40f2a2
  40f2dc:	es add al,0xb4
  40f2df:	sbb    al,0x42
  40f2e1:	add    BYTE PTR [eax+0x38b],bh
  40f2e7:	jne    0x40f353
  40f2e9:	ror    BYTE PTR [eax],0x0
	...
  40f2f8:	add    BYTE PTR [eax],al
  40f2fa:	jp     0x40f348
  40f2fc:	mov    ebp,esp
  40f2fe:	stc    
  40f2ff:	mov    edi,0x93d56f2
  40f304:	fld    DWORD PTR [ebx+0x4b]
  40f307:	add    edi,edi
  40f309:	jne    0x40f28d
  40f30b:	mov    eax,DWORD PTR [esi+esi*1-0x3ff4fc86]
  40f312:	pop    edi
  40f313:	add    DWORD PTR [edi+0x5e],ebx
  40f316:	adc    eax,ebp
  40f318:	add    al,BYTE PTR [eax]
  40f31a:	jp     0x40f346
  40f31c:	out    dx,eax
  40f31d:	mov    esi,DWORD PTR [edi]
  40f31f:	stos   DWORD PTR es:[edi],eax
  40f320:	jmp    0x3cc3e126
  40f325:	add    BYTE PTR [edi],cl
  40f327:	pop    ebp
  40f328:	mov    ds:0x41f36368,al
  40f32d:	inc    ecx
  40f32e:	arpl   WORD PTR [edi],si
  40f330:	cmp    BYTE PTR [eax],cl
  40f332:	or     edi,DWORD PTR [ebp-0x4beb000c]
  40f338:	ret    0x6574
  40f33b:	(bad)  
  40f33c:	dec    esp
  40f33d:	leave  
  40f33e:	and    DWORD PTR [ecx-0x4b8174fe],esp
  40f344:	cdq    
  40f345:	and    ebx,esp
  40f347:	(bad)  
  40f348:	sti    
  40f349:	jae    0x40f395
  40f34b:	sbb    al,0xee
  40f34d:	or     al,0x6f
  40f34f:	mov    al,0x82
  40f351:	imul   ebp,DWORD PTR ds:[eax],0x63947ffe
  40f358:	ss or  ah,bl
  40f35b:	outs   dx,DWORD PTR ds:[esi]
  40f35c:	dec    edi
  40f35d:	je     0x40f35f
	...
  40f36b:	add    BYTE PTR [eax],al
  40f36d:	pop    esi
  40f36e:	sbb    al,0xee
  40f370:	pop    edi
  40f371:	ss fwait
  40f373:	les    eax,FWORD PTR [esi]
  40f375:	sbb    edi,0xffffff83
  40f378:	arpl   WORD PTR ds:[ecx-0x35],cx
  40f37c:	(bad)  
  40f37d:	push   ds
  40f37e:	mov    eax,0x9c630003
  40f383:	ret    
  40f384:	inc    esp
  40f385:	fwait
  40f386:	pushf  
  40f387:	add    al,BYTE PTR [eax]
  40f389:	arpl   WORD PTR [ebx],sp
  40f38b:	das    
  40f38c:	or     BYTE PTR [eax-0x1d],bh
  40f38f:	cmp    DWORD PTR [esi],0x44
  40f392:	or     ecx,ebx
  40f394:	xor    dh,0x87
  40f397:	add    esi,DWORD PTR [ebp+0x51]
  40f39a:	xchg   DWORD PTR [esi-0x8],eax
  40f39d:	bound  ebx,QWORD PTR [edx+eax*1-0x3c5f2a00]
  40f3a4:	inc    esp
  40f3a5:	push   edi
  40f3a6:	popf   
  40f3a7:	add    al,BYTE PTR [eax]
  40f3a9:	arpl   WORD PTR [ebx+0x349ef710],ax
  40f3af:	add    eax,DWORD PTR [eax]
  40f3b1:	arpl   WORD PTR ds:0xbf6936e9,ax
  40f3b7:	in     eax,0xe3
  40f3b9:	and    eax,0x63045540
  40f3be:	add    eax,0x495d83e9
  40f3c3:	mov    esp,0x41401406
  40f3c8:	cdq    
  40f3c9:	gs mov esi,0xa604abab
  40f3cf:	call   0x40f3d7
	...
  40f3e0:	loopne 0x40f409
  40f3e2:	and    eax,0x27026e03
  40f3e7:	add    eax,0xed693e43
  40f3ec:	in     al,0x30
  40f3ee:	pop    ecx
  40f3ef:	jns    0x40f450
  40f3f1:	std    
  40f3f2:	adc    DWORD PTR [eax],edx
  40f3f4:	jecxz  0x40f3db
  40f3f6:	enter  0x7536,0x85
  40f3fa:	jne    0x40f3fe
  40f3fc:	xor    DWORD PTR [eax],0xffffffd9
  40f3ff:	push   esp
  40f400:	enter  0x72fe,0x44
  40f404:	bound  edi,QWORD PTR [ebp-0x1b]
  40f407:	inc    esp
  40f408:	jecxz  0x40f3ef
  40f40a:	call   0x1e86a245
  40f40f:	inc    ebp
  40f410:	jecxz  0x40f3f7
  40f412:	call   0x23fea84d
  40f417:	mov    eax,0x3e8a58c
  40f41c:	fsubr  DWORD PTR [edi]
  40f41e:	loope  0x40f498
  40f420:	(bad)  
  40f421:	cld    
  40f422:	xchg   ecx,eax
  40f423:	loope  0x40f419
  40f425:	in     eax,0xcc
  40f427:	ss dec edi
  40f429:	mov    edi,0x2f6403ed
  40f42e:	xchg   ebp,eax
  40f42f:	push   ebp
  40f430:	dec    ebx
  40f431:	icebp  
  40f432:	xchg   BYTE PTR [ebp+edx*2+0x6536a911],ch
  40f439:	inc    esp
  40f43a:	add    BYTE PTR [edi],dl
  40f43c:	or     bh,al
  40f43e:	add    ebp,ecx
  40f440:	mov    ebx,0x66459b
	...
  40f451:	add    BYTE PTR [eax],al
  40f453:	popf   
  40f454:	cdq    
  40f455:	inc    esi
  40f456:	imul   edi,DWORD PTR [edi],0xf73073a5
  40f45c:	sbb    esp,esi
  40f45e:	mov    bh,0xf8
  40f460:	adc    dh,bh
  40f462:	inc    esi
  40f463:	mov    DWORD PTR [ebx+0x5e],0x92230
  40f46a:	pushf  
  40f46b:	mov    esi,DWORD PTR [eax+0x3ab82582]
  40f471:	push   edi
  40f472:	push   0x45
  40f474:	stc    
  40f475:	call   DWORD PTR [ecx+ebp*8+0x9c43c87]
  40f47c:	inc    esi
  40f47d:	add    cl,ch
  40f47f:	xchg   ebp,eax
  40f480:	or     ebx,DWORD PTR [edi-0x59]
  40f483:	sbb    edi,eax
  40f485:	psubsw mm1,QWORD PTR [ebx+0x49]
  40f489:	adc    al,0xb0
  40f48b:	pop    ebp
  40f48c:	jno    0x40f4f3
  40f48e:	test   al,0x60
  40f490:	adc    al,0x83
  40f492:	mov    bl,BYTE PTR [esi+0x5]
  40f495:	add    BYTE PTR [eax],ah
  40f497:	bound  edx,QWORD PTR [ebp+0x65]
  40f49a:	sub    BYTE PTR [edi+0x14],bl
  40f49d:	xor    DWORD PTR [esi+0x66],0x5
  40f4a1:	add    BYTE PTR [eax],al
  40f4a3:	bound  ebx,QWORD PTR [ecx+0x65]
  40f4a6:	sub    BYTE PTR [edi+0x14],ah
  40f4a9:	and    DWORD PTR [edx+0x5e],0x5
  40f4ad:	add    BYTE PTR [edx+eiz*1-0x67],bl
  40f4b1:	dec    edi
  40f4b2:	je     0x40f4d6
  40f4b4:	popf   
  40f4b5:	dec    edi
  40f4b6:	ins    BYTE PTR es:[edi],dx
	...
  40f4c3:	add    BYTE PTR [eax],al
  40f4c5:	add    BYTE PTR [edx],ah
  40f4c7:	mov    eax,ds:0x7072964f
  40f4cc:	sub    BYTE PTR gs:[edi-0x5c],ah
  40f4d0:	je     0x40f4d2
  40f4d2:	cmp    al,BYTE PTR [eax+0x70cdf8bc]
  40f4d8:	mov    eax,DWORD PTR [ebp-0x1e]
  40f4db:	cmp    BYTE PTR [ebp-0x72c641bb],cl
  40f4e1:	inc    ebp
  40f4e2:	call   0x40e6:0xd635ff39
  40f4e9:	add    BYTE PTR [ebp-0x1917f02a],cl
  40f4ef:	jo     0x40f4ee
  40f4f1:	dec    DWORD PTR [edi+0x7f50dc46]
  40f4f7:	inc    esi
  40f4f8:	loopne 0x40f54a
  40f4fa:	jg     0x40f542
  40f4fc:	in     al,0x50
  40f4fe:	dec    ebp
  40f4ff:	xchg   esi,eax
  40f500:	scas   al,BYTE PTR es:[edi]
  40f501:	retfw  
  40f503:	pop    es
  40f504:	push   DWORD PTR [ebp-0x16]
  40f507:	jg     0x40f491
  40f509:	clc    
  40f50a:	dec    ebp
  40f50b:	jo     0x40f50a
  40f50d:	jne    0x40f575
  40f50f:	and    BYTE PTR [esp+edx*8+0x5d],al
  40f513:	(bad)  
  40f514:	fisttp DWORD PTR [edi+0x45c5d007]
  40f51a:	push   0x9
  40f51c:	add    BYTE PTR [eax],al
  40f51e:	retf   0x441c
  40f521:	int3   
  40f522:	jp     0x40f527
  40f524:	add    DWORD PTR [edx-0x46],ebp
  40f527:	add    DWORD PTR [eax],eax
  40f529:	push   0x0
	...
  40f537:	add    BYTE PTR [eax],al
  40f539:	mov    edx,0x478d0001
  40f53e:	mov    ch,0x4e
  40f540:	push   DWORD PTR [edi+0x7a4127bc]
  40f546:	mov    ds:0xa1f60fbe,al
  40f54b:	(bad)  
  40f54c:	dec    DWORD PTR [edx-0x752f8476]
  40f552:	sahf   
  40f553:	add    BYTE PTR [eax],0x7b
  40f556:	pop    es
  40f557:	add    BYTE PTR [ebx+0x3ab7e963],cl
  40f55d:	scas   al,BYTE PTR es:[edi]
  40f55e:	mov    cl,bh
  40f560:	xchg   BYTE PTR [edi-0x53],cl
  40f563:	add    al,BYTE PTR [eax]
  40f565:	dec    edi
  40f566:	sbb    BYTE PTR [eax],dh
  40f568:	rcr    al,1
  40f56a:	cdq    
  40f56b:	(bad)  
  40f56c:	mov    ch,BYTE PTR [esi+0x3001a580]
  40f572:	xchg   ecx,eax
  40f573:	test   eax,0x40341f74
  40f578:	in     al,0x24
  40f57a:	ret    0xe7d2
  40f57d:	cmp    al,0xff
  40f57f:	add    eax,DWORD PTR [eax]
  40f581:	loopne 0x40f54c
  40f583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f584:	call   FWORD PTR [ebp+0x28]
  40f587:	mov    ecx,0x85ad04ff
  40f58c:	jl     0x40f581
  40f58e:	lods   al,BYTE PTR ds:[esi]
  40f58f:	stc    
  40f590:	sbb    DWORD PTR [edi],0xffffffad
  40f593:	add    al,BYTE PTR [eax]
  40f595:	loopne 0x40f518
  40f597:	sahf   
  40f598:	call   DWORD PTR [ebp+0x30]
  40f59b:	ins    DWORD PTR es:[edi],dx
  40f59c:	inc    DWORD PTR [eax]
	...
  40f5aa:	add    BYTE PTR [eax],al
  40f5ac:	fsubr  QWORD PTR [ecx+ebp*4+0x6cf4d774]
  40f5b3:	pusha  
  40f5b4:	int3   
  40f5b5:	mov    ds:0x9b9b447a,eax
  40f5ba:	cs cld 
  40f5bc:	mov    esp,0x2efebb19
  40f5c1:	rcr    BYTE PTR [ebx-0x573cbd21],0x67
  40f5c8:	imul   esi,eax,0x42
  40f5cb:	add    BYTE PTR [ebx-0x6b0009c0],cl
  40f5d1:	cld    
  40f5d2:	sbb    edi,DWORD PTR [eax]
  40f5d4:	daa    
  40f5d5:	in     eax,dx
  40f5d6:	add    edi,edi
  40f5d8:	push   cs
  40f5d9:	fs fwait
  40f5db:	sub    eax,0xb02ac37
  40f5e0:	mov    ds:0xfb0c1d05,eax
  40f5e5:	loope  0x40f60b
  40f5e7:	inc    ebx
  40f5e8:	arpl   WORD PTR [ebp-0x5da309e8],bp
  40f5ee:	cmp    BYTE PTR [esp+edx*4],bl
  40f5f1:	dec    ecx
  40f5f2:	sub    BYTE PTR [esp+ecx*2],al
  40f5f5:	sbb    BYTE PTR [ecx-0x17268d64],dh
  40f5fb:	add    ebp,DWORD PTR [eax-0x3b]
  40f5fe:	hlt    
  40f5ff:	or     ecx,ebx
  40f601:	dec    edx
  40f602:	lods   eax,DWORD PTR ds:[esi]
  40f603:	inc    edx
  40f604:	arpl   WORD PTR [ebp-0x5ddb0a4c],bp
  40f60a:	mov    eax,0xa849a41b
  40f60f:	add    eax,DWORD PTR [eax]
	...
  40f61d:	add    BYTE PTR [eax],al
  40f61f:	adc    al,0x18
  40f621:	xor    DWORD PTR [esi+edx*1+0x5803e8d6],ebx
  40f628:	lds    edi,FWORD PTR [ebx-0x16fa74c2]
  40f62e:	cwde   
  40f62f:	mov    dh,0xa1
  40f631:	fwait
  40f632:	test   DWORD PTR [edi+ebx*2],0xa1e5a8bb
  40f639:	fistp  DWORD PTR [ebx+0x46]
  40f63c:	inc    esp
  40f63d:	jmp    0x115245ea
  40f642:	pop    eax
  40f643:	das    
  40f644:	mov    ds:0xa14fa8fd,al
  40f649:	cmc    
  40f64a:	cs mov bh,0xa1
  40f64d:	jae    0x40f646
  40f64f:	mov    esp,0xada943b8
  40f654:	mov    eax,ds:0x17a5b453
  40f659:	shr    DWORD PTR [eax-0x3e3eeee9],0x37
  40f660:	mov    ds:0xa917a8c5,al
  40f665:	mov    ebp,0xffa1a72e
  40f66a:	cmp    edi,DWORD PTR [ebx-0x57]
  40f66d:	mov    bh,0xc
  40f66f:	retf   0xfea2
  40f672:	sbb    al,0xaf
  40f674:	test   eax,0xa2ba09f0
  40f679:	pop    esi
  40f67a:	aaa    
  40f67b:	sbb    bh,al
  40f67d:	psubsw mm4,QWORD PTR [ebp+0x6aeb8c]
	...
  40f690:	add    BYTE PTR [eax],al
  40f692:	or     al,0xa9
  40f694:	cmp    ah,0x54
  40f697:	or     cl,BYTE PTR [edi]
  40f699:	ins    BYTE PTR es:[edi],dx
  40f69a:	push   edi
  40f69b:	push   es
  40f69c:	add    cl,ch
  40f69e:	lods   eax,DWORD PTR ds:[esi]
  40f69f:	dec    ecx
  40f6a0:	hlt    
  40f6a1:	mov    ecx,0xb9f849b5
  40f6a6:	lods   eax,DWORD PTR ds:[esi]
  40f6a7:	dec    ecx
  40f6a8:	cld    
  40f6a9:	mov    ecx,0xd4ff037e
  40f6ae:	jo     0x40f65d
  40f6b0:	and    BYTE PTR [esi],bh
  40f6b2:	mov    ebx,0xb8bc829f
  40f6b7:	add    eax,0xa0b76c0f
  40f6bc:	(bad)  
  40f6bd:	jmp    0x7735108d
  40f6c2:	sub    eax,0x24f16795
  40f6c7:	inc    esi
  40f6c8:	add    BYTE PTR [esi],dl
  40f6ca:	lea    edx,[ebp-0x5f313c19]
  40f6d0:	(bad)  
  40f6d1:	repnz mov al,ds:0x6021850f
  40f6d7:	add    eax,0x997d6400
  40f6dc:	dec    edi
  40f6dd:	pop    esp
  40f6de:	jne    0x40f67d
  40f6e0:	dec    edi
  40f6e1:	je     0x40f705
  40f6e3:	mov    eax,ds:0xa05f534f
  40f6e8:	je     0x40f6e3
  40f6ea:	clc    
  40f6eb:	stos   BYTE PTR es:[edi],al
  40f6ec:	cmc    
  40f6ed:	into   
  40f6ee:	mov    esp,0xa2007c83
  40f6f3:	or     cl,BYTE PTR [edi]
  40f6f5:	test   DWORD PTR [eax],eax
	...
  40f703:	add    BYTE PTR [eax],al
  40f705:	loop   0x40f710
  40f707:	add    BYTE PTR [eax],al
  40f709:	mov    ch,0xd6
  40f70b:	repz push 0x4144d9
  40f711:	rcr    BYTE PTR [edx-0x6485ffd0],cl
  40f717:	mov    esi,0xff24cf0f
  40f71c:	dec    DWORD PTR [edx+0x1d]
  40f71f:	inc    esp
  40f720:	hlt    
  40f721:	push   0x1e
  40f723:	inc    esp
  40f724:	clc    
  40f725:	push   0x1e
  40f727:	inc    esp
  40f728:	cld    
  40f729:	pop    edx
  40f72a:	sti    
  40f72b:	add    bh,bh
  40f72d:	das    
  40f72e:	hlt    
  40f72f:	out    0xb1,eax
  40f731:	mov    WORD PTR [eax-0x3],gs
  40f734:	add    DWORD PTR [edi],0x6c
  40f737:	dec    BYTE PTR [esi]
  40f739:	pop    DWORD PTR [esi+edi*8+0x441b0aff]
  40f740:	hlt    
  40f741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f742:	cdq    
  40f743:	lea    eax,[ebp-0x6a]
  40f746:	push   ds
  40f747:	inc    esp
  40f748:	hlt    
  40f749:	ficomp DWORD PTR [esp+eax*2]
  40f74c:	clc    
  40f74d:	ficomp DWORD PTR [esp+eax*2]
  40f750:	cld    
  40f751:	stos   BYTE PTR es:[edi],al
  40f752:	std    
  40f753:	add    edi,edi
  40f755:	iret   
  40f756:	repz out 0x89,eax
  40f759:	jl     0x40f7c3
  40f75b:	std    
  40f75c:	and    edi,0x6b
  40f75f:	push   DWORD PTR [ebp+eax*1+0x5f]
  40f763:	add    ebp,DWORD PTR [esp+ebx*8+0xff0048]
	...
  40f776:	add    BYTE PTR [eax],al
  40f778:	mov    ch,0x66
  40f77a:	std    
  40f77b:	(bad)  
  40f77c:	mov    edi,0xba416513
  40f781:	data16 std 
  40f783:	inc    DWORD PTR [ebp+0x63b4035e]
  40f789:	push   eax
  40f78a:	inc    ebp
  40f78b:	add    BYTE PTR [esi+ecx*8-0x1f73015b],dl
  40f792:	scas   eax,DWORD PTR es:[edi]
  40f793:	out    0x61,eax
  40f795:	bound  esp,QWORD PTR [ebp-0x640f5b02]
  40f79b:	add    BYTE PTR [ebx-0x52],ah
  40f79e:	add    al,BYTE PTR [ebx+0x411d3a2e]
  40f7a4:	arpl   WORD PTR [edi+0x2e],di
  40f7a7:	sub    eax,esp
  40f7a9:	mov    ecx,0xaca26572
  40f7ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7af:	jae    0x40f734
  40f7b1:	sub    ebp,eax
  40f7b3:	mov    bl,0xbd
  40f7b5:	in     eax,dx
  40f7b6:	add    edi,edi
  40f7b8:	mov    bh,0xbf
  40f7ba:	sbb    dh,al
  40f7bc:	out    dx,al
  40f7bd:	in     al,dx
  40f7be:	add    ecx,DWORD PTR [ebp-0xaccb5a]
  40f7c4:	scas   al,BYTE PTR es:[edi]
  40f7c5:	push   eax
  40f7c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7c7:	je     0x40f838
  40f7c9:	aaa    
  40f7ca:	xor    BYTE PTR [eax],cl
  40f7cc:	or     esp,DWORD PTR [ebp-0x29f30156]
  40f7d2:	ror    BYTE PTR [edi],0x63
  40f7d5:	jns    0x40f850
  40f7d7:	jmp    0x40f7b9
  40f7d9:	lock xchg esi,eax
  40f7db:	inc    BYTE PTR [eax]
	...
  40f7e9:	add    BYTE PTR [eax],al
  40f7eb:	outs   dx,BYTE PTR ds:[esi]
  40f7ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7ed:	call   0x5369:0xa5e78a9c
  40f7f4:	xor    DWORD PTR [eax-0x10],eax
  40f7f7:	xor    esi,edi
  40f7f9:	das    
  40f7fa:	or     bl,cl
  40f7fc:	xchg   edi,eax
  40f7fd:	dec    edx
  40f7fe:	dec    esp
  40f800:	xchg   ebx,eax
  40f801:	ret    0x5f74
  40f804:	aad    0xc0
  40f806:	pop    es
  40f807:	arpl   WORD PTR [edx+0x6ba06812],ax
  40f80d:	inc    ebx
  40f80e:	add    dh,bl
  40f810:	add    eax,0xad14b42c
  40f815:	aad    0x45
  40f817:	pushf  
  40f818:	sahf   
  40f819:	loope  0x40f7de
  40f81b:	wbinvd 
  40f81d:	mov    al,ds:0xae0564c2
  40f822:	aas    
  40f823:	ja     0x40f829
  40f825:	jmp    0x2bd15b2d
  40f82a:	cwde   
  40f82b:	and    al,0x9e
  40f82d:	xor    edi,esp
  40f82f:	test   al,ch
  40f831:	inc    edx
  40f832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f833:	or     ch,BYTE PTR gs:[ecx+0x13826530]
  40f83a:	cwde   
  40f83b:	push   esp
  40f83c:	sbb    edi,esp
  40f83e:	fmul   DWORD PTR [esp+ecx*8]
  40f841:	stos   BYTE PTR es:[edi],al
  40f842:	cld    
  40f843:	inc    esp
  40f844:	dec    esi
  40f845:	sar    BYTE PTR [edx-0x6367f7b7],cl
  40f84b:	mov    cl,0x4
  40f84d:	sub    cl,bh
	...
  40f85b:	add    BYTE PTR [eax],al
  40f85d:	add    ah,ch
  40f85f:	pop    ss
  40f860:	pop    esi
  40f861:	dec    esp
  40f862:	loopne 0x40f800
  40f864:	out    0x2e,eax
  40f866:	pop    bp
  40f868:	call   0x6a465a70
  40f86d:	stos   DWORD PTR es:[edi],eax
  40f86e:	arpl   WORD PTR [ecx],bx
  40f870:	out    dx,eax
  40f871:	fadd   st,st(4)
  40f873:	retf   
  40f874:	sub    bh,ah
  40f876:	cld    
  40f877:	bound  ecx,QWORD PTR [esi+ebx*1+0x3f5c05a2]
  40f87e:	push   DWORD PTR [esi+eiz*1]
  40f881:	das    
  40f882:	pop    ebx
  40f883:	lods   eax,DWORD PTR ds:[esi]
  40f884:	jmp    0x40f8cf
  40f886:	fcomp  QWORD PTR [ebp+0x1963ac69]
  40f88c:	in     al,0x80
  40f88e:	aam    0x2
  40f890:	jl     0x40f88f
  40f892:	loope  0x40f8b3
  40f894:	or     eax,0x73604
  40f899:	ret    0xcca0
  40f89c:	shl    ecx,0x60
  40f89f:	nop
  40f8a0:	inc    esp
  40f8a1:	aad    0x10
  40f8a3:	sahf   
  40f8a4:	je     0x40f897
  40f8a6:	clc    
  40f8a7:	stos   BYTE PTR es:[edi],al
  40f8a8:	pop    eax
  40f8a9:	(bad)  
  40f8aa:	mov    edi,0x3ce8f782
  40f8af:	or     BYTE PTR [ebx+0x61862c1],al
  40f8b5:	push   0x45
  40f8b7:	mov    cl,0xff
  40f8b9:	cmp    esi,DWORD PTR [ebp-0x16]
  40f8bc:	mov    edi,0x5a2a0
  40f8c1:	je     0x40f8c3
	...
  40f8cf:	add    BYTE PTR [eax],al
  40f8d1:	and    eax,0x8d9e4fb1
  40f8d6:	or     eax,0x9ca9a0e8
  40f8db:	(bad)  
  40f8dc:	loop   0x40f8fe
  40f8de:	adc    al,BYTE PTR [esi]
  40f8e0:	push   0x7d
  40f8e2:	test   eax,0xf03ef3ff
  40f8e7:	mov    edi,0x522a0
  40f8ec:	pop    esp
  40f8ed:	ins    DWORD PTR es:[edi],dx
  40f8ee:	test   eax,0xd75664f
  40f8f3:	call   0xfedda284
  40f8f8:	push   0xffffffc8
  40f8fa:	fdiv   QWORD PTR [edi+eiz*8-0x1d]
  40f8fe:	sbb    esp,ebp
  40f900:	jmp    0x296bfc3a
  40f905:	mov    ecx,0x6de907c6
  40f90a:	inc    ecx
  40f90b:	in     al,dx
  40f90c:	cdq    
  40f90d:	(bad)  
  40f90e:	adc    DWORD PTR [eax],ecx
  40f910:	adc    eax,edx
  40f912:	cmp    eax,0x94e31eff
  40f917:	pop    ds
  40f918:	pushf  
  40f919:	(bad)  
  40f91a:	xchg   DWORD PTR [ebp+edi*8+0x61],edi
  40f91e:	adc    al,BYTE PTR [esi]
  40f920:	add    BYTE PTR [ecx-0x4d3d3838],dh
  40f926:	or     BYTE PTR [ebp-0xc7a1bb],cl
  40f92c:	jne    0x40f8f0
  40f92e:	xor    BYTE PTR [ecx+0x59],0xbd
  40f932:	push   0xf881
	...
  40f943:	add    BYTE PTR [edx-0x2],ch
  40f946:	add    eax,0xfe552f83
  40f94b:	je     0x40f8d1
  40f94d:	stos   DWORD PTR es:[edi],eax
  40f94e:	mov    esi,0x9b8c9
  40f953:	lea    eax,[edi+0x55]
  40f956:	dec    esi
  40f957:	push   0x6a
  40f959:	push   0xe8a20873
  40f95e:	pop    eax
  40f95f:	(bad)  
  40f960:	mov    ebp,0x9aec4376
  40f965:	push   0x57e20873
  40f96a:	push   esi
  40f96b:	(bad)  
  40f96c:	fld    QWORD PTR [ebx+0xb4801f6]
  40f972:	cmp    eax,0x49
  40f975:	inc    DWORD PTR ds:0xfe6c2f83
  40f97b:	je     0x40f9c1
  40f97d:	stos   DWORD PTR es:[edi],eax
  40f97e:	mov    esi,0x978c9
  40f983:	mov    ds:0x40eef2,eax
  40f988:	jg     0x40f9d8
  40f98a:	in     al,dx
  40f98b:	push   eax
  40f98c:	and    BYTE PTR [eax+0x701275fd],dh
  40f992:	dec    eax
  40f993:	pop    ecx
  40f994:	cmp    eax,0x75c56668
  40f999:	inc    ecx
  40f99a:	add    BYTE PTR [ebp+0x6a4e6bc7],cl
  40f9a0:	sti    
  40f9a1:	data16 jae 0x40f9b0
  40f9a4:	jge    0x40f9a4
  40f9a6:	pop    es
  40f9a7:	call   0x40f9ac
	...
  40f9b4:	add    BYTE PTR [eax],al
  40f9b6:	add    BYTE PTR [ebx-0x7e],ah
  40f9b9:	cwde   
  40f9ba:	dec    ah
  40f9bc:	in     al,0xc5
  40f9be:	pop    es
  40f9bf:	arpl   WORD PTR [ecx-0x73],di
  40f9c2:	jmp    0x40f9a4
  40f9c4:	loope  0x40f965
  40f9c6:	mov    WORD PTR [esi],ds
  40f9c8:	xchg   edx,eax
  40f9c9:	xor    ch,al
  40f9cb:	cmp    dh,BYTE PTR [ecx-0x5f]
  40f9ce:	(bad)  
  40f9cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9d0:	cmp    BYTE PTR [eax-0x5555e902],ah
  40f9d6:	dec    esi
  40f9d7:	sub    al,0xb3
  40f9d9:	mov    eax,ds:0x1331a30a
  40f9de:	dec    DWORD PTR [esi]
  40f9e0:	xchg   esi,eax
  40f9e1:	mov    eax,ds:0xddb57f74
  40f9e6:	std    
  40f9e7:	je     0x40fa3b
  40f9e9:	or     eax,0xa1adf6c0
  40f9ee:	je     0x40fa57
  40f9f0:	jne    0x40fa14
  40f9f2:	push   ebp
  40f9f3:	pop    esp
  40f9f4:	jl     0x40f9c1
  40f9f6:	shl    DWORD PTR [edi-0x54],0x37
  40f9fa:	mov    edi,DWORD PTR [edi]
  40f9fc:	mov    WORD PTR [edi],ss
  40f9fe:	or     al,0x3b
  40fa00:	pusha  
  40fa01:	and    al,0xff
  40fa03:	cmp    al,0x98
  40fa05:	ret    0x8073
  40fa08:	adc    ebx,DWORD PTR [eax]
  40fa0a:	adc    BYTE PTR [ebx+0x2460cc84],dl
  40fa10:	and    al,0x33
  40fa12:	push   0x4266eb
  40fa17:	adc    al,0xba
  40fa19:	cli    
  40fa1a:	inc    BYTE PTR [eax]
	...
  40fa28:	add    BYTE PTR [eax],al
  40fa2a:	xchg   esi,eax
  40fa2b:	nop
  40fa2c:	xor    bh,bh
  40fa2e:	mov    ss,WORD PTR [edx+ebp*4-0x5e241c1b]
  40fa35:	out    0xb6,eax
  40fa37:	jno    0x40f9da
  40fa39:	(bad)  
  40fa3a:	sbb    ch,bh
  40fa3c:	idiv   bh
  40fa3e:	pop    DWORD PTR ds:0x544af72
  40fa44:	jmp    0x466f10fb
  40fa49:	inc    esi
  40fa4a:	and    al,BYTE PTR ds:0x2f57180e
  40fa50:	jecxz  0x40f9f4
  40fa52:	aaa    
  40fa53:	or     eax,0x9ab55311
  40fa58:	cmc    
  40fa59:	sub    ah,BYTE PTR [ebx+0x5]
  40fa5c:	(bad)  
  40fa5d:	pusha  
  40fa5e:	cmp    al,0x5d
  40fa60:	sub    DWORD PTR [ebx+0x63],eax
  40fa63:	call   0x17d5:0xff091053
  40fa6a:	pop    ebx
  40fa6b:	lods   eax,DWORD PTR ds:[esi]
  40fa6c:	outs   dx,DWORD PTR ds:[esi]
  40fa6d:	mov    eax,ds:0x4509a85
  40fa72:	arpl   WORD PTR [edx+0x46c42c7e],bp
  40fa78:	sub    BYTE PTR [esp+ebp*2],al
  40fa7b:	adc    ch,bl
  40fa7d:	sub    eax,0xc1b9a47
  40fa82:	dec    ebx
  40fa83:	xchg   DWORD PTR [ebp-0x16d2aa5f],ebx
  40fa89:	add    edi,DWORD PTR [ebx+ebx*2]
  40fa8c:	add    BYTE PTR [eax+eax*1+0x0],bl
	...
  40fa9c:	add    BYTE PTR [ecx-0x485f16bc],ah
  40faa2:	or     DWORD PTR [ebx],edx
  40faa4:	add    BYTE PTR [eax+edx*1],dh
  40faa7:	loope  0x40fa54
  40faa9:	mov    ecx,0xbca16d9a
  40faae:	add    eax,0x2cdeb0e9
  40fab3:	mov    es,WORD PTR [ebp-0x5e]
  40fab6:	add    eax,0x2f5f1756
  40fabb:	or     ah,BYTE PTR [ecx+0x38510d8f]
  40fac1:	cld    
  40fac2:	cdq    
  40fac3:	cmp    eax,0x5632c
  40fac8:	inc    esi
  40fac9:	and    DWORD PTR [edx],0x5a1aab8
  40facf:	call   FWORD PTR [esp+ebp*2+0x6c1e232f]
  40fad6:	or     eax,0x9b03d4e8
  40fadb:	(bad)  
  40fadc:	and    BYTE PTR [ebp-0x1063ffff],bl
  40fae2:	lods   eax,DWORD PTR ds:[esi]
  40fae3:	and    BYTE PTR ds:0x83002c03,0x96
  40faea:	call   0xe65a:0x47f8e174
  40faf1:	ret    
  40faf2:	mov    WORD PTR [ebp+ebx*8+0x48],es
  40faf6:	xor    eax,0x9a672844
  40fafb:	je     0x40fade
  40fafd:	mov    eax,0xc6ff48
	...
  40fb0e:	add    BYTE PTR [eax],al
  40fb10:	ret    
  40fb11:	call   0xc108:0x10c3bd74
  40fb18:	dec    ecx
  40fb19:	aas    
  40fb1a:	jmp    FWORD PTR [esi-0x16fc3c67]
  40fb20:	xchg   ebp,eax
  40fb21:	mov    ebx,gs
  40fb23:	push   0x1c
  40fb25:	popf   
  40fb26:	imul   ebp,ecx,0x14fed47e
  40fb2c:	push   edi
  40fb2d:	lods   eax,DWORD PTR ds:[esi]
  40fb2e:	sbb    al,0x23
  40fb30:	add    bl,BYTE PTR [eax+0x21032488]
  40fb36:	pop    edi
  40fb37:	sub    eax,0xf4ff05a0
  40fb3c:	pop    eax
  40fb3d:	lods   eax,DWORD PTR ds:[esi]
  40fb3e:	sbb    esp,DWORD PTR [esi-0x3d]
  40fb41:	xchg   edi,eax
  40fb42:	(bad)  
  40fb43:	aam    0xf4
  40fb45:	xchg   edi,eax
  40fb46:	je     0x40fb29
  40fb48:	mov    eax,0xc34e5a40
  40fb4d:	int    0xc1
  40fb4f:	add    BYTE PTR [esi],cl
  40fb51:	add    eax,0x81a68b55
  40fb56:	ret    0x20f8
  40fb59:	add    eax,0xef35346a
  40fb5e:	pop    es
  40fb5f:	call   0x3fd6da
  40fb64:	push   ebx
  40fb65:	aas    
  40fb66:	cld    
  40fb67:	push   0x4140e3
  40fb6c:	push   ebp
  40fb6d:	out    dx,eax
  40fb6e:	pop    es
  40fb6f:	call   0x3e61c5
	...
  40fb80:	add    BYTE PTR [eax],al
  40fb82:	add    al,dl
  40fb84:	add    al,0x68
  40fb86:	mov    esi,edi
  40fb88:	inc    ebx
  40fb89:	add    BYTE PTR [eax+0x2f],ch
  40fb8c:	inc    eax
  40fb8d:	inc    ecx
  40fb8e:	add    BYTE PTR [ebp+0x4b2949be],al
  40fb94:	add    eax,ebp
  40fb96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb97:	push   ebp
  40fb98:	js     0x40fb97
  40fb9a:	or     edi,DWORD PTR [edx+0x4f893efd]
  40fba0:	jns    0x40fc08
  40fba2:	mov    al,ah
  40fba4:	inc    ecx
  40fba5:	add    BYTE PTR [eax+0x7a],ch
  40fba8:	add    al,0xef
  40fbaa:	mov    esi,0x41422822
  40fbaf:	dec    edx
  40fbb0:	ja     0x40fc25
  40fbb2:	clc    
  40fbb3:	cmc    
  40fbb4:	std    
  40fbb5:	pop    es
  40fbb6:	call   0x3ff485
  40fbbb:	bound  ecx,QWORD PTR [ecx-0x13b5bf48]
  40fbc1:	(bad)  
  40fbc2:	jmp    ebp
  40fbc4:	ss addr16 mov eax,0xff004279
  40fbcb:	das    
  40fbcc:	jl     0x40fbcb
  40fbce:	jne    0x40fbe2
  40fbd0:	ins    BYTE PTR es:[edi],dx
  40fbd1:	je     0x40fc52
  40fbd3:	mov    ch,0x78
  40fbd5:	std    
  40fbd6:	jne    0x40fc3b
  40fbd8:	lods   al,BYTE PTR ss:[esi]
  40fbda:	dec    ecx
  40fbdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbdc:	inc    edi
  40fbdd:	lahf   
  40fbde:	(bad)  
  40fbdf:	jbe    0x40fc23
  40fbe1:	lahf   
  40fbe2:	je     0x40fc4f
  40fbe4:	ss popa 
  40fbe6:	pop    eax
	...
  40fbf3:	add    BYTE PTR [eax],al
  40fbf5:	add    ah,ch
  40fbf7:	into   
  40fbf8:	int3   
  40fbf9:	rcr    DWORD PTR [edi-0x52],0x37
  40fbfd:	mov    ecx,edi
  40fbff:	sub    cl,al
  40fc01:	sti    
  40fc02:	dec    ecx
  40fc03:	scas   al,BYTE PTR es:[edi]
  40fc04:	sub    BYTE PTR ds:0xe80a78cc,dh
  40fc0a:	inc    edx
  40fc0b:	push   ebp
  40fc0c:	popf   
  40fc0d:	(bad)  
  40fc0e:	jmp    0x4361:0xce679e68
  40fc15:	add    BYTE PTR [eax+ebx*1-0x57bc17f5],ch
  40fc1c:	popf   
  40fc1d:	(bad)  
  40fc1e:	pushf  
  40fc1f:	cmp    BYTE PTR [eax-0x5569f102],ah
  40fc25:	mov    ebp,DWORD PTR [edx]
  40fc27:	scas   eax,DWORD PTR es:[edi]
  40fc28:	popf   
  40fc29:	enter  0xa1a1,0x2
  40fc2d:	push   ebp
  40fc2e:	call   0x78047de4
  40fc33:	xor    eax,DWORD PTR [edx+ebp*2]
  40fc36:	xor    eax,0x7b08174f
  40fc3b:	popf   
  40fc3c:	cmp    edi,edi
  40fc3e:	pop    esp
  40fc3f:	push   ss
  40fc40:	dec    eax
  40fc41:	cld    
  40fc42:	retf   
  40fc43:	push   ss
  40fc44:	inc    edi
  40fc45:	inc    ecx
  40fc46:	arpl   WORD PTR [edi+0x17],bp
  40fc49:	or     BYTE PTR [ebx],bh
  40fc4b:	pop    eax
  40fc4c:	pushf  
  40fc4d:	(bad)  
  40fc4e:	cmp    al,0x80
  40fc50:	pop    ss
  40fc51:	cld    
  40fc52:	xor    al,0x92
  40fc54:	or     ch,al
  40fc56:	mov    ch,dh
  40fc58:	sahf   
  40fc59:	inc    BYTE PTR [eax]
	...
  40fc67:	add    BYTE PTR [eax],al
  40fc69:	sbb    ch,BYTE PTR [ebx+0x6]
  40fc6c:	add    BYTE PTR [esi-0x1e508dfb],dh
  40fc72:	rcr    DWORD PTR [ecx+ebp*1+0x63],0x2b
  40fc77:	push   ds
  40fc78:	lahf   
  40fc79:	(bad)  
  40fc7a:	or     eax,0x96949e41
  40fc7f:	inc    ebp
  40fc80:	mov    WORD PTR [edi-0x5f942f67],ds
  40fc86:	inc    esp
  40fc87:	jmp    0x414e6c2a
  40fc8c:	popf   
  40fc8d:	fist   WORD PTR [esi-0x66b061db]
  40fc93:	sbb    eax,0xc2ad5b18
  40fc98:	cmp    al,0xc4
  40fc9a:	xchg   esi,eax
  40fc9b:	pop    ds
  40fc9c:	shl    DWORD PTR [eax+0x5],0x9c
  40fca0:	mov    cl,al
  40fca2:	and    BYTE PTR [edi+ebx*4],0x3a
  40fca6:	add    eax,0x10a5db83
  40fcab:	loope  0x40fc58
  40fcad:	scas   al,BYTE PTR es:[edi]
  40fcae:	cmp    eax,0x40eb9de6
  40fcb3:	(bad)  [ebx+edx*8]
  40fcb6:	inc    ecx
  40fcb7:	sub    BYTE PTR [esp+eax*4],al
  40fcba:	adc    cl,ah
  40fcbc:	stos   DWORD PTR es:[edi],eax
  40fcbd:	scas   eax,DWORD PTR es:[edi]
  40fcbe:	cwde   
  40fcbf:	lds    ebx,FWORD PTR [ebp-0x6242ef8b]
  40fcc5:	test   DWORD PTR [ecx+eax*8],0xad960c9b
  40fccc:	retf   
	...
  40fcd9:	add    BYTE PTR [eax],al
  40fcdb:	add    BYTE PTR [edx],ah
  40fcdd:	add    ecx,ebp
  40fcdf:	ss call 0x5f589a8d
  40fce5:	lods   eax,DWORD PTR ds:[esi]
  40fce6:	push   ecx
  40fce7:	cmp    eax,0xc3e19644
  40fcec:	mov    al,0xf8
  40fcee:	adc    cl,al
  40fcf0:	mov    al,ds:0x3b33e944
  40fcf5:	xor    eax,0x96c61600
  40fcfa:	dec    edi
  40fcfb:	outs   dx,BYTE PTR ds:[esi]
  40fcfc:	je     0x40fcf3
  40fcfe:	dec    edi
  40fcff:	data16 ins BYTE PTR es:[edi],dx
  40fd01:	or     eax,0x96d556e8
  40fd06:	inc    BYTE PTR [ecx-0x66]
  40fd09:	cmp    bh,bh
  40fd0b:	dec    esi
  40fd0c:	sub    ah,al
  40fd0e:	or     ebp,ecx
  40fd10:	sub    eax,0x1b6aeb8a
  40fd15:	mov    ss,WORD PTR [esi-0x3d]
  40fd18:	pusha  
  40fd19:	sub    edi,DWORD PTR [ecx]
  40fd1b:	cs je  0x40fd2b
  40fd1e:	call   0xfed795b8
  40fd23:	jo     0x40fd49
  40fd25:	cdq    
  40fd26:	mov    dl,ah
  40fd28:	jl     0x40fd17
  40fd2a:	inc    eax
  40fd2b:	jmp    0x7d40d410
  40fd30:	push   esp
  40fd31:	sub    eax,0x521a5ba
  40fd36:	push   edi
  40fd37:	add    DWORD PTR [esi],ecx
  40fd39:	jmp    0xc5ace63d
  40fd3e:	jae    0x40fd86
	...
  40fd4c:	add    BYTE PTR [eax],al
  40fd4e:	add    BYTE PTR [esi-0x53],cl
  40fd51:	fld    DWORD PTR [ebp-0x12]
  40fd54:	xchg   esi,eax
  40fd55:	or     ch,BYTE PTR [ecx+0x2489306c]
  40fd5b:	fist   WORD PTR [esi-0x4b53e8c]
  40fd61:	(bad)  
  40fd62:	xor    al,0x5f
  40fd64:	lods   eax,DWORD PTR ds:[esi]
  40fd65:	test   DWORD PTR [esi+0x34fe96c7],esi
  40fd6b:	call   FWORD PTR [esi]
  40fd6d:	sbb    al,0xa6
  40fd6f:	ins    DWORD PTR es:[edi],dx
  40fd70:	std    
  40fd71:	out    0x20,eax
  40fd73:	out    dx,al
  40fd74:	xchg   ebx,eax
  40fd75:	(bad)  
  40fd76:	xchg   esi,eax
  40fd77:	ins    DWORD PTR es:[edi],dx
  40fd78:	lea    ebp,[ecx-0x36]
  40fd7b:	fistp  WORD PTR [ecx]
  40fd7d:	or     BYTE PTR [eax],al
  40fd7f:	shl    ah,cl
  40fd81:	(bad)  
  40fd82:	jmp    FWORD PTR [ebp+0x7b44cce0]
  40fd88:	or     edi,edi
  40fd8a:	jne    0x40fd1e
  40fd8c:	pusha  
  40fd8d:	jae    0x40fded
  40fd8f:	jge    0x40fe02
  40fd91:	or     eax,eax
  40fd93:	ss xchg edi,eax
  40fd95:	dec    esi
  40fd96:	jmp    DWORD PTR [edi]
  40fd98:	jno    0x40fde8
  40fd9a:	call   DWORD PTR [edi]
  40fd9c:	add    eax,ebp
  40fd9e:	ins    BYTE PTR es:[edi],dx
  40fd9f:	push   esp
  40fda0:	jno    0x40fd9f
  40fda2:	call   0x3fcbe1
  40fda7:	sub    eax,0x52e8f7fb
  40fdac:	into   
  40fdad:	(bad)  
  40fdae:	(bad)  
  40fdaf:	jle    0x40fd66
  40fdb1:	mov    esi,0xb9
	...
  40fdc2:	ins    DWORD PTR es:[edi],dx
  40fdc3:	jno    0x40fdc2
  40fdc5:	jmp    FWORD PTR [eax+0x22]
  40fdc8:	aaa    
  40fdc9:	pop    es
  40fdca:	xlat   BYTE PTR ds:[ebx]
  40fdcb:	mov    ebp,?
  40fdcd:	jne    0x40fe2d
  40fdcf:	jno    0x40fe44
  40fdd1:	or     BYTE PTR [edx-0x6d],dl
  40fdd4:	push   esi
  40fdd5:	jmp    FWORD PTR [ebp-0x793d3730]
  40fddb:	or     BYTE PTR [ebp-0x75],dl
  40fdde:	scas   al,BYTE PTR es:[edi]
  40fddf:	jo     0x40fe54
  40fde1:	or     al,0xb2
  40fde3:	dec    edi
  40fde4:	pop    esp
  40fde5:	jmp    FWORD PTR [ebp-0x708b3ffc]
  40fdeb:	loopne 0x40fdc8
  40fded:	inc    esp
  40fdee:	dec    ebx
  40fdef:	or     DWORD PTR [eax-0x18],edx
  40fdf2:	sub    edi,ecx
  40fdf4:	(bad)  
  40fdf5:	dec    DWORD PTR [edx+0x70]
  40fdf8:	jae    0x40fe0a
  40fdfa:	jp     0x40fe6c
  40fdfc:	jae    0x40fe06
  40fdfe:	repnz xchg edx,eax
  40fe00:	aam    0xff
  40fe02:	in     eax,dx
  40fe03:	pusha  
  40fe04:	ins    BYTE PTR es:[edi],dx
  40fe05:	pop    edx
  40fe06:	arpl   WORD PTR [ebx-0x66],di
  40fe09:	enter  0xb221,0x2
  40fe0d:	push   ebp
  40fe0e:	call   0x2c04848c
  40fe13:	sti    
  40fe14:	sub    eax,0x9958b900
  40fe19:	je     0x40fe86
  40fe1b:	xchg   BYTE PTR [edx-0x72d4ebaa],cl
  40fe21:	inc    esp
  40fe22:	(bad)  
  40fe24:	fldenv [ebx+0x0]
	...
  40fe33:	add    BYTE PTR [eax],al
  40fe35:	cmp    ebx,DWORD PTR [ebp+0x2]
  40fe38:	cmp    BYTE PTR [esi+ebx*4],0xe
  40fe3c:	pop    ecx
  40fe3d:	mov    esi,ebx
  40fe3f:	aas    
  40fe40:	inc    ecx
  40fe41:	arpl   WORD PTR [ebx-0x56],di
  40fe44:	fnstenv [edi]
  40fe46:	sahf   
  40fe47:	add    cl,BYTE PTR [ebx]
  40fe49:	mov    ds:0xcb56d659,eax
  40fe4e:	call   0x970dfd79
  40fe53:	ret    0x9173
  40fe56:	and    eax,0x78bcf841
  40fe5b:	call   0xbb08:0x110b5969
  40fe62:	sub    ebx,DWORD PTR [ebx+0xf9aa4fe]
  40fe68:	clc    
  40fe69:	or     edx,eax
  40fe6b:	cdq    
  40fe6c:	je     0x40fed9
  40fe6e:	mov    dh,0x1b
  40fe70:	dec    DWORD PTR [edx+esi*4+0x478b7499]
  40fe77:	out    0xfe,eax
  40fe79:	mul    BYTE PTR [ebp-0x358b9456]
  40fe7f:	cdq    
  40fe80:	(bad)  
  40fe81:	test   ch,0xaa
  40fe84:	std    
  40fe85:	or     bl,BYTE PTR [ebx-0x67]
  40fe88:	sti    
  40fe89:	nop
  40fe8a:	pop    esp
  40fe8b:	pop    ebx
  40fe8c:	(bad)  
  40fe8d:	push   esp
  40fe8e:	push   es
  40fe8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe90:	call   0x6ace:0x2e06452
  40fe97:	xchg   ebp,eax
  40fe98:	adc    BYTE PTR [eax],al
	...
  40fea6:	add    BYTE PTR [eax],al
  40fea8:	aas    
  40fea9:	xchg   ebx,eax
  40feaa:	adc    ecx,DWORD PTR [ebx+ecx*2]
  40fead:	daa    
  40feae:	push   ds
  40feaf:	fwait
  40feb0:	sub    eax,0x60c5b033
  40feb5:	add    eax,0x87088f1c
  40feba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40febb:	xchg   edi,eax
  40febc:	lods   eax,DWORD PTR ds:[esi]
  40febd:	pop    ds
  40febe:	jmp    0xd3d346f0
  40fec3:	or     edi,ebx
  40fec5:	or     BYTE PTR [esi-0x5c830266],bh
  40fecb:	xchg   edi,eax
  40fecc:	jmp    0xa42ccba1
  40fed1:	add    eax,0x16e4da69
  40fed6:	test   eax,0xa849c42b
  40fedb:	add    ebp,DWORD PTR [ebx*4-0x6d331848]
  40fee2:	icebp  
  40fee3:	ret    
  40fee4:	push   eax
  40fee5:	out    0xbd,al
  40fee7:	stos   DWORD PTR es:[edi],eax
  40fee8:	xor    DWORD PTR [esi],esp
  40feea:	push   cs
  40feeb:	call   0x1d1c:0xfc7cc569
  40fef2:	jmp    0x8094b2fa
  40fef7:	xchg   esp,eax
  40fef8:	and    BYTE PTR [ecx+ebp*8+0x33],al
  40fefc:	xchg   esp,eax
  40fefd:	sbb    cl,dh
  40feff:	stos   DWORD PTR es:[edi],eax
  40ff00:	add    edx,DWORD PTR [ebx]
  40ff02:	ficomp WORD PTR [ecx-0x66d07f84]
  40ff08:	jge    0x40fe9b
  40ff0a:	sbb    esp,eax
	...
  40ff18:	add    BYTE PTR [eax],al
  40ff1a:	add    BYTE PTR [ebx+0x6d99c592],bh
  40ff20:	xchg   edi,eax
  40ff21:	mov    ds,esp
  40ff23:	pop    ebp
  40ff24:	sbb    BYTE PTR [eax],al
  40ff26:	test   eax,0xaefc18fa
  40ff2b:	fs std 
  40ff2d:	out    0x9b,eax
  40ff2f:	xchg   ecx,eax
  40ff30:	xchg   edx,eax
  40ff31:	(bad)  
  40ff32:	ds sbb ah,al
  40ff35:	add    ebp,ecx
  40ff37:	lea    edi,[esi-0x15]
  40ff3a:	push   0x23
  40ff3c:	stos   BYTE PTR es:[edi],al
  40ff3d:	add    ah,0xb9
  40ff40:	loopne 0x40ff82
  40ff42:	jmp    0xa04517a7
  40ff47:	and    eax,0x5f02fffe
  40ff4c:	pop    ds
  40ff4d:	add    bl,dl
  40ff4f:	jmp    0x40fee3
  40ff51:	je     0x40ff40
  40ff53:	ss add eax,0xe7c8e96a
  40ff59:	sub    ch,cl
  40ff5b:	pusha  
  40ff5c:	jl     0x40ffa2
  40ff5e:	inc    ecx
  40ff5f:	retf   0xf818
  40ff62:	push   ecx
  40ff63:	xor    DWORD PTR [edi+edi*8],ebp
  40ff66:	ss call 0x646ffbb4
  40ff6c:	(bad)  
  40ff6d:	(bad)  
  40ff6e:	pushf  
  40ff6f:	hlt    
  40ff70:	sbb    edi,edi
  40ff72:	push   ds
  40ff73:	push   esp
  40ff74:	add    DWORD PTR [edx-0x17],ebp
  40ff77:	mov    es,WORD PTR ds:0x91c7e5e8
  40ff7d:	(bad)  
  40ff7e:	je     0x40ff80
	...
  40ff8c:	add    BYTE PTR [eax],al
  40ff8e:	ins    BYTE PTR es:[edi],dx
  40ff8f:	cdq    
  40ff90:	dec    edi
  40ff91:	xchg   ebx,eax
  40ff92:	pusha  
  40ff93:	pop    ds
  40ff94:	add    BYTE PTR [ebx-0x11ffe46a],al
  40ff9a:	gs xchg ecx,eax
  40ff9c:	(bad)  
  40ff9d:	cld    
  40ff9e:	stc    
  40ff9f:	fild   WORD PTR [eax-0x17]
  40ffa2:	add    eax,0xe8610e52
  40ffa7:	xchg   ecx,eax
  40ffa8:	(bad)  
  40ffa9:	jmp    0x1353895
  40ffae:	icebp  
  40ffaf:	xchg   edi,eax
  40ffb0:	mov    eax,DWORD PTR [ebp-0x56]
  40ffb3:	aad    0x69
  40ffb5:	add    BYTE PTR [eax-0x5dff9769],ah
  40ffbb:	xchg   ebx,eax
  40ffbc:	inc    ebx
  40ffbd:	inc    ecx
  40ffbe:	cmp    ch,BYTE PTR [esi+0x73]
  40ffc1:	hlt    
  40ffc2:	in     eax,0xda
  40ffc4:	jne    0xff9fecd4
  40ffca:	dec    edi
  40ffcb:	jns    0x40ffb3
  40ffcd:	stos   DWORD PTR es:[edi],eax
  40ffce:	dec    edx
  40ffcf:	outs   dx,BYTE PTR ds:[esi]
  40ffd0:	std    
  40ffd1:	mov    DWORD PTR [edi+0x61],edi
  40ffd4:	or     eax,eax
  40ffd6:	push   ds
  40ffd7:	cmp    eax,0x5ce275ff
  40ffdc:	jmp    0x410036
  40ffde:	test   DWORD PTR [ebp-0x79],ebp
  40ffe1:	inc    ebp
  40ffe2:	xchg   esi,eax
  40ffe3:	ins    DWORD PTR es:[edi],dx
  40ffe4:	jae    0x40ffd6
  40ffe6:	mov    ds:0xa5ff513a,al
  40ffeb:	ins    DWORD PTR es:[edi],dx
  40ffec:	jae    0x40ffd6
  40ffee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffef:	(bad)  
  40fff0:	jmp    0x40fff1
	...
  40fffe:	add    BYTE PTR [eax],al
  410000:	add    BYTE PTR [edi-0x4d3198c],ch
  410006:	ins    DWORD PTR es:[edi],dx
  410007:	std    
  410008:	or     ecx,DWORD PTR [edx-0x4597e500]
  41000e:	add    al,0xef
  410010:	mov    esi,0xe807ff65
  410015:	lahf   
  410016:	(bad)  
  410018:	jmp    DWORD PTR [ebp-0x1]
  41001b:	out    0xff,eax
  41001d:	das    
  41001e:	push   0x5cb275fd
  410023:	pop    ebx
  410024:	push   ebp
  410025:	xchg   ebp,eax
  410026:	js     0x410025
  410028:	jne    0x40ffc0
  41002a:	pop    ebx
  41002b:	xchg   esp,eax
  41002c:	pop    eax
  41002d:	test   DWORD PTR [eax-0x3],edi
  410030:	jne    0x40ffdc
  410032:	popa   
  410033:	stc    
  410034:	dec    edi
  410035:	arpl   WORD PTR [edi-0x45f1756a],si
  41003b:	mov    dl,BYTE PTR [ecx]
  41003d:	ins    BYTE PTR es:[edi],dx
  41003e:	ror    DWORD PTR [edi-0x6a69ee02],1
  410044:	je     0x4100a5
  410046:	(bad)  
  410047:	sbb    bl,BYTE PTR [eax+0x54]
  41004a:	pop    edi
  41004b:	int3   
  41004c:	rcr    DWORD PTR [edi-0x62],0x2f
  410050:	mov    esi,DWORD PTR [edi]
  410052:	outs   dx,DWORD PTR ds:[esi]
  410053:	adc    BYTE PTR [ebx+ecx*2],cl
  410056:	xor    edi,DWORD PTR [eax]
  410058:	push   DWORD PTR [ebx+eiz*4]
  41005b:	ret    0x7a73
  41005e:	neg    BYTE PTR [edx+0x329ea243]
  410064:	call   0x410069
	...
  410071:	add    BYTE PTR [eax],al
  410073:	add    BYTE PTR [ebx-0x4c016906],dh
  410079:	push   es
  41007a:	inc    ebp
  41007b:	mov    edi,0x2a9ea3
  410080:	arpl   WORD PTR [edi],di
  410082:	push   esi
  410083:	addr16 push edx
  410085:	popa   
  410086:	inc    ebx
  410087:	add    BYTE PTR [ebx-0x4f7eec1],dl
  41008d:	mov    ch,0x19
  41008f:	jmp    esp
  410091:	xor    eax,0xd6dc57d7
  410096:	xchg   esi,eax
  410097:	je     0x410100
  410099:	inc    esi
  41009a:	jle    0x4100f7
  41009c:	int3   
  41009d:	out    0xa,al
  41009f:	ror    BYTE PTR [edi-0x4b],0x2a
  4100a3:	add    ah,BYTE PTR [esi]
  4100a5:	pop    ebp
  4100a6:	add    dl,BYTE PTR [eax-0x35]
  4100a9:	xchg   edx,eax
  4100aa:	jmp    FWORD PTR ss:[ebp+ebp*2+0x5de4412a]
  4100b2:	add    ch,BYTE PTR [eax+0x63]
  4100b5:	sahf   
  4100b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100b7:	mov    ebp,0x413fad0b
  4100bc:	arpl   WORD PTR ds:0xfd0f9739,ax
  4100c2:	rcl    dl,1
  4100c4:	stc    
  4100c5:	(bad)  
  4100c6:	aad    0xab
  4100c8:	push   0x2d
  4100ca:	into   
  4100cb:	xchg   esi,eax
  4100cc:	fwait
  4100cd:	ret    0x3f0
  4100d0:	push   cs
  4100d1:	jl     0x41009f
  4100d3:	and    BYTE PTR [eax],0x92
  4100d6:	inc    edx
  4100d7:	add    al,0x0
	...
  4100e5:	add    BYTE PTR [eax],al
  4100e7:	leave  
  4100e8:	shr    DWORD PTR [ebp-0x2b62a4f0],1
  4100ee:	xor    BYTE PTR [edi+ecx*4+0x6f],al
  4100f2:	inc    eax
  4100f3:	aas    
  4100f4:	sbb    al,0xf3
  4100f6:	xchg   esi,eax
  4100f7:	scas   eax,DWORD PTR es:[edi]
  4100f8:	std    
  4100f9:	adc    BYTE PTR [ebx],0x2c
  4100fc:	pop    DWORD PTR [ebp-0xc717fd7]
  410102:	or     ecx,DWORD PTR [ebx]
  410104:	sub    BYTE PTR [esi-0x6a],dh
  410107:	adc    eax,0x9796cd1c
  41010c:	std    
  41010d:	push   eax
  41010e:	aaa    
  41010f:	add    al,0x8f
  410111:	pop    ebp
  410112:	xchg   esi,eax
  410113:	ja     0x4100a6
  410115:	push   ebp
  410116:	adc    BYTE PTR [ebx-0x63],ch
  410119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41011a:	xor    ah,ch
  41011c:	mov    gs,WORD PTR [edi]
  41011e:	shl    DWORD PTR [eax+0x5],0x94
  410122:	mov    cl,al
  410124:	mov    ?,WORD PTR [ebx-0x730234f9]
  41012a:	xchg   esi,eax
  41012b:	int    0xfa
  41012d:	sub    BYTE PTR [edi],cl
  41012f:	jg     0x41014e
  410131:	rol    DWORD PTR [eax+0x22],1
  410134:	add    eax,0x2ad7abb9
  410139:	push   cs
  41013a:	xchg   esi,eax
  41013b:	sbb    al,0x1d
  41013d:	jmp    0x9090b545
  410142:	fisub  DWORD PTR [edi]
  410144:	inc    esp
  410145:	add    cl,ch
  410147:	push   eax
  410148:	mov    ?,WORD PTR [ecx+eiz*8+0x0]
	...
  410158:	add    BYTE PTR [eax],al
  41015a:	mov    eax,0xeee67c29
  41015f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410160:	nop
  410161:	ss (bad) 
  410163:	(bad)
  410167:	add    eax,0x83bb6255
  41016c:	ret    
  41016d:	lds    edi,FWORD PTR [ecx]
  41016f:	add    eax,0x18f7fc6a
  410174:	or     cl,al
  410176:	mov    dl,0x32
  410178:	jmp    FWORD PTR [esi+0x13fc48d8]
  41017e:	dec    ecx
  41017f:	(bad)  
  410180:	je     0x410173
  410182:	or     BYTE PTR [esi+edi*8-0x6a],bl
  410186:	into   
  410187:	sbb    esp,DWORD PTR [ebx]
  410189:	mov    ds,WORD PTR [ebp+edi*8-0x19]
  41018d:	dec    ecx
  41018e:	into   
  41018f:	mov    ?,esi
  410191:	adc    ebx,DWORD PTR [ebx]
  410193:	(bad)  
  410194:	je     0x410177
  410196:	enter  0xfe77,0x6e
  41019a:	test   BYTE PTR [esi+0x18ee6574],0x8
  4101a1:	push   ecx
  4101a2:	and    al,0x32
  4101a4:	call   DWORD PTR [esi+0x28]
  4101a7:	les    eax,FWORD PTR [ebx]
  4101a9:	jmp    0x6b2c7beb
  4101ae:	and    edx,DWORD PTR [esi+0x1b60d356]
  4101b4:	ds ss fs std 
  4101b8:	out    0xb9,eax
  4101ba:	jl     0x41014a
  4101bc:	(bad)  
  4101bd:	jo     0x4101bf
	...
  4101cb:	add    BYTE PTR [eax],al
  4101cd:	test   BYTE PTR [ecx-0x22a32376],dl
  4101d3:	inc    eax
  4101d4:	jmp    0x9540d0b9
  4101d9:	outs   dx,DWORD PTR ds:[esi]
  4101da:	sbb    eax,0x42f70043
  4101df:	add    BYTE PTR [edi+0x72],dl
  4101e2:	sub    al,0x28
  4101e4:	add    BYTE PTR [edx-0x5f8b4004],cl
  4101ea:	loopne 0x4101d3
  4101ec:	ficomp WORD PTR [edx]
  4101ee:	js     0x4101ed
  4101f0:	or     ecx,edx
  4101f2:	std    
  4101f3:	pop    ds
  4101f4:	mov    DWORD PTR [edi+0x71],eax
  4101f7:	data16 add BYTE PTR [edx+0x68],bh
  4101fb:	mov    esp,0x40ce2e68
  410200:	add    BYTE PTR ds:0x97fff7fc,bl
  410206:	stc    
  410207:	out    0xc8,eax
  410209:	xchg   ecx,eax
  41020a:	jb     0x410209
  41020c:	jmp    DWORD PTR [edi+0x69]
  41020f:	out    0xf1,al
  410211:	je     0x410285
  410213:	std    
  410214:	cld    
  410215:	sbb    ecx,ecx
  410217:	mov    bh,0xff
  410219:	fnsave [ecx-0x3]
  41021c:	repnz mov WORD PTR [eax+0x71a37505],?
  410223:	jae    0x410221
  410225:	(bad)  
  410226:	sti    
  410227:	pop    es
  410228:	call   0x3fd7a1
  41022d:	sbb    eax,0x4c0c0
	...
  41023e:	add    BYTE PTR [eax],al
  410240:	or     bl,ah
  410242:	mov    ch,ah
  410244:	mov    DWORD PTR [edx+eiz*8+0x57],ecx
  410248:	and    BYTE PTR [ecx],cl
  41024a:	push   0x3f
  41024c:	popf   
  41024d:	sti    
  41024e:	pop    es
  41024f:	call   0x3fd776
  410254:	inc    ebx
  410255:	retf   
  410256:	sti    
  410257:	mov    edi,DWORD PTR [edi-0x45bed814]
  41025d:	mov    BYTE PTR ds:0x67c9d600,bh
  410263:	push   ecx
  410264:	arpl   WORD PTR [ecx+0x41],bx
  410267:	add    BYTE PTR [esi+eax*1],dl
  41026a:	inc    eax
  41026b:	sub    DWORD PTR [ebx-0x62],esp
  41026e:	pop    es
  41026f:	rcl    BYTE PTR [edi],0xb8
  410272:	sub    ebp,eax
  410274:	std    
  410275:	jge    0x41020a
  410277:	(bad)  
  410278:	pop    eax
  410279:	fimul  WORD PTR [esi]
  41027b:	and    dl,bl
  41027d:	(bad)  [ebx-0x5e619c99]
  410283:	mov    ebp,0x4148d80b
  410288:	arpl   WORD PTR [ebx-0x369b07e8],di
  41028e:	sti    
  41028f:	out    0xb3,eax
  410291:	inc    edi
  410292:	xchg   ebx,eax
  410293:	(bad)  
  410294:	push   esp
  410295:	leave  
  410296:	mov    esp,edi
  410298:	retf   0x92f4
  41029b:	inc    BYTE PTR [edi-0x51]
  41029e:	ret    0x3cb8
  4102a1:	imul   edx,DWORD PTR [edx+0xfe],0x0
	...
  4102b0:	add    BYTE PTR [eax],al
  4102b2:	add    BYTE PTR [ecx],dh
  4102b4:	inc    esp
  4102b5:	int3   
  4102b6:	push   es
  4102b7:	mov    dh,0x35
  4102b9:	sbb    al,0x0
  4102bb:	arpl   WORD PTR [ebx+0x51],si
  4102be:	addr16 mov ecx,0x8b0044e1
  4102c4:	iret   
  4102c5:	dec    eax
  4102c6:	inc    ecx
  4102c7:	arpl   WORD PTR [ebx],bx
  4102c9:	sbb    DWORD PTR [eax],ecx
  4102cb:	sti    
  4102cc:	mov    bl,0xd
  4102ce:	(bad)  
  4102cf:	cld    
  4102d0:	mov    bh,0x2
  4102d2:	push   0x435980
  4102d7:	jnp    0x410305
  4102d9:	dec    ecx
  4102da:	inc    ecx
  4102db:	arpl   WORD PTR [ebx-0x27],ax
  4102de:	dec    edx
  4102df:	mov    bl,BYTE PTR [ebp+0x2]
  4102e2:	call   0xfed27815
  4102e7:	fisub  DWORD PTR [eax-0x62]
  4102ea:	imul   esp,DWORD PTR [ebx+0x5],0x46261391
  4102f1:	jmp    0xa882e811
  4102f6:	add    ebp,DWORD PTR [ecx+edx*8+0x523dca1]
  4102fd:	adc    edi,ecx
  4102ff:	cmp    ecx,DWORD PTR [ebp+edi*8-0x7d6ee084]
  410306:	add    edi,ebx
  410308:	or     BYTE PTR [esp+eax*2+0x48771d63],ah
  41030f:	and    al,BYTE PTR ds:0xde29d8de
  410315:	daa    
  410316:	add    al,0x0
	...
  410324:	add    BYTE PTR [eax],al
  410326:	jnp    0x41030d
  410328:	das    
  410329:	xchg   ebx,eax
  41032a:	gs jge 0x410358
  41032d:	xchg   esp,eax
  41032e:	out    dx,eax
  41032f:	inc    eax
  410330:	lds    esi,FWORD PTR [ebx]
  410332:	retf   
  410333:	sub    BYTE PTR [ebx],0x45
  410336:	arpl   WORD PTR ds:0x5a2485f,bx
  41033c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41033d:	fsubr  DWORD PTR [ecx+0x4b0427dc]
  410343:	add    DWORD PTR [eax],esi
  410345:	xchg   ebx,eax
  410346:	sub    eax,0xe19c237d
  41034b:	or     BYTE PTR [ebp+0x3],bh
  41034e:	xchg   edi,eax
  41034f:	cmp    eax,0x613106a
  410354:	std    
  410355:	inc    ebp
  410356:	loopne 0x410360
  410358:	jge    0x41035d
  41035a:	(bad)
  41035e:	arpl   WORD PTR [edx-0x2906d62],bx
  410364:	inc    eax
  410365:	aaa    
  410366:	xchg   ecx,eax
  410367:	mov    cl,BYTE PTR [ebp-0x6e]
  41036a:	outs   dx,DWORD PTR ds:[esi]
  41036b:	xchg   ecx,eax
  41036c:	inc    ebp
  41036d:	sbb    BYTE PTR [ebx-0x63],ch
  410370:	xchg   ecx,eax
  410371:	xor    eax,0x35ff8ad4
  410376:	imul   edx,DWORD PTR [ebp-0x5d374b02],0xffffff9f
  41037d:	mov    ebx,0x94fe8bd1
  410382:	aam    0x8b
  410384:	je     0x410367
  410386:	enter  0x5171,0xe
	...
  410396:	add    BYTE PTR [eax],al
  410398:	add    cl,dl
  41039a:	mov    esi,DWORD PTR [ebp+ecx*1-0xf]
  41039e:	adc    eax,ebp
  4103a0:	(bad)  
  4103a1:	ins    BYTE PTR es:[edi],dx
  4103a2:	std    
  4103a3:	out    0x92,eax
  4103a5:	push   esi
  4103a6:	mov    bh,dh
  4103a8:	out    dx,al
  4103a9:	ins    BYTE PTR es:[edi],dx
  4103aa:	cdq    
  4103ab:	out    0x7d,eax
  4103ad:	xor    al,0x8a
  4103af:	(bad)  
  4103b0:	fimul  WORD PTR [ecx+edx*4-0x19]
  4103b4:	gs xor al,0x8a
  4103b7:	dec    dh
  4103b9:	dec    esp
  4103ba:	xchg   ebp,eax
  4103bb:	out    0x6d,eax
  4103bd:	xchg   esp,eax
  4103be:	mov    bh,dh
  4103c0:	mov    esi,0x35e79d6c
  4103c5:	xchg   esp,eax
  4103c6:	mov    bh,dh
  4103c8:	scas   al,BYTE PTR es:[edi]
  4103c9:	ins    BYTE PTR es:[edi],dx
  4103ca:	mov    esi,edi
  4103cc:	sbb    al,0x3f
  4103ce:	mov    ds:0x8ad23bee,al
  4103d3:	pop    esi
  4103d4:	mov    al,ds:0x34000625
  4103d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103da:	sahf   
  4103db:	sub    BYTE PTR [ebp+0x13001bf3],0x9f
  4103e2:	mov    dh,BYTE PTR [ecx+eiz*8-0x18]
  4103e6:	jae    0x410439
  4103e8:	outs   dx,BYTE PTR ds:[esi]
  4103e9:	bnd jl 0x410430
  4103ec:	gs pop ebp
  4103ee:	add    eax,0xc758e96a
  4103f3:	inc    esp
  4103f4:	test   al,0x60
  4103f6:	sbb    eax,0x8560e900
  4103fb:	out    0x0,eax
	...
  410409:	add    BYTE PTR [eax],al
  41040b:	add    BYTE PTR [esi],al
  41040d:	fdivp  st(6),st
  41040f:	call   ecx
  410411:	lds    esi,FWORD PTR [edx+0x23]
  410414:	jmp    0x974:0x755f016d
  41041b:	rcr    dh,0x9e
  41041e:	dec    esi
  41041f:	push   0xbeef05ca
  410424:	loop   0x410460
  410426:	inc    esp
  410427:	inc    ecx
  410428:	mov    edx,0x9275fed5
  41042d:	ins    DWORD PTR es:[edi],dx
  41042e:	out    dx,eax
  41042f:	jns    0x4103c6
  410431:	je     0x410419
  410433:	sbb    eax,0xfffd74ef
  410438:	(bad)  
  41043a:	std    
  41043b:	jne    0x4104af
  41043d:	ins    DWORD PTR es:[edi],dx
  41043e:	mov    ss,WORD PTR [edx-0x6b]
  410441:	je     0x41040a
  410443:	ret    0x57e
  410446:	push   ebp
  410447:	mov    esp,DWORD PTR [esi+0x7dfcc280]
  41044d:	out    0xff,eax
  41044f:	imul   ecx,DWORD PTR [ebx+0x22087376],0xf5ff50b2
  410459:	or     eax,DWORD PTR [esp+edi*8-0x4f]
  41045d:	mov    bh,0x62
  41045f:	sub    BYTE PTR [ebx+0x3a3f8001],cl
  410465:	icebp  
  410466:	aas    
  410467:	push   0x413fda
  41046c:	jge    0x4104d7
  41046e:	jl     0x410497
	...
  41047c:	add    BYTE PTR [eax],al
  41047e:	add    BYTE PTR [edx],cl
  410480:	add    eax,0xa20ec00b
  410485:	push   ebp
  410486:	call   0x3fdb26
  41048b:	icebp  
  41048c:	les    esi,FWORD PTR [edx+0x19]
  41048f:	mov    edx,0x63ffffec
  410494:	aas    
  410495:	push   ecx
  410496:	addr16 std 
  410498:	popa   
  410499:	inc    ecx
  41049a:	add    BYTE PTR [ebx],dh
  41049c:	aas    
  41049d:	push   ss
  41049e:	or     bl,cl
  4104a0:	pop    ss
  4104a1:	or     bh,bh
  4104a3:	int3   
  4104a4:	inc    esi
  4104a5:	dec    esp
  4104a6:	push   ebx
  4104a7:	(bad)  
  4104a8:	xlat   BYTE PTR ds:[ebx]
  4104a9:	mov    ?,WORD PTR [edx]
  4104ab:	mov    ds:0xb4fe9025,eax
  4104b0:	out    0x94,eax
  4104b2:	lods   eax,DWORD PTR ds:[esi]
  4104b3:	imul   edx,DWORD PTR [edi+0x71a4c015],0xffffff8e
  4104ba:	(bad)  
  4104bb:	push   ss
  4104bc:	xchg   esi,eax
  4104bd:	call   0x9a5e:0x8e87311f
  4104c4:	fadd   QWORD PTR [esi]
  4104c6:	add    BYTE PTR [esi],ch
  4104c8:	and    ebx,DWORD PTR [edi+0x36a2a782]
  4104ce:	push   0x63
  4104d0:	xor    al,0x42
  4104d2:	push   esi
  4104d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104d5:	call   0xa688:0x8eb712c1
  4104dc:	ret    0x3c7a
  4104df:	mov    edi,0x44f6
	...
  4104f0:	add    BYTE PTR [eax],al
  4104f2:	jecxz  0x410482
  4104f4:	add    dh,BYTE PTR [ebx+eiz*4+0x46]
  4104f8:	xchg   esi,eax
  4104f9:	inc    esp
  4104fa:	mov    ds:0x66e8359e,al
  4104ff:	mov    edi,0x5e580002
  410504:	pop    ss
  410505:	and    ecx,DWORD PTR [esi+eax*4+0x7f1c5dd3]
  41050c:	cli    
  41050d:	mov    edi,0x6832a58f
  410512:	arpl   WORD PTR [esi+0x197bbd9d],bx
  410518:	dec    ecx
  410519:	inc    ecx
  41051a:	arpl   WORD PTR ds:0xfd6f8eb9,ax
  410520:	push   eax
  410521:	out    dx,al
  410522:	imul   ecx,DWORD PTR [eax+0x319a9c55],0x4e
  410529:	(bad)  
  41052a:	fcom   st(3)
  41052c:	sub    BYTE PTR [ebp-0x2b],cl
  41052f:	xchg   DWORD PTR ds:0xf056d28f,edi
  410535:	push   es
  410536:	dec    esi
  410537:	(bad)
  41053a:	les    eax,FWORD PTR [eax-0x44a7140]
  410540:	sub    BYTE PTR [eax],bl
  410542:	xchg   DWORD PTR ds:0x52245ee,ebx
  410548:	mov    ecx,0x62d7b9b
  41054d:	(bad)  
  41054e:	and    al,0x1d
  410550:	jmp    0x80878158
  410555:	nop
	...
  410562:	add    BYTE PTR [eax],al
  410564:	add    BYTE PTR [edi],bl
  410566:	inc    esi
  410567:	jmp    0xf152819f
  41056c:	fwait
  41056d:	or     DWORD PTR [esi+ebx*8],0xffffff8e
  410571:	test   cl,bh
  410573:	cmp    al,0x8f
  410575:	sbb    cl,BYTE PTR gs:[edx]
  410578:	pushf  
  410579:	mov    bh,0x2d
  41057b:	(bad)  
  41057c:	mov    gs,WORD PTR [ecx-0x3b]
  41057f:	xor    al,0xe8
  410581:	(bad)  
  410582:	imul   BYTE PTR [esi]
  410584:	inc    ebp
  410585:	arpl   WORD PTR ds:0x869599c1,si
  41058b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41058c:	xor    ecx,ebx
  41058e:	add    eax,0x1dee9ee9
  410593:	xchg   esp,eax
  410594:	dec    eax
  410595:	mov    ds:0x978f3905,al
  41059a:	std    
  41059b:	nop
  41059c:	push   ecx
  41059d:	mov    WORD PTR [esi+0x332e9b7d],es
  4105a3:	add    BYTE PTR [esi-0x2b],dh
  4105a6:	xchg   DWORD PTR [ebp+ebp*2-0x13],esi
  4105aa:	adc    DWORD PTR [eax],ecx
  4105ac:	push   ecx
  4105ad:	das    
  4105ae:	xor    al,0xff
  4105b0:	pop    esi
  4105b1:	cmp    eax,0x60edc1bc
  4105b6:	xor    BYTE PTR [ebx-0x103d1ec3],cl
  4105bc:	je     0x4105e9
  4105be:	xchg   ebp,eax
  4105bf:	dec    edi
  4105c0:	ds imul edi,ecx,0xffffffe7
  4105c4:	sahf   
  4105c5:	ja     0x41054d
  4105c7:	(bad)  
  4105c8:	loop   0x4105ca
	...
  4105d6:	add    BYTE PTR [eax],al
  4105d8:	mov    al,ds:0x536a3212
  4105dd:	mov    DWORD PTR [ecx],eax
  4105df:	xchg   edi,eax
  4105e0:	sar    DWORD PTR [ebx+0x44],0x11
  4105e4:	jle    0x41056a
  4105e6:	aaa    
  4105e7:	mov    ebp,0x6191182
  4105ec:	jnp    0x4105e3
  4105ee:	(bad)  
  4105ef:	je     0x410579
  4105f1:	sahf   
  4105f2:	and    eax,0xfe87d599
  4105f7:	je     0x4105e5
  4105f9:	xchg   DWORD PTR [ecx+eiz*8-0x1a],esi
  4105fd:	adc    DWORD PTR [eax],ecx
  4105ff:	shr    DWORD PTR ds:0xe4d6ff35,1
  410605:	inc    eax
  410606:	lock cmp edi,edi
  410609:	push   eax
  41060a:	pop    eax
  41060b:	(bad)  
  41060c:	out    0xbc,al
  41060e:	shr    ebp,0x60
  410611:	xor    BYTE PTR [ebx-0x83e1d3b],cl
  410617:	inc    ebx
  410618:	sbb    eax,DWORD PTR [bp+di-0x5a]
  41061c:	dec    esp
  41061d:	std    
  41061e:	out    0x51,eax
  410620:	ja     0x4105a8
  410622:	(bad)  
  410623:	pusha  
  410624:	pushf  
  410625:	mov    DWORD PTR [ecx-0x17],ebp
  410628:	jp     0x41062f
  41062a:	push   0x413fff00
  41062f:	add    BYTE PTR [edx+0x3],dh
  410632:	add    BYTE PTR [eax],al
  410634:	jp     0x41069f
  410636:	jo     0x41068e
  410638:	lea    edi,[eax+0x9]
  41063b:	rol    BYTE PTR [eax],0x0
	...
  41064a:	add    BYTE PTR [esi],dl
  41064c:	mov    ecx,0xe9824587
  410651:	push   0xff01bb46
  410656:	jne    0x41068a
  410658:	imul   esp,eax,0xb01ca25
  41065e:	rcl    BYTE PTR [esi],0xa5
  410661:	std    
  410662:	jne    0x4105f6
  410664:	imul   eax,DWORD PTR [ecx],0x4e788d5d
  41066a:	push   0x3ebd68
  41066f:	rol    BYTE PTR [ecx],cl
  410671:	add    bh,ch
  410673:	or     al,0xeb
  410675:	dec    DWORD PTR [edi+0x6d]
  410678:	out    dx,al
  410679:	pop    es
  41067a:	call   0x3ff651
  41067f:	jb     0x410619
  410681:	push   ecx
  410682:	dec    DWORD PTR [ebp+0x62f87378]
  410688:	nop
  410689:	push   ecx
  41068a:	(bad)  
  41068b:	jge    0x410705
  41068d:	jae    0x41068b
  41068f:	(bad)  
  410690:	out    dx,al
  410691:	pop    es
  410692:	call   0x3fd897
  410697:	add    eax,DWORD PTR [edi+0x2]
  41069a:	add    BYTE PTR [edi-0x2],dh
  41069d:	jmp    0xa000:0x68950683
  4106a4:	int    0xfe
  4106a6:	jne    0x4106ea
  4106a8:	mov    eax,ds:0x91fd502c
  4106ad:	xchg   DWORD PTR [ebp+0x0],eax
	...
  4106bc:	add    BYTE PTR [eax],al
  4106be:	into   
  4106bf:	and    BYTE PTR [eax],al
  4106c1:	add    BYTE PTR [ebx-0x75],ah
  4106c4:	dec    esp
  4106c5:	addr16 lahf 
  4106c7:	sub    al,0x43
  4106c9:	add    BYTE PTR [ebx+0x6341447d],cl
  4106cf:	add    edx,DWORD PTR [esi]
  4106d1:	or     bl,bh
  4106d3:	add    al,0x14
  4106d5:	(bad)  
  4106d6:	cld    
  4106d7:	repz adc eax,0xfa61f4fc
  4106dd:	out    0x9c,eax
  4106df:	mov    esi,0x311afe8b
  4106e4:	pop    es
  4106e5:	add    BYTE PTR [esi],dh
  4106e7:	out    0x9e,eax
  4106e9:	sbb    BYTE PTR [edi+0x63001ac6],0xd3
  4106f0:	dec    esp
  4106f1:	dec    BYTE PTR [esi+0x66]
  4106f4:	call   0x2efe:0x8c332c42
  4106fb:	jp     0x410688
  4106fd:	je     0x41075a
  4106ff:	push   ss
  410700:	imul   ecx,DWORD PTR [esi-0x5c],0x73748c1b
  410707:	adc    edx,DWORD PTR [esi]
  410709:	or     BYTE PTR [ebx-0x7300c405],cl
  41070f:	adc    DWORD PTR [eax+ebx*1],0xffffff84
  410713:	add    edi,esi
  410715:	(bad)  
  410716:	mul    BYTE PTR [ebp-0x66]
  410719:	push   esp
  41071a:	and    al,0x6b
  41071c:	mov    ah,BYTE PTR [edi-0x58]
  41071f:	sub    al,0x45
	...
  410731:	fs loope 0x410727
  410734:	out    0x86,eax
  410736:	or     DWORD PTR [eax+eax*1],eax
  410739:	push   0xbb6510ae
  41073e:	add    DWORD PTR [edx+0x41],eax
  410741:	arpl   WORD PTR [esi+0xa],ax
  410744:	and    esp,DWORD PTR [ebx+0x6e]
  410747:	jnp    0x41078d
  410749:	cmp    eax,DWORD PTR ds:0xc6a64911
  41074f:	call   0x8156b6de
  410754:	add    eax,DWORD PTR [esi+0x5]
  410757:	jmp    0xef39dc5a
  41075c:	push   es
  41075d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41075e:	jge    0x4107cf
  410760:	inc    ecx
  410761:	jae    0x4106e7
  410763:	sti    
  410764:	repz add al,0xa2
  410767:	add    DWORD PTR [ebx-0x749f780b],ecx
  41076d:	jo     0x4107a8
  41076f:	jo     0x4107b2
  410771:	out    0xec,eax
  410773:	out    0x3,eax
  410775:	int3   
  410776:	ret    0x114d
  410779:	imul   ebp,DWORD PTR [ebp+0x33],0x3a
  41077d:	int3   
  41077e:	cmp    DWORD PTR ds:0xbb845711,0xfffffffb
  410785:	les    ebp,FWORD PTR [eax]
  410787:	sahf   
  410788:	mov    dh,BYTE PTR [ebp-0x5278647d]
  41078e:	stc    
  41078f:	lock fwait
  410791:	in     eax,dx
  410792:	rcl    BYTE PTR ds:0x8b,cl
	...
  4107a4:	popf   
  4107a5:	stc    
  4107a6:	lock mov cl,BYTE PTR [edi]
  4107a9:	sbb    DWORD PTR [esi],eax
  4107ab:	adc    DWORD PTR [ebx+0x6d],ebx
  4107ae:	sbb    eax,0x1f83843a
  4107b3:	(bad)  
  4107b4:	push   eax
  4107b5:	add    eax,0x87887e94
  4107ba:	lods   al,BYTE PTR ds:[esi]
  4107bb:	mov    edx,DWORD PTR [esi]
  4107bd:	mov    BYTE PTR [ebx],bl
  4107bf:	dec    ecx
  4107c0:	ss (bad) 
  4107c2:	call   0x6a42deca
  4107c7:	enter  0x341b,0x28
  4107cb:	add    al,0x63
  4107cd:	stc    
  4107ce:	cmp    DWORD PTR [edi+0x3087],eax
  4107d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107d5:	add    eax,0x4a553500
  4107da:	inc    esp
  4107db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107dc:	pusha  
  4107dd:	add    eax,0xca21e900
  4107e2:	imul   ecx
  4107e4:	pusha  
  4107e5:	add    eax,0x81a35c00
  4107ea:	dec    edi
  4107eb:	je     0x410790
  4107ed:	jge    0x41083e
  4107ef:	adc    ebx,DWORD PTR [edi-0x13]
  4107f2:	test   DWORD PTR [edi],ebp
  4107f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107f5:	add    eax,0x30a7d4ff
  4107fa:	inc    ecx
  4107fb:	jmp    0xaab4caed
  410800:	fld    QWORD PTR [ecx]
  410802:	clc    
  410803:	jmp    0xccc44874
	...
  410814:	add    BYTE PTR [eax],al
  410816:	add    ah,bl
  410818:	xor    BYTE PTR [edx-0x2],0x4d
  41081c:	stc    
  41081d:	sti    
  41081e:	push   edx
  41081f:	mov    edx,0xe9ff8ad8
  410824:	clc    
  410825:	pop    ss
  410826:	cs push edx
  410828:	and    edi,edi
  41082a:	lahf   
  41082b:	test   al,0x83
  41082d:	jne    0x410808
  41082f:	fyl2xp1 
  410831:	pop    es
  410832:	add    edx,ecx
  410834:	cmp    dh,0xe
  410837:	dec    edx
  410838:	or     BYTE PTR [ecx+eax*1-0x1b],0x48
  41083d:	add    ebp,DWORD PTR [edx+0x5b]
  410840:	jge    0x410841
  410842:	jl     0x4108a7
  410844:	xchg   BYTE PTR ds:0xfe5a53e9,bh
  41084a:	pop    esp
  41084b:	fild   DWORD PTR [ebx-0x3a7663ec]
  410851:	push   DWORD PTR [esi]
  410853:	sbb    BYTE PTR [ebx+eax*1-0x17],al
  410857:	test   DWORD PTR [esi+0x45b900eb],ecx
  41085d:	repnz push ebx
  41085f:	std    
  410860:	inc    ecx
  410861:	clc    
  410862:	add    BYTE PTR [edx+0x6],cl
  410865:	add    bh,al
  410867:	jg     0x4107fe
  410869:	(bad)  
  41086a:	(bad)  
  41086b:	cmp    al,BYTE PTR [esi]
  41086d:	push   DWORD PTR [ebp+0x2a]
  410870:	std    
  410871:	inc    ebx
  410872:	cld    
  410873:	fistp  DWORD PTR [ecx]
  410875:	cld    
  410876:	push   0xa
  410878:	and    BYTE PTR [eax],al
  41087a:	push   0x0
	...
  410888:	add    BYTE PTR [eax],al
  41088a:	cli    
  41088b:	pop    ds
  41088c:	add    bh,bh
  41088e:	jp     0x20477e91
  410894:	add    BYTE PTR [edx+0xa],ch
  410897:	sahf   
  410898:	retf   0xfa22
  41089b:	add    eax,0x530ec00b
  4108a0:	dec    esi
  4108a1:	push   eax
  4108a2:	and    ch,BYTE PTR [ebx]
  4108a4:	push   ecx
  4108a5:	jmp    DWORD PTR ds:0x3f843fe
  4108ab:	and    BYTE PTR [eax],al
  4108ad:	push   0xffffffba
  4108af:	push   DWORD PTR ss:[ebp+0x72]
  4108b3:	mov    WORD PTR [ebx-0x4],?
  4108b6:	test   DWORD PTR [edx],edx
  4108b8:	or     al,0x6a
  4108ba:	mov    edx,0x1ce8001f
  4108bf:	imul   edi,esi,0xffffffff
  4108c2:	add    DWORD PTR [ebp+0x73],0xf812650f
  4108c9:	call   0x403f6c
  4108ce:	cmp    eax,0x8a00f842
  4108d3:	add    eax,0x8e078300
  4108d8:	(bad)  
  4108d9:	jae    0x41090f
  4108db:	mov    WORD PTR [ebx+0x8],?
  4108de:	test   DWORD PTR [edx],edx
  4108e0:	clc    
  4108e1:	call   0x248f49
  4108e6:	push   esp
  4108e7:	fs ret 0x8c73
  4108eb:	push   ds
  4108ec:	mov    DWORD PTR [eax+eax*1+0x0],esi
	...
  4108fc:	add    BYTE PTR [ebx+0x56],bl
  4108ff:	add    esp,DWORD PTR [edx]
  410901:	arpl   WORD PTR [esi+0x29],bp
  410904:	add    esp,DWORD PTR [edx]
  410906:	in     al,0xaa
  410908:	jmp    0x4aae:0xccaee79
  41090f:	sar    bh,0x1c
  410912:	cmp    al,0x9c
  410914:	in     eax,dx
  410915:	inc    edx
  410916:	outs   dx,BYTE PTR ds:[esi]
  410917:	add    cl,BYTE PTR [ebx]
  410919:	and    eax,DWORD PTR [ebx-0x694cb013]
  41091f:	nop
  410920:	dec    edi
  410921:	cld    
  410922:	idiv   DWORD PTR [ecx+0x44]
  410925:	out    dx,eax
  410926:	adc    eax,0xe276ff33
  41092b:	xor    ebp,eax
  41092d:	inc    esp
  41092e:	mov    ebp,0x70c8fe87
  410933:	inc    edx
  410934:	sbb    BYTE PTR [ebx-0x332ef292],0xc1
  41093b:	mov    ah,bh
  41093d:	mov    ds:0xe8fe879e,al
  410942:	mov    cl,0x8e
  410944:	pop    edx
  410945:	stos   BYTE PTR es:[edi],al
  410946:	sub    al,0xf7
  410948:	call   DWORD PTR [edi]
  41094a:	repz xchg esi,eax
  41094c:	sbb    BYTE PTR [edi-0x1fa8cec6],0x59
  410953:	aad    0x28
  410955:	and    ch,BYTE PTR [esi+0x2]
  410958:	jne    0x4109bf
  41095a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41095b:	sub    cl,cl
  41095d:	mov    eax,ds:0x8d0272
	...
  41096e:	add    BYTE PTR [eax],al
  410970:	es jle 0x4109a4
  410973:	(bad)  
  410974:	out    dx,al
  410975:	popa   
  410976:	call   0x5987:0xe6051530
  41097d:	inc    ebp
  41097e:	in     eax,dx
  41097f:	jg     0x410910
  410981:	push   es
  410982:	jmp    0xcd42eb8a
  410987:	add    al,0x63
  410989:	adc    eax,0x17e1f6e9
  41098e:	call   0x3bc16c96
  410993:	mov    BYTE PTR ds:0xe89cb0fa,dh
  410999:	frstor [ebp-0x12baa679]
  41099f:	and    BYTE PTR [eax+0x6],0xe9
  4109a3:	add    edx,DWORD PTR [edx+edi*8]
  4109a6:	mov    WORD PTR [edi+0x67107d97],es
  4109ac:	sahf   
  4109ad:	(bad)  
  4109ae:	call   0x75c01b4e
  4109b3:	xchg   ebx,ebp
  4109b5:	leave  
  4109b6:	jl     0x41093f
  4109b8:	ja     0x41093b
  4109ba:	gs adc ebx,ebp
  4109bd:	in     al,dx
  4109be:	js     0x4109fe
  4109c0:	and    al,BYTE PTR ds:0x7fd6c441
  4109c6:	dec    ebp
  4109c7:	jge    0x4109f0
  4109c9:	ins    DWORD PTR es:[edi],dx
  4109ca:	inc    ebp
  4109cb:	adc    edi,eax
  4109cd:	jg     0x410982
  4109cf:	mov    eax,DWORD PTR [esp+ebp*4-0x52]
  4109d3:	inc    esp
	...
  4109e0:	add    BYTE PTR [eax],al
  4109e2:	add    BYTE PTR [ebx+0x6d],ah
  4109e5:	jnp    0x41096d
  4109e7:	lods   eax,DWORD PTR ds:[esi]
  4109e8:	jg     0x410a59
  4109ea:	inc    ecx
  4109eb:	mov    edi,0x9c979b83
  4109f0:	push   cs
  4109f1:	ins    DWORD PTR es:[edi],dx
  4109f2:	pop    ebp
  4109f3:	xchg   esp,eax
  4109f4:	jg     0x4109de
  4109f6:	or     BYTE PTR [edi],0x6d
  4109f9:	call   0xe8e0eaf4
  4109fe:	add    esp,DWORD PTR [ebx-0x7c]
  410a01:	push   DWORD PTR [ebx-0x2c]
  410a04:	jg     0x410a13
  410a06:	gs bnd jg 0x410a08
  410a0a:	jmp    0xd22902ec
  410a0f:	push   ecx
  410a10:	es add cl,ch
  410a13:	fyl2xp1 
  410a15:	out    0x62,eax
  410a17:	out    0x8b,al
  410a19:	(bad)  
  410a1a:	cwde   
  410a1b:	out    0xd5,eax
  410a1d:	jmp    0x52f9:0x3bb05d0f
  410a24:	or     eax,0x95df03c
  410a29:	sub    al,0xd9
  410a2b:	leave  
  410a2c:	add    ch,BYTE PTR [eax+ebp*1]
  410a2f:	arpl   WORD PTR [ebx],cx
  410a31:	adc    BYTE PTR [ebp+0x6909f530],0xe4
  410a38:	cmp    eax,0x6ae0ec77
  410a3d:	das    
  410a3e:	xchg   edx,eax
  410a3f:	(bad)  
  410a40:	(bad)  
  410a41:	jmp    0x410a6b
  410a43:	fild   WORD PTR [edx+0x9]
  410a46:	test   eax,0x0
	...
  410a53:	add    BYTE PTR [eax],al
  410a55:	add    al,al
  410a57:	add    cl,BYTE PTR [edx]
  410a59:	sub    eax,0x300acd8a
  410a5e:	jae    0x410aaf
  410a60:	pop    eax
  410a61:	pusha  
  410a62:	fwait
  410a63:	popa   
  410a64:	(bad)  
  410a65:	aam    0xe8
  410a67:	pop    DWORD PTR [ecx+ecx*2+0x5]
  410a6b:	retf   0xe9d7
  410a6e:	pusha  
  410a6f:	add    eax,0x59236400
  410a74:	dec    edi
  410a75:	ret    
  410a76:	addr16 jmp 0x410a78
  410a79:	xchg   edx,eax
  410a7a:	pusha  
  410a7b:	jmp    0x410a7c
  410a7d:	xchg   edx,eax
  410a7e:	pusha  
  410a7f:	nop
  410a80:	inc    esp
  410a81:	xor    eax,0xbc147e50
  410a86:	scas   eax,DWORD PTR es:[edi]
  410a87:	(bad)  
  410a8a:	xchg   ecx,eax
  410a8b:	inc    edx
  410a8c:	jb     0x410ab0
  410a8e:	or     DWORD PTR ds:0x65f600d8,ecx
  410a94:	std    
  410a95:	jne    0x410aed
  410a97:	xchg   DWORD PTR [ebx-0x28],esi
  410a9a:	jge    0x410aaa
  410a9c:	in     al,0xff
  410a9e:	mov    bh,0x9d
  410aa0:	std    
  410aa1:	jne    0x410ae5
  410aa3:	call   0x75fd:0x881dfcbb
  410aaa:	add    ah,BYTE PTR [ecx+0x24a2096]
  410ab0:	push   DWORD PTR [ebp+0x1e]
  410ab3:	mov    eax,ds:0x87fd4f78
  410ab8:	std    
  410ab9:	jne    0x410abb
	...
  410ac7:	add    BYTE PTR [eax],al
  410ac9:	shl    BYTE PTR [eax-0x7802b090],cl
  410acf:	std    
  410ad0:	jne    0x410ab8
  410ad2:	mov    al,ds:0x87dd4f68
  410ad7:	mov    eax,DWORD PTR [ebp-0x76]
  410ada:	cmp    eax,ebp
  410adc:	nop
  410add:	push   edi
  410ade:	mov    ch,bh
  410ae0:	pop    edi
  410ae1:	dec    esp
  410ae2:	mov    edx,0x2efa0cc0
  410ae7:	mov    ebp,esp
  410ae9:	jns    0x410b30
  410aeb:	cli    
  410aec:	push   0xffffffca
  410aee:	sbb    eax,DWORD PTR [ebp-0x1]
  410af1:	mov    bh,0x79
  410af3:	out    0x81,al
  410af5:	out    dx,al
  410af6:	mov    ch,bh
  410af8:	mov    edi,esi
  410afa:	test   ebp,edi
  410afc:	jne    0x410ab0
  410afe:	cdq    
  410aff:	and    ch,bh
  410b01:	ins    DWORD PTR es:[edi],dx
  410b02:	mov    BYTE PTR [eax+0x5],ch
  410b05:	and    bh,bh
  410b07:	push   ecx
  410b08:	(bad)  
  410b09:	jge    0x410b87
  410b0b:	mov    esi,0x68319c74
  410b10:	mul    DWORD PTR [ebx+0x2f]
  410b13:	inc    esp
  410b14:	add    bl,bh
  410b16:	imul   eax,DWORD PTR [edx],0xffffffef
  410b19:	lds    edx,FWORD PTR [ebx+0x6c224581]
  410b1f:	xor    bh,bh
  410b21:	out    dx,al
  410b22:	arpl   WORD PTR [edx-0x7c910ec3],bx
  410b28:	out    0x4e,eax
  410b2a:	aaa    
  410b2b:	test   esi,edi
	...
  410b39:	add    BYTE PTR [eax],al
  410b3b:	add    BYTE PTR [edx+edx*8-0x79],bl
  410b3f:	dec    dh
  410b41:	call   0x834b:0x9f87
  410b47:	enter  0x6b21,0x2
  410b4b:	push   ebp
  410b4c:	call   0x38048a9b
  410b51:	sbb    al,0x1a
  410b53:	add    BYTE PTR [ecx+0x5b748524],bh
  410b59:	xchg   esi,eax
  410b5a:	xlat   BYTE PTR ds:[ebx]
  410b5b:	dec    ebx
  410b5c:	sbb    al,0x9c
  410b5e:	jns    0x410ba4
  410b60:	pop    ss
  410b61:	call   0x2d7c6f2b
  410b66:	add    al,0x80
  410b68:	inc    esp
  410b69:	outs   dx,BYTE PTR ds:[esi]
  410b6a:	push   cs
  410b6b:	push   ecx
  410b6c:	mov    ebp,DWORD PTR [esp+edi*1-0x63e49cbf]
  410b73:	jne    0x410bb7
  410b75:	outs   dx,BYTE PTR ds:[esi]
  410b76:	add    cl,BYTE PTR [ebx]
  410b78:	and    ebx,DWORD PTR [ebx+0x0]
  410b7b:	jmp    0x410be9
  410b7d:	push   esi
  410b7e:	mov    esp,0x2b6e2245
  410b83:	call   0x4518ce
  410b88:	pop    eax
  410b89:	cs mov db2,esp
  410b8d:	(bad)  
  410b8e:	jp     0x410be7
  410b90:	mov    ah,0x33
  410b92:	clc    
  410b93:	mov    edi,0x68325537
  410b98:	arpl   WORD PTR ds:0xedde94e9,ax
  410b9e:	xor    edi,DWORD PTR ds:0x0
	...
  410bac:	add    BYTE PTR [eax],al
  410bae:	add    BYTE PTR [edx],ah
  410bb0:	add    eax,0xd1784b9
  410bb5:	add    DWORD PTR ds:0x9b057c10,ecx
  410bbb:	ret    0xfdcb
  410bbe:	cmp    DWORD PTR [eax+0x38],0x29
  410bc2:	dec    edx
  410bc3:	ins    DWORD PTR es:[edi],dx
  410bc4:	jl     0x410bb3
  410bc6:	xor    DWORD PTR [edx-0x55],0x20
  410bca:	or     edx,esi
  410bcc:	lods   al,BYTE PTR ds:[esi]
  410bcd:	(bad)  
  410bcf:	pop    eax
  410bd0:	jl     0x410c2d
  410bd2:	or     al,0x3b
  410bd4:	add    al,0x1d
  410bd6:	add    DWORD PTR [ebp-0x24],0xffffffaf
  410bda:	inc    esi
  410bdb:	pusha  
  410bdc:	add    eax,0x86488f14
  410be1:	lods   al,BYTE PTR ds:[esi]
  410be2:	push   esp
  410be3:	xor    eax,0x9f91ad7c
  410be8:	jns    0x410c22
  410bea:	adc    DWORD PTR [edi+0x68f99e15],0x6d
  410bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bf2:	and    al,0x63
  410bf4:	add    eax,0x825543e2
  410bf9:	mov    ebx,0xa6056305
  410bfe:	leave  
  410bff:	in     al,dx
  410c00:	add    al,0xe9
  410c02:	add    esp,DWORD PTR [ebx+0x44]
  410c05:	and    esi,DWORD PTR [ebp+eiz*8+0x3]
  410c09:	jmp    0xd3465511
  410c0e:	add    ecx,DWORD PTR [ecx+0x5]
  410c11:	ret    
  410c12:	add    eax,DWORD PTR [eax]
	...
  410c20:	add    BYTE PTR [eax],al
  410c22:	faddp  st(1),st
  410c24:	pop    eax
  410c25:	aam    0xd7
  410c27:	cmp    DWORD PTR [eax],0x987bbd7b
  410c2d:	sub    BYTE PTR [edi],0x7d
  410c30:	push   DWORD PTR ds:0x4fe77faa
  410c36:	jg     0x410c3d
  410c38:	add    dl,dh
  410c3a:	and    al,bh
  410c3c:	add    al,0x10
  410c3e:	pop    ss
  410c3f:	add    eax,0xbf78e900
  410c44:	daa    
  410c45:	test   al,0x60
  410c47:	jl     0x410cbd
  410c49:	(bad)  [eax]
  410c4b:	inc    ebp
  410c4c:	push   eax
  410c4d:	(bad)  
  410c4e:	loope  0x410c1b
  410c50:	mov    bl,BYTE PTR [ecx]
  410c52:	rol    BYTE PTR [eax+0x7ae1f6ef],cl
  410c58:	dec    edi
  410c59:	cmp    ecx,edi
  410c5b:	mov    ch,0x50
  410c5d:	fsubrp st(1),st
  410c5f:	lea    eax,[ebp+eax*8-0x3e018437]
  410c66:	pop    ecx
  410c67:	retf   
  410c68:	inc    dh
  410c6a:	rol    ecx,cl
  410c6c:	repz sbb DWORD PTR [edi+0x38],eax
  410c70:	inc    edi
  410c71:	sub    BYTE PTR [edi+0x7a],ah
  410c74:	mov    ah,0xbd
  410c76:	test   eax,0x1ba6fe7b
  410c7b:	psubsb mm6,mm1
  410c7e:	das    
  410c7f:	jl     0x410c7f
  410c81:	pusha  
  410c82:	fist   DWORD PTR [edx-0xa]
  410c85:	mov    es,WORD PTR [eax]
	...
  410c93:	add    BYTE PTR [eax],al
  410c95:	loope  0x410c83
  410c97:	call   DWORD PTR [eax]
  410c99:	mov    ds:0xe1e940c2,eax
  410c9e:	mov    cl,0xeb
  410ca0:	jle    0x410c83
  410ca2:	jnp    0x410ca2
  410ca4:	hlt    
  410ca5:	push   esp
  410ca6:	ins    DWORD PTR es:[edi],dx
  410ca7:	in     al,dx
  410ca8:	mov    ecx,0x64887be1
  410cad:	dec    eax
  410cae:	jae    0x410cae
  410cb0:	push   esi
  410cb1:	mov    esi,0x99a6667a
  410cb6:	(bad)  
  410cb9:	and    eax,0x75f7eabd
  410cbe:	xchg   ebp,edi
  410cc0:	jne    0x410c88
  410cc2:	out    dx,al
  410cc3:	rcl    BYTE PTR [eax+0x75],1
  410cc6:	xchg   DWORD PTR [edi-0x200917b],eax
  410ccc:	inc    DWORD PTR [edi]
  410cce:	(bad)  
  410ccf:	shl    bh,cl
  410cd1:	jne    0x410c5a
  410cd3:	dec    esi
  410cd4:	push   0x3f4fb5
  410cd9:	gs mov ebp,0x8475f7ea
  410cdf:	std    
  410ce0:	jne    0x410c68
  410ce2:	out    dx,al
  410ce3:	mov    al,0x50
  410ce5:	jne    0x410c6b
  410ce7:	or     eax,eax
  410ce9:	mov    esi,0xebd831e
  410cee:	cld    
  410cef:	std    
  410cf0:	(bad)  
  410cf1:	ds jae 0x410d02
  410cf4:	jmp    FWORD PTR [edx-0x6c]
  410cf7:	and    eax,0x0
	...
  410d06:	add    BYTE PTR [eax],al
  410d08:	std    
  410d09:	cmp    ebp,0x50
  410d0c:	adc    al,BYTE PTR [ecx*2+0x12e7f5ff]
  410d13:	or     edi,edx
  410d15:	jl     0x410d1b
  410d17:	push   eax
  410d18:	repnz outs dx,DWORD PTR ds:[esi]
  410d1a:	dec    ebx
  410d1b:	push   ebp
  410d1d:	retf   
  410d1e:	and    eax,0xffffffed
  410d21:	cmp    ebp,0x15
  410d24:	cli    
  410d25:	add    eax,0x6e0a6a00
  410d2a:	dec    esp
  410d2b:	inc    edi
  410d2c:	dec    ebx
  410d2d:	add    edi,edi
  410d2f:	mov    ch,0xe6
  410d31:	sti    
  410d32:	std    
  410d33:	push   DWORD PTR [ebp+0x72]
  410d36:	or     ch,al
  410d38:	mov    dh,0x55
  410d3a:	std    
  410d3b:	call   DWORD PTR [ebx-0x7e]
  410d3e:	(bad)  
  410d40:	arpl   bx,dx
  410d42:	sub    BYTE PTR [ecx+0x63],0x44
  410d46:	in     al,dx
  410d47:	inc    esi
  410d48:	and    ch,BYTE PTR [edi+edi*2-0x4c]
  410d4c:	(bad)  
  410d4d:	xor    al,BYTE PTR [ecx+0xeb8acfe]
  410d53:	call   0xfec0a96a
  410d58:	jmp    0x851a:0x94f653e8
  410d5f:	mov    esp,0xfe811aab
  410d64:	arpl   WORD PTR [ebx-0x7a],bx
  410d67:	xchg   ebx,eax
  410d68:	arpl   WORD PTR [edx+eax*1+0x68],bp
	...
  410d78:	add    BYTE PTR [eax],al
  410d7a:	add    dh,ch
  410d7c:	mov    ds:0xa8dfffc1,al
  410d81:	jbe    0x410dd2
  410d83:	xor    BYTE PTR fs:[esi+esi*8+0x5c],bl
  410d88:	pusha  
  410d89:	push   0x6b
  410d8b:	rcl    DWORD PTR [edi+0x7f],1
  410d8e:	or     ah,BYTE PTR [ebx]
  410d90:	(bad)  
  410d92:	add    dh,0x52
  410d95:	add    dh,BYTE PTR [ebp+esi*4-0x15]
  410d99:	mov    ebp,0x7fb82ce3
  410d9e:	push   DWORD PTR [eax+0x3bbc84c1]
  410da4:	mov    al,0x7f
  410da6:	(bad)  
  410da7:	arpl   WORD PTR [edx],bx
  410da9:	call   0x6faf8115
  410dae:	mov    ebp,0xe80c1a0c
  410db3:	xchg   ecx,eax
  410db4:	and    eax,0x39fcfe81
  410db9:	imul   esi,esi,0xfffffff4
  410dbc:	idiv   DWORD PTR [edi+0x74]
  410dbf:	pop    ebx
  410dc0:	xchg   BYTE PTR [eax+0x48],cl
  410dc3:	in     al,0xe7
  410dc5:	jg     0x410d7b
  410dc7:	mov    DWORD PTR ds:0x78d5805e,0xbdbb0bd3
  410dd1:	lahf   
  410dd2:	add    ch,0x78
  410dd5:	shl    DWORD PTR [edi-0x43],cl
  410dd8:	mov    dl,0x20
  410dda:	js     0x410d91
  410ddc:	js     0x410e1b
  410dde:	test   BYTE PTR [eax],0x0
	...
  410ded:	add    BYTE PTR [ebp+ebp*2-0x4f],ah
  410df1:	retf   0x78a5
  410df4:	sub    eax,0x2570bcb6
  410df9:	adc    BYTE PTR [ebp+0x556bf0f2],0xce
  410e00:	adc    eax,0x2cb28580
  410e05:	js     0x410e84
  410e07:	js     0x410e0e
  410e09:	neg    BYTE PTR [ebp+ebp*2+0x71]
  410e0d:	retf   0x786d
  410e10:	cmc    
  410e11:	mov    ch,0x94
  410e13:	jo     0x410e02
  410e15:	jg     0x410e74
  410e17:	repnz lock imul edx,edi,0xffffffce
  410e1c:	fnstsw WORD PTR [edi+0x4d]
  410e1f:	mov    dl,0xb0
  410e21:	ja     0x410e68
  410e23:	js     0x410de5
  410e25:	xchg   DWORD PTR [eax-0x10803a88],ebp
  410e2b:	ins    BYTE PTR es:[edi],dx
  410e2c:	mov    ch,0x7f
  410e2e:	sub    eax,0x25d0346d
  410e33:	js     0x410de2
  410e35:	mov    ecx,0x7fa57038
  410e3a:	cld    
  410e3b:	cmc    
  410e3c:	sub    al,0x7f
  410e3e:	or     eax,0xd685b78
  410e43:	js     0x410dd2
  410e45:	ins    BYTE PTR es:[edi],dx
  410e46:	xchg   cl,cl
  410e48:	test   DWORD PTR [edi-0xb],edi
  410e4b:	mov    cl,0x98
  410e4d:	ja     0x410e3c
  410e4f:	ja     0x410e50
  410e51:	add    BYTE PTR [eax],0x0
	...
  410e60:	add    BYTE PTR [eax],cl
  410e62:	int3   
  410e63:	(bad)  
  410e64:	outs   dx,BYTE PTR ds:[esi]
  410e65:	pop    esp
  410e66:	mov    cl,0xeb
  410e68:	pop    esi
  410e69:	push   esp
  410e6a:	ja     0x410e6a
  410e6c:	aam    0x5c
  410e6e:	js     0x410ee4
  410e70:	loope  0x410eaa
  410e72:	inc    edx
  410e73:	cld    
  410e74:	dec    esi
  410e75:	cmp    al,0x77
  410e77:	mov    ah,0x55
  410e79:	sub    al,0x77
  410e7b:	(bad)  
  410e7c:	push   ecx
  410e7d:	ins    BYTE PTR es:[edi],dx
  410e7e:	leave  
  410e7f:	(bad)  
  410e80:	ss and al,0xc1
  410e83:	test   DWORD PTR [eax+0x39],0x1426fe79
  410e8a:	icebp  
  410e8b:	sti    
  410e8c:	adc    esi,ebx
  410e8e:	sbb    DWORD PTR [eax],eax
  410e90:	jmp    0xe94c54ac
  410e95:	fwait
  410e96:	mov    ch,bl
  410e98:	push   0x2b
  410e9a:	mov    WORD PTR fs:[esp+ebp*8-0x62289839],fs
  410ea2:	(bad)  
  410ea3:	inc    DWORD PTR [eax-0x16bf3f43]
  410ea9:	aad    0xf1
  410eab:	or     edx,ecx
  410ead:	test   esi,eax
  410eaf:	(bad)  
  410eb0:	(bad)  
  410eb1:	pop    ecx
  410eb2:	inc    ebp
  410eb3:	jae    0x410ef7
  410eb5:	pop    ss
  410eb6:	test   BYTE PTR [ebp+eax*8+0x5c],bh
  410eba:	lock pop esi
  410ebc:	mov    esi,0xb1448670
  410ec1:	(bad)  
  410ec3:	div    DWORD PTR [ebp+0x0]
	...
  410ed1:	add    BYTE PTR [eax],al
  410ed3:	add    BYTE PTR [edi+0x5],ah
  410ed6:	add    BYTE PTR [edi],bl
  410ed8:	pop    esp
  410ed9:	ds inc esp
  410edb:	mov    eax,ds:0xe9000594
  410ee0:	jns    0x410ea6
  410ee2:	(bad)  
  410ee3:	adc    al,0x7f
  410ee5:	fisub  WORD PTR [edi]
  410ee7:	add    BYTE PTR [ebp+0x40],al
  410eea:	dec    BYTE PTR [edi+eax*2+0x16e84eed]
  410ef1:	sbb    DWORD PTR [eax],eax
  410ef3:	add    BYTE PTR [ecx-0x42],cl
  410ef6:	or     ch,BYTE PTR [edx-0x36]
  410ef9:	xchg   ebp,eax
  410efa:	inc    ebx
  410efb:	in     al,0xa
  410efd:	imul   ebx,ebp,0x46
  410f00:	sti    
  410f01:	add    bh,bh
  410f03:	jne    0x410ea3
  410f05:	jmp    0xc009:0xf71d4edc
  410f0c:	test   BYTE PTR [esi],0x50
  410f0f:	push   0xbeef02bb
  410f14:	cli    
  410f15:	div    DWORD PTR [ebx+0x8]
  410f18:	jb     0x410ebf
  410f1a:	imul   edi,edi,0x6d
  410f1d:	jmp    0x4dfd:0xf76d4bac
  410f24:	push   edx
  410f25:	cmp    DWORD PTR [ebx-0x8],0xffffff8a
  410f29:	jge    0x410ee1
  410f2b:	call   0x3e5a4a
  410f30:	inc    ebx
  410f31:	les    eax,FWORD PTR [esi]
  410f33:	add    bh,dh
  410f35:	mov    ch,dl
  410f37:	add    DWORD PTR [eax],0x0
	...
  410f46:	add    BYTE PTR [esi],al
  410f48:	test   DWORD PTR [eax+0x0],ebp
  410f4b:	mov    al,0x40
  410f4d:	std    
  410f4e:	jne    0x410f92
  410f50:	jmp    0x4587:0xf82d48c0
  410f57:	push   ds
  410f58:	imul   edi,ebx,0xff017b46
  410f5e:	xor    eax,0x412a81
  410f63:	int    0x6d
  410f65:	push   es
  410f66:	call   0x3e9465
  410f6b:	jb     0x410f63
  410f6d:	inc    esp
  410f6e:	inc    ecx
  410f6f:	arpl   WORD PTR [edx+ebp*8+0x1],bp
  410f73:	arpl   WORD PTR [edx+eax*4-0x2],bp
  410f77:	outs   dx,BYTE PTR ds:[esi]
  410f78:	je     0x410fe4
  410f7a:	fucomp st(7)
  410f7c:	idiv   BYTE PTR [esi+edi*8+0x2e]
  410f80:	and    ebp,DWORD PTR [ebx]
  410f82:	inc    ecx
  410f83:	arpl   di,sp
  410f85:	test   BYTE PTR [edi],0xcb
  410f88:	adc    al,0x7d
  410f8a:	dec    ah
  410f8c:	push   ebx
  410f8d:	add    BYTE PTR [eax],al
  410f8f:	arpl   sp,bp
  410f91:	jl     0x411007
  410f93:	imul   eax,esp,0x1f
  410f96:	push   DWORD PTR [esi+edi*4+0x36af747c]
  410f9d:	test   DWORD PTR [edi],0xfecbf1bb
  410fa3:	pushf  
  410fa4:	and    al,0x42
  410fa6:	add    esp,DWORD PTR [ebx-0x47]
  410fa9:	xchg   ebx,ebp
	...
  410fb7:	add    BYTE PTR [eax],al
  410fb9:	add    al,ah
  410fbb:	pop    ds
  410fbc:	pusha  
  410fbd:	push   ebp
  410fbe:	sub    al,0x82
  410fc0:	add    ch,BYTE PTR [edx+0x2b]
  410fc3:	pop    es
  410fc4:	test   DWORD PTR [edi],0xfeca9f8b
  410fca:	ins    BYTE PTR es:[edi],dx
  410fcb:	hlt    
  410fcc:	(bad)  
  410fcd:	sti    
  410fce:	loopne 0x410f80
  410fd0:	jno    0x410fff
  410fd2:	mov    ds:0xdf0f025e,al
  410fd7:	mov    ecx,0xdf630001
  410fdc:	cmp    eax,0x41d75f5
  410fe1:	add    BYTE PTR [edx+ebp*8+0x42],ch
  410fe5:	add    BYTE PTR [ebx+0x5e],ah
  410fe8:	jg     0x411026
  410fea:	cs add eax,0x6c24ffc3
  410ff0:	xchg   BYTE PTR [edx-0x7cfda19e],dh
  410ff6:	push   esi
  410ff7:	add    eax,0x5a22da8
  410ffc:	jmp    0xe7ecef0d
  411001:	add    esp,DWORD PTR [ebx-0x78]
  411004:	retf   
  411005:	inc    esi
  411006:	inc    esi
  411007:	(bad)  
  411008:	call   0x5fca6c10
  41100d:	add    ah,BYTE PTR [ebx+0x5]
  411010:	push   0x3e
  411012:	stos   BYTE PTR es:[edi],al
  411013:	and    ebp,DWORD PTR [eax]
  411015:	add    al,0x63
  411017:	add    al,0x6d
  411019:	(bad)  
  41101a:	arpl   WORD PTR ds:0x80e9,ax
	...
  41102c:	add    BYTE PTR [edi-0x433cf9be],al
  411032:	je     0x411011
  411034:	xchg   DWORD PTR ds:0xe003e906,esi
  41103a:	xor    al,BYTE PTR [eax+0x2d]
  41103d:	and    al,BYTE PTR ds:0xf7e70ce9
  411043:	out    0x3,eax
  411045:	arpl   bp,bx
  411047:	jae    0x41100d
  411049:	and    eax,DWORD PTR ds:0x1a840393
  41104f:	sbb    BYTE PTR ds:0xc6600522,ch
  411055:	ins    BYTE PTR es:[edi],dx
  411056:	mov    BYTE PTR [ebx+0x65036c7b],al
  41105c:	(bad)  [ebx+0x5]
  41105f:	jmp    0xee1c658c
  411064:	cmc    
  411065:	dec    esp
  411066:	je     0x411063
  411068:	jo     0x4110e8
  41106a:	(bad)  
  41106b:	call   0xdf4144fe
  411070:	icebp  
  411071:	addr16 pop esi
  411073:	push   ss
  411074:	add    eax,0xd2720563
  411079:	pop    eax
  41107a:	xor    BYTE PTR [edx],0xec
  41107d:	fldz   
  41107f:	inc    DWORD PTR [esi+ebp*8-0x40]
  411083:	repz loop 0x41101f
  411086:	add    eax,DWORD PTR [esp+eax*1-0x6ffffa9a]
  41108d:	pop    ecx
  41108e:	push   es
  41108f:	add    cl,ch
	...
  41109d:	add    BYTE PTR [eax],al
  41109f:	add    BYTE PTR [eax],cl
  4110a1:	test   BYTE PTR [esi+0x28],al
  4110a4:	pop    edi
  4110a5:	je     0x4110dd
  4110a7:	xchg   ecx,eax
  4110a8:	inc    esi
  4110a9:	adc    DWORD PTR [eax],eax
  4110ab:	jmp    0x6c4f5605
  4110b0:	push   ebx
  4110b1:	je     0x4110b1
  4110b3:	jmp    0xe9490395
  4110b8:	pop    ecx
  4110b9:	mov    ecx,ebp
  4110bb:	jmp    0xdf401620
  4110c0:	push   0x39a35f5d
  4110c5:	jae    0x41104f
  4110c7:	lods   al,BYTE PTR ds:[esi]
  4110c8:	xor    BYTE PTR [ebx+0x76],dh
  4110cb:	icebp  
  4110cc:	sub    ecx,edi
  4110ce:	out    dx,eax
  4110cf:	ss nop
  4110d1:	jmp    edi
  4110d3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4110d5:	jb     0x4110d5
  4110d7:	xchg   ecx,eax
  4110d8:	out    dx,al
  4110d9:	retf   0xe940
  4110dc:	or     ecx,edi
  4110de:	out    dx,eax
  4110df:	add    DWORD PTR [esi],ecx
  4110e1:	verw   cx
  4110e4:	gs inc ebp
  4110e6:	push   cs
  4110e7:	ins    BYTE PTR es:[edi],dx
  4110e8:	mov    bl,0x73
  4110ea:	(bad)  
  4110eb:	jmp    0xaccc8466
  4110f0:	enter  0x8cc2,0xa4
  4110f4:	mov    esp,0x3ee969c2
  4110f9:	jae    0x41114f
  4110fb:	fidiv  WORD PTR [ebx+0x70]
  4110fe:	sub    eax,0xbffe6728
  411103:	fiadd  WORD PTR [eax]
	...
  411111:	add    BYTE PTR [eax],al
  411113:	mov    ah,0x9b
  411115:	(bad)  
  411116:	(bad)  
  411117:	cmp    al,BYTE PTR [edi]
  411119:	lea    eax,[ebp+0x1e]
  41111c:	push   edi
  41111d:	std    
  41111e:	jne    0x411142
  411120:	lock jae 0x41110f
  411123:	lds    edx,FWORD PTR ds:0x93b2ec1
  411129:	or     eax,eax
  41112b:	outs   dx,BYTE PTR ds:[esi]
  41112c:	jno    0x4110b9
  41112e:	inc    ebp
  41112f:	jmp    0x6a09:0x60006856
  411136:	pop    es
  411137:	push   eax
  411138:	or     edi,edi
  41113a:	jne    0x41111a
  41113c:	out    dx,eax
  41113d:	adc    eax,ebp
  41113f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411140:	dec    ecx
  411141:	dec    BYTE PTR [edx]
  411143:	or     ah,BYTE PTR [ebx+0x54]
  411146:	jmp    FWORD PTR [edi+0x13e8e6e6]
  41114c:	lock std 
  41114e:	mov    DWORD PTR [edi],ecx
  411150:	fisttp DWORD PTR [ebx-0x2a9d5bb]
  411156:	jne    0x4110de
  411158:	pusha  
  411159:	(bad)  
  41115a:	imul   edi,DWORD PTR [ebp-0x200101a0],0x3f15fdd2
  411164:	sbb    al,0x41
  411166:	add    BYTE PTR [ecx-0xdd68d3a],dl
  41116c:	push   es
  41116d:	add    bh,ch
  41116f:	adc    al,0xef
  411171:	jae    0x41117b
  411173:	bound  esi,QWORD PTR [esi]
  411175:	inc    esi
  411176:	inc    DWORD PTR [eax]
	...
  411184:	add    BYTE PTR [eax],al
  411186:	gs out dx,eax
  411188:	je     0x411192
  41118a:	gs jne 0x41118f
  41118d:	(bad)  
  41118e:	(bad)  
  411190:	out    0x58,eax
  411192:	cld    
  411193:	out    dx,al
  411194:	std    
  411195:	jmp    FWORD PTR [edi+0x675fde9]
  41119b:	in     al,dx
  41119c:	jae    0x4111a6
  41119e:	arpl   WORD PTR [ebp+ecx*8+0x45],ax
  4111a2:	xor    al,0x43
  4111a4:	js     0x41121a
  4111a6:	andps  xmm0,XMMWORD PTR [eax+ecx*2+0x7478b324]
  4111ae:	pop    es
  4111af:	mov    ebx,0x1d45c90e
  4111b4:	add    al,0x6a
  4111b6:	arpl   WORD PTR [ebx+0x7904ebee],bp
  4111bc:	inc    ebp
  4111bd:	sub    eax,0x74775ca2
  4111c2:	repz and eax,0x48
  4111c6:	in     al,dx
  4111c7:	mov    al,BYTE PTR [esi+eax*8-0xc390cad]
  4111ce:	loopne 0x411248
  4111d0:	outs   dx,BYTE PTR ds:[esi]
  4111d1:	jmp    DWORD PTR [ebp-0x17]
  4111d4:	imul   edi,ebp,0xffffffcc
  4111d7:	jmp    0x6978:0xd2c5b46a
  4111de:	arpl   bx,bx
  4111e0:	out    dx,al
  4111e1:	div    DWORD PTR [eax+edi*2+0x5c222d79]
  4111e8:	ja     0x41125e
	...
  4111f6:	add    BYTE PTR [eax],al
  4111f8:	add    BYTE PTR [edi-0x74f810ce],ah
  4111fe:	cmc    
  4111ff:	sar    esi,0x94
  411202:	sbb    al,0xc8
  411205:	mov    eax,ds:0xd855025f
  41120a:	inc    DWORD PTR [edx+0x79129fc3]
  411210:	(bad)  
  411211:	out    0xa8,al
  411213:	jbe    0x411264
  411215:	ins    BYTE PTR es:[edi],dx
  411216:	lock push es
  411218:	jmp    FWORD PTR [esi]
  41121a:	mov    bh,0x29
  41121c:	inc    ecx
  41121d:	arpl   WORD PTR [esi],ax
  41121f:	std    
  411220:	sbb    ah,BYTE PTR [ebx+0x5e]
  411223:	or     eax,eax
  411225:	pop    esp
  411226:	add    eax,0x563a86c
  41122b:	jmp    0xe8aeb970
  411230:	add    esp,DWORD PTR [ebx+0x5]
  411233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411234:	mov    esi,0x3ed7130
  411239:	arpl   bx,bx
  41123b:	call   0xe9202f2d
  411240:	in     eax,dx
  411241:	adc    al,0x82
  411243:	and    esi,DWORD PTR [eax-0x64]
  411246:	sub    BYTE PTR [ebx+0x6f],0xd
  41124a:	jno    0x4111e9
  41124c:	sar    ebp,cl
  41124e:	cli    
  41124f:	nop
  411250:	js     0x4112c1
  411252:	jno    0x4111d4
  411254:	(bad)  
  411255:	dec    ecx
  411256:	add    eax,0xfa230ce9
  41125b:	jecxz  0x4112c7
	...
  411269:	add    BYTE PTR [eax],al
  41126b:	add    BYTE PTR [edx+0x6],dl
  41126e:	jmp    0xc0f25d76
  411273:	ret    0x6fcc
  411276:	fild   DWORD PTR [edi]
  411278:	mov    ebx,0xbd78acf5
  41127d:	aad    0x61
  41127f:	push   ebx
  411280:	out    0x8a,eax
  411282:	push   esp
  411283:	jo     0x411232
  411285:	jo     0x41121f
  411287:	aad    0xbc
  411289:	in     eax,0xac
  41128b:	js     0x41122a
  41128d:	jle    0x4112fa
  41128f:	push   edi
  411290:	lea    esi,[eax+0x2d]
  411293:	imul   edx,esi,0xffffffbd
  411296:	and    eax,0x9104fa78
  41129b:	inc    ecx
  41129c:	and    eax,0xaf78e8c6
  4112a1:	push   ecx
  4112a2:	adc    eax,0xbb706d78
  4112a7:	int3   
  4112a8:	cmp    eax,esi
  4112aa:	call   0xfffd291a
  4112af:	cmc    
  4112b0:	int3   
  4112b1:	jge    0x411237
  4112b3:	stc    
  4112b4:	mov    esp,0x5f53fe6f
  4112b9:	(bad)  
  4112bb:	es es jo 0x4112bc
  4112bf:	pushf  
  4112c0:	fwait
  4112c1:	ja     0x4112c1
  4112c3:	into   
  4112c4:	mov    ah,0x39
  4112c6:	dec    ebx
  4112c7:	adc    BYTE PTR [esi],bl
  4112c9:	jo     0x4112b1
  4112cb:	popa   
  4112cc:	sub    BYTE PTR [edi-0x2],ch
  4112cf:	pusha  
	...
  4112dc:	add    BYTE PTR [eax],al
  4112de:	add    dl,ah
  4112e0:	pop    ebx
  4112e1:	imul   BYTE PTR [esi+0x10ffde94]
  4112e7:	scas   eax,DWORD PTR es:[edi]
  4112e8:	mov    DWORD PTR [eax-0x17],0x9edbb975
  4112ef:	ins    BYTE PTR es:[edi],dx
  4112f0:	outs   dx,DWORD PTR ds:[esi]
  4112f1:	(bad)  
  4112f2:	aam    0x19
  4112f4:	sbb    eax,0xee78e941
  4112f9:	dec    edx
  4112fa:	jle    0x411350
  4112fc:	jge    0x411282
  4112fe:	add    DWORD PTR [edi+ebp*2-0x2],0xd4dd6703
  411306:	scas   al,BYTE PTR es:[edi]
  411307:	lahf   
  411308:	outs   dx,DWORD PTR ds:[esi]
  411309:	std    
  41130a:	xchg   esp,eax
  41130b:	sbb    esi,DWORD PTR [edi-0x2]
  41130e:	push   esi
  41130f:	sub    al,0x39
  411311:	dec    ebx
  411312:	add    BYTE PTR [esi-0x665a1991],ah
  411318:	outs   dx,BYTE PTR ds:[esi]
  411319:	(bad)  
  41131a:	jo     0x4112fe
  41131c:	arpl   si,si
  41131e:	ss or  al,0xde
  411321:	inc    eax
  411323:	sub    al,bh
  411325:	inc    eax
  411326:	jmp    0x171ccc38
  41132b:	hlt    
  41132c:	outs   dx,BYTE PTR ds:[esi]
  41132d:	(bad)  
  41132e:	fsubr  QWORD PTR [ecx-0x716bee4]
  411334:	xor    DWORD PTR [ebx+0x0],ecx
  411337:	pop    ebp
  411338:	clc    
  411339:	xchg   DWORD PTR [ebp-0x22196],eax
  41133f:	leave  
  411340:	lods   al,BYTE PTR ds:[esi]
  411341:	jmp    0x0:0xf7
	...
  411350:	add    BYTE PTR [eax],al
  411352:	cmp    eax,0x8973fef8
  411357:	popa   
  411358:	(bad)  
  411359:	jmp    FWORD PTR ds:0x4275fdb9
  41135f:	fist   DWORD PTR [ecx-0x207e2bc]
  411365:	mov    ch,0xea
  411367:	(bad)  
  411369:	(bad)  
  41136a:	fnsave [ebp+0x6]
  41136d:	call   0x3ec297
  411372:	mov    ebp,0xbdf7eab5
  411377:	idiv   ebp
  411379:	jne    0x41136d
  41137b:	fcmovbe st,st(7)
  41137d:	inc    esp
  41137e:	int    0xf7
  411380:	std    
  411381:	mov    ch,0xe2
  411383:	(bad)  
  411385:	(bad)  
  411386:	fnsave [ebp+0x6]
  411389:	call   0x3ec29f
  41138e:	dec    ebp
  41138f:	mov    ch,0xe2
  411391:	idiv   DWORD PTR ds:0xd275fdf7
  411397:	fidivr DWORD PTR [ebx-0x208e2bc]
  41139d:	mov    ch,0x2a
  41139f:	(bad)  
  4113a1:	call   FWORD PTR ds:0xcde80675
  4113a7:	scas   al,BYTE PTR es:[edi]
  4113a8:	std    
  4113a9:	call   FWORD PTR [ebp-0x4b]
  4113ac:	(bad)  
  4113ae:	dec    ebp
  4113af:	idiv   ebp
  4113b1:	jne    0x411335
  4113b3:	fidivr DWORD PTR [esi-0x2]
	...
  4113c2:	add    BYTE PTR [eax],al
  4113c4:	add    BYTE PTR ds:0x3eb5fdf7,bh
  4113ca:	(bad)  
  4113cc:	jmp    DWORD PTR [ebx+0x4]
  4113cf:	stos   BYTE PTR es:[edi],al
  4113d0:	inc    esi
  4113d1:	ins    BYTE PTR es:[edi],dx
  4113d2:	push   DWORD PTR [ebp-0x4c]
  4113d5:	jae    0x411446
  4113d7:	je     0x4113d7
  4113d9:	dec    ebx
  4113da:	mov    esp,0x7754febd
  4113df:	scas   al,BYTE PTR es:[edi]
  4113e0:	jmp    0x411436
  4113e2:	pop    edi
  4113e3:	je     0x4113cc
  4113e5:	out    dx,al
  4113e6:	push   ds
  4113e7:	jne    0x4113e7
  4113e9:	cmp    al,0x99
  4113eb:	imul   esi,esi,0x34
  4113ee:	push   edi
  4113ef:	imul   ecx,DWORD PTR [ecx-0x18bc05c],0xffffffee
  4113f6:	aas    
  4113f7:	ins    BYTE PTR es:[edi],dx
  4113f8:	(bad)  
  4113f9:	sbb    al,0x54
  4113fb:	hlt    
  4113fc:	inc    esi
  4113fd:	adc    al,0xb7
  4113ff:	je     0x4113b5
  411401:	add    esi,DWORD PTR [edi+0xffbfe74]
  411407:	mov    ebp,0xbe8efcfe
  41140c:	test   DWORD PTR [edx],0xecfe75fc
  411412:	jle    0x411402
  411414:	sti    
  411415:	sti    
  411416:	lds    ebx,FWORD PTR [edx]
  411418:	add    BYTE PTR [ebx-0x4b],ah
  41141b:	inc    ecx
  41141c:	pop    es
  41141d:	arpl   WORD PTR [ecx],dx
  41141f:	mov    ebx,ebp
  411421:	loopne 0x4113ca
  411423:	ja     0x41148e
  411425:	arpl   WORD PTR [edx-0x37],dx
  411428:	inc    BYTE PTR [eax]
	...
  411436:	add    BYTE PTR [eax],al
  411438:	ss je  0x4114a5
  41143b:	test   DWORD PTR [edi],ebx
  41143d:	xlat   BYTE PTR ds:[ebx]
  41143e:	je     0x4113c8
  411440:	es shr bl,0xa6
  411444:	sbb    al,0x9d
  411446:	add    bh,bh
  411448:	push   ss
  411449:	je     0x4114b5
  41144b:	pop    es
  41144c:	xchg   ebp,eax
  41144d:	ss jne 0x41144e
  411450:	push   ss
  411451:	and    BYTE PTR [ebp+0x74],dh
  411454:	pop    ebx
  411455:	add    eax,0x6e20b311
  41145a:	sbb    eax,0xe908a24b
  41145f:	into   
  411460:	fldenv [eax+0x69]
  411463:	inc    eax
  411464:	jo     0x4114d3
  411466:	jnp    0x41146f
  411468:	dec    ebx
  411469:	and    esp,ecx
  41146b:	add    esp,DWORD PTR [ebx+0x0]
  41146e:	sub    edi,ebp
  411470:	pusha  
  411471:	sub    cl,BYTE PTR ds:[eax]
  411474:	arpl   WORD PTR [ebx+ebx*2+0x14],bp
  411478:	dec    ebx
  411479:	adc    eax,DWORD PTR [ecx]
  41147b:	add    al,0x63
  41147d:	add    BYTE PTR [ecx-0x55c19f12],ch
  411483:	pop    es
  411484:	arpl   WORD PTR [esi+0x2b],di
  411487:	jl     0x4114a6
  411489:	repz shr BYTE PTR [ebx+0x6f],0xc4
  41148e:	mov    ch,0x74
  411490:	fcmovnb st,st(2)
  411492:	lods   al,BYTE PTR ds:[esi]
  411493:	je     0x411424
  411495:	imul   esp,DWORD PTR [ebp+0x136cf4ee],0x14
	...
  4114ab:	or     edi,DWORD PTR [edx+edi*1]
  4114ae:	jne    0x41149d
  4114b0:	add    BYTE PTR [ecx+0x2b7e29ef],ch
  4114b6:	jo     0x411502
  4114b8:	add    eax,0xd5d0be6c
  4114bd:	jne    0x4114ad
  4114bf:	enter  0xba5d,0xe7
  4114c3:	lds    ebp,FWORD PTR [ecx+esi*8+0x43]
  4114c7:	xor    BYTE PTR [ebx],ah
  4114c9:	rol    DWORD PTR [ebx],1
  4114cb:	push   ebx
  4114cc:	pop    esp
  4114cd:	xchg   esi,eax
  4114ce:	je     0x411507
  4114d0:	std    
  4114d1:	inc    eax
  4114d2:	shl    DWORD PTR [ecx],cl
  4114d4:	ins    BYTE PTR es:[edi],dx
  4114d5:	inc    ebp
  4114d6:	je     0x4114ef
  4114d8:	stc    
  4114d9:	cmp    eax,0xff5d5cee
  4114de:	lea    esp,[ebx+0x752efe6b]
  4114e4:	js     0x4114e4
  4114e6:	pushf  
  4114e7:	hlt    
  4114e8:	push   0x74
  4114ea:	icebp  
  4114eb:	or     cl,bl
  4114ed:	inc    edx
  4114ee:	push   ss
  4114ef:	imul   DWORD PTR [edx+0x74]
  4114f2:	or     eax,0x645a1f8
  4114f7:	xlat   BYTE PTR ds:[ebx]
  4114f8:	cmp    eax,0xd260edc1
  4114fd:	mov    al,BYTE PTR ds:0x97d347e3
  411503:	iret   
  411504:	icebp  
  411505:	or     edx,ecx
  411507:	dec    eax
  411508:	mov    edi,0xac34defe
  41150d:	je     0x4114fb
	...
  41151b:	add    BYTE PTR [eax],al
  41151d:	add    BYTE PTR [edx],dl
  41151f:	cmp    eax,0x7a60ddc1
  411524:	inc    esp
  411525:	mov    ecx,0xed746b37
  41152a:	mov    eax,0x90b64c0d
  41152f:	(bad)  
  411530:	mov    edi,0xff4bdcde
  411535:	call   0x9db5819a
  41153a:	xchg   edi,eax
  41153b:	add    DWORD PTR [ebp-0x6a],0x7d447d70
  411542:	jo     0x411535
  411544:	sti    
  411545:	xchg   dl,bl
  411547:	pop    edi
  411548:	(bad)  
  411549:	hlt    
  41154a:	dec    eax
  41154b:	fs stos BYTE PTR es:[edi],al
  41154d:	das    
  41154e:	push   eax
  41154f:	imul   ecx,DWORD PTR [edx-0x5da2db0c],0xffffffe9
  411556:	pusha  
  411557:	add    eax,0xc4f8eb68
  41155c:	(bad)  
  41155d:	mov    esi,0xe9177408
  411562:	pusha  
  411563:	add    al,al
  411565:	add    bh,bl
  411567:	cld    
  411568:	call   0x48a005
  41156d:	mov    ecx,DWORD PTR [edx+0x49]
  411570:	add    BYTE PTR [eax-0x45],cl
  411573:	pop    es
  411574:	call   0x4892b2
  411579:	add    ebx,DWORD PTR [edx-0x16]
  41157c:	jae    0x411566
  41157e:	loop   0x411591
  411580:	dec    eax
  411581:	inc    ecx
	...
  41158e:	add    BYTE PTR [eax],al
  411590:	add    BYTE PTR [edx+0x4d],bh
  411593:	out    0xd3,al
  411595:	inc    edx
  411596:	pop    es
  411597:	add    BYTE PTR [ebx],cl
  411599:	mov    ch,BYTE PTR [eax+eax*1-0x15]
  41159d:	int3   
  41159e:	call   0xe4309db1
  4115a3:	xchg   DWORD PTR [ebp+0x2e],eax
  4115a6:	dec    edi
  4115a7:	adc    cl,BYTE PTR [eax-0x75]
  4115aa:	add    DWORD PTR [esi-0x18],edx
  4115ad:	sar    dh,1
  4115af:	(bad)  
  4115b0:	inc    DWORD PTR [ecx-0x39]
  4115b3:	jae    0x4115b7
  4115b5:	xor    DWORD PTR [esi-0x77],edx
  4115b8:	lock mov dl,0xd
  4115bb:	dec    eax
  4115bc:	inc    ecx
  4115bd:	cli    
  4115be:	into   
  4115bf:	cld    
  4115c0:	push   ss
  4115c1:	cli    
  4115c2:	push   es
  4115c3:	add    esi,eax
  4115c5:	jae    0x411634
  4115c7:	fisubr DWORD PTR [eax-0x8]
  4115ca:	scas   al,BYTE PTR es:[edi]
  4115cb:	aas    
  4115cc:	add    BYTE PTR [ecx+ecx*8],ch
  4115cf:	xchg   esi,eax
  4115d0:	sbb    dl,bh
  4115d2:	push   es
  4115d3:	or     eax,eax
  4115d5:	fild   WORD PTR [eax]
  4115d7:	jmp    0x411614
  4115d9:	push   eax
  4115da:	push   ss
  4115db:	mov    BYTE PTR [ebp-0x13],dl
  4115de:	jmp    0x3d82ee26
  4115e3:	loop   0x4115ab
  4115e5:	retf   0x8b06
  4115e8:	inc    ebp
  4115e9:	and    bh,BYTE PTR [esi+edi*8-0x82c9c01]
  4115f0:	(bad)  [ecx+edx*2+0xfe5a]
	...
  411603:	add    BYTE PTR [esi],dl
  411605:	je     0x411661
  411607:	xchg   edx,eax
  411608:	xchg   ebp,eax
  411609:	sub    esi,DWORD PTR [edx-0x77]
  41160c:	ss mov edi,0xe47f447d
  411612:	adc    cl,BYTE PTR [edx+0x447e2b16]
  411618:	fwait
  411619:	hlt    
  41161a:	adc    al,BYTE PTR [eax-0x7afea3d3]
  411620:	psubq  mm6,QWORD PTR [ecx-0x2]
  411624:	pop    esp
  411625:	jmp    0xa143fd88
  41162a:	jno    0x41162a
  41162c:	ficomp WORD PTR [eax+0x233b4f72]
  411632:	mov    esi,0x3573cfe
  411637:	pop    esi
  411638:	sub    bl,BYTE PTR [esi-0x18690001]
  41163e:	pop    edi
  41163f:	(bad)  
  411640:	scas   al,BYTE PTR es:[edi]
  411641:	dec    eax
  411642:	pop    edx
  411643:	aam    0xaa
  411645:	inc    ebx
  411646:	jo     0x411652
  411648:	and    esi,DWORD PTR [eax]
  41164a:	sbb    ebp,DWORD PTR [eax+0x6]
  41164d:	sbb    eax,ebx
  41164f:	call   DWORD PTR [esp+eax*2-0x5d03b723]
  411656:	shl    DWORD PTR [edi+0x65],cl
  411659:	scas   al,BYTE PTR es:[edi]
  41165a:	ret    
  41165b:	inc    DWORD PTR [esp+ebx*2+0x3a5ef02]
  411662:	jp     0x4116aa
  411664:	and    bl,BYTE PTR [edx+edx*8-0x2]
	...
  411674:	add    BYTE PTR [eax],al
  411676:	add    BYTE PTR [esi+0x74],cl
  411679:	pop    edx
  41167a:	cmp    DWORD PTR [ebx],0x2ae770f3
  411680:	and    DWORD PTR [ecx-0x2],esi
  411683:	stos   BYTE PTR es:[edi],al
  411684:	add    al,0x2b
  411686:	cld    
  411687:	mov    ah,0xd0
  411689:	jno    0x4116eb
  41168b:	loope  0x4116cd
  41168d:	push   esp
  41168e:	fisub  WORD PTR [ebx+ebx*8-0x2e88f5e]
  411695:	push   eax
  411696:	in     eax,dx
  411697:	and    ch,BYTE PTR [edx+0x3d]
  41169a:	jnp    0x4116c3
  41169c:	imul   eax,edx,0xe0ef840d
  4116a2:	pop    ebx
  4116a3:	(bad)  
  4116a4:	imul   esp,DWORD PTR ds:0x1e260a71,0x715d64f7
  4116ae:	jno    0x411715
  4116b0:	imul   eax,DWORD PTR [edx-0xf0ca3f1],0xfd68f35b
  4116ba:	jo     0x411680
  4116bc:	add    eax,0xde0660e9
  4116c1:	clc    
  4116c2:	enter  0x5a3,0x51
  4116c6:	addr16 popf 
  4116c8:	(bad)  
  4116c9:	call   0xc13ece3e
  4116ce:	es mov ecx,0x9770cd68
  4116d4:	imul   eax,ebp,0x3e5d5cf6
  4116da:	mov    BYTE PTR [eax],0x0
	...
  4116e9:	add    BYTE PTR ds:0x60459f69,cl
  4116ef:	add    eax,0x87087d14
  4116f4:	lods   al,BYTE PTR ds:[esi]
  4116f5:	dec    ebx
  4116f6:	in     eax,dx
  4116f7:	push   0x69a77e9d
  4116fc:	cmp    BYTE PTR [ecx+0x6f],dh
  4116ff:	stc    
  411700:	(bad)  
  411701:	mul    BYTE PTR [ebp+ebx*2+0x2c]
  411705:	sbb    DWORD PTR [ebx+0x5],esp
  411708:	repnz inc ebx
  41170a:	pop    ebp
  41170b:	cmp    bh,0xa8
  41170e:	popa   
  41170f:	add    eax,0x70a5a600
  411714:	(bad)  
  411715:	call   0xa5081c7a
  41171a:	xor    al,0x67
  41171c:	push   es
  41171d:	jmp    0xc340f282
  411722:	pusha  
  411723:	(bad)  
  411725:	shl    BYTE PTR [eax+0x7a],cl
  411728:	inc    esp
  411729:	xor    eax,0x3d8479b0
  41172e:	or     esp,DWORD PTR [edi-0x2]
  411731:	cdq    
  411732:	repz lock mul DWORD PTR [esi]
  411736:	ins    DWORD PTR es:[edi],dx
  411737:	ins    BYTE PTR es:[edi],dx
  411738:	out    0xf7,eax
  41173a:	dec    ebx
  41173b:	add    eax,0xf420e200
  411740:	add    al,0x0
  411742:	out    0x4,eax
  411744:	add    cl,ch
  411746:	cmp    BYTE PTR [edi+eiz*1+0x746860a8],ch
  41174d:	in     eax,0x0
	...
  41175b:	add    BYTE PTR [eax],al
  41175d:	test   al,0x2d
  41175f:	dec    eax
  411760:	out    dx,al
  411761:	int3   
  411762:	mov    eax,0x80e2b98a
  411767:	repz (bad) 
  411769:	mov    esp,0x873b4f67
  41176e:	sbb    eax,0x7d8cce48
  411773:	test   BYTE PTR [ecx-0x2e019874],ah
  411779:	cld    
  41177a:	ret    
  41177b:	(bad)  
  41177c:	mov    dh,0x29
  41177e:	push   0xc4bf2966
  411783:	jmp    DWORD PTR [ebp-0x6109b046]
  411789:	jl     0x4117f2
  41178b:	je     0x41176e
  41178d:	mov    BYTE PTR [esi+0x7d4c8e46],al
  411793:	test   BYTE PTR [eax],al
  411795:	pop    edx
  411796:	lock std 
  411798:	push   DWORD PTR [eax+0x1]
  41179b:	push   0xfe428249
  4117a0:	(bad)  
  4117a1:	ja     0x41175c
  4117a3:	cmc    
  4117a4:	(bad)  
  4117a5:	cmp    eax,0x120873d8
  4117aa:	pusha  
  4117ab:	inc    ebp
  4117ac:	dec    DWORD PTR ds:0x35ec83ea
  4117b2:	fdivr  st,st(5)
  4117b4:	push   0xffffff8a
  4117b6:	dec    ebx
  4117b7:	push   eax
  4117b8:	dec    eax
  4117b9:	mov    ebx,0x72b5ff03
  4117be:	lock std 
  4117c0:	inc    DWORD PTR [eax]
	...
  4117ce:	add    BYTE PTR [eax],al
  4117d0:	dec    ebp
  4117d1:	outs   dx,BYTE PTR ds:[esi]
  4117d2:	push   es
  4117d3:	call   0x3e5686
  4117d8:	repz jge 0x4117c1
  4117db:	test   DWORD PTR [ebp-0x28],0xee8e858b
  4117e2:	std    
  4117e3:	(bad)  
  4117e4:	cli    
  4117e5:	dec    edx
  4117e6:	pop    ecx
  4117e7:	dec    eax
  4117e8:	sti    
  4117e9:	add    bh,bh
  4117eb:	mov    ch,0x72
  4117ed:	out    dx,al
  4117ee:	std    
  4117ef:	dec    DWORD PTR [ebp+0x6e]
  4117f2:	push   es
  4117f3:	call   0x3e5646
  4117f8:	mov    bl,0x7d
  4117fa:	loop   0x4117f3
  4117fc:	or     eax,0xa20068d8
  411801:	pop    edi
  411802:	inc    esi
  411803:	inc    ecx
  411804:	or     bl,al
  411806:	mov    bl,0xd8
  411808:	aad    0xd7
  41180a:	std    
  41180b:	inc    DWORD PTR [edi+0x69]
  41180e:	out    0x11,al
  411810:	inc    ebp
  411811:	(bad)  
  411812:	std    
  411813:	mov    DWORD PTR [edi-0x32000a1e],eax
  411819:	cmp    DWORD PTR [ebx+0x6d8763f0],0xfffffffe
  411820:	arpl   WORD PTR [eax],dx
  411822:	fild   DWORD PTR [edx-0x18a6eea]
  411828:	int3   
  411829:	pop    esp
  41182a:	mul    BYTE PTR [ecx-0x20]
  41182d:	xor    DWORD PTR [ebx-0xa],ebx
  411830:	mov    esp,0x7402d7
	...
  411841:	add    BYTE PTR [eax],al
  411843:	sbb    dl,BYTE PTR [edx+eax*1+0x0]
  411847:	mov    esp,0x53746d86
  41184c:	(bad)  
  41184d:	(bad)  
  41184e:	aas    
  41184f:	pushf  
  411850:	mov    bh,0x6d
  411852:	mov    ah,0x93
  411854:	daa    
  411855:	outs   dx,BYTE PTR ds:[esi]
  411856:	dec    BYTE PTR [ecx+esi*4-0x634417ee]
  41185d:	ins    DWORD PTR es:[edi],dx
  41185e:	(bad)  
  41185f:	jl     0x411852
  411861:	pop    esi
  411862:	div    BYTE PTR [edi+ebx*1+0x6e]
  411866:	je     0x4118bb
  411868:	adc    al,0x89
  41186a:	aas    
  41186b:	movd   mm6,DWORD PTR fs:[ebx+ecx*2+0x54fe6e0f]
  411874:	jmp    0x9c21008b
  411879:	ins    DWORD PTR es:[edi],dx
  41187a:	inc    BYTE PTR [ecx+ebp*1+0x4f]
  41187e:	idiv   BYTE PTR [edi+edx*2]
  411881:	ins    BYTE PTR es:[edi],dx
  411882:	mov    ah,0x3f
  411884:	inc    edi
  411885:	ins    BYTE PTR es:[edi],dx
  411886:	(bad)  
  411887:	sub    al,0xd1
  411889:	adc    ebp,eax
  41188b:	xchg   edi,eax
  41188c:	sbb    al,0x6d
  41188e:	(bad)  
  41188f:	sbb    al,0x91
  411891:	arpl   si,si
  411893:	adc    al,0x3f
  411895:	ins    BYTE PTR es:[edi],dx
  411896:	je     0x41190b
  411898:	push   esp
  411899:	fnstcw WORD PTR [edi]
  41189b:	add    al,0xaf
  41189d:	ins    BYTE PTR es:[edi],dx
  41189e:	je     0x4118f3
  4118a0:	xchg   edi,eax
  4118a1:	mov    dh,0xd7
  4118a3:	in     al,dx
  4118a4:	add    al,0xa6
  4118a6:	ins    DWORD PTR es:[edi],dx
	...
  4118b3:	add    BYTE PTR [eax],al
  4118b5:	add    ch,ch
  4118b7:	out    dx,eax
  4118b8:	lock pop ebx
  4118ba:	jb     0x411923
  4118bc:	xchg   ebp,eax
  4118bd:	ins    DWORD PTR es:[edi],dx
  4118be:	(bad)  [edi+0x65d575b0]
  4118c4:	nop
  4118c5:	loope  0x4118e8
  4118c7:	data16 jge 0x411937
  4118ca:	pcmpeqw mm7,QWORD PTR [ebp+0x6d]
  4118ce:	mov    ebp,0xb5c1105c
  4118d3:	gs gs mov bh,0xb8
  4118d7:	ins    DWORD PTR es:[edi],dx
  4118d8:	pop    ebp
  4118d9:	ins    DWORD PTR es:[edi],dx
  4118da:	mov    esp,0x9d6ca9b7
  4118df:	gs xchg ebx,eax
  4118e1:	pop    esp
  4118e2:	lea    esp,[ebp+0x45]
  4118e5:	pop    esp
  4118e6:	and    al,dl
  4118e8:	cmp    eax,0x4caf856d
  4118ed:	jne    0x41196c
  4118ef:	gs inc eax
  4118f1:	xor    eax,0x6d256620
  4118f6:	mov    bh,0x64
  4118f8:	adc    eax,0xc45c656d
  4118fd:	rcr    BYTE PTR [ebp+0x65],0xd
  411901:	(bad)  
  411902:	dec    esp
  411903:	outs   dx,DWORD PTR ds:[esi]
  411904:	mov    ch,0x6d
  411906:	dec    ebp
  411907:	gs std 
  411909:	test   BYTE PTR [eax+0x6e],0x7e
  41190d:	push   ss
  41190e:	arpl   WORD PTR ds:0x5684220,ax
  411914:	cmp    al,0x79
  411916:	cmp    BYTE PTR [ecx+0x6fa4],cl
	...
  411928:	add    BYTE PTR [edx+0x1db94305],bh
  41192e:	fneni(8087 only) 
  411930:	pop    ebx
  411931:	push   esi
  411932:	vpunpcklqdq ymm3,ymm7,ymm3
  411936:	retf   0x6cbc
  411939:	(bad)  
  41193a:	or     eax,0xcd534100
  41193f:	inc    eax
  411940:	jmp    0xd08c32cc
  411945:	and    DWORD PTR [ebp-0x1a],esp
  411948:	xchg   ebp,eax
  411949:	jne    0x4119ae
  41194b:	(bad)  
  41194c:	xchg   esi,eax
  41194d:	aad    0xc
  41194f:	push   0xffc618ed
  411954:	adc    BYTE PTR [ecx+0x5],ah
  411957:	add    BYTE PTR [ecx+0x28],ch
  41195a:	data16 cld 
  41195c:	jbe    0x4119ad
  41195e:	arpl   WORD PTR [ebp+ebp*2+0x47],si
  411962:	fld    DWORD PTR [edi]
  411964:	push   ecx
  411965:	xchg   ecx,eax
  411966:	and    al,0xff
  411968:	pop    esi
  411969:	imul   eax,DWORD PTR [esi+0x3],0xeb8fb5e9
  411970:	push   0x1c
  411972:	pusha  
  411973:	imul   ebp,ecx,0xb4fed0aa
  411979:	mov    BYTE PTR [esp+esi*8-0xa],ch
  41197d:	packsswb mm1,QWORD PTR [eax-0x13fb5c]
  411984:	call   0x9aa8bb98
  411989:	test   al,0xc5
  41198b:	inc    DWORD PTR [eax+0x0]
	...
  411999:	add    BYTE PTR [eax],al
  41199b:	add    BYTE PTR [esi-0x34],cl
  41199e:	inc    eax
  41199f:	jmp    0x1148f36b
  4119a4:	std    
  4119a5:	jmp    0xf6fb:0xd9b8fefe
  4119ac:	ss or  al,0xe8
  4119af:	xlat   BYTE PTR ds:[ebx]
  4119b0:	and    BYTE PTR [ebx-0x2],ah
  4119b3:	mov    al,0xa5
  4119b5:	or     BYTE PTR [eax],al
  4119b7:	xor    al,0xa4
  4119b9:	jo     0x41193b
  4119bb:	lods   eax,DWORD PTR ds:[esi]
  4119bc:	mov    bh,0x5b
  4119be:	dec    dh
  4119c0:	call   0x73f0:0x6a00fbc9
  4119c7:	or     al,0xc5
  4119c9:	push   ebp
  4119ca:	push   es
  4119cb:	call   0x410ea6
  4119d0:	add    eax,ecx
  4119d2:	or     eax,0x9ef85
  4119d7:	add    BYTE PTR [ebp-0x35ff09bb],bh
  4119dd:	pop    es
  4119de:	add    bh,al
  4119e0:	jg     0x4119b7
  4119e2:	std    
  4119e3:	pop    es
  4119e4:	mov    edx,0x70006a07
  4119e9:	or     DWORD PTR [edx+0x0],ebp
  4119ec:	pusha  
  4119ed:	or     DWORD PTR [ebp-0x74c6d1bb],ecx
  4119f3:	test   DWORD PTR [esi],ecx
  4119f5:	fdivr  st,st(5)
  4119f7:	(bad)  
  4119f8:	jmp    0xfa56:0x35f873ee
  4119ff:	call   0x411a04
	...
  411a0c:	add    BYTE PTR [eax],al
  411a0e:	add    BYTE PTR [esi*8-0x386e0001],dl
  411a15:	jb     0x411a1c
  411a17:	xor    edx,ecx
  411a19:	(bad)  
  411a1a:	dec    DWORD PTR [edx-0x34d745c1]
  411a20:	pop    es
  411a21:	push   DWORD PTR [ebp+0x76]
  411a24:	mov    edi,0xf04545cf
  411a29:	dec    esi
  411a2a:	mov    ebx,DWORD PTR [edx+0x6df483dc]
  411a30:	out    dx,al
  411a31:	std    
  411a32:	push   eax
  411a33:	call   0x4586d9f6
  411a38:	lock xchg DWORD PTR [ebp-0x229ae],eax
  411a3f:	(bad)  
  411a40:	test   BYTE PTR [ecx-0x1],0x45
  411a44:	inc    ecx
  411a45:	(bad)  
  411a46:	fistp  WORD PTR [bp+0x3f]
  411a4b:	arpl   WORD PTR [ebx],di
  411a4d:	scas   eax,DWORD PTR es:[edi]
  411a4e:	xlat   BYTE PTR ds:[ebx]
  411a4f:	or     al,0x54
  411a51:	imul   edi,esi,0x195a5496
  411a57:	sahf   
  411a58:	mov    ds:0x9ce68869,eax
  411a5d:	jno    0x411a5d
  411a5f:	hlt    
  411a60:	mov    BYTE PTR [ebx],0x68
  411a63:	scas   eax,DWORD PTR es:[edi]
  411a64:	adc    al,0xc5
  411a66:	jmp    ebp
  411a68:	mov    ecx,0x7bdcf64a
  411a6d:	imul   esi,DWORD PTR [ebx+ebp*2-0x7c],0x4369
	...
  411a81:	add    ah,cl
  411a83:	mov    edi,DWORD PTR [ebx-0x7c]
  411a86:	mov    bh,0xdb
  411a88:	imul   edi,esi,0xd0da6c49
  411a8e:	sub    ebp,DWORD PTR ds:0xc4f6ff04
  411a94:	jno    0x411a94
  411a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a97:	ret    
  411a98:	out    dx,eax
  411a99:	pop    es
  411a9a:	mov    edx,eax
  411a9c:	mov    esi,0x7fe594fe
  411aa1:	out    0x94,eax
  411aa3:	retf   
  411aa4:	imul   ecx,DWORD PTR [esi+ebx*8+0x7cfe7200],0x2be9da7c
  411aaf:	lods   eax,DWORD PTR ds:[esi]
  411ab0:	add    bh,bh
  411ab2:	mov    dh,0xc4
  411ab4:	jno    0x411ab4
  411ab6:	fs add esi,eax
  411ab9:	pop    es
  411aba:	dec    ebx
  411abb:	xor    BYTE PTR [edi+0x7fe554fe],bh
  411ac1:	jecxz  0x411b17
  411ac3:	or     ebp,DWORD PTR [edx+0x69]
  411ac6:	arpl   WORD PTR [ecx+ebp*2+0x47],si
  411aca:	mov    ds:0x1bb4696c,al
  411acf:	pop    ebx
  411ad0:	push   0x5c052cfe
  411ad5:	cld    
  411ad6:	cmp    al,0xac
  411ad8:	and    al,0x69
  411ada:	sbb    eax,0xd646b8c
  411adf:	(bad)  
  411ae0:	int    0x77
  411ae2:	out    0x34,eax
  411ae4:	mov    ebp,0x69
	...
  411af5:	add    eax,0xaa1150b5
  411afa:	(bad)  
  411afb:	call   0xb57dca68
  411b00:	imul   ebp,ebp,0xfcfc1b61
  411b06:	mov    esp,DWORD PTR [ecx+ebp*2]
  411b09:	fisttp QWORD PTR [ebx+0x61cd506b]
  411b0f:	lea    eax,[ebp+0x697d550f]
  411b15:	lds    eax,FWORD PTR [esi*8-0x7b601e24]
  411b1c:	jno    0x411ad3
  411b1e:	popa   
  411b1f:	call   0xa3c75e13
  411b24:	pop    esp
  411b25:	lods   eax,DWORD PTR ds:[esi]
  411b26:	popa   
  411b27:	pop    ebp
  411b28:	add    al,0x17
  411b2a:	mov    esp,0x726303c0
  411b2f:	mov    gs,WORD PTR [ecx+0x17]
  411b32:	cmc    
  411b33:	push   eax
  411b34:	cmp    BYTE PTR [edi+0x62],al
  411b37:	cmp    eax,0x3d54b769
  411b3c:	imul   esi,DWORD PTR [ebp+0x61],0x247b13b3
  411b43:	out    0x68,eax
  411b45:	gs popa 
  411b47:	push   ebx
  411b48:	pop    eax
  411b49:	push   ebp
  411b4a:	popa   
  411b4b:	adc    eax,0xf5cf69
  411b50:	push   ss
  411b51:	lea    esp,[eax+0x5]
  411b54:	imul   ecx,DWORD PTR [edi],0x68f56e
	...
  411b66:	add    BYTE PTR [eax],al
  411b68:	cmp    eax,0x507bff61
  411b6d:	ins    DWORD PTR es:[edi],dx
  411b6e:	add    ebp,DWORD PTR [edi-0x6301a045]
  411b74:	pushf  
  411b75:	push   edi
  411b76:	(bad)  
  411b77:	fimul  WORD PTR [ebx-0x74211c67]
  411b7d:	pop    edi
  411b7e:	(bad)  
  411b7f:	push   esp
  411b80:	ja     0x411bef
  411b82:	ret    
  411b83:	add    al,0x7a
  411b85:	pop    edi
  411b86:	(bad)  
  411b87:	je     0x411b09
  411b89:	push   edi
  411b8a:	(bad)  
  411b8b:	mov    dh,0x8b
  411b8d:	(bad)  [edi]
  411b8f:	rol    DWORD PTR [esi-0x205900df],0xa1
  411b96:	iret   
  411b97:	xchg   esi,eax
  411b98:	dec    ebx
  411b99:	pop    edi
  411b9a:	call   FWORD PTR [eax+eax*4]
  411b9d:	in     eax,dx
  411b9e:	add    cl,ch
  411ba0:	sub    esp,DWORD PTR [edx+0x6d70fcfe]
  411ba6:	imul   edi,DWORD PTR [ebx+ecx*2+0x103cfe5f],0x3b6efe57
  411bb1:	cdq    
  411bb2:	rcr    DWORD PTR [esi+0x3b],cl
  411bb5:	pop    edi
  411bb6:	(bad)  
  411bb7:	aam    0x70
  411bb9:	ins    DWORD PTR es:[edi],dx
  411bba:	mov    edx,DWORD PTR [edx+ecx*1]
  411bbd:	pop    edi
  411bbe:	(bad)  
  411bbf:	aam    0x70
  411bc1:	pusha  
  411bc2:	mov    ah,0x21
  411bc4:	adc    ebx,DWORD PTR [edi-0x2]
  411bc7:	lea    ecx,ds:[eax]
  411bca:	call   0x411bd0
	...
  411bdb:	or     DWORD PTR [edi-0x2],ebx
  411bde:	cs mov ebp,0xfb26f638
  411be4:	addr16 mov al,0xa9
  411be7:	retf   
  411be8:	pop    edi
  411be9:	(bad)  
  411bea:	pop    esp
  411beb:	rcl    BYTE PTR [edi-0x2],1
  411bee:	push   cs
  411bef:	test   al,0xaa
  411bf1:	aas    
  411bf2:	add    BYTE PTR [ebp-0x13],bl
  411bf5:	std    
  411bf6:	mov    ch,0x6e
  411bf8:	aad    0xfd
  411bfa:	jmp    DWORD PTR [edx-0x6f]
  411bfd:	ds (bad) 
  411bff:	cmp    eax,0x5e8b3e8
  411c04:	call   0x49dc0506
  411c09:	std    
  411c0a:	jmp    FWORD PTR ds:0x1df7e296
  411c10:	call   0xe87ba1fb
  411c15:	std    
  411c16:	push   DWORD PTR [edi-0x17]
  411c19:	cmc    
  411c1a:	jmp    FWORD PTR [ebp-0x42bf8740]
  411c20:	out    0xfd,eax
  411c22:	mov    ch,0xa6
  411c24:	out    dx,eax
  411c25:	std    
  411c26:	push   edx
  411c28:	aaa    
  411c29:	ds (bad) 
  411c2b:	in     eax,dx
  411c2c:	out    0x43,eax
  411c2e:	clc    
  411c2f:	jecxz  0x411c1b
  411c31:	sti    
  411c32:	(bad)  
  411c33:	fucom  st(7)
  411c35:	jae    0x411c33
  411c37:	shl    BYTE PTR [ecx+0x20ca0010],cl
  411c3d:	ror    DWORD PTR [eax+eax*1],0x0
	...
  411c4d:	add    BYTE PTR [edx+0x39ec8934],bh
  411c53:	(bad)  
  411c56:	mov    bh,BYTE PTR ds:0x5bb7ff4b
  411c5c:	out    0x81,al
  411c5e:	pop    edi
  411c5f:	call   0xe7f8a661
  411c64:	std    
  411c65:	jne    0x411cd9
  411c67:	cmp    eax,DWORD PTR [edi-0xfc34b8]
  411c6d:	xor    eax,0x4100c1
  411c72:	push   edx
  411c73:	mov    bl,bh
  411c75:	(bad)  
  411c76:	jge    0x411c5e
  411c78:	jae    0x411c82
  411c7a:	arpl   WORD PTR [ebx+edi*2-0x25935db9],ax
  411c81:	add    DWORD PTR [ebx+0x6c],esp
  411c84:	and    bh,0xee
  411c87:	popa   
  411c88:	gs (bad) 
  411c8a:	xor    al,0xe2
  411c8c:	data16 (bad) 
  411c8e:	mov    dh,0x64
  411c90:	pop    edx
  411c91:	xchg   ebx,eax
  411c92:	addr16 gs enterw 0x6921,0x2
  411c99:	push   ebp
  411c9a:	call   0x10049de7
  411c9f:	pop    ss
  411ca0:	iret   
  411ca1:	imul   esp,DWORD PTR [ebx-0x4e],0x5476feb5
  411ca8:	pop    edx
  411ca9:	xor    eax,0x88659736
  411cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411caf:	mov    al,0x79
  411cb1:	xor    al,0x0
	...
  411cbf:	add    BYTE PTR [eax],al
  411cc1:	jg     0x411cf7
  411cc3:	ret    
  411cc4:	(bad)  
  411cc5:	jmp    0x2268f70b
  411cca:	ins    BYTE PTR es:[edi],dx
  411ccb:	cmp    BYTE PTR [esi],0x63
  411cce:	clc    
  411ccf:	shl    BYTE PTR [edi+0x7f],0x15
  411cd3:	vunpckhps ymm6,ymm0,YMMWORD PTR [ecx+ebp*8+0x11]
  411cd9:	arpl   WORD PTR [ecx+edi*8-0x41],bp
  411cdd:	aaa    
  411cde:	dec    edi
  411cdf:	int3   
  411ce0:	out    0xc5,eax
  411ce2:	xchg   ebp,eax
  411ce3:	gs (bad) 
  411ce5:	xor    esi,DWORD PTR [edx+eax*1]
  411ce8:	add    BYTE PTR [esi+esi*2-0x52e5d326],al
  411cef:	add    dl,BYTE PTR [eax-0x7c]
  411cf2:	mov    eax,ds:0x48d3e7fa
  411cf7:	dec    BYTE PTR gs:[ebx+0x6cff25d8]
  411cfe:	ret    
  411cff:	add    eax,DWORD PTR [esi-0x1d]
  411d02:	add    eax,0x5bd603e7
  411d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d08:	addr16 xchg ecx,eax
  411d0a:	inc    ebp
  411d0b:	dec    edi
  411d0c:	dec    bp
  411d0e:	pop    esi
  411d0f:	or     eax,0xee1cf671
  411d14:	lock stc 
  411d16:	pop    ebp
  411d17:	jae    0x411d80
  411d19:	xor    eax,0x545be0d8
  411d1e:	and    dh,ch
  411d20:	test   DWORD PTR gs:[edi+0x42af],edi
	...
  411d33:	add    BYTE PTR [eax+0x5],ah
  411d36:	xor    al,0x79
  411d38:	or     BYTE PTR [edx+0x57a68ac],al
  411d3e:	inc    ebx
  411d3f:	mov    ch,0x5
  411d41:	fdiv   st,st(0)
  411d43:	pop    ebx
  411d44:	mov    edx,0xeb65be20
  411d49:	(bad)  
  411d4a:	mov    ah,0xda
  411d4c:	in     al,dx
  411d4d:	in     eax,0x12
  411d4f:	mov    ebx,0x2a1105a3
  411d54:	sub    al,ah
  411d56:	call   0xc00bacbf
  411d5b:	ret    0x65cc
  411d5e:	push   0xf15dc5c2
  411d63:	inc    ebx
  411d64:	xor    ah,bh
  411d66:	sbb    ah,bl
  411d68:	mov    ah,0x5d
  411d6a:	test   DWORD PTR [esi-0x3ce015bc],esp
  411d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d71:	int    0x65
  411d73:	out    dx,eax
  411d74:	fs ins DWORD PTR es:[edi],dx
  411d76:	std    
  411d77:	fist   WORD PTR [ebp+0x4db9405d]
  411d7d:	pop    esi
  411d7e:	dec    ebp
  411d7f:	fadd   QWORD PTR [ebp+ebx*2-0x15fb59ab]
  411d86:	scas   eax,DWORD PTR es:[edi]
  411d87:	ret    0xe574
  411d8a:	dec    edx
  411d8c:	test   eax,0x742dffc4
  411d91:	add    eax,0x5c3cb7e8
  411d96:	(bad)  
  411d97:	push   ds
	...
  411da4:	add    BYTE PTR [eax],al
  411da6:	add    BYTE PTR [ecx+eiz*2-0x2],al
  411daa:	pushf  
  411dab:	dec    eax
  411dac:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  411dae:	int    0xbf
  411db0:	pop    ebx
  411db1:	enter  0x632b,0x5
  411db5:	push   ebp
  411db6:	jb     0x411d53
  411db8:	xchg   ebx,eax
  411dba:	cmc    
  411dbb:	push   ds
  411dbc:	mov    ah,0x69
  411dbe:	jmp    0x5d3feacd
  411dc3:	pop    ds
  411dc4:	gs dec eax
  411dc6:	sbb    eax,0x2c885b7e
  411dcb:	jnp    0x411d5c
  411dcd:	xor    al,0x45
  411dcf:	addr16 (bad) 
  411dd1:	push   DWORD PTR [ecx+0x45]
  411dd4:	in     eax,dx
  411dd5:	daa    
  411dd6:	sub    BYTE PTR [edi-0x7b],bl
  411dd9:	ds jmp 0x33a8dfdb
  411ddf:	test   al,0xc5
  411de1:	(bad)  
  411de2:	cmp    eax,0xe9108a3f
  411de7:	pusha  
  411de8:	adc    al,al
  411dea:	sbb    eax,0x58e7b366
  411def:	or     BYTE PTR [esi+edi*8+0x19],bl
  411df3:	lahf   
  411df4:	pop    esp
  411df5:	dec    BYTE PTR [esi+0x2083e4fe]
  411dfb:	mov    al,ds:0xb56e4e5c
  411e00:	add    al,0xe8
  411e02:	mov    al,BYTE PTR [ebx+0x4f51fe5b]
  411e08:	sbb    bh,bh
  411e0a:	push   esi
	...
  411e17:	add    BYTE PTR [eax],al
  411e19:	add    BYTE PTR [ebx],ch
  411e1b:	add    eax,0x53e6946
  411e20:	jne    0x411e22
  411e22:	and    BYTE PTR [edx-0x50b5cc06],bl
  411e28:	std    
  411e29:	push   DWORD PTR ds:0x72aef0e1
  411e2f:	pop    ecx
  411e30:	jae    0x411ded
  411e32:	test   DWORD PTR [ebx-0x6],ebp
  411e35:	(bad)  
  411e36:	out    dx,eax
  411e37:	pop    edi
  411e38:	out    0x2b,al
  411e3a:	ss loope 0x411e3a
  411e3d:	pop    edi
  411e3e:	hlt    
  411e3f:	push   ds
  411e40:	rol    DWORD PTR [edx+ecx*2],0x4b
  411e44:	mov    esp,ebp
  411e46:	leave  
  411e47:	sbb    al,0xfb
  411e49:	push   esi
  411e4a:	int    0x3d
  411e4c:	(bad)  
  411e4d:	imul   ecx,ebx,0x320873e0
  411e53:	int3   
  411e54:	cmp    edi,edi
  411e56:	xor    eax,0x81fc438a
  411e5b:	(bad)  
  411e5c:	arpl   WORD PTR [eax],bp
  411e5e:	cmp    eax,DWORD PTR [ecx]
  411e60:	mov    edi,DWORD PTR ds:0x412992
  411e66:	mov    ch,BYTE PTR [eax]
  411e68:	add    BYTE PTR [edi+edi*1+0x69],dh
  411e6c:	mov    cs,WORD PTR [ecx+0x3b]
  411e6f:	add    DWORD PTR [edi-0x18],edx
  411e72:	ficom  DWORD PTR [eax-0x2]
  411e75:	call   ecx
  411e77:	(bad)  
  411e78:	jb     0x411e99
  411e7a:	mov    ecx,gs
  411e7c:	xor    DWORD PTR [eax+0x0],ecx
	...
  411e8b:	add    BYTE PTR [eax],al
  411e8d:	aad    0xe7
  411e8f:	dec    esi
  411e90:	push   0xbeef07ca
  411e95:	push   edx
  411e96:	mov    ds:0x97ba4147,eax
  411e9b:	std    
  411e9c:	jne    0x411e60
  411e9e:	out    dx,eax
  411e9f:	and    esp,DWORD PTR [ebx+0x5]
  411ea2:	call   0xe8b5708d
  411ea7:	std    
  411ea8:	jmp    0x411f0d
  411eaa:	ins    DWORD PTR es:[edi],dx
  411eab:	enter  0x457f,0x6e
  411eaf:	xlat   BYTE PTR ds:[ebx]
  411eb0:	stc    
  411eb1:	and    eax,0xbac016c2
  411eb6:	sbb    ah,BYTE PTR [ebx-0x2]
  411eb9:	ins    BYTE PTR es:[edi],dx
  411eba:	pop    ds
  411ebb:	mov    dl,0x37
  411ebd:	pop    esp
  411ebe:	xchg   ecx,eax
  411ebf:	popf   
  411ec0:	(bad)  
  411ec1:	(bad)  
  411ec2:	and    BYTE PTR [ebx+0x74],ah
  411ec5:	imul   esi,esp,0xffffffb0
  411ec8:	cmp    cl,BYTE PTR [esp+esi*8-0x3e]
  411ecc:	pop    ebp
  411ecd:	sbb    ch,BYTE PTR [edi]
  411ecf:	or     BYTE PTR [eax],al
  411ed1:	xchg   esi,eax
  411ed2:	xlat   BYTE PTR ds:[ebx]
  411ed3:	outs   dx,DWORD PTR ds:[esi]
  411ed4:	sbb    BYTE PTR [edi],0x59
  411ed7:	in     al,dx
  411ed8:	(bad)  
  411ed9:	mov    edx,0x5b74617e
  411ede:	add    al,0xd3
  411ee0:	cmp    bl,BYTE PTR [esp+eiz*2]
  411ee3:	mov    eax,DWORD PTR [edi+edx*1-0x4b]
  411ee7:	mov    al,0x48
  411ee9:	mov    ds:0x5b74616c,al
  411eee:	inc    esp
  411eef:	rcr    bh,1
	...
  411efd:	add    BYTE PTR [eax],al
  411eff:	add    ah,bh
  411f01:	inc    ebx
  411f02:	popa   
  411f03:	je     0x411efc
  411f05:	fwait
  411f06:	xlat   BYTE PTR ds:[ebx]
  411f07:	pop    es
  411f08:	sti    
  411f09:	push   ss
  411f0a:	pop    ds
  411f0b:	jmp    esp
  411f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f0e:	inc    esp
  411f0f:	add    esp,DWORD PTR [ebx+0x19]
  411f12:	(bad)  
  411f13:	jmp    0x411ef5
  411f15:	mov    al,ds:0xa53b565e
  411f1a:	cmp    al,0x3f
  411f1c:	arpl   WORD PTR [esp+edx*8+0x0],si
  411f20:	mov    al,ds:0xb7444983
  411f25:	ins    BYTE PTR es:[edi],dx
  411f26:	add    al,BYTE PTR [eax]
  411f28:	arpl   WORD PTR [ebx],dx
  411f2a:	dec    eax
  411f2b:	dec    eax
  411f2c:	and    ch,BYTE PTR [ecx+eiz*2+0x74]
  411f30:	imul   eax,DWORD PTR ds:0xce7a0876,0xffffffa7
  411f37:	add    eax,DWORD PTR [edi]
  411f39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f3a:	sbb    BYTE PTR [ebx+eiz*2],al
  411f3d:	add    eax,0x562db69
  411f42:	mov    ebp,0xf0d0740b
  411f47:	imul   edi,DWORD PTR [ecx],0x10
  411f4a:	bound  edi,QWORD PTR ss:[ebx-0x63]
  411f4e:	call   0xc4ae8256
  411f53:	retf   0x5a55
  411f56:	sbb    eax,0x66d64d8
  411f5b:	sbb    al,0x44
  411f5d:	pop    edx
  411f5e:	dec    ecx
  411f5f:	clc    
  411f60:	test   eax,0xe7e8c4
	...
  411f71:	add    BYTE PTR [eax],al
  411f73:	xor    eax,0x6303e910
  411f78:	add    eax,0x5ac04762
  411f7d:	mov    bl,0x3
  411f7f:	arpl   WORD PTR ds:0xeda4b6e9,ax
  411f85:	cmp    DWORD PTR ds:0xc241054c,0x29
  411f8c:	(bad)
  411f8f:	or     BYTE PTR [ebx+ecx*1-0x16fa9cfc],0x60
  411f97:	ja     0x411fa6
  411f99:	mov    dh,0xf9
  411f9b:	jecxz  0x411fb6
  411f9d:	add    al,ah
  411f9f:	pushf  
  411fa0:	add    eax,0x5ce0011d
  411fa5:	clc    
  411fa6:	xlat   BYTE PTR ds:[ebx]
  411fa7:	pop    ebx
  411fa8:	inc    edx
  411fa9:	sub    esp,DWORD PTR [eax+0x63]
  411fac:	add    eax,0xf3c803e9
  411fb1:	test   DWORD PTR [edi],edx
  411fb3:	dec    esi
  411fb4:	into   
  411fb5:	daa    
  411fb6:	add    al,0xac
  411fb8:	lldt   ax
  411fbb:	xchg   edi,eax
  411fbc:	(bad)  
  411fbd:	inc    DWORD PTR [eax+0x66ff12de]
  411fc3:	fiadd  WORD PTR [ebp+0x17]
  411fc6:	push   edx
  411fc7:	call   0xbb0:0xd6458ab0
  411fce:	bound  esp,QWORD PTR [ecx+ecx*1-0x75974401]
  411fd5:	jg     0x411f58
	...
  411fe3:	add    BYTE PTR [eax],al
  411fe5:	add    BYTE PTR [edi+0x5],ah
  411fe8:	add    BYTE PTR [esi],dh
  411fea:	lea    ecx,ds:0x58ab698f
  411ff0:	(bad)  
  411ff1:	jmp    0x6e50f6b9
  411ff6:	out    0x94,eax
  411ff8:	(bad)  
  411ff9:	call   0xf07da45e
  411ffe:	das    
  411fff:	(bad)  
  412000:	(bad)  
  412001:	call   0xb5401612
  412006:	xor    eax,0xc3e940cc
  41200b:	adc    DWORD PTR [ecx],ebx
  41200d:	mov    ds:0x1e65921,al
  412012:	jp     0x41206c
  412014:	(bad)  
  412015:	mov    eax,ds:0xe9000560
  41201a:	lds    eax,FWORD PTR [esi+0x23]
  41201d:	jmp    0xe945a826
  412022:	pusha  
  412023:	add    eax,0x49b6a00
  412028:	xor    esi,0x60
  41202b:	or     BYTE PTR [ebp-0x1a8bc12],al
  412031:	jb     0x411fd0
  412033:	pop    esp
  412034:	pop    esi
  412035:	mov    al,0x26
  412037:	add    al,0x0
  412039:	aas    
  41203a:	mov    bh,0x4b
  41203c:	fisubr DWORD PTR [ecx]
  41203e:	addr16 pop ebp
  412040:	jno    0x412042
  412042:	retf   
  412043:	sar    ebp,0x8b
  412046:	repz sub esi,esi
  412049:	mov    eax,DWORD PTR [eax]
	...
  412057:	add    BYTE PTR [eax],al
  412059:	add    ebp,DWORD PTR [ebp+0x7e]
  41205c:	test   al,0xb8
  41205e:	add    ecx,DWORD PTR [ebx-0x38766337]
  412064:	jmp    0x4120c8
  412066:	mov    al,bh
  412068:	add    esi,DWORD PTR [ecx+ecx*4]
  41206b:	(bad)  
  41206c:	push   eax
  41206d:	add    ebx,ecx
  41206f:	out    0xa7,al
  412071:	ins    BYTE PTR es:[edi],dx
  412072:	add    al,0x0
  412074:	mov    esi,DWORD PTR [ebx]
  412076:	pushf  
  412077:	mov    ecx,ecx
  412079:	jns    0x41203d
  41207b:	mov    ecx,ecx
  41207d:	cld    
  41207e:	or     dh,dh
  412080:	jne    0x4120e8
  412082:	inc    esi
  412083:	rcl    DWORD PTR [ebp-0x2f],0xe8
  412087:	data16 or BYTE PTR [esi-0x270801bc],cl
  41208e:	add    al,bl
  412090:	push   DWORD PTR [ecx+0x7a0b063f]
  412096:	xor    BYTE PTR [edx],cl
  412098:	jmp    0x4120d1
  41209a:	out    0x6,al
  41209c:	inc    BYTE PTR [edx]
  41209e:	inc    esp
  41209f:	jle    0x4120d9
  4120a1:	or     bh,BYTE PTR ds:0xcb8c9f4
  4120a7:	add    BYTE PTR [ebp-0x7f],dl
  4120aa:	aad    0x81
  4120ac:	les    edx,FWORD PTR [esi]
  4120ae:	xchg   esp,eax
  4120af:	data16 xor BYTE PTR [esi+0x28f7fe40],bh
  4120b6:	add    al,bl
  4120b8:	push   DWORD PTR [ebp+0xf24d]
	...
  4120ca:	add    BYTE PTR [eax],al
  4120cc:	retf   0x3
  4120cf:	sub    esp,DWORD PTR [ecx-0x7503bc8b]
  4120d5:	mov    eax,0x86630873
  4120da:	js     0x4120e9
  4120dc:	arpl   WORD PTR [esi-0x79],bp
  4120df:	mov    edi,0x745d993b
  4120e4:	pop    ebx
  4120e5:	jbe    0x41210f
  4120e7:	xor    al,0xa4
  4120e9:	into   
  4120ea:	mov    WORD PTR [ebx+ebx*4+0x2d],es
  4120ee:	mov    ah,0xe7
  4120f0:	pop    es
  4120f1:	and    bl,BYTE PTR [edi-0x2]
  4120f4:	fisub  DWORD PTR [eax-0x4df101aa]
  4120fa:	imul   edx,DWORD PTR [ebx+0x6e],0x6e
  4120fe:	add    cl,BYTE PTR [ebx]
  412100:	mov    ds:0xf6fef699,eax
  412105:	lds    ebx,FWORD PTR [esi+0x74]
  412108:	outs   dx,DWORD PTR ds:[esi]
  412109:	jge    0x412175
  41210b:	xchg   DWORD PTR [edi-0x3101a0d9],ebx
  412111:	and    BYTE PTR [ecx+eax*2+0x5e],ch
  412115:	ins    BYTE PTR es:[edi],dx
  412116:	add    bh,bh
  412118:	into   
  412119:	fs push 0xfffffff3
  41211c:	jbe    0x412125
  41211e:	pop    edi
  41211f:	xor    BYTE PTR [esi+0x4d740258],0x74
  412126:	adc    ecx,DWORD PTR [ebx-0x5e]
  412129:	ins    BYTE PTR es:[edi],dx
  41212a:	pop    ebp
  41212b:	je     0x412144
  41212d:	add    eax,0xd93
	...
  41213e:	add    BYTE PTR [ebx+0x6c],ah
  412141:	or     eax,eax
  412143:	xchg   edi,eax
  412144:	popa   
  412145:	cdq    
  412146:	add    BYTE PTR [ebx+0x6c],ah
  412149:	add    bh,bh
  41214b:	jbe    0x41217d
  41214d:	push   0x5
  41214f:	aaa    
  412150:	aas    
  412151:	pop    ebp
  412152:	mov    ah,BYTE PTR [eax]
  412154:	and    al,0x4d
  412156:	rcr    DWORD PTR [edi+0x6c],0xb7
  41215a:	mov    cl,bh
  41215c:	les    ebx,FWORD PTR [ebp-0x16fadc25]
  412162:	pop    ebx
  412163:	push   edx
  412164:	add    al,0xaa
  412166:	pop    esi
  412167:	(bad)
  41216a:	imul   ecx,DWORD PTR [edi+0x4a5e8e0f],0xd
  412171:	adc    DWORD PTR [ebx],edx
  412173:	jnp    0x412139
  412175:	call   0x814e50d8
  41217a:	fcom   QWORD PTR [esi+edx*2+0x6d]
  41217e:	jmp    0x2bfe0edf
  412183:	and    al,BYTE PTR ds:0x6d5cd85e
  412189:	ret    0x7c1b
  41218c:	push   esi
  41218d:	dec    ebp
  41218e:	fcomp  DWORD PTR [ebp+ebp*2+0x34]
  412192:	pusha  
  412193:	ins    DWORD PTR es:[edi],dx
  412194:	push   esi
  412195:	add    BYTE PTR [ebx+eiz*2],0x5
  412199:	jmp    0xe94243ea
  41219e:	mov    eax,0x476968e9
	...
  4121af:	add    BYTE PTR [eax],al
  4121b1:	add    BYTE PTR [ebp+ebp*8-0x1d],dl
  4121b5:	inc    eax
  4121b6:	test   BYTE PTR ds:0x4263d111,al
  4121bc:	or     eax,0x609af5e
  4121c1:	fsub   DWORD PTR [ebp+ebp*2+0x78]
  4121c5:	sbb    DWORD PTR [esi+edx*2],esp
  4121c8:	sub    eax,0xe90418c8
  4121cd:	add    esp,DWORD PTR [ebx-0x78]
  4121d0:	sub    ebx,DWORD PTR [esp+ebx*4-0x13]
  4121d4:	add    ecx,ecx
  4121d6:	mov    ds:0xa44ac105,eax
  4121db:	push   esi
  4121dc:	int    0x9
  4121de:	and    edx,ecx
  4121e0:	or     dh,BYTE PTR [ecx+eiz*8+0x6ff4c0d7]
  4121e7:	out    dx,eax
  4121e8:	inc    DWORD PTR [edx-0x29]
  4121eb:	(bad)  
  4121ee:	jae    0x41225d
  4121f0:	fnclex 
  4121f2:	das    
  4121f3:	push   edi
  4121f4:	or     ch,BYTE PTR [ecx+0x2cc6feab]
  4121fa:	inc    ebx
  4121fb:	push   esi
  4121fc:	(bad)  
  4121fd:	jmp    0xc2a58f62
  412202:	xorps  xmm1,XMMWORD PTR [edx-0x3eb2bcdc]
  412209:	loope  0x41226b
  41220b:	mov    al,0x8a
  41220d:	jge    0x4121e1
  41220f:	fstp   QWORD PTR [edi+0x44]
  412212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412213:	push   ebp
  412214:	neg    bl
	...
  412222:	add    BYTE PTR [eax],al
  412224:	add    BYTE PTR [ecx+0x42],ah
  412227:	inc    BYTE PTR [edx]
  412229:	cmp    dl,BYTE PTR [edi+0x74]
  41222c:	loope  0x412236
  41222e:	mov    edi,0xb0e46fe
  412233:	shr    dh,0xdc
  412236:	outs   dx,DWORD PTR ds:[esi]
  412237:	(bad)  
  412238:	call   0xe1b5769d
  41223d:	enter  0x3150,0x26
  412241:	scas   al,BYTE PTR es:[edi]
  412242:	(bad)  
  412243:	mov    edi,0x895e5d94
  412248:	jmp    0x954027ad
  41224d:	fs push esp
  41224f:	je     0x412242
  412251:	mov    eax,0x87fefeeb
  412256:	push   ebx
  412257:	je     0x41223a
  412259:	mov    BYTE PTR [ebx],bl
  41225b:	cmp    ch,dh
  41225d:	mov    bh,0xff
  41225f:	mov    edi,0x7060615c
  412264:	fisubr WORD PTR ds:0x58a0e80d
  41226a:	push   esp
  41226b:	(bad)  
  41226c:	loop   0x41220e
  41226e:	fld    DWORD PTR [ecx]
  412270:	add    BYTE PTR [ecx],dl
  412272:	data16 std 
  412274:	jne    0x412268
  412276:	loopne 0x412297
  412278:	cmp    DWORD PTR ds:0x8fc009b2,edx
  41227e:	pop    es
  41227f:	jmp    0x4122d6
  412281:	jb     0x41221e
  412283:	and    eax,0x73b1ba41
  412288:	or     BYTE PTR [eax],al
	...
  412296:	add    BYTE PTR [eax],al
  412298:	loop   0x412228
  41229a:	cmp    bh,bh
  41229c:	in     eax,0xfd
  41229e:	mov    edi,0x40ddb875
  4122a3:	jmp    FWORD PTR [edi-0x2d651800]
  4122a9:	mov    cl,0xfd
  4122ab:	or     ecx,edx
  4122ad:	cmp    eax,DWORD PTR [eax]
  4122af:	jmp    0x41231f
  4122b1:	mov    dl,0x73
  4122b3:	or     BYTE PTR [edx],dh
  4122b5:	mov    dh,0x36
  4122b7:	call   DWORD PTR ds:0x8875bffd
  4122bd:	frstor [edi+edi*8]
  4122c0:	scas   eax,DWORD PTR es:[edi]
  4122c1:	add    al,ch
  4122c3:	xchg   DWORD PTR [eax-0x4f],ebp
  4122c6:	std    
  4122c7:	adc    DWORD PTR [edx+0x61027728],0xffffffc9
  4122ce:	or     eax,eax
  4122d0:	out    dx,al
  4122d1:	push   esp
  4122d2:	cmp    eax,DWORD PTR [eax]
  4122d4:	cmp    bl,BYTE PTR [eax-0x2]
  4122d7:	jb     0x41231f
  4122d9:	ins    DWORD PTR es:[edi],dx
  4122da:	(bad)  
  4122db:	dec    DWORD PTR [edx+0x8]
  4122de:	jmp    0x4122e5
  4122e0:	mov    eax,ds:0x3a000005
  4122e5:	jge    0x4122a8
  4122e7:	pop    ebx
  4122e8:	inc    ebx
  4122e9:	mov    BYTE PTR [esi],0x0
  4122ec:	out    dx,eax
  4122ed:	jl     0x4122d9
  4122ef:	push   0x3f0f5b
  4122f4:	add    bh,BYTE PTR [ebx]
  4122f6:	inc    edx
  4122f8:	arpl   WORD PTR [ebx],di
  4122fa:	pop    edx
  4122fb:	je     0x4122fd
	...
  412309:	add    BYTE PTR [eax],al
  41230b:	addr16 inc ebx
  41230d:	rol    BYTE PTR [edi],1
  41230f:	sti    
  412310:	add    ebx,DWORD PTR [ebx-0x2]
  412313:	in     al,0x56
  412315:	inc    edx
  412316:	je     0x412391
  412318:	fwait
  412319:	ror    BYTE PTR [ebx],1
  41231b:	aam    0x18
  41231d:	or     al,0xe8
  41231f:	je     0x4122cc
  412321:	pop    edx
  412322:	(bad)  
  412323:	pop    eax
  412324:	sahf   
  412325:	ror    BYTE PTR [edx],1
  412327:	mov    esp,0x2eff07f0
  41232c:	pushw  0x7
  41232f:	lods   al,BYTE PTR ds:[esi]
  412330:	mov    bl,BYTE PTR [edx-0x38]
  412333:	mov    eax,ds:0xe8550255
  412338:	mov    DWORD PTR [esi-0x4d11803d],eax
  41233e:	addr16 add ecx,esp
  412341:	ret    
  412342:	dec    DWORD PTR [edi+ebp*1+0x67cc303]
  412349:	aas    
  41234a:	out    0xa1,eax
  41234c:	xchg   esi,eax
  41234d:	pop    ecx
  41234e:	(bad)  
  41234f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412350:	mov    al,ds:0x5d64ff66
  412355:	add    cl,BYTE PTR [ebp-0x184c375a]
  41235b:	jmp    0x66a9:0xe0fe594d
  412362:	dec    edi
  412364:	add    al,0x89
  412366:	inc    esp
  412367:	dec    edi
  412368:	lea    ebp,[edx+0x79]
  41236b:	jb     0x412370
  41236d:	pop    ebx
  41236e:	add    BYTE PTR [eax],0x0
	...
  41237d:	add    BYTE PTR [esi+0x5a7503f8],ch
  412383:	loope  0x412345
  412385:	jmp    0x41233a
  412387:	add    al,0xef
  412389:	xor    BYTE PTR [esp+eiz*2],dl
  41238c:	test   DWORD PTR [edi+edi*8+0x5],edi
  412390:	jmp    0xe8c5029f
  412395:	add    esp,DWORD PTR [ebx-0x80]
  412398:	sub    edx,DWORD PTR [esp+eiz*4+0x52]
  41239c:	push   ebx
  41239d:	push   0x5ac5dd04
  4123a2:	in     eax,0x86
  4123a4:	rol    BYTE PTR [esi+edx*2],0xd0
  4123a8:	jne    0x41238f
  4123aa:	jge    0x412370
  4123ac:	call   0x2b8b4f1f
  4123b1:	pusha  
  4123b2:	pop    edx
  4123b3:	add    eax,0xc8a403e9
  4123b8:	add    BYTE PTR [ebx],0x63
  4123bb:	add    eax,0x5d2788e9
  4123c0:	sbb    BYTE PTR [ebx+0x2f],bl
  4123c3:	popa   
  4123c4:	adc    eax,0x75af916c
  4123c9:	pop    edx
  4123ca:	imul   eax,DWORD PTR [ebp-0xc],0x50d0e1f3
  4123d1:	add    ecx,DWORD PTR [edi]
  4123d3:	call   FWORD PTR [ebp-0x30]
  4123d6:	test   BYTE PTR [ebp+0x11],bl
  4123d9:	pop    ecx
  4123da:	jne    0x41242e
  4123dc:	popa   
  4123dd:	cmp    ebp,DWORD PTR [ebp-0x28]
  4123e0:	push   eax
  4123e1:	imul   eax,DWORD PTR [eax],0x0
	...
  4123f0:	add    BYTE PTR ds:0x695a3e14,dh
  4123f6:	cs mov ebx,0x44cfe1f0
  4123fc:	add    edx,edi
  4123fe:	add    ah,BYTE PTR [esi]
  412400:	enter  0xdd40,0x70
  412404:	idiv   BYTE PTR [edx+edx*2]
  412407:	add    BYTE PTR [esi+0x69],dh
  41240a:	add    eax,0x5df56ee9
  41240f:	out    0xc2,eax
  412411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412412:	adc    ch,cl
  412414:	rcr    BYTE PTR [edx],1
  412416:	retf   0x68ff
  412419:	jns    0x412420
  41241b:	je     0x412402
  41241d:	pop    ebp
  41241e:	cs jae 0x4123a8
  412421:	push   esi
  412422:	cs jae 0x41241e
  412425:	push   cs
  412426:	add    cl,BYTE PTR [ebp+0x67c28f2c]
  41242c:	add    al,0x1e
  41242e:	vaddsubps ymm6,ymm0,YMMWORD PTR [edi+0x3abefec8]
  412436:	fldpi  
  412438:	rol    DWORD PTR [edi+0x22],0xff
  41243c:	scas   al,BYTE PTR es:[edi]
  41243d:	fiadd  WORD PTR [esi+0x5e]
  412440:	inc    edx
  412441:	sbb    BYTE PTR [edi+0x54],al
  412444:	jb     0x412491
  412446:	test   ebx,eax
  412448:	dec    ecx
  412449:	sbb    DWORD PTR [ebx-0x2],edx
  41244c:	ss icebp 
  41244e:	jmp    0x51e0caa2
  412453:	idiv   bl
	...
  412461:	add    BYTE PTR [eax],al
  412463:	add    BYTE PTR [ecx+0x46],ah
  412466:	(bad)  
  412467:	ss out dx,al
  412469:	sub    al,BYTE PTR [ecx-0x17]
  41246c:	loopne 0x412480
  41246e:	add    dh,dh
  412470:	add    al,0x3f
  412472:	add    cl,ch
  412474:	pusha  
  412475:	add    BYTE PTR [ebp+ebx*2-0x4601ace7],0xb3
  41247d:	imul   ebp,DWORD PTR [edi],0xa530ba1
  412483:	sub    DWORD PTR [edx-0x77],ebp
  412486:	mov    ds:0x830560e8,eax
  41248b:	ins    BYTE PTR es:[edi],dx
  41248c:	mov    bl,0x52
  41248e:	(bad)  
  41248f:	es pop edi
  412491:	add    BYTE PTR [esi+esi*2+0x64000560],al
  412498:	mov    ah,0xa8
  41249a:	std    
  41249b:	push   cs
  41249c:	mov    al,al
  41249e:	inc    BYTE PTR [eax]
  4124a0:	addr16 mov ch,0xfc
  4124a3:	call   FWORD PTR ds:0xd37ecdd
  4124a9:	scas   al,BYTE PTR es:[edi]
  4124aa:	sub    esi,esi
  4124ac:	add    DWORD PTR [eax-0x5202015e],0xffffffe9
  4124b3:	aaa    
  4124b4:	push   esp
  4124b5:	(bad)  
  4124b6:	mov    ch,0x84
  4124b8:	pop    esp
  4124b9:	mov    eax,ds:0x951dfffc
  4124be:	dec    cx
  4124c0:	xor    DWORD PTR [esi+edi*8-0x74],eax
  4124c4:	inc    edi
  4124c5:	retf   0xfffc
	...
  4124d4:	add    BYTE PTR [eax],al
  4124d6:	add    BYTE PTR ds:0xc141e695,cl
  4124dc:	add    al,0x0
  4124de:	xor    esi,0x8
  4124e1:	lea    eax,[ebp-0x250f8]
  4124e7:	jp     0x412497
  4124e9:	mov    bl,0xa4
  4124eb:	fsubr  QWORD PTR [ebp-0x73a1703]
  4124f1:	(bad)  
  4124f2:	call   DWORD PTR [ebx]
  4124f4:	iret   
  4124f5:	mov    ds:0x44ad0dfe,al
  4124fa:	cmp    esp,0x53
  4124fd:	jo     0x4124c3
  4124ff:	std    
  412500:	jle    0x4124f4
  412502:	(bad)  
  412503:	sbb    eax,0x58b4e6ad
  412508:	scas   al,BYTE PTR es:[edi]
  412509:	std    
  41250a:	mov    DWORD PTR [edi],0x1dfffc6c
  412510:	add    al,0x0
  412512:	add    BYTE PTR [edx+0x62],cl
  412515:	add    BYTE PTR [ebp-0x39339],cl
  41251b:	jge    0x4124b1
  41251d:	std    
  41251e:	mov    ch,0x66
  412520:	scas   al,BYTE PTR es:[edi]
  412521:	std    
  412522:	call   DWORD PTR [edx+0x4e]
  412525:	das    
  412526:	jmp    DWORD PTR [ebx-0x9]
  412529:	or     eax,eax
  41252b:	pop    esp
  41252c:	jmp    0xbc81:0x5e24ff5a
  412533:	fisttp DWORD PTR [edi+0x56]
  412536:	(bad)  
  412537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412538:	je     0x41253c
	...
  41254a:	pop    esp
  41254b:	jmp    0x5e4624ba
  412550:	xchg   DWORD PTR [eax+edi*8-0x6c01a9d1],eax
  412557:	(bad)  
  412558:	inc    DWORD PTR [eax]
  41255a:	arpl   WORD PTR [esi+0x6a],bx
  41255d:	jecxz  0x4125b9
  41255f:	pop    esi
  412560:	add    cl,BYTE PTR [ebx]
  412562:	mov    ds:0x63ce7e5e,eax
  412567:	pop    esi
  412568:	add    bh,BYTE PTR ds:0x25d67
  41256e:	push   esp
  41256f:	fistp  QWORD PTR [edi]
  412571:	(bad)  
  412572:	mov    esp,0x694f6a5d
  412577:	pop    esi
  412578:	add    dl,BYTE PTR [eax+0x3b]
  41257b:	sbb    al,0xcb
  41257d:	inc    eax
  41257e:	arpl   cx,bx
  412580:	add    cl,0x9d
  412583:	into   
  412584:	push   esi
  412585:	dec    edi
  412586:	mov    eax,ecx
  412588:	or     DWORD PTR [eax],eax
  41258a:	arpl   bx,bx
  41258c:	aas    
  41258d:	or     edi,ecx
  41258f:	pop    ebp
  412590:	xchg   DWORD PTR [eax+edi*2+0x13fe56af],eax
  412597:	(bad)  
  412598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412599:	or     BYTE PTR [ebx+0x5e],ah
  41259c:	xchg   DWORD PTR [eax+ebp*2-0x4c01a939],eax
  4125a3:	mov    ah,0x13
  4125a5:	inc    ebx
  4125a6:	push   esp
  4125a7:	sbb    BYTE PTR [ebx],cl
  4125a9:	rcl    dh,0xfc
  4125ac:	jmp    0x412569
	...
  4125ba:	add    BYTE PTR [eax],al
  4125bc:	add    BYTE PTR [ebx+0x5],bh
  4125bf:	test   al,0x3
  4125c1:	out    dx,al
  4125c2:	mov    BYTE PTR [ecx],ah
  4125c4:	push   esi
  4125c5:	xor    eax,0x1b6bb84f
  4125ca:	or     ecx,DWORD PTR [esi]
  4125cc:	push   edi
  4125cd:	xlat   BYTE PTR ds:[ebx]
  4125ce:	js     0x4125fa
  4125d0:	push   esi
  4125d1:	sbb    eax,0xfcb39a4f
  4125d6:	cmc    
  4125d7:	mov    ah,0x56
  4125d9:	or     eax,0xdf88d95b
  4125de:	inc    ebx
  4125df:	out    0x56,al
  4125e1:	std    
  4125e2:	mov    ch,0x6b
  4125e4:	cmp    cl,0x4f
  4125e7:	aad    0x56
  4125e9:	pushf  
  4125ea:	pop    ebp
  4125eb:	test   DWORD PTR [edx],ebx
  4125ed:	in     al,0x4e
  4125ef:	outs   dx,DWORD PTR ds:[esi]
  4125f0:	sbb    BYTE PTR [eax],0x50
  4125f3:	mov    ebp,0x7498d556
  4125f8:	push   ebp
  4125f9:	int    0x4e
  4125fb:	lods   eax,DWORD PTR ds:[esi]
  4125fc:	nop
  4125fd:	ror    BYTE PTR [edi-0x5b],1
  412600:	push   esi
  412601:	(bad)  
  412602:	(bad)  
  412604:	push   esi
  412605:	mov    ch,0xfa
  412607:	test   al,0xcf
  412609:	jno    0x4125e8
  41260b:	push   ds
  41260c:	retf   
  41260d:	and    eax,DWORD PTR ds:0x5645e91
  412613:	jmp    0x220022cb
  412618:	lds    ecx,FWORD PTR [edi+ecx*2+0x4e869f33]
  41261f:	imul   eax,DWORD PTR gs:[eax],0x0
	...
  41262f:	add    BYTE PTR [ebp-0x3e],dh
  412632:	pop    ebp
  412633:	push   esi
  412634:	or     al,BYTE PTR [ebx+eax*8]
  412637:	add    edi,ecx
  412639:	add    al,0x4e
  41263b:	nop
  41263c:	test   al,0x4f
  41263e:	inc    ebp
  41263f:	push   esi
  412640:	(bad)  
  412641:	(bad)  
  412642:	pextrw edx,(bad),0xc5
  412644:	push   esp
  412645:	fdiv   st(7),st
  412647:	call   0xe94ae904
  41264c:	pusha  
  41264d:	dec    esi
  41264e:	mov    ah,0x65
  412650:	xchg   esi,eax
  412651:	dec    edi
  412652:	(bad)  
  412653:	adc    ebp,edi
  412655:	push   ss
  412656:	call   DWORD PTR [esi]
  412658:	xchg   ebp,eax
  412659:	cdq    
  41265a:	mov    ds:0xe74f8d0f,eax
  41265f:	dec    ebp
  412660:	ins    DWORD PTR es:[edi],dx
  412661:	dec    esi
  412662:	(bad)  
  412663:	(bad)  
  412664:	in     al,0x51
  412666:	std    
  412667:	div    BYTE PTR [esi-0x5241fa9a]
  41266d:	dec    edi
  41266e:	sti    
  41266f:	sbb    ah,BYTE PTR [edi-0x71210173]
  412675:	dec    edi
  412676:	icebp  
  412677:	xchg   DWORD PTR [edi+0x6],ecx
  41267a:	pcmpgtb mm2,QWORD PTR [edi+ecx*2-0x2]
  41267f:	(bad)  
  412680:	adc    eax,0x4aac8af
  412685:	jnp    0x412672
  412687:	push   0x23
  412689:	pop    esi
  41268a:	addr16 in al,dx
  41268c:	inc    ecx
  41268d:	push   cs
  41268e:	add    BYTE PTR [ecx-0x613cfb6f],ah
	...
  4126a0:	add    BYTE PTR [eax],al
  4126a2:	add    dl,ch
  4126a4:	xor    esp,DWORD PTR [edi-0x14]
  4126a7:	popa   
  4126a8:	add    eax,0x168d8100
  4126ad:	inc    DWORD PTR [esi+0x248833ea]
  4126b3:	cmp    edi,DWORD PTR [ebx-0x2f]
  4126b6:	add    DWORD PTR [esp+eax*1-0x1f071700],ecx
  4126bd:	ss pushw ss
  4126c0:	jnp    0x412693
  4126c2:	jo     0x412678
  4126c4:	pop    ebp
  4126c5:	addr16 in al,dx
  4126c7:	popa   
  4126c8:	add    eax,0x16ad4100
  4126cd:	inc    DWORD PTR [eax]
  4126cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126d0:	jle    0x4126a2
  4126d2:	mov    edi,DWORD PTR [eax-0x80]
  4126d5:	inc    ebx
  4126d6:	clc    
  4126d7:	rcl    DWORD PTR [edi],0x8a
  4126da:	shl    BYTE PTR [edx],cl
  4126dc:	dec    ebp
  4126dd:	(bad)  
  4126de:	dec    DWORD PTR [edx-0x4e]
  4126e1:	jae    0x4126df
  4126e3:	ror    BYTE PTR [eax],1
  4126e5:	call   0x4a6a05
  4126ea:	mov    ebp,DWORD PTR [eax+0x7e]
  4126ed:	sar    bh,1
  4126ef:	lahf   
  4126f0:	mov    eax,0x90b0466
  4126f5:	add    al,ch
  4126f7:	nop
  4126f8:	add    BYTE PTR [eax],al
  4126fa:	add    BYTE PTR [ecx],al
  4126fc:	leave  
  4126fd:	jb     0x41270e
  4126ff:	jno    0x412717
  412701:	addr16 push ebx
  412703:	xor    DWORD PTR [eax-0x2],ecx
  412706:	inc    BYTE PTR [eax]
	...
  412714:	add    BYTE PTR [eax],al
  412716:	(bad)  
  412717:	mov    cl,0xe6
  412719:	xor    DWORD PTR [edx],eax
  41271b:	or     DWORD PTR [eax],eax
  41271d:	mov    edi,eax
  41271f:	pop    esi
  412720:	(bad)  
  412721:	imul   ecx,edx,0xba6a005e
  412727:	pop    esi
  412728:	add    DWORD PTR [eax-0x46],ebp
  41272b:	or     BYTE PTR [eax],al
  41272d:	rol    BYTE PTR ds:0xf6e8ee3c,0x49
  412734:	(bad)  
  412735:	inc    DWORD PTR [ebx-0x75]
  412738:	repnz inc eax
  41273a:	ror    eax,0x73
  41273d:	inc    esp
  41273e:	in     eax,0x3b
  412740:	cli    
  412741:	dec    DWORD PTR [edi+0x7dffe6b8]
  412747:	or     BYTE PTR [eax],al
  412749:	push   0x56
  41274b:	pop    edi
  41274c:	(bad)  
  41274d:	(bad)  
  41274e:	lahf   
  41274f:	mov    eax,0x87373e6
  412754:	add    BYTE PTR [ebx],cl
  412756:	arpl   WORD PTR [esi],bx
  412758:	iret   
  412759:	or     esp,DWORD PTR [ebx]
  41275b:	inc    esi
  41275c:	scas   eax,DWORD PTR es:[edi]
  41275d:	dec    edx
  41275e:	mov    ds:0x40e7b25e,al
  412763:	arpl   WORD PTR [edx],ax
  412765:	add    BYTE PTR [ecx-0x450017a2],bh
  41276b:	pusha  
  41276c:	call   0xeaa0f270
  412771:	push   DWORD PTR [esi+ebx*2]
  412774:	inc    edx
  412775:	(bad)  
  412776:	mov    dh,0xee
  412778:	push   0xffffff95
	...
  412786:	add    BYTE PTR [eax],al
  412788:	add    BYTE PTR [esi+ebx*2+0x2],bl
  41278c:	mov    DWORD PTR [esi-0x778c3eb6],esp
  412792:	jbe    0x41274b
  412794:	dec    edx
  412795:	mov    ds:0x5c9d6a5e,al
  41279a:	pop    esi
  41279b:	add    dl,BYTE PTR [eax-0x75]
  41279e:	(bad)  
  41279f:	mov    esi,0xd82b6340
  4127a4:	repz sti 
  4127a6:	mov    ds:0xde4ff14,eax
  4127ab:	push   ebx
  4127ac:	je     0x412785
  4127ae:	xor    eax,0x5e6306ce
  4127b3:	stos   BYTE PTR es:[edi],al
  4127b4:	or     ah,BYTE PTR [ebx+0x20eb0608]
  4127ba:	fdivr  st,st(3)
  4127bd:	dec    ebx
  4127be:	mov    edi,0x6b6340be
  4127c3:	fdiv   st,st(7)
  4127c5:	mov    ebx,0xa4fffba9
  4127ca:	fiadd  WORD PTR [edi+0xb]
  4127cd:	or     eax,ecx
  4127cf:	mov    esi,0x94766340
  4127d4:	push   es
  4127d5:	arpl   WORD PTR [esi-0x3],bx
  4127d8:	mov    edi,0xaeda400f
  4127dd:	sub    BYTE PTR ds:0x5d1303a8,al
  4127e3:	nop
  4127e4:	or     esp,DWORD PTR [ebx+0x5]
  4127e7:	loop   0x41282c
  4127e9:	lock test edx,0x3
	...
  4127fc:	leave  
  4127fd:	add    eax,0x4b4cd946
  412802:	mov    bl,0x53
  412804:	(bad)  
  412808:	inc    esp
  412809:	fucomp st(0)
  41280b:	push   edx
  41280c:	sub    al,0x4b
  41280e:	fwait
  41280f:	dec    edi
  412810:	cmp    al,0x15
  412812:	xlat   BYTE PTR ds:[ebx]
  412813:	push   edx
  412814:	sub    eax,0x3c539b4b
  412819:	sbb    eax,0x4b1d52d7
  41281e:	jnp    0x41286b
  412820:	cld    
  412821:	and    al,0xb7
  412823:	push   edx
  412824:	or     eax,0xb1bb293d
  412829:	fisttp QWORD PTR [ebx+0x66]
  41282c:	cmp    al,0x5
  41282e:	loope  0x412805
  412830:	arpl   WORD PTR [esi-0x23],ax
  412833:	mov    fs,WORD PTR [ebx+0x5]
  412836:	jmp    0x21a7cc3e
  41283b:	(bad)
  41283e:	out    0xba,eax
  412840:	mov    esp,0xcd532494
  412845:	es xchg ecx,eax
  412847:	dec    edi
  412848:	xchg   ecx,eax
  412849:	inc    ebp
  41284a:	outs   dx,DWORD PTR ds:[esi]
  41284b:	push   edx
  41284c:	mov    ebp,0x655a54a
  412851:	push   cs
  412852:	out    0xd8,al
  412854:	les    edi,FWORD PTR [esi-0x57]
  412857:	scas   al,BYTE PTR es:[edi]
  412858:	add    eax,0x887f3346
  41285d:	xchg   BYTE PTR [ebx+edx*2+0x0],ch
	...
  41286c:	add    BYTE PTR [eax],al
  41286e:	add    BYTE PTR [ecx],dh
  412870:	fst    QWORD PTR [ebx+0x54c65]
  412876:	jno    0x412826
  412878:	add    eax,0x9e56ec3
  41287d:	aad    0x17
  41287f:	sahf   
  412880:	dec    edx
  412881:	(bad)  
  412882:	aad    0x76
  412884:	xchg   DWORD PTR [esp+esi*1],edi
  412887:	inc    edx
  412888:	(bad)  
  412889:	(bad)  
  41288a:	call   0x4c425c3
  41288f:	mov    esi,0x60e94118
  412894:	rol    BYTE PTR [edx+eax*1],1
  412897:	lahf   
  412898:	scas   eax,DWORD PTR es:[edi]
  412899:	enter  0x5d2a,0x2e
  41289d:	out    0xcd,eax
  41289f:	imul   eax,DWORD PTR ds:0x4deb6c00,0xba288351
  4128a9:	(bad)  
  4128aa:	hlt    
  4128ab:	pop    ebx
  4128ac:	sbb    BYTE PTR [ecx-0x17],al
  4128af:	adc    eax,0x90650e8a
  4128b4:	dec    edx
  4128b5:	(bad)  
  4128b6:	jmp    0xea38ea54
  4128bb:	pusha  
  4128bc:	add    eax,0x521c7400
  4128c1:	dec    edi
  4128c2:	push   ebx
  4128c3:	addr16 (bad) 
  4128c6:	inc    edx
  4128c7:	pusha  
  4128c8:	dec    edx
  4128c9:	je     0x412898
  4128cb:	xor    dh,cl
  4128cd:	fcom   QWORD PTR [edi]
  4128cf:	mov    al,ds:0xa90949
	...
  4128e0:	add    BYTE PTR [eax],al
  4128e2:	mov    ah,0xdb
  4128e4:	out    0x39,eax
  4128e6:	pop    edx
  4128e7:	add    eax,0xcc2f6a00
  4128ec:	je     0x4128f7
  4128ee:	fmulp  st(0),st
  4128f0:	imul   ecx
  4128f2:	xchg   esp,eax
  4128f3:	stos   DWORD PTR es:[edi],eax
  4128f4:	(bad)  
  4128f5:	sbb    al,0x17
  4128f7:	bound  edi,QWORD PTR [edi-0x2c]
  4128fa:	xor    ecx,DWORD PTR [ebx-0x78]
  4128fd:	add    BYTE PTR [edi-0x53],al
  412900:	mov    eax,DWORD PTR [ebp-0x1e]
  412903:	nop
  412904:	std    
  412905:	jne    0x412919
  412907:	mov    ah,0x73
  412909:	hlt    
  41290a:	pusha  
  41290b:	push   es
  41290c:	push   DWORD PTR [ebp-0x2]
  41290f:	mov    bl,0x13
  412911:	fstp   QWORD PTR [esi+eax*2-0x2]
  412915:	or     bh,BYTE PTR [edx]
  412917:	sub    eax,0xb1078b2c
  41291c:	mov    DWORD PTR [eax],edx
  41291e:	iret   
  41291f:	inc    eax
  412920:	out    dx,al
  412921:	push   eax
  412922:	call   0x5d223cdc
  412927:	inc    esp
  412928:	dec    BYTE PTR [edx]
  41292a:	mov    ch,BYTE PTR ds:0x8a746818
  412930:	aas    
  412931:	add    BYTE PTR [ebp+0x30],cl
  412934:	out    dx,al
  412935:	call   0x41249a
  41293a:	add    ebp,eax
  41293c:	jae    0x41293f
  41293e:	leave  
  41293f:	mov    ch,0x73
  412941:	lock jb 0x412934
  412944:	add    eax,0x0
	...
  412955:	cli    
  412956:	mov    ch,0x73
  412958:	hlt    
  412959:	bound  ecx,QWORD PTR [esi+0x33]
  41295c:	(bad)  
  41295d:	std    
  41295e:	mov    ch,0x73
  412960:	cld    
  412961:	adc    bh,dh
  412963:	add    eax,0xc1c9fa00
  412968:	pop    ebx
  412969:	add    eax,edx
  41296b:	push   ebx
  41296c:	mov    ebp,DWORD PTR [esi+0xcc0c283]
  412972:	mov    dh,0xfd
  412974:	push   ebx
  412975:	and    dh,BYTE PTR [edi-0x1f]
  412978:	inc    eax
  412979:	retf   0x70bc
  41297c:	add    DWORD PTR [ecx],ecx
  41297e:	mov    dh,0x81
  412980:	cmp    eax,0x40ebc4
  412985:	arpl   WORD PTR [esi-0x2a],bx
  412988:	sbb    ah,al
  41298a:	cmp    esp,edi
  41298c:	sub    BYTE PTR [edx],ah
  41298e:	pop    esi
  41298f:	add    dh,BYTE PTR [ecx+esi*2-0x25]
  412993:	or     eax,0x41d35d5
  412998:	add    bh,dh
  41299a:	cmp    DWORD PTR fs:[edx+ebx*4],0xfffffff0
  41299f:	ret    0x6cff
  4129a2:	xor    DWORD PTR ds:0x3993a32b,eax
  4129a8:	ret    0x1388
  4129ab:	push   eax
  4129ac:	adc    al,0x5d
  4129ae:	cmc    
  4129af:	ret    0xdbff
  4129b2:	mov    al,ds:0x21dec656
  4129b7:	push   ecx
  4129b8:	inc    BYTE PTR [eax]
	...
  4129c6:	add    BYTE PTR [eax],al
  4129c8:	cmp    al,0x6
  4129ca:	add    eax,DWORD PTR [eax]
  4129cc:	arpl   WORD PTR [edx+eax*1+0x6a],si
  4129d0:	popa   
  4129d1:	neg    BYTE PTR [ecx-0x7ca19cfb]
  4129d7:	neg    DWORD PTR [edi+eiz*1]
  4129da:	xchg   BYTE PTR ds:0x89025e62,bl
  4129e0:	out    0x15,al
  4129e2:	push   ecx
  4129e3:	inc    BYTE PTR [ecx+eiz*8]
  4129e6:	test   ebx,ecx
  4129e8:	std    
  4129e9:	push   esi
  4129ea:	dec    esi
  4129eb:	dec    edi
  4129ec:	hlt    
  4129ed:	push   0x26ecfd3b
  4129f2:	pop    ebx
  4129f3:	lea    ebx,[ebp+0x5e]
  4129f6:	add    cl,BYTE PTR [ebx]
  4129f8:	mov    ds:0x63f28626,eax
  4129fd:	pop    esi
  4129fe:	add    ch,BYTE PTR [eax-0x66]
  412a01:	adc    al,ch
  412a03:	call   edi
  412a05:	fcom   DWORD PTR [ebx-0x3]
  412a08:	mov    esp,0x52e7b396
  412a0d:	add    eax,0xfc6303ee
  412a12:	test   al,0xff
  412a14:	loopne 0x412a59
  412a16:	call   0x63818d1e
  412a1b:	dec    eax
  412a1c:	xchg   esi,eax
  412a1d:	inc    edi
  412a1e:	test   DWORD PTR [ebx+eiz*2],eax
  412a21:	add    eax,0x40df80e9
  412a26:	jbe    0x412a77
  412a28:	jge    0x4129de
  412a2a:	ins    DWORD PTR es:[edi],dx
  412a2b:	cdq    
	...
  412a38:	add    BYTE PTR [eax],al
  412a3a:	add    BYTE PTR [eax+0x6d4f6546],dl
  412a40:	icebp  
  412a41:	repnz sbb al,0x22
  412a44:	add    eax,0x48207962
  412a49:	dec    ebp
  412a4a:	dec    edi
  412a4b:	imul   eax,DWORD PTR [ebp-0xb],0xe905f487
  412a52:	add    ecx,DWORD PTR [eax-0x1800c350]
  412a58:	jbe    0x412a42
  412a5a:	add    esp,DWORD PTR [ebx+0x46]
  412a5d:	pop    ebx
  412a5e:	cmp    BYTE PTR [esi],ch
  412a60:	inc    edi
  412a61:	sbb    eax,0xe8df24da
  412a66:	add    esp,DWORD PTR [ebx+0x3]
  412a69:	add    DWORD PTR [ecx],esp
  412a6b:	pop    ebp
  412a6c:	add    eax,0xd1ccfae9
  412a71:	jg     0x412aef
  412a73:	lahf   
  412a74:	dec    ebp
  412a75:	arpl   cx,cx
  412a77:	clc    
  412a78:	mov    ch,0x80
  412a7a:	pop    edx
  412a7b:	arpl   WORD PTR [ebx],ax
  412a7d:	jmp    0xdd8ea1d0
  412a82:	clc    
  412a83:	nop/reserved BYTE PTR [eax]
  412a86:	add    al,0x68
  412a88:	inc    ebp
  412a89:	push   esp
  412a8a:	lods   al,BYTE PTR ds:[esi]
  412a8b:	aad    0xd0
  412a8d:	les    ecx,FWORD PTR [esi+0x77]
  412a90:	sub    al,0xe
  412a92:	(bad)
  412a95:	jmp    FWORD PTR [eax-0x59bcf26c]
  412a9b:	jmp    0x412a23
  412a9d:	std    
  412a9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  412aab:	add    BYTE PTR [eax],al
  412aad:	add    BYTE PTR ds:0x60e9fe46,bl
  412ab3:	js     0x412a39
  412ab5:	test   eax,0x39fe472e
  412aba:	mov    bh,0x7
  412abc:	add    dh,dh
  412abe:	pusha  
  412abf:	pop    ebp
  412ac0:	pop    esi
  412ac1:	out    0x60,eax
  412ac3:	add    eax,0xf19ba90b
  412ac8:	sub    BYTE PTR [eax+eiz*1],0x48
  412acc:	(bad)  
  412acd:	pushaw 
  412acf:	ror    DWORD PTR [ebx],1
  412ad1:	pop    esi
  412ad2:	retf   
  412ad3:	xchg   ch,bh
  412ad5:	push   esi
  412ad6:	lods   eax,DWORD PTR ds:[esi]
  412ad7:	ja     0x412add
  412ad9:	mov    ds:0x51ffc477,al
  412ade:	jno    0x412b3a
  412ae0:	sbb    DWORD PTR [esi],edi
  412ae2:	sub    ecx,DWORD PTR [edx-0x19]
  412ae5:	jge    0x412b4b
  412ae7:	add    eax,0x4e1b2e00
  412aec:	out    0x55,eax
  412aee:	fs add eax,0x47281200
  412af4:	je     0x412b07
  412af6:	mov    eax,0x60e903a4
  412afb:	js     0x412a81
  412afd:	xor    eax,0x99fe479e
  412b02:	xchg   ebp,eax
  412b03:	xchg   ecx,eax
  412b04:	(bad)  
  412b05:	imul   DWORD PTR [esi+0x6b45e747]
  412b0b:	add    eax,0x4664d000
  412b10:	(bad)  
  412b11:	fiadd  WORD PTR [eax]
	...
  412b1f:	add    BYTE PTR [eax],al
  412b21:	xchg   esi,eax
  412b22:	xchg   ecx,eax
  412b23:	(bad)  
  412b24:	xlat   BYTE PTR ds:[ebx]
  412b25:	cs inc edi
  412b27:	out    0x69,eax
  412b29:	imul   eax,DWORD PTR ds:0xc4510000,0x59
  412b30:	leave  
  412b31:	stc    
  412b32:	lea    ecx,[ecx-0x2142b614]
  412b38:	push   ebx
  412b39:	and    dh,bh
  412b3b:	in     al,0x40
  412b3d:	mov    edx,0xf90170b9
  412b42:	mov    bh,0x81
  412b44:	cmp    eax,0x40e72f
  412b49:	mov    ch,BYTE PTR ds:0xa2a78307
  412b4f:	sub    al,0x41
  412b51:	jp     0x412b54
  412b53:	jne    0x412b5a
  412b55:	mov    eax,ds:0xc9c959c1
  412b5a:	mov    edi,0x17afc43
  412b5f:	add    BYTE PTR [eax],al
  412b61:	cmp    eax,0x4a00f63e
  412b66:	or     DWORD PTR [eax],eax
  412b68:	(bad)  
  412b69:	jmp    esp
  412b6b:	(bad)  
  412b6c:	(bad)  
  412b6d:	cmp    cl,BYTE PTR [ecx]
  412b6f:	mov    DWORD PTR [ebp-0x72],0x4a000009
  412b76:	retf   0xf043
  412b79:	dec    edx
  412b7a:	or     DWORD PTR [eax],eax
  412b7c:	add    BYTE PTR [edi-0x48af11b4],dh
  412b82:	dec    esp
  412b83:	repnz push eax
	...
  412b91:	add    BYTE PTR [eax],al
  412b93:	add    BYTE PTR [edi-0x1faf15b4],al
  412b99:	ror    DWORD PTR [ebx+0x68796645],1
  412b9f:	add    dh,al
  412ba1:	add    eax,0x3bf5006a
  412ba6:	mov    ds:0x8908cb2e,eax
  412bab:	inc    ebp
  412bac:	adc    al,BYTE PTR [esi+0x5cfae87b]
  412bb2:	pop    es
  412bb3:	and    DWORD PTR [ebx-0x27],0x2e63e95b
  412bba:	add    dh,BYTE PTR [ebp+0x57]
  412bbd:	dec    ebx
  412bbe:	aad    0xfb
  412bc0:	aam    0xe9
  412bc2:	dec    ebx
  412bc3:	cmp    BYTE PTR [esi],0x76
  412bc6:	add    dh,BYTE PTR [ecx+ebx*1-0x59]
  412bca:	lods   eax,DWORD PTR ds:[esi]
  412bcb:	idiv   DWORD PTR [eax+0x3b724b2b]
  412bd1:	xchg   esi,eax
  412bd2:	aad    0x41
  412bd4:	pushf  
  412bd5:	fwait
  412bd6:	jns    0x412c1c
  412bd8:	adc    DWORD PTR [ebx-0x100717f1],0x4c
  412bdf:	(bad)  
  412be0:	pop    eax
  412be1:	outs   dx,BYTE PTR ds:[esi]
  412be2:	(bad)  
  412be3:	and    ch,dl
  412be5:	icebp  
  412be6:	imul   esp,DWORD PTR [bx-0x7a],0xab6c315c
  412bee:	dec    ebx
  412bef:	je     0x412b74
  412bf1:	mov    bl,0xc2
  412bf3:	pop    es
  412bf4:	pop    esp
  412bf5:	popa   
  412bf6:	data16 mov es,WORD PTR [eax]
	...
  412c05:	add    BYTE PTR [eax],al
  412c07:	mov    ds:0x6e344b2a,eax
  412c0c:	ja     0x412bcf
  412c0e:	call   ebp
  412c10:	sub    eax,0x6da81c9f
  412c15:	add    al,BYTE PTR [ebx+0x4c4b7a20]
  412c1b:	aas    
  412c1c:	scas   eax,DWORD PTR es:[edi]
  412c1d:	int    0xeb
  412c1f:	arpl   WORD PTR [ecx+0x1a96fe87],bx
  412c25:	dec    esp
  412c26:	adc    al,0xc2
  412c28:	add    ecx,0xffffffff
  412c2b:	and    eax,0x4ff4e71
  412c30:	add    al,BYTE PTR cs:[ecx-0xa6f982]
  412c37:	hlt    
  412c38:	sub    eax,0x4fa04d5
  412c3d:	inc    ebp
  412c3e:	dec    ebx
  412c3f:	in     eax,0x43
  412c41:	imul   ecx,ecx,0xfd5d04d8
  412c47:	aad    0xb9
  412c49:	int3   
  412c4a:	dec    ebx
  412c4b:	ja     0x412cb3
  412c4d:	push   ss
  412c4e:	(bad)
  412c51:	out    0x3,eax
  412c53:	arpl   WORD PTR ds:0xd9a13d12,ax
  412c59:	popa   
  412c5a:	pop    eax
  412c5b:	loope  0x412ca5
  412c5d:	mov    esp,0x23ad0db7
  412c62:	bound  ebx,QWORD PTR [ebp+eax*1-0x6f]
  412c66:	(bad)  
  412c67:	arpl   WORD PTR [eax-0x73],cx
  412c6a:	xchg   DWORD PTR [eax],eax
	...
  412c78:	add    BYTE PTR [eax],al
  412c7a:	dec    edi
  412c7b:	pop    esi
  412c7c:	(bad)  
  412c7d:	les    eax,FWORD PTR [ebx+eax*2+0x1e1fcf4]
  412c84:	mov    WORD PTR [edx],ds
  412c86:	and    al,BYTE PTR ds:0xf066d0e9
  412c8c:	sub    BYTE PTR [ebx+0x7f294e09],ch
  412c92:	jg     0x412cb4
  412c94:	mov    ds:0x772e54c4,al
  412c99:	add    eax,0x20510563
  412c9e:	inc    edi
  412c9f:	inc    ebx
  412ca0:	cmp    eax,0xa1e47f87
  412ca5:	les    esi,FWORD PTR [ebx+eax*2]
  412ca8:	mov    ah,0xf2
  412caa:	sub    eax,0x6f4aecb7
  412caf:	in     al,0xb1
  412cb1:	les    ebx,FWORD PTR [ebx+ebp*1]
  412cb4:	inc    esi
  412cb5:	pop    es
  412cb6:	arpl   WORD PTR ds:0x89743e2,ax
  412cbc:	adc    dh,bl
  412cbe:	arpl   WORD PTR ds:0x41a742e9,ax
  412cc4:	(bad)  
  412cc5:	call   0x5c41322a
  412cca:	and    bh,BYTE PTR [edi]
  412ccc:	dec    edi
  412ccd:	push   ebx
  412cce:	pop    edi
  412ccf:	scas   eax,DWORD PTR es:[edi]
  412cd0:	add    esi,ebx
  412cd2:	mov    ch,0x6
  412cd4:	push   0xffffffe9
  412cd6:	sub    DWORD PTR [edi+0x29d3ce03],esi
  412cdc:	sub    eax,0x28
	...
  412ced:	pop    edi
  412cee:	push   cs
  412cef:	shl    BYTE PTR ds:0xe9882c62,0x60
  412cf6:	add    eax,0x2d633aff
  412cfb:	pop    ecx
  412cfc:	sub    BYTE PTR [eax],bl
  412cfe:	inc    ebx
  412cff:	mov    BYTE PTR [edi+ebp*1],ah
  412d02:	inc    ebx
  412d03:	jb     0x412cf2
  412d05:	cmp    BYTE PTR [eax],dh
  412d07:	add    ecx,ebp
  412d09:	pusha  
  412d0a:	aad    0xfe
  412d0c:	cld    
  412d0d:	sbb    dl,dl
  412d0f:	(bad)  
  412d10:	cli    
  412d11:	jl     0x412cbd
  412d13:	jmp    edi
  412d15:	pusha  
  412d16:	add    eax,0x426ce968
  412d1b:	(bad)  
  412d1c:	push   ecx
  412d1d:	add    eax,DWORD PTR [edi]
  412d1f:	add    cl,ch
  412d21:	pop    ebp
  412d22:	xor    BYTE PTR [ebx+0x2],0xa0
  412d26:	leave  
  412d27:	sti    
  412d28:	jmp    0x7441328d
  412d2d:	and    edi,DWORD PTR [esi]
  412d2f:	dec    edi
  412d30:	shl    DWORD PTR [eax-0x51],cl
  412d33:	add    DWORD PTR [esi],esi
  412d35:	adc    edi,DWORD PTR [edx]
  412d37:	imul   ebp,ecx,0x2603b799
  412d3d:	xor    ebp,DWORD PTR [ecx]
  412d3f:	sub    eax,0xc00e60a8
  412d44:	popf   
  412d45:	push   ss
  412d46:	inc    ebx
  412d47:	je     0x412d5a
  412d49:	test   al,0x68
  412d4b:	xor    BYTE PTR [eax],al
  412d4d:	pop    ebp
  412d4e:	iret   
  412d4f:	jmp    0x412d84
	...
  412d60:	std    
  412d61:	push   ecx
  412d62:	imul   al
  412d64:	mov    ds,WORD PTR [ecx]
  412d66:	(bad)  
  412d67:	(bad)  
  412d68:	cmp    eax,0xfa412006
  412d6d:	les    eax,FWORD PTR [ebx-0x4]
  412d70:	retf   0x5
  412d73:	add    BYTE PTR [edi],bh
  412d75:	cmp    dl,0x50
  412d78:	and    BYTE PTR [ecx],cl
  412d7a:	push   0x2
  412d7c:	gs arpl si,di
  412d7f:	(bad)  
  412d80:	jns    0x412d87
  412d82:	call   DWORD PTR ds:0x411ea7
  412d88:	rol    ebp,0xd
  412d8b:	test   BYTE PTR [ebx],dl
  412d8d:	or     DWORD PTR [eax],eax
  412d8f:	add    ch,al
  412d91:	adc    esi,0x58a20
  412d97:	mov    DWORD PTR [edi-0x13],0x57affff
  412d9e:	push   DWORD PTR [ebx-0x7a]
  412da1:	mov    esp,0x57ede043
  412da6:	push   es
  412da7:	pop    DWORD PTR [edi-0x5b]
  412daa:	lds    eax,FWORD PTR [ebp+0x12]
  412dad:	or     DWORD PTR [eax],eax
  412daf:	add    BYTE PTR [edx-0x3a],cl
  412db2:	inc    ebx
  412db3:	in     al,dx
  412db4:	dec    edx
  412db5:	add    eax,0x80850000
  412dba:	out    dx,al
  412dbb:	add    BYTE PTR [edx],bh
  412dbd:	add    eax,0xd107c700
  412dc2:	(bad)  
  412dc3:	inc    DWORD PTR [eax]
	...
  412dd1:	add    BYTE PTR [eax],al
  412dd3:	dec    edx
  412dd4:	add    eax,0x7952458d
  412dd9:	std    
  412dda:	jne    0x412e5a
  412ddc:	loope  0x412e0a
  412dde:	add    al,0xa
  412de0:	add    eax,0xa263c00b
  412de5:	jmp    0x5a74:0x41a8e82
  412dec:	pop    es
  412ded:	iret   
  412dee:	repz in al,dx
  412df0:	sub    DWORD PTR [ebx+0x3f2ea228],edi
  412df6:	inc    esp
  412df7:	pop    ss
  412df8:	add    al,BYTE PTR cs:[eax]
  412dfb:	arpl   WORD PTR [ebx-0x1],dx
  412dfe:	(bad)  
  412dff:	es jp  0x412e04
  412e02:	add    BYTE PTR [ebx+0x2e],ah
  412e05:	inc    edi
  412e06:	je     0x412dd7
  412e08:	dec    edi
  412e09:	in     eax,dx
  412e0a:	fdiv   DWORD PTR [ebp-0x13]
  412e0d:	add    ecx,DWORD PTR [ebx]
  412e0f:	mov    ds:0xd8e7e9fa,eax
  412e14:	add    BYTE PTR [edi-0x2],0xe0
  412e18:	xor    DWORD PTR [ecx],esi
  412e1a:	sub    eax,0x74022e22
  412e1f:	gs lahf 
  412e21:	in     eax,dx
  412e22:	rol    BYTE PTR [ebp-0x13],1
  412e25:	add    eax,edi
  412e27:	data16 jecxz 0x412e44
  412e2a:	inc    ecx
  412e2b:	arpl   WORD PTR ds:0xabe30002,bp
  412e31:	(bad)
  412e34:	inc    edx
  412e35:	sti    
  412e36:	inc    BYTE PTR [eax]
	...
  412e44:	add    BYTE PTR [eax],al
  412e46:	idiv   BYTE PTR [ecx-0x29988bb9]
  412e4c:	sub    eax,0x472e6302
  412e51:	je     0x412eaa
  412e53:	mov    BYTE PTR [ebx+0x0],0x63
  412e57:	cs inc esi
  412e59:	xor    ah,BYTE PTR [ebx]
  412e5b:	test   DWORD PTR [edi-0x2],eax
  412e5e:	cmp    al,0xff
  412e60:	push   esp
  412e61:	lods   eax,DWORD PTR ds:[esi]
  412e62:	jnp    0x412e93
  412e64:	test   DWORD PTR [ecx+eax*4-0x2701b811],0x39fd0204
  412e6f:	adc    BYTE PTR [eax+eiz*8+0x16],ah
  412e73:	inc    eax
  412e74:	adc    eax,0xe905638b
  412e79:	add    esp,DWORD PTR [esp+ebx*8-0x7368bbd1]
  412e80:	or     al,0x84
  412e82:	and    BYTE PTR [ecx-0x80],al
  412e85:	in     eax,dx
  412e86:	add    al,0xc5
  412e88:	call   0xaa47a0d8
  412e8d:	inc    edi
  412e8e:	dec    edx
  412e8f:	add    eax,0x56235d1
  412e94:	jmp    0xce3bfcf4
  412e99:	inc    edi
  412e9a:	mov    esp,0xbd47b999
  412e9f:	lods   al,BYTE PTR ds:[esi]
  412ea0:	(bad)  
  412ea1:	push   ss
  412ea2:	and    al,BYTE PTR ds:0xc6786541
  412ea8:	call   0x412f08
	...
  412eb9:	push   edi
  412eba:	cld    
  412ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ebc:	inc    edi
  412ebd:	add    al,0x36
  412ebf:	into   
  412ec0:	les    edx,FWORD PTR [edi+eiz*4+0x52215da]
  412ec7:	add    DWORD PTR [esi+0x4a],0xcfdc8540
  412ece:	out    dx,al
  412ecf:	daa    
  412ed0:	add    al,0xb
  412ed2:	cmp    al,0xc4
  412ed4:	les    ebp,FWORD PTR [edi+eiz*1+0x7d]
  412ed8:	or     ah,BYTE PTR [edi+edi*1-0x30]
  412edc:	fmul   DWORD PTR [ebx-0x5a24173c]
  412ee2:	in     al,dx
  412ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ee4:	add    edi,DWORD PTR [ebx]
  412ee6:	adc    al,BYTE PTR es:[edi+0x45]
  412eea:	scas   al,BYTE PTR es:[edi]
  412eeb:	xchg   DWORD PTR [esi],edx
  412eed:	mov    ds:0x888dd105,al
  412ef2:	(bad)  
  412ef3:	(bad)  
  412ef4:	call   0x2e7a8481
  412ef9:	pushf  
  412efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412efb:	add    eax,0x663f27d0
  412f00:	daa    
  412f01:	ja     0x412ec7
  412f03:	inc    DWORD PTR [eax]
  412f05:	mov    eax,ds:0xa70efefc
  412f0a:	pop    es
  412f0b:	cli    
  412f0c:	push   es
  412f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f0e:	es xor al,0x3
  412f11:	pushf  
  412f12:	aas    
  412f13:	or     ch,BYTE PTR [ecx]
  412f15:	adc    edx,DWORD PTR [eax+ebp*8]
  412f18:	fistp  WORD PTR [ecx+0xf2fe3f]
	...
  412f2a:	add    BYTE PTR [eax],al
  412f2c:	and    BYTE PTR [edx+0x5e63a609],dh
  412f32:	dec    edx
  412f33:	sub    BYTE PTR [edi+0x4],ah
  412f36:	add    cl,ch
  412f38:	pusha  
  412f39:	lods   eax,DWORD PTR ds:[esi]
  412f3a:	add    al,ch
  412f3c:	pusha  
  412f3d:	add    eax,0x3e50d6e8
  412f42:	dec    BYTE PTR [edx-0x16bf3579]
  412f48:	gs leave 
  412f4a:	sti    
  412f4b:	call   0x6c4134b7
  412f50:	mov    ds:0x73964f3a,eax
  412f55:	in     al,0x4a
  412f57:	sub    BYTE PTR [edi+0x2d],bl
  412f5a:	push   0xb0560eb
  412f5f:	test   eax,0xbcff1993
  412f64:	inc    edi
  412f65:	retf   0xe940
  412f68:	or     BYTE PTR [eax+0x2e],bl
  412f6b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  412f6d:	inc    edi
  412f6e:	add    al,0x8
  412f70:	sbb    ch,al
  412f72:	(bad)  
  412f73:	call   0x414134d8
  412f78:	ds clc 
  412f7a:	inc    BYTE PTR [eax]
  412f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f7d:	fiadd  DWORD PTR [ebx+esi*1]
  412f80:	jne    0x412f49
  412f82:	push   si
  412f84:	pop    ebp
  412f85:	dec    eax
  412f86:	(bad)  
  412f87:	out    0x39,eax
  412f89:	sar    ebp,cl
  412f8b:	call   DWORD PTR [ebx-0x3d]
  412f8e:	push   ebx
  412f8f:	mov    eax,DWORD PTR [eax]
	...
  412f9d:	add    BYTE PTR [eax],al
  412f9f:	pop    dx
  412fa1:	add    eax,0xf801bae9
  412fa6:	jb     0x412fa3
  412fa8:	ret    0x6afd
  412fab:	or     bl,dl
  412fad:	mov    eax,0xb8020a01
  412fb2:	add    dl,bh
  412fb4:	add    DWORD PTR [eax],eax
  412fb6:	leave  
  412fb7:	cmp    BYTE PTR [esi],bh
  412fb9:	(bad)  
  412fba:	addr16 imul ebx,edx,0x3e
  412fbe:	add    dl,al
  412fc0:	push   edx
  412fc1:	inc    edx
  412fc3:	mov    ch,0x60
  412fc5:	clc    
  412fc6:	call   0xa4293945
  412fcb:	retf   
  412fcc:	add    DWORD PTR [eax],eax
  412fce:	call   0x3ef6d3
  412fd3:	mov    ds:0xf5fff0bb,al
  412fd8:	loopne 0x412fec
  412fda:	cmc    
  412fdb:	(bad)
  412fde:	cld    
  412fdf:	out    dx,eax
  412fe0:	(bad)  
  412fe1:	std    
  412fe2:	xor    DWORD PTR [edi+0x7a4149e8],0x1
  412fe9:	je     0x413004
  412feb:	or     DWORD PTR [esi],eax
  412fed:	shr    DWORD PTR [esi],1
  412fef:	dec    ebx
  412ff0:	or     DWORD PTR [eax],eax
  412ff2:	je     0x413070
  412ff4:	enter  0xd113,0xa4
  412ff8:	inc    edx
  412ff9:	inc    dh
  412ffb:	dec    edi
  412ffc:	jle    0x413025
  412ffe:	inc    ecx
  412fff:	dec    edx
  413000:	or     BYTE PTR [eax],al
	...
  413012:	arpl   WORD PTR [esi-0x33b739a5],bp
  413018:	inc    esp
  413019:	out    0x2b,eax
  41301b:	ret    
  41301c:	inc    esp
  41301d:	(bad)  
  41301e:	and    BYTE PTR [edi-0x34],dl
  413021:	call   0x718b5ec9
  413026:	(bad)  
  413027:	out    dx,eax
  413028:	inc    esp
  413029:	out    0x74,eax
  41302b:	sub    eax,0x21890002
  413030:	test   eax,0x531c312a
  413035:	or     BYTE PTR [ecx],0x23
  413038:	int    0x1
  41303a:	or     BYTE PTR [ecx],dh
  41303c:	push   edi
  41303d:	jmp    0x6ec:0xfe44a40b
  413044:	ins    BYTE PTR es:[edi],dx
  413045:	mul    ah
  413047:	sub    ebx,eax
  413049:	inc    esp
  41304b:	adc    al,BYTE PTR [ebx]
  41304d:	add    BYTE PTR [ebx+0x5b],ah
  413050:	sbb    eax,0x3ed2a6c
  413055:	(bad)  
  413056:	jle    0x413036
  413058:	stos   BYTE PTR es:[edi],al
  413059:	inc    eax
  41305a:	arpl   WORD PTR [ebx+0x1d],ax
  41305d:	je     0x413079
  41305f:	in     eax,dx
  413060:	add    edi,edi
  413062:	xchg   dh,dh
  413064:	stos   BYTE PTR es:[edi],al
  413065:	inc    eax
  413066:	arpl   WORD PTR [ebx+0x1d],bp
  413069:	jl     0x4130a5
  41306b:	in     eax,dx
  41306c:	add    edi,edi
  41306e:	ds scas al,BYTE PTR es:[edi]
  413070:	test   eax,0x1d936340
  413075:	test   BYTE PTR [eax],al
	...
  413083:	add    BYTE PTR [eax],al
  413085:	sub    ch,ch
  413087:	add    edi,edi
  413089:	inc    esi
  41308a:	mov    dh,0xa9
  41308c:	inc    eax
  41308d:	arpl   WORD PTR [ebx-0x12f573e3],di
  413093:	add    edi,edi
  413095:	fisubr WORD PTR ds:[ecx+0x66056340]
  41309c:	push   ds
  41309d:	out    dx,eax
  41309e:	frstor [edi+0x70e24c03]
  4130a4:	stos   BYTE PTR es:[edi],al
  4130a5:	mov    ds:0xdf1e4e05,eax
  4130aa:	frstor [edi-0x771dcbfd]
  4130b0:	stos   BYTE PTR es:[edi],al
  4130b1:	mov    ds:0xff1e3605,eax
  4130b6:	frstor [edi+0x50e21c03]
  4130bc:	stos   BYTE PTR es:[edi],al
  4130bd:	mov    ds:0xbf1e1e05,eax
  4130c2:	frstor [edi+0x58e20403]
  4130c8:	stos   BYTE PTR es:[edi],al
  4130c9:	mov    ds:0xaf1e0605,eax
  4130ce:	frstor [edi+0x30e1ec03]
  4130d4:	stos   BYTE PTR es:[edi],al
  4130d5:	mov    ds:0x1f1dee05,eax
  4130da:	fisub  WORD PTR [edi]
  4130dc:	add    al,0xd4
  4130de:	loope  0x413088
  4130e0:	frstor [ebx]
  4130e2:	add    eax,0xdda0e9d6
  4130e7:	daa    
  4130e8:	add    al,0x0
	...
  4130f6:	add    BYTE PTR [eax],al
  4130f8:	mov    esp,0x23ddb0e1
  4130fd:	add    eax,0xdd98e9be
  413102:	daa    
  413103:	add    al,0xa4
  413105:	loope  0x41309f
  413107:	frstor [ebx]
  413109:	add    eax,0xddb0e9a6
  41310e:	daa    
  41310f:	add    al,0x8c
  413111:	loope  0x4130c3
  413113:	frstor [ebx]
  413115:	add    eax,0xdd98e98e
  41311a:	daa    
  41311b:	add    al,0x74
  41311d:	loope  0x4130a7
  41311f:	frstor [ebx]
  413121:	add    eax,0x277a7600
  413126:	pop    eax
  413127:	sub    BYTE PTR [edi+0x3a],ah
  41312a:	and    al,0x51
  41312c:	ss (bad) 
  41312e:	call   FWORD PTR [ebp+0x3a]
  413131:	das    
  413132:	pop    eax
  413133:	test   al,0x60
  413135:	cmp    ah,BYTE PTR [ecx+ebx*2]
  413138:	push   ds
  413139:	(bad)  
  41313a:	inc    DWORD PTR [ebp+0x4a]
  41313d:	aaa    
  41313e:	pop    eax
  41313f:	test   al,0x60
  413141:	cmp    ah,BYTE PTR [ecx+esi*1]
  413144:	push   es
  413145:	(bad)  
  413146:	jmp    FWORD PTR ds:0xa8583f0a
  41314c:	pusha  
  41314d:	cmp    ah,BYTE PTR [ecx+ebp*8]
  413150:	cs (bad) 
  413152:	call   DWORD PTR ds:0xa85a06fa
  413158:	pusha  
  413159:	cmp    ah,BYTE PTR [ecx+esi*8]
	...
  413168:	add    BYTE PTR [eax],al
  41316a:	add    BYTE PTR [esi],dl
  41316c:	(bad)  
  41316d:	(bad)  
  41316e:	std    
  41316f:	sti    
  413170:	push   cs
  413171:	pop    edx
  413172:	test   al,0x60
  413174:	cmp    ah,BYTE PTR [ecx+ebx*8]
  413177:	mov    esi,0xcbe5ffc5
  41317c:	push   ss
  41317d:	pop    edx
  41317e:	sub    BYTE PTR [edi+0x3a],ah
  413181:	and    al,0xf1
  413183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413184:	(bad)  
  413187:	retf   
  413188:	push   ds
  413189:	pop    edx
  41318a:	sub    BYTE PTR [edi+0x3a],bl
  41318d:	and    al,0x9
  41318f:	(bad)  
  413190:	(bad)  
  413193:	mov    ebx,0x672859e6
  413198:	cmp    ah,BYTE PTR [ecx+edx*8]
  41319b:	mov    dh,0xc5
  41319d:	call   FWORD PTR [ebp+0x2859ee7b]
  4131a3:	pop    edi
  4131a4:	cmp    ah,BYTE PTR [ecx+ebx*8]
  4131a7:	sahf   
  4131a8:	(bad)  
  4131ab:	(bad)  ds:0x13b5a32
  4131b1:	jmp    DWORD PTR ds:0x3f58b2
  4131b7:	int    0x2d
  4131b9:	ds pop edx
  4131bb:	or     eax,DWORD PTR [esi]
  4131bd:	jmp    DWORD PTR ds:0x3f5806
  4131c3:	lods   eax,DWORD PTR ds:[esi]
  4131c4:	sub    eax,0x60b5a46
  4131c9:	jmp    DWORD PTR ds:0x3f57ee
	...
  4131db:	add    BYTE PTR [eax],al
  4131dd:	add    BYTE PTR [ebp+0x2d],ch
  4131e0:	dec    esi
  4131e1:	pop    edx
  4131e2:	sti    
  4131e3:	add    eax,0x57f625ff
  4131e8:	aas    
  4131e9:	add    BYTE PTR ds:0xbb5a5a2d,bh
  4131ef:	add    eax,0x57d625ff
  4131f4:	aas    
  4131f5:	add    BYTE PTR [ebp+0x2d],ch
  4131f8:	pop    dx
  4131fa:	retf   
  4131fb:	add    eax,0x57de25ff
  413200:	aas    
  413201:	add    ch,ch
  413203:	and    DWORD PTR [esi+0x5a],ebp
  413206:	or     eax,DWORD PTR [esi]
  413208:	jmp    DWORD PTR ds:0x3f5b36
  41320e:	lods   eax,DWORD PTR ds:[esi]
  41320f:	and    DWORD PTR [esi+0x5a],esi
  413212:	jnp    0x413215
  413214:	jmp    DWORD PTR ds:0x3f5b2e
  41321a:	popf   
  41321b:	and    DWORD PTR [esi+0x5a],edi
  41321e:	jnp    0x413221
  413220:	jmp    DWORD PTR ds:0x3f5b36
  413226:	int    0x21
  413228:	xchg   BYTE PTR [edx+0x4b],bl
  41322b:	add    edi,edi
  41322d:	and    eax,0x3f5b0a
  413232:	arpl   WORD PTR [ebx-0x12e6681a],dx
  413238:	add    edi,edi
  41323a:	mov    al,ds:0xbb6340dd
  413240:	out    0xa3,al
	...
  41324e:	add    BYTE PTR [eax],al
  413250:	add    BYTE PTR [ecx],cl
  413252:	in     eax,dx
  413253:	add    edi,edi
  413255:	xchg   dh,al
  413257:	fld    QWORD PTR [eax+0x63]
  41325a:	lahf   
  41325b:	out    0xab,al
  41325d:	test   eax,0x7eff026d
  413262:	sahf   
  413263:	fld    QWORD PTR [eax+0x63]
  413266:	(bad)  
  413267:	out    0xb3,al
  413269:	cdq    
  41326a:	ins    DWORD PTR es:[edi],dx
  41326b:	add    bh,bh
  41326d:	xchg   BYTE PTR [esi-0x109cbf23],al
  413273:	out    0xbf,al
  413275:	mov    ecx,0x3eff026d
  41327a:	jmp    0xc7e7:0x176340dd
  413281:	test   eax,0x46ff026d
  413286:	sbb    bl,dh
  413288:	inc    eax
  413289:	arpl   di,di
  41328b:	out    0xcf,al
  41328d:	mov    DWORD PTR [ebp+0x2],ebp
  413290:	(bad)  
  413291:	ds sbb bl,dh
  413294:	inc    eax
  413295:	arpl   WORD PTR [edi],sp
  413297:	in     eax,0xd7
  413299:	cmp    ebp,ebp
  41329b:	add    edi,edi
  41329d:	xchg   BYTE PTR [edx-0x24],bh
  4132a0:	inc    eax
  4132a1:	arpl   WORD PTR [edi-0x1b],cx
  4132a4:	fistp  WORD PTR [ecx]
  4132a6:	in     eax,dx
  4132a7:	add    edi,edi
  4132a9:	jle    0x4132f5
  4132ab:	fadd   QWORD PTR [eax+0x63]
  4132ae:	ja     0x413295
  4132b0:	jmp    0x4132bb
  4132b2:	in     eax,dx
  4132b3:	add    edi,edi
	...
  4132c1:	add    BYTE PTR [eax],al
  4132c3:	add    BYTE PTR [esi+0x7e],al
  4132c6:	fadd   QWORD PTR [eax+0x63]
  4132c9:	add    eax,0x49984fb5
  4132ce:	lods   al,BYTE PTR ds:[esi]
  4132cf:	dec    edi
  4132d0:	cwde   
  4132d1:	dec    ecx
  4132d2:	popa   
  4132d3:	mov    DWORD PTR [eax+0x1],0xba623b6a
  4132da:	lock jnp 0x4132dd
  4132dd:	add    eax,0x1a103e9
  4132e2:	jmp    0xec42876b
  4132e7:	or     ebx,DWORD PTR [ebx]
  4132e9:	add    ebp,ecx
  4132eb:	add    esp,DWORD PTR [ebx+0x43]
  4132ee:	in     al,0x3
  4132f0:	loopne 0x41332e
  4132f2:	loopne 0x4132b2
  4132f4:	fs jge 0x4132db
  4132f7:	add    esp,DWORD PTR [ebx+0x5]
  4132fa:	sub    eax,DWORD PTR [edi]
  4132fc:	arpl   WORD PTR [eax+eax*2+0x710da613],ax
  413303:	or     DWORD PTR [ebx+0x5],esp
  413306:	jmp    0x6a469350
  41330b:	cmp    ebp,DWORD PTR [edx+edi*4-0x10]
  41330f:	jnp    0x41336d
  413311:	add    eax,0x12103e9
  413316:	jmp    0x84061f9f
  41331b:	or     ebp,DWORD PTR [ebx+0x6303e90a]
  413321:	inc    ebx
  413322:	in     al,dx
  413323:	add    ebx,DWORD PTR [esi+0x3e885]
	...
  413335:	add    BYTE PTR [eax],al
  413337:	arpl   WORD PTR [edx+0x5587bf0],di
  41333d:	jmp    0xe941d445
  413342:	add    BYTE PTR [ebx+0x6],ah
  413345:	jmp    0x814e694d
  41334a:	push   cs
  41334b:	arpl   WORD PTR ds:0x56041e9,ax
  413351:	add    ah,dh
  413353:	pusha  
  413354:	add    eax,DWORD PTR [eax]
  413356:	jmp    0xf9f932fe
  41335b:	pusha  
  41335c:	add    eax,0x55bab00
  413361:	cmp    eax,0x564e9
  413366:	or     al,0x67
  413368:	jge    0x41337b
  41336a:	jmp    0xe60338cf
  41336f:	pusha  
  413370:	cli    
  413371:	jmp    eax
  413373:	pusha  
  413374:	add    eax,0x12d8e17d
  413379:	add    cl,ch
  41337b:	pusha  
  41337c:	inc    ebx
  41337d:	add    ebp,ecx
  41337f:	arpl   WORD PTR ds:0xb860e910,ax
  413385:	pop    es
  413386:	xchg   ecx,eax
  413387:	dec    ebp
  413388:	add    eax,0x2a2e900
  41338d:	add    ah,bh
  41338f:	pusha  
  413390:	in     eax,0xff
  413392:	call   0xd1f932ba
  413397:	pusha  
  413398:	add    eax,0x2b00
	...
  4133a9:	add    BYTE PTR [ebx+0x5],bl
  4133ac:	cmp    eax,0xfe3720e9
  4133b1:	xchg   esp,eax
  4133b2:	push   0x60e9197d
  4133b7:	add    eax,0xf860edc2
  4133bc:	jmp    FWORD PTR [eax+0x5f]
  4133bf:	add    eax,0x1a58e17d
  4133c4:	add    cl,ch
  4133c6:	pusha  
  4133c7:	inc    ebx
  4133c8:	add    ebp,ecx
  4133ca:	ror    DWORD PTR [ebp+0x3c],1
  4133cd:	jmp    0xe6413832
  4133d2:	add    eax,DWORD PTR [esi-0x74]
  4133d5:	sbb    eax,0x8b1766
  4133da:	sti    
  4133db:	les    eax,FWORD PTR [edx]
  4133dd:	add    BYTE PTR [ecx],bh
  4133df:	sbb    DWORD PTR [edx],0xff028a04
  4133e5:	jne    0x41338e
  4133e7:	mov    edi,DWORD PTR [edi+0x10]
  4133ea:	jle    0x4133ee
  4133ec:	add    BYTE PTR [ecx+0x419fb],cl
  4133f2:	mov    al,BYTE PTR [edx-0x3b]
  4133f5:	add    DWORD PTR [esi+0x72fffffe],0xf3000002
  4133ff:	or     BYTE PTR [esi],0x4
  413402:	dec    edx
  413403:	add    al,BYTE PTR [ebx-0x1e184]
  413409:	mov    dl,bl
  41340b:	sbb    al,BYTE PTR [eax+eax*1]
	...
  41341a:	add    BYTE PTR [eax],al
  41341c:	add    BYTE PTR [edx],bh
  41341e:	outs   dx,BYTE PTR ds:[esi]
  41341f:	or     DWORD PTR [edx-0x13ffbb5],ecx
  413425:	mov    cl,BYTE PTR [edx+0x23ec1ff]
  41342b:	shl    BYTE PTR [ecx],1
  41342d:	js     0x41342d
  41342f:	inc    DWORD PTR [edx+0x4168b]
  413435:	or     dh,bh
  413437:	jae    0x413456
  413439:	xchg   ecx,eax
  41343a:	or     DWORD PTR [esi],0x8901fa04
  413440:	xor    edx,0xcafffffd
  413446:	mov    esi,0x1fe1c7f
  41344b:	add    BYTE PTR [eax],cl
  41344d:	cli    
  41344e:	add    DWORD PTR [eax],eax
  413450:	mov    DWORD PTR [ebx+0x12],ecx
  413453:	add    al,0x0
  413455:	retf   0x878a
  413458:	sbb    BYTE PTR [esi+0x5bd00001],bh
  41345e:	les    eax,FWORD PTR [ecx+0x6306381]
  413464:	add    BYTE PTR [ebx+0x47],ah
  413467:	mov    dh,0x1c
  413469:	fsubr  DWORD PTR [ebx+edx*1-0x76d39cfc]
  413470:	cmp    BYTE PTR [ebx+0x28],0x2
  413474:	add    BYTE PTR [ebx],ah
  413476:	pop    edi
  413477:	sbb    BYTE PTR [ebx],0x67
  41347a:	sub    al,0x2
  41347c:	or     BYTE PTR [ebx+0x2c],ah
  41347f:	add    cl,BYTE PTR [ecx+0x0]
	...
  41348d:	add    BYTE PTR [eax],al
  41348f:	add    dl,ah
  413491:	cmp    eax,DWORD PTR [esi]
  413493:	add    BYTE PTR [ebx-0x5d],ah
  413496:	mov    dl,BYTE PTR [edi]
  413498:	addr16 sub al,0x2
  41349b:	mov    ah,BYTE PTR [edx+0x2a]
  41349e:	inc    edx
  41349f:	std    
  4134a0:	and    esp,DWORD PTR [edi-0x15173cfe]
  4134a6:	out    0x3,eax
  4134a8:	fdiv   DWORD PTR [edx-0x1a]
  4134ab:	add    ebp,DWORD PTR [esi+0x3532d37c]
  4134b1:	stos   BYTE PTR es:[edi],al
  4134b2:	retf   0xe9ff
  4134b5:	(bad)  
  4134b6:	and    dh,0x62
  4134b9:	or     eax,0x5ad6452c
  4134be:	rol    DWORD PTR [edx-0x104ce1e5],cl
  4134c4:	loopne 0x4134ba
  4134c6:	add    bh,BYTE PTR [ebp-0x1c313f4]
  4134cc:	(bad)  
  4134cd:	xchg   ecx,eax
  4134ce:	or     DWORD PTR [ecx+esi*2+0x6f],esi
  4134d2:	xchg   esi,edi
  4134d4:	(bad)  
  4134d5:	lds    ebx,FWORD PTR [edi]
  4134d7:	add    al,0x63
  4134d9:	push   ds
  4134da:	mov    ch,0x18
  4134dc:	fcomp  DWORD PTR [ebp+0x1e630413]
  4134e2:	mov    DWORD PTR [eax+0x22a7b],eax
  4134e8:	and    eax,DWORD PTR ds:0x9687a70
  4134ee:	jmp    0xf8c81ef6
  4134f3:	pop    es
	...
  413500:	add    BYTE PTR [eax],al
  413502:	add    BYTE PTR [ebx+0x5],ah
  413505:	bound  eax,QWORD PTR [edx+0x3e90954]
  41350b:	lods   eax,DWORD PTR ds:[esi]
  41350c:	inc    edi
  41350d:	out    0xb7,eax
  41350f:	push   0x7f
  413511:	rol    BYTE PTR [ecx],1
  413513:	mov    eax,0x748ba933
  413518:	and    dl,ch
  41351a:	push   ebx
  41351b:	fs push es
  41351d:	push   eax
  41351e:	pop    ds
  41351f:	addr16 add eax,0x805bb6e9
  413525:	adc    esp,DWORD PTR [bx+0x5]
  413529:	jmp    0xe54f18b8
  41352e:	add    esp,DWORD PTR [ebx-0x3b]
  413531:	pop    edi
  413532:	jp     0x4135ac
  413534:	or     ecx,ebp
  413536:	add    ebx,edx
  413538:	test   eax,edi
  41353a:	pop    es
  41353b:	arpl   WORD PTR ds:0x9548272,ax
  413541:	jmp    0xeb4e1e49
  413546:	pop    eax
  413547:	cs dec eax
  413549:	pop    ss
  41354a:	sub    ecx,esp
  41354c:	and    ah,bh
  41354e:	mov    esi,DWORD PTR [edx+edi*4+0x5a]
  413552:	fsub   DWORD PTR [ebx+0x5e]
  413555:	int3   
  413556:	pop    es
  413557:	arpl   WORD PTR ds:0x85d81a9c,ax
  41355d:	clc    
  41355e:	pop    es
  41355f:	arpl   WORD PTR ds:0x94c8260,ax
  413565:	jmp    0x41356d
	...
  413576:	mov    ds:0x5f1f3f7e,eax
  41357b:	add    eax,0x14e38ae9
  413580:	add    ch,ch
  413582:	pusha  
  413583:	add    eax,0x968688b
  413588:	add    cl,ch
  41358a:	xchg   edx,eax
  41358b:	inc    esi
  41358c:	add    BYTE PTR [ebp+0x6d],dl
  41358f:	jg     0x4135a0
  413591:	jmp    0x4135a1
  413593:	xor    al,cl
  413595:	popa   
  413596:	push   edi
  413597:	and    BYTE PTR [ecx],al
  413599:	cdq    
  41359a:	mov    edi,0x9cdda904
  41359f:	xor    edi,esi
  4135a1:	cmp    al,0x76
  4135a3:	add    BYTE PTR [eax-0x1cc7327],0x70
  4135aa:	ficomp WORD PTR [ebx]
  4135ac:	add    al,0xe9
  4135ae:	pusha  
  4135af:	lds    ecx,FWORD PTR [eax+0x95b50]
  4135b5:	jmp    0xed50ba99
  4135ba:	pusha  
  4135bb:	add    eax,0x97f708b
  4135c0:	add    cl,ch
  4135c2:	mov    al,0xe5
  4135c4:	pop    esi
  4135c5:	cvtpi2ps xmm0,QWORD PTR [ebp+0x3]
  4135c9:	jmp    0xcdcc0ffb
  4135ce:	sbb    al,0x3
  4135d0:	push   esi
  4135d1:	sbb    bl,BYTE PTR [edi+0x584c82db]
  4135d7:	mov    ebx,0x8404
	...
  4135e8:	add    BYTE PTR [eax+0x5],bl
  4135eb:	add    cl,ch
  4135ed:	in     eax,dx
  4135ee:	scas   al,BYTE PTR es:[edi]
  4135ef:	and    ebx,ebp
  4135f1:	in     eax,0x3b
  4135f3:	sub    dh,BYTE PTR [edx+ebx*8]
  4135f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135f7:	and    ebp,ecx
  4135f9:	(bad)  
  4135fa:	adc    eax,DWORD PTR [edx+eax*2+0x248b12b3]
  413601:	in     al,0x58
  413603:	mov    WORD PTR [edx+0x67],?
  413606:	add    eax,0x30fa0000
  41360b:	sbb    BYTE PTR [esp+eax*8+0x41],dh
  41360f:	inc    eax
  413610:	test   DWORD PTR [ebx+0x7a83f474],eax
  413616:	push   es
  413617:	test   ecx,ecx
  413619:	daa    
  41361a:	add    DWORD PTR [ebx+0x1e3c8c0],eax
  413620:	or     DWORD PTR [edx],0x8
  413623:	inc    edi
  413624:	inc    esi
  413625:	cmp    DWORD PTR [edx+0x22],ebp
  413628:	sbb    al,0xbb
  41362a:	jne    0x4135f8
  41362c:	pop    edi
  41362d:	jl     0x41367b
  41362f:	pop    ecx
  413630:	ret    0x67e
  413633:	mov    edx,DWORD PTR [esi+eiz*2+0x5]
  413637:	push   ebp
  413638:	push   esi
  413639:	adc    ecx,edi
  41363b:	lds    eax,FWORD PTR [esi-0x1cd6e]
  413641:	mov    al,BYTE PTR [esi]
  413643:	add    BYTE PTR [eax],al
  413645:	add    BYTE PTR [eax],al
  413647:	test   cl,cl
  413649:	ins    DWORD PTR es:[edi],dx
  41364a:	mov    dl,0x2e
  41364c:	add    DWORD PTR [eax],eax
	...
  41365a:	add    BYTE PTR [eax],al
  41365c:	dec    edx
  41365d:	push   es
  41365e:	push   edi
  41365f:	mov    ecx,DWORD PTR [esi+0x52]
  413662:	adc    al,BYTE PTR [ebx+0x575ffbd]
  413668:	std    
  413669:	(bad)  
  41366a:	(bad)  
  41366b:	dec    DWORD PTR [edx-0x7d]
  41366e:	shr    BYTE PTR [ebx],0x85
  413671:	xchg   esi,eax
  413672:	cmp    BYTE PTR [eax],cl
  413674:	push   ss
  413675:	inc    eax
  413676:	dec    ebp
  413677:	inc    eax
  413678:	mov    bh,0xef
  41367a:	jae    0x413672
  41367c:	mov    DWORD PTR [edx+ebx*1-0xf9f5fc],eax
  413683:	jne    0x4136a4
  413685:	add    DWORD PTR [eax+edx*1-0x76fffa0a],0xffffff84
  41368d:	push   cs
  41368e:	add    al,0x0
  413690:	arpl   WORD PTR [edx+eax*8],bx
  413693:	(bad)  
  413694:	in     eax,0x1f
  413696:	(bad)  
  413697:	jmp    esp
  413699:	xor    eax,DWORD PTR [edx]
  41369b:	add    BYTE PTR [ebx-0x4b],ah
  41369e:	or     BYTE PTR [edi],0x5f
  4136a1:	sbb    al,0x2
  4136a3:	mov    esp,ebp
  4136a5:	push   ebx
  4136a6:	(bad)  
  4136a7:	inc    esp
  4136a9:	imul   esp,ebx,0xffffff8a
  4136ac:	in     eax,0x2b
  4136ae:	(bad)  
  4136af:	push   DWORD PTR [ebp+eiz*4+0x23db5f0d]
  4136b6:	aaa    
  4136b7:	test   DWORD PTR [ebx+0x20],edx
  4136ba:	add    al,BYTE PTR [eax]
  4136bc:	cmp    eax,0x74611
	...
  4136cd:	add    BYTE PTR [eax],al
  4136cf:	arpl   WORD PTR [ecx-0x61348cc8],sp
  4136d5:	dec    edx
  4136d6:	(bad)  
  4136d7:	bound  edi,QWORD PTR [edx+0x1c630417]
  4136dd:	test   DWORD PTR [eax+0x6a],ebp
  4136e0:	adc    DWORD PTR [ebx],ebx
  4136e2:	mov    esp,ebp
  4136e4:	sub    edi,esi
  4136e6:	jmp    DWORD PTR [esp+esi*4-0x7f]
  4136ea:	pop    ss
  4136eb:	addr16 push ds
  4136ed:	add    al,BYTE PTR [eax-0x16]
  4136f0:	enter  0x417,0x63
  4136f4:	push   ds
  4136f5:	mov    DWORD PTR [ebp+0x22273],eax
  4136fb:	call   0x634552a8
  413700:	push   ds
  413701:	mov    WORD PTR [edi],cs
  413703:	popa   
  413704:	in     al,dx
  413705:	cmp    ecx,eax
  413707:	fisttp DWORD PTR [esi+0x1]
  41370a:	mov    ?,WORD PTR [edi+0x2a]
  41370d:	add    al,BYTE PTR [eax]
  41370f:	mov    ss,WORD PTR [ebp-0x75]
  413712:	test   DWORD PTR [ebx+0x2a],esi
  413715:	add    al,BYTE PTR [eax]
  413717:	fiadd  DWORD PTR ds:0x5671c6f
  41371d:	jmp    0xf4a122e5
  413722:	(bad)  
  413723:	in     al,dx
  413724:	xor    BYTE PTR [edi-0x7e],bl
  413727:	push   esp
  413728:	or     ecx,ebp
  41372a:	add    ebp,eax
  41372c:	xchg   eax,esp
  41372e:	call   esp
  413730:	xor    BYTE PTR [edx+0x14],ah
	...
  41373f:	add    BYTE PTR [eax],al
  413741:	add    BYTE PTR [ecx+0x53],ah
  413744:	out    dx,al
  413745:	inc    ebp
  413746:	fcom   QWORD PTR ds:0x95889e8
  41374c:	jmp    0x624f6554
  413751:	sbb    DWORD PTR [ecx+ecx*1-0x17],0xe087da03
  413759:	call   FWORD PTR [eax+esi*1+0x11c68b28]
  413760:	in     eax,dx
  413761:	add    esp,DWORD PTR [ebx+0x7e]
  413764:	adc    bx,WORD PTR [edi+0x5]
  413768:	jmp    0xe54f1df9
  41376d:	add    esp,DWORD PTR [ebx+0x7b]
  413770:	loopne 0x413777
  413772:	call   0x9be4:0x8d8ca72f
  413779:	mov    esp,DWORD PTR [ebx+edx*8+0x71]
  41377d:	dec    ecx
  41377e:	cmp    al,0x4e
  413780:	je     0x4137ba
  413782:	dec    ebp
  413783:	jl     0x41372a
  413785:	test   BYTE PTR [ecx+ecx*1],ah
  413788:	mov    ecx,0x2c1d2e8c
  41378d:	aaa    
  41378e:	xor    eax,0xe1486130
  413793:	and    eax,0x3ed9d2ea
  413798:	push   eax
  413799:	js     0x4137b3
  41379b:	xor    BYTE PTR ds:0x5fd84,bh
  4137a1:	sahf   
  4137a2:	fild   WORD PTR [ecx-0x19]
  4137a5:	jne    0x4137a7
	...
  4137b3:	add    BYTE PTR [eax],al
  4137b5:	dec    esp
  4137b6:	das    
  4137b7:	inc    dh
  4137b9:	sbb    dl,cl
  4137bb:	shl    ecx,0x60
  4137be:	test   al,cl
  4137c0:	push   ss
  4137c1:	popa   
  4137c2:	jg     0x4137df
  4137c4:	in     eax,0x60
  4137c6:	add    eax,0xba69908d
  4137cb:	sbb    BYTE PTR [edx-0x1e],dh
  4137ce:	inc    DWORD PTR [ebx]
  4137d0:	jmp    0xd1c6b635
  4137d5:	les    ebp,FWORD PTR [edi]
  4137d7:	(bad)  
  4137d8:	sub    esi,ebp
  4137da:	popa   
  4137db:	sbb    esp,ebp
  4137dd:	pusha  
  4137de:	add    eax,0x9576f89
  4137e3:	add    cl,ch
  4137e5:	(bad)  [ecx+0x560ed17]
  4137eb:	mov    bl,cl
  4137ed:	bound  edx,QWORD PTR [ebx-0x3]
  4137f0:	stos   DWORD PTR es:[edi],eax
  4137f1:	(bad)  
  4137f3:	add    BYTE PTR [edi+0x6b],bl
  4137f6:	or     DWORD PTR [eax],eax
  4137f8:	jmp    0x67cc44b0
  4137fd:	dec    edi
  4137fe:	or     DWORD PTR [eax],eax
  413800:	jmp    0xe558c1e4
  413805:	pusha  
  413806:	add    eax,0xac57040
  41380b:	add    al,0xe9
  41380d:	pusha  
  41380e:	jl     0x413795
  413810:	(bad)  [edi+ebp*1-0x2]
  413814:	(bad)  
  413815:	lds    edx,FWORD PTR [esi]
  413817:	add    al,0xe9
	...
  413825:	add    BYTE PTR [eax],al
  413827:	add    BYTE PTR [eax+0x7b],ah
  41382a:	por    mm2,QWORD PTR [edx+0x5761c130]
  413831:	add    al,0x8e
  413833:	in     eax,dx
  413834:	and    al,0x2f
  413836:	inc    BYTE PTR [eax]
  413838:	fist   WORD PTR [ecx]
  41383a:	mov    eax,DWORD PTR [esi-0x1d0c6]
  413840:	sub    DWORD PTR [edi+0x2fa0416],0x40
  413847:	mov    DWORD PTR [ebp+ecx*1-0x7df5fffc],edx
  41384e:	test   BYTE PTR [eax],dl
  413850:	inc    BYTE PTR [edx]
  413852:	add    BYTE PTR [ebx+0x4117c],cl
  413858:	retf   0xe7c
  41385b:	add    bh,BYTE PTR [eax-0x9]
  41385e:	ror    BYTE PTR [eax+0x1c8e09aa],0xbe
  413865:	add    al,BYTE PTR [eax]
  413867:	jne    0x4138cc
  413869:	jp     0x4137ef
  41386b:	adc    BYTE PTR [esi+0x3c890002],bh
  413871:	or     al,BYTE PTR [eax+eax*1]
  413874:	mov    edx,0x86ae8742
  413879:	cs (bad) 
  41387b:	call   DWORD PTR [ebx]
  41387d:	mov    al,0xe
  41387f:	add    al,0x7a
  413881:	add    cl,BYTE PTR [ebx-0x1d14d7a]
  413887:	(bad)  
  413888:	mov    edx,0x8dff22
	...
  413899:	add    BYTE PTR [eax],al
  41389b:	jbe    0x4138cb
  41389d:	(bad)  
  41389e:	dec    DWORD PTR [edi+0x10]
  4138a1:	mov    eax,DWORD PTR [esi-0x1d196]
  4138a7:	shl    DWORD PTR [eax+0x24a0416],cl
  4138ad:	inc    eax
  4138ae:	mov    DWORD PTR [esi+edx*1-0x7ec5fffc],esp
  4138b5:	test   BYTE PTR [eax],dl
  4138b7:	dec    esi
  4138b8:	add    al,BYTE PTR [eax]
  4138ba:	mov    edi,DWORD PTR [edx+ecx*1+0x1c630004]
  4138c1:	push   edx
  4138c2:	pop    ds
  4138c3:	(bad)  
  4138c4:	into   
  4138c5:	push   ss
  4138c6:	add    al,0x63
  4138c8:	sbb    al,0xaf
  4138ca:	sbb    al,ch
  4138cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138cd:	adc    al,BYTE PTR [ebx+eiz*2]
  4138d0:	sbb    al,0x8b
  4138d2:	test   DWORD PTR [ebx+0x28],ebp
  4138d5:	add    al,BYTE PTR [eax]
  4138d7:	mov    ds:0x5f1b64b5,eax
  4138dc:	sbb    al,0x2
  4138de:	mov    ebp,esp
  4138e0:	sub    edi,esi
  4138e2:	jmp    esp
  4138e4:	mov    ds:0x1c67177c,al
  4138e9:	add    dl,al
  4138eb:	sbb    DWORD PTR ds:0x1c671b84,0x2
  4138f2:	jne    0x41395e
  4138f4:	mov    ds:0x1c670f7c,eax
  4138f9:	add    cl,BYTE PTR [ecx+0x3dd]
	...
  41390b:	add    BYTE PTR [eax],al
  41390d:	add    BYTE PTR [ebx-0x24],ah
  413910:	mov    ch,BYTE PTR [ebp+0x22847]
  413916:	jmp    0x871c:0x6304139d
  41391d:	mov    ch,0x6b
  41391f:	and    BYTE PTR [edx],al
  413921:	add    BYTE PTR [ebx-0x5ea329fb],dh
  413927:	xor    eax,DWORD PTR [edx]
  413929:	mov    ebx,DWORD PTR [edi]
  41392b:	dec    eax
  41392c:	(bad)  
  41392d:	push   ebp
  41392e:	adc    al,0xa3
  413930:	mov    bh,0x23
  413932:	push   ebx
  413933:	mov    ds:0x1ee33c32,eax
  413938:	add    al,BYTE PTR [eax]
  41393a:	ror    BYTE PTR [edx+0x7f],1
  41393d:	(bad)  
  41393e:	addr16 das 
  413940:	or     edi,DWORD PTR [ebx]
  413942:	fld    QWORD PTR [edx-0x2]
  413945:	(bad)  
  413946:	cmp    al,0x6
  413948:	(bad)  
  41394a:	sub    eax,0xe144014e
  41394f:	and    eax,0x45e1d4ee
  413954:	jecxz  0x41392b
  413956:	and    bh,dh
  413958:	call   0xe5231855
  41395d:	add    esp,DWORD PTR [ebx-0x4f]
  413960:	repz test BYTE PTR [ebp+eax*1+0x27003e9],0x6a
  413969:	and    eax,0xf6f82062
  41396e:	in     al,dx
  41396f:	add    ecx,ebp
  413971:	add    eax,DWORD PTR [eax]
	...
  41397f:	add    BYTE PTR [eax],al
  413981:	jno    0x413989
  413983:	sahf   
  413984:	neg    ah
  413986:	test   eax,0x65103e8
  41398b:	scas   al,BYTE PTR es:[edi]
  41398c:	inc    edx
  41398d:	(bad)  
  41398e:	std    
  41398f:	cdq    
  413990:	add    BYTE PTR [ecx+ecx*1],0x99
  413994:	sub    eax,DWORD PTR [esi+0xd34e52f]
  41399a:	sub    BYTE PTR [esi-0xbe26b78],0x39
  4139a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139a2:	sub    al,0x5b
  4139a4:	mov    edi,0xd521ff74
  4139a9:	ss inc edi
  4139ab:	lock add esi,DWORD PTR [ebx*1+0x2c8539e4]
  4139b3:	or     eax,0x4701bc81
  4139b8:	inc    edx
  4139b9:	pop    esp
  4139ba:	add    eax,0xe108893a
  4139bf:	loopne 0x41398f
  4139c1:	push   cs
  4139c2:	adc    BYTE PTR [edi-0x1322e180],0x3
  4139c9:	arpl   WORD PTR ds:0xfe70516,ax
  4139cf:	add    al,ch
  4139d1:	pusha  
  4139d2:	add    eax,0x2be07281
  4139d7:	(bad)  
  4139d8:	jmp    0xddc3fed0
  4139dd:	or     al,0x14
  4139df:	add    al,0xda
  4139e1:	sub    ah,BYTE PTR [esi+esi*1]
  4139e4:	push   edx
	...
  4139f1:	add    BYTE PTR [eax],al
  4139f3:	add    BYTE PTR [edi+0x2b],dl
  4139f6:	mov    dh,BYTE PTR [edi]
  4139f8:	dec    eax
  4139f9:	fdiv   st(2),st
  4139fb:	ds push edi
  4139fd:	jg     0x4139cc
  4139ff:	inc    ecx
  413a00:	dec    edx
  413a01:	cs (bad) 
  413a03:	cs jmp 0xf91:0xea0123c7
  413a0b:	in     eax,0x60
  413a0d:	add    eax,0x504228a
  413a12:	add    ah,BYTE PTR [eax]
  413a14:	bound  eax,QWORD PTR [esi+0x5e]
  413a17:	jno    0x413a7b
  413a19:	sub    al,0x85
  413a1b:	fxch   st(4)
  413a1d:	sub    edi,esi
  413a1f:	pusha  
  413a20:	out    dx,al
  413a21:	out    0x3,eax
  413a23:	jmp    0x429e0588
  413a28:	sbb    eax,0x206a0004
  413a2d:	sub    eax,DWORD PTR [eax]
  413a2f:	xchg   edi,eax
  413a30:	push   ebx
  413a31:	add    DWORD PTR [eax],eax
  413a33:	jmp    0x3c49d51b
  413a38:	data16 add BYTE PTR [ebp+0x564d9],0x60
  413a40:	fst    DWORD PTR [ebx]
  413a42:	add    al,0xe9
  413a44:	pusha  
  413a45:	lds    ecx,FWORD PTR [eax+0x15357]
  413a4b:	jmp    0xed50bc3f
  413a50:	pusha  
  413a51:	add    eax,0x16f678b
	...
  413a66:	add    BYTE PTR [edx-0x57],cl
  413a69:	push   es
  413a6a:	add    dl,BYTE PTR [ebx]
  413a6c:	clc    
  413a6d:	mov    edi,0xbe024288
  413a72:	sbb    al,0x46
  413a74:	pop    es
  413a75:	add    BYTE PTR [ebp+0x63],dh
  413a78:	stos   BYTE PTR es:[edi],al
  413a79:	test   BYTE PTR [eax],dl
  413a7b:	inc    esi
  413a7c:	pop    es
  413a7d:	add    BYTE PTR [ecx+0x3f9b4],cl
  413a83:	or     al,BYTE PTR [edi-0x79]
  413a86:	scas   al,BYTE PTR es:[edi]
  413a87:	inc    BYTE PTR [edx]
  413a89:	add    BYTE PTR [eax],al
  413a8b:	xchg   ebx,eax
  413a8c:	jg     0x413a9c
  413a8e:	add    al,0xfa
  413a90:	push   es
  413a91:	mov    eax,DWORD PTR [esi+0x312]
  413a97:	cmp    ah,BYTE PTR [ecx]
  413a99:	mov    ebx,edx
  413a9b:	cmp    ecx,DWORD PTR [ebx]
  413a9d:	pop    es
  413a9e:	cmp    DWORD PTR [eax],0x3
  413aa1:	push   edx
  413aa2:	mov    edi,DWORD PTR [ecx+ecx*1-0x38]
  413aa6:	cli    
  413aa7:	pop    ebp
  413aa8:	test   BYTE PTR [ecx+0x2aa86],0x0
  413aaf:	inc    edx
  413ab0:	stc    
  413ab1:	mov    bh,0x1
  413ab3:	retf   0x6
  413ab6:	add    DWORD PTR [esi+edx*1+0x4],eax
  413aba:	add    BYTE PTR [edx-0x49db6357],bh
  413ac0:	push   es
  413ac1:	add    BYTE PTR [ecx-0x1794f],al
  413ac7:	mov    dh,BYTE PTR [ebx+0x16]
  413aca:	add    DWORD PTR [eax],0x0
	...
  413ad9:	add    BYTE PTR [esi],bl
  413adb:	sbb    eax,0x6a010216
  413ae0:	and    bl,BYTE PTR [eax]
  413ae2:	pop    ebx
  413ae3:	stos   BYTE PTR es:[edi],al
  413ae4:	int3   
  413ae5:	call   0x3f12df
  413aea:	sub    eax,0x635b5b57
  413aef:	pop    esi
  413af0:	cli    
  413af1:	jmp    ebx
  413af3:	xchg   esi,eax
  413af4:	add    al,BYTE PTR ds:0x3b41c63
  413afa:	jp     0x413adc
  413afc:	out    0x17,eax
  413afe:	loop   0x413ab6
  413b00:	add    bh,BYTE PTR [ebp+0x63]
  413b03:	sbb    al,0xb4
  413b05:	add    ecx,DWORD PTR [edx-0x27e819a8]
  413b0b:	push   edi
  413b0c:	out    0x17,al
  413b0e:	xchg   edx,eax
  413b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b10:	inc    eax
  413b11:	out    0x8f,eax
  413b13:	(bad)  
  413b14:	xor    esi,edi
  413b16:	mov    ah,0x62
  413b18:	iret   
  413b19:	pop    edx
  413b1a:	and    DWORD PTR [edx+eax*1],esi
  413b1d:	(bad)  
  413b1e:	fld    QWORD PTR [ebx]
  413b20:	or     BYTE PTR [eax],al
  413b22:	arpl   WORD PTR ds:0x9d630002,bx
  413b28:	sub    eax,0x21c637f
  413b2d:	jae    0x413ac9
  413b2f:	lahf   
  413b30:	scas   al,BYTE PTR es:[edi]
  413b31:	and    edi,DWORD PTR [ebx+0x20]
  413b34:	mov    ch,0x41
  413b36:	cwde   
  413b37:	mov    ds:0x1c6303e6,al
  413b3c:	mov    dh,0x39
	...
  413b4a:	add    BYTE PTR [eax],al
  413b4c:	add    BYTE PTR [ebx-0x4301d3db],bh
  413b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b53:	inc    eax
  413b54:	out    0x60,eax
  413b56:	es xor dh,bh
  413b59:	fcomp  DWORD PTR [ecx+0x1b]
  413b5c:	int3   
  413b5d:	stos   BYTE PTR es:[edi],al
  413b5e:	push   edx
  413b5f:	xor    BYTE PTR [ecx-0x74f3ffd9],cl
  413b65:	in     eax,0x4b
  413b67:	push   es
  413b68:	add    BYTE PTR [ebx-0x4a],ah
  413b6b:	push   esp
  413b6c:	and    esp,DWORD PTR [edx+0x1e]
  413b6f:	push   esp
  413b70:	add    DWORD PTR [ecx+0x74007bfa],esp
  413b76:	add    al,0x6f
  413b78:	adc    al,0x67
  413b7a:	add    eax,0xe0c67ae9
  413b7f:	in     al,dx
  413b80:	add    esp,DWORD PTR [ebx-0x39]
  413b83:	sub    ecx,ebp
  413b85:	and    bh,dh
  413b87:	call   0xe76a5910
  413b8c:	jno    0x413bf6
  413b8e:	add    ecx,ebp
  413b90:	add    ebp,esi
  413b92:	cwde   
  413b93:	fbstp  TBYTE PTR [esi+0x146e7c5b]
  413b99:	addr16 add eax,0xdde7ae9
  413b9f:	in     eax,dx
  413ba0:	add    esp,DWORD PTR [ebx-0x3b]
  413ba3:	pop    edi
  413ba4:	bound  edi,QWORD PTR [eax+0x1]
  413ba7:	jmp    0xd8c115af
  413bac:	pop    es
  413bad:	arpl   WORD PTR ds:0x8a62,ax
	...
  413bbf:	add    BYTE PTR [ecx+eax*1-0x17],dl
  413bc3:	add    ebp,ecx
  413bc5:	adc    eax,0x43ee55eb
  413bca:	jo     0x413be0
  413bcc:	bound  esp,QWORD PTR [edi-0xc]
  413bcf:	pop    es
  413bd0:	arpl   WORD PTR ds:0x7fe80a94,ax
  413bd6:	fadd   DWORD PTR [edi]
  413bd8:	arpl   WORD PTR ds:0x16c8a70,ax
  413bde:	jmp    0x3ebf5ee6
  413be3:	adc    BYTE PTR [edi+0x5],bl
  413be6:	jmp    0xe5572265
  413beb:	add    esp,DWORD PTR [ebx+0x7c]
  413bee:	outs   dx,BYTE PTR ds:[esi]
  413bef:	or     esp,DWORD PTR [edi+0x5]
  413bf2:	jmp    0x672db04a
  413bf7:	out    0x60,eax
  413bf9:	add    eax,0x7c12b7e9
  413bfe:	jmp    FWORD PTR [ecx+0x6a072021]
  413c04:	and    BYTE PTR [ebx],al
  413c06:	push   eax
  413c07:	xchg   ecx,eax
  413c08:	retf   0xfe2d
  413c0b:	sahf   
  413c0c:	out    0x79,eax
  413c0e:	paddsw mm4,QWORD PTR [eax+0x5]
  413c12:	mov    al,dh
  413c14:	enter  0x5,0xe9
  413c18:	pusha  
  413c19:	push   es
  413c1a:	xchg   cl,bl
  413c1c:	pop    esp
  413c1d:	add    eax,0xe3d26000
  413c22:	add    ebp,ecx
	...
  413c30:	add    BYTE PTR [eax],al
  413c32:	add    BYTE PTR [eax-0x7a],ah
  413c35:	cli    
  413c36:	imul   esp,DWORD PTR [eax+0x5],0x8458da00
  413c3d:	imul   ecx,DWORD PTR ds:0xb58b036f,0xfffffffc
  413c44:	rsqrtps xmm6,XMMWORD PTR [edx-0x5e]
  413c48:	and    BYTE PTR [ebx+0x40],ah
  413c4b:	push   ebx
  413c4c:	daa    
  413c4d:	pop    esi
  413c4e:	xchg   edi,eax
  413c4f:	sub    eax,0x60e1c1cb
  413c54:	xchg   dl,bh
  413c56:	jmp    0x9b4141c0
  413c5b:	pop    esp
  413c5c:	fiadd  WORD PTR [ebx-0x33]
  413c5f:	push   0x5e9fa86
  413c64:	sub    dh,bh
  413c66:	jnp    0x413c51
  413c68:	fadd   QWORD PTR [ebx-0x3b]
  413c6b:	pop    eax
  413c6c:	jl     0x413cc1
  413c6e:	int    0x68
  413c70:	ror    DWORD PTR [edx-0x712a7e1],cl
  413c76:	out    0x7c,al
  413c78:	(bad)  
  413c79:	pop    ebp
  413c7a:	cmp    al,0x98
  413c7c:	inc    ebp
  413c7d:	pop    es
  413c7e:	jmp    0xe55ca3ea
  413c83:	pusha  
  413c84:	add    eax,0xaa830075
  413c89:	test   BYTE PTR [eax],dl
  413c8b:	jle    0x413c90
  413c8d:	add    BYTE PTR [ecx+0x3f90c],cl
  413c93:	mov    al,BYTE PTR [ebx-0x79]
  413c96:	scas   al,BYTE PTR es:[edi]
	...
  413ca3:	add    BYTE PTR [eax],al
  413ca5:	add    BYTE PTR [esi-0x3],ah
  413ca8:	(bad)  
  413ca9:	push   ebx
  413cab:	jle    0x413cbb
  413cad:	add    al,0x4a
  413caf:	add    ecx,DWORD PTR [ebx-0xad7a]
  413cb5:	(bad)  
  413cb6:	jmp    0xffff:0x26bdff21
  413cbd:	(bad)  
  413cbe:	aas    
  413cbf:	cli    
  413cc0:	mov    al,BYTE PTR [esi-0xe6]
  413cc6:	mov    bl,0x7f
  413cc8:	push   ss
  413cc9:	add    al,0x3a
  413ccb:	add    eax,DWORD PTR [eax-0x77]
  413cce:	in     al,0x15
  413cd0:	add    al,0x0
  413cd2:	or     ch,BYTE PTR [edx+0x2fe1084]
  413cd8:	add    BYTE PTR [ebx+0x3f97c],cl
  413cde:	or     dl,bl
  413ce0:	push   ds
  413ce1:	mov    ecx,esi
  413ce3:	push   ds
  413ce4:	push   ss
  413ce5:	push   edx
  413ce6:	jno    0x413ccf
  413ce8:	out    0xd4,al
  413cea:	inc    edx
  413ceb:	(bad)  
  413cec:	std    
  413ced:	pop    edi
  413cee:	adc    al,0x56
  413cf0:	pop    ecx
  413cf1:	ret    0x2c2
  413cf4:	mov    eax,DWORD PTR [esi+ebx*4-0x2]
  413cf8:	mov    WORD PTR [eax-0x7546],ss
  413cfe:	icebp  
  413cff:	xchg   ecx,eax
  413d00:	add    al,BYTE PTR [edx+ecx*8]
  413d03:	add    dh,BYTE PTR [esi+0x19]
  413d06:	xor    DWORD PTR [ecx+0x40a],ebp
	...
  413d18:	add    BYTE PTR [edx+0x63c13b02],bh
  413d1e:	(bad)  
  413d1f:	or     BYTE PTR [ebx],ch
  413d21:	mov    ds:0x3800065a,al
  413d26:	pop    ebp
  413d27:	pop    es
  413d28:	add    bl,bh
  413d2a:	sbb    al,0x2
  413d2c:	ret    0x1c67
  413d2f:	icebp  
  413d30:	mov    edi,0x830220a1
  413d35:	jg     0x413d63
  413d37:	rcl    DWORD PTR [eax+ebx*8-0x8],1
  413d3b:	out    0x1f,eax
  413d3d:	mov    ch,0x4b
  413d3f:	dec    ecx
  413d40:	mov    dl,BYTE PTR [edx-0x11]
  413d43:	jl     0x413da0
  413d45:	xchg   DWORD PTR [ebx+edi*2+0x5b],ecx
  413d49:	jg     0x413d6f
  413d4b:	jmp    0x413cfa
  413d4d:	imul   ebx,DWORD PTR [eax],0x2
  413d50:	add    BYTE PTR [ebx+ebx*4+0x61],ah
  413d54:	jmp    FWORD PTR [esp+ebx*1]
  413d57:	sbb    DWORD PTR [edx],ecx
  413d59:	(bad)  
  413d5a:	jg     0x413d42
  413d5c:	call   FWORD PTR [esp+ebx*1]
  413d5f:	add    cl,BYTE PTR [ebp-0x74fbff81]
  413d65:	in     eax,0x17
  413d67:	push   es
  413d68:	add    BYTE PTR [ebx-0x67],ah
  413d6b:	jp     0x413d6c
  413d6d:	test   BYTE PTR ds:0x6e2b3b02,bl
  413d73:	adc    eax,0x62fdd8b
  413d78:	add    BYTE PTR [ebx+0x23],ah
  413d7b:	inc    ebx
  413d7c:	jne    0x413d7e
	...
  413d8a:	add    BYTE PTR [eax],al
  413d8c:	addr16 inc ebx
  413d8e:	inc    ebx
  413d8f:	jmp    0x9463:0x4434368
  413d96:	add    eax,DWORD PTR [eax]
  413d98:	mov    eax,0xe8bff119
  413d9d:	popf   
  413d9e:	cli    
  413d9f:	add    esp,DWORD PTR [ebx+0x1c]
  413da2:	std    
  413da3:	mov    ch,0x52
  413da5:	add    eax,0x41b75f6
  413daa:	jb     0x413d84
  413dac:	test   BYTE PTR [eax],0x62
  413daf:	add    cl,ch
  413db1:	jns    0x413dc1
  413db3:	jnp    0x413e0d
  413db5:	jle    0x413e28
  413db7:	xchg   BYTE PTR [ecx+eax*1-0x17],bl
  413dbb:	add    ebp,DWORD PTR [edi+ebp*2-0x28]
  413dbf:	cld    
  413dc0:	scas   al,BYTE PTR es:[edi]
  413dc1:	(bad)  
  413dc2:	out    0x78,eax
  413dc4:	sbb    BYTE PTR [edi+0xce78ec],cl
  413dca:	in     eax,0x3
  413dcc:	arpl   WORD PTR [esi+0x71b82fc],cx
  413dd2:	jmp    0x7747a0da
  413dd7:	or     BYTE PTR [edi+0x5],bl
  413dda:	jmp    0xed4f2ae1
  413ddf:	add    esp,DWORD PTR [ebx-0x70]
  413de2:	data16 or BYTE PTR [edi+0x5],ah
  413de6:	jmp    0x6f325a63
  413deb:	add    BYTE PTR [edi+0x5],ah
  413dee:	jmp    0x413e75
	...
  413dff:	sbb    eax,DWORD PTR [esi]
  413e01:	rol    DWORD PTR [edx],0x63
  413e04:	fwait
  413e05:	in     eax,dx
  413e06:	mov    ebx,0x7ec8bdb
  413e0b:	arpl   WORD PTR ds:0x95c5df0,ax
  413e11:	jmp    0x92c89a19
  413e16:	sub    al,0xe5
  413e18:	and    al,0x71
  413e1a:	enter  0xd580,0x52
  413e1e:	add    al,0x3c
  413e20:	push   es
  413e21:	jmp    0xeedce10e
  413e26:	jp     0x413e58
  413e28:	jmp    0x88ac56e5
  413e2d:	push   eax
  413e2f:	popa   
  413e30:	adc    al,0x86
  413e32:	and    esp,DWORD PTR [eax+0x5]
  413e35:	add    dh,dh
  413e37:	cs leave 
  413e39:	(bad)  
  413e3a:	in     eax,dx
  413e3b:	push   ss
  413e3c:	rol    DWORD PTR [eax],1
  413e3e:	bound  ebx,QWORD PTR [edx+ecx*4-0x73839dfd]
  413e45:	cmp    al,dl
  413e47:	xchg   DWORD PTR [eax+0x560e8b2],ecx
  413e4d:	mov    esp,DWORD PTR [edi-0x80]
  413e50:	or     BYTE PTR [eax],al
  413e52:	jmp    0xae504644
  413e57:	pushf  
  413e58:	call   0x249a2778
  413e5d:	(bad)  
  413e5e:	rcr    BYTE PTR [ebp+0x623996],cl
	...
  413e70:	add    BYTE PTR [eax],al
  413e72:	jg     0x413e53
  413e74:	cli    
  413e75:	std    
  413e76:	dec    esp
  413e77:	xchg   ecx,eax
  413e78:	xchg   cl,ch
  413e7a:	fadd   DWORD PTR [eax+eax*1]
  413e7d:	mov    dl,0xde
  413e7f:	pop    es
  413e80:	add    al,0xe9
  413e82:	pusha  
  413e83:	fwait
  413e84:	pop    ss
  413e85:	jb     0x413e65
  413e87:	(bad)  
  413e89:	jmp    0xe0391eee
  413e8e:	pop    esp
  413e8f:	lock test DWORD PTR [edx+0xc],0x9f68f7ef
  413e97:	and    al,0x66
  413e99:	call   0xfa426efe
  413e9e:	inc    edi
  413e9f:	pop    DWORD PTR ds:0x8c5bfc62
  413ea5:	in     eax,dx
  413ea6:	out    0xde,eax
  413ea8:	les    ebx,FWORD PTR [edx-0x32ac2268]
  413eae:	mov    ah,0x99
  413eb0:	add    esp,DWORD PTR [eax-0x4c]
  413eb3:	out    0x2b,eax
  413eb5:	add    BYTE PTR [ecx-0x277bf214],ah
  413ebb:	push   es
  413ebc:	add    BYTE PTR [eax],al
  413ebe:	aas    
  413ebf:	(bad)  
  413ec0:	(bad)  
  413ec1:	(bad)  
  413ec2:	mov    edx,0x51cd8b07
  413ec7:	loope  0x413e50
  413ec9:	dec    esp
  413eca:	data16 cmc 
  413ecc:	cmp    cl,BYTE PTR [esi+eiz*2+0x3d]
  413ed0:	or     eax,0xa7087
	...
  413ee5:	adc    DWORD PTR [ebp+0x22],ebx
  413ee8:	adc    al,dh
  413eea:	hlt    
  413eeb:	add    BYTE PTR [edx],bh
  413eed:	push   esi
  413eee:	push   ds
  413eef:	dec    BYTE PTR [edx-0x44eddab2]
  413ef5:	js     0x413efe
  413ef7:	add    BYTE PTR [eax],al
  413ef9:	jbe    0x413f18
  413efb:	cmp    DWORD PTR [esi-0x1dcda],ecx
  413f01:	sub    eax,0x3a00c886
  413f06:	pop    es
  413f07:	mov    edx,DWORD PTR [esi+eiz*1+0x17]
  413f0b:	cmp    edx,ebx
  413f0d:	cmp    DWORD PTR [edx],ebp
  413f0f:	mov    ecx,DWORD PTR [ebp+0x38]
  413f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f13:	out    0x2b,al
  413f15:	push   cs
  413f16:	inc    ebx
  413f17:	es mov al,dh
  413f1a:	sbb    eax,0x560b39fe
  413f1f:	add    al,0x43
  413f21:	mov    ebx,0x4872d833
  413f26:	mov    ds:0xa416244a,al
  413f2b:	push   0x24
  413f2d:	bound  esi,QWORD PTR [edx]
  413f2f:	fmul   DWORD PTR [edi]
  413f31:	xchg   al,ch
  413f33:	(bad)  
  413f34:	(bad)  
  413f35:	cli    
  413f36:	xor    ebx,DWORD PTR [edx+0x24]
  413f39:	ficom  DWORD PTR [ebp+eax*2+0x53]
  413f3d:	arpl   WORD PTR [ebp+0x7d],bx
  413f40:	int    0xbb
  413f42:	mov    esi,0x97c4fe2d
  413f47:	mov    bh,0x23
	...
  413f55:	add    BYTE PTR [eax],al
  413f57:	add    BYTE PTR [ebx-0x69],dl
  413f5a:	iret   
  413f5b:	and    ebx,DWORD PTR [ebx+0x7d]
  413f5e:	aam    0x8a
  413f60:	popf   
  413f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f62:	sbb    esp,edi
  413f64:	les    esp,FWORD PTR [esi]
  413f66:	sub    esi,edi
  413f68:	dec    eax
  413f69:	xor    al,0x7d
  413f6b:	dec    ebx
  413f6c:	aas    
  413f6d:	and    BYTE PTR ds:0x1803cbed,al
  413f73:	ret    
  413f74:	adc    eax,0xf8a1763
  413f79:	or     ah,bl
  413f7b:	sar    BYTE PTR [ecx+0x2e],0x7d
  413f7f:	shl    DWORD PTR [edx-0x5efcf6bc],0x2f
  413f86:	mov    esi,0x4a277323
  413f8b:	jne    0x413fea
  413f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f8e:	mov    dh,0x23
  413f90:	imul   eax,DWORD PTR [edi+0x4fd53abc],0xfffffffe
  413f97:	(bad)  
  413f98:	cmp    al,0x19
  413f9a:	rcl    BYTE PTR [edx-0x6e],0xa7
  413f9e:	cmp    bh,ah
  413fa0:	rcl    BYTE PTR [esi+0x5fd8fe29],0xde
  413fa7:	psubsb mm6,QWORD PTR [ebx+0x143f437d]
  413fae:	aam    0x4f
  413fb0:	fadd   DWORD PTR [ecx]
  413fb2:	sbb    ecx,DWORD PTR [edi+0x9]
  413fb5:	retf   
  413fb6:	sub    DWORD PTR [edx-0x75c708d5],ecx
	...
  413fc8:	add    BYTE PTR [eax],al
  413fca:	add    BYTE PTR [edi-0x474823f0],al
  413fd0:	test   DWORD PTR [ecx+ebp*1-0x14],ebx
  413fd4:	add    al,0x10
  413fd6:	jle    0x413f82
  413fd8:	inc    ebx
  413fd9:	(bad)  
  413fdb:	pusha  
  413fdc:	dec    edi
  413fdd:	jmp    0xc512c920
  413fe2:	adc    edx,DWORD PTR [ecx+0x11]
  413fe5:	jb     0x413fb6
  413fe7:	cmp    cl,0x6f
  413fea:	iret   
  413feb:	cmp    ch,0x5f
  413fee:	mov    DWORD PTR [eax-0x5b7da40b],0x5803e7a9
  413ff8:	mov    esp,esp
  413ffa:	call   DWORD PTR [ecx+eiz*1-0x7527f3a2]
  414001:	fdiv   st(7),st
  414003:	test   BYTE PTR [ecx],ah
  414005:	add    DWORD PTR [esi+esi*8],ebp
  414008:	or     BYTE PTR [edx],dl
  41400a:	sub    al,0x89
  41400c:	adc    BYTE PTR [edx],al
  41400e:	sub    al,0xe3
  414010:	dec    ecx
  414011:	call   0x9246a3b1
  414016:	push   es
  414017:	nop
  414018:	and    BYTE PTR [ecx-0x6],dh
  41401b:	jmp    0xe6be9001
  414020:	in     eax,0xe4
  414022:	add    esp,DWORD PTR [ebx+0x4]
  414025:	scas   al,BYTE PTR es:[edi]
  414026:	test   eax,ecx
  414028:	jmp    0xf3f04309
  41402d:	imul   ebp,DWORD PTR [ecx],0x0
	...
  41403c:	add    BYTE PTR [eax],al
  41403e:	pop    ebp
  41403f:	mov    ch,BYTE PTR [esi]
  414041:	sub    ah,BYTE PTR ds:0xebfc5121
  414047:	rol    DWORD PTR [esp+ecx*1],1
  41404a:	jmp    0x4c9:0xd8140cc1
  414051:	loopne 0x41402c
  414053:	mov    ecx,0xd1e8140c
  414058:	add    al,0xc
  41405a:	xchg   esp,eax
  41405b:	mov    edi,0xd06993ff
  414060:	add    esp,DWORD PTR [eax-0x19]
  414063:	mov    ebx,0x43772d82
  414068:	psubsw mm3,mm7
  41406b:	sub    al,0x37
  41406d:	push   0xfffffffb
  41406f:	in     al,0x43
  414071:	jmp    0x7d31cc28
  414076:	mov    ecx,0xdf9fbfd3
  41407b:	inc    esp
  41407c:	aaa    
  41407d:	sub    ebx,DWORD PTR [edi+0x5]
  414080:	mov    esp,DWORD PTR [ebp-0x567b1f7c]
  414086:	int    0xe
  414088:	xor    DWORD PTR [ecx-0x527d3db5],0x78
  41408f:	inc    esi
  414090:	pop    ss
  414091:	jmp    0x2d650c9d
  414096:	cld    
  414097:	dec    esp
  414098:	jae    0x414069
  41409a:	div    DWORD PTR [ebx+0x35ec2523]
  4140a0:	jae    0x414069
	...
  4140ae:	add    BYTE PTR [eax],al
  4140b0:	add    cl,ch
  4140b2:	mov    DWORD PTR [ebx],edx
  4140b4:	in     eax,dx
  4140b5:	pusha  
  4140b6:	add    eax,0xffe27048
  4140bb:	add    ebp,ecx
  4140bd:	pusha  
  4140be:	mov    cs,WORD PTR [ebp-0x1dfbb07]
  4140c4:	inc    ecx
  4140c5:	pop    edx
  4140c6:	sbb    ebp,ebp
  4140c8:	push   edx
  4140c9:	das    
  4140ca:	dec    ebp
  4140cb:	push   esi
  4140cc:	out    0xb2,al
  4140ce:	pop    ebp
  4140cf:	(bad)  
  4140d0:	fsub   DWORD PTR [ecx]
  4140d2:	and    bh,cl
  4140d4:	sub    DWORD PTR [edi],edx
  4140d6:	inc    edi
  4140d7:	push   cs
  4140d8:	xchg   edi,eax
  4140d9:	mov    DWORD PTR ds:0x3660a810,eax
  4140df:	mov    edi,0xb60fa21a
  4140e4:	add    bl,ah
  4140e6:	or     DWORD PTR [eax],edx
  4140e8:	inc    ecx
  4140e9:	or     dh,BYTE PTR [ebx+0x1d3d33be]
  4140ef:	mov    ah,0xb9
  4140f1:	stc    
  4140f2:	repz inc eax
  4140f4:	add    BYTE PTR [ebx-0x413e7e3c],bl
  4140fa:	sbb    ch,al
  4140fc:	xor    DWORD PTR [ebx+0x4],0x59ba0001
  414103:	mov    DWORD PTR [ebp-0x447ce276],0x530003b3
  41410d:	inc    ebx
  41410e:	test   BYTE PTR [esi+ecx*2+0x18c082be],0x0
	...
  414122:	add    BYTE PTR [eax],al
  414124:	jmp    0x8:0x8abf0005
  41412b:	add    BYTE PTR [edi],al
  41412d:	push   ecx
  41412e:	call   DWORD PTR [ebx+eax*1-0x6]
  414132:	xor    al,al
  414134:	pop    DWORD PTR [ebx]
  414136:	add    BYTE PTR [eax],al
  414138:	mov    bl,BYTE PTR [edx+0x63ec727]
  41413e:	add    BYTE PTR [eax],al
  414140:	jp     0x414145
  414142:	add    BYTE PTR [ebx+0x3d060a],al
  414148:	add    eax,DWORD PTR ds:[eax]
  41414b:	jb     0x414133
  41414d:	mov    al,al
  41414f:	add    BYTE PTR [esi],bh
  414151:	add    eax,DWORD PTR [eax]
  414153:	or     DWORD PTR [ebx],0x6
  414156:	sub    edi,ebx
  414158:	das    
  414159:	ror    DWORD PTR [ecx-0x1e0f172],1
  41415f:	inc    ecx
  414161:	jae    0x84e1c72f
  414167:	and    al,0xfe
  414169:	add    al,BYTE PTR [eax]
  41416b:	mov    DWORD PTR [ebx-0x5a],esp
  41416e:	sti    
  41416f:	add    esp,DWORD PTR [ebx+0x2c]
  414172:	jnp    0x414111
  414174:	xor    BYTE PTR [bp+si],al
  414177:	add    dl,ch
  414179:	sahf   
  41417a:	test   DWORD PTR [ebx],0x397b2c63
  414180:	fdivr  DWORD PTR [esi+0x2c63040f]
  414186:	jns    0x41411d
	...
  414194:	add    BYTE PTR [eax],al
  414196:	add    BYTE PTR [ebx+0x28],dh
  414199:	add    al,BYTE PTR [eax]
  41419b:	fidiv  DWORD PTR [esi+0x2c6303db]
  4141a1:	js     0x4141ab
  4141a3:	jmp    0xde68:0xe81bde70
  4141aa:	push   ebx
  4141ab:	(bad)  [edx]
  4141ad:	add    ebx,DWORD PTR [esi+0x2284f]
  4141b3:	bound  eax,QWORD PTR [esi+0x2c630412]
  4141b9:	mov    edx,0x14100f88
  4141be:	mov    DWORD PTR [edi],eax
  4141c0:	or     BYTE PTR [ecx+ecx*4],cl
  4141c3:	(bad)  [eax]
  4141c5:	(bad)  
  4141c6:	push   DWORD PTR [ebp+edx*4-0x3a]
  4141ca:	and    ecx,DWORD PTR [ebx]
  4141cc:	adc    eax,DWORD PTR [ecx+0xe]
  4141cf:	fstp   QWORD PTR [ebx-0x3]
  4141d2:	call   FWORD PTR [ecx+ebx*4-0x77]
  4141d6:	call   DWORD PTR [esp+ebp*1+0x2]
  4141da:	mov    esp,DWORD PTR [edi+0x2384c650]
  4141e0:	clc    
  4141e1:	jmp    0xa91f170
  4141e6:	inc    ecx
  4141e7:	jmp    0xaf64:0xe717dfef
  4141ee:	sub    al,0xd8
  4141f0:	neg    edi
  4141f2:	pop    edi
  4141f3:	call   0x5f54b8fc
  4141f8:	add    eax,0xdae9
	...
  414209:	add    BYTE PTR [eax-0x262e4717],bl
  41420f:	jbe    0x414205
  414211:	(bad)  
  414212:	cld    
  414213:	sbb    eax,0xb540d011
  414218:	xchg   edi,eax
  414219:	jp     0x4141b3
  41421b:	jmp    0x1ed513b4
  414220:	sbb    BYTE PTR [edx+0x436bf4a0],al
  414226:	mov    DWORD PTR gs:[ebx-0x2ee23302],edx
  41422d:	mov    DWORD PTR [eax-0x17ee6bff],0xe9bfccb0
  414237:	mov    eax,0xb0dbc3c4
  41423c:	int3   
  41423d:	xlat   BYTE PTR ds:[ebx]
  41423e:	fstp   TBYTE PTR [eax-0x276243c]
  414244:	jno    0x414206
  414246:	inc    eax
  414247:	mov    ecx,0x9707671
  41424c:	jmp    0x38837a54
  414251:	rcl    DWORD PTR [ebx],1
  414253:	nop
  414254:	sbb    al,0xe0
  414256:	xor    BYTE PTR [ebx-0x7e7bc98f],dh
  41425c:	mov    cl,0x25
  41425e:	mov    DWORD PTR gs:[eax+eiz*8],edi
  414262:	mov    BYTE PTR [eax-0x769bfd5d],cl
  414268:	inc    esi
  414269:	dec    DWORD PTR [ebp+ebx*1+0x61]
  41426d:	jle    0x41426f
	...
  41427b:	add    BYTE PTR [eax],al
  41427d:	add    BYTE PTR [ecx],0xe9
  414280:	add    esp,DWORD PTR [edx+eax*8]
  414283:	int3   
  414284:	packsswb mm0,QWORD PTR ds:0xc16a03e9
  41428b:	dec    esp
  41428d:	or     BYTE PTR [edx+0x5466a61],dl
  414293:	movq   mm6,QWORD PTR [ecx]
  414296:	or     BYTE PTR [eax],al
  414298:	jmp    0x11650b96
  41429d:	push   cs
  41429e:	mov    DWORD PTR [edi-0x16],eax
  4142a1:	pusha  
  4142a2:	add    eax,0xd14ad8b
  4142a7:	push   edi
  4142a8:	adc    ah,BYTE PTR [esi+0x2d624fb7]
  4142ae:	and    al,0xe1
  4142b0:	xor    eax,0xb58a1b86
  4142b5:	mov    ah,0xd4
  4142b7:	push   esi
  4142b8:	mov    eax,0x318a4a4b
  4142bd:	addr16 pop eax
  4142bf:	test   BYTE PTR [esi],0x86
  4142c2:	ffreep st(2)
  4142c4:	imul   BYTE PTR ds:0x60e902f9
  4142ca:	nop
  4142cb:	inc    ebx
  4142cc:	int    0xb8
  4142ce:	fcos   
  4142d0:	jecxz  0x414332
  4142d2:	add    eax,0x1be3f07c
  4142d7:	add    esi,ebp
  4142d9:	or     al,0xd
  4142db:	add    ebp,ecx
  4142dd:	pusha  
  4142de:	(bad)  
  4142e0:	dec    ebx
	...
  4142ed:	add    BYTE PTR [eax],al
  4142ef:	add    BYTE PTR [edi+0x5],ah
  4142f2:	jl     0x4142e4
  4142f4:	jecxz  0x414311
  4142f6:	add    ch,dh
  4142f8:	in     al,dx
  4142f9:	sbb    al,0x1
  4142fb:	jmp    0x59cd360
  414300:	das    
  414301:	pop    DWORD PTR [ebx-0x33]
  414304:	and    al,0x8f
  414306:	xchg   ebp,eax
  414307:	cmc    
  414308:	dec    esp
  414309:	sbb    al,0xfe
  41430b:	ret    0x8da3
  41430e:	inc    ebx
  41430f:	lds    eax,FWORD PTR [eax-0x3c]
  414312:	dec    edi
  414313:	add    BYTE PTR [edi+0x7850ff5d],ch
  414319:	aaa    
  41431a:	mov    eax,DWORD PTR [esi+edx*1+0x54]
  41431e:	dec    esi
  41431f:	mov    edi,esp
  414321:	(bad)  
  414322:	(bad)  
  414324:	jge    0x414307
  414326:	mov    DWORD PTR [esi+eiz*2+0x39],ecx
  41432a:	aaa    
  41432b:	dec    esp
  41432c:	push   esi
  41432d:	inc    ecx
  41432e:	mov    eax,DWORD PTR [ebx+0xb]
  414331:	lahf   
  414332:	inc    edx
  414333:	and    al,0xfe
  414335:	dec    edx
  414336:	jp     0x414371
  414338:	jno    0x4142f1
  41433a:	push   eax
  41433b:	mov    edi,DWORD PTR [eax+eax*1]
  41433e:	inc    ebx
  41433f:	test   DWORD PTR [ebp-0x59b3761f],0xa6448747
  414349:	cmp    ecx,DWORD PTR [ecx+0x4e5b9644]
  41434f:	push   ecx
  414350:	inc    ecx
  414351:	shl    dh,cl
  414353:	das    
	...
  414360:	add    BYTE PTR [eax],al
  414362:	add    BYTE PTR [ebp-0x1740219],dh
  414368:	cmp    esp,DWORD PTR [edx]
  41436a:	sub    eax,DWORD PTR [edx-0x2c4736fb]
  414370:	xchg   ecx,eax
  414371:	loope  0x4143ab
  414373:	mov    ch,0xe9
  414375:	iret   
  414376:	cli    
  414377:	adc    ebx,eax
  414379:	mov    edi,0xc2028de8
  41437e:	jmp    0x4143da
  414380:	mov    WORD PTR [edx+0x24],cs
  414383:	dec    esi
  414384:	push   edx
  414385:	mov    esi,ecx
  414387:	xchg   edx,eax
  414388:	or     edi,esi
  41438a:	jmp    FWORD PTR [ebp-0x79dbad75]
  414390:	mov    dl,dh
  414392:	mov    eax,DWORD PTR [esi-0x75adc1d3]
  414398:	mov    cl,ah
  41439a:	call   0xfe5abe02
  41439f:	cmp    al,0x48
  4143a1:	cmp    cl,BYTE PTR [edx+0x23bf9820]
  4143a7:	mov    esp,DWORD PTR [ebp+0x2f60e186]
  4143ad:	inc    esp
  4143ae:	rcr    BYTE PTR [ebx],0x2f
  4143b1:	add    eax,0xdd683f44
  4143b6:	out    0x8e,eax
  4143b8:	adc    al,0x49
  4143ba:	inc    ebx
  4143bb:	aas    
  4143bc:	sbb    BYTE PTR [ebx],al
  4143be:	add    BYTE PTR [ebx+0x2c],ah
  4143c1:	xchg   esi,edi
  4143c3:	ins    DWORD PTR es:[edi],dx
  4143c4:	add    al,0xdd
  4143c6:	imul   eax,DWORD PTR [eax],0x0
	...
  4143d5:	add    BYTE PTR [edi+0x60],al
  4143d8:	sahf   
  4143d9:	das    
  4143da:	fsub   DWORD PTR [eax-0x1a]
  4143dd:	daa    
  4143de:	ss jge 0x41436e
  4143e1:	int    0xcb
  4143e3:	mov    ds:0x97ccfe19,al
  4143e8:	mov    bh,0x23
  4143ea:	pop    ds
  4143eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143ec:	cmp    ecx,DWORD PTR [edx+0x51c24027]
  4143f2:	adc    edx,DWORD PTR [edi+0x12f8e751]
  4143f8:	and    esi,edi
  4143fa:	push   0x475b8eef
  4143ff:	je     0x4143a0
  414401:	pop    es
  414402:	pushf  
  414403:	call   0x2ca357ef
  414408:	add    al,BYTE PTR [eax]
  41440a:	fidiv  WORD PTR [ebx]
  41440c:	xchg   edi,eax
  41440d:	dec    esp
  41440e:	cmp    bl,al
  414410:	out    0x43,eax
  414412:	imul   dl
  414414:	mov    cs,WORD PTR [ebp+0x22057]
  41441a:	stc    
  41441b:	sub    al,0xb5
  41441d:	push   eax
  41441e:	call   0x50df6e9c
  414423:	add    eax,0xb0d922a6
  414428:	(bad)  
  414429:	(bad)  
  41442a:	fnstcw WORD PTR [ecx+eiz*2]
  41442d:	mov    DWORD PTR [eax-0x164bc53b],0x36b0904a
  414437:	sbb    bh,BYTE PTR [ebp-0x72]
	...
  414446:	add    BYTE PTR [eax],al
  414448:	add    BYTE PTR [eax-0x4c473f1f],bl
  41444e:	mov    ds,WORD PTR [esi-0x18024770]
  414454:	sub    ebp,DWORD PTR [eax+0x49225d13]
  41445a:	cmp    eax,0xbd40bf61
  41445f:	into   
  414460:	or     eax,0xf80cc11c
  414465:	in     al,dx
  414466:	sbb    eax,ebp
  414468:	add    edi,eax
  41446a:	or     eax,0xf1809f6a
  41446f:	call   0xe98c2286
  414474:	add    esp,DWORD PTR [ebx-0x7a]
  414477:	sbb    eax,DWORD PTR ds:0x4418b54
  41447d:	arpl   WORD PTR ds:0xe580b762,ax
  414483:	jno    0x41440e
  414485:	push   eax
  414486:	add    ecx,ebp
  414488:	add    esp,eax
  41448a:	inc    esi
  41448b:	div    BYTE PTR [ecx+eiz*8-0x1e4915bb]
  414492:	inc    esp
  414493:	jmp    0x33e0:0x4c8dfb3
  41449a:	mov    fs,WORD PTR [esi-0x32e413d4]
  4144a0:	and    ecx,ebp
  4144a2:	ror    BYTE PTR [esp+edx*8],0x29
  4144a6:	rol    DWORD PTR [esp+ebp*8],0xd9
  4144aa:	mov    al,0xff
  4144ac:	or     al,0x0
	...
  4144ba:	add    BYTE PTR [eax],al
  4144bc:	cmp    esi,DWORD PTR [edi-0x62f06076]
  4144c2:	and    dl,BYTE PTR [ecx-0x6101ee94]
  4144c8:	(bad)  
  4144c9:	xor    BYTE PTR [edx+0x54e14b2d],cl
  4144cf:	cmp    esi,esp
  4144d1:	dec    edx
  4144d2:	out    0x97,eax
  4144d4:	push   esp
  4144d5:	pop    ss
  4144d6:	(bad)  
  4144d7:	rcr    BYTE PTR [edi+0x668b827d],cl
  4144dd:	add    al,0xc2
  4144df:	bound  esp,QWORD PTR [edi+0x3febf845]
  4144e5:	out    dx,al
  4144e6:	out    0x43,eax
  4144e8:	ins    BYTE PTR es:[edi],dx
  4144e9:	pop    ss
  4144ea:	(bad)  
  4144eb:	bound  edi,QWORD PTR [edi]
  4144ed:	mov    eax,DWORD PTR [ebx+0x5]
  4144f0:	pop    es
  4144f1:	mov    dl,0x4f
  4144f3:	jb     0x414486
  4144f5:	and    dl,cl
  4144f7:	xor    al,0x42
  4144f9:	pop    ss
  4144fa:	mov    ah,BYTE PTR [ecx]
  4144fc:	into   
  4144fd:	dec    ebx
  4144fe:	add    ah,BYTE PTR [eax]
  414500:	aaa    
  414501:	sub    eax,0xfd172a1
  414506:	call   0xc9ccaa43
  41450b:	sub    BYTE PTR [eax-0x19dcfd09],cl
  414511:	les    esp,FWORD PTR [ebx]
  414513:	mov    ebp,0x103a4d67
  414518:	les    eax,FWORD PTR [eax]
  41451a:	(bad)  
  41451b:	lods   eax,DWORD PTR ds:[esi]
  41451c:	test   ah,dh
  41451e:	add    cl,ch
	...
  41452c:	add    BYTE PTR [eax],al
  41452e:	add    BYTE PTR [eax+0x5],ah
  414531:	test   esi,esp
  414533:	jmp    0x8ae4:0xe4a43ae0
  41453a:	cmp    eax,0x3b4fe88b
  41453f:	out    0x4a,al
  414541:	out    0x0,eax
  414543:	hlt    
  414544:	out    dx,al
  414545:	std    
  414546:	push   ecx
  414548:	fisttp DWORD PTR [ecx+0x53296e44]
  41454e:	push   eax
  41454f:	shl    DWORD PTR [esi-0x1b10801a],0xfd
  414556:	cmp    esp,DWORD PTR [edx]
  414558:	cmc    
  414559:	mov    eax,DWORD PTR [edx]
  41455b:	dec    ecx
  41455c:	add    al,0x0
  41455e:	and    DWORD PTR [esi+0x2d],0x12
  414562:	add    BYTE PTR ds:0x3a02f57f,dh
  414568:	add    al,0x83
  41456a:	std    
  41456b:	or     ebp,esi
  41456d:	(bad)  
  41456e:	aam    0xa
  414570:	add    al,0x0
  414572:	mov    edx,esi
  414574:	pop    ds
  414575:	push   ds
  414576:	mov    ecx,esi
  414578:	pop    ds
  414579:	push   esi
  41457a:	mov    ecx,DWORD PTR [eax+edx*1-0x7ef5fffe]
  414581:	mov    edi,0xc080cbfd
  414586:	add    ecx,eax
  414588:	cmp    BYTE PTR [esi+0x4a86fa03],0x24
  41458f:	(bad)  
  414590:	push   edx
  414591:	mov    esi,ecx
	...
  41459f:	add    BYTE PTR [eax],al
  4145a1:	add    BYTE PTR [edx-0x45],dh
  4145a4:	idiv   bh
  4145a6:	mov    DWORD PTR gs:[edx+0x24],eax
  4145aa:	call   0x5a88:0x8e245288
  4145b1:	and    al,0x92
  4145b3:	cmp    cl,al
  4145b5:	push   edx
  4145b6:	xor    DWORD PTR [esi-0x145083b2],esi
  4145bc:	and    dh,ch
  4145be:	test   edi,esi
  4145c0:	push   ebx
  4145c1:	push   ebx
  4145c2:	adc    edi,eax
  4145c4:	xchg   DWORD PTR [esi+ebx*2+0x15],eax
  4145c8:	out    0x17,al
  4145ca:	arpl   WORD PTR [ecx],di
  4145cc:	push   ds
  4145cd:	(bad)  
  4145ce:	call   0x38652dcc
  4145d3:	ins    DWORD PTR es:[edi],dx
  4145d4:	jl     0x414558
  4145d6:	sub    DWORD PTR [edx],0x64e8c201
  4145dc:	inc    esp
  4145dd:	clc    
  4145de:	popa   
  4145df:	inc    ebx
  4145e0:	out    dx,eax
  4145e1:	out    0x4c,eax
  4145e3:	jns    0x414603
  4145e5:	(bad)  
  4145e6:	scas   al,BYTE PTR es:[edi]
  4145e7:	fisttp DWORD PTR [edx-0x18171533]
  4145ed:	sub    ecx,DWORD PTR [ebx+0x7b]
  4145f0:	pop    ss
  4145f1:	(bad)  
  4145f2:	sub    al,0x94
  4145f4:	dec    ebx
  4145f5:	mov    bl,BYTE PTR [edi+0x2b2ae640]
  4145fb:	sub    al,0x4b
  4145fd:	mov    bh,0xa
  4145ff:	retf   
  414600:	mov    ch,BYTE PTR ds:0xf934b614
	...
  414612:	add    BYTE PTR [eax],al
  414614:	add    al,bl
  414616:	rol    BYTE PTR [eax+ebp*8+0x5c],cl
  41461a:	sub    ecx,DWORD PTR [eax-0x76]
  41461d:	lahf   
  41461e:	add    al,bl
  414620:	add    bl,BYTE PTR [ebx]
  414622:	add    al,0x2d
  414624:	jl     0x414681
  414626:	ffreep st(7)
  414628:	and    esi,DWORD PTR [edi+0x2d]
  41462b:	add    al,BYTE PTR [eax]
  41462d:	arpl   WORD PTR [ecx+0x237b751e],sp
  414633:	inc    edi
  414634:	jnp    0x4146b5
  414636:	xchg   ebx,eax
  414637:	mov    bh,0x23
  414639:	jae    0x414697
  41463b:	mov    al,0x8a
  41463d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41463e:	add    al,0x55
  414640:	rep lods al,BYTE PTR ds:[esi]
  414642:	dec    DWORD PTR [edx-0x199f2729]
  414648:	daa    
  414649:	ss jl  0x4145d5
  41464c:	int    0x8b
  41464e:	retf   0xfe17
  414651:	mov    WORD PTR ds:0x89553c22,es
  414657:	add    eax,DWORD PTR [edx]
  414659:	arpl   WORD PTR ds:0xf1409f6a,ax
  41465f:	call   0xeb3d2c72
  414664:	add    esp,DWORD PTR [ebx-0x76]
  414667:	sbb    al,0xe8
  414669:	mov    ah,0x80
  41466b:	mov    ch,0xe
  41466d:	fild   QWORD PTR [ecx-0x7d9cfc19]
  414673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414674:	add    al,0x54
  414676:	jg     0x4146b0
  414678:	add    eax,0x0
	...
  414685:	add    BYTE PTR [eax],al
  414687:	add    BYTE PTR [ebx+0x5],ah
  41468a:	bound  esi,QWORD PTR [edi+0x4e61b180]
  414690:	jns    0x4146dc
  414692:	jae    0x41469b
  414694:	pop    ecx
  414695:	fisub  DWORD PTR [ebp-0x52759d6b]
  41469b:	mov    bl,0xe9
  41469d:	rol    ah,0xf7
  4146a0:	cmp    DWORD PTR [esi],esi
  4146a2:	mov    ecx,0x4c8d7b3
  4146a7:	loopne 0x41463c
  4146a9:	mov    ah,BYTE PTR [esi]
  4146ab:	mov    WORD PTR [eax+0x182c04e1],ds
  4146b1:	push   cs
  4146b2:	inc    ebp
  4146b3:	push   ds
  4146b4:	sub    ebx,DWORD PTR [ecx-0x2ead27fc]
  4146ba:	popa   
  4146bb:	mov    bh,0x80
  4146bd:	aad    0x95
  4146bf:	mov    cl,0xd9
  4146c1:	inc    esi
  4146c2:	adc    al,ah
  4146c4:	rcl    BYTE PTR ds:0x89948a1d,1
  4146ca:	lods   al,BYTE PTR ds:[esi]
  4146cb:	out    0x6c,eax
  4146cd:	scas   al,BYTE PTR es:[edi]
  4146ce:	mov    eax,0xd62c9e8a
  4146d3:	pop    ss
  4146d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146d5:	adc    eax,0xb8e942c1
  4146da:	dec    esp
  4146dc:	mov    WORD PTR [edi-0x1e639df1],ss
  4146e2:	das    
  4146e3:	jb     0x4146b0
  4146e5:	loope  0x41471a
  4146e7:	jo     0x41467c
  4146e9:	loope  0x414722
  4146eb:	pusha  
	...
  4146f8:	add    BYTE PTR [eax],al
  4146fa:	add    BYTE PTR [ebx-0x649dc41f],bh
  414700:	loope  0x414711
  414702:	push   ds
  414703:	mov    dl,0xc5
  414705:	mov    ch,BYTE PTR [edi-0x490f1471]
  41470b:	jbe    0x41478c
  41470d:	dec    ebx
  41470e:	add    eax,0x7250bc2f
  414713:	xchg   ebp,eax
  414714:	jg     0x4146ed
  414716:	xchg   ecx,eax
  414717:	pop    eax
  414718:	pop    ss
  414719:	(bad)  
  41471a:	xchg   esi,eax
  41471b:	sbb    cl,BYTE PTR [eax+0xe]
  41471e:	pop    esp
  41471f:	(bad)  
  414720:	adc    al,0xfe
  414722:	jmp    0xd164f802
  414727:	cmp    esi,DWORD PTR [ebx+0x23]
  41472a:	in     eax,dx
  41472b:	pusha  
  41472c:	add    eax,0xb8da1175
  414731:	and    edi,ebp
  414733:	fcmovne st,st(0)
  414735:	and    edi,ecx
  414737:	mov    bh,0xb6
  414739:	dec    edi
  41473a:	bound  esp,QWORD PTR [ebp+0x4e59f12c]
  414740:	adc    edx,DWORD PTR [edx+ebx*4-0x25]
  414744:	inc    edx
  414745:	mov    BYTE PTR [ebp+0x2fe7e0c4],ah
  41474b:	jb     0x414760
  41474d:	(bad)  
  41474e:	bound  esi,QWORD PTR [ebx+0x18ea23e8]
  414754:	jg     0x414728
  414756:	mov    ah,0xa2
  414758:	jge    0x4147a5
  41475a:	int    0xc8
  41475c:	mov    dh,0x8a
  41475e:	pop    ds
	...
  41476b:	add    BYTE PTR [eax],al
  41476d:	add    BYTE PTR [edi+0x64],bh
  414770:	repnz add BYTE PTR [ebp-0xe],bl
  414774:	mov    eax,ebx
  414776:	adc    DWORD PTR ds:0x58f53822,edi
  41477c:	mov    esi,ecx
  41477e:	bound  ebp,QWORD PTR [eax+0x7d7dfff1]
  414784:	push   0x24
  414786:	outs   dx,BYTE PTR ds:[esi]
  414787:	push   es
  414788:	fmul   DWORD PTR [ebx+0x3b221d46]
  41478e:	mov    ecx,0x42245a7d
  414793:	jae    0x4147dc
  414795:	jmp    0x4147dd
  414797:	jge    0x4147f3
  414799:	and    al,0x72
  41479b:	jle    0x4147df
  41479d:	and    al,0x52
  41479f:	sub    eax,0x8362484
  4147a4:	add    BYTE PTR [ebp+0x33],dh
  4147a7:	test   DWORD PTR [eax+ebp*1+0x846],edi
  4147ae:	push   esi
  4147af:	push   cs
  4147b0:	cmp    eax,DWORD PTR [eax]
  4147b2:	aaa    
  4147b3:	or     BYTE PTR [eax],al
  4147b5:	jl     0x4147be
  4147b7:	test   ebp,edi
  4147b9:	add    dl,BYTE PTR [esi]
  4147bb:	es jg  0x41483a
  4147be:	es xor dh,bh
  4147c1:	jl     0x4147bd
  4147c3:	pop    es
  4147c4:	jl     0x4147cb
  4147c6:	mov    ecx,esi
  4147c8:	add    DWORD PTR [ecx+edi*8+0x7c],esi
  4147cc:	dec    edx
  4147cd:	and    al,0x52
  4147cf:	pop    edx
  4147d0:	dec    edi
  4147d1:	mov    eax,DWORD PTR [eax]
	...
  4147df:	add    BYTE PTR [eax],al
  4147e1:	sub    al,0xe0
  4147e3:	int3   
  4147e4:	repz popf 
  4147e6:	icebp  
  4147e7:	jmp    0x2295891c
  4147ec:	pop    eax
  4147ed:	inc    ecx
  4147ee:	dec    esp
  4147ef:	and    dl,BYTE PTR [eax]
  4147f1:	push   ecx
  4147f2:	aad    0x29
  4147f4:	xlat   BYTE PTR ds:[ebx]
  4147f5:	clc    
  4147f6:	push   edi
  4147f7:	mov    esi,ecx
  4147f9:	arpl   WORD PTR [esi],ax
  4147fb:	outs   dx,BYTE PTR ds:[esi]
  4147fc:	out    dx,eax
  4147fd:	lods   al,BYTE PTR ds:[esi]
  4147fe:	add    bl,BYTE PTR [ebx+eax*2]
  414801:	jg     0x414831
  414803:	jg     0x4147f3
  414805:	bound  ebx,QWORD PTR [ecx-0x588e15dc]
  41480b:	mov    dh,0x23
  41480d:	jae    0x4147c0
  41480f:	(bad)  
  414810:	(bad)  
  414811:	xor    dl,al
  414813:	mov    cs,ebp
  414815:	mov    ecx,DWORD PTR [edi-0x118b01ed]
  41481b:	sbb    al,BYTE PTR [edx-0x70f6e192]
  414821:	loop   0x414840
  414823:	add    al,BYTE PTR [eax]
  414825:	call   0x634537d4
  41482a:	sbb    al,0xaf
  41482c:	push   edx
  41482d:	mov    bl,0xa7
  41482f:	dec    ecx
  414830:	out    0x65,eax
  414832:	ins    BYTE PTR es:[edi],dx
  414833:	sbb    bh,dh
  414835:	call   0x8e69281a
  41483a:	int    0x8e
  41483c:	int    0xd8
  41483e:	push   esp
  41483f:	sub    ebp,edi
  414841:	xor    DWORD PTR [edx+ebx*1+0x3a],ecx
	...
  414854:	and    BYTE PTR [edx+ebp*8],dl
  414857:	mov    bl,BYTE PTR [edi-0x1ac515c0]
  41485d:	dec    eax
  41485e:	(bad)  
  41485f:	inc    DWORD PTR [edx+esi*1]
  414862:	or     eax,DWORD PTR [ebx-0xb43]
  414868:	arpl   WORD PTR [esi+ecx*4],bx
  41486b:	inc    esp
  41486c:	cs sbb al,0xff
  41486f:	jmp    DWORD PTR [ebx+0x48]
  414872:	inc    DWORD PTR [edx+0x68e1ede]
  414878:	xchg   esi,eax
  414879:	sbb    al,0x97
  41487b:	dec    esp
  41487d:	pusha  
  41487e:	aam    0x8a
  414880:	daa    
  414881:	add    eax,0xa1ebbbcd
  414886:	(bad)  
  414887:	out    dx,eax
  414888:	fbld   TBYTE PTR [eax]
  41488a:	pushf  
  41488b:	jecxz  0x414866
  41488d:	jnp    0x414883
  41488f:	jmp    DWORD PTR [edx+edx*1+0x43e9b599]
  414896:	adc    ch,ah
  414898:	test   BYTE PTR [edx],dl
  41489a:	cmc    
  41489b:	pop    ebx
  41489c:	arpl   WORD PTR ds:0x8b6203e9,ax
  4148a2:	cld    
  4148a3:	(bad)  
  4148a4:	jl     0x4148b8
  4148a6:	xadd   BYTE PTR [eax-0x7],al
  4148aa:	pop    ebx
  4148ab:	and    al,0xdf
  4148ad:	mov    cl,0xeb
  4148af:	sbb    bh,BYTE PTR [ecx-0x51]
  4148b2:	jno    0x41486b
  4148b4:	sub    BYTE PTR [ebp+0xbf71],0x0
	...
  4148c7:	sbb    ch,0x1b
  4148ca:	mov    ah,0xd9
  4148cc:	inc    edx
  4148cd:	rol    BYTE PTR [esi],0x50
  4148d0:	adc    ah,BYTE PTR [ebp-0x1b06f2fc]
  4148d6:	add    esp,DWORD PTR [ebx-0x80]
  4148d9:	xor    al,0xf9
  4148db:	sub    eax,0x888ecb1e
  4148e0:	jmp    0x985eca05
  4148e5:	(bad)  
  4148e6:	mov    gs,WORD PTR [eax-0x9713f17]
  4148ec:	clc    
  4148ed:	in     al,0x3
  4148ef:	arpl   WORD PTR [esp+edx*8-0x21],di
  4148f3:	cmp    BYTE PTR [esp+ebp*4-0x21],bh
  4148f7:	sub    al,0x7c
  4148f9:	mov    esp,0x41ca5cdf
  4148fe:	icebp  
  4148ff:	fist   WORD PTR [ecx]
  414901:	mov    esp,0xed1e2406
  414906:	mov    ds,esi
  414908:	clc    
  414909:	(bad)  
  41490a:	in     al,dx
  41490b:	pusha  
  41490c:	add    eax,0x3fd59953
  414911:	out    0x5f,eax
  414913:	mov    DWORD PTR [ebx],edx
  414915:	(bad)  
  414916:	push   ds
  414917:	loop   0x41490e
  414919:	add    ebp,ecx
  41491b:	pusha  
  41491c:	mov    dh,bh
  41491e:	fisub  WORD PTR [edi+ebx*1]
  414921:	(bad)  
  414922:	call   0xc5bd1787
  414927:	lods   al,BYTE PTR ds:[esi]
  414928:	add    al,BYTE PTR [ebp+0x8]
	...
  41493a:	pusha  
  41493b:	add    eax,0xe5b46200
  414940:	push   ebx
  414941:	jb     0x41496d
  414943:	(bad)  
  414945:	ins    BYTE PTR es:[edi],dx
  414946:	arpl   di,di
  414948:	cmp    ch,BYTE PTR [esi-0x5974fc2f]
  41494e:	scas   eax,DWORD PTR es:[edi]
  41494f:	jle    0x414994
  414951:	or     eax,0x12ea7c53
  414956:	mov    bh,BYTE PTR [ecx-0x1ae49bb1]
  41495c:	cmp    ebx,DWORD PTR [eax]
  41495e:	(bad)  
  41495f:	inc    edx
  414960:	mov    BYTE PTR ds:0x17e7e543,dl
  414966:	fs paddd mm2,mm0
  41496a:	aam    0xe4
  41496c:	xor    ebx,DWORD PTR [ebx]
  41496e:	adc    edi,DWORD PTR [ebx+edx*2-0x33]
  414972:	xor    BYTE PTR [eax+0x28a97251],bh
  414978:	out    0x78,al
  41497a:	push   0xf
  41497c:	mov    al,BYTE PTR [ecx+0x2123c4d6]
  414982:	mov    dl,0xc0
  414984:	mov    ch,BYTE PTR [edi]
  414986:	inc    edi
  414987:	cmp    al,dh
  414989:	push   esi
  41498a:	dec    edx
  41498b:	retf   
  41498c:	les    esp,FWORD PTR [edx-0x45]
  41498f:	in     al,0x13
  414991:	add    BYTE PTR [esp+edx*1+0x395e4c89],ah
  414998:	mov    DWORD PTR [esi+ebx*2+0x35],edx
  41499c:	xchg   DWORD PTR [eax+eax*1+0x0],ecx
	...
  4149ac:	add    BYTE PTR [esi+0x31],bl
  4149af:	xchg   DWORD PTR [esi+ebp*4+0x38],edx
  4149b3:	mov    DWORD PTR [esi+ebx*4+0x14],eax
  4149b7:	push   ebp
  4149b8:	push   ebp
  4149b9:	jmp    0xfddb:0x6be8cc81
  4149c0:	call   DWORD PTR [ecx]
  4149c2:	cmp    eax,0x53ed3822
  4149c7:	mov    esi,ecx
  4149c9:	add    ecx,esp
  4149cb:	out    0xa3,al
  4149cd:	mov    ebp,ebp
  4149cf:	std    
  4149d0:	cmp    ecx,edi
  4149d2:	ja     0x414a0c
  4149d4:	mov    edi,DWORD PTR [esi]
  4149d6:	and    eax,0x2ffc3b36
  4149db:	add    al,BYTE PTR [eax]
  4149dd:	jp     0x414a5e
  4149df:	pop    es
  4149e0:	and    esp,0x1b
  4149e3:	add    al,BYTE PTR [eax]
  4149e5:	dec    edx
  4149e6:	add    al,0x74
  4149e8:	sbb    BYTE PTR [edi+0x4],dl
  4149eb:	add    eax,0x3783a00
  4149f0:	add    DWORD PTR ds:0x1719740a,0x4
  4149f7:	jge    0x4149f9
  4149f9:	cmp    bh,BYTE PTR [eax+0x3]
  4149fc:	adc    ebp,0x8
  4149ff:	je     0x414a0e
  414a01:	jge    0x414a5c
  414a03:	mov    esi,ecx
  414a05:	repnz loopne 0x4149f7
  414a08:	call   DWORD PTR [ebp+0x1aebfd39]
  414a0e:	sub    DWORD PTR [edx+0x24],0x0
	...
  414a1d:	add    BYTE PTR [eax],al
  414a1f:	add    dl,bh
  414a21:	push   cs
  414a22:	(bad)  
  414a23:	dec    DWORD PTR [edx]
  414a25:	add    al,0x8b
  414a27:	shl    DWORD PTR [ebx+0x3],cl
  414a2a:	xor    DWORD PTR [ecx-0x72],edx
  414a2d:	mov    ds:0xb7a4e748,eax
  414a32:	pop    ss
  414a33:	(bad)  
  414a34:	push   ds
  414a35:	fwait
  414a36:	daa    
  414a37:	add    BYTE PTR [esi-0x37],dl
  414a3a:	mov    DWORD PTR [ebx+0x7f],ebp
  414a3d:	mov    eax,DWORD PTR cs:[ebx-0x79]
  414a41:	push   edx
  414a42:	ret    
  414a43:	inc    edi
  414a44:	jmp    0x7d6:0x6857de51
  414a4b:	sub    ah,0xf5
  414a4e:	pop    ss
  414a4f:	(bad)  
  414a50:	out    0x6,al
  414a52:	or     BYTE PTR [edi+esi*8-0x1ffffde3],al
  414a59:	push   ss
  414a5a:	add    BYTE PTR [edi],cl
  414a5c:	fstp   QWORD PTR [edx-0x6c9cfffe]
  414a62:	(bad)  
  414a63:	and    edx,DWORD PTR [ebx-0x29]
  414a66:	mov    al,dl
  414a68:	cmp    BYTE PTR [edi-0x4d],bl
  414a6b:	push   eax
  414a6c:	fsubr  DWORD PTR [edi+0x2b]
  414a6f:	cs dec ebp
  414a71:	dec    eax
  414a72:	push   ss
  414a73:	mov    ch,BYTE PTR [edi-0x4ea923f8]
  414a79:	mov    ds:0x453b8a45,eax
  414a7e:	add    al,0xf1
  414a80:	cmp    al,0x68
  414a82:	fcmovb st,st(4)
	...
  414a90:	add    BYTE PTR [eax],al
  414a92:	add    BYTE PTR [ecx+ebp*8+0x3487438a],dh
  414a99:	fld    DWORD PTR [ebp+0x2287f]
  414a9f:	xchg   esi,eax
  414aa0:	adc    eax,0x284bbd81
  414aa5:	add    al,BYTE PTR [eax]
  414aa7:	arpl   WORD PTR [eax],dx
  414aa9:	cli    
  414aaa:	cmp    al,0x63
  414aac:	sub    DWORD PTR [edx],eax
  414aae:	add    BYTE PTR [edi+0x5],bh
  414ab1:	in     al,dx
  414ab2:	xor    ch,0x3
  414ab5:	aad    0xdf
  414ab7:	das    
  414ab8:	add    eax,0x916303d4
  414abd:	jecxz  0x414a41
  414abf:	fld    QWORD PTR [edx]
  414ac1:	mov    ebp,0x71b52dfb
  414ac6:	inc    esi
  414ac7:	les    edi,FWORD PTR [edi+esi*1-0x9e53ae9]
  414ace:	mov    eax,0x4c69ae19
  414ad3:	mov    ch,0xaf
  414ad5:	imul   eax,DWORD PTR [eax+0x74],0xd803f043
  414adc:	mov    eax,ds:0x42e9f3c4
  414ae1:	sar    DWORD PTR [esi],1
  414ae3:	and    al,0xb8
  414ae5:	jno    0x414b2d
  414ae7:	test   dh,ch
  414ae9:	push   es
  414aea:	pop    ss
  414aeb:	test   eax,ecx
  414aed:	imul   esp,DWORD PTR [edi],0x2ad39863
  414af3:	fs jp  0x414b2a
  414af6:	loopne 0x414af8
	...
  414b04:	add    BYTE PTR [eax],al
  414b06:	pop    esp
  414b07:	and    BYTE PTR [ecx],0x17
  414b0a:	adc    esi,DWORD PTR [ebx+0x6444561]
  414b10:	xlat   BYTE PTR ds:[ebx]
  414b11:	push   ss
  414b12:	push   ebp
  414b13:	jp     0x414b51
  414b15:	loopne 0x414ac7
  414b17:	push   eax
  414b18:	out    0x3,eax
  414b1a:	arpl   WORD PTR ds:0xe4b136f2,ax
  414b20:	jae    0x414b9c
  414b22:	xor    al,0xe
  414b24:	call   0xfcc8232c
  414b29:	jmp    DWORD PTR [esi+ecx*1]
  414b2c:	cmp    DWORD PTR [ecx+ebp*8+0x720903e],esi
  414b33:	push   cs
  414b34:	jge    0x414b3a
  414b36:	mov    ebp,0x60ecfff8
  414b3b:	add    eax,0x2f198c03
  414b40:	jno    0x414b8e
  414b42:	loope  0x414b7e
  414b44:	(bad)  
  414b45:	call   0xe94535c0
  414b4a:	pusha  
  414b4b:	or     BYTE PTR [edx-0x20],0xf3
  414b4f:	in     al,dx
  414b50:	mov    ch,BYTE PTR [edi-0x30]
  414b53:	add    DWORD PTR [eax],eax
  414b55:	jmp    0xed58d339
  414b5a:	pusha  
  414b5b:	add    eax,0xe9e66040
  414b60:	add    ebp,ecx
  414b62:	pusha  
  414b63:	jl     0x414aea
  414b65:	stc    
  414b66:	lods   al,BYTE PTR ds:[esi]
  414b67:	or     eax,0x62fe
	...
  414b78:	add    BYTE PTR [esi],ah
  414b7a:	test   BYTE PTR [ebx],0xe9
  414b7d:	pusha  
  414b7e:	jnp    0x414b8f
  414b80:	jmp    0x414bd4
  414b82:	adc    cl,al
  414b84:	jno    0x414b16
  414b86:	add    al,0x9e
  414b88:	aad    0x84
  414b8a:	or     eax,0x7a7f74fe
  414b8f:	test   ecx,edi
  414b91:	je     0x414ba0
  414b93:	(bad)  
  414b94:	jo     0x414b83
  414b96:	cmc    
  414b97:	add    ebp,ecx
  414b99:	pusha  
  414b9a:	lds    ecx,FWORD PTR [eax+0x95b5f]
  414ba0:	jmp    0xe550ce8e
  414ba5:	pusha  
  414ba6:	add    eax,0x9476f8b
  414bab:	add    cl,ch
  414bad:	jmp    0x8746:0x4dbb01fc
  414bb4:	stc    
  414bb5:	popa   
  414bb6:	imul   ebx,DWORD PTR [ebx],0xffffffed
  414bb9:	pusha  
  414bba:	add    eax,0x82ebf075
  414bbf:	sldt   WORD PTR [esi]
  414bc2:	or     DWORD PTR [eax],eax
  414bc4:	mov    DWORD PTR [ecx+ecx*1+0x48fa0002],eax
  414bcb:	xchg   DWORD PTR [esi-0x1f2d2],ecx
  414bd1:	jae    0x414b5e
  414bd3:	push   cs
  414bd4:	add    al,0xfa
  414bd6:	or     BYTE PTR [ebx-0x1f30d7a],cl
  414bdc:	inc    DWORD PTR [eax]
	...
  414bea:	add    BYTE PTR [eax],al
  414bec:	call   0xfe0c:0xba868921
  414bf3:	inc    DWORD PTR [ecx+eax*1+0xd3c8b00]
  414bfa:	add    al,BYTE PTR [eax]
  414bfc:	retf   0x847d
  414bff:	sbb    dh,al
  414c01:	or     BYTE PTR [eax],al
  414c03:	add    DWORD PTR [ecx+edx*1],ebx
  414c06:	add    al,BYTE PTR [eax]
  414c08:	mov    edx,0xaad2cb1d
  414c0d:	jge    0x414c51
  414c0f:	and    al,0xbe
  414c11:	mov    edi,DWORD PTR [esi+0x4a7dcb74]
  414c17:	and    al,0xda
  414c19:	jge    0x414baf
  414c1b:	adc    BYTE PTR [esi+0x362b0008],al
  414c21:	and    eax,0x81f1514e
  414c26:	adc    al,BYTE PTR [edx+edi*2]
  414c29:	or     BYTE PTR [ebx],ch
  414c2b:	dec    esp
  414c2c:	push   cx
  414c2e:	push   eax
  414c2f:	push   ecx
  414c30:	jne    0x414c24
  414c32:	into   
  414c33:	add    DWORD PTR [esi],0x18
  414c36:	add    eax,0xffffff87
  414c39:	std    
  414c3a:	pop    esp
  414c3b:	mov    ecx,DWORD PTR [ecx]
  414c3d:	dec    ebp
  414c3e:	pop    ebp
  414c3f:	pop    esi
  414c40:	leave  
  414c41:	int3   
  414c42:	ss ret 0x162
  414c46:	mov    eax,DWORD PTR [esi-0x1f19d]
  414c4c:	sbb    al,0x47
  414c4e:	mov    esi,0x23
	...
  414c5f:	mov    bl,0xe1
  414c61:	mov    eax,0x3e9fad5e
  414c66:	aaa    
  414c67:	and    DWORD PTR [esi],esi
  414c69:	add    bh,BYTE PTR [eax+0x81e63]
  414c6f:	and    BYTE PTR [edi-0x6898dc42],dl
  414c75:	dec    edx
  414c76:	sar    dl,0x1e
  414c79:	test   DWORD PTR [ebx+0x6b],eax
  414c7c:	pop    esi
  414c7d:	aas    
  414c7e:	mov    bl,BYTE PTR [edi]
  414c80:	cli    
  414c81:	pop    es
  414c82:	cmp    DWORD PTR [edi+0x63fffff9],0x64744299
  414c8c:	popf   
  414c8d:	sub    ebx,DWORD PTR ds:[edi+0x1e]
  414c91:	add    al,bl
  414c93:	fcomp  DWORD PTR [ecx+0x1e5f43de]
  414c99:	add    cl,BYTE PTR [ebx+0x3c241f7]
  414c9f:	arpl   WORD PTR [esi],bx
  414ca1:	mov    cl,0x8a
  414ca3:	fild   WORD PTR [ecx-0x3e]
  414ca6:	add    esp,DWORD PTR [ebx+0x1e]
  414ca9:	mov    al,0x8a
  414cab:	xlat   BYTE PTR ds:[ebx]
  414cac:	inc    ecx
  414cad:	(bad)  
  414cae:	add    esp,DWORD PTR [ebx+0x1e]
  414cb1:	mov    bl,0x4f
  414cb3:	fsub   DWORD PTR [ecx+0x1e5f3fe7]
  414cb9:	add    dl,BYTE PTR [edx-0x4d]
  414cbc:	test   eax,0x347b23bf
  414cc1:	mov    bl,0xf4
	...
  414ccf:	add    BYTE PTR [eax],al
  414cd1:	add    BYTE PTR [esp+ecx*2-0x7c],cl
  414cd5:	ret    
  414cd6:	ja     0x414cf0
  414cd8:	add    al,BYTE PTR [eax]
  414cda:	and    BYTE PTR [ecx+0x3f],ch
  414cdd:	retf   
  414cde:	daa    
  414cdf:	push   es
  414ce0:	mov    ch,0x40
  414ce2:	sbb    BYTE PTR [edx],bh
  414ce4:	lods   al,BYTE PTR ds:[esi]
  414ce5:	inc    eax
  414ce6:	sbb    BYTE PTR [edx],bh
  414ce8:	cmp    edi,DWORD PTR [ebp+0x7]
  414ceb:	test   DWORD PTR [esp+edx*1+0x14],edi
  414cef:	or     ebp,eax
  414cf1:	mov    dh,0xb6
  414cf3:	mov    dl,0x71
  414cf5:	mov    ecx,0x391d45c
  414cfa:	mov    ch,0x56
  414cfc:	dec    eax
  414cfd:	ret    0x5a3
  414d00:	jo     0x414d16
  414d02:	and    ecx,DWORD PTR [esi]
  414d04:	jmp    0xf942fa0b
  414d09:	jl     0x414cde
  414d0b:	xchg   BYTE PTR [edi+0xb],al
  414d0e:	fs push edx
  414d10:	je     0x414d0f
  414d12:	jl     0x414ccf
  414d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d15:	add    ebx,esi
  414d17:	cmp    eax,0xfa9378e5
  414d1c:	jbe    0x414d63
  414d1e:	fadd   st(1),st
  414d20:	add    edi,DWORD PTR [ecx+eiz*1]
  414d23:	xchg   BYTE PTR [ecx],ah
  414d25:	int3   
  414d26:	sub    BYTE PTR [edi+edx*8],dh
  414d29:	xor    eax,0xff8b8606
  414d2e:	arpl   WORD PTR [eax+0x129c7cf2],dx
  414d34:	and    BYTE PTR [ecx+0x0],al
	...
  414d42:	add    BYTE PTR [eax],al
  414d44:	add    BYTE PTR [eax],bl
  414d46:	add    eax,0x78611ed7
  414d4b:	fdivr  st(5),st
  414d4d:	out    0x8c,eax
  414d4f:	out    0x86,eax
  414d51:	ror    BYTE PTR [eax-0x8],0x12
  414d55:	gs or  ch,al
  414d58:	xchg   BYTE PTR [eax],al
  414d5a:	js     0x414d54
  414d5c:	adc    dl,BYTE PTR [ebp+0xa]
  414d5f:	call   0x773b7738
  414d64:	test   DWORD PTR [ebx+edi*4],ebp
  414d67:	jmp    DWORD PTR [edi]
  414d69:	addr16 js 0x414d9f
  414d6c:	rcr    ebp,1
  414d6e:	pop    es
  414d6f:	sbb    esp,DWORD PTR [ebp*1+0x68d4437c]
  414d76:	add    BYTE PTR [ebx-0xc],0x90
  414d7a:	pop    ds
  414d7b:	pop    es
  414d7c:	arpl   WORD PTR [ecx+edx*8],bx
  414d7f:	stos   DWORD PTR es:[edi],eax
  414d80:	jno    0x414da6
  414d82:	jmp    0xf1d7816
  414d87:	sbb    esi,ebp
  414d89:	dec    edi
  414d8a:	dec    edi
  414d8b:	sbb    ebp,ecx
  414d8d:	pusha  
  414d8e:	add    eax,0x31e69f0f
  414d93:	dec    ebp
  414d94:	test   al,0x60
  414d96:	js     0x414dcb
  414d98:	icebp  
  414d99:	in     eax,0x7
  414d9b:	aaa    
  414d9c:	int3   
  414d9d:	(bad)  
  414d9e:	jnp    0x414de3
  414da0:	cld    
  414da1:	mov    BYTE PTR [edx+0x1f50dc43],al
  414da7:	pop    es
  414da8:	arpl   WORD PTR [eax],ax
	...
  414db6:	add    BYTE PTR [eax],al
  414db8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414db9:	shr    BYTE PTR [ebx-0x7017639f],1
  414dbf:	stos   BYTE PTR es:[edi],al
  414dc0:	in     eax,0xe
  414dc2:	aaa    
  414dc3:	popf   
  414dc4:	ja     0x414d9b
  414dc6:	(bad)  
  414dc8:	cmp    al,BYTE PTR [edi+0x99f9fe7]
  414dce:	jle    0x414d55
  414dd0:	pop    ebx
  414dd1:	jne    0x414dd2
  414dd3:	je     0x414e37
  414dd5:	jle    0x414dda
  414dd7:	push   esp
  414dd8:	mov    al,ds:0x77e940b7
  414ddd:	test   DWORD PTR [ecx+edi*8-0x1101f4ad],ecx
  414de4:	or     al,BYTE PTR [edi+0x92025ff]
  414dea:	jle    0x414e39
  414dec:	pop    esp
  414ded:	jne    0x414dee
  414def:	dec    DWORD PTR [esi-0x58fb74fd]
  414df5:	inc    ecx
  414df6:	dec    esp
  414df7:	inc    ecx
  414df8:	dec    edx
  414df9:	or     al,0x82
  414dfb:	mov    ebp,0xfffdf61a
  414e00:	jns    0x414d84
  414e02:	stc    
  414e03:	sbb    BYTE PTR [esi-0x41],al
  414e06:	inc    eax
  414e07:	xor    eax,0x11
  414e0a:	or     eax,0xfdf6308c
  414e0f:	call   DWORD PTR [edi-0x7a00f180]
  414e15:	test   BYTE PTR [esi-0x18],0x3
  414e19:	add    eax,0x0
	...
  414e2a:	add    BYTE PTR [ebp+0x53],ah
  414e2d:	pop    ecx
  414e2e:	mov    DWORD PTR [esi-0x5f73fa8],edx
  414e34:	dec    edi
  414e35:	xchg   ebp,esp
  414e37:	dec    ebx
  414e38:	in     eax,0x7e
  414e3a:	add    dl,cl
  414e3c:	add    al,0x53
  414e3e:	push   esi
  414e3f:	in     eax,dx
  414e40:	mov    DWORD PTR [ebx+0x8],eax
  414e43:	aaa    
  414e44:	push   eax
  414e45:	jle    0x414e00
  414e47:	call   0x81c2:0x43000004
  414e4e:	sar    BYTE PTR [esi+0x5c813189],0x1
  414e55:	add    ah,bh
  414e57:	mov    al,bl
  414e59:	in     al,0x6
  414e5b:	add    DWORD PTR [edx],edi
  414e5d:	jg     0x414e46
  414e5f:	cmp    al,BYTE PTR [esi]
  414e61:	add    BYTE PTR [eax],al
  414e63:	cmp    ebx,esi
  414e65:	or     BYTE PTR [ecx],cl
  414e67:	je     0x414df2
  414e69:	sbb    DWORD PTR ss:[ebp+0x1],0xc37afc00
  414e71:	in     eax,dx
  414e72:	or     dh,BYTE PTR [ebx-0xa]
  414e75:	xchg   DWORD PTR [edx],esi
  414e77:	arpl   WORD PTR [ebp+0x22218238],sp
  414e7d:	jnp    0x414eb6
  414e7f:	loop   0x414eb7
  414e81:	inc    edx
  414e82:	push   cs
  414e83:	arpl   WORD PTR [esi],bx
  414e85:	inc    ecx
  414e86:	out    dx,al
  414e87:	gs and edx,eax
  414e8a:	mov    BYTE PTR [ebp-0x5d],dh
  414e8d:	rol    DWORD PTR [eax+0x0],cl
	...
  414e9b:	add    BYTE PTR [eax],al
  414e9d:	add    BYTE PTR [ebp+0x1e],al
  414ea0:	adc    al,BYTE PTR [edx]
  414ea2:	arpl   WORD PTR [ebp+0x28],bx
  414ea5:	or     ebp,eax
  414ea7:	adc    al,BYTE PTR [ebx+0x235d54e2]
  414ead:	cvtps2pd xmm4,QWORD PTR [eax+0x7b]
  414eb1:	pop    ss
  414eb2:	loop   0x414f2e
  414eb4:	add    dh,al
  414eb6:	pusha  
  414eb7:	push   ds
  414eb8:	inc    ecx
  414eb9:	jmp    0x9531:0x8830255f
  414ec0:	xor    eax,DWORD PTR [edx+0x2f7b2221]
  414ec6:	loopne 0x414e7f
  414ec8:	iret   
  414ec9:	or     dl,BYTE PTR [eax-0x1fb72c5b]
  414ecf:	fld    QWORD PTR [esi]
  414ed1:	test   DWORD PTR [edx+0x268c8850],ebx
  414ed7:	sahf   
  414ed8:	mov    dl,0xe7
  414eda:	jl     0x414efa
  414edc:	add    al,BYTE PTR [eax]
  414ede:	or     al,0x40
  414ee0:	stos   DWORD PTR es:[edi],eax
  414ee1:	mov    BYTE PTR [edi+0x63034448],dh
  414ee7:	mov    ds:0xb45f23c6,eax
  414eec:	push   0x4b
  414eee:	and    bl,BYTE PTR [esi]
  414ef0:	jnp    0x414efb
  414ef2:	ficom  DWORD PTR ds:0x9b67c183
  414ef8:	inc    edx
  414ef9:	add    esp,edx
  414efb:	adc    ebp,ecx
  414efd:	dec    esp
  414efe:	and    al,BYTE PTR ds:0x91e9
	...
  414f10:	add    BYTE PTR [esi+0x42],dh
  414f13:	in     al,0x3
  414f15:	call   0x19495bdb
  414f1a:	outs   dx,BYTE PTR ds:[esi]
  414f1b:	sbb    al,0xc5
  414f1d:	dec    esp
  414f1e:	jl     0x414f10
  414f20:	jl     0x414f7c
  414f22:	sub    BYTE PTR [eax-0x13bc1ff8],0x84
  414f29:	cmp    ch,dh
  414f2b:	sbb    eax,ebp
  414f2d:	sub    al,0x95
  414f2f:	xchg   esi,eax
  414f30:	inc    edx
  414f31:	pusha  
  414f32:	add    eax,0xb6077d34
  414f37:	cmp    BYTE PTR [ebx+0x7ae0c0e9],dh
  414f3d:	scas   eax,DWORD PTR es:[edi]
  414f3e:	stc    
  414f3f:	jae    0x414efa
  414f41:	or     al,0xb4
  414f43:	sbb    BYTE PTR [ebx*2-0x74fc16fb],bl
  414f4a:	ins    DWORD PTR es:[edi],dx
  414f4b:	sbb    al,0xc5
  414f4d:	in     al,dx
  414f4e:	jns    0x414efb
  414f50:	or     edx,DWORD PTR [ebp+ebx*1+0x563042f]
  414f57:	mov    edx,0xb80d1f80
  414f5c:	sbb    edi,DWORD PTR [eax*1+0x7c2803e9]
  414f63:	dec    esp
  414f64:	mov    cl,0xa2
  414f66:	std    
  414f67:	call   0x503391e
  414f6c:	cld    
  414f6d:	fnstenv [ecx+0x44dbffcc]
  414f73:	test   al,0xfe
	...
  414f81:	add    BYTE PTR [eax],al
  414f83:	add    dh,dl
  414f85:	cld    
  414f86:	daa    
  414f87:	and    eax,0x7ce27c6c
  414f8c:	mov    ds:0x5b55f5c5,eax
  414f91:	inc    esp
  414f92:	pop    es
  414f93:	hlt    
  414f94:	imul   edi,ebx,0x7d795fff
  414f9a:	shr    BYTE PTR [ecx-0x57f7af93],0x3f
  414fa1:	dec    BYTE PTR [edx]
  414fa3:	repz (bad) 
  414fa6:	mov    BYTE PTR [eax+0x600343e1],bh
  414fac:	mov    eax,ds:0x397f0ec6
  414fb1:	std    
  414fb2:	sbb    BYTE PTR [eax-0x59],dh
  414fb5:	(bad)  
  414fb6:	push   cs
  414fb7:	jg     0x414ff0
  414fb9:	inc    ebp
  414fba:	loopne 0x414f8d
  414fbc:	scas   eax,DWORD PTR es:[edi]
  414fbd:	cld    
  414fbe:	mov    BYTE PTR [eax-0xf4a08e0],ch
  414fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fc5:	and    eax,0x7d1ae20f
  414fca:	or     DWORD PTR [eax-0x59],esp
  414fcd:	(bad)  
  414fce:	push   cs
  414fcf:	aas    
  414fd0:	pop    es
  414fd1:	inc    ebp
  414fd2:	loopne 0x414fc5
  414fd4:	stc    
  414fd5:	sti    
  414fd6:	push   cs
  414fd7:	aas    
  414fd8:	pusha  
  414fd9:	cld    
  414fda:	shl    BYTE PTR [eax-0x16],0xaa
  414fde:	shl    ecx,0x60
  414fe1:	mov    dl,0x8a
  414fe3:	mov    ch,0xc4
  414fe5:	std    
  414fe6:	mov    ah,BYTE PTR [ebp+0x0]
	...
  414ff4:	add    BYTE PTR [eax],al
  414ff6:	add    BYTE PTR [ecx+edi*8+0x1e27eb8a],bh
  414ffd:	pop    ss
  414ffe:	jno    0x41505f
  415000:	les    ecx,FWORD PTR [edx+0xf1e27eb]
  415006:	popa   
  415007:	pop    edi
  415008:	les    ecx,FWORD PTR [edx+0x71e27eb]
  41500e:	jno    0x41506f
  415010:	les    ecx,FWORD PTR [eax-0x308358ce]
  415016:	push   0x22
  415018:	add    cl,BYTE PTR [ebx-0x74fcf717]
  41501e:	add    BYTE PTR [eax-0x40],bh
  415021:	out    0x18,al
  415023:	repnz add BYTE PTR [ecx-0x75],al
  415027:	mov    al,al
  415029:	out    0x10,al
  41502b:	add    al,BYTE PTR [ecx]
  41502d:	inc    ecx
  41502e:	mov    edi,DWORD PTR [eax-0x3e]
  415031:	out    0x8,al
  415033:	ror    BYTE PTR [eax],cl
  415035:	aas    
  415036:	mov    ebx,DWORD PTR [eax-0x7f]
  415039:	int    0x88
  41503b:	cmp    ebp,DWORD PTR [esi-0x43c5f741]
  415041:	mov    ch,ah
  415043:	leave  
  415044:	and    eax,0xba545309
  415049:	mov    al,BYTE PTR [ebp+0xe]
  41504c:	jle    0x4150a2
  41504e:	or     BYTE PTR [ecx+0x124d8af7],dh
  415054:	jle    0x41509e
  415056:	add    al,0x83
  415058:	ss shr bl,0x0
	...
  415068:	add    BYTE PTR [eax],al
  41506a:	push   es
  41506b:	fmul   st,st(2)
  41506d:	sbb    ecx,0xd0f0f02
  415073:	fcomp  st(0)
  415075:	mov    esp,ecx
  415077:	dec    eax
  415078:	jecxz  0x41507e
  41507a:	stos   DWORD PTR es:[edi],eax
  41507b:	push   ss
  41507c:	mov    dh,dl
  41507e:	cmp    esp,DWORD PTR [ebx]
  415080:	or     eax,0xf2808c31
  415085:	sub    DWORD PTR [ecx],0xba00fe12
  41508b:	xlat   BYTE PTR ds:[ebx]
  41508c:	fmul   DWORD PTR [ecx+0x10e3487c]
  415092:	mov    ebx,0x8bce8816
  415097:	and    edi,edi
  415099:	xor    BYTE PTR [eax+eax*4-0xe],dl
  41509d:	sbb    DWORD PTR [ecx-0x2a],0xd7b93332
  4150a4:	xlat   BYTE PTR ds:[ebx]
  4150a5:	mov    DWORD PTR [ebx+0x3c],esp
  4150a8:	inc    ecx
  4150a9:	in     eax,0x61
  4150ab:	fst    QWORD PTR [edx]
  4150ad:	mov    BYTE PTR [ebp+0x32071e2d],dl
  4150b3:	sbb    al,0x79
  4150b5:	repnz loop 0x4150c7
  4150b8:	or     edi,edi
  4150ba:	ins    DWORD PTR es:[edi],dx
  4150bb:	out    dx,al
  4150bc:	rcr    cl,cl
  4150be:	fcmove st,st(4)
  4150c0:	inc    edx
  4150c1:	in     eax,0x6b
  4150c3:	sbb    eax,0xdace883e
  4150c8:	add    dh,dh
  4150ca:	fcom   DWORD PTR [eax+0x10]
  4150cd:	rol    BYTE PTR [eax],0x0
	...
  4150dc:	add    BYTE PTR [ebx+ebp*8],dh
  4150df:	and    dh,0x62
  4150e2:	jne    0x4150f6
  4150e4:	or     BYTE PTR [edx],bh
  4150e6:	xor    esi,DWORD PTR gs:[eax]
  4150e9:	sbb    eax,0x40801065
  4150ee:	pop    eax
  4150ef:	push   edi
  4150f0:	test   eax,0x3027dcc9
  4150f5:	cmp    ch,BYTE PTR [ecx-0x2b]
  4150f8:	adc    edx,ebx
  4150fa:	mov    edx,0x6f64ee42
  4150ff:	and    al,0x0
  415101:	jmp    0xc31:0x1cf9fa7f
  415108:	pop    es
  415109:	arpl   si,bp
  41510b:	add    DWORD PTR [ecx+0x1b232d15],ecx
  415111:	jmp    0x1065:0x5fee4232
  415118:	or     al,cl
  41511a:	fs inc ebx
  41511c:	and    BYTE PTR [ebx-0x15e22f0f],0x23
  415123:	and    ch,0x74
  415126:	addr16 aad 0xb4
  415129:	dec    ebx
  41512a:	cdq    
  41512b:	ret    0xdbff
  41512e:	add    al,0x46
  415130:	inc    edx
  415131:	lea    ecx,[edx]
  415133:	push   0xe7049824
  415138:	add    ebx,DWORD PTR [eax-0x44]
  41513b:	out    dx,eax
  41513c:	mov    al,0x23
  41513e:	add    eax,0x2c70
	...
  41514f:	add    BYTE PTR [ebx+0x7d82edf3],ah
  415155:	add    al,ch
  415157:	add    esp,DWORD PTR [ebx+0x10]
  41515a:	ss jmp 0x415170
  41515d:	inc    esi
  41515e:	out    0x7c,eax
  415160:	cmp    eax,0xe3f2cec5
  415165:	jmp    0x52e2:0x56304d3
  41516c:	ins    BYTE PTR es:[edi],dx
  41516d:	push   edx
  41516e:	sub    BYTE PTR [edx+ebp*8],al
  415171:	js     0x415126
  415173:	jge    0x415193
  415175:	xchg   DWORD PTR [edi-0x5312600],esp
  41517b:	jmp    0x22ac355b
  415180:	pop    ebp
  415181:	mov    ss,ebx
  415183:	push   eax
  415184:	ins    BYTE PTR es:[edi],dx
  415185:	pop    ebx
  415186:	sub    BYTE PTR [eax+ebx*2],al
  415189:	js     0x41511e
  41518b:	jge    0x4151b2
  41518d:	lds    edx,FWORD PTR [esi+0x7beae202]
  415193:	add    al,0x63
  415195:	add    eax,0x595452e2
  41519a:	sub    BYTE PTR [edx+ebx*8],al
  41519d:	loop   0x4151c7
  41519f:	sbb    ebp,DWORD PTR [esi-0x7c]
  4151a2:	inc    esi
  4151a3:	or     ah,dl
  4151a5:	add    ch,al
  4151a7:	(bad)  
  4151a8:	adc    eax,0xc4c4b91e
  4151ad:	lea    esp,[esi]
  4151af:	inc    ebp
  4151b0:	int    0x1b
  4151b2:	push   0x23
	...
  4151c3:	mov    eax,0x60e90005
  4151c8:	push   cs
  4151c9:	mov    ch,0xd1
  4151cb:	lock inc ebp
  4151cd:	add    al,bl
  4151cf:	jbe    0x41515e
  4151d1:	(bad)  
  4151d2:	sub    BYTE PTR [ecx+0x1e],al
  4151d5:	xchg   DWORD PTR [esi],edi
  4151d7:	es repz add al,0x60
  4151db:	ins    BYTE PTR es:[edi],dx
  4151dc:	or     eax,0x872170f9
  4151e1:	shl    ch,0x8d
  4151e4:	and    BYTE PTR [edi+0x3de8e417],al
  4151ea:	bound  edx,QWORD PTR [ebx+0x263c18b9]
  4151f0:	add    cl,BYTE PTR [ecx+0x6f39fbe]
  4151f6:	push   0xe900fe81
  4151fb:	pusha  
  4151fc:	push   cs
  4151fd:	mov    ch,0xe1
  4151ff:	cmc    
  415200:	inc    esp
  415201:	add    BYTE PTR [eax-0x77],dh
  415204:	(bad)
  415207:	out    0xea,eax
  415209:	cld    
  41520a:	jmp    0x5e4a576f
  41520f:	or     BYTE PTR [ebp+0x3f],dl
  415212:	jmp    0x870135ae
  415217:	adc    al,BYTE PTR [ebp+0x5608de5]
  41521d:	add    dl,dh
  41521f:	xchg   ecx,eax
  415220:	sbb    cl,BYTE PTR [ebp+0x28]
  415223:	pop    edi
  415224:	mov    WORD PTR [ebx+0x7d],?
	...
  415233:	add    BYTE PTR [eax],al
  415235:	add    BYTE PTR [edi-0x38],ch
  415238:	sub    DWORD PTR [ecx+0x1ad18ce4],0x6ade8cc9
  415242:	add    BYTE PTR [ebx-0x77],0x1d
  415246:	xor    bl,BYTE PTR [edx]
  415248:	push   esi
  415249:	test   al,0x60
  41524b:	push   cs
  41524c:	jae    0x41524e
  41524e:	jle    0x4151d1
  415250:	faddp  st(1),st
  415252:	and    eax,0x76e77f04
  415257:	push   es
  415258:	add    BYTE PTR [eax],al
  41525a:	rcl    DWORD PTR [esi+0x15],0x54
  41525e:	retf   
  41525f:	add    eax,0x1f4bdf87
  415264:	or     eax,DWORD PTR [ecx-0x2f5a3]
  41526a:	jp     0x41526e
  41526c:	mov    bh,0x18
  41526e:	fmul   st,st(0)
  415270:	std    
  415271:	mov    BYTE PTR [ebp+0x49],dl
  415274:	out    dx,al
  415275:	push   ss
  415276:	sti    
  415277:	es stc 
  415279:	add    BYTE PTR [edx+0x5],bh
  41527c:	or     DWORD PTR [edi+0x40b962],esi
  415282:	jnp    0x415298
  415284:	dec    BYTE PTR [ebp+0x32]
  415287:	mov    edi,DWORD PTR [eax+edi*8+0x3a]
  41528b:	inc    BYTE PTR [ebx+ebp*4-0x7601f0dc]
  415292:	repnz inc esp
  415294:	fstp   QWORD PTR [edi]
  415296:	ret    
  415297:	cmp    edx,eax
  415299:	out    dx,al
	...
  4152a6:	add    BYTE PTR [eax],al
  4152a8:	add    bl,al
  4152aa:	inc    esp
  4152ab:	or     cl,dh
  4152ad:	xchg   ebx,eax
  4152ae:	cmp    DWORD PTR [eax],esi
  4152b0:	enter  0x4a93,0x80
  4152b4:	jecxz  0x415256
  4152b6:	pop    edi
  4152b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152b8:	stos   BYTE PTR es:[edi],al
  4152b9:	sub    esi,DWORD PTR [ebx]
  4152bb:	xor    cl,bl
  4152bd:	jae    0x4152f8
  4152bf:	shl    al,0x15
  4152c2:	jl     0x415297
  4152c4:	shl    esp,1
  4152c6:	jl     0x415287
  4152c8:	or     DWORD PTR [eax+0x7c],ebp
  4152cb:	int    0xc1
  4152cd:	xor    al,BYTE PTR [ecx]
  4152cf:	xor    eax,ecx
  4152d1:	push   ebx
  4152d2:	dec    edx
  4152d3:	and    bl,0x63
  4152d6:	push   edi
  4152d7:	add    al,0xff
  4152d9:	arpl   WORD PTR ds:0x2d9b8829,bx
  4152df:	and    al,0x7
  4152e1:	jb     0x41530f
  4152e3:	jns    0x4152b4
  4152e5:	mov    ds:0x9b310646,al
  4152ea:	gs inc ebx
  4152ec:	add    BYTE PTR [eax+0x5032d4db],0xdd
  4152f3:	sub    cl,BYTE PTR [eax+0x1242dab]
  4152f9:	push   edx
  4152fa:	sub    al,0x79
  4152fc:	(bad)  
  4152fd:	mov    ds:0x9330f416,al
  415302:	jne    0x415347
  415304:	add    BYTE PTR [eax+0x64ff08f7],0xbd
  41530b:	sub    ecx,DWORD PTR [eax+0x0]
	...
  415319:	add    BYTE PTR [eax],al
  41531b:	add    BYTE PTR [ebx],bh
  41531d:	lods   eax,DWORD PTR ds:[esi]
  41531e:	and    DWORD PTR [edi],ecx
  415320:	xchg   edx,eax
  415321:	lods   eax,DWORD PTR ds:[esi]
  415322:	jp     0x4152eb
  415324:	and    al,dh
  415326:	std    
  415327:	xor    BYTE PTR [ebx],dh
  415329:	gs inc esp
  41532b:	add    BYTE PTR [eax-0x9],0xf8
  41532f:	push   cs
  415330:	fs std 
  415332:	sub    ecx,DWORD PTR [edx-0x1dbd195a]
  415338:	pop    edi
  415339:	std    
  41533a:	cmp    al,0x88
  41533c:	jnp    0x4153a9
  41533e:	mov    esi,0xbe735f07
  415343:	pop    es
  415344:	(bad)  
  415346:	test   al,0x5d
  415348:	test   al,0x65
  41534a:	adc    eax,0x1f6215c
  41534f:	push   ebx
  415350:	lea    esi,[ebx-0x5b]
  415353:	and    ebx,DWORD PTR [edi+0x10]
  415356:	jnp    0x4153cb
  415358:	aas    
  415359:	ficomp WORD PTR [edi-0x9fb2a7c]
  41535f:	outs   dx,DWORD PTR ds:[esi]
  415360:	mov    bl,0xf
  415362:	xchg   ebp,eax
  415363:	inc    edx
  415364:	pop    ebp
  415365:	mov    eax,0x43d7b327
  41536a:	fbstp  TBYTE PTR [ebx+0x84159c4]
  415370:	mov    ch,0x6c
  415372:	fbstp  TBYTE PTR [esi-0x3c0fadd]
  415378:	test   al,0xff
  41537a:	cs clc 
  41537c:	aad    0xf6
  41537e:	mov    ebp,0xb4
	...
  41538f:	jl     0x4153d6
  415391:	and    DWORD PTR [eax],ecx
  415393:	lea    ebp,[edi+ebp*2-0x4a]
  415397:	and    eax,DWORD PTR ds:0xff790fff
  41539d:	push   es
  41539e:	test   eax,0x3efc319
  4153a3:	push   ss
  4153a4:	mov    cs,WORD PTR [ebx+esi*4]
  4153a7:	adc    al,0x54
  4153a9:	bound  edi,QWORD PTR [esi-0x7bb759c]
  4153af:	out    0x58,eax
  4153b1:	fbstp  TBYTE PTR [edx+0x824ed9c]
  4153b7:	inc    ebp
  4153b8:	(bad)  
  4153b9:	aas    
  4153ba:	ins    BYTE PTR es:[edi],dx
  4153bb:	test   al,0x44
  4153bd:	out    0x78,eax
  4153bf:	lahf   
  4153c0:	std    
  4153c1:	pop    ss
  4153c2:	sbb    al,0x35
  4153c4:	add    dh,BYTE PTR [edi+0x1c1dbc07]
  4153ca:	lds    ebx,FWORD PTR [edx+edx*4]
  4153cd:	sub    al,0xc
  4153cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153d0:	in     eax,dx
  4153d1:	nop
  4153d2:	or     BYTE PTR ds:0x976bffff,cl
  4153d8:	inc    esp
  4153d9:	out    0x78,eax
  4153db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153dc:	std    
  4153dd:	pop    ss
  4153de:	sbb    al,0x19
  4153e0:	add    bh,BYTE PTR [edi+0x7]
  4153e3:	xchg   ecx,eax
  4153e4:	nop
  4153e5:	add    BYTE PTR [edi+edx*2],ch
  4153e8:	dec    esi
  4153e9:	call   0xfe40bf59
  4153ee:	ret    0xea57
  4153f1:	pop    ebx
  4153f2:	sub    eax,DWORD PTR [eax]
	...
  415400:	add    BYTE PTR [eax],al
  415402:	iret   
  415403:	(bad)  
  415404:	push   esp
  415405:	pusha  
  415406:	add    BYTE PTR [ebx+0x58f1f9ec],0x89
  41540d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41540e:	mov    eax,0x2bed738b
  415413:	dec    ecx
  415414:	clc    
  415415:	cdq    
  415416:	icebp  
  415417:	out    0xfa,al
  415419:	xor    ah,BYTE PTR [edi+edi*8-0x75]
  41541d:	lods   al,BYTE PTR ds:[esi]
  41541e:	jo     0x41546e
  415420:	sub    DWORD PTR [edx],0x4e8538f
  415426:	pop    eax
  415427:	(bad)  
  415428:	std    
  415429:	or     DWORD PTR [eax],0xfbe93f4a
  41542f:	dec    eax
  415430:	clc    
  415431:	cdq    
  415432:	dec    eax
  415433:	xchg   edi,eax
  415434:	cld    
  415435:	neg    BYTE PTR [ebp+0x66]
  415438:	cwde   
  415439:	popf   
  41543a:	daa    
  41543b:	dec    BYTE PTR [esp+ebp*1+0x70e84e6f]
  415442:	fs (bad) 
  415444:	std    
  415445:	(bad)  
  415446:	sti    
  415447:	stc    
  415448:	mov    DWORD PTR [edi+edx*2],esp
  41544b:	lea    eax,[ebx-0x3b]
  41544e:	mov    bh,0x61
  415450:	lock push ecx
  415452:	aas    
  415453:	push   ecx
  415454:	aas    
  415455:	jmp    0x1a399e05
  41545a:	jg     0x4154cb
  41545c:	cld    
  41545d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41545e:	pop    ebp
  41545f:	data16 sbb BYTE PTR [esi+eiz*1],ch
  415463:	dec    BYTE PTR [esp+ebp*1+0x0]
	...
  415472:	add    BYTE PTR [eax],al
  415474:	add    BYTE PTR [edi+0x4e],ch
  415477:	call   0xfe40bf84
  41547c:	add    BYTE PTR [ecx-0x53],dh
  41547f:	stc    
  415480:	mov    eax,DWORD PTR [edi+0x19]
  415483:	mov    BYTE PTR [ebp+0x6e],al
  415486:	sbb    DWORD PTR [eax+esi*8+0x62],0xca414c71
  41548e:	jl     0x4154d4
  415490:	clc    
  415491:	or     bl,BYTE PTR [edx]
  415493:	inc    esi
  415494:	cld    
  415495:	sub    eax,0xdf986507
  41549a:	enter  0x8cfd,0x7
  41549e:	adc    cl,BYTE PTR [ebp-0x18]
  4154a1:	arpl   WORD PTR ds:0x7cc4fffe,cx
  4154a7:	inc    esp
  4154a8:	clc    
  4154a9:	cli    
  4154aa:	sbb    ebp,ebx
  4154ac:	sti    
  4154ad:	cmp    eax,0x92c68207
  4154b2:	scas   eax,DWORD PTR es:[edi]
  4154b3:	mov    WORD PTR [ebp+0x6a],es
  4154b6:	mov    dl,0xe5
  4154b8:	rcl    DWORD PTR [ecx+0x7],cl
  4154bb:	(bad)  
  4154bc:	pop    esi
  4154bd:	rol    DWORD PTR [eax-0x5c7a217],0xfd
  4154c4:	push   esp
  4154c5:	add    esp,DWORD PTR ds:0x1beec80
  4154cb:	add    BYTE PTR [eax],al
  4154cd:	cdq    
  4154ce:	stos   DWORD PTR es:[edi],eax
  4154cf:	push   esi
  4154d0:	mov    ecx,DWORD PTR [edi+0x3e758af9]
  4154d6:	je     0x41545c
  4154d8:	add    BYTE PTR [eax],0x0
	...
  4154e7:	add    BYTE PTR [ebx+eax*1],ch
  4154ea:	(bad)  
  4154eb:	push   eax
  4154ec:	adc    al,BYTE PTR [ebp+0x0]
  4154ef:	add    BYTE PTR [edx],bh
  4154f1:	lahf   
  4154f2:	std    
  4154f3:	adc    dh,BYTE PTR [bp+di+0x40]
  4154f8:	and    bh,BYTE PTR [ecx-0x5]
  4154fb:	(bad)  
  4154fc:	mov    ebp,0x788acfd8
  415501:	jmp    0xeea49651
  415506:	jns    0x41550b
  415508:	xor    DWORD PTR [eax],esi
  41550a:	jg     0x415505
  41550c:	imul   eax,DWORD PTR [edx],0x11
  41550f:	(bad)  
  415510:	out    0x6,al
  415512:	push   es
  415513:	(bad)  
  415514:	in     al,0xed
  415516:	add    DWORD PTR [eax],eax
  415518:	arpl   WORD PTR [edi+0x75d388b0],ax
  41551e:	jge    0x415593
  415520:	int    0x5b
  415522:	add    esi,DWORD PTR [eax]
  415524:	mov    cl,0x47
  415526:	aam    0x8a
  415528:	out    0xd2,al
  41552a:	add    edi,esi
  41552c:	mov    ah,0x75
  41552e:	jge    0x4155ab
  415530:	lods   eax,DWORD PTR ds:[esi]
  415531:	cmp    eax,DWORD PTR [ebx]
  415533:	(bad)  
  415534:	fidivr WORD PTR [edx+0x679cfe03]
  41553a:	jne    0x4155b7
  41553c:	xchg   ebp,eax
  41553d:	and    eax,DWORD PTR [ebx]
  41553f:	push   cs
  415540:	int    0xef
  415542:	sbb    bh,0x4
  415545:	addr16 inc ebp
  415547:	jnp    0x4155c6
  415549:	or     eax,DWORD PTR [ebx]
  41554b:	push   cs
	...
  415558:	add    BYTE PTR [eax],al
  41555a:	add    BYTE PTR [ebp-0x24082d3d],ch
  415560:	in     eax,dx
  415561:	cmp    eax,DWORD PTR [edx]
  415563:	arpl   WORD PTR [edi-0x19a67d41],bp
  415569:	xchg   BYTE PTR [ebx+eiz*8],al
  41556c:	es add al,0x75
  41556f:	and    eax,0xb8e7ae34
  415574:	aam    0x4
  415576:	(bad)  
  415577:	loopne 0x4154f9
  415579:	mov    ebp,edi
  41557b:	xor    al,0xc3
  41557d:	add    DWORD PTR [eax-0x59711198],eax
  415583:	loopne 0x4155f5
  415585:	mov    ebp,edi
  415587:	sbb    al,0xab
  415589:	add    DWORD PTR [ebp-0xb],esi
  41558c:	add    al,0x74
  41558e:	jle    0x41551c
  415590:	sti    
  415591:	sahf   
  415592:	add    al,0x94
  415594:	in     eax,dx
  415595:	push   cs
  415596:	add    esp,DWORD PTR [ebx+0x5]
  415599:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41559b:	cdq    
  41559c:	mov    ss,WORD PTR [ebx-0x18f2dd5a]
  4155a2:	scas   al,BYTE PTR es:[edi]
  4155a3:	fndisi(8087 only) 
  4155a5:	push   0xe705e817
  4155aa:	add    esi,DWORD PTR [eax]
  4155ac:	push   ebx
  4155ad:	mov    esi,0x720d2f78
  4155b2:	mov    ds,WORD PTR [eax-0x76]
  4155b5:	ins    BYTE PTR es:[edi],dx
  4155b6:	cmp    DWORD PTR [esi-0x434cb105],0xfffffffb
  4155bd:	out    0x3,eax
	...
  4155cb:	add    BYTE PTR [eax],al
  4155cd:	add    BYTE PTR [ebx+0x6f],ah
  4155d0:	out    0x9b,eax
  4155d2:	dec    esp
  4155d3:	dec    ebx
  4155d4:	test   al,0x3
  4155d6:	mov    edx,edi
  4155d8:	sub    al,0x4
  4155da:	xchg   ebp,eax
  4155db:	xor    eax,0x1ce27939
  4155e0:	lods   eax,DWORD PTR ds:[esi]
  4155e1:	ret    0x8384
  4155e4:	jmp    0x4155b7
  4155e6:	and    cl,BYTE PTR [eax-0xa070cef]
  4155ec:	cs jle 0x4155e3
  4155ef:	cli    
  4155f0:	inc    BYTE PTR [ebx]
  4155f2:	arpl   WORD PTR ds:0x524803e7,ax
  4155f8:	pusha  
  4155f9:	adc    ebp,ebx
  4155fb:	sbb    BYTE PTR [ebx+0x2],0x4d
  4155ff:	sti    
  415600:	sbb    dh,dl
  415602:	cmp    dh,BYTE PTR [esi]
  415604:	bound  ecx,QWORD PTR [ecx+0x3cefbb7]
  41560a:	jmp    0x41558c
  41560c:	inc    ebx
  41560d:	add    ch,BYTE PTR ds:0xaf89befb
  415613:	sti    
  415614:	add    BYTE PTR [esi+0x2d8b8f60],dh
  41561a:	popa   
  41561b:	sti    
  41561c:	std    
  41561d:	mul    BYTE PTR [edx]
  41561f:	add    eax,0x8ce08981
  415624:	mov    ebx,0xfdfb6115
  415629:	fidivr WORD PTR [edx-0x207ed0c8]
  41562f:	cli    
  415630:	ret    
  415631:	jmp    0x0:0x0
	...
  415640:	add    BYTE PTR [eax+0x44],ah
  415643:	inc    edx
  415644:	push   0xffffffdd
  415646:	adc    eax,0x3ce0e47b
  41564b:	add    ah,bl
  41564d:	call   0xfdf9:0x61515653
  415654:	push   esi
  415655:	in     al,0xa6
  415657:	js     0x4156a8
  415659:	pusha  
  41565a:	sti    
  41565b:	add    BYTE PTR [ecx+0x6c],ch
  41565e:	add    eax,0xbedc8673
  415663:	js     0x41569c
  415665:	pusha  
  415666:	sti    
  415667:	add    BYTE PTR [edx+eax*8+0x6169838e],dh
  41566e:	sti    
  41566f:	std    
  415670:	mov    ecx,0xe900a278
  415675:	pusha  
  415676:	pop    eax
  415677:	pop    esi
  415678:	mov    dl,0xe7
  41567a:	jmp    0x5a081da
  41567f:	push   ecx
  415680:	xchg   edi,eax
  415681:	or     DWORD PTR [esp+eax*2-0x769c8f33],ecx
  415688:	lea    edi,[ecx+edx*1+0x66]
  41568c:	ins    BYTE PTR es:[edi],dx
  41568d:	sub    eax,0x1a700976
  415692:	mov    ?,WORD PTR [eax-0x7]
  415695:	retf   0xffbf
  415698:	call   0xcc63e2
  41569d:	push   0x11
  41569f:	test   edi,eax
  4156a1:	pushf  
  4156a2:	xor    dl,dl
  4156a4:	sldt   WORD PTR [eax]
	...
  4156b3:	add    BYTE PTR [ebp-0x357cad30],bl
  4156b9:	or     eax,0xff7ee850
  4156be:	sti    
  4156bf:	push   DWORD PTR [edx+0x19]
  4156c2:	dec    ecx
  4156c3:	inc    ecx
  4156c4:	or     ch,dh
  4156c6:	cmp    bh,cl
  4156c8:	in     eax,0x6
  4156ca:	push   cs
  4156cb:	mov    bh,0xc1
  4156cd:	push   edx
  4156ce:	push   ebx
  4156cf:	call   0x3d55be
  4156d4:	bound  ebx,QWORD PTR [ecx-0x1235beb7]
  4156da:	es stc 
  4156dc:	inc    ebp
  4156dd:	pop    es
  4156de:	push   cs
  4156df:	mov    bh,0x21
  4156e1:	push   ebx
  4156e2:	push   esi
  4156e3:	call   0x3d55de
  4156e8:	add    eax,0xb2c25764
  4156ed:	add    eax,0x21c68b4f
  4156f2:	or     BYTE PTR [ebx+0x22],dl
  4156f5:	or     esi,ebp
  4156f7:	inc    DWORD PTR [ebp-0x7f]
  4156fa:	mov    edi,0x57a80
  4156ff:	mov    eax,0x3d5462
  415704:	add    DWORD PTR [esi],edx
  415706:	test   DWORD PTR [ebx],edx
  415708:	or     esi,eax
  41570a:	add    al,0x83
  41570c:	cmp    DWORD PTR [edx],eax
  41570e:	cmp    DWORD PTR [eax+0x720040b7],ebx
  415714:	gs mov esp,0x4d98
	...
  415726:	add    BYTE PTR [ebx],cl
  415728:	add    eax,0x12d31087
  41572d:	jg     0x4156ef
  41572f:	cmp    BYTE PTR ds:[edi+0x1c116304],0x4e
  415737:	mov    ds:0x88ed73ee,al
  41573c:	lods   al,BYTE PTR ds:[esi]
  41573d:	or     BYTE PTR [eax],al
  41573f:	nop
  415740:	jae    0x4157a2
  415742:	and    al,0x6b
  415744:	sbb    ebp,esp
  415746:	call   0x8040ff66
  41574b:	and    BYTE PTR [edi+0x4],ch
  41574e:	add    BYTE PTR [ebx+0x66],ah
  415751:	sbb    al,0x4b
  415753:	mov    ds:0xea118cee,al
  415758:	inc    BYTE PTR [ecx+eax*8+0x4c46b67]
  41575f:	es dec bp
  415762:	aas    
  415763:	arpl   sp,di
  415765:	lock mov eax,0x4119fb
  41576b:	fdivr  st,st(3)
  41576d:	mov    dl,BYTE PTR [eax]
  41576f:	loopne 0x41579c
  415771:	or     BYTE PTR [ecx+0x183eeaa3],al
  415777:	and    eax,0xbc7201ad
  41577c:	mov    ds:0x916304c3,eax
  415781:	mov    ah,bl
  415783:	loopne 0x4157c7
  415785:	sbb    al,0x51
  415787:	sub    eax,0x85d63
	...
  415798:	add    BYTE PTR [eax],al
  41579a:	fcomp  DWORD PTR [ecx+0x261e8b0d]
  4157a0:	push   esp
  4157a1:	push   ecx
  4157a2:	mov    eax,DWORD PTR [ecx]
  4157a4:	cld    
  4157a5:	std    
  4157a6:	je     0x415801
  4157a8:	inc    ebp
  4157a9:	lock adc esi,DWORD PTR [ecx+0x43]
  4157ad:	or     BYTE PTR [ebx],dl
  4157af:	push   ss
  4157b0:	in     al,0xf8
  4157b2:	pop    esp
  4157b3:	out    dx,eax
  4157b4:	mov    es,WORD PTR [ebx+0x4b]
  4157b7:	sahf   
  4157b8:	test   cl,al
  4157ba:	jae    0x4157c1
  4157bc:	cmp    ch,ah
  4157be:	xor    bh,ch
  4157c0:	fiadd  WORD PTR [eax]
  4157c2:	retf   0x239d
  4157c5:	inc    ebx
  4157c6:	arpl   WORD PTR [edx-0x126c03dc],cx
  4157cc:	inc    esp
  4157cd:	sti    
  4157ce:	es clc 
  4157d0:	dec    edi
  4157d1:	pushf  
  4157d2:	scas   eax,DWORD PTR es:[edi]
  4157d3:	inc    esi
  4157d4:	out    0x8e,eax
  4157d6:	mov    al,ds:0x7eec17f5
  4157db:	(bad)  
  4157dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157dd:	add    BYTE PTR [edx-0x63],bh
  4157e0:	sub    eax,DWORD PTR [ebx+0x63]
  4157e3:	mov    ch,BYTE PTR [esp+ebp*8]
  4157e6:	xchg   ebx,eax
  4157e7:	in     eax,dx
  4157e8:	or     bl,bh
  4157ea:	out    dx,al
  4157eb:	div    DWORD PTR [edx+0x5e]
  4157ee:	out    0x8b,eax
  4157f0:	and    al,0xf4
  4157f2:	in     al,0x41
  4157f4:	jae    0x415780
  4157f6:	cmp    ch,dh
  4157f8:	bound  ebx,QWORD PTR [esi-0x29]
  4157fb:	mov    ebp,DWORD PTR [ebx+ebp*8+0x0]
	...
  41580a:	add    BYTE PTR [eax],al
  41580c:	add    ah,bl
  41580e:	inc    ecx
  41580f:	push   ebx
  415810:	mov    bl,BYTE PTR [eax]
  415812:	in     eax,dx
  415813:	mov    edi,0xe746281b
  415818:	mov    fs,WORD PTR [eax]
  41581a:	std    
  41581b:	xchg   edi,eax
  41581c:	jmp    0x415888
  41581e:	(bad)  
  41581f:	add    BYTE PTR ds:[edx],cl
  415822:	sbb    eax,0x8a6342a4
  415827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415828:	repz xor ebp,ebp
  41582b:	aam    0xfa
  41582d:	xchg   bh,dh
  41582f:	(bad)  
  415830:	sbb    ebp,DWORD PTR [eax]
  415832:	inc    esi
  415833:	out    0x8e,eax
  415835:	and    ch,ch
  415837:	mov    bh,0xeb
  415839:	dec    esi
  41583a:	inc    BYTE PTR [esi]
  41583c:	add    cl,bl
  41583e:	pop    ecx
  41583f:	sti    
  415840:	mov    esp,DWORD PTR [eax-0x629fff0b]
  415846:	stc    
  415847:	xchg   DWORD PTR [eax+edx*2-0x2722a473],ecx
  41584e:	inc    edx
  41584f:	call   0x883302c4
  415854:	xor    al,0x47
  415856:	outs   dx,BYTE PTR ds:[esi]
  415857:	cwde   
  415858:	sbb    al,0xa6
  41585a:	add    eax,0x56272c8b
  41585f:	call   0xfe3a7824
  415864:	inc    ecx
  415865:	test   DWORD PTR [edx+0x3f],0xf042f3e9
  41586c:	cmp    edi,esi
  41586e:	in     al,dx
  41586f:	clc    
  415870:	sahf   
	...
  41587d:	add    BYTE PTR [eax],al
  41587f:	add    ah,bh
  415881:	ins    DWORD PTR es:[edi],dx
  415882:	cwde   
  415883:	and    al,0x9e
  415885:	add    eax,0x55ff248b
  41588a:	call   0xfe3a4033
  41588f:	pop    ss
  415890:	repnz inc edx
  415892:	clc    
  415893:	sbb    edi,eax
  415895:	cmp    eax,0x468acc6e
  41589b:	icebp  
  41589c:	xor    BYTE PTR [edx-0x12e8a6bd],cl
  4158a2:	jne    0x4158f5
  4158a4:	mov    ah,0xf8
  4158a6:	and    DWORD PTR [edi],0xac8b4f57
  4158ac:	mov    eax,0x98d3e855
  4158b1:	clc    
  4158b2:	std    
  4158b3:	xchg   edi,eax
  4158b4:	cmp    DWORD PTR [esi-0x14],edi
  4158b7:	mov    WORD PTR [edx-0x2843fff3],fs
  4158bd:	loop   0x41593e
  4158bf:	or     eax,0xe9fdf6d3
  4158c4:	adc    DWORD PTR [edi+0x55],ecx
  4158c7:	bound  eax,QWORD PTR [edx]
  4158c9:	or     eax,0x5e70089
  4158ce:	mov    DWORD PTR [ebp-0x40836],eax
  4158d4:	cli    
  4158d5:	jmp    0xf77f572e
  4158da:	push   0x0
  4158dc:	mov    dl,0x19
  4158de:	dec    esi
  4158df:	inc    ecx
  4158e0:	dec    edx
  4158e1:	jmp    0x0:0xfde5
	...
  4158f0:	add    BYTE PTR [eax],al
  4158f2:	add    BYTE PTR ds:0xc0d22df7,cl
  4158f8:	test   BYTE PTR [eax],bl
  4158fa:	dec    esi
  4158fb:	jnp    0x4158fe
  4158fd:	mov    BYTE PTR [eax+ebx*1],al
  415900:	inc    esp
  415901:	jg     0x4158fd
  415903:	xor    dh,BYTE PTR [esi-0x13]
  415906:	mov    DWORD PTR [edi-0x42000186],0xa000000
  415910:	jmp    0x415966
  415912:	mov    edx,ebx
  415914:	mov    BYTE PTR [ecx-0x409238c],al
  41591a:	xor    eax,ecx
  41591c:	jmp    0xfffe:0x6e478b30
  415923:	dec    ebp
  415924:	mov    DWORD PTR [ecx-0x408c384],eax
  41592a:	push   DWORD PTR [edi]
  41592c:	outs   dx,BYTE PTR ds:[esi]
  41592d:	(bad)  
  41592e:	call   FWORD PTR ds:0xc7c898b
  415934:	idiv   ebx
  415936:	paddusb mm0,QWORD PTR [edx]
  415939:	jg     0x41591b
  41593b:	popf   
  41593c:	mov    bh,BYTE PTR [ecx-0x408a384]
  415942:	unpcklps xmm6,XMMWORD PTR [edi]
  415945:	sub    eax,0xc60102f8
  41594a:	add    edi,DWORD PTR [edx+0x42]
  41594d:	inc    edx
  41594e:	add    DWORD PTR [eax+0x1a],0x79
  415952:	add    eax,0x3a6c63
	...
  415963:	add    BYTE PTR [eax],al
  415965:	add    dh,dh
  415967:	sbb    eax,0x8b7b5653
  41596c:	sti    
  41596d:	std    
  41596e:	pop    esp
  41596f:	pusha  
  415970:	test   al,0x78
  415972:	push   ebp
  415973:	cld    
  415974:	sti    
  415975:	add    bl,ah
  415977:	mov    bh,0x1
  415979:	jae    0x415977
  41597b:	pop    edi
  41597c:	mov    ebp,0xfbd43d78
  415981:	add    BYTE PTR [esi-0x1c7c7284],ch
  415987:	(bad)  
  415988:	sti    
  415989:	std    
  41598a:	xchg   ebx,eax
  41598b:	(bad)  
  41598c:	(bad)  
  41598d:	sti    
  41598e:	sbb    al,0xb4
  415990:	pop    ebx
  415991:	pop    esi
  415992:	mov    eax,0x215bf065
  415997:	out    0x1,eax
  415999:	push   ebx
  41599a:	fiadd  DWORD PTR [ecx+0x3c905054]
  4159a0:	xchg   DWORD PTR [ebx+0x6b],edx
  4159a3:	addr16 pop ebp
  4159a5:	or     al,0xd8
  4159a7:	sbb    DWORD PTR [edi+ebp*1],edx
  4159aa:	sbb    bh,BYTE PTR [ecx+0x8]
  4159ad:	por    mm5,QWORD PTR [edx]
  4159b0:	or     eax,0x12e2e9f8
  4159b5:	mov    BYTE PTR [edi-0x2b],ah
  4159b8:	inc    edx
  4159b9:	or     edx,0x10eb7df6
  4159bf:	mov    al,0xe9
  4159c1:	lods   al,BYTE PTR ds:[esi]
  4159c2:	mov    ecx,0x912ffb5b
  4159c7:	push   ecx
  4159c8:	adc    BYTE PTR [edx],bl
	...
  4159d6:	add    BYTE PTR [eax],al
  4159d8:	add    cl,bl
  4159da:	loop   0x415a0b
  4159dc:	xor    ah,BYTE PTR [edx+0x76]
  4159df:	add    DWORD PTR [edx-0x20],eax
  4159e2:	cmp    BYTE PTR [esp+edi*2],cl
  4159e5:	xchg   ebx,eax
  4159e6:	in     eax,dx
  4159e7:	iret   
  4159e8:	mov    bl,BYTE PTR [edi]
  4159ea:	add    eax,0x9ebfbfc
  4159ef:	fld    DWORD PTR [ecx-0x1e]
  4159f2:	out    dx,eax
  4159f3:	fistp  QWORD PTR [edi+0x72]
  4159f6:	push   ebx
  4159f7:	mov    dl,0x8a
  4159f9:	ja     0x415a4d
  4159fb:	sub    DWORD PTR [eax],edx
  4159fd:	arpl   WORD PTR ds:0x56303e7,ax
  415a03:	out    0x3,eax
  415a05:	arpl   WORD PTR ds:0x56303e7,ax
  415a0b:	out    0x3,eax
  415a0d:	arpl   WORD PTR ds:0x56303e7,ax
  415a13:	out    0x3,eax
  415a15:	arpl   WORD PTR ds:0x56303e7,ax
  415a1b:	out    0x3,eax
  415a1d:	arpl   WORD PTR ds:0x56303e7,ax
  415a23:	out    0x3,eax
  415a25:	arpl   WORD PTR ds:0x56303e7,ax
  415a2b:	out    0x3,eax
  415a2d:	arpl   WORD PTR ds:0x56303e7,ax
  415a33:	out    0x3,eax
  415a35:	arpl   WORD PTR ds:0x56303e7,ax
  415a3b:	out    0x3,eax
	...
  415a49:	add    BYTE PTR [eax],al
  415a4b:	add    BYTE PTR [ebx+0x5],ah
  415a4e:	out    0x3,eax
  415a50:	arpl   WORD PTR ds:0x56303e7,ax
  415a56:	out    0x3,eax
  415a58:	arpl   WORD PTR ds:0x56303e7,ax
  415a5e:	out    0x3,eax
  415a60:	arpl   WORD PTR ds:0x56303e7,ax
  415a66:	out    0x3,eax
  415a68:	arpl   WORD PTR ds:0x56303e7,ax
  415a6e:	out    0x3,eax
  415a70:	arpl   WORD PTR ds:0x560e900,ax
  415a76:	add    cl,ch
  415a78:	pusha  
  415a79:	add    eax,0x560e900
  415a7e:	add    cl,ch
  415a80:	pusha  
  415a81:	add    eax,0x5ae400
  415a86:	or     cl,BYTE PTR [eax-0x7498bef0]
  415a8c:	cmp    BYTE PTR [ebx+0x2f],0xcf
  415a90:	nop
  415a91:	and    ah,BYTE PTR [eax]
  415a93:	leave  
  415a94:	jge    0x415abb
  415a96:	and    BYTE PTR [ebp-0x48],dh
  415a99:	data16 and BYTE PTR [edx-0x36],bl
  415a9d:	push   edx
  415a9e:	ins    BYTE PTR es:[edi],dx
  415a9f:	dec    ebp
  415aa0:	ret    0x2077
  415aa3:	pop    ebp
  415aa4:	mov    edi,0xc24b2066
  415aa9:	jns    0x415b1f
  415aab:	dec    esp
  415aac:	xchg   ebp,eax
  415aad:	and    eax,0x103a
	...
  415abe:	add    BYTE PTR [edx-0x1],ch
  415ac1:	inc    eax
  415ac2:	inc    esi
  415ac3:	xchg   edi,eax
  415ac4:	jp     0x415b38
  415ac6:	inc    eax
  415ac7:	sbb    BYTE PTR [ebp+0x74],0xc9
  415acb:	dec    eax
  415acc:	fs daa 
  415ace:	leave  
  415acf:	das    
  415ad0:	cmp    dh,BYTE PTR [edi]
  415ad2:	sar    DWORD PTR [ebx],1
  415ad4:	aaa    
  415ad5:	xor    cl,bl
  415ad7:	daa    
  415ad8:	and    eax,0x3f870062
  415add:	ins    DWORD PTR es:[edi],dx
  415ade:	add    al,0x4d
  415ae0:	push   0x4a870763
  415ae5:	(bad)  
  415ae6:	cli    
  415ae7:	inc    ebx
  415ae8:	arpl   WORD PTR [ecx+ecx*1],bp
  415aeb:	es popa 
  415aed:	ins    BYTE PTR es:[edi],dx
  415aee:	or     DWORD PTR ds:0x3cc1656a,ecx
  415af4:	je     0x415b16
  415af6:	mov    ebx,0x637443
  415afb:	fdiv   DWORD PTR [ecx+eiz*2+0x64]
  415aff:	fs cld 
  415b01:	or     DWORD PTR ds:0x726b3d80,ecx
  415b07:	lahf   
  415b08:	es outs dx,BYTE PTR gs:[esi]
  415b0b:	in     al,dx
  415b0c:	pop    edi
  415b0d:	jb     0x415b7c
  415b0f:	jmp    0x415b73
  415b11:	outs   dx,DWORD PTR gs:[esi]
  415b13:	in     al,0x30
  415b15:	and    BYTE PTR [eax-0x32],ch
  415b18:	bound  esi,QWORD PTR [eax+0x3a]
  415b1b:	xor    eax,0xcd77731f
  415b20:	sbb    al,0x65
  415b22:	bound  eax,QWORD PTR [eax]
	...
  415b30:	add    BYTE PTR [eax],al
  415b32:	leave  
  415b33:	outs   dx,BYTE PTR gs:[esi]
  415b35:	jae    0x415afc
  415b37:	fs je  0x415bb1
  415b3a:	stos   DWORD PTR es:[edi],eax
  415b3b:	jnp    0x415b9e
  415b3d:	cs test eax,0x472f695e
  415b43:	add    BYTE PTR [ecx],cl
  415b45:	or     bh,BYTE PTR [edx]
  415b47:	push   es
  415b48:	add    BYTE PTR [eax],al
  415b4a:	or     al,BYTE PTR [esi]
  415b4c:	add    BYTE PTR [eax],al
  415b4e:	or     al,BYTE PTR [esi]
  415b50:	add    BYTE PTR [eax],al
  415b52:	cli    
  415b53:	add    eax,0x5fa0000
  415b58:	add    BYTE PTR [eax],al
  415b5a:	or     al,BYTE PTR [esi]
  415b5c:	add    BYTE PTR [eax],al
  415b5e:	or     al,BYTE PTR [esi]
  415b60:	add    BYTE PTR [eax],al
  415b62:	cli    
  415b63:	add    eax,0x5fa0000
  415b68:	add    BYTE PTR [eax],al
  415b6a:	retf   0x5
  415b6d:	add    dl,cl
  415b6f:	add    eax,0x5ba0000
  415b74:	add    BYTE PTR [eax],al
  415b76:	mov    edx,0xca000005
  415b7b:	add    eax,0x5ca0000
  415b80:	add    BYTE PTR [eax],al
  415b82:	arpl   WORD PTR [ecx+0x1d384eb2],bx
  415b88:	and    BYTE PTR [ebx],ch
  415b8a:	addr16 xor cl,bh
  415b8d:	push   esp
  415b8e:	xchg   DWORD PTR [eax],edx
  415b90:	mov    ds:0x80cb3e62,eax
  415b95:	or     DWORD PTR [eax],eax
	...
  415ba3:	add    BYTE PTR [eax],al
  415ba5:	sub    al,0xf1
  415ba7:	or     ecx,DWORD PTR [eax]
  415ba9:	push   edx
  415baa:	mov    al,ds:0xb37f680a
  415baf:	jnp    0x415c02
  415bb1:	fstp   st(3)
  415bb3:	add    DWORD PTR [eax],eax
  415bb5:	arpl   sp,bx
  415bb7:	add    DWORD PTR [eax],eax
  415bb9:	arpl   si,bx
  415bbb:	add    DWORD PTR [eax],eax
  415bbd:	arpl   si,bx
  415bbf:	add    DWORD PTR [eax],eax
  415bc1:	arpl   si,bx
  415bc3:	add    DWORD PTR [eax],eax
  415bc5:	arpl   si,bx
  415bc7:	add    DWORD PTR [eax],eax
  415bc9:	arpl   si,bx
  415bcb:	add    DWORD PTR [eax],eax
  415bcd:	arpl   si,bx
  415bcf:	add    DWORD PTR [eax],eax
  415bd1:	arpl   si,bx
  415bd3:	add    DWORD PTR [eax],eax
  415bd5:	arpl   si,bx
  415bd7:	add    DWORD PTR [eax],eax
  415bd9:	arpl   si,bx
  415bdb:	add    DWORD PTR [eax],eax
  415bdd:	arpl   si,bx
  415bdf:	add    DWORD PTR [eax],eax
  415be1:	arpl   si,bx
  415be3:	add    DWORD PTR [eax],eax
  415be5:	arpl   si,bx
  415be7:	add    DWORD PTR [eax],eax
  415be9:	arpl   si,bx
  415beb:	add    DWORD PTR [eax],eax
  415bed:	arpl   si,bx
  415bef:	add    DWORD PTR [eax],eax
  415bf1:	arpl   si,bx
  415bf3:	add    DWORD PTR [eax],eax
  415bf5:	arpl   si,bx
  415bf7:	add    DWORD PTR [eax],eax
  415bf9:	arpl   si,bx
  415bfb:	add    DWORD PTR [eax],eax
  415bfd:	arpl   si,bx
  415bff:	add    DWORD PTR [eax],eax
  415c01:	arpl   si,bx
  415c03:	add    DWORD PTR [eax],eax
  415c05:	arpl   si,bx
  415c07:	add    DWORD PTR [eax],eax
	...
  415c15:	add    BYTE PTR [eax],al
  415c17:	add    BYTE PTR [ebx+0x5],ah
  415c1a:	out    0x3,eax
  415c1c:	arpl   WORD PTR ds:0x56303e7,ax
  415c22:	out    0x3,eax
  415c24:	arpl   WORD PTR ds:0x56303e7,ax
  415c2a:	out    0x3,eax
  415c2c:	arpl   WORD PTR ds:0x56303e7,ax
  415c32:	out    0x3,eax
  415c34:	arpl   WORD PTR ds:0x56303e7,ax
  415c3a:	out    0x3,eax
  415c3c:	arpl   WORD PTR ds:0x56303e7,ax
  415c42:	out    0x3,eax
  415c44:	arpl   WORD PTR ds:0x56303e7,ax
  415c4a:	out    0x3,eax
  415c4c:	arpl   WORD PTR ds:0x56303e7,ax
  415c52:	out    0x3,eax
  415c54:	arpl   WORD PTR ds:0x56303e7,ax
  415c5a:	out    0x3,eax
  415c5c:	arpl   WORD PTR ds:0x56303e7,ax
  415c62:	out    0x3,eax
  415c64:	arpl   WORD PTR ds:0x56303e7,ax
  415c6a:	out    0x3,eax
  415c6c:	arpl   WORD PTR ds:0x56303e7,ax
  415c72:	out    0x3,eax
  415c74:	arpl   WORD PTR ds:0x56303e7,ax
  415c7a:	out    0x3,eax
	...
  415c88:	add    BYTE PTR [eax],al
  415c8a:	add    BYTE PTR [ebx+0x5],ah
  415c8d:	out    0x3,eax
  415c8f:	arpl   WORD PTR ds:0x56303e7,ax
  415c95:	out    0x3,eax
  415c97:	arpl   WORD PTR ds:0x56303e7,ax
  415c9d:	out    0x3,eax
  415c9f:	arpl   WORD PTR ds:0x560e900,ax
  415ca5:	add    cl,ch
  415ca7:	pusha  
  415ca8:	add    eax,0x560e900
  415cad:	add    cl,ch
  415caf:	pusha  
  415cb0:	add    eax,0x560e900
  415cb5:	add    cl,ch
  415cb7:	pusha  
  415cb8:	add    eax,0x560e900
  415cbd:	add    cl,ch
  415cbf:	pusha  
  415cc0:	add    eax,0x560e900
  415cc5:	add    cl,ch
  415cc7:	pusha  
  415cc8:	add    eax,0x560e900
  415ccd:	add    cl,ch
  415ccf:	pusha  
  415cd0:	add    eax,0x362ed800
  415cd5:	xor    al,0xd4
  415cd7:	xchg   edx,eax
  415cd8:	add    eax,0x74cf8870
  415cdd:	jne    0x415c6d
  415cdf:	(bad)  
  415ce0:	imul   eax,DWORD PTR [eax],0x6275b879
  415ce6:	mov    esp,DWORD PTR [eax+0x5e]
  415ce9:	jne    0x415d37
  415ceb:	mov    cl,0x79
  415ced:	ja     0x415cd8
	...
  415cfb:	add    BYTE PTR [eax],al
  415cfd:	add    BYTE PTR [edi+0x33],dh
  415d00:	xor    DWORD PTR ds:0x446a0572,ebx
  415d06:	nop
  415d07:	jb     0x415d7a
  415d09:	jmp    0xf572905d
  415d0e:	push   ebx
  415d0f:	aaa    
  415d10:	xor    eax,0x321e60f1
  415d15:	cli    
  415d16:	dec    esp
  415d17:	add    eax,0x1e800b5f
  415d1c:	xor    bl,dl
  415d1e:	pusha  
  415d1f:	popa   
  415d20:	arpl   WORD PTR ds:0xff67627a,bx
  415d26:	pusha  
  415d27:	jns    0x415d8c
  415d29:	add    cl,bl
  415d2b:	pop    esi
  415d2c:	add    BYTE PTR [ebp+ebx*2+0x5f],ch
  415d30:	popa   
  415d31:	add    BYTE PTR [ebx],cl
  415d33:	xor    eax,0x69ba002f
  415d38:	outs   dx,DWORD PTR ds:[esi]
  415d39:	jae    0x415cd0
  415d3b:	addr16 jb 0x415da2
  415d3e:	dec    ebx
  415d3f:	or     DWORD PTR [eax+0x65],ebp
  415d42:	sahf   
  415d43:	imul   ax,WORD PTR [eax],0xffdf
  415d47:	outs   dx,BYTE PTR ds:[si]
  415d49:	imul   esp,DWORD PTR [edi-0x379bff8f],0x69
  415d50:	arpl   WORD PTR [edi-0x64],bp
  415d53:	add    dh,BYTE PTR [edx+esi*2-0x49]
  415d57:	jae    0x415dcd
  415d59:	outs   dx,BYTE PTR ds:[esi]
  415d5a:	int    0x39
  415d5c:	add    BYTE PTR [ecx],dh
  415d5e:	mov    edi,DWORD PTR [ecx]
  415d60:	sub    eax,0x31
	...
  415d71:	mov    eax,DWORD PTR [edx]
  415d73:	gs ins BYTE PTR es:[edi],dx
  415d75:	frstor [eax+0x61]
  415d78:	jns    0x415d67
  415d7a:	je     0x415d7c
  415d7c:	xor    DWORD PTR [eax],ecx
  415d7e:	xor    esi,DWORD PTR [esi*1+0x73001f04]
  415d85:	loop   0x415def
  415d87:	outs   dx,DWORD PTR fs:[esi]
  415d89:	xchg   ebp,eax
  415d8a:	or     DWORD PTR ds:0x31354932,ebp
  415d90:	ss inc ebp
  415d92:	xor    DWORD PTR ds:0x7261a900,esi
  415d98:	imul   ebx,DWORD PTR [ecx+0x75],0x67577300
  415d9f:	outs   dx,DWORD PTR ds:[esi]
  415da0:	push   0x6167a3
  415da5:	aas    
  415da6:	push   0x7367746f
  415dab:	add    BYTE PTR [ebx+0x5d],ah
  415dae:	pop    esp
  415daf:	jo     0x415e26
  415db1:	arpl   WORD PTR [eax],dx
  415db3:	pop    edi
  415db4:	jb     0x415e19
  415db6:	or     al,0x72
  415db8:	addr16 inc ebp
  415dba:	sti    
  415dbb:	pop    esi
  415dbc:	jno    0x415e0e
  415dbe:	fsubr  QWORD PTR [ebp+0x67]
  415dc1:	cmp    al,0xff
  415dc3:	pop    esi
  415dc4:	jb     0x415e29
  415dc6:	push   es
  415dc7:	gs ins DWORD PTR es:[edi],dx
  415dc9:	das    
  415dca:	mov    edx,0xdc3f6c64
  415dcf:	outs   dx,BYTE PTR fs:[esi]
  415dd1:	cmp    al,0xc1
  415dd3:	add    BYTE PTR gs:[eax],al
	...
  415de2:	add    BYTE PTR [eax],al
  415de4:	or     ecx,ecx
  415de6:	jb     0x415e5b
  415de8:	adc    ch,ch
  415dea:	add    DWORD PTR [edi],ebp
  415dec:	push   ecx
  415ded:	jmp    0x415e23
  415def:	xor    dl,BYTE PTR [eax-0x24]
  415df2:	outs   dx,BYTE PTR ds:[esi]
  415df3:	push   0x7660b802
  415df8:	dec    BYTE PTR [ecx-0x770e99ff]
  415dfe:	pusha  
  415dff:	fs hlt 
  415e01:	mov    BYTE PTR [ecx],al
  415e03:	imul   ecx,edx,0xd163656a
  415e09:	fisub  WORD PTR [ecx+esi*2-0x39]
  415e0d:	test   BYTE PTR [ecx],al
  415e0f:	jno    0x415dc5
  415e11:	jg     0x415e75
  415e13:	arpl   WORD PTR [ecx-0x4c8c8d22],si
  415e19:	cmp    DWORD PTR [edx+0x6b],esi
  415e1c:	ret    0x43c
  415e1f:	imul   edi,DWORD PTR [edx-0x79a093c1],0x2a
  415e26:	add    al,0x61
  415e28:	mov    edi,DWORD PTR [ecx]
  415e2a:	pop    ebp
  415e2b:	jno    0x415db3
  415e2d:	fisubr WORD PTR [edx+0x6e]
  415e30:	(bad)  
  415e31:	cmp    DWORD PTR [edx+0x6e],esi
  415e34:	xchg   BYTE PTR [edx],dh
  415e36:	add    al,0x6a
  415e38:	test   BYTE PTR ds:0x66706c1a,al
  415e3e:	out    0x5d,eax
  415e40:	jo     0x415eaa
  415e42:	add    bh,BYTE PTR [ebx+0x4e]
  415e45:	jb     0x415e2e
  415e47:	popa   
	...
  415e54:	add    BYTE PTR [eax],al
  415e56:	add    BYTE PTR [edi+0x62],al
  415e59:	cli    
  415e5a:	jo     0x415e9c
  415e5c:	popa   
  415e5d:	out    0x61,eax
  415e5f:	and    al,0x78
  415e61:	or     al,0x62
  415e63:	sbb    al,0x59
  415e65:	sti    
  415e66:	add    esi,DWORD PTR [edx]
  415e68:	jno    0x415e32
  415e6a:	jno    0x415ea2
  415e6c:	fnstenvw [eax+0x63]
  415e70:	xor    eax,0x35533417
  415e75:	pop    ss
  415e76:	add    al,0x13
  415e78:	jb     0x415e33
  415e7a:	jae    0x415e7b
  415e7c:	popa   
  415e7d:	out    0x69,eax
  415e7f:	div    BYTE PTR [esi-0x35]
  415e82:	bound  ecx,QWORD PTR ds:0xfc62c505
  415e88:	jo     0x415e19
  415e8a:	add    esi,edx
  415e8c:	jno    0x415e1a
  415e8e:	data16 add BYTE PTR [edi-0x19],dh
  415e92:	(bad)
  415e97:	int3   
  415e98:	add    eax,0x71d26e89
  415e9d:	test   BYTE PTR [ecx+0x63],dh
  415ea0:	pop    ebp
  415ea1:	mov    WORD PTR [edx-0x4b],fs
  415ea4:	bound  edi,QWORD PTR [ebp+0x3]
  415ea7:	mov    bl,0x62
  415ea9:	push   edi
  415eaa:	je     0x415e6c
  415eac:	ja     0x415e95
  415eae:	sub    al,0x6e
  415eb0:	xor    al,0x1e
  415eb2:	sub    eax,0x6be73456
  415eb7:	nop
  415eb8:	pop    ebx
  415eb9:	cmp    ebx,DWORD PTR [edi+0x0]
	...
  415ec8:	add    BYTE PTR [eax],al
  415eca:	xchg   ecx,eax
  415ecb:	add    eax,0x628d654b
  415ed0:	add    BYTE PTR [ebp+0x78],al
  415ed3:	add    eax,0x77833f5f
  415ed8:	arpl   WORD PTR [esi],bx
  415eda:	addr16 jno 0x415f45
  415edd:	push   cs
  415ede:	jl     0x415f2c
  415ee0:	jno    0x415ecb
  415ee2:	inc    ecx
  415ee3:	pop    ebx
  415ee4:	gs add al,0x4b
  415ee7:	jbe    0x415ee9
  415ee9:	or     bh,BYTE PTR [edi]
  415eeb:	dec    esp
  415eec:	jb     0x415efb
  415eee:	cmp    BYTE PTR [eax+0x0],ch
  415ef1:	or     eax,0x4675b40
  415ef6:	dec    ebx
  415ef7:	add    eax,0x1c70182f
  415efc:	add    bl,dl
  415efe:	add    eax,0x3ec06e5b
  415f03:	push   0x6413e972
  415f08:	outs   dx,BYTE PTR ds:[esi]
  415f09:	into   
  415f0a:	add    al,0x68
  415f0c:	add    cl,dl
  415f0e:	add    DWORD PTR [ebx+0x6e],ebx
  415f11:	enter  0x508,0x6f
  415f15:	enter  0x71fa,0x71
  415f19:	mov    eax,ds:0x995f5d60
  415f1e:	lock jae 0x415f21
  415f21:	test   cl,al
  415f23:	jno    0x415f97
  415f25:	sbb    al,0x5
  415f28:	jo     0x415eb2
  415f2a:	shl    DWORD PTR [eax+eax*1-0x78],cl
	...
  415f3a:	add    BYTE PTR [eax],al
  415f3c:	add    cl,al
  415f3e:	dec    edx
  415f3f:	pop    edi
  415f40:	mov    cl,al
  415f42:	add    eax,0x3484b436
  415f47:	xor    bl,BYTE PTR [eax]
  415f49:	addr16 dec edx
  415f4b:	imul   ecx,DWORD PTR [eax-0x3f],0x61
  415f4f:	pop    edi
  415f50:	jmp    0x41b5b7d7
  415f55:	mov    dh,0x5b
  415f57:	gs add dl,bh
  415f5a:	pop    edi
  415f5b:	outs   dx,BYTE PTR gs:[esi]
  415f5d:	popf   
  415f5e:	pop    esp
  415f5f:	jb     0x415f61
  415f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f62:	data16 je 0x415fcd
  415f65:	lahf   
  415f66:	jae    0x415f68
  415f68:	jae    0x415fbe
  415f6a:	imul   si,WORD PTR [eax+0x43],0x1
  415f6f:	push   0x65
  415f71:	jns    0x415fe5
  415f73:	arpl   WORD PTR gs:[ebx+0x1],bp
  415f77:	jae    0x415fde
  415f79:	jbe    0x415fdd
  415f7b:	imul   ebp,DWORD PTR [ebp+0x5f],0x1
  415f7f:	jo     0x415ff0
  415f81:	popa   
  415f82:	pop    esp
  415f83:	imul   ebp,DWORD PTR [edi-0x4c],0x956c6506
  415f8a:	ins    BYTE PTR es:[edi],dx
  415f8b:	popa   
  415f8c:	jns    0x415f23
  415f8e:	ins    DWORD PTR es:[edi],dx
  415f8f:	sub    eax,0x2d307b00
  415f94:	xor    DWORD PTR [ebx+0x1],edi
  415f97:	imul   esi,DWORD PTR [ebp-0x37],0x9d6e5d72
  415f9e:	push   es
  415f9f:	push   0x65
	...
  415fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fb1:	jbe    0x41601c
  415fb3:	mov    cl,BYTE PTR gs:[eax+0x71]
  415fb7:	jae    0x415f87
  415fb9:	dec    ecx
  415fba:	outs   dx,BYTE PTR ds:[esi]
  415fbb:	add    al,dl
  415fbd:	popa   
  415fbe:	outs   dx,DWORD PTR ds:[esi]
  415fbf:	ins    DWORD PTR es:[edi],dx
  415fc0:	jecxz  0x416025
  415fc2:	popa   
  415fc3:	add    ch,dl
  415fc5:	jo     0x416024
  415fc7:	outs   dx,BYTE PTR ds:[esi]
  415fc8:	fstp   QWORD PTR [eax+eax*1+0x74]
  415fcc:	fbstp  TBYTE PTR [edx+0x74]
  415fcf:	imul   esp,esp,0xba61005e
  415fd5:	jbe    0x416043
  415fd7:	cmp    ah,BYTE PTR gs:[ebp+0x65]
  415fdb:	arpl   WORD PTR [edx+0x636c6c5c],dx
  415fe1:	cmp    DWORD PTR [eax+esi*2],eax
  415fe4:	jle    0x416023
  415fe6:	arpl   WORD PTR gs:[ebx+0x2f],sp
  415fea:	addr16 popa 
  415fec:	xchg   ecx,eax
  415fed:	inc    ecx
  415fee:	js     0x415ff0
  415ff0:	xor    bl,ah
  415ff2:	push   0x72
  415ff4:	cmp    BYTE PTR [edi],0x67
  415ff7:	add    BYTE PTR [ebp+edx*1+0x60],dh
  415ffb:	ins    BYTE PTR es:[edi],dx
  415ffc:	jp     0x415ffb
  415ffe:	pop    esi
  415fff:	add    BYTE PTR [edx+0x0],cl
  416002:	popa   
  416003:	jbe    0x416043
  416005:	adc    eax,0xdc917361
  41600a:	pop    edi
  41600b:	addr16 inc eax
  41600d:	sti    
  41600e:	pop    edi
  41600f:	arpl   WORD PTR [ebx-0x56],sp
  416012:	aaa    
  416013:	add    BYTE PTR ss:[eax],al
	...
  416022:	add    BYTE PTR [ebp-0x4e],ch
  416025:	aaa    
  416026:	add    BYTE PTR [esi],bh
  416028:	leave  
  416029:	data16 cmp bh,BYTE PTR [bp+si+0x6501]
  41602f:	add    cl,al
  416031:	push   0x1d50275
  416036:	pushw  ss
  416038:	mov    edi,0xb0f4775e
  41603d:	xor    al,0x0
  41603f:	add    ch,BYTE PTR [edi-0x57fb978a]
  416045:	push   0x597cfb00
  41604a:	pop    edi
  41604b:	sti    
  41604c:	jl     0x41604f
  41604e:	jo     0x41601c
  416050:	jg     0x4160c3
  416052:	add    cl,al
  416054:	push   0x68
  416056:	jno    0x416028
  416058:	xchg   ebp,eax
  416059:	pop    edi
  41605a:	arpl   WORD PTR gs:[ebp+ebx*2+0x5f],di
  41605f:	retf   
  416060:	jl     0x4160bf
  416062:	pop    edi
  416063:	retf   
  416064:	fisub  WORD PTR [eax+0x77]
  416067:	mov    al,0x5
  416069:	push   edi
  41606a:	arpl   dx,ax
  41606c:	bound  ebx,QWORD PTR [eax]
  41606e:	add    al,0x88
  416070:	pop    bx
  416072:	js     0x415fff
  416074:	bound  edx,QWORD PTR [esi+0x4]
  416077:	and    BYTE PTR [esi+0x55],0x63
  41607b:	jg     0x4160e3
  41607d:	out    0x74,eax
  41607f:	test   BYTE PTR [ecx+0x3d],bl
  416082:	addr16 jno 0x41608a
  416085:	cmp    DWORD PTR [ecx+0x0],esp
	...
  416094:	add    BYTE PTR [eax],al
  416096:	and    DWORD PTR [edx+0x19],0xe5f6378
  41609d:	jbe    0x4160df
  41609f:	outs   dx,DWORD PTR ds:[esi]
  4160a0:	or     al,0x76
  4160a2:	arpl   WORD PTR [esi+0x1a],sp
  4160a5:	push   0x40f6045
  4160aa:	push   ecx
  4160ab:	data16 or bl,BYTE PTR [eax+eax*2+0x59]
  4160b0:	out    0x75,eax
  4160b2:	adc    al,0x5e
  4160b4:	std    
  4160b5:	gs ds jo 0x4160a0
  4160b9:	push   0x62d35e30
  4160be:	adc    DWORD PTR ds:0x573466d7,eax
  4160c4:	aam    0x77
  4160c6:	arpl   WORD PTR [ebx-0x38],sp
  4160c9:	ja     0x4160c3
  4160cb:	gs int 0x3
  4160ce:	add    bl,BYTE PTR [eax-0x3a]
  4160d1:	pop    esp
  4160d2:	cld    
  4160d3:	popa   
  4160d4:	out    0x65,eax
  4160d6:	or     al,0x5e
  4160d8:	xchg   ebx,eax
  4160d9:	data16 in al,dx
  4160db:	add    al,0x9a
  4160dd:	pusha  
  4160de:	ret    0x8c64
  4160e1:	jne    0x416067
  4160e3:	add    eax,0x5cc25a7c
  4160e8:	mov    WORD PTR [edx+0x63],gs
  4160eb:	arpl   WORD PTR [eax+0x5ac077],dx
  4160f1:	mov    WORD PTR [eax+0x5d],fs
  4160f4:	arpl   WORD PTR [ebp-0x74],di
  4160f7:	pop    edx
  4160f8:	das    
  4160f9:	jmp    0x4160fe
	...
  416106:	add    BYTE PTR [eax],al
  416108:	add    BYTE PTR [ebp-0x7bb098a4],bh
  41610e:	pop    esp
  41610f:	add    BYTE PTR [ebp-0x80],cl
  416112:	pop    esi
  416113:	ins    DWORD PTR es:[edi],dx
  416114:	push   ebp
  416115:	add    BYTE PTR ds:0x48a44871,0x6e
  41611c:	xor    eax,0x4a00489f
  416121:	sbb    BYTE PTR [eax+esi*2+0x48],0x70
  416126:	add    eax,0x5c801064
  41612b:	ins    DWORD PTR es:[edi],dx
  41612c:	cmovnp eax,DWORD PTR ds:0x59480874
  416133:	ins    DWORD PTR es:[edi],dx
  416134:	sbb    esp,DWORD PTR [edi+0x5f]
  416137:	ins    DWORD PTR es:[edi],dx
  416138:	sti    
  416139:	dec    ebp
  41613a:	pop    esp
  41613b:	add    BYTE PTR [ebx],dl
  41613d:	inc    edx
  41613e:	pop    ebp
  41613f:	outs   dx,BYTE PTR ds:[esi]
  416140:	mov    edx,0xfb002f71
  416145:	or     DWORD PTR [esi+0x68],esp
  416148:	enter  0x612e,0x0
  41614c:	retf   
  41614d:	cmp    al,0x60
  41614f:	outs   dx,BYTE PTR ds:[esi]
  416150:	ret    0x2d51
  416153:	xor    ch,cl
  416155:	adc    BYTE PTR [edi+ebx*2-0x36],ah
  416159:	sub    BYTE PTR [ecx+esi*2-0x17],ah
  41615d:	pop    es
  41615e:	pop    edx
  41615f:	ins    DWORD PTR es:[edi],dx
  416160:	lds    esp,FWORD PTR [eax+0x5f]
  416163:	ins    BYTE PTR es:[edi],dx
  416164:	mov    esi,0xe97263eb
  416169:	out    dx,eax
  41616a:	gs ins DWORD PTR es:[edi],dx
  41616c:	mov    es,WORD PTR [eax]
	...
  41617a:	add    BYTE PTR [eax],al
  41617c:	aam    0x62
  41617e:	jb     0x416169
  416180:	mov    esi,0xc2886e46
  416185:	inc    esi
  416186:	add    BYTE PTR [eax],al
  416188:	lock arpl WORD PTR [ecx+0x65],bp
  41618c:	mov    ecx,0xe6735d02
  416191:	pop    esp
  416192:	pop    ebp
  416193:	jae    0x41617b
  416195:	pop    esp
  416196:	add    BYTE PTR [esi-0x6d],dh
  416199:	bound  esi,QWORD PTR [edi+ebp*2-0x48]
  41619d:	pop    eax
  41619e:	add    BYTE PTR [ebp+ebx*4+0x47],ch
  4161a2:	outs   dx,DWORD PTR fs:[esi]
  4161a4:	dec    esp
  4161a5:	add    DWORD PTR ds:0x73720932,ebp
  4161ab:	or     dh,BYTE PTR gs:[edx]
  4161ae:	xor    dh,BYTE PTR [ebx]
  4161b0:	stc    
  4161b1:	xor    al,0x2d
  4161b3:	add    BYTE PTR [ecx],ch
  4161b5:	ins    DWORD PTR es:[edi],dx
  4161b6:	pop    ebp
  4161b7:	jb     0x4161ff
  4161b9:	jae    0x41621c
  4161bb:	imul   ecx,edx,0x5f
  4161be:	popa   
  4161bf:	outs   dx,DWORD PTR ds:[esi]
  4161c0:	js     0x416220
  4161c2:	popa   
  4161c3:	add    BYTE PTR [ebp+0x48],dh
  4161c6:	outs   dx,BYTE PTR ds:[esi]
  4161c7:	outs   dx,BYTE PTR ds:[esi]
  4161c8:	push   edi
  4161c9:	jae    0x4161cb
  4161cb:	ins    DWORD PTR es:[edi],dx
  4161cc:	imul   ebx,DWORD PTR [esi+0x63],0x69
  4161d0:	add    DWORD PTR [si+0x72],esi
  4161d4:	arpl   WORD PTR [edi+0x65],ax
  4161d7:	je     0x41619c
  4161d9:	add    ch,BYTE PTR [ebx+0x6e]
  4161dc:	scas   al,BYTE PTR es:[edi]
  4161dd:	dec    ecx
  4161de:	outs   dx,BYTE PTR ds:[esi]
  4161df:	add    BYTE PTR gs:[eax],al
	...
  4161ee:	add    BYTE PTR [edx-0x64cccdcf],cl
  4161f4:	fs pop edi
  4161f6:	add    BYTE PTR [ecx-0x6e9c9ab6],bl
  4161fc:	pop    ebp
  4161fd:	outs   dx,BYTE PTR ds:[esi]
  4161fe:	add    BYTE PTR [eax-0x52969193],ah
  416204:	je     0x416206
  416206:	arpl   dx,dx
  416208:	je     0x41626f
  41620a:	jae    0x416256
  41620c:	jb     0x41626b
  41620e:	jae    0x416273
  416210:	mov    esi,DWORD PTR [esi+0x30]
  416213:	rol    DWORD PTR [eax+0x6bce5f01],1
  416219:	jne    0x416282
  41621b:	int    0xdc
  41621d:	jb     0x41628f
  41621f:	ret    0x5a6a
  416222:	ja     0x416287
  416224:	jge    0x41628b
  416226:	imul   edi,DWORD PTR [edx-0x7994fbb2],0x4a
  41622d:	pusha  
  41622e:	addr16 test esp,ebx
  416231:	ins    WORD PTR es:[edi],dx
  416233:	jl     0x416274
  416235:	pusha  
  416236:	arpl   WORD PTR [ebx+0x36],sp
  416239:	jb     0x4162a2
  41623b:	xchg   BYTE PTR [esi],dh
  41623d:	push   0x5d446371
  416242:	jo     0x4161ca
  416244:	fdiv   QWORD PTR [edx+0x68]
  416247:	adc    BYTE PTR [eax],0x5d
  41624a:	imul   esp,DWORD PTR [ebx-0xa],0x5a
  41624e:	outs   dx,BYTE PTR ds:[esi]
  41624f:	dec    edi
  416250:	stc    
  416251:	pop    ebp
  416252:	add    BYTE PTR fs:[eax],al
	...
  416261:	add    BYTE PTR [esp+ebx*8],bh
  416264:	pop    ebp
  416265:	ins    DWORD PTR es:[edi],dx
  416266:	xor    al,0x13
  416268:	pop    ebx
  416269:	outs   dx,BYTE PTR ds:[esi]
  41626a:	inc    esp
  41626b:	fcomp  QWORD PTR [ecx+0x5f]
  41626e:	xor    DWORD PTR [eax],eax
  416270:	addr16 ja 0x4162d6
  416273:	jmp    0x4162d5
  416275:	ins    DWORD PTR es:[edi],dx
  416276:	cmp    BYTE PTR [ecx+0xf54006c],bh
  41627c:	xor    eax,0x5ec26335
  416281:	jno    0x416289
  416283:	int3   
  416284:	pop    ecx
  416285:	add    bh,dh
  416287:	test   al,0x62
  416289:	imul   edi,edx,0xfc6765db
  41628f:	les    esi,FWORD PTR [ebp+0x5f]
  416292:	(bad)  
  416293:	(bad)  [eax+eax*1-0x11]
  416297:	add    al,0x8f
  416299:	js     0x416268
  41629b:	imul   eax,DWORD PTR [ecx+esi*2+0x5c975863],0x3936ed1
  4162a6:	shl    DWORD PTR [esi-0x6b],0x67
  4162aa:	les    ebx,FWORD PTR [ecx-0x19]
  4162ad:	push   0x718c59c5
  4162b2:	arpl   WORD PTR [esi+0x7d],sp
  4162b5:	ja     0x416272
  4162b7:	je     0x41630e
  4162b9:	imul   esp,DWORD PTR [ebx+0x68],0x4e
  4162bd:	jb     0x41624c
  4162bf:	push   0x5b
  4162c1:	js     0x416243
  4162c3:	add    eax,0x5d3f
	...
  4162d4:	add    BYTE PTR [edx+0x636b4c70],al
  4162da:	push   ebp
  4162db:	dec    esi
  4162dc:	jne    0x41625e
  4162de:	push   edi
  4162df:	out    0x61,eax
  4162e1:	xor    BYTE PTR [ebx+0x41],0x63
  4162e5:	js     0x416355
  4162e7:	adc    eax,0xe714404
  4162ec:	jbe    0x41632e
  4162ee:	pop    esi
  4162ef:	push   es
  4162f0:	ja     0x41635e
  4162f2:	add    eax,0x5c9172d8
  4162f7:	mov    edx,0x105b6366
  4162fc:	je     0x41633e
  4162fe:	push   edi
  4162ff:	out    0x64,eax
  416301:	inc    eax
  416302:	jae    0x416308
  416304:	jno    0x416342
  416306:	pop    eax
  416307:	out    0x58,eax
  416309:	or     eax,0xf5bc66e
  41630e:	add    eax,0x570074d8
  416313:	shr    DWORD PTR [edx+0x34],cl
  416316:	add    eax,0x660071ca
  41631b:	mov    bl,0x5a
  41631d:	in     eax,dx
  41631e:	imul   eax,DWORD PTR [eax],0x6d7206e9
  416324:	retf   
  416325:	add    DWORD PTR [edi+0x0],edx
  416328:	mov    ah,al
  41632a:	ins    BYTE PTR es:[edi],dx
  41632b:	fs mov bl,dl
  41632e:	add    eax,0x6cd48672
  416333:	imul   eax,DWORD PTR [eax-0x7793a9a0],0x0
	...
  416346:	add    BYTE PTR [eax],al
  416348:	leave  
  416349:	push   0x6cafe972
  41634e:	jno    0x4162dd
  416350:	(bad)  
  416351:	jo     0x416353
  416353:	jns    0x416307
  416355:	inc    esp
  416356:	addr16 pop edx
  416358:	test   BYTE PTR ds:0x5b82617a,al
  41635e:	bound  eax,QWORD PTR [edi-0x54]
  416361:	add    eax,0x58a44871
  416366:	arpl   WORD PTR [ebp+0x67],dx
  416369:	jo     0x4163d2
  41636b:	push   edx
  41636c:	jl     0x416373
  41636e:	fs dec eax
  416370:	xor    DWORD PTR [ecx+0x5f],0x3a
  416374:	pop    edi
  416375:	push   0x72
  416377:	or     al,0x44
  416379:	jae    0x41637b
  41637b:	adc    eax,0x1d74563c
  416380:	inc    esp
  416381:	push   esi
  416382:	je     0x41636d
  416384:	and    eax,0x310c7644
  416389:	ins    BYTE PTR es:[edi],dx
  41638a:	popa   
  41638b:	adc    bl,BYTE PTR [edi+0x72]
  41638e:	outs   dx,BYTE PTR ds:[esi]
  41638f:	or     al,0x43
  416391:	jb     0x416409
  416393:	add    al,0x5f
  416395:	imul   ebx,DWORD PTR [edi-0x21],0xcc006939
  41639c:	or     DWORD PTR [ecx+0x6d],esi
  41639f:	fild   WORD PTR ds:0xdc16105
  4163a5:	push   edi
  4163a6:	popa   
  4163a7:	add    BYTE PTR [edx+0x726607],dl
	...
  4163b9:	add    BYTE PTR [eax],al
  4163bb:	xchg   ebx,eax
  4163bc:	push   0x6e
  4163be:	fs jp  0x416429
  4163c1:	imul   esp,DWORD PTR [edx+edi*2+0x6b],0x61
  4163c6:	jae    0x4163c6
  4163c8:	aas    
  4163c9:	outs   dx,BYTE PTR ds:[esi]
  4163ca:	jns    0x416416
  4163cc:	inc    ecx
  4163cd:	imul   ebp,DWORD PTR [esi-0x21],0x6
  4163d1:	imul   ebp,DWORD PTR [ecx-0x27],0xd5736b54
  4163d8:	push   0x14f80074
  4163dd:	xor    dh,BYTE PTR [edx]
  4163df:	call   0xafa363f8
  4163e4:	bound  ebp,QWORD PTR fs:[edi+ebp*4+0x5a]
  4163e9:	add    BYTE PTR [ecx],dh
  4163eb:	jnp    0x416405
  4163ed:	sub    eax,0x2d186b31
  4163f2:	add    BYTE PTR [ecx-0x569ea0c2],bl
  4163f8:	ds ins BYTE PTR es:[edi],dx
  4163fa:	popa   
  4163fb:	or     al,BYTE PTR [ecx+0x6b]
  4163fe:	jb     0x41639e
  416400:	push   0x6e9326e
  416405:	gs ins BYTE PTR es:[edi],dx
  416407:	jne    0x416460
  416409:	popa   
  41640a:	gs add BYTE PTR gs:[bp+0x65],ah
  416410:	ds je  0x416475
  416413:	pop    ebx
  416414:	cmp    eax,0x3aca316c
  416419:	imul   esi,DWORD PTR [esi+0x53],0x3f
  41641d:	arpl   WORD PTR [eax],ax
	...
  41642b:	add    BYTE PTR [eax],al
  41642d:	add    BYTE PTR [eax+ebp*2+0x74],ah
  416431:	push   0x65003f5b
  416436:	mov    bh,0x3d
  416438:	pop    ebp
  416439:	outs   dx,BYTE PTR ds:[esi]
  41643a:	scas   eax,DWORD PTR es:[edi]
  41643b:	gs ins BYTE PTR es:[edi],dx
  41643d:	add    BYTE PTR [ebx-0x41],ah
  416440:	ins    WORD PTR es:[edi],dx
  416442:	hlt    
  416443:	int    0x6c
  416445:	add    BYTE PTR ds:0x46966a1,al
  41644b:	retf   0x5f
  41644e:	lock int3 
  416450:	pop    eax
  416451:	imul   ebp,edx,0xffffffeb
  416454:	pop    eax
  416455:	pop    edi
  416456:	fild   DWORD PTR [ebx-0x133893a0]
  41645c:	pop    ebx
  41645d:	pop    edi
  41645e:	ror    BYTE PTR [ebx+0x63b90057],1
  416464:	pop    ecx
  416465:	outs   dx,BYTE PTR ds:[esi]
  416466:	arpl   WORD PTR [ebp-0x6053cd8c],bx
  41646c:	pusha  
  41646d:	xor    al,0xb1
  41646f:	in     al,dx
  416470:	arpl   WORD PTR [edi-0x3f],bx
  416473:	push   ebp
  416474:	add    DWORD PTR [edx-0x7a],esi
  416477:	push   eax
  416478:	xor    esi,DWORD PTR [edx]
  41647a:	push   eax
  41647b:	in     al,dx
  41647c:	arpl   WORD PTR [edx+eax*4+0x4e],bp
  416480:	pop    eax
  416481:	pop    edi
  416482:	arpl   WORD PTR [esi+esi*2],di
  416485:	lea    ecx,[bx+0x5f]
  416489:	add    BYTE PTR [edx+0x1b],dh
  41648c:	pop    edi
  41648d:	jb     0x416506
  41648f:	in     al,dx
  416490:	pushw  0x0
	...
  4164a0:	add    BYTE PTR [esi+0x20],bh
  4164a3:	jne    0x416508
  4164a5:	inc    edx
  4164a6:	in     al,dx
  4164a7:	xor    BYTE PTR [ebx],dh
  4164a9:	mov    ?,WORD PTR [ecx+0xa420030]
  4164af:	popa   
  4164b0:	arpl   WORD PTR [edi],si
  4164b2:	mov    ebp,0xde426801
  4164b7:	pop    ebp
  4164b8:	popa   
  4164b9:	inc    esp
  4164ba:	fisub  WORD PTR [eax+0x0]
  4164bd:	inc    edi
  4164be:	adc    DWORD PTR [esp+esi*2+0x3e],ebp
  4164c2:	fiadd  WORD PTR [ecx]
  4164c4:	jno    0x4164c8
  4164c6:	add    eax,0x4ff60dd
  4164cb:	sbb    BYTE PTR ds:0x371a1751,dh
  4164d1:	arpl   WORD PTR [ebp-0x38],bp
  4164d4:	push   edi
  4164d5:	psrad  mm7,0x5d
  4164d9:	adc    al,0x56
  4164db:	mov    bh,0x60
  4164dd:	icebp  
  4164de:	add    al,0xcb
  4164e0:	fs cmc 
  4164e2:	imul   eax,esp,0x57
  4164e5:	iret   
  4164e6:	push   0xffffffe7
  4164e8:	pop    esi
  4164e9:	mov    esp,0xbd609359
  4164ee:	add    eax,0x54d2648a
  4164f3:	and    BYTE PTR [eax+0x63],0x54
  4164f7:	jnp    0x416559
  4164f9:	(bad)  
  4164fa:	jno    0x416484
  4164fc:	add    esi,DWORD PTR [ebx-0x3f9377ad]
  416502:	push   ebx
  416503:	out    0x5b,eax
	...
  416511:	add    BYTE PTR [eax],al
  416513:	add    BYTE PTR [esi+0x7e594b59],cl
  416519:	add    eax,0x697d5b56
  41651e:	inc    esi
  41651f:	jno    0x4164b3
  416521:	add    eax,0x59726f3c
  416526:	dec    ebx
  416527:	pop    ebx
  416528:	add    BYTE PTR ds:0x6a776346,0x3a
  41652f:	add    al,0x81
  416531:	outs   dx,BYTE PTR ds:[esi]
  416532:	cmp    ebx,DWORD PTR [eax+0x46]
  416535:	sbb    bx,WORD PTR [edi+0x52]
  416539:	add    eax,0x69415c06
  41653e:	sbb    ebx,DWORD PTR [edx+0x63]
  416541:	push   0x6c495c05
  416546:	adc    al,0x4
  416548:	test   BYTE PTR [ebx],dl
  41654a:	mov    edx,0x17702f
  41654f:	mov    esi,0xe9301878
  416554:	pusha  
  416555:	fs je  0x41653a
  416558:	push   cs
  416559:	push   edi
  41655a:	imul   ecx,esi,0xdc756f16
  416560:	pusha  
  416561:	ins    DWORD PTR es:[edi],dx
  416562:	je     0x416539
  416564:	lock sbb ch,BYTE PTR ds:0x2e304816
  41656b:	clc    
  41656c:	xor    BYTE PTR ss:[esi],ch
  41656f:	icebp  
  416570:	xor    al,0x2f
  416572:	xor    bh,cl
  416574:	mov    WORD PTR [ebx],ds
  416576:	cmp    cl,bl
	...
  416584:	add    BYTE PTR [eax],al
  416586:	add    BYTE PTR [eax-0x5466d2eb],cl
  41658c:	outs   dx,DWORD PTR ds:[esi]
  41658d:	ja     0x416555
  41658f:	ret    
  416590:	inc    eax
  416591:	je     0x416517
  416593:	pop    edx
  416594:	push   ebp
  416595:	push   0x746d6079
  41659a:	jne    0x41654c
  41659c:	sbb    ebp,DWORD PTR ds:0x2e3079c6
  4165a2:	mov    eax,0x202e3056
  4165a7:	dec    esi
  4165a8:	das    
  4165a9:	das    
  4165aa:	push   ss
  4165ab:	aas    
  4165ac:	sbb    edi,DWORD PTR [eax]
  4165ae:	sbb    DWORD PTR [edi],esi
  4165b0:	adc    eax,0x6f9a592d
  4165b5:	ja     0x4165cd
  4165b7:	add    BYTE PTR [eax+0x74],0x44
  4165bb:	dec    ecx
  4165bc:	push   ebp
  4165bd:	push   0x68055f39
  4165c2:	xor    eax,0xd63a5553
  4165c7:	jnp    0x416638
  4165c9:	ins    DWORD PTR es:[edi],dx
  4165ca:	sbb    esi,DWORD PTR [eax+eax*2]
  4165cd:	jno    0x4165da
  4165cf:	sub    DWORD PTR [ebx+0x2e],esp
  4165d2:	or     bl,BYTE PTR [edx]
  4165d4:	ins    BYTE PTR es:[edi],dx
  4165d5:	sub    eax,0x66408600
  4165da:	xor    DWORD PTR [ecx+0x33],edi
  4165dd:	js     0x416655
  4165df:	popf   
  4165e0:	ss xor al,0x61
  4165e3:	fdivr  QWORD PTR [esi]
  4165e5:	js     0x41664c
  4165e7:	mov    bh,BYTE PTR [ebx]
  4165e9:	je     0x41665f
	...
  4165f7:	add    BYTE PTR [eax],al
  4165f9:	add    BYTE PTR [edx-0x64d0d4cf],ch
  4165ff:	pop    ecx
  416600:	ins    DWORD PTR es:[edi],dx
  416601:	outs   dx,DWORD PTR ds:[esi]
  416602:	mov    esi,0xb865763a
  416607:	bound  ebp,QWORD PTR [esi]
  416609:	arpl   WORD PTR [ebp-0x34b2d4ca],bx
  41660f:	inc    eax
  416610:	jae    0x41667a
  416612:	push   es
  416613:	ins    BYTE PTR es:[edi],dx
  416614:	jae    0x416645
  416616:	cli    
  416617:	pop    ss
  416618:	xor    eax,0x78401c69
  41661d:	cmp    bh,BYTE PTR gs:[ebx]
  416620:	je     0x416696
  416622:	fidiv  DWORD PTR [eax]
  416624:	sub    ebp,DWORD PTR [edi]
  416626:	iret   
  416627:	aas    
  416628:	ins    BYTE PTR es:[edi],dx
  416629:	outs   dx,DWORD PTR ds:[esi]
  41662a:	out    0x6b,al
  41662c:	imul   esi,DWORD PTR [ebp-0x57],0x9e635f3b
  416633:	arpl   WORD PTR [edi+0x73],bp
  416636:	ins    BYTE PTR es:[edi],dx
  416637:	bound  ebp,QWORD PTR [ebx+0x6d]
  41663a:	pop    ebp
  41663b:	sbb    bh,BYTE PTR [edi]
  41663d:	push   esp
  41663e:	push   0x48616830
  416643:	div    BYTE PTR [ecx+esi*1]
  416646:	dec    ebx
  416647:	ds cs mov gs:0x53000064,al
  41664f:	xor    al,0x45
  416651:	push   eax
  416652:	jne    0x416699
  416654:	inc    esi
  416655:	dec    ecx
  416656:	mov    es,WORD PTR [eax+esi*1+0x59]
  41665a:	xchg   edi,eax
  41665b:	and    BYTE PTR [eax+0x4b],dl
	...
  41666a:	add    BYTE PTR [eax],al
  41666c:	add    BYTE PTR [ebx+0x30],ah
  41666f:	ds inc edi
  416671:	das    
  416672:	sub    DWORD PTR [edi+edx*2],esi
  416675:	push   cs
  416676:	adc    eax,0xfc0a5241
  41667b:	dec    edi
  41667c:	inc    ebx
  41667d:	pop    ds
  41667e:	pushf  
  41667f:	dec    esp
  416680:	push   ebx
  416681:	sub    bl,BYTE PTR [ebp-0x139ccfed]
  416687:	add    DWORD PTR [eax],eax
  416689:	arpl   dx,bp
  41668b:	add    DWORD PTR [ebx+0x14],ecx
  41668e:	mov    al,0x50
  416690:	jmp    DWORD PTR [ebx-0x14]
  416693:	add    DWORD PTR [eax],eax
  416695:	arpl   sp,bp
  416697:	add    DWORD PTR [eax],eax
  416699:	arpl   WORD PTR [ebx+0x36],di
  41669c:	inc    esi
  41669d:	movq   QWORD PTR [edx+edx*2-0x5a],mm0
  4166a2:	nop
  4166a3:	cmp    BYTE PTR [edi-0x40],ah
  4166a6:	jp     0x4166fe
  4166a8:	jno    0x416666
  4166aa:	xchg   BYTE PTR [ebp+0x5c],ch
  4166ad:	lods   al,BYTE PTR ds:[esi]
  4166ae:	test   DWORD PTR [ebx+0x64],edx
  4166b1:	int3   
  4166b2:	ja     0x416726
  4166b4:	pop    esp
  4166b5:	mov    al,ds:0xc6726f61
  4166ba:	mov    gs,WORD PTR [ebp+0x56]
  4166bd:	mov    esi,0x8c67725a
  4166c2:	pop    esi
  4166c3:	inc    ebp
  4166c4:	push   ebx
  4166c5:	test   DWORD PTR ds:0x4d977156,esi
  4166cb:	pop    eax
  4166cc:	ins    BYTE PTR es:[edi],dx
  4166cd:	arpl   WORD PTR [ecx],sp
  4166cf:	push   esi
  4166d0:	add    BYTE PTR [bx+si],al
	...
  4166df:	add    BYTE PTR [ebp-0x78a08fc5],cl
  4166e5:	cmp    BYTE PTR [ecx+0x74],dl
  4166e8:	jno    0x41671f
  4166ea:	push   esi
  4166eb:	arpl   WORD PTR gs:[eax],si
  4166ee:	pop    ebx
  4166ef:	jno    0x416744
  4166f1:	and    BYTE PTR [ebx+0x77],ah
  4166f4:	and    eax,0x40590805
  4166f9:	add    eax,0x563043b
  4166fe:	out    0x3,eax
  416700:	arpl   WORD PTR ds:0x684a03e7,ax
  416706:	stc    
  416707:	push   ebp
  416708:	inc    eax
  416709:	jno    0x4166c5
  41670b:	xor    DWORD PTR [ebp+0x69],esi
  41670e:	add    ebx,DWORD PTR [eax+0x63]
  416711:	adc    edx,DWORD PTR ss:[ebx+0x1e]
  416715:	push   0x590244db
  41671a:	shr    BYTE PTR [ebp+0x0],1
  41671d:	inc    edx
  41671e:	(bad)  
  41671f:	push   ebp
  416720:	repnz ins DWORD PTR es:[edi],dx
  416722:	mov    ebx,0xba681260
  416727:	jb     0x41672d
  416729:	outs   dx,BYTE PTR ds:[esi]
  41672a:	int    0x3c
  41672c:	inc    DWORD PTR [edi+edx*4]
  41672f:	jno    0x4166ff
  416731:	push   0x4ed272c4
  416736:	mov    ecx,DWORD PTR [edi-0x42]
  416739:	cmp    BYTE PTR [edx+esi*2+0x55866ed2],al
  416740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416741:	popa   
  416742:	out    0x3,eax
	...
  416750:	add    BYTE PTR [eax],al
  416752:	add    BYTE PTR [ebx+0x5],ah
  416755:	out    0x3,eax
  416757:	arpl   WORD PTR ds:0x57c203e7,ax
  41675d:	jo     0x4167d2
  41675f:	xchg   edi,eax
  416760:	sbb    BYTE PTR [ecx+0x53697f15],bh
  416766:	add    al,0xa2
  416768:	push   edi
  416769:	pusha  
  41676a:	je     0x4166fb
  41676c:	xor    al,BYTE PTR [ebp+0x74]
  41676f:	jno    0x4167dd
  416771:	push   ebx
  416772:	pop    edi
  416773:	adc    BYTE PTR [ecx+0x2b],0x63
  416777:	ja     0x4167df
  416779:	out    0x3,eax
  41677b:	arpl   WORD PTR ds:0x6876e900,ax
  416781:	js     0x4167c7
  416783:	pop    edi
  416784:	ss ins DWORD PTR es:[edi],dx
  416786:	rcpps  xmm2,XMMWORD PTR [edx+0x5f]
  41678a:	sbb    esp,DWORD PTR [ecx+edi*1]
  41678d:	push   ebp
  41678e:	add    BYTE PTR ds:0x5f3b3f37,dl
  416794:	push   0x70
  416796:	or     al,0x15
  416798:	add    eax,0x8560e8ff
  41679d:	jno    0x4167a0
  41679f:	cmp    al,0x69
  4167a1:	ins    BYTE PTR es:[edi],dx
  4167a2:	mov    edx,0xd5642b52
  4167a7:	xor    al,0x5
  4167a9:	push   ecx
  4167aa:	mov    cl,0x47
  4167ac:	push   0x6917af74
  4167b1:	fs (bad) 
  4167b3:	repnz xor al,0x5f
  4167b6:	mov    ebp,0x0
	...
  4167c3:	add    BYTE PTR [eax],al
  4167c5:	add    BYTE PTR [eax],cl
  4167c7:	sbb    al,0x0
  4167c9:	jmp    0xe9416d2e
  4167ce:	stc    
  4167cf:	and    edi,DWORD PTR [edi]
  4167d1:	jmp    0xe9808bd4
  4167d6:	push   ss
  4167d7:	and    al,0x3f
  4167d9:	jmp    0xe9808c02
  4167de:	xor    ah,BYTE PTR [edi+edi*1]
  4167e1:	jmp    0xe9809748
  4167e6:	push   edx
  4167e7:	das    
  4167e8:	aas    
  4167e9:	jmp    0xe9809735
  4167ee:	inc    esi
  4167ef:	das    
  4167f0:	aas    
  4167f1:	jmp    0xe98097a8
  4167f6:	stos   DWORD PTR es:[edi],eax
  4167f7:	das    
  4167f8:	aas    
  4167f9:	jmp    0xe980978d
  4167fe:	aam    0x2e
  416800:	aas    
  416801:	jmp    0x416d66
  416806:	cli    
  416807:	push   es
  416808:	add    BYTE PTR [eax],al
  41680a:	jp     0x4167e7
  41680c:	std    
  41680d:	dec    edx
  41680f:	adc    dh,BYTE PTR [ebp+0x20]
  416812:	jle    0x416846
  416814:	pop    edi
  416815:	jne    0x41688e
  416817:	cmp    al,0x6e
  416819:	je     0x416884
  41681b:	add    ebp,edi
  41681d:	dec    edx
  41681f:	xchg   DWORD PTR [edx],ebx
  416821:	add    dl,cl
  416823:	pop    es
  416824:	cmp    eax,0x5d1baa70
  416829:	je     0x41682b
	...
  416837:	add    BYTE PTR [eax],al
  416839:	pop    ebx
  41683a:	add    ebp,edi
  41683c:	dec    DWORD PTR [edx-0x75ffe379]
  416842:	pop    es
  416843:	dec    esp
  416844:	outs   dx,DWORD PTR ds:[esi]
  416845:	cdq    
  416846:	data16 ins BYTE PTR es:[edi],dx
  416848:	and    BYTE PTR [ebx-0x54bb8fa9],bh
  41684e:	imul   ebx,DWORD PTR [ebp+0x0],0xffffff8b
  416852:	pop    es
  416853:	add    BYTE PTR [eax+0x15a],al
  416859:	mov    ecx,0x2f685f66
  41685e:	pop    es
  41685f:	std    
  416860:	dec    DWORD PTR [edx-0x79]
  416863:	sbb    eax,0x3f073a00
  416868:	outs   dx,DWORD PTR ds:[esi]
  416869:	aad    0x3d
  41686b:	gs fld DWORD PTR gs:[esi]
  41686f:	std    
  416870:	dec    DWORD PTR [edx-0x79]
  416873:	and    al,BYTE PTR [eax]
  416875:	cmp    al,BYTE PTR [edi]
  416877:	dec    eax
  416878:	imul   ebp,DWORD PTR [ecx-0x6c8d9496],0xa000206
  416882:	xchg   DWORD PTR [ecx],eax
  416884:	add    dl,bh
  416886:	push   es
  416887:	dec    ecx
  416888:	jns    0x4168e4
  41688a:	dec    ebp
  41688b:	imul   esp,DWORD PTR [ebx+0x63],0x39
  41688f:	outs   dx,DWORD PTR ds:[esi]
  416890:	arpl   WORD PTR [ebp+0x61005530],ax
  416896:	in     al,dx
  416897:	add    DWORD PTR [eax+0x1ec40],eax
	...
  4168a9:	add    BYTE PTR [eax],al
  4168ab:	add    BYTE PTR [eax],ah
  4168ad:	inc    ebx
  4168ae:	outs   dx,DWORD PTR ds:[esi]
  4168af:	imul   eax,DWORD PTR [edx+ebx*1+0x24],0x3f
  4168b4:	push   ebx
  4168b5:	cld    
  4168b6:	inc    edi
  4168b7:	pop    edi
  4168b8:	dec    edi
  4168b9:	or     eax,0xecbcff04
  4168be:	and    DWORD PTR ds:0x4b01ec63,0x6731cc2a
  4168c8:	inc    eax
  4168c9:	rcr    BYTE PTR [eax+0x72],1
  4168cc:	push   es
  4168cd:	fild   WORD PTR [ecx]
  4168cf:	add    ah,BYTE PTR [ebx-0x14]
  4168d2:	sub    DWORD PTR [esi],0x4101ec63
  4168d8:	hlt    
  4168d9:	enter  0x6d70,0xd
  4168dd:	or     al,0x48
  4168df:	ins    DWORD PTR es:[edi],dx
  4168e0:	add    BYTE PTR [ecx-0x68029c90],dh
  4168e6:	push   esi
  4168e7:	add    BYTE PTR [ecx-0x14],ah
  4168ea:	add    DWORD PTR [eax+0x1ec8c],eax
  4168f0:	mov    al,ds:0xbc6b709b
  4168f5:	jb     0x416918
  4168f7:	aas    
  4168f8:	mov    edi,0xca6e6c89
  4168fd:	jg     0x416954
  4168ff:	jb     0x4168c3
  416901:	jo     0x41696f
  416903:	jbe    0x4168cb
  416905:	int3   
  416906:	xor    eax,0x5688b46d
  41690b:	add    BYTE PTR [edx-0x14],ah
  41690e:	add    DWORD PTR [eax+0x0],eax
	...
  41691c:	add    BYTE PTR [eax],al
  41691e:	add    BYTE PTR [ebx-0x14],dl
  416921:	add    DWORD PTR [eax],eax
  416923:	mov    ds:0x7c714b05,al
  416928:	imul   edx,DWORD PTR [eax+0x57],0x77
  41692c:	push   edi
  41692d:	dec    eax
  41692e:	pop    eax
  41692f:	jl     0x416984
  416931:	inc    esp
  416932:	and    al,0x97
  416934:	push   0x56
  416936:	jo     0x4169aa
  416938:	add    eax,0x856303e8
  41693d:	in     al,dx
  41693e:	add    esp,DWORD PTR [ebx+0x5]
  416941:	pop    ss
  416942:	imul   edx,DWORD PTR [ecx+0x56],0x69247216
  416949:	out    0x36,eax
  41694b:	dec    esi
  41694c:	arpl   WORD PTR [ebx],bx
  41694e:	pop    ebx
  41694f:	adc    al,0x57
  416951:	add    al,0x40
  416953:	sbb    BYTE PTR [edx+ecx*1+0x56],ch
  416957:	ss push esi
  416959:	push   cs
  41695a:	push   0x17
  41695c:	cmp    DWORD PTR [esi],ebx
  41695e:	ins    DWORD PTR es:[edi],dx
  41695f:	add    eax,0x125afe61
  416964:	cmp    DWORD PTR [edx-0x3ba8eea8],ebp
  41696a:	jno    0x416963
  41696c:	xor    cl,ah
  41696e:	push   ebp
  41696f:	repnz imul edi,DWORD PTR [esi-0x40bff08f],0x53
  416977:	imul   DWORD PTR [ecx-0x47]
  41697a:	push   0x6b9a39d1
  41697f:	shr    BYTE PTR [ecx-0x45],0x23
	...
  41698f:	add    BYTE PTR [eax],al
  416991:	add    BYTE PTR [ebp-0x3f986c98],ah
  416997:	push   ebx
  416998:	call   0x8337:0xba489303
  41699f:	and    bl,BYTE PTR [edx-0x64ce64dd]
  4169a5:	xor    esi,DWORD PTR [esi+0x16]
  4169a8:	int    0x13
  4169aa:	push   0x91a1000b
  4169af:	push   esi
  4169b0:	je     0x416965
  4169b2:	inc    eax
  4169b3:	and    al,0x71
  4169b5:	hlt    
  4169b6:	push   esi
  4169b7:	sbb    BYTE PTR [ecx+0x4a],ah
  4169ba:	test   BYTE PTR [ebp+0x74],dl
  4169bd:	adc    edi,DWORD PTR [edi]
  4169bf:	sub    ebp,DWORD PTR ds:0x3f0b5c03
  4169c5:	dec    edx
  4169c6:	jle    0x416a2c
  4169c8:	jo     0x4169ff
  4169ca:	mov    WORD PTR [esi+ebp*2+0x4a],es
  4169ce:	push   edx
  4169cf:	popa   
  4169d0:	addr16 aas 
  4169d2:	cmp    bl,BYTE PTR [ebx]
  4169d4:	and    BYTE PTR [eax],dl
  4169d6:	cmp    esp,DWORD PTR [esi+ebp*2+0x15]
  4169da:	dec    eax
  4169db:	push   ecx
  4169dc:	ja     0x4169a3
  4169de:	sub    BYTE PTR [ebx],0x39
  4169e1:	sbb    BYTE PTR [ebp+edx*1+0xb],cl
  4169e5:	repz pop ds
  4169e7:	push   0x6e
  4169e9:	cmc    
  4169ea:	add    eax,0x24c47467
  4169ef:	outs   dx,BYTE PTR fs:[esi]
  4169f1:	push   es
  4169f2:	sub    ebp,DWORD PTR [ebp+0x3a]
  4169f5:	or     DWORD PTR [eax],eax
	...
  416a03:	add    BYTE PTR [eax],al
  416a05:	cmp    al,0x69
  416a07:	jae    0x4169f5
  416a09:	outs   dx,BYTE PTR ds:[esi]
  416a0a:	inc    esi
  416a0b:	ins    DWORD PTR es:[edi],dx
  416a0c:	(bad)  
  416a0d:	repnz arpl WORD PTR [ecx-0x2b],sp
  416a11:	stc    
  416a12:	imul   ebp,DWORD PTR [esi+0x3],0xce6c663f
  416a19:	mov    bh,0x64
  416a1b:	or     esp,ebx
  416a1d:	lahf   
  416a1e:	push   0x6e
  416a20:	mov    ch,0xc5
  416a22:	addr16 je 0x4169f9
  416a25:	mov    WORD PTR [eax+0x70],ss
  416a28:	test   BYTE PTR [esi+0x25],bl
  416a2b:	pop    edi
  416a2c:	cdq    
  416a2d:	nop
  416a2e:	imul   esp,DWORD PTR [edi-0x76],0x6751c1
  416a35:	int    0x55
  416a37:	sub    ebp,DWORD PTR [edi-0x17]
  416a3a:	das    
  416a3b:	popa   
  416a3c:	je     0x416a5d
  416a3e:	xor    DWORD PTR [edx+esi*2-0x19],esi
  416a42:	bound  ebp,QWORD PTR [ecx+0xd]
  416a45:	adc    BYTE PTR [ecx+0x6b],al
  416a48:	outs   dx,BYTE PTR ds:[esi]
  416a49:	xchg   esi,eax
  416a4a:	pusha  
  416a4b:	outs   dx,BYTE PTR ds:[esi]
  416a4c:	je     0x416aad
  416a4e:	inc    eax
  416a4f:	outs   dx,BYTE PTR ds:[esi]
  416a50:	arpl   WORD PTR ds:0x956e656d,bp
  416a56:	neg    DWORD PTR [edi]
  416a58:	bound  esi,QWORD PTR [ebx]
  416a5a:	push   ebx
  416a5b:	pop    ebp
  416a5c:	jb     0x4169f1
  416a5e:	or     BYTE PTR [edx],cl
  416a60:	push   ebp
  416a61:	mov    DWORD PTR [eax+0x72],esp
  416a64:	sub    eax,0x6e616e7b
	...
  416a75:	add    BYTE PTR [eax],al
  416a77:	add    BYTE PTR [esi-0x9],dl
  416a7a:	pop    ds
  416a7b:	dec    ebp
  416a7c:	pop    ebp
  416a7d:	aaa    
  416a7e:	gs ins BYTE PTR es:[edi],dx
  416a80:	scas   al,BYTE PTR es:[edi]
  416a81:	bound  ebp,QWORD PTR [ebx]
  416a83:	xor    al,0x8c
  416a85:	repz pop ds
  416a87:	sub    BYTE PTR [ecx+0x56],ch
  416a8a:	imul   esi,DWORD PTR [eax+0x6b],0x8e62653d
  416a91:	pop    esi
  416a92:	aaa    
  416a93:	and    bh,cl
  416a95:	adc    BYTE PTR [ebp+0x45],al
  416a98:	push   0xfffffff0
  416a9a:	sub    eax,0x53215130
  416a9f:	imul   ebp,DWORD PTR [edi+ebx*2+0x23a9776b],0x6733835
  416aaa:	or     cl,BYTE PTR ds:0x6f3f0340
  416ab0:	or     al,0x2f
  416ab2:	popa   
  416ab3:	outs   dx,BYTE PTR ds:[esi]
  416ab4:	out    0x27,al
  416ab6:	dec    esp
  416ab7:	gs in  al,dx
  416ab9:	ins    DWORD PTR es:[edi],dx
  416aba:	je     0x416b24
  416abc:	arpl   WORD PTR [edx-0x7443b3ff],si
  416ac2:	bound  esi,QWORD PTR [edx+edi*4+0x6f]
  416ac6:	outs   dx,DWORD PTR ds:[esi]
  416ac7:	cmp    ah,BYTE PTR [ebx-0x61]
  416aca:	inc    esi
  416acb:	push   esp
  416acc:	inc    ebx
  416acd:	leave  
  416ace:	push   esp
  416acf:	and    BYTE PTR [ebx+0x34503570],bl
  416ad5:	std    
  416ad6:	sub    eax,0x49d26e30
  416adb:	ins    DWORD PTR es:[edi],dx
	...
  416ae8:	add    BYTE PTR [eax],al
  416aea:	add    BYTE PTR [eax+0x38],dh
  416aed:	sbb    ah,BYTE PTR [eax]
  416aef:	inc    esi
  416af0:	cmp    ecx,DWORD PTR [edi]
  416af2:	or     ah,BYTE PTR [edx+0x5363614b]
  416af8:	adc    BYTE PTR [edx],bl
  416afa:	and    BYTE PTR [ecx+0x590b29ff],cl
  416b00:	sub    eax,0xfc3e6161
  416b05:	push   edi
  416b06:	sub    esp,DWORD PTR [esi]
  416b08:	push   es
  416b09:	popa   
  416b0a:	ins    DWORD PTR es:[edi],dx
  416b0b:	aas    
  416b0c:	add    eax,0xcc69656e
  416b11:	ins    BYTE PTR es:[edi],dx
  416b12:	fs ds out dx,al
  416b15:	push   edi
  416b16:	addr16 pop ss
  416b18:	add    eax,0x93492030
  416b1d:	push   esp
  416b1e:	cmp    edx,DWORD PTR [ebx-0x47]
  416b21:	pop    es
  416b22:	inc    ecx
  416b23:	hlt    
  416b24:	lods   eax,DWORD PTR ds:[esi]
  416b25:	imul   esp,DWORD PTR [ebx+0x0],0xffffffb0
  416b29:	ins    BYTE PTR es:[edi],dx
  416b2a:	ins    DWORD PTR es:[edi],dx
  416b2b:	add    eax,0xff6123f2
  416b30:	xchg   esi,eax
  416b31:	push   edx
  416b32:	arpl   WORD PTR [esi-0x2e],dx
  416b35:	cmp    BYTE PTR [ecx-0x3a],dh
  416b38:	call   0x746b:0xc9bc3f30
  416b3f:	mov    DWORD PTR [edi+ecx*2],ecx
  416b42:	ins    DWORD PTR es:[edi],dx
  416b43:	leave  
  416b44:	add    eax,0x64cf6f90
  416b49:	into   
  416b4a:	pop    ss
  416b4b:	test   DWORD PTR ds:0x2bc7,edx
	...
  416b5d:	add    dl,al
  416b5f:	data16 jl 0x416bb5
  416b62:	test   BYTE PTR [ecx-0x70],dl
  416b65:	popa   
  416b66:	(bad)  
  416b67:	pusha  
  416b68:	ret    0xa823
  416b6b:	xor    ah,BYTE PTR [eax-0x42efbcb8]
  416b71:	adc    ecx,DWORD PTR [edx+0x25]
  416b74:	ds ins DWORD PTR es:[edi],dx
  416b76:	lea    esp,[ecx+0x4e]
  416b79:	push   edi
  416b7a:	jb     0x416ba1
  416b7c:	adc    BYTE PTR [esp+eax*2],bl
  416b7f:	or     cl,ah
  416b81:	adc    BYTE PTR [ecx+0x5],bl
  416b84:	adc    eax,0xe7278d04
  416b89:	aas    
  416b8a:	mov    DWORD PTR [edi],esp
  416b8c:	add    DWORD PTR [ecx+edi*2],eax
  416b8f:	daa    
  416b90:	add    DWORD PTR [esi*1+0x33651b60],eax
  416b97:	ins    BYTE PTR es:[edi],dx
  416b98:	ficom  DWORD PTR [ecx]
  416b9a:	test   DWORD PTR [ecx+0x3],esp
  416b9d:	jo     0x416c02
  416b9f:	inc    edi
  416ba0:	add    al,0x58
  416ba2:	fs push ebp
  416ba4:	adc    BYTE PTR [edx+0x10],al
  416ba7:	pop    edi
  416ba8:	add    eax,0xf93f1169
  416bad:	push   0x691d0500
  416bb2:	wrmsr  
  416bb4:	fisubr DWORD PTR [eax-0xf]
  416bb7:	aas    
  416bb8:	int    0x58
  416bba:	or     BYTE PTR ds:0x5fff6ee7,al
  416bc0:	sbb    dl,BYTE PTR [edx]
	...
  416bce:	add    BYTE PTR [eax],al
  416bd0:	add    BYTE PTR ds:0x636fd361,dh
  416bd6:	cmp    BYTE PTR [ebx+0x55a666],dh
  416bdc:	int3   
  416bdd:	mov    esi,0xb2be7436
  416be2:	xor    al,0x65
  416be4:	mov    WORD PTR [eax+0x5],fs
  416be7:	pop    edi
  416be8:	test   DWORD PTR [esi+0x51807034],ecx
  416bee:	pop    ss
  416bef:	test   DWORD PTR cs:[ecx+eiz*2+0x618ca800],esi
  416bf7:	ins    DWORD PTR es:[edi],dx
  416bf8:	mov    bh,BYTE PTR [edi+0x59]
  416bfb:	arpl   WORD PTR [eax+0x7f47697e],bp
  416c01:	ja     0x416c5c
  416c03:	addr16 dec eax
  416c05:	jae    0x416c73
  416c07:	jp     0x416c4d
  416c09:	xor    ch,BYTE PTR [esp+eiz*2-0x17]
  416c0d:	mov    ds:0x7a4a635d,eax
  416c12:	cmp    DWORD PTR [ebp+0x52],ebp
  416c15:	inc    esp
  416c16:	arpl   WORD PTR [ebx+0x44],cx
  416c19:	inc    esp
  416c1a:	arpl   WORD PTR [bp+di],di
  416c1d:	xor    bl,BYTE PTR [ebp+0x67]
  416c20:	cmp    DWORD PTR [edi+0x4b],ebx
  416c23:	jb     0x416c31
  416c25:	inc    esp
  416c26:	ss addr16 add eax,0xc72465f
  416c2d:	cmp    ecx,DWORD PTR [eax+0x6e]
  416c30:	adc    al,0x34
  416c32:	push   0x872
	...
  416c43:	add    BYTE PTR [ebx],bh
  416c45:	push   0x5723e93f
  416c4a:	arpl   WORD PTR ds:0x4635725,cx
  416c50:	pop    edi
  416c51:	inc    esi
  416c52:	jb     0x416c34
  416c54:	adc    BYTE PTR [ecx+0x45],bl
  416c57:	les    ecx,FWORD PTR [eax+edi*1]
  416c5a:	jno    0x416c28
  416c5c:	adc    bh,BYTE PTR [esi]
  416c5e:	arpl   ax,dx
  416c60:	pusha  
  416c61:	inc    esi
  416c62:	jb     0x416c64
  416c64:	and    edi,DWORD PTR [eax]
  416c66:	je     0x416cad
  416c68:	and    bh,BYTE PTR [eax]
  416c6a:	imul   esi,DWORD PTR [edx+0xe],0x3d
  416c6e:	popa   
  416c6f:	jns    0x416cab
  416c71:	inc    ebp
  416c72:	jb     0x416ced
  416c74:	fidivr DWORD PTR [ebx]
  416c76:	inc    esp
  416c77:	fnstcw WORD PTR gs:[ebx]
  416c7a:	jb     0x416ceb
  416c7c:	sar    DWORD PTR [ecx+eiz*2],cl
  416c7f:	jns    0x416cbb
  416c81:	inc    ebp
  416c82:	jb     0x416cfd
  416c84:	call   0x5d6a:0xe665523c
  416c8b:	jae    0x416c6c
  416c8d:	inc    esp
  416c8e:	imul   ebp,DWORD PTR [esi-0x72],0x6b
  416c92:	js     0x416d08
  416c94:	or     dl,BYTE PTR [esi]
  416c96:	popa   
  416c97:	jbe    0x416c38
  416c99:	aaa    
  416c9a:	je     0x416cf0
  416c9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c9d:	push   ss
  416c9e:	popa   
  416c9f:	ins    BYTE PTR es:[edi],dx
  416ca0:	pushf  
  416ca1:	or     DWORD PTR [ebx+0x70],ecx
  416ca4:	das    
  416ca5:	arpl   WORD PTR [eax+0x72],dx
	...
  416cb4:	add    BYTE PTR [eax],al
  416cb6:	add    BYTE PTR ds:0x89736166,ah
  416cbc:	or     eax,0x631f6b6b
  416cc1:	add    BYTE PTR [ecx+0x57],cl
  416cc4:	cmp    DWORD PTR [ecx+0x72],esp
  416cc7:	pop    ecx
  416cc8:	bound  ebp,QWORD PTR [esi+0x61]
  416ccb:	dec    esi
  416ccc:	ins    BYTE PTR es:[edi],dx
  416ccd:	dec    esp
  416cce:	outs   dx,DWORD PTR ds:[esi]
  416ccf:	pop    ebp
  416cd0:	push   0x61
  416cd2:	fs push ebp
  416cd4:	arpl   WORD PTR [ecx+0x73],dx
  416cd7:	pop    edi
  416cd8:	aaa    
  416cd9:	add    BYTE PTR [edi+0x5f],al
  416cdc:	sub    eax,0x6c616f54
  416ce1:	outs   dx,BYTE PTR ds:[esi]
  416ce2:	dec    ecx
  416ce3:	xchg   esp,eax
  416ce4:	imul   ebp,DWORD PTR [ebx+0x72],0x697466a7
  416ceb:	arpl   bx,cx
  416ced:	imul   eax,DWORD PTR [eax],0x20
  416cf0:	xchg   ebx,eax
  416cf1:	imul   esi,DWORD PTR [esi-0x3a],0xffffff8e
  416cf5:	push   ebp
  416cf6:	push   ecx
  416cf7:	retf   0x35c8
  416cfa:	ins    DWORD PTR es:[edi],dx
  416cfb:	mov    al,0x90
  416cfd:	dec    edi
  416cfe:	addr16 mov ch,0xcb
  416d01:	xor    BYTE PTR [edi-0x39],ah
  416d04:	popf   
  416d05:	add    DWORD PTR [esp+eax*8-0x75],ecx
  416d09:	ins    BYTE PTR es:[edi],dx
  416d0a:	outs   dx,BYTE PTR ds:[esi]
  416d0b:	xchg   esi,eax
  416d0c:	outs   dx,DWORD PTR ds:[esi]
  416d0d:	data16 jb 0x416cb2
  416d10:	fmul   QWORD PTR [ebp+0x6d]
  416d13:	mov    WORD PTR [edi+0x56],?
  416d16:	jo     0x416ccb
  416d18:	dec    esi
  416d19:	push   0x76
	...
  416d27:	add    BYTE PTR [eax],al
  416d29:	add    BYTE PTR [edx-0x78],bh
  416d2c:	data16 gs jle 0x416daa
  416d30:	bound  ebp,QWORD PTR [esi+esi*2+0x41]
  416d34:	inc    ebx
  416d35:	add    BYTE PTR [edx+0x70736e48],ah
  416d3b:	xor    BYTE PTR [eax],dh
  416d3d:	ins    DWORD PTR es:[edi],dx
  416d3e:	js     0x416d89
  416d40:	push   0x50
  416d42:	push   ecx
  416d43:	xor    eax,0x49476752
  416d48:	popa   
  416d49:	arpl   WORD PTR [eax-0x24],dx
  416d4c:	add    DWORD PTR [ecx+0x51],esp
  416d4f:	adc    eax,0xae707454
  416d54:	daa    
  416d55:	fs inc edi
  416d57:	add    BYTE PTR [ecx+eax*2],al
  416d5a:	inc    esi
  416d5b:	out    dx,al
  416d5c:	dec    edi
  416d5d:	dec    ebp
  416d5e:	xor    ecx,DWORD PTR [ecx]
  416d60:	push   0x51
  416d62:	sbb    cl,bh
  416d64:	dec    ebp
  416d65:	arpl   WORD PTR [esi],ax
  416d67:	out    dx,eax
  416d68:	dec    edi
  416d69:	ins    DWORD PTR es:[edi],dx
  416d6a:	adc    DWORD PTR [ecx],eax
  416d6c:	inc    ebx
  416d6d:	add    BYTE PTR [eax],ah
  416d6f:	or     DWORD PTR [esi+0x74],edx
  416d72:	es add eax,0x460850d5
  416d78:	les    edx,FWORD PTR [ebp-0x9]
  416d7b:	pop    ebx
  416d7c:	int    0x6c
  416d7e:	add    ah,BYTE PTR [ebx+edx*8+0x60]
  416d82:	sar    BYTE PTR [edx*8-0x469d30ca],cl
  416d89:	pusha  
  416d8a:	arpl   WORD PTR [esi-0x34],ax
  416d8d:	push   ebp
	...
  416d9a:	add    BYTE PTR [eax],al
  416d9c:	add    bh,cl
  416d9e:	inc    esi
  416d9f:	mov    ebx,0xba68b26a
  416da4:	dec    edi
  416da5:	(bad)  
  416da6:	push   edi
  416da7:	test   BYTE PTR [ebx],al
  416da9:	mov    ds:0xaf539057,al
  416dae:	inc    esp
  416daf:	mov    dl,BYTE PTR [eax+edx*4+0x5c]
  416db3:	jns    0x416e15
  416db5:	mov    ds:0x844f7968,al
  416dba:	imul   eax,DWORD PTR [eax-0x7ba65b9a],0x33
  416dc1:	jno    0x416e1f
  416dc3:	pop    ebp
  416dc4:	outs   dx,DWORD PTR gs:[esi]
  416dc6:	push   0x5746132
  416dcb:	out    0x3,eax
  416dcd:	arpl   WORD PTR ds:0x56303e7,ax
  416dd3:	out    0x3,eax
  416dd5:	arpl   WORD PTR ds:0x56303e7,ax
  416ddb:	out    0x3,eax
  416ddd:	arpl   WORD PTR ds:0x56303e7,ax
  416de3:	out    0x3,eax
  416de5:	arpl   WORD PTR ds:0x56303e7,ax
  416deb:	out    0x3,eax
  416ded:	arpl   WORD PTR ds:0x56303e7,ax
  416df3:	out    0x3,eax
  416df5:	arpl   WORD PTR ds:0x56303e7,ax
  416dfb:	add    cl,ch
  416dfd:	pusha  
  416dfe:	add    eax,0xe900
	...
  416e0f:	add    BYTE PTR [eax+0x5],ah
  416e12:	add    cl,ch
  416e14:	pusha  
  416e15:	add    eax,0x560e900
  416e1a:	add    cl,ch
  416e1c:	pusha  
  416e1d:	add    eax,0x560e900
  416e22:	add    cl,ch
  416e24:	pusha  
  416e25:	add    eax,0x560e900
  416e2a:	add    cl,ch
  416e2c:	pusha  
  416e2d:	add    eax,0x560e900
  416e32:	add    cl,ch
  416e34:	pusha  
  416e35:	add    eax,0x560e900
  416e3a:	add    cl,ch
  416e3c:	cwde   
  416e3d:	cmp    al,BYTE PTR [edi-0x5b]
  416e40:	pusha  
  416e41:	dec    esi
  416e42:	and    edi,DWORD PTR [ecx-0x3bd4d288]
  416e48:	jo     0x416e63
  416e4a:	pop    eax
  416e4b:	les    eax,FWORD PTR [ebx+0x15]
  416e4e:	xor    al,0x91
  416e50:	dec    ebx
  416e51:	and    al,0x30
  416e53:	sbb    esi,DWORD PTR [edi]
  416e55:	and    al,0x30
  416e57:	sbb    ebp,DWORD PTR [edi]
  416e59:	sbb    al,0x23
  416e5b:	sbb    DWORD PTR [ebp+0x2d],ecx
  416e5e:	and    ebx,DWORD PTR [ecx]
  416e60:	jne    0x416e8f
  416e62:	and    edi,ecx
  416e64:	outs   dx,BYTE PTR ds:[esi]
  416e65:	sub    eax,0x2d76f923
  416e6a:	and    edi,ecx
  416e6c:	outs   dx,BYTE PTR ds:[esi]
  416e6d:	sub    eax,0x2d56f923
  416e72:	jnp    0x416e5d
	...
  416e80:	add    BYTE PTR [eax],al
  416e82:	add    BYTE PTR [ebx],ah
  416e84:	fs je  0x416eb6
  416e87:	inc    eax
  416e88:	pop    ecx
  416e89:	addr16 pop ds
  416e8b:	add    al,0x36
  416e8d:	ja     0x416ea9
  416e8f:	xor    esp,DWORD PTR [ebx+ebp*2+0x0]
  416e93:	push   ebx
  416e94:	pop    ebx
  416e95:	outs   dx,WORD PTR ds:[esi]
  416e97:	jp     0x416efa
  416e99:	popa   
  416e9a:	jb     0x416ef8
  416e9c:	xor    BYTE PTR [ebx+esi*1-0x48],ch
  416ea0:	push   ds
  416ea1:	fs ins BYTE PTR es:[edi],dx
  416ea3:	mov    es,WORD PTR [eax*2+0x735db573]
  416eaa:	ss inc esi
  416eac:	sbb    DWORD PTR [edx+0x6f],esi
  416eaf:	sub    DWORD PTR [edi],ebp
  416eb1:	outs   dx,DWORD PTR ds:[esi]
  416eb2:	jae    0x416efe
  416eb4:	sbb    DWORD PTR [ebx+0x66],ebp
  416eb7:	push   ss
  416eb8:	xor    eax,0x1817725d
  416ebd:	inc    esi
  416ebe:	popa   
  416ebf:	clc    
  416ec0:	pop    ss
  416ec1:	push   eax
  416ec2:	ins    BYTE PTR es:[edi],dx
  416ec3:	xlat   BYTE PTR ds:[ebx]
  416ec4:	fs outs dx,BYTE PTR gs:[esi]
  416ec7:	leave  
  416ec8:	pop    ss
  416ec9:	inc    esi
  416eca:	push   esp
  416ecb:	jmp    0x6f3f:0xf96f4817
  416ed2:	add    cl,bh
  416ed4:	pop    esp
  416ed5:	data16 je 0x416e6d
  416ed8:	arpl   WORD PTR [edx+0x65],si
  416edb:	out    dx,al
  416edc:	inc    ebp
  416edd:	pop    ebp
  416ede:	jb     0x416e98
  416ee0:	pop    ss
  416ee1:	push   eax
  416ee2:	ins    BYTE PTR es:[edi],dx
  416ee3:	xchg   edi,eax
  416ee4:	data16 outs dx,BYTE PTR gs:[esi]
	...
  416ef3:	add    BYTE PTR [eax],al
  416ef5:	add    BYTE PTR [ecx+0x2a54460d],cl
  416efb:	or     eax,0x35396f48
  416f00:	outs   dx,DWORD PTR ds:[esi]
  416f01:	add    BYTE PTR [ecx+0x5e],bh
  416f04:	data16 je 0x416e9c
  416f07:	fs jb  0x416f6f
  416f0a:	outs   dx,BYTE PTR ds:[esi]
  416f0b:	inc    ebx
  416f0c:	pop    ebp
  416f0d:	jb     0x416f7d
  416f0f:	sbb    bl,BYTE PTR [ebp+0x76]
  416f12:	addr16 gs inc esp
  416f15:	imul   ebx,DWORD PTR [ebx+0x5d],0x2663676b
  416f1c:	imul   esi,DWORD PTR [ecx+0x17],0x377753cf
  416f23:	and    BYTE PTR [eax],dh
  416f25:	push   eax
  416f26:	sbb    edi,edi
  416f28:	push   edx
  416f29:	je     0x416f8e
  416f2b:	jmp    0x416f93
  416f2d:	not    si
  416f30:	bound  esi,QWORD PTR [edx-0x2]
  416f33:	leave  
  416f34:	aas    
  416f35:	pop    edi
  416f36:	icebp  
  416f37:	jmp    0x416f70
  416f39:	push   ecx
  416f3a:	add    dh,BYTE PTR [eax-0x3a589ba2]
  416f40:	bound  ebp,QWORD PTR [esp+eax*8-0x41]
  416f44:	dec    ecx
  416f45:	rcr    BYTE PTR [bx+si+0x7268],1
  416f4a:	retf   0x3f78
  416f4d:	push   esp
  416f4e:	xchg   ebx,eax
  416f4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f50:	push   0x31dcaf71
  416f55:	pop    edi
  416f56:	mov    al,0x6b
  416f58:	push   eax
  416f59:	ins    DWORD PTR es:[edi],dx
	...
  416f66:	add    BYTE PTR [eax],al
  416f68:	add    BYTE PTR [ecx-0x73b7fe80],dh
  416f6e:	imul   ecx,DWORD PTR [ebp+0x4e],0xffffff82
  416f72:	jns    0x416fd2
  416f74:	add    BYTE PTR [esi+0x63725e4b],dh
  416f7a:	test   al,0x6a
  416f7c:	outs   dx,BYTE PTR ds:[esi]
  416f7d:	xchg   ah,bl
  416f7f:	push   eax
  416f80:	popa   
  416f81:	jnp    0x416fca
  416f83:	pop    esi
  416f84:	je     0x416ff9
  416f86:	(bad)  
  416f87:	push   0x6e
  416f89:	jp     0x416f67
  416f8b:	xor    eax,0x31252b45
  416f90:	dec    esp
  416f91:	push   ds
  416f92:	jmp    0x5f50:0xb3d4703
  416f99:	aaa    
  416f9a:	dec    eax
  416f9b:	inc    eax
  416f9c:	addr16 xor esp,ebx
  416f9f:	cmp    esi,DWORD PTR [ebx+esi*1+0x5]
  416fa3:	xor    BYTE PTR [esi+0x44],ah
  416fa6:	aas    
  416fa7:	or     BYTE PTR [ecx+0x40],ch
  416faa:	add    eax,0x5905673a
  416faf:	push   ss
  416fb0:	adc    DWORD PTR gs:[eax+0x23],ebp
  416fb4:	aas    
  416fb5:	sti    
  416fb6:	pop    ebx
  416fb7:	cli    
  416fb8:	add    BYTE PTR [bp+di+0x13],dl
  416fbc:	das    
  416fbd:	add    al,0x5f
  416fbf:	add    esp,DWORD PTR [edi-0x12]
  416fc2:	push   ecx
  416fc3:	pop    es
  416fc4:	inc    ebx
  416fc5:	(bad)  
  416fc6:	pop    edi
  416fc7:	int3   
  416fc8:	fs cmc 
  416fca:	push   0x51cc
	...
  416fdb:	add    BYTE PTR [ebx+0x32],ah
  416fde:	mov    esi,0xc856cf5d
  416fe3:	push   ecx
  416fe4:	shl    BYTE PTR [ecx],0xa6
  416fe7:	imul   edi,DWORD PTR [edx+edx*2+0x31b160c3],0xffffff93
  416fef:	scas   ax,WORD PTR es:[edi]
  416ff1:	fs xchg ebx,eax
  416ff3:	and    esp,DWORD PTR [edx-0x7b9773a2]
  416ff9:	pop    edi
  416ffa:	mov    esp,DWORD PTR [eax-0x6f]
  416ffd:	add    eax,0x52934cab
  417002:	jle    0x417070
  417004:	xchg   edi,eax
  417005:	bound  ecx,QWORD PTR [edi+0x7b5cb203]
  41700b:	pusha  
  41700c:	jb     0x41703f
  41700e:	out    0x37,eax
  417010:	pushf  
  417011:	push   ebp
  417012:	pop    edx
  417013:	dec    edi
  417014:	test   BYTE PTR [ecx+0x4a],bl
  417017:	ins    BYTE PTR es:[edi],dx
  417018:	xchg   DWORD PTR [esi],esi
  41701a:	cmp    dh,BYTE PTR [edi]
  41701c:	and    eax,0x37043739
  417021:	push   esi
  417022:	push   eax
  417023:	data16 jge 0x417082
  417026:	dec    ebp
  417027:	ins    DWORD PTR es:[edi],dx
  417028:	arpl   WORD PTR [edi],bx
  41702a:	add    BYTE PTR [eax+0x45],al
  41702d:	data16 add BYTE PTR [esi],dl
  417030:	jo     0x417062
  417032:	inc    esi
  417033:	cmp    eax,0x30440577
  417038:	jno    0x41703f
  41703a:	inc    esp
  41703b:	sub    al,0x5d
  41703d:	dec    ecx
  41703e:	inc    edi
  41703f:	cmp    eax,DWORD PTR [eax]
	...
  41704d:	add    BYTE PTR [eax],al
  41704f:	pop    edi
  417050:	inc    esp
  417051:	push   ebx
  417052:	sbb    eax,0x19544722
  417057:	pop    edi
  417058:	ds inc ecx
  41705a:	and    DWORD PTR [esi],ecx
  41705c:	push   esp
  41705d:	je     0x41705d
  41705f:	adc    dl,BYTE PTR [esi+0x0]
  417062:	mov    edx,0xd6746705
  417067:	call   DWORD PTR [edx+0x63]
  41706a:	mov    ch,0x9d
  41706c:	pop    ecx
  41706d:	ins    DWORD PTR es:[edi],dx
  41706e:	retf   
  41706f:	mov    edi,0xa7aa5159
  417074:	xor    eax,0x58a19d43
  417079:	je     0x417047
  41707b:	jle    0x4170ae
  41707d:	push   eax
  41707e:	or     DWORD PTR [ebp+0x25],esp
  417081:	dec    eax
  417082:	xchg   esi,eax
  417083:	mov    ebx,0xa1b85c68
  417088:	xor    DWORD PTR [ebp-0x7a],ebp
  41708b:	test   BYTE PTR [edi+0x5f],ah
  41708e:	fwait
  41708f:	pusha  
  417090:	ss ins DWORD PTR es:[edi],dx
  417092:	(bad)  
  417093:	pushf  
  417094:	push   edx
  417095:	pop    edi
  417096:	jnp    0x41701b
  417098:	sub    DWORD PTR [ebp-0x7b],eax
  41709b:	test   DWORD PTR [edi+0x5f],esp
  41709e:	jge    0x4170d1
  4170a0:	inc    esi
  4170a1:	aas    
  4170a2:	cmp    DWORD PTR [ecx+ebp*1],ebp
  4170a5:	inc    ecx
  4170a6:	push   esp
  4170a7:	xchg   ebx,eax
  4170a8:	push   0x25973d46
  4170ad:	or     DWORD PTR ss:[edi+0x6d57],ecx
	...
  4170c0:	add    BYTE PTR [eax],al
  4170c2:	sbb    al,0x2c
  4170c4:	outs   dx,DWORD PTR ds:[esi]
  4170c5:	jae    0x4170fa
  4170c7:	bound  ebp,QWORD PTR [esi+0x61]
  4170ca:	es or  eax,0x624e434d
  4170d0:	imul   ebp,DWORD PTR [eax+ebx*2+0x68],0x72
  4170d5:	add    BYTE PTR [ecx+0x62],ch
  4170d8:	data16 je 0x417158
  4170db:	push   0xa466572
  4170e0:	ins    BYTE PTR es:[edi],dx
  4170e1:	outs   dx,DWORD PTR ds:[esi]
  4170e2:	pop    eax
  4170e3:	push   0x4839536c
  4170e8:	push   eax
  4170e9:	inc    ebp
  4170ea:	push   esi
  4170eb:	inc    esi
  4170ec:	jno    0x417162
  4170ee:	pop    edi
  4170ef:	or     edx,DWORD PTR [eax+edx*2+0x5a]
  4170f3:	cli    
  4170f4:	pop    ds
  4170f5:	dec    eax
  4170f6:	xchg   ebp,eax
  4170f7:	arpl   WORD PTR [ecx+0x5c],sp
  4170fa:	sbb    eax,DWORD PTR [ebp+0x54]
  4170fd:	outs   dx,DWORD PTR ds:[esi]
  4170fe:	adc    eax,0x8616264
  417103:	or     BYTE PTR [edi+0x6f],cl
  417106:	sbb    al,0x3c
  417108:	jae    0x41716b
  41710a:	clc    
  41710b:	sub    bl,BYTE PTR [edi+eax*2-0xa]
  41710f:	pusha  
  417110:	bound  esp,QWORD PTR [ecx-0x2a]
  417113:	adc    al,0x3f
  417115:	inc    ecx
  417116:	jmp    0x613b:0xff435c0a
  41711d:	inc    esi
  41711e:	into   
  41711f:	pop    ss
  417120:	and    BYTE PTR [edi],dh
  417122:	sbb    bl,BYTE PTR [eax]
  417124:	jb     0x417195
	...
  417132:	add    BYTE PTR [eax],al
  417134:	add    ah,bl
  417136:	sub    ch,BYTE PTR [edi+0x73]
  417139:	jecxz  0x41719b
  41713b:	outs   dx,BYTE PTR ds:[esi]
  41713c:	popa   
  41713d:	jbe    0x417153
  41713f:	dec    ebp
  417140:	inc    ebx
  417141:	bound  ebp,QWORD PTR cs:[ebx+0x6c]
  417145:	cwde   
  417146:	push   0xf630072
  41714b:	arpl   WORD PTR [esi+0x4f],sp
  41714e:	xor    esp,DWORD PTR [ecx+0x72]
  417151:	inc    esi
  417152:	and    bh,BYTE PTR [ebx]
  417154:	ins    BYTE PTR es:[edi],dx
  417155:	xor    al,0x40
  417157:	popa   
  417158:	ins    BYTE PTR es:[edi],dx
  417159:	adc    BYTE PTR [edi],bl
  41715b:	inc    ecx
  41715c:	push   eax
  41715d:	push   ds
  41715e:	cli    
  41715f:	ds jae 0x417199
  417162:	stc    
  417163:	cmp    eax,0x19be1354
  417168:	and    BYTE PTR [ebx],ch
  41716a:	add    esp,DWORD PTR [ebp+0x63]
  41716d:	aaa    
  41716e:	or     eax,0xf2fc543f
  417173:	bound  eax,QWORD PTR [bp+si]
  417176:	rol    BYTE PTR [ecx],1
  417178:	push   ecx
  417179:	or     al,0xfc
  41717b:	dec    edi
  41717c:	jne    0x417180
  41717e:	rcr    BYTE PTR [esi+0x5c],1
  417181:	and    al,0xb2
  417183:	bound  eax,QWORD PTR fs:[edx]
  417186:	mov    edx,0x8ca24130
  41718b:	ds pop esp
  41718d:	mov    al,ds:0xa5634db1
  417192:	push   0xfc8b2031
  417197:	xor    esi,DWORD PTR [edx+0x0]
	...
  4171a6:	add    BYTE PTR [eax],al
  4171a8:	int3   
  4171a9:	mov    edx,0xc5b0715e
  4171ae:	outs   dx,BYTE PTR fs:[esi]
  4171b0:	ret    0x3570
  4171b3:	dec    edi
  4171b4:	mov    al,ds:0x8f6d6490
  4171b9:	jle    0x41721d
  4171bb:	jb     0x417220
  4171bd:	cwde   
  4171be:	cmp    al,0x6c
  4171c0:	jl     0x417240
  4171c2:	bound  ebp,QWORD PTR [eax+esi*4-0x61]
  4171c6:	inc    edx
  4171c7:	push   eax
  4171c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171c9:	jo     0x41720b
  4171cb:	jae    0x41723c
  4171cd:	cmp    DWORD PTR [ebx],0xe7059354
  4171d3:	das    
  4171d4:	sahf   
  4171d5:	pop    ecx
  4171d6:	dec    esi
  4171d7:	data16 cmp al,0x59
  4171da:	cmp    al,BYTE PTR [edi-0x6c]
  4171dd:	xor    eax,0x50223024
  4171e2:	cmp    ebp,DWORD PTR [ecx+0x1d]
  4171e5:	xor    DWORD PTR [edi],edx
  4171e7:	and    al,0x13
  4171e9:	push   edi
  4171ea:	inc    esi
  4171eb:	add    al,0x17
  4171ed:	inc    edx
  4171ee:	cmp    esp,DWORD PTR [ebx+0x41]
  4171f1:	adc    esi,DWORD PTR fs:[edi]
  4171f4:	and    al,BYTE PTR [edi+esi*1+0x49]
  4171f8:	aas    
  4171f9:	inc    esi
  4171fa:	sbb    al,0x58
  4171fc:	add    BYTE PTR [ebx+0x33],al
  4171ff:	xor    al,0x43
  417201:	cmp    DWORD PTR [eax],edx
  417203:	pop    eax
  417204:	add    BYTE PTR ds:0x50f0471b,al
  41720a:	or     al,0x4a
	...
  417218:	add    BYTE PTR [eax],al
  41721a:	add    BYTE PTR [edi],cl
  41721c:	xor    eax,0x57f22fe7
  417221:	adc    eax,0xe7510468
  417226:	ss into 
  417228:	arpl   bx,bx
  41722a:	pop    edx
  41722b:	mov    ah,0x57
  41722d:	les    ebp,FWORD PTR [edi]
  41722f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417230:	pop    ecx
  417231:	enter  0xbb56,0x43
  417235:	lahf   
  417236:	xor    ebx,DWORD PTR [edi-0x39c918ea]
  41723c:	arpl   WORD PTR [ebx-0x73a873a6],si
  417242:	das    
  417243:	popf   
  417244:	pop    ecx
  417245:	mov    BYTE PTR [esi-0x75],dl
  417248:	inc    ebx
  417249:	scas   eax,DWORD PTR es:[edi]
  41724a:	xor    esp,DWORD PTR [ebx+0x36]
  41724d:	jle    0x4172b8
  41724f:	xchg   edi,eax
  417250:	push   edx
  417251:	mov    BYTE PTR [ebp-0x80],dl
  417254:	sub    DWORD PTR [ebp+0x569c5f],esp
  41725a:	sub    DWORD PTR [edx+0x548d502d],0x8c574705
  417264:	push   ecx
  417265:	pop    edi
  417266:	dec    ebp
  417267:	inc    ebx
  417268:	data16 jb 0x417298
  41726b:	ds push ecx
  41726d:	push   0x68514639
  417272:	jmp    0x51b59ca7
  417277:	addr16 inc edx
  417279:	outs   dx,BYTE PTR ds:[esi]
  41727a:	cmp    bl,BYTE PTR [ebx]
  41727c:	sub    ch,BYTE PTR [ebp+edi*1+0x0]
	...
  41728c:	add    BYTE PTR [eax],al
  41728e:	xchg   DWORD PTR ds:0x5071d5f,esi
  417294:	inc    esp
  417295:	or     BYTE PTR [ebx],bh
  417297:	sub    al,BYTE PTR [esi+0x6]
  41729a:	add    esp,DWORD PTR [ecx+0x63]
  41729d:	sbb    esp,DWORD PTR [edi+0x29]
  4172a0:	push   ecx
  4172a1:	adc    BYTE PTR [ebx],ch
  4172a3:	data16 jno 0x417275
  4172a6:	add    al,0x2a
  4172a8:	je     0x417293
  4172aa:	inc    esp
  4172ab:	cmp    dh,BYTE PTR [ebx+0x0]
  4172ae:	add    al,0x5c
  4172b0:	cs int 0xff
  4172b3:	push   eax
  4172b4:	add    BYTE PTR [ebp-0x228e9f68],bh
  4172ba:	rcl    DWORD PTR [ebx+0x77],0xff
  4172be:	les    ebp,FWORD PTR [eax]
  4172c0:	je     0x4172ab
  4172c2:	je     0x417303
  4172c4:	ins    BYTE PTR es:[edi],dx
  4172c5:	enter  0x5d95,0x46
  4172c9:	xchg   ecx,eax
  4172ca:	jo     0x4172f5
  4172cc:	xor    ecx,ebp
  4172ce:	jl     0x41730f
  4172d0:	ins    BYTE PTR es:[edi],dx
  4172d1:	mov    BYTE PTR [ebp+0x50c1465d],cl
  4172d7:	sub    DWORD PTR [ecx+ebp*8],esi
  4172da:	inc    esp
  4172db:	aas    
  4172dc:	addr16 jge 0x41735a
  4172df:	sub    esp,DWORD PTR [edi+0x0]
  4172e2:	out    dx,al
  4172e3:	sub    BYTE PTR [ebp+0x0],bl
  4172e6:	fisubr WORD PTR [edi]
  4172e8:	gs je  0x4172d2
  4172eb:	gs pop ebp
  4172ed:	outs   dx,BYTE PTR ds:[esi]
  4172ee:	fistp  DWORD PTR [ebx+0x61]
  4172f1:	jb     0x4172f3
	...
  4172ff:	add    BYTE PTR [eax],al
  417301:	dec    esp
  417302:	cmp    DWORD PTR [ecx+0x6c],ebp
  417305:	retf   0x7218
  417308:	sub    DWORD PTR gs:[eax+0x6e],esp
  41730c:	je     0x417337
  41730e:	pusha  
  41730f:	jb     0x417387
  417311:	pop    ss
  417312:	das    
  417313:	outs   dx,DWORD PTR ds:[esi]
  417314:	and    ch,BYTE PTR cs:[eax]
  417317:	ins    BYTE PTR es:[edi],dx
  417318:	add    BYTE PTR [esi+0x5b],cl
  41731b:	gs ins BYTE PTR es:[edi],dx
  41731d:	daa    
  41731e:	aaa    
  41731f:	gs ins BYTE PTR es:[edi],dx
  417321:	dec    esi
  417322:	fs cs js 0x417395
  417326:	add    BYTE PTR gs:[ebx+0x5d],dl
  41732a:	pop    ebx
  41732b:	je     0x4173a4
  41732d:	pop    ebx
  41732e:	das    
  41732f:	popa   
  417330:	pop    esp
  417331:	xor    al,0x2c
  417333:	ins    BYTE PTR es:[edi],dx
  417334:	gs inc eax
  417336:	sub    al,0x6c
  417338:	ins    BYTE PTR es:[edi],dx
  417339:	imul   eax,DWORD PTR [ecx],0x4f
  41733c:	outs   dx,DWORD PTR ds:[esi]
  41733d:	fs sub eax,0x5f886173
  417343:	pop    esp
  417344:	inc    esi
  417345:	xor    ebp,DWORD PTR [eax]
  417347:	popa   
  417348:	pop    edx
  417349:	and    ebp,DWORD PTR [eax]
  41734b:	ins    BYTE PTR es:[edi],dx
  41734c:	popa   
  41734d:	pop    edx
  41734e:	inc    edx
  41734f:	ins    BYTE PTR es:[edi],dx
  417350:	imul   edx,DWORD PTR [edi],0xf3007466
  417356:	outs   dx,DWORD PTR gs:[esi]
  417358:	je     0x417385
  41735a:	sub    BYTE PTR [edi+ebx*2+0x6],ch
  41735e:	sub    esi,DWORD PTR [edx+0x0]
  417361:	repnz outs dx,DWORD PTR fs:[esi]
  417364:	je     0x417366
	...
  417372:	add    BYTE PTR [eax],al
  417374:	or     cl,BYTE PTR [edi]
  417376:	outs   dx,DWORD PTR ds:[esi]
  417377:	arpl   WORD PTR gs:[ecx+eax*1+0x50],bp
  41737c:	sub    BYTE PTR [ebx+0x54],0x0
  417380:	mov    bl,0x6f
  417382:	push   ebx
  417383:	je     0x4173e8
  417385:	ins    BYTE PTR es:[edi],dx
  417386:	imul   ax,WORD PTR [edx+ecx*2-0x7a58df9a],0x53
  41738f:	add    BYTE PTR [eax+0x46765639],dl
  417395:	sub    al,0x24
  417397:	push   esp
  417398:	pop    edx
  417399:	cs add BYTE PTR gs:[eax],dh
  41739d:	inc    ecx
  41739e:	push   esi
  41739f:	jbe    0x4173df
  4173a1:	or     al,0x22
  4173a3:	dec    eax
  4173a4:	dec    esp
  4173a5:	or     ebx,DWORD PTR [eax+0x0]
  4173a8:	adc    BYTE PTR [ecx],bh
  4173aa:	push   esi
  4173ab:	jbe    0x4173f3
  4173ad:	or     al,0x22
  4173af:	push   ebx
  4173b0:	xor    cl,bh
  4173b2:	push   ebp
  4173b3:	add    BYTE PTR [eax],dh
  4173b5:	add    DWORD PTR [esi+0x76],edx
  4173b8:	(bad)  
  4173b9:	jmp    0x4173dc
  4173bb:	push   eax
  4173bc:	add    ch,bl
  4173be:	push   edx
  4173bf:	add    BYTE PTR [eax],dh
  4173c1:	stc    
  4173c2:	push   ebp
  4173c3:	jbe    0x4173cb
  4173c5:	int3   
  4173c6:	pop    ds
  4173c7:	push   eax
  4173c8:	add    al,0xcc
  4173ca:	push   ebp
  4173cb:	add    BYTE PTR [ebx],dl
  4173cd:	std    
  4173ce:	push   edi
  4173cf:	push   0x72668b63
  4173d4:	aad    0xc1
  4173d6:	push   ebx
  4173d7:	push   esp
	...
  4173e4:	add    BYTE PTR [eax],al
  4173e6:	add    dl,bl
  4173e8:	lods   al,BYTE PTR ds:[esi]
  4173e9:	data16 add BYTE PTR [edi-0x7c8bab43],bl
  4173f0:	imul   esp,DWORD PTR [esi+0x72],0xffffffb5
  4173f4:	rcl    DWORD PTR [ebx+0x20],0xab
  4173f8:	mov    edi,0x68637454
  4173fd:	bound  esi,QWORD PTR [ecx-0x51]
  417400:	add    eax,0x538034c7
  417405:	xchg   ebp,eax
  417406:	xchg   cx,ax
  417408:	and    eax,0x538054bc
  41740d:	out    0x3f,eax
  41740f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417410:	push   edx
  417411:	jnp    0x417436
  417413:	xchg   edx,eax
  417414:	pusha  
  417415:	jns    0x417470
  417417:	adc    BYTE PTR [ebx-0x39],0x33
  41741b:	mov    WORD PTR [edx+0x7a],ss
  41741e:	add    edx,DWORD PTR [edi-0x7ca7a59c]
  417424:	xor    al,BYTE PTR [edx+edx*2+0x4d]
  417428:	pusha  
  417429:	pop    ecx
  41742a:	and    al,0x33
  41742c:	push   esi
  41742d:	pop    ecx
  41742e:	pop    eax
  41742f:	arpl   WORD PTR [ecx],di
  417431:	dec    eax
  417432:	push   ebx
  417433:	aaa    
  417434:	and    eax,0x4f31691a
  417439:	dec    esp
  41743a:	push   edx
  41743b:	xor    DWORD PTR ds:0x53b5848,0x33
  417442:	adc    dl,BYTE PTR gs:[ecx-0x39]
  417446:	xor    al,BYTE PTR [eax]
  417448:	push   ebx
  417449:	sbb    eax,0x69
	...
  41745a:	adc    DWORD PTR ds:0x60134d33,esp
  417460:	out    0x45,eax
  417462:	pop    ss
  417463:	xor    eax,0x4f143dc7
  417468:	add    BYTE PTR [edi+0xc],ah
  41746b:	push   ecx
  41746c:	(bad)  
  41746d:	push   ecx
  41746e:	arpl   WORD PTR [edi],di
  417470:	mov    ebx,0xce428333
  417475:	pusha  
  417476:	enter  0xc564,0x67
  41747a:	rcl    BYTE PTR [ebx-0x19],0x65
  41747e:	iret   
  41747f:	push   ebp
  417480:	rcr    DWORD PTR [edx+esi*4+0x51],cl
  417484:	or     eax,0x51bb58
  417489:	jmp    0xbdb4b80a
  41748e:	test   BYTE PTR [edx+0x74],ah
  417491:	mov    ecx,0x876d58b2
  417496:	inc    eax
  417497:	xor    al,0x6d
  417499:	(bad)  
  41749a:	mov    ah,0x50
  41749c:	pop    edi
  41749d:	fwait
  41749e:	jnp    0x4174a5
  4174a0:	lea    eax,cs:[edi-0x7d30ffaf]
  4174a7:	push   ebp
  4174a8:	jno    0x417493
  4174aa:	xor    DWORD PTR [eax+0x66],ebx
  4174ad:	jne    0x41743c
  4174af:	es jb  0x4174fe
  4174b2:	xchg   ebx,eax
  4174b3:	inc    ebx
  4174b4:	push   eax
  4174b5:	daa    
  4174b6:	fwait
  4174b7:	xor    eax,0x592a2b5c
  4174bc:	ins    BYTE PTR es:[edi],dx
  4174bd:	inc    esp
	...
  4174ca:	add    BYTE PTR [eax],al
  4174cc:	add    BYTE PTR [ebx],ch
  4174ce:	and    eax,0x581c3b50
  4174d3:	or     WORD PTR ds:0x22155031,bx
  4174da:	es addr16 aas 
  4174dd:	pop    edi
  4174de:	xor    al,0x6d
  4174e0:	(bad)  
  4174e2:	push   eax
  4174e3:	pop    edi
  4174e4:	sbb    ecx,DWORD PTR [edx]
  4174e6:	sub    DWORD PTR [edx+0x1c],eax
  4174e9:	add    ebx,DWORD PTR [ecx+0x63]
  4174ec:	adc    eax,0x166d534f
  4174f1:	add    eax,0xfd0e5125
  4174f6:	push   eax
  4174f7:	jne    0x417501
  4174f9:	adc    DWORD PTR [edx+0x5c],esp
  4174fc:	sub    ecx,DWORD PTR [edx]
  4174fe:	pop    ecx
  4174ff:	ins    BYTE PTR es:[edi],dx
  417500:	int3   
  417501:	mov    ah,0x55
  417503:	jb     0x4174d3
  417505:	mov    ch,0x2b
  417507:	and    BYTE PTR [edi-0x55dfaa6c],ch
  41750d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41750e:	sub    al,0x63
  417510:	add    BYTE PTR [ebx*2+0x622b4d5c],dl
  417517:	outs   dx,BYTE PTR ds:[esi]
  417518:	add    cl,cl
  41751a:	arpl   WORD PTR [esi+0x74],sp
  41751d:	in     eax,dx
  41751e:	sub    DWORD PTR [edx+0x65],esi
  417521:	es inc edi
  417523:	push   eax
  417524:	inc    esi
  417525:	into   
  417526:	clc    
  417527:	pop    ebx
  417528:	inc    edx
  417529:	out    dx,eax
  41752a:	fs ins BYTE PTR es:[edi],dx
  41752c:	gs out dx,al
  41752e:	call   0x41e782
	...
  41753f:	add    ch,dl
  417541:	arpl   WORD PTR [esi+0x20],sp
  417544:	mov    esp,0xc55c4ffc
  417549:	pop    eax
  41754a:	je     0x4175b5
  41754c:	bound  ebp,QWORD PTR gs:[edi+0x0]
  417550:	cdq    
  417551:	bound  esp,QWORD PTR [esi+0x74]
  417554:	sub    eax,0x96657228
  417559:	inc    edi
  41755a:	jno    0x4175c8
  41755c:	xchg   BYTE PTR [esp+esi*2],ch
  41755f:	push   eax
  417560:	js     0x4175c4
  417562:	imul   esp,DWORD PTR [esi+0x6a],0xfffffff6
  417566:	push   0x66
  417568:	outs   dx,BYTE PTR ds:[esi]
  417569:	pop    edx
  41756a:	pop    ebp
  41756b:	jb     0x41758c
  41756d:	cmc    
  41756e:	inc    ecx
  41756f:	jne    0x4175e7
  417571:	and    eax,0x575a7461
  417576:	imul   ebp,DWORD PTR [edi+0x5c],0xffffffe9
  41757a:	inc    ebp
  41757b:	push   esp
  41757c:	dec    edx
  41757d:	jmp    0x2c94e1c0
  417582:	outs   dx,BYTE PTR ds:[esi]
  417583:	je     0x4175db
  417585:	add    dh,BYTE PTR [eax+0x74]
  417588:	arpl   WORD PTR [edx+0x6e],sp
  41758b:	jae    0x417607
  41758d:	cmc    
  41758e:	push   0x66
  417590:	ds pop ecx
  417592:	pop    ebp
  417593:	jb     0x4175b4
  417595:	hlt    
  417596:	inc    ecx
  417597:	push   eax
  417598:	arpl   WORD PTR [ebp+esi*1+0x50],si
  41759c:	arpl   WORD PTR [edx-0x60488e9e],sp
  4175a2:	data16 jno 0x4175a5
	...
  4175b1:	add    BYTE PTR [eax],al
  4175b3:	mov    al,0xd5
  4175b5:	pop    esp
  4175b6:	outs   dx,BYTE PTR ds:[esi]
  4175b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175b8:	lds    ebx,FWORD PTR [ebp+0x63]
  4175bb:	arpl   WORD PTR [edi-0x60798ba6],bx
  4175c1:	inc    ebp
  4175c2:	addr16 xchg ecx,eax
  4175c4:	scas   al,BYTE PTR es:[edi]
  4175c5:	cmp    ch,BYTE PTR [esi-0x70]
  4175c8:	mov    ds:0x6a776c62,al
  4175cd:	pop    edx
  4175ce:	jb     0x417602
  4175d0:	scas   al,BYTE PTR es:[edi]
  4175d1:	sbb    edi,DWORD PTR [eax-0x7a]
  4175d4:	xchg   edx,eax
  4175d5:	add    DWORD PTR [eax+edx*4-0x77],ebx
  4175d9:	bound  esi,QWORD PTR [edx+0x6f]
  4175dc:	ins    BYTE PTR es:[edi],dx
  4175dd:	xor    eax,0x60f46350
  4175e2:	jbe    0x417628
  4175e4:	pusha  
  4175e5:	pop    ecx
  4175e6:	je     0x41762e
  4175e8:	pop    edi
  4175e9:	push   ds
  4175ea:	fs inc edx
  4175ec:	pop    edx
  4175ed:	add    al,0x48
  4175ef:	dec    edx
  4175f0:	call   DWORD PTR [edi+0x6d]
  4175f3:	xor    DWORD PTR [ebp+0x1e],eax
  4175f6:	fs inc edx
  4175f8:	add    al,BYTE PTR [edi+ebx*2]
  4175fb:	aas    
  4175fc:	dec    edx
  4175fd:	push   edx
  4175fe:	bound  ecx,QWORD PTR [eax]
  417600:	fsub   QWORD PTR [ebp+0x5f]
  417603:	ldmxcsr DWORD PTR [edx+0x73]
  417607:	cli    
  417608:	push   cs
  417609:	push   edi
  41760a:	dec    DWORD PTR cs:[eax+ebx*2]
  41760e:	add    BYTE PTR [edi],bl
  417610:	and    dl,BYTE PTR [ebp+0x72]
  417613:	add    DWORD PTR [ebx],edx
  417615:	inc    esi
  417616:	push   esp
	...
  417623:	add    BYTE PTR [eax],al
  417625:	add    BYTE PTR [ebx],dl
  417627:	scas   al,BYTE PTR es:[edi]
  417628:	xor    BYTE PTR [ebp-0x3],ch
  41762b:	mov    ecx,0x5d15f54
  417630:	int3   
  417631:	das    
  417632:	scas   eax,DWORD PTR es:[edi]
  417633:	cmp    cl,bl
  417635:	popa   
  417636:	mov    esi,0x6333bb4b
  41763b:	sub    al,0xbd
  41763d:	push   eax
  41763e:	mov    bh,0x24
  417640:	rcr    DWORD PTR [edi-0x4d],cl
  417643:	and    al,0xb3
  417645:	pop    ebx
  417646:	arpl   WORD PTR [esi-0x3a],dx
  417649:	gs scas eax,DWORD PTR es:[edi]
  41764b:	cmp    cl,al
  41764d:	push   ecx
  41764e:	and    BYTE PTR [ecx-0x46],0x5c
  417652:	(bad)  
  417653:	and    al,0xbb
  417655:	inc    ebp
  417656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417657:	dec    ebx
  417658:	mov    ebx,0x99466333
  41765d:	xchg   WORD PTR [eax],bp
  417660:	xchg   ebp,eax
  417661:	push   edi
  417662:	jl     0x417688
  417664:	mov    esi,DWORD PTR [eax]
  417666:	mov    WORD PTR [ecx],?
  417668:	jnp    0x41766d
  41766a:	mov    ds:0x40678437,al
  41766f:	xor    ebx,DWORD PTR [ebx+0x5d]
  417672:	xor    al,0x31
  417674:	sub    bl,BYTE PTR [eax+eax*2+0x26]
  417678:	inc    edx
  417679:	add    al,0x32
  41767b:	xor    al,BYTE PTR [ebp+0x50]
  41767e:	ss and al,0x39
  417681:	popa   
  417682:	pop    ss
  417683:	push   esi
  417684:	dec    esi
  417685:	push   eax
  417686:	or     al,0x61
  417688:	sub    eax,0x42
	...
  417699:	sbb    eax,0x2e281759
  41769e:	xor    eax,0x33065d1b
  4176a3:	sbb    al,BYTE PTR [ebx+esi*1]
  4176a6:	and    al,0x1a
  4176a8:	push   edi
  4176a9:	push   cs
  4176aa:	xor    bl,BYTE PTR [ecx]
  4176ac:	pusha  
  4176ad:	arpl   WORD PTR [eax-0x6],bx
  4176b0:	pusha  
  4176b1:	icebp  
  4176b2:	push   edx
  4176b3:	or     BYTE PTR [ecx+0x0],bl
  4176b6:	add    eax,0x34082100
  4176bb:	je     0x4176e5
  4176bd:	ret    
  4176be:	aaa    
  4176bf:	jno    0x4176aa
  4176c1:	mov    fs,WORD PTR [esi]
  4176c3:	imul   ecx,esi,0xffffff9c
  4176c6:	es inc esp
  4176c8:	shr    BYTE PTR [esi-0x6941affb],0x39
  4176cf:	add    BYTE PTR [ecx-0x508bcb67],dh
  4176d5:	(bad)  
  4176d6:	cs arpl cx,bp
  4176d9:	jo     0x41770b
  4176db:	jb     0x417692
  4176dd:	pusha  
  4176de:	push   esi
  4176df:	jno    0x41766d
  4176e1:	scas   al,BYTE PTR es:[edi]
  4176e2:	xor    ebx,DWORD PTR [edi-0x74]
  4176e5:	add    DWORD PTR ds:0x34ad8850,0x75
  4176ec:	jle    0x417684
  4176ee:	sub    DWORD PTR [eax],eax
  4176f0:	mov    cl,0x99
  4176f2:	xor    al,0x74
  4176f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176f5:	(bad)  
  4176f6:	aaa    
  4176f7:	dec    esi
  4176f8:	mov    BYTE PTR [ebx+0x9a0026],cl
	...
  41770a:	add    BYTE PTR [eax],al
  41770c:	cmp    DWORD PTR [ebx],ebp
  41770e:	je     0x41776e
  417710:	ds aaa 
  417712:	arpl   WORD PTR ds:0x4f663024,di
  417718:	inc    edx
  417719:	es inc ecx
  41771b:	push   esp
  41771c:	pop    ss
  41771d:	in     eax,0x50
  41771f:	push   esi
  417720:	inc    ecx
  417721:	cmp    DWORD PTR [ebp+0x48],esi
  417724:	adc    eax,0x9205c26
  417729:	cmp    DWORD PTR [ebx+0x3b],esp
  41772c:	cmp    DWORD PTR [esi],esp
  41772e:	je     0x417775
  417730:	dec    edi
  417731:	aaa    
  417732:	ins    DWORD PTR es:[edi],dx
  417733:	pop    es
  417734:	xor    DWORD PTR cs:[ebx+0x1a],esp
  417738:	pop    edi
  417739:	push   esp
  41773a:	ins    DWORD PTR es:[edi],dx
  41773b:	pop    es
  41773c:	adc    edi,DWORD PTR [eax]
  41773e:	pop    edi
  41773f:	add    BYTE PTR [eax+0x24],bh
  417742:	pop    esp
  417743:	inc    esi
  417744:	push   esi
  417745:	stc    
  417746:	push   edx
  417747:	popa   
  417748:	push   0x7d435c24
  41774d:	test   DWORD PTR [eax+0x46],0x535bf516
  417754:	xor    edx,DWORD PTR [ecx+0x61]
  417757:	jae    0x417793
  417759:	std    
  41775a:	push   0x73
  41775c:	push   ss
  41775d:	add    eax,0x5b277351
  417762:	add    BYTE PTR [eax+0x1d],dl
  417765:	pop    ebx
  417766:	je     0x417768
  417768:	retf   0xfff3
  41776b:	dec    edi
  41776c:	(bad)  
  41776d:	pop    esp
  41776e:	push   edx
	...
  41777f:	fincstp 
  417781:	inc    edi
  417782:	add    dl,ch
  417784:	pop    edx
  417785:	imul   esp,DWORD PTR [esi-0x1d],0x58
  417789:	popa   
  41778a:	jae    0x417748
  41778c:	dec    esp
  41778d:	imul   ebp,DWORD PTR [edx+ecx*1-0x17],0xe4ca5445
  417795:	inc    eax
  417796:	js     0x417802
  417798:	pop    eax
  417799:	imul   esi,DWORD PTR [edx-0x19],0x5a
  41779d:	add    BYTE PTR [ebx+0x2d],dl
  4177a0:	and    esi,DWORD PTR [edi+esi*2+0x1b]
  4177a4:	push   edi
  4177a5:	popa   
  4177a6:	pop    esp
  4177a7:	je     0x41779e
  4177a9:	dec    edi
  4177aa:	and    BYTE PTR [edi+0xd6c7051],al
  4177b0:	push   edi
  4177b1:	popa   
  4177b2:	jb     0x417802
  4177b4:	inc    ebx
  4177b5:	push   esp
  4177b6:	push   eax
  4177b7:	pop    edx
  4177b8:	add    BYTE PTR [eax+0x70],bh
  4177bb:	pop    esi
  4177bc:	pop    esi
  4177bd:	jb     0x417824
  4177bf:	js     0x4177ae
  4177c1:	push   edx
  4177c2:	outs   dx,DWORD PTR ds:[esi]
  4177c3:	push   0x63706f62
  4177c8:	or     eax,0x211f6363
  4177cd:	inc    edx
  4177ce:	inc    ecx
  4177cf:	movhps QWORD PTR [edi+0x6c],xmm2
  4177d3:	and    DWORD PTR ds:0x7c312b56,ecx
  4177d9:	or     eax,0x4db9a100
  4177de:	je     0x4177a4
  4177e0:	fcom   DWORD PTR [eax+eax*1+0x0]
	...
  4177f0:	add    BYTE PTR [eax],al
  4177f2:	mov    al,0xcf
  4177f4:	pop    edi
  4177f5:	je     0x4177c3
  4177f7:	int    0x53
  4177f9:	arpl   WORD PTR [edi-0x7cafd298],bx
  4177ff:	jno    0x41784a
  417801:	jo     0x4177c2
  417803:	iret   
  417804:	push   ebx
  417805:	arpl   WORD PTR [ecx-0x738dce66],si
  41780b:	enter  0x6c5a,0x7e
  41780f:	fwait
  417810:	add    DWORD PTR [eax-0x7e],edx
  417813:	fwait
  417814:	push   esp
  417815:	jne    0x41788b
  417817:	pushf  
  417818:	pop    ebp
  417819:	add    BYTE PTR [ebx+0x6c71548d],dl
  41781f:	xchg   edi,eax
  417820:	push   ebx
  417821:	fs xchg edi,eax
  417823:	test   DWORD PTR [ecx+0x63],edx
  417826:	arpl   WORD PTR [esi+0x58],sp
  417829:	jno    0x417882
  41782b:	scas   al,BYTE PTR es:[edi]
  41782c:	xor    eax,0x5a553c6d
  417831:	add    BYTE PTR [ebx],dh
  417833:	dec    edi
  417834:	push   esi
  417835:	je     0x41789a
  417837:	in     eax,0x59
  417839:	addr16 aaa 
  41783b:	inc    ebp
  41783c:	popa   
  41783d:	ins    BYTE PTR es:[edi],dx
  41783e:	adc    ecx,DWORD PTR [ebp+0x50]
  417841:	push   0x704fe863
  417846:	adc    BYTE PTR [ebp+0x50],al
  417849:	arpl   WORD PTR [ebp-0xa],cx
  41784c:	push   esp
  41784d:	ins    BYTE PTR es:[edi],dx
  41784e:	arpl   WORD PTR ds:0x2e114243,ax
  417854:	push   es
  417855:	arpl   WORD PTR [eax],ax
	...
  417863:	add    BYTE PTR [eax],al
  417865:	cvtpi2ps xmm3,mm2
  417868:	add    ecx,DWORD PTR [ebp+0x2e]
  41786b:	std    
  41786c:	pop    edx
  41786d:	arpl   WORD PTR [ecx+0x1d],sp
  417870:	arpl   bp,di
  417872:	dec    eax
  417873:	add    BYTE PTR [ebp+0x0],bl
  417876:	popa   
  417877:	sub    bl,BYTE PTR [ecx-0x33]
  41787a:	daa    
  41787b:	add    BYTE PTR [ecx-0x49],ah
  41787e:	push   edx
  41787f:	int3   
  417880:	push   esp
  417881:	shr    BYTE PTR [esi+ecx*8],cl
  417884:	pop    ecx
  417885:	rol    BYTE PTR ds:0x32c034b3,cl
  41788b:	ficomp DWORD PTR [edx-0x3a]
  41788e:	das    
  41788f:	mov    edx,0xc52e9203
  417894:	dec    edi
  417895:	scas   al,BYTE PTR es:[edi]
  417896:	and    al,0xb9
  417898:	pop    esi
  417899:	mov    edi,0x9f59c857
  41789e:	cmp    al,0x92
  4178a0:	pop    esi
  4178a1:	scas   eax,DWORD PTR es:[edi]
  4178a2:	push   edx
  4178a3:	test   BYTE PTR [eax+edx*4+0x33],ah
  4178a7:	mov    WORD PTR [ecx-0x65],es
  4178aa:	add    eax,0x278558aa
  4178af:	nop
  4178b0:	pusha  
  4178b1:	inc    ebx
  4178b2:	push   ebp
  4178b3:	mov    BYTE PTR [edi+0x7b],cl
  4178b6:	add    eax,0x3357579c
  4178bb:	mov    BYTE PTR [ecx+0x3b],al
  4178be:	push   ebp
  4178bf:	out    0x27,eax
  4178c1:	push   edx
  4178c2:	sub    al,0x53
  4178c4:	popa   
  4178c5:	push   edx
  4178c6:	out    dx,eax
  4178c7:	dec    esi
  4178c8:	pop    ecx
	...
  4178d5:	add    BYTE PTR [eax],al
  4178d7:	add    BYTE PTR [edi+0x5],cl
  4178da:	sub    edi,DWORD PTR [esi]
  4178dc:	andnps xmm3,XMMWORD PTR [ecx]
  4178df:	push   ecx
  4178e0:	xor    ch,BYTE PTR ds:0x323031e7
  4178e6:	add    BYTE PTR [ecx+0x50],al
  4178e9:	es je  0x417930
  4178ec:	ins    DWORD PTR es:[edi],dx
  4178ed:	cmp    eax,0x5467156b
  4178f2:	arpl   WORD PTR [ebx],bx
  4178f4:	adc    eax,0x33e97222
  4178f9:	xor    al,0x63
  4178fb:	sbb    ecx,DWORD PTR ds:0x670c6b5e
  417901:	push   ebp
  417902:	pop    edi
  417903:	cli    
  417904:	adc    DWORD PTR [eax],edi
  417906:	ins    DWORD PTR es:[edi],dx
  417907:	sti    
  417908:	mov    esp,0xb0f54605
  41790d:	push   ebp
  41790e:	ins    DWORD PTR es:[edi],dx
  41790f:	fistp  DWORD PTR [ebp+eax*1+0x39a6ce51]
  417916:	jne    0x4178e0
  417918:	xchg   edx,eax
  417919:	and    bl,BYTE PTR [edx+ebp*4-0x6e]
  41791d:	arpl   WORD PTR ss:[ebx-0x349ca77c],di
  417924:	jno    0x41794c
  417926:	je     0x4178f4
  417928:	push   eax
  417929:	xor    ah,BYTE PTR [edx-0x43]
  41792c:	mov    bh,0x34
  41792e:	push   0x5c05b28c
  417933:	stos   DWORD PTR es:[edi],eax
  417934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417935:	cmp    DWORD PTR [ecx-0x80],ecx
  417938:	xchg   esi,eax
  417939:	and    bh,BYTE PTR [eax-0x17]
	...
  417948:	add    BYTE PTR [eax],al
  41794a:	add    BYTE PTR [edx-0x706d8bda],al
  417950:	das    
  417951:	arpl   WORD PTR [ecx-0x168ed6b2],ax
  417957:	cwde   
  417958:	xor    BYTE PTR [ecx+0x75],dh
  41795b:	cs pop esi
  41795d:	imul   ecx,DWORD PTR [edi+eiz*2+0x52],0x71
  417962:	inc    esp
  417963:	xor    DWORD PTR [edi],ebp
  417965:	pop    edi
  417966:	inc    esp
  417967:	inc    edx
  417968:	add    eax,0x34104850
  41796d:	jne    0x41796f
  41796f:	adc    eax,0x4a006453
  417974:	push   esi
  417975:	jb     0x4179eb
  417977:	mov    dh,dl
  417979:	push   0x66
  41797b:	dec    esi
  41797c:	dec    esi
  41797d:	pop    ebp
  41797e:	jb     0x4179df
  417980:	in     eax,dx
  417981:	inc    eax
  417982:	js     0x4179ee
  417984:	sub    BYTE PTR [esi+0x44],ch
  417987:	pop    eax
  417988:	pusha  
  417989:	jbe    0x4179f0
  41798b:	inc    esi
  41798c:	repnz pusha 
  41798e:	jae    0x4179f9
  417990:	pusha  
  417991:	imul   ebp,DWORD PTR [esi+0x69],0x1
  417995:	pop    esp
  417996:	inc    ebp
  417997:	push   edx
  417998:	pop    ecx
  417999:	pop    ebp
  41799a:	outs   dx,BYTE PTR ds:[esi]
  41799b:	jle    0x4179f4
  41799d:	gs jbe 0x4179bf
  4179a0:	or     DWORD PTR [esp+eiz*2+0x28],ebx
  4179a4:	pop    edx
  4179a5:	jbe    0x417a0c
  4179a7:	sbb    DWORD PTR [ebx],edx
  4179a9:	push   0x73
  4179ab:	dec    edx
  4179ac:	out    0x6f,eax
  4179ae:	popa   
	...
  4179bb:	add    BYTE PTR [eax],al
  4179bd:	add    cl,ch
  4179bf:	push   edi
  4179c0:	jae    0x417a31
  4179c2:	call   0x10619c23
  4179c7:	jmp    0x1da979ed
  4179cc:	add    BYTE PTR [ebx-0xb],dl
  4179cf:	pop    edx
  4179d0:	je     0x417a49
  4179d2:	fist   DWORD PTR [esi+0x61]
  4179d5:	pop    esp
  4179d6:	iret   
  4179d7:	push   eax
  4179d8:	jo     0x417a3b
  4179da:	je     0x4179d8
  4179dc:	jno    0x417a47
  4179de:	ins    BYTE PTR es:[edi],dx
  4179df:	and    eax,0x58e24500
  4179e4:	pop    ebp
  4179e5:	outs   dx,BYTE PTR ds:[esi]
  4179e6:	push   cs
  4179e7:	push   edi
  4179e8:	gs jbe 0x4179ca
  4179eb:	jecxz  0x417a34
  4179ed:	outs   dx,DWORD PTR ds:[esi]
  4179ee:	aaa    
  4179ef:	pop    esp
  4179f0:	add    BYTE PTR [ebx+0x1f],dl
  4179f3:	push   edi
  4179f4:	jbe    0x417a5b
  4179f6:	arpl   WORD PTR [eax+0x4],sp
  4179f9:	push   ebx
  4179fa:	xor    BYTE PTR [ecx+0x52],al
  4179fd:	dec    esi
  4179fe:	inc    edx
  4179ff:	push   ecx
  417a00:	pop    ebp
  417a01:	add    BYTE PTR [ebx],dl
  417a03:	dec    ebp
  417a04:	dec    edi
  417a05:	jno    0x417a1b
  417a07:	inc    ebx
  417a08:	push   edx
  417a09:	arpl   WORD PTR fs:[ebx],cx
  417a0c:	xor    al,0x5f
  417a0e:	adc    BYTE PTR [edi],bl
  417a10:	dec    ebx
  417a11:	ins    DWORD PTR es:[edi],dx
  417a12:	adc    DWORD PTR [edx],eax
  417a14:	add    al,0x44
  417a16:	or     ah,BYTE PTR [eax]
  417a18:	pop    ebp
  417a19:	popa   
  417a1a:	out    dx,eax
  417a1b:	mov    edx,0x1f63774f
  417a20:	push   ebx
  417a21:	data16 add BYTE PTR [eax],al
	...
  417a30:	add    bh,ch
  417a32:	mov    dl,0x62
  417a34:	jb     0x4179fc
  417a36:	adc    dh,BYTE PTR [esi]
  417a38:	inc    ecx
  417a39:	stos   DWORD PTR es:[edi],eax
  417a3a:	into   
  417a3b:	xor    BYTE PTR [ebp-0x3b],ch
  417a3e:	fimul  DWORD PTR [edi+ebx*2-0x2f]
  417a42:	shl    DWORD PTR ds:0x50cdcf41,0x71
  417a49:	retf   0x3bcf
  417a4c:	push   esp
  417a4d:	xchg   ebx,eax
  417a4e:	bound  edi,QWORD PTR [ebx]
  417a50:	push   esp
  417a51:	xchg   ebx,eax
  417a52:	ins    DWORD PTR es:[edi],dx
  417a53:	pusha  
  417a54:	popa   
  417a55:	mov    WORD PTR [ecx+0x53],?
  417a58:	je     0x4179ea
  417a5a:	scas   al,BYTE PTR es:[edi]
  417a5b:	cmp    esi,DWORD PTR [ebx+edx*4+0x7f]
  417a5f:	pop    esi
  417a60:	jb     0x4179ef
  417a62:	or     DWORD PTR [edi+0x0],0x53519aa5
  417a69:	jo     0x4179ec
  417a6b:	dec    edi
  417a6c:	dec    esi
  417a6d:	adc    BYTE PTR [ecx+0x329d005e],0x51
  417a74:	push   eax
  417a75:	inc    edx
  417a76:	aas    
  417a77:	push   eax
  417a78:	jne    0x417abe
  417a7a:	inc    eax
  417a7b:	pop    ebp
  417a7c:	add    BYTE PTR [eax*1+0x5553502d],ch
  417a83:	dec    eax
  417a84:	push   ecx
  417a85:	xor    dh,BYTE PTR [esi+eax*2]
  417a88:	push   edx
  417a89:	aas    
  417a8a:	add    eax,0x41335025
  417a8f:	push   eax
  417a90:	push   edx
  417a91:	inc    eax
  417a92:	sub    BYTE PTR [ebx],dh
  417a94:	push   ebp
	...
  417aa1:	add    BYTE PTR [eax],al
  417aa3:	add    BYTE PTR [ecx],dl
  417aa5:	ds out 0x30,eax
  417aa8:	es inc ebx
  417aaa:	adc    ebp,DWORD PTR ds:0x282c574c
  417ab0:	adc    eax,0x12242f48
  417ab5:	sub    al,0xd
  417ab7:	push   eax
  417ab8:	out    dx,al
  417ab9:	and    eax,0x430f5f19
  417abe:	adc    ebx,DWORD PTR [ebx-0xb]
  417ac1:	and    ebx,DWORD PTR [ebx]
  417ac3:	inc    ebx
  417ac4:	ret    0x626
  417ac7:	dec    edi
  417ac8:	lds    esi,FWORD PTR [ecx]
  417aca:	cli    
  417acb:	add    esi,DWORD PTR [edx-0x31b032d6]
  417ad1:	and    al,0xd9
  417ad3:	pop    esi
  417ad4:	lahf   
  417ad5:	inc    ebx
  417ad6:	mov    ebx,0xc029a233
  417adb:	pop    esi
  417adc:	mov    ebp,0xbc30a331
  417ae1:	xor    esp,eax
  417ae3:	push   eax
  417ae4:	arpl   WORD PTR [esi-0x3a],dx
  417ae7:	pop    ebp
  417ae8:	(bad)  
  417ae9:	xor    cl,al
  417aeb:	push   ecx
  417aec:	sbb    BYTE PTR [ecx-0x46],0x54
  417af0:	jge    0x417b23
  417af2:	mov    edi,0x8e378e15
  417af7:	daa    
  417af8:	popf   
  417af9:	push   ecx
  417afa:	mov    bh,0x40
  417afc:	jg     0x417b2a
  417afe:	mov    WORD PTR [ebp+0x6f],ss
  417b01:	pop    ecx
  417b02:	call   0x7a:0x20575a
	...
  417b15:	add    BYTE PTR [eax],al
  417b17:	pusha  
  417b18:	jmp    0x417b86
  417b1a:	jno    0x417b5f
  417b1c:	add    eax,0x2993562e
  417b21:	add    BYTE PTR ds:0x46515528,bh
  417b27:	mov    DWORD PTR [ecx],esi
  417b29:	jne    0x417b73
  417b2b:	jne    0x417b53
  417b2d:	pop    esp
  417b2e:	sub    eax,0x4a633776
  417b33:	pop    ebx
  417b34:	sub    BYTE PTR [edx+0x30],dh
  417b37:	jg     0x417b82
  417b39:	jo     0x417b6f
  417b3b:	push   esp
  417b3c:	add    eax,0x5a373a5c
  417b41:	jb     0x417b47
  417b43:	dec    ebx
  417b44:	push   esp
  417b45:	arpl   WORD PTR ds:0x66e223b,bx
  417b4b:	xor    al,0xeb
  417b4d:	pusha  
  417b4e:	or     ch,BYTE PTR [eax*1+0x5a8f1a5c]
  417b55:	jb     0x417b63
  417b57:	mov    edx,DWORD PTR [ebx+eiz*2-0xb]
  417b5b:	xchg   esp,eax
  417b5c:	and    ch,BYTE PTR [esi-0x32]
  417b5f:	lea    ebx,[eax+0x2f]
  417b62:	mov    esi,0x7335930
  417b67:	jl     0x417b8d
  417b69:	jno    0x417b54
  417b6b:	mov    WORD PTR [eax+ebp*2-0x38],ss
  417b6f:	outs   dx,BYTE PTR ds:[esi]
  417b70:	es fs call 0x2052:0xc074314b
  417b79:	jno    0x417b7a
	...
  417b87:	add    BYTE PTR [eax],al
  417b89:	add    BYTE PTR [ebp+0x2a],dl
  417b8c:	ins    BYTE PTR es:[edi],dx
  417b8d:	nop
  417b8e:	dec    esp
  417b8f:	add    BYTE PTR es:[ebp-0x64a0d26b],bh
  417b96:	dec    ebx
  417b97:	and    DWORD PTR [ecx-0x7c],edx
  417b9a:	xor    al,0x31
  417b9c:	addr16 add ah,cl
  417b9f:	out    dx,al
  417ba0:	outs   dx,BYTE PTR ds:[esi]
  417ba1:	pop    edi
  417ba2:	sbb    esp,DWORD PTR [edi]
  417ba4:	xor    BYTE PTR [edi+0x17],bl
  417ba7:	mov    ah,0x70
  417ba9:	jno    0x417bf9
  417bab:	jmp    0x59fbe123
  417bb0:	aas    
  417bb1:	outs   dx,DWORD PTR ds:[esi]
  417bb2:	and    al,0xef
  417bb4:	pusha  
  417bb5:	gs mov esp,edi
  417bb8:	outs   dx,DWORD PTR ds:[esi]
  417bb9:	and    BYTE PTR [ecx-0xa],ch
  417bbc:	gs je  0x417c24
  417bbf:	loopne 0x417c32
  417bc1:	gs mov ch,cl
  417bc4:	pusha  
  417bc5:	popa   
  417bc6:	pop    edx
  417bc7:	out    dx,eax
  417bc8:	jae    0x417c3a
  417bca:	jp     0x417bc8
  417bcc:	ins    DWORD PTR es:[edi],dx
  417bcd:	ins    BYTE PTR es:[edi],dx
  417bce:	push   edi
  417bcf:	loopne 0x417c40
  417bd1:	cs addr16 stc 
  417bd4:	pusha  
  417bd5:	add    BYTE PTR [ecx-0x18],bl
  417bd8:	jae    0x417c3f
  417bda:	dec    ecx
  417bdb:	mov    bh,0x61
  417bdd:	popa   
  417bde:	add    ax,0x696f
  417be2:	push   esi
  417be3:	out    dx,al
  417be4:	outs   dx,BYTE PTR ds:[esi]
  417be5:	cs arpl bx,si
  417be8:	add    BYTE PTR fs:[esi+0x55],bl
  417bec:	popa   
  417bed:	popa   
	...
  417bfa:	add    BYTE PTR [eax],al
  417bfc:	add    BYTE PTR [edx],ch
  417bfe:	pop    esp
  417bff:	pop    ebp
  417c00:	jb     0x417c29
  417c02:	pop    ecx
  417c03:	dec    esp
  417c04:	gs sub esi,ebp
  417c07:	inc    ebp
  417c08:	push   esp
  417c09:	jmp    0x5350:0xf44f4f04
  417c10:	inc    ecx
  417c11:	clc    
  417c12:	dec    ebp
  417c13:	pop    esp
  417c14:	dec    esp
  417c15:	daa    
  417c16:	loop   0x417c87
  417c18:	push   edi
  417c19:	sbb    esi,ebx
  417c1b:	pusha  
  417c1c:	add    bl,dl
  417c1e:	imul   BYTE PTR [esi+0x74]
  417c21:	jmp    0x417c0b
  417c23:	imul   edx,DWORD PTR [eax+0x63],0xffffff8d
  417c27:	xor    eax,0x24626368
  417c2c:	je     0x417bb0
  417c2e:	push   0x2c
  417c30:	jb     0x417c95
  417c32:	sahf   
  417c33:	and    al,0x71
  417c35:	push   eax
  417c36:	aaa    
  417c37:	xor    dh,BYTE PTR [edx+0x47]
  417c3a:	scas   al,BYTE PTR es:[edi]
  417c3b:	dec    ecx
  417c3c:	ins    DWORD PTR es:[edi],dx
  417c3d:	push   eax
  417c3e:	pop    edx
  417c3f:	push   edx
  417c40:	pop    edi
  417c41:	dec    esi
  417c42:	inc    ecx
  417c43:	add    al,0x53
  417c45:	xor    BYTE PTR [ecx+0x36],cl
  417c48:	dec    esi
  417c49:	inc    edx
  417c4a:	stc    
  417c4b:	and    al,0x0
  417c4d:	adc    DWORD PTR [ecx+0x2d],ecx
  417c50:	ins    DWORD PTR es:[edi],dx
  417c51:	pop    ss
  417c52:	inc    ecx
  417c53:	dec    eax
  417c54:	adc    DWORD PTR [bx+di+0x23],ecx
  417c58:	je     0x417c56
  417c5a:	sti    
  417c5b:	cmp    BYTE PTR [eax],al
  417c5d:	xor    ecx,DWORD PTR [edi]
  417c5f:	ss je  0x417c62
	...
  417c6e:	add    BYTE PTR [eax],al
  417c70:	sub    eax,0xfe622d11
  417c75:	sbb    eax,DWORD PTR [esi+eax*2]
  417c78:	adc    dh,bh
  417c7a:	xor    eax,0x230eef6d
  417c7f:	ins    DWORD PTR es:[edi],dx
  417c80:	iret   
  417c81:	scas   al,BYTE PTR es:[edi]
  417c82:	push   esp
  417c83:	ins    DWORD PTR es:[edi],dx
  417c84:	mov    ebp,0xd15f38ba
  417c89:	add    DWORD PTR [eax+0x4b],esp
  417c8c:	ret    0x35dc
  417c8f:	addr16 int 0xe
  417c92:	push   esp
  417c93:	jb     0x417c5f
  417c95:	ret    
  417c96:	xor    esi,DWORD PTR [edi-0x41]
  417c99:	scas   al,BYTE PTR es:[edi]
  417c9a:	pop    ebp
  417c9b:	xor    DWORD PTR [ecx+0x6c],esi
  417c9e:	sub    dh,BYTE PTR [ebp+eiz*4+0x72]
  417ca2:	xor    DWORD PTR [esi],ebp
  417ca4:	mov    al,al
  417ca6:	sub    al,BYTE PTR [eax]
  417ca8:	popf   
  417ca9:	bound  edx,QWORD PTR [edi+eiz*2-0x71]
  417cad:	add    eax,0x2e4d348c
  417cb2:	lea    ebp,[edx]
  417cb4:	arpl   WORD PTR [ecx-0x5b],bx
  417cb7:	es ja  0x417cfb
  417cba:	cdq    
  417cbb:	sub    ch,BYTE PTR [ebp+0x22]
  417cbe:	out    0x53,eax
  417cc0:	cmp    al,0x34
  417cc2:	jp     0x417d1c
  417cc4:	inc    esi
  417cc5:	xor    ecx,DWORD PTR [ebx+0x7b333003]
  417ccb:	add    esi,DWORD PTR [eax]
  417ccd:	xor    al,0x4c
  417ccf:	ss sub eax,0x274c26
	...
  417ce1:	add    BYTE PTR [eax],al
  417ce3:	arpl   WORD PTR [ebx+0x46],dx
  417ce6:	xor    DWORD PTR [edi],esi
  417ce8:	inc    ecx
  417ce9:	inc    eax
  417cea:	ss inc eax
  417cec:	and    al,0x3b
  417cee:	xor    DWORD PTR [ecx],edx
  417cf0:	ds out 0x53,eax
  417cf3:	push   es
  417cf4:	xor    edi,DWORD PTR [ebx]
  417cf6:	add    al,0x32
  417cf8:	sub    BYTE PTR [ebp+0x38],al
  417cfb:	push   cs
  417cfc:	sbb    DWORD PTR es:[edi],esp
  417cff:	pop    ds
  417d00:	push   esp
  417d01:	push   cs
  417d02:	aaa    
  417d03:	out    dx,eax
  417d04:	sub    al,0xc7
  417d06:	push   ebp
  417d07:	add    al,0x2f
  417d09:	add    al,0x36
  417d0b:	inc    ebx
  417d0c:	push   ecx
  417d0d:	or     al,0x25
  417d0f:	retf   
  417d10:	daa    
  417d11:	push   cs
  417d12:	xor    dh,al
  417d14:	push   ds
  417d15:	add    BYTE PTR [edi],ah
  417d17:	rcr    BYTE PTR [ecx+0x16],cl
  417d1a:	daa    
  417d1b:	rol    DWORD PTR [ecx-0x27],0x2a
  417d1f:	mov    ch,0x20
  417d21:	mov    ebx,0xc527c644
  417d26:	es ret 0xc031
  417d2a:	xor    BYTE PTR [ebp-0x7fab18ce],dh
  417d30:	xor    esi,DWORD PTR [ebp+0x519126]
  417d36:	mov    al,0x50
  417d38:	and    al,BYTE PTR [eax]
  417d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d3b:	lods   al,BYTE PTR ds:[esi]
  417d3c:	push   ebp
  417d3d:	and    BYTE PTR [edx-0x44abb86d],ch
  417d43:	xchg   ebx,eax
  417d44:	dec    ecx
  417d45:	add    BYTE PTR [edi+0x0],ch
	...
  417d53:	add    BYTE PTR [eax],al
  417d55:	add    BYTE PTR [ebp+edx*2+0x5929e41],dl
  417d5c:	cs jns 0x417cf5
  417d5f:	pop    ds
  417d60:	add    BYTE PTR [ebp-0x7092ccd0],bl
  417d66:	jns    0x417d91
  417d68:	arpl   WORD PTR [edx+0x60],di
  417d6b:	test   BYTE PTR [ebx-0x1b],bh
  417d6e:	ins    BYTE PTR es:[edi],dx
  417d6f:	xchg   DWORD PTR [ecx-0x52cb792f],esi
  417d75:	(bad)  
  417d76:	jg     0x417da9
  417d78:	je     0x417dd3
  417d7a:	test   eax,0x48e92ce9
  417d7f:	xor    DWORD PTR [ecx+edi*1+0x50],esi
  417d83:	sti    
  417d84:	sub    al,0x6
  417d86:	addr16 pop ds
  417d88:	je     0x417dc3
  417d8a:	mov    ecx,ebp
  417d8c:	sub    al,0xe9
  417d8e:	dec    ebp
  417d8f:	xor    eax,0x53e1b63
  417d94:	jne    0x417d9e
  417d96:	cmp    eax,0x3e052e21
  417d9b:	xor    DWORD PTR [eax],eax
  417d9d:	es mov al,0x28
  417da0:	data16 cmc 
  417da2:	lea    edx,[esi+0x72]
  417da5:	or     al,0xc3
  417da7:	dec    eax
  417da8:	jo     0x417dae
  417daa:	xchg   ecx,eax
  417dab:	push   esi
  417dac:	and    BYTE PTR [edx-0x298be073],bh
  417db2:	jg     0x417de7
  417db4:	arpl   cx,bp
  417db6:	pushf  
  417db7:	push   esi
  417db8:	jno    0x417d8f
	...
  417dc6:	add    BYTE PTR [eax],al
  417dc8:	add    BYTE PTR [eax+0x42],al
  417dcb:	addr16 add al,bl
  417dce:	in     al,dx
  417dcf:	pop    esi
  417dd0:	je     0x417df7
  417dd2:	hlt    
  417dd3:	je     0x417e08
  417dd5:	cli    
  417dd6:	inc    ebp
  417dd7:	pop    ebp
  417dd8:	jae    0x417da8
  417dda:	mov    eax,ds:0xedd96e46
  417ddf:	pop    esp
  417de0:	ins    BYTE PTR es:[edi],dx
  417de1:	out    0xa1,al
  417de3:	dec    ebp
  417de4:	popa   
  417de5:	into   
  417de6:	jmp    0xed0bccea
  417deb:	jno    0x417e4e
  417ded:	mov    ah,0x49
  417def:	push   esp
  417df0:	dec    ebp
  417df1:	push   es
  417df2:	push   esi
  417df3:	outs   dx,DWORD PTR ds:[esi]
  417df4:	push   0x5c6be5df
  417df9:	inc    ebp
  417dfa:	repnz pusha 
  417dfc:	outs   dx,BYTE PTR ds:[esi]
  417dfd:	es loop 0x417e6a
  417e00:	ins    DWORD PTR es:[edi],dx
  417e01:	daa    
  417e02:	loopne 0x417e71
  417e04:	fs mov edx,0x1f7364ee
  417e0a:	fbstp  TBYTE PTR [ebx+0x70]
  417e0d:	pop    ecx
  417e0e:	repz jne 0x417e84
  417e11:	fs jecxz 0x417e78
  417e14:	outs   dx,BYTE PTR ds:[esi]
  417e15:	jp     0x417e6c
  417e17:	cmp    eax,0x45431f63
  417e1c:	push   esp
  417e1d:	mov    dl,BYTE PTR [edx+0x6b]
  417e20:	dec    si
  417e22:	out    dx,al
  417e23:	pop    esp
  417e24:	jb     0x417e85
  417e26:	and    eax,0x435f633d
  417e2b:	inc    ebp
  417e2c:	push   esp
	...
  417e39:	add    BYTE PTR [eax],al
  417e3b:	add    BYTE PTR [edx+0x56],cl
  417e3e:	push   edx
  417e3f:	push   ebp
  417e40:	dec    edx
  417e41:	pop    eax
  417e42:	dec    ebx
  417e43:	inc    esi
  417e44:	outs   dx,BYTE PTR ds:[esi]
  417e45:	pop    esp
  417e46:	cmp    eax,0x3f257f52
  417e4b:	ins    BYTE PTR es:[edi],dx
  417e4c:	sub    edi,eax
  417e4e:	outs   dx,BYTE PTR ds:[esi]
  417e4f:	sbb    DWORD PTR gs:[ebp+0x54],edx
  417e53:	jns    0x417eb8
  417e55:	into   
  417e56:	sub    BYTE PTR [edx+edi*4-0x40],cl
  417e5a:	pop    ebp
  417e5b:	jns    0x417dfd
  417e5d:	pusha  
  417e5e:	hlt    
  417e5f:	inc    ebp
  417e60:	push   ecx
  417e61:	pop    edi
  417e62:	icebp  
  417e63:	inc    ebp
  417e64:	ds mov dh,0xf1
  417e67:	ss dec edi
  417e69:	mov    cl,0xf5
  417e6b:	mov    ds:0xa041f05f,al
  417e71:	ins    BYTE PTR es:[edi],dx
  417e72:	clc    
  417e73:	sub    dh,BYTE PTR [edi]
  417e75:	int    0x44
  417e77:	ss das 
  417e79:	imul   ebp,edi,0xf6732534
  417e7f:	xor    al,0x56
  417e81:	sahf   
  417e82:	push   edx
  417e83:	dec    ebp
  417e84:	and    eax,0x313f5692
  417e89:	imul   ebx,DWORD PTR [ebp+0x41],0x712f3d4f
  417e90:	ds dec edi
  417e92:	pusha  
  417e93:	push   esp
  417e94:	sub    cl,BYTE PTR [esi+0x25]
  417e97:	dec    esp
  417e98:	cmp    al,BYTE PTR [eax+0x60]
  417e9b:	jns    0x417ef7
  417e9d:	loope  0x417edf
  417e9f:	xor    eax,DWORD PTR [eax]
	...
  417ead:	add    BYTE PTR [eax],al
  417eaf:	dec    esi
  417eb0:	mov    ecx,0xe13e36ef
  417eb5:	lock xor DWORD PTR [ecx-0x4f],edx
  417eb9:	cmc    
  417eba:	xor    al,0x36
  417ebc:	shr    esi,cl
  417ebe:	inc    ecx
  417ebf:	and    bl,bl
  417ec1:	cli    
  417ec2:	sub    ah,BYTE PTR [esi]
  417ec4:	sar    cl,cl
  417ec6:	xor    DWORD PTR [esi],ebp
  417ec8:	in     al,dx
  417ec9:	sti    
  417eca:	das    
  417ecb:	xchg   esp,eax
  417ecc:	outs   dx,DWORD PTR ds:[esi]
  417ecd:	out    dx,eax
  417ece:	inc    eax
  417ecf:	(bad)  
  417ed0:	sahf   
  417ed1:	xor    al,0x67
  417ed3:	rol    BYTE PTR [ecx],1
  417ed5:	es je  0x417eab
  417ed8:	scas   eax,DWORD PTR es:[edi]
  417ed9:	das    
  417eda:	jbe    0x417e8c
  417edc:	add    eax,0x1ec52b15
  417ee1:	out    0x34,eax
  417ee3:	les    edi,FWORD PTR [eax]
  417ee5:	int3   
  417ee6:	and    eax,0x2afd35af
  417eeb:	lea    ebx,[esi]
  417eed:	out    0x45,eax
  417eef:	scas   eax,DWORD PTR es:[edi]
  417ef0:	push   ebp
  417ef1:	xchg   ebp,eax
  417ef2:	sub    al,0x94
  417ef4:	es into 
  417ef6:	es xchg ecx,eax
  417ef8:	jecxz  0x417ebe
  417efa:	aaa    
  417efb:	jae    0x417f02
  417efd:	lods   eax,DWORD PTR ds:[esi]
  417efe:	push   edi
  417eff:	xchg   ebx,eax
  417f00:	pop    ebx
  417f01:	mov    ?,WORD PTR [edx]
  417f03:	mov    WORD PTR [esp+ecx*4],gs
  417f06:	xor    DWORD PTR ds:0x3f038a36,esi
  417f0c:	push   edi
  417f0d:	(bad)
  417f11:	call   0x0:0x2c
	...
  417f20:	add    BYTE PTR [eax],al
  417f22:	inc    ebp
  417f23:	cmp    ebp,eax
  417f25:	and    BYTE PTR [esi],dh
  417f27:	and    ah,bh
  417f29:	sub    eax,0xee1a3832
  417f2e:	inc    eax
  417f2f:	and    DWORD PTR [ebx+0x4],ecx
  417f32:	sbb    eax,0x1c5d3a58
  417f37:	and    eax,DWORD PTR [eax+0x38]
  417f3a:	arpl   WORD PTR [ebx+0x1a],ax
  417f3d:	push   ecx
  417f3e:	ss pop eax
  417f40:	dec    edi
  417f41:	aaa    
  417f42:	pop    ss
  417f43:	sub    DWORD PTR [esi+0x35],eax
  417f46:	cmc    
  417f47:	add    al,0x1d
  417f49:	push   ecx
  417f4a:	adc    al,BYTE PTR [edi+0x8]
  417f4d:	xor    DWORD PTR [eax],eax
  417f4f:	sti    
  417f50:	rcr    BYTE PTR [edi+eiz*1+0x2a],cl
  417f54:	or     ch,BYTE PTR ds:0x372929ff
  417f5a:	lds    ebp,FWORD PTR [ebx]
  417f5c:	or     al,0x32
  417f5e:	arpl   WORD PTR [esi+0x24],dx
  417f61:	inc    ecx
  417f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f63:	pop    ecx
  417f64:	add    BYTE PTR [esp+edx*4],ch
  417f67:	push   eax
  417f68:	inc    esi
  417f69:	sti    
  417f6a:	test   DWORD PTR [esi],esp
  417f6c:	inc    edi
  417f6d:	fnstsw WORD PTR [ebp+0x1e]
  417f70:	add    BYTE PTR [ecx-0x49d11d65],bh
  417f76:	lahf   
  417f77:	es je  0x417f1a
  417f7a:	dec    esi
  417f7b:	cmp    DWORD PTR [ebx-0x45],esp
  417f7e:	inc    esi
  417f7f:	push   edx
  417f80:	ins    BYTE PTR es:[edi],dx
  417f81:	mov    dl,0x45
  417f83:	cmp    dl,BYTE PTR [ecx-0x3b]
	...
  417f92:	add    BYTE PTR [eax],al
  417f94:	add    BYTE PTR [edi],dh
  417f96:	cmp    DWORD PTR [eax],eax
  417f98:	cdq    
  417f99:	stos   DWORD PTR es:[edi],eax
  417f9a:	loop   0x417fca
  417f9c:	(bad)  
  417f9d:	mov    eax,ds:0x45917436
  417fa2:	and    esi,DWORD PTR [eax+eax*4+0x43]
  417fa6:	push   edx
  417fa7:	je     0x417f2d
  417fa9:	pusha  
  417faa:	push   ebp
  417fab:	dec    ecx
  417fac:	mov    eax,0x9b4455d1
  417fb1:	das    
  417fb2:	dec    ecx
  417fb3:	arpl   WORD PTR [edx+0x75703a92],cx
  417fb9:	pusha  
  417fba:	push   ebp
  417fbb:	dec    ecx
  417fbc:	sbb    BYTE PTR [esi-0x7da4b9af],ch
  417fc2:	es push ecx
  417fc4:	inc    ebp
  417fc5:	js     0x418000
  417fc7:	add    cl,ch
  417fc9:	pusha  
  417fca:	add    eax,0x560e900
  417fcf:	add    cl,ch
  417fd1:	pusha  
  417fd2:	add    eax,0x560e900
  417fd7:	add    cl,ch
  417fd9:	pusha  
  417fda:	add    eax,0x560e900
  417fdf:	add    cl,ch
  417fe1:	pusha  
  417fe2:	add    eax,0x560e900
  417fe7:	add    cl,ch
  417fe9:	xchg   ebp,eax
  417fea:	and    ch,BYTE PTR [eax+eax*1+0x73]
  417fee:	cmc    
  417fef:	pusha  
  417ff0:	xor    ebx,DWORD PTR [edx+edx*1]
  417ff3:	ins    BYTE PTR es:[edi],dx
  417ff4:	ins    BYTE PTR es:[edi],dx
  417ff5:	cmp    bh,bl
  417ff7:	ins    BYTE PTR es:[edi],dx
  417ff8:	ins    BYTE PTR es:[edi],dx
	...
  418005:	add    BYTE PTR [eax],al
  418007:	add    BYTE PTR [ebx-0xb],ah
  41800a:	pusha  
  41800b:	xor    ebx,DWORD PTR ds:0x1c656fdf
  418011:	push   es
  418012:	outs   dx,DWORD PTR ds:[esi]
  418013:	jno    0x418033
  418015:	loope  0x41808a
  418017:	gs jns 0x418068
  41801a:	pop    edi
  41801b:	ins    BYTE PTR es:[edi],dx
  41801c:	sub    eax,0xc90060fb
  418021:	clc    
  418022:	imul   ebp,DWORD PTR [ecx-0x3a],0xffffffe4
  418026:	cs pop edi
  418028:	mov    edx,0xeb7060f7
  41802d:	mul    DWORD PTR [eax+0x0]
  418030:	leave  
  418031:	clc    
  418032:	imul   ebp,DWORD PTR [ecx-0x3a],0xffffffe4
  418036:	cs pop edi
  418038:	stc    
  418039:	loope  0x41809b
  41803b:	jo     0x418007
  41803d:	cli    
  41803e:	ins    BYTE PTR es:[edi],dx
  41803f:	ins    BYTE PTR es:[edi],dx
  418040:	repz loope 0x4180a3
  418043:	xor    ebp,ebp
  418045:	jmp    0x5f6d:0xdd376c6a
  41804c:	sub    al,dh
  41804e:	jae    0x4180b5
  418050:	or     DWORD PTR [ecx],ecx
  418052:	outs   dx,DWORD PTR ds:[esi]
  418053:	jno    0x418073
  418055:	loopne 0x4180ca
  418057:	gs jns 0x4180a8
  41805a:	pop    edi
  41805b:	outs   dx,DWORD PTR ds:[esi]
  41805c:	cs hlt 
  41805e:	push   0x6beb6d6e
  418063:	outs   dx,DWORD PTR ds:[esi]
  418064:	sbb    BYTE PTR [ecx],cl
  418066:	add    BYTE PTR [ebp+0x3d],ch
  418069:	rep outs dx,BYTE PTR ds:[esi]
  41806b:	jno    0x41806d
	...
  418079:	add    BYTE PTR [eax],al
  41807b:	dec    esi
  41807c:	loopne 0x4180f1
  41807e:	mov    DWORD PTR gs:[ebx+0x8636c61],ebx
  418085:	add    al,0x71
  418087:	shl    BYTE PTR [edx+0x6bbe742c],cl
  41808d:	pop    edx
  41808e:	ins    DWORD PTR es:[edi],dx
  41808f:	ror    DWORD PTR [ecx],cl
  418091:	sub    al,BYTE PTR [eax]
  418093:	shr    BYTE PTR [ebp+0x9b76725],1
  418099:	cmc    
  41809a:	pop    esp
  41809b:	rcr    dl,0x2a
  41809e:	jno    0x418066
  4180a0:	sahf   
  4180a1:	outs   dx,DWORD PTR ss:[esi]
  4180a3:	mov    bh,0xc5
  4180a5:	sub    eax,0x315f5063
  4180aa:	jb     0x41812a
  4180ac:	outs   dx,BYTE PTR ds:[esi]
  4180ad:	and    al,0x72
  4180af:	xchg   BYTE PTR [esi-0x3a8890ca],bl
  4180b5:	sub    eax,0x367f3063
  4180ba:	je     0x41813a
  4180bc:	mov    es,WORD PTR [ecx]
  4180be:	jno    0x418132
  4180c0:	sub    BYTE PTR [esp+esi*2],0x7e
  4180c4:	retf   
  4180c5:	pop    edx
  4180c6:	popa   
  4180c7:	dec    esp
  4180c8:	xor    dh,BYTE PTR [eax]
  4180ca:	imul   eax,DWORD PTR [ebp+0x67],0x23
  4180ce:	ja     0x418127
  4180d0:	mov    DWORD PTR [esi],esi
  4180d2:	add    BYTE PTR [eax+0x2d],dl
  4180d5:	and    eax,0xf6893767
  4180da:	pop    esp
  4180db:	inc    eax
  4180dc:	push   edi
  4180dd:	sub    BYTE PTR [ebx+0x0],dh
	...
  4180ec:	add    BYTE PTR [eax],al
  4180ee:	ds inc eax
  4180f0:	push   edi
  4180f1:	bound  esi,QWORD PTR [edi]
  4180f3:	inc    edi
  4180f4:	add    BYTE PTR es:[ebx-0x62],ah
  4180f8:	add    DWORD PTR [eax],eax
  4180fa:	arpl   WORD PTR [esi-0x619cffff],bx
  418100:	add    DWORD PTR [eax],eax
  418102:	arpl   WORD PTR [esi-0x619cffff],bx
  418108:	add    DWORD PTR [eax],eax
  41810a:	arpl   WORD PTR ds:0x56303e7,ax
  418110:	out    0x3,eax
  418112:	arpl   WORD PTR ds:0x56303e7,ax
  418118:	pop    ss
  418119:	ss (bad) 
  41811b:	daa    
  41811c:	adc    BYTE PTR [eax],ch
  41811e:	shl    BYTE PTR [ecx*8-0x18e14ad6],0x53
  418126:	mov    cl,0x20
  418128:	add    eax,0xe72ac72b
  41812d:	dec    edx
  41812e:	mov    dl,0x53
  418130:	les    esp,FWORD PTR [edi]
  418132:	test   BYTE PTR [ecx],bh
  418134:	shl    BYTE PTR [ecx],0x80
  418137:	add    eax,0x1d8f22b7
  41813c:	out    0x53,eax
  41813e:	lods   al,BYTE PTR ds:[esi]
  41813f:	cmp    edi,ecx
  418141:	dec    edi
  418142:	jbe    0x41818e
  418144:	scas   eax,DWORD PTR es:[edi]
  418145:	push   ds
  418146:	arpl   WORD PTR [eax+eax*8],si
  418149:	and    BYTE PTR [ebp+0x3d349520],al
  41814f:	xor    al,0x98
  418151:	daa    
	...
  41815e:	add    BYTE PTR [eax],al
  418160:	add    BYTE PTR [ecx+edi*1-0x74],bh
  418164:	add    edx,DWORD PTR [edx+0x1e]
  418167:	xchg   BYTE PTR [ecx],ch
  418169:	inc    esi
  41816a:	pop    ds
  41816b:	jp     0x418156
  41816d:	push   eax
  41816e:	sub    eax,0x1e520373
  418173:	mov    gs,WORD PTR [ecx]
  418175:	dec    esi
  418176:	pop    ds
  418177:	jp     0x41816e
  418179:	xchg   BYTE PTR [ecx],bh
  41817b:	pop    edi
  41817c:	xor    BYTE PTR [ebx+0x34],ah
  41817f:	push   eax
  418180:	and    DWORD PTR ds:0x52354520,esi
  418186:	fist   WORD PTR [edx+0x3c]
  418189:	syscall 
  41818b:	or     dh,dh
  41818d:	add    eax,DWORD PTR ds:0x500f60a
  418193:	add    BYTE PTR [edx],cl
  418195:	jne    0x4181b9
  418197:	add    BYTE PTR [edx],bl
  418199:	xor    al,0x41
  41819b:	inc    ebx
  41819c:	sub    dl,BYTE PTR [ebx]
  41819e:	in     eax,0x67
  4181a0:	push   cs
  4181a1:	cmp    DWORD PTR cs:[esi+0x8],ebp
  4181a5:	test   BYTE PTR [edx],ah
  4181a7:	sub    al,0xc9
  4181a9:	jne    0x4181ca
  4181ab:	popa   
  4181ac:	sti    
  4181ad:	mov    DWORD PTR ds:0x52830474,esi
  4181b3:	jno    0x4181c1
  4181b5:	jne    0x4181d6
  4181b7:	pop    edi
  4181b8:	cld    
  4181b9:	push   ebp
  4181ba:	loope  0x4181db
  4181bc:	int3   
  4181bd:	jp     0x4181e3
  4181bf:	jb     0x4181a1
  4181c1:	jo     0x4181fc
  4181c3:	arpl   bp,cx
	...
  4181d1:	add    BYTE PTR [eax],al
  4181d3:	add    BYTE PTR [eax+0x53da714e],dh
  4181d9:	and    BYTE PTR [edx-0x33],dh
  4181dc:	add    BYTE PTR [ecx+0x52],cl
  4181df:	scas   al,BYTE PTR es:[edi]
  4181e0:	popf   
  4181e1:	in     eax,0x6a
  4181e3:	(bad)  
  4181e4:	ds push eax
  4181e6:	ins    BYTE PTR es:[edi],dx
  4181e7:	mov    esi,0x9a6e2643
  4181ec:	pusha  
  4181ed:	inc    edi
  4181ee:	addr16 fwait
  4181f0:	inc    ebp
  4181f1:	daa    
  4181f2:	ins    DWORD PTR es:[edi],dx
  4181f3:	xchg   ecx,eax
  4181f4:	pusha  
  4181f5:	push   ecx
  4181f6:	dec    ebx
  4181f7:	jle    0x41818f
  4181f9:	es ins BYTE PTR es:[edi],dx
  4181fb:	xchg   ebp,eax
  4181fc:	adc    DWORD PTR [ecx+0x46],0x66228e90
  418203:	xchg   BYTE PTR [eax+0x51],bh
  418206:	add    BYTE PTR [edx+0x5e74278b],bl
  41820c:	xchg   BYTE PTR [ebx],dh
  41820e:	arpl   WORD PTR ds:0x407a201a,di
  418214:	dec    ebx
  418215:	and    DWORD PTR [edi-0x17],ebx
  418218:	mov    ebx,ebx
  41821a:	sub    al,BYTE PTR [eax]
  41821c:	jp     0x41822e
  41821e:	je     0x418290
  418220:	pusha  
  418221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418222:	sub    al,0x0
  418224:	and    dh,ch
  418226:	jae    0x418298
  418228:	jo     0x4181d1
  41822a:	sub    al,0x0
  41822c:	push   edx
  41822d:	cmc    
  41822e:	jae    0x4182a0
  418230:	dec    ecx
  418231:	stos   DWORD PTR es:[edi],eax
  418232:	sub    al,0x2f
  418234:	dec    edx
  418235:	adc    BYTE PTR [eax+esi*2+0x0],dh
	...
  418245:	add    BYTE PTR [eax],al
  418247:	adc    al,0x2
  418249:	imul   cx,WORD PTR [eax-0x1b],0x5445
  41824f:	push   0xfffffff2
  418251:	fs je  0x4182c3
  418254:	repnz sub eax,0xfff56b64
  41825a:	push   edx
  41825b:	pop    ds
  41825c:	jmp    0xdb55f1a9
  418261:	pusha  
  418262:	jns    0x41826e
  418264:	push   esi
  418265:	dec    ecx
  418266:	outs   dx,DWORD PTR ds:[esi]
  418267:	xor    cl,ah
  418269:	imul   ebp,DWORD PTR [ebx+ebx*1+0x56],0x4f
  41826e:	sbb    edi,DWORD PTR gs:0xe5216e6b
  418275:	je     0x4182d3
  418277:	or     dh,al
  418279:	imul   ebp,DWORD PTR [edi-0x27],0xffffffda
  41827d:	call   FWORD PTR [ebx-0x44]
  418280:	in     eax,0x6a
  418282:	arpl   cx,sp
  418284:	push   ebp
  418285:	inc    edx
  418286:	jb     0x4182dd
  418288:	fild   QWORD PTR [esi+0x65]
  41828b:	dec    eax
  41828c:	push   esi
  41828d:	add    BYTE PTR [ebp-0x2b],cl
  418290:	jmp    0x4182f6
  418292:	ins    BYTE PTR es:[edi],dx
  418293:	out    0xe8,al
  418295:	call   FWORD PTR [ebx-0x29]
  418298:	out    0x79,al
  41829a:	imul   edx,DWORD PTR [esi],0x6a5c5cdd
  4182a0:	repz push 0x66
  4182a3:	arpl   WORD PTR [ebp+0x28],ax
  4182a6:	arpl   WORD PTR [eax],dx
  4182a8:	loopne 0x4182ad
  4182aa:	push   ecx
	...
  4182b7:	add    BYTE PTR [eax],al
  4182b9:	add    ah,bh
  4182bb:	cmp    eax,0xea027530
  4182c0:	push   ds
  4182c1:	pop    esp
  4182c2:	das    
  4182c3:	inc    ecx
  4182c4:	pop    ds
  4182c5:	popa   
  4182c6:	or     esp,esi
  4182c8:	dec    edi
  4182c9:	push   eax
  4182ca:	arpl   bp,bx
  4182cc:	xor    esi,DWORD PTR [eax+0x1f]
  4182cf:	adc    eax,0x3af0032
  4182d4:	and    DWORD PTR [edi-0x39],ebx
  4182d7:	loop   0x418303
  4182d9:	jb     0x41833e
  4182db:	add    BYTE PTR ds:0x22f9b86d,ah
  4182e1:	jb     0x4182ab
  4182e3:	les    ebx,FWORD PTR ds:0x529eaf5f
  4182e9:	addr16 mov bh,0xb9
  4182ec:	dec    esp
  4182ed:	outs   dx,BYTE PTR ds:[esi]
  4182ee:	mov    ebp,0xa54ee3bb
  4182f3:	outs   dx,BYTE PTR ds:[esi]
  4182f4:	add    DWORD PTR [ebp+0x7f],ecx
  4182f7:	lds    esp,FWORD PTR [ebx]
  4182f9:	add    BYTE PTR [ebp-0x6e92d443],ah
  4182ff:	aad    0x2d
  418301:	arpl   WORD PTR [eax+0x4],si
  418304:	and    BYTE PTR [edi+0x6f],bl
  418307:	sahf   
  418308:	dec    esi
  418309:	addr16 jge 0x418368
  41830c:	dec    ebp
  41830d:	push   eax
  41830e:	arpl   WORD PTR [edi-0x70b98bd4],cx
  418314:	jecxz  0x418379
  418316:	inc    ecx
  418317:	sahf   
  418318:	inc    edx
  418319:	dec    esp
  41831a:	xor    BYTE PTR [ebp+0x3d],dh
  41831d:	pop    esp
	...
  41832a:	add    BYTE PTR [eax],al
  41832c:	add    BYTE PTR [eax+0x6d],cl
  41832f:	hlt    
  418330:	inc    eax
  418331:	jb     0x41838d
  418333:	out    dx,al
  418334:	xor    esi,DWORD PTR [edx+0x69]
  418337:	inc    esp
  418338:	aaa    
  418339:	jbe    0x418340
  41833b:	sub    edi,esp
  41833d:	jne    0x418335
  41833f:	inc    edx
  418340:	repnz dec ecx
  418342:	in     eax,dx
  418343:	daa    
  418344:	cld    
  418345:	inc    esp
  418346:	ficom  DWORD PTR [esi]
  418348:	hlt    
  418349:	push   esp
  41834a:	cmc    
  41834b:	daa    
  41834c:	inc    eax
  41834d:	and    eax,edi
  41834f:	clc    
  418350:	cmp    eax,0x5833f125
  418355:	sbb    al,0x1b
  418357:	pop    ss
  418358:	xor    bh,dh
  41835a:	daa    
  41835b:	cmp    bl,BYTE PTR [edi]
  41835d:	icebp  
  41835e:	xor    al,BYTE PTR [edx+esi*1]
  418361:	xchg   edx,eax
  418362:	mul    esi
  418364:	xor    al,al
  418366:	aaa    
  418367:	adc    eax,0xd538d11f
  41836c:	cmp    edi,DWORD PTR [eax-0x5aa818e7]
  418372:	push   ecx
  418373:	pop    ss
  418374:	cmp    eax,0x1ef331c0
  418379:	mov    cl,0x5
  41837b:	lods   al,BYTE PTR ds:[esi]
  41837c:	push   eax
  41837d:	(bad)  
  41837e:	and    ecx,ecx
  418380:	icebp  
  418381:	dec    esi
  418382:	and    eax,ecx
  418384:	das    
  418385:	arpl   WORD PTR [esi-0x5d],dx
  418388:	and    dl,BYTE PTR [edi-0x5bdfeada]
  41838e:	xor    edi,esp
  418390:	push   edi
	...
  41839d:	add    BYTE PTR [eax],al
  41839f:	add    BYTE PTR [eax-0x79cf44c8],ah
  4183a5:	and    esi,DWORD PTR [ebx-0x52c6d3a9]
  4183ab:	dec    edi
  4183ac:	xchg   ebx,eax
  4183ad:	add    eax,0x225725b0
  4183b2:	cdq    
  4183b3:	and    eax,0x3ec73140
  4183b8:	dec    ebx
  4183b9:	xor    eax,0x22512493
  4183be:	jns    0x4183c3
  4183c0:	push   ss
  4183c1:	push   ds
  4183c2:	add    BYTE PTR [edi+0x75631b89],al
  4183c8:	and    ecx,DWORD PTR [ecx+eiz*2+0x51]
  4183cc:	inc    esp
  4183cd:	inc    esi
  4183ce:	jb     0x418414
  4183d0:	inc    ebx
  4183d1:	sub    BYTE PTR [esi+0x5d],ch
  4183d4:	dec    eax
  4183d5:	dec    esp
  4183d6:	ins    BYTE PTR es:[edi],dx
  4183d7:	pop    edx
  4183d8:	addr16 inc eax
  4183da:	push   ecx
  4183db:	or     DWORD PTR [eax],ebx
  4183dd:	dec    eax
  4183de:	and    BYTE PTR [edi],ah
  4183e0:	adc    edx,DWORD PTR [ebp+0x20]
  4183e3:	sbb    DWORD PTR [eax+0x36],eax
  4183e6:	jno    0x41841e
  4183e8:	inc    esi
  4183e9:	aaa    
  4183ea:	sbb    bl,BYTE PTR fs:[edi+0x41]
  4183ee:	push   eax
  4183ef:	sub    BYTE PTR [edi+0x60c93a42],dh
  4183f5:	xor    eax,0x37861571
  4183fa:	arpl   WORD PTR [edx],cx
  4183fc:	cmp    eax,0x670d6c27
  418401:	push   ebp
  418402:	push   ecx
  418403:	std    
	...
  418410:	add    BYTE PTR [eax],al
  418412:	add    BYTE PTR [edi+0x37],bh
  418415:	arpl   WORD PTR [edx],bp
  418417:	jno    0x41843f
  418419:	pop    edi
  41841a:	fld    QWORD PTR [ebp+0x42]
  41841d:	outs   dx,BYTE PTR ds:[esi]
  41841e:	fimul  DWORD PTR [edx+ecx*2+0x6e]
  418422:	retf   0x575
  418425:	add    dl,cl
  418427:	push   edx
  418428:	xor    dh,BYTE PTR [eax-0x43]
  41842b:	adc    esi,ebp
  41842d:	sub    eax,0x1944c5
  418432:	stos   BYTE PTR es:[edi],al
  418433:	xor    dh,BYTE PTR [edx]
  418435:	jo     0x4183ec
  418437:	popf   
  418438:	sbb    esi,DWORD PTR [eax-0x65]
  41843b:	aas    
  41843c:	xor    DWORD PTR [ebx-0x76],esp
  41843f:	mov    WORD PTR [ecx+0x5f],es
  418442:	popf   
  418443:	add    DWORD PTR ds:0x560e900,0x6ba0000
  41844d:	add    BYTE PTR [eax],al
  41844f:	retf   0x4a46
  418452:	aaa    
  418453:	out    dx,al
  418454:	mov    bh,BYTE PTR [edx+0x79318bcf]
  41845a:	add    al,dl
  41845c:	add    DWORD PTR [ebp+0x46],esp
  41845f:	lods   al,BYTE PTR ds:[esi]
  418460:	inc    eax
  418461:	dec    edx
  418462:	aaa    
  418463:	outs   dx,BYTE PTR ds:[esi]
  418464:	pop    ebp
  418465:	mov    edx,0x79378bcf
  41846a:	add    al,dh
  41846c:	add    DWORD PTR [ebp+0x46],esp
  41846f:	lods   al,BYTE PTR ds:[esi]
  418470:	inc    ebx
  418471:	dec    edx
  418472:	aaa    
  418473:	outs   dx,BYTE PTR ds:[esi]
  418474:	bound  edi,QWORD PTR [edx+0xcf]
	...
  418486:	mov    esi,DWORD PTR [edi]
  418488:	jns    0x41848a
  41848a:	adc    BYTE PTR [ecx],al
  41848c:	gs inc esi
  41848e:	in     al,dx
  41848f:	mov    ch,0xfd
  418491:	dec    DWORD PTR [edx-0x63]
  418494:	sub    eax,0x4f019232
  418499:	outs   dx,DWORD PTR ds:[esi]
  41849a:	push   esp
  41849b:	in     eax,dx
  41849c:	jb     0x4184ff
  41849e:	cmp    ch,bl
  4184a0:	pop    ebx
  4184a1:	dec    ebp
  4184a2:	arpl   dx,sp
  4184a4:	jno    0x418515
  4184a6:	sub    edi,esp
  4184a8:	gs je  0x4184c9
  4184ab:	jmp    0xf068f91d
  4184b0:	ins    DWORD PTR es:[edi],dx
  4184b1:	gs cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4184b4:	inc    edx
  4184b5:	js     0x4184e1
  4184b7:	or     ch,BYTE PTR [ebx+0x72]
  4184ba:	pop    ss
  4184bb:	lock pop ebx
  4184bd:	dec    ecx
  4184be:	sub    al,0xf2
  4184c0:	pusha  
  4184c1:	ins    BYTE PTR es:[edi],dx
  4184c2:	push   ds
  4184c3:	or     DWORD PTR [esi+0x6f],eax
  4184c6:	test   al,0xe4
  4184c8:	outs   dx,BYTE PTR ds:[esi]
  4184c9:	pop    esp
  4184ca:	test   eax,0xeb726af1
  4184cf:	fisub  WORD PTR [eax+0x32]
  4184d2:	arpl   WORD PTR [ecx+eax*1+0x249c6300],bx
  4184d9:	add    BYTE PTR [ecx-0x64],al
  4184dc:	sub    BYTE PTR [eax],al
  4184de:	jno    0x41847c
  4184e0:	jmp    0xecddf3e4
  4184e5:	inc    DWORD PTR [esi-0x64]
  4184e8:	loopne 0x4184e9
	...
  4184f6:	add    BYTE PTR [eax],al
  4184f8:	add    BYTE PTR [ebx-0x64],ch
  4184fb:	and    eax,DWORD PTR [eax]
  4184fd:	push   edi
  4184fe:	pushf  
  4184ff:	cli    
  418500:	inc    DWORD PTR [edi-0x64]
  418503:	cmc    
  418504:	inc    DWORD PTR [ecx]
  418506:	pushf  
  418507:	and    eax,0xe09c4a00
  41850c:	inc    DWORD PTR [ebx]
  41850e:	pushf  
  41850f:	idiv   bh
  418511:	das    
  418512:	pushf  
  418513:	jmp    0x26ddc517
  418518:	add    BYTE PTR [ecx],dh
  41851a:	pushf  
  41851b:	repz call FWORD PTR [ebx-0x6f000e62]
  418522:	sahf   
  418523:	and    eax,0x249ec100
  418528:	add    BYTE PTR [esi+ebx*4-0x618bffd9],cl
  41852f:	add    DWORD PTR [eax],eax
  418531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418532:	add    eax,0xabbc7225
  418537:	and    ah,BYTE PTR [esi-0x51]
  41853a:	mov    edi,0x758d675a
  41853f:	pop    ds
  418540:	arpl   WORD PTR [edi-0x79002491],cx
  418546:	shl    BYTE PTR [ecx],cl
  418548:	cmp    dh,BYTE PTR [edi+ecx*1]
  41854b:	add    al,0x51
  41854d:	mov    eax,es
  41854f:	xor    eax,0x286c8275
  418554:	pop    esp
  418555:	mov    ds:0x7e6222c2,al
  41855a:	add    eax,0x46c3
	...
  41856b:	add    BYTE PTR [esi+0x1a],cl
  41856e:	mov    WORD PTR [edx],fs
  418570:	inc    ebp
  418571:	add    eax,0x22571cba
  418576:	mov    edx,0x8c2f5128
  41857b:	xor    eax,0x1c9a0532
  418580:	das    
  418581:	and    bl,BYTE PTR [edx-0x7bd0ced8]
  418587:	xor    eax,0x504ae283
  41858c:	sub    ebx,DWORD PTR [eax]
  41858e:	pop    edx
  41858f:	cmp    BYTE PTR [ebx+0x54],ah
  418592:	inc    eax
  418593:	cmp    BYTE PTR [eax],al
  418595:	push   esp
  418596:	inc    esp
  418597:	ss or  eax,0x41e43922
  41859d:	and    DWORD PTR [ebx],ebx
  41859f:	pop    ecx
  4185a0:	add    BYTE PTR [ebx],ah
  4185a2:	sbb    al,0x36
  4185a4:	inc    DWORD PTR [edx+ebx*1]
  4185a7:	sbb    ebp,edi
  4185a9:	and    DWORD PTR [edx],edi
  4185ab:	daa    
  4185ac:	shr    DWORD PTR [edi],1
  4185ae:	add    al,0x36
  4185b0:	and    edx,0xa
  4185b3:	push   eax
  4185b4:	mov    cl,0x22
  4185b6:	cld    
  4185b7:	and    bh,cl
  4185b9:	and    al,bh
  4185bb:	inc    edi
  4185bc:	les    esi,FWORD PTR [ebx]
  4185be:	add    al,0x25
  4185c0:	scas   eax,DWORD PTR es:[edi]
  4185c1:	sbb    cl,bh
  4185c3:	sub    ah,BYTE PTR [ebx+0x54]
  4185c6:	add    BYTE PTR [eax],bh
  4185c8:	rcl    BYTE PTR [esp+ecx*8+0x35],0x95
  4185cd:	and    bl,cl
  4185cf:	jecxz  0x4185d1
	...
  4185dd:	add    BYTE PTR [eax],al
  4185df:	inc    ecx
  4185e0:	and    DWORD PTR [edi+edx*2],eax
  4185e3:	xchg   edx,eax
  4185e4:	and    bl,cl
  4185e6:	add    esi,DWORD PTR [edx-0x6dd944e2]
  4185ec:	and    bh,BYTE PTR [ecx+0x338039]
  4185f2:	or     DWORD PTR [esp],eax
  4185f5:	sub    edx,DWORD PTR [edi+ebp*1+0x30c97224]
  4185fc:	push   edx
  4185fd:	add    ah,al
  4185ff:	(bad)
  418603:	jns    0x41862b
  418605:	push   0x176988
  41860a:	call   0x337d:0x9a633159
  418611:	jbe    0x41859f
  418613:	jbe    0x4185fa
  418615:	and    al,BYTE PTR [ebp+0x3d465614]
  41861b:	aaa    
  41861c:	add    eax,0x34434444
  418621:	js     0x41866f
  418623:	sbb    DWORD PTR [ecx+0x50],edx
  418626:	jmp    0x4cb5a67a
  41862b:	xlat   BYTE PTR ss:[ebx]
  41862d:	ja     0x41867b
  41862f:	inc    ebx
  418630:	add    eax,0xe5454c55
  418635:	inc    ebx
  418636:	dec    eax
  418637:	sub    ecx,DWORD PTR [eax+0x0]
  41863a:	xor    eax,0xf672082
  41863f:	aas    
  418640:	inc    ebx
  418641:	pop    edi
  418642:	sbb    eax,0x0
	...
  41864f:	add    BYTE PTR [eax],al
  418651:	add    BYTE PTR [eax-0x5cc7aefb],al
  418657:	push   ds
  418658:	je     0x418666
  41865a:	inc    edi
  41865b:	and    DWORD PTR [ebp-0x5],ebp
  41865e:	push   ebp
  41865f:	inc    esi
  418660:	je     0x41862b
  418662:	aaa    
  418663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418664:	jno    0x41866e
  418666:	jge    0x418681
  418668:	arpl   cx,bp
  41866a:	cmp    BYTE PTR [edi-0x58ff16d8],ah
  418670:	inc    edx
  418671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418672:	mov    ds:0xa1bb5454,al
  418677:	ds dec esi
  418679:	add    dh,bl
  41867b:	add    dl,BYTE PTR [eax+0x52]
  41867e:	mov    bl,0xe7
  418680:	cmp    al,0x52
  418682:	rol    DWORD PTR [edx],cl
  418684:	push   ecx
  418685:	dec    esi
  418686:	ret    
  418687:	push   ebx
  418688:	push   ecx
  418689:	inc    ebp
  41868a:	retf   0x4841
  41868d:	inc    ebp
  41868e:	or     edx,ebp
  418690:	inc    DWORD PTR [ebp+0x5]
  418693:	push   ecx
  418694:	inc    ecx
  418695:	dec    ecx
  418696:	std    
  418697:	inc    esp
  418698:	add    BYTE PTR [eax],al
  41869a:	(bad)  
  41869b:	in     eax,0x62
  41869d:	imul   esp,esp,0x286efff1
  4186a3:	or     esp,DWORD PTR [ebx+0x69]
  4186a6:	and    al,0x55
  4186a8:	jno    0x41871c
  4186aa:	add    DWORD PTR ss:[eax+0x61],esi
  4186ae:	cmp    edx,esi
  4186b0:	jb     0x418721
  4186b2:	sub    ch,bl
  4186b4:	pop    edx
  4186b5:	jbe    0x4186b7
	...
  4186c3:	add    BYTE PTR [eax],al
  4186c5:	sbb    esp,ebp
  4186c7:	jo     0x41872e
  4186c9:	mov    ch,ch
  4186cb:	outs   dx,BYTE PTR ds:[esi]
  4186cc:	cmp    BYTE PTR gs:[edi],al
  4186cf:	pop    ebp
  4186d0:	ins    DWORD PTR es:[edi],dx
  4186d1:	pop    ds
  4186d2:	ss jbe 0x418736
  4186d5:	es in  al,dx
  4186d7:	pusha  
  4186d8:	add    BYTE PTR [ebp+ebp*8+0x6f],ch
  4186dc:	cmp    ah,BYTE PTR ds:0x6e67fdc7
  4186e2:	in     eax,dx
  4186e3:	outs   dx,DWORD PTR ds:[esi]
  4186e4:	cmp    al,BYTE PTR ds:0x3e67fdc7
  4186ea:	out    dx,al
  4186eb:	outs   dx,DWORD PTR ds:[esi]
  4186ec:	jae    0x41870e
  4186ee:	(bad)  
  4186ef:	sub    al,0x0
  4186f1:	push   esi
  4186f2:	imul   ebp,DWORD PTR ds:[edi+0x5d],0xffffffe5
  4186f7:	pusha  
  4186f8:	pop    esp
  4186f9:	leave  
  4186fa:	or     DWORD PTR [edx+0x6f],esi
  4186fd:	daa    
  4186fe:	(bad)  
  418700:	pop    ebx
  418701:	arpl   WORD PTR [ebx+0x19],bx
  418704:	jb     0x41877a
  418706:	imul   ebx,DWORD PTR [ebx+esi*2],0x414d9c8e
  41870d:	mov    ebp,DWORD PTR [edx+0x1e]
  418710:	imul   eax,DWORD PTR [esi+0x70731d8c],0xffffff9c
  418717:	push   edx
  418718:	ins    DWORD PTR es:[edi],dx
  418719:	inc    ebp
  41871a:	mov    BYTE PTR [esi],dh
  41871c:	pop    edi
  41871d:	push   ecx
  41871e:	or     DWORD PTR [ebp+0x41],0x6b1e8a3b
  418725:	ds ins BYTE PTR es:[edi],dx
  418727:	sbb    eax,0x73
	...
  418738:	xor    BYTE PTR [esp+edi*1+0x2430306e],bl
  41873f:	ins    BYTE PTR es:[edi],dx
  418740:	aas    
  418741:	pop    DWORD PTR [ebp+0x67]
  418744:	xor    DWORD PTR [ebp+ecx*2+0x1f4f1142],ebx
  41874b:	addr16 push cs
  41874d:	cmp    DWORD PTR [esp+ebx*2],eax
  418750:	sbb    eax,0x11682145
  418755:	out    0x1e,eax
  418757:	arpl   WORD PTR [ebx-0x20],sp
  41875a:	inc    eax
  41875b:	ins    DWORD PTR es:[edi],dx
  41875c:	push   es
  41875d:	aaa    
  41875e:	sub    BYTE PTR [ebp+0x63],ch
  418761:	adc    BYTE PTR [edx+0x6d],dl
  418764:	add    BYTE PTR [ebx+0x3f],al
  418767:	arpl   di,cx
  418769:	add    al,BYTE PTR [ecx+ecx*2]
  41876c:	xchg   cl,dh
  41876e:	es ins BYTE PTR es:[edi],dx
  418770:	(bad)  
  418771:	or     ebx,DWORD PTR [esi]
  418773:	add    BYTE PTR [edi-0x39b52119],ah
  418779:	cli    
  41877a:	es ins DWORD PTR es:[edi],dx
  41877c:	lds    ebp,FWORD PTR [esi+0xbb1504d]
  418782:	es addr16 mov bh,0x9
  418786:	xor    DWORD PTR [eax],eax
  418788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418789:	add    eax,0x5821cd7
  41878e:	mov    ebx,0xca2e9348
  418793:	dec    edi
  418794:	mov    al,ds:0x6322c015
  418799:	cmp    BYTE PTR [ebx+0x24],bh
	...
  4187ab:	jge    0x4187d8
  4187ad:	or     al,0x46
  4187af:	xchg   edi,eax
  4187b0:	xor    eax,0x197c32e7
  4187b5:	les    esi,FWORD PTR [edx]
  4187b7:	lea    ebp,[esi]
  4187b9:	xchg   ebp,eax
  4187ba:	sbb    al,0x63
  4187bc:	inc    ecx
  4187bd:	mov    edx,0x9a2a571c
  4187c2:	add    esp,DWORD PTR [edi]
  4187c4:	cmp    eax,DWORD PTR [eax-0x69d7bbce]
  4187ca:	and    BYTE PTR [ebx+0x44278452],al
  4187d0:	es out 0xdd,eax
  4187d3:	sbb    DWORD PTR ds:[edi+0x3],esi
  4187d7:	xor    al,BYTE PTR ds:0x50f044c
  4187dd:	push   ebx
  4187de:	add    al,0x4
  4187e0:	add    eax,0x4fe0445
  4187e5:	pop    edx
  4187e6:	add    al,0x63
  4187e8:	add    eax,0x34074523
  4187ed:	dec    ecx
  4187ee:	and    edi,edi
  4187f0:	in     al,0x2a
  4187f2:	sbb    eax,0x1d3b32ee
  4187f7:	mov    esp,0x63320c29
  4187fc:	cmp    BYTE PTR [esi+ebx*8],ch
  4187ff:	lods   eax,DWORD PTR ds:[esi]
  418800:	pop    ss
  418801:	or     bl,BYTE PTR [ebx+eiz*2]
  418804:	dec    ebx
  418805:	sbb    DWORD PTR [edi],esp
  418807:	mov    dl,0x2d
  418809:	sub    eax,0xcd059358
  41880e:	push   eax
	...
  41881b:	add    BYTE PTR [eax],al
  41881d:	add    BYTE PTR [eax-0x5d16ffb5],bl
  418823:	xor    DWORD PTR [edi-0xd],ebx
  418826:	inc    ebp
  418827:	dec    ebx
  418828:	je     0x418803
  41882a:	pusha  
  41882b:	push   ss
  41882c:	addr16 aad 0x45
  41882f:	repz arpl ax,cx
  418832:	dec    esp
  418833:	add    eax,0x1933c84c
  418838:	push   eax
  418839:	enter  0x1633,0x75
  41883d:	into   
  41883e:	xor    ch,BYTE PTR [ecx]
  418840:	add    BYTE PTR [ebp-0x578be9bf],ah
  418846:	test   BYTE PTR [ecx],ch
  418848:	jb     0x4187d6
  41884a:	xchg   ebx,eax
  41884b:	push   ss
  41884c:	add    BYTE PTR [ebp-0x438be97f],ch
  418852:	xchg   ebx,eax
  418853:	sub    BYTE PTR [edx-0x17],dh
  418856:	jl     0x41889c
  418858:	jno    0x4188d7
  41885a:	adc    BYTE PTR [edx],dh
  41885c:	jb     0x4188d3
  41885e:	pusha  
  41885f:	ss ins DWORD PTR es:[edi],dx
  418861:	(bad)  
  418862:	ins    BYTE PTR es:[edi],dx
  418863:	sbb    bl,BYTE PTR [edi+0x7b]
  418866:	inc    ebp
  418867:	inc    ecx
  418868:	inc    esi
  418869:	push   ebp
  41886a:	inc    eax
  41886b:	push   ss
  41886c:	push   0x69444439
  418871:	xor    eax,0x535f3121
  418876:	inc    esp
  418877:	dec    ebx
  418878:	je     0x4188b3
  41887a:	adc    esi,DWORD PTR [esi]
  41887c:	arpl   WORD PTR ds:0x4e6e2c2b,si
	...
  41888e:	add    BYTE PTR [eax],al
  418890:	add    BYTE PTR [edx],dh
  418892:	add    eax,0x42832b5c
  418897:	jp     0x4188a5
  418899:	popf   
  41889a:	sbb    DWORD PTR [eax-0x17],esi
  41889d:	sub    DWORD PTR cs:[eax+0x5],esi
  4188a1:	pop    edi
  4188a2:	dec    ebx
  4188a3:	push   esp
  4188a4:	cmp    DWORD PTR [edx],ebx
  4188a6:	out    dx,al
  4188a7:	sub    eax,0x6dfe6e00
  4188ac:	imul   ecx,DWORD PTR [esi-0x2c],0x67
  4188b0:	gs pop esi
  4188b2:	in     eax,0x5b
  4188b4:	outs   dx,DWORD PTR ds:[esi]
  4188b5:	sbb    ch,ah
  4188b7:	ins    DWORD PTR es:[edi],dx
  4188b8:	pop    esp
  4188b9:	sub    DWORD PTR [edx],eax
  4188bb:	imul   ebp,DWORD PTR [ebp+0x1b],0xb5006401
  4188c2:	add    DWORD PTR [esi+0x54],eax
  4188c5:	mov    edx,0xc6f3f06
  4188ca:	add    DWORD PTR [ecx+0x63],esp
  4188cd:	mov    dh,0xff
  4188cf:	push   0x6e
  4188d1:	test   eax,0x167871c0
  4188d6:	pop    es
  4188d7:	das    
  4188d8:	inc    esp
  4188d9:	scas   eax,DWORD PTR es:[edi]
  4188da:	dec    eax
  4188db:	push   esp
  4188dc:	push   eax
  4188dd:	mov    edx,0xd77464d5
  4188e2:	aad    0x2d
  4188e4:	imul   edi,DWORD PTR [edi+edi*8],0x4af95bff
  4188eb:	sub    DWORD PTR [esi-0x2a],eax
  4188ee:	add    BYTE PTR ss:[ecx+ecx*8-0x1],bl
  4188f3:	jae    0x41895a
	...
  418901:	add    BYTE PTR [eax],al
  418903:	add    dh,al
  418905:	jmp    0x418975
  418907:	imul   esp,DWORD PTR ds:0x7a7260ff,0x46464b3b
  418911:	ss cmp eax,0x3f4d4752
  418917:	ins    BYTE PTR es:[edi],dx
  418918:	sub    ebx,edx
  41891a:	outs   dx,BYTE PTR ds:[esi]
  41891b:	sub    DWORD PTR gs:[ebp+0x54],ecx
  41891f:	jns    0x41894b
  418921:	in     al,0x4b
  418923:	imul   ebp,DWORD PTR [eax+0x4346774d],0x79333196
  41892d:	mov    cl,0x35
  41892f:	sub    eax,0x45f1f263
  418934:	jno    0x418997
  418936:	hlt    
  418937:	das    
  418938:	jb     0x418927
  41893a:	(bad)  
  41893b:	ds jo  0x41892d
  41893e:	jmp    0x512f:0xf154732a
  418945:	out    dx,al
  418946:	cmc    
  418947:	inc    ebp
  418948:	dec    edi
  418949:	in     eax,0x41
  41894b:	inc    edx
  41894c:	mov    fs,WORD PTR [eax-0xc]
  41894f:	sub    eax,0x5bf15851
  418954:	je     0x41891b
  418956:	pop    ss
  418957:	xor    DWORD PTR [ecx],esi
  418959:	lods   al,BYTE PTR ds:[esi]
  41895a:	inc    eax
  41895b:	pop    edi
  41895c:	jo     0x418923
  41895e:	aas    
  41895f:	push   esp
  418960:	xchg   ebx,eax
  418961:	lods   al,BYTE PTR ds:[esi]
  418962:	inc    ebp
  418963:	dec    esi
  418964:	inc    esi
  418965:	pop    eax
  418966:	push   esi
  418967:	pop    edi
	...
  418974:	add    BYTE PTR [eax],al
  418976:	add    BYTE PTR [ecx-0x73],dl
  418979:	pop    ss
  41897a:	gs arpl dx,dx
  41897d:	sub    DWORD PTR [esi+0x53],esp
  418980:	lods   al,BYTE PTR ds:[esi]
  418981:	xlat   BYTE PTR ds:[ebx]
  418982:	jno    0x4189cb
  418984:	jl     0x418987
  418986:	push   esp
  418987:	push   ds
  418988:	jle    0x4189c2
  41898a:	push   ecx
  41898b:	adc    DWORD PTR [edx-0x26],edi
  41898e:	sub    DWORD PTR [ebx+0x1c],esp
  418991:	and    al,0x71
  418993:	adc    BYTE PTR [ebx],bl
  418995:	sbb    dh,BYTE PTR [edx-0x1]
  418998:	or     ebp,edi
  41899a:	cs dec ecx
  41899c:	dec    esi
  41899d:	out    dx,al
  41899e:	dec    DWORD PTR [edi]
  4189a0:	aas    
  4189a1:	pop    ds
  4189a2:	jb     0x4189b1
  4189a4:	dec    ebp
  4189a5:	pop    ss
  4189a6:	arpl   WORD PTR [ecx],di
  4189a8:	fucomip st,st(5)
  4189aa:	inc    DWORD PTR [esi]
  4189ac:	fst    DWORD PTR [edi]
  4189ae:	ins    BYTE PTR es:[edi],dx
  4189af:	inc    ebx
  4189b0:	dec    ebp
  4189b1:	and    BYTE PTR [ecx+edx*8+0x49],ah
  4189b5:	xor    eax,0x1a059971
  4189ba:	out    dx,al
  4189bb:	dec    esp
  4189bc:	repz out 0x4f,al
  4189bf:	mov    al,ds:0x91572433
  4189c4:	aaa    
  4189c5:	mov    esi,0x17399d03
  4189ca:	in     al,0x9e
  4189cc:	xor    dh,dh
  4189ce:	add    ebx,DWORD PTR [ebp-0x71c5e8c7]
  4189d4:	sbb    bh,ah
  4189d6:	ss jl  0x4189f2
  4189d9:	int3   
  4189da:	add    BYTE PTR ss:[eax],al
	...
  4189e9:	add    BYTE PTR ds:0x6317cc1d,bh
  4189ef:	xor    al,0xa6
  4189f1:	inc    ecx
  4189f2:	xchg   edi,eax
  4189f3:	cmp    BYTE PTR [eax-0x66be5fab],ch
  4189f9:	sbb    al,BYTE PTR [ecx-0x70bdf3d0]
  4189ff:	xor    eax,0xd88ef707
  418a04:	mov    dl,BYTE PTR [esi+0x42]
  418a07:	adc    edx,DWORD PTR [eax-0x18eba8cd]
  418a0d:	push   esi
  418a0e:	push   ss
  418a0f:	inc    edi
  418a10:	mov    ebx,0xa4337c52
  418a15:	inc    edi
  418a16:	adc    DWORD PTR [eax],esi
  418a18:	mov    DWORD PTR [edx],ebx
  418a1a:	js     0x418a63
  418a1c:	xchg   ebx,eax
  418a1d:	push   ebx
  418a1e:	adc    esp,0xffffffc4
  418a21:	repnz cmp BYTE PTR [edi-0x6d],al
  418a25:	push   ebx
  418a26:	xor    ch,BYTE PTR [edx]
  418a28:	pop    ecx
  418a29:	xor    al,BYTE PTR [eax]
  418a2b:	adc    ebx,DWORD PTR [edx+0x4]
  418a2e:	sbb    eax,0x23e43739
  418a33:	xor    BYTE PTR [edx+ebx*1-0x11],dl
  418a37:	add    al,0x2d
  418a39:	push   eax
  418a3a:	adc    esp,ebp
  418a3c:	and    al,0x1b
  418a3e:	imul   DWORD PTR [ecx]
  418a40:	add    BYTE PTR [ebx+eax*4],cl
  418a43:	add    eax,0x168e4850
  418a48:	jne    0x418a60
  418a4a:	xchg   ebp,eax
  418a4b:	sub    DWORD PTR [eax],eax
  418a4d:	cmp    al,BYTE PTR [eax]
	...
  418a5b:	add    BYTE PTR [eax],al
  418a5d:	adc    esi,DWORD PTR fs:[esi+0xc]
  418a61:	jne    0x418ab2
  418a63:	pop    edi
  418a64:	cld    
  418a65:	push   ebp
  418a66:	add    eax,0x134dfa53
  418a6b:	inc    edi
  418a6c:	and    eax,0x6e485f
  418a71:	push   ebx
  418a72:	sub    BYTE PTR [edi-0x3],bl
  418a75:	push   esp
  418a76:	sub    BYTE PTR [edx-0x34],dh
  418a79:	inc    edi
  418a7a:	sbb    DWORD PTR [ebp-0x25],ebp
  418a7d:	cmp    DWORD PTR ds:0x1936c650,eax
  418a83:	dec    esi
  418a84:	aam    0x4d
  418a86:	and    esp,DWORD PTR [ebx-0x45]
  418a89:	pusha  
  418a8a:	arpl   WORD PTR ss:[ebx-0x628ddbce],di
  418a91:	mov    DWORD PTR ds:0x570e963,edx
  418a97:	add    cl,ch
  418a99:	test   DWORD PTR [edx+0x3f],ecx
  418a9c:	jmp    0x94d0af07
  418aa1:	loope  0x418aec
  418aa3:	dec    esp
  418aa4:	mov    esi,0x4905b832
  418aa9:	jmp    DWORD PTR [ebx+0x386d87d1]
  418aaf:	add    BYTE PTR [ebx-0x44d22d46],bh
  418ab5:	mov    ecx,esi
  418ab7:	xor    BYTE PTR [esi],bl
  418ab9:	addr16 aad 0x9
  418abc:	out    0x88,eax
  418abe:	in     al,dx
  418abf:	add    eax,0xe8
	...
  418ad0:	jge    0x418ad4
  418ad2:	add    eax,0x51055fea
  418ad7:	add    BYTE PTR ds:0x1b7773e3,dl
  418add:	xlat   BYTE PTR ds:[ebx]
  418ade:	pusha  
  418adf:	pop    esp
  418ae0:	xchg   dl,bh
  418ae2:	ins    DWORD PTR es:[edi],dx
  418ae3:	popa   
  418ae4:	cdq    
  418ae5:	inc    ebx
  418ae6:	push   esp
  418ae7:	push   eax
  418ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ae9:	cmp    BYTE PTR [ebp+0x74],ah
  418aec:	pop    edi
  418aed:	test   eax,0xe264614a
  418af2:	bound  esp,QWORD PTR [ebp+0x58]
  418af5:	or     DWORD PTR [eax+0x6f],ecx
  418af8:	sub    edi,ebp
  418afa:	call   DWORD PTR [ecx+ebp*1+0x0]
  418afe:	jb     0x418b00
  418b00:	jp     0x418ae4
  418b02:	outs   dx,BYTE PTR ds:[esi]
  418b03:	jae    0x418b0f
  418b05:	xor    ebp,DWORD PTR [ebx+0x72]
  418b08:	add    edx,DWORD PTR cs:[edx+0x65]
  418b0c:	pop    ss
  418b0d:	(bad)  
  418b0e:	jae    0x418b75
  418b10:	push   0x45
  418b12:	gs jb  0x418b1f
  418b15:	inc    edi
  418b16:	aas    
  418b17:	jns    0x418b31
  418b19:	add    BYTE PTR [edx+0x64],dh
  418b1c:	scas   eax,DWORD PTR es:[edi]
  418b1d:	jmp    0xe5a58b88
  418b22:	jo     0x418b87
  418b24:	mov    eax,ds:0xdf737102
  418b29:	fsubr  DWORD PTR ds:0x65fcd563
  418b2f:	imul   ebp,ebp,0x733c02
	...
  418b41:	add    BYTE PTR [eax],al
  418b43:	fucomip st,st(6)
  418b45:	jae    0x418bb0
  418b47:	aam    0xe5
  418b49:	pop    ds
  418b4a:	outs   dx,BYTE PTR ds:[esi]
  418b4b:	fcomi  st,st(7)
  418b4d:	pusha  
  418b4e:	cmp    eax,0x2202a8
  418b53:	or     al,0xe3
  418b55:	imul   esi,DWORD PTR [ebp+0x1f],0xffffffac
  418b59:	pop    ds
  418b5a:	add    BYTE PTR [ecx-0xa],cl
  418b5d:	gs je  0x418bc3
  418b60:	aas    
  418b61:	and    esi,DWORD PTR [edx-0x2]
  418b64:	out    dx,eax
  418b65:	push   eax
  418b66:	addr16 (bad) 
  418b68:	ss push ss
  418b6a:	push   esp
  418b6b:	add    bl,al
  418b6d:	sbb    ebx,DWORD PTR [edi-0x32]
  418b70:	clc    
  418b71:	push   ebx
  418b72:	jae    0x418b23
  418b74:	clc    
  418b75:	dec    edx
  418b76:	pop    esp
  418b77:	mov    al,0x11
  418b79:	xor    DWORD PTR [ecx-0x46],esi
  418b7c:	movhps xmm6,QWORD PTR [ecx+0x63]
  418b80:	in     al,0x14
  418b82:	jno    0x418b33
  418b84:	(bad)  
  418b85:	and    ch,BYTE PTR [ebx-0x3a]
  418b88:	lods   al,BYTE PTR ds:[esi]
  418b89:	push   eax
  418b8a:	jno    0x418b4a
  418b8c:	call   0x5004:0x118e5f33
  418b93:	sbb    BYTE PTR [ebx-0x45838ace],0x1d
  418b9a:	add    BYTE PTR [ebx-0x528bd031],dh
  418ba0:	rcr    DWORD PTR [eax],0x62
  418ba3:	jle    0x418b5f
  418ba5:	add    DWORD PTR [eax+eax*1+0x0],edx
	...
  418bb5:	add    BYTE PTR [esi+0x7567185a],al
  418bbb:	int    0x15
  418bbd:	push   esp
  418bbe:	pop    edx
  418bbf:	pop    esp
  418bc0:	and    BYTE PTR [eax],al
  418bc2:	and    eax,0x3746315c
  418bc7:	pop    esp
  418bc8:	shl    DWORD PTR [edi+0x36],cl
  418bcb:	nop
  418bcc:	add    DWORD PTR [ebp+ebp*1-0x79],ebx
  418bd0:	sub    eax,0x1d8d3363
  418bd5:	sub    DWORD PTR [eax-0x54],edi
  418bd8:	push   edx
  418bd9:	ins    DWORD PTR es:[edi],dx
  418bda:	cmp    eax,0x115f2e18
  418bdf:	xchg   ecx,eax
  418be0:	inc    ebp
  418be1:	inc    ecx
  418be2:	add    al,0x86
  418be4:	sbb    esp,DWORD PTR [ebx+0x6]
  418be7:	add    eax,0xe513312a
  418bec:	cmp    DWORD PTR [edi],edx
  418bee:	add    eax,0xf1255e19
  418bf3:	daa    
  418bf4:	out    0x3d,eax
  418bf6:	pop    ss
  418bf7:	xor    eax,0x12002007
  418bfc:	xor    ebx,DWORD PTR ds:0x1d3b26cd
  418c02:	(bad)  
  418c03:	sub    eax,DWORD PTR [edi]
  418c05:	xor    eax,eax
  418c07:	pop    ss
  418c08:	sbb    eax,0x2505d121
  418c0d:	push   eax
  418c0e:	xchg   ebx,eax
  418c0f:	in     eax,0xa
  418c11:	and    DWORD PTR [edx-0x73e9ffef],esi
  418c17:	adc    DWORD PTR [eax],edx
  418c19:	pop    ss
	...
  418c26:	add    BYTE PTR [eax],al
  418c28:	add    BYTE PTR [ebp-0x7fcd0c1b],dh
  418c2e:	pop    ss
  418c2f:	out    0x3d,eax
  418c31:	scas   eax,DWORD PTR es:[edi]
  418c32:	xor    eax,0x18801fc7
  418c37:	fistp  DWORD PTR [esi*2-0x71e32cda]
  418c3e:	sub    eax,DWORD PTR [edi]
  418c40:	xor    al,0x94
  418c42:	sbb    dl,bl
  418c44:	cs jle 0x418c5e
  418c47:	retf   
  418c48:	add    ebx,DWORD PTR [ebp+0x40e39731]
  418c4e:	and    bh,BYTE PTR [edx-0x37d4c3d1]
  418c54:	das    
  418c55:	inc    esp
  418c56:	sub    al,0x95
  418c58:	jecxz  0x418c8e
  418c5a:	sub    al,0x99
  418c5c:	das    
  418c5d:	arpl   WORD PTR [ebx-0x45],ax
  418c60:	push   ebx
  418c61:	and    DWORD PTR [ecx],0xffffff84
  418c64:	xor    dh,BYTE PTR [edi]
  418c66:	cs xchg ebp,eax
  418c68:	and    al,0x2f
  418c6a:	mov    ss,WORD PTR cs:0x88002843
  418c71:	inc    esp
  418c72:	cmp    al,0x6c
  418c74:	jle    0x418ce3
  418c76:	add    eax,0xe52f3d46
  418c7b:	outs   dx,DWORD PTR ds:[esi]
  418c7c:	pop    ebx
  418c7d:	push   esi
  418c7e:	and    esp,DWORD PTR [edi+0x45]
  418c81:	push   esp
  418c82:	push   ss
  418c83:	add    BYTE PTR [edi],ah
  418c85:	adc    esi,DWORD PTR ds:0x29445151
  418c8b:	ins    BYTE PTR es:[edi],dx
  418c8c:	jmp    0x418c91
	...
  418c99:	add    BYTE PTR [eax],al
  418c9b:	add    BYTE PTR [esi+0x11],bh
  418c9e:	jo     0x418cda
  418ca0:	ja     0x418cca
  418ca2:	ins    BYTE PTR es:[edi],dx
  418ca3:	cmp    eax,0x10712235
  418ca8:	pop    edi
  418ca9:	ss ins DWORD PTR es:[edi],dx
  418cab:	pop    es
  418cac:	jae    0x418cc0
  418cae:	pop    edi
  418caf:	sbb    edx,DWORD PTR [ecx+edi*1+0x4b]
  418cb3:	sub    BYTE PTR [edx+0x451650f0],dl
  418cb9:	adc    DWORD PTR [edi+eiz*1-0x4d],ebx
  418cbd:	xor    eax,0x2a750747
  418cc2:	pop    esp
  418cc3:	sbb    ch,BYTE PTR [ecx+edx*1+0x73]
  418cc7:	fldenv [eax+0x41]
  418cca:	pop    edi
  418ccb:	aad    0x41
  418ccd:	inc    ecx
  418cce:	(bad)  [bx+si+0x39]
  418cd2:	inc    esi
  418cd3:	mov    ch,0x90
  418cd5:	inc    esp
  418cd6:	outs   dx,BYTE PTR ds:[esi]
  418cd7:	iret   
  418cd8:	dec    edi
  418cd9:	add    eax,0x1392c451
  418cde:	arpl   WORD PTR [ebx-0x4a8edb74],di
  418ce4:	mov    dh,0x13
  418ce6:	imul   edx,DWORD PTR [ebp-0x5e9cb4a0],0xffffff8d
  418ced:	push   ss
  418cee:	inc    esi
  418cef:	or     BYTE PTR [eax+ebp*1+0x0],0x87
  418cf4:	jl     0x418d0b
  418cf6:	jno    0x418cf8
  418cf8:	shr    ebx,cl
  418cfa:	pusha  
  418cfb:	cs repz icebp 
  418cfe:	add    BYTE PTR fs:[eax],al
	...
  418d0d:	add    BYTE PTR [eax],al
  418d0f:	(bad)  
  418d10:	out    0x6e,al
  418d12:	je     0x418cfd
  418d14:	jmp    0x418d80
  418d16:	outs   dx,BYTE PTR ds:[esi]
  418d17:	pop    ss
  418d18:	mov    eax,ds:0xea2d723f
  418d1d:	outs   dx,BYTE PTR ds:[esi]
  418d1e:	sbb    BYTE PTR gs:[ecx],al
  418d21:	inc    esi
  418d22:	push   esp
  418d23:	sub    bl,ch
  418d25:	fs jae 0x418d4e
  418d28:	mov    bl,0x61
  418d2a:	bound  ecx,QWORD PTR [edx+0x43]
  418d2d:	dec    ecx
  418d2e:	popa   
  418d2f:	call   0x63ea:0x965360fd
  418d36:	imul   ebp,DWORD PTR [ebp+0x4d],0xf058683f
  418d3d:	push   0x70fd7a65
  418d42:	jae    0x418d7e
  418d44:	mov    esi,0xc63a403d
  418d49:	inc    esp
  418d4a:	inc    eax
  418d4b:	or     bh,ah
  418d4d:	inc    ebp
  418d4e:	inc    eax
  418d4f:	or     al,BYTE PTR [edx+0x4a]
  418d52:	inc    eax
  418d53:	cli    
  418d54:	leave  
  418d55:	dec    ecx
  418d56:	inc    eax
  418d57:	cli    
  418d58:	pop    es
  418d59:	push   eax
  418d5a:	inc    eax
  418d5b:	or     al,dl
  418d5d:	push   esp
  418d5e:	inc    eax
  418d5f:	or     cl,bl
  418d61:	push   ecx
  418d62:	inc    eax
  418d63:	cli    
  418d64:	rcl    BYTE PTR [esi+0x40],0xfa
  418d68:	inc    ebx
  418d69:	pop    eax
  418d6a:	inc    eax
  418d6b:	retf   0x550e
  418d6e:	inc    eax
  418d6f:	retf   0x5741
  418d72:	inc    eax
	...
  418d7f:	add    BYTE PTR [eax],al
  418d81:	add    BYTE PTR [edx-0x45bfa69a],bh
  418d87:	aam    0x5f
  418d89:	inc    eax
  418d8a:	retf   0x60bf
  418d8d:	inc    eax
  418d8e:	arpl   WORD PTR [ebp+ebp*2-0x6b53dc9f],bp
  418d95:	popa   
  418d96:	and    ebp,DWORD PTR [edx+ebx*1-0x6953dc9c]
  418d9d:	and    ebp,DWORD PTR fs:[ecx+esi*4-0x1d53dc9a]
  418da5:	and    ebp,DWORD PTR fs:[esi+esi*2+0x2eac236a]
  418dad:	imul   esp,DWORD PTR [ebx],0xffffffac
  418db0:	ja     0x418e1f
  418db2:	and    ebp,DWORD PTR [ebx+esi*2+0x4dac2370]
  418db9:	outs   dx,DWORD PTR ds:[esi]
  418dba:	mov    ds:0xa3724eac,eax
  418dbf:	lods   al,BYTE PTR ds:[esi]
  418dc0:	sbb    dh,BYTE PTR [ebx+eiz*4-0x54]
  418dc4:	stc    
  418dc5:	ja     0x418d6a
  418dc7:	lods   al,BYTE PTR ds:[esi]
  418dc8:	and    al,0x78
  418dca:	mov    ds:0xa378ccac,eax
  418dcf:	lods   al,BYTE PTR ds:[esi]
  418dd0:	std    
  418dd1:	js     0x418d76
  418dd3:	lods   al,BYTE PTR ds:[esi]
  418dd4:	sub    BYTE PTR [ecx-0x5d],bh
  418dd7:	lods   al,BYTE PTR ds:[esi]
  418dd8:	dec    esi
  418dd9:	xchg   BYTE PTR [ebx-0x5c78c554],ah
  418ddf:	lods   al,BYTE PTR ds:[esi]
  418de0:	jmp    0x96:0xbbaca389
	...
  418df3:	add    BYTE PTR [eax],al
  418df5:	mov    ds:0xa39524ac,eax
  418dfa:	lods   al,BYTE PTR ds:[esi]
  418dfb:	cli    
  418dfc:	xchg   edi,eax
  418dfd:	mov    ds:0xa3987fac,eax
  418e02:	lods   al,BYTE PTR ds:[esi]
  418e03:	call   0x6dee319e
  418e08:	xchg   edi,eax
  418e09:	and    ebp,DWORD PTR [ecx+ebx*8-0x4453dc67]
  418e10:	call   0x523:0x9939ac23
  418e17:	out    0x55,eax
  418e19:	fiadd  DWORD PTR [edi+eiz*8-0x50]
  418e1d:	fiadd  DWORD PTR [edi+eiz*8-0x28]
  418e21:	add    BYTE PTR [ebp-0x19],al
  418e24:	iret   
  418e25:	cld    
  418e26:	inc    esp
  418e27:	out    0xa0,eax
  418e29:	les    eax,FWORD PTR [edi+eiz*8-0x75]
  418e2d:	fiadd  DWORD PTR [edi+eiz*8+0x5c]
  418e31:	retf   0xe744
  418e34:	lods   eax,DWORD PTR ds:[esi]
  418e35:	retf   0xe744
  418e38:	sbb    BYTE PTR [edi-0x489618bc],bh
  418e3e:	inc    esp
  418e3f:	out    0xba,eax
  418e41:	scas   eax,DWORD PTR es:[edi]
  418e42:	inc    esp
  418e43:	out    0xb,eax
  418e45:	test   al,0x44
  418e47:	out    0x2c,eax
  418e49:	sbb    BYTE PTR [esi-0x19],al
  418e4c:	dec    ecx
  418e4d:	adc    eax,0xdb3e746
  418e52:	inc    esi
  418e53:	out    0x6d,eax
  418e55:	and    eax,DWORD PTR [esi-0x19]
  418e58:	out    0x0,al
	...
  418e66:	add    BYTE PTR [eax],al
  418e68:	std    
  418e69:	inc    ebp
  418e6a:	out    0x28,eax
  418e6c:	hlt    
  418e6d:	inc    ebp
  418e6e:	out    0xc0,eax
  418e70:	in     al,dx
  418e71:	inc    ebp
  418e72:	out    0x47,eax
  418e74:	and    al,BYTE PTR [esi-0x19]
  418e77:	and    al,BYTE PTR gs:[esi-0x19]
  418e7b:	mul    BYTE PTR [eax]
  418e7d:	inc    esi
  418e7e:	out    0xf1,eax
  418e80:	and    DWORD PTR [esi-0x19],eax
  418e83:	imul   esp,DWORD PTR [eax],0x46
  418e86:	out    0x38,eax
  418e88:	and    al,0x46
  418e8a:	out    0x6d,eax
  418e8c:	sbb    al,0x46
  418e8e:	out    0xf7,eax
  418e90:	sbb    DWORD PTR [esi-0x19],eax
  418e93:	sbb    ebx,DWORD PTR [eax]
  418e95:	inc    esi
  418e96:	out    0x33,eax
  418e98:	lods   al,BYTE PTR ds:[esi]
  418e99:	inc    ebp
  418e9a:	out    0x3e,eax
  418e9c:	mov    dl,0x45
  418e9e:	add    cl,ch
  418ea0:	dec    eax
  418ea1:	mov    ah,0x40
  418ea3:	jmp    0xe98243a7
  418ea8:	jnp    0x418e67
  418eaa:	inc    eax
  418eab:	jmp    0xe9824c92
  418eb0:	lods   al,BYTE PTR ds:[esi]
  418eb1:	scas   eax,DWORD PTR es:[edi]
  418eb2:	inc    eax
  418eb3:	jmp    0xe9823f8d
  418eb8:	outs   dx,DWORD PTR ds:[esi]
  418eb9:	mov    ebx,0xbbe9e940
  418ebe:	inc    eax
  418ebf:	jmp    0xe9419424
  418ec4:	pusha  
  418ec5:	add    eax,0x560e900
  418eca:	add    cl,ch
	...
  418ed8:	add    BYTE PTR [eax],al
  418eda:	add    BYTE PTR [eax+0x5],ah
  418edd:	add    cl,ch
  418edf:	pusha  
  418ee0:	add    eax,0x291fe900
  418ee5:	addr16 dec esp
  418ee7:	xchg   ecx,eax
  418ee8:	adc    DWORD PTR [eax],esp
  418eea:	xor    DWORD PTR [eax-0x681697ea],eax
  418ef0:	xor    DWORD PTR [edi],edi
  418ef2:	adc    eax,0x302b368c
  418ef7:	lods   al,BYTE PTR ds:[esi]
  418ef8:	xor    eax,0xec7b3b4d
  418efd:	dec    esp
  418efe:	and    ah,BYTE PTR [edi-0x1c]
  418f01:	arpl   WORD PTR [edi-0x169ce283],di
  418f07:	add    eax,0x5f2131e8
  418f0c:	adc    DWORD PTR [edx-0x4],esi
  418f0f:	inc    ebp
  418f10:	add    eax,0xe73b006d
  418f15:	popa   
  418f16:	enter  0x554,0x7
  418f1a:	lock or ecx,DWORD PTR gs:[ebx]
  418f1e:	jecxz  0x418f79
  418f20:	in     eax,0x39
  418f22:	mov    esi,0x20284d
  418f27:	xlat   BYTE PTR ds:[ebx]
  418f28:	or     DWORD PTR [eax],esp
  418f2a:	fs lahf 
  418f2c:	out    0x1f,eax
  418f2e:	or     DWORD PTR [edi-0x4c],ebx
  418f31:	sbb    eax,0x509a720
  418f36:	imul   ebp,esp,0xdf2006a3
  418f3c:	sti    
  418f3d:	fs jae 0x418f40
	...
  418f4c:	add    BYTE PTR [eax],al
  418f4e:	into   
  418f4f:	mov    ds:0x9e9a2006,eax
  418f54:	and    BYTE PTR cs:[ebx-0x1a98e25d],dl
  418f5b:	out    dx,eax
  418f5c:	push   0x20
  418f5e:	and    DWORD PTR [ebx+0xb0b756c],0x9
  418f65:	or     ch,BYTE PTR [edx-0x13]
  418f68:	pusha  
  418f69:	ins    BYTE PTR es:[edi],dx
  418f6a:	push   0xc
  418f6c:	and    BYTE PTR ds:0x1ffda14a,ah
  418f72:	pop    edx
  418f73:	lahf   
  418f74:	and    dh,BYTE PTR [ebx+0x68]
  418f77:	mov    eax,ds:0xa16a201d
  418f7c:	std    
  418f7d:	push   edx
  418f7e:	mov    ds:0x7f6c6bde,al
  418f83:	stc    
  418f84:	pusha  
  418f85:	arpl   WORD PTR [edi-0x3],bx
  418f88:	pusha  
  418f89:	inc    ecx
  418f8a:	dec    edx
  418f8b:	repnz addr16 gs data16 aad 0x2e
  418f91:	xor    ah,ah
  418f93:	fisubr WORD PTR [ebx+0x6c]
  418f96:	or     ah,al
  418f98:	ja     0x41900a
  418f9a:	data16 aam 0x71
  418f9d:	or     BYTE PTR gs:[ebp+0x15f7862],dl
  418fa4:	dec    edi
  418fa5:	sub    eax,0x2d32a65b
  418faa:	pop    ebx
  418fab:	mov    ecx,0xac63fffd
  418fb0:	add    DWORD PTR [eax],eax
	...
  418fbe:	add    BYTE PTR [eax],al
  418fc0:	add    BYTE PTR [eax+0x536b4ac1],dl
  418fc6:	leave  
  418fc7:	adc    esi,DWORD PTR [ecx+0x44]
  418fca:	(bad)  
  418fcb:	and    dh,BYTE PTR [esi+eax*2+0x7c]
  418fcf:	adc    esp,DWORD PTR [edi+0x4d]
  418fd2:	lds    ebp,FWORD PTR ds:0x1894463
  418fd8:	push   ecx
  418fd9:	ds push eax
  418fdb:	and    al,0x62
  418fdd:	adc    edi,DWORD PTR [edx+0x2a]
  418fe0:	jbe    0x41901c
  418fe2:	sbb    BYTE PTR [esi],ah
  418fe4:	gs push es
  418fe6:	lods   al,BYTE PTR ds:[esi]
  418fe7:	xor    al,0x63
  418fe9:	and    BYTE PTR [edx+eiz*1+0x6e],dh
  418fed:	add    al,0x89
  418fef:	dec    edi
  418ff0:	ins    DWORD PTR es:[edi],dx
  418ff1:	jne    0x3a55071e
  418ff7:	sub    esi,DWORD PTR [esi+0xa]
  418ffa:	dec    eax
  418ffb:	daa    
  418ffc:	gs push es
  418ffe:	lods   al,BYTE PTR ds:[esi]
  418fff:	xor    ah,BYTE PTR [ebx+0x20]
  419002:	cmp    ah,BYTE PTR [edi]
  419004:	pop    edi
  419005:	xlat   BYTE PTR ds:[ebx]
  419006:	dec    ecx
  419007:	cmp    BYTE PTR [ebp-0x38],ch
  41900a:	inc    ecx
  41900b:	cs push eax
  41900d:	rol    DWORD PTR [ebp+0x16],1
  419010:	addr16 mov bh,0x41
  419013:	and    eax,0x26db6363
  419018:	inc    edx
  419019:	ret    0x290b
  41901c:	jae    0x418fd1
  41901e:	fcom   QWORD PTR [ecx]
  419020:	lods   eax,DWORD PTR ds:[si]
  419022:	add    eax,0x6330
	...
  419033:	add    BYTE PTR [ecx+ecx*1-0x581aefc],al
  41903a:	es jno 0x418fd4
  41903d:	call   DWORD PTR [ecx]
  41903f:	arpl   WORD PTR [ebx-0x7589d366],si
  419045:	add    eax,0x207e28d3
  41904a:	out    0x32,eax
  41904c:	or     BYTE PTR [ebp+eax*8+0x22],0x71
  419051:	and    al,cl
  419053:	adc    al,BYTE PTR [eax+0x34]
  419056:	mov    esp,0x97244f2e
  41905b:	adc    DWORD PTR [edi+ecx*1-0x40],eax
  41905f:	das    
  419060:	inc    eax
  419061:	push   ds
  419062:	les    eax,FWORD PTR [ebx]
  419064:	adc    ah,BYTE PTR [eax]
  419066:	test   al,0x12
  419068:	xor    ch,BYTE PTR [esi+eax*4]
  41906b:	sub    eax,0x30801313
  419070:	add    al,0x13
  419072:	nop
  419073:	aaa    
  419074:	push   cs
  419075:	sub    cl,BYTE PTR [ebp+ebp*1+0x15901333]
  41907c:	add    al,0x29
  41907e:	mov    WORD PTR [esi],fs
  419080:	add    BYTE PTR ds:0x56303e7,al
  419086:	out    0x3,eax
  419088:	arpl   WORD PTR ds:0x56303e7,ax
  41908e:	out    0x3,eax
  419090:	arpl   WORD PTR ds:0x56303e7,ax
  419096:	out    0x3,eax
	...
  4190a4:	add    BYTE PTR [eax],al
  4190a6:	add    BYTE PTR [ebx+0x5],ah
  4190a9:	out    0x3,eax
  4190ab:	arpl   WORD PTR ds:0x56303e7,ax
  4190b1:	out    0x3,eax
  4190b3:	arpl   WORD PTR ds:0x56303e7,ax
  4190b9:	out    0x3,eax
  4190bb:	arpl   WORD PTR ds:0x56303e7,ax
  4190c1:	out    0x3,eax
  4190c3:	arpl   WORD PTR ds:0x56303e7,ax
  4190c9:	out    0x3,eax
  4190cb:	arpl   WORD PTR ds:0x560e900,ax
  4190d1:	add    cl,ch
  4190d3:	pusha  
  4190d4:	add    eax,0x560e900
  4190d9:	add    cl,ch
  4190db:	pusha  
  4190dc:	add    eax,0x560e900
  4190e1:	add    cl,ch
  4190e3:	pusha  
  4190e4:	add    eax,0x560e900
  4190e9:	add    cl,ch
  4190eb:	pusha  
  4190ec:	add    eax,0x560e900
  4190f1:	add    cl,ch
  4190f3:	pusha  
  4190f4:	add    eax,0x560e900
  4190f9:	add    cl,ch
  4190fb:	pusha  
  4190fc:	add    eax,0x560e900
  419101:	add    cl,ch
  419103:	pusha  
  419104:	add    eax,0x560e900
  419109:	add    cl,ch
	...
  419117:	add    BYTE PTR [eax],al
  419119:	add    BYTE PTR [eax+0x5],ah
  41911c:	add    cl,ch
  41911e:	pusha  
  41911f:	add    eax,0x560e900
  419124:	add    cl,ch
  419126:	pusha  
  419127:	add    eax,0x560e900
  41912c:	add    cl,ch
  41912e:	pusha  
  41912f:	add    eax,0x560e900
  419134:	add    cl,ch
  419136:	pusha  
  419137:	add    eax,0x560e900
  41913c:	add    cl,ch
  41913e:	pusha  
  41913f:	add    eax,0x560e900
  419144:	add    cl,ch
  419146:	pusha  
  419147:	add    eax,0x560e900
  41914c:	add    cl,ch
  41914e:	pusha  
  41914f:	add    eax,0x560e900
  419154:	add    BYTE PTR [eax],al
  419156:	or     cl,BYTE PTR [eax]
  419158:	add    BYTE PTR [eax],al
  41915a:	cli    
  41915b:	pop    es
  41915c:	add    BYTE PTR [eax],al
  41915e:	cli    
  41915f:	pop    es
  419160:	add    BYTE PTR [eax],al
  419162:	or     cl,BYTE PTR [eax]
  419164:	add    BYTE PTR [eax],al
  419166:	or     cl,BYTE PTR [eax]
  419168:	add    BYTE PTR [eax],al
  41916a:	cli    
  41916b:	pop    es
  41916c:	add    BYTE PTR [eax],al
  41916e:	cli    
  41916f:	pop    es
  419170:	add    BYTE PTR [eax],al
  419172:	retf   0x7
  419175:	add    dl,cl
  419177:	pop    es
  419178:	add    BYTE PTR [eax],al
  41917a:	mov    edx,0x7
	...
  41918b:	add    BYTE PTR [eax],al
  41918d:	mov    edx,0xca000007
  419192:	pop    es
  419193:	add    BYTE PTR [eax],al
  419195:	retf   0x7
  419198:	add    BYTE PTR [edx-0x45fffff9],bh
  41919e:	pop    es
  41919f:	add    BYTE PTR [eax],al
  4191a1:	mov    al,BYTE PTR [edi]
  4191a3:	add    BYTE PTR [eax],al
  4191a5:	mov    al,BYTE PTR [edi]
  4191a7:	add    BYTE PTR [eax],al
  4191a9:	jp     0x4191b2
  4191ab:	add    BYTE PTR [eax],al
  4191ad:	jp     0x4191b6
  4191af:	add    BYTE PTR [eax],al
  4191b1:	mov    al,BYTE PTR [edi]
  4191b3:	add    BYTE PTR [eax],al
  4191b5:	mov    al,BYTE PTR [edi]
  4191b7:	add    BYTE PTR [eax],al
  4191b9:	jp     0x4191c2
  4191bb:	add    BYTE PTR [eax],al
  4191bd:	jp     0x4191c6
  4191bf:	add    BYTE PTR [eax],al
  4191c1:	dec    edx
  4191c2:	pop    es
  4191c3:	add    BYTE PTR [eax],al
  4191c5:	dec    edx
  4191c6:	pop    es
  4191c7:	add    BYTE PTR [eax],al
  4191c9:	cmp    al,BYTE PTR [edi]
  4191cb:	add    BYTE PTR [eax],al
  4191cd:	cmp    al,BYTE PTR [edi]
  4191cf:	add    BYTE PTR [eax],al
  4191d1:	dec    edx
  4191d2:	pop    es
  4191d3:	add    BYTE PTR [eax],al
  4191d5:	dec    edx
  4191d6:	pop    es
  4191d7:	add    BYTE PTR [eax],al
  4191d9:	cmp    al,BYTE PTR [edi]
  4191db:	add    BYTE PTR [eax],al
  4191dd:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  4191e4:	add    BYTE PTR [ebx-0x64],ah
  4191e7:	add    DWORD PTR [eax],eax
  4191e9:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
	...
  419200:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  419207:	add    BYTE PTR [ebx-0x64],ah
  41920a:	add    DWORD PTR [eax],eax
  41920c:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  419213:	add    BYTE PTR [ebx-0x64],ah
  419216:	add    DWORD PTR [eax],eax
  419218:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  41921f:	add    BYTE PTR [ebx-0x64],ah
  419222:	add    DWORD PTR [eax],eax
  419224:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  41922b:	add    BYTE PTR [ebx-0x64],ah
  41922e:	add    DWORD PTR [eax],eax
  419230:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  419237:	add    BYTE PTR [ebx-0x64],ah
  41923a:	add    DWORD PTR [eax],eax
  41923c:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  419243:	add    BYTE PTR [ebx-0x63],ah
  419246:	out    0x42,al
  419248:	add    al,0x15
  41924a:	ins    DWORD PTR es:[edi],dx
  41924b:	retf   
  41924c:	je     0x419208
  41924e:	mov    eax,0x3039fbba
  419253:	xor    dh,BYTE PTR [ebx+0x15]
  419256:	ins    DWORD PTR es:[edi],dx
  419257:	retf   
  419258:	cmp    al,0x9d
  41925a:	out    0x42,al
  41925c:	mov    esp,0x6340041c
  419261:	cld    
  419262:	add    edx,DWORD PTR [eax]
	...
  419270:	add    BYTE PTR [eax],al
  419272:	add    BYTE PTR [ebx+0x5],ah
  419275:	out    dx,eax
  419276:	add    esp,DWORD PTR [edi+0x5]
  419279:	jmp    0xe7d3b681
  41927e:	add    esp,ebx
  419280:	add    al,0xe7
  419282:	add    esp,DWORD PTR [ebx+0x4303e705]
  419288:	add    eax,0x57303e7
  41928d:	out    0x3,eax
  41928f:	imul   eax,DWORD PTR ds:0x55f03e7,0xffffffe7
  419296:	add    esp,DWORD PTR [ecx+0x5]
  419299:	out    0x3,eax
  41929b:	in     al,0x91
  41929d:	out    0x83,eax
  41929f:	arpl   WORD PTR ds:0x56343e7,ax
  4192a5:	out    0xe3,eax
  4192a7:	int3   
  4192a8:	xchg   ecx,eax
  4192a9:	out    0xf3,eax
  4192ab:	les    edx,FWORD PTR [ecx+0x5630be7]
  4192b1:	out    0xff,eax
  4192b3:	mov    ah,0x91
  4192b5:	out    0x5,eax
  4192b7:	arpl   WORD PTR ds:0x56304e7,ax
  4192bd:	addr16 add al,0x63
  4192c0:	add    eax,0x56303a7
  4192c5:	mov    DWORD PTR [ebx],0x3d70563
  4192cb:	arpl   WORD PTR ds:0x56303df,ax
  4192d1:	jecxz  0x4192d6
  4192d3:	arpl   WORD PTR ds:0x3e9,ax
	...
  4192e5:	add    BYTE PTR [ebx+0x5],ah
  4192e8:	call   0xf46f5f0
  4192ed:	aam    0x84
  4192ef:	in     eax,0xee
  4192f1:	repz pop esp
  4192f3:	add    eax,0xe685d500
  4192f8:	fcomip st,st(4)
  4192fa:	pop    ebp
  4192fb:	push   es
  4192fc:	add    bl,dh
  4192fe:	push   ss
  4192ff:	fbld   TBYTE PTR [ecx]
  419301:	shr    DWORD PTR [esi],cl
  419303:	inc    DWORD PTR [ecx]
  419305:	loop   0x41931c
  419307:	fisub  WORD PTR [eax]
  419309:	fist   WORD PTR [edx]
  41930b:	jecxz  0x419332
  41930d:	not    DWORD PTR [edx]
  41930f:	add    eax,DWORD PTR [esi]
  419311:	int3   
  419312:	xor    ebx,esp
  419314:	and    ah,ah
  419316:	adc    edi,esp
  419318:	add    bh,BYTE PTR [ebp-0x2adc22ec]
  41931e:	or     al,0xfd
  419320:	add    edx,edx
  419322:	in     eax,dx
  419323:	std    
  419324:	add    al,ch
  419326:	or     WORD PTR [esi],ax
  419329:	icebp  
  41932a:	push   esi
  41932b:	add    DWORD PTR [esi],ecx
  41932d:	out    0xd7,al
  41932f:	cmc    
  419330:	adc    dh,dh
  419332:	xlat   BYTE PTR ds:[ebx]
  419333:	in     eax,dx
  419334:	sbb    esi,esp
  419336:	sar    dh,1
  419338:	adc    al,0xe9
  41933a:	les    eax,FWORD PTR [esi]
  41933c:	sbb    edi,esp
  41933e:	arpl   cx,di
  419340:	push   es
  419341:	xlat   BYTE PTR ds:[ebx]
  419342:	scas   al,BYTE PTR es:[edi]
  419343:	std    
  419344:	add    BYTE PTR [eax],al
  419346:	pusha  
  419347:	add    al,BYTE PTR [esi]
  419349:	add    eax,DWORD PTR [eax]
	...
  419357:	add    BYTE PTR [eax],al
  419359:	lods   al,BYTE PTR ds:[esi]
  41935a:	cld    
  41935b:	inc    al
  41935d:	mov    ch,0xf2
  41935f:	and    edi,DWORD PTR [edi-0x44db144e]
  419365:	test   al,dh
  419367:	sub    al,0xd2
  419369:	mov    al,0xea
  41936b:	xor    al,0xc8
  41936d:	lods   al,BYTE PTR ds:[esi]
  41936e:	(bad)  [esi]
  419370:	mov    eax,0xe91cec7d
  419375:	ins    BYTE PTR es:[edi],dx
  419376:	pop    DWORD PTR [eax]
  419378:	jmp    0xe94198dd
  41937d:	pusha  
  41937e:	nop
  41937f:	std    
  419380:	in     eax,0x54
  419382:	pop    DWORD PTR [eax]
  419384:	add    BYTE PTR [esi],bh
  419386:	add    al,0xfd
  419388:	add    BYTE PTR [esi],bh
  41938a:	nop
  41938b:	(bad)  
  41938c:	dec    DWORD PTR [esi+0x4]
  41938f:	add    BYTE PTR [eax],al
  419391:	dec    edx
  419392:	add    al,0xfd
  419394:	(bad)  
  419395:	cmp    dl,BYTE PTR [eax-0x6fc50003]
  41939b:	inc    BYTE PTR [eax]
  41939d:	push   cs
  41939e:	nop
  41939f:	inc    BYTE PTR [eax]
  4193a1:	or     dl,BYTE PTR [eax-0x70010003]
  4193a7:	std    
  4193a8:	add    dh,bh
  4193aa:	add    edi,ebp
  4193ac:	add    BYTE PTR [edx],cl
  4193ae:	add    al,0x0
  4193b0:	add    esi,edi
  4193b2:	add    eax,DWORD PTR [eax]
  4193b4:	add    dh,bh
  4193b6:	(bad)  
  4193b7:	std    
  4193b8:	(bad)  
  4193b9:	cli    
  4193ba:	(bad)  
  4193bb:	std    
	...
  4193cc:	retf   0xfd8f
  4193cf:	add    dl,cl
  4193d1:	(bad)  
  4193d2:	(bad)  
  4193d3:	(bad)  
  4193d4:	mov    edx,0xbafffe8f
  4193d9:	add    edi,ebp
  4193db:	add    dl,cl
  4193dd:	add    edi,ebp
  4193df:	add    BYTE PTR [esi-0x41ff0271],bh
  4193e5:	add    edi,ebp
  4193e7:	(bad)  
  4193e8:	mov    esi,0x8e010003
  4193ed:	add    eax,DWORD PTR [eax]
  4193ef:	add    DWORD PTR [esi+0x3],edi
  4193f2:	std    
  4193f3:	(bad)  
  4193f4:	jp     0x4193f9
  4193f6:	add    BYTE PTR [eax],al
  4193f8:	jle    0x419389
  4193fa:	std    
  4193fb:	dec    DWORD PTR [esi-0x75000171]
  419401:	add    eax,DWORD PTR [eax]
  419403:	add    DWORD PTR [edx+0x3],edi
  419406:	std    
  419407:	(bad)  
  419408:	jle    0x419399
  41940a:	inc    BYTE PTR [eax]
  41940c:	arpl   WORD PTR [eax-0x639cffff],sp
  419412:	add    edi,edi
  419414:	arpl   WORD PTR [ebp+edi*8+0x19c63fe],bx
  41941b:	add    BYTE PTR [edx-0x64],ah
  41941e:	add    DWORD PTR [eax],eax
  419420:	bound  ebx,QWORD PTR [ebp+edi*8+0x1a12cff]
  419427:	jmp    DWORD PTR [ebx-0x64]
  41942a:	add    edi,edi
  41942c:	sbb    al,0x9d
  41942e:	std    
  41942f:	inc    BYTE PTR [eax]
	...
  41943d:	add    BYTE PTR [eax],al
  41943f:	adc    al,0xa9
  419441:	add    DWORD PTR [eax],eax
  419443:	bound  ebx,QWORD PTR [ebp+edi*8+0x1a904ff]
  41944a:	add    BYTE PTR [ebx-0x60],ah
  41944d:	std    
  41944e:	jmp    DWORD PTR [ebx-0x58]
  419451:	std    
  419452:	(bad)  
  419453:	in     al,dx
  419454:	mov    al,ds:0xa863fefd
  419459:	add    edi,edi
  41945b:	fcomp  QWORD PTR [ecx+eax*1-0x2579c01]
  419462:	jmp    DWORD PTR [ebx-0x60]
  419465:	add    DWORD PTR [eax],eax
  419467:	bound  ebp,QWORD PTR [eax-0x5f430003]
  41946d:	std    
  41946e:	(bad)  
  41946f:	mov    ah,0x9c
  419471:	std    
  419472:	(bad)  
  419473:	arpl   WORD PTR [eax-0x635b0003],sp
  419479:	std    
  41947a:	jmp    DWORD PTR [ebx-0x64]
  41947d:	std    
  41947e:	jmp    DWORD PTR [ebx-0x64]
  419481:	add    DWORD PTR [eax],eax
  419483:	arpl   WORD PTR [eax-0x637b00ff],sp
  419489:	std    
  41948a:	(bad)  
  41948b:	jl     0x419429
  41948d:	add    DWORD PTR [eax],eax
  41948f:	arpl   WORD PTR [eax+0x563ff01],bp
  419495:	pop    es
  419496:	test   BYTE PTR [ebx-0x7b],dl
  419499:	out    0x83,eax
  41949b:	arpl   WORD PTR [ebp+0x56383e7],ax
  4194a1:	pop    es
  4194a2:	test   BYTE PTR [eax],al
	...
  4194b0:	add    BYTE PTR [eax],al
  4194b2:	jae    0x4194b9
  4194b4:	out    0x3,eax
  4194b6:	jae    0x4194bd
  4194b8:	pop    es
  4194b9:	add    al,0x63
  4194bb:	add    eax,0x85530407
  4194c0:	pop    es
  4194c1:	test   BYTE PTR [ebx-0x7b],ah
  4194c4:	mov    DWORD PTR [ebx],0x83c78563
  4194ca:	jae    0x419451
  4194cc:	out    0x83,eax
  4194ce:	jae    0x419455
  4194d0:	out    0x3,eax
  4194d2:	arpl   WORD PTR [ebp-0x7a9c7c19],ax
  4194d8:	out    0x3,eax
  4194da:	push   ebx
  4194db:	add    eax,0x56303c7
  4194e0:	mov    DWORD PTR [ebx],0x83e78553
  4194e6:	push   ebx
  4194e7:	add    eax,0x5730407
  4194ec:	pop    es
  4194ed:	test   BYTE PTR [ebx-0x7b],ah
  4194f0:	out    0x3,eax
  4194f2:	arpl   WORD PTR ds:0x856303e7,ax
  4194f8:	out    0x83,eax
  4194fa:	arpl   WORD PTR ds:0x5538407,ax
  419500:	out    0x3,eax
  419502:	push   ebx
  419503:	test   edi,eax
  419505:	add    edx,DWORD PTR [ebx+0x5]
  419508:	mov    DWORD PTR [ebx],0x3e78563
  41950e:	arpl   WORD PTR ds:0x57383e7,ax
  419514:	mov    DWORD PTR [ebx+0x0],0x0
  41951e:	add    BYTE PTR [eax],al
  419520:	add    BYTE PTR [eax],al
  419522:	add    BYTE PTR [eax],al
  419524:	add    BYTE PTR [ebx+0x5],ah
  419527:	out    0x83,eax
  419529:	push   ebx
  41952a:	test   DWORD PTR [eax],eax
  41952c:	jmp    0xc9c18a91
  419531:	loopne 0x419537
  419533:	add    cl,ch
  419535:	pusha  
  419536:	add    eax,0xf5e70900
  41953b:	dec    DWORD PTR [eax]
  41953d:	pop    edi
  41953e:	cmc    
  41953f:	jg     0x41952a
  419541:	pusha  
  419542:	cmc    
  419543:	dec    DWORD PTR [eax]
  419545:	fild   WORD PTR ds:0xf560e980
  41954b:	jg     0x419536
  41954d:	loopne 0x419544
  41954f:	jg     0x41953a
  419551:	loopne 0x419558
  419553:	add    cl,ch
  419555:	pusha  
  419556:	cmc    
  419557:	jg     0x419542
  419559:	loopne 0x419560
  41955b:	or     cl,0x60
  41955e:	add    eax,0xf5e0c900
  419563:	jg     0x41952e
  419565:	loopne 0x41955c
  419567:	dec    eax
  419569:	pusha  
  41956a:	add    eax,0x5e0e900
  41956f:	add    cl,ch
  419571:	pusha  
  419572:	add    eax,0x5df0980
  419577:	add    cl,ch
  419579:	loopne 0x419570
  41957b:	jg     0x419566
  41957d:	pusha  
  41957e:	cmc    
  41957f:	dec    DWORD PTR [eax]
  419581:	addr16 add eax,0xf55f0980
  419587:	dec    DWORD PTR [eax]
	...
  419595:	add    BYTE PTR [eax],al
  419597:	add    bh,ah
  419599:	add    eax,0x55f0980
  41959e:	or     BYTE PTR [ecx],0x67
  4195a1:	cmc    
  4195a2:	(bad)  
  4195a3:	call   0xe9418b88
  4195a8:	pusha  
  4195a9:	add    eax,0x5e0e900
  4195ae:	or     cl,0xe0
  4195b1:	add    eax,0x87a0000
  4195b6:	add    BYTE PTR [eax-0x7feff756],al
  4195bc:	stos   BYTE PTR es:[edi],al
  4195bd:	mov    BYTE PTR [eax],dl
  4195bf:	cmp    BYTE PTR [edx-0x78],0x10
  4195c3:	add    BYTE PTR [edx+0x6],dh
  4195c6:	add    BYTE PTR [eax],al
  4195c8:	dec    edx
  4195c9:	push   es
  4195ca:	add    cl,BYTE PTR [eax]
  4195cc:	dec    edx
  4195cd:	or     BYTE PTR [eax],al
  4195cf:	add    BYTE PTR [edx+0x8],al
  4195d2:	add    cl,BYTE PTR [eax]
  4195d4:	cmp    al,BYTE PTR [esi]
  4195d6:	add    BYTE PTR [eax],cl
  4195d8:	dec    edx
  4195d9:	or     BYTE PTR [eax],al
  4195db:	add    BYTE PTR [edx+0x6],al
  4195de:	add    al,BYTE PTR [eax]
  4195e0:	cmp    al,BYTE PTR [esi]
  4195e2:	add    BYTE PTR [eax],cl
  4195e4:	xor    cl,BYTE PTR [eax]
  4195e6:	add    al,BYTE PTR [eax]
  4195e8:	adc    cl,BYTE PTR [eax]
  4195ea:	add    BYTE PTR [eax],cl
  4195ec:	add    cl,BYTE PTR [eax]
  4195ee:	add    BYTE PTR [eax],cl
  4195f0:	cli    
  4195f1:	pop    es
  4195f2:	add    al,BYTE PTR [eax]
  4195f4:	adc    al,BYTE PTR [esi]
  4195f6:	add    cl,BYTE PTR [eax]
  4195f8:	repnz pop es
  4195fa:	add    al,BYTE PTR [eax]
	...
  419608:	add    BYTE PTR [eax],al
  41960a:	add    BYTE PTR [edx],cl
  41960c:	or     BYTE PTR [edx],al
  41960e:	or     BYTE PTR [edx],al
  419610:	push   es
  419611:	add    BYTE PTR [eax],al
  419613:	cli    
  419614:	pop    es
  419615:	add    BYTE PTR [eax],cl
  419617:	rol    BYTE PTR [edi],cl
  419619:	add    BYTE PTR [eax],al
  41961b:	retf   0x205
  41961e:	or     BYTE PTR [edx-0x45fffffb],bh
  419624:	add    eax,0x7ca0002
  419629:	add    cl,BYTE PTR [eax]
  41962b:	ret    0x207
  41962e:	or     dl,al
  419630:	add    eax,0x5b20002
  419635:	add    BYTE PTR [eax],cl
  419637:	mov    al,BYTE PTR ds:0x9e630002
  41963d:	add    DWORD PTR [edx],eax
  41963f:	arpl   WORD PTR [esi-0x69a40001],sp
  419645:	add    DWORD PTR [eax],eax
  419647:	arpl   WORD PTR [esi-0x6194fe01],dx
  41964d:	(bad)  
  41964e:	jmp    DWORD PTR [ebx-0x62]
  419651:	add    DWORD PTR [eax],eax
  419653:	pop    ebx
  419654:	sahf   
  419655:	inc    DWORD PTR [ecx]
  419657:	imul   ebx,DWORD PTR [ecx+eax*1+0x1a46b00],0x2
  41965f:	arpl   WORD PTR [edi+edi*8+0x19c63ff],sp
  419666:	add    ah,BYTE PTR [ebx-0x64]
  419669:	inc    DWORD PTR [ecx]
  41966b:	imul   ebx,DWORD PTR [edi+edi*8+0xff],0x0
	...
  41967b:	add    BYTE PTR [eax],al
  41967d:	add    BYTE PTR [ebx-0x64],bl
  419680:	add    DWORD PTR [eax],eax
  419682:	arpl   WORD PTR [edi+edi*8+0x19463ff],bx
  419689:	add    ah,BYTE PTR [ebx-0x5c]
  41968c:	inc    DWORD PTR [ecx]
  41968e:	pop    ebx
  41968f:	pushf  
  419690:	(bad)  
  419691:	call   FWORD PTR [ebx-0x6c]
  419694:	add    DWORD PTR [eax],eax
  419696:	imul   ebx,DWORD PTR [edi+edi*8+0x19c63ff],0x0
  41969e:	arpl   WORD PTR [ecx+eax*1-0x6ba4fe],sp
  4196a5:	jmp    FWORD PTR [ebx-0x64]
  4196a8:	add    DWORD PTR [edx],eax
  4196aa:	arpl   WORD PTR [ecx+eax*1-0x5ba500],bx
  4196b1:	add    DWORD PTR [ebx-0x6c],ebx
  4196b4:	add    DWORD PTR [eax],eax
  4196b6:	arpl   WORD PTR [edi+edi*8-0x639cff],dx
  4196bd:	add    DWORD PTR [ebx-0x5c],esp
  4196c0:	add    DWORD PTR [eax],eax
  4196c2:	pop    ebx
  4196c3:	add    eax,0xfd6103e7
  4196c8:	out    dx,al
  4196c9:	add    DWORD PTR [ebx-0x3],esp
  4196cc:	fiadd  WORD PTR [ecx]
  4196ce:	arpl   WORD PTR ds:0xfd6103e7,ax
  4196d4:	out    dx,al
  4196d5:	add    DWORD PTR [ecx+0x5],esp
  4196d8:	out    dx,eax
  4196d9:	add    esp,DWORD PTR [ebx+0x5]
  4196dc:	fild   WORD PTR [ebx]
  4196de:	popa   
  4196df:	std    
  4196e0:	out    0x1,al
	...
  4196ee:	add    BYTE PTR [eax],al
  4196f0:	add    BYTE PTR [ecx+0x5],ah
  4196f3:	call   0x684773db
  4196f8:	in     al,0x54
  4196fa:	mov    ch,BYTE PTR [eax-0x1c]
  4196fd:	dec    esp
  4196fe:	mov    ah,BYTE PTR [edi+0x4]
  419701:	arpl   WORD PTR ds:0x5bce467,ax
  419707:	push   0xe804e304
  41970c:	add    esp,ebx
  41970e:	add    al,0xe8
  419710:	jecxz  0x419736
  419712:	mov    ah,bh
  419714:	add    esp,DWORD PTR [ebx+0x5]
  419717:	out    0xe3,eax
  419719:	xchg   esp,eax
  41971a:	add    eax,0x58ce3e7
  41971f:	push   0x680584e4
  419724:	add    al,0x63
  419726:	add    eax,0x56303e7
  41972b:	addr16 add al,0xe3
  41972e:	add    al,0xe8
  419730:	add    esp,ebx
  419732:	add    al,0xe8
  419734:	add    esp,DWORD PTR [ebx+0x5]
  419737:	out    0xe3,eax
  419739:	aam    0x89
  41973b:	out    0x3,eax
  41973d:	jecxz  0x419743
  41973f:	call   0x6746dc27
  419744:	add    al,0x63
  419746:	add    eax,0x4e303e7
  41974b:	add    al,ch
  41974d:	ror    BYTE PTR [ecx-0x76409603],0xfd
  419754:	push   0x0
	...
  419761:	add    BYTE PTR [eax],al
  419763:	add    BYTE PTR [edi-0x7b],ah
  419766:	add    al,ch
  419768:	pusha  
  419769:	add    eax,0x89876900
  41976e:	std    
  41976f:	imul   ebx,DWORD PTR [edi-0x7b],0x8980e900
  419776:	std    
  419777:	imul   edi,DWORD PTR [edi+0x9],0x9876800
  41977e:	add    BYTE PTR [eax+0x5f],ch
  419781:	add    eax,0x85606900
  419786:	add    al,ch
  419788:	pusha  
  419789:	test   DWORD PTR [eax],eax
  41978b:	jmp    0x6841a0d0
  419790:	inc    eax
  419791:	or     DWORD PTR [eax],eax
  419793:	push   0xe9000560
  419798:	pusha  
  419799:	add    eax,0x560e900
  41979e:	add    cl,ch
  4197a0:	inc    eax
  4197a1:	or     DWORD PTR [eax],eax
  4197a3:	imul   eax,DWORD PTR [eax],0x6069fd89
  4197a9:	test   DWORD PTR [eax],eax
  4197ab:	push   0xe8008560
  4197b0:	pusha  
  4197b1:	add    eax,0x900e800
  4197b6:	add    BYTE PTR [eax+0x0],ch
  4197b9:	mov    ebp,edi
  4197bb:	push   0x69fd8900
  4197c0:	pusha  
  4197c1:	add    eax,0x8c06800
  4197c6:	add    BYTE PTR [eax+0x0],ch
	...
  4197d5:	add    BYTE PTR [eax],al
  4197d7:	pusha  
  4197d8:	add    eax,0x560e800
  4197dd:	add    cl,ch
  4197df:	ror    BYTE PTR [eax+0x4cb00fd],0x80
  4197e6:	add    bl,cl
  4197e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197e9:	std    
  4197ea:	(bad)  
  4197eb:	cmp    ah,BYTE PTR [ebp+edi*2-0x7ffbc500]
  4197f2:	add    BYTE PTR [ebx+0xafffda4],cl
  4197f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197f9:	std    
  4197fa:	(bad)  
  4197fb:	jp     0x419801
  4197fd:	add    BYTE PTR [eax],0x7b
  419800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419801:	jge    0x419803
  419803:	or     al,BYTE PTR [eax+eax*1]
  419806:	add    BYTE PTR [edx+0x7a008004],cl
  41980c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41980d:	std    
  41980e:	(bad)  
  41980f:	cli    
  419810:	mov    ds:0x34a007d,eax
  419815:	add    BYTE PTR [eax],al
  419817:	dec    edx
  419818:	add    ecx,DWORD PTR [eax]
  41981a:	add    bh,BYTE PTR [edx]
  41981c:	add    al,0x8
  41981e:	add    bh,BYTE PTR [edx]
  419820:	add    eax,DWORD PTR [eax]
  419822:	inc    edx
  419823:	dec    edx
  419824:	add    al,0x8
  419826:	add    BYTE PTR [edx+0x3],cl
  419829:	add    BYTE PTR [eax],al
  41982b:	cmp    al,BYTE PTR [eax+eax*1]
  41982e:	inc    eax
  41982f:	cmp    al,BYTE PTR [eax+ecx*1]
  419832:	add    cl,BYTE PTR [edx]
  419834:	add    ecx,DWORD PTR [eax]
  419836:	inc    eax
  419837:	or     al,BYTE PTR [eax+ecx*1]
	...
  41984a:	cli    
  41984b:	add    al,BYTE PTR [eax]
  41984d:	add    bh,dl
  41984f:	add    cl,BYTE PTR [eax]
  419851:	inc    eax
  419852:	or     al,BYTE PTR [ebx]
  419854:	add    BYTE PTR [edx+0xa],al
  419857:	add    al,0x8
  419859:	inc    edx
  41985a:	cli    
  41985b:	add    cl,BYTE PTR [eax]
  41985d:	add    dl,bh
  41985f:	add    eax,DWORD PTR [eax]
  419861:	inc    eax
  419862:	retf   0x3
  419865:	add    cl,dl
  419867:	add    ecx,DWORD PTR [eax]
  419869:	inc    eax
  41986a:	arpl   WORD PTR [esi-0x61dcf7ff],bx
  419870:	add    DWORD PTR [eax],eax
  419872:	arpl   WORD PTR [esi-0x61dcfffe],bx
  419878:	add    cl,BYTE PTR [eax]
  41987a:	and    DWORD PTR [esi-0x61def7fe],ebx
  419880:	add    al,BYTE PTR [eax]
  419882:	popa   
  419883:	sahf   
  419884:	add    DWORD PTR [eax],ecx
  419886:	and    DWORD PTR [esi-0x61dcfffe],ebx
  41988c:	add    DWORD PTR [eax],eax
  41988e:	arpl   WORD PTR [esi-0x61deffff],bx
  419894:	add    cl,BYTE PTR [eax]
  419896:	popa   
  419897:	sahf   
  419898:	add    DWORD PTR [eax],eax
  41989a:	popa   
  41989b:	sahf   
  41989c:	add    DWORD PTR [eax],eax
  41989e:	and    DWORD PTR [esi-0x639cf7fe],ebx
  4198a4:	add    DWORD PTR [eax],ecx
  4198a6:	arpl   WORD PTR [edx+eax*1+0x29ca100],bx
	...
  4198bd:	arpl   WORD PTR [ecx+eax*1+0x19c6100],bx
  4198c4:	add    BYTE PTR [ebx+0x6108019c],ah
  4198ca:	pushf  
  4198cb:	add    al,BYTE PTR [eax]
  4198cd:	mov    eax,ds:0xa308029c
  4198d2:	pushf  
  4198d3:	add    al,BYTE PTR [eax]
  4198d5:	popa   
  4198d6:	pushf  
  4198d7:	add    DWORD PTR [eax],eax
  4198d9:	mov    ds:0xa108019c,eax
  4198de:	pushf  
  4198df:	add    cl,BYTE PTR [eax]
  4198e1:	popa   
  4198e2:	pushf  
  4198e3:	add    cl,BYTE PTR [eax]
  4198e5:	mov    ds:0x6300029c,eax
  4198ea:	pushf  
  4198eb:	add    DWORD PTR [eax],eax
  4198ed:	popa   
  4198ee:	pushf  
  4198ef:	add    DWORD PTR [eax],ecx
  4198f1:	and    DWORD PTR ds:0x436b02e7,eax
  4198f7:	out    0x2,eax
  4198f9:	pop    ebx
  4198fa:	add    eax,0x436303e7
  4198ff:	out    0x2,eax
  419901:	imul   eax,DWORD PTR [ebx-0x19],0x3
  419905:	imul   eax,DWORD PTR [ebx],0xffffffe7
  419908:	add    esp,DWORD PTR [ebx+0x5]
  41990b:	out    0x3,eax
  41990d:	pop    ebx
  41990e:	inc    ebp
  41990f:	out    0x3,eax
  419911:	arpl   WORD PTR [ebx-0x19],ax
  419914:	add    ch,BYTE PTR [ebx+0x5]
  419917:	out    0x2,eax
  419919:	arpl   WORD PTR [ebx],ax
  41991b:	out    0x2,eax
  41991d:	arpl   WORD PTR [ebp-0x19],ax
  419920:	add    eax,DWORD PTR [eax]
	...
  41992e:	add    BYTE PTR [eax],al
  419930:	imul   eax,DWORD PTR ds:0x56303e7,0xffffffe7
  419937:	add    ebx,DWORD PTR [ebx+0x45]
  41993a:	out    0x2,eax
  41993c:	pop    ebx
  41993d:	add    esp,edi
  41993f:	add    ah,BYTE PTR [ebx+0x45]
  419942:	test   DWORD PTR [ebx],0x3e6e563
  419948:	mov    ds:0x6343e6e5,eax
  41994d:	add    eax,0xe5a343f7
  419952:	out    0x3,al
  419954:	mov    ds:0x6303d6e5,eax
  419959:	add    eax,0xe5a343d7
  41995e:	out    0x3,al
  419960:	mov    ds:0x6343e705,eax
  419965:	in     eax,0xf6
  419967:	inc    ebx
  419968:	mov    ds:0xa303e705,eax
  41996d:	add    eax,0xe56303f7
  419972:	(bad)  
  419973:	add    esp,DWORD PTR [ebx+0x6343e705]
  419979:	in     eax,0xff
  41997b:	call   0xd9619ee0
  419980:	and    BYTE PTR ds:0x560e900,al
  419986:	add    cl,bh
  419988:	pusha  
  419989:	inc    ebp
  41998a:	add    cl,bh
  41998c:	and    BYTE PTR ds:0x520e920,al
  419992:	add    cl,ch
	...
  4199a0:	add    BYTE PTR [eax],al
  4199a2:	add    BYTE PTR [eax],ah
  4199a4:	inc    ebp
  4199a5:	add    cl,bl
  4199a7:	and    BYTE PTR ds:0x560d920,al
  4199ad:	add    cl,bl
  4199af:	pusha  
  4199b0:	inc    ebp
  4199b1:	and    cl,bh
  4199b3:	pusha  
  4199b4:	inc    ebp
  4199b5:	and    cl,ch
  4199b7:	pusha  
  4199b8:	add    eax,0x4520f900
  4199bd:	add    cl,ch
  4199bf:	and    BYTE PTR [ebp+0x20],al
  4199c2:	fldenv [eax]
  4199c4:	add    eax,0x4520e900
  4199c9:	add    cl,ch
  4199cb:	and    BYTE PTR [ebp+0x20],al
  4199ce:	jmp    0xe9619f33
  4199d3:	mov    al,ds:0x60f92005
  4199d8:	add    eax,0xc560f900
  4199dd:	pop    ds
  4199de:	jmp    0xd9415f83
  4199e3:	mov    al,ds:0x60e91fc5
  4199e8:	(bad)  
  4199eb:	mov    al,ds:0x60d90005
  4199f0:	add    eax,0xc560e920
  4199f5:	(bad)  
  4199f6:	call   0xe9619f9b
  4199fb:	pusha  
  4199fc:	add    eax,0x5a0f920
  419a01:	add    BYTE PTR [eax],al
  419a03:	sbb    cl,BYTE PTR [ecx]
  419a05:	add    BYTE PTR [eax],ah
	...
  419a13:	add    BYTE PTR [eax],al
  419a15:	add    BYTE PTR [edx],cl
  419a17:	leave  
  419a18:	aas    
  419a19:	and    dl,bh
  419a1b:	enter  0x3f,0xca
  419a1f:	or     BYTE PTR [eax+0x20],al
  419a22:	fcmove st,st(0)
  419a24:	aas    
  419a25:	add    BYTE PTR [edx-0x45dfc038],bh
  419a2b:	or     BYTE PTR [eax],al
  419a2d:	add    BYTE PTR [edx-0x65dfbff8],bh
  419a33:	or     BYTE PTR [eax],al
  419a35:	add    BYTE PTR [edx-0x45000038],bh
  419a3b:	or     BYTE PTR [eax+0x20],al
  419a3e:	mov    edx,0x8a003fc8
  419a43:	enter  0xffff,0x8a
  419a47:	or     BYTE PTR [eax+0x0],al
  419a4a:	mov    cl,al
  419a4c:	call   FWORD PTR [edi]
  419a4e:	mov    cl,BYTE PTR [eax]
  419a50:	add    BYTE PTR [eax],al
  419a52:	mov    cl,al
  419a54:	aas    
  419a55:	and    BYTE PTR [edx+0x8],bh
  419a58:	add    BYTE PTR [eax],ah
  419a5a:	mov    cl,BYTE PTR [eax]
  419a5c:	inc    eax
  419a5d:	add    BYTE PTR [edx],bh
  419a5f:	enter  0x1fff,0x4a
  419a63:	or     BYTE PTR [eax],ah
  419a65:	add    BYTE PTR [eax],bh
  419a67:	or     BYTE PTR [eax],ah
  419a69:	add    al,0x38
  419a6b:	cmp    ch,0x3
  419a6e:	dec    edx
  419a6f:	or     BYTE PTR [eax],al
  419a71:	add    BYTE PTR [edx-0x80],cl
  419a74:	std    
  419a75:	(bad)  
  419a76:	cmp    BYTE PTR [eax+0x3fd],al
	...
  419a88:	add    BYTE PTR [eax],bh
  419a8a:	sbb    BYTE PTR ds:0x1d800a00,0x4
  419a91:	or     BYTE PTR [eax+0x7fa041d],al
  419a97:	and    BYTE PTR [eax],al
  419a99:	arpl   WORD PTR [esi+0x1],bp
  419a9c:	add    BYTE PTR [ebx+0x70],ah
  419a9f:	add    DWORD PTR [eax],eax
  419aa1:	pop    edi
  419aa2:	jo     0x419aa5
  419aa4:	add    BYTE PTR [ebx+0x6e],ah
  419aa7:	add    DWORD PTR [eax],eax
  419aa9:	pop    edi
  419aaa:	jo     0x419aad
  419aac:	and    BYTE PTR [edi+0x70],ah
  419aaf:	stc    
  419ab0:	call   esp
  419ab2:	ins    DWORD PTR es:[edi],dx
  419ab3:	stc    
  419ab4:	jmp    DWORD PTR [eax+0x70]
  419ab7:	stc    
  419ab8:	pop    ds
  419ab9:	arpl   WORD PTR [eax+0x1],si
  419abc:	and    BYTE PTR [ebx+0x6e],ah
  419abf:	stc    
  419ac0:	jmp    DWORD PTR [eax+0x70]
  419ac3:	add    DWORD PTR [eax],eax
  419ac5:	outs   dx,BYTE PTR ds:[si]
  419ac7:	add    DWORD PTR [eax],esp
  419ac9:	pop    edi
  419aca:	outs   dx,BYTE PTR ds:[esi]
  419acb:	stc    
  419acc:	pop    ds
  419acd:	addr16 jo 0x419ad1
  419ad0:	and    BYTE PTR [ebx+0x6e],ah
  419ad3:	add    DWORD PTR [eax],esp
  419ad5:	outs   dx,BYTE PTR ds:[si]
  419ad7:	stc    
  419ad8:	inc    DWORD PTR [edi+ebp*2+0x6f7cfff9]
  419adf:	stc    
  419ae0:	pop    ds
  419ae1:	pop    edi
  419ae2:	outs   dx,BYTE PTR ds:[esi]
  419ae3:	stc    
  419ae4:	pop    ds
  419ae5:	arpl   WORD PTR [eax+0x1],si
  419ae8:	add    BYTE PTR [ebx+0x6e],ah
  419aeb:	add    DWORD PTR [eax],eax
	...
  419af9:	add    BYTE PTR [eax],al
  419afb:	add    BYTE PTR [edi+0x6c],ah
  419afe:	stc    
  419aff:	pop    ds
  419b00:	arpl   WORD PTR [ecx+eax*1+0x0],bp
  419b04:	ins    BYTE PTR es:[di],dx
  419b06:	stc    
  419b07:	pop    ds
  419b08:	arpl   WORD PTR [ecx+eax*1+0x20],bp
  419b0c:	arpl   WORD PTR [esi-0x7],bp
  419b0f:	jmp    DWORD PTR [eax+0x6e]
  419b12:	stc    
  419b13:	jmp    DWORD PTR [eax+0x6e]
  419b16:	add    DWORD PTR [eax],esp
  419b18:	pop    edi
  419b19:	outs   dx,BYTE PTR ds:[esi]
  419b1a:	add    DWORD PTR [eax],esp
  419b1c:	outs   dx,BYTE PTR ds:[si]
  419b1e:	add    DWORD PTR [eax],eax
  419b20:	arpl   WORD PTR ds:0x54303e9,ax
  419b26:	out    0x3,eax
  419b28:	arpl   WORD PTR [ecx],cx
  419b2a:	out    0xfb,eax
  419b2c:	cld    
  419b2d:	push   es
  419b2e:	out    0x3,eax
  419b30:	inc    ebx
  419b31:	add    eax,0x94cfbe7
  419b36:	jmp    0xe9c48036
  419b3b:	sti    
  419b3c:	jl     0x419b43
  419b3e:	out    0xfb,eax
  419b40:	je     0x419b4b
  419b42:	jmp    0xe9c46842
  419b47:	add    esp,DWORD PTR [ebx+0x9]
  419b4a:	jmp    0xe74af84a
  419b4f:	add    eax,DWORD PTR [ebx+0x4cfbe709]
  419b55:	add    eax,0x56303e7
  419b5a:	jmp    0xe946fe62
  419b5f:	sti    
	...
  419b6c:	add    BYTE PTR [eax],al
  419b6e:	add    BYTE PTR [ecx+ecx*1-0x19],dh
  419b72:	add    esp,DWORD PTR [ebx+0x5]
  419b75:	jmp    0xe7470075
  419b7a:	add    eax,DWORD PTR [ebx+0x9]
  419b7d:	out    0xfb,eax
  419b7f:	je     0x419b03
  419b81:	jmp    0xe74afe89
  419b86:	sti    
  419b87:	fs push es
  419b89:	out    0xfb,eax
  419b8b:	pop    esp
  419b8c:	sub    cl,0x3
  419b8f:	add    DWORD PTR ds:0x124cf427,0xffffffe7
  419b96:	repz inc esp
  419b98:	and    bh,0x3
  419b9b:	addr16 add eax,0x1560f427
  419ba1:	out    0x3,eax
  419ba3:	arpl   WORD PTR ds:0x1224f427,dx
  419ba9:	add    BYTE PTR [ecx],ch
  419bab:	addr16 add eax,0x560e900
  419bb1:	adc    BYTE PTR [ecx],ch
  419bb3:	or     DWORD PTR [bx+si],eax
  419bb6:	jmp    0x2951a51b
  419bbb:	test   DWORD PTR ds:0x5f0e910,0x5f0e900
  419bc5:	adc    BYTE PTR [ecx],ch
  419bc7:	out    dx,eax
  419bc8:	add    eax,0x81d0e900
  419bcd:	std    
  419bce:	sub    DWORD PTR [edi+0x5],ebx
  419bd1:	add    cl,ch
	...
  419bdf:	add    BYTE PTR [eax],al
  419be1:	add    BYTE PTR [eax+0x9],ah
  419be4:	adc    BYTE PTR [ecx-0x16effaa0],ch
  419bea:	mov    al,0x81
  419bec:	or     eax,0xfd81b0a9
  419bf1:	jmp    0xa941a1a6
  419bf6:	pusha  
  419bf7:	or     DWORD PTR [eax],eax
  419bf9:	test   eax,0xe9100960
  419bfe:	nop
  419bff:	add    eax,0x8190a910
  419c04:	std    
  419c05:	jmp    0xe941a16a
  419c0a:	pusha  
  419c0b:	add    eax,0x960a900
  419c10:	adc    BYTE PTR [ecx-0x16effaa0],ch
  419c16:	jo     0x419b99
  419c18:	or     eax,0x550a9
  419c1d:	jmp    0x2941a582
  419c22:	push   edi
  419c23:	add    eax,0x960e900
  419c28:	add    cl,ch
  419c2a:	xor    BYTE PTR ds:0x8130e910,al
  419c30:	std    
  419c31:	add    BYTE PTR [edx+0x9],bh
  419c34:	add    BYTE PTR [eax],al
  419c36:	jp     0x419c41
  419c38:	add    al,0x10
  419c3a:	or     dh,BYTE PTR [ebp-0x3]
  419c3d:	dec    DWORD PTR [edx+0x79]
  419c40:	add    DWORD PTR [eax],eax
  419c42:	cli    
  419c43:	je     0x419c42
  419c45:	sldt   WORD PTR [eax]
	...
  419c54:	add    BYTE PTR [edx],bh
  419c56:	or     DWORD PTR [eax],eax
  419c58:	add    BYTE PTR [edx+0x9],cl
  419c5b:	add    BYTE PTR [eax],dl
  419c5d:	or     al,BYTE PTR ds:0x93a1004
  419c63:	add    al,0x10
  419c65:	cli    
  419c66:	add    al,0x0
  419c68:	adc    dl,cl
  419c6a:	add    al,0x4
  419c6c:	add    BYTE PTR [edx-0x45f00287],cl
  419c72:	add    al,0x0
  419c74:	add    dl,bh
  419c76:	je     0x419c79
  419c78:	adc    BYTE PTR [edx],cl
  419c7a:	add    eax,0x50a0004
  419c7f:	add    BYTE PTR [eax],dl
  419c81:	mov    edx,0xba100404
  419c86:	je     0x419c85
  419c88:	bswap  edx
  419c8a:	je     0x419c89
  419c8c:	jp     0xba419c96
  419c92:	je     0x419c95
  419c94:	adc    BYTE PTR [edx+0x74],bh
  419c97:	add    DWORD PTR [eax],eax
  419c99:	mov    dh,BYTE PTR [ecx+eax*1+0x0]
  419c9d:	retf   0xfd74
  419ca0:	(bad)  
  419ca1:	mov    edx,0xbafffd74
  419ca6:	add    al,0x4
  419ca8:	add    BYTE PTR [edx+0x4],cl
  419cab:	add    BYTE PTR [eax],dl
  419cad:	dec    edx
  419cae:	je     0x419cb1
  419cb0:	adc    BYTE PTR [edx],bl
  419cb2:	ss std 
  419cb4:	(bad)  
  419cb5:	cmp    al,BYTE PTR [eax+eax*1]
	...
  419cc8:	arpl   WORD PTR [esi+0x1],bp
  419ccb:	add    BYTE PTR [ebx-0x2],ah
  419cce:	sub    edi,edi
  419cd0:	sub    al,0xda
  419cd2:	sub    bh,bh
  419cd4:	and    al,0xfa
  419cd6:	sub    edi,edi
  419cd8:	sbb    al,0x6e
  419cda:	add    DWORD PTR [eax],eax
  419cdc:	arpl   WORD PTR [esi+0x1],bp
  419cdf:	add    BYTE PTR [ebx+0x7c],ah
  419ce2:	sub    bh,bh
  419ce4:	add    al,0x2e
  419ce6:	cs (bad) 
  419ce8:	cld    
  419ce9:	mov    ebp,0x6df4ff2c
  419cee:	add    DWORD PTR [eax],eax
  419cf0:	arpl   WORD PTR [esi+0x1],bp
  419cf3:	add    BYTE PTR [ebx+0x56],ah
  419cf6:	sub    bh,bh
  419cf8:	fcomp  QWORD PTR [ecx]
  419cfa:	cs call esp
  419cfd:	xchg   ebp,eax
  419cfe:	sub    al,0xff
  419d00:	int3   
  419d01:	ins    DWORD PTR es:[edi],dx
  419d02:	add    DWORD PTR [eax],eax
  419d04:	arpl   WORD PTR [esi+0x1],bp
  419d07:	add    BYTE PTR [ebx+0x3a],ah
  419d0a:	daa    
  419d0b:	push   DWORD PTR [ecx+ecx*2+0x71acff2b]
  419d12:	sub    bh,bh
  419d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d15:	ins    DWORD PTR es:[edi],dx
  419d16:	add    DWORD PTR [eax],eax
  419d18:	arpl   WORD PTR [esi+0x1],bp
  419d1b:	add    BYTE PTR [ebx+0x34],ah
  419d1e:	daa    
  419d1f:	dec    DWORD PTR [ebp+edi*8+0x7184ff2d]
  419d26:	sub    bh,bh
  419d28:	jl     0x419d97
  419d2a:	add    DWORD PTR [eax],eax
	...
  419d38:	add    BYTE PTR [eax],al
  419d3a:	add    BYTE PTR [ebx+0x6e],ah
  419d3d:	add    DWORD PTR [eax],eax
  419d3f:	arpl   WORD PTR [esi-0x1a9b00df],di
  419d45:	sub    eax,0x2a555cff
  419d4a:	call   DWORD PTR [ebp+ebp*2+0x1]
  419d4e:	add    BYTE PTR [ebx+0x5],ah
  419d51:	out    0x3,eax
  419d53:	arpl   WORD PTR ds:0x7f3c2369,ax
  419d59:	mov    ebp,DWORD PTR ds:0x2b137f34
  419d5f:	sub    al,0x7f
  419d61:	out    0x3,eax
  419d63:	arpl   WORD PTR ds:0x56303e7,ax
  419d69:	jmp    0xa7c0b190
  419d6e:	sub    eax,0x2b077f0c
  419d73:	add    al,0x7f
  419d75:	out    0x3,eax
  419d77:	arpl   WORD PTR ds:0x56303e7,ax
  419d7d:	aad    0x22
  419d7f:	in     al,dx
  419d80:	jle    0x419d15
  419d82:	sub    eax,0x3e77ee4
  419d87:	arpl   WORD PTR ds:0x56303e7,ax
  419d8d:	out    0x3,eax
  419d8f:	arpl   WORD PTR ds:0x56303e7,ax
  419d95:	out    0x3,eax
  419d97:	arpl   WORD PTR ds:0x7eb42d4f,ax
  419d9d:	in     eax,0x2c
	...
  419dab:	add    BYTE PTR [eax],al
  419dad:	add    BYTE PTR [esi+edi*2+0x7ea42cd9],ch
  419db4:	pop    es
  419db5:	sub    eax,0x2d037e9c
  419dba:	xchg   esp,eax
  419dbb:	jle    0x419dac
  419dbd:	sub    al,0x8c
  419dbf:	jle    0x419d6e
  419dc1:	sub    al,0x84
  419dc3:	jle    0x419d7a
  419dc5:	sub    al,0x7c
  419dc7:	jle    0x419d52
  419dc9:	sub    al,0x74
  419dcb:	jle    0x419d64
  419dcd:	sub    al,0x6c
  419dcf:	jle    0x419d54
  419dd1:	sub    al,0x64
  419dd3:	jle    0x419e44
  419dd5:	sub    al,0x5c
  419dd7:	jle    0x419dd9
  419dd9:	push   edi
  419dda:	xchg   DWORD PTR [esi-0x3],edi
  419ddd:	xor    edi,DWORD PTR [edi+0x7e]
  419de0:	std    
  419de1:	mov    cl,0x78
  419de3:	jle    0x419de2
  419de5:	mov    edi,0xc7fd7e88
  419dea:	mov    BYTE PTR [esi-0x3],bh
  419ded:	jmp    0xda3f1c76
  419df2:	jl     0x419e72
  419df4:	std    
  419df5:	or     ecx,DWORD PTR [ebx+0x7e]
  419df8:	std    
  419df9:	sti    
  419dfa:	cmp    al,0x7e
  419dfc:	std    
  419dfd:	daa    
  419dfe:	cmp    edi,DWORD PTR [esi-0x3]
  419e01:	cmp    eax,0x11fd7e3b
  419e06:	dec    ebx
  419e07:	jle    0x419e06
  419e09:	pop    ss
  419e0a:	dec    ebx
  419e0b:	jle    0x419e0a
  419e0d:	jns    0x419e4a
  419e0f:	jle    0x419e0e
  419e11:	add    BYTE PTR gs:[eax],al
	...
  419e20:	add    BYTE PTR [ebx],bh
  419e22:	jle    0x419e21
  419e24:	dec    ebp
  419e25:	mov    edi,DWORD PTR [esi-0x3]
  419e28:	xor    DWORD PTR [ebx+0x7b9dfd7e],ecx
  419e2e:	jle    0x419e2d
  419e30:	inc    ebp
  419e31:	jnp    0x419eb1
  419e33:	std    
  419e34:	dec    edi
  419e35:	mov    edi,DWORD PTR [esi-0x3]
  419e38:	push   edi
  419e39:	mov    edi,DWORD PTR [esi-0x3]
  419e3c:	idiv   DWORD PTR [ebx+0x7e]
  419e3f:	std    
  419e40:	sti    
  419e41:	jnp    0x419ec1
  419e43:	std    
  419e44:	mov    bl,0x4b
  419e46:	jle    0x419e45
  419e48:	lahf   
  419e49:	dec    ebx
  419e4a:	jle    0x419e49
  419e4c:	mov    cl,0x3b
  419e4e:	jle    0x419e4d
  419e50:	jns    0x419e8c
  419e52:	jle    0x419e51
  419e54:	push   ecx
  419e55:	dec    edx
  419e56:	jle    0x419e55
  419e58:	pop    ebp
  419e59:	dec    edx
  419e5a:	jle    0x419e59
  419e5c:	and    edi,DWORD PTR [edx]
  419e5e:	jle    0x419e5d
  419e60:	add    BYTE PTR [eax+0x2c],al
  419e63:	std    
  419e64:	jmp    FWORD PTR [eax+0x2e]
  419e67:	std    
  419e68:	call   DWORD PTR [edx+0x2e]
  419e6b:	std    
  419e6c:	inc    DWORD PTR [edx+0x23]
  419e6f:	std    
  419e70:	call   DWORD PTR [esi+0x23]
  419e73:	std    
  419e74:	call   DWORD PTR [ebx+eiz*1-0x3]
  419e78:	inc    DWORD PTR [esi+0x76fffd23]
  419e7e:	and    edi,ebp
  419e80:	call   DWORD PTR [esi+0xfffd23]
	...
  419e92:	add    BYTE PTR [eax],al
  419e94:	pop    eax
  419e95:	and    edi,ebp
  419e97:	dec    DWORD PTR [edx]
  419e99:	or     DWORD PTR [eax],eax
  419e9b:	add    BYTE PTR [edx+eiz*1+0x22a4fffd],bl
  419ea2:	std    
  419ea3:	dec    esp
  419ea5:	and    bh,ch
  419ea7:	jmp    FWORD PTR [edx+eiz*1+0x226cfffd]
  419eae:	std    
  419eaf:	(bad)  
  419eb0:	clc    
  419eb1:	and    edi,ebp
  419eb3:	dec    edx
  419eb5:	or     BYTE PTR [eax],al
  419eb7:	add    BYTE PTR [esi-0x450002dd],ch
  419ebd:	or     BYTE PTR [eax],al
  419ebf:	add    BYTE PTR [esi+0x24],ah
  419ec2:	std    
  419ec3:	inc    DWORD PTR [esi]
  419ec5:	and    al,0xfd
  419ec7:	push   edx
  419ec9:	and    edi,ebp
  419ecb:	jmp    DWORD PTR [ebx+eiz*1+0x23e6fffd]
  419ed2:	std    
  419ed3:	inc    DWORD PTR [esi]
  419ed5:	and    edi,ebp
  419ed7:	push   DWORD PTR [esi]
  419ed9:	and    edi,ebp
  419edb:	jmp    esp
  419edd:	and    edi,ebp
  419edf:	jmp    DWORD PTR [ebx+eiz*1]
  419ee2:	std    
  419ee3:	dec    DWORD PTR [esi+0x23]
  419ee6:	std    
  419ee7:	jmp    DWORD PTR [ebx+0x6e]
  419eea:	add    DWORD PTR [eax],eax
  419eec:	arpl   WORD PTR [eax],cx
  419eee:	jmp    DWORD PTR es:[esi+ebp*2+0x1]
  419ef3:	add    BYTE PTR [ebx+0x64],ah
  419ef6:	and    edi,edi
	...
  419f04:	add    BYTE PTR [eax],al
  419f06:	add    BYTE PTR [eax+ebx*2+0x21],dl
  419f0a:	dec    DWORD PTR [esi+ebp*2+0x1]
  419f0e:	add    BYTE PTR [ebx+0x22],ah
  419f11:	and    al,0xff
  419f13:	cmp    al,0x36
  419f15:	and    al,0xff
  419f17:	xor    al,0x3a
  419f19:	and    al,0xff
  419f1b:	sub    al,0xce
  419f1d:	and    edi,edi
  419f1f:	and    al,0xd8
  419f21:	and    edi,edi
  419f23:	sbb    al,0x34
  419f25:	and    al,0xff
  419f27:	adc    al,0x6e
  419f29:	add    DWORD PTR [eax],eax
  419f2b:	arpl   sp,bx
  419f2d:	and    edi,edi
  419f2f:	add    al,0x88
  419f31:	and    al,0xff
  419f33:	cld    
  419f34:	xlat   BYTE PTR ds:[ebx]
  419f35:	and    edi,edi
  419f37:	hlt    
  419f38:	fldenv [ebx]
  419f3a:	(bad)  
  419f3b:	in     al,dx
  419f3c:	retf   
  419f3d:	and    edi,edi
  419f3f:	in     al,0xb1
  419f41:	and    al,0xff
  419f43:	fcom   QWORD PTR [ecx-0x6c2b00dc]
  419f49:	and    al,0xff
  419f4b:	int3   
  419f4c:	and    DWORD PTR [edi+edi*8],0xffffffc4
  419f50:	fldenv [ebx]
  419f52:	(bad)  
  419f53:	mov    esp,0x6300016d
  419f58:	fs and bh,bh
  419f5b:	lods   al,BYTE PTR ds:[esi]
  419f5c:	mov    edi,db7
  419f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f60:	ins    DWORD PTR es:[edi],dx
  419f61:	add    DWORD PTR [eax],eax
  419f63:	arpl   si,ax
  419f65:	sub    edi,edi
  419f67:	xchg   esp,eax
  419f68:	imul   ebp,DWORD PTR [eax],0xffffffff
	...
  419f77:	add    BYTE PTR [eax],al
  419f79:	add    BYTE PTR [edi+ebx*2+0x484ff28],cl
  419f80:	(bad)  
  419f81:	sub    BYTE PTR [ebx+edi*2-0x35],bh
  419f85:	sub    BYTE PTR [ebx+edi*2-0x31],dh
  419f89:	sub    BYTE PTR [ebx+edi*2-0x5b],ch
  419f8d:	sub    BYTE PTR [ebx+edi*2-0x63],ah
  419f91:	sub    BYTE PTR [ebx+edi*2-0x77],bl
  419f95:	sub    BYTE PTR [ebx+edi*2+0x77],dl
  419f99:	sub    BYTE PTR [ebx+edi*2+0x6b],cl
  419f9d:	sub    BYTE PTR [ebx+edi*2+0x6f],al
  419fa1:	sub    BYTE PTR [ebx+edi*2],bh
  419fa4:	jge    0x419fce
  419fa6:	xor    al,0x7b
  419fa8:	xchg   ecx,eax
  419fa9:	sub    BYTE PTR [ebx+edi*2],ch
  419fac:	lahf   
  419fad:	sub    BYTE PTR [ebx+edi*2],ah
  419fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fb1:	sub    BYTE PTR [ebx+edi*2],bl
  419fb4:	int    0x28
  419fb6:	adc    al,0x7b
  419fb8:	out    0x27,eax
  419fba:	or     al,0x7b
  419fbc:	xlat   BYTE PTR ds:[ebx]
  419fbd:	daa    
  419fbe:	add    al,0x7b
  419fc0:	leave  
  419fc1:	daa    
  419fc2:	cld    
  419fc3:	jp     0x419f9e
  419fc5:	daa    
  419fc6:	hlt    
  419fc7:	jp     0x419ff6
  419fc9:	sub    ah,ch
  419fcb:	jp     0x41a000
  419fcd:	sub    ah,ah
  419fcf:	jp     0x419fe0
  419fd1:	sub    ah,bl
  419fd3:	jp     0x419fd2
  419fd5:	daa    
  419fd6:	aam    0x7a
  419fd8:	push   edi
  419fd9:	daa    
  419fda:	int3   
  419fdb:	jp     0x41a028
  419fdd:	daa    
	...
  419fea:	add    BYTE PTR [eax],al
  419fec:	add    ah,al
  419fee:	jp     0x419f83
  419ff0:	daa    
  419ff1:	mov    esp,0xb4279f7a
  419ff6:	jp     0x41a01b
  419ff8:	daa    
  419ff9:	lods   al,BYTE PTR ds:[esi]
  419ffa:	jp     0x41a027
  419ffc:	daa    
  419ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ffe:	jp     0x41a055
  41a000:	daa    
  41a001:	pushf  
  41a002:	jp     0x41a041
  41a004:	daa    
  41a005:	xchg   esp,eax
  41a006:	jp     0x41a008
  41a008:	fild   WORD PTR [ebp+0x7a]
  41a00b:	std    
  41a00c:	sti    
  41a00d:	cmp    eax,0x45b3fd7a
  41a012:	jp     0x41a011
  41a014:	mov    bh,0x3d
  41a016:	jp     0x41a015
  41a018:	xchg   ecx,eax
  41a019:	inc    ebp
  41a01a:	jp     0x41a019
  41a01c:	jns    0x41a05b
  41a01e:	jp     0x41a01d
  41a020:	push   ecx
  41a021:	test   DWORD PTR [edx-0x3],edi
  41a024:	xor    eax,0x23fd7a7d
  41a029:	test   DWORD PTR [edx-0x3],edi
  41a02c:	adc    edi,DWORD PTR [ebp+0x7a]
  41a02f:	std    
  41a030:	retf   
  41a031:	inc    edx
  41a032:	jnp    0x41a031
  41a034:	loope  0x41a078
  41a036:	jnp    0x41a035
  41a038:	loope  0x41a07c
  41a03a:	jnp    0x41a039
  41a03c:	add    eax,0xfffd7b41
  41a041:	add    bh,BYTE PTR [ebx-0x3]
  41a044:	and    eax,0x1dfd7b01
  41a049:	add    DWORD PTR [ebx-0x3],edi
  41a04c:	inc    ebp
  41a04d:	add    DWORD PTR [ebx-0x3],edi
  41a050:	sbb    eax,DWORD PTR [eax]
	...
  41a05e:	add    BYTE PTR [eax],al
  41a060:	add    DWORD PTR [ebx-0x3],edi
  41a063:	jmp    0x7741a5c8
  41a068:	add    DWORD PTR [ebx-0x3],edi
  41a06b:	push   edi
  41a06c:	add    DWORD PTR [ebx-0x3],edi
  41a06f:	mov    bh,0xc1
  41a071:	jp     0x41a070
  41a073:	lahf   
  41a074:	sar    DWORD PTR [edx-0x3],0x87
  41a078:	sar    DWORD PTR [edx-0x3],0xeb
  41a07c:	sar    DWORD PTR [edx-0x3],0xe9
  41a080:	pusha  
  41a081:	add    eax,0x7ac1fd00
  41a086:	std    
  41a087:	jmp    0x1541a5ec
  41a08c:	sar    BYTE PTR [edx-0x3],0x0
  41a090:	into   
  41a091:	data16 (bad) 
  41a093:	inc    edx
  41a095:	data16 (bad) 
  41a097:	call   FWORD PTR [esi+eiz*2+0x66cefffe]
  41a09e:	(bad)  
  41a09f:	dec    DWORD PTR [esi]
  41a0a1:	data16 (bad) 
  41a0a3:	(bad)  
  41a0a4:	out    dx,al
  41a0a5:	gs (bad) 
  41a0a7:	call   FWORD PTR [esi+eiz*2]
  41a0aa:	(bad)  
  41a0ab:	dec    DWORD PTR [esi+eiz*2]
  41a0ae:	(bad)  
  41a0af:	call   DWORD PTR [esi+0x4afffe64]
  41a0b5:	add    eax,0x64600000
  41a0ba:	(bad)  
  41a0bb:	(bad)  
  41a0bc:	cmp    al,BYTE PTR ds:0x654c0000
  41a0c2:	(bad)  
  41a0c3:	inc    DWORD PTR [eax]
	...
  41a0d1:	add    BYTE PTR [eax],al
  41a0d3:	pusha  
  41a0d4:	popa   
  41a0d5:	(bad)  
  41a0d6:	(bad)  
  41a0d7:	cmp    al,BYTE PTR ds:0x61560000
  41a0dd:	(bad)  
  41a0de:	call   DWORD PTR [edx+0x61]
  41a0e1:	(bad)  
  41a0e2:	jmp    FWORD PTR [esi+0x61]
  41a0e5:	(bad)  
  41a0e6:	call   FWORD PTR [edx-0x5f00019f]
  41a0ec:	popa   
  41a0ed:	(bad)  
  41a0ee:	call   FWORD PTR [ecx+eiz*2-0x2]
  41a0f2:	dec    DWORD PTR [edx]
  41a0f4:	add    eax,0x64840000
  41a0f9:	(bad)  
  41a0fa:	push   DWORD PTR [eax+0x64]
  41a0fd:	(bad)  
  41a0fe:	push   DWORD PTR [eax]
  41a100:	fs (bad) 
  41a102:	dec    DWORD PTR [esi-0x6b00019c]
  41a108:	fs (bad) 
  41a10a:	jmp    esi
  41a10c:	fs (bad) 
  41a10e:	(bad)  
  41a10f:	jle    0x41a175
  41a111:	(bad)  
  41a112:	push   DWORD PTR [esp+eiz*2-0x2]
  41a116:	jmp    DWORD PTR [ebx-0x38]
  41a119:	loopne 0x41a119
  41a11b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a11c:	shl    al,cl
  41a11e:	(bad)  
  41a11f:	pushf  
  41a120:	outs   dx,BYTE PTR ds:[esi]
  41a121:	add    DWORD PTR [eax],eax
  41a123:	arpl   WORD PTR [eax-0x1c],bp
  41a126:	dec    BYTE PTR [esp+ecx*1+0x6e84fee3]
  41a12d:	add    DWORD PTR [eax],eax
  41a12f:	arpl   WORD PTR [ecx+0x1],sp
  41a132:	inc    ecx
  41a133:	icebp  
  41a134:	and    ah,0x73
	...
  41a143:	add    BYTE PTR [eax],al
  41a145:	add    BYTE PTR [esi],al
  41a147:	test   al,0xec
  41a149:	imul   edi,esi,0xffffffac
  41a14c:	add    DWORD PTR [edi],edi
  41a14e:	popa   
  41a14f:	pushf  
  41a150:	call   0xece260b3
  41a155:	imul   eax,esi,0x6e
  41a158:	add    DWORD PTR [ecx],esp
  41a15a:	arpl   WORD PTR [ebx-0x364f9313],bp
  41a160:	retf   
  41a161:	pop    esi
  41a162:	(bad)
  41a165:	bound  esp,QWORD PTR [ebx+0x53]
  41a168:	push   es
  41a169:	push   ebp
  41a16a:	mov    cl,0xc5
  41a16c:	mul    DWORD PTR [edx-0x5b]
  41a16f:	aad    0xef
  41a171:	bound  esp,QWORD PTR [ebx+0x59]
  41a174:	add    al,0x6c
  41a176:	nop
  41a177:	cmp    dh,dh
  41a179:	imul   edi,DWORD PTR [esi+0x38],0xffffffc1
  41a17d:	(bad)  
  41a17e:	cld    
  41a17f:	fld    QWORD PTR [eax]
  41a181:	inc    ebp
  41a182:	xchg   DWORD PTR [edi],eax
  41a184:	out    0x5e,al
  41a186:	jg     0x41a1aa
  41a188:	out    dx,eax
  41a189:	pusha  
  41a18a:	js     0x41a1fa
  41a18c:	add    DWORD PTR [ebp+0x6cf02762],esi
  41a192:	inc    ecx
  41a193:	or     eax,0x23d52f0
  41a198:	out    dx,eax
  41a199:	pusha  
  41a19a:	cmp    BYTE PTR [esi+0x1],ch
  41a19d:	hlt    
  41a19e:	bound  eax,QWORD PTR ds:0xe643f0b3
  41a1a4:	retf   0x32c9
  41a1a7:	loop   0x41a174
  41a1a9:	add    eax,DWORD PTR [eax]
	...
  41a1b7:	add    BYTE PTR [eax],al
  41a1b9:	mov    bl,0x5
  41a1bb:	fwait
  41a1bc:	lock add esp,esi
  41a1bf:	rol    dl,cl
  41a1c1:	or     cl,ch
  41a1c3:	int    0xe4
  41a1c5:	mov    WORD PTR [edi-0x30],?
  41a1c8:	add    al,0xf7
  41a1ca:	repz mov dl,0xf5
  41a1cd:	add    esi,ebp
  41a1cf:	lahf   
  41a1d0:	ret    0x7774
  41a1d3:	cli    
  41a1d4:	add    al,0xff
  41a1d6:	repz call 0x5cc2:0x92e603f5
  41a1de:	ja     0x41a1be
  41a1e0:	add    bl,BYTE PTR [esi-0x3a368d20]
  41a1e6:	jmp    0xf2126476
  41a1eb:	js     0x41a1d7
  41a1ed:	ret    0x5af0
  41a1f0:	out    0xb3,eax
  41a1f2:	(bad)  
  41a1f3:	out    0x3,al
  41a1f5:	enter  0x2c05,0xfc
  41a1f9:	mov    ah,0xe4
  41a1fb:	cmp    al,0xe8
  41a1fd:	mov    eax,ds:0x92eb3ce7
  41a202:	out    0x4c,al
  41a204:	out    dx,eax
  41a205:	and    edi,0xf390d53a
  41a20b:	aas    
  41a20c:	repnz xchg edx,esi
  41a20f:	daa    
  41a210:	add    al,0x57
  41a212:	add    al,0x26
  41a214:	out    0x70,eax
  41a216:	mov    edi,0xd281efff
  41a21b:	(bad)  
  41a21c:	std    
	...
  41a229:	add    BYTE PTR [eax],al
  41a22b:	add    BYTE PTR [ecx+0x5],al
  41a22e:	lds    eax,FWORD PTR [ebx]
  41a230:	and    dh,bl
  41a232:	add    esp,ebx
  41a234:	push   eax
  41a235:	loopne 0x41a236
  41a237:	cs mov eax,0xc01c62ea
  41a23d:	out    0x6f,al
  41a23f:	shl    BYTE PTR [edx+0x60e93ee1],1
  41a245:	add    eax,0xe6c1a402
  41a24a:	push   ebp
  41a24b:	rol    BYTE PTR [ebp-0x5530b30f],0xdf
  41a252:	imul   eax,esp,0x60
  41a255:	push   esp
  41a256:	add    bl,BYTE PTR [edx+edx*4-0x6546a115]
  41a25d:	fbld   TBYTE PTR [edx-0x62]
  41a260:	xchg   ebx,eax
  41a261:	loopne 0x41a2a8
  41a263:	nop
  41a264:	jl     0x41a249
  41a266:	inc    DWORD PTR [edx]
  41a268:	popa   
  41a269:	leave  
  41a26a:	ins    BYTE PTR es:[edi],dx
  41a26b:	mov    BYTE PTR [edx+ecx*8+0x66],al
  41a26f:	mov    ecx,DWORD PTR [esi-0x29]
  41a272:	jno    0x41a1f4
  41a274:	and    DWORD PTR [esi-0x3],esi
  41a277:	call   0xf410:0x7562c061
  41a27e:	ins    BYTE PTR es:[edi],dx
  41a27f:	dec    edx
  41a280:	push   ds
  41a281:	loop   0x41a2e6
  41a283:	pop    ebx
  41a284:	cmp    dh,ch
  41a286:	jo     0x41a271
  41a288:	pusha  
  41a289:	cmp    edi,0x53f20a25
  41a28f:	dec    esp
	...
  41a29c:	add    BYTE PTR [eax],al
  41a29e:	add    BYTE PTR [edx],dl
  41a2a0:	out    0x4f,al
  41a2a2:	dec    eax
  41a2a3:	or     ebx,esi
  41a2a5:	ds jmp 0x2a41d50b
  41a2ab:	icebp  
  41a2ac:	loop   0x41a30c
  41a2ae:	sbb    eax,0x1b66c20a
  41a2b3:	cli    
  41a2b4:	in     al,0x73
  41a2b6:	push   es
  41a2b7:	icebp  
  41a2b8:	out    dx,al
  41a2b9:	ds jmp 0x41811f
  41a2bf:	xchg   BYTE PTR [ecx+ebp*2+0x65],ch
  41a2c3:	(bad)  
  41a2c4:	ins    BYTE PTR es:[edi],dx
  41a2c5:	inc    ebx
  41a2c6:	imul   ebx,DWORD PTR [esi+0x6c],0xca003e
  41a2cd:	inc    ebx
  41a2ce:	gs xchg esi,eax
  41a2d0:	inc    edx
  41a2d1:	jb     0x41a345
  41a2d3:	mov    BYTE PTR [ebx+ebp*2+0x74],ch
  41a2d7:	jmp    0x7072:0xa7636c73
  41a2de:	add    BYTE PTR [edx+0x3],bl
  41a2e1:	push   ebx
  41a2e2:	imul   esp,DWORD PTR [esi-0x6497bf94],0xdf6f5173
  41a2ec:	jl     0x41a357
  41a2ee:	je     0x41a2c3
  41a2f0:	inc    ebx
  41a2f1:	jbe    0x41a367
  41a2f3:	out    0x1,eax
  41a2f5:	lods   eax,DWORD PTR ds:[esi]
  41a2f6:	add    BYTE PTR [eax+ebp*2+0x6204646b],dh
  41a2fd:	outs   dx,DWORD PTR ds:[esi]
  41a2fe:	jae    0x41a2d6
  41a300:	dec    edx
  41a301:	data16 ins BYTE PTR es:[edi],dx
	...
  41a30f:	add    BYTE PTR [eax],al
  41a311:	add    bh,ah
  41a313:	dec    ecx
  41a314:	std    
  41a315:	jmp    DWORD PTR ds:0xb6736c08
  41a31b:	jbe    0x41a37d
  41a31d:	ins    DWORD PTR es:[edi],dx
  41a31e:	call   0x4609:0x3e62
  41a325:	imul   ebx,DWORD PTR [ebp+ebx*2+0x6db2654b],0x5eae6943
  41a330:	ds add bh,bl
  41a333:	or     BYTE PTR [esi+0x69],al
  41a336:	pushf  
  41a337:	pop    ebp
  41a338:	inc    eax
  41a339:	ins    BYTE PTR es:[edi],dx
  41a33a:	cmp    eax,0x16006278
  41a33f:	or     al,BYTE PTR [ebx+0x65]
  41a342:	push   esi
  41a343:	push   esi
  41a344:	ins    BYTE PTR es:[edi],dx
  41a345:	arpl   WORD PTR fs:[ecx],dx
  41a348:	lock bound ebp,QWORD PTR [ebx]
  41a34b:	std    
  41a34c:	in     eax,dx
  41a34d:	arpl   WORD PTR [edi+0x1],ax
  41a350:	ret    
  41a351:	dec    esp
  41a353:	fadd   QWORD PTR [ebx]
  41a355:	inc    ebp
  41a356:	ds jb  0x41a32c
  41a359:	bound  esi,QWORD PTR [ecx]
  41a35b:	outs   dx,DWORD PTR ds:[esi]
  41a35c:	in     al,dx
  41a35d:	ins    BYTE PTR es:[edi],dx
  41a35e:	inc    ebp
  41a35f:	mov    eax,ds:0x18633ef9
  41a364:	add    eax,DWORD PTR [ebp+0x3e]
  41a367:	push   edx
  41a368:	int    0x6c
  41a36a:	add    BYTE PTR ds:0x5c2a62ed,bh
  41a370:	jecxz  0x41a3de
  41a372:	and    bl,BYTE PTR [esi+0x1]
  41a375:	je     0x41a377
	...
  41a383:	add    BYTE PTR [eax],al
  41a385:	bound  esp,QWORD PTR [ebx-0x4aef8c18]
  41a38b:	bnd jae 0x41a38c
  41a38e:	cwde   
  41a38f:	int3   
  41a390:	ins    DWORD PTR es:[edi],dx
  41a391:	add    eax,0x62a00183
  41a396:	mov    ds:0x85b473e8,eax
  41a39b:	jmp    0x41a400
  41a39d:	(bad)  
  41a39e:	repz icebp 
  41a3a0:	inc    ebx
  41a3a1:	mov    edx,0xcf60e7f0
  41a3a6:	mov    ebp,edi
  41a3a8:	jbe    0x41a34c
  41a3aa:	pop    esi
  41a3ab:	add    DWORD PTR [ebp+0x62],ecx
  41a3ae:	and    esp,ebp
  41a3b0:	jae    0x41a345
  41a3b2:	shr    al,1
  41a3b4:	jne    0x41a378
  41a3b6:	shl    ah,cl
  41a3b8:	dec    edi
  41a3b9:	xchg   ecx,eax
  41a3ba:	xor    esp,esi
  41a3bc:	xchg   cx,ax
  41a3bf:	into   
  41a3c0:	jae    0x41a353
  41a3c2:	aad    0xed
  41a3c4:	mov    fs:0x617a015e,al
  41a3ca:	pmulhw mm6,QWORD PTR [ebx-0x60]
  41a3ce:	add    eax,0xea72f21c
  41a3d3:	or     al,0xf8
  41a3d5:	mov    al,ds:0x43e718de
  41a3da:	stc    
  41a3db:	std    
  41a3dc:	icebp  
  41a3dd:	dec    ebp
  41a3de:	(bad)  
  41a3df:	out    0x3,al
  41a3e1:	jo     0x41a3eb
  41a3e3:	or     esi,ecx
  41a3e5:	push   eax
  41a3e6:	test   DWORD PTR [ecx],0xef
	...
  41a3f8:	dec    esp
  41a3f9:	(bad)  
  41a3fa:	out    0x3,al
  41a3fc:	daa    
  41a3fd:	push   es
  41a3fe:	scas   al,BYTE PTR es:[edi]
  41a3ff:	out    0x30,al
  41a401:	aad    0xd8
  41a403:	jmp    0xf72c:0xe6dae62e
  41a40a:	mov    ebp,0xcbe0fde5
  41a40f:	rol    BYTE PTR [ecx],1
  41a411:	call   0xe3398ec8
  41a416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a417:	loop   0x41a422
  41a419:	jmp    0x2b0:0x7374c2b9
  41a420:	es jmp 0xe29c:0xddf2d392
  41a428:	shr    al,1
  41a42a:	mov    dh,0xf1
  41a42c:	(bad)  
  41a42d:	jmp    0x41a3be
  41a42f:	out    dx,eax
  41a430:	sar    DWORD PTR [esp+ecx*4-0xafa7a09],0x3
  41a438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a439:	call   0xf7f364b0
  41a43e:	pop    eax
  41a43f:	out    0xbe,eax
  41a441:	stc    
  41a442:	and    ch,bl
  41a444:	mov    dl,0xe8
  41a446:	dec    ecx
  41a447:	clc    
  41a448:	(bad)  
  41a449:	test   DWORD PTR [edi-0x3d],0xe57314
  41a450:	jg     0x41a448
  41a452:	xor    dh,dl
  41a454:	js     0x41a43e
  41a456:	inc    DWORD PTR [esi+0x16]
  41a459:	jae    0x41a458
  41a45b:	fadd   QWORD PTR [eax]
	...
  41a469:	add    BYTE PTR [eax],al
  41a46b:	bound  edi,QWORD PTR [esi-0x1414ea8e]
  41a471:	inc    ecx
  41a472:	and    bl,ch
  41a474:	out    0x53,eax
  41a476:	push   es
  41a477:	mov    dh,0xeb
  41a479:	arpl   WORD PTR [edx+eiz*4],ax
  41a47c:	jmp    0x25ff:0x7e60fb5e
  41a483:	mov    esp,0xc20053f6
  41a488:	fld    QWORD PTR [eax-0x2]
  41a48b:	lods   eax,DWORD PTR ds:[esi]
  41a48c:	loopne 0x41a501
  41a48e:	jmp    0xba4450f3
  41a493:	mov    ah,0xe7
  41a495:	(bad)  
  41a496:	fldenv [eax+0x37]
  41a499:	jmp    DWORD PTR [ebp-0x29b50983]
  41a49f:	test   bh,dh
  41a4a1:	imul   eax,esp,0xffffff9e
  41a4a4:	jmp    0x41a511
  41a4a6:	int3   
  41a4a7:	scas   al,BYTE PTR es:[edi]
  41a4a8:	shr    DWORD PTR [edx-0x3c],cl
  41a4ab:	mov    eax,ds:0x61d1fd72
  41a4b0:	enter  0x9562,0x94
  41a4b4:	shl    DWORD PTR [eax-0x63],cl
  41a4b7:	and    eax,0x527e71f4
  41a4bc:	jb     0x41a4bb
  41a4be:	mov    al,ds:0x8471c460
  41a4c3:	inc    ecx
  41a4c4:	mul    BYTE PTR [edx-0x63]
  41a4c7:	dec    edi
  41a4c8:	loope  0x41a535
  41a4ca:	cmp    DWORD PTR ds:0x1a6fde,0x0
	...
  41a4dc:	add    BYTE PTR [eax],al
  41a4de:	jne    0x41a4b4
  41a4e0:	ins    DWORD PTR es:[edi],dx
  41a4e1:	dec    eax
  41a4e2:	das    
  41a4e3:	cmc    
  41a4e4:	addr16 inc esi
  41a4e6:	adc    esi,DWORD PTR [edx-0x3]
  41a4e9:	add    al,0x5d
  41a4eb:	aad    0x71
  41a4ed:	add    BYTE PTR [ebp+0x4973626a],dh
  41a4f3:	cmp    dh,BYTE PTR [edx]
  41a4f5:	inc    esi
  41a4f6:	mov    ds:0xa74707b,eax
  41a4fb:	push   es
  41a4fc:	sbb    BYTE PTR [edx],al
  41a4fe:	xor    eax,0x2a6e6279
  41a503:	jnp    0x41a571
  41a505:	arpl   WORD PTR [edi+0x7a],bp
  41a508:	jo     0x41a50a
  41a50a:	popf   
  41a50b:	pop    es
  41a50c:	push   eax
  41a50d:	jb     0x41a584
  41a50f:	push   0x62
  41a511:	jae    0x41a4dc
  41a513:	cmp    dh,BYTE PTR [edx]
  41a515:	dec    esi
  41a516:	outs   dx,DWORD PTR ds:[esi]
  41a517:	jno    0x41a58a
  41a519:	add    ch,bl
  41a51b:	pop    es
  41a51c:	dec    esp
  41a51d:	inc    ebx
  41a51e:	imul   DWORD PTR [eax+0x6d]
  41a521:	push   ebx
  41a522:	mov    ?,WORD PTR [edi+0x66]
  41a525:	outs   dx,BYTE PTR ds:[esi]
  41a526:	lods   eax,DWORD PTR ds:[esi]
  41a527:	dec    eax
  41a528:	std    
  41a529:	call   DWORD PTR [ecx]
  41a52b:	or     DWORD PTR [ecx+0x78],eax
  41a52e:	mov    bl,0x61
  41a530:	dec    ebp
  41a531:	jb     0x41a4c8
  41a533:	push   0x62
  41a535:	jae    0x41a4f0
  41a537:	add    eax,0x64d902ad
  41a53c:	jno    0x41a593
  41a53e:	aam    0x5d
  41a540:	pop    esi
  41a541:	outs   dx,BYTE PTR ds:[esi]
	...
  41a54e:	add    BYTE PTR [eax],al
  41a550:	add    dh,bl
  41a552:	imul   esp,DWORD PTR [edx+0x64],0x65606d0f
  41a559:	cli    
  41a55a:	pusha  
  41a55b:	outs   dx,WORD PTR ds:[esi]
  41a55d:	hlt    
  41a55e:	inc    esi
  41a55f:	data16 ins BYTE PTR es:[edi],dx
  41a561:	into   
  41a562:	outs   dx,DWORD PTR gs:[esi]
  41a564:	add    cl,ah
  41a566:	outs   dx,DWORD PTR gs:[esi]
  41a568:	outs   dx,BYTE PTR ds:[esi]
  41a569:	fild   QWORD PTR [eax+0x30]
  41a56c:	xor    dl,BYTE PTR [ebp+eiz*2+0x69]
  41a570:	ins    BYTE PTR es:[edi],dx
  41a571:	cmp    al,BYTE PTR ds:0x1b630087
  41a577:	mul    BYTE PTR [edx-0x7e]
  41a57a:	fcmovu st,st(6)
  41a57c:	push   eax
  41a57d:	xchg   edi,eax
  41a57e:	sub    al,0xdf
  41a580:	pop    esi
  41a581:	jbe    0x41a5a2
  41a583:	jmp    0x8261:0xe8caa447
  41a58a:	xor    al,BYTE PTR [edx*4+0x73df1f63]
  41a591:	fwait
  41a592:	daa    
  41a593:	call   0xe83ee704
  41a598:	inc    ebp
  41a599:	push   ecx
  41a59a:	outs   dx,DWORD PTR ds:[esi]
  41a59b:	call   0xe0adfcf0
  41a5a0:	pop    esi
  41a5a1:	ss pop esi
  41a5a3:	add    DWORD PTR [esi],ecx
  41a5a5:	arpl   WORD PTR [ebx],bx
  41a5a7:	jmp    0xe34ad6ec
  41a5ac:	jae    0x41a5f4
  41a5ae:	lahf   
  41a5af:	lock data16 aas 
  41a5b2:	pop    esi
  41a5b3:	add    DWORD PTR [eax+0x0],esp
	...
  41a5c2:	add    BYTE PTR [eax],al
  41a5c4:	arpl   WORD PTR [ebx+0x4b0253ea],bx
  41a5ca:	out    dx,al
  41a5cb:	dec    edx
  41a5cc:	push   es
  41a5cd:	pop    ecx
  41a5ce:	mov    edi,0x148fe71
  41a5d3:	or     eax,0x40ea9b63
  41a5d8:	icebp  
  41a5d9:	dec    eax
  41a5da:	in     al,0x73
  41a5dc:	push   es
  41a5dd:	mov    ch,0xe7
  41a5df:	jo     0x41a5d0
  41a5e1:	jl     0x41a5ca
  41a5e3:	pusha  
  41a5e4:	(bad)  
  41a5e5:	pop    esi
  41a5e6:	add    ecx,esi
  41a5e8:	arpl   WORD PTR [edi-0x67659d1b],cx
  41a5ee:	in     al,dx
  41a5ef:	jae    0x41a5ab
  41a5f1:	jge    0x41a5d8
  41a5f3:	mov    cx,0x181
  41a5f7:	ins    DWORD PTR es:[edi],dx
  41a5f8:	(bad)  
  41a5f9:	mov    DWORD PTR [esi],esi
  41a5fb:	xor    bh,BYTE PTR [ebp+0x5]
  41a5fe:	dec    ebx
  41a5ff:	call   0x69dabbc
  41a604:	xchg   esi,eax
  41a605:	hlt    
  41a606:	push   esi
  41a607:	idiv   BYTE PTR [ebp-0x21]
  41a60a:	push   edx
  41a60b:	loop   0x41a65a
  41a60d:	add    eax,0xf381f53c
  41a612:	stc    
  41a613:	xor    eax,0xe842e94d
  41a618:	hlt    
  41a619:	outs   dx,DWORD PTR ds:[esi]
  41a61a:	xchg   edi,eax
  41a61b:	add    edx,DWORD PTR [ecx+0x74c90dea]
  41a621:	jmp    0xfc2b:0xee41cd0c
	...
  41a634:	add    BYTE PTR [eax],al
  41a636:	add    BYTE PTR [ebp+0x3103b105],dl
  41a63c:	jmp    0xfaf8:0xea51d30d
  41a643:	push   ss
  41a644:	out    0x2,al
  41a646:	out    dx,eax
  41a647:	inc    ecx
  41a648:	retf   0xc2ee
  41a64b:	lods   al,BYTE PTR ds:[esi]
  41a64c:	outs   dx,DWORD PTR ds:[esi]
  41a64d:	sahf   
  41a64e:	add    edx,DWORD PTR [ecx]
  41a650:	jmp    0xded9:0xe008c4c5
  41a657:	sub    ebp,edx
  41a659:	iret   
  41a65a:	add    ebx,DWORD PTR [esi-0x2166fb]
  41a660:	mov    edi,0xbc0edeb6
  41a665:	retf   
  41a666:	cli    
  41a667:	xor    eax,0x11032305
  41a66c:	jmp    0xcc8b:0xf9f6be8d
  41a673:	shr    esp,0xab
  41a676:	sti    
  41a677:	xchg   ebp,eax
  41a678:	add    eax,0xe8b10351
  41a67d:	(bad)  
  41a67e:	(bad)  
  41a67f:	shr    al,cl
  41a681:	xchg   edi,ebp
  41a683:	sar    DWORD PTR [edx+0x30398bff],0x0
  41a68a:	push   es
  41a68b:	pusha  
  41a68c:	shl    DWORD PTR [edx+0x4e],cl
  41a68f:	push   cs
  41a690:	in     al,0x73
  41a692:	aaa    
  41a693:	add    bl,bl
  41a695:	jb     0x41a6e3
  41a697:	aam    0xf6
  41a699:	ds jmp 0x41a69f
	...
  41a6a7:	add    BYTE PTR [eax],al
  41a6a9:	add    BYTE PTR [eax+0x48],ah
  41a6ac:	call   FWORD PTR [edx]
  41a6ae:	and    al,0xea
  41a6b0:	inc    edx
  41a6b1:	dec    edi
  41a6b2:	or     al,0xdc
  41a6b4:	push   ebp
  41a6b5:	dec    eax
  41a6b6:	or     esi,esp
  41a6b8:	bound  ebp,QWORD PTR [eax]
  41a6ba:	addr16 aas 
  41a6bc:	(bad)  
  41a6bd:	cmp    al,BYTE PTR [edx+ebp*8]
  41a6c0:	dec    esp
  41a6c1:	sbb    DWORD PTR [eax+eiz*8-0xb32e3c0],edi
  41a6c8:	(bad)  
  41a6c9:	(bad)  
  41a6ca:	mov    esp,0xcd0c70d3
  41a6cf:	outs   dx,BYTE PTR ds:[esi]
  41a6d0:	std    
  41a6d1:	loop   0x41a734
  41a6d3:	enter  0xfd62,0xa5
  41a6d7:	cmc    
  41a6d8:	(bad)  
  41a6d9:	sti    
  41a6da:	call   0xfd6e:0xa1cc6acf
  41a6e1:	enter  0xf8bc,0x5e
  41a6e5:	(bad)  [ecx-0x5300cdcb]
  41a6eb:	fisubr DWORD PTR [ebx-0x17]
  41a6ee:	pusha  
  41a6ef:	push   esi
  41a6f0:	add    BYTE PTR [edx-0x3a941c78],bl
  41a6f6:	mov    ch,0xf6
  41a6f8:	(bad)  
  41a6f9:	retf   0xf27d
  41a6fc:	bound  ebp,QWORD PTR [eax-0x7b980ba0]
  41a702:	inc    esp
  41a703:	fidiv  DWORD PTR [eax]
  41a705:	fisttp DWORD PTR [edx+0x607d6be9]
  41a70b:	idiv   bh
  41a70d:	inc    DWORD PTR [eax]
	...
  41a71b:	add    BYTE PTR [eax],al
  41a71d:	adc    ebx,DWORD PTR [ecx+esi*2+0x65]
  41a721:	mov    eax,0x974625c
  41a726:	js     0x41a786
  41a728:	arpl   cx,sp
  41a72a:	outs   dx,DWORD PTR ds:[esi]
  41a72c:	ins    BYTE PTR es:[edi],dx
  41a72d:	jnp    0x41a738
  41a72f:	ja     0x41a731
  41a731:	push   ebx
  41a732:	addr16 jno 0x41a79a
  41a735:	mov    eax,0x39746267
  41a73a:	jae    0x41a79e
  41a73c:	popa   
  41a73d:	inc    esi
  41a73e:	fs push edx
  41a740:	jb     0x41a6f0
  41a742:	dec    eax
  41a743:	std    
  41a744:	push   DWORD PTR ds:0x2c696b60
  41a74a:	fs jno 0x41a77b
  41a74d:	push   esi
  41a74e:	pop    ebp
  41a74f:	imul   eax,DWORD PTR [eax],0x744f08cf
  41a755:	js     0x41a7a9
  41a757:	jno    0x41a7cb
  41a759:	or     DWORD PTR [eax-0x3],0xffffffff
  41a75d:	mov    edx,0xb8744f08
  41a762:	push   ebx
  41a763:	inc    eax
  41a764:	push   0x3e40b8
  41a769:	xchg   esi,eax
  41a76a:	or     BYTE PTR [edi+0x74],cl
  41a76d:	mov    BYTE PTR ds:0x5dac496c,bh
  41a773:	add    BYTE PTR ds:[esi+0x8],bh
  41a777:	dec    edi
  41a778:	je     0x41a722
  41a77a:	push   edx
  41a77b:	jno    0x41a7ef
  41a77d:	mov    ebx,0xea01
	...
  41a78e:	add    BYTE PTR [eax],al
  41a790:	fstp   DWORD PTR [ebp+0x6f]
  41a793:	inc    ebx
  41a794:	lahf   
  41a795:	jno    0x41a7e2
  41a797:	dec    ecx
  41a798:	mov    ebx,0xa9010e01
  41a79d:	pop    ebp
  41a79e:	outs   dx,DWORD PTR ds:[esi]
  41a79f:	push   ebx
  41a7a0:	div    BYTE PTR [esi+0x46]
  41a7a3:	push   edi
  41a7a4:	arpl   WORD PTR [esi+0x1],bx
  41a7a7:	jno    0x41a764
  41a7a9:	jmp    0x6423:0x95d35eed
  41a7b0:	iret   
  41a7b1:	jp     0x41a7b4
  41a7b3:	arpl   WORD PTR ss:[ebp+0x7bb762e3],ax
  41a7ba:	in     al,0x63
  41a7bc:	mov    edi,0x632a03d0
  41a7c1:	ret    
  41a7c2:	fidiv  WORD PTR [ebx-0x75]
  41a7c5:	ret    
  41a7c6:	lock jae 0x41a74a
  41a7c9:	aad    0xe5
  41a7cb:	pop    esi
  41a7cc:	jbe    0x41a787
  41a7ce:	add    eax,DWORD PTR [edi+0x63]
  41a7d1:	das    
  41a7d2:	in     eax,0x60
  41a7d4:	mov    BYTE PTR [ecx+0x3ecffef],bh
  41a7da:	add    al,0x61
  41a7dc:	je     0x41a7f2
  41a7de:	out    0x62,al
  41a7e0:	inc    eax
  41a7e1:	adc    al,BYTE PTR [esi+eiz*1]
  41a7e4:	arpl   di,di
  41a7e6:	out    0x6c,eax
  41a7e8:	push   eax
  41a7e9:	add    ecx,esi
  41a7eb:	ins    BYTE PTR es:[edi],dx
  41a7ec:	inc    eax
  41a7ed:	pop    ss
  41a7ee:	fbstp  TBYTE PTR [ebx+0x63]
  41a7f1:	and    al,BYTE PTR [ecx+esi*2]
	...
  41a800:	add    BYTE PTR [eax],al
  41a802:	add    BYTE PTR [esi],bh
  41a804:	add    al,0xe0
  41a806:	jmp    FWORD PTR [edi+ebx*1+0x523e7104]
  41a80d:	loopne 0x41a86f
  41a80f:	pop    ss
  41a810:	pop    esi
  41a811:	add    DWORD PTR [esi],edi
  41a813:	arpl   WORD PTR [eax-0x20],dx
  41a816:	pusha  
  41a817:	adc    eax,0x6345015e
  41a81c:	scas   eax,DWORD PTR es:[edi]
  41a81d:	loopne 0x41a892
  41a81f:	lock cmp ah,dl
  41a822:	push   0xffedae04
  41a827:	ins    BYTE PTR es:[edi],dx
  41a828:	std    
  41a829:	add    edx,DWORD PTR [ebp+0x10]
  41a82c:	add    eax,0xe6d0d2a8
  41a831:	cwde   
  41a832:	out    dx,eax
  41a833:	shl    ebp,1
  41a835:	out    0x3,al
  41a837:	(bad)  
  41a838:	clc    
  41a839:	jge    0x41a81d
  41a83b:	mov    ebx,0xc725b938
  41a840:	(bad)  [edx-0x5cfa57fd]
  41a846:	out    0x8d,al
  41a848:	loope  0x41a7dd
  41a84a:	repnz shl edi,0x36
  41a84e:	repnz (bad) 
  41a850:	jecxz  0x41a8a1
  41a852:	call   0x4286ed8
  41a857:	lods   al,BYTE PTR ds:[esi]
  41a858:	add    eax,0xdc78e634
  41a85d:	inc    edi
  41a85e:	loopne 0x41a7f1
  41a860:	clc    
  41a861:	inc    ebx
  41a862:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a864:	test   DWORD PTR [ebp-0x22],0x0
	...
  41a873:	add    BYTE PTR [eax],al
  41a875:	add    BYTE PTR [ebp+0x700443d9],al
  41a87b:	clc    
  41a87c:	or     esi,edx
  41a87e:	inc    ecx
  41a87f:	fist   DWORD PTR [esi+eiz*1]
  41a882:	aas    
  41a883:	fld    DWORD PTR [edx]
  41a885:	add    al,0x63
  41a887:	add    eax,0x56303e7
  41a88c:	out    0x3,eax
  41a88e:	arpl   WORD PTR ds:0x56303e7,ax
  41a894:	out    0x3,eax
  41a896:	arpl   WORD PTR ds:0x56303e7,ax
  41a89c:	out    0x3,eax
  41a89e:	arpl   WORD PTR ds:0x56303e7,ax
  41a8a4:	out    0x3,eax
  41a8a6:	arpl   WORD PTR ds:0x56303e7,ax
  41a8ac:	out    0x3,eax
  41a8ae:	arpl   WORD PTR ds:0x56303e7,ax
  41a8b4:	add    cl,ch
  41a8b6:	pusha  
  41a8b7:	add    eax,0x560e900
  41a8bc:	add    cl,ch
  41a8be:	pusha  
  41a8bf:	add    eax,0x560e900
  41a8c4:	add    cl,ch
  41a8c6:	pusha  
  41a8c7:	add    eax,0x560e900
  41a8cc:	add    cl,ch
  41a8ce:	pusha  
  41a8cf:	add    eax,0x560e900
  41a8d4:	add    cl,ch
  41a8d6:	pusha  
  41a8d7:	add    eax,0xe900
	...
  41a8e8:	add    BYTE PTR [eax+0x5],ah
  41a8eb:	add    cl,ch
  41a8ed:	pusha  
  41a8ee:	add    eax,0x560e900
  41a8f3:	add    cl,ch
  41a8f5:	pusha  
  41a8f6:	add    eax,0x560e900
  41a8fb:	add    cl,ch
  41a8fd:	pusha  
  41a8fe:	add    eax,0x560e900
  41a903:	add    cl,ch
  41a905:	pusha  
  41a906:	add    eax,0x560e900
  41a90b:	add    cl,ch
  41a90d:	pusha  
  41a90e:	add    eax,0x560e900
  41a913:	add    cl,ch
  41a915:	pusha  
  41a916:	add    eax,0x560e900
  41a91b:	add    cl,ch
  41a91d:	pusha  
  41a91e:	add    eax,0x560e900
  41a923:	add    cl,ch
  41a925:	pusha  
  41a926:	add    eax,0x560e900
  41a92b:	add    cl,ch
  41a92d:	pusha  
  41a92e:	add    eax,0x560e900
  41a933:	add    cl,ch
  41a935:	pusha  
  41a936:	add    eax,0x560e900
  41a93b:	add    BYTE PTR [eax],al
  41a93d:	mov    al,BYTE PTR [esi]
  41a93f:	add    BYTE PTR [eax],al
  41a941:	mov    al,BYTE PTR [esi]
  41a943:	add    BYTE PTR [eax],al
  41a945:	jp     0x41a94d
  41a947:	add    BYTE PTR [eax],al
  41a949:	jp     0x41a951
	...
  41a95b:	add    BYTE PTR [edx+0x6],cl
  41a95e:	add    BYTE PTR [eax],al
  41a960:	dec    edx
  41a961:	push   es
  41a962:	add    BYTE PTR [eax],al
  41a964:	pop    ds
  41a965:	cmp    esp,ecx
  41a967:	int3   
  41a968:	pop    ss
  41a969:	cmp    esp,ecx
  41a96b:	int3   
  41a96c:	xchg   esi,eax
  41a96d:	jle    0x41a95b
  41a96f:	push   ecx
  41a970:	call   0x5bcbb134
  41a975:	jge    0x41a9c2
  41a977:	(bad)  
  41a978:	fcomp  DWORD PTR [edi+0x5b]
  41a97b:	ret    
  41a97c:	mov    dh,0x7e
  41a97e:	in     al,dx
  41a97f:	push   ecx
  41a980:	lods   eax,DWORD PTR ds:[esi]
  41a981:	shl    BYTE PTR [eax],cl
  41a983:	leave  
  41a984:	xchg   DWORD PTR [esi+0x6f],edi
  41a987:	xor    al,bl
  41a989:	repnz or ecx,DWORD PTR [ebx+0x46890975]
  41a990:	imul   edi,DWORD PTR [ebx+eax*2-0x4],0xffffffd8
  41a995:	jmp    0x6b3d:0x852d8b1f
  41a99c:	push   edi
  41a99d:	add    al,BYTE PTR [eax+0x1f1283f]
  41a9a3:	jmp    0x41a95f
  41a9a5:	leave  
  41a9a6:	pop    ebp
  41a9a7:	mov    edi,DWORD PTR [esi+0x16ccc0c7]
  41a9ad:	jle    0x41a99b
  41a9af:	add    edi,0x20
  41a9b2:	mov    DWORD PTR [ebp+0x5b],eax
  41a9b5:	jl     0x41a9fa
  41a9b7:	loopne 0x41a991
  41a9b9:	mov    bh,0xdf
  41a9bb:	mov    esi,DWORD PTR [esi]
  41a9bd:	add    DWORD PTR gs:[ecx+0x0],edx
	...
  41a9cd:	add    BYTE PTR [eax],al
  41a9cf:	push   edi
  41a9d0:	jl     0x41aa25
  41a9d2:	in     al,0xd8
  41a9d4:	mov    edi,0xed1b8be3
  41a9d9:	add    BYTE PTR [ebp+0x6b],cl
  41a9dc:	jl     0x41aa29
  41a9de:	clc    
  41a9df:	call   0x21cda1b3
  41a9e4:	and    DWORD PTR [ecx],eax
  41a9e6:	inc    ebp
  41a9e7:	pop    ebx
  41a9e8:	jl     0x41aa2d
  41a9ea:	call   0x8c3964d7
  41a9ef:	mov    dl,0x25
  41a9f1:	add    DWORD PTR [ebp+0x5b],edx
  41a9f4:	jle    0x41aa49
  41a9f6:	lock fadd st,st(2)
  41a9f9:	test   DWORD PTR [ebx+0x4d0109ab],0xfc4b7e6b
  41aa03:	and    al,0xc3
  41aa05:	repz add BYTE PTR [ebx+0x5],ah
  41aa09:	add    bl,ch
  41aa0b:	push   0x7c
  41aa0d:	push   ebx
  41aa0e:	hlt    
  41aa0f:	loopne 0x41aa54
  41aa11:	dec    DWORD PTR [eax+0x458971b6]
  41aa17:	or     edi,DWORD PTR [ebp+0x4b]
  41aa1a:	hlt    
  41aa1b:	cmp    BYTE PTR [ebp+0x7cab7317],bh
  41aa21:	push   ebx
  41aa22:	lock fadd DWORD PTR [ebx]
  41aa25:	add    DWORD PTR [ebp+0x5b],eax
  41aa28:	jle    0x41aa6d
  41aa2a:	fmul   QWORD PTR [ecx-0x9]
  41aa2d:	lods   al,BYTE PTR ds:[si]
  41aa2f:	popa   
  41aa30:	(bad)  
	...
  41aa3f:	add    BYTE PTR [eax],al
  41aa41:	add    BYTE PTR [esi],bl
  41aa43:	dec    ecx
  41aa44:	dec    edi
  41aa45:	call   0x41b07d
  41aa4a:	loopne 0x41aa8d
  41aa4c:	or     al,0x85
  41aa4e:	mov    ds:0x168b18f2,eax
  41aa53:	jno    0x41a9de
  41aa55:	inc    ebp
  41aa56:	mov    ebx,0x330cb4f8
  41aa5b:	jle    0x41aaa8
  41aa5d:	in     al,dx
  41aa5e:	call   0x26cd9635
  41aa63:	imul   ecx,DWORD PTR [ecx+0x4304f304],0x88fa8808
  41aa6d:	dec    ebp
  41aa6e:	jae    0x41a9f4
  41aa70:	mov    edi,0xefbada04
  41aa75:	jmp    0x41aa36
  41aa77:	xor    al,0xc0
  41aa79:	mov    eax,DWORD PTR [esi-0x36]
  41aa7c:	ror    ah,0x27
  41aa7f:	cmp    esp,ecx
  41aa81:	int3   
  41aa82:	pop    ds
  41aa83:	cmp    esp,ecx
  41aa85:	int3   
  41aa86:	pop    ss
  41aa87:	cmp    esp,ecx
  41aa89:	int3   
  41aa8a:	xchg   esi,eax
  41aa8b:	jl     0x41aa79
  41aa8d:	add    DWORD PTR [edi+0xd],0xffffffe8
  41aa91:	add    eax,0x89fd682c
  41aa96:	sahf   
  41aa97:	pop    ebp
  41aa98:	mov    DWORD PTR [ebp+0xb],eax
  41aa9b:	aad    0xe7
  41aa9d:	sub    DWORD PTR [eax+ebp*2],edx
  41aaa0:	std    
  41aaa1:	and    DWORD PTR [edi],0x1
  41aaa4:	mov    eax,ds:0xb4
	...
  41aab5:	scas   al,BYTE PTR es:[edi]
  41aab6:	(bad)  
  41aab7:	jmp    DWORD PTR [edi-0x41]
  41aaba:	add    al,BYTE PTR [eax+0x0]
  41aabd:	call   0xec93927b
  41aac2:	adc    DWORD PTR [ebp+edx*2-0x475efa5e],esi
  41aac9:	ss (bad) 
  41aacb:	jmp    FWORD PTR [ecx+0x63]
  41aace:	(bad)  
  41aad0:	addr16 lahf 
  41aad2:	add    al,BYTE PTR [eax+0x0]
  41aad5:	les    edx,FWORD PTR [ecx]
  41aad7:	mov    eax,0x87052255
  41aadc:	inc    ebp
  41aadd:	retf   
  41aade:	aas    
  41aadf:	inc    ebx
  41aae0:	cld    
  41aae1:	arpl   WORD PTR ds:0xfdb80000,ax
  41aae7:	mov    BYTE PTR [ebp-0x61],dl
  41aaea:	add    edx,0x1
  41aaed:	jmp    0x869:0xe83fbd1
  41aaf4:	jae    0x41ab38
  41aaf6:	jl     0x41ab3b
  41aaf8:	cld    
  41aaf9:	call   0x61ce2df6
  41aafe:	vmovmskps ebx,ymm0
  41ab02:	shl    edi,1
  41ab04:	push   edx
  41ab05:	adc    DWORD PTR fs:[ebp+edx*2+0x4d8905a2],esi
  41ab0d:	push   edi
  41ab0e:	jge    0x41ab14
  41ab10:	lea    edx,[edi]
  41ab12:	sar    DWORD PTR [esi],1
  41ab14:	add    BYTE PTR [eax],bh
  41ab16:	push   esi
  41ab17:	mov    ebp,esp
	...
  41ab25:	add    BYTE PTR [eax],al
  41ab27:	add    BYTE PTR [esi+0x27cccc42],bl
  41ab2d:	cmp    cl,ah
  41ab2f:	int3   
  41ab30:	pop    ds
  41ab31:	cmp    cl,ah
  41ab33:	int3   
  41ab34:	pop    ss
  41ab35:	cmp    cl,ah
  41ab37:	int3   
  41ab38:	mov    dh,0x7a
  41ab3a:	in     al,dx
  41ab3b:	mov    eax,ds:0x3ecf73
  41ab40:	dec    ebp
  41ab41:	jp     0x41ab83
  41ab43:	xor    al,bl
  41ab45:	mov    eax,0xbdea3e07
  41ab4a:	pop    es
  41ab4b:	pop    ebp
  41ab4c:	and    BYTE PTR [edx],bh
  41ab4e:	int3   
  41ab4f:	int3   
  41ab50:	pop    ds
  41ab51:	cmp    cl,ah
  41ab53:	int3   
  41ab54:	pop    ss
  41ab55:	cmp    cl,ah
  41ab57:	int3   
  41ab58:	ss jp  0x41ab47
  41ab5b:	mov    ebx,DWORD PTR [esi]
  41ab5d:	stc    
  41ab5e:	dec    edi
  41ab5f:	mov    ebx,DWORD PTR [esi]
  41ab61:	std    
  41ab62:	dec    esi
  41ab63:	jmp    FWORD PTR [esi-0x4f]
  41ab66:	push   ebx
  41ab67:	inc    ecx
  41ab68:	arpl   ax,cx
  41ab6a:	ror    ah,0xa7
  41ab6d:	cmp    esp,ecx
  41ab6f:	int3   
  41ab70:	lahf   
  41ab71:	cmp    esp,ecx
  41ab73:	int3   
  41ab74:	xchg   edi,eax
  41ab75:	cmp    esp,ecx
  41ab77:	int3   
  41ab78:	ss jp  0x41ab67
  41ab7b:	add    DWORD PTR [edi-0x6ff9603],0x4
  41ab82:	push   0xffc561dc
  41ab87:	(bad)  
  41ab88:	push   esi
  41ab89:	lods   eax,DWORD PTR ds:[esi]
  41ab8a:	push   ebx
  41ab8b:	inc    ecx
	...
  41ab98:	add    BYTE PTR [eax],al
  41ab9a:	add    BYTE PTR [ebx+0x7c],ah
  41ab9d:	inc    ebx
  41ab9e:	clc    
  41ab9f:	sti    
  41aba0:	pop    esp
  41aba1:	add    al,BYTE PTR [eax+0x63]
  41aba4:	jp     0x41abe9
  41aba6:	clc    
  41aba7:	mov    bl,0x5d
  41aba9:	mov    edx,0x816654ff
  41abae:	les    ebx,FWORD PTR [ebx+0x7c]
  41abb1:	inc    ebx
  41abb2:	cld    
  41abb3:	fdiv   DWORD PTR [edi-0x3017aef1]
  41abb9:	or     edx,DWORD PTR [edx-0x18]
  41abbc:	mov    edi,0xd02c5007
  41abc1:	sti    
  41abc2:	mov    edi,DWORD PTR [esi]
  41abc4:	enter  0xccc0,0xb6
  41abc8:	jp     0x41abb6
  41abca:	push   ecx
  41abcb:	sbb    al,0xc0
  41abcd:	sti    
  41abce:	add    BYTE PTR [ebx+0x5],ah
  41abd1:	add    bl,ch
  41abd3:	pop    edx
  41abd4:	jp     0x41ac19
  41abd6:	cld    
  41abd7:	loopne 0x41ac1d
  41abd9:	dec    DWORD PTR [eax+0x4d89699e]
  41abdf:	out    dx,eax
  41abe0:	sub    DWORD PTR [ebx+0x10],ecx
  41abe3:	jo     0x41abeb
  41abe5:	mov    DWORD PTR [ebp+0x6b],edx
  41abe8:	add    dl,BYTE PTR [ebx-0x4]
  41abeb:	fs scas eax,DWORD PTR es:[edi]
  41abed:	add    cl,BYTE PTR [ebx+0x4d00f91e]
  41abf3:	(bad)  
  41abf4:	cmc    
  41abf5:	mov    ch,0x11
  41abf7:	js     0x41ac3c
  41abf9:	je     0x41ac02
  41abfb:	sti    
  41abfc:	add    eax,DWORD PTR [eax]
	...
  41ac0e:	arpl   WORD PTR [edx+0x4],bx
  41ac11:	jmp    0x41aba6
  41ac13:	xor    eax,eax
  41ac15:	mov    eax,DWORD PTR [esi-0x58333f39]
  41ac1b:	cmp    ah,cl
  41ac1d:	int3   
  41ac1e:	lahf   
  41ac1f:	cmp    ah,cl
  41ac21:	int3   
  41ac22:	xchg   edi,eax
  41ac23:	cmp    ah,cl
  41ac25:	int3   
  41ac26:	push   ss
  41ac27:	jp     0x41ac15
  41ac29:	mov    ecx,0x55b
  41ac2e:	pop    es
  41ac2f:	jp     0x41ac38
  41ac31:	mov    DWORD PTR [esi+0x15],edx
  41ac34:	push   esi
  41ac35:	inc    ecx
  41ac36:	arpl   dx,ax
  41ac38:	ror    ah,0x27
  41ac3b:	push   edx
  41ac3c:	int3   
  41ac3d:	int3   
  41ac3e:	pop    ds
  41ac3f:	push   edx
  41ac40:	int3   
  41ac41:	int3   
  41ac42:	pop    ss
  41ac43:	push   edx
  41ac44:	int3   
  41ac45:	int3   
  41ac46:	xchg   esi,eax
  41ac47:	nop
  41ac48:	in     al,dx
  41ac49:	add    DWORD PTR [edi-0xa],0xffffff88
  41ac4d:	inc    ebp
  41ac4e:	pop    ebx
  41ac4f:	mov    BYTE PTR [eax+0x4],bh
  41ac52:	arpl   WORD PTR [esp+eax*4],dx
  41ac55:	mov    BYTE PTR [ebx+0x5],ah
  41ac58:	add    BYTE PTR [ebx+0x51890da6],cl
  41ac5e:	addr16 mov dl,ch
  41ac61:	or     BYTE PTR [edx],dh
  41ac63:	jo     0x41abec
  41ac65:	push   ebp
  41ac66:	not    DWORD PTR [eax+0x45e00843]
  41ac6c:	or     BYTE PTR [ecx+0x45c555a6],cl
	...
  41ac7e:	add    BYTE PTR [eax],al
  41ac80:	add    bh,ah
  41ac82:	add    eax,0x70630000
  41ac87:	pop    es
  41ac88:	mov    esp,DWORD PTR [esi]
  41ac8a:	popa   
  41ac8b:	add    ecx,0xfc4b8e62
  41ac91:	fdivr  DWORD PTR [edx+0x59163bfb]
  41ac97:	jno    0x41acdf
  41ac99:	call   0x1ecda868
  41ac9e:	push   ebp
  41ac9f:	or     eax,0xbec64fb7
  41aca4:	cli    
  41aca5:	outs   dx,DWORD PTR ds:[esi]
  41aca6:	mov    dl,bh
  41aca8:	add    ecx,DWORD PTR [esi]
  41acaa:	pop    ss
  41acab:	mov    DWORD PTR [ebp-0x71],eax
  41acae:	nop
  41acaf:	dec    ebx
  41acb0:	lock push esp
  41acb2:	pushf  
  41acb3:	adc    al,0x41
  41acb5:	loop   0x41ad1e
  41acb7:	std    
  41acb8:	packsswb mm0,QWORD PTR ds:0x906b5587
  41acbf:	inc    ebx
  41acc0:	or     al,bl
  41acc2:	ror    BYTE PTR [ebx],cl
  41acc4:	add    ebp,DWORD PTR [ebx-0x70]
  41acc7:	push   ebx
  41acc8:	clc    
  41acc9:	call   0xa644bbd6
  41acce:	cmc    
  41accf:	mov    BYTE PTR [ebp+0x5b],cl
  41acd2:	nop
  41acd3:	push   ebx
  41acd4:	or     al,0x60
  41acd6:	test   BYTE PTR [eax+0x48e3b4d],0xa
  41acdd:	cmp    BYTE PTR [esi-0x6fa4aa77],ch
  41ace3:	inc    ebx
  41ace4:	or     BYTE PTR [eax],al
	...
  41acf2:	add    BYTE PTR [eax],al
  41acf4:	pusha  
  41acf5:	mov    DWORD PTR [ebx],0xe70d9e89
  41acfb:	imul   ecx,DWORD PTR [esp+eiz*2],0xfffffffd
  41acff:	mov    edi,esi
  41ad01:	rol    eax,0xcc
  41ad04:	xchg   esi,eax
  41ad05:	nop
  41ad06:	in     al,dx
  41ad07:	add    DWORD PTR [edi],0x29
  41ad0a:	mov    DWORD PTR [ebp+0x5b],eax
  41ad0d:	mov    es,WORD PTR [ebx-0x1c]
  41ad10:	fcom   st(1)
  41ad12:	jecxz  0x41ac9f
  41ad14:	imul   eax,DWORD PTR ss:[ecx],0x538e9751
  41ad1b:	call   0x8c2976f8
  41ad20:	fild   DWORD PTR [eax+eax*1+0x4b8e6300]
  41ad27:	lock loopne 0x41ad0b
  41ad2a:	out    dx,eax
  41ad2b:	add    BYTE PTR [ecx+ecx*4-0x7],bl
  41ad2f:	add    BYTE PTR [ebx+0x5],ah
  41ad32:	mov    DWORD PTR [ebp+0x6b],edx
  41ad35:	or     BYTE PTR [ebx-0x10],dl
  41ad38:	jmp    0x8165:0x268bdfb9
  41ad3f:	js     0x41adb4
  41ad41:	add    eax,0x486840d
  41ad46:	add    BYTE PTR [eax],al
  41ad48:	or     DWORD PTR ds:0xd1d8006a,eax
  41ad4e:	fisttp WORD PTR [ebx+0x51010d0e]
  41ad54:	outs   dx,DWORD PTR ds:[esi]
  41ad55:	mov    bh,0xfc
  41ad57:	adc    eax,0x0
	...
  41ad64:	add    BYTE PTR [eax],al
  41ad66:	add    BYTE PTR [ebx],bl
  41ad68:	mov    ecx,0xc8da003e
  41ad6d:	sti    
  41ad6e:	mov    ebx,DWORD PTR [esi+0x63388165]
  41ad74:	fst    DWORD PTR [esi]
  41ad76:	mov    esp,DWORD PTR [esi+0x5b558965]
  41ad7c:	push   es
  41ad7d:	jns    0x45cb1f11
  41ad83:	add    ecx,DWORD PTR [edi-0x329ff7b5]
  41ad89:	jns    0x182b072d
  41ad8f:	fdivr  DWORD PTR [eax+0xda68bdf]
  41ad95:	add    DWORD PTR [edx+0x53],eax
  41ad98:	mov    WORD PTR [ebx-0xc],es
  41ad9b:	fcom   st(0)
  41ad9d:	fisttp WORD PTR [ebx+0x11010d8e]
  41ada3:	jmp    0x5d:0x1ec7ebb8
  41adaa:	add    BYTE PTR [ebx+0x5],ah
  41adad:	mov    DWORD PTR [ebp-0x3d],eax
  41adb0:	xchg   BYTE PTR [eax+0x10],bh
  41adb3:	arpl   cx,bx
  41adb5:	or     al,0x8b
  41adb7:	es cmp DWORD PTR gs:[ecx],0xc704d963
  41adbf:	push   ds
  41adc0:	pop    ebp
  41adc1:	(bad)  
  41adc2:	jmp    DWORD PTR [ebx+0x5]
  41adc5:	mov    DWORD PTR [ebp-0x71],edx
  41adc8:	xchg   BYTE PTR [edx],bh
	...
  41adda:	pop    ss
  41addb:	in     al,0x88
  41addd:	inc    ebp
  41adde:	(bad)  
  41addf:	mov    cs,WORD PTR [eax]
  41ade1:	add    DWORD PTR [edx-0x1cfffffb],0x168b1bd9
  41adeb:	pop    ecx
  41adec:	mov    DWORD PTR [edx],eax
  41adee:	ds (bad) 
  41adf0:	std    
  41adf1:	(bad)  
  41adf2:	fdiv   QWORD PTR [ebp-0x4ba8b278]
  41adf8:	out    0xb5,eax
  41adfa:	dec    esi
  41adfb:	(bad)  
  41adfc:	std    
  41adfd:	sbb    DWORD PTR [edi],0xd
  41ae00:	xchg   DWORD PTR [ebp+0x1f],eax
  41ae03:	outs   dx,BYTE PTR ds:[esi]
  41ae04:	sbb    al,0x8b
  41ae06:	mov    ds,WORD PTR [ecx-0x77]
  41ae09:	add    bl,al
  41ae0b:	iret   
  41ae0c:	pop    es
  41ae0d:	lea    ecx,[edi-0x17adfdf3]
  41ae13:	(bad)  
  41ae14:	sti    
  41ae15:	push   eax
  41ae16:	or     edi,DWORD PTR [edx-0x5]
  41ae19:	dec    DWORD PTR [esi+eax*4]
  41ae1c:	les    ecx,FWORD PTR [eax]
  41ae1e:	fcmovb st,st(7)
  41ae20:	fisttp DWORD PTR [ebx+0x558959ae]
  41ae26:	pop    ss
  41ae27:	mov    WORD PTR [edi],cs
  41ae29:	mov    esp,DWORD PTR [esi+0x5fc08159]
  41ae2f:	mov    WORD PTR [ebx-0xc],es
  41ae32:	call   0xa2c59a06
  41ae37:	or     BYTE PTR [edi-0x6a9240b3],al
  41ae3d:	mov    eax,DWORD PTR [eax]
	...
  41ae4b:	add    BYTE PTR [eax],al
  41ae4d:	cs gs add edx,0xe0538c57
  41ae55:	retf   0xfd12
  41ae58:	jmp    FWORD PTR [ebp+ecx*4+0x50a05de3]
  41ae5f:	int3   
  41ae60:	int3   
  41ae61:	ss mov gs,esp
  41ae64:	add    DWORD PTR [edi+0x61f0680c],0xffffffc5
  41ae6b:	(bad)  
  41ae6c:	(bad)  
  41ae6d:	outs   dx,BYTE PTR ds:[esi]
  41ae6e:	inc    ebp
  41ae6f:	push   ebx
  41ae70:	inc    ecx
  41ae71:	arpl   WORD PTR [ebx+eax*2+0x2610bf8],cx
  41ae78:	inc    eax
  41ae79:	arpl   WORD PTR [esi+0x6d13f843],cx
  41ae7f:	ds std 
  41ae81:	pop    esp
  41ae82:	popa   
  41ae83:	add    esp,0xfc438e6b
  41ae89:	fcom   st(2)
  41ae8b:	sqrtps xmm3,xmm0
  41ae8e:	mov    edx,0xcae8520b
  41ae93:	pop    es
  41ae94:	push   eax
  41ae95:	xor    al,0xbb
  41ae97:	sti    
  41ae98:	mov    eax,DWORD PTR [esi-0x3d]
  41ae9b:	ror    ah,0x17
  41ae9e:	push   edx
  41ae9f:	int3   
  41aea0:	int3   
  41aea1:	mov    dh,0x8c
  41aea3:	in     al,dx
  41aea4:	mov    eax,ds:0x3eb777
  41aea9:	and    eax,0x6e8b6806
  41aeae:	stc    
  41aeaf:	push   ebp
  41aeb0:	inc    ecx
	...
  41aebd:	add    BYTE PTR [eax],al
  41aebf:	add    BYTE PTR [ebx-0x72],ah
  41aec2:	push   eax
  41aec3:	add    DWORD PTR [ecx+0x66508844],esi
  41aec9:	ret    0xccc0
  41aecc:	pop    ss
  41aecd:	push   edx
  41aece:	int3   
  41aecf:	int3   
  41aed0:	ss mov esp,gs
  41aed3:	add    edi,0x11
  41aed6:	lahf   
  41aed7:	adc    BYTE PTR ds:0xb18affc6,dh
  41aedd:	adc    al,0xc7
  41aedf:	ds call 0x91ccdeaa
  41aee5:	mov    edx,ss
  41aee7:	ds fmul st,st(5)
  41aeea:	or     ecx,DWORD PTR [ebx-0xbb4716f]
  41aef0:	call   0x2bcda2bf
  41aef5:	adc    DWORD PTR [edi+0x538c8b4d],eax
  41aefb:	clc    
  41aefc:	fidivr DWORD PTR [edx+0x562b8fb]
  41af02:	add    BYTE PTR [eax],al
  41af04:	fiadd  WORD PTR [ebp+0x74]
  41af07:	inc    esp
  41af08:	loopne 0x41aeec
  41af0a:	test   DWORD PTR [eax],0xc03108ee
  41af10:	dec    eax
  41af11:	and    DWORD PTR [ecx+0x4f8c5b4d],ecx
  41af17:	sbb    BYTE PTR [eax+0x6a7507ba],cl
  41af1d:	mov    WORD PTR [ebx-0x8],es
  41af20:	call   0xcabaf6
	...
  41af31:	add    BYTE PTR [eax],al
  41af33:	stos   DWORD PTR es:[edi],eax
  41af34:	add    DWORD PTR [ecx+0x438c2b55],ecx
  41af3a:	adc    dl,bl
  41af3c:	ret    0xb817
  41af3f:	bound  eax,QWORD PTR ds:0xfd080000
  41af45:	mov    BYTE PTR [ebp+0xb],cl
  41af48:	mov    WORD PTR [edi],cs
  41af4a:	mov    DWORD PTR [esi-0x4ba76a3],ebp
  41af50:	sbb    eax,DWORD PTR [ebx-0x4]
  41af53:	outs   dx,BYTE PTR ds:[esi]
  41af54:	or     DWORD PTR [ecx],esi
  41af56:	sar    al,0x8
  41af59:	jmp    0x8986e011
  41af5e:	in     eax,0x3e
  41af60:	inc    esp
  41af61:	int3   
  41af62:	int3   
  41af63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af64:	push   eax
  41af65:	int3   
  41af66:	int3   
  41af67:	lahf   
  41af68:	push   eax
  41af69:	int3   
  41af6a:	int3   
  41af6b:	xchg   edi,eax
  41af6c:	push   eax
  41af6d:	int3   
  41af6e:	int3   
  41af6f:	push   ss
  41af70:	mov    esp,gs
  41af72:	add    edi,0xfffffffc
  41af75:	les    eax,FWORD PTR [ebp-0x55]
  41af78:	add    al,0x30
  41af7a:	add    BYTE PTR [ebx-0x13],ah
  41af7d:	add    eax,DWORD PTR [ebx]
  41af7f:	and    eax,DWORD PTR ds:0xc62efc9f
  41af85:	dec    DWORD PTR [edi+0x7b]
  41af88:	mov    bl,0xfb
  41af8a:	inc    DWORD PTR [ebx+eax*4-0x3615f73c]
  41af91:	repz push 0x23
  41af94:	mov    WORD PTR [ebx-0x8],cs
	...
  41afa3:	add    BYTE PTR [eax],al
  41afa5:	add    BYTE PTR [edx],dl
  41afa7:	mov    WORD PTR [ebx],ss
  41afa9:	fmul   QWORD PTR [esi]
  41afab:	(bad)  
  41afac:	dec    DWORD PTR [edx+0x6a4fb5a1]
  41afb2:	arpl   WORD PTR [esi+0x53],bx
  41afb5:	hlt    
  41afb6:	add    BYTE PTR [edx],bh
  41afb8:	push   ebx
  41afb9:	inc    ecx
  41afba:	arpl   WORD PTR [edx-0x3b692bc5],ax
  41afc0:	(bad)  
  41afc1:	jmp    FWORD PTR [esi+0x6302b806]
  41afc7:	add    eax,0x8ab9eb00
  41afcc:	or     eax,DWORD PTR [eax]
  41afce:	popa   
  41afcf:	(bad)  
  41afd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afd3:	push   ebp
  41afd4:	push   0x4b600
  41afd9:	push   0x400363
  41afde:	call   0xa29783db
  41afe3:	add    eax,0x363c27f
  41afe8:	add    BYTE PTR [eax],al
  41afea:	xchg   ecx,eax
  41afeb:	ins    DWORD PTR es:[edi],dx
  41afec:	sahf   
  41afed:	(bad)  
  41afee:	fcomp  QWORD PTR [esi-0x7f]
  41aff1:	les    esp,FWORD PTR [edi-0x63]
  41aff4:	add    BYTE PTR [edx],al
  41aff6:	and    eax,DWORD PTR ds:0x561002b
  41affc:	add    BYTE PTR [ebx+0x4153396e],cl
  41b002:	arpl   WORD PTR [edx],bp
  41b004:	enter  0x5e89,0x9
  41b008:	push   esi
  41b009:	inc    ecx
	...
  41b016:	add    BYTE PTR [eax],al
  41b018:	add    BYTE PTR [ebx-0x76],ah
  41b01b:	adc    eax,DWORD PTR [esi*1-0x3dae003c]
  41b022:	cmp    DWORD PTR [ebx+0x41],edx
  41b025:	arpl   WORD PTR [ebp-0x4b6cb278],si
  41b02b:	out    0x9d,eax
  41b02d:	jg     0x41b08d
  41b02f:	std    
  41b030:	sbb    DWORD PTR [edi-0x68ea76ef],0xffffffb8
  41b037:	add    BYTE PTR ds:[eax-0x48],ah
  41b03b:	pop    es
  41b03c:	mov    DWORD PTR [esi+0x4b55896d],esi
  41b042:	pop    esi
  41b043:	loop   0x41afd0
  41b045:	inc    esi
  41b046:	rol    al,0xcc
  41b049:	pop    ss
  41b04a:	push   ecx
  41b04b:	int3   
  41b04c:	int3   
  41b04d:	xchg   esi,eax
  41b04e:	mov    ch,ah
  41b050:	mov    ebx,DWORD PTR [esi+0x5f45390d]
  41b056:	rol    BYTE PTR [ebx+ecx*4],cl
  41b059:	sahf   
  41b05a:	or     eax,0x20805e9
  41b05f:	mov    DWORD PTR [ebp+0x67],eax
  41b062:	rol    al,0xcc
  41b065:	pop    ds
  41b066:	push   ecx
  41b067:	int3   
  41b068:	int3   
  41b069:	pop    ss
  41b06a:	push   ecx
  41b06b:	int3   
  41b06c:	int3   
  41b06d:	xchg   esi,eax
  41b06e:	mov    ch,ah
  41b070:	add    DWORD PTR [edi],0x31
  41b073:	lds    eax,FWORD PTR [ebp-0x11]
  41b076:	add    al,0x70
  41b078:	add    DWORD PTR [ebx-0x76],esp
  41b07b:	inc    ebx
  41b07c:	or     BYTE PTR [eax],al
	...
  41b08a:	add    BYTE PTR [eax],al
  41b08c:	jmp    0x893d:0x268bd7c7
  41b093:	push   ebp
  41b094:	pop    ebx
  41b095:	add    cl,BYTE PTR [edi+0x3c]
  41b098:	fidiv  DWORD PTR [edi+0x65268bdf]
  41b09e:	or     eax,0x88f92bb7
  41b0a3:	push   ebp
  41b0a4:	ret    
  41b0a5:	pop    DWORD PTR [edx+ecx*1+0x4b]
  41b0a9:	mov    WORD PTR [ebx-0x18],es
  41b0ac:	or     edi,ecx
  41b0ae:	add    BYTE PTR [eax+0x63],al
  41b0b1:	mov    cl,BYTE PTR [ebx]
  41b0b3:	cld    
  41b0b4:	ss (bad) 
  41b0b6:	call   DWORD PTR [eax+0x7b]
  41b0b9:	int    0xf8
  41b0bb:	(bad)  
  41b0bc:	jl     0x41b03f
  41b0be:	les    ecx,FWORD PTR [eax]
  41b0c0:	jmp    0xffed:0x236aefc7
  41b0c7:	das    
  41b0c8:	arpl   WORD PTR ds:0x6d30068,ax
  41b0ce:	add    BYTE PTR [edx+0x63],ch
  41b0d1:	pop    esp
  41b0d2:	push   ebx
  41b0d3:	lock fcmovb st,st(2)
  41b0d6:	jecxz  0x41b063
  41b0d8:	scas   al,BYTE PTR es:[edi]
  41b0d9:	mov    DWORD PTR gs:[edx-0x69],eax
  41b0dd:	mov    ch,0x88
  41b0df:	dec    ebp
  41b0e0:	imul   esi,DWORD PTR [esi-0x47b8aa78],0xffffffe7
  41b0e7:	shl    DWORD PTR [esi],0x5d
  41b0ea:	std    
  41b0eb:	and    DWORD PTR [edi],0xa
  41b0ee:	lds    eax,FWORD PTR [ebp+0x0]
	...
  41b0fd:	add    BYTE PTR [eax],al
  41b0ff:	clts   
  41b101:	add    BYTE PTR [eax],al
  41b103:	arpl   WORD PTR [eax+0x7],si
  41b106:	mov    ebx,DWORD PTR [esi+0x62c08151]
  41b10c:	mov    es,WORD PTR [ebx-0xc]
  41b10f:	call   0xb45190de
  41b114:	mov    dh,0x5
  41b116:	cmp    DWORD PTR [esi-0x17a68eaf],ecx
  41b11c:	ret    0x83e7
  41b11f:	pop    ebx
  41b120:	icebp  
  41b121:	push   DWORD PTR [ebx+0x26]
  41b124:	nop
  41b125:	dec    ebx
  41b126:	call   0x51900b
  41b12b:	aaa    
  41b12c:	sbb    DWORD PTR [ecx+0x4290cb55],ecx
  41b132:	adc    al,bl
  41b134:	retf   0x8bdf
  41b137:	adc    bl,BYTE PTR [ecx]
  41b139:	mov    eax,DWORD PTR [ebx+esi*2+0x5c]
  41b13d:	mov    DWORD PTR [ebp-0x7d],ecx
  41b140:	sbb    dl,dl
  41b142:	not    DWORD PTR [edx]
  41b144:	sbb    DWORD PTR [ecx-0x52f37cab],ecx
  41b14a:	inc    edx
  41b14b:	aas    
  41b14c:	mov    ch,0x88
  41b14e:	inc    ebp
  41b14f:	mov    edx,DWORD PTR [eax-0x329ff7b5]
  41b155:	adc    edx,DWORD PTR [ecx-0x28]
  41b158:	mov    dl,0xe7
  41b15a:	mov    esp,DWORD PTR [esi+0x67420161]
  41b160:	mov    ch,0xe7
  41b162:	push   ebp
	...
  41b16f:	add    BYTE PTR [eax],al
  41b171:	add    BYTE PTR [esi+0x5c],cl
  41b174:	std    
  41b175:	sbb    DWORD PTR [edi],0x9
  41b178:	mov    DWORD PTR [ebp+0x4b],ecx
  41b17b:	mov    BYTE PTR [edi-0x183615d8],bh
  41b181:	jmp    0x41b154
  41b183:	(bad)  
  41b184:	push   ebx
  41b185:	in     al,0x91
  41b187:	ins    DWORD PTR es:[edi],dx
  41b188:	push   cs
  41b189:	cld    
  41b18a:	sbb    al,0x5c
  41b18c:	add    esp,0x323ed5f
  41b192:	mov    ds:0xaefc9f05,eax
  41b197:	(bad)  
  41b198:	dec    DWORD PTR [edi+0xb]
  41b19b:	nop
  41b19c:	cli    
  41b19d:	push   esp
  41b19f:	xchg   esp,eax
  41b1a1:	or     dl,bl
  41b1a3:	rcr    ebx,0x83
  41b1a6:	es pop ebp
  41b1a8:	push   ebx
  41b1a9:	inc    ecx
  41b1aa:	arpl   WORD PTR ds:0x9e80a73,ax
  41b1b0:	lock push ebp
  41b1b2:	and    al,BYTE PTR ds:0x392eff4f
  41b1b8:	cmp    DWORD PTR ds:0x3eb1bb,0x6a1bd263
  41b1c2:	and    ebp,ebp
  41b1c4:	jmp    FWORD PTR [edi]
  41b1c6:	arpl   WORD PTR ds:0xb69f5589,ax
  41b1cc:	mov    BYTE PTR [ebp-0x7d],al
  41b1cf:	(bad)
  41b1d3:	pop    esp
  41b1d4:	push   ebx
  41b1d5:	lock add BYTE PTR [eax],al
	...
  41b1e4:	add    al,al
  41b1e6:	xor    BYTE PTR [ebx+0x41],dl
  41b1e9:	arpl   WORD PTR [eax+0x13],si
  41b1ec:	push   0x23
  41b1ee:	in     eax,dx
  41b1ef:	jmp    FWORD PTR [edi]
  41b1f1:	arpl   WORD PTR ds:0xb6675589,ax
  41b1f7:	imul   eax,DWORD PTR [eax],0xa3efb15c
  41b1fd:	das    
  41b1fe:	mov    cl,0x3e
  41b200:	add    al,ah
  41b202:	sbb    ah,dl
  41b204:	push   ebp
  41b205:	mov    ds:0x56750005,al
  41b20a:	out    dx,eax
  41b20b:	aas    
  41b20c:	push   0x1563
  41b211:	fadd   st,st(0)
  41b213:	sti    
  41b214:	push   eax
  41b215:	mov    ecx,0x1355fd05
  41b21a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b21b:	aam    0x55
  41b21d:	mov    ds:0x74d8905,al
  41b222:	lea    ecx,[ebx-0x28]
  41b225:	fdiv   DWORD PTR [eax+0x3da68bd7]
  41b22b:	add    DWORD PTR [edx+0x37],eax
  41b22e:	mov    WORD PTR [ebx-0x20],es
  41b231:	fmul   st,st(0)
  41b233:	sti    
  41b234:	push   ecx
  41b235:	fdiv   DWORD PTR [eax+0x320252e3]
  41b23b:	push   ebx
  41b23c:	inc    ecx
  41b23d:	arpl   WORD PTR [ebp+0x5acf95e7],si
  41b243:	std    
  41b244:	sbb    DWORD PTR [edi+0x4d8909],0x0
	...
  41b257:	add    bl,al
  41b259:	xchg   BYTE PTR [edi+0x563a4],dh
  41b25f:	add    BYTE PTR [edi],dh
  41b261:	pop    ds
  41b262:	mov    DWORD PTR [ebp-0x3d],edx
  41b265:	mov    es,WORD PTR [ebx-0x28]
  41b268:	pusha  
  41b269:	xchg   DWORD PTR [eax-0x78fa9d00],esp
  41b26f:	inc    ebp
  41b270:	jg     0x41b200
  41b272:	dec    ebx
  41b273:	loopne 0x41b24d
  41b275:	lock rcl DWORD PTR [ebp+0x22],cl
  41b279:	add    eax,0x8c2f5129
  41b27e:	adc    eax,DWORD PTR [edx*1+0x5fa0ffc4]
  41b285:	mov    bl,0x3e
  41b287:	add    BYTE PTR [ebx-0x512bf472],dh
  41b28d:	(bad)  
  41b28e:	call   DWORD PTR [eax-0x28]
  41b291:	scas   eax,DWORD PTR es:[edi]
  41b292:	jmp    0x41b2e6
  41b294:	cmp    ebx,edx
  41b296:	stc    
  41b297:	(bad)  
  41b298:	cmp    al,0x86
  41b29a:	les    ecx,FWORD PTR [eax+ebp*8]
  41b29d:	mov    edi,0x315e8bdf
  41b2a2:	push   ebx
  41b2a3:	inc    ecx
  41b2a4:	arpl   WORD PTR [esi],ax
  41b2a6:	dec    eax
  41b2a7:	sub    dl,ch
  41b2a9:	pop    es
  41b2aa:	adc    al,0x56
  41b2ac:	mov    ds:0xb3d8105,al
  41b2b1:	mov    al,0x3e
  41b2b3:	add    BYTE PTR [ebx-0x30],ah
  41b2b6:	sub    cl,BYTE PTR [ebx+0x41533156]
	...
  41b2c8:	add    BYTE PTR [eax],al
  41b2ca:	add    BYTE PTR [ebx-0x49],ah
  41b2cd:	sahf   
  41b2ce:	adc    al,0x95
  41b2d0:	(bad)  
  41b2d1:	dec    DWORD PTR [edi-0x28]
  41b2d4:	pop    es
  41b2d5:	lock push ebp
  41b2d7:	and    al,BYTE PTR ds:0x595be84f
  41b2dd:	std    
  41b2de:	jmp    eax
  41b2e0:	inc    eax
  41b2e1:	or     al,0x8b
  41b2e3:	outs   dx,BYTE PTR ds:[esi]
  41b2e4:	xor    DWORD PTR [ebx+0x41],edx
  41b2e7:	arpl   WORD PTR [edi+0x59ba49e7],si
  41b2ed:	std    
  41b2ee:	and    DWORD PTR [edi+0x3b61e900],0x11
  41b2f5:	add    DWORD PTR [eax+0x63],eax
  41b2f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2f9:	cld    
  41b2fa:	push   ebp
  41b2fb:	and    al,BYTE PTR ds:0x5c37e850
  41b301:	std    
  41b302:	jmp    eax
  41b304:	inc    eax
  41b305:	or     BYTE PTR [ecx+0xd893126],cl
  41b30b:	(bad)  
  41b30c:	scas   eax,DWORD PTR es:[edi]
  41b30d:	add    BYTE PTR ds:[edx],dl
  41b310:	mov    ss,WORD PTR [ebx-0x20]
  41b313:	ret    0x5330
  41b316:	inc    ecx
  41b317:	arpl   WORD PTR [edx+eax*2],ax
  41b31a:	sub    BYTE PTR [ebx-0x490ff474],dh
  41b320:	(bad)  
  41b321:	call   DWORD PTR [eax+0x3b]
  41b324:	sub    esp,edi
  41b326:	(bad)  
  41b327:	cmp    al,0x85
  41b329:	les    ecx,FWORD PTR [eax+ebp*8]
  41b32c:	repnz out dx,eax
  41b32e:	push   ebp
	...
  41b33b:	add    BYTE PTR [eax],al
  41b33d:	add    BYTE PTR [edx-0x6c3d80fb],ah
  41b343:	mov    ah,0xfe
  41b345:	(bad)  
  41b346:	jmp    0x8b05:0xa2561bf2
  41b34d:	inc    ebp
  41b34e:	or     esi,DWORD PTR [esi-0x86bf97]
  41b354:	mov    BYTE PTR ds:0x3eaf5f,cl
  41b35a:	xchg   edx,eax
  41b35b:	pop    eax
  41b35c:	push   ebx
  41b35d:	aam    0xfb
  41b35f:	fs stc 
  41b361:	jmp    esp
  41b363:	popf   
  41b364:	(bad)  
  41b365:	jmp    DWORD PTR [ebx+0x5]
  41b368:	mov    ebp,esp
  41b36a:	ss inc ebx
  41b36c:	add    al,0x0
  41b36e:	lahf   
  41b36f:	dec    ecx
  41b370:	int3   
  41b371:	int3   
  41b372:	xchg   edi,eax
  41b373:	dec    ecx
  41b374:	int3   
  41b375:	int3   
  41b376:	push   ss
  41b377:	mov    esp,gs
  41b379:	mov    ebx,DWORD PTR [esi]
  41b37b:	or     eax,0xbaaf4089
  41b380:	ror    ah,0x97
  41b383:	dec    ecx
  41b384:	int3   
  41b385:	int3   
  41b386:	ss mov esp,gs
  41b389:	push   ebx
  41b38a:	sub    eax,0x833d88b0
  41b38f:	mov    dl,0x3e
  41b391:	add    al,bl
  41b393:	cli    
  41b394:	jmp    0x41b3eb
  41b396:	and    al,BYTE PTR ds:0xb29b3589
  41b39c:	add    BYTE PTR ds:[edi+esi*4],cl
  41b3a0:	pop    eax
  41b3a1:	pop    ebp
	...
  41b3ae:	add    BYTE PTR [eax],al
  41b3b0:	add    BYTE PTR [eax-0x493333b7],ah
  41b3b6:	mov    esp,gs
  41b3b8:	push   ecx
  41b3b9:	retf   
  41b3ba:	rol    DWORD PTR [eax],0x40
  41b3bd:	arpl   WORD PTR [esi+0x5a255fc],sp
  41b3c3:	push   eax
  41b3c4:	call   0x3f10d8
  41b3c9:	loopne 0x41b40b
  41b3cb:	or     BYTE PTR [ecx+0x4d8959a6],cl
  41b3d1:	pop    ebx
  41b3d2:	mov    dh,0x69
  41b3d4:	add    al,ch
  41b3d6:	icebp  
  41b3d7:	pop    ss
  41b3d8:	push   esi
  41b3d9:	mov    ds:0xb6ff5205,al
  41b3de:	pop    ecx
  41b3df:	mov    ebp,esp
  41b3e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3e2:	inc    esp
  41b3e3:	int3   
  41b3e4:	int3   
  41b3e5:	xchg   esi,eax
  41b3e6:	mov    esp,gs
  41b3e8:	add    DWORD PTR [edi],0x21
  41b3eb:	lds    eax,FWORD PTR [ebp-0x15]
  41b3ee:	add    al,0x0
  41b3f0:	add    BYTE PTR [ebx+0x40],ah
  41b3f3:	inc    ebx
  41b3f4:	fcomp  QWORD PTR [ebx+0x5]
  41b3f7:	add    BYTE PTR [eax],al
  41b3f9:	pushf  
  41b3fa:	shl    ebx,0x1
  41b3fd:	arpl   WORD PTR ds:0x591ec700,ax
  41b403:	add    BYTE PTR [eax],al
  41b405:	arpl   WORD PTR ds:0x4bf45c5,ax
  41b40b:	add    BYTE PTR [eax],al
  41b40d:	arpl   WORD PTR [ebx+ecx*2-0xff625f8],cx
  41b414:	push   ebp
	...
  41b421:	add    BYTE PTR [eax],al
  41b423:	add    BYTE PTR [edx],ah
  41b425:	add    eax,0x578ca9e8
  41b42a:	std    
  41b42b:	mov    eax,ds:0x3eb193
  41b430:	ds pop eax
  41b432:	std    
  41b433:	add    BYTE PTR [ebx-0x2f],ah
  41b436:	or     eax,edi
  41b438:	pop    esi
  41b439:	pop    ebp
  41b43a:	push   ebx
  41b43b:	inc    ecx
  41b43c:	arpl   WORD PTR ds:0x6c630000,ax
  41b442:	or     al,bh
  41b444:	pop    bp
  41b446:	push   ebx
  41b447:	inc    ecx
  41b448:	arpl   WORD PTR [eax+eax*1],ax
  41b44b:	add    BYTE PTR [ebx-0x7e],ah
  41b44e:	cmp    esi,eax
  41b450:	scas   al,BYTE PTR es:[edi]
  41b451:	(bad)  
  41b452:	(bad)  
  41b453:	push   DWORD PTR [esi+0x3b05c50b]
  41b459:	mov    cl,0x3e
  41b45b:	add    BYTE PTR [ebx+0x5],ah
  41b45e:	add    BYTE PTR [eax],al
  41b460:	loopne 0x41b47a
  41b462:	clc    
  41b463:	push   ebp
  41b464:	mov    ds:0x66750005,al
  41b469:	jmp    0x41b46a
  41b46b:	(bad)  
  41b46c:	jbe    0x41b4b3
  41b46e:	push   ebx
  41b46f:	inc    ecx
  41b470:	arpl   WORD PTR [edx+0x5a255f0],sp
  41b476:	mov    DWORD PTR ds:0x3eb0f3,ecx
  41b47c:	fcmove st,st(0)
  41b47e:	out    0x8b,eax
  41b480:	dec    esi
  41b481:	push   ebp
  41b482:	push   ebx
  41b483:	inc    ecx
  41b484:	arpl   WORD PTR [edx+0xe843],cx
	...
  41b496:	add    BYTE PTR [eax-0x3d],ah
  41b499:	cmp    ecx,DWORD PTR [ecx+0x4d896d26]
  41b49f:	mov    ebx,0x16dc0b8c
  41b4a4:	(bad)  
  41b4a5:	jmp    DWORD PTR [edi+0x13]
  41b4a8:	add    al,BYTE PTR [eax+0x0]
  41b4ab:	lods   al,BYTE PTR ds:[esi]
  41b4ac:	lock mov edi,0xa1052255
  41b4b2:	cld    
  41b4b3:	ss (bad) 
  41b4b5:	inc    esi
  41b4b7:	pop    esi
  41b4b8:	or     DWORD PTR [esi+0x41],edx
  41b4bb:	arpl   ax,dx
  41b4bd:	add    BYTE PTR [eax+0x63],al
  41b4c0:	in     eax,dx
  41b4c1:	pop    edi
  41b4c2:	add    esp,DWORD PTR [ebx]
  41b4c4:	add    eax,0xb0771589
  41b4c9:	add    BYTE PTR ds:[ecx],dl
  41b4cc:	ins    DWORD PTR es:[edi],dx
  41b4cd:	ret    0x64f7
  41b4d0:	push   esi
  41b4d1:	add    esp,0x5608a26b
  41b4d7:	mov    ds:0x5b15fd05,al
  41b4dc:	scas   eax,DWORD PTR es:[edi]
  41b4dd:	add    BYTE PTR ds:[eax],al
  41b4e0:	std    
  41b4e1:	push   ebp
  41b4e2:	inc    ecx
  41b4e3:	arpl   WORD PTR [esp+ecx*1+0x5005a256],sp
  41b4ea:	call   0x3f0be6
  41b4ef:	loopne 0x41b531
  41b4f1:	add    al,0x89
  41b4f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4f4:	push   ebp
  41b4f5:	mov    DWORD PTR [ebp+0x13],ecx
  41b4f8:	mov    ah,0xe7
  41b4fa:	aad    0x0
	...
  41b508:	add    BYTE PTR [eax],al
  41b50a:	or     eax,0x1f83fd56
  41b50f:	add    DWORD PTR [ecx-0x3b690c],esp
  41b515:	mov    cl,BYTE PTR [esi+0x636a5255]
  41b51b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b51c:	hlt    
  41b51d:	push   ebp
  41b51e:	mov    ds:0xffe85005,al
  41b523:	dec    ebp
  41b524:	std    
  41b525:	jmp    eax
  41b527:	inc    eax
  41b528:	or     al,0x8b
  41b52a:	push   ds
  41b52b:	push   ebp
  41b52c:	xchg   DWORD PTR [ebp-0x3d],ecx
  41b52f:	mov    DWORD PTR [ebx-0x4],edx
  41b532:	js     0x41b4e4
  41b534:	out    dx,eax
  41b535:	jae    0x41b550
  41b537:	mov    al,BYTE PTR [ebx-0x20]
  41b53a:	adc    ecx,DWORD PTR [edx+0x6d12dc4b]
  41b540:	scas   al,BYTE PTR es:[edi]
  41b541:	sti    
  41b542:	pushf  
  41b543:	push   ebp
  41b544:	add    esp,0x5600a26b
  41b54a:	and    al,BYTE PTR ds:0xaf631589
  41b550:	add    BYTE PTR ds:[ecx],dl
  41b553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b554:	or     al,0x56
  41b556:	and    al,BYTE PTR ds:0xb4874501
  41b55c:	mov    BYTE PTR ds:0x3eaf6f,cl
  41b562:	pusha  
  41b563:	ret    0x51fb
  41b566:	dec    ebx
  41b567:	cmp    eax,0x894cfff7
  41b56c:	les    ecx,FWORD PTR [eax+eax*1]
	...
  41b57b:	add    BYTE PTR [eax],al
  41b57d:	fdivr  DWORD PTR [edx+0x319603f3]
  41b583:	add    DWORD PTR [ebp+0x3f],edx
  41b586:	jg     0x41b5db
  41b588:	in     al,0xd8
  41b58a:	retf   0x3fb
  41b58d:	sahf   
  41b58e:	xor    DWORD PTR [edi+0x4b811f45],eax
  41b594:	loopne 0x41b5de
  41b596:	add    al,BYTE PTR [eax]
  41b598:	push   esi
  41b599:	mov    ds:0x34d8705,al
  41b59e:	popa   
  41b59f:	sahf   
  41b5a0:	(bad)  
  41b5a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5a2:	dec    ebp
  41b5a3:	add    BYTE PTR [eax],al
  41b5a5:	arpl   WORD PTR ds:0xbad809e9,ax
  41b5ab:	test   DWORD PTR [ebx+0x55870a21],0xf84380db
  41b5b5:	cwde   
  41b5b6:	retf   0x73ef
  41b5b9:	mov    eax,DWORD PTR [eax-0x39d10bf5]
  41b5bf:	inc    DWORD PTR [edx]
  41b5c1:	cs dec ebp
  41b5c3:	mov    DWORD PTR [ecx],edx
  41b5c5:	pusha  
  41b5c6:	mov    edx,0xbab7a1f7
  41b5cb:	add    BYTE PTR ds:[eax-0x36],ah
  41b5cf:	test   DWORD PTR [ecx-0x7b47f8d],0x3e746e2
  41b5d9:	arpl   WORD PTR ds:0xba8f1589,ax
  41b5df:	add    BYTE PTR ds:[eax],al
	...
  41b5ee:	add    BYTE PTR [eax],al
  41b5f0:	pusha  
  41b5f1:	mov    edx,0xa66933f7
  41b5f6:	hlt    
  41b5f7:	push   ebp
  41b5f8:	and    al,BYTE PTR ds:0x7e6b4501
  41b5fe:	or     bl,ch
  41b600:	adc    al,0x7e
  41b602:	sub    esp,esp
  41b604:	scas   al,BYTE PTR es:[edi]
  41b605:	(bad)  
  41b606:	dec    DWORD PTR [eax+0x4153658e]
  41b60c:	arpl   WORD PTR [eax],bx
  41b60e:	(bad)  
  41b60f:	mov    DWORD PTR [esi+0x2d],esi
  41b612:	push   ebx
  41b613:	inc    ecx
  41b614:	arpl   WORD PTR [eax],bx
  41b616:	(bad)  
  41b617:	mov    DWORD PTR [esi+0x61],ecx
  41b61a:	push   ebx
  41b61b:	inc    ecx
  41b61c:	arpl   WORD PTR [ebp+0x4e],bx
  41b61f:	neg    DWORD PTR [esp+edx*2]
  41b622:	mov    ecx,DWORD PTR ds:0x3eba84
  41b628:	fcmovb st,st(1)
  41b62a:	idiv   DWORD PTR [ecx+0x400763]
  41b630:	loop   0x41b68f
  41b632:	add    BYTE PTR [edx],al
  41b634:	arpl   WORD PTR ds:0x1feb5589,ax
  41b63a:	iret   
  41b63b:	mov    DWORD PTR [esi+0x5d],ecx
  41b63e:	push   ebx
  41b63f:	inc    ecx
  41b640:	arpl   WORD PTR [esi+0x52255e8],sp
  41b646:	push   eax
  41b647:	call   0x3f05b3
  41b64c:	loopne 0x41b696
  41b64e:	add    al,0x8b
  41b650:	outs   dx,BYTE PTR ds:[esi]
  41b651:	pop    ecx
  41b652:	push   ebx
  41b653:	inc    ecx
	...
  41b660:	add    BYTE PTR [eax],al
  41b662:	add    BYTE PTR [ebx-0x4a],ah
  41b665:	out    0xd5,eax
  41b667:	test   eax,0xa385fd53
  41b66c:	fld    DWORD PTR [ebx]
  41b66e:	xor    esp,DWORD PTR [ebx+0x3e8b2a5f]
  41b674:	imul   edx,DWORD PTR [ebx+0x41],0x4c48863
  41b67b:	loopne 0x41b68e
  41b67d:	clc    
  41b67e:	push   ebp
  41b67f:	and    al,BYTE PTR ds:0xa66a7400
  41b685:	aam    0x55
  41b687:	and    al,BYTE PTR ds:0x93f4487
  41b68d:	call   0xfd9514ef
  41b692:	mov    ebp,DWORD PTR [esi-0x7]
  41b695:	push   ebp
  41b696:	inc    ecx
  41b697:	arpl   WORD PTR [edi+0x7f2333c0],si
  41b69d:	jecxz  0x41b6fc
  41b69f:	and    BYTE PTR [edx-0x34],al
  41b6a2:	int3   
  41b6a3:	arpl   WORD PTR ds:0x5630000,ax
  41b6a9:	add    BYTE PTR [eax],al
  41b6ab:	arpl   WORD PTR ds:0x5630000,ax
  41b6b1:	add    BYTE PTR [eax],al
  41b6b3:	arpl   WORD PTR ds:0x5630000,ax
  41b6b9:	add    BYTE PTR [eax],al
  41b6bb:	arpl   WORD PTR ds:0x5630000,ax
  41b6c1:	add    BYTE PTR [eax],al
  41b6c3:	arpl   WORD PTR ds:0x0,ax
	...
  41b6d5:	add    BYTE PTR [ebx+0x5],ah
  41b6d8:	add    BYTE PTR [eax],al
  41b6da:	arpl   WORD PTR ds:0x5630000,ax
  41b6e0:	add    BYTE PTR [eax],al
  41b6e2:	arpl   WORD PTR ds:0x5630000,ax
  41b6e8:	add    BYTE PTR [eax],al
  41b6ea:	arpl   WORD PTR ds:0x5630000,ax
  41b6f0:	add    BYTE PTR [eax],al
  41b6f2:	arpl   WORD PTR ds:0x5630000,ax
  41b6f8:	add    BYTE PTR [eax],al
  41b6fa:	arpl   WORD PTR ds:0x5630000,ax
  41b700:	add    BYTE PTR [eax],al
  41b702:	arpl   WORD PTR ds:0x5630000,ax
  41b708:	add    BYTE PTR [eax],al
  41b70a:	arpl   WORD PTR ds:0x5630000,ax
  41b710:	add    BYTE PTR [eax],al
  41b712:	arpl   WORD PTR ds:0x5630000,ax
  41b718:	add    BYTE PTR [eax],al
  41b71a:	arpl   WORD PTR ds:0x5630000,ax
  41b720:	add    BYTE PTR [eax],al
  41b722:	arpl   WORD PTR ds:0x5630000,ax
  41b728:	add    BYTE PTR [eax],al
  41b72a:	arpl   WORD PTR ds:0x5630000,ax
  41b730:	add    BYTE PTR [eax],al
  41b732:	arpl   WORD PTR ds:0x5630000,ax
	...
  41b748:	add    BYTE PTR [ebx+0x5],ah
  41b74b:	add    BYTE PTR [eax],al
  41b74d:	arpl   WORD PTR ds:0x5630000,ax
  41b753:	add    BYTE PTR [eax],al
  41b755:	arpl   WORD PTR ds:0x5630000,ax
  41b75b:	add    BYTE PTR [eax],al
  41b75d:	arpl   WORD PTR ds:0x5630000,ax
  41b763:	add    BYTE PTR [eax],al
  41b765:	arpl   WORD PTR ds:0x5630000,ax
  41b76b:	add    BYTE PTR [eax],al
  41b76d:	arpl   WORD PTR ds:0x5630000,ax
  41b773:	add    BYTE PTR [eax],al
  41b775:	arpl   WORD PTR ds:0x5630000,ax
  41b77b:	add    BYTE PTR [eax],al
  41b77d:	arpl   WORD PTR ds:0x5630000,ax
  41b783:	add    BYTE PTR [eax],al
  41b785:	arpl   WORD PTR ds:0x5630000,ax
  41b78b:	add    BYTE PTR [eax],al
  41b78d:	arpl   WORD PTR ds:0x5630000,ax
  41b793:	add    BYTE PTR [eax],al
  41b795:	arpl   WORD PTR ds:0x5630000,ax
  41b79b:	add    BYTE PTR [eax],al
  41b79d:	arpl   WORD PTR ds:0x5630000,ax
  41b7a3:	add    BYTE PTR [eax],al
  41b7a5:	arpl   WORD PTR ds:0x5630000,ax
	...
  41b7bb:	add    BYTE PTR [ebx+0x5],ah
  41b7be:	add    BYTE PTR [eax],al
  41b7c0:	arpl   WORD PTR ds:0x5630000,ax
  41b7c6:	add    BYTE PTR [eax],al
  41b7c8:	arpl   WORD PTR ds:0x5630000,ax
  41b7ce:	add    BYTE PTR [eax],al
  41b7d0:	arpl   WORD PTR ds:0x5630000,ax
  41b7d6:	add    BYTE PTR [eax],al
  41b7d8:	arpl   WORD PTR ds:0x5630000,ax
  41b7de:	add    BYTE PTR [eax],al
  41b7e0:	arpl   WORD PTR ds:0x5630000,ax
  41b7e6:	add    BYTE PTR [eax],al
  41b7e8:	arpl   WORD PTR ds:0x5630000,ax
  41b7ee:	add    BYTE PTR [eax],al
  41b7f0:	arpl   WORD PTR ds:0x5630000,ax
  41b7f6:	add    BYTE PTR [eax],al
  41b7f8:	arpl   WORD PTR ds:0x5630000,ax
  41b7fe:	add    BYTE PTR [eax],al
  41b800:	arpl   WORD PTR ds:0x5630000,ax
  41b806:	add    BYTE PTR [eax],al
  41b808:	arpl   WORD PTR ds:0x5630000,ax
  41b80e:	add    BYTE PTR [eax],al
  41b810:	arpl   WORD PTR ds:0x5630000,ax
  41b816:	add    BYTE PTR [eax],al
  41b818:	arpl   WORD PTR ds:0x2000000,ax
  41b81e:	add    BYTE PTR [eax],al
  41b820:	arpl   WORD PTR ds:0x57b0000,ax
  41b826:	add    BYTE PTR [eax],al
  41b828:	fbstp  TBYTE PTR [edi]
  41b82a:	nop
  41b82b:	xor    ch,bh
  41b82d:	aaa    
  41b82e:	cwde   
  41b82f:	xor    bl,bh
  41b831:	aaa    
  41b832:	mov    al,ds:0xa837bf32
  41b837:	xor    ah,BYTE PTR [ebx+0x45]
  41b83a:	add    DWORD PTR [eax],eax
  41b83c:	adc    eax,DWORD PTR ds:0x3f400000
  41b842:	dec    ebx
  41b843:	cmp    esi,DWORD PTR [ebx-0x53c4a5c2]
  41b849:	ds push 0x933eb53b
  41b84f:	cmp    ebx,ebp
  41b851:	cmp    eax,0x3e1f3ba8
  41b856:	in     eax,dx
  41b857:	cmp    ebx,DWORD PTR [eax+0x39]
  41b85a:	adc    DWORD PTR [edx+ecx*2],edi
  41b85d:	cmp    DWORD PTR [ebp-0x78c838c4],ebx
  41b863:	ds out 0x3a,al
  41b866:	xchg   ebp,eax
  41b867:	ds daa 
  41b869:	cmp    ecx,ebp
  41b86b:	ds cld 
  41b86d:	cmp    bh,BYTE PTR [esi+0x3f]
  41b870:	loopne 0x41b8ab
  41b872:	fwait
  41b873:	aas    
  41b874:	retf   0xaf39
  41b877:	aas    
  41b878:	lods   al,BYTE PTR ds:[esi]
  41b879:	cmp    esp,ecx
  41b87b:	aas    
  41b87c:	adc    DWORD PTR [edx],edi
  41b87e:	out    0x3f,al
  41b880:	sar    BYTE PTR [ecx],cl
  41b882:	stc    
  41b883:	aas    
	...
  41b890:	add    BYTE PTR [eax],al
  41b892:	add    ah,dl
  41b894:	cmp    DWORD PTR [eax],eax
  41b896:	add    BYTE PTR [ebx+0x55],ah
  41b899:	add    DWORD PTR [eax],eax
  41b89b:	syscall 
  41b89d:	add    BYTE PTR [eax],al
  41b89f:	xor    ax,0x3018
  41b8a3:	loop   0x41b8d9
  41b8a5:	xchg   DWORD PTR [eax],esi
  41b8a7:	and    eax,0x6314b34
  41b8ac:	xor    al,0x66
  41b8ae:	xor    DWORD PTR [ebx],edx
  41b8b0:	xor    al,0x8d
  41b8b2:	xor    DWORD PTR [edi-0x5ece55cd],edi
  41b8b8:	xor    esp,ecx
  41b8ba:	xor    DWORD PTR [ebp+0x37],edx
  41b8bd:	pop    ss
  41b8be:	xor    bl,BYTE PTR [edi+0x37]
  41b8c1:	and    esi,DWORD PTR [edx]
  41b8c3:	cmp    dh,BYTE PTR [edi]
  41b8c5:	inc    edx
  41b8c6:	xor    bl,BYTE PTR [ebx]
  41b8c8:	aaa    
  41b8c9:	push   ecx
  41b8ca:	xor    cl,BYTE PTR [edi+esi*1]
  41b8cd:	pop    esi
  41b8ce:	xor    cl,dh
  41b8d0:	xor    edi,DWORD PTR [ebp+0x32]
  41b8d3:	loope  0x41b908
  41b8d5:	xchg   esp,eax
  41b8d6:	xor    ch,dh
  41b8d8:	xor    esp,DWORD PTR [edi-0x3dcbf2ce]
  41b8de:	xor    dl,BYTE PTR [ebx]
  41b8e0:	xor    al,0x8
  41b8e2:	xor    esp,DWORD PTR [ebp+0x34]
  41b8e5:	adc    al,0x33
  41b8e7:	xchg   BYTE PTR [edx+ebp*1],dh
  41b8ea:	xor    esp,DWORD PTR [ecx-0x14cc81cc]
  41b8f0:	xor    al,0x95
  41b8f2:	xor    eax,edx
  41b8f4:	xor    al,0xab
  41b8f6:	xor    eax,DWORD PTR [eax]
	...
  41b904:	add    BYTE PTR [eax],al
  41b906:	xlat   BYTE PTR ds:[ebx]
  41b907:	xor    al,0xbe
  41b909:	xor    ebx,DWORD PTR [edx]
  41b90b:	xor    eax,0x351733ce
  41b910:	fnsave [ebx]
  41b912:	add    al,0x35
  41b914:	hlt    
  41b915:	xor    ebp,ecx
  41b917:	xor    al,0xff
  41b919:	xor    ebx,DWORD PTR [esi+0x31]
  41b91c:	or     DWORD PTR [ebp*2-0x7ecbebcf],esi
  41b923:	xor    DWORD PTR [eax],ebp
  41b925:	xor    al,0x7e
  41b927:	xor    DWORD PTR [edx],esi
  41b929:	xor    al,0x14
  41b92b:	xor    DWORD PTR [edx+0x34],ebx
  41b92e:	in     eax,0x31
  41b930:	mov    WORD PTR [ecx+edx*8],?
  41b933:	xor    DWORD PTR [esp+esi*1+0x34eb31a5],ebx
  41b93a:	stos   DWORD PTR es:[edi],eax
  41b93b:	xor    DWORD PTR [esi*1+0x35233275],ecx
  41b942:	dec    edx
  41b943:	xor    dh,BYTE PTR [ecx]
  41b945:	xor    eax,0x3544324a
  41b94a:	pop    ss
  41b94b:	xor    bl,BYTE PTR [ebp+0x35]
  41b94e:	add    DWORD PTR [edx],esi
  41b950:	jno    0x41b987
  41b952:	fidiv  WORD PTR [edx]
  41b954:	mov    ?,WORD PTR ds:0x35a532d5
  41b95a:	arpl   WORD PTR ds:0x5630000,ax
  41b960:	add    BYTE PTR [eax],al
  41b962:	arpl   WORD PTR ds:0x5630000,ax
	...
  41b978:	add    BYTE PTR [ebx+0x5],ah
  41b97b:	add    BYTE PTR [eax],al
  41b97d:	arpl   WORD PTR ds:0x5630000,ax
  41b983:	add    BYTE PTR [eax],al
  41b985:	arpl   WORD PTR ds:0x5630000,ax
  41b98b:	add    BYTE PTR [eax],al
  41b98d:	arpl   WORD PTR ds:0x5630000,ax
  41b993:	add    BYTE PTR [eax],al
  41b995:	arpl   WORD PTR ds:0x5630000,ax
  41b99b:	add    BYTE PTR [eax],al
  41b99d:	arpl   WORD PTR ds:0x5630000,ax
  41b9a3:	add    BYTE PTR [eax],al
  41b9a5:	arpl   WORD PTR ds:0x5630000,ax
  41b9ab:	add    BYTE PTR [eax],al
  41b9ad:	arpl   WORD PTR ds:0x5630000,ax
  41b9b3:	add    BYTE PTR [eax],al
  41b9b5:	arpl   WORD PTR ds:0x5630000,ax
  41b9bb:	add    BYTE PTR [eax],al
  41b9bd:	arpl   WORD PTR ds:0x5630000,ax
  41b9c3:	add    BYTE PTR [eax],al
  41b9c5:	arpl   WORD PTR ds:0x5630000,ax
  41b9cb:	add    BYTE PTR [eax],al
  41b9cd:	arpl   WORD PTR ds:0x5630000,ax
  41b9d3:	add    BYTE PTR [eax],al
  41b9d5:	arpl   WORD PTR ds:0x5630000,ax
	...
  41b9eb:	add    BYTE PTR [ebx+0x5],ah
  41b9ee:	add    BYTE PTR [eax],al
  41b9f0:	arpl   WORD PTR ds:0x5630000,ax
  41b9f6:	add    BYTE PTR [eax],al
  41b9f8:	arpl   WORD PTR ds:0x5630000,ax
  41b9fe:	add    BYTE PTR [eax],al
  41ba00:	arpl   WORD PTR ds:0x5630000,ax
  41ba06:	add    BYTE PTR [eax],al
  41ba08:	arpl   WORD PTR ds:0x5630000,ax
  41ba0e:	add    BYTE PTR [eax],al
  41ba10:	arpl   WORD PTR ds:0x5630000,ax
  41ba16:	add    BYTE PTR [eax],al
  41ba18:	arpl   WORD PTR ds:0x5630000,ax
  41ba1e:	add    BYTE PTR [eax],al
  41ba20:	arpl   WORD PTR ds:0x5630000,ax
  41ba26:	add    BYTE PTR [eax],al
  41ba28:	arpl   WORD PTR ds:0x5630000,ax
  41ba2e:	add    BYTE PTR [eax],al
  41ba30:	arpl   WORD PTR ds:0x5630000,ax
  41ba36:	add    BYTE PTR [eax],al
  41ba38:	arpl   WORD PTR ds:0x5630000,ax
  41ba3e:	add    BYTE PTR [eax],al
  41ba40:	arpl   WORD PTR ds:0x5630000,ax
  41ba46:	add    BYTE PTR [eax],al
  41ba48:	arpl   WORD PTR ds:0x5630000,ax
	...
  41ba5e:	add    BYTE PTR [ebx+0x5],ah
  41ba61:	add    BYTE PTR [eax],al
  41ba63:	arpl   WORD PTR ds:0x5630000,ax
	...
